{
    "jbachorik": "[author=\"jbachorik\", created=\"Fri, 30 Jul 2010 14:40:38 +0200\"]\nFixed in http://kenai.com/projects/btrace/sources/hg/revision/346\nWill be backported to the 1.1 release.\n. [author=\"jbachorik\", created=\"Fri, 30 Jul 2010 17:26:19 +0200\"]\nFix backported to the 1.1.* branch. Available for download from the project's \"documents and files\" section\n. [author=\"jbachorik\", created=\"Tue, 18 May 2010 10:25:17 +0200\"]\nfixed in http://kenai.com/projects/btrace/sources/hg/revision/306\n. [author=\"j.bachorik\", created=\"Tue, 19 Oct 2010 15:49:27 +0200\"]\nfixed\nhttp://kenai.com/projects/btrace/sources/hg/revision/396\nhttp://kenai.com/projects/btrace/sources/nb-api/revision/15\n. [author=\"herrfluff\", created=\"Fri, 8 Jan 2010 10:43:43 +0100\"]\nQuick thought, shouldn't BTrace \"detach\" itself from the Java process when BTrace terminates in order to close port 2020?\n. [author=\"jbachorik\", created=\"Fri, 8 Jan 2010 11:19:34 +0100\"]\nThe BTrace client now correctly recognizes a port being used by a BTrace server and reuses it instead of refusing to start.\nFixed in http://kenai.com/projects/btrace/sources/hg/revision/272\nPatched the release-1.1 binaries.\n. [author=\"herrfluff\", created=\"Fri, 8 Jan 2010 11:39:21 +0100\"]\nWorks perfectly!\n. [author=\"jbachorik\", created=\"Thu, 17 Dec 2009 14:25:45 +0100\"]\nfixed in http://kenai.com/projects/btrace/sources/hg/revision/245\n. [author=\"jbachorik\", created=\"Mon, 2 Nov 2009 10:00:01 +0100\"]\nThis is caused by the asynchronous handling of a new client introduced to fix http://kenai.com/jira/browse/BTRACE-12\nIt will be necessary to roll-back the patch and fix the original deadlock some other way. Attaching the patch for proposed changes which will turn off class level annotation processing of the loaded classes for FlashLight clients only.\n. [author=\"jbachorik\", created=\"Mon, 2 Nov 2009 10:01:33 +0100\"]\nRollback the fix for http://kenai.com/jira/browse/BTRACE-12 and introduce a new fix based on omitting class level annotation processing for the loaded classes in cases when FlashLight client is used.\n. [author=\"jbachorik\", created=\"Wed, 25 Nov 2009 10:38:23 +0100\"]\nresolved in http://kenai.com/projects/btrace/sources/hg/revision/231\n. [author=\"m_hess\", created=\"Fri, 2 Oct 2009 17:07:41 +0200\"]\nSorry about the mess with the curly braces. Somehow the formatting did not work as expected.\n. [author=\"jbachorik\", created=\"Sat, 10 Oct 2009 18:19:11 +0200\"]\nThe whole problem is in the fact that the expression\n@TLS   = \nwill get transformed into something like\n = \nThreadLocal variable = new ThreadLocal() {\n  protected Object initialValue() \n{\n    return \n  }\n}\nas Michael pointed out and this transformation is completely wrong. This implementation works correctly for immutable objects only.\nA correct solution would be to generate the following construct instead:\nThreadLocal variable = new ThreadLocal() {\n  protected Object initialValue() \n{\n    return ;\n  }\n}\nUnfortunately, all those transformations are done on an already compiled BTrace probe and extracting the field initializer from the bytecode is almost impossible using the ASM Core APIs only. In order to be able to generate the required code we would need either to use the ASM Tree API for advanced transformations or to pre-process the source code to wrap the initializer expression properly.\nEither way, the proper fix would mean significant changes in the BTrace core and as such it will require careful architecting.\nA bit \"hackish\" fix would be to force the objects used as @TLS into being \"Cloneable\" and rewrite the BTraceRuntime method to clone the initValue if possible. I will attach webrev for this patch shortly.\n. [author=\"jbachorik\", created=\"Sat, 10 Oct 2009 18:20:07 +0200\"]\nWebrev for the proposed patch\n. [author=\"m_hess\", created=\"Mon, 12 Oct 2009 09:32:58 +0200\"]\nThanks for taking care of this. Unfortunately I don't know how the process can commence.\nIs there some action I need to take, like making a review of your patch?\nIf so, could you point me in the right direction of needed formalities? I don't konw much about webrev.\n. [author=\"jbachorik\", created=\"Mon, 12 Oct 2009 09:46:15 +0200\"]\nThe webrev is there more for Sundar (who originally wrote the whole BTrace core) to verify that I am not breaking anything.\nAs for webrev - you can finde index.html inside the archive which you can open in your web browser and browse the patch in a user friendly way. Also, the webrev contains the \"btrace.patch\" file which you can \"hg import\" into your btrace working directory, rebuild and test.\n. [author=\"m_hess\", created=\"Tue, 13 Oct 2009 14:11:41 +0200\"]\nI imported the patch into my local repository. It looks good so far, the testcase I created runs smoothly now.\n\"Hackish\" - indeed, but it gets the job done for now. Thanks Jaroslav!\nI suggest that you enhance the TLS JavaDoc to tell that the instance that is initially declared and created gets cloned and is never used itself. This might avoid some confusion on the users side, if for whatever reasons values/state get lost during the clone() operation. \nI could imagine a situation were someone initializes an instance with some value and annotates it  with TLS. If the clone() operation (which BTrace has no influence upon) does not clone the aforementioned  value, then this might cause some headaches.\nMaybe far fetched / too theoretical, but maybe still worth mentioning.\n. [author=\"jbachorik\", created=\"Mon, 19 Oct 2009 14:56:23 +0200\"]\nPatch delivered in http://kenai.com/projects/btrace/sources/hg/revision/214\n. [author=\"jbachorik\", created=\"Mon, 19 Oct 2009 15:15:11 +0200\"]\nupdated user guide\n. [author=\"jbachorik\", created=\"Wed, 6 Jan 2010 15:54:41 +0100\"]\nPlease, verify and close this issue\n. [author=\"m_hess\", created=\"Fri, 8 Jan 2010 16:22:05 +0100\"]\nI would love to close this, but all operations available to me (see screenshot) do not offer any fitting operation. \nJaroslav, can you have my permissions adjusted?\n. [author=\"j.bachorik\", created=\"Fri, 4 Jul 2014 18:14:41 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/468\n. [author=\"j.bachorik\", created=\"Mon, 28 Jul 2014 19:56:38 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/480\n. [author=\"j.bachorik\", created=\"Tue, 2 Jul 2013 16:25:41 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/444\n. [author=\"pilfrich\", created=\"Mon, 8 Aug 2011 14:38:50 +0200\"]\nInvestigation update\nI've just re-checked the behavior without @TLS - simply by invoking a probe action for each thread. In this scenario the threads are stored in the ThreadEnteredMap too. For every probe fired the current thread is added to the ThreadEnteredMap and kept there until the application exits.\n. [author=\"j.bachorik\", created=\"Mon, 8 Aug 2011 15:10:38 +0200\"]\nIndeed, all the application threads are kept as hard references. Changing this to weak references should prevent this kind of leak.\nhttp://kenai.com/projects/btrace/sources/hg/revision/425\n. [author=\"pilfrich\", created=\"Wed, 10 Aug 2011 01:38:12 +0200\"]\nRe-checked with revision 425. I still got a lot more garbage collection than without BTrace, but in an expected manner.\nTested with 120k threads over 4 hours with ~2m probes firing over each 15secs interval and the use of ThreadLocals. Memory leak fix confirmed.\nThanks again for the quick fix \n. [author=\"jbachorik\", created=\"Mon, 30 Aug 2010 11:24:33 +0200\"]\nFixed - http://kenai.com/projects/btrace/sources/hg/revision/391\n. [author=\"jbachorik\", created=\"Wed, 25 Aug 2010 16:37:15 +0200\"]\nhttp://kenai.com/projects/btrace/sources/hg/revision/368\n. [author=\"j.bachorik\", created=\"Sat, 12 Jul 2014 18:41:26 +0200\"]\nAttached a working prototype of sampling support.\nIn order to turn on duration sampling one needs to provide samplingInterval parameter to the @Duration annotation.\n\n..., @Duration(samplingInterval = 10) long duration, ...\n\n. [author=\"j.bachorik\", created=\"Mon, 21 Jul 2014 17:48:47 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/477\n. [author=\"j.bachorik\", created=\"Wed, 9 May 2012 14:09:00 +0200\"]\nFixed the CALL location instrumentor to handle AnyType args correctly.\nhttp://kenai.com/projects/btrace/sources/hg/revision/437\n. [author=\"j.bachorik\", created=\"Fri, 27 Dec 2013 17:35:00 +0100\"]\nChange looks fine. But I think that the case here is that instead of \"classes.jar\" the standard \"tools.jar\" is to be used.\n. [author=\"j.bachorik\", created=\"Fri, 27 Dec 2013 17:36:12 +0100\"]\nFixed by Joachim - https://kenai.com/projects/btrace/sources/hg/revision/460\n. [author=\"j.bachorik\", created=\"Thu, 24 Oct 2013 16:17:21 +0200\"]\nCould you take a heap dump when this occurs? And upload it somewhere if it is not a sensitive application.\nThanks.\n. [author=\"joachimhskeie\", created=\"Tue, 3 Dec 2013 10:04:04 +0100\"]\nOn closer inspection, this seems to be a Tomcat issue \n. [author=\"j.bachorik\", created=\"Mon, 8 Jul 2013 13:31:49 +0200\"]\nIt seems that it is sufficient to set the -source and -target options for the trace script compiler to 1.6\nThis way the resulting class files will be readable by any JVM of version 1.6 or newer.\n. [author=\"j.bachorik\", created=\"Fri, 13 Sep 2013 08:28:01 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/451\n. [author=\"jim.bim\", created=\"Thu, 4 Jul 2013 01:23:26 +0200\"]\noops, sorry about that - I got an connection reset error when submitting the first issue and thought that it was not created.\n. [author=\"j.bachorik\", created=\"Mon, 8 Jul 2013 13:35:51 +0200\"]\nThis is caused by the BTrace build infra. It does not explicitly specify the target class file version and so it happened that the agent classes were compiled to verion 51.0 which is unreadable by any JVM older than 1.7\n. [author=\"j.bachorik\", created=\"Fri, 13 Sep 2013 08:27:09 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/451\n. [author=\"j.bachorik\", created=\"Wed, 9 May 2012 14:10:10 +0200\"]\nAttempting to prevent the NPE by preloading annotation processing classes beforehand\nhttp://kenai.com/projects/btrace/sources/hg/revision/438\nAs long as I can not reliably reproduce the issue, feel free to reopen if it still persists.\n. [author=\"j.bachorik\", created=\"Sun, 1 Apr 2012 21:28:21 +0200\"]\nThere is a problem with computing the number of stack frames to skip when generating the jstack() output. Please, for the time being use BTraceUtils.jstack() which should yield the correct results.\n. [author=\"j.bachorik\", created=\"Tue, 2 Jul 2013 16:26:24 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/445\n. [author=\"j.bachorik\", created=\"Sun, 1 Apr 2012 21:14:02 +0200\"]\nimplemented in #d31d25ebd48b\n. [author=\"j.bachorik\", created=\"Fri, 11 May 2012 18:44:43 +0200\"]\nProbably could be achieved but it wouldn't work 100%. You would need the class data with debugging symbols in order to match the stack pointer to a local variable name.\nDefinitely not for 1.2.* \n. [author=\"grnch\", created=\"Fri, 14 Mar 2014 14:06:02 +0100\"]\nAre there still any plans to implement this?\nPlease consider doing this, it would be an absolutely killer feature. \nIt would essentially complete the cycle and turn BTrace into a full fledged \"programmable read-only debugger\" for production instances. It would be indispensable for those weird bugs that you cannot reproduce on test servers, and if you just knew the value of that one local variable on the production server it would give you a clue what the problem is.\nIt would be fine if this feature only works with classes that have debug symbols, the probe can just fail if the class does not have debug info.\n. [author=\"grnch\", created=\"Fri, 14 Mar 2014 14:07:02 +0100\"]\nOr as a fall back you could maybe provide all local variables in an AnyType[] array, similar to how method parameters are provided? After all, method parameters and local variables sit in the same array on the JVM stack frame.\nThat way even without the names of local variables you could at least guess which slot in the array corresponds to which local var, with a little experimentation.\nBut this is less important, even a simpler implementation that just fails when there is no debug info would be great.\n. [author=\"j.bachorik\", created=\"Tue, 11 Oct 2011 21:16:04 +0200\"]\nDid you try it with the unmodified sample script? When I try run the Profiling.java sample everything works as expected.\nAlso, it is rather suspicious an innerclass is visited - there are no inner classes in the sample and if an erroneous bytecode should be caused by a syntax error the standard java compiler, which btrace does use, would encounter the problem and throw an exception.\nCan you attach the sample source you are using?\nThanks.\n. [author=\"mjakl\", created=\"Wed, 12 Oct 2011 10:26:20 +0200\"]\nHi, I've attached the Samplecode (it should be the unmodified version of the Profiling example).\nOn my machine this still leads to this:\nmjakl@T510:BTrace % bin/btrace 2514 Profiling.java\ncom.sun.btrace.VerifierException: nested and inner classes are not allowed\n    at com.sun.btrace.runtime.Verifier.reportError(Verifier.java:390)\n    at com.sun.btrace.runtime.Verifier.reportError(Verifier.java:381)\n    at com.sun.btrace.runtime.Verifier.visitInnerClass(Verifier.java:155)\n    at com.sun.btrace.org.objectweb.asm.ClassReader.accept(Unknown Source)\n    at com.sun.btrace.org.objectweb.asm.ClassReader.accept(Unknown Source)\n    at com.sun.btrace.runtime.InstrumentUtils.accept(InstrumentUtils.java:66)\n    at com.sun.btrace.runtime.InstrumentUtils.accept(InstrumentUtils.java:62)\n    at com.sun.btrace.agent.Client.verify(Client.java:391)\n    at com.sun.btrace.agent.Client.loadClass(Client.java:218)\n    at com.sun.btrace.agent.RemoteClient.(RemoteClient.java:59)\n    at com.sun.btrace.agent.Main.startServer(Main.java:379)\n    at com.sun.btrace.agent.Main.access$000(Main.java:65)\n    at com.sun.btrace.agent.Main$3.run(Main.java:166)\n    at java.lang.Thread.run(Thread.java:662)\nThere is in fact a hidden inner class. It's only used, not embedded in the sample script itself. In line 21 we use BTraceUtils.Profiling.newProfiler(), Profiling is the inner class of BTraceUtils.\nHTH,\nMichael\n. [author=\"j.bachorik\", created=\"Tue, 18 Oct 2011 12:24:30 +0200\"]\nfixed\nhttp://kenai.com/projects/btrace/sources/hg/revision/434\n. [author=\"j.bachorik\", created=\"Sat, 18 Jun 2011 13:43:52 +0200\"]\nfixed in http://kenai.com/projects/btrace/sources/hg/revision/416\n. [author=\"j.bachorik\", created=\"Sat, 18 Jun 2011 13:49:25 +0200\"]\nfix available in the update dev binaries (http://kenai.com/projects/btrace/downloads/directory/releases/dev)\n. [author=\"joachimhskeie\", created=\"Sat, 29 Jan 2011 22:02:47 +0100\"]\nIssue resolved. \n. [author=\"j.bachorik\", created=\"Thu, 16 Jun 2011 13:47:41 +0200\"]\nchanging target milestone\n. [author=\"j.bachorik\", created=\"Sat, 18 Jun 2011 13:50:05 +0200\"]\nfix available also in the updated dev binaries (http://kenai.com/projects/btrace/downloads/directory/releases/dev)\n. [author=\"joachimhskeie\", created=\"Sat, 19 Mar 2011 23:12:41 +0100\"]\nAttaching half the story. The plugin architecture is in place, and BTrace is able to call a plugin's \"process()\" method based on the plugin name. Whats missing here is a way for BTrace to inject a callback into the plugin, so that the plugin can actually do something useful. \nI'm not quite sure on the best approach here: \n1. Implementing services for different types of callbacks (one for settings/info, one for executing methods from BTraceUtils, etc). ?\n2. Give the plugin a reference to BTraceUtils (or another central class) ?\n3. Create an interface in btrace-api that exposes a selected amount of methods from BTraceUtils, which can then be injected into the plugins ?\n4. Other options/ideas ? \n. [author=\"joachimhskeie\", created=\"Mon, 21 Mar 2011 22:32:05 +0100\"]\nAs BTraceUtils is a collection of static methods, neither an interface not an abstract class can be used to represent a puplic api to BTraceUtils, so I'm not entirely sure how its possible to expose methods from BTraceUtils without actually exposisg the whole class. \nAny ideas here ? \n. [author=\"joachimhskeie\", created=\"Wed, 23 Mar 2011 21:38:15 +0100\"]\nAttaching the second half of the story. I have created an abstract class in btrace-api called BTraceService. This class is implemented in btrace-core in a class called BTraceServiceImpl (lack of a better name). In addition, I added a setter-method to the plugin, allowing the BTrace pluginmanager to inject a the dependency to BtraceServiceImpl. \nThe main reason for making BTraceService an abstract class (instead of an interface) is to have more control over backwards-compatibility. If the base class is an abstract class, then a plugin will work, even though it is compiled against an earlier version of BTrace (as long as method signatures havent changed, and methods have only been added). \nAs a first go, I enabled BTraceService to call both print and println from BTraceUtil. As the plugin I am writing needs access to the agent argument map, I also added a means to store and get hold of this from BTraceRuntime. \nIn my opinion, having this type of pluginability to BTrace might really enhance what third parties are able to do with BTrace. \nCreating a new Plugin could be as simple as: \n\n\npackage org.eurekaj.proxy;\nimport com.sun.btrace.api.BTraceService;\nimport com.sun.btrace.spi.BTraceProcessProvider;\nimport org.eurekaj.proxy.parser.ParseStatistics;\nimport org.eurekaj.webservice.StoreIncomingStatisticsElement;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n/**\n * Created by IntelliJ IDEA.\n * User: jhs\n * Date: 3/18/11\n * Time: 3:22 PM\n * To change this template use File | Settings | File Templates.\n */\npublic class RemoteJsonPlugin implements BTraceProcessProvider {\n    private BTraceService bTraceService;\n    @Override\n    public String getPluginName() {\nreturn \"RemoteJsonPlugin\";\n    }\n    @Override\n    public void process() {\nif (bTraceService != null && bTraceService.getAgentArgument(\"scriptdir\") != null) {\n    bTraceService.println(\"Printing from Plugin: \" + getPluginName());\n    List scriptOutputfileList = FileMatcher.getScriptOutputFilesInDirectory(bTraceService.getAgentArgument(\"scriptdir\"));\n    for (File scriptOutputFile : scriptOutputfileList) {\ntry {\n    List statElemList = ParseStatistics.parseBtraceFile(scriptOutputFile);\n    bTraceService.println(\"File: \" + scriptOutputFile.getAbsolutePath() + \" has \" + statElemList.size() + \" statistics.\");\n    scriptOutputFile.delete();\n} catch (IOException e) {\n    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n}\n    }\n}\n    }\n    @Override\n    public void setBtraceService(BTraceService bTraceService) {\nthis.bTraceService = bTraceService;\n    }\n}\n\n\nThis plugin is executed by the following BTrace script: \n\n\n@OnTimer(15000)\n    public static void printMem() {\n        Plugins.executePluginWithName(\"RemoteJsonPlugin\");\n    }\n\n\n. [author=\"joachimhskeie\", created=\"Wed, 23 Mar 2011 21:48:53 +0100\"]\nUpdating the architecture drawing of the plugin-architecture\n. [author=\"j.bachorik\", created=\"Wed, 23 Mar 2011 23:05:39 +0100\"]\nSee my comment in the forum\n. ## Update\nAs I wrote in my blog the extensive changes I did for the proposed BTrace 2 to bring in modularity didn't seem to be warmly received.\nTherefore I came up with a simpler proposal to introduce the way to extend the core BTrace functionality via plugins which would give up on pretending that the extensions would be safe and rely only on the good manners of the extension authors and common sense of the extension users.\nArchitecture\nThe basic unit becomes a service. A service can be referenced from the script and performs specific operations extending the basic BTrace capabilities.\nImplementing a service\nIn order to create a new service one would extend one of these two classes\n- com.sun.btrace.services.spi.SimpleService - for simple stateless servicess (or singletons)\n- com.sun.btrace.services.spi.RuntimeService - for runtime aware services\nUsing a service\nFirst, the all the jars containing services one wants to use must be defined as an extension to the boot classpath.\nServices can be accessed by:\n- annotating a field by @Injected annotation\n  /class level/\n  @Injected private static MySimpleService s1;\n  @Injected(ServiceType.RUNTIME) private static MyRuntimeService s2;\n  @Injected(factoryMethod = \"singleton\") private static MySimpleService s3;\n/method level/\n  s1.doSomething();\n  s2.doSomethingElse();\n  s3.doSomething();\n- instantiating a local variable by using one of the Service.(simple|runtime) factory methods\n  /method level/\n  MySimpleService s1 = Service.simple(MySimpleService.class);\n  MyRuntimeService s2 = Service.runtime(MyRuntimeService.class);\n  MySimpleService s2 = Service.simple(\"singleton\", MySimpleService.class);\n. [author=\"j.bachorik\", created=\"Tue, 15 Mar 2011 13:40:35 +0100\"]\nFor the subtype matching to work correctly it is necessary to process a class only after all its superclasses and interfaces has been loaded.\nIn order to achieve this the class initializers of all newly loaded classes will be modified (or created if they don't exist) such that the class retransform on the current class will be triggered the moment the class initializer is executed. This will ensure the whole class hierarchy is loaded and the subtype matching will work correctly.\n. [author=\"j.bachorik\", created=\"Tue, 15 Mar 2011 13:43:52 +0100\"]\nFix delivered in http://kenai.com/projects/btrace/sources/core-maven/revision/12\n. [author=\"joachimhskeie\", created=\"Tue, 15 Mar 2011 18:33:46 +0100\"]\nHello, \nI keep getting the following error: \n\n\nxception in thread \"main\" java.lang.VerifyError: (class: org/apache/derby/jdbc/EmbeddedDriver, method:  signature: ()V) Illegal type in constant pool\n    at java.lang.Class.forName0(Native Method)\n    at java.lang.Class.forName(Class.java:169)\n    at org.eurekaj.demo.derby.DerbyEnvironment.initializeDatabase(DerbyEnvironment.java:35)\n    at org.eurekaj.demo.app.Main.startExecuting(Main.java:61)\n    at org.eurekaj.demo.app.Main.(Main.java:37)\n    at org.eurekaj.demo.app.Main.main(Main.java:107)\n\n\nThe method being executed is contains the following: \n\n\npublic void initializeDatabase() {\ntry {\n    Class.forName(\"org.apache.derby.jdbc.EmbeddedDriver\").newInstance();\n    connection = DriverManager.getConnection(derbyProtocol + \"EurekaJDemoDB;create=true\", new Properties());\n    createDatabaseIfNotCreated();\n} catch (InstantiationException e) {\n    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n} catch (IllegalAccessException e) {\n    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n} catch (ClassNotFoundException e) {\n    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n} catch (SQLException e) {\n    e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.\n}\n    }\n\n\nThe full source for the code being executed is here: https://github.com/joachimhs/EurekaJDemoApplication\nIt is being started with the following JAVA_OPTS from within IDEA: -Xmx256m -Dbtrace.agent=EurekaJDemoAgent -javaagent:/srv/btrace/1.3/btrace-agent-1.3-SNAPSHOT-agent.jar=scriptdir=/srv/btrace/1.3/scripts,stdout=false,fileRollMilliseconds=7500\nThe BTrace script being executed: https://github.com/joachimhs/EurekaJDemoApplication/blob/master/src/main/resources/JdbcQueries.java\n. [author=\"j.bachorik\", created=\"Wed, 16 Mar 2011 15:11:35 +0100\"]\nThis error was caused by loading a type operand on stack in the injected  routine. Unfortunately, this requires the class version >= 49.\nFix available in http://kenai.com/projects/btrace/sources/core-maven/revision/13\n. [author=\"joachimhskeie\", created=\"Thu, 17 Mar 2011 22:56:19 +0100\"]\nTrying out revision 13 above, I get a different stack trace than before, although similar: \n\n\njava.sql.SQLException: Cannot create an instance of generated class org.apache.derby.exe.ac582f8014x012exc5cfx1c12x0000046737000.\n    at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\n    at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)\n    at org.apache.derby.impl.jdbc.Util.seeNextException(Unknown Source)\n    at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\n    at org.apache.derby.impl.jdbc.TransactionResourceImpl.handleException(Unknown Source)\n    at org.apache.derby.impl.jdbc.EmbedConnection.handleException(Unknown Source)\n    at org.apache.derby.impl.jdbc.ConnectionChild.handleException(Unknown Source)\n    at org.apache.derby.impl.jdbc.EmbedPreparedStatement.(Unknown Source)\n    at org.apache.derby.impl.jdbc.EmbedPreparedStatement20.(Unknown Source)\n    at org.apache.derby.impl.jdbc.EmbedPreparedStatement30.(Unknown Source)\n    at org.apache.derby.impl.jdbc.EmbedPreparedStatement40.(Unknown Source)\n    at org.apache.derby.jdbc.Driver40.newEmbedPreparedStatement(Unknown Source)\n    at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)\n    at org.apache.derby.impl.jdbc.EmbedConnection.prepareStatement(Unknown Source)\n    at org.eurekaj.demo.task.NumStatisticsTask.readRowCountFromStatisticsTable(NumStatisticsTask.java:31)\n    at org.eurekaj.demo.task.NumStatisticsTask.run(NumStatisticsTask.java:45)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n    at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)\n    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n    at java.lang.Thread.run(Thread.java:680)\nCaused by: java.sql.SQLException: Cannot create an instance of generated class org.apache.derby.exe.ac582f8014x012exc5cfx1c12x0000046737000.\n    at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\n    at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\n    ... 25 more\nCaused by: java.sql.SQLException: Java exception: '(class: org/apache/derby/exe/ac582f8014x012exc5cfx1c12x0000046737000, method:  signature: ()V) Illegal type in constant pool: java.lang.VerifyError'.\n    at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)\n    at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)\n    at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)\n    at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)\n    at org.apache.derby.impl.jdbc.Util.javaException(Unknown Source)\n    at org.apache.derby.impl.jdbc.TransactionResourceImpl.wrapInSQLException(Unknown Source)\n    ... 22 more\nCaused by: java.lang.VerifyError: (class: org/apache/derby/exe/ac582f8014x012exc5cfx1c12x0000046737000, method:  signature: ()V) Illegal type in constant pool\n    at java.lang.Class.getDeclaredConstructors0(Native Method)\n    at java.lang.Class.privateGetDeclaredConstructors(Class.java:2389)\n    at java.lang.Class.getConstructor0(Class.java:2699)\n    at java.lang.Class.getConstructor(Class.java:1657)\n    at org.apache.derby.iapi.services.loader.ClassInfo.getNewInstance(Unknown Source)\n    at org.apache.derby.impl.services.reflect.LoadedGeneratedClass.newInstance(Unknown Source)\n    at org.apache.derby.impl.services.reflect.ReflectGeneratedClass.newInstance(Unknown Source)\n    at org.apache.derby.impl.sql.GenericActivationHolder.(Unknown Source)\n    at org.apache.derby.impl.sql.GenericPreparedStatement.getActivation(Unknown Source)\n    ... 18 more\n\n\n. [author=\"j.bachorik\", created=\"Fri, 18 Mar 2011 08:59:19 +0100\"]\nRather counterintuitively, the major class version is encoded in the lower word of the version integer number. Thanks to this the plain comparison version < Opcodes.V1_5 doesn't work if a minor version is specified. It is necessary to extract the major version first and use that for the comparison.\nI've checked with your demo application and after this change it works fine.\nImplemented in - http://kenai.com/projects/btrace/sources/core-maven/revision/14.\n. [author=\"joachimhskeie\", created=\"Fri, 18 Mar 2011 10:24:48 +0100\"]\nThis is now working great, thanks!\n. [author=\"j.bachorik\", created=\"Fri, 18 Mar 2011 10:55:01 +0100\"]\nMarking as closed\n. [author=\"j.bachorik\", created=\"Sat, 18 Jun 2011 13:47:27 +0200\"]\nfix transplanted to the main (non-maven) repository - http://kenai.com/projects/btrace/sources/hg/revision/419\n. [author=\"j.bachorik\", created=\"Tue, 26 Jun 2012 13:42:55 +0200\"]\ntemporarily reopening; the issue target release has been changed to 1.2.2\n. [author=\"j.bachorik\", created=\"Sat, 18 Jun 2011 13:44:29 +0200\"]\nfixed in http://kenai.com/projects/btrace/sources/hg/revision/415\n. [author=\"j.bachorik\", created=\"Sat, 18 Jun 2011 13:49:39 +0200\"]\nfix available in the update dev binaries (http://kenai.com/projects/btrace/downloads/directory/releases/dev)\n. [author=\"j.bachorik\", created=\"Tue, 28 Jun 2011 16:56:41 +0200\"]\nThere was an error in sync instrumentor causing to rewrite any previous instrumentation by the one provided by the sync instrumentor.\nFixed in http://kenai.com/projects/btrace/sources/hg/revision/421\n. [author=\"pilfrich\", created=\"Thu, 7 Jul 2011 15:54:18 +0200\"]\nConfirmed for rev 421.\n. [author=\"jbachorik\", created=\"Fri, 20 Aug 2010 12:42:26 +0200\"]\nfixed - http://kenai.com/projects/btrace/sources/hg/revision/364\n. [author=\"jbachorik\", created=\"Thu, 12 Aug 2010 14:14:37 +0200\"]\nPatch applied. Thanks a lot!\nhttp://kenai.com/projects/btrace/sources/hg/revision/363\n. [author=\"joachimhskeie\", created=\"Wed, 4 Aug 2010 15:42:10 +0200\"]\nI am unable to make the BTrace compiler accept the varargs parameters like:\nprintAggregation(String stringFormat, Aggregation ... aggregationArray)\nI am able to make this work with a single Aggregation, but with multiple aggregations the BTrace Compiler states that only methods for BTraceUtils might be used. \nIs this a shortcoming of the BTrace Compiler class ?\n. [author=\"joachimhskeie\", created=\"Thu, 5 Aug 2010 22:37:44 +0200\"]\nI found the culprit in the VerifierVisitor class. I added a bit of code that makes the compiler compile the class when the method in BTraceUtils is a varargs method. However, this would need some type checking. \nActually, looking at the code, I would assume it safer if all parameter types were checked, and not just a check to see if the method invoked has the same amount of parameters  \n. [author=\"joachimhskeie\", created=\"Thu, 5 Aug 2010 23:37:34 +0200\"]\nI was unable to the the varargs method to work at all (the JVM translates the varargs arguments to an Array, which causes the Verifier to think that the BTrace Script is creating a new Array. \nI have instead opted to implement this functionality using the Collections that were available in BTraceUtils already. \nI think this is a better option than the CountingAverage approach as this makes it possible to combine any Aggregation, as long as it has the same AggregationKey. \nI am attaching  a diff new diff file which implements this functionality as well. \nI am using the Aggregation in a script as follows:\n\n\n    @OnTimer(7500)\n    public static void printAverage() {\n        Deque aggregationDeque = newDeque();\n        addLast(aggregationDeque, AVERAGE);\n        addLast(aggregationDeque, CALLS_PER_INTERVAL);\n\n        String execStringFormat = strcat(\"[AverageExecTime;\", property(\"btrace.agentname\"));\n        Aggregations.printAggregation(\"\", strcat(execStringFormat, \";%1$s;%2$s;%3$d;%4$s;%5$s;%6$s;Custom]\"), aggregationDeque);\n\n        truncateAggregation(AVERAGE, 0);\n        truncateAggregation(CALLS_PER_INTERVAL, 0);\n    }   \n\n\nI'll leave it up to you to decide which option you like best, but I quite like the last solution best. \n. [author=\"jbachorik\", created=\"Mon, 9 Aug 2010 11:01:15 +0200\"]\nThe enhanced version of printAggregation() method sounds good.\nGo ahead and push the changes. Please, make sure all the newly added public methods are properly documented and don't forget to add the @since tag (for version 1.2)\n. [author=\"jbachorik\", created=\"Fri, 13 Aug 2010 09:54:35 +0200\"]\nWill you be able to push the changes soon? If not I might apply the changes for you.\nI want to start preparations for 1.2 release and I need to have all issues targeted for 1.2 resolved.\n. [author=\"joachimhskeie\", created=\"Fri, 13 Aug 2010 10:30:45 +0200\"]\nI will push the changes over the weekend. \n. [author=\"joachimhskeie\", created=\"Mon, 23 Aug 2010 22:33:54 +0200\"]\nSorry for the late push! I have pushed the changes now. I chose not to push the CountingAverage Aggregation, as its probably redundant with the ability to combine aggregations into a single print. \n. [author=\"joachimhskeie\", created=\"Mon, 23 Aug 2010 22:34:27 +0200\"]\nChanging Fix Version to 1.2 as per comments from JB. \n. [author=\"joachimhskeie\", created=\"Fri, 16 Jul 2010 22:23:07 +0200\"]\nCommitted in revision 330. \n. [author=\"jbachorik\", created=\"Fri, 30 Jul 2010 09:10:04 +0200\"]\nhas been fixed by joachim\n. [author=\"jbachorik\", created=\"Fri, 30 Jul 2010 09:12:40 +0200\"]\nCould you provide the example usage?\n. [author=\"joachimhskeie\", created=\"Wed, 4 Aug 2010 15:40:12 +0200\"]\nI would like to use this variable for two things, initially. \nFirst I would like to be able to use the agentname to name the script output files (btraceScript.class.agentname.01, etc). That way I can keep all my BTrace Scripts in one folder on the server, and then use it to instrument multiple applications (I have a couple of Java applications running on the same server that I wish to instrument with the same scripts). \nThe second is for use within the script itself as property(\"btrace.agentname\").\n. [author=\"jbachorik\", created=\"Fri, 20 Aug 2010 15:38:18 +0200\"]\nOk, I've tried to implement the functionality. Please, check out the attached patch.\n. [author=\"joachimhskeie\", created=\"Mon, 23 Aug 2010 23:12:58 +0200\"]\nWell, this all depends on what you pass into BTrace as the scriptdir=. \nApplying the Patch, script outputfile are created like this on my Mac:\n\n\nEurekaJAgent//Users/jhs/btrace/scripts/CustomBtracer.class.btrace\n\n\nWhich isn't exactly what I was aiming for  \nAttaching a new diff file with some changes (needs to be applied after your patch), which created outputfiles as:\n\n\n/Users/jhs/btrace/scripts/CustomBtracer.class.EurekaJAgent.btrace\n\n\n. [author=\"jbachorik\", created=\"Wed, 25 Aug 2010 15:56:32 +0200\"]\nFixed with the adjustment proposed by joachim - http://kenai.com/projects/btrace/sources/hg/revision/379\n. Keeping track of the number of instances of the instrumented classes would be very tricky and pose a lot of overhead.\nWhat could be done is to get the class histo and filter it only for the instrumented classes list (maintained from the agent code)\n. [author=\"jbachorik\", created=\"Sun, 29 Aug 2010 10:49:13 +0200\"]\nYes, this is caused by a problem in the algorithm of resizing an internal profiler structure in order to minimize the number of more costly compaction runs. As it is now the profiler structure can grow infinitely (till causes OOME) - it should be limited to a certain size, possibly using a system property to override the default value.\n. [author=\"joachimhskeie\", created=\"Sun, 29 Aug 2010 11:02:38 +0200\"]\nHello, \nBut the Profiler object will get GarbageCollected eventually ? I am calling Profiling.reset() every 7500 ms, so the Object should be available for GC ?\n. [author=\"joachimhskeie\", created=\"Sun, 29 Aug 2010 18:23:18 +0200\"]\nI tried to increase -Xmx to 1 GB. It seems that the amout if com.sun.btrace.Profiler$Record classes quickly builds up to about 290000 instances, but that it doesn't exceed that amount. However, I am a bit curious about the number of byte-array object, which seems to be building up indefinately. \nI will try to run the application without the BTrace Agent to see if the application still builds up a large about of byte-array objects, which would put BTrace in the clear for this issue. \n. [author=\"jbachorik\", created=\"Sun, 29 Aug 2010 19:22:46 +0200\"]\nI've found the problem. The profiler data buffer was not deallocated upon calling the reset method. Only the data pointer was moved to the beginning but the data itself was left there to be overwritten (the buffer wouldn't grow for some time but it could lead to problems with memory anyway).\nFixing - http://kenai.com/projects/btrace/sources/hg/revision/389\n. [author=\"jbachorik\", created=\"Mon, 30 Aug 2010 11:27:02 +0200\"]\nfixed - http://kenai.com/projects/btrace/sources/hg/revision/391\n. [author=\"jbachorik\", created=\"Wed, 7 Jul 2010 15:16:24 +0200\"]\nThanks for reporting the problem and providing the patch. Will integrate it shortly.\nRegards,\nJB\n. [author=\"jbachorik\", created=\"Fri, 9 Jul 2010 16:16:46 +0200\"]\nFixed - http://kenai.com/projects/btrace/sources/hg/revision/316\nThanks for the patch!\n. [author=\"jbachorik\", created=\"Wed, 14 Jul 2010 20:17:35 +0200\"]\nThis is caused by the internal BTrace agent used by GFv3 in a non-server mode.\nDisable the GF monitoring by executing \n\n\n to be able to use BTrace.\nCredits go to Juliano Viana for the tip - http://weblogs.java.net/blog/jjviana/archive/2010/07/14/using-btrace-glassfish-v3\n. [author=\"jbachorik\", created=\"Wed, 27 Jan 2010 10:53:56 +0100\"]\nfixed in http://kenai.com/projects/btrace/sources/hg/revision/278\n. [author=\"joachimhskeie\", created=\"Wed, 27 Jan 2010 00:42:19 +0100\"]\nI have made some changes to BTraceUtils and BTraceRuntime to be able to get hold of this data for the BTrace Script. \nAttaching HG Diff file with the following changes:\n\nAdded GarbageCollectionMXBean to BTraceRuntime\nAdded methods to Utils and Runtime to return the total time in GC since application startup\nAdded a few methods to be able to work better with the Deque\n\nAttaching BTrace script file with the following functionality:\n\nCreation of a Deque\nEvery 15 seconds the time spent in GC is collected and pushed to the very end of the Deque\nOnce the size of the Deque reaches 60 (15 minutes), the first element is subtracted from the second element of the queue, divided with the time between the first and last element\nThe very first element is removed from the deque\n\nI havent debugged this extensively, and some exception handling might be needed when working with the deque, but overall I think this should work. \nI will leave it to you to decide if this should be part of a BTrace Script like proposed, or if more logic should be placed inside BTraceRuntime and BTraceUtils. \nThis originated from http://jira.haagen.name/browse/EUREKAJ-33\n. [author=\"jbachorik\", created=\"Fri, 19 Feb 2010 13:27:14 +0100\"]\nThe patch looks good. \nUnfortunately, as I've recently learned the hard way, I will need you to sign a SCA (http://www.sun.com/software/opensource/contributor_agreement.jsp) before being (legally) able to apply any of yours patches.\n. [author=\"joachimhskeie\", created=\"Fri, 19 Feb 2010 20:11:41 +0100\"]\nHello, \nDo you have an email address where I can email the signed SCA to ?\n. [author=\"jbachorik\", created=\"Wed, 24 Feb 2010 12:02:31 +0100\"]\nUnfortunately, due to pending acquisition there is no new SCA available yet and the old one has been rendered invalid (so it is not possible to accept any contribution till a new SCA and the related process is created) ((\n. [author=\"joachimhskeie\", created=\"Fri, 9 Apr 2010 07:21:05 +0200\"]\nHello, is there any advances regarding a new SCA now that the Oracle acquisition is final ?\n. [author=\"jbachorik\", created=\"Wed, 14 Apr 2010 11:48:05 +0200\"]\nWell, the situation is still misty, but it seems that the NetBeans ACA will be fine even for BTrace. Check out this site http://wiki.netbeans.org/FaqHowDoIFileACA  to fill out and process the request.\n. [author=\"joachimhskeie\", created=\"Fri, 16 Apr 2010 23:13:58 +0200\"]\nHello again, i have been added to the SCA contributers list: https://sca.dev.java.net/CA_signatories.htm\n. [author=\"jbachorik\", created=\"Fri, 23 Apr 2010 13:14:08 +0200\"]\nApplying joachims changes:\nhttp://kenai.com/projects/btrace/sources/hg/revision/292\nhttp://kenai.com/projects/btrace/sources/hg/revision/293\nI split the patch to to commits - one for GC MBean and one for advanced Deque functionality.\nI left out the \"dequeHasAtLeastElements(Deque deque, int expectedElements)\" method which can be replaced by calling \"if (size(deque) >= expectedElements)\"\n. [author=\"jbachorik\", created=\"Tue, 26 Jan 2010 16:54:02 +0100\"]\nProposed patch\n. [author=\"jbachorik\", created=\"Wed, 17 Feb 2010 13:41:03 +0100\"]\npatch delivered in http://kenai.com/projects/btrace/sources/hg/revision/281\n. [author=\"joachimhskeie\", created=\"Tue, 18 May 2010 20:26:54 +0200\"]\nAdding comments from Email, along with a diff file. \nI have made some changes to the BTrace core to make it possible to get information regarding the individual Memory Pools the JVM uses. I have implemented this feature using Object arrays and format string in a similar fashion to printAggregation.\nThe BTrace script would then do something like the following to print out a formatted string for each memory pool:\n String execStringFormat = strcat(\"[MemoryPool;\", property(\"btrace.agentname\"));\n    println(getMemoryPoolUsage(strcat(execStringFormat, \";%1$s;%2$d;%3$d;%4$d;%5$d;Memory]\")));\nI am attaching the diff file for BTrace (My Eclipse reorganized the imports in alphabetical order, feel free to remove this part of the patch if you dont want them sorted that way).\n. [author=\"jbachorik\", created=\"Fri, 9 Jul 2010 16:18:58 +0200\"]\nI've pushed your proposed changes since to save you from adapting to the changes in BTraceUtils which span rather big part of the file.\nFixed http://kenai.com/projects/btrace/sources/hg/revision/323\n. [author=\"jbachorik\", created=\"Tue, 18 May 2010 10:33:09 +0200\"]\nThe patch looks OK. Go ahead and integrate.\n. [author=\"jbachorik\", created=\"Mon, 17 May 2010 13:29:18 +0200\"]\nThe intended functionality sounds reasonable.\nAnyway, I have few comments for the patch:\n1. Consider renaming newStringBuffer() method to newStringBuilder(boolean threadSafe) - giving the API caller the option to create either StringBuilder(thread-unsafe) or StringBuffer (thread-safe)\n2. Consider dropping the specialized versions of the \"append\" method, keeping only the \"append(StringBuffer buffer, String strToAppend)\" version. The specialized versions can be replaced by calling \"append(buffer, str(nonString))\" - otherwise you would need to wrap pretty large portion of the \"append\" methods from the backing StringBuilder/Buffer\n. [author=\"joachimhskeie\", created=\"Tue, 18 May 2010 20:32:46 +0200\"]\nThe problem here then, is that both StringBuffer and StringBuilder extends java.lang.Object, and the BTrace Script needs to declare the type of the Builder/Buffer (to avoid having to work with Object). \nI guess its possible to do one of two things: \n#. Add both a newStringBuffer() and newStringBuilder() methods, and both append(StringBuffer, String) append(StringBuilder, String). \n#. Create a BtraceStringBuffer that will either keep one StringBuilder or one StringBuffer.\nI'd chose the first option, though, that makes the code slightly cleaner and lighter. \n. [author=\"joachimhskeie\", created=\"Thu, 17 Jun 2010 12:40:48 +0200\"]\nJaroslav: Are you able to comment on the two proposed solutions ?\n. [author=\"jbachorik\", created=\"Thu, 24 Jun 2010 08:03:02 +0200\"]\nnewStringBuilder()/newStringBuffer() approach seems to be the correct one \n. [author=\"joachimhskeie\", created=\"Tue, 29 Jun 2010 08:04:22 +0200\"]\nWould it then be OK to move this issue to the 1.2 release and commit the patch for the StringBuffer while at the same time opeing a new issue to implement the newStringBuilder() methods ?\n. [author=\"jbachorik\", created=\"Fri, 9 Jul 2010 16:21:38 +0200\"]\nI've adapted your proposed patch to use java.lang.Appendable instead of StringBuffer/StringBuilder, thus having only one set of methods for working with appendable buffers.\nFixed http://kenai.com/projects/btrace/sources/hg/revision/325\n. [author=\"joachimhskeie\", created=\"Sun, 11 Apr 2010 21:11:33 +0200\"]\nI implemented this feature by adding an agent parameter called \"fileRollMilliseconds\" that is used to roll the output file. The files are rolled and named with the same name as the argument \"scriptOutputFile\" with a .NUMBER suffix ranging from 1 to 100. After .100 the .1 file will be overwritten. \nMost of the changes are within the FileClient.java class.\nPlease let me know if something like this will be possible to add to the BTrace source, as it is one of the few integration options left for integration with EurekaJ (Which have now been approved by the Codehaus foundation). \nI am attching two diff files, one for Main.java and one for FileClient.java. \n. [author=\"jbachorik\", created=\"Fri, 23 Apr 2010 16:54:21 +0200\"]\nI've taken the liberty to modify the patch a bit. I didn't like the changes in FileClient part so I've introduced a kind of strategy class for trace output.\nAttaching the patch - if there would be no objections I will integrate early next week.\n. [author=\"jbachorik\", created=\"Fri, 23 Apr 2010 16:54:42 +0200\"]\nThe modified patch\n. [author=\"joachimhskeie\", created=\"Fri, 23 Apr 2010 23:58:53 +0200\"]\nAt first overview the patch looks good. I will try to have a closer look at the patch over the weekend. \n. [author=\"joachimhskeie\", created=\"Sat, 24 Apr 2010 00:20:34 +0200\"]\nTrying the patch out on the latest version from HG nothing seems to be printed out to the output files for some reason. using stdout=true prints everything out as expected. Setting stdout=false,fileRollMilliseconds=5000 will print out 3 messages to one .btrace file, but after that output is halted. \n. [author=\"joachimhskeie\", created=\"Sat, 24 Apr 2010 11:14:15 +0200\"]\nHello, \nI found two bugs in testing this out today. First, if there was multiple btrace.class files specified with scriptdir=/path/to/dir, only one file would be appended to. I fixed this by introducing a local variable in the Main class (otherwise the static variable scriptOutputDir would always be used for each BTrace.class file in scriptdir. \nAlso, when rolling the outputfiles there was a deadlock situation. I think the deadlock was caused by a writerLock.readLock().lock(); being obtained inside flush. inside nextWriter() a writeLock would be obtained. This caused the writeLock to Deadlock against the readLock. \nI am attaching a diff file that creates a diff between  btrace-rolling-out.patch and my changes in BTrace.\nAnother aproach would be to move the unlock and lock in flush to the nextWriter, but in my mind nextWriter shouldnt need to unlock any other locks made elsewhere in the system. \nI hope you find this patch useful, and perhaps applicable to Btrace 1.2 ?\n. [author=\"jbachorik\", created=\"Sat, 24 Apr 2010 19:34:37 +0200\"]\nHi Joachim,\nthanks for testing. Seems that I got burned by the inability of a ReentrantReadWriteLock to promote read lock to write lock when requested in a thread holding the read lock. Anyway, the only part that needs guarding by the readlock is the one invoking the flush operation on the current file writer. The rest of the method:\n\n if (needsRoll()) {\n  nextWriter();\n} \n\ncan be safely placed outside of the read lock.\nAs for introducing currentBtraceScriptOutput - sounds good and fixes the problem of all probes' output going to the same file if no script output file given. I'm making only small adjustment in the variable initialization so it defaults to the value of scriptOutputFile if provided:\n\n\nString currentBtraceScriptOutput = scriptOutputFile;\nif (currentBtraceScriptOutput == null || currentBtraceScriptOutput.length() == 0) {\n   currentBtraceScriptOutput = filename + \".btrace\";\n   if (isDebug()) debugPrint(\"scriptOutputFile not specified. defaulting to \" + currentBtraceScriptOutput);\n}\n\n\n. [author=\"jbachorik\", created=\"Sat, 24 Apr 2010 19:48:49 +0200\"]\nintegrated in http://kenai.com/projects/btrace/sources/hg/revision/296\n. [author=\"joachimhskeie\", created=\"Sat, 24 Apr 2010 22:52:00 +0200\"]\nOn closer look, I would still like one small change in the getNextWriter() method. \nAs it currently stands it will start output to a .btrace file. One it rolls it will stop that output and start to output to a .btrace.1 file. On next roll it will stop writing to that file and start writing to a .btrace.2 file, and so on. \nThe problem with this approach is that I have no way to tell if BTrace have finished writing to the btrace.X file, unless I do a full scan of the directory for a .btrace.X-1 file as well. \nI have made some small changes to the nextWriter method so that it works like this:\n\nPrinting is ALWAYS to the .btrace file\nOn roll the .btrace file is renamed to .btrace.X and a new .btrace file is created\n\nThis way I can easily scan the script directory for any *.btrace.X files, knowing that if I find any of those I can safely read its contents and delete the file. (I am parsing the output and passing the contents along to a remote application via WebServices - once done I have no more use for the physical file). \nUnable to attach a diff file as the issue is closed in JIRA, but its contents are:\n\n\ndiff -r f560dd382067 src/share/classes/com/sun/btrace/agent/TraceOutputWriter.java\n--- a/src/share/classes/com/sun/btrace/agent/TraceOutputWriter.java Sat Apr 24 22:48:09 2010 +0200\n+++ b/src/share/classes/com/sun/btrace/agent/TraceOutputWriter.java Sat Apr 24 22:48:54 2010 +0200\n@@ -91,13 +91,14 @@\n }\n\n @Override\n-final public void flush() throws IOException {\n-    try {\n+final public void flush() throws IOException {   \n+   try {\n writerLock.readLock().lock();\n currentFileWriter.flush();\n     } finally {\n writerLock.readLock().unlock();\n     }\n+    \n     if (needsRoll()) {\n nextWriter();\n     }\n@@ -125,14 +126,19 @@\n }\n\n private FileWriter getNextWriter() throws IOException {\n-    File f = new File(path + File.separator + baseName + \".\" + (counter++));\n-    if (f.exists()) {\n-f.delete();\n+   currentFileWriter.close();\n+   File scriptOutputFile_renameFrom = new File(path + File.separator + baseName);\n+   File scriptOutputFile_renameTo = new File(path + File.separator + baseName + \".\" + (counter++));\n+   \n+    if (scriptOutputFile_renameTo.exists()) {\n+       scriptOutputFile_renameTo.delete();\n     }\n+    scriptOutputFile_renameFrom.renameTo(scriptOutputFile_renameTo);\n+    scriptOutputFile_renameFrom = new File(path + File.separator + baseName);\n     if (counter > maxRolls) {\n counter = 1;\n     }\n-    return new FileWriter(f);\n+    return new FileWriter(scriptOutputFile_renameFrom);\n }\n\n abstract protected boolean needsRoll();\n\n\n. [author=\"jbachorik\", created=\"Sun, 25 Apr 2010 20:21:28 +0200\"]\nThe patch is ok. Go ahead and push it.\n. [author=\"jbachorik\", created=\"Sun, 25 Apr 2010 20:25:45 +0200\"]\nRegarding my last comment - Joachim, I've changed your membership to \"developer\" so you should be able to push your changes.\n. [author=\"joachimhskeie\", created=\"Sun, 25 Apr 2010 22:12:56 +0200\"]\nPushing changes to Revision 298 .\n. [author=\"joachimhskeie\", created=\"Mon, 21 Dec 2009 22:51:40 +0100\"]\nI've drawn a diagram depicting the architecture described above: http://confluence.haagen.name/display/eurekaj/Overall+Arcitecture#OverallArcitecture-ArchitectureusingBTraceAgent%28plannedtoreplaceEurekaJAgent%29\n. [author=\"joachimhskeie\", created=\"Sun, 27 Dec 2009 23:21:28 +0100\"]\nHello, \nI have started looking into this, and one strategy is to use a CharArrayWriter to write output to an in-memory char-array. This way theres no need to interact with the file system to be able to send output to a remote HTTP destination. \nI will post a diff script over the New Years with one possible solution. \n. [author=\"joachimhskeie\", created=\"Sun, 3 Jan 2010 08:27:13 +0100\"]\nHello, \nI am attaching a path for one possible implementation. I added agent argument \"storeScriptOutputInMemory\" that initializes a charArrayWriter for use instead of the FileWriter i Main. For my purpose, I added a method to BTraceUtils and BTraceRuntime to enable sending the contents over HTTP:\n\n\npublic static void sendScriptOutputOverHttp(final String host, final String path, final int port)\n\n\nAs information is stored in memory, there should be a maximum size of the contents, so that this doesn't cause a memory leak. \nAs it stands now, there are some System.out.println's, and I'm not entirely sure of BTrace's exception strategy.\nLet me know how you feel about adding this feature to BTrace. \n. [author=\"joachimhskeie\", created=\"Tue, 12 Jan 2010 21:58:40 +0100\"]\nI am reapplying this change after the 1.1 release. (charArrayWriter (278 vs 272).diff). \nThere is still lacking Exception handling (there is a try-catch that just issues e.printStackTrace(), as I am not entirely sure how such exceptions should be handled. \nOther than that its fairly basic where a CharArrayWriter is initialized instead of a FileWriter. \n. [author=\"joachimhskeie\", created=\"Sat, 30 Jan 2010 08:50:02 +0100\"]\nI made a small change to my local version, where the third argument to sendScriptOutputOverHttp is also a String. This makes it possible to use the properties(\"\") method for filling in the port number as well. \nChanges both in BTraceUtils and BTraceRuntime.\n\n\npublic static void sendScriptOutputOverHttp(final String host, final String path, final String port)\n\n\n. [author=\"jbachorik\", created=\"Fri, 19 Feb 2010 13:23:16 +0100\"]\nSorry, this will not be implemented in any foreseeable future. Sending the data to an arbitrary remote location raises certain security risks and storing the output data in an in-process cache may lead to spurious OOME problems in target application.\nSimply put - this feature doesn't seem to be secure enough to make it to the main line.\nPlease notice, that you could achieve the same effect running your btrace script in \"unsafe\" mode and using your arbitrary classes to stream the script output to a remote host.\n. [author=\"joachimhskeie\", created=\"Fri, 19 Feb 2010 15:45:33 +0100\"]\nHello, \nVisual VM does connect into the agent and script output is passed along the wire to the remote side. This issue suggests alowing the connection to go in the other direction, where the agent initialized the comminication... \nI can understand storing output data in memory and the possibility of OOME, however this can be controlled by monitoriing the size of the in-process cache and either send output to the remote side, or start to remove the oldest part of the cache. \nI am not quite sure I go that last part. If I set unsafe to true, that will also allow scripts to do other potentially dangerous things like looping and object initalization etc ? \nWhat I am after in the end though, is a way to transfer script output from the agent side to a remote application. One solution might be to use the paramter \"scriptOutputFile\" to pipe all output to one file, and to have a small application that will transmit the file contents over the wire to the remote side. The negtive side of this is that it will complicate the architecture further...\n. [author=\"jbachorik\", created=\"Fri, 19 Feb 2010 16:04:58 +0100\"]\nDo you need to have the dispatcher inside the monitored application? Wouldn't it be acceptable to have a BTrace client used as a central point of deploying BTrace scripts and caching and dispatching the probe output as required? I see your needs but I just don't want to stuff everything inside the agent which should be \"light as feather and fast as lightning\" \n. [author=\"joachimhskeie\", created=\"Wed, 24 Feb 2010 17:25:12 +0100\"]\nHello again, \nI definately do see the point in making the agent as light as possible. Another possible route is to use the scriptOutputFile= to redirect all script output to a single file. I could then generate a proxy that periodically would read that file and transmit the output over the network to the remote side. \nI would, however feel more comfortable if the file specified with the scirptOutputFile attribute would be rolled on a time interval specified by the user (either as a -D property, or as a System.property). \nDo you fell time-based log rotation of the output script is something that could be implemented into BTrace ? \n. [author=\"jbachorik\", created=\"Mon, 21 Dec 2009 12:46:33 +0100\"]\nhttp://kenai.com/projects/btrace/sources/hg/revision/250\nThis was caused by javac generating the local variables indices not sequentially and the LocalVariableSorter expecting them that way.\nEg. javac would generate one variable with index 4 and the next one with index 8 even if it should be, given the variable types, 5. This way the LocalVariableSorter got completely confused and messed up the indices for the rest of the local variables.\nUpdated binaries available\n. [author=\"jbachorik\", created=\"Tue, 22 Dec 2009 12:26:11 +0100\"]\nAnother revision to iron out the LocalVariableSorter wrinkles .. http://kenai.com/projects/btrace/sources/hg/revision/253\nThe original implementation used to remap the original and the newly introduced local variables indiscriminately - thus leading to overloading their slots randomly ... Fixed by adding freeze/unfreeze methods to LocalVariableSorter - not a generic solution but good enough for the current usage in BTrace.\n. [author=\"joachimhskeie\", created=\"Sun, 20 Dec 2009 21:04:31 +0100\"]\nImplementing the first part of this issue. Agent argument scriptOutputFile=file specifies a file name to redirect all scripts output to.\nAttaching HG diff file. \n. [author=\"joachimhskeie\", created=\"Sun, 20 Dec 2009 21:10:04 +0100\"]\nAlso attaching diff to 248, though this also includes my local commit 250 for issue BTRACE-26\n. [author=\"jbachorik\", created=\"Tue, 5 Jan 2010 12:01:14 +0100\"]\nApplied in changeset fb67ba3ba7f7\n. [author=\"joachimhskeie\", created=\"Sat, 19 Dec 2009 15:44:39 +0100\"]\nLooking at the diff script though, there might be missing one line\n\n\nbuffer.append(\"  \");\n\n\nbetween lines 142 and 143 of DataGridCommand.java.\nI would recommend a code review of the changes. \n. [author=\"jbachorik\", created=\"Wed, 30 Dec 2009 09:56:13 +0100\"]\nActually, the DataGridCommand used for transfering and printing out the aggregation data was half-way ready for custom formatting. It was possible to specify a format string (as used in String.format(...) method) which would override the default formatting. However, this possibility was not accessible from the BTraceUtils.printAggregation method.\nIn the attached patch the custom formatting is enabled. It allows you to provide a custom format string that will be used for outputting the aggregation rows. In addition to the original format syntax you can use %0$ to dereference the key title.\nPlease, let me know if this change suits your needs.\n. [author=\"joachimhskeie\", created=\"Wed, 30 Dec 2009 17:26:01 +0100\"]\nI haven't been able to look into the patch in detail, but does the format string enable things like: \n\nSpecify a prefix to be printed out before each line in the aggregation ?\nSpecify a suffix to be printed out after each line in the aggregation ?\nSpecify the delimeter between each field ?\n\nFor instance, I want to send data like: \nTotalExecTime: agentname package.Class method timeperiod exectime Custom\nI have the following BTrace Script which I am using together with the path I provided (250). \n\n\n    @OnMethod(clazz=\"/org\\\\.jsflot\\\\..*/\", method=\"/.*/\", location=@Location(value=Kind.ENTRY))\n    public static void enterMethod() {\n        push(q, box(timeNanos()));\n    }\n    @OnMethod(clazz=\"/org\\\\.jsflot\\\\..*/\", method=\"/.*/\", location=@Location(value=Kind.RETURN))\n    public static void exitMethod(@ProbeMethodName String probeMethod, @ProbeClassName String probeClass) {\n        int execTime = (int)(timeNanos() - unbox(poll(q)));\n        Long timePeriod = ((long)(timeNanos() / 15000000000l)*15000);\n\n        //Yields fullyQualifiedClassName methodName, 150000 millisecond interval since 1970\n     AggregationKey k = newAggregationKey(probeClass, probeMethod, timePeriod);\n        addToAggregation(TOTAL_EXEC_TIME, k, execTime);\n        addToAggregation(CALLS_PER_INTERVAL, k, 1);\n    }\n    @OnTimer(7500)\n    public static void printAverage() {\n        //TotalExecTime: agentname package.Class method timeperiod exectime classType\n     //CallsPerInterval: agentname package.Class method timeperiod callsWithinTimeperiod classType\n     printAggregation(\"TOTAL_EXEC_TIME\", TOTAL_EXEC_TIME, strcat(\"TotalExecTime: \",property(\"btrace.agentname\")), \"Custom\", \" \");\n        printAggregation(\"CALLS_PER_INTERVAL: \", CALLS_PER_INTERVAL, strcat(\"CallsPerInterval: \", property(\"btrace.agentname\")), \"Custom\", \" \");\n\n        truncateAggregation(TOTAL_EXEC_TIME, 0);\n        truncateAggregation(MIN_TIMESTAMP, 0);\n        truncateAggregation(CALLS_PER_INTERVAL, 0);\n    }\n\n\nNow, the aggregation prints out the middle part: \n\"package.Class method timeperiod\"\nWhile the prefix prints out \"TotalExecTime: agentname\" and the suffix prints out \"Custom\". The delimeter decides what the spacer between each field is (space in my example, but could just as easily be ; or any other character(s). \n. [author=\"jbachorik\", created=\"Thu, 31 Dec 2009 08:37:17 +0100\"]\nYou can specify any format you want - you are not limited by prefix/suffix/delimiter combination.\nUsing this code\n\n\nprintAggregation(\"TotalExecTime:\", TOTAL_EXEC_TIME, strcat(strcat(\"%0$s \", property(\"btrace.agentname\"), \" %1$s %2$s %3$d\\tCustom\")));\n\n\nwill print\n\nTotalExecTime: agentName package.Class method timeperiod      Custom\nIn order to change the separator to eg. \";\" you would use\n\n\nprintAggregation(\"TotalExecTime:\", TOTAL_EXEC_TIME, strcat(strcat(\"%0$s \", property(\"btrace.agentname\"), \" %1$s;%2$s;%3$d\\tCustom\")));\n\n\nThe format string used is a standard format string (see String.format() method)\n. [author=\"joachimhskeie\", created=\"Thu, 31 Dec 2009 14:44:15 +0100\"]\nHello, \nThat looks good! I will look into the patch more over new years. Do you think this feature will feature make it into the 1.1 release ?\n. [author=\"joachimhskeie\", created=\"Thu, 31 Dec 2009 16:09:34 +0100\"]\nHello again, \nI tried the following (btracec wouldn't allow nested strcats):\n\n\n        String execStringFormat = strcat(\"TotalExecTime: \", property(\"btrace.agentname\"));\n        printAggregation(\"TotalExecTime:\", TOTAL_EXEC_TIME,  strcat(execStringFormat, \" %1$s %2$s %3$d Custom\"));\n\n\nWhich yelds the following:\n\n\norg.eurekaJ.manager.perst.alert.Alert      CallsPerInterval EurekaJAgent isActivated 1262271555000 2 Custom\norg.eurekaJ.manager.perst.alert.Alert      CallsPerInterval EurekaJAgent getStatusString 1262271555000 2 Custom\norg.eurekaJ.manager.perst.alert.Alert      CallsPerInterval EurekaJAgent getAlertDelay 1262271555000 2 Custom\n\n\nThere are two issues. The first is the delimeter between the class name and the \"CallsPerInterval\", which is still delimeted with spaces to allow for a readable tabular format (multiple spaces). The second is the fact that the \"CallsPerInterval EurkaJAgent\" is printed out in between the aggregation key elements, which I am unsure of why exactly. \nI had code like the following to escape the tabular output. (from GridDataCommand.java ca. line 139:\n\n\n    for (int i = 0; i < printRow.length; i++) {\nif (delimeter != null && !delimeter.equals(\"\")) {\n    buffer.append(printRow[i]);\n    buffer.append(delimeter);\n} else {\n    buffer.append(getFormat(printRow[i]));\n}\n    }\n\n\n. [author=\"joachimhskeie\", created=\"Fri, 1 Jan 2010 08:20:28 +0100\"]\nActually, commenting out the following lines solved the issue (which if effect makes the whole regex matching do nothing. I'm not sure what I might be breaking with this though...): \n\n\n                    if (usedFormat == null) {\n                    StringBuilder buffer = new StringBuilder();\n                    for (int i = 0; i < printRow.length; i++) {\n                        buffer.append(\"  \");\n                buffer.append(getFormat(printRow[i]));\n                    }\n                    format = buffer.toString();\n                    usedFormat = buffer.toString();\n                } else {\n                    // remap the indices in format\n                 Matcher m = INDEX_PATTERN.matcher(usedFormat);\n                    // find the highest used index\n                 int maxIndex = -1;\n                    int minIndex = Integer.MAX_VALUE;\n\n                    while (m.find()) {\n                        int index = Integer.valueOf(m.group(1)).intValue();\n                            if (index > maxIndex) {\n                                maxIndex = index;\n                            }\n                            if (index < minIndex) {\n                                minIndex = index;\n                            }\n                        }\n                        // ... and iterate backwards while increasing each index by 1 thus making room for the title (index 1)\n                     //for(int index = maxIndex;index >= 0;index--) {\n                     //   usedFormat = usedFormat.replace(\"%\" + index + \"$\", \"%\" + (index + 1) + \"$\");\n                     //}\n\n                        // the first object in the array is the title\n                         //usedFormat = minIndex > 0 ? getFormat(printRow[0]) + \" \" + usedFormat : usedFormat;\n                 }\n\n\nUsing:\n\n\nString execStringFormat = strcat(\"TotalExecTime: \", property(\"btrace.agentname\"));\nprintAggregation(\"TotalExecTime:\", TOTAL_EXEC_TIME,  strcat(execStringFormat, \" %1$s %2$s %3$d %4$d Custom\"));\n\n\nwill then print out:\n\n\nCallsPerInterval: EurekaJAgent org.eurekaJ.manager.perst.alert.Alert getGuiPath 1262330280000 4 Custom\nCallsPerInterval: EurekaJAgent org.eurekaJ.manager.perst.statistics.LiveStatistics setTimeperiod 1262330280000 4 Custom\nCallsPerInterval: EurekaJAgent org.eurekaJ.manager.perst.statistics.LiveStatistics setGuiPath 1262330280000 4 Custom\n\n\n. [author=\"jbachorik\", created=\"Tue, 5 Jan 2010 10:43:36 +0100\"]\nResolved in changeset b005f39c634d (no URL link as the kenai hg web browser seems to be dead)\n. [author=\"jbachorik\", created=\"Fri, 18 Dec 2009 13:24:29 +0100\"]\nThis might be due to declaring the aggragations as @TLS. Do you really want to track the aggregations per thread?\n. [author=\"joachimhskeie\", created=\"Fri, 18 Dec 2009 14:35:22 +0100\"]\nYou are correct. This worked as its supposed to when I removed the @TLS. \n. [author=\"jbachorik\", created=\"Tue, 5 Jan 2010 12:00:27 +0100\"]\nAdded warning to @TLS annotation\n. [author=\"jbachorik\", created=\"Wed, 6 Jan 2010 15:59:33 +0100\"]\nPlease, verify and close this issue\n. [author=\"joachimhskeie\", created=\"Thu, 17 Dec 2009 17:25:19 +0100\"]\nFrom the Discussion Forum. \nThe following script has been compiled and run through the -javaagent:path/to/agent.jar=scriptdir/path/to/scriptdir:\n\n\n    @OnMethod(\nclazz=\"/org\\\\.jsflot\\\\..*/\",\nmethod=\"/^[a-zA-Z0-9]+$/\", location=@Location(Kind.RETURN)\n    )\n    public static void after(@Duration long dur, @ProbeMethodName String probeMethod, @ProbeClassName String probeClass) {\n        print(\"CLASS: \");\n        print(probeClass);\n        print(\" \");\n        print(probeMethod);\n        print(\" \");\n        println(dur);\n    }\n\n\nWhich according to my logic says methods that all contain alphanumeric characters (this is not complete as methods may have some other characters as well). \nThis seems to have gotten me one step further, as it now printed out some execution times (in nanoseconds):\n\n\nCLASS: org.jsflot.renderkit.phaselistener.ResourceLoaderPhaseListener getPhaseId 0\nCLASS: org.jsflot.components.ComponentRendererUtil getDebug 11000\nCLASS: org.jsflot.components.ComponentRendererUtil getDebug 1000\nCLASS: org.jsflot.renderkit.phaselistener.ResourceLoaderPhaseListener beforePhase 103000\nCLASS: org.jsflot.renderkit.phaselistener.ResourceLoaderPhaseListener getPhaseId 0\nCLASS: org.jsflot.components.ComponentRendererUtil getDebug 4000\nCLASS: org.jsflot.renderkit.phaselistener.ResourceLoaderPhaseListener afterPhase 55000\nCLASS: org.jsflot.renderkit.phaselistener.ResourceLoaderPhaseListener getPhaseId 1000\nCLASS: org.jsflot.renderkit.phaselistener.ResourceLoaderPhaseListener getPhaseId 0\n\n\nHowever this is the point where it stops with the same exception:\n\n\njava.lang.VerifyError: (class: org/jsflot/xydata/XYDataList, method: calculateAvgPointDistance signature: ()D) Register pair 3/4 contains wrong type\n\n\nThe code in question is:\n\n\npublic double calculateAvgPointDistance() {\n        double pointDistance = 1.0d;\n        if (dataPointList.size() > 1) {\n            double xAxisRange = dataPointList.get(dataPointList.size() -1).getX().doubleValue() - dataPointList.get(0).getX().doubleValue();\n            pointDistance = xAxisRange / dataPointList.size();\n        }\n\n        return pointDistance;\n    }\n\n\n. [author=\"jbachorik\", created=\"Fri, 18 Dec 2009 16:09:06 +0100\"]\nFixed in http://kenai.com/projects/btrace/sources/hg/revision/249\nThe update binaries available\n. [author=\"joachimhskeie\", created=\"Sat, 19 Dec 2009 10:12:15 +0100\"]\nThis fix introduced another error that wasn't there in revision 248 (I have tried to update to revision 248, build and deploy with this agent.jar file). See The discussion forum for details: http://kenai.com/projects/btrace/forums/forum/topics/2153-BTrace-1-1-preview-ready-for-testing Posted: December 19, 2009 07:34 by joachimhskeie\n. [author=\"jbachorik\", created=\"Sat, 19 Dec 2009 18:24:59 +0100\"]\nCould you run the btrace with class dumping on and then attach the transformed class files? \nIt would greatly speed up the debugging process on my side. Thanks.\n. [author=\"joachimhskeie\", created=\"Sat, 19 Dec 2009 19:00:40 +0100\"]\nI assume that is -javaagent:/path/to/btrace-agent.jar=scriptdir=/path/to/scriptdir,dumpDir=/path/to/dumpDir ?\n. [author=\"jbachorik\", created=\"Sun, 20 Dec 2009 10:43:01 +0100\"]\n-javaagent:/path/to/btrace-agent.jar=scriptdir=/path/to/scriptdir,dumpClasses=true,dumpDir=/path/to/dumpDir\n. [author=\"joachimhskeie\", created=\"Sun, 20 Dec 2009 16:11:20 +0100\"]\nAttaching dump.zip. \n. [author=\"joachimhskeie\", created=\"Sun, 20 Dec 2009 16:12:18 +0100\"]\nFull stack trace:\n\n\n2009-12-20 16:10:24.691::WARN:  failed org.mortbay.jetty.webapp.WebAppContext@14fdb00d{/,jar:file:/Users/jhs/JSFlotRunnable/JSFlotDemo/repo/org/jsflot/JSFlot.Web/0.1/JSFlot.Web-0.1.war!/}\njava.lang.VerifyError: (class: org/jsflot/renderkit/phaselistener/ResourceLoaderPhaseListener, method: serveResource signature: (Ljavax/faces/context/FacesContext;Ljava/lang/String;)V) Incompatible object argument for function call\n    at java.lang.Class.getDeclaredConstructors0(Native Method)\n    at java.lang.Class.privateGetDeclaredConstructors(Class.java:2389)\n    at java.lang.Class.getConstructor0(Class.java:2699)\n    at java.lang.Class.newInstance0(Class.java:326)\n    at java.lang.Class.newInstance(Class.java:308)\n    at com.sun.faces.config.processor.AbstractConfigProcessor.createInstance(AbstractConfigProcessor.java:243)\n    at com.sun.faces.config.processor.LifecycleConfigProcessor.addPhaseListeners(LifecycleConfigProcessor.java:141)\n    at com.sun.faces.config.processor.LifecycleConfigProcessor.process(LifecycleConfigProcessor.java:114)\n    at com.sun.faces.config.processor.AbstractConfigProcessor.invokeNext(AbstractConfigProcessor.java:108)\n    at com.sun.faces.config.processor.FactoryConfigProcessor.process(FactoryConfigProcessor.java:132)\n    at com.sun.faces.config.ConfigManager.initialize(ConfigManager.java:203)\n    at com.sun.faces.config.ConfigureListener.contextInitialized(ConfigureListener.java:196)\n    at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:543)\n    at org.mortbay.jetty.servlet.Context.startContext(Context.java:136)\n    at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)\n    at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:513)\n    at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)\n    at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)\n    at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)\n    at org.mortbay.jetty.Server.doStart(Server.java:222)\n    at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)\n    at org.jsflot.server.JettyServer.start(JettyServer.java:30)\n    at org.jsflot.server.JettyServer.main(JettyServer.java:21)\n2009-12-20 16:10:24.761::WARN:  Error starting handlers\njava.lang.VerifyError: (class: org/jsflot/renderkit/phaselistener/ResourceLoaderPhaseListener, method: serveResource signature: (Ljavax/faces/context/FacesContext;Ljava/lang/String;)V) Incompatible object argument for function call\n    at java.lang.Class.getDeclaredConstructors0(Native Method)\n    at java.lang.Class.privateGetDeclaredConstructors(Class.java:2389)\n    at java.lang.Class.getConstructor0(Class.java:2699)\n    at java.lang.Class.newInstance0(Class.java:326)\n    at java.lang.Class.newInstance(Class.java:308)\n    at com.sun.faces.config.processor.AbstractConfigProcessor.createInstance(AbstractConfigProcessor.java:243)\n    at com.sun.faces.config.processor.LifecycleConfigProcessor.addPhaseListeners(LifecycleConfigProcessor.java:141)\n    at com.sun.faces.config.processor.LifecycleConfigProcessor.process(LifecycleConfigProcessor.java:114)\n    at com.sun.faces.config.processor.AbstractConfigProcessor.invokeNext(AbstractConfigProcessor.java:108)\n    at com.sun.faces.config.processor.FactoryConfigProcessor.process(FactoryConfigProcessor.java:132)\n    at com.sun.faces.config.ConfigManager.initialize(ConfigManager.java:203)\n    at com.sun.faces.config.ConfigureListener.contextInitialized(ConfigureListener.java:196)\n    at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:543)\n    at org.mortbay.jetty.servlet.Context.startContext(Context.java:136)\n    at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1220)\n    at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:513)\n    at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)\n    at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)\n    at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)\n    at org.mortbay.jetty.Server.doStart(Server.java:222)\n    at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:39)\n    at org.jsflot.server.JettyServer.start(JettyServer.java:30)\n    at org.jsflot.server.JettyServer.main(JettyServer.java:21)\n\n\n. [author=\"jbachorik\", created=\"Sun, 20 Dec 2009 19:57:01 +0100\"]\nAs per the discussion thread you are using the following probe:\n\n\n@OnMethod(clazz=\"/org\\\\.jsflot\\\\..*/\", method=\"/.*/\", location=@Location(value=Kind.RETURN))\n    public static void exitMethod(@Duration Long dur, @ProbeMethodName String probeMethod, @ProbeClassName String probeClass) {\n        print(\"BT CLASS INSTRUMENTATION: \");\n        print(probeClass);\n        print(\" \");\n        print(probeMethod);     \n        print(\" \");\n        println(dur);\n        AggregationKey k = newAggregationKey(probeClass, probeMethod);\n        addToAggregation(TOTAL_EXEC_TIME, k, dur);\n        addToAggregation(MIN_TIMESTAMP, k, timeNanos());\n        addToAggregation(CALLS_PER_INTERVAL, k, 1);\n    }\n\n\nThe problem is that @Duration annotation expects the argument of the type primitive long and not the object equivalent.Although it could be possible to box/unbox the value automatically right now you must do it by yourself.\nI've still not found any clues as why this should cause VerifyError. I will investigate further but, please, let me know if the change from Long to long makes your code run.\n. [author=\"joachimhskeie\", created=\"Sun, 20 Dec 2009 20:03:44 +0100\"]\nWell, actually this also happens even without the @Duration with the following script: \n\n\npackage org.eurekaj.btracers;\nimport com.sun.btrace.annotations.*;\nimport com.sun.btrace.aggregation.*;\nimport static com.sun.btrace.BTraceUtils.*;\nimport java.util.Deque;\n@BTrace public class CustomBtracer {\n\n    private static Aggregation TOTAL_EXEC_TIME = newAggregation(AggregationFunction.SUM);\n    private static Aggregation MIN_TIMESTAMP = newAggregation(AggregationFunction.MINIMUM);\n    private static Aggregation CALLS_PER_INTERVAL = newAggregation(AggregationFunction.COUNT);\n    @TLS private static Deque<Long> q = newDeque();\n\n    @OnMethod(clazz=\"/org\\\\.jsflot\\\\..*/\", method=\"/.*/\", location=@Location(value=Kind.ENTRY))\n    public static void enterMethod() {\n        push(q, box(timeNanos()));\n    }\n    @OnTimer(4000)\n    public static void printMem() {\nprint(\"Heap:\");\nprintln(heapUsage());\nprint(\"Non-Heap:\");\nprintln(nonHeapUsage());\n\n        print(\"NUM_THEADS: \");\n        print(threadCount()); print(\" \");\n        print(peakThreadCount()); print(\" \");\n        print(totalStartedThreadCount()); print(\" \");\n        println(daemonThreadCount());\n    }\n\n    @OnMethod(clazz=\"/org\\\\.jsflot\\\\..*/\", method=\"/.*/\", location=@Location(value=Kind.RETURN))\n    public static void exitMethod(@ProbeMethodName String probeMethod, @ProbeClassName String probeClass) {\n        int execTime = (int)(timeNanos() - unbox(poll(q)));\n        Long timePeriod = ((long)(timeNanos() / 15000000000l)*15);\n\n        //Yields fullyQualifiedClassName methodName, 15secondinterval since 1970\n     AggregationKey k = newAggregationKey(probeClass, probeMethod, timePeriod);\n        addToAggregation(TOTAL_EXEC_TIME, k, execTime);\n        addToAggregation(MIN_TIMESTAMP, k, timeNanos());\n        addToAggregation(CALLS_PER_INTERVAL, k, 1);\n    }\n\n    @OnTimer(7500)\n    public static void printAverage() {\n    //DefaultAgent org.ajax4jsf.javascript.ImageCacheScript getJavaScript timemillis callsPerInterval average Classtype path\n     println(\"----------------TOTAL_EXEC_TIME---------------------\");\n        printAggregation(\"TOTAL_EXEC_TIME: \", TOTAL_EXEC_TIME, strcat(\"BTTotalExecTime \",property(\"btrace.agentname\")), \"\", \" \");\n\n        println(\"------------------CALLS_PER_INTERVAL-----------------------\");\n        printAggregation(\"CALLS_PER_INTERVAL: \", CALLS_PER_INTERVAL, strcat(\"BTCallsPerInterval \", property(\"btrace.agentname\")), \"\", \" \");\n\n        //AgentName package.name.ClassName method timestamp execTime callsPerInterval ClassType Path\n     //printEurekaJAggregation()\n     \n        truncateAggregation(TOTAL_EXEC_TIME, 0);\n        truncateAggregation(MIN_TIMESTAMP, 0);\n        truncateAggregation(CALLS_PER_INTERVAL, 0);\n    }\n}\n\n\n. [author=\"jbachorik\", created=\"Mon, 21 Dec 2009 07:49:37 +0100\"]\nOpened a new issue BTRACE-28 as the problems described do not relate to using @Duration annotation.\n. [author=\"jbachorik\", created=\"Tue, 13 Oct 2009 22:53:54 +0200\"]\nHere is an idea - since we are receiveing the class file contents as an argument (byte[] classFileBuffer) to the transform method we could use that to check for annotations (either using ASM or manually parsing the class structure) and prevent attempting to acquire a lock on the class being transformed thus fixing this deadlock.\nWill investigate further....\n. [author=\"jbachorik\", created=\"Wed, 14 Oct 2009 23:01:23 +0200\"]\nActually, the issue is much trickier. The deadlock occurs at the time of loading the ClassFilter.CheckingVisitor class (line 127) - and it is not restricted to that class only.\nIt seems that preloading the classes needed during execution of the Client.transform() method could help.\n. [author=\"jbachorik\", created=\"Thu, 15 Oct 2009 10:56:11 +0200\"]\nThe patch for preloading classes used during execution of the transform() method - should prevent class loading deadlocks.\n. [author=\"jbachorik\", created=\"Mon, 19 Oct 2009 13:09:53 +0200\"]\nfixed in http://kenai.com/projects/btrace/sources/hg/revision/209\n. [author=\"jbachorik\", created=\"Tue, 13 Oct 2009 22:48:42 +0200\"]\nIt seems that moving the handleClient() routine to a separate thread could lift the deadlock condition.\nI've used an ExecutorService to run the routine as it seemed to be a \"cleaner\" approach than spawning and managing my own thread.\nPlease, review and test the patch whether it reliably prevents this kind of deadlock.\n. [author=\"sreeni\", created=\"Tue, 13 Oct 2009 23:08:22 +0200\"]\nThe reason for deadlock is because of trying to get annotation from class, see below.\nat java.lang.Class.initAnnotationsIfNecessary(Class.java:3067)\n\nwaiting to lock <0x3639c258> (a java.lang.Class for org.spec.jappserver.corp.customerent.ejb.CustomerCmp20EJB_1113712369_ConcreteImpl)\nat java.lang.Class.getAnnotation(Class.java:3029)\nat com.sun.btrace.runtime.ClassFilter.isCandidate(ClassFilter.java:74)\nat com.sun.btrace.agent.Client.isCandidate(Client.java:243)\n\nThe corresponding btrace code extract from ClassFilter.java  is given below.\n     67     public boolean isCandidate(Class target) {\n     68 if (target.isInterface() || target.isPrimitive() || target.isArray()) \n{\n     69     return false;\n     70 }\n     71 \n     72 // ignore classes annotated with @BTrace -\n     73 // We don't want to instrument tracing classes!\n     74 if (target.getAnnotation(BTrace.class) != null) \n{\n     75     return false;\n     76 }\n     77 \n     78 String className = target.getName();\n     79 for (String name : sourceClasses) {\n     80     if (name.equals(className)) \n{\n     81 return true;\n     82     }\n     83 }\nWe do not need a check for annotation in the above, what all we need is just check for class-name and if it matches return true. The check for annotation is the one which is locking the class. Sundar is of the same view and agreed to provide glassfish specific code excluding annotation and other checks.\nAppreciate if you and Sundar could provide the above fix and then I can get the patch tested along with your other change.\n. [author=\"jbachorik\", created=\"Wed, 14 Oct 2009 22:07:03 +0200\"]\nPlease, be aware that by removing the check from line 74 will mean that you might get false hits from the compiled BTrace script as they will get instrumented in case they pass the name filter.\nI still think that executing the handleNewClient() routine asynchronously would completely remove the deadlock condition. But for GF I will disable the annotation checks alltogether and provide you with updated binaries.\n. [author=\"jbachorik\", created=\"Mon, 19 Oct 2009 13:10:43 +0200\"]\nfixed in http://kenai.com/projects/btrace/sources/hg/revision/210\n. [author=\"jbachorik\", created=\"Mon, 2 Nov 2009 09:57:14 +0100\"]\nThe fix is causing http://kenai.com/jira/browse/BTRACE-18\n. [author=\"jbachorik\", created=\"Wed, 25 Nov 2009 10:39:22 +0100\"]\nresolved in http://kenai.com/projects/btrace/sources/hg/revision/228\n. [author=\"jbachorik\", created=\"Fri, 11 Dec 2009 10:21:45 +0100\"]\nfixed in http://kenai.com/projects/btrace/sources/hg/revision/240\nNew methods BTraceUtil.timestamp() and BTraceUtils.timestamp(String format) were added.\n. [author=\"tsoueid\", created=\"Sat, 19 Dec 2009 11:37:47 +0100\"]\nHello,\nSince I issued this JIRA, I've tested it and confirm it works as expected.\n\n\n\n\n\nTest Class ###\nThreadStarted.java \n\n\n\n\n\nimport java.io.Console;\nclass Runner implements Runnable {\n    public void run() \n{\nSystem.out.println(Thread.currentThread().getName() + \" running...\");\n    }\n\n}\npublic class ThreadStarted {\n\n    public static void main(String[] args) {\nSystem.out.println(\"Press return to start a thread\");\nSystem.console().readLine();\nThread t1 = new Thread(new Runner(), \"Runner Thread 1\");\nt1.start();\nSystem.out.println(\"Press return to start another thread\");\nSystem.console().readLine();\nThread t2 = new Thread(new Runner(), \"Runner Thread 2\");\nt2.start();\nSystem.console().readLine();\n    System.exit(0);\n    }\n\n}\n\n ### Probe Class ###\nThreadStarted.java \n\nimport java.io.Console;\n\nclass Runner implements Runnable {\n\n    public void run() {\nSystem.out.println(Thread.currentThread().getName() + \" running...\");\n    }\n}\npublic class ThreadStarted {\n    public static void main(String[] args) \n{\nSystem.out.println(\"Press return to start a thread\");\nSystem.console().readLine();\nThread t1 = new Thread(new Runner(), \"Runner Thread 1\");\nt1.start();\nSystem.out.println(\"Press return to start another thread\");\nSystem.console().readLine();\nThread t2 = new Thread(new Runner(), \"Runner Thread 2\");\nt2.start();\nSystem.console().readLine();\n    System.exit(0);\n    }\n}\n\n\n\n\n\nOutput ###\njava ThreadStarted \nPress return to start a thread\nRunner Thread 1 running...\nPress return to start another thread\nRunner Thread 2 running...\n\n\n\n\n\n./btrace 1296 BTraceSample.java \n12/19/09 11:32 AM: about to start a thread!\n12/19/09 11:32 AM: about to start a thread!\nThanks\nToni\n. [author=\"jbachorik\", created=\"Wed, 6 Jan 2010 15:53:59 +0100\"]\nPlease, verify and close this issue\n. [author=\"jbachorik\", created=\"Sat, 24 Oct 2009 20:00:34 +0200\"]\nFix delivered in http://kenai.com/projects/btrace/sources/hg/revision/221\nAvailable in the dev build - http://kenai.com/projects/btrace/downloads/directory/releases%252Fdev\n. [author=\"jbachorik\", created=\"Wed, 6 Jan 2010 15:53:05 +0100\"]\nPlease, verify and close this issue\n. [author=\"reccles\", created=\"Wed, 6 Jan 2010 16:02:36 +0100\"]\nI don't have the option of closing the bug, however it is verified to work.\n. [author=\"joachimhskeie\", created=\"Sat, 3 Oct 2009 22:39:49 +0200\"]\nAttached the ZIP file with the source code. \n. [author=\"jbachorik\", created=\"Sun, 4 Oct 2009 13:06:55 +0200\"]\nThe easiest way to get the diff from HG is using 'hg diff -g > mydiff.patch' in the project root\n. [author=\"joachimhskeie\", created=\"Sun, 11 Oct 2009 22:30:56 +0200\"]\nHello, \nFor some reason hg stopped working on my computer. \nThe changes though, is basically inside src. Delete the \"shared\" folder and unzip the attached ZIP (btrace-maven.zip) inside the src folder. This should lead the following structure under \"src\":\nbtrace-agent\nbtrace-boot\nbtrace-client\npom.xml\nsolaris\ntest\n. [author=\"joachimhskeie\", created=\"Tue, 15 Mar 2011 18:41:06 +0100\"]\nI cloned the Mavenized Core, and had some initial trouble when trying to build with maven. \nAs I am on a Mac, I dont have a \"tools.jar\" file at all in my JVM. Apple ships a \"classes.jar\" that contains the contents from tools.jar as well. Im not sure maven is able to auto-detect the OS, but in order to only have to change the path to classes.jar once, I added a dependencyManagement tag inside the main pom.xml. That way the sub-poms dont have to specify a version, or a path to the jar file. \nAlso, for some reason, I had to build some of the sub-project manually before the build of the parent pom.xml worked. Im not too sure why that might be. \nI am attaching a diff file for the changes I made to the poms. \n. [author=\"j.bachorik\", created=\"Wed, 16 Mar 2011 11:20:21 +0100\"]\nHi,\nI've slightly modified the patch to be OS sensitive. Could you (anyone owning a mac) try it out?\n. [author=\"joachimhskeie\", created=\"Wed, 16 Mar 2011 13:56:30 +0100\"]\nI will have a look at it this evening. \n. [author=\"joachimhskeie\", created=\"Thu, 17 Mar 2011 22:45:43 +0100\"]\nI tried out the patch today, and it works fine on my machine (OS X 10.6.6, Java build 1.6.0_22-b04-307-10M3261, which is Java for Mac OS X 10.6 Update 3, not the newest Update 4). \n. [author=\"joachimhskeie\", created=\"Fri, 18 Mar 2011 10:27:03 +0100\"]\nHello, \nTrying out a clean clone of the repo (to verify BTRACE-63), I also needed to add the following to the main pom.xml inside the btrace-folder, as my compiler tried to compile with a Java 1.3 complancy for some reason. \n\n\n    \norg.apache.maven.plugins\nmaven-compiler-plugin\n\n    1.6\n    1.6\n    ISO-8859-1\n\n    \n\n\nOther than that, everything seems to be working as its supposed to! How far off the main repo is the mavenized repo ? \n. [author=\"j.bachorik\", created=\"Fri, 18 Mar 2011 12:01:28 +0100\"]\nI've applied the proposed change along with some other improvements - http://kenai.com/projects/btrace/sources/core-maven/revision/18.\nIn fact, the mavenized repo is now ahead of the main repo. Thanks to rather big structural differences between those 2 repos I was commiting fixes and features to the mavenized one only as I hope it will be the primary repo soon.\n. [author=\"joachimhskeie\", created=\"Fri, 18 Mar 2011 14:06:07 +0100\"]\nThat sounds very nice indeed! I'm switching to the maven-repo for my continued work on EurekaJ, and I will submit a new diff file for BTRACE-55 as well that works with the mavenized core. \n. This might as well be obsoleted by #118 (Gradle adoption)\n. Labeling as incomplete and waiting for the reporter to comment on the current situation (having Gradle adoption instead of Maven)\n. Sorry, closing this issue. We have a very nice gradle build available now which can also generate maven artifacts.\n. [author=\"jbachorik\", created=\"Tue, 21 Jul 2009 13:00:18 +0200\"]\nProposed patch\n. [author=\"jbachorik\", created=\"Fri, 11 Dec 2009 08:21:52 +0100\"]\nThis will not be resolved for 1.1\n. [author=\"jbachorik\", created=\"Fri, 9 Jul 2010 16:04:58 +0200\"]\nThis will probably come into 1.2 - although using a different approach to the posted patch.\n. [author=\"jbachorik\", created=\"Fri, 9 Jul 2010 16:24:48 +0200\"]\nIn changesets: \nhttp://kenai.com/projects/btrace/sources/hg/revision/318\nhttp://kenai.com/projects/btrace/sources/hg/revision/319\nhttp://kenai.com/projects/btrace/sources/hg/revision/322\nthere is new functionality enabling to completely omit \"public static\" or \"private static\" modifiers. The system will infer the correct modifier according to the element and its usage. Also, the old syntax is still fully supported. In addition to that it is now possible to use shared methods from within the same script thus cutting down the verbosity even further.\n. [author=\"jbachorik\", created=\"Sat, 10 Oct 2009 19:57:25 +0200\"]\nfixed in http://kenai.com/projects/btrace/sources/hg/revision/208\n. [author=\"j.bachorik\", created=\"Fri, 8 Nov 2013 12:52:29 +0100\"]\nThis is caused by the script being started before the sysClassPath or bootClassPath arguments can take effect.\n. [author=\"j.bachorik\", created=\"Mon, 30 Jun 2014 12:16:35 +0200\"]\nThe bootstrap classpath seems to be properly set. Will need more classloading debug info before figuring out what is the real problem here.\n. [author=\"j.bachorik\", created=\"Mon, 30 Jun 2014 12:18:17 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/463\n. [author=\"j.bachorik\", created=\"Fri, 4 Jul 2014 18:14:55 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/470\n. [author=\"j.bachorik\", created=\"Sat, 12 Jul 2014 12:10:34 +0200\"]\nThe solution is to use a bounded queue - this might create a few slow-downs in the traced methods when the producer needs to wait for the consumer  to free some slots in the queue but it won't cause the whole-application slowdown to excessive Full GC cycles.\nEmpirically, a good upper bound for the queue seems to be around 100 items but a system property will be provided to be able to override this value for a particular situation (HW, OS, file system, load etc.).\n. [author=\"j.bachorik\", created=\"Sat, 12 Jul 2014 13:14:15 +0200\"]\nThe system property used to control the command FIFO queue is \"com.sun.btrace.runtime.cmdQueueLimit\".\nThe agent parameter name is \"cmdQueueLimit\" .\n. [author=\"j.bachorik\", created=\"Sat, 12 Jul 2014 14:07:32 +0200\"]\nBenchmarking Results\nLinkedBlockingQueue, 60000\n\n\nBenchmark\nMode\nSample\nScore\nScore error\nUnits\n\n\nn.j.b.BTraceBench.testSendCommand\navgt\n20\n0.263\n0.018\nus/op\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.count\navgt\n20\n0.350\n0.425\ncounts\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.time\navgt\n20\n0.505\n0.623\n%\n\n\nArrayBlockingQueue, 60000, Fair\n\n\nBenchmark\nMode\nSamples\nScore\nScore error\nUnits\n\n\nn.j.b.BTraceBench.testSendCommand\navgt\n20\n6.507\n0.445\nus/op\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.count\navgt\n20\n0.200\n0.356\ncounts\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.time\navgt\n20\n0.120\n0.216\n%\n\n\nLinkedBlockingQueue, 800\n\n\nBenchmark\nMode\nSamples\nScore\nScore error\nUnits\n\n\nn.j.b.BTraceBench.testSendCommand\navgt\n20\n0.262\n0.017\nus/op\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.count\navgt\n20\n6.850\n1.101\ncounts\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.time\navgt\n20\n0.410\n0.101\n%\n\n\nLinkedBlockingQueue, 10\n\n\nBenchmark\nMode\nSamples\nScore\nScore error\nUnits\n\n\nn.j.b.BTraceBench.testSendCommand\navgt\n20\n0.250\n0.018\nus/op\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.count\navgt\n20\n7.150\n1.137\ncounts\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.time\navgt\n20\n0.395\n0.066\n%\n\n\nArrayBlockingQueue, 10\n\n\nBenchmark\nMode\nSamples\nScore\nScore error\nUnits\n\n\nn.j.b.BTraceBench.testSendCommand\navgt\n20\n1.212\n0.014\nus/op\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.count\navgt\n20\n0.600\n0.436\ncounts\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.time\navgt\n20\n0.125\n0.129\n%\n\n\nLinkedBlockingQueue, 2\n\n\nBenchmark\nMode\nSamples\nScore\nScore error\nUnits\n\n\nn.j.b.BTraceBench.testSendCommand\navgt\n20\n6.504\n0.250\nus/op\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.count\navgt\n20\n0.250\n0.386\ncounts\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.time\navgt\n20\n0.100\n0.159\n%\n\n\nLinkedBlockingQueue, 100\n\n\nBenchmark\nMode\nSamples\nScore\nScore error\nUnits\n\n\nn.j.b.BTraceBench.testSendCommand\navgt\n20\n0.268\n0.026\nus/op\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.count\navgt\n20\n4.800\n1.795\ncounts\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.time\navgt\n20\n0.300\n0.098\n%\n\n\nLinkedBlockingQueue, 40\n\n\nBenchmark\nMode\nSamples\nScore\nScore error\nUnits\n\n\nn.j.b.BTraceBench.testSendCommand\navgt\n20\n0.267\n0.025\nus/op\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.count\navgt\n20\n6.650\n1.171\ncounts\n\n\nn.j.b.BTraceBench.testSendCommand:@gc.time\navgt\n20\n0.375\n0.089\n%\n\n\n\n. [author=\"j.bachorik\", created=\"Sat, 12 Jul 2014 14:09:09 +0200\"]\n#1dd40c308b49\n. [author=\"j.bachorik\", created=\"Wed, 30 Jul 2014 19:16:17 +0200\"]\nMy take on this would be that you are calling the offer method on java.util.Deque interface as opposed to calling it directly on java.util.LinkedList implementation class. And therefore it is not matched as the handler expects java.util.LinkedList.\nYou would have to provide an exact type the method is called on. The @Location.clazz might be extended to understand the +\" notation and match all subclasses and implementations but it would increase the time needed for processing the classes because a lot of classes would have to be retransformed right after they were initialized to make sure the supertypes/interfaces were loaded and initialized. I am not sure whether it is worth it.\n. [author=\"j.bachorik\", created=\"Mon, 21 Jul 2014 17:49:00 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/478\n. This should be handled by @OnExit\n. Please, reopen if @OnExit annotation does not handle the situation well\n. [author=\"j.bachorik\", created=\"Wed, 20 Jun 2012 17:23:12 +0200\"]\nThe patch looks ok. But before integrating it I will need you to sign the Oracle Contributor Agreement - you can find it @ http://www.oracle.com/technetwork/community/oca-486395.html\n. [author=\"marschall\", created=\"Thu, 21 Jun 2012 12:23:30 +0200\"]\nI just signed the Oracle Contributor Agreement and sent a scanned version via email.\n. [author=\"j.bachorik\", created=\"Tue, 26 Jun 2012 13:39:42 +0200\"]\nIntegrated - http://kenai.com/projects/btrace/sources/hg/revision/442\nThanks for contributing!\n. [author=\"j.bachorik\", created=\"Tue, 2 Jul 2013 16:24:02 +0200\"]\nThe fix version needs to be set\n. [author=\"jim.bim\", created=\"Thu, 11 Jul 2013 12:19:55 +0200\"]\nUm, looks as I cannot attach a patch here - I've placed it at https://docs.google.com/file/d/0BxMjVNW8bw54MmkzN0ZuUnhXMFE instead. Can someone please attach it? Thanks! \n. [author=\"j.bachorik\", created=\"Thu, 11 Jul 2013 12:23:26 +0200\"]\nAttaching the patch\n. [author=\"j.bachorik\", created=\"Thu, 11 Jul 2013 18:21:22 +0200\"]\nHi Jim,\nthanks for the patches. But you will need to sign the OCA before I can take your patches in; unless you are an Oracle employee.\n. [author=\"jim.bim\", created=\"Thu, 11 Jul 2013 18:38:28 +0200\"]\nI've sent the scan of a signed OCA to Oracle last Friday. I've no response yet, but I hope they will be able to process it soon  If it's going to help, I can forward you the e-mail so that you can follow up.\n. [author=\"j.bachorik\", created=\"Wed, 31 Jul 2013 06:28:51 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/454\n. [author=\"j.bachorik\", created=\"Tue, 2 Jul 2013 15:47:45 +0200\"]\nCould you, please, provide a sample application?\nThe behaviour seems to be rather weird and would suggest a data race when filling the map. I've tried to reproduce the problem with jetty but with no success.\nAlso, it would help if you could set the debug flag to true for the BTrace agent and attach the logfile here.\nThanks.\n. [author=\"j.bachorik\", created=\"Wed, 13 Jul 2011 20:39:43 +0200\"]\nEasily worked around running BTrace in unsafe mode. The final solution would require a bit thought put to it but it might be addressed by an extension (when extensions to BTrace are available)\n. [author=\"j.bachorik\", created=\"Wed, 21 Sep 2011 15:29:11 +0200\"]\nClass loading/resolving process improved in http://kenai.com/projects/btrace/sources/hg/revision/427\nHowever, in very special setups the problem may still persist. The only viable workaround would be using java.lang.Object as the @Self parameter type and then cast the @Self parameter in the handler code appropriately.\n. [author=\"j.bachorik\", created=\"Wed, 21 Sep 2011 15:40:11 +0200\"]\nImplemented in http://kenai.com/projects/btrace/sources/hg/revision/431\nThanks for suggestion!\n. [author=\"j.bachorik\", created=\"Wed, 21 Sep 2011 15:29:59 +0200\"]\nChange integrated - http://kenai.com/projects/btrace/sources/hg/revision/426\nThanks!\n. [author=\"j.bachorik\", created=\"Tue, 26 Jun 2012 14:32:04 +0200\"]\nYou can do that now\n\n\n/* Trace all new String allocations by class */\nimport com.sun.btrace.annotations.*;\nimport static com.sun.btrace.BTraceUtils.*;\n@BTrace\npublic class NewString {\n    @OnMethod(clazz=\"/.*/\", method=\"/.*/\", location=@Location(value=Kind.NEW, clazz=\"java.lang.String\"))\n    public static void onNewString(@ProbeClassName String pcn) {\nprintln(strcat(\"new string created by \", pcn));\n    }\n}\n\n\n. [author=\"j.bachorik\", created=\"Tue, 18 Jan 2011 23:15:59 +0100\"]\nFixed - available as dev build from http://kenai.com/projects/btrace/downloads/directory/releases%252Fdev\n. [author=\"jbachorik\", created=\"Thu, 12 Aug 2010 14:15:00 +0200\"]\nFixed - http://kenai.com/projects/btrace/sources/hg/revision/362\n. [author=\"j.bachorik\", created=\"Fri, 4 Jul 2014 18:15:08 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/469\n. [author=\"j.bachorik\", created=\"Wed, 13 Jul 2011 20:36:38 +0200\"]\nThis can be easily worked around running BTrace in unsafe mode - final solution would be provided by adding extensions to BTrace when you could invoke an arbitrary preverified extension as easy as a BTraceUtils method.\n. [author=\"j.bachorik\", created=\"Wed, 30 Jul 2014 19:20:33 +0200\"]\nI have to close this as Won't fix\nThe transitive closure of the method calls could grow pretty huge in non-trivial applications putting a lot of strain on the application resources.\nIf you need to call external methods just switch to unsafe mode - it doesn't change BTrace behavior in any other way than enabling the prohibited language constructs. \n. [author=\"j.bachorik\", created=\"Wed, 30 Jul 2014 20:36:29 +0200\"]\nThanks for the inspiration \nIndeed, the @OnProbe is broken in regards of the BTrace specific method argument annotations. I think it will be possible to fix without the need for the dummy @OnMethod annotations - by extending the OnProbe class to be able to hold the info about the annotated arguments.\n. [author=\"j.bachorik\", created=\"Wed, 30 Jul 2014 20:40:49 +0200\"]\nThis sounds pretty much like a duplicate of BTRACE-108\n. [author=\"j.bachorik\", created=\"Wed, 31 Jul 2013 07:25:22 +0200\"]\nhttps://kenai.com/projects/btrace/sources/hg/revision/457\n. [author=\"ancoron\", created=\"Thu, 21 Aug 2014 22:23:55 +0200\"]\nThe following patch fixes the problem:\n\ndiff -r 4de5f70c38f5 src/share/classes/com/sun/btrace/resources/messages.properties\n--- a/src/share/classes/com/sun/btrace/resources/messages.properties    Mon Jul 28 19:54:36 2014 +0200\n+++ b/src/share/classes/com/sun/btrace/resources/messages.properties    Thu Aug 21 22:22:01 2014 +0200\n@@ -42,7 +42,7 @@\n called-method.desc.invalid = @CalledMethod annotation applicable only for Kind.CALL\n called-instance.desc.invalid = @CalledInstance annotation applicable only for Kind.CALL\n onexit.invalid = @OnExit annotation applicable only to methods with signature (int)void\n-onexit.invalid = @OnError annotation applicable only to methods with signature (java.lang.Throwable)void\n+onerror.invalid = @OnError annotation applicable only to methods with signature (java.lang.Throwable)void\n agent.no.instance.variables=instance variables are not allowed\n agent.unsafe.not.allowed=Unsafe mode, requested by the script, not allowed\n\n\n. [author=\"ancoron\", created=\"Thu, 21 Aug 2014 22:24:52 +0200\"]\nJust saw that this is also present in the BTrace2 repo.\nBtw. why can't I attach a patch file?\n. [author=\"ancoron\", created=\"Thu, 21 Aug 2014 22:26:18 +0200\"]\nPatch for BTrace2:\n\ndiff -r dcc84e00bd79 core-api/src/main/resources/net/java/btrace/resources/messages.properties\n--- a/core-api/src/main/resources/net/java/btrace/resources/messages.properties Tue May 20 12:14:34 2014 +0200\n+++ b/core-api/src/main/resources/net/java/btrace/resources/messages.properties Thu Aug 21 22:25:24 2014 +0200\n@@ -40,7 +40,7 @@\n called-method.desc.invalid = @CalledMethod annotation applicable only for Kind.CALL\n called-instance.desc.invalid = @CalledInstance annotation applicable only for Kind.CALL\n onexit.invalid = @OnExit annotation applicable only to methods with signature (int)void\n-onexit.invalid = @OnError annotation applicable only to methods with signature (java.lang.Throwable)void\n+onerror.invalid = @OnError annotation applicable only to methods with signature (java.lang.Throwable)void\n agent.no.instance.variables=instance variables are not allowed\n\n\n. [author=\"j.bachorik\", created=\"Fri, 22 Aug 2014 09:24:57 +0200\"]\n\"More/Attach Files\" doesn't work for attaching patch files?\n. [author=\"ancoron\", created=\"Fri, 22 Aug 2014 09:52:23 +0200\"]\nI simply don't have the option to attach files here. I suspect this is some sort of security role in this JIRA.\n. Running the JMH benchmark for an empty handler method (asserting the overhead related to just switching to BTrace context) yields the following result:\n\nn.j.b.BTraceBench.testInstrumentedMethod                       avgt        17        0.031        0.000    us/op\nn.j.b.BTraceBench.testInstrumentedMethod:@gc.count             avgt        17        1.882        0.903   counts\nn.j.b.BTraceBench.testInstrumentedMethod:@gc.time              avgt        17        0.235        0.130        %\n\nMeaning that just entering and leaving an empty handler method will take cca. 30ns\n. After the optimization the JMH results are:\n\nn.j.b.BTraceBench.testInstrumentedMethod                       avgt        17        0.010        0.000    us/op\nn.j.b.BTraceBench.testInstrumentedMethod:@gc.count             avgt        17        0.000        0.000   counts\nn.j.b.BTraceBench.testInstrumentedMethod:@gc.time              avgt        17        0.000        0.000        %\n\nIn addition of getting the overhead down to 10ns it is also interesting to see the drop in the GC activity due to substantially reducing adding and removing elements to/from the ThreadLocal cache\n. Fixed by 5a41d63080b9a6972eb994b460537c6874364625  and e6c3a91fcb85cccc52146a4acb516f8c367dee52\n. The solution is to add a flush timer which will flush the stream periodically.\nBy default the flush will be performed each 5 seconds but this interval is configurable via com.sun.btrace.FileClient.flush system property.\n. It is not necessary to flush the stream for each single command. The data commands (printing out strings, numbers, maps etc.) can be delayed without the impact on the functionality. The BTrace engine commands will cause flush anyway.\n. Need to get 42c7e0c1ed89efd40fee09755f93adbbb21d0119 to compile\n. Hi Lari,\nthanks for the patch. I've already fixed this problem while working on #86 (Making the @OnProbe and XML descriptors work with annotated arguments). The fixed version is available in 'onprobe_special_parameters' branch.\nAlso, you need to sign the Oracle Contributor Agreement before I can accept your pull-request.\n. There was a temporary issue with @TLS and @Property fields but it should be ok in 1b229f87de40b5b23464f17a7a56efe56ab1a4cc - the current master. I'm adding more test coverage to catch any regression in this area.\n. Lari, I've created a new pull request #102 - along the way it also resolves #100 so I'm going to close this pull request.\nThanks for participating and keep the changes coming. You are now listed in OCA so it will be hassle-free to accept your future changes.\n. This is a case of data race in MethodInvocationProfiler.\n. You can checkout \"small_cleanup\" branch and build BTrace from sources to\ntest the change. I know, \"small_cleanup\" is probably not the best name but\nit was meant to be just that - and co-incidentally it fixes the issue you\nhave reported.\n-JB-\nOn Thu, Dec 4, 2014 at 7:56 PM, zhangyilin notifications@github.com wrote:\n\nI can help you test any change you have. (I asked the question in Kenai)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/103#issuecomment-65682836.\n. Which version of BTrace are you using?\nWhat scripts are you running against the Tomcat?\n. Firstly, the @OnMethod annotation for the entry() method should not contain the @Location(value=Kind.RETURN) part - you are trying to intercept entering the method and not returning from that method. Also, the @Duration parameter is not valid there.\n\nIf you are still getting errors even after fixing this you should gather more debug data by dumping the class bytes:\n- when running BTrace via -javaagent append dumpClasses=true,dumpDir=<where to dump the class data>\n- when dynamically attaching you'd need to modify the btrace script to set the following system properties com.sun.btrace.dumpClasses=false, com.sun.btrace.dumpDir=<where to dump the class data>\nOnce you have the class files ready you can try to attach the one for com/starcite/glcnew/rfp/util/ResponsePaladin here.\n. Long time no response. Closing.\nIf still applicable, feel free to reopen.\n. The current design is not very resilient. Will need something better.\n. Turns out that the disruptor based architecture is not very well suited to the burst-natured data we are dealing in collecting the profiling events.\nThe original architecture - a running buffer per thread, compacted occasionally + basing the snapshot on only the compacted part of the running buffer - outperforms the disruptor based one by large.\n. Fixes #109 \n. Thanks for the contribution!\nPlease, sign Oracle Contributor Agreement before this pull request may be accepted.\n. Just out of curiosity - did you sign the OCA?\n. Ping. Will you be signing the OCA? It would be shame to let this contribution waste. If I don't hear from you in a week I will be forced to close this pull request :(\n. eGit, this feature seems to be breaking class retransformation when trying to trace non-static native methods. Do you think it would be interesting to be able to trace at least static native methods?\nOtherwise I will have to remove this feature.\n. Reopening because of #140 \n. It is not possible to achieve this functionality with the current\nlimitations of the JVM class retransformation. One may need to introduce\nnew public non-native methods as wrappers for the original public native\nmethods and this is simply not possible. So I had to take it out again.\nMaybe once, when JVM gets an improved class retransformation engine.\nOn Wed, Aug 26, 2015 at 3:32 PM, eGit notifications@github.com wrote:\n\nI just wanted to test the native method tracing for the first time but now\nit is gone again?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/115#issuecomment-135021619.\n. With the current state of JVM retransform classes support it is not possible to implement this consistently - for the javaagent mode it will mostly work and for dynamic attach it will mostly not work. But it is not possible to provide any guarantees about which classes will be intercepted - it depends on whether they have already been loaded at the time BTrace is starting or not.\n. This is all caused by the classloader mismatch.\n\nBy adding the logging classes to btrace-boot.jar you are effectively loading the logging classes by the bootstrap class loader. This is so because BTraceUtils is loaded by the bootstrap classloader in order  to be accessible from eg. the core java classes.\nYour application, on the other hand, loads its own copies of the logging classes using (most probably) the application class loader (or a dedicated class loader - in case of eg. a web/enterprise app). Thanks to this you will end up with two copies - the bootstrap copy (most probably not configured, using just defaults)  used from the instrumented code, and the application level (properly configured) copy used throughout your application (non-instrumented code).\nThe only remedy I can think of is to use an accessor class which would, by the means of core reflection, check for the accessibility of the logging classes and in case they are accessible it would forward the logging calls to the logging framework. This would still require putting the logging classes on bootclasspath via -Xbootclasspath/a so the logging classes are defined by the bootstrap classloader and properly shared.\nAny other solution would require a big portion of class loading magic. But you are welcome to experiment :wink: \n-JB-\n. Hi Gregor,\nyes, you understand it correctly.\nCheers,\n-JB-\n. Hi Thomas,\nGreat to see this rolling! \nThe Travis Build is failing right now due to gradlew not being executable. Please, fix that so we can get CI results.\n. I guess the gradlew is missing gradle-wrapper.jar in the gradle/wrapper directory.\n. Nice! Travis build is passing and I tested the build system locally as well.\nHere are my comments:\n- The full build is so much faster - especially thanks to more intelligent handling of BTrace script compilation\n- BTraceFunctionalTests problem should be tracked in a separate issue - it is a more generic problem with loading the agent and then trying to connect to its socket server\n- For the benchmark subproject you need to have the btrace artifacts installed in the local repository. I wonder if you could convert it from maven based project to gradle one as well (and then defining the dependency on the btrace root project)\n- Once you implement the zip and tgz bundle generation don't forget to turn back on the S3 upload in .travis.yml\nSo far, great work, thanks!\n. Argh, I'm still rather clumsy with Git. These parts should have never gotten there. I've fixed the dependencies and the benchmark class accordingly in 'master'.\n. The benchmarks require all the dependencies on classpath when running. One needs to do it manually now or run the benchmarks from an IDE :(\nIt really doesn't make sense to distribute the benchmark binaries. It is to be used while working on the BTrace core. \nThe group ID is \"net.java.btrace\" because the \"com.sun\" package is obsolete now, when there is no Sun. The benchmark version differs from the core version because it is not really related to it but there should be no problem in syncing them if it makes more sense.\n. Thomas, so far so good. The deb packaging works nicely. The RPM packaging complains about the \"*-SNAPSHOT\" versioning. I wonder - would it be possible, in gradle, to have a rolling time stamp instead of  \"SNAPSHOT\"?\nBenchmark looks ok, although it has some problems with benchmarking the instrumented classes - all the results are 0.002us. The other benchmars (eg. ProfilerBenchmarks, StatsdBenchmarks etc.) work fine. I might take a look at it to see what is happening there.\nOnly the main project artifacts should ever be published.\n. Regarding the BTraceBench - yes that's the only part which actually benchmarks the whole chain of instrumentation.\nAbout the benchmark subproject. Is it possible to declare the source sets for it so it can be easily opened in IDE (eg. NetBeans)? Or is it supposed to take the source set definition from the parent project?\n. Thomas, IMO this pull request is ready to be merged. I'm ready when you're ready.\n. @tmohme Could you take a look at this, please?\n. I took in the suggestions. Everything builds fine on Solaris.\n. The sizeof method is using the value reported by JVM.\nAs @marschall analysis points out the WLS value might be affected by internal optimizations.\n. Fortunately for you, this is not caused by JDK 8 + OS X.\nIt is a regression in CLINIT generation code - the fix is available in verifier-error branch and will be integrated to master soon.\n. Caused by inconsistent usage of ASM4/ASM5 APIs.\nThe fix has been pushed to verifier-error branch.\n. Hi Oliver,\nthanks for the fix. But you will need to sign the Oracle Contributor Agreement before I am able to accept this pull request. Sorry for the inconvenience.\n-JB-\n. OCA has been successfully processed :) Congrats!\n. Caused by a regression in the TLS initialization generating code.\nAs a workaround you can initialize the @TLS annotated field to a value - that will prevent the NPE from occurring.\n. Are you sure you need to run on such an ancient platform?\nJDK 7 has already been EOLed (in April 2015) so moving to JDK 7 does not seem in any way premature :)\n. I'm going to close this issue. The annotation processors in JDK 7 were extremely improved over what was available in JDK 6 and this will allow BTrace to put some more advanced features to compiler/verifier. I don't want to hold back this kind of features just to keep backward compatibility with a dead platform.\nIf you really need JDK 6 compatibility you can branch/fork, update the sourceCompatibility and targetCompatibility values in build.gradle file, and fix the sources where Java 7 language features are used. In release-1.3 branch there are no JDK 7 specific features in compiler/verifier so it still can be done pretty easily.\n. I hope it is not a sensitive system :) The lack of security updates for decommissioned JDK 6 could be rather dangerous.\n. The btrace command has the following form:\nbtrace <args> <PID> <script path>\nIn your start script you are using 26515 for PID. The message you see indicates that this PID corresponds to a non-JVM process. You should use the actual PID of the JVM process you want BTrace to attach to.\nClosing for now. If you are sure you are providing a correct PID, please reopen.\n. If you are using BTrace 1.3.*  this is definitely issue with JDK 6. BTrace classes are compiled to the newer, JDK 7, format and JDK 6 can't load them. Therefore the the attempt to attach to Tomcat fails.\nI really hate repeating it but - JDK 6 is a prehistoric, non-supported runtime. A number of issues was fixed and enhancements made for BTrace to work more reliably. Given that JDK 7 has already been EOL-ed I think it might be considered to be mature enough platform.\n. Unsupported scenario. Closing.\n. Could you specify OS and JDK version you are using?\n. I am not able to reproduce the issue on the given OS and JDK.\nAfter the message 'DEBUG: checking port availability: 2020' has been printed the agent tries to connect to IP 127.0.0.1 on port 2020 to make sure that it is available. Could this be blocked by your firewall, perhaps?\nYou could try and take stack traces of the traced application when this hang happens - if there is anything wrong with the BTrace code we should able to spot it from the stack traces (thread dump).\n. Ok, try running btrace --version to check the version.\nAlso, try taking thread dump from the traced application when it hangs. It\nmight reveal some information about what is happening there.\n-JB-\nOn Wed, Jul 29, 2015 at 4:19 PM, Proofkyko notifications@github.com wrote:\n\nI created a rule on the firewall to open that port and checked logs. I\ncant find the problem. The situation mantains, Btrace will hang at checking\nport availability without root profile or the connection will be refused\nwhen called without administrator privileges.\nAny other idea ?\nFrancisco Antunes\nDate: Sat, 25 Jul 2015 13:15:57 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020 (#141)\nI am not able to reproduce the issue on the given OS and JDK.\nAfter the message 'DEBUG: checking port availability: 2020' has been\nprinted the agent tries to connect to IP 127.0.0.1 on port 2020 to make\nsure that it is available. Could this be blocked by your firewall, perhaps?\nYou could try and take stack traces of the traced application when this\nhang happens - if there is anything wrong with the BTrace code we should\nable to spot it from the stack traces (thread dump).\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/141#issuecomment-125966123.\n. Would you try to take thread dump?\n\nIt is really difficult to diagnose the issue especially if I am not able to\nreproduce it.\n-JB-\nOn Wed, Jul 29, 2015 at 4:49 PM, Proofkyko notifications@github.com wrote:\n\nVersion is 1.3.1. It hangs always at the same place,\nDEBUG: checking port availability: 2020.\nI am running out of ideas and Btrace still does not run\nFrancisco\nDate: Wed, 29 Jul 2015 07:37:33 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020 (#141)\nOk, try running btrace --version to check the version.\nAlso, try taking thread dump from the traced application when it hangs. It\nmight reveal some information about what is happening there.\n-JB-\nOn Wed, Jul 29, 2015 at 4:19 PM, Proofkyko notifications@github.com\nwrote:\n\nI created a rule on the firewall to open that port and checked logs. I\ncant find the problem. The situation mantains, Btrace will hang at\nchecking\nport availability without root profile or the connection will be refused\nwhen called without administrator privileges.\nAny other idea ?\nFrancisco Antunes\nDate: Sat, 25 Jul 2015 13:15:57 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020 (#141)\nI am not able to reproduce the issue on the given OS and JDK.\nAfter the message 'DEBUG: checking port availability: 2020' has been\nprinted the agent tries to connect to IP 127.0.0.1 on port 2020 to make\nsure that it is available. Could this be blocked by your firewall,\nperhaps?\nYou could try and take stack traces of the traced application when this\nhang happens - if there is anything wrong with the BTrace code we should\nable to spot it from the stack traces (thread dump).\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/141#issuecomment-125966123.\n\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/141#issuecomment-125976835.\n. You can use either VisualVM ('jvisualvm' command from the JDK installation)\nwhere you can 'open' the application and create the thread dump. You can\nthen copy-paste the thread dump here.\n\nOther possibility is to use 'jstack' (command line utility) on the\napplication and capture the output (either redirect it to a file or\ncopy-paste from the terminal)\n-JB-\nOn Wed, Jul 29, 2015 at 5:17 PM, Proofkyko notifications@github.com wrote:\n\nOk I am looking to thread dump and I am nem to this. What am I looking for\n?\nNo dia 29/07/2015, \u00e0s 16:07, Jaroslav Bachorik notifications@github.com\nescreveu:\n\nWould you try to take thread dump?\nIt is really difficult to diagnose the issue especially if I am not able\nto\nreproduce it.\n-JB-\nOn Wed, Jul 29, 2015 at 4:49 PM, Proofkyko notifications@github.com\nwrote:\n\nVersion is 1.3.1. It hangs always at the same place,\nDEBUG: checking port availability: 2020.\nI am running out of ideas and Btrace still does not run\nFrancisco\nDate: Wed, 29 Jul 2015 07:37:33 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020\n(#141)\nOk, try running btrace --version to check the version.\nAlso, try taking thread dump from the traced application when it\nhangs. It\nmight reveal some information about what is happening there.\n-JB-\nOn Wed, Jul 29, 2015 at 4:19 PM, Proofkyko notifications@github.com\nwrote:\n\nI created a rule on the firewall to open that port and checked logs.\nI\ncant find the problem. The situation mantains, Btrace will hang at\nchecking\nport availability without root profile or the connection will be\nrefused\nwhen called without administrator privileges.\nAny other idea ?\nFrancisco Antunes\nDate: Sat, 25 Jul 2015 13:15:57 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020\n(#141)\nI am not able to reproduce the issue on the given OS and JDK.\nAfter the message 'DEBUG: checking port availability: 2020' has been\nprinted the agent tries to connect to IP 127.0.0.1 on port 2020 to\nmake\nsure that it is available. Could this be blocked by your firewall,\nperhaps?\nYou could try and take stack traces of the traced application when\nthis\nhang happens - if there is anything wrong with the BTrace code we\nshould\nable to spot it from the stack traces (thread dump).\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/jbachorik/btrace/issues/141#issuecomment-125966123>.\n\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/141#issuecomment-125976835.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/141#issuecomment-125985468.\n. This would really indicate problems with firewall - https://kenai.com/projects/btrace/forums/forum/topics/542685-Connection-refused-connect\n\nIn BTrace a plain socket connect is executed - there is no reason for 'connection refused'.\nWhat if you temporarily turn off the firewall?\n. Long time no response. Closing.\n. I think you can merge a93afde and 3e56b6b\nAdd a shutdown hook for the com.sun.btrace.agent.Client - you can access the associated BTraceRuntime instance from there to call 'handleExit()' and use an overridable protected method to allow the FileClient to flush its output stream before exiting the process.\nAnd you still can remove the shutdown hook handling from com.sun.btrace.agent.Main\n. Yes, I would prefer having it simplified.\nIf you keep multiple shutdown hooks it will make it much harder to maintain and eg. you would be calling rt.handleExit() twice for each socket connected client.\n. Thanks!\nOn Thu, Aug 27, 2015 at 5:04 PM, Martin Filser notifications@github.com\nwrote:\n\nOk. I try it tomorrow\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/pull/146#issuecomment-135462189.\n. Fix integrated.\n\nMartin, thanks for contributing!\n. First of all - thanks for contributing!\nWe need to support JDK 7 in BTrace. Therefore we are not using any JDK 8 lang constructs. I think you can adapt the patch to support JDK 7 quite easily.\nAlso, this pull request seems to be intermingled with the changes for your other pull request #146 - this might make it unnecessary complicated when merging.\nAnd, at the end - before accepting any pull requests I need you to read, understand and sign the Oracle Contributor Agreement.\n. Regarding OCA - I am an Oracle employee and therefore all my contributions\nare considered as covered by OCA.\nShortly - by signing OCA you are basically transferring the rights to your\ncontributions to Oracle. Oracle, in turn, will give you the legal\nprotection in all the copyright/patent issues regarding your contributions.\nI would recommend reading the OCA thoroughly before signing so you are sure\nyou agree with the implications.\nOn Sun, Aug 23, 2015 at 1:45 PM, Martin Filser notifications@github.com\nwrote:\n\nHello jbachorik,\ni will change the code to support JDK7 and rebase it to current master\nbranch without commits of #146\nhttps://github.com/jbachorik/btrace/pull/146.\nOne question about the Oracle Contributor Agreement. I have looked the\nlist, but i can't find your name on it. So why is it necessary to sign the\nOCA? What disadvantage do i have when i sign it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/pull/147#issuecomment-133820197.\n. I don't think there would be any other OCA version than english :(\n. No specific coding style - we were following the code conventions used in\nOpenJDK development. Unfortunately, the document is not available anymore.\n\nThe checkstyle.xml sounds as a good idea to implement (although not readily\navailable, too).\nOn Thu, Aug 27, 2015 at 11:57 PM, Martin Filser notifications@github.com\nwrote:\n\nIs there a coding style available for the btrace project?\nOr the best would be to have a checkstyle.xml for the coding style. Maybe\nyou have something like that?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/pull/147#issuecomment-135566844.\n. There might be race when running the external JVM test app and attaching to\nit. Can't reproduce it locally, though :(\n\nOn Fri, Aug 28, 2015 at 1:09 PM, Martin Filser notifications@github.com\nwrote:\n\nDone. Why does sometimes the test\ncom.sun.btrace.BTraceFunctionalTests > testOSMBean FAILED\n    java.lang.AssertionError at BTraceFunctionalTests.java:58\nfail on travis-ci.org?\nI did again a push after a git commit --amend and then the tests is\ncompleted without errors...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/pull/147#issuecomment-135742584.\n. Branch integrated.\n\nMartin, thanks a lot for contributing!\n. What do you see when you do echo $JAVA_HOME ?\nOn Wed, Aug 19, 2015 at 7:07 AM, AbhishekPuligundla \nnotifications@github.com wrote:\n\nI am trying to run the btrace from the command prompt but it is asking me\nto set the JAVA_HOME before running the file. But i have already mentioned\nthe path of java in environment variables. please tell me how to set and\nrun btrace from command prompt.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/148.\n. First of all, you need to provide the exact exception you are getting.\nPreferably with the associated stack trace.\n\nSecond of all, while you can do this it is not very advisable. In theory it\nshould work fine but since you are retransforming a large number of\nclasses, among them many of the core java classes, there is a lot of space\nfor something to go wrong.\nOn Thu, Aug 20, 2015 at 10:24 AM, AbhishekPuligundla \nnotifications@github.com wrote:\n\nthe btrace contains the following code with int the class\n@OnMethod(clazz=\"/./\". method=\"/./\")\npublic static void methodname(@Self https://github.com/Self Objec obj,\n@ProbeClassName String obj1, @ProbeMethodName String obj2)\n{\nprintln(obj1);\nprintln(obj2);\n}\nare we not supposed to use the \"/.*/\" for the clazz in OnMethod, as i was\ntrying to access all the classes which are running in my application or\nprogram.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/149.\n. Can't really do anything about it until you provide the exception stacktrace.\nPlease, reopen once the stacktrace is available.\n. You can use btracer to run a jar with main class, too.\nSee btracer guide https://github.com/jbachorik/btrace/wiki/btracer for\ndetails.\n\nOn Thu, Aug 20, 2015 at 10:28 AM, AbhishekPuligundla \nnotifications@github.com wrote:\n\nHi, i am running the tracing from the command prompt using btracec and\nbtracer. I would like to know if there is a way to run the .jar file using\nbtrace tool from command prompt. The syntax of the btracer shows that it\nwould require the .class file of the mainclass program.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/150.\n. The output is by default directed to the folder containing the compiled script.\nYou can override this by btracer -o <output file> ...\n. Ok. This seems to be caused by instrumenting classes required during BTrace startup.\n. You will need to know the package names contained in the jar. With the\nsettings you are using you are tracing the whole JDK.\n\nOnce you know the package names you can do eg. @OnMethod(clazz=\"/<regex to\nmatch packages>/\", method=\"/.*/\")...\nOn Mon, Aug 24, 2015 at 1:42 PM, AbhishekPuligundla \nnotifications@github.com wrote:\n\nso what should i do, if i remove the above statement it works fine, but i\nwant to trace all the files that exist within a package or a program or a\njar file. how can i trace all class with in a singale package name with out\nusing the statement @OnMethod(clazz=\"/./\",method=\"/./\").\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/154#issuecomment-134163319.\n. This one is pretty easy - @OnMethod(clazz=\"/com\\\\.mypackages\\\\.*/\",\nmethod=\"/.*/\") should do the trick\n\nOn Mon, Aug 24, 2015 at 2:36 PM, AbhishekPuligundla \nnotifications@github.com wrote:\n\nSay that i have three class in the package com.mypackages then how should\ni be able to trace each class when the object of those classes are created\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/154#issuecomment-134177467.\n. There shouldn't be any difference between various OSes.\n\nI tried to reproduce it on Ubuntu but I can not see any problems. Try to run btracer --stdout ... to see whether the script is accepted at all.\n. Closing this. If you are sure that the script you are trying to run is correct (eg. it compiles), please, reopen.\n. I really don't get what you are trying to achieve.\nBut if you want to trace your web application you can use this @OnMethod(clazz=\"your.app.package\", method=\"/.*/\") to get info about all the method calls from a particular package.\n. As any other application. You can either modify the tomcat server startup scripts to include btrace agent or attach dynamically. There is no special way how to use btrace for tomcat.\n. Please, see the BTrace Wiki for the details.\n. You can not use the precompiled traces (.class) when dynamically attaching\nBTrace (using the btrace <PID> ... command). You must use the source\nversion (.java)\nEdited: Wiki speaks about the possibility to use '*.class' files too but I am pretty sure currently the client doesn't support it.\nOn Thu, Aug 27, 2015 at 2:14 PM, AbhishekPuligundla \nnotifications@github.com wrote:\n\nif I use the command btrace in command prompt like \"btrace 1345\ntracefile.class\". Where can I find the tracing output. I didn't find any on\nthe command prompt.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/157#issuecomment-135403932.\n. Please, see this issue about the problem of submitting precompiled traces.\n. First, try running btrace -p <port number> <pid> <tracefile> with an available port.\nIf it still does not work, try running btrace in verbose mode - btrace -v ... and post the logs here.\n. Long time no response. Closing.\nIf you can reproduce the problem even with a custom port, please, reopen.\n. The proposed solution is to default to all methods if the method argument is not specified and introduce a new notation method = \"#\" to enable the shortcut matching based on the handler name.\n. This one is pretty weird. The value on stack was created by directly instantiating either PersonA or PersonB. Regardless, the verifier thinks its type is java.lang.Object\n\nI will need more time to analyze this failure.\nThanks for reporting!\n. I seem to have found it.\nASM is using 'common superclass' when calculating stack frame maps. In this case it needs to get the common superclass of 'PersonA' and 'PersonB' at a moment when neither of those has been loaded. This leads to using 'java.lang.Object' as the type in the stackframe map for the local variable holding the return value and this verification error.\nFixing this will be pretty tough - the only option would be detecting this situation, not instrumenting the class at the moment it is being loaded and injecting a custom  block to trigger instrumentation when the class and all the dependencies have already been loaded.\n. It is a shortcoming of the stack frame map generation algorithm. It is working fine for javac when you have all the classes available. For the runtime bytecode manipulation it is pretty unwieldy :(\nFix will be pretty complicated, if at all possible. I will need some time to ponder different approaches.\n. @OnError annotated handler must be a public static method with the following signature: void (java.lang.Throwable t)\nThe example you provided is not compilable in BTrace and btracec should report error.\n. No, currently there is no support for remote tracing in the command line client.\nIf you think it is interesting feature, please, file an appropriate feature request with detailed description.\n. I wonder whether you can share the script causing this behavior?\n. I can't reproduce the problem.\nWhen I do the following\n1. Compile a BTrace script - it will be stored in <compiled_script>.class location\n2. Run 'btracer <compiled_script>.class -jar <my_app.jar>'\nI get the complete output captured in <compiled_script>.class.default.<timestamp>.btrace file.\n. Any progress on this? Have you tried the steps I described?\n. Anything on kenai.com is obsolete. Use GitHub BTrace Release Page to download a recent BTrace build.\n. #139 is about trying to use BTrace 1.3.* on JDK 6.\nYou are saying that you are using JDK 7 on both the server and the client, aren't you?\n. Ok, can you actually verify that you are using JDK 7 for the traced application? Eg. run VisualVM and check the JVM details.\n. The Attach API used by BTrace is pretty sensitive to access rights. See these search results mentioning this problem.\n. Could you provide the BTrace version and possibly the script causing this failure?\n. Can you verify that the tomcat is running under the same user you are using when attaching with BTrace?\n. Could you reply, please? Otherwise I will close this issue.\n. Once you see the 'DEBUG: accepting port 2024' message can you telnet to\nport 2024 on the machine the tcserver is running on?\nThis looks like a firewall blocking communication - BTrace client simply\ncan not create connection to port 2024.\nOn Fri, Sep 18, 2015 at 2:07 PM, AbhishekPuligundla \nnotifications@github.com wrote:\n\ni want to trace a application which is run by using a tcserver. But it is\nnot allowing the btrace to connect with the port. Normal tomcat\napplications are being traced but the application which use tcserver is not\npossible to trace. #168 https://github.com/jbachorik/btrace/issues/168\nis the type of error i am getting when i try to trace the application with\ntcserver.\nI tried to print the debug information while running the applicaiton and i\nam getting the following result\nDEBUG: accepting port 2024\nDEBUG: assuming default classpath '.'\n.\n.\n.\n.\nDEBUG: loaded /usr/java/btracebin/build/btrace-agent.jar\nDEBUG: registering shutdown hook\nDEBUG: registering signal handler for SIGINT\nDEBUG: submitting the BTrace program\nDEBUG: opening socket to 2024\nDEBUG: server not yet available; retrying ...\nDEBUG: server not yet available; retrying ...\nDEBUG: server not yet available; retrying ...\nDEBUG: server not yet available; retrying ...\nDEBUG: server not yet available; retrying ...\nDEBUG: server not yet available; retrying ...\nDEBUG: server not yet available; retrying ...\nDEBUG: server not yet available; retrying ...\n.\n.\n.\n.\n.\n.\n.\nDEBUG: server not yet available; retrying ...\nDEBUG: server not yet available; retrying ...\nDEBUG: server not yet available; retrying ...\nDEBUG: server not yet available; retrying ...\nException in thread \"main\" java.lang.NullPointerException\nat com.sun.btrace.client.Client.submit(Client.java:353)\nat com.sun.btrace.client.Main.main(Main.java:189)\nDEBUG: sending exit command\nException in thread \"Thread-0\" java.lang.IllegalStateException\nat com.sun.btrace.client.Client.send(Client.java:458)\nat com.sun.btrace.client.Client.sendExit(Client.java:392)\nat com.sun.btrace.client.Main$2.run(Main.java:226)\nat java.lang.Thread.run(Thread.java:745)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/169.\n. Any luck with telneting to BTrace port?\n. Well, this is simple. 'tools.jar' is implementation dependent so using a\nversion which does not come with the JVM you are trying to attach to might\ncause problems.\n\nOn Mon, Sep 28, 2015 at 6:42 AM, AbhishekPuligundla \nnotifications@github.com wrote:\n\nI find that the inbuilt tomcat application itself as a jre which is\ndifferent from the system java and so when trying to attach btrace agent ,\nthe btrace is looking for tools.jar file in the jre of the application\nrather than using the system. so i just added the tools.jar file in the\nrespective path and it's working. i would like to ask why btrace is not\nusing the tools.jar of the system and looking for the tools.jar file in the\napplication jre.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/169#issuecomment-143640447.\n. @bvanders No, it's not currently possible. Please, open an enhancement issue for this - shouldn't be that difficult to implement.\n. @moonlitSpider The mention of OSGI server is new here - that may very well be causing the problems. You need to configure the OSGI container to play nicely with BTrace - see this gist\n\nThe BTrace version you are using is rather old - the current version is 1.3.6 so you might try that one.\nRegarding the port - BTrace socket server is by default running on port 2020. I assume the 2024 value must be a remnant of someones customized setup?\n. You can always use https://github.com/btraceio/btrace/releases/latest to\nget the latest released version.\nOn Thu, May 5, 2016 at 3:32 AM, moonlitSpider notifications@github.com\nwrote:\n\nAh, never mind; thanks. I found it at\nhttps://github.com/btraceio/btrace/releases/tag/v1.3.6\nI will try again with this version.\nCordially,\nPaul\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/btraceio/btrace/issues/169#issuecomment-217055043\n. On May 6, 2016 2:07 PM, \"moonlitSpider\" notifications@github.com wrote:\nOne more thing, I am able to monitor this Virgo application using plain\nold JVisualVM.\nDoes this fact illuminate things at all?\nThanks for your help.\n-Paul\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/btraceio/btrace/issues/169#issuecomment-217423401\n. No. The version of the compiled class does not play any role. The only requirement is that a tools.jar compatible with the target application. This is usually true when you run your application on full JDK instead of JRE (eg. using $JAVA_HOME/bin/java instead of $JAVA_HOME/jre/bin/java)\n. \"clazz\" parameter should allow for regular expressions - it does so for eg. FIELD_GET, FIELD_SET or NEW locations.\n. It's extremely difficult to tell what is going wrong just from a very vague description. As I asked you several times, include the BTrace script causing this and, if possible, also the source of the class the instrumentation of which invokes this error.\n. There are two issues intermingled in this report:\n1. Matching a @Return parameter for primitive types is broken - it is causing the shown NPE\n2. The verifier is not clever enough to recognize the multiple declaration of @Return parameter - it will accept only the last parameter and all the previous parameters will behave as if unannotated - eg. accepting the calling parameters of the traced method.\n. BTraceUtils.printFields(obj) will print all the declared fields of the instance regardless of their visibility or the declaring class. You can prefix the fields with the declaring class name by calling BTraceUtils.printFields(obj, true).\n\nAs for the second part of your question - if you want to print all the passed arguments you need to use AnyType[] args in the probe handler.\n@OnMethod(...)\npublic static void handler(AnyType[] args) {\n    BTraceUtils.println(\"method arguments:\");\n    BTraceUtils.printArray(args);\n}\n. Multiple @Return annotations do not make sense. You will always have at most one return value from a method.\nYou can use @Return AnyType ret in order to match any type. Unfortunately, this will not match primitive types right now. I will have to investigate whether AnyType can be extended to match primitive types too.\n. Can't really make anything out from the description. What is the internal error, does it generate hs_err_* file? What is the script you are using? Which JDK is used?\nIf you see a VM crash it will most likely be a problem in JVM - unless you are using BTrace in unsafe mode. But until I get more information I really can't tell what is happening. \n. This is weird - usually, when JVM dies with 'internal error has occurred ...' message the corresponding hs_err_* file should be generated. It would contain all the necessary information for diagnosing the crash.\nIf BTrace engine were to crash you would get the standard exception stacktrace in the app output.\nNot much information to start with, unfortunately.\nAs the first step, try increasing the maximum perm size (-XX:MaxPermSize=200m) to rule out out-of-memory condition due to massive class retransformation.\n. Aren't you, by any chance, copying external tools.jar to your application (as you mentioned in a different issue)?\n. Ok, this might explain the crash. By copying over tools.jar from a different jar you are asking for troubles. This is not a supported scenario. You should better start your application on a full JDK instead of just JRE - in that case an appropriate tools.jar will be available.\n. Try\n@OnMethod(clazz=\"SecondClass\",method=\"/./\",location=@Location(value=Kind.NEW,clazz=\"/./\",where=Where.AFTER ))\npublic static void traceMethod123456(@Self Object obj, @TargetInstance newInstance, String instanceclassname) {\n    println(\"New Class: \" + instanceclassname);\n    printFields(newInstance, true);\n}\nIf I understand correctly what you are trying to achieve this should do it.\n. Sorry, my bad, should have been\n@OnMethod(clazz=\"SecondClass\",method=\"/./\",location=@Location(value=Kind.NEW,clazz=\"/./\",where=Where.AFTER ))\npublic static void traceMethod123456(@Self Object obj, @Return Object newInstance, String instanceclassname) {\n    println(\"New Class: \" + instanceclassname);\n    printFields(newInstance, true);\n}\nI should enhance the location Kind enumeration with javadocs with allowed parameter annotations and their meaning in the context of each location. Also, the verifier outputs a confusing message using obsolete annotation name and obsolete location restrictions. All of this will need to be fixed.\n. It turns out that java verifier does not like passing around an instance without calling its constructor first. \nTracked in #183 \n. Javadocs improvements - 16bf8a0\nVerifier messages fix      - e3aee8d\n. This is a different mode of failure. Does the application actually crash or is it just BTrace?\nAnything interesting in the application log?\nIf you are attaching dynamically use btrace -v -d <dump_class_dir> ...  to get more verbose output from BTrace and also to dump the instrumented classes into 'dump_class_dir'. When you have this debug info ready, please, zip it and attach the archive here.\n. Application log should contain many lines prefixed with \"DEBUG:\". If it does not, try restarting the application to prune an old BTrace agent. Currently it is not possible to change the debug level on the fly, unfortunately.\n. Normally, you should have something like this in your application log:\nbtrace DEBUG: debugMode is true\nbtrace DEBUG: unsafeMode is false\nbtrace DEBUG: dumpClasses is false\nbtrace DEBUG: probe descriptor path is .\nbtrace DEBUG: parsed command line arguments\nbtrace DEBUG: Bootstrap ClassPath: .\nbtrace DEBUG: ignoring boot classpath element '.' - only jar files allowed\nbtrace DEBUG: System ClassPath: /opt/java/64bit/jdk1.8.0_40/jre/../lib/tools.jar\nbtrace DEBUG: stdout is false\nbtrace DEBUG: starting agent thread\nbtrace DEBUG: starting server at 2020\nbtrace DEBUG: waiting for clients\nbtrace DEBUG: client accepted Socket[addr=/127.0.0.1,port=49198,localport=2020]\nbtrace DEBUG: got instrument command\nbtrace DEBUG: verifying BTrace class\nbtrace DEBUG: verified 'Trace' successfully\nbtrace DEBUG: created class filter\nbtrace DEBUG: preprocessing BTrace class Trace\nbtrace DEBUG: preprocessed BTrace class Trace\nbtrace DEBUG: creating BTraceRuntime instance for Trace\nbtrace DEBUG: created BTraceRuntime instance for Trace\nbtrace DEBUG: removing @OnMethod, @OnProbe methods\nbtrace DEBUG: removed @OnMethod, @OnProbe methods\nbtrace DEBUG: sending Okay command\nbtrace DEBUG: client Trace: got com.sun.btrace.comm.OkayCommand@3fd030f7\nbtrace DEBUG: about to defineClass Trace\nbtrace DEBUG: defineClass succeeded for Trace\nbtrace DEBUG: starting client command handler thread\nbtrace DEBUG: new Client created com.sun.btrace.agent.RemoteClient@5617e729\nbtrace DEBUG: filtering loaded classes\n...\nbtrace DEBUG: added as ClassFileTransformer\n...\nbtrace DEBUG: calling retransformClasses (1 classes to be retransformed)\n...\nbtrace DEBUG: skipping transform for BTrace class com/sun/btrace/BTraceUtils$Strings\n...\nbtrace DEBUG: client Trace: instrumenting SecondClass\n...\nbtrace DEBUG: waiting for clients\nbtrace DEBUG: client Trace: got com.sun.btrace.comm.OkayCommand@2f7f9bcc\nVerification errors caused by BTrace instrumentation should not prevent these debug messages to be written to the log file. Also, the instrumented classes should be properly written to the provided location. This seems like some interference between Spring AOP and BTrace but without the instrumented classes to inspect it is really difficult to tell what is going on.\n. Unfortunately, it is not possible to prune the btrace agent from a running application. In general, it is not possible to unload a JVM agent after it has been loaded. However, BTrace agent might be improved to enable changing eg. the verbosity or debugging levels even after it has been started.\nFor the second part of your question - I don't think the database connection is the culprit here. What could be seen in the previous info was that each transaction was rolled back due to the verification errors of the Spring dynamic proxies instrumented by BTrace.\n. No, unfortunately, it is not supported by the Attach API in JVM. Once you load an agent it stays loaded. \nWe are loading the BTrace agent just once - the subsequent attempts to trace an application will check for the agent being loaded and if it is they will reuse it.\nFrom the log snippet it is not really possible to tell why BTrace stops - one of the possible reasons might be that the instrumentation is very complex and it will take long time to retransform all the affected classes. Other possibility is hitting the permgen limit (if you are running on JDK 7). Let me test this locally and I will get back to you.\n. BTrace does not know anything about Spring specific instrumentation. It is using JVM agent and registers itself as a class transformer (I suspect Spring does something similar).\n. No, BTrace directly modifies the bytecode of the affected methods. This doesn't exclude the possibility of Spring proxying BTrace modified classes or vice versa.\n. Since clazz=\"/<regular expression>/\" you are free to put there any regular expression and build rather sophisticated filters. The same goes for the method=/.../. Note the opening and closing / which designates the attribute value as a regular expression.\n. Read about regular expressions - http://www.regular-expressions.info/\nGoogle is your friend.\n. If anybody is using BTrace to instrument a Spring based application it would be nice if you could chime in here.\n. Closing due to inactivity and irreproducibility.\n. BTrace will try and detect tools.jar also in ../lib/tools.jar. This should help if you are trying to trace an application running on a JRE. Of course this is based on the expectation that the appropriate JDK is installed in the parent folder of the used JRE.\nLinking a foreing tools.jar might cause unexpected problems. Is it really needed?\n. Hm, let me check. The code to look for ../lib/tools.jar is definitely there. It might be that JAVA_HOME contains a wrong value when BTrace client is processing it.\n. What is the operating system?\nThis works pretty well locally on my Linux machine.\n. @bvanders Any progress on this?\n. @bvanders Any progress on this?\n. You mean when using BTrace client to attach dynamically?\n. @joachimhs For the agent you can use traceOutputFile parameter to specify where the output should go. Not exactly outputDir but it can get you pretty far.\nI have a prototype ready (https://github.com/jbachorik/btrace/tree/remote-output-file) for supporting the -o option when attaching dynamically - I suppose it does make sense to turn off printing the output in the BTrace console when an output file is specified. Kepping it on would basically double the IO requirements for the BTrace output I don't think it is reasonable to pay that price.\n. There was a problem with dependencies. It is fixed now on VisualVM update center.\n. Could you clarify the request? Do you want to trace only 'void' returns or all returns, including 'void'?\n. There is a proposed solution in https://github.com/jbachorik/btrace/tree/anytype-void-return branch.\nIn order to trace only void returning methods you will need to declare the @Return parameter to be of java.lang.Void type - \n@OnMethod(clazz = \"cls\", method = \"mthd\", location = @Location(Kind.RETURN))\npublic static void dotrace(@Return Void dummy) {\n...\n}\nPlease, verify whether this resolves your problems.\n. @yburkouski Are you fine with the proposed solution?\n. Please, make sure that you are really running version 1.3.4 - the output of btrace --version should be 'BTrace v.1.3.4 (20151107)'\nI am not able to reproduce on a freshly downloaded 1.3.4 release.\nIf you can reproduce the problem, run btrace with -d  parameter to dump the probe class and instrumented classes to  and attach the dumped classes here.\n. Closing because of no response.\nFeel free to reopen with more information.\n. This is really weird.\nPlease, checkout the 'btrace' repository afresh and switch to 'realease-1.3' branch. After that do \n./gradlew clean build\n. Build log from a fresh clone - btrace_build.txt\n. If you try following the links in your browser, do they work?\nAlso, did you clone BTrace to a new destination?\n. Closing. If you reproduce this with a fresh BTrace clone, please, reopen with all the logs.\n. It is an OSGI issue. Please, refer to this thread.\n. This would be possible. The @ProbeMethodName annotation would have to be extended with a new boolean attribute eg. showAccess to turn this on.\n. :+1:\n. :+1:\n. Ok, I'll take a look. The super-type resolution is very tricky if you don't want to load the whole application during startup :/\n. Sorry, my bad. Should have used LinkedHashSet and used a plain HashSet instead - doing that removes all bets on the order of supertypes and screws up calculating frames :/\n. On windows 'btracec.bat' should be called. It seems like the gradle script does not select the correct binary and always goes to 'btracec' which will not work on windows.\n. I don't have Window 10 available - could you modify the build script to print out the 'os,family' system property? Currently it checks for 'windows' to take the windows-specific branch. I suspect that in Windows 10 the property will contain some different value.\n. Your class is  TracingScript but it is in file ThreadSleep.java\n'javac' is expecting ThreadSleep.java containing the ThreadSleep class. Unable to find it, it fails.\n. I see. So the problem is missing javac error messages.\n. I might be missing something but this sounds as a generic JVM question - and more suitable for asking on eg. StackOverflow.\nAnyway, try using '-verbose:class' JVM argument when starting your application - this will log all class load events with many details.\n. Could you share the probe code and BTrace version?\nUsing AllMethods.java from the samples collection against BTrace 1.3.6 does not reproduce the problem.\n. Thank you for providing the details. Indeed, using new Properties() in your tracing code should throw verifier error - one of the limits imposed by BTrace is that you can not create new instances directly.\nThe problem is that the on repeated re-deploy one part of the BTrace probe that is loaded is renamed to prevent name clashes (classes loaded by bootstrap class loader will not get unloaded) and the verifier didn't take this into account after the latest changes in the internal probe representation code.\nFix is trivial and I will add redeploy scenario to the set of functional tests to capture similar problems early.\n. Reviewed 1 of 3 files at r1.\nReview status: 1 of 3 files reviewed at latest revision, 2 unresolved discussions.\n\nComments from Reviewable\n Sent from Reviewable.io \n. Review status: 1 of 3 files reviewed at latest revision, 2 unresolved discussions.\n\nsrc/share/classes/com/sun/btrace/agent/TraceOutputWriter.java, line 152 [r1] (raw file):\nIt has probably something to do with the otuput file name templates. \n\nComments from Reviewable\n Sent from Reviewable.io \n. Reviewed 2 of 2 files at r2.\nReview status: all files reviewed at latest revision, 2 unresolved discussions.\n\nComments from Reviewable\n Sent from Reviewable.io \n. This is caused by the verifier still relying on Java 6 APIs mostly and missing the fact that Sys.Memory is an inner class of BTraceUtils. For an immediate remedy one can simply use BTraceUtils.Sys.Memory.getMemoryPoolUsage(). A long term fix is to use the Java 7 javax.lang.model.element API  which can provide much more precise data.\n. You need to run the app on a full JDK.\n. On May 6, 2016 8:46 PM, \"moonlitSpider\" notifications@github.com wrote:\n\nNot sure I follow.\nI create a jar file & run it outside of the eclipse environment.\nThat is, I am running \"java -jar\" where the java command is in the bin\ndirectory of the JDK distro.\nSo I am running the app on full JDK, no?\n\nNot necessarily. Eg. on ubuntu only JRE is installed by default and you\nmust specifically install JDK.\nAbout your second problem - File.createFile() method takes no argument.\nYour onmethod probe, on the other hand, is trying to match\nFile.createFile(string) and that does not exist. You will need to use @Self\nannotated parameter to get hold of the File instance and extract the\nfilename from there. Please, refer to the samples to see the @Self usage.\nCheers,\n-JB-\n\nThank you.\nOn May 6, 2016, at 2:27 PM, \"Jaroslav Bachorik\" notifications@github.com\n<mailto:notifications@github.com> wrote:\nYou need to run the app on a full JDK.\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub<\nhttps://github.com/btraceio/btrace/issues/224#issuecomment-217522017>\nCATALOGIC SOFTWARE, ATTENTION::----- The information contained in this\nmessage (including any files transmitted with this message) may contain\nproprietary, trade secret or other confidential and/or legally privileged\ninformation. Any pricing information contained in this message or in any\nfiles transmitted with this message is always confidential and cannot be\nshared with any third parties without prior written approval from Catalogic\nSoftware. This message is intended to be read only by the individual or\nentity to whom it is addressed or by their designee. If the reader of this\nmessage is not the intended recipient, you are on notice that any use,\ndisclosure, copying or distribution of this message, in any form, is\nstrictly prohibited. If you have received this message in error, please\nimmediately notify the sender and/or Catalogic Software and destroy all\ncopies of this message in your possession, custody or control.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\n. On May 6, 2016 10:36 PM, \"moonlitSpider\" notifications@github.com wrote:\nHmm....got it working:\npublic class HelloWorld {\n@OnMethod(clazz=\"java.io.File\",method=\"createNewFile\")\npublic static void onNewFileCreated(@Self java.io.File file) {\nBTraceUtils.println(\"New file is being created\");\nBTraceUtils.println(file);\n}\n}\nBut it's not clear to me why the 2nd println prints the name of the file\nI am creating. I mean, that's what I wanted to see, but I don't understand\nwhat's going on under the covers. Put otherwise, how is the variable 'file'\nbeing interpreted by btrace?\n\nThis one is trivial. The value is implicitly converted to string, calling\nthe instance toString() method. Coincidentally, the string representation\nof a File instance is its name. Please, be aware that this implicit\ntoString() call in BTrace is applied only to classes from rt.jar (a bit of\nsimplification, but generally true).\n-JB-\n\nThanks again.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\n. A good place to start is the wiki. I know it's not a step-by-step tutorial but should explain everything necessary to start.\n. Well, I was the 'champion' since Sundar (the original author) moved to other, more interesting to him, projects. If I remember well I was the maintainer of BTrace since 2009.\n\nThe main reason for the lacking documentation is the fact that I was working on it only during my free time and when I had a chance I better invested that time into fixes, improvements and new features. Basically it is the curse of hobby open source projects - nobody really feels like contributing to docs.\nActually, I did prepare a step-by-step tutorial to start with BTrace but it was paid for by a 3rd party company so I need to clear with them first before I put it anywhere in open.\nRegarding Kenai - it's been mostly zombified since I moved the project to GitHub. Kenai forge was left dead by Oracle, moving back to java.net was problematic, mostly because there once were such a project (before moving to 'progressive' kenai.com) and the java.net support stuff was also cut down. \nAfter doing a small survey I moved the project to GitHub. Probably a wise decision considering that java.net is being discontinued as we are speaking.\n. IMO, this part 'then it figures out what resource they're waiting for' is almost impossible to get done in pure java reliably. You could use BTrace and instrument all the methods that could potentially leading to a   blocking call, storing the resource identifier in a @TLS variable (it will be per-thread) and then check the state of all threads in @OnTimer handler - if a thread is waiting consult the resource identifier stored in the @TLS variable.\nThe problem is to identify 'all the methods that could potentially leading to a blocking call'.\n. For security reasons BTraceUtils.str() will call toString() directly only for instances of the platform classes (the ones loaded by the bootstrap classloader).\nTherefore you will not see the expected output when you use it on an instance of Student. Seeing the toString() output for the collection is actually the real problem - the security check is circumvented and toString called on the custom instances.\n. The probe fields are resolved in the context of the bootstrap class path - meaning that any custom classes will not be visible. Just put the field() call directly to the probe handler.\n. Fixed by https://github.com/btraceio/btrace/commit/eb83334e28790c273d5744cd473b43d021293e2b\nThanks for reporting!\n. Build available\n. Looks like a duplicate of #228 - tried to reproduce after fixing that issue and everything seems to be working just fine.\n. It allows you to specify the signature of the methods you want to intercept, without the necessity to spell the parameters in the probe handler method. \nGenerally, if you are not going to use the method parameters values it is better not to capture them in the probe handler - it will save some stack space as well CPU cycles.\nAlso, see the javadoc\n. Actually, the return type is completely ignored. Not sure if this is an issue. In java you can not have methods with covariant return type so each method is uniquely identified by its name and argument types. When you want access to the return value you have to use @Return annotated probe handler argument to hold the value and in that case an additional check will be made to assure that only methods  with the expected return type will be matched.\nIf you still feel like this would be an issue, please, file a separate bug for that.\n. Try running the btrace agent with dumpClasses=true,dumpDir=<dest_folder> to get the transformed class files and store them in . You can then attach the files to this issue so I can inspect whether there are any problems with the instrumentation.\nAlthough, from the first glance it looks like instrumentation conflict between BTrace and WebLogic AOP.\nWaiting for the class files.\n. The archive does not seem to contain the Spring classes - you need to run your application till the point you see the BTrace exception because the classes are loaded and instrumented on demand.\n. You can use btrace -v -d <path> ... to enable dumping of the\ninstrumented classes as well as get the full debug output which you can\nalso attach to this issue.\nOn Mon, Jul 18, 2016 at 11:41 AM, cpiment notifications@github.com wrote:\n\nI have just run the application to the point where it runs the Spring\ncode, but it does not dump the classes. Do I have to start the App Server\nwith any arguments? Or just starting the Btrace client with\n\"dumpDir=/var/tmp/dump\" should be enough?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/btraceio/btrace/issues/231#issuecomment-233286031,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtEbT9jL1qD86D-42G3UYgDUA8p0eZ8ks5qW0pSgaJpZM4I4DP1\n.\n. Ok, the server log sheds some more light on what is going on. The class\nretransformation process crashes before actually going back to BTrace code\nand inserting the BTrace instrumentation. It might be crashing in the code\ndeciding what to instrument but, unfortunately, there is no indication what\nwould be the reason of this crash.\n\nIs this a weblogic server? Could you do the last experiment and use a\nBTrace script where @OnMethod declaration would not match any available\nclasses? Just to see whether the problem is somewhere in the BTrace\ninternals or it is retransforming certain classes (even without any\nmodifications) that are causing this problem?\nAny chance you could provide a small reproducer?\nThanks!\n-JB-\nOn Mon, Jul 18, 2016 at 12:10 PM, cpiment notifications@github.com wrote:\n\nI already did that, but that did not produce the dump. The log of the\nagent. I'm attaching the btrace client and server logs.\nagent_log.txt\nhttps://github.com/btraceio/btrace/files/368718/agent_log.txt\nserver_log.txt\nhttps://github.com/btraceio/btrace/files/368719/server_log.txt\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/btraceio/btrace/issues/231#issuecomment-233291396,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtEbRAnUlde4zFb3GLPP59_f760InEvks5qW1D8gaJpZM4I4DP1\n.\n. I have added logging to provide some insight which classes are queued to be retransformed. Could you try with the trunk version of BTrace to see the logs?. Skipping some classes is expected. BTrace being Java agent we need to make sure not to instrument the classes critical for BTrace functionality.. As for the skipped class com.telefonica.coco.lib.security.preauth.filter.TelcoPreAuthenticationFilter, please, make sure that the intercepted method doGetPrincipal is actually defined in this class directly. If the method is just inherited its bytecode will be in a parent class and therefore there would be nothing to instrument.. Most probably resolved by #240 - closing.\nIf you still can reproduce the problem, feel free reopening.. Currently, it is not implemented in BTraceUtils. As a workaround you can create your own extension to provide some extra functionality not available in the core classes. \n. Not really - the instance you get by calling BTraceUtils.newHashMap()' is implicitly synchronized (equivalent toCollections.synchronizedMap()`). The map will not be corrupted but it doesn't prevent racy data.\n. Reviewed 1 of 1 files at r1.\nReview status: all files reviewed at latest revision, all discussions resolved.\n\n\nComments from Reviewable\n Sent from Reviewable.io \n. So, you are using an empty trace script (without any @OnMethod or other BTrace specific elements), correct?\n. Hm, interesting. Would you be able to share the code you are trying to trace?\n. Hm, could you run BTrace in verbose mode and, possibly, dump the instrumented classes?\nbtrace -v -d <path to dump instrumented classes> ...\n. Ok, thanks. Now I should have enough info to investigate.\n. Hm, are you sure that you could see this issue also in 1.3.7?\nFor one, I am not even able to compile the script on 1.3.7 unless I mark it as unsafe. While the verifier should not complain here and an issue will be filed this is not related to the AIOOBE you are seeing.\nI tried to reproduce with 1.3.7 and JDK 1.8.0_66 and after allowing unsafe mode I don't see any AIOOBE.\n. Ok, I got to that exception. Had to patch BTrace to allow compilation of the posted script in safe mode.\n. Please, try to verify the fix with the build from https://bintray.com/btraceio/snapshots/btrace-bin/SNAPSHOT#files\n. The logic for the common superclass should completely disregard the information about the interfaces the checked classes implement and follow strictly supertypes.\n. Yes, there are certain classes in JDK which don't like being instrumented. We keep a list of known classes causing problems when instrumented and BTrace is skipping them. Apparently, there have been added some more classes that should be excluded.\n. Has been resolved in #256 . The problem is in this code\nwhile (true) {\n    System.out.println(\"calling method\");\n    new UtilClass().utilMethod();\n    Thread.sleep(2000);\n }\nThe infinite loop keeps the main method on stack - eg. the method is still executing the old code since the new (instrumented) code will take effect only after the method has exited.\nTry this:\n```\npublic class MethodCallTracingExample {\n    public static void main(String[] args) throws InterruptedException {\n        while (true) {\n            step();\n            Thread.sleep(2000);\n        }\n    }\nprivate static void step() {\n     System.out.println(\"calling method\");\n     new UtilClass().utilMethod();\n}\n\n}\npublic class UtilClass {\n    public String utilMethod() {\n        System.out.println(\"Returning useful data\");\n        return \"useful data\";\n    }\n}\n```\nand\n@BTrace\npublic class MethodCallTracer {\n    @OnMethod(clazz = \"/.*MethodCallTracingExample.*/\", method = \"step\",\n            location = @Location(value = Kind.CALL, clazz = \"/.*UtilClass.*/\", method = \"/.*utilMethod.*/\"))\n    public static void m(@Self Object self, @TargetMethodOrField String method,\n                         @ProbeMethodName String probeMethod) {\n        BTraceUtils.println(\"hello\");\n    }\n    @OnError\n    public static void onTraceProblem(Throwable t) {\n        BTraceUtils.println(\"UNABLE TO TRACE: \" + t);\n    }\n}\n. Has this solved your problems?\n. Please, make sure JAVA_HOME is pointing to JDK and not only JRE.\n. My first guess is that the method you are trying to trace the calls from is still running, eg. on stack, and therefore still executing the uninstrumented code. I might be able to tell more if you could share the script you are using.\n. Reviewed 4 of 4 files at r1.\nReview status: all files reviewed at latest revision, all discussions resolved.\n\nComments from Reviewable\n Sent from Reviewable.io \n. 1. The Java version is pretty pre-historic. Is there a chance you could use\n   JDK 7 or at least some of the latest update release of JDK 6?\n2. The tomcat process seems to be started with a java agent - what is that\n   agent?\n3. You are running btrace as root but the target process seems to be owned\n   by 'nobody' - this is not guaranteed to work because of the limitations of\n   the Attach API (you can connect only to the same-user processes)\nOn Fri, Sep 23, 2016 at 10:38 AM, yichao.wu notifications@github.com\nwrote:\n\nthe btrace's version is release-1.2.4\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/btraceio/btrace/issues/247#issuecomment-249135357,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtEbYQp7yHK_4I_wp11lCXAEdAJH-gFks5qs5AQgaJpZM4KEuyp\n.\n. Reviewed 26 of 26 files at r1.\nReview status: all files reviewed at latest revision, all discussions resolved.\n\n\nComments from Reviewable\n Sent from Reviewable.io \n. Which BTrace version?\nThere was a bug fixed with a similar root cause for 1.3.8.2 - #239 \n. This looks like the functionality previously available only via tools.jar is now a part of JRE?\nI do not own any MacOS machine so it would be nice if someone running a Mac could play with the 'bin/btrace' script to see what happens when the reference to tools.jar is removed (line ${JAVA_HOME}/bin/java -cp ${BTRACE_HOME}/build/btrace-client.jar:${TOOLS_JAR}:/usr/share/lib/java/dtrace.jar com.sun.btrace.client.Main $*)\n. You are instrumenting ALL instances. While BTrace should take care of not re-entering the traced code recursively it obviously fails to do so. I will take a look.\nHonestly, BTrace is not the best tool for indiscriminate memory allocation tracking. The overhead will be too huge :(\n. I would first start with removing the reflection from the game. It is pretty heavyweight.\nYou can do something like this:\n``` java\n@TLS\npriivate static int level = 0;\n@OnMethod(clazz=\"+java.lang.Object\",\n          method=\"\")\n    public static void onNewThing(@Self Object o,\n                                  @ProbeClassName String pcn) {\n        if (!enabled || level != 0)\n            return;\n    // only first constructor in the chain will be processed\n\n    firstLevel++;\n    print(pcn);\n    print('\\t');\n    println(Strings.str(sizeof(o)));\n}\n\n@OnMethod(clazz=\"+java.lang.Object\",\n      method=\"<init>\", location=@Location(Kind.RETURN)\npublic static void onNewThingReturn() {\n    firstLevel--;\n}\n\n```\nIf this still does not help, enable BTrace debugging output and we should be able to tell which BTrace classes are mistakenly getting instrumented, if any.\n. Fixed by https://github.com/btraceio/btrace/commit/b313f32d9805c26147d4da73839d5f360b7588e3. Great! Good to see BTrace helping!. The quantizer is not handling long values well. Will have to fix that.. Most probably it is due 'System.out' buffering. The stream is not force-flushed and we rely on the output to appear on console eventually. The verbose mode is generating more data and the output is flushed more frequently.\nAnyway, I would expect the output to be displayed upon the BTrace client exit.\nAs an enhancement, I could provide a new client action to be displayed in the menu invoked by Ctrl-C that would allow force-flushing the console output.. I have added the extra command - you will need to pull the changes and rebuild BTrace to test it out.. Ok, this info was missing from the original report :) So, the output is properly flushed.\nIf you remove the recordEntry and recordExit calls will you get the println generated traces? I will try to reproduce as well but I haven't seen such strange behavior yet.. I have tested the script from samples/Profiling.java against a simple Swing application (AnagramGame from the sample applications in NetBeans) and everything seems to be operating normally.. Ok, if you run btrace -d <path> ... you will get the compiled BTrace script class as well as the instrumented classes stored in the  <path>. You could then zip it and attach to this issue so I could check the instrumentation.\nThis is very odd behavior - I have never seen that happening :(. Any news regarding this. Were you able to capture the instrumented classes?. Was anybody, by chance, able to run btrace -d <path> ... in order to capture the instrumented classes and preprocesed probe bytecode? That would really help diagnosing this problem. I still can not reproduce it on my side.. Which local variable you need to access for the location Kind.CATCH? Normally, the caught exception instance will be passed as @Self. Other than that there is no support for inspecting the local variables in BTrace yet.. Was my last answer helpful?. Ok, thanks for the reply.. That should work. Let me see what is going on .... Sorry, I'm pretty busy right now. I should be able to take a look by the\nend of this week. Till then you can switch the script to 'unsafe' mode to\nallow statsd calls.\nOn Dec 11, 2016 2:32 PM, \"yash\" notifications@github.com wrote:\n\n@jbachorik https://github.com/jbachorik did you get chance to look at\nthis issue ?, i am trying to use btrace to instrument hadoop MR jobs and\nstatsd feature is required collect trace data at central location.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/btraceio/btrace/issues/256#issuecomment-266282289,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtEbTkt8n6Pw57ROi8hUJLB0_MfzFFlks5rG_uJgaJpZM4LHy8P\n.\n. The last issue was due to processing error when dealing with BTrace short syntax. Fixed in https://github.com/btraceio/btrace/commit/b3038b75eb39d3ed7416a9541d5ceff5408ace06. I try not to.\n\nCan you provide more details? /Users/...../btrace doesn't look like a valid path for a starter.\nWhich version are you using. Can you verify that the distribution archive was properly unarchived (eg. there are 3 jar files in /build/ directory)?. I don't know. For almost everybody it just works. I've just tried to download the archive from github (actually, the version is 1.3.8.3), uncompress it and run. And it works out of the box - no need to set BTRACE_HOME, it is automatically inferred.\nYou either have corrupted installation or permission problems. \nI would recommend re-downloading the archive, uncompressing it to eg. /tmp/btrace and trying from there  to see whether the problem is reproducible.. You need to either\n- download binary archive (btrace-bin.zip, btrace-bin.tgz) and use it right away\n- download source archive (source.zip, source.tgz) and build it before using\nIf you have source archive and don't build it you are missing crucial jars and the script can not validate that the location from where you are trying to run BTrace is a valid BTRACE_HOME - hence the error message.. This will be something different than #160 \nIf you could reproduce the problem and try running btrace -d <dump_dir> ... to get dumps of the instrumented classes so I can check which part is causing bytecode verification error.. I have all the info now. Thanks for reporting this!. Yes, you can rewrite it not to use the parameter. But it should work also with the parameter and I will fix that.. The SYNC instrumentation was revamped in #269 \nAny chance you might re-check with the current build?\nThe lock is now transferred via @TargetInstance annotated probe method parameter.. I assume this was fixed with #269 \nIf the problem still persists, please, reopen.. Great! Thanks for contributing?\nCould you apply the fix to the original SynchronizedInstrumentor class (if possible) and then open a PR so I could take the fix upstream?. There might be several reasons for not seeing the expected output\n\nThe syntax for @Location.CALL is incorrect - you need to provide the call target type and method name - see this sample. When you specify @Location.CALL you are saying that you want to intercept certain method invocation from within the specified method - I am not sure this is really what you want to do here.\nThe method queryJVMBrief is not defined directly by com.wd.demo.StateController - eg. it is defined by one of its subclasses\nThe method queryJVMBrief is static but you are trying to capture the instance variable by @Self Object self parameter\n\nI would recommend turning on debug output and capture the instrumented classes (eg. btrace -v -d <instr_classes_folder> ...) to get more information and then attach the debug info to this issue.. Closing due to no response.. Thanks again for contributing!. It should be possible to expose an Aggregation using @Property annotation. \nHowever, an appropriate OpenType mapping is missing and makes any exposed Aggregation instance be marked as Unavailable.. Yes, it is possible. You need to use Kind.CALL location. Please, see the sample code for inspiration.\nIn your case, the probe point would be defined like\n@OnMethod(clazz=\"myPackage.classA\", method=\"/.*/\",   location=@Location(value=Kind.CALL, clazz=\"/java\\\\.util\\\\..*/\", method=\"/.*/\")). All the requirements were addressed in commit #f6feab5. Fixed by #306 . You are correct that it is not possible to add/remove any fields (static or instance) for any already loaded class.\nBut the example you are giving is about enhancing a method body with a new method call - and that is permitted. In fact, that's how BTrace can work.. This just a simple parameter naming issue.. The method is in Reflective scope. Therefore you need to call BTraceUtils.Reflective.get(name, instance). Try adding -Dio.btrace.FileClient.flush=-1 to the JVM arguments. I will take a look about the flushing on exit logic.. The problem is accessing the probe class, not the BTrace internal classes. Therefore -Djboss.modules.system.pkgs=com.sun.btrace can not help here.\nThe probe class is loaded by bootstrap class loader - but it seems like JBoss class loader will not delegate to that CL when searching for classes. \nCan you do an experiment and declare a package in the probe script (standard package my.package statement in the source will do) and then run the app with -Djboss.modules.system.pkgs=com.sun.btrace,my.package(or whatever delimiter is used in the list of packages).. I have reproduced the problem and indeed it is caused by the generated classes. Currently BTrace relies on the classloaders to provide the corresponding '*.class' resource to any class it is able to load. This is might not be true for the generated classes and BTrace will fail to resolve the common superclass since there is no possibility to get the information about the superclass and implemented interfaces for the generated class and loading this class just to get this info will cause another bunch of problems :(. Yes. This will take a while. I will have to change the probe code preprocessing to happen at the time of compilation as opposed to runtime (what happens now). But the other benefit would be cutting the time required to do the instrumentation since not calculating the frame maps will save a lot of CPU cycles.. I have verified the latest fix on the provided project. Successful verification also requires recompilation of the probes with the newbtracec` tool.. Please, make sure this is not related to #177 \nBTrace is working at the Java level and it is almost impossible it would crash JVM by its own. Also, there should be hs_err* file in the application working directory. Would certainly be interesting to see that as well.. Not much more information there, unfortunately :(\nBut as I said earlier - BTrace will not cause JVM crash by itself. It is a pure Java add-on and any native crashes would cause either by exposing existing errors in JVM or, possibly, additional native agents.\nWould it be possible to re-test on later update of JDK 7 or on JDK 8?. Closing due to no-reply. If the issue is reproducible on latest JDK 7 and JDK 8 versions, please, reopen.. Yes, it is easy to implement. Just one must keep track of back-references not get caught in endless loop. It's just there hasn't been demand for this functionality yet.\nPlease, feel free to open a PR with the implementation. Any contributions are greatly welcomed!. To start with using DB to store data collected in BTrace script is pretty heavyweight and can lead to many problems - class loading issues, increased memory footprint, unintended class initialization pops into mind immediately.\nIn this case the mysql-connector-java-6.0.6.jar is added to the traced application bootstrap classpath (loaded by the bootstrap classloader) but the resource bundle localization code does not seem to like it very much.\n. Closing due no response.. Please, specify the BTrace version - btrace --version. Any followup?. Closing due to inactivity. If you are able to provide the requested details, please, feel free to reopen.. Is this an actual Error terminating the JVM? Or is it just appearing in log/stderr?\nThe only thing I can think of is MethodInvocationRecorder failing to record exit event, leading to an exception. However, the all-catching try/catch block around any injected code should prevent this taking down the whole application.. This might explain a bit the failure. When you disable getCommonSuperclass the bytecode stack frames can get corrupted and you will get undefined behaviour. I am working on the issue causing you to remove getCommonSuperclass but it is pretty complex one :/. Could you try the testcase with the latest dev version? I have implemented custom stackmap frame generation and the problems related to getCommonSuperclass should be gone by now.. I'm sorry for the slow turnaround. Is that problem still reproducible? It should generate a hs_err file in the workdir - if you can find it there somewhere, can you attach it here?\nThanks!. Ping?. Any news here?. There was a bunch of fixes on the stackmap frame front since February. Can you retest with the latest dev?. Any results yet?. No. BTrace probes are always compiled to bytecode compatible with JDK7 as well as the BTrace engine.\nAnd since Java 8 runs classes compiled for Java 7 seamlessly you should not see any compatibility problem.. Filed #323 to track this.\nThanks for reporting - sometimes the IDE autoimport does strange things :/. https://github.com/btraceio/btrace/commit/5ef5e4c7d3287fc59602f33c1783c50523a0ac2e. Not currently possible.\nWould be a nice enhancement, though.. Fixed in #321 \nYou can use @OnMethod(clazz = \"/${packageName}\\..*/, method = \"/.*/\") now - just don't forget to specify the packageName user argument when running the probe.. Duplicate of #298 . This is specific to intercepting a method which is on stack while JVM is exiting.\nBTrace performs de-instrumentation upon exit but bytecode for the method on stack will not get replaced - therefore the method will try calling the BTrace handler which just has been removed. I guess the 'fun' method will get inlined and therefore it appears as a part of the main method loop (but haven't verified this assumption with JITWatch - the symptoms would correspond though). Duplicated by #327 . Your application is running with security manager preventing BTrace from performing some operations. You will need to modify the security policy to allow BTrace to do its thing.. Thanks for reporting this!\nIn 1.3.10 BTrace got a complete overhaul of stackmap frame calculation algorithm aimed at improved performance (not recalculating stackmap frames when method has not been changed) as well as reliability (default ASM algorithm relies on getting common superclass which is not very reliable in dynamic environments - and in BTrace we do very limited subset of bytecode modification so we can take some shortcuts). \nUnfortunately, the whole stackmap frame calculation affair is pretty complex and ASM API is not very well suited (or documented) for what I am trying to achieve here - resulting in some leftover bugs. This particular problem was caused by ASM getting thrown off by mixing F_NEW and other frame types in certain cases - usually ASM handles that pretty well and generates the correct final stackframe maps but sometimes it fails and generates bogus offsets. \nThe fix is not to use the shortcut and emit all maps as F_NEW from our code.. I either debug the instrumentation tests (it is useful when dealing with bytecode modifications only) or fire an app (eg. AnagramGame from NetBeans sample collection ;) in debug mode and then attach BTrace via btrace <pid> ... - you can put breakpoints to BTrace runtime code and they will be properly handled.\nAs for L583 in BTraceRuntime - yes, it is a redundant check. I will probably remove it before completing 1.3.10.2 release.. \nReviewed 44 of 44 files at r1.\nReview status: all files reviewed at latest revision, all discussions resolved, some commit checks failed.\n\nComments from Reviewable\n Sent from Reviewable.io \n. I would appreciate more details. Eg. the failure mode or exception.. Can you try 1.3.10.2?. Closing due to no response. Please, reopen if still valid.. Hi, @feng-zh !\nThanks for fixing that problem! The fix looks fine - please, file a proper PR so I can merge.. The NPE problem is tracked in #305 \nFor the ability to trace based on method signature you can either use the probe method signature (for capturing the method parameters as well) or just specify type argument - eg. type = \"java.lang.String (int, java.util.List)\". Fixed in 1.3.10.2. This would require building a native agent for each supported platform.\nUnfortunately, I do not have the capacity to build the version for anything else than Linux x64 and Solaris x64 (which I need to build because of DTrace integration).\nAlso, the coordination between the trace Java code asking for a stack trace and the agent could be rather involved. \nThat said, it is not an easy task and requires a good deal of knowledge of native development and JVMTI. If anyone is willing to contribute I would gladly curate and test.. Please, take a look at eg. SYNC_EXIT implementation \nSimilarly to capturing the monitor object there you should use getTargetInstanceParameter() to indicate the method argument capturing the caught throwable. The code will end up being pretty similar - it would dup-store the value on the stack to a temporary variable and then load that variable to getTargetInstanceParameter()-th method argument. The rest of the validation and argument handling will be the same.. Duplicated by #327 . First step in diagnosing would be running BTrace in verbose mode btrace -v ... and attaching the textual output (not just screenshot) here.\nBTrace should be able to trace Tomcat applications - unless there are some classloading issues preventing the access to BTrace classes.. The script seems to be stuck at the beginning of instrumentation, according to the logs. Is there any more info in weblogic logs?\nThere should be no difference from tracing any other Java application - unless weblogic uses OSGI-like class isolation which would require a special config in order to make BTrace classes reachable as bootstrap classes.. BTrace does not support JDK 6, sorry.. What would be the exact problem here? Was BTrace involved in any way?. Ping. Any more details?\nIf I don't hear back from you in 7 days I am going to close this issue.. Closing. So, is there any problem left resolved?. Then let me close this issue.. Please, try version 1.3.10.2 - a few bugs caused by the new stackframe map calculator were fixed since 1.3.10 there and it is very probable that this verification error will not occur any more.. Ping. Can you reproduce this error with version 1.3.10.2?\nIf I don't hear from you in next 7 days I will close this issue.. What is the output of running BTrace agent in verbose mode?\nTry factoring out the code \nint size = 100;\nfor (int i = 0; i < size; i++) {\n  map.put(i, new Byte[ONE_MB]);\n}\nSystem.out.println(\"Expand SIZE = \" + map.size());\ninto a separate method to rule out any problems caused by the traced type being always on stack.. Ping. Did it help?. No response. Kind.NEWARRAY args definition is a bit confusing now. What it actually provides is the value of dimensions parameter for multianewarray instruction or 1  for anewarray or newarray instructions (see https://en.wikipedia.org/wiki/Java_bytecode_instruction_listings for details). Basically, the number is not, as one would expect, the array length(s) but rather its dimension - eg. int[][] would return 2, String[][][] will yield 3, etc.. I suppose this can be closed as resolved.. Fixed by #326. https://github.com/gradle/gradle/issues/4426. The method size limit in bytecode is 65k. Since BTrace compiler wraps your code with some extra code it may happen that the size limit will be crossed.\nIf you need all that code you should consider extracting the shareable part as a BTrace extension (a short writeup). Take a look at the Printer service for inspiration how to write a new extension.. Closing.. @saaavsaaa Yes. With correct capitalization, of course, but the gist is correct.. Not sure. I am not an Ant power user. Might be someone else can answer this question.\nFor one mode of usage in unit tests you can check the BTrace tests sources - unit and the functional ones.. Was the BTrace functional tests of any help?\nI guess you would have better chance of finding the answer on StackOverflow.\nClosing.. You can either use BTrace trusted mode (@BTrace(trusted = true)) and use Java IO directly or package the streaming output as a BTrace service extension - see eg. https://github.com/btraceio/btrace/blob/master/src/share/classes/com/sun/btrace/services/impl/Printer.java. The log about instrumenting 1 class would indicate that the System.gc() method was instrumented. Are you sure this call is used? Full GC can also be triggered by Runtime.getRuntime().gc() call, which is native and therefore not directly instrumentable.\nCan you run BTrace in verbose (debug) mode and attach the output here also?. Any progress on this?. For the trunk build I just tried the script on a sample application doing System.gc() on a button click and I can see the expected messages. \nPlease, reopen if you can provide a simple reproducer.. It is not possible to use any nested classes in BTrace script.\nIf you really need that functionality you will have to either create a support library to include in the bootClassPath or systemClasspath of BTrace agent and either use the trusted mode (@BTrace(trusted = true)) or package the utility classes as a BTrace extension service.. Could you share the method source causing this problem?\nThanks!. I guess BackpackService is a closed source. I will try to figure out the problem from the available data. This is all due to stackframe maps in bytcode - it is very complex area without extensive documentation unfortunately :( Thanks for patience!. Can you, please, try with #341 fix applied? I discovered another corner case in stackframe map generation and fixed that - might fix also your issue, with some luck.. Ping. Any chance to test this fix to see whether the problem goes away?. Could you try a custom built BTrace containing commit #527d86f265a0b534791309b42303879aa44da7ae ?\nI added more debug info there to figure out what is throwing the stack tracing logic off.. Any chance of sharing the compiled version of that class? I can sign whatever non-disclosure agreement if necessary and you can send it directly to my email. \nWithout that, I am afraid, I won't be able to solve this problem - there seems to be some peculiarity in the stackframe maps in that class and it is throwing off the algorithm used to recompute them in instrumented methods.. Hi, I addressed this issue in develop branch. Can you, please, verify?. Will have to check this. Did you change the gradle version or is this failing out of the box?. Hm, this change seems to be breaking stackframe map generator for try/catch handlers.\nLet me take a look it first.. Sorry, I created #338 based on your fix - I had to adjust the stackframe map generation to prevent bytcode validation errors.. If you want to use dynamic attach then the only option would be nohup or tmux or similar utility.\nOf course, you can attach BTrace agent on JVM startup via -javaagent argument and then BTrace will be running as long as the target JVM.. This is an OSGI class loader isolation issue.\nPlease, set org.osgi.framework.bootdelegation property accordingly - see eg. https://felix.apache.org/documentation/subprojects/apache-felix-framework/apache-felix-framework-configuration-properties.html of https://comm.support.ca.com/kb/configuring-the-java-agent-on-glassfish/kb000048334 for reference. Can you attach stack traces and hs_err* file? Without that it is impossible to diagnose the root cause.. The culprit is infinite loop in your main method. The method 'fun1' got (most probably) inlined to 'main' and that method being in infinite loop JVM does not have a chance to replace the method definition - while, in the meantime, it already successfully removed the BTrace helper methods from the instrumented class.\nIf this is happening in real-life applications and not just some examples the only way to fix this would be to never remove the BTrace helper methods from the instrumented classes.. When using dynamic attach (btrace <pid> <trace script>) the instrumentation is removed once the session is closed. The agent remains in the JVM but it is basically just a socket listener for accepting new tracing sessions. With this approach you don't need to restart the server when you change the instrumentation.\nIf you attach the agent on startup (as JVM -javaagent argument) then this mode of operation is (almost) possible too. The only difference is that whatever script is loaded with the agent will stay there forever. But you still can attach and detach to the server JVM later on.. Not really. This would require a fully-functional plugin system with plugin hotswap which is a pretty complicated thing to do. And considering the nature of the JVM agents this would be very susceptible to interference from the traced application - not even mentioning the unintended side effects such a complex agent might have on the traced application itself.\nWhat it is you are trying to achieve?. Hi, this is harmless, if a bit annoying message.\nWill be fixed but till then, please, ignore it.. Unfortunately, no. Unsafe is a protected class for BTrace - we can't instrument it since we strongly depend on that class. Also, this particular method is 'native' and BTrace does not support native method instrumentation.. What is the Java version?. Sorry, the plugin seems to be broken - filed issue there (https://github.com/nebula-plugins/gradle-ospackage-plugin/issues/298). Is this reproducible? Please, make sure there is no JVM with BTrace agent running (and using the default port 2020) when you are running the build - it can interfere with the tests.\nWe are running CI builds on Travis regularly and don't see such slow downs or right down hangs.. Closing due to no response.. First of all, big thanks for contributing!\nI have just a few small things which need to be addressed before merging.. I hate to bring you the bad news but BTrace is not an optimal tool for this. You would need something operating at the native level and completely off the Java heap. This kind of instance tracking is good only for 'hello world' like applications :/\nRegarding your problem here - can you first try having just the print statement in the probe method to rule out any reflection related problems? If you still won't see the expected output, run BTrace in debug mode and/or collect the instrumented class files and attach the outputs to this issue.\nThanks!\n. Any progress here?. Any updates on this?. This has been addressed in #359 - right?. Can you, please, address the comments so I can merge the changes?. Hi @gawaine1988, sorry for the late reply, was caught in busy work. PR is merged now.\nThanks again for contributing!. Sorry for the late reply. Was extremely busy with my day job.\nThanks again for contributing!. Yes. Hotspot JVM supports adding private static methods even though it is not in JVM spec.. Can you try with the latest version 1.3.11.1? There were a lot of fixes and improvements since 1.3.1. No response. Please, continue with https://github.com/btraceio/btrace/pull/359 - no need to create a new PR + it will lose all the history. I am closing this PR. Please, address the comments, make sure the changed code builds and the changes to the original PR.. Most probably related to #333. Working on the fix now.. Hi, I addressed this issue in develop branch. Can you, please, verify?. Sorry for the confusion. You need to grab 'develop' branch now. 'master' is still at 1.3.11.1 version.. Yes, experienced deadlocks on Spark 2.3 - the probes are close-source so I can not share more.. Most probably. It is happening when spark engine is loading some classes it is defining on the fly.. I checked @OnThrow against the current code (develop branch) and it works as expected.\nThe @OnError case as well - it is related to #333 \nCan you, possibly, test against a custom build from develop branch?. Closing. Please, reopen if still reproducible,. These options are for agent based deployment only - when you are using the CLI interface, all the printouts go directly to the client stdout.\nIs there a particular use case for setting these options from CLI?. The changes will require either splitting the versions to one supporting JDK 9+ features and one supporting JDK 7/8 or complex runtime checks with hacks to call the correct classes/methods.\nIn addition to what @zeocio mentions we also need to figure out how to easily open up the modules with instrumented classes to the BTrace runtime code. Should be doable but it is not my personal priority right now so either someone will take up the challenge and raise a PR or this will have to wait until I need this for my clients - which might be anywhere between 1-2 years from now given the 'rapid' adoption in enterprise space.. Actually, the same effort is already tracked as #292 - so far no volunteers there.. In theory, yes. In practice, not recommended - your application would be slowed down by an order of magnitude. What exactly are you trying to achieve with that?. @ougyou What does this comment help with the reported issue?. When you do btrace -h you will get the usage.\nYou can specify the port via btrace -p. This is related to stackmap frames and variable index remapping in general.\nThere seems to be a variable index suddenly increasing from 8 to 21 - meaning the offset goes from 5 to 18 and the array resize is not sufficient. This is pretty easy to fix - but just out of curiosity - is the bytecode generated by javac or some other means?. It's difficult to tell but the bytecode seems to be doing a lot of shuffling of values between local variable slots.\nAnyway, the mapping array resize code should be adjusted like this:\nif (offset >= mapping.length) {\n    mapping = Arrays.copyOf(mapping, Math.max(mapping.length * 2, offset * 1.5));\n}. Are all tests passing with your change? In fact, the call cc.get(c) could be omitted altogether. It was meant to pre-cache the class but it is really not necessary as the cache entry will be create later when required.. This seems to run all the benchmark tasks during each build. The benchmark tasks should be executed only on demand - they take quite a long time to finish and are not necessary for a successful build.\n. It turns out the traces source files are copied over in the processTestResources task. So, this whole block can be omitted.\n. assemble task should depend on the test task. We don't want to create a binary distribution from the version which is failing the tests.\n. Ok. My confusion was because of the assemble task. I supposed it was to be the final step. But, obviously, build task is the topmost level.\n. Yes, the buildDTrace task will run the Makefile and that will, in turn, generate the library in {build}/i386 folder.\n. Remove debugging output\n. Call DebugSupport.warning(e) instead.\n. Copyright 2016\n. :+1:\n. :+1:\n. :+1:\n. I think there is a typo here - printing the value of 'unsafe' for 'fileRollMilliseconds'\n. Is splitting on '-' in baseName intentional? When baseName does not contain '-' this code will fail.\n. Right. This one is not strictly necessary. Would be interesting to see what would be the result with the Java 9 indyfied string concatenation.\n. There is no ip any more. You changed the variable to host. Should be host = BTRACE_DEFAULT_HOST - this will not even compile. Argument is now -host. Should be hostDefined. This will match IPs only - will not validate the default value of localhost. There should not be any validation as both host name and IP is accepted (unless you want to make a really complicated regex to validate). ",
    "whitelilis": "I'm looking for this feature, then see this issue. I wish it will come soon.. ",
    "lawnight": "this's a great feature.hope come soon.. ",
    "zhaoyta": "i set  btrace.bat\n\"%JAVA_HOME%/bin/java\" -Dcom.sun.btrace.probeDescPath=. -Dcom.sun.btrace.dumpClasses=false -Dcom.sun.btrace.debug=false -Dcom.sun.btrace.runtime.cmdQueueLimit=100 -DcmdQueueLimit=100 -Dcom.sun.btrace.unsafe=false -cp \"%BTRACE_HOME%/build/btrace-client.jar;%JAVA_HOME%/lib/tools.jar\" com.sun.btrace.client.Main %*\nbut it is not Become effective\u3002\n. ",
    "yardus": "The default queue length is 100. Setting it to 100 is a no-op.\n. com.sun.btrace.org.objectweb.* packages are generated from the ASM binaries by repackaging.\n. Thanks. I will take a look at the possibility of adding more logging to the instrumentation process.\n. Hm, this is embarrassing. I tested the change with a simple test script but it obviously missed something. I will use your reproducer to get to the root cause.. Can you make sure you are using a recent version of BTrace? The method was added in 1.3.5 and an attempt to compile the script with an older version will confuse the compiler which will try to match the method with BTraceUtils.get(Map, Object). When you use COMPUTE_MAXS ASM will only recompute max stack and local vars. The stackframe maps are left to the user to build.\nThe types are not lost. Only the stackframe maps are affected. The problem is in the algorithm that is used to compute stackframe maps - it needs to infer the common super type for all the branches leading to a point for which the map is computed. And since not all those classes are actually loaded at the time of instrumentation this task is pretty difficult.\nBTrace does it's best to extract the type hierarchy from available class loaders without actually loading the classes (loading the classes would introduce another bunch of problems - from potentially deadlocking classloading to missing instrumentation on classes loaded directly from instrumentor) but it seems like it fails in this case.\nCould you, by any chance, run BTrace in debug mode and paste the output here? That might shed some light on what is going wrong in the type hierarchy inference part.. Just a side note - FML is also modifying bytecode through ASM, right?\nI will try to reproduce the problem locally.. That would be excellent. Thanks!. If it can be made public, add it to the issue. It will be much easier for the community to follow.. Class loading is more dynamic than that. Some classes might not be loaded even if the application is running.\nI will find some time next week to debug this and will get back here.. It should be possible to manually add stack frames. But it is not trivial because in certain cases we would need to update existing stack frames in addition to introducing new ones.. Not an immediate one.\nThe company that pays for my time to spend on BTrace doesn't have JDK 9 support as its priority. Therefore it will happen if there is demand. For the time being it would be nice if community tried the current version with all the JDK 9 command line switches required to open the modules to the BTrace engine and started filing JDK 9 related issues so there is something palpable to work on.. Why can't you fix? It was a good start - it would require few refinements but could have been a proper feature .... Thanks for reporting and fixing the issue! The proposed fix is correct - looks like calling visitTryCatchBlock() before actually visiting the associated labels throws off ASM. \nCan you create a pull request so your contribution will get correctly attributed?. Dirty?. Ok. Got a bit surprised :) 'nit' - a small comment, not necessary blocking the merge. I think it would be better to go up the class hierarchy and make ErrorReturnInstrumentor to extend MethodReturnInstrumentor which it should. Then, instead of repeating the same switch statement you could just call super.visitInsn(opcode) and the effect should be the same.. I think that would be correct - ErrorReturnInstrumentor should handle exit either by error or by 'return' opcode. The current situation is erroneous - onMethodReturn will never be called in the ErrorReturnInstrumentor, missing the expected exit points.. Yes, either overriding with an empty method sounds good.. ",
    "lhotari": "Any updates on this issue? I would like to use btrace as a simple profiler and adding probes to the xml file seems to be a better alternative. However it doesn't work because of this bug. \nI made the same notice that MethodInstrumentor.validateArguments always returns ValidationResult.INVALID since argument indices aren't applied to the OnMethod instance (f.e. om.getClassNameParameter() is always -1).\n. I now noticed the patch attached to https://kenai.com/jira/browse/BTRACE-81 .\n. Might be related to http://stackoverflow.com/questions/2690206/jaxb-does-not-call-setter-when-unmarshalling-objects . \n. PR #101 fixes this problem. \n. @jbachorik  thanks for the update. I'll sign, scan & send the OCA tomorrow. \nbtw. \nI'm currently using Btrace for profiling Grails 3 (based on Spring Boot) startup time and it's a very useful tool for this purpose. I've published some of the tooling I'm using. There is a gradle build integration for btrace in https://github.com/lhotari/grails-perf-testapps/blob/master/gradle/btrace.gradle and some Btrace scripts I'm using: https://github.com/lhotari/grails-perf-testapps/tree/master/btrace . \nI've tried using btrace compiled from the master branch. It fails for the TLS field I use in https://github.com/lhotari/grails-perf-testapps/blob/master/btrace/SimpleProfiler.java#L16 (had to workaround #86 with this kind of solution). \nI get errors like this:\n```\njava.lang.NoSuchFieldError: $$entryTimes\njava.lang.NoSuchFieldError: $entryTimes\n```\nHowever when I compile off 0f6f723006cd27305600e3be3862ce83924c4d2b (1.2.5.1), I don't get this error. There seems to be something broken in the master branch. Is this a known issue?\n. ",
    "zhangyilin": "I can help you test any change you have. (I asked the question in Kenai)\n. ",
    "Jared12": "Btrace version:release-1.2.5.1\nScript: \npackage com.sun.btrace.samples;\nimport com.sun.btrace.BTraceUtils;\nimport com.sun.btrace.Profiler;\nimport com.sun.btrace.annotations.*;\n/*\n- This script demonstrates new capabilities built into BTrace 1.2\n- \n- Shortened syntax - when omitting \"public\" identifier in the class \n- definition one can safely omit all other modifiers when declaring methods\n- and variables\n- Extended syntax for @ProbeMethodName annotation - you can use\n- fqn parameter to request a fully qualified method name instead of \n- the short one\n- Profiling support - you can use {@linkplain Profiler} instance to gather\n- performance data with the smallest overhead possible\n- \n- @since 1.2\n  /\n  @BTrace class StarciteCPUTime {\n  @Property\n  Profiler starciteProfiler = BTraceUtils.Profiling.newProfiler();\n@OnMethod(clazz=\"/com.starcite../\", method=\"/./\",location=@Location(value=Kind.RETURN))\n  void entry(@ProbeMethodName(fqn=true) String probeMethod,@Duration long duration) { \n      BTraceUtils.Profiling.recordEntry(starciteProfiler, probeMethod);\n  }\n@OnMethod(clazz=\"/com.starcite../\", method=\"/./\", location=@Location(value=Kind.RETURN))\n  void exit(@ProbeMethodName(fqn=true) String probeMethod, @Duration long duration) { \n      BTraceUtils.Profiling.recordExit(starciteProfiler, probeMethod, duration);\n  }\n@OnTimer(5000)\n  void timer() {\n      BTraceUtils.Profiling.printSnapshot(\"Starcite performance profile\", starciteProfiler);\n  }\n  }\n. ",
    "liuxinglanyue": "ok\n. ",
    "eGit": "I just wanted to test the native method tracing for the first time but now it is gone again?\n. ",
    "gm281": "Thanks for the answer Jaroslav,\nJust to clarify, you propose to implement the reflection based logging 'proxy' in the app. Similarly, it is the app that needs to be launched with -Xbootclasspath/a. Assuming I understood that correctly I'll give that a go in my proof of concept.\nThanks\nGregor\n. ",
    "tmohme": "the travis doc does not really tell how they handle \"gradlew\" . . . trying fallback to plain gradle \n. I overlooked that the gradle-wrapper.jar didn't get committed because of the \"*.jar\" entry in .gitignore\n. Hi Jaroslav,\nthe benchmark subproject requires \"btrace-statsd\", which I can't find anywhere. If I ignore this dependency, the class net.java.btrace.btrace.statsd.StatsdClient is missing.\nRegards,\nThomas\n. Finally I got the benchmark build working with gradle, but I'm not sure if I got it right because I can't really compare it against the maven results.\nWhen I run mvn clean package on benchmark, followed by 'java -jar target/benchmarks.jar' I get many ClassNotFoundExceptions (like for com.sun.btrace.comm.Command).\nFor the grade build I took a \"dumb\" approach and simply packaged everything in one fat distribution.\nThe good is, the benchmark tests run without failure. The bad is, the distribution is ~8MB fat as opposed to the ~2.4MB maven built jar.\nWhen it is intended \"for internal use only\", this is no issue. Otherwise I have to investigate this further.\nAnother point: Is there any purpose in the benchmark having version \"1.0-SNAPSHOT\" and group \"net.java.btrace\" while btrace itself has \"com.sun.tools.btrace\" and \"1.3-SNAPSOT\"?\n. With git/hg, where you tag a branch with a \"release version\", it doesn't make much sense to have a submodule with a different version than it's parent.\ngradle by itself doesn't need neither version nor group when you don't publish the respective module. Thus I didn't adopted them.\nTo build the 'benchmark', you have to add -DwithBenchmark on the command line. It is excluded by default to avoid problems with the travis Java7 build.\nTo run the benchmark use ./gradlew :benchmark:run -DwithBenchmark\nI added experimental support for debian packaging. It is untested as I don't have the tools to inspect the produced package.\nWhen there's no need for publishing to a maven repository (grade doesn't need this for 'benchmark'), then the publishing part of the main build.gradle can be omitted.\n. You find the documentation for the os-package creation here.\nA grade build script is essentially Groovy code which means, you can use all of Java & have some additional goodies.\nFor the benchmark, I just tried the current JMH version 1.9.1 and set the @OutputTimeUnit to nanoseconds.\nThen you can see varying values - so, at least \"something\" got measured (probably).\nI added a \"reference\" method (incrementing only a counter, not btrace instrumented) that scored comparable to the methods that should be instrumented.\nThis looks like a problem with the instrumentation.\nUnfortunately my btrace know how is by not deep enough to find the cause . . .\n. Up to now I thought, I had to run the benchmark app to run the benchmark methods in BTraceBench.\nThis seems not to be true. One has to run BTraceBench in order to incorporate the btrace instrumentation, right?\n. Now the benchmarksubproject is included by default. This should let NetBeans 'see' the subproject.\nI would keep the subproject separate because it already is on Java 8 while the main project is still on Java 7. \n. I think the current state is good enough to start with.\nThere are things that should be cleaned up, but I would wait with these tasks until the gradle build stood the test of time and the ant build finally got abandoned.\n. forgot to pull your latest changes from before pushing this . . . ignore this one\n. The last line (\"peer not authenticated\") of the posted error messages points to an ssl problem.\nRunning with \"--stacktrace\" could give detail infos to verify/falsify this hypothesis.\nYou should try to follow Alex Lipov's answer in this thread or VD's answer in this thread.\n. There's a behavior change in Windows >8.1 (see \"Java's \"os.name\" for Windows 10\") and it's a known problem JDK-8066504 that has been fixed in Java 8 update 60.\nSo my recommendation is, that you check/update your java version.\n. I'm able to run btrace with Java 1.8.0_65 on my Mac (10.11.6) without any problems - and without this message.\nNevertheless I also have seen the mentioned message some time ago when I might have used Java 1.7.0_xx. \nThen it was really tenacious but besides this it was harmless.\nGoogle shows many entries for this message, there's even an OpenJDK Bug and an entry Oracle's Bug Database.\nI don't think the message has anything to do with your problems using btrace.\n. . . . have to correct myself: In my test some moments before I didn't get the message on the terminal from where I started btrace.\nInstead I got the message on the terminal from where I started the traced application (which I missed in my last post).\nBesides from the message unexpectedly showing up, I had no problems. Neither with the application, nor with btrace. \n. Hi Jaroslav,\nthx for the fast fix.\nWhile I tried to reproduce your steps to fix this, two questions came into my mind:\n- How do you debug this? Is it possible to attach a debugger (to the target process) to see what btrace is doing?\n-  Now that EventHandler#getEvent guarantees a non-null result, do we still need BTraceRuntime#handleEvent, line#583?\nBest regards,\nThomas\n. 1.3.10.2 works fine for me on macOS 10.13.2 with Oracle JDK 1.8.0_144-b01.\nbtw.: I can confirm #305 is solved with 1.3.10.2. This would make the build more non-standard and would require additional changes for travis-ci.\nImho this is a high price for saving little time: On my box assembling the distributions took 637ms (which we possibly could save) compared to 12.1s overall build time (7.6s for test).\n. Where does i386come from?\n. A script-layout thing: I would before the distContent copySpec. This way it would not disrupt the strong relationship between distContent and the two distribution tasks that use it.\nUsing make this way could work (can't verify it on my box), but has a drawback: We are not taking advantage of gradle's ability to do incremental builds.  \nTo support incremental builds, you could declare the tasks inputs & outputs like this:\n``` groovy\ntask buildDTrace(type:Exec) {\n  group 'Build'\n  onlyIf {osName == 'SunOS'}\n  inputs.dir 'src/solaris/native'\n  inputs.files bootJar.outputs\n  outputs.dir \"${buildDir}/i386\"\nworkingDir 'make'\ncommandLine 'make'\n}\n``\n. To enable incremental building I would useinputs.files buildDTrace.outputsinstead ofdependsOn 'buildDTrace'.\nSame on taskcreateBinDistTgz`.\n. ",
    "tdy218": "BTW, the btrace's version is 1.2.5.1\n. ",
    "marschall": "After a quick back of the envelope calculation I can explain the BTrace values but not the WebLogic values. The BTrace values seem correct.\nSize of a String[4096]:\n\n4096 * 32bit (4 bytes)\nfor the actual elements/oops (on a 32bit VM or 64bit VM with compressed oops)\n32bit (4 bytes)for the array length\n2 * 32bit (4 bytes)for the object header (on HotSpot 32bit VM or 64bit VM with compressed oops)\n4 bytepadding to next multiple of 64bit (4 bytes)\n\nIt may be that WebLogic stores by value (eg. serialization) and applies some compression.\n. ",
    "oschrenk": "Probably not related to the core issue but \n```\n\nobjc[19962]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_05.jdk/Contents/Home/bin/java and /Library/Java/JavaVirtualMachines/jdk1.8.0_05.jdk/Contents/Home/jre/lib/libinstrument.dylib. One of the two will be used. Which one is undefined.\n```\n\nis an ongoing bug in the JDK for OS X. See stackoverflow thread here and open JDK-8022291\nA comment from the bug says that it is just cosmetics though\n\nFor those who keep asking about this: The message is benign, there is no negative impact from this problem since both copies of that class are identical (compiled from the exact same source). It is purely a cosmetic issue.\n. Working on it. Just wanted to send the pull request to get some feedback. \n\n~~It would be nice if the page would actually explain the steps you have to do. I have to go to the FAQ to actually figure it out on my own.~~\nEdit: Well they could make it easier. You easily miss the oracle- prefix of the email (they even forgot it themselves linking to the wrong mail address in their FAQ pdf)\n. Mail sent.\n. ",
    "mfilser": "Hello @jbachorik,\nthank you for your Fix, but unfortunately it didn't work for me. With your fix a got the Idea what i have to change in the code that works for me in Issue #146\n. Hello @jbachorik,\nthe branch is now finished. What do you think about the commits?\n. So i should change the commits?\nI think it doesn't matter if the shutdown hook is also present, but if the hook is present, it's always sure that the thread ends normally ...\n. Ok. I try it tomorrow\n. Done. The fix works as expected on my computer.\n. Hello jbachorik,\ni will change the code to support JDK7 and rebase it to current master branch without commits of #146.\nOne question about the Oracle Contributor Agreement. I have looked the list, but i can't find your name on it. So why is it necessary to sign the OCA? What disadvantage do i have when i sign it?\n. Is the OCA in German available?\n. Oca signed. As soon as i have the changes i will write here. \n. Hello @jbachorik,\nthe branch is now finished. What do you think about the commits?\n. Is there a coding style available for the btrace project?\nOr the best would be to have a checkstyle.xml for the coding style. Maybe you have something like that?\n. Done. Why does sometimes the test\ncom.sun.btrace.BTraceFunctionalTests > testOSMBean FAILED\n    java.lang.AssertionError at BTraceFunctionalTests.java:58\nfail on travis-ci.org?\nI did again a push after a git commit --amend and then the tests is completed without errors...\n. I am not familiar with ASM, byte code manipulation and so on, so it is unfortunately not possible for me to find the bug and to fix it.\nMaybe you know a way how to fix it? Or is it a bug of ASM?\n. Thanks for this information. Take the time you need for the bug fix and i hope that there is a solution for it.\nGood luck.\n. Hello @jbachorik,\nsorry for the late answer, i was on vacation.\nI tried the commit 894a564  and this commit works as expected. Thanks for your good work ;)\n. Thank you, works now as expected ;)\n. ",
    "DerekYangYC": "Thanks for the hints. Personally, I'd like to move to jdk7 or even 8 but it's a big and legacy system, not an easy job to upgrade jdk :)\n. I'm sure I found a correct PID(After reboot, it's now 2898 instead of 26515). My web application is hosted in Tomcat-7.0.30 with jdk-1.6.0_24 (yes, I know it' old and should be deprecated) and customized temp folder. Here is the output:\nbash\n-bash-3.2$ /home/sunjava-1.6.0_24/bin/jps -J-Djava.io.tmpdir=/home/temp\n2898 Bootstrap\n17644 Jps\n-bash-3.2$ export JAVA_HOME=/home/abc/jdk-1.7.0_45\n-bash-3.2$ export PATH=$JAVA_HOME:$PATH\n-bash-3.2$ /home/abc/btrace/bin/btrace 2898 /home/abc/btrace/samples/SocketTracker.java\nUnable to open socket file: target process not responding or HotSpot VM not loaded\n-bash-3.2$\nI'm not sure if it's a issue with jdk6. But Btrace couldn't connect to my application. Please re-open the issue\n. ",
    "uninxc": "check the user is same one! \n. check  programe user  is the same \n. ",
    "majintao": "@uninxc  You are right!. ",
    "Proofkyko": "I am working on windows 7, Java version 1.7.0_60. Hope you can help !\nNo dia 24/07/2015, \u00e0s 16:22, Jaroslav Bachorik notifications@github.com escreveu:\n\nCould you specify OS and JDK version you are using?\n\u2014\nReply to this email directly or view it on GitHub.\n. I created a rule on the firewall to open that port and checked logs. I cant find the problem. The situation mantains, Btrace will hang at checking port availability without root profile or the connection will be refused when called without administrator privileges.\n\nAny other idea ?\nFrancisco Antunes\nDate: Sat, 25 Jul 2015 13:15:57 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020 (#141)\nI am not able to reproduce the issue on the given OS and JDK.\nAfter the message 'DEBUG: checking port availability: 2020' has been printed the agent tries to connect to IP 127.0.0.1 on port 2020 to make sure that it is available. Could this be blocked by your firewall, perhaps?\nYou could try and take stack traces of the traced application when this hang happens - if there is anything wrong with the BTrace code we should able to spot it from the stack traces (thread dump).\n\u2014\nReply to this email directly or view it on GitHub.\n. Version is 1.3.1. It hangs always at the same place, \nDEBUG: checking port availability: 2020.\nI am running out of ideas and Btrace still does not run\nFrancisco\nDate: Wed, 29 Jul 2015 07:37:33 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020 (#141)\nOk, try running btrace --version to check the version.\nAlso, try taking thread dump from the traced application when it hangs. It\nmight reveal some information about what is happening there.\n-JB-\nOn Wed, Jul 29, 2015 at 4:19 PM, Proofkyko notifications@github.com wrote:\n\nI created a rule on the firewall to open that port and checked logs. I\ncant find the problem. The situation mantains, Btrace will hang at checking\nport availability without root profile or the connection will be refused\nwhen called without administrator privileges.\nAny other idea ?\nFrancisco Antunes\nDate: Sat, 25 Jul 2015 13:15:57 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020 (#141)\nI am not able to reproduce the issue on the given OS and JDK.\nAfter the message 'DEBUG: checking port availability: 2020' has been\nprinted the agent tries to connect to IP 127.0.0.1 on port 2020 to make\nsure that it is available. Could this be blocked by your firewall, perhaps?\nYou could try and take stack traces of the traced application when this\nhang happens - if there is anything wrong with the BTrace code we should\nable to spot it from the stack traces (thread dump).\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/141#issuecomment-125966123.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Ok I am looking to thread dump and I am nem to this. What am I looking for ?\nNo dia 29/07/2015, \u00e0s 16:07, Jaroslav Bachorik notifications@github.com escreveu:\n\nWould you try to take thread dump?\nIt is really difficult to diagnose the issue especially if I am not able to\nreproduce it.\n-JB-\nOn Wed, Jul 29, 2015 at 4:49 PM, Proofkyko notifications@github.com wrote:\n\nVersion is 1.3.1. It hangs always at the same place,\nDEBUG: checking port availability: 2020.\nI am running out of ideas and Btrace still does not run\nFrancisco\nDate: Wed, 29 Jul 2015 07:37:33 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020 (#141)\nOk, try running btrace --version to check the version.\nAlso, try taking thread dump from the traced application when it hangs. It\nmight reveal some information about what is happening there.\n-JB-\nOn Wed, Jul 29, 2015 at 4:19 PM, Proofkyko notifications@github.com\nwrote:\n\nI created a rule on the firewall to open that port and checked logs. I\ncant find the problem. The situation mantains, Btrace will hang at\nchecking\nport availability without root profile or the connection will be refused\nwhen called without administrator privileges.\nAny other idea ?\nFrancisco Antunes\nDate: Sat, 25 Jul 2015 13:15:57 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020 (#141)\nI am not able to reproduce the issue on the given OS and JDK.\nAfter the message 'DEBUG: checking port availability: 2020' has been\nprinted the agent tries to connect to IP 127.0.0.1 on port 2020 to make\nsure that it is available. Could this be blocked by your firewall,\nperhaps?\nYou could try and take stack traces of the traced application when this\nhang happens - if there is anything wrong with the BTrace code we should\nable to spot it from the stack traces (thread dump).\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/141#issuecomment-125966123.\n\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/141#issuecomment-125976835.\n\u2014\nReply to this email directly or view it on GitHub.\n. Some updates here, I was running eclipse under another user, running both eclipse and btrace under the same user it finishes as connection refused. The debug messages are the following :\n\n\nDEBUG: btrace debug mode is set\nDEBUG: assuming default port 2020\nDEBUG: assuming default classpath '.'\nDEBUG: compiling AllCalls1.java\nDEBUG: compiled AllCalls1.java\nDEBUG: attaching to 1040\nDEBUG: checking port availability: 2020\nDEBUG: attached to 1040\nDEBUG: loading C:\\Software\\btrace-master\\build\\btrace-agent.jar\nDEBUG: agent args: port=2020,debug=true,systemClassPath=C:\\Program Files\\Java\\jre7/../lib/tools.jar,probeDescPath=.\nDEBUG: loaded C:\\Software\\btrace-master\\build\\btrace-agent.jar\nDEBUG: registering shutdown hook\nDEBUG: registering signal handler for SIGINT\nDEBUG: submitting the BTrace program\nDEBUG: opening socket to 2020\nConnection refused: connect\nStill wanthe thread dump ? Is it from the eclipse program pid or the btrace the one we are interested in ?\nFrancisco\nDate: Wed, 29 Jul 2015 08:20:37 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020 (#141)\nYou can use either VisualVM ('jvisualvm' command from the JDK installation)\nwhere you can 'open' the application and create the thread dump. You can\nthen copy-paste the thread dump here.\nOther possibility is to use 'jstack' (command line utility) on the\napplication and capture the output (either redirect it to a file or\ncopy-paste from the terminal)\n-JB-\nOn Wed, Jul 29, 2015 at 5:17 PM, Proofkyko notifications@github.com wrote:\n\nOk I am looking to thread dump and I am nem to this. What am I looking for\n?\nNo dia 29/07/2015, \u00e0s 16:07, Jaroslav Bachorik notifications@github.com\nescreveu:\n\nWould you try to take thread dump?\nIt is really difficult to diagnose the issue especially if I am not able\n\nto\n\nreproduce it.\n-JB-\nOn Wed, Jul 29, 2015 at 4:49 PM, Proofkyko notifications@github.com\n\nwrote:\n\n\nVersion is 1.3.1. It hangs always at the same place,\nDEBUG: checking port availability: 2020.\nI am running out of ideas and Btrace still does not run\nFrancisco\nDate: Wed, 29 Jul 2015 07:37:33 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020\n\n\n(#141)\n\n\nOk, try running btrace --version to check the version.\nAlso, try taking thread dump from the traced application when it\n\n\nhangs. It\n\n\nmight reveal some information about what is happening there.\n-JB-\nOn Wed, Jul 29, 2015 at 4:19 PM, Proofkyko notifications@github.com\nwrote:\n\nI created a rule on the firewall to open that port and checked logs.\n\n\n\nI\n\n\n\ncant find the problem. The situation mantains, Btrace will hang at\n\nchecking\n\nport availability without root profile or the connection will be\n\n\n\nrefused\n\n\n\nwhen called without administrator privileges.\nAny other idea ?\nFrancisco Antunes\nDate: Sat, 25 Jul 2015 13:15:57 -0700\nFrom: notifications@github.com\nTo: btrace@noreply.github.com\nCC: Antunes_47@hotmail.com\nSubject: Re: [btrace] Hanging at checking port availability: 2020\n\n\n\n(#141)\n\n\n\nI am not able to reproduce the issue on the given OS and JDK.\nAfter the message 'DEBUG: checking port availability: 2020' has been\nprinted the agent tries to connect to IP 127.0.0.1 on port 2020 to\n\n\n\nmake\n\n\n\nsure that it is available. Could this be blocked by your firewall,\n\nperhaps?\n\nYou could try and take stack traces of the traced application when\n\n\n\nthis\n\n\n\nhang happens - if there is anything wrong with the BTrace code we\n\n\n\nshould\n\n\n\nable to spot it from the stack traces (thread dump).\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\n<\n\n\n\nhttps://github.com/jbachorik/btrace/issues/141#issuecomment-125966123>.\n\n\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/141#issuecomment-125976835.\n\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jbachorik/btrace/issues/141#issuecomment-125985468.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "AbhishekPuligundla": "thanks i got it, the path really is wrong\n. sorry for the late reply but it is the error I am getting while using the above mentioned format.\njava.lang.ExceptionInInitializerError\n    at com.sun.btrace.BTraceRuntime.send(BTraceRuntime.java:1699)\n    at com.sun.btrace.BTraceRuntime.println(BTraceRuntime.java:1196)\n    at com.sun.btrace.BTraceUtils.println(BTraceUtils.java:1220)\n    at java.util.Collections$EmptyIterator.$btrace$traceclock$anadigiMethod(Collections.java:46)\n    at java.util.Collections$EmptyIterator.(Collections.java:4184)\n    at java.util.Collections$EmptyIterator.(Collections.java:4185)\n    at java.util.Collections.emptyIterator(Collections.java:4181)\n    at java.util.Collections$EmptySet.iterator(Collections.java:4314)\n    at java.lang.Class.createAnnotationData(Class.java:3527)\n    at java.lang.Class.annotationData(Class.java:3510)\n    at java.lang.Class.createAnnotationData(Class.java:3526)\n    at java.lang.Class.annotationData(Class.java:3510)\n    at java.lang.Class.createAnnotationData(Class.java:3526)\n    at java.lang.Class.annotationData(Class.java:3510)\n    at java.lang.Class.getAnnotation(Class.java:3415)\n    at com.sun.btrace.runtime.ClassFilter.isCandidate(ClassFilter.java:84)\n    at com.sun.btrace.agent.Client.isCandidate(Client.java:262)\n    at com.sun.btrace.agent.Main$2.run(Main.java:369)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.NullPointerException\n    at java.util.Locale.toLanguageTag(Locale.java:1416)\n    at sun.util.locale.provider.LocaleProviderAdapter.isSupportedLocale(LocaleProviderAdapter.java:310)\n    at sun.util.locale.provider.DateFormatSymbolsProviderImpl.isSupportedLocale(DateFormatSymbolsProviderImpl.java:63)\n    at sun.util.locale.provider.LocaleProviderAdapter.findAdapter(LocaleProviderAdapter.java:286)\n    at sun.util.locale.provider.LocaleProviderAdapter.getAdapter(LocaleProviderAdapter.java:254)\n    at java.text.DateFormatSymbols.getProviderInstance(DateFormatSymbols.java:357)\n    at java.text.DateFormatSymbols.getInstanceRef(DateFormatSymbols.java:349)\n    at java.text.SimpleDateFormat.(SimpleDateFormat.java:603)\n    at java.text.SimpleDateFormat.(SimpleDateFormat.java:580)\n    at com.sun.btrace.comm.MessageCommand.(MessageCommand.java:36)\n    ... 23 more\njava.lang.NoClassDefFoundError: Could not initialize class com.sun.btrace.comm.MessageCommand\n    at com.sun.btrace.BTraceRuntime.send(BTraceRuntime.java:1699)\n    at com.sun.btrace.BTraceRuntime.println(BTraceRuntime.java:1196)\n    at com.sun.btrace.BTraceUtils.println(BTraceUtils.java:1220)\n    at java.lang.invoke.MethodHandleImpl$1.$btrace$traceclock$anadigiMethod(MethodHandleImpl.java:46)\n    at java.lang.invoke.MethodHandleImpl$1.(MethodHandleImpl.java:54)\n    at java.lang.invoke.MethodHandleImpl.(MethodHandleImpl.java:54)\n    at java.lang.invoke.MethodHandle.(MethodHandle.java:422)\njava.lang.NoClassDefFoundError: Could not initialize class com.sun.btrace.comm.MessageCommand\n    at com.sun.btrace.BTraceRuntime.send(BTraceRuntime.java:1699)\n    at com.sun.btrace.BTraceRuntime.println(BTraceRuntime.java:1196)\n    at com.sun.btrace.BTraceUtils.println(BTraceUtils.java:1220)\n    at java.lang.invoke.MethodHandleImpl$1.$btrace$traceclock$anadigiMethod(MethodHandleImpl.java:46)\n    at java.lang.invoke.MethodHandleImpl$1.run(MethodHandleImpl.java)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.lang.invoke.MethodHandleImpl.(MethodHandleImpl.java:54)\n    at java.lang.invoke.MethodHandle.(MethodHandle.java:422)\njava.lang.NoClassDefFoundError: Could not initialize class com.sun.btrace.comm.MessageCommand\n    at com.sun.btrace.BTraceRuntime.send(BTraceRuntime.java:1699)\n    at com.sun.btrace.BTraceRuntime.println(BTraceRuntime.java:1196)\n    at com.sun.btrace.BTraceUtils.println(BTraceUtils.java:1220)\n    at java.lang.invoke.MethodHandleImpl$1.$btrace$traceclock$anadigiMethod(MethodHandleImpl.java:46)\n    at java.lang.invoke.MethodHandleImpl$1.run(MethodHandleImpl.java)\n    at java.lang.invoke.MethodHandleImpl$1.run(MethodHandleImpl.java:54)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.lang.invoke.MethodHandleImpl.(MethodHandleImpl.java:54)\n    at java.lang.invoke.MethodHandle.(MethodHandle.java:422)\njava.lang.NoClassDefFoundError: Could not initialize class com.sun.btrace.comm.MessageCommand\n    at com.sun.btrace.BTraceRuntime.send(BTraceRuntime.java:1699)\n    at com.sun.btrace.BTraceRuntime.println(BTraceRuntime.java:1196)\n    at com.sun.btrace.BTraceUtils.println(BTraceUtils.java:1220)\n    at java.util.Collections$EmptyIterator.$btrace$traceclock$anadigiMethod(Collections.java:46)\n    at java.util.Collections$EmptyIterator.hasNext(Collections.java)\n    at java.lang.Class.createAnnotationData(Class.java:3527)\n    at java.lang.Class.annotationData(Class.java:3510)\n    at java.lang.Class.createAnnotationData(Class.java:3526)\n    at java.lang.Class.annotationData(Class.java:3510)\n    at java.lang.Class.createAnnotationData(Class.java:3526)\n    at java.lang.Class.annotationData(Class.java:3510)\n    at java.lang.Class.getAnnotation(Class.java:3415)\n    at com.sun.btrace.runtime.ClassFilter.isCandidate(ClassFilter.java:84)\n    at com.sun.btrace.agent.Client.isCandidate(Client.java:262)\n    at com.sun.btrace.agent.Main$2.run(Main.java:369)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\njava.lang.NoClassDefFoundError: Could not initialize class com.sun.btrace.comm.MessageCommand\n    at com.sun.btrace.BTraceRuntime.send(BTraceRuntime.java:1699)\n    at com.sun.btrace.BTraceRuntime.println(BTraceRuntime.java:1196)\n    at com.sun.btrace.BTraceUtils.println(BTraceUtils.java:1220)\n    at java.util.Collections$EmptyIterator.$btrace$traceclock$anadigiMethod(Collections.java:46)\n    at java.util.Collections$EmptyIterator.hasNext(Collections.java)\n    at java.lang.Class.createAnnotationData(Class.java:3527)\n    at java.lang.Class.annotationData(Class.java:3510)\n    at java.lang.Class.createAnnotationData(Class.java:3526)\n    at java.lang.Class.annotationData(Class.java:3510)\n    at java.lang.Class.getAnnotation(Class.java:3415)\n    at com.sun.btrace.runtime.ClassFilter.isCandidate(ClassFilter.java:84)\n    at com.sun.btrace.agent.Client.isCandidate(Client.java:262)\n    at com.sun.btrace.agent.Main$2.run(Main.java:369)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n. Thank you.\n. the output is not being generated in the default folder where the script is.\n. so what should i do, if i remove the above statement it works fine, but i want to trace all the files that exist within a package or a program or a jar file. how can i trace all class with in a singale package name with out using the statement @OnMethod(clazz=\"/./\",method=\"/./\").\n. Say that i have three class in the package com.mypackages then how should i be able to trace each class when each class have different kind of methods. for example say class1 will have a constructor and class2 and class3 will have method1 and method2. do i have to write seperate OnMethod for each case or is it possible to write in one OnMethod only.\n. i want to trace the application which is added to the tomcat server. how can I trace the application that is tomcat server\n. What I want was, is it possible to trace an application which doesn't have a .exe file or a .jar file or a .class file. For example take tomcat, how can i start the tomcat with btracer which have a startup file to start the tomcat.\n. if I use the command btrace in command prompt like \"btrace 1345 tracefile.class\". Where can I find the tracing output. I didn't find any on the command prompt.\n. The output file is not generating  for any script not to a particular script.\n. No i tried using the linux version btrace file available in the btrace page(in kenai.com) but if i use the btrace master available in the github it is working(i.e is by using the builder version of btrace and it is generating the output file). what is the difference between those two files, the difference is builder version also gives access to the source code.\n. yes but i am still getting the same message. \n. Yes, i installed the java 7 in the system. like i said in #169 the application is using another jre 7 which is different from the system. But both the system java and application java are of same version.\n. i am using the btrace 1.3\nThe tracing is performed on tomcat web application. I imported my  war file to the webapps folder of linux system which have already existing tomcat server and is being used by another application and i tried to trace both applications seperately with two different scripts but both the scripts generated the above error. I checked in another tomcat server installed later and its working fine. It's not working with the already existing tomcat.\nThe old tomcat is performing perfectly and the applicaitons(my war file and the preexisted application) are also running fine. Only the tracing is not working and exception message is generating\nthe script i used is like below:\nimport com.sun.btrace.annotations.;\nimport static com.sun.btrace.BTraceUtils.;\n@BTrace \npublic class TraceTomcat\n{\n@OnMethod(clazz=\"/comtomcatbtrace.*/\",method=\"/.*/\",location=@Location(value=Kind.ENTRY))\npublic static void traceMethod(@ProbeClassName String pcm, @ProbeMethodName String pmn)\n        {\n                println(pcm);\n                println(pmn);\n        }\n @OnMethod(clazz=\"/javax.servlet../\",method=\"/.*/\",location=@Location(Kind.RETURN))\n public static void traceMethod2(@Return String obj, @ProbeClassName String pcm, @ProbeMethodName String pmn)\n        {\n                println(strcat(strcat(\"The value returned from method \",pmn),strcat(\" of class\",pcm)));\n        }\n }\n. Yes the tomcat is running under the same user. The error is not occurring after what i have done(explained in the #169).\n. I find that the inbuilt tomcat application itself as a jre which is different from the system java and so when trying to attach btrace agent , the btrace is looking for tools.jar file in the jre of the application rather than using the system. so i just added the tools.jar file in the respective path and it's working. i would like to ask why btrace is not using the tools.jar of the system and looking for the tools.jar file in the application jre.\n. not to the tomcat cat lib directory but to the jre folder of the application\n. Hi, \n     You said you were using java jdk 1.7. Is your application is using this jdk or does your application have its own java. If it has its own jre separately then try to add the tools.jar file or jdk to the application. I explained it above. If you try to copy only tools.jar file make sure to copy it in a bin folder and place that folder in the parent folder of the jre of the application. I hope it works. I think enhancement was already made on this issue. Just check the above comments again.\n. As you specified, virgo app is using jre but not the jdk. Try adding the tools.jar file to the virgo jre parent folder(make sure the tools.jar is from same version of java used). I don't remember exactly but btrace uses a particular file from tools.jar file of the target application. The btrace is using the jdk for compiling the btrace script. Why don't try adding tools.jar. I also faced the same kind of problem but after adding tools.jar it started tracing. When we trace a smple java prigram, the btrace and the application running will both have jdk and also jre Environments. There the btrace will consider the tools.jar file from jdk foe the application. \n. Almost all the applications will be provided with a jre but not jdk since all the files will be .class files so there is no need for jdk. But we are trying to inject byte code to class file usinf the agent concept (brrace is using). So i am not sure but that is one of the reason i looked into adding the file from bin folder of jdk to to target application jre path. \n. source class:\nimport java.io.*;\nimport java.util.HashMap;\npublic class trail7\n{\n        public static void main(String args[])\n        {\n            try{ Thread.sleep(10000); }catch(Exception e){}\n                trail7 object1=new trail7();\n                String hello=\"hello\";\n                int n=object1.trail7Method(hello);\n        }\n    int trail7Method(String he)\n    {\n        //System.out.println(he);\n        int m=698;\n        return m;\n    }\n}\nBtraceScript:\nimport com.sun.btrace.annotations.;\nimport static com.sun.btrace.BTraceUtils.;\nimport com.sun.btrace.;\nimport java.lang.reflect.Field;\n@BTrace //(unsafe=true)\npublic class tracetrail7\n{\n    @OnMethod(clazz=\"trail7\", method=\"/./\", location=@Location(Kind.RETURN))\n    public static void trail7Method3(@Return int data,  @Self Object obj, @ProbeClassName String classname, @ProbeMethodName String methodname)\n    {\n        println(\"method Return\");\n        println(classname);\n        println(methodname);\n        printFields(obj);\n        println(data);\n    }\n}\nif i am using the above script i am getting the below error\nbtrace DEBUG: java.lang.NullPointerException\njava.lang.NullPointerException\n        at java.lang.String.(String.java:198)\n        at com.sun.btrace.org.objectweb.asm.Type.getInternalName(Unknown Source)\nat com.sun.btrace.util.LocalVariablesSorter.newLocal(LocalVariablesSorte\nr.java:262)\n        at com.sun.btrace.runtime.Instrumentor$15.callAction(Instrumentor.java:1\n088)\n        at com.sun.btrace.runtime.Instrumentor$15.onMethodReturn(Instrumentor.ja\nva:1134)\n        at com.sun.btrace.runtime.MethodReturnInstrumentor.visitInsn(MethodRetur\nnInstrumentor.java:61)\n        at com.sun.btrace.org.objectweb.asm.MethodAdapter.visitInsn(Unknown Sour\nce)\n        at com.sun.btrace.org.objectweb.asm.ClassReader.accept(Unknown Source)\n        at com.sun.btrace.org.objectweb.asm.ClassReader.accept(Unknown Source)\n        at com.sun.btrace.runtime.InstrumentUtils.accept(InstrumentUtils.java:66\n)\n        at com.sun.btrace.runtime.InstrumentUtils.accept(InstrumentUtils.java:62\n)\n        at com.sun.btrace.agent.Client.instrument(Client.java:317)\n        at com.sun.btrace.agent.Client.doTransform(Client.java:143)\n        at com.sun.btrace.agent.Client.transform(Client.java:122)\n        at sun.instrument.TransformerManager.transform(TransformerManager.java:1\n88)\n        at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java\n:428)\n        at java.lang.ClassLoader.defineClass1(Native Method)\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:760)\n        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:14\n2)\n        at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)\n        at java.net.URLClassLoader.access$100(URLClassLoader.java:73)\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:368)\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:362)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:361)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n        at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)\nif i changed the btrace script like this\nimport com.sun.btrace.annotations.;\nimport static com.sun.btrace.BTraceUtils.;\nimport com.sun.btrace.;\nimport java.lang.reflect.Field;\n@BTrace //(unsafe=true)\npublic class tracetrail7\n{\n    @OnMethod(clazz=\"trail7\", method=\"/./\", location=@Location(Kind.RETURN))\n    public static void trail7Method3(@Return int data,  @Return String data1, @Self Object obj, @ProbeClassName String classname, @ProbeMethodName String methodname)\n    {\n        println(\"method Return\");\n        println(classname);\n        println(methodname);\n        printFields(obj);\n        println(data);\n                println(data1);\n    }\n}\nI am getting this error\nInvalid @Return parameter. Expected 'V, received Ljava/lang/String;\nInvalid @Return parameter. Expected 'I, received Ljava/lang/String;\nHere it is showing that instead of void and integer its getting string\nbut\nif i re-arrange the  @Return int data, @Return String data1 to @Return String data1, @Return int data it prints this\nmethod Return\ntrail7\ntrail7Method\n{}\n698\nhello\nI don't understand why @Return String data1 is required and why it is getting the string \"hello\". \nAlso why after rearranging the @Return arguments its allowing string for the void.\nwhat if i  don't know what type of return value and how many values a method is returning then how to print the different values. do i have to mention every datatype returning by using @Return argument annotations.\n. 1) The internal error is showing a message like \"internal error has occured, if problem exists please contact your administrator\" when using btrace.\n2) The JDk i am using is 1.7.0_60\n3) The script is not a complicated one it'll trace to check for method entries\n@OnMethod(clazz=\"classname\",method=\"/.*/\",location=@Location(value=Kind.ENTRY))\npublic static void traceMethod(@Self Object obj, @ProbeClassName String clsname,@ProbeMethodName String methodname)\n{\n      println(strcat(\"class name is \",clsname));\n      println(strcat(\"method name is \",methodname));\n      printFields(obj);\n}\n4) I think there is no problem with jvm i was able to run other java programs at the same time which are not being traced and they are working fine.\n5) hs_err_file is not generated\n6) BTrace is in safe mode(not in unsafe mode)\n. i changed the size but the same error is comming. it's not related to memory.\n. Yes i am copying a external tools.jar to my application.\n. wasn't TargetInstance was supposed to be used when we are using Kind.CALL and also in the above code you didn't specify the identifier after @TargetInstance. The above code is showin the error\n expected\nBTrace compilation failed.\nif I use the identifier it is showing the exception\ncom.sun.btrace.VerifierException: @CalledInstance annotation applicable only for\n Kind.CALL: traceMethod123456(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Str\ning;)V(1)\n        at com.sun.btrace.runtime.Verifier.reportError(Verifier.java:240)\n        at com.sun.btrace.agent.Client.verifySpecialParameters(Client.java:450)\n        at com.sun.btrace.agent.Client.verify(Client.java:419)\n        at com.sun.btrace.agent.Client.loadClass(Client.java:236)\n        at com.sun.btrace.agent.RemoteClient.(RemoteClient.java:59)\n        at com.sun.btrace.agent.Main.startServer(Main.java:405)\n        at com.sun.btrace.agent.Main.access$000(Main.java:65)\n        at com.sun.btrace.agent.Main$3.run(Main.java:168)\n        at java.lang.Thread.run(Thread.java:745)\nSo which means the TargetInstance and TargetMethodOrField must be used when Kind.CALL must be used, right.\n. If i use the above code,It is not printing anything.\n. DEBUG: accepting port 2020\nDEBUG: dumpDir is c:\\Users\\Administrator\\Desktop\\\nDEBUG: assuming default classpath '.'\nDEBUG: compiling TraceExample.java\nDEBUG: compiled TraceExample.java\nDEBUG: attaching to 3396\nDEBUG: checking port availability: 2020\nDEBUG: attached to 3396\nDEBUG: loading C:\\Users\\Administrator\\Desktop\\btracebin\\build\\btrace-agent.jar\nDEBUG: agent args: port=2020,statsd=,debug=true,dumpClasses=true,dumpDir=c:\\Users\\Administrator\\Desktop\\,systemClassPath=C:\\myApplication\\Java\\jdk\\jre/../lib/tools.jar,probeDescPath=.\nDEBUG: loaded C:\\Users\\Administrator\\Desktop\\btracebin\\build\\btrace-agent.jar\nDEBUG: registering shutdown hook\nDEBUG: registering signal handler for SIGINT\nDEBUG: submitting the BTrace program\nDEBUG: opening socket to 2020\nDEBUG: sending instrument command\nDEBUG: entering into command loop\nDEBUG: received com.sun.btrace.comm.OkayCommand@b4cef0\nit isn't proceeding after it. some times one or two more lines similar to the last line will be added and that's all after that nothing will happen. And during that time when i try to work with the application it is    not working properly. Even the dump files are created, since i think instrumentation is not started.\nthe log file contains the error i mentioned above and apart from that nothing interesting is happening.\ni have a doubt can btrace trace applications that are connected with a database. i think it might be the problem. \n. Even after restarting the application i am getting the same output. Application log doesn't contaion any debug lines and also this error is what i am getting every time start btrace.\nERROR \njava.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at \n. do you know how to prune the old btrace agent without restarting the application. Also do you think that database connection in the application is creating any problems while using btrace. Because i checked the above error cause by observing the log file and saw that the dbconnections get failed. so i created a application which is connected to database and tried to trace it. Initially it started tracing the application but after some time the trace stops and when i restart the trace it won't proceed after the step checking port availability :2020 in verbose mode.\nwhat i want to know was when i was initially running the btrace in verbose mode the communication between btrace agent and application seems to happen normally, but when i stop the trace and restart the trace again it won't happen normally the communication is stopping as i showed above in the second comment or like below. what is the cause for this?\nC:\\Users\\apuligundla\\Desktop>btrace -v -d c:\\Users\\apuligundla\\Desktop\\dumpfiles\n 4180 TraceApplication.java\nDEBUG: dumpDir is c:\\Users\\apuligundla\\Desktop\\dumpfiles\nDEBUG: assuming default port 2020\nDEBUG: assuming default classpath '.'\nDEBUG: compiling TraceApplication.java\nDEBUG: compiled TraceApplication.java\nDEBUG: attaching to 4180\nDEBUG: checking port availability: 2020\nit's not proceeding after this. i tried with different port also. some times it proceeds this point and stops at the point mentioned in the comment before.\nThe script i used was\nimport com.sun.btrace.annotations.;\nimport static com.sun.btrace.BTraceUtils.;\n@BTrace\npublic class TraceApplication\n{\n    @OnMethod(clazz=\"/./\",method=\"/./\",location=@Location(value=Kind.ENTRY))\n    public static void traceMethod(@Self Object obj, @ProbeClassName String classname, @ProbeMethodName String methodname)\n    {\n        println(obj);\n        println(classname);\n        println(methodname);\n    }\n}\nThe database is like\n+------------+------------+\n| username   | password   |\n+------------+------------+\n| abhi       | btrace     |\n| abhishek   | puligundla |\n| puligundla | BTr@ce     |\n+------------+------------+\nThe application source files are\n1) TrailServ.java\npackage comtomcatbtrace;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.lang.management.ManagementFactory;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.sql.Connection;\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n/\n- Servlet implementation class TrailServ\n  /\n  @WebServlet(\"/TrailServ\")\n  public class TrailServ extends HttpServlet {\n  private static final long serialVersionUID = 1L;\n  String name,pwd;\n  Connection conn;\n  Statement s;\n  ResultSet rs;\n  /\n  - @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)\n    /\n    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    // TODO Auto-generated method stub\n    response.setContentType(\"text/html\");\n    PrintWriter out=response.getWriter();\n    ManagementFactory.getRuntimeMXBean().getName();\n    // request.getRequestDispatcher().include(request,response);\n    name=request.getParameter(\"username\");\n    pwd=request.getParameter(\"password\");\n    try{\n        Class.forName(\"com.mysql.jdbc.Driver\");\n        String query=\"SELECT * from loginTable where username='\"+name+\"'\";\n        conn=DriverManager.getConnection(\"jdbc:mysql://localhost:3306/mysql\",\"root\",\"vmware1!\");\n        s=conn.createStatement();\n        rs=s.executeQuery(query);\n```\nwhile(rs.next())\n{\n    if(name.equals(rs.getString(\"username\")))\n    {\n        if(pwd.equals(rs.getString(\"password\")))\n        {\n            out.println(\"<html><body>\");\n            out.println(\"Welcome to search page\");\n            out.println(\"<form action='TrailSerc'>\");\n            out.println(\"<input type='text' name='data'/>\");\n            out.println(\"<input type='submit' name='search' value='search'/>\");\n            out.println(\"</body></html>\");              \n        }\n        else\n        {\n            out.println(\"<html><body>\");\n            out.println(\"Enter valid username and password\");\n            request.getRequestDispatcher(\"TrailHtml2.html\").include(request,response);\n        }\n    }\n    else\n    {\n        out.println(\"<html><body>\");\n        out.println(\"Enter valid username and password\");\n        request.getRequestDispatcher(\"TrailHtml2.html\").include(request,response);\n    }\n}   \nrs.close();\ns.close();\nconn.close();\n```\n\n}\ncatch(Exception e)\n{\n    e.printStackTrace();\n}\n}\n}\n\n2) Trailserc.java\npackage comtomcatbtrace;\nimport java.io.IOException;\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n/*\n- Servlet implementation class TrailSerc\n  /\n  @WebServlet(\"/TrailSerc\")\n  public class TrailSerc extends HttpServlet {\n  private static final long serialVersionUID = 1L;\n/*\n  - @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)\n    /\n    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    // TODO Auto-generated method stub\n    String name1=request.getParameter(\"data\");\n    response.sendRedirect(\"http://www.google.com/#q=\"+name1);\n    }\n}\n3) TrailHtml2.html\nhtml\n\n\n\nInsert title here\n\n\n\nEnter Username : \nEnter Password : \n\n\n\n\n4) web.xml \nxml version=\"1.0\" encoding=\"UTF-8\"?\n\nTrailPackage2\n\nTrailServ\ncomtomcatbtrace.TrailServ\ncomtomcatbtrace.TrailServ\n\n\ncomtomcatbtrace.TrailServ\n/TrailServ\n\n\nTrailSerc\ncomtomcatbtrace.TrailSerc\ncomtomcatbtrace.TrailSerc\n\n\ncomtomcatbtrace.TrailSerc\n/TrailSerc\n\n\nTrailHtml2.html\n\n\n. Is it possible to revoke the state of the application after using the btrace. I mean can we keep the backup of the application state and revoke to that state when the tracing is completed. If Thats possible then we can unload the jvm agent without restarting the application.\n\nAlso when i check the tracing in verbose mode after two or three times starting and stopping the tracing \nif i start the trace again the btrace is stopps at the following steps\nDEBUG: received com.sun.btrace.comm.RenameCommand@6a669053\nDEBUG: received com.sun.btrace.comm.OkayCommand@738d6fb7\nDEBUG: received com.sun.btrace.comm.OkayCommand@4aa192a5\ni checked the main.java and client.java program of Client and Agent and i observed that the btrace is either waiting for a long time for or it has been stopped. Is this because of the previously attached jvm agents or anything else.\n. when we are instrumenting a spring based applications, how will btrace instruments the application. will it use the spring framework instrumentation process or will it use the instrumentation process of the system java.\n. does btrace create any proxy while injecting the trace code to the application. if so will it be similar or different from the proxy created by a spring application (or) the proxy created by spring is modified by the btrace or vice versa is happening.\n. is there a way to avoid a class from tracing that is\nif i have a trace script like this\n@OnMethod(clazz=\"/package1.package2./\",method=\"/./\",location=@Location(value=Kind.ENTRY))\nbut i don't want the btrace to trace some classes that are under package1.package2.*\nif there are classes named class1,class2,class3 and class4 are present under package1.package2 then how to avoid tracing class2 and class4. Is there a way to trace only class1 and class3 by using the above line.\n. i am confused how can i represent a conditional expression in the clazz=\"/ /\"\n. can you check whether btrace is capable of tracing enterprise java applications which uses spring framework.\n. ",
    "Tapan2609": "@jbachorik I am having a tracescript with @OncrMethod(clazz=\"my.app.package\", method=\"/.*/\") and also my app deployed as a war file in tomcat server. Now, I am attaching \"btrace  tracescript\" this way. I am seeing only Tomcat's internal classes and methods being traced but not my application's. Could you please help me here.. Hi @jbachorik\nHow to instrument application classes when there are multiple deployments in weblogic. If we specify weblogic's PID, It will instrument only weblogic internal classes. Is it possible to attach btrace to a single deployment in a weblogic server?. Facing the same issue as mentioned by @Ranganathvk .....Any help??.... Hi Bachorik,\nThanks for update.\nFortunately we were able to monitor weblogic 12c server with btrace script.\nOnly challenge is we are not able to monitor weblogic 11g servers with\nbtrace script.\nThere might be issues with java versions like 12c is completely built on\njava 8 and 11g is on java 6.\nWe shall update you if we get any solution for this.\nOnce again thanks for support.\nThanks,\nTapan Hegde\nOn Sat, Feb 17, 2018, 9:20 PM Jaroslav Bachorik notifications@github.com\nwrote:\n\nThe script seems to be stuck at the beginning of instrumentation,\naccording to the logs. Is there any more info in weblogic logs?\nThere should be no difference from tracing any other Java application -\nunless weblogic uses OSGI-like class isolation which would require a\nspecial config in order to make BTrace classes reachable as bootstrap\nclasses.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/btraceio/btrace/issues/313#issuecomment-366449937,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ab6paC-1yGYENe9qwlu4YE20mi4s2eTxks5tVvU5gaJpZM4RpLAm\n.\n. \n",
    "bvanders": "@AbhishekPuligundla are you implying that you added the tools.jar to the tomcat lib directory?\n. @AbhishekPuligundla that worked in my testing.  Thanks.  I would prefer if there was a way to instruct btrace to use the tools.jar in the non-JRE lib directory.  That is, I have the jar present in my $JAVA_HOME/lib, but it is not present by default in $JAVA_HOME/jre/lib.  @jbachorik can I point btrace at the \"right\" directory?\n. I don't wish to link a foreign tools.jar.  Btrace doesn't appear to look for the jar at ../lib/tools.jar in the version I am using: BTrace v.1.3 (20150516).\nJava version:\njava version \"1.7.0_72\"\nJava(TM) SE Runtime Environment (build 1.7.0_72-b14)\nJava HotSpot(TM) 64-Bit Server VM (build 24.72-b04, mixed mode)\nThe JVM that I am trying to btrace is a tomcat process with its JAVA_HOME pointing to the jre directory.  Attempts to run a btrace script against this result in \n...\nDEBUG: server not yet available; retrying ...\nDEBUG: server not yet available; retrying ...\nDEBUG: server not yet available; retrying ...\nException in thread \"main\" java.lang.NullPointerException\n    at com.sun.btrace.client.Client.submit(Client.java:353)\n    at com.sun.btrace.client.Main.main(Main.java:189)\nDEBUG: sending exit command\nException in thread \"Thread-0\" java.lang.IllegalStateException\n    at com.sun.btrace.client.Client.send(Client.java:458)\n    at com.sun.btrace.client.Client.sendExit(Client.java:392)\n    at com.sun.btrace.client.Main$2.run(Main.java:226)\n    at java.lang.Thread.run(Thread.java:745)\nHowever, when I copy the tools.jar to the jre/lib/ directory, btrace executes as expected.\n. It's Linux.  Ubuntu.  \nI'll try building the latest btrace and experimenting with directory permissions to see if I can provide more details about the problem.\n. I haven't touched it recently.  My recollection is that the binary I downloaded was \"broken.\"  However, when I built btrace from the source code available, it seemed to not suffer the same problem. That was several months ago.  I'll close this and reopen if I have more info to add.\n. ",
    "moonlitSpider": "I wonder if I might ask @jbachorik to re-open this issue because I am hitting it reliably.\nI lately downloaded & installed btrace 1.2.5.1 into an Ubuntu VM (VMware). What's perhaps problematic about my environment is that the JVM I am trying to run btrace against is running in a Docker container. The JVM itself is running a Virgo OSGI server.\nbtrace runs on the host (not in a container). But I've done two things that should enable btrace to access the container.\n1. run the container with Docker's pid=host flag. This allows the container to share the host's PID space (no pid isolation). I know that this was effective because, before enabling this, I couldn't run JVisualVM against the JVM. But now I can.\n2. Expose container port 2024 as host port 2024. I am not at all sure what this does, or why it's even necessary.\nIn any event, I am getting error \"Unable to open socket file: target process not responding or HotSpot VM not loaded\" and would be most grateful for some debugging guidance on this. I'd very much like to get btrace working.\nJava is JDK1.7.0_80.\nThank you.\n-Paul\n. Dear Mr. Bachorik,\nThank you for your reply. Most kind of you.\nWhere can I download the 1.3.6 version?\nCordially,\nPaul\n\nFrom: Jaroslav Bachorik notifications@github.com\nSent: Wednesday, May 4, 2016 6:13:42 PM\nTo: btraceio/btrace\nCc: Bell, Paul; Mention\nSubject: Re: [btraceio/btrace] how to trace a application which is run by using a tcserver which runs tomcat inbuilt (#169)\n@moonlitSpiderhttps://github.com/moonlitSpider The mention of OSGI server is new here - that may very well be causing the problems. You need to configure the OSGI container to play nicely with BTrace - see this gisthttps://gist.github.com/jbachorik/82f8c2a0d9574af14d19b45704773187#file-btrace_osgi-md\nThe BTrace version you are using is rather old - the current version is 1.3.6 so you might try that one.\nRegarding the port - BTrace socket server is by default running on port 2020. I assume the 2024 value must be a remnant of someones customized setup?\n\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHubhttps://github.com/btraceio/btrace/issues/169#issuecomment-217019802\nCATALOGIC SOFTWARE, ATTENTION::----- The information contained in this message (including any files transmitted with this message) may contain proprietary, trade secret or other confidential and/or legally privileged information. Any pricing information contained in this message or in any files transmitted with this message is always confidential and cannot be shared with any third parties without prior written approval from Catalogic Software. This message is intended to be read only by the individual or entity to whom it is addressed or by their designee. If the reader of this message is not the intended recipient, you are on notice that any use, disclosure, copying or distribution of this message, in any form, is strictly prohibited. If you have received this message in error, please immediately notify the sender and/or Catalogic Software and destroy all copies of this message in your possession, custody or control.\n. Ah, never mind; thanks. I found it at https://github.com/btraceio/btrace/releases/tag/v1.3.6\nI will try again with this version.\nCordially,\nPaul\n. Hello again,\nI downloaded & installed 1.3.6; set \norg.osgi.framework.bootdelegation=com.sun.btrace,com.sun.btrace.*,\\\nper your instruction, but still getting the same result.\nHow best to debug this?\nthanks for your help.\n-Paul\n. Thanks, Abishek. I appreciate your help.\nI am causing both the Virgo (JVM) application and btrace to use the same Java. Although, to be quite accurate, it's possible that the Virgo app is using the JRE whereas btrace is using the JDK. But in each case it's the same 1.7.0_80 version of Java.\nDoes this remove the need for the behavior you describe above re tools.jar? \nAnother question re the classes named by org.osgi.framework.bootdelegation: do these classes need to be somehow (classpath?) visible to Virgo?\nThanks again.\n-Paul\n. FWIW, here is the -version output. This Java is being used by both btrace & the application that I am trying to trace:\n[root@ecxprimary /]# /usr/java/jdk1.7.0_80/bin/java -version\njava version \"1.7.0_80\"\nJava(TM) SE Runtime Environment (build 1.7.0_80-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 24.80-b11, mixed mode)\n. Thanks, Abishek. But I'm not sure how you conclude that Virgo is using the JRE but not the JDK version of the Java executable. In fact, the java executable under ../bin/java is identical to that under ../jre/bin/java (I did a diff).\nI should probably make clear that the ../jre directory itself is under /usr/java/jdk1.7.0_80/bin. Also there is only one tools.jar and it's at /usr/java/jdk1.7.0_80/lib/tools.jar.\nDo you see anything \"wrong\" with this?\nI am more concerned about the meaning and implementation of the org.osgi.framework.bootdelegation=com.sun.btrace,com.sun.btrace.*,\\ statement that @jbachorik  mentioned above. Specifically, does Virgo itself need access to the btrace classes....?\n-Paul\n. Here's what \"-v\" generates\nDEBUG: assuming default port 2020\nDEBUG: assuming default classpath '.'\nDEBUG: reading ./PbTrace.class\nDEBUG: read ./PbTrace.class\nDEBUG: attaching to 9377\nterminating with error:\nunable to open socket file: target process not responding or hotspot vm not loaded\n. One more thing, I am able to monitor this Virgo application using plain old JVisualVM.\nDoes this fact illuminate things at all?\nThanks for your help.\n-Paul\n. Is it generally the case JVisualVM for, say, Java 1.X cannot monitor an application compiled by Java 1.Z?\n. Very good. \nSo, if I run JVisualVM on Windows 7 with my target application on Ubuntu, then I need to ensure that JVisualVM and (by extension, I suppose) btrace are using on Windows a tools.jar file that is compatible (the same as?) the tools.jar on the Ubuntu node?\nIf it's the \"the same as\", then what constitutes \"compatible with the target application\"?\nWith respect to the Dockerized OSGI app I am trying to probe, I should point out that a few years ago I was able to use JVisualVM against it before it was a Dockerized app. At that time I never tried btrace.\nI remain curious as to the meaning of the osgi parameter you mentioned above. Specifically, what is it supposed to do and how does it work? As noted, I did set that bootdelegation parameter but it seems to have had no effect. But that could be because Virgo actually needs access to the classes named in the bootdelegation parameter. But I've no idea.\nThanks again.\nCordially,\nPaul\n. So I upgraded to Java 1.8.0_92 and tried again.\nAfter installing the BTrace plugin into JVisualVM, I compiled therein the script above (see below), but no output, e.g., the two println statements, is produced.\nPlease note that the monitored program is definitely creating files.\nI'd be grateful for any light on this.\nThanks.\n```\n** Compiling the BTrace script ...\n Compiled\n* Instrumenting 1 classes ...\n Done\n* BTrace up&running\n* Done\n BTrace up&running\n```\n. Not sure I follow.\nI create a jar file & run it outside of the eclipse environment.\nThat is, I am running \"java -jar\" where the java command is in the bin directory of the JDK distro.\nSo I am running the app on full JDK, no?\nThank you.\nOn May 6, 2016, at 2:27 PM, \"Jaroslav Bachorik\" notifications@github.com<mailto:notifications@github.com> wrote:\nYou need to run the app on a full JDK.\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHubhttps://github.com/btraceio/btrace/issues/224#issuecomment-217522017\nCATALOGIC SOFTWARE, ATTENTION::----- The information contained in this message (including any files transmitted with this message) may contain proprietary, trade secret or other confidential and/or legally privileged information. Any pricing information contained in this message or in any files transmitted with this message is always confidential and cannot be shared with any third parties without prior written approval from Catalogic Software. This message is intended to be read only by the individual or entity to whom it is addressed or by their designee. If the reader of this message is not the intended recipient, you are on notice that any use, disclosure, copying or distribution of this message, in any form, is strictly prohibited. If you have received this message in error, please immediately notify the sender and/or Catalogic Software and destroy all copies of this message in your possession, custody or control.\n. Hi Jaroslav,\nTrying to simplify things, I am presently using Windows 7 to try what I hoped would be some very simple btrace cases. So Ubuntu is not in the mix. If I can get things working on Windows, and thereby learn some btrace, I will return to my original, complex problem (containerized Virgo on Ubuntu).\nI will try what you say re @Self to match the File.createNewFile() call.\nThanks for your help.\n-Paul\n. Hmm....got it working:\npublic class HelloWorld {\n@OnMethod(clazz=\"java.io.File\",method=\"createNewFile\")\npublic static void onNewFileCreated(@Self java.io.File file) {\n   BTraceUtils.println(\"New file is being created\");\n   BTraceUtils.println(file);\n  }\n}\nBut it's not clear to me why the 2nd println prints the name of the file I am creating. I mean, that's what I wanted to see, but I don't understand what's going on under the covers. Put otherwise, how is the variable 'file' being interpreted by btrace?\nThanks again.\n. Understood (and pretty much what I supposed); thanks again.\n. Thank you.\nFunny you bring this up because I've been looking around for a good starting point with Btrace.\nI am curious about the provenance of this tool. It seems to go back a few years and over that time has had various champions, you, I suppose, being its current champion.\nIf I'm right about its history, then this may account for the seeming lack of comprehensive documentation, e.g., current user guides and programming guides. There really seems to be a lot to learn.\nWhat about the btrace project at the Kenai web pages? Is that stuff still current or has it been superceded?\nCordially,\nPaul\n. Hi Jaroslav,\nThanks much for this history. I readily understand the \"curse\" you describe. Nonetheless, thank you for your efforts on this tool.\nMy interest in btrace, which goes back several years, is rooted in an article I read many years ago in the IBM Systems Journal. This article described a state-sampling monitor which allowed one to determine where most time was being spent in a program. Conceptually, it's simple:\n1. the monitor runs a timer and wakes up periodically.\n2. upon waking it examines threads of interest to see if they are running (in flight on a processor) or waiting to run (in processor run queue), or waiting.\n3. if they're waiting, then it figures out what resource they're waiting for\n4. keeps a table of these samples by thread\nWhen you stop the monitor it dumps the table and with some simple statistical methods you can figure out who's spending time and where.\nBeing an old mainframe assembly language programmer, and quite familiar with OS internals, it was easy for me to write such a program. But I've always wanted to provide such instrumentation against a Java program & that's where btrace comes in.\nIf you have the time and inclination I'd very much appreciate some guidance on how to do this with btrace.\n[Aside: Several years ago, when I remembered more about Java internals, I think I recall being stumped by analyzing Java thread wait states, i.e., I recall something about Java monitors as a means of synchronizing on external events, e.g., I/O. But I could never find a way of determining what device a thread was waiting on.]\nAnd then there's the matter of the target program running OSGI Virgo in a Docker container. Still don't know how to resolve that one.\nThanks again.\n-Paul\n\nFrom: Jaroslav Bachorik notifications@github.com\nSent: Monday, May 9, 2016 2:17:36 AM\nTo: btraceio/btrace\nCc: Bell, Paul; Author\nSubject: Re: [btraceio/btrace] Learning the BTrace Basics (#224)\nWell, I was the 'champion' since Sundar (the original author) moved to other, more interesting to him, projects. If I remember well I was the maintainer of BTrace since 2009.\nThe main reason for the lacking documentation is the fact that I was working on it only during my free time and when I had a chance I better invested that time into fixes, improvements and new features. Basically it is the curse of hobby open source projects - nobody really feels like contributing to docs.\nActually, I did prepare a step-by-step tutorial to start with BTrace but it was paid for by a 3rd party company so I need to clear with them first before I put it anywhere in open.\nRegarding Kenai - it's been mostly zombified since I moved the project to GitHub. Kenai forge was left dead by Oracle, moving back to java.net was problematic, mostly because there once were such a project (before moving to 'progressive' kenai.com) and the java.net support stuff was also cut down.\nAfter doing a small survey I moved the project to GitHub. Probably a wise decision considering that java.net is being discontinued as we are speaking.\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHubhttps://github.com/btraceio/btrace/issues/224#issuecomment-217784034\nCATALOGIC SOFTWARE, ATTENTION::----- The information contained in this message (including any files transmitted with this message) may contain proprietary, trade secret or other confidential and/or legally privileged information. Any pricing information contained in this message or in any files transmitted with this message is always confidential and cannot be shared with any third parties without prior written approval from Catalogic Software. This message is intended to be read only by the individual or entity to whom it is addressed or by their designee. If the reader of this message is not the intended recipient, you are on notice that any use, disclosure, copying or distribution of this message, in any form, is strictly prohibited. If you have received this message in error, please immediately notify the sender and/or Catalogic Software and destroy all copies of this message in your possession, custody or control.\n. ",
    "dineshnagar": "my application running on tomcat server 9090 port and PID 15356. I want to trace application using Btrace. could you please share the steps need to fellow.. ???. BTrace v.1.3.9-unravel-2010 (20180122). thanks for the support its working fine i am able to trace tomcat and spring boot application only below changes \n1. changes in scripts \n @OnMethod(\n        clazz=\"/es\\.asegnz\\.spring\\.boot\\.gradle\\.sample\\.../\",\n        method=\"/../\"\n    )\nin clazz and method values  we have star.\n2. remove class path from command then its working fine i have set class path in BTRACE_HOME in E.V.\nbtrace -p 2020 4956 BtraceScript.class\n2020 port and 4956 is PID and I have used BtraceScript.class\n\nOne more Question I have, Can we get the Btrace trace result in log file if yes so please share the steps..??. ",
    "themoriarty": "OK, so this seems like a OpenJDK issue: https://bugs.openjdk.java.net/browse/JDK-8008678\nOpenJDK 9 handles this case better - it prints out InternalError exception and doesn't crash. I managed to pinpoint the exact class that triggers this issue and the workaround was to disable probe for it (class=\"/(?!bad.class).*/\")\n. ",
    "joachimhs": "You can add the following parameters: \nstdout=false,fileRollMilliseconds=7500\nwhich will output to a .btrace file (alongside the main .btrace.class file), rolled over every 7500 milliseconds. \nI agree, though, that an option \u201coutputDirectory\u201d would be quite useful to separate the .class files from the logs. \n/* Med Vennlig Hilsen | Very Best Regards\n-       Joachim Haagen Skeie\n- @Degree, Bachelor and Master of Information Technology, QUT, Brisbane, Australia\n- @Title, Senior Consultant and Owner, Haagen Software AS\n- @Website: http://haagen-software.no\n- @Twitter: joachimhs\n- @Phone: +47 4141 5805\n  /\nOn 20 Nov 2015, at 04:22, Zee Chen notifications@github.com wrote:\n\nCan we add a \"-o logfile\" option to the client?\n\u2014\nReply to this email directly or view it on GitHub.\n. I agree. This is particularly bad form. However, I end up with output files named \"TraceMem.class-.MontricAgent.1461952385969.btrace\" which seems to have a redundant dash in them. Maybe it would be better to find and remove this one instead. \n\nI will investigate a bit on this issue. \n. Yes. My bad. I will fix :) \n. This debug line is there a few lines down, so removing it here\n. Removing this for now. My automatic scripts to pick up these files do work as intended even with the dash and the timestamp. So leaving this in for now. \n. ",
    "zeocio": "@jbachorik  actually yes!\nThe use case I have in mind is this:\n- I am writing test code (or app logic) against a library or framework\n- I want to use btrace to build a trace of intra-library calls to help me understand/debug its internals\n- the attaching of btrace to the jvm process needs to be controlled by the test/app logic, a blocking call to attach upon entry to a block and detach upon exit from that block.\n- the output of the btrace client in question can be either a file or a PrintStream/Logger in the current jvm.\nvoid TestCaller() {\n  // blocking call to attach to self\n  btrace_attach_self(output, library_btrace_script);\n// call library/framework internal logic here\n  ...\nbtrace_detach();\n}\n. Let me know if I should open a new issue for the above mentioned use case.\n. By the way I just encountered this as well. I was using 1.3.9 release against a hadoop container process. I tried both oracle jdk1.8.0_112 and java-1.8.0-openjdk-1.8.0.121-0.b13 and they behaved the same, with verbose option producing output (and killing the container quickly due to rapidly growing mem footprint) and non-verbose option producing absolutely no output.\nThe trace script I wrote generates a large quantity of output so buffering/flushing shouldn't be an issue? Is there anything I can try to further diagnose this?. Thanks for raising this. I ran into the same issue recently. This is gonna requires at least 2 fixes to get it working with jdk11:\n\n(easy) use security manager (or StackWalker in jdk11 or jdk.internal.reflect.Reflection.getCallerClass) for getCallerClass() as in https://github.com/eclipse/jetty.project/pull/2922\n(harder) replace sun.misc.Unsafe.defineClass() with some new implementation:\n-- use maybe jdk.internal.misc.Unsafe.defineClass\n-- we do need to think about the finer issues raised by Rafael in this posting: http://mail.openjdk.java.net/pipermail/jigsaw-dev/2018-April/013720.html\n\n. Just thinking out aloud here, would it be beneficial to refactor some of the agent instrumentation code to leverage the jdk11 work already done in bytebuddy (see https://github.com/raphw/byte-buddy/search?q=%22jdk+11%22&type=Issues)? The project's primary developers are actively involved in both maintaining and advocating current instrumentation use cases as well as relevant jdk api standardization discussions (http://mail.openjdk.java.net/pipermail/core-libs-dev/2018-October/055901.html) which is a good sign for api stability going forward.\nDisclaimer: I don't know much about bytebuddy, just found out about it googling unsafe and jdk11 issues.\nCon: this is potentially a big change introducing additional dependencies and test surfaces with limited gains.\nPro: bytebuddy is used in many mock/test/proxy frameworks and probably gets more testing under different scenarios than btrace.. Although we do have some cglib/scala generated classes in the same jvm I am 80% certain the offending classes are generated by javac.. Is there any other debug log i can add to provide more insight for a fix?. Here is the javap -p -s -c -l output for that class method, with the load/store of local vars only:\nCode:\n       0: aload_2\n       6: astore_3\n       7: aload_2\n      15: astore        4\n      17: aload_2\n      25: astore        5\n      27: aload_2\n      35: astore        6\n      37: aload_2\n      45: astore        7\n      60: astore        8\n      66: aload_3\n      67: aload         7\n      75: aload         8\n      89: astore        21\n     110: aload         21\n     116: astore        9\n     121: astore        10\n     130: astore        11\n     132: aload         8\n     134: aload         5\n     146: astore        13\n     151: aload         13\n     161: astore        12\n     163: aload         8\n     165: aload_3\n     166: aload         12\n     174: aload         10\n     189: astore        14\n     192: astore        15\n     198: aload         6\n     215: astore        16\n     226: astore        17\n     228: aload         17\n     234: aload         17\n     236: aload         12\n     247: aload         17\n     249: aload         12\n     260: aload         17\n     262: aload         16\n     267: aload         8\n     269: aload         4\n     271: aload         12\n     279: aload_3\n     285: astore        18\n     287: aload         18\n     292: aload         18\n     300: astore        19\n     302: aload         19\n     307: aload         19\n     312: astore        14\n     314: aload         19\n     319: astore        15\n     321: aload         18\n     329: astore        10\n     334: astore        18\n     345: aload         18\n     354: aload         17\n     356: aload         10\n     361: aload         17\n     363: aload         9\n     368: aload         17\n     370: aload         4\n     375: aload         17\n     377: aload         15\n     382: aload         17\n     384: aload         14\n     389: aload         8\n     391: aload         12\n     412: astore        18\n     414: aload         18\n     419: aload         17\n     421: aload         18\n     441: aload         17\n     443: aload         18\n     467: aload         12\n     492: aload         11\n     494: aload         17\n     502: aload         13\n     512: aload         11\n     537: astore        21\n     558: aload         21\n     561: astore        8\n     583: aload         4\n     594: aload_3\n     601: aload         8\n     637: astore        21\n     658: aload         21\n     661: astore        20\n     682: aload         20. The new resizing logic works, thanks.\nHowever I notice a few java.lang.VerifyError: Stack map does not match the one at exception handler in the logs. This is not caused by the resizing fix, I will open a new tracking issue.. All tests passed with the change.\nIs cached ClassInfo needed for evaluating class subtype relationship predicates in isCandidate(c)? If not maybe we can have a cmdline option for disabling pre-caching. \nThere might be additional optimizations for similar use cases where the number of loaded classes is large and the predicates are based on name regex match only.. ",
    "webtrekk-kane": ":+1: Very cool, thank you!\n. ",
    "yburkouski": "only void methods: methods that has been declared like void m(){...} + constructors\ncause right now there is possible to trace all methods including 'void' (without Return annotation), and any non void methods (with Return annotation), but there is impossible to trace only void return methods.\n. @jbachorik sorry for delay, I will test it tomorrow.\n. @jbachorik works as expected. Thanks!\n. ",
    "hanzhankang": "$ ./gradlew build\n:compileJava UP-TO-DATE\n:processResources UP-TO-DATE\n:classes UP-TO-DATE\n:jar\n:assemble\n:unjar UP-TO-DATE\n:agentJar UP-TO-DATE\n:bootJar UP-TO-DATE\n:buildDTrace SKIPPED\n:clientJar UP-TO-DATE\n:compileTestJava UP-TO-DATE\n:processTestResources UP-TO-DATE\n:testClasses UP-TO-DATE\n:buildTraces UP-TO-DATE\n:test\ncom.sun.btrace.BTraceFunctionalTests > testOSMBean FAILED\n    java.lang.AssertionError at BTraceFunctionalTests.java:58\ncom.sun.btrace.BTraceFunctionalTests > testOnProbe FAILED\n    java.lang.AssertionError at BTraceFunctionalTests.java:73\ncom.sun.btrace.BTraceFunctionalTests > testOnMethod FAILED\n    java.lang.AssertionError at BTraceFunctionalTests.java:90\n98 tests completed, 3 failed\n:test FAILED\nFAILURE: Build failed with an exception.\n. $ ./gradlew buildDistributions\n:compileJava UP-TO-DATE\n:processResources UP-TO-DATE\n:classes UP-TO-DATE\n:unjar UP-TO-DATE\n:agentJar UP-TO-DATE\n:bootJar UP-TO-DATE\n:clientJar UP-TO-DATE\n:buildDeb\nBuilding data\nfile:./usr/lib/btrace/btrace-agent.jar size:374458 mode:420 ....\nBuilding control\n:buildRpm\n:buildDTrace SKIPPED\n:createBinDistTgz\n:createBinDistZip\n:buildDistributions\nBUILD SUCCESSFUL\nTotal time: 4.889 secs\nThis build could be faster, please consider using the Gradle Daemon: http://gradle.org/docs/2.4/userguide/gradle_daemon.html\n. $ java -version\njava version \"1.8.0_40\"\nJava(TM) SE Runtime Environment (build 1.8.0_40-b25)\nJava HotSpot(TM) 64-Bit Server VM (build 25.40-b25, mixed mode)\nbtrace-1.3\n. ./gradlew build\nFAILURE: Build failed with an exception.\n- What went wrong:\n  A problem occurred configuring root project 'btrace'.\n\nCould not resolve all dependencies for configuration ':classpath'.\nCould not resolve com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2.\n Required by:\n     :btrace:unspecified\nCould not resolve com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2.\n     > Could not get resource 'https://plugins.gradle.org/m2/com/jfrog/bintray/gradle/gradle-bintray-plugin/1.2/gradle-bintray-plugin-1.2.pom'.\n        > Could not GET 'https://plugins.gradle.org/m2/com/jfrog/bintray/gradle/gradle-bintray-plugin/1.2/gradle-bintray-plugin-1.2.pom'.\n           > peer not authenticated\n- Try:\n  Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\nBUILD FAILED\nTotal time: 15.253 secs\n-------Maybe our network is broken. I am come from China...\n. ",
    "gwi2014": "Thank you very much, that helped. If anybody runs into this, you have to start your application server with:\n-Dorg.osgi.framework.bootdelegation=com.sun.btrace,com.sun.btrace.*\nThanks,\nGuido\n. ",
    "codecov-io": "Current coverage is 24.55%\n\nMerging #203 into master will decrease coverage by -1.15% as of 2455698\n\ndiff\n@@            master    #203   diff @@\n======================================\n  Files          136     136       \n  Stmts        13049   12640   -409\n  Branches      2548    2443   -105\n  Methods          0       0       \n======================================\n- Hit           3354    3104   -250\n+ Partial        422     413     -9\n+ Missed        9273    9123   -150\n\nReview entire Coverage Diff as of 2455698\nPowered by Codecov. Updated on successful CI builds.\n. ## Current coverage is 24.57%\nMerging #204 into master will decrease coverage by -1.13% as of f1b5ab6\n\ndiff\n@@            master    #204   diff @@\n======================================\n  Files          136     137     +1\n  Stmts        13049   12670   -379\n  Branches      2548    2448   -100\n  Methods          0       0       \n======================================\n- Hit           3354    3114   -240\n+ Partial        422     415     -7\n+ Missed        9273    9141   -132\n\nReview entire Coverage Diff as of f1b5ab6\nPowered by Codecov. Updated on successful CI builds.\n. ## Current coverage is 27.26%\nMerging #211 into master will increase coverage by +1.40% as of fed3fa1\n\ndiff\n@@            master    #211   diff @@\n======================================\n  Files          137     139     +2\n  Stmts        13181   12439   -742\n  Branches      2574    2421   -153\n  Methods          0       0       \n======================================\n- Hit           3409    3391    -18\n- Partial        424     463    +39\n+ Missed        9348    8585   -763\n\nReview entire Coverage Diff as of fed3fa1\nPowered by Codecov. Updated on successful CI builds.\n. ## Current coverage is 27.27%\nMerging #214 into master will decrease coverage by -1.21% as of 2cbe9d3\n\ndiff\n@@            master    #214   diff @@\n======================================\n  Files          139     139       \n  Stmts        12917   12493   -424\n  Branches      2551    2436   -115\n  Methods          0       0       \n======================================\n- Hit           3680    3408   -272\n+ Partial        469     454    -15\n+ Missed        8768    8631   -137\n\nReview entire Coverage Diff as of 2cbe9d3\nPowered by Codecov. Updated on successful CI builds.\n. ## Current coverage is 30.71%\nMerging #233 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #233   diff @@\n==========================================\n  Files           139        139          \n  Lines         12985      12986     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       2544       2544          \n==========================================\n+ Hits           3986       3988     +2   \n  Misses         8469       8469          \n+ Partials        530        529     -1\n\nPowered by Codecov. Last updated by c137727...1c1dcf6\n. ## Current coverage is 30.81% (diff: 93.75%)\nMerging #246 into master will increase coverage by 0.11%\n\ndiff\n@@             master       #246   diff @@\n==========================================\n  Files           139        139          \n  Lines         13038      13043     +5   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       2561       2560     -1   \n==========================================\n+ Hits           4002       4019    +17   \n+ Misses         8496       8484    -12   \n  Partials        540        540\n\nPowered by Codecov. Last update 724ac79...91d2c05\n. # Codecov Report\nMerging #268 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n```diff\n@@             Coverage Diff              @@\nmaster     #268      +/-\n============================================\n+ Coverage     29.89%   29.91%   +0.02%   \n- Complexity     1112     1114       +2   \n============================================\n  Files           140      140            \n  Lines         12820    12821       +1   \n  Branches       2117     2117            \n============================================\n+ Hits           3832     3835       +3   \n+ Misses         8457     8455       -2   \n  Partials        531      531\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../btrace/runtime/instr/ErrorReturnInstrumentor.java | 88.23% <100%> (+0.73%) | 5 <1> (+1) | :white_check_mark: |\n| ...btrace/runtime/instr/SynchronizedInstrumentor.java | 53.33% <0%> (+6.66%) | 9% <0%> (+1%) | :white_check_mark: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b3597d7...57d42b4. Read the comment docs.. # Codecov Report\nMerging #306 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster     #306      +/-\n============================================\n- Coverage     29.74%   29.73%   -0.02%   \n+ Complexity     1166     1165       -1   \n============================================\n  Files           153      153            \n  Lines         14992    14992            \n  Branches       2479     2479            \n============================================\n- Hits           4460     4458       -2   \n- Misses         9941     9942       +1   \n- Partials        591      592       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...c/share/classes/com/sun/btrace/api/BTraceTask.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...share/classes/com/sun/btrace/runtime/OnMethod.java | 85.88% <\u00f8> (\u00f8) | 33 <0> (\u00f8) | :arrow_down: |\n| ...sses/com/sun/btrace/comm/NumberMapDataCommand.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| src/share/classes/com/sun/btrace/BTraceUtils.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...sses/com/sun/btrace/runtime/BTraceTransformer.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../sun/btrace/comm/RetransformClassNotification.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...share/classes/com/sun/btrace/runtime/Verifier.java | 24.28% <\u00f8> (\u00f8) | 8 <0> (\u00f8) | :arrow_down: |\n| ...share/classes/com/sun/btrace/runtime/Location.java | 96.66% <\u00f8> (\u00f8) | 15 <0> (\u00f8) | :arrow_down: |\n| ...sun/btrace/spi/impl/BTraceCompilerFactoryImpl.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...om/sun/btrace/util/templates/TemplateExpander.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 972e1cd...3306f87. Read the comment docs.\n. # Codecov Report\nMerging #311 into master will decrease coverage by 0.03%.\nThe diff coverage is 50%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster     #311      +/-\n============================================\n- Coverage     29.75%   29.72%   -0.04%   \n+ Complexity     1167     1165       -2   \n============================================\n  Files           153      153            \n  Lines         14994    15013      +19   \n  Branches       2481     2483       +2   \n============================================\n  Hits           4462     4462            \n- Misses         9942     9957      +15   \n- Partials        590      594       +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/classes/com/sun/btrace/runtime/Instrumentor.java | 82.09% <50%> (-1.26%) | 47 <0> (\u00f8) | |\n| ...sun/btrace/profiling/MethodInvocationRecorder.java | 58.33% <0%> (-2.39%) | 24% <0%> (-2%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ce70421...ff24445. Read the comment docs.\n. # Codecov Report\nMerging #319 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster     #319   +/-\n=========================================\n  Coverage     29.64%   29.64%         \n  Complexity     1166     1166         \n=========================================\n  Files           154      154         \n  Lines         15047    15047         \n  Branches       2489     2489         \n=========================================\n  Hits           4461     4461         \n  Misses         9994     9994         \n  Partials        592      592\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9afa65a...55f291f. Read the comment docs.\n. # Codecov Report\nMerging #321 into master will decrease coverage by 0.33%.\nThe diff coverage is 25.4%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster     #321      +/-\n============================================\n- Coverage     29.64%   29.31%   -0.34%   \n- Complexity     1166     1171       +5   \n============================================\n  Files           154      153       -1   \n  Lines         15047    15118      +71   \n  Branches       2489     2518      +29   \n============================================\n- Hits           4461     4432      -29   \n- Misses         9994    10084      +90   \n- Partials        592      602      +10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/share/classes/com/sun/btrace/agent/Client.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...re/classes/com/sun/btrace/shared/TimerHandler.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lasses/com/sun/btrace/shared/LowMemoryHandler.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...share/classes/com/sun/btrace/agent/FileClient.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...rc/share/classes/com/sun/btrace/BTraceRuntime.java | 4.02% <0%> (-0.07%) | 8 <0> (\u00f8) | |\n| ...ses/com/sun/btrace/runtime/BTraceProbeSupport.java | 59.55% <0%> (-2.81%) | 23 <0> (\u00f8) | |\n| ...classes/com/sun/btrace/comm/InstrumentCommand.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...rc/share/classes/com/sun/btrace/client/Client.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...asses/com/sun/btrace/runtime/BTraceMethodNode.java | 38.62% <100%> (+0.32%) | 17 <0> (\u00f8) | :arrow_down: |\n| ...hare/classes/com/sun/btrace/runtime/Constants.java | 98.46% <100%> (+0.04%) | 1 <0> (\u00f8) | :arrow_down: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b9343f1...1e13f76. Read the comment docs.\n. # Codecov Report\nMerging #326 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster     #326      +/-\n============================================\n- Coverage     29.28%   29.27%   -0.01%   \n+ Complexity     1171     1170       -1   \n============================================\n  Files           153      153            \n  Lines         15134    15132       -2   \n  Branches       2518     2520       +2   \n============================================\n- Hits           4432     4430       -2   \n+ Misses        10100    10099       -1   \n- Partials        602      603       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/share/classes/com/sun/btrace/agent/Main.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| src/share/classes/com/sun/btrace/DebugSupport.java | 13.95% <0%> (\u00f8) | 5 <0> (\u00f8) | :arrow_down: |\n| ...sun/btrace/profiling/MethodInvocationRecorder.java | 58.33% <0%> (-1.2%) | 24% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9d2d9b6...ca13e64. Read the comment docs.\n. # Codecov Report\nMerging #338 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster     #338      +/-\n============================================\n+ Coverage     29.29%   29.33%   +0.03%   \n- Complexity     1160     1163       +3   \n============================================\n  Files           153      153            \n  Lines         15108    15113       +5   \n  Branches       2524     2524            \n============================================\n+ Hits           4426     4433       +7   \n+ Misses        10079    10078       -1   \n+ Partials        603      602       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../btrace/runtime/instr/ErrorReturnInstrumentor.java | 89.47% <100%> (+0.58%) | 5 <2> (\u00f8) | :arrow_down: |\n| ...es/com/sun/btrace/runtime/BTraceMethodVisitor.java | 86.66% <100%> (+2.05%) | 6 <1> (+1) | :arrow_up: |\n| ...sun/btrace/runtime/InstrumentingMethodVisitor.java | 62.33% <100%> (+0.09%) | 137 <2> (+1) | :arrow_up: |\n| ...sun/btrace/profiling/MethodInvocationRecorder.java | 59.03% <0%> (+1.2%) | 25% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3dae70c...51a349b. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@4dc959d). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster     #353   +/-\n=========================================\n  Coverage          ?   29.65%         \n  Complexity        ?     1181         \n=========================================\n  Files             ?      154         \n  Lines             ?    15125         \n  Branches          ?     2525         \n=========================================\n  Hits              ?     4485         \n  Misses            ?    10034         \n  Partials          ?      606\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/classes/com/sun/btrace/services/impl/Statsd.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...classes/com/sun/btrace/services/impl/QManager.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4dc959d...e1d7bcd. Read the comment docs.\n. # Codecov Report\nMerging #354 into master will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster     #354      +/-\n============================================\n+ Coverage     29.66%   29.67%   +<.01%   \n- Complexity     1181     1182       +1   \n============================================\n  Files           153      154       +1   \n  Lines         15117    15123       +6   \n  Branches       2525     2525            \n============================================\n+ Hits           4485     4487       +2   \n- Misses        10026    10031       +5   \n+ Partials        606      605       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...rc/share/classes/com/sun/btrace/compiler/PCPP.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...share/classes/com/sun/btrace/compiler/Printer.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...sun/btrace/profiling/MethodInvocationRecorder.java | 59.03% <0%> (+1.2%) | 25% <0%> (+1%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eb9b708...2abe73a. Read the comment docs.\n. # Codecov Report\nMerging #355 into master will increase coverage by 0.12%.\nThe diff coverage is 72.09%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster     #355      +/-\n============================================\n+ Coverage     29.65%   29.77%   +0.12%   \n- Complexity     1182     1189       +7   \n============================================\n  Files           155      156       +1   \n  Lines         15133    15138       +5   \n  Branches       2526     2526            \n============================================\n+ Hits           4487     4507      +20   \n+ Misses        10041    10027      -14   \n+ Partials        605      604       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...hare/classes/com/sun/btrace/compiler/Compiler.java | 25.92% <100%> (-18.4%) | 9 <1> (-7) | |\n| ...lasses/com/sun/btrace/compiler/CompilerHelper.java | 70.73% <70.73%> (\u00f8) | 9 <9> (?) | |\n| ...sun/btrace/profiling/MethodInvocationRecorder.java | 68.67% <0%> (+9.63%) | 30% <0%> (+5%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 69854eb...bde1b84. Read the comment docs.\n. # Codecov Report\nMerging #359 into develop will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@              Coverage Diff              @@\ndevelop     #359      +/-\n=============================================\n- Coverage      29.63%   29.61%   -0.02%   \n  Complexity      1183     1183            \n=============================================\n  Files            158      158            \n  Lines          15146    15153       +7   \n  Branches        2524     2526       +2   \n=============================================\n  Hits            4488     4488            \n- Misses         10055    10062       +7   \n  Partials         603      603\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...rc/share/classes/com/sun/btrace/client/Client.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| src/share/classes/com/sun/btrace/client/Main.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2cac9b8...061a573. Read the comment docs.\n. # Codecov Report\nMerging #360 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster     #360      +/-\n============================================\n- Coverage     29.63%   29.62%   -0.01%   \n  Complexity     1183     1183            \n============================================\n  Files           158      159       +1   \n  Lines         15146    15151       +5   \n  Branches       2524     2524            \n============================================\n  Hits           4488     4488            \n- Misses        10055    10060       +5   \n  Partials        603      603\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...are/classes/com/sun/btrace/DotWriterFormatter.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| src/share/classes/com/sun/btrace/DOTWriter.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2cac9b8...630b7ee. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@040424c). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster     #361   +/-\n=========================================\n  Coverage          ?   29.65%         \n  Complexity        ?     1184         \n=========================================\n  Files             ?      157         \n  Lines             ?    15143         \n  Branches          ?     2526         \n=========================================\n  Hits              ?     4491         \n  Misses            ?    10047         \n  Partials          ?      605\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...sses/com/sun/btrace/api/impl/BTraceEngineImpl.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...com/sun/btrace/api/impl/BTraceEngineListeners.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 040424c...9d835c7. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@d402274). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster     #362   +/-\n=========================================\n  Coverage          ?   29.63%         \n  Complexity        ?     1181         \n=========================================\n  Files             ?      155         \n  Lines             ?    15134         \n  Branches          ?     2526         \n=========================================\n  Hits              ?     4485         \n  Misses            ?    10043         \n  Partials          ?      606\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lasses/com/sun/btrace/api/impl/BTraceTaskImpl.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| .../com/sun/btrace/api/impl/BTraceTaskDispatcher.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d402274...afa1d7d. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@527d86f). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster     #363   +/-\n=========================================\n  Coverage          ?   29.64%         \n  Complexity        ?     1183         \n=========================================\n  Files             ?      157         \n  Lines             ?    15135         \n  Branches          ?     2523         \n=========================================\n  Hits              ?     4487         \n  Misses            ?    10045         \n  Partials          ?      603\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/share/classes/com/sun/btrace/ArgsMap.java | 39.65% <100%> (\u00f8) | 9 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 527d86f...40a0d3e. Read the comment docs.\n. # Codecov Report\nMerging #373 into develop will decrease coverage by 0.03%.\nThe diff coverage is 0%.\n\n\n```diff\n@@              Coverage Diff              @@\ndevelop     #373      +/-\n=============================================\n- Coverage      29.76%   29.73%   -0.04%   \n+ Complexity      1198     1197       -1   \n=============================================\n  Files            160      160            \n  Lines          15210    15220      +10   \n  Branches        2533     2534       +1   \n=============================================\n- Hits            4528     4526       -2   \n- Misses         10078    10089      +11   \n- Partials         604      605       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| src/share/classes/com/sun/btrace/agent/Main.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...sun/btrace/profiling/MethodInvocationRecorder.java | 57.83% <0%> (-1.21%) | 24% <0%> (-1%) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 37a86a0...388204b. Read the comment docs.\n. \n",
    "odd2008": "thank you.\nSorry my English is very poor.\nat 1.2.5 version will tell me public class must be in ThreadSleep.java.\nwhy 1.3.5  only tell me have a exception.\n. ",
    "TimKack": "Thank you for looking into this! Maybe it is just me not understanding what is violating the rules.\nSome comments to the code:\nm_action is a string\nm_nameValuePairs is a java.util.Properties object declared as \nprivate String m_action;\n  private Properties m_nameValuePairs = new Properties();\nHere is the probe code.\nRemoteAdminServletStats.java.zip\nI am now thinking that this has to do with the static boolean since the validation of owner fails in com.sun.btrace.runtime.MethodVerifier.visitFieldInsn, i.e\njava\n        if (opcode == PUTSTATIC) {\n            if (!owner.equals(className)) {\n                Verifier.reportError(\"no.assignment\");\n            }\n        }\nYou can replicate with samples/JdbcQueries.java (you need to cast currentStatement to Statement in order to get the probe to comple - but that is a separate issue)\nI have tried both BTrace 1.3.6 and head.\n. The absolute best would be to have proper argument parsing and lookup values by their name.\nSomething like Sys.$(\"debug\") to get string \"true\" (or \"false\") . ",
    "ymmihw": "thank u.\nthe following code works\n@OnMethod(clazz = \"helloworld.HelloWorld\", method = \"add\")\npublic static void onAdd(Student student) {\n    printFields(get(field(\"helloworld.Student\", \"id\"), student));\n}\n. when the method intercepted is a constructor, does btrace ignores the return type?\ni modified the sample 'FileTracker.java' as follow, it still works.\n@OnMethod(\n        clazz=\"java.io.FileInputStream\",\n        method=\"<init>\",\n        type=\"int (java.io.File)\", // here <=============================\n        location=@Location(Kind.RETURN)\n    )\n    public static void onNewFileInputStreamReturn() {\n        if (name != null) {\n            println(\"opened for read \" + name);\n            name = null;\n        }\n    }\n. ",
    "cpiment": "instrumented.tar.gz\nHi,\nI have dumped the classes, see attached file.\nThanks for your help\n. I have just run the application to the point where it runs the Spring code, but it does not dump the classes. Do I have to start the App Server with any arguments? Or just starting the Btrace client with \"dumpDir=/var/tmp/dump\" should be enough?\n. I already did that, but that did not produce the dump. I'm attaching the btrace client and server logs.\nagent_log.txt\nserver_log.txt\n. I have just tested a trace script with a fake class in the @OnMethod declaration. Now there is no crash in the agent or server logs, I attach the logs and the BTrace script.\nI cannot provide a reproducer right now, but I will try to provide it to you ASAP.\nUPDATE: Is a Weblogic 12.2.1 with JDK 8u60\nRegards\nserver_log_nonmatch.txt\nagent_log_nonmatch.txt\nNonMatch.java.txt\n. \nNow it doesn't crash, but some classes get skipped during retransformation. I'm attaching the logs and the dumped transformed classes. I have test with a clone of the repo made and built today.\nI'm attaching the btrace script I'm using too\n20170104dumpedclasses.tar.gz\n20170104server_log.txt\n20170104agent_log.txt\nCoherenceInvalidations.java.txt\n. ",
    "mjpt777": "On reflection is this not a serious bug? A HashMap will be corrupted by concurrent threads.\n. Thanks. I did not realise BTraceMap was synchronized. It would help if their was some JavaDoc on BTraceUtils to explain this :)\n. ",
    "petercipov": "Nope this also reproducible with normal script with multiple @onmethod. It crashed, so I was gradually deleting content from from java file and I have end up with this empty class file.\nProbably I have something misconfigured, I have a feeling that I have missed some crucial step while installing. I have downloaded binaries, setup JAVA_HOME to jdk in ENV and run it.\n. of course.\n``` java\nimport com.sun.btrace.AnyType;\nimport com.sun.btrace.annotations.;\nimport static com.sun.btrace.BTraceUtils.;\nimport com.sun.btrace.Profiler;\n@BTrace \npublic class Lags {\nprivate static final long THRESHOLD = 1 * 1000 * 1000 * 1000; //ns\n\n@TLS static Profiler profiler;\n\n@OnMethod(clazz=\"org.eclipse.jetty.server.Server\", method=\"handle\")\npublic static void servlet(@ProbeMethodName(fqn=true) String probeMethod) {\n    profiler = Profiling.newProfiler();\n}\n\n@OnMethod(clazz=\"org.eclipse.jetty.server.Server\", method=\"handle\", location=@Location(value=Kind.RETURN))\npublic static void servletExit(@ProbeMethodName(fqn=true) String probeMethod, @Duration long d) {\n    if (profiler == null) return;\n    if (d < THRESHOLD ) {\n        print(\"Request OK - under threshold \");\n        println(d);\n        return;\n    }\n\n    println(\"\");\n    println(\"---------------------------------------------------\");\n    print(\"Duration \");\n    println(d);\n\n    Profiling.printSnapshot(\"OVER THRESHOLD PROFILE\", profiler);\n\n    println(\"---------------------------------------------------\");\n    println(\"\");\n\n    profiler = null;\n}\n\n@OnMethod(clazz=\"/net\\\\.foo\\\\.service\\\\..*/\", method=\"/.*/\")\npublic static void servicesentry(@ProbeMethodName(fqn=true) String probeMethod) {\n    if (profiler == null) return;\n    Profiling.recordEntry(profiler, probeMethod);\n}\n\n@OnMethod(clazz=\"/net\\\\.foo\\\\.service\\\\..*/\", method=\"/.*/\", location=@Location(value=Kind.RETURN))\npublic static void servicereturnBack(@ProbeMethodName(fqn=true) String probeMethod, @Duration long duration) {\n    if (profiler == null) return;\n    Profiling.recordExit(profiler, probeMethod, duration);\n}\n\n}\n```\nYou have probably ment different, ...... sorry that one I cannot :)\n. I could reproduce the same issue with jvisualvm as host (it has installed also btrace plugin in it)\none console output\n$jvisualvm\nobjc[58384]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_72.jdk/Contents/Home/bin/java and /Library/Java/JavaVirtualMachines/jdk1.8.0_72.jdk/Contents/Home/jre/lib/libinstrument.dylib. One of the two will be used. Which one is undefined.\nbtrace DEBUG: debugMode is true\nbtrace DEBUG: startupRetransform is true\nbtrace DEBUG: dumpClasses is true\nbtrace DEBUG: dumpDir is /Users/petercipov/Downloads/btrace-bin-1.3.6/bin/dump\nbtrace DEBUG: unsafeMode is false\nbtrace DEBUG: probe descriptor path is .\nbtrace DEBUG: stdout is false\nbtrace DEBUG: starting agent thread\nbtrace DEBUG: starting server at 2020\nbtrace DEBUG: waiting for clients\nbtrace DEBUG: client accepted Socket[addr=/127.0.0.1,port=64598,localport=2020]\nbtrace DEBUG: got instrument command\nbtrace DEBUG: loading BTrace class\nbtrace DEBUG: verifying BTrace class ...\nbtrace DEBUG: java.lang.ArrayIndexOutOfBoundsException: 4\njava.lang.ArrayIndexOutOfBoundsException: 4\n    at com.sun.btrace.org.objectweb.asm.Type.a(Unknown Source)\n    at com.sun.btrace.org.objectweb.asm.Type.getType(Unknown Source)\n    at com.sun.btrace.runtime.StackTrackingMethodVisitor.(StackTrackingMethodVisitor.java:419)\n    at com.sun.btrace.runtime.MethodVerifier.(MethodVerifier.java:85)\n    at com.sun.btrace.runtime.BTraceProbe.visitMethod(BTraceProbe.java:118)\n    at com.sun.btrace.org.objectweb.asm.ClassVisitor.visitMethod(Unknown Source)\n    at com.sun.btrace.runtime.Verifier.visitMethod(Verifier.java:177)\n    at com.sun.btrace.org.objectweb.asm.ClassReader.b(Unknown Source)\n    at com.sun.btrace.org.objectweb.asm.ClassReader.accept(Unknown Source)\n    at com.sun.btrace.org.objectweb.asm.ClassReader.accept(Unknown Source)\n    at com.sun.btrace.runtime.BTraceProbe.initialize(BTraceProbe.java:385)\n    at com.sun.btrace.runtime.BTraceProbe.initialize(BTraceProbe.java:372)\n    at com.sun.btrace.runtime.BTraceProbe.(BTraceProbe.java:91)\n    at com.sun.btrace.runtime.BTraceProbeFactory.createProbe(BTraceProbeFactory.java:50)\n    at com.sun.btrace.agent.Client.verifyAndLoad(Client.java:340)\n    at com.sun.btrace.agent.Client.loadClass(Client.java:209)\n    at com.sun.btrace.agent.RemoteClient.(RemoteClient.java:63)\n    at com.sun.btrace.agent.Main.startServer(Main.java:471)\n    at com.sun.btrace.agent.Main.access$000(Main.java:58)\n    at com.sun.btrace.agent.Main$2.run(Main.java:119)\n    at java.lang.Thread.run(Thread.java:745)\nbtrace DEBUG: sending error command\nbtrace DEBUG: java.lang.NullPointerException\njava.lang.NullPointerException\n    at com.sun.btrace.agent.Client.getClassName(Client.java:301)\n    at com.sun.btrace.agent.RemoteClient.onCommand(RemoteClient.java:144)\n    at com.sun.btrace.agent.Client.errorExit(Client.java:267)\n    at com.sun.btrace.agent.Client.loadClass(Client.java:212)\n    at com.sun.btrace.agent.RemoteClient.(RemoteClient.java:63)\n    at com.sun.btrace.agent.Main.startServer(Main.java:471)\n    at com.sun.btrace.agent.Main.access$000(Main.java:58)\n    at com.sun.btrace.agent.Main$2.run(Main.java:119)\n    at java.lang.Thread.run(Thread.java:745)\nbtrace DEBUG: waiting for clients\nsecond console output\n$ ./btrace -v -d /Users/petercipov/Downloads/btrace-bin-1.3.6/bin/dump  58384  Lags.java\nDEBUG: dumpDir is /Users/petercipov/Downloads/btrace-bin-1.3.6/bin/dump\nDEBUG: assuming default port 2020\nDEBUG: assuming default classpath '.'\nDEBUG: compiling Lags.java\nDEBUG: compiled Lags.java\nDEBUG: attaching to 58384\nDEBUG: checking port availability: 2020\nDEBUG: attached to 58384\nDEBUG: loading /Users/petercipov/Downloads/btrace-bin-1.3.6/build/btrace-agent.jar\nDEBUG: agent args: port=2020,statsd=,debug=true,dumpClasses=true,dumpDir=/Users/petercipov/Downloads/btrace-bin-1.3.6/bin/dump,bootClassPath=.,systemClassPath=/Library/Java/JavaVirtualMachines/jdk1.8.0_72.jdk/Contents/Home/lib/tools.jar,probeDescPath=.\nDEBUG: loaded /Users/petercipov/Downloads/btrace-bin-1.3.6/build/btrace-agent.jar\nDEBUG: registering shutdown hook\nDEBUG: registering signal handler for SIGINT\nDEBUG: submitting the BTrace program\nDEBUG: opening socket to 2020\nDEBUG: setting up client settings\nDEBUG: sending instrument command\nDEBUG: entering into command loop\ndump dir Archive.zip\n. ",
    "Kshitiz-Sharma": "Steps to reproduce: simply close the client with Ctrl+C. The DEBUG mode logging says that it's registering shutdown hook. So it should exit properly.\nDEBUG: assuming default port 2020\nDEBUG: assuming default classpath '.'\nDEBUG: compiling ContextCapturedOnExceptionExampleTracer.java\nDEBUG: compiled ContextCapturedOnExceptionExampleTracer.java\nDEBUG: attaching to 4984\nDEBUG: checking port availability: 2020\nDEBUG: attached to 4984\nDEBUG: loading C:\\Development\\Software\\btrace-1.3.8\\build\\btrace-agent.jar\nDEBUG: agent args: port=2020,statsd=,debug=true,bootClassPath=.,systemClassPath=C:\\Program Files\\Java\\jdk1.8.0_92\\jre/../lib/tools.jar,probeDescPath=.\nDEBUG: loaded C:\\Development\\Software\\btrace-1.3.8\\build\\btrace-agent.jar\nDEBUG: registering shutdown hook\nDEBUG: submitting the BTrace program\nDEBUG: opening socket to 2020\nDEBUG: setting up client settings\nDEBUG: sending instrument command\nDEBUG: entering into command loop\nDEBUG: received com.sun.btrace.comm.RenameCommand@130f889\nDEBUG: received com.sun.btrace.comm.OkayCommand@1188e820\nDEBUG: received com.sun.btrace.comm.RetransformationStartNotification@2f490758\nDEBUG: received com.sun.btrace.comm.OkayCommand@101df177\nDEBUG: received com.sun.btrace.comm.MessageCommand@33b37288\nDEBUG: received com.sun.btrace.comm.MessageCommand@77a57272\nDEBUG: received com.sun.btrace.comm.MessageCommand@4e4aea35\nDEBUG: received com.sun.btrace.comm.MessageCommand@679b62af\nDEBUG: received com.sun.btrace.comm.MessageCommand@58fdd99\n. Doesn't seem to be a bug but wrong use of annotations. Fixes itself when more specific pointcut expression is added:\n@OnMethod(clazz = \"/.*MethodCallTracingExample.*/\", method = \"/.*/\",\n            location = @Location(value = Kind.CALL, clazz = \"/.*/\", method = \"myMethod\"))\nI'm not familiar with the code but I guess the crash could be due to BTrace trying to weave the advice into every possible class loaded in VM, which is fixed by change to a more specific expression.\nThe fix for this could be perhaps adding a check into the script compiler to ensure that expression isn't too generic and emit a warning.\nAlthough I'll leave the issue open for now Jaroslav's comments.\n. ",
    "szhnet": "I found the same problem on jdk 1.8, but jdk 1.7 no problem. \n. ",
    "liukeyou": "app bugs\n. ",
    "alexKeleon": "the btrace's version is release-1.2.4\n. > 1. The tomcat process seems to be started with a java agent - what is that\n\nagent?\n\njava agent is \n-javaagent:/usr/local/tomcat/bin/../lib/cookie-java-agent-0.1.jar -javaagent:/usr/local/tomcat/bin/../lib/byteman-2.1.2.jar=script:/usr/local/tomcat/bin/../lib/cookie.btm\n. ",
    "solarknight": "Same question. I have tried other method annotations such as @javax.jws.WebService, but the situation doesn't seem to change.\nbtw: I am using the latest 1.3.8.3 release.. ",
    "rocky-peng": "Thank you very much. The version of btrace I used is 1.3.8.1 and after I switch to 1.3.8.3,this problem has gone. \n. ",
    "afredlyj": "After I remove the line ${JAVA_HOME}/bin/java -cp ${BTRACE_HOME}/build/btrace-client.jar:${TOOLS_JAR}:/usr/share/lib/java/dtrace.jar com.sun.btrace.client.Main $*,\nthe command btrace just quit without any log.\n. Sorry, my mistake.\nI refactored my project last time, and forgot changing package name in btrace script.\n. ",
    "mrzor": "My goal is to benchmark memory allocations for short routines. I haven't found any better way than btrace to do that. Here are the things nothing else could do:\n- Easily be started / stopped / restarted from the monitored process\n- Benchmark memory allocations in a single thread as opposed to all threads\nI believe I can live with a huge overhead, since this is not meant to be used against a live instance using agent attach/detach.\nShould I find the culprits classes myself, is there a way to blacklist them from the BTrace script?\n. Finally got around building from master as of today, confirming this fixes the problem.\nThank you very much!. Also took the chance to implement your suggestion to log only the most specialized constructor, it works beautifuly! No reflection indeed, no strings floating around.\nAnd way, way, way less allocations measured. I suspect the reflection calls were adding tons and tons of noise.\nThank you very much, again, for that one as well :). ",
    "RoySunnySean007": "Hi @mrzor & @jbachorik,\nMy task is use Btrace to track big object allocation and its stacktrace. It is possible?\nReally appreciated ur help in advance!\nThanks,\nRoy. Thanks Jaroslav Bachorik! I will have a try and provide feedback.. Hi Jaroslav Bachorik,\nSorry for late...Will try and provide feedback.\nThanks,\nRoy. Hi Jaroslav Bachorik,\nWithout reflection code, it can work. Regarding reflection part, let me do more test. Thanks for ur kindly guide.\nCode:\nimport com.sun.btrace.annotations.;\nimport static com.sun.btrace.BTraceUtils.;\n@BTrace\npublic class BHello {\n        @OnMethod(clazz = \"+java.lang.Object\", method = \"\")\n        public static void onNewThing(@Self Object o, @ProbeClassName String pcn) {\n                print(pcn);\n                print('\\t');\n                println(Strings.str(sizeof(o)));\n        }\n}\nThanks,\nRoy. Hi Jaroslav Bachorik,\nSorry for late due to other tasks...Will try and provide feedback.\nThanks,\nRoy. Hi Jaroslav Bachorik,\nI just tried Oracle JDK8, it can work with reflection. Actually we are using other JDK distributions, let me try it as well, maybe it is interim issue which can't reproduced. Thanks for ur kindly follow up.\nBTrace code:\nimport com.sun.btrace.annotations.;\nimport static com.sun.btrace.BTraceUtils.;\n@BTrace\npublic class BHello {\n@OnMethod(clazz = \"+java.lang.Object\", method = \"\")\npublic static void onNewThing(@Self Object o, @ProbeClassName String pcn) {\nprintln(\"Roytest\");\nClass objectClass = Reflective.classOf(o);\nString objectClassString = Reflective.name(objectClass);\n    if (Strings.compareTo(pcn, objectClassString) == 0) {\n        print(pcn);\n        print('\\t');\n        println(Strings.str(sizeof(o)));\n\n    }\n\n}\n}\nThanks,\nRoy. Hi Jaroslav Bachorik,\nI tried in our JDK distributions (JDK7), seems reflection can't work. Seems instrumented classes and probe output was not generated. Could u please help to have a check? Thx!\nThe following is debug message:\n~/rzhang/BTrace/bin> ./btrace -v -o a.txt -d . 16343 BHello.java \nDEBUG: outputFile is a.txt\nDEBUG: dumpDir is .\nDEBUG: assuming default port 2020\nDEBUG: assuming default classpath '.'\nDEBUG: compiling BHello.java\nDEBUG: compiled BHello.java\nDEBUG: attaching to 16343\nDEBUG: checking port availability: 2020\nDEBUG: attached to 16343\nDEBUG: loading /export/home/sfuser/rzhang/BTrace/build/btrace-agent.jar\nDEBUG: agent args: port=2020,statsd=,debug=true,dumpClasses=true,dumpDir=.,bootClassPath=.,systemClassPath=/usr/java/sapjvm_7.1.059/jre/../lib/tools.jar,probeDescPath=.\nDEBUG: loaded /export/home/sfuser/rzhang/BTrace/build/btrace-agent.jar\nDEBUG: registering shutdown hook\nDEBUG: registering signal handler for SIGINT\nDEBUG: submitting the BTrace program\nDEBUG: opening socket to 2020\nDEBUG: setting up client settings\nDEBUG: sending instrument command: []\nDEBUG: entering into command loop\nDEBUG: received com.sun.btrace.comm.RenameCommand@5ba3f27a\nDEBUG: received com.sun.btrace.comm.OkayCommand@74751b3\n^CPlease enter your option:\n    1. exit\n    2. send an event\n    3. send a named event\n    4. flush console output\n1\nDEBUG: sending exit command\nDEBUG: received com.sun.btrace.comm.ExitCommand@741a8937\nThanks,\nRoy. ",
    "wy96f": "Hi, jbachorik\nThanks for the reply. It's not the 'System.out' buffering problem bcs there is profiler output every 10s like this:\nSwing performance profile\n  Block  Invocations  SelfTime.Total  SelfTime.Avg  SelfTime.Min  SelfTime.Max  WallTime.Total  WallTime.Avg  WallTime.Min  WallTime.Max\nSwing performance profile\n  Block  Invocations  SelfTime.Total  SelfTime.Avg  SelfTime.Min  SelfTime.Max  WallTime.Total  WallTime.Avg  WallTime.Min  WallTime.Max\nSwing performance profile\n  Block  Invocations  SelfTime.Total  SelfTime.Avg  SelfTime.Min  SelfTime.Max  WallTime.Total  WallTime.Avg  WallTime.Min  WallTime.Max\nAnyway I have built latest btrace and tried it without -v parameter. Even I called the flush command, the script still failed to record the call. The output is as follows:\n[faceshow@ip-10-0-20-139 btrace-1.4]$ export JAVA_HOME=/opt/jdk8 && ./bin/btrace 20454 Calls.java  \n^CPlease enter your option:\n        1. exit\n        2. send an event\n        3. send a named event\n        4. flush console output\n4\nSwing performance profile\n  Block  Invocations  SelfTime.Total  SelfTime.Avg  SelfTime.Min  SelfTime.Max  WallTime.Total  WallTime.Avg  WallTime.Min  WallTime.Max\n^CPlease enter your option:\n        1. exit\n        2. send an event\n        3. send a named event\n        4. flush console output\n1\n. Hi, jbachorik\nStill no println generated traces after removing the recordEntry and recordExit. By the way, we deploy a war(our spring mvc application) to tomcat.. ",
    "mygrapple": "@jbachorik\nMy btrace version is 1.3.11.\n-----------------start btrace script-----------------\npackage com.y.shpt.ao;\nimport static com.sun.btrace.BTraceUtils.*;\nimport com.sun.btrace.AnyType;\nimport com.sun.btrace.annotations.*;\n@BTrace\npublic class trace{\n@OnMethod(clazz = \"/y\\\\..*\\\\..*\\\\.service\\\\.impl\\\\..*ServiceImpl/\", method = \"/.*/\", location = @Location(Kind.RETURN))\npublic static void traceShop(@ProbeClassName String clazzName, @ProbeMethodName String method, AnyType[] args,@Return AnyType result, @Duration long time) {\n    if (time / 1000000 > 5) {\n        print(\"clazzName:\" + clazzName + \",method:\" + method + \" cost \" + time / 1000000 + \" ms\");\n        println(\"--------------------------------------------------------------------\");\n    }\n}\n\n}\n-----------------end btrace script-----------------\n-----------------start btrace output-----------------\n[test@sz-dev-a-5 bin]$ ./btrace -p 2021 12817 trace.java \n^CPlease enter your option:\n        1. exit\n        2. send an event\n        3. send a named event\n        4. flush console output\n1\n[test@sz-dev-a-5 bin]$ ./btrace -p 2021 12817 trace.java -v\nDEBUG: accepting port 2021\nDEBUG: assuming default classpath '.'\nDEBUG: compiling trace.java\nDEBUG: compiled trace.java\nDEBUG: attaching to 12817\nDEBUG: checking port availability: 2021\nDEBUG: attached to 12817\nDEBUG: loading /home/test/local/btrace-1.3.11/build/btrace-agent.jar\nDEBUG: agent args: port=2021,statsd=,debug=true,bootClassPath=.,systemClassPath=/data/svr/jdk1.8.0_144-weixin/jre/../lib/tools.jar,probeDescPath=.\nDEBUG: loaded /home/test/local/btrace-1.3.11/build/btrace-agent.jar\nDEBUG: registering shutdown hook\nDEBUG: registering signal handler for SIGINT\nDEBUG: submitting the BTrace program\nDEBUG: opening socket to 2021\nDEBUG: setting up client settings\nDEBUG: sending instrument command: [-v]\nDEBUG: entering into command loop\nDEBUG: received com.sun.btrace.comm.RenameCommand@481a15ff\nDEBUG: received com.sun.btrace.comm.OkayCommand@78186a70\nDEBUG: received com.sun.btrace.comm.RetransformationStartNotification@306279ee\nDEBUG: received com.sun.btrace.comm.MessageCommand@4c762604\nclazzname:y.s.shop.service.impl.shoppackagerecordserviceimpl,method:list cost 279 ms\nDEBUG: received com.sun.btrace.comm.MessageCommand@2641e737--------------------------------------------------------------------\nDEBUG: received com.sun.btrace.comm.MessageCommand@727803de\nclazzName:y.s.shop.service.impl.ShopPackageServiceImpl,method:get cost 231 ms\nDEBUG: received com.sun.btrace.comm.MessageCommand@704921a5--------------------------------------------------------------------\nDEBUG: received com.sun.btrace.comm.MessageCommand@df27fae\nclazzName:y.s.shop.service.impl.ShopPackageRecordServiceImpl,method:checkPackageIsExpire cost 232 ms\nDEBUG: received com.sun.btrace.comm.MessageCommand@24a35978--------------------------------------------------------------------\nDEBUG: received com.sun.btrace.comm.MessageCommand@16f7c8c1\nclazzName:y.s.shop.service.impl.ShopPackageServiceImpl,method:get cost 10 ms\nDEBUG: received com.sun.btrace.comm.MessageCommand@2f0a87b3--------------------------------------------------------------------\nDEBUG: received com.sun.btrace.comm.MessageCommand@319b92f3\nclazzName:y.s.shop.service.impl.ShopPackageRecordServiceImpl,method:getUsefulPackage cost 522 ms\n^CPlease enter your option:\n        1. exit\n        2. send an event\n        3. send a named event\n        4. flush console output\n1\nDEBUG: sending exit command\n[test@sz-dev-a-5 bin]$ ./btrace -p 2021 12817 trace.java\n^CPlease enter your option:\n        1. exit\n        2. send an event\n        3. send a named event\n        4. flush console output\n1\n-----------------end btrace output----------------\n-----------------start btrace -d----------------\n12817.zip\nfrom the output we see when i add -v then has print\uff0cremove then disappear.\nLook forward to your reply.\n. ",
    "discalced": "sorry for the late reply. now i'm clear about the question, thanks a lot!. ",
    "yashk": "@jbachorik  did you get chance to look at this issue ?, i am trying to  use btrace to instrument hadoop MR jobs and statsd feature is required collect trace data at central location.. @jbachorik \ni tried this again with your latest commit , built btrace from source. Same Trace file as above now getting error\nERROR\njava.lang.IllegalAccessError: tried to access method com.sun.btrace.services.impl.Statsd.<init>()V from class Test\nDetails logs below\n$ bin/btrace --version\nBTrace v.1.4-SNAPSHOT (20161214)\n$ java -version\njava version \"1.8.0_102\"\nJava(TM) SE Runtime Environment (build 1.8.0_102-b14)\nJava HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)\n$ bin/btracec samples/ProfilingAM.java\n*** field annotation: Lcom/sun/btrace/annotations/Injected;\n*** field annotation: Lcom/sun/btrace/annotations/Property;\n```\npublic class Test{\n    public java.util.Random r = new java.util.Random(System.currentTimeMillis());\n    public static void main(String[] args) throws Exception {\n    Thread t = new Thread(new Runnable(){\n        public void run(){\n            Test test = new Test();\n            try{while(true)test.doStuff();}catch(Exception e){};\n        }\n    });\n\n    t.start();\n    t.join();\n\n\n}\n\npublic void doStuff() throws Exception{\n    Thread.sleep(r.nextInt(2000));\n    System.out.print(\".\");\n}\n\n}\n```\n$ ls -lrt Test*\n-rw-r--r--@ 1 yash  staff  453 Dec 14 19:54 Test.java\n-rw-r--r--  1 yash  staff  883 Dec 14 20:05 Test.class\n-rw-r--r--  1 yash  staff  483 Dec 14 20:05 Test$1.class\njava -javaagent:./build/btrace-agent.jar=script=./com/sun/btrace/samples/ProfilingAM.class,noServer=true,debug=true,statsd=localhost:8125,stdout=true Test\n```\nobjc[48189]: Class JavaLaunchHelper is implemented in both /Users/yash/.jenv/versions/1.8/bin/java (0x10cb004c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10cbc84e0). One of the two will be used. Which one is undefined.\nbtrace DEBUG: debugMode is true\nbtrace DEBUG: startupRetransform is true\nbtrace DEBUG: dumpClasses is false\nbtrace DEBUG: unsafeMode is true\nbtrace DEBUG: probe descriptor path is .\nbtrace DEBUG: stdout is true\nbtrace DEBUG: initial script is ./com/sun/btrace/samples/ProfilingAM.class\nbtrace DEBUG: loading BTrace class\nBTrace Log: 12/14/16 8:09 PM\nbtrace DEBUG: verifying BTrace class ...\nbtrace DEBUG: BTrace class com.sun.btrace.samples.ProfilingAM verified\nbtrace DEBUG: preprocessing BTrace class com.sun.btrace.samples.ProfilingAM ...\nbtrace DEBUG: ... preprocessed\nbtrace DEBUG: loaded 'com.sun.btrace.samples.ProfilingAM' successfully\nbtrace DEBUG: creating BTraceRuntime instance for com.sun.btrace.samples.ProfilingAM\nbtrace DEBUG: created BTraceRuntime instance for com.sun.btrace.samples.ProfilingAM\nbtrace DEBUG: sending Okay command\nbtrace DEBUG: client com.sun.btrace.samples.ProfilingAM: got com.sun.btrace.comm.OkayCommand@685f4c2e\nbtrace DEBUG: about to defineClass com/sun/btrace/samples/ProfilingAM\nbtrace DEBUG: defineClass succeeded for com/sun/btrace/samples/ProfilingAM\nbtrace DEBUG: new Client created com.sun.btrace.agent.FileClient@50de8dc0\nbtrace DEBUG: retransforming loaded classes\nbtrace DEBUG: filtering loaded classes\nbtrace DEBUG: noServer is true, server not started\nbtrace DEBUG: transformed class Test\nbtrace DEBUG: skipping transform for BTrace class com/sun/btrace/profiling/MethodInvocationRecorder\nbtrace DEBUG: skipping transform for BTrace class com/sun/btrace/Profiler$Record\nbtrace DEBUG: skipping transform for BTrace class com/sun/btrace/Profiler$Record$1\nbtrace DEBUG: client com.sun.btrace.samples.ProfilingAM: got com.sun.btrace.comm.OkayCommand@64f7047\n.btrace DEBUG: skipping transform for BTrace class com/sun/btrace/services/impl/Statsd\nbtrace DEBUG: skipping transform for BTrace class com/sun/btrace/services/spi/SimpleService\nbtrace DEBUG: skipping transform for BTrace class com/sun/btrace/services/spi/BTraceService\nbtrace DEBUG: skipping transform for BTrace class com/sun/btrace/ExitException\nbtrace DEBUG: client com.sun.btrace.samples.ProfilingAM: got com.sun.btrace.comm.ErrorCommand@8889efe\n! ERROR\njava.lang.IllegalAccessError: tried to access method com.sun.btrace.services.impl.Statsd.()V from class Test\n    at Test.$btrace$com$sun$btrace$samples$ProfilingAM$exit(Test.java)\n    at Test.doStuff(Test.java:21)\n    at Test$1.run(Test.java:8)\n    at java.lang.Thread.run(Thread.java:745)\n.btrace DEBUG: client com.sun.btrace.samples.ProfilingAM: got com.sun.btrace.comm.ErrorCommand@49b594c5\n! ERROR\njava.lang.IllegalAccessError: tried to access method com.sun.btrace.services.impl.Statsd.()V from class Test\n    at Test.$btrace$com$sun$btrace$samples$ProfilingAM$exit(Test.java)\n    at Test.doStuff(Test.java:21)\n    at Test$1.run(Test.java:8)\n    at java.lang.Thread.run(Thread.java:745)\nbtrace DEBUG: skipping transform for BTrace class com/sun/btrace/Profiler$Snapshot\nbtrace DEBUG: skipping transform for BTrace class com/sun/btrace/comm/GridDataCommand\nbtrace DEBUG: skipping transform for BTrace class com/sun/btrace/comm/DataCommand\n.btrace DEBUG: client com.sun.btrace.samples.ProfilingAM: got com.sun.btrace.comm.GridDataCommand@78b61ffc\nbtrace DEBUG: skipping transform for BTrace class com/sun/btrace/aggregation/HistogramData\nAM performance profile\n  Block                     Invocations  SelfTime.Total  SelfTime.Avg  SelfTime.Min  SelfTime.Max  WallTime.Total  WallTime.Avg  WallTime.Min  WallTime.Max\n  public void Test#doStuff            2      3385954647    1692977323    1402036347    1983918300      3385954647    1692977323    1402036347    1983918300\nbtrace DEBUG: client com.sun.btrace.samples.ProfilingAM: got com.sun.btrace.comm.ErrorCommand@4c6ccd7e\n```. @yardus @jbachorik  any luck on this issue ? let me know if i can help out i would need some guidance in areas of code to look into.. ",
    "carryxyh": "The version is 1.3.8. My os is MAC OS 10.10.5.\nThe \"/Users/...../btrace\" is the btrace directory in my computer , and i hide something personal . I carry out \"echo $BTRACE_HOME\" in my terminal, it prints \"/Users/...../btrace\".Then I carry out \"echo $PATH\" in my terminal ,it prints \"$PATH:/Users/...../btrace/bin\". Thats it.\nI download the btrace from git(the version is 1.3.8 , the latest)  and i never deal it.\nI just run ./btrace in the bin directory.\n. \n. Why?!. I dont think it caused by permission. Because I run it as root.\nI try to re-downloading the archive , and I uncompressing it to /tmp/btrace.\nBefore running the shell -> btrace .  I do noting with the archive.\nDisappointed\uff0cit donsnt work too.\nI alter the shell 'btrace' : \n\n! /bin/sh\nif [ -z \"$BTRACE_HOME\" -o ! -d \"$BTRACE_HOME\" ] ; then\n  # resolve links - $0 could be a link to btrace's home\n  PRG=\"$0\"\n  progname=basename \"$0\"\n  BTRACE_HOME=dirname \"$PRG\"/..\n  BTRACE_HOME=cd \"$BTRACE_HOME\" && pwd\nfi\nif [ -f \"${BTRACE_HOME}/build/btrace-client.jar\" ] ; then\nif [ \"${JAVA_HOME}\" != \"\" ]; then\n     TOOLS_JAR=\"${JAVA_HOME}/lib/tools.jar\"\n     if [ ! -f ${TOOLS_JAR} ] ; then\n       case \"`uname`\" in\n         Darwin*)\n           # In older JDK versions for Mac OS X, tools.jar is classes.jar \n           # and is kept in a different location. Check if we can locate\n           # classes.jar based on ${JAVA_VERSION}\n           TOOLS_JAR=\"/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Classes/classes.jar\"\n\n           # if we can't find, try relative path from ${JAVA_HOME}. Usually,\n           # /System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home\n           # is JAVA_HOME. (or whatever version beyond 1.6.0!)\n           if [ ! -f ${TOOLS_JAR} ] ; then\n             TOOLS_JAR=\"${JAVA_HOME}/../Classes/classes.jar\"\n           fi\n\n           # If we still can't find, tell the user to set JAVA_VERSION.\n           # This way, we can avoid zip file errors from the agent side\n           # and \"connection refused\" message from client.\n           if [ ! -f ${TOOLS_JAR} ] ; then\n             echo \"Please set JAVA_VERSION to the target java version\"\n             exit 1\n           fi\n           ;;\n       esac\n     fi\n   ${JAVA_HOME}/bin/java -cp ${BTRACE_HOME}/build/btrace-client.jar:${TOOLS_JAR}:/usr/share/lib/java/dtrace.jar com.sun.btrace.client.Main $*\nelse\n   echo \"Please set JAVA_HOME before running this script\"\n   exit 1\nfi\n\nelse\necho \"Please set BTRACE_HOME before running this script\"\nexit 1\nfi\n\nAnd then i cd /tmp/btrace and run 'gradle build'.\nThen i cd the bin and  run  ./btrace -h. It works  and  print : \n\nUsage: btrace    \nwhere possible options include:\n  --version             Show the version\n  -v                    Run in verbose mode\n  -o              The path to store the probe output (will disable showing the output in console)\n-u                    Run in unsafe mode\n  -d              Dump the instrumented classes to the specified path\n  -pd             The search path for the probe XML descriptors\n  -classpath      Specify where to find user class files and annotation processors\n  -cp             Specify where to find user class files and annotation processors\n  -I              Specify where to find include files\n  -p              Specify port to which the btrace agent listens for clients\n  -statsd  Specify the statsd server, if any\n\nI think  there have something wrong with the shell 'btrace', can  u  fix  it  after  this  version?\nThanks. . I know the reason.\nI download the archive but I still not to build it  , so  when I run ./btrace  it  calls  \"please set BTRACE_HOME\". The error message  is  not suitable!\nI have already set the BTRACE_HOME but I dont have the  $BTRACE_HOME/build/btrace-client.jar and it should  prompt me I dont have the btrace-client.jar but not prompt me I dont set the BTRACE_HOME.\nCan u fix it after this version ?\n. ",
    "yanfeipeng": "the dump classes:\ndumpClasses.tar.gz\nAnother similar error:\njava.lang.reflect.InvocationTargetException\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:497)\n        at com.pjfun.socketserver.extension.XtReqListener.doXtReq(XtReqListener.java:29)\n        at com.pjfun.socketserver.extension.ExtensionSkeleton.handleCmdRequest(ExtensionSkeleton.java:35)\n        at com.baitian.mobileserver.extension.AbstractExtension.handleEvent(AbstractExtension.java:45)\n        at com.baitian.mobileserver.extension.ExtensionManager.dispatchEvent(ExtensionManager.java:120)\n        at com.baitian.mobileserver.task.CmdTask.execute(CmdTask.java:46)\n        at com.baitian.mobileserver.task.CmdTask.execute(CmdTask.java:14)\n        at com.baitian.mobileserver.task.RequestTask.doRun(RequestTask.java:19)\n        at com.baitian.mobileserver.task.InMsgTask.run(InMsgTask.java:16)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.VerifyError: Bad local variable type\nException Details:\n  Location:\n    com/pjfun/ext/zervice/dailyActivity/guildinbreak/GuildMonst.setDead()V @0: aload_1\n  Reason:\n    Type top (current frame, locals[1]) is not assignable to reference type\n  Current Frame:\n    bci: @0\n    flags: { }\n    locals: { 'com/pjfun/ext/zervice/dailyActivity/guildinbreak/GuildMonst' }\n    stack: { }\n  Bytecode:\n    0x0000000: 2bb8 0041 2a06 b500 05b1 bf          \n  Exception Handler Table:\n    bci [0, 10] => handler: 10\n  Stackmap Table:\n    same_locals_1_stack_item_frame(@10,Object[#57])\n    at com.pjfun.ext.zervice.dailyActivity.guildinbreak.GuildContainer.refreshGuildBoss(GuildContainer.java:58)\n    at com.pjfun.ext.zervice.dailyActivity.guildinbreak.GuildInbreakHandler.initGuildBoss(GuildInbreakHandler.java:122)\n    at com.pjfun.ext.zervice.dailyActivity.guildinbreak.GuildInbreakHandler.initAllGuildBoss(GuildInbreakHandler.java:92)\n    at com.pjfun.ext.zervice.dailyActivity.guildinbreak.GuildInbreakHandler.start(GuildInbreakHandler.java:65)\n    at com.pjfun.ext.zervice.dailyActivity.guildinbreak.GuildInbreakActiveHandler.start(GuildInbreakActiveHandler.java:16)\n    at com.pjfun.ext.zervice.dailyActivity.base.DailyActivityHandler.gmControl(DailyActivityHandler.java:327)\n    at com.pjfun.ext.zervice.dailyActivity.base.DailyActivityExtension.gmControl(DailyActivityExtension.java:76)\n    ... 19 more\n\n. I try to check the dump class to find:\npublic synchronized void setDead();\n    Code:\n       0: aload_1\n       1: invokestatic  #65                 // Method $btrace$com$sun$btrace$samples$NestedSyncOrLockCheck$onSyncEntry:(Ljava/lang/Object;)V\n       4: aload_0\n       5: iconst_3\n       6: putfield      #5                  // Field status:I\n       9: return\n      10: athrow\n    Exception table:\n       from    to  target type\n           0    10    10   Class java/lang/Throwable\nIs it the reason that when AOP before synchronized method, my AOP function onSyncEntry need  a parameter (Ljava/lang/Object;), but the function setDead() with no parameters, and the code 0:aload_1 put the setDead() first parameter to the stack trigger the error?\nCan i rewrite my AOP function onSyncEntry with no parameters to aviod the error? . Great! Thanks for reply!\nWaiting for the next version!. I fix this problem!\nsomething detail\nhttps://github.com/yanfeipeng/btrace/commit/e751e985cb7f0b3776a2b3ed5c1594224197c85d. When i gradlew build my local btrace project, I aslo find so many error: [FallThrough] Switch case may fall through!\nI need to fix it one by one, and make sure i can build success!. Yes, but do like that,  it would change the ErrorReturnInstrumentor  logic of ERROR KIND Type, it is OK?. Yes, it would be correct in the exception situation, but if the method runs well, it would trigger onMethodReturn. So if ErrorReturnInstrumentor extends MethodReturnInstrumentor, it need to overwrite onMethodReturn by using empty method, is that right?. ",
    "wenxueliu": "println(\"BTrace program exits! with code: \" + code)  is expected, but it doesn't execute.. ",
    "hsyyid": "My bad I did method instead of clazz. Update\nAfter doing some research I found #160 and I think this issue may be similar to that one.\nHere's my theory:\nTake the method A, suppose it's like the following: void A (B, C, D)\nSo, what happens if when BTrace is injecting itself, B or C is not loaded yet?\nMy theory is that it has been turned into an Object, so it becomes: void A(B,C, Object)\nNow when the actual application calls A with D the method breaks, because it is not supposed to have to cast from Object to D\nI'm not sure how you'd fix it, but I got another example of where it broke where I think it becomes clear that this is the issue.\nError:\n```\n[13:45:12] [main/ERROR] [LaunchWrapper]: Unable to launch\njava.lang.reflect.InvocationTargetException\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_77]\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[?:1.8.0_77]\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[?:1.8.0_77]\n        at java.lang.reflect.Method.invoke(Unknown Source) ~[?:1.8.0_77]\n        at net.minecraft.launchwrapper.Launch.launch(Launch.java:135) [launchwrapper-1.12.jar:?]\n        at net.minecraft.launchwrapper.Launch.main(Launch.java:28) [launchwrapper-1.12.jar:?]\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_77]\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[?:1.8.0_77]\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[?:1.8.0_77]\n        at java.lang.reflect.Method.invoke(Unknown Source) ~[?:1.8.0_77]\n        at net.minecraftforge.fml.relauncher.ServerLaunchWrapper.run(ServerLaunchWrapper.java:62) [forge-1.10.2-12.18.2.2121-universal.jar:?]\n        at net.minecraftforge.fml.relauncher.ServerLaunchWrapper.main(ServerLaunchWrapper.java:31) [forge-1.10.2-12.18.2.2121-universal.jar:?]\nCaused by: java.lang.VerifyError: Bad type on operand stack\nException Details:\n  Location:\n    net/minecraft/block/BlockSapling.func_176476_e(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V @615: invokevirtual\n  Reason:\n    Type 'java/lang/Object' (current frame, stack[0]) is not assignable to 'net/minecraft/world/gen/feature/WorldGenerator'\n  Current Frame:\n    bci: @615\n    flags: { }\n    locals: { 'net/minecraft/block/BlockSapling', 'net/minecraft/world/World', 'net/minecraft/util/math/BlockPos', 'net/minecraft/block/state/IBlockState', 'java/util/Random', long, long_2nd, long, long_2nd, 'java/lang/Object', integer, integer, integer, 'net/minecraft/block/state/IBlockState' }\n    stack: { 'java/lang/Object', 'net/minecraft/world/World', 'java/util/Random', 'net/minecraft/util/math/BlockPos' }\n  Bytecode:\n    0x0000000: 0937 05b8 01f5 3707 1302 03b8 01ef 2b19\n    0x0000010: 042c b800 a89a 0014 b801 f516 0765 3705\n    0x0000020: 1302 0316 05b8 01f9 b119 0410 0ab6 0088\n    0x0000030: 9a00 0ebb 00aa 5904 b700 ada7 000b bb00\n    0x0000040: af59 04b7 00b0 3a09 0336 0a03 360b 0336\n    0x0000050: 0cb2 00b4 2db2 0026 b900 9302 00c0 000c\n    0x0000060: b600 b72e aa00 0000 0000 0190 0000 0001\n    0x0000070: 0000 0006 0000 0028 0000 0083 0000 0091\n    0x0000080: 0000 012f 0000 013c 0000 0190 0336 0a15\n    0x0000090: 0a02 a100 3d03 360b 150b 02a1 002e 2a2b\n    0x00000a0: 2c15 0a15 0bb2 00ba b700 be99 0018 bb00\n    0x00000b0: c059 0319 04b6 00c4 b700 c73a 0904 360c\n    0x00000c0: a700 0f84 0bff a7ff d284 0aff a7ff c315\n    0x00000d0: 0c9a 0123 0336 0a03 360b bb00 c959 04b7\n    0x00000e0: 00ca 3a09 a701 10bb 00cc 5904 03b7 00cd\n    0x00000f0: 3a09 a701 02b2 00d3 b600 d8b2 00dd b200\n    0x0000100: e0b9 0030 0300 3a0d b200 e4b6 00e7 b200\n    0x0000110: ecb2 00e0 b900 3003 00b2 00f0 03b8 00f5\n    0x0000120: b900 3003 003a 0e03 360a 150a 02a1 0040\n    0x0000130: 0336 0b15 0b02 a100 312a 2b2c 150a 150b\n    0x0000140: b200 e0b7 00be 9900 1bbb 00f7 5904 100a\n    0x0000150: 1014 190d 190e b700 fa3a 0904 360c a700\n    0x0000160: 0f84 0bff a7ff cf84 0aff a7ff c015 0c9a\n    0x0000170: 0085 0336 0a03 360b bb00 af59 0407 1904\n    0x0000180: 1007 b600 8860 190d 190e 03b7 00fd 3a09\n    0x0000190: a700 64bb 00ff 5904 b701 003a 09a7 0057\n    0x00001a0: 0336 0a15 0a02 a100 3803 360b 150b 02a1\n    0x00001b0: 0029 2a2b 2c15 0a15 0bb2 0103 b700 be99\n    0x00001c0: 0013 bb01 0559 04b7 0106 3a09 0436 0ca7\n    0x00001d0: 000f 840b ffa7 ffd7 840a ffa7 ffc8 150c\n    0x00001e0: 9a00 14b8 01f5 1607 6537 0513 0203 1605\n    0x00001f0: b801 f9b1 b201 09b6 00d8 3a0d 150c 9900\n    0x0000200: 522b 2c15 0a03 150b b601 0d19 0d07 b600\n    0x0000210: 9f57 2b2c 150a 0460 0315 0bb6 010d 190d\n    0x0000220: 07b6 009f 572b 2c15 0a03 150b 0460 b601\n    0x0000230: 0d19 0d07 b600 9f57 2b2c 150a 0460 0315\n    0x0000240: 0b04 60b6 010d 190d 07b6 009f 57a7 000c\n    0x0000250: 2b2c 190d 07b6 009f 5719 092b 1904 2c15\n    0x0000260: 0a03 150b b601 0db6 0112 9a00 5b15 0c99\n    0x0000270: 004e 2b2c 150a 0315 0bb6 010d 2d07 b600\n    0x0000280: 9f57 2b2c 150a 0460 0315 0bb6 010d 2d07\n    0x0000290: b600 9f57 2b2c 150a 0315 0b04 60b6 010d\n    0x00002a0: 2d07 b600 9f57 2b2c 150a 0460 0315 0b04\n    0x00002b0: 60b6 010d 2d07 b600 9f57 a700 0b2b 2c2d\n    0x00002c0: 07b6 009f 57b8 01f5 1607 6537 0513 0203\n    0x00002d0: 1605 b801 f9b1\n  Stackmap Table:\n    append_frame(@41,Long,Long)\n    same_frame(@62)\n    same_locals_1_stack_item_frame(@70,Object[#447])\n    full_frame(@140,{Object[#2],Object[#114],Object[#122],Object[#44],Object[#132],Long,Long,Object[#447],Integer,Integer,Integer},{})\n    same_frame(@143)\n    same_frame(@152)\n    same_frame(@195)\n    same_frame(@201)\n    same_frame(@207)\n    same_frame(@231)\n    same_frame(@245)\n    append_frame(@298,Object[#44],Object[#44])\n    same_frame(@307)\n    same_frame(@353)\n    same_frame(@359)\n    same_frame(@365)\n    chop_frame(@403,2)\n    same_frame(@416)\n    same_frame(@419)\n    same_frame(@428)\n    same_frame(@466)\n    same_frame(@472)\n    same_frame(@478)\n    same_frame(@500)\n    append_frame(@592,Object[#44])\n    same_frame(@601)\n    same_frame_extended(@701)\n    same_frame(@709)\n    at org.spongepowered.common.registry.provider.BlockPropertyIdProvider.<init>(BlockPropertyIdProvider.java:182) ~[BlockPropertyIdProvider.class:1.10.2-2254-5.2.0-BETA-2257]\n    at org.spongepowered.common.registry.provider.BlockPropertyIdProvider$Holder.<clinit>(BlockPropertyIdProvider.java:281) ~[BlockPropertyIdProvider$Holder.class:1.10.2-2254-5.2.0-BETA-2257]\n    at org.spongepowered.common.registry.provider.BlockPropertyIdProvider.getInstance(BlockPropertyIdProvider.java:49) ~[BlockPropertyIdProvider.class:1.10.2-2254-5.2.0-BETA-2257]\n    at org.spongepowered.common.registry.provider.BlockPropertyIdProvider.getIdAndTryRegistration(BlockPropertyIdProvider.java:67) ~[BlockPropertyIdProvider.class:1.10.2-2254-5.2.0-BETA-2257]\n    at org.spongepowered.common.registry.type.BlockTypeRegistryModule.registerBlockTrait(BlockTypeRegistryModule.java:128) ~[BlockTypeRegistryModule.class:1.10.2-2254-5.2.0-BETA-2257]\n    at org.spongepowered.common.registry.type.BlockTypeRegistryModule.registerFromGameData(BlockTypeRegistryModule.java:116) ~[BlockTypeRegistryModule.class:1.10.2-2254-5.2.0-BETA-2257]\n    at net.minecraft.block.Block.handler$onRegisterBlock$zzl000(Block.java:2617) ~[akf.class:?]\n    at net.minecraft.block.Block.func_176215_a(Block.java:2382) ~[akf.class:?]\n    at net.minecraft.block.Block.func_176219_a(Block.java:2386) ~[akf.class:?]\n    at net.minecraft.block.Block.func_149671_p(Block.java:2101) ~[akf.class:?]\n    at net.minecraft.init.Bootstrap.func_151354_b(Bootstrap.java:537) ~[kq.class:?]\n    at net.minecraft.server.MinecraftServer.main(MinecraftServer.java:1403) ~[MinecraftServer.class:?]\n    ... 12 more\n\n```\nCode Called:\n```java\n  public void generateTree(World worldIn, BlockPos pos, IBlockState state, Random rand)\n    {\n        if (!net.minecraftforge.event.terraingen.TerrainGen.saplingGrowTree(worldIn, rand, pos)) return;\n        WorldGenerator worldgenerator = (WorldGenerator)(rand.nextInt(10) == 0 ? new WorldGenBigTree(true) : new WorldGenTrees(true));\n        int i = 0;\n        int j = 0;\n        boolean flag = false;\n    switch ((BlockPlanks.EnumType)state.getValue(TYPE))\n    {\n        case SPRUCE:\n            label114:\n\n            for (i = 0; i >= -1; --i)\n            {\n                for (j = 0; j >= -1; --j)\n                {\n                    if (this.isTwoByTwoOfType(worldIn, pos, i, j, BlockPlanks.EnumType.SPRUCE))\n                    {\n                        worldgenerator = new WorldGenMegaPineTree(false, rand.nextBoolean());\n                        flag = true;\n                        break label114;\n                    }\n                }\n            }\n\n            if (!flag)\n            {\n                i = 0;\n                j = 0;\n                worldgenerator = new WorldGenTaiga2(true);\n            }\n\n            break;\n        case BIRCH:\n            worldgenerator = new WorldGenBirchTree(true, false);\n            break;\n        case JUNGLE:\n            IBlockState iblockstate = Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.JUNGLE);\n            IBlockState iblockstate1 = Blocks.LEAVES.getDefaultState().withProperty(BlockOldLeaf.VARIANT, BlockPlanks.EnumType.JUNGLE).withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false));\n            label269:\n\n            for (i = 0; i >= -1; --i)\n            {\n                for (j = 0; j >= -1; --j)\n                {\n                    if (this.isTwoByTwoOfType(worldIn, pos, i, j, BlockPlanks.EnumType.JUNGLE))\n                    {\n                        worldgenerator = new WorldGenMegaJungle(true, 10, 20, iblockstate, iblockstate1);\n                        flag = true;\n                        break label269;\n                    }\n                }\n            }\n\n            if (!flag)\n            {\n                i = 0;\n                j = 0;\n                worldgenerator = new WorldGenTrees(true, 4 + rand.nextInt(7), iblockstate, iblockstate1, false);\n            }\n\n            break;\n        case ACACIA:\n            worldgenerator = new WorldGenSavannaTree(true);\n            break;\n        case DARK_OAK:\n            label390:\n\n            for (i = 0; i >= -1; --i)\n            {\n                for (j = 0; j >= -1; --j)\n                {\n                    if (this.isTwoByTwoOfType(worldIn, pos, i, j, BlockPlanks.EnumType.DARK_OAK))\n                    {\n                        worldgenerator = new WorldGenCanopyTree(true);\n                        flag = true;\n                        break label390;\n                    }\n                }\n            }\n\n            if (!flag)\n            {\n                return;\n            }\n\n        case OAK:\n    }\n\n    IBlockState iblockstate2 = Blocks.AIR.getDefaultState();\n\n    if (flag)\n    {\n        worldIn.setBlockState(pos.add(i, 0, j), iblockstate2, 4);\n        worldIn.setBlockState(pos.add(i + 1, 0, j), iblockstate2, 4);\n        worldIn.setBlockState(pos.add(i, 0, j + 1), iblockstate2, 4);\n        worldIn.setBlockState(pos.add(i + 1, 0, j + 1), iblockstate2, 4);\n    }\n    else\n    {\n        worldIn.setBlockState(pos, iblockstate2, 4);\n    }\n\n    if (!worldgenerator.generate(worldIn, rand, pos.add(i, 0, j)))\n    {\n        if (flag)\n        {\n            worldIn.setBlockState(pos.add(i, 0, j), state, 4);\n            worldIn.setBlockState(pos.add(i + 1, 0, j), state, 4);\n            worldIn.setBlockState(pos.add(i, 0, j + 1), state, 4);\n            worldIn.setBlockState(pos.add(i + 1, 0, j + 1), state, 4);\n        }\n        else\n        {\n            worldIn.setBlockState(pos, state, 4);\n        }\n    }\n}\n\n```\nI'm not sure how you'd fix this, but I believe it is basically an ordering issue, when the method gets rewritten (bytecode wise) by BTrace, it breaks because the Type of the params are lost, very similar to #160  . I was able to confirm that somehow once Btrace injected itself, the StackMapTable/Frame had invalid Type data about the variables.\nI tested locally and I found that using the COMPUTE_MAXS flag instead of COMPUTE_FRAMES (so it did not regenerate the stack map frames) made it work.\nI am not 100% sure what the full ramifications of doing this are; for my use case I believe it is fine.. Full Output: https://paste.ubuntu.com/25090057/\n(could not put directly in comment because it was too long). Here's the javap output of the dumped BlockSapling class (after transformations), where it broke:\nNote: The code is obfuscated, func_176476_e is generateTree\n```\nClassfile /D:/Programming/Plugin Testing Server 1.10.2/dumper/net/minecraft/block/BlockSapling.class\n  Last modified Jul 14, 2017; size 20394 bytes\n  MD5 checksum e7b3cd22c82b5cc5c070baa7c197f5e4\n  Compiled from \"BlockSapling.java\"\npublic class net.minecraft.block.BlockSapling extends net.minecraft.block.BlockBush implements net.minecraft.block.IGrowable\n  minor version: 0\n  major version: 52\n  flags: ACC_PUBLIC, ACC_SUPER\nConstant pool:\n    #1 = Utf8               net/minecraft/block/BlockSapling\n    #2 = Class              #1            // net/minecraft/block/BlockSapling\n    #3 = Utf8               Lnet/minecraft/block/BlockBush;Lnet/minecraft/block/IGrowable;\n    #4 = Utf8               net/minecraft/block/BlockBush\n    #5 = Class              #4            // net/minecraft/block/BlockBush\n    #6 = Utf8               net/minecraft/block/IGrowable\n    #7 = Class              #6            // net/minecraft/block/IGrowable\n    #8 = Utf8               BlockSapling.java\n    #9 = Utf8               net/minecraft/block/BlockSapling$1\n   #10 = Class              #9            // net/minecraft/block/BlockSapling$1\n   #11 = Utf8               net/minecraft/block/BlockPlanks$EnumType\n   #12 = Class              #11           // net/minecraft/block/BlockPlanks$EnumType\n   #13 = Utf8               net/minecraft/block/BlockPlanks\n   #14 = Class              #13           // net/minecraft/block/BlockPlanks\n   #15 = Utf8               a\n   #16 = Utf8               field_176480_a\n   #17 = Utf8               Lnet/minecraft/block/properties/PropertyEnum;\n   #18 = Utf8               Lnet/minecraft/block/properties/PropertyEnum;\n   #19 = Utf8               field_176479_b\n   #20 = Utf8               Lnet/minecraft/block/properties/PropertyInteger;\n   #21 = Utf8               field_185520_d\n   #22 = Utf8               Lnet/minecraft/util/math/AxisAlignedBB;\n   #23 = Utf8               \n   #24 = Utf8               ()V\n   #25 = NameAndType        #23:#24       // \"\":()V\n   #26 = Methodref          #5.#25        // net/minecraft/block/BlockBush.\"\":()V\n   #27 = Utf8               field_176227_L\n   #28 = Utf8               Lnet/minecraft/block/state/BlockStateContainer;\n   #29 = NameAndType        #27:#28       // field_176227_L:Lnet/minecraft/block/state/BlockStateContainer;\n   #30 = Fieldref           #2.#29        // net/minecraft/block/BlockSapling.field_176227_L:Lnet/minecraft/block/state/BlockStateContainer;\n   #31 = Utf8               net/minecraft/block/state/BlockStateContainer\n   #32 = Class              #31           // net/minecraft/block/state/BlockStateContainer\n   #33 = Utf8               func_177621_b\n   #34 = Utf8               ()Lnet/minecraft/block/state/IBlockState;\n   #35 = NameAndType        #33:#34       // func_177621_b:()Lnet/minecraft/block/state/IBlockState;\n   #36 = Methodref          #32.#35       // net/minecraft/block/state/BlockStateContainer.func_177621_b:()Lnet/minecraft/block/state/IBlockState;\n   #37 = NameAndType        #16:#17       // field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n   #38 = Fieldref           #2.#37        // net/minecraft/block/BlockSapling.field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n   #39 = Utf8               OAK\n   #40 = Utf8               Lnet/minecraft/block/BlockPlanks$EnumType;\n   #41 = NameAndType        #39:#40       // OAK:Lnet/minecraft/block/BlockPlanks$EnumType;\n   #42 = Fieldref           #12.#41       // net/minecraft/block/BlockPlanks$EnumType.OAK:Lnet/minecraft/block/BlockPlanks$EnumType;\n   #43 = Utf8               net/minecraft/block/state/IBlockState\n   #44 = Class              #43           // net/minecraft/block/state/IBlockState\n   #45 = Utf8               func_177226_a\n   #46 = Utf8               (Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n   #47 = NameAndType        #45:#46       // func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n   #48 = InterfaceMethodref #44.#47       // net/minecraft/block/state/IBlockState.func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n   #49 = NameAndType        #19:#20       // field_176479_b:Lnet/minecraft/block/properties/PropertyInteger;\n   #50 = Fieldref           #2.#49        // net/minecraft/block/BlockSapling.field_176479_b:Lnet/minecraft/block/properties/PropertyInteger;\n   #51 = Utf8               java/lang/Integer\n   #52 = Class              #51           // java/lang/Integer\n   #53 = Utf8               valueOf\n   #54 = Utf8               (I)Ljava/lang/Integer;\n   #55 = NameAndType        #53:#54       // valueOf:(I)Ljava/lang/Integer;\n   #56 = Methodref          #52.#55       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n   #57 = Utf8               func_180632_j\n   #58 = Utf8               (Lnet/minecraft/block/state/IBlockState;)V\n   #59 = NameAndType        #57:#58       // func_180632_j:(Lnet/minecraft/block/state/IBlockState;)V\n   #60 = Methodref          #2.#59        // net/minecraft/block/BlockSapling.func_180632_j:(Lnet/minecraft/block/state/IBlockState;)V\n   #61 = Utf8               net/minecraft/creativetab/CreativeTabs\n   #62 = Class              #61           // net/minecraft/creativetab/CreativeTabs\n   #63 = Utf8               field_78031_c\n   #64 = Utf8               Lnet/minecraft/creativetab/CreativeTabs;\n   #65 = NameAndType        #63:#64       // field_78031_c:Lnet/minecraft/creativetab/CreativeTabs;\n   #66 = Fieldref           #62.#65       // net/minecraft/creativetab/CreativeTabs.field_78031_c:Lnet/minecraft/creativetab/CreativeTabs;\n   #67 = Utf8               func_149647_a\n   #68 = Utf8               (Lnet/minecraft/creativetab/CreativeTabs;)Lnet/minecraft/block/Block;\n   #69 = NameAndType        #67:#68       // func_149647_a:(Lnet/minecraft/creativetab/CreativeTabs;)Lnet/minecraft/block/Block;\n   #70 = Methodref          #2.#69        // net/minecraft/block/BlockSapling.func_149647_a:(Lnet/minecraft/creativetab/CreativeTabs;)Lnet/minecraft/block/Block;\n   #71 = Utf8               this\n   #72 = Utf8               Lnet/minecraft/block/BlockSapling;\n   #73 = Utf8               func_185496_a\n   #74 = Utf8               (Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/AxisAlignedBB;\n   #75 = NameAndType        #21:#22       // field_185520_d:Lnet/minecraft/util/math/AxisAlignedBB;\n   #76 = Fieldref           #2.#75        // net/minecraft/block/BlockSapling.field_185520_d:Lnet/minecraft/util/math/AxisAlignedBB;\n   #77 = Utf8               state\n   #78 = Utf8               Lnet/minecraft/block/state/IBlockState;\n   #79 = Utf8               source\n   #80 = Utf8               Lnet/minecraft/world/IBlockAccess;\n   #81 = Utf8               pos\n   #82 = Utf8               Lnet/minecraft/util/math/BlockPos;\n   #83 = Utf8               func_149732_F\n   #84 = Utf8               ()Ljava/lang/String;\n   #85 = Utf8               java/lang/StringBuilder\n   #86 = Class              #85           // java/lang/StringBuilder\n   #87 = Methodref          #86.#25       // java/lang/StringBuilder.\"\":()V\n   #88 = Utf8               func_149739_a\n   #89 = NameAndType        #88:#84       // func_149739_a:()Ljava/lang/String;\n   #90 = Methodref          #2.#89        // net/minecraft/block/BlockSapling.func_149739_a:()Ljava/lang/String;\n   #91 = Utf8               append\n   #92 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n   #93 = NameAndType        #91:#92       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n   #94 = Methodref          #86.#93       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n   #95 = Utf8               .\n   #96 = String             #95           // .\n   #97 = Utf8               func_176840_c\n   #98 = NameAndType        #97:#84       // func_176840_c:()Ljava/lang/String;\n   #99 = Methodref          #12.#98       // net/minecraft/block/BlockPlanks$EnumType.func_176840_c:()Ljava/lang/String;\n  #100 = Utf8               .name\n  #101 = String             #100          // .name\n  #102 = Utf8               toString\n  #103 = NameAndType        #102:#84      // toString:()Ljava/lang/String;\n  #104 = Methodref          #86.#103      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n  #105 = Utf8               net/minecraft/util/text/translation/I18n\n  #106 = Class              #105          // net/minecraft/util/text/translation/I18n\n  #107 = Utf8               func_74838_a\n  #108 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n  #109 = NameAndType        #107:#108     // func_74838_a:(Ljava/lang/String;)Ljava/lang/String;\n  #110 = Methodref          #106.#109     // net/minecraft/util/text/translation/I18n.func_74838_a:(Ljava/lang/String;)Ljava/lang/String;\n  #111 = Utf8               func_180650_b\n  #112 = Utf8               (Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n  #113 = Utf8               net/minecraft/world/World\n  #114 = Class              #113          // net/minecraft/world/World\n  #115 = Utf8               field_72995_K\n  #116 = Utf8               Z\n  #117 = NameAndType        #115:#116     // field_72995_K:Z\n  #118 = Fieldref           #114.#117     // net/minecraft/world/World.field_72995_K:Z\n  #119 = NameAndType        #111:#112     // func_180650_b:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n  #120 = Methodref          #5.#119       // net/minecraft/block/BlockBush.func_180650_b:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n  #121 = Utf8               net/minecraft/util/math/BlockPos\n  #122 = Class              #121          // net/minecraft/util/math/BlockPos\n  #123 = Utf8               func_177984_a\n  #124 = Utf8               ()Lnet/minecraft/util/math/BlockPos;\n  #125 = NameAndType        #123:#124     // func_177984_a:()Lnet/minecraft/util/math/BlockPos;\n  #126 = Methodref          #122.#125     // net/minecraft/util/math/BlockPos.func_177984_a:()Lnet/minecraft/util/math/BlockPos;\n  #127 = Utf8               func_175671_l\n  #128 = Utf8               (Lnet/minecraft/util/math/BlockPos;)I\n  #129 = NameAndType        #127:#128     // func_175671_l:(Lnet/minecraft/util/math/BlockPos;)I\n  #130 = Methodref          #114.#129     // net/minecraft/world/World.func_175671_l:(Lnet/minecraft/util/math/BlockPos;)I\n  #131 = Utf8               java/util/Random\n  #132 = Class              #131          // java/util/Random\n  #133 = Utf8               nextInt\n  #134 = Utf8               (I)I\n  #135 = NameAndType        #133:#134     // nextInt:(I)I\n  #136 = Methodref          #132.#135     // java/util/Random.nextInt:(I)I\n  #137 = Utf8               func_176478_d\n  #138 = NameAndType        #137:#112     // func_176478_d:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n  #139 = Methodref          #2.#138       // net/minecraft/block/BlockSapling.func_176478_d:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n  #140 = Utf8               worldIn\n  #141 = Utf8               Lnet/minecraft/world/World;\n  #142 = Utf8               rand\n  #143 = Utf8               Ljava/util/Random;\n  #144 = Utf8               func_177229_b\n  #145 = Utf8               (Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;\n  #146 = NameAndType        #144:#145     // func_177229_b:(Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;\n  #147 = InterfaceMethodref #44.#146      // net/minecraft/block/state/IBlockState.func_177229_b:(Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;\n  #148 = Utf8               intValue\n  #149 = Utf8               ()I\n  #150 = NameAndType        #148:#149     // intValue:()I\n  #151 = Methodref          #52.#150      // java/lang/Integer.intValue:()I\n  #152 = Utf8               func_177231_a\n  #153 = Utf8               (Lnet/minecraft/block/properties/IProperty;)Lnet/minecraft/block/state/IBlockState;\n  #154 = NameAndType        #152:#153     // func_177231_a:(Lnet/minecraft/block/properties/IProperty;)Lnet/minecraft/block/state/IBlockState;\n  #155 = InterfaceMethodref #44.#154      // net/minecraft/block/state/IBlockState.func_177231_a:(Lnet/minecraft/block/properties/IProperty;)Lnet/minecraft/block/state/IBlockState;\n  #156 = Utf8               func_180501_a\n  #157 = Utf8               (Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n  #158 = NameAndType        #156:#157     // func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n  #159 = Methodref          #114.#158     // net/minecraft/world/World.func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n  #160 = Utf8               func_176476_e\n  #161 = NameAndType        #160:#112     // func_176476_e:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n  #162 = Methodref          #2.#161       // net/minecraft/block/BlockSapling.func_176476_e:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n  #163 = Utf8               net/minecraftforge/event/terraingen/TerrainGen\n  #164 = Class              #163          // net/minecraftforge/event/terraingen/TerrainGen\n  #165 = Utf8               saplingGrowTree\n  #166 = Utf8               (Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/math/BlockPos;)Z\n  #167 = NameAndType        #165:#166     // saplingGrowTree:(Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/math/BlockPos;)Z\n  #168 = Methodref          #164.#167     // net/minecraftforge/event/terraingen/TerrainGen.saplingGrowTree:(Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/math/BlockPos;)Z\n  #169 = Utf8               net/minecraft/world/gen/feature/WorldGenBigTree\n  #170 = Class              #169          // net/minecraft/world/gen/feature/WorldGenBigTree\n  #171 = Utf8               (Z)V\n  #172 = NameAndType        #23:#171      // \"\":(Z)V\n  #173 = Methodref          #170.#172     // net/minecraft/world/gen/feature/WorldGenBigTree.\"\":(Z)V\n  #174 = Utf8               net/minecraft/world/gen/feature/WorldGenTrees\n  #175 = Class              #174          // net/minecraft/world/gen/feature/WorldGenTrees\n  #176 = Methodref          #175.#172     // net/minecraft/world/gen/feature/WorldGenTrees.\"\":(Z)V\n  #177 = Utf8               $SwitchMap$net$minecraft$block$BlockPlanks$EnumType\n  #178 = Utf8               [I\n  #179 = NameAndType        #177:#178     // $SwitchMap$net$minecraft$block$BlockPlanks$EnumType:[I\n  #180 = Fieldref           #10.#179      // net/minecraft/block/BlockSapling$1.$SwitchMap$net$minecraft$block$BlockPlanks$EnumType:[I\n  #181 = Utf8               ordinal\n  #182 = NameAndType        #181:#149     // ordinal:()I\n  #183 = Methodref          #12.#182      // net/minecraft/block/BlockPlanks$EnumType.ordinal:()I\n  #184 = Utf8               SPRUCE\n  #185 = NameAndType        #184:#40      // SPRUCE:Lnet/minecraft/block/BlockPlanks$EnumType;\n  #186 = Fieldref           #12.#185      // net/minecraft/block/BlockPlanks$EnumType.SPRUCE:Lnet/minecraft/block/BlockPlanks$EnumType;\n  #187 = Utf8               func_181624_a\n  #188 = Utf8               (Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;IILnet/minecraft/block/BlockPlanks$EnumType;)Z\n  #189 = NameAndType        #187:#188     // func_181624_a:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;IILnet/minecraft/block/BlockPlanks$EnumType;)Z\n  #190 = Methodref          #2.#189       // net/minecraft/block/BlockSapling.func_181624_a:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;IILnet/minecraft/block/BlockPlanks$EnumType;)Z\n  #191 = Utf8               net/minecraft/world/gen/feature/WorldGenMegaPineTree\n  #192 = Class              #191          // net/minecraft/world/gen/feature/WorldGenMegaPineTree\n  #193 = Utf8               nextBoolean\n  #194 = Utf8               ()Z\n  #195 = NameAndType        #193:#194     // nextBoolean:()Z\n  #196 = Methodref          #132.#195     // java/util/Random.nextBoolean:()Z\n  #197 = Utf8               (ZZ)V\n  #198 = NameAndType        #23:#197      // \"\":(ZZ)V\n  #199 = Methodref          #192.#198     // net/minecraft/world/gen/feature/WorldGenMegaPineTree.\"\":(ZZ)V\n  #200 = Utf8               net/minecraft/world/gen/feature/WorldGenTaiga2\n  #201 = Class              #200          // net/minecraft/world/gen/feature/WorldGenTaiga2\n  #202 = Methodref          #201.#172     // net/minecraft/world/gen/feature/WorldGenTaiga2.\"\":(Z)V\n  #203 = Utf8               net/minecraft/world/gen/feature/WorldGenBirchTree\n  #204 = Class              #203          // net/minecraft/world/gen/feature/WorldGenBirchTree\n  #205 = Methodref          #204.#198     // net/minecraft/world/gen/feature/WorldGenBirchTree.\"\":(ZZ)V\n  #206 = Utf8               net/minecraft/init/Blocks\n  #207 = Class              #206          // net/minecraft/init/Blocks\n  #208 = Utf8               field_150364_r\n  #209 = Utf8               Lnet/minecraft/block/Block;\n  #210 = NameAndType        #208:#209     // field_150364_r:Lnet/minecraft/block/Block;\n  #211 = Fieldref           #207.#210     // net/minecraft/init/Blocks.field_150364_r:Lnet/minecraft/block/Block;\n  #212 = Utf8               net/minecraft/block/Block\n  #213 = Class              #212          // net/minecraft/block/Block\n  #214 = Utf8               func_176223_P\n  #215 = NameAndType        #214:#34      // func_176223_P:()Lnet/minecraft/block/state/IBlockState;\n  #216 = Methodref          #213.#215     // net/minecraft/block/Block.func_176223_P:()Lnet/minecraft/block/state/IBlockState;\n  #217 = Utf8               net/minecraft/block/BlockOldLog\n  #218 = Class              #217          // net/minecraft/block/BlockOldLog\n  #219 = Utf8               field_176301_b\n  #220 = NameAndType        #219:#17      // field_176301_b:Lnet/minecraft/block/properties/PropertyEnum;\n  #221 = Fieldref           #218.#220     // net/minecraft/block/BlockOldLog.field_176301_b:Lnet/minecraft/block/properties/PropertyEnum;\n  #222 = Utf8               JUNGLE\n  #223 = NameAndType        #222:#40      // JUNGLE:Lnet/minecraft/block/BlockPlanks$EnumType;\n  #224 = Fieldref           #12.#223      // net/minecraft/block/BlockPlanks$EnumType.JUNGLE:Lnet/minecraft/block/BlockPlanks$EnumType;\n  #225 = Utf8               field_150362_t\n  #226 = Utf8               Lnet/minecraft/block/BlockLeaves;\n  #227 = NameAndType        #225:#226     // field_150362_t:Lnet/minecraft/block/BlockLeaves;\n  #228 = Fieldref           #207.#227     // net/minecraft/init/Blocks.field_150362_t:Lnet/minecraft/block/BlockLeaves;\n  #229 = Utf8               net/minecraft/block/BlockLeaves\n  #230 = Class              #229          // net/minecraft/block/BlockLeaves\n  #231 = Methodref          #230.#215     // net/minecraft/block/BlockLeaves.func_176223_P:()Lnet/minecraft/block/state/IBlockState;\n  #232 = Utf8               net/minecraft/block/BlockOldLeaf\n  #233 = Class              #232          // net/minecraft/block/BlockOldLeaf\n  #234 = Utf8               field_176239_P\n  #235 = NameAndType        #234:#17      // field_176239_P:Lnet/minecraft/block/properties/PropertyEnum;\n  #236 = Fieldref           #233.#235     // net/minecraft/block/BlockOldLeaf.field_176239_P:Lnet/minecraft/block/properties/PropertyEnum;\n  #237 = Utf8               field_176236_b\n  #238 = Utf8               Lnet/minecraft/block/properties/PropertyBool;\n  #239 = NameAndType        #237:#238     // field_176236_b:Lnet/minecraft/block/properties/PropertyBool;\n  #240 = Fieldref           #230.#239     // net/minecraft/block/BlockLeaves.field_176236_b:Lnet/minecraft/block/properties/PropertyBool;\n  #241 = Utf8               java/lang/Boolean\n  #242 = Class              #241          // java/lang/Boolean\n  #243 = Utf8               (Z)Ljava/lang/Boolean;\n  #244 = NameAndType        #53:#243      // valueOf:(Z)Ljava/lang/Boolean;\n  #245 = Methodref          #242.#244     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n  #246 = Utf8               net/minecraft/world/gen/feature/WorldGenMegaJungle\n  #247 = Class              #246          // net/minecraft/world/gen/feature/WorldGenMegaJungle\n  #248 = Utf8               (ZIILnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;)V\n  #249 = NameAndType        #23:#248      // \"\":(ZIILnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;)V\n  #250 = Methodref          #247.#249     // net/minecraft/world/gen/feature/WorldGenMegaJungle.\"\":(ZIILnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;)V\n  #251 = Utf8               (ZILnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;Z)V\n  #252 = NameAndType        #23:#251      // \"\":(ZILnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;Z)V\n  #253 = Methodref          #175.#252     // net/minecraft/world/gen/feature/WorldGenTrees.\"\":(ZILnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;Z)V\n  #254 = Utf8               net/minecraft/world/gen/feature/WorldGenSavannaTree\n  #255 = Class              #254          // net/minecraft/world/gen/feature/WorldGenSavannaTree\n  #256 = Methodref          #255.#172     // net/minecraft/world/gen/feature/WorldGenSavannaTree.\"\":(Z)V\n  #257 = Utf8               DARK_OAK\n  #258 = NameAndType        #257:#40      // DARK_OAK:Lnet/minecraft/block/BlockPlanks$EnumType;\n  #259 = Fieldref           #12.#258      // net/minecraft/block/BlockPlanks$EnumType.DARK_OAK:Lnet/minecraft/block/BlockPlanks$EnumType;\n  #260 = Utf8               net/minecraft/world/gen/feature/WorldGenCanopyTree\n  #261 = Class              #260          // net/minecraft/world/gen/feature/WorldGenCanopyTree\n  #262 = Methodref          #261.#172     // net/minecraft/world/gen/feature/WorldGenCanopyTree.\"\":(Z)V\n  #263 = Utf8               field_150350_a\n  #264 = NameAndType        #263:#209     // field_150350_a:Lnet/minecraft/block/Block;\n  #265 = Fieldref           #207.#264     // net/minecraft/init/Blocks.field_150350_a:Lnet/minecraft/block/Block;\n  #266 = Utf8               func_177982_a\n  #267 = Utf8               (III)Lnet/minecraft/util/math/BlockPos;\n  #268 = NameAndType        #266:#267     // func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n  #269 = Methodref          #122.#268     // net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n  #270 = Utf8               net/minecraft/world/gen/feature/WorldGenerator\n  #271 = Class              #270          // net/minecraft/world/gen/feature/WorldGenerator\n  #272 = Utf8               func_180709_b\n  #273 = NameAndType        #272:#166     // func_180709_b:(Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/math/BlockPos;)Z\n  #274 = Methodref          #271.#273     // net/minecraft/world/gen/feature/WorldGenerator.func_180709_b:(Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/math/BlockPos;)Z\n  #275 = Utf8               iblockstate\n  #276 = Utf8               iblockstate1\n  #277 = Utf8               worldgenerator\n  #278 = Utf8               Lnet/minecraft/world/gen/feature/WorldGenerator;\n  #279 = Utf8               i\n  #280 = Utf8               I\n  #281 = Utf8               j\n  #282 = Utf8               flag\n  #283 = Utf8               iblockstate2\n  #284 = Utf8               net/minecraft/world/gen/feature/WorldGenAbstractTree\n  #285 = Class              #284          // net/minecraft/world/gen/feature/WorldGenAbstractTree\n  #286 = Utf8               func_176477_a\n  #287 = Utf8               (Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/BlockPlanks$EnumType;)Z\n  #288 = NameAndType        #286:#287     // func_176477_a:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/BlockPlanks$EnumType;)Z\n  #289 = Methodref          #2.#288       // net/minecraft/block/BlockSapling.func_176477_a:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/BlockPlanks$EnumType;)Z\n  #290 = Utf8               p_181624_3_\n  #291 = Utf8               p_181624_4_\n  #292 = Utf8               type\n  #293 = Utf8               func_180495_p\n  #294 = Utf8               (Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;\n  #295 = NameAndType        #293:#294     // func_180495_p:(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;\n  #296 = Methodref          #114.#295     // net/minecraft/world/World.func_180495_p:(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;\n  #297 = Utf8               func_177230_c\n  #298 = Utf8               ()Lnet/minecraft/block/Block;\n  #299 = NameAndType        #297:#298     // func_177230_c:()Lnet/minecraft/block/Block;\n  #300 = InterfaceMethodref #44.#299      // net/minecraft/block/state/IBlockState.func_177230_c:()Lnet/minecraft/block/Block;\n  #301 = Utf8               func_180651_a\n  #302 = Utf8               (Lnet/minecraft/block/state/IBlockState;)I\n  #303 = Utf8               func_176839_a\n  #304 = NameAndType        #303:#149     // func_176839_a:()I\n  #305 = Methodref          #12.#304      // net/minecraft/block/BlockPlanks$EnumType.func_176839_a:()I\n  #306 = Utf8               func_176473_a\n  #307 = Utf8               (Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Z)Z\n  #308 = Utf8               isClient\n  #309 = Utf8               func_180670_a\n  #310 = Utf8               (Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;)Z\n  #311 = Utf8               field_73012_v\n  #312 = NameAndType        #311:#143     // field_73012_v:Ljava/util/Random;\n  #313 = Fieldref           #114.#312     // net/minecraft/world/World.field_73012_v:Ljava/util/Random;\n  #314 = Utf8               nextFloat\n  #315 = Utf8               ()F\n  #316 = NameAndType        #314:#315     // nextFloat:()F\n  #317 = Methodref          #132.#316     // java/util/Random.nextFloat:()F\n  #318 = Double             0.45d\n  #320 = Utf8               func_176474_b\n  #321 = Utf8               (Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;)V\n  #322 = Utf8               func_176203_a\n  #323 = Utf8               (I)Lnet/minecraft/block/state/IBlockState;\n  #324 = Methodref          #2.#215       // net/minecraft/block/BlockSapling.func_176223_P:()Lnet/minecraft/block/state/IBlockState;\n  #325 = Utf8               func_176837_a\n  #326 = Utf8               (I)Lnet/minecraft/block/BlockPlanks$EnumType;\n  #327 = NameAndType        #325:#326     // func_176837_a:(I)Lnet/minecraft/block/BlockPlanks$EnumType;\n  #328 = Methodref          #12.#327      // net/minecraft/block/BlockPlanks$EnumType.func_176837_a:(I)Lnet/minecraft/block/BlockPlanks$EnumType;\n  #329 = Utf8               meta\n  #330 = Utf8               func_176201_c\n  #331 = Utf8               func_180661_e\n  #332 = Utf8               ()Lnet/minecraft/block/state/BlockStateContainer;\n  #333 = Utf8               net/minecraft/block/properties/IProperty\n  #334 = Class              #333          // net/minecraft/block/properties/IProperty\n  #335 = Utf8               (Lnet/minecraft/block/Block;[Lnet/minecraft/block/properties/IProperty;)V\n  #336 = NameAndType        #23:#335      // \"\":(Lnet/minecraft/block/Block;[Lnet/minecraft/block/properties/IProperty;)V\n  #337 = Methodref          #32.#336      // net/minecraft/block/state/BlockStateContainer.\"\":(Lnet/minecraft/block/Block;[Lnet/minecraft/block/properties/IProperty;)V\n  #338 = Utf8               \n  #339 = String             #292          // type\n  #340 = Utf8               net/minecraft/block/properties/PropertyEnum\n  #341 = Class              #340          // net/minecraft/block/properties/PropertyEnum\n  #342 = Utf8               func_177709_a\n  #343 = Utf8               (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/block/properties/PropertyEnum;\n  #344 = NameAndType        #342:#343     // func_177709_a:(Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/block/properties/PropertyEnum;\n  #345 = Methodref          #341.#344     // net/minecraft/block/properties/PropertyEnum.func_177709_a:(Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/block/properties/PropertyEnum;\n  #346 = Utf8               stage\n  #347 = String             #346          // stage\n  #348 = Utf8               net/minecraft/block/properties/PropertyInteger\n  #349 = Class              #348          // net/minecraft/block/properties/PropertyInteger\n  #350 = Utf8               func_177719_a\n  #351 = Utf8               (Ljava/lang/String;II)Lnet/minecraft/block/properties/PropertyInteger;\n  #352 = NameAndType        #350:#351     // func_177719_a:(Ljava/lang/String;II)Lnet/minecraft/block/properties/PropertyInteger;\n  #353 = Methodref          #349.#352     // net/minecraft/block/properties/PropertyInteger.func_177719_a:(Ljava/lang/String;II)Lnet/minecraft/block/properties/PropertyInteger;\n  #354 = Utf8               net/minecraft/util/math/AxisAlignedBB\n  #355 = Class              #354          // net/minecraft/util/math/AxisAlignedBB\n  #356 = Double             0.09999999403953552d\n  #358 = Double             0.8999999761581421d\n  #360 = Double             0.800000011920929d\n  #362 = Utf8               (DDDDDD)V\n  #363 = NameAndType        #23:#362      // \"\":(DDDDDD)V\n  #364 = Methodref          #355.#363     // net/minecraft/util/math/AxisAlignedBB.\"\":(DDDDDD)V\n  #365 = Utf8               getManipulators\n  #366 = Utf8               (Lnet/minecraft/block/state/IBlockState;)Lcom/google/common/collect/ImmutableList;\n  #367 = Utf8               blockState\n  #368 = Utf8               Lorg/spongepowered/asm/mixin/transformer/meta/MixinMerged;\n  #369 = Utf8               mixin\n  #370 = Utf8               org.spongepowered.common.mixin.core.block.MixinBlockSapling\n  #371 = Utf8               priority\n  #372 = Integer            1000\n  #373 = Utf8               sessionId\n  #374 = Utf8               9659bae9-9d04-4217-a252-efb053abb968\n  #375 = Utf8               getTreeTypeFor\n  #376 = Utf8               (Lnet/minecraft/block/state/IBlockState;)Lorg/spongepowered/common/data/manipulator/immutable/block/ImmutableSpongeTreeData;\n  #377 = NameAndType        #375:#376     // getTreeTypeFor:(Lnet/minecraft/block/state/IBlockState;)Lorg/spongepowered/common/data/manipulator/immutable/block/ImmutableSpongeTreeData;\n  #378 = Methodref          #2.#377       // net/minecraft/block/BlockSapling.getTreeTypeFor:(Lnet/minecraft/block/state/IBlockState;)Lorg/spongepowered/common/data/manipulator/immutable/block/ImmutableSpongeTreeData;\n  #379 = Utf8               getGrowthData\n  #380 = Utf8               (Lnet/minecraft/block/state/IBlockState;)Lorg/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData;\n  #381 = NameAndType        #379:#380     // getGrowthData:(Lnet/minecraft/block/state/IBlockState;)Lorg/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData;\n  #382 = Methodref          #2.#381       // net/minecraft/block/BlockSapling.getGrowthData:(Lnet/minecraft/block/state/IBlockState;)Lorg/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData;\n  #383 = Utf8               com/google/common/collect/ImmutableList\n  #384 = Class              #383          // com/google/common/collect/ImmutableList\n  #385 = Utf8               of\n  #386 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;\n  #387 = NameAndType        #385:#386     // of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;\n  #388 = Methodref          #384.#387     // com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;\n  #389 = Utf8               Lorg/spongepowered/common/mixin/core/block/MixinBlockSapling;\n  #390 = Utf8               supports\n  #391 = Utf8               (Ljava/lang/Class;)Z\n  #392 = Utf8               immutable\n  #393 = Utf8               org/spongepowered/api/data/manipulator/immutable/block/ImmutableStoneData\n  #394 = Class              #393          // org/spongepowered/api/data/manipulator/immutable/block/ImmutableStoneData\n  #395 = Utf8               java/lang/Class\n  #396 = Class              #395          // java/lang/Class\n  #397 = Utf8               isAssignableFrom\n  #398 = NameAndType        #397:#391     // isAssignableFrom:(Ljava/lang/Class;)Z\n  #399 = Methodref          #396.#398     // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n  #400 = Utf8               org/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData\n  #401 = Class              #400          // org/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData\n  #402 = Utf8               Ljava/lang/Class<+Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator<>;>;\n  #403 = Utf8               Ljava/lang/Class;\n  #404 = Utf8               getStateWithData\n  #405 = Utf8               (Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator;)Ljava/util/Optional;\n  #406 = Utf8               manipulator\n  #407 = Utf8               ()Lorg/spongepowered/api/data/value/immutable/ImmutableValue;\n  #408 = NameAndType        #292:#407     // type:()Lorg/spongepowered/api/data/value/immutable/ImmutableValue;\n  #409 = InterfaceMethodref #394.#408     // org/spongepowered/api/data/manipulator/immutable/block/ImmutableStoneData.type:()Lorg/spongepowered/api/data/value/immutable/ImmutableValue;\n  #410 = Utf8               org/spongepowered/api/data/value/immutable/ImmutableValue\n  #411 = Class              #410          // org/spongepowered/api/data/value/immutable/ImmutableValue\n  #412 = Utf8               get\n  #413 = Utf8               ()Ljava/lang/Object;\n  #414 = NameAndType        #412:#413     // get:()Ljava/lang/Object;\n  #415 = InterfaceMethodref #411.#414     // org/spongepowered/api/data/value/immutable/ImmutableValue.get:()Ljava/lang/Object;\n  #416 = Utf8               org/spongepowered/api/block/BlockState\n  #417 = Class              #416          // org/spongepowered/api/block/BlockState\n  #418 = Utf8               java/util/Optional\n  #419 = Class              #418          // java/util/Optional\n  #420 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;\n  #421 = NameAndType        #385:#420     // of:(Ljava/lang/Object;)Ljava/util/Optional;\n  #422 = Methodref          #419.#421     // java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;\n  #423 = Utf8               growthStage\n  #424 = Utf8               ()Lorg/spongepowered/api/data/value/immutable/ImmutableBoundedValue;\n  #425 = NameAndType        #423:#424     // growthStage:()Lorg/spongepowered/api/data/value/immutable/ImmutableBoundedValue;\n  #426 = InterfaceMethodref #401.#425     // org/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData.growthStage:()Lorg/spongepowered/api/data/value/immutable/ImmutableBoundedValue;\n  #427 = Utf8               org/spongepowered/api/data/value/immutable/ImmutableBoundedValue\n  #428 = Class              #427          // org/spongepowered/api/data/value/immutable/ImmutableBoundedValue\n  #429 = InterfaceMethodref #428.#414     // org/spongepowered/api/data/value/immutable/ImmutableBoundedValue.get:()Ljava/lang/Object;\n  #430 = NameAndType        #404:#405     // getStateWithData:(Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator;)Ljava/util/Optional;\n  #431 = Methodref          #213.#430     // net/minecraft/block/Block.getStateWithData:(Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator;)Ljava/util/Optional;\n  #432 = Utf8               treeType\n  #433 = Utf8               growth\n  #434 = Utf8               Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator<>;\n  #435 = Utf8               Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator;\n  #436 = Utf8               getStateWithValue\n  #437 = Utf8               (Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/key/Key;Ljava/lang/Object;)Ljava/util/Optional;\n  #438 = Utf8               key\n  #439 = Utf8               value\n  #440 = Utf8               org/spongepowered/api/data/key/Keys\n  #441 = Class              #440          // org/spongepowered/api/data/key/Keys\n  #442 = Utf8               TREE_TYPE\n  #443 = Utf8               Lorg/spongepowered/api/data/key/Key;\n  #444 = NameAndType        #442:#443     // TREE_TYPE:Lorg/spongepowered/api/data/key/Key;\n  #445 = Fieldref           #441.#444     // org/spongepowered/api/data/key/Keys.TREE_TYPE:Lorg/spongepowered/api/data/key/Key;\n  #446 = Utf8               java/lang/Object\n  #447 = Class              #446          // java/lang/Object\n  #448 = Utf8               equals\n  #449 = Utf8               (Ljava/lang/Object;)Z\n  #450 = NameAndType        #448:#449     // equals:(Ljava/lang/Object;)Z\n  #451 = Methodref          #447.#450     // java/lang/Object.equals:(Ljava/lang/Object;)Z\n  #452 = Utf8               GROWTH_STAGE\n  #453 = NameAndType        #452:#443     // GROWTH_STAGE:Lorg/spongepowered/api/data/key/Key;\n  #454 = Fieldref           #441.#453     // org/spongepowered/api/data/key/Keys.GROWTH_STAGE:Lorg/spongepowered/api/data/key/Key;\n  #455 = NameAndType        #436:#437     // getStateWithValue:(Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/key/Key;Ljava/lang/Object;)Ljava/util/Optional;\n  #456 = Methodref          #213.#455     // net/minecraft/block/Block.getStateWithValue:(Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/key/Key;Ljava/lang/Object;)Ljava/util/Optional;\n  #457 = Utf8               Lorg/spongepowered/api/data/key/Key<+Lorg/spongepowered/api/data/value/BaseValue;>;\n  #458 = Utf8               TE;\n  #459 = Utf8               Ljava/lang/Object;\n  #460 = Utf8               org/spongepowered/common/data/manipulator/immutable/block/ImmutableSpongeTreeData\n  #461 = Class              #460          // org/spongepowered/common/data/manipulator/immutable/block/ImmutableSpongeTreeData\n  #462 = Utf8               org/spongepowered/api/data/type/TreeType\n  #463 = Class              #462          // org/spongepowered/api/data/type/TreeType\n  #464 = Utf8               org/spongepowered/common/data/ImmutableDataCachingUtil\n  #465 = Class              #464          // org/spongepowered/common/data/ImmutableDataCachingUtil\n  #466 = Utf8               getManipulator\n  #467 = Utf8               (Ljava/lang/Class;[Ljava/lang/Object;)Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator;\n  #468 = NameAndType        #466:#467     // getManipulator:(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator;\n  #469 = Methodref          #465.#468     // org/spongepowered/common/data/ImmutableDataCachingUtil.getManipulator:(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator;\n  #470 = Utf8               org/spongepowered/common/data/manipulator/immutable/block/ImmutableSpongeGrowthData\n  #471 = Class              #470          // org/spongepowered/common/data/manipulator/immutable/block/ImmutableSpongeGrowthData\n  #472 = Utf8               (Lnet/minecraft/block/state/IBlockState;)Ljava/util/List;\n  #473 = NameAndType        #365:#366     // getManipulators:(Lnet/minecraft/block/state/IBlockState;)Lcom/google/common/collect/ImmutableList;\n  #474 = Methodref          #2.#473       // net/minecraft/block/BlockSapling.getManipulators:(Lnet/minecraft/block/state/IBlockState;)Lcom/google/common/collect/ImmutableList;\n  #475 = Utf8               Signature\n  #476 = Utf8               Code\n  #477 = Utf8               LocalVariableTable\n  #478 = Utf8               LineNumberTable\n  #479 = Utf8               StackMapTable\n  #480 = Utf8               (Lnet/minecraft/block/state/IBlockState;)Lcom/google/common/collect/ImmutableList;>;\n  #481 = Utf8               MethodParameters\n  #482 = Utf8               RuntimeVisibleAnnotations\n  #483 = Utf8               LocalVariableTypeTable\n  #484 = Utf8               (Ljava/lang/Class<+Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator<>;>;)Z\n  #485 = Utf8               (Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator<>;)Ljava/util/Optional;\n  #486 = Utf8               (Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/key/Key<+Lorg/spongepowered/api/data/value/BaseValue;>;TE;)Ljava/util/Optional;\n  #487 = Utf8               SourceFile\n  #488 = Utf8               SourceDebugExtension\n  #489 = Utf8               InnerClasses\n  #490 = Utf8               protected void net.minecraft.block.BlockSapling#\n  #491 = String             #490          // protected void net.minecraft.block.BlockSapling#\n  #492 = Utf8               $btrace$com$negafinity$btrace$Logger$entry\n  #493 = Utf8               (Ljava/lang/String;)V\n  #494 = NameAndType        #492:#493     // $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n  #495 = Methodref          #2.#494       // net/minecraft/block/BlockSapling.$btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n  #496 = Utf8               java/lang/System\n  #497 = Class              #496          // java/lang/System\n  #498 = Utf8               nanoTime\n  #499 = Utf8               ()J\n  #500 = NameAndType        #498:#499     // nanoTime:()J\n  #501 = Methodref          #497.#500     // java/lang/System.nanoTime:()J\n  #502 = Utf8               $btrace$com$negafinity$btrace$Logger$exit\n  #503 = Utf8               (Ljava/lang/String;J)V\n  #504 = NameAndType        #502:#503     // $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n  #505 = Methodref          #2.#504       // net/minecraft/block/BlockSapling.$btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n  #506 = Utf8               public net.minecraft.util.math.AxisAlignedBB net.minecraft.block.BlockSapling#func_185496_a(net.minecraft.block.state.IBlockState, net.minecraft.world.IBlockAccess, net.minecraft.util.math.BlockPos)\n  #507 = String             #506          // public net.minecraft.util.math.AxisAlignedBB net.minecraft.block.BlockSapling#func_185496_a(net.minecraft.block.state.IBlockState, net.minecraft.world.IBlockAccess, net.minecraft.util.math.BlockPos)\n  #508 = Utf8               public java.lang.String net.minecraft.block.BlockSapling#func_149732_F\n  #509 = String             #508          // public java.lang.String net.minecraft.block.BlockSapling#func_149732_F\n  #510 = Utf8               public void net.minecraft.block.BlockSapling#func_180650_b(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n  #511 = String             #510          // public void net.minecraft.block.BlockSapling#func_180650_b(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n  #512 = Utf8               public void net.minecraft.block.BlockSapling#func_176478_d(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n  #513 = String             #512          // public void net.minecraft.block.BlockSapling#func_176478_d(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n  #514 = Utf8               public void net.minecraft.block.BlockSapling#func_176476_e(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n  #515 = String             #514          // public void net.minecraft.block.BlockSapling#func_176476_e(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n  #516 = Utf8               private boolean net.minecraft.block.BlockSapling#func_181624_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, int, int, net.minecraft.block.BlockPlanks$EnumType)\n  #517 = String             #516          // private boolean net.minecraft.block.BlockSapling#func_181624_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, int, int, net.minecraft.block.BlockPlanks$EnumType)\n  #518 = Utf8               public boolean net.minecraft.block.BlockSapling#func_176477_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.BlockPlanks$EnumType)\n  #519 = String             #518          // public boolean net.minecraft.block.BlockSapling#func_176477_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.BlockPlanks$EnumType)\n  #520 = Utf8               public int net.minecraft.block.BlockSapling#func_180651_a(net.minecraft.block.state.IBlockState)\n  #521 = String             #520          // public int net.minecraft.block.BlockSapling#func_180651_a(net.minecraft.block.state.IBlockState)\n  #522 = Utf8               public boolean net.minecraft.block.BlockSapling#func_176473_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, boolean)\n  #523 = String             #522          // public boolean net.minecraft.block.BlockSapling#func_176473_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, boolean)\n  #524 = Utf8               public boolean net.minecraft.block.BlockSapling#func_180670_a(net.minecraft.world.World, java.util.Random, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState)\n  #525 = String             #524          // public boolean net.minecraft.block.BlockSapling#func_180670_a(net.minecraft.world.World, java.util.Random, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState)\n  #526 = Utf8               public void net.minecraft.block.BlockSapling#func_176474_b(net.minecraft.world.World, java.util.Random, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState)\n  #527 = String             #526          // public void net.minecraft.block.BlockSapling#func_176474_b(net.minecraft.world.World, java.util.Random, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState)\n  #528 = Utf8               public net.minecraft.block.state.IBlockState net.minecraft.block.BlockSapling#func_176203_a(int)\n  #529 = String             #528          // public net.minecraft.block.state.IBlockState net.minecraft.block.BlockSapling#func_176203_a(int)\n  #530 = Utf8               public int net.minecraft.block.BlockSapling#func_176201_c(net.minecraft.block.state.IBlockState)\n  #531 = String             #530          // public int net.minecraft.block.BlockSapling#func_176201_c(net.minecraft.block.state.IBlockState)\n  #532 = Utf8               protected net.minecraft.block.state.BlockStateContainer net.minecraft.block.BlockSapling#func_180661_e\n  #533 = String             #532          // protected net.minecraft.block.state.BlockStateContainer net.minecraft.block.BlockSapling#func_180661_e\n  #534 = Utf8               static void net.minecraft.block.BlockSapling#\n  #535 = String             #534          // static void net.minecraft.block.BlockSapling#\n  #536 = Utf8               public com.google.common.collect.ImmutableList net.minecraft.block.BlockSapling#getManipulators(net.minecraft.block.state.IBlockState)\n  #537 = String             #536          // public com.google.common.collect.ImmutableList net.minecraft.block.BlockSapling#getManipulators(net.minecraft.block.state.IBlockState)\n  #538 = Utf8               public boolean net.minecraft.block.BlockSapling#supports(java.lang.Class)\n  #539 = String             #538          // public boolean net.minecraft.block.BlockSapling#supports(java.lang.Class)\n  #540 = Utf8               public java.util.Optional net.minecraft.block.BlockSapling#getStateWithData(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.manipulator.ImmutableDataManipulator)\n  #541 = String             #540          // public java.util.Optional net.minecraft.block.BlockSapling#getStateWithData(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.manipulator.ImmutableDataManipulator)\n  #542 = Utf8               public java.util.Optional net.minecraft.block.BlockSapling#getStateWithValue(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.key.Key, java.lang.Object)\n  #543 = String             #542          // public java.util.Optional net.minecraft.block.BlockSapling#getStateWithValue(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.key.Key, java.lang.Object)\n  #544 = Utf8               private org.spongepowered.common.data.manipulator.immutable.block.ImmutableSpongeTreeData net.minecraft.block.BlockSapling#getTreeTypeFor(net.minecraft.block.state.IBlockState)\n  #545 = String             #544          // private org.spongepowered.common.data.manipulator.immutable.block.ImmutableSpongeTreeData net.minecraft.block.BlockSapling#getTreeTypeFor(net.minecraft.block.state.IBlockState)\n  #546 = Utf8               private org.spongepowered.api.data.manipulator.immutable.block.ImmutableGrowthData net.minecraft.block.BlockSapling#getGrowthData(net.minecraft.block.state.IBlockState)\n  #547 = String             #546          // private org.spongepowered.api.data.manipulator.immutable.block.ImmutableGrowthData net.minecraft.block.BlockSapling#getGrowthData(net.minecraft.block.state.IBlockState)\n  #548 = Utf8               public volatile java.util.List net.minecraft.block.BlockSapling#getManipulators(net.minecraft.block.state.IBlockState)\n  #549 = String             #548          // public volatile java.util.List net.minecraft.block.BlockSapling#getManipulators(net.minecraft.block.state.IBlockState)\n  #550 = Utf8               Lcom/sun/btrace/annotations/OnMethod;\n  #551 = Utf8               clazz\n  #552 = Utf8               /^(?!sun|java).$/\n  #553 = Utf8               method\n  #554 = Utf8               /./\n  #555 = Utf8               Lcom/sun/btrace/annotations/ProbeMethodName;\n  #556 = Utf8               fqn\n  #557 = Integer            1\n  #558 = Utf8               com/negafinity/btrace/Logger\n  #559 = Class              #558          // com/negafinity/btrace/Logger\n  #560 = Utf8               runtime\n  #561 = Utf8               Lcom/sun/btrace/BTraceRuntime;\n  #562 = NameAndType        #560:#561     // runtime:Lcom/sun/btrace/BTraceRuntime;\n  #563 = Fieldref           #559.#562     // com/negafinity/btrace/Logger.runtime:Lcom/sun/btrace/BTraceRuntime;\n  #564 = Utf8               com/sun/btrace/BTraceRuntime\n  #565 = Class              #564          // com/sun/btrace/BTraceRuntime\n  #566 = Utf8               enter\n  #567 = Utf8               (Lcom/sun/btrace/BTraceRuntime;)Z\n  #568 = NameAndType        #566:#567     // enter:(Lcom/sun/btrace/BTraceRuntime;)Z\n  #569 = Methodref          #565.#568     // com/sun/btrace/BTraceRuntime.enter:(Lcom/sun/btrace/BTraceRuntime;)Z\n  #570 = Utf8               profiler\n  #571 = Utf8               Lcom/sun/btrace/Profiler;\n  #572 = NameAndType        #570:#571     // profiler:Lcom/sun/btrace/Profiler;\n  #573 = Fieldref           #559.#572     // com/negafinity/btrace/Logger.profiler:Lcom/sun/btrace/Profiler;\n  #574 = Utf8               com/sun/btrace/BTraceUtils$Profiling\n  #575 = Class              #574          // com/sun/btrace/BTraceUtils$Profiling\n  #576 = Utf8               recordEntry\n  #577 = Utf8               (Lcom/sun/btrace/Profiler;Ljava/lang/String;)V\n  #578 = NameAndType        #576:#577     // recordEntry:(Lcom/sun/btrace/Profiler;Ljava/lang/String;)V\n  #579 = Methodref          #575.#578     // com/sun/btrace/BTraceUtils$Profiling.recordEntry:(Lcom/sun/btrace/Profiler;Ljava/lang/String;)V\n  #580 = Utf8               leave\n  #581 = NameAndType        #580:#24      // leave:()V\n  #582 = Methodref          #565.#581     // com/sun/btrace/BTraceRuntime.leave:()V\n  #583 = Utf8               location\n  #584 = Utf8               Lcom/sun/btrace/annotations/Location;\n  #585 = Utf8               Lcom/sun/btrace/annotations/Kind;\n  #586 = Utf8               RETURN\n  #587 = Utf8               Lcom/sun/btrace/annotations/Duration;\n  #588 = Utf8               recordExit\n  #589 = Utf8               (Lcom/sun/btrace/Profiler;Ljava/lang/String;J)V\n  #590 = NameAndType        #588:#589     // recordExit:(Lcom/sun/btrace/Profiler;Ljava/lang/String;J)V\n  #591 = Methodref          #575.#590     // com/sun/btrace/BTraceUtils$Profiling.recordExit:(Lcom/sun/btrace/Profiler;Ljava/lang/String;J)V\n  #592 = Utf8               RuntimeVisibleParameterAnnotations\n{\n  public static final net.minecraft.block.properties.PropertyEnum field_176480_a;\n    descriptor: Lnet/minecraft/block/properties/PropertyEnum;\n    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n    Signature: #18                          // Lnet/minecraft/block/properties/PropertyEnum;\npublic static final net.minecraft.block.properties.PropertyInteger field_176479_b;\n    descriptor: Lnet/minecraft/block/properties/PropertyInteger;\n    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL\nprotected static final net.minecraft.util.math.AxisAlignedBB field_185520_d;\n    descriptor: Lnet/minecraft/util/math/AxisAlignedBB;\n    flags: ACC_PROTECTED, ACC_STATIC, ACC_FINAL\nprotected net.minecraft.block.BlockSapling();\n    descriptor: ()V\n    flags: ACC_PROTECTED\n    Code:\n      stack=4, locals=5, args_size=1\n         0: aload_0\n         1: invokespecial #26                 // Method net/minecraft/block/BlockBush.\"\":()V\n         4: ldc_w         #491                // String protected void net.minecraft.block.BlockSapling#\n         7: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        10: lconst_0\n        11: lstore_1\n        12: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        15: lstore_3\n        16: aload_0\n        17: aload_0\n        18: getfield      #30                 // Field field_176227_L:Lnet/minecraft/block/state/BlockStateContainer;\n        21: invokevirtual #36                 // Method net/minecraft/block/state/BlockStateContainer.func_177621_b:()Lnet/minecraft/block/state/IBlockState;\n        24: getstatic     #38                 // Field field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n        27: getstatic     #42                 // Field net/minecraft/block/BlockPlanks$EnumType.OAK:Lnet/minecraft/block/BlockPlanks$EnumType;\n        30: invokeinterface #48,  3           // InterfaceMethod net/minecraft/block/state/IBlockState.func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n        35: getstatic     #50                 // Field field_176479_b:Lnet/minecraft/block/properties/PropertyInteger;\n        38: iconst_0\n        39: invokestatic  #56                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n        42: invokeinterface #48,  3           // InterfaceMethod net/minecraft/block/state/IBlockState.func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n        47: invokevirtual #60                 // Method func_180632_j:(Lnet/minecraft/block/state/IBlockState;)V\n        50: aload_0\n        51: getstatic     #66                 // Field net/minecraft/creativetab/CreativeTabs.field_78031_c:Lnet/minecraft/creativetab/CreativeTabs;\n        54: invokevirtual #70                 // Method func_149647_a:(Lnet/minecraft/creativetab/CreativeTabs;)Lnet/minecraft/block/Block;\n        57: pop\n        58: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        61: lload_3\n        62: lsub\n        63: lstore_1\n        64: ldc_w         #491                // String protected void net.minecraft.block.BlockSapling#\n        67: lload_1\n        68: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        71: return\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n            0      72     0  this   Lnet/minecraft/block/BlockSapling;\n      LineNumberTable:\n        line 38: 0\n        line 39: 16\n        line 40: 50\n        line 41: 58\npublic net.minecraft.util.math.AxisAlignedBB func_185496_a(net.minecraft.block.state.IBlockState, net.minecraft.world.IBlockAccess, net.minecraft.util.math.BlockPos);\n    descriptor: (Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/AxisAlignedBB;\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=8, args_size=4\n         0: lconst_0\n         1: lstore        4\n         3: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         6: lstore        6\n         8: ldc_w         #507                // String public net.minecraft.util.math.AxisAlignedBB net.minecraft.block.BlockSapling#func_185496_a(net.minecraft.block.state.IBlockState, net.minecraft.world.IBlockAccess, net.minecraft.util.math.BlockPos)\n        11: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        14: getstatic     #76                 // Field field_185520_d:Lnet/minecraft/util/math/AxisAlignedBB;\n        17: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        20: lload         6\n        22: lsub\n        23: lstore        4\n        25: ldc_w         #507                // String public net.minecraft.util.math.AxisAlignedBB net.minecraft.block.BlockSapling#func_185496_a(net.minecraft.block.state.IBlockState, net.minecraft.world.IBlockAccess, net.minecraft.util.math.BlockPos)\n        28: lload         4\n        30: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        33: areturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           14      20     0  this   Lnet/minecraft/block/BlockSapling;\n           14      20     1 state   Lnet/minecraft/block/state/IBlockState;\n           14      20     2 source   Lnet/minecraft/world/IBlockAccess;\n           14      20     3   pos   Lnet/minecraft/util/math/BlockPos;\n      LineNumberTable:\n        line 45: 14\npublic java.lang.String func_149732_F();\n    descriptor: ()Ljava/lang/String;\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=5, args_size=1\n         0: lconst_0\n         1: lstore_1\n         2: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         5: lstore_3\n         6: ldc_w         #509                // String public java.lang.String net.minecraft.block.BlockSapling#func_149732_F\n         9: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        12: new           #86                 // class java/lang/StringBuilder\n        15: dup\n        16: invokespecial #87                 // Method java/lang/StringBuilder.\"\":()V\n        19: aload_0\n        20: invokevirtual #90                 // Method func_149739_a:()Ljava/lang/String;\n        23: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        26: ldc           #96                 // String .\n        28: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        31: getstatic     #42                 // Field net/minecraft/block/BlockPlanks$EnumType.OAK:Lnet/minecraft/block/BlockPlanks$EnumType;\n        34: invokevirtual #99                 // Method net/minecraft/block/BlockPlanks$EnumType.func_176840_c:()Ljava/lang/String;\n        37: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        40: ldc           #101                // String .name\n        42: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        45: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        48: invokestatic  #110                // Method net/minecraft/util/text/translation/I18n.func_74838_a:(Ljava/lang/String;)Ljava/lang/String;\n        51: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        54: lload_3\n        55: lsub\n        56: lstore_1\n        57: ldc_w         #509                // String public java.lang.String net.minecraft.block.BlockSapling#func_149732_F\n        60: lload_1\n        61: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        64: areturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           12      53     0  this   Lnet/minecraft/block/BlockSapling;\n      LineNumberTable:\n        line 50: 12\npublic void func_180650_b(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random);\n    descriptor: (Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=9, args_size=5\n         0: lconst_0\n         1: lstore        5\n         3: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         6: lstore        7\n         8: ldc_w         #511                // String public void net.minecraft.block.BlockSapling#func_180650_b(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n        11: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        14: aload_1\n        15: getfield      #118                // Field net/minecraft/world/World.field_72995_K:Z\n        18: ifne          62\n        21: aload_0\n        22: aload_1\n        23: aload_2\n        24: aload_3\n        25: aload         4\n        27: invokespecial #120                // Method net/minecraft/block/BlockBush.func_180650_b:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n        30: aload_1\n        31: aload_2\n        32: invokevirtual #126                // Method net/minecraft/util/math/BlockPos.func_177984_a:()Lnet/minecraft/util/math/BlockPos;\n        35: invokevirtual #130                // Method net/minecraft/world/World.func_175671_l:(Lnet/minecraft/util/math/BlockPos;)I\n        38: bipush        9\n        40: if_icmplt     62\n        43: aload         4\n        45: bipush        7\n        47: invokevirtual #136                // Method java/util/Random.nextInt:(I)I\n        50: ifne          62\n        53: aload_0\n        54: aload_1\n        55: aload_2\n        56: aload_3\n        57: aload         4\n        59: invokevirtual #139                // Method func_176478_d:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n        62: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        65: lload         7\n        67: lsub\n        68: lstore        5\n        70: ldc_w         #511                // String public void net.minecraft.block.BlockSapling#func_180650_b(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n        73: lload         5\n        75: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        78: return\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           14      65     0  this   Lnet/minecraft/block/BlockSapling;\n           14      65     1 worldIn   Lnet/minecraft/world/World;\n           14      65     2   pos   Lnet/minecraft/util/math/BlockPos;\n           14      65     3 state   Lnet/minecraft/block/state/IBlockState;\n           14      65     4  rand   Ljava/util/Random;\n      LineNumberTable:\n        line 55: 14\n        line 57: 21\n        line 59: 30\n        line 61: 53\n        line 64: 62\n      StackMapTable: number_of_entries = 1\n        frame_type = 253 / append /\n          offset_delta = 62\n          locals = [ long, long ]\npublic void func_176478_d(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random);\n    descriptor: (Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=9, args_size=5\n         0: lconst_0\n         1: lstore        5\n         3: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         6: lstore        7\n         8: ldc_w         #513                // String public void net.minecraft.block.BlockSapling#func_176478_d(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n        11: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        14: aload_3\n        15: getstatic     #50                 // Field field_176479_b:Lnet/minecraft/block/properties/PropertyInteger;\n        18: invokeinterface #147,  2          // InterfaceMethod net/minecraft/block/state/IBlockState.func_177229_b:(Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;\n        23: checkcast     #52                 // class java/lang/Integer\n        26: invokevirtual #151                // Method java/lang/Integer.intValue:()I\n        29: ifne          51\n        32: aload_1\n        33: aload_2\n        34: aload_3\n        35: getstatic     #50                 // Field field_176479_b:Lnet/minecraft/block/properties/PropertyInteger;\n        38: invokeinterface #155,  2          // InterfaceMethod net/minecraft/block/state/IBlockState.func_177231_a:(Lnet/minecraft/block/properties/IProperty;)Lnet/minecraft/block/state/IBlockState;\n        43: iconst_4\n        44: invokevirtual #159                // Method net/minecraft/world/World.func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n        47: pop\n        48: goto          60\n        51: aload_0\n        52: aload_1\n        53: aload_2\n        54: aload_3\n        55: aload         4\n        57: invokevirtual #162                // Method func_176476_e:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n        60: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        63: lload         7\n        65: lsub\n        66: lstore        5\n        68: ldc_w         #513                // String public void net.minecraft.block.BlockSapling#func_176478_d(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n        71: lload         5\n        73: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        76: return\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           14      63     0  this   Lnet/minecraft/block/BlockSapling;\n           14      63     1 worldIn   Lnet/minecraft/world/World;\n           14      63     2   pos   Lnet/minecraft/util/math/BlockPos;\n           14      63     3 state   Lnet/minecraft/block/state/IBlockState;\n           14      63     4  rand   Ljava/util/Random;\n      LineNumberTable:\n        line 68: 14\n        line 70: 32\n        line 74: 51\n        line 76: 60\n      StackMapTable: number_of_entries = 2\n        frame_type = 253 / append /\n          offset_delta = 51\n          locals = [ long, long ]\n        frame_type = 8 / same /\npublic void func_176476_e(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random);\n    descriptor: (Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n    flags: ACC_PUBLIC\n    Code:\n      stack=7, locals=15, args_size=5\n         0: lconst_0\n         1: lstore        5\n         3: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         6: lstore        7\n         8: ldc_w         #515                // String public void net.minecraft.block.BlockSapling#func_176476_e(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n        11: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        14: aload_1\n        15: aload         4\n        17: aload_2\n        18: invokestatic  #168                // Method net/minecraftforge/event/terraingen/TerrainGen.saplingGrowTree:(Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/math/BlockPos;)Z\n        21: ifne          41\n        24: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        27: lload         7\n        29: lsub\n        30: lstore        5\n        32: ldc_w         #515                // String public void net.minecraft.block.BlockSapling#func_176476_e(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n        35: lload         5\n        37: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        40: return\n        41: aload         4\n        43: bipush        10\n        45: invokevirtual #136                // Method java/util/Random.nextInt:(I)I\n        48: ifne          62\n        51: new           #170                // class net/minecraft/world/gen/feature/WorldGenBigTree\n        54: dup\n        55: iconst_1\n        56: invokespecial #173                // Method net/minecraft/world/gen/feature/WorldGenBigTree.\"\":(Z)V\n        59: goto          70\n        62: new           #175                // class net/minecraft/world/gen/feature/WorldGenTrees\n        65: dup\n        66: iconst_1\n        67: invokespecial #176                // Method net/minecraft/world/gen/feature/WorldGenTrees.\"\":(Z)V\n        70: astore        9\n        72: iconst_0\n        73: istore        10\n        75: iconst_0\n        76: istore        11\n        78: iconst_0\n        79: istore        12\n        81: getstatic     #180                // Field net/minecraft/block/BlockSapling$1.$SwitchMap$net$minecraft$block$BlockPlanks$EnumType:[I\n        84: aload_3\n        85: getstatic     #38                 // Field field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n        88: invokeinterface #147,  2          // InterfaceMethod net/minecraft/block/state/IBlockState.func_177229_b:(Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;\n        93: checkcast     #12                 // class net/minecraft/block/BlockPlanks$EnumType\n        96: invokevirtual #183                // Method net/minecraft/block/BlockPlanks$EnumType.ordinal:()I\n        99: iaload\n       100: tableswitch   { // 1 to 6\n                   1: 140\n\n                   2: 231\n\n                   3: 245\n\n                   4: 403\n\n                   5: 416\n\n                   6: 500\n             default: 500\n        }\n   140: iconst_0\n   141: istore        10\n   143: iload         10\n   145: iconst_m1\n   146: if_icmplt     207\n   149: iconst_0\n   150: istore        11\n   152: iload         11\n   154: iconst_m1\n   155: if_icmplt     201\n   158: aload_0\n   159: aload_1\n   160: aload_2\n   161: iload         10\n   163: iload         11\n   165: getstatic     #186                // Field net/minecraft/block/BlockPlanks$EnumType.SPRUCE:Lnet/minecraft/block/BlockPlanks$EnumType;\n   168: invokespecial #190                // Method func_181624_a:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;IILnet/minecraft/block/BlockPlanks$EnumType;)Z\n   171: ifeq          195\n   174: new           #192                // class net/minecraft/world/gen/feature/WorldGenMegaPineTree\n   177: dup\n   178: iconst_0\n   179: aload         4\n   181: invokevirtual #196                // Method java/util/Random.nextBoolean:()Z\n   184: invokespecial #199                // Method net/minecraft/world/gen/feature/WorldGenMegaPineTree.\"<init>\":(ZZ)V\n   187: astore        9\n   189: iconst_1\n   190: istore        12\n   192: goto          207\n   195: iinc          11, -1\n   198: goto          152\n   201: iinc          10, -1\n   204: goto          143\n   207: iload         12\n   209: ifne          500\n   212: iconst_0\n   213: istore        10\n   215: iconst_0\n   216: istore        11\n   218: new           #201                // class net/minecraft/world/gen/feature/WorldGenTaiga2\n   221: dup\n   222: iconst_1\n   223: invokespecial #202                // Method net/minecraft/world/gen/feature/WorldGenTaiga2.\"<init>\":(Z)V\n   226: astore        9\n   228: goto          500\n   231: new           #204                // class net/minecraft/world/gen/feature/WorldGenBirchTree\n   234: dup\n   235: iconst_1\n   236: iconst_0\n   237: invokespecial #205                // Method net/minecraft/world/gen/feature/WorldGenBirchTree.\"<init>\":(ZZ)V\n   240: astore        9\n   242: goto          500\n   245: getstatic     #211                // Field net/minecraft/init/Blocks.field_150364_r:Lnet/minecraft/block/Block;\n   248: invokevirtual #216                // Method net/minecraft/block/Block.func_176223_P:()Lnet/minecraft/block/state/IBlockState;\n   251: getstatic     #221                // Field net/minecraft/block/BlockOldLog.field_176301_b:Lnet/minecraft/block/properties/PropertyEnum;\n   254: getstatic     #224                // Field net/minecraft/block/BlockPlanks$EnumType.JUNGLE:Lnet/minecraft/block/BlockPlanks$EnumType;\n   257: invokeinterface #48,  3           // InterfaceMethod net/minecraft/block/state/IBlockState.func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n   262: astore        13\n   264: getstatic     #228                // Field net/minecraft/init/Blocks.field_150362_t:Lnet/minecraft/block/BlockLeaves;\n   267: invokevirtual #231                // Method net/minecraft/block/BlockLeaves.func_176223_P:()Lnet/minecraft/block/state/IBlockState;\n   270: getstatic     #236                // Field net/minecraft/block/BlockOldLeaf.field_176239_P:Lnet/minecraft/block/properties/PropertyEnum;\n   273: getstatic     #224                // Field net/minecraft/block/BlockPlanks$EnumType.JUNGLE:Lnet/minecraft/block/BlockPlanks$EnumType;\n   276: invokeinterface #48,  3           // InterfaceMethod net/minecraft/block/state/IBlockState.func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n   281: getstatic     #240                // Field net/minecraft/block/BlockLeaves.field_176236_b:Lnet/minecraft/block/properties/PropertyBool;\n   284: iconst_0\n   285: invokestatic  #245                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n   288: invokeinterface #48,  3           // InterfaceMethod net/minecraft/block/state/IBlockState.func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n   293: astore        14\n   295: iconst_0\n   296: istore        10\n   298: iload         10\n   300: iconst_m1\n   301: if_icmplt     365\n   304: iconst_0\n   305: istore        11\n   307: iload         11\n   309: iconst_m1\n   310: if_icmplt     359\n   313: aload_0\n   314: aload_1\n   315: aload_2\n   316: iload         10\n   318: iload         11\n   320: getstatic     #224                // Field net/minecraft/block/BlockPlanks$EnumType.JUNGLE:Lnet/minecraft/block/BlockPlanks$EnumType;\n   323: invokespecial #190                // Method func_181624_a:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;IILnet/minecraft/block/BlockPlanks$EnumType;)Z\n   326: ifeq          353\n   329: new           #247                // class net/minecraft/world/gen/feature/WorldGenMegaJungle\n   332: dup\n   333: iconst_1\n   334: bipush        10\n   336: bipush        20\n   338: aload         13\n   340: aload         14\n   342: invokespecial #250                // Method net/minecraft/world/gen/feature/WorldGenMegaJungle.\"<init>\":(ZIILnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;)V\n   345: astore        9\n   347: iconst_1\n   348: istore        12\n   350: goto          365\n   353: iinc          11, -1\n   356: goto          307\n   359: iinc          10, -1\n   362: goto          298\n   365: iload         12\n   367: ifne          500\n   370: iconst_0\n   371: istore        10\n   373: iconst_0\n   374: istore        11\n   376: new           #175                // class net/minecraft/world/gen/feature/WorldGenTrees\n   379: dup\n   380: iconst_1\n   381: iconst_4\n   382: aload         4\n   384: bipush        7\n   386: invokevirtual #136                // Method java/util/Random.nextInt:(I)I\n   389: iadd\n   390: aload         13\n   392: aload         14\n   394: iconst_0\n   395: invokespecial #253                // Method net/minecraft/world/gen/feature/WorldGenTrees.\"<init>\":(ZILnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;Z)V\n   398: astore        9\n   400: goto          500\n   403: new           #255                // class net/minecraft/world/gen/feature/WorldGenSavannaTree\n   406: dup\n   407: iconst_1\n   408: invokespecial #256                // Method net/minecraft/world/gen/feature/WorldGenSavannaTree.\"<init>\":(Z)V\n   411: astore        9\n   413: goto          500\n   416: iconst_0\n   417: istore        10\n   419: iload         10\n   421: iconst_m1\n   422: if_icmplt     478\n   425: iconst_0\n   426: istore        11\n   428: iload         11\n   430: iconst_m1\n   431: if_icmplt     472\n   434: aload_0\n   435: aload_1\n   436: aload_2\n   437: iload         10\n   439: iload         11\n   441: getstatic     #259                // Field net/minecraft/block/BlockPlanks$EnumType.DARK_OAK:Lnet/minecraft/block/BlockPlanks$EnumType;\n   444: invokespecial #190                // Method func_181624_a:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;IILnet/minecraft/block/BlockPlanks$EnumType;)Z\n   447: ifeq          466\n   450: new           #261                // class net/minecraft/world/gen/feature/WorldGenCanopyTree\n   453: dup\n   454: iconst_1\n   455: invokespecial #262                // Method net/minecraft/world/gen/feature/WorldGenCanopyTree.\"<init>\":(Z)V\n   458: astore        9\n   460: iconst_1\n   461: istore        12\n   463: goto          478\n   466: iinc          11, -1\n   469: goto          428\n   472: iinc          10, -1\n   475: goto          419\n   478: iload         12\n   480: ifne          500\n   483: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n   486: lload         7\n   488: lsub\n   489: lstore        5\n   491: ldc_w         #515                // String public void net.minecraft.block.BlockSapling#func_176476_e(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n   494: lload         5\n   496: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n   499: return\n   500: getstatic     #265                // Field net/minecraft/init/Blocks.field_150350_a:Lnet/minecraft/block/Block;\n   503: invokevirtual #216                // Method net/minecraft/block/Block.func_176223_P:()Lnet/minecraft/block/state/IBlockState;\n   506: astore        13\n   508: iload         12\n   510: ifeq          592\n   513: aload_1\n   514: aload_2\n   515: iload         10\n   517: iconst_0\n   518: iload         11\n   520: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n   523: aload         13\n   525: iconst_4\n   526: invokevirtual #159                // Method net/minecraft/world/World.func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n   529: pop\n   530: aload_1\n   531: aload_2\n   532: iload         10\n   534: iconst_1\n   535: iadd\n   536: iconst_0\n   537: iload         11\n   539: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n   542: aload         13\n   544: iconst_4\n   545: invokevirtual #159                // Method net/minecraft/world/World.func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n   548: pop\n   549: aload_1\n   550: aload_2\n   551: iload         10\n   553: iconst_0\n   554: iload         11\n   556: iconst_1\n   557: iadd\n   558: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n   561: aload         13\n   563: iconst_4\n   564: invokevirtual #159                // Method net/minecraft/world/World.func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n   567: pop\n   568: aload_1\n   569: aload_2\n   570: iload         10\n   572: iconst_1\n   573: iadd\n   574: iconst_0\n   575: iload         11\n   577: iconst_1\n   578: iadd\n   579: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n   582: aload         13\n   584: iconst_4\n   585: invokevirtual #159                // Method net/minecraft/world/World.func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n   588: pop\n   589: goto          601\n   592: aload_1\n   593: aload_2\n   594: aload         13\n   596: iconst_4\n   597: invokevirtual #159                // Method net/minecraft/world/World.func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n   600: pop\n   601: aload         9\n   603: aload_1\n   604: aload         4\n   606: aload_2\n   607: iload         10\n   609: iconst_0\n   610: iload         11\n   612: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n   615: invokevirtual #274                // Method net/minecraft/world/gen/feature/WorldGenerator.func_180709_b:(Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/math/BlockPos;)Z\n   618: ifne          709\n   621: iload         12\n   623: ifeq          701\n   626: aload_1\n   627: aload_2\n   628: iload         10\n   630: iconst_0\n   631: iload         11\n   633: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n   636: aload_3\n   637: iconst_4\n   638: invokevirtual #159                // Method net/minecraft/world/World.func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n   641: pop\n   642: aload_1\n   643: aload_2\n   644: iload         10\n   646: iconst_1\n   647: iadd\n   648: iconst_0\n   649: iload         11\n   651: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n   654: aload_3\n   655: iconst_4\n   656: invokevirtual #159                // Method net/minecraft/world/World.func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n   659: pop\n   660: aload_1\n   661: aload_2\n   662: iload         10\n   664: iconst_0\n   665: iload         11\n   667: iconst_1\n   668: iadd\n   669: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n   672: aload_3\n   673: iconst_4\n   674: invokevirtual #159                // Method net/minecraft/world/World.func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n   677: pop\n   678: aload_1\n   679: aload_2\n   680: iload         10\n   682: iconst_1\n   683: iadd\n   684: iconst_0\n   685: iload         11\n   687: iconst_1\n   688: iadd\n   689: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n   692: aload_3\n   693: iconst_4\n   694: invokevirtual #159                // Method net/minecraft/world/World.func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n   697: pop\n   698: goto          709\n   701: aload_1\n   702: aload_2\n   703: aload_3\n   704: iconst_4\n   705: invokevirtual #159                // Method net/minecraft/world/World.func_180501_a:(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z\n   708: pop\n   709: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n   712: lload         7\n   714: lsub\n   715: lstore        5\n   717: ldc_w         #515                // String public void net.minecraft.block.BlockSapling#func_176476_e(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, java.util.Random)\n   720: lload         5\n   722: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n   725: return\n  LocalVariableTable:\n    Start  Length  Slot  Name   Signature\n      264     139    13 iblockstate   Lnet/minecraft/block/state/IBlockState;\n      295     108    14 iblockstate1   Lnet/minecraft/block/state/IBlockState;\n       14     712     0  this   Lnet/minecraft/block/BlockSapling;\n       14     712     1 worldIn   Lnet/minecraft/world/World;\n       14     712     2   pos   Lnet/minecraft/util/math/BlockPos;\n       14     712     3 state   Lnet/minecraft/block/state/IBlockState;\n       14     712     4  rand   Ljava/util/Random;\n       72     654     9 worldgenerator   Lnet/minecraft/world/gen/feature/WorldGenerator;\n       75     651    10     i   I\n       78     648    11     j   I\n       81     645    12  flag   Z\n      508     218    13 iblockstate2   Lnet/minecraft/block/state/IBlockState;\n  LineNumberTable:\n    line 80: 14\n    line 81: 41\n    line 82: 72\n    line 83: 75\n    line 84: 78\n    line 86: 81\n    line 91: 140\n    line 93: 149\n    line 95: 158\n    line 97: 174\n    line 98: 189\n    line 99: 192\n    line 93: 195\n    line 91: 201\n    line 104: 207\n    line 106: 212\n    line 107: 215\n    line 108: 218\n    line 113: 231\n    line 114: 242\n    line 116: 245\n    line 117: 264\n    line 120: 295\n    line 122: 304\n    line 124: 313\n    line 126: 329\n    line 127: 347\n    line 128: 350\n    line 122: 353\n    line 120: 359\n    line 133: 365\n    line 135: 370\n    line 136: 373\n    line 137: 376\n    line 142: 403\n    line 143: 413\n    line 147: 416\n    line 149: 425\n    line 151: 434\n    line 153: 450\n    line 154: 460\n    line 155: 463\n    line 149: 466\n    line 147: 472\n    line 160: 478\n    line 162: 483\n    line 168: 500\n    line 170: 508\n    line 172: 513\n    line 173: 530\n    line 174: 549\n    line 175: 568\n    line 179: 592\n    line 182: 601\n    line 184: 621\n    line 186: 626\n    line 187: 642\n    line 188: 660\n    line 189: 678\n    line 193: 701\n    line 196: 709\n  StackMapTable: number_of_entries = 28\n    frame_type = 253 /* append */\n      offset_delta = 41\n      locals = [ long, long ]\n    frame_type = 20 /* same */\n    frame_type = 71 /* same_locals_1_stack_item */\n      stack = [ class java/lang/Object ]\n    frame_type = 255 /* full_frame */\n      offset_delta = 69\n      locals = [ class net/minecraft/block/BlockSapling, class net/minecraft/world/World, class net/minecraft/util/math/BlockPos, class net/minecraft/block/state/IBlockState, class java/util/Random, long, long, class java/lang/Object, int, int, int ]\n      stack = []\n    frame_type = 2 /* same */\n    frame_type = 8 /* same */\n    frame_type = 42 /* same */\n    frame_type = 5 /* same */\n    frame_type = 5 /* same */\n    frame_type = 23 /* same */\n    frame_type = 13 /* same */\n    frame_type = 253 /* append */\n      offset_delta = 52\n      locals = [ class net/minecraft/block/state/IBlockState, class net/minecraft/block/state/IBlockState ]\n    frame_type = 8 /* same */\n    frame_type = 45 /* same */\n    frame_type = 5 /* same */\n    frame_type = 5 /* same */\n    frame_type = 249 /* chop */\n      offset_delta = 37\n    frame_type = 12 /* same */\n    frame_type = 2 /* same */\n    frame_type = 8 /* same */\n    frame_type = 37 /* same */\n    frame_type = 5 /* same */\n    frame_type = 5 /* same */\n    frame_type = 21 /* same */\n    frame_type = 252 /* append */\n      offset_delta = 91\n      locals = [ class net/minecraft/block/state/IBlockState ]\n    frame_type = 8 /* same */\n    frame_type = 251 /* same_frame_extended */\n      offset_delta = 99\n    frame_type = 7 /* same */\n\nprivate boolean func_181624_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, int, int, net.minecraft.block.BlockPlanks$EnumType);\n    descriptor: (Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;IILnet/minecraft/block/BlockPlanks$EnumType;)Z\n    flags: ACC_PRIVATE\n    Code:\n      stack=7, locals=10, args_size=6\n         0: lconst_0\n         1: lstore        6\n         3: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         6: lstore        8\n         8: ldc_w         #517                // String private boolean net.minecraft.block.BlockSapling#func_181624_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, int, int, net.minecraft.block.BlockPlanks$EnumType)\n        11: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        14: aload_0\n        15: aload_1\n        16: aload_2\n        17: iload_3\n        18: iconst_0\n        19: iload         4\n        21: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n        24: aload         5\n        26: invokevirtual #289                // Method func_176477_a:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/BlockPlanks$EnumType;)Z\n        29: ifeq          98\n        32: aload_0\n        33: aload_1\n        34: aload_2\n        35: iload_3\n        36: iconst_1\n        37: iadd\n        38: iconst_0\n        39: iload         4\n        41: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n        44: aload         5\n        46: invokevirtual #289                // Method func_176477_a:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/BlockPlanks$EnumType;)Z\n        49: ifeq          98\n        52: aload_0\n        53: aload_1\n        54: aload_2\n        55: iload_3\n        56: iconst_0\n        57: iload         4\n        59: iconst_1\n        60: iadd\n        61: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n        64: aload         5\n        66: invokevirtual #289                // Method func_176477_a:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/BlockPlanks$EnumType;)Z\n        69: ifeq          98\n        72: aload_0\n        73: aload_1\n        74: aload_2\n        75: iload_3\n        76: iconst_1\n        77: iadd\n        78: iconst_0\n        79: iload         4\n        81: iconst_1\n        82: iadd\n        83: invokevirtual #269                // Method net/minecraft/util/math/BlockPos.func_177982_a:(III)Lnet/minecraft/util/math/BlockPos;\n        86: aload         5\n        88: invokevirtual #289                // Method func_176477_a:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/BlockPlanks$EnumType;)Z\n        91: ifeq          98\n        94: iconst_1\n        95: goto          99\n        98: iconst_0\n        99: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n       102: lload         8\n       104: lsub\n       105: lstore        6\n       107: ldc_w         #517                // String private boolean net.minecraft.block.BlockSapling#func_181624_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, int, int, net.minecraft.block.BlockPlanks$EnumType)\n       110: lload         6\n       112: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n       115: ireturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           14     102     0  this   Lnet/minecraft/block/BlockSapling;\n           14     102     1 worldIn   Lnet/minecraft/world/World;\n           14     102     2   pos   Lnet/minecraft/util/math/BlockPos;\n           14     102     3 p_181624_3_   I\n           14     102     4 p_181624_4_   I\n           14     102     5  type   Lnet/minecraft/block/BlockPlanks$EnumType;\n      LineNumberTable:\n        line 200: 14\n      StackMapTable: number_of_entries = 2\n        frame_type = 253 / append /\n          offset_delta = 98\n          locals = [ long, long ]\n        frame_type = 64 / same_locals_1_stack_item /\n          stack = [ int ]\npublic boolean func_176477_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.BlockPlanks$EnumType);\n    descriptor: (Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/BlockPlanks$EnumType;)Z\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=9, args_size=4\n         0: lconst_0\n         1: lstore        4\n         3: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         6: lstore        6\n         8: ldc_w         #519                // String public boolean net.minecraft.block.BlockSapling#func_176477_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.BlockPlanks$EnumType)\n        11: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        14: aload_1\n        15: aload_2\n        16: invokevirtual #296                // Method net/minecraft/world/World.func_180495_p:(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;\n        19: astore        8\n        21: aload         8\n        23: invokeinterface #300,  1          // InterfaceMethod net/minecraft/block/state/IBlockState.func_177230_c:()Lnet/minecraft/block/Block;\n        28: aload_0\n        29: if_acmpne     50\n        32: aload         8\n        34: getstatic     #38                 // Field field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n        37: invokeinterface #147,  2          // InterfaceMethod net/minecraft/block/state/IBlockState.func_177229_b:(Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;\n        42: aload_3\n        43: if_acmpne     50\n        46: iconst_1\n        47: goto          51\n        50: iconst_0\n        51: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        54: lload         6\n        56: lsub\n        57: lstore        4\n        59: ldc_w         #519                // String public boolean net.minecraft.block.BlockSapling#func_176477_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.BlockPlanks$EnumType)\n        62: lload         4\n        64: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        67: ireturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           14      54     0  this   Lnet/minecraft/block/BlockSapling;\n           14      54     1 worldIn   Lnet/minecraft/world/World;\n           14      54     2   pos   Lnet/minecraft/util/math/BlockPos;\n           14      54     3  type   Lnet/minecraft/block/BlockPlanks$EnumType;\n           21      47     8 iblockstate   Lnet/minecraft/block/state/IBlockState;\n      LineNumberTable:\n        line 205: 14\n        line 206: 21\n      StackMapTable: number_of_entries = 2\n        frame_type = 254 / append /\n          offset_delta = 50\n          locals = [ long, long, class net/minecraft/block/state/IBlockState ]\n        frame_type = 64 / same_locals_1_stack_item /\n          stack = [ int ]\npublic int func_180651_a(net.minecraft.block.state.IBlockState);\n    descriptor: (Lnet/minecraft/block/state/IBlockState;)I\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=6, args_size=2\n         0: lconst_0\n         1: lstore_2\n         2: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         5: lstore        4\n         7: ldc_w         #521                // String public int net.minecraft.block.BlockSapling#func_180651_a(net.minecraft.block.state.IBlockState)\n        10: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        13: aload_1\n        14: getstatic     #38                 // Field field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n        17: invokeinterface #147,  2          // InterfaceMethod net/minecraft/block/state/IBlockState.func_177229_b:(Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;\n        22: checkcast     #12                 // class net/minecraft/block/BlockPlanks$EnumType\n        25: invokevirtual #305                // Method net/minecraft/block/BlockPlanks$EnumType.func_176839_a:()I\n        28: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        31: lload         4\n        33: lsub\n        34: lstore_2\n        35: ldc_w         #521                // String public int net.minecraft.block.BlockSapling#func_180651_a(net.minecraft.block.state.IBlockState)\n        38: lload_2\n        39: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        42: ireturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           13      30     0  this   Lnet/minecraft/block/BlockSapling;\n           13      30     1 state   Lnet/minecraft/block/state/IBlockState;\n      LineNumberTable:\n        line 211: 13\npublic boolean func_176473_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, boolean);\n    descriptor: (Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Z)Z\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=9, args_size=5\n         0: lconst_0\n         1: lstore        5\n         3: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         6: lstore        7\n         8: ldc_w         #523                // String public boolean net.minecraft.block.BlockSapling#func_176473_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, boolean)\n        11: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        14: iconst_1\n        15: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        18: lload         7\n        20: lsub\n        21: lstore        5\n        23: ldc_w         #523                // String public boolean net.minecraft.block.BlockSapling#func_176473_a(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState, boolean)\n        26: lload         5\n        28: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        31: ireturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           14      18     0  this   Lnet/minecraft/block/BlockSapling;\n           14      18     1 worldIn   Lnet/minecraft/world/World;\n           14      18     2   pos   Lnet/minecraft/util/math/BlockPos;\n           14      18     3 state   Lnet/minecraft/block/state/IBlockState;\n           14      18     4 isClient   Z\n      LineNumberTable:\n        line 225: 14\npublic boolean func_180670_a(net.minecraft.world.World, java.util.Random, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState);\n    descriptor: (Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;)Z\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=9, args_size=5\n         0: lconst_0\n         1: lstore        5\n         3: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         6: lstore        7\n         8: ldc_w         #525                // String public boolean net.minecraft.block.BlockSapling#func_180670_a(net.minecraft.world.World, java.util.Random, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState)\n        11: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        14: aload_1\n        15: getfield      #313                // Field net/minecraft/world/World.field_73012_v:Ljava/util/Random;\n        18: invokevirtual #317                // Method java/util/Random.nextFloat:()F\n        21: f2d\n        22: ldc2_w        #318                // double 0.45d\n        25: dcmpg\n        26: ifge          33\n        29: iconst_1\n        30: goto          34\n        33: iconst_0\n        34: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        37: lload         7\n        39: lsub\n        40: lstore        5\n        42: ldc_w         #525                // String public boolean net.minecraft.block.BlockSapling#func_180670_a(net.minecraft.world.World, java.util.Random, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState)\n        45: lload         5\n        47: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        50: ireturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           14      37     0  this   Lnet/minecraft/block/BlockSapling;\n           14      37     1 worldIn   Lnet/minecraft/world/World;\n           14      37     2  rand   Ljava/util/Random;\n           14      37     3   pos   Lnet/minecraft/util/math/BlockPos;\n           14      37     4 state   Lnet/minecraft/block/state/IBlockState;\n      LineNumberTable:\n        line 230: 14\n      StackMapTable: number_of_entries = 2\n        frame_type = 253 / append /\n          offset_delta = 33\n          locals = [ long, long ]\n        frame_type = 64 / same_locals_1_stack_item /\n          stack = [ int ]\npublic void func_176474_b(net.minecraft.world.World, java.util.Random, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState);\n    descriptor: (Lnet/minecraft/world/World;Ljava/util/Random;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;)V\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=9, args_size=5\n         0: lconst_0\n         1: lstore        5\n         3: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         6: lstore        7\n         8: ldc_w         #527                // String public void net.minecraft.block.BlockSapling#func_176474_b(net.minecraft.world.World, java.util.Random, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState)\n        11: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        14: aload_0\n        15: aload_1\n        16: aload_3\n        17: aload         4\n        19: aload_2\n        20: invokevirtual #139                // Method func_176478_d:(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V\n        23: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        26: lload         7\n        28: lsub\n        29: lstore        5\n        31: ldc_w         #527                // String public void net.minecraft.block.BlockSapling#func_176474_b(net.minecraft.world.World, java.util.Random, net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState)\n        34: lload         5\n        36: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        39: return\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           14      26     0  this   Lnet/minecraft/block/BlockSapling;\n           14      26     1 worldIn   Lnet/minecraft/world/World;\n           14      26     2  rand   Ljava/util/Random;\n           14      26     3   pos   Lnet/minecraft/util/math/BlockPos;\n           14      26     4 state   Lnet/minecraft/block/state/IBlockState;\n      LineNumberTable:\n        line 235: 14\n        line 236: 23\npublic net.minecraft.block.state.IBlockState func_176203_a(int);\n    descriptor: (I)Lnet/minecraft/block/state/IBlockState;\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=6, args_size=2\n         0: lconst_0\n         1: lstore_2\n         2: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         5: lstore        4\n         7: ldc_w         #529                // String public net.minecraft.block.state.IBlockState net.minecraft.block.BlockSapling#func_176203_a(int)\n        10: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        13: aload_0\n        14: invokevirtual #324                // Method func_176223_P:()Lnet/minecraft/block/state/IBlockState;\n        17: getstatic     #38                 // Field field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n        20: iload_1\n        21: bipush        7\n        23: iand\n        24: invokestatic  #328                // Method net/minecraft/block/BlockPlanks$EnumType.func_176837_a:(I)Lnet/minecraft/block/BlockPlanks$EnumType;\n        27: invokeinterface #48,  3           // InterfaceMethod net/minecraft/block/state/IBlockState.func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n        32: getstatic     #50                 // Field field_176479_b:Lnet/minecraft/block/properties/PropertyInteger;\n        35: iload_1\n        36: bipush        8\n        38: iand\n        39: iconst_3\n        40: ishr\n        41: invokestatic  #56                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n        44: invokeinterface #48,  3           // InterfaceMethod net/minecraft/block/state/IBlockState.func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n        49: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        52: lload         4\n        54: lsub\n        55: lstore_2\n        56: ldc_w         #529                // String public net.minecraft.block.state.IBlockState net.minecraft.block.BlockSapling#func_176203_a(int)\n        59: lload_2\n        60: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        63: areturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           13      51     0  this   Lnet/minecraft/block/BlockSapling;\n           13      51     1  meta   I\n      LineNumberTable:\n        line 240: 13\npublic int func_176201_c(net.minecraft.block.state.IBlockState);\n    descriptor: (Lnet/minecraft/block/state/IBlockState;)I\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=7, args_size=2\n         0: lconst_0\n         1: lstore_2\n         2: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         5: lstore        4\n         7: ldc_w         #531                // String public int net.minecraft.block.BlockSapling#func_176201_c(net.minecraft.block.state.IBlockState)\n        10: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        13: iconst_0\n        14: istore        6\n        16: iload         6\n        18: aload_1\n        19: getstatic     #38                 // Field field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n        22: invokeinterface #147,  2          // InterfaceMethod net/minecraft/block/state/IBlockState.func_177229_b:(Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;\n        27: checkcast     #12                 // class net/minecraft/block/BlockPlanks$EnumType\n        30: invokevirtual #305                // Method net/minecraft/block/BlockPlanks$EnumType.func_176839_a:()I\n        33: ior\n        34: istore        6\n        36: iload         6\n        38: aload_1\n        39: getstatic     #50                 // Field field_176479_b:Lnet/minecraft/block/properties/PropertyInteger;\n        42: invokeinterface #147,  2          // InterfaceMethod net/minecraft/block/state/IBlockState.func_177229_b:(Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;\n        47: checkcast     #52                 // class java/lang/Integer\n        50: invokevirtual #151                // Method java/lang/Integer.intValue:()I\n        53: iconst_3\n        54: ishl\n        55: ior\n        56: istore        6\n        58: iload         6\n        60: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        63: lload         4\n        65: lsub\n        66: lstore_2\n        67: ldc_w         #531                // String public int net.minecraft.block.BlockSapling#func_176201_c(net.minecraft.block.state.IBlockState)\n        70: lload_2\n        71: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        74: ireturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           13      62     0  this   Lnet/minecraft/block/BlockSapling;\n           13      62     1 state   Lnet/minecraft/block/state/IBlockState;\n           16      59     6     i   I\n      LineNumberTable:\n        line 245: 13\n        line 246: 16\n        line 247: 36\n        line 248: 58\nprotected net.minecraft.block.state.BlockStateContainer func_180661_e();\n    descriptor: ()Lnet/minecraft/block/state/BlockStateContainer;\n    flags: ACC_PROTECTED\n    Code:\n      stack=7, locals=5, args_size=1\n         0: lconst_0\n         1: lstore_1\n         2: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         5: lstore_3\n         6: ldc_w         #533                // String protected net.minecraft.block.state.BlockStateContainer net.minecraft.block.BlockSapling#func_180661_e\n         9: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        12: new           #32                 // class net/minecraft/block/state/BlockStateContainer\n        15: dup\n        16: aload_0\n        17: iconst_2\n        18: anewarray     #334                // class net/minecraft/block/properties/IProperty\n        21: dup\n        22: iconst_0\n        23: getstatic     #38                 // Field field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n        26: aastore\n        27: dup\n        28: iconst_1\n        29: getstatic     #50                 // Field field_176479_b:Lnet/minecraft/block/properties/PropertyInteger;\n        32: aastore\n        33: invokespecial #337                // Method net/minecraft/block/state/BlockStateContainer.\"\":(Lnet/minecraft/block/Block;[Lnet/minecraft/block/properties/IProperty;)V\n        36: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        39: lload_3\n        40: lsub\n        41: lstore_1\n        42: ldc_w         #533                // String protected net.minecraft.block.state.BlockStateContainer net.minecraft.block.BlockSapling#func_180661_e\n        45: lload_1\n        46: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        49: areturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           12      38     0  this   Lnet/minecraft/block/BlockSapling;\n      LineNumberTable:\n        line 253: 12\nstatic {};\n    descriptor: ()V\n    flags: ACC_STATIC\n    Code:\n      stack=14, locals=6, args_size=0\n         0: lconst_0\n         1: lstore_2\n         2: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         5: lstore        4\n         7: ldc_w         #535                // String static void net.minecraft.block.BlockSapling#\n        10: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        13: ldc_w         #339                // String type\n        16: ldc           #12                 // class net/minecraft/block/BlockPlanks$EnumType\n        18: invokestatic  #345                // Method net/minecraft/block/properties/PropertyEnum.func_177709_a:(Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/block/properties/PropertyEnum;\n        21: putstatic     #38                 // Field field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n        24: ldc_w         #347                // String stage\n        27: iconst_0\n        28: iconst_1\n        29: invokestatic  #353                // Method net/minecraft/block/properties/PropertyInteger.func_177719_a:(Ljava/lang/String;II)Lnet/minecraft/block/properties/PropertyInteger;\n        32: putstatic     #50                 // Field field_176479_b:Lnet/minecraft/block/properties/PropertyInteger;\n        35: new           #355                // class net/minecraft/util/math/AxisAlignedBB\n        38: dup\n        39: ldc2_w        #356                // double 0.09999999403953552d\n        42: dconst_0\n        43: ldc2_w        #356                // double 0.09999999403953552d\n        46: ldc2_w        #358                // double 0.8999999761581421d\n        49: ldc2_w        #360                // double 0.800000011920929d\n        52: ldc2_w        #358                // double 0.8999999761581421d\n        55: invokespecial #364                // Method net/minecraft/util/math/AxisAlignedBB.\"\":(DDDDDD)V\n        58: putstatic     #76                 // Field field_185520_d:Lnet/minecraft/util/math/AxisAlignedBB;\n        61: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        64: lload         4\n        66: lsub\n        67: lstore_2\n        68: ldc_w         #535                // String static void net.minecraft.block.BlockSapling#\n        71: lload_2\n        72: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        75: return\n      LineNumberTable:\n        line 33: 13\n        line 34: 24\n        line 35: 35\npublic com.google.common.collect.ImmutableList> getManipulators(net.minecraft.block.state.IBlockState);\n    descriptor: (Lnet/minecraft/block/state/IBlockState;)Lcom/google/common/collect/ImmutableList;\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=6, args_size=2\n         0: lconst_0\n         1: lstore_2\n         2: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         5: lstore        4\n         7: ldc_w         #537                // String public com.google.common.collect.ImmutableList net.minecraft.block.BlockSapling#getManipulators(net.minecraft.block.state.IBlockState)\n        10: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        13: aload_0\n        14: aload_1\n        15: invokespecial #378                // Method getTreeTypeFor:(Lnet/minecraft/block/state/IBlockState;)Lorg/spongepowered/common/data/manipulator/immutable/block/ImmutableSpongeTreeData;\n        18: aload_0\n        19: aload_1\n        20: invokespecial #382                // Method getGrowthData:(Lnet/minecraft/block/state/IBlockState;)Lorg/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData;\n        23: invokestatic  #388                // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;\n        26: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        29: lload         4\n        31: lsub\n        32: lstore_2\n        33: ldc_w         #537                // String public com.google.common.collect.ImmutableList net.minecraft.block.BlockSapling#getManipulators(net.minecraft.block.state.IBlockState)\n        36: lload_2\n        37: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        40: areturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           13      28     0  this   Lorg/spongepowered/common/mixin/core/block/MixinBlockSapling;\n           13      28     1 blockState   Lnet/minecraft/block/state/IBlockState;\n      LineNumberTable:\n        line 551: 13\n    Signature: #480                         // (Lnet/minecraft/block/state/IBlockState;)Lcom/google/common/collect/ImmutableList;>;\n    MethodParameters:\n      Name                           Flags\n      blockState\n    RuntimeVisibleAnnotations:\n      0: #368(#369=s#370,#371=I#372,#373=s#374)\npublic boolean supports(java.lang.Class<? extends org.spongepowered.api.data.manipulator.ImmutableDataManipulator<?, ?>>);\n    descriptor: (Ljava/lang/Class;)Z\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=6, args_size=2\n         0: lconst_0\n         1: lstore_2\n         2: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         5: lstore        4\n         7: ldc_w         #539                // String public boolean net.minecraft.block.BlockSapling#supports(java.lang.Class)\n        10: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        13: ldc_w         #394                // class org/spongepowered/api/data/manipulator/immutable/block/ImmutableStoneData\n        16: aload_1\n        17: invokevirtual #399                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n        20: ifne          33\n        23: ldc_w         #401                // class org/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData\n        26: aload_1\n        27: invokevirtual #399                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n        30: ifeq          37\n        33: iconst_1\n        34: goto          38\n        37: iconst_0\n        38: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        41: lload         4\n        43: lsub\n        44: lstore_2\n        45: ldc_w         #539                // String public boolean net.minecraft.block.BlockSapling#supports(java.lang.Class)\n        48: lload_2\n        49: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        52: ireturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           13      40     0  this   Lorg/spongepowered/common/mixin/core/block/MixinBlockSapling;\n           13      40     1 immutable   Ljava/lang/Class;\n      LocalVariableTypeTable:\n        Start  Length  Slot  Name   Signature\n           13      40     1 immutable   Ljava/lang/Class<+Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator<>;>;\n      LineNumberTable:\n        line 556: 13\n      StackMapTable: number_of_entries = 3\n        frame_type = 253 / append /\n          offset_delta = 33\n          locals = [ long, long ]\n        frame_type = 3 / same /\n        frame_type = 64 / same_locals_1_stack_item /\n          stack = [ int ]\n    Signature: #484                         // (Ljava/lang/Class<+Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator<>;>;)Z\n    MethodParameters:\n      Name                           Flags\n      immutable\n    RuntimeVisibleAnnotations:\n      0: #368(#369=s#370,#371=I#372,#373=s#374)\npublic java.util.Optional getStateWithData(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.manipulator.ImmutableDataManipulator<?, ?>);\n    descriptor: (Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator;)Ljava/util/Optional;\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=8, args_size=3\n         0: lconst_0\n         1: lstore_3\n         2: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         5: lstore        5\n         7: ldc_w         #541                // String public java.util.Optional net.minecraft.block.BlockSapling#getStateWithData(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.manipulator.ImmutableDataManipulator)\n        10: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        13: aload_2\n        14: instanceof    #394                // class org/spongepowered/api/data/manipulator/immutable/block/ImmutableStoneData\n        17: ifeq          71\n        20: aload_2\n        21: checkcast     #394                // class org/spongepowered/api/data/manipulator/immutable/block/ImmutableStoneData\n        24: invokeinterface #409,  1          // InterfaceMethod org/spongepowered/api/data/manipulator/immutable/block/ImmutableStoneData.type:()Lorg/spongepowered/api/data/value/immutable/ImmutableValue;\n        29: invokeinterface #415,  1          // InterfaceMethod org/spongepowered/api/data/value/immutable/ImmutableValue.get:()Ljava/lang/Object;\n        34: checkcast     #12                 // class net/minecraft/block/BlockPlanks$EnumType\n        37: astore        7\n        39: aload_1\n        40: getstatic     #38                 // Field field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n        43: aload         7\n        45: invokeinterface #48,  3           // InterfaceMethod net/minecraft/block/state/IBlockState.func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n        50: checkcast     #417                // class org/spongepowered/api/block/BlockState\n        53: invokestatic  #422                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;\n        56: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        59: lload         5\n        61: lsub\n        62: lstore_3\n        63: ldc_w         #541                // String public java.util.Optional net.minecraft.block.BlockSapling#getStateWithData(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.manipulator.ImmutableDataManipulator)\n        66: lload_3\n        67: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        70: areturn\n        71: aload_2\n        72: instanceof    #401                // class org/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData\n        75: ifeq          144\n        78: aload_2\n        79: checkcast     #401                // class org/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData\n        82: invokeinterface #426,  1          // InterfaceMethod org/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData.growthStage:()Lorg/spongepowered/api/data/value/immutable/ImmutableBoundedValue;\n        87: invokeinterface #429,  1          // InterfaceMethod org/spongepowered/api/data/value/immutable/ImmutableBoundedValue.get:()Ljava/lang/Object;\n        92: checkcast     #52                 // class java/lang/Integer\n        95: invokevirtual #151                // Method java/lang/Integer.intValue:()I\n        98: istore        7\n       100: iload         7\n       102: iconst_1\n       103: if_icmple     109\n       106: iconst_1\n       107: istore        7\n       109: aload_1\n       110: getstatic     #50                 // Field field_176479_b:Lnet/minecraft/block/properties/PropertyInteger;\n       113: iload         7\n       115: invokestatic  #56                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n       118: invokeinterface #48,  3           // InterfaceMethod net/minecraft/block/state/IBlockState.func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n       123: checkcast     #417                // class org/spongepowered/api/block/BlockState\n       126: invokestatic  #422                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;\n       129: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n       132: lload         5\n       134: lsub\n       135: lstore_3\n       136: ldc_w         #541                // String public java.util.Optional net.minecraft.block.BlockSapling#getStateWithData(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.manipulator.ImmutableDataManipulator)\n       139: lload_3\n       140: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n       143: areturn\n       144: aload_0\n       145: aload_1\n       146: aload_2\n       147: invokespecial #431                // Method net/minecraft/block/Block.getStateWithData:(Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator;)Ljava/util/Optional;\n       150: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n       153: lload         5\n       155: lsub\n       156: lstore_3\n       157: ldc_w         #541                // String public java.util.Optional net.minecraft.block.BlockSapling#getStateWithData(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.manipulator.ImmutableDataManipulator)\n       160: lload_3\n       161: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n       164: areturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           39      32     7 treeType   Lnet/minecraft/block/BlockPlanks$EnumType;\n          100      44     7 growth   I\n           13     152     0  this   Lorg/spongepowered/common/mixin/core/block/MixinBlockSapling;\n           13     152     1 blockState   Lnet/minecraft/block/state/IBlockState;\n           13     152     2 manipulator   Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator;\n      LocalVariableTypeTable:\n        Start  Length  Slot  Name   Signature\n           13     152     2 manipulator   Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator<>;\n      LineNumberTable:\n        line 561: 13\n        line 562: 20\n        line 563: 39\n        line 565: 71\n        line 566: 78\n        line 567: 100\n        line 568: 106\n        line 570: 109\n        line 572: 144\n      StackMapTable: number_of_entries = 3\n        frame_type = 253 / append /\n          offset_delta = 71\n          locals = [ long, long ]\n        frame_type = 252 / append /\n          offset_delta = 37\n          locals = [ int ]\n        frame_type = 250 / chop /\n          offset_delta = 34\n    Signature: #485                         // (Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator<>;)Ljava/util/Optional;\n    MethodParameters:\n      Name                           Flags\n      blockState\n      manipulator\n    RuntimeVisibleAnnotations:\n      0: #368(#369=s#370,#371=I#372,#373=s#374)\npublic  java.util.Optional getStateWithValue(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.key.Key<? extends org.spongepowered.api.data.value.BaseValue>, E);\n    descriptor: (Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/key/Key;Ljava/lang/Object;)Ljava/util/Optional;\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=9, args_size=4\n         0: lconst_0\n         1: lstore        4\n         3: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         6: lstore        6\n         8: ldc_w         #543                // String public java.util.Optional net.minecraft.block.BlockSapling#getStateWithValue(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.key.Key, java.lang.Object)\n        11: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        14: aload_2\n        15: getstatic     #445                // Field org/spongepowered/api/data/key/Keys.TREE_TYPE:Lorg/spongepowered/api/data/key/Key;\n        18: invokevirtual #451                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n        21: ifeq          64\n        24: aload_3\n        25: checkcast     #12                 // class net/minecraft/block/BlockPlanks$EnumType\n        28: astore        8\n        30: aload_1\n        31: getstatic     #38                 // Field field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n        34: aload         8\n        36: invokeinterface #48,  3           // InterfaceMethod net/minecraft/block/state/IBlockState.func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n        41: checkcast     #417                // class org/spongepowered/api/block/BlockState\n        44: invokestatic  #422                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;\n        47: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        50: lload         6\n        52: lsub\n        53: lstore        4\n        55: ldc_w         #543                // String public java.util.Optional net.minecraft.block.BlockSapling#getStateWithValue(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.key.Key, java.lang.Object)\n        58: lload         4\n        60: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        63: areturn\n        64: aload_2\n        65: getstatic     #454                // Field org/spongepowered/api/data/key/Keys.GROWTH_STAGE:Lorg/spongepowered/api/data/key/Key;\n        68: invokevirtual #451                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n        71: ifeq          129\n        74: aload_3\n        75: checkcast     #52                 // class java/lang/Integer\n        78: invokevirtual #151                // Method java/lang/Integer.intValue:()I\n        81: istore        8\n        83: iload         8\n        85: iconst_1\n        86: if_icmple     92\n        89: iconst_1\n        90: istore        8\n        92: aload_1\n        93: getstatic     #50                 // Field field_176479_b:Lnet/minecraft/block/properties/PropertyInteger;\n        96: iload         8\n        98: invokestatic  #56                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n       101: invokeinterface #48,  3           // InterfaceMethod net/minecraft/block/state/IBlockState.func_177226_a:(Lnet/minecraft/block/properties/IProperty;Ljava/lang/Comparable;)Lnet/minecraft/block/state/IBlockState;\n       106: checkcast     #417                // class org/spongepowered/api/block/BlockState\n       109: invokestatic  #422                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;\n       112: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n       115: lload         6\n       117: lsub\n       118: lstore        4\n       120: ldc_w         #543                // String public java.util.Optional net.minecraft.block.BlockSapling#getStateWithValue(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.key.Key, java.lang.Object)\n       123: lload         4\n       125: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n       128: areturn\n       129: aload_0\n       130: aload_1\n       131: aload_2\n       132: aload_3\n       133: invokespecial #456                // Method net/minecraft/block/Block.getStateWithValue:(Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/key/Key;Ljava/lang/Object;)Ljava/util/Optional;\n       136: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n       139: lload         6\n       141: lsub\n       142: lstore        4\n       144: ldc_w         #543                // String public java.util.Optional net.minecraft.block.BlockSapling#getStateWithValue(net.minecraft.block.state.IBlockState, org.spongepowered.api.data.key.Key, java.lang.Object)\n       147: lload         4\n       149: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n       152: areturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           30      34     8 treeType   Lnet/minecraft/block/BlockPlanks$EnumType;\n           83      46     8 growth   I\n           14     139     0  this   Lorg/spongepowered/common/mixin/core/block/MixinBlockSapling;\n           14     139     1 blockState   Lnet/minecraft/block/state/IBlockState;\n           14     139     2   key   Lorg/spongepowered/api/data/key/Key;\n           14     139     3 value   Ljava/lang/Object;\n      LocalVariableTypeTable:\n        Start  Length  Slot  Name   Signature\n           14     139     2   key   Lorg/spongepowered/api/data/key/Key<+Lorg/spongepowered/api/data/value/BaseValue;>;\n           14     139     3 value   TE;\n      LineNumberTable:\n        line 577: 14\n        line 578: 24\n        line 579: 30\n        line 581: 64\n        line 582: 74\n        line 583: 83\n        line 584: 89\n        line 586: 92\n        line 588: 129\n      StackMapTable: number_of_entries = 3\n        frame_type = 253 / append /\n          offset_delta = 64\n          locals = [ long, long ]\n        frame_type = 252 / append /\n          offset_delta = 27\n          locals = [ int ]\n        frame_type = 250 / chop /\n          offset_delta = 36\n    Signature: #486                         // (Lnet/minecraft/block/state/IBlockState;Lorg/spongepowered/api/data/key/Key<+Lorg/spongepowered/api/data/value/BaseValue;>;TE;)Ljava/util/Optional;\n    MethodParameters:\n      Name                           Flags\n      blockState\n      key\n      value\n    RuntimeVisibleAnnotations:\n      0: #368(#369=s#370,#371=I#372,#373=s#374)\nprivate org.spongepowered.common.data.manipulator.immutable.block.ImmutableSpongeTreeData getTreeTypeFor(net.minecraft.block.state.IBlockState);\n    descriptor: (Lnet/minecraft/block/state/IBlockState;)Lorg/spongepowered/common/data/manipulator/immutable/block/ImmutableSpongeTreeData;\n    flags: ACC_PRIVATE\n    Code:\n      stack=6, locals=6, args_size=2\n         0: lconst_0\n         1: lstore_2\n         2: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         5: lstore        4\n         7: ldc_w         #545                // String private org.spongepowered.common.data.manipulator.immutable.block.ImmutableSpongeTreeData net.minecraft.block.BlockSapling#getTreeTypeFor(net.minecraft.block.state.IBlockState)\n        10: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        13: ldc_w         #461                // class org/spongepowered/common/data/manipulator/immutable/block/ImmutableSpongeTreeData\n        16: iconst_1\n        17: anewarray     #447                // class java/lang/Object\n        20: dup\n        21: iconst_0\n        22: aload_1\n        23: getstatic     #38                 // Field field_176480_a:Lnet/minecraft/block/properties/PropertyEnum;\n        26: invokeinterface #147,  2          // InterfaceMethod net/minecraft/block/state/IBlockState.func_177229_b:(Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;\n        31: checkcast     #463                // class org/spongepowered/api/data/type/TreeType\n        34: aastore\n        35: invokestatic  #469                // Method org/spongepowered/common/data/ImmutableDataCachingUtil.getManipulator:(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator;\n        38: checkcast     #461                // class org/spongepowered/common/data/manipulator/immutable/block/ImmutableSpongeTreeData\n        41: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        44: lload         4\n        46: lsub\n        47: lstore_2\n        48: ldc_w         #545                // String private org.spongepowered.common.data.manipulator.immutable.block.ImmutableSpongeTreeData net.minecraft.block.BlockSapling#getTreeTypeFor(net.minecraft.block.state.IBlockState)\n        51: lload_2\n        52: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        55: areturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           13      43     0  this   Lorg/spongepowered/common/mixin/core/block/MixinBlockSapling;\n           13      43     1 blockState   Lnet/minecraft/block/state/IBlockState;\n      LineNumberTable:\n        line 592: 13\n    MethodParameters:\n      Name                           Flags\n      blockState\n    RuntimeVisibleAnnotations:\n      0: #368(#369=s#370,#371=I#372,#373=s#374)\nprivate org.spongepowered.api.data.manipulator.immutable.block.ImmutableGrowthData getGrowthData(net.minecraft.block.state.IBlockState);\n    descriptor: (Lnet/minecraft/block/state/IBlockState;)Lorg/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData;\n    flags: ACC_PRIVATE\n    Code:\n      stack=6, locals=6, args_size=2\n         0: lconst_0\n         1: lstore_2\n         2: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         5: lstore        4\n         7: ldc_w         #547                // String private org.spongepowered.api.data.manipulator.immutable.block.ImmutableGrowthData net.minecraft.block.BlockSapling#getGrowthData(net.minecraft.block.state.IBlockState)\n        10: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        13: ldc_w         #471                // class org/spongepowered/common/data/manipulator/immutable/block/ImmutableSpongeGrowthData\n        16: iconst_3\n        17: anewarray     #447                // class java/lang/Object\n        20: dup\n        21: iconst_0\n        22: aload_1\n        23: getstatic     #50                 // Field field_176479_b:Lnet/minecraft/block/properties/PropertyInteger;\n        26: invokeinterface #147,  2          // InterfaceMethod net/minecraft/block/state/IBlockState.func_177229_b:(Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;\n        31: aastore\n        32: dup\n        33: iconst_1\n        34: iconst_0\n        35: invokestatic  #56                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n        38: aastore\n        39: dup\n        40: iconst_2\n        41: iconst_1\n        42: invokestatic  #56                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n        45: aastore\n        46: invokestatic  #469                // Method org/spongepowered/common/data/ImmutableDataCachingUtil.getManipulator:(Ljava/lang/Class;[Ljava/lang/Object;)Lorg/spongepowered/api/data/manipulator/ImmutableDataManipulator;\n        49: checkcast     #401                // class org/spongepowered/api/data/manipulator/immutable/block/ImmutableGrowthData\n        52: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        55: lload         4\n        57: lsub\n        58: lstore_2\n        59: ldc_w         #547                // String private org.spongepowered.api.data.manipulator.immutable.block.ImmutableGrowthData net.minecraft.block.BlockSapling#getGrowthData(net.minecraft.block.state.IBlockState)\n        62: lload_2\n        63: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        66: areturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           13      54     0  this   Lorg/spongepowered/common/mixin/core/block/MixinBlockSapling;\n           13      54     1 blockState   Lnet/minecraft/block/state/IBlockState;\n      LineNumberTable:\n        line 596: 13\n    MethodParameters:\n      Name                           Flags\n      blockState\n    RuntimeVisibleAnnotations:\n      0: #368(#369=s#370,#371=I#372,#373=s#374)\npublic java.util.List getManipulators(net.minecraft.block.state.IBlockState);\n    descriptor: (Lnet/minecraft/block/state/IBlockState;)Ljava/util/List;\n    flags: ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n    Code:\n      stack=5, locals=6, args_size=2\n         0: lconst_0\n         1: lstore_2\n         2: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n         5: lstore        4\n         7: ldc_w         #549                // String public volatile java.util.List net.minecraft.block.BlockSapling#getManipulators(net.minecraft.block.state.IBlockState)\n        10: invokestatic  #495                // Method $btrace$com$negafinity$btrace$Logger$entry:(Ljava/lang/String;)V\n        13: aload_0\n        14: aload_1\n        15: invokevirtual #474                // Method getManipulators:(Lnet/minecraft/block/state/IBlockState;)Lcom/google/common/collect/ImmutableList;\n        18: invokestatic  #501                // Method java/lang/System.nanoTime:()J\n        21: lload         4\n        23: lsub\n        24: lstore_2\n        25: ldc_w         #549                // String public volatile java.util.List net.minecraft.block.BlockSapling#getManipulators(net.minecraft.block.state.IBlockState)\n        28: lload_2\n        29: invokestatic  #505                // Method $btrace$com$negafinity$btrace$Logger$exit:(Ljava/lang/String;J)V\n        32: areturn\n      LocalVariableTable:\n        Start  Length  Slot  Name   Signature\n           13      20     0  this   Lorg/spongepowered/common/mixin/core/block/MixinBlockSapling;\n      LineNumberTable:\n        line 546: 13\n    MethodParameters:\n      Name                           Flags\n      blockState                     synthetic\n    RuntimeVisibleAnnotations:\n      0: #368(#369=s#370,#371=I#372,#373=s#374)\nprivate static void $btrace$com$negafinity$btrace$Logger$entry(java.lang.String);\n    descriptor: (Ljava/lang/String;)V\n    flags: ACC_PRIVATE, ACC_STATIC\n    Code:\n      stack=3, locals=1, args_size=1\n         0: getstatic     #563                // Field com/negafinity/btrace/Logger.runtime:Lcom/sun/btrace/BTraceRuntime;\n         3: invokestatic  #569                // Method com/sun/btrace/BTraceRuntime.enter:(Lcom/sun/btrace/BTraceRuntime;)Z\n         6: getstatic     #573                // Field com/negafinity/btrace/Logger.profiler:Lcom/sun/btrace/Profiler;\n         9: aload_0\n        10: invokestatic  #579                // Method com/sun/btrace/BTraceUtils$Profiling.recordEntry:(Lcom/sun/btrace/Profiler;Ljava/lang/String;)V\n        13: invokestatic  #582                // Method com/sun/btrace/BTraceRuntime.leave:()V\n        16: return\n    RuntimeVisibleAnnotations:\n      0: #550(#551=s#552,#553=s#554)\n    RuntimeVisibleParameterAnnotations:\n      parameter 0:\n        0: #555(#556=Z#557)\nprivate static void $btrace$com$negafinity$btrace$Logger$exit(java.lang.String, long);\n    descriptor: (Ljava/lang/String;J)V\n    flags: ACC_PRIVATE, ACC_STATIC\n    Code:\n      stack=5, locals=3, args_size=2\n         0: getstatic     #563                // Field com/negafinity/btrace/Logger.runtime:Lcom/sun/btrace/BTraceRuntime;\n         3: invokestatic  #569                // Method com/sun/btrace/BTraceRuntime.enter:(Lcom/sun/btrace/BTraceRuntime;)Z\n         6: getstatic     #573                // Field com/negafinity/btrace/Logger.profiler:Lcom/sun/btrace/Profiler;\n         9: aload_0\n        10: lload_1\n        11: invokestatic  #591                // Method com/sun/btrace/BTraceUtils$Profiling.recordExit:(Lcom/sun/btrace/Profiler;Ljava/lang/String;J)V\n        14: invokestatic  #582                // Method com/sun/btrace/BTraceRuntime.leave:()V\n        17: return\n    RuntimeVisibleAnnotations:\n      0: #550(#551=s#552,#553=s#554,#583=@#584(#439=e#585.#586))\n    RuntimeVisibleParameterAnnotations:\n      parameter 0:\n        0: #555(#556=Z#557)\n      parameter 1:\n        0: #587()\n}\nSignature: #3                           // Lnet/minecraft/block/BlockBush;Lnet/minecraft/block/IGrowable;\nSourceFile: \"BlockSapling.java\"\nSourceDebugExtension:\n  SMAP\n  BlockSapling.java\n  Mixin\n  S Mixin\n  F\n  + 1 BlockSapling.java\n  net/minecraft/block/BlockSapling.java\n  + 2 MixinBlockSapling.java\n  org/spongepowered/common/mixin/core/block/MixinBlockSapling.java\n  L\n  1#1,500:1\n  1#2,500:501\n  E\nInnerClasses:\n     static #10; //class net/minecraft/block/BlockSapling$1\n     public static final #15= #12 of #14; //a=class net/minecraft/block/BlockPlanks$EnumType of class net/minecraft/block/BlockPlanks\n```. I think the most important thing is the StackMapTable:\nStackMapTable: number_of_entries = 28\n        frame_type = 253 /* append */\n          offset_delta = 41\n          locals = [ long, long ]\n        frame_type = 20 /* same */\n        frame_type = 71 /* same_locals_1_stack_item */\n          stack = [ class java/lang/Object ]\n        frame_type = 255 /* full_frame */\n          offset_delta = 69\n          locals = [ class net/minecraft/block/BlockSapling, class net/minecraft/world/World, class net/minecraft/util/math/BlockPos, class net/minecraft/block/state/IBlockState, class java/util/Random, long, long, class java/lang/Object, int, int, int ]\n          stack = []\n        frame_type = 2 /* same */\n        frame_type = 8 /* same */\n        frame_type = 42 /* same */\n        frame_type = 5 /* same */\n        frame_type = 5 /* same */\n        frame_type = 23 /* same */\n        frame_type = 13 /* same */\n        frame_type = 253 /* append */\n          offset_delta = 52\n          locals = [ class net/minecraft/block/state/IBlockState, class net/minecraft/block/state/IBlockState ]\n        frame_type = 8 /* same */\n        frame_type = 45 /* same */\n        frame_type = 5 /* same */\n        frame_type = 5 /* same */\n        frame_type = 249 /* chop */\n          offset_delta = 37\n        frame_type = 12 /* same */\n        frame_type = 2 /* same */\n        frame_type = 8 /* same */\n        frame_type = 37 /* same */\n        frame_type = 5 /* same */\n        frame_type = 5 /* same */\n        frame_type = 21 /* same */\n        frame_type = 252 /* append */\n          offset_delta = 91\n          locals = [ class net/minecraft/block/state/IBlockState ]\n        frame_type = 8 /* same */\n        frame_type = 251 /* same_frame_extended */\n          offset_delta = 99\n        frame_type = 7 /* same */\nNotice the references to java/lang/Object. @yardus Correct. I can provide you with a setup if that'd make things easier. @yardus Should I send it here or email you?. @yardus \nOkay, here's a link to a testing environment: https://www.dropbox.com/s/rbyp7dle3pib0ka/TestingServer.rar?dl=0\nTo start with BTrace (1.3.9), use start.bat or start.sh\nTo start without you can just use run.bat. @yardus\nQuestion: if this issue is due to the fact that other classes aren't loaded, if I were to attach BTrace to the application after it started, wouldn't that work?\nReason I'm asking is I did that, and it did not fix it.. @yardus \nI played around with it some more.\nI commented our your getCommonSuperClass method in BTraceClassWriter and the error disappeared.\nAlthough this is not a permanent solution, the error most likely lies there. One solution I came up with is if COMPUTE_FRAMES is not computing the StackMapTable types correctly when using this, we could use COMPUTE_MAXS and call visitFrame ourselves to add the entry for the new local variable(s), eliminating the need to recompute the whole StackMapTable, thereby avoiding the issue altogether.\n. @jbachorik\nIf you take the approach of manually appending or creating the stackmapframe you can avoid overwriting the existing ones thereby avoiding the problem. That seems like the best solution. @jbachorik Thanks for the fast reply. Yes the whole JVM crashes. And yeah I thought the try catch would eat the exception but it didn't.. I did use my fork when testing though, but all I changed was commenting out your getCommonSuperclass method that I made the other issue about. Sure, will do\nOn Sun, Oct 29, 2017, 3:03 PM Jaroslav Bachorik notifications@github.com\nwrote:\n\nCould you try the testcase with the latest dev version? I have implemented\ncustom stackmap frame generation and the problems related to\ngetCommonSuperclass should be gone by now.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/btraceio/btrace/issues/288#issuecomment-340285836,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGgQ8yEVY54lVd8Wob_grNuqiovlVp58ks5sxMwLgaJpZM4P0vKt\n.\n. @jbachorik Sorry took me a while.\n\nWas that supposed to fix https://github.com/btraceio/btrace/issues/283 ?\nIf so, I am still getting the error using the test environment that is linked on that issue.. @jbachorik Ok, l will try to get around to it soon.\nThanks!. ",
    "DeanCZH": "I import the old jar with on maven repository..... ",
    "xiaozi": "@yardus I use the latest version 1.3.9. I download the 'v1.3.9' release\nand unzip the btrace-boot.jar and find the file /com/sun/btrace/BTraceUtils.class\nthen I use JD-GUI decompile BTraceUtils.class, there is no method get(java.lang.String,java.lang.Object)\nShould I build btrace myself?. @jbachorik my fault, thank you. ",
    "daleqq": "@jbachorik Thank you very much. I add the package of my probe class into -Djboss.modules.system.pkgs parameter, and the trace works.. ",
    "hoswey": "@jbachorik Thanks your quick response. Here is the hs_err.. ",
    "feelgood3000": "when i run the script \"btrace 1491 AllMethods.class\"\nmy console show follow tips:\nException in thread \"Thread-0\" java.lang.NoSuchMethodError: com.sun.btrace.BTraceRuntime.init(Lcom/sun/btrace/PerfReader;Lcom/sun/btrace/RunnableGenerator;)V\n    at com.sun.btrace.agent.Client.(Client.java:94)\n    at com.sun.btrace.agent.Main.startServer(Main.java:379)\n    at com.sun.btrace.agent.Main.access$000(Main.java:65)\n    at com.sun.btrace.agent.Main$3.run(Main.java:166)\n    at java.lang.Thread.run(Thread.java:748)\nAllMethods.java\n@BTrace\npublic class AllMethods {\n    @OnMethod(\n            clazz = \"com.demo.btrace.Demo\",\n            method = \"test\",\n            location = @Location(Kind.RETURN)\n    )\n    public static void m(@Return long sum){\n        println(\"test\");\n    }\n}\nDemo.java\n`public class Demo {\npublic static void main(String[] args){\n\n    Demo demo=new Demo();\n    for (int i = 0; i < 1000; i++) {\n        try {\n            Thread.sleep(1000*5);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        demo.test();\n    }\n}\n\npublic static long count=0;\n\n\npublic long test(){\n    count++;\n    return count;\n}\n\n}`\nbtrace --version \nBTrace v.1.3.1 (20150625). ",
    "D3Hunter": "after this change, it's impossible to build btrace with jdk1.7(jdk1.8 works fine), as javac prevent access to com.sun.xml.internal.messaging.saaj.util.ByteOutputStream. ",
    "RalphSu": "i am able to run with -javaagent:path-to-btrace-agent.jar on my mac with hotspot jvm like below.\nLM-SHC-16501232:ebay liasu$ java -version\njava version \"1.8.0_121\"\nJava(TM) SE Runtime Environment (build 1.8.0_121-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)\n. btw, i trid to hack the one refered in SO, but failed to build from lastest release yet (gradlew distribution also the ant dist).. hmm..\nIt turns out that it's btrace-boot.jar not copied together with btrace-agent.jar when i deploy btrace to container. After i copied them, together, application starts well.  Thanks!. Close this one as it's not an issue.!. ",
    "saaavsaaa": "Let me try, but it does not seem easy.May you print separately. It(conclude unit test) works well in my local environment, and I can't fix it.. Thank\uff0cI will try to fix it.It may just take a long time.. My master branch was changed disorderly by me, and I commited a new request\nhttps://github.com/btraceio/btrace/pull/311. I saw it wrong again, and clicked -_-||. Sorry.There was a cold in the last few days. I'll learn the code carefully.. It seems to be unable to work well.I think maybe I should commit modification after my totally understanding of the whole project. And I am doing this.. Such as this?\n    @OnMethod(clazz=\"/.*\\.OnMethodTest/\", method=\"args\", location=@Location(value=Kind.ERROR))\n    public static void args(@Self Object self, @Return long retVal, @Duration long dur, String a, long b, String[] c, int[] d, @TargetInstance Throwable err) {\n        println(\"args\");\n    }. Is there a unit test about on \"String a, long b, String[] c, int[] d\"?I want to refer to it.Lately,I try to write unit test like that in InstrumentorTest.java\uff0cbut I can't write bytecode very well yet.. ",
    "xiezhenye": "find an exception in app's log\njava.security.AccessControlException: access denied (\"java.util.PropertyPermission\" \"btrace.port\" \"write\")\n    at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472) ~[?:1.8.0_111]\n    at java.security.AccessController.checkPermission(AccessController.java:884) ~[?:1.8.0_111]\n    at java.lang.SecurityManager.checkPermission(SecurityManager.java:549) ~[?:1.8.0_111]\n    at java.lang.System.setProperty(System.java:792) ~[?:1.8.0_111]\n    at com.sun.btrace.agent.Main.startServer(Main.java:653) ~[btrace-agent.jar:?]\n    at com.sun.btrace.agent.Main.access$000(Main.java:60) ~[btrace-agent.jar:?]\n    at com.sun.btrace.agent.Main$2.run(Main.java:126) ~[btrace-agent.jar:?]\n    at java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]\n . You are right. After disable SecurityManager, it will ok..\n",
    "pibako": "Fantastic, thanks for fixing this @jbachorik!. ",
    "thinkhejie": "i want to monitor HashMap resize , java code is below .\nbut it can not work  in JDK 1.8 .  should i do some right things for this  ?\n`\npackage com.lzy;\nimport java.util.HashMap;\nimport java.util.concurrent.TimeUnit;\npublic class TestJVM {\npublic static final int ONE_MB = 1024 * 1024;\n\n// -javaagent:/Users/hejie/devtool/maven/repository/com/sun/tools/btrace/btrace-agent/1.3.10.1/btrace-agent-1.3.10.1.jar\n//-javaagent:/Users/hejie/devtool/btrace/btrace-agent.jar=dumpClasses=true,dumpDir=/Users/hejie/devtool/btrace/dump,debug=true,stdout=true,unsafe=false,noServer=true,startupRetransform=true,script=/Users/hejie/framework/btraceside/target/classes/com/lzy/BTraceMain.class\npublic static void main(String[] args) throws Exception {\n    mapExpandCapacity();\n}\n\n/**\n * java.util.HashMap#resize(int)\n * \n */\npublic static void mapExpandCapacity() throws Exception {\n    new Thread(new Runnable() {\n        public void run() {\n            while (true) {\n                HashMap<Integer, Byte[]> map = new HashMap<Integer, Byte[]>(1, 0.25f);//16,0.75 16*0.75=12\n                int size = 100;\n                for (int i = 0; i < size; i++) {\n                    map.put(i, new Byte[ONE_MB]);\n                }\n                System.out.println(\"Expand SIZE = \" + map.size());\n                try {\n                    TimeUnit.SECONDS.sleep(10);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }, \"mapExpandCapacity\").start();\n    TimeUnit.HOURS.sleep(1);\n}\n\n}\n`\n@OnMethod(clazz = \"+java.util.HashMap\", method = \"resize\")\n    public static void m0(AnyType[] args) {\n        println(\"\\n==== +java.util.HashMap#resize ====\");\n        printArray(args);\n        jstack();\n    }. ",
    "feng-zh": "Not sure if my local hotfix addressed this issue.\nI just start btrace agent mode with script (or script dir), but it appears 1.3.10.2 version did not transform the classes. By looking into debug and source code, it appears the commit bb5ce19 src/share/classes/com/sun/btrace/agent/Main.java move addTransformer function into finally block,\nhttps://github.com/btraceio/btrace/blob/0f37ca3b2e56f6aa599ca2f4439ae0c7a238c453/src/share/classes/com/sun/btrace/agent/Main.java#L146\nwhic is invoked after startScripts() call \nhttps://github.com/btraceio/btrace/blob/0f37ca3b2e56f6aa599ca2f4439ae0c7a238c453/src/share/classes/com/sun/btrace/agent/Main.java#L112\nin main() function at com.sun.btrace.agent.Main\nThe startScripts try to load, verify script, and trigger client.retransformLoaded() at:\nhttps://github.com/btraceio/btrace/blob/0f37ca3b2e56f6aa599ca2f4439ae0c7a238c453/src/share/classes/com/sun/btrace/agent/Main.java#L616-L619\nand handleNewClient() is to do real retransform loaded:\nhttps://github.com/btraceio/btrace/blob/0f37ca3b2e56f6aa599ca2f4439ae0c7a238c453/src/share/classes/com/sun/btrace/agent/Main.java#L685-L707\nBased on this debug output and finding, I did hotfix  feng-zh/btrace@08d3261 in my forked version, and delay handleNewClient() to do retransform after btrace class transformer installed.\nPlease check if this analysis is addressing this issue. It is simple to reproduce this issue by using samples with \"-javaagent\" option. And this is impacting btrace javaagent mode after 1.3.10 version.. @jbachorik, I have created PR #373 to resolve this issue. The PR is based on latest develop branch, and  include your review comments on renaming existing method.. ",
    "dcapwell": "cant share the script but here are the probes\n```\n@OnMethod(clazz=\"java.lang.System\", method=\"currentTimeMillis\")\n  public static void onEnter()\n@OnMethod(clazz=\"java.lang.System\", method=\"currentTimeMillis\", location = @Location(Kind.RETURN))\n  public static void onExit()\n@OnEvent\n  public static void onEvent()\n```\nThis is my first script.  Trying to get a hello world where I build a histogram of how long methods take.  I picked currentTimeMillis since I know most code calls it so I could profile any random thing running rather than profile something I wrote; this is just for me to learn brace.. The pid in the example points to /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk\n$ echo $JAVA_HOME\n/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home\nSo both processes are using the same JVM. Based off walking the code, adding the following to unblock me\n@OnEvent(\"fluffy\")\nSending a named event fluffy seems to work.. So I am able to trigger the event and get back most of the body (the code calls println 10 times, output is only 9), but the state is all empty (AtomicLong all valued 0).\nSo thought maybe some code isn't calling Millies, so took a jstack of the process (IntelliJ) and had the following stack\njava.lang.Thread.State: TIMED_WAITING (parking)\n        at sun.misc.Unsafe.park(Native Method)\n        - parking to wait for  <0x0000000794538740> (a java.util.concurrent.SynchronousQueue$TransferStack)\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\n        at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)\n        at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)\n        at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1066)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:748)\nSo I know java.util.concurrent.SynchronousQueue.poll is getting called so updated to the following probes\n```\n@OnMethod(clazz=\"java.util.concurrent.SynchronousQueue\", method=\"poll\")\n  public static void onEnter()\n@OnMethod(clazz=\"java.util.concurrent.SynchronousQueue\", method=\"poll\", location = @Location(Kind.RETURN))\n  public static void onExit()\n```\nAlso added a println as the first statement in both probes to verify they get called.  The behavior I see is fluffy still returns 0 for all values, and that the onEnter and onExit methods never print anything.\nShould I file a different issue for this?. Dumped out the class and see that the wrong method is picked; thing I need to change the method name; will try to find out how\n```\npublic E poll();\n    descriptor: ()Ljava/lang/Object;\n    flags: ACC_PUBLIC\n    Code:\n      stack=5, locals=1, args_size=1\n         0: invokestatic  #232                // Method $btrace$TimeMethod$2$onEnter:()V\n         3: aload_0\n         4: getfield      #7                  // Field java/util/concurrent/SynchronousQueue.transferer:Ljava/util/concurrent/SynchronousQueue$Transferer;\n         7: aconst_null\n         8: iconst_1\n         9: lconst_0\n        10: invokevirtual #10                 // Method java/util/concurrent/SynchronousQueue$Transferer.transfer:(Ljava/lang/Object;ZJ)Ljava/lang/Object;\n        13: invokestatic  #235                // Method java/util/concurrent/SynchronousQueue.$btrace$TimeMethod$2$onExit:()V\n        16: areturn\n      LineNumberTable:\n        line 955: 3\n    Signature: #100                         // ()TE;\npublic E poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;\n    descriptor: (JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;\n    flags: ACC_PUBLIC\n    Code:\n      stack=6, locals=5, args_size=3\n         0: invokestatic  #232                // Method $btrace$TimeMethod$2$onEnter:()V\n         3: aload_0\n         4: getfield      #7                  // Field java/util/concurrent/SynchronousQueue.transferer:Ljava/util/concurrent/SynchronousQueue$Transferer;\n         7: aconst_null\n         8: iconst_1\n         9: aload_3\n        10: lload_1\n        11: invokevirtual #14                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J\n        14: invokevirtual #10                 // Method java/util/concurrent/SynchronousQueue$Transferer.transfer:(Ljava/lang/Object;ZJ)Ljava/lang/Object;\n        17: astore        4\n        19: aload         4\n        21: ifnonnull     30\n        24: invokestatic  #11                 // Method java/lang/Thread.interrupted:()Z\n        27: ifne          36\n        30: aload         4\n        32: invokestatic  #235                // Method java/util/concurrent/SynchronousQueue.$btrace$TimeMethod$2$onExit:()V\n        35: areturn\n        36: new           #12                 // class java/lang/InterruptedException\n        39: dup\n        40: invokespecial #13                 // Method java/lang/InterruptedException.\"\":()V\n        43: athrow\n      LineNumberTable:\n        line 941: 3\n        line 942: 19\n        line 943: 30\n        line 944: 36\n    Exceptions:\n      throws java.lang.InterruptedException\n    Signature: #103\n``. Ok switching to@OnMethod(clazz=\"io.netty.channel.nio.NioEventLoop\", method=\"select\", location = @Location(Kind.RETURN))` works.  I still need to figure out how to control the method signature, but I have something working now!. Ok, so the missing value shows up in the next event; looks like a buffer issue\n```\n^CPlease enter your option:\n        1. exit\n        2. send an event\n        3. send a named event\n        4. flush console output\n3\nPlease enter the event name: fluffy\nstep: 200\n0:  0\n1:  0\n2:  0\n3:  0\n4:  0\n5:  0\n6:  0\n7:  0\n8:  0\n^CPlease enter your option:\n        1. exit\n        2. send an event\n        3. send a named event\n        4. flush console output\n4\n^CPlease enter your option:\n        1. exit\n        2. send an event\n        3. send a named event\n        4. flush console output\n3\nPlease enter the event name: fluffy\n9:  11\nstep: 200\n0:  0\n1:  0\n2:  0\n3:  0\n4:  0\n5:  0\n6:  0\n7:  0\n8:  0\n```. Thanks for the details.  Will try this out soon!. I would not be able to add this for reasons, but adding a good example for anyone who wishes to take this on\nhttps://github.com/jvm-profiling-tools/async-profiler/blob/master/src/profiler.cpp#L277\nThis example is taking the trace from Linux perf_events (not in scope of this issue request) and from the jvm and stitches together to have a full stack stack frame.  This is called for a single thread. ",
    "skrishnamachari": "This works..\n@OnMethod(clazz=\"com.dynamictrace.TestDynamicInnerClass$Class\", method=\"/.*/\" )\n              // location=@Location(value=Kind.RETURN)) //, clazz=\"/./\", method=\"/private./\"))\n                //@Sampled(kind = Sampled.Sampler.Adaptive)\n    public static void traceTrans02(  @ProbeMethodName String probeMethod ) { \n            logString(probeMethod);\n}   . No it works fine... Just documented it after initial trials to get it\n\nworking\nOn Sat, Feb 17, 2018 at 9:12 AM, Jaroslav Bachorik <notifications@github.com\n\nwrote:\nSo, is there any problem left resolved?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/btraceio/btrace/issues/315#issuecomment-366447523,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AiOMWqe0Jfh0ddJhVFFBczqSI9pJERYpks5tVuxDgaJpZM4Rvjox\n.\n. \n",
    "hellodengfei": "@jbachorik but how can get the the array length, normally the length is more cared. ",
    "astonchev": "@hellodengfei likely already found a solution, but for those coming from google, tracing large array allocations is possible with Where.AFTER and @Return, e.g.\n```\nimport com.sun.btrace.annotations.;\nimport static com.sun.btrace.BTraceUtils.;\n@BTrace\npublic class TracingScript {\n   @OnMethod(\n     clazz=\"/com\\.example\\../\",\n     method=\"/./\",\n     location=@Location(value=Kind.NEWARRAY, clazz=\"int\", where=Where.AFTER)\n   )\n   public static void onnew(@ProbeClassName String pcn, @ProbeMethodName String pmn, @Return int[] array, String arrType, int dim) {\n       if (array.length < 1024) return;\n       print(\"new \" + arrType + '[' + array.length + \"] at\\n\");\n       jstack();\n   }\n}\n```. ",
    "sattishv": "Hi Team,\nThanks for the response. I am not able to make a progress. Tried couple of\nways but not successful. Have been asked to use tools like InTrace and\nJackplay. Yet to play with it will update if i make a breakthrough\nSattish\nOn Sun, Aug 26, 2018 at 11:28 PM Jaroslav Bachorik notifications@github.com\nwrote:\n\nAny progress on this?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/btraceio/btrace/issues/331#issuecomment-416056897,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHGqmbbJIhUT4x8M-hNhHIfPbuukV9vpks5uUuHYgaJpZM4TQcif\n.\n\n\n-- \nwith regards,\nSattish\n9940080070\n. ",
    "chgitcrazy": "Thank you\uff01Got it\uff01. Thank you \uff01yeah \uff0cI  don't need to restart the server when I change the instrumentation. But if I want to change the function in the agent\uff0cis there any method\uff1fSuch as adding a new Command\uff1bBecause the Command function is loaded by bootclassloader\uff0cit's have no chance to be unload\uff1bThe only method is restart the server\uff01. I want to achieve the function that could monitor and trace the Classes and Methods .\nBesides\uff0cthe function can be wrapper into a hotswap plugin to have no effect on the server\uff08tomcat...) .Because I am afraid that the server would be affected by the code inused in the memory.. do you have some deadlocks cases?. OK,understand it ,Thank you . ",
    "moooonk": "Source here. \nAnd with my test,this source can run in btrace-1.3.8.3 no Exception.\npackage com.sun.btrace.samples;\nimport com.sun.btrace.annotations.;\nimport static com.sun.btrace.BTraceUtils.;\n@BTrace(unsafe=true) public class AllMethods {\n    @OnMethod(\n        clazz=\"com.bt.pjg.game.backpack.BackpackService\",\n        method=\"/.*/\",\n        location=@Location(value=Kind.SYNC_ENTRY)\n    )\n    public static void m() {\n        print(\"entered SYNC\");\n    }\n@OnMethod(\n    clazz=\"com.bt.pjg.game.backpack.BackpackService\",\n    method=\"/.*/\",\n    location=@Location(value=Kind.ENTRY)\n)\npublic static void m2() {\n    print(\"entered run\");\n}\n\n}. BackpackService is My company project source.I'm sorry.It's not convenient for me to share the detail source.\nBut I can share the source structure.I hope it will help you\u3002\npublic class BackpackService {\n    private static final BackpackService instance = new BackpackService();\nprivate BackpackManger manager;\n\nprivate BackpackService() {\n\n}\n\npublic static BackpackService instance() {\n    return instance;\n}\n\npublic void init() {\n\n}\n\npublic CacheMap<ItemBase> getItemMap(long userId) {\n\n}\n\npublic List<ItemBase> getItemList(long userId) {\n\n}\n\npublic ItemBase getItemById(long userId, int itemId) {\n\n}\n\npublic int getItemCount(long userId, int itemId) {\n\n}\n\npublic ItemBase addItem(User user, int itemId, int count, GetApproach getApproach) {\n\n}\n\npublic List<ItemBase> addItem(User user, Collection<M2QEntry> entryList, GetApproach getApproach) {\n\n}\n\nprivate void throwInvalidParamsException(M2QEntry entry) {\n\n}\n\npublic boolean decrItem(User user, int itemId, int count, DecReason decReason) {\n\n}\n\npublic boolean decrItem(User user, Collection<M2QEntry> entryList, DecReason decReason) {\n\n\n}\n\npublic void replaceItem(User user, ItemBase itemBase) {\n\n}\n\nprivate void replaceItem(User user, Collection<ItemBase> itemBaseList) {\n\n}\n\nprivate void pushChange(User user, Collection<ItemBase> itemBaseList) {\n\n}\n\npublic List<UserItem> changeToUserItem(Collection<ItemBase> itemBaseList) {\n    synchronized (this) {\n        synchronized (itemBaseList) {\n\n            }           \n            return userItemList;                \n        }\n    }\n}\n\npublic short useTool(User user, List<M2QEntry> m2qList, long targetId) {\n\n}\n\npublic boolean checkEnough(User user, int itemId, int count) {\n\n}\n\npublic boolean checkEnough(User user, Collection<M2QEntry> entryList) {\n\n}\n\n}\n. Unfortunately,I donwload new btrace-bin-1.3.11 release and test.But this bug still here.. log here:\n\nbtrace WARNING: Unknown slot type: -2\n\n\nbtrace WARNING: Unknown slot type: -2\n\n\n***. ",
    "hehondou": "src/share/classes/com/sun/btrace/BTraceUtils.java\nline: 962 to 1031\nIn the new added methods of printArray, the code \"Arrays.toString(array)\" throwns \"Return value of this method must be used\".\nBy changing the code above to \"String str = Arrays.toString(array);\", the errors can be corrected.\nBut I don't know whether this correctness are meanfuling and useful.. ",
    "denisbog": "Hi,\nfound that the way 'try catch' blocks are visited forms the order of the exception frames. If we move the 'visitTryCatchBlock(start, end, end, THROWABLE_INTERNAL);' from 'visitMethodPrologue()' to 'visitMaxs(int maxStack, int maxLocals)', will insert our new exception frame last and not at the beginning that causes existing handled exceptions to be ignored. It looks that only visitLabel location is important and visitTryCatchBlock can be relocated\nDoing my simple test it did solved the issue. However not aware about other possible impacts for this change\nThank you,\nDenis\n```\ndiff --git a/src/share/classes/com/sun/btrace/runtime/instr/ErrorReturnInstrumentor.java b/src/share/classes/com/sun/btrace/runtime/instr/ErrorReturnInstrumentor.java\nindex debd145..7111377 100644\n--- a/src/share/classes/com/sun/btrace/runtime/instr/ErrorReturnInstrumentor.java\n+++ b/src/share/classes/com/sun/btrace/runtime/instr/ErrorReturnInstrumentor.java\n@@ -52,13 +52,13 @@ public class ErrorReturnInstrumentor extends MethodReturnInstrumentor {\n @Override\n protected void visitMethodPrologue() {\n\n\n\nvisitTryCatchBlock(start, end, end, THROWABLE_INTERNAL);\n         visitLabel(start);\n         super.visitMethodPrologue();\n     }\n@Override\n public void visitMaxs(int maxStack, int maxLocals) {\n+        visitTryCatchBlock(start, end, end, THROWABLE_INTERNAL);\n     visitLabel(end);\n     insertFrameReplaceStack(end, THROWABLE_TYPE);\n     onErrorReturn();\n@@ -75,4 +75,4 @@ public class ErrorReturnInstrumentor extends MethodReturnInstrumentor {\n protected void onErrorReturn() {\n     asm.println(\"error return from \" + getName() + getDescriptor());\n }\n-}\n\\ No newline at end of file\n+}\n```\n\n\n. submitted the pull request from a different fork, was not able to create a branch on current repository. ",
    "caim2015": "How to solve this problem?. ",
    "zhaikaishun": "BTrace v.1.3.11.1 (20180901)\njava version \"1.8.0_91\"  \nI have the same problem \nMy Java Code\n```\npackage me.zks.jvm.troubleshoot.btrace;\nimport java.util.concurrent.TimeUnit;\npublic class FirstSample {\n    public static void main(String[] args) {\n        FirstSample firstSample = new FirstSample();\n        while (true){\n            firstSample.fun1(\"aa\",\"bb\");\n        }\n    }\n    public void fun1(String str1,String str2){\n        try {\n            System.out.println(\"fun1 para is:\"+str1+\",\"+str2);\n            String result = fun2(str2);\n            TimeUnit.SECONDS.sleep(3);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n}\nprivate String fun2(String str2) {\n    System.out.println(\"fun2 para is:\"+str2);\n    return \"fun2\"+str2;\n}\n\n}\nAnd the trace is\nimport com.sun.btrace.BTraceUtils;\nimport com.sun.btrace.annotations.*;\n@BTrace\npublic class FirstSampleBtrace {\n//    @OnMethod(\n//            clazz = \"me.zks.jvm.troubleshoot.btrace.FirstSample\"\n//            ,method = \"fun1\"\n//            ,location = @Location(value = Kind.ENTRY))\n//    public static void m(@Self Object self,String str1,String str2){//,String str2\n//        BTraceUtils.print(\"fun1 str1:\"+str1+\" str2: \"+str2);\n//    }\n@OnMethod(clazz = \"me.zks.jvm.troubleshoot.btrace.FirstSample\",\n        method = \"fun2\",\n        location = @Location(value = Kind.ENTRY))\npublic static void m1(@Self Object self,String str1){\n    BTraceUtils.print(\"fun2 str1:\"+str1+\" \");\n}\n\n@OnMethod(clazz = \"me.zks.jvm.troubleshoot.btrace.FirstSample\",\n        method = \"fun1\",\n        location = @Location(value = Kind.RETURN))\npublic static void m2(@Self Object self,String str1,String str2,@Return Void a,@Duration long time){\n    BTraceUtils.print(\"fun1 str1:\"+str1+\" str2:\"+str2+\" Duration is: \"+time+\" \");\n}\n\n}\nAnd sometimes ctrl-c and select exit will cause   jvm throw java.lang.NoSuchMethodError and crash\nbtrace DEBUG: client me.zks.jvm.troubleshoot.btrace.FirstSampleBtrace: got com.sun.btrace.comm.MessageCommand@3d753321\nbtrace DEBUG: client me.zks.jvm.troubleshoot.btrace.FirstSampleBtrace: got com.sun.btrace.comm.MessageCommand@1b4d94a2\nbtrace DEBUG: received exit command\nbtrace DEBUG: client me.zks.jvm.troubleshoot.btrace.FirstSampleBtrace: got com.sun.btrace.comm.ExitCommand@5fb84dcf\nbtrace DEBUG: onExit:\nbtrace DEBUG: cleaning up transformers\nbtrace DEBUG: onExit: removing transformer for me.zks.jvm.troubleshoot.btrace.FirstSampleBtrace\nbtrace DEBUG: removing instrumentation\nbtrace DEBUG: retransforming loaded classes\nbtrace DEBUG: filtering loaded classes\nbtrace DEBUG: candidate class me.zks.jvm.troubleshoot.btrace.FirstSample added\nbtrace DEBUG: client me.zks.jvm.troubleshoot.btrace.FirstSampleBtrace: got com.sun.btrace.comm.RetransformationStartNotification@50d865d7\nbtrace DEBUG: calling retransformClasses (1 classes to be retransformed)\nbtrace DEBUG: Attempting to retransform class: me.zks.jvm.troubleshoot.btrace.FirstSample\nbtrace DEBUG: closing all I/O\nbtrace DEBUG: client me.zks.jvm.troubleshoot.btrace.FirstSampleBtrace: got com.sun.btrace.comm.OkayCommand@6a740814\nbtrace DEBUG: done\nException in thread \"main\" java.lang.NoSuchMethodError: me.zks.jvm.troubleshoot.btrace.FirstSample.$btrace$me$zks$jvm$troubleshoot$btrace$FirstSampleBtrace$m2(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Void;)V\n    at me.zks.jvm.troubleshoot.btrace.FirstSample.fun1(Unknown Source)\n    at me.zks.jvm.troubleshoot.btrace.FirstSample.main(Unknown Source)\n```\nI find I can't set Location=return ? , And if I set Location is Kind.ENTRY, everythings is ok\nI also find that the try catch maybe cause crash\nthe same quesition \nhttps://stackoverflow.com/questions/47256932/strange-things-with-btrace-and-java-lang-nosuchmethoderror\n. ",
    "FlashLightNing": "it is openjdk version \"1.8.0_171\". ",
    "A4Vision": "Thanks for the review! It's really great to contribute to your project. I have pushed the fixes for the issues you've addressed, please let me know if there's anything else that can be improved.\n@jbachorik \n. Thanks for the review! I have pushed the fixes for the issues you've addressed, please let me know if there's anything else that can be improved.\n@jbachorik . Thanks for the review! I have pushed the fixes for the issues you've addressed, please let me know if there's anything else that can be improved.\n@jbachorik . ",
    "gawaine1988": "ok, it seems that my English is not good,  however there is no need to talk dirty. I am sorry that I misunderstood the meaning of 'nit'. I thought 'nit' meant 'stupid'.\nAnd thanks for your comment.. \n| |\n\u6492\u7f51\n\u90ae\u7bb1\uff1agawaine1988@163.com\n|\n\u7b7e\u540d\u7531 \u7f51\u6613\u90ae\u7bb1\u5927\u5e08 \u5b9a\u5236\nOn 09/29/2018 17:02, Jaroslav Bachorik wrote:\nCan you, please, address the comments so I can merge the changes?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\nSorry , I will do that as soon as possible \n. Thank you jbachorik. \nI apologize for the late.. I already changed the original PR. Thank you. Sorry, I haven't pulled request before. Now, I address the comments and rebuild the project successfully on my pc.\nThank you for reviewing my code.. If there are still problems, please comment, I will finish it tomorrow.. hello, jbachorik, I have removed the validation for the 'host'. hi, I have addressed the commented. Sorry for the late . I am sorry (>\ufe4f<). ",
    "codeMonkeyLife": "why don't merge this request please? I think it is neccessry to trace remote program as far as I am concerned.. ",
    "refactormachine": "@jbachorik I've fixed the issues you addressed. ",
    "szhem": "Hi @jbachorik \nSorry for the delayed response.\nBTrace built from latest master hasn't helped.\nHere are the argument passed to JVM\nshell\n-javaagent:./btrace-agent.jar=script=./btrace/ExecutorProbe3.class,stdout=true,trusted=true,debug=true\n... and here is the output\n```\nbtrace DEBUG: parsed command line arguments\nbtrace DEBUG: debugMode is true\nbtrace DEBUG: trustedMode is true\nbtrace DEBUG: stdout is true\nbtrace DEBUG: initial script is /home/szhem/Projects/spark/btrace/ExecutorProbe3.class\nbtrace DEBUG: loading BTrace class\nBTrace Log: 11/26/18 9:53 PM\nbtrace DEBUG: loaded 'btrace.ExecutorProbe3' successfully\nbtrace DEBUG: creating BTraceRuntime instance for btrace.ExecutorProbe3\nbtrace DEBUG: created BTraceRuntime instance for btrace.ExecutorProbe3\nbtrace DEBUG: sending Okay command\nbtrace DEBUG: client btrace.ExecutorProbe3: got com.sun.btrace.comm.OkayCommand@6504e3b2\nbtrace DEBUG: about to defineClass btrace/ExecutorProbe3\nbtrace DEBUG: defineClass succeeded for btrace.ExecutorProbe3\nbtrace DEBUG: new Client created com.sun.btrace.agent.FileClient@5f7dc0eb\nbtrace DEBUG: retransforming loaded classes\nbtrace DEBUG: filtering loaded classes\nbtrace DEBUG: noServer is true, server not started\nbtrace DEBUG: Agent init took: 969926192ns\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandleImpl\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandleImpl$1\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandleImpl$2\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandleImpl$3\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandleImpl$4\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MemberName$Factory\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandleStatics\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandleStatics$1\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/UnsafeStaticBooleanFieldAccessorImpl\nbtrace DEBUG: client btrace.ExecutorProbe3: got com.sun.btrace.comm.OkayCommand@2b8b6041\nbtrace DEBUG: skipping transform for BTrace class sun/security/jca/Providers\nbtrace DEBUG: skipping transform for BTrace class sun/security/jca/ProviderList\nbtrace DEBUG: skipping transform for BTrace class sun/security/jca/ProviderConfig\nbtrace DEBUG: skipping transform for BTrace class sun/security/jca/ProviderList$3\nbtrace DEBUG: skipping transform for BTrace class sun/security/jca/ProviderList$1\nbtrace DEBUG: skipping transform for BTrace class sun/security/jca/ProviderList$2\nbtrace DEBUG: skipping transform for BTrace class sun/security/jca/ProviderConfig$2\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/Sun\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/SunEntries\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/SunEntries$1\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/NativePRNG\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/NativePRNG$Variant\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/NativePRNG$1\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/NativePRNG$2\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/NativePRNG$RandomIO\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/NativePRNG$Blocking\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/NativePRNG$NonBlocking\nbtrace DEBUG: skipping transform for BTrace class sun/security/jca/GetInstance\nbtrace DEBUG: skipping transform for BTrace class sun/security/jca/GetInstance$Instance\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/SecureRandom\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/SHA\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/DigestBase\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/ByteArrayAccess\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/tree/FormalTypeParameter\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/tree/ClassSignature\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/tree/Signature\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/scope/MethodScope\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/repository/MethodRepository\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/repository/ConstructorRepository\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/tree/BottomSignature\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/tree/Wildcard\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/tree/MethodTypeSignature\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/reflectiveObjects/WildcardTypeImpl\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/reflectiveObjects/LazyReflectiveObjectGenerator\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/reflectiveObjects/ParameterizedTypeImpl\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/reflectiveObjects/TypeVariableImpl\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/UnsafeQualifiedObjectFieldAccessorImpl\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/UnsafeQualifiedFieldAccessorImpl\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/UnsafeObjectFieldAccessorImpl\nbtrace DEBUG: skipping transform for BTrace class java/lang/StringIndexOutOfBoundsException\nbtrace DEBUG: skipping transform for BTrace class sun/security/krb5/JavaxSecurityAuthKerberosAccess\nbtrace DEBUG: skipping transform for BTrace class sun/security/krb5/KerberosSecrets\nbtrace DEBUG: skipping transform for BTrace class sun/security/krb5/Config\nbtrace DEBUG: skipping transform for BTrace class sun/security/krb5/internal/Krb5\nbtrace DEBUG: skipping transform for BTrace class sun/security/krb5/KrbException\nbtrace DEBUG: skipping transform for BTrace class sun/security/krb5/Config$FileExistsAction\nbtrace DEBUG: skipping transform for BTrace class sun/security/krb5/Config$1\nbtrace DEBUG: skipping transform for BTrace class sun/security/krb5/Config$2\nWARN  | NativeCodeLoader | ScalaTest-run-running-MeetupSpec | Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/LambdaMetafactory\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandles$Lookup\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodType$ConcurrentWeakInternSet\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodTypeForm\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/Invokers\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodType$ConcurrentWeakInternSet$WeakEntry\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandles\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/LambdaForm$BasicType\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/LambdaForm$Name\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/LambdaForm$NamedFunction\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/SimpleMethodHandle\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/BoundMethodHandle\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/BoundMethodHandle$SpeciesData\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/BoundMethodHandle$Factory\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/BoundMethodHandle$Species_L\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/DirectMethodHandle$Lazy\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/InvokerBytecodeGenerator\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandleImpl$Intrinsic\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/InvokerBytecodeGenerator$2\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/InvokerBytecodeGenerator$CpPatch\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/DirectMethodHandle$Accessor\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandleImpl$AsVarargsCollector\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/DelegatingMethodHandle\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/WrongMethodTypeException\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandleImpl$Lazy\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandleImpl$IntrinsicMethodHandle\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/LambdaFormEditor\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/LambdaFormEditor$Transform$Kind\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/LambdaFormEditor$Transform\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/LambdaFormBuffer\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/BoundMethodHandle$SpeciesData$1\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/BoundMethodHandle$Factory$1\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/BoundMethodHandle$Species_LL\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/UnsafeStaticObjectFieldAccessorImpl\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/BoundMethodHandle$Species_L3\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/BoundMethodHandle$Species_L4\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/InnerClassLambdaMetafactory\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/AbstractValidatingLambdaMetafactory\nbtrace DEBUG: skipping transform for BTrace class sun/security/util/SecurityConstants\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/InfoFromMemberName\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/MethodHandleInfo\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/TypeConvertingMethodAdapter\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/InnerClassLambdaMetafactory$1\nbtrace DEBUG: skipping transform for BTrace class java/lang/invoke/DirectMethodHandle$Special\nWARN  | SparkConf | ScalaTest-run-running-MeetupSpec | In Spark 1.0 and later spark.local.dir will be overridden by the value set by the cluster manager (via SPARK_LOCAL_DIRS in mesos/standalone and LOCAL_DIRS in YARN).\nWARN  | Utils | ScalaTest-run-running-MeetupSpec | Your hostname, szhem-vb-2 resolves to a loopback address: 127.0.1.1; using 10.0.2.15 instead (on interface eth0)\nWARN  | Utils | ScalaTest-run-running-MeetupSpec | Set SPARK_LOCAL_IP if you need to bind to another address\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/UnsafeLongFieldAccessorImpl\nbtrace DEBUG: skipping transform for BTrace class sun/security/action/GetIntegerAction\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/UnsafeQualifiedStaticIntegerFieldAccessorImpl\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/BootstrapConstructorAccessorImpl\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/scope/ConstructorScope\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/tree/VoidDescriptor\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/repository/FieldRepository\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/UnsafeQualifiedStaticLongFieldAccessorImpl\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/SerializationConstructorAccessorImpl\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/generics/tree/TypeVariableSignature\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/misc/MethodUtil\nbtrace DEBUG: skipping transform for BTrace class sun/reflect/misc/MethodUtil$1\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/MD5\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/SHA2$SHA256\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/SHA2\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/SHA5$SHA512\nbtrace DEBUG: skipping transform for BTrace class sun/security/provider/SHA5\n[Stage 0:>                                                          (0 + 0) / 5]***\n\n\n\n\n\nbtrace DEBUG: java.lang.ArrayIndexOutOfBoundsException: 8\njava.lang.ArrayIndexOutOfBoundsException: 8\n    at com.sun.btrace.runtime.InstrumentingMethodVisitor.computeFrameLocals(InstrumentingMethodVisitor.java:1337)\n    at com.sun.btrace.runtime.InstrumentingMethodVisitor.visitFrame(InstrumentingMethodVisitor.java:427)\n    at com.sun.btrace.org.objectweb.asm.MethodVisitor.visitFrame(Unknown Source)\n    at com.sun.btrace.org.objectweb.asm.MethodVisitor.visitFrame(Unknown Source)\n    at com.sun.btrace.org.objectweb.asm.MethodVisitor.visitFrame(Unknown Source)\n    at com.sun.btrace.org.objectweb.asm.MethodVisitor.visitFrame(Unknown Source)\n    at com.sun.btrace.org.objectweb.asm.ClassReader.a(Unknown Source)\n    at com.sun.btrace.org.objectweb.asm.ClassReader.b(Unknown Source)\n    at com.sun.btrace.org.objectweb.asm.ClassReader.accept(Unknown Source)\n    at com.sun.btrace.runtime.BTraceClassReader.accept(BTraceClassReader.java:174)\n    at com.sun.btrace.org.objectweb.asm.ClassReader.accept(Unknown Source)\n    at com.sun.btrace.runtime.BTraceClassReader.accept(BTraceClassReader.java:183)\n    at com.sun.btrace.runtime.InstrumentUtils.accept(InstrumentUtils.java:177)\n    at com.sun.btrace.runtime.InstrumentUtils.accept(InstrumentUtils.java:171)\n    at com.sun.btrace.runtime.BTraceClassWriter.instrument(BTraceClassWriter.java:82)\n    at com.sun.btrace.runtime.BTraceTransformer.transform(BTraceTransformer.java:184)\n    at sun.instrument.TransformerManager.transform(TransformerManager.java:188)\n    at sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:428)\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:763)\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\n    at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)\n    at java.net.URLClassLoader.access$100(URLClassLoader.java:73)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:368)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:362)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:361)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at org.apache.spark.shuffle.BlockStoreShuffleReader.read(BlockStoreShuffleReader.scala:45)\n    at org.apache.spark.rdd.CoGroupedRDD$$anonfun$compute$2.apply(CoGroupedRDD.scala:148)\n    at org.apache.spark.rdd.CoGroupedRDD$$anonfun$compute$2.apply(CoGroupedRDD.scala:137)\n    at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)\n    at scala.collection.immutable.List.foreach(List.scala:381)\n    at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)\n    at org.apache.spark.rdd.CoGroupedRDD.compute(CoGroupedRDD.scala:137)\n    at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)\n    at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)\n    at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)\n    at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)\n    at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)\n    at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38)\n    at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)\n    at org.apache.spark.rdd.RDD.iterator(RDD.scala:287)\n    at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87)\n    at org.apache.spark.scheduler.Task.run(Task.scala:109)\n    at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:338)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n    at java.lang.Thread.run(Thread.java:748)\nbtrace DEBUG: client btrace.ExecutorProbe3: got com.sun.btrace.comm.ExitCommand@254c8b40\nbtrace DEBUG: onExit:\nbtrace DEBUG: cleaning up transformers\nbtrace DEBUG: onExit: removing transformer for btrace.ExecutorProbe3\nbtrace DEBUG: removing instrumentation\nbtrace DEBUG: retransforming loaded classes\nbtrace DEBUG: filtering loaded classes\nbtrace DEBUG: candidate class org.apache.spark.storage.ShuffleBlockFetcherIterator added\nbtrace DEBUG: client btrace.ExecutorProbe3: got com.sun.btrace.comm.RetransformationStartNotification@5298ea21\nbtrace DEBUG: calling retransformClasses (1 classes to be retransformed)\nbtrace DEBUG: Attempting to retransform class: org.apache.spark.storage.ShuffleBlockFetcherIterator\nbtrace DEBUG: closing all I/O\n```\n. ",
    "SystemOutPrint": "java.lang.VerifyError\n        at sun.instrument.InstrumentationImpl.retransformClasses0(Native Method)\n        at sun.instrument.InstrumentationImpl.retransformClasses(InstrumentationImpl.java:144)\n        at com.sun.btrace.agent.Client.retransformLoaded(Client.java:484)\n        at com.sun.btrace.agent.Client.onExit(Client.java:251)\n        at com.sun.btrace.agent.RemoteClient.onCommand(RemoteClient.java:142)\n        at com.sun.btrace.agent.RemoteClient$1.run(RemoteClient.java:96)\n        at java.lang.Thread.run(Thread.java:745). ",
    "shidongwa": "\nYes, experienced deadlocks on Spark 2.3 - the probes are close-source so I can not share more.\n\nHi Jaroslav, could you please describe your deadlock case ( code  not need)? I am wondering if you have customized   and defined ClassLoader like us :). ",
    "Vant1032": "btrace WARNING: BTrace system classpath resource [C:\\Program Files\\Java\\jdk-11.0.1/../lib/tools.jar] does not exist.\nException in thread \"Attach Listener\" java.lang.reflect.InvocationTargetException\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.base/java.lang.reflect.Method.invoke(Method.java:566)\n    at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:513)\n    at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallAgentmain(InstrumentationImpl.java:535)\nCaused by: java.lang.NoClassDefFoundError: sun/reflect/Reflection\n    at com.sun.btrace.BTraceRuntime.<clinit>(BTraceRuntime.java:211)\n    at com.sun.btrace.agent.Main.main(Main.java:134)\n    at com.sun.btrace.agent.Main.agentmain(Main.java:93)\n    ... 6 more. ",
    "ougyou": "introduce the professional tools for you, it's easy to do anything  with no coding.\nhttps://github.com/alibaba/arthas . > @ougyou What does this comment help with the reported issue?\nno help for the issue, just want to help devwebcl with  the easy tools to slove the problem. \n@jbachorik   firstly, i have no idea to promote the tool,. because i used  btrace for just 2 years ago,\nit's usually for me that  i have no choice but to coding to find the bugs that caused by some wrong value or etc... \n. ",
    "devwebcl": "yes, I have used that argument, but I received a message that port was already in use for btrace.\nwell, after restarting it is working again.\nthanks for the quick answer.\n. thanks for the help.\nI didn't know arthas either. it looks good.\n. ",
    "adriancole": "I think this is one of those that optimizes itself out (iirc javac does this)\n. "
}