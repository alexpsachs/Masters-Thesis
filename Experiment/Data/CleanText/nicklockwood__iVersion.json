{
    "nicklockwood": "Nice catch - I normally use the delegate methods to display the new version alert in my apps so I didn't notice that the standard iOS alert was broken.\n. showOnFirstLaunch only applies to the local release notes, not the remote notes. Sorry, the documentation could probably be clearer about this.\n. That sounds more like a bug in iOS5 than a problem with iVersion, but I'll investigate.\nNick\n(Sent from my iPhone)\nOn 25 Sep 2011, at 00:48, skicrazy27 reply@reply.github.com wrote:\n\nOn the latest beta (7) of iOS 5, iVersion has issues. There seems to be a lack of support for a scrolling view in a popup. It works perfectly in the Simulator and on iOS 4.x devices, but I'm sure the view hierarchy in iOS 5 has screwed things up.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/issues/3\n. I've tried this with the latest iVersion on the final release of iOS5 and it seems to be rendering fine - I guess Apple fixed the layout issue.\n. When I checked a while ago it didn't seem to include apps but it now does. It will be a fairly big job to refactor to use that, but I think it's definitely worth doing for the next release.\n. I've updated the bundled web service to call Apple's official API which is much less fragile than screen scraping and allows you to return localised release notes. This is output-compatible with the previous implementation, so you don't need to update the client code.\n\nIn a future release I may update iVersion to call the Apple APIs directly as this avoids the need for an intermediate service, but right now I think this is the least disruptive solution.\n. They've slightly changed the HTML for the page. I'll update the library, but in the meantime you can fix it by changing this line:\nif (preg_match('/Current Version:\\s_<\\/span>\\s_([0-9.]+)/i', $html, $matches))\nto\nif (preg_match('/Version:\\s_<\\/span>\\s_([0-9.]+)/i', $html, $matches))\n. Note: you won't see the result right aways unless you also disable caching or delete the cache file.\n. Fixed\n. Good call, I'll look at adding a check for it.\nIn the meantime, you can override the version number manually in your iVersion setup by saying\n[iVersion sharedInstance]. applicationVersion = [[NSBundle mainBundle] objectForInfoDictionaryKey:@\"CFBundleShortVersionString\"];\nBut you probably knew that already ;-)\nNick\nOn 18 Nov 2011, at 14:25, Matt Coneybeare wrote:\n\nA common project setup is to increment the bundle version every build and use the short version string to display the human readable version.\nFor example, \nCFBundleVersion => 1439\nCFBundleShortVersionString => 1.0.2\nI think that if the CFBundleShortVersionString key exists, it should be used for comparison and display in the app, not the CFBundleVersion\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/issues/7\n. As of iVersion 1.7.1, CFBundleShortVersionString is now used preferentially if available\n. Whoops, good catch.\n. You're probably setting the delegate from within the\n\n+(void)initialize\nmethod, which is a class method, so \"self\" refers to the class. You'll need to set the iVersion delegate from within the\n-(void)application:didFinishLaunchingWithOptions:\nmethod instead, which is an instance method, so the \"self\" refers to the instance.\nSorry, the documentation isn't very clear on that point.\n. Are you using the LLVM Compiler?\n. No, you need to use Apple LLVM Compiler 3, not LLVM GCC 4.2.\nLLVM Compiler 3 (or 3.1) is now the default, you shouldn't have any problems if you switch to it.\n. If you really can't use LLVM compiler 3 for some reason, then your options are either:\n1) strip out all the strong references from iVersion yourself\n2) Use an older version of iVersion before I added ARC support (all the historic release versions are tagged as separate downloads on github)\nI'd strongly suggest that you try to just fix the old code that doesn't work with the LLVM compiler though - if you tell me what errors you are getting I can probably give you some tips.\n. You can update the project to ARC without actually converting any of the files to ARC. Use the ARC Conversion utility in the Edit > Refactor menu then just untick all the files you don't want to convert (which can be every file in your project if you want).\nThe ARC conversion tool will then mark all those files with -fno-objc-arc so that they won't throw errors under ARC, but it won't change their code at all, so you won't have any problems.\n. Good idea. I've added a modified version of this into 1.9 - I'm using the user locale to determine the default appStoreCountry so in principle you shouldn't need to set it yourself.\nIt's possible of course that the user's device locale doesn't match the iTunes store country they used to download the app (e.g. if they're an emigrant/immigrant) but that's such an edge case that it's probably not worth worrying about for non-critical functionality like iVersion updates.\n. Yes, I suspected that might be the case, and also some smaller countries share an iTunes store I believe rather than having their own, but it doesn't actually matter if the market it uses is the wrong one, so long as the app is available on it.\nI'm guessing that very few apps are available only in Denmark or Sweden and not also in the US or UK, so those users will mostly just see the market details for UK or US, which will still be correct anyway.\nIn cases where the app isn't available in the US or UK, the developer can just override the country code and set it to DK or SE, but the purpose of a default value is to work for the majority, and I think having a default of the device locale will work correctly in more cases than having a default of US.\n. Yeah, sorry - I didn't make that very clear.\n. Right on both counts - I've fixed this for 1.9.1\n. It's not clear to me that dataWithContentsOfURL is any different from calling sendSynchronousRequest with the default timeout (which is 4 minutes, I think).\nIt's only called once per session, and it won't block other requests because I'm calling it on a background thread, so I think it's okay.\nIt would be better to use an async request on the main runloop, but this would substantially complicate the code unless I use a 3rd party network library, which I'd like to avoid.\n. As of version 1.9.4, iVersion sets an explicit 30-second timeout for checks and uses a boolean flag to avoid spawning multiple download threads. Thanks for the suggestion.\n. Brilliant - I'll include this in the next update. How did you find this by the way? I couldn't find any documentation for these URLs anywhere.\n. Thanks for the tip, I've included this URL in version 1.9.4\n. Whoop, well spotted. Thanks.\n. Okay, you're absolutely right. How strange. The lang key seems to affect some values, such as the genres, but not the app description or release notes.\nI'm going to have to verify exactly which parameters I need to keep, so I'm not going to merge your fix as-is, but thank you for pointing this out.\n. Okay, this is fixed in 1.9.6. Thanks again for the tip.\n. iVersion already works on LLVM 4.0 - I think whatever problem you were having must be an issue specific to your project. Try the example projects and see if you have the same issue.\n. Does it happen with the example apps, it just your project? Which OS version and device was it specifically?\n. Have you checked your prefix.pch file? Perhaps there's something in there.\n. Another possibility is a conflict with a category. Do you have any categories in the app that extend NSObject?\n. I've identified the problem. I missed the critical detail that this bug was specific to iOS 4.x and Xcode 4.4 (LLVM 4.0). I apologise for not paying closer attention to your bug report.\nThe issue appears to be that as of LLVM 4.0, the + (void)load method now fires before ARCLite has fully loaded. I've kept the load method but deferred setup until the main runloop has started, and this fixes the crash.\nThanks for reporting this, and sorry again for not investigating it properly until now. The fix is included in version 1.9.7.\n. The description key and the releaseNotes keys serve different purposes. The description key is the app description, which typically doesn't change between releases. The releaseNotes states what's new in a specific release, and that's the key that iVersion is supposed to display.\nIf you're not seeing any release notes whilst testing, it's probably because your app is still at version 1.0, so it doesn't have any release notes yet. If you check the example app however you will see that this is working correctly.\n. There's no app store on the simulator - try on an actual iDevice.\n. Ah, sorry, I didn't see that you'd said it opens the app store.\nWhat version is your app on currently? The link may not work if the app is on version 1.0 as there is no release notes page.\n. It sounds like it should be working. Can you tell me the exact URL it's trying to open (including app ID) and I will investigate.\n. I just tried opening that link on my iPhone running iOS 5.1.1 and it worked fine.\nWhat iOS version are you running?\nAre you logged into the App Store on your device with an iTunes sandbox user instead of your normal Apple ID by any chance? That sometimes causes the App Store to behave strangely.\n. Since your app is available worldwide and is already in the store, you don't need to set any properties on iVersion in your initialize method, it will get everything it needs automatically from the bundle ID in your info.plist.\nThere's no reason why it shouldn't be working though. I opened that URL directly on my phone just by tapping the link from github in Safari and it worked correctly, so the problem is not inside iVersion.\nTry using the following code. It should fix the problem, although I'm still not sure why you're having the problem in the first place:\n+ (void)initialize\n{\n    [iVersion sharedInstance].updateURL=[NSURL URLWithString:@\"itms-apps://itunes.apple.com/app/id353599677\"];\n}\n. Is your app supposed to be available in the turkish store?\n. I get the same error if I change the store in iTunes on my MacBook and then try opening this URL in desktop Safari:\nhttp://ax.itunes.apple.com/WebObjects/MZStore.woa/wa/viewSoftwareUpdate?id=353599677\n(This is the same URL that iVersion uses but with itms-apps: replaced with http: so it works on the desktop).\nI think the problem is that your app isn't available in Turkey. Not sure why that would be.\n. I've included a modified version of the scrollview logic. I've not merged the static lib project because you can use pods instead or its relatively easy to create a static lib yourself if not.\nThanks.\n. Hi, thanks for the pull request.\nThe decision not to use app store details if details are not included in the plist was deliberate, for two reasons:\n1) Sometimes you want to delay telling people about a new release until you've had time to check it's all working OK.\n2) If you are using a custom plist then there's a reason. Displaying the app store details in this case is probably not what the developer wants.\nWith respect to the second fix \"Only show change log versions up to the current latest version in the App Store\" - I'm not actually sure what this means, can you clarify?\n. Of course I don't claim to know people's preferences - I only design the library for my own preferences and then listen to feedback :-)\nWith regard to releasing apps that haven't been checked, one could argue that if you've tested your app that thoroughly, you should also have tested that the iVersion plist has been updated :-)\nIf you have not included a plist entry for a particular version, iVersion is supposed to not notify the user at all, not to display an update alert with no release notes. If you find that's not the case, that's a bug and I'll fix it.\nIf you include the entry but leave it blank then you'll get an alert without release notes, but again, that's by design (maybe you don't want to display the release notes).\nI could add a preferences for this, and I'll consider it. But generally I try to avoid adding features unless they are absolutely necessary because I want the library to be as simple to use as possible, and each extra option makes it more complicated to understand and use.\nWith regard to your second fix, that is how it's supposed to work, and I thought it worked that way already. I'll check - thanks for the heads up.\n. OK, I've added the preference and merged your fix. Thanks.\nNote: With the useAppStoreDetailsIfNoPlistEntryFound option enabled, a blank Plist entry will still result in no release notes being shown in the alert.\n. Damn. Excellent blog post, and I agree with the conclusion.\nTo be clear:\n1) I don't think that iVersion violates the letter or spirit of the App Store guidelines. What Apple is trying to avoid is the use of frameworks like Sparkle that actually download and install code outside of the App Store sandbox, or might lure people to download a non-App Store version of the App in the guise of an update.\n2) I don't advise trying to sneak stuff past the Apple reviewers, or deliberately breaking the rules and trying to get away with it. The rules are there to keep users safe, and they are (mostly) quite reasonable.\nBut yeah, less is more when it comes to explaining your app to the reviewers. I would suggest a policy of waiting for them to ask rather than volunteering information (I've submitted Mac apps with the network permission without explanation before - most apps require network access for analytics, etc and I don't think they normally question it).\nIn future it might be a good idea to include some other network-related feature such as an online help page or about screen, or another library such as iRate that is easier to explain to an overworked Apple reviewer :-)\n. Fixed in 1.10.2\n. Are you still having this issue? I tried it on 5.1.1 and it seems to be fine, but I don't have any 5.0.1 devices to test on.\n. I've changed the URL anyway just in case since there isn't a huge advantage to linking directly to the release notes.\n. Hi, thanks for this. It's an interesting idea. I'm not 100% sure about the implementation. I'll need to think about it a bit.\n. You can use the delegate for this. iVersion will call\n- (void)iVersionDidDetectNewVersion:(NSString *)version details:(NSString *)versionDetails;\non your delegate when it detects a new version. This happens automatically on launch but if you want to trigger the check again, call checkForNewVersiom.\n. It sounds like the iVersion.m file hasn't been included in your build target. Check that it's ticked for your target.\n. I think the time may have come to simply drop iOS 4.x support so I can use NSJSONSerializer instead of my makeshift solution. I'll have a think about it.\nIn the meantime, can you just remove the quotes from your description?\n. OK, 1.10.4 uses NSJSONSerializer if available, which should fix this problem.\n. What OS/device is this on? Can you try on the example and see if the same thing happens?\n. Just set [iVersion sharedInstance].updateURL to whatever the URL is for your update page.\n. iVersion will always check the App Store, but it should work anyway even if it doesn't find your app on there. What does it say in the logs? (also, make sure you're using the latest version).\n. Which version of iVersion are you using?\n. OK, well the current version is 1.11 beta, so it's probably worth upgrading and seeing if it fixes your problem. I don't see any reason why you would need to release two updates -> Just release a new one, and run it once with previewMode = YES on all locales you support before you release it to make sure it works correctly (set previewMode = NO before you submit it). \n. iVersion doesn't currently have the feature of showing the latest installed version's release notes automatically from the app store. This is a good idea, and something I've been thinking about adding, especially now that auto-updating on iOS 7 has made the other functionality less important.\n. Sorry I never got back about this. Let me know if you're still experiencing this issue.\n. Yes, that's correct. Notifying users of what's new after they've updated is supported, but currently you have to do it by including a plist containing release notes in the app - it's not automatic (yet).\n. Thanks, I've merged the fix into 1.11\n. You're mistaken. Window is a property of the AppDelegate protocol, and it is enforced (you'll get a compiler warning if you don't implement the window property on your delegate, and your app will crash on launch if it's nil).\nConversely, using application keyWindow is unsafe because the keyWindow won't == the main window if a UIAlertView is on screen at the point when you call it.\n. It would only be a problem if the user was making an app that only runs on iOS 4, since any app that supports the iOS5+ SDK is required to have the window property, even if it also works on 4.3x.\n. You don't need to change your workflow or modify the library, you can use the current beta version by putting this in your pod file:\npod 'iVersion', :git => 'https://github.com/nicklockwood/iVersion.git'\n. Fixed in 1.11\n. This no longer occurs in latest release.\n. It's hard to prove a negative, but I don't see how iVersion can be to blame here. All it does is direct you to the App Store - after that the actual download process is entirely outside my control, and should be no different to just opening the store yourself.\nThe only possibility I can think of is that the URL is wrong, but if that were the case it seems like I'd be seeing more reports of this.\n. Fixed in 1.11\n. I don't understand what you mean.\n. This is fixed in 1.11.\n. Done.\n. Fixed in 1.11.4.\n. There's no simple option to do this, but you can use the delegate to implement a custom prompt and display whatever info you choose.. Fixed in 1.11.5. Fixed in 1.11.5. @uliwitness I don't disagree. This code predates GCD (iOS 3.x), and has no unit tests, so there's a significant cost/benefit issue with refactoring it. If I ever need to use it myself in a new application, I'll consider a rewrite.. If the remoteVersionsPlist is set then iVersion will always use it. You say it's workingon debug - does it also work if you run a releasw buils locally?. Nice catch - I normally use the delegate methods to display the new version alert in my apps so I didn't notice that the standard iOS alert was broken.\n. showOnFirstLaunch only applies to the local release notes, not the remote notes. Sorry, the documentation could probably be clearer about this.\n. That sounds more like a bug in iOS5 than a problem with iVersion, but I'll investigate.\nNick\n(Sent from my iPhone)\nOn 25 Sep 2011, at 00:48, skicrazy27 reply@reply.github.com wrote:\n\nOn the latest beta (7) of iOS 5, iVersion has issues. There seems to be a lack of support for a scrolling view in a popup. It works perfectly in the Simulator and on iOS 4.x devices, but I'm sure the view hierarchy in iOS 5 has screwed things up.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/issues/3\n. I've tried this with the latest iVersion on the final release of iOS5 and it seems to be rendering fine - I guess Apple fixed the layout issue.\n. When I checked a while ago it didn't seem to include apps but it now does. It will be a fairly big job to refactor to use that, but I think it's definitely worth doing for the next release.\n. I've updated the bundled web service to call Apple's official API which is much less fragile than screen scraping and allows you to return localised release notes. This is output-compatible with the previous implementation, so you don't need to update the client code.\n\nIn a future release I may update iVersion to call the Apple APIs directly as this avoids the need for an intermediate service, but right now I think this is the least disruptive solution.\n. They've slightly changed the HTML for the page. I'll update the library, but in the meantime you can fix it by changing this line:\nif (preg_match('/Current Version:\\s_<\\/span>\\s_([0-9.]+)/i', $html, $matches))\nto\nif (preg_match('/Version:\\s_<\\/span>\\s_([0-9.]+)/i', $html, $matches))\n. Note: you won't see the result right aways unless you also disable caching or delete the cache file.\n. Fixed\n. Good call, I'll look at adding a check for it.\nIn the meantime, you can override the version number manually in your iVersion setup by saying\n[iVersion sharedInstance]. applicationVersion = [[NSBundle mainBundle] objectForInfoDictionaryKey:@\"CFBundleShortVersionString\"];\nBut you probably knew that already ;-)\nNick\nOn 18 Nov 2011, at 14:25, Matt Coneybeare wrote:\n\nA common project setup is to increment the bundle version every build and use the short version string to display the human readable version.\nFor example, \nCFBundleVersion => 1439\nCFBundleShortVersionString => 1.0.2\nI think that if the CFBundleShortVersionString key exists, it should be used for comparison and display in the app, not the CFBundleVersion\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/issues/7\n. As of iVersion 1.7.1, CFBundleShortVersionString is now used preferentially if available\n. Whoops, good catch.\n. You're probably setting the delegate from within the\n\n+(void)initialize\nmethod, which is a class method, so \"self\" refers to the class. You'll need to set the iVersion delegate from within the\n-(void)application:didFinishLaunchingWithOptions:\nmethod instead, which is an instance method, so the \"self\" refers to the instance.\nSorry, the documentation isn't very clear on that point.\n. Are you using the LLVM Compiler?\n. No, you need to use Apple LLVM Compiler 3, not LLVM GCC 4.2.\nLLVM Compiler 3 (or 3.1) is now the default, you shouldn't have any problems if you switch to it.\n. If you really can't use LLVM compiler 3 for some reason, then your options are either:\n1) strip out all the strong references from iVersion yourself\n2) Use an older version of iVersion before I added ARC support (all the historic release versions are tagged as separate downloads on github)\nI'd strongly suggest that you try to just fix the old code that doesn't work with the LLVM compiler though - if you tell me what errors you are getting I can probably give you some tips.\n. You can update the project to ARC without actually converting any of the files to ARC. Use the ARC Conversion utility in the Edit > Refactor menu then just untick all the files you don't want to convert (which can be every file in your project if you want).\nThe ARC conversion tool will then mark all those files with -fno-objc-arc so that they won't throw errors under ARC, but it won't change their code at all, so you won't have any problems.\n. Good idea. I've added a modified version of this into 1.9 - I'm using the user locale to determine the default appStoreCountry so in principle you shouldn't need to set it yourself.\nIt's possible of course that the user's device locale doesn't match the iTunes store country they used to download the app (e.g. if they're an emigrant/immigrant) but that's such an edge case that it's probably not worth worrying about for non-critical functionality like iVersion updates.\n. Yes, I suspected that might be the case, and also some smaller countries share an iTunes store I believe rather than having their own, but it doesn't actually matter if the market it uses is the wrong one, so long as the app is available on it.\nI'm guessing that very few apps are available only in Denmark or Sweden and not also in the US or UK, so those users will mostly just see the market details for UK or US, which will still be correct anyway.\nIn cases where the app isn't available in the US or UK, the developer can just override the country code and set it to DK or SE, but the purpose of a default value is to work for the majority, and I think having a default of the device locale will work correctly in more cases than having a default of US.\n. Yeah, sorry - I didn't make that very clear.\n. Right on both counts - I've fixed this for 1.9.1\n. It's not clear to me that dataWithContentsOfURL is any different from calling sendSynchronousRequest with the default timeout (which is 4 minutes, I think).\nIt's only called once per session, and it won't block other requests because I'm calling it on a background thread, so I think it's okay.\nIt would be better to use an async request on the main runloop, but this would substantially complicate the code unless I use a 3rd party network library, which I'd like to avoid.\n. As of version 1.9.4, iVersion sets an explicit 30-second timeout for checks and uses a boolean flag to avoid spawning multiple download threads. Thanks for the suggestion.\n. Brilliant - I'll include this in the next update. How did you find this by the way? I couldn't find any documentation for these URLs anywhere.\n. Thanks for the tip, I've included this URL in version 1.9.4\n. Whoop, well spotted. Thanks.\n. Okay, you're absolutely right. How strange. The lang key seems to affect some values, such as the genres, but not the app description or release notes.\nI'm going to have to verify exactly which parameters I need to keep, so I'm not going to merge your fix as-is, but thank you for pointing this out.\n. Okay, this is fixed in 1.9.6. Thanks again for the tip.\n. iVersion already works on LLVM 4.0 - I think whatever problem you were having must be an issue specific to your project. Try the example projects and see if you have the same issue.\n. Does it happen with the example apps, it just your project? Which OS version and device was it specifically?\n. Have you checked your prefix.pch file? Perhaps there's something in there.\n. Another possibility is a conflict with a category. Do you have any categories in the app that extend NSObject?\n. I've identified the problem. I missed the critical detail that this bug was specific to iOS 4.x and Xcode 4.4 (LLVM 4.0). I apologise for not paying closer attention to your bug report.\nThe issue appears to be that as of LLVM 4.0, the + (void)load method now fires before ARCLite has fully loaded. I've kept the load method but deferred setup until the main runloop has started, and this fixes the crash.\nThanks for reporting this, and sorry again for not investigating it properly until now. The fix is included in version 1.9.7.\n. The description key and the releaseNotes keys serve different purposes. The description key is the app description, which typically doesn't change between releases. The releaseNotes states what's new in a specific release, and that's the key that iVersion is supposed to display.\nIf you're not seeing any release notes whilst testing, it's probably because your app is still at version 1.0, so it doesn't have any release notes yet. If you check the example app however you will see that this is working correctly.\n. There's no app store on the simulator - try on an actual iDevice.\n. Ah, sorry, I didn't see that you'd said it opens the app store.\nWhat version is your app on currently? The link may not work if the app is on version 1.0 as there is no release notes page.\n. It sounds like it should be working. Can you tell me the exact URL it's trying to open (including app ID) and I will investigate.\n. I just tried opening that link on my iPhone running iOS 5.1.1 and it worked fine.\nWhat iOS version are you running?\nAre you logged into the App Store on your device with an iTunes sandbox user instead of your normal Apple ID by any chance? That sometimes causes the App Store to behave strangely.\n. Since your app is available worldwide and is already in the store, you don't need to set any properties on iVersion in your initialize method, it will get everything it needs automatically from the bundle ID in your info.plist.\nThere's no reason why it shouldn't be working though. I opened that URL directly on my phone just by tapping the link from github in Safari and it worked correctly, so the problem is not inside iVersion.\nTry using the following code. It should fix the problem, although I'm still not sure why you're having the problem in the first place:\n+ (void)initialize\n{\n    [iVersion sharedInstance].updateURL=[NSURL URLWithString:@\"itms-apps://itunes.apple.com/app/id353599677\"];\n}\n. Is your app supposed to be available in the turkish store?\n. I get the same error if I change the store in iTunes on my MacBook and then try opening this URL in desktop Safari:\nhttp://ax.itunes.apple.com/WebObjects/MZStore.woa/wa/viewSoftwareUpdate?id=353599677\n(This is the same URL that iVersion uses but with itms-apps: replaced with http: so it works on the desktop).\nI think the problem is that your app isn't available in Turkey. Not sure why that would be.\n. I've included a modified version of the scrollview logic. I've not merged the static lib project because you can use pods instead or its relatively easy to create a static lib yourself if not.\nThanks.\n. Hi, thanks for the pull request.\nThe decision not to use app store details if details are not included in the plist was deliberate, for two reasons:\n1) Sometimes you want to delay telling people about a new release until you've had time to check it's all working OK.\n2) If you are using a custom plist then there's a reason. Displaying the app store details in this case is probably not what the developer wants.\nWith respect to the second fix \"Only show change log versions up to the current latest version in the App Store\" - I'm not actually sure what this means, can you clarify?\n. Of course I don't claim to know people's preferences - I only design the library for my own preferences and then listen to feedback :-)\nWith regard to releasing apps that haven't been checked, one could argue that if you've tested your app that thoroughly, you should also have tested that the iVersion plist has been updated :-)\nIf you have not included a plist entry for a particular version, iVersion is supposed to not notify the user at all, not to display an update alert with no release notes. If you find that's not the case, that's a bug and I'll fix it.\nIf you include the entry but leave it blank then you'll get an alert without release notes, but again, that's by design (maybe you don't want to display the release notes).\nI could add a preferences for this, and I'll consider it. But generally I try to avoid adding features unless they are absolutely necessary because I want the library to be as simple to use as possible, and each extra option makes it more complicated to understand and use.\nWith regard to your second fix, that is how it's supposed to work, and I thought it worked that way already. I'll check - thanks for the heads up.\n. OK, I've added the preference and merged your fix. Thanks.\nNote: With the useAppStoreDetailsIfNoPlistEntryFound option enabled, a blank Plist entry will still result in no release notes being shown in the alert.\n. Damn. Excellent blog post, and I agree with the conclusion.\nTo be clear:\n1) I don't think that iVersion violates the letter or spirit of the App Store guidelines. What Apple is trying to avoid is the use of frameworks like Sparkle that actually download and install code outside of the App Store sandbox, or might lure people to download a non-App Store version of the App in the guise of an update.\n2) I don't advise trying to sneak stuff past the Apple reviewers, or deliberately breaking the rules and trying to get away with it. The rules are there to keep users safe, and they are (mostly) quite reasonable.\nBut yeah, less is more when it comes to explaining your app to the reviewers. I would suggest a policy of waiting for them to ask rather than volunteering information (I've submitted Mac apps with the network permission without explanation before - most apps require network access for analytics, etc and I don't think they normally question it).\nIn future it might be a good idea to include some other network-related feature such as an online help page or about screen, or another library such as iRate that is easier to explain to an overworked Apple reviewer :-)\n. Fixed in 1.10.2\n. Are you still having this issue? I tried it on 5.1.1 and it seems to be fine, but I don't have any 5.0.1 devices to test on.\n. I've changed the URL anyway just in case since there isn't a huge advantage to linking directly to the release notes.\n. Hi, thanks for this. It's an interesting idea. I'm not 100% sure about the implementation. I'll need to think about it a bit.\n. You can use the delegate for this. iVersion will call\n- (void)iVersionDidDetectNewVersion:(NSString *)version details:(NSString *)versionDetails;\non your delegate when it detects a new version. This happens automatically on launch but if you want to trigger the check again, call checkForNewVersiom.\n. It sounds like the iVersion.m file hasn't been included in your build target. Check that it's ticked for your target.\n. I think the time may have come to simply drop iOS 4.x support so I can use NSJSONSerializer instead of my makeshift solution. I'll have a think about it.\nIn the meantime, can you just remove the quotes from your description?\n. OK, 1.10.4 uses NSJSONSerializer if available, which should fix this problem.\n. What OS/device is this on? Can you try on the example and see if the same thing happens?\n. Just set [iVersion sharedInstance].updateURL to whatever the URL is for your update page.\n. iVersion will always check the App Store, but it should work anyway even if it doesn't find your app on there. What does it say in the logs? (also, make sure you're using the latest version).\n. Which version of iVersion are you using?\n. OK, well the current version is 1.11 beta, so it's probably worth upgrading and seeing if it fixes your problem. I don't see any reason why you would need to release two updates -> Just release a new one, and run it once with previewMode = YES on all locales you support before you release it to make sure it works correctly (set previewMode = NO before you submit it). \n. iVersion doesn't currently have the feature of showing the latest installed version's release notes automatically from the app store. This is a good idea, and something I've been thinking about adding, especially now that auto-updating on iOS 7 has made the other functionality less important.\n. Sorry I never got back about this. Let me know if you're still experiencing this issue.\n. Yes, that's correct. Notifying users of what's new after they've updated is supported, but currently you have to do it by including a plist containing release notes in the app - it's not automatic (yet).\n. Thanks, I've merged the fix into 1.11\n. You're mistaken. Window is a property of the AppDelegate protocol, and it is enforced (you'll get a compiler warning if you don't implement the window property on your delegate, and your app will crash on launch if it's nil).\nConversely, using application keyWindow is unsafe because the keyWindow won't == the main window if a UIAlertView is on screen at the point when you call it.\n. It would only be a problem if the user was making an app that only runs on iOS 4, since any app that supports the iOS5+ SDK is required to have the window property, even if it also works on 4.3x.\n. You don't need to change your workflow or modify the library, you can use the current beta version by putting this in your pod file:\npod 'iVersion', :git => 'https://github.com/nicklockwood/iVersion.git'\n. Fixed in 1.11\n. This no longer occurs in latest release.\n. It's hard to prove a negative, but I don't see how iVersion can be to blame here. All it does is direct you to the App Store - after that the actual download process is entirely outside my control, and should be no different to just opening the store yourself.\nThe only possibility I can think of is that the URL is wrong, but if that were the case it seems like I'd be seeing more reports of this.\n. Fixed in 1.11\n. I don't understand what you mean.\n. This is fixed in 1.11.\n. Done.\n. Fixed in 1.11.4.\n. There's no simple option to do this, but you can use the delegate to implement a custom prompt and display whatever info you choose.. Fixed in 1.11.5. Fixed in 1.11.5. @uliwitness I don't disagree. This code predates GCD (iOS 3.x), and has no unit tests, so there's a significant cost/benefit issue with refactoring it. If I ever need to use it myself in a new application, I'll consider a rewrite.. If the remoteVersionsPlist is set then iVersion will always use it. You say it's workingon debug - does it also work if you run a releasw buils locally?. ",
    "dgattey": "Wonderful. Thank you for your prompt reply. It's mostly an issue with the\nlandscape rotation. If it's short enough, the text displays properly in the\nportrait orientation, but squishes when turned into landscape. Also, it's\nonly a remote version issue (because it has three buttons versus one, so\nthere's not much space). I just changed your code for now to say \"New\nversion available!\" as the title, so it's all on one line. I also added\nanother \\n to the view so it will be bigger. Might be nice to add a \"Large\"\nbool to enable my two changes automatically. Thanks.\nDylan\nOn Sun, Sep 25, 2011 at 4:08 AM, Nick Lockwood \nreply@reply.github.comwrote:\n\nThat sounds more like a bug in iOS5 than a problem with iVersion, but I'll\ninvestigate.\nNick\n(Sent from my iPhone)\nOn 25 Sep 2011, at 00:48, skicrazy27 reply@reply.github.com wrote:\n\nOn the latest beta (7) of iOS 5, iVersion has issues. There seems to be a\nlack of support for a scrolling view in a popup. It works perfectly in the\nSimulator and on iOS 4.x devices, but I'm sure the view hierarchy in iOS 5\nhas screwed things up.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/issues/3\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/issues/3#issuecomment-2190489\n. Wonderful. Thank you for your prompt reply. It's mostly an issue with the\nlandscape rotation. If it's short enough, the text displays properly in the\nportrait orientation, but squishes when turned into landscape. Also, it's\nonly a remote version issue (because it has three buttons versus one, so\nthere's not much space). I just changed your code for now to say \"New\nversion available!\" as the title, so it's all on one line. I also added\nanother \\n to the view so it will be bigger. Might be nice to add a \"Large\"\nbool to enable my two changes automatically. Thanks.\n\nDylan\nOn Sun, Sep 25, 2011 at 4:08 AM, Nick Lockwood \nreply@reply.github.comwrote:\n\nThat sounds more like a bug in iOS5 than a problem with iVersion, but I'll\ninvestigate.\nNick\n(Sent from my iPhone)\nOn 25 Sep 2011, at 00:48, skicrazy27 reply@reply.github.com wrote:\n\nOn the latest beta (7) of iOS 5, iVersion has issues. There seems to be a\nlack of support for a scrolling view in a popup. It works perfectly in the\nSimulator and on iOS 4.x devices, but I'm sure the view hierarchy in iOS 5\nhas screwed things up.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/issues/3\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/issues/3#issuecomment-2190489\n. \n",
    "iosdeveloper": "Yeah, that would be great.\n. Yeah, that would be great.\n. ",
    "sgabello": "I see! Thanks for the explanation: I didn't know that self inside a class is the class and I would have never figured it out by myself! But now that you told me that, it makes perfect sense!!! Thanks!\n. I see! Thanks for the explanation: I didn't know that self inside a class is the class and I would have never figured it out by myself! But now that you told me that, it makes perfect sense!!! Thanks!\n. ",
    "zxl777": "Yes, using LLVM GCC 4.2\ni think you should set 'strong' to 'retain' by #ifdef\n. I try Apple LLVM Compiler 3 ,but some old source in project can not work.\nSo old project would been using old  LLVM GCC 4.2.\nSo...\n. To using LLVM ,i have to update xmpp sdk.\nxmpp sdk using ARC\nSo i have to update the project to ARC.\nBut got more error,\nYou know, if i using iVersion, i will work hard for these.\nSo ...\n. Yes, using LLVM GCC 4.2\ni think you should set 'strong' to 'retain' by #ifdef\n. I try Apple LLVM Compiler 3 ,but some old source in project can not work.\nSo old project would been using old  LLVM GCC 4.2.\nSo...\n. To using LLVM ,i have to update xmpp sdk.\nxmpp sdk using ARC\nSo i have to update the project to ARC.\nBut got more error,\nYou know, if i using iVersion, i will work hard for these.\nSo ...\n. ",
    "nielscastle": "Hi Nick,\nIn small countries such as Denmark, Sweden, Norway, et cetera it is very common to run your device as a plain UK or US device - most applications are not localized to small languages anyway. But I think you solution will work fine for US, UK, Germany, France - the big markets.\nAll the best.\nCheers, niels\nNiels Castle\nt:      +45 5192 9293\ne:      castle@castleandersen.dk\nw:      http://castleandersen.dk\nCastle+Andersen - Frederiksv\u00e6rksgade 30, st - 3400 Hiller\u00f8d\nOn 19 Mar, 2012, at 02:01 , Nick Lockwood wrote:\n\nGood idea. I've added a modified version of this into 1.9 - I'm using the user locale to determine the country so in principle you shouldn't need to set it yourself.\nIt's possible of course that the user's device locale doesn't match the iTunes store country they used to download the app (e.g. if they're an emigrant/immigrant) but that's such an edge case that it's probably not worth worrying about for non-critical functionality like iVersion updates.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/pull/12#issuecomment-4566268\n. Hi Nick,\n\nQuite right, I read you first mail as if there wouldn't be a property to override but this is great.\nCheers, niels\nNiels Castle\nt:      +45 5192 9293\ne:      castle@castleandersen.dk\nw:      http://castleandersen.dk\nCastle+Andersen - Frederiksv\u00e6rksgade 30, st - 3400 Hiller\u00f8d\nOn 19 Mar, 2012, at 09:55 , Nick Lockwood wrote:\n\nYes, I suspected that might be the case, but it doesn't actually matter if the market it uses is the wrong one, so long as the app is available on it.\nI'm guessing that very few apps are available only in Denmark or Sweden and not also in the US or UK, so those users will mostly just see the market details for UK or US, which will still be correct anyway.\nIn cases where the app isn't available in the US or UK, the developer can just override the country code and set it to DK or SE, but the purpose of a default value is to work for the majority, and I think having a default of the device locale will work correctly in more cases than having a default of US.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/pull/12#issuecomment-4569510\n. Hi Nick,\n\nIn small countries such as Denmark, Sweden, Norway, et cetera it is very common to run your device as a plain UK or US device - most applications are not localized to small languages anyway. But I think you solution will work fine for US, UK, Germany, France - the big markets.\nAll the best.\nCheers, niels\nNiels Castle\nt:      +45 5192 9293\ne:      castle@castleandersen.dk\nw:      http://castleandersen.dk\nCastle+Andersen - Frederiksv\u00e6rksgade 30, st - 3400 Hiller\u00f8d\nOn 19 Mar, 2012, at 02:01 , Nick Lockwood wrote:\n\nGood idea. I've added a modified version of this into 1.9 - I'm using the user locale to determine the country so in principle you shouldn't need to set it yourself.\nIt's possible of course that the user's device locale doesn't match the iTunes store country they used to download the app (e.g. if they're an emigrant/immigrant) but that's such an edge case that it's probably not worth worrying about for non-critical functionality like iVersion updates.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/pull/12#issuecomment-4566268\n. Hi Nick,\n\nQuite right, I read you first mail as if there wouldn't be a property to override but this is great.\nCheers, niels\nNiels Castle\nt:      +45 5192 9293\ne:      castle@castleandersen.dk\nw:      http://castleandersen.dk\nCastle+Andersen - Frederiksv\u00e6rksgade 30, st - 3400 Hiller\u00f8d\nOn 19 Mar, 2012, at 09:55 , Nick Lockwood wrote:\n\nYes, I suspected that might be the case, but it doesn't actually matter if the market it uses is the wrong one, so long as the app is available on it.\nI'm guessing that very few apps are available only in Denmark or Sweden and not also in the US or UK, so those users will mostly just see the market details for UK or US, which will still be correct anyway.\nIn cases where the app isn't available in the US or UK, the developer can just override the country code and set it to DK or SE, but the purpose of a default value is to work for the majority, and I think having a default of the device locale will work correctly in more cases than having a default of US.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/pull/12#issuecomment-4569510\n. \n",
    "kashifhisam": "Yes, you are right that dataWithContentsOfURL may have an internal timeout. Certainly it will not block UI, but iVersion will keep on making new threads when some user exits & relaunch the app during such situation. I think a boolean flag can also do the job so that it does not start a new check in background if existing dataWithContentsOfURL is on wait.\nFor NSURLConnection, timeout can be specified by using NSURLRequest's requestWithURL:cachePolicy:timeoutInterval:  method.\n. Yes, you are right that dataWithContentsOfURL may have an internal timeout. Certainly it will not block UI, but iVersion will keep on making new threads when some user exits & relaunch the app during such situation. I think a boolean flag can also do the job so that it does not start a new check in background if existing dataWithContentsOfURL is on wait.\nFor NSURLConnection, timeout can be specified by using NSURLRequest's requestWithURL:cachePolicy:timeoutInterval:  method.\n. ",
    "oscar-broman": "Some StackOverflow answer, IIRC.\n. Some StackOverflow answer, IIRC.\n. ",
    "taka328w": "[Example]\nNeeds release notes that localized for 'Japanese'\n- old version url\n  http://itunes.apple.com/lookup?country=JP&lang=ja_JP&id=497296097\n  -> Not localized.\n- new version url\n  http://itunes.apple.com/JP/lookup?id=497296097\n. [Example]\nNeeds release notes that localized for 'Japanese'\n- old version url\n  http://itunes.apple.com/lookup?country=JP&lang=ja_JP&id=497296097\n  -> Not localized.\n- new version url\n  http://itunes.apple.com/JP/lookup?id=497296097\n. ",
    "x2on": "I forget to say that the crash is on an iOS 4.x Device! It works with iOS 5 Device and iOS 4.x Simulator.\n. It looks like only in our product, the example app runs fine. But we can't find any different project settings. \nDo you have any idea how this could be happen?\n. There isn't anything special... only this:\n``` objective-c\nifdef OBJC\n#import <UIKit/UIKit.h>\n#import <Foundation/Foundation.h>\n#import <CoreData/CoreData.h>\n\nendif\n```\n. I have same catgories, like SBJson, etc.\nBut iVersion works if i remove the load method. So it seems that the load method gets called bevor the ARC Library from iOS is loaded.\n. I forget to say that the crash is on an iOS 4.x Device! It works with iOS 5 Device and iOS 4.x Simulator.\n. It looks like only in our product, the example app runs fine. But we can't find any different project settings. \nDo you have any idea how this could be happen?\n. There isn't anything special... only this:\n``` objective-c\nifdef OBJC\n#import <UIKit/UIKit.h>\n#import <Foundation/Foundation.h>\n#import <CoreData/CoreData.h>\n\nendif\n```\n. I have same catgories, like SBJson, etc.\nBut iVersion works if i remove the load method. So it seems that the load method gets called bevor the ARC Library from iOS is loaded.\n. ",
    "russgalloway": "I figured it was something like that.  I tripped checked the JSON but didn't know that value was conditional.\nYou're correct -- this is the first time I've looked at app store JSON data and this particular app is at version 1.0.\nThanks for the quick response, and thanks again for a sweet open source project!\n- Russ\nOn Jul 20, 2012, at 4:44 PM, Nick Lockwood wrote:\n\nThe description key and the releaseNotes keys serve different purposes. The description key is the app description, which typically doesn't change between releases. The releaseNotes states what's new in a specific release, and that's the key that iVersion is supposed to display.\nIf you're not seeing any release notes whilst testing, it's probably because your app is still at version 1.0, so it doesn't have any release notes yet. If you check the example app however you will see that this is working correctly.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/issues/23#issuecomment-7142506\n. I figured it was something like that.  I tripped checked the JSON but didn't know that value was conditional.\n\nYou're correct -- this is the first time I've looked at app store JSON data and this particular app is at version 1.0.\nThanks for the quick response, and thanks again for a sweet open source project!\n- Russ\nOn Jul 20, 2012, at 4:44 PM, Nick Lockwood wrote:\n\nThe description key and the releaseNotes keys serve different purposes. The description key is the app description, which typically doesn't change between releases. The releaseNotes states what's new in a specific release, and that's the key that iVersion is supposed to display.\nIf you're not seeing any release notes whilst testing, it's probably because your app is still at version 1.0, so it doesn't have any release notes yet. If you check the example app however you will see that this is working correctly.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/issues/23#issuecomment-7142506\n. \n",
    "uzman": "the version is 2.2.3 on the store. i made my app version to 1.0.\ni test it on the actual device.\n. appStoreID= 353599677\nurl : itms-apps://ax.itunes.apple.com/WebObjects/MZStore.woa/wa/viewSoftwareUpdate?id=353599677\n. iOS 5.1.1 (9B206)\ni logged in normal AppleID.\nis there any config/plist file that i must fill?\nhere is the what i did:\nimported iversion.h file to appdelegate.\nput initialize method.\n+ (void)initialize\n{\n    [iVersion sharedInstance].appStoreID=353599677;\n    [iVersion sharedInstance].appStoreCountry=@\"tr\";\n}\nlive app version is 2.2.3 now on the appstore. thats why i made the Version:1 Build:1 in info.plist file.\ni deploy the app from xcode to my iPad.\nwhen the app starts it show the uialert, then i tap to Download button, it goes to - (NSURL *)updateURL method.\nNSLog:\nitms-apps://ax.itunes.apple.com/WebObjects/MZStore.woa/wa/viewSoftwareUpdate?id=353599677\nit opens the AppStore, then it gives the message:  \"Cannot connect to iTunes Store\"\n(my project is non-ARC)\n. i think my AppStore app on iPad is problem.\nwhenever i open the AppStore it says the same error message.\nits very interesting.\nsorry for disturbing. it can be closed.\n. im not sure but there is something about region.\ni logged out from appstore app. then re-login.\ni changed the iVersioniOSAppStoreURLFormat value to: \nstatic NSString *const iVersioniOSAppStoreURLFormat = @\"itms-apps://itunes.apple.com/app/%u\";\nnow it says: The item youve requested is not currently available in the Turkish Store.\n(my appstore is adjusted to Turkish store)\n. i re-checked the itunesconnect.\napp is available in all countries.\ni think my AppStore app is broken down. \n. no, its available in all countries.\ni changed the store to USA in iTunes on my macbook too yesterday.\nthen everything messed up. im not sure why it happened.\n(my itunes account is from usa. but i use it on turkish appstore.)\nthanks. iversion is great tool.\n. the version is 2.2.3 on the store. i made my app version to 1.0.\ni test it on the actual device.\n. appStoreID= 353599677\nurl : itms-apps://ax.itunes.apple.com/WebObjects/MZStore.woa/wa/viewSoftwareUpdate?id=353599677\n. iOS 5.1.1 (9B206)\ni logged in normal AppleID.\nis there any config/plist file that i must fill?\nhere is the what i did:\nimported iversion.h file to appdelegate.\nput initialize method.\n+ (void)initialize\n{\n    [iVersion sharedInstance].appStoreID=353599677;\n    [iVersion sharedInstance].appStoreCountry=@\"tr\";\n}\nlive app version is 2.2.3 now on the appstore. thats why i made the Version:1 Build:1 in info.plist file.\ni deploy the app from xcode to my iPad.\nwhen the app starts it show the uialert, then i tap to Download button, it goes to - (NSURL *)updateURL method.\nNSLog:\nitms-apps://ax.itunes.apple.com/WebObjects/MZStore.woa/wa/viewSoftwareUpdate?id=353599677\nit opens the AppStore, then it gives the message:  \"Cannot connect to iTunes Store\"\n(my project is non-ARC)\n. i think my AppStore app on iPad is problem.\nwhenever i open the AppStore it says the same error message.\nits very interesting.\nsorry for disturbing. it can be closed.\n. im not sure but there is something about region.\ni logged out from appstore app. then re-login.\ni changed the iVersioniOSAppStoreURLFormat value to: \nstatic NSString *const iVersioniOSAppStoreURLFormat = @\"itms-apps://itunes.apple.com/app/%u\";\nnow it says: The item youve requested is not currently available in the Turkish Store.\n(my appstore is adjusted to Turkish store)\n. i re-checked the itunesconnect.\napp is available in all countries.\ni think my AppStore app is broken down. \n. no, its available in all countries.\ni changed the store to USA in iTunes on my macbook too yesterday.\nthen everything messed up. im not sure why it happened.\n(my itunes account is from usa. but i use it on turkish appstore.)\nthanks. iversion is great tool.\n. ",
    "Daij-Djan": "makes total sense. \nthanks\nDominik Pich\ndominik@pich.info\nOn 08.03.2013, at 11:41, Nick Lockwood wrote:\n\nI've included a modified version of the scrollview logic. I've not merged the static lib project because you can use pods instead or its relatively easy to create a static lib yourself if not.\nThanks.\n\u2014\nReply to this email directly or view it on GitHub.\n. I made minor some adjustments here so it can even run in a framework (dynamic)::\n\nmainBundle | bundleWithPath:bundlePath | bundleForClass\n. makes total sense. \nthanks\nDominik Pich\ndominik@pich.info\nOn 08.03.2013, at 11:41, Nick Lockwood wrote:\n\nI've included a modified version of the scrollview logic. I've not merged the static lib project because you can use pods instead or its relatively easy to create a static lib yourself if not.\nThanks.\n\u2014\nReply to this email directly or view it on GitHub.\n. I made minor some adjustments here so it can even run in a framework (dynamic)::\n\nmainBundle | bundleWithPath:bundlePath | bundleForClass\n. ",
    "nmock": "Do you think it'd be better if we provided a preference for it? \nYou probably know people's preferences about using the remote plist better than I, but, for me, I wouldn't release to the store if I didn't have time to check everything was okay. Sometimes I don't remember to update the remote plist details for every release and would like it to just revert to App Store details instead of showing a blank change log. I think this is the case most of the time for developers with multiple apps, multiple releases, it's sometimes hard to keep track of remembering which plists were updated / changed at the right times.\nFor the second fix:\nSay the user is on 0.9 and in the app store it has 1.0. In your remote plist if you have entries for 1.0 and 1.1 release messages to prepare for the release, 1.1 details won't show to the user unless 1.1 is in the app store.\n. Do you think it'd be better if we provided a preference for it? \nYou probably know people's preferences about using the remote plist better than I, but, for me, I wouldn't release to the store if I didn't have time to check everything was okay. Sometimes I don't remember to update the remote plist details for every release and would like it to just revert to App Store details instead of showing a blank change log. I think this is the case most of the time for developers with multiple apps, multiple releases, it's sometimes hard to keep track of remembering which plists were updated / changed at the right times.\nFor the second fix:\nSay the user is on 0.9 and in the app store it has 1.0. In your remote plist if you have entries for 1.0 and 1.1 release messages to prepare for the release, 1.1 details won't show to the user unless 1.1 is in the app store.\n. ",
    "scottpersinger": "Ok  - my bad. Apparently this was cause by having Guard Malloc enabled since the crash kept happening even after I removed iVersion. Apologies!\n. Ok  - my bad. Apparently this was cause by having Guard Malloc enabled since the crash kept happening even after I removed iVersion. Apologies!\n. ",
    "howgeli": "The new URL fixes the problem. Thanks a lot.\nThe old one is still not working though. \n. The new URL fixes the problem. Thanks a lot.\nThe old one is still not working though. \n. ",
    "fbradyirl": "Yeah checked that and it's there checked. I dragged the files from another\nproject in the same workspace. Ill try adding them from Finder instead.\nThanks for the help.\nOn Tuesday, April 16, 2013, Nick Lockwood wrote:\n\nIt sounds like the iVersion.m file hasn't been included in your build\ntarget. Check that it's ticked for your target.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/nicklockwood/iVersion/issues/37#issuecomment-16472547\n.\n. Yeah checked that and it's there checked. I dragged the files from another\nproject in the same workspace. Ill try adding them from Finder instead.\nThanks for the help.\n\nOn Tuesday, April 16, 2013, Nick Lockwood wrote:\n\nIt sounds like the iVersion.m file hasn't been included in your build\ntarget. Check that it's ticked for your target.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/nicklockwood/iVersion/issues/37#issuecomment-16472547\n.\n. \n",
    "Julioacarrettoni": "+1 to drop iOS4.x support. I mean, make a tag or something so iOS 4.x apps can still use your Library.\nI'll change the description. Thanks for the response! :)\n. +1 to drop iOS4.x support. I mean, make a tag or something so iOS 4.x apps can still use your Library.\nI'll change the description. Thanks for the response! :)\n. ",
    "curtisdf": "Thanks Nick!\n. Thanks Nick!\n. ",
    "karlbecker": "The missing bundle in the pod spec left me confused for longer than I'd like to admit. \nI'd really recommend merging this into master for the pod spec.\n. Looks like a solid update for affiliate linking!\n. Definitely.  Looking at the code really quickly, I didn't see an obvious place to insert the necessary call. If you can point me to about where, then I can quickly implement it - of course, you'll probably do it quicker and more accurately than me!\n. The missing bundle in the pod spec left me confused for longer than I'd like to admit. \nI'd really recommend merging this into master for the pod spec.\n. Looks like a solid update for affiliate linking!\n. Definitely.  Looking at the code really quickly, I didn't see an obvious place to insert the necessary call. If you can point me to about where, then I can quickly implement it - of course, you'll probably do it quicker and more accurately than me!\n. ",
    "Jaol": "Thanks, I did include that line. Do I need to exclude some of the basic lines along with that? I used your iPhone example as a starting point. My iPhones just keeps reporting that it cannot connect to iTunes Store ?.\nThis is how I try to implement it:\n- (void)initialize\n  {\n  [iVersion sharedInstance].remoteVersionsPlistURL = @\"http://www.someurl.com/versions.plist\";\n  [iVersion sharedInstance].updateURL = @\"http://app.someurl.com/appPage/\";\n  }\n\nOn 19/08/2013, at 17.25, Nick Lockwood notifications@github.com wrote:\nJust set [iVersion sharedInstance].updateURL to whatever the URL is for your update page.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks, I did include that line. Do I need to exclude some of the basic lines along with that? I used your iPhone example as a starting point. My iPhones just keeps reporting that it cannot connect to iTunes Store ?.\n\nThis is how I try to implement it:\n- (void)initialize\n  {\n  [iVersion sharedInstance].remoteVersionsPlistURL = @\"http://www.someurl.com/versions.plist\";\n  [iVersion sharedInstance].updateURL = @\"http://app.someurl.com/appPage/\";\n  }\n\nOn 19/08/2013, at 17.25, Nick Lockwood notifications@github.com wrote:\nJust set [iVersion sharedInstance].updateURL to whatever the URL is for your update page.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "shingwasix": "I need this function!\n. I need this function!\n. ",
    "waltermvp": "yea please\n. yea please\n. ",
    "sirnacnud": "I applied this change at master, SirNacnud/iVersion@bd994bb1e3921a98b4779d83903f8d10ee6f5440. Should I open a new PR?\n. I applied this change at master, SirNacnud/iVersion@bd994bb1e3921a98b4779d83903f8d10ee6f5440. Should I open a new PR?\n. ",
    "manojthomas88": "@nicklockwood \n. 1.8\n. Ok. Thanks\n. @nicklockwood \n. 1.8\n. Ok. Thanks\n. ",
    "kayzee": "Duplicate. Sorry\n. Duplicate. Sorry\n. ",
    "sgano": "When I wrote this I was thinking iVersion could be used in the iOS 7+ use-case where someone auto-updates and then this could be used to tell them what is new after the update (since many no longer see the release notes).  But I think you have solved the inverse problem of notifying users when there is an update available if they don't have the latest version.\n. When I wrote this I was thinking iVersion could be used in the iOS 7+ use-case where someone auto-updates and then this could be used to tell them what is new after the update (since many no longer see the release notes).  But I think you have solved the inverse problem of notifying users when there is an update available if they don't have the latest version.\n. ",
    "atherton": "Hey, I'd like to notify users of what's new after an update. Is this supported automatically using iTunes? I can't seem to get it to work.... Hey, I'd like to notify users of what's new after an update. Is this supported automatically using iTunes? I can't seem to get it to work.... ",
    "kylef": "Hmm you are right, however the property was only added in iOS 5.0. This project supports iOS 4.3. Maybe the next release of iVersion should require iOS 5.0?\ns.ios.deployment_target = '4.3'\n. Hmm you are right, however the property was only added in iOS 5.0. This project supports iOS 4.3. Maybe the next release of iVersion should require iOS 5.0?\ns.ios.deployment_target = '4.3'\n. ",
    "tplessis": "And when you try to submit your app to the AppStore, you get this message : \"This app references non--public selectors in Payload : viewController\".\n. And when you try to submit your app to the AppStore, you get this message : \"This app references non--public selectors in Payload : viewController\".\n. ",
    "942v": "Yes, I have the same issue with the viewController reference.\n. Yes, I have the same issue with the viewController reference.\n. ",
    "mpillsbury": "Oh, is that where that warning came from? I saw it last time I submitted to the App Store, but searching through instances of viewController in my codebase was too labor-intensive to track down. Thanks for pointing that out, @tplessis.\n. Oh, is that where that warning came from? I saw it last time I submitted to the App Store, but searching through instances of viewController in my codebase was too labor-intensive to track down. Thanks for pointing that out, @tplessis.\n. ",
    "s5": "I'm also having the same problem with validation warnings from iVersion when submitting to the App Store. Looks to be solved in the latest 1.11 beta but Cocoapods is at 1.10.6, and it was easier to comment out that one line of code in iVersion.m than change my entire workflow. But I do hope this fix ships soon!\n. Good call, thanks!\nOn Mon, Feb 24, 2014 at 1:15 PM, Nick Lockwood notifications@github.com\nwrote:\n\nYou don't need to change your workflow or modify the library, you can use the current beta version by putting this in your pod file:\npod 'iVersion', :git => 'https://github.com/nicklockwood/iVersion.git'\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/issues/56#issuecomment-35938918\n. I'm also having the same problem with validation warnings from iVersion when submitting to the App Store. Looks to be solved in the latest 1.11 beta but Cocoapods is at 1.10.6, and it was easier to comment out that one line of code in iVersion.m than change my entire workflow. But I do hope this fix ships soon!\n. Good call, thanks!\n\nOn Mon, Feb 24, 2014 at 1:15 PM, Nick Lockwood notifications@github.com\nwrote:\n\nYou don't need to change your workflow or modify the library, you can use the current beta version by putting this in your pod file:\npod 'iVersion', :git => 'https://github.com/nicklockwood/iVersion.git'\nReply to this email directly or view it on GitHub:\nhttps://github.com/nicklockwood/iVersion/issues/56#issuecomment-35938918\n. \n",
    "stevemoser": "+1\nI was just bitten by this when submitting to the AppStore. \"This app references non--public selectors in Payload : viewController\"\nIs there an ETA of when this is leaving beta?\n. +1\nI was just bitten by this when submitting to the AppStore. \"This app references non--public selectors in Payload : viewController\"\nIs there an ETA of when this is leaving beta?\n. ",
    "gonghao": "+1 \nThis issue shown when I use the version 1.10.6 and compile my App in Xcode 5.1.1, and I have to remove these lines in iVersion.m:\nif ([appDelegate respondsToSelector:@selector(viewController)])\n        {\n            rootViewController = [appDelegate valueForKey:@\"viewController\"];\n        }\nSo this let the warning gone, and I could submit my App.\n. +1 \nThis issue shown when I use the version 1.10.6 and compile my App in Xcode 5.1.1, and I have to remove these lines in iVersion.m:\nif ([appDelegate respondsToSelector:@selector(viewController)])\n        {\n            rootViewController = [appDelegate valueForKey:@\"viewController\"];\n        }\nSo this let the warning gone, and I could submit my App.\n. ",
    "lisbakke": "Duplicate of #56 \n. Duplicate of #56 \n. ",
    "lxcid": "I want to state that this was an issue for us. This PR seems capable of solving the above issue.\n. I want to state that this was an issue for us. This PR seems capable of solving the above issue.\n. ",
    "tspecht": "Is this going to be merged? I'm having the same issue ...\n. Is this going to be merged? I'm having the same issue ...\n. ",
    "crystaldonut": "FYI The reported error is only a warning fortunately; we submitted our app with this issue two weeks ago and it was approved.\n. FYI The reported error is only a warning fortunately; we submitted our app with this issue two weeks ago and it was approved.\n. ",
    "sfoulston-laughable": "+1. Totally agree with this, just got caught out by the same thing.. +1. Totally agree with this, just got caught out by the same thing.. ",
    "toshi0383": "Man ! Thanks for merging \ud83d\ude4c\n. Man ! Thanks for merging \ud83d\ude4c\n. ",
    "Just-": "same issue, i found that iVersion use nil for appStoreCountry\niVersion is checking http://itunes.apple.com/(null)/lookup?bundleId=...\nappStoreCountry is nil because this code block doesn't work correctly in my case\nself.appStoreCountry = [(NSLocale *)[NSLocale currentLocale] objectForKey:NSLocaleCountryCode];\nI use custom Application language when run app, switching it back to System language resolves this issue\nSee SO answer http://stackoverflow.com/a/32569003/440465 for more details\n. same issue, i found that iVersion use nil for appStoreCountry\niVersion is checking http://itunes.apple.com/(null)/lookup?bundleId=...\nappStoreCountry is nil because this code block doesn't work correctly in my case\nself.appStoreCountry = [(NSLocale *)[NSLocale currentLocale] objectForKey:NSLocaleCountryCode];\nI use custom Application language when run app, switching it back to System language resolves this issue\nSee SO answer http://stackoverflow.com/a/32569003/440465 for more details\n. ",
    "n0shake": "Thank you for this. Switching back to System language did fix this issue. Closing.\n. Thank you for this. Switching back to System language did fix this issue. Closing.\n. ",
    "fjtrujy": "Hello,\nCould you take a look to this PR? I would be so glad if you merge it.\nThanks in advance.\n. Hello,\nCould you take a look to this PR? I would be so glad if you merge it.\nThanks in advance.\n. ",
    "FrankWu100": "I think the main reason is because I used cocoapods to install iVersion, resulting in the bundle path not to be found.\n. I think the main reason is because I used cocoapods to install iVersion, resulting in the bundle path not to be found.\n. ",
    "uliwitness": "PS - I found this project via your answer to http://stackoverflow.com/questions/6256748/check-if-my-app-has-a-new-version-on-appstore and it was the only answer that wasn't flat-out wrong like most of the others. I'm not actually using this code, or I would have sent you a pull request with the fixes instead of just filing bugs asking you to do it.. PS - I found this project via your answer to http://stackoverflow.com/questions/6256748/check-if-my-app-has-a-new-version-on-appstore and it was the only answer that wasn't flat-out wrong like most of the others. I'm not actually using this code, or I would have sent you a pull request with the fixes instead of just filing bugs asking you to do it.. PS - I found this project via your answer to http://stackoverflow.com/questions/6256748/check-if-my-app-has-a-new-version-on-appstore and it was the only answer that wasn't flat-out wrong like most of the others. I'm not actually using this code, or I would have sent you a pull request with the fixes instead of just filing bugs asking you to do it.. PS - I found this project via your answer to http://stackoverflow.com/questions/6256748/check-if-my-app-has-a-new-version-on-appstore and it was the only answer that wasn't flat-out wrong like most of the others. I'm not actually using this code, or I would have sent you a pull request with the fixes instead of just filing bugs asking you to do it.. ",
    "zapjonny": "So basically we don't ever want iVersion to check iTunes. We handle the versioning.. No it always checks iTunes first. (Ok I will test a release build locally to make sure)\nTested release build - it just checked iTunes and did not find a newer version. iTunes API version still stale at 1.0.3 - about 16 hours from app going live.\nI looked at the source code, it seems like iVersion is designed to always look at iTunes first, only if that fails fallback to the remoteVersionsPlist. I misunderstood this, I thought remoteVersionsPlist would completely override iTunes. \nYes it did work as I thought it would when I ran this with a debug app. This app was a dummy inhouse app just for testing, aka enterprise app with a different bundle id, obviously not existing in iTunes or even iTunes Connect. This app would always fail to find itself on iTunes and always fall back to the remoteVersionsPlist which let us control finely what version to require.\nThe iTunes API version has still to update itself for iPhones, granted we've only been waiting around 12 hours yet.\n. I'll close this. Checking beyond 24 hours I could confirm that everything indeed worked in the end. It surely always checks iTunes first, but gets a final decision if update should be required or not from the remote plist.\n. So basically we don't ever want iVersion to check iTunes. We handle the versioning.. No it always checks iTunes first. (Ok I will test a release build locally to make sure)\nTested release build - it just checked iTunes and did not find a newer version. iTunes API version still stale at 1.0.3 - about 16 hours from app going live.\nI looked at the source code, it seems like iVersion is designed to always look at iTunes first, only if that fails fallback to the remoteVersionsPlist. I misunderstood this, I thought remoteVersionsPlist would completely override iTunes. \nYes it did work as I thought it would when I ran this with a debug app. This app was a dummy inhouse app just for testing, aka enterprise app with a different bundle id, obviously not existing in iTunes or even iTunes Connect. This app would always fail to find itself on iTunes and always fall back to the remoteVersionsPlist which let us control finely what version to require.\nThe iTunes API version has still to update itself for iPhones, granted we've only been waiting around 12 hours yet.\n. I'll close this. Checking beyond 24 hours I could confirm that everything indeed worked in the end. It surely always checks iTunes first, but gets a final decision if update should be required or not from the remote plist.\n. "
}