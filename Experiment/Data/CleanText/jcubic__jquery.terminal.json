{
    "jcubic": "There is cols method that return number of columns I could change the name for that method.\ncols: function() {\n       return num_chars;\n},\nrows: function() {\n       return lines.length;\n},\nand resize method assign num_chars variable.\n     resize: function() {\n            ...\n            num_chars = get_num_chars();\n            ...\n     }\nso cols method return number of characters from last resize.    \nand changing self.width is not a option because self.width is jquery method which is used inside get_num_chars function.\nand resize function is called when self is inserted to the DOM if if not you can call it manually.\nself.livequery(function() {\n        self.resize();\n   });\nIf you change the size of terminal you must call resize method\nand draw_line function which is used by echo create separate div for every line and put it inside one div or if it's single line it create single div.\n. What is the keyCode, charCode and which of this character in azerty keyboard?\n. Strange because I have the same codes and I also use ubuntu. And if statement in line 1315 check if \"which\" is 40 but without shift.\nWhat is the name of you keyboard? I can change my config and test this.\n. In French keyboard parentheses keys are without shift key. I don't remember why I put this condition with code 40 but I remove it (it was something about Opera, another key with the same code).\n. Could you check what is keyCode and charCode of these keys and the value of ctrlKey and metaKey\n. Actually I want to know Command+C and Command+V \"keyCode\",  \"charCode\" and \"which\" in keypress and keydown. What left and right mean?\n. It's hard for me to test but I ask one person some time ago if he can paste code into terminal, and he could he use Opera and Chrome I believe. Maybe it was not fix or I introduce new bug (the same one) again when I fix other bugs.\nCan you paste into terminal in other Browsers? Are you using command+V (I didn't aks that person if he use command), does MacOS have control key that this user maybe used?\n. @tkoomzaaskz Added with this commit https://github.com/jcubic/jquery.terminal/commit/645ae7ea02c21388e3b643163dabd36f51ad4cac\n. @sheymann I don't have a way to test it. You can try @abersnaze solution just put 100, instead of 1 and check what is which and metaKey http://api.jquery.com/keydown/ when you copy/paste and add that in keydown function Line 1102.\nIf you make it work, you can create PR (modify jquery.terminal-src.js file).\n. Finally a friend of mine test, 100ms work. It's in devel branch will be in version 0.9.\n. @eitoball  Can you test by changing delay to 500 and 1000? It's line 1290 in devel branch\n. Maybe this will be fixed if I keep focus in textarea all the time, and do the same as for mobile. I think that I'll need to do this for #86 \n. Can anybody test on a Mac? I now use paste event if supported. Work on Linux Chrome and Firefox, don't have time to test on more browsers.\n. I don't have a mac and I can't work on this :(\n. Closed by Mistake by commit after merge with devel.\n. @alex-downtown any progress, maybe you can create working demo of pasting in test page and I will be able to take that and incorporate into my code.\n. Can anybody test if this work on Safari \"Intercept paste event in Javascript\" ?\n. https://jsfiddle.net/7rb8ecv5/\n. Can anybody test devel branch for the issue?\n. @automotua thanks for the test, can you also test devel version, you can find it here http://terminal.jcubic.pl/latest.html it use jquery.terminal-src.js file from devel branch.\n. That's weird because demo with 0.9.3 don't work in Firefox on GNU/Linux.\n. Can you test this fiddle?\n. @romanman I don't have access to Mac so I can't work on this issue. I've try to install OSX on virtual box but was not able to.\n. I'll try to install windows 10 on virtual box.\n. People report issues with Copy/Paste on Windows and Mac and I don't see any on linux so there must be differences.\n. It seems that codalab fixed the issue, can you take a look at https://github.com/codalab/codalab-worksheets/blob/develop/codalab/apps/web/static/js/custom/jquery.terminal-0.8.8_custom.js if it works? It's old 0.8.8 but copy paste should work, I'll take that code and incorporate it in devel branch.\n. Anyone? Can you test that file in previous comment?\n. Can you change without that content editable, is it needed?\n. What about Safarii? Can you test if this return true or false in Safarii and Firefox on a Mac?\nhttps://jsfiddle.net/8L73jfL4/\n. Can somebody test devel branch version on a Mac Chrome/Firefox/Safari?\n. Awesome, thanks.\n. Can somebody test this version in MacOSX chrome/firefox/safari? https://gist.github.com/jcubic/ce02aab838b9bdbb72761e20223f9b63 I've commented out content editable code that was created by codalab, it look like it's not needed, but I want to be sure.\n. Great thanks again.\n. Will be fixed in 1.0.7. Can anybody test devel version on a Mac? http://codepen.io/jcubic/pen/LxgJQG. Tested on VirtualBox it work.. Thanks for reporting this issue I fix this in version 0.3.5\n. I already fix this before I notice that this is pull request\n. I've added all files for trypython.\nThere are no external dependences only standard modules. That error look like it can find \"handle_cgi\" function inside json.py module.\n. I found right now that there is standard json module in Python. That error is maybe because Python can find json.py file and search in standard json module.\n. I move trypython website to separate repo https://github.com/jcubic/try-python\n. Command is one string, you need to extract them manually. You can use command.split(/s*/).slice(1) to get array of parameters.\n. Right now you can use object with functions that have paramters and they are passed from a command, also by default they are precess numbers to numbers regex to regex and strings are escaped.\n. Fixed in version 0.3.8\n. Fixed in version 0.4\n. It's fixed.\nI fix this if statement before overwrite settings.login\nfrom this:\nif (url && typeof settings.login == 'string' || url) {\nto this:\nif ((url && typeof settings.login == 'string') || (url && settings.login)) {\nSo it now check if settings.login is a string or true.\n. The reason why terminal overwrite settings.login is that in basic functionality it should be a function written by a user but if user put true or string it will be created for him automagically. \n. In your copy of jquery terminal in line 1259 you have return true; in original it's return false;. The reason why there is return false is that it prevent default behavior for all keys. And the reason why your code is working in other browsers is that only in Chrome even must to be attached into keydown event in other browsers the event can be attached into keypress, and in keypress there is only check for few keys (in your code CTRL+A will not work because it was prevent by line that you changed), Maybe I should left only self.insert(String.fromCharCode(e.which)); in keypress event, I think that it will still work in all browsers.\nPS: Is this return true; change was made to fix a bug?\n. Those keys should work because, there is no short cut for them. I will fix it and also I will add way to change default behaviour of keydown and keypress events passed as options in a way that allow to invoke default browser action. Maybe return true;\n$(...).terminal(function(cmd){}, { keydown(e){ if (e.which == 82 && e.ctrlKey){ return true; }}});\n. Yes I know about it. I was trying to fix it, I put the same fix as for wrapping with tabs, but it doesn't work.\n. Fixed.\n. Yes, good to have those. I think that proper behavior should be: if you put initial list of commands and pass object as first argument then it shouldn't expand initial values, but should exand values after first argument so it will act the same as in bash when you can expand filenames or makefile rules. And the value of command list could be a function too, so completion will be dynamic and the values could be taken from ajax call. And I aslo must add completion into json-rpc call. I improve my json-rpc library (and added JS part), and put it into own repo I should use it in terminal.\n. I just post what other things should be done here, and that your simple\nsolution is not enough and I will need to write it. I don't expect that\nyou do this if you already have what you want.\nOn Mon, 30 Jan 2012 15:58:44 -0800\nMarius Gedminas\nreply@reply.github.com\nwrote:\n\nFor my particular use case I do not want completion of arguments, I\nwant completion of commands.\nEventually it would be nice to be able to supply a custom completion\nfunction, I suppose, but I'm not interested in providing a patch for\nthat at this time. ;)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/jcubic/jquery.terminal/issues/14#issuecomment-3730711\n\n\nJakub Jankiewicz\ntwitter: @jcubic\nwww: http://jcubic.pl\n. Yes, there will be, right now it's like in bash but there is no API for it, it's only for object as first argument (I need to change JSON-RPC library and use completion for RPC too). You can check how Dhruv Matani use tilda with tab completion on his site http://dhruvbird.com/ he did it before I implement it, you can also check the source code - line 2194 (it's only few lines of code) to see how object completion is implemented, and you can overwrite TAB key on keydown and do your own completion (you will also need to copy this if statement - line 2178 and tab_count need to be defined ousite keydown function - everything in the same keydown handler)\nI will add this when I find some free time.\n. I decide to use one callback function in main options and in push command in this commit https://github.com/jcubic/jquery.terminal/commit/ef84a7c43a321308c939147d67052bc78ecb718e\njavascript\ncompletion: function(term, string, callback) {\n    callback(['foo', 'bar', 'baz']);\n}\n. Thanks for reporting the bug, fixed in version 0.4.11.\n. Sorry, I didn't work on it yet.\n. I think it's fixed, but CTRL+U is use to clear command line as in bash, to show the source you need to return true on keydown event passed to terminal.\n. I check german keyboard layout on google image, and there are also keys like \u03bc and ~ are you able to put them in terminal? What about characters like \u00e4, \u00f6 and \u00fc?\nYou can fix it in your client code by putting\n``` javascript\n$(...).terminal(function(cmd) {\n}, { keydown: function(e) {\n    if (e.which == 81 && e.altKey) {\n        self.insert(String.fromCharCode(e.which));\n    }\n}});\n```\nif it don't work then you can check this page http://api.jquery.com/keydown/ and scroll to the demo, you can type then your character and see what is show up, importent are altKey, metaKey, shiftKey, and which\nI will put it in the code so you will not have to, but if you want it working right now then you have this.\n. I just notice that ALT+Q show @ using Polish keyboard (actually keyboard\nis standard QWERTY but using Polish language pl_PL.uft8) in Chrome\n(Ubuntu), alt is working for me because in Polish text we use charters\nlike \u0105\u015b\u017a\u017c\u0107\u0142\u00f3\u0144 and they was always working.\nIn what browser did you notice that? on what OS? Maybe polish\ncharacters will not work on this browser too.\nOn Mon, 6 Feb 2012 07:50:59 -0800\nrampall\nreply@reply.github.com\nwrote:\n\nThanks for the tip! The umlaut characters \u00e4, \u00f6, \u00fc  work fine!\nIts only the ALT+KEYs that dont work : {, [, ], }, \\,\n@, \u20ac and ~  as far as I can tell. \nThese are the ones highlighted in green here -\nhttp://www.forlang.wsu.edu/Images/help/kgerman.gif\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/jcubic/jquery.terminal/issues/17#issuecomment-3830746\n\n\nJakub Jankiewicz\ntwitter: @jcubic\nwww: http://jcubic.pl\n. I will check that out.\nThat deprecation warring is cause by jQuery http://stackoverflow.com/questions/7825448/webkit-issues-with-event-layerx-and-event-layery I need to upgrade to jQuery 1.7\n. There is a bug in Webkit on windows (the ctrlKey and altKey are both set to true if you press ALT+ I report bug to jQuery but they don't fix it because it's Chrome bug and Safari), but I found how to fix this.\n. Actually I prefer jquery.mousewheel-min.js and this convection that is used in every Open Sorce project like jquery-1.5.min.js Read Chapter 19 in book The Art of Unix Programiming by ESR\nI think that I should add number version to mousewheel, but I don't believe that author of that library use it, maybe there is new version.\nI'll check why examples are not working.\n. There is version 3.0.6 on github so the filename should be jquery.mousewheel-3.0.6.min.js\n. I change it to jquery.mousewheel-min.js in examples html files.\n. There is already this kind of code in Scheme Example (only on the page not in repo). It count if parents in S-Expressions are balanced. Check code (in the source) http://terminal.jcubic.pl/examples.php#dterm, the code check if parents/brackets are ballanced if no it accept more input and concatenate it and only then execute the code.\nThis feature is not for the terminal but for specific implementation, terminal can only help in implement it by the client. I can only make multiline input easier.\n. add onCommandChange\n. onBeforelogout (can prevent logout if user function return false)\nonAfterlogout\n. onClear, onBlur, onFocus, onTerminalChange\n. I don't like it, API should be simple and minimalistic and this code can be put into client.\n- Validator - You can put this code into first argument function\n$(...).terminal(function(command, term) {\n   if (validator(command)) {\n       onValidatorFail(command);\n   } else {\n       // process commands\n   }\n});\n- Colours - you can overwrite arrow keys and handle history by your own, (I think that I'll need to expose history object into API).\nthis will work when I add history object, and I'll also need to add get_prompt function\n```\nvar color = '???';\nvar prompt_color = '???';\nvar history_command;\n$(...).terminal(function(c, t) {\n  // this function will not work\n}, {\n   keydown: function(e, term) {\n      var history = term.history();\n      if (e.which == 38 || e.which == 40) {\n          if (e.which == 38) {\n              history_command = history.previous();\n          } else if (e.which == 40) {\n              history_command = history.next();\n          }\n          return false;\n      } else if (e.which == 13) {        \n          // you will need to put different code if prompt is a function\n          var prompt = term.get_prompt();\n          if (history_command === null) {\n              term.set_prompt('[[;' + prompt_color + ';]' + prompt +']');\n              term.echo(term.get_command());\n          // process command and validation here\n\n      } else {\n          // user select command from history\n          term.set_prompt('[[;' + prompt_color + ';]' + prompt +']');\n          if (history_command === '') {\n              term.set_command('');\n          } else {\n              term.set_command('[[;' + color + ';]' + history_command + ']');\n          }\n      }\n      return false;\n  } else {\n      history_command = null;\n  }\n\n}\n});\n```\n\nAPI is complete \u201cnot when there is nothing left to add, but when there is nothing left to take away\u201d \u2013 Antoine de Saint-Exupery\n\nPS:\n- there is also bug in your code you should set this two values in command line plugin or you will need to overwrite history in terminal plugin, from what I see you will color all commands with history color, when you type enter, my code should fix it.\n- there is no interpreter in linux termial that have colours in command history.\n- Putting scroll to bottom into blink function is not good idea, if you want to scroll to bottom you should scroll terminal not document, because you will not be able to use scrollbar on the page that have terminal, if you scroll to bottom to terminal on blink it will be no good either because user will not be able to scroll terminal, scroll to bottom should be on keypress (I'll need to add this) -  I'm thinking about onBlink but this can be achieve by using setTimeout in onInit callback function.\n- interpreters in Unix like terminals always show their commands, when you type enter.\n. Color for prompt is no good because prompt can have already color, I can put classes into output prompt and command so you'll be able to style them, classes is better then adding formating.\nIf you want to implement lisp interpreter check my example using scheme (jquery UI DIalog demo), http://terminal.jcubic.pl/examples.php#biwascheme\nIt always echo the command, Check the source code.\nI think that I should add way to add command to history conditionaly like historyFilter that will return true or false (so you can not to add to history when first character is space - like in bash), and if history object will be in API then user will be able to call term.history().append(full_s_expression);\n. Using one command is ugly hack, you can past and eval this\n(help\n..)\nand lines setter is not good idea either because, interpreter\nshould not be able to modify stuff that was echoed into terminal.\nIn last commit I added historyFilter option, history return History\nobject and there is scroll to bottom on keydown.\nOn Wed, 4 Apr 2012 01:44:36 -0700\nAlex Nisnevich\nreply@reply.github.com\nwrote:\n\n\nColor for prompt is no good because prompt can have already color,\nI can put classes into output prompt and command so you'll be able\nto style them, classes is better then adding formating.\n\nThis is a good idea - if you implement this, it will be much better\nthan the hackish solution I'm currently using.\n\nIf you want to implement lisp interpreter check my example using\nscheme (jquery UI DIalog demo),\nhttp://terminal.jcubic.pl/examples.php#biwascheme\nIt always echo the command, Check the source code.\n\nI'm looking at it right now, but I really don't like the way that\nhistory works for multiline expressions - each separate line is saved\nin history, when really the whole expression should be saved (this is\nthe way my interpreter - http://alex.nisnevich.com/ecmachine/ -\ncurrently works).\n\nI think that I should add way to add command to history\nconditionaly like historyFilter that will return true or false, and\nif history object will be in API then user will be able to call\nterm.history().append(full_s_expression); or not save if first\ncharacter is space (like in bash).\n\nI'd like to see this implemented.\nWhat I'm doing right now to accomplish this is kind of a hackish\nmethod:\njavascript\nif (command.split('(').length > command.split(')').length) {\n    // incomplete expression - remove from lines and history\n    terminal.set_command(command + '\\n..  '); // start new line in\ncommand terminal.lines(terminal.lines().slice(0,-1)); // remove last\nline in output for (i = 1; i < command.split(/\\n/).length; i++) {\n      terminal.get_history().pop(); // need to pop history once\nfor each line after the first }\n    terminal.resize(); // refresh terminal\n}\nwhere terminal.lines() is a getter/setter for the output lines,\nterminal.get_history() gets the terminal's History object, and\nHistory.pop() pops the last element of the history Bicycle\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/jcubic/jquery.terminal/pull/27#issuecomment-4949487\n\n\nJakub Jankiewicz\ntwitter: @jcubic\nwww: http://jcubic.pl\n. In version 0.4.16\n. You can use function as argument to echo method. and the whole output need to resize because it callculate line breaks in long lines, I think I can make resize only those lines that are larger then width of the terminal.\nnormal Unix line terminal have \"tput cup\" that allow to change position of the cursor, your clear_last method look like kludge to current implementation if it stay it should look differently, I was thinking about to allow ouput stuff before command_line so you will be able to have echo without newline and that you can move cursor around and echo where ever you want.\nAnd now I'm thinking about function that will allow to overwrite any line in output something like goto_and_echo(0,-1, \"=\") I don't like this name either need better one, maybe echo will act differently when there are 3 arguments. In this case your output will stay when you resize terminal/browser.\n. But you still want to move cursor because you wanted to echo something\nand I want echo to only overwrite part of the line so when for line\nhave \"foo bar baz\" and I call echo(0, 0, \"quux\") the line will be\n\"quuxbar baz\" only moving cursor will be difficult because cmd plugin\nwill need to be move to the place where you wanted (prompt will need to\nbe set to '') but wat about text that will be bellow the command line.\n\"tput cup\" command move prompt and when you press up and down it will\nclear the line, if you type enter it will move to the next line.\nI think that I can write move_cursor but I will need to rewrite echo\nfunction, but move cursor should draw prompt like \"tput cup\", echo(0,0,\nstring) can act like tput cup 0 0; echo \"string\" and return into\noriginal position. also I think that it be better if echo(, ,\n) will act on whole terminal output not only on terminal\nscreen, tput only act upon last page since only terminal emulator have\nscrollbars.\nOn Mon, 9 Apr 2012 09:28:39 -0700\nSean Templeton\nreply@reply.github.com\nwrote:\n\nmaybe a simple move_cursor function? Then all echo's overwrite\nanything after the cursor?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/jcubic/jquery.terminal/issues/29#issuecomment-5028196\n\n\nJakub Jankiewicz\ntwitter: @jcubic\nwww: http://jcubic.pl\n. Another solution is not to use echo for progress, but only command line, something like\nfunction repeat(str, n) {\n   var result = '';\n   for (var i=n; i--;) { \n     result += str;\n   }\n   return result;\n}\nvar prompt = term.get_prompt();\nterm.set_prompt('');\nfor (var i=0; i<=100; i++) {\n      term.set_command('[' + repeat('=', i) + repeat(' ', 100-i) + ']');\n}\nterm.set_prompt(prompt);\nif you see commands like pv or wget on linux it have cursor in the same line where the output goes.\n. Found this old issue, the library now have update function that allow to change content of the line. If you use term.update(-1, \"=\") it will update last line.. Maybe just disable formatting in command line will be best solution, but echo command will need to escape formatting.\n. I removed formatting from command line\n. My bad, I added it to command line plugin but not to terminal.\n. fixed in last commit (version 0.4.14)\n. 1) I can make this by default.\n2) clear command only clear terminal output like clear command on linux, I can add method to terminal that clear localStorage. Maybe I can add option to use sessionStorage instead of localStorage if I can find a plugin for session or I'll create my own, I use Storage plugin.\n3) The problem is that your terminal have no scrollbars if you put 100% or auto scrollbar is on element outside terminal, I can try disable mousewheel when there is no scrollbar if mousewheel plugin have such option. In meanwhile you can not include this plugin.\n4) I can add those\nyour ls example is evident a bug, it should not add element to history if it's the same as the last one. It should work like this I don't know why doesn't.\nYou should report all those request/features as separated issues.\n. I think the reason why command are repeated in history is because I added historyFilter and remove the code that was checking if command was the same as the last one.\n. You can clear localStorage by calling term.history().clear() and then term.logout()\nPS: I added your requests bugs as issues because you didn't do it.\n. google chrome don't allow to prevent CTRL+W (close tab).\n. It's because there is no real html input there, Maybe add input or use clipboard hidden textarea to always have focus on it will fix it. It will not work on iPhone too. I can fix the issue but I'll have no way to test it because I don't have iPad.\n. Thanks, as I said before the only way is to add hidden input or use textarea, I will use input and also fix issue with out of focus when you click out of terminal.\n. I've work on Android fix http://terminal.jcubic.pl/android.html but there is issue with keyboard and scrolling.\nBTW: wterminal don't work very well on Android either, the keyboard turn off when you type enter. And you need to click on text input when for keyboard to show up.\n. This is exactly the issue about scrolling I had, but it look like on iPhone it work better then in Andorid. If I type something I can't scroll at all (I use a while ago touch scroll jQuery plugin I can try to use it). the page is automatically scrolling but only when I type lots of commands (when there are more commands then there are visible and those that are behind keyboard). On Andorid the size of the page don't change when keyboard appear.\n. Can you include that script to your page use it on iOS device and do \n$('.terminal').jScroll();\nor \n$('????').terminal(function(cmd, t) { ... }, { <options> }).jScroll();\nand check if it's working, if yes then you can just use it, there is no reason to include this code, (mouseweel is little different - line 2380 because there is some initialization code there but maybe I should remove it too, and create documentation how to use those libraries).\nPS: I try to use zepto.js touch events and jquery mobile but it's way to many code and I couldn't extract only that I was needing (I extract some code from those libraries but it was not working). Maybe I will need to implement my own touchscroll library that will work on Android (and maybe on iOS too) I start to play with it.\n. Not much, I don't work on it since last comment. I don't have iPad device, and on Andorid phone scroll don't work. I will try again to fix scrolling, but I think that virtual keyboard can't be fix on Android (text is beneath the keyboard), maybe on iPad it's different. \n. I found another jquery scroll plugin\nhttp://www.areaaperta.com/nicescroll/\nI will try it on Android.\nOn Tue, 21 Aug 2012 06:38:07 -0700\nAyrton Ara\u00fajo notifications@github.com wrote:\n\n@usmanajmal I will test jScroll at night and let you guys know if it\nfix the scroll problems. At the time, the virtualkeyboard works fine\nsame in IOs and Android, using the last version of jquery-terminal.\nI'm just having issues with crazy scroll.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/jcubic/jquery.terminal/issues/36#issuecomment-7901008\nJakub Jankiewicz, Web Developer\nhttp://jcubic.pl\n. Those numbers are heights of different elements look at the source. On andorid when you type more stuff it's hidden bellow the virtual keyboard and there is no way to fix it, so I give up. Maybe I've done some changes that make don't work on Android anymore I've not tested, but since you can't know how big virtual keyboard is you can't work on android with this terminal.\n\nI didn't test on iPhone or iPad I don't have those devices. \nAnd last thing @ayr-ton fix the issue by removing jquery terminal and using different plugin.\n. I'll try to use Mottie/Keyboard to create IME for terminal, so this should solve any issues with virtual keyboard for iPad and Andorid.\n. I've created a demo of terminal working with keyboard. Will check with mobile, I think that it require to use jquery mobile.\n. #39 is fixed.\n. Anybody can test http://terminal.jcubic.pl/android.php on iPad? (You should get echo text on each keypress, it's debug code).\n. Does it work or doesn't?\n. Great thanks for testing.\n. Where you see this? bacause I fix it, I change body to display: none.\n. Fixed.\n. Yes, you can put:\njavascript\n$('form *').focus(function(){ terminal.focus(false); });\nOf this don't work you can try to call disable instead. You can also bind click on document and check If $(event.target).parents().hasClass('terminal'); the second one I'll put into terminal.\n. When you type characters they are append to adress bar, that's why screen keyboard is visible focus is in adress bar.\n. You can type characters using hardware keyboard but not virtual one.\n. I've just read on wikipedia article that WebShell use it's own keyboard for touch devices. I need to look into that. This will also fix #36 \n. I almost fixed the issue, demo here: http://terminal.jcubic.pl/android.html I map terminal cursor to textarea (reusing clipboard) but on Android it act weird (work fine on desktop).\n. I think I've fixed the issue in devel branch.\n. Did you tap on terminal? There is no way to open virtual keyboard onLoad, only native events can trigger keyboard to popup. I can only test on 2.3.3 and you can't isntall google chrome on it (I've tested on builtin webkit browser)\n. I'm using hacker keyboard, will try with builtin one.\n. @mitchelldmcmillan sorry about that, I've changed the API and old api throw exception. But did you was able to type something?\n. I've updated the demo to lastest css and js. And it work on my phone (Andorid 2.3) but enter don't work on different phone I've tested. I've also tested on browserstack on two phones and it work.\n. Fixed enter on that one phone.\n. can you test again and tell me what get echo while you typing?\n. It look like keypress don't work at all, weird.\n. Use android.php file - it use ?<?= time() ?> so it force not to use cache for js and css files.\n. Can you test this page: http://terminal.jcubic.pl/test.php you should get:\nkeydown\ninput keypress\nbody keypress\ndoc keypress\n. I've created workaround when keypress is not fired. Can you test again http://terminal.jcubic.pl/android.php\n. Do you get change logged when you do that? http://terminal.jcubic.pl/test.php what you get now?\n. What keyboard do you use? I've try to install \"swype keyboard trial\" but after install it didn't show up anywhere.\n. How can I recreate your \"swipe\", do I need to install anything? How can I type using swipe?\n. I've made small change, now keyup don't proccess on terminal shortcuts that's handled in keydown (like backaspace). maybe this will fix the issue.\n. @KeithTurkowski  pease use andorid.php file it force not to cache files.\n1. Not sure about this, if you mean that when type type foo you get echo $> foo (below you enter :foo and new prompt and cursor), then that's how it should work.\n. @KeithTurkowski ok, now I understand. Thanks for testing.\n. Sorry, I didn't have the time recently to work with the plugin. also it's realy hard to work when my Android (htc desire Z with A 2.3) work fine. Recently I was testing MacOS when I borrow macbook from my friend for a moment but those fixes are not in the repo yet.\n. You need to pass it as an option to second argument.\n. Right now you can try to use KeithTurkowski fork. You will need to use option altinput: true\n. Yes I will implement this in main branch, I want it for 0.9.0 version.\n. Finally added Keith Turkowski solution with input event to devel branch, I didn't add change event though.\n. I can't open that link on my android phone (2.3.3 with default browser), I've got error that the browser can't establish secure connection but it work on my laptop.\n. try to disable terminal on init using option: enabled: false\n. I've copied your code to my server and testing, don't know yet why your code is not working it work here: http://terminal.jcubic.pl/android.html\n. Fixed in version 0.11.12\n. I think this issue can be closed then.\n. there is logout and clear in history not need for this.\n. Fixed in 0.4.17\n. Why you want to use such a thing http://stackoverflow.com/questions/6404635/is-quirks-mode-relevant-in-2011\n. Ok, I fix it. in Quirks mode this don't work \"hello\"[0] (it return undefined) I need to use substring(0,1) instead\n. This is actually not my code, it's jquery timers, you can report it back to the author (but is licenced under WTFPL)\n. Please use js/jquery.terminal-src.js from now on. I should add it at the beging, I've added it now. is the same file as with version but have {{DATE}} and {{VER}} in it so I can easily change them using make. I also include closure compiler that I use to create minified version. So just modify src file and do make if you will do new pull requests.\n. You can use nested interpreters for that\njavascript\n$('#term').terminal(function(command, term) {\n        if (command == 'foo') {\n            term.push(function(command) {\n                if (command == 'y') {\n                    term.echo('execute your command');\n                } else if (command != 'n') {\n                    return;\n                }\n                // will exit only for \"y\" or \"n\", it will keep asking otherwise\n                term.pop();\n            }, {\n                prompt: 'Are you sure? '\n            });\n        }\n}, {\n  prompt: '> '\n});\nIt will create new interpreter on top, with prompt where you can check if next command is yes or no and execute your code.\n. if you're sending ajax for exec.php?cmd= and it alway return same string Do you really want to continue?\njavascript\n$(...).terminal(function(command, term) {\n   term.pause();\n   var original = command;\n   $.get('exec.php', {cmd: command}, function(result) {\n       term.resume();\n       if (result.match(/Do you really want to continue/)) {\n           term.push(function(command) {\n               if (command.match(/y|yes/i)) {\n                   term.pause();\n                   $.get('exec.php', {cmd: original + ' -y'}, function(result) {\n                       term.resume();\n                       term.echo(result);\n                       term.pop();\n                   });\n               } else if (command.match(/n|no/i)) {\n                   term.pop();\n               }\n          }, {\n              prompt: \"Do you really want to continue? \"\n          }\n     } else {\n          term.echo(result);\n     }\n  });\n});\nShould work, but I didn't test this code. And if it's bash command that accept -y it can don't allow to put it after option like when you put filename at the end, so maybe you will need to insert -y after first space.\njavascript\n{cmd: original.reaplce(/([^\\s]+\\s)/, '$1-y ')}\nI don't know what will happen when you pop interpreter when in pause doing  ajax call, if you got something weird you can do this:\njavascript\n               if (command.match(/y|yes/i)) {\n                   term.pause();\n                   $.get('exec.php', {cmd: original + ' -y'}, function(result) {\n                       term.resume();\n                       term.echo(result);\n                       term.pop();\n                   });\n               } else if (command.match(/n|no/i)) {\n                   term.pop();\n               }\nIf you have different question from command you can detect question mark at the end, and put that result as prompt.\n. No need exceptions are thow outside of terminal and display exceptions can be turn off.\n. Mask need to be stored in interpreter instance and \nif (term.mask() != interpeter.pop().mask)\n   term.mask(top_interpeter.mask);\n}\n. Screen can be implemented I don't know about less.\n. Successfully implemented less using devel version.\n. Implemented don't remember when.\n. that's not how bash terminal work, you can't select to clear only one thing.\n. it's now working but it clear the command line\n. Maybe in WebKit embedded browser there is no local storage and the command line history is too long for cookies or there is limit of localStorage. I should limit history to 100 and make option to set it like in bash.\n@ckcollab what this alert show in your browser?\njavascript\n        try {\n            var data = $.Storage.get(name + 'commands');\n            alert(data);\n            var bc = new BCycle(data ? eval('(' + data + ')') : ['']);\n        } catch(e) {\n            alert(e.message);\n        }\n. @ckcollab How can I test WebKit embedded browser?\n. You can test new option memory: true it don't use localStorage or cookies just the variable that stay in memory.. Closing because of inactivity.. Yes you can, there is focus method and you can pass false as argument. There is issue for this #38 \n. You can't from login function I need to add another parameter for this, but you can expose terminal object returned by the plugin like\n``` javascript\nvar terminal = $('.class').terminal(function(cmd, term) {\n}, {\n   login: function(user, passwd, finalize) {\n            $.jrpc(\"rpc.php\", id++, \"login\", [user, passwd],\n                   function(data) {\n                       if (data.result) {\n                           finalize(data.result);\n                       } else {\n                           finalize(null);\n                       }\n                   }, function(xhr, status) {\n                       var msg = '[AJAX] ' + status + \n                           ' server response: \\n' + xhr.responseText;\n                       if (terminal) {\n                           terminal.error(msg);\n                       } else {\n                           alert(msg);\n                       }\n                       callback(null);\n                   });\n        },\n});\n```\nthis is the code I use. Probably it would be better if it have something like:\njavascript\nlogin: function(user, passwd, finalize, term) {\n}\n. You can also call that plugin again $('.class').terminal() and you will get the object too.\n. This should work as well:\njavascript\n$(window).unload(function() {\n   if (terminal.token()) {\n       terminal.logout();\n   }\n});\n. I think I fix them all, I'll not create tests.\n. closing braket will not work since it close formatting and then it will show formatting and closing braket after that. opening braket should work normaly, and I can allow for escaping closing tags, maybe opening too.\n. you can use this [[u;#f00;]This is a [ braket] normaly, but you must escape closing braket [[u;#f00;]This is a \\] braket] if it's string it need to be \"[[u;#f00;]This is a \\\\] braket]\"\n. What you mean by \"not working\"? do you got any error? can you explain?\n. I think it's not related to terminal, you should ask that on stackoverflow\n. there will be problems with urls like this http://foobar.com/index.php#[\"echo 'baz'\"]. JSON object as hash, I use this kind of urls. Maybe something like reverse markdown (http://foobar.com/index.php#[\"echo 'baz'\"])[foo] but it will break if hash will contain ). Maybe I merge your comit and add escape for open and closing braket like http://foobar.com/index.php#\\[\"echo 'baz'\"\\][click here]\n. But you will not be able to use curly braces inside hash the same as with brakets. http://bla.com/#{\"foo\":\"bar\"}\n. @cjauvin Maybe this is issue with terminal. I check the code why it don't stop on keydown in FF.\n. this work in chrome and FF so it's terminal issue, I'll try to fix it.\n. @cjauvin I found the error, it's Firefox bug, I think. In Google chrome if you return false in keydown, keypress is not fired, but in Firefox is. The letter is not written to input box but event is fired. http://jsfiddle.net/ses2F/1/ And terminal use keypress to render letters.\n. I remove $.browser from terminal and use fallback to regex that match user agent in code from jquery timers so now it work with jQuery 1.9 without migration script.\n. You will need to handle command by yourself\nRight now terminal do this:\njavascript\n            var service = function(method, params) {\n                terminal.pause();\n                $.jrpc(url, id++, method, params, function(json) {\n                    if (!json.error) {\n                        if (typeof json.result === 'string') {\n                            terminal.echo(json.result);\n                        } else if (json.result instanceof Array) {\n                            // handle only 1 dim arrays\n                            terminal.echo(json.result.join(' '));\n                        } else if (typeof json.result === 'object') {\n                            var string = '';\n                            for (var f in json.result) {\n                                if (json.result.hasOwnProperty(f)) {\n                                    string += f + ': ' + json.result[f] + '\\n';\n                                }\n                            }\n                            terminal.echo(string);\n                        }\n                    } else {\n                        terminal.error('&#91;RPC&#93; ' + json.error.message);\n                    }\n                    terminal.resume();\n                }, function(xhr, status, error) {\n                    terminal.error('&#91;AJAX&#93; ' + status +\n                                   ' - Server reponse is: \\n' +\n                                   xhr.responseText);\n                    terminal.resume();\n                });\n            };\nI can make it to display 2 dimention arrays. What exactly is the output from php in JSON?\n. You can use JSON.stringify to print the result by default that function support pretty print\njavascript\nx = {\n  'something': {\n    'main value': 10,\n    'another value': {\n      'x': 'a',\n      'y': 'b'\n     },\n  },\n};\nJSON.stringify(x, undefined, 2);\nIf browser don't implement JSON object (I think IE don't have it) you can use Douglas Crockford's JSON in JavaScript library\nUsing terminal you should echo the result of JSON.stringify\n. it use $.json_stringify so there is no indent\n. token is save in localstorage or in a cookie if browser don't support it. if you want to logout when the browser is close you can do something like this\njavascript\n$(window).unload(function() {\n    $('.terminal').terminal().logout();\n});\nAfter you refresh the page terminal only check if token is in localstorage it don't try to authenticate again but if the token is wrong the RPC function will not be called if there is check in php.\nYou can also logout if you hit CTRL+D when in top interpterer.\n. I can make object to work with push, for now it only work with functions but for now you can use nested objects like this:\njavascript\n    $('#term_demo').terminal({\n        simplecmd: function() {\n            this.echo(\"simple ok\"); //works\n        },\n        people: {\n            nestedcmd: function() {\n                    this.echo(\"a command from people\"); //ko :(\n            }\n        }\n    }, {\n        greetings: \"Welcome, type help for more informations\\n\\n\\n\",\n        name: 'main',\n        height: 560,\n        prompt: '> ',\n        tabcompletion: true\n    });\n. I make object in push work in this commit https://github.com/jcubic/jquery.terminal/commit/ef84a7c43a321308c939147d67052bc78ecb718e\n. It seams that there is an issue with attaching terminal to the body in FF my other demo that use fullscreen <div id=\"shell\"></div> instead, work fine. I only need to fix examples.\nPS: I didn't know that jquery-mousewheel is on github.\n. I have terminal created in this way:\n``` javascript\n    $('#shell').terminal(function(command, term) {\n}, {\n ...\n}).css({\n    overflow: 'auto'\n});\n\n$(window).resize(function() {\n   terminal.css('height', $(window).height()-20);\n}).resize();\n\n```\nand in css:\ncss\nbody { margin: 0; padding: 0; }\nhtml { background-color: #000; overflow: hidden; }\n. I think that found the reason why this happening, if terminal is attached to the body scroll need to be attached to html element in other then Webkit browser, I can add this fix to the plugin.\n. I fix the issue I put $('html') code instead of body in non webkit, and I needed to fix resize event bug in IE.\nRight now the code is in 0.5.4 branch https://github.com/jcubic/jquery.terminal/tree/0.5.4\n. I dind't need to update mousewheel it work fine.\n. I forget to put that code into JSON-RPC, it only work if you pass object as first argument. It work when you escape spaces, I don't know why it don't work without them, when you use spaces inside quotes because it work when you use just \"some string with spaces\" but you will always be able to just quote the json '{\"param2\":\"some string with spaces\"}'. outer quotes will be removed.\n. I commit the fix to devel branch.\n. the code will depend how you want to handle the response on the server. You don't need to modify the code you can use it and build on top of it.\njavascript\nvar socket = new WebSocket(\"ws://server.com:8080/commands\");\n$('<SELECTOR>').terminal(function(command, term) {\n    socket.onmessage = function(msg) {\n        term.resume();\n        term.echo(msg);\n    };\n    term.pause();\n    socket.send(command);\n});\nYou can also assign onmessage callback outside of terminal.\n. I've created simple chat that work:\njavascript\nfunction escape_brakets(string) {\n    return string.replace(/\\[/g, '&#91;').replace(/\\]/g, '&#93;');\n}\n$('#term_demo').terminal(function(command, term) {\n    if (command == 'chat') {\n        term.push(function(command) {\n            if (command != '') {\n                var name = command;\n                window.WebSocket = window.WebSocket || window.MozWebSocket;\n                var connection = new WebSocket('ws://localhost:1337/chat');\n                connection.onmessage = function(response) {\n                    var data = JSON.parse(response.data);\n                    if (data.user != name) {\n                        var line = '[[b;#ffffff;]<' + escape_brakets(data.user) +\n                        '> ' + escape_brakets(data.message) + ']';\n                        term.echo(line);\n                    }\n                };\n                term.pop().push(function(command) {\n                    connection.send(JSON.stringify({\n                        user: name,\n                        message: command\n                    }));\n                }, {\n                    prompt: '[[b;#ffffff;]&lt;][[b;#7E2020;]' +\n                        escape_brakets(name) + '][[b;#ffffff;]&gt;] '\n                });\n            }\n        }, {\n            prompt: 'login: '\n        });\n    }\n}, {\n    height: 305,\n});\nwith server written in ruby (using https://github.com/gimite/web-socket-ruby)\n``` ruby\nrequire 'socket'\nrequire 'web_socket'\nrequire 'json'\nserver = WebSocketServer.new(\n  :accepted_domains => 'localhost',\n  :port => 1337)\nputs(\"Server is running at port %d\" % server.port)\nclients = []\nserver.run() do |ws|\n  clients << ws\n  puts(\"Connection accepted\")\n  puts(\"Path: #{ws.path}, Origin: #{ws.origin}\")\n  if ws.path == \"/chat\"\n    ws.handshake()\n    while data = ws.receive()\n      printf(\"Received: %p\\n\", data)\n      data = JSON.parse(data)\n      response = JSON.generate({\n        'user' => data['user'],\n        'message' => data['message']\n      })\n      clients.each {|ws|\n        ws.send(response)\n      }\n      printf(\"Sent: %p\\n\", response)\n    end\n  else\n    ws.handshake(\"404 Not Found\")\n  end\n  puts(\"Connection closed\")\nend\n```\n. There is historySize parameter (the default is 60) is the number of commands in history.\n. Now I get it, there is not such thing, but I think it will be good to have, since if there will be lot of input it will slow down the page, on resize or on import/export. I'm thinking about bufferLimit that will be false by default and it will be number of lines rendered by terminal, if new line will be echo it will remove first lines from buffer. The easiest will be just to treat each echo like one line. or maybe put another option keepOriginalLines so export/import will work the same and only display will change. or maybe always keep original lines.\n. I think that the easies way is to check the DOM after echo and on resize to clear the lines that should not be in terminal. There will be to many issues with line wrapping and new lines to do otherwise.\n. outputLimit option have 3 values:\n- -1 - (or any negative) - scroll limit disabled (default)\n- 0 - limit scroll set to number of lines in terminal\n- <positive number> - scroll limit set to that number\nPushed to devel branch.\n. The problem was with prevent_keypress if keydown return false, I just remove that code.\n. It happen only if entity is at the end.\n. This is mistake in doc, it should just function that return string just like normal echo does. But you can use onInit which is executed after greetings.\njavascript\n$('.selector').terminal($.noop, {\n   greetings: false,\n   onInit: function(term) {\n     setTimeout(function() {\n         term.echo('Hello World');\n     }, 3000);\n   }\n});\n. And prompt is always at the end not matter how long it take to execute echo function. The only case for the prompt to be before greetings is to press enter that will echo prompt and command.\n. Actually if you have onInit you don't need greetings at all.\n. You can pause terminal onInit and resume it when greetings is ready:\njavascript\n$('.selector').terminal($.noop, {\n   greetings: false,\n   onInit: function(term) {\n     term.pause();\n     setTimeout(function() {\n         term.resume();\n         term.echo('Hello World');\n     }, 3000);\n   }\n});\nThis will disable a way to type commands until greetings is ready. It would be weird when something appear before the first echo. I don't think that it's good idea to have greetings anyway, but in this case I will not have terminal signature when user don't specify greetings.\n. Fixed in devel\n. I change code to use options in echo function.\njavascript\nterminal.echo(\"string\", {raw: false, finalize: function(o) { } });\n. Please add curly braces to if statements and one whitespace after if. Before open curly brace should be one space as well.\n. The only problem is that line wrapping will not work with custom html.\n. Wouldn't it be better to just not escape, the string in echo? like an option escape:false and print whatever user put into string. Why you need <!--HTMLRAW--> if the user put escape:false then he will be responsible to escape the string if needed.\n. I was thinking about toogle $.terminal.encode function in echo. it will still format [[ and ansi. In some of the old versions I use raw paramter in echo function that was inserting html.\nI can put raw option back in that will toogle encode in format function line 1470 and use it in echo and draw_line \n. I use terminal.echo(\"<button>helo</button\", {raw: true}); instead\n. You mean chinese/japanese characters?\n. Can you explain?\n. Terminal can't handle input method because you can't intercept events while you type and when you select right word (on Linux with iBus) and you need input field for that.\nFor right input method in JavaScript you will need to implement your own in html/javascript. There is Input Method Editor API - W3C Working Draft but I doubt that any browser implement it since it's only few months old.\n. I watch talk on YT that google docs use hidden content edited iframe or textarea just to grab the input metod. I'll try to take a look at what they did, maybe I will be able to make it work for terminal.\n. It should be fixed in version 0.11.18.\n. Can you create test page with tabs and terminal so I can test this, and also can you use not minified foundation script. I will try to run it through debugger to see what's going on.\nPS: do you have the same error if you type something in terminal and then switch tabs?\n. Fixed in devel branch.\n. Using Zurb Foundation tabs it would be nice if you can attach event on tab swich to focus in terminal so you don't need to click on terminal to type something.\n. The reason is that the code first split the lines and then format them, and from_ansi function (that convert ansi to builtin formatting) should be executed before split.\n. There is no need to this type of code because terminal already have it when split text and keep formatting. I only move $.terminal.from_ansi to draw_line function.\n. I also remove \\x1B from output text. It was not remove because I didin't use in the code I was using because JSON.parse didn't work when it have that character.\n. I made few changes in next commits can you test on latest version, because for me colors are rendered normaly.\n. Sorry I forget to push last changes. It should work now.\n. If your terminal is off screen when initialized it need to have enabled: false option passed to it, because terminal have focus on init by default.\njavascript\n$(\"#demo_term\").terminal(function(cmd,term) {}, {height:200, enabled: false});\n. It's ok now, there was no space left on virtual server and when I upload a file it cleared the files.\n. It seams that browsers don't support blink element.\n. created two pairs of functions:\n$.terminal.parseCommand\n$.terminal.parseArguments\nand:\n$.terminal.splitCommand\n$.terminal.splitArguments\n___Arguments process string and convert it to array, and ___Command return object {name, args} from command string.\n. it can be use outside of terminal.\n. now all interpeters names have selector || name + _ + terminal index + _ + list of interpreters separated by _ + _\n. Fix in devel\n. What page throw this error, is it one of examples? Demo on http://terminal.jcubic.pl/ is working file. \nThere is error in json-rpc demo but the one you describe.\n. Are you sending data with Chunked transfer encoding?\n. You can check this question on stackoverflow.\n. Do you use JSON-RPC for this, passing a path to terminal?\n. If you don't use builtin json-rpc (using string as first argument) then this not belog to terminal to implement the thing. You need to look at HTTP_Streaming at ajaxpatterns.org and implement it by yourself.\n. You can't. The only thing you can do is not output that \"C:\" and change the prompt to be that string. How do you output that \"C:\"? Can you show your code?\n\nSend from my Android phone\n----- Reply message -----\nOd: \"sajkog\" notifications@github.com\nDo: \"jcubic/jquery.terminal\" jquery.terminal@noreply.github.com\nTemat: [jquery.terminal] Set prompt on same line as output (#114)\nData: \u015br., sie 7, 2013 14:08\nI want my prompt to be empty and next to last output but have no idea how to do that.\nLets say my last output was \"c:\\\"\nCurrently it will display as :\nC:\\\n_\nWhere \"_\" is blinking prompt (empty)\nhow can I set it so that its:\nC:_\n??\nCheers\n\u2014\nReply to this email directly or view it on GitHub.\n. You can return JSON from websockets {\"output\": \"<OUTPUT>\", \"prompt\": \"<prompt>\"} and change prompt when receive the data from websocket.\nI think that your sulution will not work when you resize browser window (last lines should appear), you should remove that last line on the server or in response to websocket.\nI have bash shell written on top of terminal and I return output and cwd and change prompt accordinly. I set it to a function so whenever the path change the prompt is changed.\n. Yes, I use the easiest way to slice the lines (using jQuery), I need to fix that, so lines stays in memory (array).\n. The whole purpose of resize is to redraw the output of the terminal so long lines wrap correctly.\n. And resize is triggered after greetings I don't know why but delay $(window).bind('resize.terminal', fixed the issue.\n. It should be fixed, comitted to devel branch.\n. But on resize event it should redraw only in height and width of the terminal changed (maybe it only need to check width). So if you have fixed size terminal (not attached to body element) then there should be no redraw.\n. I already fix it, with b54588e498878a0f08835654f22b31ff6f9b2ee9 (Fix flush when no outputLimit), can you test if the bug is still there? I push commit to master branch after create a tag. Maybe I should name it 0.7.5\n. Created version 0.7.5\n. Please edit jquery.terminal-src.js file and run make. (You will need closure compiler).\n. And you can use function for greetings but a function need to return a string, echo accept a function too.\n. Better is to fix terminal, if you put console.log(Error().stack); and use google chrome you will see the stack, and you can check what line call $.inArray.\n. Ok I found the error it's a typo\nif (!$.inArray(interpreter_name, name)) {\nshould be\nif (!$.inArray(interpreter_name, names)) {\n. there is pause() / resume() just for that purpose.\njavascript\nif (command == 'foo') {\n    term.pause();\n    $.get('someurl', function(response) {\n        term.echo(response);\n        term.resume();\n    });\n}\npause will do css('visibility', 'hidden');\npause and resume is also needed to run exec right, when you run few exec commands one by one and want right order of responses, it rely on resume/pasue.\n. There is already something like this in. It's in the code you removed, check this http://jsfiddle.net/K6WTu/1/ type h and tab.\n. No worry.\n. You can't, echo always add new line at the end, because otherwise I will need to put line and prompt in the same line. And if I add newline on flush echo will need to act different depend on flush option, which I think will not be good thing.\n. Maybe the solution is to add a way to insert text before the prompt and a way to not insert new line.\n. I can't reproduce, can you show your code? And what version of terminal you use? Can you test with latest 0.7.6?\n. It work on demo (both as echo and command line type by hand and using insert function). Can you show your exact code, steps you did, and what version you are using?\n. Yes you're right it don't wrap, but it work when I resize the window (it will call resize()) so you can fix it by just adding\nonInit: function(term) {\n    term.resize();\n}\nto terminal options. I check why it don't calculate number of characters on init.\n. The reason was that command_line.resize was not called on init so only terminal know how many characters are, but command line not.\n. Does it work when you resize the window? You can also try $('...').terminal(...).resize();.\n. what about if you use version 0.7.7?\n. I don't know why it's happening (the flush and echo functions don't use setTimeout and they are executed properly), but you can try recursive loop using setTimeout:\njavascript\n(function recur(n) {\n    $.terminal.active().echo(n);\n    if (n < 10) {\n        setTimeout(function() {\n            recur(n+1);\n        }, 100);\n    }\n})(0);\n. This is not related to terminal, your sleep function freeze the browser that have only one thread.\nThis code also don't show up immediately\njavascript\nvar pre = $('pre');\nfor (var i=0; i<10; i++) { \n    pre.append(i + '\\n');\n    sleep(500); \n}\nfunction sleep(ms) { // just for the test\n    var startTime = new Date().getTime();\n    while(new Date().getTime() < (startTime + ms));\n}\nDEMO\n. login: true work only with JSON-RPC (if you pass string - the url - as first argument) if you want to use login but without JSON-RPC you can use function as login. It seams that I didn't put example how to do this:\njavascript\n    shell.terminal(function(command, term){\n        console.log(command);\n    }, {\n        greetings: motd,\n        prompt: promptCurrent,\n        login: function(user, password, callback) {\n            if (user == 'demo' && password == 'secret') {\n                callback('SECRET TOKEN');\n            } else {\n                callback(null);\n            }\n        }\n    });\nbut it's better to use server to check for password and generate token using for instance md5 hash function. You can get the token in your command function using terminal::token();\n. Added this to docs.\n. For me too, if you type something and don't hit enter that command will be your last in history, but if you don't, you will have empy string (which in fact is the same).\n. I have B, it's a bug.\n. I've updated the example. The original idea was to put typed prompt not typed message (someone ask me via email about it and I thought that I put it as example) the text like \"what's your name: \" appear like user type it.\n. Can you put:\njavascript\nif (length < 0) {\n    console.log(arguments);\n    console.log(Error().stack);\n    throw \"length negative\";\n}\ninto str_parts and try to do the same things? If it throw exception it should freeze.\n. Can you use version 0.7.10? It look like in your case prompt have 3 characters and num_chars is 0.\nCan you put exact code online, and tell me what command line you try to execute (or is it empty string).\n. Can you provide demo online where I can test it, the bug can be in other place. Maybe zip file with all dependecies so I can edit and put debug stuff.\nstr_parts is always executed agains num_chars variable, maybe the problem is in resize that's triggered when terminal is hidden.\n. I prefer the zip file because it will be easier to debug (I will be able to modify a file, make a fix and try it out).\n. Fixed, the problem was that terminal try to calculate the number of characters when it was invisible. I test in FIrefox and Chromium and in both cases width of hidden terminal was -20.\n. The bug was introduce when I remove call to resize on init.\n. Errors are handled by terminal if JSON-RPC return error (it need to be proper JSON) it's displayed on terminal\n[RPC] Procedure `asd' not found\nMy php implementation add method name to error message.\nYour Python should return JSON that look like this, and if it does the message should be displayed on terminal.\n{\"jsonrpc\": \"2.0\", \"error\": {\"code\": -32601, \"message\": \"Procedure not found.\"}, \"id\": 10}\n. When I run the code (after remove id++) I've got JSON error:\n{\"jsonrpc\":\"2.0\",\"result\":null,\"id\":3,\"error\":{\"code\":-32603,\"message\":\"Internal error: MySQL Error: No database selected\"}}\nShow php errors are disabled on Ubuntu/Xubuntu I'm using by default\n. I've added @ before mysql functions anyway.\n. I need to remove json-rpc.php file and add submodule, I'll fix it in json-rpc repo.\n. Added submodule in json-rpc repo MIME already was application/json\n. There is no www in the repo, but it's on my disk (it's files for http://terminal.jcubic.pl it's speed up upload process just cd www; make; make upload) and also I don't think it's good idea to put files for the site in repo for the library.\n. Right now if you paste text with newlines it paste it as single command, I can create option to change that behavior because some people may want to paste it as single command too. And also maybe if there is quote at the begining and there is no closing one it will keep it as one command (as in bash).\n. I'll need to move exec out of terminal and put it into command line, and also you your code number of quotes need to be calculated for the whole text not just a line because newlines can be between quotes and also regex for quotes need to check if quote is not after slash (\\\") and it should support single quotes too.\nSo the code need to be more complex in it need some rewriting.\n. I will not implement this becasue I will need to move exec to cmd and add pause to it (cmd have only enabled flag) pause is use to delay commands. cmd plugin should be simple.\nif you want to have this paste you can use keydown option to terminal and use your paste instead of built in one.\njavascript\n$('...').terminal(..., {\n    keydown: function(e, term) {\n            if (e.which === 86 && e.ctrlKey) {\n                term.echo(\"<YOUR PASTE HERE>\");\n                return false;\n            }\n        }\n});\nI can add options to get text from clipboard. For now you can get it using term.find('textarea').val()\n. I've found this old issue, I think it will be good idea to add onPaste event and there you will be able to split on newline and call exec, return false will disable default paste. Will track the progress in #453. Do you get that in termianal in red, in console or as alert box? Did that happen on init or when executing a command?\nWhat is your code?\n. Thanks for the fixes, English is not my native language and I make lot of mistakes.\n. If you want to add top like command, then first you need to export all the stuff that was print to terminal (using export_view method) then you need to run in a timer (setTimeout) clear and echo the stuff you want to display.\nCheck starwars or less examples.\n. What exactly you wanted me to do here?\n. @krainboltgreene you can do animations using command line insert or set_command methods. There is typewriter writing example on the site.\n. I'm not planning to add echo without new line, closing.\n. You can't have blocking functions in JavaScripts, the only blocking functions are the builted ones: prompt, alert and confirm. If you want to have something like this you need to use callbacks.\nPS: There is no getline function but you can use push for that.\njavascript\nif (command == 'foo') {\n    term.push(function(string) {\n        term.echo('You typed: ' + string);\n        term.pop();\n    }, {prompt: 'foo> '});\n}\n. Few questions:\n- Do I need to use name jcubic/jquery.terminal or can I just jquery.terminal?\n- I have devel depentences of uglifyjs but it's not in bower directory it's in npm should I include that?\n- Does bower fetch everything? Should I ignore some files in git repository like .git directory?\n- Terminal have only 2 files that are needed for working css file and jquery.terminal-min.js which is always latest minified verion, should I use:\n  \"main\": [\"js/jquery.terminal-min.js\", \"css/jquery.terminal.css\"],\n  will it fetch only those two files?\n- I have jquery dependency it's in js/ directory should I include that in \"main\" or put it in dependencies? Which version should I pick?\n. There is bower file now.\n. Pushed to devel brach. will be in next 0.8.0 version\n. Can you create this request again against devel branch?\n. I can put your changes, but it would be better if you create another PR so when I merge you'll be on the list of contributors\n. When terminal is pause it don't execute commands, they are delayed so they are executed in order when there are ajax calls (they need to use pause/resume). In devel branch I've added options to exec as second parameters - silent and force (silent was old parameter, if set to true it don't echo the command you exec, and force execute command even if terminal is paused), I've also updated css file to style cmd if created without terminal. \nYou can now do what you want, but you need to keep in mind that you need to:\n1. Put enabled: false and onFocus: function() { return false; }, it will not enable terminal on click\n2. You need to handle enable/disable on click and when you have input boxes or textareas you need to disable cmd plugin\njavascript\n$(document).click(function(e) {\n   var sender = $(e.target);\n   if (sender.closest('.cmd').length) {\n       cmd.enable();\n    } else {\n        cmd.disable();\n   }\nor \njavascript\n$(document).on('focus', 'input, textarea', cmd.disable).on('click', '.cmd', cmd.enable);\nYou can pass terminal and cmd methods, because I don't use this in those methods.\nThe version of the file is 0.8.0 but it's devel branch and final 0.8.0 may have other fixes and features. The option force may be removed from next version, maybe exec will work when terminal is disabled but not when it's paused.\n. If you keep that on the server I can link to that page on example\n. I've removed options for exec. Now it only have one argument silent as before. Now there is difference between paused and enabled. Disabled terminal allow to call exec.\n. You can just call exec(\"command\") and it will work, and if you don't want to see prompt> command then you can do exec(\"command\", true). I just fix resume because exec was not executing, so you need to download again.\n. Fixed in devel\n. Can you show code (or demo) where you use the terminal? And what is PJAX?\n. You're not using terminal and Pjax as it should be used. As for terminal use api provided. As for History API I sugest differnt library that alow for callbacks. Also in your code you don't have full change on back button only url and image change the command entered stay the same.\nIn order to have proper state you need to use export_view / import_view functions. Here is the code I've came up with (that use HTML5-History-API library which is just a polyfill so it use raw HistoryAPI)\njavascript\n$(function() {\n    var save_state = [];\n    var terminal = $('#term').terminal(function(command, term) {\n        var cmd = $.terminal.splitCommand(command);\n        if (cmd.name == 'open') {\n            term.pause();\n            $.get(cmd.args[0], function(result) {\n                term.echo(result, {raw:true}).resume();\n                save_state.push(term.export_view());\n                history.pushState(save_state.length-1, null, cmd.args[0]);\n            }, 'text');\n        } else {\n            // store all other commands\n            save_state.push(term.export_view());\n            history.pushState(save_state.length-1, null, '/' + cmd.name + '/' + cmd.args.join('/'));\n        }\n    });\n    save_state.push(terminal.export_view());\n    $(window).on('popstate', function(e) {\n        if (save_state.length) {\n            terminal.import_view(save_state[history.state || 0]);\n        }\n    });\n    $('.links a').click(function(e) {\n        terminal.exec('open \"' + $(this).attr('href') + '\"');\n        return false;\n    });\n});\nsave_state store exported view of the terminal and index in history.state. If history.state is null it mean that it's first page so code can grab 0 index (that exported after terminal creation).\nThe above command store in History API all commands that you type into the terminal. (I think that I put that code on examples).\n. I can add this to the terminal, it can store state just before next command be executed and it can store urls based on user function:\njavascript\n$('...').terminal(function(cmd, term) {\n}, {\n   historyState: true,\n   historyStateUrlMapper: function(command) {\n       // whatever that function return, will be stored as url, default will be\n       // default can be \"real url\" + command.replace(/\\s+/g, '/');\n       // if the value is null the url will not be stored, so it will act as filter.\n   }\n});\nSo your code in this case will be just:\njavascript\n$('...').terminal({\n    open: function(url) {\n        var self = this.pause();\n        $.get(url, function(result) {\n            self.echo(result, {raw:true}).resume();\n        }, 'text');\n    }\n}, {\n   historyState: true,\n   historyStateUrlMapper: function(command) {\n       if (command.match(/^open/)) {\n           return command.replace(/^[^\\s]+\\s*/, '');\n       }\n   }\n});\n. I can make that historyState into terminal 0.9, nice feature, I don't have much features to add to new version of terminal.\nto disable clear in the terminal you need to comment out that line:\nhttps://github.com/jcubic/jquery.terminal/blob/master/js/jquery.terminal-src.js#L3815\nit will never redraw terminal, but you will not have line wrapping. Clear is used to draw lines (proper lines that was echo using echo function) again.\n. I can add that history feature when I find some time, and then you will be able to grab it from devel branch.\n. I've added the feature to devel branch.\n. You don't do that with terminal. Maybe I can pushState on import_view and add flag that will prevent that to that function so popstate will be able to use import without pushing state.\nDo you use import/export to change image to video? Because that is the only way to change lines dynamically that will keep terminal internal state.\n. Export give you access to internal array of lines, that are redraw on refresh. I can prepare demo how to modify lines.\n. The code will be:\njavascript\n    $('.selector').terminal(function(cmd, term) {\n        if (cmd == 'foo') {\n            term.echo('<img src=\"/some/image.png\" data-replace=\"/some/other/image.png\">', {\n                raw: true\n            });\n        }\n    }).on('click', 'img', function() {\n        var self = $(this);\n        // get index of the line you just click on\n        var index = self.parents('.terminal-output > div').index();\n        // you can also use $.terminal.active()\n        var terminal = self.parents('.terminal').terminal();\n        var view = terminal.export_view();\n        var line = view.lines[index][0]; // index 0 is a string 1 is options for the line\n        view.lines[index][0] = line.replace(self.attr('src'), self.data('replace'));\n        terminal.import_view(view).save_state();\n    });\nI came into a problem that lines in export/import was using shallow copy (lines.slice(0)) and when you modify what you exported you where changing old state, I fix that in last commit  (save_state() is new API function I've added, it push history state and export_view() so you can call it if you do something outside of terminal like the click event here).\n. In my case none, but you can pass arguments to that function save_state(title, url). (I think that title is not used at all by the browsers).\n. If you're interested, I think I remove historyState and use hash change, it's much better because it keep state when you refresh. Here is the code, right now outside of terminal:\n``` javascript\n$(function() {\n    var state = [];\n    var save = false; // don't change hash onInit\n    var process_hash = true;\n    var terminal = $('body').terminal($.noop, {\n        onAfterCommand: function(term, command) {\n            if (!$.isArray(commands)) {\n                commands = [];\n            }\n            state.push(term.export_view());\n            commands.push([state.length-1, command]);\n            if (save) {\n                // don't call hashchange on this change\n                process_hash = false;\n                location.hash = JSON.stringify(commands);\n                setTimeout(function() {\n                    process_hash = true;\n                }, 100);\n            }\n        },\n        onInit: function(term) {\n            state.push(term.export_view());\n        },\n        onBlur: function() {\n            return false;\n        }\n    });\n$(window).hashchange(function() {\n    if (process_hash) {\n        try {\n            if (location.hash) {\n                commands = $.parseJSON(location.hash.replace(/^#/, ''));\n            } else {\n                commands = [];\n            }\n            if (commands.length) {\n                var json_state = commands[commands.length-1];\n                if (state[json_state[0]]) {\n                    terminal.import_view(state[json_state[0]]);\n                } else {\n                    // don't change hash with this exec\n                    save = false;\n                    terminal.exec(json_state[1]);\n                    // undocumented terminal fire this event\n                    terminal.bind('resume.hash', function() {\n                        save = true;\n                        terminal.unbind('resume.hash');\n                    });\n                }\n            } else if (state[0]) {\n                terminal.import_view(state[0]);\n            }\n        } catch(e) {\n            terminal.exception(e);\n        }\n    }\n});\n\nvar commands;\nfunction exec_hash() {\n    if (location.hash) {\n        try {\n            commands = $.parseJSON(location.hash.replace(/^#/, ''));\n            $.each(commands, function(i, command) {\n                try {\n                    terminal.exec(command[1]);\n                } catch(e) {\n                    var cmd = $.terminal.escape_brackets(command);\n                    var msg = \"Error while exec with command \" + cmd;\n                    terminal.error(msg).error(e.stack);\n                }\n            });\n        } catch (e) {\n            //invalid json - ignore\n        }\n    }\n}\nexec_hash();\nsave = true;\n\n});\n```\nIt use jQuery hashchange and I've added onAfterCommand callback (I dind't push onAfterCommand into devel branch yet). I not sure if I should put that code into terminal. Maybe I should just put it as example.\n. Here is demo http://terminal.jcubic.pl/latest.html (it use uncommited jquery.terminal-src.js file).\n. You'll have better luck if you ask on StackOverflow and you should show your code. Without any code you can't do much.\nI can't help you much with Ember but if you show your Ember code and tell me what exactly you want from terminal, I may help.\n. I've answered your question on SO.\n. Your code crash when you hit cancel, it almost crashed my system. It seems that you have infinite loop there. What is excatly your C code.\n. I think that you should alk this on emscripten repo, since it's emscripten related. But I think it will not be fully possible since C app can print text without newline at the end and then read something. You will need to juggle with prompt change to make it work.\n. I've ask about NCurses here kripken/emscripten#2272 and they said that there will be a problem with sync/async functions the same will be with terminal.\n. There was new StackOverflow question and I was able to create a hack that allow to use async read terminal method instead of browser build in prompt, the code abuse fetch emscripten API to do this.\nHow can I run an interactive program compiled with Emscripten in a web page?\nI'm provided SO instead of solution gist, so you see how OP input C code look like. The question have open bounty so maybe someone will come up with better solution.. One question: if you use lot of html and also run plugins on it, why you use terminal, just use cmd plugin and handle the output by yourself, you only need to run append on some div.\nvariable is always undefined before you assign the value to it.\nWhere can I find the code where you run that carousel plugin?\n. In your code you put my comment in wrong place: // you can also use $.terminal.active() it should be next to var terminal = jQuery('#terminal').terminal();\n. Can you tell me where is that code that trigger this error? I need to be sure there is no errors in terminal. But I think that maybe you've added jquery object or DOM node to line and that trigger the error, since I think, that DOM node have cycles.\n. Weird. I'll try to test it.\n. I've replace $.clone with clone. maybe that will work, maybe that plugin use that function for something different. I should not extend jquery like that.\n. When you get that error, try use not minified version you will see where error is coming from.\n. This work for me without errors:\njavascript\n       } else if (cmd == 'bug') {\n            var html = '<div class=\"gallery\"><div>One</div><div>Two</div><div>Three</div></div>';\n            term.echo(html, {raw: true});\n            $('.gallery').carouFredSel();\nbut instead calling $('.galery') you should use finalize function (so it will work when you resize the browser):\njavascript\nterm.echo(html, {raw: true, finalize: function(div) {\n   div.find('.gallery').carouFredSel();\n}});\nMaybe you're executing plugin over a plugin, if you have more then one gallery on the page.\n. Does it work without terminal included?\n. with just cmd? cmd don't use any mouse events, but terminal use mousewheel and click event.\n. Did you try to remove terminal at all from the document? Maybe it's not related to terminal and just carouFredSel bug.\n. I'm closing this, the original issue was resolved. If you still have a problem, create another issue with just touchEvents.\n. There is onInit and onExit (options that need a callback function), but if you have login function onInit is after login, so you need to use onBeforeLogin. onExit is not executed if you don't have login because you actually don't exit the interpreter. if you want exit in that case you will need to use $(window).on('unload', ....\n. You will need to remove it or hide. for hide, just do:\njavascript\n.terminal(function(command, term) {\n   if (command.match(/^ *exit *$/)) {\n      term.hide();\n   }\n}, {\n    exit: false // disable default exit command\n});\nYou can also use onExit, but you will need to have login.\nif you want to remove the terminal call term.destroy(); instead of hide().\n. You can't change login option like that, you're changing login function from the API. If you need to login conditionaly use login function (yes the one that you've try to overwrite):\n``` javascript\nonInit: function(terminal) {\n   if (!isAlreadyConnected) {\n       terminal.login(cli_auth);\n   } else {\n       greeting(terminal);\n   }\n}\n// you can call this function in cli_auth after login\nfunction greeting(terminal) {\n       terminal.echo('Welcome\\n');\n}\n```\nthe login function is used inside terminal like this:\nself.login(settings.login, true, initialize);\nso if you overwrite that function you need to call that 3rd argument, maybe this will work:\nfunction true_func(auth, inf, success) {\n    if ($.isFunction(success)) {\n        success();\n    }\n}\nPS: what exception did you get?\n. Do you have full code somewhere? A demo would be nice.\n. Can you create jsfiddle? You can link the files from terminal.jcubic.pl site.\n. It work fine on IE, I type exit and refresh and I got login. I don't see any error here. I used this code:\njavascript\nfunction runcli() {\n    jQuery('#term').dterm(function(command, term) {\n        term.pause();\n        if (command){\n            term.echo(command);\n            term.resume();  \n        }\n    }, {\n        login: cli_auth,\n        onInit: function(terminal) {\n            greeting(terminal);\n        },\n        width: 480,\n        height: 320,\n        greetings: false,\n        autoOpen: false,\n        name: 'Term1',\n        prompt: '> '\n    });\n}\nCan you show your real code, the bug is in the code that you don't show.\n. One note, I've just notice that in your code you use different name for first and second terminal, if you want use history or token data in other terminal they need to have the same name.\nAlso there no token option and onExit need to be a function.\n. exit: true is default you don't need to use it. And try to type exit as login name to see if you get access without user/password. That's why I put exit:false.\n. Also one note, you can make code shorter if you move options to object.\n``` javascript\nfunction runcli(){\n    var options = {\n        onInit: function(terminal) {\n            greeting(terminal);\n            CLI_TERMINAL = term;\n        },\n        token : true,\n        width: 480,\n        height: 320,\n        greetings: false,\n        exit: false,\n        onExit: false,\n        autoOpen: true,\n        name: 'Term',\n        prompt: '> '\n    };\nif (isAlreadyConnected){\n    options.login = cli_auth;\n}\nCLI_TERMINAL = jQuery('#term').dterm(function(command, term) {\n    term.set_prompt('> ');      \n    term.pause();\n    if (command){\n        term.echo(command);\n        term.resume();  \n    }\n}, options);\n\n}\n``\n. Hi thanks for the fix, can you create this PR against devel branch?\n. There's need to belocalparameter, the same as intokenmethod, and I will need to add get_token method for symmetry.\n. I don't see it in latest version. Can you test with 0.8.7? Note that this not valid formatting so it should display it as text. Valid formatting need at least 2 semicolons.\n. Probably because your&look like inside of url. I'll try to fix this in next version that's inside devel branch.\n. Fixed in devel branch.\n. You're asking if those keys work on your system? I don't have access to Mac OS but on Windows if you want to type~you also need to type space after. It work without any extra code beause windows send just one event with~`. Don't know about Mac OS.\nYou have Mac OS, feel free to test. You can also submit a patch with a fix.\n. First you need to test if you get two events for those keys. Check what keyCode/charCode or which is return on this page http://api.jquery.com/keypress/. Then you need to look at keypress event handler in cmd plugin Lines: 1628-1659. If keypress fire twice then you will need to write varible outside that that store the key and it insert it on second space. If not maybe keydown fire twice in this case you will need to put your code in keydown that's defined at Line 1176. If only one event fire then you need to check what properties that even have and write the code for those cases in keypress. If you created a patch you can write issue number as comment.\n. I've created test terminal with keypress and keydown commands that prints the event properties\nhttp://terminal.jcubic.pl/latest.html\nIf you give me the output of those dead keys, I may be able to fix the code.\n. Did you read this: How can I eliminate dead keys on Mac OS X with international keyboard?\n. Can you insert those characters using google docs?\n. Here is SO question about dead keys I've ask if you interested How to solve issue with OSX dead keys with jQuery?\nI'll check how google doc handle that. I think that I only need to detect if for those keys after keydown there was keypress (in keyup) and if not in next keypress I'll modify the letter.\n. Devel branch use event.key if supported by the browser here is browser support, but it seems that it's not supported by Safari.. Finally was able to install MacOSX on virtualBox and fixed the issue. the fix will be in version 1.0.7. That would be great, I wanted to add test after this question: #149 but didn't have time. I've created the code that can be used to test the DOM from headless browser. \nI had tests but they where inside of terminal code, and only for functions in $.terminal object, I've moved them to test.js file, I've just added that file to repo in devel branch 6ee83f0d18fda7b295b8c6d2763f89cebf9333c9\n. Do you realy need grunt and in coffescript? I use make. Can you just add test to make so it can be executed with make test?\n. I've pushed Jasmine tests to devel branch. I'll not use grunt I have make. I'll use phantom.js to test from command line and I'll add make test to run it.\n. Default behvior is to save token in localStorage, but you can remove that token if you logout on onload event.\njavascript\nvar terminal = $('body').terminal(function(command, term) {\n}, {\n    login: f_login,\n});\n$(window).unload(function() {\n    terminal.logout();\n});\nI should probably create a way to not store token in localStorage and only keep token in memory.\n. You can try:\njavascript\nvar terminal = $('body').terminal(...);\nif (terminal.token()) {\n    terminal.logout();\n}\nIf that don't work, you can implement your own login and don't use localStorage,\n``` javascript\n$('body').terminal(function(cmd, term) {\n}, {\n  exit: false, // prevent exit from login\n  onInit: function(term) {\n     term.push(function(user) {\n         term.mask(true).push(function(pass) {\n             if (user == 'demo' && pass == 'demo') {\n                 term.pop().pop();\n             } else {\n                 term.echo('Wrong password or login try again').pop();\n             }\n         }, {\n             prompt: 'password: ',\n             keydown: noExit\n         });\n     }, {\n         prompt: 'login: ',\n         keydown: noExit\n     });\n  }\n});\nfunction noExit(e, term) {\n     if (e.which === 68 && e.ctrlKey) { // CTRL+D\n         // need to use apply for keydown so you can use this\n         if (term.get_command() === '') {\n             return false;\n         }\n     }\n}\n```\nI will make option for login without localStorage.\n. Thanks for the report. No it's not public, but JS code is not minified and only php for adding comments is not visible.\n. I've putted website in it's own repo\n. scroll_object is:\njavascript\nif (!agent.match(/(webkit)[ \\/]([\\w.]+)/) &&\n    self[0].tagName.toLowerCase() == 'body') {\n    scroll_object = $('html');\n} else {\n    scroll_object = self;\n}\nSo it scroll window or terminal, because you can have div with content longer then the height of the element, so you need to scroll it. Your change will not make difference because scroll_to_bottom() need to be called in echo (by default terminal don't call scroll_to_bottom in echo).\n. Maybe you didn't set height.\n. % should work but if you do non standard resize you need to call resize() method (without arguments it's like refresh). resize is called on window resize.\nIf it's not working I can check why. Do you have a demo?\n. When I use full screen terminal I use:\njavascript\nvar $win = $(window)\n$win.resize(function() {\n    terminal.height($win.height()-20)\n}).resize();\nit's because of padding:\ncss\n.terminal {\n    padding: 10px;\n    position: relative;\n    overflow: hidden;\n}\n. innerHeight work without -20px.\n. It's fixed in devel brach, I change the code so it escape everything. In version you're using I was escaping & only when they don't look like in url. In devel branch I simply replace back&amp; to & when used in urls.\nPS: Can I include your site in \"in the wild\" section?\n. not sure, I still have few thing to add. If you want to experiment you can grab a file from devel branch, the last one should be stable 2e4b0266684d233639f94391cecad659722a4eb5 don't forget to grab new css file (I need to put version in that file too).\n. link to the tree\n. I want to have all methods kebab_case and those 4 methods was camel case, I decide that I don't just remove those methods but also for old methods throw exception so people will see this.\nIs this a problem? Also I've changed 0.9.0 to 0.9.0_dev to distingush if someone is using devel version.\n. Yes, just create keydown callback and return true or false (there is also keypress event but most shortcuts use keydown). If you return true it will trigger default browser shortcut like CTRL+F. If you want to disable CTRL+L use this code:\njavascript\n$('...').terminal(...., {\n     keydown: function(e, term) {\n         if (e.which === 76 && e.ctrlKey) { // CTRL+L\n              return false;\n         } else if (e.which === 70 && e.ctrlKey) {\n              return true; // this will make CTRL+F run search on a page\n         }\n     }\n});\nif you just want to disable what terminal defined look at the source code and search for CTRL+* you will see what number it have or you can look at demo on http://api.jquery.com/keydown/\n. To have scrollbar you need to set, like always in css, overflow: auto. Terminal also use mousewheel  jQuery plugin to scroll terminal, so to have this type of scroll just include that plugin.\nPS:\n- latest terminal, I don't remeber from which version, include sprintf function. \n- There is awk in js.\n- You should take a look at complete option.\n. Thanks, for the report, I think that it would be better to either throw exception on negative value or ignore it. From logic I wrote, code should never return negative values.\nDo you have a demo where it return negative value? I think that your change will fix that issue (it will simply not wrap long lines if number is negative), but I've never see it. I've only have problem when you create terminal and it's invisible, then the width will be 0, but I think I fix that one issue. \n. If you still have a problem and you have live application but it's secret you can send email with link to jcubic@jcubic.pl\n. Yes, this work http://jsfiddle.net/0v4ttvfa/3/\n. If you still have a problem and If you have working code that you don't want to share, you can send me a link via email: jcubic [at] jcubic.pl.\n. There're two problems. One is that right click don't triger click event on document. The second is that click event on your context menu item don't bubble up so terminal can disable itself, when you select menu item.\nI can fix it in terminal by adding contextmenu event. Before I do this can run this code:\njavascript\nvar term = $.terminal.active();\n$(document).on('contextmenu', function(e) {\n    if (!$(e.target).closest('.terminal').length && term.enabled()) {\n        term.disable();\n    } \n});\nistead of $.terminal.active() you can use your terminal variable. I'll add same code to terminal.\n. It seems that this also don't work because your context menu plugin and boostrap dropdown menu prevent bubble of events. To fix this you will need to call term.disable when your context menu is showing, maybe there is an event. I think you can use before option for context menu.\n. You can try:\nhtml\n <div id=\"project-explorer\"\n         data-bind=\"contextMenu: { target: '#files-context-menu',\n                                     scopes: 'li',\n                                         before: disableTerminal,\n                                     onItem: onContextMenuItem }\">\n. Yes, but you need to turn off arity check:\njavascript\n$('body').terminal({\n    echo: function() {\n        for (var i = 0; i < arguments.length; i++) {\n            alert(arguments[i]);\n        }\n    }\n}, {\n    prompt: '$ ',\n    checkArity: false\n});\n. Please add your code against devel branch and src file.\n. logout function is completely different on devel branch, there is no login check anymore since that function can be used to exit from nested interpreter that you have been logged in.\nThere is lot of  changes on devel branch.\n. One sidenote about autocomplete, you need to press TAB twice if there are more then one option to show.\n. It seems that it only works if it's one escape sequence like:\necho('\\x1b[1;7;31mhello\\x1b[0m')\n. Fixed in devel branch by merging multiple codes into one sequence. In devel branch formatting is in separated file.\n. it work as expected if you set display: block to .terminal. Same happen if you add\ntemplate: '<div></div>',\nreplace: true,\n. I wanted to add break by words but had some trouble wtih that.\n. Added in devel branch.\n. You can pass function as processArguments option. And use different code instaead of parse_arguments or split_arguments.\nAlso If you use function as first argument, you can process command if any way you want.\n. Is this on a Mac because there is already issue reported #158 . I've tested on French layout on a Mac keypress don't fire where there is dead key only keydown and keyup.\n. It seems this is resolved tested US alternative multinational layout in both 0.11.23 and devel branch and I can type ' by pressing ' and space. I'm testing this on Xubuntu 16.04. Also devel branch (will be in next version 1.0.0) use event.key property to get the letter if browser support it, so it should work with dead keys, this need to be tested.. 1.07 fixed #158 issue with dead keys on Mac and when I tested with US-alternative on Xubuntu it work, when I press ' and c I've got \u0107.. To change the prompt you need to use code like this:\njavascript\n$('...').terminal($.noop, {\n    prompt: '>>> '\n});\n. I need to remove this because it's the same as\nprompt = options.prompt || '> ';\n. It seems that jQuery Terminal is in jsdelivr cdn\n. You can't execute javascript from url so those do nothing and it return 404. Besides if it would be exploit it would be on the server not in jQuery.\n. In devel branch I've move all code inside is enabled check.\n. You can't replace what's echo on terminal.\n. If you only want to hide the input then there is set_mask method.\njavascript\nterm.set_prompt('password: ');\nterm.set_mask('*');\n. What you mean by vim like editing?\n. No but there is jsvi you can try to use it. I've move it to github jcubic/jsvi with plan to improve it. There is also my micro editor which is nano/pico implementation. \n. There is line wrapping in terminal, long lines are slit into multiple lines depend on width of the terminal. I've notice that there was a bug in that code and number of characters per line was calculated in wrong way, I've fix that in devel branch.\n. Only code that was show up was wrong, the code that was running was correct.\nYou can't make bigger terminal for some part of command, you will need to make animation outside of terminal.\n. It work for me if I use this url http://example.com?foo=bar&baz=quux\n. it work for me, in devel branch without any error but on 0.8.8 I've got unclosed html entity error.\n. It's because url is split into two lines. I don't know why in your case you have 2 lines that are blue. All parameters should be white in this case. I'll try to come up with formatting for urls so they will work even if they are split into multiple lines.\n. I've created formatting for url with exclamation mark, so your url will look like: [[!;;]<URL>]\nI'll try to replace all urls with formatting so they always have full url.\n. Now urls keep href even if they are split, and [[!;;]<URL>] is used internaly by terminal.\n. Please create PR agains devel branch. thanks.\n. I prefer dark one, they are reversed default colors.\n. In your code you should have indicator back in when you resize the browser.\n. Spinner will not fit into terminal, real terminals or terminal emulators don't have one. I may only add blinking cursor on next line when terminal is paused.\n. I can add onPause and onResume events so users will be able to create indicators.\n. I've added those events to devel branch.\n. Added option to turn of links to devel branch.\n. I don't think it will be possible to add cursor movement from the server. Adding cursor up/down will be impossible because underneath terminal use cmd plugin that sit below the output and you can't move it around.\nBut even that you can still add animation by setting command line, check user typing animation, there is better to do this type of animation on the client then on the server, besides terminal is command based so you can't modify single command from the server, it execute your function on enter.\n. Actually .disable() is like blur, if you want to disable keyboard then you can add keypress and keydown functions as options. And you will still have the cursor.\nI can add code that will not enable terminal on click when it was disabled.\n. I've added freeze(true|false) API method and frozen check.\n. Please modify also README.in file (source with placeholder of version) and against devel branch.\n. Fixed in devel branch, you will need jquery.terminal file and unix_formatting.js\n. It will be hard to implement, how terminal will know how to delete <u>test</u> on backspace?\n. I think that's not padding but line wrap, when there is scrollbar it make less characters per line. I've notice that there was bug in version 0.8.8 I've fixed that in devel branch but in your example the line wrap is ok when there is no scrollbar.\nYou can try to add option outputLimit: 0 it will disable scrollbar by showing only that many lines how many there is rows.\n. It's exactly what outputLimit: 0 do, you don't have scroll.\n. It work as expected on Windows 7 / IE10 I get same url when I type google few times, but it redirect me to google.pl. Can you create a demo with the problem?\n. I've already added url to package.json but it need to wait for the next release\n. New version 0.10.0 will use MIT license.\n. New version 0.10.0 with MIT license is available.\n. Fixed, thanks for pointing that out.\n. I've tested and it work with words that have spaces in them, can you show your code?\n. Not quite understand the regex and paths.\n. In devel branch it now save and restore interpreter stack.\n. I'm unable to reproduce the bug anymore.\n. Now it should work.\n. Thanks for reporting the bug, I use custom stringify because when I was using original version I've got invalid results when I was using the function with Prototype library that was used by BiwaScheme.\nMaybe the problem is when you have history that are larger then the limit of LocalStorage.\n. @archtimmy Fixed in devel branch.\n. You can use prompt for that like this:\njavascript\nvar anim = ['/', '|', '\\\\', '-'], i = 0, delay = 400;\n(function animation() {\n  term.set_prompt(anim[i++]);\n  if (i > anim.length-1) {\n    i = 0;\n  }\n  setTimeout(animation, delay);\n})();\nYou will need to save the prompt to restore it after animation is finish and you need to add code that will end the animation of course.\n. Also if you want to have animation you will need to stop keydown event like in user typing animation\n. There is bower package that someone created.\n. You can now install jQuery Terminal from npm.\n. No you can't use arrows to pick the option, the only thing you can do is to add new interpreter when user type inbox, print the list and ask the person to type another command that will pick the right email.\n. You should have about 55 characters. Do you have a demo where this is happening, where I can try things out? Maybe jsfiddle?\n. You need to set the same font on .terminal because it's used for character calculation:\ncss\n.terminal {\n  font-family: fantasquesansmono;\n}\nYou will have 67 characters http://jsfiddle.net/f7qdrp1y/3/\n. monospace is meta name same as sans or sans-serif, browser will pick the font of that type.\n. yes\n. Fixed in last commit to devel. e97558a\n. It just call login as normal auth method with token as first argument, I should probably remove login from command list. Or add login command that will ask for login again.\n. If you're not authenticated you can't type commands and now when I removed exit from login and password you should never see [AUTH] Access denied (no token), it should only happen if you remove token from localStorage by hand.\n. I wanted to have fixed Android issue for 0.9 version, but I think I just merge and release the 0.9 version without that fix.\n. I've merge the branches.\n. I don't get that error, do you have live demo? Also can you put somewhere the json-rpc.php file?\n. Did you modify json-rpc-service-demo.php to use local json-rpc.php file instead of the one from submodule? I need to remove local json-rpc.php file.\n. Can you try again downloading the code, I've removed json-rpc submodule and use modifed json-rpc.php from the json-rpc repo.\n. This work for me in latest version:\njavascript\n  $('...').terminal($.noop, {\n    keydown: function(e) {\n      console.log(e.which);\n      if (e.ctrlKey && (e.which == 38 || e.which == 40)) { // up/down arrows\n        return false;\n      }\n    }\n  });\nCan you provide jsfiddle with the problem?\n. It work for me on Chromium on GNU+Linux\n. You're right it don't work in Chromium too. My mistake.\n. It's because terminal return false in keydown, why don't you just use keydown callback?\n. Should work now in devel branch.\n. there is only one terminal instance per terminal. push() don't create new terminal. You can call pop on the same instance.\n. Can you show your code?\n. No it don't use timeout. Can you show your code?\n. Do you use json-rpc.php that's in example directory? do you get error in developer tools? What is server response when you don't get response?\n. What is server response when this happen?\n. Try adding:\nphp\nini_set('display_errors', 1);\nini_set('display_startup_errors', 1);\nerror_reporting(E_ALL);\nin php\n. Did you try version in devel branch?\n. Are you sure master branch work? it should be the same as on the site - 0.9.3.\n. I've only added missing css file to master branch, weird. \n. Fixed in devel branch.\n. Thanks for the fix.\n. Can you provide MWE, a way to reproduce the bug?\n. History is saved in localStorage, you can clear whole localstorage for the terminal using purge() method.\n. Or using term.history().clear();\n. Closing because of inactivity.\n. you can add this option:\nexceptionHandler: $.noop\n. Thanks for the fix.\n. Fixed in devel branch.\n. Fixed in devel branch. Your $.inArray in complete_helper will work for both array and function.\n. There is minified version don't contain version number jquery.terminal-min.js\n. In what browser? Did you check devel branch?\n. Try latest 0.9.3 it work in chrome but not in IE\n. By \"marking an expression with a mouse double click\" you mean selecting text inside terminal?\n. Should be fixed in version 0.11.2.\n. I'm unable to reproduce, what browser and version of android you're using?\n. Unfortunately I don't have this device so I can test it. I have only old 2.3.3 with build in webkit browser and it work there, but the keyboard don't have arrows so I didn't work on it.\n. Can somebody test if #86 fixed this issue as well? @jpatrickpark Korean should work because that issue is for input method.. It seems it's resolved.. Fixed in devel branch.\n. Added in 0.10.2\n. What's the difference? Why would you need this?\n. Changed in version 0.10.4.\n. I've added new file js/jquery.terminal.js to have both minified and unminified versions in cdn. Does it need to be updated by hand again or it will update automatically.\n. thanks\n. Thanks for your report, I'll incorporate your fix.\n. Fixed in 0.10.7\n. I've left them by mistake, you can grab the file from repo it's removed, but npm and cdn version have them.\n. If you're using json-rpc implemenation from examples then you can use:\njavascript\ncompletion: true,\notherwise you need to explicitly pass array of commands:\njavascript\ncompletion: ['who', 'cd', 'test', 'ls', 'clear', 'pwd'],\ntabcompletion was removed in version 0.8.0\n. Can you show your code?\n. do you use json-rpc.php file from examples directory?\n. It was because yuicompressor replaced 0% keyframe with 0. Fixed in 0.10.12.\n. It work when I've tested, can you create a demo with the problem? It scroll when you type or echo something.\n. Closing because of inactivity.\n. In devel branch I've implemented help in JavaScript based on results from system.describe.\n. json-rpc.php on the site is old and it don't have system.describe\n. It's because it's replaced by \"[[;#008400;][foo] bar]\" (] close the formatting) to fix the issue you need to escape the ] using: term.echo(\"\\x1b[32m[foo\\\\] bar\");\n. You can take a look at my trypython interpreter https://github.com/jcubic/try-python/blob/master/js/main.js#L167\nBasically you check if command contain : at the end if so you save the command in varaible declerated outside of terminal function and in next command you append the command to the previous command, if command is empty and if saved code is not empty you eval the code.\n. I'm not quite sure what you're asking. you can try to ask on http://codereview.stackexchange.com/\n. Which version you're using, space as prompt work fine for me, even empty string.\nto change input text you can use update method inside command before you echo something. For instance to change command to blue, you can call:\njavascript\nterm.update(-1, term.get_prompt() + '[[;blue;]' + command + ']');\n-1 will update last line which is command.\n. No, there are no access to command line like this.\nDo you have a demo live somewhere where I can test this out?\n. I've tested version 0.10.12 both minified and normal file and in both you can set prompt to empty string. Even in demo.\n. Closing because of inactivity.\n. You can use exec with true as second argument (which indicate that command should be executed silently) like:\njavascript\nterm.exec(\"msg <user> <msg>\", true);\n. If you mean that you want to not have echo command when you type command it's not possible. Naive approch to make it work would be to allow return false from user command and then not echo the command but echo command need to be executed first because user interpreter may echo something and it will echo command after user echo so this is not possible. I can add option to prevent echo command for all commands, you will be able to use keypress event to get command using term.get_command() and if command match /^\\s_msg\\s_/ you will be able to turn off echoCommand.\n. From 0.11.3 version you can use this code:\njavascript\n$('...').terminal(function(command, term) {\n}, {\n    keydown: function(e, term) {\n         if (term.get_command().match(/^\\s*msg\\s*/)) {\n             term.option('echoCommand', false);\n         } else {\n             term.option('echoCommand', true);\n         }\n    }\n});\nor you can shorten that code using:\njavascript\nterm.option('echoCommand', !term.get_command().match(/^\\s*msg\\s*/));\n. It's implemented as example for use in user code http://terminal.jcubic.pl/examples.php#less. And there is better less in leash browser shell https://github.com/jcubic/leash/blob/master/leash-src.js#L1084\n. The only time when you can't execute custom less on output is when you're using JSON-RPC but then you can use processRPCResponse to format output from RPC as you want.\n. Closing because this can be implemented in user code using available API.\n. set_mask is a method not option. To enable mask you can use this code:\njavascript\nterm.set_mask(true).push(function(command, term) {\n    console.log(command);\n    if (valid_password){\n       term.set_mask(false).pop(); //or call push to get to another interpreter\n    }\n}, {\n    prompt: 'Password: ',\n    name: 'pw'\n});\n. yes it should flush the lines that had flush false, I add tests that fail and try to fix this (I don't have unit tests for flush yet).\n. fixed in version 0.11.6\n. It should enable terminal when you click on the terminal, unfortunetelly I don't have chromeOS so I can't test to figure out what's going on. I need to check maybe you can install chromeOS in VirtualBox,\n. It seems that this happen on Linux/Chrome probably on all platforms.\n. Fixed in version 0.11.10.\n. @RomanPerin  Can you try latest 1.6.4 and devel branch? Do you have the issue with demo or comment section on homepage?. Ok, I've tested and it seems that there is an issue with mousemove on MacOS, the event is triggered when bind happen after the actual mouse move, it seems it's bug in Chrome MacOS. I'm investigating.. Fixed in devel branch it can be testing on this pen https://codepen.io/jcubic/pen/KvJMJx. released in version 1.7.0. Do you have a demo somewhere? Maybe you can create jsFiddle. I need to check if outputLimit is working I don't have it in unit tests.\n. There was bug in outputLimit maybe it will work for you in version 0.11.9.\n. I will add an option.\n. Option scrollOnEcho added in version 0.11.8.\n. In which version of Edge it's broken, I'm using version 25.10586 and demo on home page work fine. Which version of jQuery you're using and do you have a demo somewhere? Maybe you can create jsFiddle\n. I've installed latest update and I still have Edge 25 and EdgeHTML 13. How did you get that version, I'm not very familiar with windows.\n. Ok I get the update, and demo on home page is working in latest Edge. Can you send your code again because I didn't get it if you sent it. You can send it to mailto:jcubic@onet.pl\n. It seems that the terminal is working in both IE and Edge on Windows 10 and because there are no response from OP, I'm closing the issue as cannot reproduce.. CTRL+R is handled by keydown event in cmd plugin to overwrite it you can use keydown option:\njavascript\n$('...').terminal(interpreter, {\n    keydown: function(e, term) {\n        if (e.which == 82 && e.ctrlKey) {\n            return true;\n        }\n   }\n});\nif you return true the default action will be executed (in case of CTRL+R refresh) and if you return false it will not.\n. to see what which to use you can use demo at the bottom of http://api.jquery.com/keydown/ and http://api.jquery.com/keypress/\n. Sorry didn't notice that you don't want to use keypress\n. It will be hard to change shortcuts to object with current architecture.\n. In devel branch I've added keymap to cmd terminal and interpreter to delete shortcut you can use this code:\njavascript\n        onInit: function() {\n            var cmd = this.cmd();\n            var keymap = cmd.keymap();\n            delete keymap['CTRL+R'];\n        }\n. But this will make CTRL+R refresh the page because default action will not be prevented.. yes, there is option keymap for terminal and cmd and push, so you can use:\njavascript\n$('...').terminal{}, {\n  keymap: {\n    \"CTRL+R\": function() { return false; }\n  }\n});\nthe same with cmd plugin and push.. in version 0.11.16 there will be no versioned files in npm\n. 0.11.16 had versioned file as main file fixed in 0.11.17.\n. In version 0.11.16 there will be option wrap (default true) that can be overwritten in echo.\n. when terminal is frozen it should be no enabled on click it. Thwere should be \"can't\" in docs because when you disable terminal you can enable it on click that's why I added freeze. if it don't work it's probably because I added mousedown/mouseup instead of click.\n. What is the difference between readOnly and enabled? Right now they look the same to me. And if you don't want to to enable terminal on click then you can freeze the terminal.\n. You removed the markers but keep both changes, can you remove jquery.terminal-src.js file and only keep jquery.terminal.min.js. If you do so I will merge.\n. I've removed the markers.\n. No it's not possible, term.echo always add new line at the end and it would be hard or even impossible to make it not to add new line with current architecture.\nBut you can try to use term.update(-1, string) to update last line, I can make it accept function as second argument so you will be able to use:\njavascript\nterm.update(-1, function(string) {\n   return string + message;\n});\nin the current version you will need to save the previous message in variable:\njavascript\nvar line = '';\n...\nline += message\nterm.update(-1, line);\n. you shoulld call echo on first message and update on next messsages, try something like this \njavascript\nvar line = '';\nfunction onMessage(evt) {\n    var message = evt.data;\n    if (message.startsWith(\"B\")) {\n        message = message.slice(\"B\".length);\n        log.innerHTML = log.innerHTML+ message;\n        line += message;\n        line = line.replace(/\\n$/, ''); // don't echo new line at the end\n        if (line === message.replace(/\\n$/, '')) {\n            term.echo(line);\n        } else {\n           term.update(-1, line);\n        }\n        if (message.match(/\\n$/)) {\n            line = '';\n        }\n    }\n}\n. If you want real telnet client you can take a look at xterm.js\n. I've created my own json stringify because I was using Biwascheme (one of the examples use it) that use protoytype.js that did something with arrays that that make invalid JSON, but in the meantime biwascheme replaced prototype with jQuery. I can change json_stringify with JSON.stringify but I will need to update biwacheme example.\n. replaced json_stringify with JSON.stringify in version 0.11.15\n. It's just the warning, I can remove it. It doesn't chnge anything.\n. Added text/json will be in version 0.11.16 that will be released soon.\n. Sorry I didn't notice that you modify jquery.terminal.js file, that file is created by make, based on jquery.terminal-src.js. Can you modify that file instead and run make? You will need to have instaled node and npm and run npm install before you run make.\n. Thanks for the fix and making the changes.\n. Can you share your code? Maybe create jsfiddle. You try to execute 2 examples (two $(..).terminal() and two documen ready $(function(){...})) on single body element and you missed jquery. \nLook at this : \nhttps://jsfiddle.net/3ghx7o6s/1/. * You need to include jquery you added jquery as local file which is no there on jsfiddle, I've included the one from jquery cdn if you have that file locally include it before jQuery Terminal (in your html).\n* don't use this html \n```html\n\nTerminal Emulator: \n\n\n\n>\n\n\u00a0\n\n\n\nthat html is added dynamicaly by the terminal\n* aslo you have this code:javascript\njQuery(function($) {\n    $('#terminal').terminal(\"rpc_demo.php\", {\n        login: true,\n        greetings: \"You are authenticated\"});\njQuery(function($) {\n    function progress(percent, width) {\n    $('body').terminal(function(command, term) {\n    }, {...});\n});\n\n});\n``\ntwojQuery(function($) {` one inside other one. that code is executed when DOM is ready you don't need to use two of them. Also you're executing two times terminal plugin the second execution will be ignored.\nPS: why you have two github accounts?. You want to add terminal to <div id=\"terminal\"> just use:\nhtml\n<div id=\"terminal\"></div>\neverything else is added by the script. If you still have problem just look at one of the examples: look into html files.. You can use array as first argument like this:\njavascript\n        $('...').terminal([\"json-rpc-service-demo.php\", function(command, term) {\n            if (command == 'test') {\n                term.echo('testing');\n            }\n        }], {\n            login: true\n        });\nYou can also use object instead of a function, but you can only have one function in array. (I think if you use a function it need to be the last item in array).\nbut I think it will not work if the JSON-RPC service will not have system.describe, the json-rpc.php implementation that's in examples have it.. But this will execute commands from json rpc and methods from other interpreters if you only want to use login then you need to implement login as a function like this:\njavascript\n$('...').terminal(function(command, term) {\n}, {\n    login: function(user, pass, callback) {\n        $.jrpc('json-rpc-service-demo.php', 'login', [user, pass], function(data) {\n            callback(data.result);\n        }, function() {\n            callback(null);\n        })\n    }\n});. There is an option to disable scroll on echo - scrollOnEcho\nAs for notification can you just do the notification yourself when you echo something? You can for instance add class .notify and remove it in setTimeout:\njavascript\n$('.terminal').addClass('notify');\nand add css:\ncss\n.terminal {\n  transition: all 1s linear;\n  border: 1px solid transparent;\n}\n.terminal.notify {\n  border-color: red;\n}\nor use jquery animation.. if scrollOnEcho is set to false it don't scroll at all, when echo is executed, maybe I can add a check to call scroll to bottom also when page is at the bottom even when scrollOnEcho is set to false.\nAs for notifications you can check if page is at the bottom using this answer from SO: How can I determine if a div is scrolled to the bottom? but if you're adding terminal to body element you will need to use this Check if a user has scrolled to the bottom\nMaybe I can came up with an API to test that you're at the bottom, maybe term.bottom(); or term.is_bottom();. the term.bottom() can scroll to the bottom. so you will be able to use this code:\njavascript\nvar bottom = term.is_bottom();\nterm.echo('something');\nif (bottom) {\n    term.bottom();\n}\nthat way I will not need to add extra check for cases when page is at the bottom. Need to think about it.. In version 0.11.22 when you set scrollOnEcho to false it will scroll when at the bottom of the page before echo. And also there are two methods is_bottom() and scroll_to_bottom() so you can create code like this:\njavascript\nterm.echo('Something');\nif (!term.is_bottom()) {\n    // notify the user for instance\n    term.addClass('notify');\n}\n. I've added an option scrollBottomOffset with default set to 20. Can you test file from the repo?. For unknow reason this don't work for latest version, I was testing on devel branch. I've updated the example, it should be:\njavascript\n$(function() {\n    $('body').terminal(function(command, term) {\n        term.pause();\n        $.post('script.php', {command: command}).then(function(response) {\n            term.echo(response).resume();\n        });\n    }, {\n        greetings: 'Simple php example',\n        onBlur: function() {\n            return false;\n        }\n    });\n});. To customize colors for objects or array you can use costom processRPCResponse callback where you can echo the response.\nTo have completion with JSON-RPC you can add method system.describe that will return list of methods and number of parameters or you can use code like this:\njavascript:\n$.jrpc('service-url', 'get_methods', [], function(data) {\n    $('body').terminal(\"service-url\", {\n        completion: data.result\n    });\n});\nas for first question with interactive command you can turn of arity with checkArity: false and in command if there are no arguments you return extended command (a way to execute different command from the server) term.echo('[[ interactive command Name Description Age ]]'); and then you implement the interactive command (you put interactive command in object as first element of the array and your rpc string as second argument)\nhere is demo that use function instead of rpc. I don't know if I understand what you mean. In rpc service in .NET you create two functions (using function overloading) one function process arguments and function without arguments just return \"[[ interactive name <LIST OF ARGS> ]]\"; then you can add this in JS:\njavascript\n$('...').terminal([{\n    interactive: function(name) {\n        var term = this;\n        var args = [].slice.call(arguments, 1);\n        var result = [];\n        var index = 0;\n        (function loop() {\n            if (args[index]) {\n                term.push(function(command) {\n                    result.push(command);\n                    index++;\n                    term.pop();\n                    loop();\n                }, {\n                    prompt: args[index] + ': '\n                });\n            } else {\n                /* you can also use result.join(' '); so you get arguments in rpc method\n                or if strings can have spaces\n                 result.map(function(string) {\n                   return JSON.strinigify(string);\n                 }).join(' '); */\n                term.exec(name + ' ' + JSON.stringify(result), true);\n            }\n        })();\n    }\n}, \"rpc-server\"], {\n  checkArity: false,\n  processRPCResponse: function(data, term) {\n    if (typeof data == 'string') {\n       // this will also echo `[[ interactive ]]` exec command because it will be normal string\n       this.echo(data);\n    } else if (data instanceof Array) {\n      // process array\n    } else if (typeof data == 'object' && data) {\n      // process objects\n    }\n  }\n});\nif user type command Name Description it will execute method with arguments (if you have class as rpc service) and if user type command it will execute method without arguments that will return '[[ interactive command  ]]that will in turn execute interactive command that will then execute method with argumentscommand Name Descriptionthe same as if user type it.. I've notice one thing extended commands ([[command]]) was showing up when you resize the page or terminal (when resize method was called). I've fixed that in devel branch.. It's a bug if system.describe return error it don't work the same as if you use optionignoreSystemDescribe: trueif you use that option it will not call system.describe and it will work.. fixed the issue in devel branch but you still may want to use ignoreSystemDescribe: false so you don't get additional request to the server.. Are you sure you're returning string, Array or Object and not number? Because yourprocessRPCResponsecallback don't check for numbers. How your response callback look like, do you modify theresponse.result` data? Do you have a demo where I can test your code?. Are you sure the response from server is JSON-RPC like:\njson\n{\"jsonrpc\":\"2.0\",\"result\":\"foo\",\"id\":3,\"error\":null}\nYou can see it's working here, the server side code look like this (in php):\n```php\n    require('json-rpc.php');\n    class Test {\n        function add($a=null, $b=null) {\n            if (!$a && !$b) {\n                return \"[[interactive add A B]]\";\n            } else {\n                return $a + $b;\n            }\n        }\n        function show($name=null, $description=null) {\n            if (!$name && !$description) {\n                return \"[[interactive show NAME DESCRIPTION]]\";\n            } else {\n                return \"NAME: $name, DESCRIPTION: $description\";\n            }\n        }\n    }\nhandle_json_rpc(new Test());\n\n```. In devel branch I create two callbacks request and response that can modify request and response, I've tested with JSON-RPC in php\njavascript\n         var csrfToken;\n         $('<div/>').appendTo('body').terminal(\"test.php\", {\n             request: function(jxhr, term, request) {\n                 if (csrfToken) {\n                     request.params.unshift(csrfToken);\n                 }\n             },\n             response: function(jxhr, term, response) {\n                 if (!response.error) {\n                     csrfToken = response.csrf ? response.csrf : response.result.shift();\n                 }\n             }\n         });\nbasicly system.describe return CSRF token in csrf fileld and all other requests return array with first item be token and the second be result from method.\nif you want to have http header based CSRF you can do something like this:\njavascript\n         var csrfToken;\n         $('<div/>').appendTo('body').terminal(\"test.php\", {\n             request: function(jxhr, term, request) {\n                 if (csrfToken) {\n                     jxhr.setRequestHeader('X-CSRF', csrfToken);\n                 }\n             },\n             response: function(jxhr, term, response) {\n                 if (!response.error) {\n                     csrfToken = jxhr.getResponseHeader('X-CSRF');\n                 }\n             },\n             width: 600,\n             height: 480,\n         });. I've changed the order of arguments now it's:\nfunction(jxhr, request, term)\nand\nfunction(jxhr, response, term)\nbecause I'm adding this to all callbacks and removing term as argument from documentation (all callbacks will work the same except those two).. I've added option softPause (in devel branch) if you set to true it will not hide the prompt, the code now look like this:\njavascript\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from url string\n        // ---------------------------------------------------------------------\n        function make_basic_json_rpc(url, auth) {\n            var interpreter = function (method, params) {\n                self.pause(settings.softPause);\nthe default is set to false so it work the same as before if you don't add that option.\n. You can add image or any other html using raw option:\njavascript\nthis.echo('<img src=\"http://lorempixel.com/output/cats-q-c-987-650-8.jpg\"/>', {raw: true});\nand put this css rule:\n.terminal img {\n    max-width: 100%;\n}\nthen the image will not be larger then the terminal.. The only caveat is that when you echo raw html you don't get proper wrapping using JavaScript (you will need to rely on css based long line wrapping and you will need to put <br/> instead of \\n or wrap your text in <p>) if you don't care you can use one echo with raw option, if you notice that there are issues with long line wrapping, you can switch to two echo, one with text and one with picture.. jQuery Terminal will never have autocomplete with popup (because that's not how terminals work) but it have tab autocomplete. If you type something and tab onces it will complete your word and if there are more then one completion you will need to press tab twice the same as in bash (don't know if windows cmd.exe have the same).\nYou can add completion using completion option it can be array boolean or a function. if it's boolean and if it's true it will take commands from JSON-RPC or object as interpreter (it complete only command names) if you add array it can be list of words to be completed, if you have some completicated logic you can use third option a function, it look like this:\njavascript\n$('...').terminal(function() {\n}, {\n   completion: function (terminal, string, callback) {\n      /*\n       * string is the word you try to complete if you have command `foo bar|` \n       * and press tab the string will be \"bar\" you can get whole command\n       * using termina.get_command()  you should call callback with array\n       * of words or just one element array but it need to match the word\n       * so if you call callback([\"barbara\"]); it will complete the word,\n       * but if you call callback([\"foo\"]) it will not\n       */\n   }\n});\nI can try to create POC with autocomplete with popup but I don't promise anything.. One more thing about completion if the there are completion with command text like, if you have word \"foo\" and have arrray [\"foobar\", \"foobaz\"] it will complete \"fooba\".\n. Here is quick autocomplete with popup http://codepen.io/jcubic/pen/MJyYEx?editors=0110 it complete on every keyup.. I've never use power shell and I don't know how it work. I've added autocomplete on tab and object with keys as commands and array of options and arguments http://codepen.io/jcubic/pen/MJyYEx?editors=0110 . If you don't need popup you can use this simplified code:\njavascript\nvar commands = {\n    'get-command': {\n        options: ['name', 'age', 'description', 'address'],\n        args: ['clear']\n    },\n    'git': {\n        args: ['commit', 'push', 'pull'],\n        options: ['amend', 'hard', 'version', 'help']\n    }\n};\n$('...').terminal($.noop, {\n  completion: function(term, string, callback) {\n      var command = term.get_command();\n      if (!command.match(/\\s/)) {\n         callback(Object.keys(commands));\n      } else {\n         var name = command.match(/^([^\\s]*)/)[0];\n         if (string.match(/^--/)) {\n            var array = commands[name].options.map(function(option) {\n                return '--' + option;\n            });\n             callback(array);\n         } else {\n             callback(commands[name].args);\n         }\n      }\n  }\n});. I've added complete API method so you can call complete in your custom tab, that also simplify the code on codpen. Also added before_cursor() it return string before cursor or word before cursor if argument is true. will add that codepen to examples.. can you test version in devel branch (both js and css), I think it's fixed there.. The problem again was in JS that prevent selection to work, it's fixed in master branch will be in version 1.0.2. Can you test if it work for you?. You can try key polyfill: https://github.com/cvan/keyboardevent-key-polyfill\nIf it will work I'll add it to documentation.. In which browser you see that last error? I don't see it in Safari/Chrome on windows and Chrome/Firefox on Linux?. There was one exception for jQuery >= 3.0, it's fixed in master branch but it should not affect the focus.. I'll try to install chrome, I'm testing in chromium 55.. I could only test in Chromium 37 on Ubuntu 12.04 64bit in VirtualBox (I have 32bit system that's not supported by google chrome) and it's working, I can focus in input box that's on the same page as the terminal.\nDo you have a demo somewhere where I can test on that version of Chromium?. The demo don't use key polyfill, I need to add it.. Added polyfill to the demos.. Can you test the file from master branch, to confirm that's fixed for you?. you can create another issue.. @NoahCardoza if you look at the jquery terminal submodule it's version is 0.11.12. and current is 1.19.1 and now I'm working on 1.20.0.\nCan you clone the repo with --recursive open terminal submodule directory in src/vendor and run git pull, after this copy/paste should work. for this to be permament the owner need to run pull nad commit the updated submodule in original repo.. It was fixed in version 1.0.2. Fixed in master branch.. test failed because you can create terminal without options, you need to use settings.strings instead of options.strings\nAlso there were never strings option for terminal, but It can be added if you fix that issue.. One more thing, can you modify jquery.terminal-src.js file and run make?. Added settings.strings myself.. Fixed in version 1.0.5. fixed in 1.0.6. @Lilja what browser/OS you see this? Also what exactly is your  keyboard setup? so I can recreate it?. Ok it now work, you can test. This regresion was for all layouts that use alt to enter keys with altGr.. Can you create this pull request to devel branch? I have there few fixes that I want in 1.0.7 version.. Also please modify jquery.terminal-src.js file.. Sorry to bothering you again but can you modify -src.js? the 1.0.6 will be overwritten by make. . I can add that fix myself but since you came up with fix you should be on the list of contributors on github.. Unfortunetly I don't have a Mac, can you test this codepen on a Mac, for the backspace and TAB and tell me what the results are?\nAs for C-v it was broken in all browsers, it should work again now. . Tested in VirutalBox and Tab Backspace and paste work.. Fixed in devel branch, will be in next 1.0.7 version.. Do you know the case when this out of bound will happen? What do I need to do as a user to have current equal to undefined?. I can add:\nif (!current) {\n     throw new Error('Internal error, wrong position in cmd redraw');\n}\nso if this happen (and I don't think it will) users will report the exception.\nI don't think it will happen because that case current = array[++line_index]; is only executed when current line is in the middle of the lines so there will always be next line.. Added exeption in version 1.0.9. The problem was with dead keys logic, the terminal was thinking that special keys like arrows (that don't trigger keypress) are dead keys. Can you test this codepen if it work for you too?. Released in 1.0.9 version.. Fixed in 1.0.11, it was similar to #293, the input event code was executed for non-character keys.. It seems that on chrome android the key property is supported but it's  unidentified (not to confuse with undefined) for single characters keys.\nFixed in master branch.\nIf you're testing can you take a look at issue #235 if you can delete first character in chrome and if arrows work, it seems to work for me (didn't test the arrows). I have default keyboard and chrome 56 and I don't have arrows, what keyboard do you use?. Ok, I've installed hacker keyboard and make it work with entering text in the middle (the issue was not only with backspace but any key).\nCan you retest?. I'm not able to reproduce this one on Android/Chrome also tested on Linux/Chrome with disabled keypress (android/chrome don't trigger keypress).\nI've added return false instead of return is_touch in backspace maybe that will fix your issue, sorry not able to test.. I have this for testing http://terminal.jcubic.pl/android.php it's just jquery.terminal-src.js file I upload with full screen terminal.\nYou can open another issue.. It seems that SwiftKey is generating keyCode 229 for every key including backspace, but I was able to fix the issue by checking the length of the text before and after input event.\nCan you retest?. I also fixed cursor position when click on completion on a keyboard.. You need to use key event property polyfill (it's in the readme) I can check why you get that exception and not the one that say that you need to use the polyfill. In 1.0.14 the exception is thrown when creating terminal or cmd and there is no exception when pressing keys.. Do you load two versions of jQuery and unix_formatting.js ?. Do you have that page somewhere online, if not then maybe you can create codepen or jsfiddle demo that show that error?. I found that laravel-tracy library it seems it work without error.. I saved $.terminal that is used in terminal variable in unix_formatting.js maybe that will fix your issue, I've tired to reproduce your error by adding another jQuery library after initialization of the terminal and unix formatting is working (I've loaded old version), don't know why it should throw exception.\nCan you test new version of unix_formatting.js?. Ah, I know the reason, because both unix_formatting and jQuery terminal use local copy of jQuery that was used when you included the files,\nIf you use code like this:\nhtml\n<script src=\"js/jquery-1.8.0.js\"></script>\n<script src=\"js/jquery.terminal-src.js\"></script>\n<script src=\"js/unix_formatting.js\"></script>\n<script>\n$('<div/>').appendTo('body').terminal(function(command, term) {\n});\n</script>\n<script src=\"js/jquery-1.8.0.js\"></script>\neverything will work as expected. Do you have different order of scripts?. Can you create demo page with just the front-end files? Maybe on jsfiddle or codepen.. Closing because of no response from OP after two weeks.. I've didn't copy echo_command function when I was writing complete function in version 1.0.\nFixed in master branch it will be in next version.. I've added CTRL+D for canceling AJAX requests and resume interpreter, if there are any pending requests.\nI can add option to resume the interpreter when paused. Should it also exit or should it just resume() and then you will need to press CTRL+D again to exit? I think that the latter is better because you can pause when you type something and it should not exit but delete one character forward and I think it should not delete that character if there is no prompt, so it would be better to just resume.. Your code was working only when you refocus because focus was enabling command line (disabled command line didin't process key down) even that it was hidden. You could type something and when you press CTRL+D the text would appear.\nThe fix is in master branch, your both demos should now work (remember to clear the cache). But no need for custom CTRL+D anymore.. Unfortunately I can't test because MacOSX in VirtualBox don't work on my old laptop. I've added META+V to be ignored by input event just like CTRL+V on chrome/Windows maybe that will fix your issue.\nCan you test the file from master branch?. In IE11 the key property for delete key is Del not Delete like in other browsers, fixed in master branch.. it was a typo fixed now. it will be in next 1.1.1 version.. It's in master branch that already have version 1.1.1 but it's not yet released.. To not change the current behavior of the terminal I would need to add option, maybe pauseUserEvents: false and if option is false, you will need to check if terminal is enabled using term.enabled().. I added an option pauseEvents to both terminal and cmd plugins if it's set to false (default is true) the keymaps and keydown will be fired, I've also fixed the issue with keypress that was executed even if terminal was paused.\nIt's in master branch it will be in next 1.1.0 version.. Let me know if that fix the issue for you, so I can release next version.. Great.. There was one issue typo in cmd options and I also put keymap before keydown so now keymap have priority.\nDemo. Let me know if that's work for you, the issue is closed but I want to resolve this before I release version 1.1.0.. New version is out.. CTRL+D is handled by both keymap and keydown, keymap for exit from interpreter when not paused and keydown for resuming from pause. So to overwrite exit from interpreter you need this:\nkeymap: {\n        'CTRL+D': function(e) {\n            if (this.paused()) {\n                this.echo('keymap CTRL+D');\n                return false;\n            }\n        }\n    },\nmaybe better will be to have keydown first like before, so you don't get error when you press CTRL+D when pause and when pauseEvents if false.. because of #302 I'll restore previous order keydown/keymap.. not yet, will let you know. I need to test on IE and I can only do that on my laptop that just came from the repair, but I need to install OS on it first.. I've restored the old order keydown first and keymap second. I'll add section about keyboard in the api reference with info about CTRL+D.. I've added keyboard section to api reference page.. Version 1.1.1 published, I'm closing the issue.. This is not related to the terminal, your connection timeout (do you use websockets?) not the terminal. You need to catch your error somehow (depend on what is timing out) and reconnect.. Can you share your code? Without looking at the code I can't do much.. Closing. The error came form OP defined code and it seems it's related to Server Side Events that get reconnected and not jQuery Terminal.. If you don't care about IE and Edge then you can use css variable:\ncss\n.terminal {\n  --size: 2;\n}\nor if you need to support IE and Edge you need to set the size in pixels (em don't work):\ncss\n.terminal, .cmd, .terminal .terminal-output div div, .cmd .prompt {\n    font-size: 20px;\n    line-height: 24px;\n}\nthere is info abot it in style section of the api reference. This is a feature, because if it complete as \"example \" then when you type \"o\" and press tab again it will not complete the text because it will try to complete word \"o\" and not \"example o\".\nWhen you parse command it will replace \"\\ \" with \" \". I can add option to not enter \\ to spaces but then the case when you type \"example o\" will not complete text.\nMaybe I can change the logic to get the complete word and match ending of the whole text with regex. Will test.. I've added an option completionEscape and fixed wordAutocomplete, so you can now do (in devel branch, will be in next 1.4.0):\n$('#id').terminal($.noop, {\n   completion: ['example one', 'example two']\n   completionEscape: false,\n   wordAutocomplete: false\n});. One more thing, if you making a change please use devel branch on fork and create pull request to devel branch as well.\nMaster is always latest version and devel is for next version. Sometimes I've used master branch (when I had one bug fix) but I'll try to only use devel branch for development.. I've resolved the issue with prompt in devel branch, sorry that I give you the chance to fix it yourself.. Fixed in version 1.4.1 with npm I'll wait until you test.\nWhere do you see this error, (what browser/os)? I don't see it in chrome and lint didn't report it. Maybe this should reported to eslint (or maybe I don't have rule for that).. Do you have a working demo that I can use to recreate the issue? I don't know much about cordova and will be hard for me to test.\nAlso what version and browser of the android you're using?\nDo you have blinking cursor?\nDid you try to include key property polyfill?. keyboard events have key property that's not supported by old browsers and if you want to use jQuery Terminal with browser that don't support that property you need to use polyfill (replacement) just include js file and call:\nkeyboardeventKeyPolyfill.polyfill();\ndon't know if that will resolve the issue, it's just shot in the dark.. Will test when your provide a demo.. Ok, after some struggle I've installed cordova app on my new phone and it's working, the issue (a typo) was fixed in #317. released in version 1.4.3. I can't reproduce, which version of jQuery Terminal you're using?. If you run this code twice it will echo both texts because terminal is echo command and it need to call flush, and flush is flushing previous texts.\nIf you want to have echo/flush that don't echo anything you can use echCommand option set to false:\njavascript\n$('body').terminal(function(command) {\n    this.echo(this.get_prompt() + command, {flush: false});\n    if (command.match(/flush/)) {\n        this.flush();\n    } else {\n        this.echo('some text', {\n            raw: true,\n            flush: false\n        });\n    }\n}, {\n    onBlur: function() {\n        return false;\n    },\n    echoCommand: false\n});\nHere is demo. It will be not possible because of asynchronous commands, the prompt is generated when you press enter and second time when you resume terminal.. This don't work, when you type lower case and press TAB you get mixed case.\nI wanted to add this feature but didn't know how to resolve issue with mixed case words so I've dropped, but his can be resolved with check the case of the last character and if it's lower case, the completion should also be lowercase.\nBased on this \"How can I test if a letter in a string is uppercase or lowercase using JavaScript?\" you can use this function:\njavascript\nfunction is_lower(chr) {\n  if (!isNaN(chr * 1)) {\n     return false;\n  } else {\n      return chr == chr.toLowerCase();\n  }\n}\nAlso the option should be caseInsensitiveAutocomplete, autocomplete as single work the same as wordAutocomplete and it should be taken from top interpreter, if set, like this (same as completion so you can use overwrite the option from push):\njavascript\nvar top = interpreters.top(), completion, caseSensitive;\nif (typeof top.caseInsensitiveAutocomplete != 'undefined') {\n   caseSensitive = !top.caseInsensitiveAutocomplete;\n} else {\n   caseSensitive = !settings.caseInsensitiveAutocomplete;\n}\nAnd thanks for your contribution.. And one more thing, please fix eslint errors, lines longer then 90 characters, because it make travis build fail. you can check the lines from this link or by running make lint. Actually I don't care about mixed case but if text is all lowercase it should be lowercase and if all is uppercase it should be uppercase the else clause can use completion as is.. 1. Your code break the tests because it replace the whole command and it will not work when you have foo BA| if complation is 'bar' it will replace the command as bar not foo BAR, the same happen if cursor is in the middle like foo BA|zooka it should complete as foo BAR|zooka this is how completion work right now (except the case) so you can't use set_command (if you run npm install you can run make test to run the tests from command line, you can see how it should work without the caseSensitive option when you open spec file).\n\nThe workaround would be fine for mixed case but if all character is uppercase I think it would be better to have it all uppercase the same with lowercase. so if you have foo BA you get foo BAR and if you have foo ba  you get foo bar, if you have foo Ba or foo bA and if the completion is 'bar' it could be foo bar for both but I think it would be event better to have foo Bar and foo bAr if the completion is 'bar' and foo BaR and foo bAR if the completion is BAR.\n\nsome thing like:\n```javascript\n            var matched = [];\n            for (var i = commands.length; i--;) {\n                if (regex.test(commands[i])) {\n                    var match = commands[i];\n                    if (quote === '\"') {\n                        match = match.replace(/\"/g, '\\\\\"');\n                    }\n                    if (!quote && options.escape) {\n                        match = match.replace(/([\"'() ])/g, '\\\\$1');\n                    }\n                    // edit start\n                    if (string.toLowerCase() === string) {\n                        match = match.toLowerCase();\n                    } else if (string.toUpperCase() === string) {\n                        match = match.toUpperCase();\n                    }\n                    // edit end\n                    matched.push(match);\n                }\n            }\n\n``\nthat way it will also work for case when you have completion['barbakan', 'barabazo']and you try to complete textB|you will get BAR| and when you press tab twice you will get echoBARBAKAN BARABAZOand you haveb|` will get lowercase.\n\nI've just notice this now, the option should be caseSensitiveAutoComplete that will be default to true no need for negation.\n. You're right so it need to check if the option is on, I think that when it's on (caseSensitive == false), it can work with all lower/all upper and edge case like mixed case completion can be ignored.\n\nBut it would be nice if it work like: yeah yesSir but it will be more completed, because you need to check if complete on the list of completions is in the same case. if it's in mixed case then it can complete as is like this:\n```javascript\n                        function same_case(srtring) {\n                           var array = string.split('');\n                           function all(fn) {\n                               return array.filter(function(item) { return itemfn == item; }).length;\n                           }\n                           return all('toLowerCase') || all('toUpperCase');\n                        }\n                    if (options.caseSensitive && same_case(match)) {\n                        if (string.toLowerCase() === string) {\n                            match = match.toLowerCase();\n                        } else if (string.toUpperCase() === string) {\n                            match = match.toUpperCase();\n                        }\n                    }\n\n```\n. I've added the feature you wanted in devel branch, you  can check commit 959ae9a7313b91527ac8967bb263d56ec0057645 and if you want you can test and report bugs to this issue #332. Right now only lists (arrays) are supported, but I can add option for objects (dictionaries) when using long options (maybe RPCObjectParams).\nBut what about a case like this:\ncommand --param1=foo bar\nwhat should be the output? or maybe it should show error \"You can't mix options and normal arguments when using RPCObjectParams option\"?. I just look at JSON-RPC spec and there are no named arguments so sorry, but I want to be compliant with a spec.\nYou can modify server side to parse array (list) and extract the named arguments (create dictionary), this should't be to difficult the oter option is to use function as interpreter parse comman and send json you want.. BTW getopt in javascript is for parsing arguments based on spec so it's no use here.. It was happening for all CTRL+key when caps-lock was on, I've disabled keypress when CTRL or Mac Command key is pressed. Will be in next version.. released in version 1.4.3. the function is executed only on resize and calculation in resize are not executed when the options numChar/numRows are set.\nThe improvement will be in next version. In version 1.5.0. Thanks for reporting the issue, the fix will be in next version.. released in version 1.4.3. Forget about keydown it had the same issue, will be in next version.. Fixed in devel will be in next version.. released in version 1.4.3. Fixed in devel branch.. In version 1.5.0. Fixed in devel branch, on firefox/google not only keypress but also keydown and keyup don't fire.. There is still issue with backspace, I'm working on it.. Seems to work, but it require some testing. The fix is in devel branch it will be in next version.. You can test it here http://terminal.jcubic.pl/android.html. I've never used swipe gestures, will check this out. Thanks for testing.. The problem was that space was not inserted to textarea, when you swipe next word it first insert space (keydown/keypress) and then only input for word.\nCan you test again? the same url http://terminal.jcubic.pl/android.html. What should I do to reproduce? I'm using this: tap and move point in one place and then tap and move in different one and the the first one again and I have correct results.. I've notice the issue with 1st swipe after removing all text with backspace.. this one I cannot reproduce, what version on Android/firefox you're using? I'm using 6.0/54. or maybe it's because you swipe too fast, this one I think I can fix.. I've commented out old code that was updating textarea with command, maybe that will fix your issue, it's just shot in the dark, when I've tested it work the same on chrome and firefox, same as before, but maybe it will fix your issue.. Can you test again? the same url http://terminal.jcubic.pl/android.html. The fix is in version 1.5.0, it work for me. If you have the issues with swipe gestures you can help with info how to reproduce.. This is opened without response for about 2 months, it work for me so closing, if you have the same issue and you're willing to test and reproduce, comment and I'll open this issue.. Will take a look.. the problem was in nested formatting, new feature that allow to use [[;red;]foo [[;green;]bar] baz], the fix is in devel branch (replaced + with * in regex), right now if you want to fix it in your code you can call:\njavascript\n$.terminal.defaults.formatters = [];\nbefore your create terminal or by using option \njavascript\n{formatters: []}\n. You can also grab devel version it have also fix for android/firefox/google keyboard but one issue remain (with swipe) that I cannot reproduce.. In version 1.5.0. Fixed in devel branch, the problem was with escaping, if you need fix right now you can turn off escaping using option:\njavascript\n{\n  completionEscape: false\n}\nYou can test it here https://codepen.io/jcubic/pen/LxgJQG. In version 1.5.0. It was in json-rpc spec when I created first version of jQuery Terminal but I can't find it anymore. It should look like this:\njson\n{ \n  \"sdversion\": \"1.0\",\n  \"name\": \"DemoService\",\n  \"address\": \"http:\\/\\/localhost\\/projects\\/jcubic\\/leash\\/index.php\",\n  \"id\":\"urn:md5:4e39d82b5acc6b5cc1e7a41b091f6590\",\n  \"procs\" :[\n    {\"name\":\"echo\",\"params\":[\"string\"]}\n  ]\n}\nOnly name, id and procs are required and prams can be any array only length is checked and it will be ignored when checkArity option is set to false.\nJust notice that it had hardcoded DemoService when fetching data from system.describe LOL, removed it now it will be in version 1.5 just will be released soon. It was added when I've added validation for JSON-RPC.\nNeed to update docs.. released version 1.5.0 and updated the docs. You can now use option describe: \"result\" or describe: \"result.procs\" if system.describe is normal rpc method.. Can you tell what browser/os you're using and how you have your keyboard configured?. Right now I can only test Japanese (Kana) keyboard layout on Xubuntu and entering Japanese letters work with this layout but I didn't test input method, if you have other OS then this issue will need to wait until my new laptop get fixed so I can run VirtualBox without problems.\nThe click, to get cursor position change, don't work because Japanese characters are wider then normal monospace font characters, this one I can fix right now.. I've fixed the issue of entering text (in devel branch) but click to move cursor and also long line wrapping when text have wider character is not working yet. Will fix that later and push version 1.5.1.. Fixed final part moving cursor and long line wrapping also work but for all Japanese or Chinese characters it don't occupy whole terminal width.. The fix is in master in version 1.5.1. There is enabled option which if it's set to true make terminal enabled, it do that by default but not on Android where you need to manually focus in input to have virtual keyboard open.. Do you have a demo somewhere because my demos are working. Also what browser/os you're using?. Weird, will check it out.. I completely don't know why it don't work, I've try to add wrapper that have position: relative inside terminal but this don't work, the only hack I've found is after you create terminal you run this:\nsetTimeout(function() {\n    term.enable();\n}, 100);\nFor some reason the terminal get disabled after init, will check this later today.. Founded the issue and fixed it in devel branch (but the tests are still broken from other changes)\nThe other solution (that will work on 1.5.0 version) is to wrap the terminal in container that will have position: fixed https://jsfiddle.net/txgg52fa/1/. note that position: fixed on terminal if the terminal is not 100% height and width will break the terminal because other elements inside rely on position: relative of the terminal.. Yes, you're right it don't work, also I was mistaken position: fixed work the same as position: relative for elements inside with position: absolute. the fix will be in 1.5.1.. The fix is in master in version 1.5.1. Thanks for the report, fixed that in devel branch, you can test if it work for you in this codepen. There are two issues here one is that formatters are applied to formatting (you have [[b;blue;] in greetings for url) the second is that regex, text that you enter is first encoded (spaces are replaced by &nbsp; and then formatters are applied) the solution is to use this formatter:\njavascript\n         $.terminal.defaults.formatters.push(function(string) {\n             return string.replace(/&[^;]+;|([A-Za-z])/g, function(_, match) {\n                 return match ? \"[[b;blue;]\" + match + ']' : _;\n             });\n         });. The first issue is resolved in devel branch will be in next version 1.6.0.. version 1.6.0 is out.. This is expected behavior, terminal-output is cleared before each redraw. The only way to have persistent DOM changes is to use finalize echo option which is a function that's passed DOM node or jQuery object of the container as argument (don't remember which one right now and I can't test because I'm not next to my computer)\u00a007.08.2017 12:47 AM Oleg notifications@github.com napisa\u0142(a):Expected behavior\nAny modifications (i.e. added child nodes) of terminal-output DOM node are persistent.\nActual behavior\nAdded nodes removed on terminal windows resize.\nSteps to reproduce\nExample: https://jsfiddle.net/txgg52fa/5/\nType any command and hit enter. A command label Some Label will appear right from command. Resize window: label disappears.\nIt doesn't matter whether child node appended in onAfterCommand or in command callback itself.\nBrowser and OS\nUbuntu 16.04, Chrome 60.0.3112.90\n\u2014You are receiving this because you are subscribed to this thread.Reply to this email directly, view it on GitHub, or mute the thread.. The library need to clear the output before rerender, maybe I can add callback option that will be passed to echo command.\u00a007.08.2017 4:09 PM Oleg notifications@github.com napisa\u0142(a):@jcubic, using echo version that accepts a callback, or using raw echo option is indeed preserves changes. The problem, is that this way you can only modify the \"output\" part of the DOM.\nFor instance, for my application I need to generate clickable labels for each command user enters. In the jsfiddle example I posted before, I did this by appending child to .command div node, which works fine, but disappears on resize. I could also see many other potential use cases, that rely on modifying DOM on certain conditions. I think there should be a way to modify DOM in a way that jquery.terminal preserves this changes.\n\u2014You are receiving this because you were mentioned.Reply to this email directly, view it on GitHub, or mute the thread.. I think I can add both onAfterRender and onEchoCommand. I think the second one will be better for your case because you will not need to add label to previous commands.\u00a007.08.2017 4:58 PM Oleg notifications@github.com napisa\u0142(a):Yeah, I saw that redraw in the library code. Maybe a global callback would be easier to implement (something like onAfterRedraw or transform) and it will allow user to apply necessary DOM modifications after redraw.\n\u2014You are receiving this because you were mentioned.Reply to this email directly, view it on GitHub, or mute the thread.. Add onEchoCommand and onAfterRedraw events in devel branch, they will be in next version 1.6.0.. version 1.6.0 is out.. I can add UMD loader but I don't know how to export more than one entity, \u00a0I have few plugins and included dependencies. I'll ask on Stack Overflow and let you know.\u00a007.08.2017 9:08 AM fazelfarajzade notifications@github.com napisa\u0142(a):I want to use jquery terminal in amd module.But I don`t know how to do that.help me please\n\u2014You are receiving this because you are subscribed to this thread.Reply to this email directly, view it on GitHub, or mute the thread.. I've added UMD it will be in next version 1.6.0 soon.. version 1.6.0 is out.. Sorry don't know Angular 2, maybe you can check AngularJS wrapper and extract something out of it. it use events to comunicate with terminal instance.. How to enable dead keys, do you use keyboard layout that have them? if yes which layout?. I'm not able to reproduce. I'm using German (Germany) layout and in chrome /windows7 I've got your expected behavior.\nDo you have space that got removed when you type 2 or it don't get echoed?\nPS: I've found different issue the input event was not fired when terminal was enabled and inserted  to DOM after it was created (I still have demo with detatch/attach that I was testing and in it input was not fired).. when I test again, probably by that other fix with auto enable, I've reproduced the issue. The fix is in dev, can you check this codepen?. There was code that prevented input event for space in keypress. I hope it will not break other things like Android, will test it tomorrow. . It work on Android without problems will publish 1.6.3. Doesn't happen on Windows7 in VirtualBox will try to install win8. Does this happen on Linux/Chrome?. I've just tested it in Chrome 60 on windows 10 and it work fine. I can click on same terminal and it stay focused. And I got the same behavior in Firefox.\nMaybe you have some kind of extension installed in chrome, that modify the behavior.. And just to be sure I have the same in Edge.. Found another issue. When you created multiple terminals that where enabled all of them had cursor. Fixed that in devel branch, don't know if that's related. On codepen you will not see this because iframe is not in focus and you need to click on it first.. The other idea is to add white border to terminal so you can see on which terminal you've clicked. Are you sure you click on the same terminal and not below the cursor.. I think I've found the issue, one more thing can you copy/paste this snippet into console and tell me the output it should be false:\njavascript\n    (function() {\n        return 'ontouchstart' in window || !!window.DocumentTouch &&\n            document instanceof window.DocumentTouch;\n    })();\nThe fix is only for case when this return true, so if this return false I'll need to find another issue with the code.. Potential fix is in devel branch.. what about this one?\njavascript\n    (function() {\n        return (('ontouchstart' in window)\n                || (navigator.MaxTouchPoints > 0)\n                || (navigator.msMaxTouchPoints > 0));\n    })();. Weird for Chrome on windows, but the issue should be resolved anyway on devel branch can you test it? Here is your demo but with devel branch https://codepen.io/jcubic/pen/KvJMJx. The reason why it unfocus on click is that on mobile it need to toggle virtual keyboard, Maybe I can came up with better detect of mobile devices.. I've replaced touch detection with mobile detection using user agent, it should work now the same with touch screens like or normal screen when not on mobile devices, but for iPhone/Android it will disable terminal so it can hide virtual keyboard.. released in version 1.7.0. there was an issue with pasting, can you test devel version in this pen https://codepen.io/jcubic/pen/LxgJQG. released in version 1.7.0. Will be in next version - 1.7.0. In devel branch I've removed that error and handle unescaped & properly.. you can check it here https://codepen.io/jcubic/pen/LxgJQG. in version 1.7.0. Oh, thanks for notification of this but the file README.md is autogenerated by make you'll need to update README.in that have version marker.. I've updated both files.. what you mean by buffer, a clipboard?\nI cannot reproduce I've copied \"terminal\" to clipboard and when I've press CTRL+V I've got \"testterminal\"\nsee \nhttps://codepen.io/jcubic/pen/BwBYOZ\ntype test <enter> CTRL+V. can you tell me exact steps to reproduce the issue? and do you have red prompt when you press CTRL+V on that vintage demo?. Ok, I've got it after focusing and pasting few times I got whole line will try to fix the issue.. There was some race condition, should be working now in devel branch.. Released in version 1.8.0. thanks for the fix, but please modify jquery.terminal-src.js file (that's the source file - just copy paste the code to the same place) and create PR against devel branch (that one you can change by clicking edit). you can also run make to create output files, then you will be mark as contributor to output files as well.\nAlso fix the indent it's 4 spaces more for the whole for statement, the travis didn't throw error because it check only src file, you can check by running (after modifing -src.js file):\nnpm install\nmake lint\nfrom terminal\nAfter indent fix you will have one line too long, the expected 90 characters eslint rule, so you need to make this line shorter:\njavascript\n} else if (pushCandidate.toLowerCase() === currentChar.toLowerCase()) {\nyou can fix that by changing names to chr or current and candidate.\nAnd thanks again for the fix. I've changed branch to devel.. There was bug in your PR found in #361 there was needed break from outer for loop if push is false. Added a fix in devel branch it will be in next version.. You can test it here https://codepen.io/jcubic/pen/veGPqw. The issue was because of focus handler on textarea I wanted to have foucs when user press tab while on a page, I've removed that code because it was causing problems and also onTerminalChange is called for all terminals.. Released in version 1.8.0. Fixed in devel branch.. yes, next version 1.9.0. Thanks for the info the page is updated, probably upload failed.. This is a features added on purpose, when you have images in clipboard they can be echo when paste.\nDo you think it's a bad idea?\nI can make an option to disable that feature.. Added in devel branch option pasteImage, it will be in next version 1.9.0.\nYou can grab devel version if you need it now, all build files have VER as version so you will know it's devel version.. this is by design because CTRL+C copy text to clipboard in any browser so I left it so you can select text inside terminal and copy.\nI can do what you want if selection is empty, but then there will be two functions for the same key, I don't know if that's good idea.. Added in devel branch the same as it look in bash on GNU/Linux it echo command + \"^C\" and clear the current command.. Fixed in devel branch, if you want the fix now you can apply this css:\ncss\n.cmd .clipboard {\n    opacity: 0.01;\n    filter: alpha(opacity = 0.01);\n    filter: progid:DXImageTransform.Microsoft.Alpha(opacity=0.01);\n}\n. fixed in devel branch. Released in 1.9.0. Which version you're using, I'm not able to reproduce and I've just released version 1.9.0 can you test it in that version?. Fixed in 1.9.0. This issue was fixed in 1.9.0 just now.. In Edge/IE it was reported and fixed in #344. I'm not able to reproduce in Safari 9 (the only one I can test), does it's still an issue in 1.9.0?. you can change cursor position using click (but the terminal need to have focus) or using arrow keys.\nthat cursor on the left (in hidden textarea) was showing up only in IE I've fixed that in devel branch (css update).. Finally instaled Xcode on my MacOS that run in VM and using Simulator I've tested.\nI've created beter cursor hiding and it seems it work for Android so it's fine, the fix is in devel branch in css file.. Didn't mention you can test devel branch in this pen https://codepen.io/jcubic/pen/LxgJQG. Thanks for the report, fixed in devel branch and also fixed this context.. This is already fixed in devel branch, can you test https://codepen.io/jcubic/pen/LxgJQG. The setting numChars was just a hack to make test from jasmine node work becuase there are no css there to make width of the terminal so I've created that option to set number of chars. I didn't know it even work outside of tests.\nMaybe I should not put it in docs.. I've put character size check in font resizer so it will fire only when you change font.. And fixed the requested bug with command line resize on settings.numChars + terminal.resize, didn't get what you wanted first time I've read the issue.. The change is in version 1.11.0. Font size change need to be done on .terminal class, ideally by changing --size css variable, because that's the easiest way.\nTo calculate the char size new div with terminal class is added to body, so terminal will to work when created and then appended to DOM.\n$('<div/>').terminal().appendTo('body');. In devel branch, I've made a change to get inline style from terminal instance for fake .terminal div, but you still need to call resize() manually becuase changing font don't trigger resizer, (the width&height is not changed).. Added resizer for font-size, you can now change font-size or --size without the need to call resize method.\nThe fix is in devel branch, will be in next version.. Fixed in devel branch.. Released in version 1.10.1. It need to be called 16 times if every terminal have the callback set then you have 16 callbacks, one for each terminal. If you want it to be execute once you need to define it only in one terminal.\nIn last commit I've changed to context to be terminal that for which it came from and argument is terminal that is selected, so you can defined callback as this:\nonTerminalChange: function(selected_terminal) {\n                     console.log('change from ' + this.id() + ' selected terminal ' +\n                                 selected_terminal.id());\n                 },. so if you want it execute once, if the function is the same for all terminals, you can use this:\njavascript\n                 onTerminalChange: function(selected_terminal) {\n                     if (this.id() == selected_terminal.id()) {\n                          console.log('terminal change to ' + this.id());\n                     }\n                 }. it probably should execute 2 times, one for terminal that you exit and one that you enter. Did you defined that event only on one terminal? will check it tomorrow.\u00a013.11.2017 11:01 AM artursOs notifications@github.com napisa\u0142(a):Expected behavior\ncall  onTerminalChange 1 time.\nActual behavior\nfor example : i have 16 terminals on screen. when i click on terminal, function onTerminalChange fired 16 times instead of 1\nSteps to reproduce\nBrowser and OS\n\u2014You are receiving this because you are subscribed to this thread.Reply to this email directly, view it on GitHub, or mute the thread.. The fix will be in next version you can now grab it from devel branch.. the fix is in version 1.11.0. Sorry, forget about this bug in version 1.11.0 will fix soon and it will be in version 1.11.1. The fix is in devel branch.. in version 1.11.1. This one works in command:\njavascript\nsetTimeout(() => {\n    this.disable();\n    $('input')[0].focus();\n}, 100);\nDon't know why it don't work without timeout and don't know why focus(false) don't work. It's calling disable, but right now focus it's for switching terminals if you have more then one terminal.\nI need to investigate why there is need for setTimeout, it would be nice if you need to use it, probably the code that make textarea in sync (fix_textarea function) it responsible for this and it refocus after you enter the command.. There was two bugs one that you can't call focus(false) if you have one terminal and the fix for second was to check if cmd plugin was enabled before refocus textarea and set cursor position.\nCan you test devel branch?. Sure. or maybe better to create another issue with your question so if someone will search he will find it by title.. the fix is in version 1.11.0. @ahmed-shariff what exactly is the issue? And what steps do I need to do to recreate the issue?. Oh, it's because you're using:\njavascript\nonBlur: function() {\n    return false;\n}\nTL;DR remove it\nthis make terminal don't give up focus, this was fix for full screen terminal when it was added to body. When output of the terminal is smaller then the height you could click below terminal and you loose focus . I've added this to examples so it work for Full screen terminal. But it turn out that this can be done using css min-height: 100vh; which was added to terminal css so even for terminal on body this is not needed.\nI need to remove that function from examples.. I don't know if I understand correctly but if you just want to set the prompt programmatically you can use terminal.set_prompt(\"prompt>>>> \"). you can also set it to empty string.\nThere is also a feature that allow to execute commands from echo so if you have json-rpc (you don't use it but), they look like this [[command args....]] you just echo this and it's get removed from output but the command get executed, you can create one command that will set prompt:\njavascript\n$(node).terminal({\n   prompt: function(value) {\n      this.set_prompt(value);\n  }\n});\nand then if you echo the stuff from the server the server can decided when to change the promp by sending '[[prompt \"new prompt\"]]' over a socket.\nyou can even create method that will invoke terminal methods like this:\njavascript\n// if you can use ES6 otherwise you will need to use arguments array and slice and apply\n// you will also need to disable arity using checkArity: false option\nmethod: function(method, ...args) {\n   this[method](...args);\n}\nand send [[method set_prompt \"new prompt\"]] or [[method clear]] it was made just for RPC when you can write your whole logic in server side.. If you have async commands I've created two methods pause() and resume() just for that. You call pause() before you do async code (that's response to user command) and when you're done you call resume, it will show/hide the terminal and it also needed if you do exec with async commands and want your commands to be executed one after another.\nyou can try to call pause when user enter command and resume in your socket response.. the afected version was 1.8.0 that fixed one issue with mixed case and case insensitive completion.\nThe fix will be in 1.11.1. Thanks for the report, it's just another inconsistency in how IE set key property. the fix is in devel branch will be in 1.11.1. the problem was that terminal width was 100px initially and signature was empty and div for it was not created and next time when it was updating it could'd not found div with id for the greetings.\nThe fix will be in next version 1.11.3 or 1.12.0.. You mean that system.describe return different results after you call load or that load act like system.describe that return new set of commands?\nCan you provide the code and the list of commands that you execute? it can be simplified to demonstrate the flow.. You can do something like this:\njavascript\n$.terminal(['rpc-service', {\n   push: function(prompt) {\n       this.push('rpc-service', {prompt: prompt});\n   }\n}]);\nand then the load command can return string \"[[ push 'company number']]\". this will call system.describe again to get new commands and set the prompt. Although this will allow to exit the new interpreter using CTRL+D and exit command if you don't want that you can try can try using:\njavascript\nthis.set_prompt(prompt).set_interpreter('rpc-service');. One more thing if you don't want the push command in your completion you can use function as second value in array:\njavascript\n$.terminal(['rpc-service', function(command) {\n   var cmd = $.terminal.parse_command(command);\n   if (cmd.name == \"push\") {\n       this.push('rpc-service', {prompt: cmd.args[0]});\n   }\n}]);. Fix in dev will be released in next version. Thanks for the report, I've forget about examples.. If you have just 2 questions (user and github) you can do nested push, if you have more it would probably be better to do something like in comments, where you have list of prompts in array and you construct the object:\njavascript\nvar init = true;\n$('body').terminal(function(command, term) {\n    term.echo(new Date(), {\n         finalize: function(node) {\n             if (init) {\n                 // node is jquery object and html have data-index attribute\n                 var index = node.data('index'); \n                 setInterval(function() {\n                     term.update(index, new Date());\n                 }, 1000);\n                 init = false;\n             }\n         }\n     });\n     term.push(function(username) {\n         term.push(function(github) {\n             term.pause();\n             // do some async processing like ajax call\n             setTimeout(function() {\n                 term.echo('Some data').resume().push(function(yn) {\n                     if (yn.match(/^(y|n)$/i)) {\n                         if (yn.match(/y/i)) {\n                             // YES\n                         } else {\n                             // NO\n                         }\n                         term.pop().pop().pop(); // exit from all pushed interpreters\n                         // if you will want to enable some different commands to github\n                         // you can do term.push here\n                     } else {\n                         // invalid, you can ignore, it will ask again \n                         // or you can do term.pop() x 3 if you don't want that\n                     }\n                 }, {\n                     prompt: 'Confirm (y|n): '\n                 });\n             }, 1000);\n         }, {\n             prompt: 'github: '\n         });\n     }, {\n         prompt: 'username: '\n     });\n});\nif you want this to be on init you can move the code from inside terminal to onInit or after terminal is created.. If you want to ask multiple questions you can take a look at leash-src.js#L705 there is array of specs and it process all questions and options and create a single object with all the settings.. I came up with something like this:\njavascript\nvar init = true;\nterm.echo(new Date(), {\n    finalize: function(node) {\n        if (init) {\n            var index = node.data('index');\n            setInterval(function() {\n                term.update(index, new Date());\n            }, 1000);\n            init = false;\n        }\n    }\n});\nvar mask = ['root_password', 'password'];\nvar settings = {};\nvar questions = [\n    {\n        name: \"root_password\",\n        text: 'Enter your administration password',\n        prompt: \"root password: \"\n    },\n    {\n        name: \"server\",\n        text: \"Type your server name\"\n    },\n    {\n        name: \"username\",\n        text: \"Your normal username\"\n    },\n    {\n        name: \"home\",\n        text: \"Home directory\"\n    },\n    {\n        name: 'guest',\n        text: 'Allow guest sessions (Y)es/(N)o',\n        boolean: true\n    },\n    {\n        name: 'sudo',\n        text: 'Execute sudo for user accounts (Y)es/(N)o',\n        boolean: true\n    },\n    {\n        name: \"password\"\n    }\n];\nfunction ask_questions(step) {\n    var question = questions[step];\n    if (question) {\n        if (question.text) {\n            term.echo('[[b;#fff;]' + question.text + ']');\n        }\n        var show_mask = mask.indexOf(question.name) != -1;\n        term.push(function(command) {\n            if (show_mask) {\n                term.set_mask(false);\n            }\n            if (question.boolean) {\n                var value;\n                if (command.match(/^Y(es)?/i)) {\n                    value = true;\n                } else if (command.match(/^N(o)?/i)) {\n                    value = false;\n                }\n                if (typeof value != 'undefined') {\n                    settings[question.name] = value;\n                    term.pop();\n                    ask_questions(step+1);\n                }\n            } else {\n                settings[question.name] = command;\n                term.pop();\n                ask_questions(step+1);\n            }\n        }, {\n            prompt: question.prompt || question.name + \": \"\n        });\n        // set command and mask need to called after push\n        // otherwise they will not work\n        if (show_mask) {\n            term.set_mask(true);\n        }\n        if (typeof settings[question.name] != 'undefined') {\n            if (typeof settings[question.name] == 'boolean') {\n                term.set_command(settings[question.name] ? 'y' : 'n');\n            } else {\n                term.set_command(settings[question.name]);\n            }\n        }\n    } else {\n        finish();\n    }\n}\nfunction finish() {\n    term.echo('Your settings:');\n    var str = Object.keys(settings).map(function(key) {\n        var value = settings[key];\n        if (mask.indexOf(key) != -1) {\n           // mask everything except first and last character\n            var split = value.match(/^(.)(.*)(.)$/, '*');\n            value = split[1] + split[2].replace(/./g, '*') + split[3];\n        }\n        return '[[b;#fff;]' + key + ']: ' + value;\n    }).join('\\n');\n    term.echo(str);\n    term.push(function(command) {\n        if (command.match(/^y$/i)) {\n            term.echo(JSON.stringify(settings));\n            term.pop().history().enable();\n        } else if (command.match(/^n$/i)) {\n            term.pop();\n            ask_questions(0);\n        }\n    }, {\n        prompt: 'Are those correct (y|n): '\n    });\n}\nterm.history().disable();\nask_questions(0);. My code that I've posted in previous comment show settings you have so far and allow to edit them  so if I'll put it in examples it will be my updated code.\nDid you see it?. I've added my updated code to the examples.. I've used var(--char-width) because there are no sensible value for default width character and the value is always set.\nI can add 1 as default value just to remove the warning if you want. Or maybe I put the value that is generated in Chrome for default font which is about 7.. The fix is in devel branch will be in next version which will be 1.12.0.. CONTRIBUTORS.md it should be make coverage because make coveralls, I think, can only be executed from travis.\nI just merged master to devel, so there is conflict in this PR, you need to update the fork.\nAs for A[[;inherit;]\\n]B you can create an issue. (it also break when first character in formatting is new line like A[[;inherit;]\\nx]B).. To resolve conflict you just need to merge with upstream, run make and commit all changed, because conflict is in build files.. I've edited the comment about the option it's good to have since user may have terminal formatting that she want to have in output.. You're example code break nested formatting [[;red;]foo[;blue;]bar]baz], I forget to add it to the spec file.\n\nThe makefile contains\ncoveralls:\n  $(ISTANBUL) cover node_modules/jasmine/bin/jasmine.js --captureExceptions; cat ./coverage/lcov.info | ./node_modules/.bin/coveralls -v\n\nI think that I've modified Makefile instead of Makefile.in by mistake and I've updated the the CONTRIBUTOR.md to have coverage instead of cover I've also added .PHONY rule that I learn about recently (the rule was cover because there was directory name coverage created by ISTANBUL).. I made mistake in example for nested formatting it should be [[;red;]foo[[;blue;]bar]baz] and it work fine with your code but the split was for more then one formatter where one formatter return formatting.\nWill try to created breaking test for your code.. I've found the issue where split was introduced #325 as I mention it was for case when one formatter is applied over another, that's why normal formatters are applied only for text, but in case of nested formatting it required to be applied to whole string.. Thanks for the report. removed that line, it was used for debug but I've left it since debug don't do anything when I'm not debugging the code.. in version 1.14.0. Also include contributors for jquery.terminal-www. Updated and released in version 1.15.0. I think it's better to fix iterate_formatting then patch usage if it, I kind of fixed the issue with this snippet:\n} else if (i === string.length - 1) {\n                    callback({\n                        count: count,\n                        index: i,\n                        formatting: formatting,\n                        length: 0,\n                        text: in_text,\n                        space: space\n                    });\n                }\nit fixed the issue but break tests because it create empty string for normal cases, will try to fix the issue or just use filter(Boolean) if I'll don't found  better solution.. ok, I've fixed the empty string issue, I've just removed last_bracket check from split_equal the code is much nicer now.. in version 1.14.0. in version 1.14.0. Fixed by using iframe as resizer when resizeObserver is not available. in version 1.14.0. in version 1.14.0. Will be added in version 1.15.0. released in version 1.15.0. in what browser OS you see this first image? I don't see this on windows 10 in IE, Edge or Chrome. I got the same font as on GNU/Linux.\nAnd monospace is not really a font is the same as serif or sans-serif, but I will check how this look on Android, where font-family: FreeMono, monospace; don't work.. It don't work on my old Android phone. If I use consolas, monospace the font is changed to sans serif.. In IE it look litle bit different because there are serifs in monospace font and in Edge and Chrome there are no serifs.\n\nthose serifs disappear when I use consolas but on Android is still a problem and I don't know which version fixed this font issue.\nif you don't care about old Android you can use consolas in your own css that will overwrite jQuery Terminal.. The compromise can be this css:\ncss\n.terminal, .cmd {\n    font-family: Consolas, monospace;\n    ...\n}\n@media only screen and (max-width: 640px) {\n    .terminal, .cmd {\n        font-family: monospace;\n    }\n}. Right now you can't, its not that easy because each echo output is in its own div, but maybe I will add a hack that will use prompt tho set last line, I've try to create quick user code with this but it's not that easy because there are no event to trigger on each echo when redraw so the new line will appear when you resize the window.. Can you give more details?. Closing because of inactivity.. Thanks for the report will take a look.. Actually there is no difference between true or false in that event because it's not DOM event and there is only one action disable terminal or do nothing if you want to disable terminal you do nothing by default in js function return undefined or return any value then it will keep focus.\nThere are no event bubbling or things like that in terminal events.. You need to modify this object you can do this in your own code:\n$.terminal.ansi_colors = {\n        normal: {\n            black: '#000',\n            red: '#A00',\n            green: '#008400',\n            yellow: '#A50',\n            blue: '#00A',\n            magenta: '#A0A',\n            cyan: '#0AA',\n            white: '#AAA'\n        },\n        faited: {\n            black: '#000',\n            red: '#640000',\n            green: '#006100',\n            yellow: '#737300',\n            blue: '#000087',\n            magenta: '#650065',\n            cyan: '#008787',\n            white: '#818181'\n        },\n        bold: {\n            black: '#000',\n            red: '#F55',\n            green: '#44D544',\n            yellow: '#FF5',\n            blue: '#55F',\n            magenta: '#F5F',\n            cyan: '#5FF',\n            white: '#FFF'\n        },\n        // XTerm 8-bit pallete\n        palette: [\n            '#000000', '#AA0000', '#00AA00', '#AA5500', '#0000AA', '#AA00AA',\n            '#00AAAA', '#AAAAAA', '#555555', '#FF5555', '#55FF55', '#FFFF55',\n            '#5555FF', '#FF55FF', '#55FFFF', '#FFFFFF', '#000000', '#00005F',\n            '#000087', '#0000AF', '#0000D7', '#0000FF', '#005F00', '#005F5F',\n            '#005F87', '#005FAF', '#005FD7', '#005FFF', '#008700', '#00875F',\n            '#008787', '#0087AF', '#0087D7', '#0087FF', '#00AF00', '#00AF5F',\n            '#00AF87', '#00AFAF', '#00AFD7', '#00AFFF', '#00D700', '#00D75F',\n            '#00D787', '#00D7AF', '#00D7D7', '#00D7FF', '#00FF00', '#00FF5F',\n            '#00FF87', '#00FFAF', '#00FFD7', '#00FFFF', '#5F0000', '#5F005F',\n            '#5F0087', '#5F00AF', '#5F00D7', '#5F00FF', '#5F5F00', '#5F5F5F',\n            '#5F5F87', '#5F5FAF', '#5F5FD7', '#5F5FFF', '#5F8700', '#5F875F',\n            '#5F8787', '#5F87AF', '#5F87D7', '#5F87FF', '#5FAF00', '#5FAF5F',\n            '#5FAF87', '#5FAFAF', '#5FAFD7', '#5FAFFF', '#5FD700', '#5FD75F',\n            '#5FD787', '#5FD7AF', '#5FD7D7', '#5FD7FF', '#5FFF00', '#5FFF5F',\n            '#5FFF87', '#5FFFAF', '#5FFFD7', '#5FFFFF', '#870000', '#87005F',\n            '#870087', '#8700AF', '#8700D7', '#8700FF', '#875F00', '#875F5F',\n            '#875F87', '#875FAF', '#875FD7', '#875FFF', '#878700', '#87875F',\n            '#878787', '#8787AF', '#8787D7', '#8787FF', '#87AF00', '#87AF5F',\n            '#87AF87', '#87AFAF', '#87AFD7', '#87AFFF', '#87D700', '#87D75F',\n            '#87D787', '#87D7AF', '#87D7D7', '#87D7FF', '#87FF00', '#87FF5F',\n            '#87FF87', '#87FFAF', '#87FFD7', '#87FFFF', '#AF0000', '#AF005F',\n            '#AF0087', '#AF00AF', '#AF00D7', '#AF00FF', '#AF5F00', '#AF5F5F',\n            '#AF5F87', '#AF5FAF', '#AF5FD7', '#AF5FFF', '#AF8700', '#AF875F',\n            '#AF8787', '#AF87AF', '#AF87D7', '#AF87FF', '#AFAF00', '#AFAF5F',\n            '#AFAF87', '#AFAFAF', '#AFAFD7', '#AFAFFF', '#AFD700', '#AFD75F',\n            '#AFD787', '#AFD7AF', '#AFD7D7', '#AFD7FF', '#AFFF00', '#AFFF5F',\n            '#AFFF87', '#AFFFAF', '#AFFFD7', '#AFFFFF', '#D70000', '#D7005F',\n            '#D70087', '#D700AF', '#D700D7', '#D700FF', '#D75F00', '#D75F5F',\n            '#D75F87', '#D75FAF', '#D75FD7', '#D75FFF', '#D78700', '#D7875F',\n            '#D78787', '#D787AF', '#D787D7', '#D787FF', '#D7AF00', '#D7AF5F',\n            '#D7AF87', '#D7AFAF', '#D7AFD7', '#D7AFFF', '#D7D700', '#D7D75F',\n            '#D7D787', '#D7D7AF', '#D7D7D7', '#D7D7FF', '#D7FF00', '#D7FF5F',\n            '#D7FF87', '#D7FFAF', '#D7FFD7', '#D7FFFF', '#FF0000', '#FF005F',\n            '#FF0087', '#FF00AF', '#FF00D7', '#FF00FF', '#FF5F00', '#FF5F5F',\n            '#FF5F87', '#FF5FAF', '#FF5FD7', '#FF5FFF', '#FF8700', '#FF875F',\n            '#FF8787', '#FF87AF', '#FF87D7', '#FF87FF', '#FFAF00', '#FFAF5F',\n            '#FFAF87', '#FFAFAF', '#FFAFD7', '#FFAFFF', '#FFD700', '#FFD75F',\n            '#FFD787', '#FFD7AF', '#FFD7D7', '#FFD7FF', '#FFFF00', '#FFFF5F',\n            '#FFFF87', '#FFFFAF', '#FFFFD7', '#FFFFFF', '#080808', '#121212',\n            '#1C1C1C', '#262626', '#303030', '#3A3A3A', '#444444', '#4E4E4E',\n            '#585858', '#626262', '#6C6C6C', '#767676', '#808080', '#8A8A8A',\n            '#949494', '#9E9E9E', '#A8A8A8', '#B2B2B2', '#BCBCBC', '#C6C6C6',\n            '#D0D0D0', '#DADADA', '#E4E4E4', '#EEEEEE'\n        ]\n    };\nthe colors are taken from Xterm on Xubuntu.. Thanks for the PR can you modify jquery.terminal-src.css it's the source file and I will run make myself.. this is expected behavior because jquery plugins can't overwrite jQuery object. this $('.my--terminal') return jquery object not jQuery Terminal object to get terminal object you need to call $('.my--terminal').terminal().focus(). Event is executed but its name is onFocus but it's not jquery event but callback function in options.\njavascript\n$('...').terminal(<Interpreter>, {\n   onFocus: function() {\n       console.log('focus event');\n   }\n});. Updated website https://github.com/jcubic/jquery.terminal-www/commit/23edbfdb676b8f2537e80fc50cf87e1d83ae6c35. Can you create a Demo? this one works for me https://codepen.io/jcubic/pen/aGmdoW press enter to echo few lines and the counter.. autoscroll works this way, if before echo scrollbar is at the bottom it autoscroll if not then it don't scroll.. Also there is chat on website and old one from gitter, I can help you there.. the version you're using is broken in Chrome, because I was using code that detect Google Chrome and if user add terminal to body it use html as scroll element but new version Google Chrome switch to body like other browsers and it make this version broken.\nIn order to have scroll you need to use newer version. if you can't you can edit the file and change this line if you're using unminified file:\nvar agent = navigator.userAgent.toLowerCase();\n            if (!agent.match(/(webkit)[ \\/]([\\w.]+)/) &&\n                self[0].tagName.toLowerCase() == 'body') {\n                scroll_object = $('html');\n            } else {\n                scroll_object = self;\n            }\nand use just scroll_object = self;.. Weird I've check latest Chrome and it seems that only this work\njavascript\n$('html').scrollTop($('body').prop('scrollHeight'));\nso you need to use the code I use in version 1.14.0 or from lastest devel version (with fix for Safari).\njavascript\n        // Old Chrome used html for scrolling, but we can't use body,html on Safari\n        if (self.is('body') && !!window.chrome && !!window.chrome.webstore) {\n            scroll_object = $('body,html');\n        } else {\n            scroll_object = self;\n        }. I can detect Safari instead of Chrome then because on Safari it need to be on body.. I've used this in devel branch it works in Chrome/Safari Mac, Chrome/Firefox Linux and  Chrome/Firefox/Edge/IE on windows 10\njavascript\n        var is_safari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        if (self.is('body') && !is_safari) {\n            scroll_object = $('html,body');\n        } else {\n            scroll_object = self;\n        }. The fix from last snipped is added in version 1.15.0. Fixed in devel branch. released in version 1.15.0. Fixed in devel branch, I've needed to remove one line that was removing blank formatting from the end (the formatting was optional and it was removing single closing bracket), I hope it doesn't break anything, tests are fine.. maybe in the end of next week. in version 1.15.0. it seems that this happen only to the first character afer you focus on the terminal. Fixed in devel branch, the problem was the hack that insert space at the beginning for select all context menu. I didn't put space correction code in insert event that is used on android.. in version 1.15.0. It use UMD (check #327) so it should work, but I didn't test it with browserify, you need to test. . UMD work in this way that require return function that require to be invoked with dependencies so browserify code should look like this:\n```javascript\nvar $ = require('jquery');\nrequire('jquery.terminal')($);\n$('#term').terminal();\n```. The problem is that export_view data is not suitable to JSON.stringify because it have interpreter Stack Structure with functions, so if you export view with nested interpreter you will get the same interpreter.\nI can make it ignore interpreters if it's not Stack object.. Also lines have finalize functions but they will just be ignored by JSON.stringify. In devel branch you now can restore view from JSON but you will not get restored:\n if you echo function (like default greetings)\n if you echo with finalize (you will not have some data on your commands like a11y attributes or command class)\n* stack of interpreters (if you call push it will not be restored). And there is also fix for echo array of formatted strings and/or wider characters (Chinese/Japanese). The fix is in devel branch, it will be in next version. To fix this now you can use this css snipped:\ncss\n.terminal > .resizer, .terminal > .font .resizer {\n    visibility: visible;\n    pointer-events: none;\n}. With unix formatting you can use this long option unixFormattingEscapeBrackets added by @ml1nk in #372 it seems that I've forget to add it to documentation. It fix the problem, the same when I use:\njavascript\nterm.echo('&#91;[[b;#fff;]hello]&#93;'). There was two problems one in nested formatting function and the second was in extended commands, your example was invoking commands. And the problem was regex \\[\\[(?:[^\\]])* which was matching [[[ where is should skip first brackets, adding regex [^\\][] solved the issue.. The issue is still present when adding terminal to body.. Final fix is in version 1.16.1. Terminal should also pause when value from login is a promise.. This work as expected, without the fix on Google Chrome/Windows 10 in VirtualBox, so this is probably problem with extensions that was installed by it of the corp that I work for. The fix need to be applied to GIT Web Terminal.. The problem was height: 100vh or 100% on div, if you had height is fixed (using pixels) the issue don't happen. I've fixed the issue by removing 100vh from div and adding option scrollObject that can be set to \nstring 'body' or dom node document.body or jQuery object.. It seems that I didn't removed the fix completely. Done, but the istanbul was counting test file as 9x% covered and added to the summary coverage so I need to add more tests to have 80%.. Updated test to have 80.95% coverage.. This is not possible because, common string will remove git/.git and completion code can't know about the context of paths, it would require new API maybe callback function that will be called with array of matched strings and user will be able to call echo on that array and remove what he things is correct.. javascript\ndoubleTab: function(arr) {\n   this.echo(arr.map(function(completion) {\n       return completion.replace(/.*\\/([^\\/]+)\\/?$/, '$1');\n   }));\n}. the API look like this:\njavascript\ndoubleTab: function(string, arr, echo_command) {\n   echo_command();\n   this.echo(arr.map(function(completion) {\n       return completion.replace(/.*\\/([^\\/]+)\\/?$/, '$1');\n   }));\n}\nyou don't need to call echo_command, if you don't want prompt + command like with normal completion.. There are no such file right now but I wanted to add one for jQuery Terminal.. If you know typescript you can help create one.. I've started working on this, there is lots of types to add, I hope to have it for the next version.. Types are ready, right now you can use them by copy to your root directory and using:\njavascript\n///<reference path='jquery.terminal.d.ts' />\nThey will be in npm in next version probably in a week.. Found bug in typescript definition strings in options should be optional the same like other fields. released in version 1.19.0. There is function crlf that clear \\r that located in cmd plugin, it need to be put outside and use in echo.. you need to include unix_formatting.js file and it will handle escape codes and overtyping (output of man command) but I don't know about the code you provided, ANSI escapes look like this : \njavascript\nterm.echo('\\x1b[32mfoo')\nyou can test this on codepen https://codepen.io/jcubic/pen/MbVMwO. I've copied this to real terminal, my first try was this:\njavascript\n$.terminal.defaults.formatters.push([\n    /.?\\x08/g, ''\n]);\nbut it don't work, I'm not sure if it will be possible to make this work.. In devel branch you can use:\njavascript\n$.terminal.defaults.formatters.unshift([/(^|[^\\x08]|\\r\\n)\\x08/g, '', true]);\nunshift so If you're using unix_formatting it will be before overtyping that handle backspaces. 3 value will indicate that it should create while loop and replacing until regex don't match so don't use same text as regex in replacement, because you will have infinite loop.\nThe issue with this is that it will not work for command line if you copy paste that text or use insert.. I still need to fix the issue with command line right now I'm getting:\n[Start&#9Done] show be displayed as [Done]\ndon't know why I have  [Start&#9 because I've got correct string when from function that do replace in cmd plugin.\nI can release 1.17.1 when this is fixed or maybe 1.18.0 because there is new feature.\n$.terminal.defaults is global you need to have access to jQuery you can put that code where you import jQuery or if you're using script tag you can put it next to main render function where you attach React to DOM.. I've menage to fix the issue, the problem was that cmd is escaping brackets before It apply formatters so you can't type formatting into command line.\nYou will be able to use this regex:\njavascript\n$.terminal.defaults.formatters.unshift([/(^|[^\\x08]|\\r\\n|&[^;]+;)\\x08/g, '', true]);. the API changed it will look like this:\njavascript\n$.terminal.defaults.formatters.unshift([/(^|[^\\x08]|\\r\\n|&[^;]+;)\\x08/g, '', {loop: true}]);\n3rd argument will be options object or undefined so new options could be added later.. Version 1.18.0 with this API released.. is this your question on SO? Regular expression containing an escape sequence in JavaScript for jquery terminal not working\nI've provided the code with function for backspace\nHere is the demo with same code:\nhttps://codepen.io/jcubic/pen/oMvpPZ?editors=0010\none issue with this solution is that cursor dissappear at the end of next line. Will investigate why.. The problem is that backspace count as character so formatter change length I will need to update the API to allow for function formatters to return string and position, and will probably add backspace to unix_formatting\nEDIT\nalso it brakes on overtyping like: \njavascript\nterminal.echo('F\\x08FO\\x08OO\\x08O B\\x08_A\\x08_R\\x08_');\nthis create infinite loop. Fixed overtyping is in devel branch in unix_formatting.js file.\n. Probably in one or two weeks I usually wait a while for new bugs to appear.\nI also need to update  unix_formatting functions to return [string, position] and update cmd plugin to include new API, because unix formatting only work with echo, it was never working with command line but I want to fix this for next version.. Regex will not work with this case, you need to have state to make this work, so only function will work. You will need overtyping function from unix_formatting file for this to work, that handle leftovers before \\b when you add \\r character. Best is to use whole file. (from_ansi also handle \\x1b[K).\nAnd if you want this to work when you copy paste that result text (escapes replaced by appropriate characters) into terminal or use term.insert(), then you will need to update jquery.terminal as well, but if you only want echo to work just unix_formatting is fine.. released in version 1.19.0. Silly mistake, it should work now. The fix is in version 1.19.1.. Yes, regex formatter is very limiting it can't have state it will always skip what's after \\b you need to use function formatter, just use new unix_formatting file without any additional regex formatter.. please remove this line:\njavascript\n$.terminal.defaults.formatters.unshift([/[^\\r\\n]*\\r\\x1B(?:&#93;|&#91;|[\\[\\]])K/g, '', {loop: true}]);\nAlso there is one issue in unix_formatting, I thought that only \\r make text from before backspaces appear after, but it seems it also work with \\n, right now only this script works:\njavascript\nvar data2 ='Test0.\\n\\n==============================\\nChecking Backspace.\\t[    ]\\b\\b\\b\\b\\b-\\r\\u001B[KChecking backspace.\\t[    ]\\b\\b\\b\\b\\bFAIL\\r\\n\\u001B[KTest1.\\t[    ]\\b\\b\\b\\b\\bSKIP\\r\\n\\u001B[KTest2.\\t[    ]\\b\\b\\b\\b\\bSKIP\\r\\nTest3: 00:00:032\\nTest4\\n\\rChecking Backspace.\\t[    ]\\b\\b\\b\\b\\b-\\r\\u001B[KChecking backspace.';\nterminal.echo(data2);\n\\r\\n instead of \\n\\r and \\r instead of lonely \\n. one more fix, now \\n, \\r, \\r\\n and \\n\\r works the same and stuff before backspace is added before newline.. The insert is completely broken for this string. \n\nAlso, at the moment unix_formattring is being loaded at the begining of the application, could unix_formatting be given as an API so that it can be loaded when the terminal opens.\n\nnot quite understand the unix formatting loads when script is added to html at least when you use script tags, not sure how this will work with script bundlers. but If you split the files into vendor.js and app.js and include vendor first it should work the same.\nDo you have issue that you have text with checkers (tha'ts how terminal/browser renders \\b) instead of text like in real terminal?. The echo and insert work now for this case, but cmd show wrong cursor position when you move the cursor using mouse click.. Cursor position is fixed as well, the problem was \\t that was displayed as 4 spaces.. will add UMD to Unix_formatting the same as for other utility files. in 84b6081 I've added UMD for unix_formatting.js, and I just realized that I use unix_formatting in node and it was working but you needed to define global jQuery variable before you require unix_formatting.. version 1.20.0 released with the update.. I've needed to move \\x1b[K processing from from_ansi to overtyping because from_ansi needed to be called after overtyping but \\x1b[K need to be called before. . version 1.20.3 released.. On my Linux box (Fedora/Xfce/bash) I've got this results:\n```\nString: Details statement.\n================================\nLine 1.      [Done] \nLine 2.         [Done] \nLine 3.    [Done] \nLine 4.      [Done] \nLine 5.    [Done] \n================================\nClosing statement\n```\nso the spaces before [DONE] seems right, I've tried to fix the text after closing bracket.. Sorry I don't know how this should be handled I'm having different results each time I echo this in real Linux Terminal emulator.\n1.\n```\nString: Details statement.\n================================\nLine 1.      [Done] \nLine 2.         [Done] \nLine 3.    [Done] \nLine 4.      [Done] \nLine 5.    [Done] \n================================\nClosing statement\n```\n\n```\nString: Details statement.\n================================\nLine 1.      [Done] \nLine 2.    Done][Star]]\nLine 3.    [Done] \nLine 4.      [Done] \nLine 5.    [Done] \n================================\n\nClosing statement\n```\n3.\n```\nString: Details statement.\n================================\nLine Done]tar] \nLine 2Done]ar] \nLine 3Done]ar] \nLine 4Done]ar] \nDone]-----tar] \n================================\nClosing statement\n```. I've tested this in console but it don't work it also don't work in Linux terminal (Fedora/Xfce/bash).\nCan you tell me how this should work, what is algorithm for backspaces? Because there are more backspaces then text before, how this suppose to work?\nI think that the proper output for:\nLine 2. [Start]\\b\\b] \\b\\b\\b\\b\\b\\b \\b\\b\\b\\b-\\b \\bDone]\nshould be:\nLine 2Done]\nbecause there 14 backspaces and only 20 characters without Done so there is left 6 characters so only Line 2\nLinux terminal is showing:\nLine 2Done]ar]\nBecause there are 3 backspaces to many.\nif you have this instead:\necho -e \"Line 2. [Start]\\b\\b] \\b\\b\\b \\b\\b\\b\\b-\\b \\bDone]\"\nthe output is:\nLine 2. [Done]\nand the same output give jQuery Terminal.. Closing because of inactivity and because the input in string is also broken on my Linux machine so I assume that input string is broken. Also didn't got response from OP for a month.. Released in version 1.18.0. Something to consider should extended commands after remove print the line? term.echo(\"[[ foo ]]\").\nMaybe just fix less plugin (that was used when founding this issue) to use:\nstr.replace(/^$/gm, ' ') to don't have blank lines, or maybe make it work in this way if string is empty don't print anything but if not print every line.. released in version 1.19.0. fixed definition file, the issue was that I was testing on wrog type file for jQuery.. The fix is in version 1.19.1.. How do you echo this text? can you share the code you are using? and in which browser.. Do you have updated css file?. It seems that cmd::resize is broken in FireFox don't know why it work in Chrome. Maybe that's the issue you have.\nBut when terminal runs it always invoke cmd::resize with number of characters that's calculated in terminal and that was ok.. Can you create a demo with the problem? Because I cannot reproduce the issue.. Hey did you have a chance to test this again? Did you update css file?. Closing because of inactivity if you still will have a problem I can reopen.. in what mobile devices? I can only test on android and it works https://terminal.jcubic.pl/android.html. By default when you open website that use jQuery Terminal on mobile device, it will not enable it, because to open virtual keyboard you need user action, so you need to tap on the terminal to enable it and start typing.. Closing because of inactivity.. It seems that there are issues on mobile, found issue on iPhone and I tested on Android and there are different issues. iPhone is adressed in #443. The problem was when terminal was added to body.. sorry, but this PR make no sense. You've added comment that just wrong and you've broken the code. In 84b6081 I've added UMD for unix_formatting.js. In you're PR you didn't added the actual UMD. look at the diff. Maybe you commited and pushed the code and didn't save the file.. Added HOLD modifier for keymap that is always first on the list of modifiers.. released in version 1.21.0. released in 1.21.0. The 8\u20e3 is emoji that have code points '\\u0038\\uFE0F\\u20E3' and only then renders as emoji (\\u20E3 is 0 width box) but normal characters that have 2 codepoints also don't render properly like \ud83d\udca9 renders as \ufffd\ufffd when inserted into cmd.. released in version 1.21.0. The feature is in devel branch, but you can update it in your current version using:\njavascript\n$.terminal.encode = function encode(str, options) {\n    var settings = $.extend({\n        tabs: 4\n    }, options);\n    return $.terminal.amp(str).replace(/</g, '&lt;').replace(/>/g, '&gt;')\n        .replace(/ /g, '&nbsp;').split('\\n').map(function(line) {\n            var splitted = line.split(/(\\t)/);\n            return splitted.map(function(str, i) {\n                if (str === '\\t') {\n                    if (i === 0 || splitted[i - 1] === '\\t') {\n                        return new Array(settings.tabs + 1).join('&nbsp;');\n                    } else {\n                        var before = splitted.slice(0, i).join('');\n                        var len = $.terminal.length(before);\n                        var chars = settings.tabs - (len % settings.tabs);\n                        if (chars === 0) {\n                            chars = 4;\n                        }\n                        return new Array(chars + 1).join('&nbsp;');\n                    }\n                }\n                return str;\n            }).join('');\n        }).join('\\n');\n};. Now tabs option actually work (previously it only worked with columns and echo array) you can specify 8 to get the same results as in unix terminal.. Version 1.21.0 released.. there was still issues with tabs in command it's now fixed and it will be in next version.. version 1.22.0 released. The problem appear again after adding emoji regex but after update to version 7.0.1, that fixed reported issue, it now works.. The same happened with echo and 8\ufe0f\u20e3 without emoji codepen, fixed in d6f8398388efe7c9deffa8d19bdb2bc7448c5a89. version 1.22.0 released. which version of typescript and jquery lib and @types do you use? Do you have this project somewhere where I can check?. from version 1.19.0 the package include typings, maybe there is something in your code, do you use any any to make terminal work with typescript?. do you have @types/jquery installed? that's required in typescript.. If you have @types/jquery installed try to update it.. prompt was a bug it should be:\ntype ExtendedPrompt = ((this: JQueryTerminal, setPrompt: setStringFunction) => (void | PromiseLike<string>)) | string;\nI thought that | string was function or string and it was function that returns void, promise or string.\n. I thought that typescript d.ts file is complete but it still need work like echo value can be string, array of strings or function that return string or array and any promise that is passed to echo like the one in prompt can resolve to the same value.\nso if fact this should be\ntype echoValue = string | string[] | (() => string | string[]);\ntype ExtendedPrompt = ((this: JQueryTerminal, setPrompt: setStringFunction) => (void | PromiseLike<echoValue>)) | string;. I will add typescript as dev dependency and I will run tsc on test.ts file on build, that will be compete api usage in one file, it will not be that big, spec file (__test__ directory) that test the library will be much bigger. I think that typescript definition will be more complex then api usage.. I've updated d.ts file with after adding test for all related to terminal, cmd still need testing.. Version 1.22.0 with updated d.ts file just got released.. Hold+arrows works but it's bit slower then the original without hold.. version 1.22.0 released. It now works for this string but fail for \u263a\ufe0f xxx \u261d\ufe0f (\u263a\ufe0f xxx \u261d\ufe0f). The problem that trakcing_replace function was acting as position normalization, it's now done in apply_formatters so if two replace happen like with two different emoji it work as expected.. version 1.22.0 released. No it's not possible, it will require lot of work with current architecture, but maybe I go about and try to make it work, since I had few questions about this.. I completely missed formatters in prompt, will add.. You can now have the same text in prompt as in command. The code is in devel branch.. I kind of broken, devel branch right now but you can use version from commit.. works again, need testing.. Here is example of using prompt to not echo newline, it works with string prompt:\njavascript\n     var last;\n     var term = $('body').terminal($.noop, {\n         echoCommand: false,\n         keymap: {\n             'ENTER': function(e, original) {\n                 var str;\n                 if (!last) {\n                     str = this.get_prompt() + this.get_command();\n                 } else {\n                     var str = last + prompt + this.get_command();\n                     last = '';\n                 }\n                 this.echo(str);\n                 original(e);\n             }\n         },\n         prompt: '>>> '\n     });\n     var prompt = term.get_prompt();\n     (function(echo) {\n         term.echo = function(arg, options) {\n             var settings = $.extend({\n                 newline: true\n             }, options);\n             if (!prompt) {\n                 prompt = this.get_prompt();\n             }\n             if (settings.newline === false) {\n                 last += arg;\n                 arg += this.get_prompt();\n                 var arr = arg.split('\\n');\n                 var last_line;\n                 if (arr.length === 1) {\n                     last_line = arg;\n                 } else {\n                     echo(arr.slice(0, -1).join('\\n'), options);\n                     last_line = arr[arr.length - 1];\n                 }\n                 this.set_prompt(last_line);\n             } else {\n                 if (prompt) {\n                     this.set_prompt(prompt);\n                 }\n                 if (last) {\n                     echo(last + arg, options);\n                 } else {\n                     echo(arg, options);\n                 }\n                 last = '';\n                 prompt = '';\n             }\n         };\n     })(term.echo);\nI don't think I will add this hack to the library. It will be more complex if prompt is a function. The prompt function will need to be executed multiple times and I just fixed issue with counter in prompt function.. Added this to list of examples on the site.. version 1.22.0 released. Done.. version 1.22.0 released. version 1.22.0 released. Thanks for the fix. version 1.22.0 released. version 1.22.0 released. which react component you're using? if you use mine from Codpen then you just need to swap .terminal( with .dterm( and it should just work if some options or methods don't work I will need to update dterm. it was created just as an example.\nOne thing about dterm is that it require jQuery UI, if you just want dialog maybe you can use some ReactJS based dialog, so you will only have non-React jQuery and jQuery Terminal, but it will require additional work. dterm is very small and you can recreate the same functionality with any dialog library. I can came up with the code.. I've created a demo https://codepen.io/jcubic/pen/rZpjvL it require version >=1.22.1 of jQuery Terminal because onCommandChange was not in $.terminal.defaults and it was not picked up by dterm plugin so when you typed text in terminal it was not updating the state.\n. The dterm is integrated with jquery UI dialog, if you check the source code for dterm in summary it's just the same as:\n$('<div><div></div></div>').find('div').terminal().parent().dialog();\nnot other code. besides hooking resize of the dialog with resize of the terminal.\nSo if you have react dialog just use it as is and put terminal component inside, but add onResize event.. So you have working code? with what else can I help you with?. Possible solution use tracking_replace to remove CR from string.. Actually \\r in command line don't give problems it give width: 0ch and browser threat it as space.. jQuery Terminal is limited to only what's implemented in JavaScript, there my fork of jsvi but it's very limited, also it don't handle ANSI escape codes.\nBut good news is that there is project that allow to run whatever can work with real TTY so you can run screen or tmux and even real emacs. The project is called  xterm.js. You don't need to use websockets you can use ajax with pull in interval, I did something like this at work. We had two ajax calls one to send data and one to fetch new data from tty, but I don't know how it was created on a backend, but It will require to run a process with tty for each user.. The only way to have vi in jQuery Terminal is using jsvi you can look how this works in my GIT Web Terminal.. It seems that there is port of vim in web assembly https://rhysd.github.io/vim.wasm/. Thanks, fixed.. Thanks for the bug report, it's fixed in devel branch.. You've break typescript check, I have a typescript file that test the API against typescript definition.\nSorry, but this make no sens you just removed all the types from the file.\nto use the types from the file you don't need to import anything because the value is added to jQuery namespace. Just use:\njavascript\nimport \"jquery\";\nimport \"jquery.terminal\";\noptionally you can import jQuery into $ but you don't need named export in terminal because it don't have it's own namespace.\n. You can see typescript file that is working here https://github.com/jcubic/jquery.terminal/blob/master/test.ts. Hi, you need to provide completion option which can be array of command (strings) or function(string, callback) callback need to be executed with array of strings.\nAnd if you have object as interpreter or string that point to JSON-RPC service then you can use completion: true\nI definitely need to write better docs with all the features that can be used with the library. Right now completion is in api reference: completion\n. There are two ways:\nit you have object as first argument:\njavascript\n$('body').terminal({\n  pwd: function() {\n  },\n  pwdhash: function() {\n  },\n  'pwdhash-bin': function() {\n  },\n  pwdx: function() {\n  }\n}, {\n  completion: true\n});\nSecond option is if you have function as first argument:\n```javascript\n$('body').terminal(function(command) {\n}, {\n  completion: ['pwd', 'pwdhash', 'pwdhash-bin', 'pwdx']\n});\n```\nand if you need logic in completion for instance if you can command git and want to complete git clone and git checkout you can use this:\n```javascript\n$('body').terminal(function(command) {\n}, {\n  completion: function(string, callback) {\n      if (this.get_command().match(/^git /)) {\n         callback(['checkout', 'clone', 'pull', 'push', 'commit']);\n      } else {\n        callback(['ls', 'cat', 'git']);\n      }\n  }\n});\n```\nI'm now in process of writing better docs. And it seems that there is a bug in how completion list is presented, because there is only one space as separator. reported here  #442. And in last example you can also return a promise using\njavascript\nreturn Promise.resolve(['checkout', 'clone', 'pull', 'push', 'commit']);\nthis is useful if you have completion on the server:\n```javascript\n$('body').terminal(function(command) {\n}, {\n  completion: function(string) {\n      return fetch('completion.py', {string, command: this.get_command()}).then(res => res.json());\n  }\n});\n``. I've created [Getting Started Guide](https://github.com/jcubic/jquery.terminal/wiki/Getting-Started). I had the same problem in my leash shell, you need to use function, call server withcompgen` command and call callback with response ref: https://unix.stackexchange.com/questions/120786/list-all-binaries-from-path\nyou can see how I've did this here: \n frontend https://github.com/jcubic/leash/blob/master/leash-src.js#L1574\n backend https://github.com/jcubic/leash/blob/master/lib/Service.php#L727 and https://github.com/jcubic/leash/blob/master/lib/Service.php#L794\nthe code also complete dir names in cd command while you type them and the rest of the commands have file completion.. Closing because of inactivity, it was almost 2 months since last comment with not response from OP.. I've used trick to handle \\n\\x1b[1A (found in some ANSI artwork) that is using enter and the move the cursor up so I've just removed this string entirely. moving cursor will not work for other cases.. move forward was also simple just replace with N number of spaces.. My code for handling [1A was actually wrong because the sequence was \u001b[1A\u001b[38C move up and right.. Working ANSI artworks can be seen in this pen https://codepen.io/jcubic/pen/pxdxmN?editors=0010. I don't have time, and it's not that bad to have #hash links.. Thanks for the report, it seems that this is fixed in devel branch (got report on website chat and fixed) will release new version soon.. In version 2.0.1 released yesterday.. How did you've enabled the terminal? You should be using focus method. Do you have a demo? If not what steps did you do, can you share simplified code in this issue?. I've tried to replicate:\n$(() => {\n     $('ul li').terminal({}, {onInit: function() {\n        this.pause();\n        setTimeout(() => {\n           this.set_prompt('xxx> ').resume();\n        }, 400);\n     }});\n });\nbut it's working, can you share minimal example, without the workaround. Maybe create Codpen demo, you can fork this pen https://codepen.io/jcubic/pen/MbVMwO. Closing because of inactivity, if you think this is still an issue please reopen or comment and I'll reopen.. The virtual keyboard demo was created because the library was not working on mobile, and I've did't tested very much. but I'll check why tab is not working.. I've updated this old demo, new API require to invoke 3 events keydown keypress and keyup.. I think that freeze() method should do just that but it seems that not all keys work if you freeze because terminal is disabled. Also on my Android phone when you click on keyboard key, terminal unfreezes.\nKeyboard was created just to make it work better on mobile but now native keyboard works just fine on a phone, It was not a good example, but still I'll try to fix the issue.. It seems this is works you only need to use term.freeze(true); or $('#term').terminal().freeze(true)\nI'll add option that calling freeze(); will be the same as freeze(true);. My mistake it don't work, it freezes terminal and click don't work but invoking key event enable terminal.. Found the issue with the jQuery keyboard the problem is that the plugin focus his textarea on click. To fix this you just need to add this css:\ncss\n.ui-keyboard-input {\n   display: none;\n}\nplus adding term.freeze(true); to disable enabling terminal on click/touch. One issue is that backspace don't work. Will need to add a way to enable passing keyboard events when terminal is disabled. So probably will add readonly option or method. this readonly feature probably will need cursor enabled or disabled depending on option.. I'm closing this now, I've updated the jquery keyboard plugin (not minified version from Mottie/Keyboard) and it works fine, it don't open keyboard when you click on keys and you also have blinking cursor. Note to self always use latest version, that plugin was not updated for ages.\nThe keyboard is not centered but this is probably because of missing extension.. No I've didn't updated the project, I've updated the version I was using in a demo and it work with latest one.. Native keyboard pops because terminal is enabled. You need to freeze it (call freeze(true) - will need to set true as default, freeze() don't work)\nBackspace and enter are still a problem, will need to update. Only tested if press key on VKeyboard don't trigger opening the native keyboard, since that was major issue.. marking this as low because that demo was created when there where issues with native keyboard that work with no problems right now.. you need to call freeze on terminal object:\njavascript\nterm.freeze(true);\nor\njavascript\n$('#term').terminal().freeze(true);\nand this do nothing:\njavascript\n$('#term').attr('readonly', 'readonly');. It should work. There is a similar trick in code to the one in Codemirror.. Codemirror is source code editor in JS and it have right click paste, I've use their solution in jQuery Terminal.\nIt should work without doing anything special. You only need to have something in the clipboard. If it it don't work then it's a bug. You're saying that it don't work? What Browser/OS you're using?. Windows, GNU/Linux or MacOSX?. It works in VirtualBox win10 Chrome but you can't have text selection on terminal, maybe I can do something about it.. Can you record short video of the problem? but only if you don't have anything selected. I think you can't fix it, because if you have selection you have copy option and without you can have paste.. Hm, Codemirror have them both in same time. Maybe I can do the same. The problem is that Codemirror have editor selection in textarea, jQuery Terminal is different. Text selection and paste are independent. Will see if this is feasible.. I think it will be imposible to have both copy and paste when you right click on selection because I would need to add selection to cmd textarea and that is only for command line. As I said Codemirror is different. His textarea have the same text as selection so his copy can be processed on textarea.. I think that it simply use it wrong but nevertheless the animation need to be added and example updated.. to add glow to terminal:\nhtml\n<style>\n .terminal {\n     --color: #0c0;\n     --animation: terminal-glow;\n     text-shadow: 0 0 3px rgba(0, 200, 0, 0.6);\n }\n</style>. This is outside of the library (so no direct support build in, I mean no quick option to turn this on) but you can use web sockets to push update from server to client. The only limitation is that you need to run server on your physical or virtual machine (listen on a port). If you have shared hosting you can't use web sockets.\nAlternative are server side events that also work with server that only support HTTP like shared hosting, even with standard hosting that use LAMP. Limitation is that it's not supported by Edge and IE but those probably will gone soon (or Edge will support SSE when they switch to Chromium).\nYou can find libraries for both API in your server language of choice and they probably are also nice client wrappers.. Works great, my testing code converted image to grayscale while pasting + simple uppercase for text.. It seems that number of characters per line is way too big.. Issue is invalid, the Wikipedia command was returning malformed formatting. Afer fixing issue with formatting, it seems that split_equal return this code:\n4: \"[[b;#fff;;;Events\"\n5: \"]Events ]\"\nwhere input is [[b;#fff;;;Events ]Events ]\nexample:\n```javascript\n\n\n\n$.terminal.split_equal('[[b;#fff;;;References ]References ]', 100, true)\n// [\"[[b;#fff;;;References\", \"]References ]\"]\n``. How to you paste text on iOS, never did that before. Is this the same as on Android where you hold the finger and system popup with paste select all, came up? I believe this will be the same on Android.. It will be problematic, but I think it will probably be possible to have paste and copy on mobile in same time. It will require completely new implementation though, using content editable + hiding the caret. This is how Codemirror make it work on mobile, but he don't use custom cursor on content editable. This will be challenging to match content editable cursor with terminal cursor. And copy or paste will only work for command line - you will be able to hold finger only on command line -cmd`, plugin for both copy and paste - as for copy on terminal output, we will see, if that also will be possible on mobile.\n\n\n\nNOTE to self: to hide the cursor: caret-color: transparent. I've forget to write, the code is working on Desktop (with contentedtiable) but still don't on Android. It's in new expermimental branch.. WTF, you just created PR from my repo dev to master not from fork. Sorry but you need to write some code first.. It will be challenging to fix, the problem is not in unix_formatting, as I though (but it had bugs). My ansidec based on unix formatting after some tweaks renders Denis Ritchie ANSI art correctly but when I've added it  instead of ansi formatting it's still broken. It skip lines.. The problem was this formatting: [[;#EEEEEE;#585858]\\][[;#000000;#585858]] first unix_formatting didn't escaped \\ in output text second it was not handled correctly in iterate_formatting function used by split_equal. As a bonus I've added one optimization (iterate_formatting was executing even on lines that where shorter then the length of the terminal).. The fix is to remove raw class in finalize:\njavascript\nfinalize: function(div) {\n                      div.removeClass('raw');\n                  }\nbut this also can be change so the js is not needed. It think that it would be better to just disable emoji inside .raw this :not(.raw) in css was removed just so emoji in codepen works and this can be achieved by removing raw class.. In version 2.2.0. The other solution is to only include examples and api reference in wiki as backup.. another another solution is documentation how to run website locally. (it's just php code but it will require to have comments exported to SQLite database from MySQL).. In version 2.2.0. In version 2.2.0. The code is handling this by using Intersection and Mutation observers. One is used if you create terminal on div that's not yet in DOM and the second when div is not visible, will look into that.\nQuick test of the pen give this:\n$.terminal.active().cols()\n-Infinity\nit probably get the width of the terminal which is 0, when it's not visible.\nRight now you can fix this by using:\njavascript\n$('#term').show().terminal().resize();. The issue is position: fixed that already give trouble in #324. The problem was that Intersection Observer don't work if element have position: fixed\nref: Intersection observer does not work with target with position: fixed\n\nand Chrome bug with WontFix status Issue 653240: Intersection Observer not firing when root is body and element is position: fixed. The fix will be in version 2.2.0 you can try it from CDNJS url\nhttps://cdn.jsdelivr.net/gh/jcubic/jquery.terminal@devel/js/jquery.terminal.min.js. I think that it should just do nothing or just throw exception, you're echo nothing, it's definitely users error that should be ignored or user should be notified. I don't think that echo() and echo('') should act the same.. I've decided that this is correct behavior, now if you echo undefined or empty string you will have single blank like. But if empty string left after extended command got removed and executed it will be ignored.. Updated the code it now prints undefined when using echo(undefined) as suggested I've used arguments.length. In version 2.2.0. The problem is that default terminal color is white, unix formatting is correct.\nAdding:\ncss\nbody {\n  --color: white;\n}\nfixed the issue.. Thanks for the report. This is very bad event this don't work:\njavascript\nterm.echo('Display [[b;white;red]' + $.terminal.escape_brackets('a[i]=42') + '] and hang up!');\nIt don't hang locally when I tested but the output is totally broken also nested formatting give weird output and make this event worse.. It's because font is not monospace, did you've seen this when you visited the website? O did you modify the code somehow? On what Browser/OS did you seen this?. I've tested Windows 7 and Chrome and it works, maybe you have some browser extension that change style. Or maybe your system or Chrome is broken. It work when I've tested.\nYou can check dev tools maybe font-family is strikethrough in css panel.. This should be ok, \"Droid Sans Mono\" style came from page layout that is overwritten by terminal css. Do you have extensions? Try incognito mode and guess account (first in 3 dots menu and second on user icon menu next to 3 dots).. That's very weird, can you do one more thing? Can you open developer tools change tab to network check disable cache and then refresh the page?. I completely don't know what's happening, but I've notice that also code snippets are also serif, and monospace came from user agent stylesheet this time.\nCan you open this data uri in browser?\ndata:text/html,<pre>jQuery Terminal test</pre>\nand tell me if you have monospace font or serif? Maybe you've deleted system font (that responsible for monospace meta font name) and this is your Windows  installation issue.\nWhat about this page? https://www.cssfontstack.com/monospace. Yes, you can use css variables (also called custom properties):\ncss\n.terminal {\n    --background: white;\n    --color: black;\n}\ncolor need to be black because gray (even darkgray) is too white. This will not work in IE check can I use for browser support.. Do you a demo somewhere where I can test your code?. I'm not sure how async: false will work. Here is working example with rpc demo where I set session in php for each rpc command:\njavascript\n   jQuery(document).ready(function($) {\n        $('body').terminal(\"json-rpc-service-demo.php\", {\n            login: true,\n            greetings: \"You are authenticated\",\n            completion: true,\n            onBlur: function() {\n                // the height of the body is only 2 lines initialy\n                return false;\n            },\n            prompt: function(setPrompt) {\n                $.jrpc('json-rpc-service-demo.php', 'prompt', [],\n                       function(response) {\n                           setPrompt(response.result);\n                       });\n            }\n        });\n    });\nand it work, prompt rpc is executed after rpc finish.\n. if you're using normal ajax without build in RPC then you need to pause the terminal when you do ajax call, and resume after it finish and you echo the result. If you have problem with timing you probably need pasue/resume or return promise from interpreter (but that promise need to resolve to undefined otherwise the value from promise will get echoed, but if you return and have then(() => { then it should work fine if you don't return anything in then).. If you use code to trigger ajax even $.jrpc you need to use pause()/resume(), by default rpc I mean using string as interpreter, that will create RPC client for you. (like in my code). This is not blocking in PHP the request is not fired until first is finished because prompt is called when you call resume(). If it would lock the other session there would be two request but send would take longer but it start when first is finished.. I can confirm that in your code but you didn't send the link and pass.. You need to put those in your interpreter, can you show your first argument to .terminal(???. that's very weird it work with php when I tested, I've just removed session_start and replace it with file on disk and it works. Without having it live nothing I can do, the only thing I can think of is that you use outdated version.\nPs: this will not work:\njavascript\n        onIdle: function (term) {\n        term.resize();\n        $('#s').trigger('click');\n    },\n    completion: function (term, string, callback) {     \n        return true;\n    },\n    onBlur: function () {       \n        return false;\n    },\n        completion: function (term, string, callback) {   \n        return true;\n    }\nwithout calling callback make no sens, if you use rpc use completion: true and there are no onIddle maybe you want onInit.\nand tabcompletion: true is old option it was removed in version 0.8.0.. wait, sorry it seems that there are two requests, but they are both the same, this is a bug. There should be only one request to prompt.. The fix is in devel branch it will be in version 2.2.1.. Is you commands async or they are just echo something?\nif you use multiple execs use array:\njavascript\n$.terminal.active().exec(['a', 'b', 'a', 'b'])\nif your commands are async (ajax or setTimeout etc.) you need to use pause()/resume() (main reason for those functions is not to hide command line, but to have proper timing with exec).\nExample:\n$('???').terminal(function(cmd) {\n   term.pause();\n   setTimeout(() => this.echo('your commands is ' + cmd).resume(), 1000);\n}, {\n  onInit: function() {\n      this.exec(['command1', 'command2', 'command3', 'command4']);\n  }\n}\nthis will also work if you call exec one by one:\njavascript\n     onInit: function() {\n         this.exec('command1');\n         this.exec('command2');\n         this.exec('command3');\n     },\nNOTE: you can't call this.exec('cmd1').exec('cmd2'); because exec return a promise that resolve when you call resume.\nInstead of resume you can also return a promise from function, but it need to be resolved to undefined otherwise the value will be echoed to terminal, unless this is something you want.\njavascript\n        .terminal(function(cmd) {\n             if (cmd == 'x') {\n                 return $.get('exec.html').then((data) => {\n                     this.echo(data.split('\\n')[0]); // no return so promise will resolve to undefined\n                 });\n             } else {\n                 this.pause();\n                 setTimeout(() => this.echo(cmd).resume(), 500);\n             }\n         }, {\n             onInit: function() {\n                 this.exec(['x', 'cmd1', 'cmd2']);\n             }\n         });\nThe promise is very flexible it only need to be object that have then function, so it work with native Promises or jQuery defereds.. This should work the same, do you the code somewhere online, where I can test this?. Not sure what the problem is. Maybe because you don't have system.describe method and different code is executed for rpc interpreter. Will investigate, this seems to be a bug.. yes, the problem is system.describe if it's not there commands are not in sync. Same happen if you use ignoreSystemDescribe: true (which you should use if you don't have system.describe so no extra request at the beginning will happen).. Hm, the original option was not removed to not break existing code (that's why major version was not changed) will need to investigate describe: false then.. If you have system.describe, terminal know RPC methods and can create completion for you. So you can use completion: true.. Both errors should be fixed.. Will check. I can also add option to exec only when terminal is visible, but this will be workaround, nevertheless it will be useful option.. Please use 4 spaces instead of tabs.\n. Please remove space after semicolon.\n. You forget semicolon.\n. If you want to clear the clipboard textarea why don't you just use $('.clipboard').val('');\n. Sorry I thought tat you removing the whole clipboard. \nI think that the clipboard deleteting should be moved to delete method and it should take into account cursor position or better fake_mobile_entry should be renamed, maybe to fix_clipboard and the if (is_touch) { should be removed from that function, this should fix the problem with input method.\n. I don't expect you to make those changes, just thinking out loud for improvements.\n. You can remove the if (touch) { from fake_mobile_entry:\njavascript\n    $.terminal.from_ansi = function(input, options) {\n        ...\n        if (options.unixFormattingEscapeBrackets) {\n        }\n    };\nI'm using convention that argument is options and if I have defaults I use:\njavascript\nvar settings = $.extend({/* defaults*/}, options);\nIt would be nice if unix-formatting follow the same pattern.. ",
    "Wilfred": "Perfect! That's just what I needed, thanks.\n. ",
    "cbonnissent": "When I test this touch on my azerty keyboard : i have :\nkeydown\nkeyCode=57 (9)    which=57 (9)    charCode=0\nkeyIdentifier=undefined keyLocation=undefined\nshiftKey=false ctrlKey=false altKey=false metaKey=false\nkeypress\nkeyCode=0         which=40 (()    charCode=40 (()\nshiftKey=false ctrlKey=false altKey=false metaKey=false\nkeyup\nkeyCode=57 (9)    which=57 (9)    charCode=0\nkeyIdentifier=undefined keyLocation=undefined\nshiftKey=false ctrlKey=false altKey=false metaKey=false\nfrom this site : http://unixpapa.com/js/testkey.html\nand the caracter is \"(\"\n. In my /etc/default/console-setup\n```\nThe following variables describe your keyboard and can have the same\nvalues as the XkbModel, XkbLayout, XkbVariant and XkbOptions options\nin /etc/X11/xorg.conf.\nXKBMODEL=\"pc105\"\nXKBLAYOUT=\"fr\"\nXKBVARIANT=\"oss\"\nXKBOPTIONS=\"lv3:ralt_switch\"\n```\n. Thank you !\n. ",
    "kevzettler": "Sorry for the delay. Listed below is some console output from the key events. Here is more documentation on working with the branded key codes: http://unixpapa.com/js/key.html\nGoogle Chrome:\nLeft\nctrlKey: false\nmetaKey: true\ncharCode: 0\nkeyCode: 91\nRight\nctrlKey: false\nmetaKey: true\ncharCode: 0\nkeyCode: 93\nFireFox\nLeft\nctrlKey: false\nmetaKey: true\ncharCode: 0\nkeyCode: 224\nRight\nSame as above\n. I initially opened this issue and did some testing. However I don't have the same environment any more to recreate the tests. In my last update I have posted the meta and ctrl key data of using command+v. To answer the question of what left vs right means. It means there are two command keys on a Mac keyboard. Left and right. That is corresponding key status for both of them.\n. ",
    "arifamirani": "This issue seems to have not been solved. I can't paste anything in the terminal.\nUsing: Mac OSX 10.7.2\nChrome 17.0\n. ",
    "ducin": "I'm using chrome on kubuntu.\nI can paste text using ctrl+v, but I can't do this with shift+insert (which is standard for paste). What can I do to help to provide pasting with shift+insert?\n. great thanks, Kuba :+1: \n. Is it possible to make a recursive function with a return string parameter to enable handling all output formats no matter how nested the array is?\non PHP level, I do:\nreturn array(\n  'something' => array(\n    'main value' => int\n    'another value' => array(\n      'x' => 'a'\n      'y' => 'b'\n     ),\n  ),\n);\nor any other level of array nesting. In fact I'd like to provide a terminal-alike service for a real class that performs quite a lot of operations with different return types. All types return nested arrays though.\n. Additionally, passing no ls parameters warning can be fixed by setting default value for the ls() method ($path = null). At least I guess that 'ls' should imitate Unix ls command which can be run without additional parameters - until now it returns following warning:\n```\n\nls\n[AJAX] parsererror - Server reponse is: \n\nWarning:  Missing argument 2 for Demo::ls() in /var/www/github/jquery.terminal/examples/json-rpc-service-demo.php on line 21\n\nNotice:  Undefined variable: path in /var/www/github/jquery.terminal/examples/json-rpc-service-demo.php on line 23\n\nNotice:  Undefined variable: path in /var/www/github/jquery.terminal/examples/json-rpc-service-demo.php on line 27\n\nNotice:  Undefined variable: path in /var/www/github/jquery.terminal/examples/json-rpc-service-demo.php on line 27\n{\"jsonrpc\":\"2.0\",\"result\":[\"json-rpc-service-demo.php\",\"mysql-rpc-demo.php\",\"json-rpc.php\",\"multiply-interpreters-demo.html\",\"rpc-demo.html\",\"tilda-demo.html\"], \"id\":10,\"error\":null}\n```\n\nAfter the fix, it's:\n```\n\nls\njson-rpc-service-demo.php mysql-rpc-demo.php json-rpc.php multiply-interpreters-demo.html rpc-demo.html tilda-demo.html\n```\n\nThanks to both commits, even the most strict error displaying server settings won't show any errors on jquery terminal demo ;)\n. ",
    "abersnaze": "I think it's a timing issue.  If I hold down the command-V it sometimes works.  My guess is that this code isn't right.\n        function paste() {\n            clip.focus();\n            //wait until Browser insert text to textarea\n            self.oneTime(1, function() {\n                self.insert(clip.val());\n                clip.blur().val('');\n            });\n        }\neither the browser has already put the text somewhere before the focus was switched to the clipboard div or the it didn't wait long enough.\n. ",
    "youurayy": "@abersnaze thanks for your observation, helped!\nwhen I put the code in a setTimeout(... , 1000) - the paste works fine. But I also had to make the paste() trigger on CMD+V - it did not work for CLTR+V and I don't know how to type SHIFT+Insert on my Macbook Pro keyboard:). (I'm working with Chrome on Mac.)\nI'll submit a PR if I ever get some free time to get back to this.\n. oops wrong file\n. ",
    "shellbryson": "We have jquery terminal in a project here and are seeing a reoccurrence of this problem - most of our developers are using Macs.\n. Perhaps something can be lifted from the CodeMirror project? It has superb cross-platform keyboard handling, never had issues.\n. Hello. I am also seeing this issue. In our case it appears to be triggered by a combination of scripts working together. We have a multi-tab UI; one tab contains jqueryTerminal, other tabs containing instances of CodeMirror (an editor). Entering commands in jqT work fine. Switch to another tab enter some text into CM, then switch back to jqT. This works a couple of times until jqT appears to hang the JavaScript engine. Some profiling and we can see that keyboard events are eating up over 600mb of memory and Chrome eventually (sensibly) halts the process to protect itself. A little debugging and we can see that, as above, str_parts() is returning a negative value. So our investigation begins here - not quite sure what it's doing! \n. (above comment is against version 0.7.10)\n. While hardly ideal, this seems to fix str_parts for us. Clearly there's an underlying issue:\nfunction str_parts(str, length) {\n        var result = [];\n        var len = str.length;\n        if (length > 0) {\n            if (len < length) {\n                return [str];\n            }\n            for (var i = 0; i < len; i += length) {\n                result.push(str.substring(i, i + length));\n            }\n        } else {\n            result[0] = str;\n        }\n        return result;\n}\n. Sadly this is part of a rather large Backbone app so I'm not sure that it will be possible. I'll see what I can do. Thanks :)\n\nSent from my iPhone\n\nOn 16 Dec 2013, at 17:47, Jakub Jankiewicz notifications@github.com wrote:\nCan you provide demo online where I can test it, the bug can be in other place. Maybe zip file with all dependecies so I can edit and put debug stuff.\nstr_parts is always executed agains num_chars variable, maybe the problem is in resize that's triggered when terminal is hidden.\n\u2014\nReply to this email directly or view it on GitHub.\n. A few observation: also occurs if active terminal is disabled & tab is hidden. But not every time. It's not associated with screen resizing. It's the keydown event handler that appears to use excessive memory until browser crashes (either tab freezes or Chrome 'oops' message displayed) - according to the memory profile that single event using ~600mb memory. \n\n\nSent from my iPhone\n\nOn 16 Dec 2013, at 19:58, Nicolas BERTIN notifications@github.com wrote:\nSame context in my case (backbone, codemirror, jqterminal and tabs) !\nI will check also if I can provide a zip (my app is quite small) or if you\nprefer a live link.\n\u2014\nReply to this email directly or view it on GitHub.\n. Great stuff Jakub, I'll merge the changes into our code tomorrow. Thanks for the fix.\n. We didn\u2019t do anything particularly special.\n\nIn our view, we have this function for initialising the terminal...\ncreateTerminal: function() {\n    var self = this;\n    this.terminal = this.$(\u201c.terminalContainer\").terminal( function(command) {\n            // ...\n        }, {\n            greetings: '',\n            login: false,\n            keydown: function(e) {\n                self.keyDown(e);\n            },\n            keypress: function(e) {\n                self.keyPress(e);\n            }\n});\n},\nWe have an event listener that triggers the above based on user input in another view.\n\nShell Bryson,\nWriter, Web Applications Developer\nE: shell@shellbryson.com\nTwitter: @shellbryson, Skype: shellbryson, G+: shellbryson, \nBlog: shellbryson.com\nM: +44 (0) 7515 351 555\nWriting\nTwitter: @stbryson_writer \nFB Page: facebook.com/authorshellbryson\nOn 29 Dec 2013, at 15:14, wetheoretical notifications@github.com wrote:\n\nHi there. Curious as to how you all were able to integrate the terminal plugin into the Backbone app. I have noticed that attempting to use the \"shim\" parameter through the following ( terminal: { deps: [\"jquery\"], exports: \"jQuery.fn.terminal\" } ) was unsuccessful for me. Any guidance would be excellent!\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "sheymann": "any update on this issue? It is really annoying...\n. That would be great to deal with embedding strings: we'd just have to escape those characters to ensure the formatting is done properly.\n. ",
    "eitoball": "I tried devel branch (2498aa44cf86119423fdfdb8f21c05effb80894b) on Mac OS X (10.9.4). It worked in Google Chrome (version 36.0.1985.125), but not in Firefox (version 31.0) nor Safari (version 7.0.5 (9537.77.4)). Let me know if you want to test with other settings.\n. > @eitoball Can you test by changing delay to 500 and 1000? It's line 1290 in devel branch\nSure.\n| Browser\\Delay | 1 | 10 | 100 | 500 | 1000 | 10000 |\n| --- | --- | --- | --- | --- | --- | --- |\n| Google Chrome (version 36.0.1985.125) | OK | OK | OK | OK | OK | OK |\n| Firefox (version 31.0) | OK | OK | OK | OK | OK | OK |\n| Safari (version 7.0.5 (9537.77.4) | NG | NG | NG | (1) | (1) | (*1) |\n(*1) If you try to press Command+v a couple of times, it works.\nThis is test code I use.\nhtml\n<!DOCTYPE HTML>\n<html>\n  <head>\n    <link href=\"css/jquery.terminal-0.9.0_dev.css\" rel=\"stylesheet\">\n  </head>\n  <body>\n    <div id=\"term_demo\">\n    </div>\n    <script src=\"js/jquery-1.7.1.min.js\"></script>\n    <script src=\"js/jquery.terminal-0.9.0_dev.js\"></script>\n    <script>\n$(function($, undefined) {\n    $('#term_demo').terminal(function(command, term) {\n      if (command !== '') {\n        var result = window.eval(command);\n        if (result != undefined) {\n          term.echo(String(result));\n        }\n      }\n    } , {\n      greetings: 'Javascript Interpreter',\n      name: 'js_demo',\n      height: 200,\n      width: 450,\n      prompt: 'js>'\n    });\n});\n    </script>\n  </body>\n</html>\nWhen I reported first, I tried with JQuery 2.1.1. Maybe that is reason for different results in Firefox.\n. I tested with 3 browsers. Chrome (version 36.0.1985.125) and Firefox (version 31.0) are fine. \nBut, Safari (version 7.0.5 (9537.77.4)) acts a bit strange. When text is pasted, cursor is blinking at the beginning of pasted text, but once you type something, cursor appears in the end of text. It is really hard to explain for non-native English speaker... If you need more explanation, I will make animated GIF image or something to show this behavior.\n. ",
    "osxpeppermint": "Guys, any progress with that?\nIs that by any means doable in Safari? In chrome, it works, but not in Safari...\n. ",
    "Mann90": "I tried today's devel branch on Chrome 41.0.2232.0 canary (64-bit) / Mac 10.10.1. Copy/paste is still broken. (It also fails on Chrome 40.) Pressing Command-V and selecting PASTE from menu don't work at all.\nWish this could be fixed!\n. ",
    "michaelvashchinsky": "Is being handled?\nWe need it too.\nThank you\n. +1 for NPM.\nYes, but with all the process of migrating to NPM, I think NPM package will be a good thing to have.\n. Thank you so much!\n. ",
    "alex-downtown": "Is there any work being done on this? It still does not work on Mac OS X, neither in Firefox nor in Safari.\n. Well... I need this, so I'll work on this myself. Expect pull request next days.\n. ",
    "automotua": "Hi, I wanna help do the test. I don't see any copy/paste problems in Safari (9.0.2 (11601.3.9)), Firefox (43.0.4), Chrome(48.0.2564.103, 64-bit) on my OSX 10.11.2. I simply copied / pasted using the demo site http://terminal.jcubic.pl for the testing. That site should be using the 0.9.3 version of temrinal.js, as I checked from the page source.\nHopefully it's of some help.\n. @jcubic Well, the devel branch works in only Chrome, not Firefox or Safari. All are still the same versions indicated above, on same machine.\n. @jcubic \n} else if (e.clipboardData && e.clipboardData.getData) {\npastedText = e.clipboardData.getData('text/plain');\n} else {\nThis else if will fire in all three browsers, with the alert box showing up with pasted text correctly. No text shows up in the textarea though. But I think it's fine because there's this line: return false; // Prevent the default handler from running. .\n. ",
    "romanman": "@jcubic what is the chance to get this fix \nany soon ? \nthe copy paste from the terminal is pretty \nimportant ? \n. @jcubic : actually I have it on Windows 10 Chrome , \nmaybe it's a different but when I copy some text\non the terminal the copy mark is removed by \nrefresh\n. @jcubic , thanks is it that big difference , \nbetween chrome on win / linux / mac ???\n. ",
    "cupuyc": "@jcubic First I tested on Mac. Mentioned file fixed copy/paste in one browser and broke in another. I looked which changes this file brings, comparing to original 0.8.8 version. I had luck to find out that few lines were removed. So I restored them and it became working on both Win/Mac FF/Chrome.\nhttps://gist.github.com/cupuyc/7281eef0a19b3f4daf459f5dc1f291df\n. ",
    "Tyratox": "Devel branch works on my mac in Chrome 51.0.2704.84, Firefox 48.0.2 and Safari 9.1.3 (11601.7.8) \ud83d\udc4d :)\n. Works \ud83d\udc4d , tested in the same browsers as stated above.\n. ",
    "stereobooster": "Still a problem for Mac OS X + firefox. I've been told this change breaks some things. I tested it only in firefox, though\n\nThis breaks the TAB-completion on safari as well as the Backspace key. On chrome it looks that with C-c / C -v pastes twice.... \n",
    "Philipp15b": "Sorry, it added another commit...\n. ",
    "mgedmin": "Never mind, it was a local patch we hacked up to get keys like Ctrl-R working on Chromium on Linux that broke Backspace on Windows: https://github.com/mgedmin/SnakeMUD/commit/93336b7c6a750cb01b4e1832ca7d1db519ba83d8\n. We were annoyed that we couldn't use Ctrl-R to reload the page (F5 worked, though), and that we couldn't use Ctrl+Shift+I/J to invoke the Chromium Inspector (F12 worked, though).  You could arguably call that a bug, I suppose: those keys are useful.\nI initially thought I could supply a custom key handler and let those keys through, but that's not possible -- if we say we handled the key, jquery terminal returns false to the browser, suppressing the default action.  The 'return true' hack seemed to work for a while.\nIf I had to work with jquery terminal more, I would want to find a solution that let me continue using Ctrl-R to reload pages, but the game jam is over now so I haven't bothered filing a wishlist bug for that.\n. For my particular use case I do not want completion of arguments, I want completion of commands.\nEventually it would be nice to be able to supply a custom completion function, I suppose, but I'm not interested in providing a patch for that at this time. ;)\n. ",
    "usmanajmal": "Is there any plan of supporting bash like tab-completion in near future?\n. Jakub, any update on providing support for iPad devices? I can help you test this on iOS and Android based devices if you like.\n. Just tried it on an iPhone. iOS keyboard appears finely. I don't know what keyboard and scrolling issue you are referring to but here is what I noticed:\nIf I type 5+3 at js prompt and press ENTER key, 8 appears fine but screen actually does not automatically move up and 8 kind of hides behind the keyboard. \nReference pictures:\n1. In following picture 8 is hiding behind the keyboard: http://tinypic.com/view.php?pic=bg2u69&s=6\n2. If I scroll above the screen manually I do see 8 as shown in following figure but I guess screen should automatically move above: http://tinypic.com/view.php?pic=2lkb2br&s=6\nI don't have an iPad available right now but I can test it on one tomorrow and let you know about results. \n. This may help: http://stackoverflow.com/questions/2863547/javascript-scroll-event-for-iphone-ipad\n. This should help fix the issue on iOS devices: https://github.com/vital101/jScroll/tree/master/example \n. @jcubic I am sorry. Couldn't find time yet to test this. I will test it soon if @ayrtonfreeman doesn't before me. :)\n. ",
    "boldt": "What's the status on this? It is quite annoying that I cannot press Strg+u to see the source or F11 for fullscreen -- for example.\n. ",
    "yellottyellott": "bump.\n. ",
    "rampall": "Thanks for the tip! The umlaut characters \u00e4, \u00f6, \u00fc  work fine!\nIts only the ALT+KEYs that dont work : {, [, ], }, \\, @, \u20ac and ~  as far as I can tell.\nThese are the ones highlighted in green here - http://www.forlang.wsu.edu/Images/help/kgerman.gif\n. BTW I just noticed this error message everytime a key is pressed. Maybe it has something to do with this (but probably not, the error msg happens also for the charceters that work on the jsterminal) \n\"event.layerX and event.layerY are broken and deprecated in WebKit. They will be removed from the engine in the near future.\"\nSeems to be a WebKit+XP only problem: It doesnt work on Chrome / Safari on Windows\nFYI: works without any problem on Firefox+WIndows, Chromium+Ubuntu\n. ",
    "AlexNisnevich": "Good points.\nThe reason I kept the validator separate from the first argument function is that I wanted commands to not be displayed or saved in history when they fail the validator. I've managed to accomplish the same effect now by exposing the history and the lines in terminal-output and popping both the array of output lines and the history bicycle, but it's significantly more involved. Is there any good, idiomatic way to conditionally not save or display a particular command?\n(The reason I don't want to show the commands in this case is because the command is incomplete: instead, a newline is printed for the user to continue. My application has a Lisp terminal, so commands are only complete when their opening and closing parentheses match.)\nAs for the historycolors, I probably didn't explain myself well - I was using it to color the lines that were in the terminal-output - I had to do it this way because lines in terminal-output are not given CSS classes and so I have no other way of differently styling the cmd and prompt sections. A better solution would probably be to assign CSS classes within the terminal-output based on what role the text previously served (prompt, command, or output).\n. > Color for prompt is no good because prompt can have already color, I can put classes into output prompt and command so you'll be able to style them, classes is better then adding formating.\nThis is a good idea - if you implement this, it will be much better than the hackish solution I'm currently using.\n\nIf you want to implement lisp interpreter check my example using scheme (jquery UI DIalog demo), http://terminal.jcubic.pl/examples.php#biwascheme\nIt always echo the command, Check the source code.\n\nI'm looking at it right now, but I really don't like the way that history works for multiline expressions - each separate line is saved in history, when really the whole expression should be saved (this is the way my interpreter - http://alex.nisnevich.com/ecmachine/ - currently works).\n\nI think that I should add way to add command to history conditionaly like historyFilter that will return true or false, and if history object will be in API then user will be able to call term.history().append(full_s_expression); or not save if first character is space (like in bash).\n\nI'd like to see this implemented.\nWhat I'm doing right now to accomplish this is kind of a hackish method:\njavascript\nif (command.split('(').length > command.split(')').length) {\n    // incomplete expression - remove from lines and history\n    terminal.set_command(command + '\\n..  '); // start new line in command\n    terminal.lines(terminal.lines().slice(0,-1)); // remove last line in output\n    for (i = 1; i < command.split(/\\n/).length; i++) {\n        terminal.get_history().pop(); // need to pop history once for each line after the first\n    }\n    terminal.resize(); // refresh terminal\n}\nwhere terminal.lines() is a getter/setter for the output lines, terminal.get_history() gets the terminal's History object, and History.pop() pops the last element of the history Bicycle\n. > Using one command is ugly hack, you can past and eval this\n\n(help\n..)\n\nI know that this behavior can be pretty ugly, but I can't see any other good way to get multi-line commands to work with history correctly.\n\nIn last commit I added historyFilter option, history return History\nobject and there is scroll to bottom on keydown.\n\nNice work!\n. ",
    "LordZardeck": "maybe a simple move_cursor function? Then all echo's overwrite anything after the cursor?\n. ",
    "robotnie": "Wow, so quickly. Thanks.\nMore questions/issues,\n1) Is that possible to add an option having history not to wrap? Saying in function BCycle::left() or BCycle::right(), let previous is null when it reaches first record, or let next be current input when it  reaches last record. Because I do like linux style history.\n2) In 0.4.12, clear command doesn't clear localStorage, not sure it is as expected? Better to have an option to save the history in either localStorage or sessionStorage.\n3) When I set the \"div\" as \"height: '100%',\" or \"height: 'auto',\", after inputting command, it can't scroll to bottom.\n4) This one is for hotkey: CTRL+H is hided, but it doesn't function erasing previous letter (in bash/vim it will). Now that CTRL+H could be hided, maybe we can provide CTRL+W hot key as an option to remove previous word.\nThanks,\nRobert\n. Furthermore, in my first post I cared historyFilter() callback because I want to combine adjacent same history records.\nuser@host ~> ls\nuser@host ~> ls\nuser@host ~> ls\n// now when I type UP ARROW, it is better to combine the three same \"ls\" command into one record.\nIf this is not good place to require new feature or open ticket, I can move them to new post.\nThanks,\nRobert\n. Thanks a lot.\nForgive me I am a Javascript starter, can't give diff file to you directly. Wish this great library be better.\nThanks,\nRobert\n. ",
    "billyzkid": "A little googling makes it sound like the input tag is the only reliable way to get the keyboard, especially older versions of iOS (<5) where contentEditable is not supported.\n. ",
    "ayr-ton": "@jcubic How is it going? \n. @jcubic Let me know if I can help in your working progress. I have access to IOs and Androids in resolutions for Smartphone and Tablet.\nGive me a call if you want me to test  in Ipad or help coding. I will be online :-)\n. @usmanajmal I will test jScroll at night and let you guys know if it fix the scroll problems.\nAt the time, the virtualkeyboard works fine same in IOs and Android, using the last version of jquery-terminal. I'm just having issues with crazy scroll.\n. Actually the keyboard is not working in IOs. I've tested again.\n. =x\n. ",
    "marcusramberg": "For some reason the keyboard appears in the demo on the front page (although scrolling ofset is wrong) but not in the other demos.\n. ",
    "shellstrom": "This issue is very old, I know, but mobiles are after all, in my opinion, pretty widely used types of devices.\nThis issue is also still open. There is some closed commit reference but I'm not sure if it fixes this specific issue, if it works with 0.7.7 or if it works for Android.\nI understand I can take a look at the implementation and see whether I can do something about it there has been some work done so far it seems. The question is; how do we move forward? Can we move forward? (Do we have to move forward? Is there a fix already?)\nBased on what I have currently, the keyboard on my Nexus 7 is popping up with the 0.7.7 version of this product. I can also zoom and pan.\nWhen typing, it does not seem to catch any characters. When pressing enter, a new line is output. On the android.html test page I get a bit random results. No characters are catched. When pressing Enter I get:\n$>\n447\n447\n110\n124\n138\n$>\n447\n447\n194\n208\n222\n$>\n447\n447\n278\n292\n306\n.....\n. ",
    "hervehobbes": "It's running on my iPad mini with iOS 9.2\n. Yes, it works\n. Hello,\nI can's show you my Php code, it's confidential, it just reads some records from a database.\nMy JS code is really simple:\njavascript\n      jQuery(function($, undefined) {\n          $('#term_demo').terminal(\"excalibur.php\", {\n              greetings: greetings(),\n              height: 500,\n              width: '80%',\n              completion: true,\n              prompt: 'Nestor> '\n          });\n      });\n. Yes I'm using it.\nNo I d'ont have any error message.\nThe same Php script with a different (shorter) query will run\n. There's no answer, as if the communication were closed.\n. Hello,\nThere's no error, in fact I beleive that the content returned by the Php script is causing the problem.\nGive me some time and I will tell you if the problem is coming from this.\n. Hello,\nThe problem was coming from the french \u00e9 character which is in my content !\nI have to convert the content to UTF8\nYou can close this ticket, sorry for disturbing you.\n. Hello,\nThank you for your answer.\nThat's what I have done but typing the TAB key does not complete my commands....???\n. Here it is:\n``` javascript\nfunction greetings()\n{\n    return ' Bienvenue ';\n}\njQuery(function($, undefined) {\n    $('#term_demo').terminal(\"http://192.168.0.8/nestor/excalibur.php\", {\n        greetings: greetings(),\n        height: 500,\n        width: '80%',\n        completion: true,\n        prompt: 'Nestor> '\n    });\n});\n```\n. Yes, problem solved by updating to the last version, I was using verion 0.9.\nSorry...\n. ",
    "MorganBorman": "Is there a workaround for this? I think this issue is the reason no other form elements in my page can be focused.\n. ",
    "KeithTurkowski": "I believe this is the same issue as the one that was resolved here:\nhttps://github.com/kanaka/noVNC/issues/275\nI tested this using the Chrome browser on Android and found that numbers 0 to 9 and ENTER worked, but other characters did not.\n. Tested this on Android 4.4.2 using the built in browser and Chrome, did not work for either.\n- Tapping brings up the keyboard for input\n- Pressing the Enter key seems to work correctly, the terminal moves the prompt down normally.\n- No other keys / inputs display.\n- Typing a string seems to be buffered and used in the autocomplete android feature, and typing the backspace key seems to operate on the autocomplete, but nothing actually appears in the terminal.\n. When I press the enter key, I get:\nyou enter :\n  keydown return false\nAll other key presses display:\nkeydown else\n. Just test android.html, and the key inputs are working. Two issues:\n1. After I hit enter, the string I typed is replicated at the prompt again.\n2. Backspace doesn't always delete characters consistently. Sometimes it will only delete one character, sometimes it will delete all but the first character.\n. Here's what I see when I type \"Test[ENTER][ENTER][BACKSPACE][ENTER]\":\nAndroid Test\n$> Test\nyou enter :Test\n$> Test\nyou enter :Test\n$> Tes\nyou enter :Tes\n$> \n. I'd love to see this issue resolved. If you're stuck or busy, I'm willing to help with the code, or with testing if needed.\n. I did some more testing, in Chrome on Android 4.4.4\nThe key_down(e) function is triggered  when you press a key, e.which and e.keyCode will give the correct value for the key pressed. However, the character is not displayed in the terminal prompt. I will do some more testing, but I believe to fix this, android must be detected and the character injected to the command prompt.\n. Summary: key events across Android browsers are inconsistent, implemented incorrectly, and buggy.\nLinks related to what is causing this issue:\nhttp://www.w3.org/TR/DOM-Level-3-Events/#events-inputevents\nhttps://developer.mozilla.org/en-US/docs/Web/Events/compositionstart\nhttp://techblog.open-xchange.com/2014/12/02/android-chrome-and-composition-events/\nhttps://code.google.com/p/chromium/issues/detail?id=118639\nhttps://code.google.com/p/chromium/issues/detail?id=422685\nhttps://github.com/RobinHerbots/jquery.inputmask/issues/465\nI \"fixed\" this issue on the latest version of Chrome for Android by caching e.which in the key_down function, and then adding a listener for the compositionupdate event.\n(-)        $(document.documentElement || window).bind('keypress.cmd', function(e) {\n  (+)        var keystrokes = function(e) {\n  (-)        }).bind('keydown.cmd', keydown_event);\n  (+)        $(document.documentElement || window).bind('keypress.cmd', keystrokes).bind('keydown.cmd', keydown_event);\n(+)        $(document.documentElement || window).bind('compositionupdate', function(e){if(!lastkey.bad) keystrokes(lastkey);});\n(+)        lastkey = {which: e.which + (e.shiftKey ? 0 : 32), ctrlKey: e.ctrlKey, bad: e.which == 0};\nThe 'keypress' event will send the character that is pressed, while the 'keydown' event only sends the key pressed, so you have to check to see if shift is pressed in order to determine upper/lower case, etc.\nThis is because the keypress event does not trigger on Android Chrome when a composition is being done, although it will trigger on non-compositions, like pressing '1' or 'ENTER'.\nAlso, there is apparently a bug, in that when a composition completes (by pressing enter for example) when the next composition starts and the next keydown event will send the value of 0 for e.which (but will still trigger all the events).\nThis is all great, except that this code does not work on the built in \"Internet\" browser app that comes with Android 4.4.4 or with Firefox on Android.\nAll 3 browsers seem to handle compositions differently, and send different events in different orders, so here's what happens when the following sequence of keys is pressed.\nSequence: abc(ENTER)abc(ENTER)\n(kd) = keydown event\n(kp) = keypress event\n(ku) = keyup event\n(cs) = compositionstart event\n(cu) = compositionupdate event\n(ce) = compositionend event\n(i) = input event\n(bi) = beforeinput event\nWindows Firefox:\n\n(kd)(kp)a(ku)(kd)(kp)b(ku)(kd)(kp)c(ku)(kd)\n(ku)(kd)(kp)a(ku)(kd)(kp)b(ku)(kd)(kp)c(ku)(kd)\n(ku)\n\nAndroid Chrome:\n\n(kd)(cs)(cu)(i)(ku)(kd)(cs)(cu)(i)(ku)(kd)(cs)(cu)(i)(ku)(kd)(ce)(i)(ku)(kd)\n(ku)(kd)(cs)(cu)(i)(ku)(kd)(cs)(cu)(i)(ku)(kd)(cs)(cu)(i)(ku)(kd)(ce)(i)(ku)(kd)\n(ku)\n\nAndroid Firefox\n\n(cs)(cu)(i)(cu)(i)(i)(cu)(i)(i)(cu)(i)(i)(ce)(i)(kd)(kp)A(ku)(kd)(kp)b(ku)(kd)(kp)c(ku)(kd)\n(ku)(cs)(cu)(i)(cu)(i)(i)(cu)(i)(i)(ce)(i)(kd)(kp)A(ku)(kd)(kp)b(ku)(kd)(kp)c(ku)(kd)(kp)a(ku)(kd)(kp)b(ku)(kd)(kp)c(ku)(kd)\n(ku)\n\nAndroid Internet (default browser)\n\n(kd)(cs)(cu)(i)(ku)(kd)(cs)(cu)(i)(ku)(kd)(cs)(cu)(i)(ku)(ce)(i)(kd)(ku)(i)(kd)\n(ku)(kd)(cs)(cu)(i)(ku)(kd)(cs)(cu)(i)(ku)(kd)(cs)(cu)(i)(ku)(ce)(i)(kd)(ku)(i)(kd)\n(ku)\n\nAndroid Internet (default browser) seems to be based on an older version of Chrome, it's very similar except for a minor different in events when a compositionend happens. However, after the first composition it will start sending garbage keys.\nAndroid Firefox seems to do something different (and better) than Chrome, since it actually does a composition and when the compositionend occurs it triggers the (keypress) events from the composition in sequence, this would make Firefox work nicely without any changes necessary, except that it will sometimes store all the keys pressed for the session and injects them into a composition. So you will get every command character you typed flooding into the terminal.\nThe composition events seem to have no information on the keys being pressed, or inconsistent data between the browsers, so you can only get the key from e.which in keydown events semi-reliably.\nPerhaps there is some clever way to do this differently by binding an 'input' event handler, but I don't really see how to make a generic solution that works on all Android browsers due to buggy inconsistent implementation, especially with Chrome.\nI gave up on solving the problem in this way, and solved the problem using an  field instead, which I will detail a following post.\n. Here's my solution to the problem: https://github.com/KeithTurkowski/jquery.terminal/commit/23132445aef8496aa2c35b5e3f95ef872282c6ef#diff-dba734ca44649c50a5de68bf61511841\nI use an  field to capture the input instead of capturing keypress, it probably isn't fully functional for all the features of jquery.terminal, but it does solve the problem for my purposes.\nUnfortunately, the way these events are handled on different browsers on Android is so terrible, I don't think a key event solution is really feasible.\n. Also, if you want to incorporate this code, I think the following line of code is poorly placed:\n- self.find('.altinput').focus();\nI hacked it in without fully understanding the purpose of the code around it.\n. When you create your terminal, are you using \"altinput: true\" in the settings? It should work since it's using an <input> element.\n. I do something like:\naltinput: is_android()\nFind a library that detects android / mobile.\n. ",
    "mitchelldm": "That demo does not fix it for me. Running latest stable chrome on 4.4.3 \n. when I press enter I get this error\n. No, nothing showed up, just an error when I pressed space\n. A little update, I tried again and there are no more errors, but still nothing shows up. Also tried in Firefox, nothing as well.\n. Nothing shows up as you type, when you press enter it says \"you said: \". I think it must be an issue with autosuggestion, as the words show up in the bar above my keyboard as well as suggestions. Also just a change I am now testing on CyanogenMod nightly, still Android 4.4.4 and latest stable Chrome.\n. All I am getting when I press enter is \"you enter:\"\nNothing else\n. Now I am getting what Keith described.\n. Yes I get that exactly when I press enter, just keydown on any other key\n. It works! Mostly. If I enter a different amount of characters than the\nkeystrokes I used it will not allow deletion of those characters. For\nexample, when I use the swipe feature on my keyboard to enter an entire\nword with no keydown events I cannot delete those characters.\nOn 28/07/2014 6:24 pm, \"Jakub Jankiewicz\" notifications@github.com wrote:\n\nI've created workaround when keypress is not fired. Can you test again\nhttp://terminal.jcubic.pl/android.php\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/39#issuecomment-50311282\n.\n. Regular key: keydown, keyup, no keypress\nEnter: keydown, input keypress, body keypress, doc keypress, keyup\n\nPossibly I was doing something odd before or maybe you changed something\nbut on android.php I can delete stuff after typing via swipe, but I cannot\ndelete the first letter. It seems to be only visual as if I type something\nthe letter I could not delete is replaced by the first character I type.\nOn 28/07/2014 6:33 pm, \"Jakub Jankiewicz\" notifications@github.com wrote:\nDo you get change logged when you do that?\nhttp://terminal.jcubic.pl/test.php what you get now?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/39#issuecomment-50311971.\n. I am using the Google keyboard\nOn 28/07/2014 6:54 pm, \"Jakub Jankiewicz\" notifications@github.com wrote:\n\nWhat keyboard do you use? I've try to install \"swype keyboard trial\" but\nafter install it didn't show up anywhere.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/39#issuecomment-50313742\n.\n. The Google keyboard from the play store is what I am using, however it\nseems to be working even with the swipe. The only issue I can see now is a\nghost character where I can't delete the first character until I start\ntyping\nOn 28/07/2014 7:11 pm, \"Jakub Jankiewicz\" notifications@github.com wrote:\nHow can I recreate your \"swipe\", do I need to install anything? How can I\ntype using swipe?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/39#issuecomment-50315269\n.\n. \n",
    "prologic": "+1 Any fix for this issue yet? I use jquery.terminal in quite a few projects and it woud be nice to have it work just as well on mobile devices :)\n. ",
    "twilco": "I'd also like to put in my +1 for this issue.  I've tried the terminal on 2 different Android devices and the problem persists for both.  It'd be great if this worked :)\n. ",
    "vfioox": "+1 I tried using it on WP8 and no results\n. ",
    "tasl33m": "Thanks for this, Keith. I have been experiencing the exact same problem, thanks perhaps to your solution the \"Internet\" and \"Chrome\" apps work fine for me on Android. My current issue surrounds the \"Google Keyboard\" app. The only keystrokes that register are numerals, despite using your updated solution. Any ideas?\n. Hi Keith. Good point. I've added that in (not sure if in the right place?). Could you take a look for me here if you have a spare couple minutes ... can anyone see what I've done wrong? Hope it is an obvious fix. http://chaostheorem.com/android \n. Oh my! THANK YOU\n. Does anyone else have this same problem? http://chaostheorem.com/android is not compatible with IE11. The enter/return key on the keyboard isn't recognised. Instead, a mouse click event is required? No way to have the script work for both mobiles and desktops?\n. Didn't think of that. Thanks. For anyone else stuck, use this:\nvar ua = navigator.userAgent.toLowerCase();\nvar isAndroid = ua.indexOf(\"android\") > -1; //&& ua.indexOf(\"mobile\");\naltinput: isandroid //second argument\n. Thanks for the quick reply. I added in outputLimit: 0 (as you can see online), and it does appear to work initially, but what happens now is you can't scroll back up (ie. you lose the history of commands you first started with).\nI'm starting to think this could actually be a JQuery Dialog error, as my Terminal is sitting inside a window. If I take the window away I don't get this issue.\n(Actually no, scratch that last comment. Same error I get even when JQuery Dialog is removed.)\n. Found the solution was indeed in the CSS. I used JCubic's modified jquery.terminal.css file on http://terminal.jcubic.pl/android.html and that has solved the issues I was having.\n. ",
    "gpetrov": "Was there a solution to this issue?\nI'm using an older embedded chrome browser and cannot type anything in jquery terminal.\nwhen running:  http://terminal.jcubic.pl/test.php\ni get:\nkeydown\nkeyup\nno keypress\nI see in my user agent string AppleWebKit/533.19.4 = so it is pretty old but unfortunately I'm stuck with it and I really want to use the jQuery Terminal in there as well!\na solution will be greatly appreciated.\n. works indeed! thanks!!\nAny chance to implement this on the main branch as well?\n. a busy indicator will be very much appreciated. Its is very often needed and should be easily bound indeed with the term.pause and resume commands.\n. yes such events will be great :+1: \n. ",
    "lshaf": "still not fix on mine.\nI'm using android 6.0.1 with chrome v 54.0.2840.68 and with default keyboard.\nsomehow it's work but my text doesn't appear on terminal screen with fullscreen mode.\nyou can try it out here https://biol.be/qrpoc\n. @jcubic waw, you have old phone \ud83d\ude03 .\nmaybe that's your mobile phone connection problem?\nIt's just weird, your laptop can access it but android phone can't?\n. ohh and I remember 1 more thing.\nI've visit your site http://terminal.jcubic.pl/ using my phone and however, when I tap on demo terminal, it throw me to comment terminal. it just keep focused on comment section.\n. @jcubic big thanks, it works \ud83d\ude38 .\n. ",
    "pwmarcz": "works in IE9 standards mode, but still acts the same in quirks mode...\n. Not me, IE wants to use it when it doesn't like my page. Not strictly a problem for me because I can add a doctype declaration and IE will use standard mode for the page. \nJust saying in case you want to cover that.\n. Or .charAt(0)... I ran into this just recently myself.\n. ",
    "hkirsman": "Niice! We're sending commands to php's exec with ajax and got problem when y or n needed to be inserted. So this is one way for doing this.\nI'm thinking, can this be made even more universal? What if new command is created on server named foo1? I just know that sometimes I'm asked \"Do you really want to continue?\" So I could check if this questions is in the response, fire term.push somewhere and make another ajax call with the -y allready in the command?\n. Great! Thanks for comprehensive and quick response! I think I have enough information now to try it out. I'm working on Drush web console module for Drupal. Hope it will work.\n. ",
    "ckcollab": "It seems like local storage isnt working at all maybe, new error on this line just a few down (data is null)\ndata: function() {\n                return bc.data();\n            },\n. ",
    "LastDragon-ru": "Thanks. But in my case was better to creating a nested terminal and enter user/pass in it (the standard method stores the token in local storage and re-auth is not required at page reload :().\n. ",
    "poetawd": "It doesnt write anything to the console in chrome.... not until all ajax requests are complete..... it works fine in FIREFOX\n. ",
    "cjauvin": "Or it could be also something like http://bla.com{my link}, instead of using brackets.\n. Right! Sorry about that..\nOn 8 February 2013 08:38, Jakub Jankiewicz notifications@github.com wrote:\n\nBut you will not be able to use curly braces inside hash the same as with\nbrakets. http://bla.com/#{\"foo\":\"bar\"}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/jcubic/jquery.terminal/pull/65#issuecomment-13290446.\n. Thanks for this update, it is very useful. It seems as there is not much activity here (anymore?) as I've submitted a minor PR idea a while ago, and never heard about it.\n\nI currently have a problem with a subtle difference in the way that Chrome and FF handle keypress/keydown events, and it seems I won't be able to find the answer by studying the code: do you think you could help?\n. Cloudcmd seems like a really cool project!\nDon't get me wrong: I am not suggesting that there's any problem with jQuery.Terminal: just something I don't understand. As it would be hard to explain using my project's code, I have created this jsFiddle, which shows the problem. Basically, in this example, Chrome allows the blocking of the \"a\" key, while Firefox does not. I don't know which one has the \"right\" behavior (although I suspect that this FF bug is related to the problem), but I know that I rely on Chrome's behavior in my game. If you could help me solve this, it would be much appreciated!\n. @jcubic Yes, that's right. And I don't know which is the right behavior (in terms of standard). I guess it would be hard to modify Terminal to work around that bug.. In my application though, it's actually causing me trouble in a very specific case, and there would be an easy workaround (maybe you can help): is there a way to clear the content of the span lying just between the prompt and cursor spans, after a key event? I tried setting an id on it and clearing it the usual way ($(span).html(''), $(span).val(''), etc) but for some reason, it doesn't work. Perhaps there is something in the API to do something like that? I tried to look into the code, but at 2720 lines, the jquery.terminal source is not the easiest thing in the world to find its way around! :-) (Although I'll say it again: it's a beautiful piece of code, doing a complicated job very nicely and smoothly).\n. ",
    "coderaiser": "I'm using jquery.terminal in my project and test it and jquery.terminal in chrome, firefox, opera and see no problem. Whot do you mean?\nI think I could try :). Show me what part of jquery.terminal needs changing.\nAnd why you want change something as I know everything works fine, am I wrong?\nI am using a lot of keydown events and all of them works fine in all browsers.\nActually is addEventListener and if I could not use it jquery's $.bind help me up.\nI saw thet you use $.keypress jquery function, what problems is there?\njquery was created for wiping off browser difference and problems should not be.\n.  I think it could be done with something like this. I did use keypress, not keydown event. Gamebook is interesting project, would be great to see it in action. Unfortunately demo isn't working( https://github.com/cjauvin/gamebook.js/issues/1).\n. ",
    "3ffy": "In fact for my particular needs, it wasn't conveniant to use nested objects, so thanks you so much for this new feature :) !\n. Oh ok, indeed my terminal is attached to the body too, so i will change it from my side then, but i still think it's a bug behaviour as it should be possible to attach it from any dom element (as the body).\nAnyway thanks for the fullscreen div trick. :)\nps : can't find any example with a terminal attached to a full screen div from github or official jquery terminal website, as this behaviour can't be guess, it could be great to notify it somewhere to avoid people to use it in production :')...\n. Yes i would be great if you can :).\nAnd thank you for the example, it could be usefull anyway !\n. ",
    "moritz-wundke": "Ok just got it working. This works for me:\n<script>\njQuery(document).ready(function($) {\n    var id = 1;\n    var terminal = $('.class').terminal(function(command, term) {\n        if (command == 'help') {\n         term.echo(\"Available commands: sub\");\n     } else if (command == 'sub') {\n         term.push(\"server/rpc-script.php\", {\n             greetings: \"Another subscript\",\n             prompt: \"script> \",\n             onBlur: function() {\n                 // the height of the body is only 2 lines initialy\n                 return false;\n             }\n        });\n     } else {\n         term.echo(\"unknow command \" + command);\n     }\n    }, {\n        login: function(user, passwd, finalize) {\n            $.jrpc(\"rpc.php\", id++, \"login\", [user, passwd],\n            function(data) {\n                if (data.result) {\n                    finalize(data.result);\n                } else {\n                    finalize(null);\n                }\n            }, function(xhr, status) {\n                var msg = '[AJAX] ' + status + \n                ' server response: \\n' + xhr.responseText;\n                if (terminal) {\n                    terminal.error(msg);\n                } else {\n                    alert(msg);\n                }\n                callback(null);\n            });\n        },\n    });\n});\n</script>\n. ",
    "eephillip": "I noticed the historySize parameter but I thought that was for user inputs reverse search, etc not echo statements\nI made a fiddle help explain my question.\nhttp://jsfiddle.net/eephillip/dEczJ/\n. Yeah you got it, I would sometimes leave the page up for hours or days, and would see the memory / lag issues you just talked about. Although It works pretty well even up to what appeared to be thousands of lines. Manually issuing a clear command would take care of it, but I thought a FIFO buffer would be a nice feature.\n. I can put a wrap around the echo command but I don't think the api has an event to attach to, but something like this?\n``` javascript\n var bufferCheck = function () {\n     var elLimit = 200,\n         el;\n el = $('#myTerm div.terminal-output').children('div');\n\n if (el.length > elLimit) {\n     $(el).slice(0, el.length - elLimit).remove();\n }\n $('i.domCnt').html($('#myTerm div.terminal-output').children('div').length);\n\n};\n```\nFiddle Updated\nhttp://jsfiddle.net/eephillip/dEczJ/\n. Thanks, can't wait to try it out\n. ",
    "hraban": "thanks man works\n. thanks man works great\n. thanks it works\n. hi i force updated the commit because I accidentally pushed the wrong changes the current version is what I use\n. nice. great idea on the options object.\n. ",
    "sntran": "\nAnd prompt is always at the end not matter how long it take to execute echo function. The only case for the prompt to be before greetings is to press enter that will echo prompt and command.\n\nYes, but I would like the greetings to be on the very top. Assuming that I have the onInit to run for 3s, the prompt still appears and if I type something and press enter, and then the echo line appears after that.\nIt would be nice that I could prevent the prompt to appear until a greetings function is done. The idea is that I would like to acquire the greeting from the server (to get the shell version, the current line number on the server, etc...)\n. Using pause/resume will do. Thanks!\n. ",
    "metalivedev": "Hi! I've put up a sample of the mixed HTML output here:\nhttp://scratchmonkey.net/jqterminal/\nCould you take a screenshot of the line wrapping problem? Maybe I can fix it.\nRight now my samples behave as I would expect.\n. If jquery.terminal uses a single configuration option like escape: false then all the text would not be formatted, right? I don't want t lose that! Keeping the \"marker\" paradigm allows all three kinds of output to mingle together: plain text, ansi, and HTML.\nRight now the terminal has one output function, terminal.echo() that can emit two types of output: plain text and ansi-formatted text. The difference between the two modes is an escape sequence in the text stream, [[. The purpose of the <!--HTMLRAW--> token is to act like [[, an invisible marker that tells terminal.echo() how to handle this particular line (in the HTML case I am cheating and applying the formatting to the whole line, where you have carefully parsed within the line for ansi formatting).\nThis <!--HTMLRAW--> marker gets preserved in the lines array so that this line gets processed properly even when the terminal is redrawn.\nI can simplify the interface a bit though. What if instead of setting settings.htmlRaw: true, the user calls a method setHtmlMarker(String). If this is not set, then jquery.terminal formats the line as normal, escaping entities, re-expressing ansi as html, etc. If the user does set this value, then any line starting with that Marker gets treated as pre-formatted HTML and no parsing or formatting is done by jquery.terminal. I would add one more method, getHtmlMarker() so that the user can retrieve the current marker value. It would then also be possible for a user to setHtmlMarker(undefined) to disable HTML formatting, if the output isn't trusted or they want to inspect it.\n. If that raw option will persist and survive window resizes and redrawings, then I think it would work for me. Could you make the change in a branch? I will be happy to try it out and modify my sample.\n. ",
    "luin": "+1. It would be awesome to support input method.\n. ",
    "kid1412z": "+1 And has anyone solved this problem? \n. Check if I'm doing it right. \n. in this case :  if user input is  \u201c\u4f60\u597d\u4e16\u754c\u201d, then press backspace 1 time, the display will be '\u4f60\u597d\u4e16', when user append \u2018\u754c\u2019 again, the display while become \u201c\u4f60\u597d\u4e16\u754c\u754c\u201d so, we also need to delete the last one stored in the clipboard.\n. Yeah, it should be more graceful,when I was stucked I just debug into it and find the dirty but easy way out, did not pay attention to many other code around it. I d like to help if you want.\n. done, it work well on my mac chrome. But I did not test it on android. Thanks for your hint and thanks for your work of this project!\n. ",
    "brennana": "I have compiled a test page with non-minified javascript for use in debugging. It can be downloaded here.\nActually, when I type something in terminal, enter it in, and then switch to another tab: the page freezes, requiring it to be killed.\n. Ah yes that would be nice. Either way, thanks for fixing the bug! Your plugin is awesome :D\n. Ah I see, sorry. Thanks for the tip.\n. ",
    "eartsar": "After this change, colors don't seem to render at all. The escape sequences were output as normal text, and no colors were applied.\n\n. I did test on the latest version (0.6.4) and it doesn't seem to work. I tried both the minified version, and the regular version.\nThe following string was used to test:\n\"\\033[1;33mHello, world!\\033[0m\"\nWhat gets displayed is:\n\u001b[1;33mHello, world!\u001b[0m\nHere is what it looks like in 0.6.3:\n\nAnd here in 0.6.4:\n\n. Looks great. Thanks!\n. ",
    "ronalino": "No lets say at php side \nim calling some system command like\nsystem(\"ping -n 10 www.google.com\");\ni can flush the data and show in realtime just with php (that means i dont have to wait for php to complete complete pings 10 times i can see each ping line in realtime)\ni want to implement this feature in Terminal is that possible\nnot just a system command \nlets say if i want to run some perl or python script which gives me some real time data i want to show as it is in the terminal i would love this feature :) \nThanks for responding \n. No i am not using JSON-RPC for passing path to terminal \nI checked that solution already couldnt implement the same with Terminal wouldn't work\nsorry for late reply was out\n. ",
    "sajkog": "my output comes from websocket connection and is output of real cmd shell.\nI added some parsing to get last line, removed it from div and set as prompt ... not ideal imo\n. I can't do that but thanks for pointing out about last lines - I fixed it by stripping prompt before I do echo\n. also - maybe Im wrong - but it seems like its resized on every echo ?\nbtw I was struggling to properly overwrite resize func (its funnily wrapped along other terminal funcs)\nso I added redrawOnResize: false to terminal defaults and then:\n// -----------------------------------------------------------------------\n            // :: Recalculate and redraw averything\n            // -----------------------------------------------------------------------\n            resize: function(width, height) {\n                if ( settings.redrawOnResize ) {\n                    if (width && height) {\n                        self.width(width);\n                        self.height(height);\n                    }\n                    var width = self.width();\n                    var height = self.height();\n                    num_chars = get_num_chars(self);\n                    command_line.resize(num_chars);\n                    var o = output.empty().detach();\n                    $.each(lines, function(i, line) {\n                        draw_line.apply(null, line);\n                    });\n                    command_line.before(o);\n                    scroll_to_bottom();\n                    if (typeof settings.onResize === 'function' &&\n                        (old_height !== height || old_width !== width)) {\n                        settings.onResize(self);\n                    }\n                    if (old_height !== height || old_width !== width) {\n                        old_height = height;\n                        old_width = width;\n                    }\n                }\n                else {\n                    scroll_to_bottom();\n                }\n                return self;\n            }\n. but if I'm happy to have vertical scrollbar then its still gonna unnnecessarily redraw, no ?\n. i have it wrapped in my own div and I resize that to fit window height - toolbar height, therefore terminal resizes to fit that.\nBTW - is there anyway to get rid of width calculations completely and just have 100% wide divs ?\nI totally dont get why there is need for those redrawings, surely css could handle it ?\n. ",
    "ZaDarkSide": "Tag a new release so people don't get the latest release 0.7.4 broken like I did. Thank you!\n. ",
    "tiry": "Ok, I initially made the change against 1.6.3 ... Sorry.\nTiry\nLe 1 oct. 2013 19:39, \"Jakub Jankiewicz\" notifications@github.com a\n\u00e9crit :\n\nThere is already something like this in. It's in the code you removed\ncheck this http://jsfiddle.net/K6WTu/1/ type h and tab.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/jcubic/jquery.terminal/pull/123#issuecomment-25471611\n.\n. \n",
    "hcchengithub": "Thanks for the answer. It helped enough.\nSo I'll write a print(string) function that buffers the input string and echo() only when \\n arrived. \n. Sorry to have spent your time.\nI thought shell to a sub-terminal would pause the original process while actually the following program after term.push() is still running. I need to adapt this behavior first. \nThank you very much !!\n. Woooops! sorry for my mistake. Your first sample code really works fine.\nIt's very enlightening.. Thank you so mush!\nOn Thu, Oct 10, 2013 at 7:39 PM, Jakub Jankiewicz\nnotifications@github.comwrote:\n\nThis is not related to terminal, your sleep function freeze the browser\nthat have only one thread.\nThis code also don't show up immediately\nvar pre = $('pre');for (var i=0; i<10; i++) {\n    pre.append(i + '\\n');\n    sleep(500); }function sleep(ms) { // just for the test\n    var startTime = new Date().getTime();\n    while(new Date().getTime() < (startTime + ms));}\nDEMO http://jsfiddle.net/AheLx/\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/jcubic/jquery.terminal/issues/127#issuecomment-26046445\n.\n\n\nJust undo it!\n\u9673\u539a\u6210\n\u6211\u8a8d\u70ba Android \u4e0a\u6700\u597d\u7684\u624b\u5beb\u8edf\u9ad4\u662f http://www.fiistudio.com/index_tw.jsp\n\u53ea\u5dee\u4e2d\u6587\u624b\u5beb\uff0c\u4e0d\u8ad6\u96d9\u683c\u6216\u7d93\u5178\uff0c\u7f3a\u300c\u4e0b\u53c3\u8003\u7dda\u300d\u6bd4\u8f03\u53ef\u60dc\u3002\n\n. ",
    "Laura-Murphy-Aridhia": "Thanks for the quick response!\nI'm able to reproduce similar in the demo terminal in Chrome:\ntype in a line that contains a very long line of continuous text such as:\na = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa';\nbut don't hit enter, the continuous line of text does not wrap:\n\nAfter enter is hit, the text appears wrapped and complete as expected:\n\nIf you now press the up arrow to retrieve the line from history, it is displayed not wrapped.  Hitting the backspace key to edit this line of text does not work:\n\nIf you press the <- arrow key to attempt to edit the line, it types the letter 'a' rather than navigating back through the line of text as you would expect:\n\nWe are using version 1.7.3 in our application so it may be that text 'jumping down' is fixed in the latest version, however the issues editing in these examples still seem to be present.\n. Unfortunately adding\nonInit: function(term) {\n    term.resize();\n}\nto the terminal options does not make any difference for me.\n. It wraps when I resize to below a certain size but not just on the resize event.\nFrom: Jakub Jankiewicz notifications@github.com<mailto:notifications@github.com>\nReply-To: \"jcubic/jquery.terminal\" reply@reply.github.com<mailto:reply@reply.github.com>\nDate: Wednesday, 9 October 2013 16:59\nTo: \"jcubic/jquery.terminal\" jquery.terminal@noreply.github.com<mailto:jquery.terminal@noreply.github.com>\nCc: Laura laura.murphy@aridhia.com<mailto:laura.murphy@aridhia.com>\nSubject: Re: [jquery.terminal] Long lines of text not wrapping properly and not formatting correctly when backspace is pressed. (#126)\nDoes it work when you resize the window? You can also try $('...').terminal(...).resize();.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/jcubic/jquery.terminal/issues/126#issuecomment-25983305.\nThis email has been sent from Aridhia Informatics Ltd a company registered in Scotland number SC324508 and having its registered office at 19 Blythswood Square, Glasgow, G2 4BG. The information in this email is confidential and may be legally privileged. It is intended solely for the addressee. Access to this email by anyone else is unauthorised. If you are not the intended recipient, any disclosure, copying, distribution or any action taken or omitted to be taken in reliance on it, is prohibited and may be unlawful. When addressed to our clients any opinions or advice contained in this email are subject to the terms and conditions expressed in any governing Aridhia Informatics Ltd client agreement. Whilst all reasonable care has been taken to avoid the transmission of viruses, it is the responsibility of the recipient to ensure the onward transmission, opening or use of this message and any attachments will not adversely affect its systems or data. No responsibility is accepted by Aridhia Informatics Ltd in this regard and the recipient should carry out such virus and other checks as it considers appropriate. You can contact us at info@aridhia.com\n. ",
    "dylenbrandon": "Ahh I see now. Thank you for your response. It would be awesome if you could add this information to the API. It would probably be of grave help to others. Thank you much!\n. Strange, It's working for me.\n. ",
    "olofsen": "At a prompt, type for example 'A (with Enter)' and 'B (with Enter)'.\nNext use 'Arrow up' - you will get 'B'.\nNext use 'Arrow down' - I still have the 'B', which does not occur with histories I'm used to.\nDo you also have the 'B' or is the command empty?\n. ",
    "nbertin": "Here is the result (hope this can help) !\n\n[\"\", -3] jquery.terminal-0.7.8.patch.js:401\nError\n    at Error ()\n    at str_parts (http://localhost:8000/libs/jquery.terminal-0.7.8.patch.js:402:25)\n    at get_splited_command_line (http://localhost:8000/libs/jquery.terminal-0.7.8.patch.js:730:35)\n    at http://localhost:8000/libs/jquery.terminal-0.7.8.patch.js:832:33\n    at $.extend.resize (http://localhost:8000/libs/jquery.terminal-0.7.8.patch.js:1331:17)\n    at http://localhost:8000/libs/jquery.terminal-0.7.8.patch.js:3675:34\n    at make_interpreter (http://localhost:8000/libs/jquery.terminal-0.7.8.patch.js:2372:17)\n    at $.fn.terminal (http://localhost:8000/libs/jquery.terminal-0.7.8.patch.js:3622:17)\n    at http://localhost:8000/js/app/outp.js:53:30\n    at http://localhost:8000/libs/underscore-min.js:5:7428 jquery.terminal-0.7.8.patch.js:402\nUncaught length negative jquery.terminal-0.7.8.patch.js:403\nstr_parts jquery.terminal-0.7.8.patch.js:403\nget_splited_command_line jquery.terminal-0.7.8.patch.js:730\n(anonymous function) jquery.terminal-0.7.8.patch.js:832\n$.extend.resize jquery.terminal-0.7.8.patch.js:1331\n(anonymous function) jquery.terminal-0.7.8.patch.js:3675\nmake_interpreter jquery.terminal-0.7.8.patch.js:2372\n$.fn.terminal jquery.terminal-0.7.8.patch.js:3622\n(anonymous function) outp.js:53\n(anonymous function)\n\n. Same context in my case (backbone, codemirror, jqterminal and tabs) !\nI will check also if I can provide a zip (my app is quite small) or if you\nprefer a live link.\n. @wetheoretical \nNo shim parameter for terminal plugin in my boot.js file (only the path to the plugin + mousewheel)\n\nrequire.config({\n  paths: {\n    ...\n    jquery        : \"../libs/jquery-1.10.2.min\",\n    terminal      : \"../libs/jquery.terminal-0.7.12.min\",\n    mousewheel    : \"../libs/jquery.mousewheel\",\n    ...\n  }\n  shim: {\n    underscore: {\n      exports: \"_\"\n    },\n    string: {\n      deps: [\"underscore\"]\n    },\n    backbone: {\n      deps: [\"underscore\", \"jquery\"],\n      exports: \"Backbone\"\n    }\n    ...\n  }\n\nThen, where the plugin is used:\n\ndefine([\n  \"jquery\"    ,\n  \"underscore\",\n  \"backbone\"  ,\n  \"terminal\"  ,\n  \"mousewheel\"\n  ...\n], function($, _, Backbone, terminal, mousewheel,...) {\n\nHope this can help !\n. ",
    "wetheoretical": "Hi there. Curious as to how you all were able to integrate the terminal plugin into the Backbone app. I have noticed that attempting to use the \"shim\" parameter through the following ( terminal: { deps: [\"jquery\"], exports: \"jQuery.fn.terminal\" } ) was unsuccessful for me. Any guidance would be excellent!\n. ",
    "mreider": "I was a little too noobish. Apologies and thanks for your help. I just modified what was returned if there's a valid AJAX response to that the user can make sense of the world (updated in original stackoverflow question).\n. ",
    "GerHobbelt": "Backend fix (PHP) provided here: https://github.com/GerHobbelt/jquery.terminal/commit/515e4cf8ea289ef960fce3edc16086cbf639534c\n. ",
    "mkschreder": "You could do something like this: \npaste: function(cmd){\n    var lines = cmd.split(\"\\n\"); \n    var buffer = \"\"; \n    var tq = 0; \n    var self = this; \n    lines.map(function(line){\n        var m = line.match(/\"/g); \n        var mq = (m||[]).length % 2; \n        if(buffer == \"\" && mq == 0){\n            // if no buffer and even number of quotes then execute right away\n            self.exec(line); \n            buffer = \"\"; \n            tq = 0; \n        } else if(buffer != \"\" && ((tq + mq) % 2) == 0){\n            // if buffer and total quotes is even then close as well\n            self.exec(buffer + line); \n            buffer = \"\";\n            tq = 0; \n        } else {\n            buffer += line; \n            self.insert(line); \n            tq = (mq+tq)%2; \n        }\n    }); \n}\n. Gonna be using your console as siteboot server drop down console for now.. quake style. \n\n. My code supports new lines between quotes. \n. ",
    "gravypod": "I fixed it and forgot my comment here, it was only a fault of my own. Your terminal works great! Thanks for your contribution to the opensource world!\n. ",
    "wintercounter": "I'll check it, thank you!\n2014/1/2 Jakub Jankiewicz notifications@github.com\n\nIf you want to add top like command, then first you need to export all the\nstuff that was print to terminal (using export_view method) then you need\nto run in a timer (setTimeout) clear and echo the stuff you want to display.\nCheck starwars http://terminal.jcubic.pl/examples.php#starwars or lesshttp://terminal.jcubic.pl/examples.php#lessexample\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/jcubic/jquery.terminal/issues/139#issuecomment-31443592\n.\n. \n",
    "rdebath": "Currently when you add a string to the terminal with 'term.echo' it seem to put each call into it's own div, effectively adding a newline on the end of every echo. So the first part would be another option to be added to 'term.echo' to not add the newline on the end, that way the next 'term.echo' will append to this one (Like the difference between the C functions fputs and puts). \nBut I don't think this would be enough, because the line editor also seems to create it's own div for the 'prompt' and the text it's entering which also simulates a newline between the main text and the \"input section\". So this would also need to be altered so that it is actually part of the terminal area, not a distinct zone below it. That way it's cursor area and other material it can be to the right of the text that's been printed with 'term.echo' and is not forced to be below it.\nThe aim is to have it able to work like the old glass teletypes properly. Not like a 'curses' chat client.\nOf course, I'd probably be asking for ANSI cursor motion after that ... but that's another issue altogether :-)\n. Yes, that's what I though I remembered.\nOkay, I suppose that means I'll have to go have a look at web workers.\nThat should let me have blocking.\n. ",
    "krainboltgreene": "An \"append\" like echo would allow for really easy \"old school typewriter writing it out character by character\" animations.\n. Oh man, I must have totally missed it sorry. I thought I looked at all the API documented :(\nI'll check it out, thanks!\n. ",
    "mattpap": "OK. Done (see #145).\n. ",
    "drewbaker": "This is great, thanks!\nI put together a basic example for anyone looking at this in the future. You can see it here: \nhttp://labs.funkhausdesign.com/examples/terminal/cmd_controlled_terminal.html\n. Yes, I will keep it there. I have a lot of different jQuery examples on there. \nMy concern is if you remove the evec force command in the future, it will be outdated.\n. So what's the updated code to achieve the same results as above? I'll update my example.\n. OK, I updated my example with the new code. Thanks!\n. Hey Jakob,\nSorry to lag on this! I built you a demo of PJAX working with terminal, but it clears when you resize the window.\nhttp://labs.funkhausdesign.com/examples/terminal/terminal_pjax.html\nPJAX is this:\nhttps://github.com/defunkt/jquery-pjax\nIt's a great way of using HTML5 pushState tech to have no page loads, but have deep linkable URL's.\nIf you send me your email address, I can show you the development site that I have this tech working on for one of our clients. It's a super advanced version of Terminal using PJAX. My email is drew@funkhaus.us.\nThanks!\n. That second historyState code is great. I can see that being very useful. I will look into using that. Are you going to bake that into the main Terminal code, or is this just for my use case?\nBut is it possible to somehow disable Terminal from clearing all content on resize? Even just point me to the right place in the code, so I can hack it for my needs right now.\nI agree that PJAX isn't great, I do wish it had proper callbacks and could return data, rather than forcing it to go to a selector.\nThanks!\n. Hey Jakob,\nAny ideas on when you might release 0.9? I want to start using this History feature on our project.\nThanks!\nDrew\n. Hey Jakob,\nI've been using this, and it's great! Quick question:\nSay I echo some HTML via AJAX like you have above. Let's say its a grid of thumbnail images, and set the state via your new feature.\nNext, I click on the thumbnail, and via AJAX I replace that thumbnail with a video. How do you recommend I deal with that state change? I can't echo out  a new command, because I want that video to replace the image, not echo onto a new line.\nCurrently I'm just setting that history.pushState() manually on click, but I was wondering if I could do it smarter through this new Terminal feature you added?\nThanks again! This is a great plugin!\n. I don't currently use import/export. I didn't think that would let me dynamically change part of a page?\n. Thanks! It would be great to see an example of export, change content, then import it back into view.\n. I've been playing with this today.\nI've made it so that, on click of an image, I export the view, and then I can use the HTML and edit it.\nBut I struggle to then import it back to the correct line. The image clicked might be 3 lines previous.\n. If I use save_state() like you have it on the last line above, what URL does it save in the pushState?\n. If I console.log(key, object) before the for loop, I get this:\nOn load:\nundefined Object { flush=true, raw=true, finalize=function()}\nOn echo of HTML:\nundefined <div class=\"caroufredsel_wrapper\">\n. Hey Jakob, I think you might be right. I'm going to back out all my terminal code and just use the CMD tool.\n. I was echo'ing some HTML, then trying to run this plugin after the echo was finished: http://docs.dev7studios.com/jquery-plugins/caroufredsel\nSo the code would look like this:\nvar html = '<div class=\"gallery\">Gallery slides in here</div>';\nterm.echo(html);\njQuery('.gallery').carouFredSel();\n. I just backed out all my Terminal code, and am just using CMD, and then manually appending the new content. I still get the crash, I guess because CMD must use that same function.\n. It no longer has the recursion error, but that plugin now errors out with \"TypeError: b.options is undefined\". So perhaps there is still a conflict, or that plugin is bad.\n. Hey Jakob,\nI'm now not even using echo anymore. I'm just using CMD and then have my own append function.\nThe error comes out of CarouFredSel, here:\nTypeError: obj.options is undefined\nhttp://thedirectorsbureau.com.s98843.gridserver.com/wordpress/wp-content/themes/directorsbureau/js/jquery.carouFredSel-6.2.1.js\nLine 3287\nThat line is this:\nif (!is_boolean(obj.options.triggerOnTouchEnd))\n. I got it to work now, this works:\njQuery('.gallery').carouFredSel();\nBut this causes an error:\njQuery('.gallery').carouFredSel({\n            swipe: true\n        });\nSo it must be something to do with the swipe function of the gallery conflicting with Terminal in some way.\n. Yeah, I'm just using CMD.\n. Hey Jakob,\nThose changes make sense, I just didn't see it documented anywhere so I was confused. \nThanks!\n-Drew\n. ",
    "mfeckie": "Apologies for my poorly worded question!  I didn't think it would work too well on stackoverflow and thought that the author of the tool may have a simple answer.\nI've posted the question to stackoverflow in a much fuller way. http://stackoverflow.com/questions/22650025/jquery-terminal-ember-qunit-automated-testing-issue\nI'd still love some help.  I think that jquery-terminal is awesome!\n. Thanks :smile:\n. ",
    "gfwilliams": "Just to half-answer my own request, you need to supply stdin and stdout when you create the emscripten module.\nvar Module = {\n// ...\n      stdout : (function() {\n                 var line = \"\";\n                 return function (val) {\n                    line += String.fromCharCode(val);    \n                    if (val==10) { console.log(line); line=\"\"; }\n                 };\n                })(), \n      stdin : (function () {\n        var t = \"Hello\\n\";\n        return function() {\n          var c = t.charCodeAt(0);\n          t = t.substr(1);\n          return c;\n        };\n      })(),\n// ...\n}\nIt should be pretty easy to pipe that into the terminal.\n. Sorry, it's because it used while(1) around the loopback. It's now changed to do it once.\n. Thanks. It does look like unless you modify the Emscripten'd program (to remove the event loop) you can't really do this...\nSorry - shall I close this?\n. ",
    "igolka6662": "Thanks, it works.\nPlease answer me a following questions.\nHow can I close terminal in some cases. For example, I typed command 'close', parsed it and what should I do, to close window?\n. Thank you.\nBut I have one more problem with login. Before opening console I am doing ajax call add try to get connection, if it will be successfully I am setting flag isAlreadyConnected=true, but if it is fail, I am setting isAlreadyConnected=false. If flag=true, I don't need to do login (because I already have connection), else I should type login and password, but my code sometimes works incorrectly (without connection, then flag is false I see greetings and will get exception). Below the part of my code:\n``` javascipt\nvar isAlreadyConnected = true; //or false\n.terminal(function(command, term) {\n   //ajax call\n}, {\n    exit: false,\n    onBeforeLogin: function(terminal){\n                                if (isAlreadyConnected){\n                                    terminal.login = true_func;\n                                }\n        },\n        login: cli_auth,\n        onInit: function(terminal) {\n                                terminal.echo('Welcome\\n');\n        },\n        ...\n});\nfunction cli_auth(name, password, callback){\n .... \n}\nfunction true_func(){\n    return true;\n}\n```\nPlease, tell me, how can I do it better or what is incorrect in my code? \n. I got my inner exceptions, it does not apply for jquery terminal.\nI didn't have enough time, and solve the problem with login as following:\njavascript\nif (isAlreadyConnected){\n     .terminal(function(command, term) {\n      },\n      ...\n      //instance of terminal without login function\n}\nelse{\n     .terminal(function(command, term) {\n      },\n      login: cli_auth,\n      onInit: function(terminal) {\n                                    greeting(terminal);\n       },\n       ...\n}\nit works normally, but in IE8, I have the following problem, if isAlreadyConnected = false, sometimes login function does not work and I see the greetings at once. In other browsers it works normally.\nWhy can it happen?\nP.S. I know it is bad decision, and I'll solve that in another way, when I'll have more time.\n. Unfortunately, I can't provide a project source code, but I wrote the simple demo in the code below:\n``` javascript\nvar CLI_TERMINAL;\nvar isAlreadyConnected = false;\nfunction runcli(){\nif (isAlreadyConnected){\n\n    jQuery('#term').dterm(function(command, term) {\n\n            CLI_TERMINAL = term;\n\n            term.set_prompt('> ');      \n            term.pause();\n            if (command){\n                term.echo(command);\n                term.resume();  \n            }\n                        }, {\n                            onInit: function(terminal) {\n                                greeting(terminal);\n                                CLI_TERMINAL = term;\n                            },\n                            token : true,\n                            width: 480,\n                            height: 320,\n                            greetings: false,\n                            exit: false,\n                            onExit: false,\n                            autoOpen: false,\n                            name: 'Term',\n                            prompt: '> '\n                        }\n            ).dialog('open');\n    }\n    else{\n        jQuery('#term').dterm(function(command, term) {\n\n            CLI_TERMINAL = term;\n\n            term.set_prompt('> ');      \n            term.pause();\n            if (command){\n                term.echo(command);\n                term.resume();  \n            }\n                        }, {\n                            login: cli_auth,\n                            onInit: function(terminal) {\n                                greeting(terminal);\n                                CLI_TERMINAL = term;\n                            },\n                            token : true,\n                            width: 480,\n                            height: 320,\n                            greetings: false,\n                            exit: false,\n                            onExit: false,\n                            autoOpen: false,\n                            name: 'Term',\n                            prompt: '> '\n                        }\n            ).dialog('open');\n    }\n\n}\nfunction cli_auth(name, password, callback){\n    if (name == 'demo' && password == 'secret') {\n        callback('SECRET TOKEN');\n    } else {\n        callback(null);\n    }\n}\nfunction callback(data){\n    if (!data){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\nfunction greeting(terminal) {\n    terminal.echo('Welcome to Terminal\\n');\n}\n```\nVariable isAlreadyConnected always false, but in IE8 and IE9 I can reproduce that behavior, firstly I should login, after I wrote some commands, After refreshed page and always terminal works with second condition, but without login. I closed browser, but I can't see working login function. Only in IE.\n. I had have a problem with jsfiddle and code didn't run.\nPlease see my demo project, using link: http://wikisend.com/download/541046/testCli.7z\nIt's safe link.\nTest case:\nRun in IE. Login as demo/secret, run some commands. Again run the terminal, and you see greetings, but you should see login function. (In my project code, after every exit event, I used clear(), logout() method, but it does not help in ie).\n. Thank you, for answers.\nI'am using exit: true instead of exit: false, and terminal is works fine.\n. ",
    "johanjordaan": "PS: I did the change on the devel branch. I hope this was the correct location.\n. PPS: Here is an example of it's usage:\n$('body').terminal (command, term)->\n        if (command != '')\n            $.post '/api',{cmd:command,auth_token:term.token(),username:term.login_name() },(resp)->\n                if resp.code == 0\n                    term.set_token(resp.auth_token)\n                    for text in resp.text\n                        term.echo text\n                else if resp.code == -1\n                    term.error resp.text  \n                    term.logout() \n                else if resp.code == -2\n                    term.error resp.text\n        return null\n    ,   \n        greetings: 'interface v0.1'\n        name: 'main_terminal'\n        height: 200\n        prompt: 'tm> '\n        login:auth\n. Sorry for the late reply. I have been busy with work :(. I'll add the local paramter and the get_token method. I didn't add the get_token method because there is a token method/parameter that doe the same thing.\n. I have updated the methods and tested in my project. Shout if you need anything more done ...\n. Hi\nHave a look at my branch : git@github.com:Skrag001/jquery.terminal.git - the \"grunt-add\" branch.\nI have added quite a bit of code and would like some comments from you before I continue down this track.\nRegards\nJohan\n. ",
    "prashanthellina": "@jcubic I was using version 0.6.x. Upgrading to the latest version fixed the issue. Thanks! BTW, I love this project. I've used it in multiple of my projects. You might be interested in seeing how it is used:\nhttps://github.com/prashanthellina/funcserver\nhttps://github.com/prashanthellina/rocksdbserver\nhttps://github.com/prashanthellina/vwserver\n. ",
    "dcolens": "Yes I thought so, it popped up while grepping a bunch of files, I'm happy to test as needed.\nAnd thanks for the awesome work btw\nDid\nOn 06 May 2014, at 11:15, Jakub Jankiewicz notifications@github.com wrote:\n\nProbably because your & look like inside of url. I'll try to fix this in next version that's inside devel branch.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "patovala": "I'm testing now, when I try to type a \" I have to press the   key and the  right after, but nothing is shown in the terminal. There is no way to type any dead key based character including \" ' ` ~. I could work on a patch, may you tell me where to start looking? \n. Sorry I've not had time for doing a deeper research about this, using your terminal the dead keys are not reported at all, it seems that this is more a jquery + a mac os problem. When I hit the \" or \"+SPACE keys on my keyboard, there is no event reported at all. I think the problem goes beyond the way your program captures the keyboard events.\n. oh, using the keydown I get:\nwhich: 222; keyCode: 222; ctrl: false; alt: false; meta: false\nwhich: 16; keyCode: 16; ctrl: false; alt: false; meta: false\nwhich: 16; keyCode: 16; ctrl: false; alt: false; meta: false\n. No really, seems interesting, but the \" key is used to create words like pap\u00e1 in spanish, I use the us-international layout to be able to write that kind of words (also a\u00f1o, or \u00e1rbol). Yes I can use this keys in google docs.\n. ",
    "liniquer": "i try this but not solve the problem\nhave any method calling this function in document.ready\nex:\n\n  $(document).ready(function(){\n     terminal.logout();\n   });\n. Hi thx, a solve with this:\n\n``` javascript\n\n$(document).ready(function(){\n        var terminal = $('body').terminal(function(command, term) {\n        }, {\n            greetings: 'Javascript Interpreter',\n            login: f_login,\n            prompt: '|'\n        });\n\n        if (terminal.token()) {\n            terminal.logout();\n        }\n\n    });\n\n    function f_login(user, password, callback) {\n        if (user == 'demo' && password == 'teste') {\n            callback('SECRET TOKEN');\n        } else {\n            callback(null);\n        }\n    }\n```\n.",
    "Grahack": "I just asked for the repo to fix the other typos.\nHappy hacking!\n. ",
    "ghost": "Hm, My changes works.\n\nYour change will not make difference because scroll_to_bottom() need to be called in echo\n\nscroll_to_bottom() called in flush(), which (that?) called in echo by default.\n. Not works with height in %. With px works.\n. I have the following markup:\n...\n<body>\n<div id=\"posts\"></div>\n<div id=\"term\">Terminal here</div>\n</body>\n...\nSo, i need to set height of #term, but i can not to use %.  I could to set heigth using js, but it not preferred way.\n. >  you need to call resize() method (without arguments it's like refresh)\nNot works.\n\nDo you have a demo?\n\nLooks like this. http://jsfiddle.net/rL98C/\nFull information you can find here.\nAll js and css files are located in the resources/static directory\n. Solution in first post sometimes not works correctly. \nI had reverted back to scroll_object and added the following code to my app:\n$('#term').height($(window).height() - 30);\nI'm not sure, but now it works kind fine. \n. Ok. I think the problem is solved. Thank you.\n. I think the problem in = character\n. Ok. How soon will the next release?\n\nCan I include your site in \"in the wild\" section?\n\nYes, of course.\n. I can to wait a release. Thank you.\n. Thank you for looking at this.\nJust a little bit more context (sorry i've not provided it in the beginning):  i tested this with 0.8.8. I did echo(url, {raw: false}) of a url with parameters and it was broken.\nHere is the url example:\nhttp://test.myhost.com/requestDetails/spawn?typeFilter=t1,t2,t3,t4&nanosecondFilter=10000&data=9c51a787-ecc1-4f1a-bb4b-6b744cead65e-46262&env=test&region=us-east-1\nI will try to migrate to the dev branch and see if the issue is still there.\n. I've tried a few times and cannot figure it out... Perhaps there's a good way to clear history? I tried with cookies but that didn't work\n. Thank you for the acknowledgement of the issue. Yes, I believe that the mechanism for copy, paste, select all, etc. is the same on iOS and Android. \nI have started experimenting with some workarounds using things like the Clipboard API, and keep seeing it mentioned that iOS makes it difficult to programatically access the clipboard for security reasons, though other than things like that it would seem that support for paste in Android should theoretically translate to support in iOS.\nBeing able to paste into the command line would be wonderful. If anything comes from my fiddling with workarounds, I'll report back. . ",
    "tjwudi": "@jcubic A big thank you!\n. ",
    "agordon": "Terrific! works like a charm. Thank you.\n(funny thing: I'm the guy who did the awk in Javascript :)  but that one uses emscripten, and this time I might re-implement it in javascript).\n. ",
    "websecurify": "Hi Jakub,\nUnfortunately we do not have a POC because we have experienced this bug in an application where we use your plugin and it has been fixed. Also, the code for that application is very complex. What we can be certain is that $.fn.width returns a negative value which messes up the whole thing. Also you are correct, it is probably related to the fact that we hide the console just like your tilda demo.\n. ",
    "isbadawi": "Hm, actually it looks like it happens in my fiddle because I forgot to close the div -- it works fine if you close it. I'm having trouble making a small reproducing example, but the problem is still happening. I guess it might be a bug in my application though -- will report back.\n. My code is in this repo: https://github.com/Sable/mclab-ide but it's a bit involved to run. I have a toy instance running at http://badawi.io:5000. If you go e.g. here: http://badawi.io:5000/project/fisher-price-my-first-project/, focus on the terminal, then right click and try to rename one of the files in the sidebar, the modal will pop up but the terminal will steal the keystrokes.\nThe jquery.terminal related bits are here:\n- knockoutjs binding handler\n- use of the binding\n- command callback\n. Thanks for taking the time to look into this!\nThe contextmenu event doesn't seem to fire on the sidebar, I guess because I'm using this bootstrap contextmenu library which does its own thing. I was able to fix it by attaching the handler you show to its version of the event (called show.bs.context).\n. That also works -- but I use a few different context menus, so rather than repeat that I put the code in the binding handler so it'll apply to all context menus.\nThanks again for looking into this!\n. ",
    "davidxia": "@jcubic great thanks!\n. ",
    "Peksa": "Doh. Normal HTML entity encoding works.\nLike this, if anyone else is wondering: http://jsfiddle.net/dexuf0qt/2/\n. ",
    "theoutlander": "I figured the answer and posted on my SO question @ http://stackoverflow.com/questions/26354496/jquery-terminal-custom-tab-completion\n. ",
    "jagwire": "Perfect, updated the fiddle for future reference. http://jsfiddle.net/x8qy3kvk/1/ \nClosing the issue.\n. ",
    "Yatoom": "Hi jcubic, it is indeed a similiar issue. But I got this problem on Linux (I don't know about Windows, but I can test later), both with the US-International with Dead Keys and Alternative US-International layout.\n. I've been working on a solution. It works for Chrome and Firefox now. If you want, I can make a pull-request. But I only tested it on Chrome and Firefox. See here.\n. ",
    "wankbank": "That works \u2014 thank you! :)\nJust out of curiousity, what does the default prompt in jquery.terminal-src.js actually do?\njavascript\n$.terminal.defaults = {\n   prompt: '> ',\nI thought this might be what I had overlooked originally, but changing > to >>> didn't affect it either.\n. ",
    "nologic": "The same is true if I use the \"keydown\" property instead of the \"completion\" function.\n. ",
    "rahmanusta": "That is weird. Why? How will i hide my ssh password??\n. Thats great! Thanks.\n. For example implemented a ssh client. And after connecting to remote OS, i used sudo vim abcd.php. This will open this file in terminal to edit. I wonder is there a standart way to implement in jq termimal?\n. Thanks. I will look them.\n. ",
    "y0ft88": "When I echo this url the formatting is broken (the last characters are not detected as part of the url) \nhttp://localhost:3000/dump/355136053206986-null/%D9%85%D9%84%D9%81%20%D8%AC%D8%AF%D9%8A%D8%AF?u=c6QqgwJzro3BhokNi&t=7vgv_K446-VYqDL7PL2AnQNgQ09uNtmLZVurTaduLbU\n. I'm using the devel version 0.9\n\nhere a screenshot see last characters are not detected as part of the url\n. ",
    "rdejuana": "They might be reversed but they are hard to read.  \nNever mind, I'll just override them locally.\n. ",
    "mm-gmbd": "After I wrote my comment, I experimented with the keydown function option and noticed that it did indeed disable the keyboard, but that was only if I didn't supply a function(command, term) to the first argument of the constructor. I could accomplish what I want this way (except that the cursor still is flashing), but it's a little bit of a workaround for something that could be a nice \"out of the box\" feature\".\nEssentially, I'd like a function that disables all listeners for user input and stops the cursor from blinking (but, I would still be able to trigger an echo, change the prompt, etc programatically from Javascript). If this was something that could be toggled on/off, that would be great.\nThanks for the response!\n. ",
    "samdark": "+1. MIT is much better.\n. ",
    "mickeyvip": "+1\nAs I was pointed out by James Ward (@jamesward):\n\nThe Bower metadata doesn't contain a valid spdx license identifier: \nhttps://github.com/jcubic/jquery.terminal/blob/master/bower.json#L10\n\nAnd as for NPM:\n\nThe NPM metadata in the latest release doesn't contain a repository.url value.\n. \n",
    "zwhitchcox": "Nevermind, I found the escape brackets function. Beautiful. You thought of everything.\n. ",
    "genbod": "You are right.  If I have \"describe CredentialTreasury\", and \"describe Fingerprint\" in the list that is returned from the completion list and I type: \"describe\" and then do tab completion, it will list both entries.  However, if I type \"describe Cred\" and then tab completion it won't list \"describe CredentialTreasury\"  because the entry is set to \"Cred\" not \"describe Cred\".  The solution I have found is to add \"CredentialTreasury\" and \"Fingerprint\" to the list as well.  One other issue I found is that no matter what, tab completion tries to turn my entry into a regex object so I can enter file paths like: \"yolo\\scripts\" etc.  I have to type \"yolo\\scripts\" etc.  Is there any way to disable that?  I don't really need to regex for tab complete especially because when it does tab complete when there are regex pieces it keeps the regex part.  For example: \"describe C\" turns into \"describe CredentialTreasury\".\n. I fixed it by changing my input to use \".\" instead of \"\\\" for directory names.  That way \".\" is not recognized as a reserved regex escape character and now Tab Completion works.  Great plugin!\n. Nice!  I cant wait to try it out.  Incredible plugin \ud83d\ude0a\nSent from my Windows Phone\n\nFrom: Jakub Jankiewiczmailto:notifications@github.com\nSent: \u200e8/\u200e20/\u200e2015 9:57 AM\nTo: jcubic/jquery.terminalmailto:jquery.terminal@noreply.github.com\nCc: genbodmailto:bgodard@outlook.com\nSubject: Re: [jquery.terminal] saving and restoring state of terminal (#208)\nIn devel branch it now save and restore interpreter stack.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/jcubic/jquery.terminal/issues/208#issuecomment-133075493\n. ",
    "hreinhardt": "Unfortunately the commit doesn't fix the issue for me (tested in Opera, Chrome and Firefox).\n. With the commit you added the behaviour slightly changes. The line is now cleared after releasing the 'a'-key. So to reproduce:\n1. Press and hold the 'a'-key\n2. Press and release the SHIFT-key\n3. Release the 'a'-key\n. Great, thanks.\n. ",
    "ZackBotkin": "That would be a good place to start. I'll do my best to break things again and let you know what I come up with. I realize I haven't given you much to go on, other than the quick fix that worked for me.\n. ",
    "jetomit": "I can reproduce this bug on Firefox by pressing F12 while the terminal is focused. Nothing happens (the developer console doesn't open, and there is no visible change in the terminal), but the line saved to local storage contains a \\0 for each occurence of F12 in the input. This breaks the JSON parser.\n. ",
    "samundrak": "Ok ! Thanks for your help :)\n. ",
    "sumy7": "I copy my code to jsfiddle. http://jsfiddle.net/sumy/f7qdrp1y/\n. Thanks a lot. \nI add the css, and clear browser cache, then it works.\n. Thanks for your suggestion. I try this method in my blog, but it didn't work. /(\u3112o\u3112)/~~ \nYou notice that the problem is cause by font-family,  I want to say what I understand.\nIn the function char_size() function, a fake terminal created calcualte the dimention of &nbsp; representing one character. the normal <span> width is 6, but my is 12.\nfont-family from jquery.terminal.css is \ncss\n.terminal, .cmd {\n    font-family: FreeMono, monospace;\n}\nI don't have FreeMono and monospace in my computer. so a default font which have a big &nbsp; would be selected.\nMy solution is using a higher priority selector to make my font-family be selected.\ncss\n.terminal span{\n    font-family: fantasquesansmono !important;\n}\n. ",
    "iamdriz": "@jcubic In the RPC demo if you type exit you leave the login prompt and just get the initial prompt.\nIf you were to create a login command (when the user types login or requests another command) could you then call the login again? As from what I am seeing it just says [AUTH] Access denied (no token). So is the plugin listening for a command called 'login' to prevent that error when no token exists?\n. Also noticed a bug, if you enter the password exit, it then exists the current login prompt and then asks for a login again but uses the asterisk when typing:\n\n. What about this: https://github.com/jcubic/jquery.terminal/issues/216#issuecomment-164161838 is this correct that the plugin overrides the auth error if the command typed is login?\n. @jcubic If you have login option set to true for an interpreter is that all commands typed just return [AUTH] Access denied (no token) (regardless whether they exist in the RPC or not) if you are not authenticated. Shouldn't the plugin pass the command to the server regardless and let the server decide if it requires authentication rather than the authentication being set client side?\n. @jcubic Ah okies so that prevents you from seeing it. I've noticed that you have put the fix in the devel branch but not the master. And the master (at the time of writing) is 12 commits ahead and 165 commits behind, meaning things have been added to both... are you planning on merging these?\n. @jcubic  It's just the one I've downloaded from the main website.\n. @jcubic If I do a var_dump at line 75 where it's used to see what the $object is that is passed to the function I get: string(67) \"{\"jsonrpc\":\"2.0\",\"method\":\"login\",\"params\":[\"demo\",\"demo\"],\"id\":3}\"\nIt's here where it happens:\nfunction get_field($object, $field, $default) {\n    var_dump($object); // see what the object looks like\n  $array = get_object_vars($object);\n  if (isset($array[$field])) {\n    return $array[$field];\n  } else {\n    return $default;\n  }\n}\n. @jcubic Here's an example of it running: http://dev.driz.co.uk/terminal/examples/rpc-demo.html\n. @jcubic Yeah I was using the local version. Fixed now.\n. ",
    "arcadiogarcia": "I was trying with vanilla JS, listening for keydown globally: http://jsfiddle.net/4fp6onvv/7/ , shouldn't that also work?\n. I'm having the issue on Edge/FF/IE on W10, I'll try in Chrome\n. The callback does the job perfectly, thanks for your help!\n. Oh, then why (after pushing once and poping once) do I get a message saying \"You can't exit from the main interpreter\"? The pop works but it seems to try to pop all the way to the bottom though.\n. Oops sorry, I just found the issue, I didn't know the library already implemented Ctrl+D, so I implemented my own on top... causing it to pop twice. \n. ",
    "xloem": "Oh, you're right, it's fixed in git!  Even the master branch works fine.  I was using 0.9.3 release.\n. I'm on master it's working.  master branch was last committed to Thu Jan 21 2016 in 76373c2fdc, 0.9.3 was tagged Thu Dec 24 2015 in 8f7d5e0999\n. Hrm even 0.9.3 tag is working for me.  I'm testing with the tilde example.  Something must be different between the example and my actual site\n. Okay, I was confusing myself.\nCtrl-V seems to be working fine, even on my site.  I must have made a mistake finding it not working.\nPasting with the context menu does not work, even in the devel branch.\n. no, ctrl-v does not work on my site.  i was accidentally testing locally; it works from file:/// but not http://\nmy brain is pretty confused by now\n. no, it works fine\nmy clipboard just became emptied for some reason between loading the pages .\nperhaps my computer has some other issue\n. ",
    "Tomaltach": "Perfect. Thanks :D\n. ",
    "remram44": "I'm also affected by this.\n. I'm using Chrome 49.0.2623.105 on Android 6.0.1 (cyanogenMod 13 on Nexus 5).\nAlso the left and right keys don't move the caret (it stays at the end of the input line).\n. ",
    "dannyxx001": "Sorry, I may make some mistake because I suppose the css file is not up to date by the update time.\nThanks for your response.\n. ",
    "DavidBord": "Chrome\nNope, v0.8.8\n. When upgrading to 0.9.3 marking an expression with a mouse double click does not work from mac on chrome\n. yes\n. ",
    "x-mugen-x": "Works fine on CM 13 (6.0.1) Nexus 5 stock browser and firefox (confirmed) must be a chrome issue.\n. ",
    "jpatrickpark": "I experienced similar issue, but while typing Korean letters on ChromeOS 53.0.2785.103 (64-bit).\nI can type Korean words and press enter to transmit data to jQuery object, and then it will display new prompt without any user input written on it, but when I type some more Korean on the new prompt the data from previous prompt reappears. Same thing happens when I try to delete those Korean words by pressing backspace or Ctrl+u, all the previously written Korean words reappear when I type some more Korean. \nWhen I try to type some English letters after deleting all the Korean letters, the Korean words do not reappear. However, if I type some Korean letters after typing English letters, then the previous Korean letters reappear while the newly-typed English letters are gone.\nCuriously, this problem does not occur on chrome 53.0.2785.124 on Android 5.1.0.\nPossibly encoding of the text could be the issue ...?\n. ",
    "PeterDaveHello": "Thanks!\n. Thanks for your prompt reply, the only difference is .min.js is more commonly used then -min.js, before #237, cdnjs needs to manually minify the css file, the naming follows the more commonly used .min.css, I wonder if it's possible to make the structure consistent, so the users of jquery.terminal on cdnjs don't need to manually change -min to .min or vise versa between versinos, but it's only a disscussion, I'll totally respect your dicision, thanks!\nPS: jquery.terminal on cdnjs: https://cdnjs.com/libraries/jquery.terminal\n. Thanks @jcubic \n. @jcubic I'll manually commit it again, after that, the bot can handle the new versions!\n. You're welcome. \n. ",
    "nyariv": "Perfect. It is now working. But it seems there are a couple of console logs remaining in the code.\n. Thanks.\n. ",
    "arkanovicz": "Nice reactivity!\n. ",
    "beltran": "Thank you very much for your answer. The help function is implemented. This version is no exactly as the on in the page, as for example the \"ls\" command doesn't work without arguments but it's more than enough.\nThanks again.\n. ",
    "JelleRoets": "thx for the quick feedback! that solved my issue.\n. ",
    "jayendra13": "Thanks I was searching exact the same thing!!\n. ok, thanks for your feedback :smile: \nI yet have two more related questions, you might able to answer them.\n1)\njavascript\nterm.set_prompt(' ');\nthis thing gives me error, and tells that prompt should be either string or function. In case of multiline matlab command I want that empty string. Is there any workaround?\n2) how to format(colors) input command text? I saw the API-reference, there is help about it in echo method, but I think that is only for the response/output not for input/command.\n. It seems that I am using the latest versio jquery.terminal-0.10.12.min.js. To be specific I get this on my screen.\njavascript\n[PROMPT]: prompt must be string or function\nI have incorporated \njavascript\nterm.update(-1, term.get_prompt() + '[[;blue;]' + command + ']');\nand it's working, thanks for it. Yet there are two issues with it after pressing the enter greetings go away.\nThis is how it looks before\nhttps://imagebin.ca/v/2qTundmiGSYC\nand this is how it looks after\nhttps://imagebin.ca/v/2qTv9BSB7UdL\nanother thing is that, is to possible to change the colors in live, like what jupyter/matlab does. As soon as we finish the language keyword it changes the color.\n. ",
    "seanhandley": "Thanks @jcubic - I'll give it a try.\n. ",
    "johnernaut": "@jcubic Ah, gotcha.  Thanks for the info!\n. ",
    "rcracel": "Sweet, thank you so much!\n. ",
    "RomanPerin": "I have this issue in version 1.5.0. (Mac OS,  Chrome 60.0.3112.101 (Official Build) (64-bit)).. Thx for the quick fix! I have tested https://codepen.io/jcubic/pen/KvJMJx and it works fine to me.. Cool! thx! It works fine for me). ",
    "stanleyxu2005": "Cool. Thanks for the quick response.\n. Thank you. I will use your provided code as a workaround. But I'd be appreciated, if you agree to change that from jquery.terminal side. This can be a low priority change request.\n. Okay. Never mind. \n. Can you allow cmd.keymap() passed into the constructor, so that exact those specified keys will response?. Thanks\nif(!a.match(/(application|text)\\/json/)){\nvar s=\"Response Content-Type is neither \\\"application/json\\\" nor \\\"text/json\\\"\";\n. ",
    "MalcolmMcLean": "Microsoft Edge 38.14393.0.0\nMicrosoft EdgeHTML 14.14393\nHere's the program that fails. I'm trying to write a game with a console window and a map. Open it in Chrome and it runs, open it in Edge and it generates a \"can't attach terminal\" message. \nOn Friday, 30 September 2016, 15:03, Jakub Jankiewicz <notifications@github.com> wrote:\nIn which version of Edge it's broken, I'm using version 25.10586 and demo on home page work fine. Which version of jQuery you're using and do you have a demo somewhere? Maybe you can create jsFiddle\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. My Windows installation has the default settings, which allow Microsoft to update at will. There was massive update which took about an hour to execute, rebooting the machine several times and making me late for work. Then afterwards the program was broken on Edge, but not on Chrome. Previously it had run on Edge correctly. \nOn Monday, 3 October 2016, 17:39, Jakub Jankiewicz <notifications@github.com> wrote:\nI've installed latest update and I still have Edge 25 and EdgeHTML 13. How did you get that version, I'm not very familiar with windows.\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. ",
    "sebastienwarin": "Hi,\nIn fact, it's not a regression in 0.10.x or greater, I don't read the comment on the freeze method : \"Disable/Enable terminal that can be enabled by click\" !\nBut before the 0.10 (0.9.3 for example), if you freeze the terminal you can't re-enable it !\nIn my case, I would like to have this behavior, a \"read only\" terminal to show log message in real-time. So I have add a \"readOnly\" option to do this.\nI send you a pull request if you want to integrate or update my code to support this feature.\nThank you for your work, this is a great plugin!\n. Ok I don't understand this by reading the comment of the freeze method ! I think that you can re-enable the terminal on click even if it's frozen !\nSo I will update my PR to remove the readOnly option and use the frozen variable instead !\n. Sure ! I have remove this option and fix the frozen mode\n. ",
    "goflatworld": "Thanks for the reply, I have below function now. It still has a new line after every char. Can you please let me know what am I doing wrong?\n............................................................\nfunction onMessage(evt)\n    {\n        var message = evt.data;\n        if (message.startsWith(\"B\"))\n        {\n            message = message.slice(\"B\".length);\n            log.innerHTML =  log.innerHTML+ message;\n        var line ='';\n            line +=message;\n        term.update(-1, line);\n        term.echo(line);\n        }\n}\n.............................................\n. Great thanks. that worked!\nI want to use the plugin as pure VT100 emulator. Do you have a doc on how to use this lib? The examples are jason, mysql related. I didn't  find out VT100 examples.\nI'm also looking into terminal.js to see if I can use it as a simple simulator. \n. Actually, what I hope to do is like a telnet client. Basically it will:\n1. Connect to the server --- I have done it\n2. Send character to the server  (disable local echo since the server will echo back everything I typed). I used onkeyup event to do it via input box, can I do it with your lib?\n3. Display the return. --- You have helped me on this one.\n4. Put the cursor right after the return, no its own prompt. ---- Can I do it via this lib?\nIf you could let me know whether this  can be don or not, that would be much appreciated.\n. Thanks a lot.\n. ",
    "benelliott": "Thanks :)\n. ",
    "git-wizard": "Keep in mind that i am rather new to web design however i find it really enjoyable.\nThe javascript i just copied as i had no idea about what to do. I know very basic js. \nhttps://jsfiddle.net/3ghx7o6s/\nI understand how it works roughly.. ",
    "pot-wizard": "I still do not understand, im sorry. This is very confusing for me. . This is another account i have by the way.. Thank you so much :D. ",
    "schrej": "Sorry, i can't test right now..\nIf I set scrollOnEcho to falls and am scrolled all the way down, will new output be visible or would I have to scroll down to see it? Because that's what I want: As long as I am scrolled all the way down I want to stay scrolled down so new output after entering a command is visible.\nAlso for the notifications it would be necessary to  detect if the console is scrolled down so it's only shown if there is new output that is not currently visible.. Thank you so much, this is working great!. During some further testing, the scroll at the bottom didn't always work, I don't know what exactly the issue is but I assume it is related to the is_bottom() logic...\nMy idea would be to just add a few pixels to the is_bottom() detection to avoid rounding and beeing only 99.9% at the bottom issues.\nEdit:\nHas been observed with Chrome (but not Chromium) 54.0.2840.99 m (64-bit) and 55.0.2883.87 m (64-bit) on Ubuntu and Windows 10. Now it's working perfectly, thank you!. ",
    "AZm1n": "Thank you!\nlet me do some testing today and post back.\nThanks again.. OK, this bring me very close to what i need, let me recap what i understand and ask a followup question\n***term.echo('[[ interactive foo Name Name2 Description Description2 ]]');\nIn this example you are passing the label interactive to the term.echo, interactive is a label for the loop function that accept the string 'name', you then slice the arguments to strip out the command and push a new terminal with everyone.\nthen you pass the object created to the 'foo' function which basically can be the rpc interpreter. \nvery neat!!! (y)\nI really like in this approach that this loop act as an anonymous function where i can call it with different parameters and it will just do the job.\nHow do i make this scale though? what is the best pattern to use.\nI want one function call to both this anonymous loop function and the processrpcresponse so that i be able to call it from any terminal, i'm trying to make the code resuable as much as i can.\nThanks.\n. Interesting approach\nThank you i'll give that a try today and post my test results.. This is exactly, exactly what I want to achieve.\nI want to be able to dynamically construct sub commands based on the response and post them back to the API when user hit enter.\nWhen the page refreshes, I can see it hit my API with the 'system.describe' method and this is the right behavior on startup with rpc interpreter I believe.\nWhen I type any command it didn't go to the API though and the terminal displays 'Command xxxxx Not Found', I want every command to be sent to the API and construct back either a new command or display result, the code you share is the right one, but how to direct every command to the API though?\nHere is code i'm using, it's pretty much the same like what you shared + the API test server, This code is wrapped into a spinner function to start/stop animation.\nThank you!\n    $('#term').terminal([{\n        interactive: function (name) {\n            var term = this;\n            var args = [].slice.call(arguments, 1);\n            var result = [];\n            var index = 0;\n            (function loop() {\n                if (args[index]) {\n                    term.push(function (command) {\n                        result.push(command);\n                        index++;\n                        term.pop();\n                        loop();\n                    }, {\n                        prompt: args[index] + ': '\n                    });\n                } else {\n                    term.exec(name + ' ' + result.map(function (string) {\n                        return JSON.stringify(string);\n                    }).join(' '), true);\n                }\n            })();\n        }\n    }, \"https://localhost:44330/api/Migrate/PostCommand\"], {\n        checkArity: false,\n        greetings: 'Hello! type [[b;#fff;]help] to get started.',\n        prompt: \"> \",\n        processRPCResponse: function (data, term) {\n            if (typeof data == 'string') {\n                // this will also echo `[[ interactive ]]` exec command because it will be normal string\n                this.echo(data);\n            } else if (data instanceof Array) {\n                // handle only 1 dim arrays\n                term.echo(data.join(' '));\n            } else if (typeof data === 'object') {\n                var string = '';\n                for (var f in data) {\n                    if (data.hasOwnProperty(f)) {\n                        string += f + ': ' + data[f] + '\\n';\n                    }\n                }\n                term.echo(string);\n            }\n        }\n    });. Thank you, that made it works, all commands are now passed to the server but the 'processRPCResponse' is not capturing the returned data, I tried returning a json object or a string but the 'data' is showing as undefined in the call back when I check the developer tool in chrome.\n\nI can see the response body in the chrome contain the returned object or string but for some reason processRPCResponse is not capturing it.\nno errors in the console.\nThanks.\n. I don't do any modification to the code above, I checked the Network Tab in Chrome and saw the response body contains either a json object or a string depending on what i return from the API, so i'm pretty sure the response is sent from the server and not a number.\nfrom the API i'm returning this\nreturn Ok(\"This is my string\");\n//Or\nreturn Ok(MyJsonObject);\nhttps://msdn.microsoft.com/en-us/library/dn314591(v=vs.118).aspx\n. This is also used to work fine with my previous test when i was using \"$jrpc\" before.. No, actually i'm not wrapping the results into the expected json-rpc format result.\nI used the same pattern i used for the $jrpc, which was able to handle the results without wrapping them into the Json-RPC object. the call backs to process the results was running fine.\nWhat i will do then is i'm going to introduce a new class with the expected json-rpc return object.\nI will then add my returned string/ object into the jsonrpcobject.result and return the whole json-rpc object back to the terminal.\nI hope this is the right way of doing it :)\n. I created two classes for the request and response on the API as per json-rpc2 specification and parsing automagically worked on the client side.\nThank you Jacub for your patience and help. I think I have everything i need right now and many actions on my side to complete the parsing logic at the API.\nThanks \ud83e\udd47 . I also have a .Net code ready that can handle CSRF tokens coming from ajax requests, i'll be more than happy to test it after implementing it.. Tested it and working like a charm.\nThank you.. Thank you.\nTested it and working as expected.. Worked like a charm Thanks,\none more related questions, what is the best practices if I'm returning the a list of strings and image links?\nFor example if i'm returning ObjectA that has two attributes, one is a name and second is an image link.\nI'm able to parse my object and then send the 'Name' to term.echo in one call and then display it's picture in another call to 'term.echo()', it's working very well but  I just want to make sure that this is right approach.\nin contrast for displaying pure texts from the objects,  I build and format one string in the parsing logic and use just one call  to term.echo() to display my result , and the terminal displays it properly.\nso Can I mix both 'text' and 'HTML attributes' in one call to term.echo() or parsing and sending them to the echo one by one is the right approach in this case.\nThanks.\n. Perfect, Thank you!. Thanks,\nMaybe i was not a little bit clear,  What I actually meant by advanced completion is to have a Powershell like completion.\nfor Example \"Get-Comm\" shoul complete \"Get-Command\" and then a user type \"--\" then he can also Tab complete, or through the neat popup you provided in the example above.\nI'm able to implement a skeleton/primitive function that can do that inspired by your \"Completion_Helper\" function is the terminal source code, The thing I was thinking is that i'm just reinventing the wheel and there should be something that can do such completion at scale.\nI'm currently getting both commands and parameters for the command through Json, each object represent a command and each command have an array with it's parameters.\np.s. I tried code pen above and it doesn't do autocomplete on Key up, it properly popup the menu but need to be 'clicked' to get selected. (tested on Edge and Chrome)\nThanks again.\n. I think that's right way of implemented it either way, both methods actually spot on.\nThank you Jacub , Kudos to you!\n. Thank you (y). ",
    "ftaffelt": "devel looks good. thanks.. master branch works for me. thanks.. it's working now in firefox. \n281 seems to be back - sorry to say that.\nNoticed also on IE11:  pressing the spacebar key echos the term \"Spacebar\" in the terminal. Should i fill a separate issue for this?. it's working now. thanks.. thank you for the fast fix.. it seems that this issue is back again in latest version 1.1.0. ",
    "arisi": "it did not help, though it should have fixed it... \nstrange...\nmust investigate.. correction ... it fixes the problem :) \n. but new one appears -- terminal does not \"release\" the keyboard... \ncannot focus to any other input on the page... something still incompatible there.. on ubuntu, with chrome  49.0.2623.110 (64-bit)\nand no error messages on console ... strange.\nbut if no-one else has these problems, it must be something exceptional and random.\n. well .. the project demo page gives errors too:\nhttp://terminal.jcubic.pl/#demo\njquery.terminal.min.js:36 Uncaught TypeError: Cannot read property\n'toUpperCase' of undefined\nI @ jquery.terminal.min.js:36\nce @ jquery.terminal.min.js:36\nf.event.dispatch @ jquery-1.7.2.min.js:3h.handle\n.i @ jquery-1.7.2.min.js:3\nand  no other errors -- all loads ok\nand the page works ok on firefox on this same Ubuntu... that made me wonder\nabout a chrome-problem.\n/ari\n2017-02-08 1:15 GMT+02:00 Jakub Jankiewicz notifications@github.com:\n\nI could only test in Chromium 37 on Ubuntu 12.04 64bit in VirtualBox (I\nhave 32bit system that's not supported by google chrome) and it's working,\nI can focus in input box that's on the same page as the terminal.\nDo you have a demo somewhere where I can test on that version of Chromium?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/282#issuecomment-278176106,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFphvGhORV8yylGhrBma-FPpZShGes3kks5raPssgaJpZM4L40fB\n.\n\n\n-- \n/Ari\n. yes, checked with my browsers -- on demo page: no errors, and work fine.\n/ari\n2017-02-08 20:45 GMT+02:00 Jakub Jankiewicz notifications@github.com:\n\nAdded polyfill to the demos.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/282#issuecomment-278423041,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFphvMCGbLgxe2Qgu9H5NOC9Zw0zYL1xks5rag1YgaJpZM4L40fB\n.\n\n\n-- \n/Ari\n. ",
    "NoahCardoza": "This might still be an issue in Chrome. https://github.com/nickola/web-console/issues/46. Ah! My bad, welp, glad I decided to open an issue on web-console first. I think I'll submit a PR over there. \nThanks for the clarification.. ",
    "Lilja": "I am here from the cmdchallenge and I don't think this fix fixes it, at least for my pok3r RGB with nordic layout.\nYou posted a codepen in jarv/cmdchallenge#118 and i modified it. \nI can't press +<+> which produces a \\ . \nKeydown Keycode 17 AltKey false CtrlKey true key Control\nKeydown Keycode 18 AltKey true CtrlKey true key AltGraph\nKeydown Keycode 187 AltKey true CtrlKey true key \\\nKeypress Keycode 92 AltKey true CtrlKey true key \\. Win 7/chrome 60.0. 3112.90\nSwedish keyboard layout . Works!. ",
    "jarv": "@jcubic wow that was fast, I will update the site soon with this new version. thanks!. ",
    "coveralls": "\nCoverage remained the same at 78.774% when pulling 73de95795640925201a32b5b127f2515dd0991a8 on stereobooster:master into 34223fb0f5f17660cbd0742849a944bb6668764c on jcubic:master.\n. \n\nChanges Unknown when pulling 73de95795640925201a32b5b127f2515dd0991a8 on stereobooster:master into  on jcubic:devel.\n. \n\nCoverage remained the same at 79.325% when pulling a9878359694c5779259c1723ff263bfcbc078f60 on nicholaswold:master into cd61c893c51fb0c3dcb226f6f7ea4eb0b8153e5f on jcubic:master.\n. \n\nCoverage decreased (-0.04%) to 79.659% when pulling dc0254b82b6d50d07f9ed432105c11ad442a7377 on rteshnizi:devel into 34a80cf4898c33244df982df3200f1aa64da96b9 on jcubic:devel.\n. \n\nCoverage remained the same at 80.199% when pulling 5e44027d21f92fd7beba358f7e57a4beaf6eed82 on LukasDrgon:patch-1 into 6c43543321010fe2178a4fdd59d64955a4b7cc06 on jcubic:master.\n. \n\nCoverage remained the same at 80.167% when pulling 373233a0bcbccdaca7f69766d2a37ed14a6df32f on avdes:patch-1 into 965b79544261deae897e80960a11298ccce59323 on jcubic:master.\n. \n\nCoverage decreased (-0.1%) to 80.053% when pulling 3e08483ef89b39fb5137e5d7d0a15c7c1220f1ca on avdes:patch-1 into 965b79544261deae897e80960a11298ccce59323 on jcubic:master.\n. \n\nCoverage increased (+0.02%) to 79.309% when pulling cf7c33c8a9d643e597744463071f8bf271a0ec97 on ml1nk:devel into 666ae082c3d24e62cf78e85e376d1000fc37225b on jcubic:devel.\n. \n\nCoverage increased (+0.07%) to 79.387% when pulling 3a80675a4ede832be6d604abeeea3eb5f648745e on ml1nk:devel into 9e757de016ebb884dcd6fff99b70dfbeec46d1dd on jcubic:devel.\n. \n\nCoverage remained the same at 80.917% when pulling e204deb641d56e62a4454dfe1376ccfc3316950d on playay:master into 5fe22be196efa38120556161b61f81a613270535 on jcubic:devel.\n. \n\nCoverage remained the same at 80.917% when pulling c182d6723a7f016e1e4c96e514cfe15296b5ea95 on DRSDavidSoft:patch-1 into 5fe22be196efa38120556161b61f81a613270535 on jcubic:devel.\n. \n\nCoverage remained the same at 81.918% when pulling 37afacdb3e2e8392f34049c60a25907075e37354 on Omranic:patch-2 into c6765db7e79e9aa393bbb5bec30ca68a6f8a1817 on jcubic:devel.\n. \n\nCoverage decreased (-0.2%) to 83.287% when pulling 55268b750cd3e631748d86f5ad98869eb4fc2558 on devel into 5bb7d9a181ce7ec109a97e24723a6f7bc4707073 on master.\n. ",
    "sharkdp": "I can confirm this. Chrome 56.0.2924.87/Linux. Yes, it works again. Thanks!!. Thanks for the quick response!\nI have tested the current master on Chrome/Android:\n- Input: works\n- Arrow keys: work\n- Backspace (starting at the end of the input): works\n- Backspace (deleting the first character): works\n- Backspace (somewhere in the middle of the input): works, but cursor jumps back to end of input\n- #235 seems to be fixed, I can not reproduce it.\nI have also tested on Chrome/Linux where everything seems to work just fine.. SwiftKey has an option to enable arrow keys.. Inserting text in the middle seems to work, however backspace does not work as expected. It deletes the right character, but jumps the cursor to the right by 2-3 characters (not necessarily to the end of the input).. Unfortunately, it did not help, no. Maybe it is also specific to my environment (other JS scripts around)? Hopefully not. Do you have a test environment online?\nThe backspace issue is not pressing for me, and the original issue is solved. If you want, I can open a new bug report.\nIn any case, thank you very much!. Perfect, now it works. Thank you very much (for digging so deep)!. Oh dear, I totally missed that when going through the installation process. Thank you very much!. Thank you very much!. Thank you very much!. Thanks. I have a fix for this issue within insect (I simply don't generate any empty format strings, which was never really intended)... so I think I will wait for your next release. No rush :smile: . Oh, thank you very much! Your response time is incredible :+1: :smile: \n(used the workaround for insect). I'm using the German keyboard layout on Windows. I think \"dead keys\" should be enabled by default with the German layout (Source).. > Do you have space that got removed when you type 2 or it don't get echoed?\nMore like the first option:\n\nI type pi r. Everything is displayed correctly:\n\n\n\n\nI type ^. Nothing changes visually (because it's a dead key)\n\n\nI type 2. Now it looks like this:\n\n\n\n\nI'm not able to reproduce. I'm using German (Germany) layout and in chrome /windows7 I've got your expected behavior.\n\nHm.. but dead keys are enabled (nothing is displayed when you type ^)?\n\nBy the way: enabling dead keys is not something I normally do - it's horrible ;-). It's just the standard on Windows for the German keyboard.\n. Some more observations\n- Typing r^2 works as expected\n- Typing pi r, then ^, then <space>, then 2 works as expected. > The fix is in dev, can you check this codepen?\nNice! Works!\n(I've said this previously, but your response time is incredible! Keep up the good work!). Thank you very much!. ",
    "philip-ulrich": "That would make sense. I can confirm that it is fixed in the master. Thank you!. Ah, when you said resume in the API reference, I just assumed that meant resuming from pause.\nI think it would be a good option to have. I can think of lots of terminal-ish situations when a full screen display would be fitting (using pause) and being able to ctrl-d out of it would make sense. I also agree that the latter is better. You don't necessarily need to exit if you are in a pause. \nIn regard to the custom ctrl-d, did you also notice the \"switch to another tab\" issue I was seeing? Does this have to do with the way your implementation of ctrl-d was interacting with mine? Or maybe how pause is interacting with it? Prior to pausing.. I can ctrl-d without issue as much as I want. Once I pause, I have to change browser tabs to be able to use it again.. ",
    "jleibund": "Thank for the fast response. I'll give it a try tonight or Monday morning\nand let you know.\nOn Fri, Mar 24, 2017 at 4:20 PM Jakub Jankiewicz notifications@github.com\nwrote:\n\nUnfortunately I can't test because MacOSX in VirtualBox don't work in my\nold laptop. I've added META+V to be ignored by input event just like CTRL+V\non chrome/Windows maybe that will fix you issue.\nCan you test the file from master branch?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/301#issuecomment-289132976,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmov_5tG8AOaex1lI58RQrSCPHPGBNks5rpCWGgaJpZM4Mogqe\n.\n. The change worked!. \n",
    "rteshnizi": "Adding an option would work fine. I just think when terminal is paused, event's should still be dispatched. The terminal however should not show any output.. Thanks for the quick fix. I will make sure to test it out.. Sorry for the delay here. I tested it and it works fine.. I just noticed that keymap option does not override the default behavior of CTRL+D when terminal is paused since it is handled by key_down here. Just wanted to bring this to your attention.. Yep, I tested it and it works. Great work!. Awesome!. @jcubic There is a new issue with keydown now. the even doesn't fire properly.\nDemo without pausing the terminal\nDemo with paused terminal. I don't think that's a bad idea as long as you mention it in your API documentation. I personally am using keydown. Is the master branch fixed now?. yep it is fixed.\nI use jshint and jscs. But this error is caught by PhantomJs. I use PhantomJs 2.1.1.. Thank you for taking a look. I will have to look at it again and fix the eslint error and the name of the option.\nI also notice what you are mentioning before submitting the PR and decided to leave it as is. However, I don't think using is_lower is the right approach here. A function to guess what is the casing of the string would simply fail in mixed-case strings. Though I agree that it covers some of the cases, I believe fixing the casing of the result shouldn't be an issue since the user is purposefully using caseInsensitiveAutocomplete option.\nI will see what is the best way to get around the mixed cased issue.\n. @jcubic I changed the complete() function so when there is only one matched word it replaces the command string with the matched one. How do you feel about this work around?. Yep. I noticed the test cases too. I am fixing them slowly. And will fix the option name. Thanks for taking a look.. I am closing this PR until I have a complete solution.. > that way it will also work for case when you have completion ['barbakan', 'barabazo'] and you try to complete text B| you will get BAR| and when you press tab twice you will get echo BARBAKAN BARABAZO and you have b| will get lowercase.\nI just want to bring one edge case to your attention using that solution: let's say auto complete options are ['yeah', 'yesSir']. if user types in ye and then press TAB, terminal will echo options as yeah  yessir.. ",
    "fracz": "Thank you!. ",
    "ibrarhussainansari": "Right now I just used it on my cordova (hybrid) app. But does't work.\nCordova app doesn't use any mobile browser like chrome etc, it uses webview (A View that displays web pages).\nYes I have blinking cursor. While tapping on any key, it doesn't enter or type anything on terminal.\nWhat is \"key property polyfill\" ?. I will get you working demo very soon.. I tried polyfill but still doesn't work.. When I hit enter button cursor moves down\nFor example: \n\n1 \n2  \n3 --- cursor blinking here ---. \n",
    "carolkey": "Thanks for your demo. ",
    "akg518": "Hej Kuba,\nThanks for getting back!\nI had a quick look at how this could be done - so far the best way I've found would be via a get-opt like interface. That is - given the short options and long options schema (two strings) it would produce an object with an options object and an argument list, similar to what has been given in examples on https://docs.python.org/2/library/getopt.html.\nso your command line would be converted from this:\ncommand --param1=foo bar\n...to this:\n{'params': {'opts':{'param1': 'foo'}, 'args': ['bar']}, 'jsonrpc': '2.0', 'method': 'command', 'id': 3}\nI'll be developing this functionality on the server side, but I'd imagine many people would be interested in such a functionality.\nBtw I did find an implementation of get-opt in js that you might be interested in looking:\nhttps://www.npmjs.com/package/getopt\nThanks again,\nAdrian. Sure, no problem I've already implemented on the server side - just wanted to check if I'm not duplicating work.\nThanks again\nAdrian. ",
    "FLamparski": "It's much better, there is still some weirdness when swipe-typing though\n(words do not appear until another key is pressed or you start another\nswipe gesture, at one occasion I had a word not enter in a sequence of\nswipe gestures).\nOn Jun 28, 2017 10:21, \"Jakub Jankiewicz\" notifications@github.com wrote:\n\nYou can test it here http://terminal.jcubic.pl/android.html\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/319#issuecomment-311605087,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA3uJzP0LFoBhYBoajhc9t2DTxay5vJjks5sIhr-gaJpZM4OEbKK\n.\n. When swipe-typing a repeating string \"foo bar\", it only registers every\nother word (foo or bar) now. Typing with normal touches is much more\nreliable.\n\nOn Jun 28, 2017 18:42, \"Jakub Jankiewicz\" notifications@github.com wrote:\n\nThe problem was that space was not inserted to textarea, when you swipe\nnext word it first insert space (keydown/keypress) and then only input for\nword.\nCan you test again? the same url http://terminal.jcubic.pl/android.html\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/319#issuecomment-311734497,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA3uJyHHoyikiNNfF3bTTdvFwbFNtU0Iks5sIpB8gaJpZM4OEbKK\n.\n. Let's say the string I want to enter is \"dog cat dog cat...\". I start by\ntouching 'd' then moving my finger to 'o' then 'g' in one gesture. Then I\nlift my finger to start swipe-typing cat the same way. Then repeat. If I\njust keep doing that, without using the suggestions bar to confirm what I\ntyped, I can reliably get the string \"dog dog dog...\"\n\nMind you, maybe for some reason the right events just aren't firing - I'd\nhave to do some tests of my own as it's genuinely intriguing me now.\nOn Jun 29, 2017 09:14, \"Jakub Jankiewicz\" notifications@github.com wrote:\n\nWhat should I do to reproduce? I'm using this: tap and move point in one\nplace and then tap and move in different one and the the first one again\nand I have correct results.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/319#issuecomment-311895232,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA3uJ-WEht62EMDzhZQKHDBsGojNi3-hks5sI1zOgaJpZM4OEbKK\n.\n. Mind you, I've noticed some differences between Chrome and Firefox:\n\nOn Jun 29, 2017 09:22, \"Filip Wieland\" filiplamparski@gmail.com wrote:\n\nLet's say the string I want to enter is \"dog cat dog cat...\". I start by\ntouching 'd' then moving my finger to 'o' then 'g' in one gesture. Then I\nlift my finger to start swipe-typing cat the same way. Then repeat. If I\njust keep doing that, without using the suggestions bar to confirm what I\ntyped, I can reliably get the string \"dog dog dog...\"\nMind you, maybe for some reason the right events just aren't firing - I'd\nhave to do some tests of my own as it's genuinely intriguing me now.\nOn Jun 29, 2017 09:14, \"Jakub Jankiewicz\" notifications@github.com\nwrote:\n\nWhat should I do to reproduce? I'm using this: tap and move point in one\nplace and then tap and move in different one and the the first one again\nand I have correct results.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/319#issuecomment-311895232,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA3uJ-WEht62EMDzhZQKHDBsGojNi3-hks5sI1zOgaJpZM4OEbKK\n.\n\n\n. \n\nLooks like email-to-issue discards attachments. \n",
    "brandonmwest": "Thank you!. ",
    "hnujxm": "sorry\u3002I running the application on windows10 width chrome 59.0.3071.115\uff0cthe keyboard is sougou\uff0ca chinese keyboard\u3002the keyboard can be download  at https://pinyin.sogou.com/    @jcubic . ",
    "ovk": "With this sample code, the terminal still doesn't get a focus on loading.\nI also tried calling focus() and enable() from within onInit callback, but it has no effect as well.\njavascript\nvar consoleBlock = $('.console-block');\nconsoleBlock.terminal(function (command)\n{\n    if (command !== '')\n    {\n        var result = window.eval(command);\n        if (result != undefined)\n        {\n            this.echo(String(result));\n        }\n    }\n},\n{\n    name: 'test',\n    prompt: '> ',\n    exit: false,\n    memory: true,\n    enabled: true\n});. I'll try to create a minimal demo. Though, if it's working for you, maybe one of the styles or code in my project interfering with jquery.terminal.\nMeanwhile, the browser I use is latest Chrome, and OS is Ubuntu 16.04.. I finally narrowed the issue down to this example: https://jsfiddle.net/txgg52fa/.\nIt's that terminal style that apparently kills autofocus, if you remove it - it starts working.. Thanks, I can use this workaround for now. Even this works:\njavascript\nsetTimeout(function() {\n    term.enable();\n}, 0);. Is the workaround with wrapping terminal inside a fixed container works for you? Because when I open https://jsfiddle.net/txgg52fa/1/ it doesn't seem to autofocus.. Thanks @jcubic. I'll just use setTimeout workaround for now.. Update: \nIt looks like the issue not related formatter. Even without formatter registered, moving cursor over space leads to &nbsp; appear in place of space. For example, with input string a b moving cursor left/right will reproduce the problem.. It looks like it is fixed. Formatter seems to be working properly as well. Thanks.. Apparently the issue wasn't fixed completely. Strangely enough, it still can be reproduced using specific RegExp in a formatter.\nPlease take a look at this example: https://jsfiddle.net/txgg52fa/3/\nType any number and press spacebar to see the issue.. @jcubic, using echo version that accepts a callback, or using raw echo option is indeed preserves changes. The problem, is that this way you can only modify the \"output\" part of the DOM.\nFor instance, for my application I need to generate clickable labels for each command user enters. In the jsfiddle example I posted before, I did this by appending child to .command div node, which works fine, but disappears on resize. I could also see many other potential use cases, that rely on modifying DOM on certain conditions. I think there should be a way to modify DOM in a way that jquery.terminal preserves this changes.. Yeah, I saw that redraw in the library code. Maybe a global callback would be easier to implement (something like onAfterRedraw or transform) and it will allow user to apply necessary DOM modifications after redraw.. Btw this was working fine in 1.5.2. Not sure though at what version exactly it was broken.. ",
    "fazelfarajzade": "thanks a lot  jcubic \u2665\u2665\u2665\u2665\u2665. ",
    "itszn": "I have had it happen on chrome 60 on win8, chrome 60 on win10, but not on chromium or chrome 60 on linux. My friend also had it happen on safari on his iphone (ios 10.3).\nEdit: Also chrome 60 for android. So I actually tried it on my other win10 box, but it wasn't happening, so I'm still very unsure what could be causing it. I disabled all extensions, and recorded this in incognito mode:\n. That returns true for the affected platforms I could get to right now.. True on my chrome win8, chrome on android, and safari on iphone (all I can test right now). The change fixes jumping to a different terminal. It now unfocuses the terminal on the second click.\nEdit: To clarify, no terminals are focused after the second click.\nAlso for the windows, I think it is because my install things my computer has a touch screen. My friend has a touch screen for his win 10 machine, and had the same issues I had on my win8.. ",
    "artursOs": "just have tested and it's working now. thanks. yes, clipboard. first you need to use set_command('test')  then press ctrl - v -  it will output not what is stored in clipboard, but  what was printed with set_command.. strange , i just tested on the link you provided. maybe it's not set_command()... but when you focus on command line with mouse click and press ctrl-v, sometimes it pastes clipboard result,but some times it pastes whole command string from the start. . i do not have red promt. i must apologize about set_command... it was problem on my side. But sometimes ctrl-v clones whole command instead of pasting what's in clipboard. But it happens when performing quick ctrl+v. So maybe it's not that critical.. there are two problems. first it doesn't correctly return actual num chars per line. (maybe because of custom css) \nand second :\n problem is that when i have many terminals on screen , executing this code : \nvar temp = $('<div class=\"terminal temp\"><div class=\"cmd\"><span cla' +\n            'ss=\"prompt\">&nbsp;</span></div></div>').appendTo('body');\ncost 30 ms in my chorme brower per terminal . so image if i have 16 terminals on screen. not too good for User expirience.\nso i tried to calculate num chars manually only 1 time before resizing all terminals. (for ex. when user changing font size, or change width of his browser window. Or even on terminal init) \nso i just return {} and rely on setting.num_chars\n. ",
    "avdes": "Thank`s. Should I create a new pull request?. ",
    "paulsmirnov": "This crash appeared in 1.7.1 or 1.7.2. Cannot reproduce in 1.7.0.. Thank you!. Great, thanks! .resize() also did the trick.. ",
    "raviteja2200": "Thanks for the quick fix, will this be available in next release?. Thanks, I have tested the fix using devel branch.. tested this change on devel branch, works as desired.. Thanks for the quick fix, tested this fix on devel branch. ",
    "ssv1000": "I think am option would be good. We just need the text to be copied and\neverything else should be blocked.\nthanks\nOn Thu, Sep 28, 2017 at 11:39 AM, Jakub Jankiewicz <notifications@github.com\n\nwrote:\nThis is a features added on purpose, when you have images in clipboard\nthey can be echo when paste.\nDo you think it's a bad idea?\nI can make an option to disable that feature.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/342#issuecomment-332894052,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ae3gxNbf1cYpJLRigLTkZKOo2fJ74dh6ks5sm8vZgaJpZM4Pndr8\n.\n. Can you please let me know if you are fixing this bug by providing an\noption to use \"just text copy\".\nAnd also please let me know in which release the fix will be available, and\nwhen the release will be available for us to use.\n\nAppreciate your help on this.\nthanks\nOn Thu, Sep 28, 2017 at 11:59 AM, Sujan Sirivella sujansirivella@gmail.com\nwrote:\n\nI think am option would be good. We just need the text to be copied and\neverything else should be blocked.\nthanks\nOn Thu, Sep 28, 2017 at 11:39 AM, Jakub Jankiewicz \nnotifications@github.com wrote:\n\nThis is a features added on purpose, when you have images in clipboard\nthey can be echo when paste.\nDo you think it's a bad idea?\nI can make an option to disable that feature.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jcubic/jquery.terminal/issues/342#issuecomment-332894052,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ae3gxNbf1cYpJLRigLTkZKOo2fJ74dh6ks5sm8vZgaJpZM4Pndr8\n.\n\n\n. tested. \n",
    "zhangyitao421": "On windows command prompt, CTRL+C without selecting any text will cancel the current command. CTRL+C with some text selected will copy the text.\nI think jquery terminal should have the similar behavior.. ",
    "abhiks19": "I would agree with zhangyitao421 here.. Thank you!. Works as expected.. ",
    "tejaswirohit": "Thank you :)\n. ",
    "RinaVladimyrovna": "I used 1.8.0.\nAnd yes, there is no such a thing in 1.9.0.\nThank you very much.. Thank you.. I apologize for repeating.\nThank you.\nBut now the same issue exists in \nIE 11.608.15063.0\nWin 10. Unfortunately, it is hard to tell, because there is no opportunity to place cursor in the middle of the string since 1.9.0. It appears only at the end of the line now.\nPractically, there is still an additional cursor to the very left of the active line.. Thank you for your reply.\nI have no keyboard or mouse for my iPad right now unfortunately, so I have no opportunity to check it.\nBut I assure you, there is the second cursor in 1.9.0 on iPad's Safari.. ",
    "lepe": "The reason seems to be in line 1689:\n```javascript\nfunction draw_cursor_line(string, position) {\n                var len = $.terminal.length(string);\n                if (position === len) {\n                    before.html(string);   //<-------- replaced: format(string) for string\n                    cursor.html('\u00a0');\n                    after.html('');\n                } else if (position === 0) {\n```\nNow seems to be working fine. I'm not sure if it can have side effects.\n**UPDATE:\nThe HTML entities are shown if arrows Left or Right are used to edit the command. . ",
    "nefelin": "It doesn't work for me, even with timeout. That only results in strange shared focus. Even with longer timeout...\nEDIT: Oh my mistake, I had messed with onBlur property. It works now with timeout.... Great! yes, focus(false) now works without timeout! (on devel branch). While you're here I would love to ask you if there's any elegant way to do something else I've been trying to do, but I'm new to git... is it cool to have unrelated discussion on this thread? :) . ok I'll do that. Okay, I have to run for a couple hours but I'll try these solutions out when I get back... Will let you know! Thanks for all the hard work. You've made something great :) . hmmm yeah, I don't think any of those fix it. I would send you a link but my server is down... \nWhat happens is something like this...\nuser sends message to server\n(player_74)[python]>team red\nserver sends message back (along with a state update that triggers set_prompt()\nsuccess: You're on the red team\nJQT prints the next prompt before the promptState message has arrived and been processed\n(player_74)[python]>\nJQT does not check the status of the prompt (although set_prompt() has already been called)\n(player_74)[python]>l\nnow that a command has been entered JQT checks the prompt variable and updates appropriately\nerror: Unknown command 'l'\n(player_74):red:[python]>\nthe problem is that red should have been inserted in the prompt after the first command before redrawing the prompt. Also tried to delay drawing the prompt by 100ms but that seemed tricky to achieve... is this clearer?\nMy ideal behavior would be:\n<- receive promptState message from server\ndrawServerGeneratedPrompt> Enter Command\n--- wait\n<- receive message message from server and print\nerror: Unknown command 'Enter Command'\n<- receive promptState message from server \ndrawServerGeneratedPrompt>\n. Ah ok. Perfect, that works for me :) I didn't understand how pause resume were meant to operate.\nThanks for taking the time!. ",
    "ahmed-shariff": "I am also running into the same problem. If you guys don't mind, can you explain how this can be fixed?\nusing the cdn version 1.11.4, copied form the README. I am using ace-editor and the terminal in the same page. The php script is as follows:\n```\n\n\nEditor\n\n\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js\"></script>\n\n<!-- Latest compiled and minified CSS -->\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\">\n\n<!-- jQuery library -->\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n\n<!-- Popper JS -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\"></script>\n\n<!-- Latest compiled JavaScript -->\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n\n<!-- jQuerry.terminal -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.terminal/1.11.4/js/jquery.terminal.min.js\"></script>\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.terminal/1.11.4/css/jquery.terminal.min.css\" rel=\"stylesheet\"/>\n\n<!-- ace editor -->\n<script src=\"ace-builds/src-noconflict/ace.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n\n<script>hljs.initHighlightingOnLoad();</script>\n<style type=\"text/css\" media=\"screen\">\n</style>\n\n<script>\n $( document ).ready(function() {\n\n     var editor = ace.edit(\"editor\");\n     editor.setTheme(\"ace/theme/ambiance\");\n     editor.session.setMode(\"ace/mode/javascript\");\n\n     var available_height = $(\"body\").height() - $(\"nav\").height() - 3;\n     $(\"#editor\").height(available_height * 0.7);//$(\"body\").height() - $(\"nav\").height() - 3);\n     $(\"#terminal\").height(available_height * 0.3);\n\n     $('#terminal').terminal(function(command, term) {\n     term.pause();\n     $.post('echo_command.php', {command: command}).then(function(response) {\n         term.echo(response).resume();\n     });\n     }, {\n     greetings: 'Dummy Terminal',\n     onBlur: function() {\n         return false;\n     }\n     });\n\n });\n\n</script>\n</head>\n\n<body>\n<div class=\"container-fluid\" style=\"width:100%\">\n    <nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <div class=\"navbar-header\">\n        <div class=\"navbar-brand\">Online Portal</div>\n    </div>\n    <div class=\"input-group-sm form-inline\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"File Name\" id=\"filename\">\n        <div class=\"input-group-append\">\n        <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"save\">Save</button>\n        </div>\n    </div>\n    <ul class=\"navbar-nav\">\n        <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">Active</a>\n        </li>\n    </ul>\n    </nav>\n\n    <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-12 col-md-12\">\n        <div id=\"editor\">\n        function foo(items) {\n        var x = \"All this is syntax highlighted\";\n        return x;\n        }\n        </div>\n    </div>\n    </div>\n    <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-12 col-md-12\">\n        <div id=\"terminal\"></div>\n    </div>\n    </div>\n</div>\n</body>\n\n\n```\nThe echo_command.php just echos back what was sent to it.\nThe terminal works nicely. But when I am trying to use the input on the top of the page, or the ace-editor, whatever I type is also grabbed by the terminal. Also the when I hit enter from within the editor, the terminal takes that and the editor does not.. That solved the problem.\nThank you for the quick reply. :dancer: . ",
    "kodemonk": "Thanks for coming back to me so quickly. \nWhat I mean is simple. Every time a user logs in through RPC a session is created in the backend linked with a token. This session stores the state from one command to the next one.  For example: This would be a typical user interaction:\n1) After loading Jquery.terminal a system.describe call is automatically made to the backend. Which replies with 3 possible commands [exit, load, whoami]. Autocomplete works fine until this point.\n2) Now user wants to work with one company and for thats uses, the command load (\"load \"). I.e: load 4581657\n3) Now the backend knows that there is a company loaded and even the terminal prompt is changed to CORP>. Also and most importantly a new set of commands is available [exit, load, unload, describe, whoami, set, delete]\n4) Once a company is loaded the user can for instance describe it (a command which didn't make any sense at point 1). For that he simply types describe. An the info appears on the terminal screen. I can do that in the backend because I know what company is loaded, so once I receive a describe command I return the appropriate info.\nThe problem I have is that as you can see the list of available commands changes with every load. At point 1 there were 3 commands [exit, load, whoami] but after loading the company there are 7 [exit, load, unload, describe, whoami, set, delete].\nThe system.describe call is made automatically only once at the script startup (as long as completion property is set to true) but I would like to be able to invoke it manually after every load command because I want jquery.terminal to know at every point of time which commands are available to autocomplete\nHope this clarifies\nThanks again!\n. Great idea! That will do. I will try it right away ;) Thanks and keep up with the great work!!. ",
    "pquerner": "Its almost the same code for the comment box on the website.. Wow, one can really tell you love your project !\nOne thing I dont get is, how am I suppose to restart the process if everything is in anonymous functions?\nLike the given data is wrong and in the confirmation step the user declines the confirmation.. Here's my solution\n```\nfunction greetings(term) {\n        if (init) {\n            term.echo(\"Type in your application here.\\n\");\n            term.echo(new Date(), {\n                finalize: function (node) {\n                    if (init) {\n                        // node is jquery object and html have data-index attribute\n                        var index = node.data('index');\n                        setInterval(function () {\n                            term.update(index, new Date());\n                        }, 1000);\n                        init = false;\n                    }\n                }\n            });\n        }\n    }\nvar init = true;\n    $('#cud_cmd').terminal(function (command, term) {\n            (function install(step, finish) {\n                var question = questions[step];\n                if (question) {\n                    if (question.text) {\n                        term.echo('[[b;#fff;]' + question.text + ']');\n                    }\n                    term.push(function (command) {\n                        term.pop();\n                        settings[question.name] = command;\n                        install(step + 1, finish);\n                    }, {\n                        prompt: question.prompt || question.name + \": \"\n                    });\n                } else {\n                    finish();\n                }\n            })(0, function () {\n                term.set_prompt(\"\\n\");\n                setTimeout(function () {\n                    term.echo('Confirming data .......').resume().push(function (yn) {\n                        if (yn.match(/^(y|n)$/i)) {\n                            if (yn.match(/y/i)) {\n                                // YES\n                                term.pause();\n//Do stuff\n                            } else {\n                                // NO\n                                term.echo(\"Press enter\");\n                                term.set_prompt(\">\");\n                                settings = {}; //Reset\n                                term.pop();\n                            }\n                        }\n                    }, {\n                        prompt: 'Confirm (y|n): '\n                    });\n                }, 1000);\n            });\n        },\n        {\n            greetings: null,\n            onInit: function (term) {\n                greetings(term);\n            },\n            height: 600,\n            prompt: \"> Press enter.\",\n            enabled: true,\n            history: false\n        });\n```\nsettings and questions are build like you proposed, so I removed them from the example.. Works fine by me. That could be added to the example page, if you are fine with that.. Yes I saw it, but I havent tested it. I'm sorry.\nSure, you can add your example as it seems its more advanced. Maybe add a link to this issue talk as a backlink?\nI'm gonna test your script, but I have not the time right now.. ",
    "E3V3A": "Just found it! Sorry to bother you! :+1: \nPS. It's here:  https://terminal.jcubic.pl/examples.php. ",
    "ml1nk": "\nI've edited the comment about the option it's good to have since user may have terminal formatting that she want to have in output.\n\nI feel the same way.\n1/2 OT\nIn apply_formatters the formatters which does not contain __meta__ are only called if $.terminal.is_formatting(string) is false which creates faulty results, for example \"[[;blue;]\"+chalk.red(\"A\")+\"]\" always leads to:\n\nI would expect that A is red (unixFormattingEscapeBrackets=false) or A is red and visible surrounded with brackets (unixFormattingEscapeBrackets=true). In addition format_split does not seem to be at the right place and should be part of the formatter if needed. In my opinion you should be able to remove the default formatters and replace them with your own, without any remaining code of the default basic formatting (like format_split) still active.\nReplacing apply_formatters with\njavascript\napply_formatters: function(string, settings) {\n            var formatters = $.terminal.defaults.formatters;\n            var i = 0;\n            try {\n                return formatters.reduce(function(string, formatter) {\n                    i++;\n                    if (formatter instanceof Array) {\n                        return string.replace(formatter[0], formatter[1]);\n                    } else if (typeof formatter === 'function') {\n                        var ret = formatter(string, settings);\n                        if (typeof ret === 'string') {\n                            return ret;\n                        }\n                    }\n                    return string;\n                }, string);\n            } catch (e) {\n                throw new Error('Error in formatter [' + (i - 1) + ']');\n            }\n        },\nseems to do the job without breaking anything, but you have probably a better understanding what it could break. \nMay I integrate the first part (remove is_formatting) or all of it in my pull?\nOT\n\nCONTRIBUTORS.md it should be make coverage because make coveralls, I think, can only be executed from travis.\n\nThe makefile contains\nmakefile\ncoveralls:\n    $(ISTANBUL) cover node_modules/jasmine/bin/jasmine.js --captureExceptions; cat ./coverage/lcov.info | ./node_modules/.bin/coveralls -v\nwhich does the job for me. I couldn't found an entry for coverage.\n\nAs for A[[;inherit;]\\n]B you can create an issue. (it also break when first character in formatting is new line like A[[;inherit;]\\nx]B).\n\nI will look into this and if i can't find a fix until end of next week create an issue for you :+1: . Thanks for this reference, i will create another pull request if i can get something running.\nLast but not least, thank you for your help and this nice project.. Thank you for the better bugfix, hopefully the PR saved you some time debugging.. ",
    "playay": "I see this first image in chrome on windows7. Thanks for your tips on overwrite  font-family in my own css, it is really suit for me in my case. I should close this pull request.. ",
    "DRSDavidSoft": "@jcubic Ah, too bad jQuery doesn't allow that. At least I learned that calling .terminal() on an object will return its terminal handle. (I think it should be documented! \ud83d\ude04 )\nIs there any chance to bind the terminal's .focus() to the element's onfocus event listener?. ",
    "N1kop0l": "Thanks a lot, I am already in the chat waiting for a response, this code does not work for me because is newer than the jquery terminal I am using (version 0.9.2), this is my code, sorry but I am not sure how to use codepen to reproduce :( \n```\n$('body').terminal(\"json-rpc-service-demo.php?botid=\"+BotDBid, {\n            login: true,\n            greetings: \"Command Shell To: \"+BotPCname+\":\"+BotDBid,\n            onBlur: function() {\n                // the height of the body is only 2 lines initialy\n                return false;\n            }\n        });\n});\n\n``. I have modified the code but it's still not scrolling, I tried also clearing the cache but no luck, I will migrate to the new version. The last code did the trick for chrome, but now scrolling is not working with firefox. When I only use :scroll_object = $('body,html');`\nit works  for chrome & firefox, do you think that this can cause other problems?. ",
    "ArsalanKhairani": "@jcubic: Appreciate the quick response \ud83d\udc4d \n. @jcubic: Thanks. When will u be making a release?. ",
    "aborovac": "works well. thanks.. ",
    "mesurinna": "Saving data without JSON.stingify in sessionStorage and wihtout JSON.parse to read is resulting in another JS Error Ae.Push is not a function. \nHow can i save these data and reload them on a page refresh? . can i just echo out the data exported by export_view()? Just want to reload just all stuff happened before.. Thanks for the fix.\nKind regards\nTommaso. ",
    "vitalyo7": "Having similar issue with unix formatting + color formatting, i am trying to render some c/assembly text that uses color code and [] brackets.\nterm.echo(\"\ufffd[0m[\ufffd[36m\ufffd[33m0x109de1d4\ufffd[0m]\ufffd[36m\ufffd[0m\ufffd[0m\ufffd[31m\")\nUnix formatting produce the following string which does not seem to render correctly.\n[[[;#0AA;]][[;#A50;]0x109de1d4]][[;#0AA;]][[;#A00;]]\nPS: It looks like the following characters [ and ] when mixed with color coding tags, cause some odd behavior. I looked a jquery.terminal and it looks like it may be the way you are splitting the tokens.\nMy guess is that it has something to do with using parser vs regex that may be causing this behavior.\n. ",
    "0xF6": "Okay, I'll do it in a few days.. It's harder than I thought. Too difficult.\n. Thanks!. ",
    "divyareddy12": "Would the devel branch changes be released and if so when?\nAlso I am using jquery terminal with React (https://terminal.jcubic.pl/examples.php#reactjs-terminal) so could you please tell me how I can access defaults.formatters option.. Thank you for your support with backspace.\nI have tested with the latest version backspaces is working fine but the last character is not printed(eg: end ']' is not printed). . Could you please release it with a new version.. I updated my unix_formatting.js with the code in devel branch and its not printing the last ']' of each line\nString:\n Status.\\n\\n==============================\\nTest1.\\t[    ]\\b\\b\\b\\b\\b--\\r\\u001B[KTest1.\\t[    ]\\b\\b\\b\\b\\bFAIL\\n\\r\\u001B[KTest2.\\t[    ]\\b\\b\\b\\b\\bSKIP\\n\\r\\u001B[KTEST3.\\t[    ]\\b\\b\\b\\b\\bSKIP\\nDuration: 00:00:06\\n\nWith echo -e it gives:\nStatus.\n==============================\nTest1.  [FAIL]\nTest2.  [SKIP]\nTEST3.  [SKIP]\nDuration: 00:00:06\nBut in the terminal it is:\nStatus.\n==============================\nTest1.  [FAIL\nTest2.  [SKIP\nTEST3.  [SKIP\nDuration: 00:00:06\nThe formatters is as below:\n$.terminal.defaults.formatters.unshift([\n            /(^|[^\\x08]|\\r\\n|&[^;]+;)\\x08|[^\\r\\n]+\\r\\x1B(?:]|[|[[]])K|\\x1B(?:]|[|[[]])K/g, '', {loop: true}\n        ]);\nWhat I have notices is that in unix echo \\b changes the position of the cursor one position backwards but in the terminal it is deleting the characters before changing the position\nCould you let me know how I can correct this. \n. With {loop: true} in formatters the terminal hangs.\nI tried with the following -\n$.terminal.defaults.formatters.unshift([\n            /(^|[^\\x08]|\\r\\n|&[^;]+;)\\x08|[^\\r\\n]+\\r\\x1B(?:]|[|[[]])K/g, '', true\n        ]);\nand the backspaces doesn't get removed. There is another issue with 1.19.1. It skips everything after \\b\nExample:\nStatus.\\n\\n==============================\\nTest1.\\t[ ]\\b\\b\\b\\b\\b--\\r\\u001B[KTest1.\\t[ ]\\b\\b\\b\\b\\bFAIL is displayed as\nStatus.\n==============================\nTest1. [ ]\nFormatters: $.terminal.defaults.formatters.unshift([/(^|[^\\x08]|\\r\\n|&[^;]+;)\\x08/g, '', {loop: true}]);. The backspace is working with the new unix_formatting.\nI was testing for a different string and there are two ']' printed in some cases.\nString: Test 0.\\n\\n==============================\\nTest 1.\\t[    ]\\b\\b\\b\\b\\b--\\r\\u001B[KTest 1.\\t[    ]\\b\\b\\b\\b\\bDONE\\nTest 2.\\t[    ]\\b\\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b-\\r\\u001B[KTest 2.\\t[    ]\\b\\b\\b\\b\\bFAIL\\nTest 3.\\t[    ]\\b\\b\\b\\b\\b--\\r\\u001B[KTest 3.\\t[    ]\\b\\b\\b\\b\\bWARNING]\\n\\nTest 4\\nDuration: 01\\nclose\nUnix output is as below:\nTest 0.\n==============================\nTest 1. [DONE]\nTest 2. [FAIL]\nTest 3. [WARNING]\nTest 4\nDuration: 01\nclose\nTerminal output:\nTest 0.\n==============================\nTest 1. [DONE]\nTest 2. [FAIL]\nTest 3. [WARNING]]\nTest 4\nDuration: 01\nclose\nAlso, at the moment unix_formattring is being loaded at the begining  of the application, could unix_formatting be given as an API so that it can be loaded when the terminal opens.. The extra ']' is removed now. Thank you\nAnother problem I am having is with the import of unix_formatting. \nIn case of 'require('jquery.terminal/js/unix_formatting.js');' there is an error that jQouery is not found as unix_formatting loads when the application loads and not when the termimal is opended. Because of this I have extracted unix_formatting locally into a function(unix_formatting) and importing it as 'import { unix_formatter } from './unix_formatting';'\nSo can unix_formatting be given as an API so that it can be called when the terminal opens and not when the application loads.. Thanks for your support.\n1.20.0 is working as expected but the laterst version 1.20.2 the unix formatting is broken again.\nString: 'Test 0.\\n\\n==============================\\nTest 1.\\t[    ]\\b\\b\\b\\b\\b--\\r\\u001B[KTest 1.\\t[    ]\\b\\b\\b\\b\\bDONE\\nTest 2.\\t[    ]\\b\\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b----\\b\\b\\b\\b    \\b\\b\\b\\b-\\r\\u001B[KTest 2.\\t[    ]\\b\\b\\b\\b\\bFAIL\\nTest 3.\\t[    ]\\b\\b\\b\\b\\b--\\r\\u001B[KTest 3.\\t[    ]\\b\\b\\b\\b\\bWARNING]\\n\\nTest 4\\nDuration: 01\\nclose\nVersion 1.20.0\nTest 0.\n==============================\nTest 1.    [DONE]\nTest 2.    [FAIL]\nTest 3.    [WARNING]\nTest 4\nDuration: 01\nclose\nVersion 1.20.2\nTest 0.\n==============================\nTest 1.    [DONE]]\nTest 2.    [FAIL\nTest 3.    [WARNING]\nTest 4\nDuration: 01\nclose. It works now. Thank you. For the below string unix_formatting is broken.\nIn this case there is only \\b and no escape sequence. \nString: Details statement.\\n================================\\nLine 1. [Start]\\b\\b] \\b\\b\\b\\b\\b\\b \\b\\b\\b\\b--\\b\\b \\b\\bDone]\\nLine 2. [Start]\\b\\b] \\b\\b\\b\\b\\b\\b \\b\\b\\b\\b-\\b \\bDone]\\nLine 3. [Start]\\b\\b] \\b\\b\\b\\b\\b\\b \\b\\b\\b\\b-\\b \\bDone]\\nLine 4. [Start]\\b\\b] \\b\\b\\b\\b\\b\\b \\b\\b\\b\\b-\\b \\bDone]\\nLine 5. [Start]\\b\\b] \\b\\b\\b\\b\\b\\b \\b\\b\\b\\b----\\b\\b\\b\\b \\b\\b\\b\\b----\\b\\b\\b\\b \\b\\b\\b\\b----\\b\\b\\b\\b \\b\\b\\b\\bDone]\\n================================\\n\\nClosing statement\nUnix Output:\n================================\nLine 1.      [Done]\nLine 2.      [Done]\nLine 3.      [Done]\nLine 4.      [Done]\nLine 5.      [Done]\n================================\nJquery terminal output:\n================================\nLine 1.      [Done]Star] t]\nLine 2.         [Done]tar] t]\nLine 3.    [Done]tar] t]\nLine 4.      [Done]tar] t]\nLine 5.    [Done]---    ----    ----    Star] t]\n================================\nClosing statement. Tried manipulating the string when there is no escape sequence in it so that it removes all the \\b\nechoData = \"Details statement.\\n================================\\nLine 1. [Start]\\b\\b] \\b\\b\\b\\b\\b\\b \\b\\b\\b\\b--\\b\\b \\b\\bDone]\\nLine 2. [Start]\\b\\b] \\b\\b\\b\\b\\b\\b \\b\\b\\b\\b-\\b \\bDone]\\nLine 3. [Start]\\b\\b] \\b\\b\\b\\b\\b\\b \\b\\b\\b\\b-\\b \\bDone]\\nLine 4. [Start]\\b\\b] \\b\\b\\b\\b\\b\\b \\b\\b\\b\\b-\\b \\bDone]\\nLine 5. [Start]\\b\\b] \\b\\b\\b\\b\\b\\b \\b\\b\\b\\b----\\b\\b\\b\\b \\b\\b\\b\\b----\\b\\b\\b\\b \\b\\b\\b\\b----\\b\\b\\b\\b \\b\\b\\b\\bDone]\\n================================\\n\\nClosing statement\"\n  if (!echoData.includes('\\r\\u001B[K')) {\n        echoDataArray = echoData.split('\\n');\n        for (let i = 0; i < echoDataArray.length; i++) {\n            if (echoDataArray[i].match(new RegExp('/[a-zA-Z](])$', 'g'))) {\n                let newdata = echoDataArray[i].substring(0, echoDataArray[i].indexOf(' ['))\n                    + echoDataArray[i].substring(echoDataArray[i].lastIndexOf('\\b'))\n                newdata = newdata.replace(new RegExp('\\b', 'g'), '[');\n                echoDataArray[i] = newdata;\n            }\n        }\n        echoData = echoDataArray.join('\\n');\n    }\n\nThis only works for the above mentioned string format. As a workaround I am setting the last line of echo data as the prompt. But there are special characters in prompt. So would it be possible to apply the formatting that is done for echo to prompt as well?. We cant use xterm because it uses sockets so is there any way of including vi in jquery terminal.. ",
    "amarendrar": "I have tested the backspace with the latest version and looks like still backspace is not working as expected.\nExpected Unix output as below:\nTest0.\n==============================\nChecking backspace.     [FAIL]\nTest1.  [SKIP]\nTest2.  [SKIP]\nTest3: 00:00:032\nTest4\nChecking backspace.\n\nTerminal Output with unix formatting file.\n\nTest0.\n==============================\nChecking backspace.    [FAIL\nTest1.    [SKIP\nTest2.    [SKIP\nTest3: 00:00:032\nTest4\nC]    ]    ]    Checking backspace.\n\nCode Snippet added in \nmultiply-interpreters-demo.txt\n```javascript\n$.terminal.defaults.formatters.unshift([/[^\\r\\n]*\\r\\x1B(?:]|[|[[]])K/g, '', {loop: true}]);\n         var data ='Test0.\\n\\n==============================\\nChecking Backspace.\\t[    ]\\b\\b\\b\\b\\b-\\r\\u001B[KChecking backspace.\\t[    ]\\b\\b\\b\\b\\bFAIL\\n\\r\\u001B[KTest1.\\t[    ]\\b\\b\\b\\b\\bSKIP\\n\\r\\u001B[KTest2.\\t[    ]\\b\\b\\b\\b\\bSKIP\\nTest3: 00:00:032\\nTest4\\n\\rChecking Backspace.\\t[    ]\\b\\b\\b\\b\\b-\\r\\u001B[KChecking backspace.';\nterm.echo(data);    \n. Thanks for the Dterm React component. I use the terminal in another react component  ex: dialog. This dialog is a combination of multiple react components like checkbox, input field, and jquery-terminal. I thought that I can use the dterm to replace my react dialog component.  As per the codepen demo, the dterm is tightly coupled with jquery-terminal. I will check dterm react component can be enhanced to use for multiple components. . Thanks for your example. I created a react component wrapper for Jquery-UI Dialog and passed the terminal component props from Dialog. So all the terminal related options are in terminal component only.\nHope this example can also be used to create a wrapper react components.\nTerminalDialog.tsx.txt\n. Thanks. I will close this issue.. ",
    "sherlock1982": "Thanks, I will check more. I tested in Chrome BTW. For now I postponed it but I'll get back to it soon.\nIt started in 1.16. 1.15 Fine.. ",
    "uc-rsh": "\nClosing because of inactivity.\n\nyes, it is resolved. ",
    "recca0120": "Hi. @jcubic \nit's so wired , I want to do this\nhttps://github.com/recca0120/laravel-terminal/blob/master/resources/assets/ts/unix_formatting.js\nbut this pr ...\nanyway. thanks for your help ...\n. Yes.\nit's my fault. XDD. ",
    "Moulde": "Typescript: 2.9.2\njQuery: 3.3.1\nI don't have any @types for jquery.terminal installed. I get the above errors just from installing the new version of the package and importing it in my typescript file.\nThe project is not public, but I'll see if I can reproduce the issue in a stackblitz or new ang application.. I updated the @types/jquery to the most recent version, and now everything is good. Thanks!\nNow i just have to update my code to use the new types as it seems like there are some differences.\nLike setting the prompt using set_prompt does now take a ExtendedPrompt instead of a string.\nDo you have any usage examples?\n(btw, it seems like the greetings property is missing from the TerminalOptions type?). @jcubic So right now keeping the type definition up to date is a seperate task, which is hard to verify besides having a complete usage example to build? Is the only way to avoid this, to rewrite everything in typescript (seems like an enormous task, but would it actually? since it could start out with exactly what you have now, and then types could be added along the way. Anyway, just throwing it out there.), or is there other preferably automated way to verify the types against the library?\nAnyway, I will keep this in mind and see if I can contribute to the type definitions at some point.. ",
    "severinkehding": "Oh shit... i see, i see. \nMy bad :/. ",
    "ankitacroit09": "my usecase is are like if you enter \"pwd\" command and do TAB two times.\nthan output will be:\n```\npromt-value>pwd\npwd          pwdhash      pwdhash-bin  pwdx\n```\nHow to achieve this ?. Hi ,\nThanks for your rply.\nBut for me the use case is , where I can not pre-define the command that what user will be give input.\nFor my usecase the command will be any (bash command )\nNormally, when using the bash, when a user presses the TAB key on the keyboard a list of possible command completions appears. I want to achieve the same behaviour, but send the tab character manually. Unfortunately I am not aware how to do this. . ",
    "sobimibos": "Thank you for the quick fix. I really appreciate the terminal.. ",
    "U-Design": "\n\nCase 1\nOpening the terminal within a dialog box.\nInitializing two terminal back to back.\nPost Init I pause the term and req remote for the prompt string. On success I do resume.\nNow both the terminal gets the update around the same time and both places the cursor is in the active state, so typing in one also replicates in other also (Seems like the events binding is on the window and target to active window). \n  -- For now, I got around this by checking the active terminal($.terminal.active() === this.terminal) on the response of prompt and disabling the terminal if it fails the condition.\n\n\nRegarding the auto disable of the terminal. Terminal on click I added \nterminal.disable();\nterminal.focus();\nterminal.enable();\nSome how the the flag this .enabled was true and the focus was not working. So used above to get around.\n. \nSo does that mean there is an implementation in jquery.terminal already for it. \nThe expectation is that after copying some line I should be able to directly paste using ri8 click onto the jquery.terminal. \nCurrently, to achieve this is there an option or some hack is required?\nAnyways could not get the relation to Codemirror here.. Chrome. Tried randomly on some of the provided jQuery Terminal demo in action: \nhttps://terminal.jcubic.pl/rpc-demo.html\nhttps://codepen.io/jcubic/pen/MJyYEx?editors=0110\ndid not happen there also.\nI m using Win10 , chrome Version 70.0\n. \n\n",
    "kuzmanzs": "Thanks for the fix.. Hi,\nI little bit do not understand how will it work.\nYou have updated \n(Mottie/Keyboard](https://github.com/Mottie/Keyboard) project??\nI have long time ago didn't worked with jquery terminal.. I lost little context\nCould you write some simple example for this issue?. Does it work for testing mobile https://terminal.jcubic.pl/virtualKeyboard.html ?\nIf I open it from my Androud phone the enter key does not work (backspace but you know) and if I click on the black area my Android keyboard pops up.. thanks, it isn't high prio.\nI am using freeze following way, looks does not work:\nscripts/css I am using from https://terminal.jcubic.pl/virtualKeyboard.html\nlocal css:\n.ui-keyboard-input {\n        display: none;\n    }\n\n",
    "ultramoo": "thanks for that! Found a particular server socket wrapper called websocketd and used it with tail -f.  It ended up being so easy to integrate with JQueryTerminal. Pretty much realtime now.\n. ",
    "BenHormann-Intergen": "I forgot to say echo(undefined) should still print undefined. Probably?\nYou'd have to check the length of arguments to differentiate the two.. Good job (and so quick!), thanks. Cool project, keep it up.. ",
    "liyingzh": "Yes, I see it when visit https://terminal.jcubic.pl/#demo and execute dir(term)\nno modify on jquery.terminal.js, Browser: Chrome 72, OS: Windows7\nCould you tell how to change to monospace font? I search nothing on the document. Thanks to https://github.com/jcubic/jquery.terminal/pull/381\nchange to font-family: Consolas , soluted.\n. \nI checked dev tool,  font-family: \"Droid Sans Mono\", \"Courier New\", monospace; is strikethrough.\nand I don't know why = =\nAn other error in console:\n\n. There's one extension (Allow-Control-Allow-Origin: *) in my Chrome, and the incognito mode not work :(\n\nIn addition, Firefox 63 font issue same as Chrome 72, but IE 11 is OK, all 3 browsers in my windows 7.\n. No, it's no use. :(\n\n. You are right, it's my system font problem, and https://www.cssfontstack.com/monospace shows bellow\n\nThank you for the discussion!. ",
    "bilogic": "Cool, it works!\nThere is a way for specify colors using echo\ne.g. [[!guib;;]some text]\nPossible to make the BACKGROUND optional? \nThank you.. To answer my question, just leave the BACKGROUND color empty, e.g. [ib;#f00;].\nNote: remember to leave the last semi-colon there, otherwise the format string gets echoed as text. The sequential way is to load prompt URL inside response\nThanks!. Hi, using response led to more problems. Would you be able to help with the original request? \nThank you.. I do have a link.. but it requires a password etc\n. \nThis probably best shows what is happening after 1 RPC command is sent\n1. Why do they start together?\n2. Why does prompt.json get called a 2nd time?\nMy prompt option is as follows:\nprompt: function (callback) {\n    $.ajax({\n        type: \"GET\",\n        url: \"{{ url.prompt }}\",\n        dataType: \"json\",\n        async: false\n    }).done(\n        function (data) {\n            callback(data.prompt);\n        }\n    );\n}. Hi, \nIn case I wasn't clear enough, I'm looking to make fetching prompt's URL sequential because it contains dynamic session data which can change based on the RPC command issued, plus Laravel's sessions are not locked.\nWhile it is possible to switch to locked sessions, that comes with a performance hit.\nAlso with dynamic data, it is impossible to show the correct data if prompt is loaded before the RPC is complete.\nThank you.. Hi,\nI assume you are using PHP's $_SESSION.\nIt is blocking by default aka locked, i.e. when RPC has called start_session(), prompt's start_session() will not run until the RPC has ended. I'm using Laravel's session (which does not lock) as it offers better performance. As such, you won't face my issue.\nI tested using $.jrpc:\n- prompt and RPC's URLs are still firing together (I would like prompt to fire only after RPC has ended)\n- No option to pass CSRF token to $.jrpc (Maybe you can consider adding this for security)\nI'm going to try the pause and resume now and update my results. Thank you.\n. Hi,\nI managed to get what I wanted. Here is to tie a few loose ends:\nMake prompt fire only after RPC has ended\n\nI surrounded the following 3 lines with if (tmp == \"\") { ... }\nhttps://github.com/jcubic/jquery.terminal/blob/a476bdd0c314617b5cbab7be058e72ed060ca303/js/jquery.terminal.js#L1382-L1384\nprompt currently fires twice, first, together with RPC, and again after RPC ends (refer to chrome network logs)\nIf the user presses ENTER without any command, we will fire the first prompt (as RPC will not fire)\nIf the user presses ENTER with a command, we do not fire the first prompt and let RPC fire  prompt after ending\nIn both cases, prompt is fired only 1 time.\nI appreciate if this can be added to the library.\n\nAJAX with async: false\n\nThis causes the AJAX not to return until it's done() is finished\nIt has little effect on terminal, probably just a slightly longer delay\n\nThank you for the time and help!. Hi,\nI did not send the link as I had solved it. Let me test your pause()/resume() and update shortly. Thank you.. Would you have an example of where to call pause()/resume()?\nI wrote:\nprompt: function (callback) {\n    terminal.pause();\n    $.ajax({\n        type: \"GET\",\n        url: \"{{ url.prompt }}\",\n        dataType: \"json\",\n        async: false\n    }).done(\n        function (data) {\n            terminal.resume();\n            callback(data.prompt);\n        }\n    );\n}\nIt causes an infinite loop. terminal.resume() => prompt => $.ajax => .done() => terminal.resume(). Here's the terminal portion:\n```\noptions = {\n    // height: 500,\n    login: false,\n    greetings: \"Welcome\",\n    tabcompletion: true,\n    processArguments: false,    // don't convert numbers to integers\n    request: function(jxhr, request, terminal) {\n        if (csrfToken) {\n            jxhr.setRequestHeader(CSRF_HEADER, csrfToken);\n            jxhr.setRequestHeader(\"Accept\", \"application/json\");\n        }\n    },\n    onAfterCommand: function(command) {\n    },\n    response: function(jxhr, response, terminal) {\n        if (!response.error) {\n        //      csrfToken = jxhr.getResponseHeader(CSRF_HEADER);\n        }\n    },\n    echo: function () { \n    },\n    onCommandChange: function (command, term) {\n        // console.log(command);\n    },\n    onIdle: function (term) {\n        term.resize();\n        $('#s').trigger('click');\n    },\n    completion: function (term, string, callback) {   \n        return true;\n    },\n    onBlur: function () {     \n        return false;\n    },\n    prompt: function (callback) {     \n        $.ajax({\n            type: \"GET\",\n            url: \"{{ url.prompt }}\",\n            dataType: \"json\",\n            async: false\n        }).done(\n            function (data) {\n                callback(data.prompt);\n            }\n        );\n    }\n}\nterminal = $('#pjax-main').terminal(\"{{ url.rpc }}\", options);\n```. Thanks for highlighting the deprecated functions.\nYes, I have used jquery.terminal for a long time now, I'm migrating to the latest and weeding out the old functions progressively. \nSince you now see two prompt requests, I believe we are on the same page :)\nThank you.. Thank you, I can confirm there is only 1 prompt call now.. Hi,\n\nI use a URL string, i.e. $('#pjax-main').terminal(\"{{ url.rpc }}\", options);\nBoth the prompt and result are returned via RPC, I suppose that means they are async?. Actually, execHash() does exactly and correctly what I need, but exec() behaves very differently. Also, I don't see execHash() using any value for setTimeout().\n\nIs there a way to run commands using exec() but have the correct output like execHash()?\n. Hi,\nI have emailed you the links.. Hi,\nThanks! I did add describe: false, in the options earlier, but jquery.terminal.js it threw an exception and I stopped pursuing. https://terminal.jcubic.pl/api_reference.php indicates that ignoreSystemDescribe is replaced since 1.5 . Hi,\n2 related questions:\n\nShould I open an issue for describe: false throwing exceptions?\nWhat is the purpose of enabling system.describe? i.e. benefits of having it etc\n\nThank you.. Hi,\nIf I bring up chrome's developer tools and Disable cache is checked, commands intermittently go out of sync. This is done with describe: false\nIf the developer tools is closed (implying Disable cache is unchecked), commands are in sync.. Just to add, it seems very hard to replicate out-of-sync in a normal Chrome tab even with DevTools + Disable cache checked.\nIf I load the same link in a fancybox's iframe, out-of-sync happens more frequently.\nFrom initial observation, it seems to happen if first few prompt/RPC completes before the iframe is shown on screen.\nAny ideas? Thank you.. "
}