{
    "dkulwin": "I seem to remember some difficulty getting Net command password prompts to work with redirected input.  I don\u2019t recall the specifics though.  I believe that the password prompt ignores redirected input and looks to get data straight from the console.  Using pipes as the IO with the cmd.exe shell will work with most things, but programs that utilize certain console calls will hang or just not work.\nFrom: manojampalam [mailto:notifications@github.com]\nSent: Thursday, October 8, 2015 11:41 AM\nTo: PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com\nSubject: [Win32-OpenSSH] Interactive commands not supported (#1)\nRepro steps:\n-   Open a remote ssh session (from windows client to windows server)\n-   do net use \\share /u:user\n-   type password but ssh never returns\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/1.\n. ",
    "manojampalam": "You are right. This is an issue with net.exe as it does not read redirected input. Thanks for the follow up .\n. Sshd can run as network service. While in this mode, only password auth is supported. To support key auth, sshd needs to run as Local System as it needs TCB privilege to generated user tokens corresponding to authenticated keys. \n. Validated\n. Verified.\n. Tested on latest binaries. backspace does work but does not reflect on the input password mask (I'm testing on Windows 10) - i.e the \"*\"s do not get deleted on a backspace stroke. This is not a pressing issue and we can take care of this later. \n. The latest release should have this fixed. \n. Validated. \n. If user home directory is ssh and openssh common practice, let's stick to it. Validated. \n. I see that the relevant code to abort server sessions is currently commented out. We can take care of it later. \n. Differentiating between stop service and restart service is not possible. I'll close this given similar functionality in Linux. \n. Merged\n. Those were test keys, now deleted.\n. https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples\nYou'll need to launch powershell as \"Powershell.exe -File -\"\n(you may need to \"Enter\" twice for some commands to return output. This is a known issue.)\n. Fixed in the latest release.\n. Yes. There is a plan to add this down the line - the SSPIs will, however, be used instead of other GSSAPI based modules (like MIT Kerb). Let us know if you have any concerns.\n. Fixed in latest release.\n. I've tried it without modifying that entry and it worked fine. What's the OS on server?\n. We are still evaluating security implications of mapping domain accounts with keys that are not associated with AD. This may bypass AD security model. In Windows world, relevant scenarios are implemented by \"AD issued user certificates\". \n. Support for domain accounts is added in latest release 5_15_2016\n. Can you try these scenarios on the newer release?\n. Reactive if you still see any relevant issues \n. Try the latest release. \n. We are fixing this issue in the upcoming release (in ~3 weeks).\n. Fixed in latest release\n. Try out the latest release.\n. Ok. We'll follow up. \n. ssh_config is user specific while sshd_config is system wide. Currently, it has to reside in the same directory as sshd.exe is in. \n. This is due to a limitation in how I/O is directed through cmd.exe on server side. We'll try to address this while moving the default shell to PowerShell.\n. Did not expect this to work :) What client are you using?\n. Expected. Tab completion wouldn't work yet. Share details on the different SSH clients and the different results you are seeing.\n. We are working on improving the interactive experience and terminal support. This should hopefully be addressed in the next release (in ~3 weeks).\n. Thanks for the quick feedback. We are following up.\n. See above for duplicate issue link.\n. We are working on improving terminal support. This should be fixed in the next release (~3 weeks from now).\n. Try the latest release.\n. Passphrase in host keys is not supported yet as it requires ssh-agent.exe. \n. Should work once #35 is in. \n. Currently, only RSA client keys are verified to work. Double check instructions at https://github.com/PowerShell/Win32-OpenSSH/wiki/Deploy-Win32-OpenSSH (Step 5)\n. I verified this on both release and key authentication does not ask for a password\n. We'll keep this in plan but this won't likely happen soon. \n. Looking in code, looks like it is supported but not enabled by default. Can you try playing with kexalgorithms option in ssh_config?\n. Did you try out the GitHub version?. We want the installation steps as simple and portable as possible. The installation guidelines tell you to copy the Zipped payload to Program Files, but yes you can have them at any location, including downloads, if you wish - and it should doesn't impact security a bit. SSHD service when it starts ensures the binary folder has the right security permissions. \nThe installation instructions talk about Deverloper Mode interference. Adding @joeyaiello to see if there is a better way to deal with this confusion. \n. Checkout the Win32 version of ssh-agent for OpenSSH. Available in latest release 5_15_2016\n. Double check that you did step 5 in https://github.com/PowerShell/Win32-OpenSSH/wiki/Deploy-Win32-OpenSSH\n. Ah, I see that you are using a domain account. I'll have to double check but I believe the current implementation does not support domain accounts for key auth. I think this is a due to restrictions in getting domain account tokens without a password.\n. ETA end of Feb\n. dup #17 \n. We will enable nightly builds by end of February\n. Nice. Thank you @DarwinJS.\n. Duplicate of #23 \n. Current release does not support scp.\n. Year end. \n. Hoping that #91 would fix this issue. \n. Try out the latest release and reopen if you still see this issue. \n. Thanks for taking care of this. \n. Yes. Add details on what your host server is, what files are you trying to edit and how (vi?) Also, what character map is missing?\n. Closing as dup of #90 \n. closing as dupe of #90 \n. By design for now. Will be fixed as part of making PowrShell the default ssh shell on Windows.\n. Closing as dup of #90 \n. Try out latest release and reopen if it still persists. \n. Looks like its not supported yet. \n. #140 \n. Tracked as #35 \n. Yes. Daily automated builds (and links to stable and latest builds) will come online end of February. \n. Try https://github.com/PowerShell/Win32-OpenSSH/releases/download/latest/OpenSSH-Win64.zip\nand\nhttps://github.com/PowerShell/Win32-OpenSSH/releases/download/latest/OpenSSH-Win32.zip\nI'll publish a new build from latest sources in couple of days. \n. See steps in Wiki on how to get automatic links to latest release packages\n. All Git related issues are being in #752 . This is now supported\n. According to http://www.punchingclouds.com/2013/01/30/esxtop-data-display-issues-with-osx-terminal-application/, it looks like we need Xterm support in ssh.exe (correct me if I'm wrong). If so, tagging this as a feature request. \n. script is part of build release and is not present in repo. Will not this while releasing next drop. \n. If you are taking about local admin accounts, try adding (or flipping) this UAC reg key and see if it works - https://support.microsoft.com/en-us/kb/942817\nAll other admin accounts (in build Administrator and domain users) should be elevated (reactive if see otherwise)\n. Yes, I see the issue in code. Interactive logon is tried first that will always result in stripped token. Try turning off UAC altogether to unblock for now (disable the group policy setting).\n. Point taken. Will fix this soon. \n. Fixed in latest release. Admin sessions will have admin privileges. This bit may need flipping though.\nhttps://support.microsoft.com/en-us/kb/942817\n. Currently not in plan. Will keep this open as a feature request. \n. script is part of the release package. Will fix it as part of next release\n. replace script in latest release\n. Yes, key authentication requires sshd to run with special privileges. Try installing it as a service (see wiki for instructions). \n. @OhsoGood, ssh connections need to be considered as network logon to play well with rest of Windows security. \n. The one in IoT core is a version implemented by Microsoft specifically to fill in certain immediate gaps in Developer experience scenarios. Long term goal is to replace it with OpenSSH version. \n. Stefan, that would be a question to ssh-copy-id owners :). It would need to have conditional logic to differentiate target OS and have the equivalent batch commands to do the id transfer. \n. The intention here is address the security concern around \"sshd launching malware injected arbitrary session process\". Sticking with cmd.exe keeps it plain simple. \nOtherwise we are trying to understand if there are any specific requirements mandating Powershell by default (apart from the convenience aspect). I see a drawback - its difficult to adjust Powershell session prompt (PS:>) to make it identify a remote session (like we do for cmd.exe). \nBTW, Powershell could be launched straight away as follows\nssh.exe -t user@target powershell\n. @Scrxtchy please open a new issue for what you are seeing. That's not expected (I don't see it on my end). Fill in the template and we'll take it forward. . Here's one proposal if its OK to change the default shell for all users. \nSupport a registry entry like this:\n\n. Already done. dup #330 . Its not there yet in the horizon. What would be your client/server side GSSAPI providers?. Did you have a prior install already? Try doing a sshd.exe uninstall first.\n. Not sure. What does git-upload-pack do and how does it work? Does it need authentication?\n. All Git related issues are being in #752 . dup #42 \n. Thanks for the script @h0rnman. I'll work on getting a static link this weekend. \n. Compression in currently disabled. You can it in a private build by setting WIN32_ZLIB_NO to 0 on config.h. This requires building and linking againt Zlib binaries though.\n. I don't think it does. Win32 port is built with compression disabled. The command line options is probably getting ignored.. These scenarios should work fine now. Please reopen if needed.. This is not possible now but is something we plan on doing as Windows alternative to passphrase management. Check back end of March. \n. ssh-agent for Windows now provides persistent storage for user's private keys. Checkout 5_15_2016 release for further details. The user keys are not only encrypted using data protection APIs but are also protected from malware attacks. \n. We do have VS support (just that wiki needs to be updated). Install VS 2015 Community edition and launch Win32-OpenSSH.sln at \\Win32-OpenSSH\\contrib\\win32\\openssh \nAlso, while you are at it, can you please update the wiki :) ?\n. OpenSSL needs to be built first (in VS or some other means that can generate needed static libs). \nhttp://p-nand-q.com/programming/windows/building_openssl_with_visual_studio_2013.html has relevant instructions.\nOnce the libs are generated, you may need to modify paths.targets file (Win32-OpenSSH\\contrib\\win32\\openssh), to fix paths to OpenSSL SDK. \n. contrib/win32/openssh/OpenSSL-1.0.2d_build.cmd provided by @dkulwin has steps built on similar lines that generates static libraries. \n. Cool. How did you end up building OpenSSL? \n. Thanks for updating wiki. \n. Try the latest build and reopen if you still see this issue. \n. Scroll back buffer is now retained. . Not any that I know. We are currently reviewing security around ssh-agent and the current implementation will likely change. will incorporate this feedback\n. ssh-agent is reimplemented for Windows as a OS service. check out 5_15_2016  release details\n. Please check milestone release and reopen if needed.. Please try out latest release and reopen if needed. \n. Thanks for the details. Arrow key processing is currently disabled in sshd, we were not able to get them to work as desired yet. Tab completion ins't supported yet. We plan on addressing terminal issues some time in May. Please continue to detail any workarounds you find in the mean time. \n. ssh.exe only supports VT100 sessions. Ensure that your server side shell is configured to process VT100. Reopen if needed. \n. We'll investigate and see if its a low hanging fruit to get it online. Investigation will be done my May-End but there isn't any guarantee if this can be supported by that milestone. . use Ctrl+Pause/Break\n. This is a current work around. We're planning on fixing this in May. \n. Please test out the latest release. Reopen if needed. \n. key auth now works with domain accounts\n. dup #17 See that issue thread for updates\n. This will be covered as part of #90 \n. Can you try the latest build?\n. they now appear in the same directory where SSH binaries reside. \n. We are working on #91 . Hopefully, this gets fixed. \n. Try the latest release. It has a more reliable transport.\n. Should be fixed now. \n. SFTP now support Unicode file names . Did you try it the UI way, Right-Click, properties, security....\n. If you are using the latest build, try checking for sshd.log in both system32 and in sshd.exe's folder.\n. Will fix it next release. Server shouldn't report zlib when it does not support it.. Currently not supported. Will keep this request open but there is little chance this may get addressed this year. \n. I'll try it out and let you know. \n. Can you try the latest build? I just verified on Win7 SP1 x64 and key based auth using RSA keys works just fine.\n. Feel free to open if it doesn't work\n. Makes sense. Let me see if there is a way multi tag a single release in GitHub. If that's not possible, we may need to duplicate. \n. Looks like I've abusing GIT tags so far :). I've fixed it. From now on, this URL https://github.com/PowerShell/Win32-OpenSSH/releases/latest/\nresolves to a link to the latest release. Ex\nhttps://github.com/PowerShell/Win32-OpenSSH/releases/tag/2_25_2016\nThe actual payload is at\nhttps://github.com/PowerShell/Win32-OpenSSH/releases/download/2_25_2016/OpenSSH-Win64.zip\nSo, it takes a bit of URL and string manipulation to get the download link but tags once created will remain static going forward. Hope this helps. \n. Latest download links can be obtained in Powershell as follows:\n$url = 'https://github.com/PowerShell/Win32-OpenSSH/releases/latest/'\n$request = [System.Net.WebRequest]::Create($url)\n$request.AllowAutoRedirect=$false\n$response=$request.GetResponse()\n([String]$response.GetResponseHeader(\"Location\")).Replace('tag','downloads') + '/OpenSSH-Win64.zip'\n([String]$response.GetResponseHeader(\"Location\")).Replace('tag','download') + '/OpenSSH-Win32.zip'\n. Above instructions added to wiki https://github.com/PowerShell/Win32-OpenSSH/wiki/How-to-retrieve-links-to-latest-packages\n. Leave a comment\n. This should have gone away by now. Reopen if needed. . This is by design. Mapped network drives are associated with a logon session. SSH remote sessions are created with an associated network logon session (these are independent of other logon sessions). \n. Known issue. See release notes. \n. tracked under #189 . This should not be the case with latest release. Reopen if you see otherwise\n. dup #154 \n. Try out the latest release. I believe this is due to using 32-bit stat before.\n. Agree. Will consider this as part of security enhancements.\n. dup #156 \n. We'll have an official installation package later. \n. Yes, we are aware of the latest version released in Feb. We have integrated the security critical roaming related bug fix. Integration of rest of features will happen likely in May.\n. Can you try out the latest version?\n. Thanks for testing it out. I can see the same issue on 2012 R2. Will fix it and issue an update tomorrow.\n. Try it out with 1.1 versions I just uploaded\n. dup #526 . Home directory of the user is pulled from registry \nLocation: SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\--USERSID--\nKey: ProfileImagePath\nCan you please add details on how exactly home directory is being configured for a local user?\n. OK Thanks. \nWhile I figure out how to programatically retrieve \"HOMEPATH\", I'm contemplating whether we should rely on it. \nCurrently, we store user's ssh configuration under user's profile, on the assumption that it would be deleted once the user account is gone (note that it will contain sensetive information like user's keys). Getting \"homepath\" on board will lead to confusion down the line, should \".ssh\" be stored under user's profile directory or \"homepath\". What should \"~\" resolve to ? What about user's other libraries - pictures, videos... that are found under profile directory (by default). \nThoughts?\n. Will take a look at how FTP in IIS works. \nI want to point we would like to be as close as possible to how OpenSSH works on Unix. OpenSSH currently ends up creating the user's profile if user has logged on for the first time (via ssh). We ought to have a default user directory because that's what OpenSSH core code assumes and relies on. And we prefer this is something that automatically gets cleaned up when user account is deleted. . Thanks for finding this. If this is the case, with the new update, you'll observe that the log bloats pretty quickly (transport Debug3 are very verbose). Please keep deleting it often. I'll work on a fix and try to get an update next week.\n. Fixed in latest release\n. dup #469. Leave a comment. With the latest version from 3_19, the remote session should be admin-capable. You may need to flip this bit though - https://support.microsoft.com/en-us/kb/942817\n. Feel free to reopen if needed.\n. Try the latest release and reopen if needed\n. Its understood that the terminal experience is very primitive at this stage. The implementation for interactive shell in the current version is a stop gap solution, expect a better terminal by end of May.\n. Arrow keys have been disabled on sshd side for a while now. Not sure how they ended up working for you. Anyway, as I said, please bear with these limitations for now.\n. Yes, please bear with this experience for now. We are working on getting the experience right.\n. This is a known issue. I'll look into this as part of security enhancements\n. This should now work for both local and domain accounts (all key types are supported). Ensure that your *config files are set to allow your key types.\n. Absolutely. Please do a pull request. \n. Apologies for the delay. This thread was off my radar as it was closed. Can you add it the repo and send me a pull request? I'll extract out its contents and add it to wiki.\n. Loading user profile logic was modified so, the pull request is not necessary anymore. \nOtherwise, failure to launch sessions when running sshd in interactive mode is being tracked as\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/207\n. Its a known issue. SSHD executes the cmd directly, instead of processing it in a shell. i.e, it is trying to run dir.exe rather than \"cmd.exe /c dir\". This will be fixed as part of refactoring effort by end of May.\n. do \"cmd.exe /c dir\" instead of \"dir\"\n. dup as indicated above\n. Try the following:\nPowershell -File -\nThat's telling Powershell to redirect its IO streams through std IO. \n. This is explained in https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples\n. the 'new line' should work better with the latest version. I put in a work around for now.\n. scp is not functional in March release. If you have scp.exe from previous versions, it might not play well with rest of binaries from latest release. \n. Please detail the exact format of user names being used. Try if it works on the latest release. Reopen if needed\n. I put in a workaround for this in the latest version. Try it out. \n. I've tried it on my end and was able to transfer files upto 10 GB. Try the latest version/\n. Can you try the latest release and reopen if needed?\n. Not really. Ubuntu runs in an isolated sub system and cannot be used to manage its host Windows OS. As I see, ssh in Ubuntu user space complements Win32-OpenSSH as it provides a window (ssh client on Ubuntu connected to sshd on Windows) to interact with host OS.\n. What's the key type? Currently only RSA keys work for client key-based authentication. \n. error 1300 maps to \"Not all privileges or groups referenced are assigned to the caller.\"\nI believe you are trying to run sshd.exe interactively. Instead try installing it as a service (see wiki for instructions). That should fix your issue. \n. Reopen if you still see issues with latest release. Now domain accounts too are supported. \n. Added @ https://github.com/PowerShell/Win32-OpenSSH/wiki/Win32-OpenSSH-Automated-Install-and-Upgrade-using-Chocolatey \nand put in a link on the very first step of install instructions\n. Also, the latest installation steps include using ntrights.exe (picked up from 2003 resource tool kit and packaged in zip) to adjust privilege assignments. I'm looking for a non-ntrights alternative.\n. See if https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps can help. Reopen if needed\n. AFIAK, there's isn't cat-like tool for Windows that can mimic this over SSH. \n. OpenSSH for Windows will not include a bash implementation on server side. You need to rely on third party bash for Win32.\n. Yes. This is in plan. Will likely come towards year end. \n. This is currently not supported. \n. Tagging \"bug\". Will be tracked as part of setup work\n. dup #122\n. Try out the latest release. All native Windows console apps (including Powershell.exe) should work now over remote ssh sessions. . WORKAROUNDS\nOpen regedit.exe\nNavigate to HKLM\\System\\CurrentControlSet\\Control\\Lsa \nDouble click Authentication Packages\nAdd ssh-lsa (at the end of other listed packages)\n==================\nThis earlier workaround worked for many but caused issues to some (don't really know why, I was not able to reproduce). Use with caution. \nTo install\n- reg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v \"Authentication Packages\" /t REG_MULTI_SZ /d msv1_0\\0ssh-lsa -f\nTo uninstall\n- reg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v \"Authentication Packages\" /t REG_MULTI_SZ /d msv1_0 -f\n. ssh-lsa.dll has been deprecated, issues listed above are no longer applicable. #140 \n. Adding this to backlog list. . Not yet and this is still not in radar. chroot for Windows is a non-trivial feature and its kind of complicated to make it fool proof (since Windows natively doesn't provide this option). . @whereisaaron totally understand the limitation and thanks for the potential design options. Again, since chroot is not supported by Windows natively, it would require some effort to ensure a secure alternative. For ex. how to block indirect access to \"outside\" files through links. \n. #292 for other additional feedback. . FYI, we have changes in pipeline to support SFTP with chroot\nhttps://github.com/PowerShell/openssh-portable/pull/308. Yes, just tried this with v7.7.0.0, it works\nMatch User test\n    ChrootDirectory c:\\temp\n    # Disable tunneling, authentication agent, TCP and X11 forwarding.\n    PermitTunnel no\n    AllowAgentForwarding no\n    AllowTcpForwarding no\n    X11Forwarding no\nSee https://github.com/PowerShell/Win32-OpenSSH/wiki/sshd_config for Windows specific rules. This is due to a internal enforced limit. This can be upped a bit more but making it boundless requires a multi threaded solution that I would like to avoid. \nA work around would be to make a copy of ssh.exe and ssh_config in a separate directory, split LocalForward directives between ssh_configs and run separate instances of ssh.exe\n. @nkrepo there were no changes in the limit. Can you share your repro steps?. Try with -4 parameter. My guess is you are ending up listening on IPv6 address too for each forwarded port. That will double the number of sockets you are listening on. . Sorry, we haven't tested it on Vista. \n. Can you please check if this still reproduces on the latest version and reopen if needed?. dup #241 . Reopen if needed. Please try out the milestone release. Reopen if needed. \n. #122 \n. mingw build is currently broken. Can you use the VS option instead?\n. #106 \n. Haven't  tried it on Express. Community works great for sure.\n. you can execute a single command by doing \nssh ..... [command]\n. At this point, no. You'll have to run each command individually in a separate session. i.e you need to run ssh ... [command] repeatedly. ssh.exe can automatically authenticate if configured to use key based authentication. \nAt a later point, when Win32 OpenSSH supports \"multiplexing master process\", you can create a session once (perhaps in a background process), and route each of your commands through the created connection. \n. Typically happens when either\n- sshd_config does not exist\n- host keys are not in place\n  Try these troubleshooting steps\n  https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps\n. This works if the user if given \"Replace a process level token\" privielege. Check if these steps help https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps\n. This was fixed a while back. . Thanks. I've fixed it.\n. this is taken care of by install-sshd.ps1. Updated wiki.\n. What OS are you seeing this?\n. Sorry, did not get a chance to look into this yet.\n. Looks like this is working now. Just tried from a Windows 7 box to Ubuntu target.. This is fixed in the updated paylaod\n. done\n. Fixed in latest release\n. debug1: Could not open authorized keys 'C': Access is denied.\nThis is an artifact of passing UTF-16 strings through SSH code. This will be fixed in the next month or so.\nBut otherwise, your issue is \"Access is denied\". Apparently, the user your sshd is running as does not have access to authorized_keys\n. Is this domain or local user? How are you issuing the ssh.exe cmdline? \n. On the latest release, Key-auth has been tested and validate to work in both domain and work group scenarios and for both local and domain accounts. (only local accounts were working previously).\nI recommend installing the latest release and retrying again. \nOtherwise, have you been installing ssh-lsa.dll (and rebooting) in your attempts so far?\nI will, as you recommended, create a training video over the weekend, on how to setup SSO via keys.\n. Yes. ssh-agent is supported in the latest version. (ITs not mandatory to store keys in ssh-agent, however).\nWhat was the issue before that was preventing key auth with local accounts?\n. Reopen if needed\n. Please try out latest release and reopen if needed. . Did you not find key-auth examples in here - https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples?\n. Refer https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Deployment_Guide/s2-ssh-configuration-keypairs.html\n. Feedback taken. Will fix it in next release.\n. Right. \n. Are you running sshd standalone or as service?\ncan you dump output of: \nnetstat -anop TCP \n. Reopen if needed\n. Restart is mandatory to register ssh-lsa.dll - (required to generate local user tokens without needing password). \nUnless there is a need to reinstall this dll, restart will not be necessary\n. Feedback taken. I'll update wiki on next release. \n. sshd certainly is not completely broken. All the steps detailed in wiki are tested and validated before release.\nSee if this can help: https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps\n. yes this is #207. Try doing this with included ntrights.exe\nntrights.exe -u  +r SeAssignPrimaryTokenPrivilege\nand log off, log in.\n. hmm. can you try this and restart sshd?\n ntrights.exe -u \"NT SERVICE\\SSHD\" +r SeAssignPrimaryTokenPrivilege \n. See release notes (c:\\windows is a  known issue that I'm working on)\ninstall-sshd.ps1 should have run ntrights.exe command. Was that not run?\n. Reopen if needed\n. I'll take a look at #218 this weekend. \n. Can you try out latest release?\n. It was a file offset bug in the POSIX wrapper that I had written. \n. Can you try out latest release?\n. Yes. Still working on \"how to securely load user profile\". Set them explicitly as a workaround for the time being. \n. ETA - 7/22\n. This was fixed a while back. Reopen if needed. . you are supposed to start ssh-agent as a service. \nnet start ssh-agent\nSee release notes\n. dup #225. \n. install-sshd.ps1 should work on Nano with March End release. Changes checked in L1-Prod. Releases going forward will have binaries versioned. \n. if jsmith is a domain user, you need to user the -l option. See wiki for usage examples. \n. dup #106 . SCP is not yet enabled on the new transport\n. Still facing this issue? Are you using local user account? If so can you make sure ssh-lsa is installed ? Reopen if needed. \n. Host keys should be stored as SYSTEM (that's how they can be secure :) ). SSHD is a low privilege account. SYSTEM@myserver is merely a tag/comment that should not have any impact. \nI suggest trying out the steps again, the private keys can be deleted/moved once they are registered. In SSHD traces, we should see entries indicating that the agent would be used for the private key operations. Reopen if needed. \n. Public keys should still be kept in place. Private keys can be moved or deleted.. Can you check event viewer on why the service has stopped (in System log) ?\nIf its reported that the service terminated abruptly, it most likely crashed. I'll ensure to upload symbols for subsequent releases. We'll have to attach a debugger (https://msdn.microsoft.com/en-us/library/windows/hardware/ff551063(v=vs.85).aspx) and get a crash a dump.\n. Can you please update to the latest version and get a crash dump if possible?. Thanks. Let me try and re-produce. . Fix is at https://github.com/PowerShell/openssh-portable/pull/55. Will be available in Jan Mid drop.. #481 should  fixed in Jan-End drop. @hach-que, this thread has become to long to consume :). Can you please summarize what you've found so far and what needs to be looked into? Reopen once you do that please. \n. Thanks for the suggestion. I've included it and it will be available in the next release (in a couple of days)\n. @dud225 are you also using Server 2008 R2 ? can you guys check if you have any other program taking up TCP 22 port ? \nnetstat -anop TCP\n. This issue should be fixed by now. Please reopen if you still see it. Cannot repro this using Win32 client and deamon. Can you add more specific details ?\n. Please try the latest release and reopen if you still see this issue.. Thanks for the feedback. We'll consider it as part of Terminal improvement exercise we are going through. \n. How and where is the private key (from GIT or SVN) stored? \n. Please try out @dragon788 's workaround and reopen if needed.\n. Tried on the latest release and I see this no more. Reopen if you still see it.. Haven't gone through your complete report yet, but here are the design details -\nsshd.exe server process spawns sshd.exe worker process for each incoming connection. This worker process will spawn a subsystem process (sftp-server.exe, ssh-shellhost.exe, etc) based on the invoked session. \nYou'll similarly see a bunch of ssh-agent.exe processes. This is all expected and is designed such that we'll have the flexibility to reboot sshd (to consume config changes for ex) without interrupting existing connections/sessions. \nIf what you see does not make sense based on these details, reopen please.\n. is nigurr a domain account? If so check https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples for its usage. \nReopen if needed\n. https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps\nCheck and dump ssh-agent.log, it should have info on why key based auth failed\n. Is the user account local or domain? If local, ensure that ssh-lsa is installed. Follow steps in wiki. \n. @JINXz both following formats should work for both password and key based auth. \nCan you please share sshd.log and ssh-agent.log for success and failure cases?. I'm guessing the above problems are due to ssh-lsa.dll not being installed. \nCan you try out 0.0.12.0 (that does not require ssh-lsa.dll anymore)?. Is it a work group account or a domain account? \nWhat's the ssh command line you are using?. @mayo, if its a domain account, you need to specify the domain prefix, you can use any of the following formats\nssh -l user@domain ssh-host\nor\nssh user@domain@ssh-host\nor\nssh domain\\user@ssh-host\n. Reopen a new issues if you see any more issues with public key authentication.. Try it with one other user accounts. I'm guessing there is an issue with Administrator account itself (if password is valid)\n. doesn't look like an agent problem. Check your sshd.config and make sure the sftp subsystem is enabled and pointing to the right exe. Reopen if needed\n. Above are ssh-agent.log contents. What does sshd.log show?\n. By design. Mounted shares are specific to a logon session. SSH remote sessions are independent network logon session. \n. Please try out the latest release and reopen this issue with details on how it can be reproduced. . Reopen if needed. We have automated test case for remote forwarding and it seems to work . I'll fix this in next release\n. Reopen if you still see this issue. Does sftp autocomplete work in the Unix version of OpenSSH?\n. As per https://linux.die.net/man/1/sftp, there isn't a command option for SFTP. Are you sure this works in the Unix version? If not this would be a request for OpenSSH (not Windows specific). . Ensure server side sftp subsystem is enabled and pointing to the right exe. \nSet LogLevel to DEBUG to have sshd.log generated. \nReopen with logs if needed\n. Please try out the milestone release. Reopen if needed. \n. C:\\Users\\Marc.ssh\\authorized_keys should be \nC:\\Users\\Marc.ssh\\authorized_keys\nOther than that refer to https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples\nand https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps\nAlso look into ssh-agent.log for any pointers. \nReopen with log contents if needed\n. see #234\n. Thanks. Fixed the dates. We are picking up speed on this project and should have activity back again.\n. reopen if needed\n. reopen if needed\n. Please validate and reopen if needed\n. @bagajjal  is this expected?. reopen if needed\n. Reopen if you still see this issue with latest release.. Reopen if you still see this issue in latest release.. Please try out the milestone release. Reopen if needed. \n. Is this do-able in Unix?. Looks like something (Posh-GIT) is trying to start its version of ssh-agent process but picked up Win32-OpenSSH's version - these 2 version work in different ways. Try removing Win32-OpenSSH bin path from your %PATH% (reopen if needed)\n. Dup #295 \n. Try this - copy authorized_keys to %windir%\\system32.ssh\nIf after doing this, it works, its due to an issue with user's profile. \n. Reopen if needed\n. I've validated both local and remote forwarding before the release. Can you confirm if you see this problem with ssh.exe too ?\n. Closing this as the issue is with bash permissions.. All virtual service accounts should have this right enabled by default. Try again on a different on a different box and reopen if needed\n. Thanks Darwin. I'll check out behavior on Nano. \n. Please clarify. An example helps. \n. The only thing I haven't yet figured out is how to lock down the ability to then navigate out of that directory. \nThat would be chroot on Windows. Since this is not supported by OS itself, I guess it cannot be accurately implemented in Windows. \n. @NoMoreFood \nAbout\nNow I think an SFTP server without shell access could probably jail the user since there are no child processes to worry about and a limited set of functions that access the file system. I could look into doing this, but I think I'd want the maintainer to tell me there's a chance in hell of it getting merged before I went down that road.\nCan you elaborate? What does \"SFTP server without shell access\" mean on Windows? We dont spawn any children from sftp-server.exe.\n. If its just a matter of providing chroot functionality for sftp (and trusting existing sftp code), we could do it somewhat simpler:\n - as part of chroot() - set an environment variable (as you suggested)\n - write a validation method that tests input string against chroot'ed path (if set). \n - modify all file IO entry points (we pretty much over load of these APIs in posix compat layer for Unicode differences), run input path(s) against the above validation routine.\n - modify dirent APIs to respect chroot'ed path. \n. FYI, we have changes in pipeline to support SFTP with chroot\nhttps://github.com/PowerShell/openssh-portable/pull/308. See cipher.c\nifdef WITH_OPENSSL\n{ \"none\",   SSH_CIPHER_NONE, 8, 0, 0, 0, 0, 0, EVP_enc_null },\n{ \"3des-cbc\",   SSH_CIPHER_SSH2, 8, 24, 0, 0, 0, 1, EVP_des_ede3_cbc },\n{ \"blowfish-cbc\",\n        SSH_CIPHER_SSH2, 8, 16, 0, 0, 0, 1, EVP_bf_cbc },\n{ \"cast128-cbc\",\n        SSH_CIPHER_SSH2, 8, 16, 0, 0, 0, 1, EVP_cast5_cbc },\n{ \"arcfour\",    SSH_CIPHER_SSH2, 8, 16, 0, 0, 0, 0, EVP_rc4 },\n{ \"arcfour128\", SSH_CIPHER_SSH2, 8, 16, 0, 0, 1536, 0, EVP_rc4 },\n{ \"arcfour256\", SSH_CIPHER_SSH2, 8, 32, 0, 0, 1536, 0, EVP_rc4 },\n{ \"aes128-cbc\", SSH_CIPHER_SSH2, 16, 16, 0, 0, 0, 1, EVP_aes_128_cbc },\n{ \"aes192-cbc\", SSH_CIPHER_SSH2, 16, 24, 0, 0, 0, 1, EVP_aes_192_cbc },\n{ \"aes256-cbc\", SSH_CIPHER_SSH2, 16, 32, 0, 0, 0, 1, EVP_aes_256_cbc },\n{ \"rijndael-cbc@lysator.liu.se\",\n        SSH_CIPHER_SSH2, 16, 32, 0, 0, 0, 1, EVP_aes_256_cbc },\n{ \"aes128-ctr\", SSH_CIPHER_SSH2, 16, 16, 0, 0, 0, 0, EVP_aes_128_ctr },\n{ \"aes192-ctr\", SSH_CIPHER_SSH2, 16, 24, 0, 0, 0, 0, EVP_aes_192_ctr },\n{ \"aes256-ctr\", SSH_CIPHER_SSH2, 16, 32, 0, 0, 0, 0, EVP_aes_256_ctr },\n\nifdef OPENSSL_HAVE_EVPGCM\n{ \"aes128-gcm@openssh.com\",\n        SSH_CIPHER_SSH2, 16, 16, 12, 16, 0, 0, EVP_aes_128_gcm },\n{ \"aes256-gcm@openssh.com\",\n        SSH_CIPHER_SSH2, 16, 32, 12, 16, 0, 0, EVP_aes_256_gcm },\nendif /* OPENSSL_HAVE_EVPGCM */\n. dup #106 \n. Very valid ask. \nWe need to come up with something new and different for Windows. A potential option is to implement a query endpoint on each ssh-agent processes (each sshd has an associated ssh-agent process) . \n. Should be fixed as part of supporting Unicode in Windows\n. Please checkout milestone release. Please validate and reopen if needed\n. TCP Port forwarding is supported (is that what you are referring to ?). Make sure server side configuration is set to allow it. \n. Ah. VPN tunneling is not yet supported on Windows. It requires some interfacing work with VPN drivers on Windows last time I checked. This is listed in \"not in scope\" features here - https://github.com/PowerShell/Win32-OpenSSH/wiki/Project-Scope\n. Please try out the milestone release. Reopen if needed. \n. You can configure privilege that need to be assigned to a particular service process. \nTake a look at this service for ex: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\WinRM\nRegistry value: RequiredPrivileges\n. Yes. PKCS providers are not in scope yet. https://github.com/PowerShell/Win32-OpenSSH/wiki/Project-Scope\n. @RichardScothern, not at all. We can take any changes that are well tested and don't contribute to any major deviations in core source code layout . . Reworded subject to highlight the issue. \nI'm assuming you are using Windows local accounts (as opposed to domain accounts). Try the following:\n- ensure that ssh-lsa.dll is installed (not needed for domain accounts). \n- try creating a pub key file in Windows and compare it with the one copied from Unix. See if CR, LFs make a difference. \n. Working on updating the road map. Please check back next week. \n. Please try release from https://github.com/PowerShell/Win32-OpenSSH/milestone/4 and reopen if you still see this. \n. Looks like looging code is disabled for Windows. sftp-server.c line 2018. Can you try enabling it and see if it works?\n. If you login as admin, you should see sftp-server.log under logs folder. Thanks for thinking this through. This helps with Unicode work in pipeline. \n. Here's how the Unicode is supported in Windows version of OpenSSH in scp and sftp\n- All input from console is read as UTF-16, converted to UTF-8, \"\\\" converted to \"/\" and fed through OpenSSH core code\n- OpenSSH core code is still intact and operates on Unix style file paths\n- Output on console is still in Unix style. Since this involves some refactoring of core code, we'll work on this later.\nOtherwise, there is nothing in specific done to handle special charactors. Let us know if you have any concerns\n. Thanks. Fixed.\n. Up and running on https://github.com/PowerShell/openssh-portable V7_3w. ARM builds are now supported. @bingbing8 please document ARM x86 build instructions on wiki. . Yes, we are working on tab-completion\nDup #122 \n. I see what's going on. The remote session process within Nano is not associated with a Console. Remote Powershell Protocol has its own TTY protocol that is not connected to ssh.exe.\nThis is a Windows specific issue that needs some thinking. We may need to come up with a custom host for Powershell that will behave like a pseudo terminal for ssh.exe.\n. -T option now works with ssh.exe. Please test out your scenarios with the latest release and reopen if the issue still persists. . @DarwinJS AFAIK, stopping the services and setting them to manual mode should be sufficient. Port should be the only conflict between the two. They can work independently if they run on different ports. (they dont share binaries and configuration)\n. Taken care of as part of https://github.com/PowerShell/openssh-portable/commit/edd458a8faf7f75d4e58ac74b4081afe90cf7af5. @DarwinJS opened #444 to track this ask. . Done in PowerShell/openssh-portable V_7_3w. Sure. We can follow the same convention. I'll have the next package versioned 0.0.1.X.\n. Yes. 0 for all planned releases and date for any quick fix releases. \n. Sorry for the delay. I can stick with your proposal. I'll leave out the last position for packaging. \n. Thanks @marco-vaz. I'll put your script in repo and add a pointer in wiki. I'll make the privates keys to system32 and wow64 parts opt-in. \n. Added link to wiki. \nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH. Thanks. Fixed\n. I have tried installing in custom paths and it works fine. Make sure you run \"installsshd.ps1\" from the newer location. Also update sshd_config  and fix subsystem paths. \n. Reopen if needed\n. https://chocolatey.org/packages/win32-openssh shows a DEPRECATED tag. Is there an updated link?\n. done\n. dup #526 . supporting unattended \"Remotely adding a key\" is a significant security risk that malware can easily exploit. We don't plan on supporting this feature for Windows. (authorized_keys file will be locked out for remote logons, i.e no one can update them over remote ssh sessions).\nInstead, we are contemplating on auto-key registration feature - that works the following way:\n- user uses key-based auth - provides public key to server\n- server reject public key since its not authorized yet but keeps track of it and asks for user's password\n- user feeds in password (basic auth), once the server authenticates the password, it automatically registers the previously presented public key as an authorized one.\n- use can subsequently use public key for further authentication. \nAFAIK, there's nothing in SSH standard that would conflict this proposal.\n\"+1\" if you feel this would be a useful feature. \n. Related to #494 . Please try out the milestone release. Reopen if needed. \n. Are you sure you are using the latest version? sshd should not be calling LsaRegisterLogonProcess as it now runs in low privileged mode. \n. Yes. The server side changes do not work on Nano yet. Made a note of it in release notes. \n. Known issue. PTY on server side does not work on nano yet. I assume you are using an older build. \n. @rayhayes  is looking into it. dup #347 \n. I assume you meant C:\\Users\\user.ssh\\authroized_keys (\"\\\" after \"user\")\nOtherwise \nprofile:(null)) \nthat seems to be the problem. \nssh-agent couldn't lookup profile path for this user. What is a \"roll account\" ?\n. Thanks for investigating. Looks like scp.exe is always being used from within the installation directory. \n. This was fixed a while back. Try out the latest release and reopen if you still see it. Thanks for the follow up. ProxyCommand is not in scope for the initial integration. Updated here - https://github.com/PowerShell/Win32-OpenSSH/wiki/Project-Scope\n. This is not in the horizon yet. \nHow do you intend to use it? To support proxycommand, OpenSSH uses passing file descriptors over domain sockets. This concept does not exist on Windows. Even if we provide an alternative to doing this, the \"proxycommand\" application need to be aware of that specific protocol. . It would have been simple if OpenSSH just used stdin/stdout to stream protocol data. But that's not the case, it gets sock descriptor from \"proxycommand\" using ancillary data. This \"sock\" is subsequently used for protocol communication.\nLet me know if I am missing something. \n. hmm yes. I was missing the other option. Yes, it should be straight forward to enable it. I'll see if it could be done by next release. . ssh.zip\nTry this out. Implementation is slightly different from that in Unix - proxycommand is launched directly instead of in user's shell (since I've seen cmd.exe interfering with redirected io). Sure. Tentative changes are in https://github.com/PowerShell/openssh-portable/pull/268. Dont see any issues in the above traces yet. Not sure what's wrong. I'll spend some time next week.\nIf you want to explore, you could write a simple app that forwards traffic from/to stdio <--> port and use it as a proxy to sshd. \n. That line about getpeername is expected since, ssh is talking over a pipe. \nI'll try with netcat and see if I can find anything obvious.. Tried with netcat and see the same behavior that you detailed. The traces indicate that ssh.exe is not receiving any output from proxycommand.\nsshd traces indicate that it did receive the initial exchange from client - this proves that the input pipe from ssh to sshd via netcat is working\nI then tried with the following entry:\nProxyCommand C:\\Windows\\System32\\cmd.exe /c echo hello_there & sleep 5\nand do see this in the traces now:\ndebug1: ssh_exchange_identification: hello_there\nThis proves that return pipe from \"proxy\" to ssh is working too. So, at this point, it looks like an issue with netcat unable to write back to stdout (provided by ssh.exe). \n. Please reopen if you still need any clarifications.. Installation script should now put the rights ACLs on \"logs\" folder. . Please check milestone release and reopen if needed.. With the latest changes, you'd see only a single port - \"ssh-agent\", the name is still static and is by design. This acts as a \"known\" local endpoint that other ssh components can reach out for executive ssh operations. There is no synchronization associated with this endpoint, a squatting attack is not applicable. DOS is possible but can only be realized through exhaustion of system resources. \n. Agent endpoint authentication is done out of band (with agent listener process writing its process ID at a tamper proof location and (agent) clients validating server process against the agent's process ID (both should be the same).\n. Reopen if you still have any security concerns. \n. Issue understood and it needs certain fixes in shell hosting logic on server side. Its around server not respecting the (-t) PTY request flag. \nI'll try it get it fixed in Oct-End milestone. \n. You can also do \nssh -i private_key user@domain@host\n. Valid points. I pefer the deamon and agent logs to be in the same (binary) location. I would like to keep open the idea to potentially support multiple sxs versions of SSH (including different versions of Win32 OpenSSH). We can create a logs folder with appropriate permissions to solve the security issues.\n. Since https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v0.0.5.0\nLogging is done in %bin%\\logs folder where %bin% is installation directory. logs directory is ACLed to be writable only by admin and sshd accounts. \n. for first issue - Please ensure that sshd_config and host keys are in place before starting sshd\nfor second issue - ensure that user has this privilege - Replace a process level token.\nReopen if needed. Reopen if needed. This will be fixed in Oct--Mid milestone\n. Try https://github.com/PowerShell/Win32-OpenSSH/milestone/4 and reopen if you see still see it\n. What's the issue????\n. can you open bash on your target (or any shell that supports VT100)? I have seen issues with vi on CSH but it works fine in BASH.\n. Reopen if needed. Try latest release and reopen if needed. Are you still seeing this issue?. As mentioned in #553 domain lookup is done if the local lookup fails. \nAFAIK, ContainerAdministrator is a special virtual account (and we don't support virtual account logons yet over network).\nYou can create a new (Windows) user account on your container and use it for ssh remote access.. ssh-agent logs should be in ssh-agent.log under logs folder where you have your ssh binaries installed. \nIt should have a reason why auth failed. . Go ahead and create one. See if it works. . @DarwinJS, we eventually want to move to Windows ETW logging. For now, we are keeping all logging in the same folder to have the flexibility of hosting multiple versions of OpenSSH on the same box. . @erik-am I'm trying out a docker container now. . @erik-am Can you make sure you have ssh-lsa.dll installed?\nTry this out\ndel %windir%\\system32\\ssh-lsa.dll\nIt should say ACCESS DENIED (as that dll should be loaded by lsass.exe). \nIf you dont' see this, they you don't have it installed. To install, run install-sshlsa.ps1 from the release payload (and restart).. Sorry, lost track of this issue. A machine reboot is needed to load any new registered auth packages. ssh-lsa.dll has been deprecated and a reboot is no longer required for OpenSSH setup. Try out the latest release.  . You may launch powershell directly now. i.e without -File -\n. dup #419 . dup #469 . related to #478 . Thanks. Fixed\n. Yes, current console read code does a busy loop for reading console input. This is the reason behind CPU  usage. @rayhayes is looking into better options. \n. @hashhar please reopen a new issue if you still see the issue with sshd.exe. Console reset is needed to maintain it in sync with server side PTY. \nYou don't see this happen if a TTY/PTY is not requested. i.e when you do this.\nssh user@target cmd.exe\n. Looks like jbejanin is getting resolved to a domain. Are you sure there is no domain accessible by that name?. Yes. It could very well be the issue. Can you try jbejanin\\jbejanin and check if it makes a difference? \nIn any case, do open a new issue and copy these details. . Needs to be investigated why force command isn't working. ForceCommand is picked up in do_exec in session.c\n. Reopen if needed.. @joeyaiello were you able to repro it on your end?\n. Doesn't reproduce on the latest version (0.0.6.0). Fixed in milestone release. Authentication is done in agent. Verify and attach ssh-agent.log. See https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps\n. Thanks. Looked at the logs and found the point of failure. \nInvalid user eraxyz@ericsson.se from x.x.x.x\nNeed to investigate why sshd is unable to get user info for this particular user. sshd uses the following logic to get user info (in openssh-portable\\contrib\\win32\\win32compat\\pwd.c)\n            if (NetUserGetInfo(udom_utf16, uname_utf16, 23, &user_info) != NERR_Success) {\n                if (DsGetDcNameW(NULL, udom_utf16, NULL, NULL, DS_DIRECTORY_SERVICE_PREFERRED, &pdc) == ERROR_SUCCESS) {\n                    if (NetUserGetInfo(pdc->DomainControllerName, uname_utf16, 23, &user_info) != NERR_Success ||\nand this seems to be failing for a trusted AD User account. \n. Keeping this in radar for May-End release to see what can be done. Can someone provide the latest sshd and ssh-agent logs ?. Does this help: from https://github.com/PowerShell/Win32-OpenSSH/wiki/About-Win32-OpenSSH-and-Design-Details\n\u2022Authentication: ssh-agent will currently serve Basic and Key-Based authentication. It will be responsible for generating the client/user token once authentication succeeds. This includes: \u25e6key authentication - ensuring validity of public key mapping, validating a signed payload as part of client key based authentication and generating a Windows user token. Token generation is done using S4U for domain accounts and a custom SSP for local accounts.\n\u25e6Basic authentication - done using LogonUser.\n. I can help take this forward. Please reopen a new issue with the latest release (trouble shooting steps have changed). . Use this to retrieve product version:\n(get-item .\\sshd.exe).VersionInfo.FileVersion\n. dup #96 \n. ControlMaster is not supported on Windows yet. See https://github.com/PowerShell/Win32-OpenSSH/wiki/Project-Scope\n. Did you install sshd and ssh-agent services? See https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\n. ssh-agent is implemented as an OS service in Windows. Its needed both on client and server side.. see https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v0.0.2.0\nrelative sub-system paths. Relative Sub-system executables can now be picked up from installation root. Ex the following in sshd_config would work for sftp: \n\u25e6SFTP sftp-server.exe //sftp-server.exe will be picked up from sshd.exe installation path\n. sshd_config in latest payload is modified to reflect this change\nSFTP sftp-server.exe . key auth is done in ssh-agent. See wiki for trouble shooting instructions and how to get ssh-agent traces. 5924 09:56:53 947 debug1: unable to generate token for user myuserid\nThis is the reason it pubkey auth is failing. What is the user account type - domain or workgroup?\nIf domain, try out \n    ssh user@domain@IP\nIf workgroup, make sure ssh-lsa.dll is installed\n    Check step 8 in https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\n. I assume the following works too (as detailed in https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples)\nssh.exe user@domain host . As per https://msdn.microsoft.com/en-us/library/windows/desktop/ms740668(v=vs.85).aspx, this should be\nWSAEINVAL10022 \nInvalid argument.\nSome invalid argument was supplied (for example, specifying an invalid level to the setsockopt function). In some instances, it also refers to the current state of the socket\u2014for instance, calling accept on a socket that is not listening.\nCan you attach DEBUG3 logs from sshd? See https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps\n. Can you dump output of ipconfig /all ?. dup #606 . Due to security considerations, ssh-agent works a bit differently in Windows. Please see \"Privilege Separation and Security model in Windows\" in https://github.com/PowerShell/Win32-OpenSSH/wiki/About%20Win32%20OpenSSH%20and%20Design%20Details. Please add details. Or examples of how it works in Unix?. This is the long term plan, there are some blockers that still need to be investigated. #400 . Need details logs. Please check https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps\n. Works well in the latest release. Reopen if needed. Thanks for the details. Here's what I can iner:\nRemote ssh sessions are network logons. The specific resource hklm\\software\\microsoft\\WBEM\\CIMOM might be blocking access to network non-admins. If so you'll need to adjust ACLs on the resource. . @discodance1 is the issue specific to your test script, or is it that your non-admin is unable to execute any script?\n@fpqc agree with your obsevations and will check with console team. But otherwise, the implementation of ssh for Windows is consistent with security model of other Windows services. You get remote logons (with full admin privileges). \n. Server side Logs would help. https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps\n. Reopen if needed. Fixed in https://github.com/PowerShell/openssh-portable/pull/43. Will be available in next drop.. Fixed in milestone release. Fixed in milestone release. Did you check https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps ?. Reopen if needed. . Fixed in milestone release. @mochtu I'm looking at this issue now. Can you try out the latest version?\nCan you check if key based auth works from the same box (over loopback)?\nIf it does, can you generate DEBUG3 level traces and compare the success Vs failed logs?\nIf it doesn't, please attach ssh-agent DEBUG3 logs. . Fixed in milestone release. This is currently not supported but should work once AF_UNIX sockets support is added in POSIX adapter layer.. Try AllowUsers in sshd_config https://linux.die.net/man/5/sshd_config\n. Fixed in milestone release. Fixed in milestone release. Fixed in milestone. Windows auth is not supported yet. You probably meant user/pw (or Basic authentication). . check in \"logs\" folder. install-sshd.ps1 should have created it and set the right permissions. No?. can you dump contents of install-sshd.ps1?. Thanks @DarwinJS. I'll update the script. . Note that since v1.0.0.0, to keep host keys secure - it is no longer required to register host keys with agent (this requires psexec). \nWith the privilege separation in place, the host keys can simply be ACLed SYSTEM and Administrators only. . \"RoadMap\" link is now obsolete. Please follow https://github.com/PowerShell/Win32-OpenSSH/wiki/Project-Status\nOur first goal is to integrate back in OpenSSH main repo. We have just started on this and will update the above link on progress as we move forward. . @DarwinJS I dont think OpenSSH ever hosted binaries for any platform. Windows will be no exception. I should otherwise have an update on - how the official bits will eventually be distributed - by Mid Jan.. What OS are you seeing this on? and what's your Powershell version?\nAs a work around, you may explicitly grant RW permissions to the following account\nNT SERVICE\\sshd \non \"logs\" folder. Can you please dump the output of the following:\n$AdObj = New-Object System.Security.Principal.NTAccount('NT SERVICE\\sshd')\n$AdObj.Translate([System.Security.Principal.SecurityIdentifier]).Value. @jbaumbach were you able to work with earlier versions?. Thanks @friism. I'll test it out and update the release payload Tue morning PST.. @friism, I've manually merged your PR and updated the payload on https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v0.0.5.0.\nLet me know if this fixed the issue.. @friism, apologies for the credits part. I'm working on multiple branches with little relation between them and took in your change as part of ongoing manual merges. Add credits line now in latestw_all branch.\n@pvdhoef please open a new issue with the details you posted\n@jbaumbach looks like you what you are hitting is unrelated to the install failure. Please open a  new issue.\n. Can you see if setting sshd to run as SYSTEM gets you unblocked?\nsc.exe config sshd obj= LocalSystem. @pvdhoef  looks like recent changes in \"paths\" related logic caused a regression. To work around, please install at a location without any spaces. Ex C:\\openssh. Please share client and server logs.. dup #450 \nPlease check workaround in that issue. You may start sshd directly on command line as any user (Just make sure the user has this privilege - SeAssignPrimaryTokenPrivilege)\n. We are working through other issues that are breaking the validation system. Will put out a document on how the CI system works once that is done.. dup #493 . SSH remote sessions are run under the context of the client user. They are however network logon sessions and do not have user's credentials attached. DPAPI encryption and decryption only work with interactive logon sessions in general (or other specific logon sessions that have user's credentials attached), since these APIs actually use user's password to do the encryption  and decryption. \nUser profile is guaranteed to be loaded for the duration of the session. I dont think the issue you are running into is due to profiles (rather its becuase of the nature of remote logon session).\n. User profile is loaded in ssh-agent (the Windows version is Windows specific. Load up the solution in Visual Studio and search for \"LoadUserProfile\". For (1) Yes, with password auth, remote session has user creds. So DPAPI works.\nFor (2) you will need to pass password explicitly for each operation needing authentication. Ex \"net use\"\n. @challarao I assume Credential manager would be locked using user's credentials. So if you login via password auth, you should be able to access it. \nAs a security measure, you should run sshd only under its service account. . dup #259 . @zaufi what is your ssh client? and what are its \"term\" settings?. @Janareddy can you repeat you steps with included sftp client and attach logs?. Reopen with logs. . This is due to ga_* routines that are not yet implemented for Windows. (openssh-portable\\contrib\\win32\\win32compat\\no-ops.c). You can have ssh_known_hosts and ssh_known_hosts2 in the directory where ssh.exe resides. But currently there is a restriction that these files will be picked up only when ssh.exe is run from its bin directory. \ni.e if ssh.exe is installed in c:\\openssh then you need to do the following:\ncd c:\\openssh\nssh.exe ..... A fix for this issue would involve changes to OpenSSH core code, so plan on doing it after the initial integration back into OpenSSH main repo. Currently, the location of these files default to the following in pathnames.h\ndefine _PATH_SSH_SYSTEM_HOSTFILE           SSHDIR \"/ssh_known_hosts\"\ndefine _PATH_SSH_SYSTEM_HOSTFILE2  SSHDIR \"/ssh_known_hosts2\"\nSSHDIR is currently defined as \".\" in config.h.vs\nA potential way to fix this involves supporting a way to specify module path using a escape sequence (similar to '%d' (local user's home directory), '%u' (local user name)). \ni.e say %z refers to module path and SSHDIR defaults to %z\n. This is now supported with 1.0.0.0 release. Place it under %PROGRAMDATA%\\ssh. Fixed in https://github.com/PowerShell/openssh-portable/commit/654c18f96023b7d580d6048b84417cad66199645. This is not supported in Windows yet. \nDid you not see this log message in sshd.log or ssh-agent.log ?\nAuthorizedPrincipalsCommand and AuthorizedKeysCommand are not supported in Windows yet\nIf not, let me know. . Just tried adding these in sshd_config\nAuthorizedKeysCommand /c:\\windows\\system32\\cmd.exe\nAuthorizedKeysCommandUser admin\nand saw this line in ssh-agent.log\n10992 23:37:26 859 AuthorizedPrincipalsCommand and AuthorizedKeysCommand are not supported in Windows yet. MaxSessions related seems to be intact. So it should work for Windows. Can you give it a try ?. MaxSessions is a limit for #sessions over a single connection. What you are doing will end up creating multiple connections. (each sftp execution creates its own connection). \nWhat you need to do to test this is to use a ControlMaster. But since this is not supported in Windows yet, you need it test it out from a Unix client (to  Windows target) . Fixed in 1.0.0.0. @bingbing8 can you please take a look?. Looking into this. Thanks for reporting this. This will be fixed in Jan-End release. . We haven't seen this recently. We haven't seen this recently. . Thanks for finding the issue in code. Fix should be available in Jan-End drop. . Sorry to hear this. I don't know why this change would break the OS. I'll check and see if there is a way to revert it. . Use manual steps as mentioned in https://github.com/PowerShell/Win32-OpenSSH/issues/189. This is due to #485. Fix is in and will be available in Jan end drop.. I don't see any hint of sshd service getting stopped. In the traces you attached, the sshd worker process is getting terminated after the script execution, which is expected,\n5708 11:33:01 783 Disconnected from 10.8.174.117 port 44046\n 5708 11:33:01 783 debug1: do_cleanup\nThe main service with pid 29948 is still intact:\n 29948 11:33:01 783 debug1: zombie'ing child at index 0, 1 zombies of 2\n. Yes, same risk exists on Linux. \nReverted this change as part of https://github.com/PowerShell/Win32-OpenSSH/issues/611. Recommend asking this on OpenSSh dev alias. . This is due to mprintf related changes in OpenSSh main repo. These got recently ported and this issue should be fixed in March-End release.. dup #485 . Thanks @remittor for finding the issue and providing the fix. I'll have it available in Feb end drop. . Logic around spawn_child has been modified a bit and this should work from March-End release. Happens if the other side exist abruptly. Need client and server side logs to understand what's causing this. https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. Reopen with logs attached.. Tried adding the following to \"config\" project file but it does not seem to work. \n\\\n    \\\n \\. Since 99% of all the C source files indirectly rely on this header, regenerating this every time means that all the sources will be re-compiled on every BUILD.. Thanks. Not sure why it did not work when I tried earlier. Fix is in. . This is due to \nifdef HAVE_EVP_RIPEMD160\n{ \"hmac-ripemd160\",         SSH_DIGEST, SSH_DIGEST_RIPEMD160, 0, 0, 0, 0 },\n{ \"hmac-ripemd160@openssh.com\",     SSH_DIGEST, SSH_DIGEST_RIPEMD160, 0, 0, 0, 0 },\n\nendif\nHAVE_EVP_RIPEMD160 is not defined for the Windows project yet. \nDo you know if OpenSSL 1.0.2* supports this?\nIf so, its a matter of defining this in config.h.vs. Fixed in 0.0.9.0. Yes. This is by design and going by the rules of standard Windows security. \nIt basically prevents exploiting user's security creds on a compromised host. That said, the design only benefits key based authentication. Since for Basic (password) auth, a compromised host can intercept and steal user creds anyway.\n+1, if you feel that we should relax this restriction for Basic auth. . Basic authentication is now relaxed. You can do double hop with Basic auth. . This can't be changed for public-key connections, since the underlying Windows APIs don't give us that support. Unfortunately, Kerberos delegation is not coming anytime soon either. \nWe'll try to get Agent forwarding online in a couple of months - hopefully, this should help you a bit. \n. What shell are you using? Try using a bash shell.. @nightwish47 \nWe need you help to take the \"error in libcrypto\" issue further. We were not able to repro it on our side. \nAs a first step, we need to get hold of the stack that is throwing this error - SSH_ERR_LIBCRYPTO_ERROR. \nFor this, we need your help to do the following:\n- Download sources and compile them locally. Steps are here\n- We need to intercept when SSH_ERR_LIBCRYPTO_ERROR is getting returned from anywhere in the code. Here a trick that we could use:\nIn ssherr.h, replace this\ndefine SSH_ERR_LIBCRYPTO_ERROR         -22\nwith\ndefine SSH_ERR_LIBCRYPTO_ERROR_RETURN_CODE         -22\nand add the following definition\nint ssh_err_libcrypto_error_func();\ndefine  SSH_ERR_LIBCRYPTO_ERROR  ssh_err_libcrypto_error_func()\nAdd the following implementation to any of the c files\nint ssh_err_libcrypto_error_func() {\n     DebugBreak();\n     return SSH_ERR_LIBCRYPTO_ERROR_RETURN_CODE;\n}\nIf you have a postmortem debugger enabled on your machine (windbg.exe -I), any logic hitting ssh_err_libcrypto_error_func() would automatically attach to a debugger and we can get the crash stack. \n. Please try out the latest release, open a new issue with template filled, if you still see this issue. . Thanks for testing out the various combinations. Will look into it. . Fixed. Following should work (just like it works in Unix)\nssh.exe user@target dir \\\"c:\\program files\\\". I just tested the latest version on Windows 10 en-us. All of the above commands seemed to work. Can you try out with the latest version on your side?. Please share logs.. Reopen if needed. This should work with March-end release. . background execution is not supported in Windows yet. See https://github.com/PowerShell/Win32-OpenSSH/wiki/Project-Scope. Please reopen with repro instructions. . The check was removed and you shouldn't be seeing this anymore. Reopen if needed.. CHROOT is a UNIX feature that's not supported in Windows. \nSFTP subsystem (sftp-server.exe) on Windows ends up getting launched as your Windows user. You will need to use the standard Windows ACLing to control access to files (and other resources). . Fix involves changes to dirent.c. Ensure changes in https://github.com/PowerShell/openssh-portable/pull/47 are also incorporated if needed. . Can you check if its client or server side that made the difference? Try with 8.0 client and 9.0 server and vice versa.. Please get server side logs (DEBUG for a start). I have a feeling that #566 might be causing this. See if it goes away with 0.0.10.0. Reopen if needed. . @friism I can help take this forward if you're still seeing it. . Haven't worked with CloneZilla yet. It will help if you can explain how it works and how its related to SSH and SFTP. Sorry. Would like to help but cant think of any options. I believe CloneZilla experts may have a clue. Reopen if you still have any questions. . You may be hitting this issue - https://github.com/PowerShell/Win32-OpenSSH/issues/586\n. Can you try providing full FQDN in user name i.e user@dom2.dom1.com ?. Somehow the following logic in pwd.c is failing:\nif ((status = NetUserGetInfo(udom_utf16, uname_utf16, 23, &user_info)) != NERR_Success) {\n            debug(\"NetUserGetInfo() failed with error: %d for user: %ls and domain: %ls \\n\", status, uname_utf16, udom_utf16);\n        if ((dsStatus = DsGetDcNameW(NULL, udom_utf16, NULL, NULL, DS_DIRECTORY_SERVICE_PREFERRED, &pdc)) != ERROR_SUCCESS) {\n            error(\"DsGetDcNameW() failed with error: %d \\n\", dsStatus);\n            errno = ENOENT;\n            goto done;\n        }\n\n        if ((status = NetUserGetInfo(pdc->DomainControllerName, uname_utf16, 23, &user_info)) != NERR_Success) {\n            debug(\"NetUserGetInfo() with domainController: %ls failed with error: %d \\n\", pdc->DomainControllerName, status);\n            errno = ENOENT;\n            goto done;\n        }\n\nCan you try running sshd in debug mode\n- net stop sshd\n- In an elevated cmd.exe, run sshd.exe -d\nand see if you can get past this error? (It may fail due to other reasons down the line, but we want to check if we are able to retrieve user's SID\nAlso try running sshd as SYSTEM and see if it makes a difference:\nsc.exe config sshd obj= LocalSystem\nrestart sshd\n. You cannot access domain shares because of this - https://github.com/PowerShell/Win32-OpenSSH/issues/518\n. accessing a share (domain or not) involves authentication. Remote ssh sessions created using key based auth cannot do outbound authentication, hence cannot access any share. . Please continue double hop related discussion in #518 . OpenSSH does not work with OpenSSL 1.1.0 (since the API surface diverged significantly). . You can find OpenSSL build instructions here. Can you add logs from server side? steps here\nAlso, there's nothing at http://pastebin.com/rRnnxQms. ssh-sshellhost supports both modes. It depends on what the client requested.\nCan you check if you are hitting this issue - https://github.com/PowerShell/Win32-OpenSSH/issues/566. 'AuthorizedPrincipalsCommand' and 'AuthorizedKeysCommand' are not supported yet in Windows. See project scope here. Did you get 'AuthorizedPrincipalsCommand' to work. Currently its disabled in here\nlogit(\"AuthorizedPrincipalsCommand and AuthorizedKeysCommand are not supported in Windows yet\");\nin auth2-pubkey.c\nFunction subprocess() needs to be ported for Windows first. . Related to https://github.com/PowerShell/Win32-OpenSSH/issues/473\nI'll see what it takes to have this enabled. . Setting this for Oct-Mid radar to see what can be done. . Looked into this. The underlying implementation relies on fdopen support that does not exist in Windows POSIX adapter yet. And AFAIK, its not possible to add its support without modifying POSIX semantics - this means changes to core OpenSSH code that we are not prepared to do yet. \nSorry to inform that this cannot come until we take care of a whole bunch of other issues need for this fork to be accepted upstream.\n. Taking a look at this now. Can you elaborate how you modified User's properties?. dup #154 \nPlease add details on #154 . https://github.com/PowerShell/openssh-portable is being maintained in sync with https://github.com/openssh/openssh-portable. Last merge from upstream branch was 2 weeks back. So we should already be at 7.4. yes.. What was this list in success case?\ndebug2: host key algorithms: XXXXXXXXXXX\nCan you dump the full logs in failure case? I suspect sshd failed to load the relevant host keys for some reason.. Looks like you are using a pretty old version. This was removed a while back\n-> ModifyRightsToDesktop(mode = 0)...\nPlease update to the latest version. Reopen if needed. Related issues:\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/378\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/543\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/543\n. We have a fix in pipeline from @nomorefood.  This should be fixed in next release.. @nomorefood with the new group fetch logic in getusergroups(), local built in groups are being fetched in the form builtin\\group (ex. builtin\\administrators). \nDid you have any specific reason to keep the builtin prefix ? If not, can we remove it, to keep it consistent with \"user\" rules (local user have no domain prefix). This will also align it with how local groups are commonly used in various utilities\nEx. net localgroup administrators\n. @NoMoreFood let me follow up. \nI'm also facing one other issue. With the following entry:\nMatch Group administrator\nI'm getting up a 14 second delay on my enterprise box (my account has ~250 group memberships)\nI'm planning on doing the following optimization:\nIf the group name does not have wild cards, I'll resolve the name to SID and simply do a membership check against the token. This will avoid enumerating all the group names and save significant time. Let me do the change and I'll also address dropping BUILTIN as appropriate. Will update you when I have the changes ready\n. @NoMoreFood I see the impersonation mode accounted for Kerb S4U\ns4u_logon->Flags = (impersonation) ? 0x0 : 0x8;\nand not for MSV1 S4U. Is it intentional? Let me know otherwise, I'll fix and test it.. What release? AFAIK with the latest release, it should work wherever installed. \n. Thanks @jschvartz. Updated wiki. . dup #566 . Windows equivalent of open(dev/null) is CreateFile(\"NUL\"). Need to add support for open(dev/null) in the POSIX layer. We have fixed some issues related to hangs reading IO streams. Please test out the latest release and reopen if you still see this. . Can you check if the process id under the following\nreg query HKEY_LOCAL_MACHINE\\SOFTWARE\\SSH\\Agent\nmatches that of ssh-agent.exe process? If not delete the above entry and restart ssh-agent. This problem should go away in next drop as these checks were removed in code. . It should not. Do you have ssh-agent logs? Looks at Wiki Troubleshooting link.. https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps\nssh-agent.log should be there under logs folder. @DarwinJS yes please. . @coldacid do you still see this issue? Did you try out the latest version?. Thanks for your patience @coldacid. I'm working on this now.\nCan you dump the output of the following, in the session you are running ssh-add on ?\nset SSH_AUTH_SOCK. OK. I added additional tracing in ssh-agent.exe. Can you replace with the attached one and regenerate traces?\nssh-agent.zip\n. LookupAccountName is looking for \"NT Service\\SSHD\"\nCan you start sshd service and see what account its running under?\nYou could do this in Powershell\nPS E:\\temp> gps sshd -IncludeUserName\n    150       7376     0.22  21104 NT SERVICE\\sshd        sshd. You are right. Client side should work independently.  I'll fix this for next drop. For the time being as a work around - install the server side components too. . Fix for this included in https://github.com/PowerShell/openssh-portable/pull/121 and committed as part of \nhttps://github.com/PowerShell/Win32-OpenSSH/issues/681. We found some reliability issues with recent changes and will need time to do stabilization. This issue has been fixed but a drop wont be available till Mid May. Thanks for your patience.. Thanks for catching this. Will be fixed in next drop.. Looked into this. TEMP is set to user's TEMP directory if the user's profile exists. This is being picked up and set in setup_session_user_vars() routine in session.c as part of reading user's environment variables from user's profile in registry.\nIf there is a failure reading entries from user's profile, TEMP may be set to C:\\Users\\SSHD\\AppData\\Local\\Temp. However, there is no security issue here. C:\\Users\\SSHD\\AppData\\Local\\Temp is owned and ACLed to \"SSHD\" account only. Regular users wouldn't have permissions to read or write to this directory. \nPlease reopen if you have further concerns. . SSH Server Broker and SSH Server Proxy services were installed and running are a different and independent implementations of SSH (they do not support ssh-agent and its operations) see here\nYou will need to install OpenSSH bits from here. We'll investigate and see what can be done for May-Mid drop.. Authentication and token generation take place in ssh-agent. Please attach agent logs. \nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting%20Steps\n. Can you provide a practical user example? It seems that this is an issue within OpenSSH core source itself as the Windows fork doesn't have any special handling around channel message processing. Work around - try inserting a space in the command line to make it fall in (3x) or (3x+2) zone.. Since , we are not able to repro this on our side (and there are not logs to give us a clue), we need your help to take this further. \nAre you familiar with using VS 2015, if so, please download the express edition, attach to sshd.exe process (symbols can be downloaded from release page) and figure out the busy loop. \n. Based on your stack, looks like you are hitting the same issue as #606. Let's continue further conversation on that thread. I'm actively looking into this issue and we should hopefully fix this for March-End drop. . I'm assuming the server side has Win32-OpenSSH installed. Please add server side logs and reopen this issue.\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. Please explain how this is relevant to this project?. dup #355 . IS it specific to key based authentication? Does it work with passwd auth?\nIf so, this might me due to the change mentioned in:\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/494\nCan you confirm?. Please reopen with relevant details if the issue is still relevant. . @nkrepo unfortunately this is more than a bug fix. We need to implement a special PTY pipe between sshd and ssh-shellhost that would carry window change protocol data back and forth. Please check back end of March if this is not done by then. . I'll be looking into session refactoring soon and will be covering this. Thanks for your patience. . password authentication is done within sshd itself now. . @DarwinJS, as we discussed before, all logging would be done under logs folder under ssh binary path. This is for simplicity, easy discoverability and having flexibility to host multiple versions of OpenSSH side by side (Production Vs Evaluation version for example)\nThe \"Logs\" folder will be owned by \"Trusted Installer\" and will be Writable only by admins and \"NT Service/SSHD\". @Leproide please provide us with network configuration of your machine (masking out any private info where applicable)\nipconfig /all\nnetstat -anop TCP\n. @DarwinJS, clarified my previous response, I meant to imply that Logs folder will be created with appropriate permissions as part of the installation, just like any other system folder. . @Leproide Please collect sshd and Winsock traces from the same run. \nSteps to collect Winsock traces\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/bb892100(v=vs.85).aspx\n- Start tracing\nlogman start -ets mywinsocksession -o winsocklogfile.etl -p Microsoft-Windows-Winsock-AFD\n- Stop tracing\nlogman stop -ets mywinsocksession\n- decode traces\ntracerpt.exe  \u2013o winsocktracelog.txt \n. Oops. How long did you leave Winsock tracing on? Can you try again shortening the interval?. Still looking. Please attach the etl file too. Did you happen to have the corresponding sshd.log ?. @Leproide, @C-Duv , @sterling\nI just talked to a Winsock expert. Please follow these steps to collect some additional traces. These will unfortunately be much more verbose, so try keeping it as short as possible. Also share the corresponding sshd logs\nNew Tracing Steps\n  - netsh trace start provider=Microsoft-Windows-Winsock-AFD provider=Microsoft-Windows-TCPIP provider={EB004A05-9B1A-11D4-9123-0050047759BC} provider={0C478C5B-0351-41B1-8C58-4A6737DA32E3} report=disabled ov=yes tracefile=nettrace.etl \n  - Repro\n  - netsh trace stop \nAttach nettrace.etl\n. @Leproide, @C-Duv , @sterling\nCan you try out the attached package and see if it works (revert \"AddressFamily inet\" change in sshd_config)? This is with a private fix on top of March-End package. \nOpenSSH-Win64.zip\nOpenSSH-Win64_Symbols.zip\n. @Leproide do you see any other issues? Your logs seem OK to me. \nOtherwise, I'll include this fix in April-Mid drop. . IS this with the private I provided?\nPlease open a new issue.. This issue should be fixed by now. Reopen if you still see it.. We are tracking a similar issue here - https://github.com/PowerShell/Win32-OpenSSH/issues/606\nPlease post your findings on that thread\ndup #606 . Why is this happening?\nOpenSSh in Windows works over a single threaded POSIX adapter that does async I/O using APC based ReadFileEx and WriteFileEx calls. \nThese calls require the underlying I/O handles to be operating in Overlapped mode. \nWhen you do \n$o = ssh user@target hostname\nPowershell starts ssh.exe with a blocking stdout handle that does not behave well with the above *Ex calls. \nEventually, the WriteFileEx I/O operations waits for ever for the operation to completed (the APC call back is never called). . Thanks Wojtek. I updated https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH with a pointer to deal with this conflict on Windows 10. \n. @treii28 it looks like what you detailed is not related to the original issue on this thread. Can you create a new issue and add further details for us to take a look? . Closing this, since the original issue is understood and work around provide. . This is due to https://github.com/PowerShell/Win32-OpenSSH/issues/494\nDo you have an alternative solution to dealing with security problem in #494 ?\n. Not Right. SSH binaries will (eventually in the official package) be protected just like other OS binaries. \nAgree that a compromised client can authenticate and run a privileged task on remote target, but such actions are limited to from the compromised client. \nIf a key is injected, it would allow an entry door from any remote client. \nI'm looking for more feedback on how we should proceed. . @jhudsoncedaron I'm hearing you and am with you. This approach would only shut down an easy back door. \nWaiting for @LeeHolmes input on this. . I've followed up on this and we are in agreement that this restriction is an over kill. I'll revert the change in April-Mid drop and create necessary documentation around securing authorized_keys.. Please reopen if any additional info, you may have. . Can you share ssh-agent logs? See wiki for trouble shooting steps.. If you need key based authentication to work with workgroup (non-domain) accounts, it is necessary to run install-sshlsa.ps1 and reboot the machine. This unfortunately is a limitation of Windows security subsystem. \nThat said, I am working on alternative solution that might not need a machine reboot, but its not ready yet.. Thanks @clouds56. Merged your PR. . @NeoBlackXT see if https://github.com/PowerShell/Win32-OpenSSH/issues/690 helps. (assign needed privileges to sshd). Reopening this issue to track \"RegOpenKeyExW returned 5\". This is fixed as part of https://github.com/PowerShell/Win32-OpenSSH/issues/726. https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH . Retaining version on ssh-lsa.dll might cause confusion down the line. I'm attempting to get rid of this dll altogether. Will let you know how it works out. . @DarwinJS Good news. I've managed to get rid of ssh-lsa.dll altogether. There will be no reboot restriction on setup now. \nhttps://github.com/PowerShell/Win32-OpenSSH/issues/657. I'm guessing you don't have the host keys setup. Try doing \nsshd.exe -d\nand it should tell you why it wont start\nIf so, you'll need to do\nssh-keygen.exe -A\n. Reopen if needed. 0.0.12.0 removed dependency on ssh-lsa.dll and the need for a reboot. Please reopen if you have any questions. authorized_keys is used as part of key based authentication\nSee https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples\n. Please add a reference to the instructions used to setup Powershell over ssh in Linux. \nWas an explicit subsystem added for Powershell?. Thanks for the detailed report. I'll look into it. . I looked into this earlier and understand the issue. We'll have it fixed for May-End.. This logic is not moved to sshd and should likely now work. Need to validate. . Did you note this from https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v0.0.11.0\nNOTE - Breaking Change\n  - Due to a security issue that got fixed in this release, SSHD account now needs read access to \"authorized_keys. Otherwise pubkey authentication will fail. Do the following:\n $authorizedKeyPath = \"c:\\users\\user\\.ssh\\authorized_keys\"\n    $acl = get-acl $authorizedKeyPath\n    $ar = New-Object  System.Security.AccessControl.FileSystemAccessRule(\"NT Service\\sshd\", \"Read\", \"Allow\")\n    $acl.SetAccessRule($ar)\n    Set-Acl  $authorizedKeyPath $acl. It should work with UTF-8. Try saving the file in that format. . For workgroup/local accounts, you currently need to install ssh-lsa.dll. This restriction (and ssh-lsa.dll) will go away in the next release. . Reopen if needed.. Fixed as part of https://github.com/PowerShell/Win32-OpenSSH/issues/668. I looked into this. Apparently, docker is launching ssh with the following commandline:\nssh.exe -F /dev/null -o PasswordAuthentication=no -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none docker@10.123.171.161 -o IdentitiesOnly=yes -i C:\\Users\\manojamp.docker\\machine\\machines\\localhost\\id_rsa -p 22 \"exit 0\"\nThere are certain Unix specific elements in the command line (/dev/null) that are not mapped in the Windows port yet. Targeting a fix for April-End. . IPC for Windows port happens over Named pipes (compared to Unix domain sockets on Unix). SSH agents for Windows need to expose their end points over named pipes. \nSay if the agent is exposed over \\.\\pipe\\AGENTPIPENAME \nSSH_AUTH_SOCK should be set to AGENTPIPENAME\n. Cross checking - are you starting the service as an admin (in an elevated console) ?. Can you try using \"net start sshd\"\nAlso, can you dump the cmdline you are using (from Service management utitlities)?. As a work around, set your buffer rows to a big number (9999).. Thanks for catching this. The instructions on wiki page were obsolete. They are updated now. You don't need to run install-sshlsa.ps1.\nYou were not able to get ssh version probably because the installation path is not in PATH. . Thanks. Fixed. . I'm looking into this. . Found the issue. On the nanoserver docker image, SHGetKnownFolderPath(&FOLDERID_Profile) using the token generated by S4U for NTLM, is returning the system profile path\n- C:\\Windows\\system32\\config\\systemprofile\nI'll fix this in the next drop by avoiding this call and retrieving the user profile path from registry directly.\nThis is my dockerfile\n```\nFROM microsoft/nanoserver:latest\nADD OpenSSH-Win64 c:/openssh\nRUN powershell -executionpolicy bypass -file c:\\openssh\\install-sshd.ps1\nRUN powershell -c {cd c:\\openssh; .\\ssh-keygen -A;}\nEXPOSE 22/tcp\nRUN net user admin a /add\nENTRYPOINT net start sshd\ndocker build . -t m1\n```\n. We found some reliability issues with recent changes and will need time to do stabilization. This issue has been fixed but a drop wont be available till Mid May. Thanks for your patience. . If the user you are logging in as, is part of Administrators group, then yes, you will be an admin with elevated privileges. \nYou would need to create a restricted user and login as that user instead. . Please reopen if you have follow up questions. . Mitigation:\nAbove setup (client and server on the same box) is not of practical use. Avoid such setup. \nWrite tools that can identify and warn of such configuration vulnerabilities. \n. That's true. Running sshd in its own account provides isolation from other services running as Network Service. On the other hand, this requires additional configuration (setting up privileges on the service account) and potentially others that Network Service typically enjoys being a built in account. We are evaluating the security benefits Vs ease of configuration. \nPerhaps, running it as Network Service would be alright and secure on most systems and could be moved to its own service account on sensitive systems. . @DarwinJS service should be able to run under any context, as long as the account has the required privileges and permissions to open up network ports.\n. In the interest of security, SSHD service will continue to run in its service account context. . \n. 1314 - A required privilege is not held by the client.\nYou need to provide your account the following privilege \"Replace a process level token\"\nsecpol.msc\nLocalPolicies -> User Rights Assignment\nClick the policy that says \"Replace a process level token\" and add your account. Log off and log in.\nCurrently, due to logic around PTY support in Windows, only admins can successfully spawn off the session process. i.e you need to logon as an admin if you run sshd in interactive mode.. @razrjk RegOpenKeyExW issue is tracked here - https://github.com/PowerShell/Win32-OpenSSH/issues/645\nCan you open a separate issue detailing the git issue?\n. With changes in underlying architecture starting from 1.0.0.0, sshd needs to run as SYSTEM and the original restrictions detailed earlier in this thread are no longer applicable.. Key based auth or password?. I'm guessing this has something to do with what your script is doing. Remote ssh session are Network Logons. So, if your script is trying to access something that has explicitly denied access to \"Network\", you would be seeing this. \nA quick test would be to do the same via a remote PS session (that runs on Network logons too).. Reopen if needed.. @moribellamy please open a new issue with details. . Thanks @DarwinJS. I'll add the following details to the design doc on Wiki.\nRemote ssh sessions run under the context of the client user. Client authentication, be it password or key-based, results in the generation of a user token using which the remote session process is spawned. This means that in order to login via ssh, one needs to have a valid Windows account on the target. \nssh-lsa.dll removal is unrelated and should have no impact  on the what's detailed above.\nIf user profile does not exist, it gets created upon first logon via ssh. This would typically (in default sshd configuration) be via password based authentication (since profile does not exist for authorized_keys to be placed). There is related issue with user getting logged into %windir% upon first logon (though the profile gets loaded). This is tracked as #478 that will be fixed soon. \nWinRM Vs SSH - there should be no difference in the user capabilities within the remote session.\n645 is an unrelated issue.\n. @bagajjal how is incoming ^R interpreted by ssh-shellhost.exe?. @Rondom what's your TERM set to?. What's the exact entry in sshd_config? did it have a \"%s\"? As per https://linux.die.net/man/5/sshd_config, %s has no meaning. \nOnly the following are defined:\n%% is replaced by a literal '%', %h is replaced by the home directory of the user being authenticated, and %u is replaced by the username of that user. Reopen if needed.. Looks like you are using a pretty old version. Can you try out the latest drop?. Very likely. A lot of effort went into fixing bug fixes and cleaning up code. Please install the latest version and reopen if you still see the perf issue.. 3368 10:05:01 859 error: Couldn't create pid file \"./sshd.pid\": Permission denied\nthis is an unrelated issue and does not mean that SSHD account doesn't get created.\nWhat context is SSHD running as on your box?. What I meant is the user context the server is running as. You answer it - its NT Service\\SSHD.\nIs the service otherwise working fine (as NT Service\\SSHD)?\nIs the following log entry only concern you have?\nerror: Couldn't create pid file \"./sshd.pid\": Permission denied. Running SSHD as System is scary. We need to root cause this. Can you share you full client and server side logs?. @aduzsardi Please reopen this once you have the logs ready. As I said, running SSHD as system is a huge security compromise. . @XDTZ \nAre you sure this is your path C:\\Users\\myuser.ssh\\authorized_keys \nIT should be C:\\Users\\myuser.ssh\\authorized_keys    // \"\\\" after user name\n. The way path is output in logs is an aartifact of path differences between Windows and Unix. We have a bug tracking this (https://github.com/PowerShell/Win32-OpenSSH/issues/469).\nOtherwise, can you dump the output of the following:\nicacls.exe C:\\Users\\user.ssh\\authorized_keys\nAlso, is authorized_keys a dir or a file (It should be a file)\n. It most likely means that ssh has tried to authenticated using that key, server rejected it and ssh has fallen back to password based auth.. Ok. sorry, I misread your first post. Can you dump the client side logs using ssh -v ?. This is definitely not the client coming from this project:\nOpenSSH_7.1p1, OpenSSL 1.0.2e 3 Dec 2015\nCan you check where its getting picked from? do this\nwhere ssh.exe\nAlso check where ssh-add is getting picked from?\n. @bingbing8 this is due to open() not supporting \"mode\" parameter.. Thanks @Lonney for the detailed report. Can you try toggling SSH_TERM_CONHOST_PARSER as detailed in \nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH?\n@bagajjal do you have any input? I thought we fixed this. . Please see if https://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH can provide any clues and let @bagajjal know if it needs any updates/clarifications. . Ensure, sshd has read access to authorized keys. See wiki - https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples. \nReopen if needed. . You are using a pretty old version. Any reason for not upgrading to the latest?. @bingbing8 is following up. @DarwinJS we've pulled down 0.0.13.0. We coordinate with you on the work needed before we push it out again. . @kai-uwe-rommel we have relaxed the file permission checks on Windows for the time being. Feel free to use 0.0.12.0 (that should not have the problem you are seeing). . @DarwinJS, @bingbing8  is working updating the permissions related wiki.\nHere's the current design behind the permissions for \"Win32 OpenSSH\" ssh keys general (applicable to both user and host).\n\nBy default, a key is ACLed only to its owner. As a result, you'd see the following\nC:\\>whoami\nuserABC\nC:\\>ssh-keygen -t rsa -f id_mykey -P password\nC:\\>icacls id_mykey\nid_mykey userABC:(F)\nIf the key is to be used as a \"user key\" (for client authentication), no additional steps (to change ACLs) are typically needed. \nIf the key is to be used as a \"host key\" (key itself would typically be created by an admin as part of configuring sshd), following additional step would be needed:\nhostkey.pub (public key file) needs permissions adjustment to allow read (R) access to \"NT Service/SSHD\"\nIf the private key would be registered to ssh-agent (this is the recommended way to secure host private keys)\nSince the private key needs to be registered as \"SYSTEM\", adjust private key permissions to allow (R) access to \"SYSTEM\". (We should be able to skip needing this permissions change, by giving access to \"SYSTEM\" by default when creating the key).\n\n\nIf the private key is to be used by SSHD service directly\nChange its owner to System.\nAdjust private key permissions to allow (R) access to \"NT Service/SSHD\"\n\n\n\n\"NT Service/SSHD\" would never need, and should never have ownership or (W) privileges on host keys. \n. @DarwinJS please give us a couple of days to think through the end user implications. I'll get back with what we conclude and take your feedback before proceeding with putting this feature (permission checks) in. . @DarwinJS please check https://github.com/PowerShell/Win32-OpenSSH/wiki/Security-protection-of-various-files-in-Win32-OpenSSH (its not complete yet but wanted to take your feedback). @DarwinJS thanks for the quick and detailed review.\n\nI added the elevated and non-elevated section in an attempt to give a quick response to questions like - why is it not OK for an admin user to own or have access to host private keys? I'll remove that as I see it deviating from the topic\n\"Best Practices\" is great feedback. Will put that right at start. \nSSH-Agent is a service that runs as SYSTEM. The recommendation is to register the host keys to ssh-agent as SYSTEM and secure them (either by generating them with a passphrase in first place or backing them up at a secure location). \nWe wont be settling on the packaging and distribution model soon. For now, 2/3rds of users are relying on your Chocolatey package. We have a simple way to test out any Win32-OpenSSH installation in general (irrespective of how its installed). This will basically run the same set of tests that are run on every commit validation. @bingbing8 will share instructions and you could incorporate it in your package validation.\nI'll get rid of  get-acl .\\ssh_host_dsa_key | Set-Acl ssh_host*key  \nWill add OpenSSH-Health-Check powershell module as part of release payload that could be used for\nChecking compliance against Best Practices\nRecommendations to improve\nAutoFix if needed/requested. \nWe will ensure the above is tested on all platforms. \nPlease share your work Reset-SSHKeyPermissions. That would probably go in the above module. \n. @DarwinJS yes, the plan is to put the psm1 in OpenSSH folder. Thanks for enlightening me about the module registration conflicts. I think we can keep things simple by just providing individual ps1 utility scripts. I personally am not a huge fan of hiding configuration complexity behind user friendly automation scripts/utilities. Rather,  I believe in making the configuration natively simple and easy to understand in the first place. \nI really liked the idea of best practice patterns and I agree it will be very useful to provide a light weight utility that can cross check a configuration for a specific pattern, identify and report deviations and with admin's consent make the appropriate changes to get it in compliance. . Thanks for catching it. Agree that the title is odd and not appropriate. It creeped in from initial terminal prototyping work. \n\nI'll rename it to \"OpenSSH SSH client\", consistent with what this says. . See this. @remittor thank you for looking into this. @bagajjal will follow up on the proposed changes. . Did you mean that public key is not working until a user (any user) is logged in on the target? If so, is the logon an interactive logon?\nCan you add more details on how exactly to reproduce this?\n. @krombel thanks. I was able to repro this. LsaLogonUser is failing in ssh-agent. I'll see what can be done for May-End drop.. Apologies for the delay as we were hung up with penetration testing. Will look into this for Aug-Mid drop. . I have debugged the internals of this issue (specifically lsass), and see that this is stemming from msv1_0.dll. From what I know, this should only impact workgroup accounts. Let me know if domain accounts are impacted too.\nI'm adding a workaround in ssh-agent for now while I discuss this with security team. . see https://github.com/PowerShell/Win32-OpenSSH/issues/784\nthe last response has a workaround for your problem. . @joeyaiello can you please try it out with the latest release?. Thanks for validating. dup #666 \ncheck https://github.com/PowerShell/Win32-OpenSSH/issues/666 and reopen if needed. . No. Take a look at https://github.com/PowerShell/Win32-OpenSSH/issues/318\n. shared detailed server side logs - https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. Reopen with relevant details. . ssh-lsa is obsolete and is not needed anymore.\nThe reason for the failure is this log entry in ssh-agent.log\n12724 09:12:35 576 debug1: unable to generate token for user zorro\nCan you ensure that the user account hasn't expired? Try resetting its password.\n. Sorry to hear that. Please share your OS details. We'll see if we can reproduce on our side. . Please reopen with appropriate logs if needed. . This is strange. Do you have any anti-virus programs installed on your computer that might flag ssh binaries as malicious?. Thanks @DarwinJS for thinking through upgrade scenarios. \nRegarding fixing up of individual file permissions, I assume you are referring to ssh_config and user's key files. If so, these are strictly client side (host would have no impact). \nThe only user specific file that applies on host side is authorized_keys - this is taken care of in FixHostFilePermissions.ps1\nLockout is a serious concern, I've added a warning to release notes for now. I understand that your Chocolatey package covers upgrade scenarios, we can work out a solution to prevent this issue - an explicit call to FixHostFilePermissions.ps1 along your upgrade path can help. Let us know how we help validate possible solutions and investigate related issues. We'll prioritize accordingly.  . We have contemplated on this approach. Since v0.15.0.0 does not include any major bug fixes otherwise, we are relying on this release to identify possible issues with fixing file permissions.\nGiven our timeline, it would be difficult to device an evaluation strategy to identify such issues. The included utility scripts should suffice making host side changes. That said, we understand the breaking changes involved and will be pro-actively involved providing fixes and workarounds as they arise. . @lucastheisen we'll have a solution for this in next release.\nFor now, you'll need to use icacls.exe to set the appropriate permissions as detailed here - https://github.com/PowerShell/Win32-OpenSSH/wiki/Security-protection-of-various-files-in-Win32-OpenSSH \nSee section on authorized_keys\n. We'll see what it takes to support this feature. Expect an update by June-Mid . Looked into this. It looks like OpenSSH doesn't support the SSH standard way of letting client change user password - (see SSH_MSG_USERAUTH_PASSWD_CHANGEREQ in ssh standard)\nOn Unix, it does it by explicit prompt over interactive session - check do_pwchange in session.c. This inherently is tied up to fork() in Unix and cannot be replicated on Windows. \nThe ideal way to support this on Windows would be by supporting the SSH standard (SSH_MSG_USERAUTH_PASSWD_CHANGEREQ), and this requires both server and client side changes. . Yes please.. Yes please.. Thanks for the detailed report and proposed changes. Found some details here on how to setup Git server using over SSH  - https://www.systutorials.com/366/set-up-git-server-through-ssh-connection/\n. What repo are you working on? There were changes around this logic as part of fixing https://github.com/PowerShell/Win32-OpenSSH/issues/658\nTake a look at the PR, binary streaming over stdin should work with the latest changes included in v0.0.15.0. . @razrjk please submit a PR on https://github.com/PowerShell/openssh-portable for the proposed changes. Also open a new issue for sshd.exe -ddd\nAlso add details on where you installed Git for Windows from.. FixHostfilePermissions.ps1 should have set the right permissions. \nCan you dump the permissions on each of your host private keys?\nicacls .\\ssh_host_rsa_key\nicacls .\\ssh_host_dsa_key\nicacls .\\ssh_host_ecdsa_key\nicacls .\\ssh_host_ed25519_key. Can you try running FixHostFilePermissions.ps1 again ? It should have added read permissions (R) to sshd account and should have removed entry for SERVERNAME\\Administrator.\nyou should see output like this:\nNT AUTHORITY\\SYSTEM:(F)\nBUILTIN\\Administrators:(F)\nNT SERVICE\\SSHD:(R)\n. you'll need to change the owner too (for each of the private keys):\nicacls .\\ssh_host_dsa_key /setowner system\non top of what you already did:\nicacls .\\ssh_host_dsa_key /remove SERVERNAME\\Administrator\nicacls .\\ssh_host_dsa_key /grant \"NT SERVICE\\SSHD\":(R)\n. Seems to work for me. Can you try running sshd in debug mode (sshd -d) and see if there are any issues/failures binding to other ports ?. What are the permissions on ssh_host_dsa_key? Is the error an artifact of some process using that file? Nothing should prevent an elevated admin from performing any operations on host keys. . @DarwinJS can you dump the output of \nicacls ssh_host_dsa_key\n@bingbing8 please add explicit access to AdministratorsGroup as part of FixHostFilePermisssions. That should cover any corner case scenarios where any of the files originally did not have an explicit ACL for this group. \n. @DarwinJS based on when we can settle on the utility script updates, we can make a decision accordingly - with our end goal being - GitHub release version and chocolatey version are in sync. \nIf we are done with script updates today, we'll update 0.0.15.0 zipped payload (since the binaries haven't changed) with the new scripts and along with updated instructions on the wiki. If this process bleeds into next week, we can as well plan on scheduling a simultaneous release of 0.0.16.0 for both Zipped and Chocolatey versions.\n. dup #774. Issue: Install script on Win7 fails to assign SeAssignPrimaryTokenPrivilege privilege  to sshd account \nWork around: \n- Open control panel and navigate to\n  - Administrative Tools >  Local Security Policy > Local Policies > User Rights Assignment.\n- Double click Replace a Process Level Token\n- Add NT Service\\SSHD\n. @bingbing8 this may be an issue in code too that does SID lookups based on account names and account name comparisons. Please follow up. . Reopen with details if this issue still persists. . Try doing the following in an interactive and elevated cmd.exe\nssh-agent.exe -ddd. Thanks. This is indeed a localization issue. We'll have it fixed in the next drop. Please use 0.0.14.0 for now (this release does not have the permissions restrictions yet). dup #771 . Is John.doe a domain account? If so can you try specifying in a format detailed at https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples\nDomain users: Domain needs to be explicitly specified. Any of the following formats work \nssh -l user@domain host\nssh domain\\user@host\nssh user@domain@host\nAlso, would you know how these 2 user Ids are associated - gary.lydeen and John.doe ?. The issue is with space \" \" in the subsystem executable path (ProgramFiles).  I checked the code and the current implementation does not support it. \nAs a work around, you could create a symlink  (with no spaces in its path) the following way and specify the link in the subsystem path\nmklink /H c:\\pslink.exe \"C:\\Program Files\\PowerShell\\6.0.0.17\\powershell.exe\"\nAdd this in sshd_config\nSubsystem powershell C:\\pslink.exe -sshs -NoLogo -NoProfile\n. Thanks for reporting this. We'll follow up. . There were some recent fixes to POSIX transport that might fix this. Please reopen with relevant details if you still see this.. We may have missed testing 32-bit drop on Win7.  Can you check if you see the same issue with 0.0.16.0 too?. Issue is with cipher negotiation failure - that happens when client and server do not speak any common ciphers. \nDo a \"ssh -vv\" and check what's being negotiated. (sample below: ctos means client to server)\nciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\nciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n. I don't see a compelling reason for OpenSSH to respect schannel config - it will end up resulting in unnecessary confusion, given that there is a well known and documented way to add restrictions using sshd_config. . Looks like the trace message is being logged from core OpenSSH code. IF so, you would see a similar event in auth logs on Unix. Can you please confirm this and open up a bug in OpenSSH main project if this indeed is the case?\nOtherwise, please reopen.  . Reopen once you have the logs ready. . Issue is in WSL and being tracked under https://github.com/Microsoft/BashOnWindows/issues/2322. \n. If there is one, it would be detailed in https://linux.die.net/man/5/sshd_config. . Try the following instead (? in place of @)\nAllowUsers john?forest\nThis is due to a limitation in specifying domain names in AllowUser list. \"@\" is currently used for user@IP combination (see sshd_config man page). We need to make Windows specific changes to core sources to support Windows domain names.\nOtherwise, the above may result in a rare conflict with a local account that may match john?forest.  . Just tried it on my end and it worked without any issues. Otherwise, from code inspection, I'm unable to think of why you would be seeing the above behavior, sorry. Please investigate further and let us know what you find. . 1349 - The type of the token is inappropriate for its attempted use.\nNot sure why you are seeing this. Can you try running sshd as SYSTEM and see if it work?\nsc.exe config sshd obj= localsystem\n. From a security standpoint, remote SSH sessions run under the context of the authenticated user (irrespective of sshd running as LocalSystem or not). \nWhat is the user account you are using to login via ssh?\n . Reopen if needed. . Is gpg-agent listening on a network socket?. @vovcacik your understanding is correct. On Windows the logical equivalent of Unix Domain Sockets is named pipes (that inherently provides authorization capabilities). We unfortunately have no alternative way to use smartcards with this version of OpenSSH. Its a feature that we need to implement for Windows. \nYou'll have to stick with Cygwin for now (if it works). . Protocol used by Windows version of ssh-agent is the same as in Unix. So a named pipe to network sock interop adapter should work for your case. . @coldacid your adapter in here\nhttps://gist.github.com/coldacid/6e4e8306bcdc0a8954961454bc2558ee\nmost likely did not work, because you are using syncronous pipes. I'll try to write up a native exe in the next couple of days. \n. @coldacid got an initial (oversimplified) version posted here https://github.com/manojampalam/ssh-agent-adapter\nuds-2-np.exe exposes an Unix Domain Sockets agent over a named pipe. Running it should spit something like this:\nset SSH_AUTH_SOCK=\\\\.\\pipe\\usd-2-np-9036\nThe other utility np-2-uds.exe, does the reverse and is added just to test the one above. I basically injected these 2 in conjunction between the Windows OpenSSH tools to test E2E. \nThe IO redirection part works just fine. What's still needed is the logic to read port and cookie from the authentication file. I've put in TODO's in uds-2-np.c indicating the places this logic needs to go to. \n. Not yet @coldacid. Were you able to debug where its getting stuck? Was there any traffic in and out the adapter? \nCan you point me to instructions to install and use gpg-agent on Windows?. Ok. Installed gpg4win and started the agent, but unable to figure out where the socket file is written, SSH_AUTH_SOCK is not set either. \nWhat am I missing?. Investigated this, found an issue and fixed it in your fork (this was preventing the cookie from ever being sent). Now, the cookie gets sent, as well as the initial request to agent. But I don't see anything coming back from the agent socket. \nOnce you confirm that the authentication handshake is correct, we need a gpg-agent expert to tell us what's happening from the agent side. . @coldacid that doesn't sound logical. Even if we send the initial request bytes right after the cookie, they are not guaranteed to arrive together. \ngpg-agent cannot assume that the stream has ended until read on the sock has returned 0. I more inclined to believe that we may be sending a EOF char at the end of cookie that gpg-agent might be misunderstanding. Can you double check?. @coldacid would it help if you do a network sniff of what's being exchanged between a \"working ssh client\" and GPG agent ? and compare this to what ssh-agent-adapter is sending ?. Its been ages since I did my last capture, but I would recommend wireshark. Perhaps, start from here - https://wiki.wireshark.org/CaptureSetup/Loopback. Thanks. The above works in Powershell and the below one in cmd.exe. I'll remove the space to keep it simple. . Reopen if you still have an issue (refer https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps for troubleshooting steps). We have a limitation with Windows implementation. For sftp-server traces, you'll either need to login (via ssh) as an admin account or give that specific user permissions to write to Logs folder. . dup #727. Will look into it for Aug-Mid drop. . We haven't seen this problem yet. It helps the rest of us if you can share how you solved it. . @bingbing8 is looking into this.. Thank you. We'll modify the installation script to explicitly add that privilege to sshd service account. So far, we have seen it getting that privilege automatically assigned. . Added as security considerations in Wiki and put a link here. \nRelated to #466. . Thanks for detailing the impact. We'll put in a Windows specific block in code to accommodate this request for now. . Reopening to keep track of this for the upcoming milestone.. ssh-agent for Windows is implemented as a service. You'll need to run install-sshd.ps1 to install ssh-agent service. \nReopen if you have any questions. \n. Is this a regression? Did it ever work before?. Thanks for tracking this down. We'll fix it on our end. . None yet. in our radar for next release. Thanks for your patience. . @nightwish47, did above response from @JW0914 help? Please reopen if it did not. \n. @anrose00 can you share a snippet of your code doing CreateProcess(ssh) with io redirection ?. Looked into this. It seems that GetFileType on hStdIn (that's pointing to a nul device) is returning FILE_TYPE_CHAR - that's making ssh.exe think that its a console handle, but when the actual console IO is preformed on this handle, it fails resulting in that log. We'll need to investigate if this behavior is by design and accommodate if necessary.\nTo unblock, you could use a pipe handle (from CreatePipe()) for hStdIn whose other end of the pipe is closed.  . I tried your code on a Windows 10 box and it works fine. I also tried \nstartUpInfo.hStdInput = GetStdHandle(STD_INPUT_HANDLE);\nwith \"ssh -n\" and that worked fine too. \n. Please reopen of needed. Just tried with the exact public key contents and this is what I see in logs. Can you check detailed logs on whats exactly being read from authorized_keys (perhaps multiple keys are being read at once - that may indicate a CR CR/LF issue)\ndebug1: trying public key file C:\\Users\\nonadmin\\.ssh/authorized_keys\ndebug2: user_key_allowed: check options: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDsgFU14LPgFvNlfUokLLAtNX3Idl+s+zHG9MqS+Fa/XNsqrYoZSD+B4vnXGPoew/I04+r7d5QYpW+H75+uQwNW3PsEVe0Anp+J585/pdC/M3E3YqecWVhMBHD5SZ4j9sZYC\nOViXguJUSSM6r+fIUv7gFpotPoMTmJC6QEhzVC5jz3d93+/9zGYGaMu9st7UVqvLNIwwEFClM87fGycf4bf1Zrqp1Kakr4VzCUQhpkxVOpItKTueyILd6eolUqL1YG+14TTnVqqc2+o/UihnATgrCFCvV5UcjnjHRUbKZMvn/DiTv6askffHoQ7BYWHLstidR4NTLSqJXuxvLcwdWEz\nP2thba2QNhEm/o4MvyJlPcqLXhWLcXqvnMp/P36dcPiwiElGUOjM/VV29/KJpG3ZQf3xjnCbjoHSbVcaljNsymO9ejEXLw7h1yBAjGLXc/u5qRSsI18JRyfAd+kRzdzM2wYlZNc9nW4hWLTX/CpUj8KyDybgM/iqBDuSX4rUZt9SIHGJxm9vbC05Ed99rvz6ckdGKgmNHx8d4o0vXLq\nsPbn5fNZf6ovTNWKAo0c/guD01xsxo/oaplpHX6k4n+ujPYc0+6shSD8+UiQ2q46LqJD+jokVHEe/iA0YyvgYG5EGUUOgIPcPqBOFU+dCROcA+B+fh8C8OT8hAcfUye1+Mw== ltheisen@ljt530\n'\ndebug2: user_key_allowed: advance: 'AAAAB3NzaC1yc2EAAAADAQABAAACAQDsgFU14LPgFvNlfUokLLAtNX3Idl+s+zHG9MqS+Fa/XNsqrYoZSD+B4vnXGPoew/I04+r7d5QYpW+H75+uQwNW3PsEVe0Anp+J585/pdC/M3E3YqecWVhMBHD5SZ4j9sZYCOViXguJUSSM6r+\nfIUv7gFpotPoMTmJC6QEhzVC5jz3d93+/9zGYGaMu9st7UVqvLNIwwEFClM87fGycf4bf1Zrqp1Kakr4VzCUQhpkxVOpItKTueyILd6eolUqL1YG+14TTnVqqc2+o/UihnATgrCFCvV5UcjnjHRUbKZMvn/DiTv6askffHoQ7BYWHLstidR4NTLSqJXuxvLcwdWEzP2thba2QNhEm/o\n4MvyJlPcqLXhWLcXqvnMp/P36dcPiwiElGUOjM/VV29/KJpG3ZQf3xjnCbjoHSbVcaljNsymO9ejEXLw7h1yBAjGLXc/u5qRSsI18JRyfAd+kRzdzM2wYlZNc9nW4hWLTX/CpUj8KyDybgM/iqBDuSX4rUZt9SIHGJxm9vbC05Ed99rvz6ckdGKgmNHx8d4o0vXLqsPbn5fNZf6ovTN\nWKAo0c/guD01xsxo/oaplpHX6k4n+ujPYc0+6shSD8+UiQ2q46LqJD+jokVHEe/iA0YyvgYG5EGUUOgIPcPqBOFU+dCROcA+B+fh8C8OT8hAcfUye1+Mw== ltheisen@ljt530\n'. @mivale Thanks. You found the issue. OpenSSH code (since its based on Unix) expects the file contents in UTF-8. \nAdded this limitation here - https://github.com/PowerShell/Win32-OpenSSH/wiki/Various-Considerations. This might result when your user profile is not loaded. '%systemroot%\\system32\\config\\systemprofile is the default profile (that gets pointed to when user profile is not loaded)\n. Reopen if needed. . Based on this observation, try escaping it with \" itself\nE:\\openssh\\openssh-portable\\bin\\x64\\Release>ssh localhost echo \"dq\"\ndq\nE:\\openssh\\openssh-portable\\bin\\x64\\Release>ssh localhost echo \"d\"\"q\"\nd\"q. 8708 14:23:49:580 debug1: trying public key file C:\\WINDOWS.ssh/authorized_keys\n8708 14:23:49:580 Authentication refused.\nThis implies that loading of user profile might have failed (OpenSSH defaults to c:\\windows if user profile cannot be loaded). Can you check ssh-agent logs ?. Reopen if needed. . you can disable server side PTY by using -T flag.\nssh -T . Try doing this interactively - \nssh-agent -d\n. @bagajjal its ok for owner (in this case remoteuser) to have allow permissions. \n@foobarberger It will help if you can share traces around the following entry sshd.log\ndebug2: key not found\nAlso check the encoding of authorized_keys (only ASCII and UTF-8 are supported. ) \n. Thanks @gravcat. Did you evaluate the Chocolatey version of this package? install-sshd.ps1 is supposed to be a bare bones installer until we have an official supported version. @joeyaiello may have some input here. . We'll take a look, but we haven't validated this scenario yet. This will most likely end up as a backlog work item. \nIdeally - In Windows, CA trust should be enabled by adding the CA cert into \"Trusted\" cert store. OpenSSH is not wired to work with Windows Cert store yet. \n. @hsson, your entry should look like\nAuthorizedKeysFile \"C:\\Program Files\\OpenSSH.ssh\\authorized_keys\"\nAlso ensure that the permissions are correct. That file should be owned by \"Administrators\" and have the following ACLs:\nBUILTIN\\Administrators:(F)\nNT AUTHORITY\\SYSTEM:(F)\nNT SERVICE\\sshd:(R). @jpham34 try out the latest release. I have put some fixes to enable certificate based authentication. Let me know if see any issues. \n. We'll fix this for Oct-Mid drop. . Client supported\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\nand server supported\ndebug2: ciphers ctos: aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\ndebug2: ciphers stoc: aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\nNegotiation fails because there isn't a matching cipher. \nYou either need to enable cbc ciphers on client \n      ex. ssh -c aes256-cbc\nor ctr ciphers on your target (check sshd_config man page)\n. Cannot create process (2).\n(2) indicates  - FILE NOT FOUND. \nCan you double check that both sshd and sftp-server.exe are located in the same directory?\nI see 2 different directories in discussion above: C:\\OpenSSH-Win64 and C:\\OpenSSH-Win\n. Possible to collect WPA/XPerf traces that can help us understand what's taking up the CPU?. As per https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH in wiki\nnetsh advfirewall firewall add rule name=SSHPort dir=in action=allow protocol=TCP localport=22. related to https://github.com/PowerShell/Win32-OpenSSH/issues/478\nyou can login using that user's password over SSH (this will automatically create user's profile). . Non-PTY logic is now completed removed from shellhost. . @bingbing8 is this expected to work?. We should have one end of this week. If you'd like to test a private, let us know. . Reverted original change as authentication logic is moved to sshd and this check is no longer relevant. @jborean93 thanks for reporting this. Found an issue with Windows POSIX compat library. Will have it fixed in next release. . Currently there is no mechanism to limit size of sshd.log. \nThat said, you may wipe sshd.log clean any time (without stopping sshd service)\nPowershell\n$null | Set-Content .\\logs\\sshd.log\nCmdline\n: > logs\\sshd.log\n. For more trouble shooting info - https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. Reopen with relevant info.. @PaulHigin how can we launch powershell.exe without an actual terminal but still in interactive mode?. ssh -t user@domain@hostname \nAbove will create a remote session with IO redirected over stdin and stdout. How can we make powershell.exe operate over stdin and stdout (without a console)? . This goes back to the discussion with having Environment Variables to decide on default shell. Security concerns we had with that approach would apply to this proposal too. . @parkovski can you enlighten a bit more on how your proposal would work? Are you saying that the binary need to be signed?. Thanks @DarwinJS. I'll check if there is a straight forward way to resolve a SYSTEM only environment variable. My guess is Powershell is probably populating that list directly from registry (this we can do certainly, just that the code would be more complex). \nSetting it to backlog. Will get back with an update by next milestone.. Please reopen with relevant info. . @NoMoreFood nothing beyond what's already on this thread. Sure, contributions are always welcome. . Reopen if needed. \nIt looks like your client is sending the following command to target\ncd \"/jenkins\" && java  -jar slave.jar\nTry executing this via ssh.exe and see if its working as expected. . What defaults are you trying to set? It helps if you can give the exact cmdline you are trying to execute.\nReopen with required info. . Can you check if the session process (sshd) is still running on your Linux target? It looks like the client is hanging as the channel from target is still open. . @naatje80 can you also confirm that the shell process (that is executing cat -) is still running?\nIf so, that would be the root cause why ssh.exe isn't exiting. You can expect the following to be sent to your shell process - \\\"Hello World\\\"\\r\\n\nDo you expect the shell process to continue running with that input?\n. OK Thanks. Found the issue. Will fix it for next release. . Try the attached private. \nssh.zip\n. Utilities included in package are meant to do exactly this. Utility usage details are at https://github.com/PowerShell/Win32-OpenSSH/wiki/OpenSSH-utility-scripts-to-fix-file-permissions\nPlease point out instances where -\nCollaborators are informing other users to incorrectly set permissions on files and directories contained within %UserProfile%.ssh\nAdded sdelete suggestion on Wiki. Thanks.. Its alright. Mistakes do happen we all are learning from each other. You could simply reply on the original issue thread and point out the inconsistency. \nAs for ownership of %userprofile%.ssh, SYSTEM and ADMINISTRATORS can take ownership of any resource in Windows no matter what (even if they are explicitly denied). See takeown usage. Hence any such restrictions would only be superficial. Or am I missing something?. Thanks for your follow up. We did think through this while designing permissions for Windows. \nThe equivalent of \"root\" in windows, for all practical purposes, is SYSTEM or Administrators.\nI understand the permissions structure in Unix, but our thinking process here is to \"not superficially restrict any access without any security benefit\". As I said, SYSTEM or Administrators can take over ownership and modify permissions of any file or folder at their will (irrespective of ACLs). So what's the point in blocking them. \nWe will double check with OpenSSH authors/maintainers. \n. This is expected. ssh-agent is implemented as a service in Windows. Running ssh-agent.exe simply starts the service. . You may use this workaround until we find a solution\ncreate a task scheduler task that would run the following PowerShell script (edit as needed) at intervals. It empties contents of sshd.log into a backup file once sshd.log breaches 25MB\nif ((Get-ChildItem .\\logs\\sshd.log).Length -gt 2510241024) \n{\n   copy-item .\\logs\\sshd.log .\\logs\\sshd.log.prev\n   $null | Set-Content .\\logs\\sshd.log\n}. Can you please explain what setting this does and its use case scenarios? We need to first evaluate if the use case scenarios apply to Windows at all.. Share sshd logs from server side. Steps here - https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. Updated instructions. Try now and reopen if you still see issues. . Get server side logs using steps at https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. Reopen with logs. . @DarwinJS FYI. Redirected link in wiki main page. . It might be related to the fact that the session that gets created using pubkey auth has no outbound auth capabilities. If your scenarios works with password auth and not pubkey auth - this is definitely the underlying reason. . I would recommend asking this on openssh general DL. This is a client side issue. Refer Putty troubleshooting guidelines to take this further. . It should work. Try \nForceCommand cmd /c dir\n. Looks like you are running sshd as System. Can you confirm that (check sshd.exe user context in task manager)\n. Thanks. Fixed. . IF you are using an admin account, you should have an elevated session. \nMake sure you set the registry entry specified here\nhttps://support.microsoft.com/en-us/help/942817/how-to-change-the-remote-uac-localaccounttokenfilterpolicy-registry-se. @DarwinJS let me follow up for the right guidance. I assumed its a known fact that remote administration using workgroup administrator accounts requires the above registry setting. . Thanks for reporting this. Will be fixed in next release. . @chanducrr I assume you are using Basic authentication. If so it is expected. \n@leotxcosta @chanducrr can you try reinstalling sshd? (just run install-sshd.ps1 in installation folder). \n. This issue is no longer applicable with the latest changes requiring SSHD to run as SYSTEM. Sure. this thread has too many conversations mixed in one. If someone has an issue on Server 2008, feel free to create a new issue with detailed symptoms. Happy to take a quick look and provide a work around if any.. @bingbing8 this seems to be related to the recent LogonUser changes. \n@leotxcosta please use the previous version for now.. Thanks for following up. . Sorry. XP support is out of scope for this project. . my two cents.. we've gotten the new privilege separation model earlier than we thought. This makes the file permissions on Windows very much inline with how they are on Unix. One would not find any use from this utility in the default 99% of the cases. \n- Host keys are now automatically generated (if they dont already exist), with the right permissions. \n- User keys and authorized_keys have always been generated with the right permissions.\nStarting from version 1.0.0.0, there would be no need for any configuration migration, since the service config now sits separate and isolate in a different folder, and is untouched during OpenSSH version updates. The would also be no changes to how file permissions are enforced, going forward.\nGiven this, should we modify/rename this utility and make its use case to just - migrate config from 0.0. versions to 1.0. versions\n. Agreed. But at this point, we are not different than Unix (in terms of file permissions). I haven't come across a utility on Unix that does complete file permission tuning. Perhaps its simple to fix up file permissions (chmod), compared to multiple/confusing icacls on Windows?\n. Recommend collecting client side and server side logs and see what's going wrong. \nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps\n. What context are you running sshd as ?\n1349 implies that the account, that sshd is running as, does not have the privileges to launch a session process as the user.\nInstallation scripts should assign this privilege to sshd account. \nTry the following steps to manually assign:\n- Open control panel and navigate to\n  - Administrative Tools >  Local Security Policy > Local Policies > User Rights Assignment.\n- Double click Replace a Process Level Token\n- Add NT Service\\SSHD \nReopen if you still see this issue. . Please reopen with requested information. . Thanks. Updated titles and wiki. . Windows inbox Beta version currently supports one key type (ed25519). \nPlease stay tuned for more info from @joeyaiello \nAlso, as @drichardson found below, there is an issue with passphrase protected private keys. As a work around, create passphrase-less private keys and register them with ssh-agent (this will encrypt and persistently store the private keys, so you don't have to register them again). Once the private key is registered, it could be deleted or moved to a safer location. . GitHub releases have full support for all key types. RSA keys are supported too. . You cannot convert keys from one type to another. \nOpenSSH installed from Windows settings is a limited version (supports only one key type and a limited set of crypto algorithms) of the more comprehensive version released on GitHub. They can work side by side but may be end up causing confusion. If you don't need the built-in client, recommend uninstalling it. . Win32-OpenSSH and PowerShell/openssh-portable are the same. We do development in PowerShell/openssh-portable and maintain issues, do releases in Win32-OpenSSH (we are stuck this way for legacy reasons). . ProcessID. @DaburLal ssh_config is now supported with 1.0.0.0 version. Try it out and get us the logs. Did you try doing this with ssh.exe client? Is it local port forwarding or remote port forwarding?. dup #979 . This will be fixed in next drop. this file will be logged under %PROGRAMDATA%\\ssh. Can you try out the latest release and share sshd logs?. https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps\nGet sshd server logs (not sshd in debug mode that accepts only one connection). . Thanks. Its now fixed. It should be %programdata%\\ssh\\logs. No. Its just a wiki entry fix. \nLogs dir should have been created as part of installation. \n%programdata%\\ssh\\ also should exist on your system. (host keys would be read from this folder). Double check please. \nAs for log files, yes, this is something specific to Windows. . Looked at the traces. Looks like your Ctrl+C somehow made it to the main service process. This shouldn't happen. Can you get debug3 traces to take this further?. Thanks for the feedback. I believe we can resolve it to just \"user\" if its a local account and \"user@domain\" for a domain account. . If its not too late, did you try it with -T option?\n. Can you share your client side logs? (use -E option to write traces to a file). Thanks for the detailed report. I'll take a look and get back with my findings. . We had a recent fix in transport that might potentially resolve this. Try out the latest release 1.0.0.0, reopen if you still see this. . I'll get back with my findings by next milestone. . AFAIK no. You may use \nstart ssh ....\nto achieve something close.. @afcady starting from V1.0.0.0, starting sshd will automatically generate host keys with the correct permissions. There is no need to explicitly run ssh-keygen -A. . You don't need to. ssh-keygen.exe -A is called in the context of SYSTEM (sshd runs as SYSTEM), the generated keys will automatically have the right permissions when called in SYSTEM context. . Right. When you do\nssh user@target\n\"user\" account should exist on \"target\" irrespective of the authentication type you use (password or key based).\n. This is not a Windows port specific question. Here are some points for your consideration:\n- In Unix, you can disable shell access. In Windows, this is currently not possible, but you may exploit the usage of Default user's shell - implement a dummy exe that \"DOES NOTHING\" and set it as default shell.\n- In Windows (and I believe also in Unix), in order to authenticate, you'll need a valid user account on the other end. So you do need to create a user account (or use an existing one).\n. Agree that alice@bob@BOB is wrong. \nOtherwise, key based authentication should work without ssh-agent. Please share your client side traces (ssh -vvv). User name part should be fixed in the next release. Did you try setting the machine wide PATH to include ssh directory path?. debug3: failed to open file:/dev/tty error:3\nThis is normally not expected. Do you have DISPLAY and SSH_ASK_PASS variables set in your environment?. You should not have them set of you intend to type in your password manually. Reopen if you still see this issue. This is by design (in Powershell). If you don't think so, please follow up with Powershell team/project.. @DarwinJS FYI. Please review the design changes and let us know your feedback. . @DarwinJS  Yes. Its a conservative setup. I thought it always was. We never intended to have the service auto-start by default. . @DarwinJS securing agent keys with ssh-agent is not required any more. We previously needed this because SSHD was running as a low privileged account and giving READ access to SSHD account wasn't secure. \n@JW0914 , we consider both SYSTEM and \"Administrators Group\" as the super user equivalent. Host private keys are given full access to both (and just) these accounts. What this means is that the host keys would not be accessible by a non-elevated admin session (which is the default logon session when an administrator logs on). They would be accessible within an elevated admin console. Do you find any concerns with this design? . @DarwinJS Yes. ssh-agent is no longer needed by sshd (to keep the setup secure).. @DarwinJS \nfollowing up on the conversation regarding ETW logging. Here's a proposal, need your feedback.\nThere is currently an issue with logging - the log size is unbounded and can potentially be exploited towards a DOS. We can have work arounds (like have a task scheduler task to prune old traces at intervals) but these are not ideal.\nInstead, we could move to ETW based logging (that has limited log sizes by default). Under event viewer, it would look something like this:\n\nThe admin channel is for CRITICAL and ERROR events, operational is for INFO and debug is for DEBUG* variants.\nThe payload would mimic what users would otherwise see in a typical syslog entry. \nWe would continue to provide the file based logging option (useful for quickly collecting debug traces) by setting the following in sshd_config\n LogFacility LOCAL0\nWith this option, the logs would be collected at %programdata%\\ssh\\logs (as they do today).\nsftp-server would follow similar semantics for logging (by default to ETW) and to files via\nsftp-server -f LOCAL0\n. Since we need to support downlevel platforms, we cannot completely replace the existing named-pipes based alternative yet. . Related conversation in #827 . Thank you for your feedback. We did a major version jump due to significant underlying changes in architecture, usage and troubleshooting scenarios - I've added Beta to release title, hoping to reduce the confusion a bit. \n. @asterikx \nThanks for reporting this. Apparently, when psexec is used with -i switch, it is causing the stderr redirection issues with sshd that's causing the unprivileged worker to terminate abruptly.\nAs a workaround, skip -i switch for now (I've updated wiki and trouble shooting pages accordingly)\npsexec -s cmd\nPlease regnerate sshd -d output within the above SYSTEM console. \n. In this case, sshd (privilege separation account) token couldn't be generated. \nI would double check that you are running as SYSTEM.\nIf yes, please check Troubleshooting wiki and get debug3 traces from sshd service. Sorry about that. I've added a reference to this thread in the troubleshooting page. https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. Please try out the latest version. There were recent changes to dup() functionality. Reopen if needed.. Right. Use https://www.openssh.com/report.html to report issues in core code. Check troubleshooting wiki and reopen with relevant logs.. This is intentional to keep the implementation in line with how it works on Unix. \nOtherwise, you may use Task Scheduler to achieve background job/process execution. \n. Thanks for following up and apologies for a misunderstanding of the original ask. \nYes, we should allow child processes to break away at their liberty. This will be fixed in the next drop. \nAttached a private if you want to try out. \nssh-shellhost.zip\n. @DerekBennett can you please open a new issue and add a reference to this thread?. Yes, this fork should be no different from the upstream branch as far as Linux compilation goes, but we haven't validated compiling on Linux for a while. We would eventually do, when its time for upstream integration.\nOtherwise, why would you want to compile Linux bits out of this repo? It should technically be no different from upstream branch (i.e you don't get any added benefit from this fork). Can you ensure you are invoking the same ssh-add in both the cases? I'm guessing you have multiple versions of ssh-add (from different sources), and the wrong one is getting invoked when you do it via Powershell.\nAlso, check if this environment variable is set in your PS environment - SSH_AUTH_SOCK. Right now, logging in as SYSTEM is not supported. You'll need to create a user account explicitly (not sure if that's possible on WinPE) and use those credentials. . Does it happen on a fresh Powershell.exe console? What's your PS version?. OK thanks. From the looks of it, ssh.exe is probably not happy with the console settings/attribtutes within powershell.exe.\nWe'll try to get a repro from our side. If not, we'll need to add additional logging in code to dump console settings. . No. This is not known or expected. Irrespective of the original console environment, ssh.exe should always configure it per its needs and reset to original once done. . can you do icacls on sshd.exe  and ensure \"users\" have \"RX\" on it ? . This should help https://github.com/PowerShell/Win32-OpenSSH/issues/518\n. SSHD needs to run as system.\nAt this point, its not possible to automatically get the double hop privileges using key based authentication.. @DarwinJS Release notes has a wrong link (to previous version)\nProduct release notes: https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v0.0.24.0. Check if this helps https://github.com/PowerShell/Win32-OpenSSH/issues/518. Thanks. Just learnt about sshpass. We would need a Windows version of this in the near future to automate non-interactive password based logons. . This behavior is what you'd see on Unix too. You are seeing it now because of the work done to get most of sshd logic common between Unix and Windows. . Its not. sshd re-execution will respawn \"sshd\" and if the original commandline is not absolute, you may end up launching a rogue sshd from your PATH. This is by design and its in OpenSSH core (not Windows specific). @bagajjal  this is not the same issue as #1045. . Did you start the service, it should have automatically created \"priv sep\" user \"sshd\"?. Reboot is not required. Can you see if \nnet user\nshows sshd user?\nHow did you get traces above? from sshd.log or \"sshd -d\"? If later, are you running as SYSTEM (see release notes)\n. How did you get traces above? from sshd.log or \"sshd -d\"? If later, are you running as SYSTEM (see release notes). OK. Something went wrong while creating the user acount at service startup. Try restarting the service and if that does not help, explicity create \nnet user sshd <randomguidpassword> /add\nAlso double check you are running sshd service as SYSTEM (you can use task manager). Double check you are running sshd service as SYSTEM (you can use task manager). You have a 32-bit OS?. Thanks for catching this and investigating the underlying cause. We'll fix it for next drop. \nAdded as a known issue in 1.0.0.0 release notes.. @dwatley thanks for the detailed report. On Windows, in a domain environment, its necessary to fully qualify the user name to avoid resolution confusion - user with the same name can exist locally and in different reachable domains. \nCan you try signing your user cert with dwatley@contoso as principal?\n. Yes. Your inferences seem right. I've added a reference to this thread in Certificate Usage Samples. @aaccioly ssh-agent is re-implemented from scratch for Windows to be more secure and provide a single sign on benefit. \nssh-agent encrypts the added private key using user's (Windows) password (using DPAPIs). It further persists the encrypted password in a \"SYSTEM\" only registry node. This prevents malware in user space from gaining access to the private key. \nProtecting using DPAPIs mean that, your private keys are usable (for signing purposes) as soon as you log in. \nCurrently, there is no way to customize it for a \"ask for passphrase each time I log in\". You'll have to explicitly delete your keys - you could schedule a task that could do it at logon.. Its valid for every key. \nAdded the following to considerations\nssh-agent only supports '-l' '-L' 'd' and '-D' options. It ignores '-c' and '-t' options of ssh-add. It persistently and permanently stores the user's private key.\nI've added this as a backlog ask. \nIn your case, you would want to delete your key as soon as you're done using them. . Right @aaccioly . @DarwinJS  Good Idea. Is there a standard way to do it in GitHub other than hosting within the repository (and taking contributions via PRs) ? What do you recommend?. dump TERM  needs to be explicitly implemented in ssh-shellhost.exe (it only supports XTERM now). \nUnfortunately, your only option now is to not request a PTY\nssh -T user@target\nand you'll end up with a way dumber terminal. . This  may not be straightforward. First, you need to see how sshd gets to know that client has requested a \"dumb\" PTY. Then sshd needs to convey this to ssh-shellhost (perhaps using a cmdline parameter). This should invoke the logic you are planning to add in shell-host.c. Thanks for the PR. Added comments that need to be addressed. . Added comments. . Thanks @lupo1977 Merged your PR. . Sorry, I did not realize this PR is in our shadow repo. Please create one on our main dev repo so that your contribution history wouldn't get lost - https://github.com/PowerShell/openssh-portable\n. Did you mean sshd wont start? See Troubleshooting page in wiki and try running sshd in debug mode... Is user \"dwatley\" in \"contoso\" domain? If so, is \"contoso\" DC reachable?. Thanks for the follow up @dwatley.\nDoes specifying full domain FQDN help?\nssh user@dom1.dom2.dom3.com@target\nI'll have to talk to AD team to see we can resolve via DC by default (currently we do it as fallback).\n. hmm Yes. This is a regression from recent changes to fix Match block support with privilege separation. I'm looking into this. \n. @dwatley I have a fix in review for the recent regression. It will be out in the next release (~2 weeks). Please use the prior release for now. Created https://github.com/PowerShell/Win32-OpenSSH/issues/1098 to track this. . thanks @dwatley. All credit goes to @nomorefood.. Looks like you are not authenticated yet. Can you check if you are hitting this (documented in release notes) ?\nKnown Issues:\nYou may not be able to connect with sshd logs showing that \"unable to get security token for user sshd\". Please see #1053. We need to repro this to take it forward. Please add as much setup details as possible. . Just tried out ForceCommand and it seems to work. Add relevant details in sshd_config. \nWhat did you mean by \"Command option in authorized_keys\"\n. Issue found. Looks like Match blocks have regressed in 1.0.0.0. Will issue a fix soon and add test cases. . @bagajjal  is this expected?. @joeyaiello is this expected?. Last time I checked, sshd in debug mode doesn't work in an interactive psexec (psexec -i).\nsshd spawned children see the stderr provided by psexec as invalid and abort promptly. . Looks like its a matter of enabling OPENSSL_HAVE_EVPGCM in config.h if LibreSSL does support this cipher. . Behavior wrt to double escaping is the same even with cmd.exe. See the following from Windows client to Windows server.\nhello` output seems to the behavior specific to powershell.exe\n\n. Thank you for the detailed analysis. I understand the issue. Its stemming from the fact that while launching default shell (other than cmd.exe) with PTY, its actually launched via an intermediate cmd.exe and this is consuming the extra escape. \nTo fix this, we need to internally excape the shell payload before passing it to cmd.exe. AFAIK, we only need to escaple any double quotes (\"s), by doubling them. Is this understanding correct?\nHere' how the command payload would flow through:\nssh \"\"command\"\" --> \n\"command\" (over the wire to sshd) --> \nbase64encoded(\"command\") to ssh-shellhost -->\n\"command\"(decoded) in ssh-shellhost -->\n\"\"command\"\" (after escape'ing) to cmd.exe -->   //this is the escape step that needs to be added\n\"command\" to default shell\n@bagajjal thoughts?. @bagajjal yes. Do you see any issues with escaping double quotes on the pty route?. Reported issue is with PTY - the fact that with Default Shell configured, we need 2 levels of escaping while with otherwise (cmd.exe), only one level is needed. . Reading the complete thread again, I was wrong in certain aspects. While its true that we have an issue in PTY logic as I described before, fixing that would not do any good to the original reported issue. \n@bagajjal @penguin359, your analysis is accurate. The issue stems from the way the resulting shell in invoked via CreateProcess and how the command line arguments are interpreted by Windows CRT - https://msdn.microsoft.com/en-us/library/17w5ykft.aspx\nI could think of one way to solve this - feed the \"command +CRLF + exit + CRLF\" via shell's stdin rather than CreateProcess's cmdline. This way the command gets executed as is within shell. The \"exit\" part is tricky as its again shell specific (shell's may have different quit commands). \n . Sorry @danielboth none yet. Please check back end of October. . @bingbing8 you have any input to questions above ?. @bagajjal is this expected?. The dependency was removed in the earlier release. sshd can start and work standalone without ssh-agent (unless you have your host keys registered with agent). \n. No, you don't need to register them with ssh-agent. Can you following troubleshooting link in wiki, try running sshd in debug mode. @ronnicek you must be hitting the permissions issue. Please reopen this issue if you don't think so. \n@psmolkin you are hitting https://github.com/PowerShell/Win32-OpenSSH/issues/1098. This will be fixed in the next release, please use a prior version for now. Post any further questions on #1098 . Sorry, this does not make sense, your server is Ubuntu Server 16.04 and your sshd_config looks like it belongs to Windows. . Did you try putting quotes around your exe \nSubsystem  powershell \"C:/Program Files/PowerShell/6.0.1/pwsh.exe\" -sshs -NoLogo -NoProfile\n. @NoMoreFood  you're right. \nUltimately, all these child process handles will be fed in a WaitForMultipleObjects call (as part of wait_for_any_event()) and that Win32 API call has a limitation of 64 handles. I had to pick a number less than this to accommodate other events (that of async accept and connect calls). Going beyond these limits will result in multi threaded POSIX compat layer that will make it more complex and less resilient. \nRelated to https://github.com/PowerShell/Win32-OpenSSH/issues/191\nWould love to hear if you have any suggestions to improve this. . @NoMoreFood, absolutely, please share.. @NoMoreFood , your implementation looks promising. I believe it would be a good next step to create a stand alone project and unit test it thoroughly (you may borrow OpenSSH unit test framework, so we can integrate it into OpenSSH at a later point seamlessly). We specifically want the synchronization logic to be tested thoroughly. This logic is very critical since any ensuing E2E deadlocks will be pretty much impossible to debug. \nThe specific requirements for wait_for_multipleobjects_enhanced, from wait_for_any_event point of view:\n- Ability to handle unbounded number of handles (or at least a sufficiently large number)\n- Know the event index that woke up the wait call (SIGCHLD relies on this)\n- Support APC completions (async IO reads and writes  and other signals rely on this)\n- Support timeout\nThanks for your support and contributions. . Right, we only deal with manual reset events, so you should be fine there. \nFor unittest, take a look at any of the test projects. Its implemented in test_helper.c Perhaps it will be easy if you do this work in your OpenSSH-portable fork. Make a copy of any of those test projects for your purpose and you should be good to go. . Thanks. I'll take a look. Please post a PR, so we can keep track of further conversation. . Yes, it will be better for tracking if we deal with each feature/fix in a separate branch/PR/commit. . @bingbing8 @bagajjal is this expected to work?. Yes. It was fixed as part of https://github.com/PowerShell/openssh-portable/commit/2c559a2b6c498239a8082f83fbec8ead98842d6b\nin file sshd.c\nWe have a couple of PRs in the pipeline.. Release should be out once they go through.. You're right and the fix is accurate. . If its blocking you, go ahead and fix it, else I'll take care of it. . Which one?. Can you see if key based auth works for a local user? If it does, can you double check that your domain controller is accessible? User tokens for key based auth are generated via S4U - generating domain user S4U tokens requires a persistent connection with DC. . Can you use v1.0.0.0 version and try out using FQDN\nssh user@abc.def.com@target \nand share sshd logs if it doesn't work?\nReason to try the prior version - to avoid hitting https://github.com/PowerShell/Win32-OpenSSH/issues/1098. Please share logs with v1.0.0.0. Note that the location of sshd_config and logs has changed between v1.0.0.0 and v7.6.0.0. @bagajjal is this correct match block for a domain account\nMatch User domainadmin\nForceCommand python\nIsn't it supposed to be domainadmin?mydomain. If so can you add usage samples on wiki for the same?. Possible to share the crash dump?. This is related to #1098 and should be fixed in 7.6.1.0. @sddim, please try it out and reopen if needed. . See #518. Connection is getting dropped during Key exchange. Most likely, your client isn't comfortable with the set the algorithms supported by OpenSSH target. Does it work fine with OpenSSH on Unix?. Does the target user exist on your Windows box?\nIs it local account or domain account?\nPlease create a new issue with the template and with the above info\n. @NoMoreFood I was just trying out this on the latest source. See the following\nsftp> ls -lrt\n-rw-******    1 -        -             408 May  2 22:06 a\nsftp> ln a link\nsftp> ls -lrt\n-rw-******    1 -        -             408 May  2 22:06 link\n-rw-******    1 -        -             408 May  2 22:06 a\nLooks like link is a copy of a. Is this expected?. https://github.com/PowerShell/Win32-OpenSSH/wiki/Certificate-Authentication. Get server side traces. Your understanding is not accurate. The user needs to have a valid account on the target - this is no different in Unix. . Recommend, just downloading and trying out the new client (you don't need to install anything). . Please use the latest version. Things have changed quite a bit since 0.0.18.0. Reopen if you still see any issues. . Did you read the release notes ?\nNote:\nNew Logging facility added (ETW). Check out Logging Facilities for options to switch to file based logging.. see https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples. Reopen if you see any issues. . You are hitting this - https://github.com/PowerShell/Win32-OpenSSH/issues/1098\nThis is fixed in latest release. Try it out. . Fixed and added instructions to see debug logs in Event Viewer.. @rageshkrishna what's your openssh version?. If so, this is expected, ssh-agent was set to disabled in the recent Windows 10 update. You'll have to enable it explicitly if you need it.. Looks like you may have Developer mode on. Can you disable those legacy services and see if you have ssh.exe and ssh-agent.exe installed under %windir%\\system32\\openssh ?\nIf you dont see them there - can you try installing OpenSSH using steps similar to what's detailed here (these were for Beta, your entries wouldn't have \"Beta\" in them) - https://blogs.msdn.microsoft.com/powershell/2017/12/15/using-the-openssh-beta-in-windows-10-fall-creators-update-and-windows-server-1709/. You could do the following to set ssh-agent back to \"auto\" on-demand start:\nsc.exe config sshd start= auto. Are you sure? Its quite likely that your server is rejecting the key and asking for password.. can you try ssh with -vvv flags and confirm from its traces that the key is indeed picked up/not ?. Thanks for following up. This is something that I was unaware of too. \nAs per http://man.openbsd.org/OpenBSD-current/man5/ssh_config.5\nlooks like this is expected behavior. . Can you explain how you would use Cygwin's OpenSSH in this case? how ssh command line looks?. ssh-agent on Windows, currently works a bit different than how it does on Unix. \nIts implemented as a service and exposed on a named pipe. The name of this name pipe is static and all ssh binaries assume this static one, if SSH_AUTH_SOCK is not explicitly set. \nGiven your observations, it looks like Git on your machine is invoking a different version of ssh client. Double check what version of ssh.exe is being invoked (in task manager) when you are being prompted for the password.. this account gets created (if it does not already exist) as part of sshd service start up. \nDid you try \nnet start sshd\nIf you do want to create it manually you can do\nnet user sshd  /add. You need to run sshd as SYSTEM (using psexec). see https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. @bingbing8 can you please follow up ?. That sounds scary. Are you changing sshd_config under %programdata%\\ssh\\ ? That's the default location where its picked up from. . @archiker, logic around user account resolution was modified significantly (in the right direction) by @nomorefood. Your issue should be fixed too as part of these changes. Recommend waiting for the next release that'll be out the coming week. . Sure. @archiker can you try v7.7.1.0 ?. https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.7.1.0p1-Beta. See #827. @jirijanata the confusion around domain name format will be fixed in the upcoming release. Going forward all domain identities should be of the form domain\\name. . @jirijanata please look into https://github.com/PowerShell/Win32-OpenSSH/wiki/sshd_config for configuration rules \nLet us know if you see any issues. Thanks. Fixed wiki.. @joeyaiello  for input. . Thanks for catching this. Fix would be to just replace this\nchar* spawn_argv[2];\nspawn_argv[0] = askpass;\nspawn_argv[1] = NULL;\nwith this\nchar* spawn_argv[3];\nspawn_argv[0] = askpass;\nspawn_argv[1] = msg;\nspawn_argv[2] = NULL;. This will be added soon. There will be one restriction though - incoming connections will be restricted to the (nonprivileged) user that sshd would run as. No other user can be authenticated and allowed in. . . Thanks for the comprehensive report. . @NoMoreFood, no one's working on this yet. Otherwise, are you talking about writing a GSSAPI provider on top of Kerberos SSP? or just enabling GSSAPI provider support in OpenSSH for Windows (so it could be used with MIT Kerb) ?. @NoMoreFood sure, please proceed and let me know if you have any questions for MS Kerb team. \n. This is not currently supported. @bagajjal is this expected?. Reopened 276. Thanks for reporting this. The changes in that last commit looks unrelated. I believe the fix is to grant interactive logon privilege before doing a LogonUserExEx. I'm following up..  I understand why has showed up with the latest change. Previously, for unprivileged token generation, we had fall back logic in case virtual token generation fails (i.e to use sshd account token). This was masking the original issue and was removed in the last commit. \n@dwatley glad that you caught this early. . What release of OpenSSH_for_Windows_7.6p1 are you using? We had an issue with leaking processes in the initial version. Can you try the latest version?. Thanks @hugginsa I've create one more PR, to apply same rules to all possible bash shells. Can you try it out?\n. @nomorefood for any insight. Yeah, hence added you. I don't see a difference between\nAllowGroups \"doma\\domain users\" \nand\nAllowUsers \"doma\\*\"\nAm I right?\nAnd yes, if the tests are the only practical concern, we can as well get rid of this filtering. . This is by design, similar to how it works on Unix. . Try v7.7.1.0. Can you add some more details on how to do this in a simple setup? Perhaps using the local sshd endpoint as a proxyjump onto itself?. Can you try if this private works:\nssh.zip\n. Change in PR referenced. Next release should be out towards end of Feb. . All binaries are MS signed from v7.6.1.0 onwards. Reopen if you see otherwise. . I see this for libcrypto.dll in 7.6.1.0 payload\n\n. hmm. yes indeed. This is currently not in scope. Would you mind listing out both use cases and business cases on why they would be useful for a general OpenSSH setup. . Did you follow these 3 steps in https://github.com/PowerShell/Win32-OpenSSH/wiki/Logging-Facilities (referenced in sshd_config manual)\nTo see Debug logs in EventViewer, do the following:\n- Ensure sshd_config has logging level at DEBUG or above\n- In Eventviewer, select option to show \"Analytic and Debug Logs\" (under top menu, View)\n- Enable Debug logging (select Debug channel, click \"Enable log\" on right menu). Looks like its only working for admin accounts. Thanks for catching this. We'll follow up.. Please share server side traces. see https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps\nRemoved regression from title, until we confirm for sure it is. . can you ensure that your client only sends this key with thumbprint - 1M4RzhMyWuFS/86uPY/ce2prh/dVTHW7iD2RhpquOZA\nso, we can narrow down the cause. In your earlier case, I dont see this key being offered. \n. Looks like not. The logic is same on Windows on Unix. You may test out with 7.7p1 on Unix. . no problem. Happy to help.. sshd service runs as SYSTEM, you don't need to and should not assign any privileges to \"sshd\" account - it is a low privilege account. \nAre you seeing this after running install-sshd.ps1 ?\n. This is simply not the case with 7.7.0.0. where in the installation script do you see that account being created? \n. It's true that you'll end up with sshd (not ntservice/sshd) user account. It's not created as part of install-sshd, rather at service startup. This is being created at service startup to accommodate Unix code looking for sshd unprivileged account.. Most likely due to you domain not being accessible. If you are outside your domain network, try VPN or other means to connect to your domain first and retry. . When sshd is running interactively (to be used only for testing/diagnostics), the authentication flow is different - it doesn't invoke S4U token generation logic that needs access to domain. . Adding @nomorefood to this thread.\nHas it been working on the previous version. We had user name resolution changes in 7.7.0.0 and I want to rule out if they would factor in.\nSee https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps for info on how to generate traces. \n . Sure. It should be very easy to try out v7.6.1.0, just download in a different folder and run install-sshd.ps1 from in there. You can easy switch between the versions by re-running install-sshd.ps1 from the respective versions. . Ok. This does look specific to your environment. Can you add more details on your AD setup?\n. Without further details, it hard to guess what went wrong. Lets start of with traces, shttps://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. Does it show an error code with \nCould not open authorised keys. I meant does it show a numerical error code along with that message ?. I see this working from Windows to Windows on a session with PTY. Did a ping and Ctrl+C aborted it. \n@bagajjal any clue why this would not work from Linux to Windows ? Does TERM value matter for Ctrl+C ?. Check your service configuration (sshd_config). I guess you have specific entries for HostKeyAgent and PidFile. Behavior of current posix_spawn is to support launching ssh from sftp and scp. \nI like the idea of supporting a posix_spawnp variant that would respect PATH instead. Will have it supported in next drop. . AFAIK, you either need WinRM for a push solution or DSC/Chef/Puppet for a pull solution. . 1. Did you uninstall OpenSSH client too? \n\nI downloaded your linked package, extracted and see the following:\nPS C:\\Temp\\OpenSSH-Win64> (dir *.exe).VersionInfo\nProductVersion   FileVersion      FileName\nOpenSSH_7.7p1... 7.7.1.0          C:\\Temp\\OpenSSH-Win64\\scp.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\Temp\\OpenSSH-Win64\\sftp-server.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\Temp\\OpenSSH-Win64\\sftp.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\Temp\\OpenSSH-Win64\\ssh-add.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\Temp\\OpenSSH-Win64\\ssh-agent.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\Temp\\OpenSSH-Win64\\ssh-keygen.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\Temp\\OpenSSH-Win64\\ssh-keyscan.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\Temp\\OpenSSH-Win64\\ssh-shellhost.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\Temp\\OpenSSH-Win64\\ssh.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\Temp\\OpenSSH-Win64\\sshd.exe\n. What are your installation steps? If you run install-sshd.ps1, it just installs the services and does nothing to binaries. . Binaries and utility scripts are already signed. Are you asking for something else ?. Did you check https://github.com/PowerShell/Win32-OpenSSH/wiki/Logging-Facilities ?. are you hitting this https://github.com/PowerShell/Win32-OpenSSH/issues/1174. For now, I recommend turning on file based logging and give write permissions on sshd.log to your non-admin user. . What version of OpenSSH are you using? You didn't mention it earlier.\n\nHow did you create sftpuser account ? It looks like sshd was unable to generate token for this user using S4U logic. Does it work at all with any other account?. Server side logs?. This is by design and is done to accommodate case sensitive comparison logic in OpenSSH core code. Since principal names are case insensitive in Windows, we had to adhere to some form of normalization - we chose to resolve all names to lower case format. \nDo you see any issues with this?. Thanks for taking care of this @NoMoreFood . @surli yes. Do you know how to fix the \"latest\" tag? I always had GitHub do it automatically whenever a new release was pushed. . Can you double check that your session process on your server does have the complete command line:\n C:/Program Files/PowerShell/6-preview/pwsh.exe -sshs -NoLogo -NoProfile\nYou can the command line on task manager (by selecting command line column)\n. Remove / at ChrootDirectory and retry\n    ChrootDirectory D:/Data/FTProot/localuser/test/. There is not. Chroot will be their starting directory. . @bertrand24 good catch. \nWe need to add clean up logic. I believe we can remove the assignment right after token generation. We need to have the fix tested in @dwatley 's environment. I was not able to repro the original issue (that mandated this privilege assignment), on my side. \nWe need to do a LsaRemoveAccountRights after token generation in generate_sshd_virtual_token(). @NoMoreFood do you want to follow up with a fix?. Changes look good. @dwatley , can you validate the fix on your end please?. ssh-agent is disabled by default in April update. Can you explicitly enable it (you need to be an admin to do it)?\nAs for host keys, they should be automatically generated when starting sshd service. \n. You could do the following to set ssh-agent back to \"auto\" on-demand start:\nsc.exe config sshd start= auto\n@JKeithB we need to do a blog for the OpenSSH in April update (similar to the one we did for Beta in Fall update\n. Thanks. this will be fixed in next release. . Did you see https://github.com/PowerShell/Win32-OpenSSH/wiki/Building-OpenSSH-for-Windows-(using-LibreSSL-crypto) ?. @cbookg  thanks for following up. I'll pull in your fix.  . @NoMoreFood, I will follow up and get back (on both - pkcs#11 and readpassphrase()) by end of this week. What PKCS#11 providers are commonly used on Windows?. This is not related to #1206, rather #1082\nI believe if we can accurately implement execve() on Windows, this should go away. \n@penguin359 proposed a solution in #1082, but I haven't gotten far yet to think through and validate it.\nPlease continue further conversation on #1082 \n . Fixed in latest release. Not sure what File History backup does, but unless it explicitly calls out, I don't believe it does any encryption of backup.\nYou could simply passphrase protect your private keys (and not delete them once registered with agent). \n@joeyaiello can you fix the blog post and recommend creating passphrase protected private keys in the first place ?. https://github.com/PowerShell/Win32-OpenSSH/wiki/sshd_config#chrootdirectory\n. @nomorefood is this the same issue in https://github.com/PowerShell/Win32-OpenSSH/issues/1213. Thanks. Fixed it. . Can you share server side logs?\n. see https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. Did chcp 65001 fix your issue ?. You would see this, if sshd service process terminates before SCM is notified. \nHere are the underlying technical details. SSHD service is contolled via SCM. It has 2 primary threads, thread T1 is SCM control thread that dispatches service control instructions to SSHD. The other thread T2 is the one that is executing the main service loop. \nWhen you do net stop sshd, T1 issues a SIGINT that is processed by T2. We'll have to see if this SIGINT causes server_accept_loop to exit the process. . Possibly.. see if this helps: https://github.com/PowerShell/Win32-OpenSSH/issues/1133. That check in ssh-agent can be removed as sshd now runs as SYSTEM. We'll fix it. \nAs a workaround to unblock you, could you create/install a dummy sshd service like this:\nsc.exe create sshd binPath=C:\\Windows\\System32\\OpenSSH\\ssh.exe. From \n6456 2018-08-21 15:44:23.643 error: lookup_principal_name: User principal name lookup failed for user 'domain\\username' (explicit: 5, implicit: 5)\n6456 2018-08-21 15:44:23.644 debug1: generate_s4u_user_token: LsaLogonUser() failed. User 'domain\\username' Status: 0xC0000062 SubStatus 0.\n6456 2018-08-21 15:44:23.644 error: get_user_token - unable to generate token on 2nd attempt for user domain\\username\n6456 2018-08-21 15:44:23.644 error: unable to get security token for user domain\\username\n0xC0000062: \nSTATUS_INVALID_ACCOUNT_NAME  \nThe name provided is not a properly formed account name.\n@nomorefood any clue what might be wrong?\n. You are probably using a non-admin account. By default, only admins can log in sshd.log. You should see the logs once you adjust ACLs to allow \"Write\" access by your \"user\". . Actually not, you are perhaps not opening the file in \"share\" mode. The security issue unfortunately exists when you open up permissions on sshd.log. The changes in permissions are only advised for temporarily diagnosing issues with a specific non-admin user. . Yes ofcourse. Check out AllowUsers in sshd_config.. Keeping this open for tracking purpose.. Are LDAP accounts supported with OpenSSH for Windows ?\nI would delegate this questions to our AD expert @nomorefood. \n. Thanks. ssh background support is not in yet. \nIt should bail out right away with an error message instead. \n. Please check https://github.com/PowerShell/Win32-OpenSSH/wiki/sshd_config,\nYou should use domain\\username format. Principal names with spaces should be enclosed in double quotes. Not really. I added the entry upon looking at your issue :). Thanks for raising it in the first place. . Just tried out. It seems to work find with the following commandline options as detailed in \nhttps://docs.microsoft.com/en-us/powershell/scripting/core-powershell/ssh-remoting-in-powershell-core?view=powershell-6\npwsh -sshs -NoLogo -NoProfile\nIt does hang with just \n   pwsh.exe -NoProfile \nFrom your logs, it seems that this is your subsystem commandline. \nPlease follow up with Powershell team if this commandline is expected to work\n. From the following in your logs\ndebug1: subsystem: exec() C:/Program Files/Powershell/6-preview/pwsh.exe -sshs -NoLogo -NoProfile\nStarting session: forced-command (config) 'pwsh.exe -NoProfile' for zero\\\\zeroadmin from 192.168.2.13 port 63276 id 0\ndebug1: Executing command: \"c:\\\\windows\\\\system32\\\\cmd.exe\" /c \"pwsh.exe -NoProfile\" with no pty\nOn double checking, it does look like your subsystem commadline is correct, but its getting overridden by your ForceCommand specification. IF you remove it, it should work fine. \nOtherwise, I advice you to go over sshd_config documentation to understand the intricacies between ForceCommand, Subsystem and (windows specific) DefaultShell\nhttps://man.openbsd.org/sshd_config\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/sshd_config\n. Subsystem is not meant for straight ssh commands.\nYou may invoke a subsystem using ssh.exe with -s flag but you wouldn't want to do that.  \nThe subsystem you added for PS remoting is meant to understand PSRP protocol stream.\nIf your requirement is to run your plain ssh commands in a PS shell, you should be dealing with \"Default Shell\". \nBy \"Public Certificate Authentication\" did you mean ssh certificate authentication? If so, it should not have anything to do with PS or its subsystem. We have E2E test cases that validate cert auth and they all passed fine with this release. I recommend checking your cert auth scenario in a default setup first, and let us know if you see any issues?\n. @iainnicol thanks for catching this. @bingbing8, @maertendMSFT please follow up.\nWith privilege separation enabled, permissions on Windows are more aligned with those in Unix and it shouldn't take more than a couple of icacls calls to mend file permissions. Wonder if this utility is still required. . Not convinced about Kerberos session theory. If key based auth works, cert auth should work as well. Are you saying key based auth doesn't work either ?\nOtherwise, some technical background pertaining to your scenarios:\nA subsystem process is invoked via the configured shell. something like this\ndefaultshell.exe -c subsystem_commandline\nIn your case, you should be seeing something like this in your server side logs (with both DefaultShell and subsystem configured using pwsh.exe)\ndebug1: Executing command: \"c:\\\\ps6.1.0-rc.1\\\\pwsh.exe\" -c \"C:\\\\PS6.1.0-rc.1\\\\pwsh.exe -sshs -NoLogo -NoProfile\" with no pty\nOn my end, I was NOT able to geting Enter-PSSession working with both DefaultShell and subsystem configured using pwsh.exe (while it works with DefaultShell set to cmd.exe).\nSo it looks to me that pwsh.exe as a default shell would not allow you to work with pwsh.exe as PSRP subsystem. \n. @pldmgg think about any ssh session as something that connects 2 pipes (in and out) on client to 2 pipes on a target process in server. When you open up a remote session, you end up specifying what the target process is. In some cases it is explicit (when you invoke an explicit command) and in some case its indirect (when you invoke a subsystem) and in some cases its implicit (when you invoke an interactive shell)\nBy default, when you do an interactive session, you are connecting your client terminal pipes to a \"shell\" on your server side. Here \"shell\" is your server side process. \nWhen you do sftp, you are connecting sftp.exe and sftp-server.exe via ssh. In this case, sftp-server.exe is configured as a subsystem.\nWhen you open up an interactive session (ssh target), yes you'll never hit any subsystem (since you did not say so). If you do a (ssh -s subsystemname target), then you are telling your server to launch a subsystem process that is configured as \"subystemname\" subsystem. HTH.\nI just tried out your scenario E2E (with subsystem and without DefaultShell), and I was able to get -PSSession commandlets working for CertificateAuthentication. From your logs, I can only guess that your remote session process (pwsh.exe -nologo ....) is hung for some reason, that I dont know. \nRelevant entries from sshd_config\nSubsystem   powershell C:\\PS6.1.0-rc.1\\pwsh.exe -sshs -NoLogo -NoProfile\nTrustedUserCAKeys __PROGRAMDATA__\\ssh\\ca_userkeys.pub. Right\ndebug1: subsystem: exec() C:\\\\PS6.1.0-rc.1\\\\pwsh.exe -sshs -NoLogo -NoProfile\nStarting session: subsystem 'powershell' for redmond\\\\manojamp from ::1 port 57840 id 0\ndebug1: Executing command: \"c:\\\\windows\\\\system32\\\\cmd.exe\" /c \"C:\\\\PS6.1.0-rc.1\\\\pwsh.exe -sshs -NoLogo -NoProfile\" with no pty\n\n. I dont see any indication of server receiving a pubkey auth request. Can you also share client side traces ? (ssh -vvv) ?. @JKeithB need your help explaining OpenSSH on GitHub and OpenSSH on Windows. Please write up a wiki page as you suggested. . Did you follow troubleshooting steps in wiki ? doing a sshd -d should tell you why it was failing before . try with key based authentication.. I recommend thoroughly going through https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. It should explain why I talked about key based authentication. . SSH remote session processes run under the context of the authenticated user (in your case Kits-Service). Regular Windows ACL based permissions apply. If you want to restrict Kits-Service to a specific directory you may use ChRoot. @ethanhs we need to investigate this? Can you confirm that all these variations fail?\n- ssh ethanhs target\n- ssh ethanhs\\ethanhs target\n- ssh ethanhs@ethanhs@target. Alright. thanks for the follow up. Please use a user account that's not the same as the host name for now. . Was not able to reproduce on my end. \n1332 - \"No mapping between account names and security IDs was done.\"\nCan you check if the user account is in good shape? Are you able to login using those credentials interactively on your server? Can you try the same steps with a different/new account?. That was for 1332. Fixed it now. Recommend playing with one other account to scope down the issue . This one may be useful FYI too - https://github.com/PowerShell/Win32-OpenSSH/issues/518\nOtherwise network share paths are not currently supported with CHRoot - try creating a link to the UNC share and see if that works. \n. I was hinting at doing something like this on your server\nmklink /D D:\\share \\network\\share\nset CHRoot to D:\\shareLink \nPlease note that I haven't tested it out on my end and cannot guarantee that it would work, but I don't see why it would not work either. \n. Please share sshd logs. It looks like your scenario is not supported in OpenSSH. Did you try with a Unix target ?. Can you detail how the keys were generated in the first place?. Got it. Investigating. . @admo what's your server OS & OpenSSH version ?. Thanks. ssh-agent on Windows is using an older signing algorithm that your sever is rejecting. The issue is with ssh-agent version on Windows and there isn't any workaround unfortunately. I'll have it fixed shortly and can issue a patched version of ssh-agent if you prefer.. I've tried the following on 1809 update and it seems that reverse tunneling is working fine\nServer: Ubuntu\nClient: Windows\nOn client\n- Run an instance of sshd in debug mode on port \npsexec -s sshd -d -p 47003\n- launch ssh session with reverse port forwarding\nssh -R 47010:localhost:47003 targetuser@target\nOn Server\n- ssh into the daemon instance running on client\nssh -p 47010 clientuser@localhost. Unfortunately, this is not in this project's scope. I guess however that you could leverage posix library that is part of this project to create a native port of rsync for Windows. . PR out to remove sshd account dependency. https://github.com/PowerShell/openssh-portable/pull/348 . While we work on getting a blog article out, here's the current status of things. We've gotten most of the feature parity with Unix, with a few exceptions (listed in https://github.com/PowerShell/Win32-OpenSSH/wiki/Project-Scope). \nThat said, with an intent to not make any changes to original for-Unix code, we have a quite a number of #ifdef'ed Windows based logic in common code (with Unix). This makes the fork some what fragile with each integration from upstream (https://github.com/openssh/openssh-portable) having a merge overhead and a possibility of regressions in Windows. Our focus right now is to work with upstream community and see if these platform differences could be reconciled using platform abstraction. \nAs for the specific features you asked, here's the status:\n- Remoting - PSRP over SSH is supported with Powershell Core (https://docs.microsoft.com/en-us/powershell/scripting/core-powershell/ssh-remoting-in-powershell-core?view=powershell-6). We ensure that this will not be broken\n- key-based authentication and key management - works the same way as it does on Unix. AuthorizedKeysCommand is not supported yet, but will be in the next couple of months. \n- sudo - This is outside the scope of this project and there is no easy alternative at this point. Recommend asking Powershell experts. \n- Active Directory integration - Native support will not happen anytime soon since it involves changes to underlying code that will diverge this fork significantly. That said, with the support of AuthorizedKeysCommand coming soon, it should be easy to write a utility that could do AD key -user mapping out of band. \n- Credential Guard protection of keys/passwords - Not sure how passwords are applicable, but for keys, credential guard protection is in radar, we don't have an ETA yet. \n- Multi-factor auth support - This is currently supported by mandating both password and key-based auth. There is a provision to overload password auth (ex. to support a OTP login via custom LSA provider). \n- depth of planned integration with PSCore - While PSCore is dependent on OpenSSH (for PSRP over SSH), OpenSSH itself is an independent project. As said earlier, we will ensure PSRP over SSH is not broken. \n- security or crypto library issues - there are none at this point. \n. For sudo, you could do a nested ssh from within the remote session\nssh -t adminuser@localhost . @illera88 \n\nAny reason to use LibreSSL instead of the Windows Crypto API?\n\nOpenSSH is tightly coupled to LibreSSL/OpenSSL via OpenSSL crypto interface. Its not easy to adapt this interface to Windows CNG. \n. What does this mean?\n\"refers to server based database for authentication\"\nCan you explain how the above authentication works. It doesn't sound like regular Windows authentication \n. Ok. Thanks for the info. We've never validated via pGina. I don't know what the issue on your end it but I'm sharing some technical details that may help you take this further. \nOpenSSH calls LogonUser* Windows APIs to perform authentication. It doesn't have any configuration/flexibility to use into any other forms of authentication/API calls. . Without logs, there is not way to guess what's going on. Please refer to https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps and get us client and server side logs when you get a chance.. sshd -d \nNote -d instead of -D.\nOtherwise, when running sshd in non-debug mode, you are expected to specify the full path, this is a security requirement that's the same on Unix. . Please follow steps here - https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. Thanks for catching this. @bingbing8 can you follow up ?\n. @lars18th you are right. We plan on supporting it soon, just that we did not find time to investigate and take the next steps. @NoMoreFood thanks for the pointer on DotNet libraries, however, we do not want to rely on something that's optional.\nnext steps is to see if there is a version of DEFLATE implemented inside of Windows (I'm pretty sure there would be one, since its a basic compression algo). IF we do find one, it would probably need to be refactored to fit in zlib interface.  IF not, implement one from scratch or perhaps onboard zlib for Windows. \n. @NoMoreFood sure, please make it available as a release in your fork() for folks to try out. . @masaeedu can you do us a favor and get a dump of sshd service process. once you see it stop responding:\nFollow these steps:\n- Identify sshd process - TaskManager -> ServiceTab\n\n- Right click -> go to details\n- Right click on sshd.exe process --> Create dump file\n. @masaeedu see instructions in https://github.com/PowerShell/Win32-OpenSSH/issues/1293#issuecomment-446745802 to find which sshd.exe process to dump. . So it was working alright locally over loopback ?. @NoMoreFood, recommend posting binaries (as a release in your fork ?) so we can get your work tested out and validated. I wont be able to get to reviewing your changes until next year, have my plate full until then. \nOtherwise, I'm wondering if your changes are specific to supporting Kerberos or can they also do SPNEGO (that can also do NTLM if needed) ? Sorry if my question is na\u00efve, I'm getting myself familiar with the history and usage of GSSAPI. . Thanks @nomorefood for yet another phenomenol contribution. I didn't expect this to materialize anytime soon.. If you are seeing issues with OpenSSH in-box in Windows, recommend posting in Microsoft forums so you get the attention via official support. You could also post it in here - but note that work on this repo is a community effort, with no SLAs on any issue resolutions. . @soleroitsolutionsltd please detail the repro steps, and possibly what you error you expected. . Can you please fill in the template ? . @illera88 \nsshd needs to run as system to be able to spawn off child process in different security contexts - these include sshd nonprivileged workers and user session proesses. sshd in interactive mode is only supported for debugging purposes. Also make a note of this restriction in https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps\nsshd.exe -d This will run sshd in interactive mode under currently logged on user (typically as admin). Note that, in this mode, you can only login as the \"currently logged on user\" and only using \"key based auth\". To overcome these restrictions, you should instead run psexec -s sshd.exe -d to run sshd as SYSTEM.\nCan you please summarize again what your requirement is?. Recommend uncommenting\nMatch Group administrators\n       AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys\nMake sure C:\\ProgramData\\ssh\\administrators_authorized_keys is a file (and not a folder containing key files)\nAnd its administrators_authorized_keys and not administrator_authorized_keys \nFor administrator C:\\ProgramData\\ssh\\administrator_authorized_keys. @NoMoreFood  right. That permission should not be there. @schmitch where did you get your version of Repair-AuthorizedKeyPermission utility ?. @bingbing8 any clue on how Repair-AuthorizedKeyPermission could automatically land up in a system ?. @RaymiiOrg your best bet is to do a nested ssh from within the remote session\nssh -t adminuser@localhost . @bingbing8 please take a look. Please get server side logs. Instructions at\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. You'll need to read from stdin and not from Console. \n. OK. I'm not all familiar with .Net. When you do the following - is your app able to read \"input\"?\necho input | C:\\path\\to\\myprogram.exe\n. None that I could think of. How do you invoke your subsystem on your client? . can you try with no TTY/PTY\nssh -T localhost -s mytest. This is fixed in 7.7.*. Please try the latest version. Reopen if you still see any issues. . hmm. you should see 7.7 in the latest update (1809)\nc:\\ ssh -V\nOpenSSH_for_Windows_7.7p1, LibreSSL 2.6.5. I've raised an issue to have the docs updated. \nssh-agent installed in-box in Windows 10 is by-default disabled. You'll need to run the following as admin to enable it\nSet-Service ssh-agent -StartupType Manual\n. You can also tweak AuthorizedKeysFile\nhttps://man.openbsd.org/sshd_config#AuthorizedKeysFile\nand manage user keys in a custom directory\nEx. c:\\sshuserkeys\\%u\\authorized_keys\n. These releases on GitHub are not officially serviced. If a security issue gets uncovered, a fix may be included in a later release on GitHub, but a patch wont necessarily be issued for a specific version you may be relying on. . @gwojan we have a couple of features in pipeline and will do a release this month. OpenSSH base has moved to 7.9 and there are some significant changes that we had to get in and ensure Windows support hasn't regressed.\n@jborean93 GitHub releases are done more often and should have the latest changes. OpenSSH installed through Add-WindowsCapability is version the comes as part of Windows will typically be based off a previous version of Github release. . \nConsider this sample release train above. The latest GiHub release will typically be experimental with new features. Windows official releases are based on stable and thoroughly tested versions of GitHub releases with additional fixes that may go in as needed. These will be officially serviced, so you'll automatically get any security fixes via Windows update. \nIf you are basing yourself on a V3 version of GitHub release, you wouldn't, automatically, get any patches for any relevant security issues. The hypothetical security fix could make it to V5 of Github release, but you wouldn't want to keeping rev'ing up OpenSSH in your production based on experimental releases of GitHub.  HTH.. Those were just sample versions. The intent is to explain what it means to say that GitHub releases are not serviced. You're right, 7.7.2.0 is the GitHub release that Windows 2019 version is based on. You will observe that Windows 2019 will have 7.7.2.X to account for any patches on top of 7.7.2.0. \nNow the point I was trying to make is that if you rely on 7.7.2.0 on Windows 2016, there is no official install vehicle and servicing pipeline for downlevel Windows platforms, so there is no way you can expect updates via WU/WSUS. . Did you see\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples\nIt should be straight forward to set it up. If you need to trouble shoot see:\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps.  C:\\users\\myusername.ssh\\authorized_keys\nThis is a file name and not a directory.. You'll need a pageant expert to see what's going on, on the agent side. Does it generate any logs to trouble shoot ?\nDoes this work ?\nssh-add -l. Thanks. Fixed. . Your private key should only be accessible by your client (IIS process) and none else. \nWhat user context is your IIS process running as ?. Reason behind this change: You could otherwise do the following in a non-elevated session, when sshd is running:\ncd %userprofile%\nssh-keygen\ncopy .\\.ssh\\id_rsa.pub .\\.ssh\\authorized_keys\nssh localhost \"i can do a privileged task\"\nThis would bypass Windows UAC and lead to privilege escalation.\nHow can we solve this?\nBy making sure that the default location of authorized_keys for administrators is itself in a privileged location that only Administrators have access to.\nWhere could it be?\nWhy not %programdata%\\ssh since it hosts the rest of ssh/sshd config too\nShould we separate out authorized_keys for different users in Administrators group?\nLets see. If I'm an admin, there nothing stopping me to play around with sshd config and do something like this\nImplant this in sshd_config\nAuthorizedKeysFile c:\\mystaticauthorized_keys\nand effectively login as any user I wish. So, there is no real security benefit in separating authorized_keys for users in Administrators group. With an intent to keep things simple, we decided to go with a single file. If you wish, you could override it with something like this:\nMatch Group administrators\n       AuthorizedKeysFile __PROGRAMDATA__/ssh/%u/authorized_keys\n. Feedback taken. We'll consider a change in the next release. For the time being, please override. Also bear in mind the implications with domain accounts (%u would resolve to domain\\user). \n. Its not supported yet. Updated https://github.com/PowerShell/Win32-OpenSSH/wiki/sshd_config\n. Thanks. Fixed. . Its not in the horizon yet, unfortunately. It relies on a particular feature of Unix Domain sockets ( passing ancillary data ), that's not easy to realize in Windows. . IT must be happening due to ssh session processes inhering environment state from sshd parent. \nAs a workaround (only works for admins), you could restart sshd process from within remote session after a change in env state. . Underlying issue is the same discussed in #856.\nThe IO on /dev/null (specified via -n) is somehow getting hung when NUL is explicitly redirected. \nFollowing would still work\nssh -n -T user@server ls > stdout.txt 2> stderr.txt\nI've put a workaround for the issue and you should have it in next release. \nPrivate: ssh.zip. Sincere apologies. We were not aware of the conflict in the first place, nor prudent enough to check how Cygwin is hosting OpenSSH. \nI'll put the following notes in wiki:\nNote to Cygwin users, to host Cygwin's version of OpenSSH daemon, you need to first delete Win32 OpenSSH service registration\nsc.exe delete sshd\nYou may host Cygwin's OpenSSH daemon along side Win32's version by registering the later with a different name (say win32sshd), by doing the following in elevated Powershell\nNew-Service -Name win32sshd -BinaryPathName 'C:\\Program Files\\OpenSSH\\sshd.exe' -StartupType Manual\n. @NoMoreFood interesting, I'm seeing this behavior in 7.9 too (only cert is reported).\n@cdstg will see what's the difference between the Unix and Windows versions of ssh-agent. Otherwise, why would you need both of them listed? Even if only the cert is listed, AFAIK, it should work in cases where the public key is \"authorized\" on the server. No? . @alexv1n can you try out patched binaries from @nomorefood in this thread - https://github.com/PowerShell/Win32-OpenSSH/issues/1338\nYou would just need the updated version of ssh.exe. . Please reopen if you feel necessary.. Sorry. There aren't enough details to understand what the issue is. Reopen/File new with template filled. . Lets take it step by step. What's the version of Windows you are using?\nAfter you added SSH Server via Programs and Features - \n- did it succeed  in installing the server?\n- net start sshd - did this work ?. @Alwaysin, you said that it was randomly failing before. If the issue is due to \"administrators\", it should reproduce consistently. No?. @NoMoreFood why would you see a logon over SSH \"interactive\" ? Even with Powershell remoting, you should be seeing the same behavior (remote powershell sessions run under \"network logons\". . Windows does not have privileges ports. Looks like you are seeing this due to Unix specific condition checks on the client side. \nAs a work around, use a port over 1024. . We cannot change core OpenSSH code. Add a #ifdef block.. Look elsewhere in this file that also had to deal with fdopen. . Understand this is a constructive change. But we prefer not to make any changes to base code to reduce merge conflicts. We are not anyway near to integrate this upstream.. ",
    "quamrulmina": "Recreated the problem easily. We will fix it.\n. Fixed the problem and checked in the code to GitHub. Was able to recreate the problem and the updated code fixes it.\n. Updated code to GitGub to fix it. .ssh directory in the user's home directory were not created and thus known_hosts file could not be written. Please test it and then close it if the fix works in your setup.\n. Control-Break works instead of Control-C to get out of session, we will try to fix it to accept control-c for exiting like in openssh Linux.\nBut we tested backspace processing to work in ssh.exe client during password typing or giving passphrase. ssk-keygen.exe backspace processing also works when giving passphrase. Can you kindly retest your scenario with the latest binaries. Control-C is a problem but backspace should not be.\n. Fixed it and checked in the code. Great suggestions \u2013 Linux/Unix openssh works the same way \u2013 no \u201c*\u201d feedback in password or passphrase.\nThanks. Quamrul Mina.\nFrom: Mark H\u00e4hnel [mailto:notifications@github.com]\nSent: Tuesday, October 20, 2015 1:55 AM\nTo: PowerShell/Win32-OpenSSH\nCc: Quamrul Mina\nSubject: Re: [Win32-OpenSSH] none of the client executables accept \"Ctrl+c\" and \"backspace\" while feeding a password (#5)\nThere shouldn't be any \"*\" when entering a password.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/5#issuecomment-149454658.\n. Fixed in L1 branch. Control-c is now sent to the sshd server and will not terminate ssh.exe client itself. To terminate or abandon client, type Control-break. Backspace also now works when typing password.\n. Improved the code and ssh users will see user@target c:\\users\\user as the cmd shell prompt for ssh sessions to our server. Code checked into GitHub. Please verify and see if meets the usability suggestion. Fix is in sshd.exe .\n. Fixed the code so that user's home directory is the remote working directory like in other openssh platforms. pwd will show it correctly now. We can set it to one level below at \"Documents\" folder of the user's home directory if you think that is a must do as it veers from ssh and openssh common practice.\n. Fixed in upcoming release.\n. Known limit now - cmd.exe shell runs but Powershell does not. Our win32 port of sshd server does not provide a console as input in pty/tty mode and powershell seems to need a console input to run in interactive mode. Notice cmd.exe shell does not have this need and so runs fine. \n. \"powershell -File -\" invocation will make it work now as it is a known issue of powershell.\n. Invoke as follows to make it work:\nssh user@domain@hostname powershell -File -\nFrom a cmd.exe remote shell:\nssh user@domain@hostname\nc:> powershell -File -\n. In the upcoming release it has been fixed and \"ssh user@domain@hostname powershell -File -\" will work. But it will work even better if you launch powershell after getting to the interactive shell, cmd.exe, in this case so that pty support like echo characters are available:\nssh user@domain@hostname\nc:> powershell -File -\n. Fxied in new upcoming release. ssh.exe client now is much more function rick and should work better. The client has ANSI/Vt220 support and sets TERM to vt220. sudo showing password is also fixed as ssh client does not do local echo which it was to do before showing everything typed.\n. Fixed in upcoming release\n. New ssh client in upcoming release is more feature complete and the problem is likely fixed.\n. Fixed the problem. Our ssh client will now work with all versions of Tectia ssh servers.\n. Fixed in new upcoming release. \"clear\" in in Unix/Linux shell works and \"cls\" in windows cmd.exe shell now works.\n. cls in windows shell cmd.exe works and clear in Unix/Linux shell works. Only thing will not work is \"cls\" in Powershell with our sshd as powershell can only be run in file stream mode ( powershell -File - ) in our current sshd Windows implementation and it does not see the output device as a console. Closing the issue as the limitation is due to current design/windows shell.\n. It is a significant design/development issue and not in the current plan. MS Powershell team will address that in future.\n. rsa support is on by default but dsa/dss support is enabled by the following:\n- Add line in your ssh client \"config\" file.\n  PubkeyAcceptedKeyTypes ssh-ed25519_,ssh-rsa_,ssh-dss_,ecdsa-sha2_\n-Name the config file \"config\" and place it in the users home directory/.ssh in windows.\n/users/myname/.ssh/config\n- *in the current build, the client config file is to be named ssh_config instead of \"config\"\nThe sshd server side should also have the following entry in sshd_config file:\nPubkeyAcceptedKeyTypes ssh-ed25519_,ssh-rsa_,ssh-dss_,ecdsa-sha2_\nrestart the sshd server after making these changes.\n. Fixed. ssh client will now restore previous color when a session has ended. Tested with vim to now work.\n. commands like \"sudo -s\" and \"sudo -I\" now works using our ssh client . Tested with our latest ssh client from powershell as shown in the issue.\n. Cmd line ssh-agent.exe and ssh-add.exe now works in Windows in the new code update and setting SSH_AUTH_SOCK environment variable will not break ssh client rather ssh client uses it to communicate it with the ssh-agent.\n. 1. it is a limitation of current sshd and Powershell such that Powershell have to be run in stream io mode of \"-File -\" option instead of a windows console.\n2. Same limitations as described in 1 above.\n3. Has been fixed in recent release.\n4. Please try with recent release. Any limitations is due to what is described in 1 above.\n5. yes - up/down arrows do not work. It is an current implementation limitation of sshd server & windows shells running in stream mode and not having a console when run remotely.\n. It will be fixed in a future release - Domain account with keys can be authenticated. It is a current implementation limit but will be fixed considering keys authentication is widely used instead of password.\n. Future installer will add a path to Path environment variable where all ssh binaries are located.\n. Please try it with the latest release. \"ssh someuser@somehost cmd.exe /C dir\" should not produce the directory output of the user's home directory.\n. New releases have fixed the issues. Windows cmd shell commands are to be run using cmd /c command format but other external commands can be run directly without cmd. E.g. all these will work:\nssh someuser@somehost cmd /C dir\nssh someuser@somehost cmd /C set\nssh someuser@somehost hostname\nssh someuser@somehost myprogram.exe\n. domain users should work with password login. Specify in user@domain@hostname format. E.g. john@windowsdomain@mymachine should work. Public key login now works with local account only but will be fixed in a future release to work with windows domain account also.\n. --For backspace to work from a Linux client, you need to set erase character in the shell your are using \"stty erase ^?\" command in the shell or your profile. \"stty -a\" shows all the current setting of the shell terminal. Our sshd server (actually windows shells like cmd ) expects \"control h\" as the backspace/erase character and not DEL.\n--Tab autocompletion will not work in sshd sessions with windows shell (cmd or powershell) and it is a  limitation of the current design.\n. backspace works if the linux/ssh client is set properly. Tab auto-completion not working in sshd sessions with windows shell is a current design limitation.\n. scp client and server both now works in Windows. Please report any scp or sftp problems creating new issues ticket. Thanks.\n. Fixed to meet SFTP spec by having all paths start with a slash '/'. Win32 sftp-server now sends paths with a slash at the start. /C:/Users/John will be transmitted as the path to sftp clients when a typical user John directory is at C:/Users/John .\n. Fixed to meet SFTP spec by having all paths start with a slash '/' .\n. Good suggestion. Fixed in updated code. Now we add \"Microsoft_Win32_port_with_VS\" or \"Microsoft_Win32_port\" to the base version info to identify Microsoft Win32 port build with Visual Studio or Mingw/gcc compiler respectively. One of the two below is used to identify Win32 ssh/sshd:\nSSH-2.0-OpenSSH_7.1p1 Microsoft_Win32_port_with_VS\nSSH-2.0-OpenSSH_7.1p1 Microsoft_Win32_port\n. Key conversion from Putty .ppk format to openssh format solves the issue as shown in  http://stackoverflow.com/a/2224204\n. 1) rsync is not bundled in Windows or is in our ssh package. Hence your rsync command does not work.\n2) scp client and server and sftp client and servers are now available in our package and have been improved with various fixes related to file and directory accesses. ubuntu sftp and scp works with our sftp server and scp server. Please try ubuntu Nautilius with your remote directory access and it should work now.\n. We tested it to work from ubuntu gui Nautilus client using \"sftp://username@windowshost\" format . So will close the issue.\n. Password login for domain users are allowed but you need to specify the domain in the client invocation using user@domain format. Two examples that will work:\nssh user@domain@hostname\nssh -l user@domain hostname\n. it is a known restriction in our sftp-server and will be fixed in the next release. For now you are restricted to the drive sftp server is installed on. You can go to other directories now by doing \"cd /mydir\" or \"cd /dir1/dir2/dir3\" , etc. All directory movement is done to the current drive which is typically C drive.\n. Fixed in updated new code. You can change drives now. E.g. \"cd d:/mydir\" will take you to d: drives mydir.  cd e:/   or  cd e:\\ or cd e: or cd e:/dir1/dir2/dir3 all works. Tested with USB and real drives.\n. Your suggestions will be considered as we expand the feature list.\n. You have to invoke powershell with \"-File -\" arguments as shown below.\npowershell -File -\nlook at closed issue #16 for full description.\n. You need to issue the windows shell command using \"cmd /c dir\" format. The following will work for you from any ssh client:\nssh administrator@MYHOST \"cmd /c dir\"\n. Since we do not know which shell one wants, shell commands should be run passing the shell and the needed parameters.\nFor Windows cmd shell, the format is \"cmd /c dir\" style. The full ssh command for the stated issue is:\nssh username@hostname \"cmd /c dir\"\n. you need to invoke Windows shell commands with the shell as the first parameter \"cmd /c dir\" format instead of just \"dir\" . This is only needed for windows batch files or windows shell built in commands. External programs can be run without \"cmd /c\" .  Both the commands below would work for your case. See issue #60 also.\nssh -i %pem%.pem %user%@%ip% \"cmd /c dir\"\nssh -i %pem%.pem %user%@%ip% cmd /c dir\n. your syntax is wrong. it should be given as:\nscp -v one-file username@Win32-OpenSSH-host:c:/Users/username\nor\nscp -v one-file username@Win32-OpenSSH-host:c:\\Users\\username\nWindows paths should be given in Windows style drive letter and directory format. Both backslash and forward slash are accepted by our Win32 port openssh.\nA better way is leave the user's home directory on the target as that is where things are assumed to go if not specified.\nscp one-file username@Win32-OpenSSH-host:\none-file will be found in c:\\Users\\username\\one-file  in all cases.\n. The problem has been fixed and code updated. The 32 bit build needed the header file to be added.\n. Please verify the fix and then close the issue if the fix worked for you.\n. APPDATA, LOCALAPPDATA are set correctly and HOMEDRIVE, HOMEPATH are also set user's home directory drive letter and directory path as in Windows interactive shell\n. Good find & suggestions. In future, it and any other missing environment variables can be added in the sessions.\n. ssh-agent.exe and ssh-add.exe now works in Windows in the new code update. setting SSH_AUTH_SOCK environment variable will not break ssh client rather ssh client uses it to communicate it with the ssh-agent.\n. Closing the issue since the problem is fixed. Please reopen it if the problem arises in your tests.\n. Fixed in ssh client source code so that Roaming is disabled and this vulnerability is not present.\n. \"ConnectTimeout\" option is not implemented in current Windows port of OpenSSH and should be avoided or commented out in ssh client \"config\" file .\n. We tested similar commands and it works. Please make sure that your 8087 app is running. Also use our latest build.\n. Tested this scenario to work with a Windows telnet server and a telnet client. The user must make sure their app on port 8087 is running and listening. Closing the issue as test scenario in our lab testing worked.\n. Logging happens but the log file is in c:\\ root drive at c:\\sshd.log ; this problem has now been fixed and that sshd.log will be in the directory where sshd.exe binary is located in future builds.\n. publickey login is only supported for local (non-domain) users in current releases. Password login will work for domain user as well as local user. Please make sure the public key of the user is in authorized_keys file in the user's home directory in the server ( e.g. c:/users/username.domain/.ssh ).\n. cd c:/users is the right form. Use forward slashes and colon after drive letter. cd c:\\users will also work - need two back slashes to get one backslash. Also drive letter support got added in the newer builds - make sure you are running the newer/recent builds.\n. To use directories/files with spaces in their names, use \"\" around it. For example, cd \"c:/Program Files\" \n. use control+break ( control break) to abort a password sequence.\n. Please use the latest build. What you describe works and should work in the latest builds. cd C:/Mydir will work in sftp clients. Forward slash directory path like Unix is used in directory naming. Chroot feature does not work in Windows. In Windows sftp server, home directories are set to the user's actual home directories ( like c:/users/username or c:/users/suername.domainname ) . You should also undo your changes in sshd_config for home directory if cd c:/Mydir still does not work in your environment after using the latest build.\n. Use user@DOMAIN format. The following will work for Win32 ssh port.\nssh -l user@DOMAIN host\nssh user@DOMAIN@host\n. To my knowledge, Win32 OpenSSH ported sshd and ssh currently has not implemented DOMAIN\\user formats but user@DOMAIN format is implemented. So to provide domain name explicitly, use user@DOMAIN format .\n. sshd code fixed now so that domain\\username format now works for password logon. username@domain form also works like before. The issue was in win32 sshd server and not in the ssh client. Note:Public key logon still is limited for a local account and will not work for a domain account.\n. You need to use \"powershell -File -\" instead of just typing powershell in remote sshd session. It is a known issue due to both how powershell remotely works and how win32 ported sshd is currently designed only providing streammode/linemode features and not true windows console underneath. See closed issue #16 for full description on why you need this special options (- File -) to run powershell in sshd.\n. reduce your logging level by commenting out LogLevel in sshd_config file. It is located in the directory where your sshd.exe is. Comment out (#LogLevel .. ) or have it as \"LogLevel INFO\" . Restart your win32 sshd to make the change effective.\n. You can map drive within sshd sesion if you did login with password as follows:\nnet use t: \\vboxsrv\\sharename\nIf logged in via public key or the remote share need a different username and password credential, you can do as follows:\nnet use t: \\vboxsrv\\sharename  /user:domainname/username *\nthen type the password when prompted.\n. Actually, Windows APIs/C/C++ runtime APIs allow mixing of slashes and the directory \".ssh\" will be created if needed and the file id_rsa and id_rsa.pub will be created in that directory. So generating public/private key pair would actually succeed. But decoratively, the forward slashes can be converted to all back slashes in the code to make things look Windows oriented to the user for usability.\n. Actually, Windows APIs/C/C++ runtime APIs allow mixing of slashes and the directory \".ssh\" will be created if needed and the file id_rsa and id_rsa.pub will be created in that directory. So generating public/private key pair would actually succeed. But decoratively, the forward slashes can be converted to all back slashes in the code to make things look Windows oriented to the user for usability.\n. It seems the output sockets are being closed prematurely before all program output has gone out. This will be fixed in a future update. Only one \"cmd /c\" is needed when one is running a shell command giving the command in the ssh invocation ass follows.\nssh user@machine cmd /c set        -- will succeed and show all env vars of cmd shell\nssh user@machine set                    -- will fail as \"set\" is a cmd command and cmd is not specified\nssh user@machine ipconfig            --- will succeed as \"ipconfig\" is an external program\n. ",
    "markhaehnel": "There shouldn't be any \"*\" when entering a password.\n. ",
    "ariscop": "This is intended, at least on unix, so the daemon can be restarted without killing active sessions\n. Could do something like a service stop kills active sessions, but restart does not? i'm not familiar enough with windows services to know if thats possible\n. This bug was fixed, powershell's io is sent over ssh instead of using the sshd's console\nOn the latest release powershell is still broken, but it's a different bug\n. As a workaround you could use psexec -i to interact with a specific session, from sysinternals. ",
    "nachfuellbar": "I think forked children should continue to run\ni.e. if you change sshd configuration and you want to restart the daemon to apply settings\n. Maybe this is possible\nJust want to know:\nIs stopping connections on stopping of daemon needed (or really wanted)?\nOn linux i kill all ssh processes if i need to (doesn't happen too often)\nMostly i kill specific sessions; till now i've never needed all open connections to be closed on sshd restart or stop\n. @war59312 \nimho implementing this in a client shouldn't be an real security issue (putty and openssh on unix support this too)\non server side (daemon) deprecated protocols shouldn't be supported\n. I tried adding KexAlgorithms to my ssh_config (system-wide and user)\non system-wide it seems to work, ~~on user it doesn't use the KexAlgorithms option~~\ni recognized if i use the default parameters of OpenSSH 6.2 i get an error for this algorithm:\nUnsupported KEX algorithm \"ecdh-sha2-nistp521\"\nEdit: didn't open new cmd after editing user ssh_config\n. I got ^A at the end of the line\nI tried this multiple times now and it's seems like this work most of the time\nOnly sometimes i can't use this shortcuts; On powershell this works every time for me (except for blanking of the input)\n. Only happend on cmd's which i used over a longer time (hours to days; with multiple commands including telnet)\nCan't reproduce this at the moment\n. No problem with my setup\nUsed cmd and powershell to connect to SLES11 Server with OpenSSH 5.1 and bash+sh as shells\n. @jungle-boogie i'm using the same binary download\nno source build version\n. Hello @markagarcia \ndid you add \"C:\\Program Files\\OpenSSH-Win32\" to your PATH enviroment?\nWithout this your powershell/cmd won't find the executables (because it doesn't know where to search)\n. I think ssh executables will placed in C:\\Windows\\system32 (on 32 Bit systems) or C:\\Windows\\SysWOW64 when they create a installer\nIf so adding directories to Path enviroment will be unnecessary\nAnyways i'm glad i could help\n. Hi @jpierson \nchocholatey package seems interesting; i didn't knew this tool\nare there any real advantages to msi (except updating)?\ndoes it work reliable?\n. https://github.com/PowerShell/Win32-OpenSSH/issues/23\n. You used Putty Private Key format (.ppk)\nConvert your ppk to Openssh Key File (id_rsa)\nHowto:\nhttp://stackoverflow.com/a/2224204\n. https://github.com/PowerShell/Win32-OpenSSH/issues/42\n. Correct me if i'm wrong (i'm currently on my linux notebook)\nShouldn't APPDATA refer to %USERPROFILE%\\AppData\\Roaming?\n. To me this doesn't seem useful, too. Maybe with more verbosity? (ssh should accept -vvv as maximum)\n. https://github.com/PowerShell/Win32-OpenSSH/issues/81\n. I don't know the error but could this be some error like this: https://github.com/PowerShell/Win32-OpenSSH/issues/81 (missing ssh-lsa.dll in c:\\windows\\system32)\n. https://github.com/PowerShell/Win32-OpenSSH/issues/126\nquamrulmina wrote:\n\nChroot feature does not work in Windows. In Windows sftp server, home directories are set to the user's actual home directories ( like c:/users/username or c:/users/suername.domainname )\n. https://github.com/PowerShell/Win32-OpenSSH/issues/159\n\nlike @manojampalam said in this issue, you can expect a better working solution end of May\n. ",
    "warrior2": "how to fetch it?\n. ",
    "akkatracker": "Yep, @Hipska it is @AnneTheAgile there's a spelling error. \n. ",
    "jungle-boogie": "I'm able to login on a freebsd system from widows 7.\nCheck your sshd config on freebsd machine. Perhaps you have too restrictive of host key settings.\n. Hi @dwimsey,\nHow would you suggest I check this?\nThanks!\n. What's sudo -v do for you? It prints my password in plain text with xterm and/or dumb term.\n. What's the current behavior when you use ctrl + a? Does it not work at all?\n. Hi @nachfuellbar,\nWhat windows ssh client version are you using? I'm using the one from this month: 11_09_2015\n% ssh -V\nOpenSSH_7.1p1, OpenSSL 1.0.1p-freebsd 9 Jul 2015\nThanks!\n. Hi @nachfuellbar,\nI cleaned up my .zshrc and it works now. I had a basically had duplicate path in my file:\nPROMPT=\"[%n@%m %~]%# \".\nInterestingly this only showed up with powershell SSH.\n. ",
    "GanLuo96214": "$ ls\nls\n$ ls -la\nls -la\ntotal 52\ndrwxr-xr-x  5 local_test  wheel  512 Aug 17 09:46 .\ndrwxr-xr-x  5 root        wheel  512 Apr  2  2015 ..\ndrwx------  3 local_test  wheel  512 Aug 17 09:46 .config\n-rw-r--r--  1 local_test  wheel  967 Mar 30  2015 .cshrc\ndrwx------  3 local_test  wheel  512 Aug 10 09:07 .emacs.d\n-rw-r--r--  1 local_test  wheel  251 Mar 30  2015 .login\n-rw-r--r--  1 local_test  wheel  162 Mar 30  2015 .login_conf\n-rw-------  1 local_test  wheel  378 Mar 30  2015 .mail_aliases\n-rw-r--r--  1 local_test  wheel  335 Mar 30  2015 .mailrc\n-rw-r--r--  1 local_test  wheel  747 Mar 30  2015 .profile\n-rw-------  1 local_test  wheel  280 Mar 30  2015 .rhosts\n-rw-r--r--  1 local_test  wheel  977 Mar 30  2015 .shrc\ndrwxr-xr-x  3 local_test  wheel  512 Aug  6 14:30 .subversion\n. just like this\n. sry my mistake\n. ",
    "tseward": "Thanks, that worked.\n. ",
    "bingbing8": "whenever applicable:\nreplace memcpy with memcpy_s\nreplace strlen with strnlen_s\nreplace vsnprintf with vsnprintf_s\nreplace snprintf with _snprintf_s\nreplace strcpy with strcpy_s\nreplace wcscpy with wcscpy_s\nreplace strcat with strcat_s\nreplace wcscat with wcscat_s\nreplace sprintf wtih sprintf_s\nreplace swprintf with swprintf_s. directory copy is fixed on latest. Please check on the next drop when it is available.. close per marchrock's comments.. Please try again on latest build and reactivate if you find any issue.. This should be fixed by now. Try latest release and reopen if needed. . Reopen if needed with the appropriate info on how this can be done on Unix.. Try with the latest build (0.0.7.0). Reopen if needed. . Production ready releases will have signed payload. Reopen if needed. You need to do the following to get a remote cmd session on nano (since Nano does not support PTY)\nssh.exe user@target cmd.exe\n. Did you mean to open this in Powershell issue list? If not please clarify and reopen.. -p is used to preserve the modification time. This is not an issue.\n. When -p is used, the Second or Ticks parts of the time is different.\n. fixed. Reopen if you still see it.. fixed.. It works after the commit \"SCP fixes and cleanup\". @anurse, this is due to the same issue as #752. Can you try the workaround in Setting up a Git server on Windows using Git for Windows and Win32_OpenSSH. please let me know if you see any other issue.\nMove this issue to Beta until we have a proper fix on server.. This issue is duplicate with issue 340 when copy files locally on windows, it trying to find the path of cp while we should use copy command.. not duplicate but fix in the same PR. This is fixed in the latest release. this issue is not repro on the latest build. please try it again on next release and reopen it if it still repros.\n. All tests are fixed except those in utf8. . Can you please try out the latest version?\nIf it still doesn't work, can you check if sshd works in debug mode?\nIn an elevated admin console - sshd.exe -d \nas detailed in wiki. Which build do you run? . Please reopen if you see it on latest release.. This is due to function w32_chmod is not implemented.\nint \nw32_chmod(const char *pathname, mode_t mode) {\n    /* TODO - implement this */\n    errno = EOPNOTSUPP;\n    return -1;\n}. The root cause is as follows:\nWhen chmod has error, run_err tries to write info to info to pipeline. fdopen failed because fileip_fdopen did not completely implement\n```\nfileio_fdopen(struct w32_io pio, const char mode) {\n    int fd_flags = 0;\n    debug2(\"fdopen - io:%p\", pio);\n/* logic below doesn't work with overlapped file HANDLES */\nerrno = ENOTSUP;\nreturn NULL;\n\n. fixed the chmod. issue in fileio_fdopen will be fixed separately.. When do you get this error? when running a command? or during installation? @Janareddy . Consider output of user names with accounts that dont exist anymore.\nCreate user\nCreate a file owned by that user\nDelete user\n. not repro. does not repro. Please reopen when you can repro it.. @david-chaves, I still can't repro.  Are you able to repro it on [latest release](https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.6.1.0p1-Beta)?. duplicate with #710 . https://github.com/PowerShell/openssh-portable/pull/94\n. the scenario is that in remote sftp session, dir should list all the file even the logon user does not have access to the file, but get should failed with access denied. The current behavior is dir does not list the file the user does not have permission, which is not expected.. The correct way should be\nssh-keygen.exe -t ed25519 -P \"\"\"\" -f .\\id_ed25519\n. @DarwinJS, Thanks for your feedback. yes, the line should be$myACL.SetAccessRuleProtection($True, $False). I am not able to repro the exception on win10 yet. When you print out$_.IdentityReference.Value, what type of account it is? Does it exist at HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList? Can you try this API$acl.GetAccessRules($true,$true, [System.Security.Principal.NTAccount])``` with different parameters https://msdn.microsoft.com/en-us/library/system.security.accesscontrol.commonobjectsecurity.getaccessrules(v=vs.110).aspx and see if there is difference? Also does icacls report those two rules?. Did you follow the release notes to re-ACL your key files?\nThis version implements a breaking change that enforces more secure ACLs on various keys and configuration files.\nPlease make sure to read [this wiki topic on the secure protection of various files][Secure file] before using this latest version.\n\nIf you're updating from a previous version of Win32-OpenSSH, you will have to re-ACL files on both the server and client side.\nIf this is your first time using Win32-OpenSSH, ssh-keygen.exe will do its best to ACL newly generated keys appropriately.\nHowever, you will have to re-ACL all host keys, authorized_keys, and your user ssh_config (if you have one).\n\nThe installation instruction also has been updated for this changes\nYou got that message because your private host allows other disallowed account to access. Can you check the aces of your file to make sure the file follow the requirement at [secure protection of various files][Secure file]? \npowershell\n(get-acl .\\ssh_host_rsa_key).Access\nThis is the host key for sshd, right?\n[Secure file]: https://github.com/PowerShell/Win32-OpenSSH/wiki/Security-protection-of-various-files-in-win32-openssh. @kai-uwe-rommel. is these private keys are new generated by ssh-keygen.exe or they are existing keys before this build? I assume ARS\\A-Rommel is the file owner of the private key files, right?\nCan you please update the  LogLevel to \"LogLevel DEBUG3\" in sshd_config so more details info is logged to tell you which sid is bad user? can you check if the bad user is your login user. We saw once the same user has two different sids, which cause the sid listed in ACL are different from the login sid and reported as bad user. not sure you are seeing the same issue.. @kai-uwe-rommel with debug3, it show the file has bad owner. Can you check the owner of the file((Get-Acl .\\sshtest_hostkey_ecdsa.pub).Owner)? Can you change the owner of the file to one of the allowed account types followed by secure protection of various files? . Domain account should be fine as owner of the private key file. It is ARS\\A-Rommel, which is account you logged in, right? We are investigating why this is not okay on your machine. If you have more info why this account is special, please share with us. as I said before, we saw there is once where the user moved from a domain to another, the same domain account has two sids which cause the sid comparison failed. Not sure that is the case here though. . v13 is pulled down.. @DarwinJS Please see this wiki Run OpenSSH Test. Currently we run tests on win2k12 R2 and win10. The scripts currently don't not compatible with PSH 2.0 yet. We plan to update it to run on win7.. @DarwinJS  with the commit https://github.com/PowerShell/openssh-portable/commit/eb0ab1b5228008c4bfc095de2e834f88b819b6ac, test should be run on win7. I will close this issue. please reopen if there is any other concerns. thanks!. @DarwinJS  there are a known issue on win7: https://github.com/PowerShell/Win32-OpenSSH/issues/770 and https://github.com/PowerShell/Win32-OpenSSH/issues/781. You need to workaround the first one before you run the tests. for second one, there maybe some random test failures.. yes, but the script does not do the right on win7. @DarwinJS  Fix-UserKeyPermissions now takes -User parameter and also Fix-FilePermissions is exposed. Please check.. @DarwinJS good catch.  We will go with:\nRepair-SshdConfigPermission\n. @DarwinJS , I added a commit to the fix of this issue. Since we are discussing how to handle the future breaking changes and release of scripts, I can't submit the changes soon. Below include multiple fixes if you are interested:\n1. use valid verb, \n2. psd1 file to specify version, \n3. -confirm support, \n4. workaround the error \"the security identifier is not allowed to be the owner of this object\" on downlevel machine.. @DarwinJS Sorry for the inconvenience.\n1. The equivalent of \"-quiet\" when use the new utility scripts is \"-confirm:$false\" to Suppress the prompt. Could you please try?\n2. I see your request not use shouldprocess, but where is the promp \"Respond within 30 seconds or the default selection will be chosen\" come from? If you directly run the utility scripts, you won't see the timeout. Is it from your chocolatey scripts?\n\nOne challenge for me is that I can't repro the error you see about setting the permission on individual user profiles on my win 7 machine even I put multiple authorized_keys files at other standard user profile path.  The only way I can work is to send you the fix and test on your machine, which slow down your package. sorry for that.\nAnyway, \nI fixed the \"the security identifier is not allowed to be the owner of this object\" by p/invoke .net to adjust the privilege now.  I also tested on my win7 and Nano server. Please check out https://github.com/PowerShell/openssh-portable/pull/164 and let me know if you still see the error.\n. @DarwinJS with the latest checkin, the utility script support -whatif, which will tell what the script do without doing the real actions.. @lucastheisen Is your OpenSSH binaries v0.0.14.0 or v0.0.15.0?\nIs Set-SSHKeyPermissions.ps1 your own script?\nTo set permission of authorized_keys, you need to call Fix-AuthorizedKeyPermissions. Can you try and let me know?. @lucastheisen can you try the utility scripts in v0.0.16.0 to see if it can meet your requirement to set permissions on authorized_keys?\n```\n\nfix permissions on sshd_config, authorized_keys, and host keys\n.\\FixHostFilePermissions.ps1\nor\nImport-Module .\\OpenSSHUtils.psd1 -Force\nfix permissions on a specified authorized_key\nRepair-AuthorizedKeyPermission -FilePath C:\\Users\\sshtest_ssouser.ssh\\authorized_keys\n```. @DarwinJS , I added commit to the fix of this issue. Since we are discussing how to handle the future breaking changes and release of scripts, I can't submit the changes soon. Below include multiple fixes if you are interested:\n1. use valid verb, \n2. psd1 file to specify version, \n3. -confirm support, \n4. workaround the error \"the security identifier is not allowed to be the owner of this object\" on downlevel machine.. @DarwinJS, I found the cause of the problem. The line you pointed above has no problem since it just remove the inheritance. The real problem is here:\n'APPLICATION PACKAGE AUTHORITY\\ALL RESTRICTED APPLICATION PACKAGES'- can't translate fully qualified name. it is a win32 API bug. To workaround, we need to use the shortValue of the IdentityReference\n'ALL APPLICATION PACKAGES' exists only on Win2k12 and Win2k16 and 'ALL RESTRICTED APPLICATION PACKAGES' exists only in Win2k16\nI submitted a PR for the fix \nhttps://github.com/PowerShell/openssh-portable/pull/158\nPlease let me know if you want this fix in v0.0.15.0 package, or it is okay to have the fix in your chocolatey package. Thanks!. @DarwinJS  i checked in the fix for this. I also exposed Fix-FilePermissions per your request from issue #744 . @DarwinJS  the scripts currently already print all the files they are changing and what actions are done to each file to the console.  Please checkout here: \nfile path printout: https://github.com/PowerShell/Win32-OpenSSH/blob/2c3a1a95d0b36697be3da814a7fc08bdfb7db0cb/contrib/win32/openssh/OpenSSHUtils.psm1#L147\nsample action printout: https://github.com/PowerShell/Win32-OpenSSH/blob/2c3a1a95d0b36697be3da814a7fc08bdfb7db0cb/contrib/win32/openssh/OpenSSHUtils.psm1#L201\nWhat else do you want to emit to console? Can you give an example?\n\n. @razrjk, I start looking this. Could you please share more information so I can try it from end to end?\n1. Can you share the steps you setup the git client? Are you using the git client for window from this link? or a unix client?\n2. Can you share the steps you set up git server over win32_openssh?(steps to setup git server and steps to config sshd so it talk to the git server)\n3. The git commands you repro the problems ( connect from your client to the git server over sshd). @razrjk, my remote repo is setup at d:\\testgit\\myrepo.git on hostmachine. How do you specify the url for the path to your repo. I always see a '/' prefix at my URL. How do you remove it?\nI use this command:\n```\ngit clone ssh://username@domain@hostmachine/D:/testgit/myrepo.git\nCloning into 'myrepo'...\nfatal: ''/D:/testgit/myrepo.git'' does not appear to be a git repository\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n```\nHere is the ssh log:\ndebug1: Sending command: git-upload-pack '/D:\\testgit\\myrepo.git'\ndebug2: channel 0: request exec confirm 1\ndebug3: send packet: type 98\ndebug2: callback done\ndebug2: channel 0: open confirm rwindow 0 rmax 32768\ndebug2: channel 0: rcvd adjust 2097152\ndebug3: receive packet: type 99\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: exec request accepted on channel 0\ndebug2: channel 0: rcvd ext data 73\nfatal: ''/D:\\testgit\\myrepo.git'' does not appear to be a git repository. @diogocp Thanks.\nyes, git clone username@domain@hostmachine:D:/testgit/myrepo.git works. your workaround works too. I am looking at the first issue @razrjk  reported.. @diogocp  how do you specify the port if you are not using the default 22?\ngit clone username@domain@hostmachine:47003:D:/testgit/myrepo.git does not work.. @diogocp, I don't repro the issues when pushing binary files (I use an executable file).  I add the path to git-upload-pack to the system environment variable %Path% on host machine. Did you try on 0.0.20.0?. @diogocp, did you repro the binary push with powershell launched in shell-host or the cmd?. @diogocp  my question is that did you set the following config to use powershell when repro the issue? I assume yes; otherwise you will see the single quotes issue. \ngit config --local remote.origin.receivepack \"powershell git-receive-pack\"\ngit config --local remote.origin.uploadpack \"powershell git-upload-pack\". @diogocp, after that config to use powershell, push of file gradle-wrapper-4.1.jar works for me. I will try more variation.. @razrjk, could you share your code changes to launch powershell in shell-host.c? I don't see the difference between pass \"powershell git receive-pack\" as command.\nThe code path this line. Did you pass \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\" as the module name of CreateProcessW?\nret = CreateProcessW(NULL, command, NULL, NULL, TRUE, 0, NULL, NULL, &si, &pi);\n. @razrjk, the code block you share won't be hit in the latest code in this scenario because even no matter set \"powershell git receive-pack\" workaround or not, it will launch command as is first without adding any prefix.  run_under_cmd is set to false so it won't reach the code you changed. \n/* Try launching command as is first */\nif (command) {      \n    ret = CreateProcessW(NULL, command, NULL, NULL, TRUE, 0, NULL, NULL, &si, &pi); \n    if (ret == FALSE) {\n        /* it was probably this case - ssh user@target dir */\n        if (GetLastError() == ERROR_FILE_NOT_FOUND)\n            run_under_cmd = TRUE;\n        else\n            goto cleanup;\n    }\n}\nelse\n    run_under_cmd = TRUE;\n\n/* if above failed with FILE_NOT_FOUND, try running the provided command under cmd*/\nif (run_under_cmd) {        \n    cmd[0] = L'\\0';\n    GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, w32_cmd_path()));\n    if (command) {\n        GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, L\" /c \"));           \n        GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, command));\n    }\n\n    GOTO_CLEANUP_ON_FALSE(CreateProcessW(NULL, cmd, NULL, NULL, TRUE, 0, NULL, NULL, &si, &pi));\n    /* Create process succeeded when running under cmd. input stream needs to be processed */\n    process_input = TRUE;\n}. @diogocp, after setting the [workaround](https://github.com/PowerShell/Win32-OpenSSH/issues/752#issuecomment-314916056), pushing of the file gradle-wrapper-4.1.jar always works no matter single box or multi-machines. I also tried two physical machines.\n\nWhat is your client setting? I tried both \n$env:GIT_SSH_COMMAND = '\"C:\\OpenSSH\\ssh.exe\" -T'\n$env:GIT_SSH_COMMAND = '\"C:\\OpenSSH\\ssh.exe\" '\nI want to find out you are using tty or notty on shellhost when you repro the issue\nWhat error do you get?\nI see this error once when push a 900k file, but the file is uploaded successfully. re-push the same file works\nfatal: protocol error: bad line length character:  ok\nwarning: remote reported status on unknown ref: refs/heads/m0000un\nfatal: protocol error: bad line length character: pack\nIs this the error you see?. @razrjk, thanks for the details issues reported and steps to help to identify the problems. \n1. For the single quotes issue, we are still thinking different approach to fix on server.  We recommend people to apply the temporary workaround before the fix on server.\n2. I reviewed the handle you mentioned in file shell-host, some lines pass its stdin to the pipe_out, they are on purpose. This is for echo the input to client. especially when interop with putty, which does not echo the input in client side. If you review the code, all the stdin eventually pass to child write handle too. \n3. sshd.exe /ddd issue got fixed and will be available in 0.0.21.0.\n4. we need the control stream in no pty. for the case where run \"cmd /c XXXX\", we need to echo the input back and process those input before pass to child write handle. \n@diogocp I made some changes in shell-host.c.  Please let me know if you still repro the big binary push issue after the fix.\nI posted a Setting up a Git server on Windows using Git for Windows and Win32_OpenSSH. please let me know if you see any other issue.. @HrochL , yes, it is a temporary workaround until we have a good fix on the server. . @benvindo which step? this? \nTo check out a repository, go to where you want to put your local repo, \ncd c:\\mygitrepros\n # initialize a local repo folder\n git init mylocalrepo\n cd mylocalrepo\n # add the remote repro\n git remote add origin user@domain@servermachine:C:/test/myrepo.git\n # work around the known issue by launching powershell to run the git commands\n git config --local remote.origin.uploadpack \"powershell git-upload-pack\"\n git config --local remote.origin.receivepack \"powershell git-receive-pack\"\n git fetch origin. Move this issue to Beta until we have a proper fix on server. @diogocp,  can you try the [latest release] (https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v0.0.21.0) if you can repro early EOF error. . @diogocp, I really can't repro it. what do you get in the client log?. @larry191994 , @diogocp , after supporting default shell, you don't need the above workaround if you can set up Default Shell. Please refer to the link. . @DarwinJS Do you see any problem that user download WMF 5.1 on win7 machine? Here is WMF chocolatey package. @DarwinJS  I will update the script work with ps 2.0. @DarwinJS the fix is checked in https://github.com/PowerShell/openssh-portable/pull/160 and it works on ps2 on win7. Please let me know if you see any other issue. @DarwinJS what os is this repro? this is due to a bug in default .net (localsystem is not allowed to be file owner, but icacls can set it) on the machine. I saw this on my win7 and workaround it like:\nhttps://github.com/PowerShell/openssh-portable/blob/latestw_all/contrib/win32/openssh/OpenSSHUtils.psm1#L48-L66\nYour machine may have different clr version from what I see.\nCan you provide the output of these cmdlet?  Thanks!\n$PSVersionTable\n[environment]::OSVersion. @DarwinJS based on the screen you provided. the code should set owner to admin groups instead of system. Can you check the OpenSSHUtil.psm1 has the below lines?\nhttps://github.com/PowerShell/openssh-portable/blob/latestw_all/contrib/win32/openssh/OpenSSHUtils.psm1#L48-L66. @DarwinJS  got it. I will include the changes in my next PR. @DarwinJS  I don't repro this on my win7 machine. but I found a workaround. I think the commit I added fix the issue. \nSince we are discussing how to handle the future breaking changes and release of scripts, I can't submit the changes soon. Below include multiple fixes if you are interested:\n1. use valid verb,\n2. psd1 file to specify version,\n3. -confirm support,\n4. workaround the error \"the security identifier is not allowed to be the owner of this object\" on downlevel machine.. @DarwinJS \n1. I don't have timeout set in any of these 3 scripts. Which timeout do you refer to?\n2. both FixHostFilePermissions.ps1 and FixUserFilePermissions.ps1 support -quiet mode. Did you try FixHostFilePermissions.ps1 -quiet?\n. @DarwinJS we will change to -confirm.. @DarwinJS After FixHostFilePermissions.ps1, the host keys should be owed by system or administrators group account and both are allowed full control. If you are member of admin group, you should be able to remove the key files. We are not able to repro from this side. Is there any chance the administrators group ace removed from the dcal after your previous installation or the inherited acls from parent chocolatey does not allow administrators group?\nCan you list out the output of (Get-Acl \"c:\\Program Files\\chocolatey\\OpenSSH-Win64\\ssh_host_dsa_key\").Access? \nHere is my output:\n\n. @manojampalam  the file permissions are correct on Darwin's machine.\n@DarwinJS can you find out if the file is locked by any other process? . @DarwinJS  my next PR includes -confirm support and Verb changes, which breaks your script. that is the reason I can not to test against this package. If you could share the file chocolateyinstall.ps1 or chocolateyuninstall.ps1 I may be able to update them to use the new cmdlet names and new parameters for testing. @DarwinJS  it is a bug missing a pair of parenthesis in the script. I added a fix (https://github.com/PowerShell/openssh-portable/pull/165). Below line can workaround it if you don't want to update the scripts in the package. \n Repair-FilePermission .\\ssh_host_dsa_key -ReadAccessNeeded \"NT SERVICE\\sshd\"\nWe are curious the reason that chocolateyuninstall.ps1 script need to take ownership of key and config files. Administrators group should have full control on those files. If the user is member of the admin group, he/she should be able to delete those files. . @DarwinJS did you import the module with -force parameter. after this fix, i can do Repair-FilePermission .\\ssh_host_dsa_key successfully on win7 and win10 including Nano. can you post the screenshot again if you still repro? Thanks! Here is my screenshot before and after:\n\n\n\n. move to Jun-End until get response from @DarwinJS . Great to know it works now. Thanks!. @NiQ1, which version of openssh do you run? sshd is now run under local system now.\n. @stevenbrix, the behavior you see may be different from the issue aboe. Could you post the output of sshd -ddd?\nAlso, did you follow the Install Win32 OpenSSH, especially this sentence: Make sure binary location has the Write permissions to just to SYSTEM, Administrator groups. Authenticated users should and only have Read and Execute? could you please post the output of (Get-ACL sshd.exe).Access?. @stevenbrix, this is a completely different issue from the original one on win7\nlooks like you are using inbox binaries. For the log you post, looks like you never try to start the service yet. If you ever try to start sshd service, the first thing it try to do is to create %PROGRAMDATA%\\ssh folder and create keys and copy sshd_config under that folder.\nWhat error do you get when you net start sshd?. @stevenbrix ,./ssh-keygen.exe -A only generates keys under %PROGRAMDATA%\\ssh. but since net start sshd already generate the keys, ./ssh-keygen.exe -A will do nothing after that. . script is fixed. please re-open if you see other issues.. @cashcat I tried, both zip package download fine. Is there anything wrong on your machine or network?. @TomJampen this is due to the same as #771. The fix has been checked in and will be available in next drop. Or please follow Security protection wiki to manually fix the file permissions if you run on non-English build.. @DarwinJS Thanks for the PR. I checked on my Nano server, all of the IdentityReference are of user ids. I think is this is not specific to Nano server. It could happen on other platforms too. I see in some cases where those virtual accounts are invalid on the machine, the identityReference is not translatable, then the identityReference are with sid string. for example, when openssh is uninstalled from the machine, but the file still has an ace to \"nt service\\sshd\", in this case, its IdentityReference is in sid string type. not sure if those sid strings on your sshd_config are in this case though. \nI added comments on the PR. Thanks!. win32-openssh support down to win7 client or windows server 2008 R2. @vovcacik what is the output for \n(Get-Acl C:\\Users\\Administrator\\.ssh/authorized_keys).Access? My guess is that the file is not granted  with read perm to \"nt service\\sshd\"\nplease follow either OpenSSH utility scripts to fix file permissions or Security protection of files to fix the acl of the file.. @sgargel , is C:\\Users\\Administrator.DOMAIN.ssh\\authorized_keys a file or a directory?. bug 2754 is filed on openssh/openssh-portable. bug 2753 is filed on openssh/openssh-portable. @JonathanHolvey and @alaksandus I don't repro the issue when run the script from pwoershell prompt window. Not sure why your output does not include the command actually run. From your message, looks like powershell treat $false as type of system.string.  My guess is you may invoke the script using quotes. If that is the case, you need to escape $, for example, \niex \".\\FixHostFilePermissions.ps1 -Confirm:`$False\". @alaksandus , Can you paste the command line and output when you invoke the script? Are you just simply running\nC:\\Program Files\\OpenSSH\\FixHostFilePermissions.ps1 -confirm:$false. @thomasgeorgec, @JonathanHolvey, and @Dchan40, Looks like you run in cmd terminal. This is a powershell issue which has fixed in pscore. please refer to this issue and this PR. If you run the default powershell version on windows, you will still see this.\n@alaksandus Did you run the script in powershell prompt or in cmd console? There is known powershell issue when run ps script in other shells than powershell. It should work fine in powershell prompt. Sorry for asking again. Can you paste screenshot include the command and output if you run in powershell prompt?. @JW0914 , You might use latest powershell version from git. This issue is due to a powershell issue and this PR fixed it in pscore on git. but not fixed in Windows builtin powershell yet. I can repro it with Admin Cmd Terminal on windows 10. but there is nothing we can fix in our script. . @thomasgeorgec, @JonathanHolvey, @alaksandus, and @Dchan40, please work around the issue as pointed above by @DarwinJS if you are not using pscore from git. . close this discussion since this is not an issue in our script.. fix as part of https://github.com/PowerShell/openssh-portable/pull/258. @joshtriplett, @ulysses425, @guskovd, I tried the the sshfs without the above workaround(sshfs version 3.3.2). It does not reproduce when target openssh host with release after v7.7.1.0p1-Beta.  I see the issue repro when target old openssh build like v0.0.19.0 though.. Keep this issue still open because there is an exception due to appverifier issue on win7. @gravcat , what is the value of $psversiontable.PSEdition on your system? this is to determine the version of powershell. On full powershell, those reference already been loaded so there is no need to add the reference.\nRemoving the condition and add unnecessary reference does not work on win2k12r2 full sku machine.. keep this open to see if user still repro it.. #90 . @doggy8088 we are working #1082, #1211, and this one together to escape double quotes in a central place. It is in progress.. @doggy8088, do you have a repro command for me to validate the change?. @doggy8088, I tried with powershell as default shell, it works fine\n```\nPS D:\\git> git clone domain\\user@serverhost:F:\\git\\testsource.git\nCloning into 'testsource'...\nwarning: You appear to have cloned an empty repository.\nThe reason it does not work when the default shell is cmd is that cmd does not consume the single quotes, it simply pass to the executable. if you run this locally in your cmd prompt, it also failed.\nC:\\WINDOWS\\system32>git-upload-pack 'F:\\git\\testsource.git'\nfatal: ''F:\\git\\testsource.git'' does not appear to be a git repository\n```. @gildas I don't repro this on 0.0.21.0. Can you try on 0.0.21.0? did you run ssh-add under user context of MYDOMAIN\\me or any other context?\nThe other thing we saw before is that gildas.cherruel may have different sid from MYDOMAIN\\me in some special situation. for example, after you migrate from a domain to a different domain. If this repro on 0.0.21.0. can you create a different user, login as that user, recreate the private key for that user, and try ssh-add under that user again?. @gildas, What is the file owner of the key files?\nCan you create a different user, login as that user, recreate the private key for that user, and try ssh-add under that user again?. @gildas, my guess is that there may have two different sids map to the same MYDOMAIN\\me in some special domain situation. for example, after you migrate from a domain to a different domain. \nThe current challenge is that ssh-add does not print out the debug info. I compiled a private ssh-add.exe for you to print our more details about what is violating the check. Can you replace the ssh-add.exe and give a try? \nssh-add.exe 'c:\\Users\\me\\.ssh\\id_rsa\ndebug3: Current user sid: S-1-5-21-2127521184-1604012920-1887927527-1195773\ndebug3: Bad owner (S-1-5-21-1412890174-3016792229-3224140898-1014) on c:\\Users\\me\\.ssh\\id_rsa\ndebug3: Expected valid owners: administrators, local system, or S-1-5-21-2127521184-1604012920-1887927527-1195773\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions for 'c:\\Users\\me\\.ssh\\id_rsa' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nssh-add.exe c:\\Users\\me\\.ssh\\id_rsa\ndebug3: Current user sid: S-1-5-21-2127521184-1604012920-1887927527-1195773\ndebug3: Bad permissions. Try removing permissions for user: S-1-5-21-1412890174-3016792229-3224140898-1014 on file c:\\Users\\me\\.ssh\\id_rsa.\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions for 'c:\\Users\\me\\.ssh\\id_rsa' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nssh-add64.zip\n. @gildas, from what you described above, after the migration of the domain, some meta data are not update to date. After you reset the owner and acl of CAMELOT\\gildas.cherruel, the new and correct account 118596  are used. That is why it does not complain any more. In the File Security dialog UI, the account CAMELOT\\gildas.cherruel previous was 7617, after you reset it has been changed to 118596. \nIf you run the following in powershell window, \npowershell\n$objSID = New-Object System.Security.Principal.SecurityIdentifier(\"S-1-5-21-2037646214-965435356-1153635105-118596\")\n$objUser2 = $objSID.Translate( [System.Security.Principal.NTAccount])\n$objUser2.Value\nYou will see that this sid is resolved to CAMELOT\\gildas.cherruel. you may be able to print out the account of 7617.. @itsupport-iattc, I tried build v0.0.24.0 on windows 2012 R2 and windows 10, it works for me:\nPS C:\\Program Files\\OpenSSH> .\\ssh-keygen.exe -G 4096.1 -b 4096\nWed Jan  3 17:58:54 2018 Sieve next 268304384 plus 4095-bit\nWed Jan  3 18:04:27 2018 Sieved with 203277289 small primes in 333 seconds\nWed Jan  3 18:05:04 2018 Found 221392 candidates\nit does not work win7. The issue is in the libcrypto code. The issue will gone after update to latest release of libssl, I will update the libcrypto.dll\n  . @itsupport-iattc, can you replace the libcrypto.dll with the attached files? it works for me on win7, win2k12 R2 and win10. \nlibcrypto.zip\nThe failed case I saw on win7 was when writing big number to a file. If you still repro after replace libcryto.dll, can you please install openssh to a different folder instead of under $env:ProgramFiles and try to see if it is related with the permission of directory.\n  . @itsupport-iattc , which release do you use? Starting v0.0.23.0, we only ship libcrypto.dll in the package.. I will close this issue for now. Please reopen if you see it again.. @jasonblewis, please try this private scp binary.\nscpx64.zip\n. this should be fixed in upstream. issue 2790 to track it.. yes, please use the libcryto.dll from Release v0.0.23.0. We will revert the libcryto.dll back to that build with sdk 8.1. @leotxcosta windows 2008 is equivalent to vista SP1. Note that vista and below is out of scope for our project.\nSSHD service can't be started with previous version 0.0.22.0, this is not regression. right?. @saurabhverma999 and @leotxcosta, are you running windows server 2008? Can you check if this file (\"%windir%\\system32\\sspicli.dll\") presents on your machine? Windows server 2008 is equivalent to Vista SP1.  Note that vista and below is out of scope for our project.. @saurabhverma999, I can't see the password auth issue on win7. Can you provide your trace?\n@leotxcosta, win server 2008 is out of scope, but I fixed the password auth issue. but I think you will still see the service can't started on win server 2008.. @saurabhverma999,  close this issue since this is on windows 2008 and also the issue by loading sspicli.dll has been fixed. Please open a different issue if you still see it repro on win 7.. @DarwinJS, Can you check where you get OpenSSHUtils.*? These two files have not been update since v0.0.21.0. Function Repair-FilePermission is still under exported. note that the function name is Repair-FilePermission instead of Repair-FilePermissions.. @DarwinJS, looks like you are using secedit.exe and cim instance in your script and script, but secedit.exe is not available on latest Nano server. cim instance cmdlet is not available on all OS either, for ex, win7+psh2. Please see how I set user rights for  for SeServiceLogonRight and SeAssignPrimaryTokenPrivilege here. it works both on win7 and Nano server.. It has been fixed by PR  https://github.com/PowerShell/openssh-portable/pull/283. this is fixed as part of https://github.com/PowerShell/openssh-portable/pull/258. @codearoo, the issue you saw when executing the script is a powershell issue which has fixed in pscore on git, but not fixed in windows yet. please refer to issue #844. if you need to workaround it, Powershell.exe -ExecutionPolicy Bypass -Command \". .\\FixHostFilePermissions.ps1 -Confirm:$false\"\nNote the first \".\" is a call operator.\nThanks for your suggestion about the FW. The installation instruction has been updated for above workaround and setup FW rule for sshd.exe instead of by port.\npsexec does not work on some platforms so we can't included as general installation steps. If you are interested, please see an example at here about use task scheduler to register host keys under system account. the script is at here. @codearoo, Alternative installation using the universal installer works for me. Updated the installation instruction based on your findings. \nRegarding the powershell bug, did you install latest build from here? Please refer to the PR to find out how is it fixed. Please create new issue if you still see it repros.\n  . @ylluminate , please check out the Install Instructions. @fcharlie  updated the package. Please checkout.. @Velocet , in powershell prompt, if you launch a file in the current directory, it is like below:\nPS ~\\.ssh> .\\ssh-add id_ed25519\nThis is by design by powershell to launch any file in powershell. . @DarwinJS, really appreciate your hard work on updating the chocolatey script especially for the upgrade scenarios. I tested the openssh chocolatey package on win2k12R2 data center, install, uninstall, upgrade, migration of file system and single sign on registration, they all work fine.  Great work! . @Leproide, please refer to the Breaking changes section of release notes. \n - Make sure binary location has the write permissions to just SYSTEM, Administrator groups. It is recommended to extract binaries to %ProgramFiles%\\OpenSSH\nOne possible reason is that your binary location has more than Read & execute  permission to other user than SYSTEM, and Administrators groups, ex `Authenticated Users'. If so, please remove the ACL and check again.. @xiaohh2016, can you try the latest release? We have both binary and script files digital signed.. @manojampalam and @masaeedu , we have similar discussion on  #1273, this is due the the rule of cmd. If you run the belows on cmd prompt:\necho 'cmd /c \"cd C:/ && dir\"'\n'cmd /c \"cd C:/ && dir\"'\nIf /C or /K is specified, then the remainder of the command line after\nthe switch is processed as a command line, where the following logic is\nused to process quote (\") characters:\n1.  If all of the following conditions are met, then quote characters\n    on the command line are preserved:\n\n    - no /S switch\n    - exactly two quote characters\n    - no special characters between the two quote characters,\n      where special is one of: &<>()@^|\n    - there are one or more whitespace characters between the\n      two quote characters\n    - the string between the two quote characters is the name\n      of an executable file.\n\n2.  Otherwise, old behavior is to see if the first character is\n    a quote character and if so, strip the leading character and\n    remove the last quote character on the command line, preserving\n    any text after the last quote character.\n\n@masaeedu ,  we still need to add quotes on client side, createprocess failed for those arguments with spaces in it. like #1211.\non serverside, if we take your approach (rely on custom default to process the argument), there is no existing shell directly work. user always required to write their own shell app, right? also It will totally depends on the custom default shell to choose which shell program to use.\n. @masaeedu raised a good point. For those custom shell, which might have different rules of quotes and escaping than cmd or powershell, user might need to receive the raw cmdline from sshd. But I still think we need to process quotes and spaces to make  common shells to work. How about we escape/process the commands for cmd.exe and powershell.exe, and for other customer shells, leave community and user to process? \n```\nint main()\n{\n    LPWSTR cmdline = GetCommandLineW();\n    wprintf(L\"Command line: %s\\n\", cmdline);\nint nArgs;\nLPWSTR *szArglist = CommandLineToArgvW(cmdline, &nArgs);\nif (NULL == szArglist)\n{\n    wprintf(L\"CommandLineToArgW failed\\n\");\n    return 0;\n}\nelse\n{\n    for (int i = 0; i < nArgs; i++)\n    {\n        wprintf(L\"argv[%d]: %s\\n\", i, szArglist[i]);\n    }\n}\nLocalFree(szArglist);\nreturn 0;\n\n}\n```. @maertendMSFT, we still need to add double quotes to the executable, in this case, the full path to the default shell. otherwise, it may not even find the path to the executable.. @masaeedu, here is what will do,\n1. for existing common shells, like powershell, bash, cygwin, we add double quotes to the path of default shell and its arguments, escape the double quotes and backslash inside args.\n2. For cmd and ssh-shellhost.exe, we  simplily add double quotes to shell and its arguments without any escaping.\n3. For shell other than above, we add a registry value DefaultShellEscapeArguments\" under \"HKEY_LOCAL_MACHINE\\SOFTWARE\\OpenSSH\". The default value when missing is 1, which mean the escaping will happen like no.1 above. If user does not want escaping, they need to explicitly set this value to 0. in later case, only double quotes are added to shell and args, like no.2 above.\nThe PR is at: https://github.com/PowerShell/openssh-portable/pull/349. @unhammer, openssh code does not add extra single-quotes. I believe the single quotes are added by git. I close this double quotes escaping issue now. If want, we can discuss in a different issue for the extra single quotes issue.. @unhammer, look like the issue you saw are due to the issue single quoted are not interpreted as file path by cmd and ssh-shellhost.exe. singe quotes are added by git client, but cmd.exe and ssh-shellhost.exe does not recognize the quoted string as file path. https://github.com/PowerShell/Win32-OpenSSH/issues/895.\nPlease refer to Setting up a Git server on Windows using Git for Windows and Win32_OpenSSH for workaroud. setting default shell to powershell should also works.. @manojampalam it is not expected. but i can't repro it.\n@alphaCTzo7G, which version did you try? I tried to transfer file from Ubuntu client to Windows 10 with v7.6.0.0p1-Beta, it transfer file to the right directory.\nscp ./test111.txt newlogin@10.123.40.97:/c:/test111.txt\nThe authenticity of host '[10.123.40.97]:47002 ([10.123.40.97]:47002)' can't be established.\nECDSA key fingerprint is SHA256:4WYuX61hW8qypuzqG2EP/Sn5YWRy7UoS+GDGeDfRirw.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '[10.123.40.97]:47002' (ECDSA) to the list of known hosts.\nnewlogin@10.123.40.97's password:\ntest111.txt                                   100%   18    10.7KB/s   00:00\nWhat error do you see? Can you check trace from both client and server side and paste here? Thanks!\nTo enable client trace, supply -vvv to scp command. On client trace, you will see something like \ndebug1: Sending command: scp -v -t /C:/test111.txt\non server trace file (C:\\ProgramData\\ssh\\logs\\sshd.log), you will see something like:\n2336 2018-03-12 13:55:39.193 debug1: Executing command: C:\\test\\OpenSSH-Win64\\scp -t /C:/test111.txt.\n. @afcady , Before developed the script, we considered using of icacls. Security-protection-of-various-files-in-Win32-OpenSSH also mentioned the usage of icacls to fix file permission. Unfortunately, it does not work on all SKUs, including Nano server. Also the script fixes the permission based on the current permission of the file (We don't want to clean up existing ACLs if they valid). icacls is not convenient to parse the existing permissions. Some permission is okay to have (the script will keep it), but some permissions are must to have (script will add it if it does not present), some permissions needs to remove. It is not something we can hard-coded in a batch file.. @DarwinJS, what is the code for ETW registration? this line or something else?\nwevtutil um `\"$etwman`\". @DarwinJS, the failures are due to the fact that XMLDocument.Save does not take path as parameter in .NET 1.0.  will fix it.. @Jan-E, @dwatley, please try the latest source from PowerShell/openssh-portable and let us know if the issue get fixed. Thanks!. Yes, itt should work for VS2017. I will close the issue. Please reopen if you see issues.. @bernardgut, does the user has write permission to your current folder? Are you able to copy a file from a different local folder to this folder on linux? Please see the following. if the current folder is ~ folder, the copying succeeded, but for /home which owned by root, the copy get access denied. if you run as root, the copy succeeded since it has write permission to the folder.\nubuntu@ubuntu:~$ ls -la .\ntotal 36\ndrwxr-xr-x 17 ubuntu ubuntu  540 Apr 23 21:39 .\n...\nubuntu@ubuntu:~$ scp newlogin@W2K12R2:test .\ntest                                          100% 1679   758.2KB/s   00:00\nubuntu@ubuntu:~$ ls\nDesktop    Music     Templates  id_rsa.pub               test\nDocuments  Pictures  Videos     newlogin@YANBINGW2K12R2\nDownloads  Public    id_rsa     openssh\nubuntu@ubuntu:~$ cd ..\nubuntu@ubuntu:/home$ ls -la\ntotal 0\ndrwxr-xr-x  1 root   root    80 Apr 12 22:03 .\n...\nubuntu@ubuntu:/home$ scp -P 47002 newlogin@YANBINGW2K12R2:test .\nnewlogin@yanbingw2k12r2's password:\n./test: Permission denied\nubuntu@ubuntu:~$ sudo -i\nroot@ubuntu:~# scp newlogin@W2K12R2:test .\nThe authenticity of host '[yanbingw2k12r2]:47002 ([10.123.40.120]:47002)' can't be established.\nECDSA key fingerprint is SHA256:4WYuX61hW8qypuzqG2EP/Sn5YWRy7UoS+GDGeDfRirw.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '[yanbingw2k12r2]:47002,[10.123.40.120]:47002' (ECDSA) to the list of known hosts.\ntest                                          100% 1679   677.3KB/s   00:00. @NoMoreFood , the behavior on win2kr2 and win8 are by design. It is not a bug.  The extra handle is parallel loader thread. \nThis explain why in our case:\n1. 2 threads created and scheduled in different CPUs\n2. Cpu 1 starts thread A\n3. In the meantime Cpu 2 starts thread B\n4. Cpu 1 acquires the loader lock. The wait is satisfied and the loader code continues its execution\n5. In the meantime thread B in Cpu 2 tries to acquire the shared loader look, but finds a contention. So the NT kernel creates a non signalled Event and put the thread B in the waiting state. A new handle in the process is created.\n6. When the loader code in Cpu 1 finish its initialization work, releases the loader lock (Critical section). The Critical section releasing code detects the old contention, and signals the event\n7. Cpu 2 can now resume Thread B.\nThe Loader lock event is destroyed, only when the process is going to be terminated, by the loader code. So you have no clues how to predict if your process has or not a new handle in its table.\nIn Windows 10 you do not have this behaviour because the Critical section is implemented using another underlying synchronization primitive called WaitOnAddress.\nAs a general guideline, we can\u2019t rely on the fact that the handle counter in the beginning of your code remains the same for the entire life of your process, even if you have closed all the handles. This is because the loader, and even any other components that run in the system, are not under your direct control.\nPlease let me know if you get the message and we can close on this issue.. @NoMoreFood, Thanks for your investigation, here is the follow up for LsaLogonUser from onecoresdk folks:\nWe prefer folks to use LogonUserExExW if possible (I.e., if they're writing new code or porting from the LogonUser or LogonUserEx APIs).  I suspect that's why it's not listed on the MSDN page. @NoMoreFood , I don't have confidence that load TranslateNameW() via LoadLibraryW works on onecore. \nLoadLibraryW() works for LogonUserExExW because this API is in onecore.lib, but per msdn page, This function is not declared in a public header and has no associated import library. You must use the LoadLibrary and GetProcAddress functions to dynamically link to Advapi32.dll.\nThe other case in shell-host.c, LoadLibraryW is used to check if the APIs exist on the machine.\nbut in this case, TranslateNameW does not exist on onecore.lib. Even it pass the build, it won't work on onecore based machine. . @colemickens , this is a known 'vs_BuildTools_2015'  installation issue no matter where you install from. Since vs_build 2017 include 2015 toolset, MS does not service the VS 2015 Build Tools.  Instead it is strongly suggested to use the VS 2017 Build Tools to acquire the 2015 (v140) compiler toolset. \nMost likely your VCTargetsPath registration is missing after you install vs buildtool set for [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\MSBuild\\ToolsVersions\\14.0.\nThe sample value for this entry are as follows:\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\MSBuild\\ToolsVersions\\14.0]\n\"VCTargetsPath\"=\"$([MSBuild]::ValueOrDefault('$(VCTargetsPath)','$(MSBuildExtensionsPath32)\\Microsoft.Cpp\\v4.0\\V140\\'))\"\n\"VCTargetsPath14\"=\"$([MSBuild]::ValueOrDefault('$(VCTargetsPath14)','$(MSBuildExtensionsPath32)\\Microsoft.Cpp\\v4.0\\V140\\'))\". @dwatley, expect upcoming release this week. Currently user should be able to see non-admin logs in Debug channel. The Admin and Operational channel are on by default, so setting custom isolation would adds 2 more independent autologgers on the system. \nhttps://github.com/PowerShell/openssh-portable/commit/fc6d825b4dcb212123bcaa2043e3e123025f3303\n. sshd service can run under SYSTEM as service or run in interactive mode (typically as admin), but not as network service. . posix_spawnp is implemented to respect PATH. Relative path should work for ProxyCommand now. . Starting v7.6.1.0p1-Beta, all the binaries and scripts in zip files are digital signed. . gayantd, can you check the ACL of C:\\Users\\irdtds.ssh/authorized_key?  You can run FixHostFilePermissions.ps1 on the server machine to fix the permissions on host.\nNormally It should look like:\n```\n(Get-Acl C:\\Users\\irdtds.ssh\\authorized_keys).Access\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : NT AUTHORITY\\SYSTEM\nIsInherited       : True\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : BUILTIN\\Administrators\nIsInherited       : True\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : irdtds\nIsInherited       : True\nInheritanceFlags  : None\nPropagationFlags  : None\n```. @gayantd, FixHostPermissions.ps1 only checks the authorized_keys under profile folders. If you don't see it check your file, which might means that location is not one of the profile folder.\n\n. Also which version of openssh do you use?. @gayantd, i believe your version of openssh is 7.7.0.0. version 7.7.1.0 has the fix for #1164 . Please install version 7.7.1.0, or use the workaround mentioned in #1164 . @gayantd, yes. It is related. The path to sftp-server.exe should be quoted. log should look like:\n1612 2018-06-29 09:50:07.560 debug1: Executing command: \"C:\\Windows\\system32\\cmd.exe\" /c \"C:\\Program Files\\OpenSSH-Win64\\sftp-server.exe\"\nworkaround is to Install OpenSSH in a folder with no white space. Ex c:\\openssh. replacing binaries is enough.\nRegarding openssh client, it depends which Windows 10 build you have. On latest release of windows build 1803, it already has built in openssh client installed. If you have older windows 10 build, you might need to either enable OpenSSH (Beta) optional feature for build 1709, or install openssh client from git hub (on older builds).. If you don't need to save private key for SSO,  you don't need to install ssh-agent service. sshd.exe is server only binary, you don't need it on client. Binary extraction for other files is enough.\nClient binaries are: ssh.exe, scp.exe, sftp.exe, ssh-agent.exe, ssh-add.exe, ssh-keygen.exe, ssh-keyscan.exe, libcrypto.dll. I believe ChrootDirectory in sshd_confg is what you want.\nPlease follow sshd_config to set it up.. @bagajjal @DarwinJS @dwatley , Releaset v7.7.2.0p1-Beta is updated and removed the windows resize implementation.. @FranklinYu, the new release is coming in 2 business days. this does not repro on latest git openssh. It repro on git openssh. @luckerby, as far as I remember, powershell can interpret the single quoted string. If you config powershell as default shell on the server side, I expect that you don't need to  apply the workaround.. @luckerby, I tried to set the defaultShell, no need to apply the workaround:\n\ngit clone remoteMachine:D:\\test\\mytest.git\nCloning into 'mytest'...\ndomain\\user@localhost's password:\nwarning: You appear to have cloned an empty repository.. @doggy8088, setting to powershell works for me. . @wanghaiqing2015, per wiki install Win32 OpenSSH, bulletin 3. Extract contents of the latest build to C:\\Program Files\\OpenSSH (Make sure binary location has the Write permissions to just to SYSTEM, Administrator groups. Authenticated users should and only have Read and Execute.). Can you check the ACLs difference between C:\\Program Files\\OpenSSH and C:\\Users\\Administrator?. @wanghaiqing2015, after I update the ACL of folder C:\\users\\Administrator\\OpenSSH-Win64 to below, ssh works fine.\n\n. @ethanhs, Interesting. account type 3 means ethanhs is a domain name instead of user account. Probably because your machine name and username are same. As @bagajjal suggested, can you try this? \nssh ethanhs@10.147.18.113. This is by design because of security concern.  Malware could change the environment variable value to something else in the user context.. This is because for non-pty, we added double quotes for those cmdline before pass it to cmd.exe. The cmd.exe did not preserve the quotes well:\ncmd /c \"cmd /c echo foo\"\nfoo\"\nbut the double quotes are required to execute other executable.\n@masaeedu, can you workaround by setting powershell as default shell? If I set powershell as default shell, this works fine:\nssh.exe -p 47002 localhost cmd /c echo foo\nEnter passphrase for key 'C:\\Users\\yawang/.ssh/id_ed25519':\nfoo. @masaeedu, #1082 and #1211 are the issue I am working one. If you are interested, this is the PR https://github.com/PowerShell/openssh-portable/pull/349.\nthe dir issue with cmd.exe as default shell due to the same quotes issue in cmd.exe. @masaeedu, since the default shell is powershell, powershell use to escape characters. \nBelow works with powershell as default shell\n```\nssh -p 47002 localhost cmd /c \"cd C:/& dir\"\nEnter passphrase for key 'C:\\Users\\yawang/.ssh/id_ed25519':\n Volume in drive C has no label.\n Volume Serial Number is DC7D-3230\nDirectory of C:\\\n. since your remote shell is powershell instead of cmd. on remote, it runs\npowershell -c  \"cmd /c cd C:/ `& dir\"\n. @masaeedu, if your remote shell is cmd, this also works:\nssh localhost cmd /c \"cd /d C:/ & dir\". @masaeedu, we do further escaping for quotes to preserve the quotes. @masaeedu, as you see I mentioned in in https://github.com/PowerShell/Win32-OpenSSH/issues/1082/ Here is the currently implementation: \n1. for existing common shells, like powershell, bash, cygwin, we add double quotes to the path of default shell and its arguments, escape the double quotes and backslash inside args.\n2. For cmd and ssh-shellhost.exe, we simplily add double quotes to shell and its arguments without any escaping.\n3. For shell other than above, we add a registry value DefaultShellEscapeArguments\" under \"HKEY_LOCAL_MACHINE\\SOFTWARE\\OpenSSH\". The default value when missing is 1, which mean the escaping will happen like no.1 above. If user does not want escaping, they need to explicitly set this value to 0. in later case, only double quotes are added to shell and args, like no.2 above.\nYou request should fit into #3 if you set the DefaultShellEscapeArguments to 0.. @Drugoy, Could you double check your machine is 32-bits machine? I validated the [OpenSSH-Win32.zip](https://github.com/PowerShell/Win32-OpenSSH/releases/download/v7.7.2.0p1-Beta/OpenSSH-Win32.zip) is 32 bits. I tested on 32-bits win8 machine. @Drugoy, I tried [OpenSSH-Win32.zip](https://github.com/PowerShell/Win32-OpenSSH/releases/download/v7.7.2.0p1-Beta/OpenSSH-Win32.zip) on x86 win7 sp1 machine, the binaries work fine. Can you check if the package you downloaded are 32 bits?. @Drugoy, you can check if the package you downloaded is 32 bits or 64 bits by dumpbin.exe shipped with visual studio:\n\"c:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\dumpbin.exe\"\nd:\\test\\sshdtest\\sshd.exe /headers\nMicrosoft (R) COFF/PE Dumper Version 14.00.24215.1\nCopyright (C) Microsoft Corporation.  All rights reserved.\nDump of file d:\\test\\sshdtest\\sshd.exe\nPE signature found\nFile Type: EXECUTABLE IMAGE\nFILE HEADER VALUES\n             14C machine (x86)\n               5 number of sections\n        5B5A10C4 time date stamp Thu Jul 26 11:19:48 2018\n               0 file pointer to symbol table\n               0 number of symbols\n              E0 size of optional header\n             102 characteristics\n                   Executable\n                   32 bit word machine\n...\n```. @jborean93, we are solving on the escaping issue in a central place. this issue is part of the fix. Let's leave it open so we are sure we fix and validate the scenario. if you are interested, this is the PR, it is not ready yet.. @jborean93, this actually is not related with the double quotes escaping issue. the server side scp slip 'c:/temp/some folder/cafe.txt' to two parts: \"'c:/temp/some\" and  \"folder/cafe.txt'\". I agree it return an some error. If you supplied -ddd to sshd.exe, you will see more information.\nIf you update the command to, it will work. (I only test it from windows client)\n``\n.\\scp.exe \"[server2016.domain.local]:\\\"C:/temp/some folder/cafe.txt\\\"\" c:\\test\\cafe.txt\n. @jborean93, the second issue is the windows CRT rule limitation. Windows cmd does not escape single quotes. If you change the default shell to powershell, single quotes should be recognized. . @meiry, please follow https://github.com/PowerShell/Win32-OpenSSH/wiki/Building-OpenSSH-for-Windows-(using-LibreSSL-crypto) to build openssh with libreSSL. The steps work for VS 2017 too.\nThe link you used needs to be cleaned up.. @meiry, to compile with openssl, please still follow https://github.com/PowerShell/Win32-OpenSSH/wiki/Building-OpenSSH-for-Windows-(using-LibreSSL-crypto)\nexcept one difference: you need to replace the content of folder of LibreSSL with openssl follow the same file structure.. I will fix it. @DarwinJS yes, realized that. the fix will contains both. you can supply \"-NoProfile -c\" as value of DefaultShellCommandOption. @masaeedu, I am seeing similar behavior when test in appveyor. Investigating.\n. @masaeedu, I can't repro on win10. I will try to repro it on win2k12R2. Will let you know if more information is needed. Appreciate your help. @masaeedu, unfortunately we did not have bandwidth to look into this. we will get back time once we get time.. @sunzcosmo , did you create symlinkmklink /D c:\\pwsh \"C:\\Program Files\\PowerShell\\6-preview\"```?\nfollowing this link. @sunzcosmo, It works for me using latest binaries built from latest source. Could you follow the Troubleshooting-Steps and post the sshd log?. after you update %programdata%\\ssh\\sshd_config, you need to restart the service to make your change take effect. @lhorace, short answer is no. Git hub release has latest feature and bug fix. Those latest change may be included in next windows release.. @manojampalam, the only thing I can guess is that older git version openssh was downloaded/installed from git or chocolaty before.. @schmitch your above cmdlets install inbox openssh from windows update. The script module was never included as OpenSSH WindowsCapability. Not sure if your system is upgraded from previous windows version or not.  The script module was needed on RS3 machine, but not needed on RS4 and RS5 any more. I guess you may downloaded the script module if followed openssh RS3 blog to fix key permission on RS3 machine.. ",
    "dwimsey": "Sounds like your client isn't specifying TERM type properly or whatever sudo you're using is unaware of your term type and is behaving badly because of it.\n. Are you escaping the \\ in the command line you're using (assuming you're doing it from the command line)?\nssh DOMAIN\\user@host\nwon't work, but\nssh DOMAIN\\user@host\nwill, because the backslash is escaped so it actually gets passed to ssh properly.\nI can confirm that both work.\n. ",
    "damnhandy": ":+1: \n. ",
    "csharmath": "+1\nSupporting proper Kerberos in a cross platform environment is a key feature for enterprises heavily using Kerberos\n. ",
    "kirkwolf": "This is more than a cross platform issue -  the ability to use GSSAPIKeyExchange with Kerberos or AD means that you can authenticate the host that you are connecting to without requiring that the user manage \"known_hosts\" registries.     This is equally valuable in a pure Windows->WIndows SSH environment.\n. Agreed, although a full implementation including GSSAPIKeyExchange for both\nssh and sshd is really needed to make the product really interesting for\nour corporate clients.   Maybe someone should start a crowd funded account\nfor this feature?   It might be interesting to the developers otherwise.\nIt would be nice if there were a GSSAPI wrapper library for SSPI.  Maybe\nthere is?  A quick search wasn't fruitful.\nIn the mean time, there is this documentation:\nhttps://docs.microsoft.com/en-us/windows/desktop/SecAuthN/sspi-kerberos-interoperability-with-gssapi\nKirk Wolf\nDovetailed Technologies\nhttp://dovetail.com\nOn Tue, Nov 20, 2018 at 10:58 AM Markus Kuhn notifications@github.com\nwrote:\n\n\"There is a plan to add this [SSPI] down the line\" Since three years have\nnow passed: any timetable yet for looking into this? I personally would be\nmost interested in having SSPI support for GSSAPIAuthentication and\nGSSAPIDelegateCredentials added to sshd, because my use case is that I have\nboth Windows and Linux machines in the same Active Directory domain, and I\nwould like to \"kinit ; ssh -K\" from Linux into the Windows machines and\ndelegate my Kerberos ticket to the Windows server such that it can access\nmy files on my behalf on another file server. GSSAPIKeyExchange would an\nadded bonus, but is less essential (as that is just for host\nauthentication). GSSAPI/SSPI support in the openssh Windows client is far\nless urgent, because the PuTTY folks have done that long ago.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/15#issuecomment-440347748,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AJ--Hpa09t-rviJSd4er3FqYT-S0cQ0pks5uxDTJgaJpZM4GSgGX\n.\n. \n",
    "mgkuhn": "A note on the choice of GSSAPI provider: the PuTTY ssh client supports both SSPI and MIT Kerberos for Windows as the underlying GSSAPI, and I have to use both routinely with PuTTY:\n- I need SSPI when the client is a domain-managed machine, to use the Kerberos ticket I got when logging into Windows.\n- If the Windows machine on which I run the PuTTY client is not in an Active Directory domain, then the only way I know to get a Kerberos ticket is to install \"MIT Kerberos for Windows\" and use the \"MIT Kerberos Ticket Manager\" to do the equivalent of running \"kinit\".\nSo unless SSPI does support some way to prompt for a Kerberos principal name and password and then fetches the required ticket after login (it apparently does not with PuTTY!), please make sure that your ssh client also supports the GSSAPI provided by MIT Kerberos for Windows (just as PuTTY does).\n. I don't think the initial claim \"The currently published code supports GSSAPIAuthentication.\" is true, at least not on Windows via SSPI. Where is that code? In order to perform GSSAPI authentication (and delegation) on Windows via the SSPI API, the ssh client would have to call InitializeSecurityContext() and the sshd server would have to call AcceptSecurityContext() and both have to pass the resulting GSSAPI tokens across the socket to the respective other side, and repeat this exchange of tokens to and fro until GSSAPI has done its thing. I cannot see currently any call to either InitializeSecurityContext() or AcceptSecurityContext() in the openssh-portable source code, so this is not even a construction site yet.\nThis issue is misnamed: first of all GSSAPIAuthentication via SSPI has yet to be supported. And only once that works, then related Kerberos options such as GSSAPIDelegateCredentials, GSSAPIKeyExchange, can also be added as well.\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa374704(v=vs.85).aspx\nhttps://docs.microsoft.com/en-us/windows/desktop/SecAuthN/authentication-functions. \"There is a plan to add this [SSPI] down the line\" Since three years have now passed: any timetable yet for looking into this? I personally would be most interested in having SSPI support for GSSAPIAuthentication and GSSAPIDelegateCredentials added to sshd, because my use case is that I have both Windows and macOS/Linux machines in the same Active Directory domain, and I would like to \"kinit ; ssh -K\" from macOS/Linux (or PuTTY from Windows) into the Windows machines and delegate my Kerberos ticket to the Windows sshd server such that it can access my files on my behalf on another file server. GSSAPIKeyExchange would an added bonus, but is far less essential (as that is just for host authentication). GSSAPI/SSPI support is far more urgent in the Windows sshd server than in the openssh Windows client, because the PuTTY folks have already done a Windows ssh client with GSSAPI long ago.. Note that there are now well-working test binaries at #1295 available that finally make GSSAPIAuthentication and GSSAPIDelegateCredentials work for Kerberos and Active Directory using a new GSSAPI wrapper library for SSPI contributed to OpenSSH by @NoMoreFood. I can now simply \"ssh -K -l 'domain\\user' windows-box.org\" password-free from Linux into my domain-joined Windows box without having to set up .ssh/authorized_keys there, and I can also automatically access Kerberos-protected filer shares on the windows box in that session thanks to the -K delegation of my Kerberos TGT. \nAs mentioned above, such a GSSAPI wrapper library for SSPI is obviously also a pre-requisite for GSSAPIKeyExchange to be implemented, so this patch should be an important step in that direction.\n(BTW, getting this to work also exposed some configuration problems in one of our local cross-domain Active Directory setups, which still partially used NTLM rather than Kerberos by accident, due to \"external trust\" rather than \"forest trust\" being used, as only the latter properly supports Kerberos for Windows clients. You also need to enable in Active Directory \"trusted for Kerberos delegation\" for both the user and the Windows box. If \"klist\" shows no service ticket under Windows, you are not actually using Kerberos.). Reading through RFC 4462, I see that GSSAPIKeyExchange has been standardized so far only for rather old-fashioned integer/GF(p) Diffie-Hellman groups: gss-group1-sha1-*, gss-group14-sha1-*, gss-gex-sha1-*. These are the GSSAPI-authenticated equivalents of the KexAlgorithms options\ndiffie-hellman-group1-sha1\ndiffie-hellman-group14-sha1\ndiffie-hellman-group-exchange-sha1\nwhich have been either disabled (group1) or are at the end of the modern preference list.\nHas anyone already amended RFC 4462 to specify GSSAPI-authenticated key exchange algorithms using the more fashionable curve25519-sha256, curve25519-sha256@libssh.org, ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521 elliptic curve groups?. PuTTY now implements this in its latest snapshot and has a nice explanation of the advantages of GSSAPI-based key exchange in its documentation:\n\n\"The advantage of doing GSSAPI authentication as part of the SSH key exchange is apparent when you are using credential delegation. The SSH key exchange can be repeated later in the session, and this allows your Kerberos V5 credentials (which are typically short-lived) to be automatically re-delegated to the server when they are refreshed on the client. (This feature is commonly referred to as \u2018cascading credentials\u2019.)\nIf your server doesn't support GSSAPI key exchange, it may still support GSSAPI in the SSH user authentication phase. This will still let you log in using your Kerberos credentials, but will only allow you to delegate the credentials that are active at the beginning of the session; they can't be refreshed automatically later, in a long-running session.\nAnother effect of GSSAPI key exchange is that it replaces the usual SSH mechanism of permanent host keys. So if you use this method, then you won't be asked any interactive questions about whether to accept the server's host key. Instead, the Kerberos exchange will verify the identity of the host you connect to, at the same time as verifying your identity to it.\"\n. Perhaps worth linking here some more information from Simon Wilkinson about his patches:\nhttp://blog.inf.ed.ac.uk/sxw/2009/07/26/gssapi-key-exchange-for-openssh-52p1/\nhttp://blog.inf.ed.ac.uk/sxw/2010/01/24/gssapi-key-exchange-for-openssh-5-3p1/\nhttps://github.com/SimonWilkinson/gss-openssh/blob/master/ChangeLog.gssapi\nhttps://bugzilla.mindrot.org/show_bug.cgi?id=1242\nThe bugzilla link is interesting: Damien Miller explains there why the OpenSSH maintainers never merged these patches, namely \u201ca) we don't trust GSSAPI implementations that much and b) we don't like adding new KEX since they are pre-auth attack surface\u201d. I suspect neither of these reasons would be significant for Microsoft, as they evidently do trust their own GSSAPI implementation (SSPI) at many other places. Simon's patches seem widely used in Linux distributions, but deactivated by default.. Kerberos/GSSAPI authentication and ticket delegation is now working well with release v7.9.0.0p1-Beta.\n\nWith that in place, does anyone actually really still need NTLM authentication, given how vulnerable that entire technology is in comparison to Kerberos? I can't think of a scenario where in addition to the existing three authentication methods (password, pubkey, Kerberos) NTLM still would add something useful nowadays.. All the non-domain environments that I'm familiar with are so tiny that ssh public-key authentication is perfectly practical to manage. And as soon as your environment is not tiny enough any more to manually manage authorized_keys, I generally think that's when it is time to set up a Kerberos KDC (Active Directory, SAMBA, MIT Kerberos, Heimdahl, etc.), rather than try anything involving NTLM. Active Directory would become a vastly less dangerous and tricky-to-configure-correctly tool if Microsoft finally switched off NTLM in it.. That drive mappings remain restricted to a single session is perfectly sane and fine. However, the problem remains that we still can't access SMB network shares via ssh. The real problem here is #996, namely that sshd does not set up the user-process properly in a new terminal-server session to allow it to store credentials, and therefore both CMDKEY and NET USE fail when they try to store a credential needed to access a file share. That has nothing to do with drive letters (which I'd also rather not use for all the reasons given by @Ventusfahrer, in favor of UNC paths).. Done.. At the technical level, is the problem perhaps that Windows does not currently notice that a new user has logged into it via sshd, because sshd does not currently (as of 0.0.24.0) behave like a terminal service and create a new session id for each user login (and keeps instead all user processes within session 0, which is only meant for services, i.e. the user does not show up when you run QUERY SESSION)? #996. Looking at the source, what sshd does to create the login process is to call in auth-passwd.c the function LogonUserExExW with\nLogonUserExExW(user, domain, password, LOGON32_LOGON_NETWORK_CLEARTEXT,\n               LOGON32_PROVIDER_DEFAULT, NULL, &token, NULL, NULL, NULL, NULL)\nand then pass the received token in session.c to CreateProcessAsUser with\nCreateProcessAsUserW(hToken, NULL, exec_command_w, NULL, NULL, TRUE,\n                     DETACHED_PROCESS, NULL, pw_dir_w, &si, &pi)\nI wonder why the first call uses LOGON32_LOGON_NETWORK_CLEARTEXT instead of LOGON32_LOGON_INTERACTIVE, since the LogonUserExExW documentation suggests that the latter would be more appropriate for a terminal server. Could this be the problem?\nAlso note that the man page for CreateProcessAsUser says:\n\nTerminal Services:  The process is run in the session specified in the token. By default, this is the same session that called LogonUser. To change the session, use the SetTokenInformation function.\n\nI don't see sshd making any attempt to use that function to set TokenSessionId, which in turn requires sshd to have the Act As Part Of the Operating System privilege (does it currently?).\nIf sshd wants to be a proper terminal service, how should it create a new user session?\nIs the current behavior, to stay in session 0, really the right thing to do?. The Bitvise SSH Server User's Guide has a good summary of some of the differences between LOGON32_LOGON_NETWORK_CLEARTEXT and LOGON32_LOGON_INTERACTIVE: https://www.bitvise.com/wug-logontype\nWhile the currently used LOGON32_LOGON_NETWORK_CLEARTEXT may be the correct form for things like SFTP access, for shell access LOGON32_LOGON_INTERACTIVE would seem much more appropriate.. Unfortunately, I can't find anywhere in Microsoft's API documentation any hint on how to start a new session. For example https://msdn.microsoft.com/en-us/library/aa383496(v=vs.85).aspx just explains that \"When a user logs on [...] a session is started for the user. Each session is identified by a unique session ID.\" But it gives no hint as to what the developer of a remote-access server such as sshd should be doing to start such a new session for the user.\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/aa378338(v=vs.85).aspx. Thank you for looking into this. It may be a good idea to get someone in charge of the Windows Kernel and/or Terminal Services (or now Remote Desktop Services) architectures involved (i.e., whoever at Microsoft does \"sessions\" and \"credentials\" for a living these days), as from my reading of the Windows API documentation that I found (see links above), I got the impression that certainly the existing Windows API documentation, possibly even the API itself, has not yet been written with applications like sshd in mind. It would be nice if the Windows API documentation explained clearly how services like sshd should set up new command-line login sessions and how these sessions can receive new credentials.\n[A possibly closely related issue #1295 is how to implement sshd's GSSAPIDelegateCredentials option, i.e. how sshd should add to the login session's credential cache the Active Directory Kerberos ticket that it receives from \"ssh -K\". (Because using CMDKEY is just a workaround: what I really would prefer is \"ssh -K\" getting the Active Directory credential all set up for me automatically, rather than me having to type my Active Directory password into CMDKEY each time.) I would not be surprised if solving the above CMDKEY issue is also a prerequisite for implementing GSSAPIDelegateCredentials. Again, the existing Windows API documentation seems very silent on how to delegate a Kerberos/AD ticket to a sshd login session for this.]. The problem still exists exactly as before in the latest release v7.7.2.0p1-Beta (tested on Windows 7 64-bit).. Suggestion to the Microsoft employees here: I wonder if you could consult any of the named authors or contributors of Mitigating Pass-the-Hash (PtH) Attacks and Other Credential Theft Techniques regarding this issue (see pages 2-3). Among them should be Microsoft's foremost experts regarding how credentials are stored in Windows sessions.. Thanks to the recently submitted patch in #1295 to support GSSAPIDelegateCredentials, this issue may be becoming much less urgent for many users, as they can now get the required Kerberos credentials into their session far more conveniently via Kerberos ticket delegation. An that delegation works fine for me in the current LOGON32_LOGON_NETWORK_CLEARTEXT logon type. (Nevertheless, the ability to switch sshd to use logon type LOGON32_LOGON_INTERACTIVE instead may still be useful for other reasons.). Regarding the case of sshd running as a service in session 0:\nThe underlying problem here is that Unix and Windows \"sessions\" are radically different things:\n\nOn Unix, there was very little notion of a login session: there is just the process ancestry tree and the real/effective UID/GID under which each process runs. Access to a GUI desktop is done via the file system (Unix-domain sockets, ~/.xauth files, etc.), so if you know where to go (e.g. via the DISPLAY environment variable) and your effective UID/GID has the right file-system permissions, you can access the GUI desktop. A Unix kernel knows (nearly) nothing of GUI desktops or windows.\nOn Windows there is instead an entire zoo of kernel objects called terminal sessions, login sessions, windows stations, desktops, and finally windows, some of which have their own access-control lists and associations with processes. In addition, there are security tokens.\n\nWindows was clearly never designed to run sshd out of the box in a way that gives ssh users full access to all Windows facilities in the same way remote-desktop does. The Windows kernel architects will eventually have to provide advice (and possibly even extend the Win32 API) on how to best give ssh users full access to their very different world of sessions. See also issue #996 on how to get a Kerberos ticket (or share one with another session) from ssh for another manifestation of the same underlying architectural problem.\n. This sounds more like a general misunderstanding of how to use ssh with git/svn/etc. than a specific issue with the Win32 port of OpenSSH. You can't mention in the git URL \"ssh://michel@10.10.2.1/repo...\" that you give to your users before the @ sign the name of a user \"michel\" that does not exist on the server OS. Windows sshd is not different from Unix ssh here: sshd can only create processes for a named existing OS user, and the name before the @ sign identifies the Windows SID/token associated with the process to be created.\nBut that does not mean that you need to create a Windows user for each of your git users. Instead, simply create a single Windows pseudo-user \"git-repo\" that owns the repository and then give every real user the same URL to log in, i.e. \"ssh://git-repo@10.10.2.1/repo...\". Your git users will still be distinguished by the individual key pair they use to authenticate themselves, which will select which line in the C:/Users/git-repo/.ssh/authorized_keys file of Windows user \"git-repo\" will let them in, where you can then vary the command that gets executed instead of a shell with the command=\"...\" attribute (which can then pass the git/svn/etc. user name on the command line, see link below). There should be no need to change sshd_config.\nYou may benefit from trying this out on a POSIX system first, where this trick is very widely used and documented, before trying to port the practice to a Win32 server, where ssh is still a rather experimental service. The relevant git setup is a bit more complex (because git identifies authors and committers, not users), and usually arranged via tools such as gitolite, but for Subversion (which has users) the same trick is very easy to set up manually, and is explained in the Subversion book section \"SSH Configuration Tricks\":\nhttp://svnbook.red-bean.com/en/1.7/svn.serverconfig.svnserve.html#svn.serverconfig.svnserve.sshtricks. All that is really needed is to make GSSAPI authentication work in the openssh-portable sshd server on Windows. Active Directory implements already a perfectly wonderful distributed key-management system for clients and servers in the form of the Kerberos protocol, and in an Enterprise environment, you really simply want to use that existing infrastructure instead of SSH public keys. Inventing a completely new Active-Directory-based key management system separate from Kerberos really would be a waste of time.\nAs @mattpwhite already outlined above, adding GSSAPI authentication to sshd involves\n- reading RFC 4462,\n- looking at how that is currently implemented in sshd in gss-serv.c,\n- then port gss-serv.c from currently using /usr/include/gssapi/gssapi.h on Linux/macOS to using SSPI on Windows. \nMicrosoft's SSPI is essentially a clone of GSSAPI, even the function names are rather similar, e.g. gss_accept_sec_context in GSSAPI becomes AcceptSecurityContext in SSPI, etc. It looks like this should really be little more than like-for-like API call translation.. Kerberos/GSSAPI authentication and ticket delegation is now working well with release v7.9.0.0p1-Beta.\nJust enable it with GSSAPIAuthentication yes in C:\\ProgramData\\ssh\\sshd_config and then connect with ssh -K hostname.example.com or ssh -K DOMAIN\\user@hostname.example.com. No need to set up any authorized_keys file, as user authentication is now done by Active Directory for you via Kerberos. (However you will still have to check public host keys, until #15 is implemented, as ssh can use so far Kerberos only for user authentication, not yet for key exchange.)\nDoes this satisfy the original requirement, which I think was for Active-Directory-based user authentication? Can this issue therefore be closed?. @bagajjal Thanks for the instructions on how to activate logging. Could you please add them for future reference to this wiki page?\nFor me this revealed the cause as\ndebug3: Bad permissions. Try removing permissions for user: S-1-5-80-3847866527-469524349-687026318-516638107-1125189541 on file C: \\\\Users\\\\mgk25\\\\.ssh/authorized_keys.\n(Displaying the username rather than only the SID would be nicer.)\nAnd the permissions were in my case:\nC:\\>icacls \\Users\\mgk25\\.ssh\\authorized_keys        \n\\Users\\mgk25\\.ssh\\authorized_keys NT SERVICE\\sshd:(R)                           \n                                  NT AUTHORITY\\SYSTEM:(I)(F)                    \n                                  BUILTIN\\Administrators:(I)(F)                 \n                                  cheltenham\\mgk25:(I)(F)\nSo that's just sshd, myself and two inherited standard SYSTEM and Administrators SIDs. Does that really have to count as \"bad permissions\"?\nI eventually repaired it with\nC:\\> powershell\nPS> cd 'C:\\Program Files\\OpenSSH-Win64'\nPS> Set-ExecutionPolicy Unrestricted -Scope CurrentUser\nPS> Import-Module .\\OpenSSHUtils.psd1 -Force\nPS> Repair-AuthorizedKeyPermission -FilePath C:\\Users\\mgk25\\.ssh\\authorized_keys\nresulting in\nPS> icacls \\Users\\mgk25\\.ssh\\authorized_keys\n\\Users\\mgk25\\.ssh\\authorized_keys NT AUTHORITY\\SYSTEM:(F)\n                                  cheltenham\\mgk25:(F)\n. Discussion of this feature request and useful references have previously appeared under various other issues, such as #15, #96, #1157. I hope this dedicated ticket will help to collect all these in one place.. Adding GSSAPI authentication and delegation to sshd involves\n- reading RFC 4462,\n- looking at how that is currently implemented in sshd in gss-serv.c,\n- then port gss-serv.c from currently using /usr/include/gssapi/gssapi.h on Linux/macOS to using SSPI on Windows. \nMicrosoft's SSPI is essentially a clone of GSSAPI, even the function names are rather similar, e.g. gss_accept_sec_context in GSSAPI becomes AcceptSecurityContext in SSPI, etc. It looks like this should really be little more than like-for-like API call translation.\nRelated reading:\n\nSSPI/Kerberos Interoperability with GSSAPI. In order to perform GSSAPI authentication (and delegation) on Windows via the SSPI authentication functions, the ssh client will have to call InitializeSecurityContext() and the sshd server will have to call AcceptSecurityContext() and both have to pass the resulting GSSAPI tokens across the SSH2 protocol (as per RFC 4462) to the respective other side, and repeat this exchange of tokens to and fro until these SSPI calls return SEC_E_OK to report that the security context was successfully initialized.. I would not be surprised if another prerequisite for delegation to work is to understand and fix #996 first.. @NoMoreFood I personally think you do the world a service by not adding NTLM support to a new product in 2018. NTLM support would just create additional worries that using OpenSSH with GSSAPI might pass on an NTLM hash by accident, and therefore expose a user password to dictionary and pass-the-hash attacks. Adding NTLM support to OpenSSH could well reduce security in practice.. Lots of thanks to @NoMoreFood for the pull request and to @manojampalam for merging it! This very happy user is delighted to report that the requested Kerberos authentication+delegation functionality works fine in both ssh -K and sshd in the recent release v7.9.0.0p1-Beta (tested on Windows 7 64-bit).. > Otherwise, I'm wondering if your changes are specific to supporting Kerberos or can they also do SPNEGO (that can also do NTLM if needed)?\n\nFurther to my comment above (that NTLM authentication is generally pretty dangerous and therefore best left out of SSH), I just noticed that section 7.3 in RFC 4462 specifically forbids the use of SPNEGO over SSH GSSAPI. This is because SSH has already a method negotiation mechanism, and running a second negotiation inside GSSAPI could subvert the preference order of mechanisms and lead to interoperability problems.. PowerShell has a feature called Just Enough Administration that sounds like the closest thing I've seen so far on Windows to /etc/sudoers on Linux, i.e. a config file where you can specify who is allowed to do what with elevated privileges. However, elsewhere it says \"SSH-based remoting doesn't currently support remote endpoint configuration and JEA (Just Enough Administration)\".\nWhat is still required to make JEA work over SSH?\n. ",
    "voltagex": "Whoa, SSPI support could mean easy smartcard auth to Windows and non-Windows sshd!\n. Backspace seems to work in Terminal.app, but not update the screen for me - \n``` batch\nAdam@ICARUS D:>powershell\nhit backspace 4 times\nAdam@ICARUS D:>'powers' is not recognized as an internal or external command,\noperable program or batch file.\n```\nbut Ctrl+H works. Backspace works when using PuTTY on Windows to another Windows host so perhaps there's a setting for iTerm to send Ctrl+H instead of DEL. \n(I no longer have access to a Mac to test this, I've also merged my stream-of-consciousness posts into this issue - hopefully it's more readable)\n. @PigBoT this issue was about a Mac client - maybe you should open a separate issue?\n. And now it's gone again\n. Just a thought - you may be able to disable encryption completely via sshd\nand have a look at what is sent across the wire in regards to backspace /\nDEL.\nOne of the reasons for separate issues is the myriad of configurations and\nadd-ons in use. It'd be nice to reduce this down to a minimum test-case -\nbut maybe a Microsoft employee is best placed to do that.\n. Also, do you get the same behaviour on Linux if you drop back to a command\nline and use SSH that way? (ctrl-alt-f1, ctrl-alt-f7 to get back)\n. Getting this too after updating sshd version. \nOpenSSH_7.5p1, LibreSSL 2.5.3\nMicrosoft Windows [Version 10.0.15063]\nbash.exe is launching correctly, but something is stopping it launching a session\n\n. The same risk exists on Linux, right?. Can't reproduce on current build, will open a new issue with the current error.. ",
    "kfiresmith": "+1. ",
    "dihmandrake": "I would love to see this implemented. ",
    "jimcroft": "FWIW in line with the comment from @mgkuhn using GSSAPIKeyExchange with MIT Kerberos is as important as ActiveDirectory for my use cases.. ",
    "DomDupuis": "+1\n. +1  (Kerberos is a must). ",
    "coztoolkit": "Reply to mgkuhn:  The issue is not misnamed; it was specifically opened to request that Microsoft take up the Simon Wilkinson patches which add GSSAPIKeyExchange support to the OpenSSH portable base.  I was noting that OpenSSH supports GSSAPIAuthentication, not commenting on Microsoft's port of that code via SSPI.  My wording should have been clearer.\nAlso (not that you are claiming otherwise) please note that the PuTTY standard distribution does not include GSSAPIKeyExchange support.  Support for key exchange is being requested here for both the OpenSSH server and client on Windows.\nIf you are concerned about Microsoft's implementation (or lack of progress thereof) of GSSAPIAuthentication via SSPI, you should open a separate issue.. Thanks for mentioning this.  It's good to see that this was finally implemented in the PuTTY base.  \nYes, the elimination of host key verification is a very important side effect.. ",
    "pseudometric": "\nHas anyone already amended RFC 4462 to specify GSSAPI-authenticated key exchange algorithms using the more fashionable curve25519-sha256, curve25519-sha256@libssh.org, ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521 elliptic curve groups?\n\n@mgkuhn \u2014 Yes; there\u2019s an active I-D addressing this as well as updating other aspects of SSH key exchange: Key Exchange (KEX) Method Updates and Recommendations for Secure Shell (SSH)\n. ",
    "MichaelPie": "@quamrulmina This didn't work for me. When I enter powershell -File - I just receive \"powershell -File\" twice as output, but PowerShell commands still don't work. Only cmd.exe shell works.\n. ",
    "mikemaccana": "Why is this closed? There's a workaround (powershell -File -) but obviously input should be set correctly by default. \n. Thanks @ariscop!\n. @quamrulmina do you know when the stream mode limitation will be fixed? Ideally I'd like to be able to use openssh in the same way we use /n software's powershell sshd now. Thanks!\n. Understood, thanks @quamrulmina! \n. Fixed in https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\n. No probs @manojampalam thank for all your hard work! \ud83d\udcaf\n. Cheers and thanks for the quick reply! \ud83d\ude03\n. FYI #16 includes a workaround, but has been closed without fixing the issue. \n. Thanks @lalomartins ! Also @manojampalam can confirm the new release fixes issues for me.\n. I manually updated to the May 30 build and am now receiving the same ERROR:5 error, though my agent seems to be working:\nagent_start pid:2724, dbg:1, child:0, pipe:0\ncannot create agent root reg key, ERROR:5\nIdentity added: C:\\Users\\mike/.ssh/id_rsa (C:\\Users\\mike/.ssh/id_rsa)\n. Thanks @manojampalam that fixed it. Specifically, I disabled posh-git since I don't find it provides much value.\n. I'm getting the exact same as what @bluekeys mentioned - I have to cd into C:\\Program Files\\OpenSSH-Win64 to be able to run scp. Hey @DarwinJS and thanks for maintaining the package! I know the chocolatey package and instructions exist, I just want there to be a single set of instructions for the final release to remove any ambiguity or inconsistency around install methods. Saying \"you can use the package, but the instructions below don't use it\" as https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH does now isn't ideal.\nI'd be interested in knowing from @manojampalam what the preferred official mechanism will be when Windows openssh is considered stable - maybe the new chocolatey provider you mentioned, maybe another install-package provider? \n. @DarwinJS I'm just getting started with windows so I hope you don't mind the questions (I genuinely don't know). \n- Does install-package only get packages from package providers? \n- Is there an official package provider, eg, an official microsoft package provider? \nThanks! \n. Thanks @DarwinJS - re: the second question, is there an official microsoft package provider? Would openssh go there or stay in chocolatey? . Thanks again @ferventcoder ! I get that's it's a package manager manager, just wanted to see if one of those providers was an 'official' Microsoft one - eg, in Red Hat land, there are Red Hat repos, and community/third party repos. In Ubuntu land, there are official Ubuntu repos and community/third party repos. I guess the answer is no - there's no official MS web-based provider (and MS themselves use Chocolatey as you mention).. Looks like the most recent update - Microsoft_Win32_port_with_VS Nov 29 2016 sets TERM to be dumb, causing WARNING: terminal is not fully functional in less. @fpqc TBH I'd support having 1607 as a hard requirement - by the time OpenSSH for Windows is considered stable 1607 will probably be current anyway. What does @manojampalam think?. @fpqc That's an excellent point \ud83d\udc4d. I didn't experience this behavior with previous releases but after moving to 0.0.9.0 from, IIRC, 0.0.7.0 I am. Here's an npm install running on a Linux host:\n\n. @bagajjal Behaviour no longer occurs with the recent 0.0.10.0 release \ud83d\udc4d. Just saw this now. Thanks @bingbing8 ! \ud83d\ude0a. @manojampalam are you sure there is a signed build of LibreSSL? I can't see any LibreSSL binaries  anywhere on my machine. . PS = I'd reopen, as the binaries don't exist, but I don't have permission.. Hi Manoj, I think you're not quite reading the request correctly, which is\nfor a libressl binary (typically called 'openssl.exe').\nOn Mon, 4 Jun 2018 at 6:58 pm, Manoj Ampalam notifications@github.com\nwrote:\n\nI see this for libcrypto.dll in 7.6.1.0 payload\n[image: image]\nhttps://user-images.githubusercontent.com/14185020/40933373-1def0dee-67e6-11e8-9472-569a6268290c.png\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1173#issuecomment-394443722,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAKiMkLLcCX9P2XP-FTsE9ljdHY3Cj4vks5t5XUwgaJpZM4UZVR0\n.\n. It it possible to include an exe, which would allow us to use LibreSSL to inspect keys and certificates, change formats, etc? Currently we're limited to certreq, which can only do CSR, a small subset of the full LibreSSL binary.. \n",
    "allegorythm": "I too have the same error after setting DEBUG logging. Is domain user key exchange supported?  Forgive me if it is unsupported, it is not 100 % clear in the documentation.\nHere are the details, hope it helps.\nconnection from RHEL 6.5  -> Windows 2008 R2 SP1  (also tested on Windows 2012 SP1 with same results)\n/home/opensshtestid/.ssh/id_rsa  has been generated on RHEL linux box and same related pubkey transferred to windows server to the locations below:\nc:\\users\\localid\\ .ssh\\authorized_keys    (this is the test local admin account)\nc:\\users\\domainid\\ .ssh\\authorized_keys  (this is a test domain account. This account is a member of local admin group on the windows server)\ntesting results:\nlocal id test (key exchange works fine)\n[opensshtestid@10.193.42.224] ssh localid@10.192.44.41\nMicrosoft Windows [Version 6.1.7601]\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\nlocalid@10.192.44.41 C:\\Users\\localid>\nlog snippet\n4732 12:18:36 719 Connection from 10.193.42.224 port 43087 on 10.192.44.41 port 22\n4732 12:18:36 721 debug1: Client protocol version 2.0; client software version OpenSSH_5.3\n4732 12:18:36 721 debug1: match: OpenSSH_5.3 pat OpenSSH_5* compat 0x0c000000\n4732 12:18:36 721 debug1: Enabling compatibility mode for protocol 2.0\n4732 12:18:36 721 debug1: Local version string SSH-2.0-OpenSSH_7.1\n4732 12:18:36 721 debug1: list_hostkey_types: ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519\n4732 12:18:36 721 debug1: SSH2_MSG_KEXINIT sent\n4732 12:18:36 722 debug1: SSH2_MSG_KEXINIT received\n4732 12:18:36 722 debug1: kex: client->server aes128-ctr hmac-sha1 none\n4732 12:18:36 722 debug1: kex: server->client aes128-ctr hmac-sha1 none\n4732 12:18:36 722 debug1: expecting SSH2_MSG_KEX_DH_GEX_REQUEST\n4732 12:18:36 920 debug1: SSH2_MSG_KEX_DH_GEX_REQUEST received\n4732 12:18:36 920 WARNING: /moduli does not exist, using fixed modulus\n4732 12:18:36 921 debug1: SSH2_MSG_KEX_DH_GEX_GROUP sent\n4732 12:18:36 967 debug1: expecting SSH2_MSG_KEX_DH_GEX_INIT\n4732 12:18:37 081 debug1: SSH2_MSG_NEWKEYS sent\n4732 12:18:37 081 debug1: expecting SSH2_MSG_NEWKEYS\n4732 12:18:37 095 debug1: SSH2_MSG_NEWKEYS received\n4732 12:18:37 095 debug1: KEX done\n4732 12:18:37 291 debug1: userauth-request for user localid service ssh-connection method none\n4732 12:18:37 292 debug1: attempt 0 failures 0\n4732 12:18:37 293 Failed none for localid from 10.193.42.224 port 43087 ssh2\n4732 12:18:37 294 debug1: userauth-request for user localid service ssh-connection method publickey\n4732 12:18:37 294 debug1: attempt 1 failures 0\n4732 12:18:37 294 debug1: test whether pkalg/pkblob are acceptable\n4732 12:18:37 294 Postponed publickey for localid from 10.193.42.224 port 43087 ssh2\n4732 12:18:37 302 debug1: userauth-request for user localid service ssh-connection method publickey\n4732 12:18:37 302 debug1: attempt 2 failures 0\n4732 12:18:37 303 debug1: -> LsaLogon()...\n4732 12:18:37 303 debug1: Checking args...\n4732 12:18:37 303 debug1: Setting up LSA Strings...\n4732 12:18:37 304 debug1: LsaRegisterLogonProcess()...\n4732 12:18:37 305 debug1: Retrieving Authentification Package ID...\n4732 12:18:37 305 debug1: Allocating LsaAuth struct...\n4732 12:18:37 305 debug1: Setting up TOKEN_SOURCE...\n4732 12:18:37 305 debug1: Login attemp...\n4732 12:18:51 673 debug1: login status: 0...\n4732 12:18:51 673 debug1: homedir = [C:\\Users\\localid]\n4732 12:18:51 673 debug1: Duplicating token...\n4732 12:18:51 674 debug1: LsaLogon : OK.\n4732 12:18:51 675 debug1: <- LsaLogon()...\n4732 12:18:51 675 debug1: Using LSA HomeDirW.\n4732 12:18:51 675 debug1: trying public key file C\n4732 12:18:51 676 debug1: allocating new sfd, sfd [4] fd [5] handle [416] type [1]\n4732 12:18:51 676 debug1: matching key found: file C, line 1 RSA SHA256:dYjWtR/46CZA9ivk4XAD1YHgesINXbN3jrPgfoOkvKY\n4732 12:18:51 677 Accepted publickey for localid from 10.193.42.224 port 43087 ssh2: RSA SHA256:dYjWtR/46CZA9ivk4XAD1YHgesINXbN3jrPgfoOkvKY\n4732 12:18:51 677 debug1: Entering interactive session for SSH2.\n4732 12:18:51 677 debug1: server_init_dispatch_20\n4732 12:18:51 678 debug1: server_input_channel_open: ctype session rchan 0 win 1048576 max 16384\n4732 12:18:51 678 debug1: input_session_request\n4732 12:18:51 678 debug1: channel 0: new [server-session]\n4732 12:18:51 679 debug1: session_new: session 0\n4732 12:18:51 679 debug1: session_open: channel 0\n4732 12:18:51 679 debug1: session_open: session 0: link with channel 0\n4732 12:18:51 679 debug1: server_input_channel_open: confirm session\n4732 12:18:51 679 debug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\n4732 12:18:51 681 debug1: server_input_channel_req: channel 0 request pty-req reply 1\n4732 12:18:51 681 debug1: session_by_channel: session 0 channel 0\n4732 12:18:51 681 debug1: session_input_channel_req: session 0 req pty-req\n4732 12:18:51 681 debug1: Allocating pty.\n4732 12:18:51 681 debug1: session_pty_req: session 0 alloc console\netc...\ndomain id test (key exhange not working, authentication is ok).  As I mentioned, the same authorized key file is used as in previous test.\n[opensshtestid@10.193.42.224]  ssh -l domainid@domain 10.192.44.41\nopensshtestid@domain@10.192.44.41's password:                                                                                 Microsoft Windows [Version 6.1.7601]\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\nafter domain password is entered manually, authentication is successful as shown above\n4268 12:29:24 732 Connection from 10.193.42.224 port 43112 on 10.192.44.41 port 22\n4268 12:29:24 734 debug1: Client protocol version 2.0; client software version OpenSSH_5.3\n4268 12:29:24 734 debug1: match: OpenSSH_5.3 pat OpenSSH_5* compat 0x0c000000\n4268 12:29:24 734 debug1: Enabling compatibility mode for protocol 2.0\n4268 12:29:24 734 debug1: Local version string SSH-2.0-OpenSSH_7.1\n4268 12:29:24 734 debug1: list_hostkey_types: ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519\n4268 12:29:24 734 debug1: SSH2_MSG_KEXINIT sent\n4268 12:29:24 736 debug1: SSH2_MSG_KEXINIT received\n4268 12:29:24 736 debug1: kex: client->server aes128-ctr hmac-sha1 none\n4268 12:29:24 736 debug1: kex: server->client aes128-ctr hmac-sha1 none\n4268 12:29:24 736 debug1: expecting SSH2_MSG_KEX_DH_GEX_REQUEST\n4268 12:29:24 935 debug1: SSH2_MSG_KEX_DH_GEX_REQUEST received\n4268 12:29:24 935 WARNING: /moduli does not exist, using fixed modulus\n4268 12:29:24 935 debug1: SSH2_MSG_KEX_DH_GEX_GROUP sent\n4268 12:29:24 960 debug1: expecting SSH2_MSG_KEX_DH_GEX_INIT\n4268 12:29:25 055 debug1: SSH2_MSG_NEWKEYS sent\n4268 12:29:25 055 debug1: expecting SSH2_MSG_NEWKEYS\n4268 12:29:25 069 debug1: SSH2_MSG_NEWKEYS received\n4268 12:29:25 069 debug1: KEX done\n4268 12:29:25 276 debug1: userauth-request for user opensshtestid@domain service ssh-connection method none\n4268 12:29:25 276 debug1: attempt 0 failures 0\n4268 12:29:25 277 Failed none for opensshtestid@domain from 10.193.42.224 port 43112 ssh2\n4268 12:29:25 278 debug1: userauth-request for user opensshtestid@domain service ssh-connection method publickey\n4268 12:29:25 278 debug1: attempt 1 failures 0\n4268 12:29:25 278 debug1: test whether pkalg/pkblob are acceptable\n4268 12:29:25 279 Postponed publickey for opensshtestid@domain from 10.193.42.224 port 43112 ssh2\n4268 12:29:25 286 debug1: userauth-request for user opensshtestid@domain service ssh-connection method publickey\n4268 12:29:25 286 debug1: attempt 2 failures 0\n4268 12:29:25 288 debug1: -> LsaLogon()...\n4268 12:29:25 288 debug1: Checking args...\n4268 12:29:25 288 debug1: Setting up LSA Strings...\n4268 12:29:25 289 debug1: LsaRegisterLogonProcess()...\n4268 12:29:25 290 debug1: Retrieving Authentification Package ID...\n4268 12:29:25 290 debug1: Allocating LsaAuth struct...\n4268 12:29:25 290 debug1: Setting up TOKEN_SOURCE...\n4268 12:29:25 290 debug1: Login attemp...\n4268 12:29:25 673 debug1: SSH-LSA authorization failed. (err = 0, ntStat = c000006d).\n4268 12:29:25 674 debug1: <- LsaLogon()...\n4268 12:29:25 675 Failed publickey for opensshtestid@domain from 10.193.42.224 port 43112 ssh2: RSA SHA256:dYjWtR/46CZA9ivk4XAD1YHgesINXbN3jrPgfoOkvKY\n4268 12:29:25 676 debug1: userauth-request for user opensshtestid@domain service ssh-connection method keyboard-interactive\n4268 12:29:25 676 debug1: attempt 3 failures 1\n4268 12:29:25 676 debug1: keyboard-interactive devs \n4268 12:29:25 676 debug1: auth2_challenge: user=opensshtestid@domain devs=\n4268 12:29:25 677 debug1: kbdint_alloc: devices ''\n4268 12:29:25 677 Failed keyboard-interactive for opensshtestid@domain from 10.193.42.224 port 43112 ssh2\n4268 12:29:44 954 debug1: userauth-request for user opensshtestid@domain service ssh-connection method password\n4268 12:29:44 954 debug1: attempt 4 failures 2\n4268 12:29:45 077 Accepted password for opensshtestid@domain from 10.193.42.224 port 43112 ssh2\n4268 12:29:45 078 debug1: Entering interactive session for SSH2.\n4268 12:29:45 078 debug1: server_init_dispatch_20\n4268 12:29:45 080 debug1: server_input_channel_open: ctype session rchan 0 win 1048576 max 16384\n4268 12:29:45 080 debug1: input_session_request\n4268 12:29:45 080 debug1: channel 0: new [server-session]\n4268 12:29:45 080 debug1: session_new: session 0\n4268 12:29:45 080 debug1: session_open: channel 0\n4268 12:29:45 080 debug1: session_open: session 0: link with channel 0\n4268 12:29:45 080 debug1: server_input_channel_open: confirm session\n4268 12:29:45 080 debug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\n4268 12:29:45 121 debug1: server_input_channel_req: channel 0 request pty-req reply 1\n4268 12:29:45 122 debug1: session_by_channel: session 0 channel 0\n4268 12:29:45 122 debug1: session_input_channel_req: session 0 req pty-req\n4268 12:29:45 122 debug1: Allocating pty.\n4268 12:29:45 122 debug1: session_pty_req: session 0 alloc console\n. ",
    "monsoft": "I have this same issue with key authentication.\n. ",
    "ercmcd": "I too am receiving this error. Anyone else able to figure this out?\n. ",
    "wese33": "Any solutions yet?\n. ",
    "jhudsoncedaron": "I consider this ability essential to a Windows port of ssh; we intend to use this for massive cross-domain automation. As you know, automation with a simple scripting language must use publickey auth because it can't contain an expect-loop for password and unless you've hacked the client it won't prompt anyway.\nTo avoid bypassing AD security model; check that the user is not disabled. You're probably going to have to disallow access to network resources, like the scheduled task switch \"Do not save password. The task will only have access to local resources.\" But we can always get a network resource by calling ssh again.\n. Workaround: Turn off UAC -- but turning off UAC causes horrendous things to happen to the Windows 10 explorer. Bad workaround. Very bad.\nThe thing about what happens to explorer when UAC is off is classified as by design by Microsoft, but as a bug by anybody else encountering it. Shrug.\n. Don't use Powershell ISE. ISE is brain-damaged. You can connect from powershell on the terminal only if you specify a command to run.\n. ssh from powershell ISE -> fail HARD (can't read from stdin)\nssh from powershell terminal: works if you specify a command, fails if you don't. Specifying the command \"cmd\" or \"powershell\" seems good enough.\n. Ugh! A good case for shipping a command-line tool for fixing private key files.\n. I think removing all access from the advanced view by unchecking inherit and deleting everything, then giving yourself full control does the needful.\n. I guess I'm used to the unix world bug where ssh doesn't actually check the full ACL but only the classic permissions; hence DreaJulca's scenario wouldn't have broken it.. Go get a copy of tail.exe from unxutils and post the last 100 or so lines.\n. Had you checked the history you would see the change got reverted.\nhttps://github.com/PowerShell/Win32-OpenSSH/commit/69546ae1ff256e9c7b68379cd63fc77932332304\nIn testing it, terminal handling is now hosed really badly when I used putty as the client and even when using the windows cmd as the terminal, the nested ssh now yields \"Pseudo-terminal will not be allocated because stdin is not a terminal\".\nIt won't let me reopen.\n. Why is it you do not believe that I cannot reopen the item?\n. @manojampalam Ah yes you ran into an inherent design flaw in Windows. It's not the first you will hit.\nKnowing the flaws involved when I attempted to plan a port, I'm surprised that MS didn't just decide to fix the Windows problems first. Problem #1: Can't wait for thousands of handles per thread. Problem #2: Can't create anything like a PTY so a console app that wants to change TTY settings does not signal the server end and so it doesn't pass down the network pipe. Problem #3: Trying UTF-8 on the console explodes, but essentially all ssh links are either UTF-8 Text or binary and ssh can't tell the difference.\n. Fixing this is a bad idea. I depend on being able to do this remotely with normal use of ssh.. #494 is not fixable as an admin user logging in can up and replace the sshd binary.\nIf you manage to block this, sc create junk binPath=\"c:\\windows\\system32\\cmd /k ...\" sc start junk or one of a hundred other paths can undo the change. It just makes legit use harder.. @manojampalam: You haven't caught on yet. That privileged task can go back and replace the authorized_keys file as it will be running as system with all privileges. The protection is a speed bump not a actual fix to a debatable security issue.\nIn addition, replacing the sshd binary in place is not required to replace the sshd binary. Changing the path to it in services will suffice.. ",
    "MrAgent": "SSH will not automatically handle display traffic. You would need to have a Window manager on your client that can receive graphic input. If you have this, you could tunnel the display traffic through the SSH connection.\n. ",
    "xcjs": "@MrAgent I think the issue that @JBlond pointed out is that command line \"graphical\" applications are not opening. htop and nano are command line applications that don't require a window manager.\n. @trisk Thanks for the clarification! I always wondered what to call them.\n. ",
    "JBlond": "ok pseudo graphical. However the apps work with putty. \n. When tho it is not practical it works with the export.\n. Indeed the encoding isn't correct. I saw it when I changed to color.\n. nano works now even with cmd.exe\nhtop has some encoding problem but it works.\nWith git bash I get an error when I tried to connect.\nssh_askpass: CreateProcess failed: 193\n. I tried on Windows PowerShell I'm not sure what happens, cause the programm doesn't start.\n. ",
    "shanselman": "I was able to open htop after doing an \"export TERM=xterm\"\n. With respect, it really doesn't. Try htop, it's a mess. You're missing the clear commands send after, the prompt shows up over it, etc etc. Compare it to any other SSH terminal like bitvise and you'll see that your ssh terminal isn't in an acceptable state. You shouldn't close this issue, and you definitely shouldn't require this export as a weak workaround. \n. Thanks @JBlond \n. Looking forward to it!\nOn Thu, Oct 29, 2015 at 3:33 PM, quamrulmina notifications@github.com\nwrote:\n\nFxied in new upcoming release. ssh.exe client now is much more function\nrick and should work better. The client has ANSI/Vt220 support and sets\nTERM to vt220. sudo showing password is also fixed as ssh client does not\ndo local echo which it was to do before showing everything typed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/19#issuecomment-152346457\n.\n\n\nScott Hanselman\nDonate to fight diabetes: http://hnsl.mn/fightdiabetes\n. ",
    "trisk": "Some background for this problem since there seems to be confusion here:\nFull-screen text applications like htop are usually called curses-based applications, because they typically use a library like curses or ncurses to provide text-based drawing routines.\nThe TERM environment variable names a terminal type, which allows text applications to speak the correct control protocol for the terminal they're being displayed on (by loading the corresponding terminal definition from a terminfo or termcap database). The most common are probably: xterm/xterm-color/xterm-256color, vt100, and linux.\nThe SSH server normally passes the variable TERM from the client to the remote shell, since on Unix, TERM is always set to the correct terminal type (or local applications wouldn't work properly). A terminal definition with the same name must exist on both the local and remote system for this to work, though.\nI don't know what terminal definitions the PowerShell window is compatible with, but it appears to set TERM to a terminal type unavailable on remote Unix systems, or doesn't set it at all. (Someone should check this with echo $TERM after logging in).\n. ",
    "godefroi": "My $TERM was set to \"dumb\". I would have thought that that would cause 'ls' to not send color codes, but that was apparently not correct.\n. ",
    "robotdad": "I ran into this with nano. It works when using ssh in PowerShell but not from cmd. When launching nano in running ssh in cmd you get the Error opening terminal message.\n. Looks like tab completion is working as expected in cmd now. Vi works in cmd now. I'll try nano again tomorrow when I'm on a device that has it.\n. This looks like it is working in the current build for powershell and cmd\n. ",
    "thecliguy": "@manojampalam  - I am running Windows 10 with the anniversary update and this is my experience:\n\nVersion 0.0.3.0, TERM is set to 'ansi', htop runs but the output is a garbled mess.\nVersion 0.0.4.0 and 0.0.5.0, TERM is set to 'dumb' and consequently htop (and pretty much any other ncurses 'graphical' program) refuses to run at all: \nError opening terminal: unknown.\n\nIssue #430 refers to my last point where the TERM is set to 'dumb'.\nWas it a conscious decision to change the TERM type to 'dumb' in the last two builds - or is that an oversight? If it was intentional, then should I be manually changing the TERM type, and if so, what to?\nDoes this subject perhaps warrant some documentation on the wiki?. @bagajjal - Excellent. I will conduct some tests tonight and let you know the outcome.. @bagajjal Apologies for the delay. I have conducted some tests using the version you supplied in 'ssh_alt_meta_fix.zip'. \nAs mentioned in my initial post, in Weechat (an IRC client), navigating between buffers is achieved by:\n1. Pressing and holding the meta key, followed by a number key (1-9).\n1. Pressing and holding the meta key, followed by an arrow key.\nPreviously, neither of these navigation methods worked. In ssh_alt_meta_fix.zip, method 1 now works but method 2 still doesn't work.\n(In my initial post, I used sudo showkey to output key presses. I have since learnt that the same thing can be achieved using cat -v)\nUsing the OpenSSH client on the Windows Subsystem for Linux, cat -v produces the following output when alt and &downarrow are pressed together: ^[[1;3B.\nUsing Win32-OpenSSH client with your fix (ssh_alt_meta_fix.zip), cat -v produces the following output when alt and &downarrow are pressed together: ^[[B.\nSo why does  pressing the meta key in combination with an arrow key behave differently in Win32-OpenSSH?. @bagajjal - I have tested the latest private release you provided and cursor keys (alt+up/down/etc) now work as expected. \nSo this issue is now resolved, thank you for addressing it so quickly!\nI hope this fix will be in the next release?. ",
    "tradstone": "@thecliguy @manojampalam I experienced the same.. Anybody experienced the same issue?\n. ",
    "tmichealson": "Similar results.  There is no echo of the issued command, but the session freezes after any command is issued (i.e. \u201cdir\u201d, or \u201dcd c:\\\u201d  so not complex stuff)\nI have verified that I can connect and issue commands to the same server using PUTTY, or the Linux SSH client.\nSFTP seems to work though.\nFrom: manojampalam [mailto:notifications@github.com]\nSent: Wednesday, November 11, 2015 3:44 PM\nTo: PowerShell/Win32-OpenSSH\nCc: Trevor Michealson - US\nSubject: Re: [Win32-OpenSSH] Unable to issue commands after connecting to a server running Tectia 6.3.6 (#21)\nTry out the latest release.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/21#issuecomment-155904411.\n. ",
    "mikepruett3": "Same issue. If I rename the config file, it works. Support for config files would be appreciated.\n. ",
    "scottdware": "If you rename it to ssh_config and place it under C:\\Users then it will work, I've found.\n. For the sshd_config file I have that in the root directory with all the rest of the binaries (i.e. C:\\OpenSSH for me).\n. ",
    "cydhaselton": "Is that true for the sshd_config file as well?\n. I'm using the latest build and don't have tab completion in cmd or powershell, FYI.\nAlso, using different SSH clients result in widely different results with display and output.\n. Good to know.\nFor right now I'll focus on ConnectBot display/output results...it's the easiest to use with SSHD so far.\n. Closing...forgot to generate host keys as per instructions in wiki\n. ",
    "pei-lun": "Since C:\\Users\\<username>\\ssh_config works, I'm closing this issue. Thanks for help!\n. ",
    "kpaleniu": "I would not consider this issue resolved, even if there is a workaround. In my opinion, the correct fix for this would be to either\n- fix reading the user-defined config file from standard location, i.e. ~/.ssh/config, or\n- introduce a more Windows-ish pattern, for example storing the configuration in appdata.\n. ",
    "skullkiller": "tab completion also doesn't work properly in powershell. The command get tab completed, but we can't see it in the screen)\n. Using both sshd and ssh in windows and then starting powershell and using clear also doesn't work.\nSince using BufferCells also doesn't work (tried with other clients as well), it's probably related.\nUsing 2015/11/09 release.\n. ",
    "yuribank": "I noticed the same thing. It seems the client is intercepting SIGINT in a way that it should not.\n. ",
    "diogocp": "Duplicate of #20.\n. @manojampalam \n\nOtherwise we are trying to understand if there are any specific requirements mandating Powershell by default\n\nGit server does not work properly if cmd is the default (#752).. See #752. You can solve the single quotes problem by changing the receivepack command, but even after that Git still doesn't work properly.. To work around this issue, you can run the following commands in your local repository:\ngit config --local remote.origin.receivepack \"powershell git receive-pack\"\ngit config --local remote.origin.uploadpack \"powershell git upload-pack\"\nReplace origin with the name of the Windows-hosted remote.\nAfter this you should be able to pull and push normally (works for me, anyway).\nMake sure you don't select \"Use Git from Git Bash only\" when installing Git on the Windows server, otherwise Git won't be in the PowerShell path.. After further testing, I still get an error (early EOF) when pushing binary files. This is with v0.0.17.0.. Try git clone username@domain@hostmachine:D:/testgit/myrepo.git.\nYou will probably continue to get the \"does not appear to be a git repository\" error after that, because of the way that cmd.exe handles single quotes (notice that there are two sets of single quotes around ''/D:/testgit/myrepo.git'' in the error message). That is the first problem that @razrjk identified.\nIf you want to try my workaround, you can do it this way:\nsh\ngit init myrepo\ncd myrepo\ngit remote add origin username@domain@hostmachine:D:/testgit/myrepo.git\ngit config --local remote.origin.uploadpack \"powershell git upload-pack\"\ngit fetch origin. @bingbing8 I would set it in ~/.ssh/config. Another alternative would be to set the environment variable GIT_SSH_COMMAND=\"ssh -p 47003\". I didn't test that, but it should work.. Yes, I tried on 0.0.20.0. However, this does not happen with all binary files.\n@razrjk seems to think it is related to the size of the data (\"cmd.exe does not work for large streamed data. The pipe breaks under heavy traffic load.\"). I have some doubts about this theory because:\n\nI have seen it succeed when pushing tens of megabytes and fail on pushes of less than 1 MB.\nWhen it fails, it seems to fail consistently, no matter how many times you retry. It also doesn't seem to be affected by network speeds.\n\nYou should be able to consistently reproduce it this way (at least I can):\nsh\ngit clone https://github.com/PowerShell/Win32-OpenSSH.git\ngit init newrepo\ncd Win32-OpenSSH\ngit remote add newrepo localhost:path/to/newrepo\ngit config --local remote.newrepo.receivepack \"powershell git receive-pack\"\ngit push newrepo. Here is a simpler alternative. Try pushing this 28K file: https://repo.gradle.org/gradle/libs-releases-local/org/gradle/gradle-wrapper/4.1/gradle-wrapper-4.1.jar. After doing some more testing, it looks like the failures are not consistent after all. The file that I meantioned above (gradle-wrapper-4.1.jar) failed every time, but after trimming it to around 4100-4200 bytes it starts failing randomly. Less than that and it always succeeds. It's really weird. The transfer seems to always complete in any case, the error is during the unpacking.\n@razrjk this happens even when pushing to a remote on localhost. Also, do you have any idea why Git behaves like this while scp works perfectly?. I didn't patch anything, I just installed it using chocolatey.. @bingbing8 yes, that's what I did.. That's interesting. I've tried it dozens of times, creating new repositories (local and remote) each time, and it always fails. I've also tried this on two different machines, one running Windows Server 2008 R2 and the other Windows 10.\nI'll see if I can reproduce it in a VM later.. > **When I put remote without slash in the start\nas recommended git remote set-url --add--push origin ssh://bruno.costa@b2t.corp@R2D2:C:/web/multiprodutos/repo/homol.git I can't even log in\nThere is no ssh:// in the instructions.. @bingbing8 yes, same error with 0.0.21.0.. @larry191994 you cannot use git clone directly. You have to follow those instructions every time you want to fetch the repository.. Use the HostKeyAlgorithms option on the client.\nhttps://superuser.com/a/1142569/260305. It looks like the same thing happens if you set PowerShell as the default shell in the registry, so it's not just a problem with cmd.exe.. I'm seeing some weird behavior when using environment variables in DefaultShell.\nIf DefaultShell is not set, I get the cmd shell as expected.\nIf I set it to C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe, I get powershell, again as expected.\nHowever, if I set it to %SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe, I get a powershell when I login interactively, but if instead I pass a command to be executed to ssh (e.g. ssh localhost rm test.txt) nothing happens. It returns with exit code 0 but nothing is executed on the server.. @DarwinJS, I haven't looked into this recently, but the behavior I observed was that the variable was read, but only on interactive logins:\n\nif I set it to %SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe, I get a powershell when I login interactively. \n",
    "drewbug": "When will DSS keys be supported?\n. ",
    "arif-pragmasys": "The build instruction has been changed lately, since we are trying to keep the same source base compatible both in win32 and Linux. Please run \n./win32_build\nafter syncing the latest. That should take care of everything. The 32 bit build instruction document has been updated.\nThanks\n. Glad to hear its working for you!\n. @marchrock and @darkblaze69, -P option worked for me in the latest build. Can you please check if you can reproduce it?\n. aes*-cbc ciphers are on in ssh.exe, but not in sshd.exe(the server) by default. You can turn them on by adding the following line in your sshd_config file:\n\nServer should pick up the new config without a restart.. When no host listening, the current version prints:\nssh: connect to host xxxxx port 22: Unknown error\nIt has the correct error no (107, which is ECONNREFUSED), but unable to get a valid string message for that posix error using strerror(), hence the 'Unknon error' message. Looks like the strerror() api is handling Posix errors upto number 43 correctly, beyond that printing 'Unkown error'\n\n. regarding issue no. 1, can you please share little bit more how are you using the RemoteForward config. Are you setting them in ssh_config?\nissue no. 2 might be related to https://github.com/PowerShell/Win32-OpenSSH/issues/454. WinSCP will work with Win32 OpenSSH server if you choose SFTP(instead of SCP) as protocol in WinSCP.\nWhen used in SCP mode, WinSCP issues 'pwd','ls -al' and other UNIX shell commands behind the scene, which are not supported in windows shell (cmd or powershell). That is why WinSCP in SCP mode won't work with Win32 OpenSSH, please use SFTP mode with WinSCP when connecting to Win32 OpenSSH server. Please update to the latest Win32 OpenSSH which fully supports SFTP.. Hopefully WinSCP will add support for windows shell and directory listing command in future.\n\n. Is this still happening with latest?. ssh.exe is deadlocking at file read in 'fileio_ReadFileEx()'. Looking at the fd table, the index is 4, which is STD_INPUT.\n\ngit clone git@github.com:PowerShell/openssh-portable.git\nThe underlying cmd is \nssh.exe git@github.com \"git-upload-pack 'PowerShell/openssh-portable.git'\"\n. Does your script test.bat have only 1 line in it? try putting cmd.exe at the last line of the script.\nExplanations: \nLooking more into the documentation, the default behavior of ForceCommand is to execute the script given as argument, then close the session. Tested it in Linux open-ssh. So if you want to let the user continue after the script is executed, a shell has to be launched in the script file itself, with something like this:\n$SHELL -l\nPeople use this feature to add additional layers of security where the script will verify some info before giving the user a shell. Please see here for more detail: http://dant.net.ru/calomel/openssh.html\nOn windows, I used cmd.exe in the script and it gave me a shell after executing the script content. Here is my sample script:\nmkdir C:\\testfolder\ncmd.exe. Is this still happening with latest? . A potential fix of this issue is checked in: \nhttps://github.com/arif-pragmasys/openssh-portable/commit/53c6943f16c0e0c35b352332cd912c8b7ac237ea. Similar to https://github.com/PowerShell/Win32-OpenSSH/issues/389. \nLooks like if I do not mention any protocol, git is picking up ssh and cloning works fine.\n\nBut if ssh is mentioned as protocol it does not work. I tired it on Linux using openssh. So it might be issue related with git command itself. \n\nThe git documentation says ssh is supported though. \n\n. Since win32 openssh is not compiled/linked with nistP521 feature, current build does not support 521 bit ecdsa keys. The error message has been modified based on whether nistP521 is supported.. Just tried latest ssh Server both on Win10 and Win 2012 server R2 and connected using putty client. RSA key login worked for me. The following instructions to convert openssh key (generated with ssh-keygen) to ppk worked for me.\nhttps://kb.site5.com/shell-access-ssh/how-to-convert-ssh-keys-to-ppk-format/ . WInSCP also seemed to work with the same PPK file against Win32 OpenSSH server.. When we execute a command like following:\nssh -v -T test1@server \"cmd /c exit 2\"\non the server side , the following is executed\n......\\ssh-shellhost.exe -nopty cmd /c exit 2\nsshd server is returning the exit code of  'ssh-shellhost.exe' which always happens to be 0. \nWe should look into ssh-shellhost.exe so that is propagates the correct exit code of the executed command.. @TyrionLanister, it is possible that you might have 2 account by the name 'user', one is local and another is domain account. When you try 'ssh localhost' then the current logged in user is picked up, which is 'DESKTOP-IQQAVUN/user'. But when you try 'ssh user@localhost', you are forcing to ssh to use the local version of the 'user' account. The way current code resolves name is if domain is not mentioned it looks into the local user list.\nThe way we currently resolving domain user name is having some issue. We use win32 api NetUserGetInfo() to get the sid of the user. But currently this is returning ERROR_ACCESS_DENIED. There could be several reason for that:\n1. The name server is not setup properly.\n2. We are not using the api properly.\n3. 'NT SERVICE\\sshd', the user which the sshd service runs as does not have the necessary privileges to call NetUserGetInfo() api.\nWe are looking into it.. For local users, login with password and see what home directory you land on. Make sure you put the .ssh directory and related key files in that directory. Please give this a try if you have not already.  . Named pipes have to be handled differently(not like regular socket) in the win32compat socket-io layer.\n. Tried similar command in 3 machine scenario, where forwarding is initiated from M2 to facilitate M1(has user u1) connecting to M3(has user u3).\nM2 excutes: ssh -R 9001:M3:22 u1@M1\nM1 Excutes: ssh -p 9001 u3@localhost\nGetting simliar error.\n\n. ",
    "dajrob": "I can confirm my builds are working again since incorporating the new ./win32_build command. I will close this issue. Thank you for your response, and for all your hard work on this project.\n. ",
    "HLFH": "@quamrulmina Thanks!\n. \n@quamrulmina @manojampalam Could you support UTF-8? I believe it's related to UTF-8 support.\n. No real UTF-8 support apparently and it does not seem that you support the last ciphers. I can't fully try the last version because I improved too much the SSH security and it only works with openssh client provided by Cygwin...and directly by GNU/Linux.\n. ",
    "war59312": "SHA-1 is being deprecated, so why at all?\nSee: http://aka.ms/sha1\nI know that is different. Just saying. If deprecating that much, then it should be deprecated everywhere. \nYou can NOT and should NOT continue to support old insecure methods.\nOr if you do, perhaps have it disabled by default and make user Compile it in.\n. +1 For Chocholatey\n. ",
    "elijahgagne": "Two years later, it looks like this is still a problem:\n```\nC:\\Users\\egagn> ssh.exe user@server\nUnable to negotiate with 10.0.0.10 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\nC:\\Users\\egagn> ssh.exe -oKexAlgorithms=+diffie-hellman-group1-sha1 user@server\nUnsupported KEX algorithm \"diffie-hellman-group1-sha1\"\n```. @bagajjal Thanks. I tried the GitHub version and it does indeed work for me.. Thanks for all that! If there's a way I can get notified when the conhost bug gets fixed, I'd love to sign up for that. But I understand if that's not possible.. @bagajjal would you consider re-opening this until the bug is fixed?. ",
    "bagajjal": "@elijahgagne - I guess you are using windows inbox version of openssh (not from GitHub).\nfyi, the initial version of windows inbox openssh doesn't have support for all crypto algorithms that comes from libressl. You are always welcome to try the GitHub binaries that has the full support.\nplease go over our public posting https://blogs.msdn.microsoft.com/powershell/?p=13846&preview=true. @jyhong836 - Try troubleshooting steps. I would recommend installing OpenSSH under c:\\program files.\nIf you couldn't resolve your problem then please open a new issue, provide sshd log (with DEBUG3 enabled).. These are fixed in the latest release.\nPlease go through below URL if you have any questions.\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH\nFor any other issues, please raise a new issue.. We couldn't find a perfect solution. \nHere is our current proposal,\n1) Read the default SSH shell from an user environment variable that has the full path (ex - C:\\Windows\\System32\\cmd.exe)\n2) Check if the default SSH shell is trusted,\n   a) If the executable is from system32 path (ex - C:\\Windows\\System32)\n          (or)\n   b) If the executable is published from a trusted source (ex - Microsoft).\n3) If step 2 succeeds then launch the default SSH shell.\n    If step 2 fails then launch the cmd.exe\nIssue with this proposal,\nIf a user has unpublished powershell.exe, step-2 will fail and we end up launching cmd.exe..\nWe would like to hear from the community, alternative proposals or any suggestions... @Rondom  - Using COMPSPEC variable is not ideal solution. \nThere can be a situation where the default shell has to be PowerShell for ssh sessions but other applications still needs the default shell as cmd.exe..\nAs mentioned earlier one of our proposals is to use a new environment variable instead of COMPSPEC.\nAlso we need to add few security checks when we start using environment variables as any malware can modify the environment variable thus causing a security threat.. @rivy - It depends on the client operating system you are using.\nIf the client operating system is windows 10+ then the whole cmd.exe screen will not get cleared.. otherwise  the whoel cmd.exe screen will get cleared..\nThis is the basic limitation that we have..\nPlease confirm what is your client operating system.. Incase if you are not using windows 10+ OS then you can use (ssh.exe user@ip -T). The cursor will be moved to the top of the visible screen.. The content will not get cleared so you will still have the whole screen buffer prior to issuing ssh.. Is this a problem? if yes, why?. Regarding \"-T\", the screen doesn't get cleared..\nHere is the snapshot\n\n. Windows OS doesn't provide the pseudo terminal support so we have implemented this using win32 APIs. SSH Server will always send the (x,y) coordinates to SSH clients.\nSSH server doesn't know about the clients (x,y) coordinates as the SSH standard doesn't have this.\nSSH server sends the data starting from (0,0) coordinates to client so the SSH client will start writing the data from the top right corner of the visible screen. SSH server sends the clearscreen first before sending any data to the client so that the SSH client moves its cursor to top right corner.\nIf the SSH server doesn't send the clearscreen in the beginning then things go wrong like previous data gets lost and the previous data will still be shown.. @rivy - SSH Client moves the cursor to top of the visible window as the clearscreen in windows clears the content of the visible window. This is a bug with the windows 10 console team so to mitigate this we are moving the cursor to top of the visible window. This can be fixed in a hacky way.. We will fix this for the July-Mid release.This will solve the clear screen problem when you connect from the windows SSH client to UNIX SSH Server. \nFYI, as I mentioned earlier the windows SSH server need to send the clearscreen which is unavoidable.\nWhen you are executing ssh commands (eg, ssh user@IP -C \"ls -al\"), they will be executed and the output will be returned to the client so there is no pseudo terminal that gets allocated at the server side. This is the reason you don't see a clear screen issue for this scenario.\nWith the \"-T\" option (ssh.exe user@ip -T), windows client to unix server is hanging. The behavior is same when I used putty. You can try running this command from cmd.exe (\"C:\\Program Files (x86)\\PuTTY\\putty.exe\" -ssh user@ip -T). \n\"-T\" options works fine with the windows SSH server.. @rivy - I have created separate issues (#807, #806, #805). If you have more issues then please open a new issue. Hopefully these will be fixed for July-Mid release (7/15).. @rivy - FYI, I have fixed the reported issues (#807, #806, #805). Please check them in July-Mid release (v0.0.18.0) that will be released tomorrow.\n. Please check the latest version 0.0.7.0. It seems to be working... Please reopen if you have any issues... sshd.log will be @ %programdata%\\ssh\\logs. starting from v7.6.1.0, ETW (instead of filebased logging) is the default logging. see this. @rkitover - If you are using v1.0.0.0 and above then you need to restart sshd service after making changes to sshd_config. \nIf it didn't help, enable DEBUG3 on sshd service and ssh -vvv user@ip.\nAlso make sure all the executables (at server side) have read permissions  to \"authenticated users\". If you have windows 10 and enabled developer mode then you will have these services (SshBroker, SshdBroker, SshProxy) enabled by default. You need to stop these services and just have sshd service running.\nFrom powershell window run these command,\n      Get-Service [Insert-star-keyword]ssh[Insert-star-keyword] -> Git makes next word after star key as italic\n      Get-Process -Name [Insert-star-keyword]ssh[Insert-star-keyword]. please share sshd.log(With DEBUG3 enabled) and ssh.log (ssh.exe -vvv user@ip). @rkitover - Looks like you are using openssh that comes with windows 10 optional features.\nThis supports only ed5519. It doesn't support rsa, dsa, ecdsa.\nIf you need full crypto support then \n1) Your our GitHub release binaries https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH.\n2) Wait for the next windows update.\nIf you are fine with ed25519 then here is the work around,\nYou should add oKexAlgorithms, oHostKeyAlgorithms to your JUICE SSH client.\nIt should look like this,\n.\\ssh.exe -oKexAlgorithms=curve25519-sha256 -oHostKeyAlgorithms=ssh-ed25519 nonadmin1@localhost\nAnalaysis\nAs part of KEXINIT, both ssh client and sshd server will negotiate on the crypto algorithms.\nIf there is no common algorithm then the connection will be closed immediately.\nSSHD Server proposal,\n1872 02:34:01:017 debug2: local server KEXINIT proposal\n1872 02:34:01:018 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org\n1872 02:34:01:018 debug2: host key algorithms: ssh-ed25519\nSSH.exe client proposal,\n1872 02:34:01:018 debug2: peer client KEXINIT proposal\n1872 02:34:01:018 debug2: KEX algorithms: ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1\n1872 02:34:01:018 debug2: host key algorithms: ssh-rsa,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521\nSSHD error log,\n1872 02:34:01:018 debug1: kex: algorithm: (no match)\n1872 02:34:01:018 Unable to negotiate with 192.168.1.180 port 40695: no matching key exchange method found. Their offer: ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1\n1872 02:34:01:018 debug1: do_cleanup\n. I was able to transfer 7 GB file using SFTP.. please check scp and close it.. removed the SFTP tag as it is working fine.. Verified this on the latest build and it seems to work fine.. \nPlease reopen if you still have issues..\nE:\\test>del c:\\Users\\test_user.ssh\\id_rsa*\nE:\\test>.\\ssh-keygen.exe -t rsa\nGenerating public/private rsa key pair.\nEnter file in which to save the key (c:\\Users\\test_user/.ssh/id_rsa):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in c:\\Users\\test_user/.ssh/id_rsa.\nYour public key has been saved in c:\\Users\\test_user/.ssh/id_rsa.pub.\nThe key fingerprint is:\nSHA256:dCmftA5xBsPKhX34/KmAr2Hbb4e+dsHEa5OO17LLsU0 test_user@REDMOND@testuser-d\nThe key's randomart image is:\n+---[RSA 2048]----+\n|       +o.       |\n|      . =o..     |\n|     . o++.     |\n|      o. Oooo    |\n|       .S ++ +   |\n|      . .o  X    |\n|      o. ...+E  |\n|     . +. .=.  |\n|      o..=+==+.  |\n+----[SHA256]-----+\nE:\\test>dir c:\\Users\\test_user.ssh\\id_rsa*\n Volume in drive C is Windows\n Volume Serial Number is 9C8B-C608\nDirectory of c:\\Users\\test_user.ssh\n07/07/2017  04:05 PM             1,679 id_rsa\n07/07/2017  04:05 PM               406 id_rsa.pub\n               2 File(s)          2,085 bytes\n               0 Dir(s)  223,633,211,392 bytes free\nE:\\test>\n. Verified in the recent release, not seeing this issue.\nBut when there are no read permissions to open a file then we are showing file not found instead of access denied. Fixed this issue.. This is because the powershell ise is redirecting the stdout.\nssh.exe should control the output window as it has to interpret and render the VT100 sequences sent by the SSH server.\nFor more information please go through this, https://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH\nIf you still need to launch the ssh from the powershell ise then please use third party tools like putty, Cygwin, etc as ssh clients.. @Diaskhan -\nPlease share you sshd_config, sshd.log (With Debug3 enabled) and sftp logs (sftp -vvv user@ip). This is working fine and there are no exceptions now.. Please test with the latest release. \nFor more information go through https://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH\nIf you still have issues, then please raise a new issue. duplicate of #692 . @gpomykala - If you run sshd as service then this is automatically taken care... You don't need to provide \"Replace process level token\" to any other account.. Please check the latest release.\nI have validated with Bitvise SFTP client and it is showing soft links.. @jashuang99 - You are using very old version (0.0.5.0). Lot has changed. Upgrade to latest release https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH. The latest release is v1.0.0.0.\nWe have listed the required steps here,\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\nAlso have a look at the release notes,\nhttps://github.com/PowerShell/Win32-OpenSSH/releases/tag/v1.0.0.0\nAfter all these, if you still fail to start the sshd.exe then run \".\\sshd.exe -ddd\" from an elevated cmd.exe.\n. IS this supported in the openssh unix flavor? If yes then please let us know the steps.\nIf not then we are not supporting this requirement.\nPlease reopen with required information.. Please refer to this.\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/800\nWSL bash can't be launched from ssh, \nhttps://github.com/PowerShell/Win32-OpenSSH/issues/289. @DarwinJS - ssh client will send the TERM to the sshd server as part of session establishment.\nNot sure why sshd is linked with the TERM setting here.\n. Could you please explain machine context, process context and how they are related to the ssh, sshd processes.\nAs you might already know, ssh runs as the user process and sshd runs as the NT Service low privileged process.\n\n. I have made a code change to set the TERM to \"xterm\" if the TERM environment variable is not set in the SSH client machine. This change is available in the july-mid release (V0.0.18.0).\n. auto complete functionality is provided by the terminals (like cygwin) and not by the sftp.\nsftp protocol doesn't deal with auto complete. please use terminals that support the auto complete (like cygwin).. sftp protocol doesn't take commands as arguments. this is the same behavior on linux and windows version of openssh code.. @aronlmin - Try our troubleshooting steps. \nAfter psexec as system, run \".\\sshd.exe -ddd\". @Drugoy - Please try the latest version. . Follow this https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH. @theJT - @bdr2 is seeing this only with ipv6.. \nIs your setup using ipv6? Does it work fine with ipv4?. @bdr2 - Can you try with the latest version (0.0.14.0).. It works for me with (AddressFamily inet and AddressFamily any)..\n@theJT - I tried on my local machine with the tightvnc... both the local port forwarding, remote port forwarding works well and I can do the vnc as well...\nTo debug further I need more information,\n1) I think you are using the remote port forwarding?\n2) Please provide the sshd.log (whole log), ssh log file (ssh.exe -E log_file) for the failure scenario..\n3) Can you try the remote port forwarding scenario by running sshd in the SYSTEM context and let us know if it works.. If it works then you can use it as workaround option..\n    C:\\WINDOWS\\system32>net stop sshd\n    C:\\WINDOWS\\system32>sc.exe config sshd obj=localsystem\n    [SC] ChangeServiceConfig SUCCESS\n    C:\\WINDOWS\\system32>net start sshd\nYou can revert this back using \n    C:\\WINDOWS\\system32>net stop sshd\n    C:\\WINDOWS\\system32>sc.exe config sshd obj=\"nt service\\sshd\"\n    [SC] ChangeServiceConfig SUCCESS\n    C:\\WINDOWS\\system32>net start sshd\n4) can you try remote port forwarding on the same machine to see if it works or not... Please reopen if required.. bash.exe is not allowed for the network logons.. Its the limitation from the bash.exe..\n. This is fixed if you are using the windows 10.\nFor more information please go through https://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH. @ddwolf - please share the sshd.log with DEBUG3 enabled. \nIf you are using a domain account then login like this, ssh user@domain@host.\nFor more information,\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples. In the latest release, IPV6 and allow users are working fine..\n. Its fixed, please check the latest release..\nHere is the sshd.log message,\n36464 17:46:20:474 Connection from 2001:4898:e0:69:c567:fecb:2093:798f port 62742 on 2001:4898:e0:69:95ce:cc02:bbad:38bd port 22. Thanks for reporting this issue. We have identified the root cause. It will be fixed in the next release. Fixed in milestone release. Thanks for opening an issue. This is a known issue. We will plan and fix this is coming releases.. Please try with the recent release (0.0.9.0).. I think this should be fixed... is it working on 0.0.9.0 version?\nThanks for the suggestion, we will add a way to find the version.. This is fixed for the windows 10 users (by using windows 10 conhost support).\nplease go through the wiki for more information,\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH\n. Issue 2&3 are fixed. for the issue 1 & 5, I have raised a new bug #468. Thanks for opening an issue. We have identified this issue. It will be fixed in next release.. This is fixed in the latest release. For more information please go through https://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH\n. Please test with the latest release.\nFor more information go through https://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH\n. Is your ssh client running on windows 10 OS? If not then the console is not good for vim...\nIf you are using windows 10 OS then set the TERM to xterm before doing ssh.. @alexchandel - Are you trying the same scenario (Mac ssh client -> Windows ssh server)?. Please check in the latest release.. this should be fixed, if not please reopen... Please test with the latest release.\nFor more information go through https://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH\nIf you still have issues, please open a new issue.. windows 10 console provides the capability to decode the xterm sequences. so we pass the raw buffer received from the ssh server to the windows console directly.\nFor more information go through https://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH. Please explain what do you mean by \"Far Manager Nothing works?\". Sorry for the long wait to fix this issue. It will be fixed as part of the next windows release.\nFYI, We are leveraging the work from console team so have to wait for the next windows release.. Please try the new windows 10 fall update (https://support.microsoft.com/en-us/help/4464619). fyi, Just realized the windows 10 fall update is paused because of some known issues.\nPlease note that bunch of console rendering issues were resolved in the latest windows 10 fall updates.. Verified uploading huge file of 7 GB and it worked fine. If the issue mentioned is different then please provide the step by step procedure so that we can reproduce and fix it.. We still don't have the time frame  for the production ready code.\nWe shipped openssh as feature on demand in Windows 10 fall creators update.\nWe will update the status in #688.. issue is identified.. for time being use \"Ctrl + H\" for backspace... In windows if the file is opened we can't change the timestamp. In case of SFTP, existing unix code tries to change the timestamp while the file is opened so it is unable to change the timestamp. since its minor issue and we don't want to deviate (by adding windows specific blocks) from the unix code, this issue is closed with no fix/workaround.\nFYI, incase of SCP it works because there the timestamp is modified after file is closed.\n. Thanks for reporting the bug. The issue is fixed and will be available in the January-Mid milestone.. ssh -i rsa_key user01@192.168.2.1 dir -> This will output to your console..\nWhen you add this to crontab, where will the output be written?\nTry redirecting the output of ssh to a file and check the content of that file, if you plan to have it in the crontab.\nPlease let us know if this solves your problem.. This is fixed by now, please test in the recent release (0.0.16.0)..\nReopen if you have any issues.. are you running in administrator mode?. Hi AbhijitNagaraj, Can you please try and let us know if it works.. if not the share your configuration details like sshd_config, server configuration. Can this be closed?. @GoateePFE - step2 is not required? sshd requires write permissions to only logs folder under C:\\Program Files\\OpenSSH folder.. No.. Pid file is used to store the process id, it is useful in automation to kill the spawned sshd process . Please test with the latest release.\n. Thank you. . Couldn't understand your problem.. please provide details.. if possible screenshot along with configuration details (server, client).. @rkeithhill - Try this in a powershell window,\n1) Set the ENV variables\n$env:DISPLAY = 1\n$env:SSH_ASKPASS=\"$($env:ComSpec) /c echo user_password\"\n2) Now do SSH. It shouldn't ask password.\nssh user@ip. After login to the Ubuntu from windows cmd/powershell, \n1) issue \"bash\" so that you will get into the bash shell..\n2) Then do the vim \nHere is the snapshot of vim working (logged from windows cmd.exe to Linux server)..\n\nopenssh right now supports only ANSI/VT100 terminal control escape sequences...\nIf it didn't work then issue \n\"echo $TERM\" -> it should xterm.\nalso attach the screenshot.. There are some problems while connecting from windows openssh client to unix ssh servers, we are trying to fix them.. Please checkout the march mid release.\nI have captured the terminal related information here \"https://github.com/PowerShell/Win32-OpenSSH/wiki/Terminal-Info\". Please set the TERM to xterm before doing the ssh (step 4)...\nFYI,  wiki link is moved to https://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH.. 1) I'm unable to download the SSH.NET (any version) through package manager console,\n\n2) Since its working with other SFTP clients like WinSCP and FileZilla, its possible that the issue is with SSH.NET as well. I can't comment unless I reproduce it. Please help us in reproducing the problem.. Thanks for attaching the sample project.\nThe bug is with the Renci SSH.NET library. \nIts appending the current working directory to the path passed based on the assumption that the full path always starts with the \"/\". In windows the paths doesn't start with \"/\" so their code is appending the current working directory to the path passed. This is working earlier because of a bug in our code which is now fixed.\nYou can verify the path received at the server side by enabling the sftp verbose logs.\n\n\n\nI am closing this bug. You can file a bug against the  Renci SSH.NET team.\n. \n\nsftp server logs (enable verbose logs)..\n\n. We are not diverging from the OpenSSH main line. We adhere to the SSH protocol that's the reason the other SSH clients like winscp and FileZilla are working.. \nThere are changes required when we move from unix world to windows world because of the file systems are different (file paths representation), etc.. openssh windows server sends the correct message (file not found).. If you try it from the openssh windows client.. it will also show you the path that is sent to the server like this\n\nIn the  Renci SSH.NET library based on the response status code, they are throwing the custom exception that doesn't show the proper error message..\n\n. can you please share the verbose logs at client side and debug3 of sshd.log (this can be set in the ssh_config). Ok.. I am marking it as issue-discussion till we get the issue reproduced.. The clientAlive configuration makes the connection to disconnect if there is no data exchanged with in 3 min (3 * 60 sec)..\nClientAliveInterval 60\nClientAliveCountMax 3\n. As mentioned earlier, its hard to guess what is happening without reproducing the problem because the logs doesn't provide much information...\nSince you are trying use multiple SSH clients.. to nail down the problem please use only the openssh SSH client (latest 0.0.9.0) and openssh SSH server... so no third party SSH clients/servers.. \nIf the error is seen in this setup then it is openssh SSH client/server issue.. \nIf not then next time use only one of the third party SSH client (WinSCP / Maverick Legacy)...\nThis will clarify that the issue is with the openssh client/software code.. \nIf we get to know that the issue is because of the third party software (WINSCP / Maverick Legacy) then you can followup with them...\n. Can this be closed? Might be related to configuration issue mentioned in #536.. @nightwish47 : As mentioned earlier, we need your help in reproducing the problem. @manojampalam  has already provided the steps.\nSince you have multiple SSH clients (WinSCP / Maverick Legacy / OpenSSH client), I would recommend you to try only using the openSSH (remove other third party SSH clients). This will atleast give us clear picture which ssh client is giving this issue. If it is not releated to openSSH client then you need to followup with the respective ssh client owners.\nRegarding your question,\n We us V1.0.2 OpenSSL libs. There is a open issue (https://github.com/openssh/openssh-portable/pull/48) on the openSSH community to upgrade to the latest version of the OpenSSL library (V 1.1.0e).\nThis issue shouldn't be related to the version of the openssl as the openssh (Linux version) is using the same version of the openssl from many years. As you might already know openssh (Linux version) is very popular and > 80% of the people across the world uses it.. @nightwish47 Its not an error/issue but rather up gradation to the new version of the openssl library.\nWe are porting the openssh unix code to windows operating system.\nThe issue (openssh/openssh-portable#48) is with the unix openssh code but not with us.\nBTW, did you make any progress by using single openssh client? Is the issue still reproducible?. I am not sure whether we have any issue with the openssh client /server because no one has reported this kind of issue.\nMy guess is this issue is either related to your config (or) third party ssh clients like WINSCP / Maverick Legacy.\nIf you use only openssh client and openssh server and if you are able to reproduce then it is our (openssh team) issue. . There are no specific big changes from our side (Windows porting team)... I am not sure about the big changes from the openssh unix community... @nightwish47 - Are you running into this issue again when you are using only the openssh client? If not, can this be closed?\n. If the issue still persist then please provide the steps for repro.. Thanks for reporting.. This will be fixed in Feb-Mid release (Feb-15th).. @friism - arrow keys and ctrl+c are working without fail.. \nI verified these setups,\n1) windows openssh client to windows openssh server\n2) windows openssh client to Ubuntu server\n3) from putty to windows openssh server..\nI am using windows 10 OS (from cmd.exe and also powershell) and Ubuntu 16.10.\nIf they didn't work for you then specify the operating system version and client/server software used and open a new issue.. Please use the latest release binaries..\n. @friism , are you referring to the left over characters when you press up/down arrows because the new command is smaller than the old command? If yes, this is a known issue which we are trying to fix.. You can raise a new issue for this.. @friism  its the issue with the MinGW SSH client.. Its unable to interpret correctly..\nPlease use the openssh client and report if you have any issues...\nAlso please open a new issue since this thread is closed... Please retest manually and provide the logs for the sshd.log and ssh client... Are you still facing this issue? Is it reproducible manually?\nPlease provide the steps to reproduce and the logs (sshd.log and ssh client logs)\n. can we close this issue?. If the issue still persist then please provide the steps for repro.. Fixed in the june mid release (0.0.16.0, yet to be released).. I have gone through the attached sshd.log file..\nAs you can see in the below screenshot the server is getting SIGCHLD signal (i.e., the client has terminated the connection)...\n\nThe below configuration handles the network failures where the server sends a alive_request to client for every 60 secs and client replies.. If the server didn't get the response from the client for max retries (3 i.e., 3 * 60 sec = 3 min) then the server will close the connection.. \n                    ClientAliveInterval 60\n                   ClientAliveCountMax 3\nError message in sshd.log if there is a network failures i.e., connection between server and client is lost and there is no traffic...\n\nso its clear that there is no network issue from the sshd.log file and the client is initiating the connection close.. \nPlease check your scripts to make sure the client is not closing the connection.. \nAlso please try manually, if you were able to reproduce then please share your sshd_config, sshd.log and steps to reproduce..... Can this be closed? Might be related to #536?. @nightwish47 - Are you running into this issue again when you are using only the openssh client? If not, can this be closed?. Problem 1 described above is not a bug.. it is an expected behavior... when you restart the sshd service then the existing connections will still be left alive.. \nFor problem2, it is a bug in our code.. We will try to fix this in the feb-end milestone.. As a workaround, don't stop the ssh-agent service... But as mentioned earlier even if you restart the sshd, the existing connections will still continue..\nThat's the base SSH behavior... The issue is related to port mismatch which is added to prevent malware executable (that has same name as ssh-agent)... @mrPsycho  use \"cd d:\\\". If you are using third party software then you need to browse to the corresponding drive..\n\nAs of now \"/\" ( root ) only shows the C drive.. There is already a fix, which will be pushed in the next release... This error occurs when the sshd process is unable to retrieve the user information...\nI will test at my end and update this thread.. . Are you trying to run it as a cron job? Is your issue same as  #484?\nHave the \"LogLevel DEBUG3\" in sshd_config.\nPlease share the sshd.log file in the \"logs\" folder. If there is no logs folder in the same directory where the sshd.exe is present then please create \"logs\" folder and an empty sshd.log file inside the \"logs\" folder.. dup of #561 .. check the may-end release for the fix..\nplease reopen if required.. @mirathewhite - download the whole folder ( https://github.com/PowerShell/Win32-OpenSSH/tree/L1-Prod/contrib/win32/openssh/OpenSSLSDK) to your repository($openssh-portable\\contrib\\win32\\openssh\\OpenSSLSDK)... You have cloned a wrong branch.. We no longer maintain this repository.. you should use \"https://github.com/openssh/openssh-portable\" repository.\nwe already taken care of issues related to windows paths c:/..... My bad.. it is \"https://github.com/PowerShell/openssh-portable\"..\n. Please test with the latest release.\n. check the may-end release. I just got a fresh clone of repo and it works for me..\nIf you are using a old clone.. then do a \"git pull\" and delete the \"$openssh-portable\\contrib\\win32\\win32compat\\inc\\crtheaders.h\", clean the solution and build it..\nSteps to get a fresh clone..\n1) Get the fresh clone of repo.\ngit clone --recursive https://github.com/PowerShell/openssh-portable\n2) Download the openssl library from \"https://github.com/PowerShell/Win32-OpenSSH/tree/L1-Prod/contrib/win32/openssh/OpenSSLSDK\" to $\\openssh-portable\\contrib\\win32\\openssh \n3) open \"$openssh-portable\\contrib\\win32\\openssh\\Win32-OpenSSH.sln\" in visual studio in admin mode..\n4) Now do a build.... You should use VS2015... error code 5 means the \"Access denied\".\nI think the issue is not because of this particular error message because this happens only during the session setup.\nPlease enable the log level to DEBUG3 and share the sshd.log file.. Does it also happen when there are no SSH client connections?. Anyone facing this issue?\nYes its the right place (c:\\Program Files\\OpenSSH-Win64\\Logs\\sshd.log).\nNot sure what's going wrong because we are not seeing it.\nCan you try to install the same version on different machine and see if it still happens?\nIf yes then please check installing V0.0.9.0, this gives us some information whether it is specific to the latest release or not.\n. Cygwin, putty are different SSH clients. OpenSSH windows version has both SSH Client and server functionality. You don't need to install Cygwin/putty for this. You can use cmd.exe/powershell to connect to the SSH server. OpenSSH is not yet part of the windows to end users, the work is still in progress. \nInstall the latest version from here, https://github.com/PowerShell/Win32-OpenSSH/releases.. Openssh we are developing is the Microsoft contribution to the openssh community to bring the openssh into the windows inbox.\nCygwin is from different company, not from Microsoft. \nopenssh is a open source implementation of ssh. You can fork and customize to your needs.. Not sure what's the problem at your end, it worked for me...\n\n. Because of this issue, the powershell Ctrl+R command shows the \"bck-i-search\" in the same line..\n\nWhen sshd is started in the debug mode (sshd.exe -d), the ctrl+R issue is not seen... This behavior confirms it is related to terminal size set in the ssh-shellhost on the server side.\n. @marcosnils - launching sshd in debug will not work as service.. sshd in debug mode, will not create new sshd child and it will terminate as soon as session ends..\nYou have the correct functionality but the UI is bad (bck-i-search) comes in the same line which is not good... #881  is related to this bug. @nkrepo - For interactive ssh session, ssh-shellhost.exe will spawn the background cmd.exe and use console hook events to recognize the changes to the background cmd.exe. \nWhen user resizes the ssh.exe (client) window, sshd will receive the window resize event. sshd will inform it to ssh-shellhost.exe. ssh-shellhost.exe will set the console screen size accordingly. This logic is added in v7.7.2.0. But it has 2 issues,\n1) We are updating the console screen buffer, console window (visible window/view port) as well but the console screen buffer must be 9999 (maximum rows possible) irrespective of user setting.\n2) Due to a bug in our console hook event implementation in ssh-shellhost.exe, ssh.exe (client) window is erasing all the contents when ssh.exe (client) is resized.\nWe will dig deep into this legacy code to understand the root cause. This logic (when fixed) should work on all the supported windows OS (starting from win7).. Try changing the sshd_config as mentioned in this issue https://github.com/PowerShell/Win32-OpenSSH/issues/493.\nIf you still have the issue then please share the sshd_config.. Try commenting \"AddressFamily inet\" line and restart the sshd.. . commenting \"AddressFamily inet\" line in sshd_config didn't help?\nAre you still getting the below error, \ndebug1: acceptEx - AcceptEx() ERROR:22, io:00201C70. Looks like your ssh connection is very slow.. Did you get a chance to debug why?\nCan you try with 0.0.9.0 version... is it the same behavior on 0.0.9.0? . while establishing the session, sshd process will try to retrieve the environment information from the windows registry.. are you seeing this in the sshd.log file? \nDoes this block establishing the sessions?. For the below error,\nerror: Couldn't create pid file \"./sshd.pid\": Permission denied\nTry changing the sshd_config as mentioned in this issue #493.. I don't think so.. its a code fix.. how big is your PATH.. \nIn code we are reading max upto 256 characters..\n\n. This for the data (lpData) not for the name (lpValueName).. The code shown is for the lpValueName. Please note that \"PowerShell/Win32-OpenSSH\" is only used for tracking the issues.\nActual code is present in \"PowerShell/openssh-portable\" so please close this review and clone a new branch from \"PowerShell/openssh-portable\" and raise a new review.. 1) The keys generated will be used for the authenticating host.\nsearch for the \"host key\" here\nhttps://tools.ietf.org/html/rfc4253#page-13\n\n2) it doesn't matter whether we do in cmd.exe or powershell as we are invoking ssh-agent. Its not specific to cmd.exe/powershell. @ZenoArrow, wiki changes can't be done with pull request. We have the permissions to change the wiki.\nPlease let me know the changes so that we can evaluate and make the necessary changes.. Which URL are you referring to add the descriptive link?\nIs the wiki page not clear?\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki. Are you referring to https://github.com/PowerShell/Win32-OpenSSH/blob/L1-Prod/README?\n. Unfortunately we can't edit that because its the readme of the openssh community.\nWe cloned the openssh code and porting to windows operating system.\nI feel the wiki link is good enough as it is right below the branch name.\n\nYou can always raise new issue for any help, we are happy to help you anytime.\n. Yes, WIKI can't be cloned / pushed by a change.\nPlease open an issue and propose the necessary changes, we will evaluate and make the necessary changes. Please check the may end release.. May-end release will be available today.. it will be v0.0.15.0 . @WojtekKozaczynski -\n1) Can you please check the ssh version,\n((Get-Item (Get-Command C:\\Program Files\\OpenSSH\\ssh.exe).Source).VersionInfo.FileVersion)\n2) If its 0.0.15.0 then please run this command and provide us the logs\nssh.exe -vvv -F /dev/null -o PasswordAuthentication=no -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none docker@192.168.0.100 -o IdentitiesOnly=yes -i C:\\Users\\wojtek.docker\\machine\\machines\\testHost\\id_rsa -p 22. Looks like the problem is with the keys (C:\\Users\\wojtek\\.docker\\machine\\machines\\testHost\\id_rsa)... With the recent changes (0.0.15.0 release), ssh will check the file permissions of the key files.. please go through https://github.com/PowerShell/Win32-OpenSSH/wiki/OpenSSH-utility-scripts-to-fix-file-permissions and fix the file permission issues..\ndebug1: Next authentication method: publickey\ndebug1: Offering public key: RSA SHA256:nc8cfdobTTiHazdqv+/bJ3ZNe3+Xcdmo+EU5ypt/X1A C:\\Users\\wojtek\\.docker\\machine\\machines\\testHost\\id_rsa\ndebug3: send_pubkey_test\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 60\ndebug1: Server accepts key: pkalg rsa-sha2-512 blen 279\ndebug2: input_userauth_pk_ok: fp SHA256:nc8cfdobTTiHazdqv+/bJ3ZNe3+Xcdmo+EU5ypt/X1A\ndebug3: sign_and_send_pubkey: RSA SHA256:nc8cfdobTTiHazdqv+/bJ3ZNe3+Xcdmo+EU5ypt/X1A\ndebug3: open - handle:00000000000001DC, io:00000222FB40AA60, fd:4\ndebug3: Bad permissions. Try removing permissions for user: S-1-5-21-2127521184-1604012920-1887927527-26969423 on file C:\\Users\\wojtek\\.docker\\machine\\machines\\testHost\\id_rsa.\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions for 'C:\\Users\\wojtek\\.docker\\machine\\machines\\testHost\\id_rsa' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\ndebug3: close - io:00000222FB40AA60, type:2, fd:4, table_index:4\nLoad key \"C:\\Users\\wojtek\\.docker\\machine\\machines\\testHost\\id_rsa\": bad permissions\ndebug2: we did not send a packet, disable method. @davehowson - To debug further please share ssh client logs (ssh -vvv user@ip ) and sshd logs (DEBUG3 enabled). This original issue reported is closed so we need to debug why you are still seeing this issue.. Can you elaborate what do you mean by \"Logging into cmd works\"?\nWithout WSL, were you able to login to unix machine properly and the terminal behaves correctly.\nTry setting the SSH_TERM_CONHOST_PARSER to 0 in cmd.exe using (set SSH_TERM_CONHOST_PARSER=0) and then do ssh. Let us know if this works well.. Did you try the workaround (set SSH_TERM_CONHOST_PARSER=0) ?. Reopen with requested information... I am not able to recreate this issue on windows 10. It should be the same behavior on the windows 7 as well.\nAfter SSH does your previous cmd.exe content (before doing ssh) is still there or the whole screen got cleared? please share the recording.\nAre you using the legacy console?\nPlease share your cmd.exe properties, \"console screen buffer size - width / height\" and  windows size.\nGo through this URL and set the cmd.exe settings correctly,\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH\n. Please provide this information,\n1) are you using the non-legacy console mode in the cmd.exe console properties, \n   Make sure you uncheck the \"use legacy console\" \n \n2) after doing ssh, does your whole console gets cleared (or) were you able to see the commands that were executed before the ssh?\n3) share the screenshot of your cmd.exe properties, \"console screen buffer size - width / height\" and windows size.\n\n4) try this workaround and let us know if it works.\nbefore doing ssh, in cmd.exe execute \"set SSH_TERM_CONHOST_PARSER=0\" and then login to the ssh server.\n5) Why are you running the conhost manually? I think it should be started when you login to your machine? what are these different options provided to the conhost\n C:\\Windows\\system32\\conhost.exe \"-532765958-1897637209-556521010-811327810-9583264939507278038647003711698927287. @DHammarberg  - could you please provide the requested information.. If the issue still persists then please reopen with the requested information.. Thanks for your feedback.\n1) Not sure why you are getting an error for (Set-Acl $authorizedKeyPath $acl).\nIt works for me.. here is the snapshot,\n\n\nAs per the msdn -Path, -AclObject are optional so you shouldn't get any error...\n\n2) Adding comment for the ssh-keygen, ssh-add.. It is very clear as the keys are specific to a given user so they can be used for the same user so ignoring this comment.\n3) This Wiki page here, already has this information to do a \"cd 'C:\\Program Files\\OpenSSH'\"?\n\n4) I have separated the client and server cmds in this wiki page\n \nLet me know if you have more suggestions. If not then lets close this issue.. We are working on other high priority issues. This is still in our queue, will try to fix this asap.. @nkrepo - This is fixed in the latest release (0.0.19.0)...\nPlease note that all the powershell shortcuts doesn't have an equivalent vt ctrl sequences that gets transferred from the ssh client to ssh server...\nctrl+space doesn't work because the ssh clients (putty, Cygwin, unix terminals, win32-ssh client, etc) will transmit space instead of ctrl+space to the ssh server.\nctrl+alt+space+? also doesn't work as the ssh server get alt+space+?..\nIf you find any shortcuts not working then raise an issue. I tried to fix as many as possible.... Use the key based authentication..\nThis wiki has the steps,\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples. The current beta version is almost production ready.\nPlease go through the recent conversation \nhttps://github.com/PowerShell/Win32-OpenSSH/issues/565\n. No, this is unrelated to #590. This is a bug in ssh-shellhost.exe  which requires further investigation.\nFYI, Issue #590 is not reproducible if we run the sshd in the debug mode (sshd.exe -ddd).\n. Please try the new windows 10 fall update (https://support.microsoft.com/en-us/help/4464619). fyi, Just realized the windows 10 fall update is paused because of some known issues.\nPlease note that bunch of console rendering issues were resolved in the latest windows 10 fall updates.. @nkrepo - I verified (Version 10.0.17763.1), it's working on my end.\nCan you check the sshd binary version. It should be (7.7.2.1).\nFYI, GitHub release doesn't have these changes yet. \n\n. @nkrepo - OpenSSH sshd server uses conpty support provided by Microsoft console team. Unless you upgrade the OS version, you will not get this functionality.\nIn sshd server, we will check if console provides the conpty support then we are going to use it otherwise we fallback on to ssh-shellhost.exe (current implementation). This check will be added in the next openssh release.. @nkrepo - You can try this private sshd binary. \n1) Get the openssh latest release from github (https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.7.2.0p1-Beta)\n2) replace my private sshd\n. For the optional feature installation failure check error messages in these files,\nCBS.Log=    \"C:\\windows\\logs\\CBS\\CBS.log\"\nDISM.log=   \"C:\\windows\\logs\\DISM\\dism.log\"\nMore information about these components:\nhttps://blogs.technet.microsoft.com/askperf/2008/04/23/understanding-component-based-servicing \nhttps://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/deployment-troubleshooting-and-log-files \nhttps://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/what-is-dism \n. If this doesn't help then please submit a feedback request in feedback hub\nhttps://microsoft.sharepoint.com/sites/itweb/Software/Windows/windows10/Pages/Submitting-Feedback-on-Windows-10-Feedback-Hub-.aspx. @nkrepo - I didn't see any issue with ssh client.. \nCan you try my private ssh binary.\nPlease let me know if you see any issues.\n. Try changing the sshd_config as mentioned in this issue #493.\nIf you still have the issue then please share the sshd_config.. Are you running the sshd.exe in the administrator mode?. \n. @razrjk   the install script should have added this privilege automatically. Can you double check the script you used?\n. @razrjk RegOpenKeyExW (error 5) is fixed in the may end release... @alexander-n-lunev - sshd is running as \"NT Service/sshd\" (you can check this in task manager, check for sshd process)?\nError 1260 means, ERROR_ACCESS_DISABLED_BY_POLICY 1260 (0x4EC)\nThis program is blocked by group policy. For more information, contact your system administrator.\nplease check your system policy.. Please check the june mid release. You have to clone https://github.com/PowerShell/openssh-portable repo and submit your fix to that branch.. This branch is only for tracking the issues... Please close the pull request here... As far as I have gone through the code, there is no limit on the bandwidth...\nHere is the snapshot on my local machine goes more than 32 MBps,\n\n. Data is sent in multiple packets.. each packet is encrypted by source, decrypted by the destination.\nThe processing limit is also limited by the hardware restrictions on both the machines.. \nI am closing this issue as we its not a bug.. This is fixed, please check the aug-mid release to be released on 8/18..\nThe \"bck-i-search\" is not printed on the next line, this is due to \"https://github.com/PowerShell/Win32-OpenSSH/issues/590\"..\n\n. This is a Linux client terminal issue.. \nClient has to interpret the VT sequences sent by the server..\nBefore doing ssh, on the Linux client..  use the bash and set the term to xterm..\nplease try this and let me know if you still have issues...\nfyi, this is working from long time.. we have tested Ubuntu client to windows ssh server.\n. I couldn't download GNOME terminal but I have tried it in the putty terminal..\nI used putty to login to Ubuntu machine from my windows... Then from Ubuntu machine, I logged into the windows server. I tried but couldn't reproduce this issue by long-pressing the left and right arrows...\nPlease check this video,\nhttps://www.screencast.com/t/c0WBwYyzoEH\nPlease try using Ubuntu and let me know your findings...\n. The fix is available in june-mid release... This is a known issue.. Duplicate of #590 . The fix is available in june-mid release... No its 0.0.16.0. Yet to be released . Can you check the chcp setting on the cmd.exe..\nIt works perfectly fine on the localhost\n\n. I copied \"\u00f6\" and pasted in the ssh window and it worked.. can you try this and see if it works...\n. 1) can you try setting the chcp to 65001\n\n2) If it didn't work then try another terminal like putty/Cygwin.\nLinux client to windows server works fine but openssh windows client to openssh windows server doesn't work so mostly its something to windows client..\nAs far as I know, openssh windows client doesn't do any modification... Did you try other ssh clients (putty /Cygwin) on the same machine..\n. Please share your client OS details, I will try to reproduce at my end . @Lonney -\nIt seems to be issue with the putty and teraterm. I have tried same command in both the terms, both of them exited with an exception in conhost.exe.\nAll other commands that produce bigger output like \"dir c:\\Windows\\system32\" works fine..\nputty exception\n\nteraterm exception\n\nIt worked on the Cygwin and windows openssh client terminal.\nWith windows openssh client terminal, first do \"set SSH_TERM_CONHOST_PARSER=0\" then do the ssh.. This will disable the windows 10 conhost xterm parser.\nCygwin output\n\nOpenSSH windows client output (With set SSH_TERM_CONHOST_PARSER=0)\n\n. when using \"windows openssh client\" we have a pre-requisite that the terminal size should be atleast 90 columns or above.. please refer to the wiki https://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH. @remittor - Thanks for your continuous efforts..\nWere you able to reproduce this issue at your end with checked-in code? Can you please point the problematic code snippet related to this issue.. I have gone through your PR, it is mostly about refactoring and I couldn't find the problematic code that can cause this issue.\nFYI, the existing code works perfectly fine for us on multiple machines...\n. @Lonney - As a workaround while doing the ssh using -T option..\nssh.exe user@ip -T cmd.exe\n. putty workaround ,  go to Connection > SSH > TTY > check \"Don't allocate a pseudo terminal\"\n\n. This is not seen any more with v1.0.0.0.. @merlinthemagic - Please create a new issue.\nRegarding \"Disconnected server protocol violation unexpected SSH2_MSG_UNIMPLEMENTED.\", please provide putty logs and sshd.log (with DEBUG3 enabled).. @remittor - Could you please send a new PR that include your changes till the commitID - 63ff39259d7a26b33fcdaa3d42cfdf1441d8828a..\nWe can work on fixing the xterm related changes later.. @remittor - Could you please do the needful so that we can pick up your changes to june end release.\nIf you are busy then can I pick your changes and submit to june end release?\nPlease do reply.\n. @laughterk - \n1) control+c is been sent to the console but looks like its not honoring.. if you would like to check then do a \"ping 127.0.0.1\" and press control+c.. Its an issue from the console side not from openssh code.\n2) autocompletion is tab.\n@remittor - I have merged only the keystroke mapping for now as there are too many merge issues and I need to retest the merged part. The rest of the changes will be submitted to next release.. Thanks for you continuous support. Appreciate your efforts to make our product better.\n. @nightwish47 - Looks like this option (useroaming) is deprecated...\n\n. @remittor - This is the base assumption we have taken. when the pseudo terminal is implemented at the server side, ssh server will send the clearscreen to the client at the start of ssh session so that both server and client will be in sync from then on..\nssh standard doesn't mention about sharing the ssh client current location to the ssh server.. . @remittor with your recent fix, this problem is fixed? If yes, then this is duplicate of #712 issue? \nAre there any issues that need to be fixed apart from your PR?. This works well with latest version v1.0.0.0. In unix world this is accomplished with the \"ChrootDirectory\". ChrootDirectory is not yet supported in windows...\nIts a duplicate of \nhttps://github.com/PowerShell/Win32-OpenSSH/issues/539. As far as I know, we don't have... @mayo - The code works fine with no issues..\nMy initial understanding is wrong.. \nSSH_ORIGINAL_COMMAND will have the command specified by the client..\nWhen you are doing \"ssh user@ip hostname\", in this case the SSH_ORIGINAL_COMMAND will be set to hostname... Here \"hostname\" is the command specified by the client.\nIf you are doing normal ssh with no command \"ssh  user@ip\" then the SSH_ORIGINAL_COMMAND will not be set.... This can be closed?. @carlivar  can you check sshd_config has the loglevel set properly (LOGLEVEL DEBUG3). Code is not broken rather we need to set the correct code page on console (chcp command)\nConsole code page needs to be changed for it to render any Unicode stream properly. For UTF8 stream it needs to be 65001.\n. @philSixZero - for the first time failure (launching powershell from a different path), what did you set in the sshd_config (is it the full path of powershell.exe you would like to launch)? please share you sshd_config for both the cases.\nsince this is not related to the localization issue, could you please raise a new issue so that the bug is tracked and properly fixed.. Looks like ssh-agent.exe can't be opened (OpenError: (System.ServiceProcess.ServiceController:ServiceController).. \nPlease check the access permissions\n1) cd to folder where ssh-agent.exe is present\n2) (Get-Item .\\ssh-agent.exe).GetAccessControl('ACCESS').Access. Enable the logs in the sshd_config\nSubsystem       sftp    sftp-server.exe -l DEBUG3\nLOGLEVEL DEBUG3\nWhile running sftp client, use -vvv flags (  .\\sftp.exe -vvv user@IP) so that it dumps the logs onto the console.\nPlease share sshd.log, sftp-server.log and ssh log file.\nI would suggest to do it manually (instead of running the script), since the probability of reproducing this is very high (50:50).. \n. Any update?\nFew observations..\n1) Looks like ssh-agent is not running.. \ndebug3: unable to connect to pipe ssh-agent, error: 2\ndebug3: close - io:00178930, type:2, fd:4, table_index:4\ndebug1: pubkey_prepare: ssh_get_authentication_socket: No such file or directory\n2) From sshd.log, change the sshd_config to \"PidFile .\\sshd.pid\". Refer to https://github.com/PowerShell/Win32-OpenSSH/issues/493\nerror: Couldn't create pid file \"./sshd.pid\": Permission denied\n3) From sshd.log, No domain controller is available for the specified domain or the domain does not exist.\nerror: DsGetDcNameW() failed with error: 1355\n4)  From the sftp verbose log, Error-10054 means the peer has reset the connection.. debug3: recv - from CB ERROR:10054, io:00111518. Couldn't get much information from logs as the connection close triggered from the client side... To make progress we need the client side logs (ssh.exe -vvv user@ip and  sftp.exe -vvv user@IP),\n1) Can you try using a different SSH client (win23-openssh client or putty) instead of \"paramiko\".\nI tried to install \"paramiko\" but it failed\n    build/temp.linux-x86_64-2.7/_openssl.c:434:30: fatal error: openssl/opensslv.h: No such file or directory\n    compilation terminated.\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\nCommand \"/usr/bin/python -u -c \"import setuptools, tokenize;file='/tmp/pip-build-5I8G2O/cryptography/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\\r\\n', '\\n');f.close();exec(c\nompile(code, file, 'exec'))\" install --record /tmp/pip-kLQvaS-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-5I8G2O/cryptography/\n2) I saw couple of SFTP connection being closed because of read socket failures\n4552 12:06:13 441 debug3: recv - from CB ERROR:10054, io:00997C98\n3544 12:08:09 394 debug3: recv - from CB ERROR:10054, io:006A56E8\n3) Looks like this issue is not just specific to SFTP, normal SSH also has this problem \n1528 12:06:13 128 debug1: Executing command: C:\\Program Files\\OpenSSH\\ssh-shellhost.exe -nopty cmVnIFFVRVJZICJIS0VZX0xPQ0FMX01BQ0hJTkVcU09GVFdBUkUiIC92IFRlc3Q=\n1528 12:06:13 128 debug3: Register child 00000224 pid 3260, 0 zombies of 0\n1528 12:06:13 128 debug3: close - io:01268EB0, type:2, fd:7, table_index:7\n1528 12:06:13 128 debug3: close - io:01269430, type:2, fd:10, table_index:10\n1528 12:06:13 128 debug3: close - io:012690B0, type:2, fd:12, table_index:12\n1528 12:06:13 128 debug3: fd 9 is O_NONBLOCK\n1528 12:06:13 128 debug3: fd 8 is O_NONBLOCK\n1528 12:06:13 128 debug3: fd 11 is O_NONBLOCK\n1528 12:06:13 128 debug3: send packet: type 99\n1528 12:06:13 222 debug2: channel 1: read<=0 rfd 9 len 0\n1528 12:06:13 222 debug2: channel 1: read failed\n1528 12:06:13 222 debug2: channel 1: close_read\n5340 12:06:11 191 debug1: Executing command: C:\\Program Files\\OpenSSH\\ssh-shellhost.exe -nopty VEFTS0xJU1Q=\n5340 12:06:11 191 debug3: Register child 000001FC pid 5716, 0 zombies of 0\n5340 12:06:11 191 debug3: close - io:0167B708, type:2, fd:7, table_index:7\n5340 12:06:11 191 debug3: close - io:0167BA88, type:2, fd:10, table_index:10\n5340 12:06:11 191 debug3: close - io:0167B508, type:2, fd:12, table_index:12\n5340 12:06:11 191 debug3: fd 9 is O_NONBLOCK\n5340 12:06:11 191 debug3: fd 8 is O_NONBLOCK\n5340 12:06:11 191 debug3: fd 11 is O_NONBLOCK\n5340 12:06:11 191 debug3: send packet: type 99\n5340 12:06:11 566 debug2: channel 1: read<=0 rfd 9 len 0\n5340 12:06:11 566 debug2: channel 1: read failed\n5340 12:06:11 566 debug2: channel 1: close_read. @philSixZero - I tried this and got a different error.\n1) What does this command do ?\nC:\\Program Files\\PowerShell\\6.0.0.17\\powershell.exe -sshs -NoLogo -NoProfile\n2) Here is the analysis,\nMy sshdconfig - \nSubsystem       powershell    C:\\Program Files\\PowerShell\\6.0.0.14\\powershell.exe -sshs -NoLogo -NoProfile\nWhen I tried to do ssh using \"./ssh.exe localadmin@127.0.0.1 -s powershell\".. my sshd.log shows that it executed the correct path but failed with different error message.\nLogic - When you specify a relative path, we add the sshd.exe path. This is the reason it works fine.\nsshd.log-\n42292 17:54:16:346 debug1: subsystem: exec() C:\\Program Files\\PowerShell\\6.0.0.14\\powershell.exe -sshs -NoLogo -NoProfile\n42292 17:54:16:346 Starting session: subsystem 'powershell' for localadmin from 127.0.0.1 port 34233 id 0\n42292 17:54:16:346 debug3: pipe - r-h:412,io:00000280A9F525E0,fd:7  w-h:288,io:00000280A9F526D0,fd:8\n42292 17:54:16:346 debug3: pipe - r-h:420,io:00000280A9F9BEE0,fd:9  w-h:416,io:00000280A9F9BFD0,fd:10\n42292 17:54:16:346 debug3: pipe - r-h:428,io:00000280A9F9C0C0,fd:11  w-h:424,io:00000280A9F9C1B0,fd:12\n42292 17:54:16:347 debug2: fd 7 setting O_NONBLOCK\n42292 17:54:16:347 debug2: fd 8 setting O_NONBLOCK\n42292 17:54:16:347 debug2: fd 9 setting O_NONBLOCK\n42292 17:54:16:347 debug2: fd 10 setting O_NONBLOCK\n42292 17:54:16:347 debug2: fd 11 setting O_NONBLOCK\n42292 17:54:16:347 debug2: fd 12 setting O_NONBLOCK\n42292 17:54:16:347 debug1: Executing command: C:\\Program Files\\PowerShell\\6.0.0.14\\powershell.exe -sshs -NoLogo -NoProfile\n42292 17:54:16:348 debug3: Register child 00000000000001B4 pid 42444, 0 zombies of 0\n42292 17:54:16:348 debug2: fd 3 setting TCP_NODELAY\n42292 17:54:16:349 debug3: close - io:00000280A9F525E0, type:2, fd:7, table_index:7\n42292 17:54:16:349 debug3: close - io:00000280A9F9BFD0, type:2, fd:10, table_index:10\n42292 17:54:16:349 debug3: close - io:00000280A9F9C1B0, type:2, fd:12, table_index:12\n42292 17:54:16:349 debug3: fd 9 is O_NONBLOCK\n42292 17:54:16:349 debug3: fd 8 is O_NONBLOCK\n42292 17:54:16:349 debug3: fd 11 is O_NONBLOCK\n42292 17:54:16:349 debug3: send packet: type 99\n42292 17:54:23:530 debug2: channel 0: read 103 from efd 11\n42292 17:54:23:531 debug3: channel 0: discard efd\n42292 17:54:23:542 debug2: channel 0: read<=0 rfd 9 len 0\n42292 17:54:23:542 debug2: channel 0: read failed\n42292 17:54:23:542 debug2: channel 0: close_read\n42292 17:54:23:542 debug3: close - io:00000280A9F9BEE0, type:2, fd:9, table_index:9\n42292 17:54:23:542 debug2: channel 0: input open -> drain\n42292 17:54:23:542 debug2: channel 0: read 0 from efd 11\n42292 17:54:23:542 debug2: channel 0: closing read-efd 11\n42292 17:54:23:542 debug3: close - io:00000280A9F9C0C0, type:2, fd:11, table_index:11\n42292 17:54:23:542 debug2: channel 0: ibuf empty\n42292 17:54:23:542 debug2: channel 0: send eof\n42292 17:54:23:542 debug3: send packet: type 96\n42292 17:54:23:542 debug2: channel 0: input drain -> closed\n42292 17:54:23:547 debug3: zombie'ing child at index 0, 0 zombies of 1\n42292 17:54:23:547 debug1: Received SIGCHLD.\n42292 17:54:23:547 debug3: Unregister child at index 0, 1 zombies of 1\n42292 17:54:23:547 debug1: session_by_pid: pid 42444\n42292 17:54:23:548 debug1: session_exit_message: session 0 channel 0 pid 42444\n42292 17:54:23:548 debug2: channel 0: request exit-status confirm 0\n42292 17:54:23:548 debug3: send packet: type 98\n42292 17:54:23:548 debug1: session_exit_message: release channel 0\n42292 17:54:23:548 debug2: channel 0: write failed\n42292 17:54:23:548 debug2: channel 0: close_write\n42292 17:54:23:548 debug3: close - io:00000280A9F526D0, type:2, fd:8, table_index:8\n42292 17:54:23:548 debug2: channel 0: send eow\n42292 17:54:23:548 debug3: send packet: type 98\n42292 17:54:23:548 debug2: channel 0: output open -> closed\n42292 17:54:23:548 debug2: channel 0: send close\n42292 17:54:23:548 debug3: send packet: type 97\n42292 17:54:23:548 debug3: channel 0: will not send data after close\n42292 17:54:23:548 debug2: notify_done: reading\n42292 17:54:23:548 debug3: channel 0: will not send data after close\n42292 17:54:23:548 debug3: receive packet: type 97\n42292 17:54:23:548 debug2: channel 0: rcvd close\n42292 17:54:23:548 debug3: channel 0: will not send data after close\n42292 17:54:23:548 debug2: channel 0: is dead\n42292 17:54:23:548 debug2: channel 0: gc: notify user\n42292 17:54:23:548 debug1: session_by_channel: session 0 channel 0\n42292 17:54:23:548 debug1: session_close_by_channel: channel 0 child 0\n42292 17:54:23:548 Close session: user localadmin from 127.0.0.1 port 34233 id 0\n42292 17:54:23:548 debug3: session_unused: session id 0 unused\n42292 17:54:23:548 debug2: channel 0: gc: user detached\n42292 17:54:23:548 debug2: channel 0: is dead\n42292 17:54:23:548 debug2: channel 0: garbage collecting\n42292 17:54:23:548 debug1: channel 0: free: server-session, nchannels 1\n42292 17:54:23:548 debug3: channel 0: status: The following connections are open:\\r\\n  #0 server-session (t4 r0 i3/0 o3/0 fd -1/-1 cc -1)\\r\\n\n42292 17:54:23:548 debug3: WSARecv - WSARecv() ERROR: io:00000280A9F52290 10054\n42292 17:54:23:548 debug3: recv - from CB ERROR:108, io:00000280A9F52290\n42292 17:54:23:549 Read error from remote host 127.0.0.1 port 34233: Unknown error\n42292 17:54:23:549 debug1: do_cleanup\n. SSHD receive SIGCHLD from the ssh client so it closed the connection.\n42292 17:54:23:530 debug2: channel 0: read 103 from efd 11\n42292 17:54:23:531 debug3: channel 0: discard efd\n42292 17:54:23:542 debug2: channel 0: read<=0 rfd 9 len 0\n42292 17:54:23:542 debug2: channel 0: read failed\n42292 17:54:23:542 debug2: channel 0: close_read\n42292 17:54:23:542 debug3: close - io:00000280A9F9BEE0, type:2, fd:9, table_index:9\n42292 17:54:23:542 debug2: channel 0: input open -> drain\n42292 17:54:23:542 debug2: channel 0: read 0 from efd 11\n42292 17:54:23:542 debug2: channel 0: closing read-efd 11\n42292 17:54:23:542 debug3: close - io:00000280A9F9C0C0, type:2, fd:11, table_index:11\n42292 17:54:23:542 debug2: channel 0: ibuf empty\n42292 17:54:23:542 debug2: channel 0: send eof\n42292 17:54:23:542 debug3: send packet: type 96\n42292 17:54:23:542 debug2: channel 0: input drain -> closed\n42292 17:54:23:547 debug3: zombie'ing child at index 0, 0 zombies of 1\n42292 17:54:23:547 debug1: Received SIGCHLD.. The same thing works if you specify cmd.exe in sshd_config\nSubsystem       mycmd    C:\\Windows\\System32\\cmd.exe\nuse\nssh user@ip -s mycmd. tested on the unix environment. Unix has a way to escape the spaces in the path..\nex - /home/Ubuntu/test\\ directory/ -> Here we escape the space in \"test directory\" using .\nWe need to find a way that suits windows.. @PillowFish - I couldn't reproduce this at my end.. I didn't see the error message in sshd.log file (error: accept: Connection reset\") and the sshd.log is not growing..\nAm I missing something here?\nI ran \"nmap -sV -p 22 127.0.0.1\", it ran successfully..\nStarting Nmap 7.50 ( https://nmap.org ) at 2017-07-10 15:24 Pacific Daylight Time\nNmap scan report for localhost (127.0.0.1)\nHost is up (0.0010s latency).\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.5 (protocol 2.0)\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 3.33 seconds\nSSHD.log\n29872 15:24:55:643 debug3: socket:424, io:0000025F58D72F90, fd:5 \n29872 15:24:55:643 debug3: fd 5 is not O_NONBLOCK\n29872 15:24:55:643 debug3: pipe - r-h:428,io:0000025F58D73080,fd:6  w-h:432,io:0000025F58D75A20,fd:7\n29872 15:24:55:643 debug3: spawning E:\\test\\sshd.exe\n29872 15:24:55:644 debug3: Register child 00000000000001B4 pid 48216, 0 zombies of 1\n29872 15:24:55:644 debug3: close - io:0000025F58D72F90, type:1, fd:5, table_index:5\n29872 15:24:55:644 debug1: Forked child 48216.\n29872 15:24:55:644 debug3: close - io:0000025F58D75A20, type:2, fd:7, table_index:7\n48216 15:24:55:674 debug1: sshd version OpenSSH_7.5, LibreSSL 2.5.3\n48216 15:24:55:675 debug3: open - handle:0000000000000130, io:0000026BBC5F2630, fd:3\n48216 15:24:55:680 debug3: close - io:0000026BBC5F2630, type:2, fd:3, table_index:3\n48216 15:24:55:681 debug1: private host key #0: ssh-rsa SHA256:u2PBohr0znaydJyaBorQWkx5Vm1Hw10xctNFX8FNAFA\n48216 15:24:55:682 debug3: open - handle:0000000000000130, io:0000026BBC5F2630, fd:3\n48216 15:24:55:683 debug3: close - io:0000026BBC5F2630, type:2, fd:3, table_index:3\n48216 15:24:55:683 debug1: private host key #1: ssh-dss SHA256:6/1wXar+admMPGH5dRsiurr81Mj3hT/m/jLr/SQ9qhs\n48216 15:24:55:683 debug3: open - handle:0000000000000130, io:0000026BBC5F2630, fd:3\n48216 15:24:55:684 debug3: close - io:0000026BBC5F2630, type:2, fd:3, table_index:3\n48216 15:24:55:685 debug1: private host key #2: ecdsa-sha2-nistp256 SHA256:1eBFYcTyf5ssmjVuy/2wzLr07Ny4x/ARqwLU3IYs1Yg\n48216 15:24:55:686 debug3: open - handle:00000000000000A8, io:0000026BBC642EC0, fd:3\n48216 15:24:55:686 debug3: close - io:0000026BBC642EC0, type:2, fd:3, table_index:3\n48216 15:24:55:686 debug1: private host key #3: ssh-ed25519 SHA256:pTVUSAOShWkyn00DYEfqSM8/W1owVDWntlL2DVHmd8w\n48216 15:24:55:691 debug1: child socket: 424\n48216 15:24:55:691 debug1: child startup_pipe: 432\n48216 15:24:55:691 Connection from 127.0.0.1 port 30502 on 127.0.0.1 port 22\n48216 15:24:55:692 Did not receive identification string from 127.0.0.1 port 30502\n29872 15:24:55:699 debug3: close - io:0000025F58D73080, type:2, fd:6, table_index:6\n29872 15:24:55:700 debug3: zombie'ing child at index 1, 0 zombies of 2\n29872 15:24:55:700 debug3: Unregister child at index 1, 1 zombies of 2\n. @PillowFish - Any update on this?. @megamorf @PillowFish -\nI tried the similar setup (SSH Client is running on Ubuntu 16 and SSH Server is running on WIN 7) but I don't see the logs flooded.. \nFYI, I ran the command nmap only once... It would be great if you can provide us the reproduction steps.. Fyi,. We couldn't reproduce at our end . @aayush251 - Were you able to reproduce consistently on the windows server 2016 machine?. @aayush251 - Couldn't reproduce on windows server 2016...\n. @PillowFish, @aayush251 , @logmein345 - I couldn't reproduce this issue.. It would be great if you can share the sshd.log (for the first 1-2 minutes so that I can dig more into this issue)..\nFYI, it works for me... please see this,\n\n. @PillowFish, @aayush251 , @logmein345 - is there an update on this?. @jvalladaresBest - We are unable to reproduce this at our end. It would be great if you can share the sshd.log (for the first 1-2 minutes so that I can dig more into this issue)... @ST159357 - Please set the log level to DEBUG3, provide the sshd.log.. @itnic - It will be part of our next release (Jan-Mid release).. Fixed as part of latest release 1.0.0.0. Please provide the description of your issue . Use\nForceCommand cmd.exe /C echo no shell access\nIncase if you want to display the custom message (\"no shell access\") at the client side then add this line to sshd_config.\n\"PermitTTY no\". Which version of win32 open ssh are you using?\nAre you using key based authentication or password based authentication?\nPlease share DEBUG3 sshd.log. Which operating system (client and server)?\nBy default it will try to see if there are authentication keys present.. You can disable this in sshs_config. windows assigns the ProfileImagePath to \"c:\\users\\\". Not sure why you are referring to \"C:\\Program Files (x86)\\Pulse\"..\nsshd will read the authorized_keys from the regedit (HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\ProfileImagePath). Are you saying this regedit got corrupted? Please provide the value before (working scenario) and after (not working scenario). Also please provide the complete sshd_log for both working and non-working scenario.\nAs per the sshd_logs, it failed \n1) Received SIGCHLD.\n2) 3380 09:11:39 183 debug1: Could not open authorized keys 'C:\\Users\\pulse/.ssh/authorized_keys': No such file or directory\n3380 09:11:39 183 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\n3380 09:11:39 183 Failed publickey for pulse from 192.168.0.50 port 52411 ssh2. Any update on this, can this be closed?. @neoclust - any update on this?. Same behavior as UNIX code.. so NOT VALID... Are you starting the sshd from a cmd that's opened in administrative mode?\nIf this doesn't work then execute in debug mode (sshd.exe -ddd) to investigate further.. Looks like ssh client is closing the connection.. can you please share the ssh client logs as well (ssh.exe -vvv user@ip). reopen this if required with requested information.. Are you sure you are using win32-openssh? \nFrom task manager, go to \"details\" tab.. click on the sshd, right click and select \"open file location\"\n\nIf yes,  please share the sshd.log in the logs folder and also ssh client logs (ssh.exe -vvv user@ip). Closing this issue as there is no update in last 2 weeks..\nPlease reopen with the required information.. Thanks for bringing this up.\nAs of now we don't do this, I think it is good to have this.. Fix is available in july mid  release (v0.0.18.0). Try adding this in sshd_config...\nMatch User *\n       ForceCommand C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\nPlease change the path of the powershell based on your system configuration.\n. Follow step 13 in this link to configure default shell\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH. Fix is available in july mid  release (v0.0.18.0). I can think of two code changes that might have an interaction with it..\n1) ssh-shellhost now supports dealing the control sequences (#799, code changes in ProcessCtrlSequence() in ssh-shellhost.exe).\n2) Addition of DISABLE_NEWLINE_AUTO_RETURN.\nCan you try to remove DISABLE_NEWLINE_AUTO_RETURN and see if it works as expected?\nIf not, please provide what is not working and reproduction steps... Reopening to track the regression caused.. I have made the code changes to remove the DISABLE_NEWLINE_AUTO_RETURN. This zip contains ssh.exe build in debug, x64 binary.\nEmacs-TerminalIssue.zip. \nPlease try this and if it doesn't help, please provide the reproduction steps and what is not working so that I can reproduce and debug at my end.. @icf3 - \n1) what do you mean by 0.0.18.0 binary and 0.0.18.0 source?\n2) Can you please confirm whether Emacs-TerminalIssue.zip fixed the regression?\n3) I tried both the v0.0.17.0 and v0.0.18.0 but couldn't find big difference. only the difference is the indentation is happening little late. Can you please provide your observations?\nAs mentioned, the Emacs-TerminalIssue.zip doesn't set the \"DISABLE_NEWLINE_AUTO_RETURN\" on the stdout handler.\nIf the windows SSH client is using win10+ then the control sequences received from the SSH server will be directly given to the conhost.exe process. Not sure if the conhost.exe is behaving incorrectly when this flag is set.. Kex negotiation will be initiated by both client and server.. In client it picks either from ssh_config or through command line arguments.. In sshd it picks from sshd_config or command line arguments if you start as non-service process or default kex algorithms.. Could you please check this configuration in both the systems and compare both the ssh logs (ssh.exe -vvv user@ip) and sshd log with debug3 enabled.. If you still have questions then please share both ssh and sshd logs and configuration... Fix is available in july mid  release (v0.0.18.0). Fix is available in july mid  release (v0.0.18.0). Fix is available in july mid  release (v0.0.18.0). duplicate of https://github.com/PowerShell/Win32-OpenSSH/issues/289\nbash.exe is not allowed for the network logons.. Its the limitation from the bash.exe... Please talk to the WSL team. \nAs per our earlier communication with the WSL team, changing the registry can lead to a potential security issue. WSL team doesn't recommend this approach. WSL team is still making decision whether to allow the network logons or not.\nWe will cross-check if it is related to win32-openssh so reopening the issue.\n. @darkverbito - Can you please provide what fields has to be changed in the registry so that we can reproduce this issue at our end.\nHere is the current snapshot of my registry,\n\n\n. @darkverbito - I have added the permissions as mentioned but it still gives me \"Error: 0x80070057\". You also mentioned something about \"set Local Launch\", where do we need to set this? . @darkverbito -For me the interactive ssh fails to launch the bash, it gives \"Error: 0x80070057\".\nI have added the permissions as mentioned but it didn't work.. Please provide sshd.log with DEBUG3 enabled..\nLogLevel DEBUG3 (In sshd_config)\nAlso the ssh client logs (ssh.exe user@ip -vvv)\n. You should have restricted access to authorized_keys file. System(FullControl), SSHD(Read only), Administrators group (can be anything).\nYour security settings should look like this\n\nFrom sshd.log,\n2156 16:05:30:334 debug1: trying public key file C:/authorized_keys\n2156 16:05:30:334 debug3: LookupAccountSidLocalW() failed with error: 122. \n2156 16:05:30:334 debug3: Bad permissions. Try removing permissions for user: S-1-5-11 on file C:/authorized_keys.\n2156 16:05:30:334 Authentication refused.. fyi, the location really doesn't matter as long as you have the right permissions and sshd_config referring to the right location.. It's fixed in the latest release 0.0.20.0.\nsshd_config should look like this,\nAllowGroups groupname?domainname\nAllowUsers user?domainname\nIn your case it is,\nAllowGroups hunters?forest\nAllowUsers john?forest\n. Please provide the output of this powershell command\nget-acl -path c:\\Users\\MY_USER_NAME.ssh\\id_rsa | select *. Closing this issue as we can't reproduce.. Please provide detailed problem description.. How is it OpenSSH issue?. @gatornation11 - didn't understand what you are expecting from the openssh project to do for this issue.  It is out of our scope. If you have different opinion then please describe so that we can think about it . Please make changes here https://github.com/PowerShell/openssh-portable. Couldn't reproduce this.\nCtrl+C is being sent.. You can try initiating \"ping 127.0.0.1\" and then press Ctrl+C , this should stop ping.\nI tried the below powershell script, Ctrl+C works fine from the ssh client (tried from Ubuntu).\n$t=Get-Date -format \"dd-MMM-yyyy HH:mm\"\necho $t\nStart-Sleep -s 60\n$t=Get-Date -format \"dd-MMM-yyyy HH:mm\"\necho $t\n. @GoodMirek - Any update on this? . @GoodMirek - Have you tried ping or the sample powershell script that was mentioned? \nIf it works then it is certain that the Ctrl+C is been issued from the ssh-shellhost.exe.\nTo debug further, we need to look into your powershell script and analyze which commands are not responding to the Ctrl+C.\nIf ping / sample powershell script doesn't  work then we have a problem in our ssh-shellhost.exe.. @GoodMirek - When you are connected to windows ssh server, interrupting the ping with Ctrl+C works for you?\n. @GoodMirek - Need your help in analyzing the root cause. Please follow the below steps,\non your windows machine acting as ssh server,\n1) Please copy your existing ssh-shellhost.exe as ssh-shellhost.exe.bkup\n2) Use the ssh-shellhost.exe from this link and replace with your ssh-shellhost.exe\nshellhost-ctrl-c-issue.zip\nOn your ssh client machine,\n1) set your TERM to xterm.\n2) Now connect from your ssh client to ssh server.\n3) After you login, press \"ctrl+c\" and enter\n4) type \"exit\" to exit the session.\n5) Now you will see some log messages on your ssh client.. please share the logs with me.\nIt looks like this,\n\non your windows machine acting as ssh server,\n1) Revert back ssh-shellhost.exe.bkup to ssh-shellhost.exe to remove my private changes.\nFYI, I am also attaching the working ctrl+c behavior, ssh from Ubuntu machine (acting as ssh client ) to windows 10 (acting as ssh server)\n. @marcosnils - ctrl+c is issued from the ssh-shellhost but the console is not honoring.. It's a bug in the console code.. Out of our scope . This is the reason for the failure:\n2376 14:00:06:361 debug1: LsaLogonUser failed NTSTATUS: 1\n2376 14:00:06:361 error: unable to generate token for user pulse\nCan you share details on your Win7 box- x86 vs x64? SP? all latest updates installed?\n. Thanks for the detailed post. We'll take a look.. I couldn't reproduce this issue.\nPlease share your sshd_config and sshd.log (DEBUG3).. @gravcat - Any update on this? . reopen this if required with required information.. You should have restricted access to authorized_keys file. System(FullControl), SSHD(Read only), Administrators group (can be anything).\nYour security settings should look like this\nhttps://user-images.githubusercontent.com/23668037/28344039-f117e942-6bd5-11e7-9c25-2e6b99766a53.png. As of now, we don't support this scenario. This will be added to our backlog and will be picked based on the priority.. @DarwinJS -Thanks for taking your time and looking into this.\nThis issue can be fixed in the code level. I will make changes to set the TERM to \"xterm-256color\".\nAs of now, windows SSH server doesn't care about the TERM so it is specific to non-windows environment (UNIX). Since we are solving this issue at the code level, I think your setup can ignore this.. Yes, in the code we check for the TERM environment variable.  If it doesn't exists then we set the TERM to xterm-256color.. If the TERM environment variable is set then the code will not do anything.\nIf the TERM environment variable is not set then only the code will set the TERM to xterm-256color.\n. Fix is available in the Aug-Mid release... Run the sshd in debug mode (./sshd.exe -ddd) to see what's going wrong . Thanks for reporting, we will fix it . Please check the aug-mid release.. . Go to the sftp-server.exe directory, you can see the logs folder (if not then please create the logs folder).\nIn the sshd_config, specify the loglevel\nSubsystem       sftp    sftp-server -l DEBUG3\nThe logs will be written to sftp-server.log file.\n. @thezim - Did it work for you, with right permissions to sftp-server.log?\nsftp-server.exe runs in the user context so we need to provide the write access for that user to write to the sftp-server.log file.. @thezim - Can this be closed?\nFYI, The long term solution (backlog item) is to use the windows logging mechanism instead of writing to sftp-server.log.. @thezim - Its too early to comment on the future implementation but we will certainly keep this information (writing to a log file so the parsing,archiving is easy) during our implementation.. Not sure why the ssh-keygen hangs for you but it works on my machine (windows 10),\nPS E:> .\\ssh-keygen.exe -t ed25519 -o -a 100 -f e:\\id_ed25519\nGenerating public/private ed25519 key pair.\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in e:\\id_ed25519.\nYour public key has been saved in e:\\id_ed25519.pub.\nThe key fingerprint is:\nSHA256:Yr1hE36COC63SYnB2l83N8hHOQ5yrSUC1moHmR46TRs user@ip\nThe key's randomart image is:\n+--[ED25519 256]--+\n|                 |\n|     +           |\n|    E . .        |\n| . * O + o .     |\n|  = O B S B      |\n| o * = B # .     |\n|. + = . B =      |\n|   = + . + .     |\n|    +            |\n+----[SHA256]-----+\n. Closing this thread as we couldn't reproduce on multiple machines... This will launch the interactive powershell ssh session.\nssh -t User@Domain@Dostname powershell. Did it work for you? can this be closed?. Please wait for the new Windows update..\nFYI, meanwhile you can try our github version that has the latest and greatest changes... Are you executing Enter-PSSession within an SSH session or from an UNIX terminal?\nPlease share the sshd_config and the sshd.log on the windows machine.. Any update on this?. what about sshd_config and the sshd.log?. @dermeister0 - Could you please elaborate your issue.\nError log doesn't talk about the path to powershell core. Why you think it's misleading?\nBTW, do you have DEBUG3 enabled for sshd logs?. @rivy - Will fix it for the aug-mid release. Please check the aug-mid release on 8/18. Please submit the changes in the openssh-portable repo...\nhttps://github.com/PowerShell/openssh-portable\nThis repo is only used for tracking the issues.... @Dchan40- you area missing $ before false..\nIt has to be be -Confirm:$false. wiki URL has $\n\nAre you referring to the same URL?\n. @Dchan40 - Please post the screen shot if the original command (-Confirm :$false) mentioned in the wiki fails..  . Can you please try this and let us know if it works..\n1) [bool]$f=$false\n.\\FixHostFilePermissions.ps1 -Confirm:$f\n2) or\n.\\FixHostFilePermissions.ps1 -Confirm:0\nlooks like powershell is treating $false as string instead of bool so an explicit conversion might be required.. @thecliguy  - I have fixed this. Could you please test these private changes and let me know if everything looks good..\nssh_alt_meta_fix.zip\n. @thecliguy - Thanks for trying the private changes.\nI couldn't test the curosor keys (alt+up/down/etc).. I have fixed this issue and tested.\nPlease test this latest private binary. \nssh_fixAlt_issue.zip\n. This is fixed and code changes are submitted.\nPlease check the September end release.. @Mayhem93 - There are many terminal fixes went in version 18 so I am hoping this is a regression issue...\nI yet need to repro this issue... I will update this thread soon....\nregarding the terminal not getting cleared while doing ssh, this is a bug and its fixed... so the current behavior is correct. However if you connect to windows ssh server, the terminal gets cleared (this is required due to the pty implementation in windows).... @Mayhem93 - I haven't tried.. busy in fixing other issues.. \nWill try this early next week... @Mayhem93 - Can you try the latest release 0.0.20.0.\nfyi, it works for me..\n\n. @Mayhem93 - Any update on this?. @Mayhem93 - When you ssh to unix ssh server, clear screen shouldn't happen.\nI can't repro this (ssh to unix ssh server). Here it is,\n\nBut when you ssh to windows ssh server, clear screen will happen. This is expected because of the pty implementation on windows.. Ok thanks, closing the issue.. @cowlinator - Could you please try these steps,\n1) verify if the ssh-agent is registered as service.. (check in the taskmanager, services tab)\n2) From an elevated cmd.exe, run \"net start ssh-agent\" -> This should start the ssh-agent\nIf you still have issues then please use the attached ssh-agent x64 binary that will capture the error code returned by windows, \nssh-agent.zip\n. Please close this PR and open the same at https://github.com/PowerShell/openssh-portable..\n. We initially started with this repo...  Later we created another repo due to various reasons... Now this repo is used only for issue tracking.. Fyi please note that this repo is kept in sync with another repo but this is used only for issue tracking... Our long term plan is to have only one repo. Have you used -n option (https://linux.die.net/man/1/ssh)?\n\n. @havalli - Any update on this? can this be closed?. Please reopen if required.. It would be great if you can provide the detailed reproduction steps.\nPlease share the ssh client (ssh -vvv user@ip) and sshd (DEBUG3) logs.\n. @nellfr - Please let us know how to reproduce this issue... @nellfr - I tried the command you gave me but couldn't reproduce \"GetConsoleMode on STD_INPUT_HANDLE failed with 6\".\n\n. @nellfr - adding \"-n\", sleep of 5 minutes works perfectly... I didn't see any issue.\n@rjpackito - This is a ssh client side issue. You can try other ssh clients (putty/Cygwin) if you are blocked. Unfortunately I couldn't reproduce this issue. It would be great if you can provide reproduction steps.. Have you tried other ssh clients? If it works in putty then we can fix in openssh... Right now I can't repro the issue.. I will try the gitlab runner.. Meanwhile try using different ssh client like putty . I didn't understand your question..\nAll the ssh commands get executed on the server side.. ssh client will not execute any command..\n. Please reopen if required.. Try using -T (no-pty) in ssh.exe.. can you share the ssh client logs (ssh.exe -vvv user@ip) and sshd.log (DEBUG3 enabled) server side logs. This is expected behaviour... When force command is there in sshd_config, sftp or scp will not work . @zjalexander , @marekr - Could you please try the private binary (ssh-FixForwardSlashIssue.zip) and confirm whether this solves your problem... fyi, its an x64 ssh.exe binary.\nLooks like it is caused by fixing the VTSequence used to interpret /? key...\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n\n. @zjalexander - great, will fix this for the next release.. \n@marekr - It would be great if you can also confirm as you are facing a different issue (inserting new line).... @lvic - use the attached binary as ssh.exe. It's fixed in the latest release 0.0.20.0. Please provide the reproduction steps... Please reopen with the reproduction steps.... closing this issue as it is because of the typo in the command... please check the latest release 0.0.20.0. @hartois - It works for me. I tried with a third party tool like FileZilla and it worked.\nGuessing that it is related to phpseclib...\nplease test yourself with other sftp clients like FileZilla, winscp, etc... @hartois - I tried to use the phpseclib but couldn't get it work on ubuntu 17.04.\n\"apt install phpseclib\" didn't work so I have download the phpseclib from http://archive.ubuntu.com/ubuntu/pool/universe/p/phpseclib/phpseclib_1.0.1.orig.tar.gz\nI have downloaded it to my home folder, renamed the directory to \"phpseclib\" and added the home folder to PATH env variable but still it gives an error at \"use phpseclib\\Net;\"..\n. @hartois - The download  doesn't \"phpseclib/autoload.php\".\nPlease have a look at this,\n\n. @hartois - Found the issue. Here is the private sftp-server binary to test.\nsftp-server.zip\nPlease let me know if you have any issues.. Your host keys doesn't have right permissions.... Register host keys with the ssh-agent as mentioned in the installation page.... Secure SSH host keys (optional)\nStart-Service ssh-agent\nDownload psexec from here\nLaunch cmd.exe as SYSTEM\npsexec.exe -i -s cmd.exe\nregister host keys in above cmd.exe\nssh-add ssh_host_dsa_key\nssh-add ssh_host_rsa_key\nssh-add ssh_host_ecdsa_key\nssh-add ssh_host_ed25519_key\nHost private keys are now securely stored by ssh-agent, private key files can be deleted at this point.. @tarmizee - You will still see the error message because sshd will try to read and it fails because of the permission issue. Since you have registered your host keys with the ssh-agent, you can establish ssh session from any ssh client. \nYou can ignore these error messages (or) if you don't want to see the error messages then move the host key files to a different directory..\nFYI, sshd expects the private host keys files to be accessible for only \"sshd\", \"system\" and \"administrators group (not administrator account)\".. If you open the advanced security setting it should look like this,\n\n. Please share the sshd.log and sshd_config.. Looks like sshd is not getting the hostkey from the ssh-agent.\n4596 08:52:54:525 fatal: sshd_hostkey_sign: ssh_agent_sign failed: agent refused operation\nDo you have ssh-agent running? \nIf yes, check host keys using ssh-add\na) psexec.exe -i -s cmd.exe\nb) cd to ssh-add.exe directory\nc) ssh-add.exe -l ( This command should display all the host keys registered under system context).\nelse, net start ssh-agent from elevated cmd.exe.\nPlease move the private host keys to a different directory so that the error log will be minimal and it is easy to debug..\n. This confirms that host keys are not registered with the ssh-agent..\n1) Please redo this, \npsexec.exe -i -s cmd.exe\nregister host keys in above cmd.exe\nssh-add ssh_host_dsa_key\nssh-add ssh_host_rsa_key\nssh-add ssh_host_ecdsa_key\nssh-add ssh_host_ed25519_key\n2) Verify using ssh-add.exe -l\na) psexec.exe -i -s cmd.exe\nb) cd to ssh-add.exe directory\nc) ssh-add.exe -l ( This command should display all the host keys registered under system context).\n3) Move the private host key files to the different directory..\n Leave the public host key files (.pub extension) in the same directory as sshd.. My bad, ssh-add.exe didn't register with the ssh-agent because of host-key permission issue.\nPlease run FixHostFilePermissions.ps1 (in the directory where sshd.exe is present) . This should fix the host key permission. Run this from an elevated powershell window.\nAfter running this try to register using ssh-add.exe to confirm the permissions are fixed properly..\nIf you still have issues then fix manually.. Advanced security options (for your private host key should look like this,\na) right click private host key file.\nb) security tab\nc) Advanced button\nd) permissions tab\ne) Make sure Owner field is set to \"system\" or \"administrators group\"\n\nIf you still have issues, then please send the screen shot of the advanced security options that looks like the one above..\n. Permissions were not set properly by the script...\nPlease set the permissions manually as described in my previous reply... The owner must be one of these (system, sshd, administrators group). @DHowett - We are not supporting alt meta keys as of now.. \nanything that is not supported will send \\0, this is not specific to alt meta key word..\nThat's the reason I have marked it as Issue-Enhancement, hope this clarifies.. This is fixed and code changes are submitted.\nPlease check the September end release.. @dgc - Can you try latest release 0.0.20.0\nFYI, it works at my end\n\n. @248668342 - \nauthorized_keys is a file (not a folder). \nWhen sshd_config has an explicity AuthorizedKeysFile specified, sshd process will never look into C:\\Users\\user/.ssh folder.\nFixHostFilePermissions.ps1 - This will not fix you AuthorizedKeysFile specified in the sshd_config. Please do this manually... Follow these steps,\na) right click authorized_keys file.\nb) security tab\nc) Advanced button\nd) permissions tab\ne) Make sure Owner field is set to \"system\" or \"administrators group\"\nf) Permission entries has \"system\", \"administrators group\" and sshd (Read only) permission.\nfinally your authorized_keys advanced security settings should look like this, it could be owner by the user, SYSTEM or Administrators group\n. @reap3r119 - I couldn't repro this issue.. is it working with other ssh clients like putty/Cygwin?\nFYI, please see the recording.. I tried three times, it works perfectly \n\n. @reap3r119 - Please provide the reproduction steps...\nAlso did you try this from other ssh clients like putty/Cygwin? if yes, does it behaves correctly?. @reap3r119 - I tried as you said but couldn't repro this issue..\nplease have a look at this,\n\nLet me know if I miss something.\n. @reap3r119 - Any update on this? Can you try on a different machine?. Thank you.. I'm closing this issue.. I didn't quite understand execute right for sync...\nUsing sftp users can download / upload the files.. Is that what you are looking for?. Is the get command failing from sftp client? Sftp shows the execute flag (x in rwx) only when it's an executable but if you look at the windows file properties , you may have the execute permissions... This is a deviation to more align with the Unix world...\nsftp get command needs just the read permissions to download the files from sftp server.. It doesn't require the execute permissions...\nSftp-server runs in the user context so the login user should have read permissions... If sftp get command fails then check the file properties and sftp server logs in logs folder . That doesn't sound right.. looks like the sftp client you are using has a bug.\nWhat is the sftp client you are using?\nHave you tried different sftp clients (winscp/FileZilla/win32-sftpclient)?. @StevcenSongqh - Any update on this?. Please share the ssh-agent DEBUG3 logs. Please remove the (FOODOM1\\REMOTEUSER:(F)) permissions to authorized_keys and try again.\nIf it fails then please share sshd_logs with DEBUG3 enabled.\nYour icacls should look like this,\nC:\\Users\\REMOTEUSER.ssh>icacls authorized_keys\nauthorized_keys NT SERVICE\\sshd:(R)\n                NT AUTHORITY\\SYSTEM:(F)\n                BUILTIN\\Administrators:(F)\n. @gravcat - This is because of \"https://github.com/PowerShell/Win32-OpenSSH/issues/590\".\nI am closing this issue as duplicate.\nYou can verify this by starting the sshd in the debug mode \na) net stop sshd\nb) .\\sshd.exe -ddd\nNow start a ssh session.... @Valdaun - Thanks for reporting the issue. We will target the fix for the next release.. This is fixed and code changes are submitted.\nPlease check the September end release.. There is no control sequence for sending \"ctrl + space\" from client to server \nYou can change powershell keyboard shortcut \nSet-PSReadlineKeyHandler -Key Tab -Function Complete\nhttps://github.com/lzybkr/PSReadLine. This is fixed and code changes are submitted.\nPlease check the September end release.. Please share the ssh logs (ssh.exe -vvv user@ip). Please share \n1) sshd.log with DEBUG3 logs (add LOGLEVEL DEBUG3 in sshd_config).\n2) output of the powershell command\nicacls C:\\OpenSSH-Win\\sftp-server.exe\n. Sftp-server runs in the user space...\nFTPUser1 doesn't have the permissions to read & execute Sftp-server..\nProvide the access (read & execute) to everyone . could you please provide the steps to repro this issue.\nCan this script be run in an azure windows VM?\nfrom fabric.api import *\ndef dir():\n    run(\"dir ..\")\n. @DominikWiesend - I used v1.0.0.0. I couldn't reproduce this issue by doing \"Ubuntu -> [Windows (SSH-Server)] -> windows\".\nHave a look at this,\n\n@pcgeek86 - Do you have the same scenario  \"Ubuntu -> [Windows (SSH-Server)] -> windows\" ? Ideally setting default shell to cmd/powershell shouldn't have any issue.. @idodeclare - I am able to reproduce the issue.\nWhen fab runs the command, sshd will receive /bin/bash -l -c \"dir ..\", requesting for a pty session.\n1) I don't know why /bin/bash is sent along with command. When ssh-shellhost.exe executes this command, it will certainly fail.\n2) why it's requesting pty session?\n. @idodeclare - I have fixed. Please try the attached private ssh-shellhost.exe. \n. Please create the pull request in the core openssh repo (https://github.com/openssh/openssh-portable/blob/master/README).\nfyi, we frequently pull the changes from the core openssh repo.. Please copy the screenshot output of repair user key permissions and the output of \nicacls id_rsa. Any update on this?. It works for me on windows 10. \nHere is the screen shot,\n\n. @vinz243 - Not sure why you are facing this issue.. we don't have anything specific to VK_OEM_5.\nAs per code we are sending \"|\" to ssh server.\nCan you try the keybased authentication so that you can login from the win32-openssh client. \nAfter you login\n1) execute \"xxd\" command\n2) Type |\n3) press Ctrl+D\nPlease paste the screenshot.\nfyi, it should look like this,\n\n. @leppakorpi, @MathiasMagnus, @vinz243 -\nCould you guys please verify if the attached private ssh.exe binary fixes your issue?\nssh.zip\n. Thanks for confirming. It will be in the next release.. @Tb0b - I have created the new issue #925.\nFYI, as a workaround you can use putty.. @Tb0b - please try the attached private binary and let me know if it works for you.\nssh-unicode.zip\nHere is the snapshot (with the private binary attached),\n\n. @Tb0b - Yes, the previous binary has only the unicode fix... \nThe attached private ssh binary now has both the unicode and the altgr related fix.\nssh-unicode-altgr.zip\n. @MathiasMagnus - We forgot to merge the PR (code fix) to the latest release.. Now its merged so the fix will be available in the next release (Dec-Mid, 0.0.25.0). Verify the output of \nicacls sshd.exe \nSshd service runs as \"Nt service/sshd\" so it should have read &execute  permissions . Please provide read, execute permissions  to  \"authenticated users\".. Get the properties of sshd.exe and in the security tab add the permissions... How are you running the sshd.exe?\nIf you run the sshd in the debug mode (.\\sshd.exe -d) then this behavior is expected.\nIs there a reason why you don't want to run this as a service? FYI, you can specify selected users/groups to have access to your sshd service.. Have you considered the option of install-sshd.ps1 and uninstall-sshd.ps1? This will leave the system in clean state, stops and unregisters the services.\nWhen you run \".\\sshd.exe -d\" the behavior in windows and unix is same (sshd.exe will stop when the current ssh session exits).\nwhen you run \".\\sshd.exe\" we spawn a new sshd.exe process for each incoming ssh connection and the forked sshd.exe requires the sufficient privileges to create new process ssh-shellhost.exe. You can find the sshd.log in the \"logs\" folder in the sshd.exe path.. If you start the sshd.exe with -d option (.\\sshd.exe -d) then it will serve only one connection. so this is expected behavior (no longer listen on port 22).\nIf you start the sshd.exe without any option (.\\sshd.exe) then we fork sshd.exe for every new connection so in this case the demon sshd.exe process will keep on listening on port 22.\nI believe you are trying first scenario.. If yes, we can close this issue.\n. Yes, it is same for ssh-agent.log.. Share the sshd.log with debug 3 logs . Following up with the conhost team...\nMoving the bug to backlog items... DefaultShellCommandOption - This is the command option associated with the default shell.\nFor cmd.exe / powershell.exe it is /c. For bash.exe (WSL) it is -c.\n\nDefaultShellCommandOption is used when user want to execute remote commands. Ex - ssh user@ip hostname.\n\nI have updated the wiki,  https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH.\nPlease let me know if I need to add more text.. DefaultShellCommandOption for cygwin is -c. DefaultShellCommandOption will take a command, executes that command and exits the shell, i.e., it is used for executing a command without opening an interactive shell.\nplease see the attached screenshot.\n\nYour registry changes should look like,\n\nOnce you have those registry settings.. you will be able to login to the cygwin-bash as default shell.\n\nDefaultShellCommandOption  is used for executing remote ssh commands like hostname,\n\n. @DarwinJS , @ryan-r-russo - I have modified the wiki instructions (step -12). Feel free to reach out to me if it requires more readable text.\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\n. Please share the sftp-server.log with DEBUG3 enabled in that time period.. I think the issue is because of the cross domain users.\nCan you try the same scenario with nested domain group within the same domain.\n. The sshd.log (with DEBUG3 enabled) will show the groups for the failed user. Could you please verify if the sshd.log has the group configured in the sshd_config.\n. I am assuming this is a question to AV?\nWe need to understand why AV considers as virus.\nFrom win32-openssh, I don't think we can do much here.. You can have as many ssh connections as you want at the same time through any ssh client. \nWhat do you mean by client access license? Users can connect with password based authentication or key based authentication (users have to generate pub/private keys).\nFor more information look at our wiki links \nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/SSH-remote-sessions-on-Windows. Please share the sshd_config and sshd.log with DEBUG3 enabled . Logs indicate that the connection is teared down by the ssh client..\n7292 05:14:37:498 debug1: Executing command: C:\\Program Files\\OpenSSH-Win64\\ssh-shellhost.exe -nopty dHJ1ZQ==\n7292 05:14:37:498 debug2: fd 3 setting TCP_NODELAY\n7292 05:14:37:498 debug3: fd 10 is O_NONBLOCK\n7292 05:14:37:498 debug3: fd 9 is O_NONBLOCK\n7292 05:14:37:498 debug3: fd 12 is O_NONBLOCK\n7292 05:14:37:498 debug3: send packet: type 99\n7292 05:14:37:498 debug3: receive packet: type 96\n7292 05:14:37:498 debug2: channel 0: rcvd eof\n7292 05:14:37:498 debug2: channel 0: output open -> drain\n7292 05:14:37:498 debug2: channel 0: obuf empty\n7292 05:14:37:498 debug2: channel 0: close_write\n7292 05:14:37:498 debug2: channel 0: output drain -> closed\n7292 05:14:37:545 debug2: channel 0: read<=0 rfd 10 len 0\n7292 05:14:37:545 debug2: channel 0: read failed\n7292 05:14:37:545 debug2: channel 0: close_read\n7292 05:14:37:545 debug2: channel 0: input open -> drain\n7292 05:14:37:545 debug2: channel 0: ibuf_empty delayed efd 12/(0)\n7292 05:14:37:545 debug2: channel 0: read 0 from efd 12\n7292 05:14:37:545 debug2: channel 0: closing read-efd 12\n7292 05:14:37:545 debug2: channel 0: ibuf empty\n7292 05:14:37:545 debug2: channel 0: send eof\n7292 05:14:37:545 debug3: send packet: type 96\n7292 05:14:37:545 debug2: channel 0: input drain -> closed\n7292 05:14:37:545 debug1: Received SIGCHLD.\n7292 05:14:37:545 debug1: session_by_pid:. @naatje80 - We are renaming the dll to exclude the version number so the new release (yet to be released) will have libcryto.dll instead of libcrypto-41.dll.. You can delete the file.. It will not have any impact..\n. We don't have log throttling implemented because our long term goal is to move away from the log files.. \nEnable minimal logging so that the file will not grow fast. Have a periodic powershell scripts to backup and delete the log files.. @BrandonRoyal - When you launch an interactive ssh session (ssh -p 2222 vagrant@localhost), are you getting powershell as default shell?\n. @BrandonRoyal - Sorry for the late reply..\nI have created the private ssh-shellhost binary. Please use this binary (replace existing ssh-shellhost.exe with my private ssh-shellhost.exe), it will show error message and the configured default shell..\n1) Use \"Get-DefaultShell\" command display the default shell. Please note that this is a private command and not a powershell command.\n2) Over the ssh client, just to make sure please issue \"reg query \"HKEY_LOCAL_MACHINE\\SOFTWARE\\OpenSSH\" /v DefaultShell\" command that shows the registry value.\nHere is how it looks,\n\n. Any update on this?. @BrandonRoyal - Could you please try the steps I mentioned and provide the information.. please reopen with required information.. @woegjiub - can you try steps mentioned above dated \"Dec 6 017\". @JonathanHolvey - Did you check your \"Screen Buffer width and Window Size\" > 90.\nplease go through https://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH.\nWhat win32-openssh version are you using? Is it repro all the time?. @dwatley - ssh.exe included with git doesn't run.\n\nThis might be a git ssh.exe problem as it's not seen on putty, Chrome SSH App and OpenSSH-Win64.. @dwatley - Starting from windows 10 October 2018 update, we are going to use conpty supported provided by the Microsoft console team at server side. A bunch of serverside console rendering issues will be resolved including this.\nHaving said that, we still need to investigate this for down level OS. Fix for downlevel OS is not aimed for next release.. @fjaenal - Powershell/chocolatey automates the installation process. If you can do the same thing manually or using batch script then you are good.\n. nope. Those permissions are mandatory. You can configure the permissions manually as well but it is time taking process.. Reopening this issue to fix properly.. update the binaries.. We tested windows 7 and above. As per windows lifecycle fact sheet, Microsoft doesn't support Windows XP SP3.\nHaving said that, you can try the latest release. If it didn't work then we may not be able to support windows XP SP3.. Your environment path variable should have the libcrypto.dll (\"$openssh-portable\\contrib\\win32\\openssh\\LibreSSLSDK\\\\libcrypto-41.dll\").. please copy the \"$openssh-portable\\contrib\\win32\\openssh\\LibreSSLSDK\\\\libcrypto-41.dll to \"c:\\windows\\system32\" folder so that it will always be part of environment path variable.. error 1789 - ERROR_TRUSTED_RELATIONSHIP_FAILURE\nCan you try the below URLs and see if it works?\nhttps://community.spiceworks.com/how_to/108912-fix-the-trust-relationship-between-this-workstation-and-the-primary-domain-failed\nhttps://support.microsoft.com/en-us/help/2771040/-the-trust-relationship-between-this-workstation-and-the-primary-domai. Enable the putty logs and debug further. \nIn case if you are using domain user account then try like this,\nssh -l user@domain host (or)\nssh domain\\user@host (or)\nssh user@domain@host. Please share the sshd.log (DEBUG3 enabled) when sshd failed to start as service.. @MaximoTrinidad - Most likely its related to the host key file permissions. \nPlease run \n1) .\\FixHostFilePermissions.ps1 -Confirm:$false. \n2).\\uninstall-sshd.ps1\n3) .\\install-sshd.ps1\n. @surendrasake - \nPlease provide the steps to reproduce. \nAre you using the ssh provided by the Cygwin?\n. Any update on this? . @drichardson - Are you using windows inbox openssh (or) you downloaded from our GitHub page?. @robertpeteuil - Different delimiters is a display issue but not a functionality issue.\nAs @manojampalam  mentioned, Windows inbox Beta version currently supports one key type (ed25519).\nOne key thing to focus is we support only utf-8 encoding file format .. @DrPizza - As per logs ed25519 is not found.\ndebug1: identity file C:\\Users\\DrPizza/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory. @DrPizza  - ah, missed that (directory listing)..\ncan you please share DEBUG3 (-vvv) enabled ssh logs\n\"ssh -vvv user@lunix.quiscalusmexicanus.org\"\n. @DrPizza - Good to know that its working now.. It would be great if you can update your blog so that people will not be missguided.. Looks like sshd is not running under the context of \"NTService\\sshd\".. \nFor this reason sshd, ssh-agent were not able to communicate.\nFrom ssh-agent log,\n5292 14:21:39:385 error: cannot process request: client process is not admin or sshd\n5292 14:21:39:385 debug1: connection 000000C30CA1D6E0 clean up\nFrom sshd.log,\n5548 14:21:39:354 debug1: matching key found: file C:\\Users\\user1\\.ssh/authorized_keys, line 1 RSA SHA256:TJOtdjyFmlFiQZQfgtx8xlylS6R6+Wwy4C9/flwx4to\n5548 14:21:39:385 debug1: unable to send pubkeyauth request\n5548 14:21:39:385 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\n5548 14:21:39:385 Failed publickey for ACCOUNTS\\user1 from 10.123.543.12 port 59802 ssh2: RSA SHA256:TJOtdjyFmlFiQZQfgtx8xlylS6R6+Wwy4C9/flwx4to. I would suggest you fix the issue why the sshd service is not running as NTService\\sshd.\nPlease follow the install instructions.. \nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\n(or)\ninstall using chocolatey\nhttps://chocolatey.org/packages/openssh\n. Please raise the PR on https://github.com/PowerShell/openssh-portable repo.\n. Populate the powershell full path as shown in the picture \nhttps://user-images.githubusercontent.com/23668037/32013581-67206dca-b970-11e7-8820-fde658d302c1.png\n. please reopen if you have issues... Any update?. please share us the sshd.log (DEBUG3 enabled)...\nfrom the ssh client logs its unclear why the sshd server is sending protocol error.\nReceived disconnect from 11.170.184.40 port 22:2: protocol error. please reopen if required with requested information.. This is an expected behavior.\nvagrant terminal is not a standard console terminal so your ssh session is treated as \"No pty session\".\nplease see the highlighted (in red color) text.\n\nfyi, we call GetFileType() and expect it to return FILE_TYPE_CHAR (for console terminals).. \"-t\" will be ignored because its not a standard terminal.\nInclude the ssh.exe in the path and try the same from powershell/cmd.exe, that should solve your problem.. Have you tried the ssh that comes with the WSL?. From vagrant console, you are invoking \"windows vagrant.exe\" from WSL which requires \"windows ssh client\"?\nIs it possible from powershell, get into WSL and from there you can invoke \"windows vagrant.exe\"?\nIf yes then you don't see this problem. \nIf not then try other ssh clients (like putty/Cygwin).. \nFrom windows openssh side we can't support this scenario because we internally use the windows conhost.. BTW, you can still do all the stuff with \"no pty ssh session as well\" except that some keystrokes don't work like up/down/left/right, tab, etc.. can you try using windows openssh client instead of vagrant ssh and try the same steps\npowershell -> Ubuntu WSL -> vagrant using windows openssh client (not embedded Cygwin ssh client).. Thanks for trying different configurations.\nI debugged further. It's not possible to have ssh pty session when launched from WSL (Windows subsystem for Linux) no matter you logged into WSL from powershell/cmd/from other console terminal.\nHere is the detailed explanation,\nwindows ssh.exe allocates a pty session only if ssh.exe has access to the console terminal. \nsshd will instruct the ssh.exe client to move the cursor position, set the console properties, etc.\nIf we launch the ssh.exe client from WSL (Windows subsystem for Linux), the ssh.exe will be launched as a windows process whose STDIN/OUT will be pipes to WSL, so ssh.exe client can't control the console terminal.. Closing this issue as it's related to WSL.\nPlease track the issue on https://github.com/Microsoft/WSL/issues/2406. it will be in user@domain@machinename format.\nis domain& machinename same in your case?\nThis is just a comment so it will not do any harm.. on the ssh server side, did you configure Defaultshell  in the windows registry(HKLM\\SOFTWARE\\OpenSSH\\DefaultShell)? If yes then there is no need to mention bash -c.. Any update on this?. please reopen if required.. Please create the pull request in the core openssh repo (https://github.com/openssh/openssh-portable/blob/master/README). \nfyi, we frequently pull the changes from the core openssh repo.. Can you provide the sshd.log with DEBUG3 enabled..\nAre you seeing this issue all the time?\nAlso have you tried restarting sshd deamon process (net stop sshd; net start sshd)? Did it help?\nUnfortunately we don't have log throttling mechanism as our long term goal is to move away from log file to windows logging..\nAs a workaround to throttle the sshd log,\ncreate a task scheduler task that would run the following PowerShell script (edit as needed) at intervals. It empties contents of sshd.log into a backup file once sshd.log breaches 25MB\n```\nif ((Get-ChildItem .\\logs\\sshd.log).Length -gt 2510241024)\n{\ncopy-item .\\logs\\sshd.log .\\logs\\sshd.log.prev\n$null | Set-Content .\\logs\\sshd.log\n}\n```. it would be great if you can repro the issue and provide the complete log file that covers service restart, working for 10 minutes and start seeing the issue again..\nissue #935 is about log throttling but not related to this.. If you have a close look at the #935 description, they are using 0.0.10.0 (might be a year old).. The current version is 0.0.24.0..\n. This might be related to #787\nfyi, we couldn't reproduce #787 as well and we don't have proper logs (DEBUG3 enabled)..\nIt would be great if you can provide sshd.log with DEBUG3 enabled so that we can analyze from log file.. Any update on this . There is no concept of running background console jobs in Windows??. You might not have sufficient permissions to install-sshd.ps1. Please reopen of required... Looks like you are using the windows inbox version of openssh.  If yes the this is expected.. The initial version has support for only ed25519.. \nYou can try our github version that has latest and greatest version... Reopen if required . Yes, it will be in our next release.. I guess the next release is in April.. . Are you sure you are using 1.0.0.0?. Try to start the sshd in debug mode (./sshd.exe -ddd).. . Did you generate the host keys?\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\nFollow step 8,9. Check for the sshd.log by enabling DEBUG3 . Error 1326 means, Credentials are wrong..\nIs it a domain account? If yes, try ssh.exe user@domain@ip\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/ms681385(v=vs.85).aspx\nERROR_LOGON_FAILURE\n1326 (0x52E)\nThe user name or password is incorrect.. You need to specify subsystem powershell in sshd_config \ndebug2: subsystem request for powershell by user proxyadmin@myvm\nsubsystem request for powershell by user proxyadmin@myvm failed, subsystem not found\ndebug3: send packet: type 100\n. Looks like ssh-agent is not running..\n1844 23:50:12:668 debug1: unable to send pubkeyauth request. Sshd should run as Nt service/sshd or as admin.. You need to fix this.. . Try running uninstall-sshd.ps1... Followed by  install-sshd.ps1. Please wait for the next windows update or use the latest github version... @ZURYB - Thanks for reporting.. please wait for the next release (Jan-Mid).\nMeanwhile, you can use the attached private scp binary.\nscp_nondef_port_fix.zip\n. I think you got confused.\nssh-keygen -A -> generates the host keys.\nssh-keygen -t -> generates the user keys, used for key-based authentication.\nFor the scenario mentioned above you don't need ssh-keygen -A. ssh-keygen -t - generates the keys with right permissions. . If you use public key authentication then you don't need to create the actual users?. Keep all the public keys in one authorised key file and configure hard coded path of authorized key file (AuthorizedKeysFile ) in sshd config.. . Looks like it didn't take the config.. Please share the sshd_config . Also share the full sshd log with debug3 enabled . @mgkuhn  is correct. please do as he suggest.\nModify your sshd_config (to exclude double quotes in the path),\nAuthorizedKeysFile D:/sft/OpenSSH-Win64/authorized_keys\n. @hamedsbt - can we close this issue?. @hamedsbt - You are right. Code strips off double quotes so it doesn't make any difference.. Yes. Thanks, updated our wiki https://github.com/PowerShell/Win32-OpenSSH/wiki/Project-Status. Yes. GitHub will have latest binaries.\nWindows will take its own schedule so it will always have a older version.. Any update?. Any update?. @gfb1 - Please share ssh logs (ssh -vvv user@ip) and sshd.logs (DEBUG3 enabled).. @gfb1 - Have a look at the sshd.log (With DEBUG3 enabled).. @Magneticdud - can you try path in unix style (C:/windows/system32/OpenSSH/ssh.exe).\nLook at the implementation of create_process().. It's a win32 API.. You missed to fix the host key permissions.\nPlease follow the install instructions here \nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH. @dfmuscat - We support all the platforms (X86, X64, ARM-32, ARM-64).. I guess  it's because you are typing $False instead of $false.\nIf you observe the error message it didn't recognize $ before False . Thanks, I have updated the wiki \nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH. Please check this in the latest release . Windows OS doesn't provide the CHROOT functionality. In order to achieve this you need to use the windows security model. You can provide access to individual folders in combination with creating windows distribution list/groups . No... Windows folder properties will allow you to provide the secured restricted access... Its already documented..\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples. We need to change the path,\nSSHD resources - sshd_config, hostkeys are moved to a dedicated directory - %programdata%\\ssh\nAlso we need to provide steps for existing customers \n1) After .\\install-sshd.ps1, replace the %programdata\\ssh\\sshd_config with user specific sshd_config.\n2) Copy user specific host keys to %programdata\\ssh\n3) Need to \".\\FixHostFilePermissions.ps1 -Confirm:$false\" fix the host key permissions to remove \"NT Service\\sshd\". User should make sure binary location has the write permissions to just SYSTEM, Administrator groups.. I meant host keys generated by admin user (not per user specific).\n. Are you running Sshd debug mode as system? If not please see the release notes . I have created the private ssh-shellhost binary. Please use this binary (backup, replace existing ssh-shellhost.exe with my private ssh-shellhost.exe), it will show error message and the configured default shell..\n1) Use \"Get-DefaultShell\" command display the default shell. Please note that this is a private command and not a powershell command.\n2) Over the ssh client, just to make sure please issue \"reg query \"HKEY_LOCAL_MACHINE\\SOFTWARE\\OpenSSH\" /v DefaultShell\" command that shows the registry value.\nHere is how it looks,\n\n. I tried on my side, it worked..\ncan you give a try one more time. After you do ssh, copy & paste \"Get-DefaultShell\" instead of typing.. Are you sure you are using my private ssh-shellhost binary?. @wlsfan - It's my private binary. Not sure why its not working.\nI have created another private binary, please try this.\n1) Move existing ssh-shellhost.exe to ssh-shellhost_bkup.exe\n2) Copy my new private binary to your binary location (C:\\program files\\openssh). \n3) launch the ssh with no-pty session, \"ssh -T user@ip\"\n4) It should dump the error code if it fails. \nHere is the snapshot,\n\n\n. @wlsfan  - WSL has fixed this error. \nHere is the WSL issue,\nhttps://github.com/Microsoft/WSL/issues/2322. Also have a look at this,\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/289\n. Please reopen if required.. We are creating folders with explicit ACLs (system, administrator group - full control and authenticated users - read & execute)..this is part of install-sshd.ps1. please check\n1)%programData%\\ssh\\sshd_config - exists\n2)%programData%\\ssh\\ - exists\n3)run .\\FixHostFilePermissions.ps1 -Confirm:$false.\nIf it didn't work then run the sshd.exe in debug mode and debug further.. please have a look at the release notes.. I think you need to run ( .\\FixHostFilePermissions.ps1 -Confirm:$false) which will fix host key, authorized key file permissions. Its mentioned in release notes under breaking changes.\nIncase if it didn't work then please share the sshd.log (with DEBUG3 enabled) and ssh log (ssh -vvv user@ip). @ne0c0de - You need to start the sshd debug mode in system context.\n1) execute \"psexec -i -s cmd\"\n2) on the new popup windows, issue \"whoami\" this should show \"nt authority\\system\"\n3) Now launch the sshd in debug mode \".\\sshd.exe -ddd\". This might be related to permission issue. please provide \"read, execute\" permission for \"users\" account  to \"C:\\Users\\test\\OpenSSH-Win64\\OpenSSH-Win64\". For Linux issues, please post under openssh GitHub repo https://github.com/openssh/openssh-portable\n. can you try like this,\nssh-keygen -t ed25519 -Z aes128-ctr. Yes its because openssh installed through windows feature on demand doesn't support LibreSSL. FYI, this is fixed in upcoming releases.. Looks like ssh-agent is not running. From an elevated command prompt, do \"net start ssh-agent\".\nFrom task manager check if ssh-agent process is running. Then issue ssh-add command.. @elijahgagne - This is expected behavior because of a bug in conhost.exe.\nssh client uses conhost.exe (provided by windows OS) to interpret the ANSI sequences. When we resize ssh client windows, the conhost.exe writes the data to a different location as the viewport changes. To mitigate this, we restore the window back so restore will get lost.\nI have also raised a bug against conhost team.\nAlso updated known issues in https://github.com/PowerShell/Win32-OpenSSH/wiki/TTY-PTY-support-in-Windows-OpenSSH.. Unfortunately it's  not possible as conhost bugs are internal to Microsoft. We will update our wiki page  periodically.. Yes, it's a typo.\nI corrected it.. @lupo1977  - we still need more changes to make custom lsa to work.\nI am about to raise the PR related to this.. Yeah it's a bug as the registry creation logic is in ssh-agent. Ssh-agent is an optional component to run... As a workaround just start and stop the ssh-agent service.. @wigster - Try running .\\uninstall-sshd.ps1, .\\install-sshd.ps1. duplicate of https://github.com/PowerShell/Win32-OpenSSH/issues/1045.\n. This is an expected behavior and is inline with UNIX.. Looks like you \"%programdata%\\ssh\" is not created.\nFollow steps mentioned in our official blog, \nhttps://blogs.msdn.microsoft.com/powershell/2017/12/15/using-the-openssh-beta-in-windows-10-fall-creators-update-and-windows-server-1709/. @johnny5janbohac -\nAnalysis\nwhen we failed to generate user token then we will try using FakeUser. This is a workaround for issue \nhttps://github.com/PowerShell/Win32-OpenSSH/issues/727\nCode : https://github.com/PowerShell/Win32-OpenSSH/blob/L1-Prod/contrib/win32/win32compat/win32_usertoken_utils.c#L341\nNext steps to debug further\n1) Does your sshd service run as SYSTEM?\n2) If yes, have you tried the workaround mentioned by @dwatley (User Rights Assignment policy via secpol.msc)\n3) Make sure all your binaries have \"read, execute\" permissions to \"Authenticated users\" account.. please share the sshd_config and sshd.log (with DEBUG3 enabled). Looks like sshd service doesn't have permission to root drive like \"c:\\\" (drive in which sshd binary exists).\nAs per the comments around the logic, it can be ignored. \nThis problem can be solved if you move to new version v1.0.0.0 in which sshd service starts as SYSTEM,\nHere is the code snippet,\n\n. During SCP failure did you see any errors in sshd.log? \nI would suggest to use new version v1.0.0.0.\n. FYI, We have a strict check that the PROGRAMDATA should be in the start of the file name.. We suggest full file paths in sshd config . @dwatley - Thanks for pointing the path resolution issue of PROGRAMDATA in AuthorizedPrincipalsFile. There is a minor bug, I have fixed it. Here is the private binary.\nplease take backup of sshd.exe, use private sshd.exe.. From cmd start.  .\\ssh-agent.exe -d. Reopen if required.. Right now it's still in beta.. Soon we will move to production ready. We will have binaries when we are production ready . Make sure your binary folder is read by all authenticated users . There are architectural changes between previous version and current version..\nWe suggest the new version.. Any update?. Reopen with required logs.. @DarkHack - as per logs, it looks like ssh client is closing the connection. It could be because there is no common protocol that both server, client can agree. share ssh client logs (ssh.exe -vvv user@ip).. please provide the server side logs sshd.log (with DEBUG3 enabled). @StrikerTwo - Since it works with FileZilla, try to compare the sshd.log and figure out the difference.\nAlso please make sure the binary folder has the only read access to \"Authenticated Users\".. This issue looks to be an issue with your configuration, environment.\nI am closing this issue as it works with FileZilla.\n. @lejeczek - Did you configure default shell at the server side?\nFYI, sshd will send the background color of the default shell it launched to the client.\nIf you didn't configure default shell in windows registry then cmd.exe (whose background is black) will be the default shell. \nwhat is the difference between v0.0.24.0 and v1.0.0.0.. @lejeczek - Can you try my private ssh-shellhost.exe.\nAs part of V1.0.0.0, I have a fix related to coloring.. Here are the steps, \n1) cd to your binary folder.\n2) backup existing ssh-shellhost.exe (move ssh-shellhost.exe  ssh-shellhost.exe.bk)\n3) copy my private binary to the binary folder.\n4) Make an ssh connection.\nThe fix went in v1.0.0.0 is correct.. The fix went in v1.0.0.0 is correct fix. This is expected behavior.\nsshd process will send text with foreground, background color. If you don't specify any terminal, sshd will use cmd.exe as it's client. cmd.exe foreground, background colors will be sent to ssh client.. Reopen if you think it's a bug.. Try logging like this,\nssh user@domain@host\nIf it didn't work then share sshd.log with DEBUG3 enabled and ssh log (ssh -vvv user@domain@host).. @lejeczek - Can you try the latest version v1.0.0.0.. @lejeczek - please share sshd.log (DEBUG3 enabled) and ssh -vvv user@ip. Duplicate of https://github.com/PowerShell/Win32-OpenSSH/issues/289\nClosing this as its a bash issue.\n. Any update on this?. Thanks @NoMoreFood.\nYes, psexec /d /i /s cmd.exe spawns a new cmd windows as system. When we start sshd in debug mode, CTRL+C it terminates the sshd process and comes back to new spawned cmd window.. @XceSx6 - We are in sync with openssh unix code. \nIf you are requesting for new features then follow up with openssh folks https://www.openssh.com/report.html.\nOur goal is to get integrated with openssh core code so we don't support adding new features.. Duplicate of #289\nClosing this as its a bash issue.. I think you are using windows optional ssh feature from windows 10?\nWindows optional ssh feature supports only ed25519 (doesn't support rsa, dsa, ecdsa).\nTry the GitHub openssh version\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH. Yes remove the windows feature and install (.\\uninstall-sshd.ps1;.\\install-sshd.ps1) the sshd from openssh.\n. Reopen if required.. It failed during KEXINIT (way before public key authentication is tried).\nError Log - \nUnable to negotiate with 156.140.12.92 port 22: no matching cipher found. Their offer: aes256-cbc,aes192-cbc,aes128-cbc\nTo debug further, enable debug3 logs at client side, ssh -vvv -T hillr@tfs7.it.acme.com. Server supported ciphers:\ndebug2: ciphers ctos: aes256-cbc,aes192-cbc,aes128-cbc\ndebug2: ciphers stoc: aes256-cbc,aes192-cbc,aes128-cbc\nClient supported ciphers:\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\nYou either need to enable cbc ciphers on client\nex. ssh -c aes256-cbc\nor ctr ciphers on your target (check sshd_config man page). ssh -Q cipher - This command lists all the cipher algorithms supported by ssh client.\nWhen you try to make a connection, both ssh.exe (client) and sshd.exe (Server) should agree on a common cipher. If there is no common cipher then session will be terminated.\nModify your sshd.exe to include the client supported ciphers (check sshd_config man page).. Have a look at this,\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Setting-up-a-Git-server-on-Windows-using-Git-for-Windows-and-Win32_OpenSSH\nThere is a way to specify the options for ssh ($env:GIT_SSH_COMMAND). Ubuntu version of ssh have a common cypher supported by sshd process.\nWindows version of ssh doesn't have a common cypher supported by sshd process.\nDuring KEX_INIT, both server and client should agree on a common cypher algorithm. If not then session will be terminated.\nSince its working now, I am closing this issue.. In case of no-pty (like this), we directly launch default-shell. Here is the code snippet\nIn case of pty (interactive ssh session), we launch default-shell through cmd.exe. Here is the code snippet. I don't think there is a need to escape double quotes on pty route.\npty route should work without any issues.\nIn case of no-pty, the issue is the way we pass the received command to createprocessw().. @henti - We couldn't reproduce this issue. \nSo we need your help,\n1) Log on to windows machine that has sshd executable\n2) Download my private binary to any test folder.\n3) Unzip and execute the binary based on system type (X86, X64).\n4) Paste the output.\n. @henti - I tried on my win7 machine, it worked perfectly.\nLooking at the output you shared, \n\"RegOpenKeyExW (SOFTWARE\\OpenSSH) failed:2\"  - error 2 means file not found.\nCan you double check if you configured the Default shell at \"HKLM:SOFTWARE\\OpenSSH\". could you please elaborate. Also provide the reproduction steps.. @NoMoreFood - Thanks for filing a bug.\nHow do you point symbolic link as initial directory?\nAlso could you please provide the sshd.log (with DEBUG3 enabled) in both working and non-working scenarios.. @llinyu  - Enable more debugs logs, sshd.log (with DEBUG3 enabled), ssh logs (ssh -vvv user@ip).\nPlease validate what's difference between putty and win32-openssh ssh.exe.\n. Update - \nsetting the default shell manually, it works perfectly fine.\nIf fails, when we use powershell script to set the default shell.. @NoMoreFood - This repo is for tracking issues.\nPlease create a pull request in https://github.com/PowerShell/openssh-portable repo. @Suncatcher - Starting from v1.0.0.0, ssh-agent is an optional service. \nThe \"OpenSSH Server\" installed from \"Windows optional feature\" is based on v0.0.18.0 and it runs the ssh-agent by default. In release v.0.0.18.0, ssh-agent is used for generating user token, key based authentication and also secure key management.\nIf you install from GitHub latest, ssh-agent will be added as a service but it will not be started.\nIn latest Github release (after v1.0.0.0), ssh-agent is used for secure key management.\n. I am guessing, it might be related to executables permission.\nAll the executable should have,\n1) \"read,execute\" permissions to \"authenticated users\".\n2) \"Full Control\" to \"SYSTEM\"\n3) \"Full Control\" to \"administators\" group\nIf you have permissions to other users/group then delete those permission and try your scenario.. @psmolkin - Did you get a chance to verify the difference in sshd.log (DEBUG3) for key based authentication vs password authorization?\nAs per the sshd.log shared above, the key based authentication is successful.\n6440 2018-03-06 11:18:24.591 debug3: mm_answer_keyverify: publickey 000000F1A9BA84D0 signature verified\n6440 2018-03-06 11:18:24.591 debug3: mm_request_send entering: type 25\n6440 2018-03-06 11:18:24.591 debug1: monitor_child_preauth: user1@domain1 has been authenticated by privileged process\n6440 2018-03-06 11:18:24.591 debug3: mm_get_keystate: Waiting for new keys\n6440 2018-03-06 11:18:24.591 debug3: mm_request_receive_expect entering: type 26\n6440 2018-03-06 11:18:24.591 debug3: mm_request_receive entering\n6440 2018-03-06 11:18:24.591 debug3: mm_get_keystate: GOT new keys\n6440 2018-03-06 11:18:24.591 debug2: userauth_pubkey: authenticated 1 pkalg ssh-rsa [preauth]. Any update on this? I tried, it works.. @simenmusaeus - Please create a issue with powershell team.. As commented in the issue #1007, this is not required as \"net start sshd\" will run the \"ssh-keygen.exe -A\". The generated host keys will have proper ACLs.\nI think it can be closed?\n. FixHostFilePermissions.ps1 is our final solution to fix existing host key files. We will resolve bugs in FixHostFilePermissions.ps1. I don't think there is a need for this bat file.. It's expected.\nHave a look at https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH (step 4). @alphaCTzo7G - You are using win32-openssh server components from this repo?\nASFAIK, default version of openssh that comes with the VM is not our code base. I would suggest to use, ssh.exe that comes with our win32-openssh package.\nPlease share sshd.log (With Debug3 enabled) and ssh logs (ssh.exe -vvv user@ip).. ipython is working. If you page up you can see the output of ipython commands.\nThe issue is with the bad rendering (introducing an empty page) by the ssh-shellhost.exe.\n. Win32-openssh ssh-agent implementation is different from others.\nWin32-openssh ssh-agent will store the keys in windows registry in an encrypted format.\nI don't think you can add keys with win32-openssh ssh-agent and retrieve it by using Github ssh-agent.\n. To debug further, enabled DEBUG3 logs in sshd.log.. Please debug further,\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. #1098  is fixed in the recent release 7.6.1.0p1. please try the latest release.. Reopen if the issue is not fixed.. @musm - Due to a bug in conhost.exe (windows console executable), we don't support resizing. If you resize then we restore the window back.. I already filed a bug. Conhost team is working on it.\nUnfortunately this bug can't be tracked outside of Microsoft.. I have listed the known console issues related to conhost.exe. \nPlease file  new issue if it's not a known console issue.. FYI, TFS ID - 15683949. Please try troubleshooting steps,\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. I updated the wiki.. Try removing \"NT Service/sshd\". Starting from v1.0.0.0 we don't need this.\nPlease verify these,\n1)  sshd service runs as service.\n2) all the binaries (*.exe) have \"read, execute\" permissions to \"authenticated users\".\n3) Enable DEBUG3 sshd logs \n       a) net stop sshd\n       b) modify %programdata%\\ssh\\ssh_config (LOGLEVEL DEBUG3)\n       c) net start sshd\n4) Follow our troubleshooting steps\n5) if nothing helps then share the sshd.log (with DEBUG3) enabled and ssh logs (ssh -vvv user@ip).. Looks like you are running into a known bug #1098.\nIt will be fixed for next release.\nwe suggest to use v1.0.0.0.\n. see issue #518. win32-openssh support down to win7 client or windows server 2008 R2.\n. closing this issue as it's not supported.. No, the account will not be created on demand. This logic is inline with the UNIX.\n. @zack-snyder - Looks like you are using windows optional feature. If yes then we support only ed25519.\nTry using our github latest release binaries. @zack-snyder - The version number mentioned in the issue description is 0.0.18.0. If you are using the GitHub version then you shouldn't hit this issue. Please note that the sshd_config location has changed to %programdata%\\ssh\\ starting from v1.0.0.0. \nsshd.exe doesn't support \"--version\". FYI, SSHD man page\nPlease try our troubleshooting steps. If you still hit the issue then share sshd.log(with DEBUG3 enabled), ssh log (ssh -vvv user@ip).. sure, if you have free cycles.. This link should help.\nYou need client side changes to use our win32-openssh client.. Did you try \n1) net stop sshd\n2) net start sshd\n. sshd service failed to start. To debug further try our troubleshooting steps.\nafter psexec, try .\\sshd.exe -ddd\n. My bad, I missed it.\nDuring sshd service start, we create \"sshd\" user. This is a mandatory step as the base unix code requires \"sshd\" user.\nTo debug further, please try this private sshd binary. This binary contains the error log.\n1) from cmd.exe, use psexec to login as SYSTEM (psexec  /s cmd)\n2) run \"whoami\". It should show \"nt authority\\system\"\n3) make sure sshd user is not present.\n4) run \".\\sshd.exe -ddd\". This should be my private binary so that it shows error log.. Please retry this updated private binary.\nPlease try the same steps as above.\nYou will see two debug logs\n1) starting the prerequisite setup\n2) Failed to create user sshd, error: \n. Are you sure, you are using my private sshd binary?. @HSSupport - My apologies. I expected printf() to write log to the command prompt but it didn't.\nTo overcome let's add the \"sshd\" user from an elevated command prompt.\nnet user /add sshd P@ssword_1. if \"sshd\" user doesn't expect, sshd service creates \"sshd\" user with random password. So if we are doing manually then we should also use random password so that no one else can use these credentials to login. \nNow the problem is resolved, I would suggest to change the password to a random password.\nFYI, sshd user is a non-admin user.\n. Does sshd service run as SYSTEM?\nIf yes, try our troubleshooting steps.\n. @dwatley - \nDid you try Start-OpenSSHBuild  command by importing OpenSSHBuildHelper.psm1 as mentioned here.\nFYI,  Start-OpenSSHBuild will download the LibreSSL from latest release and places the LibreSSL folder to this location $openssh-portable\\contrib\\win32\\openssh. LibreSSL folder will contain two folders \"bin\", \"sdk\".\nFYI, I have updated the wiki https://github.com/PowerShell/Win32-OpenSSH/wiki/Building-using-VS-2015. 1) Looks like the file (C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\contrib\\win32\\openssh\\OpenSSHReleasex64.log') is not writable from the powershell window. May be you need to run powershell in elevated window?\nAdd-Content : Could not find a part of the path\n'C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\contrib\\win32\\openssh\\OpenSSHReleasex64.log'.\nAt C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\OpenSSHBuildHelper.psm1:24 char:9\n+         Add-Content -Path $script:BuildLogFile -Value $Message\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\dwatle...HReleasex64.log:String) [Add-Content], DirectoryNotFo\n   undException\n    + FullyQualifiedErrorId : GetContentWriterDirectoryNotFoundError,Microsoft.PowerShell.Commands.AddContentCommand\n2) Script fetches, copies the LibreSSL to desired location.\nDownload, Copy LibreSSL\nLibreSSL copied successfully\nStarting Open SSH build; Build Log: C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\contrib\\win32\\openssh\\OpenSSHReleasex64.log.\n3) FYI, our CI system uses \"Start-OpenSSHBuild\" so I expect it to work always.. Looks like you have \".git\" folder in \"C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\".\nThe logic to determine the OpenSSHRoot is here.\nThe build log path is determined like this. Try https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. @archiker - As per logs, you didn't provide domainname so it's expected.\ndebug3: NetUserGetInfo() failed with error: 2221 for user: m1234 and domain: (null)\nYou also mentioned, ssh \"user@domain@ip\" also didn't work? Please share sshd log for \"ssh user@domain@ip\". Please make sure you are running as system (execute \"whoami\" command) while you run sshd in debug mode (sshd.exe -ddd).\n\n. As per logs Error 1212 is ERROR_INVALID_DOMAINNAME.\ndebug3: NetUserGetInfo() failed with error: 1722 for user: m1234 and domain: mgmt@10.54.171.9\nDsGetDcNameW() failed with error: 1212\nInvalid user m1234@mgmt@10.54.171.9 from 159.42.20.166 port 51996\ndebug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 0\nNext steps -\nIt might be related to https://github.com/PowerShell/Win32-OpenSSH/issues/1098. Please use the latest release binaries.\n. Can try the full domain name (ssh user@mgmt..com@ip)... If you specify \"ForceCommand internal-sftp\" in \"%programdata%\\ssh\\sshd_config\" file then it will only allow sftp connections.. When you try to do ssh/scp it will fail with error \"error: This service allows sftp connections only\" (in sshd.log / ETW log, depending on your configuration).\nWe have a PR inprogress for chroot support in SFTP.\nI tried (allowing only SFTP connections) with the latest release binaries and it worked. If you run into any issues then follow our troubleshooting steps. \nIf you still have issues then share your sshd_config, sshd.log (with DEBUG3 enabled).. hmm looks like there is a bug.. change username to all lowercase in match block \nMatch User testssh@doma.local\nForceCommand internal-sftp. Thanks for reporting.. I have updated the wiki.. Windows 10 conhost provides the support for parsing the ANSI buffer. We determine this based on setting ENABLE_VIRTUAL_TERMINAL_PROCESSING  console mode. You can report console issues here.\nWe don't support third-party terminal emulators. For Windows 10 below, we have custom ANSI parser that supports only VT100. \n. Yes, we expect all components to build with onecore.lib.. @dwatley - \"Get-Help about_*\" has no rendering issues over SSH. What was the exact command you are trying?\n. Win32-OpenSSH requirement is to have a DLL (we named it as libcrypto.dll) instead of EXE (openssl.exe). . @MathiasMagnus @franklinyu - Your findings are unrelated to this issue. They land up in different code base.\nPlease note that ssh.exe uses conhost.exe (owned by console team) from win10 onwards to parse the incoming VTSequence. I advise you to file an issue here https://github.com/Microsoft/console/issues.\n. @franklinyu - Please file a new bug, will look into this further.. Please update the issue with problem description.. Please try the private ssh.exe ssh-fix-backspace.zip\n. Here is the code fix, https://github.com/PowerShell/openssh-portable/pull/325/files. Sure, The fix will be part of next release. I will close this during that time.. You need to fix the authorized_keys file permission..\nFollow instructions here https://github.com/PowerShell/Win32-OpenSSH/wiki/OpenSSH-utility-scripts-to-fix-file-permissions.\nIf you still run into issues then follow https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps.\n. Now run the sshd as service (net start sshd).. It should allow you to login using key based authentication..\nsince you are not using psexec, It failed to generate token.. It's expected.. @Remeron - copy your identify file (id_rsa) to your user profile folder (c:\\users\\.ssh) and make sure the permissions are good after copying.\nNow you will be able to login using \"ssh user@ip\", \"sftp user@ip\".. This eliminates the need of passing \"-i \".... Please share server side logs (sshd.log with DEBUG3 enabled)..\nIf you still run into issues then follow https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps.\n. We support only UTF8 encoding.. That might be the issue.. If there is a bug with spaces then it has to be fixed in code.\nWe still suggest C:\\program files as it ACLs properly.. @surli - It's already fixed https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.7.1.0p1-Beta. Please let us know if you have any issues with latest release (7.7.1.0p1-Beta).. I am referring to v7.7.1.0.p1-Beta. You are referring to old version v7.7.0.0p1-Beta.. @gayantd - fyi, ChrootDirectory restricts folder access only in sftp, scp. If you use ssh then folder restrictions will not apply. Windows OS doesn't have inbuilt ChrootDirectory implemention.\nIncase of sftp, scp, our code first checks the folder restrictions (if ChrootDirectory is configured) before executing command using WIN32 APIs. Incase of ssh, each user character is fed directly to console so we don't have a way to restrict user to a folder.. 1) Add these lines to c:\\programdata\\ssh\\sshd_config \nMatch User *\n    ForceCommand internal-sftp\n    ChrootDirectory  \n2) Restart sshd (net stop sshd, net start sshd)\n3) Validate both sftp, ssh.. Yes.. configuration is same between UNIX, windows.. You don't need to run any ps1 scripts.\nIt's a configuration change.\n1) Add these lines to c:\\programdata\\ssh\\sshd_config\nMatch User *\n   ForceCommand internal-sftp\n   ChrootDirectory \n2) Restart sshd (net stop sshd, net start sshd)\n3) Validate both sftp, ssh.\nFYI, CHROOT only works for SFTP, SCP sessions but not for SSH.\nThe above config restricts the user to a SFTP session and jails the user.. In the above config, it applies to all users (as we specified *). \nBut, you can use Match User / Match Group to restrict individual / group of users to different location.\nIf you are using a domain user then you need to specify like\n    Match User short_domain_name\\user_name (Ex - Match User contoso\\user, where FQDN is contoso.microsoft.com)\nIf you are using a workgroup / local user then you need to specify like\n    Match User . Windows openssh client uses console support (conhost.exe) for parsing the incoming ANSI stream. Looks like the latest windows OS has fixed it. I verified this on windows Version 10.0.17134.112. \n. Please try the new windows 10 fall update (https://support.microsoft.com/en-us/help/4464619). fyi, Just realized the windows 10 fall update is paused because of some known issues.\nPlease note that bunch of console rendering issues were resolved in the latest windows 10 fall updates.. As per MSDN, _open_osfhandle returns -1 in case of failure. You mentioned it returned 24 which means it's successful and failing some where else?. Go over this thread,\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1201. It's expected behavior.\nSee point 9,\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\n\n. I will take a look at this.. @dwatley - Could you please validate the private ssh-shellhost binary. The issue is introduced as part of addressing the console resize.\nPlease test the console resize as well.\n. Yes, Due to a bug in ssh-shellhost the screen goes blank so we will temporarily disable the resize logic.\n@DarwinJS - We need your suggestion. \nInstead of creating a new release, we would like to update ssh-shellhost.exe in our release package 7.7.2.0. \nCan you do the same thing (updating ssh-shellhost.exe alone) in chocolatey package? \nDo you see any issues with this approach?. We don't want to use the 4th digit for GitHub releases as it's reserved for windows insider builds.\nso we can't have 7.7.2.1 release.\n. @DarwinJS - Ideally we shouldn't run into this kind of issue.\nFYI, We always use sshd.exe version to identify the release version.\nAll the binaries will have the same version as sshd.exe.\nOur long term plan is to release MSI package instead of zip payload.\nFor now, we would like to update our v7.7.2.0 zip payload with new ssh-shellhost.exe (without version change). If you could accommodate this change in chocolatey then it would be great.. Creating a new release adds lot of overhead (Moving the code base to V7.7.2.0, make ssh-shellhost.exe, build, sign the binaries, testing, etc). Since it's a simple change we discussed internally to update v7.7.2.0.\nGiven the repetitive concerns from multiple people we will create new releases from next time onwards (if we run into this kind of issue).\nThanks @DarwinJS @dwatley for your support.. Please use the latest version and try again.\nAre you executing (cipher /e /a C:\\temp\\test.txt) in an interactive ssh session? . @franklinyu - No.\nPassword reading ends up in readpassphrase().\nSFTP Unicode output ends up in mprintf().\n. It's expected behavior. \nsshd service will check for hostkeys in %programdata%\\ssh folder. If it can't find the host keys then sshd service will create the hostkeys in %programdata%\\ssh folder. Please note that %programdata%\\ssh folder is created by sshd service and it's ACL properly.\n. This behavior is same as UNIX (host keys are always created at /etc/ssh).\nIn windows, we have choose %programdata%\\ssh folder. FYI, this folder is persistent across windows updates.. Windows is tricky as you can install windows OS on any drive (need not be C:) so we can't pick a standard location. Also %programdata% (environment variable) path changes depending on the windows SKU.\nSo we came up with most readable version  PROGRAMDATA .\nIn the code, we resolve  PROGRAMDATA  to %programdata% (environment variable).. Not sure why you are executing \"ssh-keygen.exe -A\" command as sshd will automatically create the host keys..\nfyi, we create the %programdata%\\ssh folder during the sshd service startup time. \n. @franklinyu - Please provide the windows build number (on cmd.exe, issue \"winver\" command)\n. @MathiasMagnus  @franklinyu - I have fixed this issue (tested on windows version 1803 OS Build 17713.1002), please try this private binary ssh_unicode_issue.zip and let me know if you see any issues.\n. Yes please. We will close it when the fix is merged.. I guess it's because of recent changes in base openssh 7.7.2.\nauthorized_keys file has rsa-key-20160610. Try changing rsa-key-20160610 to ssh-rsa.\nCan you try the same keys on Linux machine that has openssh 7.7.2 installed.. Did you edit the authorized_keys file (replacing  rsa-key-20160610 to ssh-rsa)?\nAlso can you try to create and use the new rsa key?\nsshd_config will have the default values as un-commented lines. so there is no need to update the sshd_config.\n. To completely disable the password authentication,\n1) Add below lines to %programdata%\\ssh\\sshd_config, \nChallengeResponseAuthentication no\nPasswordAuthentication no\nUsePAM no\n2) Now restart the sshd service\nnet stop sshd\nnet start sshd\n3) Try password authentication. It should fail.. Add the below lines  to c:\\users\\\\.ssh\\config (if file doesn't exist, just create it).\nHost *\n    StrictHostKeyChecking no\nNow, fix the file (c:\\users\\\\.ssh\\config) permissions so that no other user apart from administrators, system, current user has the read, write access..\nIf it didn't work then debug using\nssh -vvv user@ip. @beardedfool -\nAs per your ssh logs, the host key is already found in the known_hosts. So we are not hitting the original issue.\ndebug1: Authenticating to 192.168.21.5:22 as 'installer'\ndebug3: hostkeys_foreach: reading file \"C:\\Users\\XXXXX/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file C:\\Users\\XXXXX/.ssh/known_hosts:1\nNext steps - \n1) Backup, Remove the known hosts file (C:\\Users\\XXXXX/.ssh/known_hosts).\n2) run ssh.exe user@ip\n3) You should see the hostkey is automatically added to C:\\Users\\XXXXX/.ssh/known_hosts and also a warning msg on the console\nc:>ssh.exe XXXX@YYY\nWarning: Permanently added 'XXXX' (ECDSA) to the list of known hosts.\nXXXX@YYY's password:\nMore on your questions,\n1) You config is read by the ssh client.\ndebug1: Reading configuration data C:\\Users\\XXXXX/.ssh/config\ndebug1: C:\\Users\\XXXXX/.ssh/config line 2: Applying options for *\n2) You can specify the ssh config at 3 levels,\na) Command line option.\nb) users config file (C:\\users\\xxxx/.ssh/config)\nc) system wide config (%programdata%\\ssh\\ssh_config.\nFor each parameter, the first obtained value will be used. \nThis behavior is inline with the UNIX behavior.\n. @babakNouri - \nPlease try the new version of openssh v7.7.2.0.\n. Please try our troubleshooting steps.\nIf you still need help then share the sshd.log (DEBUG3) enabled. Looks like you are using a very old version of openssh.\nInstall the latest version from (https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH).\nTo know your windows openssh version, do this,\n1) cd to sshd.exe directory \n2) Execute this command\n((Get-Item (Get-Command .\\sshd).Source).VersionInfo.FileVersion)\n. There is no need to run \"ssh-keygen -A\" as sshd will automatically create the host keys.\nNote that the host keys are created in \"%programdata%\\ssh\\\" location.\nFollow our troubleshooting steps to debug more.. Follow the instructions here https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. Please share ssh client (.\\ssh.exe -vvv user@ip) and sshd logs (DEBUG3).\n. Try this,\n1) stop the sshd service (net stop sshd)\n2) Start the sshd in debug mode (./sshd.exe -ddd).\nWe should see the error message why it's closing the session.\nAre you able to login using password based authentication? Ideally it should also fail.. I am guessing it's the problem with your authorized_keys file.\ndebug1: trying public key file C:\\Users\\username.ssh/authorized_keys\ndebug3: mm_answer_keyallowed: publickey authentication test: RSA key is not allowed\nFailed publickey for DOMAIN\\username from 10.32.192.234 port 46912 ssh2: RSA \nVerify that your authorized_keys entries looks like this,\nssh-rsa <key> <username>\nAlso you can try generating new keys and using them.\n. Then it should be an issue with the ACLs. \nTo fix ACLs, try these instructions (https://github.com/PowerShell/Win32-OpenSSH/wiki/OpenSSH-utility-scripts-to-fix-file-permissions#fixuserfilepermissionsps1).\nIf it didn't solve then follow these steps,\n1)  Stop sshd (net stop sshd)\n2) Enable file based logging. Add below lines to  \"%programdata%\\ssh\\sshd_config\"\nSyslogFacility LOCAL0\nLogLevel DEBUG3\n3) Start the sshd (net start sshd)\n4) Establish ssh connection (.\\ssh.exe -vvv user@ip)\n5) Now look for the error log in \"%programdata%\\ssh\\logs\\sshd.log\"\n. SSH client looks at the current user profile.\nIn your case it's C:\\Users\\Hamedsbt/.ssh.\nYou can also copy them to %programdata%\\ssh folder.. We made a bunch of enhancements from v7.6.1.0 to v7.7.2.0.\nIf default shell is cmd.exe then we pick the sftp-server.exe, scp.exe from the sshd.exe directory.\nIf default shell is NOT cmd.exe then PATH should have the sshd.exe directory.\nLook at point 9 in  https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH \n\n. Are you sure your username, domain are same (ethanhs\\ethanhs)?\ndebug1: Next authentication method: password\nethanhs\\ethanhs@10.147.18.113's password: \nfyi, if windows user is local user then you don't need domain name.. @ethanhs  Please share the full sshd log.. . Are you sure it's win32-openssh ssh client issue?\nHave you tried the other ssh clients (WSL, Putty)?\nI didn't see this issue when I tried to login from win10 machine to Ubuntu 16.04.5 LTS\n\n. @franklinyu - After multiple retries, I am able to repro the issue.\nWill try to fix it for the next release.\n. https://docs.microsoft.com/en-us/windows/desktop/Debug/system-error-codes--1300-1699-\nERROR_NONE_MAPPED\n1332 (0x534)\nNo mapping between account names and security IDs was done.. I think it's related to https://github.com/PowerShell/Win32-OpenSSH/issues/139.\nDid you try password based authentication for your scenario?\n. @thomasaarholt - Can you answer @manojampalam questions.. Please share the sshd.log (serverside) to verify if its a genuine bug.\nRefer to our (troubleshooting steps](https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps).\nAlso please try same scenario targetting to Linux.. Please have a look at this https://github.com/PowerShell/Win32-OpenSSH/issues/139. closing this as it's a duplicate of #1272 . 1) Make sure binary location has the Write permissions to just to SYSTEM, Administrator groups. Authenticated users should and only have Read and Execute.\n2) Make sure your binary location path is in system path environment variable.\n3) check if you have libcrypto.dll file in the same folder as sshd.\n4) If noting works then try the steps mentioned here https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. When you are running in debug mode, you can login as the current windows log-in user only.\nLooks like the current user (hpaba\\\\sshadmin) is not the windows log-in user on the sshd server machine.\nBy default it's ETW logging. https://github.com/PowerShell/Win32-OpenSSH/wiki/Logging-Facilities\nAs per logs, your sshd service should start. If you run into any issues then enable the file based logging mentioned in the above URL and provide the sshd.log, ssh client logs (ssh -vvv user@ip). @highpointacademy - Not sure why sshd didn't start as service but it does start in debug mode.\nThe easiest way to install openssh is through chocolatey (https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md). Chocolatey will take care of all the manual steps mentioned in our installation instructions. \nPlease make sure you delete the existing openssh before you try the chocolatey.\nIf you follow our installation instructions (https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH) then you shouldn't run into any issues.. @bingbing8 - Could you please look into this. This might be related to the issue you are currently working.. @lars18th - We use LibreSSL as our crypto provider. Please file the issue with LibreSSL (https://github.com/libressl-portable/portable). What is your windows version?\nWindows 10 and above supports only xterm. \nPrior releases of windows supports only VT100.\nSet your TERM env variable accordingly.. OpenSSH supports multiple connections from different users.\nPlease look into the sshd.log (DEBUG3 enabled) to investigate further.\n1) Have the below config in %programdata%\\ssh\\sshd_config file\nSyslogFacility LOCAL0\nLogLevel DEBUG3\n2)restart sshd to pickup the latest changes in sshd_config.\n3) run your scenario\n4) investigate the sshd.log failure messages. @yecril71pl - You are using a very old version. Please test the new release (https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.7.2.0p1-Beta). Are you able to establish the ssh connection successfully?\nPlease elaborate your issue.. We currently don't support compression. \nRefer to https://github.com/PowerShell/Win32-OpenSSH/issues/102. Fixing this in the main openssh repo (https://github.com/openssh/openssh-portable/blob/master/README) helps broader audience. You can raise a bug https://bugzilla.mindrot.org.\nfyi, we frequently pull the changes from the openssh repo.. S_IFDIR is already handled (first case statement at line 475).\nSo you can remove line 492.. ",
    "evilC": "Still happening.\nI installed OpenSSH beta server and client on the same machine, and I get the following error when I try to use the client to connect to the server via the loopback address:\nssh someuser@127.0.0.1\nUnable to negotiate with 127.0.0.1 port 22: no matching key exchange method found. Their offer: ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1\n. In order to get the \"Optional Features\" version working, I followed some guide which had told me to  enable Developer Mode, which it turns out installed some other Windows SSH server (Which used port 22), so unbeknownst to me, I was not even using OpenSSH.\nSo when I uninstalled the \"Optional Features\" OpenSSH, it did not actually change which OpenSSH server was getting used (Still the old one designed solely for deploying UWP apps).\nThen, disabling Developer Mode did not remove this old SSH server.\nWhat an absolute mess.\nAlso, you really should mention that the OpenSSH \"Install\" is really nothing of the sort.\nIt merely registers the service in your downloads folder ?!?!?  \nHaving recent blog posts still high-ranking in google which tell you to use the \"Optional Features\" install method does not help the confusion either.  . ",
    "brcolow": "posh-git also offers a way to use ssh-agent:\nhttps://github.com/dahlbyk/posh-git/blob/fadc4dd3d41b8b87235d3a35c69e6caba95ee637/GitUtils.ps1#L252\nI am using this. When I start a powershell, if this is the first time it has run since a reboot (or if ssh-agent.exe was killed somehow) it prompts me for my key pass. From then on, it is unlocked and I don't need to enter it.\n. I see. What exactly do you mean by \"desktop session\"?\n. ",
    "diddledan": "that will only work with ssh processes spawned inside a PowerShell instance which has the posh-git loaded. This prevents other programs from using the same agent because the environment variables are not included in the Desktop Session.\n. that script is 1) interactive, and 2) only works on children of the shell that launches it.\nThe point here is that all the standard methods store an environment variable in the executing process for children of that process to find to tell those children where the ssh-agent's socket is. In linux the agent is started as part of the desktop session and therefore any processes run by the user inherit that. In windows and cygwin this is not the case and currently requires that a program be launched which then launches the agent. This chain of events on windows means that my desktop session does not have the environment variables and therefore ssh spawned as part of visual studio (e.g.) to git-commit does not know where the socket is and thus fails. If I started a shell (bash via cygwin or powershell with posh-git) the ssh-agent will work in that shell but still Visual Studio won't know about the environment variables in that shell because the shell and the VS instances are unrelated. The only common ancestor in Windows is the desktop session and so that is where the SSH_AUTH_SOCK environment variable needs to be set. There is currently no way of achieving this.\n. I'm referring to the explorer.exe process that is started by winlogon.exe upon successful authentication\n. ",
    "theaquamarine": "Couldn't this just function the same way as ssh-agent already does, storing the socket in $TMPDIR or %TEMP% and other processes which wish to use the agent finding it there? Like https://github.com/wwalker/ssh-find-agent\n. ",
    "Oeffner": "Would using SETX environvar (rather than SET environvar) from a cmd shell not be a solution? It allows setting environment variables globally for future cmd shells during a desktop session.\n. Thanks for the info. That sounds great.\nRob\n\nVote \"Remain in the EU\" for Great Britain to remain a beacon of liberalism and a great global power.\nVote \"Leave the EU\" for the UK to fall apart, the west to weaken while Putin and China smirk gleefully.\n\nRobert Oeffner\n15 Bayford Place\nCambridge, CB4 2UF\ntel: +44(0)1223 369685\nmobile: +44(0)7712 887162 \nFrom: manojampalam \nSent: Tuesday, May 17, 2016 02:54\nTo: PowerShell/Win32-OpenSSH \nCc: Oeffner ; Comment \nSubject: Re: [PowerShell/Win32-OpenSSH] Wishlist: SSH Agent in the desktop session (#35)\nCheckout the Win32 version of ssh-agent for OpenSSH. Available in latest release 5_15_2016\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nNo virus found in this message.\nChecked by AVG - www.avg.com\nVersion: 2016.0.7597 / Virus Database: 4568/12245 - Release Date: 05/16/16\n. Excellent news. I guess I will need to download and compile the sources myself until a new prerelease is available for download.\n. It's stored in %USERPROFILE%.ssh\\id_rsa\n. ",
    "nigurr": "Reopen this issue?\nWhen Posh-git finds openssh-win32 ssh-agent, it invokes the & C:\\xxxx\\ssh-agent.exe\nUnlike ssh-agent that ships with git, this one doesn't go in the background mode\n```\nC:\\tools\\poshgit\\dahlbyk-posh-git-5ed5c05> & 'C:\\Program Files\\Git\\usr\\bin\\ssh-agent.exe'\nSSH_AUTH_SOCK=/tmp/ssh-lIX9DH5zMlFb/agent.24360; export SSH_AUTH_SOCK;\nSSH_AGENT_PID=21556; export SSH_AGENT_PID;\necho Agent pid 21556;\nC:\\tools\\poshgit\\dahlbyk-posh-git-5ed5c05> which ssh-agent\nCommandType     Name                                               Version    Source\n-----------     ----                                               -------    ------\nApplication     ssh-agent.exe                                      0.0.0.0    C:\\Program Files\\OpenSSH-Win64\\ssh-agent.exe\nC:\\tools\\poshgit\\dahlbyk-posh-git-5ed5c05> & 'C:\\Program Files\\OpenSSH-Win64\\ssh-agent.exe'\nagent_start pid:30144, dbg:1, child:0, pipe:0\n```\nAs you see the ssh-agent will not go into background by default, which is causing issues with posh-git\n. Is there any update on this issue? This is really annoying and one of the critical functionality\n. +1 vote. this should be default behavior.\nif I pass any flag with ssh-agent, it simply crashes.\n. didn't work. Trying to ssh into same machine to verify. yes it's domain joined\nE:\\> ssh-add.exe -l\n4096 SHA256:aaaaaaaaaaaaaa C:\\Users\\nigurr/.ssh/id_rsa (RSA)\n2048 SHA256:bbbbbbbbbbbbbb C:\\Users\\nigurr\\.ssh\\id_local_rsa (RSA)\nE:\\> cat C:\\Users\\nigurr\\.ssh\\id_local_rsa.pub\nssh-rsa AAAABxxxxxxxxxxxxxxxx nigurr@NITING-WRK\nE:\\> cat C:\\Users\\nigurr\\.ssh\\authorized_keys\nssh-rsa AAAABxxxxxxxxxxxxxxxx nigurr@NITING-WRK\nE:\\> ssh.exe -l nigurr@fareast niting-wrk\nPermission denied (publickey).\nE:\\> ssh.exe -l nigurr@fareast niting-wrk -i C:\\Users\\nigurr\\.ssh\\id_local_rsa\nPermission denied (publickey).\n. ",
    "dragon788": "@nigurr Apparently the Win32-OpenSSH agent should run as a Windows service, and in the future will be usable with or without the Win32-OpenSSH server portion. I haven't tested the latest releases, but if you install from Chocolatey it should be in there soon-ish.\n. Really hoping you guys can fix the arrow keys as I was really hoping to use this for my vagrant VMs, but I'm going to end up having to open Git bash or a cygwin terminal to perform my vagrant ssh commands until this is fixed.\n. You can use ctrl+p and ctrl+n in lieu of the up and down arrows and alt+b and alt+f in lieu of the left and right arrows (jumps back/forward a word). These aren't ideal circumstances, but at least I'm learning more Emacs shortcuts (what most command lines default to) in case I ever have to use something other than the one true editor (Vim).\nhttp://ss64.com/bash/syntax-keyboard.html\n. Perhaps the new escape codes are to blame when running on Windows 10 like Microsoft really wants you to? https://github.com/rprichard/winpty/issues/82 \n. I'd also like to report that escape character sequences behave horribly. I did an npm install inside a vagrant ssh session using win32-openSSH as the client and it was pretty rough, lots of control characters littering the screen as npm uses them to color the dots or stars of its progress meters.\n. Does ctrl+ P and ctrl+ N work with sshd or do you have to use the Windows previous history key of F7?\nOn Jul 23, 2016, 5:47 AM, at 5:47 AM, anotherjarvi notifications@github.com wrote:\n\nYep, also having issues using up arrow/down arrow for history\n\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub:\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/159#issuecomment-234711993\n. This may be related to the fact that it isn't interpreting escape sequences correctly. If you disable colors do you get less issues/corruption?\n. I was trying to query it from PowerShell's Get-Service but it was reporting it didn't exist.\n\nOn May 31, 2016, 11:50 PM, at 11:50 PM, manojampalam notifications@github.com wrote:\n\nyou are supposed to start ssh-agent as a service. \nnet start ssh-agent\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/231#issuecomment-222891959\n. Do you guys maintain the Chocolatey install or not? It doesn't appear to have installed the services, and when I was looking at the install documentation it mentioned running sshd, I don't need sshd as I simply want to use the OpenSSH client/agent functionality. Is this supported and is there a \"client only\" install document?\n. @DarwinJS That explains the behavior I was seeing, I could find it in the PATH but the service wasn't registered.\n\nYes I would be very interested in using ssh-agent and ssh-add with the client without having the sshd server service running. This would allow me to use vagrant ssh as a command without having to install cygwin or Git Bash just to connect to my various virtual machines.\nHaving ssh-agent without having the sshd service might also be more secure for machines of developers or regular end users that don't want/need to remotely access their own machines. The agent service is hardly something that would be a likely attack vector on Windows, but its also much less exposed than having another service running on an open port.\n. @DarwinJS Just tried a vagrant ssh and it is working without having a working ssh-agent, but that is probably because in this case Vagrant is handling the key exchange/user credentials. I'd be happy to help test if you have any \"beta\" packages with the new functionality as I can see myself using this a lot more in my new position doing DevOps for Windows.\n. You can work around this by creating an ~/.ssh/config file that specifies the IdentifyFile to use per host (github.com/bitbucket.org/etc). I have used this successfully. Please test and let me know if it doesn't work for you for some reason.\n. This is a duplicate of #122 .\n. This is a duplicate of #122 . There are some workarounds in that issue as well.\n. ",
    "JeanGionet": "Yes I did.\nI just ran it again to make sure and I'm still experiencing the same results. (I did reboot after I ran the script again)\nI'm assuming I got an error on the DLL copy as it was already done prior to starting the SSHD process.\nD:\\OpenSSH>setup-ssh-lsa.cmd\nD:\\OpenSSH>if AMD64 == x86 (set lsadll=D:\\OpenSSH\\x86\\ssh-lsa.dll )\nD:\\OpenSSH>if AMD64 == AMD64 (set lsadll=D:\\OpenSSH\\x64\\ssh-lsa.dll )\nD:\\OpenSSH>copy D:\\OpenSSH\\x64\\ssh-lsa.dll C:\\Windows\\system32\\\nThe process cannot access the file because it is being used by another process.\n        0 file(s) copied.\nD:\\OpenSSH>reg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v \"Authentication\nPackages\" /t REG_MULTI_SZ  /d  msv1_0\\0ssh-lsa.dll -f\nThe operation completed successfully.\nD:\\OpenSSH>\n. Thanks for looking into this issue! \nI realize it's still in development, however it seems to be working pretty well despite the keys not working for domain accounts.\n. That's great! I'll anxiously await for that release so I can give it a try!\nthanks\n. ",
    "scottbeech": "Solution works perfectly, excepting for the lack of domain account support for key auth.\nI've spent a bunch of time trying to get this working until I found this thread.\nWould be great to get this working as soon as you can.\nThanks!\n. ",
    "mjnip": "manojampalam - I am using a local user and have completed all steps as stated above.  I am still receiving error Server refused public-key signature despite accepting key!\nI have also uncommented:\nRSAAuthentication yes\nPubkeyAuthentication yes\nand have the keys in the .ssh/authorized_keys folder within the local user folder.\nI grabbed the latest build from September 16, 2016.\n. ",
    "Aigeec": "@mjnip I was getting something similar with the 64 bit binaries\ntry ssh.exe -i id_rsa -l gionetje localhost -v (without the domain)\nA. I am having a similar issue as the op.\nI have a bare git repo in a test directory in my users (named git) homes folder.\nI have ssh running using OpenSSH-Win64. When I run git clone on another windows pc I get a similar message \ngit clone git@server:test\n(Separate issue here when using ssh url format instead of scp format that you can't use a relative path as it will put / in front of your path)\n\"fatal: ''test'' does not appear to be a git repository\"\nI upped the ssh logging and can see this is output:\nExecuting command: E:\\\\Tools\\\\OpenSSH-Win64\\\\ssh-shellhost.exe -nopty Z2l0LXVwbG9hZC1wYWNrICd0ZXN0Jw==\nDecoding the Z2l0LXVwbG9hZC1wYWNrICd0ZXN0Jw== gives \"git-upload-pack 'test'\"\nIf I run that command locally I get the same error. However if I remove the single quote or replace them with double the command works.\nI don't think it is possible to get windows command prompt to recognise single quotes as a quote character.\nSuggestions:\nOptionally use sh/powershell instead of cmd.exe. Maybe just default to powershell it's ok with single quotes.\nGOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, L\"cmd.exe\"));\nhttps://github.com/PowerShell/Win32-OpenSSH/blob/L1-Prod/contrib/win32/win32compat/shell-host.c line 978.\nReplace single quotes with doubles prior to line 987\nhttps://github.com/PowerShell/Win32-OpenSSH/blob/L1-Prod/contrib/win32/win32compat/shell-host.c line 987. I've checked and I am on that 0.0.9.0 version. \nBTW is there an easy way of finding what version you are on. It's not on the downloaded artefact or in the ssh_config and there doesn't seems to be a readme in the output.\nA. The issue I had above was with the 0.0.9.0 version.\nA. ",
    "markagarcia": "So i added it to the path to my system variable and it worked. \nHowever, when i installed this on my Windows 2008 R2 machine i did not (manually) add the path but it still worked. This may just be how 2012 R2 handles things a bit differently that Windows 2008 R2 and if that is the case great, i now know.\nThanks for the help.\n. ",
    "hofst": "nevermind, apparently only access to the root folders (e.g. c:/, d:/) is not possible, but access below (e.g. d:/users) works. Might as well be a winscp issue\n. ",
    "jpierson": "I use it as my primary method of installing software on Windows and I know others that do as well. The only downside is that packages are not always maintained well and chocolatey falls behind due to slow approval process. The main benefit it that makes setting up an environment via scripts or by hand much easier and consistent for the user. The target user is likely to be command line savy which makes chocolatey and ssh a good match.\nInstall becomes choco install win32-openssh and the download, install, and handling of the package is all taken care of for you. When I come across projects that advertise this type of install I'm more likely to check it out.\n. I use it as my primary method of installing software on Windows and I know\nothers that do as well. The only downside is that packages are not always\nmaintained well and chocolatey falls behind due to slow approval process.\nThe main benefit it that makes setting up an environment via scripts or by\nhand much easier and consistent for the user.\nOn Tue, Dec 1, 2015, 4:49 PM nachfuellbar notifications@github.com wrote:\n\nHi @jpierson https://github.com/jpierson\nchocholatey package seems interesting; i didn't knew this tool\nare there any real advantages to msi (except updating)?\ndoes it work reliable?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/42#issuecomment-161106215\n.\n. Looks like the Chocolatey package as approved by the moderator and went public today! Cheers @DarwinJS!\n. Not sure if it's related or not but I noticed that that after a reboot I was indeed able to use ssh and scp from the standard windows console but PoweShell is now hanging indefinitely for me every time I launch it. Just thought I'd put it out there in case anybody else who has tried the package can verify whether this is an issue or just something wrong on my machine. Note, that in my case I was using a customized powershell profile along with PoshGit and Posh-GVM if that matters.\n. Ok, I think I've narrowed it down to a line in PoshGit's profile.example.ps1 file that get's installed and is made to be called from the user's default profile.\n\nhttps://github.com/dahlbyk/posh-git/blob/master/profile.example.ps1#L25\nStart-SshAgent -Quiet\nCommenting out this line seems to work around the issue. At this point I'm not sure whether the issue is with Win32-OpenSSH or with Posh-Git but it seems to be some compatibility issue that should be spelled out regardless. My guess is that anybody also using PoshGit will experience the same issue.\n. ",
    "smithian": "I'd be interested in building a chocolatey package for this project.  Given the number of changes since the last release, it might make most sense to create both a release package based on the latest zip, plus a nightly build package.  is there currently a nightly build, or would that need to be created?\n. I agree with @michaeltlombardi  - having a chocolatey package is a good idea even if the recommended installation is through install-package.  PackageManagement is still very much under development on Win10.  The default repositories included in a vanilla OneGet installation are MSI, MSU, and EXE.  you can add Chocolatey, NuGet, and a host of other providers.  The one that has the most traction amongst the Ops set is chocolatey, so it would seem to make sense to make one.  There's nothing saying that a chocolatey package couldn't coexist with one in another repository.\n. ",
    "factormystic": "I would prefer if this was deployed via powershell package management. Then after adding the package source, users would simply need to run install-package powershell-openssh or whatever the package name is.\n. You can install Chocolatey as a package source, yes. But you don't need it. So don't do the thing you don't need to do.\n. ",
    "michaeltlombardi": "@factormystic PackageManagement uses Chocolatey as a repository for software. You would be able to install the package either via chocolately itself or via Install-Package.\n. Thanks for the info on public keys and domain accounts. Like I said above, the issue I'm specifically referring to here isn't the failure to authenticate, it's the failure of the execution from the PowerShell prompt (v5) to even attempt an authentication - When using password only the attempt still fails at the same spot:\nPowerShell\ndebug1: Host 'servername' is known and matches the ECDSA host key.\ndebug1: Found key in C:\\Users\\username\\.ssh\\known_hosts:1\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: Roaming not allowed by server\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: allocating new sfd, sfd [4] fd [4] handle [460] type [2]\n. @jhudsoncedaron I was trying directly from the prompt, not ISE. Are you saying you can only use it from the normal prompt if you specify a command to run remotely, or the ISE prompt, or both?\n. This is a duplicate of #114, I think.\n. I have a strong preference for the deployment options to include WSA/AppX/chocolatey packages. I suppose the chocolatey package could be built on the MSI?\n. @NoMoreFood with the caveat that I'm not very qualified and I certainly haven't thought through the security concerns very deeply at all....\nMy initial thought was to store the public key(s) for an account as a new property of the user in AD, something like ValidPublicKeys and for an AD-joined machine to have the option to try a lookup for that user against said property if the key doesn't exist on disk where and as it expects (ie, default to \"traditional\" key pair lookup, only try the new method if (1) a key was the specified auth, (2) a matching public key wasn't found, and (3) the machine is domain-joined).\nWhether and how to encrypt that property of the user is something I haven't got strong opinions on, personally - compromise would be bad but limited in that you still need the private key to impersonate the user (Aside: strong preference to use something like a yubikey for keeping private keys private).\nTo your point re: current focus, I absolutely understand and agree with parity-first, net-new-later.\nI don't know that it would be reasonable to expect keygen to upload the public key, but I see your point / the flaw here (keys need to be uploaded somehow and each user manually doing it seems kinda gross, though I guess the 'standard' SSH users are likely to be more technical than your average desktop user, still not a great experience).\nI'll have to think on this a bit more but I'm very open to ideas / pretty sure my suggestions are suboptimal. :). ",
    "DarwinJS": "I'd like to do this feature request if no one else is already working it.\n. The Chocolatey provider is not ready for prod yet.  It is broken in Win 10 because the provider code assembly was a 14 old month version.  Basically a Microsoft employee bootstrapped the open source project and then it was left up to the community.  The folks at Chocolatey have taken up it's development.\nHowever, the PSH 5 provider requires PSH 5 (not trivial for Server 2008 R2 and Win 7 where you have to install PSH 4, reboot and install PSH 5), and does not do much logging (unless this gets upgraded as part of the next release).\nIn the meantime the native chocolatey client is a light install (folder + environment variable + path tweak) that can be installed from the web with a oneliner and it can service as far back as PowerShell 2.0 (Along with at least .NET 4.0 installed) and works in cmd.exe as well.  (it's actually a very similar implementation to Win32-OpenSSH in these regards.\nSo while the native provider will get there - I'm not sure how long it will be till it has feature parity with the native chocolatey client.\nIn any case, packaging it in chocolatey will make it available immediately and for when the provider is available.\n. Is it possible for this project to provide the \"current\" release also at it's versioned URL?  This way I can checksum the files downloaded from the site.\nFor instance, as of this writing 12_22_2015 is the \"current version\" and available at https://github.com/PowerShell/Win32-OpenSSH/releases/download/latest/OpenSSH-Win64.zip\nHowever, unliked archived packages, this release is not also available at: https://github.com/PowerShell/Win32-OpenSSH/releases/download/12_22_2015/OpenSSH-Win64.zip\nSo if I do a check sum on a file I download from the current release for a package for 12_22_2015 - the package will break when you release a new version.\nIf when a new current version was made available, it was also available at it's versioned URL (https://github.com/PowerShell/Win32-OpenSSH/releases/download/12_22_2015/OpenSSH-Win64.zip) in this case - I could safely checksum the file against that URL even when new versions come out.\nI am not saying that the versioned URL location has to replace the \"current version\" nor even be published - just made available at the same time as current so I can stick my package the version of the package.\nWhen new versions come out I would update the package and upload a new version to Chocolatey.\nI hope that makes sense - but let me know if it does not.\n. Yes I understand there is not a versioned zip for 12_22_2015 - I am asking if the team could please adopt the practice of creating one for the current version as soon as that version is also available at \"../latest/...\", not just as an archive process.\n. I thought \"this should be a nice easy package for a Saturday morning\" - should have known it would take longer than expected as soon as I had that thought.\nBut, the upside is the new chocolatey installer handles \n- client tools \n- sshd server (with or without key authentication)\nFor:\n- installs \n- upgrades and\n- uninstalls\nAnd it won't install the server if there is another product with the service \"sshd\".\nIt won't be visible on Chocolatey publicly until it makes it all the way through moderation - but you can peek at (or try) the pending package here: [https://chocolatey.org/packages/win32-openssh/2015.12.22]\n. I was out yesterday, but able to blog about win32-openssh as well as the chocolatey package here: https://www.linkedin.com/pulse/fastest-way-get-your-hands-new-win32-openssh-darwin-sanoy\n. The package simply extracts the Exes and puts their path on the system path.  So it's not likely to be related.\nSome thoughts:\n- To test whether anything in your profile is causing problems, run \"PowerShell -noprofile\"\n- It may be possible that the binaries are assuming you're running with admin rights so they can write to their own program files folder.  This would explain why it might work fine when you installed (you would have given the session admin to do the install) and maybe not later in a session without admin.\n. Ohh - that brings up an intersting issue.  I wonder if there are any other bad interactions with the built-in git ssh agent?\n. Looks like powershell.exe from powershell core is not signed by Microsoft (at least beta 4), so does that mean it would have to be installed under system32 to work with OpenSSH?\nWhat does \"trusted\" mean in this context?  \nIn the past Microsoft has considered \"Program Files\" locations more trustworthy than user writable locations because it takes admin permissions to place something there.. In addition to the chocolatey package I wrote direct install scripts just like the op is asking for...\nThis is already done.  ( If you don't mind, having chocolatey automatically installed inline)\nThese run in an elevated powershell prompt and they will complete without any prompts:\nInstall w/ the server:\n[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {[bool]1};set-executionpolicy RemoteSigned -Force -EA 'SilentlyContinue';iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/DarwinJS/ChocoPackages/master/win32-openssh/InstallChoco_and_win32-openssh_with_server.ps1'))\nWithout Server:\n[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {[bool]1};set-executionpolicy RemoteSigned -Force -EA 'SilentlyContinue';iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/DarwinJS/ChocoPackages/master/win32-openssh/InstallChoco_and_win32-openssh.ps1'))\n. I was out yesterday, but was able to blog about win32-openssh and the chocolatey package, not sure if it merits addition as a \"badge\" as well?  It is here: https://www.linkedin.com/pulse/fastest-way-get-your-hands-new-win32-openssh-darwin-sanoy\n. @alexchandel - did you use the chocolatey package?  I am wondering if the log folder is whatever folder is the working folder when \"sshd.exe install\" is run.\nIt is very possible that c:\\windows\\system32 is the current folder when this command is executed under chocolatey.\nIf we can confirm this to be the case, I can alter the chocolatey package to put the log in c:\\programdata\\win32-openssh\\sshd.log\n. I have confirmed that if I make TEMP the working folder, the \"install\" command seems to generate a zero byte sshd.log in that folder, but then the real log lines go to c:\\windows\\system32\\sshd.log\n. @manojampalam  - I agree with @alexchandel   %Programdata% is Windows equivalent of linux's \"/var\" - where programs are supposed to store state data that applies to all users (or applies no users) => any software that runs as a service is automatically \"per-machine\" oriented and should not have the state data stored in a specific user data folder.\n.EXEs should be in Program Files to benefit from better virus protection from user mode malware.\nBy placing volatile state data in the same folder as binaries - the default \"secure out of the box\" permissions model of either Linux or Windows is compromised.  For instance if I want to run SSHD as a user who does not have admin - then the user will have to be given permissions to the programs folder and if malware can hack in - it can write to the EXEs (if permissions were given at the directory level - which they usually are because it's hard to give permissions during setup if a log file does not exist yet or new ones need to be created during rotation or debug logging.)\nEven if these patterns aren't properly followed by the original ssh code for linux, I feel they have significant enough security merit to be followed in the Windows port.\nAs an aside I have done some of this work in the Chocolatey package by placing the binaries in Program Files.\nWhen I built the chocolatey package for Nexus Repository I did the full separation of EXEs in Program File and state data in programdata.\n. @alexchandel - while I generally follow chocolatey patterns for most software - openssh contains a server that processes authentication - if used by individuals with administrator accounts - it will be processing some of the most privileged user accounts in your company.\nI believe the security concerns raised by software that performs authentication of highly privileged accounts overrides the general chocolatey baseline patterns of how zip files of general utility software should be installed.\nBeing that Chocolatey makes installing software so easy, I want to be sure that open ssh server processes are as secure as the platform provides for.\nI had this same discussion with Rob Reynolds (ferventcoder) before he approved the very first version of this package.\n. @alexchandel - Program Files has more than just ACLs that give it special protections.  \"UAC Virtualization\" is just one example.  Also it will continue to be the place Microsoft focuses attention for preventing attacks that are discovered after our conversation today.  So the answer to \"can't you just ACL it to get the same protection\" is \"No - Program Files is more special than that\"\nOn your second post - it is a normal and strong way to protect software that the user who installs it is not the user who uses it.  So if I use automation that has full local admin on servers to install the software and then the software runs without admin - the attack vector of initial installs and maintenance is not there.  However, even in situations where the user is an admin and uses the machine regularly - UAC prevents many of those challenges as long as it is not disabled.\nIn the case of SSH server - it is running under local system and not associated with any user - so that hacking vector is blocked.  Since Windows 7 / Server 2008 windows services also run in a different session (0), while user processes run in \"1\" (workstation) or higher (terminal server).\nAlso if you look at this latest release of win32-openssh the entire ssh-agent implementation and the use of psexec.exe  to install the keys is around creating even more protection boundaries around the sshd server process than the comparatively simple step of installing it into \"c:\\program files\" - in other words, the PowerShell team is already doing more elaborate things than this basic step to protect the integrity of the sshd server process that processes authentications.\n. This is me running ssh to access the local ssh key file.\nI understand how to use those tools, but they will not help me understand what this linux ported software expects to see for Windows permissions to equate to chmod 600.\nSeems by now someone would have made a PowerShell CMDLet \"chmod\" that handles it for me.\nDoes anyone know exactly what perms ssh.exe is looking for on the key file?\n. Not only that, but with the latest version I do not get the error - I must have misinterpreted the error.\nThanks.\n. That just rocks - thanks for taking this seriously and for the super fast solution!\n. I have a completely default config file and logging is indeed commented.  \nDoes the log get lines from specific types of errors that ignore the LogLevel because they are more fundamental (like not finding a critical folder, etc)?\nIs it possible the default level (when no config file item is found) is accidentally set too high in the code?\n. Tried baretail.exe and it choked.\nGood old Get-Content from powershell worked - it started from the start of the file which didn't matter because it is 204 GB of this:\n5920 11:02:05 067 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 067 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 067 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n5920 11:02:05 068 fatal: WaitForMultipleObjects failed with error code [87]\n. I just pushed version 2016.02.25.20150315 of the Chocolatey package.\nIf it find the default log setting of \"#LogLevel INFO\" (commented) it changes it to \"LogLevel QUIET\" - otherwise it leaves it alone.\n. @alexchandel - if you just retested you may already have gotten the updated chocolatey package which was approved this morning and now forces the log off - check your sshd_config to see if logging is set to QUIET.\nBefore I did the chocolatey package update, the chocolatey package did the nasty logging as well.\n. You could also try subst on Windows 7 - which can be used on network resources  subst e: '\\vboxsrv\\myshare'\nHowever, you may also be running into Windows built-in protections against delegated authority attacks that prevent pure Windows to Windows WMI calls from getting to network resources on the remote end point.\n. If you run the SSHD server as the same user you logon to the desktop with AND set EnabledLInkedConnections registry key (https://www.youtube.com/watch?v=kYICwkCnUIk) then you should see the same network drives as the interactive logon.\n. FYI - the chocolatey package uses it's own code for installing lsa and should work fine for both 2015-12-22 and 2016-02-25: http://chocolatey.org/packages/win32-openssh\n. Do NOT set your execution policy to 'unrestricted'  It is much better to set it to RemoteSigned which will work for any unsigned scripts that reside on the local machine.\n. @carrillo455 - If you followed the code in this thread it would do it permanently.  The only way to do it temporarily is start CMD and then execute \"powershell -executionpolicy unrestricted\" - then it is just for the lifetime of that powershell.exe process.  Set-ExecutionPolicy CMDLet always makes a permanent change.\n. Ok - I have the markdown ready.  I replicated the wiki repo, but from what I can tell there is no way for me to sent a pull request against my changes.\nShould I send the markdown to someone?\nThanks.\n. Carbon does rights: http://get-carbon.org/Grant-Privilege.html - and I know from past experience you can just use the assemblies of carbon directly rather than install all of it.\nFYI - In the choco package I tried using the task scheduler to register the keys in System context so I could eliminate the dependency on psexec.exe - but ended up punting to psexec.\n. I was able to eliminate ntrights.exe in the chocolatey package and use pure powershell.\nWill give a shot at removing psexec.exe at a later time.\n. Figured out the permission denied was due to my error.  Is the \"insufficient buffer space\" response relevant to a logon error?  Not sure whether to close this or if that message is still a problem in itself.\n. In #132 that I asked a while back, I think we already determined that OpenSSH for windows is not actually checking the permissions on the key file.\nSo you might want this bug to be called \"Wrong error message on some authentication errors using PEM file \"insufficient buffer space\"\nMaybe that's what you meant - the .pem based keys do not have sufficient permissions to logon?\n. FYI - tested this on Nano RTM and it works fine - powershell launches and CMDLets are not slow - I think because it shipped with PSH 5.1 (but .NET core, not 4.6)\n. Looks like the install is only tested on Server 2012 R2 since the install wiki pages also uses New-NetFirewallRule - which is not available on Server 2008.  This netsh command works on both: netsh advfirewall firewall add rule name='SSHD Port win32-openssh' dir=in action=allow protocol=TCP localport=22\nI was going to suggest that you use the chocolatey  package, however, Chocolatey will install .NET 4.0 as a pre-requisite, which also seems to be the version of .NET that contains OpenBaseKey: https://msdn.microsoft.com/en-us/library/microsoft.win32.registrykey.openbasekey(v=vs.110).aspx\n. Keep in mind the all the commands given in the wiki and the scripts assume  you only have the default msv1_0 in the key currently.  The code in the chocolatey package preserves all values that might be in the key, both during install and uninstall.. @RodTrevisan - can you try the latest chocolatey package?  You can also run the install script of the chocolatey package without using chocolatey, see \"complete offline install\" here: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md. The original problem was the script was using an API not available on Server 2008 R2.\n@SamuelOrlando - the problem you are running into is that install-sshlsa.ps1 is not instrumented for an upgrade, which in this situation must queue up the file to be replaced on reboot.\nThe Chocolatey Package handles both of these situations.\nThe install script inside the Chocolatey Package can be run WITHOUT Chocolatey.\nsee here: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md#complete-offline-install-wout-chocolatey-nor-wow64-nor-powershell-5\nThe chocolatey package is at: https://chocolatey.org/packages/openssh. @SamuelOrlando - I just had a clean test on Server 2016 Core - but I am concerned about your error as it might affect others as well.\nFrom a failing instance, could you please \n\nRerun the command\npost the below listed files to https://gist.github.com/ (do not post full file contents here please) and \nupdate this thread with a link to the files.\n\nFiles:\nc:\\programdata\\chocolatey\\logs\\choco.summary.log\nc:\\programdata\\chocolatey\\logs\\chocolatey.log\nThanks,\nD.. @SamuelOrlando - I know you mentioned you've moved on to other SSH - but wanted you to know your reported error with the chocolatey package was related to https://github.com/DarwinJS/ChocoPackages/issues/23.  \nThis bug is squashed in version 0.0.10.20170329 - which is in automated moderation.. This issue and #142 (closed with reference back here) both seem to be tracking two independent issues.  \nThe first one \"[Microsoft.Win32.RegestryKey] doesn't contain a method named 'OpenBaseKey'\" appears to be a problem with the original install-sshlsa.ps1 calling a registry api not available on a DEFAULT Server 2008 build (no .NET upgrades) ?\nThe second one is \"Copy-Item : The process cannot access the file 'C:\\Windows\\system32\\ssh-lsa.dll' because it is being used by another process.\" - which is when install-sshlsa.ps1 is attempted to be used when upgrading ssh-lsa.dll which cannot work because the dll is loaded in memory.  \nThe manual work around would be to:\n1. deconfigure the registry key (run uninstall-sshlsa.ps1 if not on server 2008), \n2. reboot (to release ssh-lsa.dll from memory)\n3. delete $env:windir\\system32\\ssh-lsa.dll\n4. run install-sshlsa.ps1 (FYI does not contain \"-force\" on copy command to handle upgrade)\n5. reboot (to load ssh-lsa.dll in memory)\nThe chocolatey package should handle both of these problems.\nI think the first problem could be fixed in install-sshlsa.ps1 with this code (which appears to work on server 2008): https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/tools/chocolateyinstall.ps1#L402-L414. If you use the chocolatey package it explicitly sets the logging to quiet which seems to fix this for most people.\nIf you already have chocolatey installed you can do \"choco install win32-openssh\"\nIf you don't have chocolatey (or don't know what it is) the following strings can be dropped directly into an elevated powershell prompt to install it and install the package all at once:\n[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {[bool]1};set-executionpolicy RemoteSigned -Force -EA 'SilentlyContinue';iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/DarwinJS/ChocoPackages/master/win32-openssh/InstallChoco_and_win32-openssh.ps1'))\nOR for the server:\n[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {[bool]1};set-executionpolicy RemoteSigned -Force -EA 'SilentlyContinue';iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/DarwinJS/ChocoPackages/master/win32-openssh/InstallChoco_and_win32-openssh_with_server.ps1'))\n. Please try the most recent package version (2016.05.30 still in chocolatey moderation as of this writing) as it no longer embeds the .zip file.\nPlease report chocolatey packaging issues to: https://github.com/DarwinJS/ChocoPackages/issues\nThanks.\n. As a follow up - the Chocolatey package advises a restart because the same code is used for initial installs and upgrades - as all chocolatey packages do.  I build packages for the end target of an \"upgrade install\" because it is the harder case scenario to get right.\nBut if upon your own experimentation you do not need a restart in your scenario - you can, of course, go ahead without one.\n. OK - good to know - I based the behavior on the installation guide text that was available when I did the very first version.\n. FYI - The Chocolatey package will also be updated on next release.\n. Hoping you can pick another Program Files folder before release: https://github.com/PowerShell/Win32-OpenSSH/issues/256\n. @manojampalam - if it is running properly as a service they would also run psexec.exe to get into system account context first?  Like we have to do to run ssh-add.exe during install right?\n. I maintain the Chocolatey package, but I am not on the Win32-OpenSSH team.\nIf you run the chocolatey package with no parameters you get a client only install.  You'll still see the service .exes in the folder because the zip has everything in it - but they are not configured.\nAre you saying you'd like to use the shh-agent to cache keys for a client install then?\n. What version of Windows are you installing on?  Just tested again on server 2012 R2 with no problems.  Thanks.\n. Because people want Win32-Openssh on nano and NTRIGHTS.exe does not work there: https://github.com/DarwinJS/ChocoPackages/issues/3\n. @alexchandel  - Could you please test if this code works on these cases: https://github.com/proxb/PoshPrivilege/blob/master/PoshPrivilege/Scripts/Add-Privilege.ps1\n. Version 2016.04.15.201601116 is in moderation and uses a new approach for add-privileges if you wish to do early testing.\nMight want to use a clean VM to ensure that the right is not already given to the user in question.\n. I must have missed the release announcement - this project is generating more email than it use to.\nThe new version is in chocolatey moderation.\nThanks for the nudge.\n. Should be fixed in 2016.05.30 version of chocolatey package.  Additional improvements include using ntrights.exe when powershell is older than version 2.0.\nIn the future please report chocolatey packaging problems here: https://github.com/DarwinJS/ChocoPackages/issues\nThanks.\n. FYI the latest choco package checks the file size and only upgrades if it has changed.\nI also requested that the dev team start using versioning in the binaries so it is even easier to tell when things have changed.\n. ntrights is no longer used in the latest version (still in moderation: https://chocolatey.org/packages/win32-openssh/2016.05.30).\nThis was done for nano compatibility.\nHowever, I am still working on eliminating psexec.exe which is also not compatible with nano.\nBoth ntrights.exe and psexec.exe were introduced as part of the official installation process with version 2015_05_15.\nI will keep driving toward nano compat.\n. FYI I am working on making the chocolateyinstall scripts compatible with Nano and will include a jump start script that calls it without chocolatey being installed.\n. I believe this bit of code does the key registration on nano without psexec.exe.   Would be great to get confirmation of it by anyone who has a nano setup to test with (including testing the resultant server install:\nhttps://github.com/DarwinJS/ChocoPackages/blob/master/win32-openssh/2016.05.30.20160902/tools/chocolateyinstall.ps1#L279-L286\nAnd this code does the rights assignment without ntrights.exe:\nhttps://github.com/DarwinJS/ChocoPackages/blob/master/win32-openssh/2016.05.30.20160902/tools/AddAccountToAssignPrimaryToken.ps1\n. Sorry - it is a known issue that chocolatey itself cannot run on Nano.\nI meant for someone to run those two code segments independently to see if they work.\nI am working on a wrapper script around ChocolateyInstall.ps1 that would allow it to run in Nano and create the same install - but without Chocolatey being present - this will be a gradual process.\n. I believe I have a working install script for Nano - at least it worked in my testing.  \nIt uses the same code as I put together for the chocolatey package - but does not require chocolatey nor wow64 nor does it require adding .NET Core to a bare Nano instance.\nTo use it, you download the chocolatey package, extract it and copy the \\tools folder to your nano instance. (using \"Copy-Item -ToSession\")\nThen run ..\\tools\\barebonesinstaller.ps1 -SSHServerFeature\nCalling this code does not require chocolatey to be installed and it does not use any 32-bit EXEs.\nUninstall is: ..\\tools\\barebonesinstaller.ps1 -SSHServerFeature -Uninstall\nUse \"get-help ..\\tools\\barebonesinstaller.ps1\" for a few more details.\nHere is the code - it calls chocolateyinstall.ps1 which contains logic to run standalone outside of chocolatey: https://github.com/DarwinJS/ChocoPackages/blob/master/win32-openssh/2016.05.30.20160908/tools/barebonesinstaller.ps1\n. I am still trying to understand what would be involved through questions in this thread: https://github.com/PowerShell/Win32-OpenSSH/issues/341 - specifically concerned about the possible challenge of getting this workflow to enter \"system\" context on the remote machine if that is necessary.\n. FYI to all - Chocolatey package and it's built-in barebonesinstaller.ps1 are tested and working on Nano RTM.  https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md\n. Glad it is helpful - I am curious which offline install method you chose and why.\n. Yes that is what I was asking.\nCool.  You can now do it over the wire in a Nano remote session without doing the save and file copy first by using the method under \"Installing on Nano Over the Wire w/out Chocolatey Nor .NET Core Installed (should work for Server 2016 as well)\" in this document: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md\n. Would it be possible to review all the binary file headers and update them with appropriate values?  For instance, this would be a great way to know that this is the version built by Microsoft PowerShell Team by looking at headers.\n. Just an FYI on this thread - i do not test the package for downgrade - so it would be more reliable to do an uninstall and reinstall to move backward.\nThat said - since the commands that move the files in place are copies with overwrite - it might be reliable to downgrade - but I haven't specifically engineered it for downgrade and don't current test it for that.\n. @SteveL-MSFT - this is an environment variable that could be set during install?  Setting during install would also allow user override.. @SteveL-MSFT - ok does this sound about right:\n- OpenSSH install sets Machine environment variable %TERM% to \"xterm\"\n- OpenSSH install exposes a switch to allow this default to be changed during setup\n- If overrides are needed for specific users, those users would simply create an environment variable of the same name to override.\nFYI - I believe the environment variable won't be available in SSHD until one reboot because Service Control Manager only reads System environment during Windows startup (because it starts so early)?  If you want it available without reboot you might have to re-read the environment variables from the registry upon service startup.. @SteveL-MSFT - Do we know if a reboot is needed for sshd to hand out this environment variable (or updates to it) - i.e. does it rely on inheriting Service Control Manager's environment variables?\nIf a reboot is needed I was thinking of adding a log note saying one is needed for the value to be used by SSHD.\n. @SteveL-MSFT and @manojampalam - to avoid one more reboot scenario, you wouldn't actually have to listen for environment updates constantly - just read them from the registry upon startup.\nSuch an implementation would also be helpful for updating this value - they could just restart the service rather than the machine.\nIt does not look like TERM is settable in SSHD_CONF?\nI will assume that it will require a reboot unless I hear otherwise.\n. @bagajjal - it is due to my lack of understanding which side was sending to which!  Now that I understand I will set it in both the Machine context and the Process context so that it is immediately available in the console where the install occured.. Setting it in machine context will default the value for anyone who logs on and uses ssh.exe.  This also sets it for all process types whether they are associated with interactive use or not.\nIf any given user wants to override the machine value for just themselves, they can manually set the the same variable in their user environment variables.\nSetting it at the process level (non-persistent) just prevents having to start a new process to re-read the machine environment.  This is a common challenge when installing automation prerequisites that you usually want to use in the same process.\n. It is possible that the new method of using the scheduler (rather than psexec) is not properly able to register the keys.  Can anyone confirm or give me the steps to confirm when the keys are being registered properly by ssh-add ?\n. This should be working now in the latest release (still in moderation).  You can try it with:\nchoco install -y win32-openssh -version 2016.05.30.20160902 --params='/SSHServerFeature /KeyBasedAuthenticationFeature /UseNTRights'\n. @rbertoche - you seem to be using the old package id.  Please use the id \"openssh\" like this:\nchoco install openssh -confirm -params '\"/SSHServerFeature\"'\n. If you used the chocolatey package to do this install, then the lack of public key auth was likely the fault of the chocolatey package - it was not properly copying the ssh-lsa.dll on new installs.\nIt is fixed in version 0.0.9.20170308, which as of this moment is still in moderation.  It can be pulled before moderation is complete by specifying the version on your chocolately install or upgrade command line.. Could someone please comment on this - I am updating the chocolatey package and I'm not really interested in getting a bunch of bug reports on how the package overwrites an existing openssh client because the Program Files folder chosen by this project is in use by many other products and tools for many years now.\nI also wanted to add to the above list that if the folder for the project is unique - there is no refactoring for install scripts that uses the exe folder of sshd.exe to identify whether the running version of sshd belongs to the Win32-OpenSSH project.  If this folder is not unique, then I would need proper, unique EXE headers to identify that a given running sshd.exe is the one belonging to this project and I'd need to refactor install scripts.\n. I think what will end up causing the least pain for [a] the customer, [b] the installation developer and [c] the product development team,  in the long run will make the most sense.  Basically whatever avoids clashes with existing software in the ecosystem.  The pain and headache of trying to identify if whatever is in %ProgramFiles%\\openssh is a previous version yours (or something else) during upgrade or not and what to do if not.  \nOr if after win32-openssh gets installed there another installer overwrites files there without bothering to check whose binaries are there - the next time your installer runs it is trying to deal with a confusing situation because the evidence of your previous version is there in meta data - like an MSI product code or Uninstall entry - but isn't accurate to the binaries on the system because another software's installer has overwritten.  Personally I feel this could create both a mountain of install code as well as frustration with the product.  \nSomething that seems like a simple installer decision could bubble up to be a major product satisfaction issue.\nI am not clearly seeing how the fact that you will eventually merge with portable openssh affects the install folder decision?\nAlso how does the merge into openssh portable affect creating an MSI installer?  Does the MSI installer still get used after the merge?  Is there an openssh portable installer?  (The openssh portable manual install instructions are horrendous: http://ftp.openbsd.org/pub/OpenBSD/OpenSSH/portable/INSTALL)\nAlso related - I feel at least the server portions of the package should always be put into some sub folder of Program Files and this should be encouraged by being a default - that is not super easy to change - even if people are given a choice.  There are a lot of extra protections for software that resides there.  \nAlso, users can easily choose locations they don't know are writable by everyone (like ProgramData) - opening the binaries to malware.  I'm not sure if openssh portable speaks to the security of the files of the server portion of the software - but I think the defaults for the Windows version should reflect good security practice as per standard DevOps and SecOps practices as known at this time.\n. I think \"Windows\" is better than anything with \"Microsoft\" in it when working with open source like this.\nI'm probably stating the obvious, but \"Win32\" should not be used because although it is meant to distinguish \"Windows binaries\" versus other platform binaries - it also implies 32-bit.\nWhat about C:\\windows\\System32\\OpenSSH or C:\\windows\\System32\\WindowsOpenSSH?  I'm not sure what the internal Microsoft rules are about that - but SSH definitely intends to be as integrated as other terminal utilities right?\nWould definitely disambiguate which version was being used by folder name alone.\n. @hbjastad - I am curious - did you create the userid in windows and logon with the userid in order to create that user profile folder?  Or did you just create the folder itself and place the keys there?\n. @manojampalam - I agree that is what is supposed to happen, but my experience on Nano was that I had to grant SeServiceLogonRight for Nano.  Nano was the only place I saw it.  I was getting a permission denied until I added that.\n. Would love to know if I am wrong and/or if it is a Nano only issue - I could limit that change to just Nano if that is all that is affected.\n. @manojampalam - were you able to determine if this permission must be explicitly granted for Nano?  I have seen some other issues reported that imply the permission must be explicit for nano => https://github.com/PowerShell/Win32-OpenSSH/issues/378\n. @MattHodge - are you installing the fixed version? => 2016.05.30.20160807\n. This should be working now in the latest release (still in moderation).  You can try it with:\nchoco install -y win32-openssh -version 2016.05.30.20160902 -params='\"/SSHServerFeature\"'\n. This should be working now in the latest release (still in moderation).  You can try it with:\nchoco install -y win32-openssh -version 2016.05.30.20160902 -params='/SSHServerFeature'\nchoco uninstall -y win32-openssh -params='/SSHServerFeature'\n. This should be working now in the latest release (still in moderation).  You can try it with:\nchoco install -y win32-openssh -params='/SSHServerFeature'\n. @mohag - the server must be rebooted for public key auth (for the new DLL to be loaded as an authentication library) and the chocolatey package notes this in a warning at the end of the package. \nIt seems many are missing the Chocolatey package warning and then concluding they still need to run install-sshlsa.ps1 - but it seems to me that's when they finally try rebooting.. Looks like AppVeyor is free for open source: https://ci.appveyor.com/signup/free\n. Did you manually install?\n. @jdunn0 - you have a better root cause than I - the entire reason I grabbed the Anniversary update was to enable bash - so I guess this is part of the \"Windows Subsystem for Linux\" for feature then?\n. I can then also detect developer mode SSH and error out and telling the user that they need to either [a] specify the switch for an alternate SSH port or [b] specify the switch to disable developer mode SSH.\nFYI - in the chocolatey package I can provide a switch to [a] provide an alternate port, [b] disable developer mode SSH if it exists.\nUnfortunately it seems like this could be a relatively common conflict since those interested in SSH are probably also interested in bash.\n. @joeyaiello - can you tell me the best way to disable the feature.  My first thought is to be the least destructive possible - just shutdown the two services and mark them disabled.  Then if the individual discovers they actually need it more than Win32 OpenSSH, they have a relatively easy path to reenable.\nWhat I don't have a feel for is whether simply disabling the services will be sufficient disablement to prevent conflicts with Win32 OpenSSH.\nAre you able to ask the authors of the Developer Mode SSH?\n. Cool - I proceed with that assumption.  If the Developer Mode SSH is found AND IF the package has not been asked to another port for SSH - it will error out.  It will also note that they have the Developer Mode SSH and they can either disable the two services and try again or use the new /SSHServerPort parameter to specify that Win32-OpenSSH Server run on another port.\nI also dramatically improved conflict checking for whatever port is used for /SSHServerPort (and the default is 22 if not specified).\n. @clarity99 - if you use the chocolatey package you can change the port that OpenSSH uses.\n. @joeyaiello - I am hoping the article cover how to disable or reconfigure the port of the Microsoft SSH Server? (Versus putting OpenSSH on a different port?)\nAlso - will it give code rather than GUI walkthroughs for making the changes?\nThanks.. @manojampalam - does this include not requiring the user to use psexec.exe to switch to system context to register the keys?\n. Awesome!\nIf we're on the same page you will always leave the fourth position to be a zero right?\n. I am trying to indicate that the fourth position would need to be reserved exclusively for packaging only fixups if it was to be useful to me in the way I am requesting.\nSo I need to be able to re-release packing multiple times with the exact same version of the binaries for fixups.  If that part of the version number is used by the binaries for any reason, then I end up obfuscating the real underllying version whenever I have to override it just for the package.\nI understand this might not be something you are not willing to entertain doing - just trying to explain that for packaging fixups to not create confusion about the actual binaries version contained in the package - it needs that last version segment on the binaries to always be \"0\" (unused by the binaries basically).\n. Just an FYI that another method I can use for chocolatey \"package fixes\" is to append two numbers to the last version position.\nI've actually had to do this with the current release so you will see that for 0.0.0.9 of the binaries, the chocolatey package version is 0.0.0.901.\nObviously there is a possibility of slight confusion that the binaries have a version of 0.0.0.901 - but at least there is a way forward if you do not wish to leave the fourth version position untouched for packaging.\n. @marco-vaz - Nice work!\nYou should know that the Chocolatey package is also able to be used offline without chocolatey, without WOW64.\nMore information is here: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md#complete-offline-install-wout-chocolatey-nor-wow64-nor-powershell-5\n. Yes.\nhttps://chocolatey.org/packages/openssh\n. Could also add this to the top of the script (which works in PSH 2 and 3, unlike #requires -RunsAsAdministrator)\nIf (!([bool]([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] \"Administrator\")))\n  {Throw \"You must be running as an administrator, please restart as administrator\"}. Do you think it should use SSH or ps remoting for connecting to other boxes?\nFyi - I used the scheduler to get ssh-add into system context on Nano without depending on 32-bit psexec.\n. @SteveL-MSFT - what about just building remote key copying into ssh-add and submit it to the openssh main project as an improvement?\nSeems like remotely adding a key is significant enough to be built in functionality and that it would be natural for that to reside in ssh-add.\nThis could simultaneously solve the problem of having to run ssh-add in system context on the remote system if ssh-add was to talk to sshd directly and have the remote ssh-add call run in the same context.\nThoughts?\n. I was going to say it should be an MSU - but those don't play nice over remoting.  In otherwords, don't play nice over Chef, Puppet, Packer, etc, etc.\nI've been doing MSI since it was released - I'm not sure it's the right answer - but that would be a long conversation for a github thread ;)\n. @Fitzroy87 - Thanks, I am actually aware of the work arounds.  I designed one script function to recognize that it was being asked to do MSU over remoting and it would automatically do the extraction (using expand.exe) and installation (using dism) on the far side without directly running the MSU. (for any arbitrary MSU it was handed) \nHowever, each practitioner has several days of forehead bludgeoning on a brick wall to both discover and then remedy this.  So when going into a new project, I usually try to avoid putting my fellow techs through that.  \nIn this regard, I would consider SSH a special case - it exists to enable remote access - so it would be sadly ironic if it is a labyrinth to install remotely.  It would be like installers for automation tools that can't be easily automated (nah, that never happens ;) )\n. @SteveL-MSFT  - do you know if all these packaging types are buildable in the CI solutions you are considering?\n. Did you restart your shell to re-read the PATH environment variable?  \nIt would be nice if it was immediately usable in the same shell, eh?  Could I bother you to submit a feature request to have the package set the current process path as well: https://github.com/darwinjs/chocopackages\n. Well that would be  bug report then - it should add to the path - please include details about your OS.\n. I believe it is your use of \"./\"  On my system straight \"ssh\" works WHEN I AM NOT in the SSH folder.  The .\\ works if I am in the folder where ssh is.  \nUsing .\\ or ./ when I am not in the folder fails.\n. Try scp with no command to see whether you get the help.  For me scp is working the same way - displays the help in the exact same scenario as ssh.\nThere might be a problem with SCP in your configuration - but it woud not seem to have anything to do with the path.\n. Those services are part of Windows 10 \"Developer Mode\" - usually enabled to have access to Anniversary Edition's \"Windows Subsystem for Linux\" / Bash shell.  \nWhen using the chocolatey package it should detect this condition and refuses to install unless you disable those services or use a custom port for Win32-OpenSSH.\nMore here #318 \n. Hello, I am the Chocolatey packager for OpenSSH and can explain that oddity.\nOn chocolatey the package id \"openssh\" was used some time back for a package that never went public (never got out of moderation).\nThe simple way to gain the id for the package was to make me a moderator of the existing ID - hence the old, non-relevant stuff hanging off it.\nI will check if a cleanup is possible - but yes, the official chocolatey package id for this openssh project is \"openssh\".\n. I have found that on Nano you must grant the special privileges for LogonAsAService (even though this technically should not be necessary) and I receive the same error you did when that is not done.\nHere is a dockerfile I have been playing with that calls the same install script from the chocolatey package - it seems to install fine - including granting the appropriate privileges - but I have not had a chance to completely test the end result.\nhttps://github.com/DarwinJS/ChocoPackages/blob/master/openssh/Dockerfile \n. Your \"start-service sshd\" command above does not look like it is a remoted prompt into a Nano machine?\n. Yes - I believe the docker file I referenced will get you around the service not starting as it grants it appropriate permissions.\n. @manojampalam - seems odd to place logging data in a subfolder of the binaries folder (on Windows).  Has there been any discussion of making the default more windows compliant?  Like c:\\programdata\\ssh\\logs or something similar?. Consider using the Dockerfile I published with the package source.\nFYI - it has not been tested recently and I don't have time at the moment and understand you are in a hurry.\nhttps://github.com/DarwinJS/ChocoPackages/blob/master/openssh/Dockerfile. @friism - I have not actually tested any of my conjecture in the first post of this issue.\nI was hoping for a statement from the Dev team (@manojampalam) on this ticket as to what SSH expects when the first (and possibly only) reason someone is creating a user is so they can use SSH.\nI do know that proper user creation creates many of the necessary objects, but that the user profile folder creation does not happen until the first windows logon.\nI also don't know if the very first user logon is via SSH - does SSH trigger the normal user profile creation - or do something else.\n. @mikemaccana - I am the chocolatey packager for openssh.  The chocolatey package is not an official part of this project.\nMore importantly, however, is that the Chocolatey provider for Windows PackageManagement is very old and in need of re-release.  The current version (2.8.5.130) is nearing 2 years old and it is not advisable to use it because:\n- it was never tested much in production environments\n- the chocolatey client itself has undergone massive change in that time period\n- it is not designed to work alongside the regular chocolatey client - so using both on the same machine can be problematic - and given that it is buggy and not feature complete, an organization who tries to use only PackageManagement will likely need to switch gears back to the regular client.  I covered these items in a module of the PluralSight course on Chocolatey.\nThe team at Chocolatey.org is working on the Chocolatey Package Management provider to try to reconcile these issues.\n. I forgot to mention that the Chocolatey package is mentioned in the first bullet of the install instructions here: https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\nAnd that I keep these instructions up to date - which also deal with using the package to install on Nano and for Docker builds: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md\nBut I do not test the Chocolatey package specifically with the Chocolatey provider because it is still so \"Alpha-ish\" at this point.\nI didn't mention in the previous post that the chocolatey provider does not simply re-use the regular chocolatey code, but has a forked version of the chocolatey client code compiled into the provider assembly.\n. @mikemaccana - the team has lodged an issue to create an MSI package (https://github.com/PowerShell/Win32-OpenSSH/issues/350).  \nRight now I created the Chocolatey package as the \"primary\" install method (actually places files, etc).  If, however, the team creates a solid MSI package, I should then change the chocolatey package back to it's normal role of a meta-installer over a vendor install.  It is generally Chocolatey FOSS packaging best practice not to reverse engineer and duplicate the logic of an official product installer (if the product installer is solid)\n. No problem Mike.\nYes, Install-Package can only get packages from package providers which are \"plug-ins\" for Windows PackageManagement.\nThe PackageProvider kinda of handles the \"package manager technology framework\" bits (actual code on your system to process packages) and then each package provider has \"sources\" (Get-packagesource) that are pointers to actual repositories that use that package manager technology framework.\nThere is some blurring - for instance the PSGallery and NuGet packageproviders both require that nuget.exe be installed as that is their underlying package management framework.\nNew package providers can come online at anytime and are dynamically discoverable and installable.\nExecute the \"Find-PackageProvider\" CMDLet to get the current list of package provider you can install.\n(You can also see it requires the PSGallery Provider to install many of the other providers by noting the \"Source\" column).\nGet-PackageProvider shows you the locally installed ones.\nAlthough theoretically issues \"Install-Package\" would find the right package across ALL your sources (repositories) on ALL your providers - it is safer and quicker to specify the provider like this:\nInstall-Package PowerShellCookbook -provider PSGallery\nAnyone can extend this with any package manager.  For instance, someone could write the code to support installing ruby gems on windows through package management.\n. Microsoft kicked off the effort for a Chocolatey Package provider for PackageManagement, but then turned it over to the community - and it has languished.\nThe team at chocolatey is looking at addressing it.  One challenge is that the \"model\" implementation of a PackageManagement provider is a standalone .NET assembly and I think the chocolatey team is trying to see if they can use the same code base so that there is always feature parity without constant code syncing.\n@ferventcoder could speak to the strategy overall.\nAs far as the official package the PowerShell team provides, there has been talk of using an MSI in #350, but also talk of it being part of Windows - which would seem to imply a dism/install-windowsfeature type install - AFAIK windows OS features are not implemented as MSIs.\nSo it seems to be up in the air.\nNo matter how the PowerShell team decides to provide it, a chocolatey package can be used to \"wrap\" the decided upon installer - that is what chocolatey generally does - wrap existing vendor installers.\nWith the openssh package I am knowingly bending that general expectation by having authored a complete installer in chocolatey.  However, the package \"openssh\" can seemless change to supporting a provided installer when the time comes.  In fact, assuming there is a few rough spots in the first implementations of a provided installer, the chocolatey package can retain \"fixup\" functionality until such time as a provided installer is completely up to par.. @mfrost66 - I am interested in the scenario where you need to install outside of the defaults - because if you install outside of Program files - especially on desktop OSes - you lose a lot of built-in malware protections.\n. Well I can't speak for the dev team - but this is a pre-release software that does not have an installer supported by the team yet.  So defaulting files in the zip to the location advised in the installation documentation means it just works out of the box for anyone who wishes to use the default configuration.\nI'm sure once they get a full blown installer that allows choosing the install folder, it will update any other locations that need to point to the install folder using the logic built into the installer.\n. If you used the chocolatey package to do this install, then the lack of public key auth was likely the fault of the chocolatey package - it was not properly copying the ssh-lsa.dll on new installs.\nIt is fixed in version 0.0.9.20170308, which as of this moment is still in moderation.  It can be pulled before moderation is complete by specifying the version on your chocolately install or upgrade command line.. FYI - the recently checked in code ssh-add-key.ps1 has syntax errors - but more concerningly it uses the schedule task CMDLets which were added in PSH 4 and are therefore not available on PSH 2 (win7/server2008R2).\n\nThese lines show a very simple implementation which seems to work on Win7 through Nano:\n$fullpathkeylist = \"'$TargetFolder\\ssh_host_dsa_key'\", \"'$TargetFolder\\ssh_host_rsa_key'\", \"'$TargetFolder\\ssh_host_ecdsa_key'\", \"'$TargetFolder\\ssh_host_ed25519_key'\"\n    schtasks.exe /create /RU \"NT AUTHORITY\\SYSTEM\" /RL HIGHEST /SC ONSTART /TN \"ssh-add\" /TR \"'$TargetFolder\\ssh-add.exe'  $fullpathkeylist\" /F\n    schtasks.exe /Run /I /TN \"ssh-add\"\n    schtasks.exe /Delete /TN \"ssh-add\" /F\nFrom:\nhttps://github.com/DarwinJS/ChocoPackages/blob/master/openssh/tools/chocolateyinstall.ps1#L708-L712. I am updating the Chocolatey package for the latest release and have just removed this code.  Thanks for mentioning it.. @manojampalam - can you elaborate how the Windows releases will work once the code is merged to that repo?  Will that repo contain the windows zip files in their releases?. Ok - so this github repo will continue to be the place to get the compile bits then?. Keep in mind that this would allow the sshd service to write malicious code to it's bin folder.. @friism - I'm actually wondering how this worked before.  If you are calling ec2sysprep in \"SysprepInstance.ps1\" I think it will sever the connection with Packer.\nI think the proper way is to manipulate BundleConfig.XML like this: https://gist.github.com/davidobrien1985/fe92aeac51ba35926cabed315fa1c449#file-bundleconfig-ps1-L1-L12\nNotice in that automation there is no attempt to call sysprep as it seems to be done as part of AMI creation via BundleConfig as described here under \"BundleConfig.xml\": http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/UsingConfig_WinAMI.html\nBut I have to admit I haven't played with BundleConfig.xml yet - but will be soon :). @friism - I am wrong about BundleConfig handing the calling of sysprep for you.\nHowever, upon more research, I am going to call Start-Process -FilePath PowerShell.exe -ArgumentList \"$env:programfiles\\Amazon\\Ec2ConfigService\\scripts\\InstallUpdates.ps1 -Patch 0\"\n-Patch 0 does NO patching, but it does do a bunch of cleanup steps that AWS uses in their own prep / update of AMIs.  I am going to call it with Start-Process so it runs a separate process.  I am not using this with Packer at the moment - but I using with a system that will experience a failure if sysprep.exe shuts down the machine.  I am hoping that all the processing in InstallUpdates.ps1 will provide sufficient delay for my process to exit.  If not, I may have to resort to scheduling InstallUpdates.ps1.\nI also found out you can edit BundleConfig.xml to remove the shutdown parameter from the ec2config sysprep call.. @manojampalam - I am thinking the chocolatey package could just create the logs folder all the time so that this confusion could be avoided?  Maybe you could also put an empty flag file in the logs folder in the zip so it is created?  I wouldn't do just an empty folder as many unzippers have to be explicitly told to create empty folders.\n. @manojampalam - already added along with a couple additional logging features: #577 . @fjaenal - I believe this is the fault of the chocolatey package - it was not properly copying the ssh-lsa.dll on new installs.\nIt is fixed in version 0.0.9.20170308, which as of this moment is still in moderation.  It can be pulled before moderation is complete by specifying the version on your chocolately install or upgrade command line.. @fjaenal - No it's me that wasn't quite sure whether you were affected by this bug.. Can you please post your install script on gist and link it here?. @manojampalam - I was just noticing \"Couldn't create pid file \"./sshd.pid\": Permission denied\" in the first log posted in this thread.\nI assume this trying to create a pid file next to sshd.exe?\nAFAIK, Windows apps shouldn't try to save any state data next to an exe.\nTo me preventing storage of file based, machine-wide state data next to binaries is one of the security improvements of Windows over linux because it keeps the binaries more secure from malware.\nCould ALL file based, machine-wide state data for ssh be pushed to %ProgramData%\\openssh to follow Windows conventions - without requiring sshd_conf changes to do so?  Actually examine and address the issue throughout the openssh code base?\nD.. @manojampalam - Yep - sorry I forgot that conversation.  \nI am not familiar with the model of ensuring something is owned by \"Trusted Installer\" unless it is explicitly under Windows Resource Protection (WRP).  The ACLs for WRP protected resources actually LOCK OUT admin and system.  There are also usually special AppCompat shims in place to lie to anything that tries to update resources owned by Trusted Installer.  (These rules are created separately - they are not automatically enabled by the resource being owned by Trusted Installer).  These last two attributes are what simultaneously [a] prevents updates to WRP resources - even by elevated setups and MSIs and [b] maintains compatibility so those setups don't' fail.\nIt's possible that the reason for having \"Trusted Installer\" own a resource has broadened since WRP was introduced in Windows 7 - if so I'd be interested in a pointer to the details!. FYI - I am working support into the package so that two runs of the package (each followed by a reboot) can accomplish the update of ssh-lsa.dll.  \nHowever, this support\n1. will require a special new switch and \n2. the package will NOT orchestrate the reboots or re-running of itself.\n3. is smart enough to install fine on first time install with only one reboot (as before)\nThe best way for mass updating would be to do a manual run of the new version on a test machine and watch the log messages to understand IF ssh-lsa.dll is updated - if so, create the orchestration scripting required to accomplish the two reboot solution.  This manual pre-qualification step should already be common practice for anyone doing software deployment automation at scale.\nIf the new switch is not used, the package will continue to do as it always has - \n1. only try to update ssh-lsa.dll if the file size has changed and \n2. FAIL to make the update upon reboot due to the presumed ineffectiveness of PendingFileRenameOperations to work on lsass.exe locked files.. It may also make sense for the zip file to provide a new helper script \"upgrade-sshlsa.ps1\" or similar which can be used to ONLY remove ssh-lsa.dll from the registry key.  Although it would be very similar to \"uninstall-sshlsa.ps1\", just having the script would also be a cue that there are special procedures required for updating ssh-lsa.dll.  It could also contain logic to indicate whether an upgrade is needed at all for the current \"from\" and \"to\" versions where it is run - maybe it kicks out a exit code that reveals whether a reboot is needed.  It would also be best for it to be runnable WITHOUT the folder being placed in it's final position so that automation developers can learn whether an upgrade is needed BEFORE making any changes to the target system.. @manojampalam - could you please clarify what happens if a system has ssh-lsa.dll configured from a previous install and then v0.0.12.0 is installed (upgrade scenario)?  Might also be a good note for the release notes if it is known to cause problems.\nI have updated the chocolatey package to start the process of remove ssh-lsa.dll automatically - but on the first time it finds a locked ssh-lsa.dll (actively configured) - a reboot would be required to completely free it from memory.. Although it does not list on the public website due to being a pre-release, I maintain a chocolatey package for powershell-core for windows here: https://chocolatey.org/packages/powershell-core. @MaximoTrinidad \nThis should install chocolatey:\niex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\nOther methods are here if that does not work: https://chocolatey.org/install\nThen start a fresh prompt and run this to install powershell-core v18:\nchoco install powershell-core -confirm. Oh I didn't know you had it already.  Add '-pre' to try, but it will just\ntell you it is installed by another means.\nOn Apr 8, 2017 7:58 PM, \"Maximo Trinidad\" notifications@github.com wrote:\n\nI tried using the choco install powershell-code -confirm and I'm getting\nan error:\n\"powershell-core not installed. The package was not found with the\nsource(s) listed.\"\nThis is interesting because I already have PowerShell v6.0.0-alpha18\ninstalled.\nShould I uninstall and try again.\n:)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/656#issuecomment-292753867,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ALD1huB6TxoTTsYE8_DDvWup2juzshZzks5ruB8wgaJpZM4M3lal\n.\n. @rpereda - I believe you have referred to authorized_keys as a folder in multiple issues?\n\nIt is not a folder, but a file containing a list of keys.. v0.0.11.0 has ssh-lsa.dll as well.\nOn line 10 of the below linked dockerfile, add '-MaximumVersion 0.0.11.0' to keep your docker builds at 11 until this is fixed.\nhttps://github.com/DarwinJS/ChocoPackages/blob/master/openssh/Dockerfile. This is really an installation issue right?  Or does the service need to be tested under both contexts as well?. @manojampalam - excellent - exactly what I was asking about.  Might be nice to put that in the documents somewhere.. I have a work around - but I'm not sure if its implications.\nI am also creating this code to work in the chocolatey package - so a little concerned that there are other similar scenarios lurking - so I'm still very interested in why this happens and if there is another class of \"special user accounts\" that might cause similar errors with this particular approach to removing acls.\nI replaced the code:\nif(-not ($myACL.RemoveAccessRule($_)))\n          {\n            throw \"failed to remove access of $($_.IdentityReference.Value) rule in setup \"\n          }\nWith:\n$IdentityToProcess = $_.IdentityReference.Value\n          Try \n          {\n            $result = $myACL.RemoveAccessRule($_)\n          }\n          Catch [System.Management.Automation.MethodInvocationException]\n          {\n            #Ignore \"IdentityNotMappedException\" for \"APPLICATION PACKAGE AUTHORITY\\*\" identities (and others)\n            If ($_.FullyQualifiedErrorId -ne 'IdentityNotMappedException')\n            {\n              Throw \"Error trying to remove access of $IdentityToProcess\"\n            }\n          }\n          Catch \n          {\n            Throw \"Error trying to remove access of $IdentityToProcess\"\n          }\nI tried some methods other than \".RemoveAccessRule\" (e.g. RemoveAccessRuleSpecific) and they get the same error on the same user ids.. Could someone on the dev team test the permissions scripts on Windows 7 / Server 2008?\nAt first I started getting \"The security identifier is not allowed to be the owner of this object\" for granting ownership of the server keys to \"NT SERVICE\\sshd\" (only on Windows 7) and researching a work around led to the following rabbit holes:\nhttps://learn-powershell.net/2014/06/24/changing-ownership-of-file-or-folder-using-powershell/\nhttps://www.sysadmins.lv/blog-ru/strannosti-set-acl.aspx\nhttps://social.technet.microsoft.com/Forums/scriptcenter/en-US/87679d43-04d5-4894-b35b-f37a6f5558cb/solved-how-to-take-ownership-and-change-permissions-for-blocked-files-and-folders-in-powershell?forum=winserverpowershell\nI tried an implementation of the code in that last post and couldn't get it to work.  The error changes to \"Attempted to perform an unauthorized operation.\"\nI also tried reordering to put the ownership change AFTER the granting of full permissions to \"NT SERVICE\\sshd\" and AFTER the revoking of inherited permissions - no luck.. @bingbing8 - thanks for your reply.\nThe strange user account is happening only on Nano.\nGiven that the \"Domain\" is \"APPLICATION PACKAGE AUTHORITY\" for both accounts, I was guessing that it is some type of virtual account - maybe having to do with PackageManagement in general or Nano Server Packages as a primary method of updating the OS?\nI will try the method call you suggest when I get some more time to focus on this.\n. I will work these changes and the new wiki page into the re-acling utility script I am building (Reset-SSHKeyPermissions.ps1).\nLet me know if you would like me to maintain the re-acling script as part of the project.\nNote that it has many uses beyond the first migration from an old version.  For instance, when you install server on a machine that previously only had the client.. @manojampalam - ok sounds good.\nPersonally I feel the solution should NOT be designed with the idea that the primary method to set permissions will be to run something within each user context who needs to set permissions on keys.  \nIf it is designed to be able to work correctly when run from a central, admin type account - then it should work for regular users easily.\nHowever, then it will also allow migration as well as correction of user key permissions by maintenance scripts (via scheduler or a management agent) that would naturally run under an admin profile.. @manojampalam - thanks for the feedback invite.\nAlso thanks for putting effort into documents to help us get this right!\nThe discussion on elevated versus non-elevated does not conclude with information on which scenario does NOT work.  FYI - THE built-in Administrator user account does not have UAC enabled - not sure if you need to mention that as some management frameworks use THE \"administrator\" rather than system account (e.g. AWS cloud formation) - also packer can be configured to use it.\nPresent One Best Practice Model First and Alternatives As Footnotes\nIt seems to me that if \"SYSTEM\" owns the file and rules the service things stay simple and it seems the default your team has been working against so far.  I would present that as the primary approach throughout and then at the END have a section on alternative configurations where SystemAdministrator can own the files and then they must be registered with ssh-agent.\nAlso I believe your team requires SSH-Agent be running is sshd is?  I know the chocolatey package follows earlier advice to register the keys with ssh-agent in SYSTEM context and then DELETE the keys.\nIn any case I would establish the desired default behavior and outline it first.\nAlthough this keeps the documentation simpler, frankly most development teams test ONLY ONE integration / installation model when doing their main tests.  Most of the users of openssh will want to stick closely to that model as others just don't get as much testing as the code moves forward. (even if the design of the software theoretically supports alternative configurations)\nIf the team feels that there really, really isn't a preferred installation model - then they should do automated QA testing against ALL supported installation models as that would really prove out the desire to not have a preferred one.\nI believe this get-acl .\\ssh_host_dsa_key | Set-Acl ssh_host*key might be a bad code sample in practical working environments as it will try to re-write owner information which almost always causes a problem - especially if the user running this is not already the owner.\nAll Configuration Helpers in PowerShell\nI know that PowerShell is much more verbose in terms of setting permissions, but I would certainly like to see it used as the only code in this guide.  \nThis will help by:\n ensuring compatibility with Win 7 through Nano\n ensure no need for customers nor Microsoft to distribute utility binaries for things like the desired \"Enable-SSHRemoting\"\n ensure no 32-bit utilities get caught up in the mix like early versions of the install instructions for openssh.\n ensure the ongoing ability to easily trigger this through remoting without pushing utility files around (I know that icacls is everywhere already - but keeping to PSH guards against other utilities creeping into install instructions over time)\nI am working on a \"Reset-SSHKeyPermissions\" which drives across the ProfileList registry key to find ssh keys (then you know those have had a valid windows logon) - but it is all PowerShell.\nIf it seems like there would be too much code - that is probably an indicator that you need to be distributing a \"Open-SSH Configuration Helpers\" admin module with OpenSSH - providing this has been a huge strength of many of Microsoft's traditional products over the last decade.\nComplete, Working Code for Making a System Compliant\nAs per my most recent blog post (https://cloudywindows.com/post/back-to-basics-testable-reference-pattern-manifesto-with-testable-sample-code/) I am a big advocate of working reference patterns - not a bunch of \"off the top of the head\" pseudo-coded samples.  \nInstallation Code Testing\nIMO the working code examples for installing/configuring should be tested on Windows 7 (PSH 2 syntax, .NET 2) and Nano (.NET Core) as - in my experience with the Chocolatey package - those represent the edge cases that cause the most code adaptation to be necessary.\nFor These Very limited permissioned keys Create a \"How To Delete / Replace / Recover From Misconfiguration\" section\nWe will all need to know how we can remove, updated or re-ACL these keys if only one user owns them.  If that info is already in this document, it should have a dedicated section.  This should have accompanying working code.  . @manojampalam - glad it is helpful.\nMy feedback was meant to indicate that if there is flexibility in the way permissions are set, that you would put the one that will be tested front and center.  In fact, I would not even mention other models unless there is known utility value to a given end user.  For instance, the fact that key files could be owned by Administrator should either not be included or be a foot note if in fact your team does not configure it that way on their machines.\nThis would be a consistent \"permissions specification\" regardless of what or how many packaging and distribution models you end up supporting.\nThe name of \"OpenSSH-Health-Check\" implies it has a disposition to not changing anything.  Maybe something more general like \"OpenSSH-Utilities\"\nAlso, I would advise you just drop the psm1 in the Openssh folder and not to put it in PSModulesPath - the reason is that the version of the module will then ALWAYS match the installed version of OpenSSH.\nPersonally, I feel single-point-of-registration code (like PS Modules) takes us backward 20 years to shared DLL hell (COM Registrations) - while every other piece of code on Windows is / has moved to using explicitly private copies of such code.\nIf I am going to muck with checking Open SSH health or permissions I don't mind explicitly loading the PSM1 at it's full path.\n. @manojampalam - I totally agree that simplicity in design should be priority #1.\nAfter that has been pushed as far as possible, then my \"Adoption Catalyst\" headset kicks in - whatever lights adoption on fire - do it!  99% of individuals and computers that eventually leverage openssh couldn't care less about any of the details - so at that point it should be one-button, mobile app type simplicity if it is at all possible.\nI worked at one point creating software deployment automation that ran on 14,000 machines - 1% failures on an \"upgrade over a previous version\" was 140 machines spread across the planet - that would take over two weeks to look into.  So the more something \"just worked\" out of the box - all the better!\nP.S. I also think the \"Adoption Catalyst\" headset is a sliver of entrepreneurial thinking that is truly relevant to almost any context.. @bingbing8 - sounds good - thanks for all your work on making it support all the platforms that openssh supports.. The universal installer has been giving the SeAssignPrimaryTokenPrivilege to \"NT Service\\SSHD\" for a long  time now.  Possible since September of last year?. Not sure what you mean - I have my own code.  Are you saying the chocolatey package is not doing the grant of the token privilege correctly?. @manojampalam - apologies I missed the enumeration of profiles in FixHostFilePermissions.ps1 - I will call this script.  Thanks for providing a non-per-user approach!. @bingbing8 - while I haven't tested the resultant install for lockout - the chocolatey package is calling FixHostFilePermissions.ps1 to fix the permissions.  I will close this as already being addressed by the tools provided with Openssh.. Wow you can refactor code at lightning speed!  Thanks for diving into this.\nI tested the updated module code from the branch you noted.\nI can no longer control the prompting behavior.  \nThe -quiet switch is no longer available and the -confirm switch does not suppress the 30 second time-out confirmation prompt - so we are back to extending an automated install of a basic sshd server to 18 minutes even when there are only a few user files to process.  In addition, the onscreen logging is quite a bit longer with all the prompts.\nWhen I requested that -confirm be used instead of -quiet I also meant that the 30 second timeout on each permission command should be suppressed as I have pre-confirmed my desire to make that happen by using \"-confirm\".  In fact, I wasn't as concerned about properly implemented \"ShouldProcess\" support as I was about using a more conventional switch to suppress any confirmation prompt behavior.  It is cool that full shouldprocess has been implemented - but I think that the confirm switch should also control this prompting behavior or the -quiet switch should be reinstated.\nI am also still getting errors on setting the permissions on individual user files - I thought that might have been in scope to fix when you were transitioning the code to only write the access control list and not the entire permissions object when only removing ACLs?\nThanks so much for all your work on this and I apologize if my requests have been unclear and/or too divided across different Github issues!\n\n. @bingbing8 - I simply meant that the actual code base itself may have been better off giving some time for the new permissions model.  Choco package using opensshutils seems to be handling the transition well enough.. Set-SSHKeyPermissions.ps1 is part of the chocolatey package and addressed the problem of setting all user based keys during install and was designed to be run by an admin user in order to set permissions on all user keys.\nI am working on version 0.0.15.0 of the chocolatey script and Set-SSHKeyPermissions.ps1 will be retired in favor of the utility script FixHostFilePermissions.ps1 that ships with the zip.. I can submit a PR for this request if that is acceptable.. Ahh yes - I realize that the comment I put on #756 was for this issue - I had found the code on the pull request and tested it.  Thanks!. That works fine @bingbing8!. @dariusj18 - you said:\n\nI didn't see this before, however I think I see the problem, I have Powershell 4.0, so I get errors when running the script\nGet-ItemPropertyValue : The term 'Get-ItemPropertyValue' is not recognized as the name of a cmdlet, and more\n\nCan you please tell which script(s) generated these?. @bingbing8 - this is great!  Works on my Windows 10 install now.  I am planning on shipping this patched module with the chocolatey package and have it overwrite the older one.. @bingbing8 - yes there are a lot of challenges with requiring PSH 5.1 (or any PSH upgrade) for something as small as this.\nThe below (plus more if I had time to think and write) are why I always maintain PowerShell 2.0 compatibility with any of my code that has to run on Win7/Server 2008 R2 RTM.\nCompatibility:\n\nPowerShell Upgrades (especially from 2 to 5) require .NET upgrades - many machines have software stacks (especially servers) that are sensitive to the .NET version and cannot be moved forward.  Many times the sensitivity is not in software under control of the machine owner - but rather is a sensitivity in some other dependency they require for their own or Off The Shelf software.\nThere can be PowerShell version sensitivities in the main business software stack - especially if any of it has elected to internally use PowerShell for scripting or other types if integration with PowerShell\nPowerShell upgrades the entire WMF stack - which can also have similar challenges as those mentioned above - but for the management stack (software used to manage the node).\n\nLogistics:\n\nEnvironment consistency - most shops will not want just the machines they install OpenSSH on to have a different version of PowerShell than everything else, so then the first software to require a new version begs the question of upgrading the entire fleet of similar purposed machines.\ngetting an upgrade as fundamental as PowerShell 5.1 out is quite a logistical chore and a project in itself and rarely can large installations give 100% assurance the new version will make it out everywhere.  For example 10% exceptions on 14,000 machines is 1400 - can't really follow up on why for every case.\nEven if the administrator of the target environment is willing and able to qualify whether they can upgrade PowerShell - it's a lot of work to get OpenSSH on the machine when simply using a different openssh client would not require this.  In my opinion it is a huge burden to put in front of getting openssh on a machine - especially when resolvable by changing code syntax.\n\nPutting My Money Where My Mouth Is:\n\nthe above reasons are why I have maintained the Chocolatey PowerShell (full version) package to NEVER forcibly upgrade .NET to the required version - instead the package fails and makes the administrator responsible.  Why? - because I don't want automatic dependency resolution to toast 500 servers under the care of an admin who elects to use my package to upgrade.\nit is also why the chocolatey installer for openssh uses WMIC instead of Get-wmiobject - the former is present on Nano and the later is not (at least not on RTM version). @bingbing8 - thank you for this!\n\nI have tested and I get some errors and the file permission does not change - please see the screenshot.\n\"ProtectedAdmin\" is a custom user who is a regular admin - running elevated when the code runs.\n\n. This Windows 7 machine also has .NET 4.5.1 because Chocolatey requires it.\n\n. @bingbing8 - yes I have those lines.. Ok - I got this one figured out.\nI remembered that chocolatey installs .NET 4.0 and then on PSH 2.0 systems it still uses PSH 2.0, but it changes the CLR to 4.0 when running PowerShell (only under chocolatey - not for the entire system).  I forget why but I think it had to do with some serious CLR 2.0 limitations.\nThe below screen show shows output of $psversiontable running under chocolatey.\nAlso I updated the If statements to ($psversiontable.psversion.major -gt 2) which works for chocolatey and should also work for non-chocolatey psh 2.\nThis was updated on these lines:\nhttps://github.com/PowerShell/openssh-portable/blob/latestw_all/contrib/win32/openssh/OpenSSHUtils.psm1#L20\nhttps://github.com/PowerShell/openssh-portable/blob/latestw_all/contrib/win32/openssh/OpenSSHUtils.psm1#L48\nhttps://github.com/PowerShell/openssh-portable/blob/latestw_all/contrib/win32/openssh/OpenSSHUtils.psm1#L59\nThe screen shots also show successful permissions setting and owner setting.\nThe package also cleanly uninstalls.\nYou can test with this exact chocolatey package (with the $psversiontable debug output still being emitted) from a test chocolatey feed detailed in #763\n\n. @bingbing8 - I had not yet tested with authorized_keys files in profiles other than the one running the opensshutils.psm1 code.\nIt looks like we have the same problem with setting permissions on the authorized_keys files of other user profiles on Win7 because this line: https://github.com/PowerShell/openssh-portable/blob/latestw_all/contrib/win32/openssh/OpenSSHUtils.psm1#L104 Does not have an alternative for PSH 2.0 like the other corrections you made earlier.\nYou can see in the screenshot the other fixed lines are working correctly.\n\n. Thanks for the updates.\nHave you tried deleting and recreating your test authorized_users files in other profiles on Win7 - or were they present during a previous run?\nI am guessing here - but in the case that an authorized_users file ALREADY has the correct owner (I created my test ones WHILE logged in as the specific user), then doesn't this line: https://github.com/PowerShell/openssh-portable/blob/latestw_all/contrib/win32/openssh/OpenSSHUtils.psm1#L190\nread the ENTIRE acl (including the owner), the code in these lines is SKIPPED: https://github.com/PowerShell/openssh-portable/blob/latestw_all/contrib/win32/openssh/OpenSSHUtils.psm1#L196-L224\nwhich might affect the subsequent lines that try to set only DACLs because the entire ACL was read and we are in that weird set-acl lockout condition where we are denied writing the existing owner as a new owner (when we don't care about writing the owner) because we read the entire ACL, but only changed DACLs?\nWhen you tested on Win7, did you create the authorized_keys files as the actual users whose profiles they are in?  If not, could you give it a run that way?. @bingbing8 - I guess I didn't have the right branch.  Just tested with the recently updated latestw_all and it works fine on Win 7 now!. I have tried -quiet and it does pass through - sorry my bad! \nThere is a 30 second timeout on each attempt to set permissions when -quiet is not used.\nIt would still be nice to have \"-confirm\" functionality separated from \"-quiet\" (no logging messages) functionality as per #749 . This was after a successful install of 0.0.15.0 using FixHostFilePermissions.ps1 - which successfully set the permissions during install.\nSo the new permissions model does not seem to allow for clean removal via direct deletes by an elevated admin.\nMaybe another helper \"RemoveHostFiles.ps1\" ?. @bingbing8 - this is the same Windows 7 machine where I ran the 0.0.15.0 install with the newer module files.\nBy the time this delete runs, the service has been removed (as it has already been in the below screenshot).  This is a standard removal order so that the files can be removed without having the service exe locked.\nIs there any problem if the ACLs for the service are still on the files when the service is removed (they don't show up below if they are)?\n\n. I can't reproduce this myself.  So I am closing it.  However, I am still having the problem in #758 with \"The security identifier is not allow to be owner of this object\" - so not sure if I will still be able to do a clean delete once that is fixed properly.  Will open a new report if that happens.. As per my updates to #758 I am not having that problem anymore either.. @carlivar - Apologies - some cruft did make it back into the package.  I have fixed it and retested from the test feed.. @bingbing8 - if you haven't already, could you please increment the module version number so that it is easy to tell that the Chocolatey release has a new version than the 0.0.15.0 zips ?. Thanks for all the help on this.. $ErrorActionPreference did not end up working when embedded in the uninstall.\nNeither did the following code when used in \"ChocolateyUninstall.ps1\" (was trying to make sure the parameters were populated so the permissions run could complete successfully):\n````\n    Import-Module \"$toolsdir\\OpenSSHUtils\"\n    $RunningUser = New-Object System.Security.Principal.NTAccount($($env:USERDOMAIN), $($env:USERNAME))\n    dir \"$TargetFolder*\" | % {repair-filepermission -FilePath $_.fullname -Owners $RunningUser -ReadAccessOK $RunningUser -AnyAccessOK $RunningUser -confirm:$false}\nIf (Test-Path $TargetFolder) {Remove-Item \"$TargetFolder\" -Recurse -Force}\n\n````\nI think I will publish the chocolatey package and just mention that the chocolatey uninstall switch /DeleteConfigAndServerKeys does not work yet until I can find a fix.  \nAlthough I think this switch is needed for a complete solution - I'm not sure how much use it actually gets at this early stage in the life of win32-openssh.\nAn uninstall without this switch works fine as it does not attempt to delete the config nor key files.\nLet me know if there is a way for me to call the current version of Repair-FilePermission that would fix this error.  Thanks!. @bingbing8 - I don't know the answer to \"why\" - but I do know that without doing this, the key files are not removed on Windows 10.  Win7 seems to work.. I updated to the latest module and still get the error if I don't provide -ReadAccessNeeded - but the workaround does work.  Thanks.. The -force parameter does indeed work!\nNow using this approach in chocolatey package 0.0.16.0. @megamorf - yes that is what I suggested in the original issue and I believe @bingbing8 has already worked out the code.. It looks like this is not compatible with Nano like the previous approach was.\nI do not seem to have the ability to reopen this issue.\n\n. FYI - The fix in the pull request is in the Chocolatey package for 0.0.17.0. @bingbing8 - I was indeed testing this on an \"upgrade\" - but I believe I was upgrading Win 7 as well and didn't see it.  Hopefully that code will help with whatever the conditions are where there occurs and it's good to know it is not Nano specific.. @Chinggis6 - Does your company possibly disable Diffie-Hellman as per this advisory?   https://technet.microsoft.com/en-us/library/security/ms15-055.aspx. Copying @SteveL-MSFT and @joeyaiello \nTo me the reasons are both compelling and significant:\n- This location is well documented so it is easier to learn that it should be addressed.\n- This location addressed by many existing security standards and tools.\n- This location is directly configurable by group policy (local and AD configured)\n- This location can be pre-populated before sshd or ssh are installed on a machine.\n- This location could be made to disable ciphers for both client and server. (rather than possibly having to do both server config files and config files for each existing user and new user)\n- This location is likely perceived as \"one stop shopping\" on disabling these ciphers on Windows.\nWith the importance of security, I feel these benefits outweigh the generally good design principle of having one place to configure things.  It would be easy enough to show in logs that these ciphers are disabled by this registry key.  Could also be surface in error messages (\"The client attempted to negotiate the cipher Triple DES 168 which is disabled on this system in HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\")\nI think doing this would help people \"fall into the pit of success\" rather than provide another opportunity to learn that they are unprotected and then have to write regex's over config files and run on that on all their machines - and run it repeatedly to catch new installs of ssh or new user profiles (while being unprotected until the maintenance process runs again).\nP.S. While I both love open source and have a distain for the USER half of the registry - having a standardized configuration store has created some significant advantages for Windows as this demonstrates.\nIn fact, if openssh supported a redirection of it's config file to the registry (that was made very clear in all logs and startup messages) all of the above benefits would be available to configuring all aspects of it - including local gpo enforcement.\n. @bagajjal - I just noticed that the instructions say \"\"Full path (case sensitive) of the shell executable.\" - but then in the screenshot it shows the Windows folder with a lowercase like this \"c:\\windows...\"  If you do a dir \"c:\\\" - the windows folder shows as \"c:\\Windows\".\nIs it actually case sensitive in that path?\nInterestingly, (never noticed this before) if you do \"dir c:\\windows\\system32\" the windows folder displays in the output as \"c:\\windows\".. I could add per-target OS defaults for TERM so that win10 / 2016 gets this, while the others get XTERM.  As people test others OSes we could add special defaults for them.  Let me know if this is desirable.. Coded and tested.\nI did not test what Nano does with this setting on - but it is getting set since the kernel is > 10.0\nFYI, in order to properly get Windows Version from Powershell 2 through Windows 10, the following code appears to be the minimum (and the registry keys are a bit messy as of kernel version 10 and \"environment::OSVersion.Version\" is depreciated):\nIf ($psversiontable.psversion.major -lt 3)\n{\n  $OSVersionString = (Get-WMIObject Win32_OperatingSystem).version\n}\nElse \n{\n  $OSVersionString = (Get-CIMInstance Win32_OperatingSystem).version\n}. @bagajjal - not sure what you mean?  \nThe installer I maintain also installs just the SSH client utils.  In fact, that is the default mode if you don't give it additional switches.\nDo you mean that ssh.exe will do it's own defaults if no TERM variable is found?. Ok cool.\nI assume if TERM is set externally it overrides?. @JW0914 - You might want to try -command syntax to call the file like this:\nPowershell.exe -ExecutionPolicy Bypass -Command \". .\\FixHostFilePermissions.ps1 -Confirm:$false\"\nNote the first \".\" is a call operator.\nIn your actual execution scenario what is calling Powershell.exe ?. From my testing I believe this was only absolutely required (service won't launch) for Win7 and maybe Nano?. @Andrei-Paul - a little snooping shows that some organizations might be managing this policy with group policy and when they do so, they may have to add \"NT SERVICE\\ALL SERVICES\" explicitly: (e.g. https://www.codykonior.com/2015/11/16/rebuilding-the-log-on-as-a-service-list-after-it-has-been-overwritten-by-group-policy/)\nHowever, if this is the case - then whatever you put in there will keep getting removed.\nYou might want to check your machine's resultant set of policies (when domain joined) with the command: \ngpresult /H GPreport.html. Avoiding this Error with the Chocolatey Package:\nWhen you are installing only the client tools, the ssh-agent feature is optional and must be specified like this:\nchoco install -y openssh -params '\"/SSHAgentFeature\"'\nThis facilitates install scenarios where the ssh.exe binaries are needed for reasons other than supporting ssh on an interactive user machine. (e.g. as a automation prerequisite to be able to connect to another system).\nFYI - whenever the /SSHServerFeature is used, the package automatically flips on the /SSHAgentFeature as well - so you may be used to that scenario auto installing the agent.\n /cc @manojampalam @bagajjal . I would love to know if you have any similar problems with the universal installer on that machine?\nThis oneliner should do it (installs chocolatey as well):\nset-executionpolicy RemoteSigned -Force -EA 'SilentlyContinue';iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/DarwinJS/ChocoPackages/master/openssh/InstallChoco_and_openssh_with_server.ps1'))\nIf you have PowerShell 5, this oneliner does it without chocolatey:\nset-executionpolicy RemoteSigned -Force -EA 'SilentlyContinue';iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/DarwinJS/ChocoPackages/master/openssh/InstallChoco_and_win32-openssh_with_serverPS5.ps1'))\nFull instructions for all install methods (including offline and docker installs) are here: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md\n. @cretz - since I wrote the universal installer, I certainly understand the desire to know how to do the install from scratch ;)\nHowever, so far as I can tell. everything you've experienced in this thread (and much more) is already incorporated in the universal installer through many hard learned lessons.. They are documented as the code that makes up the installer.  There are too many (especially adaptations for Nano and win7/PSH 2) to keep track of and to constantly re-compare to improvements to the install scripts that are part of this repo.. It is a little better - but the registry screenshot (https://user-images.githubusercontent.com/23668037/31640389-f133818a-b292-11e7-8522-c2bb744eb67c.png) is still showing a combination that:\n\nyou mention is unnecessary (powershell.exe with the option specified)\nthat is not the common way it is documented everywhere for powershell  (although powershell.exe does take /c as an option, everywhere on the plant it is documented as taking a dash and the full name like this \"-command\")\n\nIt would be nice if\n1. The documentation cited an actual example of usage of this switch where it would actually be needed (aside from ones listed that don't really need it)\n2. The registry screenshot matched an example of usage of this switch where it would actually be needed\nIf the whole registry key is a leftover from when the code didn't previously handle the defaults for powershell.exe / cmd.exe / bash.exe - then in the spirit of lean engineering, I would just remove it from the documentation and the code.  \nOtherwise a known use case where it is absolutely needed would make the best example :)\nIf the screenshot must use an example that doesn't really need the configuration, I would change it to \"cmd.exe\" and \"/c\" or \"powershell.exe\" and \"-command\" so that it makes more sense to everyone's defacto expectations.\nI would also probably change this text \"- command option for the default shell.\"\nTo something like \"- the switch that the configured default shell requires to execute a command and immediately exit and return to the calling process.\". I think it would make more sense to simply allow it to point to another hklm reg key that openssh could populate.  This way the value is still retrievable by defacto windows config methods but protected from a user level override.  It would not be necessary to lock what key it can point to, but if being set by any authorized setup program - the program should only allow hklm.. Should also mention that this allows the flexibility for the openssh key to be decided later - or not at all - deployment automation specialists who setup openssh could elect to establish a location if openssh project does not want to.. @parkovski - traditionally windows has handled the \"admin write permissions\" by simply requiring that the target be in either of the program files folders or either system32 folder.  If for some reason the permissions on these locations are non-standard, then the system is probably in trouble anyway.\nThis is effectively the built-in windows \"whitelisting\" for \"only an admin can change / update stuff in these locations\".\nFor instance, when many accessibility programs were disabled by changes in Windows 7, Microsoft made a way for them to work, but they had to add themselves to an HKLM registry key and then be on one of the previously mentioned paths.\nOne advantage to using this method is you don't actually have to check permissions and you don't have to limit permissions - any changes from standard permissions in these areas were done by an admin anyway.  Also, OpenSSH's internal way of checking permissions does not check \"effective\" permissions which would be required for Windows PowerShell and cmd.exe as you can't limit permissions to these files to an exactly specified ACL (like OpenSSH expects of key files) and not have bad things happen.\nDifferent tangent - my plan for the openssh installer was to allow you to specify a set of paths to probe and it would find the latest shell on that path and populate this key.\nIt could use get-command and grab the version number and take the latest.\nIt could even allow crossing between shell types and stipulating exactly one full path (for example to windows powershell).  It would only proceed to new file specs if nothing was found with the previous.  It would also allow you to stipulate a version of core if you only wanted a specific one.\nIf it finds nothing in your search specs, don't populate the key, which results in default behavior.\nExamples:\n```\nPowerShell for Windows with the bitness that matches the platform:\n-PathSpecsToProbeForShellEXE 'c:\\windows\\system32\\windowspowershell\\v1.0\\powershell.exe\"\nThe latest version of powershell core (including favoring the new EXE name), if none, windows powershell\n-PathSpecsToProbeForShellEXE \"c:\\Program Files\\PowerShell*\\pwsh.exe\",\"c:\\Program Files\\PowerShell*\\Powershell.exe\",\"c:\\windows\\system32\\windowspowershell\\v1.0\\powershell.exe\"\nThe latest version of core, if none, cmd.exe\n-PathSpecsToProbeForShellEXE \"c:\\Program Files\\PowerShell*\\Powershell.exe\",\"c:\\windows\\system32\\cmd.exe\"\nSpecific version of core, if none, windows powershell\n-PathSpecsToProbeForShellEXE \"c:\\Program Files\\PowerShell\\6.0.0-beta.6\\Powershell.exe\",\"c:\\windows\\system32\\windowspowershell\\v1.0\\powershell.exe\"\n```\nThe challenge I ran into is that the version information is not in the PE header of powershell.exe. \nI submitted this issue which also discusses a work around using the powershell core folder level (and limitations of that):  https://github.com/PowerShell/PowerShell/issues/5166\n. Hmmm after this discussion maybe I'll scan the results and skip any paths outside of the four I mentioned unless the installer receives the switch -AllowInsecureShellEXE.  Then admins are empowered, but also warned.. I have the logic described above working for /PathSpecsToProbeForShellEXE and an additional switch /AllowInsecureShellEXE (which gives warning ending in \"Very unwise!!\")\nTested and working on Win7, Win10 and Nano.\nEven with the probing built, the idea that opened this issue is still relevant.  Allowing this registry key to point to another \"Admin only updatable\" location where PowerShell Core's \"version to use\" could be found.  This is because this probing mechanism cannot update the OpenSSH key when a newer version of PowerShell core is installed.\n. @diogocp - the reason is that malware could theoretically \n\nread this registry key \ninsert a user level %SystemRoot% environment variable which redirects the shell to a exe that pretends to be a shell like powershell - but monitors everything that goes on.\n\nBy requiring a literal path - no such attack is possible.\nWhich raises this idea for addressing this problem @manojampalam - what if the code that reads this registry key:\n\nReads ONLY System level environment variables.\n\nThis way it protects the \"system\" domain by only using environment variables that can be set by an administrator.\nThis would solve two problems:\n- setting this variable across a set of machines that vary in where the %windir% is (e.g. windows installed on C: or D: across a set of machines)\n- setting it to custom environment variables - it would still only read and use them from the Machine environment variables.\nThe call to get only machine variables in PowerShell / .NET is: \n```\n```\nMore info: https://msdn.microsoft.com/en-us/library/system.environment_methods(v=vs.110).aspx. @parkovski - yes, but in the registry they are unexpanded - meaning they could contain embedded environment variables.  So they would need to be retrieved ONLY from the System context, and any expansions should technically only be done if they reference system context as well. . @kice - are you really running version 0.0.10.0 ?  If so you should update to 0.0.22.0.. @fjaenal - in theory you could use cmd.  Backporting everything required could be significant effort both to do the first time and then to maintain when installation information is updated in newer releases.\nThings like the complex permissions setting in things like: https://github.com/PowerShell/Win32-OpenSSH/blob/L1-Prod/contrib/win32/openssh/OpenSSHUtils.psm1 it could quite be difficult.\nAlso adding special permissions to the user running sshd can be challenging.. @fjaenal - I maintain the Universal Installer.  Although it is housed in a Chocolatey package, it is designed to be used without Chocolatey as well.  In fact, you don't even need internet access after you've downloaded the package once into your organization.  You can also extract the package to a shared location and run installs from there.\nYou can follow these instructions: https://github.com/DarwinJS/ChocoPackages/tree/master/openssh#install-scenario-4-complete-offline-install--network-based-install--sccm-or-other-esd-install-wout-chocolatey-wout-wow64-wout-powershell-5-wout-internet\nThis installation method will also work for easy upgrades to newer versions as the install script is designed to do an upgrade as well.\nYou don't need chocolatey or powershell to be running after install.\nThe OpenSSH installation no longer requires a reboot under normal circumstances.. FYI I just updated the instructions to be clearer for your deployment scenario: https://github.com/DarwinJS/ChocoPackages/tree/master/openssh#install-scenario-4-complete-offline-install--network-based-install--sccm-or-other-esd-install-wout-chocolatey-wout-wow64-wout-powershell-5-wout-internet\nAlso the heading says without \"PowerShell 5\" - it means you don't need version 5 (which contains PackageManagement), not that you don't need PowerShell at all.. @manojampalam - is it possible for that page to just contain a forward link to: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md. @saurabhverma999 - yes there is.  The universal openssh installer uses the least common denominator command so that it will work on all OSes and powershell versions targeted by openssh.\nThat command is here: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/tools/chocolateyinstall.ps1#L540\n. @manojampalam - is this registry setting in the setup instructions.  I don't remember seeing it anywhere?  I think the universal installer might be handling this by giving SSHD service user the user right to change tokens.\nI also thought that SSHD always requested \"HighestAvailable\" in regard to elevation so if the user is admin they would automatically have an elevated setting?\nCan you clarify because it seems like this setting is making a global system change that affects more than just SSHD.\nIf this reg change is required for certain conditions I would probably make it an option in the universal installer - but I've never seen it surface before.\nThanks,\nD.. @bingbing8 - or anyone familiar with the recent changes to OpenSSHUtils.psm1 - could someone let me know what functions I would call in the current code to get the equivalent functionality of the previous Repair-FilePermissions ?\nThanks.. @joeyaiello - thanks for looking into this.\nI must apologize!  I did a cursory glance at the code and thought I could not find the function.\nAfter doing more testing I have found that the uninstall I wrote does not search for the module in the correct place.\nSo apologies to @bingbing8 and your team!\nYour questions to me are still relevant, so here are some thoughts.\nFYI - An eons-long theme in software deployment automation is: Getting \"install\" tested under real-world condition is hard.  Getting \"upgrade\" and \"uninstall\" tested under real-world conditions is even harder.  To add hardship to that they are a typical Murphy-Pattern (i.e. the hardest part of install to get right).  You will see this in the below in my response to \"Why do you need to call Repair-FilePermission directly?\"  Way too much install / upgrade / uninstall testing is done under conditions that do not emulate actual installs - for example, many software distribution systems use the \"SYSTEM\" account for installation and do it under a Service - both of which can cause edge case issues - but they are rarely tested as part of regular development.\n\nIn the installation I call https://github.com/PowerShell/Win32-OpenSSH/blob/L1-Prod/contrib/win32/openssh/FixHostFilePermissions.ps1 - because it seems like the \"official\" way for interfacing with OpenSSHUtils to ask it to do all the fixups.  It depends on OpenSSHUtils module.  \nAlong that line if you are going to bundle this up, then I would suggest that the meta-functionality in FixHostFilePermissions.ps1 and FixUserFilePermissions.ps1 needs to become exposed functions in OpenSSHUtils rather than separate scripts.  (Backwards compatibility could be maintained by making these simply load the module and call the right function.)  To be clear these are two helper scripts that ship with OpenSSH along side OpenSSHUtils.psm1\nTangent: FYI - the permissions set by FixUserFilePermissions.ps1 should be tested with a few OTHER windows SSH clients - to understand compatibility - and if it is incompatible - why?  Git's built-in ssh would be a huge one, but there are also other common user oriented openssh clients.\nFor Repair-FilePermission usage - in the uninstallation I can't assume that the Uninstalling user id has permissions to the properly secured key files because I don't know who they are.  I do assume they are admin.  I also didn't want to assume permissions hadn't been adjusted by custom scripts - so they might pass sshd.exe's checks, but be stricter than what opensshutils module sets - either by accident or on purpose by custom scripts.  So I directly use Repair-FilePermissions because it is the only way I can force permissions to these files with the current user id doing the uninstall - regardless of what that user id is - so a completely clean uninstall is possible.  So I believe there is a special need during uninstall to need to \"undo\" the proper permissions and this is how I accomplished it - it would be awesome if this need was directly or indirectly accounted for in opensshutils.\nFor CMDLet naming for all the opensshutils functions that have to do with correcting permissions, I would probably tack toward \"Ensure-SSH*\" - so \"Ensure-SSHSecuredHostkeyPermissions\", etc.  This is because \"Repair\" implies I know they are broken, \"Ensure\" implies \"I don't care their current state - just fix it if it's wrong\"  Using SSH next seems to indicate the scope of the CMDLets.\n\nSome other items to consider in this library - these are helpers I've written to be sure OpenSSH can install in all scenarios from Win7+PSH2 through Nano Server - the two extremes in which it always seems require special adaptation:\n- Setting user rights for SeServiceLogonRight and SeAssignPrimaryTokenPrivilege in a way that is compatible across all supported distros.  I believe that there are scenarios where this is required - I think Windows 7 and/or Nano seemed to require the logon as a service right, even though \"NT SERVICE\\sshd\" should implicitly have it on most targets.  I do this in https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/tools/AddAccountToAssignPrimaryToken.ps1 and https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/tools/AddAccountToAssignPrimaryToken.ps1 - but I hear rumblings that my code may not be reliable.  I tried to adapt the DSC code for local policy that your team developed (which is known to work in Nano) - but I ran into errors.  That code is here: https://github.com/PowerShell/SecurityPolicyDsc/tree/master/DSCResources/MSFT_UserRightsAssignment\n- I coded up an externally callable function that let's one search for a suitable shell executable to set as the default shell for OpenSSH. I purposely made it a separate file so it could be called after upgrading PowerShell Core - but it can also be used by any automation that upgrades any exe being used as the default shell.  By having this as a part of opensshutils you can apply some guidance.  For instance, my function requires a \"yes I don't care about security\" confirmation switch if setting the shell exe to something outside of Windows built-in \"admin whitelisting\" permissions (ie anything not in a Program Files folder or a system32 folder).  Although my implementation is not simple I think it encompasses how I might need to perform this task in real-world scenarios.  Here is the code with comment based help: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/tools/Set-SSHDefaultShell.ps1\n- I use this helper to detect anything listening on port 22 (and check whether it is presumably a previous version of win32-openssh) - I had to find code and customize it myself for 100% compatibility for Win7 through Nano: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/tools/Get-NetStat.ps1\n- Ensure that NONE of the syntax in OpenSSHUtils is post-PowerShell 2.  I have applied a lot of fixes that are simply regressions to PSH 2.0 \"style\" syntax that then work fine through PowerShell 5.1.. @bingbing8 - thanks for the information on secedit and the code reference.  I will work it into my code.\nYour code and the Add-Privilege function would be great additions to OpenSSHUtils!\nEven though code samples for setting User Privileges is common, I think this bit would be a great addition to OpenSSHUtils because the effort to ensure that the code works across all OpenSSH targets is a core value of OpenSSHUtils !. FYI - Get-UserSID from https://github.com/PowerShell/openssh-portable/blob/latestw_all/contrib/win32/openssh/OpenSSHUtils.psm1 is also very valuable as an export.. @joeyaiello - thanks for the consideration - very appreciated!\nSome thoughts...\n- I will work to be compatible very quickly - in order to use the exact code as provided through github I will likely just lag a little in the provision of the package when it occurs.\n\"Better yet, if you could decouple and pick up the Gallery version that would be best.\"\n- I'd like to stick with what's in the package to always be on the same update cycle.  Additionally, in order to serve clients who can't download from the gallery (all non-PSH5), the code will need to continue to ship with the product for a long time, correct?\n\"This should eliminate the need for bootstrapping host keys, but we're not totally closed on how it should work.\"\n- if you do this you would either need to take a dependency from the sshd.exe to the opensshutils.psm1 to make the permissions changes OR integrate the permissions code into sshd.exe.  If you do the second I would really like to see ALL file permissions code and possible all special permissions code inside one of the openssh EXEs so there is not two code bases doing the same thing differently.\n\"I'd expect that wrapping a well-built MSI is significantly easier than maintaining the logic you currently have in the Chocolatey package. Is that accurate, or am I misguided there?\"\nUnfortunately, I would have to say I feel it is misguided - as I did in the previous conversation you are referencing.\nHere is a summary of why\n- MSI does not run on all targets - most notably nano.\n- at a minimum, your permissions settings requirements are going to require custom actions.  Managed code custom actions and powershell custom actions are hackable, but not officially supported.  So you'd be into C++ or an EXE.\n    - Design baed counter argument to this specific part of the concern is if you do code the permissions code into one or more of the openssh binaries you would be able to call it as a custom action during install.  In this case I would advise an EXE or a DLL that is ALSO callable by RunDLL - so that your customers can use these routines as well to re-assert permissions.   Hmmm - wonder if runddl is on nano?  Reminder - EXE custom actions are \"out of process\" while DLLS are \"in process\" - so DLL custom actions are more wired up during an MSI install to be able to bubble up better error messages without instrumenting a slew of exit codes - the downside to DLL again being less ability for customers to use this code.\n- also you will need custom action code to do things like \"scan if port 22 is currently in use\" - and many other things that you can see in the universal installer code.\n- proper leveraging of MSI upgrade over and patching scenarios requires MUCH MORE METICULOUS LONG TERM management of the GUIDs assigned to each code component (msi 'component').\n- beyond components there are also many other ways to 'go wrong' when building an MSI package - openssh is so simple, you shouldn't hit too many.\n- From a deployment perspective (openssh users), the most reliable MSI upgrades are to, via script, uninstall the previous version and install the next.  Many organizations do this as a matter of course because so many vendor's MSIs can't manage to do the previous bullet (meticulous release-to-release msi component management) well for the long term.  This is a hassle (that is killing me right this month on a enterprise package I support for DevOps server automation for a package we install on EVERY server).\n- From a deployment perspective if you do attempt to support official MSI \"minor upgrades\" and \"major upgrades\" - they require different command lines at deployment time - so I have to know BEFORE calling the installer if the current system has a previosly installed copy and call /f for a minor upgrade and /i for a major.  Another reason many shops simply uninstall and reinstall.\n- in my experience with packaging it, openssh \"install over\" requirements are very simple, but you still inherit the above challenges if you want to do your simple requirements via MSI.\n- you will need a package per bitness (or hack the 32-bit package to notice a 64-bit and install the right binaries - since openssh does not do COM and very little registry stuff, this might be doable) - but I think you're all ready doing that.\n- by the time you take measures to offset MSI's downsides, it will be functioning as mainly as a .zip - kind of like the PowerShell Core now.  At that point I don't understand the point of choosing MSI - the future is moving to ZIP archives - App-V 5, NuGet, .appx,\n .docx (OPC - Open Packaging Container - I know OPC didn't take a strong hold - but still much more transparent than .MSI)\n- you lose community support on the installer - even if you store the source in SCM compatible wix format - few have the desire to learn this old technology - but especially if they have to learn wix's specific source implementation on top.\n- quite frankly MSI is very non-DevOp-ish - and for as much as the team is wary about putting in Windows specific features (e.g. - having some registry based config overrides so that GPO can hook up and push policy BEFORE sshd.exe is installed, rather than having to be constantly scheduled to come in after) - this seems like a notable departure towards one of the most legacy and increasingly challenging technologies to package in.\nFor an installer I would suggest something similar to how I am doing the universal installer\n- make / keep the installer logical code as PowerShell that runs on all target platforms.\n- package it in nuget .nupkg (which is just a zip)\n- place the installation script inside\n- nuget cannot run an internal script - but you could put a wrapper around it to call the PowerShell based installer.\n- for non gallery installs the .nupkg can be further bundled with nuget.exe - but it can also just be \"unzipped\" directly\n- I know this might make windows normal servicing channels a little more challenging - but personally I would rather take an innovative look at how I might unzip a package and run a powershell under Windows Update than hamstring the other deployment channels with an MSI.\n- it is more infrastructure as code compatible because everyone can inspect the installation code\n- you will get more community involvement for fixing installer bugs\nI have built MSI packages and taught it to admins for over 15 years - I think its time is long done on the server / DevOps side of the house ;)\nPS - Unaccounted for in the universal installer:\n- for any installer you will have some tech debt if you stay with \"C:\\Program Files\\OpenSSH\" due to the possibility of someone else being there.  I have avoided this by staying with the original \"C:\\Program Files\\OpenSSH-Win\" in the universal installer.\n- properly splicing in defaults for new configuration items if and when necessary - without disturbing existing config.. It seems PowerShell/openssh-portable#251 is not merged for 1.0.0.0 - does that mean that I should not use the updated module reference syntax in packaging 1.0.0.0 ?\nThere are a lot of changes for 1.0.0.0 - so still figuring out what it all means for the packaging.. @manojampalam - if I am understanding you correctly, then I have a possible consideration.\nAlthough permissions on keys are set during the new creation routine - how do they get corrected if someone messes them up or if I have to restore them from backup?\nIn some cases (like the massive GitLab instance I help manage) having host keys change would be a big pain.\nI would say the ability to reassert permissions on an existing key set is important in the full lifecycle of managing SSH at a large scale.\nIs it possible to have the key generation processes to be triggered to simply correct permissions on existing keys?  Obviously it should require admin permissions and a switch so that it does not happen automatically against keys that have been tampered with or replaced.\nThe ability to reassert something like this and do only the required fixups is very much a part of DevOps.. @manojampalam - yes it is a simple chmod.  However, the tough part of this is that it is not easy to find information on the equivalent Windows file permissions that would satisfy the chmod statement (I have tried using google).. @manojampalam - thanks.  I think the previous reference to the universal installer as a note at the top of the install page (right before the install steps) was very helpful so that someone does not start down the long road of automating it themselves before they realize there is an automated install available.\nHere is the page I mean: https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH. At a minimum, I believe that would be the \"Session 0 Isolation\" security feature of Windows.\nYou can read more about why it exists and how it works here: https://blogs.technet.microsoft.com/askperf/2007/04/27/application-compatibility-session-0-isolation/\n. No all services run in session 0 by default.  There is not a way to get a service to run in session 1.  Additionally, any process a service simply launches runs in session 0.\nThere one other possible complexity in what you are expecting - even if sshd tried to launch a process as the user - it would also have to log them in and create a desktop to place the window on that you are requesting.  If that is the case, this part would be a bunch of code way above and beyond simply doing  \"launch a process as another user\".  Similar to how simply launching a process as a user on linux is different than that user interactively logging on.\nThe options after Session 0 was worked into the OS are to run the process as a background process (instead of a service) automatically triggered when the user logs on.  Or create a companion background app that is launched in the user context and the service process securely talks to it by some mechanism.  Similar to above, both of these methods do not take responsibility for launching that user's logon / desktop environment - they assume it is being created by the user actually logging on.\nBack when this came out I wrote VBScripts that demonstrated using the registry to talk between a service and a user process.\nAlso you can view what session things are running in using PowerShell's Get-Process:\nGet-Process | Select Name, SessionId. I have been explaining how session 0 isolation works in general and affects the use case you were after.\nThat is completely separate from whether you can successfully setup sshd.exe as a background process in your user session.\nI don't think you can because sshd.exe wants to have the permissions on host key files and ssh keys locked down to the service account context it normally runs under \"NT Service\\sshd\" (a virtual account created for any configured service).\nI'm not sure if sshd.exe will run if regular users are given access to these files - but you would have to run as a regular user logon to run it as a background task.\nI will let the PowerShell development team comment on whether this scenario is possible.  Certainly, it does not seem like a primary use case that most people would be configuring sshd for.. You might want to look into the windows scheduler - it is quite flexible for this:\n- Works remotely\n- you can trigger a task immediately\n- you can trigger at task once only\n- you can change user contexts (if you code their password into the job OR you schedule the job with their user id (and no password) for next logon\nFYI - I love PowerShell but scheduled tasks is one area I find them unnecessarily complex, so usually end up using schtasks.exe instead.. @mgkuhn - my understanding is that the openssh project is part of a strategy to provide winrm  remoting over SSH.  Windows remoting as seen in PowerShell is always text based, but does have full hooks for accomplishing remote admin.  \nSide point - even though winrm remoting hit the shelves with PowerShell - it is designed to meta to PowerShell and usable within other shells as shown through winrs for windows traditional shell commands.\nSo on the server side the idea seems to be to leave the GUI stuff in the past - very similar to the LAMP stack implementations that were common place right before containers.\nIf a GUI is needed the new Honolulu project enables that for the text-only Server 2016 edition (build 1709) - but it runs on a GUI enabled host and uses remoting for full management.\nHere are a few links:\n\nhttps://github.com/PowerShell/PowerShell/tree/master/demos/SSHRemoting\nhttps://poshsecurity.com/blog/2015/6/22/why-remoting-vs-ssh-vs-rdp-shouldnt-be-a-thing\nhttps://docs.microsoft.com/en-us/windows-server/manage/honolulu/honolulu\n\nDisclaimer - I don't work for Microsoft and I'm not speaking for the OpenSSH development team.\n. @codearoo - here is the target of that link: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md. @MartinSGill - Like you, I think it would be best if this worked out of the box.\nHere is a workaround that will at least make it work in PowerShell.\nIt uses the powershell \"stop-parsing\" operator --% described here: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_parsing\nssh-keygen.exe --% -t dsa -N \"\" -f stuff\nThis also works and is more self-documenting:\nstart-process -nonewwindow ssh-keygen -argumentlist '-t dsa -N \"\" -f stuff'. Sorry I've been on Vacay.\nHere are some thoughts on the information in #1023\n\nI feel text based log files should always be supported, ETW should be optional and configurable (like most ETW logs).  Since Windows openssh is keeping a linux-ish flavor (no registry, no GPO configuration), it seems to me it should also support simple text parsing for accessing log data.\nPermissions model should allow easy upgrades and complete, clean removals of all resources, including \"config\" resources.  If \"administrators\" group is allowed to have access to ALL of these - that should do it (I just can't tell if this is the case by the description in this thread).\nI think it would be very helpful to the openssh development team to NOT have any manual fixup steps to preserve settings from a previous version.  If user's make a mistake in these fixups, there will be issues filed and it will be very difficult to diagnose if they have a half baked upgraded setup. I think it would be better to work these into FixFilePermissions.ps1 or something similar.\nWould %ProgramData%.ssh (dot before ssh) make the machine folder more recognizable to Linux pros and follow the convention already in use for user profiles?\nwhat is meant by \"...user specific host keys...\" ?\n. @megamorf, lf you are referencing Copy user specific host keys to %programdata\\ssh, I believe this is a migration statement changing what should be a per-machine resource from an incorrect implementation as a user specific resource.\n\nMy question is how was it user specific because I thought they were in \"c:\\program files\\openssh folder\". @bagajjal / @manojampalam \nI see that the new install-sshd.ps1 sets the service startup to \"Manual\" - is there a technical reason for this or is it just a conservative setup and the installer must take conscious action to reconfigure for automatic startup?. @manojampalam - thanks.\nAnother question - do the server keys still need to be added to ssh-agent in system account context in order for sshd to use them?  This used to require psexec and the chocolatey package currently uses the scheduler to get it done on all supported Windows variants.. @manojampalam - thanks!\nAm I correct to reason then, that, for a machine that runs sshd service only (for example: client utils are not used for outbound SSH) - that the ssh-agent isn't likely to be needed?\nI ask because in the Chocolatey package I had force it to be configured anytime SSHD was setup.\nIf this would now be a rare configuration for a purely SSHD server machine, I would make ssh-agent optional - still configurable, but not setup by default just because the SSHD service is being setup.. A quick note about using ProgramData folders.  By default inheritance subfolders of ProgramData are only permissioned for CREATOR OWNER, SYSTEM and Administrators.\nThis means that the user who ran the install will be the only non Administrator to be able to see the files. \nIn large organizations there are IT workers that do not have full administrator rights when working on systems.\nFor this reason, it could be helpful to grant Read to Authenticated Users to the ssh subfolder.\n. @bingbing8 - thanks for testing and glad to hear it is working well!\nI just pushed a new version (1.0.0.20180131) that fixes the release notes link and does not automatically configure ssh-agent when sshd service is being installed (can still be installed with the correct switch).. Should be fixed in 1.0.0.20180201 which was just pushed.. @wigster - if you mean with the chocolately package you need to do this:\nchoco install -confirm openssh -params \"'/SSHAgentFeature\"'\nIt will be started for you.. @manojampalam, @coldacid's solution seems very useful.  I wonder if there could be a user contributed utility section in the openssh repo to house such things?. The installer can be used to update the port - in which case it also updates the firewall rule.\nI will consider changing it on the next version.. Procmon reports the bitness of everything it monitors (architecture) - if you monitor an example it might show evidence for the problem.. @rkeithhill - this is the default mode if you use the universal / chocolatey installer.\nI assume you know that the windows git client contains it's own ssh client that is only used with git commands?. I generally use git with vs code - but I've never had it have problems for ssh based repo origins.\nThe chocolatey package lives a double life (as a universal installer) - it can be used in several ways without Chocolatey.  See here: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md. @rkeithhill - there is also a switch for the universal installer for adding the ssh-agent service (without the sshd service).  It is SSHAgentFeature - see the docs / package metadata for usage.. @Suncatcher - I dropped a link to answer the question \"What is the universal installer?\" in this thread - too long to repeat in an issue.\nIt is also linked in the wiki - on the right hand navigation bar under \"Installation\" here: https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\n@bingbing8 - would it be possible to put the universal installer link back at the beginning of the installation instructions?  I think it handles a lot of the scenarios being raised by these installation questions.. The chocolateyinstall script is designed to know if it is running under chocolatey and it skips past chocolatey stuff if not.  Basically this amounts to the code for acquiring passed parameters.\nThe chocolateinstall.ps1 is also engineered to avoid direct dependency on chocolatey helpers.\nThe barebonesinstaller.ps1 simply sets script level properties using standard powershell switches.  Then when chocolateyinstall.ps1 is included by barebonesinstaller.ps1 - it uses those parameters rather than process the chocolatey parameters (which it knows to skip).\nThe net effect is that the built-in upgrade capability of the chocolateyinstall.ps1 is retained when run outside of chocolatey.\nSo for upgrades you just follow the instructions again with the new package version.\nUsing nuget to copy and extract the chocolatey package is just a way to get the following features without having to build them (these can be especially challenging on Nano):\n- enclose all required files in a zip (.nupkg is just a zip)\n- pull the package from a network source\n- extract the zip with a windows version independent and .NET version independent mechanism.. @Suncatcher - sorry that is out of date.  Please see the note \"SSHD no longer depends on ssh-agent server\" in the openssh v 1.0.0.0 release notes here: https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v1.0.0.0. I updated that line to read: IMPORTANT: ssh-agent is no longer required for sshd after version openssh 1.0.0.0\nYes - but only relevant if you are installing client tools and want ssh-agent.  I think you could also load it if you want to use client and server on the same box.. @Suncatcher - they are all intended to be in barebonesinstaller.ps1 - looks like SSHAgentFeature is not - will fix in the next release.\n@rkeithhill  - The latest is 7.6.0.0 (which syncs with the underlying version of openssh itself) - the previous was 1.0.0.0.  My reference was to show the first release in which sshd no longer depends on ssh-agent.. Should already be handled by this line: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/tools/chocolateyinstall.ps1#L445. @Suncatcher - that script is meant to be a sample to install a \"demo\" or \"proof of concept\".  If you like the approach you should grab a copy for yourself and put it in your own github repository or host it internally in your company.. Some good code in there - I like how your check for admin rights is linux compatible.\nI tested the universal installer on Powershell 2 / Windows 7, Nano server and under the SYSTEM account.\nWere you able to test in these scenarios?\nThe code in the universal installer is quite ugly due to this breadth of successful run environments - but it works!\nDocs: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/readme.md. This thread is getting long.  FYI - A dependency on package management means many valid deployment targets cannot use this code.. There is something that does a little more than that in the universal installer: https://github.com/DarwinJS/ChocoPackages/blob/master/openssh/tools/Set-SSHDefaultShell.ps1 . @manojampalam - shouldn't this code look up profile folder via API ?. Opps sorry @bingbing8  - it is this:\n$xml.Save($etwman)\nRight here: https://github.com/PowerShell/openssh-portable/blob/latestw_all/contrib/win32/openssh/install-sshd.ps1#L36. You could actually do this yourself with a little helper for pulling a key out of a registry key and into the keys file.\nThe challenge will probably be that they keys should not be stored in AD without some type of encryption or someone with rights to AD could use other's credentials.\nAlso, if you're not careful that data could be replicated to any LDAP sync'ed data stores that point at a company's AD.  Some companies do not allow much LDAP sync due to this concern - and leverage an SSO provider instead.. Sounds like you are talking about windows servicing.  If you consume openshh as an optional windows feature on win 10 / 2016 - you get all of that.. @bagajjal - sorry I missed your earlier mention.\nIt is not easy because it requires extra code because the package simply grabs the entire zip - so this requires extra code to transit and overwrite the one that would be in the zip.\nIf it is significant enough to rerelease one file - I would definitely rev the package version and the individual file version and provide a new zip.\nFrom your question though, it seems you may not have a binary file that tracks what the \"overall software version is\" - but rather every binary is required to have the same overall version.\nAt this juncture you could decide that ONE of the binaries carries the \"overall version\" and change it's version, the ssh-shellhost.exe and the package version only.\nThe other challenge you have with this is that since you don't package in an enclosing technology like MSI, you are dependent on something like Chocolatey to have a \"package level\" version number.  Having your own versionable packaging would help here too.  You could emulate this without an actual enclosing technology by always creating an inventory record in the Uninstall key via a simple .REG file.\nIf either of these approaches to having a \"package version\" that is different from the file versions is unappealing for any reason - I would change the version for everything - NOT publish changed binaries with identical versions.. FYI - Chocolatey published versions are immutable.  So the chocolatey version that is going through moderation follows their \"update of the same version\" scheme which is \"7.7.2.20180804\"\n. I was about 99% sure of this already - but only by being told - so I wanted to test it.\nThe below screenshot shows that when I start a chocolatey package in PowerShell 6.0.4, the internal script is still processed by Windows PowerShell 5.x.\nThe first $psversiontable is the host that the package is being run from and the second is running in the context of the package.\n\nI would suggest that you check the configuration of Windows PowerShell.  Especially if you have installed any PowerShell Core compatibility tweaks.\nIssues for the Chocolatey packages should be opened here: https://github.com/DarwinJS/ChocoPackages/issues\nThanks.. Hello - I am the Chocolatey packager for openssh.  I have been doing some advocacy for not clashing with existing solutions in this space.  In fact, the chocolatey package always confirms if the service called sshd is the Microsoft one before proceeding.\nWhile I have been an advocate, since openssh has lacked a regular installer, I'm sure there are a lot of installers and config MGMT systems that expect that specific name.\nMy efforts to advocate in this area helped inform the decision not to \"enable by default\" the Microsoft sshd solution after a given patch level of Windows. \nAnd even though I do advocate for avoiding clashes for existing solutions I do feel that a native version of something should be allowed to utilize the defacto service name / binary name.\nIMO the effort to avoid clashes at this level would be in installer code that does not assume the service name belongs exclusively to a given vendor.\nFor instance Microsoft now has native tar and curl binaries and they call them \"tar\" and \"curl\".\nThis approach to avoiding unnecessary customer disruptions  by all solutions \nimplies all sshd installers from all sshd solutons should:\n- check for existence and vendor ownership of sshd before installing - exit with a message and suppressable error code indicating why install / upgrade can't happen \n- same for upgrades\n- same for uninstalls\n- all of the above operations should check if sshd belongs to themselves EVERY time - e.g. don't assume sshd is yours just because your uninstaller is on the system (something may have changed it to another vendors solution)\nThe Chocolatey package is designed to act like the above - if you find it lacking in respecting the existence of cygwin sshd please drop me an issue at https://github.com/darwinjs/chocopackages/issues\nFyi the Chocolatey package is not used by Windows Feature On Demand (OS optional features) distribution channel.  Also, I am a volunteer on the project and cannot speak to the decisions or requirements that Microsoft Feature On Demand works under.. @bingbing8 - Windows will also create additional, profile when users move between domains or a profile is corrupt.  These result it other profile folders that are orphaned (invalid for authorized_keys purposes).\nRather than the exclude, maybe the regex should just be tightened up to not match \"...\\userprofilepath...\", but only \"...\\userprofilepath\\...\" ?. Looks like github mistook my second slash for markup - was able to fix it.  I am suggesting that the second literal slash that is found in $properties.profileimagepath be left intact so that profiles with \".something\" are not picked up as they are generally not in live use.. ",
    "szepeviktor": "\nThe default repositories included in a vanilla OneGet installation are MSI, MSU, and EXE. you can add Chocolatey\n\nIt sounds very interesting.\nhttps://github.com/OneGet/ChocolateyProvider\n. AFAIK the latest tag points to another commit than the 12_22_2015 tag:\nhttps://github.com/PowerShell/Win32-OpenSSH/tags\nAnd there is no OpenSSH-Win*.zip for 12_22_2015.\n. Is there an HTML badge for Chocolatey downloads?\n. Added in #118 \n. It is also powershell based.\n. Sorry.\n. :disappointed: I speak no Powershell.\n. Thank you very much.\nFew things to make it better\n- get latest release GitHub release ZIP through the API: 32/64\n- detect OS version: 32/64 bit ($env:ProgramFiles\")\n- copy DLL, write registry\n- detect errors\n. @h0rnman You can use GitHub with your browser: edit/add/remove files, make commits, PR-s.\n. I've tried Get-Command *firewall*.\n. Thanks.\nI'll put it into the Wiki.\n. Added: https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\n. You can also add these in the Wiki\n. ",
    "dahlbyk": "From https://github.com/dahlbyk/posh-git/issues/258#issuecomment-190531499:\n\nMy initial guess is that you're running into PowerShell/Win32-OpenSSH#110 at https://github.com/dahlbyk/posh-git/blob/721089444e2ce9e2bfbcad0b5e0daa5ea8085d66/GitUtils.ps1#L319\n\nposh-git parses ssh-agent output to be able to set environment variables accordingly.\n. Does the pipe work if you redirect error to standard?\nssh-agent 2>&1 | Out-Clipboard\n. Nevermind, just found this: https://github.com/PowerShell/Win32-OpenSSH/commit/fe136bc35276eeb8566264ccc0e6787343cb96cf.\n\nssh-agent.exe and ssh-add.exe code updated and fixed to work in Windows.\nFor convenience of users, ssh-agent.exe starts a cmd shell with the\n\"SSH_AUTH_SOCK\" and \"SSH_AGENT_PID\" environment variables set.\nssh-add.exe can be run immediately from the cmd shell. 'ssh-add -L\" and\n\"ssh-add id_rsa\"  and \"ssh-add -d id_rsa\" are 3 useful commands to list,\nadd and delete keys from ssh-agent cache.\n\nThe start cmd is breaking anyone using this with posh-git, and I'm not sure there's any way for me to work around and kill the cmd.exe that's being spawned.\n. ",
    "rickmoua": "Great that worked. thx\n. I resolved it.  I remove file ssh-lsa.dll\" and ran again and it went thru.\n. ",
    "QueenRiver": "When I type \"stty erase ^?\"  after I login from a linux/ssh client, I get this message:\nstty erase ^?\nstty: 'standard input': Inappropriate ioctl for device\nThen how to set it up in the profile. Where?\n. ",
    "thezim": "Is there an estimation on when this will be supported?\n. Log file is not being created in the logs folder after the config modification and service restart. Below is the my sftp config line.\n```\noverride default of no subsystems\nSubsystem   sftp    sftp-server.exe -l DEBUG3\n```\n. @manojampalam does it have to be write permission to the entire folder or can it be for sftp-server.log only assuming I create the file myself first?. @bmanikm Yes. Will there still be an option to log to sftp-server.log in the future? Parsing and archiving logs for security audits is much easier with a log file.. If you need help getting SFTP logging working see #834.. #834 might have some useful info. . @yasu1013 be aware that there might be an update you need - KB4345424. This was to fix an issue with a prior patch. While this series of updates references troubles with IIS we saw other 3rd party services being affected in our enterprise. Services getting stuck in a Stopping state. Just something worth trying if your still having an issue.. ",
    "pzingg": "Also getting this error with sftp from a Mac OS X box:\nsftp username@host\nusername@host's password:\nWrite failed: Broken pipe\nConnection closed\nAccording to some docs you can use Match User/Group in the sshd_config file and chroot the target scp directory, but how do you satisfy this requirement on a Windows server:\nsudo chown root:root C:\\Users\\username\nIs there any location that I can use (or sshd_config setup) that will work with sftp?\n. ",
    "SteveL-MSFT": "Thanks for the suggestion\n. This issue is impacting using powershell within ssh session (from Windows to Linux).  TERM is not defined.  At least on Win10, we should define TERM=xterm.. @DarwinJS yes, if it's defined as a user or system env var on Windows, it does get propagated correctly to the remote ssh session side, however, the env var isn't used by Windows itself.  Having it as part of OpenSSH setup would address this and allows end user to change (although they can always set it explicitly within the ssh session or through a startup script). Seems reasonable to me.  cc @joeyaiello . @DarwinJS not sure, @manojampalam would know, but I suspect it's not registered to listen for env var changes. Eventually, the expectation is that we won't have our win32-openssh fork and it's just part of openssh portable so calling it win32-openssh doesn't make sense.  What do you propose we name the folder?\n. I completely understand the name collision/squatting problem.  Looking for some suggestions.\nThe only reason I brought up the merge is that it's known as OpenSSH.  I don't want to call it Win32-OpenSSH after merging as it implies something different from OpenSSH (which it is today as a fork).  Need to think about this some more.\n. It doesn't have to be short.  The %programfiles%\\WindowsPowerShell folder is only used to hold modules for Windows PowerShell.  PowerShell Core installs to %programfiles%\\PowerShell as it's no longer just for Windows.  @joeyaiello thoughts?\n. Does it work if you use: ssh -l user@domain host?\n. Should be the same documentation as ssh_config is just part of OpenSSH (independent of our port)\n. We definitely need it for when we declare a release ready for production.\n. I would suggest following up with the Chocolatey package owner https://chocolatey.org/packages/win32-openssh\n. This is a known issue and being worked on\n. We didn't build this package for Chocolately, I would suggest following up with https://chocolatey.org/packages/win32-openssh\n. Good tip, I would suggest informing the owner of the Chocolatey package to have them address this: https://chocolatey.org/packages/win32-openssh\n. @riahc3 which release are you using?\n. which version of PowerShell?\n. Can you install WMF5.1 (https://www.microsoft.com/en-us/download/details.aspx?id=53347) and try with that?  I believe we made some changes to PowerShell to specifically support SSH\n. I'm resolving and closing this as Fixed as we made specific changes in 5.1 to address this, but won't be providing a hotfix for 5.0\n. By default, we should keep parity with the bash script so you can run it from Windows to Linux (without PowerShell on Linux) and it should work the same as the bash script today.  If there's a benefit to adding PSRP support, I don't see why not.\n. We had to make changes in PowerShell 5.1 to work correctly via SSH.  Try installing WMF5.1 Preview from here: https://www.microsoft.com/en-us/download/details.aspx?id=53347\n. Sorry missed the part about 5.1.  We'll investigate this.\n. MSU's (Microsoft Update) are only used for updates to existing components that already ship with Windows.  WSA will probably be needed for Nano.  MSI is needed for downlevel.\n. AFAIK, MSU's are the only packages we couldn't build with a public CI system.\n. You don't need to add \"NT SERVICE\\SSHD\", just need to give write permission to that folder to that service account.\n. What version of powershell and openssh?\n. alpha.10 broke something @PaulHigin \n. you can use 'ssh -i key user@host' for local users, domain users will require using '-l user@domain'.  This is as expected.\n. The -X parameter is strictly tied to X11 and Windows doesn't support X11 (although you can install 3rd party X-Servers).  Automatically wrapping it in RDP/remoteapp would be interesting, but seems outside the scope of OpenSSH.. I can see how this can be useful if there is a configuration setting for this as this is a change in behavior on how Windows remoting has worked, but would be shell specific and probably implemented in, for example, powershell exe rather than in OpenSSH.. CC @rayhayes . This repros for me on 16197.  Using Ubuntu16.04 OpenSSH client works fine.. @DarwinJS that seems reasonable. ",
    "anirban1c": "thanks let me test that\n. ",
    "tgefen": "I could resolve it by myself.\nYou have to tell users to \"cd\" to the extracted folder before running step #3.\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Deploy-Win32-OpenSSH\n. ",
    "jyhong836": "I meet the same problem when I install OpenSSH under 'D:/XXX/'. Not sure why this happens.. @bagajjal Yes. Installing in 'c:\\program...' will resolve the issue. Thanks.. ",
    "JukEboXAuDiO": "Getting this error with 7.7.2.0p Beta. Is installed in C:\\program Files\\OpenSSH on Windows Server 2016.. I am interested in logging in with my LDAP account as well. This is kind of a requirement for our Windows system.. Did the fix using .FixHostFilePermissions.ps1, uninstalled, & reinstalled and this fixed the issue.. ",
    "egoldin": "Me too, also C:\\program Files\\OpenSSH on Windows Server 2016. ",
    "amakhno": "Running FixHostFilePermissions.ps1 script solved this problem for me. ",
    "ghost": "My sftp-server is located on drive D, but Thank you , I will definitely wait for that release.. I hope that I could do automate backup from remote external usb hdd too. \n. Thank you definitely trying now\n. OK trying it now, I'll confirm that to close issue if it succeds\n. it works , and my issue #56 also working .. thanks.\nRegards Joni\n. This error happens when you have compression enabled. Disable compression and it will work just fine. I don't know Secure Shell but you will have to search in options or preferences, something like that....\n. I had a problem connecting with differrent client and the cause was compression. The client connecting to ssh cannot have compression enabled.\n. I just downloaded the latest build today from github and had same issue with logging using default settings. Logfile reached 15 GB just after a couple hours of use.\nI apologize I didn't do too much investigation as my OS is on a 60GB SSD with my static storage on a separate drive. When it filled up my disk I went into nuke first ask questions later mode ;).\nEDIT: Do not experience this issue in chocolatey release with default sshd_config value of LogLevel QUIET\n. When I attempt to spawn an instance of ssh.exe under my application in order to execute commands on a server, I receive the error described here. On a linux machine, I would have had the option to use the -T option, but it is not available on this version of OpenSSH for some reason.\n. ```\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: PTY allocation request accepted on channel 0\ndebug2: channel 0: rcvd adjust 2097152\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: shell request accepted on channel 0\n\u001b[2J\u001b[1;1H\u001b[0;39;24;27;37;40mMicrosoft Windows [Version 6.3.9600]\n\u001b[2;1H(c) 2013 Microsoft Corporation. Alle Rechte vorbehalten.\n\u001b[4;1HAdministrator@ADZH-SRWT-DOC02 C:\\Users\\Administrator>\u001b[4;54Hdebug2: channel 0: read<=0 rfd 4 len 0\ndebug2: channel 0: read failed\ndebug2: channel 0: close_read\ndebug2: channel 0: input open -> drain\n```\nSeems like there is some kind of .bashrc on the windows machine which uses different colors etc. and those can not be handled by the ssh process which is executed by jenkins.\nWhats interesting: when i connect from terminal from jenkins_linux->windows and disconnect, the color of the terminal in linux changes from black background, white text, to the same the windows machine sent: black background, grey text\nThis would explain those sequences which lead to an abortion of the ssh process. I will try to collect the logs tomorrow. \nPlease download the pastebin output if required. I will upload it again, valid for 1 week.\nhttp://pastebin.com/bJAwWsVM. @zaufi maybe you can provide server logs. \nAt the moment i am simply too busy to collect them (would have to contact the admins, start the services, configure and start the application, etc. etc.) :/. @mgkuhn: My research indicates one must go through terminal services. With a proper license (or using RDPWrap) one can use MSTSCLib to log in programmatically. Personally, the COM controls packaged in that library appear to be broken on Windows 10.\nThere are poorly documented differences between the way that terminal services logs on users and the LogonUser family of functions. This may be intentional, but I do not understand why, as any access to terminal service's login mechanism could still check customer licensing.. Ok, so if I was to set the service to run as the exemplary UserA then it should be able to run in the Session 1. Am I comprehending it correctly?. I tried running it as a local application and not as an service but when I successfully login it always fails on fatal: ERROR. Cannot create process (1314).\\n. So I am pretty lost now.\nIs there some tool to run something in user's workspace as a workaround? I am ok with supplying password to the service.. Yes, it actually does run when I fixed the permissions but when it tries to spawn the cmd.exe it fails probably due to insufficient rights.\nIt is not primary use for sure, but thank you for looking into it. We use it as a workaround for executing automated tasks. We used to use FreeSSHd so we tough this would be more appropriate way but unfortunately it does not suit our needs.. Bitvise SSH Server properly manages Windows Stations, which has been a problem with OpenSSH running on Cygwin in the past. It looks like Bitvise does not, however, implement any kind of X11 forwarding-esque feature, even though it technically should be possible.\nThe server would have to get a handle to your user session, and launch a process in your session on one of the desktops. This is possible as far as I know, and I suspect a useful feature, but I am not sure it has been implemented in any software to date.\nMany people discussing this project were interested in how it would handle Windows primitives like sessions, stations, and desktops. A comment from Microsoft on this issue would be appreciated.. @mgkuhn: You reference the function key to implementing my suggestion in your report, namely SetTokenInformation. However, it is not possible to create sessions in this way. You can simply make a window appear on an already existing desktop within a session.\nLogin sessions do exist in X11 and Wayland. It is possible to keep rogue processes from accessing a user's X11 session. The main difference I am aware of is that X11 forwarding used to perform rendering client side. Anything else you see is obtuse naming.. No @alphaCTzo7G, nothing can get around it. What Bitvise does is properly associate a Windows Station (something which exists within a Desktop, which exists within a Session) with programs so that they will manage to run when invoked headlessly when the server is running within an interactive session.\nThis issue exists because Windows treats user interaction in a way that other OSes do not. The kernel is the sole mediator of input, which makes it hard or impossible to make programs which do certain things.. @NoMoreFood, can you comment the overarching goal of your code? E.g. in other projects, limitations in WaitForMultipleObjects are handled by a red black tree which objects are sorted in to. Your solution may not be the same, but it would be helpful if any datastructures used were labelled.. @lejeczek the short answer is not new - Windows has a release schedule that takes time to \"bake\". They have to massively retest when components change to avoid breaks caused between checkins from different teams. RS5 and beyond will include a stable version of what we build in Github, but not necessarily the most recent updates. \nFull support for Windows releases prior to RS5 has been discussed, but is not currently something we can manage broadly. . ",
    "RamblingCookieMonster": "I'm assuming this is related so... also from OS X using iTerm\n```\n$ ssh -V\nOpenSSH_6.9p1, LibreSSL 2.1.8\n```\nI get the following wonkiness:\n- Backspace = Space\n- Delete = ~\n- Left Arrow = D\n- Right Arrow = C\n- Up Arrow = A\n- Down Arrow = B\nI'm showing the letters I see at the console, which might not reflect what they actually are. i.e. if I type \"Get-(Right Arrow)ommand\" we get the error \"get-Command : The term 'get-Command' is not recognized.\"\nThat being said, the Backspace appears to be interpreted correctly.  For example, if I type \"get-(Backspace x 4)get-command\", I see \"get-(4 spaces here)get-command\" at the console, but what I actually typed (get-command) runs without issue.\nTerminals, character encoding, and other factors that might be involved are beyond me, apologies if this is obvious or on me : )\nCheers!\n. Agreed - having to call PowerShell manually is a bit of a pain point\n. On a related note:\nIt might be intentional, but USERDNSDOMAIN is a handy variable I use as a default variable value for some domain related functions, doesn't appear to be available in these sessions.\nThanks!\n. Looking forward to it, this would be very helpful until things stabilize.\n. Same here, you might consider submitting a pull request : )\n. Hi!\nThis doesn't seem to be the case. I'm using a high privileged, domain account.\nRunning the following all as that same domain account:\n- On the local box, running Windows PowerShell with elevated credentials, I have elevated access (groups include S-1-16-12288).\n- Connecting over WinRM from another Windows system, I do get elevated access.\n- Connecting over SSH, I don't get elevated access, I get S-1-16-8192.\n- Connecting over SSH, after setting that value (prefer to avoid that...) and rebooting, I don't get elevated access.\nIs this something that was added after the initial release? I'm not building from source - hoping to see a deployment pipeline for those of us that would like to test this with the latest though : )\nThanks!\n. ",
    "junjiemars": "@quamrulmina You are right, It's works, thank you.\n. ",
    "knocte": "This doesn't work for me, I always get this error:\npacket_write_wait: Connection to 55.55.55.55 port 22: Broken pipe\nlost connection\nDo I need to first enable scp commands in the server somehow?\n. ",
    "shooshoomo": "manojampalam, it would appear that you've fixed this in the 4/5 release. I can use domain\\username and it works. I'm new to github so I'm not sure if I should close this or not.\nThanks!\n. I think ChrootDirectory is what you're looking for. Unfortunately I can't get it to work.\nShoo\n. ",
    "willpriceb": "Thanks @nachfuellbar \nClosing as dupe.\n. ",
    "rgl": "this still does not work in v0.0.5.0. this now seems to work with v0.0.5.0, can you confirm?. can you guys try v0.0.5.0?. here its working fine with v0.0.5.0. can you guys try that version?. why should I be kidding you? I didn't fix anything, I was trying the latest version and noticed that this particular issue seemed to be solved.. have you guys tried with the latest version v0.0.5.0?. can you see if the service has been restarting due to error?. ouch :-(. any news on this? for doing any kind of remote automation this is essential to have working.. Oh I've forgotten to add the username vagrant@... sorry for the noise.. with v0.0.9.0 it does not crash, but it does not work either. no file is written at destination nor the command ever returns. can you look at it?. with v0.0.11.0 it works! :-). But is that the way to go? I mean, shouldn't the aim be to run each service in its own account (i.e. for privilege separation)?. Besides, it would show us (at least me ;-) how to do this on Windows :-). I'm trying to use Win32-OpenSSH as a SSH server in Vagrant, but this issue makes the whole experience quite odd, because one has to manually login at the machine before vagrant can connect. Can this issue be moved up to the July-Mid milestone? :-). OpenSSH does not uses the SChannel library, it uses LibreSSL. Having it poking at the schannel settings would be pretty unexpected.. I did it at https://github.com/PowerShell/openssh-portable/pull/187. How was this possible? Isn't NT SERVICE\\ALL SERVICES in your local policy \"Log on as a service\" account right? Isn't this the whole reason for windows to have NT SERVICE\\* accounts (aka isolated services)?. So that right was probably removed by a active directory managed policy? If so, won't it also remove the right from the ssh account at the next synchronization?\nI think you should work that out with the system administrator and tell us what is happening, because it fells odd to have the openssh installer assigning the right by itself when that should have been taken care by the system out-of-the-box. . I didn't explicitly register them with the ssh-agent. Is that done by default? I'm installing at https://github.com/rgl/windows-2016-vagrant/blob/master/provision.ps1#L117 by just unzip, calling install-ssh, and generating the host key with ssh-keygen. Was that supposed to use the agent? . ",
    "gazoakley": "You're right - will update original post\n. Thanks :+1: \n. ",
    "blaggacao": "Here is the more complete verbosity output: \n- https://gist.github.com/blaggacao/d45f319666024ce8d630\nThe only thing, I see, also in the above output, is \"Roaming not allowd by server\", but then again http://superuser.com/questions/825634/what-could-roaming-not-allowed-by-server-of-ssh-client-mean\nHave you any other ideas?\nIn Cygwin SSH, it used to work, though.\n. To provide some further entropy, I'm using a KeePass ssh-agent, as provided by http://lechnology.com/software/keeagent/\nBut independently of running it or not, this problem occurs.\n. ",
    "chaudharydeepak": "I am facing similar issue on my machine. Cannot authenticate via public / private key:\nC:\\Users\\chaudhde\\Documents\\Henkel\\MyDevTools\\OpenSSH-Win32>ssh.exe -vvv -i \"C:\\Users\\chaudhde.ssh\\id_rsa\" chaudhde@localhost\nOpenSSH_7.1p1 Microsoft_Win32_port_with_VS, OpenSSL 1.0.2d 9 Jul 2015\ndebug2: ssh_connect: needpriv 0\ndebug1: Connecting to localhost [::1] port 22.\ndebug3: _get_osfhandle() for real_fd [3] returned [384]\ndebug3: GetFileType() for handle [384] returned [3]\ndebug1: allocating new sfd, sfd [3] fd [3] handle [384] type [2]\ndebug1: Connection established.\ndebug1: permanently_set_uid: 0/0\ndebug3: getpwuid: username [chaudhde]\ndebug3: getpwuid: system dir [C:\\Windows\\system32]\ndebug3: getpwuid: shell path [C:\\Windows\\system32\\cmd.exe]\ndebug3: gethomedir: pUserName [chaudhde]\ndebug3: gethomedir: username [chaudhde]\ndebug3: gethomedir: getenv\ndebug3: gethomedir: userprofile [C:\\Users\\chaudhde]\ndebug3: getpwuid: homedir [C:\\Users\\chaudhde]\ndebug3: _get_osfhandle() for real_fd [4] returned [392]\ndebug3: GetFileType() for handle [392] returned [1]\ndebug1: allocating new sfd, sfd [4] fd [4] handle [392] type [1]\ndebug1: identity file C:\\Users\\chaudhde.ssh\\id_rsa type 1\ndebug1: _open() returned error, errno [2]\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chaudhde.ssh\\id_rsa-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_7.1p1 Microsoft_Win32_port_with_VS Dec 22 2015\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.1p1 Microsoft_Win32_port_with_VS\ndebug1: match: OpenSSH_7.1p1 Microsoft_Win32_port_with_VS pat OpenSSH* compat 0x04000000\ndebug1: Authenticating to localhost:22 as 'chaudhde'\ndebug3: hostkeys_foreach: reading file \"C:\\Users\\chaudhde.ssh\\known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file C:\\Users\\chaudhde.ssh\\known_hosts:2\ndebug3: load_hostkeys: loaded 1 keys from localhost\ndebug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp\n256,ecdsa-sha2-nistp384\ndebug1: SSH2_MSG_KEXINIT sent\ndebug2: starting thread [0] for sfd [3] with test type[1]\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: kex_parse_kexinit: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,diffie-hellman-group-exchange-sha256,diffie-hellman\n-group-exchange-sha1,diffie-hellman-group14-sha1\ndebug2: kex_parse_kexinit: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp\n384,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa\ndebug2: kex_parse_kexinit: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,\ncast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,\ncast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1\n-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1,hmac-md5-etm@openssh.com,hmac-ripemd160-etm@opens\nsh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1\n-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1,hmac-md5-etm@openssh.com,hmac-ripemd160-etm@opens\nsh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: none\ndebug2: kex_parse_kexinit: none\ndebug2: kex_parse_kexinit:\ndebug2: kex_parse_kexinit:\ndebug2: kex_parse_kexinit: first_kex_follows 0\ndebug2: kex_parse_kexinit: reserved 0\ndebug2: kex_parse_kexinit: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,diffie-hellman-group-exchange-sha256,diffie-hellman\n-group14-sha1\ndebug2: kex_parse_kexinit: ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: kex_parse_kexinit: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: kex_parse_kexinit: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: kex_parse_kexinit: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1\n-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: kex_parse_kexinit: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1\n-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: kex_parse_kexinit: none,zlib@openssh.com\ndebug2: kex_parse_kexinit: none,zlib@openssh.com\ndebug2: kex_parse_kexinit:\ndebug2: kex_parse_kexinit:\ndebug2: kex_parse_kexinit: first_kex_follows 0\ndebug2: kex_parse_kexinit: reserved 0\ndebug1: kex: server->client chacha20-poly1305@openssh.com  none\ndebug1: kex: client->server chacha20-poly1305@openssh.com  none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:BE3pkJu857o2l4L5oIJe4USY4zGdtR3cSRL+CKg/RAI\ndebug3: hostkeys_foreach: reading file \"C:\\Users\\chaudhde.ssh\\known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file C:\\Users\\chaudhde.ssh\\known_hosts:2\ndebug3: load_hostkeys: loaded 1 keys from localhost\ndebug1: Host 'localhost' is known and matches the ECDSA host key.\ndebug1: Found key in C:\\Users\\chaudhde.ssh\\known_hosts:2\ndebug2: set_newkeys: mode 1\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug2: set_newkeys: mode 0\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: Roaming not allowed by server\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug2: key: C:\\Users\\chaudhde.ssh\\id_rsa (00687B80), explicit\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: C:\\Users\\chaudhde.ssh\\id_rsa\ndebug3: send_pubkey_test\ndebug2: we sent a publickey packet, wait for reply\ndebug1: Server accepts key: pkalg ssh-rsa blen 279\ndebug2: input_userauth_pk_ok: fp SHA256:LwtxVJC57RXwofSoiM79dtsMPI+OZzgxz5BIVYL5jqA\ndebug3: sign_and_send_pubkey: RSA SHA256:LwtxVJC57RXwofSoiM79dtsMPI+OZzgxz5BIVYL5jqA\ndebug3: _get_osfhandle() for real_fd [4] returned [404]\ndebug3: GetFileType() for handle [404] returned [1]\ndebug1: allocating new sfd, sfd [4] fd [4] handle [404] type [1]\nEnter passphrase for key 'C:\\Users\\chaudhde.ssh\\id_rsa':\ndebug3: _get_osfhandle() for real_fd [4] returned [164]\ndebug3: GetFileType() for handle [164] returned [1]\ndebug1: allocating new sfd, sfd [4] fd [4] handle [164] type [1]\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive\ndebug3: remaining preferred: password\ndebug3: authmethod_is_enabled keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug2: userauth_kbdint\ndebug2: we sent a keyboard-interactive packet, wait for reply\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: userauth_kbdint: disable: no info_req_seen\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup password\ndebug3: remaining preferred:\ndebug3: authmethod_is_enabled password\ndebug1: Next authentication method: password\nchaudhde@localhost's password:\n. ",
    "cruzzer": "I'm seeing the same issue with cygwin/bash when trying to us a password. It gets stuck at allocating new sfd.\n\nbash: ./ssh.exe host -vvv\nOpenSSH_7.1p1 Microsoft_Win32_port_with_VS, OpenSSL 1.0.2d 9 Jul 2015\n...\ndebug1: Roaming not allowed by server\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: _get_osfhandle() for real_fd [4] returned [564]\ndebug3: GetFileType() for handle [564] returned [3]\ndebug1: allocating new sfd, sfd [4] fd [4] handle [564] type [2]\n\nThis sfd issue has been reported previously. Hope that will fix this issue too.\n. This has been fixed for me with the newest release 2_25_2016 and cygwin/bash. \n. ",
    "fenixfanel": "Hi hach-que,\nI have the same result when I try to clone or pull. Did you find something ?\n. ",
    "ikluhsman": "I have solved this issue, it didn't have anything to do with the SSH server on Windows, it simply was an issue with using a different shell command and redirecting the output to null from the initiating shell ssh process on the client Linux machine.\nThe command I used that works looks like this:\nssh -f -o StrictHostKeyChecking=no -o \"UserKnownHostsFile /dev/null\" -i /home/myvpnuser/.ssh/id_rsa 192.168.2.130 -gq -T -L 50017:192.168.48.61:3389 'ping -n 20 127.0.0.1' > /dev/null 2>&1\n. ",
    "StefanScherer": "Tried to create a pull request, but I can't find the script setup-ssh-lsa.cmd in this repo.\nAny hints?\n. Thanks @bagajjal. Right after pasting my screenshot I also saw this message and looked through the sources, even tried -t flag, but no difference.\nMy screenshot that you have marked shows a direct WSL -> ssh.exe call without Vagrant. So it seems WSL does not forwards that it's a terminal, or at least in a another form as ssh.exe expects it?. OK. Yes, I know that it works from a PowerShell terminal. Also vagrant ssh works from there. But I would like to switch to WSL and use only this the whole day. Not switching back and forward between this command in WSL and that command in PowerShell.\nHow can we make WSL + ssh work better together?. Yes, of course. That works fine, thanks.\nIt's only the combination of my everyday tools like Vagrant.\nI could try to install Linux Vagrant in WSL, but then I'm not able to run VMware Workstation.\nThat's why I try Windows version of Vagrant + \"alias vagrant vagrant.exe\" in WSL. But then the ssh command will be called on the Windows side and here I'm stuck.\nIt would be much easier if the barrier between WSL and Windows would be lower so everything \"just works\". I know Microsoft is working on that :-) \nI'm figuring out a way for me and my colleages with a set of new company laptops where we have VMware Workstation preinstalled for policy reasons.\n. Ok, I tried powershell.exe -> ubuntu WSL -> windows vagrant ssh\n\nNow I have to press ENTER multiple times to (eg. ls + 5x ENTER).\nWindows Vagrant comes with a embedded Cygwin ssh, same problem there.\nI tried the other way around: ubuntu WSL -> powershell.exe > vagrant ssh \n\nSome problem. It really seems to me a problem with ssh.exe\n. OK, I've tried serveral things now without Vagrant, just to keep it simpler and third party tools out of the way. Here are five scenarios:\nUbuntu WSL -> Ubuntu ssh\nworks as expected, as everything keeps in the WSL world\n\nUbuntu WSL -> windows openssh client\nnot everything visible\n\nUbuntu WSL -> powershell.exe -> windows openssh client\nnot everything visible, powershell.exe itself as a shell also looks good, so it's able to use the conhost/terminal from the WSL\n\nPowerShell -> windows openssh client\nworks as expected, as everything keeps in the Windows world\n\nPowerShell -> Ubuntu WSL -> windows openssh client\nnot everything visible\n\n. Thanks @bagajjal for looking into it and asking in WSL project. I've subscribed these issues.\nWell it seems this is a hard problem for the tech industry:\nLook at https://hashicorp.com and scroll down to the bottom. There, in dark gray letters :-) It's a running gag at HashiCorp.. ",
    "gitfvb": "Yes, that would be the equivalent I am looking for, but it does not work on my installation too.\n\nAm 21.01.2016 um 19:30 schrieb shooshoomo notifications@github.com:\nI think ChrootDirectory is what you're looking for. Unfortunately I can't get it to work.\nShoo\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "ZakharGoncharov": "I need it too\n. What kind of slash or backslash should I use for Chroot path ?\nChroot c:/users/username\nChroot c:\\users\\username\n. How I can lock user in specified Directory?\n. So, how I can lock user in specified Directory?\n. ",
    "dobsa": "Hi, please take a note that new RFC with extension for token elevation called \"elevation\" in SSH server is on the way. The point is that it should be user (via client) who decides what kind of token he/she wants to receive on the server side. Here is current draft: Section 3.4. Server should provide the token user desires regardless of used authentication method.\n. ",
    "xied75": "Probably better to support this https://github.com/sshnet/SSH.NET\n. ",
    "leoniDEV": "I know that project, but seemed no more in development.\nBut i've seen that the developer has done some commits in the recent days after a long period of inactivity\n. ",
    "TehWardy": "I'd be interested in this too :)\n. Latest version (downloaded yesterday) doesn't seem to do this.\nIt's ok on C but doesn't appear to know anything about a D drive (that I happen to have).\nAlso will this support UNC paths / mapped network drives on the local machine?\nI recall reading something about symlinks not showing up on another ticket.\n. I have also been trying to set the \"ChrootDirectory\" setting to anything other than none in the config file but this doesn't seem to work either.\nIs this the same bug or should I raise a new one?\n. Are you kidding me?\nThis took so long to sort out we got a third party to manage a server for us.\nbut thanks for fixing it at least, maybe someone else can benefit from it. ",
    "OhSoGood": "Thanks for the quick answer but I've already checked the right x64 dll had been correctly copied to windows\\system32.\nAny other idea?\n. Further search on the net say that c0000041 could mean a denied access (STATUS_PORT_CONNECTION_REFUSED as per \nhttp://usaid.blogspot.fr/2006/12/windows-ntstatus-list-from.htm ). This error msg would mean ( https://msdn.microsoft.com/en-us/library/windows/desktop/aa378318%28v=vs.85%29.aspx ): \"The caller does not have the SeTcbPrivilege privilege, which is required to call this function. You can set this privilege by calling LsaAddAccountRights ( https://msdn.microsoft.com/en-us/library/windows/desktop/ms721786(v=vs.85).aspx )\".  SeTcbPrivilege gives service privilege to act as part of the operating system.\nAny idea?\n. Actually, I was running sshd with the command line (as admin) because when using the service, it also fails but c:\\windows\\system32\\sshd.log shows no trace of my connection (whereas I set LogLevel DEBUG in sshd_config). What do I miss for the log? \n. I found my problem! And there could be room for improvement for OpenSSH-Win32 here.\nWith CopSSH, the connection to the local account is considered as a local connection - and so for security purpose we had activated the windows security policy \"deny access to this computer from the network\". But with openssh-win32, the connection is considered as a remote connection... What's you view on this?\nPlease note my question on how to set the log remains... I still don't see how to config sshd to see traces of connections in the log.\n. @DanArcari, it was rather a config change than a fix: with our previous ssh server (copssh), connections were considered as local connections and so we had explicitly denied remote connections (in windows security policy editor). We had not changed that setting when we tried openssh-server, and that was the reason for the error - allowing again remote connections solved it.\n. Screenshot would be in French :)\nIt was in windows' local security strategy applet - section \"user rights management\" - item \"Fordid access to this computer from network\" - we had added the user there and simply removed it to allow ssh connection.\n. As per git documentation, it's part of a normal 'git fetch' (\nhttps://www.kernel.org/pub/software/scm/git/docs/git-upload-pack.html ) ,\nmore precisely:\n\nInvoked by git fetch-pack, learns what objects the other side is missing,\nand sends them after packing.\nThis command is usually not invoked directly by the end user. The UI for\nthe protocol is on the git fetch-pack side, and \nthe program pair is meant to be used to pull updates from a remote\nrepository. For push operations, see git send-pack.\n. I wonder if the following article could not be a explanation: http://blog.chronosinteractive.com/posts/using-windows-server-host-git-repository . With another ssh server (bitvise):\nSet \"Exec request prefix\" to cmd.exe /c sh gitcmdhelper.sh (last character must be a space)\nExplanation of gitcmdhelper.sh\nThe gitcmdhelper.sh file is key to getting this process working. The $* in this file is a string of all the > arguments passed to the function. The git-upload-pack and git-receive-pack utilities that Git runs\nduring clone, fetch, and push requests uses single quotes to enclose the path of the repository. \nWindows  doesn't like this. The $* strips these single quotes away. (One side-effect of this is that \nyour repository path cannot contain any spaces.)\n\nIndeed, in the error msg in 1st post, I had: Executing command: git-upload-pack '/GitRepos/MyRepoName'\nCould that be the quotes for you? If so, how can we apply the same trick with OpenSSH (I didn't see any 'Exec request prefix' param in OpenSSH.\n. ",
    "DanArcari": "@OhSoGood Can you elaborate on the fix you found for this problem? I'm receiving a similar error (\"Cannot logon using LSA package (err = 0, ntStat = c0000041).\"\n. ",
    "linickx": "@OhSoGood any chance of a screenshot on what you changed? (Could be related to #175 )\n. +1  Can't seem to figure this out. \nIf I was on a *nix system I would chmod 700 ~/.ssh then chmod 600 ~/.ssh/authorized_keys ... I did a kinda similar by changing the NTFS permissions of the equivalent folder to that of my user account but no joy.\nI installed release 4_5_2016 today on a Windows7 64bit laptop. \nAttached are my client & server debugs; any ideas/suggestions?\n. Hi, this is still failing for me in (5_15_2016); but the log message (.\\sshd.exe -D -d) looks a bit more \"helpful\".\nConnection from 192.168.36.122 port 64653 on 192.168.6.235 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_6.9\ndebug1: match: OpenSSH_6.9 pat OpenSSH* compat 0x04000000\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_7.1p1 Microsoft_Win32_port_with_VS\ndebug1: list_hostkey_types: ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: algorithm: curve25519-sha256@libssh.org\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: KEX done\ndebug1: userauth-request for user username@domain.local service ssh-connection method none\ndebug1: attempt 0 failures 0\nFailed none for username@domain.local from 192.168.36.122 port 64653 ssh2\ndebug1: userauth-request for user username@domain.local service ssh-connection method publickey\ndebug1: attempt 1 failures 0\ndebug1: test whether pkalg/pkblob are acceptable\nPostponed publickey for username@domain.local from 192.168.36.122 port 64653 ssh2\ndebug1: userauth-request for user username@domain.local service ssh-connection method publickey\ndebug1: attempt 2 failures 0\ndebug1: auth agent did not authorize client username@domain.local\ndebug1: close - io:0000000000477E50, type:2, fd:4, table_index:4\nFailed publickey for username@domain.local from 192.168.36.122 port 64653 ssh2: RSA SHA256:xxx/wkxx/UHE\ndebug1: userauth-request for user username@domain.local service ssh-connection method keyboard-interactive\ndebug1: attempt 3 failures 1\ndebug1: keyboard-interactive devs\ndebug1: auth2_challenge: user=username@domain.local devs=\ndebug1: kbdint_alloc: devices ''\nFailed keyboard-interactive for username@domain.local from 192.168.36.122 port 64653 ssh2\nConnection closed by 192.168.36.122\ndebug1: do_cleanup\nAny ideas to why auth agent did not authorise client ???\nBasic checks completed:\n- c:\\users\\username\\.ssh\\authorized_keys exists\n- C:\\Program Files\\OpenSSH-Win64\\sshd_config has the following enable:\n  - AuthorizedKeysFile  .ssh/authorized_keys\n  - RSAAuthentication yes\n  - PubkeyAuthentication yes\n- c:\\windows\\system32\\ssh-lsa.dll exists. (from 64bit package on 64bit system)\nFootnote: I ctl-c to kill the connection at the password prompt since pub key had already failed. Password auth works fine with domain credentials when running sshd as a service, when running sshd in debug mode ssh-shellhost.exe cannot be created, but that I guess that is to be expected.\n. ",
    "Rondom": "While it is in the contrib-directory, the script is strictly speaking still part of the OpenSSH-codebase and it would be nice if the script\n could support copying keys to windows hosts\n was shipped with OpenSSH for Windows\nEDIT: Ok, I see it is implemented in Shell, so not easy to ship. I also found the discussion #341 which tracks this issue and your reasoning behind not supporting it.. Can't you set the COMSPEC variable to powershell.exe and use that? (I admit that I left Windows behind before the switch to NT/XP, so this may be outdated knowledge). > There can be a situation where the default shell has to be PowerShell for ssh sessions but other applications still needs the default shell as cmd.exe..\nIf there is such a use case (which one?), wouldn't it be enough to instruct those users to write their own wrapper that checks whether it is run in an SSH-session and put it into their profile?. I have reproduced this with GNOME Terminal and terminator (TERM=xterm-256color). I also tried setting the TERM=xterm. Also I tried logging in outside X via a Linux-VT (TERM=linux) and I got the same behaviour.. As I said, I tried different terminals and I found it highly unlikely that the client is the culprit, so I investigated it a bit further.\nThe issue only occurs at higher latencies. Could it be that your Ubuntu environment is on the same physical machine / datacenter? I was accessing my Windows-VM using WiFi and an SSH-tunnel to the KVM-host it was running on. That was enough to trigger it. I could not reproduce it when logging in directly from the KVM-host to the Windows-guest.\nSo in order to reproduce it, you need a higher latency link. You can use tc to simulate latency (replace virbr0 with the interface in question). 500ms \u00b1 100ms is ample to trigger the behaviour:\ntc qdisc add dev virbr0 root netem delay 500ms 100ms\n\n. Is the \"june-mid-release\" 0.0.15.0? If so, the issue is not fixed for me (and neither is #701)..\nThe behaviour is still the same with the above setup after upgrading. I have even done a reboot, it has not helped.. 0.0.16.0 works now when accessing a Windows-box from Linux.\nUnfortunately with the above setup and steps, now pressing \u00f6 yields \u0094 for the ssh localhost case.. ```\nC:\\Users\\admin>echo \u00f6\n\u00f6\nC:\\Users\\admin>chcp\nActive code page: 437\nC:\\Users\\admin>ssh localhost\nadmin@WIN-U2UORB1LT7K@localhost's password:\nMicrosoft Windows [Version 10.0.14393]\n(c) 2016 Microsoft Corporation. All rights reserved.\nadmin@WIN-U2UORB1LT7K@WIN-U2UORB1LT7K C:\\Users\\admin>echo \u0094   \n\u0094\nadmin@WIN-U2UORB1LT7K@WIN-U2UORB1LT7K C:\\Users\\admin>chcp       \nActive code page: 437\n```. Same behaviour when pasting :-(. Once I do that, \u00f6 works still works locally, but when ssh-ing to localhost, it prints nothing!. Just downloaded Putty, works fine.. It's the same as in the initial issue description: Win 2016 (10.0.14393). I would like to add Ctrl+Arrowkey (i.e. up,down,left,right) to the list.. >  Since we need to support downlevel platforms, we cannot completely replace the existing named-pipes based alternative yet.\nOf course.. ",
    "benkevan": "Rather this should be configurable and not statically set. I'd prefer it to be opened in cmd as my profile.ps1 is pretty heavy. \n. This is duplicated.. it obviously works and you can cd to the directly as you'd expect. This would just need to be cleaned up in pathnames.h if it were decided to \"look\" like typical Windows slashes. \n. ",
    "aduzsardi": "this can be solved by adding\nForceCommand powershell.exe in your sshd_config , you can also do \nMatch User user1 user2 ...\n    ForceCommand powershell.exe\nor Match Group for groups. Not sure what you mean by 'context'\nWhat i can tell you is that , it's a Windows 2016 Server (core) and it is a domain controller, installed OpenSSH , no issues there , checked the service and it was running with  NT SERVICE\\SSHD  user account account , and seems like there's no such user and it doesn't have permissions to write in the OpenSSH folder , so i switched sshd service to run as Local System. No it was not working until i changed the service to run as Local System.\nWhile it was running as NT Service\\SSHD , got connection reset by server on the client side , and error: Couldn't create pid file \"./sshd.pid\": Permission denied on server side\nThis only happens on Domain Controllers , so i guess we can live with that. so i run the installer script again , and now it seems to be working , i don't know how and why ... maybe i did something wrong the first time , although i have no idea what could have i done\nbut the ssh-agent service still runes as Local System. I'm having similar issues \nServer OS: \n```powershell\nPS C:\\Users\\Administrator> Get-CimInstance -ClassName Win32_OperatingSystem | fl *                                              \nStatus                                    : OK                                                                                \nName                                      : Microsoft Hyper-V Server 2016|C:\\Windows|\\Device\\Harddisk0\\Partition4             \nFreePhysicalMemory                        : 14953708                                                                          \nFreeSpaceInPagingFiles                    : 2490368                                                                           \nFreeVirtualMemory                         : 17543988                                                                          \nCaption                                   : Microsoft Hyper-V Server 2016\nServer SSH:\nPS C:\\ProgramData> choco install openssh /SSHServerFeature /SSHAgentFeature /OverWriteSSHDConf /SSHLogLever:VERBOSE --force\nChocolatey v0.10.11\nInstalling the following packages:\nopenssh;/SSHServerFeature;/SSHAgentFeature;/OverWriteSSHDConf;/SSHLogLever:VERBOSE\nBy installing you accept licenses for the packages.\nopenssh v7.7.2.1 already installed. Forcing reinstall of version '7.7.2.1'.\n Please use upgrade if you meant to upgrade to a new version.\nProgress: Downloading openssh 7.7.2.1... 100%\nopenssh v7.7.2.1 (forced) [Approved]\nopenssh package files install completed. Performing other installation steps.\nThe package openssh wants to run 'chocolateyinstall.ps1'.\nNote: If you don't run this script, the installation will fail.\nNote: To confirm automatically next time, use '-y' or consider:\nchoco feature enable -n allowGlobalConfirmation\nDo you want to run the script?([Y]es/[N]o/[P]rint): Y\n```\nClient OS: Ubuntu 18.04\nClient SSH: OpenSSH 7.6p1\nScreen is mangled when running a command that has a lot of output , while connect to the windows openssh server.. ",
    "taynes13": "@aduzsardi using ForceCommand powershell.exe will help just to interactive session but it breaks things like SFTP. Try to do SFTP connection to server which has ForceCommand enabled, SFTP won't be happy with powershell logo message :-). ",
    "nkrepo": "Is there workaround for getting sftp work when powershell is the default ssh shell?. I am using \"OpenSSH for Windows\" version 0.0.22.0 at\nMicrosoft Windows 10 Pro 64-bit 10.0.16299 (Fall Creators Update)\n@manojampalam \nThe number of local ports that can be forwarded is limited to 16 instead of 32.\nWhen I try to forward more than 16 local ports I get the following error:\n\"select: Not enough space\"\n. @manojampalam\nI used a simple PowerShell script that called ssh.exe and specified  more than 16 local port forwards like the following.\nssh -L 3301:192.168.0.1:1123 `  \n       ... `\n      -L 3317:192.168.0.17:1123 `\n      user@userdomain.com\n. @manojampalam you are correct it was binding to both IPv4 and IPv6 address now it works up to 32 local port forwards. I had disabled IPv6 for the physical network adapter but not system-wide, therefore the Loopback Pseudo-Interface still has an IPv6 address.\n```\nGet-NetIPAddress -ifIndex 1\nIPAddress         : ::1\nInterfaceIndex    : 1\nInterfaceAlias    : Loopback Pseudo-Interface 1\nAddressFamily     : IPv6\n...\nPolicyStore       : ActiveStore\nIPAddress         : 127.0.0.1\nInterfaceIndex    : 1\nInterfaceAlias    : Loopback Pseudo-Interface 1\nAddressFamily     : IPv4\n...\nPolicyStore       : ActiveStore\n. @bagajjal @manojampalam\nIs there any ETA for the bug-fix ? Are there changes required from the conhost side from the Windows console team?. @manojampalam , is there any progress implementing the pipe between sshd and ssh-shellhost?\nIs that related to the to the introduction of the new VT api in Windows?\n[https://github.com/Microsoft/console/issues/57](url). @manojampalam and @bagajjal, it is possible to elaborate about the console resize logic introduced in 7.7.2.0 and broke console  (#1222).  When the changes finally materialize would it work with any supported Windows version e.x Windows 7?. I solved the issue , it was not related with the host keys. I run sshd.exe -d with admin account I managed to connect.\nI run the uninstall script and deleted the installation folder.  \nAfterwards with an **admin** powershell console I extracted the OpenSSH-Win64.zip as admin as :\ncd 'C:\\Program Files\\'\nExpand-Archive C:\\Users\\testuser\\Downloads\\OpenSSH-Win64.zip ./\nmv .\\OpenSSH-Win64\\ .\\OpenSSH\n```\nand followed the installation guide https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\nI am not sure why it didn't work the first time,  the first time I extracted the folder as the \"testuser\" , copied to 'C:\\Program Files\\'.  and afterwards I launched an admin powershell console to proceed with the installation steps.. Hi manojampalam, tested with v0.0.18.0 , the behaviour is the same. Have you got any time to look into that issue?. @bagajjal , Good to know that many shortcuts are now fixed.\nUnfortunately the second issue is still here. I have set the \"Screen buffer Size Width\" equal to \"Window Size\" before connecting though ssh to localhost and the output is still unaligned up when pressing tab to list/autocomplete parameters.. Hi manojampalam, tested with v0.0.18.0 , the behaviour is the same. Have you got any time to look into that issue?. Have you been able to reproduce ? Is it related to wrong client window size information defined  in pty/tty session #590 ?. @bagajjal, I tested locally with Microsoft Windows 10 Pro 64-bit  1809 build  17763 (Fall Update), unfortunately it has the same behavior. . @bagajjal , unfortunately I am having hard time to enable the openssh server shipped with Windows 17763.55 (1809) to test it. I tried to install via powershell with the command\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0\nIt installs the package but it does not create the ssh-agent and sshd services.\nIs there any ETA when the GitHub release will include those changes ?. @bagajjal I have upgraded to version 17763.55 (1809 October update) and if I am not mistaken it supports conpty. I successfully build and run the EchoCon example.\nUnfortunately I am having hard time installing the sshd server package included in build 17763.55 shipped via windows capabilities, so I cannot test it.. @bagajjal I tested with the private sshd and FAR is displayed correctly when connecting  with the ssh client shipped with WSL's Ubuntu 18.04. \nWith the ssh client shipped with v7.7.2.0p1-Beta it still has rendering issues , probably the ssh client should be replaced too to work correctly.\nI am looking forward when the changes will land in the Github release.. Hi bagajjal,  will the \"ctrl+space\" be also supported? It is related to PsRealine #686.. ",
    "lucastheisen": "Anything that can be done to make powershell the default will be good for me, but I wonder how the SSH shell from an user environment variable will get set...  I usually set environment variables in my user profile, but the won't get executed until powershell starts.... @bingbing8 , I am using v0.0.14.0.  Set-SSHKeyPermissions.ps1 is a script that comes as part of the chocolatey distro you link to in your documentation.   Also, Fix-AuthorizedKeyPermissions does not exist in my installation.  Since you just released v0.0.15.0, maybe @DarwinJS will update the chocolatey distro soon.... @bingbing8 , the first suggestion ends up spitting out a bunch of errors because it attempts to update permissions on all the files (including the sshd host keys which the non-admin user does not have permission to do).  It will, however, eventually run the permission update on the key in question...  But all the errors are rather distracting.  Perhaps that script could be updated to check if being run as a non-admin user, and if so, only attempt to set the permissions on that users key.\nYour second approach should probably read:\nImport-Module \"C:\\Program Files\\OpenSSH-Win64\\OpenSSHUtils.psd1\" -Force\nThen you can run the:\nRepair-AuthorizedKeyPermission -FilePath C:\\Users\\foobar\\.ssh\\authorized_keys\nand it works!\nWhile this does make it possible to accomplish, it is still rather difficult.  The following is my incantation:\n```\n!/bin/bash\nIDENTITY=~/.ssh/id_rsa.pub\nwhile getopts \"i:\" flag; do\n    case $flag in\n        i ) IDENTITY=\"$OPTARG\" ;;\n    esac\ndone\nshift $((OPTIND-1))\nDESTINATION=$1\nif [ -z $DESTINATION ]; then\n    echo \"destination required\"\n    exit 1\nfi\nread -r -d '' POWERSHELL_SCRIPT << 'EOF'\n[Console]::In.ReadLine() | Out-File .ssh\\authorized_keys -Encoding ASCII\nImport-Module 'C:\\Program Files\\OpenSSH-Win64\\OpenSSHUtils.psd1' -Force\nRepair-AuthorizedKeyPermission -FilePath .ssh\\authorized_keys -Confirm:$false\nEOF\nENCODED_COMMAND=$(echo -n \"$POWERSHELL_SCRIPT\" | iconv -f UTF-8 -t UTF-16LE | base64 -w 0)\necho \"$ENCODED_COMMAND\"\nREMOTE_COMMAND=\"powershell -EncodedCommand $ENCODED_COMMAND\"\necho \"$REMOTE_COMMAND\"\ncat \"$IDENTITY\" | ssh \"$DESTINATION\" \"$REMOTE_COMMAND\"\n```\nThis would not be required if ssh-copy-id worked, but:\n```\nssh-copy-id -i .ssh/id_rsa.pub foobar@ljt530\n/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \".ssh/id_rsa.pub\"\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nfoobar@ljt530's password:\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCsQLO8xetmJmbTthVW7DT9ecqMw/yBQTm1sMA/Au11CLubU/pzJjkGUWUfMHyqWHt1YI1wtna2z3033T+o8QLHToclS6vnh47VSl7tVxtiz6NmwZcOD22J48rR480WDKJyk6Ck7LtFMu+T2TBidL+Q1HXJZewi2xmKC5FlWPF2nAmd+xTfJ5FtRUqf03FbQndVpbeTMkPWDB4d+qSSK57Xl8vwaWod0UhxFRpxTSGDs/mMbbbAzbqDOIIRg4ab6kb22+fecMVV1eRJQVkQdRlmNcsIOQt3Zhjk3E9yJVNtBtQ9j4hQGBLiuUwpoNXnrlWnrQpeHMMhiOIiAriFYqPjXEn+9f/fdHKnqtHwZunbu1Tae3D6DmEY4gHg3N0/jo7B1YmW/ADmaEhFRx35TWN6LrYO2eGOJI4TEi+aGsynVoZtavsH6nKHg/eLso3hmX0MwOTvH9d/TkCtgwMRxe12GNlnDWbZ2gtOmNQKj9MIJGaxmN/lJNoLhPjftqYOiSb0yuKWzAoLflDgOMzmnKlfABk+C8uRfA+kGuWlPJ+TBpdxCMgEZBVuPp5GL3BSI8XOETdRQqTv0dfNcIZZDQ23UzeiKwvTxlRFUOKlfrHyyqG7IhLZkj2zxcCtnuQbJiyKLAKuJ9t4u2K4jJVChuw/43V0doMmWO+2Rb4U5RicLQ== ltheisen@ltserver\n'exec' is not recognized as an internal or external command,\noperable program or batch file.\nThe system cannot find the path specified.\n```\nIn any case, thank you for fixing this.  Great work!. Excellent!  Thank you, conversion to utf-8 fixed it:\nGet-Content ~\\.ssh\\authorized_keys | Set-Content -Encoding utf8 ~\\.ssh\\authorized_keys-utf8\nMove-Item ~\\.ssh\\authorized_keys-utf8 ~\\.ssh\\authorized_keys\nImport-Module 'C:\\Program Files\\OpenSSH-Win64\\OpenSSHUtils.psd1' -Force\nRepair-AuthorizedKeyPermission -FilePath ~\\.ssh\\authorized_keys. ",
    "Scrxtchy": "@manojampalam was there an update to support this? \nUsing this command puts the local terminal in a forever waiting state.\nThe server then climbs CPU usage\n\n\n. I am running it from the Administrative account, however I'm using the Service management utilities instead of a command line. Fixed it;\nI noticed I was running these application files from a user directory, instead of say Program Files that are accessible from the sshd service user. ",
    "hsson": "Is there any workaround to get Powershell as default shell without breaking things like SFTP? All I can see as a solution for now is to prepend every command in our automation scripts at work with powershell.exe. This is not very ideal though. We typically execute single commands in an automated fashion with ssh Administrator@<ip> <command>. Unfortunately this solutions breaks so many things -- I was hoping there would be a more reliable and stable one. First of all, it breaks use cases where you just want to execute a single command, such as ssh Administrator@<ip address> \"echo hello\". If using the ForceCommand solution this will completely ignore the original ssh command and just start powershell.\nAnother thing that completely breaks because of this is sFTP, which is kind of important.. Same issue, I have specified the path of my authorized keys in sshd_config as:\nAuthorizedKeysFile C:\\Program Files\\OpenSSH\\.ssh\\authorized_keys\nMy public key is in this file as expected, but when trying to SSH I still get prompted to enter the password. . In my case it turned out to be an encoding problem. Sorry to bother. It's working for me now.. ",
    "erichiller": "What about a flag to indicate whether or not it is an interactive session. For example in linux, I can place a stanza at the top of my .bashrc to drop non interactive sessions out from the remainder of the config\n```\nIf not running interactively, don't do anything\nthis keeps SCP (file transfer from throwing errors) -- stops here\ncase $- in\n        i) ;;\n                *) return;;\nesac\n``. I'm not sure what sort of changes you are trying to have pre-set. But you could put them in your powershellprofile.ps1` or whatever you are using for your profile.\n. ",
    "dealboy": "+1\n. ",
    "hawicz": "Including Kerberos support would make this far more useful.\n. ",
    "mnaiman": "NTLM is good for non domain enviroment I guess. As I wrote before, NTLM is good for non domain enviroment. WinRM supports NTLM too - allowed hosts solves problem of server authentication. ",
    "mattpwhite": "Support for GSS-API key exchange is critical for our shop to make any practical use of this fork.  OpenSSH supports this on nix platforms, as do many commercial Windows SSH implementations and some PuTTY forks.  After you put in the (admittedly non-trivial) work to build a functioning cross platform Kerberos environment, it basically just works*.  No one that has ever seen a setup like this would ever consider going back to explicit distribution (and hopefully rotation/revocation) of SSH keys across a large environment.\nNTLM is not a viable alternative.  It potentially provides SSO, but not server authentication or credential delegation and is significantly less secure than Kerberos in general.. NTLM is actively harmful in most contexts in a domain environment (silent downgrades to an insecure protocol when Kerberos is not configured correctly) and, for ssh, doesn\u2019t seem to make anything easier or more secure outside of one.  If someone does decide to implement it anyway, I would hope that it would default off and be governed by totally separate configuration knobs than the recently added Kerberos support.. This approach doesn't make a lot of sense to me.\n\nAD already has (Kerberos) cryptographic keys for every user and computer in a domain.  The infrastructure already exists for a client (Windows or Linux) to authenticate to a server (Windows or Linux) in any trusted Kerberos realm (AD or MIT/Heimdal/whatever), authenticate that server and conditionally delegate credentials based on administrative configuration.\nThere's an RFC for GSS-API authn and key exchange - https://www.ietf.org/rfc/rfc4462.txt.  Very much not Windows specific.\nThe OpenSSH on most enterprise-y Linux distros supports this.\nThe necessary GSS-API functions can be mapped to SSPI functions on Windows.  This is done by many commercial SSH implementations as well as some open source PuTTY forks.  Quest's from a million years ago did it.  Here's a sorta maintained fork - https://github.com/adamel/putty.  Many of these will also take a real GSS-API implementation if you have it as an alternative to using SSPI.\n\nThere's no need to invent something new when there's already a standard that would work nicely for all Windows AD only shops and mixed Linux/Windows alike.  At least assuming they have a functional integrated Kerberos environment.. ",
    "KeithGlidewell": "Is there any timeline for when we might see GSSAPI/Kerb support?  Thanks.. ",
    "NoMoreFood": "All I can say is that I'm not interested in adding this myself.. @whereisaaron Do you know which third party implementations provide this?  The think the tough part of this is handling the Linux-equivalent behavior where chroot() that affects child processes.  Even if this project did something to override/detour NtOpenFile/NtCreateFile, an uploaded executable from the user could be used to break free of the jail by overriding-the-override.  You could get even more extreme by filtering at the kernel by checking at ZwCreateFile/ZwOpenFile level but I believe that would require driver injection.  Unless the third party process implements something like this, I'm skeptical that it could be implemented securely.\nNow I think an SFTP server without shell access could probably jail the user since there are no child processes to worry about and a limited set of functions that access the file system.  I could look into doing this, but I think I'd want the maintainer to tell me there's a chance in hell of it getting merged before I went down that road.  . @manojampalam Yeah, my general idea here is that one set a global when calling chroot() and then put a check at the beginning of file I/O operations to make sure the real path of the specified path is within that global.  If it's not then return the appropriate error.  If we wanted to avoid the check at the file operation, we could detour NtCreateFile/NtOpenFile when calling chroot(), but that might get messy with Detours licensing (although I imagine you guys could work something out internally).  That would probably work with SFTP since the file operations are controllable.  Short of a complicated kernel-level filter driver, I don't think there's much hope for a reliable chroot() for general terminal access.. I was experimenting and managed to implement a decent jail by intercepting NtCreateFile, NtOpenFile, and NtQueryFullAttributesFile and making sure any files were within a specified path.  I did this by modifying the IAT of kernel32.dll (kernelbase.dll) at runtime which is what all the normal file I/O functions flow through one way or another.  So, basically you call a function from the sftp_server_main() and it implements this jail -- pretty simple.  I didn't have to use the Detours library since it was just a simple IAT modification.   For context, it'd be about 250 lines of code.\nWhile I believe this is reliable from a security perspective, the \"ugly\" part is that normally the chroot() is controlled by the parent process (sshd.exe) and sftp-server.exe is just an executable inherits the new root; no information about the custom root path is actually passed to sftp-server.exe so it really has no idea its running in a jail.  So in order to implement something like within SFTP specifically, we'd probably need to read sshd_config in sftp_server_main() to get the new root information (sftp-server.exe does not appear read sshd_config at all right now), or pass a new command line parameter to sftp-server.exe, or allow some sort of special path prefix the passed provided by -d to indicate that it should implement a jail (e.g. -d C:\\MyDir|CHROOT).\nThe \"cleanest\" approach would probably be the special command line parameter that we'd #ifdef in for Windows, but I'm not sure that'd be \"acceptable\" for an upstream merge?  Thoughts?\n. Actually, thinking about it more, another way to pass the information would be to have SSHD embed the root path information in an environment variable and then have the SFTP server key off that environment variable.  That would keep us out of the \"main\" SFTP files.  Regardless, curious what @manojampalam and @bagajjal are interested in something like this. I suspect it'll be a demanded feature but my proposed solution is somewhat novel.. @manojampalam I had thought about trimming it off but I didn't know if 'BUILTIN' is localization-sensitive?  I'll put in a PR to remove it if you happen to know for sure (or have a non-English platform to confirm on).  . @manojampalam Sounds good.  Some of that delay is probably due to the de-optimization I had to do for OneCore compatibility.  Since the APIs that allow simultaneous, multiple account resolution are not exposed through OneCore, I had to change it to a one-by-one method.  The annoying thing is that at least on the Windows desktop/server platforms, the OneCore-endorsed APIs end up just calling the ones I was previously using and ultimately just passing in a SID to resolve one at a time.  Maybe it's different on other platforms..... @manojampalam Yes, it was intentional.  As I recall, the docs have a special flag for Kerb but not for MSV1.. @manojampalam, @bagajjal   Has any work on this been done?  This might be something I could look into. . @manojampalam Alright, I think I have the issue addressed. You should see a pull request tonight.  In order to deal with nesting, it really looks like we need to generate an s4u token and pull the group out of it.  . @manojampalam  See https://github.com/PowerShell/openssh-portable/pull/281, specifically https://github.com/PowerShell/openssh-portable/pull/281/commits/8fa938d6722249957417c907fe10d8572feb57cc.    I tried to keep the naming scheme for output as close as possible to the original function.  Below are some tests.\n```\nUser Argument: DomainUser@DOMAIN\n-- Old Group Lookup Algorithm:\n|---- direct membership - domain group in nested local group@domain\n|---- direct membership - domain local group@domain\n|---- direct membership - global group@domain\n|---- direct membership - local group\n|---- direct membership - universal group@domain\n|---- domain users@domain\n|---- local test group 1\n|---- nested membership - local group containing domain group\n|---- users\n|---- users@domain\n-- New Group Lookup Algorithm:\n|---- direct membership - domain local group@domain\n|---- direct membership - global group@domain\n|---- direct membership - local group\n|---- direct membership - universal group@domain\n|---- domain users@domain\n|---- local test group 1\n|---- nested domain group in local group@domain\n|---- nested group - domain local@domain\n|---- nested group - global group@domain\n|---- nested group - universal group@domain\n|---- nested membership - local group containing domain group\n|---- users@builtin\nUser Argument: DomainUser@domain.bryanberns.com\n-- Old Group Lookup Algorithm:\n|---- direct membership - domain group in nested local group@domain\n|---- direct membership - domain local group@domain\n|---- direct membership - global group@domain\n|---- direct membership - local group\n|---- direct membership - universal group@domain\n|---- domain users@domain\n|---- local test group 1\n|---- nested membership - local group containing domain group\n|---- users\n|---- users@domain\n-- New Group Lookup Algorithm:\n|---- direct membership - domain local group@domain\n|---- direct membership - global group@domain\n|---- direct membership - local group\n|---- direct membership - universal group@domain\n|---- domain users@domain\n|---- local test group 1\n|---- nested domain group in local group@domain\n|---- nested group - domain local@domain\n|---- nested group - global group@domain\n|---- nested group - universal group@domain\n|---- nested membership - local group containing domain group\n|---- users@builtin\nUser Argument: DOMAIN\\DomainUser\n-- Old Group Lookup Algorithm:\n|---- direct membership - local group\n|---- local test group 1\n|---- nested membership - local group containing domain group\n|---- users\n-- New Group Lookup Algorithm:\n|---- direct membership - domain local group@domain\n|---- direct membership - global group@domain\n|---- direct membership - local group\n|---- direct membership - universal group@domain\n|---- domain users@domain\n|---- local test group 1\n|---- nested domain group in local group@domain\n|---- nested group - domain local@domain\n|---- nested group - global group@domain\n|---- nested group - universal group@domain\n|---- nested membership - local group containing domain group\n|---- users@builtin\nUser Argument: DomainUser\n-- Old Group Lookup Algorithm:\n-- New Group Lookup Algorithm:\n|---- direct membership - domain local group@domain\n|---- direct membership - global group@domain\n|---- direct membership - local group\n|---- direct membership - universal group@domain\n|---- domain users@domain\n|---- local test group 1\n|---- nested domain group in local group@domain\n|---- nested group - domain local@domain\n|---- nested group - global group@domain\n|---- nested group - universal group@domain\n|---- nested membership - local group containing domain group\n|---- users@builtin\nUser Argument: LocalUser\n-- Old Group Lookup Algorithm:\n|---- local test group 2\n|---- users\n-- New Group Lookup Algorithm:\n|---- local test group 2\n|---- users\n```. @manojampalam Since you guys are aligning to the OpenSSH versioning scheme, can't this be closed now?. @effebi68 Recently became interested in this project and looking for ways I can contribute.  Is there any further action requested on this line of discussion?  I'm pretty sure that you could create a user in Windows PE by using net user   /add.  Did you test this?  . @1980srefugee Does this still happen with the latest release?  . From the upstream code, I can see no easy way around this other than unsetting DISPLAY or setting the SSH_ASKPASS variable to point to a cmd or exe file like the one attached here (something that outputs the password to STDOUT for SSH to read).  Do you have a reason that DISPLAY is set?\nssh_askpass.zip\n. Corinna, I continue to be amazed by some of brilliant hacking that Cygwin has done to be as feature rich as it is.   Curious...  does Method 3 continue to work after Credential Guard is activated?. @lejeczek What version of Win32-OpenSSH are you running? Did you try rolling back the updates?  If so, which specific update?  Is the behavior consistent?\nThe error -1073741502 translates to 0xC0000142 / STATUS_DLL_INIT_FAILED which is basically saying that DLLs failed to load for the child process.  \nThis could be a bug in OpenSSH, but see if anything mentioned here might correlate to your environment:\nhttps://blogs.msdn.microsoft.com/winsdk/2015/06/03/what-is-up-with-the-application-failed-to-initialize-properly-0xc0000142-error/\n. @bagajjal \nI believe this is the behavior of any application launched via PsExec /s cmd.exe.  For example, the same occurs for ping -t 127.0.0.1 when pressing CTRL+C.  This is just an artifact of how PsExec handles it's console input/output forwarding and how it processes CTRL+C in order to facilitate it's remoting capability.  Instead of forwarding CTRL+C to the sshd process, it just terminates the cmd.exe process via TerminateProcess (which does not terminate children).  If it actually forwarded CTRL+C, then just sshd would die.  It would be nice if Mark added on a flag to alter the CTRL+C behavior. \nIf you want to run PsExec as system, I highly recommend doing psexec /d /i /s cmd.exe.  This will popup a interactive instance of cmd.exe that doesn't use psexec stdin/stdout handling so you don't have to worry about orphaned processes.. I\u2019d be surprised.  As far as I know launching with -i -d retains no\nconnection to psexec.\nOn Mon, Mar 5, 2018 at 1:40 PM Manoj Ampalam notifications@github.com\nwrote:\n\nLast time I checked, sshd in debug mode doesn't work in an interactive\npsexec (psexec -i).\nsshd spawned children see the stderr provided by psexec as invalid and\nabort promptly.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1073#issuecomment-370519375,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AMSMf01O0iKKLSyOcnx-O2TRVZU-xoIuks5tbYaQgaJpZM4SC0ht\n.\n. This one may be tough to diagnose.\n\nWhat's the \"large negative number\"?  Often those translate to unsigned numbers that happen to have the uppermost bit set thereby making it negative when cast to a signed number (i.e. \u202d-2147479552\u202c is 0x80001000).  \nAlso, in procmon, I'd recommending comparing the 'Environment' property in the parent process of the executable that fails versus one that works.  Filter on the 'Process Start' commands.  \n. The sshd logs were essentially identical.  Here are the sftp logs.\nsftp-good.log\nsftp-bad.log\nIn my test setup, I have a normal, local hard drive directory V:\\TestRoot with a symbolic link called V:\\TestRoot\\MySymLink that points to C:.  The initial directory in WinSCP is specified as the 'Remote Directory' in the session settings.  Connecting to V:\\TestRoot and using the 'Open Directory' button also works to browse to V:\\TestRoot\\MySymLink.  Interestingly, WinSCP also has a session setting to 'Follow symbolic links to directories' but the setting seems to make no difference.  The fact the directory is showing up in the UI as a file is telling me the SFTP server probably isn't characterizing it properly.  I also received a similar error with another SFTP client.\nIf you can't reproduce it, I can tree compiling myself but I'm unfamiliar with the OpenSSH codebase so it might take me awhile to hunt it down.\n. @bagajjal \nSee pull request: https://github.com/PowerShell/Win32-OpenSSH/pull/1091\nThe \"true\" problem was much deeper than I thought.  It came down to inadequate implementations of lstat(), readlink(), and the missing mode in strmode() that I had previously found.  This may correct some other problems reported.. @bagajjal \nAs requested, I pushed this to the other fork as pull request https://github.com/PowerShell/openssh-portable/pull/281.. @bagajjal Any chance to review my pull request?. This was addressed in my pull: https://github.com/PowerShell/openssh-portable/pull/281.  Closing.. Actually, upon further review of other shell code, I think we need to change this for different reasons.  I'm going to submit a different change.. I'm just now getting familiar with this code but I suspect this could be due to the following hard-coded limitation in signal_sigchld.c where MAX_CHILDREN is 50.  If true, it seems like this value could safely be larger.  \n```\nint\nregister_child(HANDLE child, DWORD pid)\n{\n    DWORD first_zombie_index;\ndebug4(\"Register child %p pid %d, %d zombies of %d\", child, pid,\n    children.num_zombies, children.num_children);\nif (children.num_children == MAX_CHILDREN) {\n    errno = ENOMEM;\n    return -1;\n}\n\n```. @KaizerT Not without some additional programming.  There are ways to work around the limitations that @manojampalam is describing, but it's not an \"easy\" change.  I'm new to this project and have already submitted two pull requests for other issues.  Depending on how those are received, maybe I'll take on this one next.. @manojampalam  I couldn't really think of a great way to come through that limitation other than a pretty significant overhaul of how process handling is being done.  However, I was able to create a [almost] drop-in replacement for WaitForMultipleObjects() that handles an arbitrary number of objects.  Tested on my computer to 5,000 threads with no issues.  About 175 lines long.  Interested?. @manojampalam See attached.  I can wrap this into a pull request of course.   Just need to replace the normal defines in the calling code that are used to identify the array offset with the *_ENHANCED versions.  Let me know what you think.\n-- Attachment Removed See Commit Referenced Below --. @manojampalam Sounds good.  I know there are some areas that could be problematic, but hopefully aren't relevant in our case and I will do my best to verify that.  For example, you could have a race condition where multiple signals are signally simultaneously and, in that case, only the first signal will be returned to the caller.  I think this is really only a problem for objects that automatically reset after being signaled.  I'll do additional testing in a standalone project and let you know how it goes.. @manojampalam Actually now that I look at the documentation better, that simultaneous issue may actually exist with the WaitForMultipleObjects() anyhow... but regardless, I'll look into it.  How does one use your \"OpenSSH unit test framework\"?. @manojampalam.  I updated the code to deal with APC completions, made it so it deals with thread cleanups more gracefully, optimized synchronization logic to be more clear, adjusted style to match that that of the rest of the project, and added logic so that it will just defer to the native function if less than 64 objects for efficiency.  All my tests have been integrated thus far and been very successful.    I was going to add a file to 'unittest-win32compat' for unit testing the code; does that seem reasonable?  \nAlso, do you have any existing tests for massively spawning copies to test scalability? I didn't see anything in there. . See commit https://github.com/NoMoreFood/openssh-portable/commit/817e97763709ff4bd888a23dce7e04c0dc7c46e1. . @manojampalam Updated based on your comments.  https://github.com/NoMoreFood/openssh-portable/commit/ba701187511362ea5cdd4a35f42ec340c70d0a8a.  . @manojampalam Not foreseeing the three potential changes I've submitted thus far (group detection, symbolic link support, and this change), I believe my pull request will reflect all three changes since I made the first two without branches.  I can cancel and resubmit my other pulls from three different branches if you think that makes the most sense.  Any advice would be appreciated.. @KaizerT Just wanted to let you know my pull request is finally in hopefully we seen this in a upcoming binary release.. @R030t1 I'm sure there are a variety of ways to address those limitations. I used a variant of one idea what was suggested on MSDN WaitForMultipleObjects() page.  I believe it's adequate for what this project needed.  My main \"goals\" were to submit something that was reasonably low overhead, reliable, addressed the issue noted in this thread, and was relatively non-intrusive to the existing code such that the project maintainers would be comfortable accepting it since I'm relatively new to this project.   The \"optimized\" wait-any version I ended up submitting and that was accepted is here: signal_wait.c.  I think it is pretty well commented overall and simple enough that it doesn't need much too head-scratching to figure out what's going on.  If you think that's something that's very unclear or could drastically improve maintainability, I'm certainly open to suggestions.. @KaizerT Unless you want to wait for the official release, you can probably close this since the code changes are in.. Does it behave any differently when you run 'ssh.exe -c aes256-cbc user@host'?. I was suggesting it as a diagnostic step more than as a solution.  Now we know it's more of an issue with cipher negotiation moreso than use of the cipher.  I'll see if I can reproduce it by forcing my SSH server to only support that one cipher.  . So upon being able to reproduce, I confirmed what I had suspected: the CBC ciphers have been disabled by default in the upstream OpenSSH codebase due to security issues.  That means that any OpenSSH client on any platform running newer versions of OpenSSH will see this behavior.  Explicitly specifying it via command line is a way of saying \"I know it's insecure, but I'm okay using it\".  \nYou can allow the cipher by default by creating/modifying \"C:\\Users\\userid.ssh\\config\" (no extension) and adding a line like \"Ciphers aes256-ctr,aes192-ctr,aes128-ctr,3des-cbc,aes256-cbc,aes192-cbc,aes128-cbc\".  \nIdeally, you could also contact the server owner and ask them use a different, secure cipher.. I don't think I have any planned follow-up, and I'm guessing others won't either so I'd just recommend closing it out.  One less entry on the long list of issues.  . Does running python.exe with --version give any feedback?. Are you going to take care of changing this or should I?. I also see another unit test that's failing (not one of mine) so I'll investigate that as well and put in changes for both (as necessary).  . I haven't look at it at a possible causes yet:\nV:\\Code\\openssh-portable\\contrib\\win32\\openssh\\..\\..\\..\\regress\\unittests\\win32compat\\file_tests.c:126 test #25 \"file io and fstat\"\nASSERT_INT_EQ(st.st_mode & 0777, 0600) failed:\nst.st_mode & 0777 = 391\n        0600 = 384. Alright, just looked at that last one.  It appears that's just a problem with the test assuming what the default, inherited permissions are on the file system where the test is being run.. This was addressed with my pull: https://github.com/PowerShell/openssh-portable/pull/288.  Closing.. @rkeithhill I have a pull request in that's being evaluated that might address this issue.  I can compile a custom sshd.exe for testing in my fork if you're interested/willing.. @sddim Can you see if there's a file for the crash located here: \"C:\\Users\\\\AppData\\Local\\CrashDumps\" or here \"C:\\Windows\\System32\\Config\\SystemProfile\\AppData\\Local\\CrashDumps\".  Also, if you're using password authentication, please change your password before posting the dump since it could contain sensitive information depending on where the code failed.. @manojampalam Looks like its failing here when attempting to dereference authctxt->pw:\n```\nstatic void\nprivsep_postauth(Authctxt *authctxt)\n{\nifdef DISABLE_FD_PASSING\nif (1) {\n\nelse\nif (authctxt->pw->pw_uid == 0) {\n\nendif\n```\n@sddim Can you try with the latest release and verify the error still occurs?  Other than groups, is there anything notable about the users? . @manojampalam I know you make this for tracking.  The better characterization of 'What was failing' would be \"ln command without '-s' specified\".  In the SFTP server 'ln' routes to link() to create hardlinks.  That's what this more recent commit addresses.  'ln -s' routes to 'symlink()' which has already been released.. Yes, although not a copy -- they are pointers to the same data on the file system.. @bagajjal You want me to take care of this?. I put in a pull request for a unit test of link(): https://github.com/PowerShell/openssh-portable/pull/304\n. @HSSupport Do you happen to know if you have a custom password filter installed on your systems?  The password generator used should meet most all the default criteria (>= 14, 3/4 character types, etc).. @HSSupport If I provide you a modified sshd.exe binary that uses a different password creation algorithm, would you be willing to test it to see if it resolves your issue?. @HSSupport Bump.  Did you see my last post?. @dwatley Based on your other thread, it looks like you're now actively building.  Is this still an issue?. @manojampalam You alright with me providing @archiker a private build to valid his issues are addressed?  . @archiker It was me who was actually going to send you the intermediate build.  However, I'm waiting for one outstanding pull request by @manojampalam to get merged so we don't encounter a different issue.. @archiker Please try these. Extract and overwrite your binaries. \nssh-testbinaries.zip\n. @archiker Standby for the moment.  There's a unrelated problem with SFTP that is being addressed.. @archiker Can you please try running as a service? It looks like the account you are running the server under doesn't have read access to AD so it cannot lookup the UPN for the user.   Also, if you want publickey authentication to work, you must create authorized_keys with the thumbprint of your key file otherwise the SSH server does not known what keypair is associated with your account.. @archiker Interesting.  Can you try to reproduce that behavior (i.e. first time succeeds, second time fails?) after restarting the service? And if so, provide the log with both attempts.  . @bingbing8  Yes, you can close the issue.  Thank you for the thorough write-up and the comparative analysis on why the behavior differs under Windows 10.  It would have taken me weeks muddling through assembly trying to figure that out.. I am actually unfamiliar with OneCore.  Do you expect all components to build with OneCore or just the client components?. Lovely.  The Lsa functions are fairly easy to eliminate but the code will be less efficient.  The functions that are in OneCore library (e.g., LookupAccountSid) will end calling those Lsa functions internally many times unnecessarily.  However, the code only gets called once on login and only when using group limiting so it shouldn't be too bad.  Eliminating TranslateNameW() will more complicated since I'm not familiar with any convenient, equivalent functions that do the proper Active Directory queries.   Will look into this.... Just so I understand what the options area, what is the best publication for allowed OneCore APIs?  This page looks like it should be authoritative, but it doesn't list calls like LsaLogonUser which are know we are using in the code.. Alright.   Based on what is listed on the page, it doesn't look like there's much in the way of Active Directory APIs.  This might make sense since many smaller IoT devices probably aren't equipped with the bloat of the Active Directory libraries.  Since TranslateNameW() only comes into play on AD-based logons, I think it would just be appropriate to dynamically load the function pointer from secur32.dll to support domain logons.  That should work around static link issue with onecore.lib.  Seem reasonable?. Addressed in new pull request:  https://github.com/PowerShell/openssh-portable/pull/311\nI looked for other calls to LoadLibraryW() and it looks like a similar approach is being used for other functions that aren't in OneCore.. @michaeltlombardi There seems to be a strong focus right now on core SSH functionality vice Windows-only enhancements so I'm not sure how much traction this will get right now.  That said, can you develop this idea more.  In what AD attribute would it be stored?  Something new?  Would SSH keygen be expected to upload the public key?. @manojampalam It's easy to turn on download Kerberos MIT for GSS-API support and compile with one or two changes, but SSPI will take some work especially to keep it maintainable.  I'm willing to take a shot at it unless somebody else is already working it.  Let me know.. @manojampalam The former -- making Windows Kerberos SSP work, presumably by using the GSS API call entry points.  I'd probably start with the SSH client to start with since I can validate my tests compared to PuTTY.  I'm not sure how much of a challenge this is, but I'm willing to investigate. \nOn the other hand, it took me about 10 minutes to compile with GSS API / MIT Kerberos enabled (untested) so if we're looking for some low hanging fruit, we could put that it in.  . @mgkuhn Agreed on most parts. I haven't been able to carve out the time to work on this yet so if you want to take the torch let me know. I think the real challenge is integrating it gracefully into the codebase in a way that's maintainable upstream.  Since the client (when compiled with the appropriate flags) actually supports MIT Kerberos, this would have to work alongside of that.. I think this is all done in the generate_sshd_virtual_token() which was outside of my changes.  Looks like that code has been doing an interactive logon for quite awhile.... @manojampalam @bagajjal You may remember my commentary on this topic in the pull request which I have copy/pasted below.\n\nJust wanted to note that the check (sub == SECURITY_BUILTIN_DOMAIN_RID) is to eliminate 'None' group from showing up (and causing the AppVeyor tests to fail that check for 0 group memberships). The 'None' group is a real principal that's added to every local account (sub-authority: '-513'). When the accounts is domain joined, this resolves to 'Domain Users'. You can actually assign permissions on the file system to 'None' and it's effectively the same as granting it to 'Authenticated Users'. It looks like the author of the 'whoami /groups' command actually tries to exclude this as well which has the side effect of making 'Domain Users' not show up on domain accounts (which it definitely should). The \u2018Users\u2019 BUILTIN group is also always added to the token regardless of the user being in the \u2018Users\u2019 group. Since these are all arguably real group principals that are used in group-based security checks, one could argue we should include them as well. If we choose to do this though, we\u2019d have to eliminate the \u201cno groups\u201d tests from AppVeyor since there\u2019s really no such thing as a real user with no group principals -- the only way that would happen is S4U fails or name lookup would fails with would be hard to trigger in an E2E test.\n\nMy preference is stop filtering out this SID altogether and eliminate the no group membership tests from AppVeyor.  \n@jirijanata Were you just using 'Domain Users' for a simple test?  Is there a practical reason such a broad group would ever be used?. Yes, that would pretty much accomplish the same intended effect.\nI'll put in a pull request to remove that filtering and the corresponding tests.. @manojampalam Pull request is in.  @jirijanata Should be addressed in the next version.  . Does DOMAINNAME\\root have a user principal name in Active Directory?  And the machine you're running it on is domain-joined?\nThe most useful diagnostic step will be getting the log with DEBUG3 enabled.  If the new algorithm were to fail it would be because TranslateNameW fails for whatever reason.  . @TCS-Taylor I suspect, at least in the new version (v7.7.1.0p1), the problem is the inability to discover the UPN for the user. This may be something related to SAMBA not properly servicing LDAP searches that the Windows TranslateName() function uses.  You should see this in your packet capture; it must be failing for some reason.  The error code (1332) indicates that Windows cannot get the UPN of the user by doing a lookup using the NetBiosDomain\\SamAccountName. \nFor the old version (v7.6.1.0p1) it may actually work if you use the UserPrincipalName as your login ID.  Please give this a try.  This will tell us whether Kerberos S4U works properly, in general, with SAMBA. . So the PREAUTH errors are \"normal\" and can be ignored.  Concentrating on the 7.6.1.0p1 code which removes the added complication of a name lookup, the only thing I see is a potential disconnect on Kerberos Encryption key types (i.e. MD5 vice AES256).  The other immediate thing I question is whether SAMBA actually supports Kerberos S4U.  I'll try to replicate your setup, time permitting.  While I carve out time to do that, can you let me know the following:\n\nSpecific version of SAMBA.\nThe SAMBA domain functional level.\nThe settings within your krb5.conf file.\nThe value of msds-supportedencryptiontypes on the computer object, if set.\nThe user acocunts AES128/256 etype settings.\n\nIf you're unfamiliar with the latter two, see this: https://blogs.msdn.microsoft.com/openspecification/2011/05/30/windows-configurations-for-kerberos-supported-encryption-type/\n. Alright, I got Ubuntu running with Samba.  TranslateName() does not work properly (it seems to work for anything other than acquiring UPN).  More importantly though, I receive a STATUS_NOT_SUPPORTED when attempting to acquire Kerberos S4U token.  So it looks both may be due to feature limitations in SAMBA.  \nUpdate: Latest version of SAMBA does actually support TranslateName() properly, but S4U still returns STATUS_NOT_SUPPORTED.  Lack of S4U support is documented so I think this is going to be a non-starter.. @jamieshaw Please attached DEBUG3 logs when running as a service.  Also please make sure the user has a user principal name defined in Active Directory.. @wvoyek So the error you are seeing is a different breed from the others.  0xC000006D = STATUS_LOGON_FAILURE (From Docs: \"The logon attempt failed. The reason for the failure is not specified, but typical reasons include misspelled user names and misspelled passwords.\").  Since you got this far, I doubt it's a misspelled username but I don't see any UPN lookup error, so I assume that translation is fine.  That account works fine with username and password?  . @wvoyek Weird.  Do you happen to see any Security logon events like 4625 around the time when the error occurs?  Anything particularly weird about the account or your setup that you think could be impacting it?  I'm close to creating a Kerberos S4U based on all the random issues than can occur when doing impersonation on a variety of platforms.. @wvoyek How about on the domain controller?. @ThomasAnkcorn Can you attach the full debug log with DEBUG3?  If they aren't being produced, you can updated the lines in C:\\ProgramData\\ssh\\sshd_config:\nSyslogFacility LOCAL0\nLogLevel DEBUG3. From what I can tell, the upstream code doesn't actually use posix_spawnp(), it uses execv() after a fork().  Regardless, it looks like Win32 fork prepends the OpenSSH directory to the executable string in spawn_child_internal() if the string is not an absolute path which subsequently causes CreateProcess() to not go through the normal PATH environment variable search routine.  I imagine this might have been to ensure that an unqualified executable in sshd_config could be launched without worrying about what the working directory might have been sshd was launched.  Maybe a better thing to do would be to set the working directory to the OpenSSH at launch via SetCurrentDirectory() and let the CreateProcess() executable resolution code do it's thing or maybe prepend the OpenSSH directory into the beginning of the path which should have the same effect?  Thoughts?. I'll take care of fixing this -- easy fix.. @manojampalam User right assignments are only necessary for initial token generation -- once the process is initiated, it is no longer necessary for the policy to exist; maybe the code could add/remove the policy entry as necessary? . @manojampalam Yeah, I'll look into this.. Pull request is in.  This will address the behavior go-forward; current, orphaned entries will have to be removed manually (you can Shift-Click to select/remove them all in the policy editor).. @bagajjal His change looks good to me.. I can't speak for whether it's in the plans, but after enabling the compiler flag it compiled fine and looks like it almost worked for my smart card (C_Login failed: 160).  It asked for my PIN and then rejects me.  Any reason why we wouldn't want to support this?  I can probably figure out what's going wrong pretty easily since I'm familiar with the PKCS libraries from my work on PuTTY-CAC.  \n@manojampalam  I'll take a look at this before my SSPI adventures unless there's a reason we don't want to support PKCS11.  Let me know.. Update: When/if my other change to rework readpassphrase() is merged (https://github.com/PowerShell/openssh-portable/pull/322), then all we have to do is set ENABLE_PKCS11 in order for PKCS11 support to work.  It's possible we don't need change that merged for compiling in Visual Studio 2015, but my development environment is Visual Studio 2017 which seems to cause readpassphrase() to pass back a utf16 string to a function that expects utf8.. Created a pull request if we want to follow through with this: https://github.com/PowerShell/openssh-portable/pull/331. In your case, it's having an issue turning your Domain\\UserName into a user principal name.  Can you confirm a user principal name is assigned for these accounts under the Account tab in Active Directory?  Also, what OS is your domain controller running?. @pldmgg Good to hear. @manojampalam Can you possibly check with any AD / Kerberos gurus to see if there is some of alternate format we can pass into ClientUpn for KERB_S4U_LOGON that will work for users that do not have their upn attribute defined in AD?  I'm not sure if there's some sort of \"default\" upn that we should fallback to.  Right now we're falling back to NetBiosDomain\\SamAccountName which I think has zero chance of working for Kerberos S4U. . @manojampalam Disregard previous request.  Unbeknownst to me before now, apparently all accounts have an implicit UPN that defaults to SamAccountName@DnsDomainName; I have always explicitly set them in my forests.  I will submit a pull request to try one and then the other.. Pull request created: https://github.com/PowerShell/openssh-portable/pull/332. @manojampalam Very possibly.  \n@umemoni256 Does the account in question have a UPN explicitly defined on the account?. If interested, you can test with these binaries: https://github.com/NoMoreFood/openssh-portable/releases/tag/v7.9-merge-1. @manojampalam The STATUS_INVALID_ACCOUNT_NAME is just a result of passing NetBiosDomainName\\SamAccountName to the call.  The code does it in an a desperate attempt after not being able to discover the UPN.  The real errors are the '5's returned from the TranslateNameW function on the first line -- which is the standard error  code for access denied.  Unrelated - glad to see your posting again; was worried when I hadn't seen much activity ;-)   \n@AWSmith0216 Any idea why a name lookup call might fail with access denied in your environment?  Any special permissions in Active Directory or specialized security settings?  Update: Just saw your comment.  The computer account running the service will need to have the ability to read into the Active Directory instance that contains the user.. @manojampalam This could be a complication with name lookup in the one-way trust scenario I didn't anticipate.  I will try to reproduce in a few days.  If you happen to have any veterans in the AD/programming arena that you can ask about name translation in one-way trust scenarios, this may be a good question for them.. You guys may need to explain what you mean by 'LDAP account'.  If you're referring to an Active Directory account, then everything should work fine provided that the SSH server has a connection to the domain controller.  The domain controller is an LDAP server which I believe is maybe where the terminology breakdown is occurring here.  The OpenSSH server will use other Windows protocols such as Kerberos or NTLM to validate the user.  Just please try the latest version as @bagajjal suggests.  . @ipndeveloper This error basically means that Windows couldn't find an account that matched the username string that you put in.  Usually the  LookupAccountName() is very forgiving so ensure that you're specifying an account that is valid on the destination system and/or try using a different format (username, DOMAIN\\username, username@domain.com, etc).   I also recommend opening a separate issue to discuss this.. @lars18th I'm not overly familiar with the LibreSSL library, but at first glance it does not appear that AES-NI support is available for the Windows build (yet). I see AES-NI assembly files for MacOS and ELF, but that's it.. Currently it does not use the Windows cryptography libraries so the global Windows FIPS compliance flags will have no effect on it.  LibreSSL is used for cryptography which is not FIPS validated/certified and does not attempt to, as far as I know, do anything in controlling cryptographic operations.\nHowever, you can certainly control the ciphers OpenSSH uses so you can make it it operate in a way that is compliant with the spirit of FIPS; my guess is the default configuration of OpenSSH is probably pretty close.   I doubt that OpenSSH on Windows will be FIPS validated/certified anytime soon.. At least for Windows 10 64-bit, I was able to run the OpenSSH 32-bit just fine.  This is what I would expect (most 32-bit applications run perfectly fine on a 64-bit system if the SysWoW64 subsystem is installed).  I do not have a 32-bit Windows 7 machine to test on though.  The executable look fine to me. . It may also be worthwhile to temporarily disable your antivirus solution to see if the behavior changes or clearing the internet-downloaded flag that might be set on them (using an NTFS stream).  You can do that by right-clicking on all files, go to properties, and chose the option to 'unblock'.. @yecril71pl So... to confirm... using the newest version of the client and authenticating against an OpenSSH 7.4 server: you simply connect, immediately press delete, and the session disconnects?  What shell are you running on the remote server?. The home directory for the system account is C:\\Windows\\System32\\config\\systemprofile\\.ssh or C:\\Windows\\SysWow64\\config\\systemprofile\\.ssh depending on whether you're running 32-bit ssh.exe or 64-bit ssh.exe.  If you ever want to emulate running as the SYSTEM account, I recommend downloading PSEXEC and running PSEXEC -i -s cmd.exe.  It'll spawn an interactive command prompt running as the SYSTEM account that you can do testing in.. @rkeithhill You can also put this as the first line of your profile (which incidentally also makes SFTP work if OpenSSH is not in your system path):\nIf ([Environment]::CommandLine -like '* -c \"sftp-server.exe\"') { Start-Process 'C:\\Program Files\\OpenSSH\\sftp-server.exe' -NoNewWindow -Wait; [Environment]::Exit(0) }. The main issue is here is the lack of native DEFLATE support in Windows.  It looks like Microsoft has a ZLIB C library that is used for the DotNet and DotNet Core platforms (https://github.com/dotnet/corefx/tree/master/src/Native/Windows/clrcompression).  This library is distributed as clrcompression.dll in the various DotNet redistributables.  I believe the file has the proper C exports to support adding compression into OpenSSH.  I can certainly put in a PR to dynamically bind to this DLL, but the bigger question is where we should fetch this DLL from and whether the maintainers here will endorse such a solution.  We will have to defer to them for input.. @manojampalam \nOn the library I mentioned, if you were to move forward with something like that I'd simply suggest you distribute the DLL along with OpenSSH; I agree relying on other installations of a non-builtin components is unreliable.  Since the aforementioned library is more or less to be fully-ported ZLIB, this is probably the lowest cost solution.\nOn the native support note, you're probably right about it natively supporting it given that Windows Explorer has had unzip capability for quite a few major versions.  I'll see if I can find an API that's exposed/supported.  If we find one though, I'd be surprised if it'd be available via the OneCore library.  If not, are you alright with that feature being conditionally available (i.e. dynamically linked)?. Update: Actually, I'm thinking I might be right about native DEFLATE support.  Sounds like the code used in Windows Explorer might have been explicitly licensed and the implementation in the earlier DotNet source code was a managed implementation (which performed poorly enough that they switched to using ZLIB).  So I'm guessing we're either have to manually compile ZLIB / ClrCompression or try to find a spot where the DotNet team is stashing the various x86/x64/ARM versions of ClrCompression.dll that can be easily fetched.  I'm willing to test out dynamically loading the file and see if it's truly compatible.  We could also just pull the source into a separate repository (like LibreSSL) or download on the fly and create a static library at build time to link in since the code is pretty easy to compile (verified).. @manojampalam @lars18th \nSee https://github.com/NoMoreFood/openssh-portable/releases/tag/v7.9-zlib.  This does not have the changes from my Kerberos branch.. @masaeedu Any chance to create a dump? Also, if you insert a sleep to slow it down, does the behavior still happen \"like clockwork\"?  . @masaeedu I'd also be interested if you see any change in behavior when using the binaries I posted here: https://github.com/PowerShell/Win32-OpenSSH/issues/1301. . @masaeedu Ok, thank you for testing my binaries.  After further analysis, most of the file I/O goes through a different set of calls so I don't think your issue is what I was thinking it could have been.  However, during my testing of rapid connections I did notice that I had to adjust the MaxStartups in sshd_config to a larger number (as shown below).  Since the one second sleep didn't change the behavior, I again doubt this is a problem for you unless your server is slow although it might be something you want to consider adjusting, in general.  \nMaxSessions 512\nMaxStartups 512\nIn addition to the sshd.exe dump, it might be valuable to capture one of the client sessions using ssh.exe -vvv to see if there's a particular part of the negotiation that's not responding.. If you have many simultaneous connections, you need to adjust the value or the connection will not be processed.  A full description is provided here: https://en.wikibooks.org/wiki/OpenSSH/Cookbook/Load_Balancing  I wasn't even aware of it until I saw the setting being processed when debugging the code.. Just an update.   Yesterday I created a skeleton of what could be a minimalist, OpenSSH-focused SSPI Kerberos GSSAPI implementation.  This would be a downsized gssapi.h and corresponding gssapi.c that would be statically compiled.  Only a few OpenSSH source code changes would be required other than GSSAPI being defined.  Assuming I don't hit any fundamental roadblocks, probably a few weeks out for an alpha version.  . Another update.  I have a working prototype for both the client and server.  There is still quite a bit of testing and cleanup to do.  Delegation will work provided that the computer account of the server is setup to allow it in Active Directory (using unconstrained, constrained, or resource-based delegation techniques). Unfortunately if the server is running Credential Guard, unconstrained delegation no longer works.  \nIt'll probably be a week before I'll be ready for any one to test.. See https://github.com/PowerShell/openssh-portable/pull/360. . @manojampalam I'll post a binary release in my fork shortly.  As of right now, it only supports Kerberos.  That's pretty much industry standard for SSH servers/clients.  Use of NTLM deprecated and somewhat taboo these days.. @manojampalam Test binaries are here: https://github.com/NoMoreFood/openssh-portable/releases/tag/v7.9-sspi. So it looks like you're authenticating with a password.  The \"error: 1326\" equates to \"The user name or password is incorrect.\".  Does your password contain non-ASCII characters?. Can you login locally to workstation locally or via RDP using the houzuo.guo@fi.abb.com format? . For accuracy, it's actually the user principal name (UPN).  Alot of organizations have their emails match their UPN, but they serve very different purposes.  It looks like the code detected the UPN just fine.  Are you the administrator of this network? Do you know why UPN-based logins would fail? I can't imagine how the network is functional without it working.. What version are you running?  And what do you mean by \"wrong results\"?  . Any special about these directories?. Debugging When Running As A Service\nSo here's what I do for debugging as a service.  Running as a service can result in different behavior compared to running sshd as an interactive user.  \n\nInstall SSHD using the normal instructions.\nSet the following in C:\\ProgramData\\ssh\\sshd_config to enable verbose logging:\n    SyslogFacility LOCAL0\n    LogLevel DEBUG3\nInstall Microsoft Child Process Debugging Power Tool for Visual Studio.  This allows the  debugger to pickup any child processes.\nLaunch Visual Studio as Administrator.\nActivate the aforementioned plugin by going to Debug :arrow_right: Other Debug Targets :arrow_right: Child Process Debugging Settings :arrow_right: Check 'Enable child process debugging' :arrow_right: Click 'Save'. \n\nReplace the executable(s) in 'C:\\Program Files\\OpenSSH' with your development executables (or make symbolic links for the relevant executables that point to your Debug directory:\n    ```\n    C:\\Program Files\\OpenSSH>del sshd.exe\nC:\\Program Files\\OpenSSH>MKLINK sshd.exe C:\\openssh-portable\\bin\\x64\\Debug\\sshd.exe\nsymbolic link created for sshd.exe <<===>> C:\\openssh-portable\\bin\\x64\\Debug\\sshd.exe\n7. Start the 'OpenSSH SSH Server' service.\n8. Startup PowerShell as Administrator and tail the sshd log file.  This will display messages as they are added to the log file:\nPS C:> Get-Content -Path C:\\ProgramData\\ssh\\Logs\\sshd.log -Wait -Tail 0\n```\n9. Attach to the sshd.exe process using Debug :arrow_right: Attach to Process....\n10. Place breakpoints where desired.\n11. Login using ssh (or another SSH client).\n. Hmmm... that should be it.  Did you start sshd as service?  I\u2019ll check my sshd_config against the default when I get back to my computer.  I suppose step 2 should technically be after the service starts to get the file in place.. Ok, my bad.  My write up is for debugging as a service.  I\u2019ll update them for running as as a regular user in a bit - much of the same should apply.  I usually run as a service. . I know your intent is to not run as a system user, but is it also your intent to run an unprivileged user?  . Alright, I'm not familiar with this use case and have not tested it myself.  I'll give it a test today.  I do know that public key authentication (into a different user account) is not going to work because it relies on privileges that a normal user does not have.  Password-based authentication can technically work at the OS level assuming Secondary Logon is enabled (it should be by default).. So I did a quick debug from and the problem is indeed to the fact that CreateProcessAsUserW() failed, as indicated by your session output.  This is likely for two reasons: 1) The token returned from LogonUserExExW() probably should be a primary token and will never be since LOGON32_LOGON_NETWORK_CLEARTEXT is being used as the logon type, and 2) when using CreateProcessAsUserW(), additional privileges are needed to assign the token to the new process (this is what the 1314 error indicates).  In order to run in a truly unprivileged mode, I suspect that CreateProcessWithLogonW() would have to be used instead of the LogonUserExExW()/LogonUserExExW() combo.  \n\n\nI haven't familiarized enough with the functions that call these to confidently infer why it was designed this way; somebody else would have to speak to that.. @manojampalam @schmitch The SID it's complaining about is from \"NT SERVICE\\sshd\".  Should this permission be necessary?. Can you close the issue if you believe it to be resolved?. Try doing powershell.exe -NonInteractive -NoProfile ipconfig to see if the behavior changes.. Are you sure the SSH server you're connecting to is running the latest version?  Version 7.7.2.0 doesn't have the function NetUserGetInfo() in it at all.. Can you verify that the sftp-server.exe is in the system path?  For example can you launch a command prompt and type sftp-server.exe and it looks like it attempts to run?. Other than using the AuthorizedKeysCommand to source public keys from a public repository such as Active Directory, I do not believe there will be any elegant solution to this given that the user's profile or home directory (on a network drive) that has authorized_keys will not be accessible to a locally impersonated user.  On Linux, this isn't an issue because the authorized_keys file is world readable.  On Windows, home directory and profile permissions are often off-limits to users and and user-executed applications.  Yes, you can CreateProfile() to pre-provision a local profile for user, but this is going to ignore roaming profiles altogether which could introduce another set of issues if the server also supports interactive logins and the user has an expectation of getting their roamed profile when logging in interactively later.\nI'm tempted to say one of better options is to get AuthorizedKeysCommand working (not sure where that stands right now), and then maybe leave it up to the administrator as to whether they want to sample an AD attribute or optimistically search for a world-readable authorized_keys file sitting under the network home directory / profile directory that can be read prior to profile creation.  Maybe the wiki could have an example script file could be provided that demonstrates this technique... \nMany options, but none of them are front-runners to me.. This will not work.  The way that PuTTY and WinSCP interact with Pageant is to locate the \"Pageant\" window and send messages using the Windows messaging subsystem.  The messages pass along a small structure to facilitate key exchange through a memory mapped file.  People have written various go-between translators for Cygwin's SSH implementation and Pageant which may work with this OpenSSH distribution but I wouldn't be optimistic.. @aviadmini I apologize; I missed the part where you referenced to the fact you were already using one of those custom go-between translators.  I feel like the issue is more appropriately posted in https://github.com/benpye/wsl-ssh-pageant which is looks like you already did.  I'll try to reproduce it myself this weekend, but I'm curious what the authors of that have to say.. @suppenfilter What happens when you assign the permissions and ownership of the file to APPPOOL\\YourAppPoolName?. What is the latency between the client and server?\nI'm willing to take a look at this, but I'd want some sort of repo snapshot (accessible to me) I know can reproduce the issue before diving into setting up a test.. Can you verify this is still an issue with the latest version?  Seems to works for me:\n```\nC:\\Users\\Bryan Berns.ssh>ssh-add\nIdentity added: C:\\Users\\Bryan Berns/.ssh/id_rsa (C:\\Users\\Bryan Berns/.ssh/id_rsa)\nCertificate added: C:\\Users\\Bryan Berns/.ssh/id_rsa-cert.pub (user_berns)\nC:\\Users\\Bryan Berns.ssh>ssh-add -l\n2048 SHA256:TL+xy1N/lJW+Rh7zMOH7S+qH/npdQ03UVYtoUO8Mbx4 bryan berns@BERNS-WINDOWS (RSA)\n2048 SHA256:ZhLjgW3nju/JhhhTIYvV73wj2gFDF55zHdI2VuuHdWQ C:\\Users\\Bryan Berns/.ssh/id_rsa (RSA-CERT)\n```. 7.9 albeit my version was built from source.. @manojampalam Yup, ignore my last comment.  Some other application had decided to dump a copy of ssh-add.exe in my system directory and it had precedence over the OpenSSH copy in my path.  Are you looking into this one?  If not, I'll take a look.\nUPDATE: It was not the other binary \"fixing\" the issue but simply the fact I had previously added a key and it was stuck in the registry.. @cdstg So the reason they both don't show up is because the entries are stored in HKCU\\Software\\OpenSSH\\Agent\\Keys\\SHA256:HASH and the HASH is the same for both entries.  The RSA entry is being overwritten by the RSA-CERT entry.  Can you try the following, please:\n\nMove the -cert.pub file to another directory.\nRun ssh-add\nAppend '-Alt' to entry in the aforementioned registry key. \nRestart the service.\nMove -cert.pub back\nRun ssh-add\nRun ssh-add -l \nVerify ssh operates as expected.\n\nIf that works, we can explore better solutions.\nUPDATE: If you want to try a potential fix yourself, see: https://github.com/NoMoreFood/openssh-portable/commit/d7b6489bd37d63ce50abf9742bc8edcadc4a1f06. If interested, you can test using these binaries: https://github.com/NoMoreFood/openssh-portable/releases/tag/v7.9-merge-1. Unable to reproduce this on a connection with ~35ms latency. . Topically, it appears that it might be waiting for the asynchronous write of \"Connection to 172.217.225.62 closed.\" to stderr to finish.  Can you also post the output when \"-vvv\" is set (assuming that passing that doesn't fix the issue 100% of the time)?. @EricSL If you're willing to help debug (and presuming that a verbose output can't be produced), I'd like to provide you a private version with some additional debug variables to trace where things could be going wrong.. @EricSL I was finally able to reproduce on a low-latency connection this but the problem is quite mysterious.  It almost appears that after one part of the code calls TerminateThread() that no other new threads can be spawned.  I'm still probing since I'm not familiar with this part of the code, but hopefully will have an update in a few days.. @EricSL Please try these changes: https://github.com/PowerShell/openssh-portable/compare/latestw_all...NoMoreFood:hanging_issue. If interested, you can test using these binaries: https://github.com/NoMoreFood/openssh-portable/releases/tag/v7.9-merge-1. @pakona Unfortunately, I cannot speak for the release timeline nor whether this patch will be ultimately be accepted.  I get the sense the maintainers are preoccupied with other tasks at the moment so I can only hope there is a surge of attention on this fork at some point.. Can you turn on server-side logging and provide the sshd.log from that after a single connection attempt?\nUse LOCAL0 / DEBUG3 in sshd_config as described in https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps. On the server in a command prompt, can you verify the following doesn't produce any error messages:\nC:\\Windows\\system32\\conhost.exe --headless --width 80 --height 24 --signal 0x214 -- \"c:\\windows\\system32\\cmd.exe\". @bagajjal Any particular reason by CreatePseudoConsole() wasn't used as @DHowett-MSFT suggests?  Obviously disabling file system redirection is easy, but curious why the function wasn't used.. @j4munoz is certainly correct. The short name for the service is actually 'sshd' so you can use that in some scenarios:\n\nPlease close this issue if these answers satisfy your question.. I do not believe you are running the latest version since NetUserGetInfo() appears no where in the 7.9 code.  Please double-check.. The message itself makes sense.  The original authorized_keys file has the old SID embedded in the ACE within the file security descriptor and the message is telling you to remove the old SID because it has no idea it's associated with the current user (yes, arguably a bug).  Can you try manually removing the user's permission on the file and adding it back in?  That should rewrite the security descriptor with the new SID.  At the very least, the repair script can probably be updated to accommodate this.. Actually, I now have a patched binary if you want to give it a try.  Let me know if you want me to compile them for you.\nThe code changes are here: https://github.com/PowerShell/openssh-portable/compare/latestw_all...NoMoreFood:sidhistory_issue. I believe the only major dependencies are the Windows 8.1 SDK and Visual Studio 2015 build tools (both of which are available as components in the Visual Studio 2017 installer).. If interested, you can test using these binaries: https://github.com/NoMoreFood/openssh-portable/releases/tag/v7.9-merge-1. Reproducible. Appears to be a server side issue since the native client works fine against another SSH server. I'll try to take a look at the code tonight.. Pull request is in: https://github.com/PowerShell/openssh-portable/pull/376. If interested, you can test using these binaries: https://github.com/NoMoreFood/openssh-portable/releases/tag/v7.9-merge-1. @Alwaysin Change your config to the following using the logging parameters on sftp-server and restart the service:\nMatch User myuser\n  ForceCommand sftp-server.exe -f LOCAL0 -l DEBUG3\n  ChrootDirectory C:\\Users\\myuser\\SFTP\nAttach the resulting sftp-server.log from C:\\ProgramData\\ssh\\logs immediately after the problem occurs.. This is reproducible with just a standard local user (not domain user) and the problem can be seen with Get-WmiObject as well.  I suspected might be using Get-HotFix might be using WMI which is why I tried Get-WmiObject; other technologies may have similar issues.  You can also reproduce it by running wmic.exe ComputerSystem from a Command Prompt SSH session (i.e. not PowerShell as the shell).\n@manojampalam I can trace this back to LOGON32_LOGON_NETWORK_CLEARTEXT as the logon type for LogonUserExExW().  If you use LOGON32_LOGON_INTERACTIVE, it works fine.  In principal, I feel like we should be using LOGON32_LOGON_INTERACTIVE since that's arguably the sort of login this is, and it's probably the most flexible token.  However, I know that comes with the added complication of the user requiring the \"Allow log on locally\" security policy privilege on the destination system to grant SeInteractiveLogonRight -- and they may not have that privilege in all cases.   Maybe we should try LOGON32_LOGON_INTERACTIVE and fail over to LOGON32_LOGON_NETWORK_CLEARTEXT if the user doesn't have the requested logon type?  We could also try to temporarily grant SeInteractiveLogonRight and then revoke it immediately after process creation, but that could raise some SIEM flags at some companies.. @manojampalam It may be more of a WMI-specific issue. As I mentioned, running wmic \nComputerSystem from a normal command prompt also results in an access denied message.. That port check was removed in 7.8 (commit).  Please try upgrading to the 7.9.  . Can you try version 7.9?  My logs look to have a date.. Can you verify this is an issue with 7.9?. Ignore.  I can reproduce this, but I have to use a remote host; localhost works fine.  Likely some sort of race condition.. Well, this is not a classical race condition.  It appears that if the connection is very quick, there's a short-cut in the code that avoids poll().  Once in poll(), the appears the asynchronous processing is a bit buggy.  I'm looking into it, but I'm not as familiar with this part of the code.  . At the moment, it appears this is hard coded.  I think the best you can hope for is to delete/rename the current logs folder and make a symbolic link (C:\\ProgramData\\ssh\\logs -> real location) to point it to a new location.   See below.\nNET STOP \"OpenSSH SSH Server\"\nMKDIR V:\\NewLogs\nREN \"%ProgramData%\\ssh\\Logs\" OldLogs\nMKLINK /D \"%ProgramData%\\ssh\\Logs\" V:\\NewLogs\nNET START \"OpenSSH SSH Server\". I'd be willing to put in a change to allow a registry override for LOCAL0 as that would be pretty easy, but I'd want probably want one of the maintainers to weigh in before I go to the trouble.  I've got quite a few PRs open and I'm loosing hope any of them will be merged.. Seems to be reproducible.  Looking into it.. Pull request is in: https://github.com/PowerShell/openssh-portable/pull/380\n@Enxer: Can you try the binaries posted here:\nhttps://github.com/NoMoreFood/openssh-portable/releases/tag/v7.9-merge-2. Just to make sure, you replaced the server (sshd.exe) binaries with these and restarted the service?  Just weird that I was able to reproduce a similar behavior, find an exact cause, and it's different from the one you reported.\n(Also can you delete your comment in the PR --- just don't want to somebody to respond to it over there). The latest log makes it look like user (e.g., \"nbentiznger\") does not exist on the system.  Can you confirm it does?. @Enxer Thanks for the update.  As I mentioned, can you please remove your comment from the pull request so we don't confused the efficacy of that change.  I'd say let's keep the issue open until this is officially released.  Thanks!. @keuucy Can you see if these binaries address your issue?\nhttps://github.com/NoMoreFood/openssh-portable/releases/tag/v7.9-merge-3. @bagajjal Switch statements are not bitwise operations.  Both _S_IFLNK and S_IFDIR are set in the switched variable which needs to be handled as a separate case.   I can certainly explain in more detail, but it definitely is necessary.\n. @bagajjal Does my comment make sense?  The code was already handling case 0x4000 (S_IFDIR).  I added cases for 0xA000 (_S_IFLNK) and 0xE000 (_S_IFLNK | S_IFDIR).  It appears based on tests with Linux that if something is a link, the mode string should indicate it is a symbolic link regardless as to whether it points to a file or a directory.  . ",
    "chmac": "We probably did, I think it was installed by cygwin, guessing the error was on my side...\n. ",
    "h0rnman": "If the binary could be put into a static location that was updated every time a new build was done, it's pretty easy.  That said, I already have this script built, but I don't use GitHub enough to know how to submit it without cloning the entire repo.  Here is what I put together:\n``` powershell\nfunction Install-OpenSSHWin() {\nfunction Get-UserAdminStatus() {\n    return ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] \"Administrator\")\n}\n\nif (Get-UserAdminStatus) {\n\n    $URL = \"https://github.com/PowerShell/Win32-OpenSSH/releases/download/11_09_2015/OpenSSH-Win32.zip\"\n\n    Add-Type -Assembly System.IO.Compression.FileSystem\n\n    Invoke-WebRequest -Uri $URL -OutFile \"$env:temp\\OpenSSH-Win32.zip\"\n    [System.IO.Compression.ZipFile]::ExtractToDirectory(\"$env:temp\\OpenSSH-Win32.zip\",\"$env:ProgramFiles\")\n\n    Invoke-Expression \"netsh advfirewall firewall add rule name='SSH Port' dir=in action=allow protocol=TCP localport=22\"\n\n    Set-Location \"$env:ProgramFiles\\OpenSSH-Win32\"\n    & \".\\ssh-keygen.exe \" \"-A\"\n    & \".\\sshd.exe\" \"install\"\n\n    Set-Service -Name \"SSHD\" -Description \"SSH Service for Windows\" -StartupType Automatic\n    Start-Service SSHD\n}\n\nelse {\n    Write-Host \"This script must be run as an Administrator\"\n}\n\n}\nInstall-OpenSSHWin\n```\nI've only tested on my Win7x64 machine, but I tried to stick with things that would work under Powershell 3+.  I left out the part enabling key-based auth, but anyone doing that is going to likely do everything by hand anyway.\n. New-NetFirewallRule is for servers only.  If you're on a workstation, try:\nnetsh advfirewall firewall add rule name='SSH Port' dir=in action=allow protocol=TCP localport=22\n. ",
    "bazzilic": "There's also a Chocolatey package in the repository, so you can use cinst win32-openssh and voila.\n. ",
    "martinpauly": "netsh advfirewall firewall add rule name='SSH Port' dir=in action=allow protocol=TCP localport=22\nThe blank in name is not accepted, the Wiki entry it is correct:\nnetsh advfirewall firewall add rule name=sshd dir=in action=allow protocol=TCP service=sshd\n. ",
    "pvdhoef": "It appears that compression works now with Win32-OpenSSH-0.0.12.0.\nSee https://github.com/mitchellh/vagrant/issues/8076\nThanks a lot!. I see. I jumped to conclusions, apologies for the confusion. \nAnyway, I'm happy to be able to use vagrant ssh now without workarounds.. Hi @manojampalam, the error occurs on a Windows 10 Enterprise box with PowerShell version \ufeff5.1.14393.0.. Installation works now without errors, thanks a lot for that!\nLog files are now correctly written to C:\\Program Files\\OpenSSH-Win64\\logs.\nHowever, when trying to ssh to the machine I get:\nssh_exchange_identification: Connection closed by remote host\nAnd in logs\\sshd:\n2408 11:42:39 421 Server listening on :: port 22.\n2408 11:42:39 421 Server listening on 0.0.0.0 port 22.\n2408 11:42:39 421 error: Couldn't create pid file \"./sshd.pid\": Permission denied\n2408 11:43:34 999 error: fork: No such file or directory\nTried to set r/w permissions on C:\\Program Files\\OpenSSH-Win64 for NT SERVICE\\sshd but that didn't help.\nAfter stopping the sshd service and starting it from the command line with sshd.exe -d I was able to ssh to the machine:\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug1: socket:532, io:000001FC6FC8F970, fd:4\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug1: socket:536, io:000001FC6FC91100, fd:5\ndebug1: pipe - r-h:540,io:000001FC6FC42530,fd:6  w-h:544,io:000001FC6FC95500,fd:7\ndebug1: Server will not fork when running in debugging mode.\n... etc\nThe message Server will not fork when running in debugging mode explains maybe why the error: fork: No such file or directory did not occur this time.\nHope this helps. If you need more information, please let me know.\n. @manojampalam, I created a separate issue (#451) as requested. It can indeed be fixed by installing into a location without white space characters in the directory path it as you suggested.\nI saw you already created a issue ( #450) for that.. ",
    "Ordspilleren": "I'm experiencing the exact same problem. SSH works fine in CMD, but halts in Powershell as described here.\n. ",
    "Cyberider": "Dito\nUsing Windows 10 x64\n. ",
    "mrmckeb": "Great, thanks. Looking forward to seeing it in March (or beyond).\n. Hi @manojampalam, I was just interested in an update to this - I saw in the release logs for the last preview that you're working on \"right security model and user experience for Windows\", and wondered if that was related to this piece of work?\n. Amazing, thanks @manojampalam!\n. ",
    "Ono-Sendai": "I get errors like this when trying to build with vs2015:\n4>D:\\programming\\Win32-OpenSSH-latest\\includes.h(181): fatal error C1083: Cannot open include file: 'openssl/opensslv.h': No such file or directory\nPresumably some kind of configure script needs to be run?\n. ok, got it building, thanks.\n. Added some notes on the bottom of this wiki page: https://github.com/PowerShell/Win32-OpenSSH/wiki/OpenSSH-64-bit-Build-and-Installation-Instructions\n. Digging into this a little deeper, it looks like scp creates an ssh process., then tries to read data back from it on line 2139 of scp.c with a call to _read().  This returns 0 for some reason.\n. Looking at task manager, it looks like ssh.exe is started and then terminates more-or-less immediately after the CreateProcess call.\n. Running ssh itself with the command line passed from scp:\n-x -a \"-oFallBackToRsh no\" -l nick myserver.com scp -t /home/nick/ \ngives\nssh_dispatch_run_fatal: Connection to XX.XX.XX.XX: unexpected internal error\nLooks like it's unexpected internal errors all the way down!\n. Just built with trunk, get same error:\n ssh_dispatch_run_fatal: Connection to xx.xx.xx.xx: unexpected internal error\nlost connection\n. ",
    "DanSkur": "I am able to run scp.exe, using the following:\nscp.exe [file] [host@ip:path]\nI am running from windows machine, trying to scp to a windows ec2 machine. It copies over the correct files.\n. ",
    "alexchandel": "related: #169\n. Note that scp is known to be broken in the March build, per the release notes and #169.\n. Note scp appears to work again in 4_5_2016, at least for SSHD.\n. I still see this:\nssh_dispatch_run_fatal: Connection to 192.168.3.187: error in libcrypto\nwhenever I try to use win32-openssh's scp to copy to a remote machine.\n. This is quite annoying, and sshd does the same thing to clients connecting to it. It even deletes clears their scrollback buffer as you run commands, meaning you can't see the beginning of the output of commands that output a lot.\n. For some horrible reason, they appear in System32 for me.\n. @DarwinJS The zero-byte log is pretty much exactly what happened to me.\nI tried once with the chocolatey package and once without. Both led to #159 eventually. Both the chocolatey attempt and the second one (done just by running a batch file as Administrator) put the log into System32. However the batch file additionally caused #138.\n. @manojampalam I'd rather not have them in System32, OR in Program Files. Shouldn't they appear in somewhere like /ProgramData/PowerShell/Win32-OpenSSH/log/ ?\n. Well I would require log files in ProgramData only if the binary were in some installed location like \"Program Files\".\nIf the binary were in /ProgramData/chocolatey/lib/foobar/tools/bin, then I suppose global data could go in /ProgramData/chocolatey/lib/foobar/tools/var/ or somewhere.\nPersonally I hate chocolatey packages that install to Program Files, though I'm not sure how I feel about them saving global data to /ProgramData yet. The whole point of using chocolatey is to have a single entry in the $PATH containing all your binaries, and to have them all isolated in their own folders.\n. @DarwinJS He mentioned there was a security reason for this. I know that ProgramFiles has an ACL that denies write permission for non-administrator processes (i.e. it displays a UAC prompt). But can't this be accomplished with an ACL for chocolatey? I mean, chocolatey already requires administrator privileges by default.\n. My biggest reason for disliking program files is that it adds bloat to the $PATH. But just as annoying is the fact that it makes my chocolatey installation non-portable. I can no longer copy the /ProgramData/chocolatey folder to a new machine, possibly one without internet access, and have a chocolatey setup (rerunning some choco reconfigure command would be fine, but nothing that possibly requires the internet).\nNow, perhaps there's something to be said for copying a standalone, statically-linked sshd into System32, as part of post-install/configuration.\nBut you have to remember, Win32-OpenSSH was installed with chocolatey in the first place. That user assumedly had the permissions to write to ProgramFiles or wherever, so they assumedly have the permissions to put new, malicious things there.\n. Check your Program Files folder just in case. But I recall logging was disabled for some time at one point.. This happened to me too on the 2016-02-25 build, even though I had LogLevel commented out. I had to uncomment it and change it to quiet.\n. @DarwinJS Actually this doesn't happen with the chocolatey package. Just when I installed it from the command line.\nThe log produced by the chocolatey package, though it ended up in System32, is very small, though it was in System32 per #129. It was just the batch-file install (run as Administrator, so it probably had its cwd = System32) that created a 100GB log file.\n. @DarwinJS I didn't just retest. This is from a couple days ago.\n. In fact after this happens, powershell.exe no longer works. No output appears in the terminal, nor do any typed characters, until I type \"exit\" and press enter.\n. @manojampalam that's not entirely the issue I'm having here though.\nThe issue is that initially there is a terminal experience when one ssh's to a Windows machine, however annoying (e.g. no scrollback): it has ~~arrow keys and terminal history~~ backspace and coloring. But after rebooting with Windows SSHD server, the ~~terminal experience goes away~~ backspace key breaks entirely, and the terminal is not even VT100.\n. @manojampalam I'm really curious how it ended up working. It was a ~~fully functional~~ terminal, with colorized output, ~~arrow keys (both left/right and up/down), home/end,~~ backspace, and scrollback modification (though that was annoying). Is there a flag that enables this?\n. @manojampalam \nUpdate: this is a limitation issue. I was wrong, the arrow keys never worked. However, when I install SSHD from the 2016-02-25 release with LSA, the backspace key originally works for clients. But when I restart, it breaks forever. Also, if I install SSHD from the Chocolatey package (with -params '\"/SSHServerFeature /KeyBasedAuthenticationFeature\"'), the backspace key never works to begin with.\n. @manojampalam  This has regressed even further in 4_5_2016. In 3_19_2016, while the screen wasn't updated to reflect it, pressing the backspace key would remove characters from the buffer. In 4_5_2016, not even this happens anymore.\n. Related: #122\n. I notice the 2016_05_15 release provides (marginal) sshd terminal experience improvements when connected from a 2016_05_15 win32 ssh client.\nHowever, it's still bad from other ssh clients. In particular for the Arch & OSX ssh clients connected to the Win32 sshd, in addition to not removing characters from the buffer and not removing them from the screen, the backspace key now adds some nonprintable character to the buffer that tends to corrupt most commands.\nIs this still slated for improvement?\n. Hopefully this will make it into a June release.\n. This issue happens for ALL SSH clients connecting to Win32-OpenSSH's SSHD, and ALL Win32-OpenSSH SCP attempts. The user and windows version don't matter. SCP is just broken in Win32-OpenSSH.\n. I can confirm the same from OSX's terminal.\nThe arrow keys are disabled for some reason, but the loss of backspace is a regression. In 3_19_2016, while the screen wasn't updated to reflect it, pressing the backspace key would remove characters from the buffer. In 4_5_2016, not even this happens anymore.\n. Is is a possible dupe of #159.\n. @DarwinJS But Win32-OpenSSH literally requires a restart when installed with key-based authentication. It uses 100% CPU if you don't restart.\n. If it's still present in the next release, I'll rename this to \"sshd uses 100% CPU until restart when installed with key-based authentication from chocolatey package\". I can't test it now, because the chocolatey seems to hang forever at psexec when I try to update to \"2016.05.15\".\nIf the 100% cpu usage isn't an issue, shouldn't key-based authentication be installed by default without /KeyBasedAuthenticationFeature?\n. @DarwinJS On upgrade, the chocolatey package should check whether ssh-lsa.dll has been changed during the upgrade, and restart sshd immediately if the DLL is the same as before and doesn't need to be re-registered.\n. This also occurs when installing it without key-based authentication. sshd seems to be completely broken in this release.\n. Actually the ntrights powershell/.NET error stops you from installing at all when you're dealing with this. You have to restart the command prompt after trying to install the first time, so the path can be updated, then use the ntrights executable manually.\n. 2008 R2 Standard, 64-bit.\nWhy are weird Powershell/.NET commands even used when we package ntrights.exe?\n. Maybe ntrights should be preferred except on nano.\nIt's too bad ntrights can't be fixed to support nano.\n. Update: I also get this error on Windows 7 Home Premium 64-bit. ntrights is seeming more and more preferable...\n. Just tested 2016.04.15.201601116 on the same Win7 machine, seemed to work without issue.\n. @DarwinJS Is there a particular reason/known issue why the new package doesn't use the 5_30_2016 release?\n. Confirmed fixed in the 2016.05.30 version.\n. Just tested in 0.0.14, this is only partially fixed.\nThe initial paint is now better, but any changes to the screen quickly corrupt the screen and create missing lines.\nFor example, in vim, scrolling down or beginning to type causes almost every colored line to disappear or shift position, or move in the wrong direction. I end up with duplicate lines, wrongly placed lines, and 90% missing lines. And occasionally colored lines are missing to begin with.. My SSH client is macOS (& I've tried it with other unix SSH clients), so the problem is with the windows SSH server.\nThe vim display is rapidly corrupted when anything changes.. @bagajjal Please reopen this. I just tested with Win32-OpenSSH 7.7.2.1 and this issue still exists. I tested with and without TERM=xterm, and with multiple terminal emulators. Something is still broken in your code.. ",
    "fjaenal": "Related to #169 I am having the error on sshd \"ERROR. Cannot create process as new user (2)\"\nThis happens when trying to do as client:\nc:\\views\\opt\\OpenSSH-Win32>ssh.exe -p 22201 Administrator@10.73.28.168 uname -a\nkey_load_public: invalid format\nAdministrator@10.73.28.168's password:\npacket_write_wait: Connection to 10.73.28.168: Unknown error\nc:\\views\\opt\\OpenSSH-Win32>\nOn the server I get:\n19336 14:41:10 124 debug3: Home path before CreateProcessAsUser [C:\\Users\\Administrator\\Documents]\n19336 14:41:10 124 debug1: Executing command: uname -a\n19336 14:41:10 126 debug1: ERROR. Cannot create process as new user (2)\nThe Server is a windows 2008 r2 (64bits)\nThe Client is a windows 7 (64bits)\nFrancisco\n. I am having a similar problem using the jcraft.jsch java library. In my case the sshd (On a windows 2008 r2) shows the following error:\n7124 09:28:39 672 Connection from 10.73.24.24 port 63331 on 10.73.28.31 port 22200\n7124 09:28:39 672 debug1: Client protocol version 2.0; client software version JSCH-0.1.53\n7124 09:28:39 672 debug1: no match: JSCH-0.1.53\n7124 09:28:39 672 debug1: Enabling compatibility mode for protocol 2.0\n7124 09:28:39 672 debug1: Local version string SSH-2.0-OpenSSH_7.1p1 Microsoft_Win32_port_with_VS\n7124 09:28:39 672 debug1: list_hostkey_types: ssh-rsa,ecdsa-sha2-nistp256\n7124 09:28:39 672 debug1: SSH2_MSG_KEXINIT sent\n7124 09:28:39 726 debug1: SSH2_MSG_KEXINIT received\n7124 09:28:39 726 debug1: kex: algorithm: ecdh-sha2-nistp256\n7124 09:28:39 726 debug1: kex: host key algorithm: ssh-rsa\n7124 09:28:39 726 debug1: kex: client->server cipher: aes128-ctr MAC: hmac-sha1 compression: none\n7124 09:28:39 727 debug1: kex: server->client cipher: aes128-ctr MAC: hmac-sha1 compression: none\n7124 09:28:39 727 debug1: expecting SSH2_MSG_KEX_ECDH_INIT\n7124 09:28:39 746 fatal: ssh_dispatch_run_fatal: Connection to 10.73.24.24: invalid argument\n7124 09:28:39 746 debug1: do_cleanup\nThe java code it just do (com.jcraft.jsch.Session):\n`           Hashtable config = new Hashtable();\n            config.put(\"StrictHostKeyChecking\", \"no\");\n            config.put(\"cipher.s2c\", UnixRemoteExecutionManager.sshCiphers);\n            config.put(\"cipher.c2s\", UnixRemoteExecutionManager.sshCiphers);\nsession = jsch.getSession(user, getHost(), getPort());\n        session.setPassword(password);\n        session.setConfig(config);\n        session.setTimeout(remoteXManager.getConnectionProperties().connectionTimeoutSecs*1000); // SESSION_TIMEOUT\n        session.setUserInfo(new PasswordKeyboardInteractive(getHost(),\n                password));\nsession.connect();`\nThe UnixRemoteExecutionManager.sshCiphers list are:\n\"aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc,blowfish-cbc,aes128-ctr,aes192-ctr,aes256-ctr,3des-ctr,arcfour,arcfour128,arcfour256\"\nI have been trying to check how the connection is build but no luck yet. Also the connection works perfectly from a windows cmd.\nEnvironment:\n- Server side: Windows 2008 r2\n- Client side: Windows 7 64 bits\n- Powershell Windows SSH version: 4/5/2016\n. After doing what @manojampalam said about adding the reg and opening the port on the firewall (it was opened but did it again in case) I still get (server log):\n1652 08:29:09 070 debug1: -> LsaLogon()...\n1652 08:29:09 070 debug1: Checking args...\n1652 08:29:09 070 debug1: Setting up LSA Strings...\n1652 08:29:09 071 debug1: LsaRegisterLogonProcess()...\n1652 08:29:09 071 debug1: Retrieving Authentification Package ID...\n1652 08:29:09 071 debug1: SSH-LSA package not found. (err = 0, ntStat = c00000fe).\n1652 08:29:09 071 debug1: <- LsaLogon()...\nThe dll has been copied to %windir%\\System32 (I am using Windows Server 2008 r2)\n. i think I know what is happening, in the version that is the 4_5_2016.zip with the source code has only this includes (contrib/win32/win32compat/includes/sys/):\n$ ls -ltr contrib/win32/win32compat/includes/sys/\ntotal 5\n-rwxrwx---+ 1 Administrators Domain Users 126 Apr  5 22:12 un.h\n-rwxrwx---+ 1 Administrators Domain Users 435 Apr  5 22:12 uio.h\n-rwxrwx---+ 1 Administrators Domain Users 137 Apr  5 22:12 resource.h\n-rwxrwx---+ 1 Administrators Domain Users 257 Apr  5 22:12 param.h\n-rwxrwx---+ 1 Administrators Domain Users 131 Apr  5 22:12 ioctl.h\nHowever in the actual master it also has the socket.h include.\n. However still giving the _mingw_off_t.h:24:17: error: conflicting types for \u2018off_t\u2019. And also several warnings.\n. Some more tests I have done, Any file over 127kb will fail (the limit is between 69 KB and 127 KB. Is consistent the problem with winscp and JSCH Jcraft java libraries.\n. Is scp going to be back?\n. @manojampalam ok, I'll test it as soon as possible. \nThanks for the help !!!!\n. @manojampalam Tested with both (A JSCH java client and WinSCP). Now it works. Can be closed !!!!!\nAs a curiosity, Where was the error? Reading the remote file or in the transport layer?\nAgain thanks for taking the time to look to this !!!!!\n. I have found that the processes are created each time I open an sftp connection. However, I think it creates a parent process (sshd.exe) and an underlying process for the sftp-server. When a disconnected is invoke the process killed by SIGCHLD is the sftp-server and the sshd.exe parent process is not always killed:\nIn another test I have this in the log\n10536 12:20:57 972 debug1: Received SIGCHLD.\n10536 12:20:57 973 debug3: waitpid - pid:-1, options:1\n10536 12:20:57 973 debug1: Unregister child at index 0, 1 zombies of 1\n10536 12:20:57 973 debug1: session_by_pid: pid 11732\nBut in the list of open sshd.exe none has that pid, that is why I think the sshd.exe is the parent process.\n@manojampalam More Info.\nEach time an sshd.exe  process is created it tried to save the id in the pid file, but because its in use it fails. This may also affect when trying to kill it:\n9284 10:59:59 829 Accepted password for Administrator from 10.73.78.42 port 53319 ssh2\n3692 11:00:21 028 error: Couldn't create pid file \"c:\\Windows\\Temp\\sshd.pid\": Permission denied\n. Just wanted to comment that even after disconnected and disconnection signal is sent (SIGCHLD) the worker process remains, not always, for quite a lot of time (can be hours). Maybe is it a Windows process   management issue.\nAgain thanks for the answer !!!!!\n. Problem it was I was missing the shell-host executable in the directory. Thanks for the tips and the fast answer.\nKeep the Great Job !\n. I have a similar problem with jsch api, have over come it by using an old ssh-shellhost.exe, my question is: What terminal type is the ssh-shellhost using?. So, the OpenSSH v0.0.9.0 already has the merge, therefor is safe in regards to those Security Issues, right?. Please find attach the agent-ssh log and anew sshd.log (I have test without key auth, I only need password auth):\nssh-agent.log.txt\nsshd.log.txt\nAlso the ssh-agent runs as a local system account (the sshd runs under NT SERVICE) and sshd has a dependency on ssh-agent.\nAlso due to some restrictions I have a Console installer (Can't use PS due to security policies), to create the services I run the following commands:\nsc.exe create %NAME_AGENT% binpath= %INSTALLDIR%\\ssh-agent.exe DisplayName= \"SSH Agent Deamon\" start= auto\nsc.exe create %NAME% binpath= %INSTALLDIR%\\sshd.exe DisplayName= \"SSH Deamon\" start= auto depend= %NAME_AGENT%\nsc.exe sdset %NAME_AGENT% \"D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)(A;;RP;;;AU)\"\nsc.exe config %NAME% obj= \"NT SERVICE\\sshd\"\nntrights.exe -u \"NT SERVICE\\sshd\" +r SeAssignPrimaryTokenPrivilege\nAgain, thanks for the help !!!\nFrancisco\n. Some more information:\nTesting different versions, all 32 bits for the moment\nClient and server configuration / installer remains the same for all tests\nThe account used is the Administrator and its a Local account.\nVersion 0.0.1.0 --> Works\nVersion 0.0.2.0 to 0.9.0.0 does not work, same error / logs as above.\nTest with 64 bits same results\nAlso the server OS is Windows server 2008 R2. @DarwinJS  - I think I may explain myself wrong, I am not using Chocolate package, and the subsequent ps1 script to install, that's because I can't have powershell running on the server. So I have created my own installer using the CMD console. The lines I refer above are the one I use to create, configure and run the sshd and ssh-agent.\nTo make the installer I have follow the https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH instructions.\nAlso I am not using PK auth, its just password auth all the time, so I am not using the ssh-lsa.dll auth method.\nHope i am explaining myself properly or am I missing something basic?\nsshinstaller.bat.txt\nThanks a lot for the help !!!!!!\nFrancisco\n. Solved the issue, it was the installer I was using, thanks for the help, this can now be closed.\nFrancisco. Then the next question, maybe is too basic, is: Are mandatory the set of all those permission settings on the server? Can it be installed and run as an administrator on the server without giving those permissions?. First of all thanks a lot for the help. \nDo we only need PS / Chocolatey for the installation (can be disable afterwards?) or must it be enable at any time?\nAlso the installation requires restart? I can't see any reference on the \"Install Win32 OpenSSH\" wiki page to restart.. thanks a lot !!!!! Really helpful as always !. ",
    "rivy": "@manojampalam , Please re-open this... the issue is not fixed (tested in most recent version \"v0.0.17.0\").. Win10+ with most recent non-Insider update, from CMD.\nThe screen is cleared on connect every time.\nThe scrollback buffer isn't erased anymore, but the screen is cleared, with output starting at the top left.\nFor Win10+, ssh user@IP -T does prevent screen clearing, but hangs at that point, requiring a CTRL-C.. Yes, the scrollback buffer is still available, but you scrolled the entire screen out of visual range. You have to scroll back into the history to see recent commands. It's annoying and not the usual operation for the ssh client.\nssh user@IP -C \"ls -al\" just adds to the current screen, scrolling as necessary. \nSo, why are you shifting everything out of view for an interactive login?\nIf I want things cleared, I'll clear on the host.. I understand what you are saying, but I believe you are speaking about an OpenSSH-Win32 client connecting to your OpenSSH-Win32 server implementation. And, if the limitations of your server daemon really necessitate that behavior then I guess that is that... odd, a bit surprising/annoying, and likely a problem for linux clients connecting, but fine.\nBut that's not the issue in this case. I'm using the OpenSSH-Win32 client to connect to a linux sshd, and I have never had any connection clear (or, ok, scroll everything off) the screen. It's not your server implementation, and I don't believe that it sends any \"clearscreen\". And, why are ssh commands (eg, ssh user@IP -C \"ls -al\") able to simply scroll the information onto the screen (similar to usual ssh implementations)?\nAnd, at least when connecting to a linux openssh sshd (specifically, on Win10+ to \"Ubuntu 16.04\"), the program hangs when the \"-T\" option is used... initial output is displayed, then no prompt is visible and no local typing is echoed, plus no response to commands (eg, exit does nothing).\nP.S. * I must commend you on your almost immediate response and continued conversation about this issue. Thanks much for the attention. And, I don't mean to be a pedantic pest, but, IMO, small annoyances like this will make or break the acceptance of this project. This, plus arrow/page key bugs, and minor textual artifacts on the command line and in vim, are keeping me away and anchored to the standard portable OpenSSH implementation. I don't think I'm the only one.. Sorry, but the message about the downlevel OS ansi parser limitations wasn't visible within the github thread, only seen later via email... responding here...\nSo, I understand that downlevel OS's might have some limitations and quirkiness. But, I'm using Win10 with the full conhost.exe implementation. Why have the quirk here?\nAnd, I'm connecting to a linux sshd, so, I believe the client is scrolling the screen without any direction from the host in this case.\nAs I said on github, I do think that small, odd quirks like this will push people away to other implementations. That said, I do have a healthy respect for the ambition and tenacity you and your team have shown in tackling this public project. And, I'm rooting for you guys.\nOn Mon, Jul 10, 2017 at 6:35 PM, bagajjal notifications@github.com wrote:\n\nIts required to support the ssh clients running on the downlevel OS..\nWindows 10 provides the support of conhost.exe which provides the ability\nto parse the VT Control sequences but the downlevel OS doesn't have this\nfacility. so for the downlevel OS, we have our own ansi parser with limited\nfunctionality. Right now we are not investing on our ansi parser.\nOur own ansi parser requires the clearscreen for the first time from the\nSSH server. This can be fixed in a hacky way but so far no one has raised\nthis as concern.\nIf you really want to fix this then we can rethink about this. Please let\nus know.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/108#issuecomment-314279383,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAE5BE5oi8XrTBgjpZzZujrqRZcVh3pRks5sMrVQgaJpZM4HZO4_\n. @bagajjal\nThanks for your efforts. I'll take a look at the release this weekend. . Yes, thanks.\n\nThe clear screen issue noted here is now fixed, as are the arrow keys and ssh user@IP -T.\nPage-UP and Page-DOWN still send only the null character, so I'll open a new issue for that problem (see #842).. ",
    "jkodroff": "@manojampalam Can you say when we can expect to see this in the Chocolatey package?  My Chocolatey shows win32-openssh 2016.05.30, but this bug is still being exhibited and I don't see ssh-agent as a service anywhere.\n. Also, a message indicating which argument is missing or invalid would be helpful (but I understand if that's not possible b/c of compatibility with the *nix version of OpenSSH).\n. I don't understand why sshd would need to be installed as a service if I'm only making outgoing connections.\nAlso, assuming that there's no need for command line output compatibility, it would be helpful to have a hint for this in the ssh-agent output.. This is also broken for me on Windows 10 Enterprise version 1607 build 14393.576, which apparently includes the Anniversary Update.  echo $TERM returns dumb when connecting to a CentOS host from both cmd and PowerShell.  Bummer.. ",
    "jemiller0": "I just downloaded OpenSSH-Win64.zip yesterday and there's no scp.exe in it. Any ideas why?\n. Arrow keys in vi don't appear to work either, or in less. It doesn't appear to really be usable at all. I'm using the latest zip file for Win64 that I downloaded yesterday. OpenSSH_7.1p1 Microsoft_Win32_port_with_VS May 30 2016, OpenSSL 1.0.2d 9 Jul 2015\nDefinitely not ready for prime time. I don't know how much of this is with SSH or with the console window. I'm running Windows 10 and was connecting to an Ubuntu server.\n. On the plus side, maybe they will one day get it working. It's only about 25 or so years overdue. The Command Prompt shell window has needed an overhaul since forever. How Microsoft could have ignored this for so long is beyond me. I hope that it's improved further over the improvements they put into it in Windows 10.\n. I think the latest version of Windows 10 fixes a lot of these kinds of issues. I've been using it with the SSH client that comes with Git and haven't noticed any problems. Before, you couldn't even run something like vi.. This works for me for ssh.exe. However, it doesn't work for scp. I think there's a bug because I have it working fine from another Linux box and like I said, it works fine for ssh.exe.\n. Never mind, I just realized that there is no scp included with this distribution. I was picking up scp.exe from an installation of Git that I have. Seems odd that this distribution doesn't include scp.\n. I'm seeing the following when attempting to login to a computer that is in a domain (at work) from a computer that is not in the domain (at home). I'm able to login fine from another computer that is in the domain at work.\n34600 2019-03-07 16:32:39.788 Connection from 1.1.1.1 port 49800 on 1.1.1.1 port 22\n34600 2019-03-07 16:32:40.111 Accepted key RSA SHA256:... found at C:\\Users\\myuser\\.ssh/authorized_keys:1\n34600 2019-03-07 16:32:40.111 Postponed publickey for myuser from 1.1.1.1 port 49800 ssh2 [preauth]\n34600 2019-03-07 16:32:40.174 Accepted key RSA SHA256:... found at C:\\Users\\myuser\\.ssh/authorized_keys:1\n34600 2019-03-07 16:32:40.174 Accepted publickey for myuser from 1.1.1.1 port 49800 ssh2: RSA SHA256:...\n34600 2019-03-07 16:32:40.274 error: get_user_token - unable to generate token on 2nd attempt for user mydomain\\myuser\n34600 2019-03-07 16:32:40.274 error: unable to get security token for user mydomain\\myuser\n34600 2019-03-07 16:32:40.274 fatal: fork of unprivileged child failed\nAny ideas?\n. Apparently, it has something to do with the fact that I was using public key authentication. I moved my authorized_keys file out of the way and it works using password authentication.. Why is it looking under C:\\ProgramData???? I am trying to login to my account, not administrator. My account is in the Administrator group. However, this is not how SSH works on Linux. It should be looking in my home directory in the .ssh directory. You would think this would be something that would be the first thing to get working by Microsoft. It's only one of the first things people want to do when setting up SSH.. ",
    "richmondwang": "@jemiller0 see my comment maybe it will help \n. I also had this issue, I checked the configuration and in the Subsystem scp directive, the scp.exe is missing. Is it bundled with the release?\n\nI just downloaded and copied the binary from this release.\n. ",
    "JayPearlman": "From https://github.com/PowerShell/Win32-OpenSSH/releases/tag/3_19_2016\n\"SCP is taken offline as it needs significant changes to get it on board the new transpor and I'm still working on it.\"\n. ",
    "darkblaze69": "since scp is now generally working with v0.0.1.0, it is still not accepting port parameter - tries to connect via default 22 :\nC:\\Users\\user>scp -v -P 57002 -S ssh .ssh\\id_rsa.pub root@machine1:\nExecuting: host machine1, user root, command scp -v -t .\nOpenSSH_7.1p1 Microsoft_Win32_port_with_VS, OpenSSL 1.0.2d 9 Jul 2015\ndebug1: Connecting to machine1 [192.168.1.253] port 22.\ndebug1: socket:440, io:00000000004D6A60, fd:3\n. seems to be a bug in JuiceSSH realization. Other clients work good.\nlog while connecting via JuiceSSH:\n2160 21:55:45 161 Accepted password for admin from 192.168.1.xx port 38197 ssh2\n2160 21:55:45 176 fatal: ssh_dispatch_run_fatal: Connection to 192.168.1.xx: incomplete message\n. @PaulMaddox, I'm not a developer, but would test it from the user side\n. Hey guys, have you read release notes on the last version from March 19th? It clearly states : \"SCP is taken offline as it needs significant changes to get it on board the new transpor and I'm still working on it.\"\nhttps://github.com/PowerShell/Win32-OpenSSH/releases/tag/3_19_2016\n. This is also my problem with up to 0.10 version - full 1 core load. Not sure about log file. I even don't see it. But private fix solved my problem. And now I can see log file.. ",
    "marchrock": "Thank you!\nIn the latest build, -P option worked fine for me too.\nFor me, it's ok to close this issue.. ",
    "jdub": "The current release of Win32-OpenSSH + Nano Server Tech Preview 5 work together very well.\n```\n$ uname -a\nDarwin slender.local 15.4.0 Darwin Kernel Version 15.4.0: Fri Feb 26 22:08:05 PST 2016; root:xnu-3248.40.184~3/RELEASE_X86_64 x86_64\n$ ssh gunpowder\nMicrosoft Windows [Version 10.0.14300]\n(c) 2016 Microsoft Corporation. All rights reserved.\njdub@GUNPOWDER C:\\windows>\n```\n. The current release of Win32-OpenSSH + Nano Server Tech Preview 5 work together very well.\n```\n$ uname -a\nDarwin slender.local 15.4.0 Darwin Kernel Version 15.4.0: Fri Feb 26 22:08:05 PST 2016; root:xnu-3248.40.184~3/RELEASE_X86_64 x86_64\n$ ssh gunpowder\nMicrosoft Windows [Version 10.0.14300]\n(c) 2016 Microsoft Corporation. All rights reserved.\njdub@GUNPOWDER C:\\windows>\n```\n. Looks like this has regressed as of the May 15 release, at least for installation and configuration:\nntrights.exe doesn't work on Nano Server, so the required privileges can't be given to to NT SERVICE\\SSHD in the install script. There doesn't appear to be a native way to modify those privileges by PowerShell / command line, but cmdlets in the third-party PSCX module may work.\nPlus, psexec.exe doesn't work on Nano Server, so we can't register the host keys as SYSTEM using that method.\n. The April 5 release installed and ran well on Nano Server TP 5.\n. The note wasn't quite clear enough (at least to me): \"The server side changes do not work\" suggests improvements or updates in this version do not work, rather than sshd not providing a working ssh service. \ud83d\ude04\n. ",
    "alexpilotti": "Closing this issue as it's fixed in TP5. Excellent stuff! :)\n. ",
    "goodwinb99": "I have the same issue.\nWin10.0.10586 x64 client\nOpenSSH_7.1p1 Microsoft_Win32_port_with_VS Feb 25 2016, OpenSSL 1.0.2d 9 Jul 2015\nCentOS 7.2 and RHEL 6.6 targets\n. ",
    "Cinntax": "I don't know if this is the same issue or not, but i've also notice that if you try to pass in a long command line in non-interactive mode, it also gets chopped off... around 80 chars or so...\nSo on the Linux side, a command like: ssh user@host powershell.exe -command \"script.ps1 -arg1 \\\"a really long arg...\\\"\" will get copped off on the windows side of things, and \"arg1\" will be incomplete.\n. ",
    "damieng": "Also getting this and it's a complete show-stopper.  Windows 10, latest released ssh binary. Both 32-bit and 64-bit download packages.  Variable number of characters depending on input.\n. ",
    "woodbrettm": "Same here. Was anyone able to find a solution?\n. ",
    "PigBoT": "Not that I'm aware of, I had to go back to putty.  :/\n. ",
    "JSkier21": "Also confirming htop looks wonky as well, regardless of server, when using ssh client via PowerShell or command prompt. \n. ",
    "jwhipp": "Another confirm on htop being wonky.   I've also had the same issue with nmon.\n. This issue was really dealing with htop being odd in Window's standard command prompt terminal or the powershell terminal.  These issues have been worked out.. Never-mind I figured it out, my ssh key wasn't in there. haha\n. ",
    "strahinjanis": "+1\n. unfortunately I can not confirm that from the ansi, I know that you will say how vt100 is supported only, and yes, looks more or less ok with htop in that case, but vi editor would be useless with vt100. Anyhow the cursors work finally!\n. It's not only about the cursors keys, even ESC doesn't work, this makes a native shells (powershell/cmd) pretty useless even SSHd is runnin.\n. ",
    "SoulChild112": "The problem for me was solved after putting the emulation settings of my ssh client(secureCRT) to \"linux\" instead of \"ANSI\". I'm sure Putty has similar settings that can be tweaked.\nThis only happens in windows afaik, linux hosts by themselves didn't have this issue with remote htop sessions.\nThe problem isn't with htop, it's with your SSH client.\n\nvs\n\n. Yeah, but when I searched for this issue, this topic kept coming back. If it did for me, so did it for others :). ",
    "discodance1": "powershell via openssh does not support popups / interactive session \nWhen connecting to a constrained end point via -credential, powershell over openssh hangs and event log shows this error:\nApplication popup: powershell.exe - System Warning : Unknown Hard Error\n. I am seeing the same issue interactive session with powershell, when ssh'ing from my linux server to a windows server.\nI try to connect to a powershell constrained end point from linux:\n\"Enter-pssession -ConfigurationName  \"\nnext instead of asking for computername as in normal powershell console. openssh+ powerhsell just hangs and i can't even exit out of that console. \n. Is there an update on this ?I have tried with the latest version of win32-openssh 64 bit on my windows server 2012 R2 standard. \nWhen i am able to ssh from my linux server to windows server but when i run \n\npowershell -File -\n\nI get an error saying\" The shell cannot be started. A failure occured during initialization: The path is not of a legal form.\"\n. powershell via openssh does not support popups / interactive session \nWhen connecting to a constrained end point via -credential, powershell over openssh hangs and event log shows this error:\nApplication popup: powershell.exe - System Warning : Unknown Hard Error\n. What is the work around for this? I have set the TMP,TEMP,LOCALAPPDATA env variables but launching powershell.exe via cmd on openssh still gives me \"illegal characters in path error\". \n. I have done a manual install of latest release on sep 17 and i am getting similar issue during public key auth. \nHow do i check if ssh-add has added keys properly for public auth to work ?\nIn the ssh-agent log i see error:\ndebug1: connection io 000000B1C61EEEF0 #bytes:0 state:0\ndebug1: connection io 000000B1C61EEEF0 #bytes:4 state:1\ndebug1: connection io 000000B1C61EEEF0 #bytes:978 state:2\ndebug1: client type: 1\ndebug1: LsaRegisterLogonProcess failed\ndebug1: unable to generate token for user\ndebug1: connection 000000B1C61EEEF0 clean up\ndebug1: iocp error: 6 on 0000000000000000 \ndebug1: iocp error: 109 on 0000000E19FDEEF0\n. I have verified on my server that i am ssh'ing into 'NT Service\\sshd' account is added to local security policy to replace primary servcie tokens but i still get the error.\ndebug1: LsaRegisterLogonProcess failed\ndebug1: unable to generate token for use\n. I have installed the latest build (openssh -64 bits)  on win2012 R2.\nI have verified on my server that i am ssh'ing into 'NT Service\\sshd'\naccount is added to local security policy to replace primary servcie tokens\nbut i still get the error.\ndebug1: LsaRegisterLogonProcess failed\ndebug1: unable to generate token for use\nI try to ssh from my linux server to windows 2012 R2 server: using command\nssh -i  user@host_fqdn\nAm i missing something, obvious?\nOn Mon, Oct 3, 2016 at 3:54 AM Darwin notifications@github.com wrote:\n\n@rbertoche https://github.com/rbertoche - you seem to be using the old\npackage id. Please use the id \"openssh\" like this:\nchoco install openssh -confirm -params '\"/SSHServerFeature\"'\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/253#issuecomment-251078633,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ATl5hRL1UFWBEARzjEfDwB8-qBv8cc4Sks5qwN7ngaJpZM4JAGYh\n.\n. This is the sshd.log\n\ndebug2: input_userauth_request: try method publickey\ndebug3: w32_write fd:4\ndebug2: write - io:00000065D2BEDA60\ndebug3: wait() on 0 events and 0 childres\ndebug2: WriteCB - pio:00000065D2BEDA60, pending_state:1, error:0, transferred:4 of remaining: 4\ndebug2: write - reporting 4 bytes written, io:00000065D2BEDA60\ndebug3: w32_write fd:4\ndebug2: write - io:00000065D2BEDA60\ndebug3: wait() on 0 events and 0 childres\ndebug2: WriteCB - pio:00000065D2BEDA60, pending_state:1, error:0, transferred:978 of remaining: 978\ndebug2: write - reporting 978 bytes written, io:00000065D2BEDA60\ndebug3: w32_read fd:4\ndebug3: read - io:00000065D2BEDA60 remaining:0\ndebug2: ReadFileEx io:00000065D2BEDA60\ndebug3: wait() on 0 events and 0 childres\ndebug2: ReadCB pio:00000065D2BEDA60, pending_state:1, error:109, received:0\ndebug2: read - (2) no more data, io:00000065D2BEDA60\ndebug1: auth agent did not authorize client \ndebug3: w32_close fd:4\ndebug1: close - io:00000065D2BEDA60, type:2, fd:4, table_index:4\ndebug2: fileclose - pio:00000065D2BEDA60\ndebug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\nFailed publickey for  from 2620:0:10c1:1056:: port 39101 ssh2: RSA SHA256:lXw1wLkgAWuJGECJpaqN8He/iABPz\naUJttgzXaY\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\ndebug3: w32_write fd:5\ndebug2: send - io:00000065D2BF5D00\ndebug2: send - WSASend() returned 0, APC scheduled io:00000065D2BF5D00\ndebug2: WSASendCB - io:00000065D2BF5D00, pending_state:1, error:0, sent:76 of remaining:76\ndebug3: w32_select fd:5\ndebug3: Total in fds:1        \n. This is mostly with openssh 64 bit version. I was able to get into powershell console via openssh 32 bit but have other problems with it as interactive session with power shell hangs via openssh. \n. I have installed the latest available version on win32-openssh 64 bit version. \n. > $PSVersionTable.PSVersion\nMajor  Minor  Build  Revision\n\n5      0      10586  117\n. with WMF5.1, i am now able to launch powershell console. \nThanks for the quick response.\n. I am seeing this in the event log:\nApplication: powershell.exe\nFramework Version: v4.0.30319\nDescription: The application requested process termination through System.Environment.FailFast(string message).\nMessage: Illegal characters in path.\nStack:\n   at System.Environment.FailFast(System.String)\n   at System.Management.Automation.WindowsErrorReporting.FailFast(System.Exception)\n   at Microsoft.PowerShell.UnmanagedPSEntry.Start(System.String, System.String[])\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean)\n   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(System.Object, System.Object[], System.Object[])\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\n. Any help on this is highly appreciated. \n. does only win32-openssh 32 bit work on win2008 R2 sp1 ? (along with .net 4.6 and wmf 5.1). Even with these installations. powershell console sometimes launches with powershell, sometimes with powershell.exe/ powershell.exe -File -. \nI don`t see a consistent behavior.\nCan you let me know the installation steps for 2008 R2 sp1, which version of win32-openssh works and the dependencies ?\n. I have already installed WMF 5.1. Launching powershell is not consistent (with powershell.exe -File -) with win32 openssh 32 bit. From time to time i get error:\n\" The given path's format is not supported.\"\n. I have also verified that the nt service sshd user has \"Replace primary token rights\" on the local machine.\nntrights.exe -u \"NT SERVICE\\SSHD\" +r SeAssignPrimaryTokenPrivilege.\n. This is the sshd log\nThis is the sshd.log\ndebug2: input_userauth_request: try method publickey\ndebug3: w32_write fd:4\ndebug2: write - io:00000065D2BEDA60\ndebug3: wait() on 0 events and 0 childres\ndebug2: WriteCB - pio:00000065D2BEDA60, pending_state:1, error:0, transferred:4 of remaining: 4\ndebug2: write - reporting 4 bytes written, io:00000065D2BEDA60\ndebug3: w32_write fd:4\ndebug2: write - io:00000065D2BEDA60\ndebug3: wait() on 0 events and 0 childres\ndebug2: WriteCB - pio:00000065D2BEDA60, pending_state:1, error:0, transferred:978 of remaining: 978\ndebug2: write - reporting 978 bytes written, io:00000065D2BEDA60\ndebug3: w32_read fd:4\ndebug3: read - io:00000065D2BEDA60 remaining:0\ndebug2: ReadFileEx io:00000065D2BEDA60\ndebug3: wait() on 0 events and 0 childres\ndebug2: ReadCB pio:00000065D2BEDA60, pending_state:1, error:109, received:0\ndebug2: read - (2) no more data, io:00000065D2BEDA60\ndebug1: auth agent did not authorize client \ndebug3: w32_close fd:4\ndebug1: close - io:00000065D2BEDA60, type:2, fd:4, table_index:4\ndebug2: fileclose - pio:00000065D2BEDA60\ndebug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\nFailed publickey for  from 2620:0:10c1:1056:: port 39101 ssh2: RSA SHA256:lXw1wLkgAWuJGECJpaqN8He/iABPz\naUJttgzXaY\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\ndebug3: w32_write fd:5\ndebug2: send - io:00000065D2BF5D00\ndebug2: send - WSASend() returned 0, APC scheduled io:00000065D2BF5D00\ndebug2: WSASendCB - io:00000065D2BF5D00, pending_state:1, error:0, sent:76 of remaining:76\ndebug3: w32_select fd:5\ndebug3: Total in fds:1        \n. This a domain account.\n. On the latest versions i haven't seen this issue. closing it. \n. SSHD log:\nw32_read fd:4\n2556 23:18:51 545 debug3: read - io:0064A368 remaining:0\n2556 23:18:51 545 debug2: ReadFileEx io:0064A368\n2556 23:18:51 561 debug3: wait() on 0 events and 0 childres\n2556 23:18:51 607 debug2: ReadCB pio:0064A368, pending_state:1, error:109, received:0\n2556 23:18:51 607 debug2: read - (2) no more data, io:0064A368\n2556 23:18:51 607 debug1: auth agent did not authorize client USER@DOMAIN\n2556 23:18:51 607 debug3: w32_close fd:4\n2556 23:18:51 607 debug1: close - io:0064A368, type:2, fd:4, table_index:4\n2556 23:18:51 607 debug2: fileclose - pio:0064A368\n2556 23:18:51 607 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\n2556 23:18:51 607 Failed publickey for USER@DOMAIN from 2620:0:10c1:1056:: port 49775 ssh2: RSA SHA256:lXw1wLkgAWuJ8unSaHe/iABPzaUJttgzXaY\n2556 23:18:51 607 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n2556 23:18:51 607 debug3: w32_write fd:3\n. I am sshing from a linux server to this windows server using:\nssh -i  -l user@domain host\n. Any pointers to check are really appreciated. \n. Looks like we need the user profile created before the user tries to ssh in. I was able to resolve the issue after the user profile was created on the windows server i was trying to ssh in. \n. I can launch powershell. The problem i am facing is as a non admin user i cam not able to execute powershell scripts\nPS C:> .\\test.ps1\n.\\test.ps1 : AuthorizationManager check failed.\nAt line:1 char:1\n+ .\\test.ps1\n+ ~~~~~~~~~~\n    + CategoryInfo          : SecurityError: (:) [], PSSecurityException\n    + FullyQualifiedErrorId : UnauthorizedAccess\n. This is only happening when i am connected to the windows server where i want to run the powershell script via openssh.\nWhen i login to the server as the non admin user i am able to execute the same powershell script without any issue.. This is only happening when i am connected to the windows server where i want to run the powershell script via openssh.\nWhen i login to the server as the non admin user i am able to execute the same powershell script without any issue. . Any help or pointers ?. doing more tshooting with procmon:\nI see that when running powershell script as non admin user i get ACCESS DENIED on this registry key:\nhklm\\software\\microsoft\\WBEM\\CIMOM. Any help looks like it is trying to run this command as non admin:\nC:\\Program Files\\OpenSSH\\ssh-shellhost.exe -nopty powershell.exe -File C:\\test.ps1. Does ssh-shellhost.exe only works as admin user?\n. also when i try to run the above command manually in cmd i don't see any output in cmd. . I am still seeing the issue, even though i have provided this non admin acl access to this registry. Looks like hklm\\software\\microsoft\\wbem\\cimom is related to logging. I have provided acl access for the non admin to this resource and i no longer get ACCESS DENIED in the proc mon logs but running powershell scripts is still blocked over ssh as a non admin.\n\nI have verified that this non admin account has file level acls on that file.\nnon admin is able to execute the powershell script when logged in on that server.\nwhen the non admin is added to the administrators group, over ssh it is able to execute powershell scripts.\nPowershell execution policy is set to remote signed for the local machine.\n\nIs there anything else you think i should check?\n. @manojampalam issue is that a non admin account is not able to execute any powershell script when connected via win32-openssh.. @PaulHigin I am sshing from linux server to windows server. Below is the exception i get:\nPS C:> .\\test.ps1\n.\\test.ps1 : AuthorizationManager check failed.\nAt line:1 char:1\n.\\test.ps1\n  + CategoryInfo          : SecurityError: (:) [], PSSecurityException\n  + FullyQualifiedErrorId : UnauthorizedAccess\ntest.ps1 only has one command in it - Get-Command. I can verify that this non admin has access to run this command as this command executes successfully when i run \"powershell.exe -Command Get-Command' as the same non admin. Non admin account has acl access to the file 'test.ps1'. How can i tshoot this more ?. Thanks this is what i get:\nPS C:> $err\n.\\test.ps1 : AuthorizationManager check failed.\nAt line:1 char:1\n+ .\\test.ps1\n+ ~~~~~~~~~~\n    + CategoryInfo          : SecurityError: (:) [], PSSecurityException\n    + FullyQualifiedErrorId : UnauthorizedAccess\nPS C:> $err.Exception\nAuthorizationManager check failed.\nPS C:> $err.Exception.GetType()\nIsPublic IsSerial Name                                     BaseType                                                                                \n-------- -------- ----                                     --------                                                                                \nTrue     True     PSSecurityException                      System.Management.Automation.RuntimeException                                             \nPS C:> $err.Exception.InnerException\nAccess denied \n. I have placed the file under the non-admin's user profile C:\\Users\\\\Documents\\test.ps1. Also under properties-->security i have made sure the non admin user has full control over test.ps1\nPS C:\\Users\\<user>\\Documents> & \"C:\\Users\\<user>\\Documents\\test.ps1\"   \n& : AuthorizationManager check failed.\nAt line:1 char:3\n+ & \"C:\\Users\\<user>\\Documents\\test.ps1\"\n+   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : SecurityError: (:) [], PSSecurityException\n    + FullyQualifiedErrorId : UnauthorizedAccess. This file was created locally on the server. . k, i have hit a dead end with this issue with no leads on how to go forward. I have also created a case with microsoft to see if my server has special settings which is preventing execution of powershell script as a non admin but they came back saying they wont support this issue since this is win32-openssh specific. . This is with the latest version of openssh v0.0.9.0. Submitted a commit: \nhttps://github.com/discodance1/Win32-OpenSSH/commit/6cb1805afa4a450b0022601c45d6feac88aecd8a. I do see your point.\nWhen i run sshd.exe -ddd in command prompt with AuthorizedPrincipalsCommand i Get\nAuthorizedPrincipalCommand C:/ProgramData/binary.exe %u\nI see error \"AuthorizedPrincipalsCommand must be an absolute path\"\nWhich speaks to me that AuthorizedPrincipalsCommand is supported.\nBut when i check ssh-agent logs during the normal run it says AuthorizedPrincipalsCommand and AuthorizedKeysCommand are not supported in Windows yet\nDo you know by when this option will be supported ?. Can you point me to the code fix you have done? With the recent win32-openssh release i did not find it working.\nI have tried submitting the same fix to openssh-portable but the reply i got was that they donot support windows paths and the only path format they support was cygwin paths. https://github.com/openssh/openssh-portable/pull/62#issuecomment-283225426. Looking at powershell/openssh-portable \nsAuthorizedPrincipalCommand still checks for paths which start with '/' we cannot use windows paths like C:/ProgramData/binary.exe %u\n(cp[len] != '/' && strcasecmp(cp + len, \"none\") != 0) this should be \nif (cp[len] != '/' && strcasecmp(cp + len, \"none\") != 0 && !(isalpha(cp[len]) && cp[len + 1] == ':' && cp[len+2] == '\\'))\n. The reason why i am asking about the exact timeline is because we cannot deploy beta version software to our prod machines.\nSo another month or 2 before win32-openssh becomes Generally available ?\n. ",
    "keithzg": "\nAlso, do you get the same behaviour on Linux if you drop back to a command\nline and use SSH that way? (ctrl-alt-f1, ctrl-alt-f7 to get back)\n\nYou mean a VT session? Yeah, I popped over to one and tested, exact same behaviour; backspace doesn't visibly (but does actually) work, arrow keys don't navigate at all, and tab autocompletion is MIA.\n\nJust a thought - you may be able to disable encryption completely via sshd\nand have a look at what is sent across the wire in regards to backspace /\nDEL.\n\nOh, well I mean I know that already, due to fiddling with settings in Yakuake/Konsole. By default it sends \\x7f which, as aforementioned, does in fact delete input (considering that upon submit it acts accordingly), and if I change my terminal emulator settings to send \\x08 (or \\b in other words) it then works both practically and visibly.\nThis isn't a huge deal since I can switch profiles on a whim in my preferred terminal emulator and have the keyboard settings tied to such profiles, but it's a surprise and a stumbling block that should probably at least be documented, if not automatically worked around or fixed.\nThe lack of arrow keys for history and moving around command lines is a bigger problem, and tab autocompletion is also hard (but less difficult comparatively) to live without.\n. Hi @PaulMaddox, unfortunately that beta apk doesn't seem to have fixed things for me:\n```\nJuiceSSH Version: 2.1.2 (115)\nDevice Manufacturer: google\nDevice Model: Pixel C\nDevice Board: dragon\nDevice Bootloader: Google_Smaug.7132.285.0\nAndroid Version: N N (sdk:23)\nCPU ABI: armeabi-v7a\nCPU ABI2: armeabi\n... \n3/22/16 20:55 (info): INFO: Next authentication method: password\n3/22/16 20:55 (info): INFO: Authentication succeeded (password).\n3/22/16 20:55 (debug): Connecting SSH Shell\n3/22/16 20:55 (info): WARN: Ignoring unknown SSH message type 86\n3/22/16 20:55 (info): INFO: Caught an exception, leaving main loop due to Connection reset\n3/22/16 20:55 (info): INFO: Disconnecting from mercury port 22\n3/22/16 20:55 (debug): Transport chain 2000 is now unattached\n```\nThat being said, it now always drops due to \"Connection reset\" rather than disconnecting directly because of the unknown message type, so presumably it's handling things better in a general sense regardless of that not actually fixing this problem?\n@manojampalam: only after upgrading to the March 19th release did I notice https://github.com/PowerShell/Win32-OpenSSH/commit/f43f33da8bb93a5c0804e6e2a71fe2f80aed4bc8 and realize I was looking in the \"wrong\" place before for the log file, oops. Looking at it now, I see the following for the failed JuiceSSH connections:\n4684 21:51:28 171 Accepted password for Autobuilds from 10.1.186.204 port 38179 ssh2\n4684 21:51:28 186 fatal: ssh_dispatch_run_fatal: Connection to 10.1.186.204: incomplete message\nI tried setting LogLevel VERBOSE in sshd_config, but I don't get anything useful further:\n5980 21:55:10 308 Connection from 10.1.186.204 port 38183 on 10.1.187.213 port 22\n5980 21:55:10 667 Failed none for Autobuilds from 10.1.186.204 port 38183 ssh2\n5980 21:55:10 683 Failed keyboard-interactive for Autobuilds from 10.1.186.204 port 38183 ssh2\n5980 21:55:10 683 Accepted password for Autobuilds from 10.1.186.204 port 38183 ssh2\n5980 21:55:10 699 fatal: ssh_dispatch_run_fatal: Connection to 10.1.186.204: incomplete message\n. ",
    "cwegener": ":+1: \n. ",
    "EdoBarroso": "Still not working. I tried connecting into a RHEL and a Slackware host. Backspace works fine, but arrow navigation doesn't\n. ",
    "lalomartins": "EDIT: ok, this was missing something along the lines of, \u201cPlease try out the Sep-End milestone release. Reopen if needed.\u201d (copied from another bug)\nArrows now work, and escape. It would be nice if alt-something would send esc-something but that would be a separate issue.\n. EDIT: ok, this was missing something along the lines of, \u201cPlease try out the Sep-End milestone release. Reopen if needed.\u201d (copied from another bug)\nArrows now work, and escape. It would be nice if alt-something would send esc-something but that would be a separate issue.\n. ",
    "alphaCTzo7G": "try mobassh.. it works much better compared to OpenSSH right now.. Command completion, colored prompts etc etc... I installed openssh via chocolatey today.. and trying to find the sshd.log files for this issue here: https://github.com/PowerShell/Win32-OpenSSH/issues/1102\nI used `choco install openssh /SSHServerFeature\". \nWhere can I find the sshd.log file?. This would be super useful... as I am also trying to trigger a GUI application through ssh. I am aware of the psexec and the scheduled task, and ControlUp appoaches. \npsexec is probably what I have to do.. as it seems to be most suggested approach here. However, it sends username/passwords as plaintext over to the remote computer.. which maybe a big security hole in future.\n@R030t1, can bitvise ssh server overcome the session 0 isolation problem?. You are right. There are 2 versions  of OpenSSH shipped withe the VM. OpenSSH6.7 which is already installed by default. And there is openssh v7. I believe which can be installed as an add-on feature. I tried both.. but they didnt work. \nToday I installed OpenSSHv7.6. Its mostly working. SCP works just like standard scp now. ssh still has some problems with certain programs.. Just to verify I didnt mess up any settings, I installed a fresh VM from :https://developer.microsoft.com/en-us/microsoft-edge/tools/vms\nAlso tried  https://stackoverflow.com/questions/878972/windows-cmd-encoding-change-     causes-python-crash/3259271.\nThis didnt resolve it either.\nIt doesnt throw any errors so its hard to tell what is not working.\nI am using the default version of openssh that comes with the VM. Not sure whether its the same as in here.. but I am guess they share the same code base. @NoMoreFood , Interestingly it actually does..\nHeres a screenshot\n\nHowever you will notice that when I try to start the python interpretor.. it doesnt startup. The same when I try to run a file through the interpretor. Yes, I was using the OpenSSH that comes installed with the VM from MS. I also\ntried uninstalling that and installing the OpenSSH that is supposed to an\nadd on feature that can be installed using \ndism /Online /Add-Capability /CapabilityName:OpenSSH.Client~~~~0.0.1.0,\nwith instructions from here: \nhttps://blogs.msdn.microsoft.com/powershell/2017/12/15/using-the-openssh-beta-in-windows-10-fall-creators-update-and-windows-server-1709/.\nThat gave similar results as well.\nToday I installed OpenSSH using choco install openssh and it seemed to\ninstall openssh directly from this git repo.\nIt definitely seems to be a big improvement. \nHeres the ssh logs using ssh -vvv user@ip. I removed some lines that seemed\nto contain certain line/names which seemd to contain _public/private_keys, and\nchanged the ips. If I didnt remove some thing, I should have removed, please\nremove them.\n\u00e2\u017e\u0153  ~ ssh -vvv ipython@10.15.98.22\n    OpenSSH_7.2p2 Ubuntu-4ubuntu2.4, OpenSSL 1.0.2g  1 Mar 2016\n    debug1: Reading configuration data /etc/ssh/ssh_config\n    debug1: /etc/ssh/ssh_config line 19: Applying options for *\n    debug2: resolving \"10.15.98.22\" port 22\n    debug2: ssh_connect_direct: needpriv 0\n    debug1: Connecting to 10.15.98.22 [10.15.98.22] port 22.\n    debug1: Connection established.\n    debug1: identity file /home/ubuntu_username/.ssh/id_rsa type 1\n    debug1: key_load_public: No such file or directory\n    debug1: identity file /home/ubuntu_username/.ssh/id_rsa-cert type -1\n    debug1: key_load_public: No such file or directory\n    debug1: identity file /home/ubuntu_username/.ssh/id_dsa type -1\n    debug1: key_load_public: No such file or directory\n    debug1: identity file /home/ubuntu_username/.ssh/id_dsa-cert type -1\n    debug1: key_load_public: No such file or directory\n    debug1: identity file /home/ubuntu_username/.ssh/id_ecdsa type -1\n    debug1: key_load_public: No such file or directory\n    debug1: identity file /home/ubuntu_username/.ssh/id_ecdsa-cert type -1\n    debug1: key_load_public: No such file or directory\n    debug1: identity file /home/ubuntu_username/.ssh/id_ed25519 type -1\n    debug1: key_load_public: No such file or directory\n    debug1: identity file /home/ubuntu_username/.ssh/id_ed25519-cert type -1\n    debug1: Enabling compatibility mode for protocol 2.0\n    debug1: Local version string SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.4\n    debug1: Remote protocol version 2.0, remote software version\n    OpenSSH_for_Windows_7.6\n    debug1: match: OpenSSH_for_Windows_7.6 pat OpenSSH* compat 0x04000000\n    debug2: fd 3 setting O_NONBLOCK\n    debug1: Authenticating to 10.15.98.22:22 as 'ipython'\n    debug3: hostkeys_foreach: reading file \"/home/ubuntu_username/.ssh/known_hosts\"\n    debug3: record_hostkey: found key type ECDSA in file\n    /home/ubuntu_username/.ssh/known_hosts:13\n    debug3: load_hostkeys: loaded 1 keys from 10.15.98.22\n    debug3: order_hostkeyalgs: prefer hostkeyalgs:\n    ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521\n    debug3: send packet: type 20\n    debug1: SSH2_MSG_KEXINIT sent\n    debug3: receive packet: type 20\n    debug1: SSH2_MSG_KEXINIT received\n    debug2: local client KEXINIT proposal\n    debug2: KEX algorithms:\n    curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,ext-info-c\n    debug2: host key algorithms:\n    ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\n    debug2: ciphers ctos:\n    chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\n    debug2: ciphers stoc:\n    chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\n    debug2: MACs ctos:\n    umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n    debug2: MACs stoc:\n    umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n    debug2: compression ctos: none,zlib@openssh.com,zlib\n    debug2: compression stoc: none,zlib@openssh.com,zlib\n    debug2: languages ctos:\n    debug2: languages stoc:\n    debug2: first_kex_follows 0\n    debug2: reserved 0\n    debug2: peer server KEXINIT proposal\n    debug2: KEX algorithms:\n    curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\n    debug2: host key algorithms:\n    ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n    debug2: ciphers ctos:\n    chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n    debug2: ciphers stoc:\n    chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n    debug2: MACs ctos:\n    umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n    debug2: MACs stoc:\n    umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n    debug2: compression ctos: none\n    debug2: compression stoc: none\n    debug2: languages ctos:\n    debug2: languages stoc:\n    debug2: first_kex_follows 0\n    debug2: reserved 0\n    debug1: kex: algorithm: curve25519-sha256@libssh.org\n    debug1: kex: host key algorithm: ecdsa-sha2-nistp256\n    debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:\n    <implicit> compression: none\n    debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:\n    <implicit> compression: none\n    debug3: send packet: type 30\n    debug1: expecting SSH2_MSG_KEX_ECDH_REPLY\n    debug3: receive packet: type 31\n    debug3: hostkeys_foreach: reading file \"/home/ubuntu_username/.ssh/known_hosts\"\n    debug3: record_hostkey: found key type ECDSA in file\n    /home/ubuntu_username/.ssh/known_hosts:13\n    debug3: load_hostkeys: loaded 1 keys from 10.15.98.22\n    debug1: Host '10.15.98.22' is known and matches the ECDSA host key.\n    debug1: Found key in /home/ubuntu_username/.ssh/known_hosts:13\n    debug3: send packet: type 21\n    debug2: set_newkeys: mode 1\n    debug1: rekey after 134217728 blocks\n    debug1: SSH2_MSG_NEWKEYS sent\n    debug1: expecting SSH2_MSG_NEWKEYS\n    debug3: receive packet: type 21\n    debug2: set_newkeys: mode 0\n    debug1: rekey after 134217728 blocks\n    debug1: SSH2_MSG_NEWKEYS received\n    debug2: key: /home/ubuntu_username/.ssh/id_rsa (0x5639502ffd50)\n    debug2: key: /home/ubuntu_username/.ssh/id_dsa ((nil))\n    debug2: key: /home/ubuntu_username/.ssh/id_ecdsa ((nil))\n    debug2: key: /home/ubuntu_username/.ssh/id_ed25519 ((nil))\n    debug3: send packet: type 5\n    debug3: receive packet: type 7\n    debug1: SSH2_MSG_EXT_INFO received\n    debug1: kex_input_ext_info:\n    server-sig-algs=<ssh-ed25519,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521>\n    debug3: receive packet: type 6\n    debug2: service_accept: ssh-userauth\n    debug1: SSH2_MSG_SERVICE_ACCEPT received\n    debug3: send packet: type 50\n    debug3: receive packet: type 51\n    debug1: Authentications that can continue:\n    publickey<Plug>PeepOpenassword,keyboard-interactive\n    debug3: start over, passed a different list\n    publickey<Plug>PeepOpenassword,keyboard-interactive\n    debug3: preferred\n    gssapi-keyex,gssapi-with-mic<Plug>PeepOpenublickey,keyboard-interactive<Plug>PeepOpenassword\n    debug3: authmethod_lookup publickey\n    debug3: remaining preferred: keyboard-interactive<Plug>PeepOpenassword\n    debug3: authmethod_is_enabled publickey\n    debug1: Next authentication method: publickey\n    debug1: Offering RSA public key: /home/ubuntu_username/.ssh/id_rsa\n    debug3: send_pubkey_test\n    debug3: send packet: type 50\n    debug2: we sent a publickey packet, wait for reply\n    debug3: receive packet: type 51\n    debug1: Authentications that can continue:\n    publickey<Plug>PeepOpenassword,keyboard-interactive\n    debug1: Trying private key: /home/ubuntu_username/.ssh/id_dsa\n    debug3: no such identity: /home/ubuntu_username/.ssh/id_dsa: No such file or directory\n    debug1: Trying private key: /home/ubuntu_username/.ssh/id_ecdsa\n    debug3: no such identity: /home/ubuntu_username/.ssh/id_ecdsa: No such file or directory\n    debug1: Trying private key: /home/ubuntu_username/.ssh/id_ed25519\n    debug3: no such identity: /home/ubuntu_username/.ssh/id_ed25519: No such file or\n    directory\n    debug2: we did not send a packet, disable method\n    debug3: authmethod_lookup keyboard-interactive\n    debug3: remaining preferred: password\n    debug3: authmethod_is_enabled keyboard-interactive\n    debug1: Next authentication method: keyboard-interactive\n    debug2: userauth_kbdint\n    debug3: send packet: type 50\n    debug2: we sent a keyboard-interactive packet, wait for reply\n    debug3: receive packet: type 51\n    debug1: Authentications that can continue:\n    publickey<Plug>PeepOpenassword,keyboard-interactive\n    debug3: userauth_kbdint: disable: no info_req_seen\n    debug2: we did not send a packet, disable method\n    debug3: authmethod_lookup password\n    debug3: remaining preferred:\n    debug3: authmethod_is_enabled password\n    debug1: Next authentication method: password\nNow, completion, arrows, the python interpretor seems to be working, for small tests. ipython still doesnt work. \nHeres a screen capture of a ssh session showing  the different commands. I am using putty to log in from ubuntu: https://drive.google.com/file/d/1u5pHWzir5g6PWyNpSyRn1BRE5FgSXaVS/view?usp=sharing\n. @bagajjal.. yes.. you are right. Thanks for looking into this. ipython is indeed working.. but its not very usable... ",
    "Ventusfahrer": "sorry - fingerdrouble - no issue!\n. well, if you where lucky to find this key on your laptop or modern (media) keyboard it will work.\nOn my Microsoft Sculpt Comfort Keyboard it is CTRL-Scroll. \nWe are all used to use CTRL-C in console based programs, Cygwin's ssh does also support CTRL-C and the ssh standard Escape-Sequences. \nWhy to go for an extra handling in win32-openssh (which I have to find and remember)?\nregards\nPeter\n. ...well the problem is that Windows is much more flexible in file system security than the common Unix implementations. chmod will never be enough for this job.\nif you need to modify security settings per command line use calcs.exe or icacls.exe\n...or in powershell Get-ACL/Set-ACL. search Google for examples.\nIf you need to investigate in file access related problems use procmon.exe (windows applicaton from www.sysinternals.com) on the desktop. \n. ... the most important thing is to find out which process (running under a specific account) tries to access which file. \nDepending where the file is located, it may have very special security settings mostly inherited by the parent directory. In some cases you are able to create a file but not to delete it...\nUse procmon to find out what is happening\n. I would not handle it as a feature request.\n1. Windows Server 2003 is out of support (also in security terms)\n2. Code compiled with Microsoft Visual Studio 2013 or Microsoft Visual Studo 2015 is not supported on XP/2003 unless you use a compiler switch which side effects are not quite clear.\nThe time of Windows Server 2003/XP is over - I would no longer code for it...\nPeter\n. well, just to make a comment on network drive letters.\nI personally don't like them, because they had a lot of side effects, which are not always visible immediately. \n- they are only valid in the session (desktop session) they are created in. They are not visible in the session where the Windows Services are running in. This is also a problem when writing applications you are goint to run as Scheduled Task\n- They are user specifc. (keep in mind, that a user account name is only a label, the user is internal idendified by a unique identifier (SID), which is always different for local acounts on different machines and domain accounts. Create a user \"peter\" on a local machine, deleting the account and create it again on the same machine will result in two different SIDs for this user (with of corse different home directories). c:\\users\\peter is owned by the first \"peter\" logged on to the machine. The second user Peter will get an appendis of computername or domainname (depending where the second users belongs to). If this is still not unique, a number is appended to the username.domain.0001 (in case of recreated users after deletion)\n-  if you define persistent network drive letters - they are not working outside an explorer context. Only the explorer.exe able to reconnect them\n- Network drives connected in explorer are not accessible in elevated programs and vice versa\n- They are limiting the number of disk volumes you can mount on servers - the alphabet still has only 25 Letters.\nSince Windows Vista we are able to use Symbolic Links, allowing you to link UNC path based Directories and Files into the local filesystem, without using network drive letters.\nIf you need to use a different credential on the network connect, then you should use the Windows Credential Manager (Control Panel) to store the credentials to this location. If you want to define the credentials in cmd.exe, powershell or ssh - then use cmdkey.exe - it will store it in the Windows Credential Manager.\nbest regards\nPeter\n. as suggested: just execute \nGet-Help about_Execution_Policy.\nfor details.\nThis will end up in on of the following comands:\n1. in an elevated powershell: Set-ExecutionPolicy unrestricted, repeat your command\n2. start the script as follows:    powershell.exe -executionpolicy unrestricted ./install-sshlsa.ps1\n. ",
    "tylerapplebaum": "+1\nI would also like to request this.. ",
    "an0t8": "Ok, the 2/25 build fixed the issue.\nI still can't get public key authentication working.  I saw that public key authentication isn't supported with domain logons yet, but I created a local account just for sftp.  I tried generating a key pair with ssh-keygen and through puttygen.  Put the public key in the C:\\Users\\user.ssh\\autorized_keys file, and access is always denied.\nAlso, with the new build on Windows 7, the ssh-lsa install script did not work correclty.  \"[Microsoft.Win32.RegestryKey] doesn't contain a method named 'OpenBaseKey'\"  I installed ssh-lsa into my registry manually.\n. I am having the same issue. x64 Windows 7 install.  Also using a local user, however other users are domain logins.\n. ",
    "Lawands": "ssh user@DOMAIN@host This worked very well. ",
    "chmuri": "I don't have any logs @ %programdata%\\ssh\\logs even in LOG VERBOSE mode Windows 2012 R2. ",
    "venky424": "I have similar issue. I am able to find the logs under C:\\ProgramData\\ssh\\logs. I would like to change the logs location to some other drive . How can I do that ? Below is the config.\n`\nThis is the sshd server system-wide configuration file.  See\nsshd_config(5) for more information.\nThe strategy used for options in the default sshd_config shipped with\nOpenSSH is to specify options with their default value where\npossible, but leave them commented.  Uncommented options override the\ndefault value.\nPort 22\nAddressFamily any\nListenAddress 0.0.0.0\nListenAddress ::\nHostKey PROGRAMDATA/ssh/ssh_host_rsa_key\nHostKey PROGRAMDATA/ssh/ssh_host_dsa_key\nHostKey PROGRAMDATA/ssh/ssh_host_ecdsa_key\nHostKey PROGRAMDATA/ssh/ssh_host_ed25519_key\nCiphers and keying\nRekeyLimit default none\nLogging\nSyslogFacility AUTH\nSyslogFacility LOCAL0\nLogLevel DEBUG\nAuthentication:\nLoginGraceTime 2m\nPermitRootLogin prohibit-password\nStrictModes yes\nMaxAuthTries 6\nMaxSessions 10\nPubkeyAuthentication yes\nThe default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\nbut this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile  .ssh/authorized_keys\nAuthorizedPrincipalsFile none\nFor this to work you will also need host keys in %programData%/ssh/ssh_known_hosts\nHostbasedAuthentication no\nChange to yes if you don't trust ~/.ssh/known_hosts for\nHostbasedAuthentication\nIgnoreUserKnownHosts no\nDon't read the user's ~/.rhosts and ~/.shosts files\nIgnoreRhosts yes\nTo disable tunneled clear text passwords, change to no here!\nPasswordAuthentication yes\nPermitEmptyPasswords no\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nGatewayPorts no\nPermitTTY yes\nPrintMotd yes\nPrintLastLog yes\nTCPKeepAlive yes\nUseLogin no\nPermitUserEnvironment no\nClientAliveInterval 0\nClientAliveCountMax 3\nUseDNS no\nPidFile /var/run/sshd.pid\nMaxStartups 10:30:100\nPermitTunnel no\nChrootDirectory none\nVersionAddendum none\nno default banner path\nBanner none\noverride default of no subsystems\nSubsystem sftp D:/logs/OpenSSH/\nExample of overriding settings on a per-user basis\nMatch User anoncvs\nAllowTcpForwarding no\nPermitTTY no\nForceCommand cvs server\n`. Thank you @NoMoreFood  It worked... I have created symbolic link. Do you know any estimate when can we expect of setting customized logs location on windows open ssh ?. ",
    "theonewolf": "You probably know this, but it's still an issue with your latest release, same behavior:\n```\nunknown type for handle [912]\naccept: The handle is invalid.\nunknown type for handle [816]\naccept: The handle is invalid.\nunknown type for handle [984]\naccept: The handle is invalid.\nunknown type for handle [900]\naccept: The handle is invalid.\n```\n. ",
    "dehy": "\ud83d\udc4d \n. ",
    "altaurog": "Does the win32 port actually check file and directory permissions?  It looks to me like it doesn't.  The functions secure_filename and auth_secure_path in auth.c both return 0 if compiled with WIN32_FIXME, which is defined in win32_config.h.\n. Same behavior here:\n3216 12:46:25 580 Connection from 10.0.2.2 port 43222 on 10.0.2.15 port 22\n3216 12:46:25 580 debug1: Client protocol version 2.0; client software version OpenSSH_6.7p1 Debian-5+deb8u1\n3216 12:46:25 580 debug1: match: OpenSSH_6.7p1 Debian-5+deb8u1 pat OpenSSH* compat 0x04000000\n3216 12:46:25 580 debug1: Enabling compatibility mode for protocol 2.0\n3216 12:46:25 580 debug1: Local version string SSH-2.0-OpenSSH_7.1p1 Microsoft_Win32_port_with_VS\n3216 12:46:25 580 debug1: list_hostkey_types: ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519\n3216 12:46:25 580 debug1: SSH2_MSG_KEXINIT sent\n3216 12:46:25 580 debug1: SSH2_MSG_KEXINIT received\n3216 12:46:25 580 debug1: kex: algorithm: curve25519-sha256@libssh.org\n3216 12:46:25 580 debug1: kex: host key algorithm: ecdsa-sha2-nistp256\n3216 12:46:25 580 debug1: kex: client->server cipher: aes128-ctr MAC: umac-64-etm@openssh.com compression: none\n3216 12:46:25 580 debug1: kex: server->client cipher: aes128-ctr MAC: umac-64-etm@openssh.com compression: none\n3216 12:46:25 580 debug1: expecting SSH2_MSG_KEX_ECDH_INIT\n3216 12:46:25 580 debug1: SSH2_MSG_NEWKEYS sent\n3216 12:46:25 580 debug1: expecting SSH2_MSG_NEWKEYS\n3216 12:46:25 580 debug1: SSH2_MSG_NEWKEYS received\n3216 12:46:25 580 debug1: KEX done\n3216 12:46:25 626 debug1: userauth-request for user IEUser service ssh-connection method none\n3216 12:46:25 626 debug1: attempt 0 failures 0\n3216 12:46:25 626 Failed none for IEUser from 10.0.2.2 port 43222 ssh2\n3216 12:46:25 626 debug1: userauth-request for user IEUser service ssh-connection method publickey\n3216 12:46:25 626 debug1: attempt 1 failures 0\n3216 12:46:25 626 debug1: test whether pkalg/pkblob are acceptable\n3216 12:46:25 626 Postponed publickey for IEUser from 10.0.2.2 port 43222 ssh2\n3216 12:46:25 626 debug1: userauth-request for user IEUser service ssh-connection method publickey\n3216 12:46:25 626 debug1: attempt 2 failures 0\n3216 12:46:25 626 debug1: -> LsaLogon()...\n3216 12:46:25 626 debug1: Checking args...\n3216 12:46:25 626 debug1: Setting up LSA Strings...\n3216 12:46:25 626 debug1: LsaRegisterLogonProcess()...\n3216 12:46:25 626 debug1: Retrieving Authentification Package ID...\n3216 12:46:25 626 debug1: Allocating LsaAuth struct...\n3216 12:46:25 626 debug1: Setting up TOKEN_SOURCE...\n3216 12:46:25 626 debug1: Login attemp...\n3216 12:46:25 642 debug1: SSH-LSA authorization failed. (err = 0, ntStat = c000006d).\n3216 12:46:25 642 debug1: <- LsaLogon()...\n3216 12:46:25 642 Failed publickey for IEUser from 10.0.2.2 port 43222 ssh2: ECDSA SHA256:LLpBzrejRha6sis9nt7Rq+f587FL8+UH5THZ8QsyGos\n3216 12:46:25 642 debug1: userauth-request for user IEUser service ssh-connection method keyboard-interactive\n3216 12:46:25 642 debug1: attempt 3 failures 1\n3216 12:46:25 642 debug1: keyboard-interactive devs \n3216 12:46:25 642 debug1: auth2_challenge: user=IEUser devs=\n3216 12:46:25 642 debug1: kbdint_alloc: devices ''\n3216 12:46:25 642 Failed keyboard-interactive for IEUser from 10.0.2.2 port 43222 ssh2\n3216 12:46:25 642 Connection closed by 10.0.2.2\n3216 12:46:25 642 debug1: do_cleanup\nIs there something else I should try/check?\n. Got it.  But in that case, should there not be a way to map the drive within the ssh session so I can access it?  I got an error when I tried to do that, (as shown above).\n. Huh, so it does.  That is strange, because I tried it before (with password login) and it didn't work, as I wrote above.\n. @zhutouxu sorry, no.  I believe subst worked reasonably well for me, but I recall that for other reasons SSH just wasn't a workable solution and I ended up just using remote desktop or local VBox.\n. ",
    "DreaJulca": "A PowerShell/CMD \"chmod 600\" equivalent would be a really convenient help if, just to pull a totally random and impersonal example out of the air, someone needed to give owner permissions of a private key to NT AUTHORITY via PsExec while trying to use their desktop running Windows 10 Home as a personal server to give one or two fellow researchers access to to one's pre-existing GPU installation of TensorFlow.\nOf course, it's possible that there is already a solution for this and I'm just not aware of it.. ",
    "PaulMaddox": "Hi @darkblaze69,\nJuiceSSH developer here. I'd be interested in looking into this further if you are able to help?\nI've had a brief investigation and I think the SSH library we are using (JSch) is ignoring best practices specified in RFC4253. Specifically, when it encounters an unknown SSH message type, rather than sending SSH_MSG_UNIMPLEMENTED and continuing, it's throwing an exception and bailing out.\nAre you able to help test if I can come up with a fix?\n. Hi @darkblaze69 and @keithzg, can you please try connecting with the following beta version of JuiceSSH:\nhttps://juicessh.com/juicessh-2.1.2-beta1.apk\nCould you then generate a debug log, by long pressing the app version number in the JuiceSSH settings menu. This will generate a detailed log, similar to the one @keithzg posted previously.\nThanks\n. Interesting. JuiceSSH actually enables compression by default on most modern Android devices (it's disabled on some older models due to memory constraints IIRC). It should be fairly trivial to pull this out to a switchable user preference if required.\nAlthough compression is enabled by default in JuiceSSH, it should fall back to none if the server reports that it doesn't support compression. It looks like the server is reporting that it does support compression though (below is from the log posted previously)...\n2/25/16 14:03 (info): INFO: kex: server: none,zlib@openssh.com\n2/25/16 14:03 (info): INFO: kex: client: zlib@openssh.com,zlib,none\n...\n2/25/16 14:03 (info): INFO: kex: server->client aes128-ctr hmac-sha1 zlib@openssh.com\n2/25/16 14:03 (info): INFO: kex: client->server aes128-ctr hmac-sha1 zlib@openssh.com\nThat said, last night I built a version of JuiceSSH with compression disabled, and successfully connected:\n\nI'm guessing the latest hosted release binaries are not compiled against zlib, so therefore compression isn't working. Can anyone from the Win32-OpenSSH team comment on why the server is reporting that compression is supported, if it's not? If the server correctly reported, this probably wouldn't be an issue for the majority of clients.\n. ",
    "Joelgp83": "Hi, just wanted to add another confirmation of this bug, though in my case it's from trying to connect juicessh a win7-64bit machine equipped with the March 19th release.  As others have stated, it works fine when I connect my linux mint 17.3 box, but bails out with the same error when using juicessh on android.\n. Good thought, but I already checked for that, as I encountered issues with compression when connecting from my mint box (ssh  -C blah blah blah) prior to using the android app.  As far as I know, I'm still getting the error without compression in juiceSSH, in fact I don't even see where in the app I can enable compression in the first place, so I can only assume juiceSSH is /not/ using compression.\n. ",
    "Drusantia": "Indeed disabling compression (server side) solves the connection problem:\nin C:\\Program Files\\OpenSSH-Win64\\sshd_config\nAdded the line:\nCompression no\n(commented out Compression setting was on line 102 by the way)\nRestarted the sshd service - win.\nNote: I needed to set the backspace option to Legacy on the connection for the backspace work properly. Server is a Windows Server 2012 R2.\n. ",
    "p1r473": "I am getting a similar issue\n\"Caught an exception, leaving main loop due to unknown SSH message type 27\"\nDisconnecting...\nI've also had message type 54, and another one too. I am running sshd on Windows 10 too, and trying to connect with JuiceSSH on Android 7.1\nPutting \"compression no\" fixed it for me as well.\nIs there any better fix?. ",
    "rkitover": "Sorry to bump an old issue, but I'm getting this problem with the current Win10 sshd.\nI've tried add Compression no to my sshd_config (followed by fixing permissions on it with Repair-SshdConfigPermission) but this does not fix the problem.\nThis is the last thing I see when JuiceSSH tries to connect:\nSSH_MSG_KEXINIT sent\nDisconnecting from zenbook port 22\nThe dialog that pops up says:\nConnection Failed\njava.io.IOException: End of IO Stream Read\nDo you want to retry?. @bagajjal thanks for responding.\nNow that I did some more digging this is turning out to be even more bizarre.\nI seem to have some kind of rogue sshd process running that is not showing up in tasklist, rather than the actual service.\nWhen I do a net stop sshd I can still ssh to localhost!\nDoing a tasklist | findstr sshd returns nothing!. @bagajjal thank you, now I'm running the sshd that I thought I was!\nMy authorized_keys file started working as well.\nI still can't connect with JuiceSSH though. Now that the Compression no setting has taken effect, I get the error:\nConnection Failed\nAlgorithm negotiation fail\nThe last few lines from juicessh are:\nkex: client: hmac-md5,hmac-sha1,...\nkex: client: zlib@openssh.com,zlib,none\nkex: client: zlib@openssh.com,zlib,none\nkex: client:\nkex: client:\nDisconnecting ...\n@PaulMaddox sorry to ping you after two years, any insight into this?. I cannot get ssh -vvv output because this is JuiceSSH on android, but here is the sshd.log with DEBUG3:\n```\n24004 02:29:18:226 debug1: sshd version OpenSSH_7.5, without OpenSSL\n24004 02:29:18:231 debug3: failed to open file:./ssh_host_rsa_key error:2\n24004 02:29:18:231 debug1: key_load_private: No such file or directory\n24004 02:29:18:231 debug3: Failed to open file:./ssh_host_rsa_key error:2\n24004 02:29:18:231 debug3: Failed to open file:./ssh_host_rsa_key.pub error:2\n24004 02:29:18:231 debug1: key_load_public: No such file or directory\n24004 02:29:18:231 error: Could not load host key: ./ssh_host_rsa_key\n24004 02:29:18:231 debug3: failed to open file:./ssh_host_dsa_key error:2\n24004 02:29:18:232 debug1: key_load_private: No such file or directory\n24004 02:29:18:232 debug3: Failed to open file:./ssh_host_dsa_key error:2\n24004 02:29:18:232 debug3: Failed to open file:./ssh_host_dsa_key.pub error:2\n24004 02:29:18:232 debug1: key_load_public: No such file or directory\n24004 02:29:18:232 error: Could not load host key: ./ssh_host_dsa_key\n24004 02:29:18:232 debug3: open - handle:0000000000000124, io:0000022156431DC0, fd:3\n24004 02:29:18:235 debug3: close - io:0000022156431DC0, type:2, fd:3, table_index:3\n24004 02:29:18:235 debug1: private host key #2: ssh-ed25519 SHA256:x2LrlFHRTOAgjTfgQ5jzsmkl4LuGz27l0SmeZoVZxTs\n24004 02:29:18:235 debug3: socket:272, socktype:1, io:0000022156431AB0, fd:3 \n24004 02:29:18:235 debug2: fd 3 setting O_NONBLOCK\n24004 02:29:18:235 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n24004 02:29:18:235 debug1: Bind to port 22 on ::.\n24004 02:29:18:236 Server listening on :: port 22.\n24004 02:29:18:236 debug3: socket:316, socktype:1, io:000002215645C860, fd:4 \n24004 02:29:18:236 debug2: fd 4 setting O_NONBLOCK\n24004 02:29:18:236 debug1: Bind to port 22 on 0.0.0.0.\n24004 02:29:18:236 Server listening on 0.0.0.0 port 22.\n24004 02:29:18:236 debug3: Failed to open file:./sshd.pid error:13\n24004 02:29:18:236 error: Couldn't create pid file \"./sshd.pid\": Permission denied\n24004 02:34:00:653 debug3: socket:328, io:000002215645CA50, fd:5 \n24004 02:34:00:653 debug3: fd 5 is not O_NONBLOCK\n24004 02:34:00:653 debug3: pipe - r-h:340,io:0000022156431940,fd:6  w-h:284,io:00000221564319F0,fd:7\n24004 02:34:00:653 debug3: spawning C:\\WINDOWS\\System32\\openssh\\sshd.exe\n24004 02:34:00:656 debug3: Register child 000000000000015C pid 1872, 0 zombies of 0\n24004 02:34:00:656 debug3: close - io:000002215645CA50, type:1, fd:5, table_index:5\n24004 02:34:00:656 debug1: Forked child 1872.\n24004 02:34:00:656 debug3: close - io:00000221564319F0, type:2, fd:7, table_index:7\n1872 02:34:00:730 debug1: sshd version OpenSSH_7.5, without OpenSSL\n1872 02:34:00:732 debug3: failed to open file:./ssh_host_rsa_key error:2\n1872 02:34:00:732 debug1: key_load_private: No such file or directory\n1872 02:34:00:732 debug3: Failed to open file:./ssh_host_rsa_key error:2\n1872 02:34:00:732 debug3: Failed to open file:./ssh_host_rsa_key.pub error:2\n1872 02:34:00:732 debug1: key_load_public: No such file or directory\n1872 02:34:00:732 error: Could not load host key: ./ssh_host_rsa_key\n1872 02:34:00:733 debug3: failed to open file:./ssh_host_dsa_key error:2\n1872 02:34:00:733 debug1: key_load_private: No such file or directory\n1872 02:34:00:733 debug3: Failed to open file:./ssh_host_dsa_key error:2\n1872 02:34:00:733 debug3: Failed to open file:./ssh_host_dsa_key.pub error:2\n1872 02:34:00:733 debug1: key_load_public: No such file or directory\n1872 02:34:00:733 error: Could not load host key: ./ssh_host_dsa_key\n1872 02:34:00:733 debug3: open - handle:000000000000012C, io:000001DFB700E830, fd:3\n1872 02:34:00:736 debug3: close - io:000001DFB700E830, type:2, fd:3, table_index:3\n1872 02:34:00:737 debug1: private host key #2: ssh-ed25519 SHA256:x2LrlFHRTOAgjTfgQ5jzsmkl4LuGz27l0SmeZoVZxTs\n1872 02:34:00:737 debug3: Failed to open file:./sshd.pid error:13\n1872 02:34:00:738 error: Couldn't create pid file \"./sshd.pid\": Permission denied\n1872 02:34:00:738 debug1: child socket: 328\n1872 02:34:00:738 debug1: child startup_pipe: 284\n1872 02:34:00:740 Connection from 192.168.1.180 port 40695 on 192.168.1.11 port 22\n1872 02:34:00:741 debug1: Client protocol version 2.0; client software version JuiceSSH\n1872 02:34:00:741 debug1: no match: JuiceSSH\n1872 02:34:00:741 debug1: Local version string SSH-2.0-OpenSSH_7.5\n1872 02:34:00:741 debug2: fd 3 setting O_NONBLOCK\n1872 02:34:00:741 debug1: list_hostkey_types: ssh-ed25519\n1872 02:34:00:744 debug3: send packet: type 20\n1872 02:34:00:744 debug1: SSH2_MSG_KEXINIT sent\n1872 02:34:01:017 debug3: receive packet: type 20\n1872 02:34:01:017 debug1: SSH2_MSG_KEXINIT received\n1872 02:34:01:017 debug2: local server KEXINIT proposal\n1872 02:34:01:018 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org\n1872 02:34:01:018 debug2: host key algorithms: ssh-ed25519\n1872 02:34:01:018 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n1872 02:34:01:018 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n1872 02:34:01:018 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n1872 02:34:01:018 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n1872 02:34:01:018 debug2: compression ctos: none\n1872 02:34:01:018 debug2: compression stoc: none\n1872 02:34:01:018 debug2: languages ctos: \n1872 02:34:01:018 debug2: languages stoc: \n1872 02:34:01:018 debug2: first_kex_follows 0 \n1872 02:34:01:018 debug2: reserved 0 \n1872 02:34:01:018 debug2: peer client KEXINIT proposal\n1872 02:34:01:018 debug2: KEX algorithms: ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1\n1872 02:34:01:018 debug2: host key algorithms: ssh-rsa,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521\n1872 02:34:01:018 debug2: ciphers ctos: aes128-ctr,aes128-cbc,3des-ctr,3des-cbc,blowfish-cbc,aes192-ctr,aes192-cbc,aes256-ctr,aes256-cbc\n1872 02:34:01:018 debug2: ciphers stoc: aes128-ctr,aes128-cbc,3des-ctr,3des-cbc,blowfish-cbc,aes192-ctr,aes192-cbc,aes256-ctr,aes256-cbc\n1872 02:34:01:018 debug2: MACs ctos: hmac-md5,hmac-sha1,hmac-sha2-256,hmac-sha1-96,hmac-md5-96\n1872 02:34:01:018 debug2: MACs stoc: hmac-md5,hmac-sha1,hmac-sha2-256,hmac-sha1-96,hmac-md5-96\n1872 02:34:01:018 debug2: compression ctos: zlib@openssh.com,zlib,none\n1872 02:34:01:018 debug2: compression stoc: zlib@openssh.com,zlib,none\n1872 02:34:01:018 debug2: languages ctos: \n1872 02:34:01:018 debug2: languages stoc: \n1872 02:34:01:018 debug2: first_kex_follows 0 \n1872 02:34:01:018 debug2: reserved 0 \n1872 02:34:01:018 debug1: kex: algorithm: (no match)\n1872 02:34:01:018 Unable to negotiate with 192.168.1.180 port 40695: no matching key exchange method found. Their offer: ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1\n1872 02:34:01:018 debug1: do_cleanup\n24004 02:34:01:020 debug3: close - io:0000022156431940, type:2, fd:6, table_index:6\n24004 02:34:01:029 debug3: zombie'ing child at index 0, 0 zombies of 1\n24004 02:34:01:029 debug3: Unregister child at index 0, 1 zombies of 1\n```\n. @bagajjal thank you so much for your help, looking forward to the next windows update!. I see now that it automatically makes keys in C:\\ProgramData\\ssh on first launch.. It should still probably create the keys in the actual directory instead of trying to use the template name as a directory.. Yes but look at the error, it's not actually creating them because it tries to write to a nonexistant template name instead of the actual directory, on unix it actually creates them.. Ah so that was the problem.\nPerhaps as some future minor enhancement, someone could add some code to make sure the directory exists.. ",
    "wkwood": "Same problem however I can log in to a local account on the server using a password. \n3720 13:19:11 890 debug2: input_userauth_request: try method publickey\n3720 13:19:11 890 debug1: test whether pkalg/pkblob are acceptable\n3720 13:19:11 890 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\n3720 13:19:11 890 Postponed publickey for testssh from 10.24.23.173 port 52346 ssh2\n3720 13:19:15 201 debug1: userauth-request for user testssh service ssh-connection method publickey\n3720 13:19:15 201 debug1: attempt 2 failures 0\n3720 13:19:15 201 debug2: input_userauth_request: try method publickey\n3720 13:19:15 201 debug1: -> LsaLogon()...\n3720 13:19:15 201 debug1: Checking args...\n3720 13:19:15 201 debug1: Setting up LSA Strings...\n3720 13:19:15 201 debug1: LsaRegisterLogonProcess()...\n3720 13:19:15 201 debug1: Retrieving Authentification Package ID...\n3720 13:19:15 201 debug1: Allocating LsaAuth struct...\n3720 13:19:15 201 debug3: Checking args...\n3720 13:19:15 201 debug3: Adding authorized file [.ssh/authorized_keys] to LsaAuth...\n3720 13:19:15 201 debug3: Computing total size of LsaAuth...\n3720 13:19:15 201 debug3: Allocating new LsaAuth structure...\n3720 13:19:15 201 debug3: Filling up LsaAuth struct...\n3720 13:19:15 201 debug3: Converting [.ssh/authorized_keys] to UTF8...\n3720 13:19:15 201 debug1: Setting up TOKEN_SOURCE...\n3720 13:19:15 201 debug1: Login attemp...\n3720 13:19:19 951 debug1: SSH-LSA authorization failed. (err = 0, ntStat = c000006d).\n3720 13:19:19 951 debug1: <- LsaLogon()...\n3720 13:19:19 951 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\n3720 13:19:19 951 Failed publickey for testssh from 10.24.23.173 port 52346 ssh2: RSA SHA256:Dg7Akpk1PCiaw2BEGiz2wm5Ng4z+WwA+hJTzj3kg2EU\n3720 13:19:19 951 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n3720 13:19:19 951 debug1: userauth-request for user testssh service ssh-connection method keyboard-interactive\n3720 13:19:19 951 debug1: attempt 3 failures 1\n. ",
    "luanthom": "I also had this problem with vast number of entries in the log file filing the 200Gb in a few days. I also could not connect via SSH to the server. I changed to \"LogLevel QUIET\" and zero entries in the log but the server started working.\n. ",
    "zhutouxu": "@altaurog  I have met the same problem in windows Server2008 R2.  I was login with password method ,when I type 'net use x: \\server\\folder\\' , return error msg \"System error 67 has occurred.The network name cannot be found.\"   did you have a resolution for this problem ?\n. ",
    "uzytkownik": "In my case (on Windows 10) subst displays that path was not found and net use returns error 58.\nEDIT: For whatever reason I need to specify both username and password.\n. ",
    "megahall": "@DarwinJS You misspelled EnableLinkedConnections which makes the advice not work.\nThis is what you actually want:\nPowerShell\nreg add \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\" /v \"EnableLinkedConnections\" /t REG_DWORD /d 0x00000001 /f. However, in my experience, even when following the advice, the mapped drives are still broken. So I think this is a real bug which should be fixed if IT Admins are going to use this successfully for a whole lot of headless SW install tasks and other common SSH uses.. ",
    "Bruinbrum": "I don't quite agree with the design reasoning given by manojampalam.\nWe want to use ssh as a secure access to a Windows system for use from Jenkins.\n\nIf I use username:password to connect, then i can map network drives, but I also go to a different 'home'\nIf I use the secure key, then I cannot map network drives\n\nSo, to use the network drive, I have to go to a more insecure method.\nAs mgkuhn commented, the problem of accessing network shares via ssh remains.  sshd needs to setup the user process such that this will work.  Further our network shares are offered by a filer, so I don't want to setup sftp from somewhere else to get the data.\n. ",
    "tekknow": "@megahall Your solution did not work for me.  I RDP'd into the remote windows server (which has D: mapped to another remote server and can be seen in Explorer) and issued the reg add command.  The registry entry was added successfully.  Then I ssh'd into the same remote windows server and did a cd to /cygdrive, then ls.  No \"d\", only \"c\".. ",
    "mrPsycho": "especially if this directory on another drive\n. +1.\nwould be very usefull to get it working. for example to use it with proxy servers to implement MFA.. @manojampalam and how to change disk to D in sftp browser?. @bagajjal thanks, captain.\nbut tell it to the end users, who uses filezilla or cyberduck . @bagajjal thanks a lot! \n. what should be correct path in sshd_config for AuthorizedKeysFile?\nif something like ./authorized_keys - point to directory where sshd.exe is placed.. ",
    "mhaneef14": "I installed OPenSSH on windows 2012 R2 it works fine but dafault folder goes to user profile in C drive only.\nI tried changing drive other than C but does not show other drives. any clue. . ",
    "calwebster": "I'm trying to install the 5_15_2016 release on Windows 7 following this procedure on WinSCP.net\nI got the same error as OP above at first.\nI then applied the workaround listed in release notes for 2_25_2016 and 3_19_2016 but now I get this error, followed by the original error:\nCopy-Item : The process cannot access the file 'C:\\Windows\\system32\\ssh-lsa.dll' because it is being used by another process.\nNeither of the ssh services are running and I didn't see anything else related in the process list in Task Manager.\nI even started in Safe Mode without networking and tried again but got the same errors.\nAny other workarounds I might be missing?\nFull text messages:\n```\nC:\\Users\\admin.flarbs98>cd \\program files\\openssh\nC:\\Program Files\\openssh>powershell.exe .\\install-sshlsa.ps1\nCopy-Item : The process cannot access the file 'C:\\Windows\\system32\\ssh-lsa.dll' because it is being used by another process.\nAt C:\\Program Files\\openssh\\install-sshlsa.ps1:1 char:5\n+ copy <<<<  .\\ssh-lsa.dll $env:windir\\system32\n    + CategoryInfo          : NotSpecified: (:) [Copy-Item], IOException\n    + FullyQualifiedErrorId : System.IO.IOException,Microsoft.PowerShell.Comma\n   nds.CopyItemCommand\nMethod invocation failed because [Microsoft.Win32.RegistryKey] doesn't contain a method named 'OpenBaseKey'.\nAt C:\\Program Files\\openssh\\install-sshlsa.ps1:4 char:50\n+ $reg = [Microsoft.Win32.RegistryKey]::OpenBaseKey <<<< ('LocalMachine', 0)\n    + CategoryInfo          : InvalidOperation: (OpenBaseKey:String) [], Runti\n   meException\n    + FullyQualifiedErrorId : MethodNotFound\nYou cannot call a method on a null-valued expression.\nAt C:\\Program Files\\openssh\\install-sshlsa.ps1:5 char:23\n+ $key = $reg.OpenSubKey <<<< ($subkey, $true)\n    + CategoryInfo          : InvalidOperation: (OpenSubKey:String) [], Runtim\n   eException\n    + FullyQualifiedErrorId : InvokeMethodOnNull\nYou cannot call a method on a null-valued expression.\nAt C:\\Program Files\\openssh\\install-sshlsa.ps1:6 char:21\n+ $arr = $key.GetValue <<<< ($value)\n    + CategoryInfo          : InvalidOperation: (GetValue:String) [], RuntimeE\n   xception\n    + FullyQualifiedErrorId : InvokeMethodOnNull\nYou cannot call a method on a null-valued expression.\nAt C:\\Program Files\\openssh\\install-sshlsa.ps1:9 char:16\n+   $key.SetValue <<<< ($value, [string[]]$arr, 'MultiString')\n    + CategoryInfo          : InvalidOperation: (SetValue:String) [], RuntimeE\n   xception\n    + FullyQualifiedErrorId : InvokeMethodOnNull\nC:\\Program Files\\openssh>\n```\n. ",
    "charleswg": "Confirmed same issue with WinSCP client/Filezilla.  It only takes  2,151,677,952 bytes.\nMaybe compile with large file support?\n. ",
    "imontero": "Same issue, sftp copy stops at 2.147.483.648 exactly.\nOrigin: SunOS 5.11 11.3 sun4v sparc\nRemote: Microsoft Windows Version 6.1.7601\nOpenssh remote:  SSH-2.0-OpenSSH_7.1p1 Microsoft_Win32_port_with_VS\nOriginal size of TheFile: 2.551.410.981\nFinal size on remote: 2.147.483.648\nTrace error (on windows side):\n4596 22:32:46 473 debug1: request 65685: write \"C:/ThePath/TheFile\" (handle 0) off 2148139008 len 32768\n  4596 22:32:46 473 error: process_write: seek failed\n  4596 22:32:46 473 debug3: request 65685: sent status 5\n  4596 22:32:46 473 sent status Bad message\n  4596 22:32:46 503 debug1: request 65686: write \"C:/ThePath/TheFile\" (handle 0) off 2148171776 len 32768\n  4596 22:32:46 503 error: process_write: seek failed\n  4596 22:32:46 503 debug3: request 65686: sent status 5\n  4596 22:32:46 503 sent status Bad message\n  4596 22:32:46 504 error: write: The specified network name is no longer available.\nIf I make the same copy with scp, there's no problem.\nMay be due 32 bits version of ssh on win?\nAny idea?\n. ",
    "ppdac": "The path is simply not created:\n\nC:\\Windows\\system32>ssh-keygen -t rsa -b 4096\nGenerating public/private rsa key pair.\nEnter file in which to save the key (C:\\Users\\wawer/.ssh/id_rsa): tets\nEnter passphrase (empty for no passphrase):\nC:\\Windows\\system32>cd C:\\Users\\wawer/.ssh/\nThe system cannot find the path specified.\nC:\\Windows\\system32>cd C:\\Users\\wawer.ssh/\nThe system cannot find the path specified.\n. Thank you Morten, I see how it works now.\n. \n",
    "Morten242": "\nEnter file in which to save the key (C:\\Users\\wawer/.ssh/id_rsa):\n\nThis is a prompt to change the location of the file (I always found it confusing too..). The standard path is listed inside the parenthesis (ie. C:\\Users\\wawer/.ssh/id_rsa). When you wrote 'tets' and pressed enter it instead ended up being saved directly to the working directory with the name you gave it (ie. C:\\windows\\system32\\tets).\nPressing enter when that prompt appears will make it save to that particular path.\n. In my case I generated it using ssh-keygen from System32/OpenSSH (don't remember but I don't think I had any extra arguments).. ",
    "carrillo455": "\nCategoryInfo          : SecurityError: (:) [], PSSecurityException\nFullyQualifiedErrorId : UnauthorizedAccess\n. thanks @Ventusfahrer! I tried as in 2, it worked.\n\nYes @DarwinJS, I executed the unrestricted only for this command to avoid changing the variable.\nSalutes +1\n. Yes, got it @DarwinJS  I only did point number 2 from Ventusfahrer answer, thanks!!\n. ",
    "warmchang": "I got it, thank you!\n. ",
    "paulewog": "Also, the RC of the local ssh command appears to be unaffected.  If it was non-zero or some specific code that I could check for, we could just keep retrying until it worked, that would be a [hacky] workaround... :)\n. Reg command stuff:\n```\nthe working one:\n2960 12:44:42 724 debug1: Executing command: reg query \"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Tcpip\\Parameters\" /v \"NV Domain\"\n2960 12:44:42 739 debug1: read from socket sfd [7] failed with error code [10054]\n2960 12:44:42 739 debug1: read from socket sfd [9] failed with error code [10054]\n2960 12:44:42 739 debug1: Received SIGCHLD.\n2960 12:44:42 739 debug1: session_by_pid: pid 524\n2960 12:44:42 739 debug1: session_exit_message: session 0 channel 0 pid 524\n2960 12:44:42 739 debug1: session_exit_message: release channel 0\n2960 12:44:42 739 debug1: read from socket sfd [3] failed with error code [10035]\n2960 12:44:42 911 Connection closed by 9.80.197.145 \n12:48:23 PM: and the failing one:\n904 12:44:47 583 debug1: Executing command: reg query \"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Tcpip\\Parameters\" /v \"NV Domain\"\n904 12:44:47 599 debug1: Received SIGCHLD.\n904 12:44:47 599 debug1: session_by_pid: pid 524\n904 12:44:47 599 debug1: session_exit_message: session 0 channel 0 pid 524\n904 12:44:47 599 debug1: session_exit_message: release channel 0\n904 12:44:47 599 debug1: read from socket sfd [9] failed with error code [10054]\n904 12:44:47 599 debug1: read from socket sfd [3] failed with error code [10035]\n904 12:44:47 599 debug1: read from socket sfd [7] failed with error code [10054] \n```\n. Some more information... if I prepend cmd /c to the reg query command, it works every time.  So there seems to be something about running without cmd /c ... at least on 2012, not sure about 2008, like I said.  Haven't tested that yet.\n. Even on 2012, some commands - builtin shell commands, perhaps?  That is what failed this time - still fail when prefixed with cmd /c\n... but cmd /c cmd /c dir C:\\ now works every time, too.\nI don't know if this is just random or not... if I drop it to one cmd /c, it fails.  Adding two cmd /c prefixes and it works.\n. Is it possible that having both cmd calls somehow makes the output get sent before the socket closes? It seems very strange that it seems to work. :)\n. Will try it out this week. :)\nOn Mar 20, 2016 7:55 AM, \"manojampalam\" notifications@github.com wrote:\n\nCan you try out the latest version?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/151#issuecomment-198946339\n. Hello,\n\nI'm encountering a different problem now.  When I try to install on Windows 2012 R2 and run sshd.exe, I get errors such as:\nkey_load_private: insufficient buffer space\nCould not load host key: ssh_host_rsa_key\n... for all the SSH keys.  I generated them using ssh-keygen -A\n. Cool, will try it out on a few versions tomorrow morning.\nOn Mar 23, 2016 10:05 AM, \"manojampalam\" notifications@github.com wrote:\n\nTry it out with 1.1 versions I just uploaded\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/151#issuecomment-200444094\n. I've also tested on 2008 R2 and 2012 R2 and both seem to be working.  Thanks! :+1:\n. Should have mentioned, this is with the March \"1.1\" version. :)\n. I am actually having some intermittent issues copying files in general, now... getting disconnects, or it's not closing properly and just hangs...  I'm not sure why yet, will see if I can narrow it down.\n. I am definitely getting intermittent failures.  Sometimes, the SCP seems to just go nowhere and hangs indefinitely.  Sometimes, they work fine.\n\nI'll do some more testing and see if I can isolate the exact scenario it happens under.  It's strange that it doesn't always happen.\n. Actually, I get failures on 2012 R2 as well.\n[root@sjx64gh0a ~]# scp /tmp/d20160330-5712-1u9lvnx/allegro_script_5712.bat Administrator@allegro-test-1:C:\\\\Allegro\\\\temp\nAdministrator@allegro-test-1's password:\nWrite failed: Broken pipe\nlost connection\n. Ah, maybe this will help more than my previous comments.  Here is the server side error, after enabling DEBUG logging:\n2868 11:42:47 413 Starting session: command for Administrator from [REDACTED] port 60549\n2868 11:42:47 413 debug1: pipe - read end: handle:00000000000001BC, io:000000DE1B6EEDB0, fd:6\n2868 11:42:47 413 debug1: pipe - write end: handle:00000000000001C0, io:000000DE1B6EEE60, fd:7\n2868 11:42:47 413 debug1: pipe - read end: handle:00000000000001C4, io:000000DE1B6EEF10, fd:8\n2868 11:42:47 413 debug1: pipe - write end: handle:00000000000001C8, io:000000DE1B6CDAF0, fd:9\n2868 11:42:47 413 debug1: pipe - read end: handle:00000000000001CC, io:000000DE1B6CDBA0, fd:10\n2868 11:42:47 413 debug1: pipe - write end: handle:00000000000001D0, io:000000DE1B6CDC50, fd:11\n2868 11:42:47 413 debug1: Using token from LogonUser()...\n2868 11:42:47 413 debug1: -> GetHomeDirFromToken()...\n2868 11:42:47 413 debug1: <- GetHomeDirFromToken()...\n2868 11:42:47 413 debug1: Executing command: scp -v -t C:/Allegro/temp\n2868 11:42:47 413 debug1: ERROR. Cannot create process as new user (2).\n. I also tried it as a non-Administrator user, same error.\n. It works in older builds actually.  :)\nOn Apr 1, 2016 12:04 PM, \"Alex\" notifications@github.com wrote:\n\nThis issue happens for ALL SSH clients connecting to Win32-OpenSSH's SSHD,\nand ALL Win32-OpenSSH SCP attempts. The user and windows version don't\nmatter. SCP is just broken in Win32-OpenSSH.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/169#issuecomment-204526014\n. Doh.  I entirely missed that. Sorry :-o\nOn Apr 1, 2016 8:37 PM, \"darkblaze69\" notifications@github.com wrote:\nHey guys, have you read release notes on the last version from March 19th?\nIt clearly states : \"SCP is taken offline as it needs significant changes\nto get it on board the new transpor and I'm still working on it.\"\nhttps://github.com/PowerShell/Win32-OpenSSH/releases/tag/3_19_2016\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/169#issuecomment-204639018\n. Closing this since it's in the release notes.  Again, to the devs, sorry about that :)\n. The server works when you use the Windows client.  The only major difference I can see is the key algorithm, one being the Diffie-Hellman Group Exchange (shows up when I use my Mac's SSH client) and one being the elliptical curve thingy (this is used when I try using the Windows ssh client).\n\nThis is the original March release (not 1.1) and on Windows 2008 R2.\nIt fails trying to connect to it from both Mac and Linux clients.\n. @manojampalam - sorry for the delay in response.  Unfortunately, I'm no longer at the job where I was using this... :/. ",
    "Snegohod": "The same error on Windows Server 2012 R2 in the new release (3_19_2016). Previous release(2_25_2016) works fine.\n\n[Build Mar 19 2016 22:36:41]\nkey_load_private: insufficient buffer space\nCould not load host key: ssh_host_rsa_key\nkey_load_private: insufficient buffer space\nCould not load host key: ssh_host_dsa_key\nkey_load_private: insufficient buffer space\nCould not load host key: ssh_host_ecdsa_key\nkey_load_private: insufficient buffer space\nCould not load host key: ssh_host_ed25519_key\nDisabling protocol version 2. Could not load host key\nsshd: no hostkeys available -- exiting.\n. Tested OpenSHH-Win64-1.1 on 2012 R2 and 2008 R2. Works great\n. Already known\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/151#issuecomment-199914597\n. \n",
    "Alexhha": "The same thing for sshd.exe\n. ",
    "epsilon-MrWalters": "Is there any progress or update on this? Having this same issue in Server 2012. \n. Is there any way to get this more attention? \n. ",
    "dwings": "Same problem here, Windows Server 2012. A fix would be really appreciated.\n. ",
    "nathannoble": "It's been a while. Is a fix for this forthcoming?\n. Same error\n. Ditto\n. ",
    "mvpkenlin": "I tried to update the User's Home directory in User Properties under ADUC as the following,\n1) Update to be using the Computer's C:\\TestingFolder, But the folder is still server's C:\\Users[username] after SFTP logged in.\n2) Update to be using network share as Z: with \\FTPServer\\FTPHome\\%username%. After clicking Apply button, a new folder created as the value of the username. But the folder is still server's C:\\Users[username] after SFTP logged in. Ops, just found out that #154 has mentioned about this from Mar 2016.. ",
    "yruheresteve": "I have the same problem. I also tried to use mklink to create a junction to link user's home directory (C:\\Users[username]) to a different location (c:\\sftproot[username] for example). For some reason it worked the first time when I connect, but subsequent tries landed me in C:\\Windows\\ for some reason.... ",
    "dkorsmo": "Coming up on two years old, any progress?  Does anyone have a work-around that works?. ",
    "jcohron": "manojampalam - \nThe Key:ProfileImagePath does not appear to correspond to setting a local users home folder in user properties (Profile tab, Home folder section, Local Path). The method to set a home folder in windows is documented below, I am uncertain how that relates to ProfileImagePath.\nMS Documentation:\nhttps://support.microsoft.com/en-us/help/816313/how-to-assign-a-home-folder-to-a-user\nor as i scripted it:\nNET USER %myuser% %mypasswd% /ADD /comment:\"created: %timestamp%\" /homedir:F:\\FTPRoot\\LocalUser\\%myuser% /passwordchg:no /fullname:%myfullname%\n. I would model it exactly how FTP(S) User Isolation is configured now (via IIS), admins familiar with FTP can apply the same mental logic to ssh configuration.\nIf the user ssh configuration (keys) are stored under the user profile's SID registry, that makes sense. I think tying it to a profile path (default or otherwise) may not be the best direction. SSH user arent signing into Windows desktop, which is when the profile dir's (pictures, videos, etc.) are created the first time a user signs into the desktop. SSH users are nothing more than remote FTP users looking to transfer files. I checked my current FTP(S) users, there is no profile directories created (they only FTP via winscp or filezilla). \nI simpler (I think) method would be to add a couple of SSH params.\nSSH_User_Isolation=Yes/No\nSSH_User_Physical_Dir=F:\\FTPRoot\\\nso a user 'JOHN' would be restricted to F:\\FTPRoot\\JOHN\\\nOr dont reinvent something that has been solved in a similar manner with cygwin, use that as a model to define your user isolation too, i think its defined in etc\\passwd file which is their user configuration file. This too would help with understanding by using similar configs.\n. Makes sense, I dont have a Unix background. Keep after it, I think a good implementation of user isolation is a crucial piece of Win32-SSH.\nThanks for your hard work.. ",
    "wl2776": "This code sets it: https://github.com/PowerShell/Win32-OpenSSH/blob/L1/sftp-server.c#L2040\n. ",
    "vors": "This may work\nrunas.exe /savecred /user:administrator <command>\nFrom\nhttp://stackoverflow.com/questions/8249705/how-to-run-an-application-as-run-as-administrator-from-the-command-prompt\nNote that you need to replace administrator by the real administrator name on the machine.\n. ",
    "jasonkuehl": "Yep, that hit the nail on the head. Thank you.\n. ",
    "Gondee": "So this is resolved with the latest release? \nEdit: Updated the OpenSSH executables, and still getting this error: \ncom.jcraft.jsch.JSchException: java.io.IOException: channel is broken\n. Have you found any more information on the issue? \n. @grepwood Powershell I'm not sure. If you switch AUTH to debug, you will see the .log files in the directory where OpenSSH is installed. Here is the log when my pipe breaks\n12848 11:52:52 877 client pid 4480 connected on \\\\.\\pipe\\ssh-keyagent\n12848 11:52:52 878 debug1: spawned child 6976 to process 3\n6976 11:52:52 890 agent_start pid:6976, dbg:0, child:1, pipe:344\n6976 11:52:52 891 debug1: connection io 000000000044EC40 #bytes:0 state:0\n6976 11:52:52 891 debug1: connection 000000000044EC40 clean up\n6976 11:52:52 891 debug1: iocp error: 6 on 0000000000000000\n. Testing from Linux yields Broken Pipe Error. sftp error log doesnt fill either. \n. @manojampalam please excuse my inexperience with this. Can you point me in the right direction as to how to enable the SFTP server subsystem? \n. I am having this issue as well. Interestingly, of my Open SSH Win32 Nodes, 32 bit ones dont have this issue. I have temporarily remedied this by including [Environment]::Exit(1) at the end of all powershell commands\n. ",
    "rayhayes": "Yes. I'm working on it now. I'll make a point to test from at least OSX.\n. It was an issue with the way the console was handling the output. Should be fixed in next release.\n. According to the doc variables are added from the file ~/.ssh/environment file in the format VARNAME=value . There's a setting in sshd_config PermitUserEnvironment.\n. ",
    "anotherjarvi": "Yep, also having issues using up arrow/down arrow for history\n. ",
    "hach-que": "I'm running into this as well.  It's a major issue for us as we're trying to use SSHD to control a Windows build agent, and some of our build commands are longer than this length.\n. This is the command I'm connecting with from a Linux machine:\nssh -vvv -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o BatchMode=yes -l Build -p 22 -i sshkey 10.1.1.204 -- cmd.exe\n. When I run the ssh agent manually from the command line I get:\nC:\\WINDOWS\\system32>\"C:\\Program Files\\OpenSSH-Win64\\ssh-agent.exe\"\nagent_start pid:3660, dbg:1, child:0, pipe:0\nclient pid 5996 connected on \\\\.\\pipe\\ssh-authagent\ndebug1: connection io 0000019EBE754250 #bytes:0 state:0\ndebug1: connection io 0000019EBE754250 #bytes:4 state:1\ndebug1: connection io 0000019EBE754250 #bytes:962 state:2\ndebug1: client type: 1\ndebug1: unable to generate user token\ndebug1: connection 0000019EBE754250 clean up\ndebug1: iocp error: 6 on 0000000000000000\n. Even when running under cmd as SYSTEM, I still get this from ssh-agent:\n```\nC:\\WINDOWS\\system32>\"C:\\program files\\OpenSSH-Win64\\ssh-agent.exe\"\nagent_start pid:4404, dbg:1, child:0, pipe:0\nclient pid 1204 connected on \\.\\pipe\\ssh-keyagent\ndebug1: connection io 00000289D6A72DA0 #bytes:0 state:0\ndebug1: connection 00000289D6A72DA0 clean up\ndebug1: iocp error: 6 on 0000000000000000\nC:\\WINDOWS\\system32>\"C:\\program files\\OpenSSH-Win64\\ssh-agent.exe\"\nagent_start pid:900, dbg:1, child:0, pipe:0\nclient pid 1204 connected on \\.\\pipe\\ssh-authagent\ndebug1: connection io 0000017E35381FD0 #bytes:0 state:0\ndebug1: connection io 0000017E35381FD0 #bytes:4 state:1\ndebug1: connection io 0000017E35381FD0 #bytes:994 state:2\ndebug1: client type: 1\ndebug1: unable to generate user token\ndebug1: connection 0000017E35381FD0 clean up\ndebug1: iocp error: 6 on 0000000000000000\n``\n. I'm now trying a previous version with:choco upgrade -y win32-openssh  -version 2016.04.05 -params '\"/SSHServerFeature /KeyBasedAuthenticationFeature\"' --allow-downgrade`\n. Now I'm getting:\n1204 15:13:20 077 debug1: LsaRegisterLogonProcess()...\n1204 15:13:20 077 debug1: Retrieving Authentification Package ID...\n1204 15:13:20 077 debug1: SSH-LSA package not found. (err = 0, ntStat = c00000fe).\nThese logs are from sshd running as a service (I set LogLevel to DEBUG).\nAs I restarted my computer after running choco, Windows configured and installed updates - I'm wondering whether this could have impacted the registration of SSH-LSA.\n. So I ran the same query that install-sshlsa.ps1 runs to check if SSH-LSA is present, and according to my registry, I have the following providers installed:\nmsv1_0\nnxlsa\nmsv1_0\\0ssh-lsa.dll\nssh-lsa\nThis is from running and writing out $arr:\n$subkey = 'SYSTEM\\CurrentControlSet\\Control\\Lsa'\n$value  = 'Authentication Packages'\n$reg = [Microsoft.Win32.RegistryKey]::OpenBaseKey('LocalMachine', 0)\n$key = $reg.OpenSubKey($subkey, $true)\n$arr = $key.GetValue($value)\nThe third option in that list, msv1_0\\0ssh-lsa.dll looks almost certainly wrong.  I'll try removing that entry manually and see if that was the cause of my issue.\n. I ran the following to update the registry key for anyone else having this problem who visited this task:\n$subkey = 'SYSTEM\\CurrentControlSet\\Control\\Lsa'\n$value  = 'Authentication Packages'\n$reg = [Microsoft.Win32.RegistryKey]::OpenBaseKey('LocalMachine', 0)\n$key = $reg.OpenSubKey($subkey, $true)\n$arr = @(\"msv1_0\",\"nxlsa\",\"ssh-lsa\")\n$key.SetValue($value, [string[]]$arr, 'MultiString')\n. Well now I'm getting further, though my NoMachine client can't connect any more which is inconvenient to say the least...\n324 15:25:36 868 debug1: -> LsaLogon()...\n324 15:25:36 868 debug1: Checking args...\n324 15:25:36 868 debug1: Setting up LSA Strings...\n324 15:25:36 871 debug1: LsaRegisterLogonProcess()...\n324 15:25:36 871 debug1: Retrieving Authentification Package ID...\n324 15:25:36 872 debug1: Allocating LsaAuth struct...\n324 15:25:36 872 debug3: Checking args...\n324 15:25:36 873 debug3: Adding authorized file [.ssh/authorized_keys] to LsaAuth...\n324 15:25:36 873 debug3: Computing total size of LsaAuth...\n324 15:25:36 873 debug3: Allocating new LsaAuth structure...\n324 15:25:36 873 debug3: Filling up LsaAuth struct...\n324 15:25:36 873 debug3: Converting [.ssh/authorized_keys] to UTF8...\n324 15:25:36 873 debug1: Setting up TOKEN_SOURCE...\n324 15:25:36 873 debug1: Login attemp...\n324 15:25:37 079 debug1: SSH-LSA authorization failed. (err = 0, ntStat = c000006d).\n324 15:25:37 079 debug1: <- LsaLogon()...\n. Oh, looks like I had left in -l 'Build@DESKTOP-6HA7KPM' in my SSH client command during earlier testing.  Once I corrected that to -l 'Build', everything started working.\nMy guess is that either the Win32 OpenSSH install scripts do weird things when NoMachine has installed it's authentication provider, and that they're (at least for the moment), incompatible.  Once you install the SSH-LSA provider, it doesn't look like NoMachine is able to open any more sessions (even when it's listed as the second authentication provider).\n. I'm pretty sure this Win32-specific code near here:\nhttps://github.com/PowerShell/Win32-OpenSSH/blob/946ed7d29761cfe239f1b80f08920b88f2236f42/session.c#L759\nNeeds something similar to:\nhttps://github.com/PowerShell/Win32-OpenSSH/blob/946ed7d29761cfe239f1b80f08920b88f2236f42/session.c#L1751\nProbably:\nif (original_command)\n    SetEnvironmentVariable(\"SSH_ORIGINAL_COMMAND\", original_command);\n. ",
    "gquerret": "Issue seems to be fixed in 0.0.5.0, I was able to execute a long command line in a small test environment. . ",
    "pkolonay": "Sorry for my confusion but... I thought sshd had to be run as administrator. Could you please help me understand how a non-administrative user can run sshd.\nThanks\n. ",
    "lostmsu": "@pkolonay , SSHd does not have to run as administrator. If user provides a password to connect, SSHd can impersonate him in the system with the provided password. You only need administrative privileges, for key-based authorization. After SSHd confirms user by his key, it still needs to impersonate him in the system, and only administrative processes can do that without user's password.\nSee http://serverfault.com/questions/344295/is-it-possible-to-run-sshd-as-a-normal-user\n. In fact, this check should always just be a warning.\n. @cozawariat no, I don't think so. Without this change, it would not let you connect at all.\n. ",
    "cozawariat": "Is this why I get an error: \"cannot create process as new user\" after connecting and trying to execute any command?\n```\n...\nStarting session: shell on console for eur\\kw70987 from 172.23.80.100 port 63458\ndebug1: pipe - read end: handle:0000000000000198, io:0000005765ACB520, fd:6\ndebug1: pipe - write end: handle:000000000000019C, io:0000005765ADF2D0, fd:7\ndebug1: pipe - read end: handle:00000000000001A0, io:0000005765ADF380, fd:8\ndebug1: pipe - write end: handle:00000000000001A4, io:0000005765ADF430, fd:9\ndebug1: pipe - read end: handle:00000000000001A8, io:0000005765ADF4E0, fd:10\ndebug1: pipe - write end: handle:00000000000001AC, io:0000005765ADF590, fd:11\ndebug1: -> GetHomeDirFromToken()...\ndebug1: <- GetHomeDirFromToken()...\ndebug1: Executing command: ssh-shellhost.exe\ndebug1: ERROR. Cannot create process as new user (1314).\n```\n. ",
    "mesmariusz": "Thank you. Now it works: http://filmy.elektroda.net/48_1458924598.mp4\nOnly one question mark: why 'new line' (enter) works so oddly ?\n. ",
    "C-Duv": "I had issues when execution PowerShell scripts from a .bat script that I started via a SSH session.\nI've stepped onto this GH issue but in my case I wanted to run PowerShell scripts, not PowerShell interactive console.\nSteps:\n\nI open an SSH session to a Windows 7 workstation\nI type the following command: C:\\foobar\\install.bat\ninstall.bat script hangs in the middle of it's execution\n\nFiles\ninstall.bat:\nBatch\n@echo off\necho Starting\ncmd.exe /C powershell.exe -File \"file1.ps1\"\necho Done with file1\ncmd.exe /C powershell.exe -File \"file2.ps1\"\necho Done with file2\nfile1.ps1:\nBatch\nWrite-Host \"EOF file1\"\nfile2.ps1:\nBatch\nWrite-Host \"EOF file2\"\nScript would only print:\ninstall.bat\n           Starting\nEOF file1\n         _\nAnd hangs. I had to press [Enter] for the file2.ps1 to run:\n```\ninstall.bat\n           Starting\nEOF file1\nDone with file1\nEOF file2\n         _\n```\nAnd once more for the install.bat to end:\n```\ninstall.bat\n           Starting\nEOF file1\nDone with file1\nEOF file2\nDone with file2\n```\nIn my real use case, the stuff the file1.ps1 was doing (calling external binaries) made the \"[Enter]-trick\" not working (I had to kill the Powershell process).\nMy solution:\nUse the -InputFormat None powershell.exe's option:\ninstall.bat:\nBatch\n@echo off\necho Starting\ncmd.exe /C powershell.exe -InputFormat None -File \"file1.ps1\"\necho Done with file1\ncmd.exe /C powershell.exe -InputFormat None -File \"file2.ps1\"\necho Done with file2\nOutputs:\ninstall.bat\n           Starting\nEOF file1\n         Done with file1\nEOF file2\n         Done with file2\nLet's hope this help someone.\n. Even at DEBUG3 I get nothing in the c:\\Program Files\\OpenSSH-Win64\\Logs\\sshd.log (is it really the place I have to look?).\nCPU consumption happens the moment I start the service, no matter if there are clients or not.. I tried the following versions, all have the issue:\n\n0.0.10.0\n0.0.9.20170313\n0.0.9.20170311\n0.0.9.0\n\n(v0.0.8.0 does not installs because of DarwinJS/ChocoPackages#26)\nI have the same problem on another Windows 7, with the OpenSSH that was packaged with Chocolatey package win32-openssh version 2016.05.30.\nBut, I tested on a Windows 7 VM that never gets Windows Updates: no issue there (with v0.0.10.0).. Not really familiar with it.\nI downloaded both symbols and source code (for v0.0.10.0).\nI managed to attach to running sshd.exe process and clicked \"Break\", gave it the location of source file socketio.c (contrib/win32/win32compat/socketio.c on the repo).\nVS complains about source file being different than the one used when generating the module, but I get the following stack trace:\nsshd.exe!socketio_acceptEx(w32_io * pio) Line 111\nsshd.exe!socketio_on_select(w32_io * pio, int rd) Line 908\nsshd.exe!w32_io_on_select(w32_io * pio, int rd) Line 177\nsshd.exe!w32_select(int fds, w32_fd_set_ * readfds, w32_fd_set_ * writefds, w32_fd_set_ * exceptfds, const timeval * timeout) Line 641\nsshd.exe!server_accept_loop(int * sock_in, int * sock_out, int * newsock, int * config_s) Line 1173\nsshd.exe!main(int ac, char * * av) Line 1982\nsshd.exe!sshd_main(int argc, wchar_t * * wargv) Line 123\nsshd.exe!scm_start_service(unsigned long num, wchar_t * * args) Line 145\n\nAt sshd.exe!socketio_acceptEx(w32_io * pio) I am in socketio.c at:\n```C\n/ initiate async acceptEx/\n/ TODO - always return 0, set error in context, accept() will pick it up/\nint\nsocketio_acceptEx(struct w32_io pio)\n{\n    struct acceptEx_context context;\n    debug3(\"acceptEx - io:%p\", pio);\n    context = (struct acceptEx_context *)pio->internal.context;\n    ResetEvent(pio->read_overlapped.hEvent);\n/* create accepting socket */\ncontext->accept_socket = socket(AF_UNSPEC, SOCK_STREAM, IPPROTO_TCP);    // THIS IS LINE 111\nif (context->accept_socket == INVALID_SOCKET) {\n    errno = errno_from_WSALastError();\n    debug(\"acceptEx - socket() ERROR:%d, io:%p\", errno, pio);\n    return -1;\n}\n\nif (TRUE == context->lpfnAcceptEx(pio->sock,\n                context->accept_socket,\n                context->lpOutputBuf,\n                0,\n                sizeof(SOCKADDR_STORAGE) + 16,\n                sizeof(SOCKADDR_STORAGE) + 16,\n                &context->bytes_received,\n                &pio->read_overlapped))\n{\n    /* we are already connected. Set event so subsequent select will catch */\n    SetEvent(pio->read_overlapped.hEvent);\n} else {\n    /* if overlapped io is in progress, we are good */\n    if (WSAGetLastError() != ERROR_IO_PENDING) {\n        errno = errno_from_WSALastError();\n        debug(\"acceptEx - AcceptEx() ERROR:%d, io:%p\", errno, pio);\n        return -1;\n    }\n}\n\npio->read_details.pending = TRUE;\nreturn 0;\n\n}\n```\nAfter a few \"Continue\" + \"Break\" I also breaked into:\nsshd.exe!wait_for_any_event(void * * events, int num_events, unsigned long milli_seconds) Line 291\nsshd.exe!w32_select(int fds, w32_fd_set_ * readfds, w32_fd_set_ * writefds, w32_fd_set_ * exceptfds, const timeval * timeout) Line 667\nsshd.exe!server_accept_loop(int * sock_in, int * sock_out, int * newsock, int * config_s) Line 1173\nsshd.exe!main(int ac, char * * av) Line 1982\nsshd.exe!sshd_main(int argc, wchar_t * * wargv) Line 123\nsshd.exe!scm_start_service(unsigned long num, wchar_t * * args) Line 145\n\nalso:\nsshd.exe!wait_for_any_event(void * * events, int num_events, unsigned long milli_seconds) Line 291\nsshd.exe!w32_select(int fds, w32_fd_set_ * readfds, w32_fd_set_ * writefds, w32_fd_set_ * exceptfds, const timeval * timeout) Line 667\nsshd.exe!server_accept_loop(int * sock_in, int * sock_out, int * newsock, int * config_s) Line 1173\nsshd.exe!main(int ac, char * * av) Line 1982\nsshd.exe!sshd_main(int argc, wchar_t * * wargv) Line 123\nsshd.exe!scm_start_service(unsigned long num, wchar_t * * args) Line 145\n\nAt sshd.exe!wait_for_any_event(void * * events, int num_events, unsigned long milli_seconds) I am in signal.c at:\nC\n// [...]\n    } else {\n        DWORD ret = SleepEx(milli_seconds, TRUE);    // THIS IS LINE 291\n        if (ret == WAIT_IO_COMPLETION) {\n            /* APC processed due to IO or signal*/\n        } else if (ret == 0) {\n            /* timed out */\n            return 0;\n        } else { /* some other error */\n            errno = EOTHER;\n            debug(\"ERROR: unxpected SleepEx error: %d\", ret);\n            return -1;\n        }\n    }\nand:\nsshd.exe!socketio_accept(w32_io * pio, sockaddr * addr, int * addrlen) Line 719\nsshd.exe!w32_accept(int fd, sockaddr * addr, int * addrlen) Line 239\nsshd.exe!server_accept_loop(int * sock_in, int * sock_out, int * newsock, int * config_s) Line 1204\nsshd.exe!main(int ac, char * * av) Line 1982\nsshd.exe!sshd_main(int argc, wchar_t * * wargv) Line 123\nsshd.exe!scm_start_service(unsigned long num, wchar_t * * args) Line 145\n\nAt sshd.exe!socketio_accept(w32_io * pio, sockaddr * addr, int * addrlen) I am in socketio.c at:\n```C\n// [...]\non_error:\n    if (context->accept_socket != INVALID_SOCKET) {\n        closesocket(context->accept_socket);\n        context->accept_socket = INVALID_SOCKET;    // THIS IS LINE 719\n    }\nreturn NULL;\n\n}\n```\nI noticed that when a SSH client is getting prompted for the password another sshd.exe process is spawned (as a child of the core-eater one): this one does not seems to abuse CPU (it's at 0%).. What do you call \"high CPU usage\"?\nIn #580 I get full core's CPU usage but no log (same OS, same OpenSSH version).. Here are the .etl and .cab files in a single archive (no SSH logs because sshd.log stays empty...).\nWin32-OpenSSH-bug_606-nettrace.zip\nAfter setting AddressFamily inet in sshd_config CPU usage of sshd.exe is just fine (0%).. Tested plain new installation of v0.0.12.0 (via Chocolatey): Issue is gone, thanks. :+1:. ",
    "michael-basil": "Which release or commit works?\nOn May 18, 2016 12:20 AM, \"Jeff Waugh\" notifications@github.com wrote:\n\nLooks like this has regressed as of the May 15 release, at least for\ninstallation and configuration:\nntrights.exe doesn't work on Nano Server, so the required privileges\ncan't be given to to NT SERVICE\\SSHD in the install script. There doesn't\nappear to be a native way to modify those privileges by PowerShell /\ncommand line, but cmdlets in the third-party PSCX module may work.\nPlus, psexec.exe doesn't work on Nano Server, so we can't register the\nhost keys as SYSTEM using that method.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/168#issuecomment-219927842\n. Thanks\n\nOn Wed, May 18, 2016 at 8:44 AM, Jeff Waugh notifications@github.com\nwrote:\n\nThe April 5 release\nhttps://github.com/PowerShell/Win32-OpenSSH/releases/tag/4_5_2016\ninstalled and ran well on Nano Server TP 5.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/168#issuecomment-220029993\n\n\nMichael Basil\nLinkedIn https://www.linkedin.com/in/michaelrbasil\nNoOps Chicago http://noopschicago.com/\n. ",
    "oleg-nenashev": "We see the same issue on one of Jenkins instances. Use-case: connection of Windows slaves via https://github.com/jenkinsci/ssh-slaves-plugin \n. ",
    "trickv": "I've run into the same issue, with openssh-win64 version 3_19_2016-1.1 on Windows Server 2012 original.  Probably the \"regressions\" mentioned in the release notes for this version.  Switching back to the 2_25_2016 build reverts this behavior.\n```\n$ ssh -l Administrator@foobar.bazbar.tv dev-dsc01.foobar.bazbar.tv\nAdministrator@foobar.bazbar.tv@dev-dsc01.foobar.bazbar.tv's password: \nMicrosoft Windows [Version 6.2.9200]\n(c) 2012 Microsoft Corporation. All rights reserved.\nAdministrator@foobar.bazbar.tv@DEV-DSC01 C:\\Users\\Administrator.FOOBAR_BAZBAR>\n                                                                          Administrator@foobar.bazbar.tv@DEV-DSC01 C:\\Users\\Administrator.FOOBAR_BAZBAR>\n\n                                                                        Administrator@foobar.bazbar.tv@DEV-DSC01 C:\\Users\\Administrator.FOOBAR_BAZBAR>ls\n                                                                        'ls' is not recognized as an internal or external command,\n\noperable program or batch file.\n```\n. ",
    "dmitrybezer": "I'm using the 5_15_2016 release and the problem is still here. I'm unable to connect from a mac. And the key exchange algorithm doesn't seem to be the issue here because even if I force ssh clients on mac and windows to use the same algorithm  (using this option -oKexAlgorithms=diffie-hellman-group-exchange-sha256) connection from windows works fine while mac client fails with exactly the same message log as @paulewog  provided.\n. ",
    "MrStenz": "I ran the keygen -t RSA command which created the id_rsa and id_rsa.pub. For WinSCP I did have to run the Putty conversion, but again, still resulted in the same error.\nSeems permissions related, but I'm unsure where to begin when I'm using local admin.\n. I am running it as a service. As Local System (default when installing as service), I receive this error:\nSSH-LSA package not found. (err = 0, ntStat = c00000fe).\nWhen I switch service to Local Admin, I'm receiving the OP error:\nCannot logon using LSA package (err = 1300, ntStat = c0000041)\nThis is a brand new deployed 2012R2 server, nothing else loaded and fully patched. I'm just confused that it seems permissions related, but local admin has all the rights that I can see. Clearly I'm missing something, but followed wiki line by line. I also just deployed the latest package, but still the exact same error.\n. ",
    "Ch-Fr": "Well, I was also unable to connect using the public key method. Copied the public key %systemdrive%\\users\\user.ssh\\authorized_keys and tried to connect but public key auth was skipped and password auth was taken.\nThen I found a hint on the net stating that this is because of the sshd being started as a service by Local System account which can't read the users authorized_keys file. Solution: stop the service and start sshd by hand as that user who tries to log into the machine. That's what I successfully did.\nThat does not seem like a good solution but maybe it helps on fixing that problem for devs and users ...\n. ",
    "SkyRider64": "After many hours of trying to get public key authentication working and seeing the same error \"SSH-LSA package not found\" I have finally made it. The problem was, that I have installed (unpacked) the zip to C:\\OpenSSH-Win32 and not to the recommended 'Program Files'. I did follow all the other installation steps and the installation was succesfull, except for the key authentication not working. I have checked the registry and the ssh-lsa part was where it was supposed to be, ssh-lsa.dll was in c:\\windows\\system32, everything seemed to be OK... but it didn't work. The simple solution was to uninstall everything and reinstall to C:\\Program Files\\OpenSSH-Win64, with the required reboot after installation of sshlsa. \n. ",
    "hbjastad": "I have the same problem, and I think I've gone through the same verification steps as above.\nCan we reopen this issue, or should we create a new?\n. #253 Seems like a new issue was already created\n. I installed manually, following the instructions, and I am having the same problem. Issue #175 has been closed without a solution. \nThe ssh-agent.log is not very clear (to me):\n```\n3984 17:40:44 643 debug1: iocp error: 109 on 000000FB1212DBE0\n3984 17:40:44 643 debug1: connection 000000FB1212DBE0 clean up\n3984 17:40:44 643 debug1: iocp error: 6 on 0000000000000000\n```\n. ",
    "larsimmisch": "For the record: I could fix my public key authentication problems following the suggestion from @SkyRider64 and reinstalling Win32-OpenSSH in c:\\Program Files\\OpenSSH-Win64. Attached are the log file with DEBUG3 and the configuration .\nsshd.log\nsshd_config.txt\nI do have the sneaking suspicion that the far end closes the connection. Have you got any idea where to look on the other side? This may be a bug in the Java SSH libraries, apparently both Trilead SSH and Apache MINA are affected. Over at https://issues.jenkins-ci.org/browse/JENKINS-42856, Stephen Connolly said:\n\nI spent 3 weeks banging my head against that, it happens with both Trilead SSH and Apache MINA SSH java libraries.\n\nBTW: thank you for this project and your work on it and thank you for doing it out in the open.. ",
    "janwilmans": "sorry the mess in the previous comment, I can seem to edit it anymore.\nin case of user 'jan' to works fine.\nin case of user 'wortel' the logging in the sshd.log is exactly the same, but the client connection is lost immediately after login.\nC:\\temp\\OpenSSH-Win32>ssh localhost -l wortel\nwortel@localhost's password:\npacket_write_wait: Connection to ::1: Unknown error\nC:\\temp\\OpenSSH-Win32>\n. ",
    "fptstl": "!bump!\n. ",
    "yakimant": "@manojampalam, how to run 3rd party bash as a default shell?\n. ",
    "gamma": "I tried using the ForceCommand, which works for my case, but then it has problems with the sftp subsystem using the same command instead of the specified subsystem command ...\n. ",
    "iticory": "Now that the Linux Subsystem for Windows has been publicly available for a while and I've had some exposure to it, I'm unclear how this potential integration would work.  Perhaps MS-CAPI materials can be exposed through a PKCS#11 virtual device?\nCoincidentally, it appears that the author of PuTTY-CAC is working on something similar:\nhttps://github.com/risacher/p11-capi\n. ",
    "scottmckenzie": "Are you using the syntax powershell -File - as per https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples ?\n. That is the syntax to get an interactive session with powershell.\n. Are you using $env:HOME to access the environment variable?  This works for me in a powershell session.\n. $home is a powershell variable.  If you have not assigned it a value it will be null.  To access environment variables in powershell you must you the syntax $Env:ENVVARIABLENAME.\nhttps://technet.microsoft.com/en-us/library/ff730964.aspx\n. ",
    "covici": "No, I want an interactive session with powershell.\nScott McKenzie notifications@github.com wrote:\n\nAre you using the syntax powershell -File - as per https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples ?\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/188#issuecomment-212157121\n\nAlternatives:\n\n\n\nYour life is like a penny.  You're going to lose it.  The question is:\nHow do\nyou spend it?\nJohn Covici\n     covici@ccs.covici.com\n. OK, you are correct, in a sense, but for some reason, once I execute\nthat command the  environment variables seem not to work.  I have  a\nfile called $HOME/something, but ps can't find it because it thinks home\nis hnot set.  Now I notice that exiting out of the command prompt, I can\nno longer open a new session  -- the connection just hangs.\nScott McKenzie notifications@github.com wrote:\n\nThat is the syntax to get an interactive session with powershell.\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/188#issuecomment-212253387\n\nAlternatives:\n\n\n\nYour life is like a penny.  You're going to lose it.  The question is:\nHow do\nyou spend it?\nJohn Covici\n     covici@ccs.covici.com\n. No, its just $home as part of a filename which imports my command\nhistory.\nScott McKenzie notifications@github.com wrote:\n\nAre you using $env:HOME to access the environment variable?  This works for me in a powershell session.\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/188#issuecomment-212377247\n\nAlternatives:\n\n\n\nYour life is like a penny.  You're going to lose it.  The question is:\nHow do\nyou spend it?\nJohn Covici\n     covici@ccs.covici.com\n. hmmm, on my local session, I don't have this problem i.e. in my user\nvariables I have a value for HOME which is recognized by powershell.\nBut I guess when logging in through ssh, those user variables are not\nrecognized by powershell when I try to run it from ssh.\nScott McKenzie notifications@github.com wrote:\n\n$home is a powershell variable.  If you have not assigned it a value it will be null.  To access environment variables in powershell you must you the syntax $Env:ENVVARIABLENAME.\nhttps://technet.microsoft.com/en-us/library/ff730964.aspx\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/188#issuecomment-213151562\n\nAlternatives:\n\n\n\nYour life is like a penny.  You're going to lose it.  The question is:\nHow do\nyou spend it?\nJohn Covici\n     covici@ccs.covici.com\n. I am using password authentication.  If I log in and do a set  command\nwith no arguments, I  do see home, but powershell does not, it seems.\nAt least, it is not seeing it initially, once in there if I do\nset-location env:, HOME does show up, if I do dir, so I am not sure what\nis happening here.\nI wish tab would work, otherwise powershell is  pretty hard to use.\nJoey Aiello notifications@github.com wrote:\n\n@covici is right here, $HOME is an automatic variable that should be populated regardless of whether you're using SSH. \nI'm not getting a repro here. I logged on using password-based auth (both on a domain-joined account and a local account), and $HOME works fine. Didn't try with key-based auth though, are you using that? \nThere is an extra newline above the path itself when it's get spit out to the console. Maybe that's what's giving you grief? Although as long as you're using the *-Path cmdlets you should be okay ($HOME | Test-Path returns True for me). \n\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub:\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/188#issuecomment-213579551\n\nAlternatives:\n\n\n\nYour life is like a penny.  You're going to lose it.  The question is:\nHow do\nyou spend it?\nJohn Covici\n     covici@ccs.covici.com\n. Well, something strange is happening, when I invoke ps from the host,  I\nsee lots more environment variables  maybe because I am running as\nadministrator -- so how can I do that from the ssh?\nJoey Aiello notifications@github.com wrote:\n\n@covici is right here, $HOME is an automatic variable that should be populated regardless of whether you're using SSH. \nI'm not getting a repro here. I logged on using password-based auth (both on a domain-joined account and a local account), and $HOME works fine. Didn't try with key-based auth though, are you using that? \nThere is an extra newline above the path itself when it's get spit out to the console. Maybe that's what's giving you grief? Although as long as you're using the *-Path cmdlets you should be okay ($HOME | Test-Path returns True for me). \n\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub:\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/188#issuecomment-213579551\n\nAlternatives:\n\n\n\nYour life is like a penny.  You're going to lose it.  The question is:\nHow do\nyou spend it?\nJohn Covici\n     covici@ccs.covici.com\n. ",
    "joeyaiello": "@covici is right here, $HOME is an automatic variable that should be populated regardless of whether you're using SSH. \nI'm not getting a repro here. I logged on using password-based auth (both on a domain-joined account and a local account), and $HOME works fine. Didn't try with key-based auth though, are you using that? \nThere is an extra newline above the path itself when it's get spit out to the console. Maybe that's what's giving you grief? Although as long as you're using the *-Path cmdlets you should be okay ($HOME | Test-Path returns True for me). \n. Thanks so much for all the help @DarwinJS. Just got 0.0.0.9 working on a Nano box with your process and installer script. We're currently working through some of the problems introduced with 0.0.1.0 (which, heads up to everyone, doesn't currently work with Nano). \n. > which offline method\nI'm not sure I understand...I just followed your intstructions here because I had an RTM Nano build without Invoke-WebRequest. If you're asking how I fetched the nupkg, I have the Chocolatey repo registered as a PackageManagement repository, and I just used Save-Package. Then I pushed that thing to Nano with Copy-Item -ToSession\n. Sorry for the confusion, everyone. The \"Microsoft SSH Server\" is installed when you enable developer mode but is unrelated to the Windows Subsystem for Linux. As @jdunn0 said, it's used for the very specific scenario of deploying and testing UWP apps. You can read more about the server and scenario here: https://msdn.microsoft.com/en-us/windows/uwp/get-started/enable-your-device-for-development#ssh\n@DarwinJS: the OpenSSH releases from this repo install fine side-by-side with the \"Microsoft SSH Server\". If you want to run both of them at the same time, you do have to run the OpenSSH sshd on a port other than 22. You can do this by changing the Port 22' line in yoursshd_config`. Quoting from the official OpenSSH docs:\n\nPort: Specifies the port number that sshd(8) listens on.  The default is 22.  Multiple options of this type are permitted.  See also ListenAddress.\n\nPersonally, I just disable both the \"SSH Server Broker\" and \"SSH Server Proxy\" services as soon as I enable developer mode, and everything OpenSSH runs perfectly fine. \nI do want to be very clear: for what you'd consider \"traditional\" SSH scenarios (basically everything except UWP scenarios), we are going with OpenSSH. Right now, the \"Microsoft SSH Server\" doesn't support interactive scenarios, tunneling, SFTP/SCP, etc., and there are currently no plans to extend the \"Microsoft SSH Server\" to support anything except UWP deployment. We're also working with the team that owns the \"Microsoft SSH Server\" to understand how we can avoid forcing everyone with developer mode enabled to use a non-standard SSH port. As soon as we have something to share there, we'll let you guys know. \n. Yeah, I think we'd probably prefer for that functionality not to exist in OpenSSH itself, so a runtime switch on the Chocolatey install sounds like a totally reasonable approach to me. \n\nUnfortunately it seems like this could be a relatively common conflict since those interested in SSH are probably also interested in bash.\n\nYeah, you're absolutely right. That's why we really are looking to solve this in a way that doesn't restrict OpenSSH or force users to look around for a solution (like you had to). \n. @ylluminate preaching to the choir, my friend. \ud83d\ude04 \nExpect a blog in the next week or two as our bits here make their way into Windows Insiders builds as an optional Feature on Demand. I'll be detailing exactly what you should do to avoid running into issues with the \"Microsoft SSH Server\". . @DarwinJS I should caveat I've written nothing yet. I'm just holding off until the aforementioned FOD is in a stable state. But I'll try to have some helper scripts within the post.\nThe solution will likely be to disable that server altogether with the warning that it will break UWP app deploy/debug scenarios. Unfortunately, that server cannot be reconfigured to use another port (but I'd rather that our OpenSSH users stay with port 22). . I will say that even if you could change the port, the scenario that it supports would not be able to consume the new port.... Renaming the issue to make sure I eventually address this. \ud83d\ude04 . I'm hitting the same thing in sshd.log (both the Bad address error and the malformed/incomplete IPv6 address). \nNote the connection works just fine. . @JamieRRobillardSr yeah, but expected output is still:\nC:\\WINDOWS\\system32> ssh\nusage: ssh [-1246AaCfGgKkMNnqsTtVvXxYy] [-b bind_address] [-c cipher_spec]\n           [-D [bind_address:]port] [-E log_file] [-e escape_char]\n           [-F configfile] [-I pkcs11] [-i identity_file]\n           [-L address] [-l login_name] [-m mac_spec]\n           [-O ctl_cmd] [-o option] [-p port]\n           [-Q cipher | cipher-auth | mac | kex | key]\n           [-R address] [-S ctl_path] [-W host:port]\n           [-w local_tun[:remote_tun]] [user@]hostname [command]\n. Closing as this should work now. If not, feel free to reopen. I can confirm that repros to/from 0.0.9.0. Interestingly, even a remote ls doesn't show the files in the logs directory:\nsftp> pwd\nRemote working directory: /C:/OpenSSH-Win64\nsftp> ls\ninstall-sshd.ps1            install-sshlsa.ps1          logs                        ntrights.exe\nnull                        scp.exe                     sftp-server.exe             sftp.exe\nssh-add.exe                 ssh-agent.exe               ssh-agent.log               ssh-keygen.exe\nssh-lsa.dll                 ssh-shellhost.exe           ssh.exe                     ssh_host_dsa_key\nssh_host_dsa_key.pub        ssh_host_ecdsa_key          ssh_host_ecdsa_key.pub      ssh_host_ed25519_key\nssh_host_ed25519_key.pub    ssh_host_rsa_key            ssh_host_rsa_key.pub        sshd.exe\nsshd.log                    sshd_config                 uninstall-sshd.ps1          uninstall-sshlsa.ps1\nsftp> cd logs\nsftp> ls\nsftp>\nIn actuality that logs folder has three log files in it. . Putting a note here: got some interest in this offline. :). Unfortunately, I don't think we comfortable giving an ETA on this right now. We've given ETAs in the past, and we've had to move the goalposts a couple times. \nWe're certainly making very good progress, and I would encourage you or anyone else to try the latest release to give us a sense of whether it supports your current needs (and, if not, why that is). . The Beta issues is currently the most accurate set of work that needs to be done. You'll notice we have quite a bit of test debt there to tackle. \nOver the next week or two, we're all working on getting data quality taken care of (and it's pretty likely we'll have to take the hit of a migration over to PowerShell/openssh-portable pretty soon here). We've also been experimenting with GitHub Projects over at PowerShell/PowerShell, so that might be something we do here as well. . Hey @rob-scheepens, sorry for the lack of a reply here. I can't share hard dates for production-ready yet, but we did ship as a beta \"feature-on-demand\" in Fall Creators Update/Server 1709. I still need to get a blog out with setup/configuration instructions (keeps falling by the wayside), but expect it soon at http://blogs.msdn.microsoft.com/powershell. Hey @rob-scheepens, you should expect OpenSSH (both client and server) to be \"production-ready\" in the next major feature upgrades of Windows 10 and Windows Server. Expect more release materials and explanation of installation, configuration, etc. as those upgrades are released. \nAlso, the SSH client and ssh-agent are now installed by default. If you don't see that in Windows Insider builds already, you should very soon. . Just want to clarify, we don't currently have any public plan around formally/officially supporting OpenSSH on downlevel versions of Windows. Win7/2008 R2 \"support\" in the sense that we're making it compatible with everything is important to us, and we're investigating how we might be able to support it as an out-of-band application (like PowerShell Core 6 on downlevel platforms, e.g.), but for now it's continuing forward as a \"community supported\" application here on GitHub for those versions of Windows and Windows Server where it isn't included. . @razrjk as an FYI, we do code work out of https://github.com/PowerShell/openssh-portable, and only take drops back to this repo when we do releases. . @agordon that's a really good question! I want to make sure I get the language exactly right, let me get back to you. :) . Just wanted to give an update here that I'm still talking to folks about this. Hoping to provide a real update soon. . Hey @DarwinJS, just finished talking offline with @bingbing8. I should start by saying that it's still not expected that Repair-FilePermission is gone. I have an open PR that actually does that at PowerShell/openssh-portable#242, but it's not in a mergeable state. \nNow, let's talk about what's desired from our end. We need a \"MS-supported\" way for people to both install and configure OpenSSH. \nI am 100% supportive of the work you do to make OpenSSH installable for Chocolatey, and I want to make sure that we work with you to avoid breaking Chocolatey users. Unfortunately (or fortunately, I guess), you've been so awesome about getting this Chocolatey package off the ground, that you've taken a dependency on a module that we really didn't deem \"finished\". To that end, we're going to have to break a few things before reaching the aspirational 1.x SemVer state that you allude to in your first bullet above. \nSo, for installation, \"MS-supported\" means we'll have inbox mechanisms for future versions of Windows (specifically \"features-on-demand\") and (probably) an MSI for downlevel OS's (a la how PowerShell Core currently works). \nNow my current issue is that even for the shipping beta inbox FOD of the OpenSSH server, it's really hard to configure it and get it to work. To that end, we want to ship OpenSSHUtils as a signed, supported module on the Gallery for people to easily install.\nIn said module, I want to expose less of the helper functions that we currently export in OpenSSHUtils (my understanding is that everything was exported as a convenient way to get off the ground), as many of them are not properly prefixed. \nSo now my questions to you:\n How are you using Repair-FilePermission today? \n Is there some kind of helper function(s) that we could expose which accomplishes the same task without needing to call Repair-FilePermission directly?\n If not, could you help me come up with a name that isn't so generic? As it currently stands, the cmdlet sounds like something for repairing broken ACLs. \n Are there any other \"internal\" functions you're calling that we might need to rename? I.e. Other than Repair-FilePermission, what do you need that's not in this FunctionsToExport?\nHopefully that all makes sense. If it doesn't, I'm more than happy to adjust or clarify. . @DarwinJS sorry for the lack of an update. We had some conflicting internal requirements here that I had to work through. \nI know this point really stinks, but I do want to make it again for clarity: we're prepared to make breaking changes and rework the module in order to \"do the right thing\" from a PowerShell design perspective. (And thanks to you, I've got a ton of suggestion above for how we should do this! Some of your design ideas are great, we should get an issue going to ) I'd like to limit the impact to you and the Chocolatey installer, but I also can't optimize for your specific use case (at least, not in the short term, I'll explain below).\nWe agree those are useful helper functions, but we can't justify \"shipping\" an OpenSSHUtils module to the Gallery that exposes them given their generality and \"one-off-ness\". That being said, we need the module published to the PowerShell Gallery so that MSFT customers have an official way to configure the Beta FOD. Therefore, we plan on publishing the OpenSSHUtils module as a 0.1 release to the Gallery with a limited set of exported functions (see PowerShell/openssh-portable#251).\nFor the time being, we're holding off the merge on that PR in order to avoid breaking you in an upcoming release. But if it's possible, we'd really appreciate that you move to the syntax we use to call these internal functions from within our tests:\npowershell\n$m = Get-Module OpenSSHUtils\n& ($m) Get-UserSID ...\nIf you could let us know when it's okay to merge (implying it will be in the next release on Win32-OpenSSH), please let us know. Better yet, if you could decouple and pick up the Gallery version that would be best. \nMore notes about configurability:\nIn a future release (not sure how soon via GitHub builds, but certainly by the next release of Windows), we are planning to implement functionality that will auto-generate host keys at server start time if they don't exist. This should eliminate the need for bootstrapping host keys, but we're not totally closed on how it should work.\nIn the fullness of time, we also want to do an MSI-based installer for downlevel platforms. This should handle as much of the bootstrapping logic as possible. I'd expect that wrapping a well-built MSI is significantly easier than maintaining the logic you currently have in the Chocolatey package. Is that accurate, or am I misguided there? \n(Side note: thank you for all the pointers to your more intelligent logic. As we discussed a million years ago, I still would love to work with you in making sure that it finds its way into our MSI logic.)\nHowever, neither of those points will solve the authorized_keys ACLing problem, which we'll have to continue to address via the OpenSSHUtils (which I'd also expect to find its way inbox at some point).\nI'm hoping that the plan we landed on works for you okay. Please give me any info for what of this doesn't work for you.. Got the blog published: https://blogs.msdn.microsoft.com/powershell/2017/12/15/using-the-openssh-beta-in-windows-10-fall-creators-update-and-windows-server-1709/. We owe you guys some real documentation (not my dinky little blog) now that we're shipping in Windows.\nGenerally speaking, none of the OpenSSH builds on GitHub are formally supported. If you want official support, you have to install via supported Windows channels (in this case, the \"Manage optional features\" button or the DISM cmdlets or commands). \nWe will be updating the inbox version shipping as an optional feature, but it will not be updated as frequently or as quickly as the GitHub builds. But again, you have to stay on the Windows build if you want formal support. . @dwatley: we definitely could have done a better on messaging the versioning (and we owe you a doc topic for sure on our support structure, what GitHub builds mean, etc.)\nAt a high-level: what ships in Windows is supported, and what ships on GitHub is not supported. \nMy understanding is that once we went from 0.0.n.0 releases (which are inherently \"pre-release\" in that they're pre-1.0) to the official upstream OpenSSH version scheme, we appended \"Beta\" to denote that the 7.x releases are not officially/formally supported when downloaded from GitHub. \nSo while we're still maintaining compatibility with downlevel versions of Windows where OpenSSH is not included (e.g. Win 7 or Server 2008 R2), usage on those platforms is covered only by the BSD license shipping as part of OpenSSH (i.e. use it at your own risk). \nWe've thought somewhat about what it might mean to formally support downlevel platforms, but we don't have any plans there today. If you have strict requirements there, please let us know here. . ",
    "troshko111": "Ran into this today - starting PowerShell completely kills ssh server (2012R2 DC) and client. Any ETA for this one? It actually sounds pretty serious blocking issue\n. ",
    "dodyg": "I think this is a related issue https://github.com/PowerShell/Win32-OpenSSH/issues/142\n. ",
    "g1im2": "mark this problem, it was happened to me, and i use python to change the reg and it would be work well.\nadd \"REG_MULTI_SZ\" type values with \"regedit\" and add values with \"ssh-lsa\" to key \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\"\n\"Authentication Packages\"\n. @DarwinJS thanks for your answer, Choco installer just set log silent, but it can't solve my problem, the cpu usage was still high, about 50 percent, and I still can't use public key to connect it. I don't know why, and I found the choco installer do same thing like me if I install by manual, all steps was according by wiki. If you can help me, and give me some analysis method to find this problem, I will be very grateful to you, thanks\n. ",
    "madhavanks26": "@manojampalam i have changed the steps which u have mentioned and now the pc display is not coming ,could please help me with that\nprocess i did\nstep 1: opened regedit\nstep 2: traversed HKLM>system>current controlset >control>lsa\nstep 3: clicked Authentication packages\nstep 4: in that value data is ==> msv1_0\nstep 5: i have changed to /t REG_MULTI_SZ /d msv1_0\\0ssh-lsa.dll -f\nResult : \nPC is booting and display is not coming\nreg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v \"Authentication Packages\" /t REG_MULTI_SZ /d msv1_0\\0ssh-lsa.dll -f\n. ",
    "Jaybernater": "Hi,\nI've found the same issue when installing on w2k3 32 bit also. Is the registry add safe to use?. ",
    "Jonpro03": "reg add HKLM\\System\\CurrentControlSet\\Control\\Lsa /v \"Authentication Packages\" /t REG_MULTI_SZ /d msv1_0\\0ssh-lsa -f\nworks for me (note .dll is missing).. ",
    "scherma": "If after applying the registry update you still experience the issue, try updating .NET and WMI, that fixed this error for me. \nImmediately after fixing that, I found that I could not run the install-sshlsa.ps1 script because 'ssh-lsa.dll is in use by another process'. This was because adding the reg key and restarting appears to cause lsass.exe to use the DLL (confirmed with \"tasklist /m ssh-lsa.dll\"). To solve, remove the extra line from the reg key, reboot, THEN run install-sshlsa.ps1.. ",
    "RodTrevisan": "Does anyone have a solution to this problem?. ",
    "SamuelOrlando": "@scherma  I have recently run into the same issue installing on Server 2016, but I did not have to doing any registry edits to get there.  However, looking at the registry, I do see that the Authentication Packages key with a value of msv1_0 ssh-lsa has been added after installation of the recent version of OpenSSH (v0.0.10.0 - March 14, 2017).  So to complete the key-authorization package installation and get around the ssh-lsa.dll in use error, I can remove the entry, reboot, run the  install-sshlsa.ps1 process, then re-add the registry entry for the Authentication Packages?\nThe SFTP is in use with domain accounts (username/password), but we are adding clients that require key authentication so I need to get it activated and working.. @DarwinJS The package does not install due to the following error:  ERROR:  Method invocation failed because [System.Boolean] does not contain a method named 'split'.  The install of openssh was NOT successful.  Error while running 'C:\\ProgramData\\chocolatey\\lib\\openssh\\tools\\chocolateyinstall.ps1'.\n. @DarwinJS Looks like we are going another route for SSH+FTP solutions.  I will not be able to follow up.. ",
    "jskii": "Confirmed broken functionality.  Impossible as of now to restrict users to any specific folders in this release.  Product unusable as a result.\nHave tried setting ChrootDirectory in application config as above, and also most methods of Windows redirection in user profiles.\n. ",
    "whereisaaron": "One way would to be to create a user with limited file system permissions... except unfortunately Windows ships with the 'Authenticated Users' group added to the 'Users' group, making it impossible to create a user with limited file system permissions (less than 'Users' has). You can remove 'Authenticated Users' from the 'Users' group, but since no one, including Microsoft, tests that way, it is unknowable how many things would break or subtly misbehave. But if you are building a fresh Windows instance, this could be one approach to try.\n. It seems like #140 and #190 have been closed without adding the missing path restriction feature.  An actual chroot jail if not required (or possible it seems), only the ability to restrict a sftp user's sftp transactions to a specific folder. Other Windows sftp servers simulate the path restriction within the sftp server. OpenSSH sftp module could be patched the same way.\nPush it to some way-future milestone, but this is a core sftp feature that should be on the road map.\n. Hi @manojampalam thanks for your work on OpenSSH, it is great to see.\nI think we (users) understand than a 'real' chroot for ssh is in the too hard basket, since there is no OS support. However we are just looking for a simulated chroot that contains sftp users to a folder (by manipulation/validation of the file paths or a folder mount perhaps). Check out the Microsoft IIS FTP Server and the Bisvise SSH Server for Windows an implementations of folder isolation for sftp/FTP users. \nMaybe you could implement this with Windows folder mounts? Mount the target chroot folder as a no-drive-letter volume, and the restrict the sftp user to that volume?\nFor an sftp server this is pretty core functionality, and the reason we can't use the OpenSSH port right now for sftp.. Third-party Windows ssh/sftp server implementations do provide chroot-equivalent functionality for sftp folder access. They basically validate the sftp commands to prevent access outside the 'chroot' folder. MS would need to implement or agree to something similar for OpenSSH, or add process jail support to Windows.\nI investigated using Windows/NTFS file permissions to achieve a similar result, but the problem is that Windows gives very broad permissions to 'Authenticated Users' to the whole file system by default, impacting even system accounts. You can change those, but who know what will break throughout Windows if you do. And it is doubtful MS or vendors ever test their software with other than this permissive default \ud83d\ude1e . @NoMoreFood I was thinking of two products in particular. The Microsoft FTP Server, which provide chroot-like behaviour for FTP access. And the Bitvise SSH/SFTP server which also provides chroot-like behaviour, definitely for sftp (which is what I've used it for), and for 'ssh' it is supported if you use the 'BvShell', which is a restricted access/ability shell.\nI agree it is hard to see how to handle this for ssh sessions and child processes in general, unless ssh sessions are jailed in a kernel-level wrapper, like e.g. a Windows container. Which is no trivial addition to the OpenSSH code base! :smile:\nWhile filesystem jails are nice-to-have for ssh shells, that are IMHO an essential feature for sftp. In fact we evaluated Win32 OpenSSH for sftp and decided against it purely over this missing capability.\nBitvise chroot-like support:\n\nLimiting directory access\nBy default, Bitvise SSH Server permits each user to access any and all parts of the filesystem that Windows filesystem permissions allow them access to. Frequently, you want to limit users to be able to access only a particular directory. Note, however, that it is only secure to impose such restrictions if you have also followed instructions above and disabled access to port forwarding and shell access (except BvShell).\nFilesystem access is controlled:\nIn Easy settings, under the Virtual filesystem layout section of each account settings entry.\nIn Advanced settings, under the File transfer section of each group and account settings entry.\nIf you are using Easy settings, make sure the Virtual filesystem layout settings are configured securely for each user.\nIf you are using Advanced settings:\nOpen File transfer > Mount points for the Everyone group, edit the default mount point (\"/\"), and set the Real root path to point to an innocuous, empty directory. Or, if all your users should have access to the same folder, you can configure this to point to that directory.\nIn per-account settings, you can configure a different set of mount points for each user. Under Virtual filesystem layout settings for the user, disable the Use default layout checkbox. Then configure the Real root path for the default mount point (\"/\") to specify the directory which you want this user to access.\nYou can configure multiple mount points in this way, permitting the user to access a selected number of server directories. You can also use mount point permission settings to allow the user to only read, but not write to, files in a particular directory.. @manojampalam @NoMoreFood means that when you connect you are only able to access sftp and not bash or another general shell (with which the user could create child processes). You can use ForceCommand for this, or you can change the user's shell to sftp-server.\n\n```\nSubsystem sftp internal-sftp\nMatch Group users\n    AllowTCPForwarding no\n    X11Forwarding no\n    ForceCommand internal-sftp\n    ChrootDirectory /var/sftp/incoming\n```\nIf the sftp server enforces the ChrootDirectory on its commands (or has that limitation externally enforced on the process) then this is functionally the same as a Linux chroot-ed sftp. Since user can't create child processes, they can't bypass that limited access.. ",
    "RobC-CTL": "Just wondering if there is any progress on this issue? Thanks. Thanks for the update. ",
    "thomasmcneill": "I am only looking to changeroot for SFTP.  I do not think this would be a trivial problem for that particular application.. ",
    "PrestonTaylor": "To be quite honest I'm not really sure what anyone could use OpenSSH on windows for outside of personal use without this feature. It's kind of a must have unfortunately. Even a half baked solution would be more secure than just leaving a deceiving config option that doesn't function.. ",
    "archiker": "Can't agree more - though limiting user access to specific directory is a luxury, the limitation to drive, eg., only to a non-system drive (eg., D:) or mapped drive (eg., F:\\ or G:) would be much safer. \nOpening R/W to system drive is risky to any user.. Any luck to get this fixed/workaround?\nI am using Win2k12 server within domain with sshd service, and SFTP login with password auth from Win7 WinSCP client. Same error as above: https://github.com/PowerShell/Win32-OpenSSH/issues/1142\nThanks.. Ah my wrong - i put the sshd_config in c:\\program files\\OpenSSH-Win64. Sorry.\nAnd thanks @manojampalam .\nThe server is in domain. I used user name (m1234) without domain (\"mgmt\"), mgmt\\m1234, mgmt/m1234 to login, m1234@mgmt - all failed.\nI also modified sshd service to check \"allow service to interact with desktop\" according to https://github.com/PowerShell/Win32-OpenSSH/issues/964. Still same error.\nFollowing @bagajjal 's advice to start sshd in debug mode, i still got same login failure as above.\nThe log from sshd server is below:\n\nC:\\Windows\\system32>sshd.exe -ddd\ndebug2: load_server_config: filename PROGRAMDATA\\ssh/sshd_config\ndebug2: load_server_config: done config len = 230\ndebug2: parse_server_config: config PROGRAMDATA\\ssh/sshd_config len 230\ndebug3: PROGRAMDATA\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: PROGRAMDATA\\ssh/sshd_config:51 setting PasswordAuthentication yes\ndebug3: PROGRAMDATA\\ssh/sshd_config:52 setting PermitEmptyPasswords no\ndebug3: PROGRAMDATA\\ssh/sshd_config:70 setting ChrootDirectory d:\\SFTPRoot\\\ndebug3: PROGRAMDATA\\ssh/sshd_config:77 setting Subsystem sftp      sftp-server.exe\ndebug1: sshd version OpenSSH_for_Windows_7.6, LibreSSL 2.6.4\ndebug3: ReadFileEx() ERROR:38, io:000000AF36360D10\ndebug3: read - no more data, io:000000AF36360D10\ndebug3: ReadFileEx() ERROR:38, io:000000AF36360D10\ndebug3: read - no more data, io:000000AF36360D10\ndebug1: private host key #0: ssh-rsa SHA256:1+EZr0QHzBEDQ8V4Bu7uKypbUC8sNKkI8xMhA60Ne2E\ndebug3: ReadFileEx() ERROR:38, io:000000AF36360D10\ndebug3: read - no more data, io:000000AF36360D10\ndebug3: ReadFileEx() ERROR:38, io:000000AF36360D10\ndebug3: read - no more data, io:000000AF36360D10\ndebug1: private host key #1: ssh-dss SHA256:9O6H4PDHSi9VE+z/KGx7aFIq80ei2QYn0cp4+TYa2w0\ndebug3: ReadFileEx() ERROR:38, io:000000AF36360D10\ndebug3: read - no more data, io:000000AF36360D10\ndebug3: ReadFileEx() ERROR:38, io:000000AF36360D10\ndebug3: read - no more data, io:000000AF36360D10\ndebug1: private host key #2: ecdsa-sha2-nistp256 SHA256:9mR8a2iWP/EXc9cBq5W0jCLX8SOk2/uoHaSqYJqnB5Y\ndebug3: ReadFileEx() ERROR:38, io:000000AF36360D10\ndebug3: read - no more data, io:000000AF36360D10\ndebug3: ReadFileEx() ERROR:38, io:000000AF36360D10\ndebug3: read - no more data, io:000000AF36360D10\ndebug1: private host key #3: ssh-ed25519 SHA256:8Tn6cuS8crkwj4rdS1KxOZ7eGjNz++H5pilZ1nsAaWY\ndebug1: rexec_argv[0]='sshd.exe'\ndebug1: rexec_argv[1]='-ddd'\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\nsshd started. now initiate connection from WinSCP: m1234 with password\ndebug3: fd 5 is not O_NONBLOCK\ndebug1: Server will not fork when running in debugging mode.\ndebug3: send_rexec_state: entering fd = 8 config len 230\ndebug3: ssh_msg_send: type 0\ndebug3: send_rexec_state: done\nConnection from 159.42.20.118 port 61090 on 10.54.171.9 port 22\ndebug1: Client protocol version 2.0; client software version WinSCP_release_5.13\ndebug1: no match: WinSCP_release_5.13\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.6\ndebug2: fd 5 setting O_NONBLOCK\ndebug3: LogonUserExExW failed with 1385\ndebug3: unable to generate sshd virtual token, falling back to s4u\ndebug3: LsaLogonUser succeeded\ndebug3: spawning \"C:\\Program Files\\OpenSSH-Win64\\sshd.exe\" \"-ddd\" \"-y\"\ndebug2: Network child is on pid 2600\ndebug3: send_rexec_state: entering fd = 4 config len 230\ndebug3: ssh_msg_send: type 0\ndebug3: send_rexec_state: done\ndebug3: ssh_msg_send: type 0\ndebug3: ssh_msg_send: type 0\ndebug3: preauth child monitor started\ndebug3: recv_rexec_state: entering fd = 3\ndebug3: ssh_msg_recv entering\ndebug3: recv_rexec_state: done\ndebug2: parse_server_config: config PROGRAMDATA\\ssh/sshd_config len 230\ndebug3: PROGRAMDATA\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: PROGRAMDATA\\ssh/sshd_config:51 setting PasswordAuthentication yes\ndebug3: PROGRAMDATA\\ssh/sshd_config:52 setting PermitEmptyPasswords no\ndebug3: PROGRAMDATA\\ssh/sshd_config:70 setting ChrootDirectory d:\\SFTPRoot\\\ndebug3: PROGRAMDATA\\ssh/sshd_config:77 setting Subsystem sftp      sftp-server.exe\ndebug1: sshd version OpenSSH_for_Windows_7.6, LibreSSL 2.6.4\ndebug3: ssh_msg_recv entering\ndebug3: ssh_msg_recv entering\ndebug2: fd 5 setting O_NONBLOCK\ndebug3: privsep user:group 1:0 [preauth]\ndebug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms [preauth]\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug3: send packet: type 20 [preauth]\ndebug1: SSH2_MSG_KEXINIT sent [preauth]\ndebug3: receive packet: type 20 [preauth]\ndebug1: SSH2_MSG_KEXINIT received [preauth]\ndebug2: local server KEXINIT proposal [preauth]\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-n\nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-\ngroup14-sha256,diffie-hellman-group14-sha1 [preauth]\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@open\nssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preaut\nh]\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@open\nssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preaut\nh]\ndebug2: compression ctos: none [preauth]\ndebug2: compression stoc: none [preauth]\ndebug2: languages ctos:  [preauth]\ndebug2: languages stoc:  [preauth]\ndebug2: first_kex_follows 0  [preauth]\ndebug2: reserved 0  [preauth]\ndebug2: peer client KEXINIT proposal [preauth]\ndebug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hel\nlman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,rsa2048-sha256,rsa1024-sha1,di\nffie-hellman-group1-sha1 [preauth]\ndebug2: host key algorithms: ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-rsa,ssh-dss [pr\neauth]\ndebug2: ciphers ctos: aes256-ctr,aes256-cbc,rijndael-cbc@lysator.liu.se,aes192-ctr,aes192-cbc,aes128-ctr,aes128-cbc,chac\nha20-poly1305@openssh.com,blowfish-ctr,blowfish-cbc,3des-ctr,3des-cbc,arcfour256,arcfour128 [preauth]\ndebug2: ciphers stoc: aes256-ctr,aes256-cbc,rijndael-cbc@lysator.liu.se,aes192-ctr,aes192-cbc,aes128-ctr,aes128-cbc,chac\nha20-poly1305@openssh.com,blowfish-ctr,blowfish-cbc,3des-ctr,3des-cbc,arcfour256,arcfour128 [preauth]\ndebug2: MACs ctos: hmac-sha2-256,hmac-sha1,hmac-sha1-96,hmac-md5,hmac-sha2-256-etm@openssh.com,hmac-sha1-etm@openssh.com\n,hmac-sha1-96-etm@openssh.com,hmac-md5-etm@openssh.com [preauth]\ndebug2: MACs stoc: hmac-sha2-256,hmac-sha1,hmac-sha1-96,hmac-md5,hmac-sha2-256-etm@openssh.com,hmac-sha1-etm@openssh.com\n,hmac-sha1-96-etm@openssh.com,hmac-md5-etm@openssh.com [preauth]\ndebug2: compression ctos: none,zlib [preauth]\ndebug2: compression stoc: none,zlib [preauth]\ndebug2: languages ctos:  [preauth]\ndebug2: languages stoc:  [preauth]\ndebug2: first_kex_follows 0  [preauth]\ndebug2: reserved 0  [preauth]\ndebug1: kex: algorithm: curve25519-sha256@libssh.org [preauth]\ndebug1: kex: host key algorithm: ssh-ed25519 [preauth]\ndebug1: kex: client->server cipher: aes256-ctr MAC: hmac-sha2-256 compression: none [preauth]\ndebug1: kex: server->client cipher: aes256-ctr MAC: hmac-sha2-256 compression: none [preauth]\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\ndebug3: receive packet: type 30 [preauth]\ndebug3: mm_key_sign entering [preauth]\ndebug3: mm_request_send entering: type 6 [preauth]\ndebug3: mm_key_sign: waiting for MONITOR_ANS_SIGN [preauth]\ndebug3: mm_request_receive_expect entering: type 7 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 6\ndebug3: mm_answer_sign\ndebug3: mm_answer_sign: hostkey proof signature 000000AF3632FBA0(83)\ndebug3: mm_request_send entering: type 7\ndebug2: monitor_read: 6 used once, disabling now\ndebug3: send packet: type 31 [preauth]\ndebug3: send packet: type 21 [preauth]\ndebug2: set_newkeys: mode 1 [preauth]\ndebug1: rekey after 4294967296 blocks [preauth]\ndebug1: SSH2_MSG_NEWKEYS sent [preauth]\ndebug1: expecting SSH2_MSG_NEWKEYS [preauth]\ndebug3: receive packet: type 21 [preauth]\ndebug1: SSH2_MSG_NEWKEYS received [preauth]\ndebug2: set_newkeys: mode 0 [preauth]\ndebug1: rekey after 4294967296 blocks [preauth]\ndebug1: KEX done [preauth]\ndebug3: receive packet: type 5 [preauth]\ndebug3: send packet: type 6 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user m1234 service ssh-connection method none [preauth]\ndebug1: attempt 0 failures 0 [preauth]\ndebug3: mm_getpwnamallow entering [preauth]\ndebug3: mm_request_send entering: type 8 [preauth]\ndebug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\ndebug3: mm_request_receive_expect entering: type 9 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 8\ndebug3: mm_answer_pwnamallow\ndebug2: parse_server_config: config reprocess config len 230\ndebug3: NetUserGetInfo() failed with error: 2221 for user: m1234 and domain: (null)\ndebug3: NetUserGetInfo() with domainController: \\\\DC001.int.ecompany.com failed with error: 2221\nFailure here bold above.\nInvalid user m1234 from 159.42.20.118 port 61090\ndebug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 0\ndebug3: mm_request_send entering: type 9\ndebug2: monitor_read: 8 used once, disabling now\ndebug3: mm_inform_authserv entering [preauth]\ndebug3: mm_request_send entering: type 4 [preauth]\ndebug2: input_userauth_request: try method none [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 4\ndebug3: mm_answer_authserv: service=ssh-connection, style=\ndebug2: monitor_read: 4 used once, disabling now\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user m1234 service ssh-connection method keyboard-interactive [preauth]\ndebug1: attempt 1 failures 0 [preauth]\ndebug2: input_userauth_request: try method keyboard-interactive [preauth]\ndebug1: keyboard-interactive devs  [preauth]\ndebug1: auth2_challenge: user=m1234 devs= [preauth]\ndebug1: kbdint_alloc: devices '' [preauth]\ndebug2: auth2_challenge_start: devices  [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user m1234 service ssh-connection method password [preauth]\ndebug1: attempt 2 failures 1 [preauth]\ndebug2: input_userauth_request: try method password [preauth]\ndebug3: mm_auth_password entering [preauth]\ndebug3: mm_request_send entering: type 12 [preauth]\ndebug3: mm_auth_password: waiting for MONITOR_ANS_AUTHPASSWORD [preauth]\ndebug3: mm_request_receive_expect entering: type 13 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 12\ndebug1: Windows authentication failed for user: NOUSER domain: (null) error:1326\ndebug3: mm_answer_authpassword: sending result 0\ndebug3: mm_request_send entering: type 13\nFailed password for invalid user m1234 from 159.42.20.118 port 61090 ssh2\ndebug3: mm_auth_password: user not authenticated [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 2 [preauth]\ndebug3: Received SSH2_MSG_IGNORE [preauth]\nConnection closed by invalid user m1234 159.42.20.118 port 61090 [preauth]\ndebug1: do_cleanup [preauth]\ndebug1: monitor_read_log: child log fd closed\ndebug3: mm_request_receive entering\ndebug1: do_cleanup\ndebug1: Killing privsep child 2600\nC:\\Windows\\system32>\nC:\\Windows\\system32>\nC:\\Windows\\system32>\nC:\\Windows\\system32>\n. Thanks @bagajjal looking into this issue. I used different combinations but still always failed:\n- user@domain@\n- user@domain@\n\nYes i did started the sshd as \"system\" (used \"pexec -s cmd\" to start shell with system). \nPls see attached log, including sshd log and WinSCP client log.\nm1234@domain@hostip.txt\n. Retried using Linux client \"ssh m1234@@\" - same error (recursively prompt for password):\n\ndebug3: monitor_read: checking request 8\ndebug3: mm_answer_pwnamallow\ndebug2: parse_server_config: config reprocess config len 230\ndebug3: NetUserGetInfo() failed with error: 1722 for user: m1234 and domain: mgmt\ndebug3: NetUserGetInfo() with domainController: \\\\C111ZAQ failed with error: 5. Hi @bagajjal \nYes i already used the latest binary of v7.6.1.0p1-Beta.\nThe domain name and user was correct. \n\nBtw, I also tried key auth per https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples. Same error:\n\ndebug2: parse_server_config: config reprocess config len 230\ndebug3: NetUserGetInfo() failed with error: 1722 for user: m1234 and domain: mgmt@10.54.171.9\nDsGetDcNameW() failed with error: 1212\nInvalid user m1234@mgmt@10.54.171.9 from 10.54.132.9 port 56513\ndebug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 0\ndebug3: mm_request_send entering: type 9\n. Tried multiple combinations and all failed. Different failure reasons attached\nm1234_failures.txt\n\nJust curious:\n1) https://stackoverflow.com/questions/3663571/netusergetinfo-netlocalgroupgetinfo-returning-error-1722 indicates a Unicode string param. Is this the case?\n2) for sshd service, by default its property has \"Log on as\" as \"Local System account\". Is this proper? See https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc755249(v=ws.11)\n. Much appreciate @manojampalam. Looking forward to the next release.. Hi @manojampalam and @nomorefood - any chance to know when the next release will be available? Happy to test EAP if i can have. :). @manojampalam - sorry i didn't see notification on new release nor test release. May you send me via email archiker@hotmail.com if feasible? Thanks. Thanks a lot @NoMoreFood !\nTried with new version (extracted zip and overwrote to installed bin director C:\\Program Files\\OpenSSH-Win64). \n1) only user@domain, without hostname/IP behind\nIt progressed with authentication and failed differently. WinSCP prompted \"Cannot initialize SFTP protocol. Is the host running an SFTP server?\"\nThe debug output at server side is attached. new-m1234@domain.txt\n2) While using user@domain@hostip, the authentication failed even earlier. So i guess that's not proper use now.\nAny more i can try?\n. I only found v7.7.0.0 here: https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.7.0.0p1-Beta\nWhere to get v7.7.1.0?. Thanks @manojampalam.\nI extracted the binaries and overwrite existing ones, and re-tested with user@domain as \"m1234@mgmt\". Same error \"Server refused our key\".\nFrom debug log (attached - sshd-debug-no-VPN.txt);\n\ndebug1: trying public key file C:\\Users\\m1234\\.ssh/authorized_keys\ndebug3: Failed to open file:C:\\Users\\m1234\\.ssh/authorized_keys error:13\ndebug1: Could not open authorized keys 'C:\\Users\\m1234\\.ssh/authorized_keys': Permission denied\ndebug3: mm_answer_keyallowed: publickey authentication test: RSA key is not allowed\nFailed publickey for m1234@MGMT from 10.54.132.8 port 62243 ssh2: RSA SHA256:dg995r7KeNHmDKYuj/wdkopvI+mIyAjZVdQFzSw+\njYA\ndebug3: mm_request_send entering: type 23\ndebug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\n\n\nIt looks sshd was trying to open / create file \"authorized_keys\" in /.ssh/ directory, and failed.\nHowever i didn't find any such file in that folder. I didn't ran \"sshd -ddd\" from an administrative powershell.\nWhat was the error code \"13\" mean? Maybe something wrong there?\n. Thanks a lot @nomorefood! I tried on a site and it worked!  But 2nd site failed as before. I will check them and try to find something.\n. ",
    "swills1": "Anyone get this working? Doesn't seem to be fixed.\nMatch User test\n    ChrootDirectory C/test\n    # Disable tunneling, authentication agent, TCP and X11 forwarding.\n    PermitTunnel no\n    AllowAgentForwarding no\n    AllowTcpForwarding no\n    X11Forwarding no. So this is fixed?. ",
    "Diaskhan": "@manojampalam  could U describe all process.\nAnd all enviroment that u setup !\nOn win10 64 with v7.7.2.0p1-Beta 64 bit\nit shows this with (ChrootDirectory c/temp)\nC:\\WINDOWS\\system32>sftp acer@localhost\nacer@localhost's password:\nConnection reset by ::1 port 22\nConnection closed\nor this with (ChrootDirectory c:\\temp)\nC:\\WINDOWS\\system32>sftp acer@localhost\nacer@localhost's password:\nConnection closed. ```\nThis is the sshd server system-wide configuration file.  See\nsshd_config(5) for more information.\nThe strategy used for options in the default sshd_config shipped with\nOpenSSH is to specify options with their default value where\npossible, but leave them commented.  Uncommented options override the\ndefault value.\nPort 22\nAddressFamily any\nListenAddress 0.0.0.0\nListenAddress ::\nHostKey PROGRAMDATA/ssh/ssh_host_rsa_key\nHostKey PROGRAMDATA/ssh/ssh_host_dsa_key\nHostKey PROGRAMDATA/ssh/ssh_host_ecdsa_key\nHostKey PROGRAMDATA/ssh/ssh_host_ed25519_key\nCiphers and keying\nRekeyLimit default none\nLogging\nSyslogFacility AUTH\nLogLevel VERBOSE\nAuthentication:\nLoginGraceTime 2m\nPermitRootLogin prohibit-password\nStrictModes yes\nMaxAuthTries 6\nMaxSessions 10\nPubkeyAuthentication yes\nThe default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\nbut this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile  .ssh/authorized_keys\nAuthorizedPrincipalsFile none\nFor this to work you will also need host keys in %programData%/ssh/ssh_known_hosts\nHostbasedAuthentication no\nChange to yes if you don't trust ~/.ssh/known_hosts for\nHostbasedAuthentication\nIgnoreUserKnownHosts no\nDon't read the user's ~/.rhosts and ~/.shosts files\nIgnoreRhosts yes\nTo disable tunneled clear text passwords, change to no here!\nPasswordAuthentication yes\nPermitEmptyPasswords no\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nGatewayPorts no\nPermitTTY yes\nPrintMotd yes\nPrintLastLog yes\nTCPKeepAlive yes\nUseLogin no\nPermitUserEnvironment no\nClientAliveInterval 0\nClientAliveCountMax 3\nUseDNS no\nPidFile /var/run/sshd.pid\nMaxStartups 10:30:100\nPermitTunnel no\nChrootDirectory none\nVersionAddendum none\nno default banner path\nBanner none\noverride default of no subsystems\nSubsystem   sftp    sftp-server.exe\nExample of overriding settings on a per-user basis\nMatch User acer\nChrootDirectory c:\\temp\nDisable tunneling, authentication agent, TCP and X11 forwarding.\nPermitTunnel no\nAllowAgentForwarding no\nAllowTcpForwarding no\nX11Forwarding no\n. and event logs\nsshd: Accepted password for acer from ::1 port 50246 ssh2\nsshd: User child is on pid 2140\nsshd: Changed root directory to \"c:\\temp\"\nsshd: Starting session: subsystem 'sftp' for acer from ::1 port 50246 id 0\nsshd: Close session: user acer from ::1 port 50246 id 0\nsshd: Read error from remote host ::1 port 50246: Unknown error\n```. thanks gues no help is needed.\nJust install budu server\nhttps://www.sftp.net/servers\n. ",
    "antmeehan": "@neelzp I've had the same issues. Did you get to the bottom of this?\n. ",
    "mlbaltz": "I upgraded to new version to see it it would resolve the crash, no luck\nFaulting application name: sshd.exe, version: 0.0.0.9, time stamp: 0x57ddcf43\nFaulting module name: KERNELBASE.dll, version: 6.3.9600.18340, time stamp: 0x57366075\nException code: 0x80000003\nFault offset: 0x00000000000de2d2\nFaulting process id: 0xdbc\n. ",
    "gd197": "Hello,\nI encounter same type of behavior with V0.0.5.0, which for me seems to be linked\nLaunching simultaneously multiple ssh clients from a distant system using AD authentication and RSA.\nLaunching a simple connection is working well.\nLaunching sequentially with around 500ms intergap works well.\nLaunching more than 3 simultaneous connections cause SSHD crash\nWindows 7 64\n  \nsshd.exe\n0.0.5.0\n585626f5\nKERNELBASE.dll\n6.1.7601.23569\n57f7c0b4\n80000003\n00000000000331f2\n1388\n01d25b69f3d81c30\neasy to reproduce with a loop in a script\nI will try with v0.0.6.0 in the coming days\nAt your disposal for more information if needed\nPlease note that in my case, I'm not using sftp but ssh client on a distant unix system. Same exception code when multiple connection from client\nPlease look at my comment on #193\nIt might be linked\n. yep, no more crash on my side.\nunfortunately this led now to issue 481.. Thanks a lot for your great job @manojampalam !. I'm using the AllowUsers in AD context for only one account and this is working well on my side. any chance to have a fix for January-End milestone ?\n. misuse on my side, please don't take into account. Hello,\nSeem it was a badly secured private rsa key on my sun cient (wrong permission)\nAfter correcting and reloading the session the auth went well. +1 IMHO\nWe fall into this issue and have to write a powershell script which execute the mount with the New-PSDrive command with authentication based on an encrypted file for each ssh logon.\nMaybe a configuration option relaxing the security at the service level (or account) can do the trick?. we had to escape the \\ for interactive domain access from a linux box\nssh domain\\\\user@winbox\nHope that helps\nEDIT.. ",
    "PuiuPanait": "I had the same issue for a few months for now. I believe is related to how the SSHD client handles the Socket connection. I used the popular Renci ssh client library to connect to the SSHD. \nAfter a lot of chimp-head-scratching-tweaks to reproduce the error i ended up with a console test project that successfully transferring 100+ files when started in debug mode from Visual studio but crashed the SSHD server (immediate event log error) when executed outside VS environment, I know sounds weird.\nAfter checking the VS Debug Output i found out that Renci client socket interaction class SocketAbstraction was having some issues in the \"Read\" method (errors raised in the OS dll's) however in VS debugging mode the execution was recovering by dropping the Socket connection. \nWorkaround: The fix was applied on Renci SSH client. \n1) Disable FEATURE_SOCKET_SYNC for debug/release configurations (remove from \"Conditional compilation symbols\").\n2) Class \"SocketAbstraction\" , method \"Read\" under the \"FEATURE_SOCKET_EAP\" execution branch close the socket if it fails to read and don't throw any errors.\n    if (args.SocketError != SocketError.Success)\n    {\n        //throw new SocketException((int)args.SocketError);\n        if (socket == null)\n            return 0;\n        if (socket.IsConnected())\n            socket.Close();\n        else\n            socket.Dispose();\n        return 0;\n    }\n3) Step 2) might raise some issues when trying to disconnect the session (socket might already be in closing process).Class \"Session\" , method \"SocketDisconnectAndDispose\" \nreplace \"_socket.Shutdown(SocketShutdown.Send);\" with\n    Thread.Sleep(100);\n    if (_socket != null)\n    {\n        if (_socket.IsConnected())\n            _socket.Shutdown(SocketShutdown.Send);\n    }\nto ensure you don't try to shutdown a closing socket. \nAfter this i tested a 100+ files upload and 100+ files download console app successfully.\nHope it helps at least with some specific cases.\n. ",
    "Ragnar79": "Did you check if scp.exe is in you OpenSSH folder on windows?\nscp was not in the build I was using, so I had to use sftp instead.\n. I haven't tried to run a PS script on the remote windows machine, but use this command to run PS commands on windows machine.\nplink -l Administrator <host> powershell.exe -nologo -noprofile -command \"& { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('foo.zip', 'c:\\bar\\'); }\"\nplink is from PuTTy\n. It should also work if you try one of these\nssh Administrator@foo.com powershell.exe -nologo -noprofile -command \"& { Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('foo.zip', 'c:\\bar\\'); }\"\nor\nssh Administrator@foo.com powershell.exe foo.ps\nor\nssh Administrator@foo.com \"cmd.exe /c powershell.exe foo.ps\"\n. ",
    "Otxandio": "You're right, scp.exe isn't in the OpenSSH folder. I tried adding the file from another build and it didn't work.\nI keep using sftp instead, just as you.\n. ",
    "bashfulrobot": "I'm actually running this from a Linux machine. So I do not have Putty available. \n. ",
    "fg-fg": "Did you solve this issue\n. Just add to \"NT service\\SSHD account\" the  \"Log on as service\" privilege in the Local security policy \n. ",
    "timcerl": "How?\nThe first SSH command logs me into the switch.  At that point my PowerShell window is connected to the switch's CLI.  Anything I enter will be processed by the CLI, so if I enter 'ssh  [command]' it will be read by the CLI.\nIs there a way to establish a session to the switch without ending up at the switch's CLI prompt so that I can continue entering commands?  That is what I have not been able to figure out.\n. Sorry.  I meant to ask if there is a way to operate this like a PSSession.\n. Okay.  That makes sense.  I'll look at the documentation to figure out the key auth.\nThanks!\n. Glad to know I have company!  Sounds like it would make sense for someone to document it in the wiki.\n. I am talking about going from a Windows client to a Linux switch.  The instructions in the wiki shows:\n3.Copy  id_rsa.pub  (client's public key) to corresponding user's directory on ssh HOST \u25e6as  %systemdrive%\\users\\user.ssh\\authorized_keys \nI am pretty sure that Linux does not understand systemdrive%\\users\\user.ssh\\authorized_keys as a place for storing keys.\n. ",
    "resmivarghese": "Hi ,\nI am using below code to upload files(nearly 200) to sftp on specific intervals. It successfully uploads first 20 -30 files and then starts giving exception as 'An existing connection was forcibly closed by the remote host'. \nHow can we resolve this issue .\n```\npublic static void UploadSFTPFile(string host, string username, string password, string sourcefile, string destinationpath, int port)\n        {\n            try\n            {\n                using (var client = new SftpClient(host, port, username, password))\n                {\n                  client.ConnectionInfo.Timeout = TimeSpan.FromSeconds(100);\n                  client.Connect();\n                if (client.IsConnected)\n                {\n                    client.ChangeDirectory(destinationpath);\n                    using (var fs = new FileStream(sourcefile, FileMode.Open))\n                    {\n                        client.BufferSize = 4 * 1024;\n\n                        client.UploadFile(fs, Path.GetFileName(sourcefile));\n\n                    }\n                    client.Disconnect();\n                }\n            }\n        }\n        catch (System.Net.Sockets.SocketException ex)\n        {\n            Log.Error(\"Disconnected\" + ex.Message + ex.InnerException + sourcefile);\n        }\n        catch (Exception ex)\n        {\n            Log.Error(\"It appears there was a problem \" + ex.Message + ex.InnerException + sourcefile);\n        }\n    }\n\n```\nThanks in Advance for the help\nResmi\n. ",
    "gpomykala": "Why it was closed?\n\"Replace a process level token\" is a security risk and it should be restricted to certain accounts only. ",
    "oldun": "Try with another port, e.g. 2222\n. ",
    "DTurkmen": "Is user's \"Home Folder\" taken into consideration (as set in user Properties)? Which build can I use to direct user to their home folders?\n. ",
    "Pliny": "64-bit Windows 7.. pretty old, but I'm stuck with this constraint. :-\\\n. Hi @manojampalam, this is still an issue for me. Do you expect this to be closed by next week's milestone?  Thanks!\n. ",
    "Kamila3565": "I am getting this same issue and its very difficult to solve this problem without any third party app, i guess the best thing to do is to use a third party app like Long Path Tool. Just download it and use it to solve this issue. I hope this would help.\n. ",
    "welnanick": "Just as some more reference, in the latest release, it now says:\nssh: connect to host *host* port 22: No error\nJust thought I'd chime in since the message changed.\n. Not a Developer of the project, but yes they know there are UI issues. The UI seems has been put on the back burner until they solidify the functionality and stability though. Obviously you should still report all UI issues you come across (that haven't already been reported) so that they have a record of what needs to be fixed.\n. Is \"C:\\Program Files\\OpenSSH\\\" in your PATH variable?\n. ",
    "calphool": "I went and got the tip revision 5_16_2016 and the messages are different, but I'm still not able to get key based SSO working... clearly there's something I'm supposed to be doing with ssh-agent, but it's not obvious how to get it working.\n. I'm now on the 5_16_2016 version, I'm seeing this in the agent logs:\n6400 17:09:17 965 agent_start pid:6400, dbg:0, child:0, pipe:0\n6400 17:10:12 779 client pid 7048 connected on \\\\.\\pipe\\ssh-keyagent\n6400 17:10:12 782 debug1: spawned child 6640 to process 3\n6640 17:10:12 796 agent_start pid:6640, dbg:0, child:1, pipe:364\n6640 17:10:12 796 debug1: connection io 000000CCD4DAF370 #bytes:0 state:0\n6400 17:10:12 887 client pid 7048 connected on \\\\.\\pipe\\ssh-authagent\n6400 17:10:12 889 debug1: spawned child 3376 to process 3\n3376 17:10:12 904 agent_start pid:3376, dbg:0, child:1, pipe:372\n3376 17:10:12 904 debug1: connection io 000000CE4820F370 #bytes:0 state:0\n3376 17:10:12 905 debug1: connection io 000000CE4820F370 #bytes:4 state:1\n3376 17:10:12 905 debug1: connection io 000000CE4820F370 #bytes:966 state:2\n3376 17:10:12 905 debug1: client type: 3\n3376 17:10:12 906 debug1: unable to generate user token\n3376 17:10:12 906 debug1: connection 000000CE4820F370 clean up\n3376 17:10:12 906 debug1: iocp error: 6 on 0000000000000000 \n6640 17:12:12 710 debug1: iocp error: 109 on 000000CCD4DAF370 \n6640 17:12:12 710 debug1: connection 000000CCD4DAF370 clean up\n6640 17:12:12 710 debug1: iocp error: 6 on 0000000000000000\nStill not able to get the SSO stuff working... I'm guessing \"unable to generate user token\" is meaningful in some way, but not sure how.\n. Domain.  The server is Windows 2012 r2, fresh install, no local accounts.  I've tried both:\nssh -v {myuser}@{mydomain}@{myserver}\nand\nssh -v {myuser}@{myserver}\n...with this latter one being an attempt to use the RSA key pair...  Neither one seems to work.\nBased on what you're saying, I wonder if I should revert back to the previous build (the one in choco), and then diagnose why sshd wasn't able to access the public key I had stored... it looks like maybe I was closer than I thought.\n. I reverted back to the choco install version, but I'm getting the \ndebug1: Could not open authorized keys 'C': Access is denied.\nthing again.\nI don't understand why anything wouldn't have access.  I've run sshd under an administrator console on the command line, and I'm attempting to use the key for the user I'm actually signed onto the server as.\nCould somebody create a video of setting up a SSO via rsa keys, starting with nothing installed anywhere?  Or has nobody got this working yet?\n. Okay... I figured out why I was getting \"Access is denied\".  I thought that the authorized_keys was a directory, but it appears that perhaps it's a file that you're supposed to paste the public keys into?\nI got rid of the c:\\Users{myuser}.ssh\\authorized_keys directory, replaced it with a file of the same name, and then pasted my client generated public key in there, and started sshd back up on the command line in interactive mode.\nNow when I attempt to connect with ssh -v {myuser}@{thesshservername}, the sshd process dies on the server.  When I run it as a service, I get an entirely different behavior (the c0000041 error shows up in the logs again).\n. Yes, I've been keeping that DLL in sync with the release (in C:\\windows\\system32).  I had to rename it in order to get rid of the previous version because something held it exclusively.  Renamed it, rebooted, deleted the old renamed file, put the new one in place, and rebooted  again.\n. I did get it all working with a local account and a shared key, but I'm trying to use a domain account with keys (with the 4/5/2016) build.  It looks like I need to upgrade to the tip revision and try again.  The keys aren't managed the same way though, right?  You have to use ssh-agent and ssh-add, correct?\n. I didn't start out doing local accounts.  I started out with the intent of using domain accounts.  I didn't try to use a local account until later.\n. Good luck with this.... been fighting it for 3 days now.  It seems that it's possible based on what I've read in the installation instructions, but I'll be damned if I can get it working.... starting to feel really stupid.  It would be nice once somebody figures this out if they could post a youtube video of the entire process.\n. ",
    "coldacid": "@RayFoss if you change the path for Subsystem sftp to the sftp-server.exe in the installation directory, SFTP works fine. However, you're right that the path should be correctly configured in the out-of-box sshd_config file.\nAs for SCP I believe that there have been issues with porting it that have lead to it being removed for the last few releases until they can fix it up.\n. @fjaenal I would assume SCP will return before the integration milestone is hit, but it needs to work again first. Until then, it's a good thing that it isn't included in the packaged builds.\n. The ProcessID value did match the ssh-agent.exe PID, but even after removing the property and restarting the ssh-agent service, the problem remains with the same output from the ssh-add commands.\nDoes the ssh-agent service require that the SSHD service is also required? I have OpenSSH installed with the agent but not the server (via Chocolatey package param /SSHAgentFeature).. I did look at the Troubleshooting wiki page, but it exclusively refers to sshd, not ssh-agent. As far as I can tell, there's no enhanced logging for ssh-agent the way there is for ssh and sshd.. There was no logs folder, either, but after creating one a ssh-agent.log file was generated in it. I put LogLevel to DEBUG3, and here's what showed up in the log file (using same scenario as above):\n13640 08:47:04 204 agent_start pid:13640, dbg:0, child:0, pipe:0\n13640 08:47:19 454 client pid 7020 connected\n13640 08:47:19 455 debug1: spawned worker 23476 for agent client pid 7020 \n23476 08:47:19 463 agent_start pid:23476, dbg:0, child:1, pipe:104\n23476 08:47:19 463 debug3: connection io 000002CD080F4300 #bytes:0 state:0\n23476 08:47:29 237 debug3: connection io 000002CD080F4300 #bytes:4 state:1\n23476 08:47:29 237 debug3: connection io 000002CD080F4300 #bytes:1863 state:2\n23476 08:47:29 238 debug1: connection 000002CD080F4300 clean up\n23476 08:47:29 238 debug1: iocp error: 6 on 0000000000000000 \\n\n13640 08:47:32 159 client pid 24612 connected\n13640 08:47:32 160 debug1: spawned worker 16740 for agent client pid 24612 \n16740 08:47:32 168 agent_start pid:16740, dbg:0, child:1, pipe:104\n16740 08:47:32 168 debug3: connection io 000002415C2A6600 #bytes:0 state:0\n16740 08:47:32 168 debug3: connection io 000002415C2A6600 #bytes:4 state:1\n16740 08:47:32 168 debug3: connection io 000002415C2A6600 #bytes:1 state:2\n16740 08:47:32 168 debug1: connection 000002415C2A6600 clean up\n16740 08:47:32 168 debug1: iocp error: 6 on 0000000000000000 \\n. @DarwinJS maybe just create it whenever the sshd or ssh-agent options are used? Unless ssh uses the same directory for client logs (which doesn't sound right).. @manojampalam just updated to 0.0.10.0 now and gave it a shot. Same results:\n260 07:27:54 893 agent_start pid:260, dbg:0, child:0, pipe:0\n260 07:28:02 150 client pid 16568 connected\n260 07:28:02 151 debug1: spawned worker 8612 for agent client pid 16568 \n8612 07:28:02 160 agent_start pid:8612, dbg:0, child:1, pipe:536\n8612 07:28:02 160 debug3: connection io 0000019310779F90 #bytes:0 state:0\n8612 07:28:08 265 debug3: connection io 0000019310779F90 #bytes:4 state:1\n8612 07:28:08 266 debug3: connection io 0000019310779F90 #bytes:1850 state:2\n8612 07:28:08 266 debug1: connection 0000019310779F90 clean up\n8612 07:28:08 266 debug1: iocp error: 6 on 0000000000000000 \\n\n260 07:28:12 797 client pid 11008 connected\n260 07:28:12 798 debug1: spawned worker 11928 for agent client pid 11008 \n11928 07:28:12 808 agent_start pid:11928, dbg:0, child:1, pipe:536\n11928 07:28:12 808 debug3: connection io 0000012E14CCA950 #bytes:0 state:0\n11928 07:28:12 808 debug3: connection io 0000012E14CCA950 #bytes:4 state:1\n11928 07:28:12 808 debug3: connection io 0000012E14CCA950 #bytes:1 state:2\n11928 07:28:12 808 debug1: connection 0000012E14CCA950 clean up\n11928 07:28:12 808 debug1: iocp error: 6 on 0000000000000000 \\n. Probably doesn't actually need to be said, but after testing 0.0.11.0 I can report that the problem here persists. ssh-agent.log contents:\n12412 20:57:35 772 agent_start pid:12412, dbg:0, child:0, pipe:0\n12412 21:00:04 744 client pid 5284 connected\n12412 21:00:04 745 debug1: spawned worker 2200 for agent client pid 5284 \n2200 21:00:04 754 agent_start pid:2200, dbg:0, child:1, pipe:128\n2200 21:00:04 754 debug3: connection io 00000278E0DF8FD0 #bytes:0 state:0\n2200 21:00:11 335 debug3: connection io 00000278E0DF8FD0 #bytes:4 state:1\n2200 21:00:11 335 debug3: connection io 00000278E0DF8FD0 #bytes:1850 state:2\n2200 21:00:11 336 debug1: connection 00000278E0DF8FD0 clean up\n2200 21:00:11 336 debug1: iocp error: 6 on 0000000000000000 \\n\n12412 21:00:16 481 client pid 4520 connected\n12412 21:00:16 482 debug1: spawned worker 1476 for agent client pid 4520 \n1476 21:00:16 490 agent_start pid:1476, dbg:0, child:1, pipe:128\n1476 21:00:16 490 debug3: connection io 000001DA148D9570 #bytes:0 state:0\n1476 21:00:16 490 debug3: connection io 000001DA148D9570 #bytes:4 state:1\n1476 21:00:16 490 debug3: connection io 000001DA148D9570 #bytes:1 state:2\n1476 21:00:16 491 debug1: connection 000001DA148D9570 clean up\n1476 21:00:16 491 debug1: iocp error: 6 on 0000000000000000 \\n. ```\n\nset SSH_AUTH_SOCK\nEnvironment variable SSH_AUTH_SOCK not defined\n```\n\nEDIT: Just realized that 0.0.12.0 is now available. I tried this with 0.0.11.0. I'll provide updated log and details once the Chocolatey package is updated and installed.. Okay, so with 0.0.12.0, nothing seems to have changed.\nShell commands/output:\n```\n\nreg query HKEY_LOCAL_MACHINE\\SOFTWARE\\SSH\\Agent\n\nHKEY_LOCAL_MACHINE\\SOFTWARE\\SSH\\Agent\n    ProcessID    REG_DWORD    0x3f8\n\ntasklist | grep ssh-agent\nssh-agent.exe                 1016 Services                   0      6,936 K\nset SSH_AUTH_SOCK\nEnvironment variable SSH_AUTH_SOCK not defined\nssh-add .ssh\\id_rsa\nEnter passphrase for .ssh\\id_rsa:\nCould not add identity \".ssh\\id_rsa\": communication with agent failed\nssh-add -l\nerror fetching identities for protocol 2: communication with agent failed\nThe agent has no identities.\n```\n\nssh-agent.log:\n1016 21:47:47 280 agent_start pid:1016, dbg:0, child:0, pipe:0\n1016 21:49:37 488 client pid 6180 connected\n1016 21:49:37 489 debug1: spawned worker 14664 for agent client pid 6180 \n14664 21:49:37 497 agent_start pid:14664, dbg:0, child:1, pipe:548\n14664 21:49:37 498 debug3: connection io 0000017580CCB880 #bytes:0 state:0\n14664 21:49:44 764 debug3: connection io 0000017580CCB880 #bytes:4 state:1\n14664 21:49:44 764 debug3: connection io 0000017580CCB880 #bytes:1849 state:2\n14664 21:49:44 765 debug1: connection 0000017580CCB880 clean up\n14664 21:49:44 765 debug1: iocp error: 6 on 0000000000000000 \\n\n1016 21:49:50 865 client pid 19600 connected\n1016 21:49:50 866 debug1: spawned worker 15224 for agent client pid 19600 \n15224 21:49:50 875 agent_start pid:15224, dbg:0, child:1, pipe:548\n15224 21:49:50 875 debug3: connection io 000001BC0CB2D720 #bytes:0 state:0\n15224 21:49:50 875 debug3: connection io 000001BC0CB2D720 #bytes:4 state:1\n15224 21:49:50 875 debug3: connection io 000001BC0CB2D720 #bytes:1 state:2\n15224 21:49:50 875 debug1: connection 000001BC0CB2D720 clean up\n15224 21:49:50 875 debug1: iocp error: 6 on 0000000000000000 \\n. Shell:\n```\n\nreg query HKEY_LOCAL_MACHINE\\SOFTWARE\\SSH\\Agent\n\nHKEY_LOCAL_MACHINE\\SOFTWARE\\SSH\\Agent\n    ProcessID    REG_DWORD    0x4c8c\n\ntasklist | grep ssh-agent\nssh-agent.exe                19596 Services                   0      7,360 K\nset SSH_AUTH_SOCK\nEnvironment variable SSH_AUTH_SOCK not defined\nssh-add .ssh\\id_rsa\nEnter passphrase for .ssh\\id_rsa:\nCould not add identity \".ssh\\id_rsa\": communication with agent failed\nssh-add -l\nerror fetching identities for protocol 2: communication with agent failed\nThe agent has no identities.\n```\n\nssh-agent.log:\n19596 08:21:18 007 agent_start pid:19596, dbg:0, child:0, pipe:0\n19596 08:22:21 078 client pid 16480 connected\n19596 08:22:21 079 debug1: spawned worker 12444 for agent client pid 16480 \n12444 08:22:21 088 agent_start pid:12444, dbg:0, child:1, pipe:540\n12444 08:22:21 088 debug3: connection io 000001FCB440E550 #bytes:0 state:0\n12444 08:22:22 235 debug3: connection io 000001FCB440E550 #bytes:4 state:1\n12444 08:22:22 235 debug3: connection io 000001FCB440E550 #bytes:1849 state:2\n12444 08:22:22 235 debug1: LookupAccountNameW failed with 1332\n12444 08:22:22 236 debug1: connection 000001FCB440E550 clean up\n12444 08:22:22 236 debug1: iocp error: 6 on 0000000000000000 \\n\n19596 08:22:27 306 client pid 8600 connected\n19596 08:22:27 307 debug1: spawned worker 15804 for agent client pid 8600 \n15804 08:22:27 317 agent_start pid:15804, dbg:0, child:1, pipe:540\n15804 08:22:27 317 debug3: connection io 0000022853580530 #bytes:0 state:0\n15804 08:22:27 317 debug3: connection io 0000022853580530 #bytes:4 state:1\n15804 08:22:27 317 debug3: connection io 0000022853580530 #bytes:1 state:2\n15804 08:22:27 317 debug1: LookupAccountNameW failed with 1332\n15804 08:22:27 317 debug1: connection 0000022853580530 clean up\n15804 08:22:27 317 debug1: iocp error: 6 on 0000000000000000 \\n\nLooks like LookupAccountName doesn't like whatever name is being passed to it. If it helps, my system is not on a domain (seems to a common issue from a quick search of that error code) but it does use a Microsoft account login.. Ah, I don't have the sshd service set up on this system. My expectation was that like on other platforms, ssh-agent would be usable without running the daemon as well.. Thanks for keeping me updated, @manojampalam. I'll hold my horses a little while longer!. Just tried out 0.14.0.0 and happy to say that I can add my SSH keys to ssh-agent without a problem now. Thanks @manojampalam! \ud83e\udd47 . Given that UNIX domain sockets are pretty similar to Windows named pipes, I wonder if it'd be possible to create a program that sets up a named pipe that gets assigned to $SSH_AUTH_SOCK and then proxies between that and the socket set up by gpg-agent. I have a couple of concerns about that, though:\n\nIs the protocol used by ssh-agent over named pipes byte-for-byte the same as for ssh-agent over domain sockets? That is, are there endianness issues that need to be considered, or a need to translate between gpg-agent's ssh-agent protocol implementation and Win32-OpenSSH's?\nThe socket files created by gpg-agent on Windows may match the structure used by Cygwin or MSYS, but don't necessarily do so. For example, on my machine right now S.gpg-agent.ssh only includes a 16-byte cookie, rather than the Cygwin socket header and port number.. @vovcacik what version of GPG do you have installed, and is it a Cygwin or MSYS build? They each have their own format for the sock file (or more than one possible format), all of which would need to be supported.. @vovcacik Gpg4win uses the \"official native build\" as you put it. Could you update to 2.2.3 and see what the socket file looks like afterwards?. @manojampalam excellent. I'll take some time this weekend to prototype one out.. I whipped up a quick program that should provide a named pipe connected to gpg-agent but it unfortunately doesn't work. I'm not too good with low-level socket/stream stuff so perhaps someone else can figure out what I'm doing wrong for the actual communication between the pipe and the TCP socket served by gpg-agent.\n\nI've put up the program as a gist: https://gist.github.com/coldacid/6e4e8306bcdc0a8954961454bc2558ee. Also it looks like $SSH_AUTH_SOCK requires the full pipe name (that is, \\\\.\\pipe\\pipename instead of pipename) in order to connect. Otherwise ssh and ssh-add try to open a regular file based on the environment variable's value instead.\n[Edit] note to self: described at https://github.com/PowerShell/Win32-OpenSSH/issues/669#issuecomment-294310292. I've filed a feature request with GnuPG to support named pipes for ssh-agent on their side: https://dev.gnupg.org/T3883. It sounds like Werner doesn't want to accept named pipes, but Win32-OpenSSH switching away from them doesn't sound like it'll happen either. Shame that Windows didn't have AF_UNIX sockets from the get-go.\nI wonder if it'd be feasible to turn on AF_UNIX support in the ssh client now that it's available since build 17063, and get it enabled in Windows builds of gpg-agent as well. If that could be done without changing/removing existing functionality in both systems, and without requiring users to be on the cutting edge builds of Win10, then it might be a way around this impasse.. @manojampalam I tried async as well, without any change in results. I just never updated the gist with it.. @manojampalam I can certainly take a look at the port and cookie stuff this evening.. @manojampalam I started work this evening to parse out the port and cookie info, but my C is pretty rusty and I still need to get the \"socket\" file name to pass to my new function. Tomorrow evening I'll continue on and see if I can't get all this to work.\nBy the way, with a deeper dive into gpg-agent, I found that it's not relying on Cygwin or MSYS at all, but rather its own libassuan library to provide the AF_UNIX emulation. This explains the confusion around different possible socket file formats; a Cygwin build would have libassuan think that AF_UNIX sockets are available (and use Cygwin's emulation), an MSYS build could go either way based on environment configuration at build time, and the official Gpg4win builds use libassuan's own emulation. Because of this I considered pulling in libassuan, but figured the cost/benefit ratio was better just writing my own function for this.. I've PR'd some work to parse out the port and cookie from the socket file and to send it across to gpg-agent, but uds-2-np seems to be getting stuck same as my gisted C# program even with my changes.. @manojampalam have you had a chance to look at the work I PR'd to ssh-agent-adapter yet? Perhaps there's something I've overlooked that will make it work.. @manojampalam It gets stuck after sending the cookie to gpg-agent. send() returns the cookie length back, but after that nothing is sent back and nothing goes towards gpg-agent.\nYou can install Gpg4win through Chocolatey (package \"gpg4win\") or from https://www.gpg4win.org/ and then use the Kleopatra app that comes with it to turn on gpg-agent's SSH support. In Kleopatra you want to open Settings->Configure Kleopatra, then open the \"GnuPG System\" pane and ensure \"Enable ssh support\" is checked on the \"Private Keys\" tab. Then at the command prompt run gpg-connect-agent kill-agent /bye ; gpg-connect-agent /bye to start or restart gpg-agent.. @manojampalam Sorry, I should have mentioned that the socket file should be %APPDATA%\\gnupg\\S.gpg-agent.ssh. At least on Windows, gpg-agent won't set environment variables.. @manojampalam Thanks for the catch.\nI think we might have the handshake working now based on output from gpg-agent when I run it manually (gpg-agent -v --enable-ssh-support --enable-putty-support --homedir $(Join-Path $env:APPDATA gnupg) --daemon) but it still just doesn't bother responding. I've asked Werner Koch (the GPG lead dev) about the handshake just to verify there's nothing else that needs to be done other than send the cookie as stored in the socket file and I'll update my fork if it turns out we're missing something.\nThe reason I think we do have it working now is because when trying to make a request to gpg-agent through the bridge with ssh-add -l the following lines (with pid & fd different each time) show up immediately:\ngpg-agent[32944]: ssh handler 0x3 for fd 844 started\ngpg-agent[32944]: ssh handler 0x3 for fd 844 terminated\nBefore your fix to my fork, there'd be nothing until I terminated ssh-add, at which point\ngpg-agent[16064]: error reading nonce on fd 660: Input/output error\nwould show up in gpg-agent's output.. It seems that we're doing the handshake properly with just sending over the cookie. However, it might be that since we don't send it along with whatever we read from the pipe on the first read, gpg-agent thinks we've EOF'd on a stream made from the socket and terminates the handler right away.. @manojampalam I double-checked and there's nothing like an extra EOF character on the end of the cookie. We're sending the proper set of 16 bytes across.\nFrom trolling through the gpg-agent code, it looks like it uses a function from libgpg-error gpgrt_fdopen() (through macro es_fdopen) to create an estream_t object from the socket connection. At this point, I reach the limitations of my C understanding and can't really trace what's going on any further. However with an experiment doubling and tripling the cookie, we still end up with the same result -- no message read or processed from the client by the agent.\nI might have to figure out how to build gpg myself so I can add additional debugging statements and see what's going on inside gpg-agent.. I've finally been able to build gpg under Debian on WSL, so hopefully by the weekend I can have better-instrumented libassuan and libgpg-error libraries and gpg-agent binary, and figure out just wtf is going wrong here.. Bad news, looks like the gpg4win building stuff doesn't actually build gpg but grabs a pre-built binary from the GPG website to wrap in the installer. So even with instrumenting the libraries we'd still get no further in figuring out what's happening in gpg-agent. :(. @btolfa Right now let's not add Pageant to the mix.. @btolfa I'm aware that GnuPG supports Pageant, but we are here to support gpg-agent's regular SSH agent socket in the Windows OpenSSH client programs, with ssh-agent-adapter as (at least in my eyes) a side quest to figure out how to properly communicate through the socket provided by gpg-agent. The end goal here is to support libassuan-style sockets when $SSH_AUTH_SOCK is a file instead of a named pipe.. @manojampalam I reached out to Werner again about this and am waiting to hear back from him. As it is, gpg-agent doesn't appear to work with Cygwin and MSYS2 ssh clients these days based on testing asked for in the GnuPG Phabricator ticket. My money is on a libassuan bug being responsible, rather than anything in ssh-agent-adapter, which might also be why enable-ssh-support option for gpg-agent doesn't seem to work on Windows.\nThat said, what tools would you suggest for sniffing local TCP connections? I've never actually needed to do that before (at least not at as low a level as TCP itself).. Here's a capture of the conversation between ssh-agent-adapter and gpg-agent. Unfortunately as mentioned there doesn't seem to be any clients that can communicate to gpg-agent via its SSH sock functionality so I can't get a good session to compare against. However it looks like gpg-agent does get the SSH agent command after the cookie (at least the network stack sends an ACK for the packet with the command in it) -- it just appears to never actually get processed into the stream provided to the SSH agent handler inside gpg-agent.\nssh-agent-adapter.pcap.gz\n. @tavrez Nope, unfortunately.. At this point I've pretty much given up on trying to interoperate with the ssh-agent socket put out by gpg-agent and just using @btolfa's pipe-ssh-agent to connect OpenSSH to the Pageant support in gpg-agent. Whatever's happening in libassuan is just completely shutting us out. :(. @tavrez I don't use sshcontrol so I can't directly answer your question. But for using the ssh.exe command line client, you just need to make sure that pipe-ssh-agent is running, that Pageant support is enabled for gpg-agent, and that the SSH_AUTH_SOCK environment variable is set to \\\\.\\pipe\\ssh-pageant in your command line session.. I'm using build 17134 at work and 17713 at home, without any problems, both with OpenSSH client tools and with PuTTY with gpg-agent providing Pageant functionality. It works just fine for me with a YubiKey as well as regular ssh-add of keys in the file system.\nIf you need sshcontrol in any situation just to be able to do anything with SSH, you might have bigger problems than just connecting to an agent.. @RaymondLC92 you should probably file an issue on @btolfa's project.. @gpoul: Perhaps if libassuan supported it on Windows. Thing is we need a solution that works without requiring WSL -- that is, using Windows builds of GnuPG (either alone or as part of Gpg4Win). That means we can't use AF_UNIX but instead need to work with whatever we can do with gpg-agent.exe as it is. (This is why I switched back to PLink for git SSH support, since gpg-agent can act like Pageant.). I just noticed that issue #827 already exists to cover this situation. Oops.. @vovcacik You might not be aware of this but Gpg4win packages the official GPG installer and runs that internally. Latest Gpg4win includes gnupg 2.2.3 build 20171120. There's nothing \"unofficial\" about the GPG build included in Gpg4win.. I personally have a task set up to ssh -D whenever I lock my session or log out, in order to deal with this. It's evolved a little bit since June, but here's my writeup from back then: https://chris.charabaruk.com/2017/06/automated-ssh-agent-locking-win32-openssh/. I assume that %SSH_AUTH_SOCK% is set, and/or you're using a different ssh-add than the one that comes with Win32-OpenSSH. This port uses named pipes rather than files or sockets to communicate with ssh-agent, so anything that doesn't start with \\\\.\\pipe\\ is suspect.\nMake sure you're using the correct ssh-add.exe and that the %SSH_AUTH_SOCK% environment variable is unset, and it should work then.. ",
    "silarsis": "I got the same error. Running sshd with '-d' I get:\ndebug1: userauth-request for user kevin service ssh-connection method password\ndebug1: attempt 2 failures 1\nAccepted password for kevin from 10.1.1.21 port 55781 ssh2\ndebug1: Entering interactive session for SSH2.\ndebug1: pipe - read end: handle:00000000000001C0, io:0000021595656800, fd:4\ndebug1: pipe - write end: handle:0000000000000208, io:0000021595656A10, fd:6\ndebug1: server_init_dispatch_20\ndebug1: server_input_channel_open: ctype session rchan 0 win 1048576 max 16384\ndebug1: input_session_request\ndebug1: channel 0: new [server-session]\ndebug1: session_new: session 0\ndebug1: session_open: channel 0\ndebug1: session_open: session 0: link with channel 0\ndebug1: server_input_channel_open: confirm session\ndebug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\ndebug1: server_input_channel_req: channel 0 request pty-req reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req pty-req\ndebug1: Allocating pty.\ndebug1: session_pty_req: session 0 alloc console\ndebug1: server_input_channel_req: channel 0 request shell reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req shell\nStarting session: shell on console for kevin from 10.1.1.21 port 55781\ndebug1: pipe - read end: handle:000000000000020C, io:0000021595656330, fd:7\ndebug1: pipe - write end: handle:0000000000000210, io:0000021595656960, fd:8\ndebug1: pipe - read end: handle:0000000000000224, io:00000215956565F0, fd:9\ndebug1: pipe - write end: handle:0000000000000228, io:00000215956563E0, fd:10\ndebug1: pipe - read end: handle:000000000000022C, io:0000021595656490, fd:11\ndebug1: pipe - write end: handle:0000000000000230, io:0000021595656540, fd:12\ndebug1: -> GetHomeDirFromToken()...\ndebug1: <- GetHomeDirFromToken()...\ndebug1: Executing command: ssh-shellhost.exe\ndebug1: ERROR. Cannot create process as new user (1314).\nClient-side I have:\ndebug1: channel 0: new [client-session]\ndebug1: Requesting no-more-sessions@openssh.com\ndebug1: Entering interactive session.\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\ndebug1: recv - from CB ERROR:10054, io:0000029C991455F0\ndebug1: send - WSASend() ERROR:54, io:0000029C991455F0\ndebug1: send - WSASend() ERROR:54, io:0000029C991455F0\npacket_write_wait: Connection to 10.1.1.27: Unknown error\nC:\\Program Files\\OpenSSH-Win64>\nI'm not sure whether this is the actual issue causing the broken pipe, or whether this is #207 masking the other issue.\n. When running sshd.exe -d after executing that ntrights command and logging out/logging back in, it all works perfectly - connection is accepted and I'm logged in. Although I get periodic \"select - timing out\" messages on the client side that seem to lock things up - the server shows \"keepalive@openssh.com want_reply 1\" messages around the same time.\nWhen I exit the debug, and run net start sshd then try to ssh in, I'm back to it failing with the packer_write_wait error on the client side after providing my password.\n. Yup, that's done the trick.\nI'm on Win10 Version 1511 Build 14342.1001, fwiw - latest insiders build afaik.\nIt dropped me in C:\\Windows when I logged in, too - not my home dir.\n. ssh-agent.log:\n```\nC:\\Program Files\\OpenSSH-Win64> cat .\\ssh-agent.log\n3136 13:07:22 788 agent_start pid:3136, dbg:0, child:0, pipe:0\n3136 13:07:55 126 client pid 2724 connected on \\.\\pipe\\ssh-keyagent\n3136 13:07:55 142 debug1: spawned child 11324 to process 3\n11324 13:07:55 184 agent_start pid:11324, dbg:0, child:1, pipe:476\n11324 13:07:55 184 debug1: connection io 000002751628B650 #bytes:0 state:0\n11324 13:08:12 792 debug1: iocp error: 109 on 000002751628B650\n11324 13:08:12 792 debug1: connection 000002751628B650 clean up\n11324 13:08:12 792 debug1: iocp error: 6 on 0000000000000000\nC:\\Program Files\\OpenSSH-Win64>\n```\nI'm not actually seeing an sshd.log - and I ran Get-ChildItem / -Recurse -Filter 'sshd.log'. That's with sshd_config LogLevel set to \"DEBUG\".\n. ",
    "joelnb": "I am also getting this issue when installing the chocolatey package with:\n```\niex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))\n$env:Path += \";C:\\ProgramData\\Chocolatey\\bin\"\nchoco install win32-openssh -params '\"/SSHServerFeature /KeyBasedAuthenticationFeature\"' -confirm\n```\nThe suggested fix also worked for me but I get no logging even if I set LogLevel DEBUG in sshd_config (I didn't have the sshd.log at all but when I created it there was still no logging).\nEDIT: Possibly related to this? But I assumed that was just setting the LogLevel QUIET which was in sshd_config originally.\nWARNING: Explicitly disabling sshd logging as it currently logs about .5 GB / hour\n. ",
    "gr9": "FYI - I also noticed this in the march 2016 version of openssh; but installed the latest just now to verify its still happening. \n. Beautiful - confirmed fix; thank you kindly!\n. as a workaround in the mean time I've just set the properties for the service to automatically restart the service in case of failure.\n. As for workaround - you can change the settings in the services control panel (Control Panel->System->Administrative Tools->Services;  Right click sshd->Properties.  In the Recovery tab; set first, second and all subsequent failures to restart the service after a minute.  This makes the service mostly usable - however still not ideal; my guess is that I get approx 95% sshd uptime this way.  You have to wait for it to recover a couple of times a day. \n. ",
    "YuqingZhao": "Manoj, when will this issue be fixed? I'm working on a tool relying on %TMP% variable.\n. ",
    "volviq": "Is there any instructions page which describes how to deploy openssh on Nano Server? Ideally without compiling it by myself?\n. @Nomad1  Great, that solved it within a running Nano server instance.\nHas anyone tried to deploy this onto an offline vhd/vhdx image with DISM or other tools, so that I can already have it running on a newly created VM? This would be very useful.\n. ",
    "Nomad1": "How I did it:\n1. Downloaded x64 zip to local PC, unzipped it and pushed with PS to Nano Server to folder C:\\Program Files\\OpenSSH\n2. Edited install script to contain above path, copied whole script to clipboard and pasted to PS command prompt\n3. Ran 'sc.exe config sshd obj= LocalSystem'\n4. Ran Set-Service and Start-Service commands from main instruction https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\nSSH and SFTP works out of the box. Arrows, TAB and colors don't. Running powershell from ssh gives strange results and no error output, but it is still usable.\n. ",
    "v4virus4u": "I was able to deploy OpenSSH on nano server. Able to ssh also to the nano server. But is there any way or link where I can understand whether ssh can work without password? I have tried modifying the sshd/ssh configuration files but every time I get a password prompt.\nHow can we avoid password using SSH?\n. I am using OpenSSH_7.4p1, OpenSSL 1.0.2d 9 Jul 2015 & able to do a password-less ssh connection from linux to the windows system.\nWithin windows localhost am not able to perform password-less ssh connection using:\nssh.exe localhost 'command'\n\nBut if I specify a user say admin/root, a password prompt appears:\nssh.exe Administrator@localhost 'command'\n'domain'\\Administrator@localhost's password:\nMy project requires a password-less connection irrespective of user. Appreciate the guidance!\nThanks!. ",
    "rob-scheepens": "On psexec: I copied psexec64 to Nano's %SYSTEMROOT%\\System32 folder. Then I started to a local cmd on Nano by running \"start cmd\" from the remote PowerShell connection I had open to Nano. I then switched to the Nano vm's console, and ran \"psexec64 -s cmd\", which worked. This allowed me to carry out the key registrations under step 6 in the installation instructions on https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH. Testing an ssh connection from my Mac to the Nano vm worked ok.\n. @DarwinJS : just ran chocolateyinsall on a Nano server and it breaks because Invoke-WebRequest is not available in Nano (https://technet.microsoft.com/en-us/windows-server-docs/compute/nano-server/powershell-on-nano-server).\n\"[10.60.5.178]: PS C:\\temp> .\\chocolateyinstall.ps1\nThe term 'Invoke-WebRequest' is not recognized as the name of a cmdlet, function, script file, or operable program.\"\n. @DarwinJS : works like a charm, thanks! :)\n. @DarwinJS: when trying to use ssh-copy-id from my Mac to setup key-based authentication, I'm getting:\nPS /> ssh-copy-id administrator@10.61.16.126                                                                                                   \nadministrator@10.61.16.126's password: \npacket_write_wait: Connection to 10.61.16.126: Broken pipe\nCan you help enabling key-based authentication on Nano?\n. I installed using instructions from https://github.com/PowerShell/Win32-OpenSSH/issues/234#issuecomment-246081634.\n. @manojampalam, Nano build is 14393.rs1_release.160715-1616, OpenSSH is 0.0.1.0 (https://chocolatey.org/api/v2/package/openssh/0.0.1.0). Should the behavior be different on for example 14393.0.160911-2111.RS1_Refresh?\n. @manojampalam : after upgrading to 0.0.1.0 I seem to be running into https://github.com/PowerShell/Win32-OpenSSH/issues/347 on Nano. Any ETA on when this will be addressed?\n. @bagajjal @joeyaiello, could you share an update to the timelines? I'm eagerly awaiting a production ready version.. @joeyaiello : is there any further update on when OpenSSH/Win32 will reach Production Ready status?. @joeyaiello : could you provide more info on the timeline here? What is keeping OpenSSH from releasing?. Hi @joeyaiello , now 1803 is out the door, is OpenSSH GA/Production Ready now? Or should we wait until 2019 (LTSC) releases?. I'm executing this from CentOS 7.3 terminal, as mentioned under Client OperatingSystem.. @bagajjal I re-did the whole setup again and now I am able to get it working. I suspect a misconfig was the issue here. Closing now, thanks for the response.. I'm trying to get this to work on 7.9.0.1 on 2019. Using ProcMon i noticed this ACCESS_DENIED for sshd.exe:\n8:02:15.4257933 AM sshd.exe    2084    RegOpenKey  HKLM\\System\\CurrentControlSet\\Services\\WinSock2\\Parameters  ACCESS DENIED   Desired Access: All Access\nAdding NT SERVICE\\sshd to the relevant location did not make a difference.\nDebug log:\nC:\\Program Files\\OpenSSH-Win64>sshd -d\ndebug1: sshd version OpenSSH_for_Windows_7.9, LibreSSL 2.6.5\ndebug1: get_passwd: LookupAccountName() failed: 1332.\ndebug1: private host key #0: ssh-rsa SHA256:7bomFacw1cHpyMCnzLi3+G4HOicIv3jddTnWigJEjY4\ndebug1: private host key #1: ecdsa-sha2-nistp256 SHA256:va3LpBEn29gupfMrlqnUjl3/U9rav8tau3WfEmFEuzA\ndebug1: private host key #2: ssh-ed25519 SHA256:rx6LykIntPF00V4fTlv6mw8TlwL15iRBhhECrHRUEzA\ndebug1: rexec_argv[0]='sshd'\ndebug1: rexec_argv[1]='-d'\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug1: Server will not fork when running in debugging mode.\nConnection from 10.56.1.102 port 49808 on 10.57.16.149 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_for_Windows_7.9\ndebug1: match: OpenSSH_for_Windows_7.9 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.9\ndebug1: sshd version OpenSSH_for_Windows_7.9, LibreSSL 2.6.5\ndebug1: get_passwd: LookupAccountName() failed: 1332.\ndebug1: list_hostkey_types: rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug1: SSH2_MSG_KEXINIT sent [preauth]\ndebug1: SSH2_MSG_KEXINIT received [preauth]\ndebug1: kex: algorithm: curve25519-sha256 [preauth]\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: SSH2_MSG_NEWKEYS sent [preauth]\ndebug1: expecting SSH2_MSG_NEWKEYS [preauth]\ndebug1: SSH2_MSG_NEWKEYS received [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: KEX done [preauth]\ndebug1: userauth-request for user drmperf1\\\\\\\\administrator service ssh-connection method none [preauth]\ndebug1: attempt 0 failures 0 [preauth]\ndebug1: get_passwd: LookupAccountName() failed: 1332.\nInvalid user drmperf1\\\\administrator from 10.56.1.102 port 49808\ndebug1: authentication methods list 0: publickey\ndebug1: authentication methods list 0: publickey [preauth]\ndebug1: userauth-request for user drmperf1\\\\\\\\administrator service ssh-connection method publickey [preauth]\ndebug1: attempt 1 failures 0 [preauth]\ndebug1: userauth_pubkey: test pkalg rsa-sha2-512 pkblob RSA SHA256:q46vzhlzMioBX9RHDS3L9WqgVvO07wIaXMPr3LKdNUU [preauth]\nConnection reset by invalid user drmperf1\\\\\\\\administrator 10.56.1.102 port 49808 [preauth]\ndebug1: do_cleanup [preauth]\ndebug1: monitor_read_log: child log fd closed\ndebug1: do_cleanup\ndebug1: Killing privsep child 4684\nEdit: fixed by specifying administrator so it looked for the user administrator on the ssh server instead of the domain user I was logged on with, as the ssh server is not part of the same domain.. ",
    "ader1990": "Got the same issue here. Any ideas?\nThanks.\n. ",
    "Buzz2Buzz": "Nothing about that ? Got the same ...\nThanks\n. ",
    "reidrankin": "Having the same problem here.\npsexec -s C:\\blahblahblah\\ssh-add.exe -L\n```\nPsExec v2.2 - Execute processes remotely\nCopyright (C) 2001-2016 Mark Russinovich\nSysinternals - www.sysinternals.com\necdsa-sha2-nistp256 blahblahblah ssh_host_ecdsa_key\nssh-ed25519 blahblahblah WORKGROUP\\BLAHBLAHBLAH$@Blahblahblah\nssh-rsa blahblahblah ssh_host_rsa_key\nssh-dss blahblahblah ssh_host_dsa_key\nC:\\blahblahblah\\ssh-add.exe exited on BLAHBLAHBLAH with error code 0.\n```\nssh -ddd\ndebug2: load_server_config: filename ./sshd_config\ndebug2: load_server_config: done config len = 359\ndebug2: parse_server_config: config ./sshd_config len 359\ndebug3: ./sshd_config:47 setting PubkeyAuthentication yes\ndebug3: ./sshd_config:51 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: ./sshd_config:64 setting PasswordAuthentication no\ndebug3: ./sshd_config:68 setting ChallengeResponseAuthentication no\ndebug3: ./sshd_config:116 setting Subsystem sftp        C:\\\\blahblahblah\\\\sftp-server.exe\ndebug3: ./sshd_config:123 setting PubkeyAcceptedKeyTypes ssh-ed25519*,ssh-rsa*,ecdsa-sha2*\ndebug1: sshd version OpenSSH_7.4, OpenSSL 1.0.2d 9 Jul 2015\ndebug2: open - pathname:./ssh_host_rsa_key, flags:0, mode:0\ndebug1: open - CreateFile ERROR:2\ndebug1: key_load_private: No such file or directory\ndebug2: open - pathname:./ssh_host_rsa_key, flags:0, mode:0\ndebug1: open - CreateFile ERROR:2\ndebug1: key_load_public: No such file or directory\nCould not load host key: ./ssh_host_rsa_key\ndebug2: open - pathname:./ssh_host_dsa_key, flags:0, mode:0\ndebug1: open - CreateFile ERROR:2\ndebug1: key_load_private: No such file or directory\ndebug2: open - pathname:./ssh_host_dsa_key, flags:0, mode:0\ndebug1: open - CreateFile ERROR:2\ndebug1: key_load_public: No such file or directory\nCould not load host key: ./ssh_host_dsa_key\ndebug2: open - pathname:./ssh_host_ecdsa_key, flags:0, mode:0\ndebug1: open - CreateFile ERROR:2\ndebug1: key_load_private: No such file or directory\ndebug2: open - pathname:./ssh_host_ecdsa_key, flags:0, mode:0\ndebug1: open - CreateFile ERROR:2\ndebug1: key_load_public: No such file or directory\nCould not load host key: ./ssh_host_ecdsa_key\ndebug2: open - pathname:./ssh_host_ed25519_key, flags:0, mode:0\ndebug1: open - CreateFile ERROR:2\ndebug1: key_load_private: No such file or directory\ndebug2: open - pathname:./ssh_host_ed25519_key, flags:0, mode:0\ndebug1: open - CreateFile ERROR:2\ndebug1: key_load_public: No such file or directory\nCould not load host key: ./ssh_host_ed25519_key\nsshd: no hostkeys available -- exiting.. ",
    "areiter": "I think I have the same problem.\nsshd frequently stops working with the following error message.\nFaulting application name: sshd.exe, version: 0.0.0.0, time stamp: 0x574c7019\nFaulting module name: KERNELBASE.dll, version: 10.0.10586.494, time stamp: 0x5775e4c5\nException code: 0x80000003\nFault offset: 0x00000000000c2d52\nFaulting process ID: 0x650\nFaulting application start time: 0x01d1df1c47c91d4f\nFaulting application path: C:\\Program Files\\OpenSSH-Win64\\sshd.exe\nFaulting module path: C:\\Windows\\system32\\KERNELBASE.dll\nReport ID: d7dd10a0-688c-477f-9558-6fd989bb7a3a\nFaulting package full name: \nFaulting package-relative application ID:\n. ",
    "Fox4305": "same error here\n. ",
    "yukisekisan": "Same error here.\nOS: Windows Server 2012 R2 64x\nThe time of exception is random\n. ",
    "mzagar": "Same error here:\nFaulting application name: sshd.exe, version: 0.0.1.0, time stamp: 0x57ef503e\nFaulting module name: KERNELBASE.dll, version: 6.3.9600.18292, time stamp: 0x56fcb50a\nException code: 0x80000003\nFault offset: 0x00000000000de2d2\nFaulting process id: 0x654\nFaulting application start time: 0x01d220631d40f9a1\nFaulting application path: C:\\Program Files\\OpenSSH\\sshd.exe\nFaulting module path: C:\\Windows\\system32\\KERNELBASE.dll\nReport Id: 7d416b8d-8c56-11e6-80d7-00155d1e6600\nFaulting package full name: \nFaulting package-relative application ID: \n. ",
    "soidamientrung": "Same error:\nFaulting application name: sshd.exe, version: 0.0.0.0, time stamp: 0x574c7019\nFaulting module name: KERNELBASE.dll, version: 6.3.9600.18264, time stamp: 0x56e1bd71\nException code: 0x80000003\nFault offset: 0x00000000000de0e2\nFaulting process id: 0xf8c\nFaulting application start time: 0x01d229af75fd5810\nFaulting application path: C:\\openssh\\sshd.exe\nFaulting module path: C:\\Windows\\system32\\KERNELBASE.dll\nReport Id: 05315aff-95e0-11e6-80cb-005056b264b5\nFaulting package full name: \nFaulting package-relative application ID: \n. ",
    "svswaminathan": "Facing the same error with the below logs from event viewer!\nFaulting application name: sshd.exe, version: 0.0.0.0, time stamp: 0x574c7019\nFaulting module name: KERNELBASE.dll, version: 6.3.9600.18007, time stamp: 0x55c4c341\nException code: 0x80000003\nFault offset: 0x00000000000ddfd2\nFaulting process id: 0x1e6c\nFaulting application start time: 0x01d22b5d069df58b\nFaulting application path: C:\\OpenSSH\\sshd.exe\nFaulting module path: C:\\Windows\\system32\\KERNELBASE.dll\nReport Id: 34d79087-9832-11e6-80f6-005056b6e5fc\nFaulting package full name: \nFaulting package-relative application ID: \nOS: Windows Server 2012 R2 64x\nAny workaround or resolution for this issue ?\n. ",
    "wrigler": "Hello, facing also the same error (Windows 2012R2 fully updated):\nFaulting application name: sshd.exe, version: 0.0.2.0, time stamp: 0x580c37e9\nFaulting module name: KERNELBASE.dll, version: 6.3.9600.18340, time stamp: 0x57366075\nException code: 0x80000003\nFault offset: 0x00000000000de2d2\nFaulting process id: 0xb00\nFaulting application start time: 0x01d235c915682458\nFaulting application path: C:\\OpenSSH-Win\\sshd.exe\nFaulting module path: C:\\Windows\\system32\\KERNELBASE.dll\nReport Id: 64c0bc79-a1be-11e6-80f1-005056010ace\nFaulting package full name: \nFaulting package-relative application ID: \n. ",
    "friism": "With 0.0.3.0 I started setting sc.exe failure sshd reset= 86400 actions= restart/500 - that worked around the instability.\nI'm running 0.0.5.0 with the restart setting above, but haven'g tested whether it's stable without.. @rgl yeah, I think it is:\n```\nGet-EventLog -Log \"Application\" -Source \"Application Error\" -Message \"sshd.exe\" | Format-List\nIndex              : 649\nEntryType          : Error\nInstanceId         : 1000\nMessage            : Faulting application name: sshd.exe, version: 0.0.5.0, time stamp: 0x585626f5\n                     Faulting module name: KERNELBASE.dll, version: 10.0.14393.321, time stamp: 0x57f4c4f0\n                     Exception code: 0x80000003\n                     Fault offset: 0x00000000000c6142\n                     Faulting process id: 0x1298\n                     Faulting application start time: 0x01d2602a146e0964\n                     Faulting application path: C:\\OpenSSH-Win64\\sshd.exe\n                     Faulting module path: C:\\Windows\\System32\\KERNELBASE.dll\n                     Report Id: d577f0de-2efd-4053-a96a-f6b5205cabb2\n                     Faulting package full name:\n                     Faulting package-relative application ID:\nCategory           : Application Crashing Events\nCategoryNumber     : 100\nReplacementStrings : {sshd.exe, 0.0.5.0, 585626f5, KERNELBASE.dll...}\nSource             : Application Error\nTimeGenerated      : 12/27/2016 10:19:22 AM\nTimeWritten        : 12/27/2016 10:19:22 AM\nUserName           :\nIndex              : 648\nEntryType          : Error\nInstanceId         : 1000\nMessage            : Faulting application name: sshd.exe, version: 0.0.5.0, time stamp: 0x585626f5\n                     Faulting module name: KERNELBASE.dll, version: 10.0.14393.321, time stamp: 0x57f4c4f0\n                     Exception code: 0x80000003\n                     Fault offset: 0x00000000000c6142\n                     Faulting process id: 0x15a0\n                     Faulting application start time: 0x01d26029e7c65781\n                     Faulting application path: C:\\OpenSSH-Win64\\sshd.exe\n                     Faulting module path: C:\\Windows\\System32\\KERNELBASE.dll\n                     Report Id: 265eaed9-1a65-45dd-aa88-c16fd8e64db5\n                     Faulting package full name:\n                     Faulting package-relative application ID:\nCategory           : Application Crashing Events\nCategoryNumber     : 100\nReplacementStrings : {sshd.exe, 0.0.5.0, 585626f5, KERNELBASE.dll...}\nSource             : Application Error\nTimeGenerated      : 12/27/2016 10:14:58 AM\nTimeWritten        : 12/27/2016 10:14:58 AM\nUserName           :\n```. @manojampalam how does one collect that?. @DarwinJS I just encountered this problem too. Is there any way to activate a user so that you don't have to login with password first, but can start using publickey auth right off the bat?\n. @DarwinJS I got it mostly working, except for the first password to login: https://github.com/friism/ec2-windows-packer-ssh\n. I have fully password-less SSH working on EC2 now: https://github.com/friism/ec2-windows-packer-ssh. @manojampalam I see this too on Windows Server 2016 RTM.\n```\nPS C:\\Program Files\\OpenSSH-Win64> $PSVersionTable.PSVersion\nMajor  Minor  Build  Revision\n\n5      1      14393  206\n```. @manojampalam yeah, do you have a scriptable workaround?. @manojampalam \n```\nPS C:\\Program Files\\OpenSSH-Win64> $AdObj = New-Object System.Security.Principal.NTAccount('NT SERVICE\\sshd')\n\n\n$AdObj.Translate([System.Security.Principal.SecurityIdentifier]).Value\nS-1-5-80-3847866527-469524349-687026318-516638107-1125189541\nPS C:\\Program Files\\OpenSSH-Win64>\n```\n\n\nI'm upgrading from v0.0.3.0 which worked great.. I sent a PR: https://github.com/PowerShell/openssh-portable/pull/34. @manojampalam it appears to work, thanks!\nI have a question: It looks like you just took the changes in my commit, created a new commit with you as author and pushed that to your branch. This eradicates any trace of me authoring the change. Instead, you could have just cherry-picked the commit into your branch. Is there any reason you did that, eg. that I had to sign a contribution agreement or something, and it was too much work for me to sign it?. Now that I'm through the install, I'm seeing the same error @jbaumbach is:\nThe application-specific permission settings do not grant Local Activation permission for the COM Server application with CLSID \n{D63B10C5-BB46-4990-A94F-E40B9D520160}\n and APPID \n{9CA88EE3-ACB7-47C8-AFC4-AB702511C276}\n to the user NT SERVICE\\sshd SID (S-1-5-80-3847866527-469524349-687026318-516638107-1125189541) from address LocalHost (Using LRPC) running in the application container Unavailable SID (Unavailable). This security permission can be modified using the Component Services administrative tool.. I think it's this problem: https://support.microsoft.com/en-us/kb/899965. I'm pondering if this is the cause: https://github.com/PowerShell/openssh-portable/commit/654c18f96023b7d580d6048b84417cad66199645. This is the error:\n2017/01/22 09:20:39 packer.exe: 2017/01/22 09:20:39 opening new ssh session\n2017/01/22 09:20:39 packer.exe: 2017/01/22 09:20:39 Starting remote scp process:  scp -vt C:/\n2017/01/22 09:20:39 packer.exe: 2017/01/22 09:20:39 Started SCP session, beginning transfers...\n2017/01/22 09:20:39 packer.exe: 2017/01/22 09:20:39 Copying input data into temporary file so we can read the length\n2017/01/22 09:20:39 packer.exe: 2017/01/22 09:20:39 [DEBUG] scp: Uploading button-down.ps1: perms=C0644 size=1219\n2017/01/22 09:20:39 packer.exe: 2017/01/22 09:20:39 SCP session complete, closing stdin pipe.\n2017/01/22 09:20:39 packer.exe: 2017/01/22 09:20:39 Waiting for SSH session to complete.\n2017/01/22 09:20:39 packer.exe: 2017/01/22 09:20:39 non-zero exit status: 4\n2017/01/22 09:20:39 packer.exe: 2017/01/22 09:20:39 Retryable error: Error uploading script: Process exited with status 4\n2017/01/22 09:20:41 packer.exe: 2017/01/22 09:20:41 [INFO] 1219 bytes written for 'uploadData'\nI get it when configuring packer to use sftp too. Interactive ssh prompt works fine. Awesome, thanks @manojampalam . @gd197 did you find the problem? I'm having the same problem: I can log in using git-bash OpenSSH client, but the Go-lang client in Packer fails with similar stuff in the log.. Here are some other things that don't work for me from a Windows client to a open-ssh from this repo running on Windows server.\nGit-bash\n```\nfriism@LAPTOP-G8D4BRBC MINGW64 ~\n$ ssh -V\nOpenSSH_7.3p1, OpenSSL 1.0.2j  26 Sep 2016\nssh Administrator@52.37.23.57 powershell\n```\n\nup/down arrow doesn't cycle through command history, it moves the cursor up and down\nctrl+c is not sent to process run in the SSH session, it terminates the SSH session\n...etc\n\nConemu/powershell\n```\nC:\\code\\aws-win-packer [master +5 ~2 -0 !]> ssh -V\nOpenSSH_7.1p1 Microsoft_Win32_port_with_VS Nov  6 2016, OpenSSL 1.0.2d 9 Jul 2015\nssh -i \"C:\\Users\\Michael Friis\\Downloads\\friism-test.pem\" Administrator@52.37.23.57 powershell\n```\n\nup/down arrow doesn't work at all\nctrl+c closes SSH session. @bagajjal also the arrow-key and ctrl+c stuff that I mentioned?. @bagajjal here's a video: https://www.youtube.com/watch?v=Y2MBPOS5X7o&feature=youtu.be\n\nThis is with 0.0.8.0 on WS2016 server with MinGW SSH client\n. @bagajjal the most annoying thing is in the latter part of the video when I do ssh Administrator@<IP> powershell you'll notice that hidding up-arrow just moves the cursor around in the terminal window.. It's server side - that's what's changing. The client is whatever ssh lib\nPacker uses\nOn Sat, Feb 25, 2017 at 4:29 PM Manoj Ampalam notifications@github.com\nwrote:\n\nCan you check if its client or server side that made the difference? Try\nwith 8.0 client and 9.0 server and vice versa.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/540#issuecomment-282523088,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAHsmJ6URqFBIS7C39a7A43x5gKrX6q4ks5rgMeEgaJpZM4MK2dv\n.\n-- \nhttp://friism.com/\n(650) 318-1051\nSapere aude\n. @manojampalam that's very hard. The problem happens when the windows instance goes into sysprep...\n. @manojampalam I just tested and the problem is still extant with 0.0.10.0. I'm not going to re-open since there's no way for you to reproduce. I'll try to narrow down the problem, but as mentioned it's not really easy. @DarwinJS WS2016 is supposed to use EC2Launch: http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2launch.html#ec2launch-sysprep. @manojampalam this is still a problem with 0.0.11.0.. thanks @manojampalam - I haven't worked on this in a while. Pinging @dave-tucker in case he's still seeing this problem. \n",
    "carcus88": "Getting the same exception code 0x80000003 at random times when the ssh server is just sitting idle. \n. @manojampalam I was using 0.0.4.0 and updated to 0.0.6.0 and still get the crashes. I can easily re-produce  the crash in a matter of minutes by spawning multiple SFTP sessions that upload and chdir on a lot of files (500+). I used the MS debug diagnostics tool to capture this crash dump.\nCrash rule for all instances of sshd.exe.zip\nIts worth noting that I have SSHD listening on two ports (22 and 222) for two different IP addresses. I am uploading to the second port during these tests (222). After the crash the service auto-restarts and I can still connect to port 22 but not port 222 until I manually restart the service.\n. Initial tests are promising, I am no longer able to get sshd.exe to crash when uploading multiple files during multiple sessions. Thanks @manojampalam !\n. On server 2012 I can confirm public key auth works when using the chocolatey package when running that command. @mohag . ",
    "jashuang99": "hi all,\nI'm new to using openssh.  we have 0.0.5.0 installed, but are currently experiencing the error described above.  Looks like the fix is in place.  Could someone guide me through how to apply the fix to the server?\nmuch appreciated.\n. @bagajjal , Thanks.  I've actually tried to upgrade to 0.0.24.0 on our test server, but wasn't able to find a detailed upgrade guide, and the newly installed version wouldn't even run.  so I've reverted it back to 0.0.5.0.  here's what I did for upgrade:\n- backed up the current version\n- uninstall the current version\n- install the new version\n- copy the config file back\ndoes that look correct?. @bagajjal Thanks for the information.  I've successfully upgraded it to version 1.0.  sshd.exe is started and running.  however, when I try to connect to the server from the client (using winscp), I get a timeout error.  Nothing was recorded in the log.  any suggestions to resolve this?  TIA.. ",
    "harpsingh": "Any help here?\n. I just tried to add \"AddressFamily inet\" to my sshd_config, restarted sshd but the log continues to grow like before.\n. ",
    "dud225": "Hello @harpsingh \nI have the same issue. Muting sshd seems to be the sole workaround for now.\nSee : https://github.com/PowerShell/Win32-OpenSSH/issues/138 for more details.\ndud\n. @manojampalam \nI'm using 2012 R2. I can confirm that port 22 is available prior to the start of OpenSSH.\n. Hello.\nI'm getting the exact same issue on a 2012 Server. Password auth works fine, but there is no way to get public key auth working.\nI've reinstalled OpenSSH several times, I've checked that the install-sshlsa.ps1 executed properly, I've tried to launch the service as the administrator account, I've tried to specify an explicit authorized_keys path, in vain.....\n. > C:\\Users\\Marc.ssh\\authorized_keys should be\n\nC:\\Users\\Marc.ssh\\authorized_keys\n\nWhat's the difference ??\n. ",
    "dveter": "Same problem. 32-bit Server 2008 R2, port 22 looks opened using netstat.\n. ",
    "Aetylus": "I'm also having the same issue, but on rather clean install of Windows Server 2012 R2.\n. @richard-browne Thanks, that seems to have fixed the issue on Server 2012 R2!\n. ",
    "richard-browne": "I have the same problem. But I'm on Windows 7.\n. Ok, for others having this issue. I've debugged sshd in Visual Studio and I believe it's an issue with IPv6 (AF_INET6). Can you please try putting this line in your sshd_config file and tell me if it fixes the problem:\nAddressFamily inet\n. Alrighty I have a fix. The socketio_acceptEx() function in socketio.c needs to specify the right AF_INET/AF_INET6 family in the socket() call that creates the accept socket. At the moment it's passing AF_UNSPEC which works for AF_INET sockets but fails for AF_INET6. (The AcceptEx call returns WSAEINVAL).\nCould one of the devs kindly incorprate the attached patch please..\nsockio.c.txt\n. It's not just a Nano issue. I am on Windows 7 (Enterprise). Domain joined. Perhaps it's something to do with our group policy.\n. ",
    "kassyuz": "@richard-browne Thanks, after I added \"AddressFamily inet\" ran on Server 2008 R2 Std!\n. ",
    "Cris70": "Adding \"AddressFamily inet\" fixed the problem here on Windows Server 2008 R2 Std SP1.\n. ",
    "Leproide": "Same problem.\nW7 Pro\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/606. Hi, thanks for the fast reply\nNo more pid error but:\n7632 23:36:29 209 debug2: signal() sig:2, handler:00000001\n7632 23:36:29 211 debug1: socket:420, socktype:1, io:00351B70, fd:3 \n7632 23:36:29 211 debug3: w32_fcntl fd:3\n7632 23:36:29 211 debug2: fd 3 setting O_NONBLOCK\n7632 23:36:29 211 debug3: w32_fcntl fd:3\n7632 23:36:29 211 debug3: w32_fcntl fd:3\n7632 23:36:29 211 debug3: w32_setsockopt fd:3\n7632 23:36:29 211 debug1: Bind to port 22 on 0.0.0.0.\n7632 23:36:29 211 debug3: w32_bind fd:3\n7632 23:36:29 212 debug3: w32_listen fd:3\n7632 23:36:29 217 Server listening on 0.0.0.0 port 22.\n7632 23:36:29 217 debug2: signal() sig:6, handler:01135A20\n7632 23:36:29 217 debug2: signal() sig:3, handler:01135B40\n7632 23:36:29 217 debug2: signal() sig:8, handler:01135B30\n7632 23:36:29 217 debug2: signal() sig:7, handler:01135B30\n7632 23:36:29 217 debug3: w32_select fd:3\n7632 23:36:29 217 debug3: Total in fds:1\n7632 23:36:29 217 debug2: on_select - io:00351B70 type:1 rd:1\n7632 23:36:29 217 debug3: acceptEx - io:00351B70\n7632 23:36:29 218 debug1: acceptEx - AcceptEx() ERROR:22, io:00351B70\n7632 23:36:29 218 debug3: wait() on 0 events and 0 children\n7632 23:36:29 218 debug3: select - returning 1\n7632 23:36:29 218 debug3: w32_accept fd:3\n7632 23:36:29 218 debug3: accept - io:00351B70\n7632 23:36:29 218 debug1: accept - ERROR: async io completed with error: -9978, io:00351B70\n7632 23:36:29 218 error: accept: Unknown error\n7632 23:36:29 218 debug3: w32_select fd:3\n7632 23:36:29 218 debug3: Total in fds:1\n7632 23:36:29 219 debug2: on_select - io:00351B70 type:1 rd:1\n7632 23:36:29 219 debug3: acceptEx - io:00351B70\n7632 23:36:29 219 debug1: acceptEx - AcceptEx() ERROR:22, io:00351B70\n7632 23:36:29 219 debug3: wait() on 0 events and 0 children\n7632 23:36:29 219 debug3: select - returning 1\n7632 23:36:29 219 debug3: w32_accept fd:3\n7632 23:36:29 219 debug3: accept - io:00351B70\n7632 23:36:29 219 debug1: accept - ERROR: async io completed with error: -9978, io:00351B70\n7632 23:36:29 219 error: accept: Unknown error. Config:\n```\n$OpenBSD: sshd_config,v 1.84 2011/05/23 03:30:07 djm Exp $\nThis is the sshd server system-wide configuration file.  See\nsshd_config(5) for more information.\nThis sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin\nThe strategy used for options in the default sshd_config shipped with\nOpenSSH is to specify options with their default value where\npossible, but leave them commented.  Uncommented options override the\ndefault value.\nPort 22\nAddressFamily inet\nListenAddress 0.0.0.0\nListenAddress ::\nThe default requires explicit activation of protocol 1\nProtocol 2\nHostKey for protocol version 1\nHostKey /etc/ssh/ssh_host_key\nHostKeys for protocol version 2\nHostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_dsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\nLifetime and size of ephemeral version 1 server key\nKeyRegenerationInterval 1h\nServerKeyBits 1024\nLogging\nobsoletes QuietMode and FascistLogging\nSyslogFacility AUTH\nLogLevel DEBUG3\nAuthentication:\nLoginGraceTime 2m\nPermitRootLogin yes\nStrictModes yes\nMaxAuthTries 6\nMaxSessions 10\nRSAAuthentication yes\nPubkeyAuthentication yes\nThe default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\nbut this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile  .ssh/authorized_keys\nFor this to work you will also need host keys in /etc/ssh/ssh_known_hosts\nRhostsRSAAuthentication no\nsimilar for protocol version 2\nHostbasedAuthentication no\nChange to yes if you don't trust ~/.ssh/known_hosts for\nRhostsRSAAuthentication and HostbasedAuthentication\nIgnoreUserKnownHosts no\nDon't read the user's ~/.rhosts and ~/.shosts files\nIgnoreRhosts yes\nTo disable tunneled clear text passwords, change to no here!\nPasswordAuthentication yes\nPermitEmptyPasswords no\nChange to no to disable s/key passwords\nChallengeResponseAuthentication yes\nKerberos options\nKerberosAuthentication no\nKerberosOrLocalPasswd yes\nKerberosTicketCleanup yes\nKerberosGetAFSToken no\nGSSAPI options\nGSSAPIAuthentication no\nGSSAPICleanupCredentials yes\nSet this to 'yes' to enable PAM authentication, account processing,\nand session processing. If this is enabled, PAM authentication will\nbe allowed through the ChallengeResponseAuthentication and\nPasswordAuthentication.  Depending on your PAM configuration,\nPAM authentication via ChallengeResponseAuthentication may bypass\nthe setting of \"PermitRootLogin without-password\".\nIf you just want the PAM account and session checks to run without\nPAM authentication, then enable this but set PasswordAuthentication\nand ChallengeResponseAuthentication to 'no'.\nUsePAM no\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nGatewayPorts no\nX11Forwarding no\nX11DisplayOffset 10\nX11UseLocalhost yes\nPrintMotd yes\nPrintLastLog yes\nTCPKeepAlive yes\nUseLogin no\nUsePrivilegeSeparation yes\nPermitUserEnvironment no\nCompression delayed\nClientAliveInterval 0\nClientAliveCountMax 3\nUseDNS yes\nPidFile C:\\openssh\\sshd.pid\nMaxStartups 10\nPermitTunnel no\nChrootDirectory none\nno default banner path\nBanner C:\\openssh\\Banner.txt\noverride default of no subsystems\nSubsystem   sftp    C:\\openssh\\sftp-server.exe\nExample of overriding settings on a per-user basis\nMatch User anoncvs\nX11Forwarding no\nAllowTcpForwarding no\nForceCommand cvs server\nPubkeyAcceptedKeyTypes ssh-ed25519,ssh-rsa,ssh-dss,ecdsa-sha2\n```. 8224 23:48:59 183 debug2: signal() sig:2, handler:00000001\n8224 23:48:59 183 debug1: socket:356, socktype:1, io:00201BF0, fd:3 \n8224 23:48:59 183 debug3: w32_fcntl fd:3\n8224 23:48:59 183 debug2: fd 3 setting O_NONBLOCK\n8224 23:48:59 183 debug3: w32_fcntl fd:3\n8224 23:48:59 183 debug3: w32_fcntl fd:3\n8224 23:48:59 183 debug3: w32_setsockopt fd:3\n8224 23:48:59 183 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n8224 23:48:59 183 debug3: w32_setsockopt fd:3\n8224 23:48:59 184 debug1: Bind to port 22 on ::.\n8224 23:48:59 184 debug3: w32_bind fd:3\n8224 23:48:59 184 debug3: w32_listen fd:3\n8224 23:48:59 189 Server listening on :: port 22.\n8224 23:48:59 189 debug1: socket:428, socktype:1, io:00201C70, fd:4 \n8224 23:48:59 189 debug3: w32_fcntl fd:4\n8224 23:48:59 189 debug2: fd 4 setting O_NONBLOCK\n8224 23:48:59 189 debug3: w32_fcntl fd:4\n8224 23:48:59 189 debug3: w32_fcntl fd:4\n8224 23:48:59 189 debug3: w32_setsockopt fd:4\n8224 23:48:59 189 debug1: Bind to port 22 on 0.0.0.0.\n8224 23:48:59 189 debug3: w32_bind fd:4\n8224 23:48:59 189 debug3: w32_listen fd:4\n8224 23:48:59 194 Server listening on 0.0.0.0 port 22.\n8224 23:48:59 194 debug2: signal() sig:6, handler:003A5A20\n8224 23:48:59 194 debug2: signal() sig:3, handler:003A5B40\n8224 23:48:59 194 debug2: signal() sig:8, handler:003A5B30\n8224 23:48:59 194 debug2: signal() sig:7, handler:003A5B30\n8224 23:48:59 195 debug3: w32_select fd:3\n8224 23:48:59 195 debug3: w32_select fd:4\n8224 23:48:59 195 debug3: Total in fds:2\n8224 23:48:59 195 debug2: on_select - io:00201BF0 type:1 rd:1\n8224 23:48:59 195 debug3: acceptEx - io:00201BF0\n8224 23:48:59 195 debug2: on_select - io:00201C70 type:1 rd:1\n8224 23:48:59 195 debug3: acceptEx - io:00201C70\n8224 23:48:59 195 debug1: acceptEx - AcceptEx() ERROR:22, io:00201C70\n8224 23:48:59 195 debug3: wait() on 0 events and 0 children\n8224 23:48:59 195 debug3: select - returning 1\n8224 23:48:59 195 debug3: w32_accept fd:4\n8224 23:48:59 195 debug3: accept - io:00201C70\n8224 23:48:59 195 debug1: accept - ERROR: async io completed with error: -9978, io:00201C70\n8224 23:48:59 195 error: accept: Unknown error\n8224 23:48:59 195 debug3: w32_select fd:3\n8224 23:48:59 195 debug3: w32_select fd:4\n8224 23:48:59 195 debug3: Total in fds:2\n8224 23:48:59 195 debug2: on_select - io:00201BF0 type:1 rd:1\n8224 23:48:59 195 debug2: on_select - io:00201C70 type:1 rd:1\n8224 23:48:59 195 debug3: acceptEx - io:00201C70\n8224 23:48:59 195 debug1: acceptEx - AcceptEx() ERROR:22, io:00201C70\n8224 23:48:59 195 debug3: wait() on 0 events and 0 children\n8224 23:48:59 195 debug3: select - returning 1\n8224 23:48:59 195 debug3: w32_accept fd:4\n8224 23:48:59 195 debug3: accept - io:00201C70\n8224 23:48:59 195 debug1: accept - ERROR: async io completed with error: -9978, io:00201C70\n8224 23:48:59 195 error: accept: Unknown error\n8224 23:48:59 195 debug3: w32_select fd:3\n8224 23:48:59 195 debug3: w32_select fd:4\n8224 23:48:59 195 debug3: Total in fds:2\n8224 23:48:59 195 debug2: on_select - io:00201BF0 type:1 rd:1\n8224 23:48:59 195 debug2: on_select - io:00201C70 type:1 rd:1\n8224 23:48:59 195 debug3: acceptEx - io:00201C70\n8224 23:48:59 195 debug1: acceptEx - AcceptEx() ERROR:22, io:00201C70\n8224 23:48:59 195 debug3: wait() on 0 events and 0 children\n8224 23:48:59 195 debug3: select - returning 1\n8224 23:48:59 195 debug3: w32_accept fd:4\n8224 23:48:59 195 debug3: accept - io:00201C70\n8224 23:48:59 195 debug1: accept - ERROR: async io completed with error: -9978, io:00201C70\n8224 23:48:59 195 error: accept: Unknown error\n8224 23:48:59 195 debug3: w32_select fd:3\n8224 23:48:59 195 debug3: w32_select fd:4\n8224 23:48:59 195 debug3: Total in fds:2\n8224 23:48:59 195 debug2: on_select - io:00201BF0 type:1 rd:1\n8224 23:48:59 195 debug2: on_select - io:00201C70 type:1 rd:1\n8224 23:48:59 195 debug3: acceptEx - io:00201C70\n8224 23:48:59 195 debug1: acceptEx - AcceptEx() ERROR:22, io:00201C70\n8224 23:48:59 195 debug3: wait() on 0 events and 0 children\n8224 23:48:59 195 debug3: select - returning 1\n8224 23:48:59 195 debug3: w32_accept fd:4\n8224 23:48:59 195 debug3: accept - io:00201C70\n8224 23:48:59 195 debug1: accept - ERROR: async io completed with error: -9978, io:00201C70\n8224 23:48:59 195 error: accept: Unknown error\n8224 23:48:59 195 debug3: w32_select fd:3\n8224 23:48:59 195 debug3: w32_select fd:4\n8224 23:48:59 195 debug3: Total in fds:2\n8224 23:48:59 195 debug2: on_select - io:00201BF0 type:1 rd:1\n8224 23:48:59 195 debug2: on_select - io:00201C70 type:1 rd:1\n8224 23:48:59 195 debug3: acceptEx - io:00201C70\n8224 23:48:59 196 debug1: acceptEx - AcceptEx() ERROR:22, io:00201C70\n8224 23:48:59 196 debug3: wait() on 0 events and 0 children\n8224 23:48:59 196 debug3: select - returning 1\n8224 23:48:59 196 debug3: w32_accept fd:4\n8224 23:48:59 196 debug3: accept - io:00201C70\n8224 23:48:59 196 debug1: accept - ERROR: async io completed with error: -9978, io:00201C70\n8224 23:48:59 196 error: accept: Unknown error\n8224 23:48:59 196 debug3: w32_select fd:3\n8224 23:48:59 196 debug3: w32_select fd:4\n8224 23:48:59 196 debug3: Total in fds:2. http://imgur.com/a/h2P0s\nQuiet log level, idle on connecting, high cpu usage\n(If can help, i use Comodo Firewall, but if i close it nothing changes). Mmmh, no, nothing change (only disappeared 00201C70). If need another info tell me\nI need ssh on this machine :(. # netstat -anop TCP\n```\nConnessioni attive\nProto  Indirizzo locale          Indirizzo esterno        Stato           PID\n  TCP    0.0.0.0:21             0.0.0.0:0              LISTENING       8116\n  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       632\n  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4\n  TCP    0.0.0.0:554            0.0.0.0:0              LISTENING       728\n  TCP    0.0.0.0:2869           0.0.0.0:0              LISTENING       4\n  TCP    0.0.0.0:5170           0.0.0.0:0              LISTENING       1076\n  TCP    0.0.0.0:5357           0.0.0.0:0              LISTENING       4\n  TCP    0.0.0.0:7123           0.0.0.0:0              LISTENING       4776\n  TCP    0.0.0.0:8091           0.0.0.0:0              LISTENING       8116\n  TCP    0.0.0.0:10243          0.0.0.0:0              LISTENING       4\n  TCP    0.0.0.0:27036          0.0.0.0:0              LISTENING       5624\n  TCP    0.0.0.0:49152          0.0.0.0:0              LISTENING       796\n  TCP    0.0.0.0:49153          0.0.0.0:0              LISTENING       1176\n  TCP    0.0.0.0:49154          0.0.0.0:0              LISTENING       1288\n  TCP    0.0.0.0:49159          0.0.0.0:0              LISTENING       876\n  TCP    0.0.0.0:49160          0.0.0.0:0              LISTENING       856\n  TCP    0.0.0.0:49316          0.0.0.0:0              LISTENING       1076\n  TCP    127.0.0.1:5939         0.0.0.0:0              LISTENING       3484\n  TCP    127.0.0.1:7122         0.0.0.0:0              LISTENING       3648\n  TCP    127.0.0.1:25639        0.0.0.0:0              LISTENING       8880\n  TCP    127.0.0.1:49156        0.0.0.0:0              LISTENING       2124\n  TCP    127.0.0.1:53645        127.0.0.1:53646        ESTABLISHED     4360\n  TCP    127.0.0.1:53646        127.0.0.1:53645        ESTABLISHED     4360\n  TCP    127.0.0.1:53659        127.0.0.1:53660        ESTABLISHED     6908\n  TCP    127.0.0.1:53660        127.0.0.1:53659        ESTABLISHED     6908\n  TCP    127.0.0.1:63427        127.0.0.1:63428        ESTABLISHED     10936\n  TCP    127.0.0.1:63428        127.0.0.1:63427        ESTABLISHED     10936\n  TCP    169.254.244.77:139     0.0.0.0:0              LISTENING       4\n  TCP    192.168.1.100:139      0.0.0.0:0              LISTENING       4\n  TCP    192.168.1.100:888      0.0.0.0:0              LISTENING       2300\n  TCP    192.168.1.100:53578    82.94.249.234:5222     ESTABLISHED     7628\n  TCP    192.168.1.100:57340    52.28.222.112:443      CLOSE_WAIT      2016\n  TCP    192.168.1.100:57341    52.28.222.112:443      CLOSE_WAIT      2016\n  TCP    192.168.1.100:57408    149.202.24.2:443       ESTABLISHED     4360\n  TCP    192.168.1.100:59075    136.243.74.100:443     ESTABLISHED     9488\n  TCP    192.168.1.100:62603    35.162.207.140:443     ESTABLISHED     4360\n  TCP    192.168.1.100:62619    52.29.0.144:443        CLOSE_WAIT      2016\n  TCP    192.168.1.100:62620    52.57.38.158:443       CLOSE_WAIT      2016\n  TCP    192.168.1.100:62649    212.47.227.58:80       ESTABLISHED     6932\n  TCP    192.168.1.100:62698    136.243.74.100:443     ESTABLISHED     9488\n  TCP    192.168.1.100:62703    212.47.227.58:8091     ESTABLISHED     4360\n  TCP    192.168.1.100:63044    199.16.156.52:443      ESTABLISHED     12932\n  TCP    192.168.1.100:63339    136.243.74.100:443     ESTABLISHED     9488\n  TCP    192.168.1.100:63347    216.58.205.65:443      ESTABLISHED     8880\n  TCP    192.168.1.100:63388    81.74.231.53:80        ESTABLISHED     12932\n  TCP    192.168.1.100:63431    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63432    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63433    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63434    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63435    178.175.144.26:143     ESTABLISHED     10936\n  TCP    192.168.1.100:63436    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63446    216.58.205.170:443     ESTABLISHED     10936\n  TCP    192.168.1.100:63448    216.58.204.110:443     TIME_WAIT       0\n  TCP    192.168.1.100:63453    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63456    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63457    104.25.25.5:443        TIME_WAIT       0\n  TCP    192.168.1.100:63459    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63461    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63462    94.23.50.208:143       ESTABLISHED     10936\n  TCP    192.168.1.100:63463    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63464    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63468    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63469    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63473    52.28.215.255:443      TIME_WAIT       0\n  TCP    192.168.1.100:63474    52.28.215.255:443      TIME_WAIT       0\n  TCP    192.168.1.100:63486    151.101.0.133:443      ESTABLISHED     4360\n  TCP    192.168.1.100:63488    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63490    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63491    74.125.133.108:993     ESTABLISHED     10936\n  TCP    192.168.1.100:63497    92.123.180.88:80       TIME_WAIT       0\n  TCP    192.168.1.100:63504    192.30.253.124:443     ESTABLISHED     4360\n  TCP    192.168.1.100:63508    212.47.227.58:8091     TIME_WAIT       0\n  TCP    192.168.1.100:63511    192.30.253.113:443     TIME_WAIT       0\n  TCP    192.168.1.100:63513    151.101.0.133:443      ESTABLISHED     4360\n  TCP    192.168.1.100:63514    151.101.0.133:443      ESTABLISHED     4360\n  TCP    192.168.1.100:63515    178.255.82.5:443       CLOSE_WAIT      1032\n  TCP    192.168.1.100:63516    104.16.61.31:443       ESTABLISHED     1032\n  TCP    192.168.1.100:63517    192.30.253.113:443     TIME_WAIT       0\n  TCP    192.168.1.100:63523    212.47.227.58:8091     TIME_WAIT       0\n  TCP    192.168.1.100:63524    81.74.231.52:80        ESTABLISHED     12932\n  TCP    192.168.1.100:63527    212.47.227.58:8091     ESTABLISHED     4360\n  TCP    192.168.1.100:63529    185.54.150.20:80       ESTABLISHED     12932\n  TCP    192.168.1.100:63530    185.54.150.20:80       ESTABLISHED     12932\n```\nipconfig /all\n```\nConfigurazione IP di Windows\nNome host . . . . . . . . . . . . . . : Nab**\n   Suffisso DNS primario . . . . . . . . : \n   Tipo nodo . . . . . . . . . . . . . . : Ibrido\n   Routing IP abilitato. . . . . . . . . : No\n   Proxy WINS abilitato . . . . . . . .  : No\nScheda Ethernet Router:\nSuffisso DNS specifico per connessione: \n   Descrizione . . . . . . . . . . . . . : Realtek PCIe GBE Family Controller\n   Indirizzo fisico. . . . . . . . . . . : 1C-6F-65-*\n   DHCP abilitato. . . . . . . . . . . . : No\n   Configurazione automatica abilitata   : S\n   Indirizzo IPv6 locale rispetto al collegamento . : fe80::459b:9b28:33ee:a6b2%21(Preferenziale) \n   Indirizzo IPv4. . . . . . . . . . . . : 192.168.1.100(Preferenziale) \n   Subnet mask . . . . . . . . . . . . . : 255.255.255.0\n   Gateway predefinito . . . . . . . . . : fe80::781b:fff:fe5b:c171%21\n                                           192.168.1.1\n   IAID DHCPv6 . . . . . . . . . . . : 186412901\n   DUID Client DHCPv6. . . . . . . . : 00-01-00-01-1E-E1-E4-16-1C-6F-65-CA-02-CD\n   Server DNS . . . . . . . . . . . . .  : *\n*\n   NetBIOS su TCP/IP . . . . . . . . . . : Attivato\nScheda Ethernet OpenVPN:\nStato supporto. . . . . . . . . . . . : Supporto disconnesso\n   Suffisso DNS specifico per connessione: \n   Descrizione . . . . . . . . . . . . . : TAP-Windows Adapter V9\n   Indirizzo fisico. . . . . . . . . . . : 00-FF-1F-**\n   DHCP abilitato. . . . . . . . . . . . : S\n   Configurazione automatica abilitata   : S\nScheda Ethernet VBOX:\nSuffisso DNS specifico per connessione: \n   Descrizione . . . . . . . . . . . . . : VirtualBox Host-Only Ethernet Adapter\n   Indirizzo fisico. . . . . . . . . . . : *\n   DHCP abilitato. . . . . . . . . . . . : S\n   Configurazione automatica abilitata   : S\n   Indirizzo IPv6 locale rispetto al collegamento . : fe80::59a6:706e:c3f2:f44d%13(Preferenziale) \n   Indirizzo IPv4 configurazione automatica : 169.254.244.77(Preferenziale) \n   Subnet mask . . . . . . . . . . . . . : 255.255.0.0\n   Gateway predefinito . . . . . . . . . : \n   IAID DHCPv6 . . . . . . . . . . . : 453640231\n   DUID Client DHCPv6. . . . . . . . : 00-01-00-01-1E-E1-E4-16-1C-6F-65-CA-02-CD\n   Server DNS . . . . . . . . . . . . .  : fec0:0:0:ffff::1%1\n                                           fec0:0:0:ffff::2%1\n                                           fec0:0:0:ffff::3%1\n   NetBIOS su TCP/IP . . . . . . . . . . : Attivato\nScheda Tunnel isatap.{637E4A28-1FEB-4483-8A3D-71BA3217FDD7}:\nStato supporto. . . . . . . . . . . . : Supporto disconnesso\n   Suffisso DNS specifico per connessione: \n   Descrizione . . . . . . . . . . . . . : Microsoft ISATAP Adapter\n   Indirizzo fisico. . . . . . . . . . . : 00-00-00-00-00-00-00-E0\n   DHCP abilitato. . . . . . . . . . . . : No\n   Configurazione automatica abilitata   : S\nScheda Tunnel isatap.{08083AEA-49F6-4C13-8E5A-27B4346CC5D7}:\nStato supporto. . . . . . . . . . . . : Supporto disconnesso\n   Suffisso DNS specifico per connessione: \n   Descrizione . . . . . . . . . . . . . : Microsoft ISATAP Adapter #2\n   Indirizzo fisico. . . . . . . . . . . : 00-00-00-00-00-00-00-E0\n   DHCP abilitato. . . . . . . . . . . . : No\n   Configurazione automatica abilitata   : S\nScheda Tunnel isatap.{1F7BD85A-247C-45FD-A572-F2853E76CEFB}:\nStato supporto. . . . . . . . . . . . : Supporto disconnesso\n   Suffisso DNS specifico per connessione: \n   Descrizione . . . . . . . . . . . . . : Microsoft ISATAP Adapter #3\n   Indirizzo fisico. . . . . . . . . . . : 00-00-00-00-00-00-00-E0\n   DHCP abilitato. . . . . . . . . . . . : No\n   Configurazione automatica abilitata   : S\n```. Little problem:\netl file = 170 MB\nwinsocktracelog.txt = 2,12GB O.o. 30sec i think...\nw8 i retry now. 300mb log file in 6 second O.o\nCompress to 1.80MB:\nhttp://lara.monocul.us/~mauro/File/traccia.7z\n. @C-Duv 80/90%, i7 2600k\n@manojampalam In italy have 0.50 upload, 300mb log file is a suicide O.o\nI try compress it. report=disabled give me error, i removed this.\nnetsh trace start provider=Microsoft-Windows-Winsock-AFD provider=Microsoft-Windows-TCPIP provider={EB004A05-9B1A-11D4-9123-0050047759BC} provider={0C478C5B-0351-41B1-8C58-4A6737DA32E3} ov=yes tracefile=nettrace.etl\nnettrace.etl 63,5 MB\nnettrace.zip 3,91 MB\nnettrace.zip\n. In my case AddressFamily inet not work. Work :D\nNow i can uninstall the shitty bitvise ssh server :D\nThanks!\nBut, the problem is?\n13064 03:32:49 188 debug3: socket:336, socktype:1, io:00000000004F2AF0, fd:3 \n13064 03:32:49 188 debug2: fd 3 setting O_NONBLOCK\n13064 03:32:49 188 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n13064 03:32:49 188 debug1: Bind to port 27222 on ::.\n13064 03:32:49 194 Server listening on :: port 27222.\n13064 03:32:49 194 debug3: socket:408, socktype:1, io:00000000004F2BA0, fd:4 \n13064 03:32:49 194 debug2: fd 4 setting O_NONBLOCK\n13064 03:32:49 194 debug1: Bind to port 27222 on 0.0.0.0.\n13064 03:32:49 200 Server listening on 0.0.0.0 port 27222.\n. Ah, this is my (orrible) update script if anyone need\nhttps://pastebin.com/5T8MjDDt. @manojampalam works like a charm. \nLatest release.\nUnfortunately i not have a debug log for this issue, i changed now the configuration for future update about this problem.\n. @bagajjal tnx, i try as soon as possible.\n@manojampalam net start sshd output is System error 1067\nBut the v0.0.24.0 works. ",
    "solmersa": "This happens when using a SSH client like:\noSSh as SshNet::SshClient\nTHIS.oSSh = SshNet::SshClient(this.Host,THIS.nPort,this.User,this.Password)\n- next line closes connection, you can check that in the server the child process\n- is exited.  If you change host for a Linux host, only an error is returned, the connection\n- remains valid / open\nTHIS.oSSh.RunCommand(\"dir')\n- Yes I know that if you enclosed that by \"command /c dir\", it will work, but when failing should keep the connection open.  In the Openssh source code in fact there is an exit() instruction, so it ends the child process.\n. ",
    "smokeintheshell": "@bagajjal From my experimentation it seems like currently the best method to achieve what you want is to the openssh-server from aptitude. I have yet to achieve getting this to run as a service or from boot, but there are many ways to get it to launch the daemon at user log in. From the linux openssh you can launch cmd.exe and a limited functioning powershell window.\nHope this helps. ",
    "CharlesEGrant": "I'm seeing the same problem when using Subversion 1.8.3. If I turn on verbose logging it looks like authentication is successful, but then it hangs while attempting a ReadFileEx():\n```\ndebug1: Authentication succeeded (publickey).\ndebug3: w32_getpeername fd:3\ndebug3: w32_getpeername fd:3\nAuthenticated to svn.code.sf.net ([216.34.181.157]:22).\ndebug3: w32_dup fd:0\ndebug3: w32_dup fd:1\ndebug3: w32_dup fd:2\ndebug3: w32_fcntl fd:5\ndebug2: fd 5 setting O_NONBLOCK\ndebug3: w32_fcntl fd:5\ndebug3: w32_fcntl fd:6\ndebug2: fd 6 setting O_NONBLOCK\ndebug3: w32_fcntl fd:6\ndebug3: w32_fcntl fd:5\ndebug3: w32_fcntl fd:6\ndebug3: w32_fcntl fd:7\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug1: Requesting no-more-sessions@openssh.com\ndebug1: Entering interactive session.\ndebug2: signal() sig:6, handler:0000000000000001\ndebug2: signal() sig:6, handler:00007FF661198D90\ndebug2: signal() sig:0, handler:0000000000000001\ndebug2: signal() sig:0, handler:00007FF661198D90\ndebug2: signal() sig:7, handler:0000000000000001\ndebug2: signal() sig:7, handler:00007FF661198D90\ndebug2: signal() sig:8, handler:0000000000000001\ndebug2: signal() sig:8, handler:00007FF661198D90\ndebug2: signal() sig:11, handler:00007FF661198D70\ndebug2: client_check_window_change: changed\ndebug3: w32_select fd:3\ndebug3: w32_select fd:3\ndebug3: Total in fds:2\ndebug2: on_select - io:0000027C0BFEF4B0 type:1 rd:1\ndebug3: WSARecv - pio: 0000027C0BFEF4B0\ndebug2: WSARecv - reported IO pending\ndebug2: on_select - io:0000027C0BFEF4B0 type:1 rd:0\ndebug3: wait() on 0 events and 0 childres\ndebug3: select - returning 1\ndebug3: w32_write fd:3\ndebug2: send - io:0000027C0BFEF4B0\ndebug2: send - WSASend() returned 0, APC scheduled io:0000027C0BFEF4B0\ndebug2: WSASendCB - io:0000027C0BFEF4B0, pending_state:1, error:0, sent:112 of remaining:112\ndebug3: w32_select fd:3\ndebug3: Total in fds:1\ndebug2: on_select - io:0000027C0BFEF4B0 type:1 rd:1\ndebug3: wait() on 0 events and 0 childres\ndebug3: wait() on 0 events and 0 childres\ndebug2: WSARecvCompletionCB - io:0000027C0BFEF4B0, pending_state:1, flags:0, error:0, received:40\ndebug3: select - returning 1\ndebug3: w32_read fd:3\ndebug3: recv - io:0000027C0BFEF4B0\ndebug2: recv - returning 40 bytes from prior completed IO, remaining:0, io:0000027C0BFEF4B0\ndebug2: callback start\ndebug3: w32_getsockopt fd:3\ndebug2: fd 3 setting TCP_NODELAY\ndebug3: w32_setsockopt fd:3\ndebug2: client_session2_setup: id 0\ndebug1: Sending command: svnserve -t\ndebug2: channel 0: request exec confirm 1\ndebug2: callback done\ndebug2: channel 0: open confirm rwindow 0 rmax 32768\ndebug3: w32_select fd:3\ndebug3: w32_select fd:3\ndebug3: Total in fds:2\ndebug2: on_select - io:0000027C0BFEF4B0 type:1 rd:1\ndebug3: WSARecv - pio: 0000027C0BFEF4B0\ndebug2: WSARecv - reported IO pending\ndebug2: on_select - io:0000027C0BFEF4B0 type:1 rd:0\ndebug3: wait() on 0 events and 0 childres\ndebug3: select - returning 1\ndebug3: w32_write fd:3\ndebug2: send - io:0000027C0BFEF4B0\ndebug2: send - WSASend() returned 0, APC scheduled io:0000027C0BFEF4B0\ndebug2: WSASendCB - io:0000027C0BFEF4B0, pending_state:1, error:0, sent:56 of remaining:56\ndebug3: w32_select fd:3\ndebug3: Total in fds:1\ndebug2: on_select - io:0000027C0BFEF4B0 type:1 rd:1\ndebug3: wait() on 0 events and 0 childres\ndebug3: wait() on 0 events and 0 childres\ndebug2: WSARecvCompletionCB - io:0000027C0BFEF4B0, pending_state:1, flags:0, error:0, received:64\ndebug3: select - returning 1\ndebug3: w32_read fd:3\ndebug3: recv - io:0000027C0BFEF4B0\ndebug2: recv - returning 64 bytes from prior completed IO, remaining:0, io:0000027C0BFEF4B0\ndebug2: channel 0: rcvd adjust 2097152\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: exec request accepted on channel 0\ndebug3: w32_select fd:3\ndebug3: w32_select fd:5\ndebug3: Total in fds:2\ndebug2: on_select - io:0000027C0BFEF4B0 type:1 rd:1\ndebug3: WSARecv - pio: 0000027C0BFEF4B0\ndebug2: WSARecv - WSARecv() returned 0, io:0000027C0BFEF4B0\ndebug2: ReadFileEx io:0000027C0BFF74D0\n```\n. ",
    "yurashek": "Both bugs (this and #122) has the similar root cause but each one works in different direction.\nRoot cause of this is:\nPowerShell.exe window do not have the TERM (terminfo ...or obsoleted termcap) entry defined.\nas a relief (very weak) I am using:\nexport TERM=ansi\n...in bash (running on Solaris) but there is still many issues:\ni.e. instead of \"Arrow Up\" (history) I should use ^p\ninstead of \"arrows\" I should use \"hjkl\" in vi\n....and so on and so on.................   :-(\n...it is strange there is no one in M$ Corp. who still can remember their \"U*X\" experience and simply document how the PowerShell.exe window behave (which cursor addressing sequences are used).\n. ",
    "fpqc": "Hey, by the way, this should be xterm-256color since a while ago on Windows 10.  256color support was added and fully stable in Win10CU.\nhttps://github.com/Microsoft/BashOnWindows/issues/1446\nThis is in the case of the Windows client.. This sounds like you're just failing to authenticate. This works in Win10.. @zadjii-msft I assume you're keeping in contact with the powershell openssh team?  This is like your bread and butter!. Also, to get even this far, I had to export TERM=xterm on my remote shell.. @zadjii-msft This is logging into a remote linux box with Win32-openssh (still present in 0.0.4.0).  If you then try to run htop, it cannot detect your TERM environment.  If you then forcibly export TERM=xterm, and try to run htop, you get this crazy mess. \nI think the openssh guys need to discuss enabling vt emulation or come up with a Windows-conhost terminfo file.  Either way, it's definitely something that needs to involve the console team, I think.. @manojampalam The problem is that right now Windows lacks anything like sudo on Linux.  So any user with admin credentials will have all actions performed with the full privileges rather than the limited ones performed before doing UAC.  I mentioned this on Twitter on the announcement of 0.0.4.0.\nThe console team says they're looking at implementing a Windows version of sudo.  You should keep in contact with their PM, since they are reworking a lot of this stuff.. @PaulHigin By the way, when I connect to the Win32-opensshd on Windows (with Windows Subsystem for Linux's bash.exe and then sshing to localhost) and open powershell, the backspace key, delete key, and arrow keys are broken\n\n\nDoes the same thing happen from your Ubuntu box?\nAlso, is it possible this is because my locale and language settings are set up to UTF-8?. If you're trying to login to a domain account, you probably also are required to sign the public key with a trusted domain certificate.. @juergenr Hmmmm.  Are you on Windows 10?. @juergenr Change the port of sshd to 2222 (in sshd_config), then restart the sshd service with sc restart sshd.  Windows 10 has a built in openssh server (maybe it's only active when you're in developer mode?) that will prevent binding port 22.. @juergenr Oh, the server is on Windows Server 2012.  I thought it was on your local machine.. This issue is now obsolete, as the devs have opened their own issue tracking it:\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/430. @SteveL-MSFT Then maybe launching, for example, calc  should fail with the error \"Cannot locate display\". @franklinyu Windows doesn't use X for Windows apps, which was the topic here. If you are launching remote Linux apps, I believe that win32-openssh does support forwarding X to a local x server.. You aren't paying attention. I am talking about connecting from linux or windows to a windows shell (cmd or powershell) on a remote windows computer running openssh-server. Yes. I think X forwarding from a Linux remote to Windows local machine running win32-openssh should work as usual, but I am not sure and haven't tried.. file a new issue. By the way, you should set TERM=xterm-256color in the Creators Update (RS2).\nSee here for similar: https://github.com/Microsoft/BashOnWindows/issues/1446. @mikemaccana And other things. It breaks all fullscreen linux terminal applications.  The Windows console in ancient times could use a 16-bit library way back from DOS to do basic terminal processing, but it was deprecated for a long time and finally removed on x64 systems. \nIt's finally been replaced in Windows 10 Anniversary (1607) with full standard-mode xterm emulation (VT20x iirc)), and will be upgraded in the Creator update (1704) to also support 256color mode xterm (already implemented in the latest insider builds).\nUnfortunately, while this makes the job of the devs of this project much much easier in cases where the client runs on Win10 1607 or higher, it does not solve any problems for them if they are stuck on 1511 (like the Current Branch for Business), or worse, pre Windows 10 entirely.\nI personally think it would be completely reasonable to just make Win10 1607 a soft version requirement (at least for the scenario connecting to a Linux box), rather than the team here trying to reinvent the wheel or make hacks to try to support Windows consoles that don't speak Terminal control codes.\nAt that point, just recommend that clients on outdated versions of Windows (wrt terminal support) use PuTTY.  . @mikemaccana See, I'd only make it soft because a major use case is connecting Windows-to-Windows, which will work 100% perfect, since neither side is trying to \"speak terminal\".. @KJTsanaktsidis The code sample here: https://msdn.microsoft.com/en-us/library/windows/desktop/mt638032(v=vs.85).aspx looks a bit different to yours.  Also, make sure you are compiling against the 1607 sdk and also make sure that the github project didn't accidentally include outdated headers maybe (I dunno, maybe console.h is not from 1607?). @KJTsanaktsidis Well then hopefully the devs will throw that code in a big ifdef. Hey, just wondering how you ended up solving it. I just tested and it seems to work now! (at least when using an xterm-compatible terminal emulator.  I haven't tested in st or rxvt-unicode yet, wondering if you think they will work?. @bagajjal This is the server-side question, and I'm connecting from a Linux machine,and it's working fine in st, xterm, and gnome-terminal.  I haven't tried rxvt yet.  \nEdit: Works in rxvt too!. @bagajjal You should encourage testing from the latest insider builds and also maybe keep in touch with @zadjii-msft , who has been implementing a lot of the control sequences.  The console processing of control sequences is not yet perfect, and you're probably better off making sure if it's your bug or their bug before fixing or introducing a workaround.  If I remember correctly, this disable newline autoreturn thing was mentioned on the console/WSL github.\nEdit: Here's the issue I was remembering:\nhttps://github.com/Microsoft/BashOnWindows/issues/1273. Why did you change the service to run as an ordinary domain user?  The service needs to run at a high privilege level (System Service), even though the individual users will be authenticating against the domain.  \nSSHD is also not meant to be run directly in a console but through the sshd service (with sc.exe start/stop sshd).  . @HSSupport Tell him to uninstall the edited package and reinstall it so it installs as a system service.  What @manojampalam suggested is just undoing the error that the user made in the first place.\nsshd runs as a localsystem-level service, but all authentication is carried through the server's authentication mechanism and permissions are enforced at the user level.  . @HSSupport Ah, that makes some sense.  It might actually work then.  Also, yeah, the domain admin token can be elevated to a system level token using the windows internals psexec tool (i.e. Admin -> SYSTEM is not a security boundary), but it is a permissions boundary and likely the cause of failure here.\nThis TechNet page also includes instructions for manually configuring Managed Service accounts on earlier versions of Windows Server (2003 and 2008) if they are using the updated AD Schema.\nhttps://technet.microsoft.com/en-us/library/dd548356.aspx. In this case, the server's powershell version and actual Windows version might matter beyond just the SKU. Large cross-SKU changes have been made to the console subsystem since the first version of Server 2016 that could potentially affect this.. ",
    "TraGicCode": "I am having the same issue when using PasswordAuthentication no and PublicKey authentication only.  Any help is greatly appreciated\n. Thanks @manojampalam Ill give it a shot this weekend when i have the time :)\n. I seem to be getting unable to generate user token from the sshd application in the logs.  Any ideas?\n. I am logging in with the local Administrator account.  Also Keep in mind i'm installing the software on the server using chocolatey. @darwinjs\n. I was able to get public key auth working doing a manual installation steps according to the wiki.  The chocolatey package installation is the one that gives me the above issue.  Sounds like an issue with the choco package installation scripts\n. No I never got it to work. \u00a0I'm waiting for the next chocolatey release :/ maybe that will work!\nSent via the Samsung GALAXY S\u00ae 5, an AT&T 4G LTE smartphone\n-------- Original message --------\nFrom: gumbo2k notifications@github.com \nDate: 7/19/2016  1:48 PM  (GMT-06:00) \nTo: PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com \nCc: Michael Fyffe michael@TraGicCode.com, Mention mention@noreply.github.com \nSubject: Re: [PowerShell/Win32-OpenSSH] PublicKey Auth Fail (#253) \n@TraGicCode Did you find out the difference between the chocolatey package installation and the manual one? I have tried the manual installation first and failed at a different stage. (Didn't get sshd to start as a service) Thus I tried the chocolatey packages and those installed fine (with some tweaking) but I can't get public key authentication to work.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. ",
    "gumbo2k": "@TraGicCode Did you find out the difference between the chocolatey package installation and the manual one? I have tried the manual installation first and failed at a different stage. (Didn't get sshd to start as a service) Thus I tried the chocolatey packages and those installed fine (with some tweaking) but I can't get public key authentication to work.\n. ",
    "alex3305": "Probably related to https://github.com/DarwinJS/ChocoPackages/issues/8\n. ",
    "categulario": "@TraGicCode which release did you use for manual installation? I just installed 5_30_2016 but key auth is not working for me\n. ",
    "rbertoche": "I'm having this issue too.\nI'm running the zip package version.\ndebug2: input_userauth_request: try method publickey\ndebug2: write - io:00000285FBEE7770\ndebug2: WriteCB - pio:00000285FBEE7770, pending_state:1, error:0, transferred:4 of remaining: 4\ndebug2: write - reporting 4 bytes written, io:00000285FBEE7770\ndebug2: write - io:00000285FBEE7770\ndebug2: WriteCB - pio:00000285FBEE7770, pending_state:1, error:0, transferred:950 of remaining: 950\ndebug2: write - reporting 950 bytes written, io:00000285FBEE7770\ndebug2: ReadFileEx io:00000285FBEE7770\ndebug2: ReadCB pio:00000285FBEE7770, pending_state:1, error:0, received:5\ndebug2: read - io:00000285FBEE7770 read: 4 remaining: 1\ndebug2: read - io:00000285FBEE7770 read: 1 remaining: 0\ndebug1: auth agent did not authorize client Julia\ndebug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\nFailed publickey for Julia from 127.0.0.1 port 55710 ssh2: RSA SHA256:iBY3uZjAuYSMGvLLtjcGoLiTyL+MYhrGPe0vKi+mitM\ndebug2: send - io:00000285FBF01B20\ndebug2: send - WSASend() returned 0, APC scheduled io:00000285FBF01B20\ndebug2: WSASendCB - io:00000285FBF01B20, pending_state:1, error:0, sent:68 of remaining:68\ndebug2: on_select - io:00000285FBF01B20 type:1 rd:1\ndebug2: WSARecv - reported IO pending\ndebug2: WSARecvCompletionCB - io:00000285FBF01B20, pending_state:1, flags:0, error:0, received:100\ndebug2: recv - returning 100 bytes from prior completed IO, remaining:0, io:00000285FBF01B20\ndebug1: userauth-request for user Julia service ssh-connection method keyboard-interactive\ndebug1: attempt 3 failures 1\ndebug2: input_userauth_request: try method keyboard-interactive\ndebug1: keyboard-interactive devs\ndebug1: auth2_challenge: user=Julia devs=\ndebug1: kbdint_alloc: devices ''\ndebug2: auth2_challenge_start: devices\nFailed keyboard-interactive for Julia from 127.0.0.1 port 55710 ssh2\ndebug2: send - io:00000285FBF01B20\ndebug2: send - WSASend() returned 0, APC scheduled io:00000285FBF01B20\ndebug2: WSASendCB - io:00000285FBF01B20, pending_state:1, error:0, sent:68 of remaining:68\ndebug2: on_select - io:00000285FBF01B20 type:1 rd:1\ndebug2: WSARecv - reported IO pending\ndebug2: WSARecvCompletionCB - io:00000285FBF01B20, pending_state:1, flags:0, error:0, received:0\ndebug2: recv - connection closed, io:00000285FBF01B20\nConnection closed by 127.0.0.1\nAnd, thats really off topic in this issue, but I can't install it from choco as DarwinJS suggested, as it gives out:\nIncluding LSA DLL Feature.\nERROR: Method invocation failed because [System.Boolean] does not contain a method named 'split'.\nThe install of win32-openssh was NOT successful.\nError while running 'C:\\ProgramData\\chocolatey\\lib\\win32-openssh\\tools\\chocolateyinstall.ps1'.\n. Thanks for this info\nI'll try it once I'm back home\nHow can I tell whether the account I'm currently logged on Windows is a\ndomain account?\nI'm still using homegroups, do they count as a domain? I guess not, but I\nused be unable to login\nI'll update and try again later with those syntaxes, thanks again!\nEm 19 de abr de 2017 13:28, \"Manoj Ampalam\" notifications@github.com\nescreveu:\n@mayo https://github.com/mayo, if its a domain account, you need to\nspecify the domain prefix, you can use any of the following formats\nssh -l user@domain ssh-host\nor\nssh user@domain@ssh-host\nor\nssh domain\\user@ssh-host\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/253#issuecomment-295332848,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAc3Lj94HChMXSiC9ZpzDZoxRnXg9RpCks5rxjYSgaJpZM4JAGYh\n.\n. ",
    "felippo": "I don't see the full ssh client command you used, but I had a similar problem. In my configuration the \"Log on as\" sshd service property was set as \"Local system account\". \nEverything worked using:\nssh 'DOMAIN\\user'@host\nPerhaps it should be suggested explicitly in the documentation (Install Instructions or Troubleshooting or SSH Usage Examples) to try the 'DOMAIN\\user' combination, when in trouble. I think it would save some headaches.\n. ",
    "JINXz": "@felippo that really helped and is now working for me using pubkey authentication to automatically sign in. I agree that this should be explicitly stated somewhere in the documentation. I need to also note using user@host works with password authentication.. ",
    "mayo": "I'm seeing the same problem with the latest 0.0.11.0. Looking at the logs below, the key is found and matches, but it's not accepted. I assume this is due to the token generation failure in the agent.\nAgent log:\n3052 12:07:29 380 agent_start pid:3052, dbg:0, child:0, pipe:0\n3052 12:07:41 160 client pid 392 connected\n3052 12:07:41 160 debug1: spawned worker 1396 for agent client pid 392 \n1396 12:07:41 176 agent_start pid:1396, dbg:0, child:1, pipe:408\n1396 12:07:41 349 debug1: process agent request type 200\n1396 12:07:41 349 debug1: LsaLogonUser failed 1\n1396 12:07:41 349 debug1: unable to generate token for user user\nopenssh log:\n1628 12:07:41 105 debug1: Forked child 392.\n392 12:07:41 160 error: Couldn't create pid file \"./sshd.pid\": Permission denied\n392 12:07:41 160 debug1: child socket: 440\n392 12:07:41 160 debug1: child startup_pipe: 444\n392 12:07:41 160 Connection from 10.96.64.49 port 38810 on 10.96.80.142 port 22\n392 12:07:41 160 debug1: Client protocol version 2.0; client software version OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.8\n392 12:07:41 160 debug1: match: OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.8 pat OpenSSH_6.6.1* compat 0x04000000\n392 12:07:41 160 debug1: Local version string SSH-2.0-OpenSSH_7.5\n392 12:07:41 160 debug1: Enabling compatibility mode for protocol 2.0\n392 12:07:41 160 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n392 12:07:41 160 debug1: SSH2_MSG_KEXINIT sent\n392 12:07:41 160 debug1: SSH2_MSG_KEXINIT received\n392 12:07:41 160 debug1: kex: algorithm: curve25519-sha256@libssh.org\n392 12:07:41 160 debug1: kex: host key algorithm: ecdsa-sha2-nistp256\n392 12:07:41 160 debug1: kex: client->server cipher: aes128-ctr MAC: hmac-sha1-etm@openssh.com compression: none\n392 12:07:41 160 debug1: kex: server->client cipher: aes128-ctr MAC: hmac-sha1-etm@openssh.com compression: none\n392 12:07:41 160 debug1: expecting SSH2_MSG_KEX_ECDH_INIT\n392 12:07:41 176 debug1: rekey after 4294967296 blocks\n392 12:07:41 176 debug1: SSH2_MSG_NEWKEYS sent\n392 12:07:41 176 debug1: expecting SSH2_MSG_NEWKEYS\n392 12:07:41 192 debug1: SSH2_MSG_NEWKEYS received\n392 12:07:41 192 debug1: rekey after 4294967296 blocks\n392 12:07:41 192 debug1: KEX done\n392 12:07:41 254 debug1: userauth-request for user user service ssh-connection method none\n392 12:07:41 254 debug1: attempt 0 failures 0\n392 12:07:41 333 Failed none for user from 10.96.64.49 port 38810 ssh2\n392 12:07:41 333 debug1: userauth-request for user user service ssh-connection method publickey\n392 12:07:41 333 debug1: attempt 1 failures 0\n392 12:07:41 333 debug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:un5BKdZypyGubEWUkUm0aZviyj51a3gLAq5esppTTIY\n392 12:07:41 333 debug1: trying public key file C:\\\\Users\\\\user/.ssh/authorized_keys\n392 12:07:41 333 debug1: matching key found: file C:\\\\Users\\\\user/.ssh/authorized_keys, line 1 RSA SHA256:un5BKdZypyGubEWUkUm0aZviyj51a3gLAq5esppTTIY\n392 12:07:41 333 Postponed publickey for user from 10.96.64.49 port 38810 ssh2\n392 12:07:41 349 debug1: userauth-request for user user service ssh-connection method publickey\n392 12:07:41 349 debug1: attempt 2 failures 0\n392 12:07:41 349 debug1: auth agent did not authorize client user\n392 12:07:41 349 Failed publickey for user from 10.96.64.49 port 38810 ssh2: RSA SHA256:un5BKdZypyGubEWUkUm0aZviyj51a3gLAq5esppTTIY\n392 12:07:41 349 debug1: userauth-request for user user service ssh-connection method keyboard-interactive\n392 12:07:41 349 debug1: attempt 3 failures 1\n392 12:07:41 349 debug1: keyboard-interactive devs \n392 12:07:41 349 debug1: auth2_challenge: user=user devs=\n392 12:07:41 349 debug1: kbdint_alloc: devices ''\n392 12:07:41 349 Failed keyboard-interactive for user from 10.96.64.49 port 38810 ssh2\n392 12:08:07 119 debug1: userauth-request for user user service ssh-connection method password\n392 12:08:07 119 debug1: attempt 4 failures 2\n392 12:08:07 119 Failed password for user from 10.96.64.49 port 38810 ssh2\n392 12:08:07 844 Connection closed by authenticating user user 10.96.64.49 port 38810\n392 12:08:07 844 debug1: do_cleanup. @manojampalam I've installed 0.0.12.0, but I still have the same problem. SSHd log is identical, but agent log error is slightly different (the LsaLogonUser line now includes NTSTATUS):\n1208 09:20:54 078 agent_start pid:1208, dbg:0, child:0, pipe:0\n1208 09:21:30 115 client pid 3056 connected\n1208 09:21:30 115 debug1: spawned worker 2088 for agent client pid 3056 \n2088 09:21:30 115 agent_start pid:2088, dbg:0, child:1, pipe:408\n2088 09:21:30 366 debug1: process agent request type 200\n2088 09:21:30 381 debug1: LsaLogonUser failed NTSTATUS: 1\n2088 09:21:30 381 debug1: unable to generate token for user user\n. It's a domain account. Command line is ssh user@ssh-host.. @manojampalam Thanks, works like charm!. ",
    "pSatishC": "I'm having the same issue with v0.0.11.0\nssh-agent.log (from 'node1' - ssh server)\n5904 10:31:14 432 agent_start pid:5904, dbg:0, child:1, pipe:396\n5904 10:31:14 666 debug1: iocp error: 109 on 004D0D18 \\n\n5904 10:31:14 666 debug1: connection 004D0D18 clean up\n5904 10:31:14 666 debug1: iocp error: 6 on 00000000 \\n\nsshd.log (w/ DEBUG) (from 'node1' - ssh server)\n5340 10:31:14 308 debug1: Forked child 5504.\n5504 10:31:14 401 debug1: child socket: 344\n5504 10:31:14 401 debug1: child startup_pipe: 348\n5504 10:31:14 417 Connection from 146.145.409.54 port 62749 on 146.145.229.108 port 22\n5504 10:31:14 417 debug1: Client protocol version 2.0; client software version OpenSSH_7.3\n5504 10:31:14 417 debug1: match: OpenSSH_7.3 pat OpenSSH* compat 0x04000000\n5504 10:31:14 417 debug1: Local version string SSH-2.0-OpenSSH_7.5\n5504 10:31:14 417 debug1: Enabling compatibility mode for protocol 2.0\n5504 10:31:14 417 debug2: fd 3 setting O_NONBLOCK\n5504 10:31:14 417 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n5504 10:31:14 417 debug1: SSH2_MSG_KEXINIT sent\n5504 10:31:14 417 debug1: SSH2_MSG_KEXINIT received\n5504 10:31:14 417 debug2: local server KEXINIT proposal\n5504 10:31:14 417 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\n5504 10:31:14 417 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n5504 10:31:14 417 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n5504 10:31:14 417 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n5504 10:31:14 417 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n5504 10:31:14 417 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n5504 10:31:14 417 debug2: compression ctos: none\n5504 10:31:14 417 debug2: compression stoc: none\n5504 10:31:14 417 debug2: languages ctos: \n5504 10:31:14 417 debug2: languages stoc: \n5504 10:31:14 417 debug2: first_kex_follows 0 \n5504 10:31:14 417 debug2: reserved 0 \n5504 10:31:14 417 debug2: peer client KEXINIT proposal\n5504 10:31:14 417 debug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\n5504 10:31:14 417 debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\n5504 10:31:14 417 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\n5504 10:31:14 417 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\n5504 10:31:14 417 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n5504 10:31:14 417 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n5504 10:31:14 417 debug2: compression ctos: none,zlib@openssh.com,zlib\n5504 10:31:14 417 debug2: compression stoc: none,zlib@openssh.com,zlib\n5504 10:31:14 417 debug2: languages ctos: \n5504 10:31:14 417 debug2: languages stoc: \n5504 10:31:14 417 debug2: first_kex_follows 0 \n5504 10:31:14 417 debug2: reserved 0 \n5504 10:31:14 417 debug1: kex: algorithm: curve25519-sha256@libssh.org\n5504 10:31:14 417 debug1: kex: host key algorithm: ecdsa-sha2-nistp256\n5504 10:31:14 417 debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\n5504 10:31:14 417 debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\n5504 10:31:14 417 debug1: expecting SSH2_MSG_KEX_ECDH_INIT\n5504 10:31:14 432 debug2: set_newkeys: mode 1\n5504 10:31:14 432 debug1: rekey after 134217728 blocks\n5504 10:31:14 432 debug1: SSH2_MSG_NEWKEYS sent\n5504 10:31:14 432 debug1: expecting SSH2_MSG_NEWKEYS\n5504 10:31:14 448 debug1: SSH2_MSG_NEWKEYS received\n5504 10:31:14 448 debug2: set_newkeys: mode 0\n5504 10:31:14 448 debug1: rekey after 134217728 blocks\n5504 10:31:14 448 debug1: KEX done\n5504 10:31:14 666 debug1: userauth-request for user winuser service ssh-connection method none\n5504 10:31:14 666 debug1: attempt 0 failures 0\n5504 10:31:14 666 debug2: parse_server_config: config reprocess config len 372\n5504 10:31:14 666 debug2: input_userauth_request: setting up authctxt for winuser\n5504 10:31:14 666 debug2: input_userauth_request: try method none\n5504 10:31:14 666 Failed none for winuser from 146.145.409.54 port 62749 ssh2\n5504 10:31:14 666 debug1: userauth-request for user winuser service ssh-connection method keyboard-interactive\n5504 10:31:14 666 debug1: attempt 1 failures 0\n5504 10:31:14 666 debug2: input_userauth_request: try method keyboard-interactive\n5504 10:31:14 666 debug1: keyboard-interactive devs \n5504 10:31:14 666 debug1: auth2_challenge: user=winuser devs=\n5504 10:31:14 666 debug1: kbdint_alloc: devices ''\n5504 10:31:14 666 debug2: auth2_challenge_start: devices \n5504 10:31:14 666 Failed keyboard-interactive for winuser from 146.145.409.54 port 62749 ssh2\n5504 10:31:14 666 Connection closed by authenticating user winuser 146.145.409.54 port 62749\n5504 10:31:14 666 debug1: do_cleanup\nssh verbose output from 'node2' - ssh client\nxfght@node2 MINGW64 /c/users/xfght/ssh-client\n$ ssh -v winuser@node1\nOpenSSH_7.3p1, OpenSSL 1.0.2k  26 Jan 2017\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: Connecting to node1 [146.145.229.108] port 22.\ndebug1: Connection established.\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /u/.ssh/id_rsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /u/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /u/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /u/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /u/.ssh/id_ecdsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /u/.ssh/id_ecdsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /u/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /u/.ssh/id_ed25519-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_7.3\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.5\ndebug1: match: OpenSSH_7.5 pat OpenSSH* compat 0x04000000\ndebug1: Authenticating to node1:22 as 'winuser'\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: algorithm: curve25519-sha256@libssh.org\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:OUJCJ6P8rT9NuEOKU8x95KR5iv+PTK3gR8T4eFsW/qw\ndebug1: Host 'node1' is known and matches the ECDSA host key.\ndebug1: Found key in /u/.ssh/known_hosts:1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=<ssh-ed25519,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521>\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey,keyboard-interactive\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: /u/.ssh/id_rsa\ndebug1: Trying private key: /u/.ssh/id_dsa\ndebug1: Trying private key: /u/.ssh/id_ecdsa\ndebug1: Trying private key: /u/.ssh/id_ed25519\ndebug1: Next authentication method: keyboard-interactive\ndebug1: Authentications that can continue: publickey,keyboard-interactive\ndebug1: No more authentication methods to try.\nPermission denied (publickey,keyboard-interactive).. For my env (domain controlled ssh-host but user account is local to that machine), installing 0.0.12.0 worked. Thanks a ton @manojampalam . ",
    "amassaroRC": "I'm having issues with domain authentication. Is there anything that needs to be configured in the ssh_config to authenticate to the domain?\nMy debug is below\ndebug1: keyboard-interactive devs\ndebug1: auth2_challenge: user=user@DOMAIN devs=\ndebug1: kbdint_alloc: devices ''\nFailed keyboard-interactive for invalid user user@DOMAIN from 172.2.1.1 port 38552 ssh2\ndebug1: userauth-request for user user@DOMAINservice ssh-connection method password\ndebug1: attempt 2 failures 1\ndebug1: auth agent did not authorize client user@DOMAIN\nFailed password for invalid user user@DOMAIN from 172.2.1.1  port 38552 ssh2\nConnection closed by invalid user user@DOMAIN 172.2.1.1  port 38552\ndebug1: do_cleanup\nPlease help.. ",
    "bravo-kernel": "Using username@myactivedirectory.local@targetserver works for me \ud83d\udc4d . ",
    "r2690698": "Issue still persistsits \nsshd.config bellow ; confirmed the PATH to the exe is correct. \n```\noverride default of no subsystems\nSubsystem   sftp    C:\\Program Files\\OpenSSH\\OpenSSH-Win64\\sftp-server.exe\n```\nRan throught the process again, issue still remains, error logs bellow.\n```\n20172 11:56:23 788 shutdown\n20172 11:56:23 788 debug1: shutting down\n12824 11:56:23 803 agent_start pid:12824, dbg:0, child:0, pipe:0\n12824 11:56:47 325 client pid 11544 connected on \\.\\pipe\\ssh-keyagent\n12824 11:56:47 325 debug1: spawned child 1368 to process 3\n12824 11:56:47 341 client pid 14408 connected on \\.\\pipe\\ssh-keyagent\n12824 11:56:47 341 debug1: spawned child 9948 to process 3\n1368 11:56:47 356 agent_start pid:1368, dbg:0, child:1, pipe:476\n1368 11:56:47 356 debug1: connection io 0000020459D22F60 #bytes:0 state:0\n9948 11:56:47 356 agent_start pid:9948, dbg:0, child:1, pipe:476\n9948 11:56:47 356 debug1: connection io 0000019164DF2CA0 #bytes:0 state:0\n9948 11:56:47 356 debug1: connection io 0000019164DF2CA0 #bytes:4 state:1\n9948 11:56:47 356 debug1: connection io 0000019164DF2CA0 #bytes:1 state:2\n9948 11:56:47 356 debug1: client type: 1\n9948 11:56:47 356 debug2: process key agent request type 11\n9948 11:56:47 356 debug1: connection io 0000019164DF2CA0 #bytes:9 state:3\n1368 11:56:50 792 debug1: iocp error: 109 on 0000020459D22F60 \n1368 11:56:50 792 debug1: connection 0000020459D22F60 clean up\n1368 11:56:50 792 debug1: iocp error: 6 on 0000000000000000 \n9948 11:56:50 792 debug1: iocp error: 109 on 0000019164DF2CA0 \n9948 11:56:50 792 debug1: connection 0000019164DF2CA0 clean up\n9948 11:56:50 792 debug1: iocp error: 6 on 0000000000000000 \n12824 11:57:11 358 shutdown\n12824 11:57:11 358 debug1: shutting down\n7800 11:57:11 374 agent_start pid:7800, dbg:0, child:0, pipe:0\n7800 11:57:22 556 client pid 5388 connected on \\.\\pipe\\ssh-keyagent\n7800 11:57:22 557 debug1: spawned child 19340 to process 3\n7800 11:57:22 557 client pid 15712 connected on \\.\\pipe\\ssh-keyagent\n19340 11:57:22 557 agent_start pid:19340, dbg:0, child:1, pipe:480\n19340 11:57:22 557 debug1: connection io 000002A29F4529B0 #bytes:0 state:0\n7800 11:57:22 557 debug1: spawned child 5152 to process 3\n5152 11:57:22 572 agent_start pid:5152, dbg:0, child:1, pipe:480\n5152 11:57:22 572 debug1: connection io 0000019831CA2AA0 #bytes:0 state:0\n5152 11:57:22 572 debug1: connection io 0000019831CA2AA0 #bytes:4 state:1\n5152 11:57:22 572 debug1: connection io 0000019831CA2AA0 #bytes:1 state:2\n5152 11:57:22 572 debug1: client type: 1\n5152 11:57:22 572 debug2: process key agent request type 11\n5152 11:57:22 572 debug1: connection io 0000019831CA2AA0 #bytes:9 state:3\n19340 11:57:25 324 debug1: iocp error: 109 on 000002A29F4529B0 \n19340 11:57:25 324 debug1: connection 000002A29F4529B0 clean up\n19340 11:57:25 324 debug1: iocp error: 6 on 0000000000000000 \n5152 11:57:25 324 debug1: iocp error: 109 on 0000019831CA2AA0 \n5152 11:57:25 324 debug1: connection 0000019831CA2AA0 clean up\n5152 11:57:25 324 debug1: iocp error: 6 on 0000000000000000 \n```\n. just looked, there is no sshd.log in the dir, the sshd service is definitely running.\n. Yeh , any updates ?. ",
    "megamorf": "Does it necessarily have to be short? Why not WindowsOpenSSH just like WindowsPowerShell under %ProgramFiles%?\n. And APPX/WSA for Win10/2016 to remove them properly from the system, right?\n. Duplicate of #350. Please close.\n. @huytrann He means that you need to add either cmd or powershell at the end of your bat file to have a shell session after the script has finished. The SSH session will simply be closed after executing the script if you don't invoke your Windows shell of choice at the end..  @discodance1 please wrap the command output in 3 backticks like this:\n```\nyour code\n```. 0.0.5.0 is the latest version. . I believe the devs said that logging in via sshd results in a network logon (similar to the double hop problem in PowerShell or when you invoke mstsc with /restrictedAdmin). That means that you only have access to the local system and that you'll have to reauthenticate against other network resources (e.g. net use or New-PSDrive).. I'll give it a shot this evening :thumbsup:. The IP you listed is an APIPA address. Are you sure the Debian machine is able to talk to the Windows machine?. @LeeHolmes What's your opinion on this?. @nightwish47 just update the software, you're using an ancient version. . Please tell us why they should put effort into debugging a 2 year old version of a software that isn't yet considered production-ready? @nightwish47. See #703. @nightwish47 No, but you can follow the releases page to check for a production-ready version of the Windows OpenSSH build: https://github.com/PowerShell/Win32-OpenSSH/releases. It'd be better to just translate the SID to the locale of the system that the function is being run on.\n\nSee here: https://technet.microsoft.com/en-us/library/ff730940.aspx\n. @bagajjal is running the nmap scan against localhost really a reproduction of the author's issue, i.e. do you know the Windows 7 tcp/ip stack enough to say it should effectively have the same result as running the scan from a remote system? . Your confirm switch is missing a dollar sign . @trgrassijr55  Please wrap your logs in 3 backticks (either manually or use the insert code button of the editor pane). It'll be a lot easier to help when your posts are not a complete mess.. @bagajjal  The issue here is that the command in the wiki is enclosed in double quotes, e.g. Powershell.exe -ExecutionPolicy Bypass -Command \". .\\FixHostFilePermissions.ps1 -Confirm:$False\". When this is executed from within PowerShell the variable expansion in strings replaces $false with its value false which breaks the command.\nIn your installation instructions replace the double quotes with single quotes to work around that issue.. @bagajjal %ProgramData% is for system-wide application settings. No user specific data should be stored there. That's what the user profile (%userprofile% and %appdata%) is for.. ",
    "laughterk": "\nregarding issue no. 1, can you please share little bit more how are you using the RemoteForward config. Are you setting them in ssh_config?\n\nYes, I used RemoteForward in ~/.ssh/config: RemoteForward. Seems to work fine on v0.0.3.0.\n\nissue no. 2 might be related to #454\n\nTested here, the same error is reported on v0.0.3.0.. > Paste does not work when using macOS Terminal or iTerm2 client\nSame problem on Ubuntu 14.04 (OpenSSH_6.6.1p1 Ubuntu-2ubuntu2) too, only the first character is left.. ",
    "librehat": "I encountered exactly the same issue. Win64 on windows 7. :(\n. ",
    "AresS31": "Well, I found out that when launched directly from the openSSH directory (using the absolute path) the executable works just fine. Whereas, when adding the OpenSSH to the environement path and then invoking the sftp.exe executable from poweshell/cmd, we get this dodgy error message. \nfork: No such file or directory\nAnyone got a workaround?\n. ",
    "justinhelgerson": "@bagajjal Would this be something the PowerShell team would consider as a feature?  Assuming the end goal of the project is to have SSH and SFTP available by default in Windows, I think auto-completion is a must-have for the UX.. ",
    "grepwood": "@Gondee Where does PowerShell OpenSSH normally store logs? I've set LogFacility to AUTH.\n. Nevermind, this is due to a mistake in server configuration. There was previously IIS 7.5 FTPS configured to run on that port alongside of a separate IIS 7.5 FTP instance. OpenSSH SFTP works nicely.\n. ",
    "Tombert": "The verbose output is as follows: \n```\nssh -v tom.gebert@10.211.55.4\nOpenSSH_6.9p1, LibreSSL 2.1.8\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 21: Applying options for \ndebug1: Connecting to 10.211.55.4 [10.211.55.4] port 22.\ndebug1: Connection established.\ndebug1: identity file /Users/tom.gebert/.ssh/id_rsa type 1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/tom.gebert/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/tom.gebert/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/tom.gebert/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/tom.gebert/.ssh/id_ecdsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/tom.gebert/.ssh/id_ecdsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/tom.gebert/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/tom.gebert/.ssh/id_ed25519-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_6.9\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.1p1 Microsoft_Win32_port_with_VS\ndebug1: match: OpenSSH_7.1p1 Microsoft_Win32_port_with_VS pat OpenSSH compat 0x04000000\ndebug1: Authenticating to 10.211.55.4:22 as 'tom.gebert'\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: server->client chacha20-poly1305@openssh.com  none\ndebug1: kex: client->server chacha20-poly1305@openssh.com  none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:Oa8vMNTC1DfLvdBjQAaJgKr+Pn/ndF3VvIm1YngLpBU\ndebug1: Host '10.211.55.4' is known and matches the ECDSA host key.\ndebug1: Found key in /Users/tom.gebert/.ssh/known_hosts:4\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: /Users/tom.gebert/.ssh/id_rsa\ndebug1: Server accepts key: pkalg ssh-rsa blen 535\ndebug1: Authentications that can continue: publickey\ndebug1: Trying private key: /Users/tom.gebert/.ssh/id_dsa\ndebug1: Trying private key: /Users/tom.gebert/.ssh/id_ecdsa\ndebug1: Trying private key: /Users/tom.gebert/.ssh/id_ed25519\ndebug1: No more authentication methods to try.\nPermission denied (publickey).\n```\n. Well, I got it working so that I could connect via password (never got the keys working), but I was completely disappointed by the fact that I couldn't use backspace or arrow-keys.  I guess I'll hop on over to Cygwin, since it seems like this has been an ongoing issue and won't be fixed before the weekend is over. \n. ",
    "elestedt": "Confirmed on windows client as well. Disabling compression allows the connection to complete.\n. ",
    "NiQ1": "Confirmed on NIX clients as well -\n  [~] # ssh -C Administrator@192.168.0.5\n  The authenticity of host '192.168.0.5 (192.168.0.5)' can't be established.\n  ECDSA key fingerprint is SHA256:*REMOVED.\n  Are you sure you want to continue connecting (yes/no)? yes\n  Warning: Permanently added '192.168.0.5' (ECDSA) to the list of known hosts.\n  Administrator@192.168.0.5's password:\n  ssh_dispatch_run_fatal: Connection to 192.168.0.5 port 22: incomplete message\n. For me it still doesn't work (same error) even with that permission granted.. sshd can't run as system, it explicitly checks for that and terminates... also the install script creates the \"NT SERVICE\\sshd\" account specifically for the service.. ",
    "vdaele": "@manojampalam 's comment should probably be\n\"C:\\Users\\Marc.ssh\\authorized_keys should be C:\\Users\\Marc.ssh\\authorized_keys\" (extra backslash for the .ssh directory) \nThat was indeed a typo in my original question; However, I did use a separate .ssh directory.\nIn the meantime (also because I had issues with scp), I gave up and installed Cygwin with openssh package\n. ",
    "davecramer": "No, it's not thanks for the reply\nDave Cramer\nOn 21 July 2016 at 12:24, Nicholas Welna notifications@github.com wrote:\n\nIs \"C:\\Program Files\\OpenSSH\\\" in your PATH variable?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/274#issuecomment-234307140,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAYz9n9YYYdI8dx0sWmTodffLJGafgVvks5qX507gaJpZM4JQ_6l\n.\n. \n",
    "aronlmin": "Mine is indeed in PATH, and I still have this error, I have also tried re installing. ",
    "outofcoffee": "@discodance1 have you tried with:\npowershell -File -\nThis works for me.\n. ",
    "Drugoy": "I don't see the commit that's supposed to fix the issue.\n. I've found the commit and I've tried the new version (v.0.0.3.0): you managed to fix something yet broke something else:\nThe prompt:\n\nThe prompt after entering a wrong passphrase first (shouldn't prompts always be the same? isn't the difference a sign of a bug?):\n\nAfter chcp 65001:\n\necho \"\u043f\u0440\u0438\u0432\u0435\u0442\" after chcp 65001:\n\necho \"\u043f\u0440\u0438\u0432\u0435\u0442\" without chcp 65001:\n\nI wish I could reopen this issue, but I don't have enough rights.\n. @manojampalam @rayhayes hello.. @bagajjal - Please share the link to the binary of the latest version.. Thanks, the issue is fixed!. @bingbing8 yes, it is 32-bit. Even if it wasn't - I'd be able to execute 32-bit binary anyways.\nMaybe it is just incomatible with Windows 7.. ",
    "derhoeppi": "Error is solved. The sshd_config has an invalid entry. It's my mistake!\n. I think it's a username issue. I get a Connection from an unix host like user@domain@host. But the same from an Windows host with putty is not running.\n. I want to follow this topic. I need them to add some cipher suites!\n. ",
    "tono13jp": "Thank you for your response, but I can't repair this issue yet.\nI write more information that is SSH-Client's debug mode -vvv, it seems to have stopped here.\ndebug1: close - io:000000A55AFF3EE0, type:2, fd:4, table_index:4\ndebug2: termio_close - pio:000000A55AFF3EE0\ndebug3: TermRead thread, io:000000A55AFF3EE0\n. ",
    "alexDevBR": "I was able to get it to work in KpyM by copying the console entry from my user over to HKEY_USERS\\S-1-5-18 with ForceV2=0. But in OpenSSH it still doesn't work.\n. ",
    "bdr2": "I am also experiencing this same problem, although I don't believe sshd is actually crashing (as in the bug title)... just that the client is abruptly disconnected.\nI am attempting to connect to a VNC server over an SSH tunnel. Standard procedure is to establish SSH client connection to server with port forwarding, then connect VNC client to localhost:port. Just as adverst noted above, SSH connects fine and shell commands work as expected. As soon as I attempt to connect VNC, the SSH connection is disconnected.\nRunning Win32-OpenSSH v0.0.5.0 on Windows 10 Pro with TightVNC Server v.2.8.5. (FYI: IPv6 is disabled.)\nI have reproduced this on Ubuntu 16.04.1 LTS with OpenSSH_7.2p2 client and Remmina v1.1.2 (VNC client), and also on Android 7.1.1 (Nexus 6P phone) with ConnectBot v1.8.6 and Real VNC Viewer v3.0.0.024226.\nFrom Android:\ndebug1: server_input_channel_open: ctype direct-tcpip rchan 101 win 30000 max 33976\ndebug1: server_request_direct_tcpip: originator 127.0.0.1 port 47483, target localhost port 5900\ndebug1: socket:640, io:0095C228, fd:7\ndebug1: socketio_getsockopt - ERROR:22\ndebug1: getsockopt TCP_NODELAY: Invalid argument\ndebug1: connect_next: host localhost ([::1]:5900) in progress, fd=7\ndebug1: channel 1: new [direct-tcpip]\ndebug1: server_input_channel_open: confirm direct-tcpip\ndebug1: finish_connect - ERROR: async io completed with error: 107, io:0095C228\ndebug1: channel 1: connected to localhost port 5900\ndebug1: recv - from CB ERROR:107, io:0095C228\ndebug1: socketio_shutdown - ERROR:126\ndebug1: socketio_shutdown - ERROR:126\ndebug1: channel 1: free: direct-tcpip, nchannels 2\ndebug1: socketio_shutdown - ERROR:126\ndebug1: close - io:0095C228, type:1, fd:7, table_index:7\ndebug1: zombie'ing child at index 0, 0 zombies of 1\ndebug1: raise sig:3\ndebug1: Unregister child at index 0, 1 zombies of 1\ndebug1: process_queued_signals: WARNING - A signal has interrupted and was processed\nFrom Ubuntu (same error):\ndebug1: server_input_channel_open: ctype direct-tcpip rchan 3 win 2097152 max 32768\ndebug1: server_request_direct_tcpip: originator 127.0.0.1 port 34904, target localhost port 5900\ndebug1: socket:708, io:0090CCF0, fd:7\ndebug1: socketio_getsockopt - ERROR:22\ndebug1: getsockopt TCP_NODELAY: Invalid argument\ndebug1: connect_next: host localhost ([::1]:5900) in progress, fd=7\ndebug1: channel 1: new [direct-tcpip]\ndebug1: server_input_channel_open: confirm direct-tcpip\ndebug1: finish_connect - ERROR: async io completed with error: 107, io:0090CCF0\ndebug1: channel 1: connected to localhost port 5900\ndebug1: recv - from CB ERROR:107, io:0090CCF0\ndebug1: socketio_shutdown - ERROR:126\ndebug1: socketio_shutdown - ERROR:126\ndebug1: channel 1: free: direct-tcpip, nchannels 2\ndebug1: socketio_shutdown - ERROR:126\ndebug1: close - io:0090CCF0, type:1, fd:7, table_index:7\ndebug1: zombie'ing child at index 0, 0 zombies of 1\ndebug1: raise sig:3\ndebug1: Unregister child at index 0, 1 zombies of 1\ndebug1: process_queued_signals: WARNING - A signal has interrupted and was processed\n. I'm not the original submitter, so I can't re-open..... but I've duplicated this issue on a clean install of 0.0.7.0. Log shows exactly the same as my post above.\nAdditionally, since I didn't put this in my previous post, here is the output to ssh-agent.log:\n6780 00:04:31 671 client pid 10236 connected\n6780 00:04:31 687 debug1: spawned worker 7136 for agent client pid 10236 \n7136 00:04:31 687 agent_start pid:7136, dbg:0, child:1, pipe:556\n7136 00:04:34 196 debug1: process agent request type 100\n7136 00:05:13 458 debug1: iocp error: 109 on 013E4FF0 \\n\n7136 00:05:13 458 debug1: connection 013E4FF0 clean up\n7136 00:05:13 458 debug1: iocp error: 6 on 00000000 \\n\n. After some more testing, it appears the issue may be related to ipv6.\nAs I noted in my post from December 30, 2016, ipv6 is disabled on all interfaces on all systems and devices in my environment.\nLooking at the SSHD logs, I noticed problems arise as soon as local port forwarding is initiated for the ipv6 localhost (\"[::1]:5900\") with getsockopt errors. In sshd_config, the default argument for keyword AddressFamily is any (use both ipv4 and ipv6). If I edit sshd_config and add AddressFamily inet to explicitly force only ipv4 (and then restart sshd), local port forwarding works perfectly, as sshd forces the ipv4 localhost (\"[127.0.0.1]:5900\"). \nWhat I don't know, however, is if sshd is exhibiting this problem on interfaces and/or environments with active ipv6 configurations (or, at the very least, not completely disabled ipv6). Unfortunately I am not able to personally test that setup, so perhaps someone else can create and test that environment.\nHere are the pertinent parts of the logs to compare:\n.\n* Using default (AddressFamily any -- both ipv4 and ipv6):\n560 18:07:06 206 Starting session: shell on console for bdr2 from 192.168.1.10 port 43562 id 0\n560 18:07:06 206 debug1: pipe - r-h:604,io:00FEA5F0,fd:7  w-h:608,io:00FE97F0,fd:8\n560 18:07:06 206 debug1: pipe - r-h:620,io:00FE9BF0,fd:9  w-h:628,io:00FEA4F0,fd:10\n560 18:07:06 206 debug1: pipe - r-h:632,io:00FEA170,fd:11  w-h:636,io:00FE9C70,fd:12\n560 18:07:06 206 debug1: Executing command: C:\\OpenSSH\\ssh-shellhost.exe \n560 18:07:06 368 debug1: Register child 00000294 pid 1132, 0 zombies of 0\n560 18:07:06 368 debug1: close - io:00FEA5F0, type:2, fd:7, table_index:7\n560 18:07:06 368 debug1: close - io:00FEA4F0, type:2, fd:10, table_index:10\n560 18:07:06 368 debug1: close - io:00FE9C70, type:2, fd:12, table_index:12\n560 18:07:11 620 debug1: server_input_channel_open: ctype direct-tcpip rchan 3 win 2097152 max 32768\n560 18:07:11 620 debug1: server_request_direct_tcpip: originator 127.0.0.1 port 43064, target localhost port 5900\n560 18:07:11 620 debug1: socket:700, io:00FE98F0, fd:7 \n560 18:07:11 620 debug1: socketio_getsockopt - ERROR:22\n560 18:07:11 620 debug1: getsockopt TCP_NODELAY: Invalid argument\n560 18:07:11 620 debug1: connect_next: host localhost ([::1]:5900) in progress, fd=7\n560 18:07:11 620 debug1: channel 1: new [direct-tcpip]\n560 18:07:11 620 debug1: server_input_channel_open: confirm direct-tcpip\n560 18:07:12 651 debug1: finish_connect - ERROR: async io completed with error: 107, io:00FE98F0\n560 18:07:12 651 debug1: channel 1: connected to localhost port 5900\n560 18:07:12 651 debug1: recv - from CB ERROR:107, io:00FE98F0\n560 18:07:12 651 debug1: socketio_shutdown - ERROR:126\n560 18:07:12 651 debug1: socketio_shutdown - ERROR:126\n560 18:07:12 651 debug1: channel 1: free: direct-tcpip, nchannels 2\n560 18:07:12 651 debug1: socketio_shutdown - ERROR:126\n560 18:07:12 651 debug1: close - io:00FE98F0, type:1, fd:7, table_index:7\n6392 18:07:12 820 debug1: zombie'ing child at index 0, 0 zombies of 1\n6392 18:07:12 820 debug1: raise sig:3\n6392 18:07:12 820 debug1: Unregister child at index 0, 1 zombies of 1\n6392 18:07:12 820 debug1: process_queued_signals: WARNING - A signal has interrupted and was processed\n.\n* Edit sshd_config (AddressFamily inet -- explicitly use only ipv4):\n7208 21:06:18 366 Starting session: shell on console for bdr2 from 192.168.1.10 port 43976 id 0\n7208 21:06:18 366 debug1: pipe - r-h:604,io:00C4E110,fd:7  w-h:608,io:00C4E310,fd:8\n7208 21:06:18 366 debug1: pipe - r-h:616,io:00C4E610,fd:9  w-h:624,io:00C4E190,fd:10\n7208 21:06:18 366 debug1: pipe - r-h:628,io:00C4E490,fd:11  w-h:632,io:00C4E390,fd:12\n7208 21:06:18 366 debug1: Executing command: C:\\OpenSSH\\ssh-shellhost.exe \n7208 21:06:18 519 debug1: Register child 00000290 pid 8468, 0 zombies of 0\n7208 21:06:18 519 debug1: close - io:00C4E110, type:2, fd:7, table_index:7\n7208 21:06:18 519 debug1: close - io:00C4E190, type:2, fd:10, table_index:10\n7208 21:06:18 519 debug1: close - io:00C4E390, type:2, fd:12, table_index:12\n7208 21:06:23 087 debug1: server_input_channel_open: ctype direct-tcpip rchan 3 win 2097152 max 32768\n7208 21:06:23 087 debug1: server_request_direct_tcpip: originator 127.0.0.1 port 43478, target localhost port 5900\n7208 21:06:23 103 debug1: socket:696, io:00C4DF90, fd:7 \n7208 21:06:23 103 debug1: connect_next: host localhost ([127.0.0.1]:5900) in progress, fd=7\n7208 21:06:23 103 debug1: channel 1: new [direct-tcpip]\n7208 21:06:23 103 debug1: server_input_channel_open: confirm direct-tcpip\n7208 21:06:23 103 debug1: channel 1: connected to localhost port 5900\n7208 21:06:32 065 debug1: channel 1: free: direct-tcpip, nchannels 2\n7208 21:06:32 065 debug1: close - io:00C4DF90, type:1, fd:7, table_index:7\n7208 21:06:47 447 debug1: close - io:00C4E610, type:2, fd:9, table_index:9\n7208 21:06:47 447 debug1: close - io:00C4E490, type:2, fd:11, table_index:11\n7208 21:06:47 447 debug1: zombie'ing child at index 0, 0 zombies of 1\n7208 21:06:47 447 debug1: raise sig:3\n7208 21:06:47 447 debug1: process_queued_signals: WARNING - A signal has interrupted and was processed\n7208 21:06:47 447 debug1: Received SIGCHLD.\n7208 21:06:47 447 debug1: Unregister child at index 0, 1 zombies of 1\n7208 21:06:47 447 debug1: session_by_pid: pid 8468\n7208 21:06:47 447 debug1: session_exit_message: session 0 channel 0 pid 8468\n7208 21:06:47 447 debug1: session_exit_message: release channel 0\n7208 21:06:47 447 debug1: close - io:00C4E310, type:2, fd:8, table_index:8\n7208 21:06:47 447 debug1: session_pty_cleanup: session 0 release console\n7208 21:06:47 462 debug1: session_by_channel: session 0 channel 0\n7208 21:06:47 462 debug1: session_close_by_channel: channel 0 child 0\n7208 21:06:47 462 Close session: user bdr2 from 192.168.1.10 port 43976 id 0\n7208 21:06:47 462 debug1: channel 0: free: server-session, nchannels 1\n7208 21:06:47 462 Received disconnect from 192.168.1.10 port 43976:11: disconnected by user\n7208 21:06:47 462 Disconnected from 192.168.1.10 port 43976\n7208 21:06:47 462 debug1: do_cleanup\n4232 21:06:47 462 debug1: zombie'ing child at index 0, 0 zombies of 1\n4232 21:06:47 462 debug1: raise sig:3\n4232 21:06:47 462 debug1: Unregister child at index 0, 1 zombies of 1\n4232 21:06:47 462 debug1: process_queued_signals: WARNING - A signal has interrupted and was processed\n.\n(When explicitly specifying ipv4, note the nice, clean close when I manually end the session, as opposed to the abrupt and dirty disconnection with the default ipv4+ipv6.)\n.\nTagging @adverst here, hoping they see this bug's update and perhaps re-test and re-open the bug.. Confirmed the same issues above with a clean install of 0.0.8.0.\n@bingbing8 - Since it appears the original submitter ( @adverst ) has not been active since submitting this bug almost 6 months ago, are you able to re-open this, or should I open a new bug and reference this one?. @bagajjal -- Correction: It's not that I'm seeing this bug with ipv6... It's that I'm seeing this only when I don't explicitly enable ipv4-only in the sshd config (AddressFamily inet), even when only specifying ipv4 addresses.. ",
    "adverst": "Hi sorry - I no longer have the original setup to test this. Wasn't sure if protocol was for me to reopen but will do so now. Actually - sorry, looks like I can't reopen as it was @bingbing8 that closed it . ",
    "theJT": "I can confirm that this bug still exists as of version 0.0.14.0 - hoping that a new comment might cause this to be re-opened.\n. I'm sorry for the massive wall of text there, but I'm a bit out of my depth and have no idea what may or may not be relevant so I'm just attaching everything I can see. \nI'm seeing this problem even with IPv4 set explicitly in the config file. IPv6 is explicitly disabled on the network adaptors of both the client and the server in this case - although the exact same thing happens if I re-enable it.\nHere's the content of sshd_config\n```\n$OpenBSD: sshd_config,v 1.84 2011/05/23 03:30:07 djm Exp $\nThis is the sshd server system-wide configuration file.  See\nsshd_config(5) for more information.\nThis sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin\nThe strategy used for options in the default sshd_config shipped with\nOpenSSH is to specify options with their default value where\npossible, but leave them commented.  Uncommented options override the\ndefault value.\nPort 22\nAddressFamily inet\nListenAddress 0.0.0.0\nListenAddress ::\nThe default requires explicit activation of protocol 1\nProtocol 2\nHostKey for protocol version 1\nHostKey /etc/ssh/ssh_host_key\nHostKeys for protocol version 2\nHostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_dsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\nLifetime and size of ephemeral version 1 server key\nKeyRegenerationInterval 1h\nServerKeyBits 1024\nLogging\nobsoletes QuietMode and FascistLogging\nSyslogFacility AUTH\nLogLevel INFO\nAuthentication:\nLoginGraceTime 2m\nPermitRootLogin yes\nStrictModes yes\nMaxAuthTries 6\nMaxSessions 10\nRSAAuthentication yes\nPubkeyAuthentication yes\nThe default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\nbut this is overridden so installations will only check .ssh/authorized_key\nIf you use a relative path here it will read from c:\\users\\$env:UserName\\\nwhich is proabably not what we want. Not least because we'd have to populat\nC:\\users with all our home directories.\nAuthorizedKeysFile      /mi/etc/sshd/authorized_keys\nFor this to work you will also need host keys in /etc/ssh/ssh_known_hosts\nRhostsRSAAuthentication no\nsimilar for protocol version 2\nHostbasedAuthentication no\nChange to yes if you don't trust ~/.ssh/known_hosts for\nRhostsRSAAuthentication and HostbasedAuthentication\nIgnoreUserKnownHosts no\nDon't read the user's ~/.rhosts and ~/.shosts files\nIgnoreRhosts yes\nTo disable tunneled clear text passwords, change to no here!\nWe should be using keyfiles only.\nPasswordAuthentication no\nPermitEmptyPasswords no\nChange to no to disable s/key passwords\nChallengeResponseAuthentication yes\nKerberos options\nKerberosAuthentication no\nKerberosOrLocalPasswd yes\nKerberosTicketCleanup yes\nKerberosGetAFSToken no\nGSSAPI options\nGSSAPIAuthentication no\nGSSAPICleanupCredentials yes\nSet this to 'yes' to enable PAM authentication, account processing,\nand session processing. If this is enabled, PAM authentication will\nbe allowed through the ChallengeResponseAuthentication and\nPasswordAuthentication.  Depending on your PAM configuration,\nPAM authentication via ChallengeResponseAuthentication may bypass\nthe setting of \"PermitRootLogin without-password\".\nIf you just want the PAM account and session checks to run without\nPAM authentication, then enable this but set PasswordAuthentication\nand ChallengeResponseAuthentication to 'no'.\nUsePAM no\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nGatewayPorts no\nX11Forwarding no\nX11DisplayOffset 10\nX11UseLocalhost yes\nPrintMotd yes\nPrintLastLog yes\nTCPKeepAlive yes\nUseLogin no\nUsePrivilegeSeparation yes\nPermitUserEnvironment no\nCompression delayed\nClientAliveInterval 0\nClientAliveCountMax 3\nUseDNS yes\nPidFile c:\\mi\\run\\sshd.pid\nMaxStartups 10\nPermitTunnel yes\nChrootDirectory none\nno default banner path\nBanner none\noverride default of no subsystems\nSubsystem       sftp    sftp-server.exe\nExample of overriding settings on a per-user basis\nMatch User anoncvs\nX11Forwarding no\nAllowTcpForwarding no\nForceCommand cvs server\nPubkeyAcceptedKeyTypes ssh-ed25519*\n```\nIf I start sshd -ddd for debugging and connect as normal, everything initially seems fine:\nThis from the client\ntipler@MATHS@BARON-GREENBACK C:\\Users\\tipler>debug3: Register child 000000000000\n027C pid 3156, 0 zombies of 0\ndebug2: fd 4 setting TCP_NODELAY\ndebug3: close - io:0000021D9C5EA5D0, type:2, fd:7, table_index:7\ndebug3: close - io:0000021D9C5EAD60, type:2, fd:10, table_index:10\ndebug3: close - io:0000021D9C5EA680, type:2, fd:12, table_index:12\ndebug2: channel 0: rfd 9 isatty\ndebug3: fd 9 is O_NONBLOCK\ndebug3: fd 8 is O_NONBLOCK\ndebug3: fd 11 is O_NONBLOCK\ndebug3: send packet: type 99\nand this from the server:\n```\ndebug2: load_server_config: filename ./sshd_config\ndebug2: load_server_config: done config len = 289\ndebug2: parse_server_config: config ./sshd_config len 289\ndebug3: ./sshd_config:14 setting AddressFamily inet\ndebug3: ./sshd_config:53 setting AuthorizedKeysFile /mi/etc/sshd/authorized_keys\ndebug3: ./sshd_config:67 setting PasswordAuthentication no\ndebug3: ./sshd_config:110 setting PidFile c:\\mi\\run\\sshd.pid\ndebug3: ./sshd_config:112 setting PermitTunnel yes\ndebug3: ./sshd_config:119 setting Subsystem sftp        sftp-server.exe\ndebug3: socket:496, socktype:1, io:0000021D9C5EAE10, fd:3\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug3: socket:540, io:0000021D9C5EA730, fd:4\ndebug3: fd 4 is not O_NONBLOCK\ndebug3: pipe - r-h:548,io:0000021D9C5EA1B0,fd:5  w-h:544,io:0000021D9C5EA310,fd:6\ndebug1: Server will not fork when running in debugging mode.\ndebug3: close - io:0000021D9C5EAE10, type:1, fd:3, table_index:3\ndebug3: close - io:0000021D9C5EA1B0, type:2, fd:5, table_index:5\ndebug3: close - io:0000021D9C5EA310, type:2, fd:6, table_index:6\nConnection from 129.67.186.181 port 58978 on 129.67.186.96 port 22\ndebug1: Client protocol version 2.0; client software version PuTTY_Release_0.67\ndebug1: no match: PuTTY_Release_0.67\ndebug1: Local version string SSH-2.0-OpenSSH_7.5\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug2: fd 4 setting O_NONBLOCK\ndebug3: socket:0, socktype:1, io:0000021D9C5EAF70, fd:3\ndebug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-\ngroup16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-1\n28@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-1\n28@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer client KEXINIT proposal\ndebug2: KEX algorithms: diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1,rsa2048-sha256,rsa1024-sha1\ndebug2: host key algorithms: ssh-rsa,ssh-dss\ndebug2: ciphers ctos: aes256-ctr,aes256-cbc,rijndael-cbc@lysator.liu.se,aes192-ctr,aes192-cbc,aes128-ctr,aes128-cbc,blowfish-ctr,blowfish-cbc,3des-ctr,3des-cbc,arcfour256,arcfour12\n8\ndebug2: ciphers stoc: aes256-ctr,aes256-cbc,rijndael-cbc@lysator.liu.se,aes192-ctr,aes192-cbc,aes128-ctr,aes128-cbc,blowfish-ctr,blowfish-cbc,3des-ctr,3des-cbc,arcfour256,arcfour12\n8\ndebug2: MACs ctos: hmac-sha2-256,hmac-sha1,hmac-sha1-96,hmac-md5\ndebug2: MACs stoc: hmac-sha2-256,hmac-sha1,hmac-sha1-96,hmac-md5\ndebug2: compression ctos: none,zlib\ndebug2: compression stoc: none,zlib\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: diffie-hellman-group-exchange-sha256\ndebug1: kex: host key algorithm: ssh-rsa\ndebug1: kex: client->server cipher: aes256-ctr MAC: hmac-sha2-256 compression: none\ndebug1: kex: server->client cipher: aes256-ctr MAC: hmac-sha2-256 compression: none\ndebug1: expecting SSH2_MSG_KEX_DH_GEX_REQUEST\ndebug3: receive packet: type 34\ndebug1: SSH2_MSG_KEX_DH_GEX_REQUEST received\nWARNING: could not open ./moduli (No such file or directory), using fixed modulus\ndebug3: dh_new_group_fallback: requested max size 8192\ndebug3: using 8k bit group 18\ndebug1: SSH2_MSG_KEX_DH_GEX_GROUP sent\ndebug3: send packet: type 31\ndebug2: bits set: 4073/8192\ndebug1: expecting SSH2_MSG_KEX_DH_GEX_INIT\ndebug3: receive packet: type 32\ndebug2: bits set: 4037/8192\ndebug3: send packet: type 33\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 4294967296 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 4294967296 blocks\ndebug1: KEX done\ndebug3: receive packet: type 5\ndebug3: send packet: type 6\ndebug3: receive packet: type 50\ndebug1: userauth-request for user MATHS\\tipler service ssh-connection method none\ndebug1: attempt 0 failures 0\ndebug2: parse_server_config: config reprocess config len 289\ndebug3: NetUserGetInfo() failed with error: 1722 for user: tipler and domain: MATHS\ndebug2: input_userauth_request: setting up authctxt for MATHS\\tipler\ndebug2: input_userauth_request: try method none\nFailed none for MATHS\\tipler from 129.67.186.181 port 58978 ssh2\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,keyboard-interactive\"\ndebug3: send packet: type 51\ndebug3: receive packet: type 50\ndebug1: userauth-request for user MATHS\\tipler service ssh-connection method publickey\ndebug1: attempt 1 failures 0\ndebug2: input_userauth_request: try method publickey\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:rF3YwCEoknzMNegnENWZMp98NY0CeDPcOZuDuP/6C/U\ndebug1: trying public key file /mi/etc/sshd/authorized_keys\ndebug1: matching key found: file /mi/etc/sshd/authorized_keys, line 5 RSA SHA256:rF3YwCEoknzMNegnENWZMp98NY0CeDPcOZuDuP/6C/U\ndebug3: send packet: type 60\ndebug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\nPostponed publickey for MATHS\\tipler from 129.67.186.181 port 58978 ssh2\ndebug3: receive packet: type 50\ndebug1: userauth-request for user MATHS\\tipler service ssh-connection method publickey\ndebug1: attempt 2 failures 0\ndebug2: input_userauth_request: try method publickey\ndebug3: userauth_pubkey: have signature for RSA SHA256:rF3YwCEoknzMNegnENWZMp98NY0CeDPcOZuDuP/6C/U\ndebug3: auth agent authenticated MATHS\\tipler\ndebug2: userauth_pubkey: authenticated 1 pkalg ssh-rsa\nAccepted publickey for MATHS\\tipler from 129.67.186.181 port 58978 ssh2: RSA SHA256:rF3YwCEoknzMNegnENWZMp98NY0CeDPcOZuDuP/6C/U\ndebug3: send packet: type 52\ndebug3: notify_hostkeys: key 0: ssh-rsa SHA256:Y7ZO+v4DtmK47JIWmj4oDyFHaC3gJSiGJ4iU3K4loMU\ndebug3: notify_hostkeys: key 1: ssh-dss SHA256:UUaU5t0ybmPj++NzEOEUUdsCyPBwELslDg82dv4orco\ndebug3: notify_hostkeys: key 2: ecdsa-sha2-nistp256 SHA256:/OWW4HGwRNsfNWYOZHdArhMhzYPCH/CeHGTzEM1IqG4\ndebug3: notify_hostkeys: key 3: ssh-ed25519 SHA256:WRsWODA1HZIanfrnWQ1qglEkU9Cv33CQRWxLNHO9dv4\ndebug3: notify_hostkeys: sent 4 hostkeys\ndebug3: send packet: type 80\ndebug1: Entering interactive session for SSH2.\ndebug3: pipe - r-h:496,io:0000021D9C5EAEC0,fd:5  w-h:576,io:0000021D9C5EA940,fd:6\ndebug2: fd 5 setting O_NONBLOCK\ndebug2: fd 6 setting O_NONBLOCK\ndebug1: server_init_dispatch\ndebug3: receive packet: type 90\ndebug1: server_input_channel_open: ctype session rchan 256 win 16384 max 16384\ndebug1: input_session_request\ndebug1: channel 0: new [server-session]\ndebug2: session_new: allocate (allocated 0 max 10)\ndebug3: session_unused: session id 0 unused\ndebug1: session_new: session 0\ndebug1: session_open: channel 0\ndebug1: session_open: session 0: link with channel 0\ndebug1: server_input_channel_open: confirm session\ndebug3: send packet: type 91\ndebug3: receive packet: type 98\ndebug1: server_input_channel_req: channel 0 request pty-req reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req pty-req\ndebug1: Allocating pty.\ndebug1: session_pty_req: session 0 alloc console\ndebug1: Ignoring unsupported tty mode opcode 3 (0x3)\ndebug3: send packet: type 99\ndebug3: receive packet: type 98\ndebug1: server_input_channel_req: channel 0 request shell reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req shell\nStarting session: shell on console for tipler@MATHS from 129.67.186.181 port 58978 id 0\ndebug3: pipe - r-h:568,io:0000021D9C5EA5D0,fd:7  w-h:536,io:0000021D9C5EAC00,fd:8\ndebug3: pipe - r-h:572,io:0000021D9C5EA520,fd:9  w-h:564,io:0000021D9C5EAD60,fd:10\ndebug3: pipe - r-h:584,io:0000021D9C5EA310,fd:11  w-h:580,io:0000021D9C5EA680,fd:12\ndebug2: fd 7 setting O_NONBLOCK\ndebug2: fd 8 setting O_NONBLOCK\ndebug2: fd 9 setting O_NONBLOCK\ndebug2: fd 10 setting O_NONBLOCK\ndebug2: fd 11 setting O_NONBLOCK\ndebug2: fd 12 setting O_NONBLOCK\ndebug1: Executing command: C:\\mi\\etc\\sshd\\ssh-shellhost.exe\n```\nHowever as soon as I attempt to connect to the tunneled port (in this case TightVNC Server on 5899, tunnel established from 15899 on the remote host) It spams \ndebug3: channel 1: waiting for connection\napproximately 1800 times into the client console before suddenly disconnecting with:\ndebug3: finish_connect - ERROR: async io completed with error: 107, io:0000021D9\nC5EAB50\ndebug1: channel 1: connected to baron-greenback port 5899\ndebug3: send packet: type 91\ndebug3: recv - from CB ERROR:107, io:0000021D9C5EAB50\ndebug2: channel 1: read<=0 rfd 7 len -1\ndebug2: channel 1: read failed\ndebug2: channel 1: close_read\ndebug3: socketio_shutdown - ERROR:126\ndebug2: channel 1: input open -> drain\ndebug2: channel 1: ibuf empty\ndebug2: channel 1: send eof\ndebug3: send packet: type 96\ndebug2: channel 1: input drain -> closed\nIt then repeats \ndebug3: receive packet: type 98\ndebug1: server_input_channel_req: channel 0 request winadj@putty.projects.tartar\nus.org reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req winadj@putty.projects.tartarus.\norg\ndebug3: send packet: type 100\ndebug2: channel 0: rcvd adjust 8205\nwith various rcvd adjust values around the 8200 mark. \nAt the server end the sshd.exe process dies hard, throwing a standard \"OpenSSH for Windows has stopped working\" popup, along with this corresponding message in the Application log (via event viewer)\nFaulting application name: sshd.exe, version: 0.0.14.0, time stamp: 0x591a3830\nFaulting module name: KERNELBASE.dll, version: 10.0.14393.1198, time stamp: 0x5902808f\nException code: 0x80000003\nFault offset: 0x00000000000c6062\nFaulting process ID: 0x1570\nFaulting application start time: 0x01d2d9eca5a9a190\nFaulting application path: C:\\mi\\etc\\sshd\\sshd.exe\nFaulting module path: C:\\Windows\\System32\\KERNELBASE.dll\nReport ID: cada76a9-2069-4dfa-90bb-209a5e205926\nFaulting package full name: \nFaulting package-relative application ID:\nThere is no corresponding line in sshd\\logs\\sshd.log\n. I've finally traced this to an issue with TightVNC server itself. When set to listen to loopback connections it gets weirdly specific. a tunnel of 15900:$HOSTNAME:5900 (as in my ssh script, where obviously $HOSTNAME is being populated with the target machine's name) will not work, but 15900:127.0.0.1:5900 will. \nThank you all for your help.. ",
    "adamel": "I have the same behavior on my domain connected work computer. On my home machine on the other hand starting bash works well. Odd thing is that on the work computer I can start powershell in an ssh session, but if I try that on my home machine I just get back to the cmd prompt without anything happening.\n. ",
    "J-Siu": "I encounter the same error.\nI am connecting from OS X to Windows 10 Pro. Windows 10 Pro is standalone, not in any domain.\n. ",
    "pmwoodward3": "Running into the same issue\n. ",
    "darkverbito": "I had to set Local Launch and Activation permissions for my user by taking control of the registry keys:\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID{F72671A9-012C-4725-9D2F-2A4D32D65169}\nHKEY_CLASSES_ROOT\\CLSID{4f476546-b412-4579-b64c-123df331e3d6}\nThen adjusting the permissions in DCOM component services for AppId F72671A9-012C-4725-9D2F-2A4D32D65169. Before doing that I was getting an error 0x80070005 any time I would try to invoke bash over OpenSSH-Win64. Once I adjust these I was able to launch bash.. That makes no sense. Look it is working interactively.. Also note that the error for 289 is resolved if you adjust the DCOM as I indicated.. Please re-open this. It should not be closed.\n@manojampalam @quamrulmina @dkulwin @arif-pragmasys . You have to take control of those keys: right click, permissions, advanced, owner (change). Then add that owner with full control. Do this for both keys.. That is the underlying problem I was documenting.. ",
    "gravcat": "https://github.com/PowerShell/Win32-OpenSSH/issues/289#issuecomment-314880143\n\nI had to set Local Launch and Activation permissions for my user by taking control of the registry keys:\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID{F72671A9-012C-4725-9D2F-2A4D32D65169}\nHKEY_CLASSES_ROOT\\CLSID{4f476546-b412-4579-b64c-123df331e3d6}\nThen adjusting the permissions in DCOM component services for AppId F72671A9-012C-4725-9D2F-2A4D32D65169. Before doing that I was getting an error 0x80070005 any time I would try to invoke bash over OpenSSH-Win64. Once I adjust these I was able to launch bash.\n\nI was also able to successfully SSH into my machine and then execute bash by following this suggestion.. @miller-time I wrote a blog post about this: https://adrift.io/2017/10/11/windows-subsystem-for-linux-error-0x80070005-access-denied/\nHope that is more directly helpful!. @gatornation11 if it's a Symantec false positive issue, you'll need to exclude your OpenSSH-WIn32/OpenSSH-Win64 directory and it's contents.. Not really OpenSSH-Win64's problem to police Symantec's historically crappy false positive rate. Every software company I've ever worked with at one point or another has pain attached to the word \"Symantec\". Submit it to Symantec and they should help you resolve the false positive, at which point you'll help any other users that unfortunately also use Symantec.. I am going to try to set my log level to VERBOSE and post results/logs of an isolated occurrence. Standby.\nAlso please bear with me, I did do my best to research the issue and review the issue tracker for historical occurrences for which I could find none.. Client log provided by -v switch. Nothing of interest though there may be deeper levels to inspect?\nusername@192.168.1.100's password: \ndebug1: Authentication succeeded (password).\nAuthenticated to 192.168.1.100 ([192.168.1.100]:22).\ndebug1: channel 0: new [client-session]\ndebug1: Requesting no-more-sessions@openssh.com\ndebug1: Entering interactive session.\ndebug1: pledge: network\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\ndebug1: Sending environment.\ndebug1: Sending env LANG = en_US.UTF-8. Video demonstrating the problem: https://www.youtube.com/watch?v=gt0NWxe4gAc. @bagajjal I will test out @lejello's suggestions first and report back. If that doesn't resolve, I'll upload my (very stock) sshd_config and sshd.log. Thanks!. I can't find install-sshd.ps1 in your repository, so I'll just have to describe as best I can.\nAround line 220 in install-sshd.ps1, there is an if conditional which checks the powershell edition.\n```\nif(($psversiontable.Containskey(\"psedition\")) -and ($psversiontable.PSEdition -ieq \"core\"))\n    $references = \"System.Security.Principal.Windows\", \"Microsoft.Win32.Primitives\"\n}\ntry {\n    $null = [MyLsaWrapper.LsaWrapperCaller]\n}\ncatch {\n    $types = Add-Type $definition -ref $references -WarningAction SilentlyContinue -ErrorAction SilentlyContinue\n}\n```\nUnfortunately this is not valid for many platforms, including my Windows 10 systems. We require Windows 10 because we are using the latest advancements with the Windows Subsystem for Linux. I suggest that the check include the other PSEditions that may be encountered, or to have the check removed entirely.\n$psversiontable.PSEdition evaluates to Desktop on Windows 10, and Server on Windows Server (non-core).\nBecause this conditional is not met and the block inside it is not executed, $definitions is not set and thus MyLSAWrapper is not available for use.\nIf this were resolved, this would allow me to get one step closer to fully automating Win32-OpenSSH deployments!. Here's the link to the repository, and a link to the Chocolatey page for it.\n1. https://github.com/DarwinJS/ChocoPackages/tree/master/openssh\n2. https://chocolatey.org/packages/openssh\nIf there's a better way to be doing this I'll happily oblige! I actually ended up working with the Azure team to determine the cause of the fault in install-sshd.ps1 so I'm very committed!\nIt just seems that install-sshd.ps1 is so close to working for what many would need.. Hi @bingbing8,\nThe $psversiontable.PSEdition = Desktop on Windows 10.. Dropping this here in case your issue is more relevant there\nhttps://github.com/PowerShell/PSReadLine. @bagajjal not my issue just trying to help out! @nkrepo see above.. ",
    "miller-time": "@darkverbito / @gravcat : I tried to follow those instructions and I'm still getting 0x80070005 every time I launch bash from an SSH connection. \nI've never really messed with DCOM settings before, so here's a rundown of what I did... After changing the owner on those two registry keys, I went into dcomcnfg and found {F72671A9-012C-4725-9D2F-2A4D32D65169} under Component Services > Computers > My Computer > DCOM Config. I wasn't sure which user to grant which permissions to, so I just gave \"Everyone\" full access (local and remote launch/activation, local and remote access, full control).\nDid I miss a step? Any ideas?\nThanks. @gravcat Thanks but I actually went a different route. Running ssh server from bash was much easier... lol\nedit: weird the GUID's look like they are different than your comment above. I'm curious, how you do figure out what the DCOM id is for an application?. ",
    "hgghyxo": "This snippet helped me: https://gist.github.com/gravcat/4ceb977916c5f551cae44375296ab72a. ",
    "EchBTI": "I've done something similar where I wanted a user to login and put files in a specific directory, I followed MS article to change user profile directory via Regedit, you have to have at least logged in with the user once to create the required reg key, then you can change it. \nAll has worked quite well. The only thing I haven't yet figured out is how to lock down the ability to then navigate out of that directory. \nEE\n. FYI - http://www.nextofwindows.com/how-to-change-user-profile-default-location-in-windows-7\n. ",
    "Janareddy": "Hi, Is there a way to implement directory lock (chroot) in windows? \n. @bingbing8  Hi, I have installed successfully. But I am unable to connect using sftp (using filezilla). When I check the log I saw that error. Thanks!. ",
    "Bob-O-Rama": "\"That would be chroot on Windows. Since this is not supported by OS itself, I guess it cannot be accurately implemented in Windows.\"   \nTo be honest, I normally do not complain about FOSS functionality, because, after all, its a community project and as one of the bottom feeders benefiting from their good graces, I have little to complain about.   However with SFTP, which is to improve the security of file transfers, even calling this SFTP is criminal.   Being able to jail the user to a given folder or home folder is not a roadmap feature, it absence is a blocker to release.    This is an incredibly reckless hobbling of security features available in SFTP implementations on other platforms.. ",
    "SallyJohnson": "I don't know how this software can get any sort of MS \"sign off\" https://blogs.msdn.microsoft.com/powershell/2015/10/19/openssh-for-windows-update/\nIt would appear that chroot is something that is not being aimed for in the first release, if at all (info gained from this and other forums). Without a chroot, its like a system admin sharing the C: drive with full share permissions on a windows file server, and saying \"its okay, users can only WRITE to their home directories\" .  I'm less sure about the terminal side of this, but it all seems very niche and a lot of effort for something that can be easily achieved by other mechanisms. But then again perhaps I am not appreciating why \"openssh\" is something of particular importance. . ",
    "ruzickap": "Hello I do the the same issue. \nI installed the Win32-OpenSSH via chocolatey (choco install -y win32-openssh --params='/SSHServerFeature /KeyBasedAuthenticationFeature') and I'm getting the same issue:\nperu ~ # ssh  192.168.122.33 -l vagrant -vvv\nOpenSSH_7.2p2, OpenSSL 1.0.2h-fips  3 May 2016\ndebug1: Reading configuration data /root/.ssh/config\ndebug1: /root/.ssh/config line 1: Applying options for *\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 58: Applying options for *\ndebug2: resolving \"192.168.122.33\" port 22\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to 192.168.122.33 [192.168.122.33] port 22.\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: fd 3 clearing O_NONBLOCK\ndebug1: Connection established.\ndebug3: timeout: 8000 ms remain after connect\ndebug1: permanently_set_uid: 0/0\ndebug1: identity file /root/.ssh/id_rsa type 1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /root/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /root/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /root/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /root/.ssh/id_ecdsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /root/.ssh/id_ecdsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /root/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /root/.ssh/id_ed25519-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_7.2\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.1p1 Microsoft_Win32_port_with_VS\ndebug1: match: OpenSSH_7.1p1 Microsoft_Win32_port_with_VS pat OpenSSH* compat 0x04000000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to 192.168.122.33:22 as 'vagrant'\ndebug3: hostkeys_foreach: reading file \"/root/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file /root/.ssh/known_hosts:195\ndebug3: load_hostkeys: loaded 1 keys from 192.168.122.33\ndebug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none,zlib@openssh.com,zlib\ndebug2: compression stoc: none,zlib@openssh.com,zlib\ndebug2: languages ctos: \ndebug2: languages stoc: \ndebug2: first_kex_follows 0 \ndebug2: reserved 0 \ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none,zlib@openssh.com\ndebug2: compression stoc: none,zlib@openssh.com\ndebug2: languages ctos: \ndebug2: languages stoc: \ndebug2: first_kex_follows 0 \ndebug2: reserved 0 \ndebug1: kex: algorithm: curve25519-sha256@libssh.org\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: kex: curve25519-sha256@libssh.org need=64 dh_need=64\ndebug1: kex: curve25519-sha256@libssh.org need=64 dh_need=64\ndebug3: send packet: type 30\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug3: receive packet: type 31\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:YZvprf8lsfLY9SyxqvH12STBRLEz9S4knU8t/XtzqU8\ndebug3: hostkeys_foreach: reading file \"/root/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file /root/.ssh/known_hosts:195\ndebug3: load_hostkeys: loaded 1 keys from 192.168.122.33\ndebug1: Host '192.168.122.33' is known and matches the ECDSA host key.\ndebug1: Found key in /root/.ssh/known_hosts:195\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: receive packet: type 21\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: key: /root/.ssh/id_rsa (0x55f7e345b5b0)\ndebug2: key: /root/.ssh/id_dsa ((nil))\ndebug2: key: /root/.ssh/id_ecdsa ((nil))\ndebug2: key: /root/.ssh/id_ed25519 ((nil))\ndebug3: send packet: type 5\ndebug3: receive packet: type 6\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: /root/.ssh/id_rsa\ndebug3: send_pubkey_test\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 60\ndebug1: Server accepts key: pkalg ssh-rsa blen 277\ndebug2: input_userauth_pk_ok: fp SHA256:KweQtkZfdtzL9Jcpg/svDBkb5WcCEehVWM5l9D5mw14\ndebug3: sign_and_send_pubkey: RSA SHA256:KweQtkZfdtzL9Jcpg/svDBkb5WcCEehVWM5l9D5mw14\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug1: Trying private key: /root/.ssh/id_dsa\ndebug3: no such identity: /root/.ssh/id_dsa: No such file or directory\ndebug1: Trying private key: /root/.ssh/id_ecdsa\ndebug3: no such identity: /root/.ssh/id_ecdsa: No such file or directory\ndebug1: Trying private key: /root/.ssh/id_ed25519\ndebug3: no such identity: /root/.ssh/id_ed25519: No such file or directory\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive\ndebug3: remaining preferred: password\ndebug3: authmethod_is_enabled keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug2: userauth_kbdint\ndebug3: send packet: type 50\ndebug2: we sent a keyboard-interactive packet, wait for reply\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: userauth_kbdint: disable: no info_req_seen\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup password\ndebug3: remaining preferred: \ndebug3: authmethod_is_enabled password\ndebug1: Next authentication method: password\nvagrant@192.168.122.33's password: \ndebug3: send packet: type 50\ndebug2: we sent a password packet, wait for reply\ndebug3: receive packet: type 52\ndebug1: Authentication succeeded (password).\nAuthenticated to 192.168.122.33 ([192.168.122.33]:22).\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug3: send packet: type 90\ndebug1: Requesting no-more-sessions@openssh.com\ndebug3: send packet: type 80\ndebug1: Entering interactive session.\ndebug1: pledge: exec\ndebug3: receive packet: type 80\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\ndebug3: receive packet: type 91\ndebug2: callback start\ndebug2: x11_get_proto: /usr/bin/xauth  list :0 2>/dev/null\ndebug1: Requesting X11 forwarding with authentication spoofing.\ndebug2: channel 0: request x11-req confirm 1\ndebug3: send packet: type 98\ndebug2: fd 3 setting TCP_NODELAY\ndebug3: ssh_packet_set_tos: set IP_TOS 0x10\ndebug2: client_session2_setup: id 0\ndebug2: channel 0: request pty-req confirm 1\ndebug3: send packet: type 98\ndebug1: Sending environment.\ndebug3: Ignored env HOSTNAME\ndebug3: Ignored env SHELL\ndebug3: Ignored env TERM\ndebug3: Ignored env HISTSIZE\ndebug3: Ignored env http_proxy\ndebug3: Ignored env USER\ndebug3: Ignored env LS_COLORS\ndebug3: Ignored env ftp_proxy\ndebug3: Ignored env MAIL\ndebug3: Ignored env PATH\ndebug3: Ignored env PWD\ndebug1: Sending env LANG = en_US.UTF-8\ndebug2: channel 0: request env confirm 0\ndebug3: send packet: type 98\ndebug3: Ignored env KDEDIRS\ndebug3: Ignored env https_proxy\ndebug3: Ignored env HISTCONTROL\ndebug3: Ignored env SHLVL\ndebug3: Ignored env HOME\ndebug3: Ignored env no_proxy\ndebug3: Ignored env LOGNAME\ndebug3: Ignored env LESSOPEN\ndebug3: Ignored env DISPLAY\ndebug3: Ignored env XAUTHORITY\ndebug3: Ignored env _\ndebug2: channel 0: request shell confirm 1\ndebug3: send packet: type 98\ndebug2: callback done\ndebug2: channel 0: open confirm rwindow 0 rmax 32768\ndebug3: receive packet: type 100\ndebug2: channel_input_status_confirm: type 100 id 0\nX11 forwarding request failed on channel 0\ndebug3: send packet: type 1\npacket_write_wait: Connection to 192.168.122.33 port 22: Broken pipe\nperu ~ #\nIf I stop sshd service and start sshd -d or just sshd via command line - it works fine...\n. Runniong ntrights.exe -u \"NT SERVICE\\SSHD\" +r SeAssignPrimaryTokenPrivilege inside C:\\Program Files\\OpenSSH-Win64 fixes it. \nI'm using the latest available version, but I still need to run the command mentioned above to make it working:\nC:\\Users\\vagrant>choco list --local-only\nChocolatey v0.10.0\nchocolatey 0.10.0\nwin32-openssh 2016.05.30.20160807\n2 packages installed.\u0000\nThank you\n. Thank you. \nIt's working fine with the latest version 2016.05.30.20160902.\n. ",
    "MattHodge": "+1 Same problem as @ruzickap \n. Looks like a bug with the Chocolatey installation. Doing ntrights.exe -u +r SeAssignPrimaryTokenPrivilege from inside C:\\Program Files\\OpenSSH-Win64 fixes it.\n. ",
    "railsmith": "I am also facing the same issue. Any workaround?\n. ",
    "jean-marc": "Hello,\nI was referring to the setup described here: http://joeykelly.net/rants/vpn_using_ssh.txt\nThanks\n. ",
    "KotaroKashima": "I tried to  investigate about this issue with Process Explorer.\nhttps://technet.microsoft.com/en-us/sysinternals/bb896653.aspx\nThis result is as follows.\na) The thread about sechost.dll is killed when I execute Ctrl+C.\nb) I cannot login when the thread is killed.\nc) I cannot login when I suspend the thread manually. \n\n. ",
    "m451": "I'd like to see PKCS11 as well. As we're moving away from traditional passwords this would be a great deal.. ",
    "RichardScothern": "Just adding an interest in this feature too.\n@manojampalam do you have a hard requirement for this repo being merged into the official openSSH before accepting pull requests for out of scope features?  Thanks!. ",
    "0byt3": "I am using domain accounts. I'm sure I have LSA installed. I can think of one thing that might be an issue. I started using an updated version, but I couldn't update the ssh-lsa.dll, but it tells me it's opened by a process, so I hoped it wouldn't be an issue, because otherwise I have to find out what that process is... I did stop and uninstall the previous ssh install, except the LSA which failed with that error.\n. I tried two things: I used powershell to create a text file of authorized_keys using ' \"\" | Out-File -Encoding ascii -FilePath C:\\Users\\Aadministrator.ssh\\authorized_keys '.\nThe other was create the file on the linux server the copy it to the directory on the windows server: 'cat /root/.ssh/id_dsa.pub > authorized_keys '.\n. I tried using the local administrator account and it worked. The domain administrator account doesn't work. I am hoping that might mean something to someone.\n. I think this is an issue with my server rather than with OpenSSH. I set up the service on a new server and it worked fine. I was also able to run psexec -i -s cmd.exe with a domain admin account, whereas I can't on my current server. I can only run that command as a local admin, but on the new server I set up I was able to run it. The new server was a full server 2012 R2 install joined to Microsoft AD. The not working server is Server 2012R2 Core joined to Samba4 AD.\nThe psexec error I get is the following:\nError deriving session key:\nThe requested operation cannot be completed. The computer must be trusted for delegation and the current user account must be configured to allow delegation.\n. I installed it on a DC and it seems to work on there.. Since I have it working on the DC and don't need it on the other server I'm closing the issue.. ",
    "mohag": "With the Chocolatey package, it seems like it is at least necessary to run \"C:\\Program Files\\OpenSSH-Win64\\install-sshlsa.ps1\" (It copies the DLL and adds some registry entries) and reboot the server before public key auth works, (I could not get it to work without a reboot)\n. ",
    "drieseng": "I haven't yet built from source. I'll try to find time for this.\n. ",
    "jdunn0": "I noticed those services too but it wasn't right after the Anniversary Update.\nIt was after I enabled \"Developer Mode\" in the Settings App to let me install the Bash on Windows feature that the SSH Server was installed.\nI googled it and found the page at https://noise.paulos.cz/post/windows10-14352-ssh-server/ which seems to indicate that the builtin SSH Server is something used for development tools somehow and is not designed or intended for use by normal users.\n. From what I can tell, the \"Microsoft SSH Server\" is just something installed when developer mode is turned and is not related to the \"Windows Subsystem for Linux\" feature but I don't know for sure.\nI would need to do some testing to see when the service appears and such.\nBesides the pages I linked above, I couldn't find much on what this \"Microsoft SSH Server\" is.\nThere are however, many pages talking about the \"Windows Subsystem for Linux\" so I would imagine that if they were related, it would be more well known.\n. ",
    "clarity99": "manual mode is not enough, on my machine the service get somehow started even when set to manual. @DarwinJS I know of this, but it's not a good solution, as then I have to specify a different port for each command, unnecessary and annoying. In any case, just wanted to point out that one needs to actually disable the services, not just set them to manual, as they will be started in that case.. ",
    "FKasa": "\n\"Microsoft SSH Server\" doesn't support interactive scenarios, tunneling, SFTP/SCP, etc., and there are currently no plans to extend the \"Microsoft SSH Server\" to support anything except UWP deployment.\n\nIt would had been very helpful if I had read that instead of:\n\nPart of Microsoft SSH Server for Windows\n\non the service description. I was troubleshooting tunneling from both WSL and Git Bash for a few hours.\nI could get an interactive shell and successfully created some text files remotely so I just thought maybe I had the tunneling commands wrong.. ",
    "ylluminate": "The Microsoft SSH Server definitely needs to be running on another port instead of default 22 at first. That's pretty insane to be frank as it gives entirely wrong impressions.  It may also want to be renamed Microsoft UWP Conduit Server Broker and Microsoft UWP Conduit Server Proxy.  ESPECIALLY since these are just entirely irrelevant for anyone actually interested in SSH.  Big mistake on Microsoft's part in keeping SSH in the name.. So for those of us who are refugees of this misnomer battle field, can you please instruct us as to the \"proper\" way to install OpenSSH SSHD on Windows 10 that will be preserved going forward with the upcoming integration?  \nWould very much like to use OpenSSH properly now and to avoid issues coming up soon.. @DarwinJS disabling it is just a matter of going into services.msc and disabling two aforementioned services... I do wish there was a way to change the port, but it seems that MS has baked this punk in as far as testing requirements and I've not yet found a config file for this.. That's very nice to know. Appreciate your pointing over to that issue. Definitely need to know the \"right\" way to do this now with the imminent integration en route.. ",
    "Bravecold": "Thanks @marco-vaz I'm wondering about the arguments that require the function.- it's a great job, but please insert some documentation about, Synopsis and how to use please.. ",
    "robetus": "The installation has been updated but the auto install script has not. Can anyone tell me how to insert  these two steps into the attached script?:\npowershell -ExecutionPolicy Bypass -File install-sshd.ps1\nand\n.\\FixHostFilePermissions.ps1 -Confirm:$false\nmod-install-OpenSSH-Win32.txt\n. ",
    "Dantoniogarcia": "I opened power shell as an administrator and then the script worked correctly.  When looking at the code, I saw the exception it was throwing had to do with Account Privileges.  In your current powershell window run           Start-Process powershell -Verb runAs\nThis will open another window where you are running as an administrator.  Then you should be able to navigate to the directory where this script is located at and then run like .\\install-sshd.ps1. ",
    "iavael": "@DarwinJS ssh-add has nothing with keys distribution, it simply loads private ssh-keys from files in memory of local ssh-agent. And ssh-agent is not intended to run on remote servers, there's \"agent forwarding\" feature to this case, so there's no need to run ssh-add on remote systems too.\n. @manojampalam Usually it's considered as good practice to completely disable password auth on ssh so that brute force attacks wont apply. In case of your approach password auth would be required.\n. ",
    "nikolasd": "+1\n. ",
    "chuanjiao10": "my ssh-copy-id3.ps1\n```powershell\n<#\n\u811a\u672c\u76ee\u7684\uff1a\n\u4ecewin\u4e2d\u590d\u5236ssh\u516c\u94a5\uff0c\u5230\u76ee\u7684ssh\u670d\u52a1\u5668\u3002\n\u524d\u63d0\u6761\u4ef6\uff1a\ninstall-module winscp\n\u7528\u6cd5\uff1a\nssh-copy-id3.ps1 -\u76ee\u7684ip 1.2.3.4\n\u5efa\u8bae\u4fdd\u5b58\u7f16\u7801\u4e3a\uff1abom\u5934 + utf8\n>\nParam\n(\n    $\u76ee\u7684ip = '192.168.1.2'\n)\n\u5148\u8fd0\u884cssh-keygen\u56de\u8f66\uff0c\u4ea7\u751fkey\u6587\u4ef6\u3002https://github.com/PowerShell/Win32-OpenSSH/releases\n$key\u6587\u4ef61 = \"$env:USERPROFILE.ssh\\id_rsa.pub\"\n$key\u6587\u4ef62 = \"$env:USERPROFILE.ssh\\authorized_keys\"\nCopy-Item -LiteralPath $key\u6587\u4ef61  -Destination $key\u6587\u4ef62\n$\u7528\u6237\u540d = 'root'\n$\u7528\u6237\u5bc6\u7801\u660e\u6587 = '\u8fd9\u91cc\u586b\u5165\u4f60\u7684ssh\u5bc6\u7801\u660e\u6587\u3002'\n$\u7528\u6237\u5bc6\u7801\u5bc6\u6587 = ConvertTo-SecureString $\u7528\u6237\u5bc6\u7801\u660e\u6587 -AsPlainText -Force\n$\u6211\u7684\u767b\u9646\u51ed\u636e = New-Object System.Management.Automation.PSCredential ($\u7528\u6237\u540d,$\u7528\u6237\u5bc6\u7801\u5bc6\u6587)\nQQ\u7fa4\u53f7=183173532,\u540d\u79f0=powershell\u4ea4\u6d41\u7fa4\uff0c2018-12-26\n$sftp\u8fde\u63a5\u53c2\u6570 = new-WinSCPSessionOption -Protocol Sftp -HostName $\u76ee\u7684ip  -Credential  $\u6211\u7684\u767b\u9646\u51ed\u636e\n$\u6307\u7eb9 = Get-WinSCPHostKeyFingerprint -SessionOption $sftp\u8fde\u63a5\u53c2\u6570\n$sftp\u8fde\u63a5\u53c2\u6570.SshHostKeyFingerprint = $\u6307\u7eb9\n$sftp\u8fde\u63a5 = new-WinSCPSession -SessionOption $sftp\u8fde\u63a5\u53c2\u6570\nif (Test-WinSCPPath -Path '/root/.ssh' -WinSCPSession $sftp\u8fde\u63a5)\n{\n    Remove-WinSCPItem -Path '/root/.ssh' -Confirm:$false -WinSCPSession $sftp\u8fde\u63a5\n}\n$\u6743\u9650700 = New-WinSCPTransferOption -FilePermissions (New-WinSCPItemPermission -Octal 700)\nNew-WinSCPItem -Path '/root/.ssh' -ItemType Directory -TransferOptions  $\u6743\u9650700 -WinSCPSession $sftp\u8fde\u63a5\n$\u6743\u9650600 = New-WinSCPTransferOption -FilePermissions (New-WinSCPItemPermission -Octal 600)\nSend-WinSCPItem -LocalPath $key\u6587\u4ef62 -RemotePath '/root/.ssh/' -TransferOptions $\u6743\u9650600 -WinSCPSession $sftp\u8fde\u63a5\nRemove-WinSCPSession -WinSCPSession $sftp\u8fde\u63a5\n```. ",
    "Fitzroy87": "I regularly install packages supplied as MSUs remotely over WinRM. The trick is to extract the CAB from the MSU and use DISM.\nNot the most recent example - this is for WMF 3.0:\nc:\\windows\\system32\\dism.exe /online /add-package /PackagePath:C:\\Windows6.1-KB2506143-x64.cab /NoRestart\nSo would DISM be a viable option?\n. @bingbing8 The problem described occurs when connecting from a machine using the Win32-OpenSSH client to a machine running the Win32-OpenSSH server and then launching PowerShell (on the target machine).\nI don't think I have authority to reopen, so please can you do so.. ",
    "tocklime": "Nevermind, My Path included cygwin before C:\\Program Files\\OpenSSH-Win64, so I guess scp.exe was finding the wrong version of ssh.exe and choking. I've reordered the path and it's happy now.\n. @DarwinJS I did restart the shell. Rebooted too, in frustration. I'll add a feature request.\n. No, it did edit the Path variable fine (stuck the OpenSSH-Win64 directory on the end. I'm going to reopen this too, because I was wrong above - even editing the path, I'm still getting ssh.exe could not be started. I was accidentally running cygwin's scp.exe above, when I thought it was working.\nThe machine I'm having trouble on is Windows Web Server 2008 R2. It's 64 bit. This is the path (I moved the OpenSSH-Win64 directory up to the front, but it didn't fix anything)\nPS C:\\Users\\Administrator> $env:Path\n%SystemRoot%\\system32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\OpenSSH-Win64;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Win\ndows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Program Files\\Microsoft Windows Performance Toolkit\\;C:\\Program Fi\nles\\Microsoft SQL Server\\110\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft ASP.NET\\ASP.NET Web Pages\\v1.0\\;C:\\Program Fi\nles\\TortoiseHg\\;C:\\Program Files\\Microsoft\\Web Platform Installer\\;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windo\nws\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Git\\cmd;C:\\ProgramData\\chocolatey\\bin;\n. I found out powershell's equivalent of which:\n```\nPS C:\\Users\\Administrator> get-command ssh |Format-Table Path, Name\nPath                                                        Name\n----                                                        ----\nC:\\Program Files\\OpenSSH-Win64\\ssh.exe                      ssh.exe\nPS C:\\Users\\Administrator> get-command scp |Format-Table Path, Name\nPath                                                        Name\n----                                                        ----\nC:\\Program Files\\OpenSSH-Win64\\scp.exe                      scp.exe\nPS C:\\Users\\Administrator> scp test example.com:test\n./ssh.exe could not be started\n```\n. I've just installed it on my desktop (also via chocolatey), and am getting very similar results.\n. yes, ssh.exe always works for me too. it's scp that doesn't.\n. ~~Looking at the code:~~\n~~https://github.com/PowerShell/Win32-OpenSSH/blob/L1-Prod/scp.c#L915~~\n~~I'm unfamiliar with the code base, but it looks like scp.exe's call to ssh.exe is not passing in the environment (3rd argument to start_process_io is NULL) - perhaps that's why?~~\n(I think it inherits env from parent)\nNot discounting the 'my machine is set up weird' scenario, just thought I'd look at the code and that seemed odd. Does scp.exe work for you, @DarwinJS?\n. scp with no command gives me the help, whether I'm in the OpenSSH-Win64 directory or not. scp actually trying to copy a file works if i'm in the directory, but not otherwise. I get the exact same behaviour on the machine I'm remoted into and my desktop.\npowershell\nPS C:\\Program Files\\OpenSSH-Win64> scp\nusage: scp [-12346BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file]\n           [-l limit] [-o ssh_option] [-P port] [-S program]\n           [[user@]host1:]file1 ... [[user@]host2:]file2\nPS C:\\Program Files\\OpenSSH-Win64> scp a example:b\nssh.exe: Could not resolve hostname example: No such host is known.\nlost connection\nPS C:\\Program Files\\OpenSSH-Win64> cd ..\nPS C:\\Program Files> scp\nusage: scp [-12346BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file]\n           [-l limit] [-o ssh_option] [-P port] [-S program]\n           [[user@]host1:]file1 ... [[user@]host2:]file2\nPS C:\\Program Files> scp a example:b\n./ssh.exe could not be started\n. It looks like something in the code is defining ssh_program to be ./ssh.exe (though I can't see where), with the ./  which means windows doens't check the path. sftp.exe has a very similar problem: (I remembered about -v):\n``` powershell\nPS C:\\Program Files> sftp\nusage: C:\\Program Files\\OpenSSH-Win64\\sftp.exe [-1246aCfpqrv] [-B buffer_size] [-b batchfile] [-c cipher]\n          [-D sftp_server_path] [-F ssh_config] [-i identity_file] [-l limit]\n          [-o ssh_option] [-P port] [-R num_requests] [-S program]\n          [-s subsystem | sftp_server] host\n       C:\\Program Files\\OpenSSH-Win64\\sftp.exe [user@]host[:file ...]\n       C:\\Program Files\\OpenSSH-Win64\\sftp.exe [user@]host[:dir[/]]\n       C:\\Program Files\\OpenSSH-Win64\\sftp.exe -b batchfile [user@]host\nPS C:\\Program Files> sftp -v a example:b\ndebug1: pipe - read end: handle:00000000000000A4, io:00000000003F8990, fd:3\ndebug1: pipe - write end: handle:00000000000000A8, io:00000000003F8A40, fd:4\ndebug1: pipe - read end: handle:00000000000000AC, io:00000000003F8AF0, fd:5\ndebug1: pipe - write end: handle:00000000000000B0, io:00000000003F8BA0, fd:6\ndebug1: Executing ssh client: \"./ssh.exe -oForwardX11=no -oForwardAgent=no -oPermitLocalCommand=no -oClearAllForwardings\n=yes -v -oProtocol=2 -s -- a sftp\"...\nfork: No such file or directory\nPS C:\\Program Files> cd .\\OpenSSH-Win64\nPS C:\\Program Files\\OpenSSH-Win64> sftp -v a example:b\ndebug1: pipe - read end: handle:00000000000000A4, io:00000000003E8990, fd:3\ndebug1: pipe - write end: handle:00000000000000A8, io:00000000003E8A40, fd:4\ndebug1: pipe - read end: handle:00000000000000AC, io:00000000003E8AF0, fd:5\ndebug1: pipe - write end: handle:00000000000000B0, io:00000000003E8BA0, fd:6\ndebug1: Executing ssh client: \"./ssh.exe -oForwardX11=no -oForwardAgent=no -oPermitLocalCommand=no -oClearAllForwardings\n=yes -v -oProtocol=2 -s -- a sftp\"...\ndebug1: Register child 00000000000000B8 pid 4536, 0 zombies of 0\ndebug1: close - io:00000000003E8AF0, type:2, fd:5, table_index:5\ndebug1: close - io:00000000003E8A40, type:2, fd:4, table_index:4\nOpenSSH_7.1p1 Microsoft_Win32_port_with_VS, OpenSSL 1.0.2d 9 Jul 2015\ndebug1: Reading configuration data C:\\Users\\Administrator/.ssh/config\nssh.exe: Could not resolve hostname a: No such host is known.\nConnection closed\n``\n. looks like_PATH_SSH_PROGRAMis set to./ssh.exe` here: https://github.com/PowerShell/Win32-OpenSSH/blob/69be768f2eada42792ccf9d23819a84f29e4b877/contrib/win32/openssh/config.h.vs#L1728\nWhich leaves me wondering how this works for anyone.\n. ",
    "bluekeys": "To confirm, scp works for me only if I run it from C:\\Program Files\\OpenSSH-Win64\n. @Kinokkory, @mikemaccana, @manojampalam, @kobeyu\nThis is now working for me. I upgraded to the latest version 0.0.4.0 using choco \nchoco update openssh (in an administrator terminal)\nThanks for the update.. ",
    "shiatsumat": "I got the same experience as @bluekeys and @mikemaccana (although PATH is correctly set), but I found that by adding a command line option \"-S C:\\Progra~1\\OpenSSH-Win64\\ssh.exe\" it works. I'm not sure what it means.. ",
    "niemyjski": "Is this coming in 1.1?. We use it to proxy ssh commands over a jump box\nHost test-data0\n    User test\n    IdentityFile ~/.ssh/test\n    Hostname 10.0.0.6\n    ProxyCommand ssh -q -W %h:%p test-kibana. ",
    "kcking": "We use ProxyCommand in Krypton to read signatures returned from the server and verify them on the phone. This feature would bring us much closer to full Windows support.\nI believe OpenSSH just uses stdin/stdout to make this happen (though I'm not sure how this maps to Windows) and there aren't any domain sockets are involved. For @niemyjski's example, ssh test-data0 first spins up ssh -q -W %h:%p test-kibana as a subprocess, where %h:%p becomes 10.0.0.6:22. Then the parent ssh test-data0 process routes outgoing traffic to stdin of the child process instead of sending it over the network. The end result is that an ssh handshake happens between ssh test-kibana and the test-kibana server, then a second ssh handshake happens between ssh test-data0 and 10.0.0.6 through the first ssh session.\nWe have some documentation on ProxyCommand that might be worth a read (it's not Krypton-specific).. Check out the ssh_proxy_connect function here. This creates the proxycommand subprocess and redirects the traffic of the parent process' connection through the subprocess' stdin/stdout (using pin and pout).\nI have implemented a proxycommand before in Go (krssh) and am happy to help with advice/code over here if you like.. @manojampalam could you post the source code on a branch? Would love to check it out!. Thanks for the quick turnaround! I just tried the changes -- I get one error for ProxyCommand and a different one for ProxyJump\nI tested ProxyCommand with ProxyCommand nc64.exe %h %p set in my ssh config and using the netcat at https://eternallybored.org/misc/netcat/\nI get the following error when running ssh me.krypt.co:\nPS C:\\Users\\Kevin\\Downloads> .\\ssh.exe -vvv me.krypt.co\nOpenSSH_7.6p1, LibreSSL 2.6.2\ndebug1: Reading configuration data C:\\\\Users\\\\Kevin/.ssh/config\ndebug1: C:\\\\Users\\\\Kevin/.ssh/config line 1: Applying options for *\ndebug3: Failed to open file:C:\\\\ProgramData\\\\ssh/ssh_config error:2\ndebug1: Executing proxy command: exec C:\\\\Users\\\\Kevin\\\\Downloads\\\\netcat-win32-1.12\\\\nc64.exe me.krypt.co 22\ndebug3: spawning C:\\\\Users\\\\Kevin\\\\Downloads\\\\netcat-win32-1.12\\\\nc64.exe me.krypt.co 22\ndebug3: w32_getpeername ERROR: not sock :2\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_rsa error:2\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_rsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\Kevin/.ssh/id_rsa type -1\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_rsa-cert error:2\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_rsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\Kevin/.ssh/id_rsa-cert type -1\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_dsa error:2\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_dsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\Kevin/.ssh/id_dsa type -1\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_dsa-cert error:2\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_dsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\Kevin/.ssh/id_dsa-cert type -1\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_ecdsa error:2\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_ecdsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\Kevin/.ssh/id_ecdsa type -1\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_ecdsa-cert error:2\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_ecdsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\Kevin/.ssh/id_ecdsa-cert type -1\ndebug1: identity file C:\\\\Users\\\\Kevin/.ssh/id_ed25519 type 3\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_ed25519-cert error:2\ndebug3: Failed to open file:C:\\\\Users\\\\Kevin/.ssh/id_ed25519-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\Kevin/.ssh/id_ed25519-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_7.6\nWith ssh me.krypt.co and ProxyJump test.com in my ssh config, I get the following error: Bad stdio forwarding specification ''[me.krypt.co]:22'' which seems to come from https://github.com/PowerShell/Win32-OpenSSH/blame/d6ce465b1528802b38ec7ececabc7755cc1b89eb/ssh.c#L800 . The first issue I see is the line:\ndebug3: w32_getpeername ERROR: not sock :2\nbut I haven't had a chance to dig into how significant it might be or where that comes from. Currently the ssh session just hangs at that last line.\nnc, or netcat actually is exactly the app you mentioned. It links stdin/stdout with the host/port in the arguments. This means that the ssh config line ProxyCommand nc64.exe %h %p is basically a no-op proxy command that passes all traffic to the same destination but throught netcat.\nLet me know if there's anything else I can do to help debug!. Confirmed, it works with our proxy! (Just took me a bit to build it on windows). ",
    "lfourquaux": "@manojampalam: You are missing something: ProxyCommand can be used in 2 different ways.\nThe default, and older, use of ProxyCommand uses a subprocess that communicates using stdin/stdout.  It would not be too difficult to implement using common Win32 APIs.\nWhen ProxyUseFdpass is set to true, in addition to ProxyCommand, the helper command is expected to use fd passing with ancillary data.  This can be more efficient, but is less portable (even to different Unices).  This would certainly be harder to implement, and I would suggest to wait and see how the Windows AF_UNIX implementation evolves.  This comment:\nhttps://blogs.msdn.microsoft.com/commandline/2017/12/19/af_unix-comes-to-windows/#comment-40465\nsuggests that fd passing is \"on the radar\".\nHere are some relevant quotes from \"man ssh_config\":\n\n ProxyCommand\n         Specifies the command to use to connect to the server.  The com\u2010\n         mand string extends to the end of the line, and is executed using\n         the user's shell \u2018exec\u2019 directive to avoid a lingering shell\n         process.\n\n         Arguments to ProxyCommand accept the tokens described in the\n         TOKENS section.  The command can be basically anything, and\n         should read from its standard input and write to its standard\n         output.  It should eventually connect an sshd(8) server running\n         on some machine, or execute sshd -i somewhere.  Host key manage\u2010\n         ment will be done using the HostName of the host being connected\n         (defaulting to the name typed by the user).  Setting the command\n         to none disables this option entirely.  Note that CheckHostIP is\n         not available for connects with a proxy command.\n\n         This directive is useful in conjunction with nc(1) and its proxy\n         support.  For example, the following directive would connect via\n         an HTTP proxy at 192.0.2.0:\n\n            ProxyCommand /usr/bin/nc -X connect -x 192.0.2.0:8080 %h %p\n\n[snip]\n     ProxyUseFdpass\n             Specifies that ProxyCommand will pass a connected file descriptor\n             back to ssh(1) instead of continuing to execute and pass data.\n             The default is no.. \n",
    "laurin1": "Ok, so I had to add NT SERVICE\\SSHD to Administrators and now this file is being updated:\nC:\\Program Files\\OpenSSH-Win64\\sshd.log\nBut this file, while locked open by the process and the modification date is changing, is still 0 bytes\nC:\\Program Files\\OpenSSH-Win64\\sftp-server.log\n. ",
    "PaulHigin": "Closing as this is a duplicate of #350 \n. My concern is that, since the name is static and known, someone can create bogus pipes with these names and disable key agent functions (DOS), while possibly allowing information disclosure.  If this is not possible can you please explain why?\n. @discodance1 I have not been able to repro this.  Take a closer look at the error record you get.  It should contain an Exception property which should have an InnerException property.  The InnerException will likely provide more detailed information on the error.  . To examine the error more closely I do the following:\n```powershell\nPS /> $err = $error[0]                               # Save the most recent error\nPS /> $err.Exception                                 # See the exception message\nPS /> $err.Exception.GetType()                 # See the exception type\nPS /> $err.Exception.InnerException         # See the inner exception (this usually has more info if available)\nPS /> $err.Exception.InnerException.InnerException  # Sometimes there are three levels\n. It looks like test.ps1 is in a non-accessible location given your credentials.  Try putting test.ps1 in an accessible location like $home.  This works for me:powershell\nPS C:> '1..10 | % { \"Output $_\" }' > $home\\test.ps1\nPS C:> & \"$home\\test.ps1\"\nOutput 1\nOutput 2\n...\n```. Did you copy test.ps1 from a remote location?  If so then PowerShell will not run it if ExecutionPolicy is set to \"RemoteSigned\".  You can either sign it or use Unblock-File on it to indicate that it is trusted.. In that case I don't know.  I can't repro it.  I can run SSH from Linux (Ubuntu 14) to Windows 10 having latest Win32Open-SSH, using a local non-Admin account, run PowerShell, and create and run scripts in my $home directory.. @fpqc - Yes I see the same thing.  Please open an issue.. Unfortunately I am not able to repro the problem so cannot investigate it.  You can try clearly summarizing your repro conditions so that someone is able to reproduce the problem.  But I have not been able to see the behavior you describe.. @MaximoTrinidad This looks like SSH host key revocation error.  PowerShell includes the SSH error message text in its error but it looks like it is not including the entire SSH error message and is likely a bug in PowerShell SSH remoting (I'll create an issue on PowerShell github).\nThis happens to me anytime I install a new version of Win32-OpenSSH on my host machine, and generate new host keys.  You can repro it by deleting your existing host keys and creating new ones (ssh-keygen.exe -A).\nTo fix this you need to edit the known_hosts file (I just delete mine) to remove the old host key on your client machine (c:\\Users\\.ssh\\known_hosts).  After you do this SSH will ask you to re-verify the host identity using the ECDSA key fingerprint.. FYI the entire error message should look like this\npowershell\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\nThe fingerprint for the ECDSA key sent by the remote host is\nSHA256:Etb4yw1QyVJnP4eGKdvOG/xPy9F5rKEw+Xk02wXmJGU.\nPlease contact your system administrator.\nAdd correct host key in C:\\\\Users\\\\UserName/.ssh/known_hosts to get rid of this message.\nOffending ECDSA key in C:\\\\Users\\\\UserName/.ssh/known_hosts:1\nECDSA host key for LocalComputerName has changed and you have requested strict checking.\nHost key verification failed.. Hi @MaximoTrinidad, it doesn't matter which direction the connection is made.  This error message (of which only part is reported by PowerShell remoting) means that the SSH host keys no longer work and that you need to update the known_hosts file on the client appropriately.  For a Linux client you should be able to find the file at /home/max_t/.ssh/.. You can still use either host name or IP address for establishing an SSH connection.  The problem above is that \"earth2\" host name is recorded in the known_hosts file and is using older non-matching host keys.  When you use the IP address SSH creates a new entry in the known_hosts file with the correct host keys.  In order to get \"earth2\" host name working again you need to delete that entry out of the known_hosts file (or just delete the known_hosts file) and let SSH re-verify that the host name and fingerprint is correct for earth2 host name.\nNote that this is SSH and not PowerShell.  PowerShell is using SSH to establish the connection and as a transport for remoting, and this is standard SSH behavior.. I am sorry you are having so much trouble with this.  The whole SSH error message includes the actual location of the known_hosts file affected, and it may be that you are modifying or removing the wrong file.  A good reason why we need to get this fixed in PowerShell.  But a workaround is to attempt the connection with SSH, so that you get the complete error message:\npowershell\nPS > ssh max_t@earth2\nThis is equivalent to what PowerShell does when establishing the SSH connection and should return the same error but with the complete error message, and identify the host key and file affected by the error.. I don't think this is PowerShell but Open-SSH starting the powershell.exe in session 0 (non-interactive session).  I am not sure how to do this via Windows API, and may not be possible for security reasons since ssh is hosting a remote connection.. You can make powershell.exe read from stdin by starting it with: \"powershell.exe -\". ",
    "dermeister0": "Far Manager\nNothing works.\n\n. Nano\nCursor keys do not work.\n\n. Far Manager\nNothing works.\n\n. I recorded videos.\nSee how Far Manager works in freeSSHd:\nhttps://www.screencast.com/t/epouO79I\nThat's how it looks in Win32-OpenSSH v0.0.4:\nhttps://www.screencast.com/t/5s77aSTWAGTm\nThe same in Win32-OpenSSH v0.0.7:\nhttps://www.screencast.com/t/fVdyzYKf\n. I installed Win32-OpenSSH v7.7.1.0p1-Beta to server.\nFar Manager is not displayed correctly in OpenSSH client (Windows 10 1803).\n\nSimilar bugs in Putty.. I'm frustrated by Win32-OpenSSH too. It has problems with simple configs and does not write enough info to logs. However, I was able to fix pubkey authentication when removed some unwanted inherited permissions.\n@vovcacik \nAre you sure that the service runs under sshd user? It's Local System in my case.\n. Error log is misleading. I had following messages in log:\n3008 2018-08-07 01:15:00.114 Accepted password for anton from 192.168.11.12 port 50833 ssh2\n2368 2018-08-07 01:15:00.294 Received disconnect from 192.168.11.12 port 50833:11: disconnected by user\n2368 2018-08-07 01:15:00.294 Disconnected from 192.168.11.12 port 50833\nActually path to PowerShell Core was wrong on server.. @bagajjal \nI enabled DEBUG3 log level and it shows the error:\n4688 2018-08-07 19:05:10.654 debug2: subsystem request for powershell by user domain\\\\anton\n4688 2018-08-07 19:05:10.654 debug1: subsystem: cannot stat c:\\\\pwsh5\\\\pwsh.exe: No such file or directory\n4688 2018-08-07 19:05:10.654 debug1: subsystem: exec() c:\\\\pwsh5\\\\pwsh.exe -sshs -NoLogo -NoProfile\n4740 2018-08-07 19:05:10.544 Accepted password for anton from 192.168.11.12 port 50446 ssh2\n4740 2018-08-07 19:05:10.544 debug1: monitor_child_preauth: anton has been authenticated by privileged process\n4740 2018-08-07 19:05:10.544 debug3: mm_get_keystate: Waiting for new keys\n4740 2018-08-07 19:05:10.544 debug3: mm_request_receive_expect entering: type 26\n4740 2018-08-07 19:05:10.544 debug3: mm_request_receive entering\n4740 2018-08-07 19:05:10.544 debug3: mm_get_keystate: GOT new keys\n4740 2018-08-07 19:05:10.544 debug3: mm_auth_password: waiting for MONITOR_ANS_AUTHPASSWORD [preauth]\n4740 2018-08-07 19:05:10.544 debug3: mm_request_receive_expect entering: type 13 [preauth]\n4740 2018-08-07 19:05:10.544 debug3: mm_request_receive entering [preauth]\n4740 2018-08-07 19:05:10.544 debug3: mm_auth_password: user authenticated [preauth]\n4740 2018-08-07 19:05:10.544 debug3: send packet: type 52 [preauth]\n4740 2018-08-07 19:05:10.544 debug3: mm_request_send entering: type 26 [preauth]\n4740 2018-08-07 19:05:10.544 debug3: mm_send_keystate: Finished sending state [preauth]\n4740 2018-08-07 19:05:10.544 debug1: monitor_read_log: child log fd closed\n4740 2018-08-07 19:05:10.544 debug3: spawning \"C:\\\\Program Files\\\\OpenSSH\\\\OpenSSH-Win64\\\\sshd.exe\" \"-z\"\n4740 2018-08-07 19:05:10.591 User child is on pid 4688\n4740 2018-08-07 19:05:10.591 debug3: send_rexec_state: entering fd = 5 config len 255\n4740 2018-08-07 19:05:10.591 debug3: ssh_msg_send: type 0\n4740 2018-08-07 19:05:10.607 debug3: send_rexec_state: done\n4740 2018-08-07 19:05:10.607 debug3: ssh_msg_send: type 0\n4740 2018-08-07 19:05:10.607 debug3: ssh_msg_send: type 0\n4688 2018-08-07 19:05:10.607 debug3: ssh_msg_recv entering\n4688 2018-08-07 19:05:10.607 debug2: fd 4 setting O_NONBLOCK\n4688 2018-08-07 19:05:10.607 debug2: parse_server_config: config reprocess config len 255\n4740 2018-08-07 19:05:10.607 debug3: ssh_msg_send: type 0\n4688 2018-08-07 19:05:10.607 debug3: ssh_msg_recv entering\n4688 2018-08-07 19:05:10.607 debug3: monitor_apply_keystate: packet_set_state\n4688 2018-08-07 19:05:10.607 debug2: set_newkeys: mode 0\n4688 2018-08-07 19:05:10.607 debug1: rekey after 134217728 blocks\n4688 2018-08-07 19:05:10.607 debug2: set_newkeys: mode 1\n4688 2018-08-07 19:05:10.607 debug1: rekey after 134217728 blocks\n4688 2018-08-07 19:05:10.607 debug1: ssh_packet_set_postauth: called\n4688 2018-08-07 19:05:10.607 debug3: ssh_packet_set_state: done\n4688 2018-08-07 19:05:10.607 debug3: notify_hostkeys: key 0: ssh-rsa SHA256:s8Z3BoG5bZTHxCgA3IOrUeYK9XpRDkuFyCvRkjjB2NU\n4688 2018-08-07 19:05:10.607 debug3: notify_hostkeys: key 1: ecdsa-sha2-nistp256 SHA256:LjsYblKkKkaidWJBpSuL+PivLoMU0CBD9Nv0lIqznwU\n4688 2018-08-07 19:05:10.607 debug3: notify_hostkeys: key 2: ssh-ed25519 SHA256:tCxC7+Mqje2RLPUF+ftCIuwGQCH3u6+57imIDMG4x7c\n4688 2018-08-07 19:05:10.607 debug3: notify_hostkeys: sent 3 hostkeys\n4688 2018-08-07 19:05:10.607 debug3: send packet: type 80\n4688 2018-08-07 19:05:10.623 debug1: active: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\n4688 2018-08-07 19:05:10.623 debug1: Entering interactive session for SSH2.\n4688 2018-08-07 19:05:10.623 debug2: fd 7 setting O_NONBLOCK\n4688 2018-08-07 19:05:10.623 debug2: fd 8 setting O_NONBLOCK\n4688 2018-08-07 19:05:10.623 debug1: server_init_dispatch\n4688 2018-08-07 19:05:10.623 debug3: receive packet: type 90\n4688 2018-08-07 19:05:10.623 debug1: server_input_channel_open: ctype session rchan 0 win 2097152 max 32768\n4688 2018-08-07 19:05:10.623 debug1: input_session_request\n4688 2018-08-07 19:05:10.623 debug1: channel 0: new [server-session]\n4688 2018-08-07 19:05:10.623 debug2: session_new: allocate (allocated 0 max 10)\n4688 2018-08-07 19:05:10.623 debug3: session_unused: session id 0 unused\n4688 2018-08-07 19:05:10.623 debug1: session_new: session 0\n4688 2018-08-07 19:05:10.623 debug1: session_open: channel 0\n4688 2018-08-07 19:05:10.623 debug1: session_open: session 0: link with channel 0\n4688 2018-08-07 19:05:10.623 debug1: server_input_channel_open: confirm session\n4688 2018-08-07 19:05:10.623 debug3: send packet: type 91\n4688 2018-08-07 19:05:10.623 debug3: receive packet: type 80\n4688 2018-08-07 19:05:10.623 debug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\n4688 2018-08-07 19:05:10.654 debug3: receive packet: type 98\n4688 2018-08-07 19:05:10.654 debug1: server_input_channel_req: channel 0 request subsystem reply 1\n4688 2018-08-07 19:05:10.654 debug1: session_by_channel: session 0 channel 0\n4688 2018-08-07 19:05:10.654 debug1: session_input_channel_req: session 0 req subsystem\n4688 2018-08-07 19:05:10.654 debug2: subsystem request for powershell by user domain\\\\anton\n4688 2018-08-07 19:05:10.654 debug1: subsystem: cannot stat c:\\\\pwsh5\\\\pwsh.exe: No such file or directory\n4688 2018-08-07 19:05:10.654 debug1: subsystem: exec() c:\\\\pwsh5\\\\pwsh.exe -sshs -NoLogo -NoProfile\n4688 2018-08-07 19:05:10.654 Starting session: subsystem 'powershell' for domain\\\\anton from 192.168.11.12 port 50446 id 0\n4688 2018-08-07 19:05:10.654 debug2: fd 9 setting O_NONBLOCK\n4688 2018-08-07 19:05:10.654 debug2: fd 10 setting O_NONBLOCK\n4688 2018-08-07 19:05:10.654 debug2: fd 11 setting O_NONBLOCK\n4688 2018-08-07 19:05:10.654 debug2: fd 12 setting O_NONBLOCK\n4688 2018-08-07 19:05:10.654 debug2: fd 13 setting O_NONBLOCK\n4688 2018-08-07 19:05:10.654 debug2: fd 14 setting O_NONBLOCK\n4688 2018-08-07 19:05:10.654 debug1: Executing command: \"c:\\\\windows\\\\system32\\\\cmd.exe\" /c c:\\\\pwsh5\\\\pwsh.exe -sshs -NoLogo -NoProfile\n4688 2018-08-07 19:05:10.712 debug2: fd 4 setting TCP_NODELAY\n4688 2018-08-07 19:05:10.712 debug3: fd 11 is O_NONBLOCK\n4688 2018-08-07 19:05:10.712 debug3: fd 10 is O_NONBLOCK\n4688 2018-08-07 19:05:10.712 debug3: fd 13 is O_NONBLOCK\n4688 2018-08-07 19:05:10.712 debug3: send packet: type 99\n4688 2018-08-07 19:05:10.748 debug2: channel 0: read 44 from efd 13\n4688 2018-08-07 19:05:10.748 debug3: channel 0: discard efd\n4688 2018-08-07 19:05:10.748 debug3: ReadFileEx() ERROR:109, io:00000204766E4470\n4688 2018-08-07 19:05:10.748 debug1: Received SIGCHLD.\n4688 2018-08-07 19:05:10.748 debug1: session_by_pid: pid 4676\n4688 2018-08-07 19:05:10.748 debug1: session_exit_message: session 0 channel 0 pid 4676\n4688 2018-08-07 19:05:10.748 debug2: channel 0: request exit-status confirm 0\n4688 2018-08-07 19:05:10.748 debug3: send packet: type 98\n4688 2018-08-07 19:05:10.748 debug1: session_exit_message: release channel 0\n4688 2018-08-07 19:05:10.748 debug2: channel 0: write failed\n4688 2018-08-07 19:05:10.748 debug2: channel 0: close_write\n4688 2018-08-07 19:05:10.748 debug2: channel 0: send eow\n4688 2018-08-07 19:05:10.748 debug2: channel 0: output open -> closed\n4688 2018-08-07 19:05:10.748 debug2: channel 0: read 0 from efd 13\n4688 2018-08-07 19:05:10.748 debug2: channel 0: closing read-efd 13\n4688 2018-08-07 19:05:10.748 debug2: notify_done: reading\n4688 2018-08-07 19:05:10.748 debug2: channel 0: read<=0 rfd 11 len 0\n4688 2018-08-07 19:05:10.748 debug2: channel 0: read failed\n4688 2018-08-07 19:05:10.748 debug2: channel 0: close_read\n4688 2018-08-07 19:05:10.748 debug2: channel 0: input open -> drain\n4688 2018-08-07 19:05:10.748 debug2: channel 0: ibuf empty\n4688 2018-08-07 19:05:10.748 debug2: channel 0: send eof\n4688 2018-08-07 19:05:10.748 debug3: send packet: type 96\n4688 2018-08-07 19:05:10.748 debug2: channel 0: input drain -> closed\n4688 2018-08-07 19:05:10.748 debug2: channel 0: send close\n4688 2018-08-07 19:05:10.748 debug3: send packet: type 97\n4688 2018-08-07 19:05:10.748 debug3: channel 0: will not send data after close\n4688 2018-08-07 19:05:10.748 debug3: channel 0: will not send data after close\n4688 2018-08-07 19:05:10.748 debug3: receive packet: type 97\n4688 2018-08-07 19:05:10.748 debug2: channel 0: rcvd close\n4688 2018-08-07 19:05:10.748 debug3: channel 0: will not send data after close\n4688 2018-08-07 19:05:10.748 debug2: channel 0: is dead\n4688 2018-08-07 19:05:10.748 debug2: channel 0: gc: notify user\n4688 2018-08-07 19:05:10.748 debug1: session_by_channel: session 0 channel 0\n4688 2018-08-07 19:05:10.748 debug1: session_close_by_channel: channel 0 child 0\n4688 2018-08-07 19:05:10.748 Close session: user domain\\\\anton from 192.168.11.12 port 50446 id 0\n4688 2018-08-07 19:05:10.748 debug3: session_unused: session id 0 unused\n4688 2018-08-07 19:05:10.748 debug2: channel 0: gc: user detached\n4688 2018-08-07 19:05:10.748 debug2: channel 0: is dead\n4688 2018-08-07 19:05:10.748 debug2: channel 0: garbage collecting\n4688 2018-08-07 19:05:10.748 debug1: channel 0: free: server-session, nchannels 1\n4688 2018-08-07 19:05:10.748 debug3: channel 0: status: The following connections are open:\\r\\n  #0 server-session (t4 r0 i3/0 o3/0 fd -1/-1 cc -1)\\r\\n\n4688 2018-08-07 19:05:10.748 debug3: receive packet: type 1\n4688 2018-08-07 19:05:10.748 Received disconnect from 192.168.11.12 port 50446:11: disconnected by user\n4688 2018-08-07 19:05:10.748 Disconnected from 192.168.11.12 port 50446\n4688 2018-08-07 19:05:10.748 debug1: do_cleanup\n4740 2018-08-07 19:05:10.748 debug3: mm_request_receive entering\n4740 2018-08-07 19:05:10.748 debug1: do_cleanup\nHowever, the error is not displayed with INFO log level. It says \"disconnected by user\" which is wrong, I think.. @JW0914 \nThe sshd service created by install-sshd.ps1 runs under Local System account. Possibly the sshd user is not used.\nThat's why we need to grant permissions to Administrators group.\nOpenSSH_for_Windows_7.7p1, LibreSSL 2.6.4. ",
    "havoc-io": "Can you clarify what you mean by\n\nThere is no synchronization associated with this endpoint, a squatting attack is not applicable.\n\nCouldn't someone hypothetically sit on \\\\.\\pipe\\ssh-agent and invoke ImpersonateNamedPipeClient when a client connects and then perform actions as the client user (\"Superfluous Pipe Connectivity\" is the term I think)?  Since the CreateFile call doesn't specify SQOS information, it seems like SECURITY_IMPERSONATION would be the default setting for all clients connecting to the agent.\n. Have you tried invoking the command with sshd in debug mode?  I had the same problem with the latest release, but for some reason things seem to work when the server is in debug mode (although you can only run a single command at that point).  Perhaps there is something in the forking (or equivalent) that sshd does that is killing things?\n. ",
    "mikedld": "I have the same issue. Just installed Win32-OpenSSH (so, v0.0.1.0), not sure how to check powershell version but it's the one bundled with Windows 10 with all the updates installed.\nIn addition to the above, I've noticed this:\n```\nC:\\Users\\mikedld>powershell\nC:\\Users\\mikedld>echo %errorlevel%\n-1073741502\n```\nGetting same errorlevel value when trying to run e.g. Far Manager or cl.\nHere -1073741502 is 0xc0000142 which appears to be \"The application failed to initialize properly\".\n. Okay, I fixed the issue. It appears that Windows 10 now includes two new services: \"SSH Server Proxy\" and \"SSH Server Broker\", both described as \"Part of Microsoft SSH Server for Windows\". When I thought I was connecting to OpenSSH I was in fact connecting to this built-in SSH service. I noticed that sshd service wasn't running, so I stopped those built-in services and then started sshd. Far Manager still isn't usable (some drawing and keys handling issues), but at least I'm seeing output of other commands just fine.\n. ",
    "pivotal-jbarrett": "Power shell is meant as just an example of and executable that fails to get output. We are using poweshell 5.\nEffectively it's anything that is sent in as a command in non-interactive mode that does not get output. If you run the same commands in interactive mode they work just fine.\n. SSH 0.0.1.0\n. I am experiencing the same issue with AWS images I am building. I am able to get the key authentication to work only after interactive login, WinRm authentication, or password based ssh login. In fact, any of those authentication modes can be just an attempt with the wrong password and suddenly the key base authentication starts working. I have scripted a \"knock\" by simply trying ssh password authentication with a bogus password. It is not ideal but it works for now.. @Pixelkracht have you looked at #727 ?. @natalieparellano see #727. ",
    "robolivable": "Just out of curiosity, are the dates on the Disqus comments on that page accurate? Seems strange that there are four year old comments when the oldest package version is only about a month old...\n. ",
    "eperede": "I was still trying some more things and wanted to share:\nssh.exe works fine. \nD:\\Users\\u55XXXX>ssh ciri1.sap.XXX.XXX.XXX\nAuthorized uses only. All activity may be monitored and reported.\nu55XXXX@ciri1.sap.XXX.XXX.XXX's password:\nscp.exe fails as well if you do not enter the directory where it's installed. \nD:\\Users\\u55XXXX>scp iak@ciri1.sap.XXX.XXX.XXX:test.txt c:\\\n./ssh.exe could not be started\nD:\\Users\\u55XXXX>\nIf you enter the directory of openssh then scp works as well.\nThe whole story happens with v0.0.1.0 .\n. ",
    "cristeab": "Also, symbolic links are not followed (not sure if this is a completely different issue)\n. I have forgot to mention, all binaries are installed on drive E:, but still only C: is visible\n. The git clone command does not seem to work even when I move the repository on C: drive\n. ",
    "mikhirev": "\nYour \"start-service sshd\" command above does not look like it is a remoted prompt into a Nano machine?\n\nIt is docker run -i mytestimage powershell. I also tried to enable sshd service similar to ssh-agent in dockerfile, but it does not start anyway.\n. > Yes - I believe the docker file I referenced will get you around the service not starting as it grants it appropriate permissions.\nYes, you are right. Unfortunatly this does not solve the main problem \u2014 I still can't login. There's also wrong path to sftp-server.exe in sshd_config.\nI figured out that default user inside containers is not Administrator but ContainerAdministrator, so I put authorized_keys into /users/containeradministrator/.ssh and tried running ssh ContainerAdministrator@<container IP>. I also tried ssh 'User Manager\\ContainerAdministrator@<container IP>'. Anyway I get a password prompt.\n. ",
    "erik-am": "@mikhirev I'm facing the same issue. In my container I ran sshd -d and increased the log level to find the following log information:\n```\ndebug1: userauth-request for user ContainerAdministrator service ssh-connection method none\ndebug1: attempt 0 failures 0\ndebug1: NetUserGetInfo() failed with error: 2221 for user: ContainerAdministrator and domain: (null)\nDsGetDcNameW() failed with error: 1355\nInvalid user ContainerAdministrator from 10.3.52.61 port 3192\nFailed none for invalid user ContainerAdministrator from 10.3.52.61 port 3192 ssh2\ndebug1: userauth-request for user ContainerAdministrator service ssh-connection method publickey\ndebug1: attempt 1 failures 0\nFailed publickey for invalid user ContainerAdministrator from 10.3.52.61 port 3192 ssh2\n```\nSo it cannot find user ContainerAdministrator. \ud83d\ude1e  (Same happens when I try to login as User Manager\\ContainerAdministrator.)\n@DarwinJS I tried to do ./AddAccountToLogonAsAService.ps1 ContainerAdministrator but it says \"Account already in Logon as a Service\", so that's not the issue.. The error DsGetDcNameW() failed with error: 1355 leads me to believe that it's looking for the Domain Controller... though we're dealing with a local user, not a domain user!. @manojampalam You're right. What I tried now is to use the \"Administrator\" account in the Docker container, which is not virtual. I copied the public key to C:\\Users\\Administrator\\.ssh\\authorized_keys.\nI no longer get the domain error, so the user account is found correctly!\nI also ran ./AddAccountToLogonAsAService.ps1 Administrator\nUnfortunately I get this error\ndebug1: auth agent did not authorize client Administrator\nFailed publickey for Administrator from 10.3.52.61 port 3785 ssh2: RSA SHA256:1KmF/C0iiQIVaYELt5PXJsXBs/mUgYjSm+KK2p4ugrE\nI'm a bit clueless how to continue troubleshooting. @manojampalam Any suggestions?\n(I don't know how to get the logging of the ssh-agent. It's started in the background as a service by the Chocolatey package.). @manojampalam Somehow I don't have a logs folder in C:\\Program Files\\OpenSSH-Win64. @manojampalam Thanks, creating the logs folder manually did the trick. Now I have the following log entries in ssh-agent.log:\n7724 09:08:26 839 client pid 4348 connected\n7724 09:08:26 843 debug1: spawned worker 8116 for agent client pid 4348\n8116 09:08:26 880 agent_start pid:8116, dbg:0, child:1, pipe:480\n8116 09:08:26 881 debug3: connection io 0000021E9DD7AA60 #bytes:0 state:0\n8116 09:08:26 881 debug1: connection 0000021E9DD7AA60 clean up\n8116 09:08:26 881 debug1: iocp error: 6 on 0000000000000000 \\n\nWhat does it mean? I would expect something related to Lsa in the logs, but it's not there.\nEDIT: Sometimes I also get \"debug1: unable to generate token for user Administrator\". Did someone else get it working to have a Windows Docker Container and to try to login using pub key authentication? I try to login as the Administrator, but it keeps failing.\nI'm in an urgency to get this working, so anything I can do to debug or to give more information, please let me know.\nFYI this is the Dockerfile:\n```Dockerfile\nFROM microsoft/windowsservercore\nInstall chocolatey\nRUN @powershell -NoProfile -ExecutionPolicy unrestricted -Command \"$env:chocolateyUseWindowsCompression = 'false'; (iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))) >$null 2>&1\" && SET PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\nCOPY yourkey.pub C:/Users/Administrator/.ssh/authorized_keys\nRUN choco install openssh -y --version 0.0.9.20170308 -params '\"/SSHServerFeature\"'\nOptional for customized sshd_config:\nCOPY sshd_config C:/sshd_config\nRUN copy /Y C:\\sshd_config \"C:\\Program Files\\OpenSSH-Win64\\sshd_config\"\nI copied AddAccountToLogonAsAService.ps1 from the chocolatey package\nCOPY AddAccountToLogonAsAService.ps1 AddAccountToLogonAsAService.ps1\nRUN powershell ./AddAccountToLogonAsAService.ps1 Administrator\nEXPOSE 22/tcp\nRUN mkdir \"C:\\Program Files\\OpenSSH-Win64\\logs\"\n``\n. @manojampalam Interesting! Indeed I do not get the Access Denied.\nIt looks like install-sshlsa.ps1 does get called when the Chocolatey package is installed and baked into the image, but maybe if the container is started, LSA is not loaded correctly.\nI'll try to run install-sshlsa.ps1 again from a running container... At least we're a step closer. \ud83d\ude03 . @manojampalam Meanwhile I verified thatssh-lsais correctly appended toSYSTEM\\CurrentControlSet\\Control\\Lsa. I can still delete ssh-lsa.dll which makes it seem that addingssh-lsa` to the registry is not enough to load the dll in a Docker environment.\nIs there some way we can force the authentication packages to reload in Windows?. @manojampalam Kind of difficult with a Docker container. \ud83d\ude0b Doing a docker stop and docker start unfortunately doesn't seem to trigger the same behaviour.. ",
    "ferventcoder": "@mikemaccana To provide more background and maybe answer your question, Microsoft has \"PackageManagement\" which is a package manager manager (or package manager aggregator if you will), it manages other package managers, provides an interface to all of them, and that is all that it does. To date there are a few providers it comes with out of the box, the most widely used being PowerShellGet.\nLots of folks at Microsoft use Chocolatey, and if you take a look at https://github.com/PowerShell/PowerShell/blob/67e9bf6376b90c289d725c904280a2439de4dd3b/build.psm1#L1028-L1094, you can see that it's used as part of the process to build PowerShell.. ",
    "hashhar": "I have the same issue but with sshd.exe. I start it as a service and it constantly uses 30% of CPU.\n. @manojampalam Both the issues are now fixed. It seems to have a CPU spike when the service is just started and just before connecting, but that seems consistent with what I've seen with openssh on linux. Thanks.. ",
    "anurse": "I'm seeing this as well, in v0.0.19.0. This has been open for nearly a year, is this being considered for a fix? Not having this bug fixed will completely block my usage of the OpenSSH client for Windows.. \ud83c\udf89  thanks for the update @manojampalam !. I can try the workaround later if you need verification of it, but I've already switched back to using msys OpenSSH because of the issue and the workaround is pretty invasive, so I'll probably just wait for a proper fix.. Hang on, I'm confused by how the workaround should fix this issue. In my case, I'm cloning from github.com, which is not running Win32_OpenSSH on the server, it is running the upstream Unix version of OpenSSH. The workaround seems to be designed to fix cloning issues with a Win32_OpenSSH server, so it wouldn't apply. Am I misunderstanding it?. ",
    "KindDragon": "Works for me with 0.0.24.0, but very slow 300 Kb/s cloning from GitHub (Git SSH give me 9Mb/s). ",
    "ddwolf": "for me, I have a valid user named usera in my windows machine, but the sshd keeps print \n\"Invalid user usera from x.x.x.x port 34777\"\n\"Failed none for invalid user usera from x.x.x.x port 34777 ssh2\"\n...\nhow to make usera a valid user for sshd?. @bagajjal I have found the problem: i made a typo in my username. . ",
    "jebej": "Hello, reviving and old thread, but I am also having trouble logging in.\nI double check I had no typos in my user name, but still get the invalid user message from the event log:\nsshd: Invalid user jbejanin from 172.16.37.64 port 1434\nI started the server in debug3 mode, and singled out this interesting part:\ndebug3: get_passwd: Invalid account type: 3.\nInvalid user jbejanin from 172.16.37.64 port 1446. The host computer name is also jbejanin, could that be the issue?. ",
    "x9f5yjkq": "Hello.\nIt surely operates normally in the IPv6 environment.\nHowever, in sshd.log, the source IPv6 address is not displayed properly.\nExample: sshd.log\n5464 10:18:47 463 error: getsockname failed: Bad address\n5464 10:18:47 463 Connection from 2001:df0:266:108:: port 50786 on UNKNOWN port 0\nThe IPv6 address of the connection source is as follows.\n2001:df0:266:108:0:dddd:c60:f8d5\nHowever, sshd.log shows only 2001: df 0: 266: 108 ::.\nMoreover, an error \"error: getsockname failed: Bad address\" has also occurred.\n. Thank you.\nI understand that IPv6 can be connected with the current version, and it is already in operation.\nI'd like you to output the full IPv6 address to sshd.log, so I am waiting for program modification.\n. Hi.\nThanks for reply.\nI could confirm it too.\nFrom: bagajjal [mailto:notifications@github.com]\nSent: Saturday, July 08, 2017 9:50 AM\nTo: PowerShell/Win32-OpenSSH\nCc: Ito, Hiroshi (SIE); Author\nSubject: Re: [PowerShell/Win32-OpenSSH] When you connect with an IPv6 address, it is displayed bad address to sshd.log. (#391)\nIts fixed, please check the latest release..\nHere is the sshd.log message,\n36464 17:46:20:474 Connection from 2001:4898:e0:69:c567:fecb:2093:798f port 62742 on 2001:4898:e0:69:95ce:cc02:bbad:38bd port 22\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/391#issuecomment-313822822, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AWHIUObffQGOisRqkR4wdWxaZgUQWHPAks5sLtIigaJpZM4Kl2iY.\n. Thank you.\nBut there is no logs folder anywhere.\nIn the \"C: \\ Windows \\ Logs\" folder\nWill sshd.log be created under?\nI searched for sshd.log on the server, but there was not it.. I created the \"logs\" folder manually in the root folder and it was output.. Hello. Thank you for your reply.\nI ran the install-sshd.ps1, but the logs folder was not created.\n\nPS C:\\Windows\\system32> d:\nPS D:> cd .\\OpenSSH-Win64\nPS D:\\OpenSSH-Win64> .\\install-sshd.ps1\n[SC] SetServiceObjectSecurity SUCCESS\n[SC] ChangeServiceConfig SUCCESS\n Granting SeAssignPrimaryTokenPrivilege to NT SERVICE\\SSHD   ... successful\nsshd and ssh-agent services successfully installed\nPS D:\\OpenSSH-Win64> dir logs\nGet-ChildItem : \u30d1\u30b9 'D:\\OpenSSH-Win64\\logs' \u304c\u5b58\u5728\u3057\u306a\u3044\u305f\u3081\u691c\u51fa\u3067\u304d\u307e\u305b\u3093\u3002\n\u767a\u751f\u5834\u6240 \u884c:1 \u6587\u5b57:4\n+ dir <<<<  logs\n    + CategoryInfo          : ObjectNotFound: (D:\\OpenSSH-Win64\\logs:String) [Get-ChildItem]\u3001ItemNotFoundException\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand\nPS D:\\OpenSSH-Win64>\n. Hello. Thank you for your reply.\nI'm sorry, I used an old script.\nPlease close this case.. Thank you!\nIt worked fine.\nClose please.. Thank you.\nI did it in the following environment, but MaxSessions setting did not become valid.\n\u00b7 Sshd.exe version\n\u30000.0.5.0\n\u00b7 Sshd.config\n  MaxSessions 10\n\u00b7 Test method\n\u3000I tried 100 SFTP connections at 1 second intervals from the client PC\n\u3000\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\n\u3000>for /L %i in (1,1,100) do start cmd /k  sftp [user]@[ip]  && timeout /t 1\n\u3000\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\n\u00b7result\n\u30001st: 70 session connection OK\n\u30002nd: 82 session connection OK\n\u30003rd: 60 session connection OK\nAfter exceeding the above number, after connecting NG, the following error was output to sshd.log.\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\n8580 16:25:51 525 error: fork: Not enough space\n\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\n. Thank you.\nIt seems I did not understand the meaning of MaxSessions of OpenSSH correctly.\nBecause ControlMaster function is unnecessary, we will use Windows version as default value.. Hello.\nthank you for your answer.\nFor the time being, we will operate without restarting the ssh-agent service.. \nThank you.\nI understood.\nIf we need to kill an existing process at the time of restarting the daily service, we will deal by batch processing.. ",
    "huytrann": "what is the shell it give you, Windows CMD or OpenSSH?\nThe script was still executed but after that no openssh session given to me.. ",
    "JamieRRobillardSr": "you need to specify the name of the server you want to connect to.\n. ",
    "diracsbracket": "Others had this problem apparently, so I did as they did.\nin sshd_config, I added the line\nLogLevel QUIET\nNot tested yet.\n. ",
    "Kirderf73": "Thanks for a great software!\nI have uploaded the ssh-agent-log for both versions.\nI had som problems to get the ssh logfile in debug3 though, but if \"ssh -v\" is enough, you have it in the zip.\nwin32-openssh-ssh-agent-log.zip\n. Hi!\nAnything else you need?\nAre the logs ok?. Hi!\nI've installed the latest v0.0.7.0 and it still doesn't work.\nThanks for taking your time to resolve this. :-)\nssh-log.zip\n//Fredrik. It works on v0.0.1.0 but not on any of the later releases.\nThe computer account is located in AD \"ELD.FQDN\" and the user accounts are located in \"ERICSSON.FQDN\". ELD has a one way trust to ERICSSON.\nSo the problem only occurs on ERICSSON user accounts, not on local ELD user accounts. \nThanks!. - Uninstalled version 0.0.7.0\n- rebooted Windows 7 Ent\n- Installed version 0.0.1.0\nTried this command and it worked perfectly. :-)\n.\\ssh.exe -l user@ericsson.FQDN localhost\n. ",
    "hugocelso": "Same here.\nExtra context: AD user is in second domain <> ssh server domain, with thrust agreement.\nNote 1: AD user and local ssh server user are ssh server machine admins.\nNote 2: Not working at all with AD user or local ssh server user running ssh services (daemon + agent). (Local ssh server user with public key access stops working, password accepted but connection gets immediate \"Connection reset by port 22\".)\nNote 3: Again with SSHD (daemon) and Local System (agent) restarted working for local ssh server user.\nNote 4: AddressFamily inet in sshd_config to be able to log without GBs of \"error: accept: Unknown error\"\nVersions: Windows Server 2012 R2 (ssh server) and OpenSSH-Win64 v0.0.4.0 (SSH-2.0-OpenSSH_7.3p1 Microsoft_Win32_port_with_VS)\nClient lines:\n(First local ssh server user ok, second ad user nok)\nC:\\Users\\AD_USER>ssh local_ssh_server_user@ip.ip.ip.ip\nMicrosoft Windows [Version 6.3.9600]\n(c) 2013 Microsoft Corporation. All rights reserved.\nlocal_ssh_server_user@ssh_server C:\\Users\\local_ssh_server_user>exitConnection to ip.ip.ip.ip closed.\nC:\\Users\\AD_USER>ssh AD_USER@ip.ip.ip.ip\nAD_USER@ip.ip.ip.ip's password:\nPermission denied, please try again.\nAD_USER@ip.ip.ip.ip's password:\nPermission denied, please try again.\nAD_USER@ip.ip.ip.ip's password:\nPermission denied (publickey,password,keyboard-interactive).\nC:\\Users\\AD_USER>ssh \"AD_DOMAIN\\AD_USER\"@ip.ip.ip.ip\nAD_DOMAIN\\AD_USER@ip.ip.ip.ip's password:\nPermission denied, please try again.\nAD_DOMAIN\\AD_USER@ip.ip.ip.ip's password:\nPermission denied, please try again.\nAD_DOMAIN\\AD_USER@ip.ip.ip.ip's password:\nPermission denied (publickey,password,keyboard-interactive).\nC:\\Users\\AD_USER>ssh -l AD_USER@AD_DOMAIN ip.ip.ip.ip\nAD_USER@AD_DOMAIN@ip.ip.ip.ip's password:\nPermission denied, please try again.\nAD_USER@AD_DOMAIN@ip.ip.ip.ip's password:\nPermission denied, please try again.\nAD_USER@AD_DOMAIN@ip.ip.ip.ip's password:\nPermission denied (publickey,password,keyboard-interactive).\nC:\\Users\\AD_USER>\nsshd log:\n6320 22:21:06 730 Server listening on 0.0.0.0 port 22.\n5916 22:21:11 746 Connection from ip.cust.ip.cust port 60139 on 10.220.131.135 port 22\n5916 22:21:11 793 Failed none for local_ssh_server_user from ip.cust.ip.cust port 60139 ssh2\n5916 22:21:11 793 Postponed publickey for local_ssh_server_user from ip.cust.ip.cust port 60139 ssh2\n5916 22:21:11 793 Accepted publickey for local_ssh_server_user from ip.cust.ip.cust port 60139 ssh2: RSA SHA256:key\n5916 22:21:11 824 Starting session: shell on console for local_ssh_server_user from ip.cust.ip.cust port 60139 id 0\n5916 22:21:14 793 Close session: user local_ssh_server_user from ip.cust.ip.cust port 60139 id 0\n5916 22:21:14 793 Received disconnect from ip.cust.ip.cust port 60139:11: disconnected by user\n5916 22:21:14 793 Disconnected from ip.cust.ip.cust port 60139\n6184 22:21:21 746 Connection from ip.cust.ip.cust port 60141 on 10.220.131.135 port 22\n6184 22:21:21 965 Invalid user AD_USER from ip.cust.ip.cust port 60141\n6184 22:21:21 965 input_userauth_request: invalid user AD_USER\n6184 22:21:21 965 Failed none for invalid user AD_USER from ip.cust.ip.cust port 60141 ssh2\n6184 22:21:21 965 Failed publickey for invalid user AD_USER from ip.cust.ip.cust port 60141 ssh2\n6184 22:21:21 965 Failed keyboard-interactive for invalid user AD_USER from ip.cust.ip.cust port 60141 ssh2\n6184 22:21:25 918 Failed password for invalid user AD_USER from ip.cust.ip.cust port 60141 ssh2\n6184 22:21:27 230 Failed password for invalid user AD_USER from ip.cust.ip.cust port 60141 ssh2\n6184 22:21:27 590 Failed password for invalid user AD_USER from ip.cust.ip.cust port 60141 ssh2\n6184 22:21:27 590 Connection closed by ip.cust.ip.cust port 60141\n6584 22:21:38 465 Connection from ip.cust.ip.cust port 60145 on 10.220.131.135 port 22\n6584 22:21:43 074 Invalid user AD_DOMAIN\\AD_USER from ip.cust.ip.cust port 60145\n6584 22:21:43 074 input_userauth_request: invalid user AD_DOMAIN\\AD_USER\n6584 22:21:43 074 Failed none for invalid user AD_DOMAIN\\AD_USER from ip.cust.ip.cust port 60145 ssh2\n6584 22:21:43 074 Failed publickey for invalid user AD_DOMAIN\\AD_USER from ip.cust.ip.cust port 60145 ssh2\n6584 22:21:43 074 Failed keyboard-interactive for invalid user AD_DOMAIN\\AD_USER from ip.cust.ip.cust port 60145 ssh2\n6584 22:21:46 730 Failed password for invalid user AD_DOMAIN\\AD_USER from ip.cust.ip.cust port 60145 ssh2\n6584 22:21:49 887 Failed password for invalid user AD_DOMAIN\\AD_USER from ip.cust.ip.cust port 60145 ssh2\n6584 22:21:52 918 Failed password for invalid user AD_DOMAIN\\AD_USER from ip.cust.ip.cust port 60145 ssh2\n6584 22:21:52 918 Connection closed by ip.cust.ip.cust port 60145\n6744 22:31:46 951 Connection from ip.cust.ip.cust port 60245 on 10.220.131.135 port 22\n6744 22:31:51 780 Invalid user AD_USER@AD_DOMAIN from ip.cust.ip.cust port 60245\n6744 22:31:51 780 input_userauth_request: invalid user AD_USER@AD_DOMAIN\n6744 22:31:51 780 Failed none for invalid user AD_USER@AD_DOMAIN from ip.cust.ip.cust port 60245 ssh2\n6744 22:31:51 780 Failed publickey for invalid user AD_USER@AD_DOMAIN from ip.cust.ip.cust port 60245 ssh2\n6744 22:31:51 780 Failed keyboard-interactive for invalid user AD_USER@AD_DOMAIN from ip.cust.ip.cust port 60245 ssh2\n6744 22:31:57 046 Failed password for invalid user AD_USER@AD_DOMAIN from ip.cust.ip.cust port 60245 ssh2\n6744 22:32:01 093 Failed password for invalid user AD_USER@AD_DOMAIN from ip.cust.ip.cust port 60245 ssh2\n6744 22:32:04 609 Failed password for invalid user AD_USER@AD_DOMAIN from ip.cust.ip.cust port 60245 ssh2\n6744 22:32:04 609 Connection closed by ip.cust.ip.cust port 60245\n. Solved. I had to use full domain!\nI also upgraded to 0.0.5.0 (now reports SSH-2.0-OpenSSH_7.3) but I believe it was solved only because of full domain. Install dir now complains about admin rights, like when deleting logs (not a problem). Not sure if it is related to pid file creation error.\nCommand prompt is a bit buggy to custom usage but my purpose is scripting over, so I believe it will work as long as it is stable and it's possible to deal with ports back in fw. Many thx.\nSSH Client:\nC:\\Users\\AD_USER>ssh -l AD_USER@AD_DOMAIN.FULL_DOMAIN ip.ssh.srv.ip\nMicrosoft Windows [Version 6.3.9600]\n(c) 2013 Microsoft Corporation. All rights reserved.\nAD_USER@AD_DOMAIN.FULL_DOMAIN@SSH_SERVER C:\\Users\\AD_USER>dir\n Volume in drive C has no label.\nAD_USER@AD_DOMAIN.FULL_DOMAIN@SSH_SERVER C:\\Users\\AD_USER>exit\nConnection to ip.ssh.srv.ip closed.\nC:\\Users\\AD_USER>\nsshd log:\n4840 23:50:15 617 Server listening on 0.0.0.0 port 22.\n4840 23:50:15 617 error: Couldn't create pid file \"./sshd.pid\": Permission denied\n1876 23:50:25 945 error: Couldn't create pid file \"./sshd.pid\": Permission denied\n1876 23:50:25 945 Connection from ip.ssh.cust.ip port 61650 on ip.ssh.srv.ip port 22\n1876 23:50:26 086 Failed none for AD_USER@AD_DOMAIN.FULL_DOMAIN from ip.ssh.cust.ip port 61650 ssh2\n1876 23:50:26 086 Postponed publickey for AD_USER@AD_DOMAIN.FULL_DOMAIN from ip.ssh.cust.ip port 61650 ssh2\n1876 23:50:26 102 Accepted publickey for AD_USER@AD_DOMAIN.FULL_DOMAIN from ip.ssh.cust.ip port 61650 ssh2: RSA SHA256:key\n1876 23:50:26 133 Starting session: shell on console for AD_USER@AD_DOMAIN.FULL_DOMAIN from ip.ssh.cust.ip port 61650 id 0\n1876 23:50:36 961 Close session: user AD_USER@AD_DOMAIN.FULL_DOMAIN from ip.ssh.cust.ip port 61650 id 0\n1876 23:50:36 961 Received disconnect from ip.ssh.cust.ip port 61650:11: disconnected by user\n1876 23:50:36 961 Disconnected from ip.ssh.cust.ip port 61650\n. Bad news. I have it working, able to connect either way:\n * ssh user@full.domain@ip.ssh.srv.ip\n * ssh -l user@full.domain ip.ssh.srv.ip\nI had lots of issues with architecture conectivity to all ADs. Have you checked windows ssh server for blocked conectivities?. That's my scenario, but here it works (like machine in ELD.FQDN):\nssh user@ERICSSON.FQDN@ip.sshsrv.eld.ip\nssh -l user@ERICSSON.FQDN ip.sshsrv.eld.ip\nIf you have and the time and patience :) and revert to v0.0.1.0, it still works?. Two cents comment: We (re) had when upgrading to v12, but it was solved with a note from a previous version that we had skipped (v11).\nThis info probably should be on install notes!\nNOTE - Breaking Change\nDue to a security issue that got fixed in this release, SSHD account now needs read access to authorized_keys. Otherwise pubkey authentication will fail. Do the following:\n   $authorizedKeyPath = \"c:\\users\\user.ssh\\authorized_keys\"\n   $acl = get-acl $authorizedKeyPath\n   $ar = New-Object  System.Security.AccessControl.FileSystemAccessRule(\"NT Service\\sshd\", \"Read\", \"Allow\")\n   $acl.SetAccessRule($ar)\n   Set-Acl  $authorizedKeyPath $acl. You need [.ssh] folder in the home directory of windows account that will be target for remote ssh (and authorized_keys file in it with keys), on windows server running openssh.\nIn my case the script was adapted like this:\n$authorizedKeyPath = \"G:\\Users\\user_ad_account\\.ssh\\authorized_keys\"\n$acl = get-acl $authorizedKeyPath\n$ar = New-Object  System.Security.AccessControl.FileSystemAccessRule(\"NT Service\\sshd\", \"Read\", \"Allow\")\n$acl.SetAccessRule($ar)\nSet-Acl  $authorizedKeyPath $acl\nI can remote ssh with any of these command lines:\nssh user_ad_account@FQDN_ad@ip_windows_server_running_openssh\nssh -l user_ad_account@FQDN_ad ip_windows_server_running_openssh. This topic is all about trusted AD User account, in this scenario users will have to use one Active Directory account on target machine.\nIf all you want are users to access certain folders on a target machine then you probably don't need an AD account for that purpose, one or multiple limited local accounts will do better, or network shares.\nTry the forum with ssh and key authentication in a simple scenario (without AD accounts).. I could be missing something here but as far as I know ssh will not use tokens from AD, so a passwordless system over ssh will use keys. It doesn't matter who you are in the client machine (as along as you have a valid key to authenticate), it only matters who you want to be on the target machine (with pub key in authorized_keys). If users are supposed to be themselves they will need some home account (usually under users folder), with their .ssh folder and authorized_keys with respective keys. Another (simpler) way could be one or few local acounts on target machine following needed permissions, servicing those users. SSHD subdir (in users folder) is for the account running the service.. ",
    "FrankWangAU": "Hi Guys,\nI have the same problem with 0.0.7.0, any work around for this issue?\nThanks,\nFrank. ",
    "topokina": "Hi all\nIs there a solution to this issue. I have same problem.. Hi hugocelso\nThanks for the response.\nI actually do not have \"c:\\users\\user.ssh\" but rather \"C:\\Users\\SSHD\". I believed this was created with the installation. \nDo I have to create \"c:\\users\\user.ssh\" or use \"C:\\Users\\SSHD\" instead. Or was there something not properly completed during my installation?\n. I actually need users to access common home directory such as \"E:\\Download\", from where they can download available files. They do not need access to any other folders such as \"C:\\Users\"\nIn an old OpenSSH I used in the past, I had to create \"passwd\" file, in which the \"home directory\" for appropriate users are defined.\nDo I have to address it same way in this application, or how do I go about defining such.\nThanks for your patience. Sorry for drifting off. The main challenges is getting trusted AD users to authenticate.\nThe issue is that the users in AD-Domain in which the Server is in are able to authenticate (SFTP) to the system, however any users coming from the trusted AD-Domain get \"Access Denied\", even though they could access any File-Shares on the Server.. ",
    "asinno": "We are having the same issue with the most up to date version.... I am using 0.0.10.0 according to the command I just ran. Are there any current workarounds?. ```\nPS C> git clone user@serverA:Z:/gitrepo.git\nCloning into 'gitrepo.git'...\nuser@serverA's password:\nfatal: ''Z:/gitrepo.git'' does not appear to be a git repository\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\n```\nIt appears I am also getting the double single quotes '' instead of \". ",
    "zyrill": "Yes, you can use dynamic port forwarding. I've tried it and it works, running on Win Server 2012 R2.\n. ",
    "ekos2001": "It doesn't work for me for some reasons\nHere is my setup:\nsshd started on Windows 10, firewall is disabled\nssh started on different Windows 10 PC with following command line: \nssh -D 1080 user@host\nFirefox set up to use socks5 proxy localhost:1080\nWhen I try to use firefox, following appears in ssh console:\ngetsockname failed: Bad address\nchannel 2: open failed: unknown channel type:\nIf I connect to another ssh server with the similar command line, everything is working. ssh still sending to console \"getsockname failed: Bad address\" but not \"channel 2: open failed: unknown channel type:\"\nAlso I tried to enable LogLevel DEBUG3 in sshd_config, but can't see any messages related to this\nWhat is the best way to diagnose it?\nThanks\n. @zyrill, what is your full setup? socks port, browser?\n. ",
    "chancedickson": "D'oh. Easy fix. Removed posh-git from my Documents\\WindowsPowerShell\\Modules folder.\n. ",
    "brizzock": "\nchoco uninstall poshgit -y \n\nthis fixed my problem too. i closed/opened console and reinstalled poshgit and no more problems. i still don't understand the problem but THANK YOU. i would have probably blown away my whole dev workstation if that had persisted.. ",
    "frostius": "many laptops have very small primary SSDs.  3rd party tools can easily\nconsume this space, so I install most apps to a separate drive as a matter\ncourse\nhard-coding paths is wrong for so many reasons its difficult for me to\nimagine any reasonable justification\nOn Mon, Nov 14, 2016 at 3:33 PM, Darwin notifications@github.com wrote:\n\n@mfrost66 https://github.com/mfrost66 - I am interested in the scenario\nwhere you need to install outside of the defaults - because if you install\noutside of Program files - especially on desktop OSes - you lose a lot of\nbuilt-in malware protections.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/407#issuecomment-260469509,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADpFcsp1xYh-SdKz9Yfsm-_ucOHeqrC5ks5q-NOngaJpZM4KxzPe\n.\n. No doubt - its going to be awesome!  Imagine even how much more awesomer it\nwould be if the marketing dept would add a 2nd intern!  Open source ALL THE\nWAY BABY!!!!\n\nOn Mon, Nov 14, 2016 at 4:04 PM, Darwin notifications@github.com wrote:\n\nWell I can't speak for the dev team - but this is a pre-release software\nthat does not have an installer supported by the team yet. So defaulting\nfiles in the zip to the location advised in the installation documentation\nmeans it just works out of the box for anyone who wishes to use the default\nconfiguration.\nI'm sure once they get a full blown installer that allows choosing the\ninstall folder, it will update any other locations that need to point to\nthe install folder using the logic built into the installer.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/407#issuecomment-260477908,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADpFclVToESj6Gv2CMb5U1NsRF54jdQ6ks5q-NrSgaJpZM4KxzPe\n.\n. \n",
    "DavidBiesack": "I see in ssh-agent.log\n5924 09:56:53 947 debug1: unable to generate token for user myuserid\nand in sshd.log\n4416 09:56:53 947 debug1: auth agent did not authorize client userid\n4416 09:56:53 947 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\n4416 09:56:53 947 Failed publickey for userid from 10.23.16.105 port 54396 ssh2: RSA SHA256:g/NZaQYcc3Ue5hf+WbTjaQ+g+2HCYFYNWSTPn6qd4QI\n4416 09:56:53 947 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\nI'm not sure what this means or how to troubleshoot this (I looked at the wiki page to set DEBUG3 level) \nHere is the full ssh-agent.log for the client connection attempt:\n8036 09:56:30 962 agent_start pid:8036, dbg:0, child:0, pipe:0\n8036 09:56:51 853 client pid 4416 connected\n8036 09:56:51 884 debug1: spawned worker 5924 for agent client pid 4416 \n5924 09:56:53 947 agent_start pid:5924, dbg:0, child:1, pipe:348\n5924 09:56:53 947 debug3: connection io 000000000031EA50 #bytes:0 state:0\n5924 09:56:53 947 debug3: connection io 000000000031EA50 #bytes:4 state:1\n5924 09:56:53 947 debug3: connection io 000000000031EA50 #bytes:956 state:2\n5924 09:56:53 947 debug2: client type: 3\n5924 09:56:53 947 debug1: process agent request type 100\n5924 09:56:53 947 debug1: LsaLogonUser failed 1\n5924 09:56:53 947 debug1: unable to generate token for user myuserid\n5924 09:56:53 947 debug3: connection io 000000000031EA50 #bytes:5 state:3\nHere is the full sshd.log for the same:\n```\n6308 09:56:37 837 debug2: signal() sig:2, handler:0000000000000001\n6308 09:56:37 837 debug1: socket:220, io:000000000050FB30, fd:3 \n6308 09:56:37 837 debug3: w32_fcntl fd:3\n6308 09:56:37 837 debug2: fd 3 setting O_NONBLOCK\n6308 09:56:37 837 debug3: w32_fcntl fd:3\n6308 09:56:37 837 debug3: w32_setsockopt fd:3\n6308 09:56:37 837 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n6308 09:56:37 837 debug3: w32_setsockopt fd:3\n6308 09:56:37 837 debug3: w32_fcntl fd:3\n6308 09:56:37 837 debug1: Bind to port 22 on ::.\n6308 09:56:37 837 debug3: w32_bind fd:3\n6308 09:56:37 837 debug3: w32_listen fd:3\n6308 09:56:37 837 Server listening on :: port 22.\n6308 09:56:37 837 debug1: socket:364, io:000000000050E870, fd:4 \n6308 09:56:37 837 debug3: w32_fcntl fd:4\n6308 09:56:37 837 debug2: fd 4 setting O_NONBLOCK\n6308 09:56:37 837 debug3: w32_fcntl fd:4\n6308 09:56:37 837 debug3: w32_setsockopt fd:4\n6308 09:56:37 837 debug3: w32_fcntl fd:4\n6308 09:56:37 837 debug1: Bind to port 22 on 0.0.0.0.\n6308 09:56:37 837 debug3: w32_bind fd:4\n6308 09:56:37 837 debug3: w32_listen fd:4\n6308 09:56:37 837 Server listening on 0.0.0.0 port 22.\n6308 09:56:37 837 debug2: signal() sig:6, handler:000000013F9CE540\n6308 09:56:37 837 debug2: signal() sig:3, handler:000000013F9CD100\n6308 09:56:37 837 debug2: signal() sig:8, handler:000000013F9CE620\n6308 09:56:37 837 debug2: signal() sig:7, handler:000000013F9CE620\n6308 09:56:37 837 debug3: w32_select fd:3\n6308 09:56:37 837 debug3: w32_select fd:4\n6308 09:56:37 837 debug3: Total in fds:2\n6308 09:56:37 837 debug2: on_select - io:000000000050FB30 type:1 rd:1\n6308 09:56:37 837 debug3: acceptEx - io:000000000050FB30\n6308 09:56:37 837 debug2: on_select - io:000000000050E870 type:1 rd:1\n6308 09:56:37 853 debug3: acceptEx - io:000000000050E870\n6308 09:56:37 853 debug3: wait() on 0 events and 0 children\n6308 09:56:37 853 debug3: wait() on 2 events and 0 children\n6308 09:56:49 665 debug3: select - returning 1\n6308 09:56:49 665 debug3: w32_accept fd:4\n6308 09:56:49 665 debug3: accept - io:000000000050E870\n6308 09:56:49 665 debug2: accept io:000000000050E920\n6308 09:56:49 665 debug1: socket:376, io:000000000050E920, fd:5 \n6308 09:56:49 665 debug3: w32_fcntl fd:5\n6308 09:56:49 665 debug3: fd 5 is not O_NONBLOCK\n6308 09:56:49 665 debug1: pipe - read end: handle:000000000000017C, io:00000000004FC860, fd:6\n6308 09:56:49 665 debug1: pipe - write end: handle:0000000000000180, io:00000000004FC910, fd:7\n6308 09:56:49 665 debug1: Remote Handle 0000000000000178\n6308 09:56:49 681 debug3: w32_close fd:5\n6308 09:56:49 681 debug1: close - io:000000000050E920, type:1, fd:5, table_index:5\n6308 09:56:49 681 debug2: close - io:000000000050E920\n6308 09:56:49 697 debug3: w32_close fd:-1\n6308 09:56:49 697 debug1: w32_close ERROR: bad fd: -1\n6308 09:56:49 697 debug1: Register child 0000000000000188 pid 4416, 0 zombies of 0\n6308 09:56:49 697 debug1: Forked child 4416.\n6308 09:56:49 697 debug3: w32_close fd:7\n6308 09:56:49 697 debug1: close - io:00000000004FC910, type:2, fd:7, table_index:7\n6308 09:56:49 697 debug2: fileclose - pio:00000000004FC910\n6308 09:56:49 697 debug3: w32_close fd:5\n6308 09:56:49 697 debug1: w32_close ERROR: bad fd: 5\n6308 09:56:49 697 debug3: w32_select fd:3\n6308 09:56:49 697 debug3: w32_select fd:4\n6308 09:56:49 697 debug3: w32_select fd:6\n6308 09:56:49 697 debug3: Total in fds:3\n6308 09:56:49 697 debug2: on_select - io:000000000050FB30 type:1 rd:1\n6308 09:56:49 697 debug2: on_select - io:000000000050E870 type:1 rd:1\n6308 09:56:49 697 debug3: acceptEx - io:000000000050E870\n6308 09:56:49 697 debug2: ReadFileEx io:00000000004FC860\n6308 09:56:49 697 debug3: wait() on 0 events and 1 children\n6308 09:56:49 697 debug3: wait() on 2 events and 1 children\n4416 09:56:51 853 debug2: signal() sig:2, handler:0000000000000001\n4416 09:56:51 853 debug2: signal() sig:6, handler:000000013F9CE540\n4416 09:56:51 853 debug2: signal() sig:3, handler:000000013F9CD100\n4416 09:56:51 853 debug2: signal() sig:8, handler:000000013F9CE620\n4416 09:56:51 853 debug2: signal() sig:7, handler:000000013F9CE620\n4416 09:56:51 853 debug1: remote channel 376\n4416 09:56:51 853 debug3: w32_fcntl fd:3\n4416 09:56:51 853 debug3: w32_fcntl fd:3\n4416 09:56:51 853 debug3: alarm() 0 secs\n4416 09:56:51 853 debug2: signal() sig:4, handler:0000000000000000\n4416 09:56:51 853 debug2: signal() sig:6, handler:0000000000000000\n4416 09:56:51 853 debug2: signal() sig:8, handler:0000000000000000\n4416 09:56:51 853 debug2: signal() sig:7, handler:0000000000000000\n4416 09:56:51 853 debug2: signal() sig:3, handler:0000000000000000\n4416 09:56:51 853 debug2: signal() sig:0, handler:0000000000000000\n4416 09:56:51 853 debug3: w32_getpeername fd:3\n4416 09:56:51 853 debug3: w32_setsockopt fd:3\n4416 09:56:51 853 debug3: w32_getpeername fd:3\n4416 09:56:51 853 debug3: w32_getpeername fd:3\n4416 09:56:51 853 debug3: w32_getsockopt fd:3\n4416 09:56:51 853 debug3: w32_getpeername fd:3\n4416 09:56:51 853 debug3: w32_getsockname fd:3\n4416 09:56:51 853 debug3: w32_getsockname fd:3\n4416 09:56:51 853 Connection from 10.23.16.105 port 54396 on 10.23.11.92 port 22\n4416 09:56:51 853 debug2: signal() sig:4, handler:000000013F9CB3A0\n4416 09:56:51 853 debug3: alarm() 120 secs\n4416 09:56:51 853 debug3: w32_write fd:3\n4416 09:56:51 853 debug2: send - io:000000000025AC40\n4416 09:56:51 853 debug2: send - WSASend() returned 0, APC scheduled io:000000000025AC40\n4416 09:56:51 853 debug2: WSASendCB - io:000000000025AC40, pending_state:1, error:0, sent:52 of remaining:52\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug3: WSARecv - pio: 000000000025AC40\n4416 09:56:51 853 debug2: WSARecv - WSARecv() returned 0, io:000000000025AC40\n4416 09:56:51 853 debug2: recv - Letting APC to execute, io:000000000025AC40\n4416 09:56:51 853 debug2: WSARecvCompletionCB - io:000000000025AC40, pending_state:1, flags:0, error:0, received:41\n4416 09:56:51 853 debug3: recv - socket in blocking mode, io:000000000025AC40\n4416 09:56:51 853 debug2: recv - (2) returning 1 bytes from completed IO, remaining:40, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:39, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:38, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:37, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:36, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:35, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:34, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:33, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:32, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:31, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:30, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:29, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:28, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:27, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:26, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:25, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:24, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:23, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:22, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:21, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:20, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:19, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:18, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:17, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:16, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:15, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:14, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:13, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:12, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:11, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:10, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:9, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:8, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:7, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:6, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:5, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:4, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:3, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:2, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:1, io:000000000025AC40\n4416 09:56:51 853 debug3: w32_read fd:3\n4416 09:56:51 853 debug3: recv - io:000000000025AC40\n4416 09:56:51 853 debug2: recv - returning 1 bytes from prior completed IO, remaining:0, io:000000000025AC40\n4416 09:56:51 853 debug1: Client protocol version 2.0; client software version OpenSSH_7.2p2 Ubuntu-4ubuntu2.1\n4416 09:56:51 853 debug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu2.1 pat OpenSSH* compat 0x04000000\n4416 09:56:51 853 debug1: Enabling compatibility mode for protocol 2.0\n4416 09:56:51 853 debug1: Local version string SSH-2.0-OpenSSH_7.1p1 Microsoft_Win32_port_with_VS\n4416 09:56:51 853 debug3: w32_fcntl fd:3\n4416 09:56:51 853 debug2: fd 3 setting O_NONBLOCK\n4416 09:56:51 853 debug3: w32_fcntl fd:3\n4416 09:56:51 884 debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms\n4416 09:56:51 884 debug1: list_hostkey_types: ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519\n4416 09:56:51 884 debug1: SSH2_MSG_KEXINIT sent\n4416 09:56:51 884 debug3: w32_write fd:3\n4416 09:56:51 884 debug2: send - io:000000000025AC40\n4416 09:56:51 884 debug2: send - WSASend() returned 0, APC scheduled io:000000000025AC40\n4416 09:56:51 884 debug2: WSASendCB - io:000000000025AC40, pending_state:1, error:0, sent:840 of remaining:840\n4416 09:56:51 884 debug3: w32_select fd:3\n4416 09:56:51 884 debug3: Total in fds:1\n4416 09:56:51 884 debug2: on_select - io:000000000025AC40 type:1 rd:1\n4416 09:56:51 884 debug3: WSARecv - pio: 000000000025AC40\n4416 09:56:51 884 debug2: WSARecv - WSARecv() returned 0, io:000000000025AC40\n4416 09:56:51 884 debug3: wait() on 0 events and 0 children\n4416 09:56:51 884 debug2: WSARecvCompletionCB - io:000000000025AC40, pending_state:1, flags:0, error:0, received:1336\n4416 09:56:51 884 debug3: select - returning 1\n4416 09:56:51 884 debug3: w32_read fd:3\n4416 09:56:51 884 debug3: recv - io:000000000025AC40\n4416 09:56:51 884 debug2: recv - returning 1336 bytes from prior completed IO, remaining:0, io:000000000025AC40\n4416 09:56:51 884 debug1: SSH2_MSG_KEXINIT received\n4416 09:56:51 884 debug2: local server KEXINIT proposal\n4416 09:56:51 884 debug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1\n4416 09:56:51 884 debug2: host key algorithms: ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519\n4416 09:56:51 884 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n4416 09:56:51 884 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n4416 09:56:51 884 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n4416 09:56:51 884 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n4416 09:56:51 884 debug2: compression ctos: none,zlib@openssh.com\n4416 09:56:51 884 debug2: compression stoc: none,zlib@openssh.com\n4416 09:56:51 884 debug2: languages ctos: \n4416 09:56:51 884 debug2: languages stoc: \n4416 09:56:51 884 debug2: first_kex_follows 0 \n4416 09:56:51 884 debug2: reserved 0 \n4416 09:56:51 884 debug2: peer client KEXINIT proposal\n4416 09:56:51 884 debug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,ext-info-c\n4416 09:56:51 884 debug2: host key algorithms: ssh-rsa-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519\n4416 09:56:51 884 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\n4416 09:56:51 884 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\n4416 09:56:51 884 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n4416 09:56:51 884 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n4416 09:56:51 884 debug2: compression ctos: none,zlib@openssh.com,zlib\n4416 09:56:51 884 debug2: compression stoc: none,zlib@openssh.com,zlib\n4416 09:56:51 884 debug2: languages ctos: \n4416 09:56:51 884 debug2: languages stoc: \n4416 09:56:51 884 debug2: first_kex_follows 0 \n4416 09:56:51 884 debug2: reserved 0 \n4416 09:56:51 884 debug1: kex: algorithm: curve25519-sha256@libssh.org\n4416 09:56:51 884 debug1: kex: host key algorithm: ssh-rsa\n4416 09:56:51 884 debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\n4416 09:56:51 884 debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\n4416 09:56:51 884 debug1: expecting SSH2_MSG_KEX_ECDH_INIT\n4416 09:56:51 884 debug3: w32_select fd:3\n4416 09:56:51 884 debug3: Total in fds:1\n4416 09:56:51 884 debug2: on_select - io:000000000025AC40 type:1 rd:1\n4416 09:56:51 884 debug3: WSARecv - pio: 000000000025AC40\n4416 09:56:51 884 debug2: WSARecv - reported IO pending\n4416 09:56:51 884 debug3: wait() on 0 events and 0 children\n4416 09:56:51 900 debug3: wait() on 0 events and 0 children\n4416 09:56:51 900 debug2: WSARecvCompletionCB - io:000000000025AC40, pending_state:1, flags:0, error:0, received:48\n4416 09:56:51 900 debug3: select - returning 1\n4416 09:56:51 900 debug3: w32_read fd:3\n4416 09:56:51 900 debug3: recv - io:000000000025AC40\n4416 09:56:51 900 debug2: recv - returning 48 bytes from prior completed IO, remaining:0, io:000000000025AC40\n4416 09:56:51 900 debug2: set_newkeys: mode 1\n4416 09:56:51 900 debug1: SSH2_MSG_NEWKEYS sent\n4416 09:56:51 900 debug1: expecting SSH2_MSG_NEWKEYS\n4416 09:56:51 900 debug3: w32_write fd:3\n4416 09:56:51 900 debug2: send - io:000000000025AC40\n4416 09:56:51 900 debug2: send - WSASend() returned 0, APC scheduled io:000000000025AC40\n4416 09:56:51 900 debug2: WSASendCB - io:000000000025AC40, pending_state:1, error:0, sent:624 of remaining:624\n4416 09:56:51 900 debug3: w32_select fd:3\n4416 09:56:51 900 debug3: Total in fds:1\n4416 09:56:51 900 debug2: on_select - io:000000000025AC40 type:1 rd:1\n4416 09:56:51 900 debug3: WSARecv - pio: 000000000025AC40\n4416 09:56:51 900 debug2: WSARecv - reported IO pending\n4416 09:56:51 900 debug3: wait() on 0 events and 0 children\n4416 09:56:51 900 debug3: wait() on 0 events and 0 children\n4416 09:56:51 900 debug2: WSARecvCompletionCB - io:000000000025AC40, pending_state:1, flags:0, error:0, received:16\n4416 09:56:51 900 debug3: select - returning 1\n4416 09:56:51 900 debug3: w32_read fd:3\n4416 09:56:51 900 debug3: recv - io:000000000025AC40\n4416 09:56:51 900 debug2: recv - returning 16 bytes from prior completed IO, remaining:0, io:000000000025AC40\n4416 09:56:51 900 debug2: set_newkeys: mode 0\n4416 09:56:51 900 debug1: SSH2_MSG_NEWKEYS received\n4416 09:56:51 900 debug1: KEX done\n4416 09:56:51 900 debug3: w32_select fd:3\n4416 09:56:51 900 debug3: Total in fds:1\n4416 09:56:51 900 debug2: on_select - io:000000000025AC40 type:1 rd:1\n4416 09:56:51 900 debug3: WSARecv - pio: 000000000025AC40\n4416 09:56:51 900 debug2: WSARecv - reported IO pending\n4416 09:56:51 900 debug3: wait() on 0 events and 0 children\n4416 09:56:51 900 debug3: wait() on 0 events and 0 children\n4416 09:56:52 118 debug2: WSARecvCompletionCB - io:000000000025AC40, pending_state:1, flags:0, error:0, received:44\n4416 09:56:52 118 debug3: select - returning 1\n4416 09:56:52 118 debug3: w32_read fd:3\n4416 09:56:52 118 debug3: recv - io:000000000025AC40\n4416 09:56:52 118 debug2: recv - returning 44 bytes from prior completed IO, remaining:0, io:000000000025AC40\n4416 09:56:52 118 debug3: w32_write fd:3\n4416 09:56:52 118 debug2: send - io:000000000025AC40\n4416 09:56:52 118 debug2: send - WSASend() returned 0, APC scheduled io:000000000025AC40\n4416 09:56:52 118 debug2: WSASendCB - io:000000000025AC40, pending_state:1, error:0, sent:44 of remaining:44\n4416 09:56:52 118 debug3: w32_select fd:3\n4416 09:56:52 118 debug3: Total in fds:1\n4416 09:56:52 118 debug2: on_select - io:000000000025AC40 type:1 rd:1\n4416 09:56:52 118 debug3: WSARecv - pio: 000000000025AC40\n4416 09:56:52 118 debug2: WSARecv - WSARecv() returned 0, io:000000000025AC40\n4416 09:56:52 118 debug3: wait() on 0 events and 0 children\n4416 09:56:52 118 debug2: WSARecvCompletionCB - io:000000000025AC40, pending_state:1, flags:0, error:0, received:68\n4416 09:56:52 118 debug3: select - returning 1\n4416 09:56:52 118 debug3: w32_read fd:3\n4416 09:56:52 118 debug3: recv - io:000000000025AC40\n4416 09:56:52 118 debug2: recv - returning 68 bytes from prior completed IO, remaining:0, io:000000000025AC40\n4416 09:56:52 118 debug1: userauth-request for user myuserid service ssh-connection method none\n4416 09:56:52 118 debug1: attempt 0 failures 0\n4416 09:56:52 118 debug3: w32_getsockname fd:3\n4416 09:56:52 118 debug3: w32_getsockname fd:3\n4416 09:56:52 118 debug2: parse_server_config: config reprocess config len 331\n4416 09:56:52 181 debug2: input_userauth_request: setting up authctxt for myuserid\n4416 09:56:52 181 debug2: input_userauth_request: try method none\n4416 09:56:52 181 Failed none for myuserid from 10.23.16.105 port 54396 ssh2\n4416 09:56:52 181 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n4416 09:56:52 181 debug3: w32_write fd:3\n4416 09:56:52 181 debug2: send - io:000000000025AC40\n4416 09:56:52 181 debug2: send - WSASend() returned 0, APC scheduled io:000000000025AC40\n4416 09:56:52 181 debug2: WSASendCB - io:000000000025AC40, pending_state:1, error:0, sent:76 of remaining:76\n4416 09:56:52 181 debug3: w32_select fd:3\n4416 09:56:52 181 debug3: Total in fds:1\n4416 09:56:52 181 debug2: on_select - io:000000000025AC40 type:1 rd:1\n4416 09:56:52 181 debug3: WSARecv - pio: 000000000025AC40\n4416 09:56:52 181 debug2: WSARecv - reported IO pending\n4416 09:56:52 181 debug3: wait() on 0 events and 0 children\n4416 09:56:52 181 debug3: wait() on 0 events and 0 children\n4416 09:56:52 181 debug2: WSARecvCompletionCB - io:000000000025AC40, pending_state:1, flags:0, error:0, received:364\n4416 09:56:52 181 debug3: select - returning 1\n4416 09:56:52 181 debug3: w32_read fd:3\n4416 09:56:52 181 debug3: recv - io:000000000025AC40\n4416 09:56:52 181 debug2: recv - returning 364 bytes from prior completed IO, remaining:0, io:000000000025AC40\n4416 09:56:52 181 debug1: userauth-request for user myuserid service ssh-connection method publickey\n4416 09:56:52 181 debug1: attempt 1 failures 0\n4416 09:56:52 181 debug2: input_userauth_request: try method publickey\n4416 09:56:52 181 debug1: test whether pkalg/pkblob are acceptable\n4416 09:56:52 181 debug3: w32_write fd:3\n4416 09:56:52 181 debug2: send - io:000000000025AC40\n4416 09:56:52 181 debug2: send - WSASend() returned 0, APC scheduled io:000000000025AC40\n4416 09:56:52 181 debug2: WSASendCB - io:000000000025AC40, pending_state:1, error:0, sent:324 of remaining:324\n4416 09:56:52 181 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\n4416 09:56:52 181 Postponed publickey for myuserid from 10.23.16.105 port 54396 ssh2\n4416 09:56:52 181 debug3: w32_select fd:3\n4416 09:56:52 181 debug3: Total in fds:1\n4416 09:56:52 181 debug2: on_select - io:000000000025AC40 type:1 rd:1\n4416 09:56:52 181 debug3: WSARecv - pio: 000000000025AC40\n4416 09:56:52 181 debug2: WSARecv - reported IO pending\n4416 09:56:52 181 debug3: wait() on 0 events and 0 children\n4416 09:56:52 181 debug3: wait() on 0 events and 0 children\n4416 09:56:52 181 debug2: WSARecvCompletionCB - io:000000000025AC40, pending_state:1, flags:0, error:0, received:644\n4416 09:56:52 181 debug3: select - returning 1\n4416 09:56:52 181 debug3: w32_read fd:3\n4416 09:56:52 181 debug3: recv - io:000000000025AC40\n4416 09:56:52 181 debug2: recv - returning 644 bytes from prior completed IO, remaining:0, io:000000000025AC40\n4416 09:56:52 181 debug1: userauth-request for user myuserid service ssh-connection method publickey\n4416 09:56:52 181 debug1: attempt 2 failures 0\n4416 09:56:52 181 debug2: input_userauth_request: try method publickey\n4416 09:56:52 181 debug3: w32_write fd:4\n4416 09:56:52 181 debug2: write - io:00000000002595D0\n4416 09:56:52 181 debug3: wait() on 0 events and 0 children\n4416 09:56:52 181 debug2: WriteCB - pio:00000000002595D0, pending_state:1, error:0, transferred:4 of remaining: 4\n4416 09:56:52 181 debug2: write - reporting 4 bytes written, io:00000000002595D0\n4416 09:56:52 181 debug3: w32_write fd:4\n4416 09:56:52 181 debug2: write - io:00000000002595D0\n4416 09:56:52 181 debug3: wait() on 0 events and 0 children\n4416 09:56:52 181 debug2: WriteCB - pio:00000000002595D0, pending_state:1, error:0, transferred:956 of remaining: 956\n4416 09:56:52 181 debug2: write - reporting 956 bytes written, io:00000000002595D0\n4416 09:56:52 181 debug3: w32_read fd:4\n4416 09:56:52 181 debug3: read - io:00000000002595D0 remaining:0\n4416 09:56:52 181 debug2: ReadFileEx io:00000000002595D0\n4416 09:56:52 181 debug3: wait() on 0 events and 0 children\n4416 09:56:53 947 debug2: ReadCB pio:00000000002595D0, pending_state:1, error:0, received:5\n4416 09:56:53 947 debug2: read - io:00000000002595D0 read: 4 remaining: 1\n4416 09:56:53 947 debug3: w32_read fd:4\n4416 09:56:53 947 debug3: read - io:00000000002595D0 remaining:1\n4416 09:56:53 947 debug2: read - io:00000000002595D0 read: 1 remaining: 0\n4416 09:56:53 947 debug1: auth agent did not authorize client myuserid\n4416 09:56:53 947 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\n4416 09:56:53 947 Failed publickey for myuserid from 10.23.16.105 port 54396 ssh2: RSA SHA256:g/NZaQYcc3Ue5hf+WbTjaQ+g+2HCYFYNWSTPn6qd4QI\n4416 09:56:53 947 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n4416 09:56:53 947 debug3: w32_write fd:3\n4416 09:56:53 947 debug2: send - io:000000000025AC40\n4416 09:56:53 947 debug2: send - WSASend() returned 0, APC scheduled io:000000000025AC40\n4416 09:56:53 947 debug2: WSASendCB - io:000000000025AC40, pending_state:1, error:0, sent:76 of remaining:76\n4416 09:56:53 947 debug3: w32_select fd:3\n4416 09:56:53 947 debug3: Total in fds:1\n4416 09:56:53 947 debug2: on_select - io:000000000025AC40 type:1 rd:1\n4416 09:56:53 947 debug3: WSARecv - pio: 000000000025AC40\n4416 09:56:53 947 debug2: WSARecv - reported IO pending\n4416 09:56:53 947 debug3: wait() on 0 events and 0 children\n4416 09:56:53 947 debug3: wait() on 0 events and 0 children\n4416 09:56:53 947 debug2: WSARecvCompletionCB - io:000000000025AC40, pending_state:1, flags:0, error:0, received:92\n4416 09:56:53 947 debug3: select - returning 1\n4416 09:56:53 947 debug3: w32_read fd:3\n4416 09:56:53 947 debug3: recv - io:000000000025AC40\n4416 09:56:53 947 debug2: recv - returning 92 bytes from prior completed IO, remaining:0, io:000000000025AC40\n4416 09:56:53 947 debug1: userauth-request for user myuserid service ssh-connection method keyboard-interactive\n4416 09:56:53 947 debug1: attempt 3 failures 1\n4416 09:56:53 947 debug2: input_userauth_request: try method keyboard-interactive\n4416 09:56:53 947 debug1: keyboard-interactive devs \n4416 09:56:53 947 debug1: auth2_challenge: user=myuserid devs=\n4416 09:56:53 947 debug1: kbdint_alloc: devices ''\n4416 09:56:53 947 debug2: auth2_challenge_start: devices \n4416 09:56:53 947 Failed keyboard-interactive for myuserid from 10.23.16.105 port 54396 ssh2\n4416 09:56:53 947 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n4416 09:56:53 947 debug3: w32_write fd:3\n4416 09:56:53 947 debug2: send - io:000000000025AC40\n4416 09:56:53 947 debug2: send - WSASend() returned 0, APC scheduled io:000000000025AC40\n4416 09:56:53 947 debug2: WSASendCB - io:000000000025AC40, pending_state:1, error:0, sent:76 of remaining:76\n4416 09:56:53 947 debug3: w32_select fd:3\n4416 09:56:53 947 debug3: Total in fds:1\n4416 09:56:53 947 debug2: on_select - io:000000000025AC40 type:1 rd:1\n4416 09:56:53 947 debug3: WSARecv - pio: 000000000025AC40\n4416 09:56:53 947 debug2: WSARecv - reported IO pending\n4416 09:56:53 947 debug3: wait() on 0 events and 0 children\n4416 09:56:53 947 debug3: wait() on 0 events and 0 children\n6308 09:57:08 681 debug1: Request received (4)\n6308 09:57:08 681 debug1: Request received (4)\n. yes, it is failing to authenticate with my public key, and falls back to password. But I don't know why it fails, and the log does not explain it. I have verified that on the remote Windows PC, my `~/.ssh/authorized_keys` contains my public key from the local client's `id_rsa.pub` and this works on other Linux machines.  Below is a ssh -vvv log (I masked the hostname/userid),\nbut the important lines appear to be near the end:\ndebug3: sign_and_send_pubkey: RSA SHA256:g/NZaQYcc3Ue5hf+WbTjaQ+g+2HCYFYNWSTPn6qd4QI\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug2: we did not send a packet, disable method \n```\nbut I don't know how to diagnose this. What does we did not send a packet, disable method mean and why did the handshake fail?\nFull log below. \n```\nOpenSSH_7.2p2 Ubuntu-4ubuntu2.1, OpenSSL 1.0.2g  1 Mar 2016\ndebug1: Reading configuration data /u/userid/.ssh/config\ndebug1: /u/userid/.ssh/config line 9: Applying options for \ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 19: Applying options for \ndebug2: resolving \"aaaaaaaaa.bbbbbbb.sas.com\" port 22\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to aaaaaaaaa.bbbbbbb.sas.com [10.23.11.92] port 22.\ndebug1: Connection established.\ndebug1: identity file /u/userid/.ssh/id_rsa type 1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /u/userid/.ssh/id_rsa-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.1\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.1p1 Microsoft_Win32_port_with_VS\ndebug1: match: OpenSSH_7.1p1 Microsoft_Win32_port_with_VS pat OpenSSH* compat 0x04000000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to aaaaaaaaa.bbbbbbb.sas.com:22 as 'userid'\ndebug3: hostkeys_foreach: reading file \"/u/userid/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file /u/userid/.ssh/known_hosts:421\ndebug3: load_hostkeys: loaded 1 keys from aaaaaaaaa.bbbbbbb.sas.com\ndebug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none,zlib@openssh.com,zlib\ndebug2: compression stoc: none,zlib@openssh.com,zlib\ndebug2: languages ctos: \ndebug2: languages stoc: \ndebug2: first_kex_follows 0 \ndebug2: reserved 0 \ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none,zlib@openssh.com\ndebug2: compression stoc: none,zlib@openssh.com\ndebug2: languages ctos: \ndebug2: languages stoc: \ndebug2: first_kex_follows 0 \ndebug2: reserved 0 \ndebug1: kex: algorithm: curve25519-sha256@libssh.org\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug3: send packet: type 30\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug3: receive packet: type 31\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:QUUPbxvXH/5JGCTSzgj1LTzzwHyN/n8AcqC0lnjV1GA\ndebug3: hostkeys_foreach: reading file \"/u/userid/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file /u/userid/.ssh/known_hosts:421\ndebug3: load_hostkeys: loaded 1 keys from aaaaaaaaa.bbbbbbb.sas.com\ndebug3: hostkeys_foreach: reading file \"/u/userid/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file /u/userid/.ssh/known_hosts:422\ndebug3: load_hostkeys: loaded 1 keys from 10.23.11.92\ndebug1: Host 'aaaaaaaaa.bbbbbbb.sas.com' is known and matches the ECDSA host key.\ndebug1: Found key in /u/userid/.ssh/known_hosts:421\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: receive packet: type 21\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: key: /u/userid/.ssh/id_rsa (0x5636f4870a10), explicit, agent\ndebug3: send packet: type 5\ndebug3: receive packet: type 6\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: /u/userid/.ssh/id_rsa\ndebug3: send_pubkey_test\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 60\ndebug1: Server accepts key: pkalg ssh-rsa blen 279\ndebug2: input_userauth_pk_ok: fp SHA256:g/NZaQYcc3Ue5hf+WbTjaQ+g+2HCYFYNWSTPn6qd4QI\ndebug3: sign_and_send_pubkey: RSA SHA256:g/NZaQYcc3Ue5hf+WbTjaQ+g+2HCYFYNWSTPn6qd4QI\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive\ndebug3: remaining preferred: password\ndebug3: authmethod_is_enabled keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug2: userauth_kbdint\ndebug3: send packet: type 50\ndebug2: we sent a keyboard-interactive packet, wait for reply\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: userauth_kbdint: disable: no info_req_seen\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup password\ndebug3: remaining preferred: \ndebug3: authmethod_is_enabled password\ndebug1: Next authentication method: password\nuserid@aaaaaaaaa.bbbbbbb.sas.com's password: \ndebug3: send packet: type 50\ndebug2: we sent a password packet, wait for reply\ndebug3: receive packet: type 52\ndebug1: Authentication succeeded (password).\nAuthenticated to aaaaaaaaa.bbbbbbb.sas.com ([10.23.11.92]:22).\n. Yes, thank you, this works:\nssh userid@domainid@hostname remote-command\n```\nI did find https://github.com/PowerShell/Win32-OpenSSH/wiki/ssh.exe-examples but only after your reply above which prompted me to search for 'domain'. As a (primarily) Linux user where 'domain' is not part of the ssh environment, this is not very obvious, so perhaps the documentation can be clearer. For Win -> Win ssh, most users probably understand this.\nthanks.. Close. Needs the -l option as listed on that page.\nssh.exe -l user@domain host. ",
    "tbxy09": "I got the path issue too while I try to upload the file to git server using git push command, always return a path with the quotes in its error message\n #400 . ",
    "zadjii-msft": "I can't say I've seen anything like this before, or really have any experience with the ssh.exe project.\nSomeone want to give me some more context?. ",
    "prashcr": "If the error message has been modified, it'd be great if someone could link the commit and then this issue can be closed.. ",
    "ywmail": "workaround: change the sshd windows login user to local user may fix this.. ",
    "Sp1l": "Getting this same error on Windows 10 Enterprise x64 with OpenSSH-Win64\nDEBUG3 output:\n7636 13:35:37 977 debug2: signal() sig:2, handler:0000000000000001\n7636 13:35:37 977 debug1: socket:428, io:00000194614F1E40, fd:3 \n7636 13:35:37 977 debug3: w32_fcntl fd:3\n7636 13:35:37 977 debug2: fd 3 setting O_NONBLOCK\n7636 13:35:37 977 debug3: w32_fcntl fd:3\n7636 13:35:37 977 debug3: w32_fcntl fd:3\n7636 13:35:37 977 debug3: w32_setsockopt fd:3\n7636 13:35:37 977 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n7636 13:35:37 977 debug3: w32_setsockopt fd:3\n7636 13:35:37 977 debug1: Bind to port 22 on ::.\n7636 13:35:37 977 debug3: w32_bind fd:3\n7636 13:35:37 977 debug3: w32_listen fd:3\n7636 13:35:37 977 Server listening on :: port 22.\n7636 13:35:37 977 debug1: socket:532, io:00000194614F1EF0, fd:4 \n7636 13:35:37 977 debug3: w32_fcntl fd:4\n7636 13:35:37 977 debug2: fd 4 setting O_NONBLOCK\n7636 13:35:37 977 debug3: w32_fcntl fd:4\n7636 13:35:37 977 debug3: w32_fcntl fd:4\n7636 13:35:37 977 debug3: w32_setsockopt fd:4\n7636 13:35:37 977 debug1: Bind to port 22 on 0.0.0.0.\n7636 13:35:37 977 debug3: w32_bind fd:4\n7636 13:35:37 977 debug3: w32_listen fd:4\n7636 13:35:37 977 Server listening on 0.0.0.0 port 22.\n7636 13:35:37 977 debug2: signal() sig:6, handler:00007FF799C9D7E0\n7636 13:35:37 977 debug2: signal() sig:3, handler:00007FF799C9C470\n7636 13:35:37 977 debug2: signal() sig:8, handler:00007FF799C9D8D0\n7636 13:35:37 977 debug2: signal() sig:7, handler:00007FF799C9D8D0\n7636 13:35:37 977 debug3: w32_select fd:3\n7636 13:35:37 977 debug3: w32_select fd:4\n7636 13:35:37 977 debug3: Total in fds:2\n7636 13:35:37 977 debug2: on_select - io:00000194614F1E40 type:1 rd:1\n7636 13:35:37 977 debug3: acceptEx - io:00000194614F1E40\n7636 13:35:37 977 debug1: acceptEx - AcceptEx() ERROR:22, io:00000194614F1E40\n7636 13:35:37 977 debug2: on_select - io:00000194614F1EF0 type:1 rd:1\n7636 13:35:37 977 debug3: acceptEx - io:00000194614F1EF0\n7636 13:35:37 977 debug3: wait() on 0 events and 0 children\n7636 13:35:37 977 debug3: select - returning 1\n7636 13:35:37 977 debug3: w32_accept fd:3\n7636 13:35:37 977 debug3: accept - io:00000194614F1E40\n7636 13:35:37 977 debug1: accept - ERROR: async io completed with error: -9978, io:00000194614F1E40\n7636 13:35:37 977 error: accept: Unknown error\n7636 13:35:37 977 debug3: w32_select fd:3\n7636 13:35:37 977 debug3: w32_select fd:4\n7636 13:35:37 977 debug3: Total in fds:2\n7636 13:35:37 977 debug2: on_select - io:00000194614F1E40 type:1 rd:1\n7636 13:35:37 977 debug3: acceptEx - io:00000194614F1E40\n7636 13:35:37 977 debug1: acceptEx - AcceptEx() ERROR:22, io:00000194614F1E40\n7636 13:35:37 977 debug2: on_select - io:00000194614F1EF0 type:1 rd:1\n7636 13:35:37 977 debug3: wait() on 0 events and 0 children\n7636 13:35:37 977 debug3: select - returning 1\n7636 13:35:37 977 debug3: w32_accept fd:3\n7636 13:35:37 977 debug3: accept - io:00000194614F1E40\n7636 13:35:37 977 debug1: accept - ERROR: async io completed with error: -9978, io:00000194614F1E40\n7636 13:35:37 977 error: accept: Unknown error\nBefore starting the service I emptied the log, this is from the start to the first repetitive accept: Unknown error.. ",
    "lzhoucs": "I had the same issue with v 0.0.7.0, and this workaround: https://github.com/PowerShell/Win32-OpenSSH/issues/244#issuecomment-239071490 works for me.. ",
    "f0ff886f": "Repros on win32 openssh 0.4.0. ",
    "rogue-admin": "Curious, as we're having the same issue... is the account you're trying to login as a domain account?\n. ",
    "juergenr": "No, its a local account testet on several VMs (with Windows 2012 and Windows 10).\nA step-by-step tutorial with every single step would be very nice (including putty/winscp with public key access).\n. Yes, the client is winscp/putty/ssh on Windows 10. . When I stopped the sshd service on Windows 2012 nothing is listening on port 22 (netstat -a). I've tried all combinations without success\n. ",
    "stephenconnolly1": "Just lost an hour on this one !!\nFor a domain account, and using putty, you must use the full domain\\user@host format when passing in the PVK. for some reason when using password based auth, the server is able to resolve the user domain automatically.. Also check the account hasn't been locked as that can cause  the same error message.. ",
    "rustyx": "For a domain account you must use the format DOMAIN\\username. Your key does not have to be signed.. ",
    "zaufi": "@manojampalam, yes I did. I've added DEBUG as a log level, but the fault happens when sshd is a service, and the host just goes up (by vagrant up). Unfortunately there is no sshd.log file in the sshd.exe directory :(. openssh-7.4_p1\nmy default TERM is konsole-256color, also I tried xterm for sure. I have the similar problem trying to execute ssh commands under TeamCity.. without force PTY allocation (-tt option of ssh) it doesn't work :(  Adding -tt make it works, but output is crappy -- looks like a broken ESC sequences.... What should I add for requested logs? And where to find them?\nWhen I add LogLevel DEBUG to sshd_config file I don't see any logs around... My vagrant image has sshd started as a service (and I don't have GUI access to it).. here is a DEBUG3 log for attempt to execute a cmd script w/o -tt option under TeamCity:\n~~~\n3660 11:32:11 090 error: Error retrieving user environment variables. RegEnumValueW returned 234\n3660 11:32:11 090 debug1: Executing command: C:\\Program Files\\OpenSSH\\ssh-shellhost.exe -nopty Yzpcd29ya1xidWlsZFxydW5fZGVwc19pbnN0YWxsLmNtZA==\n3660 11:32:11 090 debug1: Register child 0000000000000268 pid 4024, 0 zombies of 0\n3660 11:32:11 090 debug3: w32_getsockopt fd:3\n3660 11:32:11 090 debug2: fd 3 setting TCP_NODELAY\n3660 11:32:11 090 debug3: w32_setsockopt fd:3\n3660 11:32:11 090 debug1: close - io:000002DAF7102900, type:2, fd:7, table_index:7\n3660 11:32:11 090 debug2: fileclose - pio:000002DAF7102900\n3660 11:32:11 090 debug1: close - io:000002DAF7100840, type:2, fd:10, table_index:10\n3660 11:32:11 090 debug2: fileclose - pio:000002DAF7100840\n3660 11:32:11 090 debug1: close - io:000002DAF7100290, type:2, fd:12, table_index:12\n3660 11:32:11 090 debug2: fileclose - pio:000002DAF7100290\n3660 11:32:11 090 debug3: w32_fcntl fd:9\n3660 11:32:11 090 debug3: w32_fcntl fd:8\n3660 11:32:11 090 debug3: w32_fcntl fd:11\n3660 11:32:11 090 debug3: w32_fcntl fd:9\n3660 11:32:11 090 debug3: fd 9 is O_NONBLOCK\n3660 11:32:11 090 debug3: w32_fcntl fd:8\n3660 11:32:11 090 debug3: fd 8 is O_NONBLOCK\n3660 11:32:11 090 debug3: w32_fcntl fd:11\n3660 11:32:11 090 debug3: fd 11 is O_NONBLOCK\n3660 11:32:11 090 debug3: send packet: type 99\n3660 11:32:11 090 debug3: w32_select fd:3\n3660 11:32:11 090 debug3: w32_select fd:4\n3660 11:32:11 090 debug3: w32_select fd:9\n3660 11:32:11 090 debug3: w32_select fd:11\n3660 11:32:11 090 debug3: w32_select fd:3\n3660 11:32:11 090 debug3: Total in fds:5\n3660 11:32:11 090 debug2: on_select - io:000002DAF7104E90 type:1 rd:1\n3660 11:32:11 090 debug3: WSARecv - pio: 000002DAF7104E90\n3660 11:32:11 090 debug2: WSARecv - reported IO pending\n3660 11:32:11 090 debug2: on_select - io:000002DAF7104E90 type:1 rd:0\n3660 11:32:11 090 debug2: ReadFileEx io:000002DAF7100790\n3660 11:32:11 090 debug2: ReadFileEx io:000002DAF71001E0\n3660 11:32:11 090 debug3: wait() on 0 events and 1 children\n3660 11:32:11 090 debug3: select - returning 1\n3660 11:32:11 090 debug3: sigprocmask() how:-173017388\n3660 11:32:11 090 debug3: sigprocmask() how:-173017380\n3660 11:32:11 090 debug3: w32_write fd:3\n3660 11:32:11 090 debug2: send - io:000002DAF7104E90\n3660 11:32:11 090 debug2: send - WSASend() returned 0, APC scheduled io:000002DAF7104E90\n3660 11:32:11 090 debug2: WSASendCB - io:000002DAF7104E90, pending_state:1, error:0, sent:72 of remaining:72\n3660 11:32:11 090 debug3: w32_select fd:3\n3660 11:32:11 090 debug3: w32_select fd:4\n3660 11:32:11 090 debug3: w32_select fd:9\n3660 11:32:11 090 debug3: w32_select fd:11\n3660 11:32:11 090 debug3: Total in fds:4\n3660 11:32:11 090 debug2: on_select - io:000002DAF7104E90 type:1 rd:1\n3660 11:32:11 090 debug3: wait() on 0 events and 1 children\n3660 11:32:11 090 debug3: wait() on 0 events and 1 children\n3660 11:32:11 090 debug2: WSARecvCompletionCB - io:000002DAF7104E90, pending_state:1, flags:0, error:0, received:36\n3660 11:32:11 090 debug3: select - returning 1\n3660 11:32:11 090 debug3: sigprocmask() how:-173017388\n3660 11:32:11 090 debug3: sigprocmask() how:-173017380\n3660 11:32:11 090 debug3: w32_read fd:3\n3660 11:32:11 090 debug3: recv - io:000002DAF7104E90\n3660 11:32:11 090 debug2: recv - returning 36 bytes from prior completed IO, remaining:0, io:000002DAF7104E90\n3660 11:32:11 090 debug3: receive packet: type 96\n3660 11:32:11 090 debug2: channel 0: rcvd eof\n3660 11:32:11 090 debug2: channel 0: output open -> drain\n3660 11:32:11 090 debug2: channel 0: obuf empty\n3660 11:32:11 090 debug2: channel 0: close_write\n3660 11:32:11 090 debug1: close - io:000002DAF71006E0, type:2, fd:8, table_index:8\n3660 11:32:11 090 debug2: fileclose - pio:000002DAF71006E0\n3660 11:32:11 090 debug2: channel 0: output drain -> closed\n3660 11:32:11 090 debug3: w32_select fd:3\n3660 11:32:11 090 debug3: w32_select fd:4\n3660 11:32:11 090 debug3: w32_select fd:9\n3660 11:32:11 090 debug3: w32_select fd:11\n3660 11:32:11 090 debug3: Total in fds:4\n3660 11:32:11 090 debug2: on_select - io:000002DAF7104E90 type:1 rd:1\n3660 11:32:11 090 debug3: WSARecv - pio: 000002DAF7104E90\n3660 11:32:11 090 debug2: WSARecv - reported IO pending\n3660 11:32:11 090 debug3: wait() on 0 events and 1 children\n3660 11:32:11 090 debug3: wait() on 0 events and 1 children\n3660 11:32:11 121 debug2: ReadCB pio:000002DAF7100790, pending_state:1, error:109, received:0\n3660 11:32:11 121 debug2: ReadCB pio:000002DAF71001E0, pending_state:1, error:109, received:0\n3660 11:32:11 121 debug3: select - returning 2\n3660 11:32:11 121 debug3: sigprocmask() how:-173017388\n3660 11:32:11 121 debug3: sigprocmask() how:-173017380\n3660 11:32:11 121 debug3: w32_read fd:9\n3660 11:32:11 121 debug3: read - io:000002DAF7100790 remaining:0\n3660 11:32:11 121 debug2: read - (2) no more data, io:000002DAF7100790\n3660 11:32:11 121 debug2: channel 0: read<=0 rfd 9 len 0\n3660 11:32:11 121 debug2: channel 0: read failed\n3660 11:32:11 121 debug2: channel 0: close_read\n3660 11:32:11 121 debug1: close - io:000002DAF7100790, type:2, fd:9, table_index:9\n3660 11:32:11 121 debug2: fileclose - pio:000002DAF7100790\n3660 11:32:11 121 debug2: channel 0: input open -> drain\n3660 11:32:11 121 debug3: w32_read fd:11\n3660 11:32:11 121 debug3: read - io:000002DAF71001E0 remaining:0\n3660 11:32:11 121 debug2: read - (2) no more data, io:000002DAF71001E0\n3660 11:32:11 121 debug2: channel 0: read 0 from efd 11\n3660 11:32:11 121 debug2: channel 0: closing read-efd 11\n3660 11:32:11 121 debug1: close - io:000002DAF71001E0, type:2, fd:11, table_index:11\n3660 11:32:11 121 debug2: fileclose - pio:000002DAF71001E0\n3660 11:32:11 121 debug2: channel 0: ibuf empty\n3660 11:32:11 121 debug2: channel 0: send eof\n3660 11:32:11 121 debug3: send packet: type 96\n3660 11:32:11 121 debug2: channel 0: input drain -> closed\n3660 11:32:11 121 debug3: w32_select fd:3\n3660 11:32:11 121 debug3: w32_select fd:4\n3660 11:32:11 121 debug3: w32_select fd:3\n3660 11:32:11 121 debug3: Total in fds:3\n3660 11:32:11 121 debug2: on_select - io:000002DAF7104E90 type:1 rd:1\n3660 11:32:11 121 debug2: on_select - io:000002DAF7104E90 type:1 rd:0\n3660 11:32:11 121 debug3: wait() on 0 events and 1 children\n3660 11:32:11 121 debug3: select - returning 1\n3660 11:32:11 121 debug3: sigprocmask() how:-173017388\n3660 11:32:11 121 debug3: sigprocmask() how:-173017380\n3660 11:32:11 121 debug3: w32_write fd:3\n3660 11:32:11 121 debug2: send - io:000002DAF7104E90\n3660 11:32:11 121 debug2: send - WSASend() returned 0, APC scheduled io:000002DAF7104E90\n3660 11:32:11 121 debug2: WSASendCB - io:000002DAF7104E90, pending_state:1, error:0, sent:36 of remaining:36\n3660 11:32:11 121 debug3: w32_select fd:3\n3660 11:32:11 121 debug3: w32_select fd:4\n3660 11:32:11 121 debug3: Total in fds:2\n3660 11:32:11 121 debug2: on_select - io:000002DAF7104E90 type:1 rd:1\n3660 11:32:11 121 debug3: wait() on 0 events and 1 children\n3660 11:32:11 121 debug1: zombie'ing child at index 0, 0 zombies of 1\n3660 11:32:11 121 debug3: process_signals()\n3660 11:32:11 121 debug1: raise sig:3\n3660 11:32:11 121 debug2: signal() sig:3, handler:00007FF78C653400\n3660 11:32:11 121 debug3: w32_write fd:6\n3660 11:32:11 121 debug2: write - io:000002DAF7118B80\n3660 11:32:11 121 debug2: ReadCB pio:000002DAF70E1AD0, pending_state:1, error:0, received:1\n3660 11:32:11 121 debug2: WriteCB - pio:000002DAF7118B80, pending_state:1, error:0, transferred:1 of remaining: 1\n3660 11:32:11 121 debug2: write - reporting 1 bytes written, io:000002DAF7118B80\n3660 11:32:11 121 debug1: process_queued_signals: WARNING - A signal has interrupted and was processed\n3660 11:32:11 121 debug3: sigprocmask() how:-173017388\n3660 11:32:11 121 debug1: Received SIGCHLD.\n3660 11:32:11 121 debug3: waitpid - pid:-1, options:1\n3660 11:32:11 121 debug1: Unregister child at index 0, 1 zombies of 1\n3660 11:32:11 121 debug1: session_by_pid: pid 4024\n3660 11:32:11 121 debug1: session_exit_message: session 0 channel 0 pid 4024\n3660 11:32:11 121 debug2: channel 0: request exit-status confirm 0\n3660 11:32:11 121 debug3: send packet: type 98\n3660 11:32:11 121 debug1: session_exit_message: release channel 0\n3660 11:32:11 121 debug3: waitpid - pid:-1, options:1\n3660 11:32:11 121 debug3: sigprocmask() how:-173017380\n3660 11:32:11 121 debug2: channel 0: send close\n3660 11:32:11 121 debug3: send packet: type 97\n3660 11:32:11 121 debug3: channel 0: will not send data after close\n3660 11:32:11 121 debug3: w32_select fd:3\n3660 11:32:11 121 debug3: w32_select fd:4\n3660 11:32:11 121 debug3: w32_select fd:3\n3660 11:32:11 121 debug3: Total in fds:3\n3660 11:32:11 121 debug2: on_select - io:000002DAF7104E90 type:1 rd:1\n3660 11:32:11 121 debug2: on_select - io:000002DAF7104E90 type:1 rd:0\n3660 11:32:11 121 debug3: wait() on 0 events and 0 children\n3660 11:32:11 121 debug3: select - returning 2\n3660 11:32:11 121 debug3: w32_read fd:4\n3660 11:32:11 121 debug3: read - io:000002DAF70E1AD0 remaining:1\n3660 11:32:11 121 debug2: read - io:000002DAF70E1AD0 read: 1 remaining: 0\n3660 11:32:11 121 debug2: notify_done: reading\n3660 11:32:11 121 debug3: w32_read fd:4\n3660 11:32:11 121 debug3: read - io:000002DAF70E1AD0 remaining:0\n3660 11:32:11 121 debug2: ReadFileEx io:000002DAF70E1AD0\n3660 11:32:11 121 debug2: read - IO is pending, io:000002DAF70E1AD0\n3660 11:32:11 121 debug3: sigprocmask() how:-173017388\n3660 11:32:11 121 debug3: sigprocmask() how:-173017380\n3660 11:32:11 121 debug3: w32_write fd:3\n3660 11:32:11 121 debug2: send - io:000002DAF7104E90\n3660 11:32:11 121 debug2: send - WSASend() returned 0, APC scheduled io:000002DAF7104E90\n3660 11:32:11 121 debug2: WSASendCB - io:000002DAF7104E90, pending_state:1, error:0, sent:88 of remaining:88\n3660 11:32:11 121 debug3: channel 0: will not send data after close\n3660 11:32:11 121 debug3: w32_select fd:3\n3660 11:32:11 121 debug3: w32_select fd:4\n3660 11:32:11 121 debug3: Total in fds:2\n3660 11:32:11 121 debug2: on_select - io:000002DAF7104E90 type:1 rd:1\n3660 11:32:11 121 debug3: wait() on 0 events and 0 children\n3660 11:32:11 121 debug3: wait() on 0 events and 0 children\n3660 11:32:11 168 debug2: WSARecvCompletionCB - io:000002DAF7104E90, pending_state:1, flags:0, error:0, received:36\n3660 11:32:11 168 debug3: select - returning 1\n3660 11:32:11 168 debug3: sigprocmask() how:-173017388\n3660 11:32:11 168 debug3: sigprocmask() how:-173017380\n3660 11:32:11 168 debug3: w32_read fd:3\n3660 11:32:11 168 debug3: recv - io:000002DAF7104E90\n3660 11:32:11 168 debug2: recv - returning 36 bytes from prior completed IO, remaining:0, io:000002DAF7104E90\n3660 11:32:11 168 debug3: receive packet: type 97\n3660 11:32:11 168 debug2: channel 0: rcvd close\n3660 11:32:11 168 debug3: channel 0: will not send data after close\n3660 11:32:11 168 debug2: channel 0: is dead\n3660 11:32:11 168 debug2: channel 0: gc: notify user\n3660 11:32:11 168 debug1: session_by_channel: session 0 channel 0\n3660 11:32:11 168 debug1: session_close_by_channel: channel 0 child 0\n3660 11:32:11 168 Close session: user ci.builder from 10.0.2.2 port 42086 id 0\n3660 11:32:11 168 debug3: session_unused: session id 0 unused\n3660 11:32:11 168 debug2: channel 0: gc: user detached\n3660 11:32:11 168 debug2: channel 0: is dead\n3660 11:32:11 168 debug2: channel 0: garbage collecting\n3660 11:32:11 168 debug1: channel 0: free: server-session, nchannels 1\n3660 11:32:11 168 debug3: channel 0: status: The following connections are open:\\r\\n  #0 server-session (t4 r0 i3/0 o3/0 fd -1/-1 cc -1)\\r\\n\n3660 11:32:11 168 debug3: w32_select fd:3\n3660 11:32:11 168 debug3: w32_select fd:4\n3660 11:32:11 168 debug3: Total in fds:2\n3660 11:32:11 168 debug2: on_select - io:000002DAF7104E90 type:1 rd:1\n3660 11:32:11 168 debug3: WSARecv - pio: 000002DAF7104E90\n3660 11:32:11 168 debug2: WSARecv - WSARecv() returned 0, io:000002DAF7104E90\n3660 11:32:11 168 debug3: wait() on 0 events and 0 children\n3660 11:32:11 168 debug2: WSARecvCompletionCB - io:000002DAF7104E90, pending_state:1, flags:0, error:0, received:60\n3660 11:32:11 168 debug3: select - returning 1\n3660 11:32:11 168 debug3: sigprocmask() how:-173017388\n3660 11:32:11 168 debug3: sigprocmask() how:-173017380\n3660 11:32:11 168 debug3: w32_read fd:3\n3660 11:32:11 168 debug3: recv - io:000002DAF7104E90\n3660 11:32:11 168 debug2: recv - returning 60 bytes from prior completed IO, remaining:0, io:000002DAF7104E90\n3660 11:32:11 168 debug3: receive packet: type 1\n3660 11:32:11 168 Received disconnect from 10.0.2.2 port 42086:11: disconnected by user\n3660 11:32:11 168 Disconnected from user ci.builder 10.0.2.2 port 42086\n3660 11:32:11 168 debug1: do_cleanup\n~~~. here is ssh-agent.log for that connection:\n~~~\n1360 11:31:53 359 agent_start pid:1360, dbg:0, child:0, pipe:0                                                                                                                               \n1360 11:32:10 418 client pid 3660 connected                                                                                                                                                  \n1360 11:32:10 418 debug1: spawned worker 3948 for agent client pid 3660                                                                                                                      \n3948 11:32:10 434 agent_start pid:3948, dbg:0, child:1, pipe:472                                                                                                                             \n3948 11:32:10 434 debug3: connection io 000001607F83A5D0 #bytes:0 state:0                                                                                                                    \n3948 11:32:10 480 debug3: connection io 000001607F83A5D0 #bytes:4 state:1                                                                                                                    \n3948 11:32:10 480 debug3: connection io 000001607F83A5D0 #bytes:324 state:2                                                                                                                  \n3948 11:32:10 480 debug2: client type: 3                                                                                                                                                     \n3948 11:32:10 480 debug1: process agent request type 200                                                                                                                                     \n3948 11:32:10 496 debug3: LsaLogonUser succeeded                                                                                                                                             \n3948 11:32:10 496 debug1: trying public key file C:\\Users\\ci.builder/.ssh/authorized_keys                                                                                                  \n3948 11:32:10 496 debug1: matching key found: file C:\\Users\\ci.builder/.ssh/authorized_keys, line 1 ED25519 SHA256:boNeGNdbrNacu1b0gq1qbnISyiSS7hrz7UfnZlDLpi0                             \n3948 11:32:11 028 debug3: connection io 000001607F83A5D0 #bytes:8 state:3                                                                                                                    \n3948 11:32:11 168 debug1: iocp error: 109 on 000001607F83A5D0 \\n                                                                                                                             \n3948 11:32:11 168 debug1: connection 000001607F83A5D0 clean up                                                                                                                               \n3948 11:32:11 544 debug1: iocp error: 6 on 0000000000000000 \\n                                                                                                                               \n1360 11:32:17 942 debug1: Native Ctrl+C handler, CtrlType 6 \n~~~. In the log above, I've tried version 0.0.9.0. Version 0.0.10.0 doesn't work as well . In both cases with or without -tt option.\nSo, I rollback to 0.0.8.0 which at least works with -tt.. ",
    "csawyerYumaed": "While fancy stuff like RDP is interesting, I'd much rather that just bog standard -X worked, assuming an X11 server installed like vcxsrv or xming and the like. PuTTY manages.. ",
    "FranklinYu": "So VcXsrv is not supported by this version of Portable OpenSSH right? What a pity, it works so great with PuTTY. So it is too early to uninstall PuTTY in favor of OpenSSH?. @fpqc VcXsrv is exactly the \u201clocal X server\u201d you mentioned, and it works with PuTTY. I didn\u2019t mean that Portable OpenSSH should come with an X server (not sure whether that is a good idea), but it should support existing local X server (Xming or VcXsrv).. @fpqc Sorry I got confused. In your case the remote machine is Windows, but in my case the remote is a Linux, right?. Then we are talking about the exact same scenario, and I have not explained it well.\nbackground\nI know some basic concept about SSH connection, but I have no idea how X-Forwarding works.\nMy remote is a Linux VM, with some GUI application installed. My local machine is Windows, with Portable OpenSSH (aka Win32-OpenSSH) installed. X server is also installed in local Windows machine, that is the \u201cVcXsrv\u201d I mentioned.\nPortable OpenSSH story\nI started the local X server on Windows on localhost:0.0, then ran\nbash\nDISPLAY=localhost:0.0 ssh -X franklinyu-linux\nI expected this to \u201cjust work\u201d, but in the SSH session, DISPLAY is empty. I started xclock to test; it complained that DISPLAY is not set. I manually set export DISPLAY=franklinyu-windows, then xclock said something like \u201cX authentication failure\u201d.1 I suppose that authentication information should be forwarded by the SSH client (Portable OpenSSH in this case). I quit the session and started another with verbose flag; I saw something like \u201cauthentication failed\u201d at the beginning.\n1. I\u2019m not with my machine now, sorry. I may find the exact message tomorrow.\nother experiments\nI tried PuTTY (because there is many tutorials for PuTTY + VcXsrv). Simply replacing OpenSSH with PuTTY worked (PuTTY need to be told about $DISPLAY and X forwarding, of course), with all the other building blocks (X server, remote Linux) unchanged. This is my current solution, but I really prefer this project over PuTTY, for obvious reason.\nI tried (temporarily) disabling authentication in my local X server (VcXsrv). After that I manually set $DISPLAY environment variable, then it worked: all my GUI application were able to be started from SSH session. However, in this case I suppose there is no X Forwarding, and there may be security concern.. Currently my work-around is to specify it in %USERPROFILE%\\.ssh\\config, but it would be greatly appreciated if it can default to short name when I'm using the client.. Shall we mention it in Wiki? Or it is but I missed it?. Is that one lagged behind? According to the blog, it only supports ED25519, so no RSA key.. Unicode support is broken (recently) and it's easy to reproduce. SSH into any Linux with Bash 4.2 or later, then\nbash\necho -e '\\u2620'\nExpected to see Skull and Crossbones (\u2620), but saw \u0393\u00ff\u00e1.. @bagajjal If I understand correctly, both PowerShell Core and WSL Bash run on conhost.exe (Console Windows Host). I tried Latin Small Letter C with Acute (\u0107) on both of them and they display only one character (even though the font does not support that character). On SSH client it displays two, so I don't think Console Windows Host plays a role here.. @fungtion Keywords:\n \u201cVcXsrv\u201d\n \u201cExtra settings\u201d\n* \u201cDisable access control\u201d\nI didn\u2019t went into details about that in this issue because it is specific to VcXsrv, not something the PowerShell team should care about. In addition, it has very strong security implication, so don\u2019t do it unless you understand the consequence.. @Kukunin In your case, is X11 authentication enable in VcXsrv?. This does work in my machine:\n\nSSH to Linux.\nRun sleep 10.\nBefore it wake up, hit CTRL + C.\n\nI see that the program sleep terminated. Is this what you want?. Probably related to #1178.. @bagajjal Updated.. Works for me. @MathiasMagnus please confirm.. @bagajjal Shall we leave this issue open until next release? Not familiar with the workflow here.. @bingbing8 Do we have a new release? Or is this already available in latest release?. Confirm that it works in v7.9.0.0p1-Beta. Thanks!. If I use a build introduced in PowerShell/openssh-portable#338 then PowerShell 5.1 is also affected. Shall this hold that PR back?. @bagajjal PuTTY and the SSH from Git Bash works with the same servers without issue. If you are not able to reproduce it, would you like a Vagrantfile showing the issue? I can try to come up with one.\nThere is some interesting issue with one of the servers. Part of MotD is duplicated. Not sure if this helps debugging.. ",
    "TyrionLanister": "I'm not able to  connect localhost in windows using public key authentication with latest win32 sshd release.  It also failed with last  release of v0.0.3.0. So it may not be bug at all \nCan any one help with me with issue. There are no other installation of sshd in cygwin.\nLogs from sshd.log for command ssh localhost\n\n8580 06:34:35 514 error: getsockname failed: Bad address\n8580 06:34:35 723 Postponed publickey for DESKTOP-IQQAVUN\\user from :: port 50861 ssh2\n8580 06:34:35 740 Failed publickey for DESKTOP-IQQAVUN\\user from :: port 50861 ssh2: RSA SHA256:mBonigwRKYfjifS4mpr9IHen2GO604peNTE0UFCU0TY\n\nI didnt type the password so failures from keyboard failures are genuine.\n\n8580 06:34:35 741 Failed keyboard-interactive for DESKTOP-IQQAVUN\\user from :: port 50861 ssh2\n8580 06:34:37 104 Failed password for DESKTOP-IQQAVUN\\user from :: port 50861 ssh2\n8580 06:34:37 104 error: maximum authentication attempts exceeded for DESKTOP-IQQAVUN\\user from :: port 50861 ssh2\n8580 06:34:37 104 Disconnecting: Too many authentication failures. ssh user@localhost works for me  with public key authentication but why I cant just\nssh localhost.\nI see that with ssh localhost, the sshd server  sees \"DESKTOP-IQQAVUN/user\" as different account than \"user\"\nIt's not able to sense hostname of my computer.\nso it mistakenly accepts username from ssh localhost command as  \"DESKTOP-IQQAVUN/user\".\n\nIf you see at above log for failed  authentication \n\n8580 06:34:37 104 Failed password for DESKTOP-IQQAVUN\\user from :: port 50861 ssh2\n\n& log for successfull attempt \n\nAccepted publickey for user from :: port 50568 ssh2\n\nCan anyone explain it to me @quamrulmina @michaeltlombardi  @manojampalam @arif-pragmasys\nHow is it possible to add \"hostname\" into the config file so that ssh localhost works . ",
    "mochtu": "Thanks for hijacking this thread @TyrionLanister. I think you should have opened your own issue\u2026. @msnelling Not at all. Password authentication is fine, public key fails and the only debug output related to it is the one printed in my initial post. I'm using cygwin and openssh in the meantime, which works as expected with an rsa key.. @DarwinJS Thank you, it is fixed now for me.. ",
    "msnelling": "@mochtu I'm also having issues with public key authentication. Have you made any progress?. @arif-pragmasys yes I've done this without success.. ",
    "KJTsanaktsidis": "I had a swing at hacking at this on my computer, because I wanted to get this working. I added the following to enter_raw_mode in sshtty.c\nDWORD curMode;\n        HANDLE hOutputConsole = GetStdHandle(STD_OUTPUT_HANDLE);\n        if (hOutputConsole == INVALID_HANDLE_VALUE) {\n            exit(1); return;\n        }\n        if (!GetConsoleMode(hOutputConsole, &curMode)) {\n            exit(1); return;\n        }\n        if (!SetConsoleMode(hOutputConsole, curMode | 0x4)) {\n            exit(1); return;\n        }\nIt appeared to have no effect - processes like htop & nano inside the ssh session (where $TERM was set to xterm) would not display correctly. I'm using Windows build 1607, so my conhost should support rendering xterm sequences when ENABLE_VIRTUAL_TERMINAL_PROCESSING is set?. Also it looks like the input console STD_INPUT_HANDLE is getting ENABLE_VIRTUAL_TERMINAL_PROCESSING applied to it in console.c - the docs seem to suggest that's only valid for output?. No dice - I made sure I was compiling against the 1607 SDK, and made the following hacks to console.c\n```\ndiff --git a/contrib/win32/win32compat/console.c b/contrib/win32/win32compat/console.c\nindex 6bb31e0..78f4dc2 100644\n--- a/contrib/win32/win32compat/console.c\n+++ b/contrib/win32/win32compat/console.c\n@@ -35,6 +35,7 @@\n  \n/\n+#define DEFINE_CONSOLEV2_PROPERTIES\n #include \n #include \n #include \n@@ -43,11 +44,12 @@\n #include \n#ifndef ENABLE_VIRTUAL_TERMINAL_PROCESSING\n-#define ENABLE_VIRTUAL_TERMINAL_PROCESSING  0x4\n+#define AAAA_ENABLE_VIRTUAL_TERMINAL_PROCESSING  0x4\n #endif\nHANDLE hOutputConsole = NULL;\n-DWORD  dwSavedAttributes = 0;\n+DWORD  dwSavedInputAttributes = 0;\n+DWORD   dwSavedOutputAttributes = 0;\n WORD   wStartingAttributes = 0;\nint ScreenX;\n@@ -80,7 +82,8 @@ PSCREEN_RECORD pSavedScreenRec = NULL;\n int ConInit( DWORD OutputHandle, BOOL fSmartInit )\n {\n     OSVERSIONINFO os;\n-    DWORD dwAttributes = 0;\n+    DWORD dwInputAttributes = 0;\n+    DWORD dwOutputAttributes = 0;\n     DWORD dwRet = 0;\n     CONSOLE_SCREEN_BUFFER_INFO csbi;\n     static bool bFirstConInit = true;\n@@ -95,23 +98,33 @@ int ConInit( DWORD OutputHandle, BOOL fSmartInit )\n         return dwRet;\n     }\n\nif (!GetConsoleMode(GetStdHandle(STD_INPUT_HANDLE), &dwSavedAttributes)) {\nif (!GetConsoleMode(GetStdHandle(STD_INPUT_HANDLE), &dwSavedInputAttributes)) {\n         dwRet = GetLastError();\nprintf(\"GetConsoleMode failed with %d\\n\", GetLastError());\nprintf(\"GetConsoleMode (STD_INPUT_HANDLE) failed with %d\\n\", GetLastError());\nreturn dwRet;\n}\nif (!GetConsoleMode(hOutputConsole, &dwSavedOutputAttributes)) {\ndwRet = GetLastError();\n\nprintf(\"GetConsoleMode (STD_OUTPUT_HANDLE) failed with %d\\n\", GetLastError());\n         return dwRet;\n     }\n\n\ndwAttributes = dwSavedAttributes;\n\ndwAttributes &= ~(ENABLE_LINE_INPUT |\ndwInputAttributes = dwSavedInputAttributes;\ndwInputAttributes &= ~(ENABLE_LINE_INPUT |\n             ENABLE_ECHO_INPUT | ENABLE_PROCESSED_INPUT | ENABLE_MOUSE_INPUT);\ndwAttributes |= ENABLE_WINDOW_INPUT;\n\ndwInputAttributes |= ENABLE_WINDOW_INPUT;\nchar *term = getenv(\"TERM\");\n\n\nif (term != NULL && (_stricmp(term, \"ansi\") == 0 || _stricmp(term, \"passthru\") == 0))\n\ndwAttributes |= (DWORD)ENABLE_VIRTUAL_TERMINAL_PROCESSING;\nif (term != NULL) {\ndwInputAttributes |= (DWORD)ENABLE_VIRTUAL_TERMINAL_PROCESSING;\ndwOutputAttributes |= (DWORD)ENABLE_VIRTUAL_TERMINAL_PROCESSING;\ndwOutputAttributes |= (DWORD)DISABLE_NEWLINE_AUTO_RETURN;\nprintf(\"Setting modes: %x %x\", dwInputAttributes, dwOutputAttributes);\n\n}\n\n\nSetConsoleMode(GetStdHandle(STD_INPUT_HANDLE), dwAttributes); // Windows NT\n\nSetConsoleMode(GetStdHandle(STD_INPUT_HANDLE), dwInputAttributes); // Windows NT\n\nSetConsoleMode(hOutputConsole, dwOutputAttributes);\nConSetScreenX();\n ConSetScreenY();\n@@ -139,7 +152,8 @@ int ConUnInit( void )\n if (!GetConsoleScreenBufferInfo(hOutputConsole, &ConsoleInfo))\n     return 0;\n\n\nSetConsoleMode(hOutputConsole, dwSavedAttributes);\n\nSetConsoleMode(GetStdHandle(STD_INPUT_HANDLE), dwSavedInputAttributes);\n\nSetConsoleMode(hOutputConsole, dwSavedOutputAttributes);\nreturn 0;\n }\n@@ -160,7 +174,7 @@ int ConUnInitWithRestore( void )\n if (!GetConsoleScreenBufferInfo(hOutputConsole, &ConsoleInfo))\n     return 0;\n\n\nSetConsoleMode(hOutputConsole, dwSavedAttributes);\n\n\nSetConsoleMode(hOutputConsole, dwSavedOutputAttributes);\nCoord = ConsoleInfo.dwCursorPosition;\n Coord.X = 0;\n```\n\n\nThis all works fine when using ssh from the windows subsystem for linux, so the console is definitely capable, I just can't seem to kick it into the right mode.... Never mind, I think I actually understand what is going on here now - ssh.exe is doing a bunch of its own processing on the stream it gets from the network to interpret control characters itself, so most of them never even get seen by the console. I guess it needs refactoring to pipe all VT200 escape sequences straight into the console, rather than interpreting them itself.. ",
    "biao-w": "@bagajjal I am experiencing the same issue @alexchandel mentioned above. Basically VIM is unusable from a Mac->Win10 (1803) ssh session. \nI did 'export TERM=xterm' before ssh. Default shell is powershell.\nVIM version is: VIM - Vi IMproved 8.0 (2016 Sep 12, compiled Apr 23 2017 19:48:19) \nPerhaps you or someone can re- open this issue?. ",
    "trodemaster": "I'm also seeing this issue on a fresh install of openssh with macOS 10.12.2 . I have tried changing the terminal type to vt100 and still seeing the issue. . ",
    "Azq2": "Same issue on gnome terminal (ubuntu 14.04) :(. ",
    "tomrittervg": "I also experience this with a few additions:\n - If I open zsh  =from cmd or powershell after SSH-ing, I experience the problem\n - If I run powershell, then a docker container, and paste into the docker container I get the entire value of the clipboard... except some of the characters get replaced with '?' similar to #300. ",
    "cbhacking": "SSH doesn't seem to support forwarding files (things that use the file APIs, including *nix FIFOs/named pipes and Windows named pipes). This is awkward, since Windows named pipes really are NT's equivalent of Unix domain sockets. \nThere ought to be a way to connect to pipes (Unix or Windows) using file APIs on the remote end, but I don't know of one.. Two questions:\n1. If the user connects over SSH using password auth, does this unlock DPAPI/EFS/etc. in the remote session?\n2. Would it be possible to add a way to pass the password (for DPAPI, etc.) over public key auth session? Most of the time I'm using public key auth I don't want my password on the wire in any form, but given that Windows actually uses it a fair bit, a remote login that doesn't support unlocking stuff that requires the user's password is a lot less useful than one that does.\n. ",
    "rmenessec": "I'm unable to run PSEXEC due to security constraints that require LanManServer to be disabled. Is it possible to store the sshd host keys in Credential Manager / Windows Vault somehow, possibly via PowerShell?\nThanks!. ",
    "grv87": "schtasks under Windows 2008 SP2 don't have /Run /I argument. So I have ERROR: Invalid argument/option - '/I' during install.. Maybe. But the call is still there in Chocolatey installation script.\nI run it with:\nchoco install openssh --version=7.6.0.1 --params='\"/SSHServerFeature /PathSpecsToProbeForShellEXEString:$Env:ProgramFiles\\PowerShell*\\Powershell.exe;$Env:SystemRoot\\system32\\windowspowershell\\v1.0\\powershell.exe /SSHDefaultShellCommandOption:/c\"' --yes --stop-on-first-failure. ",
    "seanpoulter": "I've been keeping an eye on this for quite a while and am excited by the work. It's come up a few times talking to folks about the project -- any guess-estimates when this'll be \"production\" ready? Thanks!. Thanks @bagajjal.. ",
    "jbaumbach": "Same issue here.  Windows Server 2016 Datacenter v1607 running in Azure.\n```PS C:\\openssh> $PSVersionTable.PSVersion\nMajor  Minor  Build  Revision\n\n5      1      14393  576\n```\n. @manojampalam The service doesn't appear to be starting regardless of what permissions I apply to the logs folder.  This is in the event log:\nThe application-specific permission settings do not grant Local Activation permission for the COM Server application with CLSID \n{D63B10C5-BB46-4990-A94F-E40B9D520160}\n and APPID \n{9CA88EE3-ACB7-47C8-AFC4-AB702511C276}\n to the user NT SERVICE\\sshd SID (S-1-5-80-3847866527-469524349-687026318-516638107-1125189541) from address LocalHost (Using LRPC) running in the application container Unavailable SID (Unavailable). This security permission can be modified using the Component Services administrative tool.\n. @manojampalam I'll be honest, I realized I was trying to fit a square peg in a round hole after mucking around in the registry, and just stood up an Ubuntu instance.  SFTP up and running in 5 minutes.   :(. ",
    "mathieu68468": "I have the same issue, the server's logs indicate:\n6320 19:17:31 597 debug1: Bind to port 22 on ::.\n6320 19:17:31 597 Server listening on :: port 22.\n6320 19:17:31 597 debug1: socket:364, io:00000000003E8E60, fd:4 \n6320 19:17:31 597 debug1: Bind to port 22 on 0.0.0.0.\n6320 19:17:31 597 Server listening on 0.0.0.0 port 22.\n6320 19:17:50 875 debug1: socket:376, io:00000000003CDC00, fd:5 \n6320 19:17:50 875 debug1: pipe - r-h:380,io:00000000003CDCB0,fd:6  w-h:384,io:00000000003CDD60,fd:7\n6320 19:17:50 875 debug1: spawning C:\\Program Files\\OpenSSH\\\"C:\\Program Files\\OpenSSH\\sshd.exe\"\n6320 19:17:50 876 debug1: close - io:00000000003CDC00, type:1, fd:5, table_index:5\n6320 19:17:50 876 error: fork: No such file or directory\n6320 19:17:50 876 debug1: close - io:00000000003CDD60, type:2, fd:7, table_index:7\n6320 19:17:50 877 debug1: ReadFileEx() ERROR:109, io:00000000003CDCB0\n6320 19:17:50 877 debug1: close - io:00000000003CDCB0, type:2, fd:6, table_index:6\n6320 19:18:50 130 debug1: Native Ctrl+C handler, CtrlType 0\n6320 19:18:50 130 debug1: raise sig:0\nSshd is installed on \"C:\\Program Files\\OpenSSH\". ",
    "tsatsulin": "Hi Manoj,\nThank you for quick and detailed answer.\n\nThey are however network logon sessions and do not have user's credentials attached.\n\nAs I can see, they don't need to have it attached. From MSDN:\n\nDPAPI initially generates a strong key called a MasterKey, which is protected by the user's password. DPAPI uses a standard cryptographic process called Password-Based Key Derivation, described in PKCS #5, to generate a key from the password. This password-derived key is then used with Triple-DES to encrypt the MasterKey, which is finally stored in the user's profile directory.\nUser profile is guaranteed to be loaded for the duration of the session.\n\nUnfortunately, I have not found the place in the code where this happens. Could you please point me to the code?\nAlso, searching for \"impersonation\" term I have found the function LoadUserProfile and in the remarks I see:\n\nWhen a user logs on interactively, the system automatically loads the user's profile. If a service or an application impersonates a user, the system does not load the user's profile. Therefore, the service or application should load the user's profile with LoadUserProfile.\n. Found. Thank you. I will check how it works and write back. Please do not close this issue.. \n",
    "challarao": "@manojampalam Hello Manoj,\nThis issue seems to be related to an issue I am facing. Correct me if I'm wrong. If I logon via SSH with a user that is not the user specified in Log On tab of sshd windows service, and if I try to invoke cmdkey to list the Credential Manager keys, it would return empty list. Do you think it's due to network logon as well. But note that if I use the same user that is specified in Log On tab, it would work fine. \nThank you. ",
    "drodsou": "Hi arif-pragmasys,\nI am assuming all your hosts are Windows.\nCould it be a firewall problem?. Be aware that localhost is \"my computer seen from the outside\", like 0.0.0.0, affected by firewall rules, while 127.0.0.1 is \"my computer seen from the inside\", not affected by firewall rules. So maybe this should work in your first scenario:\nIhost2 executes:\nssh -p 9001 user@127.0.0.1\nOr you can check  if port 9001 is open in \"incoming rules\" in the Windows firewall/advanced in Host2, as Win32-OpenSSH installation instructions here on Github only open port 22 by default -also you can shut off all the firewall for a moment and test the tunnels again to verify\nRegards. ",
    "gsoing": "Hello,\nI have the same error when i try to log in with a ssh client.\nOn the client side i've got connection reset by peer and on the server log i have : 8196 10:03:42 088 error: setsockopt SO_KEEPALIVE: Filename too long\nBut if i launch sshd with -d option it works.\nRegards\nGuillaume. ",
    "frederik12345": "Some people often view Long path tool as spam and not working but I already use it many times and it always work . I have the same problem and only Long path tool helped me. So I would suggest to use it . . ",
    "remittor": "Fix: https://github.com/PowerShell/openssh-portable/pull/45. See this place: https://github.com/PowerShell/openssh-portable/blob/5ad8a2c3580ce0bfcf1f81c11b7641235dfcdfea/log.c#L447. Not fixed!\nProof: https://github.com/PowerShell/openssh-portable/pull/117. Bugfix: https://github.com/PowerShell/openssh-portable/pull/137. For reproduce line scroll bug:\n1) set window height to 5 symbols (use putty or bitvise)\n2) connect to remote sshd-win32\n3) type \"ipconfig\" or \"quser\"\nTest OpenSSH 0.0.13.0 on Win2012R2 x64 (use Bitvise):\n- quser: https://cloud.githubusercontent.com/assets/9350115/26026251/a01edcf2-3800-11e7-8888-33098d410b56.gif\n- ipconfig: https://cloud.githubusercontent.com/assets/9350115/26026258/c1fc6452-3800-11e7-94f0-90e2622aad00.gif. OpenSSH 0.0.13.0 tests on Win2012R2 x64 (used Putty latest version).\nWith option \"Don't allocate a pseudo terminal\":\n- quser: https://cloud.githubusercontent.com/assets/9350115/26031662/6ea9f7b8-3884-11e7-920e-483f644c1ee3.gif\nWithout option \"Don't allocate a pseudo terminal\":\n- quser: https://cloud.githubusercontent.com/assets/9350115/26031720/321ca082-3886-11e7-8f1c-8d07f593458d.gif\n- ipconfig: https://cloud.githubusercontent.com/assets/9350115/26031796/5b4efd62-3889-11e7-8759-0481e537737d.gif\n- ipconfig (network brandwidth is 25 Kbps): https://cloud.githubusercontent.com/assets/9350115/26031821/f596ca1c-3889-11e7-906c-28f039ad394f.gif\n\nTest via Bitvise (default options):\n- ipconfig: https://cloud.githubusercontent.com/assets/9350115/26036211/293fa0a2-38e2-11e7-96d5-30228fc72318.gif\n\nTest via Bitvise after merging https://github.com/PowerShell/openssh-portable/pull/137:\n- ipconfig: https://cloud.githubusercontent.com/assets/9350115/26045432/dd95444c-3952-11e7-859f-181912ea015c.gif. @bagajjal \n\nputty workaround , go to Connection > SSH > TTY > check \"Don't allocate a pseudo terminal\"\n\nIn this mode history navigate not work!\nAlso backspace button clear command prompt!. @Lonney Answer there: https://github.com/PowerShell/Win32-OpenSSH/issues/724\nOpenSSH-Win32 is equ IE5/IE6 (not observe standard).. Bugfix: https://github.com/PowerShell/openssh-portable/pull/137\nDiff: https://github.com/PowerShell/openssh-portable/pull/137/commits/a07f7cb4d048795a27d5a1e9f9e22f650b0e7273. > If you are busy then can I pick your changes and submit to june end release?\nPlease do this.. The reason for this behavior: the incorrect interpretation of the CUP command ESC[<y>;<x>H\nMSDN: https://msdn.microsoft.com/en-us/library/windows/desktop/mt638032(v=vs.85).aspx\n\nCursor moves to \\; \\ coordinate within the viewport, where \\ is the column of the \\ line.\n\\ and \\ parameters have the same limitations as \\ above. If \\ and \\ are omitted, they will be set to 1;1.\n\nTerm viewport indicate to using relative cursor coordinates! But OpenSSH-Win32 using absolute cursor coordinates (ssh.exe and ssh-shellhost.exe).. Also this code block:\nhttps://github.com/PowerShell/openssh-portable/blob/b4a38796b980f139dab7b46b942670f8a1b54937/contrib/win32/win32compat/console.c#L1169-L1172\nneed transfer to server side (shell-host.c).. @bagajjal\n\nyour recent fix, this problem is fixed? If yes, then this is duplicate of #712 issue?\n\nMy latest PR is fixed several bugs.\n\nAre there any issues that need to be fixed apart from your PR?\n\nHistory navigate bugs:\n- Putty: https://cloud.githubusercontent.com/assets/9350115/26238010/f642a734-3c7f-11e7-9122-e1acd392eb49.gif\n- OpenSSH-Win32: https://cloud.githubusercontent.com/assets/9350115/26238028/09ed9e9c-3c80-11e7-8b10-ceeb2f8be795.gif . ",
    "mccandlessd": "Never mind a reboot resolved the issue.. ",
    "Etharin": "Awesome, thanks for fixing so fast. . ",
    "andynz2017": "Thanks for the quick response.\nUsing DEBUG3, no messages associated with AuthorizedPrinciplesCommand or AuthorizedKeysCommand noted.\n. This would explain why I didn\u2019t see the error in ssh-agent.log. I didn\u2019t have those commands explicitly defined in my sshd_config configuration. \nIs there estimated time frames on when this feature may become available?\nFrom:  Manoj Ampalam notifications@github.com\nReply-To:  PowerShell/Win32-OpenSSH reply@reply.github.com\nDate:  Sunday, 15 January 2017 at 20:39\nTo:  PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com\nCc:  Andrew Hardy andrewhardy@andrewhardy.co.nz, Author author@noreply.github.com\nSubject:  Re: [PowerShell/Win32-OpenSSH] command=\" authorized_keys not enforced? (#473)\nJust tried adding these in sshd_config\nAuthorizedKeysCommand /c:\\windows\\system32\\cmd.exe\nAuthorizedKeysCommandUser admin\nand saw this line in ssh-agent.log\n10992 23:37:26 859 AuthorizedPrincipalsCommand and AuthorizedKeysCommand are not supported in Windows yet\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n{\"api_version\":\"1.0\",\"publisher\":{\"api_key\":\"05dde50f1d1a384dd78767c55493e4bb\",\"name\":\"GitHub\"},\"entity\":{\"external_key\":\"github/PowerShell/Win32-OpenSSH\",\"title\":\"PowerShell/Win32-OpenSSH\",\"subtitle\":\"GitHub repository\",\"main_image_url\":\"https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png\",\"avatar_image_url\":\"https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png\",\"action\":{\"name\":\"Open in GitHub\",\"url\":\"https://github.com/PowerShell/Win32-OpenSSH\"}},\"updates\":{\"snippets\":[{\"icon\":\"PERSON\",\"message\":\"@manojampalam in #473: Just tried adding these in sshd_config\\r\\nAuthorizedKeysCommand /c:\\windows\\system32\\cmd.exe\\r\\nAuthorizedKeysCommandUser admin\\r\\n\\r\\nand saw this line in ssh-agent.log\\r\\n10992 23:37:26 859 AuthorizedPrincipalsCommand and AuthorizedKeysCommand are not supported in Windows yet\"}],\"action\":{\"name\":\"View Issue\",\"url\":\"https://github.com/PowerShell/Win32-OpenSSH/issues/473#issuecomment-272679408\"}}}\n. ",
    "david-chaves": "Hi, I'm having the same issue, this is the following commands running inside a powershell script:\n```powershell\nLet's declare some variable to use throught the script file\n$remote_host=\"rampup-bastion\"\n$ansible_folder = \"ansible\"\n$remote_folder=\"{0}:{1}/{2}\" -f $remote_host ,\"/home/ec2-user\", $ansible_folder\nBefore we can copy files, we need to create some folders\nssh $remote_host \"mkdir -p $ansible_folder\"\nssh $remote_host \"mkdir -p $ansible_folder/inventories\"\nssh $remote_host \"mkdir -p $ansible_folder/roles\"\nFirst, we are going to copy the file responsible for installing ansible\nscp .\\ansible.sh $remote_folder\n``\nThe host it's defined inside my%HOMEPATH%.ssh\\configusing the ssh agent to connect trough. What the script does it's copy the files to a AWS RedHat Instance.. I as doing some more testing and discovered that callingWrite-Output` solves the issue, no idea what it does in background.\n. ",
    "olhonia": "@bagajjal\nThanks for comments.\nI already tryed it.\nssh -i rsa_key user01@192.168.2.1 dir -> Output_test.txt\nif dont use crontab (Type command line) then,  its successfuly written to [Output_test.txt].\nand can see Windows directory construction.\n```\n   -bash-4.1$ cat Output_test.txt\n    h      Cu C ?{\n                  [        x\n                            \uff8d OS ?\uff77\n    {\n     [ V\n        A\n         ?\uff8d B824-25D8 ?\uff77        <-   Garbled characters because encoding is different\n    C:\\Users\\user01 ?fB                 Windows: shift-jis     LINUX:UTF-8\n                              Ng\n2016/12/22  09:39              .\n   2016/12/22  09:39              ..\n   2017/01/06  08:44              .ssh\n   2016/09/10  11:29              Contacts\n   2017/01/06  17:00              Desktop\n   2016/09/13  11:04              Documents\n   2016/09/20  18:14              Downloads\n```\nbut, if add to crontab then, not written anything.\n```\n   -bash-4.1$ crontab -l\n   LANG=ja_JP.UTF-8\n   SHELL=/bin/bash\n   PATH=/sbin:/bin:/usr/sbin:/usr/bin\n   MAILTO=user01\n   HOME=/home/user01\n     14 13 *  *  * sh ./test.sh\n-bash-4.1$ ls -ltr\n   -rw-r--r-- 1 user01 user01         0  1\u6708 24 13:14 2017 Output_test.txt\n-bash-4.1$ cat Output_test.txt\n   -bash-4.1$\n```\ntimestamp has been updated.\n. ",
    "ikrel": "the issue can be easily reproduced by using nohup , the -vvv logs read failed as opposed to interactive success. Google gives some linux-on-linux reports of similar behaviour which are solved by -t -t.\nhowever using -t with windows openssh hangs the client, and then leads to 100% cpu utilization on the server. \nin_debug.sh] debug2: channel 0: read<=0 rfd 4 len 0\n[23:50:09]  [win_debug.sh] debug2: channel 0: read failed\n[23:50:09]  [win_debug.sh] debug2: channel 0: close_read\n[23:50:09]  [win_debug.sh] debug2: channel 0: input open -> drain\n[23:50:09]  [win_debug.sh] debug2: channel 0: ibuf empty\n[23:50:09]  [win_debug.sh] debug2: channel 0: send eof\n[23:50:09]  [win_debug.sh] debug2: channel 0: input drain -> closed. ",
    "siddolo": "@olhonia, @ikrel \ntry:\nscript -q -c \"ssh -i .ssh/id_rsa user01@192.168.2.1 whoami\"\nKeep in mind that \"dir\" is not a binary, so you have to execute \"cmd /c dir\". ",
    "geoffreywiseman": "This has been driving me nuts for several days now. Finally I found this issue. \ud83d\udc4d . ",
    "mjessome": "Seems to be OK on v0.0.6.0. ",
    "bradmoody": "Also reproduced now on v0.0.6.0. On this version the first command exits with status 0 and the second exits with status 23.  This isn't observed on v0.0.7.0 because of another bug that causes all ssh commands to exit with status 4.. ",
    "zbordas": "We ran into this very same issue. I tracked down the problem and there is a bug in the shell-host utility that will limit the entire execution command line to 260 characters.\nIf you open the shell-host.c file around line 1010:\nint start_with_pty(int ac, wchar_t **av) {\n    STARTUPINFO si;\n    PROCESS_INFORMATION pi;\n    wchar_t cmd[MAX_CMD_LEN];\n\u2026 and also around line 1152:\nint start_withno_pty(int ac, wchar_t **av) {\n        STARTUPINFO si;\n        PROCESS_INFORMATION pi;\n        wchar_t cmd[MAX_CMD_LEN];\n        SECURITY_ATTRIBUTES sa;\n        BOOL ret;\nHowever, later this buffer will be handled as it was only MAX_PATH long:\ncmd[0] = L'\\0';\nif (ac)\nGOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_PATH, L\"cmd.exe\"));\n\nac--;\nav++;\nif (ac)\n    GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_PATH, L\" /c\"));\nwhile (ac) {\n    GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_PATH, L\" \"));\n    GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_PATH, *av));\n    ac--;\n    av++;\n}\n\nAll these MAX_PATH references should be MAX_CMD_LEN:\ncmd[0] = L'\\0';\nif (ac)\nGOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, L\"cmd.exe\"));\n\nac--;\nav++;\nif (ac)\n    GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, L\" /c\"));\nwhile (ac) {\n    GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, L\" \"));\n    GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, *av));\n    ac--;\n    av++;\n}\n\nThere are 2 places in the code having this problem. If you replace those with the suggested lines it all works without problems.\nI see that this utility has been provided my Microsoft so I am not sure if this forum the right place to report it or not. I will try to report it back to the original author. In the meantime I hope it will be fixed in the original OpenSSH baseline very soon.\n. +1 too.. ",
    "tranbadu": "I was able to fix it by using the last known good configuration on Windows 7. I still wanted to get OpenSSH to work on a Windows 7 machine with key authentication. Do you have any success doing it?. ",
    "AbhijitNagaraj": "Yes, I do. I am not getting this error if I install v.0.0.1.0.. ",
    "pkt1237": "I did have this same issue, with version .0.0.6.0 on a Win2k8 R2 64bit box.  To get around the issue, in the sshd_config file i uncommented out the PidFile setting and replaced the ./sshd.pid, with \"OpenSSH Install Path\"\\sshd.pid, and this corrected the issue, in my case it was installed under C: Programs, so the line in my config file looked something like this PidFile \"C:\\Program Files\\OpenSSH\\logs\\sshd.pid\", i believe you can specify it to write the pid file anywhere you wish, i just happened to put it in the logs folder with the rest of the logs files that get created.. @nightwish47 \nI was looking over your config.txt i see that there are 2 entries for the PID, i know one is commented out but cant help but wonder if it still is somehow conflicting with the override entry, the only other thing i saw is it looks like some of the paths are using / instead of a backslah \\ I think / is more of a unix/linux style, but could be wrong.  I did notice and error in the sshd.log.txt that stood out almost as if a \\ was being escaped, \n\nPidFile C:\\OpenSSH-Win64\\logs\\sshd.pid\n\nPidFile /var/run/sshd.pid\nSubsystem   sftp    C:/OpenSSH-Win64/sftp-server.exe\nExecuting command: C:\\\\OpenSSH-Win64\\\\internal-sftp\nnot saying that is causing the error but did strike me as odd, the only other thing i can think of is to put double quotes around your windows paths to help escape the slashes easier.. I have the same issue, although, its only from our linux servers\n1. client: OpenSSH_5.3p1, OpenSSL 1.0.1e-fips 11 Feb 2013 on Red Hat Enterprise Linux Server release 6.8 (Santiago)\n2. Server: v0.0.8.0\n3. error message:\nWrite failed: Broken pipe\nCouldn't read packet: Connection reset by peer\nWindows box is not behind a firewall so no need for proxy command in our setup\nOther items to note, logs show that password was accepted and initial connection was established then immediately closed, also if I go from my Win7 Desktop using Filezilla, i have no problems getting in via sftp.  Only seems to break between our RHEL server and our win server.  This was previously working under v0.0.6.0.\nOh also, using ssh from the above linux version does not have an issue, only appears to be broke when wanting to use sftp.. ",
    "nightwish47": "@bagajjal \nI also encounter the same error message.\nI upgraded from v5_30_2016 to v0.0.8.0 hope it can fix issue #241. Good thing is it actually does but a new one comes up.\n\nCouldn't Create pid file \"./sshd.pid\": Permission Denied\n\nI tried @pkt1237 solution but no luck.\nPlease see sshd.log and sshd_config. Thanks\nsshd_config.txt\nsshd.log.txt\n. @pkt1237 \nThanks for your suggestion. I retry as your 1st post and it works.\nIn my opion OpenSSH can handle / and \\ since their default sshd_config also use /.\nFor 2 PID, I deleted the once with #.\nError seems random, so I'll keep monitoring.. @bagajjal \nError is still occurring and seems random.\nBut when set parameter PidFile is none. The issue is already solved.\nSo the question is, if PidFile is set as none, is there any impact?\nCurrent: PidFile C:/OpenSSH-Win64/sshd.pid\n\u2192PidFile none\n. @bagajjal : Got it and will check on our side.\nBtw, although we received below message but target files are already transferred successfully.\nMay we ask you about the cause and solution for this issue?\nRelated message:\nCouldn't Create pid file \"./sshd.pid\": Permission Denied. Hi, thanks for your reply.\nDue to security policies, I don't have permission to collect debug3 log.\nI'm running debug2. But the error still haven't occured for several days, nothing to collect. I'll keep monitor and will update debug2 log.\nPlease don't close this post.. @bagajjal \nPlease see sshd.log file, the error occured yesterday.\nsshd.log.txt\nNetwork team is monitoring and tell me that Diffie-Hellman Key Exchange Reply packet is missing during connection establishment. We have Diffie-Hellman Key Exchange Init but no Reply.\nHope it can help. Thanks\n. sorry but beside that, I also encounter some disconnections 3 minutes after connection is successfully established.\nIn sshd_config, I set these parameters:\nClientAliveInterval 60\nClientAliveCountMax 3\nSo I wonder if these are the reason.\nEverything is so random so I can't make sure, just guess. @bagajjal \ncan you share somethings, some clues or kind like that. Since I want to follow the issue.. @bagajjal \n\nClientAliveInterval 60\nClientAliveCountMax 3\n\nWill the connection be terminated if there's a transmitting? Because in my system, it seems so. In the middle of session, while data is transferring, connection is cut.\nI just want to make sure so I can erase it from my checklist for further investigation\nAnd for the error in libcrypto and the missing of Diffie-Hellman Key Exchange Reply. Any clues?\nSorry for being harsh and for my English.. @manojampalam \nSorry, this \"error in libcrypto\" doesn't occur in development and test environment, it only occurs in production environment so I can't handle the risk.\nI know the software isn't ready for production but this kind of problem has never happened before.\nAnyway, I will try your suggestion on dev/test system. Thanks.\nI also attach another log file from another client. Hope it can help.\nsshd.log.20170220.txt\n. Also, my system contains multiple clients. Their SSH client software are different, but the error seems to happen in some specified clients than some others.\nFor example:\n2 clients use OpenSSH 4.3, the error only happens in 1 client.\nOther 2, 1 uses WinSCP, another uses Maverick Legacy, error happens in Maverick Legacy client only.. @bagajjal : I think #522 is not related to #536. So please keep this issue open.\nIn addition, there are 2 points that we need your confirm.\n\nWe've received another suggestion about this error as following:\nWin32-OpenSSH version is pretty outdated, you should download a new one here:\nhttps://github.com/PowerShell/Win32-OpenSSH/releases. Any bugs with libeay32.lib and ssleay32.lib \nshould also be addressed there by opening a ticket.\n\n\n\nFor more details, please refer the link: http://serverfault.com/questions/835088/win32-openssh-random-error-message-error-in-libcrypto\n\u2192So I wonder that there is a high possibility this #522 is related to version issue as mentioned from serverfault.com. Could you check?\n(Using version of Win32-OpenSSH is 5_30_2016)\n\nRegarding to latest version of Win32-OpenSSH (v0.0.9.0).\nCould you provide us the version information of OpenSSL libs that using for Win32-OpenSSH (v0.0.9.0)?\nIs it newest version of OpenSSL libs?. @bagajjal : Could you check following point?\n\n\n@bagajjal : I think #522 is not related to #536. So please keep this issue open.\nIn addition, there are 2 points that we need your confirm.\nWe've received another suggestion about this error as following:\nWin32-OpenSSH version is pretty outdated, you should download a new one here:\nhttps://github.com/PowerShell/Win32-OpenSSH/releases. Any bugs with libeay32.lib and ssleay32.lib\nshould also be addressed there by opening a ticket.\nFor more details, please refer the link: http://serverfault.com/questions/835088/win32-openssh-random-error-message-error-in-libcrypto\n\u2192So I wonder that there is a high possibility this #522 is related to version issue as mentioned from serverfault.com. Could you check?\n(Using version of Win32-OpenSSH is 5_30_2016)\nRegarding to latest version of Win32-OpenSSH (v0.0.9.0).\nCould you provide us the version information of OpenSSL libs that using for Win32-OpenSSH (v0.0.9.0)?\nIs it newest version of OpenSSL libs?. @bagajjal :Any update for following point?\n@bagajjal : I think #522 is not related to #536. So please keep this issue open.\nIn addition, there are 2 points that we need your confirm.\nWe've received another suggestion about this error as following:\nWin32-OpenSSH version is pretty outdated, you should download a new one here:\nhttps://github.com/PowerShell/Win32-OpenSSH/releases. Any bugs with libeay32.lib and ssleay32.lib\nshould also be addressed there by opening a ticket.\nFor more details, please refer the link: http://serverfault.com/questions/835088/win32-openssh-random-error-message-error-in-libcrypto\n\u2192So I wonder that there is a high possibility this #522 is related to version issue as mentioned from serverfault.com. Could you check?\n(Using version of Win32-OpenSSH is 5_30_2016)\nRegarding to latest version of Win32-OpenSSH (v0.0.9.0).\nCould you provide us the version information of OpenSSL libs that using for Win32-OpenSSH (v0.0.9.0)?\nIs it newest version of OpenSSL libs?. @bagajjal : Thanks for your confirmation.\nRegarding your question,\nWe us V1.0.2 OpenSSL libs. There is a open issue (openssh/openssh-portable#48) on the openSSH community to upgrade to the latest version of the OpenSSL library (V 1.1.0e).\n\n\u2192That's mean your team is fixing this issue on latest version?. @bagajjal \n\nBTW, did you make any progress by using single openssh client? Is the issue still reproducible?\n\n\u2192We tried testing openssh client with latest version on test environment. There are no any 'error in libcrypto' found until now. \nHowever it is very hard to upgrade the latest version of openssh on production environment right now.\nSo could you share us some change of settings or parameters of latest version instead of version up?. I've got your point.\nWe are going try to reproduce this.\nHowever we cannot found this issue after version up,\nso we think that there is high possibility that authentication logic from openssh7.1 to openssh7.4 has changed something.\nCould you help to check there are any change on Ssh_config parameter? . If there are any change from your side, kindly provide us in details.\nBecause based on your information, we can test and investigate the root cause of this issue.. the issue remains for days, any suggestion would be appreciated. This is server log.\nsshd.log.20170228.txt\nI'm contacting to get client log.\nThanks. Thank you for your suggestion. I double checked and turn out it's my fault of configuration in client, it's not this software issue.\nI will close the issue.\nThank you again for your time.. @bagajjal : I think that it is not related to #536 and it occur sometime until now.\nCould you please continue check it?. @bagajjal :May we hear updates on this topic?. @manojampalam : I would like to answer as below:\n\nWhat was this list in success case?\ndebug2: host key algorithms: XXXXXXXXXXX\n\n\u2192[host key algorithms: ssh-rsa,ssh-dss] \n\nCan you dump the full logs in failure case? I suspect sshd failed to load the relevant host keys for some reason.\n\n\u2192Please see attached file\nError_log.txt\n. @manojampalam :Thanks for your answer.\n\nPlease update to the latest version\n\nIs it mean that update the latest version for OpenSSH on client side?\nIn addition, since the system is running on production, so its very hard to upgrade the latest version right now.\nAre there any other methods to modify the setting of \u300csshd_conifg\u300dinstead of version up?\n. @manojampalam : please re-open this topic.. @manojampalam : please re-open this topic and any updates on this issue?. I made a mistake in writing.\nAccess frequency is once every 10 minutes from 10 clients every day.\u3000\u21d2\u00d7\nAccess frequency is once every minute from 10 clients every day.\u3000\u21d2\u25cb. Currently running on production, it is difficult to try with the new version.\nIn the development environment, the same version of OpenSSH is used, but the physical memory remains low.\nIs there a possibility that physical memory load will be high if OpenSSH version is old?. Upgrading is difficult.\nSince the event occurs when the access frequency is high, is there any way to improve by sshd_config or other parameters?. please re-open this topic.. We are try to investigating the cause and found that process [CMCa] & [CM10] is already increased in Windows Kernel profile memory.\nCould you help to confirm that process [CMCa] and [Cm10] is root cause or not?\nIn addition, are there any similar issue in the past?\n. Microsoft official \"OpenSSH\" was released when looking for the Windows version of the commonly used SSH tool, so I use it as a production run.\nIs there an Opne SSH version that is stable in the Windows environment?\nWhen will it stabilize again?. ",
    "GoateePFE": "I solved this by doing two things:\n1. In sshd_config I changed the PidFile line to:\nPidFile .\\sshd.pid\nThis creates the file under C:\\Program Files\\OpenSSH .\n2. I granted the sshd account full control to C:\\Program Files\\OpenSSH\nNow the SSHD service start successfully and the permission denied message is gone from the sshd.log file.\n. ",
    "alex-rowden": "I followed the instructions which @GoateePFE listed but I am still getting:\n6160 17:21:21 005 error: Error retrieving user environment variables. RegOpenKeyExW returned 5\n6160 17:21:21 005 fatal: ERROR. Cannot create process (2).\\n\nin my log file.  I don't know what details I should add to help add clarity to my issue.. ",
    "snboisen": "I had the same error. Solved by specifying the logs folder for the PID file in sshd_config. The configuration file should be changed to have that as default to solve this bug.. ",
    "leodotcloud": "PidFile .\\logs\\sshd.pid\nworked for me.. ",
    "olegdunkan": "https://msdn.microsoft.com/en-us/library/windows/desktop/ms740668(v=vs.85).aspx\nWSAECONNRESET\n10054\nConnection reset by peer.\nAn existing connection was forcibly closed by the remote host. This normally results if the peer application on the remote host is suddenly stopped, the host is rebooted, the host or remote network interface is disabled, or the remote host uses a hard close (see setsockopt for more information on the SO_LINGER option on the remote socket). This error may also result if a connection was broken due to keep-alive activity detecting a failure while one or more operations are in progress. Operations that were in progress fail with WSAENETRESET. Subsequent operations fail with WSAECONNRESET.\n4148 22:13:43 458 debug2: WSARecvCompletionCB - io:0000003B1EE87B30, pending_state:1, flags:0, error:10054, received:0\n4148 22:13:43 458 debug3: select - returning 1\n4148 22:13:43 458 debug3: sigprocmask() how:517928372\n4148 22:13:43 458 debug3: sigprocmask() how:517928380\n4148 22:13:43 458 debug3: w32_read fd:3\n4148 22:13:43 458 debug3: recv - io:0000003B1EE87B30\n4148 22:13:43 458 debug1: recv - from CB ERROR:10054, io:0000003B1EE87B30\n. ",
    "ngugc": "How about removing the following line in contrib\\win32\\openssh\\config.ps1?\nif (Test-Path $OutCRTHeader) {exit}\nThen it will be regenerated every time.. javascript\n<Target Name=\"BeforeClean\">\n<Delete Files=\"$(OpenSSH-Src-Path)contrib\\win32\\win32compat\\inc\\crtheaders.h\" />\n</Target>\nWhy did it not work?\nIt works for me. The config project should be unloaded, then reloaded again.\njavascript\ndiff --git a/contrib/win32/openssh/config.vcxproj b/contrib/win32/openssh/config.vcxproj\nindex c171a31..45d6ca4 100644\n--- a/contrib/win32/openssh/config.vcxproj\n+++ b/contrib/win32/openssh/config.vcxproj\n@@ -201,4 +201,7 @@\n   <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n   <ImportGroup Label=\"ExtensionTargets\">\n   </ImportGroup>\n+  <Target Name=\"BeforeClean\">\n+    <Delete Files=\"$(OpenSSH-Src-Path)contrib\\win32\\win32compat\\inc\\crtheaders.h\" />\n+  </Target>\n </Project>. I tried with Windows CMD and powershell. Haven't tried with a bash shell.\nBut I don't get it. Why should users get a bash shell on Windows to run ssh client?. Tried with Cygwin:\njavascript\n$ ./bin/Win32/Debug/ssh.exe 192.168.10.201\nPseudo-terminal will not be allocated because stdin is not a terminal.\n. I couldn't change $TERM to xterm, it's always dumb.\n\nIf connecting with XShell, it's \"xterm\" by default:\n\n. The output was garbled if forcely set $TERM to xterm:\n\n. @bagajjal , @manojampalam, how did you make it work? Did you run ssh.exe with additional options or configurations? Thanks!. Attached the ssh log.  I couldn't put the debug log in a separated file with the \"-E\" option.\n\nThis was the standard error output:\nlog.txt\n. Great! It worked after following the instructions in \"https://github.com/PowerShell/Win32-OpenSSH/wiki/Terminal-Info\".\nOne more question, why is the TERM env variable in Linux server still \"dumb\" by default?\nWhat's more we need to do from ssh client side to make it as \"xterm\" by default?\nThanks very much!. log.c\n\n. ",
    "farika": "Thanks for you answer. Yes it's ok for OpenSSL. https://wiki.openssl.org/index.php/Manual:Ripemd(3)\n $ openssl list-message-digest-commands\nmd4\nmd5\nmdc2\nrmd160\nsha\nsha1\n $ openssl rmd160 /usr/bin/openssl \nRIPEMD160(/usr/bin/openssl)\nBefore using Win32-Openssh I used the openssh version 7.4 by mls (cygwin) which supports the ripemd. It is useful on some old servers without SHA256 and to avoid the SHA-1 .. ",
    "MrBatschner": "+1\nThank you for the clarification, I understand that this is a security feature.\nBut how about this scenario: Logging on to a compromised host with key based authentication, so far, my user creds are still fine. I want to access \\\\server\\share and need to provide credentials again (which I would not with an interactive logon). At this point, my creds can be intercepted. \nDon't know if you consider this a possible threat, but could you make relaxing these restrictions a configurable option?. ",
    "rghash": "+1 for us as well. We want to use the sshd to remotely start server processes using password authentication, but the remotely started processes needs to access network shares that the userid already has access to, but can't figure out how to get this to work.... ",
    "TBBle": "Is there any chance of this being changed for public-key connections? Or are we going to need to wait for Kerberos delegation support in this OpenSSH port?\nI'm hoping to migrate away from the Cygwin-based OpenSSH daemon: It allows network access from public-key auth, but has a 230-ish character command limit. I believe this works because the service is running as the target user. This is for use as an automated build-slave, so we only really care about one user.. ",
    "rkeithhill": "@manojampalam What is this:\n\nWe'll try to get Agent forwarding online in a couple of months - hopefully, this should help you a bit.\n\nAnd is it online?  We've just run into this with a script we use so there is no option that we've found to provide the password to the ssh.exe.  We haven't found an sshpass that runs on Windows.  Our current solution is to punt on OpenSSH completely and revert back to using Putty.  :-(. But what about the case where a user installs/configures only the openssh client?  They need to use ssh-keygen.exe -A to gen a key for connections to other machines (notably Git servers) and that key will likely get passed to ssh-add if it has a passphrase.  That is where we are seeing this warning - ssh-add $home\\.ssh\\id_rsa.. Indeed.  Yes, this would be for user keys so ssh-keygen -t.  But wouldn't the same problem exist with ssh-keygen creating those keys with potentially wrong (ie default) permissions?. Thanks for the info!  This is a Windows Insider build from last week (17101). I can't remember if I added this \"option\" or if it just comes with the newer Windows builds.  I suspect I probably added the option. Before I install from the GitHub project, I guess I'll need to remove the Windows feature/option first?. Here ya go:\n31:6ms> ssh -vvv -T hillr@tfs7.it.acme.com\nOpenSSH_7.6p1, LibreSSL 2.6.2\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/config error:2\ndebug3: Failed to open file:C:\\\\ProgramData\\\\ssh/ssh_config error:2\ndebug2: resolving \"tfs7.it.acme.com\" port 22\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to tfs7.it.acme.com [156.140.12.92] port 22.\ndebug1: Connection established.\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_rsa error:2\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_rsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\hillr/.ssh/id_rsa type -1\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_rsa-cert error:2\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_rsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\hillr/.ssh/id_rsa-cert type -1\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_dsa error:2\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_dsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\hillr/.ssh/id_dsa type -1\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_dsa-cert error:2\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_dsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\hillr/.ssh/id_dsa-cert type -1\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_ecdsa error:2\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_ecdsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\hillr/.ssh/id_ecdsa type -1\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_ecdsa-cert error:2\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_ecdsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\hillr/.ssh/id_ecdsa-cert type -1\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_ed25519 error:2\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_ed25519.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\hillr/.ssh/id_ed25519 type -1\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_ed25519-cert error:2\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/id_ed25519-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\hillr/.ssh/id_ed25519-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_7.6\ndebug1: Remote protocol version 2.0, remote software version SSHBlackbox.10\ndebug1: no match: SSHBlackbox.10\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to tfs7.it.acme.com:22 as 'hillr'\ndebug3: hostkeys_foreach: reading file \"C:\\\\Users\\\\hillr/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type RSA in file C:\\\\Users\\\\hillr/.ssh/known_hosts:1\ndebug3: load_hostkeys: loaded 1 keys from tfs7.it.acme.com\ndebug3: Failed to open file:C:\\\\Users\\\\hillr/.ssh/known_hosts2 error:2\ndebug3: Failed to open file:C:\\\\ProgramData\\\\ssh/ssh_known_hosts error:2\ndebug3: Failed to open file:C:\\\\ProgramData\\\\ssh/ssh_known_hosts2 error:2\ndebug3: order_hostkeyalgs: prefer hostkeyalgs: ssh-rsa-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\ndebug2: host key algorithms: ssh-rsa-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: diffie-hellman-group1-sha1,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa\ndebug2: ciphers ctos: aes256-cbc,aes192-cbc,aes128-cbc\ndebug2: ciphers stoc: aes256-cbc,aes192-cbc,aes128-cbc\ndebug2: MACs ctos: hmac-sha2-256,hmac-sha2-512\ndebug2: MACs stoc: hmac-sha2-256,hmac-sha2-512\ndebug2: compression ctos: none,zlib,zlib@openssh.com\ndebug2: compression stoc: none,zlib,zlib@openssh.com\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: diffie-hellman-group14-sha1\ndebug1: kex: host key algorithm: ssh-rsa\nUnable to negotiate with 156.140.12.92 port 22: no matching cipher found. Their offer: aes256-cbc,aes192-cbc,aes128-cbc\nIf you want I could provide the same logs from my WSL/Ubuntu console (where the connection works).. That works:\n```\n60:6ms> ssh -c aes256-cbc -T hillr@tfs7.it.keysight.com\n               fTfs\n             fSSSSSSSs\n           fSSSSSSSSSS\n\nTSSf         fSSSSSSSSSSSS\nSSSSSF     fSSSSSSST SSSSS\nSSfSSSSSsfSSSSSSSt   SSSSS\nSS  tSSSSSSSSSs      SSSSS\nSS   fSSSSSSST       SSSSS\nSS fSSSSSFSSSSSSf    SSSSS\nSSSSSST    FSSSSSSFt SSSSS\nSSSSt        FSSSSSSSSSSSS\n               FSSSSSSSSSS\n                 FSSSSSSs\n                   FSFs    (TM)\nMicrosoft (R) Visual Studio (R) Team Foundation Server\nAuthentication for user with identifier \"281cac39-3f9b-450a-96d1-7ef497cd51da\" was successful against account \"hillr\". Shell is not supported.\nshell request failed on channel 0\n```\nBut what I don't get is that ssh -Q cipher tells me that cipher is already supported:\n```\n61:5ms> ssh -Q cipher\n3des-cbc\naes128-cbc\naes192-cbc\n\n\n\naes256-cbc<<\nrijndael-cbc@lysator.liu.se\naes128-ctr\naes192-ctr\naes256-ctr\nchacha20-poly1305@openssh.com\nSo why do I have to tell it the cipher on the command line?  Cause I still do, if I don't specify it, the test fails:\n63:7ms ssh -T hillr@tfs7.it.keysight.com\nUnable to negotiate with 156.140.12.92 port 22: no matching cipher found. Their offer: aes256-cbc,aes192-cbc,aes128-cbc\nThe end game here is that my `git clone ssh://...` command is still failing and I haven't been able to figure out how to get Git to use this particular cipher.\n63:7ms> ssh-add -l\n2048 SHA256:LZYtDlo7yelKFyDwwXSCm+N7SPNmOHeFPQs5Xx8gErg C:\\Users\\hillr.ssh\\tfs (RSA)\n64:11ms> git clone ssh://tfs7.it.acme.com:22/tfs/wiley/coyote/_git/Regent\nCloning into 'Regent'...\nPermission denied (publickey).\nfatal: Could not read from remote repository.\n\n\n\nPlease make sure you have the correct access rights\nand the repository exists.\nI have access rights. I can clone this same repo using the same key from my WSL/Ubuntu console (same machine).\nhillr@HILLR2:~/git/tfs$ ssh-add -l\n2048 SHA256:LZYtDlo7yelKFyDwwXSCm+N7SPNmOHeFPQs5Xx8gErg /home/hillr/.ssh/tfs (RSA)\nhillr@HILLR2:~/git/tfs$ git clone ssh://tfs7.it.acme.com:22/tfs/wiley/coyote/_git/Regent\nCloning into 'Regent'...\nremote:\nremote:                    fTfs\nremote:                  fSSSSSSSs\nremote:                fSSSSSSSSSS\nremote: TSSf         fSSSSSSSSSSSS\nremote: SSSSSF     fSSSSSSST SSSSS\nremote: SSfSSSSSsfSSSSSSSt   SSSSS\nremote: SS  tSSSSSSSSSs      SSSSS\nremote: SS   fSSSSSSST       SSSSS\nremote: SS fSSSSSFSSSSSSf    SSSSS\nremote: SSSSSST    FSSSSSSFt SSSSS\nremote: SSSSt        FSSSSSSSSSSSS\nremote:                FSSSSSSSSSS\nremote:                  FSSSSSSs\nremote:                    FSFs    (TM)\nremote:\nremote:  Microsoft (R) Visual Studio (R) Team Foundation Server\nremote:\nReceiving objects: 100% (2938/2938), 9.03 MiB | 7.06 MiB/s, done.\nResolving deltas: 100% (1304/1304), done.\nChecking connectivity... done.\n. Thanks for the info.  IT controls the server side - TFS 2015 server in one of our data centers.  I don't have much hope I'll be able to convince them to make this change.  IT - the \"just say no\" - department.  :-(. OK, this gets the `git clone` from TFS to work:\n$env:GIT_SSH_COMMAND = '\"C:\\WINDOWS\\system32\\ssh.exe\" -c aes256-cbc'\n```\nI'm still a little puzzled as to why the Ubuntu 16.04 version of ssh doesn't require this workaround but I guess I'll chalk that up to differences in the client implementations.. I get that it is required to run the script elevated but your assumption that folks will read the Wiki is faulty.  By adding this one line to the top of the script, at least folks will be advised by PowerShell that the script needs to be run from an elevated console.  . What is the universal installer?  I see you have a Chocolatey pkg. I'll try that in the future.\n\nI assume you know that the windows git client contains it's own ssh client\n\nYes but AFAICT it doesn't work with the Win32-OpenSSH's ssh-agent service which does a better job of remembering SSH private keys across reboots e.g.:\n```\nMy private key has been added with Win32-OpenSSH's ssh-add.exe\nPS> ssh-add.exe -l\n2048 SHA256:DX8A7ZAzbf7+7EMQ6tKbs7NvGn5F2M9dshB7zntIERg C:\\Users\\hillr.ssh\\id_rsa (RSA)\nInstruct Git to use Win32-OpenSSH exe plus our TFS 2015 server requires this cipher\nPS> $env:GIT_SSH_COMMAND\n\"C:\\Program Files\\OpenSSH-Win64\\ssh.exe\" -c aes128-cbc\nPS> > git pull\nAlready up to date.\nNow use the Git version of SSH\nPS> Remove-Item Env:\\GIT_SSH_COMMAND\nPS> git pull\nEnter passphrase for key '/c/Users/hillr/.ssh/id_rsa':  << doesn't see the key I added\n```\nPlus aren't their oddities with the Git version of ssh-agent related to its creation of SSH_AUTH_SOCK and SSH_AGENT_PID environment variables?  Our devs don't want to have to start Visual Studio from a command-line where these env vars have been configured.\n. We didn't have any problems either when we used SSH keys with no passphrase.  :-)  But lately IT is cracking down and asking us to use a passphrase with our SSH keys.  Sigh.... Exactly and is why we really like the Win32-OpenSSH ssh-agent. It rocks!  \nBTW does this whole install problem go away with Windows 10 1803?  Will it just come with the latest (7.6.0.x) version of Win32-OpenSSH?. I'm confused by the versioning.  Is it 1.0.0.0 or 7.6.0.0?. I'm running into the same issue w/7.6.0.0 - trying to connect using my domain account on the same machine that sshd is running on.. Looks like I'm running into #1098.\n```\ndebug3: NetUserGetInfo() failed with error: 1722 for user: hillr and domain: acme.com\nDsGetDcNameW() failed with error: 1355\nInvalid user hillr@acme.com from ::1 port 1101\n``\nAny ETA on an update with that fix?. In looking at issues what were fixed in today's 7.6.1.0p1-Beta, I had assumed this issue was fixed. See https://github.com/PowerShell/Win32-OpenSSH/issues/1098. It is on the server side - a Windows 10 1803 system with the Chocolatey pkg (openssh 7.6.1.1) installed.  I needed the release after the one that ships in 1803.  I didn't directly add anything to the registry but I did run theinstall-sshd.ps1script.  Did that put something in the registry? Also, what is the registry path I should be looking at?. There is no regkey calledDefaultShellat this path.  Only anAgent` key.. OK just now noticed that the \"Logo\" I get in this SSH session if for \"Windows PowerShell\" - see image in the original post above.  Hmm... How is Windows PowerShell getting executed here instead of PS Core.  \nNone of the pwsh.exe or powershell.exe process has any command-line parameters when I'm SSH'd into this system.\n06-29 18:18:31 7> gps powershell,pwsh -ea 0 | % {Get-NtProcess $_.id} | % CommandLine\n\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\"\nC:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\nI'm only running one Windows PowerShell and that is the first entry above, the second one is running in session 0.  I suspect this is what is being run.  Indeed that is the case.  The $pid in the SSH session corresponds to this process:\nSessionId                : 0\nProcessId                : 15608\nParentProcessId          : 16264\nPebAddress               : 913153015808\nImageBaseAddress         : 140698001408000\nExitStatus               : 259\nCommandLine              : C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\nFullPath                 : \\Device\\HarddiskVolume1\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\nDepStatus                : NtApiDotNet.ProcessDepStatus\nUser                     : S-1-5-21-1876727327-1672651232-3010941439-28353\nMitigations              : NtApiDotNet.NtProcessMitigations\nExtendedFlags            : None\nHasDebugPort             : False\nHandleCount              : 629\nBreakOnTermination       : False\nDebugFlags               : 1\nExecuteFlags             : 13\nIoPriority               : 2\nCookie                   : -663243975\nOwnerProcessId           : 25433\nWindowTitle              : C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\nWindowFlags              : 0\nSubsystemType            : Win32\nWow64                    : False\nIs64Bit                  : True\nIsChildProcessRestricted : False\nIsDeleting               : False\nProtection               : NtApiDotNet.PsProtection\nImageInformation         : NtApiDotNet.SectionImageInformation\nLUIDDeviceMapsEnabled    : True\nGrantedAccess            : AllAccess\nGrantedAccessMask        : 2097151\nSecurityDescriptor       : O:BAG:DUD:(A;;0x1fffff;;;BA)(A;;0x1fffff;;;SY)(A;;0x121411;;;S-1-5-5-0-57399869)S:AI(ML;;NWN\n                           R;;;HI)\nSddl                     : O:BAG:DUD:(A;;0x1fffff;;;BA)(A;;0x1fffff;;;SY)(A;;0x121411;;;S-1-5-5-0-57399869)S:AI(ML;;NWN\n                           R;;;HI)\nHandle                   : NtApiDotNet.SafeKernelObjectHandle\nNtTypeName               : Process\nNtType                   : Name = Process - Index = 7\nName                     : powershell.exe\nCanSynchronize           : True\nCreationTime             : 12/31/1600 5:00:00 PM\nInherit                  : False\nProtectFromClose         : False\nAddress                  : 0\nThis is the process tree that ProcExp shows:\n\nI do have the 7.6.1.0 version at that location:\n```\n06-29 18:26:24 11> gcm sshd\nCommandType     Name                                               Version    Source\n-----------     ----                                               -------    ------\nApplication     sshd.exe                                           7.6.1.0    C:\\Program Files\\OpenSSH\\sshd.exe\n```\nThe C:\\ProgramData\\ssh\\sshd.pid file shows pid 5040 which corresponds the ProcExp info. But it is odd that the last entry in C:\\ProgramData\\ssh\\logs\\sshd.log is from several days ago even though I initiated a SSH session a few minutes ago.\nEverything in my sshd_config file is commented out except these two lines:\nSubsystem       sftp    sftp-server.exe\nSubsystem       powershell      C:/Program Files/PowerShell/6-preview/pwsh.exe -sshs -NoLogo -NoProfile\n. Oh wait a sec, there is a DefaultShell registry \"value\" under that reg key and it does point to powershell.exe - specifically C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe.  Sorry, I was looking for a reg key by that name.   \nWhere did that come from?  At one point, I had installed the OpenSSH Client - Beta Windows optional feature.  Did that create that reg val?  \nIf I remove that reg val and restart sshd, when I ssh into the box I now get a CMD prompt.  How come it is not using the subsystem (pwsh) specified in the sshd_config file?. @gayantd Thanks!!  I think I've figured out that the registry entries referred to by that Wiki dictate what shell is used when you SSH into the Windows box.  The sshd_config subsystem setting controls what version of PowerShell is used when you use PS Remoting over SSH to access the Windows box.\nNow if I could just figure out if there's a way to specify parameters (ie -NoLogo) to the DefaultShell configured in the registry.  I'll poke around the Wiki but if anyone knows, I'm all ears.  :-)\n. Does it work any better if you use / in the path instead of \\?. I was able to get in by firing up CMD as admin and running mklink /J C:\\PowerShell \"C:\\Program Files\\PowerShell\" and then in my sshd_config I specified:\nSubsystem   powershell  C:/PowerShell/6/pwsh.exe -sshs -NoLogo -NoProfile\nThat worked for me.. @bingbing8 I could do that but then I'd lose my profile goodies (like PSRL customization) for an interactive SSH session to that machine.\n@NoMoreFood Good idea.  I ended up going with this test at the beginning of my profile:\nif ((Test-Path Env:\\SSH_CLIENT) -and !(Test-Path Env:\\SSH_TTY)) { return }\nIt would be nice if there was a corresponding DefaultNonInteractiveShellCommandOption  in the registry which I would set to -NoProfile -c.. ",
    "n0h": "You may be trying to install SSH.NET into a project that's not targeting a framework that's supported by SSH.NET. The supported frameworks are listed on their GitHub readme which can be viewed at https://github.com/sshnet/SSH.NET/#framework-support .\nThis means that you will most likely just need to change the project properties. In Visual Studio, for a C# console application setup, a user would open the project, click Project->\"project name\" Properties...->Application tab, and the target is available as a dropdown.\nFor us specifically, we're targeting .NET Framework 4.5.. Attached is a sample project that you should be able to use to reproduce the issue.\nSshNetTest.zip\nFrom our developer:\nIt doesn't have the SSH.NET DLL, but it has the source code in the solution so that you can debug and edit easily. It should be easy to remove the project reference and install the DLL if you prefer -- I'm just not able to debug when I do that. I really don't know why, but a guess is that the DLL doesn't have debugging information.. Thank you for looking into this, we will log it with SSH.NET.\nMy only further question for this project is whether there could be an improvement to the way this error is handled or reported back to the sftp client, keeping in mind the goal of not diverging unnecessarily from OpenSSH main line. Thanks again.. Sorry, just to clarify my last comment. I didn't intend to suggest that this project is diverging or should diverge from the main line.\nWhat I meant is that even if the error message is somewhat unclear, I recognize that changing/improving it wouldn't be feasible if doing so required a divergence from how OpenSSH main does things. And as you mentioned, it's not even just OpenSSH main, but the SSH protocol, which apparently defines the error codes. So I retract my last question.. Ahh. Thanks!. ",
    "angryfifer": "I'm experiencing the same behaviour with 64-bit versions 0.0.7.0 through 0.0.9.0 when connecting using Ubuntu Linux 14.04 LTS's latest openssh SFTP client and Paramiko SFTP client. I've not tested connecting from a Windows machine.. ",
    "jovinoblanco": "hi\ni tried to install the newest version today.\nunfortunately i wasn able to execute an kind of statement and got the error error in libcrypto.\n. Hi,\nthanks for your feedback.\nI wasnt able to install the newest version yet. I will soon and will let you know.\nCheers. ",
    "togoshige": "This is what I could find:\ncacls\nhttp://superuser.com/questions/131827/limiting-ssh-user-account-only-to-access-his-home-directory\nWinJail\nhttp://www.winquota.com/wj/\nhttps://www.experts-exchange.com/questions/27659882/Windows-Server-2008-restrict-user-to-one-folder.html\nhttps://social.technet.microsoft.com/Forums/windowsserver/en-US/2a034514-1886-4fda-8d86-52d80cafd4cf/restrict-user-access-to-one-resource?forum=winserverDS\nicacls\nhttp://serverfault.com/questions/578129/how-to-replace-permissions-and-everything-inside-with-icacls-on-windows-server-2. I ended up ditching Windows and going with Ubuntu, these are the steps I followed:\nhttp://askubuntu.com/questions/420652/how-to-setup-a-restricted-sftp-server-on-ubuntu/607898#607898. ",
    "smaug9": "@bagajjal: ETA for next release?\nAlso, confirmed that mounting a volume in an empty folder on the C:\\ drive and connecting via winscp fails.\n. ",
    "helplessJ": "Thud.. ",
    "altg1970": "Hello Manoj,\nReally the problem isn\u00b4t related clanezilla itself, I detected this issue\nbecause we use clonezilla for disk images  and Clonezilla can storage that\nimages in external usb drive, NFS, SAMBA and SSH. We need to use a windows\nserver as ssh server so we install your openssh. The connection and\nautentication process between clonezilla and your openssh was fine the\nproblem showed up when clonezilla try to mount a unit using sshfs type well\nreally clonezilla can mount a unit using sshfs, and even create directories\nbut when the program try to create files the system deny the operation.\nClonezilla is a live CD so it tried to mount a file system in the target\nthat you select.\nWe wanted to be sure if it was clonezilla problem or it was sshfs mount\ntype so we used an opensuse and try to tested it and we had the same\nproblem, we were able to mount the unit, created directories but we weren't\nable to create files. I don't know where to look up the sources of this\nissue, may it be server policies, it seems windows fail but I don't know,\nif you tell me where can I look up, log, events etc.. I can narrow the\nsource of the problem.\nRegards\n2017-03-01 22:32 GMT+01:00 Manoj Ampalam notifications@github.com:\n\nHaven't worked with CloneZilla yet. It will help if you can explain how it\nworks and how its related to SSH and SFTP\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/541#issuecomment-283476894,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AYzPSXpJjVo7mq8qGwD6ScwVL4q35Lzhks5rhePQgaJpZM4MLL_y\n.\n. \n",
    "milindbangar79": "Tried the following FQDN : \n\nsvcpltadmindev@us.xxx.com@winbox\n'us\\svcpltadmindev'@winbox\n'us.xxx.com\\svcpltadmindev'@winbox\n\nNo luck.\nHope that's what you were looking for..\nWe have configured in another windows box and trying and getting the following \nInvalid user us.xxx.com\\dadmmbangar from 10.36.18.100 port 59584\nI am able to RDP the Windows server, but not able to connect via ssh. User profile is available on the Windows server.\nThe user we are testing against is a domain user.\nQuery : Is there any limitation for cross domain ssh based authentication, which should be taken care during installation?. ",
    "jschvartz": "Hi,\nMaybe my issue is related to this one: \n- WIN10 host with openssd sshd daemon (for tests purpose, will be using on WIN2008 or WIN2012 Servers)\n- RHEL 6 ssh client\n- Both in the same AD domain\n\"ssh user@domain@host command\" works ok, but cannot access Domain shares.\nI noticed this in debug output;\n[NetUserGetInfo() failed with error: 1722 for user]\nI  attached the entire debug output of a sigle command.\nThanks for your work.\nJoel\nsshd.debug.txt\n. Hi Manoj,\nThanks for your quick answers.\nStill, i don't understand it all.\nCase #518 seems to be related to non-domain machines  or users, while both my server and user are part of a domain, trying to access a share in the same domain.\nAnd does it mean that that the latest openssh-portable does fix this issue  (as per fix #82) ?\nOr are you still working on it (case #553) ?\nOr is it definitely a closed case as it is considered as a possible threat ?\nMany thanks again for your work,\nJoel\n\nDe : Manoj Ampalam [notifications@github.com]\nEnvoy\u00e9 : vendredi 3 mars 2017 19:48\n\u00c0 : PowerShell/Win32-OpenSSH\nCc : Joel Schvartz; Comment\nObjet : Re: [PowerShell/Win32-OpenSSH] SSH Authentication Fails from Linux to Windows Box (#543)\nYou cannot access domain shares because of this - #518https://github.com/PowerShell/Win32-OpenSSH/issues/518\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/543#issuecomment-284037423, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AGH3NGwaEIXBdOn7jS8juDke7mjA3RNaks5riGCTgaJpZM4MLb2z\n. Hello Manoj,\nIf i am already authenticated as a domain user on a host, why preventing me to also be identified in the domain on another host and get access to shares on this host?\nI understand it could be a threat in certain circumstances, but nothing worse that \u201crsh\u201d I am using now \u2026\nCould be fully configurable?\nIs it not worth opening a new discussion on the subject?\nThanks,\nJoel\nJoel Schvartz\nIng\u00e9nieur Syst\u00e8mes et S\u00e9curit\u00e9\nMalesherbes - Manchecourt\n+33 238 32 34 36\nmobile\n+33 610 15 93 71\nDe : Manoj Ampalam [mailto:notifications@github.com]\nEnvoy\u00e9 : dimanche 5 mars 2017 10:10\n\u00c0 : PowerShell/Win32-OpenSSH\nCc : Joel Schvartz; Comment\nObjet : Re: [PowerShell/Win32-OpenSSH] SSH Authentication Fails from Linux to Windows Box (#543)\naccessing a share (domain or not) involves authentication. Remote ssh sessions created using key based auth cannot do outbound authentication, hence cannot access any share.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/543#issuecomment-284215205, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AGH3NK5vec1yMpcojn-Zh9Of4PQy5y_7ks5rinvegaJpZM4MLb2z.\n. Yes, it does work ok as specified in last documentation (tried it successfully this afternoon).\nOnly the link for psexec:\nhttps://technet.microsoft.com/en-us/sysinternals/pxexec.aspx\nis no longer valid and should be replaced by:\nhttps://technet.microsoft.com/en-us/sysinternals/pstools\nThanks for everything!\nJoel\n. ",
    "mirathewhite": "Thank you @bagajjal .. ",
    "dbroeglin": "I'm curious if there is any ETA on this subject. I was trying to setup a git server on windows using Git over SSH and this would have been just the way to go.\n. ",
    "jasongin": "I hit this problem on a Windows 10 system joined to Azure AD (\"work or school account\").\nNetUserGetInfo() failed with error: 5\n\nAfter I disconnected the system from Azure AD and joined a regular local network domain, then OpenSSH authentication succeeded.\n. ",
    "hume-github": "I will add that I'm seeing the above error (\"NetUserGetInfo() failed with error: 5\") on a Windows 10 PC joined to a Win2008R2 domain, but only when sshd is running as a service.  If I start sshd from an Administrator powershell, I can SSH in with my domain account just fine.\nA wireshark shows the domain controller returning a \"OpenUser response, STATUS_ACCESS_DENIED\".. ",
    "mnalis": "The bug evidently manifest itself in a way that ssh to windows sshd server works from command line, but does not work from crontab. It also fails from command line if you redirect stdin from /dev/null, like so:\nssh  winserver whoami < /dev/null\n\nUntil this is fixed, I've had to use this wrapper script on ssh client. In my case it was because windows sshd does not work when there is not STDIN attached. See #556 for workaround on the client side.. yes, with -n (or < /dev/null\") it would fail also when run on command line (and not just when invoked from crontab). It just demonstrates what the problem is (not handling missing STDIN) and does not fix the problem. \nThe workaround is using  this perl script  linked from #556. It fakes STDIN with no input, so sshd on windows side continues to work normally. \nAnother (worse, but simpler to try) workaround might be using -tt which would probably run the command, but the output would be mangled with escape sequences and line wrappings (as sshd would assume you are at 80x25 terminal). ",
    "altano": "Question 1: So choco install openssh /SSHAgentFeature (and the chocolately install in general) can't be used if one wants to make use of ssh-agent?\nQuestion 2: how does one make use of ssh-agent from the OpenSSH port to have persistent authentication? E.g. Being prompted for the password to my key the first time I open my console or the first time ssh runs, but not subsequently. Are there any guides/tutorials? I have this working using Pageant and posh-git on another machine but I'd love to be able to replace those with this port.. Oh I see from your link that those services are from enabling dev mode, not from the choco install of openssh. So my second question remains: I've installed this port using chocolately: now what? How do I use ssh-agent from this port to get the same functionality as Pageant?. UPDATE: Oh, you said UNSET %SSH_AUTH_SOCK%. Yeah, that did the trick. I'll figure out what is setting it and take care of that. Thanks :)\nI'm definitely using the ssh from this OpenSSH port:\n```\nC:\\WINDOWS\\system32> Get-Command ssh-add\nCommandType     Name                                               Version    Source\n-----------     ----                                               -------    ------\nApplication     ssh-add.exe                                        7.6.1.0    C:\\Program Files\\OpenSSH-Win64\\ssh-add.exe\nC:\\WINDOWS\\system32> Get-Command ssh\nCommandType     Name                                               Version    Source\n-----------     ----                                               -------    ------\nApplication     ssh.exe                                            7.6.1.0    C:\\Program Files\\OpenSSH-Win64\\ssh.exe\n```\nBut interestingly, \nC:\\WINDOWS\\system32> gci Env: | grep -i ssh\nSSH_AGENT_PID                  8072\nSSH_AUTH_SOCK                  /tmp/ssh-nxsdvBS2drI3/agent.24336\nWhich appears to be a valid path (in PowerShell) to c:\\tmp, but still empty:\n```\nC:\\WINDOWS\\system32> gci -Recurse /tmp\nDirectory: C:\\tmp\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----        4/14/2018   6:42 PM                ssh-DEhw9URW70Jz\n```. It was coming from posh-git. There's an effort to separate out ssh from posh-git[0] which maybe will make the two play well together, but for now I just uninstalled posh-git.\n[0] https://github.com/dahlbyk/posh-git/pull/526. ",
    "nellfr": "18176 12:17:01 482 debug2: accept io:000000FFEC2B0930\n18176 12:17:01 482 debug1: socket:560, io:000000FFEC2B0930, fd:5 \n18176 12:17:01 482 debug1: pipe - r-h:568,io:000000FFEC2B05C0,fd:6  w-h:552,io:000000FFEC2B0CA0,fd:7\n18176 12:17:01 482 debug1: spawning \"C:\\Program Files\\OpenSSH\\sshd.exe\"\n18176 12:17:01 483 debug1: Register child 0000000000000240 pid 4184, 0 zombies of 2\n18176 12:17:01 483 debug1: close - io:000000FFEC2B0930, type:1, fd:5, table_index:5\n18176 12:17:01 483 debug2: close - io:000000FFEC2B0930\n18176 12:17:01 483 debug1: Forked child 4184.\n18176 12:17:01 483 debug1: close - io:000000FFEC2B0CA0, type:2, fd:7, table_index:7\n18176 12:17:01 483 debug2: fileclose - pio:000000FFEC2B0CA0\n18176 12:17:01 484 debug2: on_select - io:000000FFEC2AEB20 type:1 rd:1\n18176 12:17:01 484 debug2: on_select - io:000000FFEC2AE0B0 type:1 rd:1\n18176 12:17:01 484 debug2: ReadFileEx io:000000FFEC2B05C0\n4184 12:17:01 629 debug1: child socket: 560\n4184 12:17:01 629 debug1: child startup_pipe: 552\n4184 12:17:01 630 Connection from 10.0.168.138 port 40356 on 10.0.146.37 port 22\n4184 12:17:01 630 debug1: Client protocol version 2.0; client software version OpenSSH_6.6.1\n4184 12:17:01 630 debug1: match: OpenSSH_6.6.1 pat OpenSSH_6.6.1 compat 0x04000000\n4184 12:17:01 630 debug1: Local version string SSH-2.0-OpenSSH_7.4\n4184 12:17:01 630 debug1: Enabling compatibility mode for protocol 2.0\n4184 12:17:01 630 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n4184 12:17:01 630 debug1: SSH2_MSG_KEXINIT sent\n4184 12:17:01 635 debug1: SSH2_MSG_KEXINIT received\n4184 12:17:01 635 debug1: kex: algorithm: curve25519-sha256@libssh.org\n4184 12:17:01 635 debug1: kex: host key algorithm: ecdsa-sha2-nistp256\n4184 12:17:01 635 debug1: kex: client->server cipher: aes128-ctr MAC: hmac-sha1-etm@openssh.com compression: none\n4184 12:17:01 635 debug1: kex: server->client cipher: aes128-ctr MAC: hmac-sha1-etm@openssh.com compression: none\n4184 12:17:01 635 debug1: expecting SSH2_MSG_KEX_ECDH_INIT\n4184 12:17:01 645 debug1: rekey after 4294967296 blocks\n4184 12:17:01 645 debug1: SSH2_MSG_NEWKEYS sent\n4184 12:17:01 645 debug1: expecting SSH2_MSG_NEWKEYS\n4184 12:17:01 655 debug1: SSH2_MSG_NEWKEYS received\n4184 12:17:01 655 debug1: rekey after 4294967296 blocks\n4184 12:17:01 655 debug1: KEX done\n4184 12:17:01 715 debug1: userauth-request for user ssh_user service ssh-connection method none\n4184 12:17:01 715 debug1: attempt 0 failures 0\n4184 12:17:01 716 Failed none for ssh_user from 10.0.168.138 port 40356 ssh2\n4184 12:17:01 717 debug1: userauth-request for user ssh_user service ssh-connection method publickey\n4184 12:17:01 717 debug1: attempt 1 failures 0\n4184 12:17:01 717 debug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:Amf1vjWBG/ngcq4/aQRpvaS2CJAel03pS0THK5SSabo\n4184 12:17:01 717 Postponed publickey for ssh_user from 10.0.168.138 port 40356 ssh2\n4184 12:17:01 724 debug1: userauth-request for user ssh_user service ssh-connection method publickey\n4184 12:17:01 724 debug1: attempt 2 failures 0\n4184 12:17:01 728 Accepted publickey for ssh_user from 10.0.168.138 port 40356 ssh2: RSA SHA256:Amf1vjWBG/ngcq4/aQRpvaS2CJAel03pS0THK5SSabo\n4184 12:17:01 728 debug1: close - io:0000000B1840DF60, type:2, fd:4, table_index:4\n18176 12:17:01 729 debug2: ReadCB pio:000000FFEC2B05C0, pending_state:1, error:109, received:0\n18176 12:17:01 729 debug1: close - io:000000FFEC2B05C0, type:2, fd:6, table_index:6\n18176 12:17:01 729 debug2: fileclose - pio:000000FFEC2B05C0\n4184 12:17:01 729 debug1: Entering interactive session for SSH2.\n4184 12:17:01 729 debug1: pipe - r-h:552,io:0000000B1840DF60,fd:4  w-h:396,io:0000000B18435F80,fd:6\n4184 12:17:01 729 debug1: server_init_dispatch\n18176 12:17:01 729 debug2: on_select - io:000000FFEC2AEB20 type:1 rd:1\n18176 12:17:01 729 debug2: on_select - io:000000FFEC2AE0B0 type:1 rd:1\n4184 12:17:01 730 debug1: server_input_channel_open: ctype session rchan 0 win 2097152 max 32768\n4184 12:17:01 730 debug1: input_session_request\n4184 12:17:01 730 debug1: channel 0: new [server-session]\n4184 12:17:01 730 debug1: session_new: session 0\n4184 12:17:01 730 debug1: session_open: channel 0\n4184 12:17:01 730 debug1: session_open: session 0: link with channel 0\n4184 12:17:01 730 debug1: server_input_channel_open: confirm session\n4184 12:17:01 730 debug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\n4184 12:17:01 772 debug1: server_input_channel_req: channel 0 request env reply 0\n4184 12:17:01 772 debug1: session_by_channel: session 0 channel 0\n4184 12:17:01 772 debug1: session_input_channel_req: session 0 req env\n4184 12:17:01 772 debug1: server_input_channel_req: channel 0 request exec reply 1\n4184 12:17:01 772 debug1: session_by_channel: session 0 channel 0\n4184 12:17:01 772 debug1: session_input_channel_req: session 0 req exec\n4184 12:17:01 772 Starting session: command for ssh_user from 10.0.168.138 port 40356 id 0\n4184 12:17:01 772 debug1: pipe - r-h:400,io:0000000B184371B0,fd:7  w-h:408,io:0000000B18437260,fd:8\n4184 12:17:01 772 debug1: pipe - r-h:412,io:0000000B18437310,fd:9  w-h:416,io:0000000B184373C0,fd:10\n4184 12:17:01 772 debug1: pipe - r-h:420,io:0000000B18437470,fd:11  w-h:424,io:0000000B18437520,fd:12\n4184 12:17:01 775 debug1: Executing command: C:\\Program Files\\OpenSSH\\ssh-shellhost.exe -nopty \"powershell C:\\script_path\\powershell_script.ps1 param1 param2 param3 \"\n4184 12:17:01 776 debug1: Register child 00000000000001C4 pid 21860, 0 zombies of 0\n4184 12:17:01 776 debug1: close - io:0000000B184371B0, type:2, fd:7, table_index:7\n4184 12:17:01 776 debug1: close - io:0000000B184373C0, type:2, fd:10, table_index:10\n4184 12:17:01 779 debug1: close - io:0000000B18437520, type:2, fd:12, table_index:12\n4184 12:17:01 781 debug1: close - io:0000000B18437260, type:2, fd:8, table_index:8\n4184 12:17:01 784 debug1: close - io:0000000B18437310, type:2, fd:9, table_index:9\n4184 12:17:01 784 debug1: close - io:0000000B18437470, type:2, fd:11, table_index:11\n4184 12:17:01 786 debug1: zombie'ing child at index 0, 0 zombies of 1\n4184 12:17:01 786 debug1: raise sig:3\n4184 12:17:01 786 debug1: process_queued_signals: WARNING - A signal has interrupted and was processed\n4184 12:17:01 786 debug1: Received SIGCHLD.\n4184 12:17:01 786 debug1: Unregister child at index 0, 1 zombies of 1\n4184 12:17:01 786 debug1: session_by_pid: pid 21860\n4184 12:17:01 786 debug1: session_exit_message: session 0 channel 0 pid 21860\n4184 12:17:01 786 debug1: session_exit_message: release channel 0\n4184 12:17:01 788 debug1: session_by_channel: session 0 channel 0\n4184 12:17:01 788 debug1: session_close_by_channel: channel 0 child 0\n4184 12:17:01 788 Close session: user ssh_user from 10.0.168.138 port 40356 id 0\n4184 12:17:01 788 debug1: channel 0: free: server-session, nchannels 1\n4184 12:17:01 788 Received disconnect from 10.0.168.138 port 40356:11: disconnected by user\n4184 12:17:01 788 Disconnected from 10.0.168.138 port 40356\n4184 12:17:01 788 debug1: do_cleanup\n18176 12:17:01 790 debug1: zombie'ing child at index 2, 0 zombies of 3\n18176 12:17:01 790 debug1: raise sig:3\n18176 12:17:01 790 debug1: Unregister child at index 2, 1 zombies of 3\n18176 12:17:01 791 debug2: signal() sig:3, handler:000007F7C147C4F0\n18176 12:17:01 791 debug1: process_queued_signals: WARNING - A signal has interrupted and was processed\n18176 12:17:01 791 debug2: on_select - io:000000FFEC2AEB20 type:1 rd:1\n18176 12:17:01 791 debug2: on_select - io:000000FFEC2AE0B0 type:1 rd:1. Hi @mnalis thank you for feedback.\nIn my case the ssh command is executed by a \"client wrapper\" which I mentioned earlier as Linux script (scheduled in cron). \nI just tried with \"-n\" and the result is the same, PowerShell script residing on Windows server is not invoked at all. \nI will paste ssh client and server logs in a moment.. Thanks for the two suggestions.\nI confirm that -tt option allow to execute the command on server. As the target implementation of the ssh command is to be run by an automation tool silently this workaround is acceptable. Indeed no human is supposed to read output. \nI hope pty allocation and STDIN handling will be fixed in future release to align Microsoft OpenSSH capabilities with OpenSSH on Linux. . I have upgraded OpenSSH package from 0.0.8.0 to 0.0.12.0 but I figured out recently that above workaround (-tt) is no longer working. It results in ssh client command runs and exists immediately from client, and from server it does not execute the script which is same situation than initial issue. \nIs there any remaining workaround or plan to support it ? . Hello, I am experiencing same issue when using -n option with OpenSSH Client version v0.0.21 and OpenSSH Server version v0.0.20 (both on Windows 2012 servers).\nThe error is raised after ssh client times out (5 minutes in my tests).. The ssh command is initiated from CHEF client, I will try to grab the client output with -vvv. \nMeanwhile I was able to collect the DEBUG3 logs on server side.. 11476 15:38:13:105 debug3: socket:356, io:0000001F2FA85CE0, fd:5 \n11476 15:38:13:105 debug3: fd 5 is not O_NONBLOCK\n11476 15:38:13:105 debug3: pipe - r-h:336,io:0000001F2FA85D90,fd:6  w-h:396,io:0000001F2FA78470,fd:7\n11476 15:38:13:105 debug3: spawning \"C:\\Program Files\\OpenSSH\\sshd.exe\"\n11476 15:38:13:105 debug3: Register child 000000000000013C pid 9132, 0 zombies of 0\n11476 15:38:13:105 debug3: close - io:0000001F2FA85CE0, type:1, fd:5, table_index:5\n11476 15:38:13:105 debug1: Forked child 9132.\n11476 15:38:13:105 debug3: close - io:0000001F2FA78470, type:2, fd:7, table_index:7\n9132 15:38:13:120 debug1: sshd version OpenSSH_7.5, LibreSSL 2.5.3\n9132 15:38:13:120 debug3: socket:0, socktype:1, io:000000347A65FC20, fd:3 \n9132 15:38:13:120 debug3: close - io:000000347A65FC20, type:2, fd:3, table_index:3\n9132 15:38:13:120 debug3: open - handle:00000000000000F0, io:000000347A660750, fd:3\n9132 15:38:13:120 debug3: ReadFileEx() ERROR:38, io:000000347A660750\n9132 15:38:13:120 debug3: read - no more data, io:000000347A660750\n9132 15:38:13:120 debug3: ReadFileEx() ERROR:38, io:000000347A660750\n9132 15:38:13:120 debug3: read - no more data, io:000000347A660750\n9132 15:38:13:120 debug3: close - io:000000347A660750, type:2, fd:3, table_index:3\n9132 15:38:13:120 debug1: private host key #0: ssh-rsa SHA256:l/79rJLA22Ufg3r3REYmNcnoPG3t/oFsATfvSDYNDpQ\n9132 15:38:13:120 debug3: open - handle:00000000000000F0, io:000000347A660750, fd:3\n9132 15:38:13:120 debug3: ReadFileEx() ERROR:38, io:000000347A660750\n9132 15:38:13:120 debug3: read - no more data, io:000000347A660750\n9132 15:38:13:120 debug3: ReadFileEx() ERROR:38, io:000000347A660750\n9132 15:38:13:120 debug3: read - no more data, io:000000347A660750\n9132 15:38:13:120 debug3: close - io:000000347A660750, type:2, fd:3, table_index:3\n9132 15:38:13:120 debug1: private host key #1: ssh-dss SHA256:hgueF2cofwkLFpfxgfqhfPLkDvYV600H26rzUflBpcI\n9132 15:38:13:120 debug3: open - handle:00000000000000F0, io:000000347A660750, fd:3\n9132 15:38:13:120 debug3: ReadFileEx() ERROR:38, io:000000347A660750\n9132 15:38:13:120 debug3: read - no more data, io:000000347A660750\n9132 15:38:13:120 debug3: ReadFileEx() ERROR:38, io:000000347A660750\n9132 15:38:13:120 debug3: read - no more data, io:000000347A660750\n9132 15:38:13:120 debug3: close - io:000000347A660750, type:2, fd:3, table_index:3\n9132 15:38:13:120 debug1: private host key #2: ecdsa-sha2-nistp256 SHA256:ihIIAATwL+ZaE9iRPDr0NvQguyPuXnqBfKAyAUQ3wmc\n9132 15:38:13:120 debug3: open - handle:00000000000000F0, io:000000347A660750, fd:3\n9132 15:38:13:120 debug3: ReadFileEx() ERROR:38, io:000000347A660750\n9132 15:38:13:120 debug3: read - no more data, io:000000347A660750\n9132 15:38:13:120 debug3: ReadFileEx() ERROR:38, io:000000347A660750\n9132 15:38:13:120 debug3: read - no more data, io:000000347A660750\n9132 15:38:13:120 debug3: close - io:000000347A660750, type:2, fd:3, table_index:3\n9132 15:38:13:120 debug1: private host key #3: ssh-ed25519 SHA256:OJRDcYTRtNk98QuhZPP37yZT9lBVtHXXUQNNmPTeVmY\n9132 15:38:13:136 debug1: child socket: 356\n9132 15:38:13:136 debug1: child startup_pipe: 396\n9132 15:38:13:136 Connection from 10.0.168.48 port 51524 on 10.0.10.37 port 22\n9132 15:38:13:136 debug1: Client protocol version 2.0; client software version OpenSSH_7.5\n9132 15:38:13:136 debug1: match: OpenSSH_7.5 pat OpenSSH compat 0x04000000\n9132 15:38:13:136 debug1: Local version string SSH-2.0-OpenSSH_7.5\n9132 15:38:13:136 debug2: fd 3 setting O_NONBLOCK\n9132 15:38:13:136 debug3: socket:0, socktype:1, io:000000347A6622A0, fd:5 \n9132 15:38:13:136 debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms\n9132 15:38:13:136 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n9132 15:38:13:136 debug3: send packet: type 20\n9132 15:38:13:136 debug1: SSH2_MSG_KEXINIT sent\n9132 15:38:13:136 debug3: receive packet: type 20\n9132 15:38:13:136 debug1: SSH2_MSG_KEXINIT received\n9132 15:38:13:136 debug2: local server KEXINIT proposal\n9132 15:38:13:136 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\n9132 15:38:13:136 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n9132 15:38:13:136 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n9132 15:38:13:136 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n9132 15:38:13:136 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n9132 15:38:13:136 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n9132 15:38:13:136 debug2: compression ctos: none\n9132 15:38:13:136 debug2: compression stoc: none\n9132 15:38:13:136 debug2: languages ctos: \n9132 15:38:13:136 debug2: languages stoc: \n9132 15:38:13:136 debug2: first_kex_follows 0 \n9132 15:38:13:136 debug2: reserved 0 \n9132 15:38:13:136 debug2: peer client KEXINIT proposal\n9132 15:38:13:136 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\n9132 15:38:13:136 debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\n9132 15:38:13:136 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n9132 15:38:13:136 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n9132 15:38:13:136 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n9132 15:38:13:136 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n9132 15:38:13:136 debug2: compression ctos: none\n9132 15:38:13:136 debug2: compression stoc: none\n9132 15:38:13:136 debug2: languages ctos: \n9132 15:38:13:136 debug2: languages stoc: \n9132 15:38:13:136 debug2: first_kex_follows 0 \n9132 15:38:13:136 debug2: reserved 0 \n9132 15:38:13:136 debug1: kex: algorithm: curve25519-sha256\n9132 15:38:13:136 debug1: kex: host key algorithm: ecdsa-sha2-nistp256\n9132 15:38:13:136 debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\n9132 15:38:13:136 debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\n9132 15:38:13:136 debug1: expecting SSH2_MSG_KEX_ECDH_INIT\n9132 15:38:13:136 debug3: receive packet: type 30\n9132 15:38:13:151 debug3: send packet: type 31\n9132 15:38:13:151 debug3: send packet: type 21\n9132 15:38:13:151 debug2: set_newkeys: mode 1\n9132 15:38:13:151 debug1: rekey after 134217728 blocks\n9132 15:38:13:151 debug1: SSH2_MSG_NEWKEYS sent\n9132 15:38:13:151 debug1: expecting SSH2_MSG_NEWKEYS\n9132 15:38:13:151 debug3: send packet: type 7\n9132 15:38:13:151 debug3: receive packet: type 21\n9132 15:38:13:151 debug1: SSH2_MSG_NEWKEYS received\n9132 15:38:13:151 debug2: set_newkeys: mode 0\n9132 15:38:13:151 debug1: rekey after 134217728 blocks\n9132 15:38:13:151 debug1: KEX done\n9132 15:38:13:167 debug3: receive packet: type 5\n9132 15:38:13:167 debug3: send packet: type 6\n9132 15:38:13:167 debug3: receive packet: type 50\n9132 15:38:13:167 debug1: userauth-request for user test_auto_usr service ssh-connection method none\n9132 15:38:13:167 debug1: attempt 0 failures 0\n9132 15:38:13:167 debug2: parse_server_config: config reprocess config len 271\n9132 15:38:13:167 debug2: input_userauth_request: setting up authctxt for test_auto_usr\n9132 15:38:13:167 debug2: input_userauth_request: try method none\n9132 15:38:13:167 Failed none for test_auto_usr from 10.0.168.48 port 51524 ssh2\n9132 15:38:13:167 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n9132 15:38:13:167 debug3: send packet: type 51\n9132 15:38:13:183 debug3: receive packet: type 50\n9132 15:38:13:183 debug1: userauth-request for user test_auto_usr service ssh-connection method publickey\n9132 15:38:13:183 debug1: attempt 1 failures 0\n9132 15:38:13:183 debug2: input_userauth_request: try method publickey\n9132 15:38:13:183 debug3: userauth_pubkey: have signature for RSA SHA256:Amf1vjWBG/ngcq4/aQRpvaS2CJAel03pS0THK5SSabo\n9132 15:38:13:183 debug1: trying public key file C:\\Users\\test_auto_usr\\.ssh/authorized_keys\n9132 15:38:13:183 debug1: matching key found: file C:\\Users\\test_auto_usr\\.ssh/authorized_keys, line 1 RSA SHA256:Amf1vjWBG/ngcq4/aQRpvaS2CJAel03pS0THK5SSabo\n9132 15:38:13:183 debug3: socket:0, socktype:1, io:000000347A692B80, fd:6 \n9132 15:38:13:183 debug3: test_auto_usr authenticated via pubkey\n9132 15:38:13:183 debug2: userauth_pubkey: authenticated 1 pkalg rsa-sha2-512\n9132 15:38:13:183 Accepted publickey for test_auto_usr from 10.0.168.48 port 51524 ssh2: RSA SHA256:Amf1vjWBG/ngcq4/aQRpvaS2CJAel03pS0THK5SSabo\n9132 15:38:13:183 debug3: send packet: type 52\n9132 15:38:13:183 debug3: close - io:000000347A6621F0, type:2, fd:4, table_index:4\n9132 15:38:13:183 debug3: notify_hostkeys: key 0: ssh-rsa SHA256:l/79rJLA22Ufg3r3REYmNcnoPG3t/oFsATfvSDYNDpQ\n11476 15:38:13:183 debug3: close - io:0000001F2FA85D90, type:2, fd:6, table_index:6\n9132 15:38:13:183 debug3: notify_hostkeys: key 1: ssh-dss SHA256:hgueF2cofwkLFpfxgfqhfPLkDvYV600H26rzUflBpcI\n9132 15:38:13:183 debug3: notify_hostkeys: key 2: ecdsa-sha2-nistp256 SHA256:ihIIAATwL+ZaE9iRPDr0NvQguyPuXnqBfKAyAUQ3wmc\n9132 15:38:13:183 debug3: notify_hostkeys: key 3: ssh-ed25519 SHA256:OJRDcYTRtNk98QuhZPP37yZT9lBVtHXXUQNNmPTeVmY\n9132 15:38:13:183 debug3: notify_hostkeys: sent 4 hostkeys\n9132 15:38:13:183 debug3: send packet: type 80\n9132 15:38:13:183 debug1: Entering interactive session for SSH2.\n9132 15:38:13:183 debug3: pipe - r-h:296,io:000000347A6621F0,fd:4  w-h:396,io:000000347A691F00,fd:7\n9132 15:38:13:183 debug2: fd 4 setting O_NONBLOCK\n9132 15:38:13:183 debug2: fd 7 setting O_NONBLOCK\n9132 15:38:13:183 debug1: server_init_dispatch\n9132 15:38:13:183 debug3: receive packet: type 90\n9132 15:38:13:183 debug1: server_input_channel_open: ctype session rchan 0 win 2097152 max 32768\n9132 15:38:13:183 debug1: input_session_request\n9132 15:38:13:183 debug1: channel 0: new [server-session]\n9132 15:38:13:183 debug2: session_new: allocate (allocated 0 max 10)\n9132 15:38:13:183 debug3: session_unused: session id 0 unused\n9132 15:38:13:183 debug1: session_new: session 0\n9132 15:38:13:183 debug1: session_open: channel 0\n9132 15:38:13:183 debug1: session_open: session 0: link with channel 0\n9132 15:38:13:183 debug1: server_input_channel_open: confirm session\n9132 15:38:13:183 debug3: send packet: type 91\n9132 15:38:13:183 debug3: receive packet: type 80\n9132 15:38:13:183 debug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\n9132 15:38:13:214 debug3: receive packet: type 98\n9132 15:38:13:214 debug1: server_input_channel_req: channel 0 request exec reply 1\n9132 15:38:13:214 debug1: session_by_channel: session 0 channel 0\n9132 15:38:13:214 debug1: session_input_channel_req: session 0 req exec\n9132 15:38:13:214 Starting session: command for test_auto_usr from 10.0.168.48 port 51524 id 0\n9132 15:38:13:214 debug3: pipe - r-h:324,io:000000347A691CE0,fd:8  w-h:320,io:000000347A691D90,fd:9\n9132 15:38:13:214 debug3: pipe - r-h:332,io:000000347A691E40,fd:10  w-h:328,io:000000347A692C30,fd:11\n9132 15:38:13:214 debug3: pipe - r-h:340,io:000000347A692CE0,fd:12  w-h:336,io:000000347A692D90,fd:13\n9132 15:38:13:214 debug2: fd 8 setting O_NONBLOCK\n9132 15:38:13:214 debug2: fd 9 setting O_NONBLOCK\n9132 15:38:13:214 debug2: fd 10 setting O_NONBLOCK\n9132 15:38:13:214 debug2: fd 11 setting O_NONBLOCK\n9132 15:38:13:214 debug2: fd 12 setting O_NONBLOCK\n9132 15:38:13:214 debug2: fd 13 setting O_NONBLOCK\n9132 15:38:14:384 debug1: Executing command: C:\\Program Files\\OpenSSH\\ssh-shellhost.exe -nopty cG93ZXJzaGVsbC5leGUgLUZpbGUgQzpcVFNDTV9BdXRvbWF0aW9uXFRTQ01fd3JhcHBlci5wczEgcmVnIGljb21yc2R3MDAwNDggdzJrMTIgMTAuMC4xNjguNDg=\n9132 15:38:14:384 debug3: Register child 000000000000015C pid 14696, 0 zombies of 0\n9132 15:38:14:384 debug2: fd 3 setting TCP_NODELAY\n9132 15:38:14:384 debug3: close - io:000000347A691CE0, type:2, fd:8, table_index:8\n9132 15:38:14:384 debug3: close - io:000000347A692C30, type:2, fd:11, table_index:11\n9132 15:38:14:399 debug3: close - io:000000347A692D90, type:2, fd:13, table_index:13\n9132 15:38:14:399 debug3: fd 10 is O_NONBLOCK\n9132 15:38:14:399 debug3: fd 9 is O_NONBLOCK\n9132 15:38:14:399 debug3: fd 12 is O_NONBLOCK\n9132 15:38:14:399 debug3: send packet: type 99\n9132 15:39:50:221 debug2: channel 0: read<=0 rfd 10 len 0\n9132 15:39:50:221 debug2: channel 0: read failed\n9132 15:39:50:221 debug2: channel 0: close_read\n9132 15:39:50:221 debug3: close - io:000000347A691E40, type:2, fd:10, table_index:10\n9132 15:39:50:221 debug2: channel 0: input open -> drain\n9132 15:39:50:221 debug2: channel 0: read 0 from efd 12\n9132 15:39:50:221 debug2: channel 0: closing read-efd 12\n9132 15:39:50:221 debug3: close - io:000000347A692CE0, type:2, fd:12, table_index:12\n9132 15:39:50:221 debug2: channel 0: ibuf empty\n9132 15:39:50:221 debug2: channel 0: send eof\n9132 15:39:50:221 debug3: send packet: type 96\n9132 15:39:50:221 debug2: channel 0: input drain -> closed\n9132 15:39:50:221 debug3: zombie'ing child at index 0, 0 zombies of 1\n9132 15:39:50:221 debug1: Received SIGCHLD.\n9132 15:39:50:221 debug3: Unregister child at index 0, 1 zombies of 1\n9132 15:39:50:221 debug1: session_by_pid: pid 14696\n9132 15:39:50:221 debug1: session_exit_message: session 0 channel 0 pid 14696\n9132 15:39:50:221 debug2: channel 0: request exit-status confirm 0\n9132 15:39:50:221 debug3: send packet: type 98\n9132 15:39:50:221 debug1: session_exit_message: release channel 0\n9132 15:39:50:221 debug2: channel 0: write failed\n9132 15:39:50:221 debug2: channel 0: close_write\n9132 15:39:50:221 debug3: close - io:000000347A691D90, type:2, fd:9, table_index:9\n9132 15:39:50:221 debug2: channel 0: send eow\n9132 15:39:50:221 debug3: send packet: type 98\n9132 15:39:50:221 debug2: channel 0: output open -> closed\n9132 15:39:50:221 debug2: channel 0: send close\n9132 15:39:50:221 debug3: send packet: type 97\n9132 15:39:50:221 debug3: channel 0: will not send data after close\n9132 15:39:50:237 debug2: notify_done: reading\n9132 15:39:50:237 debug3: channel 0: will not send data after close. From the Windows system, the CHEF client is issuing this command : \ncmd /c \"C:\\PROGRA~1\\OpenSSH-Win64\\ssh.exe -vvv -n -o StrictHostKeyChecking=no -i C:\\key_path\\id_rsa user@10.0.168.48 powershell.exe -File C:\\script_path\\script_wrapper.ps1 param1 param2 param3 > C:\\ssh_output.txt 2>&1\". Hello, were you able to reproduce this issue? I can provide additional information or logs whenever needed.. @bagajjal , I am executing the ssh command with \"-n\" can you try with that parameter please? \nAlso I observed that the \"GetConsoleMode on STD_INPUT_HANDLE failed with 6\" is raised after my target script (script_wrapper.ps1 on SSH server) runs during several minutes. I would suggest to sleep your script \"getdate.ps1\" for 5 minutes. . hello @rjpackito , I'm not sure to understand the problem you are facing with ssh. Do you observe \"GetConsoleMode on STD_INPUT_HANDLE failed with 6\" message while running an ssh command ? . ",
    "imayobrown": "We ran into this issue in conjunction with the trilead-ssh2 library used by Jenkins. We were trying to facilitate master -> Windows slave connections through ssh. The specific client code from the library that generates this error is here: https://github.com/jenkinsci/trilead-ssh2/blob/master/src/com/trilead/ssh2/Connection.java#L1550.\nIt seems that the cause is not the way the channel messages are processed but rather the way the child exec processes are spawned (which seems to have slightly different logic between the forks). The channel doesn't seem to notice that child process spawned by one of its dispatchers is still executing and has not returned anything into the output buffer yet. https://github.com/PowerShell/Win32-OpenSSH/blob/L1-Prod/session.c#L455\nI will try to see if I can provide a lighter weight example for reproduction.. ",
    "Huangdong2": "still too many errors with vs2013\n1>------ Build started: Project: config, Configuration: Debug x64 ------\n2>------ Build started: Project: libssh, Configuration: Debug x64 ------\n3>------ Build started: Project: openbsd_compat, Configuration: Debug x64 ------\n4>------ Build started: Project: posix_compat, Configuration: Debug x64 ------\n5>------ Build started: Project: ssh-lsa, Configuration: Debug x64 ------\n3>  strcasestr.c\n2>  digest-openssl.c\n4>  w32fd.c\n5>  Ssh-lsa.c\n3>  glob.c\n2>  ttymodes_windows.c\n5>..\\win32compat\\lsa\\Ssh-lsa.c(106): error C4996: '_swprintf': swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.\n5>          C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h(533) : see declaration of '_swprintf'\n5>..\\win32compat\\lsa\\Ssh-lsa.c(301): error C2275: 'PLSA_TOKEN_INFORMATION_V1' : illegal use of this type as an expression\n5>          C:\\Program Files (x86)\\Windows Kits\\8.1\\Include\\um\\NTSecPkg.h(183) : see declaration of 'PLSA_TOKEN_INFORMATION_V1'\n5>..\\win32compat\\lsa\\Ssh-lsa.c(301): error C2146: syntax error : missing ';' before identifier 'outTokenInfo'\n5>..\\win32compat\\lsa\\Ssh-lsa.c(301): error C2065: 'outTokenInfo' : undeclared identifier\n5>..\\win32compat\\lsa\\Ssh-lsa.c(302): error C2065: 'outTokenInfo' : undeclared identifier\n5>..\\win32compat\\lsa\\Ssh-lsa.c(302): warning C4047: 'function' : 'PLSA_TOKEN_INFORMATION_V1 ' differs in levels of indirection from 'int '\n5>..\\win32compat\\lsa\\Ssh-lsa.c(302): warning C4024: 'LsaAllocTokenInfo' : different types for formal and actual parameter 1\n5>..\\win32compat\\lsa\\Ssh-lsa.c(304): error C2065: 'outTokenInfo' : undeclared identifier\n5>..\\win32compat\\lsa\\Ssh-lsa.c(304): warning C4047: '=' : 'PVOID' differs in levels of indirection from 'int'\n4>  signal.c\n2>  utf8.c\n3>  xcrypt.c\n2>  sandbox-pledge.c\n3>  vis.c\n4>  socketio.c\n2>  platform.c\n3>  timingsafe_bcmp.c\n4>  fileio.c\n2>  platform-tracing.c\n3>  strtoull.c\n4>  termio.c\n2>  platform-pledge.c\n3>  strtoul.c\n2>  xmalloc.c\n3>  strtonum.c\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\termio.c(104): error C2065: 'ENOMEM' : undeclared identifier\n4>  misc.c\n2>  verify.c\n3>  strtoll.c\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(147): error C2037: left of 'tv_sec' specifies undefined struct/union 'timespec'\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(147): error C2037: left of 'tv_nsec' specifies undefined struct/union 'timespec'\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(148): error C2065: 'EINVAL' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(153): error C2065: 'EFAULT' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(157): error C2037: left of 'tv_nsec' specifies undefined struct/union 'timespec'\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(160): error C2065: 'EFAULT' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(170): error C2065: 'EFAULT' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(245): error C2065: 'ENOTSUP' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(251): error C2065: 'EFAULT' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(260): error C2065: 'EBADF' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(267): error C2065: 'EBADF' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(319): error C2065: 'EINVAL' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(329): error C2065: 'ENOTSUP' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(361): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(375): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(514): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(526): error C2065: 'EOPNOTSUPP' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(572): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(589): error C2065: 'EOPNOTSUPP' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(597): error C2065: 'EOPNOTSUPP' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(608): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(645): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(660): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(675): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(706): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(917): error C2065: 'ENOTSUP' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(924): error C2065: 'EADDRINUSE' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(924): error C2065: 'EWOULDBLOCK' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\misc.c(925): error C2065: 'EADDRINUSE' : undeclared identifier\n4>  signal_sigalrm.c\n2>  uuencode.c\n3>  strsep.c\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\signal_sigalrm.c(88): error C2065: 'ENOMEM' : undeclared identifier\n4>  signal_sigchld.c\n2>  umac.c\n3>  strptime.c\n2>  ssh_api.c\n3>  strmode.c\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\signal_sigchld.c(44): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\signal_sigchld.c(72): error C2065: 'EINVAL' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\signal_sigchld.c(110): error C2065: 'EINVAL' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\signal_sigchld.c(157): error C2065: 'ENOTSUP' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\signal_sigchld.c(163): error C2065: 'ENOTSUP' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\signal_sigchld.c(169): error C2065: 'ECHILD' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\signal_sigchld.c(175): error C2065: 'ENOTSUP' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\signal_sigchld.c(185): error C2065: 'ECHILD' : undeclared identifier\n4>  w32log.c\n2>  sshkey.c\n3>  strlcpy.c\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(47): error C2275: 'wchar_t' : illegal use of this type as an expression\n4>          C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h(536) : see declaration of 'wchar_t'\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(47): error C2146: syntax error : missing ';' before identifier 'path'\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(47): error C2065: 'path' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(47): error C2109: subscript requires array or pointer type\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(47): error C2065: 'log_file' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(48): error C2065: 'path' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(48): warning C4047: 'function' : 'LPWSTR' differs in levels of indirection from 'int'\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(48): warning C4024: 'GetModuleFileNameW' : different types for formal and actual parameter 2\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(51): error C2065: 'path' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(51): error C2109: subscript requires array or pointer type\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(55): error C2065: 'path' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(55): warning C4047: 'function' : 'const wchar_t ' differs in levels of indirection from 'int'\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(55): warning C4024: 'wcslen' : different types for formal and actual parameter 1\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(55): warning C4047: 'initializing' : 'wchar_t ' differs in levels of indirection from 'size_t'\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(56): error C2065: 'path' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(56): warning C4047: '>' : 'wchar_t ' differs in levels of indirection from 'int'\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(59): error C2065: 'log_file' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(59): warning C4022: 'memcpy' : pointer mismatch for actual parameter 1\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(59): error C2065: 'path' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(59): warning C4022: 'memcpy' : pointer mismatch for actual parameter 2\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(59): error C2296: '' : illegal, left operand has type 'wchar_t '\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(59): error C2198: 'memcpy' : too few arguments for call\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(60): error C2065: 'log_file' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(60): error C2065: 'path' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(68): error C2065: 'log_file' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(68): warning C4047: 'function' : 'const wchar_t ' differs in levels of indirection from 'int'\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\w32log.c(68): warning C4024: '_wopen' : different types for formal and actual parameter 1\n4>  pwd.c\n3>  strlcat.c\n2>  ssherr.c\n2>  sshbuf.c\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\pwd.c(109): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\pwd.c(135): error C2065: 'ENOENT' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\pwd.c(141): error C2065: 'ENOENT' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\pwd.c(148): error C2065: 'ENOENT' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\pwd.c(165): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\pwd.c(174): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\pwd.c(245): error C2065: 'ENOMEM' : undeclared identifier\n4>  win32_dirent.c\n3>  sha2.c\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\sshbuf.c(32): error C2054: expected '(' to follow 'inline'\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\sshbuf.c(33): error C2085: 'sshbuf_check_sanity' : not in formal parameter list\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\sshbuf.c(33): error C2143: syntax error : missing ';' before '{'\n2>  sshbuf-misc.c\n3>  sha1.c\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\win32_dirent.c(60): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\win32_dirent.c(73): error C2065: 'ENOMEM' : undeclared identifier\n4>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\win32_dirent.c(123): error C2065: 'ENOMEM' : undeclared identifier\n4>  no-ops.c\n2>  sshbuf-getput-crypto.c\n4>  win32_zlib.c\n3>  setproctitle.c\n2>  sshbuf-getput-basic.c\n4>  ansiprsr.c\n3>  setenv.c\n2>  ssh-rsa.c\n4>  console.c\n3>  rresvport.c\n2>  ssh-pkcs11.c\n3>  rmd160.c\n2>  Generating Code...\n4>  tncon.c\n3>  Generating Code...\n4>  tnnet.c\n2>  Compiling...\n2>  ssh-ed25519.c\n3>  Compiling...\n3>  reallocarray.c\n3>  readpassphrase.c\n4>  utf.c\n2>  ssh-ecdsa.c\n3>  port-uw.c\n2>  ssh-dss.c\n4>  Generating Code...\n3>  port-tun.c\n2>  smult_curve25519_ref.c\n2>  sc25519.c\n3>  port-solaris.c\n2>  rsa.c\n3>  port-linux.c\n2>  rijndael.c\n3>  port-irix.c\n2>  readpass.c\n3>  openssl-compat.c\n2>  progressmeter.c\n3>  mktemp.c\n2>  poly1305.c\n3>  md5.c\n2>  packet.c\n3>  kludge-fd_set.c\n3>  inet_ntop.c\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\packet.c(2637): warning C4090: 'function' : different 'const' qualifiers\n2>  opacket.c\n3>  inet_ntoa.c\n2>  nchan.c\n3>  inet_aton.c\n2>  msg.c\n3>  getrrsetbyname-ldns.c\n2>  monitor_fdpass.c\n3>  getopt_long.c\n2>  moduli.c\n3>  getgrouplist.c\n2>  misc.c\n3>  getcwd.c\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\misc.c(1034): error C2079: 'ts' uses undefined struct 'timespec'\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\misc.c(1034): error C2079: 'rm' uses undefined struct 'timespec'\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\misc.c(1070): error C2223: left of '->tv_sec' must point to struct/union\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\misc.c(1070): error C2223: left of '->tv_nsec' must point to struct/union\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\misc.c(1071): warning C4133: 'function' : incompatible types - from 'int ' to 'const timespec '\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\misc.c(1071): warning C4133: 'function' : incompatible types - from 'int ' to 'timespec '\n2>  md-sha256.c\n3>  fmt_scaled.c\n2>  match.c\n3>  fake-rfc2553.c\n2>  mac.c\n3>  Generating Code...\n3>  Compiling...\n3>  explicit_bzero.c\n2>  Generating Code...\n3>  dirname.c\n2>  Compiling...\n2>  log.c\n3>  daemon.c\n2>  krl.c\n3>  bsd-waitpid.c\n2>  key.c\n3>  bsd-statvfs.c\n2>  kexgexc.c\n3>  bsd-snprintf.c\n2>  kexgex.c\n3>  bsd-setres_id.c\n2>  kexecdhs.c\n3>  bsd-poll.c\n3>  bsd-openpty.c\n2>  kexecdhc.c\n3>  bsd-nextstep.c\n2>  kexecdh.c\n3>  bsd-misc.c\n2>  kexdhs.c\n3>  bsd-getpeereid.c\n2>  kexdhc.c\n3>  bsd-cygwin_util.c\n2>  kexdh.c\n3>  bsd-cray.c\n3>  bsd-closefrom.c\n2>  kexc25519s.c\n3>  bsd-asprintf.c\n2>  kexc25519c.c\n3>  blowfish.c\n2>  kexc25519.c\n3>  bindresvport.c\n2>  kex.c\n3>  bcrypt_pbkdf.c\n2>  hostfile.c\n3>  basename.c\n2>  hmac.c\n3>  Generating Code...\n2>  hash.c\n3>  Compiling...\n3>  base64.c\n2>  gss-genr.c\n3>  arc4random.c\n2>  ge25519.c\n3>  Generating Code...\n2>  Generating Code...\n2>  Compiling...\n2>  fe25519.c\n2>  fatal.c\n2>  entropy.c\n2>  ed25519.c\n3>  openbsd_compat.vcxproj -> E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh\\lib\\x64\\Debug\\openbsd_compat.lib\n2>  dns.c\n6>------ Build started: Project: ssh-shellhost, Configuration: Debug x64 ------\n2>  dispatch.c\n6>  utf.c\n2>  digest-libc.c\n6>  shell-host.c\n2>  dh.c\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(518): error C2275: 'consoleEvent' : illegal use of this type as an expression\n6>          E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(86) : see declaration of 'consoleEvent'\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(518): error C2065: 'current' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(520): error C2065: 'current' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(521): error C2065: 'current' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(521): error C2223: left of '->event' must point to struct/union\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(522): error C2065: 'current' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(522): error C2223: left of '->hwnd' must point to struct/union\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(523): error C2065: 'current' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(523): error C2223: left of '->idObject' must point to struct/union\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(524): error C2065: 'current' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(524): error C2223: left of '->idChild' must point to struct/union\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(602): error C2275: 'DWORD' : illegal use of this type as an expression\n6>          C:\\Program Files (x86)\\Windows Kits\\8.1\\Include\\shared\\minwindef.h(156) : see declaration of 'DWORD'\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(602): error C2146: syntax error : missing ';' before identifier 'bufferSize'\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(602): error C2065: 'bufferSize' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(603): error C2065: 'bufferSize' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(613): error C2065: 'bufferSize' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(618): error C2275: 'COORD' : illegal use of this type as an expression\n6>          C:\\Program Files (x86)\\Windows Kits\\8.1\\Include\\um\\wincon.h(43) : see declaration of 'COORD'\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(618): error C2146: syntax error : missing ';' before identifier 'coordBufCoord'\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(618): error C2065: 'coordBufCoord' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(619): error C2065: 'coordBufCoord' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(619): error C2224: left of '.X' must have struct/union type\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(620): error C2065: 'coordBufCoord' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(620): error C2224: left of '.Y' must have struct/union type\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(623): error C2065: 'coordBufCoord' : undeclared identifier\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(623): error C2440: 'function' : cannot convert from 'int' to 'COORD'\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(623): warning C4024: 'ReadConsoleOutputW' : different types for formal and actual parameter 4\n6>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\shell-host.c(638): error C2065: 'bufferSize' : undeclared identifier\n6>  Generating Code...\n2>  deattack.c\n2>  crc32.c\n2>  compat.c\n2>  cleanup.c\n2>  cipher.c\n2>  cipher-ctr.c\n2>  cipher-chachapoly.c\n2>  cipher-bf1.c\n2>  cipher-aesctr.c\n2>  cipher-aes.c\n2>  cipher-3des1.c\n2>  channels.c\n2>  Generating Code...\n2>  Compiling...\n2>  chacha.c\n2>  canohost.c\n2>  buffer.c\n2>  bufec.c\n2>  bufbn.c\n2>  bufaux.c\n2>  blocks.c\n2>  bitmap.c\n2>  authfile.c\n2>  authfd.c\n2>  atomicio.c\n2>  addrmatch.c\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\addrmatch.c(64): error C2054: expected '(' to follow 'inline'\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\addrmatch.c(65): error C2085: 'masklen_valid' : not in formal parameter list\n2>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\addrmatch.c(65): error C2143: syntax error : missing ';' before '{'\n2>  Generating Code...\n7>------ Build started: Project: ssh, Configuration: Debug x64 ------\n8>------ Build started: Project: ssh-keygen, Configuration: Debug x64 ------\n9>------ Build started: Project: sftp, Configuration: Debug x64 ------\n10>------ Build started: Project: sftp-server, Configuration: Debug x64 ------\n11>------ Build started: Project: sshd, Configuration: Debug x64 ------\n12>------ Build started: Project: ssh-agent, Configuration: Debug x64 ------\n13>------ Build started: Project: ssh-add, Configuration: Debug x64 ------\n14>------ Build started: Project: scp, Configuration: Debug x64 ------\n7>  sshtty.c\n10>  wmain_common.c\n8>  wmain_common.c\n9>  wmain_common.c\n14>  wmain_common.c\n12>  groupaccess.c\n13>  wmain_common.c\n7>  sshconnect2.c\n9>  sftp.c\n10>  sftp-server.c\n8>  ssh-keygen.c\n11>  groupaccess.c\n12>  auth2-pubkey.c\n14>  scp.c\n13>  ssh-add.c\n7>  sshconnect1.c\n10>  sftp-server-main.c\n8>  Generating Code...\n9>  sftp-glob.c\n12>  auth-options.c\n14>  Generating Code...\n7>  sshconnect.c\n13>  Generating Code...\n11>  wmain_sshd.c\n10>  sftp-common.c\n9>  sftp-common.c\n7>  ssh.c\n11>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\wmain_sshd.c(119): error C2275: 'wchar_t' : illegal use of this type as an expression\n11>          C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h(536) : see declaration of 'wchar_t'\n11>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\wmain_sshd.c(119): error C2065: 'path_utf16' : undeclared identifier\n11>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\wmain_sshd.c(120): error C2065: 'path_utf16' : undeclared identifier\n11>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\wmain_sshd.c(120): warning C4047: 'function' : 'const wchar_t ' differs in levels of indirection from 'int'\n11>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\wmain_sshd.c(120): warning C4024: '_wchdir' : different types for formal and actual parameter 1\n11>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\wmain_sshd.c(121): error C2065: 'path_utf16' : undeclared identifier\n11>E:\\msys64\\home\\Gendonghuang\\openssh-portable\\contrib\\win32\\openssh......\\contrib\\win32\\win32compat\\wmain_sshd.c(121): warning C4022: 'free' : pointer mismatch for actual parameter 1\n10>  Generating Code...\n11>  sshpty.c\n12>  keyagent-request.c\n9>  sftp-client.c\n7>  readconf.c\n11>  sshlogin.c\n13>LINK : fatal error LNK1104: cannot open file 'posix_compat.lib'\n14>LINK : fatal error LNK1104: cannot open file 'posix_compat.lib'\n15>------ Build started: Project: unittest-bitmap, Configuration: Debug x64 ------\n9>  progressmeter.c\n10>LINK : fatal error LNK1104: cannot open file 'posix_compat.lib'\n16>------ Build started: Project: unittest-kex, Configuration: Debug x64 ------\n7>  clientloop.c\n12>  connection.c\n15>  wmain_common.c\n8>LINK : fatal error LNK1104: cannot open file 'posix_compat.lib'\n17>------ Build started: Project: unittest-sshbuf, Configuration: Debug x64 ------\n9>  Generating Code...\n17>  wmain_common.c\n18>------ Build started: Project: unittest-win32compat, Configuration: Debug x64 ------\n7>  wmain_common.c\n12>  agentconfig.c\n18>  wmain_common.c\n17>  test_helper.c\n7>  Generating Code...\n12>  authagent-request.c\n18>  test_helper.c\n17>  fuzz.c\n11>  sshd.c\n16>  wmain_common.c\n11>  sftp-common.c\n15>  test_helper.c\n16>  test_helper.c\n11>  session.c\n15>  tests.c\n16>  test_kex.c\n15>  Generating Code...\n16>  tests.c\n18>  tests.c\n17>  test_sshbuf_misc.c\n11>  serverloop.c\n12>  agent.c\n16>  kexgexs.c\n18>  socket_tests.c\n11>  servconf.c\n17>  test_sshbuf_getput_fuzz.c\n16>  Generating Code...\n18>  file_tests.c\n12>  agent-main.c\n17>  test_sshbuf_getput_crypto.c\n11>  sandbox-systrace.c\n15>LINK : fatal error LNK1181: cannot open input file 'posix_compat.lib'\n18>  Generating Code...\n16>LINK : fatal error LNK1181: cannot open input file 'posix_compat.lib'\n19>------ Build started: Project: unittest-utf8, Configuration: Debug x64 ------\n17>  test_sshbuf_getput_basic.c\n11>  sandbox-seccomp-filter.c\n12>  servconf.c\n19>  wmain_common.c\n17>  test_sshbuf_fuzz.c\n7>LINK : fatal error LNK1181: cannot open input file 'posix_compat.lib'\n11>  sandbox-rlimit.c\n20>------ Build started: Project: unittest-hostkeys, Configuration: Debug x64 ------\n21>------ Build started: Project: unittest-sshkey, Configuration: Debug x64 ------\n12>  auth.c\n18>LINK : fatal error LNK1181: cannot open input file 'posix_compat.lib'\n20>  test_iterate.c\n21>  wmain_common.c\n17>  test_sshbuf_fixed.c\n19>  test_helper.c\n11>  sandbox-null.c\n12>  Generating Code...\n20>  tests.c\n20>  wmain_common.c\n17>  test_sshbuf.c\n11>  sandbox-darwin.c\n19>  tests.c\n21>  test_helper.c\n17>  tests.c\n22>------ Build started: Project: unittest-match, Configuration: Debug x64 ------\n11>  sandbox-capsicum.c\n9>LINK : fatal error LNK1104: cannot open file 'posix_compat.lib'\n19>  Generating Code...\n21>  fuzz.c\n17>  Generating Code...\n20>  test_helper.c\n11>  platform.c\n19>LINK : fatal error LNK1181: cannot open input file 'posix_compat.lib'\n22>  wmain_common.c\n21>  test_sshkey.c\n12>LINK : fatal error LNK1181: cannot open input file 'posix_compat.lib'\n20>  Generating Code...\n11>  monitor_wrap.c\n21>  test_fuzz.c\n20>LINK : fatal error LNK1181: cannot open input file 'posix_compat.lib'\n22>  test_helper.c\n11>  monitor.c\n21>  test_file.c\n22>  tests.c\n11>  md5crypt.c\n21>  tests.c\n22>  Generating Code...\n11>  loginrec.c\n22>LINK : fatal error LNK1181: cannot open input file 'posix_compat.lib'\n21>  common.c\n11>  Generating Code...\n21>  Generating Code...\n11>  Compiling...\n11>  kexgexs.c\n17>LINK : fatal error LNK1181: cannot open input file 'posix_compat.lib'\n21>LINK : fatal error LNK1181: cannot open input file 'posix_compat.lib'\n11>  kexecdhs.c\n11>  kexdhs.c\n11>  gss-serv.c\n11>  gss-serv-krb5.c\n11>  auth2.c\n11>  auth2-pubkey.c\n11>  auth2-passwd.c\n11>  auth2-none.c\n11>  auth2-kbdint.c\n11>  auth2-hostbased.c\n11>  auth2-gss.c\n11>  auth2-chall.c\n11>  auth.c\n11>  auth-skey.c\n11>  auth-sia.c\n11>  auth-shadow.c\n11>  auth-rhosts.c\n11>  auth-passwd.c\n11>  auth-pam.c\n11>  Generating Code...\n11>  Compiling...\n11>  auth-options.c\n11>  auth-krb5.c\n11>  auth-bsdauth.c\n11>  audit.c\n11>  audit-linux.c\n11>  audit-bsm.c\n11>  Generating Code...\n========== Build: 2 succeeded, 20 failed, 0 up-to-date, 0 skipped ==========\n. yes, I used vs2013 for the build\nby replacing ToolsVersion=\"14.0\" with ToolsVersion=\"12.0\"\nv140 with v120\nin all .sln;*.vcxproj files.\ndoes using vs2013 make it completely different? I thought it's just a GNU tool porting. ",
    "HolisticDeveloper": "@joeyaiello That's understandable, especially in regards to the dates. Is it possible to get a better sense of the remaining work? For example, do you just need to tackle the work in progress and work in pipeline items, or are you trying to get all the beta issues addressed?. Thank you for providing the insight, Joey.. ",
    "Adgreen": "I have heard that MS should include SSH in Win Server 2016.\n( If so, can/ how can I check if is is installed and activated on my Windows server 2016, )\nIs that done - or do I need to install this - in order to connect with SSH to my Windows server 2016,. What is the difference between installing installing Open SSH from CygWin : \nhttps://cygwin.com/packages/package_list.html\nhttps://cygwin.com/packages/x86_64/openssh/\nOr installing from your, https://github.com/PowerShell/Win32-OpenSSH/releases\n\"This is a pre-release (non-production ready)\". Yes ... \nI want both Client on my Win 10 machne. And also to install SSH Server on my Windows Server 2016.\nBut ...\nWhat is the difference between installing Open SSH from :\nInstalling from your, https://github.com/PowerShell/Win32-OpenSSH/releases\n\"This is a pre-release (non-production ready)\" ?\nOr CygWin.com :\nhttps://cygwin.com/packages/package_list.html\nhttps://cygwin.com/packages/x86_64/openssh/\nThey seem to have had a production ready version of SSh for Windows 32 and 64 bit. For at least 1,5 years.\nhttps://cygwin.com/packages/x86_64/openssh/ \nAre these two different development teams, both building Open SSH for Windows ?\n. ",
    "jrmuizel": "It looks like Microsoft Server for SSH was interfering. ",
    "jcoffland": "I'm using password auth.. ",
    "marcosnils": "@bagajjal IIRC running sshd in debug is a \"hack\" to make this work?. I was looking for a fix to the window resize  issue.  I guess I'll wait until it gets fixed :). Appreciate the input. @pivotal-jbarrett I use autologon (https://docs.microsoft.com/en-us/sysinternals/downloads/autologon) in AWS instances so the machine automatically logins at boot and then I can ssh into it. I guess it's similar to your script with the exception that autologon encrypts the password in the registry. @GoodMirek @bagajjal one thing that I've noticed is that even though CTRL+C works to interrupt commands (like the ping example you mentioned), if you press it while in the prompt, it doesn't cancel the current command  like it does in the real windows shell. Is there something that can be done for this?. @bagajjal that's what I supposed. Too bad that's console specific and that powershell / cmd doesn't react. Any ideas about it would be possible to overcome?. ",
    "sterling": "Attached etl file and sshd log. \nlogs.zip\n. This appears to have fixed the log spam for me. sshd starts up with just a few logs: \n8176 18:58:19 186 Server listening on :: port 22.\n8176 18:58:19 187 Server listening on 0.0.0.0 port 22.\n8176 18:58:19 187 error: Couldn't create pid file \"./sshd.pid\": Permission denied. ",
    "m00tness": "I can confirm @manojampalam  the referenced \"AddressFamily inet\" fix worked for me for this issue. THANK YOU. ",
    "WojtekKozaczynski": "The answer to your question is yes \u2013 the Debian machine can talk to the Windows machine.\nI spent more time looking at the issue and I know what is going on. There are two other processes running in Windows 10 called \u201cSSH Server Broker\u201d and \u201cSSH Server Proxy\u201d.  They compete for port 22 with OpenSSH services and it is \u201cSSH Server Proxy\u201d that handles native ssh connection (ssh -v  -l ). Issue #318 (https://github.com/PowerShell/Win32-OpenSSH/issues/318) explains what is going on. As soon as I stopped \u201cSSH Server Broker\u201d and \u201cSSH Server Proxy\u201d I could connect to the Windows machine via native ssh and the cmd shell seems to work fine.\nThe other issue was that I misinterpreted instructions for how to modify the sshd_config file @ https://github.com/PowerShell/PowerShell/tree/master/demos/SSHRemoting#setup-on-windows-machine and I put single quotes around the path to PowerShell 6 executable in the subsystem section (Subsystem    powershell 'C:\\Program Files\\PowerShell\\6.0.0.17\\'powershell.exe -sshs -NoLogo -NoProfile). Once I set the LogLevel to DEBUG3 I could see that sshd was parsing the path wrong.\nThe instructions for how to use the OpenSSH with Windows and PowerShell should be updated to account for the two problems I have encountered.\nWojtek\nFrom: Sebastian N. [mailto:notifications@github.com]\nSent: Wednesday, March 29, 2017 12:35 AM\nTo: PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com\nCc: Wojtek Kozaczynski wojtekkozaczynski@outlook.com; Author author@noreply.github.com\nSubject: Re: [PowerShell/Win32-OpenSSH] Cannot establish fully functional SSH or PowerShell SSH session connections (#610)\nThe IP you listed is an APIPA address. Are you sure the Debian machine is able to talk to the Windows machine?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/610#issuecomment-290008096, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AR4Iau5nt9VIX0-HoT5c1QHYVMHAZFx8ks5rqgm0gaJpZM4Msgo8.\n. I stopped following the issue, so I don\u2019t know if it has been fixed. It was not fixed when I was looking at it. May be worth contacting the Win32-OpenSSH team again.\nWojtek\nFrom: \u5218\u96e8\u57f9 [mailto:notifications@github.com]\nSent: Tuesday, January 9, 2018 1:11 AM\nTo: PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com\nCc: Wojtek Kozaczynski wojtekkozaczynski@outlook.com; Author author@noreply.github.com\nSubject: Re: [PowerShell/Win32-OpenSSH] Cannot establish fully functional SSH or PowerShell SSH session connections (#610)\nI meet this problem, too. Any fix?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/610#issuecomment-356223930, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AR4IaqBiS0jdVWUYP0yCxhgoKaDSfR35ks5tIy05gaJpZM4Msgo8.\n. Please confirm if \"May-end release\" is the same as \"Win32-OpenSS v0.0.14.0\". This is the latest version I can find, yet it was released 14 days ago. \nThe list of bugs that v0.0.14.0 fixes does not include this bug (bug #666). Should I test v0.0.14.0 for this bug or wait for the next drop? . Release 0.0.15.0 fails for me in the same place that is, when the docker-machine it trying to contact a newly created host. Below is how a single such attempt looks in the log\n- it finds the newly created host's IP address (I can ping the host on that address fine)\n- it calls the OpenSHH executable, but that invocation fails with error 255 \n(testHost) DBG | [executing ==>] : C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NoProfile -NonInteractive (( Get-VM testHost ).networkadapters[0]).ipaddresses[0]\n(testHost) DBG | [stdout =====>] : 192.168.0.100\n(testHost) Calling .GetSSHPort\n(testHost) DBG |\n(testHost) DBG | [stderr =====>] :\n(testHost) Calling .GetSSHKeyPath\n(testHost) Calling .GetSSHKeyPath\n(testHost) Calling .GetSSHUsername\nUsing SSH client type: external\n&{[-F /dev/null -o PasswordAuthentication=no -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none docker@192.168.0.100 -o IdentitiesOnly=yes -i C:\\Users\\wojtek\\.docker\\machine\\machines\\testHost\\id_rsa -p 22] C:\\Program Files\\OpenSSH\\ssh.exe <nil>}\nAbout to run SSH command:\nexit 0\nSSH cmd err, output: exit status 255:. Balu, \nI executed the first command, and I am running 0.0.15.0 \nPS C:\\WINDOWS\\system32> ((Get-Item (Get-Command \"C:\\Program Files\\OpenSSH\\ssh.exe\").Source).VersionInfo.FileVersion)\n0.0.15.0\nHere are the steps I followed\n- I stopped the SSHD service and I modified the following line in the sshd_config file: LogLevel DEBUG3\n- I restarted the SSHD service and executed the following docker-machine command \ndocker-machine --debug create -d hyperv --hyperv-virtual-switch ExternalWireless testHost \n- as expected, the command created the testHost VM, but failed trying to connect to it using OpenSSH\n- I pinged the machine and it responded \n- I executed your ssh.exe command \nssh.exe -vvv -F /dev/null -o PasswordAuthentication=no -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none docker@192.168.0.104 -o IdentitiesOnly=yes -i C:\\Users\\wojtek\\.docker\\machine\\machines\\testHost\\id_rsa -p 22\n- this generated a bunch of debug messages directly to the console \nI am enclosing 3 files \n- two SSH log files \n- a file with a copy of console messages starting at the end of the testHost creation sequence and following with the above ssh.exe command and the debug messaegs.\nsshd.log.txt\nssh-agent.log.txt\nWin32-OpenSSH.txt\nWojtek. After I sent the message above I also noticed that the docker-machine complains that it cannot verify docker version of the host because the cert is signed by unknown authority. This may be relevant. \nc:\\Program Files\\OpenSSH>docker-machine ls\nNAME       ACTIVE   DRIVER   STATE     URL                        SWARM   DOCKER    ERRORS\ntestHost   -        hyperv   Running   tcp://192.168.0.104:2376           Unknown   Unable to query docker version: Get https://192.168.0.104:2376/v1.15/version: x509: certificate signed by unknown authority. ",
    "LYP951018": "I meet this problem, too. Any fix?. ",
    "treii28": "I'm running into this coming from ubuntu going to server 2012 set up as a domain controller. I am able to ssh directly and get a standard (not powershell) shell for my user id but it fails from within pwsh with Enter-PSSession. I've tried the Username both with and without the domain. ",
    "Sedee": "ssh-agent.log file is empty\nI used the wiki to perform the install, with one exception, after installing the ssh-lsa, I didn't reboot - hard to get outages, is there any way to avoid a reboot? This looked like a simple dll registration, but I'm a unix admin, havent really played on windows for a decade.\nWhen I run regsvr32 c:\\windows\\system32\\ssh-lsa.dll I get\nThe module was located but the entry-point DllRegisterServer was not found.\nMake sure that ssh-lsa.dll is a valid DLL or OCX file then try again.\nI'm guessing that that reboot is something I cant avoid. if so, thanks for your help. I'll close the comment.\n. ",
    "anjohnson": "I'm seeing this error message in my logs too, but I'm not sure if it is the reason why my logins don't always work (however I'm not writing about that here). I looked up Microsoft's documentation for the routine RegOpenKeyExW() and there is a note in the Remarks that says:\n\nIf your service or application impersonates different users, do not use this function with HKEY_CURRENT_USER. Instead, call the RegOpenCurrentUser function.\n\nThis would appear to be the fix necessary, since session.c line 336 is doing exactly that which the documentation says not to do. The return value 5 that we're seeing is ERROR_ACCESS_DENIED.. To confirm: The error message which is the subject of this issue gets logged (4 times per login) even when I successfully login to a local account using a public key that is present in the authorized_keys file.. Note that the subject line of this particular github issue is about a different error return value and from a different function than that pull request is fixing.... @mabrowning Thanks for confirming this is still happening in a newer version. Whenever I login to my system that has this installed I get these log entries added to the sshd.log file:\n2836 12:01:50 677 Accepted publickey for jenkins from 164.54.9.24 port 54272 ssh2: RSA SHA256:\u2026\n2836 12:01:50 724 error: Error retrieving user environment variables. RegOpenKeyExW returned 5\nI already pointed out where the error message comes from, quoting Microsoft's own documentation, which even explains how to fix it. However @bingbing8 doesn't seem to care that the bug hasn't actually been fixed, just that the Github issue has been disposed of.. @mabrowning yes, my logins do succeed, so I doubt that the RegOpenKeyExW error is the cause of your problem. I think I'm running an older version than you are though (v0.0.10 IIRC) and in fact I have given up trying to use this software for my purposes until some other bugs get fixed \u2014 the stdin/stdout channels don't transport binary data properly, so I went back to the Cygwin sshd for now.. ",
    "dwcoffin": "Windows 2008 R2 7601 SP1\nsshd 0.0.11.0\nIssues: \n\n\nUnable to login with AD account within same domain.  No modifications to sshd_config.\n\n\nRunning install-sshlsa.ps1 generates errors listed below.  \n\n\nRan PS commands to get most recent packages.  \nFollowed installation instructions from: \nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH \nUnable to run \"powershell -executionpolicy bypass -file install-sshlsa.ps1\"  as these errors appear. \n===============================================================\nPS C:\\Program Files\\OpenSSH> powershell -executionpolicy bypass -file install-sshlsa.ps1\nCopy-Item : Cannot find path 'C:\\ssh-lsa.dll' because it does not exist.\nAt C:\\Program Files\\OpenSSH\\install-sshlsa.ps1:1 char:10\n+ Copy-Item <<<<  -Path $PSScriptRoot\\ssh-lsa.dll -Destination \"$env:windir\\system32\"\n    + CategoryInfo          : ObjectNotFound: (C:\\ssh-lsa.dll:String) [Copy-Item], ItemNotFoundException\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.CopyItemCommand\nMethod invocation failed because [Microsoft.Win32.RegistryKey] doesn't contain a method named 'OpenBaseKey'.\nAt C:\\Program Files\\OpenSSH\\install-sshlsa.ps1:4 char:50\n+ $reg = [Microsoft.Win32.RegistryKey]::OpenBaseKey <<<< ('LocalMachine', 0)\n    + CategoryInfo          : InvalidOperation: (OpenBaseKey:String) [], RuntimeException\n    + FullyQualifiedErrorId : MethodNotFound\nYou cannot call a method on a null-valued expression.\nAt C:\\Program Files\\OpenSSH\\install-sshlsa.ps1:5 char:23\n+ $key = $reg.OpenSubKey <<<< ($subkey, $true)\n    + CategoryInfo          : InvalidOperation: (OpenSubKey:String) [], RuntimeException\n    + FullyQualifiedErrorId : InvokeMethodOnNull\nYou cannot call a method on a null-valued expression.\nAt C:\\Program Files\\OpenSSH\\install-sshlsa.ps1:6 char:21\n+ $arr = $key.GetValue <<<< ($value)\n    + CategoryInfo          : InvalidOperation: (GetValue:String) [], RuntimeException\n    + FullyQualifiedErrorId : InvokeMethodOnNull\nYou cannot call a method on a null-valued expression.\nAt C:\\Program Files\\OpenSSH\\install-sshlsa.ps1:9 char:16\n+   $key.SetValue <<<< ($value, [string[]]$arr, 'MultiString')\n    + CategoryInfo          : InvalidOperation: (SetValue:String) [], RuntimeException\n    + FullyQualifiedErrorId : InvokeMethodOnNull\n=============================================================\nValue for HKLM\\System\\CurrentControlSet\\Control\\LSA\\Authentication Packages  = \"msv1_0\" \nsshd.log on sshd start\n==============================================================\n#6324 18:22:10 553 Server listening on :: port 22.\n6324 18:22:10 553 Server listening on 0.0.0.0 port 22.\n6324 18:22:10 554 error: Couldn't create pid file \"./sshd.pid\": Permission denied#\n===============================================================\nadditional logs on attempt to connect:\n===============================================================\n#4896 18:24:30 730 error: Couldn't create pid file \"./sshd.pid\": Permission denied\n4896 18:24:39 249 Accepted password for username@domain.com from 192.168.1.248 port 53920 ssh2\n4896 18:24:39 470 error: Error retrieving user environment variables. RegOpenKeyExW returned 5\n4896 18:24:39 471 fatal: ERROR. Cannot create process (1314).\\n #\n=================================================================\nNothing in ssh-agent.log before or after connection attempts.\nApologize for any \"Funky\" Markdowns...\n. ",
    "clouds56": "Now version 0.0.12.0, there's no ssh-lsa.dll, but still \"Error retrieving user environment variables. RegOpenKeyExW returned 5\" error. Do I have to reboot?. Yes, in a seesion (sorry the error number is 234 instead of 5)\n\nerror: Couldn't create pid file \"./sshd.pid\": Permission denied\nAccepted password for  from UNKNOWN port 0 ssh2\nerror: Error retrieving user environment variables. RegEnumValueW returned 234\n\nwhen creating a session, it shows these logs in sshd.log, while the ssh-agent.log is empty.\nIt does not block establishing the sessions, but I could not get correct PATH for the user.\necho %PATH% only shows the paths defined system wide, but not combined with the PATH variable for the user.. Do you think it cannot get correct PATH since it could not create pid file?\nAccording to error code, it refers to\n\nERROR_MORE_DATA\n234 (0xEA)\nMore data is available.\n\nAnyway, I'll try fix the pid issue first.. I investigated the code you sent, 256 is the length of name which has no problem.\nThe issue is you do not check the return value for ERROR_MORE_DATA.. From: https://msdn.microsoft.com/en-us/library/windows/desktop/ms724865(v=vs.85).aspx\n\nIf lpData is NULL and lpcbData is non-NULL, the function stores the size of the data, in bytes, in the variable pointed to by lpcbData. This enables an application to determine the best way to allocate a buffer for the data.\nReturn value\nIf the function succeeds, the return value is ERROR_SUCCESS.\nIf the function fails, the return value is a system error code. If there are no more values available, the function returns ERROR_NO_MORE_ITEMS.\nIf the lpData buffer is too small to receive the value, the function returns ERROR_MORE_DATA.\n\nFirst time calling this, data is NULL, so it succeed. The next time found that the buffer is not enough, it would return ERROR_MORE_DATA and never goes to the code path to extend data.. Could you help review the pull request?. fix issue #645. I've got confused, so why do you have 2 repo?\nI suggest put the link to https://github.com/PowerShell/openssh-portable at least in project description.. ",
    "mabrowning": "@anjohnson is right... this issue is different from the PATH error fixed in #696 \nHere is my log from v0.0.12.0:\n5188 10:09:19 767 Starting session: shell on console for mabrowning from 10.4.0.35 port 64794 id 0\n5188 10:09:19 769 error: Error retrieving user environment variables. RegOpenKeyExW returned 5\n5188 10:09:19 769 debug1: Executing command: C:\\\\Program Files\\\\OpenSSH\\\\ssh-shellhost.exe \n5188 10:09:19 789 fatal: ERROR. Cannot create process (1314).\\n\n5188 10:09:19 789 debug1: do_cleanup\n5188 10:09:19 789 debug1: session_pty_cleanup: session 0 release console\nI've got password & key authentication working, but this appears to be agent permission issues still.. @anjohnson Am I understanding you correctly that you are successfully logging in, even with this error? All of my connections are getting 'socket closed' on the client side. Perhaps that is yet a different problem... @anjohnson You and I are on parallel journeys, I'm afraid. I am indeed affected by this same issue as you predicted.. I actually had to do this for \"NT Service\\sshd\" as well... v0.0.12.0\nI did run the ./install-sshd.ps1 script, but this step was also required. Unfortunately, I couldn't find a command line equivalent for use in psexec, so had to resort to the secpol GUI through terminal services.. ",
    "neoblackxt": "My log file:\n7164 16:18:58 515 Server listening on :: port 22.\n7164 16:18:58 515 Server listening on 0.0.0.0 port 22.\n5972 16:19:50 042 Accepted password for neo from ::1 port 49687 ssh2\n5972 16:19:50 044 error: Error retrieving user environment variables. RegOpenKeyExW returned 5\n5972 16:19:50 045 fatal: ERROR. Cannot create process (1314).\\n\n3632 16:37:17 495 Server listening on :: port 22.\n3632 16:37:17 495 Server listening on 0.0.0.0 port 22.\n\nI changed the SSHD service's attribution. Make it login as local system account other than \"NT SERVICE\\SSDH\", and restart it, then it works. I don't know if to do this will lower the security.. ",
    "LuisBosquez": "The readme also doesn't provide enough guidance.. Thanks!. ",
    "ZenoArrow": "Thank you bagajjal for the link related to host keys, it gives me plenty of information to help explore further.\nJust one follow up question, if I wanted to propose an alternative set of install notes, what's the best way to do that? Should I clone the repository, make the wiki changes, and submit these changes as a pull request?\nThanks.. To anyone reading this that was also interested in how SSH works, I'd recommend the following article, which I found very useful in understanding how the different keys used in SSH work together:\nhttps://www.digitalocean.com/community/tutorials/understanding-the-ssh-encryption-and-connection-process\nWith reference to the host key question I'd asked previously...\n\n\"When a TCP connection is made by a client, the server responds with the protocol versions it supports. If the client can match one of the acceptable protocol versions, the connection continues. The server also provides its public host key, which the client can use to check whether this was the intended host.\"\n. \n",
    "MaximoTrinidad": "Ok!!  I found the way to get to the \"Release\" page.  I'm blind!\nI see it on the top of the page.\nBut, it still would help to have another 'descriptive' link in the main page as you read the \"README\" information on OpenSSH.  I got spoiled with the PowerShell page.\nThanks,\nMax\n. Hi @bagajjal, \nThank You!  I learn another link.  \nBut, I went the longer route and started reading the ReadMe document on the main page.\nMy suggestion is to include the Wiki link in the ReadMe page. I think it would help.\nSorry! I'm still getting use to GitHub. \nThanks for your patience,\nMax. Yes!!  That page.  I think that including both the wiki and the release link won't hurt,\n:). No worries!  I'll be blogging more on Win32-OpenSSH when I get the other issue i posted total resolved.\nI appreciate the help,\nMax. Thanks for the explanation.  Also, I realized that the \"authorized_keys\" was a folder name and not a file.\nSo, after creating the folder, then I was able to run the PowerShell script.\n:)\n. Yes! \nSubsystem   powershell  C:/Program Files/PowerShell/6.0.0.18/powershell.exe -sshs -NoLogo -NoProfile\n:)\n. Sorry!\nIn Windows:\nSubsystem powershell C:/Program Files/PowerShell/6.0.0.18/powershell.exe -sshs -NoLogo -NoProfile\nIn Linux:\nSubsystem powershell powershell -sshs -NoLogo -NoProfile\n:)\n. It work Windows to Linux but not the other way.. Hi @DarwinJS,\nAah! I can't get the link to open.  I tried everything to get this to work.  I'm presenting in the next hour and I was trying to demo PowerShell Enter-PSSession command connecting Linux to Windows.\nNo Worries! At least I got the Windows to Linux connection working,  Is interesting how one update can break what was working.\n:)\n. I tried using the choco install powershell-code -confirm and I'm getting an error:\n\"powershell-core not installed. The package was not found with the source(s) listed.\"\nThis is interesting because I already have PowerShell v6.0.0-alpha18 installed.\nShould I uninstall and try again.\n:). Thanks @PaulHigin!  I will try it during the weekend. I've been so busy lately that's not funny. \n:). So,  @PaulHigin, Windows to Linux is fine. The issue is from Linux to Windows is not working,  I wonder what I need to do in Linux to correct the issue.\n:)\n```\nPS /home/maxt> enter-pssession -HostName earth2 -UserName max_t                                                       \nenter-pssession : The background process reported an error with the following message: The SSH client session has \nended with error message: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.\nAt line:1 char:1\n+ enter-pssession -HostName earth2 -UserName max_t\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ResourceUnavailable: (:) [Enter-PSSession], PSRemotingTransportException\n    + FullyQualifiedErrorId : System.Management.Automation.Remoting.PSRemotingDataStructureException,Microsoft.PowerSh \n   ell.Commands.EnterPSSessionCommand\n```. Got it @PaulHigin!  I will try again later.. @DarwinJS , @PaulHigin \nWhaoo!!  I finally caught up with this after so much reinstalling and trying trial-error.\nWell, did reinstall both the Win32-OpenSSH and openssh-server.  Just to find out the following which I didn't experience before upgrading these packages.\nI got my hosts files set to resolve my machine names to a specific IP Address, as I'm using workgroup environment.\nSo, whole issue was due to Linux OpenSSH, or maybe PowerShell, is not resolving my IP Address to its hostname.\nIf I use only the IP-Address in Enter-PSSession in the '-hostname' paramater then I'm fine.\n(see images)\nIs this a bug somewhere?  Again, I'm fine using hostname Windows-to-Linux.\n\n\n\n. Yeap!  In my blog post back in December 2016, I could use hostname as well as the IP-Address in Enter-PSSession to connect from Linux-to-Windows machine.\nhttp://www.maxtblog.com/2016/12/powershell-open-source-windows-psremoting-to-linux-with-openssh/ \n:). Thanks @PaulHigin for your patience!!  I will look into it tonight and see if I can get it cleared this time.\n:). Hum! It didn't work for me.  I removed the entry from the unknown_hosts file and even deleted the file from my windows .ssh folder.  I can't make it work using the hostname.  I can only use the IP-Address.\nAfter my monthly online user group tomorrow, I'm going to revert back to an older OpenSSH and try again just to isolate the issue I'm having now.  Again, back in December I got it working.\nI'm just using the \"Enter-PSSession\" cmdlet, and I haven't try any other way.\n\n. @PaulHigin \nAwesome!! Sorry for the long delay!! \nI did upgrade the OpenSSH to the latest and then execute the command you gave me \"ssh max_t@earth2\".  This provided me with some information and I was able to clean up the issue on my Linux machine.\nIs working now!!\n\n\nThanks a lot,\nMax. FYI\nWhen connected from Windows 10 Insider Build 16199 to Ubuntu 16.04, is getting hung after starting PowerShell under ssh.  Pressing Ctrl-C doesn't work to get out of the session. \nIn Windows, under PowerShell Core 6.0.0-beta.1, using OpenSSH ver 0.0.13.0:\nc:> ssh user@linuxSystem\n\n:). It's working in Ubuntu 17.10 with PSCore 6.0.1 OpenSSH both ways.. Hi everyone! Sorry I haven't post this one sooner.\nThis is happening in all versions of Windows (Windows 10) and Windows Servers too. \n\n\nThe workaround I've been using for some time is to change the log On to: Local System Account with \"Allow service to interact with desktop\". Then, the service will start without any issues.\n\nI have blog about this and forgot to open an incident. \n:)\n. By the way, for some reason, when executing the command:\nStart-Service sshd\nIs not giving any errors nor notification that the service didn't start.\n:). @bagajjal, \nAwesome!  That did it. I'll be fixing my blog post.\nSomehow I was messing the order.\nGreatly Appreciated,\n:)\n. @DarwinJS ,\nThe thing is... I never use to have the problem of installing OPenSSh in PowerShell Core release.\n\nI'm trying to determine if is a PowerShell Core or an OpenSSH issue.\nI've been trying to user Windows 10 Openssh feature but it not working.  Currently have a non-Windows Insider build (Version: 10.0.17134) with Win32-Openssh (version: 0.0.24.0) installed from Chocolatey and with PowerShell-Preview 4 working without any issues.\nI know is an older version but is working.\nNever had the issue with Get-CIMInstance!\n:)\nI will resubmit the issue in the link provided.\nThanks,\nMax. ",
    "rpereda": "Hi manojampalam ,\nThanks for your reply however this is not the case since I already did those steps, and I can validate that the permissions has been granted.\n\n. ",
    "ThomasMConnors": "Manoj, looks like the config was right but a reboot was pending. Thanks! It works now.\n[cid:image001.png@01D2B395.A7C94450]\n[cid:image002.png@01D2B395.A7C94450]\nFrom: Manoj Ampalam [mailto:notifications@github.com]\nSent: Wednesday, April 12, 2017 1:48 PM\nTo: PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com\nCc: Tom Connors tomc@tomc.us; Author author@noreply.github.com\nSubject: Re: [PowerShell/Win32-OpenSSH] Local server account fails w/Key Auth (#663)\nImportance: Low\nFor workgroup/local accounts, you currently need to install ssh-lsa.dll. This restriction will go away in the next release.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/663#issuecomment-293656022, or mute the threadhttps://github.com/notifications/unsubscribe-auth/APY5C06fNCB0ZHiuecKGA7qSknVgZGYZks5rvQ5tgaJpZM4M7sJl.\n. ",
    "gbraad": "@bagajjal when will the May-end release be available? The current release is from 14 days ago.... This now works as expected with the release from choco install openssh. Thanks. The same problem exists for minikube:\npowershell\nPS> $env:PATH += \"path to openssh-win32\"\nPS> .\\minikube-windows-amd64.exe start --vm-driver hyperv --hyperv-virtual-switch \"Wireless\" -v 9\n    Starting local Kubernetes v1.6.0 cluster...\n    Starting VM...\n    Found binary path at C:\\Users\\gbraad\\Downloads\\minikube-windows-amd64.exe\n    Launching plugin server for driver hyperv\n    Plugin server listening at address 127.0.0.1:65380\n    () Calling .GetVersion\n    Using API Version  1\n    () Calling .SetConfigRaw\n    () Calling .GetMachineName\n    (minikube) Calling .GetState\n    (minikube) DBG | [executing ==>] : C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NoProfile -NonInteractive\n    ( Get-VM minikube ).state\n    (minikube) DBG | [stdout =====>] : Running\n    Waiting for SSH to be available...\n    (minikube) DBG |\n    (minikube) DBG | [stderr =====>] :\n    Getting to WaitForSSH function...\n    (minikube) Calling .GetSSHHostname\n    (minikube) DBG | [executing ==>] : C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NoProfile -NonInteractive\n    ( Get-VM minikube ).state\n    (minikube) DBG | [stdout =====>] : Running\n    (minikube) DBG |\n    (minikube) DBG | [stderr =====>] :\n    (minikube) DBG | [executing ==>] : C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NoProfile -NonInteractive\n    (( Get-VM minikube ).networkadapters[0]).ipaddresses[0]\n    (minikube) DBG | [stdout =====>] : 10.0.21.123\n    (minikube) DBG |\n    (minikube) DBG | [stderr =====>] :\n    (minikube) Calling .GetSSHPort\n    (minikube) Calling .GetSSHKeyPath\n    (minikube) Calling .GetSSHKeyPath\n    (minikube) Calling .GetSSHUsername\n    Using SSH client type: external\n    &{[-F /dev/null -o PasswordAuthentication=no -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none docker@10.0.21.123 -o IdentitiesOnly=yes -i C:\\Users\\gbraad.minikube\\machines\\minikube\\id_rsa -p 22] C:\\Users\\gbraad\\Downloads\\OpenSSH-Win64\\ssh.exe }\n    About to run SSH command:\n    exit 0\n    SSH cmd err, output: exit status 255:\n    Error getting ssh command 'exit 0' : ssh command error:\n    command : exit 0\n    err     : exit status 255\n    output  :\n    Getting to WaitForSSH function...\n    (minikube) Calling .GetSSHHostname\n    (minikube) DBG | [executing ==>] : C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NoProfile -NonInteractive\n    ( Get-VM minikube ).state\n    (minikube) DBG | [stdout =====>] : Running\n    (minikube) DBG |\n    (minikube) DBG | [stderr =====>] :\n    (minikube) DBG | [executing ==>] : C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NoProfile -NonInteractive\n    (( Get-VM minikube ).networkadapters[0]).ipaddresses[0]\n    (minikube) DBG | [stdout =====>] : 10.0.21.123\n    (minikube) DBG |\n    (minikube) DBG | [stderr =====>] :\n    (minikube) Calling .GetSSHPort\n    (minikube) Calling .GetSSHKeyPath\n    (minikube) Calling .GetSSHKeyPath\n    (minikube) Calling .GetSSHUsername\n    Using SSH client type: external\n    &{[-F /dev/null -o PasswordAuthentication=no -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=quiet -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none docker@10.0.21.123 -o IdentitiesOnly=yes -i C:\\Users\\gbraad.minikube\\machines\\minikube\\id_rsa -p 22] C:\\Users\\gbraad\\Downloads\\OpenSSH-Win64\\ssh.exe }\n    About to run SSH command:\n    exit 0\n    SSH cmd err, output: exit status 255:\n    Error getting ssh command 'exit 0' : ssh command error:\n    command : exit 0\n    err     : exit status 255\n    output  :\n. This closes: https://github.com/DarwinJS/ChocoPackages/issues/34 and https://github.com/PowerShell/Win32-OpenSSH/issues/666 Thanks!. ",
    "davehowson": "I had this issue and I tried all the suggestions here and on almost everywhere else but nothing worked. However, I ran the VM command on Git Bash and it successfully created a VM for me. I'm guessing it worked because as @manojampalam  pointed out, the command runs with some Unix based elements which prevent Windows terminals from executing it.. ",
    "bardware": "I'm just trying to use docker-toolbox in  hyper-v mode and found this discussion. I created an External  switch manually and  called docker-machine -debug create -d hyperv dockerhyperv as admin in cmd and eventually got\nSSH cmd err, output: exit status 255:\nError getting ssh command 'exit 0' : ssh command error:\ncommand : exit 0\nerr     : exit status 255\noutput  :\nGetting to WaitForSSH function...\n(dockerhyperv) Calling .GetSSHHostname\n(dockerhyperv) DBG | [executing ==>] : C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NoProfile -NonInteractive ( Hyper-V\\Get-VM dockerhyperv ).state\n(dockerhyperv) DBG | [stdout =====>] : Running\n(dockerhyperv) DBG |\n(dockerhyperv) DBG | [stderr =====>] :\n(dockerhyperv) DBG | [executing ==>] : C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -NoProfile -NonInteract\nive (( Hyper-V\\Get-VM dockerhyperv ).networkadapters[0]).ipaddresses[0]\n(dockerhyperv) DBG | [stdout =====>] : 192.168.0.17\n(dockerhyperv) DBG |\n(dockerhyperv) DBG | [stderr =====>] :\n(dockerhyperv) Calling .GetSSHPort\n(dockerhyperv) Calling .GetSSHKeyPath\n(dockerhyperv) Calling .GetSSHKeyPath\n(dockerhyperv) Calling .GetSSHUsername\nUsing SSH client type: external\n&{[-F /dev/null -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none -o LogLevel=quiet -o PasswordAuthentication=no -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null docker@192.168.0.17 -o IdentitiesOnly=yes -i C:\\Users\\bddoeble\\.docker\\machine\\machines\\dockerhyperv\\id_rsa -p 22] C:\\WINDOWS\\System32\\OpenSSH\\ssh.exe <nil>}\nI started git bash using start \"\" \"%PROGRAMFILES%\\Git\\bin\\sh.exe\" --login, called the exact same command and it worked. I'm on docker toolbox v18.06.1-ce. There's the --native-ssh switch that workes around the issue. Also needed when calling regenerate-certs when using docker-machine in a different network than the one it had been used in first instance.. ",
    "pmontrasio": "I cd into Program Files but I keep getting the same error.\nI was already logged in ad Administrator but to be sure that I'm running cmd as Administrator: went to c:\\windows\\system32, right click on cmd.exe, run as administrator. Same error.\nsshd.exe -ddd starts and displays Server listening on 0.0.0.0 port 22 but I can't connect from the outside. I configured the firewall according to the instructions and got Status: The Rule was parsed successfully from the store. (65536).\nIs it possible that the access denies error and the connection problem are linked?. I had to do the same thing, thanks for posting the workaround. However it looks like a bug somewhere in the installation process.. I'm getting the same error and I typed $false. Note how the error message turns that into Confirm:False.\nI don't know anything about Powershell so I have no idea about how to get past this point.\nI'm using the 64 bit build.. I eventually got an idea. Instead of running the command from within powershell I run it from cmd and it worked.\nMaybe the wiki page should explicitly tell to run all those commands from cmd.. ",
    "DHammarberg": "My cmd.exe has version 6.1.7601.17514.\nconhost.exe has version 6.1.7601.23714.\nconhost.exe is run with this command line: C:\\Windows\\system32\\conhost.exe \"-532765958-1897637209-556521010-811327810-9583264939507278038647003711698927287\nLogical rows and columns in SecureCRT are 24 and 80.\nThis is how it looks for me: https://www.dropbox.com/s/nl0gqrpnjgloebe/securecrt_ssh_console.mp4\nAfter having padded the buffer a bit, it just keeps overwriting that last line, it seems.\n. When I try it in Putty, I find it works the way it should there. But inside SecureCRT, something goes wrong, whether I log directly into Windows, or do it from another machine. I'm using the same settings for this session that I use in any other, so maybe some terminal communication problem, I don't know.. I've tried a little more now. It seems the problem is present when connecting with mRemoteNG too. Just to make sure, I updated to the latest SecureCRT version as well, and it didn't change it. \nWhat works for me:\nPutty\nConnecting from xterm running on Linux machine\nWhat doesn't:\nSecureCRT\nmRemoteNG\nI tried different terminal settings in SecureCRT too, but none worked.. ",
    "bgelens": "Got this with PowerShell 6 New-PSSession as well. Reverted to 0.0.11.0 and working again. In my case I installed from GH releases.. ",
    "Flamez97": "@vcarluer  Please do you know a link to download the version with ssh-sla?. Thanks @vcarluer \n. ",
    "vcarluer": "The version 0.0.10.0 available here have it (maybe the 0.0.11.0 too, didn't test)\nhttps://github.com/PowerShell/Win32-OpenSSH/releases\nI have installed it with chocolatey, so I didn't have test direct install from here but it should be the same.. ",
    "keiyakins": "That mitigation is absurd. It's quite normal to have both ssh and sshd on a single system. Pretty much every 'nix system I've ever set up works that way. Windows needs to catch up to the 80s.\nThe problem is in how elevation works. You should be elevating per-command not for the entire shell.. ",
    "davidvmckay": "Couldn't this be avoided by ensuring that the keys used for the client are incompatible with the keys used for the server?. ",
    "Jaykul": "Please don't focus on the loopback aspect of this. The problem is not the fact that users can loopback. The problem is if the user connects to an elevated session. Period. Full Stop. \nAny attempt to address this by preventing loopback will break things that should work, and would not substantially mitigate the problem (the attacker would just need to connect out and then back in).\nOutside of Windows, a user connecting via SSH is not be connected to an elevated session even if they have sudoer/administrator rights. They need to elevate individual commands (including, perhaps, launching an elevated shell) after they're connected, using sudo and their password...\n. ",
    "zyincse": "@bagajjal \nThank you!\nby the method in #493 ,the error: Couldn't create pid file \"./sshd.pid\": Permission denied had been solved,\nand I still have two problems:\n3528 09:40:36 459 error: Error retrieving user environment variables. RegOpenKeyExW returned 5\n3528 09:40:36 460 fatal: ERROR. Cannot create process (1314).\\n. @bagajjal \nIt run when windows start ,user is administrator\nso I think I run  sshd.exe in the administrator mode.. ",
    "razrjk": "I cloned and built on May 19.  Used the scripts to configure.  Win10 configured okay.  Win 7 required using the using the Local Security Policy UI to set \"NT Service\\sshd\" in \"Replace a process level token\".  Symptom was that sshd -d worked, but sshd did not.. To be clear.  My Win10 and Win7 sshd services are both now working using domain credentials and logon passwords.  I installed using the PS script.  Win 7 required the manual security policy settings to get rid of the (1314) error.. My Win10 sshd server is functioning correctly, and supports git, which I assume is binary data stream transfer. There are no errors in the log.\nMy Win7 sshd server supports remote execution and text stream, but does not support git clone, and the Win7 sshd does have the error: Error retrieving user environment variables. RegOpenKeyExW returned 5 . Re: shell-host.c \nGit push was still failing.\nIt appears that the whole nopty implementation assumes a pty control stream.  Yet nopty may be a binary data stream.\nWhile I'm uncertain about the defaults and all the possible options of ssh (for instance, assuming pty control for a nopty connection),  tty control should not be processed on a binary data stream.\nAfter removing the pty processing from:\nstart_withno_pty(wchar_t *command)\nGit push works.\nI can now clone repos over ssh and push changes to them.\nI will continue to test.\nThe whole send to child inner loop simplifies to:\n```\n        while(rd){\n            GOTO_CLEANUP_ON_FALSE(WriteFile(child_pipe_write, buf + i, rd, &wr, NULL));\n            rd = rd - wr;\n            i = i + wr;   \n        }\n. The repo is git@github.com:PowerShell/Win32-OpenSSH.git.\nI cloned, built, and tried to test v.0.0.15.0.\nIssue 1) from my initial post is still a problem.  The file path sent by git contains literal single quote characters which become part of the file path, so the path is invalid.\nThe remote repo in the following case is:  localhost:D:\\work\\git_repo.git.  Note the single quotes below.  They may look like a double quote, but they are single quotes around single quotes.  The inside single quotes are literals in the file path.\n$ git ls-remote\nfatal: ''d:/work/git_repo.git'' does not appear to be a git repository\nfatal: Could not read from remote repository.\nI also originally tried powershell.exe and bash.exe.  None of the command line interpreters liked the literal single quotes when passed with the \"/c\" or \"-c\" option.  cmd.exe works okay with double quotes, so I stopped looking for another solution to the problem.\nRegarding issue 2) of my original post:  I do see quite a few changes, but the writes to pipe_out are still going back to the sshd process, not the child process child_pipe_write handle.   Next, unless ssh options are mapped directly to cmd.exe options, I don't see how you can possibly detect any sub-mode of nopty,  When the pipe is nopty, it's binary.  A shell with tty capabilities would need to look at the binary stream and implement any tty escapes, not shell-host.c.\nAfter starting the process (cmd.exe), shell-host.c must simply get out of the way and let the binary data flow, in both directions.\nAlso, sshd.exe /ddd is still broken.\n. I finally resolved another problem with large binary transfers, typical of a big git push.\nshell-host.c is currently using cmd.exe.  cmd.exe was dropping the end of large binary streams over slow network connection.  I tried bash.exe and powershell.exe as command interpreters and they do not drop any of the stream.  It took quite a long time to discover that cmd.exe was the problem.\nI settled on using powershell.exe because it acts like cmd.exe for gitExtension file path resolution and resolves the common forms of path for Windows:\nssh://<host1>://<host2>/<repo-path>\n<host2>:<drive>:/<repo-path>\n. That's \u00a0because it went through cmd to call powershell. I spent a day isolating the problem. My powershe'll bases ssh git server is working great!\nSent from Yahoo Mail on Android \nOn Wed, Jul 12, 2017 at 8:29 PM, Diogo Pereiranotifications@github.com wrote: \nAfter further testing, I still get an error (early EOF) when pushing binary files.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. 1) Yes. Git for Windows with the mingw unix tools also installed.  The ssh client doesn't matter (except to know which one is being used for debugging purposes).  I've used several different combinations:  OpenSSH, cygwin, Git ssh, Git putty.\n2) It has been a while since I got everything working.  Attached are my raw notes, there is some random information in these notes.\nnotes.txt\n3) With the fixes I described in this thread, my systems have been working, so I have no problems.  I'm responding to let you know that the fixes worked, and similar fixes need to be added to the OpenSSH repo.  We use OpenSSH sshd with Git now, all the time in our production development.\nAbove, I described three problems with the sshd nopty path (as of the date above - some of these problems may have been resolved.  I have not pulled and rebuilt for a long time):\n1) File/path escapes did not work for Windows files/paths.  The problem was corrected as described above.\n2) Data was being echoed back to sshd from cmd.exe because some file handles were incorrect.\n3) Finally, cmd.exe does not work for large streamed data.  The pipe breaks under heavy traffic load.  This is a difficult problem to isolate.  I finally decided to use Powershell instead of cmd.exe to work around this problem (for nopty), and it is working great.\nMy Git repo paths take the form:\n```\n\nssh://:///\nssh://:///\n```\n\nThis supports efficient transfer between sites using Git compression over ssh, and yet the sshd server can use all the different types of Windows file path syntax.  The double \"//\" in the path looks unusual, but it works.\nMy systems are using Windows Active Directory and all accounts are domain accounts, validated by the Domain Controller.\nInteractive ssh/sshd work as well.\n. Diogo,\nBy \"heavy traffic load\" I mean large transfer over a weak internet connection. \u00a0This is why it was difficult to isolate the problem. \u00a0cmd.exe did not work, powershell.exe does. \u00a0When you isolate the problem down to seeing that the pipe is breaking in cmd.exe for no apparent reason, then you will know.\nConsider that you may have another problem if it is failing all the time.\n. I want to clarify a point.  I'm not sure how the development has proceeded recently.\nTo use powershell in the nopty path, you must change the sshd source code use use it.  The shell is specified in shell-host.c.   If you do not do this, and instead pass powershell as the shell on a command line, then cmd.exe will invoke powershell.exe and you will not have removed cmd.exe from the workflow. . The short answer is yes.  Invoke Powershell instead of cmd.exe.\nThe code changed in this area since my last pull.  This code is/was in start_withno_pty().   You want to avoid having cmd.exe in variable cmd (which is variable command in your version), or you will \"cmd.exe powershell.exe\", which leaves cmd.exe in the execution pipeline.\n```\n    /TODO - pick this up from system32/\n    cmd[0] = L'\\0';\n    GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, L\"powershell.exe\"));\n    if (command) {\n        GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, L\" /c\"));\n        GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, L\" \"));\n        //GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, L\"'\\''\"));\n    int i = 0;\n    while (command[i] != L'\\0')\n    {\n        if (command[i] == L'\\'' )\n            command[i] = L'\\\"';\n        i++;\n    }\n\n    GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, command));\n    //GOTO_CLEANUP_ON_ERR(wcscat_s(cmd, MAX_CMD_LEN, L\"'\\\\''\"));\n\n//      fwprintf(stderr,L\"out: %s\\n\",cmd);\n//      fflush(stderr);\n    }\nGOTO_CLEANUP_ON_FALSE(CreateProcess(NULL, cmd, NULL, NULL, TRUE, 0, NULL, NULL, &si, &pi));\n\n```\n. @bingbing8,   Okay.  That should resolve the cmd.exe issue.   If you are still having problems, attached is my shell-host.c file.  It is working for me.  \nshell-host.txt\n. ",
    "alexander-n-lunev": "Hello. When trying to login non-administrator user having error 1260 \"Cannot create process\". Admins logging fine, simple users not. Tried to include it in group that is in AllowGroups, with no result. Debug logs tells that it is something with ssh-shellhost.exe (permissions for this user is read-execute).\n1572 22:45:55:112 Starting session: shell on console for nina from ip.ad.dre.ss port 65372 id 0\n... skip\n1572 22:45:55:174 debug1: Executing command: C:\\\\OpenSSH-Win64\\\\ssh-shellhost.exe \n1572 22:45:55:221 fatal: ERROR. Cannot create process (1260).\\n\n1572 22:45:55:221 debug1: do_cleanup\n1572 22:45:55:221 debug1: session_pty_cleanup: session 0 release console\nupd: \nC:\\OpenSSH-Win64>ssh -V\nOpenSSH_7.6p1, LibreSSL 2.5.3. @bagajjal thank you! Indeed, AppLocker rules was in place. Added rule for ssh users group to run all from OpenSSH folder and everything started to work. Thank you again!. ",
    "grego1981": "I'm using password authentication.. ",
    "lodo1995": "I had that problem too (I'm the one that wrote about it on Super User).\nIt's really a weird bug, and quite problematic, because when you don't see anything you hardly think that maybe the input is working in \"password mode\", so you probably just give up.. ",
    "Nico83500": "I've updated my system (include Powershell 5.1) and launched a new installation. Problem solved.. Thank you, you're right. I've tried on my Gigabit LAN and I can upload at 39 MBps. But 39 MBps (so 320 Mbps) on a Gigabit LAN is a low value, I don't understand why.. ",
    "moribellamy": "+1, same error with a clean install on windows7, per https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH. ",
    "abmoham": "Typically, Domain Controllers are special case systems re:software installation rights. More so when it requires a service and/or service account to run said service. Similar cases require creation of a domain user (can be the same name or your choosing) and be added into Builtin/Server Operator group in AD. Also may need to add the same user to 'Allow logon as a service' to Domain Controllers group policy rights. As described, this may provide server level access (withouut any AD domain rights) to complete the setup. Worth a try?. ",
    "davidjahn": "We are seeing the same exact error with the latest release 0.0.12.0. Is there a suggested fix for this?. ",
    "XDTZ": "@manojampalam Well it's straight from the logs. I did not change anything. However in #253 someone else posted a working case with similar log output : \n...\n392 12:07:41 333 debug1: trying public key file C:\\\\Users\\\\user/.ssh/authorized_keys\n392 12:07:41 333 debug1: matching key found: file C:\\\\Users\\\\user/.ssh/authorized_keys, line 1 RSA SHA256:un5BKdZypyGubEWUkUm0aZviyj51a3gLAq5esppTTIY\n.... @manojampalam I'm such a noob. Only until now do I find out authorized_keys is a file rather than a folder! It totally works now. I'm closing the issue. Thanks!. ",
    "chx": "It is asking for the password of the key and it uses the key properly if the password is given.. \nThere's some mismatch here directory wise as well because it doesn't find the .ssh dir in the homedir. The whole thing is strange -- but I have not ran Windows in 13 years just now the Linux for Windows userspace made me switch back to Windows after all these years and everything is strange.\nPS C:\\Users\\chx> ssh-add -l\n4096 SHA256:Zq4rPrdgEYpZgHrE6oRpNPwR37dMy75/GhGs32onn2k C:\\Users\\chx/.ssh/id_rsa (RSA)\nPS C:\\Users\\chx> ssh -v chx@github.com\nOpenSSH_7.1p1, OpenSSL 1.0.2e 3 Dec 2015\ndebug1: Connecting to github.com [192.30.255.112] port 22.\ndebug1: Connection established.\nCould not create directory '/home/chx/.ssh'.\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/chx/.ssh/id_rsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/chx/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/chx/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/chx/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/chx/.ssh/id_ecdsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/chx/.ssh/id_ecdsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/chx/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/chx/.ssh/id_ed25519-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_7.1\ndebug1: Remote protocol version 2.0, remote software version libssh-0.7.0\ndebug1: no match: libssh-0.7.0\ndebug1: Authenticating to github.com:22 as 'chx'\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: server->client chacha20-poly1305@openssh.com <implicit> none\ndebug1: kex: client->server chacha20-poly1305@openssh.com <implicit> none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ssh-rsa SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8\nThe authenticity of host 'github.com (192.30.255.112)' can't be established.\nRSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.\nAre you sure you want to continue connecting (yes/no)? yes\nFailed to add the host to the list of known hosts (/home/chx/.ssh/known_hosts).\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: Roaming not allowed by server\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: /home/chx/.ssh/id_rsa\ndebug1: Trying private key: /home/chx/.ssh/id_dsa\ndebug1: Trying private key: /home/chx/.ssh/id_ecdsa\ndebug1: Trying private key: /home/chx/.ssh/id_ed25519\ndebug1: No more authentication methods to try.\nPermission denied (publickey).\nPS C:\\Users\\chx> ls C:\\Users\\chx\\.ssh\\\n\n\n    Directory: C:\\Users\\chx\\.ssh\n\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----       2016-10-26   2:02 PM           1261 authorized_keys\n-a----       2016-09-06   8:56 AM            664 config\n-a----       2009-11-23  10:11 AM           1697 identity\n-a----       2009-09-09   6:48 AM            736 id_dsa\n-a----       2009-09-09   6:48 AM            602 id_dsa.pub\n-a----       2015-08-15  10:13 AM           3326 id_rsa\n-a----       2009-09-09   6:48 AM           1675 id_rsa.old\n-a----       2015-08-15  10:13 AM            737 id_rsa.pub\n-a----       2017-04-27  10:03 AM          86722 known_hosts\n-a----       2017-04-24  10:12 PM          86722 known_hosts.old\n-a----       2012-11-01   6:51 PM            672 servers.privatekey\n\n. I installed https://chocolatey.org/packages/openssh .First without the server feature because you had a bug where ssh-agent wasn't working if the server wasn't installed and then with the server feature and apparently this confused the poor thing. There was an ssh.exe under chocolatey\\bin and one under C:\\Program Files\\OpenSSH-Win64 where the server lives.\nThis will likely not be a problem because I saw the other issue is now closed and the next release will work sshd-less.\nNote: where does not seem to work under Powershell. where.exe does.\nOne more note: if you install git with chocolatey as I did -- it also contains an ssh.exe which doesn't want to talk to this ssh-agent, just rename C:\\Program Files\\git\\usr\\bin\\ssh.exe to say _ssh.exe or delete it outright and all will work.\nThanks for the kind and speedy assistance.\n. ",
    "Lonney": "@manojampalam, @bagajjal,\nThank you, setting a greater width fixes the wrapping issue even if the window is narrow.\nHowever, I'm still seeing the last line overwrite itself.\nAlthough now after a certain number of lines of output the screen it gets stuck there, with the scrollback buffer set to 9999 for both machines.\nI tried this with and without setting SSH_TERM_CONHOST_PARSER=0 and it didn't seem to change anything.\ncmd.exe\nhttps://cloud.githubusercontent.com/assets/4212320/25944459/57ef7b1a-363b-11e7-83c0-c7e0218a4ab4.gif. @bagajjal The ssh -T and PuTTY workarounds work fine for me, thank you.. @remittor Is command history navigation supposed to work when PTY isn't used?. ",
    "merlinthemagic": "Just wanted to report that i am still seeing this issue on v1.0.0.0 running on Microsoft Windows [Version 10.0.15063] connecting from BASH running under CentOS 7.\n```\ndevOps@wcm112@WCM112 C:\\Users\\admin>mode con\nStatus for device CON:\n\nLines:          9999\nColumns:        128\nKeyboard rate:  31\nKeyboard delay: 1\nCode page:      437\n\n```\nThe minute the terminal hits 9999 lines the last line is just rewritten again and again. \nAdding the \"-T\" option to ssh mitigates the issue, however since this option changes behavior of the terminal when connection to other SSH servers it is not a viable fix in an environment where you do not know to OS on the server side.\nOne additional note, when connecting with putty to a clean install on Windows 10 the connection fails with message: \nDisconnected server protocol violation unexpected SSH2_MSG_UNIMPLEMENTED.\nThe last issue can be solved by changing the Algo selection policy and may be unrelated, but i thought i would mention it. \n. ",
    "jgr208": "Tried and is still happening. . ",
    "kai-uwe-rommel": "Yanbing notifications@github.com wrote on 14.05.2017 01:52:52:\n\ncan you check the aces of your file:\n(get-acl .\\ssh_host_rsa_key).Access\n\nPS C:\\Program Files\\OpenSSH> (get-acl .\\ssh_host_rsa_key).Access\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : ARS\\A-Rommel\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : Read, Synchronize\nAccessControlType : Allow\nIdentityReference : NT SERVICE\\sshd\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\nThe ARS\\A-Rommel is my admin account with which I am logged in when\nI try to install/configure. It is a member of the domain's \"Domain Admins\"\ngroup which in turn is a member of the local \"Administrators\" group.\nSo this is the minimum access I need ... some admin account must be\nable to have access rights to the files. And SYSTEM should be, too,\nfor the backup software.\n\nWhich cmds are your run? ssh, ssh-add, or scp?\n\nI am trying to start the sshd service. But sshd complains:\n5884 23:05:59 356 error: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n5884 23:05:59 357 error: @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n5884 23:05:59 357 error: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n5884 23:05:59 357 error: Permissions for './ssh_host_rsa_key' are too open.\n5884 23:05:59 357 error: It is required that your private key files are NOT accessible by others.\n5884 23:05:59 357 error: This private key will be ignored.\n5884 23:05:59 357 error: key_load_private: bad permissions\n5884 23:05:59 359 error: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n5884 23:05:59 359 error: @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n5884 23:05:59 359 error: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n5884 23:05:59 359 error: Permissions for './ssh_host_dsa_key' are too open.\n5884 23:05:59 359 error: It is required that your private key files are NOT accessible by others.\n5884 23:05:59 359 error: This private key will be ignored.\n5884 23:05:59 359 error: key_load_private: bad permissions\n5884 23:05:59 361 error: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n5884 23:05:59 361 error: @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n5884 23:05:59 361 error: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n5884 23:05:59 361 error: Permissions for './ssh_host_ecdsa_key' are too open.\n5884 23:05:59 361 error: It is required that your private key files are NOT accessible by others.\n5884 23:05:59 361 error: This private key will be ignored.\n5884 23:05:59 361 error: key_load_private: bad permissions\n5884 23:05:59 365 error: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n5884 23:05:59 365 error: @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n5884 23:05:59 365 error: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n5884 23:05:59 365 error: Permissions for './ssh_host_ed25519_key' are too open.\n5884 23:05:59 365 error: It is required that your private key files are NOT accessible by others.\n5884 23:05:59 365 error: This private key will be ignored.\n5884 23:05:59 365 error: key_load_private: bad permissions\n5884 23:05:59 366 Server listening on :: port 22.\n5884 23:05:59 366 Server listening on 0.0.0.0 port 22.\n5884 23:05:59 366 error: Couldn't create pid file \"./sshd.pid\": Permission denied\n(Should I be worried about the ./sshd.pid error, too? I guess rather not, I don't\ncare about the pid file.)\n. Unfortunately, with DEBUG3 it does not show user info (SID):\n780 10:39:31 376 debug1: sshd version OpenSSH_7.5, OpenSSL 1.0.2d 9 Jul 2015\n780 10:39:31 376 debug3: open - handle:00000000000003CC, io:00000021ADE282D0, fd:3\n780 10:39:31 380 debug3: Bad owner on ./ssh_host_rsa_key\n780 10:39:31 380 error: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n780 10:39:31 380 error: @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n780 10:39:31 380 error: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n780 10:39:31 380 error: Permissions for './ssh_host_rsa_key' are too open.\n780 10:39:31 380 error: It is required that your private key files are NOT accessible by others.\n780 10:39:31 380 error: This private key will be ignored.\n780 10:39:31 380 debug3: close - io:00000021ADE282D0, type:2, fd:3, table_index:3\n780 10:39:31 380 error: key_load_private: bad permissions\n. As a test, I removed the ACL entry for my ID from one of the files and added full rights for a local admin ID (mine is a domain account) but it did not change things.\nI have then removed the extra admin ACL entry completely, so now it looks that way:\nC:\\Program Files\\OpenSSH>cacls ssh_host_dsa_key\nC:\\Program Files\\OpenSSH\\ssh_host_dsa_key NT SERVICE\\sshd:(special access:)\n                                                          READ_CONTROL\n                                                          SYNCHRONIZE\n                                                          FILE_GENERIC_READ\n                                                          FILE_READ_DATA\n                                                          FILE_READ_EA\n                                                          FILE_READ_ATTRIBUTES\nSo ONLY the sshd account left on the file (which is bad, but for a test ...).\nHowever, STILL the same error message for that file:\n7972 10:46:15 376 error: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n7972 10:46:15 376 error: @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n7972 10:46:15 376 error: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n7972 10:46:15 376 error: Permissions for './ssh_host_dsa_key' are too open.\n7972 10:46:15 376 error: It is required that your private key files are NOT accessible by others.\n7972 10:46:15 376 error: This private key will be ignored.\n7972 10:46:15 376 error: key_load_private: bad permissions\nSo there must be a bug, I think, because this is simply wrong.\n. The owner was my own account. I don't understand what should be wrong with it. It happens to be a domain account. The problem went away when I made the local Administrators group the owner. IMO, this is overly restrictive and complicated and the setup script/instructions are not detailed enough.\nHowever, for other reasons I now switched (back) to Cygwin SSHD anyway.. Yes, the owner account was mine, ARS\\A-Rommel. \nThere is nothing special about this account. Just an ordinary domain admin account.\nI'm sorry but I have to move on now, getting work done ... \nNo more time to experiment with this sshd.\nI'll perhaps come back and try it again in a year or so .... ",
    "krombel": "\nDid you mean that public key is not working until a user (any user) is logged in on the target? If so, is the logon an interactive logon?\n\nYes and yes.\n\nCan you add more details on how exactly to reproduce this?\n\nFor me it is enough to reboot my machine. Then the first login via ssh requires a user and a password and all preceeding login's can be also done with public key authentication.\nIt is also possible to login on screen. Then I can use public keys as well.. ",
    "karthick1409": "Is there any other way to achieve this. Hi,\nThanks for the reply\nI have added the argument like below in sshd.conf file but it is not\nworking. let me know if i miss anything.\nsftp sftp_server.exe -C C:\\Myftp\nOn Tue, Oct 3, 2017 at 2:04 PM, gregmich29 notifications@github.com wrote:\n\nYou can try to edit sshd_config, then locate the line where sftp-server is\ncall and add command line argument to the exe --> sftp-server.exe -C\nC:\\MyDirectory\nIt works fine for me.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/730#issuecomment-333776284,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGzh2imUeocaPEtRQkrbE3_eup81pHGLks5sofGngaJpZM4NkJOv\n.\n\n\n-- \nKarthick S\n. ",
    "gregmich29": "You can try to edit sshd_config, then locate the line where sftp-server is call and add command line argument to the exe --> sftp-server.exe -C C:\\MyDirectory\nIt works fine for me.. ",
    "robatilho": "@karthick1409  you can try sftp    sftp-server.exe -d C:\\FTP\\. ",
    "rxarun": "\n@karthick1409 you can try sftp   sftp-server.exe -d C:\\FTP\\\n\nI have also found this to be working . Did you try using double quotes? . ",
    "vaibhavkadam1987": "How to chnage the long path(having space in path).i.e D:\\FTP Sites\\SFTP\n. Any help. ",
    "arreisGit": "Reading the sftp-server man , and just like it was already mentioned -d should work.\n\"-d start_directory\nspecifies an alternate starting directory for users. The pathname may contain the following tokens that are expanded at runtime: %% is replaced by a literal '%', %d is replaced by the home directory of the user being authenticated, and %u is replaced by the username of that user. The default is to use the user's home directory. This option is useful in conjunction with the sshd_config(5) ChrootDirectory option.\" -- https://www.mankier.com/8/sftp-server\nThis worked for me:\nsftp  sftp-server.exe -d \"D:\\someFolder\\anotherFolder\"\n. ",
    "Pixelkracht": "Thank you for your response. Do you mean the Windows user account? It's the only user account on the machine, I don't really understand how it could be expired. \nThe fact that I'm having the exact same problem on two different machines (which are not in the same network or anything) makes me wonder if it's not something to do with some Windows update. Anyway, I'm not getting closer to a solution and I have given up for now, sorry. . It could also be me doing something stupid... Anyway, it's Windows 10 Home edition, 64 bit. If there's anything else I can tell you about it, please let me know.. ",
    "qiuyi21": "Same here at version 0.0.16.0. ",
    "JW0914": "The issue is Win32-OpenSSH isn't respecting the ssh_config/sshd-config Ciphers option... check the logfile of the client/server and look for:\nUnable to negotiate with <host> port <#>: no matching cipher found. Their offer: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n\nWhere \"Their\" refers to Win32-OpenSSH\n\nSee: #847 . [Disregard, see @bingbing8's reply below]\n@alaksandus @joeyaiello @JonathanHolvey @Dchan40 @thomasgeorgec Fully reading instructions will prevent issues such as this... \n\n4th Bullet Down: Start Windows Powershell as Administrator \nWindows requires Admin privileges to alter any directories/files contained within system folders\n\nNon-Admin CMD Terminal \n     ```\n     C:\\Program Files\\OpenSSH>powershell -ExecutionPolicy Bypass -File .\\FixHostFilePermissions.ps1 -Confirm:$false\nWARNING: Appended Windows PowerShell PSModulePath\n C:\\Program Files\\OpenSSH\\FixHostFilePermissions.ps1 : Cannot convert 'System.String' to the type\n 'System.Management.Automation.SwitchParameter' required by parameter 'Confirm'.\n     + CategoryInfo          : InvalidArgument: (:) [FixHostFilePermissions.ps1], ParentContainsErrorRecordException\n     + FullyQualifiedErrorId : CannotConvertArgument,FixHostFilePermissions.ps1\n - **Admin CMD Terminal:**\n    C:\\Program Files\\OpenSSH>powershell -ExecutionPolicy Bypass -File .\\FixHostFilePermissions.ps1 -Confirm:$false\nWARNING: Appended Windows PowerShell PSModulePath\n  [*] C:\\Program Files\\OpenSSH\\sshd_config\n      looks good\n\n  [*] C:\\Users\\James\\.ssh\\authorized_keys\n      looks good\n\n   Done.\n```\n\n\nNon-Admin PS Terminal:\n ```\n PS C:\\Program Files\\OpenSSH> powershell -ExecutionPolicy Bypass -File .\\FixHostFilePermissions.ps1 -Confirm:$false\n\nWARNING: Appended Windows PowerShell PSModulePath\n   [*] C:\\Program Files\\OpenSSH\\sshd_config\n Get-Acl : Attempted to perform an unauthorized operation.\n At C:\\Program Files\\OpenSSH\\OpenSSHUtils.psm1:281 char:12\n +     $acl = Get-Acl $FilePath\n +            ~~~~~~~~~~~~~~~~~\n     + CategoryInfo          : NotSpecified: (:) [Get-Acl], UnauthorizedAccessException\n     + FullyQualifiedErrorId : System.UnauthorizedAccessException,Microsoft.PowerShell.Commands.GetAclCommand\nThe property 'owner' cannot be found on this object. Verify that the property exists.\n At C:\\Program Files\\OpenSSH\\OpenSSHUtils.psm1:287 char:5\n +     $currentOwnerSid = Get-UserSid -User $acl.owner\n +     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n     + CategoryInfo          : NotSpecified: (:) [], PropertyNotFoundException\n     + FullyQualifiedErrorId : PropertyNotFoundStrict\nThe property 'Owner' cannot be found on this object. Verify that the property exists.\n At C:\\Program Files\\OpenSSH\\OpenSSHUtils.psm1:291 char:39\n +         $caption = \"Current owner: '$($acl.Owner)'. '$newOwner' shoul ...\n +                                       ~~~~~~~~~~\n     + CategoryInfo          : NotSpecified: (:) [], PropertyNotFoundException\n     + FullyQualifiedErrorId : PropertyNotFoundStrict\nCurrent owner: ''. 'NT AUTHORITY\\SYSTEM' should own 'C:\\Program Files\\OpenSSH\\sshd_config'.\n Shall I set the file owner?\n [Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is \"Y\"):\n - **Admin PS Terminal:**\n    PS C:\\Program Files\\OpenSSH> powershell -ExecutionPolicy Bypass -File .\\FixHostFilePermissions.ps1 -Confirm:$false\nWARNING: Appended Windows PowerShell PSModulePath\n  [*] C:\\Program Files\\OpenSSH\\sshd_config\n      looks good\n\n  [*] C:\\Users\\JW0914\\.ssh\\authorized_keys\n      looks good\n\n   Done.\n```. @bingbing8 I'm using PS 6 and wasn't aware of that, thanks =]\n\n\n\n@DarwinJS The first two PowerShell script outputs were from a command terminal (cmd), whereas the latter two were from a PowerShell terminal.  \nIn regards to syntax, I allow execution of remotely signed scripts, and have PowerShell added to PATH so I simply execute .\\FixHostFilePermissions.ps1 from a PS terminal.\n\n\nI used the commands in my above post as that was what was being used by users with the issue, and wasn't aware, until bingbing8's reply, that I wasn't having the issue because I'm using PS 6 . The issue appears to be ssh.exe refuses to acknowledge the ssh_config file stored in C:\\Program Files\\OpenSSH\\ (unless specifically referenced via -F 'C:\\Program Files\\OpenSSH\\ssh_config'), instead only recognizing an ssh_config stored at %USERPROFILE%\\.ssh\\config by default.\n\n\nThis is not normal behavior for OpenSSH and should this not be fixed, it needs to be annotated in the ReadMe, as generic OpenSSH information in the ReadMe is not only not helpful, it's irrelevant to this repo.\n\nNormal behavior takes system wide settings from OpenSSH\\ssh_config and user specific/custom settings from .ssh\\config. I appreciate this being annotated under Security Considerations, however that doesn't fully address the issue...\n\nCurrently, Win32-OpenSSH does not recognize anything set in C:\\Program Files\\OpenSSH\\ssh_config unless the -F switch is utilized (due entirely to how it's currently compiled), and while that's a massive security flaw in and of itself, there are many non-security related functions set via the system wide ssh_config.\nThis information should not be buried several links deep in the repo, and at the very least, should be in line on the installation page, or better yet, have the installation script create %USERPROFILE%\\.ssh\\config.\n- Simply put, the contributors to this repo are shooting themselves, and Microsoft, in the foot if this is not annotated front and center because it is such a vital part of how OpenSSH functions. \n  - How many will simply abandon trying to utilize Win32-OpenSSH, when they're unable to figure out how to work around the system wide client ssh_config not being recognized by ssh.exe?\n- %USERPROFILE%\\.ssh\\config is not meant to function as the system wide ssh_config, but adjacent to.. @manojampalam Thank you, I appreciate that.. @nightwish47 Have you verified client and server are using the same authentication methods, and if you utilize debug2 (may need to be debug3), the server log will show exactly what the issue is when compared against the client log (also set to debug2 || debug3).\n\nThe 1024bit key isn't an SHA1 RSA key is it, as those are auto disabled unless one specifically sets SHA1 keys are able to be utilized in the sshd_config (not recommended)?\n\nAuthentication Options\n```\nFingerprintHash                   = sha256\nCiphers                           = rijndael-cbc@lysator.liu.se,aes256-cbc,aes192-cbc,aes128-cbc\nHostKeyAlgorithms                 = ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa\nHostbasedKeyTypes                 = ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa\nKexAlgorithms                     = curve25519-sha256@libssh.org,curve25519-sha256,diffie-hellman-group-exchange-sha256,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521\nMACs                              = hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha2-256,hmac-sha2-512\nPubkeyAcceptedKeyTypes            = ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa\n```\n\nThose are the values I utilize, however for all values available, see the man pages for sshd_config & ssh_config. @248668342 @bagajjal  authorized_keys should only be accessible by the user and sshd, and should be owned by the user, not NT AUTHORITY/SYSTEM or BUILTIN\\Administrators.\n%USERPROFILE%\\.ssh\\authorized_keys\nNT SERVICE\\sshd:(R)\n   WRT\\JW0914:(F)\nRemove all inheritance for .ssh and all files contained within (Properties -> Security -> Advanced)\nRemove all users but the signed in user, then: \nicacls %USERPROFILE%\\.ssh\\authorized_keys /grant `\"NT SERVICE\\sshd`\":`(R`)\nicacls %USERPROFILE%\\.ssh\\authorized_keys /grant `\"WRT\\JW0914`\":`(F`)\nWhere WRT\\JW0914 is the user\n\n\n\n\n\nCorrect Permissions structure for files/directories within %UserProfile%\\.ssh:\n\nNOTE:\n%UserProfile%\\.ssh, and all files/directories within, should not have inherited permissions.\nUnless the user is the only one being passed for inheritance\nUser should be the owner of %UserProfile%\\.ssh and all files/directories within\n\n\n%ProgramFiles%\\OpenSSH\\ssh_host_*_key\nPsExe should be utilized to register the server keys as NT AUTHORITY\\SYSTEM (halfway down)\nsdelete should be used to securely erase them (5 pass minimum) once registered\n\n\n%ProgramFiles%\\OpenSSH\\ssh_config\nNT AUTHORITY\\SYSTEM:(F) |\n       BUILTIN\\Administrators:(F) |\n       NT SERVICE\\sshd:(R)\nicacls %ProgramFiles%\\OpenSSH\\sshd_config /grant `\"NT AUTHORITY\\SYSTEM`\":`(F`)\nicacls %ProgramFiles%\\OpenSSH\\sshd_config /grant `\"BUILTIN\\Administrators`\":`(F`)\nicacls %ProgramFiles%\\OpenSSH\\sshd_config /grant `\"NT SERVICE\\sshd`\":`(R`)\n\n\n%ProgramFiles%\\OpenSSH\\sshd_config\nNT AUTHORITY\\SYSTEM:(F) |\n       BUILTIN\\Administrators:(F) |\n       NT SERVICE\\sshd:(R)\nicacls %ProgramFiles%\\OpenSSH\\sshd_config /grant `\"NT AUTHORITY\\SYSTEM`\":`(F`)\nicacls %ProgramFiles%\\OpenSSH\\sshd_config /grant `\"BUILTIN\\Administrators`\":`(F`)\nicacls %ProgramFiles%\\OpenSSH\\sshd_config /grant `\"NT SERVICE\\sshd`\":`(R`)\n\n\n%UserProfile%\\.ssh\nWRT\\JW0914:(F)\nicacls %UserProfile%\\.ssh /grant `\"WRT\\JW0914`\":`(F`)\n\n\n%UserProfile%\\.ssh\\authorized_keys\nNT SERVICE\\sshd:(R) |\n       WRT\\JW0914:(F)\nicacls %UserProfile%\\.ssh\\authorized_keys /grant `\"NT SERVICE\\sshd`\":`(R`)\nicacls %UserProfile%\\.ssh\\authorized_keys /grant `\"WRT\\JW0914`\":`(F`)\n\n\n%UserProfile%\\.ssh\\config\nWRT\\JW0914:(F)\nicacls %UserProfile%\\.ssh\\config /grant `\"WRT\\JW0914`\":`(F`)\n\n\n%UserProfile%\\.ssh\\known_hosts\nWRT\\JW0914:(F)\nicacls %UserProfile%\\.ssh\\known_hosts /grant `\"WRT\\JW0914`\":`(F`)\n\n\n~/.ssh\n[root@LEDE] /home/jw # ls -lsa .ssh\n       0 drwx------    1 jw       jw             368 Sep 10  2017 .\n       4 -rw-------    1 jw       jw            2254 Sep 10  2017 authorized_keys\n       8 -rw-------    1 jw       jw            6699 Sep 10  2017 config\n       0 -rw-------    1 jw       jw               0 Sep 10  2017 known_hosts. With current version and going forward, there should only be two users with access permissions to %UserProfile%\\.ssh\\authorized_keys: \nThe owning user\nNT SYSTEM\n\n\n. @foobarberger Please post your client ssh log [debug2] from Linux. @foobarberger You're issue appears to be stemming from the following error: \n- key_parse_private2: missing begin marker\nThere's a handful of things that can cause this, and while I'll list the few I know of here, it will also be best to google the above error.  Possible causes:\n- Incorrect/corrupted PEM file\n   - I experienced this when I first setup OpenSSH on Windows and my issues were stemming from the incorrect OpenSSH PEM version (there's two different versions for OpenSSH, old and new).  I couldn't get PEMs generated with OpenSSH on Windows to properly authenticate and instead converted my PuTTY keys via PuTTYgen, howeer I can't recall whether I chose \"Export OpenSSH key\" or \"Export OpenSSH key (force new file format)\"\n     - You can confirm if it's the PEM by enabling password login temporarily in the sshd_config... if you can login with a password, the PEM file is the issue\n        - ChallengeResponseAuthentication   = yes\n          PasswordAuthentication            = yes\n- **Incorrect permissions**\n   - This should show up in _/var/log/auth.log_ (similar to _`Authentication refused: bad ownership or modes for ...`_):  \n     -tail -f -n 80 /var/log/auth.log- **_C:\\\\Program Files\\\\OpenSSH\\\\sshd_config_**\n     -\n       NT AUTHORITY\\SYSTEM:(F)\n       BUILTIN\\Administrators:(F)\n       NT SERVICE\\sshd:(R)\n       -icacls C:\\Program Files\\OpenSSH\\sshd_config /grant \"NT AUTHORITY\\SYSTEM\":(F)icacls C:\\Program Files\\OpenSSH\\sshd_config /grant \"BUILTIN\\Administrators\":(F)icacls C:\\Program Files\\OpenSSH\\sshd_config /grant \"NT SERVICE\\sshd\":(R)- Did you utilize [`PsExe`](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec) to register the server keys as _NT AUTHORITY\\SYSTEM_, as well as [`sdelete`](https://docs.microsoft.com/en-us/sysinternals/downloads/sdelete) to securely erase them once registered?  If not, [halfway down](https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH).\n   - **_%USERPROFILE%\\\\.ssh_**\n     -\n       NT AUTHORITY\\SYSTEM:(OI)(CI)(F)\n       BUILTIN\\Administrators:(OI)(CI)(F)\n       WRT\\JW0914:(OI)(CI)(F)\n       -icacls %USERPROFILE%.ssh /grant \"NT AUTHORITY\\SYSTEM\":(F)icacls %USERPROFILE%.ssh /grant \"BUILTIN\\Administrators\":(F)icacls %USERPROFILE%.ssh /grant \"WRT\\JW0914\":(F)- **_%USERPROFILE%\\\\.ssh\\\\authorized_keys_**\n     -\n       NT SERVICE\\sshd:(R)\n       WRT\\JW0914:(F)\n       -icacls %USERPROFILE%.ssh\\authorized_keys /grant \"NT SERVICE\\sshd\":(R)icacls %USERPROFILE%.ssh\\authorized_keys /grant \"WRT\\JW0914\":(F)- **_%USERPROFILE%\\\\.ssh\\\\config_**\n     -\n       WRT\\JW0914:(OI)(CI)(F)\n       -icacls %USERPROFILE%.ssh\\config /grant \"WRT\\JW0914\":(F)- **_%USERPROFILE%\\\\.ssh\\\\known_hosts_**\n     -\n       NT AUTHORITY\\SYSTEM:(I)(F)\n       BUILTIN\\Administrators:(I)(F)\n       WRT\\JW0914:(I)(F)\n       -icacls %USERPROFILE%.ssh\\known_hosts /grant \"NT AUTHORITY\\SYSTEM\":(F)icacls %USERPROFILE%.ssh\\known_hosts /grant \"BUILTIN\\Administrators\":(F)icacls %USERPROFILE%.ssh\\known_hosts /grant \"WRT\\JW0914\":(F)- **_~/.ssh_**\n     -\n       [root@LEDE] /home/jw # ls -lsa .ssh\n            0 drwx------    1 jw       jw             368 Sep 10  2017 .\n            4 -rw-------    1 jw       jw            2254 Sep 10  2017 authorized_keys\n            8 -rw-------    1 jw       jw            6699 Sep 10  2017 config\n            0 -rw-------    1 jw       jw               0 Sep 10  2017 known_hosts\n       -chmod 700 ~/.ssh && chmod 600 ~/.ssh/*``\n- _(If set)_ **Verify: [_sshd_config_](https://man.openbsd.org/sshd_config)**\n   - AllowUsers\n   - AllowGroups. @foobarberger If you haven't already, google the error message that appears to be causing this:key_parse_private2: missing begin marker`\nAlso, this may not occur on Server 2012, but it does in Windows 10, so also verify inheritance has actually been disabled for the aforementioned files and directories in my prior post.  \n\nFor a reason I didn't feel like troubleshooting, removing inheritance via icacls in Windows 10 did not remove the inheritance, so double check inheritance is actually disabled via Properties -> Security -> Advanced.\n\n. While this is closed, it should be notated the SSH daemon should not be ran as System on a multi-user OS, as if the SSH daemon is ever compromised, it will allow system level access to the exploit.\n\n\nOn Linux/BSD, if the SSH daemon is running as a server, it's configured as either a chroot or within a jail, preventing an exploit from gaining access to anything outside of the chroot/jail.\n. More likely than not, Administrators or System is the owner of %UserProfile%\\.ssh\\id_rsa, as one or the other is the default owner of %UserProfile%.\n\n\nThe easiest way to prevent permissions errors, as well as to ensure only the correct users have access, is to disable inheritance on %UserProfile%\\.ssh, as well as every other directory or file contained within, ensuring the user is the owner of %UserProfile%\\.ssh and all files/directories contained within.\n\nFor example, %UserProfile%\\.ssh\\config should only be accessible by the user and no one else, yet it will be created with access permissions granted to System and the Administrators group if permissions are inherited from %UserProfile%\\.ssh\nThis will become even more problematic should a user choose to use variables in %UserProfile%\\.ssh\\config, as those variables will have to coincide to nested folders within %UserProfile%\\.ssh. @gildas It would seem this is specific to domain user accounts, especially with your latter reply, as I can't replicate with a local user either.  I have no experience with domain accounts, so someone else that does will need to chime in.\n. This is still an issue on v1.0.0.0-Beta:\n\nPS C:\\ProgramData\\Scripts\\Sign> ssh-keygen -G moduli.2048 -b 2048\nTue Jan 30 19:46:03 2018 Sieve next 67043328 plus 2047-bit\nTue Jan 30 19:48:52 2018 Sieved with 203277289 small primes in 169 seconds\nTue Jan 30 19:48:52 2018 Found 0 candidates\nmodulus candidate generation failed. If you can provide a private way to communicate with you, I'll provide the name of the collaborator, as well as the post detailing the above, however it's not appropriate to call them out publicly (which is why the Collaborator was not named and post not linked to).\n\nFixHostFilePermissions.ps1 and FixUserFilePermissions.ps1 do not set the correct permissions for %UserProfile%\\.ssh\\*\n\n%UserProfile%\\.ssh should not have inherited permissions, unless the owning user is the only user being passed for inheritance.\nThis means NT AUTHORITY\\SYSTEM and Administrators, or any other user/group, should not have access\nDepending on how Windows was installed or upgraded, more often times than not, the user is not the owner of their user folder; usually NT AUTHORITY\\SYSTEM or Administrators is, and since permissions are inherited from %UserProfile%, NT AUTHORITY\\SYSTEM and Administrators have full access when they should have no access.\n\n\nAll one needs to do is issue icacls %UserProfile%\\.ssh  & icacls %UserProfile%\\.ssh\\* to show improper permissions.  \nThe permissions I laid out in the main post above are the proper permissions; these are not the permissions one sees after installing OpenSSH and running FixHostFilePermissions.ps1 & FixUserFilePermissions.ps1\n\n\nFixHostFilePermissions.ps1\n```\nPS C:\\Program Files\\OpenSSH> .\\FixHostFilePermissions.ps1\n  [*] C:\\Program Files\\OpenSSH\\sshd_config\n      looks good\n[*] C:\\Users\\JW0914.ssh\\authorized_keys\n      'NT SERVICE\\sshd' now has Read access to 'C:\\Users\\JW0914.ssh\\authorized_keys'.\n      Repaired permissions\nDone.\nPS C:\\Program Files\\OpenSSH> icacls C:\\Users\\JW0914.ssh\nC:\\Users\\JW0914.ssh\n                    NT AUTHORITY\\SYSTEM:(OI)(CI)(F)\n                    BUILTIN\\Administrators:(OI)(CI)(F)\n                    Win10Pro\\JW0914:(OI)(CI)(F)\nSuccessfully processed 1 files; Failed processing 0 files\nPS C:\\Program Files\\OpenSSH> icacls C:\\Users\\JW0914.ssh*\nC:\\Users\\JW0914.ssh\\authorized_keys \n                                    NT SERVICE\\sshd:(R)\n                                    NT AUTHORITY\\SYSTEM:(I)(F)\n                                    BUILTIN\\Administrators:(I)(F)\n                                    Win10Pro\\JW0914:(I)(F)\nC:\\Users\\JW0914.ssh\\config \n                           NT AUTHORITY\\SYSTEM:(F)\n                           BUILTIN\\Administrators:(F)\n                           Win10Pro\\JW0914:(F)\nC:\\Users\\JW0914.ssh\\known_hosts \n                                NT AUTHORITY\\SYSTEM:(F)\n                                BUILTIN\\Administrators:(F)\n                                Win10Pro\\JW0914:(F)\nSuccessfully processed 3 files; Failed processing 0 files\n```\n\nFixUserFilePermissions.ps1\n```\nPS C:\\Program Files\\OpenSSH> .\\FixUserFilePermissions.ps1\n  [*] ~.ssh\\config\n      looks good\nDone.\nPS C:\\Program Files\\OpenSSH> icacls C:\\Users\\JW0914.ssh*\nC:\\Users\\JW0914.ssh\\authorized_keys\n                                    NT SERVICE\\sshd:(R)\n                                    NT AUTHORITY\\SYSTEM:(I)(F)\n                                    BUILTIN\\Administrators:(I)(F)\n                                    Win10Pro\\JW0914:(I)(F)\nC:\\Users\\JW0914.ssh\\config\n                           NT AUTHORITY\\SYSTEM:(F)\n                           BUILTIN\\Administrators:(F)\n                           Win10Pro\\JW0914:(F)\nC:\\Users\\JW0914.ssh\\known_hosts\n                                NT AUTHORITY\\SYSTEM:(F)\n                                BUILTIN\\Administrators:(F)\n                                Win10Pro\\JW0914:(F)\nSuccessfully processed 3 files; Failed processing 0 files\n```. I replied with something similar to the original post above, however this current issue wasn't opened solely because of that thread, but instead because I've come across several issue threads regarding %UserProfile%\\.ssh\\* permissions issues.\n\n%UserProfile%\\.ssh\\* permissions should echo BSD/Linux permissions, and root, nor sudo, have access to an individual user's .ssh folder on a multi-user system\n\nIt's imperative no one but the user has access to %UserProfile%\\.ssh\\authorizedkeys and %UserProfile%\\.ssh\\config, as it's a major security risk for either to be accessible by anyone but the user they belong to.\n. root can do the same on a multi-user BSD/Linux system, so clearly there's a reason why only the owning user should have access.  I don't know what that reasoning is, but considering this has always been the permission structure for OpenSSH, I'd recommend sticking with the way the software and it's permission structure is intended to work, and not modify it unless one understands the reasoning of the BSD authors.  \n\n\nUnless one can provide a logical and rational reasoning for changing the permission structure to something other than it was intended to be, then it should be left well alone.\n\n\ntakeown would have to be utilized by an administrator to take ownership of a folder/file which is owned by another local user or a system level user/group, so yes, there are good enough reasons to ensure NT AUTHORITY\\SYSTEM & Administrators do not have access to %UserProfile%\\.ssh*.  \n\n\nUnless Microsoft has received guidance from OpenSSH authors/maintainers as to why Windows should not follow the same permissions structure as BSD/Linux, then the permissions should remain as they were intended to be by OpenSSH.. Fair enough, thank you.. I don't believe so since once sshd is restarted, it will recreate the server keys when it sees none exist in %ProgramData%\\ssh.  It seems insecure to allow any user but the System account access to them, as the default permissions allow Administrators full access, and since most consumer PC users have administrator accounts by default, this allows for the server keys to be read by the user, versus unix based systems which are owned only by root, and users can only read them if they've been given sudo permissions.. Users can be created in WinPE, but not for login to WinPE. \n\n\nLog in to WinPE occurs via the default administrator account, or, if utilizing a WinPE image configured for WinRE, as a specific user apart of the Administrators group.. Did you ever add your key with ssh-add?. In Windows, once the key is loaded with ssh-add, it will no longer ask for a password.\n\n\nIf you want the convenience of connecting to sessions without having to continually retype the key path, configure a ssh user config at %UserProfile%\\.ssh\\config.  \n\nFor example, here's the one I utilize, with a generic port and ddns addresses:\nSay I needed to login to my FreeNAS server as root, I'd simply issue ssh FNr\nThis is one of the few times case sensitivity matters in Windows, as the case must match exactly to what is specified for Host (bottom of config, under Hosts)\n\n\n\n```ini\n\n##::[[---  Windows OpenSSH Config  ---]]::##\n\n\n           ##----- Custom -----##\n\n\nUserKnownHostsFile                = ~.ssh\\known_hosts\n\n          ##----- Options -----##\n\n\n# Connection #\n\n---------------------------------------------------\nAddressFamily                     = inet\n# Encryption #\n\n---------------------------------------------------\nRekeyLimit                        = 500M 60m\n# Authentication #\n\n---------------------------------------------------\nChallengeResponseAuthentication   = no\nKbdInteractiveAuthentication      = no\nPasswordAuthentication            = no\nPreferredAuthentications          = publickey\nPubkeyAuthentication              = yes\nAddKeysToAgent                    = ask\n# Reliability #\n\n---------------------------------------------------\nTCPKeepAlive                      = yes\n# Security #\n\n---------------------------------------------------\nForwardAgent                      = yes\nForwardX11                        = yes\nGatewayPorts                      = no\nHashKnownHosts                    = yes\nStrictHostKeyChecking             = ask\n# Logging #\n\n---------------------------------------------------\nSyslogFacility                    = AUTH\nLogLevel                          = VERBOSE\n# Environment #\n\n---------------------------------------------------\n# Disabled:\n    ## PermitUserRC               = yes\n# Ciphers and ReKeying #\n\n---------------------------------------------------\nFingerprintHash                   = sha256\nCiphers                           = rijndael-cbc@lysator.liu.se,aes256-cbc,aes192-cbc\nHostKeyAlgorithms                 = ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa\nHostbasedKeyTypes                 = ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa\nKexAlgorithms                     = curve25519-sha256@libssh.org,curve25519-sha256,diffie-hellman-group-exchange-sha256,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521\nMACs                              = hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha2-256,hmac-sha2-512\nPubkeyAcceptedKeyTypes            = ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa\n\n           ##----- Hosts -----##\n\n\n# AsRock #\n\n---------------------------------------------------\nHost                              AR\n  Hostname                        c2750.wrt\n  Port                            9876\n  User                            root\n  IdentityFile                    %d.ssh\\ids\\local\\%h\\%r\\AsRock_2r\nHost                              AR0\n  Hostname                        c27500.wrt\n  Port                            9876\n  User                            root\n  IdentityFile                    %d.ssh\\ids\\local\\%h\\%r\\AsRock_2r\nHost                              AR1\n  Hostname                        c27501.wrt\n  Port                            9876\n  User                            root\n  IdentityFile                    %d.ssh\\ids\\local\\%h\\%r\\AsRock_2r\n# ESXi #\n\n---------------------------------------------------\nHost                              ESX\n  Hostname                        esxi.wrt\n  Port                            9876\n  User                            root\n  IdentityFile                    %d.ssh\\ids\\local\\%h\\%r\\ESXi_2r\nHost                              ESX0\n  Hostname                        esxi0.wrt\n  Port                            9876\n  User                            root\n  IdentityFile                    %d.ssh\\ids\\local\\%h\\%r\\ESXi_2r\nHost                              ESX1\n  Hostname                        esxi1.wrt\n  Port                            9876\n  User                            root\n  IdentityFile                    %d.ssh\\ids\\local\\%h\\%r\\ESXi_2r\n# FreeNAS #\n\n---------------------------------------------------\nHost                              FNr\n  Hostname                        freenas.wrt\n  Port                            9876\n  User                            root\n  IdentityFile                    %d.ssh\\ids\\local\\%h\\%r\\FreeNAS-root_2r\nHost                              FNj\n  Hostname                        freenas.wrt\n  Port                            9876\n  User                            someuser\n  IdentityFile                    %d.ssh\\ids\\local\\%h\\%r\\FreeNAS-JW0914_2r\n# Sophos #\n\n---------------------------------------------------\nHost                              UTM\n  Hostname                        192.168.2.1\n  Port                            9876\n  User                            root\n  IdentityFile                    %d.ssh\\ids\\local\\%h\\%r\\Sophos_2r\nHost                              UTM\n  Hostname                        utm.wrt\n  Port                            9876\n  User                            root\n  IdentityFile                    %d.ssh\\ids\\local\\%h\\%r\\Sophos_2r\nHost                              UTMR\n  Hostname                        your.ddns.com\n  Port                            9876\n  User                            root\n  IdentityFile                    %d.ssh\\ids\\remote\\%h\\%r\\Sophos_2r\n``\n* See the _Tokens_ section for the variables definitions in the IdentityFile path . You're using an extremely old version... please update to [1.0.0.0](https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v1.0.0.0) (ensure you re-read the [install wiki](https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH), as steps have changed).. Are you actually accessinglocalhost, or are you using that as a placeholder for a device hostname on your LAN?  If so, add a host entry to the windows host file mapping the local device's IP to it's hostname.localdomain.  If not, please disregard.\n. The locations have changed in 1.0.0.0 (see [#7](https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH), as location has changed to%ProgramData%\\ssh\\sshd_config`), and the bug (#847) with not honoring the system wide sshd_config was fixed.  \n\nYou may also want to configure a user specific ssh_config to be placed inside your user's .ssh directory.\nMost options are cross compatible between the sshd_config and user specific ~\\.ssh\\config, but some are not, so ensure you verify if copying and pasting from the sshd_config.\nThe user specific ssh_config must be named config, not ssh_config.\n. @Maddog2050 If this has been resolved, please close the issue =]. \n\n\n",
    "dariusj18": "Symantec Endpoint Protection is installed. Those commands return \nBUILTIN\\Administrators:(F)\nNT AUTHORITY\\SYSTEM:(F)\nSERVERNAME\\Administrator:(R,W). I didn't see this before, however I think I see the problem, I have Powershell 4.0, so I get errors when running the script\nGet-ItemPropertyValue : The term 'Get-ItemPropertyValue' is not recognized as the name of a cmdlet,\nand more. I manually change the permissions and now i see them as \n\nNT AUTHORITY\\SYSTEM:(F)\nBUILTIN\\Administrators:(F)\nNT SERVICE\\sshd:(R)\n\n\nHowever in the log I now see \n\n@@@@@@@@@@@@ ...\nWARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@ ...\nPermissions for './ssh_host_rsa_key' are too open.\nIt is required that your private key files are NOT accessible by others.\n\nfor each of the private key files. That worked, thank you.. It was FixHostfilePermissions.ps1. ",
    "HrochL": "Hi All, \nabout \"single quotes issue\" - recomended workaround must be applied on each client. This is not good thing for a common use. I would argue for some solution on the server ... ideally for the option to choosing the shell.. ",
    "benvindo": "@bingbing8 \nI don't understand first step in server.\nI tried following some steps for configuration my remote git but unsuccessful.\nwhen add remote like this and run git push:\ngit remote set-url --add--push origin ssh://bruno.costa@b2t.corp@R2D2:/C:/web/multiprodutos/repo/homol.git\nshow me this error: \n````\ngit-receive-pack : The term 'git-receive-pack' is not recognized as the name of a cmdlet, function, script file, or\noperable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try\nagain.\nAt line:1 char:1\n+ git-receive-pack '/C:/web/multiprodutos/repo/homol.git'\n+ ~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (git-receive-pack:String) [], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException\nfatal: Could not read from remote repository.\n````\nI tried add remote like this too:  git remote set-url --add --push origin ssh://bruno.costa@10.61.100.35/C:/web/multiprodutos/repo/homol.git \nbut show me same error above. \n**When I put  remote without slash in the start \nas recommended git remote set-url --add--push origin ssh://bruno.costa@b2t.corp@R2D2:C:/web/multiprodutos/repo/homol.git  I can't even log in\nDo you have any idea what's causing this error?\n. The cause of error above was I don't put environment 'git\\mingw64\\bin' in my variables env in server, however I got other error: \nfatal: '/C:/web/multiprodutos/repo/homol.git' does not appear to be a git repository\nfatal: Could not read from remote repository.. Hi, sorry for my lack of attention, I was focused on connecting the apps and forgetting the minimally details, Now its work perfectly.  Thanks!!. I have a similar error to @diogocp,  at some point when a member of my team sends commits to a TFS repository and after some time we try to send all the commits to the production happens the error:\n`git push serve_prod homol:prod\nMultiprodutos@XXXDNN3651@sqlprod.adfsistemas.com.br's password:\nCounting objects: 97, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (47/47), done.\nWriting objects: 100% (97/97), 53.53 KiB | 0 bytes/s, done.\nTotal 97 (delta 73), reused 69 (delta 48)\nremote: fatal: early EOF\nerror: remote unpack failed: unpack-objects abnormal exit\nTo XXXDNN3651@sqlprod.adfsistemas.com.br:C:/multiprodutos/web/repo/ui-multiprodutos-web.git\n ! [remote rejected] homol -> prod (unpacker error)\nerror: failed to push some refs to 'Multiprodutos@XXXDNN3651@sqlprod.adfsistemas.com.br:C:/multiprodutos/web/repo/ui-multiprodutos-web.git'\n`. ",
    "larry191994": "\n@benvindo which step? this?\nTo check out a repository, go to where you want to put your local repo,\ncd c:\\mygitrepros\n # initialize a local repo folder\n git init mylocalrepo\n cd mylocalrepo\n # add the remote repro\n git remote add origin user@domain@servermachine:C:/test/myrepo.git\n # work around the known issue by launching powershell to run the git commands\n git config --local remote.origin.uploadpack \"powershell git-upload-pack\"\n git config --local remote.origin.receivepack \"powershell git-receive-pack\"\n git fetch origin\n\nI follow your approach but I still get the fatal: ''/C:/git/A.git'' does not appear to be a git repository when I try to git clone the remote repository from another server. I am really confused about this ....\n. ",
    "duanyao": "I saw \"Get-ItemPropertyValue\" error from FixHostfilePermissions.ps1 too. It's a Win7 64bit and I installed WMF 4.0. Does this script only run in powershell 3.0? However even if I start powershell with -version 3.0 the errors persist.. ",
    "schall8": "C:\\Program Files\\OpenSSH>sshd -d\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\nThank you for pointing me to the interactive debug made me double check and notepad saved the config with the .txt extension.  it is binding now properly, thank you for your time.\nC:\\Program Files\\OpenSSH>sshd -d\ndebug1: Bind to port 12346 on ::.\nServer listening on :: port 12346.\ndebug1: Bind to port 12346 on 0.0.0.0.\nServer listening on 0.0.0.0 port 12346.\ndebug1: Bind to port 12345 on ::.\nServer listening on :: port 12345.\ndebug1: Bind to port 12345 on 0.0.0.0.\nServer listening on 0.0.0.0 port 12345.\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\n. ",
    "carlivar": "I tried your package (thank you for doing this).\nIt failed. However I've been having trouble with the permissions fix script prior to your package, I think because I'm on PS 4.0. Anyway, here are the results, partial paste showing context of the error:\n```\nC:\\Program Files\\OpenSSH-Win32\\ssh-keygen.exe: generating new host keys: RSA DSA ECDSA ED25519\nOk.\nWARNING: The following private keys should be removed from the machine:\n[SC] ChangeServiceConfig SUCCESS\nEnsuring all ssh key and configuration files have correct permissions for all users\nERROR: The running command stopped because the preference variable \"ErrorActionPreference\" or common parameter is set to\n Stop: At C:\\Program Files\\OpenSSH-Win32\\OpenSSHUtils.psm1:20 char:50\n+         if ($PSVersionTable.PSVersion.Major -gt 2)\n+                                                  ~\nMissing statement block after if ( condition ).\nThe install of openssh was NOT successful.\nError while running 'C:\\ProgramData\\chocolatey\\lib\\openssh\\tools\\chocolateyinstall.ps1'.\n See log for details.\nChocolatey installed 0/1 package(s). 1 package(s) failed.\n See the log for details (C:\\ProgramData\\chocolatey\\logs\\chocolatey.log).\nFailures:\n - openssh\n```. Forgot to mention, above is on Windows Server 2012 R2. @DarwinJS It seems to have installed correctly now for me. However, I'm still not able to authenticate from a client successfully (though it gets part of the way, so it's not a firewall issue or such).\nWith your package I'm having a hard time troubleshooting because for some reason C:\\Program Files\\OpenSSH-Win32\\Logs does not contain an sshd.log (it only has ssh-agent.log, which is empty). In my prior self-installations, I had a log here (where I wound up troubleshooting various permission errors for the most part).\n. I found the problem. The Logs subdirectory did not have any permissions for the sshd service.\nI now have an sshd.log after running: icacls.exe Logs /grant sshd:F\nThis may also need to be part of the choco install script?. Hmm, looks like my troubles are still related to the permissions fix script at install time. Here's the excerpt from that. I thought it had worked, but does not appear so from the below. I replaced our domain and my username with FOO\\my.username. I ran the choco installer logged in with my domain (Administrators group) user and from an Administrator powershell prompt. Should I be running it differently?\n```\nC:\\Program Files\\OpenSSH-Win32\\ssh-keygen.exe: generating new host keys: RSA DSA ECDSA ED25519\nOk.\nWARNING: The following private keys should be removed from the machine:\n[SC] ChangeServiceConfig SUCCESS\nEnsuring all ssh key and configuration files have correct permissions for all users\n[*] C:\\Program Files\\OpenSSH-Win32\\sshd_config\ninheritance is removed from C:\\Program Files\\OpenSSH-Win32\\sshd_config.\n'BUILTIN\\Users' has no more access to C:\\Program Files\\OpenSSH-Win32\\sshd_config.\n'APPLICATION PACKAGE AUTHORITY\\ALL APPLICATION PACKAGES' has no more access to C:\\Program Files\\OpenSSH-Win32\\sshd_confi\ng.\n'NT SERVICE\\sshd' now has Read access to C:\\Program Files\\OpenSSH-Win32\\sshd_config.\n  fixed permissions\n\n[*] C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key\n'NT AUTHORITY\\SYSTEM' now owns C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key.\n'FOO\\my.username' has no more access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key.\n'NT SERVICE\\sshd' now has Read access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key.\nThe security identifier is not allowed to be the owner of this object.\n      fixed permissions\n[*] C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key.pub\n'NT AUTHORITY\\SYSTEM' now owns C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key.pub.\n'FOO\\my.username' now has Read access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key.pub.\nThe security identifier is not allowed to be the owner of this object.\n      fixed permissions\n[*] C:\\Program Files\\OpenSSH-Win32\\ssh_host_ecdsa_key\n'NT AUTHORITY\\SYSTEM' now owns C:\\Program Files\\OpenSSH-Win32\\ssh_host_ecdsa_key.\n'FOO\\my.username' has no more access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_ecdsa_key.\n'NT SERVICE\\sshd' now has Read access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_ecdsa_key.\nThe security identifier is not allowed to be the owner of this object.\n      fixed permissions\n[*] C:\\Program Files\\OpenSSH-Win32\\ssh_host_ecdsa_key.pub\n'NT AUTHORITY\\SYSTEM' now owns C:\\Program Files\\OpenSSH-Win32\\ssh_host_ecdsa_key.pub.\n'FOO\\my.username' now has Read access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_ecdsa_key.pub.\nThe security identifier is not allowed to be the owner of this object.\n      fixed permissions\n[*] C:\\Program Files\\OpenSSH-Win32\\ssh_host_ed25519_key\n'NT AUTHORITY\\SYSTEM' now owns C:\\Program Files\\OpenSSH-Win32\\ssh_host_ed25519_key.\n'FOO\\my.username' has no more access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_ed25519_key.\n'NT SERVICE\\sshd' now has Read access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_ed25519_key.\nThe security identifier is not allowed to be the owner of this object.\n      fixed permissions\n[*] C:\\Program Files\\OpenSSH-Win32\\ssh_host_ed25519_key.pub\n'NT AUTHORITY\\SYSTEM' now owns C:\\Program Files\\OpenSSH-Win32\\ssh_host_ed25519_key.pub.\n'FOO\\my.username' now has Read access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_ed25519_key.pub.\nThe security identifier is not allowed to be the owner of this object.\n      fixed permissions\n[*] C:\\Program Files\\OpenSSH-Win32\\ssh_host_rsa_key\n'NT AUTHORITY\\SYSTEM' now owns C:\\Program Files\\OpenSSH-Win32\\ssh_host_rsa_key.\n'FOO\\my.username' has no more access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_rsa_key.\n'NT SERVICE\\sshd' now has Read access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_rsa_key.\nThe security identifier is not allowed to be the owner of this object.\n      fixed permissions\n[*] C:\\Program Files\\OpenSSH-Win32\\ssh_host_rsa_key.pub\n'NT AUTHORITY\\SYSTEM' now owns C:\\Program Files\\OpenSSH-Win32\\ssh_host_rsa_key.pub.\n'FOO\\my.username' now has Read access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_rsa_key.pub.\nThe security identifier is not allowed to be the owner of this object.\n      fixed permissions\n[*] C:\\Users\\my.username.ssh\\authorized_keys\n'NT SERVICE\\sshd' now has Read access to C:\\Users\\my.username.ssh\\authorized_keys.\n  fixed permissions\n\nDone.\nAccount: NT SERVICE\\SSHD\nAccount SID: S-1-5-80-3847866527-469524349-687026318-516638107-1125189541\nExport current Local Security Policy\nThe task has completed successfully.\nSee log %windir%\\security\\logs\\scesrv.log for detail info.\nNO ACTIONS REQUIRED! Account already in \"Replace a process level token\"\nDone.\nAccount: NT SERVICE\\SSHD\nAccount SID: S-1-5-80-3847866527-469524349-687026318-516638107-1125189541\nExport current Local Security Policy\nThe task has completed successfully.\nSee log %windir%\\security\\logs\\scesrv.log for detail info.\nModify Setting \"Logon as a Service\"\nS-1-5-80-3847866527-469524349-687026318-516638107-1125189541,Services_Logon_Group,S-1-5-80-0,S-1-5-80-2277354432-2697\n620045-1656008878-1855416240-261295475,S-1-5-82-1036420768-1044797643-1061213386-2937092688-4282445334,S-1-5-82-271721\n585-897601226-2024613209-625570482-296978595,S-1-5-82-3006700770-424185619-1745488364-794895919-4004696415,S-1-5-82-36\n82073875-1643277370-2842298652-3532359455-2406259117,S-1-5-82-3876422241-1344743610-1729199087-774402673-2621913236,*S-\n1-5-82-4068219030-1673637257-3279585211-533386110-4122969689\nImport new settings to Local Security Policy\nCompleted 6 percent (0/15)      Process Privilege Rights area\nCompleted 13 percent (1/15)     Process Privilege Rights area\nCompleted 20 percent (2/15)     Process Privilege Rights area\nCompleted 26 percent (3/15)     Process Privilege Rights area\nCompleted 33 percent (4/15)     Process Privilege Rights area\nCompleted 40 percent (5/15)     Process Privilege Rights area\nCompleted 46 percent (6/15)     Process Privilege Rights area\nCompleted 53 percent (7/15)     Process Privilege Rights area\nCompleted 60 percent (8/15)     Process Privilege Rights area\nCompleted 66 percent (9/15)     Process Privilege Rights area\nCompleted 73 percent (10/15)    Process Privilege Rights area\nCompleted 100 percent (15/15)   Process Privilege Rights area\nThe task has completed successfully.\nSee log %windir%\\security\\logs\\scesrv.log for detail info.\nDone.\n``. I see the problem. Probably unrelated to the choco package itself.OpenSSHUtils.psm1` doesn't set permissions correctly. Here's what happens when run interactively, below. I will try to figure out how to get around that (pretty new to powershell). Also this isn't related to the choco package itself so will try to find an appropriate Issue for this problem, but want to close the loop here.\n```PS C:\\Program Files\\OpenSSH-Win32> .\\FixHostFilePermissions.ps1\n  [*] C:\\Program Files\\OpenSSH-Win32\\sshd_config\n      looks good\n[*] C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key\nWARNING: Current owner: 'FOO\\my.username'. 'NT AUTHORITY\\SYSTEM' should own C:\\Program\nFiles\\OpenSSH-Win32\\ssh_host_dsa_key.\nShall I set the file owner? [Yes] Y; [No] N (default is \"Y\"): Y\n'NT AUTHORITY\\SYSTEM' now owns C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key.\nWARNING: 'OPS\\carl.johnson' should not have access to 'C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key'.\nShall I remove this access? [Yes] Y; [No] N (default is \"Y\"): Y\n'FOO\\my.username' has no more access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key.\nWARNING: 'NT SERVICE\\sshd' needs Read access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key'.\nShall I make the above change? [Yes] Y; [No] N (default is \"Y\"): Y\n'NT SERVICE\\sshd' now has Read access to C:\\Program Files\\OpenSSH-Win32\\ssh_host_dsa_key.\nSet-Acl : The security identifier is not allowed to be the owner of this object.\nAt C:\\Program Files\\OpenSSH-Win32\\OpenSSHUtils.psm1:459 char:9\n+         Set-Acl -Path $FilePath -AclObject $acl\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : InvalidOperation: (C:\\Program File...sh_host_dsa_key:String) [Set-Acl], InvalidOperation\n   Exception\n    + FullyQualifiedErrorId : System.InvalidOperationException,Microsoft.PowerShell.Commands.SetAclCommand\n  fixed permissions\n\n```. ",
    "mbtts": "The location \"From this location\" needs to be your machine name (which may not be the default).. ",
    "stevenbrix": "I'm on a recent insiders build (18281) and am still seeing this issue. Doing the above workaround didn't work.. Thanks @bingbing8, I've been following the instructions I found online here. Are these no longer relevant?\nHere's the output from ssshd -ddd\nPS C:\\WINDOWS\\system32> sshd -ddd\ndebug2: load_server_config: filename PROGRAMDATA\\ssh/sshd_config\ndebug3: Failed to open file:C:\\ProgramData\\ssh/sshd_config error:2\nPROGRAMDATA\\ssh/sshd_config: No such file or directory\nPS C:\\WINDOWS\\system32>\n. Yeah, I didn't realize I had to do net start sshd. It works once I do that, however \n./ssh-keygen.exe -A doesn't seem to do anything. \n. ",
    "philSixZero": "Had the same issue (since I am using a german WIN7 Version as well), but I could fix it by modifying line \n$systemAccount = New-Object System.Security.Principal.NTAccount(\"NT AUTHORITY\", \"SYSTEM\")\nto\n$systemAccount = New-Object System.Security.Principal.NTAccount(\"NT-AUTORIT\u00c4T\", \"SYSTEM\")\nin OpenSSHUtils.psm1. So I guess, you only have to check the language version which is used, to fix this bug.. Using a direct ssh session from Ubuntu to Windows with the \"-s powershell\" argument isn't working with this workaround. But somehow the \"Enter-PSSession\"-command in PowerShell 6 is only running with the relative path.... ",
    "TomJampen": "Thanks for your fast reply. ssh-agent.exe is present and the permissions are the following:\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : NT-AUTORIT\u00c4T\\SYSTEM\nIsInherited       : True\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : VORDEFINIERT\\Administratoren\nIsInherited       : True\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : ReadAndExecute, Synchronize\nAccessControlType : Allow\nIdentityReference : VORDEFINIERT\\Benutzer\nIsInherited       : True\nInheritanceFlags  : None\nPropagationFlags  : None. I tried exactly as you told me (in an elevated cmd.exe) and got the followin error message:\nC:\\Program Files\\OpenSSH-Win64/sshd_config: Permission denied\nThat's weird, because I set the permissions using the FixHostFilePermissions.ps1.\nI've just run it again, now and the output is strange. It looks like a language issue:\nMostly the output is:\nCurrent owner: ''. 'NT AUTHORITY\\SYSTEM' should own 'C:\\Program Files\\OpenSSH-Win64\\sshd_config'.\nBut for a few files:\nCurrent owner: 'NT-AUTORIT\u00c4T\\SYSTEM'. 'NT AUTHORITY\\SYSTEM' should own 'C:\\Program Files\\OpenSSH-Win64\\ssh_host_dsa_key.pub'.\n. ",
    "crose-88": "So in an interesting development, if I enable debugging for the sftp-server, I can't reproduce the issue and I tried 10-15 times. As soon as I turn it off I could reproduce it again. Here is the debug output from the client running sftp.exe when the issue happens:\nC:\\Users\\chris.TSNET\\Documents\\OpenSSH-Win32>.\\sftp.exe -vvv ieuser@172.16.10.5\ndebug3: pipe - r-h:340,io:00BF2450,fd:3  w-h:336,io:00C19CF8,fd:4\ndebug3: pipe - r-h:348,io:00C32D80,fd:5  w-h:344,io:00C32E00,fd:6\ndebug3: spawning \"C:\\Users\\chris.TSNET\\Documents\\OpenSSH-Win32\\ssh.exe\" \"-oForwardX11 no\" \"-oForwardAgent no\" \"-oPermitLocalCommand no\" \"-oClearAllForwardings yes\" \"-v\" \"-v\" \"-v\" \"-l\" \"ieuser\" \"-oProtocol 2\" \"-s\" \"--\" \"172.16.10.5\" \"sftp\"\ndebug3: Register child 00000164 pid 6008, 0 zombies of 0\ndebug3: close - io:00C32D80, type:2, fd:5, table_index:5\ndebug3: close - io:00C19CF8, type:2, fd:4, table_index:4\nOpenSSH_7.5p1, OpenSSL 1.0.2d 9 Jul 2015\ndebug2: resolving \"172.16.10.5\" port 22\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to 172.16.10.5 [172.16.10.5] port 22.\ndebug3: socket:560, socktype:1, io:00111518, fd:3\ndebug1: Connection established.\ndebug3: GetFileAttributesExW with last error 2\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_rsa error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_rsa type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_rsa-cert error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_rsa-cert type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_dsa error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_dsa type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_dsa-cert error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_dsa-cert type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_ecdsa error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_ecdsa type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_ecdsa-cert error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_ecdsa-cert type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_ed25519 error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_ed25519 type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_ed25519-cert error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_ed25519-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_7.5\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.5\ndebug1: match: OpenSSH_7.5 pat OpenSSH* compat 0x04000000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to 172.16.10.5:22 as 'ieuser'\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug3: send packet: type 30\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug3: receive packet: type 31\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:NhHazRv+l+A0kb5AMXktB2pH4K5SYXg6Rhx+DKICJ4E\ndebug3: failed to open file:/dev/tty error:3\ndebug1: read_passphrase: can't open /dev/tty: No such process\nThe authenticity of host '172.16.10.5 (172.16.10.5)' can't be established.\nECDSA key fingerprint is SHA256:NhHazRv+l+A0kb5AMXktB2pH4K5SYXg6Rhx+DKICJ4E.\nAre you sure you want to continue connecting (yes/no)?\nWarning: Permanently added '172.16.10.5' (ECDSA) to the list of known hosts.\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug3: socket:0, socktype:1, io:00178930, fd:4\ndebug3: unable to connect to pipe ssh-agent, error: 2\ndebug3: close - io:00178930, type:2, fd:4, table_index:4\ndebug1: pubkey_prepare: ssh_get_authentication_socket: No such file or directory\ndebug2: key: C:\\Users\\chris.TSNET/.ssh/id_rsa (00000000)\ndebug2: key: C:\\Users\\chris.TSNET/.ssh/id_dsa (00000000)\ndebug2: key: C:\\Users\\chris.TSNET/.ssh/id_ecdsa (00000000)\ndebug2: key: C:\\Users\\chris.TSNET/.ssh/id_ed25519 (00000000)\ndebug3: send packet: type 5\ndebug3: receive packet: type 7\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=\ndebug3: receive packet: type 6\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: C:\\Users\\chris.TSNET/.ssh/id_rsa\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\chris.TSNET/.ssh/id_rsa: No such file or directory\ndebug1: Trying private key: C:\\Users\\chris.TSNET/.ssh/id_dsa\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\chris.TSNET/.ssh/id_dsa: No such file or directory\ndebug1: Trying private key: C:\\Users\\chris.TSNET/.ssh/id_ecdsa\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\chris.TSNET/.ssh/id_ecdsa: No such file or directory\ndebug1: Trying private key: C:\\Users\\chris.TSNET/.ssh/id_ed25519\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\chris.TSNET/.ssh/id_ed25519: No such file or directory\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive\ndebug3: remaining preferred: password\ndebug3: authmethod_is_enabled keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug2: userauth_kbdint\ndebug3: send packet: type 50\ndebug2: we sent a keyboard-interactive packet, wait for reply\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: userauth_kbdint: disable: no info_req_seen\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup password\ndebug3: remaining preferred:\ndebug3: authmethod_is_enabled password\ndebug1: Next authentication method: password\ndebug3: failed to open file:/dev/tty error:3\ndebug1: read_passphrase: can't open /dev/tty: No such process\nieuser@172.16.10.5's password:\ndebug3: send packet: type 50\ndebug2: we sent a password packet, wait for reply\ndebug3: receive packet: type 52\ndebug1: Authentication succeeded (password).\nAuthenticated to 172.16.10.5 ([172.16.10.5]:22).\ndebug2: fd 4 setting O_NONBLOCK\ndebug2: fd 5 setting O_NONBLOCK\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug3: send packet: type 90\ndebug1: Requesting no-more-sessions@openssh.com\ndebug3: send packet: type 80\ndebug1: Entering interactive session.\ndebug1: pledge: network\ndebug3: receive packet: type 80\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\ndebug3: receive packet: type 91\ndebug2: callback start\ndebug2: fd 3 setting TCP_NODELAY\ndebug2: client_session2_setup: id 0\ndebug1: Sending subsystem: sftp\ndebug2: channel 0: request subsystem confirm 1\ndebug3: send packet: type 98\ndebug2: callback done\ndebug2: channel 0: open confirm rwindow 0 rmax 32768\ndebug3: recv - from CB ERROR:10054, io:00111518\ndebug3: send packet: type 1\ndebug3: send - WSASend() ERROR:10054, io:00111518\nConnection reset by 172.16.10.5 port 22\nConnection closed\nC:\\Users\\chris.TSNET\\Documents\\OpenSSH-Win32>\nI've attached the logs from the ssh-agent, sshd and sftp-server. They include when I tested this with debug enabled but without the issue occuring incase anything of interest is there. I'll leave debug enabled in the server so if this does reproduce then we'll have the required logging running.\nsshlogs.zip\n. So I've retested with the fixed pid file and it makes no difference. I've also retested with debug running on the ssh server, but not on the SFTP-server to see what effect that had. I could then see the issue reproducing and in the sshd logs I could see additional debug output. I've attached the sshd log which does cover the issue reproducing to hopefully help with this.\nTo help with completeness, I'm not running the ssh server on a machine in a domain. \nI've confirmed both the agent and server are running, to rule that out from causing this. \nsshlogs2.zip\n. I've reproduced this again with the sftp client bundled in with the server. The client logs when hitting this issue are:\nC:\\Users\\chris.TSNET\\Downloads\\OpenSSH-Win32\\OpenSSH-Win32>sftp.exe -vvv user@172.16.10.7\ndebug3: pipe - r-h:348,io:013AB1B0,fd:3  w-h:344,io:013AB230,fd:4\ndebug3: pipe - r-h:356,io:013C42B8,fd:5  w-h:352,io:013C4338,fd:6\ndebug3: spawning \"C:\\Users\\chris.TSNET\\Downloads\\OpenSSH-Win32\\OpenSSH-Win32\\ssh.exe\" \"-oForwardX11 no\" \"-oForwardAgent no\" \"-oPermitLocalCommand no\" \"-oClearAllForwardings yes\" \"-v\" \"-v\" \"-v\" \"-l\" \"user\" \"-oProtocol 2\" \"-s\" \"--\" \"172.16.10.7\" \"sftp\"\ndebug3: Register child 0000016C pid 8876, 0 zombies of 0\ndebug3: close - io:013C42B8, type:2, fd:5, table_index:5\ndebug3: close - io:013AB230, type:2, fd:4, table_index:4\nOpenSSH_7.5p1, OpenSSL 1.0.2d 9 Jul 2015\ndebug2: resolving \"172.16.10.7\" port 22\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to 172.16.10.7 [172.16.10.7] port 22.\ndebug3: socket:572, socktype:1, io:0013ED88, fd:3\ndebug1: Connection established.\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_rsa error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_rsa type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_rsa-cert error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_rsa-cert type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_dsa error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_dsa type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_dsa-cert error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_dsa-cert type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_ecdsa error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_ecdsa type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_ecdsa-cert error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_ecdsa-cert type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_ed25519 error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_ed25519 type -1\ndebug3: failed to open file:C:\\Users\\chris.TSNET/.ssh/id_ed25519-cert error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\chris.TSNET/.ssh/id_ed25519-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_7.5\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.5\ndebug1: match: OpenSSH_7.5 pat OpenSSH* compat 0x04000000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to 172.16.10.7:22 as 'user'\ndebug3: hostkeys_foreach: reading file \"C:\\Users\\chris.TSNET/.ssh/known_hosts\"\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug3: send packet: type 30\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug3: receive packet: type 31\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:+mdkkv4VzYjUTeCooE1jHsMFjqNvlKfePdMxfKE3F+8\ndebug3: hostkeys_foreach: reading file \"C:\\Users\\chris.TSNET/.ssh/known_hosts\"\ndebug3: failed to open file:/dev/tty error:3\ndebug1: read_passphrase: can't open /dev/tty: No such process\nThe authenticity of host '172.16.10.7 (172.16.10.7)' can't be established.\nECDSA key fingerprint is SHA256:+mdkkv4VzYjUTeCooE1jHsMFjqNvlKfePdMxfKE3F+8.\nAre you sure you want to continue connecting (yes/no)?\nWarning: Permanently added '172.16.10.7' (ECDSA) to the list of known hosts.\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug3: socket:0, socktype:1, io:00143480, fd:4\ndebug3: unable to connect to pipe ssh-agent, error: 2\ndebug3: close - io:00143480, type:2, fd:4, table_index:4\ndebug1: pubkey_prepare: ssh_get_authentication_socket: No such file or directory\ndebug2: key: C:\\Users\\chris.TSNET/.ssh/id_rsa (00000000)\ndebug2: key: C:\\Users\\chris.TSNET/.ssh/id_dsa (00000000)\ndebug2: key: C:\\Users\\chris.TSNET/.ssh/id_ecdsa (00000000)\ndebug2: key: C:\\Users\\chris.TSNET/.ssh/id_ed25519 (00000000)\ndebug3: send packet: type 5\ndebug3: receive packet: type 7\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=\ndebug3: receive packet: type 6\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: C:\\Users\\chris.TSNET/.ssh/id_rsa\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\chris.TSNET/.ssh/id_rsa: No such file or directory\ndebug1: Trying private key: C:\\Users\\chris.TSNET/.ssh/id_dsa\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\chris.TSNET/.ssh/id_dsa: No such file or directory\ndebug1: Trying private key: C:\\Users\\chris.TSNET/.ssh/id_ecdsa\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\chris.TSNET/.ssh/id_ecdsa: No such file or directory\ndebug1: Trying private key: C:\\Users\\chris.TSNET/.ssh/id_ed25519\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\chris.TSNET/.ssh/id_ed25519: No such file or directory\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive\ndebug3: remaining preferred: password\ndebug3: authmethod_is_enabled keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug2: userauth_kbdint\ndebug3: send packet: type 50\ndebug2: we sent a keyboard-interactive packet, wait for reply\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: userauth_kbdint: disable: no info_req_seen\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup password\ndebug3: remaining preferred:\ndebug3: authmethod_is_enabled password\ndebug1: Next authentication method: password\ndebug3: failed to open file:/dev/tty error:3\ndebug1: read_passphrase: can't open /dev/tty: No such process\nuser@172.16.10.7's password:\ndebug3: send packet: type 50\ndebug2: we sent a password packet, wait for reply\ndebug3: receive packet: type 52\ndebug1: Authentication succeeded (password).\nAuthenticated to 172.16.10.7 ([172.16.10.7]:22).\ndebug2: fd 4 setting O_NONBLOCK\ndebug2: fd 5 setting O_NONBLOCK\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug3: send packet: type 90\ndebug1: Requesting no-more-sessions@openssh.com\ndebug3: send packet: type 80\ndebug1: Entering interactive session.\ndebug1: pledge: network\ndebug3: receive packet: type 80\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\ndebug3: receive packet: type 91\ndebug2: callback start\ndebug2: fd 3 setting TCP_NODELAY\ndebug2: client_session2_setup: id 0\ndebug1: Sending subsystem: sftp\ndebug2: channel 0: request subsystem confirm 1\ndebug3: send packet: type 98\ndebug2: callback done\ndebug2: channel 0: open confirm rwindow 0 rmax 32768\ndebug3: recv - from CB ERROR:10054, io:0013ED88\ndebug3: send packet: type 1\ndebug3: send - WSASend() ERROR:10054, io:0013ED88\nConnection reset by 172.16.10.7 port 22\nConnection closed\nC:\\Users\\chris.TSNET\\Downloads\\OpenSSH-Win32\\OpenSSH-Win32>\nI've attached the sshd.log The end of the ssh-agent log shows the following (I can't confirm timings, as the log times don't match the client time for some reason, perhaps they're for another day)...\n5260 12:06:03 488 agent_process_connection pipe:00000178\n5260 12:06:03 488 debug3: connection io 00CB04F8 #bytes:0 state:0\n5260 12:06:03 519 debug3: connection io 00CB04F8 #bytes:4 state:1\n5260 12:06:03 519 debug3: connection io 00CB04F8 #bytes:41 state:2\n5260 12:06:03 519 debug1: client type: sshd service\n5260 12:06:03 519 debug1: process agent request type 200\n5260 12:06:03 566 debug3: connection io 00CB04F8 #bytes:8 state:3\n5396 12:06:04 191 agent_process_connection pipe:00000178\n5396 12:06:04 191 debug3: connection io 000DF5C8 #bytes:0 state:0\n5396 12:06:04 238 debug3: connection io 000DF5C8 #bytes:4 state:1\n5396 12:06:04 238 debug3: connection io 000DF5C8 #bytes:41 state:2\n5396 12:06:04 238 debug1: client type: sshd service\n5396 12:06:04 238 debug1: process agent request type 200\n5396 12:06:04 253 debug3: connection io 000DF5C8 #bytes:8 state:3\n4188 12:06:09 581 agent_process_connection pipe:00000178\n4188 12:06:09 581 debug3: connection io 00CEF498 #bytes:0 state:0\n4188 12:06:09 613 debug3: connection io 00CEF498 #bytes:4 state:1\n4188 12:06:09 613 debug3: connection io 00CEF498 #bytes:41 state:2\n4188 12:06:09 613 debug1: client type: sshd service\n4188 12:06:09 613 debug1: process agent request type 200\n4188 12:06:09 659 debug3: connection io 00CEF498 #bytes:8 state:3\n3488 12:06:10 019 agent_process_connection pipe:00000178\n3488 12:06:10 019 debug3: connection io 008FFCA8 #bytes:0 state:0\n3488 12:06:10 066 debug3: connection io 008FFCA8 #bytes:4 state:1\n3488 12:06:10 066 debug3: connection io 008FFCA8 #bytes:41 state:2\n3488 12:06:10 066 debug1: client type: sshd service\n3488 12:06:10 066 debug1: process agent request type 200\n3488 12:06:10 081 debug3: connection io 008FFCA8 #bytes:8 state:3\n2764 12:06:10 503 agent_process_connection pipe:00000178\n2764 12:06:10 519 debug3: connection io 00F5F360 #bytes:0 state:0\n2764 12:06:10 550 debug3: connection io 00F5F360 #bytes:4 state:1\n2764 12:06:10 550 debug3: connection io 00F5F360 #bytes:41 state:2\n2764 12:06:10 550 debug1: client type: sshd service\n2764 12:06:10 550 debug1: process agent request type 200\n2764 12:06:10 566 debug3: connection io 00F5F360 #bytes:8 state:3\n1520 12:06:11 831 agent_process_connection pipe:00000178\n1520 12:06:11 831 debug3: connection io 0100FB20 #bytes:0 state:0\n1520 12:06:11 878 debug3: connection io 0100FB20 #bytes:4 state:1\n1520 12:06:11 878 debug3: connection io 0100FB20 #bytes:41 state:2\n1520 12:06:11 878 debug1: client type: sshd service\n1520 12:06:11 878 debug1: process agent request type 200\n1520 12:06:11 894 debug3: connection io 0100FB20 #bytes:8 state:3\n1768 12:06:12 503 agent_process_connection pipe:00000178\n1768 12:06:12 503 debug3: connection io 00A6F5A8 #bytes:0 state:0\n1768 12:06:12 550 debug3: connection io 00A6F5A8 #bytes:4 state:1\n1768 12:06:12 550 debug3: connection io 00A6F5A8 #bytes:41 state:2\n1768 12:06:12 550 debug1: client type: sshd service\n1768 12:06:12 550 debug1: process agent request type 200\n1768 12:06:12 566 debug3: connection io 00A6F5A8 #bytes:8 state:3\n5260 12:06:13 409 debug1: iocp error: 109 on 00CB04F8\n5260 12:06:13 409 debug1: connection 00CB04F8 clean up\n1520 12:06:13 409 debug1: iocp error: 109 on 0100FB20\n1520 12:06:13 409 debug1: connection 0100FB20 clean up\n4188 12:06:13 425 debug1: iocp error: 109 on 00CEF498\n4188 12:06:13 425 debug1: connection 00CEF498 clean up\n5396 12:06:13 425 debug1: iocp error: 109 on 000DF5C8\n5396 12:06:13 425 debug1: connection 000DF5C8 clean up\n5260 12:06:13 441 debug1: iocp error: 6 on 00000000\n1520 12:06:13 441 debug1: iocp error: 6 on 00000000\n1768 12:06:13 441 debug1: iocp error: 109 on 00A6F5A8\n1768 12:06:13 441 debug1: connection 00A6F5A8 clean up\n4188 12:06:13 456 debug1: iocp error: 6 on 00000000\n5396 12:06:13 456 debug1: iocp error: 6 on 00000000\n3488 12:06:13 456 debug1: iocp error: 109 on 008FFCA8\n3488 12:06:13 456 debug1: connection 008FFCA8 clean up\n1768 12:06:13 456 debug1: iocp error: 6 on 00000000\n2764 12:06:13 472 debug1: iocp error: 109 on 00F5F360\n2764 12:06:13 472 debug1: connection 00F5F360 clean up\n3488 12:06:13 488 debug1: iocp error: 6 on 00000000\n2764 12:06:13 488 debug1: iocp error: 6 on 00000000\n5660 12:06:15 425 agent_process_connection pipe:00000178\n5660 12:06:15 425 debug3: connection io 0139F260 #bytes:0 state:0\n5660 12:06:15 456 debug3: connection io 0139F260 #bytes:4 state:1\n5660 12:06:15 456 debug3: connection io 0139F260 #bytes:41 state:2\n5660 12:06:15 456 debug1: client type: sshd service\n5660 12:06:15 456 debug1: process agent request type 200\n5660 12:06:15 472 debug3: connection io 0139F260 #bytes:8 state:3\n4132 12:06:16 097 agent_process_connection pipe:00000178\n4132 12:06:16 097 debug3: connection io 001CF5D8 #bytes:0 state:0\n4132 12:06:16 144 debug3: connection io 001CF5D8 #bytes:4 state:1\n4132 12:06:16 144 debug3: connection io 001CF5D8 #bytes:41 state:2\n4132 12:06:16 144 debug1: client type: sshd service\n4132 12:06:16 144 debug1: process agent request type 200\n4132 12:06:16 159 debug3: connection io 001CF5D8 #bytes:8 state:3\n4696 12:06:21 472 agent_process_connection pipe:00000178\n4696 12:06:21 472 debug3: connection io 00B0F580 #bytes:0 state:0\n4696 12:06:21 519 debug3: connection io 00B0F580 #bytes:4 state:1\n4696 12:06:21 519 debug3: connection io 00B0F580 #bytes:41 state:2\n4696 12:06:21 519 debug1: client type: sshd service\n4696 12:06:21 519 debug1: process agent request type 200\n4696 12:06:21 566 debug3: connection io 00B0F580 #bytes:8 state:3\n4844 12:06:21 909 agent_process_connection pipe:00000178\n4844 12:06:21 909 debug3: connection io 00E5F688 #bytes:0 state:0\n4844 12:06:21 956 debug3: connection io 00E5F688 #bytes:4 state:1\n4844 12:06:21 956 debug3: connection io 00E5F688 #bytes:41 state:2\n4844 12:06:21 956 debug1: client type: sshd service\n4844 12:06:21 956 debug1: process agent request type 200\n4844 12:06:21 972 debug3: connection io 00E5F688 #bytes:8 state:3\n4844 12:06:22 534 debug1: iocp error: 109 on 00E5F688\n4844 12:06:22 534 debug1: connection 00E5F688 clean up\n4844 12:06:22 550 debug1: iocp error: 6 on 00000000\n4108 12:06:22 753 agent_process_connection pipe:00000178\n4108 12:06:22 753 debug3: connection io 001C0398 #bytes:0 state:0\n4108 12:06:22 800 debug3: connection io 001C0398 #bytes:4 state:1\n4108 12:06:22 800 debug3: connection io 001C0398 #bytes:41 state:2\n4108 12:06:22 800 debug1: client type: sshd service\n4108 12:06:22 800 debug1: process agent request type 200\n4108 12:06:22 816 debug3: connection io 001C0398 #bytes:8 state:3\n3416 12:06:23 847 agent_process_connection pipe:00000178\n3416 12:06:23 847 debug3: connection io 00FDF558 #bytes:0 state:0\n3416 12:06:23 894 debug3: connection io 00FDF558 #bytes:4 state:1\n3416 12:06:23 894 debug3: connection io 00FDF558 #bytes:41 state:2\n3416 12:06:23 894 debug1: client type: sshd service\n3416 12:06:23 894 debug1: process agent request type 200\n3416 12:06:23 909 debug3: connection io 00FDF558 #bytes:8 state:3\n3052 12:06:24 519 agent_process_connection pipe:00000178\n3052 12:06:24 519 debug3: connection io 010003B0 #bytes:0 state:0\n3052 12:06:24 581 debug3: connection io 010003B0 #bytes:4 state:1\n3052 12:06:24 581 debug3: connection io 010003B0 #bytes:41 state:2\n3052 12:06:24 581 debug1: client type: sshd service\n3052 12:06:24 581 debug1: process agent request type 200\n3052 12:06:24 597 debug3: connection io 010003B0 #bytes:8 state:3\n3052 12:06:25 441 debug1: iocp error: 109 on 010003B0\n3052 12:06:25 441 debug1: connection 010003B0 clean up\n4132 12:06:25 456 debug1: iocp error: 109 on 001CF5D8\n4132 12:06:25 456 debug1: connection 001CF5D8 clean up\n5660 12:06:25 456 debug1: iocp error: 109 on 0139F260\n5660 12:06:25 456 debug1: connection 0139F260 clean up\n3052 12:06:25 472 debug1: iocp error: 6 on 00000000\n4108 12:06:25 472 debug1: iocp error: 109 on 001C0398\n4108 12:06:25 472 debug1: connection 001C0398 clean up\n3416 12:06:25 472 debug1: iocp error: 109 on 00FDF558\n3416 12:06:25 472 debug1: connection 00FDF558 clean up\n4132 12:06:25 488 debug1: iocp error: 6 on 00000000\n5660 12:06:25 503 debug1: iocp error: 6 on 00000000\n4108 12:06:25 503 debug1: iocp error: 6 on 00000000\n3416 12:06:25 519 debug1: iocp error: 6 on 00000000\n4696 12:06:25 800 debug1: iocp error: 109 on 00B0F580\n4696 12:06:25 800 debug1: connection 00B0F580 clean up\n4696 12:06:25 816 debug1: iocp error: 6 on 00000000\n3804 12:07:59 628 agent_process_connection pipe:00000178\n3804 12:07:59 628 debug3: connection io 00F9F968 #bytes:0 state:0\n3804 12:07:59 675 debug3: connection io 00F9F968 #bytes:4 state:1\n3804 12:07:59 675 debug3: connection io 00F9F968 #bytes:41 state:2\n3804 12:07:59 675 debug1: client type: sshd service\n3804 12:07:59 675 debug1: process agent request type 200\n3804 12:07:59 722 debug3: connection io 00F9F968 #bytes:8 state:3\n3048 12:08:00 316 agent_process_connection pipe:00000178\n3048 12:08:00 316 debug3: connection io 0009F5D8 #bytes:0 state:0\n3048 12:08:00 363 debug3: connection io 0009F5D8 #bytes:4 state:1\n3048 12:08:00 363 debug3: connection io 0009F5D8 #bytes:41 state:2\n3048 12:08:00 363 debug1: client type: sshd service\n3048 12:08:00 363 debug1: process agent request type 200\n3048 12:08:00 378 debug3: connection io 0009F5D8 #bytes:8 state:3\n4408 12:08:05 675 agent_process_connection pipe:00000178\n4408 12:08:05 675 debug3: connection io 0002F610 #bytes:0 state:0\n4408 12:08:05 722 debug3: connection io 0002F610 #bytes:4 state:1\n4408 12:08:05 722 debug3: connection io 0002F610 #bytes:41 state:2\n4408 12:08:05 722 debug1: client type: sshd service\n4408 12:08:05 722 debug1: process agent request type 200\n4408 12:08:05 769 debug3: connection io 0002F610 #bytes:8 state:3\n3936 12:08:06 144 agent_process_connection pipe:00000178\n3936 12:08:06 144 debug3: connection io 0197F3E8 #bytes:0 state:0\n3936 12:08:06 175 debug3: connection io 0197F3E8 #bytes:4 state:1\n3936 12:08:06 175 debug3: connection io 0197F3E8 #bytes:41 state:2\n3936 12:08:06 175 debug1: client type: sshd service\n3936 12:08:06 175 debug1: process agent request type 200\n3936 12:08:06 191 debug3: connection io 0197F3E8 #bytes:8 state:3\n4836 12:08:06 581 agent_process_connection pipe:00000178\n4836 12:08:06 581 debug3: connection io 00540298 #bytes:0 state:0\n4836 12:08:06 644 debug3: connection io 00540298 #bytes:4 state:1\n4836 12:08:06 644 debug3: connection io 00540298 #bytes:41 state:2\n4836 12:08:06 644 debug1: client type: sshd service\n4836 12:08:06 644 debug1: process agent request type 200\n4836 12:08:06 659 debug3: connection io 00540298 #bytes:8 state:3\n2912 12:08:07 847 agent_process_connection pipe:00000178\n2912 12:08:07 847 debug3: connection io 009BF2B8 #bytes:0 state:0\n2912 12:08:07 894 debug3: connection io 009BF2B8 #bytes:4 state:1\n2912 12:08:07 894 debug3: connection io 009BF2B8 #bytes:41 state:2\n2912 12:08:07 894 debug1: client type: sshd service\n2912 12:08:07 894 debug1: process agent request type 200\n2912 12:08:07 909 debug3: connection io 009BF2B8 #bytes:8 state:3\n5956 12:08:08 503 agent_process_connection pipe:00000178\n5956 12:08:08 503 debug3: connection io 00EEF308 #bytes:0 state:0\n5956 12:08:08 534 debug3: connection io 00EEF308 #bytes:4 state:1\n5956 12:08:08 534 debug3: connection io 00EEF308 #bytes:41 state:2\n5956 12:08:08 534 debug1: client type: sshd service\n5956 12:08:08 534 debug1: process agent request type 200\n5956 12:08:08 550 debug3: connection io 00EEF308 #bytes:8 state:3\n4836 12:08:09 363 debug1: iocp error: 109 on 00540298\n4836 12:08:09 363 debug1: connection 00540298 clean up\n3804 12:08:09 378 debug1: iocp error: 109 on 00F9F968\n3804 12:08:09 378 debug1: connection 00F9F968 clean up\n4408 12:08:09 378 debug1: iocp error: 109 on 0002F610\n4408 12:08:09 378 debug1: connection 0002F610 clean up\n2912 12:08:09 378 debug1: iocp error: 109 on 009BF2B8\n2912 12:08:09 378 debug1: connection 009BF2B8 clean up\n4836 12:08:09 394 debug1: iocp error: 6 on 00000000\n3804 12:08:09 394 debug1: iocp error: 6 on 00000000\n4408 12:08:09 394 debug1: iocp error: 6 on 00000000\n2912 12:08:09 409 debug1: iocp error: 6 on 00000000\n5956 12:08:09 409 debug1: iocp error: 109 on 00EEF308\n5956 12:08:09 409 debug1: connection 00EEF308 clean up\n3048 12:08:09 409 debug1: iocp error: 109 on 0009F5D8\n3048 12:08:09 409 debug1: connection 0009F5D8 clean up\n3936 12:08:09 409 debug1: iocp error: 109 on 0197F3E8\n3936 12:08:09 409 debug1: connection 0197F3E8 clean up\n5956 12:08:09 409 debug1: iocp error: 6 on 00000000\n3048 12:08:09 425 debug1: iocp error: 6 on 00000000\n3936 12:08:09 441 debug1: iocp error: 6 on 00000000\n3684 12:08:11 644 agent_process_connection pipe:00000178\n3684 12:08:11 644 debug3: connection io 0160FA60 #bytes:0 state:0\n3684 12:08:11 706 debug3: connection io 0160FA60 #bytes:4 state:1\n3684 12:08:11 706 debug3: connection io 0160FA60 #bytes:41 state:2\n3684 12:08:11 706 debug1: client type: sshd service\n3684 12:08:11 706 debug1: process agent request type 200\n3684 12:08:11 722 debug3: connection io 0160FA60 #bytes:8 state:3\n3552 12:08:12 331 agent_process_connection pipe:00000178\n3552 12:08:12 331 debug3: connection io 000BF558 #bytes:0 state:0\n3552 12:08:12 378 debug3: connection io 000BF558 #bytes:4 state:1\n3552 12:08:12 378 debug3: connection io 000BF558 #bytes:41 state:2\n3552 12:08:12 378 debug1: client type: sshd service\n3552 12:08:12 378 debug1: process agent request type 200\n3552 12:08:12 394 debug3: connection io 000BF558 #bytes:8 state:3\n4708 12:08:17 706 agent_process_connection pipe:00000178\n4708 12:08:17 706 debug3: connection io 0080F5D8 #bytes:0 state:0\n4708 12:08:17 753 debug3: connection io 0080F5D8 #bytes:4 state:1\n4708 12:08:17 753 debug3: connection io 0080F5D8 #bytes:41 state:2\n4708 12:08:17 753 debug1: client type: sshd service\n4708 12:08:17 753 debug1: process agent request type 200\n4708 12:08:17 800 debug3: connection io 0080F5D8 #bytes:8 state:3\n1952 12:08:18 159 agent_process_connection pipe:00000178\n1952 12:08:18 159 debug3: connection io 000CF610 #bytes:0 state:0\n1952 12:08:18 206 debug3: connection io 000CF610 #bytes:4 state:1\n1952 12:08:18 206 debug3: connection io 000CF610 #bytes:41 state:2\n1952 12:08:18 206 debug1: client type: sshd service\n1952 12:08:18 206 debug1: process agent request type 200\n1952 12:08:18 223 debug3: connection io 000CF610 #bytes:8 state:3\n1952 12:08:18 722 debug1: iocp error: 109 on 000CF610\n1952 12:08:18 722 debug1: connection 000CF610 clean up\n1952 12:08:18 722 debug1: iocp error: 6 on 00000000\n3676 12:08:19 034 agent_process_connection pipe:00000178\n3676 12:08:19 034 debug3: connection io 0068F580 #bytes:0 state:0\n3676 12:08:19 081 debug3: connection io 0068F580 #bytes:4 state:1\n3676 12:08:19 081 debug3: connection io 0068F580 #bytes:41 state:2\n3676 12:08:19 081 debug1: client type: sshd service\n3676 12:08:19 081 debug1: process agent request type 200\n3676 12:08:19 097 debug3: connection io 0068F580 #bytes:8 state:3\n1204 12:08:20 269 agent_process_connection pipe:00000178\n1204 12:08:20 269 debug3: connection io 005AF5D8 #bytes:0 state:0\n1204 12:08:20 331 debug3: connection io 005AF5D8 #bytes:4 state:1\n1204 12:08:20 331 debug3: connection io 005AF5D8 #bytes:41 state:2\n1204 12:08:20 331 debug1: client type: sshd service\n1204 12:08:20 331 debug1: process agent request type 200\n1204 12:08:20 347 debug3: connection io 005AF5D8 #bytes:8 state:3\n4272 12:08:20 956 agent_process_connection pipe:00000178\n4272 12:08:20 956 debug3: connection io 0002F5D8 #bytes:0 state:0\n4272 12:08:21 003 debug3: connection io 0002F5D8 #bytes:4 state:1\n4272 12:08:21 003 debug3: connection io 0002F5D8 #bytes:41 state:2\n4272 12:08:21 003 debug1: client type: sshd service\n4272 12:08:21 003 debug1: process agent request type 200\n4272 12:08:21 034 debug3: connection io 0002F5D8 #bytes:8 state:3\n3684 12:08:21 878 debug1: iocp error: 109 on 0160FA60\n3684 12:08:21 878 debug1: connection 0160FA60 clean up\n4708 12:08:21 878 debug1: iocp error: 109 on 0080F5D8\n4708 12:08:21 878 debug1: connection 0080F5D8 clean up\n1204 12:08:21 894 debug1: iocp error: 109 on 005AF5D8\n1204 12:08:21 894 debug1: connection 005AF5D8 clean up\n3676 12:08:21 894 debug1: iocp error: 109 on 0068F580\n3676 12:08:21 894 debug1: connection 0068F580 clean up\n3684 12:08:21 909 debug1: iocp error: 6 on 00000000\n4272 12:08:21 909 debug1: iocp error: 109 on 0002F5D8\n4272 12:08:21 909 debug1: connection 0002F5D8 clean up\n3552 12:08:21 925 debug1: iocp error: 109 on 000BF558\n3552 12:08:21 925 debug1: connection 000BF558 clean up\n1204 12:08:21 925 debug1: iocp error: 6 on 00000000\n3676 12:08:21 925 debug1: iocp error: 6 on 00000000\n4708 12:08:21 925 debug1: iocp error: 6 on 00000000\n4272 12:08:21 941 debug1: iocp error: 6 on 00000000\n3552 12:08:21 941 debug1: iocp error: 6 on 00000000\nI'm going to re-test this now, with Debug enabled on the SFTP server but not on the SSH server to see if I can reproduce the issue like that.\nsshd.zip\n. Ok, everything works fine, I can't reproduce with the SFTP debug enabled.\ndebug2: fd 3 setting TCP_NODELAY\ndebug2: client_session2_setup: id 0\ndebug1: Sending subsystem: sftp\ndebug2: channel 0: request subsystem confirm 1\ndebug3: send packet: type 98\ndebug2: callback done\ndebug2: channel 0: open confirm rwindow 0 rmax 32768\ndebug2: channel 0: rcvd adjust 2097152\ndebug3: receive packet: type 99\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: subsystem request accepted on channel 0\ndebug2: Remote version: 3\ndebug2: Server supports extension \"posix-rename@openssh.com\" revision 1\ndebug2: Server supports extension \"statvfs@openssh.com\" revision 2\ndebug2: Server supports extension \"fstatvfs@openssh.com\" revision 2\ndebug2: Server supports extension \"hardlink@openssh.com\" revision 1\ndebug2: Server supports extension \"fsync@openssh.com\" revision 1\nConnected to 172.16.10.7.\ndebug3: Sent message fd 6 T:16 I:1\ndebug3: SSH_FXP_REALPATH . -> /C:/Users/User size 0\nsftp>\nI think I've spotted another bug, when the SFTP client is connected, if I exit, then the I see OpenSSH for Windows has stopped responding, and then program crashes. \nsftp> exit\ndebug3: close - io:01455A88, type:2, fd:3, table_index:3\ndebug3: close - io:01455B08, type:2, fd:6, table_index:6\ndebug2: channel 0: read<=0 rfd 4 len 0\ndebug2: channel 0: read failed\ndebug2: channel 0: close_read\ndebug3: close - io:001A32D0, type:2, fd:4, table_index:4\ndebug2: channel 0: input open -> drain\ndebug2: channel 0: ibuf empty\ndebug2: channel 0: send eof\ndebug3: send packet: type 96\ndebug2: channel 0: input drain -> closed\ndebug3: receive packet: type 96\ndebug2: channel 0: rcvd eof\ndebug2: channel 0: output open -> drain\ndebug2: channel 0: obuf empty\ndebug2: channel 0: close_write\ndebug3: close - io:00205DC0, type:2, fd:5, table_index:5\ndebug2: channel 0: output drain -> closed\ndebug3: receive packet: type 98\ndebug1: client_input_channel_req: channel 0 rtype exit-status reply 0\ndebug3: receive packet: type 97\ndebug2: channel 0: rcvd close\ndebug3: channel 0: will not send data after close\ndebug2: channel 0: almost dead\ndebug2: channel 0: gc: notify user\ndebug2: channel 0: gc: user detached\ndebug2: channel 0: send close\ndebug3: send packet: type 97\ndebug2: channel 0: is dead\ndebug2: channel 0: garbage collecting\ndebug1: channel 0: free: client-session, nchannels 1\ndebug3: channel 0: status: The following connections are open:\n  #0 client-session (t4 r0 i3/0 o3/0 fd -1/-1 cc -1)\ndebug3: close - io:002063F8, type:3, fd:6, table_index:6\ndebug3: send packet: type 1\ndebug3: fd 0 is not O_NONBLOCK\ndebug3: fd 1 is not O_NONBLOCK\nTransferred: sent 1844, received 2864 bytes, in -0.3 seconds\ndebug1: Exit status 0\ndebug3: close - io:001D6D58, type:1, fd:3, table_index:3\ndebug3: Unregister child at index 0, 0 zombies of 1 << This is what is executed when the program crashes. \nC:\\Users\\chris.TSNET\\Downloads\\OpenSSH-Win32\\OpenSSH-Win32>\n. ",
    "diogob": "Turning on the debug fixed the problem for me as well. ",
    "HSSupport": "can confirm this issue with 0.16 too\nthis issue REMAINS even if you remove open-ssh and reinstall version 0.15 (no idea if remains post-reboot though, cant reboot yet). Hi\ni have tested this on version 0.17, on windows server 2008 (SBS 2011) with powershell v2.\nworks on server 2012 and 2016, which have higher native versions of powershell - could this be the cause?\nif you create a powershell script and call it via 'ssh \"domain\\user\"@\"host\" \"powershell -file FILE\"' it will correctly process the file but then hang waiting for an enter.\nonce enter is pressed it finally correctly exits\nthis seems to occur on any script, my test is \"write-host hello\" and it hangs. even with \"exit\" at the end of the file. Version 7.6.1.0p1\nThis issue seems to have come back when openssh is installed and running on a Server 2008 R2 (SBS 2011) machine. the Stop-Process workaround works fine, pressing enter works fine, but otherwise it doesnt actually finish.\ni do wonder if this is because its running powershell v2.0. Server 2012 and Server 2016 dont have this issue.\nthanks. Hi\ni created a user (DOMAIN\\SSHD) and edited the chocolately package to change all instances of \"NT Service\\SSHD\" to the new username.\nthe install was successful.\nwhen i run SSHD.exe -d from an admin powershell, i can connect, however when i run the service i get \"write failed - broken pipe\"\nnow, i know that this is \"not supported\" on Server 2008 SP2, however any nudges in the right direction would be appreciated :)\nEDIT: Debug Log shows:\n\n2384 10:28:14:332 debug1: server_input_channel_req: channel 0 request shell reply 1\n2384 10:28:14:332 debug1: session_by_channel: session 0 channel 0\n2384 10:28:14:332 debug1: session_input_channel_req: session 0 req shell\n2384 10:28:14:332 Starting session: shell on console for XXX@YYY.ZZZ from 192.168.WWW.YYY port 41014 id 0\n2384 10:28:14:332 debug1: Executing command: C:\\Program Files\\OpenSSH-Win64\\ssh-shellhost.exe \n2384 10:28:14:332 fatal: ERROR. Cannot create process (1349).\\n\n2384 10:28:14:332 debug1: do_cleanup\n2384 10:28:14:332 debug1: session_pty_cleanup: session 0 release console\n\nnote the single error, this does not work (broken pipe)\nrunning sshd.exe -d i receive:\n\ndebug1: Executing command: C:\\Program Files\\OpenSSH-Win64\\ssh-shellhost.exe\ndebug1: Recieved SIGCHLD\n\nwhich works.\nthanks. @fpqc \nthe user is a domain admin, i shall shortly try running as localsystem as recommended by @manojampalam . @fpqc \nsorry, i think i caused some confusion:\nI installed this package. since its server 2008 (standard, not R2) it wont install as the NT Authority\\SSHD user. So ill be trying the localsystem next, and also localservice to see which works.\nthe domain\\sshd user was my workaround for a lack of service managed accounts :) thanks. ok so i have an update.\nThe service flat-out would not start using NT Authority\\LocalService account\nit does work if you replace \"NT Authority\\SSHD\" with \"NT Authority\\SYSTEM\" and run the chocolatey installer, however something goes wrong at authentication: all forms fail. (note, using \\localsystem produces the exact same error)\ni think this may have gone from \"easily fixed\" to \"probably not going to work ever\".... logs below\nif you can have a quick look and let me know what you think / if its easily possible to get this to run/work on Server 2008 SP2, i would be grateful, but i also accept this may not be possible (at least i/we/you tried!)\nthanks\nLogs note: i have the correct ssh key in place, and used the correct password 3x. this is a member server of a domain\n\n2884 10:42:27:574 debug1: Forked child 2844.\n2844 10:42:42:606 debug1: sshd version OpenSSH_7.5, LibreSSL 2.5.3\n2844 10:42:42:653 debug1: private host key #0: ssh-rsa SHA256:5Fyhj/0z+V8Nito1hgyA\n2844 10:42:42:653 debug1: private host key #1: ssh-dss SHA256:XcuzyzeZpycEpgA\n2844 10:42:42:653 debug1: private host key #2: ecdsa-sha2-nistp256 SHA256:1bedKRzj3byW+P2b4+ZJb0HN4\n2844 10:42:42:653 debug1: private host key #3: ssh-ed25519 SHA256:58fxaMcndYc/44mPIGvU\n2844 10:42:42:653 debug1: child socket: 312\n2844 10:42:42:653 debug1: child startup_pipe: 316\n2844 10:42:42:653 Connection from AAA.BBB.CCC.25 port 47656 on AAA.BBB.CCC.80 port 2358\n2844 10:42:42:668 debug1: Client protocol version 2.0; client software version OpenSSH_6.6.1\n2844 10:42:42:668 debug1: match: OpenSSH_6.6.1 pat OpenSSH_6.6.1* compat 0x04000000\n2844 10:42:42:668 debug1: Local version string SSH-2.0-OpenSSH_7.5\n2844 10:42:42:668 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n2844 10:42:42:668 debug1: SSH2_MSG_KEXINIT sent\n2844 10:42:42:668 debug1: SSH2_MSG_KEXINIT received\n2844 10:42:42:668 debug1: kex: algorithm: curve25519-sha256@libssh.org\n2844 10:42:42:668 debug1: kex: host key algorithm: ecdsa-sha2-nistp256\n2844 10:42:42:668 debug1: kex: client->server cipher: aes128-ctr MAC: hmac-sha1-etm@openssh.com compression: none\n2844 10:42:42:668 debug1: kex: server->client cipher: aes128-ctr MAC: hmac-sha1-etm@openssh.com compression: none\n2844 10:42:42:668 debug1: expecting SSH2_MSG_KEX_ECDH_INIT\n2844 10:42:42:684 debug1: rekey after 4294967296 blocks\n2844 10:42:42:684 debug1: SSH2_MSG_NEWKEYS sent\n2844 10:42:42:684 debug1: expecting SSH2_MSG_NEWKEYS\n2844 10:42:42:700 debug1: SSH2_MSG_NEWKEYS received\n2844 10:42:42:700 debug1: rekey after 4294967296 blocks\n2844 10:42:42:700 debug1: KEX done\n2844 10:42:42:903 debug1: userauth-request for user XX.local\\YY service ssh-connection method none\n2844 10:42:42:903 debug1: attempt 0 failures 0\n2844 10:42:42:903 reprocess config line 45: Deprecated option RSAAuthentication\n2844 10:42:47:950 Failed none for XX.local\\YY from AAA.BBB.CCC.25 port 47656 ssh2\n2844 10:42:47:950 debug1: userauth-request for user XX.local\\YY service ssh-connection method publickey\n2844 10:42:47:950 debug1: attempt 1 failures 0\n2844 10:42:57:701 debug1: auth agent did not authorize client XX.local\\YY\n2844 10:42:57:701 Failed publickey for XX.local\\YY from AAA.BBB.CCC.25 port 47656 ssh2: RSA SHA256:cWRbogIsue8Z37E\n2844 10:42:57:701 debug1: userauth-request for user XX.local\\YY service ssh-connection method keyboard-interactive\n2844 10:42:57:701 debug1: attempt 2 failures 1\n2844 10:42:57:701 debug1: keyboard-interactive devs \n2844 10:42:57:701 debug1: auth2_challenge: user=XX.local\\YY devs=\n2844 10:42:57:701 debug1: kbdint_alloc: devices ''\n2844 10:42:57:701 Failed keyboard-interactive for XX.local\\YY from AAA.BBB.CCC.25 port 47656 ssh2\n2844 10:43:37:970 debug1: userauth-request for user XX.local\\YY service ssh-connection method password\n2844 10:43:37:970 debug1: attempt 3 failures 2\n2844 10:43:37:970 debug1: auth agent did not authorize client XX.local\\YY\n2844 10:43:37:970 Failed password for XX.local\\YY from AAA.BBB.CCC.25 port 47656 ssh2\n2844 10:43:40:611 debug1: userauth-request for user XX.local\\YY service ssh-connection method password\n2844 10:43:40:611 debug1: attempt 4 failures 3\n2844 10:43:40:611 debug1: auth agent did not authorize client XX.local\\YY\n2844 10:43:40:611 Failed password for XX.local\\YY from AAA.BBB.CCC.25 port 47656 ssh2\n2844 10:43:42:736 debug1: userauth-request for user XX.local\\YY service ssh-connection method password\n2844 10:43:42:736 debug1: attempt 5 failures 4\n2844 10:43:42:736 debug1: auth agent did not authorize client XX.local\\YY\n2844 10:43:42:736 Failed password for XX.local\\YY from AAA.BBB.CCC.25 port 47656 ssh2\n2844 10:43:42:736 Connection closed by authenticating user XX.local\\YY AAA.BBB.CCC.25 port 47656\n2844 10:43:42:736 debug1: do_cleanup. i could just create a domain user \"sshd\" but i wouldn't be certain is was as secure as, say, getting the correct instructions on how to generate the account correctly.. I have this issue on 3 2012 r2 essentials servers, but I got this from net user add sshd\n\nc:\\Program Files\\OpenSSH-Win64>net user sshd /add\nThe password does not meet the password policy requirements. Check the minimum password length, password complexity and\npassword history requirements.\nWhich is... OK but I thought Service users had no password? . Hi,\nI did, here is the result\nc:\\Program Files\\OpenSSH-Win64>Net start sshd\nThe sshd service is starting.\nThe sshd service could not be started.\nA system error has occurred.\nSystem error 1067 has occurred.\nThe process terminated unexpectedly.\nCan a service user account have a password? What if the password expires?\nThanks\n. Hi\nThe result of that is in the first post :)\nThanks. No worries, I'm grateful for the help!\nc:\\Program Files\\OpenSSH-Win64>sshd.exe -dddd\ndebug2: load_server_config: filename PROGRAMDATA\\ssh/sshd_config\ndebug2: load_server_config: done config len = 175\ndebug2: parse_server_config: config PROGRAMDATA\\ssh/sshd_config len 175\ndebug3: PROGRAMDATA\\ssh/sshd_config:9 setting Port 2358\ndebug3: PROGRAMDATA\\ssh/sshd_config:24 setting LogLevel QUIET\ndebug3: PROGRAMDATA\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: PROGRAMDATA\\ssh/sshd_config:76 setting Subsystem sftp      sftp-server.exe\ndebug1: sshd version OpenSSH_for_Windows_7.7, LibreSSL 2.6.4\ndebug3: NetUserGetInfo() failed with error: 2221 for user: sshd and domain: (null)\ndebug3: NetUserGetInfo() with domainController: \\\\Xxxserver.Domain.local failed with error: 2221\nPrivilege separation user sshd does not exist\nSame again, or was there a log I was looking for?\nI don't mind if the answer is either a) make a sshd user with password or b) Disable the default essentials gpo password policy, rerun so user is created, and turn it back on. So long as the result is secure and not going to cause an issue when the password expires.\nThanks. Hi,\nAm I doing something wrong?\nc:\\Program Files\\OpenSSH-Win64>sshd.exe -dddd\ndebug2: load_server_config: filename PROGRAMDATA\\ssh/sshd_config\ndebug2: load_server_config: done config len = 175\ndebug2: parse_server_config: config PROGRAMDATA\\ssh/sshd_config len 175\ndebug3: PROGRAMDATA\\ssh/sshd_config:9 setting Port 2358\ndebug3: PROGRAMDATA\\ssh/sshd_config:24 setting LogLevel QUIET\ndebug3: PROGRAMDATA\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: PROGRAMDATA\\ssh/sshd_config:76 setting Subsystem sftp      sftp-server.exe\ndebug1: sshd version OpenSSH_for_Windows_7.7, LibreSSL 2.6.4\ndebug3: NetUserGetInfo() failed with error: 2221 for user: sshd and domain: (null)\ndebug3: NetUserGetInfo() with domainController: \\\\Xxxserver.Domain.local failed with error: 2221\nPrivilege separation user sshd does not exist\nc:\\Program Files\\OpenSSH-Win64>whoami\nnt authority\\system. And a check in ADUC shows no such user as sshd :) . Hi\nYep I deleted sshd.exe, copied your one over (got asked for permission to move it into the folder) and ran sshd.exe -ddd\nSame answer again :( sorry. Adding the user with password allowed the service to start successfully! Which is great, thank you very much!\nIs it secure to create the user in this fashion with a password, for running the sshd service? . Hi,\nI have changed the password to something very random, and have successfully uninstalled and installed ssh package and remote connected to it.\nI suspect the random password generator you are using doesn't match up to the standard password policies for server 2012 essentials r2, perhaps complexity requirements?\nThank you for helping me resolve this issue. :) . Hi\nno just the windows 2012 R2 essentials defaults (once connected to office 365) which i think are 8 chars, 3 char types.\nits odd, because im sure i have a server 2016 and a server 2012 r2 with the same GPO's enabled, but this installs just fine. But on every single one of the Server 2012 R2 Essentials servers, i have had to do net user /add sshd COMPLEXPASS.\ni mean its only 3 servers but thats 100%.\nunless joining the essentials server to office365 (using the essentials gui) causes this effect, i dont know what the difference could be.\nthanks. hi @NoMoreFood, yes i have a system i can test this on if you pass me a modified installer :). ",
    "sr-verde": "Try something like this (replacing dir by your command):\n$ ssh win7@10.10.10.10 'powershell.exe  \"& {dir; Stop-Process -Force -Processname PowerShell}\"'\nIt\u2019s not very \u2026 pretty, but should work.. ",
    "dantraMSFT": "I hit the same issue on Server 2016 but found that neither mklink nor New-Item would create a usable symlink (The application to execute does not exist: 'C:\\users\\Public\\pwsh.dll')\nI ended up creating a directory link c:\\powershell to resolve it.. ",
    "JustinGrote": "For those who came here from the MSFT documentation like I did, here's a script to automate the process on Windows.\nhttps://gist.github.com/JustinGrote/72d7baaa6cc99691b7c4cb3caad54891. Really looking forward to AuthorizedKeysCommand, with that it'd be trivial to tie it to a powershell script to fetch it from a user AD custom attribute and allow for centralized authorized keys, since Kerberos is currently not supported (though NoMoreFood's implemention I hope makes it into the codebase). Thanks, this is one approach but kind of heavyweight especially for pre-provisioning a lot of users (would take a lot of time in a script)\nI created a Desired State Configuration resource for OpenSSH that as a parameter can put the keys in a centralized store and adds that store to the AuthorizedKeysFile path list, so that the key can be pre-populated for a user, and then their profile is created on-demand. Finishing up testing of it but I'll update here when prepared.. I did the authorizedkeysfile tweak as a temporary workaround. A gotcha is\nthat you have to remove \"Authorized Users\" from that folders permissions or\nit won't work. Also when using domain users, the users are put in a folder\nwith the NT name of the domain, e.g. MYDOMAIN\\user.\nAuthorizedKeysCommand is going to be the way forward though.\nOn Tue, Jan 8, 2019 at 10:58 AM Manoj Ampalam notifications@github.com\nwrote:\n\nYou can also tweak AuthorizedKeysFile\nhttps://man.openbsd.org/sshd_config#AuthorizedKeysFile\nand manage user keys in a custom directory\nEx. c:\\sshuserkeys%u\\authorized_keys\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1316#issuecomment-452412416,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AOjVUgHFjS2MQq860D20lRoKtm6IWXr2ks5vBOpbgaJpZM4ZkEZ4\n.\n. \n",
    "PillowFish": "Sorry for the delay,\nI dont have an update other than i was no scanning localhost. Ill see if i can recreate this tomorrow when i get back in the office.. Wacky, ill rerun this on my end and see if it happens again and if there is some environmental factor im missing...\nI to got into this odd state running nmap once, so that should have worked.\n. ",
    "aayush251": "Facing the same issue, file size went haywire last night.\nwith sshd log getting spammed by this error : \n1680 20:38:23:517 error: accept: Connection reset\nfile size reached 50mb in less than a minute. Was also able to recreate it using nmap. OS in use:  Windows Server 2016 64-Bit (VM)\ncommand used : nmap -Pn 127.0.0.1\nI also tried with a different VM (Windows Server 2008 R2) but wasn't able to replicate it.\nThis defect doesn't show up when I see \"Did not receive identification string from 127.0.0.1\" in the logs\n. Yes. Any updates regarding this issue?. ",
    "logmein345": "I am getting this also:\nv0.0.19.0\nServer 2016\nMy issue does not seem to have to be triggered by a scan or anything, it just seems to happen after a user is connected for a while. In a matter of hours it can rip through 20+GB with error: accept: Connection reset.. ",
    "jvalladaresBest": "Is there any update on this? We are facing the same issue.   \nHi there, Log is containing millions of rows like this one:1680 20:38:23:517 error: accept: Connection resetKind Regards,JuanEl 3 de noviembre de 2017 a las 19:18 bagajjal notifications@github.com escribi\u00f3:@jvalladaresBest - We are unable to reproduce this at our end. It would be great if you can share the sshd.log (for the first 1-2 minutes so that I can dig more into this issue)..\u2014You are receiving this because you were mentioned.Reply to this email directly, view it on GitHub, or mute the thread.\u00a0\u00a0. ",
    "ST159357": "Hello, log dump can be found here: https://pastebin.com/KJ7qicib\nScanning software is Qualsys.  The \"connection reset\" lines go on indefinitely until the drive fills up. That's all I know at the moment.. ",
    "itnic": "Hi, I think I my patch is resolving this issue. Please can someone confirm it?. I have proposed a patch which resolves this issue (I tested my patch, it is working). I have been asked to provide the patch for powershell/openssh-portable instead of here, see:\nhttps://github.com/PowerShell/openssh-portable/pull/252\nThis has been done more than one month ago...\nPlease can you apply this patch to avoid such trivial Denial of Service.This becomes critical (my ssh servers are scanned on the internet, resulting of massive DoS, just with a simple nmap scan... Should I open a CVE for that ?. ",
    "cxhercules": "FYI changed to Debug3 and did not get any new results. I have been able to mitigate this by adding scheduled powershell task that runs every five minutes and checks for sshd.log being bigger than 25MB, and restart sshd. You have to make sure user you are running this job for is allowed to logon as batch since you will run if logon or not. You will also need to be able to store local password. \n```\nif ((Get-ChildItem 'C:\\Program Files\\OpenSSH\\logs\\sshd.log').Length -gt 26214400)\n{\ncopy-item 'C:\\Program Files\\OpenSSH\\logs\\sshd.log' 'C:\\Program Files\\OpenSSH\\logs\\sshd.log.prev'\n$null | Set-Content 'C:\\Program Files\\OpenSSH\\logs\\sshd.log'\n}\nRestart-Service sshd\n```\nI put restart outside loop because I ran into instance where disk space was filled, but log file did not show it. I restarted sshd and space was freed, so as precaution decided to put outside loop. So far has worked out as workaround, till this is solved. . I started getting this all weekend, several times per second after about 10 hours possibly and disk space was filled by a sshd.log of 16 gigs. \n\"OpenSSH for Windows\" version: v0.0.22.0\nServer OperatingSystem: 2012r2 build 9600\nClient OperatingSystem\nWhat is failing:\nWe are getting constant error message \"Error: Accept: Connection Reset\" and this has filled disk space. . Yes seems related to issue https://github.com/PowerShell/Win32-OpenSSH/issues/935 and will see if I can set to debug3 and set this task in place as well. \nThanks. This morning came in and everything was down because all disk were full on ssh enabled windows systems so had to quickly get them back up and running, but did investigate on one system and that is how I found the log file. I will add more info as I gather it, thanks. . Well it relates to this in that it filled the disk space or create huge log file, but understood. I thought maybe they just did not show the error message that filled the log. Seemed to me it could have been same error. . I did see that, and thank you. \n. @bagajjal by the way I tested your script and works, but 25MB should be represented as 26214400. . Thank you I will check with team to find out if these systems are in fact being scanned. I will set some systems to debug3 in effort to resolve this issue. . ",
    "comsyspro": "Thanks for your tip, but I solved it now with following code line:\nMatch User sshuser\n    AllowTcpForwarding yes\n        PermitTTY no\n    ForceCommand cmd.exe /C echo noshell & pause\nIt is important to add & pause behind the echo command because it would otherwise exit the echo command directly after execution and the ssh connection will be interrupted. With the & pause command the connection stays open until you press the 'enter' key.\nMatch User sshuser\n    AllowTcpForwarding yes\n        PermitTTY no\n        ForceCommand cmd.exe /C echo noshell & echo to exit the ssh connection press the 'enter' key & pause\nBut one problem exists in this case: The sftp server is not working now. So please tell if there is a workaround. At the moment my only idea were to install filezilla ftp server and tunnel the ftp traffic on port 21 through the exitsing ssh connection, but it would be easier to be able to also use the sftp-server.exe when using the ForceCommand parameter. \nFinally I got it work too by changing the following code line:\nForceCommand sftp-server.exe\nSo the complete config is now:\nMatch User sshuser\n    AllowTcpForwarding yes\n        PermitTTY no\n        ForceCommand sftp-server.exe\nWith that a connecting ssh user can use TcpForwarding and can have a SFTP connection without a shell access.\n. ",
    "neoclust": "I tried with windows 7 and 10.\nThe linux which  tries to connect is a debian.. First connection: \n3908 21:33:37 142 Server listening on :: port 22.\n3908 21:33:37 142 Server listening on 0.0.0.0 port 22.\n5372 08:55:15 496 debug1: child socket: 520\n5372 08:55:15 496 debug1: child startup_pipe: 540\n5372 08:55:15 496 Connection from 192.168.0.50 port 52408 on 192.168.0.38 port 22\n5372 08:55:15 496 debug1: Client protocol version 2.0; client software version OpenSSH_6.7p1 Debian-5+deb8u3\n5372 08:55:15 496 debug1: match: OpenSSH_6.7p1 Debian-5+deb8u3 pat OpenSSH* compat 0x04000000\n5372 08:55:15 496 debug1: Local version string SSH-2.0-OpenSSH_7.5\n5372 08:55:15 496 debug1: Enabling compatibility mode for protocol 2.0\n5372 08:55:15 496 debug2: fd 3 setting O_NONBLOCK\n5372 08:55:15 496 debug3: socket:0, socktype:1, io:0131A6D0, fd:5 \n5372 08:55:15 496 debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms\n5372 08:55:15 496 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n5372 08:55:15 496 debug3: send packet: type 20\n5372 08:55:15 496 debug1: SSH2_MSG_KEXINIT sent\n5372 03:15:15 504 debug3: receive packet: type 20\n5372 03:15:15 504 debug1: SSH2_MSG_KEXINIT received\n5372 03:15:15 504 debug2: local server KEXINIT proposal\n5372 03:15:15 504 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\n5372 03:15:15 504 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n5372 03:15:15 504 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n5372 03:15:15 504 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n5372 03:15:15 504 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n5372 03:15:15 504 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n5372 03:15:15 504 debug2: compression ctos: none\n5372 03:15:15 504 debug2: compression stoc: none\n5372 03:15:15 504 debug2: languages ctos: \n5372 03:15:15 504 debug2: languages stoc: \n5372 03:15:15 504 debug2: first_kex_follows 0 \n5372 03:15:15 504 debug2: reserved 0 \n5372 03:15:15 504 debug2: peer client KEXINIT proposal\n5372 03:15:15 504 debug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1\n5372 03:15:15 504 debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-dss-cert-v00@openssh.com,ssh-ed25519,ssh-rsa,ssh-dss\n5372 03:15:15 504 debug2: ciphers ctos: aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\n5372 03:15:15 504 debug2: ciphers stoc: aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\n5372 03:15:15 504 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1,hmac-md5-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\n5372 03:15:15 504 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1,hmac-md5-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\n5372 03:15:15 504 debug2: compression ctos: none,zlib@openssh.com,zlib\n5372 03:15:15 504 debug2: compression stoc: none,zlib@openssh.com,zlib\n5372 03:15:15 504 debug2: languages ctos: \n5372 03:15:15 504 debug2: languages stoc: \n5372 03:15:15 504 debug2: first_kex_follows 0 \n5372 03:15:15 504 debug2: reserved 0 \n5372 03:15:15 504 debug1: kex: algorithm: curve25519-sha256@libssh.org\n5372 03:15:15 504 debug1: kex: host key algorithm: ecdsa-sha2-nistp256\n5372 03:15:15 504 debug1: kex: client->server cipher: aes128-ctr MAC: umac-64-etm@openssh.com compression: none\n5372 03:15:15 504 debug1: kex: server->client cipher: aes128-ctr MAC: umac-64-etm@openssh.com compression: none\n5372 03:15:15 504 debug1: expecting SSH2_MSG_KEX_ECDH_INIT\n5372 03:15:15 504 debug3: receive packet: type 30\n5372 03:15:15 504 debug3: send packet: type 31\n5372 03:15:15 504 debug3: send packet: type 21\n5372 03:15:15 504 debug2: set_newkeys: mode 1\n5372 03:15:15 504 debug1: rekey after 4294967296 blocks\n5372 03:15:15 504 debug1: SSH2_MSG_NEWKEYS sent\n5372 03:15:15 504 debug1: expecting SSH2_MSG_NEWKEYS\n5372 03:15:15 847 debug3: receive packet: type 21\n5372 03:15:15 847 debug1: SSH2_MSG_NEWKEYS received\n5372 03:15:15 847 debug2: set_newkeys: mode 0\n5372 03:15:15 847 debug1: rekey after 4294967296 blocks\n5372 03:15:15 847 debug1: KEX done\n5372 03:15:15 909 debug3: receive packet: type 5\n5372 03:15:15 909 debug3: send packet: type 6\n5372 03:15:16 175 debug3: receive packet: type 50\n5372 03:15:16 175 debug1: userauth-request for user pulse service ssh-connection method none\n5372 03:15:16 175 debug1: attempt 0 failures 0\n5372 03:15:16 175 debug2: parse_server_config: config reprocess config len 322\n5372 03:15:16 175 debug2: input_userauth_request: setting up authctxt for pulse\n5372 03:15:16 175 debug2: input_userauth_request: try method none\n5372 03:15:16 175 Failed none for pulse from 192.168.0.50 port 52408 ssh2\n5372 03:15:16 175 debug3: userauth_finish: failure partial=0 next methods=\"publickey,keyboard-interactive\"\n5372 03:15:16 175 debug3: send packet: type 51\n5372 03:15:16 175 debug3: receive packet: type 50\n5372 03:15:16 175 debug1: userauth-request for user pulse service ssh-connection method publickey\n5372 03:15:16 175 debug1: attempt 1 failures 0\n5372 03:15:16 175 debug2: input_userauth_request: try method publickey\n5372 03:15:16 175 debug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:PyJBggM0+TjJJ3MF5inIUaumcLZ40t9Hx8fs1I5m5zg\n5372 03:15:16 175 debug1: trying public key file C:\\Program Files (x86)\\Pulse/.ssh/authorized_keys\n5372 03:15:16 191 debug2: key not found\n5372 03:15:16 191 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\n5372 03:15:16 191 Failed publickey for pulse from 192.168.0.50 port 52408 ssh2\n5372 03:15:16 191 debug3: userauth_finish: failure partial=0 next methods=\"publickey,keyboard-interactive\"\n5372 03:15:16 191 debug3: send packet: type 51\n5372 03:15:16 191 debug3: receive packet: type 50\n5372 03:15:16 191 debug1: userauth-request for user pulse service ssh-connection method publickey\n5372 03:15:16 191 debug1: attempt 2 failures 1\n5372 03:15:16 191 debug2: input_userauth_request: try method publickey\n5372 03:15:16 191 debug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for DSA SHA256:FTlmKSCcd7Um2zs2nXfUBxaKNFsB3D/w5PWE5e3d9z4\n5372 03:15:16 191 debug1: trying public key file C:\\Program Files (x86)\\Pulse/.ssh/authorized_keys\n5372 03:15:16 191 debug2: user_key_allowed: check options: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDEIWzXjKuHy0nH7SPSOfktyu5UiG4zSfgDdwpypNPKvoFNo+cApr9SGF7lHHD3ru2ojtn32henyTlIYmaBJ9KceV8UNoR2L1xhhw7BWCWpM7dVJv1ZaEvEuM7/gKB51oaGrEgpD8EkcFe1LepjB8Jn7yAtQtRNifk3PKogVKqowoDccg5hRn+SZoR9vru+qCm1VGnk75G5aIh7JFv1Cmvcazz/VD3z7qKoOPAAvY7fgFf9y+M178hK9hsZ8bWCB5A6FA/X2sNviRBCQcy0jiPeXt72OWzq/qGu8tJbFoOuJ64WUsSugvyVkpzRgRpaZC42imWyuD9R2PkwkW9iDfWX root@Pulse-Jessie\\n'\n5372 03:15:16 191 debug2: user_key_allowed: advance: 'AAAAB3NzaC1yc2EAAAADAQABAAABAQDEIWzXjKuHy0nH7SPSOfktyu5UiG4zSfgDdwpypNPKvoFNo+cApr9SGF7lHHD3ru2ojtn32henyTlIYmaBJ9KceV8UNoR2L1xhhw7BWCWpM7dVJv1ZaEvEuM7/gKB51oaGrEgpD8EkcFe1LepjB8Jn7yAtQtRNifk3PKogVKqowoDccg5hRn+SZoR9vru+qCm1VGnk75G5aIh7JFv1Cmvcazz/VD3z7qKoOPAAvY7fgFf9y+M178hK9hsZ8bWCB5A6FA/X2sNviRBCQcy0jiPeXt72OWzq/qGu8tJbFoOuJ64WUsSugvyVkpzRgRpaZC42imWyuD9R2PkwkW9iDfWX root@Pulse-Jessie\\n'\n5372 03:15:16 191 debug2: key not found\n5372 03:15:16 191 debug2: userauth_pubkey: authenticated 0 pkalg ssh-dss\n5372 03:15:16 191 Failed publickey for pulse from 192.168.0.50 port 52408 ssh2\n5372 03:15:16 191 debug3: userauth_finish: failure partial=0 next methods=\"publickey,keyboard-interactive\"\n5372 03:15:16 191 debug3: send packet: type 51\n5372 03:15:16 191 debug3: receive packet: type 50\n5372 03:15:16 191 debug1: userauth-request for user pulse service ssh-connection method publickey\n5372 03:15:16 191 debug1: attempt 3 failures 2\n5372 03:15:16 191 debug2: input_userauth_request: try method publickey\n5372 03:15:16 191 debug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:vLrPeQTcekum5gLlKUNNDejHM1n/b+CpslM4tNv9mxQ\n5372 03:15:16 191 debug1: trying public key file C:\\Program Files (x86)\\Pulse/.ssh/authorized_keys\n5372 03:15:16 191 debug1: matching key found: file C:\\Program Files (x86)\\Pulse/.ssh/authorized_keys, line 1 RSA SHA256:vLrPeQTcekum5gLlKUNNDejHM1n/b+CpslM4tNv9mxQ\n5372 03:15:16 191 debug3: send packet: type 60\n5372 03:15:16 191 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\n5372 03:15:16 191 Postponed publickey for pulse from 192.168.0.50 port 52408 ssh2\n5372 03:15:16 191 debug3: receive packet: type 50\n5372 03:15:16 191 debug1: userauth-request for user pulse service ssh-connection method publickey\n5372 03:15:16 191 debug1: attempt 4 failures 2\n5372 03:15:16 191 debug2: input_userauth_request: try method publickey\n5372 03:15:16 191 debug3: userauth_pubkey: have signature for RSA SHA256:vLrPeQTcekum5gLlKUNNDejHM1n/b+CpslM4tNv9mxQ\n5372 03:15:17 238 debug3: auth agent authenticated pulse\n5372 03:15:17 238 debug2: userauth_pubkey: authenticated 1 pkalg ssh-rsa\n5372 03:15:17 238 Accepted publickey for pulse from 192.168.0.50 port 52408 ssh2: RSA SHA256:vLrPeQTcekum5gLlKUNNDejHM1n/b+CpslM4tNv9mxQ\n5372 03:15:17 238 debug3: send packet: type 52\n5372 03:15:17 238 debug3: close - io:0131AC50, type:2, fd:4, table_index:4\n5372 03:15:17 238 debug3: notify_hostkeys: key 0: ssh-rsa SHA256:7mQ0Yh/zZ8mNU3JwAIj0MkSQev7WqWneBMYfIEwft0U\n5372 03:15:17 238 debug3: notify_hostkeys: key 1: ssh-dss SHA256:jXwmDb8y2As4L+MiIankqRDqTP2NQbZPAtvdh5SW744\n5372 03:15:17 238 debug3: notify_hostkeys: key 2: ecdsa-sha2-nistp256 SHA256:WiEFoZTTQ1TmhZZCV53PrSclE6b1gDuQdNwrV9s0e3c\n5372 03:15:17 238 debug3: notify_hostkeys: key 3: ssh-ed25519 SHA256:ifrgxAZ+KqrbyJXpCKguHMWAWrlnFvszXSGIb46LfYA\n5372 03:15:17 238 debug3: notify_hostkeys: sent 4 hostkeys\n5372 03:15:17 238 debug3: send packet: type 80\n5372 03:15:17 238 debug1: Entering interactive session for SSH2.\n5372 03:15:17 238 debug3: pipe - r-h:612,io:0131A750,fd:4  w-h:540,io:0131A7D0,fd:6\n5372 03:15:17 238 debug2: fd 4 setting O_NONBLOCK\n5372 03:15:17 238 debug2: fd 6 setting O_NONBLOCK\n5372 03:15:17 238 debug1: server_init_dispatch\n5372 03:15:17 238 debug3: receive packet: type 90\n5372 03:15:17 238 debug1: server_input_channel_open: ctype session rchan 0 win 1048576 max 16384\n5372 03:15:17 238 debug1: input_session_request\n5372 03:15:17 238 debug1: channel 0: new [server-session]\n5372 03:15:17 238 debug2: session_new: allocate (allocated 0 max 10)\n5372 03:15:17 238 debug3: session_unused: session id 0 unused\n5372 03:15:17 238 debug1: session_new: session 0\n5372 03:15:17 238 debug1: session_open: channel 0\n5372 03:15:17 238 debug1: session_open: session 0: link with channel 0\n5372 03:15:17 238 debug1: server_input_channel_open: confirm session\n5372 03:15:17 238 debug3: send packet: type 91\n5372 03:15:17 238 debug3: receive packet: type 80\n5372 03:15:17 238 debug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\n5372 03:15:17 285 debug3: receive packet: type 98\n5372 03:15:17 285 debug1: server_input_channel_req: channel 0 request pty-req reply 1\n5372 03:15:17 285 debug1: session_by_channel: session 0 channel 0\n5372 03:15:17 285 debug1: session_input_channel_req: session 0 req pty-req\n5372 03:15:17 285 debug1: Allocating pty.\n5372 03:15:17 285 debug1: session_pty_req: session 0 alloc console\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 1 (0x1)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 2 (0x2)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 3 (0x3)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 4 (0x4)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 5 (0x5)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 6 (0x6)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 7 (0x7)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 8 (0x8)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 9 (0x9)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 10 (0xa)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 12 (0xc)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 13 (0xd)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 14 (0xe)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 18 (0x12)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 30 (0x1e)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 31 (0x1f)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 32 (0x20)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 33 (0x21)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 34 (0x22)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 35 (0x23)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 36 (0x24)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 37 (0x25)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 38 (0x26)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 39 (0x27)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 40 (0x28)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 41 (0x29)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 50 (0x32)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 51 (0x33)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 52 (0x34)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 53 (0x35)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 54 (0x36)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 55 (0x37)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 56 (0x38)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 57 (0x39)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 58 (0x3a)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 59 (0x3b)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 60 (0x3c)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 61 (0x3d)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 62 (0x3e)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 70 (0x46)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 71 (0x47)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 72 (0x48)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 73 (0x49)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 74 (0x4a)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 75 (0x4b)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 90 (0x5a)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 91 (0x5b)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 92 (0x5c)\n5372 03:15:17 285 debug1: Ignoring unsupported tty mode opcode 93 (0x5d)\n5372 03:15:17 285 debug3: send packet: type 99\n5372 03:15:17 285 debug3: receive packet: type 98\n5372 03:15:17 285 debug1: server_input_channel_req: channel 0 request env reply 0\n5372 03:15:17 285 debug1: session_by_channel: session 0 channel 0\n5372 03:15:17 285 debug1: session_input_channel_req: session 0 req env\n5372 03:15:17 285 debug2: Ignoring env request LANG: disallowed name\n5372 03:15:17 285 debug3: receive packet: type 98\n5372 03:15:17 285 debug1: server_input_channel_req: channel 0 request shell reply 1\n5372 03:15:17 285 debug1: session_by_channel: session 0 channel 0\n5372 03:15:17 285 debug1: session_input_channel_req: session 0 req shell\n5372 03:15:17 285 Starting session: shell on console for pulse from 192.168.0.50 port 52408 id 0\n5372 03:15:17 285 debug3: pipe - r-h:620,io:0131AC50,fd:7  w-h:616,io:0131A8D0,fd:8\n5372 03:15:17 285 debug3: pipe - r-h:628,io:0131A950,fd:9  w-h:624,io:0131A1D0,fd:10\n5372 03:15:17 285 debug3: pipe - r-h:636,io:0131A050,fd:11  w-h:632,io:0131A150,fd:12\n5372 03:15:17 285 debug2: fd 7 setting O_NONBLOCK\n5372 03:15:17 285 debug2: fd 8 setting O_NONBLOCK\n5372 03:15:17 285 debug2: fd 9 setting O_NONBLOCK\n5372 03:15:17 285 debug2: fd 10 setting O_NONBLOCK\n5372 03:15:17 285 debug2: fd 11 setting O_NONBLOCK\n5372 03:15:17 285 debug2: fd 12 setting O_NONBLOCK\n5372 03:15:17 285 debug1: Executing command: C:\\Program Files (x86)\\OpenSSH-Win32\\ssh-shellhost.exe \n5372 03:15:17 441 debug3: Register child 00000294 pid 5148, 0 zombies of 0\n5372 03:15:17 441 debug2: fd 3 setting TCP_NODELAY\n5372 03:15:17 441 debug3: close - io:0131AC50, type:2, fd:7, table_index:7\n5372 03:15:17 441 debug3: close - io:0131A1D0, type:2, fd:10, table_index:10\n5372 03:15:17 441 debug3: close - io:0131A150, type:2, fd:12, table_index:12\n5372 03:15:17 441 debug2: channel 0: rfd 9 isatty\n5372 03:15:17 441 debug3: fd 9 is O_NONBLOCK\n5372 03:15:17 441 debug3: fd 8 is O_NONBLOCK\n5372 03:15:17 441 debug3: fd 11 is O_NONBLOCK\n5372 03:15:17 441 debug3: send packet: type 99\n. The second connction gives\nroot@Pulse-Jessie:~# ssh -o IdentityFile=/root/.ssh/id_rsa -o StrictHostKeyChecking=no -o Batchmode=yes -o PasswordAuthentication=no -o ServerAliveInterval=10 -o CheckHostIP=no -o ConnectTimeout=10 -l pulse 192.168.0.38\nPermission denied (publickey,keyboard-interactive).\nand the logs: \n5372 08:55:28 416 debug3: receive packet: type 80\n5372 08:55:28 416 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:55:28 416 debug3: send packet: type 82\n5372 08:55:38 417 debug3: receive packet: type 80\n5372 08:55:38 417 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:55:38 417 debug3: send packet: type 82\n5372 03:16:15 846 debug3: receive packet: type 80\n5372 03:16:15 846 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 03:16:15 846 debug3: send packet: type 82\n5372 08:55:58 434 debug3: receive packet: type 80\n5372 08:55:58 434 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:55:58 434 debug3: send packet: type 82\n5372 08:56:08 433 debug3: receive packet: type 80\n5372 08:56:08 433 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:56:08 433 debug3: send packet: type 82\n5372 08:56:18 448 debug3: receive packet: type 80\n5372 08:56:18 448 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:56:18 448 debug3: send packet: type 82\n5372 08:56:28 448 debug3: receive packet: type 80\n5372 08:56:28 448 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:56:28 448 debug3: send packet: type 82\n5372 03:16:17 801 debug3: receive packet: type 80\n5372 03:16:17 801 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 03:16:17 801 debug3: send packet: type 82\n5372 08:56:48 464 debug3: receive packet: type 80\n5372 08:56:48 464 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:56:48 464 debug3: send packet: type 82\n5372 08:56:58 479 debug3: receive packet: type 80\n5372 08:56:58 479 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:56:58 479 debug3: send packet: type 82\n5372 03:16:15 769 debug3: receive packet: type 80\n5372 03:16:15 769 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 03:16:15 769 debug3: send packet: type 82\n5372 08:57:18 495 debug3: receive packet: type 80\n5372 08:57:18 495 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:57:18 495 debug3: send packet: type 82\n5372 08:57:28 495 debug3: receive packet: type 80\n5372 08:57:28 495 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:57:28 495 debug3: send packet: type 82\n5372 08:57:38 510 debug3: receive packet: type 80\n5372 08:57:38 510 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:57:38 510 debug3: send packet: type 82\n5372 08:57:48 527 debug3: receive packet: type 80\n5372 08:57:48 527 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:57:48 527 debug3: send packet: type 82\n5372 08:57:58 526 debug3: receive packet: type 80\n5372 08:57:58 526 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:57:58 526 debug3: send packet: type 82\n5372 08:58:08 542 debug3: receive packet: type 80\n5372 08:58:08 542 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:58:08 542 debug3: send packet: type 82\n5372 08:58:18 542 debug3: receive packet: type 80\n5372 08:58:18 542 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:58:18 542 debug3: send packet: type 82\n5372 08:58:28 558 debug3: receive packet: type 80\n5372 08:58:28 558 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:58:28 558 debug3: send packet: type 82\n5372 08:58:38 558 debug3: receive packet: type 80\n5372 08:58:38 558 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:58:38 558 debug3: send packet: type 82\n5372 08:58:48 573 debug3: receive packet: type 80\n5372 08:58:48 573 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:58:48 573 debug3: send packet: type 82\n5372 08:58:58 574 debug3: receive packet: type 80\n5372 08:58:58 574 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:58:58 574 debug3: send packet: type 82\n5372 08:59:08 589 debug3: receive packet: type 80\n5372 08:59:08 589 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:59:08 589 debug3: send packet: type 82\n5372 08:59:18 589 debug3: receive packet: type 80\n5372 08:59:18 589 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:59:18 589 debug3: send packet: type 82\n5372 08:59:28 605 debug3: receive packet: type 80\n5372 08:59:28 605 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:59:28 605 debug3: send packet: type 82\n5372 08:59:38 605 debug3: receive packet: type 80\n5372 08:59:38 605 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:59:38 605 debug3: send packet: type 82\n5372 08:59:48 620 debug3: receive packet: type 80\n5372 08:59:48 620 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:59:48 620 debug3: send packet: type 82\n5372 08:59:58 620 debug3: receive packet: type 80\n5372 08:59:58 620 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 08:59:58 620 debug3: send packet: type 82\n5372 09:00:08 637 debug3: receive packet: type 80\n5372 09:00:08 637 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:00:08 637 debug3: send packet: type 82\n5372 09:00:18 636 debug3: receive packet: type 80\n5372 09:00:18 636 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:00:18 636 debug3: send packet: type 82\n5372 09:00:28 652 debug3: receive packet: type 80\n5372 09:00:28 652 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:00:28 652 debug3: send packet: type 82\n5372 09:00:38 651 debug3: receive packet: type 80\n5372 09:00:38 651 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:00:38 651 debug3: send packet: type 82\n5372 09:00:48 652 debug3: receive packet: type 80\n5372 09:00:48 652 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:00:48 652 debug3: send packet: type 82\n5372 09:00:58 667 debug3: receive packet: type 80\n5372 09:00:58 667 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:00:58 667 debug3: send packet: type 82\n5372 09:01:08 667 debug3: receive packet: type 80\n5372 09:01:08 667 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:01:08 667 debug3: send packet: type 82\n5372 09:01:18 682 debug3: receive packet: type 80\n5372 09:01:18 682 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:01:18 682 debug3: send packet: type 82\n5372 09:01:28 683 debug3: receive packet: type 80\n5372 09:01:28 683 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:01:28 683 debug3: send packet: type 82\n5372 09:01:38 699 debug3: receive packet: type 80\n5372 09:01:38 699 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:01:38 699 debug3: send packet: type 82\n5372 09:01:48 698 debug3: receive packet: type 80\n5372 09:01:48 698 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:01:48 698 debug3: send packet: type 82\n5372 09:01:58 699 debug3: receive packet: type 80\n5372 09:01:58 699 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:01:58 699 debug3: send packet: type 82\n5372 09:02:08 698 debug3: receive packet: type 80\n5372 09:02:08 698 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:02:08 698 debug3: send packet: type 82\n5372 09:02:18 698 debug3: receive packet: type 80\n5372 09:02:18 698 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:02:18 698 debug3: send packet: type 82\n5372 09:02:28 714 debug3: receive packet: type 80\n5372 09:02:28 714 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:02:28 714 debug3: send packet: type 82\n5372 09:02:38 714 debug3: receive packet: type 80\n5372 09:02:38 714 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:02:38 714 debug3: send packet: type 82\n5372 09:02:48 714 debug3: receive packet: type 80\n5372 09:02:48 714 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:02:48 714 debug3: send packet: type 82\n5372 09:02:58 729 debug3: receive packet: type 80\n5372 09:02:58 729 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:02:58 729 debug3: send packet: type 82\n5372 09:03:08 745 debug3: receive packet: type 80\n5372 09:03:08 745 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:03:08 745 debug3: send packet: type 82\n5372 09:03:18 745 debug3: receive packet: type 80\n5372 09:03:18 745 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:03:18 745 debug3: send packet: type 82\n5372 09:03:28 761 debug3: receive packet: type 80\n5372 09:03:28 761 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:03:28 761 debug3: send packet: type 82\n5372 09:03:38 761 debug3: receive packet: type 80\n5372 09:03:38 761 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:03:38 761 debug3: send packet: type 82\n5372 09:03:48 777 debug3: receive packet: type 80\n5372 09:03:48 777 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:03:48 777 debug3: send packet: type 82\n5372 09:03:58 792 debug3: receive packet: type 80\n5372 09:03:58 792 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:03:58 792 debug3: send packet: type 82\n5372 09:04:08 792 debug3: receive packet: type 80\n5372 09:04:08 792 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:04:08 792 debug3: send packet: type 82\n5372 09:04:18 808 debug3: receive packet: type 80\n5372 09:04:18 808 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:04:18 808 debug3: send packet: type 82\n5372 09:04:28 808 debug3: receive packet: type 80\n5372 09:04:28 808 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:04:28 808 debug3: send packet: type 82\n5372 09:04:38 808 debug3: receive packet: type 80\n5372 09:04:38 808 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:04:38 808 debug3: send packet: type 82\n5372 09:04:48 823 debug3: receive packet: type 80\n5372 09:04:48 823 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:04:48 823 debug3: send packet: type 82\n5372 09:04:58 824 debug3: receive packet: type 80\n5372 09:04:58 824 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:04:58 824 debug3: send packet: type 82\n5372 09:05:08 839 debug3: receive packet: type 80\n5372 09:05:08 839 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:05:08 839 debug3: send packet: type 82\n5372 09:05:18 855 debug3: receive packet: type 80\n5372 09:05:18 855 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:05:18 855 debug3: send packet: type 82\n5372 09:05:28 870 debug3: receive packet: type 80\n5372 09:05:28 870 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:05:28 870 debug3: send packet: type 82\n5372 09:05:38 871 debug3: receive packet: type 80\n5372 09:05:38 871 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:05:38 871 debug3: send packet: type 82\n5372 09:05:48 870 debug3: receive packet: type 80\n5372 09:05:48 870 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:05:48 870 debug3: send packet: type 82\n5372 09:05:58 870 debug3: receive packet: type 80\n5372 09:05:58 870 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:05:58 870 debug3: send packet: type 82\n5372 09:06:08 886 debug3: receive packet: type 80\n5372 09:06:08 886 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:06:08 886 debug3: send packet: type 82\n5372 09:06:18 886 debug3: receive packet: type 80\n5372 09:06:18 886 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:06:18 886 debug3: send packet: type 82\n5372 09:06:28 901 debug3: receive packet: type 80\n5372 09:06:28 901 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:06:28 901 debug3: send packet: type 82\n5372 09:06:38 901 debug3: receive packet: type 80\n5372 09:06:38 901 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:06:38 901 debug3: send packet: type 82\n5372 09:06:48 901 debug3: receive packet: type 80\n5372 09:06:48 901 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:06:48 901 debug3: send packet: type 82\n5372 09:06:58 917 debug3: receive packet: type 80\n5372 09:06:58 917 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:06:58 917 debug3: send packet: type 82\n5372 09:07:08 917 debug3: receive packet: type 80\n5372 09:07:08 917 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:07:08 917 debug3: send packet: type 82\n5372 09:07:18 933 debug3: receive packet: type 80\n5372 09:07:18 933 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:07:18 933 debug3: send packet: type 82\n5372 09:07:28 932 debug3: receive packet: type 80\n5372 09:07:28 932 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:07:28 932 debug3: send packet: type 82\n5372 09:07:38 948 debug3: receive packet: type 80\n5372 09:07:38 948 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:07:38 948 debug3: send packet: type 82\n5372 09:07:48 949 debug3: receive packet: type 80\n5372 09:07:48 949 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:07:48 949 debug3: send packet: type 82\n5372 09:07:58 948 debug3: receive packet: type 80\n5372 09:07:58 948 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:07:58 948 debug3: send packet: type 82\n5372 09:08:08 964 debug3: receive packet: type 80\n5372 09:08:08 964 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:08:08 964 debug3: send packet: type 82\n5372 09:08:18 980 debug3: receive packet: type 80\n5372 09:08:18 980 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:08:18 980 debug3: send packet: type 82\n5372 09:08:28 980 debug3: receive packet: type 80\n5372 09:08:28 980 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:08:28 980 debug3: send packet: type 82\n5372 09:08:38 995 debug3: receive packet: type 80\n5372 09:08:38 995 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:08:38 995 debug3: send packet: type 82\n5372 09:08:48 996 debug3: receive packet: type 80\n5372 09:08:48 996 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:08:48 996 debug3: send packet: type 82\n5372 09:08:58 996 debug3: receive packet: type 80\n5372 09:08:58 996 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:08:58 996 debug3: send packet: type 82\n5372 09:09:09 011 debug3: receive packet: type 80\n5372 09:09:09 011 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:09:09 011 debug3: send packet: type 82\n5372 09:09:19 011 debug3: receive packet: type 80\n5372 09:09:19 011 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:09:19 011 debug3: send packet: type 82\n5372 09:09:29 011 debug3: receive packet: type 80\n5372 09:09:29 011 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:09:29 011 debug3: send packet: type 82\n5372 09:09:39 026 debug3: receive packet: type 80\n5372 09:09:39 026 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:09:39 026 debug3: send packet: type 82\n5372 09:09:49 027 debug3: receive packet: type 80\n5372 09:09:49 027 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:09:49 027 debug3: send packet: type 82\n5372 09:09:59 042 debug3: receive packet: type 80\n5372 09:09:59 042 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:09:59 042 debug3: send packet: type 82\n5372 09:10:09 058 debug3: receive packet: type 80\n5372 09:10:09 058 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:10:09 058 debug3: send packet: type 82\n5372 09:10:19 058 debug3: receive packet: type 80\n5372 09:10:19 058 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:10:19 058 debug3: send packet: type 82\n5372 09:10:29 073 debug3: receive packet: type 80\n5372 09:10:29 073 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:10:29 073 debug3: send packet: type 82\n5372 09:10:39 073 debug3: receive packet: type 80\n5372 09:10:39 073 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:10:39 073 debug3: send packet: type 82\n5372 09:10:49 074 debug3: receive packet: type 80\n5372 09:10:49 074 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:10:49 074 debug3: send packet: type 82\n5372 09:10:59 089 debug3: receive packet: type 80\n5372 09:10:59 089 debug1: server_input_global_request: rtype keepalive@openssh.com want_reply 1\n5372 09:10:59 089 debug3: send packet: type 82\n5372 09:11:06 480 debug2: channel 0: read<=0 rfd 9 len 0\n5372 09:11:06 480 debug2: channel 0: read failed\n5372 09:11:06 480 debug2: channel 0: close_read\n5372 09:11:06 480 debug3: close - io:0131A950, type:2, fd:9, table_index:9\n5372 09:11:06 480 debug2: channel 0: input open -> drain\n5372 09:11:06 480 debug2: channel 0: ibuf_empty delayed efd 11/(0)\n5372 09:11:06 480 debug2: channel 0: read 0 from efd 11\n5372 09:11:06 480 debug2: channel 0: closing read-efd 11\n5372 09:11:06 480 debug3: close - io:0131A050, type:2, fd:11, table_index:11\n5372 09:11:06 480 debug2: channel 0: ibuf empty\n5372 09:11:06 480 debug2: channel 0: send eof\n5372 09:11:06 480 debug3: send packet: type 96\n5372 09:11:06 480 debug2: channel 0: input drain -> closed\n5372 09:11:06 480 debug3: zombie'ing child at index 0, 0 zombies of 1\n5372 09:11:06 480 debug1: Received SIGCHLD.\n5372 09:11:06 480 debug3: Unregister child at index 0, 1 zombies of 1\n5372 09:11:06 480 debug1: session_by_pid: pid 5148\n5372 09:11:06 480 debug1: session_exit_message: session 0 channel 0 pid 5148\n5372 09:11:06 480 debug2: channel 0: request exit-status confirm 0\n5372 09:11:06 480 debug3: send packet: type 98\n5372 09:11:06 480 debug1: session_exit_message: release channel 0\n5372 09:11:06 480 debug2: channel 0: write failed\n5372 09:11:06 480 debug2: channel 0: close_write\n5372 09:11:06 480 debug3: close - io:0131A8D0, type:2, fd:8, table_index:8\n5372 09:11:06 480 debug2: channel 0: send eow\n5372 09:11:06 480 debug3: send packet: type 98\n5372 09:11:06 480 debug2: channel 0: output open -> closed\n5372 09:11:06 480 debug1: session_pty_cleanup: session 0 release console\n5372 09:11:06 480 debug2: channel 0: send close\n5372 09:11:06 480 debug3: send packet: type 97\n5372 09:11:06 480 debug3: channel 0: will not send data after close\n5372 09:11:06 480 debug2: notify_done: reading\n5372 09:11:06 480 debug3: channel 0: will not send data after close\n5372 09:11:06 480 debug3: receive packet: type 97\n5372 09:11:06 480 debug2: channel 0: rcvd close\n5372 09:11:06 480 debug3: channel 0: will not send data after close\n5372 09:11:06 480 debug2: channel 0: is dead\n5372 09:11:06 480 debug2: channel 0: gc: notify user\n5372 09:11:06 480 debug1: session_by_channel: session 0 channel 0\n5372 09:11:06 480 debug1: session_close_by_channel: channel 0 child 0\n5372 09:11:06 480 Close session: user pulse from 192.168.0.50 port 52408 id 0\n5372 09:11:06 480 debug3: session_unused: session id 0 unused\n5372 09:11:06 480 debug2: channel 0: gc: user detached\n5372 09:11:06 480 debug2: channel 0: is dead\n5372 09:11:06 480 debug2: channel 0: garbage collecting\n5372 09:11:06 480 debug1: channel 0: free: server-session, nchannels 1\n5372 09:11:06 480 debug3: channel 0: status: The following connections are open:\\r\\n  #0 server-session (t4 r0 i3/0 o3/0 fd -1/-1 cc -1)\\r\\n\n5372 09:11:06 480 debug3: receive packet: type 1\n5372 09:11:06 480 Received disconnect from 192.168.0.50 port 52408:11: disconnected by user\n5372 09:11:06 480 Disconnected from user pulse 192.168.0.50 port 52408\n5372 09:11:06 480 debug1: do_cleanup\n3380 09:11:39 089 debug1: child socket: 540\n3380 09:11:39 089 debug1: child startup_pipe: 544\n3380 09:11:39 105 Connection from 192.168.0.50 port 52411 on 192.168.0.38 port 22\n3380 09:11:39 105 debug1: Client protocol version 2.0; client software version OpenSSH_6.7p1 Debian-5+deb8u3\n3380 09:11:39 105 debug1: match: OpenSSH_6.7p1 Debian-5+deb8u3 pat OpenSSH* compat 0x04000000\n3380 09:11:39 105 debug1: Local version string SSH-2.0-OpenSSH_7.5\n3380 09:11:39 105 debug1: Enabling compatibility mode for protocol 2.0\n3380 09:11:39 105 debug2: fd 3 setting O_NONBLOCK\n3380 09:11:39 105 debug3: socket:0, socktype:1, io:00FBA350, fd:5 \n3380 09:11:39 105 debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms\n3380 09:11:39 105 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n3380 09:11:39 105 debug3: send packet: type 20\n3380 09:11:39 105 debug1: SSH2_MSG_KEXINIT sent\n3380 09:11:39 105 debug3: receive packet: type 20\n3380 09:11:39 105 debug1: SSH2_MSG_KEXINIT received\n3380 09:11:39 105 debug2: local server KEXINIT proposal\n3380 09:11:39 105 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\n3380 09:11:39 105 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n3380 09:11:39 105 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n3380 09:11:39 105 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n3380 09:11:39 105 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n3380 09:11:39 105 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n3380 09:11:39 105 debug2: compression ctos: none\n3380 09:11:39 105 debug2: compression stoc: none\n3380 09:11:39 105 debug2: languages ctos: \n3380 09:11:39 105 debug2: languages stoc: \n3380 09:11:39 105 debug2: first_kex_follows 0 \n3380 09:11:39 105 debug2: reserved 0 \n3380 09:11:39 105 debug2: peer client KEXINIT proposal\n3380 09:11:39 105 debug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1\n3380 09:11:39 105 debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-dss-cert-v00@openssh.com,ssh-ed25519,ssh-rsa,ssh-dss\n3380 09:11:39 105 debug2: ciphers ctos: aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\n3380 09:11:39 105 debug2: ciphers stoc: aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\n3380 09:11:39 105 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1,hmac-md5-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\n3380 09:11:39 105 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1,hmac-md5-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\n3380 09:11:39 105 debug2: compression ctos: none,zlib@openssh.com,zlib\n3380 09:11:39 105 debug2: compression stoc: none,zlib@openssh.com,zlib\n3380 09:11:39 105 debug2: languages ctos: \n3380 09:11:39 105 debug2: languages stoc: \n3380 09:11:39 105 debug2: first_kex_follows 0 \n3380 09:11:39 105 debug2: reserved 0 \n3380 09:11:39 105 debug1: kex: algorithm: curve25519-sha256@libssh.org\n3380 09:11:39 105 debug1: kex: host key algorithm: ecdsa-sha2-nistp256\n3380 09:11:39 105 debug1: kex: client->server cipher: aes128-ctr MAC: umac-64-etm@openssh.com compression: none\n3380 09:11:39 105 debug1: kex: server->client cipher: aes128-ctr MAC: umac-64-etm@openssh.com compression: none\n3380 09:11:39 105 debug1: expecting SSH2_MSG_KEX_ECDH_INIT\n3380 09:11:39 105 debug3: receive packet: type 30\n3380 09:11:39 105 debug3: send packet: type 31\n3380 09:11:39 105 debug3: send packet: type 21\n3380 09:11:39 105 debug2: set_newkeys: mode 1\n3380 09:11:39 105 debug1: rekey after 4294967296 blocks\n3380 09:11:39 105 debug1: SSH2_MSG_NEWKEYS sent\n3380 09:11:39 105 debug1: expecting SSH2_MSG_NEWKEYS\n3380 09:11:39 105 debug3: receive packet: type 21\n3380 09:11:39 105 debug1: SSH2_MSG_NEWKEYS received\n3380 09:11:39 105 debug2: set_newkeys: mode 0\n3380 09:11:39 105 debug1: rekey after 4294967296 blocks\n3380 09:11:39 105 debug1: KEX done\n3380 09:11:39 183 debug3: receive packet: type 5\n3380 09:11:39 183 debug3: send packet: type 6\n3380 09:11:39 183 debug3: receive packet: type 50\n3380 09:11:39 183 debug1: userauth-request for user pulse service ssh-connection method none\n3380 09:11:39 183 debug1: attempt 0 failures 0\n3380 09:11:39 183 debug2: parse_server_config: config reprocess config len 322\n3380 09:11:39 183 debug2: input_userauth_request: setting up authctxt for pulse\n3380 09:11:39 183 debug2: input_userauth_request: try method none\n3380 09:11:39 183 Failed none for pulse from 192.168.0.50 port 52411 ssh2\n3380 09:11:39 183 debug3: userauth_finish: failure partial=0 next methods=\"publickey,keyboard-interactive\"\n3380 09:11:39 183 debug3: send packet: type 51\n3380 09:11:39 183 debug3: receive packet: type 50\n3380 09:11:39 183 debug1: userauth-request for user pulse service ssh-connection method publickey\n3380 09:11:39 183 debug1: attempt 1 failures 0\n3380 09:11:39 183 debug2: input_userauth_request: try method publickey\n3380 09:11:39 183 debug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:PyJBggM0+TjJJ3MF5inIUaumcLZ40t9Hx8fs1I5m5zg\n3380 09:11:39 183 debug1: trying public key file C:\\Users\\pulse/.ssh/authorized_keys\n3380 09:11:39 183 debug1: Could not open authorized keys 'C:\\Users\\pulse/.ssh/authorized_keys': No such file or directory\n3380 09:11:39 183 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\n3380 09:11:39 183 Failed publickey for pulse from 192.168.0.50 port 52411 ssh2\n3380 09:11:39 183 debug3: userauth_finish: failure partial=0 next methods=\"publickey,keyboard-interactive\"\n3380 09:11:39 183 debug3: send packet: type 51\n3380 09:11:39 183 debug3: receive packet: type 50\n3380 09:11:39 183 debug1: userauth-request for user pulse service ssh-connection method publickey\n3380 09:11:39 183 debug1: attempt 2 failures 1\n3380 09:11:39 183 debug2: input_userauth_request: try method publickey\n3380 09:11:39 183 debug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for DSA SHA256:FTlmKSCcd7Um2zs2nXfUBxaKNFsB3D/w5PWE5e3d9z4\n3380 09:11:39 183 debug1: trying public key file C:\\Users\\pulse/.ssh/authorized_keys\n3380 09:11:39 183 debug1: Could not open authorized keys 'C:\\Users\\pulse/.ssh/authorized_keys': No such file or directory\n3380 09:11:39 183 debug2: userauth_pubkey: authenticated 0 pkalg ssh-dss\n3380 09:11:39 183 Failed publickey for pulse from 192.168.0.50 port 52411 ssh2\n3380 09:11:39 183 debug3: userauth_finish: failure partial=0 next methods=\"publickey,keyboard-interactive\"\n3380 09:11:39 183 debug3: send packet: type 51\n3380 09:11:39 183 debug3: receive packet: type 50\n3380 09:11:39 183 debug1: userauth-request for user pulse service ssh-connection method publickey\n3380 09:11:39 183 debug1: attempt 3 failures 2\n3380 09:11:39 183 debug2: input_userauth_request: try method publickey\n3380 09:11:39 183 debug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:vLrPeQTcekum5gLlKUNNDejHM1n/b+CpslM4tNv9mxQ\n3380 09:11:39 183 debug1: trying public key file C:\\Users\\pulse/.ssh/authorized_keys\n3380 09:11:39 183 debug1: Could not open authorized keys 'C:\\Users\\pulse/.ssh/authorized_keys': No such file or directory\n3380 09:11:39 183 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\n3380 09:11:39 183 Failed publickey for pulse from 192.168.0.50 port 52411 ssh2\n3380 09:11:39 183 debug3: userauth_finish: failure partial=0 next methods=\"publickey,keyboard-interactive\"\n3380 09:11:39 183 debug3: send packet: type 51\n3380 09:11:39 183 Connection closed by authenticating user pulse 192.168.0.50 port 52411\n3380 09:11:39 183 debug1: do_cleanup\n. strangely when i log, the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\ProfileImagePath is changed from C:\\Program Files (x86)\\Pulse to  C:\\Users\\pulse. last missing information i am using win32-openssh 0.0.12\ntested with password based login, => it works OK. i take the time to add more infos on friday ( i am off until this :/ ). i see this error too.. ",
    "wim-h": "Starting from an administrative command prompt works, it waits for incoming connections.\nBut executing an ssh command yields a forced close of sshd.exe:\nThe program has stopped working. Windows can check online for a solution to the problem.\n. Check online. ...\n. Close the program\nOutput of sshd.exe -ddd ( I've skipped the initial setup and key exchange parts, as that seems to work):\ndebug1: Entering interactive session for SSH2.\ndebug3: pipe - r-h:316,io:00435EE0,fd:4  w-h:312,io:00435F60,fd:6\ndebug2: fd 4 setting O_NONBLOCK\ndebug2: fd 6 setting O_NONBLOCK\ndebug1: server_init_dispatch\ndebug3: receive packet: type 90\ndebug1: server_input_channel_open: ctype session rchan 0 win 2097152 max 32768\ndebug1: input_session_request\ndebug1: channel 0: new [server-session]\ndebug2: session_new: allocate (allocated 0 max 10)\ndebug3: session_unused: session id 0 unused\ndebug1: session_new: session 0\ndebug1: session_open: channel 0\ndebug1: session_open: session 0: link with channel 0\ndebug1: server_input_channel_open: confirm session\ndebug3: send packet: type 91\ndebug3: receive packet: type 80\ndebug1: server_input_global_request: rtype no-more-sessions@openssh.com want_rep\nly 0\ndebug3: receive packet: type 98\ndebug1: server_input_channel_req: channel 0 request exec reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req exec\nStarting session: command for rexusr from 172.17.1.5 port 30250 id 0\ndebug3: pipe - r-h:324,io:00435FE0,fd:7  w-h:320,io:00436060,fd:8\ndebug3: pipe - r-h:332,io:004360E0,fd:9  w-h:328,io:00436160,fd:10\ndebug3: pipe - r-h:340,io:004361E0,fd:11  w-h:336,io:00436260,fd:12\ndebug2: fd 7 setting O_NONBLOCK\ndebug2: fd 8 setting O_NONBLOCK\ndebug2: fd 9 setting O_NONBLOCK\ndebug2: fd 10 setting O_NONBLOCK\ndebug2: fd 11 setting O_NONBLOCK\ndebug2: fd 12 setting O_NONBLOCK\ndebug3: socket:0, socktype:1, io:004362E0, fd:13\ndebug1: Executing command: C:\\Program Files\\OpenSSH\\ssh-shellhost.exe -nopty\nY21kIC9jICJkaXIi\ndebug3: Register child 00000160 pid 1416, 0 zombies of 0\ndebug2: fd 5 setting TCP_NODELAY\ndebug3: close - io:00435FE0, type:2, fd:7, table_index:7\ndebug3: close - io:00436160, type:2, fd:10, table_index:10\ndebug3: close - io:00436260, type:2, fd:12, table_index:12\ndebug3: fd 9 is O_NONBLOCK\ndebug3: fd 8 is O_NONBLOCK\ndebug3: fd 11 is O_NONBLOCK\ndebug3: send packet: type 99\ndebug2: channel 0: read<=0 rfd 9 len 0\ndebug2: channel 0: read failed\ndebug3: zombie'ing child at index 0, 0 zombies of 1\ndebug3: zombie'ing child at index 0, 0 zombies of 1\n. Downloaded and tested v0.0.16.0:\nStarting sshd service using Services Control Panel: Same error as 0.0.17.\nStarting sshd -ddd on command line: same behaviour as 0.0.16\n. > We may have missed testing 32-bit drop on Win7\nBoth 0.0.17 and 0.0.16?\nDo you know if 64 bit testing has been done?. Unable to start sshd service from services control panel using 0.0.17.0 on Win7 64 bit.\nSame behaviour as on Win7 32bit.\nRunning sshd -ddd from Administrative command prompt also behaves as Win7 32 bit.. ",
    "pavan89": "I have also facing from this issue : sshd service not enable to start service, Gives below error.\nPlease suggest.\nC:>ssh localhost\nssh: connect to host localhost port 22: Connection refused . ",
    "devonfury": "That worked.\nThanks. ",
    "hamedsbt": "after set force command to:  C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe or powershell.exe\nI got error:\nCloning into 'testgit2'...\nfatal: protocol error: bad line length character: Wind\nsshd log (powershell.exe):\n7052 23:47:13:550 Starting session: forced-command (config) 'powershell.exe' for hamedsbt from 127.0.0.1 port 6939 id 0\n7052 23:47:13:550 debug2: fd 8 setting O_NONBLOCK\n7052 23:47:13:550 debug2: fd 9 setting O_NONBLOCK\n7052 23:47:13:550 debug2: fd 10 setting O_NONBLOCK\n7052 23:47:13:550 debug2: fd 11 setting O_NONBLOCK\n7052 23:47:13:550 debug2: fd 12 setting O_NONBLOCK\n7052 23:47:13:550 debug2: fd 13 setting O_NONBLOCK\n7052 23:47:13:602 debug1: Executing command: D:\\sft\\OpenSSH-Win64\\ssh-shellhost.exe -nopty cG93ZXJzaGVsbC5leGU=\n7052 23:47:13:627 debug2: fd 3 setting TCP_NODELAY\n7052 23:47:13:627 debug3: fd 10 is O_NONBLOCK\n7052 23:47:13:627 debug3: fd 9 is O_NONBLOCK\n7052 23:47:13:627 debug3: fd 12 is O_NONBLOCK\n7052 23:47:13:627 debug3: send packet: type 99\n7052 23:47:14:024 debug3: receive packet: type 96\n7052 23:47:14:024 debug2: channel 0: rcvd eof\n7052 23:47:14:024 debug2: channel 0: output open -> drain\n7052 23:47:14:024 debug2: channel 0: obuf empty\nIt seem the clone command does not pass correctly (b64: cG93ZXJzaGVsbC5leGU=) mean powershell.exe only!. thank you for reply, but did not work:\n$ git clone hamedsbt@127.0.0.1:\"D:/TMP/git_projects/test_remote\" test\nCloning into 'test'...\nfatal: protocol error: bad line length character: Wind\nsshd log:\n8256 20:23:04:262 Starting session: forced-command (config) 'C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe' for hamedsbt from 127.0.0.1 port 8202 id 0\n8256 20:23:04:262 debug2: fd 8 setting O_NONBLOCK\n8256 20:23:04:262 debug2: fd 9 setting O_NONBLOCK\n8256 20:23:04:262 debug2: fd 10 setting O_NONBLOCK\n8256 20:23:04:262 debug2: fd 11 setting O_NONBLOCK\n8256 20:23:04:262 debug2: fd 12 setting O_NONBLOCK\n8256 20:23:04:262 debug2: fd 13 setting O_NONBLOCK\n8256 20:23:04:310 debug1: Executing command: D:\\sft\\OpenSSH-Win64\\ssh-shellhost.exe -nopty QzpcV2luZG93c1xTeXN0ZW0zMlxXaW5kb3dzUG93ZXJTaGVsbFx2MS4wXHBvd2Vyc2hlbGwuZXhl\n8256 20:23:04:336 debug2: fd 3 setting TCP_NODELAY\n8256 20:23:04:336 debug3: fd 10 is O_NONBLOCK\n8256 20:23:04:336 debug3: fd 9 is O_NONBLOCK\n8256 20:23:04:336 debug3: fd 12 is O_NONBLOCK\n8256 20:23:04:336 debug3: send packet: type 99\n8256 20:23:04:552 debug3: receive packet: type 96\n8256 20:23:04:552 debug2: channel 0: rcvd eof\n8256 20:23:04:552 debug2: channel 0: output open -> drain\n8256 20:23:04:552 debug2: channel 0: obuf empty\n8256 20:23:04:552 debug2: channel 0: close_write\n8256 20:23:04:552 debug2: channel 0: output drain -> closed\n8256 20:23:04:901 debug3: receive packet: type 98\n8256 20:23:04:901 debug1: server_input_channel_req: channel 0 request eow@openssh.com reply 0\n8256 20:23:04:901 debug2: channel 0: rcvd eow\n8256 20:23:04:901 debug2: channel 0: close_read\n8256 20:23:04:901 debug2: channel 0: input open -> closed. @DarwinJS - basically the windows is not case sensitive nor on dir-name, file-name, path address and so on.... thank you for your reply, but ssh-agent is running, I did pay attention to \"unable to send pubkeyauth request\" log but I could not to fix it. the \"ssh-agent.log\" contain error:\n\"cannot process request: client process is not admin or sshd\" \nHow I can resolve it?. Thank you for your support.\nFinally after spending many days I'm successfully logged in via Win32-OpenSSH now I'm going to integrate it with Git on single device as Git-Server & Git-Client.\nmy issues resolved, Thank you!. thank you for your reply, I want independent ssh-key per user, But when I try to connect:\nssh://michel@10.10.2.1/repo... the sshd look-for authorized_keys on \"C:/Users/michel/.ssh\" directory\nalso for sara user:\nssh://sara@10.10.2.1/repo... the sshd look-for authorized_keys on \"C:/Users/sara/.ssh\" directory\n right?!\nAlso I tried to create \"C:/Users/sara/.ssh\" directory manually but sshd log: invalid user(seen got from windows API)\nSo how I can manage the client's key(s) by myself ? such as: a D:/sft/OpenSSH-Win64/authorized-keys/ directory that contain michel directory that contain related michel key and so on...\nOn Sara as Client machine I created a config file contain:\nHost 10.10.2.1\nHostname 10.10.2.1\nUser michel\nIdentityFile C:/Users/sara/.ssh/id_rsa_michel\nHost 10.10.2.1\nHostname 10.10.2.1\nUser sara\nIdentityFile C:/Users/sara/.ssh/id_rsa_sara\nI added tow public keys as one file authorized-keys to Server machine \nmichel account can connect the repo and fetch GIT but sara acount can not, because the Server machine does not have an account named sara  sshd log:\n836 00:34:31:185 Invalid user sara from 10.10.2.3 port 49251\n836 00:34:31:185 debug2: input_userauth_request: try method none\n836 00:34:31:185 Failed none for invalid user sara from 10.10.2.3 port 49251 ssh2\n836 00:34:31:185 debug3: userauth_finish: failure partial=0 next \nthe server machine contain michel account but doesn't sara account so it seem I have to create sara account to server machine too :( but I don't like it because I have many contributors else, such as: Alex, David, Steve and.... Thank you for your reply, I did hard coded path of authorized key file (D:\\sft\\OpenSSH-Win64\\authorized_keys) and repaired permission via FixHostFilePermissions.ps1 but it does not works sshd log:\n12056 22:01:03:057 debug3: fd 5 is not O_NONBLOCK\n12056 22:01:03:057 debug3: spawning \"D:\\sft\\OpenSSH-Win64\\sshd.exe\"\n12056 22:01:03:135 debug1: Forked child 1928.\n1928 22:01:03:229 debug1: sshd version OpenSSH_7.6, LibreSSL 2.5.3\n1928 22:01:03:245 debug1: private host key #0: ssh-rsa SHA256:AzKKsphmaXEjgsVS6rp9Oob5VKfpvmOnQ/6UynOqLlE\n.\n.\n.\n.\n.\n1928 22:01:04:339 debug2: parse_server_config: config reprocess config len 265\n1928 22:01:04:339 debug3: NetUserGetInfo() failed with error: 2221 for user: sara and domain: (null) \\n\n1928 22:01:04:339 error: DsGetDcNameW() failed with error: 1355 \\n\n1928 22:01:04:339 Invalid user sara from 10.10.2.3 port 49258\n1928 22:01:04:339 debug2: input_userauth_request: try method none\n1928 22:01:04:339 Failed none for invalid user sara from 10.10.2.3 port 49258 ssh2\n1928 22:01:04:339 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n1928 22:01:04:339 debug3: send packet: type 51\n1928 22:01:04:354 debug3: receive packet: type 50\n1928 22:01:04:354 debug1: userauth-request for user sara service ssh-connection method publickey\n1928 22:01:04:354 debug1: attempt 1 failures 0\n1928 22:01:04:354 debug2: input_userauth_request: try method publickey\n1928 22:01:04:354 debug2: userauth_pubkey: disabled because of invalid user\n1928 22:01:04:354 Failed publickey for invalid user sara from 10.10.2.3 port 49258 ssh2\n1928 22:01:04:354 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n1928 22:01:04:354 debug3: send packet: type 51\n1928 22:01:04:370 debug3: receive packet: type 50\n1928 22:01:04:370 debug1: userauth-request for user sara service ssh-connection method publickey\n1928 22:01:04:370 debug1: attempt 2 failures 1\n1928 22:01:04:370 debug2: input_userauth_request: try method publickey\n1928 22:01:04:370 debug2: userauth_pubkey: disabled because of invalid user\n1928 22:01:07:683 debug3: recv - from CB ERROR:10054, io:00000289294AA730\n1928 22:01:07:683 Connection reset by invalid user sara 10.10.2.3 port 49258\n1928 22:01:07:683 debug1: do_cleanup\nHow I can solve it?\n. #$OpenBSD: sshd_config,v 1.84 2011/05/23 03:30:07 djm Exp $\nThis is the sshd server system-wide configuration file.  See\nsshd_config(5) for more information.\nThis sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin\nThe strategy used for options in the default sshd_config shipped with\nOpenSSH is to specify options with their default value where\npossible, but leave them commented.  Uncommented options override the\ndefault value.\nPort 22\nAddressFamily any\nListenAddress 0.0.0.0\nListenAddress ::\nThe default requires explicit activation of protocol 1\nProtocol 2\nHostKey for protocol version 1\nHostKey /etc/ssh/ssh_host_key\nHostKeys for protocol version 2\nHostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_dsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\nLifetime and size of ephemeral version 1 server key\nKeyRegenerationInterval 1h\nServerKeyBits 1024\nLogging\nobsoletes QuietMode and FascistLogging\nSyslogFacility AUTH\nLogLevel DEBUG3\nAuthentication:\nLoginGraceTime 2m\nPermitRootLogin yes\nStrictModes yes\nMaxAuthTries 6\nMaxSessions 10\nRSAAuthentication yes\nPubkeyAuthentication yes\nThe default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\nbut this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile .ssh/authorized_keys\nAuthorizedKeysFile  \"D:/sft/OpenSSH-Win64/authorized_keys\"\nFor this to work you will also need host keys in /etc/ssh/ssh_known_hosts\nRhostsRSAAuthentication no\nsimilar for protocol version 2\nHostbasedAuthentication no\nChange to yes if you don't trust ~/.ssh/known_hosts for\nRhostsRSAAuthentication and HostbasedAuthentication\nIgnoreUserKnownHosts no\nDon't read the user's ~/.rhosts and ~/.shosts files\nIgnoreRhosts yes\nTo disable tunneled clear text passwords, change to no here!\nPasswordAuthentication yes\nPermitEmptyPasswords no\nChange to no to disable s/key passwords\nChallengeResponseAuthentication yes\nKerberos options\nKerberosAuthentication no\nKerberosOrLocalPasswd yes\nKerberosTicketCleanup yes\nKerberosGetAFSToken no\nGSSAPI options\nGSSAPIAuthentication no\nGSSAPICleanupCredentials yes\nSet this to 'yes' to enable PAM authentication, account processing,\nand session processing. If this is enabled, PAM authentication will\nbe allowed through the ChallengeResponseAuthentication and\nPasswordAuthentication.  Depending on your PAM configuration,\nPAM authentication via ChallengeResponseAuthentication may bypass\nthe setting of \"PermitRootLogin without-password\".\nIf you just want the PAM account and session checks to run without\nPAM authentication, then enable this but set PasswordAuthentication\nand ChallengeResponseAuthentication to 'no'.\nUsePAM no\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nGatewayPorts no\nX11Forwarding no\nX11DisplayOffset 10\nX11UseLocalhost yes\nPrintMotd yes\nPrintLastLog yes\nTCPKeepAlive yes\nUseLogin no\nUsePrivilegeSeparation yes\nPermitUserEnvironment yes\nCompression delayed\nClientAliveInterval 0\nClientAliveCountMax 3\nUseDNS yes\nPidFile /var/run/sshd.pid\nMaxStartups 10\nPermitTunnel no\nChrootDirectory none\nno default banner path\nBanner none\noverride default of no subsystems\nSubsystem   sftp    sftp-server.exe\nExample of overriding settings on a per-user basis\nMatch User anoncvs\nX11Forwarding no\nAllowTcpForwarding no\nForceCommand cvs server\nPubkeyAcceptedKeyTypes ssh-ed25519*\nhostkeyagent \\.\\pipe\\openssh-ssh-agent. 12056 22:18:18:392 debug3: fd 5 is not O_NONBLOCK\n12056 22:18:18:392 debug3: spawning \"D:\\sft\\OpenSSH-Win64\\sshd.exe\"\n12056 22:18:18:420 debug1: Forked child 9712.\n9712 22:18:18:499 debug1: sshd version OpenSSH_7.6, LibreSSL 2.5.3\n9712 22:18:18:509 debug1: private host key #0: ssh-rsa SHA256:AzKKsphmaXEjgsVS6rp9Oob5VKfpvmOnQ/6UynOqLlE\n9712 22:18:18:510 debug1: child socket: 396\n9712 22:18:18:510 debug1: child startup_pipe: 384\n9712 22:18:18:511 Connection from 10.10.2.3 port 49259 on 10.10.2.1 port 22\n9712 22:18:18:511 debug1: Client protocol version 2.0; client software version OpenSSH_7.3\n9712 22:18:18:511 debug1: match: OpenSSH_7.3 pat OpenSSH* compat 0x04000000\n9712 22:18:18:511 debug1: Local version string SSH-2.0-OpenSSH_7.6\n9712 22:18:18:511 debug2: fd 3 setting O_NONBLOCK\n9712 22:18:19:512 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256\n9712 22:18:19:512 debug3: send packet: type 20\n9712 22:18:19:512 debug1: SSH2_MSG_KEXINIT sent\n9712 22:18:19:513 debug3: receive packet: type 20\n9712 22:18:19:519 debug1: SSH2_MSG_KEXINIT received\n9712 22:18:19:522 debug2: local server KEXINIT proposal\n9712 22:18:19:522 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\n9712 22:18:19:522 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256\n9712 22:18:19:522 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n9712 22:18:19:522 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n9712 22:18:19:522 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n9712 22:18:19:522 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n9712 22:18:19:522 debug2: compression ctos: none\n9712 22:18:19:522 debug2: compression stoc: none\n9712 22:18:19:522 debug2: languages ctos: \n9712 22:18:19:522 debug2: languages stoc: \n9712 22:18:19:522 debug2: first_kex_follows 0 \n9712 22:18:19:522 debug2: reserved 0 \n9712 22:18:19:522 debug2: peer client KEXINIT proposal\n9712 22:18:19:522 debug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\n9712 22:18:19:522 debug2: host key algorithms: ssh-rsa-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519\n9712 22:18:19:522 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\n9712 22:18:19:522 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\n9712 22:18:19:522 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n9712 22:18:19:523 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n9712 22:18:19:523 debug2: compression ctos: none,zlib@openssh.com,zlib\n9712 22:18:19:523 debug2: compression stoc: none,zlib@openssh.com,zlib\n9712 22:18:19:523 debug2: languages ctos: \n9712 22:18:19:523 debug2: languages stoc: \n9712 22:18:19:523 debug2: first_kex_follows 0 \n9712 22:18:19:523 debug2: reserved 0 \n9712 22:18:19:523 debug1: kex: algorithm: curve25519-sha256@libssh.org\n9712 22:18:19:523 debug1: kex: host key algorithm: rsa-sha2-512\n9712 22:18:19:523 debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\n9712 22:18:19:523 debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\n9712 22:18:19:523 debug1: expecting SSH2_MSG_KEX_ECDH_INIT\n9712 22:18:19:531 debug3: receive packet: type 30\n9712 22:18:19:553 debug3: send packet: type 31\n9712 22:18:19:553 debug3: send packet: type 21\n9712 22:18:19:553 debug2: set_newkeys: mode 1\n9712 22:18:19:553 debug1: rekey after 134217728 blocks\n9712 22:18:19:553 debug1: SSH2_MSG_NEWKEYS sent\n9712 22:18:19:554 debug1: expecting SSH2_MSG_NEWKEYS\n9712 22:18:19:554 debug3: send packet: type 7\n9712 22:18:19:562 debug3: receive packet: type 21\n9712 22:18:19:562 debug1: SSH2_MSG_NEWKEYS received\n9712 22:18:19:562 debug2: set_newkeys: mode 0\n9712 22:18:19:562 debug1: rekey after 134217728 blocks\n9712 22:18:19:562 debug1: KEX done\n9712 22:18:19:602 debug3: receive packet: type 5\n9712 22:18:19:602 debug3: send packet: type 6\n9712 22:18:19:603 debug3: receive packet: type 50\n9712 22:18:19:603 debug1: userauth-request for user sara service ssh-connection method none\n9712 22:18:19:603 debug1: attempt 0 failures 0\n9712 22:18:19:603 debug2: parse_server_config: config reprocess config len 265\n9712 22:18:19:604 debug3: NetUserGetInfo() failed with error: 2221 for user: sara and domain: (null) \\n\n9712 22:18:19:605 error: DsGetDcNameW() failed with error: 1355 \\n\n9712 22:18:19:605 Invalid user sara from 10.10.2.3 port 49259\n9712 22:18:19:605 debug2: input_userauth_request: try method none\n9712 22:18:19:605 Failed none for invalid user sara from 10.10.2.3 port 49259 ssh2\n9712 22:18:19:605 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n9712 22:18:19:605 debug3: send packet: type 51\n9712 22:18:19:624 debug3: receive packet: type 50\n9712 22:18:19:624 debug1: userauth-request for user sara service ssh-connection method publickey\n9712 22:18:19:624 debug1: attempt 1 failures 0\n9712 22:18:19:624 debug2: input_userauth_request: try method publickey\n9712 22:18:19:624 debug2: userauth_pubkey: disabled because of invalid user\n9712 22:18:19:624 Failed publickey for invalid user sara from 10.10.2.3 port 49259 ssh2\n9712 22:18:19:624 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n9712 22:18:19:624 debug3: send packet: type 51\n9712 22:18:19:645 debug3: receive packet: type 50\n9712 22:18:19:645 debug1: userauth-request for user sara service ssh-connection method publickey\n9712 22:18:19:645 debug1: attempt 2 failures 1\n9712 22:18:19:645 debug2: input_userauth_request: try method publickey\n9712 22:18:19:645 debug2: userauth_pubkey: disabled because of invalid user\n9712 22:18:19:645 Failed publickey for invalid user sara from 10.10.2.3 port 49259 ssh2\n9712 22:18:19:645 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n9712 22:18:19:645 debug3: send packet: type 51\n9712 22:18:19:646 debug3: receive packet: type 50\n9712 22:18:19:646 debug1: userauth-request for user sara service ssh-connection method keyboard-interactive\n9712 22:18:19:646 debug1: attempt 3 failures 2\n9712 22:18:19:646 debug2: input_userauth_request: try method keyboard-interactive\n9712 22:18:19:646 debug1: keyboard-interactive devs \n9712 22:18:19:646 debug1: auth2_challenge: user=sara devs=\n9712 22:18:19:646 debug1: kbdint_alloc: devices ''\n9712 22:18:19:646 debug2: auth2_challenge_start: devices \n9712 22:18:19:646 Failed keyboard-interactive for invalid user sara from 10.10.2.3 port 49259 ssh2\n9712 22:18:19:646 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n9712 22:18:19:646 debug3: send packet: type 51\n9712 22:18:22:978 debug3: recv - from CB ERROR:10054, io:0000027190F84B30\n9712 22:18:22:979 Connection reset by invalid user sara 10.10.2.3 port 49259\n9712 22:18:22:979 debug1: do_cleanup\n. I'm waiting for your support . . . . @bagajjal Thank you and everyone, what is benefit of to exclude double quotes in the path ? it working with double quotes now. I have ENVIRONMENT VARIABLE named:\nHOME:  D:\\SFT\\OpenSSH_Client_Keys (it contains .ssh/config & .ssh/known_hosts & .ssh/a_key & .ssh/a_key.pub files)\nThe \"config\" file contains ssh key full PATH but ssh client does not load config file! why?\nssh -vvv gu_sadeh_cashier@127.0.0.1 dir\nOpenSSH_for_Windows_7.7p1, LibreSSL 2.6.4\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/config error:2\ndebug3: Failed to open file:PROGRAMDATA\\ssh/ssh_config error:2\ndebug2: resolve_canonicalize: hostname 127.0.0.1 is address\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to 127.0.0.1 [127.0.0.1] port 22.\ndebug1: Connection established.\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_rsa error:2\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_rsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Hamedsbt/.ssh/id_rsa type -1\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_rsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_rsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Hamedsbt/.ssh/id_rsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_dsa error:2\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_dsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Hamedsbt/.ssh/id_dsa type -1\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_dsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_dsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Hamedsbt/.ssh/id_dsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_ecdsa error:2\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_ecdsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Hamedsbt/.ssh/id_ecdsa type -1\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_ecdsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_ecdsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Hamedsbt/.ssh/id_ecdsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_ed25519 error:2\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_ed25519.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Hamedsbt/.ssh/id_ed25519 type -1\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_ed25519-cert error:2\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_ed25519-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Hamedsbt/.ssh/id_ed25519-cert type -1\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_xmss error:2\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_xmss.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Hamedsbt/.ssh/id_xmss type -1\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_xmss-cert error:2\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/id_xmss-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Hamedsbt/.ssh/id_xmss-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.7\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_for_Windows_7.7\ndebug1: match: OpenSSH_for_Windows_7.7 pat OpenSSH* compat 0x04000000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to 127.0.0.1:22 as 'gu_sadeh_cashier'\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/known_hosts error:2\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/known_hosts2 error:2\ndebug3: Failed to open file:PROGRAMDATA\\ssh/ssh_known_hosts error:2\ndebug3: Failed to open file:PROGRAMDATA\\ssh/ssh_known_hosts2 error:2\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug3: send packet: type 30\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug3: receive packet: type 31\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:CIwRhuKtgE68b/2Bl9dIfVkg2x//rBVPyupN7p54HwQ\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/known_hosts error:2\ndebug3: Failed to open file:C:\\Users\\Hamedsbt/.ssh/known_hosts2 error:2\ndebug3: Failed to open file:PROGRAMDATA\\ssh/ssh_known_hosts error:2\ndebug3: Failed to open file:PROGRAMDATA\\ssh/ssh_known_hosts2 error:2\ndebug3: failed to open file:/dev/tty error:3\ndebug1: read_passphrase: can't open /dev/tty: No such file or directory\nThe authenticity of host '127.0.0.1 (127.0.0.1)' can't be established.\nECDSA key fingerprint is SHA256:CIwRhuKtgE68b/2Bl9dIfVkg2x//rBVPyupN7p54HwQ.\nAre you sure you want to continue connecting (yes/no)?. I want to customize the \"user profile\" path and ssh filename for ssh client, how can I do that?. ",
    "icf3": "0.0.18.0 does not work like 0.0.17.0.\nWould you see it once again?\nMy TERM is \"xterm\" or \"vt100\"\nexport TERM=xterm\nor\nexport TERM=vt100\n. Sorry, I can't remove DISABLE_NEWLINE_AUTO_RETURN.\nIf it is possible, you try it.\nIf not, I hope Adding temporary special option of DISABLE_NEWLINE_AUTO_RETURN.\nSo, I'm happy. But,you do not need to do it.\nex)   ssh.exe --disable-newline-auto-return icf3@192.168.1.1 . OK : Emacs-TerminalIssue.zip ,  0.0.18.0 binary\nNG : 0.0.17.0 , 0.0.18.0 source\nIn 0.0.18.0 binary and 0.0.18.0 source, why are results different?\nCan I test Emacs-TerminalIssue souce code?\nThe reproduction is easy.\nYou just type \"Expected output image\".\ninclude \nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}. @bagajjal  -\n\n\nwhat do you mean by 0.0.18.0 binary and 0.0.18.0 source?\n\n\nThey are file that is enable to download in this site.\n\n\nCan you please confirm whether Emacs-TerminalIssue.zip fixed the regression?\n\n\nYes. But it may be only fix this emacs problem. And it is only binary.\n\n\nI tried - - - Can you please provide your observations?\n\n\nv0.0.18.0 is same as v0.0.17.0 at source level. That's while still having a emacs problem.\nEven if Emacs-TerminalIssue.zip doesn't set the \"DISABLE_NEWLINE_AUTO_RETURN\",\nthis may be version of only fix this emacs problem.\nIt could not help me. Because I wish for source cord.\n\nIf the windows SSH client is using win10+ then the control sequences received from the SSH server will be directly given to the conhost.exe process. Not sure if the conhost.exe is behaving incorrectly when this flag is set.\n\nIt is easy.\nIf you add temporary special option for this emacs problem, I'm happy.\nex) ssh.exe --disable-newline-auto-return icf3@192.168.1.1. This bug is fixed by Ver 0.0.19.0 (source code).\nI confirmed that my patch is included.\nThanks!. ",
    "hdatma": "\n\nI see errors from sshd at start-up. \n\n\nI usually write own keys using \"ssh-keygen -t ed25519 -o -a 100\". \nThe command works on Windows 10 Pro, but fails on Windows Server 2012 Foundation.  \n\n\n`--->  starting sshd...\n6472 20:21:52:909 debug1: sshd version OpenSSH_7.5, LibreSSL 2.5.3\n6472 20:21:52:909 debug3: socket:0, socktype:1, io:000000F3159D0860, fd:3 \n6472 20:21:52:909 debug3: close - io:000000F3159D0860, type:2, fd:3, table_index:3\n6472 20:21:52:909 debug3: open - handle:00000000000000F4, io:000000F3159D0BE0, fd:3\n6472 20:21:52:909 debug3: ReadFileEx() ERROR:38, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: read - no more data, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: ReadFileEx() ERROR:38, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: read - no more data, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: close - io:000000F3159D0BE0, type:2, fd:3, table_index:3\n6472 20:21:52:909 debug1: private host key #0: ssh-rsa SHA256:bCCuyJvd6le8bfIoZh9xudAWQ7ga36nmJLjtY6zXUqk\n6472 20:21:52:909 debug3: open - handle:00000000000000F4, io:000000F3159D0BE0, fd:3\n6472 20:21:52:909 debug3: ReadFileEx() ERROR:38, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: read - no more data, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: ReadFileEx() ERROR:38, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: read - no more data, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: close - io:000000F3159D0BE0, type:2, fd:3, table_index:3\n6472 20:21:52:909 debug1: private host key #1: ssh-dss SHA256:NYTII3zVccEcEGaG0JEtGbqko/z57PzHB1MuEbXdK4U\n6472 20:21:52:909 debug3: open - handle:00000000000000F4, io:000000F3159D0BE0, fd:3\n6472 20:21:52:909 debug3: ReadFileEx() ERROR:38, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: read - no more data, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: ReadFileEx() ERROR:38, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: read - no more data, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: close - io:000000F3159D0BE0, type:2, fd:3, table_index:3\n6472 20:21:52:909 debug1: private host key #2: ecdsa-sha2-nistp256 SHA256:Ak0Do+Pu82XFj0kHf+9IcX3wLIbGeeybSYwx7xAEtFI\n6472 20:21:52:909 debug3: open - handle:00000000000000F4, io:000000F3159D0BE0, fd:3\n6472 20:21:52:909 debug3: ReadFileEx() ERROR:38, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: read - no more data, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: ReadFileEx() ERROR:38, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: read - no more data, io:000000F3159D0BE0\n6472 20:21:52:909 debug3: close - io:000000F3159D0BE0, type:2, fd:3, table_index:3\n6472 20:21:52:909 debug1: private host key #3: ssh-ed25519 SHA256:BhQkyRplazLCfbGeh0EoKOhSYLL+AcL6GNm53lfkgDA\n6472 20:21:52:909 debug3: socket:228, socktype:1, io:000000F3159D0BE0, fd:3 \n6472 20:21:52:909 debug2: fd 3 setting O_NONBLOCK\n6472 20:21:52:909 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n6472 20:21:52:909 debug1: Bind to port 22 on ::.\n6472 20:21:52:909 Server listening on :: port 22.\n6472 20:21:52:909 debug3: socket:300, socktype:1, io:000000F3159D0E20, fd:4 \n6472 20:21:52:909 debug2: fd 4 setting O_NONBLOCK\n6472 20:21:52:909 debug1: Bind to port 22 on 0.0.0.0.\n6472 20:21:52:909 Server listening on 0.0.0.0 port 22.\n. Problem solved. \nSince nobody chimed in, I guess you already know the solution, so I will not share it. . The command \"ssh-keygen.exe -t ed25519 -o -a 100 -f ${HOME}/.ssh/id_ed25519\" should interact with the user, asking for a password to protect the private key soon to be generated. In the case of Win32-OpenSSH, however, the interaction fails: the command does not terminate, and you must interrupt it manually. The trick to bypass the interaction is to provide the password directly in the command, as in \"ssh-keygen.exe -t ed25519 -o -a 100 -f ${HOME}/.ssh/id_ed25519 -P your-password-here\". . ",
    "WesR": "clientRunning.txt\nsshd.log.3.txt\nI noticed \n3324 15:55:54:398 debug1: trying public key file C:/Users/dustin/.ssh/authorized_keys\n3324 15:55:54:413 debug3: Bad permission. N can only read access to C:/Users/dustin/.ssh/authorized_keys\n3324 15:55:54:413 Authentication refused.\nSo I ran it again giving it full permission to the location and got this:\nsshd.log.32.txt\nclientRunning2.txt\nBut was still getting the BadPermission flag, so I moved it to C:/ and gave every user full access to it and got:\n(Config now has AuthorizedKeysFile C:/authorized_keys)\nclientRunning3.txt\nsshd.log.33.txt\n. I did it again in user [dustin]'s account and it failed (matching your permissions fully). I moved it over to C:\\Users\\SSHD\\.ssh and removed all other users except the three you have listed and it worked.\nThank you so much for the help, I really appreciate it.. For anyone in the future, my config has these things changed:\nPubkeyAuthentication yes\nAuthorizedKeysFile C:/Users/SSHD/.ssh/authorized_keys\nPasswordAuthentication no. ",
    "milanbojovic": "Hello, after few days of struggle I have solved my problem with help of your comments.\nSteps: I am using Administrator user for remote machine in question, and I have commented sshd_config line #AuthorizedKeysFile...  (this line is used for setting location of authorized_keys file)  --> and from logs I have noticed that sshd service is searching for authorized_keys in C:\\Users\\Administrator.ssh directory, then I have moved my authorized_keys file from C:\\Program Files\\OpenSSH.ssh\\ to mentioned location and I have applied same restrictions for authorized_keys file like @bagajjal mentioned in his comment above.\nI have also tried to configure this location C:\\Users\\SSHD.ssh but probably I did something wrong there.. ",
    "asterikx": "@bagajjal's permission settings did the trick!\nI'd like to emphasize that the authorized_keys file's owner has to be Administrators. Setting it to Service NT\\sshd (as for thessh_host_ed25519_key private key file) the will result in a Bad owner error.. Yes, I did run it as system\nC:\\Program Files\\OpenSSH>whoami\nnt authority\\system. Thanks @manojampalam. This indeed gives me more information on what went wrong, but still I can't figure out the causing issue.\nServer-side output:\nC:\\Program Files\\OpenSSH>sshd.exe -ddd\ndebug2: load_server_config: filename __PROGRAMDATA__\\\\ssh/sshd_config\ndebug2: load_server_config: done config len = 168\ndebug2: parse_server_config: config __PROGRAMDATA__\\\\ssh/sshd_config len 168\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:25 setting LogLevel DEBUG3\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:39 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:77 setting Subsystem sftp sftp-server.exe\ndebug1: sshd version OpenSSH_7.6, LibreSSL 2.5.3\ndebug1: private host key #0: ssh-rsa SHA256:K7c/7Bdh/fcE/Ldb0I0REXxJ8LWbLfMLDYgBJGboVLE\ndebug1: private host key #1: ssh-dss SHA256:CSRd/ulPsEqftkWTEXhkzh2mRM/AerSBwrOVHqD+1Zk\ndebug1: private host key #2: ecdsa-sha2-nistp256 SHA256:SYsWLu8BRugZDIC4YxVY2bPkn4drfd8CS9pNQoX2ebc\ndebug1: private host key #3: ssh-ed25519 SHA256:VSh1cYltJmCYeS6Xg2i6LFK6PCYzCbvMoJSfeQ0yAHA\ndebug1: rexec_argv[0]='sshd.exe'\ndebug1: rexec_argv[1]='-ddd'\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug3: fd 5 is not O_NONBLOCK\ndebug1: Server will not fork when running in debugging mode.\ndebug3: send_rexec_state: entering fd = 8 config len 168\ndebug3: ssh_msg_send: type 0\ndebug3: send_rexec_state: done\nConnection from <CLIENT PUBLIC IP> port 49833 on <SERVER LOCAL IP> port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_7.6\ndebug1: match: OpenSSH_7.6 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_7.6\ndebug2: fd 5 setting O_NONBLOCK\nunable to generate token for user sshd\nunable to generate token on 2nd attempt for user sshd\nunable to get security token for user sshd\nposix_spawn failed\ndebug3: send_rexec_state: entering fd = 4 config len 168\ndebug3: ssh_msg_send: type 0\ndebug3: write ERROR from cb(2):232, io:000001CDDCA18640\nssh_msg_send: write\nsend_rexec_state: ssh_msg_send failed\ndebug1: do_cleanup\n. I was, checked it by running whoami just beofre `sshd.exe -ddd``\nBut anyways, I solved my issues, by removing C: \\Program Files\\OpenSSH and reinstalling. This time I extracted the archive via the Powershell (as admin). (Previously I did it via the GUI and as the currently logged in user. I adjusted the permissions to only include SYSTEM and the Administrators group (FullControl) but maybe they were corrupted nevertheless)\nFor future reference, here all the commands I run for removing the current installation and reinstalling (assuming the downloaded archive is located at D:\\Downlaods):\npowershell.exe -ExecutionPolicy Bypass -File 'C:\\Program Files\\OpenSSH\\uninstall-sshd.ps1'\ndel 'C:\\Program Files\\OpenSSH\\'\nExpand-Archive D:\\Downloads\\OpenSSH-Win64.zip -DestinationPath 'C:\\Program Files\\OpenSSH'\ncopy 'C:\\Program Files\\OpenSSH\\OpenSSH-Win64\\*' 'C:\\Program Files\\OpenSSH\\'\ndel 'C:\\Program Files\\OpenSSH\\OpenSSH-Win64\\'\npowershell.exe -ExecutionPolicy Bypass -File 'C:\\Program Files\\OpenSSH\\install-sshd.ps1'\npowershell.exe -ExecutionPolicy Bypass -File 'C:\\Program Files\\OpenSSH\\install-sshd.ps1'\npowershell.exe -ExecutionPolicy Bypass -File 'C:\\Program Files\\OpenSSH\\FixHostFilePermissions.ps1'\npowershell.exe -ExecutionPolicy Bypass -File 'C:\\Program Files\\OpenSSH\\FixUserFilePermissions.ps1'\nSet-Service sshd -StartupType Automatic\nSet-Service ssh-agent -StartupType Automatic\nAfter that the permissions on the C: \\Program Files\\OpenSSH folder were:\nicacls 'C:\\Program Files\\OpenSSH\\'\n      . NT SERVICE\\TrustedInstaller:(I)(F)\n        NT SERVICE\\TrustedInstaller:(I)(CI)(IO)(F)\n        NT AUTHORITY\\SYSTEM:(I)(F)\n        NT AUTHORITY\\SYSTEM:(I)(OI)(CI)(IO)(F)\n        BUILTIN\\Administrators:(I)(F)\n        BUILTIN\\Administrators:(I)(OI)(CI)(IO)(F)\n        BUILTIN\\Users:(I)(RX)\n        BUILTIN\\Users:(I)(OI)(CI)(IO)(GR,GE)\n        CREATOR OWNER:(I)(OI)(CI)(IO)(F)\n        APPLICATION PACKAGE AUTHORITY\\ALL APPLICATION PACKAGES:(I)(RX)\n        APPLICATION PACKAGE AUTHORITY\\ALL APPLICATION PACKAGES:(I)(OI)(CI)(IO)(GR,GE)\n        APPLICATION PACKAGE AUTHORITY\\ALL RESTRICTED APPLICATION PACKAGES:(I)(RX)\n        APPLICATION PACKAGE AUTHORITY\\ALL RESTRICTED APPLICATION PACKAGES:(I)(OI)(CI)(IO)(GR,GE)\n@manojampalam Maybe update the installation instructions? Previously I removed all permissions except for NT AUTHORITY\\SYSTEM and BUILTIN\\Administrators which were set to FullControl. I assume it's there where I messed it up.. For me it does have an effect. Unfortunately the connecting client gets the error message Error: 0x80070005 Press any key to continue.... Looks like it's a permission issue, but not sure what it is about. Holds for bash.exe as well as for wsl.exe.\n@wlsfan Did you set the key for HKEY_LOCAL_MACHINE\\SOFTWARE\\OpenSSH\\Agent by accident? Happened to me in the first place.. ",
    "Aevis": "Thanks, AllowUsers user?domain does work but not for the AllowGroups (hunters?forest) directive.\nThe sshd log file threw me off as it mixes syntaxes:\n1796 08:39:23:594 User john@forest from --IP-- not allowed because none of user's groups are listed in AllowGroups\n1796 08:39:23:594 Failed none for invalid user forest\\\\john from --IP-- port 50117 ssh2. This is a feature yet to be implemented, see #190\nThe only workaround seems to be restricting the user's access by setting your file system permissions accordingly.  . ",
    "jochemd": "```\nPS C:\\Users\\MY_USER_NAME.ssh> get-acl -path c:\\Users\\MY_USER_NAME.ssh\\id_rsa | select *\nPSPath                  : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\MY_USER_NAME.ssh\\id_rsa\nPSParentPath            : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\MY_USER_NAME.ssh\nPSChildName             : id_rsa\nPSDrive                 : C\nPSProvider              : Microsoft.PowerShell.Core\\FileSystem\nCentralAccessPolicyId   :\nCentralAccessPolicyName :\nPath                    : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\MY_USER_NAME.ssh\\id_rsa\nOwner                   : MY_DOMAIN\\MY_USER_NAME\nGroup                   :\nAccess                  : {System.Security.AccessControl.FileSystemAccessRule}\nSddl                    : O:S-1-5-21-1029124614-2511140237-2146021798-1251G:DUD:P(A;;0x1301bf;;;S-1-5-21-1029124614-251\n                          1140237-2146021798-1251)\nAccessToString          : MY_DOMAIN\\MY_USER_NAME Allow  Modify, Synchronize\nAuditToString           :\nAccessRightType         : System.Security.AccessControl.FileSystemRights\nAccessRuleType          : System.Security.AccessControl.FileSystemAccessRule\nAuditRuleType           : System.Security.AccessControl.FileSystemAuditRule\nAreAccessRulesProtected : True\nAreAuditRulesProtected  : False\nAreAccessRulesCanonical : True\nAreAuditRulesCanonical  : True\n```. I forgot to mention: I just installed the Fall Creators Update and I can't quite determine whether this was a problem before or not.. Tried them, but didn't make a difference.. I did a full uninstall, then installed 0.0.23.0 and now I am not experiencing the problem anymore.. ",
    "gatornation11": "It's related because people will give up on your software if it blows up every AV engine on the market.\n\nFrom: bagajjal notifications@github.com\nSent: Monday, July 24, 2017 8:54 PM\nTo: PowerShell/Win32-OpenSSH\nCc: Eric Logeson; Mention\nSubject: Re: [PowerShell/Win32-OpenSSH] Symantec blocks the download, nukes all the .exe files. (#819)\nHow is it related to OpenSSH?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/819#issuecomment-317596504, or mute the threadhttps://github.com/notifications/unsubscribe-auth/Ac61pndVkocjpHQ4Wq_AOikAEcN7oJq7ks5sRTzRgaJpZM4OeaEf.\n. ",
    "msftclas": "@rgl,\nThanks for your contribution.\nTo ensure that the project team has proper rights to use your work, please complete the Contribution License Agreement at https://cla.microsoft.com.\nIt will cover your contributions to all Microsoft-managed open source projects.\nThanks,\nMicrosoft Pull Request Bot. @rgl, thanks for signing the contribution license agreement. We will now validate the agreement and then the pull request.\nThanks, Microsoft Pull Request Bot. \n@annulus,\nThanks for having already signed the Contribution License Agreement. Your agreement has not been validated yet. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot.  All CLA requirements met..  All CLA requirements met..  All CLA requirements met..  All CLA requirements met.. ",
    "GoodMirek": "@bagajjal I appreciate that you tried and cannot reproduce the issue. However, the issue persists on my side. What other info or help can I provide?. @bagajjal Yes, I have tried to interrupt ping with Ctrl+C. I have also tried to interrupt others commands and also some powershell scripts, though not your example.\nIf I login from the same terminal to Linux machines, it works without problem.. @bagajjal Sorry for not being clear in my previous post. Interrupting of ping nor anything else with Ctrl+C never works when I am connected to the windows ssh server.. @bagajjal I do not have the affected machine available any longer. I have tried hard to reproduce on other machines, no luck - it works. Thank you for your time and effort, I am sorry I cannot uncover this mystery.. ",
    "spointu": "Win7 Enterprise x64 no SP applied. I'll try with a fully updated Win7 and let you know if the problem is resolved.. I have tested on an up-to-date Win7 and it's the same error.. It's ok now. I did not realise that the paths have changed to C:\\Program Files\\OpenSSH. I was still using OpenSSH-Win32.. ",
    "lejello": "Since you are specifying \"Azure Marketplace\" in your OS name, I'm guessing you are using an Azure VM.\nAzure SNAT and load balancers applies a 4 minutes default idle timeout to all inbound and outbound tcp connections. See https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-tcp-idle-timeout and https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-outbound-connections\n. ",
    "kviktor": "It was an administrator user, the Windows machine runs in a trusted environment so I just used sshpass in my script, not nice but works.. ",
    "stwongst": "Got it.  Thanks a lot.. ",
    "vovcacik": "@bingbing8 \n(Get-Acl C:\\Users\\Administrator\\.ssh/authorized_keys).Access\n```\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : PC\\Administrator\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : Read, Synchronize\nAccessControlType : Allow\nIdentityReference : NT SERVICE\\sshd\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\n```. I have tried to fix the file permission with bundled script OpenSSH utility scripts to fix file permissions\n```\nPS C:\\Program Files\\OpenSSH> Import-Module .\\OpenSSHUtils.psd1 -Force\nPS C:\\Program Files\\OpenSSH> Repair-AuthorizedKeyPermission -FilePath C:\\Users\\Administrator.ssh\\authorized_keys\n  [*] C:\\Users\\Administrator.ssh\\authorized_keys\n      looks good\nPS C:\\Program Files\\OpenSSH> (Get-Acl C:\\Users\\Administrator.ssh\\authorized_keys).Access\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : PC\\Administrator\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : Read, Synchronize\nAccessControlType : Allow\nIdentityReference : NT SERVICE\\sshd\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\n```\nThen I have restarted the sshd and ssh-agent services, removed all logs and tried to connect with this result:\n6512 10:56:30:862 debug1: trying public key file C:\\\\Users\\\\Administrator\\\\.ssh/authorized_keys\n6512 10:56:30:878 debug3: Failed to open file:C:\\\\Users\\\\Administrator\\\\.ssh/authorized_keys error:13\n6512 10:56:30:878 debug1: Could not open authorized keys 'C:\\\\Users\\\\Administrator\\\\.ssh/authorized_keys': Permission denied\n. @bagajjal \nI tried to grant full control to Administrators group and to the SYSTEM. I kept full control for my own account, as well as ownership of the authorized_keys file.\n``\nPS C:\\Users\\Administrator\\.ssh> icacls .\\authorized_keys /grant\"BUILTIN\\Administrators\":(F)\nprocessed file: .\\authorized_keys\nSuccessfully processed 1 files; Failed processing 0 files\nPS C:\\Users\\Administrator\\.ssh> icacls .\\authorized_keys /grant\"SYSTEM\":(F`)\nprocessed file: .\\authorized_keys\nSuccessfully processed 1 files; Failed processing 0 files\nPS C:\\Users\\Administrator.ssh> (Get-Acl C:\\Users\\Administrator.ssh\\authorized_keys).Access\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : NT AUTHORITY\\SYSTEM\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : BUILTIN\\Administrators\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : PC\\Administrator\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : Read, Synchronize\nAccessControlType : Allow\nIdentityReference : NT SERVICE\\sshd\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\n``\nThen I restarted the sshd and ssh-agent services, purged all logs and tried to connect - the sshd no longer tries to load authorized_keys. Even when I temporarily disable password authenticationPasswordAuthentication no`.\n@bingbing8 \nWith the above change it seems sshd does not like the permissions on the file and rejecting to read altogether (just my guess, the log is empty, see below). So I rerun the permission fix script:\n```\nPS C:\\Program Files\\OpenSSH> Import-Module .\\OpenSSHUtils.psd1 -Force\nPS C:\\Program Files\\OpenSSH> Repair-AuthorizedKeyPermission -FilePath C:\\Users\\Administrator.ssh\\authorized_keys\n  [*] C:\\Users\\Administrator.ssh\\authorized_keys\n      looks good\nPS C:\\Program Files\\OpenSSH> (Get-Acl C:\\Users\\Administrator.ssh\\authorized_keys).Access\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : NT AUTHORITY\\SYSTEM\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : BUILTIN\\Administrators\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : PC\\Administrator\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\nFileSystemRights  : Read, Synchronize\nAccessControlType : Allow\nIdentityReference : NT SERVICE\\sshd\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\n```\nAll seems to be fine, yet nothing changed; permissions are the same and sshd is not loading the authorized_keys:\n10080 11:20:16:995 debug1: sshd version OpenSSH_7.5, LibreSSL 2.5.3\n10080 11:20:16:995 debug3: socket:0, socktype:1, io:0000021434069470, fd:3 \n10080 11:20:16:995 debug3: close - io:0000021434069470, type:2, fd:3, table_index:3\n10080 11:20:16:995 debug3: failed to open file:./ssh_host_rsa_key error:2\n10080 11:20:16:995 debug1: key_load_private: No such file or directory\n10080 11:20:16:995 debug3: Failed to open file:./ssh_host_rsa_key error:2\n10080 11:20:16:995 debug1: will rely on agent for hostkey ./ssh_host_rsa_key\n10080 11:20:16:995 debug1: agent host key #0: ssh-rsa SHA256:YExvD7/Rnr+5AWn86WFaqTwnjZWlil3/W1EbHxlGfTM\n10080 11:20:16:995 debug3: failed to open file:./ssh_host_dsa_key error:2\n10080 11:20:16:995 debug1: key_load_private: No such file or directory\n10080 11:20:17:011 debug3: Failed to open file:./ssh_host_dsa_key error:2\n10080 11:20:17:011 debug1: will rely on agent for hostkey ./ssh_host_dsa_key\n10080 11:20:17:011 debug1: agent host key #1: ssh-dss SHA256:Y/3XrbMNDtK0OUoSuwhhF3+yuHla6jrDJCDMPX55YvY\n10080 11:20:17:011 debug3: failed to open file:./ssh_host_ecdsa_key error:2\n10080 11:20:17:011 debug1: key_load_private: No such file or directory\n10080 11:20:17:011 debug3: Failed to open file:./ssh_host_ecdsa_key error:2\n10080 11:20:17:011 debug1: will rely on agent for hostkey ./ssh_host_ecdsa_key\n10080 11:20:17:011 debug1: agent host key #2: ecdsa-sha2-nistp256 SHA256:Q2c1pa+mlZ1N0+aNN1XnOUkKLVpYh9RO7LBlsR9gAbw\n10080 11:20:17:011 debug3: failed to open file:./ssh_host_ed25519_key error:2\n10080 11:20:17:011 debug1: key_load_private: No such file or directory\n10080 11:20:17:011 debug3: Failed to open file:./ssh_host_ed25519_key error:2\n10080 11:20:17:011 debug1: will rely on agent for hostkey ./ssh_host_ed25519_key\n10080 11:20:17:011 debug1: agent host key #3: ssh-ed25519 SHA256:xIAKsqs/SltdRYenFQuvWR7ERvyZhNDqim815dZ7fC8\n10080 11:20:17:011 debug3: socket:248, socktype:1, io:00000214340693C0, fd:3 \n10080 11:20:17:011 debug2: fd 3 setting O_NONBLOCK\n10080 11:20:17:011 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n10080 11:20:17:011 debug1: Bind to port 22 on ::.\n10080 11:20:17:011 Server listening on :: port 22.\n10080 11:20:17:011 debug3: socket:276, socktype:1, io:0000021434068FA0, fd:4 \n10080 11:20:17:011 debug2: fd 4 setting O_NONBLOCK\n10080 11:20:17:011 debug1: Bind to port 22 on 0.0.0.0.\n10080 11:20:17:011 Server listening on 0.0.0.0 port 22.\n10080 11:20:17:011 debug3: Failed to open file:./sshd.pid error:13\n10080 11:20:17:011 error: Couldn't create pid file \"./sshd.pid\": Permission denied\n10080 11:20:19:839 debug3: socket:284, io:0000021434069310, fd:5 \n10080 11:20:19:839 debug3: fd 5 is not O_NONBLOCK\n10080 11:20:19:839 debug3: pipe - r-h:296,io:00000214340691B0,fd:6  w-h:292,io:0000021434068EF0,fd:7\n10080 11:20:19:839 debug3: spawning \"C:\\\\Program Files\\\\OpenSSH\\\\sshd.exe\"\n10080 11:20:19:839 debug3: Register child 0000000000000130 pid 2096, 0 zombies of 0\n10080 11:20:19:839 debug3: close - io:0000021434069310, type:1, fd:5, table_index:5\n10080 11:20:19:839 debug1: Forked child 2096.\n10080 11:20:19:839 debug3: close - io:0000021434068EF0, type:2, fd:7, table_index:7\n2096 11:20:19:902 debug1: sshd version OpenSSH_7.5, LibreSSL 2.5.3\n2096 11:20:19:902 debug3: socket:0, socktype:1, io:000002A341173A40, fd:3 \n2096 11:20:19:902 debug3: close - io:000002A341173A40, type:2, fd:3, table_index:3\n2096 11:20:19:902 debug3: failed to open file:./ssh_host_rsa_key error:2\n2096 11:20:19:902 debug1: key_load_private: No such file or directory\n2096 11:20:19:902 debug3: Failed to open file:./ssh_host_rsa_key error:2\n2096 11:20:19:902 debug1: will rely on agent for hostkey ./ssh_host_rsa_key\n2096 11:20:19:902 debug1: agent host key #0: ssh-rsa SHA256:YExvD7/Rnr+5AWn86WFaqTwnjZWlil3/W1EbHxlGfTM\n2096 11:20:19:902 debug3: failed to open file:./ssh_host_dsa_key error:2\n2096 11:20:19:902 debug1: key_load_private: No such file or directory\n2096 11:20:19:902 debug3: Failed to open file:./ssh_host_dsa_key error:2\n2096 11:20:19:902 debug1: will rely on agent for hostkey ./ssh_host_dsa_key\n2096 11:20:19:902 debug1: agent host key #1: ssh-dss SHA256:Y/3XrbMNDtK0OUoSuwhhF3+yuHla6jrDJCDMPX55YvY\n2096 11:20:19:902 debug3: failed to open file:./ssh_host_ecdsa_key error:2\n2096 11:20:19:902 debug1: key_load_private: No such file or directory\n2096 11:20:19:902 debug3: Failed to open file:./ssh_host_ecdsa_key error:2\n2096 11:20:19:902 debug1: will rely on agent for hostkey ./ssh_host_ecdsa_key\n2096 11:20:19:902 debug1: agent host key #2: ecdsa-sha2-nistp256 SHA256:Q2c1pa+mlZ1N0+aNN1XnOUkKLVpYh9RO7LBlsR9gAbw\n2096 11:20:19:902 debug3: failed to open file:./ssh_host_ed25519_key error:2\n2096 11:20:19:902 debug1: key_load_private: No such file or directory\n2096 11:20:19:902 debug3: Failed to open file:./ssh_host_ed25519_key error:2\n2096 11:20:19:902 debug1: will rely on agent for hostkey ./ssh_host_ed25519_key\n2096 11:20:19:902 debug1: agent host key #3: ssh-ed25519 SHA256:xIAKsqs/SltdRYenFQuvWR7ERvyZhNDqim815dZ7fC8\n2096 11:20:19:902 debug3: Failed to open file:./sshd.pid error:13\n2096 11:20:19:902 error: Couldn't create pid file \"./sshd.pid\": Permission denied\n2096 11:20:19:902 debug1: child socket: 284\n2096 11:20:19:902 debug1: child startup_pipe: 292\n2096 11:20:19:902 Connection from ::1 port 59586 on ::1 port 22\n2096 11:20:19:917 debug1: Client protocol version 2.0; client software version PuTTYTray_p0.66_t028\n2096 11:20:19:917 debug1: no match: PuTTYTray_p0.66_t028\n2096 11:20:19:917 debug1: Local version string SSH-2.0-OpenSSH_7.5\n2096 11:20:19:917 debug2: fd 3 setting O_NONBLOCK\n2096 11:20:19:917 debug3: socket:0, socktype:1, io:000002A341154A90, fd:5 \n2096 11:20:19:917 debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms\n2096 11:20:19:917 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n2096 11:20:19:917 debug3: send packet: type 20\n2096 11:20:19:917 debug1: SSH2_MSG_KEXINIT sent\n2096 11:20:19:917 debug3: receive packet: type 20\n2096 11:20:19:917 debug1: SSH2_MSG_KEXINIT received\n2096 11:20:19:917 debug2: local server KEXINIT proposal\n2096 11:20:19:917 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\n2096 11:20:19:917 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n2096 11:20:19:917 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n2096 11:20:19:917 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n2096 11:20:19:917 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n2096 11:20:19:917 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n2096 11:20:19:917 debug2: compression ctos: none\n2096 11:20:19:917 debug2: compression stoc: none\n2096 11:20:19:917 debug2: languages ctos: \n2096 11:20:19:917 debug2: languages stoc: \n2096 11:20:19:917 debug2: first_kex_follows 0 \n2096 11:20:19:917 debug2: reserved 0 \n2096 11:20:19:917 debug2: peer client KEXINIT proposal\n2096 11:20:19:917 debug2: KEX algorithms: diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1,rsa2048-sha256,rsa1024-sha1\n2096 11:20:19:917 debug2: host key algorithms: ssh-rsa,ssh-dss\n2096 11:20:19:917 debug2: ciphers ctos: aes256-ctr,aes256-cbc,rijndael-cbc@lysator.liu.se,aes192-ctr,aes192-cbc,aes128-ctr,aes128-cbc,blowfish-ctr,blowfish-cbc,3des-ctr,3des-cbc,arcfour256,arcfour128\n2096 11:20:19:917 debug2: ciphers stoc: aes256-ctr,aes256-cbc,rijndael-cbc@lysator.liu.se,aes192-ctr,aes192-cbc,aes128-ctr,aes128-cbc,blowfish-ctr,blowfish-cbc,3des-ctr,3des-cbc,arcfour256,arcfour128\n2096 11:20:19:917 debug2: MACs ctos: hmac-sha2-256,hmac-sha1,hmac-sha1-96,hmac-md5\n2096 11:20:19:917 debug2: MACs stoc: hmac-sha2-256,hmac-sha1,hmac-sha1-96,hmac-md5\n2096 11:20:19:917 debug2: compression ctos: none,zlib\n2096 11:20:19:917 debug2: compression stoc: none,zlib\n2096 11:20:19:917 debug2: languages ctos: \n2096 11:20:19:917 debug2: languages stoc: \n2096 11:20:19:917 debug2: first_kex_follows 0 \n2096 11:20:19:917 debug2: reserved 0 \n2096 11:20:19:917 debug1: kex: algorithm: diffie-hellman-group-exchange-sha256\n2096 11:20:19:917 debug1: kex: host key algorithm: ssh-rsa\n2096 11:20:19:917 debug1: kex: client->server cipher: aes256-ctr MAC: hmac-sha2-256 compression: none\n2096 11:20:19:917 debug1: kex: server->client cipher: aes256-ctr MAC: hmac-sha2-256 compression: none\n2096 11:20:19:917 debug1: expecting SSH2_MSG_KEX_DH_GEX_REQUEST\n2096 11:20:19:917 debug3: receive packet: type 34\n2096 11:20:19:917 debug1: SSH2_MSG_KEX_DH_GEX_REQUEST received\n2096 11:20:19:917 debug3: Failed to open file:./moduli error:2\n2096 11:20:19:917 WARNING: could not open ./moduli (No such file or directory), using fixed modulus\n2096 11:20:19:917 debug3: dh_new_group_fallback: requested max size 8192\n2096 11:20:19:917 debug3: using 8k bit group 18\n2096 11:20:19:917 debug1: SSH2_MSG_KEX_DH_GEX_GROUP sent\n2096 11:20:19:917 debug3: send packet: type 31\n2096 11:20:20:011 debug2: bits set: 4057/8192\n2096 11:20:20:011 debug1: expecting SSH2_MSG_KEX_DH_GEX_INIT\n2096 11:20:20:558 debug3: receive packet: type 32\n2096 11:20:20:558 debug2: bits set: 4109/8192\n2096 11:20:20:683 debug3: send packet: type 33\n2096 11:20:20:683 debug3: send packet: type 21\n2096 11:20:20:683 debug2: set_newkeys: mode 1\n2096 11:20:20:683 debug1: rekey after 4294967296 blocks\n2096 11:20:20:683 debug1: SSH2_MSG_NEWKEYS sent\n2096 11:20:20:683 debug1: expecting SSH2_MSG_NEWKEYS\n2096 11:20:21:245 debug3: receive packet: type 21\n2096 11:20:21:245 debug1: SSH2_MSG_NEWKEYS received\n2096 11:20:21:245 debug2: set_newkeys: mode 0\n2096 11:20:21:245 debug1: rekey after 4294967296 blocks\n2096 11:20:21:245 debug1: KEX done\n2096 11:20:21:245 debug3: receive packet: type 5\n2096 11:20:21:245 debug3: send packet: type 6\n2096 11:20:21:245 debug3: receive packet: type 50\n2096 11:20:21:245 debug1: userauth-request for user Administrator service ssh-connection method none\n2096 11:20:21:245 debug1: attempt 0 failures 0\n2096 11:20:21:245 debug2: parse_server_config: config reprocess config len 248\n2096 11:20:21:245 debug2: input_userauth_request: setting up authctxt for Administrator\n2096 11:20:21:245 debug2: input_userauth_request: try method none\n2096 11:20:21:245 Failed none for Administrator from ::1 port 59586 ssh2\n2096 11:20:21:245 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n2096 11:20:21:245 debug3: send packet: type 51\n2096 11:20:21:245 debug3: receive packet: type 50\n2096 11:20:21:245 debug1: userauth-request for user Administrator service ssh-connection method keyboard-interactive\n2096 11:20:21:245 debug1: attempt 1 failures 0\n2096 11:20:21:245 debug2: input_userauth_request: try method keyboard-interactive\n2096 11:20:21:245 debug1: keyboard-interactive devs \n2096 11:20:21:245 debug1: auth2_challenge: user=Administrator devs=\n2096 11:20:21:245 debug1: kbdint_alloc: devices ''\n2096 11:20:21:245 debug2: auth2_challenge_start: devices \n2096 11:20:21:245 Failed keyboard-interactive for Administrator from ::1 port 59586 ssh2\n2096 11:20:21:245 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n2096 11:20:21:245 debug3: send packet: type 51\n2096 11:20:23:730 Connection closed by authenticating user Administrator ::1 port 59586\n2096 11:20:23:730 debug1: do_cleanup\n10080 11:20:23:730 debug3: close - io:00000214340691B0, type:2, fd:6, table_index:6\n10080 11:20:23:730 debug3: zombie'ing child at index 0, 0 zombies of 1\n10080 11:20:23:730 debug3: Unregister child at index 0, 1 zombies of 1. @bagajjal I tried to set the permissions exactly as on your screenshot, but still the same problem - authorzied_keys is not even attempted to be read.. I took another approach, I've removed all permissions on the authorized_keys file and kept ownership. Then I run the fix script:\n```\nPS C:\\Program Files\\OpenSSH> Import-Module .\\OpenSSHUtils.psd1 -Force\nPS C:\\Program Files\\OpenSSH> Repair-AuthorizedKeyPermission -FilePath C:\\Users\\Administrator.ssh\\authorized_keys\n  [*] C:\\Users\\Administrator.ssh\\authorized_keys\n'NT SERVICE\\sshd' needs Read access to 'C:\\Users\\Administrator.ssh\\authorized_keys'.\nShall I make the above change?\n[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is \"Y\"):\n'NT SERVICE\\sshd' now has Read access to 'C:\\Users\\Administrator.ssh\\authorized_keys'.\n      Repaired permissions\nPS C:\\Program Files\\OpenSSH> (Get-Acl C:\\Users\\Administrator.ssh\\authorized_keys).Access\nFileSystemRights  : Read, Synchronize\nAccessControlType : Allow\nIdentityReference : NT SERVICE\\sshd\nIsInherited       : False\nInheritanceFlags  : None\nPropagationFlags  : None\n```\nI also tried to check Effective access and it looks just fine:\n\nI get same results when I assign additional permission to Traverse folder/execute file or even Full control.\nAlso note that I have input NT SERVICE\\sshd, but the ui abbreviate it to just sshd.\nI made sure the sshd processes are running with correct permissions:\nsshd.exe    NT SERVICE\\sshd\nssh-agent.exe   NT AUTHORITY\\SYSTEM\nDespite all that:\n6524 11:47:15:895 debug1: trying public key file C:\\\\Users\\\\Administrator\\\\.ssh/authorized_keys\n6524 11:47:15:895 debug3: Failed to open file:C:\\\\Users\\\\Administrator\\\\.ssh/authorized_keys error:13\n6524 11:47:15:895 debug1: Could not open authorized keys 'C:\\\\Users\\\\Administrator\\\\.ssh/authorized_keys': Permission denied\n. I managed to successfully install the OpenSSH on another Windows 10 machine. I will try to reinstall OpenSSH on the problematic machine, but as far as I can tell the only difference was that I have skipped the New-NetFirewallRule -Protocol TCP -LocalPort 22 -Direction Inbound -Action Allow -DisplayName SSH line in installation instructions and went for netsh advfirewall firewall add rule name='SSH Port' dir=in action=allow protocol=TCP localport=22 directly. I ran both lines on the first machine.. I didn't solve this issue, however I think I have provide enough data to point finger at win32-openssh. Especially the fact, that Windows reported proper permissions for user sshd in Effective access view.\nI no longer need this to fix.. @manojampalam yes, the gpg-agent creates S.gpg-agent.ssh file with TCP port number it listens on and authorization cookie. I believe this way it is compatible with cygwin environment, but unfortunately not with this project (that is using named pipes).\n. @bagajjal I understand, thanks.\nWhen you get to it, make sure you work with the official Windows builds available from gpg ftp (ftp://ftp.gnupg.org/gcrypt/binary/). It is far more superior than Gpg4win, but it is bit hidden out of sight and not advertised at all.\n. My S.gpg-agent.ssh contains port number and 16 byte cookie. I am using ftp://ftp.gnupg.org/gcrypt/binary/.. @coldacid it is neither Cygwin-based, MSYS-based nor Gpg4win, but rather official native build.\ngpg (GnuPG) 2.1.21\nlibgcrypt 1.7.6. Yeah looks like #827, but [notice that I used official gpg build for Windows][1] and not Gpg4Win. But it should be about the same.\n[1]: https://github.com/PowerShell/Win32-OpenSSH/issues/827#issuecomment-321972634. @coldacid Ah, good to know. Last time I installed gpg4win I think it had outdated version of gpg, which seems not to be true anymore. Then I found lighter build on gpg's ftp server that was better fit for me.. ",
    "sspencer3": "I was seeing this same issue and while it may not have been vovcacik's issue I figured I'd post here to assist anyone else that runs into it. The problem ended up being that I had mistakenly created \"authorized_keys\" as a folder with my .pub key file simply copied into the folder. Authorized_keys should be created as a generic text file with the text of the pub key file copied into Athorized_keys.\nTo accomplish this I did the following;\n\nUsed notepad to create a text file named authorized_keys in C:\\users\\username\\ .ssh\\\nCopied the contents of my .pub key file into the authorized_keys text file as a single line of text.\nUsed \"Save As\" to change the encoding to use UTF-8 because the default ANSI can have issues being read by the sshd service.\nAfter closing the authorized_keys file I then removed its .txt extension. To do this you may need to uncheck \"Hide extensions for known file types\" from the Windows Folder Options control panel. When done correctly Windows should now show the file type as \"File\" instead of \"Text Document\".\nI then used icacls to updated the permissions for the authorized_keys file as shown here: https://github.com/PowerShell/Win32-OpenSSH/wiki/Security-protection-of-various-files-in-win32-openssh\nI then updated the sshd_config file's \"AuthorizedKeysFile\" line to point to C:\\users\\username\\ .ssh\\authorized_keys\nRestart sshd service\nTest SSH connection. \n",
    "darrynhoskingluna": "@sspencer3 thank you. That resolved my issue. \nFor anyone else, follow @sspencer3's instructions then run the following to set the permissions correctly\nIn an elevated powershell open and run the following\nImport-Module .\\OpenSSHUtils.psd1 -Force\nRepair-AuthorizedKeyPermission -FilePath C:\\Users\\username.ssh\\authorized_keys. ",
    "sgargel": "I've trouble too:\nPS C:\\Program Files\\OpenSSH-Win64> Import-Module .\\OpenSSHUtils.psd1 -Force\n```\nPS C:\\Program Files\\OpenSSH-Win64> Repair-AuthorizedKeyPermission -FilePath C:\\Users\\Administrator.DOMAIN.ssh\\authoriz\ned_keys\n  [*] C:\\Users\\Administrator.DOMAIN.ssh\\authorized_keys\nNeed to remove the inheritance before repair the rules.\nShall I remove the inheritace?\n[S] S\u00ec  [T] S\u00ec a tutti  [N] No  [U] No a tutti  [O] Sospendi  [?] Guida (il valore predefinito \u00e8 \"S\"): s\nInheritance is removed from 'C:\\Users\\Administrator.DOMAIN.ssh\\authorized_keys'.\n'NT AUTHORITY\\SYSTEM' has the following access to 'C:\\Users\\Administrator.DOMAIN.ssh\\authorized_keys': 'Allow'-'Read,\n Synchronize'.\nShall I make it Allow FullControl?\n[S] S\u00ec  [T] S\u00ec a tutti  [N] No  [U] No a tutti  [O] Sospendi  [?] Guida (il valore predefinito \u00e8 \"S\"): s\n'NT AUTHORITY\\SYSTEM' now has FullControl access to 'C:\\Users\\Administrator.DOMAIN.ssh\\authorized_keys'.\n      Repaired permissions\nPS C:\\Program Files\\OpenSSH-Win64> Repair-AuthorizedKeyPermission -FilePath C:\\Users\\Administrator.DOMAIN.ssh\\authoriz\ned_keys\n  [*] C:\\Users\\Administrator.DOMAIN.ssh\\authorized_keys\n      looks good\n```\nPS C:\\Program Files\\OpenSSH-Win64> Repair-AuthorizedKeyPermission -FilePath C:\\Users\\Administrator.DOMAIN\\.ssh\\authoriz\ned_keys\n  [*] C:\\Users\\Administrator.DOMAIN\\.ssh\\authorized_keys\n      looks good\n```\nPS C:\\Program Files\\OpenSSH-Win64> icacls.exe C:\\Users\\Administrator.DOMAIN.ssh\nC:\\Users\\Administrator.DOMAIN.ssh DOMAIN\\Administrator:(OI)(CI)(F)\n                                    NT AUTHORITY\\SYSTEM:(OI)(CI)(R)\nElaborazione completata per 1 file. Elaborazione non riuscita per 0 file\nPS C:\\Program Files\\OpenSSH-Win64> icacls.exe C:\\Users\\Administrator.DOMAIN.ssh\\authorized_keys\nC:\\Users\\Administrator.DOMAIN.ssh\\authorized_keys NT AUTHORITY\\SYSTEM:(F)\n                                                    DOMAIN\\Administrator:(F)\nElaborazione completata per 1 file. Elaborazione non riuscita per 0 file\n```\nOn the linux client side:\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: .ssh/id_rsa\ndebug3: send_pubkey_test\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive. @bingbing8\n C:\\Users\\Administrator.DOMAIN\\.ssh\\authorized_keys is a file containing my pub key. ",
    "gpoul": "Just to make sure this is linked here, as it might be interesting context...\nhttps://lists.gnupg.org/pipermail/gnupg-devel/2017-April/032825.html\nhttps://lists.gnupg.org/pipermail/gnupg-devel/2017-April/032829.html\nhttps://lists.gnupg.org/pipermail/gnupg-devel/2017-May/032854.html\nWish you luck!. Does the AF_UNIX socket support in WSL sound like something that might help us achieve this?\nhttps://youtu.be/Zi0eofqAkXU?t=1919. ",
    "btolfa": "There is wsl-ssh-pageant which allows using Pageant (or gpg4win) from WSL. I reworked it to use named pipe instead of stdin and stdout for communication. https://github.com/btolfa/pipe-ssh-pageant\nIt allows me to use Windows 10 OpenSSH Client with GPG.. @coldacid GnuPG already supports Pageant(putty) protocol (enable-putty-support option).\nAlso there is npiperelay project. It allows you to access a Windows named pipe from WSL and supports libassuan windows sockets. But it doesn't create named pipe.. ",
    "tavrez": "Late to the party, any results?. @coldacid I always get \"The agent has no identities.\" or \"error fetching identities: invalid format\" depend on what I write in sshcontrol file with what you mentioned. \ud83d\ude15\nCan you explain how you set them to work?. @coldacid I can't even use PuTTY without sshcontrol \ud83d\ude01 \nwhen I write proper keygrip in sshcontrol and my PuTTY is correctly working using ssh or ssh-add will give me invalid format error. I also failed using the wsl ssh with proper app :/\nMay I know which Win 10 version you are using and if your keys are in a card or no?. Thanks for the help, seems like my Windows version(1709) only supports ed25519 keys. I need to upgrade.. ",
    "RaymondLC92": "Btolfa's program doesn't appear to be working for me (Gpg4Win v3.1.2),\nI am clearly connecting to the server (I added a console log to the source code) however ssh-add -L is showing \"The agent has no identities.\" despite gpg -K --with-keygrip listing all of my keys.\nI have added the keygrip of the key into %APPDATA%\\gnupg\\sshcontrol although I don't know if that's entirely necessary. After restarting the agent, as well as btolfa's program I have the same effect.\nI have a gpg key with Authorization rights:\nsub   rsa4096 2018-08-15 [A]\n      Keygrip = ****************************************\nResult of echoing SSH_AUTH_SOCK:\n```\n\necho %SSH_AUTH_SOCK%\n\\.\\pipe\\ssh-pageant\n```\n\nThese are the lines I added with their context:\npipeServer.WaitForConnection();\nConsole.WriteLine(\"Connection Established\");\nvar fieldLength = new Byte[4];\nConsole.WriteLine(\"Reading...\");\nwhile (pipeServer.Read(bytes, 0, 4) != 0)\npipeServer.Write(msg, 0, msg.Length);\nConsole.WriteLine(BitConverter.ToString(msg));\nThis is the data I logged from the software (every time I run ssh-add -L)\nConnection Established\nReading...\n00-00-00-05-0C-00-00-00-00\nI'm unsure why I'm having such an issue with this.\nMy gpg-agent.conf:\nenable-putty-support\nenable-ssh-support\ndefault-cache-ttl 600\nmax-cache-ttl 7200\nIf I kill the gpg-agent and try ssh-add -L I get \"ssh-add -L\nerror fetching identities: invalid format\" with the following output:\nConnection Established\nReading...\n00-00-00-01-0B\nI believe that this means the pipeline is functioning correctly, however I have no idea why my keys aren't accessible.. @coldacid Can do, just wasn't sure if it was an issue with his tool or with something I configured wrong.\nEdit: It doesn't seem possible to actually make an issue on @Btolfa's repo.. It seems I can't make issues on @btolfa's repo and I am still unable to link the two together.\nIt would be really nice if Win32-OpenSSH and GPG4Win would just play nice. . ",
    "Riebart": "So it turns out that I've been hacking away at this from a slightly different angle. I wanted to use my Yubikeys with WSL ssh and gpg toolchains, so I wrote a Python wsl-gpg bridge to bridge the TCP Assuan sockets exposed by the GnuPG Windows binaries to the usual Unix sockets in WSL.\nFor use as a gpg-agent drop-in, it works perfectly. All smart-card functionality works with the gpg WSL toolchain.\nFor use as an ssh-agent drop-in, it fails in the exact same way: The nonce sends, the first command sends, there's TCP ACKs back, but nothing else, and the WSL ssh-add hangs.\nWhile we can't get any working ssh-agent client sessions to test against, since this does work for gpg, that tells me that I am proxying the Assuan socket nonces correctly, and sending the commands, but the server is just refusing to play nice.\nI don't know if this helps anyone, but it's another breadcrumb along the way?. Quick update: I've got an experimental Python script that acts as a replacement for the gpg-agent.exe SSH support, by acting as a bridge between an Assuan socket and the fully-functioning PuTTY support provided by --enable-putty-support.\nIt's still very much in development, but since the Pageant protocol is identical to ssh-agent's, this just acts as a TCP/Assuan-to-WindowsMemoryMappedFile bridge using Paramiko. So far it successfully allows WSL ssh-agent to access my Yubikey-stored PGP keys as SSH keys.\nExample output from WSL with gpgbridge.py daemon running in the WSL background, and ssh-pageant.py running in Powershell.\n```bash\nMichael@Prometheus ~\n$ gpg --card-status\nReader ...........: Yubico Yubikey 4 OTP U2F CCID 0\n\nKey attributes ...: rsa4096 rsa4096 rsa4096\n\nMichael@Prometheus ~\n$ SSH_AUTH_SOCK=gpgconf --list-dirs agent-ssh-socket ssh-add -l\n4096 SHA256:k47UjP+fsh9esiiJ4RWLRaKVTJ3Pbt3bSQVSFNKEKT8 cardno:000600000000 (RSA)\n```. ",
    "acolomb": "I just tested the recent Go-based reimplementation at https://github.com/benpye/wsl-ssh-pageant.  Works like a charm!\nI'd still really appreciate if GnuPG and OpenSSH-Win32 could come to an agreement that makes gpg-agent's --enable-ssh-support work out-of-the-box, without first starting some bridging application.. ",
    "colemickens": "Any update on getting official support without needing a bridge or WSL? Windows 10 is the last place I have to use a non-hardware-protected private key.. Thanks for the comprehensive answer. I'll take a look. Going to close for now, assuming it's an env issue. Cheers!. ",
    "psmolkin": "Unfortunately it didn't help me. So I modified that service which I tried to start remotely as console app.\nAnd yes, this issue can be closed. Thanks. \n. same problem (only with key authorization)\npassword authorization works fine. @bagajjal \nvia key (failed):\n2980 2018-03-08 09:36:05.626 debug2: fd 3 setting O_NONBLOCK\n2980 2018-03-08 09:36:05.626 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n2980 2018-03-08 09:36:05.626 debug1: Bind to port 22 on ::.\n2980 2018-03-08 09:36:05.626 Server listening on :: port 22.\n2980 2018-03-08 09:36:05.626 debug2: fd 4 setting O_NONBLOCK\n2980 2018-03-08 09:36:05.626 debug1: Bind to port 22 on 0.0.0.0.\n2980 2018-03-08 09:36:05.626 Server listening on 0.0.0.0 port 22.\n2980 2018-03-08 09:37:16.173 debug3: fd 5 is not O_NONBLOCK\n2980 2018-03-08 09:37:16.173 debug3: spawning \"C:\\\\Program Files\\\\OpenSSH-Win64\\\\sshd.exe\" \"-R\"\n2980 2018-03-08 09:37:16.173 debug3: send_rexec_state: entering fd = 8 config len 167\n2980 2018-03-08 09:37:16.173 debug3: ssh_msg_send: type 0\n2980 2018-03-08 09:37:16.189 debug3: send_rexec_state: done\n9168 2018-03-08 09:37:16.220 debug1: inetd sockets after dupping: 3, 3\n9168 2018-03-08 09:37:16.220 Connection from 192.168.10.235 port 50822 on 192.168.10.188 port 22\n9168 2018-03-08 09:37:16.220 debug1: Client protocol version 2.0; client software version OpenSSH_7.4p1 Debian-10+deb9u2\n9168 2018-03-08 09:37:16.220 debug1: match: OpenSSH_7.4p1 Debian-10+deb9u2 pat OpenSSH* compat 0x04000000\n9168 2018-03-08 09:37:16.220 debug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.6\n9168 2018-03-08 09:37:16.220 debug2: fd 3 setting O_NONBLOCK\n9168 2018-03-08 09:37:16.236 debug3: spawning \"C:\\\\Program Files\\\\OpenSSH-Win64\\\\sshd.exe\" \"-y\"\n9168 2018-03-08 09:37:16.251 debug3: send_rexec_state: entering fd = 6 config len 167\n9168 2018-03-08 09:37:16.251 debug3: ssh_msg_send: type 0\n9168 2018-03-08 09:37:16.251 debug3: send_rexec_state: done\n9168 2018-03-08 09:37:16.251 debug3: ssh_msg_send: type 0\n9168 2018-03-08 09:37:16.251 debug3: ssh_msg_send: type 0\n9168 2018-03-08 09:37:16.251 debug3: preauth child monitor started\n9168 2018-03-08 09:37:16.267 debug3: privsep user:group 1:0 [preauth]\n9168 2018-03-08 09:37:16.267 debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms [preauth]\n9168 2018-03-08 09:37:16.267 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n9168 2018-03-08 09:37:16.267 debug3: send packet: type 20 [preauth]\n9168 2018-03-08 09:37:16.267 debug1: SSH2_MSG_KEXINIT sent [preauth]\n9168 2018-03-08 09:37:16.267 debug3: receive packet: type 20 [preauth]\n9168 2018-03-08 09:37:16.267 debug1: SSH2_MSG_KEXINIT received [preauth]\n9168 2018-03-08 09:37:16.267 debug2: local server KEXINIT proposal [preauth]\n9168 2018-03-08 09:37:16.267 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1 [preauth]\n9168 2018-03-08 09:37:16.267 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n9168 2018-03-08 09:37:16.267 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n9168 2018-03-08 09:37:16.267 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n9168 2018-03-08 09:37:16.267 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n9168 2018-03-08 09:37:16.267 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n9168 2018-03-08 09:37:16.267 debug2: compression ctos: none [preauth]\n9168 2018-03-08 09:37:16.267 debug2: compression stoc: none [preauth]\n9168 2018-03-08 09:37:16.267 debug2: languages ctos:  [preauth]\n9168 2018-03-08 09:37:16.267 debug2: languages stoc:  [preauth]\n9168 2018-03-08 09:37:16.267 debug2: first_kex_follows 0  [preauth]\n9168 2018-03-08 09:37:16.267 debug2: reserved 0  [preauth]\n9168 2018-03-08 09:37:16.267 debug2: peer client KEXINIT proposal [preauth]\n9168 2018-03-08 09:37:16.267 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c [preauth]\n9168 2018-03-08 09:37:16.267 debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa [preauth]\n9168 2018-03-08 09:37:16.267 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc [preauth]\n9168 2018-03-08 09:37:16.267 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc [preauth]\n9168 2018-03-08 09:37:16.267 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n9168 2018-03-08 09:37:16.267 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n9168 2018-03-08 09:37:16.267 debug2: compression ctos: none,zlib@openssh.com,zlib [preauth]\n9168 2018-03-08 09:37:16.267 debug2: compression stoc: none,zlib@openssh.com,zlib [preauth]\n9168 2018-03-08 09:37:16.267 debug2: languages ctos:  [preauth]\n9168 2018-03-08 09:37:16.267 debug2: languages stoc:  [preauth]\n9168 2018-03-08 09:37:16.267 debug2: first_kex_follows 0  [preauth]\n9168 2018-03-08 09:37:16.267 debug2: reserved 0  [preauth]\n9168 2018-03-08 09:37:16.267 debug1: kex: algorithm: curve25519-sha256 [preauth]\n9168 2018-03-08 09:37:16.267 debug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\n9168 2018-03-08 09:37:16.267 debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\n9168 2018-03-08 09:37:16.267 debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\n9168 2018-03-08 09:37:16.267 debug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\n9168 2018-03-08 09:37:16.267 debug3: receive packet: type 30 [preauth]\n9168 2018-03-08 09:37:16.282 debug3: mm_key_sign entering [preauth]\n9168 2018-03-08 09:37:16.282 debug3: mm_request_send entering: type 6 [preauth]\n9168 2018-03-08 09:37:16.282 debug3: mm_key_sign: waiting for MONITOR_ANS_SIGN [preauth]\n9168 2018-03-08 09:37:16.282 debug3: mm_request_receive_expect entering: type 7 [preauth]\n9168 2018-03-08 09:37:16.282 debug3: mm_request_receive entering [preauth]\n9168 2018-03-08 09:37:16.282 debug3: mm_request_receive entering\n9168 2018-03-08 09:37:16.282 debug3: monitor_read: checking request 6\n9168 2018-03-08 09:37:16.282 debug3: mm_answer_sign\n9168 2018-03-08 09:37:16.282 debug3: mm_answer_sign: hostkey proof signature 0000018C6654B3D0(100)\n9168 2018-03-08 09:37:16.282 debug3: mm_request_send entering: type 7\n9168 2018-03-08 09:37:16.282 debug2: monitor_read: 6 used once, disabling now\n9168 2018-03-08 09:37:16.282 debug3: send packet: type 31 [preauth]\n9168 2018-03-08 09:37:16.282 debug3: send packet: type 21 [preauth]\n9168 2018-03-08 09:37:16.282 debug2: set_newkeys: mode 1 [preauth]\n9168 2018-03-08 09:37:16.282 debug1: rekey after 134217728 blocks [preauth]\n9168 2018-03-08 09:37:16.282 debug1: SSH2_MSG_NEWKEYS sent [preauth]\n9168 2018-03-08 09:37:16.282 debug1: expecting SSH2_MSG_NEWKEYS [preauth]\n9168 2018-03-08 09:37:16.282 debug3: send packet: type 7 [preauth]\n9168 2018-03-08 09:37:21.033 debug3: receive packet: type 21 [preauth]\n9168 2018-03-08 09:37:21.033 debug1: SSH2_MSG_NEWKEYS received [preauth]\n9168 2018-03-08 09:37:21.033 debug2: set_newkeys: mode 0 [preauth]\n9168 2018-03-08 09:37:21.033 debug1: rekey after 134217728 blocks [preauth]\n9168 2018-03-08 09:37:21.033 debug1: KEX done [preauth]\n9168 2018-03-08 09:37:21.111 debug3: receive packet: type 5 [preauth]\n9168 2018-03-08 09:37:21.111 debug3: send packet: type 6 [preauth]\n9168 2018-03-08 09:37:21.111 debug3: receive packet: type 50 [preauth]\n9168 2018-03-08 09:37:21.111 debug1: userauth-request for user user@domain service ssh-connection method none [preauth]\n9168 2018-03-08 09:37:21.111 debug1: attempt 0 failures 0 [preauth]\n9168 2018-03-08 09:37:21.111 debug3: mm_getpwnamallow entering [preauth]\n9168 2018-03-08 09:37:21.111 debug3: mm_request_send entering: type 8 [preauth]\n9168 2018-03-08 09:37:21.111 debug3: mm_request_receive entering\n9168 2018-03-08 09:37:21.111 debug3: monitor_read: checking request 8\n9168 2018-03-08 09:37:21.111 debug3: mm_answer_pwnamallow\n9168 2018-03-08 09:37:21.111 debug2: parse_server_config: config reprocess config len 167\n9168 2018-03-08 09:37:23.376 debug3: NetUserGetInfo() failed with error: 1722 for user: user and domain: domain \\n\n9168 2018-03-08 09:37:23.611 debug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 1\n9168 2018-03-08 09:37:23.611 debug3: mm_request_send entering: type 9\n9168 2018-03-08 09:37:23.611 debug2: monitor_read: 8 used once, disabling now\n9168 2018-03-08 09:37:23.611 debug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_request_receive_expect entering: type 9 [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_request_receive entering [preauth]\n9168 2018-03-08 09:37:23.611 debug2: input_userauth_request: setting up authctxt for user@domain [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_inform_authserv entering [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_request_send entering: type 4 [preauth]\n9168 2018-03-08 09:37:23.611 debug2: input_userauth_request: try method none [preauth]\n9168 2018-03-08 09:37:23.611 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\n9168 2018-03-08 09:37:23.611 debug3: send packet: type 51 [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_request_receive entering\n9168 2018-03-08 09:37:23.611 debug3: monitor_read: checking request 4\n9168 2018-03-08 09:37:23.611 debug3: mm_answer_authserv: service=ssh-connection, style=\n9168 2018-03-08 09:37:23.611 debug2: monitor_read: 4 used once, disabling now\n9168 2018-03-08 09:37:23.611 debug3: receive packet: type 50 [preauth]\n9168 2018-03-08 09:37:23.611 debug1: userauth-request for user user@domain service ssh-connection method publickey [preauth]\n9168 2018-03-08 09:37:23.611 debug1: attempt 1 failures 0 [preauth]\n9168 2018-03-08 09:37:23.611 debug2: input_userauth_request: try method publickey [preauth]\n9168 2018-03-08 09:37:23.611 debug3: userauth_pubkey: have signature for RSA SHA256:hHYOXBZ3fb4mKPa7hsW4De6QLcBzWNRepWyPc/5o6iY [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_key_allowed entering [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_request_send entering: type 22 [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_request_receive_expect entering: type 23 [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_request_receive entering [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_request_receive entering\n9168 2018-03-08 09:37:23.611 debug3: monitor_read: checking request 22\n9168 2018-03-08 09:37:23.611 debug3: mm_answer_keyallowed entering\n9168 2018-03-08 09:37:23.611 debug3: mm_answer_keyallowed: key_from_blob: 0000018C66550C10\n9168 2018-03-08 09:37:23.611 debug1: trying public key file C:\\\\Users\\\\user\\\\.ssh/authorized_keys\n9168 2018-03-08 09:37:23.611 debug1: matching key found: file C:\\\\Users\\\\user\\\\.ssh/authorized_keys, line 1 RSA SHA256:hHYOXBZ3fb4mKPa7hsW4De6QLcBzWNRepWyPc/5o6iY\n9168 2018-03-08 09:37:23.611 debug3: mm_answer_keyallowed: key is allowed\n9168 2018-03-08 09:37:23.611 debug3: mm_request_send entering: type 23\n9168 2018-03-08 09:37:23.611 debug3: mm_sshkey_verify entering [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_request_send entering: type 24 [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_sshkey_verify: waiting for MONITOR_ANS_KEYVERIFY [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_request_receive_expect entering: type 25 [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_request_receive entering [preauth]\n9168 2018-03-08 09:37:23.611 debug3: mm_request_receive entering\n9168 2018-03-08 09:37:23.611 debug3: monitor_read: checking request 24\n9168 2018-03-08 09:37:23.626 debug3: mm_answer_keyverify: publickey 0000018C66551200 signature verified\n9168 2018-03-08 09:37:23.626 debug3: mm_request_send entering: type 25\n9168 2018-03-08 09:37:23.626 debug1: monitor_child_preauth: user@domain has been authenticated by privileged process\n9168 2018-03-08 09:37:23.626 debug3: mm_get_keystate: Waiting for new keys\n9168 2018-03-08 09:37:23.626 debug3: mm_request_receive_expect entering: type 26\n9168 2018-03-08 09:37:23.626 debug3: mm_request_receive entering\n9168 2018-03-08 09:37:23.626 debug3: mm_get_keystate: GOT new keys\n9168 2018-03-08 09:37:23.626 debug2: userauth_pubkey: authenticated 1 pkalg rsa-sha2-512 [preauth]\n9168 2018-03-08 09:37:23.626 debug3: send packet: type 52 [preauth]\n9168 2018-03-08 09:37:23.626 debug3: mm_request_send entering: type 26 [preauth]\n9168 2018-03-08 09:37:23.626 debug3: mm_send_keystate: Finished sending state [preauth]\n9168 2018-03-08 09:37:23.626 debug1: monitor_read_log: child log fd closed\n9168 2018-03-08 09:37:23.626 debug3: LsaLogonUser succeeded\n9168 2018-03-08 09:37:23.657 debug3: spawning \"C:\\\\Program Files\\\\OpenSSH-Win64\\\\sshd.exe\" \"-z\"\n9168 2018-03-08 09:37:23.657 debug3: send_rexec_state: entering fd = 5 config len 167\n9168 2018-03-08 09:37:23.657 debug3: ssh_msg_send: type 0\n9168 2018-03-08 09:37:23.657 debug3: send_rexec_state: done\n9168 2018-03-08 09:37:23.657 debug3: ssh_msg_send: type 0\n9168 2018-03-08 09:37:23.657 debug3: ssh_msg_send: type 0\n9168 2018-03-08 09:37:23.657 debug3: ssh_msg_send: type 0\n9132 2018-03-08 09:37:23.673 debug3: ssh_msg_recv entering\n9132 2018-03-08 09:37:23.673 debug2: fd 4 setting O_NONBLOCK\n9132 2018-03-08 09:37:23.673 debug2: parse_server_config: config reprocess config len 167\n9132 2018-03-08 09:37:23.673 debug3: NetUserGetInfo() failed with error: 1722 for user: user and domain: domain \\n\n9132 2018-03-08 09:37:23.689 debug3: NetUserGetInfo() with domainController: \\\\\\\\CYAN failed with error: 5 \\n\n9132 2018-03-08 09:37:23.689 Invalid user user@domain from 192.168.10.235 port 50822\n9168 2018-03-08 09:37:23.876 debug3: mm_request_receive entering\n9168 2018-03-08 09:37:23.876 debug1: do_cleanup\nvia pass:\n8996 2018-03-08 09:41:51.268 debug2: fd 3 setting O_NONBLOCK\n8996 2018-03-08 09:41:51.268 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n8996 2018-03-08 09:41:51.268 debug1: Bind to port 22 on ::.\n8996 2018-03-08 09:41:51.268 Server listening on :: port 22.\n8996 2018-03-08 09:41:51.268 debug2: fd 4 setting O_NONBLOCK\n8996 2018-03-08 09:41:51.268 debug1: Bind to port 22 on 0.0.0.0.\n8996 2018-03-08 09:41:51.268 Server listening on 0.0.0.0 port 22.\n8996 2018-03-08 09:42:19.642 debug3: fd 5 is not O_NONBLOCK\n8996 2018-03-08 09:42:19.642 debug3: spawning \"C:\\\\Program Files\\\\OpenSSH-Win64\\\\sshd.exe\" \"-R\"\n8996 2018-03-08 09:42:19.658 debug3: send_rexec_state: entering fd = 8 config len 167\n8996 2018-03-08 09:42:19.658 debug3: ssh_msg_send: type 0\n8996 2018-03-08 09:42:19.658 debug3: send_rexec_state: done\n8528 2018-03-08 09:42:19.689 debug1: inetd sockets after dupping: 3, 3\n8528 2018-03-08 09:42:19.689 Connection from 192.168.10.235 port 50948 on 192.168.10.188 port 22\n8528 2018-03-08 09:42:19.705 debug1: Client protocol version 2.0; client software version OpenSSH_7.4p1 Debian-10+deb9u2\n8528 2018-03-08 09:42:19.705 debug1: match: OpenSSH_7.4p1 Debian-10+deb9u2 pat OpenSSH* compat 0x04000000\n8528 2018-03-08 09:42:19.705 debug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.6\n8528 2018-03-08 09:42:19.705 debug2: fd 3 setting O_NONBLOCK\n8528 2018-03-08 09:42:19.721 debug3: spawning \"C:\\\\Program Files\\\\OpenSSH-Win64\\\\sshd.exe\" \"-y\"\n8528 2018-03-08 09:42:19.721 debug3: send_rexec_state: entering fd = 6 config len 167\n8528 2018-03-08 09:42:19.721 debug3: ssh_msg_send: type 0\n8528 2018-03-08 09:42:19.721 debug3: send_rexec_state: done\n8528 2018-03-08 09:42:19.721 debug3: ssh_msg_send: type 0\n8528 2018-03-08 09:42:19.721 debug3: ssh_msg_send: type 0\n8528 2018-03-08 09:42:19.721 debug3: preauth child monitor started\n8528 2018-03-08 09:42:19.752 debug3: privsep user:group 1:0 [preauth]\n8528 2018-03-08 09:42:19.752 debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms [preauth]\n8528 2018-03-08 09:42:19.752 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n8528 2018-03-08 09:42:19.752 debug3: send packet: type 20 [preauth]\n8528 2018-03-08 09:42:19.752 debug1: SSH2_MSG_KEXINIT sent [preauth]\n8528 2018-03-08 09:42:19.752 debug3: receive packet: type 20 [preauth]\n8528 2018-03-08 09:42:19.752 debug1: SSH2_MSG_KEXINIT received [preauth]\n8528 2018-03-08 09:42:19.752 debug2: local server KEXINIT proposal [preauth]\n8528 2018-03-08 09:42:19.752 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1 [preauth]\n8528 2018-03-08 09:42:19.752 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n8528 2018-03-08 09:42:19.752 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n8528 2018-03-08 09:42:19.752 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n8528 2018-03-08 09:42:19.752 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n8528 2018-03-08 09:42:19.752 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n8528 2018-03-08 09:42:19.752 debug2: compression ctos: none [preauth]\n8528 2018-03-08 09:42:19.752 debug2: compression stoc: none [preauth]\n8528 2018-03-08 09:42:19.752 debug2: languages ctos:  [preauth]\n8528 2018-03-08 09:42:19.752 debug2: languages stoc:  [preauth]\n8528 2018-03-08 09:42:19.752 debug2: first_kex_follows 0  [preauth]\n8528 2018-03-08 09:42:19.752 debug2: reserved 0  [preauth]\n8528 2018-03-08 09:42:19.752 debug2: peer client KEXINIT proposal [preauth]\n8528 2018-03-08 09:42:19.752 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c [preauth]\n8528 2018-03-08 09:42:19.752 debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa [preauth]\n8528 2018-03-08 09:42:19.752 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc [preauth]\n8528 2018-03-08 09:42:19.752 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc [preauth]\n8528 2018-03-08 09:42:19.752 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n8528 2018-03-08 09:42:19.752 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n8528 2018-03-08 09:42:19.752 debug2: compression ctos: none,zlib@openssh.com,zlib [preauth]\n8528 2018-03-08 09:42:19.752 debug2: compression stoc: none,zlib@openssh.com,zlib [preauth]\n8528 2018-03-08 09:42:19.752 debug2: languages ctos:  [preauth]\n8528 2018-03-08 09:42:19.752 debug2: languages stoc:  [preauth]\n8528 2018-03-08 09:42:19.752 debug2: first_kex_follows 0  [preauth]\n8528 2018-03-08 09:42:19.752 debug2: reserved 0  [preauth]\n8528 2018-03-08 09:42:19.752 debug1: kex: algorithm: curve25519-sha256 [preauth]\n8528 2018-03-08 09:42:19.752 debug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\n8528 2018-03-08 09:42:19.752 debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\n8528 2018-03-08 09:42:19.752 debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\n8528 2018-03-08 09:42:19.752 debug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\n8528 2018-03-08 09:42:19.752 debug3: receive packet: type 30 [preauth]\n8528 2018-03-08 09:42:19.752 debug3: mm_key_sign entering [preauth]\n8528 2018-03-08 09:42:19.752 debug3: mm_request_send entering: type 6 [preauth]\n8528 2018-03-08 09:42:19.752 debug3: mm_key_sign: waiting for MONITOR_ANS_SIGN [preauth]\n8528 2018-03-08 09:42:19.752 debug3: mm_request_receive_expect entering: type 7 [preauth]\n8528 2018-03-08 09:42:19.752 debug3: mm_request_receive entering [preauth]\n8528 2018-03-08 09:42:19.752 debug3: mm_request_receive entering\n8528 2018-03-08 09:42:19.752 debug3: monitor_read: checking request 6\n8528 2018-03-08 09:42:19.752 debug3: mm_answer_sign\n8528 2018-03-08 09:42:19.752 debug3: mm_answer_sign: hostkey proof signature 000001D582A087F0(101)\n8528 2018-03-08 09:42:19.752 debug3: mm_request_send entering: type 7\n8528 2018-03-08 09:42:19.752 debug2: monitor_read: 6 used once, disabling now\n8528 2018-03-08 09:42:19.752 debug3: send packet: type 31 [preauth]\n8528 2018-03-08 09:42:19.752 debug3: send packet: type 21 [preauth]\n8528 2018-03-08 09:42:19.752 debug2: set_newkeys: mode 1 [preauth]\n8528 2018-03-08 09:42:19.752 debug1: rekey after 134217728 blocks [preauth]\n8528 2018-03-08 09:42:19.752 debug1: SSH2_MSG_NEWKEYS sent [preauth]\n8528 2018-03-08 09:42:19.752 debug1: expecting SSH2_MSG_NEWKEYS [preauth]\n8528 2018-03-08 09:42:19.752 debug3: send packet: type 7 [preauth]\n8528 2018-03-08 09:42:21.939 debug3: receive packet: type 21 [preauth]\n8528 2018-03-08 09:42:21.939 debug1: SSH2_MSG_NEWKEYS received [preauth]\n8528 2018-03-08 09:42:21.939 debug2: set_newkeys: mode 0 [preauth]\n8528 2018-03-08 09:42:21.939 debug1: rekey after 134217728 blocks [preauth]\n8528 2018-03-08 09:42:21.939 debug1: KEX done [preauth]\n8528 2018-03-08 09:42:22.002 debug3: receive packet: type 5 [preauth]\n8528 2018-03-08 09:42:22.002 debug3: send packet: type 6 [preauth]\n8528 2018-03-08 09:42:22.002 debug3: receive packet: type 50 [preauth]\n8528 2018-03-08 09:42:22.002 debug1: userauth-request for user user@domain service ssh-connection method none [preauth]\n8528 2018-03-08 09:42:22.002 debug1: attempt 0 failures 0 [preauth]\n8528 2018-03-08 09:42:22.002 debug3: mm_getpwnamallow entering [preauth]\n8528 2018-03-08 09:42:22.002 debug3: mm_request_send entering: type 8 [preauth]\n8528 2018-03-08 09:42:22.002 debug3: mm_request_receive entering\n8528 2018-03-08 09:42:22.002 debug3: monitor_read: checking request 8\n8528 2018-03-08 09:42:22.002 debug3: mm_answer_pwnamallow\n8528 2018-03-08 09:42:22.002 debug2: parse_server_config: config reprocess config len 167\n8528 2018-03-08 09:42:24.268 debug3: NetUserGetInfo() failed with error: 1722 for user: user and domain: domain \\n\n8528 2018-03-08 09:42:24.283 debug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 1\n8528 2018-03-08 09:42:24.283 debug3: mm_request_send entering: type 9\n8528 2018-03-08 09:42:24.283 debug2: monitor_read: 8 used once, disabling now\n8528 2018-03-08 09:42:24.283 debug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\n8528 2018-03-08 09:42:24.283 debug3: mm_request_receive_expect entering: type 9 [preauth]\n8528 2018-03-08 09:42:24.283 debug3: mm_request_receive entering [preauth]\n8528 2018-03-08 09:42:24.283 debug2: input_userauth_request: setting up authctxt for user@domain [preauth]\n8528 2018-03-08 09:42:24.283 debug3: mm_inform_authserv entering [preauth]\n8528 2018-03-08 09:42:24.283 debug3: mm_request_send entering: type 4 [preauth]\n8528 2018-03-08 09:42:24.283 debug2: input_userauth_request: try method none [preauth]\n8528 2018-03-08 09:42:24.283 debug3: mm_request_receive entering\n8528 2018-03-08 09:42:24.283 debug3: monitor_read: checking request 4\n8528 2018-03-08 09:42:24.283 debug3: mm_answer_authserv: service=ssh-connection, style=\n8528 2018-03-08 09:42:24.283 debug2: monitor_read: 4 used once, disabling now\n8528 2018-03-08 09:42:24.283 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\n8528 2018-03-08 09:42:24.283 debug3: send packet: type 51 [preauth]\n8528 2018-03-08 09:42:24.299 debug3: receive packet: type 50 [preauth]\n8528 2018-03-08 09:42:24.299 debug1: userauth-request for user user@domain service ssh-connection method publickey [preauth]\n8528 2018-03-08 09:42:24.299 debug1: attempt 1 failures 0 [preauth]\n8528 2018-03-08 09:42:24.299 debug2: input_userauth_request: try method publickey [preauth]\n8528 2018-03-08 09:42:24.299 debug3: userauth_pubkey: have signature for RSA SHA256:hHYOXBZ3fb4mKPa7hsW4De6QLcBzWNRepWyPc/5o6iY [preauth]\n8528 2018-03-08 09:42:24.299 debug3: mm_key_allowed entering [preauth]\n8528 2018-03-08 09:42:24.299 debug3: mm_request_send entering: type 22 [preauth]\n8528 2018-03-08 09:42:24.299 debug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\n8528 2018-03-08 09:42:24.299 debug3: mm_request_receive_expect entering: type 23 [preauth]\n8528 2018-03-08 09:42:24.299 debug3: mm_request_receive entering [preauth]\n8528 2018-03-08 09:42:24.299 debug3: mm_request_receive entering\n8528 2018-03-08 09:42:24.299 debug3: monitor_read: checking request 22\n8528 2018-03-08 09:42:24.299 debug3: mm_answer_keyallowed entering\n8528 2018-03-08 09:42:24.299 debug3: mm_answer_keyallowed: key_from_blob: 000001D582A476A0\n8528 2018-03-08 09:42:24.299 debug1: trying public key file C:\\\\Users\\\\user\\\\.ssh/authorized_keys\n8528 2018-03-08 09:42:24.299 debug3: Failed to open file:C:\\\\Users\\\\user\\\\.ssh/authorized_keys error:2\n8528 2018-03-08 09:42:24.299 debug1: Could not open authorized keys 'C:\\\\Users\\\\user\\\\.ssh/authorized_keys': No such file or directory\n8528 2018-03-08 09:42:24.299 debug3: mm_answer_keyallowed: key is not allowed\n8528 2018-03-08 09:42:24.299 debug3: mm_request_send entering: type 23\n8528 2018-03-08 09:42:24.299 debug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512 [preauth]\n8528 2018-03-08 09:42:24.299 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\n8528 2018-03-08 09:42:24.299 debug3: send packet: type 51 [preauth]\n8528 2018-03-08 09:42:24.299 debug3: receive packet: type 50 [preauth]\n8528 2018-03-08 09:42:24.299 debug1: userauth-request for user user@domain service ssh-connection method keyboard-interactive [preauth]\n8528 2018-03-08 09:42:24.299 debug1: attempt 2 failures 1 [preauth]\n8528 2018-03-08 09:42:24.299 debug2: input_userauth_request: try method keyboard-interactive [preauth]\n8528 2018-03-08 09:42:24.299 debug1: keyboard-interactive devs  [preauth]\n8528 2018-03-08 09:42:24.299 debug1: auth2_challenge: user=user@domain devs= [preauth]\n8528 2018-03-08 09:42:24.299 debug1: kbdint_alloc: devices '' [preauth]\n8528 2018-03-08 09:42:24.299 debug2: auth2_challenge_start: devices  [preauth]\n8528 2018-03-08 09:42:24.299 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\n8528 2018-03-08 09:42:24.299 debug3: send packet: type 51 [preauth]\n8528 2018-03-08 09:42:26.674 debug3: receive packet: type 50 [preauth]\n8528 2018-03-08 09:42:26.674 debug1: userauth-request for user user@domain service ssh-connection method password [preauth]\n8528 2018-03-08 09:42:26.674 debug1: attempt 3 failures 2 [preauth]\n8528 2018-03-08 09:42:26.674 debug2: input_userauth_request: try method password [preauth]\n8528 2018-03-08 09:42:26.674 debug3: mm_auth_password entering [preauth]\n8528 2018-03-08 09:42:26.674 debug3: mm_request_send entering: type 12 [preauth]\n8528 2018-03-08 09:42:26.674 debug3: mm_request_receive entering\n8528 2018-03-08 09:42:26.674 debug3: monitor_read: checking request 12\n8528 2018-03-08 09:42:26.721 debug3: mm_answer_authpassword: sending result 1\n8528 2018-03-08 09:42:26.721 debug3: mm_request_send entering: type 13\n8528 2018-03-08 09:42:26.721 debug1: monitor_child_preauth: user@domain has been authenticated by privileged process\n8528 2018-03-08 09:42:26.721 debug3: mm_get_keystate: Waiting for new keys\n8528 2018-03-08 09:42:26.721 debug3: mm_request_receive_expect entering: type 26\n8528 2018-03-08 09:42:26.721 debug3: mm_request_receive entering\n8528 2018-03-08 09:42:26.721 debug3: mm_get_keystate: GOT new keys\n8528 2018-03-08 09:42:26.721 debug3: mm_auth_password: waiting for MONITOR_ANS_AUTHPASSWORD [preauth]\n8528 2018-03-08 09:42:26.721 debug3: mm_request_receive_expect entering: type 13 [preauth]\n8528 2018-03-08 09:42:26.721 debug3: mm_request_receive entering [preauth]\n8528 2018-03-08 09:42:26.721 debug3: mm_auth_password: user authenticated [preauth]\n8528 2018-03-08 09:42:26.721 debug3: send packet: type 52 [preauth]\n8528 2018-03-08 09:42:26.721 debug3: mm_request_send entering: type 26 [preauth]\n8528 2018-03-08 09:42:26.721 debug3: mm_send_keystate: Finished sending state [preauth]\n8528 2018-03-08 09:42:26.721 debug1: monitor_read_log: child log fd closed\n8528 2018-03-08 09:42:26.752 debug3: spawning \"C:\\\\Program Files\\\\OpenSSH-Win64\\\\sshd.exe\" \"-z\"\n8528 2018-03-08 09:42:26.752 debug3: send_rexec_state: entering fd = 5 config len 167\n8528 2018-03-08 09:42:26.752 debug3: ssh_msg_send: type 0\n8528 2018-03-08 09:42:26.752 debug3: send_rexec_state: done\n8528 2018-03-08 09:42:26.752 debug3: ssh_msg_send: type 0\n8528 2018-03-08 09:42:26.752 debug3: ssh_msg_send: type 0\n8528 2018-03-08 09:42:26.752 debug3: ssh_msg_send: type 0\n8164 2018-03-08 09:42:26.768 debug3: ssh_msg_recv entering\n8164 2018-03-08 09:42:26.768 debug2: fd 4 setting O_NONBLOCK\n8164 2018-03-08 09:42:26.768 debug2: parse_server_config: config reprocess config len 167\n8164 2018-03-08 09:42:26.768 debug3: NetUserGetInfo() failed with error: 1722 for user: user and domain: domain \\n\n8164 2018-03-08 09:42:26.799 debug3: ssh_msg_recv entering\n8164 2018-03-08 09:42:26.799 debug3: monitor_apply_keystate: packet_set_state\n8164 2018-03-08 09:42:26.799 debug2: set_newkeys: mode 0\n8164 2018-03-08 09:42:26.799 debug1: rekey after 134217728 blocks\n8164 2018-03-08 09:42:26.799 debug2: set_newkeys: mode 1\n8164 2018-03-08 09:42:26.799 debug1: rekey after 134217728 blocks\n8164 2018-03-08 09:42:26.799 debug1: ssh_packet_set_postauth: called\n8164 2018-03-08 09:42:26.799 debug3: ssh_packet_set_state: done\n8164 2018-03-08 09:42:26.799 debug3: notify_hostkeys: key 0: ssh-rsa SHA256:u0ko2L6tR/v+YSETRxDSGEOHeShAYn4ZB4bLPJ50Vsg\n8164 2018-03-08 09:42:26.799 debug3: notify_hostkeys: key 1: ssh-dss SHA256:kWQ0m+RkXQVzfxWhW/dSMjdNjkODDnuUdBDiImeY7/M\n8164 2018-03-08 09:42:26.799 debug3: notify_hostkeys: key 2: ecdsa-sha2-nistp256 SHA256:QNe59jpQ465sYhBl79aPopLG8/W4CbBGIReN+61XGN8\n8164 2018-03-08 09:42:26.799 debug3: notify_hostkeys: key 3: ssh-ed25519 SHA256:buq4ktCxAYNeY4rC7EPZHYGj372EDSK4i4enqM64uuo\n8164 2018-03-08 09:42:26.799 debug3: notify_hostkeys: sent 4 hostkeys\n8164 2018-03-08 09:42:26.799 debug3: send packet: type 80\n8164 2018-03-08 09:42:26.799 debug1: Entering interactive session for SSH2.\n8164 2018-03-08 09:42:26.799 debug2: fd 7 setting O_NONBLOCK\n8164 2018-03-08 09:42:26.799 debug2: fd 8 setting O_NONBLOCK\n8164 2018-03-08 09:42:26.799 debug1: server_init_dispatch\n8164 2018-03-08 09:42:26.799 debug3: receive packet: type 90\n8164 2018-03-08 09:42:26.799 debug1: server_input_channel_open: ctype session rchan 0 win 1048576 max 16384\n8164 2018-03-08 09:42:26.799 debug1: input_session_request\n8164 2018-03-08 09:42:26.799 debug1: channel 0: new [server-session]\n8164 2018-03-08 09:42:26.799 debug2: session_new: allocate (allocated 0 max 10)\n8164 2018-03-08 09:42:26.799 debug3: session_unused: session id 0 unused\n8164 2018-03-08 09:42:26.799 debug1: session_new: session 0\n8164 2018-03-08 09:42:26.799 debug1: session_open: channel 0\n8164 2018-03-08 09:42:26.799 debug1: session_open: session 0: link with channel 0\n8164 2018-03-08 09:42:26.799 debug1: server_input_channel_open: confirm session\n8164 2018-03-08 09:42:26.799 debug3: send packet: type 91\n8164 2018-03-08 09:42:26.799 debug3: receive packet: type 80\n8164 2018-03-08 09:42:26.799 debug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\n8164 2018-03-08 09:42:26.830 debug3: receive packet: type 98\n8164 2018-03-08 09:42:26.830 debug1: server_input_channel_req: channel 0 request pty-req reply 1\n8164 2018-03-08 09:42:26.830 debug1: session_by_channel: session 0 channel 0\n8164 2018-03-08 09:42:26.830 debug1: session_input_channel_req: session 0 req pty-req\n8164 2018-03-08 09:42:26.830 debug1: Allocating pty.\n8164 2018-03-08 09:42:26.830 debug1: session_pty_req: session 0 alloc console\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 1 (0x1)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 2 (0x2)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 3 (0x3)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 4 (0x4)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 5 (0x5)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 6 (0x6)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 7 (0x7)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 8 (0x8)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 9 (0x9)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 10 (0xa)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 12 (0xc)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 13 (0xd)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 14 (0xe)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 18 (0x12)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 30 (0x1e)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 31 (0x1f)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 32 (0x20)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 33 (0x21)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 34 (0x22)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 35 (0x23)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 36 (0x24)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 37 (0x25)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 38 (0x26)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 39 (0x27)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 40 (0x28)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 41 (0x29)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 42 (0x2a)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 50 (0x32)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 51 (0x33)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 52 (0x34)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 53 (0x35)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 54 (0x36)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 55 (0x37)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 56 (0x38)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 57 (0x39)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 58 (0x3a)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 59 (0x3b)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 60 (0x3c)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 61 (0x3d)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 62 (0x3e)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 70 (0x46)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 71 (0x47)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 72 (0x48)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 73 (0x49)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 74 (0x4a)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 75 (0x4b)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 90 (0x5a)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 91 (0x5b)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 92 (0x5c)\n8164 2018-03-08 09:42:26.830 debug1: Ignoring unsupported tty mode opcode 93 (0x5d)\n8164 2018-03-08 09:42:26.830 debug3: send packet: type 99\n8164 2018-03-08 09:42:26.830 debug3: receive packet: type 98\n8164 2018-03-08 09:42:26.830 debug1: server_input_channel_req: channel 0 request env reply 0\n8164 2018-03-08 09:42:26.830 debug1: session_by_channel: session 0 channel 0\n8164 2018-03-08 09:42:26.830 debug1: session_input_channel_req: session 0 req env\n8164 2018-03-08 09:42:26.830 debug2: Ignoring env request LANG: disallowed name\n8164 2018-03-08 09:42:26.830 debug3: receive packet: type 98\n8164 2018-03-08 09:42:26.830 debug1: server_input_channel_req: channel 0 request shell reply 1\n8164 2018-03-08 09:42:26.830 debug1: session_by_channel: session 0 channel 0\n8164 2018-03-08 09:42:26.830 debug1: session_input_channel_req: session 0 req shell\n8164 2018-03-08 09:42:26.830 Starting session: shell on console for user@domain from 192.168.10.235 port 50948 id 0\n8164 2018-03-08 09:42:26.830 debug2: fd 9 setting O_NONBLOCK\n8164 2018-03-08 09:42:26.830 debug2: fd 10 setting O_NONBLOCK\n8164 2018-03-08 09:42:26.830 debug2: fd 11 setting O_NONBLOCK\n8164 2018-03-08 09:42:26.830 debug2: fd 12 setting O_NONBLOCK\n8164 2018-03-08 09:42:26.830 debug2: fd 13 setting O_NONBLOCK\n8164 2018-03-08 09:42:26.830 debug2: fd 14 setting O_NONBLOCK\n8164 2018-03-08 09:42:26.830 debug1: Executing command: C:\\\\Program Files\\\\OpenSSH-Win64\\\\ssh-shellhost.exe \n8164 2018-03-08 09:42:26.846 debug2: fd 4 setting TCP_NODELAY\n8164 2018-03-08 09:42:26.861 debug2: channel 0: rfd 11 isatty\n8164 2018-03-08 09:42:26.861 debug3: fd 11 is O_NONBLOCK\n8164 2018-03-08 09:42:26.861 debug3: fd 10 is O_NONBLOCK\n8164 2018-03-08 09:42:26.861 debug3: fd 13 is O_NONBLOCK\n8164 2018-03-08 09:42:26.861 debug3: send packet: type 99\n8164 2018-03-08 09:42:32.330 debug2: channel 0: read<=0 rfd 11 len 0\n8164 2018-03-08 09:42:32.330 debug2: channel 0: read failed\n8164 2018-03-08 09:42:32.330 debug2: channel 0: close_read\n8164 2018-03-08 09:42:32.330 debug2: channel 0: input open -> drain\n8164 2018-03-08 09:42:32.330 debug2: channel 0: ibuf_empty delayed efd 13/(0)\n8164 2018-03-08 09:42:32.330 debug2: channel 0: read 0 from efd 13\n8164 2018-03-08 09:42:32.330 debug2: channel 0: closing read-efd 13\n8164 2018-03-08 09:42:32.330 debug2: channel 0: ibuf empty\n8164 2018-03-08 09:42:32.330 debug2: channel 0: send eof\n8164 2018-03-08 09:42:32.330 debug3: send packet: type 96\n8164 2018-03-08 09:42:32.330 debug2: channel 0: input drain -> closed\n8164 2018-03-08 09:42:32.330 debug1: Received SIGCHLD.\n8164 2018-03-08 09:42:32.330 debug1: session_by_pid: pid 5464\n8164 2018-03-08 09:42:32.330 debug1: session_exit_message: session 0 channel 0 pid 5464\n8164 2018-03-08 09:42:32.330 debug2: channel 0: request exit-status confirm 0\n8164 2018-03-08 09:42:32.330 debug3: send packet: type 98\n8164 2018-03-08 09:42:32.330 debug1: session_exit_message: release channel 0\n8164 2018-03-08 09:42:32.330 debug2: channel 0: write failed\n8164 2018-03-08 09:42:32.330 debug2: channel 0: close_write\n8164 2018-03-08 09:42:32.330 debug2: channel 0: send eow\n8164 2018-03-08 09:42:32.330 debug2: channel 0: output open -> closed\n8164 2018-03-08 09:42:32.330 debug3: mm_request_send entering: type 30\n8528 2018-03-08 09:42:32.330 debug3: mm_request_receive entering\n8528 2018-03-08 09:42:32.330 debug3: monitor_read: checking request 30\n8528 2018-03-08 09:42:32.330 debug3: mm_answer_pty_cleanup entering\n8528 2018-03-08 09:42:32.330 debug1: session_by_tty: unknown tty console\n8164 2018-03-08 09:42:32.330 debug2: channel 0: send close\n8164 2018-03-08 09:42:32.330 debug3: send packet: type 97\n8164 2018-03-08 09:42:32.330 debug3: channel 0: will not send data after close\n8164 2018-03-08 09:42:32.330 debug2: notify_done: reading\n8164 2018-03-08 09:42:32.330 debug3: channel 0: will not send data after close\n8164 2018-03-08 09:42:32.330 debug3: receive packet: type 97\n8164 2018-03-08 09:42:32.330 debug2: channel 0: rcvd close\n8164 2018-03-08 09:42:32.330 debug3: channel 0: will not send data after close\n8164 2018-03-08 09:42:32.330 debug2: channel 0: is dead\n8164 2018-03-08 09:42:32.330 debug2: channel 0: gc: notify user\n8164 2018-03-08 09:42:32.330 debug1: session_by_channel: session 0 channel 0\n8164 2018-03-08 09:42:32.330 debug1: session_close_by_channel: channel 0 child 0\n8164 2018-03-08 09:42:32.330 Close session: user user@domain from 192.168.10.235 port 50948 id 0\n8164 2018-03-08 09:42:32.330 debug3: session_unused: session id 0 unused\n8164 2018-03-08 09:42:32.330 debug2: channel 0: gc: user detached\n8164 2018-03-08 09:42:32.330 debug2: channel 0: is dead\n8164 2018-03-08 09:42:32.330 debug2: channel 0: garbage collecting\n8164 2018-03-08 09:42:32.330 debug1: channel 0: free: server-session, nchannels 1\n8164 2018-03-08 09:42:32.330 debug3: channel 0: status: The following connections are open:\\r\\n  #0 server-session (t4 r0 i3/0 o3/0 fd -1/-1 cc -1)\\r\\n\n8164 2018-03-08 09:42:32.330 debug3: receive packet: type 1\n8164 2018-03-08 09:42:32.330 Received disconnect from 192.168.10.235 port 50948:11: disconnected by user\n8164 2018-03-08 09:42:32.330 Disconnected from 192.168.10.235 port 50948\n8164 2018-03-08 09:42:32.330 debug1: do_cleanup\n8528 2018-03-08 09:42:32.330 debug3: mm_request_receive entering\n8528 2018-03-08 09:42:32.330 debug1: do_cleanup. ",
    "masaeedu": "@bagajjal Could this please be reopened? I don't have the ability to rewrite the service as a console application to work around the issue.. @jborean93 Do you know of some shell setup that can be used on the remote machine so that the commands we run over SSH effectively have the same permissions that you would have with psexec (even though we're using public key authentication)?. When you mention \"interactive\" here, do you mean in the sense of having a stdin stream or in terms of the process actually being visible in some Windows desktop session?. @manojampalam\n\nits actually launched via an intermediate cmd.exe and this is consuming the extra escape.\nTo fix this, we need to internally excape the shell payload before passing it to cmd.exe. AFAIK, we only need to escaple any double quotes (\"s), by doubling them. Is this understanding correct?\n\nIs it possible to simply avoid assuming anything about the shell and do no quote escaping at all? Ideally the default shell would receive exactly the same argument list that the ssh executable received on the other end. If some logic is needed to pass arguments to cmd without lots of nested escaping, this can be accomplished by creating wrappers around cmd/powershell/whatever you want and making those the default shell.. I created the following .NET console application and set it as the default shell.\n```c#\nusing System;\nnamespace echoargs\n{\n    class Program\n    {\n        static void Main()\n        {\n            Console.WriteLine(\"Raw invocation:\");\n            Console.WriteLine(Environment.CommandLine);\n        }\n    }\n}\n```\nThen I ran the following in zsh on a Linux client machine.\n\u279c  ~ echo 'cmd /c \"cd C:/ && dir\"'\ncmd /c \"cd C:/ && dir\"\n\u279c  ~ ssh -i ~/.ssh/test_machine_rsa Administrator@192.168.37.237 'cmd /c \"cd C:/ && dir\"'\nRaw invocation:\nc:\\users\\administrator\\echoargs\\binary\\echoargs.dll -c \"cmd /c cd\" C:/ && dir\nIt looks like somewhere between the shell passing the arguments to ssh on the client machine and sshd passing the arguments to the default shell on the server, the escaping logic munges the quotes.\nJust as a sanity check, I also tried starting the same executable directly on the server with the specified command string:\nPS C:\\Users\\Administrator\\echoargs> Start-Process .\\binary\\echoargs.exe -ArgumentList 'cmd /c \"cd C:/ && dir\"' -Wait -NoNewWindow\nRaw invocation:\nC:\\Users\\Administrator\\echoargs\\binary\\echoargs.dll cmd /c \"cd C:/ && dir\"\nYou can see that the argument list string I provided was faithfully preserved, so I think it's unlikely that this is an issue with something inside the process (e.g. MSVCRT) mangling the quotes.\nThe server is Windows Server 2012 R2 Standard running OpenSSH 7.7.2.0. The client machine is Arch Linux with OpenSSH 7.8p1-1.\n. @penguin359\n\nThe command-line is actually passed to it's child process as a single string which the child parses with it's own rules. What I'm seeing as the remote cmd.exe layer of quoting might actually be the C/C++ Runtime library inside PowerShell.exe following these rules\n\nI suspect that might not be the case, because if I write a .NET console application in which I log the raw command line string without any further processing (i.e. Environment.CommandLine) and then set that as the default shell, the quotes are still mangled.\nI can try out a C++ application in which I call the relevant Windows API directly, I suspect I'll see the same results.. I went ahead and used the Windows API directly using P/Invoke and the results are a little different. The quotes are not being garbled, but they are being nested without any escaping. Here's the updated command line application:\n```c#\nusing System;\nusing System.Runtime.InteropServices;\nnamespace echoargs\n{\n    class Program\n    {\n        static void Main()\n        {\n            var ptr = GetCommandLine();\n            var commandLine = Marshal.PtrToStringAuto(ptr);\n        Console.WriteLine(commandLine);\n    }\n    [DllImport(\"kernel32.dll\", CharSet = CharSet.Auto)]\n    private static extern System.IntPtr GetCommandLine();\n}\n\n}\n```\nHere's the behavior I see from the Linux client:\n\u279c  ~ echo 'cmd /c \"cd C:/ && dir\"'\ncmd /c \"cd C:/ && dir\"\n\u279c  ~ ssh -i ~/.ssh/test_machine_rsa Administrator@192.168.37.237 'cmd /c \"cd C:/ && dir\"'\n\"c:\\users\\administrator\\echoargs\\binary\\echoargs.exe\" -c \"cmd /c \"cd C:/ && dir\"\"\nHere's the event viewer entry for the default shell being started by sshd (I enabled process creation auditing on the server):\n\nI still think that the correct fix would be to remove all quote processing from sshd (including the addition of -c and the wrapping in quotes seen here), so that the command line passed to the SSH client is forwarded verbatim to the default shell. The default shell can prepend /c to the arguments, wrap in quotes, escape things etc. before passing on to a shell program like cmd or powershell if necessary. What do you think @manojampalam?. @bingbing8 I didn't think about having Windows SSH on the client side, you're right.\nRegarding the server side, yes, a custom shell app will be needed to wrap most shells, but you could just write and bundle these for the common shells, or allow the community to write them. I think having SSHD itself transparently propagate the arguments and not interfering with them provides the greatest degree of extensibility.\nFor my use case I need to be able to pass some arguments using NodeJS that will arrive in a remote NodeJS process in exactly the same form; figuring out how to formulate them so that they survive the SSHD wrapping/escaping process is a little tricky, so it would be easier if that extra layer didn't exist at all.. @bingbing8 I think it would be a good idea to put the escaping logic for built in shells like cmd and powershell into small executables as well. These can be built and distributed alongside win32-openssh and set up as the DefaultShell out of the box. It seems to me this would make things easier and more consistent in terms of implementation, since you don't need to inspect the shell or command string and make decisions inside SSHD. There is however the marginal cost of an additional process call.\nIt's essentially an implementation detail though, so as an end user it wouldn't matter if it was baked into SSHD either (so long as it doesn't accidentally catch and process command strings intended for other shells).. @bagajjal Could you give me a link to what this issue is?\nFound another weird situation that might be related:\n\u279c ~ ssh -i ~/.ssh/test_machine_rsa Administrator@192.168.37.205 cmd /c dir\n'dir\"' is not recognized as an internal or external command,\noperable program or batch file.. @bingbing8 I'll try it out. Thanks @bingbing8. I changed the default shell to Powershell using:\nNew-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -PropertyType String -Force\nwhich makes both cmd /c echo foo which makes both cmd /c dir work nicely.\nHowever (and perhaps this belongs in a different issue), I then tried:\nssh -i ~/.ssh/test_machine_rsa Administrator@192.168.37.205 cmd /c \"cd C:/ && dir\"\nwhich produces:\nAt line:1 char:15\n+ cmd /c cd C:/ && dir\n+               ~~\nThe token '&&' is not a valid statement separator in this version.\n    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordEx\n   ception\n    + FullyQualifiedErrorId : InvalidEndOfLine\nAdding explicit quotes to the third argument (cmd /c \"\\\"cd C:/ && dir\\\"\") doesn't seem to have an effect, and produces the same error. This is again a situation where just entering an interactive shell and running the same command will work correctly:\n```\n\u279c  ~ ssh -i ~/.ssh/test_machine_rsa Administrator@192.168.37.205 cmd /c \"cd C:/ && dir\"\nAt line:1 char:15\n+ cmd /c cd C:/ && dir\n+               ~~\nThe token '&&' is not a valid statement separator in this version.\n    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordEx\n   ception\n    + FullyQualifiedErrorId : InvalidEndOfLine\n\u279c  ~ ssh -i ~/.ssh/test_machine_rsa Administrator@192.168.37.205 cmd /c \"\\\"cd C:/ && dir\\\"\"\nAt line:1 char:15\n+ cmd /c cd C:/ && dir\n+               ~~\nThe token '&&' is not a valid statement separator in this version.\n    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordEx\n   ception\n    + FullyQualifiedErrorId : InvalidEndOfLine\n\u279c  ~ ssh -i ~/.ssh/test_machine_rsa Administrator@192.168.37.205 powershell\nWindows PowerShell\nCopyright (C) 2016 Microsoft Corporation. All rights reserved.\nPS C:\\Users\\Administrator> cmd /c \"cd C:/ && dir\"\ncmd /c \"cd C:/ && dir\"\n Volume in drive C has no label.\n Volume Serial Number is C0B0-34AB\nDirectory of C:\\\n08/22/2013  11:52 AM              PerfLogs\n10/10/2018  07:40 PM              Program Files\n11/16/2016  01:30 PM              Program Files (x86)\n10/16/2018  04:54 PM                19 test.txt\n06/13/2018  05:42 AM              Users\n10/01/2018  01:13 PM              Windows\n               1 File(s)             19 bytes\n               5 Dir(s)  89,130,852,352 bytes free\nPS C:\\Users\\Administrator> exit\nexit\n`. My current need is to be able to take the name of an executable and a verbatim string of arguments and get ssh to start the executable with the specified argument string (without any extra processing).. @bingbing8 Is thatssh ... cmd /c \"cd C:/ & dir\"``? I don't think that is being expanded bycmditself, because running ``cd C:/& dir` in an interactivecmd` session just produces an error.\n```\n\u279c  ~ ssh -i ~/.ssh/test_machine_rsa Administrator@192.168.37.205 cmd\nMicrosoft Windows [Version 6.3.9600]\n(c) 2013 Microsoft Corporation. All rights reserved.\nadministrator@VM-5IBKOK8EE6UU C:\\Users\\Administrator>cd C:/ & dir\ncd C:/& dir\nThe system cannot find the path specified.\n Volume in drive C has no label.\n Volume Serial Number is C0B0-34AB\nDirectory of C:\\Users\\Administrator\n...\n               0 File(s)              0 bytes\n              15 Dir(s)  89,130,852,352 bytes free\nadministrator@VM-5IBKOK8EE6UU C:\\Users\\Administrator>cd C:/ && dir\ncd C:/ && dir\n Volume in drive C has no label.\n Volume Serial Number is C0B0-34AB\nDirectory of C:\\\n...\n               1 File(s)             19 bytes\n               5 Dir(s)  89,130,852,352 bytes free\nadministrator@VM-5IBKOK8EE6UU C:>\n`. I see. I need to avoid interacting with the details of shell escaping and expansion, since the executable and argument list are read from a config file and are unknown up front. I can't rely on the fact that the default shell on a system will be Powershell and that it will expand `&`` in a particular way before actually passing the arguments to the executable.\nMaybe I can write a different default shell that will take an argument string, split it as \"<executable> <arguments>\", and then start the executable, passing the remaining arguments verbatim.. If I run ssh ... cmd /c \"\\\"echo foo\\\"\" (the first layer of quotes will be erased by the local shell), are these arguments simply surrounded by an extra layer of quotes in the remote invocation, like so: powershell -c \"cmd /c \"echo foo\"\"? Or is there some further escaping of quotes to produce something like: powershell -c \"cmd /c \\\"echo foo\\\"\"?. Since the appropriate escaping is dependent on the default shell application to which the arguments are going to be passed (different rules for cmd and powershell), is there a way we can simply disable this escaping and pass the values verbatim to a custom default shell?\nI wrote a little .NET console application to see exactly what sshd passes as the command line arguments to the default shell.\n```\nusing System;\nnamespace echoargs\n{\n    class Program\n    {\n        static void Main()\n        {\n            Console.WriteLine(\"Raw invocation:\");\n            Console.WriteLine(Environment.CommandLine);\n        }\n    }\n}\n```\nI compiled it to a file echoargs.exe, and then set it as my default shell using:\nNew-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"C:\\Users\\Administrator\\echoargs\\binary\\echoargs.exe\" -PropertyType String -Force\nThen I tried running the commands I've been having trouble with over SSH:\n\u279c  ~ echo 'cmd /c \"cd C:/ && dir\"'\ncmd /c \"cd C:/ && dir\"\n\u279c  ~ ssh -i ~/.ssh/test_machine_rsa Administrator@192.168.37.237 'cmd /c \"cd C:/ && dir\"'\nRaw invocation:\nc:\\users\\administrator\\echoargs\\binary\\echoargs.dll -c \"cmd /c cd\" C:/ && dir\nLeaving aside the executable's own name and the -c, you can see the difference between what was sent (cmd /c \"cd C:/ && dir\") and the garbled output that arrived (\"cmd /c cd\" C:/ && dir).\nI want to entirely disable any shell processing and escaping, and simply start a process verbatim using the command line string sent through ssh. Ideally I'd be able to use something like https://github.com/cubiclesoft/createprocess-windows as the default shell, so that it's as close as possible to just calling the relevant CreateProcess* API with the command line string directly.. Another interesting thing here is that it seems, like clockwork, to happen every 20th time (at least for this input). Maybe there's some kind of periodic thing happening in the background that triggers the bug.. I can reproduce this 100% of the time in my environment (I have a VM snapshot), so if there's some additional information that can be collected using a modified build with additional logging, please let me know.. Any luck with this @bingbing8? Happy to collect any additional data or repro information. This is currently blocking use of win32-OpenSSH and I'm currently having to port stuff to Cygwin SSH.. Sorry @NoMoreFood, @manojampalam, away on vacation at the moment and didn't have a chance to capture a dump. I'm going to set up the test environment and do this once I'm back at work.. > Any chance to create a dump?\n@NoMoreFood I've captured a dump file. Do you have an email I can send it to? It's too large to upload as an attachment here apparently.\nOne issue here is that I see several sshd processes in the details pane, although a few seconds after the hang occurs all but one disappear (the client just stays stuck forever though). I'm not sure which one I should be capturing a dump from, or, if I should be capturing them all, how to label them so they can be told apart.\n\nAlso, if you insert a sleep to slow it down, does the behavior still happen \"like clockwork\"?\n\nWith a one second sleep I've still managed to reproduce it 3/3 times (so far).\n\nI'd also be interested if you see any change in behavior when using the binaries I posted here: #1301.\n\nI tried out your binary and I can still see the hang occurring.. @NoMoreFood The client logs and the wireshark dump shows that it always freezes when the client sends its version information to the server. On normal iterations the next thing that happens is the server responds with its own version information, but when the hang happens the server simply never responds.\nI've uploaded the dump file here: http://do.masaeedu.com:8000/sshd.DMP. Regarding:\n\nI did notice that I had to adjust the MaxStartups in sshd_config to a larger number (as shown below).\n\nwhat happens if you don't adjust these values?. After much more debugging I think there is something horribly wrong with our network, so I'm provisionally closing this issue and pursuing that avenue of investigation. If it turns out there is something wrong with ssh client/server I'll come back to this. Sorry for the (possibly) wild goose chase.. @manojampalam Yes, it works fine if you ssh from the machine to itself. I was initially under the impression that the particular combination of client platform and version with the server was resulting in the issue (and so you wouldn't see it when attempting to ssh to loopback from Windows) but after testing with a variety of client platforms and versions (Windows with MSYS SSH, Cygwin SSH, Linux with OpenSSH 6.6 through 7.9) and finding the bug consistently, I'm fairly certain something on our network is eating packets.. Just following up to note that we have the smoking gun in our corporate firewall rules that was causing this issue. Sorry for the false alarm.. I will note though that it might be a bug in the SSH client in general (not specific to the Windows implementation) that it simply hangs instead of timing out if the server fails to respond with its version string.\nI've tried adjusting various configuration options in my ~/.ssh/config to try and get it to time out when the firewall breaks the connection like this, but without much success.. Another workaround I have yet to try might be to make the default shell refresh the environment before starting the child process.. ",
    "ScottRFrost": "I just spent an hour trying to figure out what was wrong.  \nIn addition to ssh-keygen not working, if you try to copy over a key with a password from WSL or an actual Linux machine, it tells you:\nLoad key \"C:\\\\Users\\\\XXXXXXX/.ssh/id_ed25519\": invalid format\n. ",
    "jonathanpmartins": "Same problem here:\nLoad key \"mykey.pem\": invalid format\nSimilar thing happens when I try to use the Windows bash or native ssh on command prompt.. ",
    "goobliata": "Still have this problem on Windows 10 using the beta from \"Additional Features\". Is there any way to create a key that is usable?. ",
    "timoabend": "Hi!\nSame problem here when I enter a passphrase. It works, if I leave it blank.\nGreetings\n  Timo. ",
    "byronigoe": "Same problem here. So, the bug was fixed on 2017-08-15, but the new build hasn't made it into the Windows OpenSSH beta?. ",
    "chunliu": "This issue doesn't happen in v1.0.0.0-beta anymore. . ",
    "annulus": "Ok.. https://github.com/PowerShell/openssh-portable/pull/192. @DarwinJS It seems that you wrote \"...\\userprofilepath...\" twice.. It is two separate thing:\n- appending a slash to the end of the filesystem path in the regex, that's against the value of the registry field ProfileImagePath is important to ignore the registry entries that are belonging to users that share the beginning of their path (this is what my other commit is about)\n- ignoring the registry ProfileList entries that end with .bak are to avoid loading old/backup reg.entries. ",
    "JonathanHolvey": "I had the same error yesterday, and got around it by leaving off the option -Confirm:$false from the end of the command.. I've also experiencing this problem with extra lines in the output, as well as extra whitespace being printed between input characters, when connecting to a OpenSSH-Win32 server on Windows 7:\n\nThese clients I've had success with:\n\nOpenSSH-Win32 in cmd.exe or ConEmu on Windows\nGNU OpenSSH in Terminal on Ubuntu\n\nThese clients have problems:\n\nGNU OpenSSH in cmd.exe or ConEmu on Windows\nJuiceSSH on Android. Yeah, I did read through that wiki page before posting. Everything seems to be in order, however the issue persisted. I was running Win32-OpenSSH version 1.0.0.2018.02.02.\n\nIn the end I removed Win32-OpenSSH (after forcibly removing the sshd service), and installed MSYS2, configuring the sshd server using this script instead. This works well for me since I work with Linux a lot and use Bash as my shell on Windows.. JuiceSSH has the same issue when connecting to a Win32-OpenSSH server, so it's not just cygwin.. ",
    "alaksandus": "@bingbing8  It doesn't matter if I copy/paste or type the text. Same error. My output of get-host and PSVersionTable is below:\nPS C:\\Program Files\\OpenSSH> get-host\nName             : ConsoleHost\nVersion          : 5.1.14393.1532\nInstanceId       : 31db26d8-76a6-463a-aedc-99fffa55cb34\nUI               : System.Management.Automation.Internal.Host.InternalHostUserInterface\nCurrentCulture   : nl-NL\nCurrentUICulture : en-US\nPrivateData      : Microsoft.PowerShell.ConsoleHost+ConsoleColorProxy\nDebuggerEnabled  : True\nIsRunspacePushed : False\nRunspace         : System.Management.Automation.Runspaces.LocalRunspace\nPS C:\\Program Files\\OpenSSH> $PSVersionTable\nName                           Value\n----                           -----\nPSVersion                      5.1.14393.1532\nPSEdition                      Desktop\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   10.0.14393.1532\nCLRVersion                     4.0.30319.42000\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1. @bingbing8 I'm executing the command like in the Wiki, so without the full path to the file.\n.\\FixHostFilePermissions.ps1 -Confirm:$false instead of C:\\Program Files\\OpenSSH\\FixHostFilePermissions.ps1 -confirm:$false\n. ",
    "Dchan40": "I get the same error by pasting that command line.\nI get another error with quotation .\npowershell.exe : Processing -File '.\\FixHostFilePermission.ps1 -Confirm:False' failed: The given path's format is not supported.Specify a valid path for the -File parameter.\nAt line:1 Char:1\n+ powershell.exe -ExecutionPolicy Bypass -File \".\\FixHostFilePermission.ps1 -Conf ...\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \n          +CategoryInfo               :NotSpecified: (Processing -Fil....File parameter.:String) [], RemoteException\n          +FullyQualifiedErrorId   :NativeCommandError\n. The command i key in does have the $.. yea, i type exactly the same, except i have include the \"\" as to bingbing8 advise to add between  \".\\FixHostFilePermission.ps1 -Confirm:$false\" since the original command give me the original posted error.. ",
    "thomasgeorgec": "still no solution?\neven i got same issue\n\n. you can leave out \"-confirm:$false\" part, and type y to all prompts that follow\n\n. @bingbing8 , @JW0914 , thank you very much. I worked around the manual way :). ",
    "petrkra": "It's simple:\nCan not be used \"\"\nYou must use ''\nthe correct syntax is:\npowershell.exe -ExecutionPolicy Bypass -Command '. .\\FixHostFilePermissions.ps1 -Confirm:$false'\nthen everything will go right :-). ",
    "Andrei-Paul": "\"NT SERVICE\\ALL SERVICES\" was not assigned to that policy. I do not know how or why, I do not manage the OS. :). So far the policy still stands and all is working fine. Whatever removed \"NT SERVICE\\ALL SERVICES\" may have been a one time event or human error.\nI don't know (yet) if it is possible, but perhaps the 'nicest' way to handle this is to check if \"NT SERVICE\\ALL SERVICES\" is assigned to the policy and, if not, add NT SERVICE\\sshd.\nThat way the policy doesn't become cluttered and in case of fringe cases like mine, sshd still works if installed.. ",
    "Mayhem93": "@bagajjal It's very easy to reproduce, just use redis-cli on a linux machine, or were you not able to reproduce it like I said ?. I can still replicate this in 0.0.19. @bagajjal I will, but I'm gonna wait for the release to appear on chocolatey.. @bagajjal Upgraded to v0.0.20 and I can't replicate the original issue. . Yes, that's correct, sorry. I meant to say otherwise . ",
    "cowlinator": "(Also, I do not have posh-git installed.). Thank you manojampalam.  You were correct.\nI was able to resolve this by running \npowershell -ExecutionPolicy Bypass -File \"%ProgramFiles%\\OpenSSH-Win64\\install-sshd.ps1\". Will do, but what then is this repo's purpose?. ",
    "guskovd": "sshd -ddd output:\n`powershell\ndebug2: load_server_config: filename ./sshd_config\ndebug2: load_server_config: done config len = 258\ndebug2: parse_server_config: config ./sshd_config len 258\ndebug3: ./sshd_config:50 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: ./sshd_config:115 setting Subsystem sftp        \"C:\\\\Program Files\\\\OpenSSH\\\\sftp-server.exe\"\ndebug3: ./sshd_config:123 setting hostkeyagent \\\\\\\\.\\\\pipe\\\\openssh-ssh-agent\ndebug1: sshd version OpenSSH_7.5, LibreSSL 2.5.3\ndebug3: socket:0, socktype:1, io:01102008, fd:3\ndebug3: close - io:01102008, type:2, fd:3, table_index:3\ndebug3: open - handle:00000104, io:01102218, fd:3\ndebug3: ReadFileEx() ERROR:38, io:01102218\ndebug3: read - no more data, io:01102218\ndebug3: ReadFileEx() ERROR:38, io:01102218\ndebug3: read - no more data, io:01102218\ndebug3: close - io:01102218, type:2, fd:3, table_index:3\ndebug1: private host key #0: ssh-rsa SHA256:DES8D5W2QTNzgkK7sT4byEUdmTwVlzwdDtJfJ1INFIA\ndebug3: open - handle:00000104, io:01102218, fd:3\ndebug3: ReadFileEx() ERROR:38, io:01102218\ndebug3: read - no more data, io:01102218\ndebug3: ReadFileEx() ERROR:38, io:01102218\ndebug3: read - no more data, io:01102218\ndebug3: close - io:01102218, type:2, fd:3, table_index:3\ndebug1: private host key #1: ssh-dss SHA256:p9Y+4q55hWqyz5Hv12CFD0+iyZ8d83iMObUxhPIEhFQ\ndebug3: open - handle:00000104, io:01102218, fd:3\ndebug3: ReadFileEx() ERROR:38, io:01102218\ndebug3: read - no more data, io:01102218\ndebug3: ReadFileEx() ERROR:38, io:01102218\ndebug3: read - no more data, io:01102218\ndebug3: close - io:01102218, type:2, fd:3, table_index:3\ndebug1: private host key #2: ecdsa-sha2-nistp256 SHA256:3kJP2WU59lxTvTMHmGXCU9tX7kYlkqQwhuUo50aiJcQ\ndebug3: open - handle:00000104, io:01102218, fd:3\ndebug3: ReadFileEx() ERROR:38, io:01102218\ndebug3: read - no more data, io:01102218\ndebug3: ReadFileEx() ERROR:38, io:01102218\ndebug3: read - no more data, io:01102218\ndebug3: close - io:01102218, type:2, fd:3, table_index:3\ndebug1: private host key #3: ssh-ed25519 SHA256:8wzBu9VQSvenevARNHtBOFgRaFU9mhiyHI4qD2r3kNk\ndebug3: socket:36, socktype:1, io:01102218, fd:3\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug3: socket:356, socktype:1, io:01104D20, fd:4\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug3: socket:368, io:0110BB78, fd:5\ndebug3: fd 5 is not O_NONBLOCK\ndebug3: pipe - r-h:376,io:0110BBF8,fd:6  w-h:372,io:0110BC78,fd:7\ndebug1: Server will not fork when running in debugging mode.\ndebug3: close - io:01102218, type:1, fd:3, table_index:3\ndebug3: close - io:01104D20, type:1, fd:4, table_index:4\ndebug3: close - io:0110BBF8, type:2, fd:6, table_index:6\ndebug3: close - io:0110BC78, type:2, fd:7, table_index:7\nConnection from 192.168.121.1 port 49232 on 192.168.121.71 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_7.5\ndebug1: match: OpenSSH_7.5 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_7.5\ndebug2: fd 5 setting O_NONBLOCK\ndebug3: socket:0, socktype:1, io:01102218, fd:3\ndebug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-he\nlman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-he\nlman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ecdsa-sha2-nistp256,\ncdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none,zlib@openssh.com,zlib\ndebug2: compression stoc: none,zlib@openssh.com,zlib\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT\ndebug3: receive packet: type 30\ndebug3: send packet: type 31\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: send packet: type 7\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug1: KEX done\ndebug3: receive packet: type 5\ndebug3: send packet: type 6\ndebug3: receive packet: type 50\ndebug1: userauth-request for user vagrant service ssh-connection method none\ndebug1: attempt 0 failures 0\ndebug2: parse_server_config: config reprocess config len 258\ndebug2: input_userauth_request: setting up authctxt for vagrant\ndebug2: input_userauth_request: try method none\nFailed none for vagrant from 192.168.121.1 port 49232 ssh2\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\ndebug3: send packet: type 51\ndebug3: receive packet: type 50\ndebug1: userauth-request for user vagrant service ssh-connection method publickey\ndebug1: attempt 1 failures 0\ndebug2: input_userauth_request: try method publickey\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:TQ17vlgitjleJNHJC05fctDD3oFbYiEJLZJZ3zxOIjw\ndebug1: trying public key file C:\\\\Users\\\\vagrant\\\\.ssh/authorized_keys\ndebug1: matching key found: file C:\\\\Users\\\\vagrant\\\\.ssh/authorized_keys, line 1 RSA SHA256:TQ17vlgitjleJNHJC05fctDD3oFbYiEJLZJZ3zxOIjw\ndebug3: send packet: type 60\ndebug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512\nPostponed publickey for vagrant from 192.168.121.1 port 49232 ssh2\ndebug3: receive packet: type 50\ndebug1: userauth-request for user vagrant service ssh-connection method publickey\ndebug1: attempt 2 failures 0\ndebug2: input_userauth_request: try method publickey\ndebug3: userauth_pubkey: have signature for RSA SHA256:TQ17vlgitjleJNHJC05fctDD3oFbYiEJLZJZ3zxOIjw\ndebug1: trying public key file C:\\\\Users\\\\vagrant\\\\.ssh/authorized_keys\ndebug1: matching key found: file C:\\\\Users\\\\vagrant\\\\.ssh/authorized_keys, line 1 RSA SHA256:TQ17vlgitjleJNHJC05fctDD3oFbYiEJLZJZ3zxOIjw\ndebug3: socket:0, socktype:1, io:01107AC8, fd:4\ndebug3: vagrant authenticated via pubkey\ndebug2: userauth_pubkey: authenticated 1 pkalg rsa-sha2-512\nAccepted publickey for vagrant from 192.168.121.1 port 49232 ssh2: RSA SHA256:TQ17vlgitjleJNHJC05fctDD3oFbYiEJLZJZ3zxOIjw\ndebug3: send packet: type 52\ndebug3: notify_hostkeys: key 0: ssh-rsa SHA256:DES8D5W2QTNzgkK7sT4byEUdmTwVlzwdDtJfJ1INFIA\ndebug3: notify_hostkeys: key 1: ssh-dss SHA256:p9Y+4q55hWqyz5Hv12CFD0+iyZ8d83iMObUxhPIEhFQ\ndebug3: notify_hostkeys: key 2: ecdsa-sha2-nistp256 SHA256:3kJP2WU59lxTvTMHmGXCU9tX7kYlkqQwhuUo50aiJcQ\ndebug3: notify_hostkeys: key 3: ssh-ed25519 SHA256:8wzBu9VQSvenevARNHtBOFgRaFU9mhiyHI4qD2r3kNk\ndebug3: notify_hostkeys: sent 4 hostkeys\ndebug3: send packet: type 80\ndebug1: Entering interactive session for SSH2.\ndebug3: pipe - r-h:36,io:010D2558,fd:6  w-h:352,io:010D25D8,fd:7\ndebug2: fd 6 setting O_NONBLOCK\ndebug2: fd 7 setting O_NONBLOCK\ndebug1: server_init_dispatch\ndebug3: receive packet: type 90\ndebug1: server_input_channel_open: ctype session rchan 0 win 2097152 max 32768\ndebug1: input_session_request\ndebug1: channel 0: new [server-session]\ndebug2: session_new: allocate (allocated 0 max 10)\ndebug3: session_unused: session id 0 unused\ndebug1: session_new: session 0\ndebug1: session_open: channel 0\ndebug1: session_open: session 0: link with channel 0\ndebug1: server_input_channel_open: confirm session\ndebug3: send packet: type 91\ndebug3: receive packet: type 98\ndebug1: server_input_channel_req: channel 0 request subsystem reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req subsystem\ndebug2: subsystem request for sftp by user vagrant\ndebug1: subsystem: exec() C:\\\\Program Files\\\\OpenSSH\\\\sftp-server.exe\nStarting session: subsystem 'sftp' for vagrant from 192.168.121.1 port 49232 id 0\ndebug3: pipe - r-h:360,io:01133968,fd:8  w-h:380,io:011339E8,fd:9\ndebug3: pipe - r-h:384,io:0111EA08,fd:10  w-h:364,io:0111EA88,fd:11\ndebug3: pipe - r-h:396,io:0111EB08,fd:12  w-h:392,io:0111EB88,fd:13\ndebug2: fd 8 setting O_NONBLOCK\ndebug2: fd 9 setting O_NONBLOCK\ndebug2: fd 10 setting O_NONBLOCK\ndebug2: fd 11 setting O_NONBLOCK\ndebug2: fd 12 setting O_NONBLOCK\ndebug2: fd 13 setting O_NONBLOCK\ndebug1: Executing command: C:\\\\Program Files\\\\OpenSSH\\\\sftp-server.exe\ndebug3: Register child 00000194 pid 2640, 0 zombies of 0\ndebug2: fd 5 setting TCP_NODELAY\ndebug3: close - io:01133968, type:2, fd:8, table_index:8\ndebug3: close - io:0111EA88, type:2, fd:11, table_index:11\ndebug3: close - io:0111EB88, type:2, fd:13, table_index:13\ndebug3: fd 10 is O_NONBLOCK\ndebug3: fd 9 is O_NONBLOCK\ndebug3: fd 12 is O_NONBLOCK\ndebug3: send packet: type 99\u0000. I don't know. 3.1.0 is the first version I tried. . ",
    "ulysses425": "I have the same problem, is this issue have been solved?. ",
    "joshtriplett": "I ran into this issue as well, and managed to partially track down the problem. Current versions of sshfs attempt to pass the requested \"mode\" passed to create to the sftp open operation, using SSH_FILEXFER_ATTR_PERMISSIONS. That operation fails on the server. Squelching the \"mode\" argument to 0 makes the operation succeed, and creating new files works.\nThis looks like a bug in the OpenSSH Windows port. However, sshfs can work around it; I submitted a pull request to the sshfs project adding support for such a workaround: https://github.com/libfuse/sshfs/pull/128. Any update on the fix in WSL?. ",
    "benhillis": "Update: I have verified that my fix resolves the issue and the unittest-win32compat.exe unit test passes.  I\u2019ve also ensured that cmd.exe, powershell.exe, and now bash.exe work correctly when launched in an ssh session.. ",
    "havalli": "@bagajjal - I teste with -n option. Still same error. How do i reopen this issue?. ",
    "rjpackito": "Same problem, -n does not help. You can help to solve the problem, since you need to deploy projects to the Windows server using ssh?. @bagajjal . @bagajjal @havalli @nellfr Can there be a problem in Gitlab? I wrote C # code that executes ssh and it normally works.. @nellfr Yes, I see the same error during the execution of the script on Gitlab Runner CI/CD . I can not understand what the problem is. Because the SCP command works fine. I really need the SSH to deploy on my remote machine my dotnet core application. @bagajjal that is, you can not fix the problem in OpenSSH? Can you install the Gitlab Runner?. @bagajjal I do not know, can putty do xcopy through cmd?. @bagajjal Hey. I used plink.exe and it works in gitlab-runner.. Please. Need your help.. @manojampalam Yes, i tried. @manojampalam Sorry, but I will not find those logs. I started using plink.exe and my task was solved. I can not experiment with a productive machine. ",
    "manjeet24feb": "I am facing the same issue. Tried almost everything -n etc. It is getting stuck at ssh. scp is working fine.. Still the same. ssh is not closing the connection. Therefore it is stuck.. ",
    "anrose00": "Encountered this problem myself. It happens when you run SSH as a child process via CreateProcess and stdhandles are being redirected. \nI executed this command as an example:\n    ssh -n -T user@server ls\nThe return code signals, the command was successful, the output to stdout is like you would expect it, but you get output to stderr.\nIf you put a binary zero into the hStdInput of STARTUPINFO, you will get the following output on StdError:\n    GetConsoleMode on STD_INPUT_HANDLE failed with 6\n    fcntl(-2, F_GETFL): Bad file descriptor\nIf you put a handle to a file or  /dev/null  into the hStdInput of STARTUPINFO, you will get only \n   GetConsoleMode on STD_INPUT_HANDLE failed with 6\nIt seems that with the option \"-T\" some code still tries to get the console capabilities using GetConsoleMode, which fails on file handles and triggers this error being written to stderr.\nhttps://serverfault.com/questions/593399/what-is-the-benefit-of-not-allocating-a-terminal-in-ssh\nhttps://docs.microsoft.com/en-us/windows/console/getconsolemode\nHope this helps to fix the problem.\n. Created a simple wrapper that simply passes the first argument to CreateProcess. This way you can write in a shell \"sshwrap \"ssh -n -T user@server cmd\".\nYou will find two files in temp directory: ssh-stdout, ssh-stderr.\n```\n   #include \n   #include \nHANDLE GetFileHandleForRedirection(LPTSTR sName, BOOL bTmp, INT iRwMode)\n   {\n      TCHAR sFnBuffer[MAX_PATH];\n      SECURITY_ATTRIBUTES stSecAttr;\n      HANDLE hFile;\n  if (bTmp)\n  {\n     GetTempPath(MAX_PATH,sFnBuffer);\n     strcat(sFnBuffer,sName);\n  }\n  else\n  {\n     strcpy(sFnBuffer,sName);\n  }\n\n  memset(&stSecAttr,0,sizeof(SECURITY_ATTRIBUTES));\n  stSecAttr.nLength=sizeof(SECURITY_ATTRIBUTES);\n  stSecAttr.bInheritHandle=TRUE;\n\n  hFile = CreateFile(sFnBuffer,iRwMode,0,&stSecAttr,OPEN_ALWAYS,0,NULL);\n  if (hFile == INVALID_HANDLE_VALUE)\n  {\n     return NULL;\n  }\n  SetFilePointer(hFile,0,NULL,FILE_END);\n  return hFile;\n\n}\nBOOL SShExecute(LPTSTR path, BOOL wait, BOOL hidden, LPDWORD lastError, LPDWORD returnCode)\n   {\n      STARTUPINFOA startUpInfo;\n      PROCESS_INFORMATION pInfo;\n      BOOL res;\n      HANDLE hStdIn,hStdOut,hStdErr;\n  memset(&startUpInfo,0, sizeof(startUpInfo));\n  startUpInfo.cb = sizeof(startUpInfo);\n  if (hidden) \n  {\n     startUpInfo.wShowWindow = 0;\n     startUpInfo.dwFlags = STARTF_USESHOWWINDOW | STARTF_USESTDHANDLES | STARTF_USESIZE;\n     startUpInfo.dwXSize = 0;  \n     startUpInfo.dwYSize = 0;\n\n     hStdIn = GetFileHandleForRedirection(\"nul\", FALSE, GENERIC_READ );\n     if (hStdIn)\n        startUpInfo.hStdInput = hStdIn;\n\n     hStdOut = GetFileHandleForRedirection(\"ssh-stdout\", TRUE, GENERIC_WRITE );\n     if (hStdOut)\n        startUpInfo.hStdOutput = hStdOut;\n\n     hStdErr = GetFileHandleForRedirection(\"ssh-stderr\", TRUE, GENERIC_WRITE );\n     if (hStdErr)\n        startUpInfo.hStdError = hStdErr;\n\n  }\n  res = CreateProcess(NULL,path,NULL,NULL,TRUE,NORMAL_PRIORITY_CLASS,NULL,NULL,&startUpInfo,&pInfo);\n  if (res && wait) {\n     WaitForSingleObject( pInfo.hProcess, INFINITE );\n  }\n\n  if (hStdIn) CloseHandle(hStdIn);\n  if (hStdOut) CloseHandle(hStdOut);\n  if (hStdErr) CloseHandle(hStdErr);\n\n  if (res) {\n     GetExitCodeProcess(pInfo.hProcess,returnCode);\n     CloseHandle( pInfo.hProcess );\n     CloseHandle( pInfo.hThread );\n  }\n  else {\n     *lastError = GetLastError();\n  }\n  return res;\n\n}\nint _tmain(int argc, TCHAR *argv[])\n   {\n      DWORD dwLastError,dwReturnCode=0;  \n  if (argc == 2)\n  {\n     SShExecute(argv[1], TRUE, TRUE, &dwLastError, &dwReturnCode);\n  }\n  return dwReturnCode;\n\n}\n```. Issue ist still present in Release 7.9.0.0 - please reopen.. Quoting from the ssh man pages regarding the \"-n\" option:\n\n-n' Redirects stdin from /dev/null (actually, prevents reading from stdin). This must be used when ssh is run in the background. \n\nPerhaps it's possible to make console IO for stdin dependent on this option?. I changed the minimal example to give the proposal with pipes a try.\n```\ninclude \ninclude \nHANDLE GetFileHandleForRedirection(LPTSTR sName, BOOL bTmp, INT iRwMode)\n{\n   TCHAR sFnBuffer[MAX_PATH];\n   SECURITY_ATTRIBUTES stSecAttr;\n   HANDLE hFile;\nif (bTmp)\n   {\n      GetTempPath(MAX_PATH,sFnBuffer);\n      strcat(sFnBuffer,sName);\n   }\n   else\n   {\n      strcpy(sFnBuffer,sName);\n   }\nmemset(&stSecAttr,0,sizeof(SECURITY_ATTRIBUTES));\n   stSecAttr.nLength=sizeof(SECURITY_ATTRIBUTES);\n   stSecAttr.bInheritHandle=TRUE;\nhFile = CreateFile(sFnBuffer,iRwMode,0,&stSecAttr,OPEN_ALWAYS,0,NULL);\n   if (hFile == INVALID_HANDLE_VALUE)\n   {\n      return NULL;\n   }\n   SetFilePointer(hFile,0,NULL,FILE_END);\n   return hFile;\n}\nHANDLE GetReadHandleForRedirection()\n{\n   SECURITY_ATTRIBUTES stSecAttr;\n   HANDLE hPipeRead, hPipeWrite;\n   BOOL bRes;\nmemset(&stSecAttr,0,sizeof(SECURITY_ATTRIBUTES));\n   stSecAttr.nLength=sizeof(SECURITY_ATTRIBUTES);\n   stSecAttr.bInheritHandle=TRUE;\nbRes = CreatePipe(&hPipeRead,&hPipeWrite,&stSecAttr,0);\n   if (!bRes)\n      return NULL;\nCloseHandle(hPipeWrite);\n   return hPipeRead;\n}\nBOOL SShExecute(LPTSTR path, BOOL wait, BOOL hidden, LPDWORD lastError, LPDWORD returnCode)\n{\n   STARTUPINFOA startUpInfo;\n   PROCESS_INFORMATION pInfo;\n   BOOL res;\n   HANDLE hStdIn,hStdOut,hStdErr;\nmemset(&startUpInfo,0, sizeof(startUpInfo));\n   memset(&pInfo,0, sizeof(pInfo));\nstartUpInfo.cb = sizeof(startUpInfo);\n   if (hidden) \n   {\n      startUpInfo.wShowWindow = 0;\n      startUpInfo.dwFlags = STARTF_USESHOWWINDOW | STARTF_USESTDHANDLES | STARTF_USESIZE;\n      startUpInfo.dwXSize = 0;\n      startUpInfo.dwYSize = 0;  \n  hStdIn = GetReadHandleForRedirection();\n\n  // printf(\"FileType stdin: %i\\r\\n\",GetFileType(hStdIn));\n  if (hStdIn)\n     startUpInfo.hStdInput = hStdIn;\n\n  hStdOut = GetFileHandleForRedirection(\"ssh-stdout.txt\", TRUE, GENERIC_WRITE );\n  if (hStdOut)\n     startUpInfo.hStdOutput = hStdOut;\n\n  hStdErr = GetFileHandleForRedirection(\"ssh-stderr.txt\", TRUE, GENERIC_WRITE );\n  if (hStdErr)\n     startUpInfo.hStdError = hStdErr;\n\n}\n   res = CreateProcess(NULL,path,NULL,NULL,TRUE,NORMAL_PRIORITY_CLASS,NULL,NULL,&startUpInfo,&pInfo);\n   if (res && wait) {\n      WaitForSingleObject( pInfo.hProcess, INFINITE );\n   }\nif (hStdIn) CloseHandle(hStdIn);\n   if (hStdOut) CloseHandle(hStdOut);\n   if (hStdErr) CloseHandle(hStdErr);\nif (res) {\n      GetExitCodeProcess(pInfo.hProcess,returnCode);\n      CloseHandle( pInfo.hProcess );\n      CloseHandle( pInfo.hThread );\n   }\n   else {\n      *lastError = GetLastError();\n   }\n   return res;\n}\nint _tmain(int argc, TCHAR *argv[])\n{\n   DWORD dwLastError,dwReturnCode=0;  \nif (argc == 2)\n   {\n      SShExecute(argv[1], TRUE, TRUE, &dwLastError, &dwReturnCode);\n   }\n   return dwReturnCode;\n}\n```\nThis seems to work for Windows 7 systems, but not for Windows 10. On Windows 10 I'm still getting the \"GetConsoleMode on STD_INPUT_HANDLE failed with 6\" although the file type for STD_INPUT_HANDLE is now \"FILE_TYPE_PIPE\".\nSo either the error message is wrong here, or SSH is using ConsoleAPI for pipe handles. I've detected another more critical issue with Win10, but I will open an extra issue for this.. Big thanks for the quick response!. ",
    "zjalexander": "cmd.exe properties:\n\nLegacy mode is unchecked. Filter clipboard contents is checked but turning that off will still lead to the repro. . yup, the  FixForwardSlash binary did solve my issue! thanks so much! :) . ",
    "marekr": "Same problem here. Latest release has this broken. Worked before.. It also injects a new line when pasting every single time, even if your paste doesn't have a new line (and you explicitly check). @bagajjal \n/ seems to work for me. New lines no longer inserted as well.. @johnk1 @ciberesponce \nJust use the attached binary in the thread, it fixes it.. Works now, thanks.. Same issues here :/\nIt used to be buggy with Nano where the first character of the document was offset/hidden.\nNow the character offset bug is gone but if you page up and down enough in Nano, it eventually dissociates content from scroll in a weird overlapping mess. Vim/Vi occasionally go nutty now too when they were previously fine.. ",
    "DHowett-MSFT": "@bagajjal Because this impacts typing a / as well as pasting one, this issue significantly impacts the use of the ssh client from windows. Can it be fixed in an out-of-cycle bugfix release?. @bagajjal Alt sending \\0 when you press it is almost definitely a bug, right? It doesn't even matter if you press it with another key -- just hitting alt, alt, alt will send \\0 \\0 \\0.. That makes sense; however: even pressing Alt-Tab -- which should not go to the session at all (!) -- sends a \\0. It seems bad that any modifier press is being \"sent\" when it could wait for a fully-baked key+modifier combo before it sends \\0.. \\| is VK_OEM_5.\n```cpp\ndefine VK_OEM_5          0xDC  //  '\\|' for US\n```\nIf @vinz243 is not using a US keyboard layout, | may not be on VK_OEM_5.\n. I see this on roughly 80% of connections to all servers. It's probably a clientside buffer reuse issue, not a server issue.. By \"latest\", I mean https://github.com/PowerShell/openssh-portable/commit/4666c11e0eec6b8f59ecc037089c054fa948bbbf. I believe the code at win32_pty.c:158 skips over the initialization of pid at line 183. Therefore, when we try to OpenProcess(...pid\u2026) at win32-doexec.c:378, it fails.. The function in win32_pty.c is also leaking cmd_w because of the early return.. The title erroneously says PrintMod when it should say PrintMotd.. A bit of psychic debugging here:\nAre you using the 32-bit version or the 64-bit version of Win32-OpenSSH? If you're using the 32-bit version on a 64-bit OS, I'm willing to bet that C:\\Windows\\System32\\conhost.exe is being redirected to C:\\Windows\\SysWOW64\\conhost.exe, which doesn't exist.\nIf so, there're two fixes, one short term and one long term:\n\nShort-term: use 64-bit win32-openssh(-win64)\nLong-term: When spawning a PTY, win32-openssh should either use our CreatePseudoConsole API or disable Wow64 filesystem redirection when spawning conhost.\n\nSide note: we had this exact problem when we implemented CreatePseudoConsole and friends, and I ended up fixing it ;). (and for the engineer who has to fix this: please switch to CreatePseudoConsole. In the absence of time to do that, however, the offending block of code is here and you'll have to use Wow64DisableWow64FsRedirection immediately before (but only on WOW64 builds) and Wow64RevertWow64FsRedirection immediately after creating the process.). @HealisticEngineer Excellent! I've not been deputized to do issue management on this repository, so would you mind renaming the bug to ConPTY fails to launch in WoW64 due to filesystem redirection?\n/cc @manojampalam \nThanks!. @NoMoreFood We worked with the win32-openssh team to light up pseudoconsole support before our APIs were ready with the public release of RS5. That's all :). @bagajjal (since this is still an actual issue, would you mind reopening it? thanks!). ",
    "euroclydon37": "Experiencing this as well. Forward slash is interpreted as a newline on my raspberry pi and our ubuntu file server at work. Gonna try that binary.. ",
    "johnk1": "Yes, same issue seen running through Powershell to an ubuntu server. Merely typing / is impacted.. ",
    "ciberesponce": "issue exists even without clipboard.  \"/\" just simply isn't accepted as a character in this session. ",
    "lvic": "Hi, I ran into the same problem. How do I 'use the attached binary'? Just running it once doesn't seem to fix the issue. Thanks in advance.. ",
    "reap3r119": "If you try to use the enter key while editing text, it tries to justify the text instead. It only happens when using ConEmu with its hooks enabled. Trying this in Command Prompt works fine, as does ConEmu with the hooks disabled . Enable Inject ConEmuHk under Features in ConEmu's settings, open a new console and connect to the ssh server, run nano somefile, stop it with Ctrl+Z, then use fg to bring it back to the foreground.\nI've tried it with putty, kitty and cygwin, and it works just fine in all of them. I also tried it on a 32-bit Win10 machine, and it does the same thing.. I tested it with a fresh install of ubuntu server, and I'm not encountering the same issue any more. I'll look more into what's different when I get back. ",
    "mivale": "Same here. Same versions, followed all instructions to the letter. 20+ yrs experience with setting up openssh servers on linux, so no lack of general knowledge.\nWhen I run this command from my home folder:\nssh -i .ssh\\id_rsa Administrator@localhost\nI get the error\nWarning: Identity file .ssh\\id_rsa not accessible: No such process.\nMaybe this has something to do with this line in the config?\nhostkeyagent \\\\.\\pipe\\openssh-ssh-agent\nMight be related?. I've found something that might be of importance:\nI created the authorized_keys file on Windows using Notepad++.\nWhen editing I noticed that the encoding for the file (as show at the right-bottom of the window) was shown as UCS-2 LE BOM\nWhen I changed this to UTF-8 (using the Encoding menu) it suddenly started working!\nBefore, i tried to edit the file in notepad, but that obviously didn't change the BOM.\nOld setting\n\nNew setting\n\n. ",
    "wcc-neal": "Thanks - the conversion to utf-8 fixed it for me as well. ",
    "benh57": "This saved me as well. Thanks!. ",
    "hartois": "@bagajjal Where did you find file transfer by chunks in FileZilla and WinSCP? In FileZilla you transfer file wholly!\nI wrote in issue description that if you transfer file from Windows wholly, then the file is correct, and if by chunks - is not.\nI need transfer file by chunks - I need compress file on transfer.\nI test PHP-script with OpenSSH SFTP on Linux and transfereed file was CORRECT!\nIt's a very simple script:\n```\n!/usr/bin/php\n<?php\ninclude 'phpseclib/autoload.php';\nuse phpseclib\\Net;\nuse phpseclib\\Crypt;\n$sshHost = 'backuphost.local';\n$sshUser = 'root';\n$sshKeyFile = '/root/mswork1c.backuper.key';\n$src = '/C:/testfile.img';\n$dst = '/home/testfile_chunks_win_256.img';\ndefine('NET_SFTP_QUEUE_SIZE', 15);\n$sftp = new Net\\SFTP($sshHost, 22);\n$key = new Crypt\\RSA();\n$private = file_get_contents($sshKeyFile);\n$key->loadKey($private);\nif(!$sftp->login($sshUser, $key)){\n    echo \"Cannot login to server \".$sshHost.\"!\\n\";\n    exit(1);\n}\n$mode = 'wb';\n$fp_out = fopen($dst, $mode);\n$srcSize = $sftp->size($src);\n$chunkSize = 256 * 1024;\n$chunk = 1;\n$offset = 0;\n$readSize = 0;\necho \"\\nGetting \".$src.\" to \".$dst.\"\\n\";\nfor($offset = 0; $offset < $srcSize; $offset+= $chunkSize){\n    $read = $sftp->get($src, false, $offset, $chunkSize);\n    $ret = fwrite($fp_out, $read);\n    if(!$ret)\n        break;\n    $readSize += $chunkSize;\n$perc = number_format($readSize / $srcSize * 100, 2).'%';\necho \"Getted \".$readSize.\" of \".$srcSize.\" Bytes (\".$perc.\") from source file, Chunk:\".$chunk.\"\\r\";\n$chunk++;\n\n}\necho \"\\n\";\nfclose($fp_out);\n?>\nI repeat: file transfered by this script from **Linux** host - **correct**, same file transfered from **Windows** host - **not correct**!\n. Any news on this?. Try add before:\ninclude 'phpseclib/autoload.php';\nthis:\n$path = '/path/to/unpacked/phpseclib';\nset_include_path(get_include_path() . PATH_SEPARATOR . $path);\n. Please run:\ncd /home/balu/sftp_test\nwget https://getcomposer.org/composer.phar\nphp composer.phar require phpseclib/phpseclib ~2.0\n```\nRemove\n$path = '/home/balu/sftp_test/phpseclib/phpseclib';\nset_include_path(get_include_path() . PATH_SEPARATOR . $path);\nChange autoload.php path:\ninclude 'vendor/autoload.php';. Did you succeed in reproducing the problem?. @bagajjal fast test now OK\nI will test more carefully. I can't more reproduce problem, thanks. ",
    "tarmizee": "@bagajjal \nThanks for your reply. I performed the following step:\nDownload psexec from here\nLaunch cmd.exe as SYSTEM\npsexec.exe -i -s cmd.exe\nregister host keys in above cmd.exe\nssh-add ssh_host_dsa_key\nssh-add ssh_host_rsa_key\nssh-add ssh_host_ecdsa_key\nssh-add ssh_host_ed25519_key\nI restarted the ssh-agent and sshd services. It seems the same error still appear. Attached is the latest error.\nsshd.txt\nLet me know what i should check next.\nThanks and Best Regards\nTarmizee. @bagajjal \nApologize, attached is the latest error log:\nsshd_1529.txt\n. @bagajjal ,\nThanks for your further support and advice regarding the error will keep warning. \nI need further advice regarding connection refused. I did further test using putty, cmd and WinSCP :\nssh_command_error.docx\nwinscp_openssh_error.docx\nputty_openssh_error.docx\ni am not sure if there is further setting that I need to add to the openssh or the client tool it self.\nThanks and Best Regards\nTarmizee. @bagajjal \nAttached is the sshd.log and sshd_config \nsshd_config.txt\nsshd.zip\nThanks and Best Regards\nTarmizee. @bagajjal ,\nYes, the ssh-agent is running. I performed step a) to c) and received the following message:\nThe agent has no identities.\nLet me know other checking that you require me to perform.\nThanks and Best Regards\nTarmizee\n. @bagajjal \nThanks for the step of investigation\nI performed the step 1 and 2. It seems the result at step 2 return with \"The agent has no identities.\"\nssh_add_error.docx\nThanks and Best Regards\nTarmizee\n. @bagajjal \nThanks for your further support.\nI performed FixHostFilePermissions.ps1. Attached is the screenshot. I am not sure whether the error message that appeared in the shell can be ignored or not. Please advice\nfixhostfilepermission.docx\nI tried to register using ssh-add.exe and also performed ssh-add.exe -l. I still getting error \"\"The agent has no identities.\"\". Need your help as well to verify the permission that i attached to the fixhostfilepermission.docx. I would like to know does user system need to own the file ssh_host_ecdsa_key, ssh_host_ed25519_key and ssh_host_rsa_key as well ? I noticed that only file ssh_host_dsa_key is owned by user system.\nThanks and Best Regards\nTarmizee. @bagajjal \nThanks for your support. I performed reinstallation using domain administrator user and the issue is resolved. It seems using domain administrator to do installation provided correct permission to those key.\nThanks for your excellence suggestion.\nBest Regards\nTarmizee. ",
    "DHowett": "This is a possible duplicate of #845, with a different repro.. ",
    "dgc": "You could almost dismiss this as a Vim issue but this works correctly via PuTTY.. @bagajjal It's fixed for me in 0.0.20.0\nThanks!. ",
    "lumean": "Thanks, worked perfectly. ",
    "StevcenSongqh": "Dear Bagajjal,  here is the message from our sftp client --> \"We are unable to read the files from \u2018ToXXX\u2019 directory as the files has only read/write permissions as shown in the below screenshot. The user must have read/write/execute permissions to pick the files from the folder.\"\nthe is the screen dump in their end...\n\nhow can I add the execute right for them ? thank you \n. The sftp client insist that they need to have the read/write/execute permission (see the following screen shot), please help which command to assign the files whih the request right in openSSH for windows 7 ? \n\n. hi bagajjal,\nI have reinstalled the SFTP server with CYGWIN and it looks settle the issue, my client now can connect\nthanksSteven Song\n  From: bagajjal <notifications@github.com>\n\nTo: PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com \nCc: StevcenSongqh songqh@yahoo.com; Mention mention@noreply.github.com\n Sent: Wednesday, September 13, 2017 2:15 AM\n Subject: Re: [PowerShell/Win32-OpenSSH] user feedback need to assign execute rights on the files (#876)\n@StevcenSongqh - Any update on this?\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.  \n. ",
    "Valdaun": "I also am facing the same issues here, I believe this is actually a Win32-OpenSSH specific problem not one of the clients used.   I get the same symptoms from both FileZilla and WinSCP.  Files are uploaded successfully but only have rw permission from the point of view from the clients:\n\nThe _Template.xlsx and RMA.pdf files in the screenshot were uploaded from two different clients (FileZilla and WinSCP) but have the same permissions as you can see.\nIn Windows these are what actually get translated, which is even worse:\n\n\n\nThe biggest problem is that users are unable to delete files that they themselves just uploaded.  This causes this to not be usable for many scenarios like sending backup configs from various devices because they can't control deleting.   It also drops inheritance on the permissions, so even if the root folder is correctly permissioned, the individual files that get uploaded get the inheritance wiped out and this simple read/write only put in place.\nHopefully a fix can be put in place for this, because otherwise this product is totally fantastic and I was super excited to stumble upon it today.  But as it stands, I'll have to likely go one of the other variants like CYGWIN or something for the moment.  But I would like to revisit if this behavior can be fixed, as I like how clean this solution is overall.. One other thing I thought to try right after was to see if using an SSH client alone and creating files once logged in would have any issues.   I connected using PuTTY as the same test user, and ran the following to create a directory and then a single text file:\n\nBoth the folder and the file in this case have expected permissions, that being that they keep the inheritance from whatever folder they were created inside of:\n\nSo this issue does seem specific to the SFTP handling side of things.. One last update ... I was able to implement a workaround by granting that local account \"cisco\" membership in the local \"Administrators\" group (which gets assigned full control permission).   This is not ideal, as it violates the concept of least privilege but it did allow me to proceed and use this for now which I'm happy about.  Hopefully the underlying issue can be resolved at some point, however.\nThanks!. ",
    "liurui39660": "Only one line\n\nagent_start pid:9000, dbg:1\n\nThen, nothing happened, ssh-agent didn't exit but keep running. \nHowever, while it is running, sshd service is still unavailable, it returns the same error as before:\n\nError 1068: The dependency service or group failed to start.\n. There is something strange: after doing some ssh-agent -d , ssh-agent -ddd and some Ctrl+C, the ssh-agent service is able to start, sshd is also available.\n\nThe only thing I did after last post is trying to install freeSSHd and freeFTPd, both of them are setup successfully, the former occupied port 22, and the latter occupied port 20 (I assigned it). I shut them down before I tried ssh-agent -d.\nWhat I did:\n- Try to install freeSSHd and freeFTPd\n- Idle for 4 or 5 hours (the server is under testing, so no one use it except me)\n- Open a new Powershell session\n- ssh-agent -d, it returned\n\nagent_start pid:9656, dbg:1\n\nand keep running, nothing happened\n- Ctrl+C, it stopped and returned\n\ndebug1: shutting down\n\n\nssh-agent -ddd, returned\nagent_start pid:4820, dbg:1\n\n\n\nit is also OK, nothing happened\n- Ctrl+C, returned\n\ndebug3: Ctrl+C received\n\nthen it stuck, it didn't show PS C:\\Users\\Administrator> as usual\n\nClick the X to close the session forcely\nOpen a new Powershell session\nssh-agent, seemed successful, and showed PS C:\\Users\\Administrator>, but in the past, it returns an error (1053) instead\nOpen serices.msc, tried to start ssh-agent service, succeeded\nStart sshd, succeeded\n\nI have no idea what happened on it, since I can't reboot the server, I can't reproduce the problem again. May be I should temporarily close the issue until next it goes wrong.. ",
    "foobarberger": "@manojampalam  Since my last post, I discovered that I was able to successfully log in to the windows server from it's self using keys (just to add to confusion). I have attached the logs from the successful login as well.\nLinux to Windows\nC:\\Program Files\\OpenSSH>sshd.exe -dd\ndebug2: load_server_config: filename ./sshd_config\ndebug2: load_server_config: done config len = 331\ndebug2: parse_server_config: config ./sshd_config len 331\ndebug1: sshd version OpenSSH_7.5, LibreSSL 2.5.3\ndebug1: private host key #0: ssh-rsa SHA256:QwTN5i5KRj1N/V3elDBmFyOZy2Snv9aiMXEr+/0UDQA\ndebug1: private host key #1: ssh-dss SHA256:BahN99X49cQwHvreJG7ZigjF83jvmlSd28yrM4gBtYo\ndebug1: private host key #2: ecdsa-sha2-nistp256 SHA256:RfYLURJW81fjfXQP7DC+G/HF+z4vDtA28udp3WlSWII\ndebug1: private host key #3: ssh-ed25519 SHA256:1/yPEl6gcTc3Xaep7CH2LsAoc4DfJOCIQ6Src2URx10\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug1: Server will not fork when running in debugging mode.\nConnection from 0.0.0.0 port 53827 on 10.144.19.51 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_6.6.1\ndebug1: match: OpenSSH_6.6.1 pat OpenSSH_6.6.1* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_7.5\ndebug2: fd 5 setting O_NONBLOCK\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-6\n4@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-25\n6-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-dss-cert-v00@openssh.com,ssh-ed25519,ssh-rsa,ssh-dss\ndebug2: ciphers ctos: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: ciphers stoc: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: MACs ctos: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: MACs stoc: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: compression ctos: none,zlib@openssh.com,zlib\ndebug2: compression stoc: none,zlib@openssh.com,zlib\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: curve25519-sha256@libssh.org\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: client->server cipher: aes128-ctr MAC: hmac-sha1-etm@openssh.com compression: none\ndebug1: kex: server->client cipher: aes128-ctr MAC: hmac-sha1-etm@openssh.com compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 4294967296 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 4294967296 blocks\ndebug1: KEX done\ndebug1: userauth-request for user REMOTEUSER service ssh-connection method none\ndebug1: attempt 0 failures 0\ndebug2: parse_server_config: config reprocess config len 331\ndebug2: input_userauth_request: setting up authctxt for REMOTEUSER\ndebug2: input_userauth_request: try method none\nFailed none for REMOTEUSER from 0.0.0.0 port 53827 ssh2\ndebug1: userauth-request for user REMOTEUSER service ssh-connection method publickey\ndebug1: attempt 1 failures 0\ndebug2: input_userauth_request: try method publickey\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:O2ratkb64QNx18+9XOeNBehFYeVf4UNGPXcYTaBWyRc\ndebug1: trying public key file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys\ndebug2: user_key_allowed: check options: 'ssh-dss fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjS\npQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST\n'\ndebug2: user_key_allowed: advance: 'fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug2: key not found\ndebug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\nFailed publickey for REMOTEUSER from 0.0.0.0 port 53827 ssh2\ndebug1: userauth-request for user REMOTEUSER service ssh-connection method publickey\ndebug1: attempt 2 failures 1\ndebug2: input_userauth_request: try method publickey\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:PfUk6H++dvRUOSzs2gHQOU1U3STptaH0lWRGPIkXr3I\ndebug1: trying public key file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys\ndebug2: user_key_allowed: check options: 'ssh-dss fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug2: user_key_allowed: advance: 'fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug1: matching key found: file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys, line 3 RSA SHA256:PfUk6H++dvRUOSzs2gHQOU1U3STptaH0lWRGPIkXr3I\ndebug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa Postponed publickey for REMOTEUSER from 0.0.0.0 port 53827 ssh2\ndebug1: userauth-request for user REMOTEUSER service ssh-connection method publickey\ndebug1: attempt 3 failures 1\ndebug2: input_userauth_request: try method publickey\ndebug1: trying public key file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys\ndebug2: user_key_allowed: check options: 'ssh-dss fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGD rH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug2: user_key_allowed: advance: 'fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug1: matching key found: file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys, line 3 RSA SHA256:PfUk6H++dvRUOSzs2gHQOU1U3STptaH0lWRGPIkXr3I\ndebug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa\nFailed publickey for REMOTEUSER from 0.0.0.0 port 53827 ssh2: RSA SHA256:PfUk6H++dvRUOSzs2gHQOU1U3STptaH0lWRGPIkXr3I\ndebug1: userauth-request for user REMOTEUSER service ssh-connection method publickey\ndebug1: attempt 4 failures 2\ndebug2: input_userauth_request: try method publickey\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:JDuzMdAfTlbs7IRtwEyugqX7J0Zy8QIyTeFLNdQ+0DE\ndebug1: trying public key file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys\ndebug2: user_key_allowed: check options: 'ssh-dss fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug2: user_key_allowed: advance: 'fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug2: key not found\ndebug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa Failed publickey for REMOTEUSER from 0.0.0.0 port 53827 ssh2\ndebug1: userauth-request for user REMOTEUSER service ssh-connection method publickey\ndebug1: attempt 5 failures 3\ndebug2: input_userauth_request: try method publickey\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:k6vEnEYEfIsiTPoIuVRNF3pul+V4qfA8AE/P1lSWln0\ndebug1: trying public key file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys\ndebug2: user_key_allowed: check options: 'ssh-dss fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug2: user_key_allowed: advance: 'fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug2: key not found\ndebug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa Failed publickey for REMOTEUSER from 0.0.0.0 port 53827 ssh2\ndebug1: userauth-request for user REMOTEUSER service ssh-connection method publickey\ndebug1: attempt 6 failures 4\ndebug2: input_userauth_request: try method publickey\ndebug1: trying public key file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys\ndebug1: matching key found: file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys, line 1 DSA SHA256:M2U+jucArRIamhQf76ed9nJFTQuNDm4bMu8dJ2pceaM\ndebug2: userauth_pubkey: authenticated 0 pkalg ssh-dss Failed publickey for REMOTEUSER from 0.0.0.0 port 53827 ssh2: DSA SHA256:M2U+jucArRIamhQf76ed9nJFTQuNDm4bMu8dJ2pceaM\ndebug1: userauth-request for user REMOTEUSER service ssh-connection method keyboa rd-interactive\ndebug1: attempt 7 failures 5\ndebug2: input_userauth_request: try method keyboard-interactive\ndebug1: keyboard-interactive devs\ndebug1: auth2_challenge: user=REMOTEUSER devs=\ndebug1: kbdint_alloc: devices ''\ndebug2: auth2_challenge_start: devices Failed keyboard-interactive for REMOTEUSER from 0.0.0.0 port 53827 ssh2 Connection closed by authenticating user REMOTEUSER 0.0.0.0 port 53827\ndebug1: do_cleanup\nSuccessful Windows localhost login\nC:\\Program Files\\OpenSSH>sshd.exe -dd\ndebug2: load_server_config: filename ./sshd_config\ndebug2: load_server_config: done config len = 331\ndebug2: parse_server_config: config ./sshd_config len 331\ndebug1: sshd version OpenSSH_7.5, LibreSSL 2.5.3\ndebug1: private host key #0: ssh-rsa SHA256:QwTN5i5KRj1N/V3elDBmFyOZy2Snv9aiMXEr+/0UDQA\ndebug1: private host key #1: ssh-dss SHA256:BahN99X49cQwHvreJG7ZigjF83jvmlSd28yrM4gBtYo\ndebug1: private host key #2: ecdsa-sha2-nistp256 SHA256:RfYLURJW81fjfXQP7DC+G/HF+z4vDtA28udp3WlSWII\ndebug1: private host key #3: ssh-ed25519 SHA256:1/yPEl6gcTc3Xaep7CH2LsAoc4DfJOCIQ6Src2URx10\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug1: Server will not fork when running in debugging mode. Connection from fe80::7973:e2cd:d008:59de%12 port 58062 on fe80::7973:e2cd:d008:59de%12 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_7.5\ndebug1: match: OpenSSH_7.5 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_7.5\ndebug2: fd 5 setting O_NONBLOCK\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-6\n4@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug1: KEX done\ndebug1: userauth-request for user remoteuser@mydom service ssh-connection method none\ndebug1: attempt 0 failures 0\ndebug2: parse_server_config: config reprocess config len 331\ndebug2: input_userauth_request: setting up authctxt for remoteuser@mydom\ndebug2: input_userauth_request: try method none Failed none for remoteuser@mydom from fe80::7973:e2cd:d008:59de%12 port 58062 ssh2\ndebug1: userauth-request for user remoteuser@mydom service ssh-connection method publickey\ndebug1: attempt 1 failures 0\ndebug2: input_userauth_request: try method publickey\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:fauxsha\ndebug1: trying public key file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys\ndebug2: user_key_allowed: check options: 'ssh-dss fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug2: user_key_allowed: advance: 'fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug1: matching key found: file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys, line 2 RSA SHA256:fauxsha\ndebug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512 Postponed publickey for remoteuser@mydom from fe80::7973:e2cd:d008:59de%12 port 58062 ssh2\ndebug1: userauth-request for user remoteuser@mydom service ssh-connection method publickey\ndebug1: attempt 2 failures 0\ndebug2: input_userauth_request: try method publickey\ndebug1: trying public key file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys\ndebug2: user_key_allowed: check options: 'ssh-dss fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug2: user_key_allowed: advance: 'fakeypants+mcfakekey/ofliesville/CGYlE77jzjaX1D0KYlAM8Z2b/h/KaB564K8FsHxr+L7s6RGwCDiBZvNSV4B7ckJaYHaBmOkq2Z91esQmwFwDzearmTu8Fis4AAACBAIK4qJNFUnrflfx4cW8mjSpQJj1zZZrwzX5cfAyC2zn+Yh3YbWqI+M9OJK097JS3FGNi6BpAcmZ3S7zOCNRpAhEayMIXy3N4p/lSGDrH4Le1i8dF69uEB/6P+fVd52VbUl4oGNlFdprBat0KItnzxrflvnoIT9lUt4WCp08LgqtT remoteuser@mydom@REMOTEHOST'\ndebug1: matching key found: file C:\\\\Users\\\\REMOTEUSER\\\\.ssh/authorized_keys, line 2 RSA SHA256:fauxsha\ndebug2: userauth_pubkey: authenticated 1 pkalg rsa-sha2-512 Accepted publickey for remoteuser@mydom from fe80::7973:e2cd:d008:59de%12 port 58062 ssh2: RSA SHA256:fauxsha\ndebug1: Entering interactive session for SSH2.\ndebug2: fd 6 setting O_NONBLOCK\ndebug2: fd 7 setting O_NONBLOCK\ndebug1: server_init_dispatch\ndebug1: server_input_channel_open: ctype session rchan 0 win 1048576 max 16384\ndebug1: input_session_request\ndebug1: channel 0: new [server-session]\ndebug2: session_new: allocate (allocated 0 max 10)\ndebug1: session_new: session 0\ndebug1: session_open: channel 0\ndebug1: session_open: session 0: link with channel 0\ndebug1: server_input_channel_open: confirm session\ndebug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\ndebug1: server_input_channel_req: channel 0 request pty-req reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req pty-req\ndebug1: Allocating pty.\ndebug1: session_pty_req: session 0 alloc console\ndebug1: server_input_channel_req: channel 0 request shell reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req shell\nStarting session: shell on console for remoteuser@mydom from fe80::7973:e2cd:d00\n8:59de%12 port 58062 id 0\ndebug2: fd 8 setting O_NONBLOCK\ndebug2: fd 9 setting O_NONBLOCK\ndebug2: fd 10 setting O_NONBLOCK\ndebug2: fd 11 setting O_NONBLOCK\ndebug2: fd 12 setting O_NONBLOCK\ndebug2: fd 13 setting O_NONBLOCK\ndebug1: Executing command: C:\\\\Program Files\\\\OpenSSH\\\\ssh-shellhost.exe\ndebug2: fd 5 setting TCP_NODELAY\ndebug2: channel 0: rfd 10 isatty. @manojampalam I avoid using any text editor when dealing with authorized_keys , and so used type id_dsa.pub > authorized_keys to create it. Will type alter the encoding? Sorry, not a windows guy.\nI used Get-Content and Set-Content in powershell to set encoding from ANSI to utf-8, but noticed no changes in behavior or in logs.. @JW0914 client ssh log\n```bash\nOpenSSH_6.6.1, OpenSSL 1.0.1e-fips 11 Feb 2013\ndebug1: Reading configuration data /home/me/.ssh/config\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 56: Applying options for \ndebug2: ssh_connect: needpriv 0\ndebug1: Connecting to remotehost [00.00.00.00] port 22.\ndebug1: Connection established.\ndebug3: Incorrect RSA1 identifier\ndebug3: Could not load \".ssh/test-host_rsa\" as a RSA1 public key\ndebug1: identity file .ssh/test-host_rsa type -1\ndebug1: identity file .ssh/test-host_rsa-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_6.6.1\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.5\ndebug1: match: OpenSSH_7.5 pat OpenSSH compat 0x04000000\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: load_hostkeys: loading entries for host \"remotehost\" from file \"/home/me/.ssh/known_hosts\"\ndebug3: load_hostkeys: found key type ECDSA in file /home/me/.ssh/known_hosts:1\ndebug3: load_hostkeys: loaded 1 keys\ndebug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: kex_parse_kexinit: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\ndebug2: kex_parse_kexinit: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-dss-cert-v00@openssh.com,ssh-ed25519,ssh-rsa,ssh-dss\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: none,zlib@openssh.com,zlib\ndebug2: kex_parse_kexinit: none,zlib@openssh.com,zlib\ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: first_kex_follows 0 \ndebug2: kex_parse_kexinit: reserved 0 \ndebug2: kex_parse_kexinit: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: kex_parse_kexinit: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: kex_parse_kexinit: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: kex_parse_kexinit: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: kex_parse_kexinit: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: kex_parse_kexinit: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: kex_parse_kexinit: none\ndebug2: kex_parse_kexinit: none\ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: first_kex_follows 0 \ndebug2: kex_parse_kexinit: reserved 0 \ndebug2: mac_setup: setup hmac-sha1-etm@openssh.com\ndebug1: kex: server->client aes128-ctr hmac-sha1-etm@openssh.com none\ndebug2: mac_setup: setup hmac-sha1-etm@openssh.com\ndebug1: kex: client->server aes128-ctr hmac-sha1-etm@openssh.com none\ndebug1: kex: curve25519-sha256@libssh.org need=20 dh_need=20\ndebug1: kex: curve25519-sha256@libssh.org need=20 dh_need=20\ndebug1: sending SSH2_MSG_KEX_ECDH_INIT\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ECDSA e7:aa:c8:d4:8b:02:58:da:64:e6:18:26:d3:be:6a:b2\ndebug3: load_hostkeys: loading entries for host \"remotehost\" from file \"/home/me/.ssh/known_hosts\"\ndebug3: load_hostkeys: found key type ECDSA in file /home/me/.ssh/known_hosts:1\ndebug3: load_hostkeys: loaded 1 keys\ndebug3: load_hostkeys: loading entries for host \"00.00.00.00\" from file \"/home/me/.ssh/known_hosts\"\ndebug3: load_hostkeys: found key type ECDSA in file /home/me/.ssh/known_hosts:1\ndebug3: load_hostkeys: loaded 1 keys\ndebug1: Host 'remotehost' is known and matches the ECDSA host key.\ndebug1: Found key in /home/me/.ssh/known_hosts:1\ndebug1: ssh_ecdsa_verify: signature correct\ndebug2: kex_derive_keys\ndebug2: set_newkeys: mode 1\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug2: set_newkeys: mode 0\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug2: key: me@myhost.localdomain (0x7fbefc2a5b30),\ndebug2: key: me@myhost.localdomain (0x7fbefc2a5ce0),\ndebug2: key: me@myhost.localdomain (0x7fbefc2aa3a0),\ndebug2: key: me@myhost.localdomain (0x7fbefc2aa6d0),\ndebug2: key: .ssh/test-host_rsa ((nil)), explicit\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred gssapi-keyex,gssapi-with-mic,publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: me@myhost.localdomain\ndebug3: send_pubkey_test\ndebug2: we sent a publickey packet, wait for reply\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug1: Offering RSA public key: me@myhost.localdomain\ndebug3: send_pubkey_test\ndebug2: we sent a publickey packet, wait for reply\ndebug1: Server accepts key: pkalg ssh-rsa blen 279\ndebug2: input_userauth_pk_ok: fp f3:26:a5:58:fa:22:af:36:34:92:46:38:b2:57:d9:2b\ndebug3: sign_and_send_pubkey: RSA f3:26:a5:58:fa:22:af:36:34:92:46:38:b2:57:d9:2b\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug1: Offering RSA public key: me@myhost.localdomain\ndebug3: send_pubkey_test\ndebug2: we sent a publickey packet, wait for reply\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug1: Offering RSA public key: me@myhost.localdomain\ndebug3: send_pubkey_test\ndebug2: we sent a publickey packet, wait for reply\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug1: Trying private key: .ssh/test-host_rsa\ndebug1: key_parse_private2: missing begin marker\ndebug1: read PEM private key done: type RSA\ndebug3: sign_and_send_pubkey: RSA 36:3a:af:27:d4:81:5f:39:2e:df:40:c5:a3:b8:16:e6\ndebug2: we sent a publickey packet, wait for reply\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive\ndebug3: remaining preferred: password\ndebug3: authmethod_is_enabled keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug2: userauth_kbdint\ndebug2: we sent a keyboard-interactive packet, wait for reply\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: userauth_kbdint: disable: no info_req_seen\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup password\ndebug3: remaining preferred: \ndebug3: authmethod_is_enabled password\ndebug1: Next authentication method: password\ndebug3: packet_send2: adding 48 (len 61 padlen 19 extra_pad 64)\ndebug2: we sent a password packet, wait for reply\ndebug1: Authentication succeeded (password).\nAuthenticated to remotehost ([00.00.00.00]:22).\ndebug2: fd 5 setting O_NONBLOCK\ndebug3: fd 6 is O_NONBLOCK\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug1: Requesting no-more-sessions@openssh.com\ndebug1: Entering interactive session.\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\ndebug2: callback start\ndebug2: fd 3 setting TCP_NODELAY\ndebug3: packet_set_tos: set IP_TOS 0x10\ndebug2: client_session2_setup: id 0\ndebug2: channel 0: request pty-req confirm 1\ndebug1: Sending environment.\ndebug3: Ignored env XDG_VTNR\ndebug3: Ignored env MATE_DESKTOP_SESSION_ID\ndebug3: Ignored env SSH_AGENT_PID\ndebug3: Ignored env XDG_SESSION_ID\ndebug3: Ignored env HOSTNAME\ndebug3: Ignored env SPARK_HOME\ndebug3: Ignored env XDG_GREETER_DATA_DIR\ndebug3: Ignored env GPG_AGENT_INFO\ndebug3: Ignored env TERM\ndebug3: Ignored env SHELL\ndebug3: Ignored env VTE_VERSION\ndebug3: Ignored env HISTSIZE\ndebug3: Ignored env WINDOWID\ndebug3: Ignored env GNOME_KEYRING_CONTROL\ndebug3: Ignored env USER\ndebug3: Ignored env http_proxy\ndebug3: Ignored env LS_COLORS\ndebug3: Ignored env XDG_SESSION_PATH\ndebug3: Ignored env XDG_SEAT_PATH\ndebug3: Ignored env SSH_AUTH_SOCK\ndebug3: Ignored env SESSION_MANAGER\ndebug3: Ignored env PATH\ndebug3: Ignored env MAIL\ndebug3: Ignored env DESKTOP_SESSION\ndebug3: Ignored env PWD\ndebug3: Ignored env JAVA_HOME\ndebug1: Sending env LANG = en_US.utf8\ndebug2: channel 0: request env confirm 0\ndebug3: Ignored env PYTHONSTARTUP\ndebug3: Ignored env GDM_LANG\ndebug3: Ignored env https_proxy\ndebug3: Ignored env GDMSESSION\ndebug3: Ignored env HISTCONTROL\ndebug3: Ignored env HOME\ndebug3: Ignored env XDG_SEAT\ndebug3: Ignored env SHLVL\ndebug3: Ignored env no_proxy\ndebug3: Ignored env GTK_OVERLAY_SCROLLING\ndebug3: Ignored env LOGNAME\ndebug3: Ignored env PYTHONPATH\ndebug3: Ignored env DBUS_SESSION_BUS_ADDRESS\ndebug3: Ignored env LESSOPEN\ndebug3: Ignored env XDG_RUNTIME_DIR\ndebug3: Ignored env DISPLAY\ndebug3: Ignored env XDG_CURRENT_DESKTOP\ndebug3: Ignored env COLORTERM\ndebug3: Ignored env XAUTHORITY\ndebug3: Ignored env _\ndebug3: Ignored env OLDPWD\ndebug2: channel 0: request shell confirm 1\ndebug2: callback done\ndebug2: channel 0: open confirm rwindow 0 rmax 32768\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: PTY allocation request accepted on channel 0\ndebug2: channel 0: rcvd adjust 2097152\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: shell request accepted on channel 0\n\u001b[2J\u001b[1;1H\u001b[0;39;24;27;37;40;mMicrosoft Windows [Version 6.3.9600]                                          \n\u001b[2;1H(c) 2013 Microsoft Corporation. All rights reserved.                            \n\u001b[4;1Hremoteuser@REMOTEHOST C:\\Users\\REMOTEUSER>                                   \u001b[4;46H\u001b[4;46H\u001b[4;46He                                  \u001b[4;47H\u001b[4;47Hx                                 \u001b[4;48H\u001b[4;48Hi                                \u001b[4;49H\u001b[4;49H\u001b[4;49Ht                               \u001b[4;50Hdebug2: channel 0: rcvd eof\ndebug2: channel 0: output open -> drain\ndebug2: channel 0: obuf empty\ndebug2: channel 0: close_write\ndebug2: channel 0: output drain -> closed\ndebug1: client_input_channel_req: channel 0 rtype exit-status reply 0\ndebug1: client_input_channel_req: channel 0 rtype eow@openssh.com reply 0\ndebug2: channel 0: rcvd eow\ndebug2: channel 0: close_read\ndebug2: channel 0: input open -> closed\ndebug2: channel 0: rcvd close\ndebug3: channel 0: will not send data after close\ndebug2: channel 0: almost dead\ndebug2: channel 0: gc: notify user\ndebug2: channel 0: gc: user detached\ndebug2: channel 0: send close\ndebug2: channel 0: is dead\ndebug2: channel 0: garbage collecting\ndebug1: channel 0: free: client-session, nchannels 1\ndebug3: channel 0: status: The following connections are open:\n  #0 client-session (t4 r0 i3/0 o3/0 fd -1/-1 cc -1)\ndebug1: fd 1 clearing O_NONBLOCK\ndebug3: fd 2 is not O_NONBLOCK\nConnection to remotehost closed.\nTransferred: sent 6456, received 4920 bytes, in 31.6 seconds\nBytes per second: sent 204.2, received 155.6\ndebug1: Exit status 0\n. @manojampalam @JW0914 I have also tried building the latest version of [OpenSSH Portable Release](https://www.openssh.com/portable.html) fromderaadtcowhile readingCerebusand eatingpoutine``` for the full Canadian. No significant differences in logging output.\nbash\n[me@localhost ~]$ ssh -V\nOpenSSH_6.6.1p1, OpenSSL 1.0.1e-fips 11 Feb 2013\n[me@localhost openssh-7.5p1]$ ./ssh -V\nOpenSSH_7.5p1, OpenSSL 1.0.1e-fips 11 Feb 2013. @JW0914 Yeah, I pointed that out earlier, and have already checked everything you've pointed out. The fact that I can successfully log in using keys from a windows host, and my linux hosts are working properly for other systems is making me suspect there is either something subtle going on in the configuration, or there is a bug that I lack the expertise to uncover. Either way, time constraints do not allow me any more time to work with this particular port. Thanks very much for your time.. ",
    "jpham34": "Thanks for taking a look. Having this model setup is a huge time saver in managing keys across a fleet of servers. Not to mention the security benefits and compliance issues that would be taken care of in industry certifications for temporal access granting i.e. Netflix's BLESS tool. \nISO 27001 certification:\n\nAutomatically revoke access to systems when engineers no longer need access to them.\nAudit who accessed which host when and what they did. @manojampalam SSH certificates are working now! Thanks for the support, I don't see any issues thus far, but will let you know of any. \n",
    "gassman": "Looking into this a bit, the Linux open() function supports a number of mode bit including:\nFile Permissions\nS_IRWXU  00700 user (file owner) has read, write, and execute permission\nS_IRUSR  00400 user has read permission\nS_IWUSR  00200 user has write permission\nS_IXUSR  00100 user has execute permission\nS_IRWXG  00070 group has read, write, and execute permission\nS_IRGRP  00040 group has read permission\nS_IWGRP  00020 group has write permission\nS_IXGRP  00010 group has execute permission\nS_IRWXO  00007 others have read, write, and execute permission\nS_IROTH  00004 others have read permission\nS_IWOTH  00002 others have write permission\nS_IXOTH  00001 others have execute permission\nFile Type\n```\n/ File types.  /\ndefine __S_IFDIR       0040000 / Directory.  /\ndefine __S_IFCHR       0020000 / Character device.  /\ndefine __S_IFBLK       0060000 / Block device.  /\ndefine __S_IFREG       0100000 / Regular file.  /\ndefine __S_IFIFO       0010000 / FIFO.  /\ndefine __S_IFLNK       0120000 / Symbolic link.  /\ndefine __S_IFSOCK      0140000 / Socket.  /\nThe file type maps to the libssh2 SFTP constants for:\n/ S_IFREG /\ndefine LIBSSH2_SFTP_ATTR_PFILETYPE_FILE        0100000\n/ S_IFDIR /\ndefine LIBSSH2_SFTP_ATTR_PFILETYPE_DIR         0040000\n```\nSo I am wondering if the open() library function used by OpenSSH here is honouring these file types.. ",
    "Life3Code": "OpenSSH_7.5p1, LibreSSL 2.5.3\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/config error:2\ndebug3: Failed to open file:./ssh_config error:2\ndebug2: resolving \"11.170.208.41\" port 22\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to 11.170.208.41 [11.170.208.41] port 22.\ndebug3: socket:352, socktype:1, io:0000015929F7A4F0, fd:3\ndebug1: Connection established.\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_rsa error:2\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_rsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\currentWinUser/.ssh/id_rsa type -1\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_rsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_rsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\currentWinUser/.ssh/id_rsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_dsa error:2\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_dsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\currentWinUser/.ssh/id_dsa type -1\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_dsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_dsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\currentWinUser/.ssh/id_dsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_ecdsa error:2\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_ecdsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\currentWinUser/.ssh/id_ecdsa type -1\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_ecdsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_ecdsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\currentWinUser/.ssh/id_ecdsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_ed25519 error:2\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_ed25519.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\currentWinUser/.ssh/id_ed25519 type -1\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_ed25519-cert error:2\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/id_ed25519-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\currentWinUser/.ssh/id_ed25519-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_7.5\ndebug1: Remote protocol version 2.0, remote software version SSH_2.0\ndebug1: no match: SSH_2.0\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to 11.170.208.41:22 as 'remoteSSHUser'\ndebug3: hostkeys_foreach: reading file \"C:\\Users\\currentWinUser/.ssh/known_hosts\"\ndebug3: Failed to open file:C:\\Users\\currentWinUser/.ssh/known_hosts2 error:2\ndebug3: Failed to open file:./ssh_known_hosts error:2\ndebug3: Failed to open file:./ssh_known_hosts2 error:2\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\ndebug2: host key algorithms: ssh-dss,ssh-rsa\ndebug2: ciphers ctos: aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\ndebug2: ciphers stoc: aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc\ndebug2: MACs ctos: hmac-sha1,hmac-md5\ndebug2: MACs stoc: hmac-sha1,hmac-md5\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: diffie-hellman-group-exchange-sha1\ndebug1: kex: host key algorithm: ssh-rsa\nUnable to negotiate with 11.170.208.41 port 22: no matching cipher found. Their offer: aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc. ",
    "itsupport-iattc": "Here you go:\nPS C:\\OpenSSH-Win64> icacls .\\sftp-server.exe\n.\\sftp-server.exe NT AUTHORITY\\SYSTEM:(I)(F)\n                  BUILTIN\\Administrators:(I)(F)\n                  IATTC01\\mlopez:(I)(F)\n                  NT SERVICE\\sshd:(I)(M)\nsshd.log.txt\nSuccessfully processed 1 files; Failed processing 0 files. Bingo. Had to update the Subsystem path for sfttp to C:\\OpenSSH-Win64 . I think the reason for this is that installed the 32 bit version first, then uninstalled it and installed the 64 bit version. Seems the uninstall script doesn't clean everything up.\nThanks,\nM.. I'm doing this because a client that I have no control over is connecting and causing the following to appear in sshd.log. The Filezilla client connects without warnings or errors.\n6100 15:25:26:500 Server listening on :: port 22.\n6100 15:25:26:500 Server listening on 0.0.0.0 port 22.\n5852 15:25:46:818 WARNING: could not open ./moduli (No such file or directory), using fixed modulus\n5852 15:26:03:712 Accepted password for ftpuser1 from (IP address) port 1792 ssh2\n5852 15:26:06:618 Received disconnect from (IP address) port 1792:11: Connection terminated by the client.\n. ssh-keygen -G moduli-2048.candidates -b 2048 fails in the same way on Windows Server 2012 R2, Windows 7 and Windows 10, \"Found 0 candidates, modulus candidate generation failed\"\nAny ideas?. Hello?. @bingbing8 I installed v0.0.24.0 and tried again on Windows Server 2012 R2. Same result.\nPS C:\\Program Files\\OpenSSH> .\\ssh-keygen -G .\\4096.1 -b 4096\nWed Jan  3 16:44:16 2018 Sieve next 268304384 plus 4095-bit\nWed Jan  3 16:56:24 2018 Sieved with 203277289 small primes in 728 seconds\nWed Jan  3 16:56:24 2018 Found 0 candidates\nmodulus candidate generation failed\nPS C:\\Program Files\\OpenSSH>\n. @bingbing8 - There is a file called libcrypto-41.dll in the OpenSSH folder. When I extract the dll in your zip file, what name should I give it? Also, I assume I should restart the services for the new dll to be used. Is this correct?. ",
    "idodeclare": "No \u2014 sorry, those tools are unknown to me. I was hoping the details above would help a Win32-OpenSSH developer to reproduce.. @manojampalam ,\nI still find this issue with v1.0.0.0-Beta. To reproduce:\n\nOn Windows 10, Install the Windows Subsystem for Linux\nInstall openSUSE Leap 42\nInstall Fabric:\n```\n\nsudo zypper install python-pip\nsudo pip install fabric\n* Create the `dir.py` script as documented above in this issue's description:\nfrom fabric.api import *\ndef dir():\n    run(\"dir ..\")\n* Execute `dir.py`:\n$ fab -f dir.py -H me@wserver dir\n```\nThe resut: \"ssh-shellhost.exe maxes out a CPU when Fabric connects.\". Hi, @bagajjal ,\n\nI don't know why /bin/bash is sent along with command\n\nThat is the default shell for Fabric. When hopefully this issue #892 is fixed, upon seeing an error if /bin/bash is unavailable, I will override Fabric's env.shell or revise the Windows Server OpenSSH configuration to use e.g. Cygwin or WSL.\n\nwhy it's requesting pty session?\n\nThe following is Fabric's remark (http://docs.fabfile.org/en/1.14/usage/interactivity.html) regarding a pty:\n\nIn the interests of security and meeting the principle of least surprise (insofar as users are typically expecting things to behave as they would when run in a terminal emulator), Fabric 1.0 and greater force a pty by default. With a pty enabled, Fabric simply allows the remote end to handle echoing or hiding of stdin and does not echo anything itself.\n. @bagajjal ,\n\nThank you kindly. That works for me, and I can run the following with -s to override env.shell:\n$ fab -f dir.py -H me@wserver -s '%SYSTEMROOT%\\system32\\cmd.exe /C' dir.\n",
    "DominikWiesend": "same here. I'll try to give you all infos you need, currently we are using \"OpenSSH for Windows\" Version [0.0.23.0]\nThe problem is in this direction [Linux] -> [Windows (SSH-Server)]\n-> Windows Server 2012 R2\nWhen you logon to the [Linux] Host and send an SSH-Command to the [Windows (SSH-Server)] you can run any command without any problems.\nBut when an program (any pice of software triggers) a command (TTY/PTY) [makes the difrence] the ssh-shellhost.exe isn't closing and is taking more resources till it collected all of them (CPU at 100%).\n-> We are currently using an >> ; << at the end of  the SSH-Command, because we think this resolves the issue the most of the time (not sure about it, right now)\nI'll provid anything you need, just tell me what it is.. ",
    "pcgeek86": "I'm having the same problem. I configured PowerShell as my default shell.. I changed my default shell to c:\\Windows\\System32\\cmd.exe and I was able to make a successful connection.\n. @bagajjal I haven't reproduced this issue recently. If I reproduce it again, I'll post back with more information.. Thanks, working on the debug logs now. I already tried running the FixHostFilePermissions script, based on another issue I found. Let me see if I can fix this on my own, using the debug logs. . Okay, I tried running that script again. I think it wasn't working, because I was trying to follow the wiki document that tells you to sign the public key, inside the authorized_keys file, using ssh-keygen. I don't believe this step is necessary, as I'm using my public key unsigned on the target server.\nIt's working with public key authentication now. Here's my ssh command:\nssh -vvv -i /Users/tsulli/mypemfile.pem -o PubkeyAuthentication=yes -o PasswordAuthentication=no Administrator@54.202.x.x\nObviously, I also had to make sure that the sshd_config file also had PubkeyAuthentication yes.. ",
    "amir3code": "Windows and specially powershell really really suck hard.\nI dont have an ubuntu vps right now and If I had I would definietly switch back to my developement for linux environments.\nSetting up a git server is way easy on linux than it is on windows\nAnd I dont get it, Why windows is famous for its simplicity while it is just a bunch of unwell written binaries?. ",
    "doggy8088": "@bingbing8 Is there any progress on this issue?. @bingbing8 Just simply git clone user@ip.add.re.ss:c:/123.git. @manojampalam Is there any workaround for this bug at this time?. @bingbing8 I tried your workaround.  The server return:\nfatal: the remote end hung up unexpectedly\nfatal: the remote end hung up unexpectedly\nI turned on debugging environment variables and git clone again:\nset GIT_TRACE_PACKET=1\nset GIT_TRACE=1\nset GIT_CURL_VERBOSE=1\ngit clone user@ip.add.ress:c:/456.git\nI've got this:\n19:21:03.324897 exec-cmd.c:236          trace: resolved executable dir: C:/Program Files/Git/mingw64/bin\n19:21:03.325880 git.c:415               trace: built-in: git clone user@ip.add.ress:c:/456.git\nCloning into '456'...\n19:21:03.369851 run-command.c:637       trace: run_command: unset GIT_DIR; ssh user@ip.add.ress 'git-upload-pack '\\''c:/456.git'\\'''\nuser@ip.add.ress's password:\n19:21:17.086565 pkt-line.c:80           packet:        clone< 5305d8945047e26d4fc6005768f3478a22be6d79 HEAD\\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow deepen-since deepen-not deepen-relative no-progress include-tag multi_ack_detailed symref=HEAD:refs/heads/master agent=git/2.19.1.windows.1\n19:21:17.086565 pkt-line.c:80           packet:        clone< 5305d8945047e26d4fc6005768f3478a22be6d79 refs/heads/master\n19:21:17.086565 pkt-line.c:80           packet:        clone< 0000\n19:21:17.095052 pkt-line.c:80           packet:        clone> want 5305d8945047e26d4fc6005768f3478a22be6d79 multi_ack_detailed side-band-64k thin-pack ofs-delta deepen-since deepen-not agent=git/2.19.1.windows.1\n19:21:17.095052 pkt-line.c:80           packet:        clone> want 5305d8945047e26d4fc6005768f3478a22be6d79\n19:21:17.095052 pkt-line.c:80           packet:        clone> 0000\n19:21:17.095052 pkt-line.c:80           packet:        clone> done\nfatal: the remote end hung up unexpectedly\nfatal: the remote end hung up unexpectedly\nDo you know what's going on?. ",
    "dmitry-cherkas": "Hi @bingbing8,\nI'm trying to clone a Git repo from the server, which I set up with OpenSSH on Windows (OpenSSH_for_Windows_7.6p1, LibreSSL 2.6.4), but I'm facing same issue as described in this thread:\n```\nC:\\Users\\cherk>git clone git@192.168.1.201:C:/Users/git/ib/web-app.git\nCloning into 'web-app'...\nfatal: ''C:/Users/git/ib/web-app.git'' does not appear to be a git repository\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n```\nI've checked a number of related threads (#752, #1237) and for some reason setting powershell as default Shell does not resolve the issue for me. At the same time, the workaround, described here works fine, so I'm assuming it's not permissions, or bad URL issue. Unfortunately, the mentioned workaround is not acceptable for me, as it requires configuration to be done by each client, so I'm really hoping to sort things out with powershell used as a default shell.\nI'm happy to provide additional details for troubleshooting, please let me know which details/log files would help identify the root cause?\n. ",
    "trenst": "I've got the same comment as @dmitry-cherkas and I'm running the same version of openssh.  Setting the DefaultShell of the openSSH  HKLM to powershell does not work.  Only the workaround shown here  permitted me access to my git repository.  . ",
    "gildas": "Sorry for the delay, here we go:\nposh\nPS > ssh-add\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions for 'C:\\\\Users\\\\me/.ssh/id_rsa' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nAnd icacls:\n```posh\nPS > icacls C:\\Users\\gildas.cherruel.ssh\\id_rsa\nC:\\Users\\me.ssh\\id_rsa MYDOMAIN\\me:(F)\nSuccessfully processed 1 files; Failed processing 0 files\nPS > icacls C:\\Users\\gildas.cherruel.ssh\\id_rsa.pub\nC:\\Users\\me.ssh\\id_rsa.pub NT AUTHORITY\\SYSTEM:(I)(F)\n                                         BUILTIN\\Administrators:(I)(F)\n                                         MYDOMAIN\\me:(I)(F)\nSuccessfully processed 1 files; Failed processing 0 files\n```\nAnd the results of FixUserFilePermission:\n```\n[2075] # FixUserFilePermissions.ps1\n  [*] ~.ssh\\config\n      looks good\n[*] C:\\Users\\me.ssh\\id_rsa\n      looks good\n[*] C:\\Users\\me.ssh\\id_rsa.pub\n      looks good\nDone.\n```. Any update on this?. Ok, obviously, I am not good at pattern matching..... MYDOMAIN\\me was a feeble attempt to hide my true account name... duh.\nIt is all the same: gildas.cherruel is actually MYDOMAIN\\me.\nSorry for the confusion.\nI used it in an Administrator PowerShell, if that makes any difference?\nLet me try on 0.0.21.0. Just upgraded to 0.0.21.0. Same problem.. @bingbing8 , the file owner is my domain user.\n@JW0914 , my user is the sole owner, reader, etc, of the id_rsa file. As well as ~/.ssh ~/ssh/authorized_key, and all the files in ~/.ssh.\n. If I create a local user, add a key and set permissions properly, that local user can use ssh-add without any issue.\n. @bingbing8 , thanks a lot!\nI ran it and got this:\nposh\n[2177] # .\\ssh-add.exe C:\\Users\\gildas.cherruel\\.ssh\\id_rsa\ndebug3: Current user sid: S-1-5-21-2037646214-965435356-1153635105-118596\ndebug3: Bad owner (S-1-5-21-3334980730-4293530145-2415107754-7617) on C:\\\\Users\\\\gildas.cherruel\\\\.ssh\\\\id_rsa\ndebug3: Expected valid owners: administrators, local system, or S-1-5-21-2037646214-965435356-1153635105-118596\nInterestingly, in the file property dialog, the owner (7617) resolves as my domain user.\nSo, I went to the Change dialog box and re-applied the owner as my domain user.\nThis time I got:\nposh\ndebug3: Current user sid: S-1-5-21-2037646214-965435356-1153635105-118596\ndebug3: Bad permissions. Try removing permissions for user: S-1-5-21-3334980730-4293530145-2415107754-7617 on file C:\\\\Users\\\\gildas.cherruel\\\\.ssh\\\\id_rsa.\nSeems like, I get to become the proper owner this time, though, this is still me...\nIn the File Security dialog box, the owner still has 7617 SID (I can see it getting resolved).\nposh\n[2180] # icacls C:\\Users\\gildas.cherruel\\.ssh\\id_rsa\nC:\\Users\\gildas.cherruel\\.ssh\\id_rsa CAMELOT\\gildas.cherruel:(RX)\nSecurity was:\nposh\n[2179] # icacls C:\\Users\\gildas.cherruel\\.ssh\\id_rsa\nC:\\Users\\gildas.cherruel\\.ssh\\id_rsa CAMELOT\\gildas.cherruel:(F)\nSo, I reset the permissions, but from the security dialog box this time, checked the security:\nposh\n[2180] # icacls C:\\Users\\gildas.cherruel\\.ssh\\id_rsa\nC:\\Users\\gildas.cherruel\\.ssh\\id_rsa CAMELOT\\gildas.cherruel:(RX)\nNow ssh-add gives this:\nposh\ndebug3: Current user sid: S-1-5-21-2037646214-965435356-1153635105-118596\nEnter passphrase for C:\\Users\\gildas.cherruel\\.ssh\\id_rsa:\nIdentity added: C:\\Users\\gildas.cherruel\\.ssh\\id_rsa (C:\\Users\\gildas.cherruel\\.ssh\\id_rsa)\ndebug3: Failed to open file:C:\\\\Users\\\\gildas.cherruel\\\\.ssh\\\\id_rsa-cert.pub error:2\ndebug3: Failed to open file:C:\\\\Users\\\\gildas.cherruel\\\\.ssh\\\\id_rsa-cert.pub.pub error:2\nIt still sees the current user as 118596 but does not complain anymore.\nMistery.... And to answer your guess. Yes, our domains were migrated recently by our global IT.. ",
    "audpa33": "Hello,\nI have the same issue on Windows 10 Pro (FR) using version 0.0.24 with shipped libcrypto.dll and libcrypto.dll included in ZIP file provided in previous message by @bingbing8 .\nExample of output with 2048 bits:\nSat Jan  6 11:10:20 2018 Sieve next 67043328 plus 2047-bit\nSat Jan  6 11:13:49 2018 Sieved with 203277289 small primes in 209 seconds\nSat Jan  6 11:13:49 2018 Found 0 candidates\nmodulus candidate generation failed\nI will be pleased to test others DLL or version it it helps to solve this issue.\nRegards. I tested with version v7.7.2.0p1-Beta and it works fine now.\n```\nssh-keygen -G ./4096.1 -b 4096\nFri Aug 24 07:57:14 2018 Sieve next 268304384 plus 4095-bit\nFri Aug 24 08:03:47 2018 Sieved with 203277289 small primes in 393 seconds\nFri Aug 24 08:04:01 2018 Found 221393 candidates\n```\nThanks\nRegards. ",
    "codearoo": "I can't. That's why I made this ticket. When I try to log in with that user over SSH, I get \"Permission denied, please try again.\"  (this time tested from the local server itself.). oh crap! It was a typo in the darn password!!\n  Sorry.\n. Somehow I once managed to change the permissions and get something working with an older version, but then I re-tried with this latest version and I'm really confused. Look at this output below... how is it possible this private key file is accessible by others???\n`C:\\Program Files\\OpenSSH-Win64>ssh-add ssh_host_dsa_key\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions for 'ssh_host_dsa_key' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nC:\\Program Files\\OpenSSH-Win64>icacls ssh_host_dsa_key\nssh_host_dsa_key NT AUTHORITY\\SYSTEM:(R)\nSuccessfully processed 1 files; Failed processing 0 files\n`. Oh!!  According to your instructions, this step does not work:\npowershell -ExecutionPolicy Bypass '.\\FixHostFilePermissions.ps1 -Confirm:$false'\nHere is the output:\nC:\\Program Files\\OpenSSH-Win64>powershell -ExecutionPolicy Bypass '.\\FixHostFile\nPermissions.ps1 -Confirm:$false'\n.\\FixHostFilePermissions.ps1 -Confirm:$false\nBut if you first open up 'powershell' and then run it, THIS is the output, indicating it's actually doing something:\n`C:\\Program Files\\OpenSSH-Win64>powershell\nWindows PowerShell\nCopyright (C) 2016 Microsoft Corporation. All rights reserved.\nPS C:\\Program Files\\OpenSSH-Win64> .\\FixHostFilePermissions.ps1 -Confirm:$false\n  [*] C:\\Program Files\\OpenSSH-Win64\\sshd_config\n      looks good\n[*] C:\\Program Files\\OpenSSH-Win64\\ssh_host_dsa_key\n'NT SERVICE\\sshd' now has Read access to 'C:\\Program Files\\OpenSSH-Win64\\ssh_hos\nt_dsa_key'.\n      Repaired permissions\n[*] C:\\Program Files\\OpenSSH-Win64\\ssh_host_dsa_key.pub\n      looks good\n[*] C:\\Program Files\\OpenSSH-Win64\\ssh_host_ecdsa_key\n      looks good\n[*] C:\\Program Files\\OpenSSH-Win64\\ssh_host_ecdsa_key.pub\n      looks good\n[*] C:\\Program Files\\OpenSSH-Win64\\ssh_host_ed25519_key\n      looks good\n[*] C:\\Program Files\\OpenSSH-Win64\\ssh_host_ed25519_key.pub\n      looks good\n[*] C:\\Program Files\\OpenSSH-Win64\\ssh_host_rsa_key\n      looks good\n[*] C:\\Program Files\\OpenSSH-Win64\\ssh_host_rsa_key.pub\n      looks good\nDone.`\nUGH!!   again, if we just had a working script or even correct help, it would save time.\nSo that was it. This script is not running based on how you indicate to run it in your wiki help.. So here is a script I wrote named 'setup-full.ps1' which seems to run everything properly. Maybe you'll include something like this in your project to help users.\n```\n$ErrorActionPreference = \"Stop\"\n$scriptpath = $MyInvocation.MyCommand.Path\n$scriptdir = Split-Path $scriptpath\n$sshdpath = Join-Path $scriptdir \"sshd.exe\"\n.\\install-sshd.ps1\n.\\ssh-keygen.exe -A\n.\\FixHostFilePermissions.ps1 -Confirm:$false\nStart-Service ssh-agent\npsexec -s \"$scriptdir\\configure-ssh-keys.bat\"\ntry\n{\n    New-NetFirewallRule -Program \"$sshdpath\" -Direction Inbound -Action Allow -DisplayName SSH\n}\ncatch\n{\n    $ErrorMessage = $.Exception.Message\n    $FailedItem = $.Exception.ItemName\nWrite-Output \"Caught error adding FW rule: $($ErrorMessage)\"\nWrite-Output \"Going to attempt using 'netsh' command.\"\n\nnetsh advfirewall firewall add rule name=SSHD dir=in action=allow program=\"$sshdpath\"\n\n}\nSet-Service sshd -StartupType Automatic\nSet-Service ssh-agent -StartupType Automatic\nStart-Service sshd\n```. oh ya.. and it requires this other script named 'configure-ssh-keys.bat'   as well as a copy of 'psexec'\npushd %~dp0\nssh-add ssh_host_dsa_key\nssh-add ssh_host_rsa_key\nssh-add ssh_host_ecdsa_key\nssh-add ssh_host_ed25519_key\npopd. Another error in your instructions is that you indicate to set up FW rule based on the port. But if you change the port in the sshd_config file, then you'd also have to change the port in the FW. If instead you set up the FW rule for the SSHD.EXE it will use whatever port it's configured for automatically.\n. Awesome.. thanks.\nThe Wiki has a few more updates maybe?\n\"Open the firewall on TCP port 22 to allow inbound SSH connections\"\nand:\n\"Note: New-NetFirewallRule is for servers only. If you're on a client desktop machine (like Windows 10) try:\"\nIs not entirely correct because Windows 2008 R2 Server also does not seem to have New-NetFireWallRule.\nI'm not sure how that powershell issue is resolved. I upgraded to latest version of Powershell and still had that problem. So .. how is it resolved? And if this other syntax you mentioned works, shouldn't that be put in the wiki doc?\n. And by the way, the link for \"Alternative installation using the universal installer\" does not work; it just goes back to the same page.. ",
    "vinz243": "True enough, I'm using azerty keyboard. @bagajjal here is the output:\n$ xxd\n^[|00000000: 1b7c                                     .|\nPlease note that I didn't have to use key based authentication, since I can type | just fine when typing the password. Also, I had to press Ctrl + D twice\n. ",
    "leppakorpi": "I have same issue on Finnish keyboard with any character that requires right AltGr key.\nWith 0.0.20.0 everything work and xxd reports \"|\" as ^@| or 007c\nWith 0.0.21.0 I can't type these characters nor paste them from the clipboard, xxd shows ^[| or 1b7c\nWhen using cmd.exe or powershell.exe I can change windows keyboard layout any time and it affects ssh session instantly, us keyboard layout works and fi keyboard layout doesn't.\nWith Visual Studio Code integrated console things get stickier. If the terminal is started with us keyboard, it keeps working after change to Finnish keyboard. If the terminal is started with fi keyboard, changing it later to 'us' won't help. So the work around for this bug is: 1) change keyboard to US layout 2) start new terminal in Visual studio code 3) change keyboard back to FI layout 4) start ssh session in terminal and Finnish keyboard works as expected.. I think this issue was introduced by the commit https://github.com/PowerShell/openssh-portable/commit/8747626b6aa845718c51ab130692338647c187a4\ncontrib/win32/win32compat/tncon.c line 712\nAs a quick fix I would disable '\\x1b' for right alt, but I guess someone Americans just can't survive with only one meta key.. ",
    "MathiasMagnus": "@bagajjal Using Hungarian keyboard I have the same problem using v0.0.22 and most of the scripting and programming special chars on AltGr: $;#&@<>[]{}|\\\nThis is the console output for all of them at once:\nmnagy@MATTY-Z50-75:~$ xxd\n^[$^[;^[#^[&^[@^[<^[>^[[^[]^[{^[}^[|^[\\00000000: 1b24 1b3b 1b23 1b26 1b40 1b3c 1b3e 1b5b  .$.;.#.&.@.<.>.[\n00000010: 1b5d 1b7b 1b7d 1b7c 1b5c                 .].{.}.|.\\. Indeed it did. Thanks. Hoping the fix get incorporated into the next release.. Yes, it would be nice if all the fixes could make it into the next release. Hungarian layout here, none of the characters that require AltGr work:\n~<>[]#&@{};$\\|\nJust about everything used for programming.. This most likely is related to the same issue that non-ascii characters are not always tunneled properly, or at least the way Linux OpenSSH expects it. I remote to an Ubuntu Server 18.04 machine with Hungarian locale. This is the end of the prompt I receive:\n150 csomag friss\u251c\u015fthet\u253c\u0139.\n54 friss\u251c\u015ft\u251c\u0119s biztons\u251c\u00edgi friss\u251c\u015ft\u251c\u0119s.\nInstead of\n150 csomag friss\u00edthet\u0151\n54 friss\u00edt\u00e9s \u00e9s biztons\u00e1gi friss\u00edt\u00e9s\nParens, brackets, pipes and the likes are now tunneled as they should be (there was an earlier issue around these), but the Hungarian extra chars don't show properly. \u00e1\u00e9\u00ed\u00f3\u00f6\u0151\u00fa\u00fc\u0171 \u00c1\u00c9\u00cd\u00d3\u00d6\u0150\u00da\u00dc\u0170 Also, before others might report, some Polish and other special characters present on a Hungarian keyboard also don't show: \u0142\u0141\u0111\u0110\u00e4\u00c4\u20ac\u00a7\nRemote locale is hu_HU.UTF-8. Indeed, it works. Thanks for the hotfix!. ",
    "Tb0b": "Thanks for the exe, it solved my problem too (was unable to type @ key) but i can't type other specialized keys from my french keyboard, typicaly keys with accent : \u00e9\u00e8\u00f9 .\nDo i need to create my own issue or not ?\n. Thanks for the .exe, it works for \u00a0\u00e9\u00f9\u00e8 but now \u00a0@| and other alt-gr keys doesn\u2019t work\u00a0\u2639\n--\nBlasta19\nDe\u00a0: bagajjal\nEnvoy\u00e9 le\u00a0:mardi 24 octobre 2017 01:09\n\u00c0\u00a0: PowerShell/Win32-OpenSSH\nCc\u00a0: Tb0b; Mention\nObjet\u00a0:Re: [PowerShell/Win32-OpenSSH] Unable to type vertical bar (#902)\n@Tb0b - please try the attached private binary and let me know if it works for you.\nssh-unicode.zip\nHere is the snapshot (with the private binary attached),\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Thanks for the .exe, it works for  \u00e9\u00f9\u00e8 but now  @| and other alt-gr keys doesn\u2019t work \u2639. ",
    "jasonblewis": "does this merge fix the issue? and if so, any chance of a release?\n. ",
    "dheater": "PS C:\\Users\\dheater\\Documents\\OpenSSH-Win64\\OpenSSH-Win64> icacls sshd.exe\nsshd.exe NT AUTHORITY\\SYSTEM:(F)\n         BUILTIN\\Administrators:(F)\n         PERF-WIN2016\\dheater:(F)\nSuccessfully processed 1 files; Failed processing 0 files. I tried piecing together how to set permissions on a service for \"authenticated users\".\nBelow is what I came up with combining information from several websites, mainly this one: https://michlstechblog.info/blog/windows-set-permissions-on-a-service/\nApparently I didn't get it right b/c its still not working.\nCan you provide the command foo for setting permissions?\n```\nPS C:\\Program Files (x86)\\Windows Resource Kits\\Tools> .\\subinacl.exe /service sshd /grant=S-1-5-11=QSTOP\nsshd : new ace for authenticated users\nsshd : 1 change(s)\nElapsed Time: 00 00:00:00\nDone:        1, Modified        1, Failed        0, Syntax errors        0\nLast Done  : sshd\nPS C:\\Program Files (x86)\\Windows Resource Kits\\Tools> Start-Service sshd\nStart-Service : Service 'sshd (sshd)' cannot be started due to the following error: Cannot start service sshd on\ncomputer '.'.\nAt line:1 char:1\n+ Start-Service sshd\n+ ~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OpenError: (System.ServiceProcess.ServiceController:ServiceController) [Start-Service],\n   ServiceCommandException\n    + FullyQualifiedErrorId : CouldNotStartService,Microsoft.PowerShell.Commands.StartServiceCommand\n```\n. Granted \"Full control\" to all authenticated users\n\nStill had the same problem so I uninstalled and reinstalled. Still had the same problem.. I changed the sshd service \"Log On\" From:\n\nTo:\n\nand know I'm able to start the service.. Root cause was that I extracted to the wrong directory.\nBe sure to extract the .zip file to c:\\Program Files\\OpenSSH and it should work out of the box.. BTW, if you don't extract to the correct directory, even if you getting it working, ssh keys don't work correctly.. ",
    "rebelholic": "@dheater  Already tried with your solution but still not luck for Win Server 2016. Could anyone to help me to fix this problem?. ",
    "jborean93": "Thanks for the info @manojampalam, looking forward to seeing the final fix but flag to know that the issue has been found.. I don't think you can get this working, they specifically state Windows 7 (Windows Server 2008 R2) and above is supported and Windows Server 2008 is before this edition as per @bingbing8. I tried playing around with this very briefly to see if it was just a software limit but the sshd service is dependent on the netlogon service which won't start up in a non-domain environment for Server 2008.. @mamojampalam while the service runs without any issues and is listening on the port, it seems like there are still issues with Server 2008. I know it isn\u2019t supported but I didn\u2019t want to give people false hope saying the latest release works on this version.. @mgkuhn the issue definitely relates to using network cleartext or network logon type. The API that cmdkey uses can be found here https://docs.microsoft.com/en-us/windows/desktop/api/wincred/. While I couldn't find any explicit documentation I found it will fail with ERROR_NO_SUCH_LOGON_SESSION unless I use either an interactive, remote interactive, or batch logon.\nLooking at the docs for one of the functions, CredWriteW, it says that ERROR_NO_SUCH_LOGON_SESSION means\n\nThe logon session does not exist or there is no credential set  associated with this logon session. Network logon sessions do not have  an associated credential set.\n\nIt doesn't explicitly call out network cleartext but you could assume that it is lumped together with the generic network logon type.\nThe issue doesn't relate to Windows sessions as they are separate from a logon session created by LSA. As an example you could run a scheduled task job with explicit credentials which runs in session 0 as the user you specified. This is run with a batch logon type so you are you able to read/write to the credential store with this.\nUnfortunately you can't really do much about this when using SSH, it uses a network logon because you are in fact authenticating from a remote network location. The same can be said for WinRM logons like PSRemoting and so on. The main ways I know how to get around this are;\n\nCreate a scheduled task to run the process with explicit credentials; Run whether user is logged on or not\nCall a tool like psexec with explicit credentials to run your process\nManually call LogonUser with the logon type you desire and then pass that token to CreateProcessAsUser or CreateProcessWithToken\n\nPutting all that aside, the credential manager isn't the most secure as the credentials are stored in a reversible format. The secret blob is supposed to be only readable by authentication providers registered with LSA but I am able to use a tool like mimikatz to dump this info as just a standard administrator.. runas.exe is the closest I know off, should be fine if you are using an interactive console but non-interactive commands make this a bit more difficult. You can use PInvoke in a PowerShell script to call the underlying Win32 APIs yourself but that's quite advanced. Technically sshd could change the flag when it itself calls LogonUser (password auth only) to use a batch or \"interactive\" logon but I assume this violates standard Windows principals as a logon from SSH is truly a network not batch or \"interactive\" logon.. When I mention interactive in the context of a logon type I am talking about LOGON32_LOGON_INTERACTIVE as specified by the dwLogonType. AFAIK it doesn't literally mean it is the only one that allows interactive operations like reading from the console stdin but it is certainly meant for interactive logons like a RDP session or a direct console logon where a user has a UI.\nOther logons like batch, network are typically used in non-interactive scenarios but there is nothing that would stop me from creating one manually but there really isn't any purpose for this.\nWhen I said runas.exe with an interactive console I'm just talking about how it prompts for the user's password but theoretically it should be possible to run in a non-interactive process by passing the password through the stdin stream.. @manojampalam thanks for the update, we will have to see what our other options are. In regards to keeping things how they work on Unix, I'm not 100% confident as to how it all works but you can easily run a process \"outside\" of the SSH shell. For example I can run\nnohup cmd=\"echo\"; for i in {1..50}; do $cmd \"count: $i\"; sleep 1;done > stdout.txt &\nOnce I exit from the SSH session, the process is still running in the background and the SSH tty no longer exists when running who. I would have thought this would be similar to Windows when running CreateProcess with the CREATE_BREAKAWAY_FROM_JOB creation flag on the process.\nIMO task scheduler is a massive pain when it comes to things like this as;\n\nYou need to be an administrator to create the jobs\nCleanup can fail causing all sorts of issues\nThe API to interact with them is not fun/simple to use\nHard to get the stdout/stderr of the task\nThe reporting on the task result is difficult to determine\nWindows 10 Anniversary Update/Server 1709 seems to have issues with Task Scheduler which is worrysome\n\nUltimately if that is what we need to do then that's what we need to do but I'm hoping to avoid it if possible :). Fantastic, I just tried it out locally and it works as you say, it even fixed another issue where we were creating some jobs, looking forward to the release.. @RDCH106, we currently achieve this through some P/Invoke calls in PoweShell and call the CreateProcess Win32 API with a specific flag. This isn't something simple to do and requires a bit of code to achieve but the easiest way I know of to do this in PowerShell is to use WMI. Here is an example script that uses Win32_Process as sets the CREATE_BREAKAWAY_FROM_JOB flag when creating the process\n$proc_info = New-CimInstance -CimClass (Get-CimClass -ClassName Win32_ProcessStartup) -Property @{CreateFlags=16777216} -ClientOnly\n$arguments = @{CommandLine=\"cmd.exe\"; ProcessStartupInformation=$proc_info}\nInvoke-CimMethod -ClassName Win32_Process -Name Create -Arguments $arguments. IMO you should really be creating a new release and never change the contents of an existing an existing release.\nAny reason why you can't just create a v7.7.3.0 with the fixed shellhost?. Symbolic links work over different volumes, including a UNC path, but you may have difficulties getting mklink to create a symbolic link as a folder if it can't access the target properly. Junction points and hard links must be situated on the same volume though.. You still have the issue with your credentials not being available when using SSH keys. This is a fundamental design by Windows and nothing will change that fact.. @bingbing8 thanks for the info, would you like me to close this issue and have it tracked in 1 central one? Is there a link to that issue?. Thanks. @bingbing8 it's more these 2 issues I wanted to bring up\n\nscp won't return an error if it cannot find a file, it just exits leaving the user clueless as to what has happened\nIt does not handle single quotes as Windows does not support them as a way to escape spaces in an argument.\n\nI've able to get this working when quoting the with double quotes, unfortunately a few linux tools use single quotes to safely escape values that come from an unknown source. I'm not sure whether this is something that would be supported by this port though.. @mgkuhn I'm not sure supporting kerb delegation will get 996 to start working. The issue with that one is due to the logon session type used with the initial logon and not the delegation of credentials.. IIRC the trouble with CreateProcessWithLogonW() is that it creates a process with an interactive logon type whereas normally an ssh spawned logon would have a network cleartext logon type for password based auth. The other option is CreateProcessWithToken() but that need the SeImpersonatePrivilege which isn't assigned to standard accounts. \nI'm curious as to why you want to run this as a non privileged account considering ssh key auth won't ever work.. It's not my place to say whether CreateProcessWithLogonW() is an alternative as this isn't my project. Just merely stating the facts as to how moving to that will result in a behaviour change where arguably an interactive logon from a network source isn't really correct. I'm sure there will be other issues that would pop up if this ever changed to support this scenario as logon and process creation is just the tip of the iceberg.. You can create a profile for a user account without having to log in as that user first. I've created a PowerShell cmdlet that does this for you\n```\nFunction New-Profile {\n    <#\n    .SYNOPSIS\n    Creates the profile for a user on the current host if one does not already exist.\n.PARAMETER Account\n[String] The string representation of an account to create the profile for. This is mutually exclusive to Account.\n\n.PARAMETER Identity\n[System.Security.Principal.IdentityReference] The IdentityReference object of an account to create the profile\nfor. This is mutually exclusive to Account.\n\n.PARAMETER BaseName\n[String] Optionally define the base name for the profile directory to create.\n\n.EXAMPLE\nNew-Profile -Account my-user\n#>\n[CmdletBinding(SupportsShouldProcess=$true)]\nparam(\n    [Parameter(Mandatory=$true, ParameterSetName=\"string\")]\n    [String]$Account,\n    [Parameter(Mandatory=$true, ParameterSetName=\"identity\")]\n    [System.Security.Principal.IdentityReference]$Identity,\n    [Parameter()][String]$BaseName\n)\n\nAdd-Type -Namespace PInvoke -Name Userenv -UsingNamespace System.Text -MemberDefinition @'\n\n[DllImport(\"Userenv.dll\", SetLastError = true, CharSet = CharSet.Unicode)]\npublic static extern int CreateProfile(\n    [MarshalAs(UnmanagedType.LPWStr)] string pszUserSid,\n    [MarshalAs(UnmanagedType.LPWStr)] string pszUserName,\n    [Out, MarshalAs(UnmanagedType.LPWStr)] StringBuilder pszProfilePath,\n    UInt32 cchProfilePath);\n'@\nif ($PSCmdlet.ParameterSetName -eq \"string\") {\n    $Identity = New-Object -TypeName System.Security.Principal.NTAccount -ArgumentList $Account\n}\n\n$account_sid = $Identity.Translate([System.Security.Principal.SecurityIdentifier])\n$account_name = $account_sid.Translate([System.Security.Principal.NTAccount])\nif (-not $BaseName) {\n    $account_split = $account_name.Value.Split('\\', 2)\n    $BaseName = $account_split[-1]\n}\n\n$profile_path = Get-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\*\" | `\n    Where-Object { $_.PSChildName -eq $account_sid.Value }\n\nif ($null -ne $profile_path) {\n    Write-Verbose -Message \"The profile for $($account_name.Value) already exists\"\n    $profile_path = $profile_path.ProfileImagePath\n} else {\n    if ($PSCmdlet.ShouldProcess($account_name.Value, \"Create profile\")) {\n        # MAX_PATH is 260 chars\n        $raw_path = New-Object -TypeName System.Text.StringBuilder -ArgumentList 260\n        $res = [PInvoke.Userenv]::CreateProfile($account_sid.Value, $BaseName, $raw_path, $raw_path.Capacity)\n        if ($res -ne 0) {\n            $exp = [System.Runtime.InteropServices.Marshal]::GetExceptionForHR($res)\n            Write-Error -Message \"Failed to create user profile for $($account_name.Value): $($exp.Message)\"\n        } else {\n            $profile_path = $raw_path.ToString()\n        }\n    }\n}\n\nreturn $profile_path\n\n}\n```\nUnfortunately I couldn't find a .NET method to create the profile so had to resort to using PInvoke but it gets the job done. Feel free to use this cmdlet to create the profile fiel and then populate the .ssh directory without having to log that user on first.. Happy for people to take and use it as they wish. If people feel like it's a good addition to the wiki then that's fine with me. As with all code, make sure you test that it works before running in production.. I could be wrong with this but I don't believe it is possible to have a sudo like setup of Windows when the connecting user is does not already have admin credentials. AFAIK there are 3 public APIs you can use to create a new process under a different account;\n\nCreateProcessWithLogon\nThere is nothing in the docs that indicate you need specific privileges to run so a standard user should be able to call this\nYou can't control the logon type, it will only logon with an interactive type and not batch\n\n\nCreateProcessWithToken\nYou can create a process from an existing process token that has been duplicated or from calling LogonUser\nBecause it uses an existing token, you can call LogonUser and create a token with a different logon type, like batch\nIt requires the SeImpersonatePrivilege which isn't assigned to a standard user so this is out\n\n\nCreateProcessAsUser\nLike CreateProcessWithToken, it requires privileges that are not held by a standard user; SeAssignPrimaryTokenPrivilege and SeIncreaseQuotaPrivilege\n\n\n\nSo because CreateProcessWithToken and CreateProcessAsUser requires privileges that are not assigned to standard users you are left with CreateProcessWithLogon but this probably won't get what you are looking for. This is because on a typial Windows host, an admin user logon would have 2 tokens assigned;\n\nA limited token with the Admin group and certain privileges stripped out\nA full token with all the groups and privileges that are assigned to that account\n\nThere are cases where an admin account would only have the full token which \"should\" work for you but this isn't universal. These scenarios would be;\n\nUAC is disabled\nYou are creating a process with the BUILTIN\\Administrator account and Admin Approval Mode is not enabled for that account (this is the default on Windows)\n\nIf UAC is enabled, you aren't running as the builtin admin account, or it is the builtin admin account and admin approval mode is enabled for that account, then the created process will run under the limited token. This is because when you call CreateProcessWithLogon, the spawned process will use the limited token so you can run commands as that user it just won't be elevated, defeating the point of using an admin account. Technically you can use GetTokenInformation with TOKEN_LINKED_TOKEN to get the full token but you would require the SeTcbPrivilege privilege which not even admin users are assigned by default.\nThis means that unless an existing service (with higher privileges) acts as a broker, you aren't able to logon as limited user and \"sudo\" to an admin account with all it's privileges intact. I'll be happy if someone could prove me wrong with this as I've been looking for a way to achieve this outside of SSH.. @mgkuhn JEA is something that's implemented directly in PowerShell and WinRM/SSH is just the underlying transport for the PSRP fragments sent over the wire. This means it's probably a question for the PowerShell team to talk about how to implement JEA support over SSH as this project stays focused on the SSH aspects. I'm in no way affiliated with either teams so I'm not sure what communication goes on between the 2 or whether there are already plans to do this currently.\nCurrently JEA works over WinRM by having a JEA configuration tied to a specific resource URI registered against the WinRM listener. When a user goes to connect to a particular configuration endpoing, using -ConfigurationName in the PS cmdlets, the WinRM listener will call the dll registered to that configuration which then starts up a Runspace with a restricted set of actions that are allowed.\nSSH is a bit different as it uses a subsystem that is set to call pwsh.exe -sshs -NoLogo -NoProfile to pipe the PSRP fragments through the standard sdin and stdout pipes. This is why you need to add the following line to the sshd_config file for PSRP over SSH to work Subsystem    powershell c:/program files/powershell/6/pwsh.exe -sshs -NoLogo -NoProfile. Potentially this could be extended to allow different JEA endpoints to be registered and used over custom SSH subsystems but this would still require plumbing to be done in PowerShell for it to work.\nIt looks like the -ConfigurationName also controls what subsystem PowerShell connects to when using SSH and it defaults to powershell. This may mean that they are planning on implementing JEA through custom subsystems but I could be completely wrong here. In the end this is more a question for PowerShell/PowerShell as this is just used as a transport mechanism for PSRP.. You can manually create the profile and set the authorized_keys file for a new user without having to log it in first. See https://github.com/PowerShell/Win32-OpenSSH/issues/1305#issuecomment-446449949 for more info.. Does that mean OpenSSH installed through Add-WindowsCapability is not based on the GitHub releases and can contain newer changes?. @manojampalam thanks for the update, excited for the new release. While I know we would have to manually update installs from a GitHub zip, do you know if Add-WindowsCapability (or Windows Feature) installs are updated through Windows Update when a new release is available?. So does this mean for a user in the Administrators group, it's authorized_keys file needs to be in C:\\Program Data\\ssh\\<username>\\authorized_keys and C:\\Users\\<username>\\.ssh\\authorized_keys is no longer valid?\nIsn't the whole point of the LocalAccountTokenFilterPolicy the usual way to control this? Why would SSH be different when you could also say the same thing about a loopback WinRM command, or anything else that does a network logon.\nThis is a bit concerning as you now have different behaviour from what users may expect which is to have this file in the user's .ssh folder in their profile directory. This coupled with the fact that the MS stance seems to be that UAC is not considered a security boundary* means you are treating it like it is when there are other ways to get around this. I could be misinterpreting the situation so please let me know if that's the case.\n* See the below for references\n\nhttps://blogs.msdn.microsoft.com/e7/2009/02/05/update-on-uac/\n\n\nOne important thing to know is that UAC is not a security boundary. UAC helps people be more secure, but it is not a cure all\n\n\nhttps://www.microsoft.com/en-us/msrc/windows-security-servicing-criteria?rtc=1\n\nThis is saying UAC is a defence in depth and not a security boundary. > this configuration would allow any administrator to log in as any other administrator with no logging or auditing that it occurred\nAn admin can do this anyway if they have enough privileges set (the default set is enough). If you have the SeTakeOwnershipPrivilege and SeRestorePrivilege you can adjust the other admin user's profile to put your own key in there with the correct privileges which is the same thing here. If you have the SeDebugPrivilege, you have enough to impersonate the SYSTEM account and call LsaLogonUser and log on any user without a password. There's bound to be other scenarios that could achieve the same result but this is just how Windows works. Once you have admin privileges you can pretty much do anything locally.\nThe key part here is that you don't have delegation capabilities so you cannot interact with network resources as that user unless you have the password. What I'm concerned about is the behaviour change for admin accounts that doesn't really achieve anything. This leads to fragmentation , confusion for end users, and adds complexity.. You would still need to set up the key for that user under that directory. It's not one shared key just the location of the key is different. E.g there would be a key for Administrator under C:\\ProgramData\\ssh\\Administrator\\authorized_keys and then a key for otheradmin under C:\\ProgramData\\ssh\\otheradmin\\authorized_keys.. Oh I did not realise that I thought the default was with %u. This is more troubling then I thought.. Not sure if you can add it to the top but you can still access it on the main landing page for the repo \n\n. This is slightly related, it doesn't hang but it will error without any info when trying to scp a file that doesn't exist on the remote https://github.com/PowerShell/Win32-OpenSSH/issues/1284.. ",
    "cretz": "I was running from command line. This behavior seems to deviate from sshd -d on nix platforms. However, if I run without -d, the shell host doesn't even start. Here's the client output of ssh -vvv localhost (with localhost not in my known hosts and using the ssh.exe from git bash):\n```\n$ ssh -vvv localhost\nOpenSSH_7.1p2, OpenSSL 1.0.2d 9 Jul 2015\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug2: ssh_connect: needpriv 0\ndebug1: Connecting to localhost [::1] port 22.\ndebug1: Connection established.\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /c/Users/chadr_000/.ssh/id_rsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /c/Users/chadr_000/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /c/Users/chadr_000/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /c/Users/chadr_000/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /c/Users/chadr_000/.ssh/id_ecdsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /c/Users/chadr_000/.ssh/id_ecdsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /c/Users/chadr_000/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /c/Users/chadr_000/.ssh/id_ed25519-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_7.1\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.5\ndebug1: match: OpenSSH_7.5 pat OpenSSH* compat 0x04000000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to localhost:22 as 'chadr_000'\ndebug3: hostkeys_foreach: reading file \"/c/Users/chadr_000/.ssh/known_hosts\"\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: kex_parse_kexinit: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1\ndebug2: kex_parse_kexinit: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,ssh-rsa\ndebug2: kex_parse_kexinit: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,arcfour256,arcfour128,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1,hmac-md5-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1,hmac-md5-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: none,zlib@openssh.com,zlib\ndebug2: kex_parse_kexinit: none,zlib@openssh.com,zlib\ndebug2: kex_parse_kexinit:\ndebug2: kex_parse_kexinit:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: kex_parse_kexinit: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: kex_parse_kexinit: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: kex_parse_kexinit: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: kex_parse_kexinit: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: kex_parse_kexinit: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: kex_parse_kexinit: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: kex_parse_kexinit: none\ndebug2: kex_parse_kexinit: none\ndebug2: kex_parse_kexinit:\ndebug2: kex_parse_kexinit:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: server->client chacha20-poly1305@openssh.com  none\ndebug1: kex: client->server chacha20-poly1305@openssh.com  none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:cVb2GWgdLRTJcoTpcu7mRVUGan4BVTNUbTKk6vQXZlU\ndebug3: hostkeys_foreach: reading file \"/c/Users/chadr_000/.ssh/known_hosts\"\nThe authenticity of host 'localhost (::1)' can't be established.\nECDSA key fingerprint is SHA256:cVb2GWgdLRTJcoTpcu7mRVUGan4BVTNUbTKk6vQXZlU.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added 'localhost' (ECDSA) to the list of known hosts.\ndebug2: set_newkeys: mode 1\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug2: set_newkeys: mode 0\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug2: key: /c/Users/chadr_000/.ssh/id_rsa (0x0),\ndebug2: key: /c/Users/chadr_000/.ssh/id_dsa (0x0),\ndebug2: key: /c/Users/chadr_000/.ssh/id_ecdsa (0x0),\ndebug2: key: /c/Users/chadr_000/.ssh/id_ed25519 (0x0),\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: /c/Users/chadr_000/.ssh/id_rsa\ndebug3: no such identity: /c/Users/chadr_000/.ssh/id_rsa: No such file or directory\ndebug1: Trying private key: /c/Users/chadr_000/.ssh/id_dsa\ndebug3: no such identity: /c/Users/chadr_000/.ssh/id_dsa: No such file or directory\ndebug1: Trying private key: /c/Users/chadr_000/.ssh/id_ecdsa\ndebug3: no such identity: /c/Users/chadr_000/.ssh/id_ecdsa: No such file or directory\ndebug1: Trying private key: /c/Users/chadr_000/.ssh/id_ed25519\ndebug3: no such identity: /c/Users/chadr_000/.ssh/id_ed25519: No such file or directory\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive\ndebug3: remaining preferred: password\ndebug3: authmethod_is_enabled keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug2: userauth_kbdint\ndebug2: we sent a keyboard-interactive packet, wait for reply\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: userauth_kbdint: disable: no info_req_seen\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup password\ndebug3: remaining preferred:\ndebug3: authmethod_is_enabled password\ndebug1: Next authentication method: password\nchadr_000@localhost's password:\ndebug2: we sent a password packet, wait for reply\ndebug1: Authentication succeeded (password).\nAuthenticated to localhost ([::1]:22).\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug1: Requesting no-more-sessions@openssh.com\ndebug1: Entering interactive session.\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\ndebug2: callback start\ndebug2: fd 3 setting TCP_NODELAY\ndebug3: ssh_packet_set_tos: set IPV6_TCLASS 0x10\ndebug2: client_session2_setup: id 0\ndebug2: channel 0: request pty-req confirm 1\ndebug2: channel 0: request shell confirm 1\ndebug2: callback done\ndebug2: channel 0: open confirm rwindow 0 rmax 32768\nConnection reset by ::1\n```\nSadly, now I can't see server side logs on this because with the debug flag it works, only without does it fail this way (doesn't even complete connect).\nAs for why I don't want to run this as a service, there are many. But the primary one right now is portability, I want to leave no traces on the user system and want to essentially embed this in my app (and I'm even considering statically linking sshd though we know what problems vendoring security tools like that causes). Regardless, I would hope that manually using sshd.exe is supported and from perusing the install script, it shouldn't affect it in this scenario.. Thanks, sorry about the -d red herring. I changed the title.\nI have considered this, and am intentionally choosing not to. I would really really like to know what steps to take from a raw sshd.exe executable. Granted, the issue has now changed from exiting killing the sshd daemon in debug mode, to sshd dying when not in debug mode. I have changed the title to reflect this.\nThe logs were not there until I created the logs folder (or used -E), so now I can see them. The original failure was the absence of this folder. Now I am getting (among other things):\n4232 16:16:41:420 debug1: Executing command: c:\\\\some-path\\\\OpenSSH-Win64-0.0.21.0\\\\ssh-shellhost.exe \n4232 16:16:41:420 fatal: ERROR. Cannot create process (1314).\\n\n\nOk, after some research, it is a permissions issue. For example, if I gen the keys and run sshd as the system user (e.g. psexec) it appears to work. Obviously this isn't the wisest thing security-wise and I won't suggest anyone doing it. But now I know that if I want to embed this in my program, what privileges and ownership model I need (and can gather some of it from doing what install.ps1 does). Now I have to figure out how to do this at runtime instead of as a service user or using psexec...also I might want to hide the console hwnd that pops up (granted I figure that the service doesn't show it anyways).\nClosing. If there are any suggestions as how to make this easier on myself without a custom service account (or maybe see this as an issue requesting a config option to disable ACL checks), please mention them.. @DarwinJS - Is it possible to document these \"hard learned lessons\"?. Indeed, sorry about the mix up.. ",
    "yasu1013": "@manojampalam Thank you for your reply. \nIs that same about ssh-agent.log ? (no mechanism to limit size, any time cleaning). @bagajjal Thank you for quick response. I close this issue.. Thank you for very quick response. \nJust for confirmation, Is this issue caused by a bug in OpenSSH for Windows ? . Thank you. I wait for progress.. I am sorry, I forgot to tell an important thing:\n\"net stop\" command sometimes fails. However, sshd service actually stops in that case. There is the event log that sshd service has stopped. \nupdated at Aug 22: \"a important thing\" -> \"an important thing\" :). @thezim thank you for your comment. I will consider to apply KB4345424. I also would like to wait for the result of investigation in OpenSSH.. ",
    "minodudd": "I'm afraid it didn't do the trick. \nI'm still getting False for that script as well as trying to to run nircmd.exe monitor async_off. \nThe command works locally but not over ssh even when wrapped with psexec -i.\nSpecifically I've tried it with psexec64.exe, but I doubt that's the issue.. ",
    "parkovski": "Cool, please update this thread if you can when you have an answer from them - the node-pty and winpty issues where I referenced this affect the vscode integrated terminal (same issue - Ctrl-C does nothing) which I'd like to fix.. What about generating a private key hash of the program the user designates as the default shell, and falling back to cmd.exe if the hash doesn't match? It seems like that would provide maximum flexibility but avoid the \"malware changes the envvar or exe\" security issue.. @manojampalam It's along those lines but the signing data would be separate from the executable and managed by ssh-agent. Essentially you'd store a list of authorized shells and a command to add to the list (or an option on ssh-add) that requires admin privileges - this would generate a new key pair with the private key only readable by the system and hash the shell exe. You could store these hashes somewhere like ~/.ssh/authorized_shells - security doesn't matter for that file because only the system can generate a correct hash. Then it would be safe to read the shell from an environment variable and run it as long as its hash validates. This is useful if you want to set a default shell to something not published by MS, or if you're developing one yourself. The downside for shell developers is they have to update this for every new build.\nNow that I think about it though, this seems more complicated than it needs to be. Just a quick note about using a reg key though - unless you enforce admin write permissions on the path it points to, there's still a potential security hole if I set my shell to something like \"~/Documents/my-custom-shell.exe\". I think this approach is easier and still secure:\n- Only launch shells that require elevated write permissions.\n- Create an authorized_shells list - whether this is in the install directory or the user's .ssh directory doesn't matter as long as it also requires elevated write permissions.\n  - An unresolved question is whether this should allow directories. It would be nice to list C:\\Program Files\\PowerShell\\** and have any PSCore update work automatically, but C:\\** probably should not allow any admin writable path.\n  - Maybe you have to list the exe name, or can use wildcards but not a blanket \"any subpath\".\n- Whitelist the system path and/or signed exes. This way nothing special has to be done to switch between cmd and PowerShell.\n- Read the shell from an environment var, but validate the ACLs and against the authorized_shells list, otherwise fall back to the default.\n  - As a side note, it'd be nice to have the default be based on the start menu (Win+X) shortcut option. . Looking at this MSDN page, seems like you'd read from HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\Environment to check just for system environment variables. Looks like GetEnvironmentVariable and GetEnvironmentStrings just look at the calling process' environment block.. See #914; this is a chronic issue with every project that tries to act as a terminal on Windows. Unless somebody with source access to the console gives some guidance, I'm pretty sure it's unsolvable in the general case - I've spent hours digging through console disassembly and trying all sorts of methods with no success. In the future it'll be possible with actual PTYs (search PseudoConsole in kernel32 exports on latest insider build), but it sure would be nice if existing projects could do this now.. ",
    "ryan-r-russo": "I too find the wording confusing.  I am attempting to use Cygwin's bash.exe and going around in circles adding various options to both DefaultShell and DefaultShellCommandOption in possibly futile attempt to get my Cygwin Bash user resource files to get sourced in.   As it stands now I have no path to Cygwin's bin dir.   Based on the discussion here it seems that DefaultShellCommandOption is meant for one-time command which does not require interactive shell?\nAlso, if my conclusion is true, does DefaultShell allow for options following the path?\nHere's a few I tried for DefaultShell:\nC:\\cygwin64\\bin\\bash.exe -i\nC:\\cygwin64\\bin\\bash.exe -\nC:\\cygwin64\\bin\\bash.exe --login\nNone read my Bash resources files in C:\\Users\\$MYUSER\nI have each type in that location that Bash normally uses as a login shell  (.basrc, .profile, .bash_profile)\n. Right. I get it now.  The wording led me to believe the the separate key was for options to DefaultShell.  \nI get the behavior I want with Default Shell value = C:\\cygwin64\\bin\\bash.exe --login\nand DefaultShellCommandOption unset\nI was trying both but, must not have restarted after one of those attempts.\nLogin now sources my Cygwin user's .bashrc as expected.\nAs the docu. reads it sounds like you cannot have both.\nAlso, without DefaultShellCommandOption command unset I can still run remote commands like hostname  and log in interactively.\nThis is latest version (0.0.22.0) on Win 7 64. ",
    "t8bloom": "Yes, this is all from within a single domain.. Thanks for your help on this.  As part of the logon process I can see it enumerate all of my domain groups.  The error returned is 2584 14:19:55:856 User testX@XXXXX.com from XXX.XXX.XXX.XXX not allowed because none of user's groups are listed in AllowGroups.  Explicitly, this is true.  However one of the domain groups I am a member of is nested into the allowed domain group.  It looks like it is enumerating the groups the user is a direct member of from the domain controller, then comparing this to the group listed one layer down in the local group.  My best guess is it is not doing this same interrogation down into the allowed domain groups to check for further nested groups.. ",
    "christian-korneck": "I have the same issue and did some testing. It appears to me that group nesting currently (0.0.23.0):\n- only works if the group that is authorized for access (the one configured in sshd_config) is a domain-local group.\n- Such a domain local group can have a global group as member.\n- However, nesting more levels of global groups into a domain local group fails as well.\n- And local groups nested in local groups aren't recognized at all.\n- computer-local groups seem to behave the same way as domain-local groups in this context (one level of global group nesting is possible, nothing else)\nGlobal groups nested in global groups do not appear in the DEBUG3 output. Global groups nested in local groups however do appear in the log.\nworking: global in local (exactly single-level nesting)\n\nnesting: domain\\domain-local-group -> domain\\globalgroup -> domain\\user\nsshd_config:  AllowGroups domain-local-group?domain\nresulting group list: globalgroup, domain-local-group\n\nnot working (global in global / single-level nesting and above):\n\nnesting: domain\\global-group1 -> domain\\global-group2 -> domain\\user\nsshd_config:  AllowGroups global-group1?domain\nresulting group list: global-group2\n\nalso not working: global in local / multi-level nesting):\n\nnesting: domain\\domain-local-group -> domain\\globalgroup1 -> domain\\globalgroup2 -> domain\\user\nsshd_config:  AllowGroups domain-local-group?domain\nresulting group list: globalgroup2\n\nalso not working: local in local (single-level nesting and above):\n\nnesting: domain\\domain-local-group1 -> domain\\domain-local-group2 -> domain\\user\nsshd_config:  AllowGroups domain-local-group1?domain\nresulting group list: domain-local-group2\n\nIt might also be worth to note that the group list is entirely empty when trying to authenticate as a user from a foreign domain (domain2\\user) to which the computer that runs sshd has a domain trust. Login without AllowGroups restrictions works though.\nFrom my understanding all of the above mentioned use cases are valid Active Directory usecases.\n- Authorizing a global group for access and then nesting multiple levels of global groups into it, is common in single-domain scenarios.\n- Authorizing a local group for access and then nesting multiple levels of global groups into it, is common with cross-forest domain trusts\n- local groups nested in local groups is probably not so common (but as it's possible some people might use it)\n. ok, I think I figured it out. On my Windows 7 machine the environment variable DISPLAY=localhost:0.0 was set. Removing/Renaming this variable resolved the issue.\nWhile it was set, my c:\\Program Files\\OpenSSH\\ssh.exe was trying to execute c:\\Program Files\\OpenSSH\\usr\\X11R6\\bin\\ssh-askpass.exe, which doesn't exist (seen with a procmon trace).. I agree with @pavelkomarov . It looks like a bug to me. Any chance that this issue could get re-opened?. ",
    "AlFeersum": "Wouldn't it also be dependent on the AV?  Sophos Enterprise doesn't flag it.. ",
    "danielchalmers": "I got this on Windows Defender definition version 1.257.121.0 with one of my programs.\nAfter updating to 1.257.132.0 it doesn't seem to happen anymore.. ",
    "shawniverson": "Wrong repository for PR, closing. Wrong repository for PR, closing. ",
    "agordon": "Hello @bagajjal ,\nI'm not asking about the technical possibility of multiple connections - that is obviously possible.\nI'm asking about the legality and licensing requirements of such connections.\nFor example, to the best of my understanding, On \"windows 10 home\" only one user is allowed to be connected remotely at a single time (e.g. with remote desktop).\nAnother example: for desktop windows licenses (e.g. \"Windows 10 pro\"), you are not allowed to use them as servers (see here: https://www.microsoft.com/en-us/licensing/product-licensing/faq-product-licensing.aspx , under \"Windows client operating system\" , question \"Can I use Windows Pro or Enterprise like a \"server\" to host applications?\" the answer is a clear \"no\").\nAnd so my question is:\nDoes \"Win32-OpenSSH\" (which is clearly a type of a \"server\" program) falls under these or similar licensing restrictions, or does it not ?\nOr concretely, if I have a \"windows 10 pro\" desktop and I run Win32-OpenSSH on it - are multiple users allowed to connect (legally, from micrsoft's licensing POV).\nEDIT:\nFollow-up: It seems \"file services\" is allowed on \"Windows 10 pro\" - does that mean that running SFTP server is OK ?\nThanks!\n. @mslicensing ,\nThank you for providing more details. Just to verify: are you an official MS account and that is an official MS response? The @mslicensing user has no credentials/bio/email/website/links whatsoever ( @joeyaiello  - can you confirm this?).\nNow to discuss things in a more concrete way:\n\n\nBased on your explanation of \"Web Workload\" - If I have \"Windows Server 2012\" and running OpenSSH on it, can users from the \"internet\" (not intranet) connect to it and run a local EXE program without requiring CALs ? Is that still considered \"web workload\" ?\n\n\nHow does \"web workload\" relates to \"SFTP-Server\" ? \"SFTP-SERVER\" is part of OpenSSH, and allows file uploading/download (similar to FTP, or somewhat similar to CIFS/SMB).\nIf I have \"Windows Server 2012\", can I run SFTP server and allow as many internet users as I want to connect to it without requiring CALs ?\n\n\nYour reply does not mention Windows Desktop Clients (e.g. Windows 7 Pro, Windows 10 Home, etc.).\nDoes this mean windows desktop client are never allowed to give access to other users through OpenSSH / SFTP ? That is, if I have a Windows 10 Home and install OpenSSH/SFTP server on it, only I am allowed to access it remotely using OpenSSH/SFTP (as I am the \"primary user\" of the desktop client machine,  similar in situation to Remote Desktop on a Windows Desktop Client)?\n\n\nThanks!\n. @mslicensing - thanks again. very useful information.\nContinuing in the Windows Desktop context:\n\n\nI would say that SFTP is a type of \"file sharing\" (it is literally \"Secure File Tranfer Protocol\", a way for remote users to upload/download files). Based on your information, I would say that up to 20 users can use it. Does this mean \"20 users in total\", or \"20 users simultaneously\" (that is - there could be a 1,000 theoretical users, but at any given point in time only 20 can be connected to SFTP)?\n\n\nWith OpenSSH, things are less clear. It is perhaps similar to \"Remote Desktop without GUI\" - something like the ability of a remote user to connect to the Windows Desktop machine and execute local programs (something like PowerShell scripts). Would you say this still falls under the \"20 users limit\", or does \"Remote Desktop\" presents further restrictions on a Windows Desktop machine ?\n\n\nThanks again! \nThis type of information is so hard to get...\n. @mslicensing,\nMy first scenario is simple (or at least sounds simple to me):\n1. a Windows machine (preferably virtual, but can be physical).\n2. Preferably Desktop (e.g. Windows 10 Home), but can be Server.\n3. Running OpenSSH server in the windows machine (technically, this server listens on TCP port 22)\n4. Windows machine is open to the internet (i.e. anyone can connect to my IP on TCP port 22)\n5. The Windows machine has X number of users defined (e.g. \"user1\", \"user2\", etc.).\n6. People from the internet can connect to my Windows machine using the SSH client, assuming I give\n   them a user/password. I have no knowledge of which type of computer they use, but most\n   likely they are using Mac OS X or Linux. Could also be Android/iPhone/iPad clients.\n7. Once they are connected, they see a terminal (somewhat equivalent to \"cmd.exe\" screen)\n8. On said terminal They can type commands and run EXE files (for example, \"gordon.exe\" which is a program  I compiled and I allow anyone to run it without restrictions, so this part does not impose\n   any further restrictions. The program (e.g. \"gordon.exe\") technically run on my windows machine,\n   and the results are shown on their remote terminal (similar to Remote Desktop, but without gui).\nUnder this scenario, can 20 concurrent users connect to my machine in the manner described above?\nAs a variation: if only one user is defined on the windows machine (e.g. \"Administrator\"),\nis it legal to give the password for that user to 20 users and have them connect using SSH,\nand run the \"gordon.exe\" file as describe above ?\nSecond Scenario, for SFTP:\nSame steps 1-6 as above,\nbut instead of seeing a terminal/cmd.exe screen, they see a list of files.\nThey can then give an \"upload\" command to send files to my windows machine,\nor a \"download\" command to get files from my windows machine to their local computer.\nThese are the exact scenarios - I'm really looking for a legal way to provide such publicly available machine.\nOf course I want to make it as cheap as possible, which is why the idea of having a Desktop machine\nand limiting access to 20 concurrent users sounds very good (if it is indeed allowed).\nThanks!\n. @joeyaiello - any updates on an official answer for SSH connection licensing?. ",
    "fswgm": "Let's answer this in two parts, with the easy part first.\n1: \"Does OpenSSH running on a windows server require as many CALs as there are SSH users?\"\nasdasd\n2: \"Does OpenSSH running on Windows 10 Home allows multiple users to connect with SSH at the same time?\"\nThe answer to question 1 is the easy one. You need a Windows Server CAL (>= version on the server) for every user or device that is accessing that server - directly or indirectly. It doesn't matter what protocol is being used. OpenSSH is the same as any other type of access to that server.\nNow to the hard question. You asked \"...does it allow...\", and the answer to that question is, \"quite probably\". But I don't think that's what you're really looking to have answered. Windows 10 will allow up to 20 TCP connections. So technically, it probably allows it. But I assume, based on the category of this question, that you meant \"is this legit?\" The answer to that is a much easier, \"No.\"\nI've attached the pertinent info below, from the Oct. 2017 Product Terms, but the document linked in earlier replies also includes some of this. Number 5 is your deal-killer. While the software may function, and allow you to create this non-compliance scenario, it is indeed non-compliant. The only way to rectify it is to limit the software to only allow a single user (of a device licensed for Windows, as mentioned), or install it on a Windows Server OS (and ensure proper CAL coverage).\nAlso, when Microsoft says \"file services\" in that context, you can likely assume - absent any useful clarification from them - that that means \"Windows File and Printer sharing\". I would not assume it means any other type of file sharing.\nHope that helps;\nWes Miller\n** Microsoft Product Terms, October, 2017 ****\nDesktop Operating Systems\nDevice License\n1.  Customer may install one copy of the software on a Licensed Device or within a local virtual hardware system on a Licensed Device for each License it acquires.\n2.  Customer may use the software on up to two processors.\n3.  Local use is permitted for any user.\n4.  Remote use is permitted for the Primary User of the Licensed Device and for any other user from another Licensed Device or a Windows VDA Licensed Device.\n5.  Only one user may access and use the software at a time.\n6.  Customer may connect up to 20 devices to the Licensed Device for file sharing, printing, Internet Information Services, Internet Connection Sharing or telephony services.\n7.  An unlimited number of connections are allowed for KMS activation or similar technology.\n. ",
    "mslicensing": "Wes Miller is generally correct, but there's a very important exception here as well as an alternative. \nThe Exception\nAny device or using connecting to a \"Web workload\" does not require a CAL. This rule, in effect for Windows Server 2012 and later makes it possible to run Windows Server as a web Server without having to license external users (anyone who is not an employee or an onsite contractor).\nThe Product Terms say (in the rights for the Core/CAL model, which includes only Windows Server) \n\n\"CALs are not required to access server software running a Web Workload or HPC Workload.\"\n\nA Web Workload is defined in Product Terms quite broadly.\n\nWeb Workload (also referred to as \u201cInternet Web Solutions\u201d) are publicly available web pages, websites, web applications, web services, and/or POP3 mail serving. For clarity, access to content, information, and applications served by the software within an Internet Web Solution is not limited to Customer\u2019s or its affiliates\u2019 employees.\nSoftware in Internet Web Solutions is used to run:\n\u00b7 web server software (for example, Microsoft Internet Information Services), and management or security agents (for example, the System Center Operations Manager agent);\n\u00b7 database engine software (for example, Microsoft SQL Server) solely to support Internet Web Solutions; or\n\u00b7 the Domain Name System (DNS) service to provide resolution of Internet names to IP addresses as long as that is not the sole function of that instance of the software.\n\nThe Alternative\nThe alternative, which comes into play if the server is NOT running a Web workload, still costs money, but it can be cost-effective if you have a large number of external users accessing a Windows server. You can purchase an External Connector (EC) for a physical device (which means a single EC works for all the VMs on a host) that eliminates the need for CALs for external users.\nAn External Connector costs about 50x the cost of a CAL, so if you have more than 50 external users accessing something other than a Web workload, the EC is less expensive. Keep in mind, however, that each Windows Server device accessed by external users would require its own EC, while once a user has been assigned a CAL, it will work with any number of Windows Servers. So number of users per server is important.\nLet's say I have 20 Windows Servers accessed by 10,000 external users. With a ratio of 500 users per server, the EC is clearly less expensive\nBut if I have 20 Windows Servers accessed by 500 external users, a ratio of 25:1 can be better met by purchasing CALs for the users.\n. I am not an official Microsoft account. MSlicensing is my professional Twitter handle and I decided to reuse it here. I am not endorsed by Microsoft in any way. Microsoft doesn't like me.  (And I have some opinions about them.)\nI am an independent Microsoft licensing consultant, whose organization has cost MS about half a billion dollars over the last few years by counselling customers how to save money and be compliant. I worked with Wes Miller at Directions on Microsoft a few years back, before going out on my own. Great guy whose views (on many things) I respect a lot.\nI'm not technical, and the general rule of thumb I use for customers asking about this is whether customers are accessing the server via HTTP or POP3. I would guess that FTP workloads, and thus SFTP workloads, are not Web workloads. Of course, I'd also need CALs or ECs if the server is running even a Web workload on Windows Server 2008 R2 or earlier.\nSo maybe my contribution on this thread related to Web workloads isn't really useful if HTTP and OpenSSH are never used together. \nBut the advice on External Connectors is still valid. They can substitute for CALs and are far easier to manage than CALs. It's probably easier for an organization to track the number of Windows Servers that they have opened up for access by external users than to track the number of unique users accessing those servers, and wondering when the ratio may tip over in favor of ECs. (ECs cost somewhere between $1,100 to $1,600 depending on your organization's volume licensing discount.)\nThe only time I'd use CALs for this is when I had, say, one partner or customer that wanted access to a specific server and I could limit access to a small number of users via authentication. (The Web Workload rule is agnostic about authentication. Do it, or don't do it. Makes no difference.)\nIt can be a bummer when you've bought a bunch of CALs and then discover demand is greater than expected, and you have to chuck the CALs and buy ECs instead. (And no, Microsoft won't give you trade-in credits for the CALs that are now worthless.)\nOne thing I'll add that may have tangential value. It should be fairly obvious that SharePoint is a Web workload but it may not be well known that, since SharePoint 2013, external users can access SharePoint without requiring SharePoint CALs, or ECs, or some special version of SharePoint. Ditto for Exchange (there's an exception with Exchange I won't mention unless someone asks), and Lync/Skype.\nPaul DeGroot\nPrincipal Consultant\nPica Communications\n. I should address the Windows desktop issue as well. There are no CALs or ECs for the desktop OS. The only limit I know of is in the OEM EULA (which applies even to corporate desktops, since MS doesn't sell Windows OS through volume licensing, but only upgrades to Windows obtained elsewhere, usually the OEM. \nThe Windows 10 OEM EULA says\n\nDevice connections. You may allow up to 20 other devices to access the software installed on the licensed\ndevice for the purpose of using the following software features: file services, print services, Internet\ninformation services, and Internet connection sharing and telephony services on the licensed device. You\nmay allow any number of devices to access the software on the licensed device to synchronize data\nbetween devices. This section does not mean, however, that you have the right to install the software, or\nuse the primary function of the software \ufd3eother than the features listed in this section\ufd3f, on any of these\nother devices.\n\nThe current Product Terms generally confirm the EULA. It appears to make it a bit more restrictive, with no mention of data syncing. So take that as either an unlimited right to sync data or a complete prohibition on it. (Love that MS ambiguity.) If this every came up in an audit I'd demand that MS show me where it is prohibited. From Product Terms\n\nCustomer may connect up to 20 devices to the Licensed Device for file sharing, printing, Internet Information Services, Internet Connection Sharing or telephony services.\n\nSome history\nThe Windows 8 EULA is similar to Windows 10, \nWindows 7 EULA allows 20 connections but limits it to File Services, Print Services, Internet Information Services and Internet Connection Sharing and Telephony Services. It does not address access to sync data.\nThe Windows XP EULA has a max of 10 device connections, sync limited to one user at a time.\nPaul DeGroot\nPrincipal Consultant\nPica Communications. MS doesn't specify this, but the general consensus is that this is a maximum of 20 concurrent connections.\nQ. 2 may require deeper analysis and my expectation there is that we won't get an answer from the documentation. \nBut here are some other situations where MS addresses PC-to-PC communication.\nFirst, the Primary User of a Windows device (the person who uses it more than 50% of the time) can freely access the PC from any other device. Read those words slowly. Any. Other. Device. No restrictions. A good example here is something like GoToMyPC. This \"primary user right\" is what makes it legal for anyone to connect to their PC at work from their iPad, Mac, friend's PC, etc., \nSecond, any other device can connect to a Windows device and use it remotely (in any mode, gui or command line) if the accessing device is licensed for the same version and edition of Windows. I generally treat this to include legal downgrades. So if my PC is licensed for Windows 10 and yours is running Windows 7, I can connect to your PC because Windows 7 is a legal downgrade from Windows 10.\nHere is the Product Terms language\n\nRemote  use is permitted for the Primary User of the Licensed Device and for any other user from another Licensed Device or a Windows VDA Licensed Device. \n\nThis doesn't allow much concurrency, however. The next rule says\n\nOnly one user may access and use the software at a time.\n\nThis combination of rules means that you can theoretically create a farm of physical Windows devices that external users could access, but you'd have to detect their Windows version and edition of the accessing device and match it to something on your side. Then they have reasonable freedom to do anything. But there's no concurrency there. These cannot be virtual devices. That opens a whole new can of worms.\nMaybe you can describe a specific scenario. How many devices to be accessed? From how many devices? Are users all part of the same organization or could they come from anywhere?\nWithout that I'd see if I could squeeze what I'm doing into what is permitted. How far can you stretch \"file services\"?\n. At first glance, I would say the second scenario is legal, under the category of \"File Services.\" The rights I have been quoting are for the Professional edition, but I just checked Windows 7 Home Premium and it allows 20 connections for \n\nfile services, print services, Internet information services, and Internet connection sharing and telephony services\n\nI can't see the first scenario being legal or doing it legally it won't meet your requirements. If you licensed the OS via a volume licensing program (e.g., you buy a Windows Pro upgrade through the Open License program) and you can limit it to people who are using the same version and edition of Windows as your Windows box is licensed for, then the Licensed Device Right (access from a device with the same Windows license) would apply. But your users, including the Macs and Android devices would also need Windows Pro licenses. Sounds like a dead end.\nIf the machine is virtual, none of this works, because the Primary User Right and the Licensed Device Right apply only to physical devices. Only recently has MS allowed hosting of Windows desktops, and you would need to be an approved hoster, with many hoops to jump through as well as financial and reporting responsibilities. And your users would not get a free pass. Someone would need to pay Microsoft somewhere between $70 and $100 a year for each unique device accessing the hosted image.\nPaul\n. One of the fundamental principles of Microsoft licensing is this one, from Microsoft Product Terms:\n\"Multiplexing or pooling to reduce direct connections with the software does not reduce the number of required Licenses.\"\nThat applies to things liked pooled database connections and it would apply here. The fact that Windows may see only a single session, does not excuse you from having to license every endpoint that ultimately communications through that session.. ",
    "naatje80": "Forgot to mention i could stop the client by typing Control+C.. Dear manojampalam,\nThank you for your reply. The session process is indeed still running on the Linux target. When break the client session by pressing Control+C it is also closed.. The cat process is indeed still running on the server. \nWhat I actually wanted to achieve is copying the public ssh key added to the authorized keys of a file using ssh. But because the client freezes, I tried just the basic: only redirecting some text to the remote server. \nWhat I see is that if I send output to the stdin using ssh, the file is created but the content is not added until I press Control+C. I also tried the redirection using dd:\necho \"Hello World\"\\r\\n | ssh userid@server  \"dd of=some_file oflag=append conv=notrunc\"\nI see the same issue: dd is not closing on the server side until I press Control+C in the client. Also the file is created but the content is not added until Control+C is pressed in the ssh client on the Windows side.\nI already tried various carriage return ending for the echo line, because I also expected that it was waiting a return. But none seem to help.\nHopefully this additional information is helpfull...... Great, thank you! The issue is indeed now solved. There was only one issue with the ssh.exe you've supplied, It had a dependency for libcrypto.dll but the pre-compiled version of the full package contained a file called libcrypto-41.dll (Only had to copy and rename that file to use the ssh.exe). But this is most likely due to the way you've compiled the pacakge...... @bagajjal Ok thank you for your clarification. I understand! For me the issue is solved.. ",
    "jdnichollsc": "ohh thanks for response, I'm going to use the ssh-agent of Git \ud83d\udc4d . ",
    "kice": "I knew that and is it there any config effect on this issue? like limiting the file size or only log last 7days.. ",
    "brandonroyal": "@bagajjal no. I'm not.\nWhen attempting interactive SSH...\nbash\n$ ssh -p 2222 vagrant@localhost\nCommand screen looks like this:\n```cmd\nMicrosoft Windows [Version 10.0.14393]\n(c) 2016 Microsoft Corporation. All rights reserved.\nvagrant@VAGRANT-2016 C:\\Users\\vagrant>\n```\nConfirming this is not PowerShell by requesting PS version:\ncmd\nC:\\Users\\vagrant>$PSVersionTable.PSVersion\n'$PSVersionTable.PSVersion' is not recognized as an internal or external command,\noperable program or batch file.. @bagajjal Any update on this?. ",
    "kitdarko": "\nI can confirm that this issue still exists.\nSSHing into virtualbox from macOS produces the above results: cmd.exe is used as the shell instead of powershell, and powershell can not be invoked.\nBoth Windows and macOS are on the most recent versions.. Even as administrator, I am unable to modify that file.\nI've installed OpenSSH from add/remove windows features, not from here. Given the registry entry shows that powershell is the default, how does this binary help?\nIf it's necessary to override that, could you please advice on how this can be achieved (I'm a Linux/macOS user, and don't know much about windows). ",
    "Paulbsh": "This setting acquires a tty on the target system (in this case on a windows machine). \nUse case: A script, containing the ssh command, is triggered on a system which does not have a tty itself (for example from a scheduler [in our case SAP Solution Manager or Icinga]). \nWe counter checked this with a linux system as ssh target with the mentioned setting set in /etc/sudoers.d. ",
    "dwatley": "@bagajjal Just want to add I can reproduce this as well.\nServer: OpenSSH-Win64 v1.0.0.0\nClient: Windows 10 1709, ssh.exe included with git from Git SCM: OpenSSH_7.6p1, OpenSSL 1.0.2l  25 May 2017\nDid the xterm, buffer settings and SSH_TERM_CONHOST_PARSER bits. Can easily reproduce it every single session. Not an issue in PuTTY or Chrome SSH App. Happy to help debug. Should also note that this doesn't affect the ssh.exe included with OpenSSH-Win64.\nOutput:\n\n. @bagajjal Works for me...\nC:\\Program Files\\Git\\usr\\bin>.\\ssh.exe -V\nOpenSSH_7.3p1, OpenSSL 1.0.2j  26 Sep 2016\nMultiple people have reported the issue, I think it may be cygwin based ssh builds potentially?. @bagajjal - Are you still having trouble reproducing this?. @bingbing8 @bagajjal - Ping again. Is this in line for next release or is it not yet reproducible for you?. Turns out this was an issue with a non-standard configuration for user rights assignment in secpol.msc. Certainly, that crossed my mind as I closed it. \ud83d\ude05 \nYou should see a corresponding event in the security channel of the Windows Event Log indicating an audit failure. Log snippet below.\n```\nLog Name:      Security\nSource:        Microsoft-Windows-Security-Auditing\nDate:          1/31/2018 4:45:26 PM\nEvent ID:      4625\nTask Category: Logon\nLevel:         Information\nKeywords:      Audit Failure\nUser:          N/A\nComputer:      dwatley-ws.myhost.blah.com\nDescription:\nAn account failed to log on.\nLogon Type:         3\nAccount For Which Logon Failed:\n    Security ID:        NULL SID\n    Account Name:       sshd\n    Account Domain:     DWATLEY-WS\nFailure Information:\n    Failure Reason:     The user has not been granted the requested logon type at this machine.\n    Status:         0xC000015B\n    Sub Status:     0x0\nProcess Information:\n    Caller Process ID:  0x3bdc\n    Caller Process Name:    C:\\Program Files\\OpenSSH\\sshd.exe\n```\nLogon Type 3 indicates a network login. In my case there is a non-standard User Rights Assignment configuration, so the sshd user which is a local account created at some point (not sure exactly when this occurred, maybe at installation, maybe at first service start) needs to be in a group that has access to, or be explicitly added to the relevant portion of User Rights Assignment policy via secpol.msc\nSecurity Settings > Local Policies > User Rights Assignment > Access this computer from the network\nOnce the appropriate permissions have been granted, should work with no issue.. Maybe the service isn't running as SYSTEM?. With a bit more testing I'm able to get the cert accepted, but can't complete the login due to the identity on the system not matching:\nThe principal on the cert is dwatley, if I attempt to login with dwatley@host the cert is accepted, but there is no user on the system with that identity due to it being a domain account (contoso\\dwatley@host) rather than a local account (dwatley@host) so it fails as expected:\ndebug3: mm_answer_keyverify: publickey 000001FB4382F5A0 signature verified\ndebug3: mm_request_send entering: type 25\ndebug1: monitor_child_preauth: dwatley has been authenticated by privileged process\ndebug3: mm_get_keystate: Waiting for new keys\ndebug3: mm_request_receive_expect entering: type 26\ndebug3: mm_request_receive entering\ndebug3: mm_get_keystate: GOT new keys\ndebug2: userauth_pubkey: authenticated 1 pkalg ecdsa-sha2-nistp256-cert-v01@openssh.com [preauth]\ndebug3: send packet: type 52 [preauth]\ndebug3: mm_request_send entering: type 26 [preauth]\ndebug3: mm_send_keystate: Finished sending state [preauth]\ndebug1: monitor_read_log: child log fd closed\ndebug1: LsaLogonUser failed NTSTATUS: 1\nunable to generate token for user dwatley\ndebug1: LsaLogonUser failed NTSTATUS: 1\nunable to generate token on 2nd attempt for user dwatley\nunable to get security token for user dwatley\nposix_spawn failed\nThe username and cert principal matching appears to be handled by this function in sshkey.c\nI don't believe adjusting the principal will be an option because then of course this would break logins for Linux systems with identical user names, and it seems reasonable that matching the user portion of the domain\\user combination on Windows would make this work.\nAs an exercise I tried creating a custom ca_cert and signing a user cert with a principal as various domain\\user combinations (contoso\\dwatley, contoso\\\\dwatley) and could not get it to work, so I'm guessing there's some Windows specific work to be done here to make this a reality. Thoughts? This certainly isn't my expertise, but based on my findings my hope is that it would be relatively simple to implement.\nAgain the end goal would be having an identical setup between Windows and Linux using an identical TrustedUserCAKey and signed user cert with the username (minus domain) as the principal on the cert.. Now I'm able to login if I leverage the AuthorizedPrincipalsFile and place the username in the file.\nAuth user: contoso\\dwatley\nTrustedUserCAKeys: enabled\nUser Cert: principle is dwatley\nAuthorizedPrincipalsFile: C:/ProgramData/ssh/authorized_principles (contents dwatley)\nI'm not sure this is how it's intended to work, but it works. I should also mention that environment variable expansion seems to work differently depending on the sshd_config option. For instance TrustedUserCAKeys allows the use of __PROGRAMDATA__ in the file path, but AuthorizedPrincipalsFile seems to require an absolute path, else when using __PROGRAMDATA__ it attempts to search relative to the user's profile with __PROGRAMDATA__ inserted:\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:68 setting AuthorizedPrincipalsFile __PROGRAMDATA__/ssh/authorized_principles\n...\n...\ndebug1: trying authorized principals file C:\\\\Users\\\\dwatley\\\\__PROGRAMDATA__/ssh/authorized_principles\ndebug3: Failed to open file:C:\\\\Users\\\\dwatley\\\\__PROGRAMDATA__/ssh/authorized_principles error:2\ndebug1: Could not open authorized principals 'C:\\\\Users\\\\dwatley\\\\__PROGRAMDATA__/ssh/authorized_principles': No such file or directory\nI got around this with the sshd_config option implemented this way: AuthorizedPrincipalsFile C:/ProgramData/ssh/authorized_principles\n. Right, in the sshd_config, __PROGRAMDATA__ is used for both TrustedUserCAKeys and AuthorizedPrincipalsFile at the very beginning of the line, but only works for TrustedUserCAKeys, and requires the full path. This is just a note that the two configuration settings don't behave the same way. I have no issue using full paths as a best practice if necessary. The primary issue I'm raising here regarding domain credentials used for ssh auth.. Thanks for the response. Signing with dwatley@contoso in the principal works. So the format definitely matters here, good to know. I also tried signing the cert with multiple principals comma separated, so dwatley, dwatley@contoso and that worked. So it seems there's some options here.\n\nUse the AuthorizedPrincipalsFile containing usernames that will match. Ultimately the domain user is authenticated as usual, and the principal listed in the cert is presumably checked against a list of principals in the file rather than the username@domain that authenticated. This works, I suppose with caveats in a multiple domain environment depending on the intended result?\nSign the user cert with more than one principal. This also works.\n\nMy earlier comment regarding checking the username separately was strictly regarding the principal in the cert as I understand the domain is necessary to tie it to the correct user on a domain joined computer. Thinking about it more, considering it's possible to attach multiple principals to a cert that's probably the correct thing to do for a single user cert intended to be used cross platform?. @bagajjal - Confirming the __PROGRAMDATA__ fix for AuthorizedPrincipalsFile. Works as expected.. @manojampalam / @NoMoreFood - Just re-iterating that the above all works with the TrustedUserCAKeys config option. Using the principals file, and/or signing with multiple principals. The format has changed to NetBios\\SamAccountName based on the referenced issue. Thanks for all the work!. Yes, the user is ultimately authenticated. The domain is reachable. It's just not until the NetUserGetInfo function fails.. @manojampalam - I'm able to reproduce this in PowerShell.\n```\nAdd-Type -TypeDefinition @\" \nusing System; \nusing System.Runtime.InteropServices;\npublic static class Netapi32 \n{ \n    [DllImport(\"Netapi32.dll\", CharSet=CharSet.Unicode)] \n      public extern static int NetUserGetInfo(\n        [MarshalAs(UnmanagedType.LPWStr)] string ServerName,\n        [MarshalAs(UnmanagedType.LPWStr)] string UserName, \n        int level, \n        out IntPtr BufPtr);\n} \n\"@\n$OutBuffPtr = [IntPtr]::Zero\nParameters passed as currently coded and as debugging shows.\n[Netapi32]::NetUserGetInfo(\"contoso\", \"dwatley\", 23, [ref]$OutBuffPtr) # Error 1722 returned\nLocal system and sshd user passed\n[Netapi32]::NetUserGetInfo($env:COMPUTERNAME, \"sshd\", 23, [ref]$OutBuffPtr) # Error 0 returned \nInstead of NetBIOS domain name, pass fqdn of domain controller.\n[Netapi32]::NetUserGetInfo(\"dc-1.ad.corp.contoso.com\", \"dwatley\", 23, [ref]$OutBuffPtr) # Error 0 returned\n```\nPassing the domain in NetBIOS form into the server parameter is causing the delay.. Using the format dwatley@ad.corp.contoso.com has the expected effect, no significant delay beyond the time it takes to lookup the user in Active Directory. Also tested that with the above PowerShell code and get a 0 message as well with the expected user data returned, so it works.\nI think the implementation as currently written depends on NetBIOS resolution of the domain, which won't always be available depending on the environment. Resolving the DC by default first as you suggest should resolve that and seems sensible. Hopefully the AD team agrees.. @manojampalam the latest release (v7.6.0.0p1-Beta) broke FQDN logins. Logged in with dwatley@ad.corp.contoso.com, FQDN is stripped at some point and the netbios login is used.\n7360 2018-03-01 13:55:43.299 debug3: mm_answer_keyallowed: key is allowed\n7360 2018-03-01 13:55:43.299 debug3: mm_request_send entering: type 23\n7360 2018-03-01 13:55:43.299 debug3: mm_sshkey_verify entering [preauth]\n7360 2018-03-01 13:55:43.299 debug3: mm_request_send entering: type 24 [preauth]\n7360 2018-03-01 13:55:43.299 debug3: mm_sshkey_verify: waiting for MONITOR_ANS_KEYVERIFY [preauth]\n7360 2018-03-01 13:55:43.299 debug3: mm_request_receive_expect entering: type 25 [preauth]\n7360 2018-03-01 13:55:43.299 debug3: mm_request_receive entering [preauth]\n7360 2018-03-01 13:55:43.299 debug3: mm_request_receive entering\n7360 2018-03-01 13:55:43.299 debug3: monitor_read: checking request 24\n7360 2018-03-01 13:55:43.301 debug3: mm_answer_keyverify: publickey 000001F66389F7F0 signature verified\n7360 2018-03-01 13:55:43.301 debug3: mm_request_send entering: type 25\n7360 2018-03-01 13:55:43.301 debug1: monitor_child_preauth: dwatley@ad.corp.contoso.com has been authenticated by privileged process\n7360 2018-03-01 13:55:43.301 debug3: mm_get_keystate: Waiting for new keys\n7360 2018-03-01 13:55:43.301 debug3: mm_request_receive_expect entering: type 26\n7360 2018-03-01 13:55:43.302 debug3: mm_request_receive entering\n7360 2018-03-01 13:55:43.302 debug3: mm_get_keystate: GOT new keys\n7360 2018-03-01 13:55:43.302 debug2: userauth_pubkey: authenticated 1 pkalg ecdsa-sha2-nistp256-cert-v01@openssh.com [preauth]\n7360 2018-03-01 13:55:43.302 debug3: send packet: type 52 [preauth]\n7360 2018-03-01 13:55:43.302 debug3: mm_request_send entering: type 26 [preauth]\n7360 2018-03-01 13:55:43.302 debug3: mm_send_keystate: Finished sending state [preauth]\n7360 2018-03-01 13:55:43.303 debug1: monitor_read_log: child log fd closed\n7360 2018-03-01 13:55:43.432 debug3: LsaLogonUser succeeded\n7360 2018-03-01 13:55:43.461 debug3: spawning \"C:\\\\Program Files\\\\OpenSSH\\\\sshd.exe\" \"-z\"\n7360 2018-03-01 13:55:43.496 debug3: send_rexec_state: entering fd = 5 config len 532\n7360 2018-03-01 13:55:43.496 debug3: ssh_msg_send: type 0\n7360 2018-03-01 13:55:43.496 debug3: send_rexec_state: done\n7360 2018-03-01 13:55:43.496 debug3: ssh_msg_send: type 0\n7360 2018-03-01 13:55:43.496 debug3: ssh_msg_send: type 0\n7360 2018-03-01 13:55:43.496 debug3: ssh_msg_send: type 0\n17268 2018-03-01 13:55:43.517 debug3: ssh_msg_recv entering\n17268 2018-03-01 13:55:43.518 debug2: fd 4 setting O_NONBLOCK\n17268 2018-03-01 13:55:43.518 debug2: parse_server_config: config reprocess config len 532\n17268 2018-03-01 13:56:05.590 debug3: NetUserGetInfo() failed with error: 1722 for user: dwatley and domain: contoso \\n\n17268 2018-03-01 13:56:05.714 debug3: NetUserGetInfo() with domainController: \\\\\\\\DC-1 failed with error: 1722 \\n. @manojampalam Any eta on a potential fix? Domain auth is effectively broken in the latest release.. @manojampalam / @NoMoreFood - Based on the last change, identities resolve as quickly as expected now using several types of logins.. @bagajjal @joeyaiello - As I understand it from the recent 1803 blog post that a portion of this SSH suite is being enabled by default. Enabling by default seems to imply \"production ready\" and will be a fully supported operating system feature. What are the implications for signing (in the OS build, and GitHub releases)?. I see it's been committed and released. Would be handy if issues are referenced in PRs more generally.. @manojampalam - Is this still on track for next release, and is the next release still targeted for this week? I haven't seen a PR come through yet.. Ah I missed it since the issue or change wasn't referenced in the commit notes. Thanks for the update, looking forward to testing.. Confirming the latest release fixed this for me.. I did, which wasn't working. Copying the folder from the zip directly to $openssh-portable\\contrib\\win32\\openssh as you noted and I'm able to build directly from VS now.\nLog of failure from running the cmdlet here.\n```\nPS C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0> Start-OpenSSHBuild -Configuration Release -NativeHostArch x64\nAdd-Content : Could not find a part of the path\n'C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\contrib\\win32\\openssh\\OpenSSHReleasex64.log'.\nAt C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\OpenSSHBuildHelper.psm1:24 char:9\n+         Add-Content -Path $script:BuildLogFile -Value $Message\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\dwatle...HReleasex64.log:String) [Add-Content], DirectoryNotFo\n   undException\n    + FullyQualifiedErrorId : GetContentWriterDirectoryNotFoundError,Microsoft.PowerShell.Commands.AddContentCommand\nAdd-Content : Could not find a part of the path\n'C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\contrib\\win32\\openssh\\OpenSSHReleasex64.log'.\nAt C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\OpenSSHBuildHelper.psm1:24 char:9\n+         Add-Content -Path $script:BuildLogFile -Value $Message\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\dwatle...HReleasex64.log:String) [Add-Content], DirectoryNotFo\n   undException\n    + FullyQualifiedErrorId : GetContentWriterDirectoryNotFoundError,Microsoft.PowerShell.Commands.AddContentCommand\nout-file : Could not find a part of the path\n'C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\contrib\\win32\\openssh\\OpenSSHReleasex64.log'.\nAt C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\OpenSSHBuildHelper.psm1:165 char:9\n+         Invoke-Expression ((new-object net.webclient).DownloadString( ...\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OpenError: (:) [Out-File], DirectoryNotFoundException\n    + FullyQualifiedErrorId : FileOpenFailure,Microsoft.PowerShell.Commands.OutFileCommand\nException calling \"SetEnvironmentVariable\" with \"3\" argument(s): \"Requested registry access is not allowed.\"\nAt C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\OpenSSHBuildHelper.psm1:204 char:9\n+         [Environment]::SetEnvironmentVariable('Path', $newMachineEnvi ...\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\n    + FullyQualifiedErrorId : SecurityException\nAdd-Content : Could not find a part of the path\n'C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\contrib\\win32\\openssh\\OpenSSHReleasex64.log'.\nAt C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\OpenSSHBuildHelper.psm1:24 char:9\n+         Add-Content -Path $script:BuildLogFile -Value $Message\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (C:\\Users\\dwatle...HReleasex64.log:String) [Add-Content], DirectoryNotFo\n   undException\n    + FullyQualifiedErrorId : GetContentWriterDirectoryNotFoundError,Microsoft.PowerShell.Commands.AddContentCommand\nDownload, Copy LibreSSL\nLibreSSL copied successfully\nStarting Open SSH build; Build Log: C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\contrib\\win32\\openssh\\OpenSSHReleasex64.log.\nMSBUILD : error MSB1009: Project file does not exist.\nSwitch: C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\contrib\\win32\\openssh\\Win32-OpenSSH.sln\nWrite-BuildMsg : Build failed for OpenSSH.\nExitCode: .\nAt C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0\\contrib\\win32\\openssh\\OpenSSHBuildHelper.psm1:576 char:9\n+         Write-BuildMsg -AsError -ErrorAction Stop -Message \"Build fai ...\n+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Write-BuildMsg\nPS C:\\Users\\dwatley\\src\\openssh-portable-7.6.1.0>\n``. Well the fact thatcontrib\\win32is in the path twice seems off, which might be the source of the issue. Elevation doesn't really make sense because it's within the user profile in the user context.. I actually have no \".git\" folder (hidden or otherwise) anywhere in that path. Is it possible the logic is blowing up a bit because I did not clone the repo (thus no git in the path), but downloaded the source [zip](https://github.com/PowerShell/openssh-portable/archive/v7.6.1.0.zip) from the releases page?. I was able to build, but I believe I had to futz around with things beyond the instructions. I'll confirm from scratch.. @bingbing8 - The instructions work from scratch for me now. Also noting I used VS2017.. I believe this \"beta\" ship has sailed now that OpenSSH is enabled by default and shipped with the operating system.. I realize @bagajjal had some input on this, but maybe we're waiting on Joey's response here. I think there's some nuance to \"supported\" and \"beta\" considering from what I can tell tagged builds here are actually shipped eventually presumably without additional code changes (1803?). The cadence of that is not exactly clear. A more thorough position on this topic would certainly be appreciated. . @joeyaiello: No, no requirements on that front. I think the support position is relatively clear. Shipped with Windows is supported, GitHub is not. To my understanding, and I imagine your doc will cover this, is that \"supported\" implies Microsoft's support agreements. I just take some issue with calling something \"beta\" and explicitly marked \"unsuitable for production use\" when the binaries are identical to what ships (and is used in production) to be somewhat misleading and potentially confusing. As @kartiklunkad26 mentioned:Is there something distinctly unstable with the newer versions?`\nTangentially, I would like to point out something I've seen work well re: comms. VSCode roadmapping and development happens in the open, and there's a very clear understanding on what's prioritized and what's not. When releases can be expected, etc. I believe it would be helpful, as a consumer and contributor, to have better insight (more formalized?) into the overall lifecycle and development of OpenSSH for Windows. It would help with managing expectations.. Ping.... @bagajjal - As noted by @Jookia in the issue, this seems very much related to https://github.com/PowerShell/Win32-OpenSSH/issues/938. Depending on the SSH client, the console is managed unless -T is passed to disable pseudo-tty allocation.. Yeah it was a more recent commit. I rolled back to my commit at https://github.com/PowerShell/openssh-portable/commit/936b89ac0d645aae059bcb7e376e14bc276d852a, rebuilt and things are working again.\nIterated through the latest commits building/testing until it breaks. The breaking commit is the latest commit: https://github.com/PowerShell/openssh-portable/commit/236b04b335997e96e424b82ed0dcc707931da9cb\n. @manojampalam Happy to help. I patched in your PR and it works for me.. @manojampalam - eta on next release?. @manojampalam - Happy to test.. @manojampalam - Cleaned up the existing entries and built from master. Works as expected, no issues here.. Noting this effectively blocks us from upgrading.. @bagajjal - With the above binary I don't seem to have an issue with the rendering in this scenario anymore. Each command has the expected output which is rendered correctly. But, window resizing causes the screen to go blank until I start typing. The previous window contents disappear entirely.. @bagajjal - Thanks for the update. Does it perhaps warrant a 7.7.2.1 release? .1 being the minor patch? Not incrementing the version might cause confusion.. New release works for me as expected. Already voiced my concerns re: version change.. Try using domain\\user for the principal. See this pull request. https://github.com/PowerShell/openssh-portable/pull/286. ",
    "1oglop1": "Okay it turned out that ssh stores known_hosts in UTF-8, but powershell redirect uses UCS-2 LE BOM\n. ",
    "ayalu": "C:\\Program Files\\OpenSSH>sshd -d\n./sshd_config line 100: Deprecated option UsePrivilegeSeparation\ndebug1: sshd version OpenSSH_7.6, LibreSSL 2.5.3\ndebug1: private host key #0: ssh-rsa SHA256:Hj2rOnXOqORPEp7R3CmCQqgLswyPb9PGBH7JkGoHwCU\ndebug1: private host key #1: ssh-dss SHA256:bA64dnhgl7UPJ4rjVmpBLUNEjQbDrBt4mo4XTIBNWW8\ndebug1: private host key #2: ecdsa-sha2-nistp256 SHA256:W5NKNP0UIBLx9fWE/2HGtZblws2KY9D+mpgpsNxSJVo\ndebug1: private host key #3: ssh-ed25519 SHA256:TlhVMya37fwMBud/wwddOaEoZqumAglF5J7MtJSgr+k\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug1: Server will not fork when running in debugging mode.\nConnection from 192.168.1.25 port 33160 on 192.168.1.34 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_7.4p1 Debia\nn-10\ndebug1: match: OpenSSH_7.4p1 Debian-10 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_7.6\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp25\n6,ssh-ed25519\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit\n\ncompression: none\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug3: send packet: type 30\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug3: receive packet: type 31\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:W5NKNP0UIBLx9fWE/2HGtZblws2KY9D+mpgpsNxSJVo\ndebug3: hostkeys_foreach: reading file \"/root/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file /root/.ssh/known_hosts:4\ndebug3: load_hostkeys: loaded 1 keys from 192.168.1.34\ndebug1: Host '192.168.1.34' is known and matches the ECDSA host key.\ndebug1: Found key in /root/.ssh/known_hosts:4\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug2: key: /root/.ssh/id_rsa ((nil))\ndebug2: key: /root/.ssh/id_dsa ((nil))\ndebug2: key: /root/.ssh/id_ecdsa ((nil))\ndebug2: key: /root/.ssh/id_ed25519 ((nil))\ndebug3: send packet: type 5\ndebug3: receive packet: type 7\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=\ndebug3: receive packet: type 6\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred gssapi-keyex,gssapi-with-mic,publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: /root/.ssh/id_rsa\ndebug3: no such identity: /root/.ssh/id_rsa: No such file or directory\ndebug1: Trying private key: /root/.ssh/id_dsa\ndebug3: no such identity: /root/.ssh/id_dsa: No such file or directory\ndebug1: Trying private key: /root/.ssh/id_ecdsa\ndebug3: no such identity: /root/.ssh/id_ecdsa: No such file or directory\ndebug1: Trying private key: /root/.ssh/id_ed25519\ndebug3: no such identity: /root/.ssh/id_ed25519: No such file or directory\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive\ndebug3: remaining preferred: password\ndebug3: authmethod_is_enabled keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug2: userauth_kbdint\ndebug3: send packet: type 50\ndebug2: we sent a keyboard-interactive packet, wait for reply\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: userauth_kbdint: disable: no info_req_seen\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup password\ndebug3: remaining preferred: \ndebug3: authmethod_is_enabled password\ndebug1: Next authentication method: password\ndebug3: send packet: type 50\ndebug2: we sent a password packet, wait for reply\ndebug3: receive packet: type 52\ndebug1: Authentication succeeded (password).\nAuthenticated to 192.168.1.34 ([192.168.1.34]:22).\ndebug1: Remote connections from LOCALHOST:444 forwarded to local address 127.0.0.1:444\ndebug3: send packet: type 80\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug3: send packet: type 90\ndebug1: Requesting no-more-sessions@openssh.com\ndebug3: send packet: type 80\ndebug1: Entering interactive session.\ndebug1: pledge: network\ndebug3: receive packet: type 80\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\ndebug3: receive packet: type 4\ndebug1: Remote: Server has disabled port forwarding.\ndebug3: receive packet: type 82\ndebug1: remote forward failure for: listen 444, connect 127.0.0.1:444\nWarning: remote port forwarding failed for listen port 444\ndebug1: All remote forwarding requests processed\ndebug3: receive packet: type 91\ndebug2: callback start\ndebug2: fd 4 setting TCP_NODELAY\ndebug3: ssh_packet_set_tos: set IP_TOS 0x10\ndebug2: client_session2_setup: id 0\ndebug2: channel 0: request pty-req confirm 1\ndebug3: send packet: type 98\ndebug1: Sending environment.\ndebug3: Ignored env LS_COLORS\ndebug3: Ignored env XDG_MENU_PREFIX\ndebug1: Sending env LANG = en_US.UTF-8\ndebug2: channel 0: request env confirm 0\ndebug3: send packet: type 98\ndebug3: Ignored env GDM_LANG\ndebug3: Ignored env DISPLAY\ndebug3: Ignored env COLORTERM\ndebug3: Ignored env USERNAME\ndebug3: Ignored env XDG_VTNR\ndebug3: Ignored env SSH_AUTH_SOCK\ndebug3: Ignored env XDG_SESSION_ID\ndebug3: Ignored env USER\ndebug3: Ignored env DESKTOP_SESSION\ndebug3: Ignored env QT_QPA_PLATFORMTHEME\ndebug3: Ignored env PWD\ndebug3: Ignored env HOME\ndebug3: Ignored env JOURNAL_STREAM\ndebug3: Ignored env SSH_AGENT_PID\ndebug3: Ignored env QT_ACCESSIBILITY\ndebug3: Ignored env XDG_SESSION_TYPE\ndebug3: Ignored env XDG_DATA_DIRS\ndebug3: Ignored env XDG_SESSION_DESKTOP\ndebug3: Ignored env GTK_MODULES\ndebug3: Ignored env WINDOWPATH\ndebug3: Ignored env TERM\ndebug3: Ignored env SHELL\ndebug3: Ignored env VTE_VERSION\ndebug3: Ignored env XDG_CURRENT_DESKTOP\ndebug3: Ignored env GPG_AGENT_INFO\ndebug3: Ignored env QT_LINUX_ACCESSIBILITY_ALWAYS_ON\ndebug3: Ignored env SHLVL\ndebug3: Ignored env XDG_SEAT\ndebug3: Ignored env PYTHONPATH\ndebug3: Ignored env WINDOWID\ndebug3: Ignored env GDMSESSION\ndebug3: Ignored env GNOME_DESKTOP_SESSION_ID\ndebug3: Ignored env LOGNAME\ndebug3: Ignored env DBUS_SESSION_BUS_ADDRESS\ndebug3: Ignored env XDG_RUNTIME_DIR\ndebug3: Ignored env XAUTHORITY\ndebug3: Ignored env PATH\ndebug3: Ignored env SESSION_MANAGER\ndebug3: Ignored env _\ndebug2: channel 0: request shell confirm 1\ndebug3: send packet: type 98\ndebug2: callback done\ndebug2: channel 0: open confirm rwindow 0 rmax 32768\ndebug3: receive packet: type 99\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: PTY allocation request accepted on channel 0\ndebug2: channel 0: rcvd adjust 2097152\ndebug3: receive packet: type 99\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: shell request accepted on channel 0\ndebug3: receive packet: type 96\ndebug2: channel 0: rcvd eof\ndebug2: channel 0: output open -> drain\ndebug2: channel 0: obuf empty\ndebug2: channel 0: close_write\ndebug2: channel 0: output drain -> closed\ndebug3: receive packet: type 98\ndebug1: client_input_channel_req: channel 0 rtype exit-status reply 0\ndebug3: receive packet: type 98\ndebug1: client_input_channel_req: channel 0 rtype eow@openssh.com reply 0\ndebug2: channel 0: rcvd eow\ndebug2: channel 0: close_read\ndebug2: channel 0: input open -> closed\ndebug3: receive packet: type 97\ndebug2: channel 0: rcvd close\ndebug3: channel 0: will not send data after close\ndebug2: channel 0: almost dead\ndebug2: channel 0: gc: notify user\ndebug2: channel 0: gc: user detached\ndebug2: channel 0: send close\ndebug3: send packet: type 97\ndebug2: channel 0: is dead\ndebug2: channel 0: garbage collecting\ndebug1: channel 0: free: client-session, nchannels 1\ndebug3: channel 0: status: The following connections are open:\n  #0 client-session (t4 r0 i3/0 o3/0 fd -1/-1 cc -1)\n\ndebug3: send packet: type 1\nTransferred: sent 2528, received 3824 bytes, in 3.7 seconds\nBytes per second: sent 680.0, received 1028.6\ndebug1: Exit status 0\n. 2 different VM.  I tried with different ports and same issue.\nHere is sshd_config\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nGatewayPorts yes. OK here is the answer :\nhttps://unix.stackexchange.com/questions/41451/how-can-i-set-up-a-remote-port-forward-on-port-80-to-my-localhost-with-the-help\nOnly root can foward privileged ports.\nThank you for you support and great product !!\n. ",
    "DaburLal": "Now i am able to run scp and sftp but when i try running sshd i get the following error \n'sshd.exe' (Win32): Loaded 'C:\\Users\\w21821\\Desktop\\openssh-portable-latestw_all\\bin\\x64\\Debug\\sshd.exe'. Symbols loaded.\n'sshd.exe' (Win32): Loaded 'C:\\Windows\\System32\\ntdll.dll'. Cannot find or open the PDB file.\n'sshd.exe' (Win32): Loaded 'C:\\Windows\\System32\\kernel32.dll'. Cannot find or open the PDB file.\n'sshd.exe' (Win32): Loaded 'C:\\Windows\\System32\\KernelBase.dll'. Cannot find or open the PDB file.\n'sshd.exe' (Win32): Loaded 'C:\\Users\\w21821\\Desktop\\openssh-portable-latestw_all\\contrib\\win32\\openssh\\LibreSSLSDK\\x64\\libcrypto.dll'. Symbols loaded.\n'sshd.exe' (Win32): Loaded 'C:\\Program Files\\PowerShell\\6.0.0-beta.9\\api-ms-win-core-localization-l1-2-1.dll'. Cannot find or open the PDB file.\nException thrown at 0x0000000076FE8078 (ntdll.dll) in sshd.exe: 0xC0000139: Entry Point Not Found.\nThe program '[6016] sshd.exe' has exited with code -1073741511 (0xc0000139) 'Entry Point Not Found'.. Still the same error occurring!. Could you kindly give me a detailed explanation for the same ?? Thanks in advance.. Once i run sshd , and then give ssh - l command on the same system, i still get the same error\n. Now i am able to access port 22.\nSince there were sshd and ssh-agent somehow occupying the port i uninstalled the complete OpenSSH using  powershell.exe -ExecutionPolicy Bypass -File uninstall-sshd.ps1\nAnd then sshd and ssh-agent were removed from the process list automatically.\n. The simplest form assumes that your username on your local machine is the same as that on the remote server. If this is true, you can connect using:\nssh remote_host\nIf your username is different on the remoter server, you need to pass the remote user's name like this:\nssh username@remote_host\nhttps://www.digitalocean.com/community/tutorials/ssh-essentials-working-with-ssh-servers-clients-and-keys. Hello, From where did you download previous version?? Thanks !!. @bingbing8 , i am running it on Windows 7 and the file you mentioned is also present.. @Cambridgeport90 , Because every time i use ssh, it says host name or service cannot be resolved or unknown. That is why i am using PuTTY.\nAlso , since i downloaded openssh using universal installer, ssh_config file is missing . @Cambridgeport90 , I was able to establish tunnel using ssh. ",
    "Victir812": "Already found the solution: \nKey based Authetication works again after running FixHostFilePermissions.ps1 and FixUserFilePermissions.ps1\nHowever for some reason it took the option -ExecutionPolicy ByPass to run the script correctly\npowershell -ExecutionPolicy ByPass -File C:\\Program Files\\OpenSSH-Win64\\FixHostFilePermissions.ps1\npowershell -ExecutionPolicy ByPass -File C:\\Program Files\\OpenSSH-Win64\\FixUserFilePermissions.ps1. ",
    "tvsuhail": "I tried, but receiving error while executing install script for service start and user creation.  And when running ssh-keygen, receiving not a valid win32 application. . ",
    "n3roGit": "I have a hunch what it could be. apparently only a local copy of the user is used when using a key, which has no access to the AD.\nIf you additionally authenticate yourself in the console, you can retrieve the ad stuff.\n$pass=\"YourPassword\"|ConvertTo-SecureString -AsPlainText -Force\n$Cred = New-Object   System.Management.Automation.PsCredential('Username@Domain',$pass)\nGet-ADUser TestUser -Credential $cred\n. ",
    "Lyova5": "Ouch! Sorry, i thought that cmd is executed already.. ",
    "jeff-zohrab": "Thank you @manojampalam, I appreciate your time!\nOdd -- I re-ran it and everything seemed fine.  Perhaps I broke something as I was going through it initially.  fyi on a new AWS instance with choco install openssh -params '\"/SSHServerFeature\"' -y, I got the following:\n```\nssh-agent running as Local System\nsshd running as NT Service/SSHD\ntask manager:\nsshd.exe is running as User name = 'sshd'\nsshd-agent.exe  is running as User name = 'SYSTEM'\n```\nThank you, I think this must be user error!  I'm getting a different error now though for Windows in AWS: when I try to ssh with user \"ci-automation\" as follows:\n$ ssh -i ci-automation ci-automation@<my_id> -v\nI get the following log.  I'm not sure why AWS Windows is attaching the hostname to the user:\n1936 18:00:36:312 debug1: trying public key file C:\\\\Users\\\\ci-automation.EC2AMAZ-7DFKC4H\\\\.ssh/authorized_keys\n1936 18:00:36:312 debug1: Could not open authorized keys 'C:\\\\Users\\\\ci-automation.EC2AMAZ-7DFKC4H\\\\.ssh/authorized_keys': No such file or directory\nI have the auth keys at \"c:/users/ci-automation/.ssh/authorized_keys\" and not at the above location.. Closing this issue as the username ci-automation.EC2AMAZ-7DFKC4H (with AWS hostname appended) is a different issue from the original.  Thank you @manojampalam , regards.. ",
    "miguel7penteado": "Appears that:\n1-The name of sshd service account \"username\" must be \"NT SERVICE\\SSHD\", case-sensitive or\n2-The sshd service account username (choosed manually by sysadmin) must be member of builtin \"administrator\" group.\n3-The sshd service account username CANNOT BE  \"NT Authority\\Local Service\" or \"NT Authority\\Network service\".\nIf that conditions is respected, ssh-agent works.\nPS: Appears that Microsoft developers make C code like if was BASIC. Check that they \nuse a lot of \"goto\" and not polite identation way. ok. The code is working.. ",
    "mmiat": "PS C:\\OpenSSH> .\\FixHostFilePermissions.ps1\n  [*] C:\\OpenSSH\\sshd_config\n      looks good\n[*] C:\\OpenSSH\\ssh_host_dsa_key\n      looks good\n[*] C:\\OpenSSH\\ssh_host_dsa_key.pub\n      looks good\n[*] C:\\OpenSSH\\ssh_host_ecdsa_key\n      looks good\n[*] C:\\OpenSSH\\ssh_host_ecdsa_key.pub\n      looks good\n[*] C:\\OpenSSH\\ssh_host_ed25519_key\n      looks good\n[*] C:\\OpenSSH\\ssh_host_ed25519_key.pub\n      looks good\n[*] C:\\OpenSSH\\ssh_host_rsa_key\n      looks good\n[*] C:\\OpenSSH\\ssh_host_rsa_key.pub\n      looks good\n[*] C:\\Users\\root.ssh\\authorized_keys\n      looks good\nDone.\nPS C:\\OpenSSH> net start sshd\nErrore di sistema 5.\nAccesso negato.. solved\nchanged owner of the service with root (local administrator i've create) instead of sshd\ngive root accesso to secpol.msc > local policies > User Rights Assignment > Replace a process level token. this workaround works no more\nand version 7.9 doesnt let me connect. i removed 7.9, installed 0.24\ncleaned all, restored file permissions\nservice agent installed as system  service sshd as root\nit works. ",
    "SwooshyCueb": "As far as I can tell, this registry key isn't mentioned anywhere in the documentation: https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_overview. ",
    "leotxcosta": "If I start the process via command line it works. But in this case the process runs under my user.. In Win Server 2012 R2 I didn't have this problem.. Thanks guys! Testing with the previous version it worked!. You can find it here: https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v0.0.22.0. @bingbing8 in fact sspicli.dll is not present in our server. I'm going to try running it in a Win 2012 R2 server to check if it works.. Testing in Win Server 2012 R2 it worked successfully!. @bingbing8 no problem. As it worked in Win 2012 server, We decided to install it in our Win 2012 server. But thanks a lot for your help anyway.. ",
    "chanducrr": "Even I have the same issue. Is there some config that we can set to accept network username/pwd login?. when I run sshd.exe SSH connection works fine. But I could see a command prompt being opened on the server machine for each putty session. Is it expected?. @manojampalam  I tried reinstalling but basic authentication doesn't work . Here is the DEBUG3 log \nWindows PowerShell\nCopyright (C) 2015 Microsoft Corporation. All rights reserved.\nPS C:\\Windows\\system32> cd 'C:\\Program Files\\OpenSSH'\nPS C:\\Program Files\\OpenSSH> ls\nDirectory: C:\\Program Files\\OpenSSH\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----       11/15/2017  10:22 PM                logs\n-a----       10/17/2017   9:10 PM           2273 FixHostFilePermissions.ps1\n-a----       10/17/2017   9:10 PM            606 FixUserFilePermissions.ps1\n-a----       10/17/2017   9:10 PM          11019 install-sshd.ps1\n-a----       10/17/2017   9:10 PM        1462907 libcrypto-41.dll\n-a----       10/17/2017   9:10 PM           1053 OpenSSHUtils.psd1\n-a----       10/17/2017   9:10 PM          27831 OpenSSHUtils.psm1\n-a----       10/17/2017   9:10 PM         329728 scp.exe\n-a----       10/17/2017   9:10 PM         346624 sftp-server.exe\n-a----       10/17/2017   9:10 PM         397824 sftp.exe\n-a----       10/17/2017   9:10 PM         528384 ssh-add.exe\n-a----       10/17/2017   9:10 PM         620032 ssh-agent.exe\n-a----       10/17/2017   9:10 PM         652288 ssh-keygen.exe\n-a----       10/17/2017   9:10 PM         584704 ssh-keyscan.exe\n-a----       10/17/2017   9:10 PM         148992 ssh-shellhost.exe\n-a----       10/17/2017   9:10 PM         880128 ssh.exe\n-a----       10/17/2017   9:10 PM         930304 sshd.exe\n-a----       11/21/2017  11:20 PM           3561 sshd_config\n-a----       11/15/2017  10:28 PM            668 ssh_host_dsa_key\n-a----       11/15/2017  10:28 PM            621 ssh_host_dsa_key.pub\n-a----       11/15/2017  10:28 PM            227 ssh_host_ecdsa_key\n-a----       11/15/2017  10:28 PM            193 ssh_host_ecdsa_key.pub\n-a----       11/15/2017  10:28 PM            432 ssh_host_ed25519_key\n-a----       11/15/2017  10:28 PM            113 ssh_host_ed25519_key.pub\n-a----       11/15/2017  10:28 PM           1679 ssh_host_rsa_key\n-a----       11/15/2017  10:28 PM            413 ssh_host_rsa_key.pub\n-a----       10/17/2017   9:10 PM            562 uninstall-sshd.ps1\nPS C:\\Program Files\\OpenSSH> .\\install-sshd.ps1\n[SC] SetServiceObjectSecurity SUCCESS\n[SC] ChangeServiceConfig SUCCESS\n[SC] ChangeServiceConfig2 SUCCESS\nsshd and ssh-agent services successfully installed\nPS C:\\Program Files\\OpenSSH> notepad.exe .\\sshd_config\nPS C:\\Program Files\\OpenSSH> cd .\\logs\nPS C:\\Program Files\\OpenSSH\\logs> tail -f .\\sshd.log\n89072 01:37:23:161 debug1: private host key #3: ssh-ed25519 SHA256:D9gn4/bc9CzEX7ks09ULCi8LJ8VBXgFz7xwhFDjW3q4\n89072 01:37:23:161 debug2: fd 3 setting O_NONBLOCK\n89072 01:37:23:161 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n89072 01:37:23:161 debug1: Bind to port 22 on ::.\n89072 01:37:23:161 Server listening on :: port 22.\n89072 01:37:23:161 debug2: fd 4 setting O_NONBLOCK\n89072 01:37:23:161 debug1: Bind to port 22 on 0.0.0.0.\n89072 01:37:23:161 Server listening on 0.0.0.0 port 22.\n89072 01:37:23:161 debug3: Failed to open file:./sshd.pid error:13\n89072 01:37:23:161 error: Couldn't create pid file \"./sshd.pid\": Permission denied\n89072 01:37:54:420 debug3: fd 5 is not O_NONBLOCK\n89072 01:37:54:420 debug3: spawning \"C:\\Program Files\\OpenSSH\\sshd.exe\"\n89072 01:37:54:420 debug1: Forked child 88700.\n88700 01:37:54:452 debug1: sshd version OpenSSH_7.6, LibreSSL 2.5.3\n88700 01:37:54:452 debug1: private host key #0: ssh-rsa SHA256:ex0t/cqY4gRUqts/tslynM76eM3FWGce4tMZp659I1Q\n88700 01:37:54:467 debug1: private host key #1: ssh-dss SHA256:NyA+nn6y+zEmShaSGos0Dk+P+cXkmA+Sa0h/TgPeUlQ\n88700 01:37:54:467 debug1: private host key #2: ecdsa-sha2-nistp256 SHA256:tBwclE61tJsWikJeMj5+p+y8Yni6ncq49KkGqwmupUg\n88700 01:37:54:467 debug1: private host key #3: ssh-ed25519 SHA256:D9gn4/bc9CzEX7ks09ULCi8LJ8VBXgFz7xwhFDjW3q4\n88700 01:37:54:467 debug3: Failed to open file:./sshd.pid error:13\n88700 01:37:54:467 error: Couldn't create pid file \"./sshd.pid\": Permission denied\n88700 01:37:54:467 debug1: child socket: 348\n88700 01:37:54:467 debug1: child startup_pipe: 352\n88700 01:37:54:467 Connection from 12.34.56.78 port 51970 on 10.211.125.202 port 22\n88700 01:37:54:467 debug1: Client protocol version 2.0; client software version PuTTY_Release_0.67\n88700 01:37:54:467 debug1: no match: PuTTY_Release_0.67\n88700 01:37:54:467 debug1: Local version string SSH-2.0-OpenSSH_7.6\n88700 01:37:54:467 debug2: fd 3 setting O_NONBLOCK\n88700 01:37:54:467 debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms\n88700 01:37:54:467 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n88700 01:37:54:467 debug3: send packet: type 20\n88700 01:37:54:467 debug1: SSH2_MSG_KEXINIT sent\n88700 01:37:54:530 debug3: receive packet: type 20\n88700 01:37:54:530 debug1: SSH2_MSG_KEXINIT received\n88700 01:37:54:530 debug2: local server KEXINIT proposal\n88700 01:37:54:530 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-n\nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha\n512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\n88700 01:37:54:530 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\n88700 01:37:54:530 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n88700 01:37:54:530 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\n88700 01:37:54:530 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hma\nc-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-51\n2,hmac-sha1\n88700 01:37:54:530 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hma\nc-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-51\n2,hmac-sha1\n88700 01:37:54:530 debug2: compression ctos: none\n88700 01:37:54:530 debug2: compression stoc: none\n88700 01:37:54:530 debug2: languages ctos:\n88700 01:37:54:530 debug2: languages stoc:\n88700 01:37:54:530 debug2: first_kex_follows 0\n88700 01:37:54:530 debug2: reserved 0\n88700 01:37:54:530 debug2: peer client KEXINIT proposal\n88700 01:37:54:530 debug2: KEX algorithms: diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffi\ne-hellman-group14-sha1,diffie-hellman-group1-sha1,rsa2048-sha256,rsa1024-sha1\n88700 01:37:54:530 debug2: host key algorithms: ssh-rsa,ssh-dss\n88700 01:37:54:530 debug2: ciphers ctos: aes256-ctr,aes256-cbc,rijndael-cbc@lysator.liu.se,aes192-ctr,aes192-cbc,aes128-\nctr,aes128-cbc,blowfish-ctr,blowfish-cbc,3des-ctr,3des-cbc,arcfour256,arcfour128\n88700 01:37:54:530 debug2: ciphers stoc: aes256-ctr,aes256-cbc,rijndael-cbc@lysator.liu.se,aes192-ctr,aes192-cbc,aes128-\nctr,aes128-cbc,blowfish-ctr,blowfish-cbc,3des-ctr,3des-cbc,arcfour256,arcfour128\n88700 01:37:54:530 debug2: MACs ctos: hmac-sha2-256,hmac-sha1,hmac-sha1-96,hmac-md5\n88700 01:37:54:530 debug2: MACs stoc: hmac-sha2-256,hmac-sha1,hmac-sha1-96,hmac-md5\n88700 01:37:54:530 debug2: compression ctos: none,zlib\n88700 01:37:54:530 debug2: compression stoc: none,zlib\n88700 01:37:54:530 debug2: languages ctos:\n88700 01:37:54:530 debug2: languages stoc:\n88700 01:37:54:530 debug2: first_kex_follows 0\n88700 01:37:54:530 debug2: reserved 0\n88700 01:37:54:530 debug1: kex: algorithm: diffie-hellman-group-exchange-sha256\n88700 01:37:54:530 debug1: kex: host key algorithm: ssh-rsa\n88700 01:37:54:530 debug1: kex: client->server cipher: aes256-ctr MAC: hmac-sha2-256 compression: none\n88700 01:37:54:530 debug1: kex: server->client cipher: aes256-ctr MAC: hmac-sha2-256 compression: none\n88700 01:37:54:530 debug1: expecting SSH2_MSG_KEX_DH_GEX_REQUEST\n88700 01:37:54:577 debug3: receive packet: type 34\n88700 01:37:54:577 debug1: SSH2_MSG_KEX_DH_GEX_REQUEST received\n88700 01:37:54:577 debug3: Failed to open file:./moduli error:2\n88700 01:37:54:577 WARNING: could not open ./moduli (No such file or directory), using fixed modulus\n88700 01:37:54:577 debug3: dh_new_group_fallback: requested max size 8192\n88700 01:37:54:577 debug3: using 8k bit group 18\n88700 01:37:54:577 debug1: SSH2_MSG_KEX_DH_GEX_GROUP sent\n88700 01:37:54:577 debug3: send packet: type 31\n88700 01:37:54:655 debug2: bits set: 4008/8192\n88700 01:37:54:655 debug1: expecting SSH2_MSG_KEX_DH_GEX_INIT\n88700 01:37:55:205 debug3: receive packet: type 32\n88700 01:37:55:205 debug2: bits set: 4018/8192\n88700 01:37:55:283 debug3: send packet: type 33\n88700 01:37:55:283 debug3: send packet: type 21\n88700 01:37:55:283 debug2: set_newkeys: mode 1\n88700 01:37:55:283 debug1: rekey after 4294967296 blocks\n88700 01:37:55:283 debug1: SSH2_MSG_NEWKEYS sent\n88700 01:37:55:283 debug1: expecting SSH2_MSG_NEWKEYS\n88700 01:37:55:814 debug3: receive packet: type 21\n88700 01:37:55:814 debug1: SSH2_MSG_NEWKEYS received\n88700 01:37:55:814 debug2: set_newkeys: mode 0\n88700 01:37:55:814 debug1: rekey after 4294967296 blocks\n88700 01:37:55:814 debug1: KEX done\n88700 01:37:55:830 debug3: receive packet: type 5\n88700 01:37:55:830 debug3: send packet: type 6\n88700 01:38:07:995 debug3: receive packet: type 50\n88700 01:38:07:995 debug1: userauth-request for user XYZORG\\adminuser service ssh-connection method none\n88700 01:38:07:995 debug1: attempt 0 failures 0\n88700 01:38:07:995 debug2: parse_server_config: config reprocess config len 272\n88700 01:38:10:276 debug3: NetUserGetInfo() failed with error: 1722 for user: adminuser and domain: XYZORG \\n\n88700 01:38:10:308 debug3: NetUserGetInfo() with domainController: \\\\SW730XYZORGDC004 failed with error: 5 \\n\n88700 01:38:10:308 Invalid user XYZORG\\adminuser from 12.34.56.78 port 51970\n88700 01:38:10:308 debug2: input_userauth_request: try method none\n88700 01:38:10:308 Failed none for invalid user XYZORG\\adminuser from 12.34.56.78 port 51970 ssh2\n88700 01:38:10:308 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n88700 01:38:10:308 debug3: send packet: type 51\n88700 01:38:10:401 debug3: receive packet: type 50\n88700 01:38:10:401 debug1: userauth-request for user XYZORG\\adminuser service ssh-connection method keyboard-interactiv\ne\n88700 01:38:10:401 debug1: attempt 1 failures 0\n88700 01:38:10:401 debug2: input_userauth_request: try method keyboard-interactive\n88700 01:38:10:401 debug1: keyboard-interactive devs\n88700 01:38:10:401 debug1: auth2_challenge: user=XYZORG\\adminuser devs=\n88700 01:38:10:401 debug1: kbdint_alloc: devices ''\n88700 01:38:10:401 debug2: auth2_challenge_start: devices\n88700 01:38:10:401 Failed keyboard-interactive for invalid user XYZORG\\adminuser from 12.34.56.78 port 51970 ssh2\n88700 01:38:10:401 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n88700 01:38:10:401 debug3: send packet: type 51\n88700 01:38:25:369 debug3: receive packet: type 50\n88700 01:38:25:369 debug1: userauth-request for user XYZORG\\adminuser service ssh-connection method password\n88700 01:38:25:369 debug1: attempt 2 failures 1\n88700 01:38:25:369 debug2: input_userauth_request: try method password\n88700 01:38:25:588 debug1: failed to logon user: NOUSER domain: (null) error:1326\n88700 01:38:25:588 Failed password for invalid user XYZORG\\adminuser from 12.34.56.78 port 51970 ssh2\n88700 01:38:25:588 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n88700 01:38:25:588 debug3: send packet: type 51\n88700 01:38:25:588 debug3: receive packet: type 2\n88700 01:38:25:588 debug3: Received SSH2_MSG_IGNORE\n88700 01:38:41:441 debug3: receive packet: type 50\n88700 01:38:41:441 debug1: userauth-request for user XYZORG\\adminuser service ssh-connection method password\n88700 01:38:41:441 debug1: attempt 3 failures 2\n88700 01:38:41:441 debug2: input_userauth_request: try method password\n88700 01:38:41:675 debug1: failed to logon user: NOUSER domain: (null) error:1326\n88700 01:38:41:675 Failed password for invalid user XYZORG\\adminuser from 12.34.56.78 port 51970 ssh2\n88700 01:38:41:675 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n88700 01:38:41:675 debug3: send packet: type 51\n88700 01:38:41:675 debug3: receive packet: type 2\n88700 01:38:41:675 debug3: Received SSH2_MSG_IGNORE\n88700 01:38:49:147 debug3: receive packet: type 50\n88700 01:38:49:147 debug1: userauth-request for user XYZORG\\adminuser service ssh-connection method password\n88700 01:38:49:147 debug1: attempt 4 failures 3\n88700 01:38:49:147 debug2: input_userauth_request: try method password\n88700 01:38:49:350 debug1: failed to logon user: NOUSER domain: (null) error:1326\n88700 01:38:49:350 Failed password for invalid user XYZORG\\adminuser from 12.34.56.78 port 51970 ssh2\n88700 01:38:49:350 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n88700 01:38:49:350 debug3: send packet: type 51\n88700 01:38:49:350 debug3: receive packet: type 2\n88700 01:38:49:350 debug3: Received SSH2_MSG_IGNORE\n.  @bagajjal @manojampalam @bingbing8  We are trying this on Windows Server 2012 R2. @bagajjal @manojampalam @bingbing8  \nHere is the success case log when run sshd\nPS C:\\Program Files\\OpenSSH> .\\sshd.exe -ddd\ndebug2: load_server_config: filename ./sshd_config\ndebug2: load_server_config: done config len = 272\ndebug2: parse_server_config: config ./sshd_config len 272\ndebug3: ./sshd_config:35 setting LogLevel DEBUG3\ndebug3: ./sshd_config:50 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: ./sshd_config:63 setting PasswordAuthentication yes\ndebug3: ./sshd_config:115 setting Subsystem sftp        sftp-server.exe\ndebug3: ./sshd_config:123 setting hostkeyagent \\\\.\\pipe\\openssh-ssh-agent\ndebug1: sshd version OpenSSH_7.6, LibreSSL 2.5.3\ndebug3: unable to connect to pipe \\\\.\\pipe\\openssh-ssh-agent, error: 2\nCould not connect to agent \"\\\\.\\pipe\\openssh-ssh-agent\": No such file or directory\ndebug1: private host key #0: ssh-rsa SHA256:ex0t/cqY4gRUqts/tslynM76eM3FWGce4tMZp659I1Q\ndebug1: private host key #1: ssh-dss SHA256:NyA+nn6y+zEmShaSGos0Dk+P+cXkmA+Sa0h/TgPeUlQ\ndebug1: private host key #2: ecdsa-sha2-nistp256 SHA256:tBwclE61tJsWikJeMj5+p+y8Yni6ncq49KkGqwmupUg\ndebug1: private host key #3: ssh-ed25519 SHA256:D9gn4/bc9CzEX7ks09ULCi8LJ8VBXgFz7xwhFDjW3q4\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug3: fd 5 is not O_NONBLOCK\ndebug1: Server will not fork when running in debugging mode.\nConnection from 12.34.56.78 port 52184 on 10.211.125.202 port 22\ndebug1: Client protocol version 2.0; client software version PuTTY_Release_0.67\ndebug1: no match: PuTTY_Release_0.67\ndebug1: Local version string SSH-2.0-OpenSSH_7.6\ndebug2: fd 5 setting O_NONBLOCK\ndebug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-n\nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-\ngroup14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@open\nssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@open\nssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer client KEXINIT proposal\ndebug2: KEX algorithms: diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-s\nha1,diffie-hellman-group1-sha1,rsa2048-sha256,rsa1024-sha1\ndebug2: host key algorithms: ssh-rsa,ssh-dss\ndebug2: ciphers ctos: aes256-ctr,aes256-cbc,rijndael-cbc@lysator.liu.se,aes192-ctr,aes192-cbc,aes128-ctr,aes128-cbc,blow\nfish-ctr,blowfish-cbc,3des-ctr,3des-cbc,arcfour256,arcfour128\ndebug2: ciphers stoc: aes256-ctr,aes256-cbc,rijndael-cbc@lysator.liu.se,aes192-ctr,aes192-cbc,aes128-ctr,aes128-cbc,blow\nfish-ctr,blowfish-cbc,3des-ctr,3des-cbc,arcfour256,arcfour128\ndebug2: MACs ctos: hmac-sha2-256,hmac-sha1,hmac-sha1-96,hmac-md5\ndebug2: MACs stoc: hmac-sha2-256,hmac-sha1,hmac-sha1-96,hmac-md5\ndebug2: compression ctos: none,zlib\ndebug2: compression stoc: none,zlib\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: diffie-hellman-group-exchange-sha256\ndebug1: kex: host key algorithm: ssh-rsa\ndebug1: kex: client->server cipher: aes256-ctr MAC: hmac-sha2-256 compression: none\ndebug1: kex: server->client cipher: aes256-ctr MAC: hmac-sha2-256 compression: none\ndebug1: expecting SSH2_MSG_KEX_DH_GEX_REQUEST\ndebug3: receive packet: type 34\ndebug1: SSH2_MSG_KEX_DH_GEX_REQUEST received\ndebug3: Failed to open file:./moduli error:2\nWARNING: could not open ./moduli (No such file or directory), using fixed modulus\ndebug3: dh_new_group_fallback: requested max size 8192\ndebug3: using 8k bit group 18\ndebug1: SSH2_MSG_KEX_DH_GEX_GROUP sent\ndebug3: send packet: type 31\ndebug2: bits set: 4216/8192\ndebug1: expecting SSH2_MSG_KEX_DH_GEX_INIT\ndebug3: receive packet: type 32\ndebug2: bits set: 4051/8192\ndebug3: send packet: type 33\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 4294967296 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 4294967296 blocks\ndebug1: KEX done\ndebug3: receive packet: type 5\ndebug3: send packet: type 6\ndebug3: receive packet: type 50\ndebug1: userauth-request for user XYZORG\\adminuser service ssh-connection method none\ndebug1: attempt 0 failures 0\ndebug2: parse_server_config: config reprocess config len 272\ndebug3: NetUserGetInfo() failed with error: 1722 for user: adminuser and domain: XYZORG\ndebug2: input_userauth_request: setting up authctxt for XYZORG\\adminuser\ndebug2: input_userauth_request: try method none\nFailed none for XYZORG\\adminuser from 12.34.56.78 port 52184 ssh2\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\ndebug3: send packet: type 51\ndebug3: receive packet: type 50\ndebug1: userauth-request for user XYZORG\\adminuser service ssh-connection method keyboard-interactive\ndebug1: attempt 1 failures 0\ndebug2: input_userauth_request: try method keyboard-interactive\ndebug1: keyboard-interactive devs\ndebug1: auth2_challenge: user=XYZORG\\adminuser devs=\ndebug1: kbdint_alloc: devices ''\ndebug2: auth2_challenge_start: devices\nFailed keyboard-interactive for XYZORG\\adminuser from 12.34.56.78 port 52184 ssh2\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\ndebug3: send packet: type 51\ndebug3: receive packet: type 50\ndebug1: userauth-request for user XYZORG\\adminuser service ssh-connection method password\ndebug1: attempt 2 failures 1\ndebug2: input_userauth_request: try method password\nAccepted password for XYZORG\\adminuser from 12.34.56.78 port 52184 ssh2\ndebug3: send packet: type 52\ndebug3: notify_hostkeys: key 0: ssh-rsa SHA256:ex0t/cqY4gRUqts/tslynM76eM3FWGce4tMZp659I1Q\ndebug3: notify_hostkeys: key 1: ssh-dss SHA256:NyA+nn6y+zEmShaSGos0Dk+P+cXkmA+Sa0h/TgPeUlQ\ndebug3: notify_hostkeys: key 2: ecdsa-sha2-nistp256 SHA256:tBwclE61tJsWikJeMj5+p+y8Yni6ncq49KkGqwmupUg\ndebug3: notify_hostkeys: key 3: ssh-ed25519 SHA256:D9gn4/bc9CzEX7ks09ULCi8LJ8VBXgFz7xwhFDjW3q4\ndebug3: notify_hostkeys: sent 4 hostkeys\ndebug3: send packet: type 80\ndebug1: Entering interactive session for SSH2.\ndebug2: fd 3 setting O_NONBLOCK\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: server_init_dispatch\ndebug3: receive packet: type 2\ndebug3: Received SSH2_MSG_IGNORE\ndebug3: receive packet: type 90\ndebug1: server_input_channel_open: ctype session rchan 256 win 16384 max 16384\ndebug1: input_session_request\ndebug1: channel 0: new [server-session]\ndebug2: session_new: allocate (allocated 0 max 10)\ndebug3: session_unused: session id 0 unused\ndebug1: session_new: session 0\ndebug1: session_open: channel 0\ndebug1: session_open: session 0: link with channel 0\ndebug1: server_input_channel_open: confirm session\ndebug3: send packet: type 91\ndebug3: receive packet: type 98\ndebug1: server_input_channel_req: channel 0 request pty-req reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req pty-req\ndebug1: Allocating pty.\ndebug1: session_pty_req: session 0 alloc console\ndebug1: Ignoring unsupported tty mode opcode 3 (0x3)\ndebug3: send packet: type 99\ndebug3: receive packet: type 98\ndebug1: server_input_channel_req: channel 0 request shell reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req shell\nStarting session: shell on console for adminuser@XYZORG from 12.34.56.78 port 52184 id 0\ndebug2: fd 6 setting O_NONBLOCK\ndebug2: fd 7 setting O_NONBLOCK\ndebug2: fd 8 setting O_NONBLOCK\ndebug2: fd 9 setting O_NONBLOCK\ndebug2: fd 10 setting O_NONBLOCK\ndebug2: fd 11 setting O_NONBLOCK\ndebug3: unable to connect to pipe \\\\.\\pipe\\openssh-ssh-agent, error: 2\ndebug1: get_priv_agent_sock: unable to connect to privileged agent, errno:2\ndebug1: Executing command: C:\\Program Files\\OpenSSH\\ssh-shellhost.exe\ndebug2: fd 5 setting TCP_NODELAY\ndebug2: channel 0: rfd 8 isatty\ndebug3: fd 8 is O_NONBLOCK\ndebug3: fd 7 is O_NONBLOCK\ndebug3: fd 10 is O_NONBLOCK\ndebug3: send packet: type 99\ndebug2: channel 0: read 0 from efd 10\ndebug2: channel 0: closing read-efd 10\ndebug2: notify_done: reading\ndebug1: Received SIGCHLD.\ndebug1: session_by_pid: pid 89532\ndebug1: session_exit_message: session 0 channel 0 pid 89532\ndebug2: channel 0: request exit-status confirm 0\ndebug3: send packet: type 98\ndebug1: session_exit_message: release channel 0\ndebug2: channel 0: write failed\ndebug2: channel 0: close_write\ndebug2: channel 0: send eow\ndebug2: channel 0: output open -> closed\ndebug1: session_pty_cleanup: session 0 release console\ndebug3: NetUserGetInfo() failed with error: 1722 for user: adminuser and domain: XYZORG\ndebug2: channel 0: read<=0 rfd 8 len 0\ndebug2: channel 0: read failed\ndebug2: channel 0: close_read\ndebug2: channel 0: input open -> drain\ndebug2: channel 0: ibuf empty\ndebug2: channel 0: send eof\ndebug3: send packet: type 96\ndebug2: channel 0: input drain -> closed\ndebug2: channel 0: send close\ndebug3: send packet: type 97\ndebug3: channel 0: will not send data after close\ndebug3: receive packet: type 96\ndebug2: channel 0: rcvd eof\ndebug3: channel 0: will not send data after close\ndebug3: receive packet: type 97\ndebug2: channel 0: rcvd close\ndebug3: channel 0: will not send data after close\ndebug2: channel 0: is dead\ndebug2: channel 0: gc: notify user\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_close_by_channel: channel 0 child 0\nClose session: user adminuser@XYZORG from 12.34.56.78 port 52184 id 0\ndebug3: session_unused: session id 0 unused\ndebug2: channel 0: gc: user detached\ndebug2: channel 0: is dead\ndebug2: channel 0: garbage collecting\ndebug1: channel 0: free: server-session, nchannels 1\ndebug3: channel 0: status: The following connections are open:\n  #0 server-session (t4 r256 i3/0 o3/0 fd -1/-1 cc -1)\nConnection closed by 12.34.56.78 port 52184\ndebug1: do_cleanup\nTransferred: sent 23984, received 2616 bytes\nClosing connection to 12.34.56.78 port 52184\nPS C:\\Program Files\\OpenSSH>. @jborean93 @manojampalam @bagajjal @bingbing8   I couldn't make it work windows server 2012 R2. Do you have any updates from the logs I've shared?. \nMay be it is related to this error?\n88700 01:38:10:276 debug3: NetUserGetInfo() failed with error: 1722 for user: adminuser and domain: XYZORG \\n\n88700 01:38:10:308 debug3: NetUserGetInfo() with domainController: \\SW730XYZORGDC004 failed with error: 5 \\n. ",
    "pavelkomarov": "Why does it matter that the DISPLAY environment variable is set? That shouldn't lead to something asking for a password any differently than it would otherwise!\nI am experiencing the same trouble with X11 forwarding described here, but I can't leverage their solution of setting the DISPLAY on the client side, because OpenSSH then throws these complaints about permissions being strangely denied.. Yeah, but it's a work-around. The bug remains.. I don't think @llinyu made a mistake. I'm trying to get X forwarding working (long story) with the same setup described here, but it keeps failing with \"ssh_askpass: posix_spawn: No such file or directory\".\nssh-askpass.exe isn't a thing in your release, and it's unclear to me where ssh_askpass might live. It can be an environment variable, but why should I have to set it and what to? Clearly the code should never try to call something that doesn't exist, or it's looking for it in the wrong place. It's strange, because when my DISPLAY environment variable isn't set ssh asks for my password the normal way, and it's fine. Why shouldn't it always get my password that way? This remains a bug.. I am having a similar problem. I'm on a Windows 10 client trying to reach a Red Hat server. Using Putty with Xming on the client side, I can get X11 forwarding to work. I can even open an SSH connection through OpenSSH, manually set DISPLAY for that other session to be whatever Putty set it as, and open graphical programs from cmd. But using OpenSSH alone, DISPLAY never gets set in the ssh session, and if I close Putty, things start complaining they can't open the display. Is OpenSSH just broken? I feel like -X should work seamlessly like in linux.. ",
    "Error-101": "I agree with @pavelkomarov as well. Why should the display variable matter?. ",
    "lonelykid": "\nWhy does it matter that the DISPLAY environment variable is set? That shouldn't lead to something asking for a password any differently than it would otherwise!\nI am experiencing the same trouble with X11 forwarding described here, but I can't leverage their solution of setting the DISPLAY on the client side, because OpenSSH then throws these complaints about permissions being strangely denied.\n\nWish you found a solution.\nThe posix_spawn related error seems related to cmd, when I use powershell, the error is gone. but x forwarding still doesn't work.. Sorry. I didn't find there's already issues related to this.\nAs a summary, one easy workaround is \ncd /&&mkdir dev&&touch tty\nas described in\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/966\nAnother workaround is to\necho \"@ECHO OFF\nSET PATH=%WINDIR%\\System32;%WINDIR%\\System32\\WindowsPowerShell\\v1.0\nPOWERSHELL -NoLogo -ExecutionPolicy Unrestricted -NoProfile -Command \"(Get-Credential -UserName 'Enter Password Only' -Message 'Enter SSH Password').GetNetworkCredential().Password\" 2>NUL\nEXIT /B 0\" > ssh_askpass.cmd\nand set $env:SSH_ASKPASS to point to ssh_askpass.cmd\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1041\nI don't understand why this is not fixed yet.\nBTW, this version of ssh is also slower than the mobaxterm which seems also based on openssh. ",
    "forester-guo-gmail-com": "@christian-korneck 's solution worked.\nIn my Windows 10 cmd terminal, DISPLAY=:0.0, scp failed with: \"\nCreateProcessW failed error:2\nssh_askpass: posix_spawn: No such file or directory\nHost key verification failed.\nlost connection\"\nI removed the env variable by \"set DISPLAY=\". Then scp copied files successfully.. ",
    "LTRData": "This is an interesting bug. It happens because when DISPLAY is defined and there is no accessible tty (console, terminal, etc), it wants to fallback to requesting password by some external application call. Now, the problem is that the check for an available console is done by opening /dev/tty. This works perfectly well on *nix platforms, but on Windows the corresponding thing should really be to open CON or CONIN$ instead.\nAs a workaround it seems that it is possible to create a directory C:\\dev with an empty file called tty, so that the path \\dev\\tty can be opened. Just tested that and it seems to work.\nI'll try to build a version with CON instead of /dev/tty for Windows builds and see what happens.\n. Yes. At line 457 in define.h, changed:\n#ifndef _PATH_TTY\n# define _PATH_TTY \"/dev/tty\"\n#endif\nto\n#ifndef _PATH_TTY\n# ifdef _WIN32\n#  define _PATH_TTY \"conin$\"\n# else\n#  define _PATH_TTY \"/dev/tty\"\n# endif\n#endif\nAnd everything seems to work correctly even with DISPLAY variable set now. It even sets up X11 forwarding correctly as far as I can see (provided XauthLocation is set to a working xauth setup in ssh_config).\n. ",
    "filips123": "@LTRData So this is now fixed? When it will be available in Windows?. ",
    "surendrasake": "like this Junk and escape sequences are coming and output is wrapping up in logfile.\n                    \u001b[4;53H\n\n\u001b[5;1H                           \u001b[5;53H\n\u001b[6;1H                            \u001b[6;53H\n\u001b[7;1H                            \u001b[7;53H\u001b[7;53Hpowershell Set-ExecutionPoli\u001b[7;54Howershell Set-ExecutionPoli\u001b[7;55Hwershell Set-ExecutionPoli\u001b[7;56Hershell Set-ExecutionPoli\u001b[7;57Hrshell Set-ExecutionPoli\u001b[7;58Hshell Set-ExecutionPoli\u001b[7;59Hhell Set-ExecutionPoli\u001b[7;60Hell Set-ExecutionPoli\u001b[7;61Hll Set-ExecutionPoli\u001b[7;62Hl Set-ExecutionPoli\u001b[7;63H Set-ExecutionPoli\u001b[7;64HSet-ExecutionPoli\u001b[7;65Het-ExecutionPoli\u001b[7;66Ht-ExecutionPoli\u001b[7;67H-ExecutionPoli\u001b[7;68HExecutionPoli\u001b[7;69HxecutionPoli\u001b[7;70HecutionPoli\u001b[7;71HcutionPoli\u001b[7;72HutionPoli\u001b[7;73HtionPoli\u001b[7;74HionPoli\u001b[7;75HonPoli\u001b[7;76HnPoli\u001b[7;77HPoli\u001b[7;78Holi\u001b[7;79Hli\u001b[7;80Hi\n\u001b[8;1H                                                        \u001b[8;2Hy Unrestricted -Force                                                          \u001b[8;3H Unrestricted -Force                                                          \u001b[8;4HUnrestricted -Force                                                          \u001b[8;5Hnrestricted -Force                                                          \u001b[8;6Hrestricted -Force                                                          \u001b[8;7Hestricted -Force                                                          \u001b[8;8Hstricted -Force                                                          \u001b[8;9Htricted -Force                                                          \u001b[8;10Hricted -Force                                                          \u001b[8;11Hicted -Force                                                          \u001b[8;12Hcted -Force                                                          \u001b[8;13Hted -Force                                                          \u001b[8;14Hed -Force                                                          \u001b[8;15Hd -Force                                                          \u001b[8;16H -Force                                                          \u001b[8;17H-Force                                                          \u001b[8;18HForce                                                          \u001b[8;19Horce                                                          \u001b[8;20Hrce                                                          \u001b[8;21Hce                                                          \u001b[8;22He                                                        \n\u001b[9;1H\n\u001b[10;1H                           \u001b[10;53H\n\u001b[11;1Hadministrator@CONFIG3BAY1DEV C:\\Users\\Administrator>                            \u001b[11;53H\u001b[11;53Hpowershell Get-ExecutionPoli\u001b[11;54Howershell Get-ExecutionPoli\u001b[11;55Hwershell Get-ExecutionPoli\u001b[11;56Hershell Get-ExecutionPoli\u001b[11;57Hrshell Get-ExecutionPoli\u001b[11;58Hshell Get-ExecutionPoli\u001b[11;59Hhell Get-ExecutionPoli\u001b[11;60Hell Get-ExecutionPoli\u001b[11;61Hll Get-ExecutionPoli\u001b[11;62Hl Get-ExecutionPoli\u001b[11;63H Get-ExecutionPoli\u001b[11;64HGet-ExecutionPoli\u001b[11;65Het-ExecutionPoli\u001b[11;66Ht-ExecutionPoli\u001b[11;67H-ExecutionPoli\u001b[11;68HExecutionPoli\u001b[11;69HxecutionPoli\u001b[11;70HecutionPoli\u001b[11;71HcutionPoli\u001b[11;72HutionPoli\u001b[11;73HtionPoli\u001b[11;74HionPoli\u001b[11;75HonPoli\u001b[11;76HnPoli\u001b[11;77HPoli\u001b[11;78Holi\u001b[11;79Hli\u001b[11;80Hi\n\u001b[12;1Hcy                                                                              \u001b[12;2Hy                                                                            \n\u001b[13;1H\u001b[13;1HUnrestricted                                                                    . ",
    "drichardson": "I have the same problem with RSA and ed25519 keys that have passphrases on them. It seems that the beta version only supports keys without passphrases.. I installed OpenSSH Client (Beta) from Apps & features > Manage optional features on Window 10. I assumed this github project is the source for that, but perhaps I'm mistaken.\n```\nPS> Get-Command ssh\nCommandType     Name                                               Version    Source\n-----------     ----                                               -------    ------\nApplication     ssh.exe                                            0.0.18.0   C:\\WINDOWS\\System32\\OpenSSH\\ssh.exe\nPS> C:\\WINDOWS\\System32\\OpenSSH\\ssh.exe -V\nOpenSSH_7.5p1, without OpenSSL\n```. ",
    "DrPizza": "It's failing to work with either my RSA key or my ed25519 key.\n```\nC:\\Users\\DrPizza.ssh>dir\n Volume in drive C has no label.\n Volume Serial Number is 200D-0382\nDirectory of C:\\Users\\DrPizza.ssh\n14/12/2017  12:00              .\n14/12/2017  12:00              ..\n14/12/2017  12:01               420 id_ed25519\n14/12/2017  12:00             3,239 id_rsa\n14/12/2017  11:33               126 known_hosts\n               3 File(s)          3,785 bytes\n               2 Dir(s)  2,573,890,686,976 bytes free\nC:\\Users\\DrPizza.ssh>ssh -v user@lunix.quiscalusmexicanus.org\nOpenSSH_7.5p1, without OpenSSL\ndebug1: Connecting to lunix.quiscalusmexicanus.org [137.135.108.74] port 22.\ndebug1: Connection established.\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\DrPizza/.ssh/id_rsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\DrPizza/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\DrPizza/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\DrPizza/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\DrPizza/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\DrPizza/.ssh/id_ed25519-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_7.5\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.2p2 Ubuntu-4ubuntu2.2\ndebug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu2.2 pat OpenSSH* compat 0x04000000\ndebug1: Authenticating to lunix.quiscalusmexicanus.org:22 as 'user'\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: algorithm: curve25519-sha256@libssh.org\ndebug1: kex: host key algorithm: ssh-ed25519\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ssh-ed25519 SHA256:58qRN+qo2e6TjHcYFfwy4F6+cl1ec4MCZoorWuuF+G0\ndebug1: Host 'lunix.quiscalusmexicanus.org' is known and matches the ED25519 host key.\ndebug1: Found key in C:\\Users\\DrPizza/.ssh/known_hosts:1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: rekey after 134217728 blocks\ndebug1: pubkey_prepare: ssh_fetch_identitylist: communication with agent failed\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: C:\\Users\\DrPizza/.ssh/id_rsa\nLoad key \"C:\\Users\\DrPizza/.ssh/id_rsa\": invalid format\ndebug1: Trying private key: C:\\Users\\DrPizza/.ssh/id_dsa\ndebug1: Trying private key: C:\\Users\\DrPizza/.ssh/id_ed25519\ndebug1: Authentications that can continue: publickey\ndebug1: No more authentication methods to try.\nuser@lunix.quiscalusmexicanus.org: Permission denied (publickey).\n```\nBoth keys (in putty format) work fine in PuTTY.. @bagajjal Yes, that's why I included the directory listing before the log. Why is the file not found? It's there, as the directory listing shows.\n. I'm not sure I can. It's now connecting without issue, using the ed25519 key. I haven't knowingly changed anything since yesterday, so I'm not sure what's making it work now.. ",
    "robertpeteuil": "@bagajjal - thanks for the clarification.   I'm guessing you saw my post via email notification? \nI deleted it almost immediately as I realized the key was sucesfully read earlier in the log.  . ",
    "Cambridgeport90": "Love this one? I can\u2019t believe it\u2019s coming together nicely. Thank God.\nFrom: Joey Aiello [mailto:notifications@github.com]\nSent: Friday, December 15, 2017 18:14\nTo: PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com\nCc: Subscribed subscribed@noreply.github.com\nSubject: Re: [PowerShell/Win32-OpenSSH] SSH Client fails to use existing id_rsa key (#973)\nGot the blog published: https://blogs.msdn.microsoft.com/powershell/2017/12/15/using-the-openssh-beta-in-windows-10-fall-creators-update-and-windows-server-1709/\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/973#issuecomment-352135095, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AOXGAMw5HQ87FBv9Pe_meU-9KZws_NTYks5tAv1IgaJpZM4QvFr6.\n. I\u2019ll run a test for you guys of this when I get home in a bit as well.\nFrom: Chris Hunt [mailto:notifications@github.com]\nSent: Friday, February 16, 2018 11:44 AM\nTo: PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com\nCc: Katherine M. Moss KMoss@WinterHillSolutions.com; Comment comment@noreply.github.com\nSubject: Re: [PowerShell/Win32-OpenSSH] SSH Client fails to use existing id_rsa key (#973)\nI'm not sure if this is related, but I cannot add any keys to ssh-agent.\nv1.0.0.0-Beta\nCould not add identity \"C:\\Users\\Chris.Hunt/.ssh/id_rsa\": communication with agent failed\nCould not add identity \"C:\\Users\\Chris.Hunt/.ssh/id_ed25519\": communication with agent failed\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  ssh-agent          ssh-agent\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/973#issuecomment-366289587, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AOXGADy8FdnKGhAturgQ-bc4wrKlIodCks5tVbBJgaJpZM4QvFr6.\n. Why would you use PuTTY when you have SSH right there to use? Just wondering \u2026\nFrom: NoMad [mailto:notifications@github.com]\nSent: Tuesday, December 05, 2017 10:05 AM\nTo: PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com\nCc: Subscribed subscribed@noreply.github.com\nSubject: [PowerShell/Win32-OpenSSH] VNC session not going through OpenSSH - PuTTY tunnel (#979)\nServer OperatingSystem\n`Windows 7 - sshd\nClient OperatingSystem\nWndows 7 - PuTTY\nWhat is failing\nVNC session not going through OpenSSH - PuTTY tunnel\nExpected output\nVNC session should go through the established tunnel\nI am trying to secure my VNC session using OpenSSH(ssshd) and Putty(client)(everything is on windows)\nFirst I establish a tunnel using putty and then log into my server PC using username and password\nSecond, I turn on my VNC client and server on the respective sides.\nThe problem i am facing is that my vnc session is not going through the tunnel.\n1 - Following is the command which i am using to establish the tunnel putty.exe -ssh w21821@10.31.128.23w21821@10.31.128.23 -L 5900:10.31.128.23:5900\n2 - Following is my SSHD_config file ,\n**\n$OpenBSD: sshd_config,v 1.84 2011/05/23 03:30:07 djm Exp $\nThis is the sshd server system-wide configuration file. See\nsshd_config(5) for more information.\nThis sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin\nThe strategy used for options in the default sshd_config shipped with\nOpenSSH is to specify options with their default value where\npossible, but leave them commented. Uncommented options override the\ndefault value.\nPort 22\nAddressFamily any\nListenAddress 0.0.0.0\nListenAddress ::\nThe default requires explicit activation of protocol 1\nProtocol 2\nHostKey for protocol version 1\nHostKey /etc/ssh/ssh_host_key\nHostKeys for protocol version 2\nHostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_dsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\nLifetime and size of ephemeral version 1 server key\nKeyRegenerationInterval 1h\nServerKeyBits 1024\nLogging\nobsoletes QuietMode and FascistLogging\nSyslogFacility AUTH\nLogLevel DEBUG3\nAuthentication:\nLoginGraceTime 2m\nPermitRootLogin yes\nStrictModes no\nMaxAuthTries 6\nMaxSessions 10\nRSAAuthentication yes\nPubkeyAuthentication yes\nThe default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\nbut this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile .ssh/authorized_keys\nFor this to work you will also need host keys in /etc/ssh/ssh_known_hosts\nRhostsRSAAuthentication no\nsimilar for protocol version 2\nHostbasedAuthentication no\nChange to yes if you don't trust ~/.ssh/known_hosts for\nRhostsRSAAuthentication and HostbasedAuthentication\nIgnoreUserKnownHosts no\nDon't read the user's ~/.rhosts and ~/.shosts files\nIgnoreRhosts yes\nTo disable tunneled clear text passwords, change to no here!\nPasswordAuthentication yes\nPermitEmptyPasswords no\nChange to no to disable s/key passwords\nChallengeResponseAuthentication yes\nKerberos options\nKerberosAuthentication no\nKerberosOrLocalPasswd yes\nKerberosTicketCleanup yes\nKerberosGetAFSToken no\nGSSAPI options\nGSSAPIAuthentication no\nGSSAPICleanupCredentials yes\nSet this to 'yes' to enable PAM authentication, account processing,\nand session processing. If this is enabled, PAM authentication will\nbe allowed through the ChallengeResponseAuthentication and\nPasswordAuthentication. Depending on your PAM configuration,\nPAM authentication via ChallengeResponseAuthentication may bypass\nthe setting of \"PermitRootLogin without-password\".\nIf you just want the PAM account and session checks to run without\nPAM authentication, then enable this but set PasswordAuthentication\nand ChallengeResponseAuthentication to 'no'.\nUsePAM no\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nGatewayPorts no\nX11Forwarding yes\nX11DisplayOffset 10\nX11UseLocalhost yes\nPrintMotd no\nPrintLastLog yes\nTCPKeepAlive yes\nUseLogin no\nUsePrivilegeSeparation yes\nPermitUserEnvironment no\nCompression delayed\nClientAliveInterval 0\nClientAliveCountMax 3\nUseDNS yes\nPidFile /var/run/sshd.pid\nMaxStartups 10\nPermitTunnel yes\nChrootDirectory none\nno default banner path\nBanner none\noverride default of no subsystems\nSubsystem sftp sftp-server.exe\nExample of overriding settings on a per-user basis\nMatch User anoncvs\nX11Forwarding no\nAllowTcpForwarding no\nForceCommand cvs server\nPubkeyAcceptedKeyTypes ssh-ed25519*\nhostkeyagent .\\pipe\\openssh-ssh-agent\n**\nWhen I give this command ond on the client side, netstat -aon | find \":5900\" I get this\n[unbenannt]https://user-images.githubusercontent.com/32668117/33613845-f76e656e-d9d5-11e7-929f-5776675bc2f7.PNG\nIn this picture, first is the example of vnc session through the tunnel, whereas the others are not going through the tunnel.\nI got the 1st output only once, since then the same output appears again and again.\nCan someone guide me on this??\nThanks in advance!!\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/979, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AOXGAHqddOVsEFinNSQbebfVj_3VeLxmks5s9VuogaJpZM4Q2bzC.\n. I don\u2019t think it\u2019s the client.\nFrom: NoMad [mailto:notifications@github.com]\nSent: Tuesday, December 05, 2017 10:34 AM\nTo: PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com\nCc: Subscribed subscribed@noreply.github.com\nSubject: [PowerShell/Win32-OpenSSH] Bad tun device (#981)\nUsing ssh to establish a tunnel , it says bad tun device.\nHere is what is abtained after ssh -vvv w21821@10.31.128.23w21821@10.31.128.23\nPS C:\\Windows\\system32> ssh -vvv w21821@10.31.128.23w21821@10.31.128.23\nOpenSSH_7.6p1, LibreSSL 2.5.3\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/config error:2\ndebug3: Failed to open file:./ssh_config error:2\ndebug2: resolving \"10.31.128.23\" port 22\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to 10.31.128.23 [10.31.128.23] port 22.\ndebug1: Connection established.\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_rsa error:2\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_rsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\w21821/.ssh/id_rsa type -1\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_rsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_rsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\w21821/.ssh/id_rsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_dsa error:2\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_dsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\w21821/.ssh/id_dsa type -1\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_dsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_dsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\w21821/.ssh/id_dsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_ecdsa error:2\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_ecdsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\w21821/.ssh/id_ecdsa type -1\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_ecdsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_ecdsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\w21821/.ssh/id_ecdsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_ed25519 error:2\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_ed25519.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\w21821/.ssh/id_ed25519 type -1\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_ed25519-cert error:2\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/id_ed25519-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\w21821/.ssh/id_ed25519-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_7.6\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.6\ndebug1: match: OpenSSH_7.6 pat OpenSSH* compat 0x04000000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to 10.31.128.23:22 as 'w21821'\ndebug3: hostkeys_foreach: reading file \"C:\\Users\\w21821/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file C:\\Users\\w21821/.ssh/know\nn_hosts:1\ndebug3: load_hostkeys: loaded 1 keys from 10.31.128.23\ndebug3: Failed to open file:C:\\Users\\w21821/.ssh/known_hosts2 error:2\ndebug3: Failed to open file:./ssh_known_hosts error:2\ndebug3: Failed to open file:./ssh_known_hosts2 error:2\ndebug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@open\nssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.comecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@op\nenssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.orgcurve25519-sha256@libssh.org,ecdh-sha2\n-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sh\na256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-\ngroup-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ex\nt-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.comecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2\n-nistp384-cert-v01@openssh.com-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.comecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sh\na2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh\n.com,ssh-rsa-cert-v01@openssh.comssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug2: ciphers ctos: chacha20-poly1305@openssh.comchacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256\n-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.comchacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256\n-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.comumac-64-etm@openssh.com,umac-128-etm@openssh.comumac-128-etm@openssh.com,hmac-sha2-25\n6-etm@openssh.com6-etm@openssh.com,hmac-sha2-512-etm@openssh.comhmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.comhmac-sha1-etm@openssh.com,umac-6\n4@openssh.com4@openssh.com,umac-128@openssh.comumac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.comumac-64-etm@openssh.com,umac-128-etm@openssh.comumac-128-etm@openssh.com,hmac-sha2-25\n6-etm@openssh.com6-etm@openssh.com,hmac-sha2-512-etm@openssh.comhmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.comhmac-sha1-etm@openssh.com,umac-6\n4@openssh.com4@openssh.com,umac-128@openssh.comumac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.orgcurve25519-sha256@libssh.org,ecdh-sha2\n-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sh\na256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-\ngroup14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp2\n56,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.comchacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256\n-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.comchacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256\n-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.comumac-64-etm@openssh.com,umac-128-etm@openssh.comumac-128-etm@openssh.com,hmac-sha2-25\n6-etm@openssh.com6-etm@openssh.com,hmac-sha2-512-etm@openssh.comhmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.comhmac-sha1-etm@openssh.com,umac-6\n4@openssh.com4@openssh.com,umac-128@openssh.comumac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.comumac-64-etm@openssh.com,umac-128-etm@openssh.comumac-128-etm@openssh.com,hmac-sha2-25\n6-etm@openssh.com6-etm@openssh.com,hmac-sha2-512-etm@openssh.comhmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.comhmac-sha1-etm@openssh.com,umac-6\n4@openssh.com4@openssh.com,umac-128@openssh.comumac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.comchacha20-poly1305@openssh.com MAC: <implicit\ncompression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.comchacha20-poly1305@openssh.com MAC: \ndebug3: receive packet: type 6\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interacti\nve\ndebug3: start over, passed a different list publickey,password,keyboard-interact\nive\ndebug3: preferred publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering public key: RSA SHA256:H+JOH6I1uoKbl+4w8F4iZ9VoX+jR2cFwWH7kqfsm\nUHg id_rsa\ndebug3: send_pubkey_test\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interacti\nve\ndebug1: Offering public key: RSA SHA256:KSXthUnfaxVRlK2eXm0h175OFNXuGFlfkK/IAOp1\nD/I id_rsa\ndebug3: send_pubkey_test\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interacti\nve\ndebug1: Trying private key: C:\\Users\\w21821/.ssh/id_rsa\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\w21821/.ssh/id_rsa: No such file or directo\nry\ndebug1: Trying private key: C:\\Users\\w21821/.ssh/id_dsa\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\w21821/.ssh/id_dsa: No such file or directo\nry\ndebug1: Trying private key: C:\\Users\\w21821/.ssh/id_ecdsa\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\w21821/.ssh/id_ecdsa: No such file or direc\ntory\ndebug1: Trying private key: C:\\Users\\w21821/.ssh/id_ed25519\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\w21821/.ssh/id_ed25519: No such file or dir\nectory\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive\ndebug3: remaining preferred: password\ndebug3: authmethod_is_enabled keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug2: userauth_kbdint\ndebug3: send packet: type 50\ndebug2: we sent a keyboard-interactive packet, wait for reply\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interacti\nve\ndebug3: userauth_kbdint: disable: no info_req_seen\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup password\ndebug3: remaining preferred:\ndebug3: authmethod_is_enabled password\ndebug1: Next authentication method: password\ndebug3: failed to open file:/dev/tty error:3\ndebug1: read_passphrase: can't open /dev/tty: No such file or directory\nw21821@10.31.128.23'sw21821@10.31.128.23's password:\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/981, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AOXGAOswS9Shr2T8_DXbr8t34-l0e0QTks5s9WJ2gaJpZM4Q2ewe.\n. Thanks for the clarification; I was wondering that. Haven\u2019t yet enabled SSH on my servers, though I plan to use it soon in place of PSRemoting when possible.\nFrom: Bruinbrum [mailto:notifications@github.com]\nSent: Wednesday, January 17, 2018 8:41 AM\nTo: PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com\nCc: Subscribed subscribed@noreply.github.com\nSubject: [PowerShell/Win32-OpenSSH] Publickey authentication fails for domain accounts (#1022)\nFor domain accounts public key authentication fails even though keys match.\nThe workaround is to connect using the domain, e.g.\nssh \\@\nThis needs to be clarified in the documentation - or some workaround allowing the windows box to identify the domain.\nThis is with OpenSSH for Windows 0.0.24.0\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/1022, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AOXGAKCnXSPsmNbJovUtq4MlhPUB96gsks5tLfiCgaJpZM4RhW1u.\n. ",
    "massimonewsuk": "Is there any update on when RSA keys will be supported? So for example the standard ones that AWS generates for you.. ",
    "Suncatcher": "@bagajjal \n\nWindows inbox Beta version currently supports one key type (ed25519)\n\nCan one convert existing RSA key (generated by Ubuntu) to ed25519? Or it is required to generate ed25519 only in Windows?\n@manojampalam \n\nGitHub releases have full support for all key types. RSA keys are supported too.\n\nYou mean OpenSSH installed from this GIT repo and installed from Windows Settings are different?. Thx for info. Should I delete built-in Windows client prior to installing Git version?. > of the more comprehensive version released on GitHub\n@manojampalam, okay, I read this stuff and they say:\n\nWin32-OpenSSH will be deprecated once changes in PowerShell/openssh-portable are integrated back into openssh/openssh-portable\n\nSo I wanna ask, should I install the client from Win32-OpenSSH or better use openssh-portable? Do they differ in features?. So, if I got it right, ssh-agent is installed by default when installed via optional features, and not installed at all when installed from Github, isn't it?\nssh-agent is just a more secure way of key management?. While your conversation, guys, is pretty interesting, it is still lacks the answer to the main question: how to install client only?  I don't need the server.\n\nWhat is the universal installer?\n\nI don't know what is universal installer as well.. Thx, it worked. Sorry for my inattentiveness. \nCould you please shed some light on internals? On what are your script actually doing? According the the file list it downloaded I see it is faking chocolatey installation.\n\nOr just fetching the sources from chocolatey repo?\nI am asking this because I want to know should I update the installation once the sources are updated. And if yes, how?. If I understand your manual correctly, If I use the script without any keys, it installs server by default.\nAnd in the description of /SSHAgentFeature I see\n\nThis option is automatically set when /SSHServerFeature is used\n\nso I assume ssh-agent should be default installed if I used your script in a default manner (without keys). No?\nI cannot find ssh-agent service in my services so it seems it wasn't installed.. @DarwinJS , okay. So to install the agent (and not to mess the existing SSHD) I should re-run the script with /SSHAgentFeature key. Yes?. Well, as these params are hard-coded in your script (maybe it's worth to parametrize them like for Chocolatey via -params), I forked the script added the param like this\n.\".\\barebonesinstaller.ps1\" -SSHServerFeature -SSHAgentFeature\n\nand got it presumably  installed. \n\nYes, the agent exists in the folder, but it wasn't added to Windows services. I though installer should have been done this, no? Or I should make it myself like this?. > they are all intended to be in barebonesinstaller.ps1 - looks like SSHAgentFeature is not - will fix in the next release\nokay, and what about adding it to autostart? it is not handled by script (=should be done manually) or the script failed for some reason?. I tried to re-run the script but got \"Package source Chocolatey exists\" error\n\nWhat does it mean?\nI suppose it fails on this step (bolded)\n\nOpen a command line on the target (remoting for Nano) and run:\nInstall-PackageProvider NuGet -forcebootstrap -force\nRegister-PackageSource -name chocolatey -provider nuget -location http://chocolatey.org/api/v2/. > I hope it's not in poor taste\n\nIt's a very good taste! To make \"getting things done\" \u00a9 \ud83d\udc4d Any possible way, even with the diabolical help.\nWill report if I succeed with your module. @pldmgg, I imported the module and got this while installing\nUntrusted repository\nYou are installing the modules from an untrusted repository. If you trust this repository, change its\nInstallationPolicy value by running the Set-PSRepository cmdlet. Are you sure you want to install the modules from\n'PSGallery'?\n[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is \"N\"): y\nPlease wait...\nRefreshing $env:Path...\nErrors from the Refresh-ChocolateyEnv function are as follows:\nInstall-WinSSH : The Install-SSHAgentService function failed!\nAt line:1 char:1\n+ Install-WinSSH\n+ ~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-WinSSH\n\nErrors for the Install-SSHAgentService function are as follows:\nInstall-WinSSH : Get-Command : The term 'choco' is not recognized as the name of a cmdlet, function, script file, or\noperable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1742 char:17\n+     if ([bool]$(Get-Command choco -ErrorAction SilentlyContinue)) {\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (choco:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nGet-Command : The term 'ssh' is not recognized as the name of a cmdlet, function, script file, or operable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1914 char:19\n+ ...       if ($(Get-Command $FinalCommandName -ErrorAction SilentlyContin ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (ssh:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nGet-Command : The term 'ssh' is not recognized as the name of a cmdlet, function, script file, or operable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1920 char:26\n+ ... f (![bool]$(Get-Command $FinalCommandName -ErrorAction SilentlyContin ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (ssh:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nGet-Command : The term 'choco' is not recognized as the name of a cmdlet, function, script file, or operable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1417 char:18\n+     if (![bool]$(Get-Command choco -ErrorAction SilentlyContinue)) {\n+                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (choco:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nRefresh-ChocolateyEnv : Neither the Chocolatey PackageProvider nor the Chocolatey CmdLine appears to be installed!\nHalting!\nAt D:\\WinSSH.psm1:1924 char:29\n+ ...     $null = Refresh-ChocolateyEnv -ErrorAction SilentlyContinue -Erro ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Refresh-ChocolateyEnv\n\nThe Refresh-ChocolateyEnv function failed! Halting!\nAt D:\\WinSSH.psm1:1925 char:83\n+ ... t -eq \"1\") {throw \"The Refresh-ChocolateyEnv function failed! Halting ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OperationStopped: (The Refresh-Cho...ailed! Halting!:String) [], RuntimeException\n    + FullyQualifiedErrorId : The Refresh-ChocolateyEnv function failed! Halting!\n\nThe Refresh-ChocolateyEnv function failed! Halting!\nAt D:\\WinSSH.psm1:1925 char:83\n+ ... t -eq \"1\") {throw \"The Refresh-ChocolateyEnv function failed! Halting ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OperationStopped: (The Refresh-Cho...ailed! Halting!:String) [], RuntimeException\n    + FullyQualifiedErrorId : The Refresh-ChocolateyEnv function failed! Halting!\n\nInstall-Program : The Refresh-ChocolateyEnv function failed! Halting!\nAt D:\\WinSSH.psm1:3782 char:38\n+ ...   $OpenSSHInstallResults = Install-Program @InstallProgramSplatParams\n+                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-Program\n\nInstall-Program : Get-Command : The term 'choco' is not recognized as the name of a cmdlet, function, script file, or\noperable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1417 char:18\n+     if (![bool]$(Get-Command choco -ErrorAction SilentlyContinue)) {\n+                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (choco:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nRefresh-ChocolateyEnv : Neither the Chocolatey PackageProvider nor the Chocolatey CmdLine appears to be installed!\nHalting!\nAt D:\\WinSSH.psm1:1924 char:29\n+ ...     $null = Refresh-ChocolateyEnv -ErrorAction SilentlyContinue -Erro ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Refresh-ChocolateyEnv\n\nAt D:\\WinSSH.psm1:3782 char:38\n+ ...   $OpenSSHInstallResults = Install-Program @InstallProgramSplatParams\n+                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-Program\n\nInstall-SSHAgentService : The path C:\\Program Files\\OpenSSH-Win64 does not exist! Halting!\nAt D:\\WinSSH.psm1:3491 char:34\n+ ... lSSHAgentResult = Install-SSHAgentService @InstallSSHAgentSplatParams\n+                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-SSHAgentService\n\nAt line:1 char:1\n+ Install-WinSSH\n+ ~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-WinSSH\n\nIt seems in default install command you are using Chocolatey, which I am missing. The module cannot be installed without Chocolatey?. > The above should evaluate to True.\nYes, it did.\n\nThe above may or may not evaluate to True. If it does, then run the below. If not, no big deal.\n\nIt returned false.\n\nThen, run the following three lines. At least of them should evaluate to $True:\n\nFalse\nFalse\nFalse.\nWhat is wrong with my system? I am not completely got what are you doing in these lines, 'cause Powershell is not my forte. Are you checking if Open SSH was installed via Chocolatey?\nI have no Chocolatey by now and want to avoid installing it.. I assume smth is defnitely wrong in the very root of the code. When I import the module with Import-Module <PathToWinSSH.psm1> I get \nWARNING: The names of some imported commands from the module 'WinSSH' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.\n\nOkay, I ran it verbose and that's what I got\nPS C:\\Windows\\system32> Import-Module D:\\WinSSH.psm1\nWARNING: The names of some imported commands from the module 'WinSSH' include unapproved verbs that might make them\nless discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose\nparameter. For a list of approved verbs, type Get-Verb.\nPS C:\\Windows\\system32> Import-Module D:\\WinSSH.psm1 -Verbose\nVERBOSE: Importing function 'Add-PublicKeyToRemoteHost'.\nWARNING: The names of some imported commands from the module 'WinSSH' include unapproved verbs that might make them\nless discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose\nparameter. For a list of approved verbs, type Get-Verb.\nVERBOSE: The 'Check-Elevation' command in the WinSSH' module was imported, but because its name does not include an\napproved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.\nVERBOSE: Importing function 'Check-Elevation'.\nVERBOSE: The 'Check-InstalledPrograms' command in the WinSSH' module was imported, but because its name does not\ninclude an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.\nVERBOSE: Importing function 'Check-InstalledPrograms'.\nVERBOSE: The 'Fix-SSHPermissions' command in the WinSSH' module was imported, but because its name does not include an\napproved verb, it might be difficult to find. The suggested alternative verbs are \"Repair,Restore\".\nVERBOSE: Importing function 'Fix-SSHPermissions'.\nVERBOSE: Importing function 'Get-NativePath'.\nVERBOSE: Importing function 'Install-ChocolateyCmdLine'.\nVERBOSE: Importing function 'Install-Program'.\nVERBOSE: Importing function 'Install-SSHAgentService'.\nVERBOSE: Importing function 'Install-WinSSH'.\nVERBOSE: Importing function 'New-SSHDServer'.\nVERBOSE: Importing function 'New-SSHKey'.\nVERBOSE: Importing function 'New-UniqueString'.\nVERBOSE: The 'Pause-ForWarning' command in the WinSSH' module was imported, but because its name does not include an\napproved verb, it might be difficult to find. The suggested alternative verbs are \"Suspend,Wait\".\nVERBOSE: Importing function 'Pause-ForWarning'.\nVERBOSE: The 'Refresh-ChocolateyEnv' command in the WinSSH' module was imported, but because its name does not include\nan approved verb, it might be difficult to find. The suggested alternative verbs are \"Update\".\nVERBOSE: Importing function 'Refresh-ChocolateyEnv'.\nVERBOSE: Importing function 'Resolve-Host'.\nVERBOSE: Importing function 'Set-DefaultShell'.\nVERBOSE: Importing function 'Test-Port'.\nVERBOSE: The 'Unzip-File' command in the WinSSH' module was imported, but because its name does not include an approved\n verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.\nVERBOSE: Importing function 'Unzip-File'.\nVERBOSE: Importing function 'Update-PackageManagement'.\nVERBOSE: Importing function 'Update-PowerShellCore'.\nVERBOSE: Importing alias 'testport'.\n\n\n\nTry Install-WinSSH -GiveWinSSHBinariesPathPriority again\n\n\nFailed: \nPS C:\\Windows\\system32> Install-WinSSH -GiveWinSSHBinariesPathPriority\nPlease wait...\nRefreshing $env:Path...\nErrors from the Refresh-ChocolateyEnv function are as follows:\nErrors for the Install-Program function are as follows:\nInstall-WinSSH : The Install-SSHAgentService function failed!\nAt line:1 char:1\n+ Install-WinSSH -GiveWinSSHBinariesPathPriority\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-WinSSH\n\nErrors for the Install-SSHAgentService function are as follows:\nInstall-WinSSH : Get-Command : The term 'choco' is not recognized as the name of a cmdlet, function, script file, or\noperable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1745 char:17\n+     if ([bool]$(Get-Command choco -ErrorAction SilentlyContinue)) {\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (choco:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nGet-Command : The term 'ssh' is not recognized as the name of a cmdlet, function, script file, or operable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1917 char:19\n+ ...       if ($(Get-Command $FinalCommandName -ErrorAction SilentlyContin ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (ssh:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nGet-Command : The term 'ssh' is not recognized as the name of a cmdlet, function, script file, or operable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1923 char:26\n+ ... f (![bool]$(Get-Command $FinalCommandName -ErrorAction SilentlyContin ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (ssh:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nGet-Command : The term 'choco' is not recognized as the name of a cmdlet, function, script file, or operable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1417 char:18\n+     if (![bool]$(Get-Command choco -ErrorAction SilentlyContinue)) {\n+                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (choco:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nRefresh-ChocolateyEnv : Neither the Chocolatey PackageProvider nor the Chocolatey CmdLine appears to be installed!\nHalting!\nAt D:\\WinSSH.psm1:1927 char:29\n+ ...     $null = Refresh-ChocolateyEnv -ErrorAction SilentlyContinue -Erro ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Refresh-ChocolateyEnv\n\nThe Refresh-ChocolateyEnv function failed! Halting!\nAt D:\\WinSSH.psm1:1928 char:83\n+ ... t -eq \"1\") {throw \"The Refresh-ChocolateyEnv function failed! Halting ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OperationStopped: (The Refresh-Cho...ailed! Halting!:String) [], RuntimeException\n    + FullyQualifiedErrorId : The Refresh-ChocolateyEnv function failed! Halting!\n\nThe Refresh-ChocolateyEnv function failed! Halting!\nAt D:\\WinSSH.psm1:1928 char:83\n+ ... t -eq \"1\") {throw \"The Refresh-ChocolateyEnv function failed! Halting ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OperationStopped: (The Refresh-Cho...ailed! Halting!:String) [], RuntimeException\n    + FullyQualifiedErrorId : The Refresh-ChocolateyEnv function failed! Halting!\n\nInstall-Program : The Refresh-ChocolateyEnv function failed! Halting!\nAt D:\\WinSSH.psm1:3791 char:42\n+ ...   $OpenSSHInstallResults = Install-Program @InstallProgramSplatParams\n+                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-Program\n\nInstall-Program : Get-Command : The term 'choco' is not recognized as the name of a cmdlet, function, script file, or\noperable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1417 char:18\n+     if (![bool]$(Get-Command choco -ErrorAction SilentlyContinue)) {\n+                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (choco:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nRefresh-ChocolateyEnv : Neither the Chocolatey PackageProvider nor the Chocolatey CmdLine appears to be installed!\nHalting!\nAt D:\\WinSSH.psm1:1927 char:29\n+ ...     $null = Refresh-ChocolateyEnv -ErrorAction SilentlyContinue -Erro ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Refresh-ChocolateyEnv\n\nAt D:\\WinSSH.psm1:3791 char:42\n+ ...   $OpenSSHInstallResults = Install-Program @InstallProgramSplatParams\n+                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-Program\n\nThere was a problem with the Install-Program function! Halting!\nAt D:\\WinSSH.psm1:3792 char:47\n+ ... llResults) {throw \"There was a problem with the Install-Program funct ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OperationStopped: (There was a pro...ction! Halting!:String) [], RuntimeException\n    + FullyQualifiedErrorId : There was a problem with the Install-Program function! Halting!\n\nThere was a problem with the Install-Program function! Halting!\nAt D:\\WinSSH.psm1:3792 char:47\n+ ... llResults) {throw \"There was a problem with the Install-Program funct ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OperationStopped: (There was a pro...ction! Halting!:String) [], RuntimeException\n    + FullyQualifiedErrorId : There was a problem with the Install-Program function! Halting!\n\nInstall-SSHAgentService : There was a problem with the Install-Program function! Halting!\nAt D:\\WinSSH.psm1:3494 char:34\n+ ... lSSHAgentResult = Install-SSHAgentService @InstallSSHAgentSplatParams\n+                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-SSHAgentService\n\nInstall-SSHAgentService : Get-Command : The term 'choco' is not recognized as the name of a cmdlet, function, script\nfile, or operable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1745 char:17\n+     if ([bool]$(Get-Command choco -ErrorAction SilentlyContinue)) {\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (choco:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nGet-Command : The term 'ssh' is not recognized as the name of a cmdlet, function, script file, or operable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1917 char:19\n+ ...       if ($(Get-Command $FinalCommandName -ErrorAction SilentlyContin ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (ssh:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nGet-Command : The term 'ssh' is not recognized as the name of a cmdlet, function, script file, or operable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1923 char:26\n+ ... f (![bool]$(Get-Command $FinalCommandName -ErrorAction SilentlyContin ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (ssh:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nGet-Command : The term 'choco' is not recognized as the name of a cmdlet, function, script file, or operable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1417 char:18\n+     if (![bool]$(Get-Command choco -ErrorAction SilentlyContinue)) {\n+                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (choco:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nRefresh-ChocolateyEnv : Neither the Chocolatey PackageProvider nor the Chocolatey CmdLine appears to be installed!\nHalting!\nAt D:\\WinSSH.psm1:1927 char:29\n+ ...     $null = Refresh-ChocolateyEnv -ErrorAction SilentlyContinue -Erro ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Refresh-ChocolateyEnv\n\nThe Refresh-ChocolateyEnv function failed! Halting!\nAt D:\\WinSSH.psm1:1928 char:83\n+ ... t -eq \"1\") {throw \"The Refresh-ChocolateyEnv function failed! Halting ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OperationStopped: (The Refresh-Cho...ailed! Halting!:String) [], RuntimeException\n    + FullyQualifiedErrorId : The Refresh-ChocolateyEnv function failed! Halting!\n\nThe Refresh-ChocolateyEnv function failed! Halting!\nAt D:\\WinSSH.psm1:1928 char:83\n+ ... t -eq \"1\") {throw \"The Refresh-ChocolateyEnv function failed! Halting ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OperationStopped: (The Refresh-Cho...ailed! Halting!:String) [], RuntimeException\n    + FullyQualifiedErrorId : The Refresh-ChocolateyEnv function failed! Halting!\n\nInstall-Program : The Refresh-ChocolateyEnv function failed! Halting!\nAt D:\\WinSSH.psm1:3791 char:42\n+ ...   $OpenSSHInstallResults = Install-Program @InstallProgramSplatParams\n+                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-Program\n\nInstall-Program : Get-Command : The term 'choco' is not recognized as the name of a cmdlet, function, script file, or\noperable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt D:\\WinSSH.psm1:1417 char:18\n+     if (![bool]$(Get-Command choco -ErrorAction SilentlyContinue)) {\n+                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (choco:String) [Get-Command], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException,Microsoft.PowerShell.Commands.GetCommandCommand\n\nRefresh-ChocolateyEnv : Neither the Chocolatey PackageProvider nor the Chocolatey CmdLine appears to be installed!\nHalting!\nAt D:\\WinSSH.psm1:1927 char:29\n+ ...     $null = Refresh-ChocolateyEnv -ErrorAction SilentlyContinue -Erro ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Refresh-ChocolateyEnv\n\nAt D:\\WinSSH.psm1:3791 char:42\n+ ...   $OpenSSHInstallResults = Install-Program @InstallProgramSplatParams\n+                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-Program\n\nAt D:\\WinSSH.psm1:3494 char:34\n+ ... lSSHAgentResult = Install-SSHAgentService @InstallSSHAgentSplatParams\n+                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-SSHAgentService\n\nAt line:1 char:1\n+ Install-WinSSH -GiveWinSSHBinariesPathPriority\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException\n    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Install-WinSSH\n\n\nIf that fails, try Install-WinSSH -GiveWinSSHBinariesPathPriority -Force\n\nFailed with the same messages.\n\nIf that fails, try Install-WinSSH -GiveWinSSHBinariesPathPriority -GitHubInstall\n\nOnly that command installed it properly! God, it's awesome :))\nDoes Powershell include built-in Git? I didn't remember I installed it.. ",
    "r-madhumitha": "Yes. sshd and ssh-agent are running as local system. I was not able to start the sshd service as NTSERVICE\\sshd. Is there a way to fix this?. ",
    "goncalogracamelo": "Thank you for the very quick response.\nHow, can we add the date like \"2017-01-01\" to the time value that is being written?\nThanks again.. ",
    "bobanahalf": "This error was occurring with PowerShell 4.0. When I updated to 6.0.0-rc, it started working.\n. ",
    "paulmcenaney": "Here's ssh -vvv for one of the borked connections.\nUser, host, and domain have been replaced with \"foo\", \"bar\", and \"baz\", respectively.\nfoo@bar:~$ ssh -vvv -l foo@baz.test bar\nOpenSSH_7.2p2 Ubuntu-4ubuntu2.2, OpenSSL 1.0.2g  1 Mar 2016\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 19: Applying options for *\ndebug2: resolving \"bar\" port 22\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to bar [127.0.1.1] port 22.\ndebug1: Connection established.\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/foo/.ssh/id_rsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/foo/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/foo/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/foo/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/foo/.ssh/id_ecdsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/foo/.ssh/id_ecdsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/foo/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home/foo/.ssh/id_ed25519-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.2\nIt appears to fail before successfully getting the remote protocol version. (Compare against -vvv from any normal connection. I can include that if necessary.). No change in behavior on 1.0.0.20180201. (Again, installed through NuGet/Chocolatey... Shouldn't matter.)\n^C (Ctrl+C) is still not processed as an interrupt in the remote CMD/console session.\nSecond SSH process still not able to connect after the ^C is sent by the first session.\nHappy to attach the sshd log if someone can tell me where to find it. I've searched the sshd binary directory, ProgramData, AppData, and a few other suspect locations to no avail, thus far. This (https://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps) appears to indicate it should be in the install directory, alongside ssh-agent.log... but not luck, there. (Even with LogLevel set to DEBUG.) ssh-agent.log does seem to be updated, though...\nRunning the server directly from the commandline with the -d option does print debug info... but I'm not able to connect the client, with this method. Client dies with \"Broken Pipe\" messages, and the server prints:\nStarting session: shell on console for epic\\pmcenane from 2620:72:0:f45:: port 59754\ndebug1: pipe - read end: handle:00000000000001C4, io:000001DD2167A420, fd:7\ndebug1: pipe - write end: handle:00000000000001C8, io:000001DD216791A0, fd:8\ndebug1: pipe - read end: handle:00000000000001CC, io:000001DD216549F0, fd:9\ndebug1: pipe - write end: handle:00000000000001D0, io:000001DD21654AA0, fd:10\ndebug1: pipe - read end: handle:00000000000001D4, io:000001DD21654B50, fd:11\ndebug1: pipe - write end: handle:00000000000001D8, io:000001DD21654C00, fd:12\ndebug1: <- GetHomeDirFromToken()...\ndebug1: socketio_getsockname - ERROR:14\ngetsockname failed: Bad address\ndebug1: socketio_getsockname - ERROR:14\ndebug1: socketio_getsockname - ERROR:14\ngetsockname failed: Bad address\ndebug1: Executing command: ssh-shellhost.exe\ndebug1: ERROR. Cannot create process as new user (1314).\nLet me know how I can get you a server log, and I'll test again.. That link does not appear to contain correct information regarding the logs directory.\n\nDelete sshd.log and ssh-agent.log (in the logs directory of your installation path)\n\nThe installation path is c:\\ProgramFiles\\OpenSSH-Win64.\nssh-agent.log is in the install location itself; not a logs subdirectory. Neither the logs subdirectory, nor the sshd.log exist in that directory tree. To be clear: there are NO subdirectories in the install location.. Does the fix require a new build of the server, or was it merely an update to the wiki entry..?\n%programdata%\\ssh\\ does not exist on my system, running sshd 1.0.0.20180201.\nLooks like Chocolatey may install sshd with LogLevel QUIET by default.\nI've previously edited sshd_config to include the following line, without success.\nLogLevel DEBUG\nDoes the log path need to be added to sshd_config, somehow? (Doesn't seem to be a standard option in the *NIX sshd_config, since it uses syslog facilities...). Finally had time to sit down with ProcMon and figure out what, exactly, is going on, here.\nFirst, the log file is NOT created in %programdata%\\ssh. It's created in %programfiles%\\OpenSSH-Win64\\, along with everything else.\nSecond, the sshd.exe process receives an \"ACCESS DENIED\" result on the CreateFile operation on sshd.log.\nHere's the block of file operations of interest. \n10:31:11.9825338 AM sshd.exe    18856   CreateFile  C:\\Program Files\\OpenSSH-Win64\\sshd.log ACCESS DENIED   Desired Access: Generic Write, Read Attributes, Disposition: OpenIf, Options: Synchronous IO Non-Alert, Non-Directory File, Attributes: N, ShareMode: Read, Write, AllocationSize: 0\n10:31:11.9851645 AM sshd.exe    18856   CreateFile  C:\\Program Files\\OpenSSH-Win64\\sshd.log ACCESS DENIED   Desired Access: Generic Write, Read Attributes, Disposition: OpenIf, Options: Synchronous IO Non-Alert, Non-Directory File, Attributes: N, ShareMode: Read, Write, AllocationSize: 0\n10:31:11.9904597 AM sshd.exe    18856   CreateFile  C:\\Program Files\\OpenSSH-Win64\\sshd.log ACCESS DENIED   Desired Access: Generic Write, Read Attributes, Disposition: OpenIf, Options: Synchronous IO Non-Alert, Non-Directory File, Attributes: N, ShareMode: Read, Write, AllocationSize: 0\n10:31:11.9940783 AM sshd.exe    18856   CreateFile  C:\\Program Files\\OpenSSH-Win64\\sshd.log ACCESS DENIED   Desired Access: Generic Write, Read Attributes, Disposition: OpenIf, Options: Synchronous IO Non-Alert, Non-Directory File, Attributes: N, ShareMode: Read, Write, AllocationSize: 0\n10:31:11.9981289 AM sshd.exe    18856   CreateFile  C:\\Program Files\\OpenSSH-Win64\\sshd.log ACCESS DENIED   Desired Access: Generic Write, Read Attributes, Disposition: OpenIf, Options: Synchronous IO Non-Alert, Non-Directory File, Attributes: N, ShareMode: Read, Write, AllocationSize: 0\n10:31:12.0017993 AM sshd.exe    18856   CreateFile  C:\\Program Files\\OpenSSH-Win64\\sshd.log ACCESS DENIED   Desired Access: Generic Write, Read Attributes, Disposition: OpenIf, Options: Synchronous IO Non-Alert, Non-Directory File, Attributes: N, ShareMode: Read, Write, AllocationSize: 0\n10:31:12.0056954 AM sshd.exe    18856   CreateFile  C:\\Program Files\\OpenSSH-Win64\\sshd.log ACCESS DENIED   Desired Access: Generic Write, Read Attributes, Disposition: OpenIf, Options: Synchronous IO Non-Alert, Non-Directory File, Attributes: N, ShareMode: Read, Write, AllocationSize: 0\n10:31:12.0096305 AM sshd.exe    18856   CreateFile  C:\\Program Files\\OpenSSH-Win64\\sshd.log ACCESS DENIED   Desired Access: Generic Write, Read Attributes, Disposition: OpenIf, Options: Synchronous IO Non-Alert, Non-Directory File, Attributes: N, ShareMode: Read, Write, AllocationSize: 0\n10:31:12.0171029 AM sshd.exe    18856   CreateFile  C:\\Program Files\\OpenSSH-Win64\\sshd.log ACCESS DENIED   Desired Access: Generic Write, Read Attributes, Disposition: OpenIf, Options: Synchronous IO Non-Alert, Non-Directory File, Attributes: N, ShareMode: Read, Write, AllocationSize: 0\nAdding the \"NT SERVICE\\sshd\" user principle to the ACL list on %programfiles%\\OpenSSH-Win64 allowed both the sshd.log and sshd.pid files to be created; neither had previously existed.\n\nNow that THAT's resolved, here's the timing for the test and attached log. Spread them out a bit, so it's easy to pick apart what goes together in the log.\n10:55 - start SSHD service\n10:56 - first connection from my Linux box; run some commands\n10:57 - ^C sent\n10:58 - Run a few more commands from the original Linux connection\n10:59 - Attempt second connection\n10:59:51 - Disconnect original session\n11:00 - Stop SSHD service\n\nThe resulting log is attached.\nsshd.log\n. ",
    "Fuseteam": "this seems to be an issue when using it in the form of folder/* from the windows side. ",
    "yecril71pl": "No, you cannot.  \"user@domain\" makes sense only if the host is Windows, which is not the case in a mixed environment.  Use \"_@domain\" only if you can detect that the host expects it.. The new release immediately quits.. There is noting to elaborate.  Your ssh client just quits without doing anything.  The bundled one works.. C:\\Users\\krzzel\\Documents\\M>C:\\Users\\krzzel\\Downloads\\OpenSSH-Win64\\OpenSSH-Win64\\SSH -v *.compute.amazonaws.com\nOpenSSH_for_Windows_7.7p1, LibreSSL 2.6.4\ndebug1: Reading configuration data */.ssh/config\ndebug1: */.ssh/config line 2: Applying options for *.compute.amazonaws.com\ndebug1: Connecting to *.compute.amazonaws.com [34.*] port 22.\ndebug1: Connection established.\ndebug1: key_load_public: No such file or directory\ndebug1: identity file *.pem type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file *.pem-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.7\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.4\ndebug1: match: OpenSSH_7.4 pat OpenSSH* compat 0x04000000\ndebug1: Authenticating to *.compute.amazonaws.com:22 as 'ec2-user'\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:*\ndebug1: Host '*.compute.amazonaws.com' is known and matches the ECDSA host key.\ndebug1: Found key in */.ssh/known_hosts:17\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: rekey after 134217728 blocks\ndebug1: pubkey_prepare: ssh_get_authentication_socket: No such file or directory\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: *.pem\ndebug1: Authentication succeeded (publickey).\nAuthenticated to *.compute.amazonaws.com ([34.*]:22).\ndebug1: channel 0: new [client-session]\ndebug1: Requesting no-more-sessions@openssh.com\ndebug1: Entering interactive session.\ndebug1: pledge: network\ndebug1: console supports the ansi parsing\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\n[ec2-user@* ~]$ exit\ndebug1: client_input_channel_req: channel 0 rtype exit-status reply 0\ndebug1: client_input_channel_req: channel 0 rtype eow@openssh.com reply 0\nlogout\ndebug1: channel 0: free: client-session, nchannels 1\nConnection to *.compute.amazonaws.com closed.\nTransferred: sent 2620, received 3092 bytes, in 304.2 seconds\nBytes per second: sent 8.6, received 10.2\ndebug1: Exit status 0\n. The session disconnected because I told the shell to exit.. ",
    "rcl4444": "I also use  the Gitlab Runner\ncommand\nssh -n -T -E f:/1.log raochenglong@192.168.1.225 ./restartSP.sh\n1.log's content\n\nGetConsoleMode on STD_INPUT_HANDLE failed with 6\nSetConsoleMode on STD_INPUT_HANDLE failed with 6. \n",
    "ThomasEBoland": "That explains it. Good enough. Close it.\nI don't use an identified domain on these computers. Also, different from the Linux machines I have seen, which were all user@host.\n. ",
    "meedel": "Is there any progress on this issue?. ",
    "jems99": "For me the log is this message over and over: Error: Accept: Connection Reset\nWhen the application gets into this state no connections can be established. Restarts both services fixes the issue for about 10 minutes and then it happens again. Right now we can't use SFTP because of this.. I can run in DEBUG3 and provide shortly.. ",
    "iamakulov": "Should I expect Windows to eventually update the inbox SSH version to match the GitHub one? If yes, do you know when this could be expected?\n(I\u2019m particularly interested in RSA support.)\n. ",
    "p0lar-bear": "I just downloaded and installed the 1.0.0.0 release as per the instructions, and Get-Command tells me that the ssh-keygen being used is the one in C:\\Program Files\\OpenSSH\\, yet it's telling me that RSA isn't supported as above.. ...Nope. I thought I was but I misread the output of Get-Command, it was using 0.0.18.0. Disregard.. ",
    "trgrassijr55": "PS C:\\openssh\\openssh-win64> .\\install-sshd.ps1\n[SC] SetServiceObjectSecurity SUCCESS\n[SC] ChangeServiceConfig SUCCESS\n[SC] ChangeServiceConfig2 SUCCESS\nsshd and ssh-agent services successfully installed\nPS C:\\openssh\\openssh-win64> ./sshd.exe -ddd\ndebug2: load_server_config: filename ./sshd_config\ndebug2: load_server_config: done config len = 231\ndebug2: parse_server_config: config ./sshd_config len 231\ndebug3: ./sshd_config:50 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: ./sshd_config:115 setting Subsystem sftp        sftp-server.exe\ndebug3: ./sshd_config:123 setting hostkeyagent \\\\.\\pipe\\openssh-ssh-agent\ndebug1: sshd version OpenSSH_7.6, LibreSSL 2.5.3\ndebug3: failed to open file:C:\\openssh\\openssh-win64/./ssh_host_rsa_key error:2\ndebug1: key_load_private: No such file or directory\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_rsa_key error:2\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_rsa_key.pub error:2\ndebug1: key_load_public: No such file or directory\nCould not load host key: C:\\openssh\\openssh-win64/./ssh_host_rsa_key\ndebug3: failed to open file:C:\\openssh\\openssh-win64/./ssh_host_dsa_key error:2\ndebug1: key_load_private: No such file or directory\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_dsa_key error:2\nAccess problem?\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_dsa_key.pub error:2\ndebug1: key_load_public: No such file or directory\nCould not load host key: C:\\openssh\\openssh-win64/./ssh_host_dsa_key\ndebug3: failed to open file:C:\\openssh\\openssh-win64/./ssh_host_ecdsa_key error:2\ndebug1: key_load_private: No such file or directory\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_ecdsa_key error:2\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_ecdsa_key.pub error:2\ndebug1: key_load_public: No such file or directory\nCould not load host key: C:\\openssh\\openssh-win64/./ssh_host_ecdsa_key\ndebug3: failed to open file:C:\\openssh\\openssh-win64/./ssh_host_ed25519_key error:2\ndebug1: key_load_private: No such file or directory\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_ed25519_key error:2\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_ed25519_key.pub error:2\ndebug1: key_load_public: No such file or directory\nCould not load host key: C:\\openssh\\openssh-win64/./ssh_host_ed25519_key\nsshd: no hostkeys available -- exiting.\nPS C:\\openssh\\openssh-win64>. No these are the instructions I been looking for \nThanks will give it a try. Almost there\nwhich account is this looking for tying to use domain accounts not local accounts\nPS /root> Enter-PSSession -HostName 10.2.8.32 -UserName myvm\\administrator\nmyvm\\administrator@10.2.8.32's password:\nEnter-PSSession : The background process reported an error with the following me  ssage: The SSH client session has ended with error message: subsystem request fa  iled on channel 0.\nAt line:1 char:1\n+ Enter-PSSession -HostName 10.2.8.32 -UserName myvm\\administrator\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+ CategoryInfo          : ResourceUnavailable: (:) [Enter-PSSession], PSRemoting  TransportException\n+ FullyQualifiedErrorId : System.Management.Automation.Remoting.PSRemotingDataSt  ructureException,Microsoft.PowerShell.Commands.EnterPSSessionCommand\n. I can now ssh to my Windows 2012 R2 server from my CENT OS server\nNow need to get Powershell invoke-command and enter-pssesion to work  . PS C:> dir\nDirectory: C:\\\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nda----        9/14/2017  11:58 PM                bginfo\nd-----       12/24/2017   5:57 PM                OpenSSH\nd-----        8/22/2013  11:52 AM                PerfLogs\nd-r---        9/23/2017  10:30 AM                Program Files\nd-----        9/23/2017  11:55 AM                Program Files (x86)\nd-----       12/24/2017   5:56 PM                Temp\nd-r---       12/24/2017  10:22 AM                Users\nd-----       12/24/2017   6:08 AM                Util\nd-----       12/22/2017   8:35 AM                Windows\nPS C:> cd openshh\ncd : Cannot find path 'C:\\openshh' because it does not exist.\nAt line:1 char:1\n+ cd openshh\n+ ~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (C:\\openshh:String) [Set-Location], ItemNotFoundException\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.SetLocationCommand\nPS C:> cd /openssh\nPS C:\\openssh> dir\nDirectory: C:\\openssh\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----       12/24/2017   5:57 PM                OpenSSH-Win64\nPS C:\\openssh> cd openssh-win64\nPS C:\\openssh\\openssh-win64> dir\nDirectory: C:\\openssh\\openssh-win64\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----        12/4/2017   9:18 PM           2273 FixHostFilePermissions.ps1\n-a----        12/4/2017   9:18 PM            606 FixUserFilePermissions.ps1\n-a----        12/4/2017   9:18 PM          11027 install-sshd.ps1\n-a----       10/17/2017   9:10 PM        1462907 libcrypto.dll\n-a----        12/4/2017   9:18 PM           1053 OpenSSHUtils.psd1\n-a----        12/4/2017   9:18 PM          27831 OpenSSHUtils.psm1\n-a----        12/4/2017   9:18 PM         332288 scp.exe\n-a----        12/4/2017   9:18 PM         347136 sftp-server.exe\n-a----        12/4/2017   9:18 PM         400384 sftp.exe\n-a----        12/4/2017   9:18 PM         528384 ssh-add.exe\n-a----        12/4/2017   9:18 PM         622592 ssh-agent.exe\n-a----        12/4/2017   9:18 PM         652800 ssh-keygen.exe\n-a----        12/4/2017   9:18 PM         585216 ssh-keyscan.exe\n-a----        12/4/2017   9:18 PM         152064 ssh-shellhost.exe\n-a----        12/4/2017   9:18 PM         882688 ssh.exe\n-a----        12/4/2017   9:18 PM         936448 sshd.exe\n-a----        12/4/2017   9:18 PM           3561 sshd_config\n-a----        12/4/2017   9:18 PM            562 uninstall-sshd.ps1\nPS C:\\openssh\\openssh-win64> .\\install-sshd.ps1\n[SC] SetServiceObjectSecurity SUCCESS\n[SC] ChangeServiceConfig SUCCESS\n[SC] ChangeServiceConfig2 SUCCESS\nsshd and ssh-agent services successfully installed\nPS C:\\openssh\\openssh-win64> ./sshd.exe -ddd\ndebug2: load_server_config: filename ./sshd_config\ndebug2: load_server_config: done config len = 231\ndebug2: parse_server_config: config ./sshd_config len 231\ndebug3: ./sshd_config:50 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: ./sshd_config:115 setting Subsystem sftp        sftp-server.exe\ndebug3: ./sshd_config:123 setting hostkeyagent \\\\.\\pipe\\openssh-ssh-agent\ndebug1: sshd version OpenSSH_7.6, LibreSSL 2.5.3\ndebug3: failed to open file:C:\\openssh\\openssh-win64/./ssh_host_rsa_key error:2\ndebug1: key_load_private: No such file or directory\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_rsa_key error:2\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_rsa_key.pub error:2\ndebug1: key_load_public: No such file or directory\nCould not load host key: C:\\openssh\\openssh-win64/./ssh_host_rsa_key\ndebug3: failed to open file:C:\\openssh\\openssh-win64/./ssh_host_dsa_key error:2\ndebug1: key_load_private: No such file or directory\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_dsa_key error:2\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_dsa_key.pub error:2\ndebug1: key_load_public: No such file or directory\nCould not load host key: C:\\openssh\\openssh-win64/./ssh_host_dsa_key\ndebug3: failed to open file:C:\\openssh\\openssh-win64/./ssh_host_ecdsa_key error:2\ndebug1: key_load_private: No such file or directory\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_ecdsa_key error:2\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_ecdsa_key.pub error:2\ndebug1: key_load_public: No such file or directory\nCould not load host key: C:\\openssh\\openssh-win64/./ssh_host_ecdsa_key\ndebug3: failed to open file:C:\\openssh\\openssh-win64/./ssh_host_ed25519_key error:2\ndebug1: key_load_private: No such file or directory\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_ed25519_key error:2\ndebug3: Failed to open file:C:\\openssh\\openssh-win64/./ssh_host_ed25519_key.pub error:2\ndebug1: key_load_public: No such file or directory\nCould not load host key: C:\\openssh\\openssh-win64/./ssh_host_ed25519_key\nsshd: no hostkeys available -- exiting.\nPS C:\\openssh\\openssh-win64> .\\ssh-keygen.exe -A\nC:\\openssh\\openssh-win64\\ssh-keygen.exe: generating new host keys: RSA DSA ECDSA ED25519\nPS C:\\openssh\\openssh-win64> .\\FixHostFilePermissions.ps1 -Confirm:$false\n  [*] C:\\openssh\\openssh-win64\\sshd_config\nInheritance is removed from 'C:\\openssh\\openssh-win64\\sshd_config'.\n'BUILTIN\\Users' has no more access to 'C:\\openssh\\openssh-win64\\sshd_config'.\n'NT SERVICE\\sshd' now has Read access to 'C:\\openssh\\openssh-win64\\sshd_config'.\n      Repaired permissions\n[*] C:\\openssh\\openssh-win64\\ssh_host_dsa_key\n'MYVM\\proxyadmin' has no more access to 'C:\\openssh\\openssh-win64\\ssh_host_dsa_key'.\n'NT SERVICE\\sshd' now has Read access to 'C:\\openssh\\openssh-win64\\ssh_host_dsa_key'.\n      Repaired permissions\n[*] C:\\openssh\\openssh-win64\\ssh_host_dsa_key.pub\n'MYVM\\proxyadmin' now has Read access to 'C:\\openssh\\openssh-win64\\ssh_host_dsa_key.pub'.\n'NT SERVICE\\sshd' now has Read access to 'C:\\openssh\\openssh-win64\\ssh_host_dsa_key.pub'.\n      Repaired permissions\n[*] C:\\openssh\\openssh-win64\\ssh_host_ecdsa_key\n'MYVM\\proxyadmin' has no more access to 'C:\\openssh\\openssh-win64\\ssh_host_ecdsa_key'.\n'NT SERVICE\\sshd' now has Read access to 'C:\\openssh\\openssh-win64\\ssh_host_ecdsa_key'.\n      Repaired permissions\n[*] C:\\openssh\\openssh-win64\\ssh_host_ecdsa_key.pub\n'MYVM\\proxyadmin' now has Read access to 'C:\\openssh\\openssh-win64\\ssh_host_ecdsa_key.pub'.\n'NT SERVICE\\sshd' now has Read access to 'C:\\openssh\\openssh-win64\\ssh_host_ecdsa_key.pub'.\n      Repaired permissions\n[*] C:\\openssh\\openssh-win64\\ssh_host_ed25519_key\n'MYVM\\proxyadmin' has no more access to 'C:\\openssh\\openssh-win64\\ssh_host_ed25519_key'.\n'NT SERVICE\\sshd' now has Read access to 'C:\\openssh\\openssh-win64\\ssh_host_ed25519_key'.\n      Repaired permissions\n[*] C:\\openssh\\openssh-win64\\ssh_host_ed25519_key.pub\n'MYVM\\proxyadmin' now has Read access to 'C:\\openssh\\openssh-win64\\ssh_host_ed25519_key.pub'.\n'NT SERVICE\\sshd' now has Read access to 'C:\\openssh\\openssh-win64\\ssh_host_ed25519_key.pub'.\n      Repaired permissions\n[*] C:\\openssh\\openssh-win64\\ssh_host_rsa_key\n'MYVM\\proxyadmin' has no more access to 'C:\\openssh\\openssh-win64\\ssh_host_rsa_key'.\n'NT SERVICE\\sshd' now has Read access to 'C:\\openssh\\openssh-win64\\ssh_host_rsa_key'.\n      Repaired permissions\n[*] C:\\openssh\\openssh-win64\\ssh_host_rsa_key.pub\n'MYVM\\proxyadmin' now has Read access to 'C:\\openssh\\openssh-win64\\ssh_host_rsa_key.pub'.\n'NT SERVICE\\sshd' now has Read access to 'C:\\openssh\\openssh-win64\\ssh_host_rsa_key.pub'.\n      Repaired permissions\nDone.\nPS C:\\openssh\\openssh-win64> get-service ssh-agent\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  ssh-agent          ssh-agent\nPS C:\\openssh\\openssh-win64> get-service ssh-agent | restart-service\nPS C:\\openssh\\openssh-win64> psexec -i -s cmd.exe\npsexec : The term 'psexec' is not recognized as the name of a cmdlet, function, script file, or operable program.\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt line:1 char:1\n+ psexec -i -s cmd.exe\n+ ~~~~~~\n    + CategoryInfo          : ObjectNotFound: (psexec:String) [], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException\nPS C:\\openssh\\openssh-win64> dir\nDirectory: C:\\openssh\\openssh-win64\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----       12/24/2017   5:58 PM                logs\n-a----        12/4/2017   9:18 PM           2273 FixHostFilePermissions.ps1\n-a----        12/4/2017   9:18 PM            606 FixUserFilePermissions.ps1\n-a----        12/4/2017   9:18 PM          11027 install-sshd.ps1\n-a----       10/17/2017   9:10 PM        1462907 libcrypto.dll\n-a----        12/4/2017   9:18 PM           1053 OpenSSHUtils.psd1\n-a----        12/4/2017   9:18 PM          27831 OpenSSHUtils.psm1\n-a----        12/4/2017   9:18 PM         332288 scp.exe\n-a----        12/4/2017   9:18 PM         347136 sftp-server.exe\n-a----        12/4/2017   9:18 PM         400384 sftp.exe\n-a----        12/4/2017   9:18 PM         528384 ssh-add.exe\n-a----        12/4/2017   9:18 PM         622592 ssh-agent.exe\n-a----        12/4/2017   9:18 PM         652800 ssh-keygen.exe\n-a----        12/4/2017   9:18 PM         585216 ssh-keyscan.exe\n-a----        12/4/2017   9:18 PM         152064 ssh-shellhost.exe\n-a----        12/4/2017   9:18 PM         882688 ssh.exe\n-a----        12/4/2017   9:18 PM         936448 sshd.exe\n-a----        12/4/2017   9:18 PM           3561 sshd_config\n-a----       12/24/2017   8:27 PM            668 ssh_host_dsa_key\n-a----       12/24/2017   8:27 PM            621 ssh_host_dsa_key.pub\n-a----       12/24/2017   8:27 PM            227 ssh_host_ecdsa_key\n-a----       12/24/2017   8:27 PM            193 ssh_host_ecdsa_key.pub\n-a----       12/24/2017   8:27 PM            432 ssh_host_ed25519_key\n-a----       12/24/2017   8:27 PM            113 ssh_host_ed25519_key.pub\n-a----       12/24/2017   8:27 PM           1679 ssh_host_rsa_key\n-a----       12/24/2017   8:27 PM            413 ssh_host_rsa_key.pub\n-a----        12/4/2017   9:18 PM            562 uninstall-sshd.ps1\nPS C:\\openssh\\openssh-win64> psexec.exe -i -s cmd.exe\npsexec.exe : The term 'psexec.exe' is not recognized as the name of a cmdlet, function, script file, or operable\nprogram. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt line:1 char:1\n+ psexec.exe -i -s cmd.exe\n+ ~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (psexec.exe:String) [], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException\nPS C:\\openssh\\openssh-win64> New-NetFirewallRule -Protocol TCP -LocalPort 22 -Direction Inbound -Action Allow -DisplayNa\nme SSH\nName                  : {14be30b4-e256-485a-8fef-f51cb15a7769}\nDisplayName           : SSH\nDescription           :\nDisplayGroup          :\nGroup                 :\nEnabled               : True\nProfile               : Any\nPlatform              : {}\nDirection             : Inbound\nAction                : Allow\nEdgeTraversalPolicy   : Block\nLooseSourceMapping    : False\nLocalOnlyMapping      : False\nOwner                 :\nPrimaryStatus         : OK\nStatus                : The rule was parsed successfully from the store. (65536)\nEnforcementStatus     : NotApplicable\nPolicyStoreSource     : PersistentStore\nPolicyStoreSourceType : Local\nPS C:\\openssh\\openssh-win64> get-service sshd\nStatus   Name               DisplayName\n------   ----               -----------\nStopped  sshd               sshd\nPS C:\\openssh\\openssh-win64> get-service sshd | start-service\nPS C:\\openssh\\openssh-win64> get-service sshd\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  sshd               sshd\nPS C:\\openssh\\openssh-win64> get-service ssh*\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  ssh-agent          ssh-agent\nRunning  sshd               sshd\nPS C:\\openssh\\openssh-win64> get-service sshd\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  sshd               sshd\nPS C:\\openssh\\openssh-win64> get-service sshd | stop-service\nPS C:\\openssh\\openssh-win64> get-service sshd\nStatus   Name               DisplayName\n------   ----               -----------\nStopped  sshd               sshd\nPS C:\\openssh\\openssh-win64> ./sshd.exe -ddd\ndebug2: load_server_config: filename ./sshd_config\ndebug2: load_server_config: done config len = 231\ndebug2: parse_server_config: config ./sshd_config len 231\ndebug3: ./sshd_config:50 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: ./sshd_config:115 setting Subsystem sftp        sftp-server.exe\ndebug3: ./sshd_config:123 setting hostkeyagent \\\\.\\pipe\\openssh-ssh-agent\ndebug1: sshd version OpenSSH_7.6, LibreSSL 2.5.3\ndebug3: ReadFileEx() ERROR:38, io:0000000ECF826650\ndebug3: read - no more data, io:0000000ECF826650\ndebug3: ReadFileEx() ERROR:38, io:0000000ECF826650\ndebug3: read - no more data, io:0000000ECF826650\ndebug1: private host key #0: ssh-rsa SHA256:gkkpFbuA/FStkb+lSM+tyqltbfUYiFeWAy1RNIaooEY\ndebug3: ReadFileEx() ERROR:38, io:0000000ECF828970\ndebug3: read - no more data, io:0000000ECF828970\ndebug3: ReadFileEx() ERROR:38, io:0000000ECF828970\ndebug3: read - no more data, io:0000000ECF828970\ndebug1: private host key #1: ssh-dss SHA256:LdOE+1+7g72i7T99cRl4D6N/KHUj2K9Fw+szI7muuHg\ndebug3: ReadFileEx() ERROR:38, io:0000000ECF8266C0\ndebug3: read - no more data, io:0000000ECF8266C0\ndebug3: ReadFileEx() ERROR:38, io:0000000ECF8266C0\ndebug3: read - no more data, io:0000000ECF8266C0\ndebug1: private host key #2: ecdsa-sha2-nistp256 SHA256:zydie0D9vhjUXeA3fXsXU5d5s+FwDD5kKWfl7ayF4FI\ndebug3: ReadFileEx() ERROR:38, io:0000000ECF826650\ndebug3: read - no more data, io:0000000ECF826650\ndebug3: ReadFileEx() ERROR:38, io:0000000ECF826650\ndebug3: read - no more data, io:0000000ECF826650\ndebug1: private host key #3: ssh-ed25519 SHA256:g+Fb0DnkPecEVpFtz2cfg02WwWz74/INjMWdvQB0VaA\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug3: fd 5 is not O_NONBLOCK\ndebug1: Server will not fork when running in debugging mode.\nConnection from 10.2.8.74 port 35612 on 10.2.8.32 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_7.4\ndebug1: match: OpenSSH_7.4 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_7.6\ndebug2: fd 5 setting O_NONBLOCK\ndebug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-n\nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-\ngroup14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@open\nssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@open\nssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-n\nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-\ngroup-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha\n2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh\n.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ssh-dss\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@o\npenssh.com,aes128-cbc,aes192-cbc,aes256-cbc\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@o\npenssh.com,aes128-cbc,aes192-cbc,aes256-cbc\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@open\nssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@open\nssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none,zlib@openssh.com,zlib\ndebug2: compression stoc: none,zlib@openssh.com,zlib\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT\ndebug3: receive packet: type 30\ndebug3: send packet: type 31\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: send packet: type 7\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug1: KEX done\ndebug3: receive packet: type 5\ndebug3: send packet: type 6\ndebug3: receive packet: type 50\ndebug1: userauth-request for user administrator service ssh-connection method none\ndebug1: attempt 0 failures 0\ndebug2: parse_server_config: config reprocess config len 231\ndebug2: input_userauth_request: setting up authctxt for administrator\ndebug2: input_userauth_request: try method none\nFailed none for administrator from 10.2.8.74 port 35612 ssh2\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\ndebug3: send packet: type 51\ndebug3: receive packet: type 50\ndebug1: userauth-request for user administrator service ssh-connection method keyboard-interactive\ndebug1: attempt 1 failures 0\ndebug2: input_userauth_request: try method keyboard-interactive\ndebug1: keyboard-interactive devs\ndebug1: auth2_challenge: user=administrator devs=\ndebug1: kbdint_alloc: devices ''\ndebug2: auth2_challenge_start: devices\nFailed keyboard-interactive for administrator from 10.2.8.74 port 35612 ssh2\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\ndebug3: send packet: type 51\ndebug3: receive packet: type 50\ndebug1: userauth-request for user administrator service ssh-connection method password\ndebug1: attempt 2 failures 1\ndebug2: input_userauth_request: try method password\ndebug1: failed to logon user: administrator domain: (null) error:1326\nFailed password for administrator from 10.2.8.74 port 35612 ssh2\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\ndebug3: send packet: type 51\nConnection closed by authenticating user administrator 10.2.8.74 port 35612\ndebug1: do_cleanup\nPS C:\\openssh\\openssh-win64>. the account is a domain account \nPS C:\\openssh\\openssh-win64> ./sshd.exe -ddd\ndebug2: load_server_config: filename ./sshd_config\ndebug2: load_server_config: done config len = 231\ndebug2: parse_server_config: config ./sshd_config len 231\ndebug3: ./sshd_config:50 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: ./sshd_config:115 setting Subsystem sftp        sftp-server.exe\ndebug3: ./sshd_config:123 setting hostkeyagent \\\\.\\pipe\\openssh-ssh-agent\ndebug1: sshd version OpenSSH_7.6, LibreSSL 2.5.3\ndebug3: ReadFileEx() ERROR:38, io:00000072D6136650\ndebug3: read - no more data, io:00000072D6136650\ndebug3: ReadFileEx() ERROR:38, io:00000072D6136650\ndebug3: read - no more data, io:00000072D6136650\ndebug1: private host key #0: ssh-rsa SHA256:gkkpFbuA/FStkb+lSM+tyqltbfUYiFeWAy1RNIaooEY\ndebug3: ReadFileEx() ERROR:38, io:00000072D6137910\ndebug3: read - no more data, io:00000072D6137910\ndebug3: ReadFileEx() ERROR:38, io:00000072D6137910\ndebug3: read - no more data, io:00000072D6137910\ndebug1: private host key #1: ssh-dss SHA256:LdOE+1+7g72i7T99cRl4D6N/KHUj2K9Fw+szI7muuHg\ndebug3: ReadFileEx() ERROR:38, io:00000072D61366C0\ndebug3: read - no more data, io:00000072D61366C0\ndebug3: ReadFileEx() ERROR:38, io:00000072D61366C0\ndebug3: read - no more data, io:00000072D61366C0\ndebug1: private host key #2: ecdsa-sha2-nistp256 SHA256:zydie0D9vhjUXeA3fXsXU5d5s+FwDD5kKWfl7ayF4FI\ndebug3: ReadFileEx() ERROR:38, io:00000072D6136650\ndebug3: read - no more data, io:00000072D6136650\ndebug3: ReadFileEx() ERROR:38, io:00000072D6136650\ndebug3: read - no more data, io:00000072D6136650\ndebug1: private host key #3: ssh-ed25519 SHA256:g+Fb0DnkPecEVpFtz2cfg02WwWz74/INjMWdvQB0VaA\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug3: fd 5 is not O_NONBLOCK\ndebug1: Server will not fork when running in debugging mode.\nConnection from 10.2.8.74 port 58032 on 10.2.8.32 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_7.4\ndebug1: match: OpenSSH_7.4 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_7.6\ndebug2: fd 5 setting O_NONBLOCK\ndebug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-n\nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-\ngroup14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@open\nssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@open\nssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-n\nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-\ngroup-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha\n2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh\n.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ssh-dss\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@o\npenssh.com,aes128-cbc,aes192-cbc,aes256-cbc\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@o\npenssh.com,aes128-cbc,aes192-cbc,aes256-cbc\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@open\nssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@open\nssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none,zlib@openssh.com,zlib\ndebug2: compression stoc: none,zlib@openssh.com,zlib\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT\ndebug3: receive packet: type 30\ndebug3: send packet: type 31\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: send packet: type 7\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug1: KEX done\ndebug3: receive packet: type 5\ndebug3: send packet: type 6\ndebug3: receive packet: type 50\ndebug1: userauth-request for user myvm\\proxyadmin service ssh-connection method none\ndebug1: attempt 0 failures 0\ndebug2: parse_server_config: config reprocess config len 231\ndebug2: input_userauth_request: setting up authctxt for myvm\\proxyadmin\ndebug2: input_userauth_request: try method none\nFailed none for myvm\\proxyadmin from 10.2.8.74 port 58032 ssh2\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\ndebug3: send packet: type 51\ndebug3: receive packet: type 50\ndebug1: userauth-request for user myvm\\proxyadmin service ssh-connection method keyboard-interactive\ndebug1: attempt 1 failures 0\ndebug2: input_userauth_request: try method keyboard-interactive\ndebug1: keyboard-interactive devs\ndebug1: auth2_challenge: user=myvm\\proxyadmin devs=\ndebug1: kbdint_alloc: devices ''\ndebug2: auth2_challenge_start: devices\nFailed keyboard-interactive for myvm\\proxyadmin from 10.2.8.74 port 58032 ssh2\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\ndebug3: send packet: type 51\ndebug3: receive packet: type 50\ndebug1: userauth-request for user myvm\\proxyadmin service ssh-connection method password\ndebug1: attempt 2 failures 1\ndebug2: input_userauth_request: try method password\nAccepted password for myvm\\proxyadmin from 10.2.8.74 port 58032 ssh2\ndebug3: send packet: type 52\ndebug3: notify_hostkeys: key 0: ssh-rsa SHA256:gkkpFbuA/FStkb+lSM+tyqltbfUYiFeWAy1RNIaooEY\ndebug3: notify_hostkeys: key 1: ssh-dss SHA256:LdOE+1+7g72i7T99cRl4D6N/KHUj2K9Fw+szI7muuHg\ndebug3: notify_hostkeys: key 2: ecdsa-sha2-nistp256 SHA256:zydie0D9vhjUXeA3fXsXU5d5s+FwDD5kKWfl7ayF4FI\ndebug3: notify_hostkeys: key 3: ssh-ed25519 SHA256:g+Fb0DnkPecEVpFtz2cfg02WwWz74/INjMWdvQB0VaA\ndebug3: notify_hostkeys: sent 4 hostkeys\ndebug3: send packet: type 80\ndebug1: Entering interactive session for SSH2.\ndebug2: fd 4 setting O_NONBLOCK\ndebug2: fd 6 setting O_NONBLOCK\ndebug1: server_init_dispatch\ndebug3: receive packet: type 90\ndebug1: server_input_channel_open: ctype session rchan 0 win 2097152 max 32768\ndebug1: input_session_request\ndebug1: channel 0: new [server-session]\ndebug2: session_new: allocate (allocated 0 max 10)\ndebug3: session_unused: session id 0 unused\ndebug1: session_new: session 0\ndebug1: session_open: channel 0\ndebug1: session_open: session 0: link with channel 0\ndebug1: server_input_channel_open: confirm session\ndebug3: send packet: type 91\ndebug3: receive packet: type 80\ndebug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\ndebug3: receive packet: type 98\ndebug1: server_input_channel_req: channel 0 request subsystem reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req subsystem\ndebug2: subsystem request for powershell by user proxyadmin@myvm\nsubsystem request for powershell by user proxyadmin@myvm failed, subsystem not found\ndebug3: send packet: type 100\nConnection closed by 10.2.8.74 port 58032\ndebug1: channel 0: free: server-session, nchannels 1\ndebug3: channel 0: status: The following connections are open:\n  #0 server-session (t10 r0 i0/0 o0/0 fd -1/-1 cc -1)\nClose session: user proxyadmin@myvm from 10.2.8.74 port 58032 id 0\ndebug3: session_unused: session id 0 unused\ndebug1: do_cleanup\nTransferred: sent 2520, received 1988 bytes\nClosing connection to 10.2.8.74 port 58032\nPS C:\\openssh\\openssh-win64>\nThis is the Cent OS console\nPS /root> Invoke-Command -HostName '10.2.8.32' -username myvm\\proxyadmin -ScriptBlock {get-process}\nmyvm\\proxyadmin@10.2.8.32's password:\n[10.2.8.32] The background process reported an error with the following message: The SSH client session has ended with error message: subsystem request failed on channel 0.\n+ CategoryInfo          : OpenError: (10.2.8.32:String) [], PSRemotingTransportException\n+ FullyQualifiedErrorId : 2100,PSSessionStateBroken\nwhat kind of account is needed for this?   I need to use domain accounts not local accounts\n. My sshd_config \nWhere and how?\n$OpenBSD: sshd_config,v 1.84 2011/05/23 03:30:07 djm Exp $\nThis is the sshd server system-wide configuration file.  See\nsshd_config(5) for more information.\nThis sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin\nThe strategy used for options in the default sshd_config shipped with\nOpenSSH is to specify options with their default value where\npossible, but leave them commented.  Uncommented options override the\ndefault value.\nPort 22\nAddressFamily any\nListenAddress 0.0.0.0\nListenAddress ::\nThe default requires explicit activation of protocol 1\nProtocol 2\nHostKey for protocol version 1\nHostKey /etc/ssh/ssh_host_key\nHostKeys for protocol version 2\nHostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_dsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\nLifetime and size of ephemeral version 1 server key\nKeyRegenerationInterval 1h\nServerKeyBits 1024\nLogging\nobsoletes QuietMode and FascistLogging\nSyslogFacility AUTH\nLogLevel INFO\nAuthentication:\nLoginGraceTime 2m\nPermitRootLogin yes\nStrictModes yes\nMaxAuthTries 6\nMaxSessions 10\nRSAAuthentication yes\nPubkeyAuthentication yes\nThe default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\nbut this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile  .ssh/authorized_keys\nFor this to work you will also need host keys in /etc/ssh/ssh_known_hosts\nRhostsRSAAuthentication no\nsimilar for protocol version 2\nHostbasedAuthentication no\nChange to yes if you don't trust ~/.ssh/known_hosts for\nRhostsRSAAuthentication and HostbasedAuthentication\nIgnoreUserKnownHosts no\nDon't read the user's ~/.rhosts and ~/.shosts files\nIgnoreRhosts yes\nTo disable tunneled clear text passwords, change to no here!\nPasswordAuthentication yes\nPermitEmptyPasswords no\nChange to no to disable s/key passwords\nChallengeResponseAuthentication yes\nKerberos options\nKerberosAuthentication no\nKerberosOrLocalPasswd yes\nKerberosTicketCleanup yes\nKerberosGetAFSToken no\nGSSAPI options\nGSSAPIAuthentication no\nGSSAPICleanupCredentials yes\nSet this to 'yes' to enable PAM authentication, account processing,\nand session processing. If this is enabled, PAM authentication will\nbe allowed through the ChallengeResponseAuthentication and\nPasswordAuthentication.  Depending on your PAM configuration,\nPAM authentication via ChallengeResponseAuthentication may bypass\nthe setting of \"PermitRootLogin without-password\".\nIf you just want the PAM account and session checks to run without\nPAM authentication, then enable this but set PasswordAuthentication\nand ChallengeResponseAuthentication to 'no'.\nUsePAM no\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nGatewayPorts no\nX11Forwarding no\nX11DisplayOffset 10\nX11UseLocalhost yes\nPrintMotd yes\nPrintLastLog yes\nTCPKeepAlive yes\nUseLogin no\nUsePrivilegeSeparation yes\nPermitUserEnvironment no\nCompression delayed\nClientAliveInterval 0\nClientAliveCountMax 3\nUseDNS yes\nPidFile /var/run/sshd.pid\nMaxStartups 10\nPermitTunnel no\nChrootDirectory none\nno default banner path\nBanner none\noverride default of no subsystems\nSubsystem   sftp    sftp-server.exe\nExample of overriding settings on a per-user basis\nMatch User anoncvs\nX11Forwarding no\nAllowTcpForwarding no\nForceCommand cvs server\nPubkeyAcceptedKeyTypes ssh-ed25519*\nhostkeyagent \\.\\pipe\\openssh-ssh-agent. \nsshd_config.txt\nSorry the last post did not include everything so I attached the sshd-config as sshd-config.txt. Hi again\nI tried this \noverride default of no subsystems\nSubsystem   sftp    sftp-server.exe\nSubsystem       tcp     powershell.exe\nStill get the same error \nsubsystem request for powershell by user proxyadmin@myvm failed, subsystem not found\nWhat is the correct syntax?. Update\nI found something and now getting further.\noverride default of no subsystems\nSubsystem   sftp    sftp-server.exe\nSubsystem powershell C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -sshs -NoLogo -NoProfile\nWhen I run this\nPS /root> Invoke-Command -HostName '10.2.8.32' -username myvm\\proxyadmin -ScriptBlock {get-process}\nmyvm\\proxyadmin@10.2.8.32's password:\n[10.2.8.32] The SSH client session has ended with error message: The SSH transport process has abruptly terminated causing this remote session to break.\n+ CategoryInfo          : OpenError: (10.2.8.32:String) [], PSRemotingTransportException\n+ FullyQualifiedErrorId : PSSessionStateBroken\nDebug log\ndebug3.txt\nany ideas?\nUpdate \nI am able to ssh to the Windows 2012 R2 server now\n ssh -l proxyadmin@myvm 10.2.8.32\nThat works I get a CMD window and can type commands no problem\nPS C:\\openssh\\openssh-win64> $PSVersionTable\nName                           Value\n----                           -----\nPSVersion                      5.0.10586.117\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\nBuildVersion                   10.0.10586.117\nCLRVersion                     4.0.30319.42000\nWSManStackVersion              3.0\nPSRemotingProtocolVersion      2.3\nSerializationVersion           1.1.0.1\nIt is powershell still not working.   Can it be the version of Powershell on my Windows 2012 server?\n. added this subsystem\nSubsystem   powershell  C:/Program Files/PowerShell/6.0.0-rc.2/pwsh.exe -sshs -NoLogo -NoProfile\nSTILL POWERSHLL DOES NOT WORK.. Thanks I see that now.\nJut hoping someone can answer this problem.. I got this working now\nHad to install PowerShell 6.0.0-rc2 on my Windows 2012 R2 server\nNow off to see if it will work without OpenSSH\nMark this as closed and resolved. ",
    "fa-itnoobs": "Thanks for your reply, not much of a solution. I will go back to using Putty. Cheers. ",
    "DANIELG1952": "The issue with the enter key in nano can be bypassed. In the /etc folder there is the \u201cnanorc\u201d file in which we can remap some keys. At the end of the file I added 2 lines:\nbind ^S savefile main\nbind ^E enter all\nWhen I edit a file with nano I can use ^S to save the file or ^O and ^E. And to use the enter function (break to new line) in the text I use ^E. \n. Another solution is to install the latest OPENSSH from \nhttp://www.mls-software.com/opensshd.html\nOPENSSL by Microsoft is 7.5 and here we become 7.6.\nThis version has no problem with the keyboard at all.\n. ",
    "mphilipps": "After running into this issue we worked around it by using -o \"Port number\".. ",
    "afcady": "I have got a fix for this that I have made into a script, but before I even upload it here is the most salient part:\n@icacls ssh_host_*_key /grant \"NT Service\\sshd\":(R)        >NUL\n@icacls ssh_host_*_key /remove \"%COMPUTERNAME%\\%USERNAME%\" >NUL\n@icacls ssh_host_*_key /inheritance:r                      >NUL\n@icacls ssh_host_*_key /grant \"BUILTIN\\Administrators:(F)\" >NUL\n@icacls ssh_host_*_key /grant \"NT AUTHORITY\\SYSTEM:(F)\"    >NUL\n\nOf course this should be patched into ssh-keygen.exe -- that is what is leaving the wrong permissions.\nI have a .bat wrapper called ssh_keygen_works.bat that just runs ssh-keygen -A and then fixes the permissions like above.  I will put it into the tree here and make a pull request.\nBy the way the permissions requirements are available by reading the code around here:\nhttps://github.com/PowerShell/Win32-OpenSSH/blob/c4d0727338f1134bbe6a1f7631f73773a8f89fa9/contrib/win32/win32compat/w32-sshfileperm.c#L94-L99\n. Here's a direct link to ssh_keygen_works.bat:\nhttps://raw.githubusercontent.com/afcady/Win32-OpenSSH/61fc955c1d1c1d51b917f5d8e83f6d9acf800d95/contrib/win32/openssh/ssh_keygen_works.bat. @manojampalam if that's true, fixing the underlying issue in ssh-keygen.exe should be easy: just use the code that is used by sshd to set the permissions.\nDo you know where that code is?. Found this commit (in a different repo!)\nhttps://github.com/PowerShell/openssh-portable/commit/32ff0c2aedbbf0c03a2bfbf34f922845ddc3191e\nHowever, it appears that it only calls ssh-keygen.exe -A, and does not appear to fix any permissions explicitly..  It is still useful to be able to correct the permissions on the existing files.  (You might not want to generate new keys, for example.  How would you, without the script, restore keys from backup?)\nThere is also another (very complicated) script already in the repo that does this, that the people in the bug report were not having luck with.  (FixHostFilePermissions.ps1).  . Haha, look at the line counts, and the dependencies, and the complexity.... ",
    "KarlM256": "Thanks\nOn Feb 23, 2018 22:36, \"Manoj Ampalam\" notifications@github.com wrote:\n\nUser name part should be fixed in the next release\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1013#issuecomment-368204987,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ANMtWWGymn1lYFWPxVEStdkBsZsy8Z0nks5tX63PgaJpZM4RblaX\n.\n. \n",
    "gfb1": "Updates, anyone?\nWindows to Linux ssh server. command line ssh works, but identical error when invoking ssh from Unison.. \nall prior notations are repetitive..... No, I do not. I'll have to look up how to set them.  Thanks!. ",
    "Magneticdud": "the problem is that windows 10 ssh.exe can't be invoked by this app, as instead plink and cygwin ssh can be invoked. Example:\n\nit's not a path problem, because it can't find it even if i force the full path via argument:\n. File history is not a backup, it's more like a \"safety net\"\nIf your computer crashes, your private keys are still lost, as they're not backed up\n\nFile History only backs up copies of files that are in the Documents, Music, Pictures, Videos, and Desktop folders and the OneDrive files available offline on your PC.\n\nby default it doesn't does a backup of the private key\nand if you backup the private keys with it... it's a plain copy, unencrypted. Anyone with access to your backup files would have unlimited access to your server. It's the digital equivalent of writing down a password on a post it on the monitor.\nIf you strongly need to backup the private key, you should use a secure way, like as an attachment to a KeePass entry (as it equals to a password)\nOr... if lost, just recreate it and reauthorize the new one on the server.. ",
    "Ede123": "I'm seeing the same issue in Unison 2.48.3.\nAdding C:/windows/system32/OpenSSH to path and running Unison resulted in No such file or directory [create_process(ssh)].\nWhat worked however was copying \"ssh.exe\" to the Unison directory.. ",
    "dfmuscat": "This is fine for install-win32 but what about the X64 version. All the blogs/comments are for 32bit. I do not hear anything from the contributors for X64 platform, Not sure if 64bit is being addressed\n. ",
    "MartinSGill": "Well now that you've pointed it out... I can see the problem... it's the -f  alias for string.format.\nI guess that's why PS has the --% operator.\nThanks for clearing that up. Still think it's a bug though... not sure if it's a Powershell or OpenSSH bug though.... It would be convenient if an alias were provided, but I agree, it's by design, annoying as it is.. ",
    "jabdr": "It works with the latest release. I used the optionalfeature installation of Windows 10. I thought this would install the latest version. Sorry.. ",
    "D-fazeli": "@bagajjal You may also be interested in how to set up access to Windows? Is there a training on this topic on YouTube or etc?\nthanks a lot. :) thanks @bagajjal . I solved it.\nperm@WIN-SPKTE2V2UQN C:\\Users\\perm>cd ..                                                                                        \nAccess is denied.                                                                                                               \nperm@WIN-SPKTE2V2UQN C:\\Users\\perm>. ",
    "WSLUser": "Any updates to this?. ",
    "fcharlie": "OK thanks.. ",
    "ronindesign": "Just wasted 2 hours on this.. ",
    "tecfu": "Same problem. Emphasis on this issue in the installation docs recommended. . Had same issue. Was a permissions error. Must always install as administrator. Right click powershell and \"Run as Administrator\" during install.. ",
    "wlsfan": "@asterikx I did not set the Agent key.. I replaced the existing ssh-shellhost.exe with your private ssh-shellhost.exe and rebooted.\nNote, the Get-DefaultShell was not included in the ssh-shellhost-DefaultShell-Issue.zip.\nAlso I did not see an error message.  I don't know if this matters but the ssh-shellhost.exe provided shows a File version: 0.0.23.0.  Here is the output of the client:\n\n. I did a copy and paste with same result...\n\n. I also tried it with the \"\" and with putty client.\n\n. I am pretty sure.  Here is the listing:\n\n. No error code on connect but when I issued the Get-DefaultShell I get the following message:\n\n. I reinstalled Ubuntu on the server side and now when I ssh into the server with no-pty-session  I see the default configured shell however I see no prompt and my commands are just echoed back.  See below:\n\nWhen I ssh without the -T option I now receive the following error:\n\n. As JadedDragoon pointed out I also see the error message in the event viewer:\n\n. ",
    "JadedDragoon": "Through my own troubleshooting, this appears to be a problem with Component Services permissions... at least on my system. I'm not certain this is the case... it could be coincidence, but I thought I'd share.\nIn my case there is an error in Event Viewer in Windows Logs > System about this. The source will be \"DistributedCOM\". It will look something like this:\n\nFor me, this error appears in Event Viewer each time I try to connect remotely while bash.exe is set as my default shell.\nThe issue appears to be that this component (appid {E82567AE-2EA4-4DBC-BC68-8B0A0526D8D5} on my system) cannot be started by bash.exe. The error says it lacks local activation permission but when I check in Component Services > DCOM Config I see this:\n\n\n. ",
    "jps-aldridge": "I downloaded the most recent version (scp.exe has File version = 1.0.0.0, and Date modified = 19-Jan-18 23:41). It no longer gives a 'dup() in/out/err failed', but instead hangs indefinitely until I give a Ctrl-C.\nI can copy the file in both directions via an explicit local temporary file without problem:\nD:\\>d:\\OpenSSH-Win64\\scp.exe pi@sparepi.lan:a.txt .\\temp.tmp\na.txt\n\nD:\\>d:\\OpenSSH-Win64\\scp.exe .\\temp.tmp pi@sparepi.lan:b.txt\ntemp.tmp\nbut doing the equivalent in one step\nD:\\>d:\\OpenSSH-Win64\\scp.exe -3 pi@sparepi.lan:a.txt pi@sparepi.lan:b.txt\njust hangs.. ",
    "lupo1977": "I found at least one bug in scp.c related to the command line argument -3. It may also be related to the issue here.\nThis bug is inside the OpenSSH core code, so I guess it will make no sense to raise a PR for this?. Ok, I see.\nOf Course, I can perfectly compile \"openssh-portable\" under Linux.\nBut this branch is able to compile under Windows but not under Linux. Why this is not possible?\nAnd it seems to be feasible to change this to be able to compile also with Linux.\n. Yes, perhaps the benefit is not that much in general. But now you have to maintain a particular branch for win32.\nFor me it is neat to be able to compile and debug under Windows and still have the opportunity to compile, deploy and run under Linux too.\nBut this is surely just a matter of taste.\nThanks.. Yes, the surounding code in this module contains more issues.\n. Seems to be fixed now.. Should be ok now.. Now I only fixed the bug for windows and kept the old code intact.. Thanks for the hint. Hope it is ok now.. Ok, got it. My mistake. Will raise another PR in the other branch.\nOn 8 Feb 2018 8:34 p.m., \"Manoj Ampalam\" notifications@github.com wrote:\n\nMerged #1059 https://github.com/PowerShell/Win32-OpenSSH/pull/1059.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/pull/1059#event-1465297226,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFsSv0GPitwTR5kzZV-Z6msfXYY-Ua3Oks5tS0pAgaJpZM4R3_jB\n.\n. Ok, got it.. \n",
    "nitzmahone": "@manojampalam Agree 100% with @jborean93 - the job handling is a fine way to deal with cleaning up after a session closes, but processes that explicitly request breakaway should be allowed to do so (ala nohup on POSIX systems).. ",
    "RDCH106": "Hi!\nI am using Win32-OpenSSH and have read this issue searching a solution to the process killing when the ssh connection is closed.\nAccording to the release notes version v7.6.0.0p1-Beta let applications break away from ssh session. I am using version v7.6.1.0p1-Beta 64 bits version but I can not launch processes in background and they don't continue working when the ssh session is closed.\nWhat is the way to achieve this?\nThanks in advance!. @jborean93  Thanks for your answer!. ",
    "DerekBennett": "I am using OpenSSH-Win64-v7.7.0.0p1-Beta to invoke a BAT file remotely. The BAT file sets some environment variables and then calls START \"\" someprogram.exe. This used to work just fine in prior releases of SSH. Now, however, START no longer works. Instead the someprogram.exe instance dies as soon as the BAT file exits. Is this a bug, or should I be doing something differently?. done\nOn Thu, Jun 21, 2018 at 12:01 PM Manoj Ampalam notifications@github.com\nwrote:\n\n@DerekBennett https://github.com/DerekBennett can you please open a new\nissue and add a reference to this thread?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1032#issuecomment-399155760,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABz_P9sEOjKl_UPLf2Jm7KIKnFsJ-Xvoks5t-8NugaJpZM4RpQiq\n.\n\n\n-- \nDerek Bennett\nDerek@TheBennetts.org\n1.917.968.8982\n. ",
    "ne0c0de": "Hi @pcgeek86 \nDid you solve your problem?\nI'm also experiencing same problem. Unfortunately this if first time that i'm using OpenSSH so i've no idea it was working before.\nHere's what i did:\non sshd_config file:\nPubkeyAuthentication yes\nAuthorizedKeysFile  C:/Users/si/.ssh/authorized_keys\nsshd service restarted.\nWhen i try to login with ssh -vvv i see this result before connection lost:\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred gssapi-keyex,gssapi-with-mic,publickey,keyboard-interactive\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: .ssh/id_rsa\ndebug3: send_pubkey_test\ndebug2: we sent a publickey packet, wait for reply\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive\ndebug3: remaining preferred:\ndebug3: authmethod_is_enabled keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug2: userauth_kbdint\ndebug2: we sent a keyboard-interactive packet, wait for reply\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: userauth_kbdint: disable: no info_req_seen\ndebug2: we did not send a packet, disable method\ndebug1: No more authentication methods to try.\nPermission denied (publickey,password,keyboard-interactive).\nwhen i stop the sshd service and start it from powershell with debug command, it's directly closing itself when i want to login with private key. the debug result of sshd is like this:\nC:\\Program Files\\OpenSSH> ./sshd.exe -ddd\ndebug2: load_server_config: filename PROGRAMDATA\\ssh/sshd_config\ndebug2: load_server_config: done config len = 228\ndebug2: parse_server_config: config PROGRAMDATA\\ssh/sshd_config len 228\ndebug3: PROGRAMDATA\\ssh/sshd_config:34 setting PubkeyAuthentication yes\ndebug3: PROGRAMDATA\\ssh/sshd_config:40 setting AuthorizedKeysFile C:/Users/si/.ssh/authorized_keys\ndebug3: PROGRAMDATA\\ssh/sshd_config:57 setting AllowTcpForwarding yes\ndebug3: PROGRAMDATA\\ssh/sshd_config:70 setting PermitTunnel yes\ndebug3: PROGRAMDATA\\ssh/sshd_config:78 setting Subsystem sftp      sftp-server.exe\ndebug1: sshd version OpenSSH_7.6, LibreSSL 2.5.3\ndebug1: private host key #0: ssh-rsa SHA256:Lvp0UxVMnrsJZUWdDhqhoaXCZ7RTZnjInzvxUjATgC4\ndebug1: private host key #1: ssh-dss SHA256:lms8s7J5meGxxBcKQx/azZbWHC4XXT29bRRT81NhvJU\ndebug1: private host key #2: ecdsa-sha2-nistp256 SHA256:abg7NKA44zP3FR1j5opBNc0iJ0BzpNl5euKccMK3BYg\ndebug1: private host key #3: ssh-ed25519 SHA256:zhaL6xmFWF3crxvYWKzD8+IyNOMRImdlBvfTa9fSjEI\ndebug1: rexec_argv[0]='C:\\Program Files\\OpenSSH\\sshd.exe'\ndebug1: rexec_argv[1]='-ddd'\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug3: fd 5 is not O_NONBLOCK\ndebug1: Server will not fork when running in debugging mode.\ndebug3: send_rexec_state: entering fd = 8 config len 228\ndebug3: ssh_msg_send: type 0\ndebug3: send_rexec_state: done\nConnection from 192.168.56.100 port 47426 on 192.168.56.1 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_6.6.1p1 Ubuntu-2ubuntu2\ndebug1: match: OpenSSH_6.6.1p1 Ubuntu-2ubuntu2 pat OpenSSH_6.6.1* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_7.6\ndebug2: fd 5 setting O_NONBLOCK\nunable to generate token for user sshd\nunable to generate token on 2nd attempt for user sshd\nunable to get security token for user sshd\nposix_spawn failed\ndebug3: send_rexec_state: entering fd = 4 config len 228\ndebug3: ssh_msg_send: type 0\ndebug3: write ERROR from cb(2):232, io:000002E7607FDE50\nssh_msg_send: write\nsend_rexec_state: ssh_msg_send failed\ndebug1: do_cleanup\ni'm not sure that sshd service (that is already registered before) is reading same sshd_config file (which is located under C:\\ProgramData\\ssh\nHow can i resolve this problem?\n. ",
    "bgola": "thanks, this works.. ",
    "Velocet": "Works fine when supplying a passphrase.\nGenerating public/private ed25519 key pair.\nEnter file in which to save the key (C:\\Users\\Velocet/.ssh/id_ed25519):\nC:\\Users\\Velocet/.ssh/id_ed25519 already exists.\nOverwrite (y/n)? y\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in C:\\Users\\Velocet/.ssh/id_ed25519.\nYour public key has been saved in C:\\Users\\Velocet/.ssh/id_ed25519.pub.\nThe key fingerprint is:\nSHA256:bZpbAz8FGAj+ScT0NZj24zCRN+SxRDQnBUr5sWKw59A Velocet@CUBE@Cube\nThe key's randomart image is:\n+--[ED25519 256]--+\n|    .+o.oO%oo    |\n|   . .+oBB+B     |\n|    . .=+=++     |\n|     oo.E.=.     |\n|      o=S=o..    |\n|        .*..     |\n|        o =      |\n|         o o     |\n|        .        |\n+----[SHA256]-----+. I got this from \"Using the OpenSSH Beta in Windows 10 Fall Creators Update and Windows Server 1709\".\nThanks for the clarification.. ssh-add is an application (in $env:windir\\System32\\OpenSSH) not a file or cmdlet. Afaik PowerShell uses by default the current path, so .\\ isn't needed normally.\nThe problem is not related to a wrong path but a missing connection to the service (ssh-agent) when called in PowerShell. Strange error \ud83e\udd14 \n```PowerShell\nPS ~.ssh> ssh-add .\\id_ed25519\nError connecting to agent: No such process\nPS ~.ssh> .\\ssh-add id_ed25519\nThe term 'ssh-add' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.\nAt line:1 char:1\n+ .\\ssh-add id_ed25519\n+ ~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (.\\ssh-add:String) [], CommandNotFoundException\n    + FullyQualifiedErrorId : CommandNotFoundException\n``. ssh-agent is running otherwise it wouldn't work when invoked incmd.exe`. This seems to be a PowerShell specific problem. I also restarted the service with no effect.\n```PowerShell\nPS ~.ssh> Get-Service -Name 'ssh-agent'\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  ssh-agent          ssh-agent\n``. I also thought about that in the first place and checked which binary gets called. I do have git installed which comes with it's ownssh-add.exebinary but this one throws an error if called explicitly in the command prompt. So it's impossible that another ssh-add binary is called.SSH_AUTH_SOCK` isn't present in PowerShell or command prompt.\ncmd.exe\nBatchFile\nC:\\Users\\Velocet>where ssh-add\nC:\\Windows\\System32\\OpenSSH\\ssh-add.exe\n```BatchFile\nC:\\Program Files\\Git\\usr\\bin>ssh-add.exe\nCould not open a connection to your authentication agent.\nC:\\Users\\Velocet.ssh>ssh-add.exe\nIdentity added: id_ed25519 (Velocet@CUBE@Cube)\n```\nPowerShell\n```PowerShell\nPS ~> Get-Command -Name 'ssh-add.exe'\nCommandType Name        Version  Source\n----------- ----        -------  ------\nApplication ssh-add.exe 0.0.18.0 C:\\WINDOWS\\System32\\OpenSSH\\ssh-add.exe\n```\n```PowerShell\nPS C:\\Program Files\\Git\\usr\\bin> .\\ssh-add.exe\nError connecting to agent: Connection refused\nPS ~.ssh> ssh-add\nError connecting to agent: No such process\n```. ",
    "idvorkin": "I'm still experiencing this bug, so I'm assuming it's still open.  Any reason not to keep this bug open so users can track the issue being resolved?  Also, how can users provide input to the conhost team? . ",
    "Gonkers": "I second what @idvorkin says. I'm having the issue on my work laptop as well as my home PC. I'd love to submit diagnostic data if it will help resolve the issue faster.. ",
    "effebi68": "The problem above was due to DaRT internal firewall; nevertheless, even disabling it I still can't login as SYSTEM.\nThat said: any plan to support OpenSSH server in WinPE / WinRE / DaRT environments? I am pretty sure we are not the only ones looking for it (in our case, as a fallback whenever a proper deployment environment fails).. I am pretty sure users can be created, because I did it myself to install\nOpenSSH daemon; I do not know whether they can log in, but I'll try that\nfor sure: getting OpenSSH running would be a pretty good reward.\nThanks a lot; best regards\nFederico Bianchi\n2018-01-29 18:59 GMT+01:00 Manoj Ampalam notifications@github.com:\n\nRight now, logging in as SYSTEM is not supported. You'll need to create a\nuser account explicitly (not sure if that's possible on WinPE) and use\nthose credentials.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1040#issuecomment-361330869,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABqyGM6pIxo6LCNRwC2QWYAOc2tw3abaks5tPgbrgaJpZM4RwRjx\n.\n. \n",
    "1980srefugee": "PS version 5 for both and yes a fresh console for both.\nRebooted both systems and tried.. So what I found was that setting windows default shell to powershell resolved this issue.\nIs that expected behavior?\nIf so, please close out.\nI assumed this would be setup on install.\n. ",
    "Edasich": "With the April update, this problem happens when a $env:DISPLAY environment variable is set in powershell.\nSetting this variable will let the ssh refuse to connect if a remote host has not been added to ~/.ssh/known_hosts. ",
    "Moosemorals": "I'm getting the same problem, I think.\nOpenSSH_for_Windows_7.6p1, LibreSSL 2.6.4\nPSVersion                      5.1.17134.407\nThe remote host is in known_hosts, and I'm trying to password authenticate. I get prompted for a password when $env:DISPLAY is not set, and I don't when it is.\nPS C:\\Users\\USER> ssh -v ptah.example.com\n\nOpenSSH_for_Windows_7.6p1, LibreSSL 2.6.4\ndebug1: Reading configuration data C:\\\\Users\\\\USER/.ssh/config\ndebug1: C:\\\\Users\\\\USER/.ssh/config line 6: Applying options for ptah\ndebug1: Connecting to ptah.example.com [192.168.0.61] port 22.\ndebug1: Connection established.\ndebug1: identity file C:\\\\Users\\\\USER/.ssh/id_rsa type 0\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\USER/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\USER/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\USER/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\USER/.ssh/id_ecdsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\USER/.ssh/id_ecdsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\USER/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\\\Users\\\\USER/.ssh/id_ed25519-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.6\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.4p1 Debian-10+deb9u4\ndebug1: match: OpenSSH_7.4p1 Debian-10+deb9u4 pat OpenSSH* compat 0x04000000\ndebug1: Authenticating to ptah.example.com:22 as 'osric'\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:cCuuMDbMB3b1vVXovs/wks9G+Kg1HGxMzXYyp0JkIyY\ndebug1: Host 'ptah.example.com' is known and matches the ECDSA host key.\ndebug1: Found key in C:\\\\Users\\\\USER/.ssh/known_hosts:5\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: rekey after 134217728 blocks\ndebug1: pubkey_prepare: ssh_get_authentication_socket: No such file or directory\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=<ssh-ed25519,ssh-rsa,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521>\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey,password\ndebug1: Next authentication method: publickey\ndebug1: Offering public key: RSA SHA256:mTpaRVnyNZjKfeN4xfbbn3Lnbu3hKF7SS4pvsV8gBmA C:\\\\Users\\\\USER/.ssh/id_rsa\ndebug1: Authentications that can continue: publickey,password\ndebug1: Trying private key: C:\\\\Users\\\\USER/.ssh/id_dsa\ndebug1: Trying private key: C:\\\\Users\\\\USER/.ssh/id_ecdsa\ndebug1: Trying private key: C:\\\\Users\\\\USER/.ssh/id_ed25519\ndebug1: Next authentication method: password\ndebug1: read_passphrase: can't open /dev/tty: No such file or directory\nCreateProcessW failed error:2\nssh_askpass: posix_spawn: No such file or directory\ndebug1: Authentications that can continue: publickey,password\nPermission denied, please try again.\ndebug1: read_passphrase: can't open /dev/tty: No such file or directory\nCreateProcessW failed error:2\nssh_askpass: posix_spawn: No such file or directory\ndebug1: Authentications that can continue: publickey,password\nPermission denied, please try again.\ndebug1: read_passphrase: can't open /dev/tty: No such file or directory\nCreateProcessW failed error:2\nssh_askpass: posix_spawn: No such file or directory\ndebug1: Authentications that can continue: publickey,password\ndebug1: No more authentication methods to try.\nosric@ptah.example.com: Permission denied (publickey,password).\n\n. DISPLAY is set because I'm running an X server on my desktop and I want to have remote X clients displaying.\nSpecifically, I think its easier for me to set DISPLAY on my local desktop and get SSH to sort it out on the remote side.. ",
    "jchristman": "Yeah the sshd.exe had RX for Users. Ended up doing a\nicacls * /grant Users:RX\nicacls *key* /remove Users\nThat fixed the problem. It's weird though cause I could have sworn I tried that a while back. Thanks for the help.. ",
    "alberaguilarfdez": "Thanks manojampalam. I understand then that it is not possible.\nI tried to solve the problem by starting the sshd service with another user than the Local System (thus making an impersonalization; it would be a domain user), but although the sshd service starts, authentication does not work. The error that leaves in the log is:\n4516 2018-01-31 10:41:36.798 debug1: Bind to port 22 on ::.\n4516 2018-01-31 10:41:36.798 Server listening on :: port 22.\n4516 2018-01-31 10:41:36.799 debug1: Bind to port 22 on 0.0.0.0.\n4516 2018-01-31 10:41:36.799 Server listening on 0.0.0.0 port 22.\n4436 2018-01-31 10:41:56.108 debug1: inetd sockets after dupping: 3, 3\n4436 2018-01-31 10:41:56.108 Connection from X.X.X.X port 63816 on X.X.X.X port 22\n4436 2018-01-31 10:41:56.110 debug1: Client protocol version 2.0; client software version OpenSSH_5.1\n4436 2018-01-31 10:41:56.110 debug1: match: OpenSSH_5.1 pat OpenSSH_5* compat 0x0c000000\n4436 2018-01-31 10:41:56.110 debug1: Local version string SSH-2.0-OpenSSH_7.6\n4436 2018-01-31 10:41:56.111 error: unable to generate token for user sshd\n4436 2018-01-31 10:41:58.373 error: unable to generate token on 2nd attempt for user sshd\n4436 2018-01-31 10:41:58.373 error: unable to get security token for user sshd\n4436 2018-01-31 10:41:58.373 error: posix_spawn failed\n4436 2018-01-31 10:41:58.374 error: ssh_msg_send: write\n4436 2018-01-31 10:41:58.374 fatal: send_rexec_state: ssh_msg_send failed\n4436 2018-01-31 10:41:58.374 debug1: do_cleanup\nI have added the local user sshd in different local security policies (create a token object, replace a process level token) but I still cannot access it. Is the start of the sshd service supported with a domain user to be able to impersonate?\nRegards.. ",
    "salamoun": "I have same problem.\nI want connect to server that is inside domain. I want to connect with AD account.\nWhen using password all is working fine. When using public key auth, then I end with broken pipe error NetUserGetInfo() with domainController:  failed with error: 5.\nSo I try to change sshd running as domain admin account, but then I end with error: unable to generate token for user sshd.\nSo, is it possible to use OpenSSH server, with pub key auth and domain account?. ",
    "github-cygwin": "\nFrom a client I am able to authenticate correctly to the server, using both username/password and through public/private key. But there is a difference ... if I authenticate using username/password I access the content of the mount points without problems. If I authenticate using public/private keys it gives me an access denied error.\nFrom what I have been able to read this problem it seems that it has also happened with the server sshd of cygwin.\n\nNo, that's not true.  In Cygwin you can use three different types of creating a user token for switching the user context.  One of them allows immediate access to network shares.\nFor details, see https://cygwin.com/cygwin-ug-net/ntsec.html#ntsec-setuid-overview\nCorinna. > Curious... does Method 3 continue to work after Credential Guard is activated?\nI don't know.  I'm reading of Credential Guard for the first time.  I guess somebody will have to test it :wink:\nCorinna. Accepted.   However, I sent a patch upstream a couple of minutes ago which changes the Cygwin sshd installer script to use the service name \"cygsshd\" by default in future.  I expect this will go into upstream OpenSSH 8.0.\nYou may want to tweak your Wiki entry to mention this problem specificially for existing Cygwin installations.\nOne other point though:\nA Windows update actually removes an existing Cygwin sshd installation and replaces it with Win32 OpenSSH.  This is extremly disruptive and very certainly not what the user wants.\nOn a test installation I was unable to login with pubkey auth and it took me quite some time to realize I'm running the wrong service!\nSo please change your update procedure to install the sshd service only if it doesn't already exist.\nThanks,\nCorinna. Btw., how big is the chance that you rename your service rather than that we have to step aside?\nSomething like \"w32sshd\" would work for you, too.\nCorinna. ",
    "stevehipwell": "There is an issue with this release related to the registry path HKEY_LOCAL_MACHINE\\SOFTWARE\\OpenSSH which appears to be missing in the latest version.. I also generated mine with ssh-keygen without arguments.. @the1derer if you're replying to the original issue please see that the command used was ssh-add without any arguments.. ",
    "wigster": "Just installed 7.6.1 (first ssh install) on Win10.\nRunning Start-Service ssh-agent results in error cannot find any service with that name.. Thanks, that worked!. ",
    "khx71": "Hi there\nthank you for the quote. It doesn't help (as you stated this is a security feature of Windows) but explains ;). I meanwhile worked around the issue disabling PKA and specifying the Password in every call using \nsshpass -f <(printf '%s\\n' $WINDOWS_PASSWORD) ssh $WINDOWS_SERVICE_USER@$WINDOWS_SERVER_IP\nRegards. ",
    "tsd64": "This is incorrect behavior.  The server is being started from a Windows DOS prompt, and has nothing to do with the client.. There is only the one sshd.exe, and the 0.0.22.0 version worked like a Windows application, not a Unix one.  If this is the desired behavior, then the product isn't going to work for a Windows implementation.. When did that change?  The -d option was always debug mode?  Also, you still didn\u2019t answer forcing to add options to that shouldn\u2019t be needed.\nFrom: Manoj Ampalam notifications@github.com\nSent: Monday, November 5, 2018 4:19 PM\nTo: PowerShell/Win32-OpenSSH Win32-OpenSSH@noreply.github.com\nCc: Tim Dineen Tim.Dineen@sas.com; Author author@noreply.github.com\nSubject: Re: [PowerShell/Win32-OpenSSH] Win32-OpenSSH isn't for Windows (#1286)\nEXTERNAL\nClosed #1286https://github.com/PowerShell/Win32-OpenSSH/issues/1286.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/PowerShell/Win32-OpenSSH/issues/1286#event-1947396675, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AiWBug1Rb3whxosz5QS_qx4Uc0KVfHbXks5usKs4gaJpZM4YPRl_.\n. ",
    "parejadan": "any update on this?. Right, so really I'm trying to just setup the openssh server using this guide https://poweruser.blog/enabling-the-hidden-openssh-server-in-windows-10-fall-creators-update-1709-and-why-its-great-51c9d06db8df\nI'm running this command from windows side, NOT unix. Doens't really make sense to execute an exe on the unix side.\n\nI've tried modifying the sshd_config_default (can't seem to get passed the write restriction), also tried to create a sshd_config, and specifying the path to my rsa_key. Is there any reliable guide out there for utilizing the openssh server for windows?. Notes for anyone trying to setup wsl as an external ubuntu server\n- Follow official guide https://blogs.msdn.microsoft.com/powershell/2017/12/15/using-the-openssh-beta-in-windows-10-fall-creators-update-and-windows-server-1709/\n- If anything fails with __PROGRAMDATA__, add %PROGRAMDATA% to environment variable path, reboot\n- If any of the guide steps fail after installing something, reboot\n- default location the ssh_host_ed25519_key is C:\\ProgramData\\ssh (different from what's specified in official guide)\nProof - remote into windows laptop via macbook pro\n\n. ",
    "jgiles": "I'm seeing this exact issue currently - would you mind elaborating on the cause and fix?\nThanks!\nJosh. ",
    "friederschueler": "```\nConnection from 192.168.0.96 port 52625 on 192.168.0.116 port 22\ndebug1: Client protocol version 2.0; client software version PuTTY_Release\ndebug1: no match: PuTTY_Release_0.70\ndebug1: Local version string SSH-2.0-OpenSSH_7.6\ndebug2: fd 5 setting O_NONBLOCK\nunable to generate token for user sshd\nunable to generate token on 2nd attempt for user sshd\nunable to get security token for user sshd\nposix_spawn failed\ndebug3: send_rexec_state: entering fd = 4 config len 152\ndebug3: ssh_msg_send: type 0\ndebug3: write ERROR from cb(2):232, io:0081CEF0\nssh_msg_send: write\nsend_rexec_state: ssh_msg_send failed\ndebug1: do_cleanup\nC:\\Program Files (x86)\\OpenSSH>\n```\nI still get this error after allowing network access via secpol.msc for user sshd. I restarted my VM and checked the windows logs, but no hints. Any ideas?\n\"OpenSSH for Windows\" version\nv1.0.0.0-Beta on Windows 7 Enterprise SP1. ",
    "johnny5janbohac": "I have similiar issue with sshd user token, but difference is that during authentication is logged error \"Unknown username or bad password\" and user \"FakeUser\" Any tips ?\n`An account failed to log on.\nSubject:\n    Security ID:        MYCZSW1DL015245\\sshd\n    Account Name:       sshd\n    Account Domain:     MYCZSW1DL015245\n    Logon ID:       0xa4f897f5\nLogon Type:         8\nAccount For Which Logon Failed:\n    Security ID:        NULL SID\n    Account Name:       FakeUser\n    Account Domain:     FakeDomain\nFailure Information:\n    Failure Reason:     Unknown user name or bad password.\n    Status:         0xc000006d\n    Sub Status:     0xc0000064\nProcess Information:\n    Caller Process ID:  0x2f90\n    Caller Process Name:    C:\\Users\\adm-123024594.MBID\\Desktop\\OpenSSH-Win32\\sshd.exe\nNetwork Information:\n    Workstation Name:   MYCZSW1DL015245\n    Source Network Address: -\n    Source Port:        -\nDetailed Authentication Information:\n    Logon Process:      Advapi\n    Authentication Package: Negotiate\n    Transited Services: -\n    Package Name (NTLM only):   -\n    Key Length:     0\nLogon Type:         8\nAccount For Which Logon Failed:\n    Security ID:        NULL SID\n    Account Name:       FakeUser\n    Account Domain:     FakeDomain\nFailure Information:\n    Failure Reason:     Unknown user name or bad password.\n    Status:         0xc000006d\n    Sub Status:     0xc0000064\nProcess Information:\n    Caller Process ID:  0x2f90\n    Caller Process Name:    C:\\Users\\adm-123024594.MBID\\Desktop\\OpenSSH-Win32\\sshd.exe\nNetwork Information:\n    Workstation Name:   MYCZSW1DL015245\n    Source Network Address: -\n    Source Port:        -\nDetailed Authentication Information:\n    Logon Process:      Advapi\n    Authentication Package: Negotiate\n    Transited Services: -\n    Package Name (NTLM only):   -\n    Key Length:     0`. ",
    "lencap": "According to https://github.com/PowerShell/Win32-OpenSSH/issues/253, the problem is that one needs to use 'domain\\user'@server if it's a domain account one is using to logon to server.. ",
    "ericcurtin": "Tried the suggested workarounds. Didn't seem to work for me, in the end I used cygwin openssh-server 7.7 which worked fine:\nhttps://www.ibm.com/support/knowledgecenter/en/SSPLFC_7.2.2/com.ibm.taddm.doc_7.2.2/AdminGuide/t_cmdb_configcygwin.html\n. ",
    "phocean": "Same issue here. Installation instruction also feels rather incomplete.. ",
    "olegblecher": "Having the same issue exactly, but only with AD-users. Works perfectly with the local user.. ",
    "smayott": "As requested\nsshd_config:\n$OpenBSD: sshd_config,v 1.84 2011/05/23 03:30:07 djm Exp $\nThis is the sshd server system-wide configuration file.  See\nsshd_config(5) for more information.\nThis sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin\nThe strategy used for options in the default sshd_config shipped with\nOpenSSH is to specify options with their default value where\npossible, but leave them commented.  Uncommented options override the\ndefault value.\nAddressFamily inet\nPort 22\nAddressFamily any\nListenAddress 0.0.0.0\nListenAddress ::\nThe default requires explicit activation of protocol 1\nProtocol 2\nProtocol 1\nHostKey for protocol version 1\nHostKey /etc/ssh/ssh_host_key\nHostKeys for protocol version 2\nHostKey /etc/ssh/ssh_host_rsa_key\nHostKey /etc/ssh/ssh_host_dsa_key\nHostKey /etc/ssh/ssh_host_ecdsa_key\nLifetime and size of ephemeral version 1 server key\nKeyRegenerationInterval 1h\nServerKeyBits 1024\nLogging\nobsoletes QuietMode and FascistLogging\nSyslogFacility AUTH\nLogLevel INFO\nLogLevel DEBUG3\nAuthentication:\nLoginGraceTime 2m\nPermitRootLogin yes\nStrictModes yes\nMaxAuthTries 6\nMaxSessions 10\nRSAAuthentication yes\nPubkeyAuthentication yes\nThe default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\nbut this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile  .ssh/authorized_keys\nFor this to work you will also need host keys in /etc/ssh/ssh_known_hosts\nRhostsRSAAuthentication no\nsimilar for protocol version 2\nHostbasedAuthentication no\nChange to yes if you don't trust ~/.ssh/known_hosts for\nRhostsRSAAuthentication and HostbasedAuthentication\nIgnoreUserKnownHosts no\nDon't read the user's ~/.rhosts and ~/.shosts files\nIgnoreRhosts yes\nTo disable tunneled clear text passwords, change to no here!\nPasswordAuthentication yes\nPermitEmptyPasswords no\nChange to no to disable s/key passwords\nChallengeResponseAuthentication yes\nKerberos options\nKerberosAuthentication no\nKerberosOrLocalPasswd yes\nKerberosTicketCleanup yes\nKerberosGetAFSToken no\nGSSAPI options\nGSSAPIAuthentication no\nGSSAPICleanupCredentials yes\nSet this to 'yes' to enable PAM authentication, account processing,\nand session processing. If this is enabled, PAM authentication will\nbe allowed through the ChallengeResponseAuthentication and\nPasswordAuthentication.  Depending on your PAM configuration,\nPAM authentication via ChallengeResponseAuthentication may bypass\nthe setting of \"PermitRootLogin without-password\".\nIf you just want the PAM account and session checks to run without\nPAM authentication, then enable this but set PasswordAuthentication\nand ChallengeResponseAuthentication to 'no'.\nUsePAM no\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nGatewayPorts no\nX11Forwarding no\nX11DisplayOffset 10\nX11UseLocalhost yes\nPrintMotd yes\nPrintLastLog yes\nTCPKeepAlive yes\nUseLogin no\nUsePrivilegeSeparation yes\nPermitUserEnvironment no\nCompression delayed\nClientAliveInterval 0\nClientAliveCountMax 3\nUseDNS yes\nPidFile E:\\OpenSSH-Win32\\logs\\sshd.pid\nMaxStartups 10\nPermitTunnel no\nChrootDirectory none\nno default banner path\nBanner none\noverride default of no subsystems\nSubsystem   sftp    sftp-server.exe\nSubsystem  scp     scp.exe\nExample of overriding settings on a per-user basis\nMatch User anoncvs\nX11Forwarding no\nAllowTcpForwarding no\nForceCommand cvs server\nPubkeyAcceptedKeyTypes ssh-ed25519*\nhostkeyagent \\.\\pipe\\openssh-ssh-agent\nsshd log:\n11256 14:39:07:215 debug1: sshd version OpenSSH_7.6, LibreSSL 2.5.3\n11256 14:39:07:230 debug3: ReadFileEx() ERROR:38, io:02D6C320\n11256 14:39:07:230 debug3: read - no more data, io:02D6C320\n11256 14:39:07:230 debug3: ReadFileEx() ERROR:38, io:02D6C320\n11256 14:39:07:230 debug3: read - no more data, io:02D6C320\n11256 14:39:07:230 debug1: private host key #0: ssh-rsa SHA256:Hm6tW0/OC11ae4SZi1k5Ax3UW654t3BmWZJnS48TMWM\n11256 14:39:07:230 debug3: ReadFileEx() ERROR:38, io:02D871B8\n11256 14:39:07:230 debug3: read - no more data, io:02D871B8\n11256 14:39:07:230 debug3: ReadFileEx() ERROR:38, io:02D871B8\n11256 14:39:07:230 debug3: read - no more data, io:02D871B8\n11256 14:39:07:230 debug1: private host key #1: ssh-dss SHA256:cUPnFEee4QuT7iCV4wCInoZPTyB9Al9wINMmxQpcB54\n11256 14:39:07:230 debug3: ReadFileEx() ERROR:38, io:02D6C320\n11256 14:39:07:230 debug3: read - no more data, io:02D6C320\n11256 14:39:07:230 debug3: ReadFileEx() ERROR:38, io:02D6C320\n11256 14:39:07:230 debug3: read - no more data, io:02D6C320\n11256 14:39:07:246 debug1: private host key #2: ecdsa-sha2-nistp256 SHA256:rRdDBM2rXDj/S54UjR4HD6XwQ2pwgZqB7XtdMVUyFVc\n11256 14:39:07:246 debug3: ReadFileEx() ERROR:38, io:02D6C320\n11256 14:39:07:246 debug3: read - no more data, io:02D6C320\n11256 14:39:07:246 debug3: ReadFileEx() ERROR:38, io:02D6C320\n11256 14:39:07:246 debug3: read - no more data, io:02D6C320\n11256 14:39:07:246 debug1: private host key #3: ssh-ed25519 SHA256:xSujr0qmlxirRtl4AlcQe15FQ6C7W58bTmNlwfdrV8Y\n11256 14:39:07:246 error: chdir(\"/\"): Permission denied\n11256 14:39:07:246 debug2: fd 3 setting O_NONBLOCK\n11256 14:39:07:246 debug1: Bind to port 22 on 0.0.0.0.\n11256 14:39:07:246 Server listening on 0.0.0.0 port 22.\n. Sorry not sure why the large font\n. The binary are actually on e:. So this is an error I can ignore is what you are saying?  I was hoping this had to do with an issue with being able to scp to openssh.. There were different errors. I'll close this issue and open a separate issue for that. Thanks. ",
    "aaccioly": "@JW0914, yes, before restarting my PC. . @manojampalam , thanks for the in-deep explanation. Is this valid for every key that I add or only id_rsa? Is it supposed to respect ssh-add -t or -c if I reboot my machine? I would like to confirm my passphrase every once in a while instead of having my keys always loaded / ready to go.. Hi @manojampalam, fair enough. If I don't want to have my keys loaded indefinitely I guess that my best bet at the moment is to have some Tasks scheduled to run ssh -D every x minutes and when I logout right? (That's what I'm doing ATM, just want to confirm that there isn't a better way).. ",
    "sakazuki": "@manojampalam Thank you for your comment.\nI want to try creating dumb support.\nI think I should enhance ProcessIncomingKeys in shell-host.c to support dumb.\nCould you give me advise to do it ?\n. ",
    "LoboMelwyn": "FYI, I'm using Windows server 2012 R2. Well I used older version and it worked fine with no issues, let me see I will try some other method.. ",
    "DarkHack": "Have an same :\nbash-4.3# /usr/sbin/sshd -d -D -f /etc/darksrv/darkpass/default/darkpass_config\ndebug1: sshd version OpenSSH_6.7, OpenSSL 1.0.1t  3 May 2016\ndebug1: private host key: #0 type 1 RSA\ndebug1: private host key: #1 type 2 DSA\ndebug1: private host key: #2 type 3 ECDSA\ndebug1: private host key: #3 type 4 ED25519\ndebug1: rexec_argv[0]='/usr/sbin/sshd'\ndebug1: rexec_argv[1]='-d'\ndebug1: rexec_argv[2]='-D'\ndebug1: rexec_argv[3]='-f'\ndebug1: rexec_argv[4]='/etc/darksrv/darkpass/default/darkpass_config'\ndebug1: Bind to port 2222 on 0.0.0.0.\nServer listening on 0.0.0.0 port 2222.\ndebug1: Bind to port 2222 on ::.\nServer listening on :: port 2222.\ndebug1: Server will not fork when running in debugging mode.\ndebug1: rexec start in 5 out 5 newsock 5 pipe -1 sock 8\ndebug1: inetd sockets after dupping: 3, 3\nConnection from 2a01:e34:edac:b260:215:afff:fea6:ab5d port 42916 on 2a01:cb10:82f5:200:d250:99ff:fe51:fd90 port 2222\ndebug1: Client protocol version 2.0; client software version OpenSSH_7.4p1 Debian-10+deb9u3\ndebug1: match: OpenSSH_7.4p1 Debian-10+deb9u3 pat OpenSSH* compat 0x04000000\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_6.7p1 Debian-5+deb8u4\ndebug1: permanently_set_uid: 113/65534 [preauth]\ndebug1: list_hostkey_types: ssh-rsa,ssh-dss,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug1: SSH2_MSG_KEXINIT sent [preauth]\ndebug1: SSH2_MSG_KEXINIT received [preauth]\ndebug1: kex: client->server chacha20-poly1305@openssh.com  none [preauth]\ndebug1: kex: server->client chacha20-poly1305@openssh.com  none [preauth]\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\ndebug1: SSH2_MSG_NEWKEYS sent [preauth]\ndebug1: expecting SSH2_MSG_NEWKEYS [preauth]\nConnection closed by 2a01:e34:edac:b260:215:afff:fea6:ab5d [preauth]\ndebug1: do_cleanup [preauth]\ndebug1: monitor_read_log: child log fd closed\ndebug1: do_cleanup\ndebug1: Killing privsep child 3915\nStrace execution : \nclose(17611)                            = -1 EBADF (Bad file descriptor)\ninfinity, without connection\nI'm looking for, cause in chroot environnement,\nmay be missing folder log, or rsyslog dev difficulty.. ",
    "StrikerTwo": "Looks good to me:\n3812 2018-02-06 13:59:37.295 debug2: channel 0: window 1998761 sent adjust 98391\n6204 2018-02-06 13:59:38.563 debug3: receive packet: type 1\n6204 2018-02-06 13:59:38.563 Received disconnect from 87.138.XX.XX port 40448:11: \n6204 2018-02-06 13:59:38.563 Disconnected from 87.138.XX.XX port 40448\n6204 2018-02-06 13:59:38.563 debug1: do_cleanup\n6288 2018-02-06 13:59:38.563 debug3: mm_request_receive entering\n6288 2018-02-06 13:59:38.563 debug1: do_cleanup\n3812 2018-02-06 13:59:38.563 debug3: receive packet: type 1\n3812 2018-02-06 13:59:38.563 Received disconnect from 87.138.XX.XX port 40449:11: \n3812 2018-02-06 13:59:38.563 Disconnected from 87.138.XX.XX port 40449\n3812 2018-02-06 13:59:38.563 debug1: do_cleanup\n7700 2018-02-06 13:59:38.579 debug3: mm_request_receive entering\n7700 2018-02-06 13:59:38.579 debug1: do_cleanup\nsshd.log. We have a TFS 2018 on Windows Server 2016 on-premise. The CI build has a task \"Deploy: Copy Files Over SSH\" that copies the build result to our public data centre server running Windows Server 2012 R2 on Hyper-V and the OpenSSH sshd.\nThe data centre server is protected by a Sophos UTM firewall that does simple NAT from a non-well-known port to TCP/22 on the server's internal IP.\nIf I copy the files manually with FileZilla to the same server, there is no error message.\nUnfortunately I can't test the CI build against a different SSH server right now, because we only have the one.. ",
    "jblank-uw": "My sshd_config contains\nMatch Group ssh_users\n    ForceCommand      cmd /c set ssh\nI also tried adding the Command option in my authorized_keys file\ncommand=\"whoami\" ssh-rsa AAAAB3NzaC1yc2EAA...\nWill gather some Debug traaces from each version.\nJim\n. ",
    "lejeczek": "Well, I did not, but I also did not configure \"anything\" in v0.0.24.0 where I'm on cmd.exe and there background is blue, as per my gnome-terminal.\nI do pretty much the same, default vanilla openssh win install of v1.0.0.0-Beta , as per docs, and session behaves differently, I'll have black background(where output is not blank/empty line, those lines will be painted blue).\nIn both cases I do not (manually/purposefully) set default shell.\n. I will, how do I use ssh-shellhost ?\nReading \"fix\" - does it it mean it's fixed in git? If yes then could we have downloadable bins fixed as well?. I exec: dir = colors retained, I exec \"route print\" = background changes to black.. sshd.log:\n..\n8852 19:36:47:164 debug3: NetUserGetInfo() failed with error: 1722 for user: pe243 and domain: _biotec \\n\n8852 19:36:48:695 debug2: input_userauth_request: setting up authctxt for pe243@_biotec\n8852 19:36:48:695 debug2: input_userauth_request: try method none\n8852 19:36:48:695 Failed none for pe243@_biotec from 10.5.10.49 port 5390 ssh2\n8852 19:36:48:695 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n8852 19:36:48:695 debug3: send packet: type 51\n8852 19:36:48:695 debug3: receive packet: type 50\n8852 19:36:48:695 debug1: userauth-request for user pe243@_biotec service ssh-connection method publickey\n8852 19:36:48:695 debug1: attempt 1 failures 0\n8852 19:36:48:695 debug2: input_userauth_request: try method publickey\n8852 19:36:48:695 debug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:uMhpqoTLeyvAvLKbkiytTRGk8FSP6rfxgb1nhkg+L0Q\n8852 19:36:48:695 debug1: trying public key file C:\\Users\\pe243\\.ssh/authorized_keys\n8852 19:36:48:727 debug1: matching key found: file C:\\Users\\pe243\\.ssh/authorized_keys, line 1 RSA SHA256:uMhpqoTLeyvAvLKbkiytTRGk8FSP6rfxgb1nhkg+L0Q\n8852 19:36:48:727 debug3: send packet: type 60\n8852 19:36:48:727 debug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512\n8852 19:36:48:727 Postponed publickey for pe243@_biotec from 10.5.10.49 port 5390 ssh2\n8852 19:36:48:727 debug3: receive packet: type 50\n8852 19:36:48:727 debug1: userauth-request for user pe243@_biotec service ssh-connection method publickey\n8852 19:36:48:727 debug1: attempt 2 failures 0\n8852 19:36:48:727 debug2: input_userauth_request: try method publickey\n8852 19:36:48:727 debug3: userauth_pubkey: have signature for RSA SHA256:uMhpqoTLeyvAvLKbkiytTRGk8FSP6rfxgb1nhkg+L0Q\n8852 19:36:48:727 debug1: trying public key file C:\\Users\\pe243\\.ssh/authorized_keys\n8852 19:36:48:727 debug1: matching key found: file C:\\Users\\pe243\\.ssh/authorized_keys, line 1 RSA SHA256:uMhpqoTLeyvAvLKbkiytTRGk8FSP6rfxgb1nhkg+L0Q\n8852 19:36:48:862 debug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512\n8852 19:36:48:862 Failed publickey for pe243@_biotec from 10.5.10.49 port 5390 ssh2: RSA SHA256:uMhpqoTLeyvAvLKbkiytTRGk8FSP6rfxgb1nhkg+L0Q\n8852 19:36:48:862 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n8852 19:36:48:862 debug3: send packet: type 51\n8852 19:36:48:863 debug3: receive packet: type 50\n8852 19:36:48:863 debug1: userauth-request for user pe243@_biotec service ssh-connection method keyboard-interactive\n8852 19:36:48:863 debug1: attempt 3 failures 1\n8852 19:36:48:863 debug2: input_userauth_request: try method keyboard-interactive\n8852 19:36:48:863 debug1: keyboard-interactive devs \n8852 19:36:48:863 debug1: auth2_challenge: user=pe243@_biotec devs=\n8852 19:36:48:863 debug1: kbdint_alloc: devices ''\n8852 19:36:48:863 debug2: auth2_challenge_start: devices \n8852 19:36:48:863 Failed keyboard-interactive for pe243@_biotec from 10.5.10.49 port 5390 ssh2\n8852 19:36:48:863 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\"\n8852 19:36:48:863 debug3: send packet: type 51\nssh -vvv:\nOpenSSH_7.4p1, OpenSSL 1.0.2k-fips  26 Jan 2017\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 60: Applying options for \ndebug1: Executing proxy command: exec /usr/bin/sss_ssh_knownhostsproxy -p 22 10.5.10.53\ndebug1: permanently_drop_suid: 2501\ndebug1: identity file /home.sysops/appmgr/.ssh/id_rsa type 1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home.sysops/appmgr/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home.sysops/appmgr/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home.sysops/appmgr/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home.sysops/appmgr/.ssh/id_ecdsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home.sysops/appmgr/.ssh/id_ecdsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home.sysops/appmgr/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /home.sysops/appmgr/.ssh/id_ed25519-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_7.4\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.6\ndebug1: match: OpenSSH_7.6 pat OpenSSH compat 0x04000000\ndebug2: fd 6 setting O_NONBLOCK\ndebug2: fd 5 setting O_NONBLOCK\ndebug1: Authenticating to 10.5.10.53:22 as 'pe243@_biotec'\ndebug3: hostkeys_foreach: reading file \"/home.sysops/appmgr/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file /home.sysops/appmgr/.ssh/known_hosts:23\ndebug3: load_hostkeys: loaded 1 keys from 10.5.10.53\ndebug3: hostkeys_foreach: reading file \"/var/lib/sss/pubconf/known_hosts\"\ndebug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ssh-dss\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none,zlib@openssh.com,zlib\ndebug2: compression stoc: none,zlib@openssh.com,zlib\ndebug2: languages ctos: \ndebug2: languages stoc: \ndebug2: first_kex_follows 0 \ndebug2: reserved 0 \ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos: \ndebug2: languages stoc: \ndebug2: first_kex_follows 0 \ndebug2: reserved 0 \ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: curve25519-sha256 need=64 dh_need=64\ndebug1: kex: curve25519-sha256 need=64 dh_need=64\ndebug3: send packet: type 30\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug3: receive packet: type 31\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:/1wWphpxGHRWSP7SF/poo8DDYuIrt1dmL+TCWitQ4Oc\ndebug3: hostkeys_foreach: reading file \"/home.sysops/appmgr/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file /home.sysops/appmgr/.ssh/known_hosts:23\ndebug3: load_hostkeys: loaded 1 keys from 10.5.10.53\ndebug3: hostkeys_foreach: reading file \"/var/lib/sss/pubconf/known_hosts\"\ndebug1: Host '10.5.10.53' is known and matches the ECDSA host key.\ndebug1: Found key in /home.sysops/appmgr/.ssh/known_hosts:23\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug2: key: /home.sysops/appmgr/.ssh/id_rsa (0x555efb5e2970)\ndebug2: key: /home.sysops/appmgr/.ssh/id_dsa ((nil))\ndebug2: key: /home.sysops/appmgr/.ssh/id_ecdsa ((nil))\ndebug2: key: /home.sysops/appmgr/.ssh/id_ed25519 ((nil))\ndebug3: send packet: type 5\ndebug3: receive packet: type 7\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=\ndebug3: receive packet: type 6\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred gssapi-keyex,gssapi-with-mic,publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: /home.sysops/appmgr/.ssh/id_rsa\ndebug3: send_pubkey_test\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 60\ndebug1: Server accepts key: pkalg rsa-sha2-512 blen 279\ndebug2: input_userauth_pk_ok: fp SHA256:uMhpqoTLeyvAvLKbkiytTRGk8FSP6rfxgb1nhkg+L0Q\ndebug3: sign_and_send_pubkey: RSA SHA256:uMhpqoTLeyvAvLKbkiytTRGk8FSP6rfxgb1nhkg+L0Q\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug1: Trying private key: /home.sysops/appmgr/.ssh/id_dsa\ndebug3: no such identity: /home.sysops/appmgr/.ssh/id_dsa: No such file or directory\ndebug1: Trying private key: /home.sysops/appmgr/.ssh/id_ecdsa\ndebug3: no such identity: /home.sysops/appmgr/.ssh/id_ecdsa: No such file or directory\ndebug1: Trying private key: /home.sysops/appmgr/.ssh/id_ed25519\ndebug3: no such identity: /home.sysops/appmgr/.ssh/id_ed25519: No such file or directory\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive\ndebug3: remaining preferred: password\ndebug3: authmethod_is_enabled keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug2: userauth_kbdint\ndebug3: send packet: type 50\ndebug2: we sent a keyboard-interactive packet, wait for reply\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: userauth_kbdint: disable: no info_req_seen\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup password\ndebug3: remaining preferred: \ndebug3: authmethod_is_enabled password\ndebug1: Next authentication method: password\npe243@_biotec@10.5.10.53's password: \ndebug3: send packet: type 50\ndebug2: we sent a password packet, wait for reply\n--- here is prompt for password\nmany thanks.. do you mean \"beta\" ?. It seems that even v1 beta needs sshd user to have (R) to authorized_keys of DOMAIN users even to prompt for a password. If such luck is absent sshd won't even connect, will instead fail: \n$ ssh \"pe243\"@10.5.10.52\npacket_write_wait: Connection to UNKNOWN port 65535: Broken pipe\nStill will not login password-less, will the problem continue to remain somewhere in file permissions?. ",
    "matthiasreisser": "Hey @JW0914, thx for your fast response. I use the commands exactly as written (except for username and server_address), thus configuring my mac to forward any request to 'itself' on localhost:21000 to server_address:21000 instead. . In C:\\Program Files\\OpenSSH\\sshd_config, I have enabled the line AddressFamily inet in order to enforce ipv4 usage. I still have the same message in the logs, however:\ndebug1: getsockopt TCP_NODELAY: Invalid argument\ndebug1: connect_next: host localhost ([::1]:21000) in progress, fd=9\nwhich makes me suspicious if the sshd_config files is read at all. Is it in the right location for sshd to find it?\n. Ah, that explains it! This solved my problem, thank you very much! \n. ",
    "Jocala": "Thanks, the link to #289 was very helpful.. ",
    "CliffFoster": "I dug through procmon's output this morning regarding the failing process and couldn't really find a difference between it failing in an SSH shell and a successful one in a normal command prompt shell beyond the fact that when the failing one tries to access ntdll.dll at some point the thread it is in immediately terminates and then the rest of the application terminates out after that. The return code is some large garbage negative number.\nAll of the architectures are 64 bit, and it seems to be loading the 64 bit dlls from System32 (when running the 32 bit tools it seems to be appropriately loading the ones from SysWOW64).\nVery confused on what is going on.. ",
    "penguin359": "My concern isn't about the client-side escaping, it's that I need two levels of server-side escaping. My example still applies when running ssh.exe from a Windows box. When running a remote PowerShell command with ssh, I first have to write it thinking about proper PowerShell syntax, naturally, but then I have to escape it to pass through the remote cmd.exe process that is started by the sshd.exe server on the Windows server which then runs powershell.exe as it's child. Then, as a third layer, I have to escape it to pass through the local cmd.exe shell. It's the middle layer, the remote server cmd.exe that I would like to eliminate. This is in stark contrast to how sshd runs on any UNIX box, whether it's Linux, macOS, or cygwin on Windows layer. If I use csh as my personal shell on a UNIX box, it has a distinct syntax incompatible from standard Bourne shell or it's derivatives like bash. I only have to worry about writing a valid csh command, and then escaping it for my local shell whether that's bash, csh, cmd.exe, or powershell.exe. The command, as passed through the ssh protocol is handed directly to the final shell that interprets it, which I would like to be powershell.exe and not a cmd.exe wrapping powershell.exe.. Looking at the process hierarchy from an interactive PowerShell session on Windows, I see this:\nId Level IndentedName             ParentId\n  -- ----- ------------             --------\n1676     2     sshd                      668\n1032     3       sshd                   1676\n 984     4         conhost              1032\n3852     4         sshd                 1032\n1920     5           ssh-shellhost      3852\n1336     6             cmd              1920\n  84     7               conhost        1336\n 960     7               powershell     1336\nIt does indeed look like PowerShell is being run as a child of cmd.exe. This is an interactive session to a Linux server where the user's shell is csh, and not sh or bash as is typical:\nPID TTY      STAT   TIME COMMAND\n18695 ?        Ss     0:00 sshd: user [priv]\n18701 ?        S      0:00  \\_ sshd: user@pts/86\n18714 pts/86   Ss     0:00      \\_ -csh\n18817 pts/86   R+     0:00          \\_ ps axwf\nWhere as the desired UNIX shell is invoked directly on a traditional UNIX\\Linux box. Even if the cmd.exe layer on the server side can't be removed, it would be nice for it to escape commands going through it so it is transparent to the remote user running a command in the selected target shell, PowerShell or otherwise.. Here's a better step-by-step example to demonstrate the different behavior of sshd.exe on Windows and sshd on a Linux box. The local and remote shell for Linux is bash, but for Windows, I'll use cmd.exe as the local shell for ssh.exe and powershell.exe for the server-side shell called by sshd.exe on Windows. The goal will be to echo out the string \"hello\" with quotes included in the output. In Bash, the double quotes have a special meaning and need to be escaped. When running the command locally, there are two ways to do it:\necho '\"hello\"'\necho \\\"hello\\\"\nTo run this remotely from a Linux box, I will need to escape the command so that the local Bash shell passes it through ssh to the remote Linux shell. The simplest mechanism is to use single-quotes with the second command above. Inside single-quotes no characters other than a single-quote, which ends the quoting, have any special meaning. That makes it pretty simple to implement:\nssh linux 'echo \\\"hello\\\"'\nWith just two layers of quoting, I can print \"hello\". Now, to do the same from a cmd.exe shell running ssh.exe, it's not much different, but the quoting rules are different. With cmd.exe, only two characters have any special meaning in quotes, the double-quote and backslash. To keep the example simple, I'll use the first command from above that only has double-quotes. To quote a double-quote in cmd.exe, it just needs to be doubled up, but the string much already be inside double quotes so I add double quotes around the whole command after doubling each double-quote in the original command:\nssh.exe linux \"echo '\"\"hello\"\"'\"\nIt looks a little confusing, but it's just two layers, still, of quoting rules to handle. Now, to do this same action in a local PowerShell, there are again two ways of writing it:\necho '\"hello\"'\necho `\"hello`\"\nBoth commands will print \"hello\" to the screen when run in a local PowerShell. If I run this from a cmd.exe shell on Windows, I would expect to be able run either by just adding the quoting needed to pass through the local cmd.exe shell. Taking the second command from above, I double up the quotes and then surround the entire command in quotes:\nssh.exe windows \"echo `\"\"`\"\"\"\nBut that produces helloas output, not \"hello\". It turns out, I need to apply the cmd.exe quoting rules twice, once for the local cmd.exe and once for the remote cmd.exe:\n```\nssh.exe windows \"\"\"echo\"\"\"\"\"\"\"\"\"\"\"\n```\nSo now I have 4 quotes for double-quotes that must appear for PowerShell, and 2 quotes where I'm wrapping the command for the remote cmd.exe giving 7 quotes at the end once I wrap it again for the local cmd.exe. Running the command from a local Linux box to a remote Windows server using PowerShell, I see the same behavior, but this time, I quote the PowerShell command to pass through cmd.exe, and then to pass through Bash by using single-quotes around it:\n```\nssh windows '\"echo\"\"hello`\"\"\"'\n```\nFor every remote PowerShell command I run on Windows, I have to also quote to handle passing through cmd.exe regardless whether it's initiated from a Linux or Window box.\nThis whole thing above might seem like a silly example because it really is, so I'll give a more realistic example based on what we are actually doing. Here's a pretty short PowerShell command that we would like to run from a Linux box. This is the command as run on the target PowerShell:\nGet-NetAdapter | ?{$_.MACAddress -eq \"12-34-56-12-34-56\"}\nAnd it gives us the information we need as output. Trying this from ssh.exe inside cmd.exe, I know I need to double up the quotes and then surround it in double-quotes. Luckily, there's no backslashes to worry about. So that produces this command:\nssh.exe windows \"Get-NetAdapter | ?{$_.MACAddress -eq \"\"12-34-56-12-34-56\"\"}\"\nHowever, I find that this produced a syntax error since I failed to account for the remote cmd.exe interpreting this command. Taking that into account and escaping again produces this command:\nssh.exe windows \"Get-NetAdapter | ?{$_.MACAddress -eq \"\"\"\"\"\"12-34-56-12-34-56\"\"\"\"\"\"}\"\nWhich is starting to get hard to read. However, the whole reason I'm using ssh is to be able to run PowerShell commands like this from a Linux box. If I do the same thing from from ssh in Bash, I will run into that same syntax error if I don't first quote the PowerShell command for cmd.exe and then escape it for bash:\nssh windows 'Get-NetAdapter | ?{$_.MACAddress -eq \"\"\"52-54-00-AB-A7-1F\"\"\"}'\nI would like to be able to take a working PowerShell command and run it through ssh only worrying about my local shell or scripting language whatever that may be. Currently, I need to always add in this cmd.exe translation layer and don't always get it right.. After a little more research, I'm thinking that this might have a little more to do with a fundamental difference in process creation between Windows and UNIX-like operating systems. The command-line is actually passed to it's child process as a single string which the child parses with it's own rules. What I'm seeing as the remote cmd.exe layer of quoting might actually be the C/C++ Runtime library inside PowerShell.exe following these rules:\nhttps://msdn.microsoft.com/en-us/library/17w5ykft.aspx\nIn that case, it might require shell-host.c to escape the string it receives over SSH to pass through as the argument to /c for the child cmd.exe/powershell.exe. I should also test with cmd.exe and bash.exe and see how the quoting works for those remote shells.\nHere one test I tried from a local cmd.exe shell:\npowershell.exe /c \"Get-NetAdapter | ?{$_.MACAddress -eq \\\"12-34-56-12-34-56\\\"}\"\nUsing the expected level of quoting to handle the local invocation of PowerShel.exe and produces the desired output. Turning that into SSH directly, though breaks:\nssh.exe windows \"Get-NetAdapter | ?{$_.MACAddress -eq \\\"12-34-56-12-34-56\\\"}\"\nAs before, I have to double up the backslashes to handle two layers of C/C++ Runtime parsing the same argument:\nssh.exe windows \"Get-NetAdapter | ?{$_.MACAddress -eq \\\\\\\"12-34-56-12-34-56\\\\\\\"}\"\nThe equivalent test on Linux, for comparison, works with the same quoting level:\nbash -c \"/sbin/ip -o link | grep \\\"12:34:56:12:34:56\\\"\"\nssh linux \"/sbin/ip -o link | grep \\\"12:34:56:12:34:56\\\"\". OK, you beat me to my last comment. Thanks for looking into this!. Now that I have a better understanding of what's happening, I think it comes down to a fundamental design difference between UNIX, where commands are broken up into parts and passed in from the parent, and Windows, where they are parsed and broken up by the child. For the no-pty case, where I'm primarily concerned, it seems to be that just escaping according to the rules of the standard MSVCRT parsing should handle the case of a child cmd.exe/powershell.exe shell. Based on the MSDN article @manojampalam posted, I believe this procedure, done in order, should properly protect it:\n1. For every backslash in the original command string, insert a second backslash in front (keep them even).\n2. For every double-quote in the original command string, insert a backslash in front.\n3. Insert a double quote at the front and back of the command string.\n4. Combine the shell, option, and command-line, in order and space separated.\nFrom that, this command passed verbatim:\necho \"Hello, $Env:USERNAME\"\nWould turn into the CreateProcess command-line:\npowershell.exe /c \"echo \\\"Hello, $Env:USERNAME\\\"\"\nThe difference in the output would be the Hello and username appearing on the same line as one argument to echo instead of two lines as it currently appears.\nWhat do you think?. ",
    "danielboth": "@manojampalam @bagajjal, looking at #1212, is there any progress / eta on this issue? . ",
    "unhammer": "@bingbing8 will 1. help with git clone windowsmachine/c/Users/user/repo.git  turning into ''/c/Users/user/repo.git'' (extra single-quotes)? Cf. https://stackoverflow.com/questions/53834304/how-do-i-git-clone-from-a-windows-machine-over-ssh/53847484. That make sense \u2013 I managed to avoid the issue by switching the openssh defaultshell from cmd.exe to bash :). ",
    "bielawb": "Hi\nWhen can we expect that fix in the supported version (Windows Server 2019)?\nI don't feel comfortable running beta versions in production environments...\nRegards\nBartek. ",
    "henti": "As a side note, I set defaultshell to powershell and ssh from windows to windows I can then run the above defautlshell command and get a bash shell over ssh, but not from Unix terminal. \nNot sure if that helps or not. . This is on windows 7 machine, which might be the reason. \n```jenkins@win7-image-base@WIN7-IMAGE-BASE C:\\Users\\jenkins\\Desktop\\Default-shellissue>ConsoleApplication2_X64.exe               \nRegOpenKeyExW (SOFTWARE\\OpenSSH) failed:2                                                                                     \nRegQueryValueExW (HKLM:SOFTWARE\\OpenSSH\\DefaultShell) failed:6                                                                \nDefault shell:C:\\Windows\\system32\\cmd.exe                                                                                       \npress enter to EXIT!!                                                                                                         \n```\nWindows 10 seems to work fine. . Hi @bagajjal \nAhh yes, I was using our azure build image which is still configured to use normal command. I'll have to build a new VM for testing. This will take some time. \nI'll do that in the next couple of days. \nH. Hi @bagajjal \nI have no idea what I did wrong before, but this is working now. Thank you for being patient with me :) \nH. ",
    "llinyu": "I am terribly sorry. I made a mistake. \nMy OS has a DISPLAY environment variable I didn\u2019t figure it out, it is the same problem as #966. . ",
    "LavenPy": "\nDownloaded the wrong build, please donwload source from here\n\ntook me longer than it should. I Hope my stupidity can help someone else. ",
    "bluelightning13": "Thanks for this - I was sent to the wrong download page by a Git Tutorial on installing this. So I was getting the same error.... ",
    "simenmusaeus": "Sorry, swapped the server and the client, corrected the original question: it's a windows server I'm attempting to access with an ubuntu client.. @mrvladis Your right, you need to edit the sshd_config found in %ProgramData%\\ssh\\ (C:\\ProgramData\\ssh\\), it works for me now.\nWould it be an idea to make this more explicit in the setup instructions? \nBeing unexperienced with OpenSSH \"..at the location where you installed Win32 Open SSH\" sounds to me like C:\\Program Files\\OpenSSH, and not C:\\ProgramData\\ssh\\.. ",
    "mrvladis": "@simenmusaeus Your sshd_config is it in the correct location, e.g. %ProgramData%\\ssh\\ ?\nI have had the same issue when tried to modify config within the folder that contain binaries.. ",
    "two70": "I am having issues with connecting as well, but mine deals with the SSH transport process abruptly terminating.\nDouble check that your PowerShell executable is where you are saying it is in the config file. In my case, Server 2012R2, it is located at \"C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe\". I was originally getting the same error as you until I changed the location.. ",
    "Mohit-Ak": "\nI am having issues with connecting as well, but mine deals with the SSH transport process abruptly terminating.\nDouble check that your PowerShell executable is where you are saying it is in the config file. In my case, Server 2012R2, it is located at \"C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe\". I was originally getting the same error as you until I changed the location.\n\nYes, But this leads to another error. Did you manage to fix the issue?. ",
    "KaizerT": "@NoMoreFood @manojampalam \nIs there a fix/workaround for this? This seems to be a huge miss since an\nSSH server is expected to server numerous concurrent connections.\nOn Tue, 6 Mar 2018 at 11:37 PM Manoj Ampalam notifications@github.com\nwrote:\n\n@NoMoreFood https://github.com/nomorefood you're right.\nUltimately all these child process handles will be fed in a\nWaitForMultipleObjects call (as part of wait_for_any_event()) and that\nWin32 API call has a limitation of 64 handles. I had to pick a number less\nthan this to accommodate other events (that of async accept and connect\ncalls).\nRelated to #191 https://github.com/PowerShell/Win32-OpenSSH/issues/191\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1096#issuecomment-371028609,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AjZY6EHvgPg7mVoZpfpMphnGylsCjxcAks5tb3H_gaJpZM4Se_Fs\n.\n. @NoMoreFood \nI undertand that it's not that simple of a fix. Just saying that it might have been nice to have been resolved earlier. Thank you both @manojampalam for investigating.. I've set up a linux box for this instead to resolve this issue. @NoMoreFood  @manojampalam \n\nIt'd be great if you guys can come up with a release with @NoMoreFood 's fix in the near future. I'm doing a lot of finessing to make this work with the current set up I have.. ",
    "yanfiz": "It connected with '-c aes256-cbc' parameter, thank you. But, is this to say that I must know the exact aes*-cbc cipher of the server?. In fact, I don't have to use CBC, I just noticed both server (Fedora) and this client support the same cipher and don't connect. I thought it may be a bug, so I reported. The server is a virtual machine that I own, and I was just testing. Thank you for your relevance. Shall I close this report, or are you going on any researches about this issue?. ",
    "pldmgg": "I hope it's not in poor taste, but I wanted to respectfully offer my PowerShell WinSSH Module that can satisfy this issue.\nhttps://github.com/pldmgg/misc-powershell/blob/master/MyModules/WinSSH/WinSSH.psm1\nI made a post on reddit a few weeks ago explaining the Module:\nhttps://www.reddit.com/r/PowerShell/comments/87n5nk/install_opensshwin64_with_winssh_module/\nBasically, after Import-Module <PathToWinSSH.psm1>`, the below will install the client only (i.e. ssh binaries and the ssh-agent service):\nInstall-WinSSH\n\nJust in case you already have other instances of ssh.exe on your machine, I recommend using the GiveWinSSHBinariesPathPriority switch instead of just Install-WinSSH without any parameters:\nInstall-WinSSH -GiveWinSSHBinariesPathPriority\n\nIf afterwards, at some point, you also want the sshd Server installed and configured, just do...\nNew-SSHDServer\n\nNote that New-SSHDServer also installs the latest PowerShell Core so that we can add the Subsystem line referencing it in sshd_config.\nIf you want everything (ssh client and server) installed all at once from scratch, just do...\nInstall-WinSSH -GiveWinSSHBinariesPathPriority -ConfigureSSHDOnLocalHost\n\nOther switch parameters that might be of interest to you are:\n\n-UsePowerShellGet - Installs via PowerShellGet/PackageManagement\n-UseChocolateyCmdLine - Installs via the Chocolatey cmdline (installs the Chocolatey cmdline if it's not already)\n-GitHubInstall - Downloads and installs the latest directly from https://github.com/PowerShell/Win32-OpenSSH/releases\n\nIf you have any interest in reviewing my code, please note that functions up to Line 3347 are just utility functions (i.e. checking elevation, etc). I know best practice is to split those into a dedicated Private Functions file, but I haven't gotten around to organizing the Module properly yet. In any case, all you need to do right now is import the WinSSH.psm1.\nHope this can help some folks!. @Suncatcher \nThanks for providing the feedback. I definitely want to work with you to iron out these issues.\nSo, first thing is, I didn't intend for you to receive a prompt regarding adding the 'PSGallery' as a trusted repository. This popped up because of a dependency on the NTFSSecurity Module (for setting file permissions). I'll update Line 3609 and 3741 to add/trust the PSGallery before attempting to install the NTFSSecurity Module so that this prompt doesn't pop up.\nAssuming you ran Install-WinSSH without the optional -UsePowerShellGet, -UseChocolateyCmdLine, or -GitHubInstall parameters, the logic first tries to install via PowerShellGet/PackageManagement. If that fails, it falls back to using the Chocolatey CommandLine. If that fails, it halts.\n(SideNote: You can sidestep the logic that tries the install via these package managers by using the -GitHubInstall switch, i.e. Install-WinSSHD -GiveWInSSHBinariesPriority -GitHubInstall).\nGiven the error output, it doesn't seem like it even attempted to install via PSGet, which means that there was no PSGet-install failure condition, which means it didn't properly fallback to installing via Chocolatey CommandLine. \nIn other words, the code within the if block on Line 1799 didn't trigger at all. So, if you could, can you do the following to gather some info about your environment:\n[bool]$(Get-Command Get-Package -ErrorAction SilentlyContinue)\nThe above should evaluate to True. \nIMPORTANT: If for some reason it evaluates to False, then run my Update-PackageManagement function (loaded as part of the WinSSH Module), then open a new PowerShell Session and try the Install-WinSSH function again. Ignore everything else below here unless Install-WinSSH fails again after you run Update-PackageManagement\nAfter the above line evaluates to True, do the following...\n```\n$ProgramName = \"OpenSSH\"\nIf PackageManagement/PowerShellGet is installed, determine if $ProgramName is installed\nif ([bool]$(Get-Command Get-Package -ErrorAction SilentlyContinue)) {\n    $PackageManagementInstalledPrograms = Get-Package\n# If the Current Installed Version is not equal to the Latest Version available, then it's outdated\nif ($PackageManagementInstalledPrograms.Name -contains $ProgramName) {\n    $PackageManagementCurrentInstalledPackage = $PackageManagementInstalledPrograms | Where-Object {$_.Name -eq $ProgramName}\n    $PackageManagementLatestVersion = $(Find-Package -Name $ProgramName -Source chocolatey -AllVersions | Sort-Object -Property Version)[-1]\n}\n\n}\n```\nNext do...\n[bool]$(Get-Command choco -ErrorAction SilentlyContinue)\nThe above may or may not evaluate to True. If it does, then run the below. If not, no big deal. \n```\nif ([bool]$(Get-Command choco -ErrorAction SilentlyContinue)) {\n    $ChocolateyInstalledProgramsPrep = clist --local-only\n    $ChocolateyInstalledProgramsPrep = $ChocolateyInstalledProgramsPrep[1..$($ChocolateyInstalledProgramsPrep.Count-2)]\n[System.Collections.ArrayList]$ChocolateyInstalledProgramsPSObjects = @()\n\nforeach ($program in $ChocolateyInstalledProgramsPrep) {\n    $programParsed = $program -split \" \"\n    $PSCustomObject = [pscustomobject]@{\n        ProgramName     = $programParsed[0]\n        Version         = $programParsed[1]\n    }\n\n    $null = $ChocolateyInstalledProgramsPSObjects.Add($PSCustomObject)\n}\n\n# Also get a list of outdated packages in case this Install-Program function is used to update a package\n$ChocolateyOutdatedProgramsPrep = choco outdated\n$UpperLineMatch = $ChocolateyOutdatedProgramsPrep -match \"Output is package name\"\n$LowerLineMatch = $ChocolateyOutdatedProgramsPrep -match \"Chocolatey has determined\"\n$UpperIndex = $ChocolateyOutdatedProgramsPrep.IndexOf($UpperLineMatch) + 2\n$LowerIndex = $ChocolateyOutdatedProgramsPrep.IndexOf($LowerLineMatch) - 2\n$ChocolateyOutdatedPrograms = $ChocolateyOutdatedProgramsPrep[$UpperIndex..$LowerIndex]\n\n[System.Collections.ArrayList]$ChocolateyOutdatedProgramsPSObjects = @()\nforeach ($line in $ChocolateyOutdatedPrograms) {\n    $ParsedLine = $line -split \"\\|\"\n    $Program = $ParsedLine[0]\n    $CurrentInstalledVersion = $ParsedLine[1]\n    $LatestAvailableVersion = $ParsedLine[2]\n\n    $PSObject = [pscustomobject]@{\n        ProgramName                 = $Program\n        CurrentInstalledVersion     = $CurrentInstalledVersion\n        LatestAvailableVersion      = $LatestAvailableVersion\n    }\n\n    $null = $ChocolateyOutdatedProgramsPSObjects.Add($PSObject)\n}\n\n}\n```\nThen, run the following three lines. At least one of them should evaluate to $True:\n$($PackageManagementInstalledPrograms.Name -notcontains $ProgramName -and $ChocolateyInstalledProgramsPSObjects.ProgramName -notcontains $ProgramName)\n$PackageManagementCurrentInstalledPackage.Version -ne $PackageManagementLatestVersion.Version\n$ChocolateyOutdatedProgramsPSObjects.ProgramName -contains $ProgramName\nThanks for working with me on this. let me know how it goes.\nP.S. If you just want to bypass the package managers and do a direct install via GitHub, just do...\nInstall-WinSSH -GiveWinSSHBinariesPathPriority -GitHubInstall\n\n...but I really want to figure out why the package managers are failing in your environment so that I can improve my code :). @DarwinJS \n\nI tested the universal installer on Powershell 2 / Windows 7, Nano server and under the SYSTEM account. Were you able to test in these scenarios?\n\nI definitely did not test under any of those conditions. I can almost guarantee it won't work on PowerShell 2, however, you could theoretically use my Update-PowerShellCore function on older machines to install PowerShell Core and then run Install-WinSSH using PowerShell Core. It should work (but of course, I haven't tested).\nAs far as Nano Server, I'm just getting to the point where I can reliably deploy Windows Containers (because I'm pretty sure Microsoft is pushing for Nano Server to be container-only), but I definitely want to try it out in Nano Server (I've got a lot of other plans for Nano Server, so I might as well test this out once I get going on that front).\nBTW, I see your name all over the place and just want to say, you do some good work and it's definitely appreciated!. We confirmed Chocolatey is not installed with:\n[bool]$(Get-Command choco -ErrorAction SilentlyContinue)\n\n...which is perfectly fine. It's only necessary if installation via PowerShellGet/PackageManagement fails, and right now, we're trying to figure out why installation via PowerShellGet/PackageManagement isn't even being attempted.\nI'm really not seeing where the breakdown in my logic is, so let's just try a couple more things.\n\nI pushed an update to my WinSSH Module (added a -Force switch to Install-WinSSH), so please delete the existing WinSSH.psm1 file from your system, and re-download the latest from https://github.com/pldmgg/misc-powershell/blob/master/MyModules/WinSSH/WinSSH.psm1\nStart a fresh PowerShell Session and: Import-Module <PathToWinSSH.psm1>\nRun Update-PackageManagement\nOpen a new PowerShell Session again\nRun this line of code (it will uninstall OpenSSH if it has been previously installed via PowerShellGet/PackageManagement)\nif ([bool]$(Get-Package -Name \"OpenSSH\" -EA SilentlyContinue)) {Get-Package OpenSSH | Uninstall-Package}\nTry Install-WinSSH -GiveWinSSHBinariesPathPriority again\nIf that fails, try Install-WinSSH -GiveWinSSHBinariesPathPriority -Force\nIf that fails, try Install-WinSSH -GiveWinSSHBinariesPathPriority -GitHubInstall\nIf all of those fail, then we should probably continue the discussion on another forum because I feel like we're hitting this thread here on GitHub a little too much. (I'm /u/fourierswager on Reddit if you want to message me there). @Suncatcher \nThe -GitHubInstall parameter doesn't install git, it just downloads the latest OpenSSH release from https://github.com/PowerShell/Win32-OpenSSH/releases, moves the files to the correct location(s), sets permissions appropriately, and creates the ssh-agent service. I'm glad you had success with that parameter, and, practically speaking, this is probably the way you'll most often use the Install-WinSSH function because the package manager repositories are often a version behind. So, using -GitHubInstall will make sure you have the absolute latest.\n\nRegarding the warning when you import the module...it's not indicative of a problem with code, it's just an indication that I didn't follow best practice/community guidelines when naming some of my functions (I'll get around to updating when I have time). It doesn't impact functionality at all.\nI'll need to think about my logic for the if statement on line 1799 some more. I've tested on fresh Win 10 / Win 2012 R2 / Win 2016 machines, and it seems to work fine. If anyone else has any ideas, I'm all ears.\n@DarwinJS \n\nA dependency on package management means many valid deployment targets cannot use this code.\n\nRoger that. And just to be clear, there's only a dependency on PowerShellGet/PackageManagement because of the dependency of the NTFSSecurity Module. If I can get rid of that dependency, then simply using the -GitHubInstall parameter makes things as agnostic as possible. But honestly, I don't have any plans to remove the NTFSSecurity Module dependency...it just makes code related to file permissions infinitely more readable.. After removing \"NT Service/sshd\", got closer, but still no dice. Now it's complaining about a broken pipe and test2\\testadmin being a bad user (i.e. NetUserGetInfo() failed with error: 1722 for user: testadmin and domain: test2)...\nFrom CentOS7 Client to Windows 2102 R2 SSHD Server:\nSSHD Log\n(EDIT: Updated with DEBUG3)\n8476 2018-03-23 19:18:44.692 debug2: fd 3 setting O_NONBLOCK\n8476 2018-03-23 19:18:44.692 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n8476 2018-03-23 19:18:44.692 debug1: Bind to port 22 on ::.\n8476 2018-03-23 19:18:44.692 Server listening on :: port 22.\n8476 2018-03-23 19:18:44.692 debug2: fd 4 setting O_NONBLOCK\n8476 2018-03-23 19:18:44.692 debug1: Bind to port 22 on 0.0.0.0.\n8476 2018-03-23 19:18:44.692 Server listening on 0.0.0.0 port 22.\n8476 2018-03-23 19:19:26.406 debug3: fd 5 is not O_NONBLOCK\n8476 2018-03-23 19:19:26.406 debug3: spawning \"C:\\\\Program Files\\\\OpenSSH-Win64\\\\sshd.exe\" \"-R\"\n8476 2018-03-23 19:19:26.408 debug3: send_rexec_state: entering fd = 8 config len 263\n8476 2018-03-23 19:19:26.408 debug3: ssh_msg_send: type 0\n8476 2018-03-23 19:19:26.414 debug3: send_rexec_state: done\n2456 2018-03-23 19:19:26.433 debug1: inetd sockets after dupping: 3, 3\n2456 2018-03-23 19:19:26.434 Connection from 192.168.2.34 port 42210 on 192.168.2.145 port 22\n2456 2018-03-23 19:19:26.434 debug1: Client protocol version 2.0; client software version OpenSSH_7.4\n2456 2018-03-23 19:19:26.434 debug1: match: OpenSSH_7.4 pat OpenSSH* compat 0x04000000\n2456 2018-03-23 19:19:26.434 debug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.6\n2456 2018-03-23 19:19:26.434 debug2: fd 3 setting O_NONBLOCK\n2456 2018-03-23 19:19:26.467 debug3: spawning \"C:\\\\Program Files\\\\OpenSSH-Win64\\\\sshd.exe\" \"-y\"\n2456 2018-03-23 19:19:26.467 debug3: send_rexec_state: entering fd = 6 config len 263\n2456 2018-03-23 19:19:26.467 debug3: ssh_msg_send: type 0\n2456 2018-03-23 19:19:26.467 debug3: send_rexec_state: done\n2456 2018-03-23 19:19:26.467 debug3: ssh_msg_send: type 0\n2456 2018-03-23 19:19:26.467 debug3: ssh_msg_send: type 0\n2456 2018-03-23 19:19:26.467 debug3: preauth child monitor started\n2456 2018-03-23 19:19:26.483 debug3: privsep user:group 1:0 [preauth]\n2456 2018-03-23 19:19:26.483 debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms [preauth]\n2456 2018-03-23 19:19:26.483 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n2456 2018-03-23 19:19:26.483 debug3: send packet: type 20 [preauth]\n2456 2018-03-23 19:19:26.483 debug1: SSH2_MSG_KEXINIT sent [preauth]\n2456 2018-03-23 19:19:26.483 debug3: receive packet: type 20 [preauth]\n2456 2018-03-23 19:19:26.483 debug1: SSH2_MSG_KEXINIT received [preauth]\n2456 2018-03-23 19:19:26.483 debug2: local server KEXINIT proposal [preauth]\n2456 2018-03-23 19:19:26.483 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1 [preauth]\n2456 2018-03-23 19:19:26.483 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n2456 2018-03-23 19:19:26.483 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n2456 2018-03-23 19:19:26.483 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n2456 2018-03-23 19:19:26.483 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n2456 2018-03-23 19:19:26.483 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n2456 2018-03-23 19:19:26.483 debug2: compression ctos: none [preauth]\n2456 2018-03-23 19:19:26.483 debug2: compression stoc: none [preauth]\n2456 2018-03-23 19:19:26.483 debug2: languages ctos:  [preauth]\n2456 2018-03-23 19:19:26.483 debug2: languages stoc:  [preauth]\n2456 2018-03-23 19:19:26.483 debug2: first_kex_follows 0  [preauth]\n2456 2018-03-23 19:19:26.483 debug2: reserved 0  [preauth]\n2456 2018-03-23 19:19:26.483 debug2: peer client KEXINIT proposal [preauth]\n2456 2018-03-23 19:19:26.483 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1,ext-info-c [preauth]\n2456 2018-03-23 19:19:26.483 debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ssh-dss [preauth]\n2456 2018-03-23 19:19:26.483 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc [preauth]\n2456 2018-03-23 19:19:26.483 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc [preauth]\n2456 2018-03-23 19:19:26.483 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n2456 2018-03-23 19:19:26.484 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n2456 2018-03-23 19:19:26.484 debug2: compression ctos: none,zlib@openssh.com,zlib [preauth]\n2456 2018-03-23 19:19:26.484 debug2: compression stoc: none,zlib@openssh.com,zlib [preauth]\n2456 2018-03-23 19:19:26.484 debug2: languages ctos:  [preauth]\n2456 2018-03-23 19:19:26.484 debug2: languages stoc:  [preauth]\n2456 2018-03-23 19:19:26.484 debug2: first_kex_follows 0  [preauth]\n2456 2018-03-23 19:19:26.484 debug2: reserved 0  [preauth]\n2456 2018-03-23 19:19:26.484 debug1: kex: algorithm: curve25519-sha256 [preauth]\n2456 2018-03-23 19:19:26.484 debug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\n2456 2018-03-23 19:19:26.484 debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\n2456 2018-03-23 19:19:26.484 debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\n2456 2018-03-23 19:19:26.484 debug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\n2456 2018-03-23 19:19:26.489 debug3: receive packet: type 30 [preauth]\n2456 2018-03-23 19:19:26.498 debug3: mm_key_sign entering [preauth]\n2456 2018-03-23 19:19:26.498 debug3: mm_request_send entering: type 6 [preauth]\n2456 2018-03-23 19:19:26.498 debug3: mm_key_sign: waiting for MONITOR_ANS_SIGN [preauth]\n2456 2018-03-23 19:19:26.498 debug3: mm_request_receive_expect entering: type 7 [preauth]\n2456 2018-03-23 19:19:26.498 debug3: mm_request_receive entering [preauth]\n2456 2018-03-23 19:19:26.498 debug3: mm_request_receive entering\n2456 2018-03-23 19:19:26.498 debug3: monitor_read: checking request 6\n2456 2018-03-23 19:19:26.498 debug3: mm_answer_sign\n2456 2018-03-23 19:19:26.498 debug3: mm_answer_sign: hostkey proof signature 0000008A33DA3F50(100)\n2456 2018-03-23 19:19:26.498 debug3: mm_request_send entering: type 7\n2456 2018-03-23 19:19:26.498 debug2: monitor_read: 6 used once, disabling now\n2456 2018-03-23 19:19:26.498 debug3: send packet: type 31 [preauth]\n2456 2018-03-23 19:19:26.498 debug3: send packet: type 21 [preauth]\n2456 2018-03-23 19:19:26.498 debug2: set_newkeys: mode 1 [preauth]\n2456 2018-03-23 19:19:26.498 debug1: rekey after 134217728 blocks [preauth]\n2456 2018-03-23 19:19:26.498 debug1: SSH2_MSG_NEWKEYS sent [preauth]\n2456 2018-03-23 19:19:26.498 debug1: expecting SSH2_MSG_NEWKEYS [preauth]\n2456 2018-03-23 19:19:26.498 debug3: send packet: type 7 [preauth]\n2456 2018-03-23 19:19:26.506 debug3: receive packet: type 21 [preauth]\n2456 2018-03-23 19:19:26.506 debug1: SSH2_MSG_NEWKEYS received [preauth]\n2456 2018-03-23 19:19:26.506 debug2: set_newkeys: mode 0 [preauth]\n2456 2018-03-23 19:19:26.506 debug1: rekey after 134217728 blocks [preauth]\n2456 2018-03-23 19:19:26.506 debug1: KEX done [preauth]\n2456 2018-03-23 19:19:26.565 debug3: receive packet: type 5 [preauth]\n2456 2018-03-23 19:19:26.565 debug3: send packet: type 6 [preauth]\n2456 2018-03-23 19:19:26.566 debug3: receive packet: type 50 [preauth]\n2456 2018-03-23 19:19:26.566 debug1: userauth-request for user testadmin@test2.lab service ssh-connection method none [preauth]\n2456 2018-03-23 19:19:26.566 debug1: attempt 0 failures 0 [preauth]\n2456 2018-03-23 19:19:26.566 debug3: mm_getpwnamallow entering [preauth]\n2456 2018-03-23 19:19:26.566 debug3: mm_request_send entering: type 8 [preauth]\n2456 2018-03-23 19:19:26.566 debug3: mm_request_receive entering\n2456 2018-03-23 19:19:26.566 debug3: monitor_read: checking request 8\n2456 2018-03-23 19:19:26.566 debug3: mm_answer_pwnamallow\n2456 2018-03-23 19:19:26.566 debug2: parse_server_config: config reprocess config len 263\n2456 2018-03-23 19:19:26.640 debug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 1\n2456 2018-03-23 19:19:26.640 debug3: mm_request_send entering: type 9\n2456 2018-03-23 19:19:26.640 debug2: monitor_read: 8 used once, disabling now\n2456 2018-03-23 19:19:26.640 debug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\n2456 2018-03-23 19:19:26.640 debug3: mm_request_receive_expect entering: type 9 [preauth]\n2456 2018-03-23 19:19:26.640 debug3: mm_request_receive entering [preauth]\n2456 2018-03-23 19:19:26.640 debug2: input_userauth_request: setting up authctxt for testadmin@test2.lab [preauth]\n2456 2018-03-23 19:19:26.640 debug3: mm_inform_authserv entering [preauth]\n2456 2018-03-23 19:19:26.640 debug3: mm_request_send entering: type 4 [preauth]\n2456 2018-03-23 19:19:26.640 debug3: mm_request_receive entering\n2456 2018-03-23 19:19:26.640 debug3: monitor_read: checking request 4\n2456 2018-03-23 19:19:26.640 debug3: mm_answer_authserv: service=ssh-connection, style=\n2456 2018-03-23 19:19:26.640 debug2: monitor_read: 4 used once, disabling now\n2456 2018-03-23 19:19:26.640 debug2: input_userauth_request: try method none [preauth]\n2456 2018-03-23 19:19:26.640 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\n2456 2018-03-23 19:19:26.640 debug3: send packet: type 51 [preauth]\n2456 2018-03-23 19:19:26.645 debug3: receive packet: type 50 [preauth]\n2456 2018-03-23 19:19:26.645 debug1: userauth-request for user testadmin@test2.lab service ssh-connection method publickey [preauth]\n2456 2018-03-23 19:19:26.645 debug1: attempt 1 failures 0 [preauth]\n2456 2018-03-23 19:19:26.645 debug2: input_userauth_request: try method publickey [preauth]\n2456 2018-03-23 19:19:26.645 debug3: userauth_pubkey: have signature for RSA SHA256:XD8GhEBcMtgA7zxwzfJFvzXNKERxXkphKAerTOgFenU [preauth]\n2456 2018-03-23 19:19:26.645 debug3: mm_key_allowed entering [preauth]\n2456 2018-03-23 19:19:26.645 debug3: mm_request_send entering: type 22 [preauth]\n2456 2018-03-23 19:19:26.645 debug3: mm_request_receive entering\n2456 2018-03-23 19:19:26.645 debug3: monitor_read: checking request 22\n2456 2018-03-23 19:19:26.645 debug3: mm_answer_keyallowed entering\n2456 2018-03-23 19:19:26.645 debug3: mm_answer_keyallowed: key_from_blob: 0000008A33DA5510\n2456 2018-03-23 19:19:26.645 debug1: trying public key file C:\\\\Users\\\\testadmin\\\\.ssh/authorized_keys\n2456 2018-03-23 19:19:26.645 debug1: matching key found: file C:\\\\Users\\\\testadmin\\\\.ssh/authorized_keys, line 1 RSA SHA256:XD8GhEBcMtgA7zxwzfJFvzXNKERxXkphKAerTOgFenU\n2456 2018-03-23 19:19:26.645 debug3: mm_answer_keyallowed: key is allowed\n2456 2018-03-23 19:19:26.645 debug3: mm_request_send entering: type 23\n2456 2018-03-23 19:19:26.645 debug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\n2456 2018-03-23 19:19:26.645 debug3: mm_request_receive_expect entering: type 23 [preauth]\n2456 2018-03-23 19:19:26.645 debug3: mm_request_receive entering [preauth]\n2456 2018-03-23 19:19:26.645 debug3: mm_sshkey_verify entering [preauth]\n2456 2018-03-23 19:19:26.645 debug3: mm_request_send entering: type 24 [preauth]\n2456 2018-03-23 19:19:26.645 debug3: mm_request_receive entering\n2456 2018-03-23 19:19:26.645 debug3: monitor_read: checking request 24\n2456 2018-03-23 19:19:26.646 debug3: mm_answer_keyverify: publickey 0000008A33DA5970 signature verified\n2456 2018-03-23 19:19:26.646 debug3: mm_request_send entering: type 25\n2456 2018-03-23 19:19:26.646 debug1: monitor_child_preauth: testadmin@test2.lab has been authenticated by privileged process\n2456 2018-03-23 19:19:26.646 debug3: mm_get_keystate: Waiting for new keys\n2456 2018-03-23 19:19:26.646 debug3: mm_request_receive_expect entering: type 26\n2456 2018-03-23 19:19:26.646 debug3: mm_request_receive entering\n2456 2018-03-23 19:19:26.646 debug3: mm_get_keystate: GOT new keys\n2456 2018-03-23 19:19:26.646 debug3: mm_sshkey_verify: waiting for MONITOR_ANS_KEYVERIFY [preauth]\n2456 2018-03-23 19:19:26.646 debug3: mm_request_receive_expect entering: type 25 [preauth]\n2456 2018-03-23 19:19:26.646 debug3: mm_request_receive entering [preauth]\n2456 2018-03-23 19:19:26.646 debug2: userauth_pubkey: authenticated 1 pkalg rsa-sha2-512 [preauth]\n2456 2018-03-23 19:19:26.646 debug3: send packet: type 52 [preauth]\n2456 2018-03-23 19:19:26.646 debug3: mm_request_send entering: type 26 [preauth]\n2456 2018-03-23 19:19:26.646 debug3: mm_send_keystate: Finished sending state [preauth]\n2456 2018-03-23 19:19:26.647 debug1: monitor_read_log: child log fd closed\n2456 2018-03-23 19:19:26.715 debug3: LsaLogonUser succeeded\n2456 2018-03-23 19:19:26.718 debug3: spawning \"C:\\\\Program Files\\\\OpenSSH-Win64\\\\sshd.exe\" \"-z\"\n2456 2018-03-23 19:19:26.719 debug3: send_rexec_state: entering fd = 5 config len 263\n2456 2018-03-23 19:19:26.719 debug3: ssh_msg_send: type 0\n2456 2018-03-23 19:19:26.724 debug3: send_rexec_state: done\n2456 2018-03-23 19:19:26.724 debug3: ssh_msg_send: type 0\n2456 2018-03-23 19:19:26.724 debug3: ssh_msg_send: type 0\n2456 2018-03-23 19:19:26.724 debug3: ssh_msg_send: type 0\n8928 2018-03-23 19:19:26.737 debug3: ssh_msg_recv entering\n8928 2018-03-23 19:19:26.737 debug2: fd 4 setting O_NONBLOCK\n8928 2018-03-23 19:19:26.737 debug2: parse_server_config: config reprocess config len 263\n8928 2018-03-23 19:19:28.993 debug3: NetUserGetInfo() failed with error: 1722 for user: testadmin and domain: test2 \\n\n8928 2018-03-23 19:19:29.015 debug3: NetUserGetInfo() with domainController: \\\\\\\\MAVERICK2 failed with error: 5 \\n\n8928 2018-03-23 19:19:29.015 Invalid user testadmin@test2 from 192.168.2.34 port 42210\n2456 2018-03-23 19:19:29.044 debug3: mm_request_receive entering\n2456 2018-03-23 19:19:29.044 debug1: do_cleanup\nSSH Client -vvv Output:\n[pdadmin@CentOS7-WS .ssh]$ ssh -i ToWin12WSA -l testadmin@test2.lab win12ws.test2.lab -vvv\nOpenSSH_7.4p1, OpenSSL 1.0.2k-fips  26 Jan 2017\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 58: Applying options for *\ndebug2: resolving \"win12ws.test2.lab\" port 22\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to win12ws.test2.lab [192.168.2.145] port 22.\ndebug1: Connection established.\ndebug1: key_load_public: No such file or directory\ndebug1: identity file ToWin12WSA type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file ToWin12WSA-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_7.4\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_for_Windows_7.6\ndebug1: match: OpenSSH_for_Windows_7.6 pat OpenSSH* compat 0x04000000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to win12ws.test2.lab:22 as 'testadmin@test2.lab'\ndebug3: hostkeys_foreach: reading file \"/home/pdadmin/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file /home/pdadmin/.ssh/known_hosts:2\ndebug3: load_hostkeys: loaded 1 keys from win12ws.test2.lab\ndebug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ssh-dss\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none,zlib@openssh.com,zlib\ndebug2: compression stoc: none,zlib@openssh.com,zlib\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: kex: curve25519-sha256 need=64 dh_need=64\ndebug1: kex: curve25519-sha256 need=64 dh_need=64\ndebug3: send packet: type 30\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug3: receive packet: type 31\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:DLeuZlbOpTmtzxPzJM3LaoMLbN+kGWOTj5OGIgIvuqc\ndebug3: hostkeys_foreach: reading file \"/home/pdadmin/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file /home/pdadmin/.ssh/known_hosts:2\ndebug3: load_hostkeys: loaded 1 keys from win12ws.test2.lab\ndebug3: hostkeys_foreach: reading file \"/home/pdadmin/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file /home/pdadmin/.ssh/known_hosts:2\ndebug3: load_hostkeys: loaded 1 keys from 192.168.2.145\ndebug1: Host 'win12ws.test2.lab' is known and matches the ECDSA host key.\ndebug1: Found key in /home/pdadmin/.ssh/known_hosts:2\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug2: key: ToWin12WSA ((nil)), explicit\ndebug3: send packet: type 5\ndebug3: receive packet: type 7\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=<ssh-ed25519,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521>\ndebug3: receive packet: type 6\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred gssapi-keyex,gssapi-with-mic,publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: ToWin12WSA\ndebug3: sign_and_send_pubkey: RSA SHA256:XD8GhEBcMtgA7zxwzfJFvzXNKERxXkphKAerTOgFenU\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 52\ndebug1: Authentication succeeded (publickey).\nAuthenticated to win12ws.test2.lab ([192.168.2.145]:22).\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug3: send packet: type 90\ndebug1: Requesting no-more-sessions@openssh.com\ndebug3: send packet: type 80\ndebug1: Entering interactive session.\ndebug1: pledge: network\ndebug3: send packet: type 1\npacket_write_wait: Connection to 192.168.2.145 port 22: Broken pipe\nEDIT 2:\nNot sure why it's complaining about testadmin being a bad user...I just logged into Maverick2 DC with it and it works fine.... Okay, thanks for your help!. Just wanted to provide some additional info...I'm not ruling out an issue with OpenSSH-Win32, but there's a high probability that there's a problem with boot2docker specifically. If you turn an existing VM into a dockermachine (as opposed to running the boot2docker ramdisk) then this is not an issue:\n```powershell\nLaunch Windows PowerShell 5.1 via 'Run as Administrator' and...\nGet-Command ssh\nCommandType     Name     Version    Source\n-----------     ----     -------    ------\nApplication     ssh.exe  7.7.1.0    C:\\Program Files\\OpenSSH-Win64\\ssh.exe\n$DockerMachineDir = \"C:\\Program Files\\Docker\\Docker\\Resources\\bin\"\nif ($($env:Path -split \";\") -notcontains $DockerMachineDir) {$env:Path = $DockerMachineDir + ';' + $env:Path} \ndocker-machine version\ndocker-machine.exe version 0.14.0, build 89b8332\nInstall the MiniLab PowerShell Module (full disclosure, I wrote it)\nInstall-Module MiniLab\nImport-Module MiniLab\nDeploy CentOS 7 VM from https://app.vagrantup.com/centos/boxes/7\n$VMName = \"CentOS7Test\"\n$DeployHyperVVagrantBoxSplatParams = @{\n    VagrantBox              = \"centos/7\"\n    VagrantProvider         = \"hyperv\"\n    VMName                  = $VMName\n    VMDestinationDirectory  = \"H:\\VirtualMachines\"\n    Memory                  = 2048\n    CPUs                    = 1\n}\n$DeployCentOS7Result = Deploy-HyperVVagrantBoxManually @DeployHyperVVagrantBoxSplatParams\n$CentOSIP = $DeployCentOS7Result.VMIPAddress\n(NOTE: The above 'Deploy-HyperVVagrantBoxManually' function downloads 'vagrant_unsecure_key' and\n'vagrant_unsecure_key.pub' from https://github.com/hashicorp/vagrant/tree/master/keys and places it under \"$HOME.ssh\")\nssh -o \"StrictHostKeyChecking=no\" -o \"IdentitiesOnly=yes\" -i \"$HOME.ssh\\vagrant_unsecure_key\" -t vagrant@$CentOSIP \"sudo yum install net-tools -y\"\ndocker-machine create --driver generic --generic-ip-address=$CentOSIP --generic-ssh-user vagrant --generic-ssh-key \"$(\"$HOME.ssh\\vagrant_unsecure_key\" -replace \"\\\",\"/\")\" $VMName\ndocker-machine.exe env $VMName\ndocker-machine.exe env $VMName | Invoke-Expression\n```\n. When 7.7.0.0 client tries to connect to CentOS7 VM...\ndebug2: load_server_config: filename /etc/ssh/sshd_config\ndebug2: load_server_config: done config len = 706\ndebug2: parse_server_config: config /etc/ssh/sshd_config len 706\ndebug3: /etc/ssh/sshd_config:22 setting HostKey /etc/ssh/ssh_host_rsa_key\ndebug3: /etc/ssh/sshd_config:24 setting HostKey /etc/ssh/ssh_host_ecdsa_key\ndebug3: /etc/ssh/sshd_config:25 setting HostKey /etc/ssh/ssh_host_ed25519_key\ndebug3: /etc/ssh/sshd_config:32 setting SyslogFacility AUTHPRIV\ndebug3: /etc/ssh/sshd_config:47 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: /etc/ssh/sshd_config:65 setting PasswordAuthentication no\ndebug3: /etc/ssh/sshd_config:69 setting ChallengeResponseAuthentication no\ndebug3: /etc/ssh/sshd_config:79 setting GSSAPIAuthentication yes\ndebug3: /etc/ssh/sshd_config:80 setting GSSAPICleanupCredentials no\ndebug3: /etc/ssh/sshd_config:96 setting UsePAM yes\ndebug3: /etc/ssh/sshd_config:101 setting X11Forwarding yes\ndebug3: /etc/ssh/sshd_config:116 setting UseDNS no\ndebug3: /etc/ssh/sshd_config:127 setting AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES\ndebug3: /etc/ssh/sshd_config:128 setting AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT\ndebug3: /etc/ssh/sshd_config:129 setting AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE\ndebug3: /etc/ssh/sshd_config:130 setting AcceptEnv XMODIFIERS\ndebug3: /etc/ssh/sshd_config:133 setting Subsystem sftp /usr/libexec/openssh/sftp-server\ndebug1: sshd version OpenSSH_7.4, OpenSSL 1.0.2k-fips  26 Jan 2017\ndebug1: private host key #0: ssh-rsa SHA256:i0dXDHZEHo24ddHpB0YP72UYsWhIFt18motFKj2EwYk\ndebug1: private host key #1: ecdsa-sha2-nistp256 SHA256:qNTz9y0qAGvOzRCXpslRh7dmIXTk08mr4maNPkseun8\ndebug1: private host key #2: ssh-ed25519 SHA256:5e//fAV2fv88qQw39D0+99xSUZFw/nv8vH4VrE60lzI\ndebug1: rexec_argv[0]='/sbin/sshd'\ndebug1: rexec_argv[1]='-ddd'\ndebug3: oom_adjust_setup\ndebug1: Set /proc/self/oom_score_adj from 0 to -1000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 4 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug3: fd 5 is not O_NONBLOCK\ndebug1: Server will not fork when running in debugging mode.\ndebug3: send_rexec_state: entering fd = 8 config len 706\ndebug3: ssh_msg_send: type 0\ndebug3: send_rexec_state: done\ndebug1: rexec start in 5 out 5 newsock 5 pipe -1 sock 8\ndebug1: inetd sockets after dupping: 3, 3\nConnection from 192.168.2.48 port 55671 on 192.168.2.150 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_for_Windows_7.7\ndebug1: match: OpenSSH_for_Windows_7.7 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_7.4\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: ssh_sandbox_init: preparing seccomp filter sandbox\ndebug2: Network child is on pid 5426\ndebug3: preauth child monitor started\ndebug1: SELinux support enabled [preauth]\ndebug3: ssh_selinux_change_context: setting context from 'unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023' to 'unconfined_u:unconfined_r:sshd_net_t:s0-s0:c0.c1023' [preauth]\ndebug3: ssh_selinux_change_context: setcon unconfined_u:unconfined_r:sshd_net_t:s0-s0:c0.c1023 from unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 failed with Invalid argument [preauth]\ndebug3: privsep user:group 74:74 [preauth]\ndebug1: permanently_set_uid: 74/74 [preauth]\ndebug3: ssh_sandbox_child: setting PR_SET_NO_NEW_PRIVS [preauth]\ndebug3: ssh_sandbox_child: attaching seccomp filter program [preauth]\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug3: send packet: type 20 [preauth]\ndebug1: SSH2_MSG_KEXINIT sent [preauth]\ndebug3: receive packet: type 20 [preauth]\ndebug1: SSH2_MSG_KEXINIT received [preauth]\ndebug2: local server KEXINIT proposal [preauth]\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 [preauth]\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,blowfish-cbc,cast128-cbc,3des-cbc [preauth]\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,blowfish-cbc,cast128-cbc,3des-cbc [preauth]\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: compression ctos: none,zlib@openssh.com [preauth]\ndebug2: compression stoc: none,zlib@openssh.com [preauth]\ndebug2: languages ctos:  [preauth]\ndebug2: languages stoc:  [preauth]\ndebug2: first_kex_follows 0  [preauth]\ndebug2: reserved 0  [preauth]\ndebug2: peer client KEXINIT proposal [preauth]\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c [preauth]\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa [preauth]\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: compression ctos: none [preauth]\ndebug2: compression stoc: none [preauth]\ndebug2: languages ctos:  [preauth]\ndebug2: languages stoc:  [preauth]\ndebug2: first_kex_follows 0  [preauth]\ndebug2: reserved 0  [preauth]\ndebug1: kex: algorithm: curve25519-sha256 [preauth]\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\ndebug1: kex: curve25519-sha256 need=64 dh_need=64 [preauth]\ndebug3: mm_request_send entering: type 120 [preauth]\ndebug3: mm_request_receive_expect entering: type 121 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 120\ndebug3: mm_request_send entering: type 121\ndebug1: kex: curve25519-sha256 need=64 dh_need=64 [preauth]\ndebug3: mm_request_send entering: type 120 [preauth]\ndebug3: mm_request_receive_expect entering: type 121 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 120\ndebug3: mm_request_send entering: type 121\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\ndebug3: receive packet: type 30 [preauth]\ndebug3: mm_key_sign entering [preauth]\ndebug3: mm_request_send entering: type 6 [preauth]\ndebug3: mm_key_sign: waiting for MONITOR_ANS_SIGN [preauth]\ndebug3: mm_request_receive_expect entering: type 7 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 6\ndebug3: mm_answer_sign\ndebug3: mm_answer_sign: hostkey proof signature 0x560302a26a40(100)\ndebug3: mm_request_send entering: type 7\ndebug2: monitor_read: 6 used once, disabling now\ndebug3: send packet: type 31 [preauth]\ndebug3: send packet: type 21 [preauth]\ndebug2: set_newkeys: mode 1 [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: SSH2_MSG_NEWKEYS sent [preauth]\ndebug1: expecting SSH2_MSG_NEWKEYS [preauth]\ndebug3: send packet: type 7 [preauth]\ndebug3: receive packet: type 21 [preauth]\ndebug1: SSH2_MSG_NEWKEYS received [preauth]\ndebug2: set_newkeys: mode 0 [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: KEX done [preauth]\ndebug3: receive packet: type 5 [preauth]\ndebug3: send packet: type 6 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user vagrant service ssh-connection method none [preauth]\ndebug1: attempt 0 failures 0 [preauth]\ndebug3: mm_getpwnamallow entering [preauth]\ndebug3: mm_request_send entering: type 8 [preauth]\ndebug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\ndebug3: mm_request_receive_expect entering: type 9 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 8\ndebug3: mm_answer_pwnamallow\ndebug2: parse_server_config: config reprocess config len 706\ndebug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 1\ndebug3: mm_request_send entering: type 9\ndebug2: monitor_read: 8 used once, disabling now\ndebug2: input_userauth_request: setting up authctxt for vagrant [preauth]\ndebug3: mm_start_pam entering [preauth]\ndebug3: mm_request_send entering: type 100 [preauth]\ndebug3: mm_inform_authserv entering [preauth]\ndebug3: mm_request_send entering: type 4 [preauth]\ndebug3: mm_inform_authrole entering [preauth]\ndebug3: mm_request_send entering: type 80 [preauth]\ndebug2: input_userauth_request: try method none [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,gssapi-keyex,gssapi-with-mic\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 100\ndebug1: PAM: initializing for \"vagrant\"\ndebug1: PAM: setting PAM_RHOST to \"192.168.2.48\"\ndebug1: PAM: setting PAM_TTY to \"ssh\"\ndebug2: monitor_read: 100 used once, disabling now\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 4\ndebug3: mm_answer_authserv: service=ssh-connection, style=\ndebug2: monitor_read: 4 used once, disabling now\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 80\ndebug3: mm_answer_authrole: role=\ndebug2: monitor_read: 80 used once, disabling now\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user vagrant service ssh-connection method publickey [preauth]\ndebug1: attempt 1 failures 0 [preauth]\ndebug2: input_userauth_request: try method publickey [preauth]\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:1qvecsaEVgU/JTeuiLtnnzhcQj865cTN9diLXMaGAiQ [preauth]\ndebug3: mm_key_allowed entering [preauth]\ndebug3: mm_request_send entering: type 22 [preauth]\ndebug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\ndebug3: mm_request_receive_expect entering: type 23 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 22\ndebug3: mm_answer_keyallowed entering\ndebug3: mm_answer_keyallowed: key_from_blob: 0x560302a269a0\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\ndebug1: trying public key file /home/vagrant/.ssh/authorized_keys\ndebug1: fd 4 clearing O_NONBLOCK\ndebug2: key not found\ndebug1: restore_uid: 0/0\ndebug3: mm_answer_keyallowed: key 0x560302a269a0 is not allowed\nFailed publickey for vagrant from 192.168.2.48 port 55671 ssh2: RSA SHA256:1qvecsaEVgU/JTeuiLtnnzhcQj865cTN9diLXMaGAiQ\ndebug3: mm_request_send entering: type 23\ndebug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512 [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,gssapi-keyex,gssapi-with-mic\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user vagrant service ssh-connection method publickey [preauth]\ndebug1: attempt 2 failures 1 [preauth]\ndebug2: input_userauth_request: try method publickey [preauth]\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:cqf2TUN6aAMssXmtnje7RuZHy8AQNAJVOkyOjj0gXN0 [preauth]\ndebug3: mm_key_allowed entering [preauth]\ndebug3: mm_request_send entering: type 22 [preauth]\ndebug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\ndebug3: mm_request_receive_expect entering: type 23 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 22\ndebug3: mm_answer_keyallowed entering\ndebug3: mm_answer_keyallowed: key_from_blob: 0x560302a34e90\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\ndebug1: trying public key file /home/vagrant/.ssh/authorized_keys\ndebug1: fd 4 clearing O_NONBLOCK\ndebug2: key not found\ndebug1: restore_uid: 0/0\ndebug3: mm_answer_keyallowed: key 0x560302a34e90 is not allowed\nFailed publickey for vagrant from 192.168.2.48 port 55671 ssh2: RSA SHA256:cqf2TUN6aAMssXmtnje7RuZHy8AQNAJVOkyOjj0gXN0\ndebug3: mm_request_send entering: type 23\ndebug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512 [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,gssapi-keyex,gssapi-with-mic\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user vagrant service ssh-connection method publickey [preauth]\ndebug1: attempt 3 failures 2 [preauth]\ndebug2: input_userauth_request: try method publickey [preauth]\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:e13D3kCAxIto20MNuRCJaSo9DuzHkL5wqmZRDFfIt/4 [preauth]\ndebug3: mm_key_allowed entering [preauth]\ndebug3: mm_request_send entering: type 22 [preauth]\ndebug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\ndebug3: mm_request_receive_expect entering: type 23 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 22\ndebug3: mm_answer_keyallowed entering\ndebug3: mm_answer_keyallowed: key_from_blob: 0x560302a34e20\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\ndebug1: trying public key file /home/vagrant/.ssh/authorized_keys\ndebug1: fd 4 clearing O_NONBLOCK\ndebug2: key not found\ndebug1: restore_uid: 0/0\ndebug3: mm_answer_keyallowed: key 0x560302a34e20 is not allowed\nFailed publickey for vagrant from 192.168.2.48 port 55671 ssh2: RSA SHA256:e13D3kCAxIto20MNuRCJaSo9DuzHkL5wqmZRDFfIt/4\ndebug3: mm_request_send entering: type 23\ndebug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512 [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,gssapi-keyex,gssapi-with-mic\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user vagrant service ssh-connection method publickey [preauth]\ndebug1: attempt 4 failures 3 [preauth]\ndebug2: input_userauth_request: try method publickey [preauth]\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for ECDSA SHA256:jCHmW8bbDME3KyGV3EiMoI6LYFgwqpKZCH2zv1t5trQ [preauth]\ndebug3: mm_key_allowed entering [preauth]\ndebug3: mm_request_send entering: type 22 [preauth]\ndebug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\ndebug3: mm_request_receive_expect entering: type 23 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 22\ndebug3: mm_answer_keyallowed entering\ndebug3: mm_answer_keyallowed: key_from_blob: 0x560302a34dd0\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\ndebug1: trying public key file /home/vagrant/.ssh/authorized_keys\ndebug1: fd 4 clearing O_NONBLOCK\ndebug2: user_key_allowed: check options: 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key\n'\ndebug2: user_key_allowed: advance: 'AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key\n'\ndebug2: key not found\ndebug1: restore_uid: 0/0\ndebug3: mm_answer_keyallowed: key 0x560302a34dd0 is not allowed\nFailed publickey for vagrant from 192.168.2.48 port 55671 ssh2: ECDSA SHA256:jCHmW8bbDME3KyGV3EiMoI6LYFgwqpKZCH2zv1t5trQ\ndebug3: mm_request_send entering: type 23\ndebug2: userauth_pubkey: authenticated 0 pkalg ecdsa-sha2-nistp256 [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,gssapi-keyex,gssapi-with-mic\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user vagrant service ssh-connection method publickey [preauth]\ndebug1: attempt 5 failures 4 [preauth]\ndebug2: input_userauth_request: try method publickey [preauth]\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:Qj0Bmf3y6r5eE8zyIra/J5YTLFD+zdMIKNx2gJfKU4Y [preauth]\ndebug3: mm_key_allowed entering [preauth]\ndebug3: mm_request_send entering: type 22 [preauth]\ndebug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\ndebug3: mm_request_receive_expect entering: type 23 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 22\ndebug3: mm_answer_keyallowed entering\ndebug3: mm_answer_keyallowed: key_from_blob: 0x560302a35750\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\ndebug1: trying public key file /home/vagrant/.ssh/authorized_keys\ndebug1: fd 4 clearing O_NONBLOCK\ndebug2: key not found\ndebug1: restore_uid: 0/0\ndebug3: mm_answer_keyallowed: key 0x560302a35750 is not allowed\nFailed publickey for vagrant from 192.168.2.48 port 55671 ssh2: RSA SHA256:Qj0Bmf3y6r5eE8zyIra/J5YTLFD+zdMIKNx2gJfKU4Y\ndebug3: mm_request_send entering: type 23\ndebug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512 [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,gssapi-keyex,gssapi-with-mic\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user vagrant service ssh-connection method publickey [preauth]\ndebug1: attempt 6 failures 5 [preauth]\ndebug2: input_userauth_request: try method publickey [preauth]\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:sV+JEhQ5/dFD8reGtnPNUL42Xd4acbxI9P8H4zVYo8w [preauth]\ndebug3: mm_key_allowed entering [preauth]\ndebug3: mm_request_send entering: type 22 [preauth]\ndebug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\ndebug3: mm_request_receive_expect entering: type 23 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 22\ndebug3: mm_answer_keyallowed entering\ndebug3: mm_answer_keyallowed: key_from_blob: 0x560302a34e20\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\ndebug1: trying public key file /home/vagrant/.ssh/authorized_keys\ndebug1: fd 4 clearing O_NONBLOCK\ndebug2: key not found\ndebug1: restore_uid: 0/0\ndebug3: mm_answer_keyallowed: key 0x560302a34e20 is not allowed\nFailed publickey for vagrant from 192.168.2.48 port 55671 ssh2: RSA SHA256:sV+JEhQ5/dFD8reGtnPNUL42Xd4acbxI9P8H4zVYo8w\ndebug3: mm_request_send entering: type 23\ndebug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512 [preauth]\ndebug3: mm_audit_event entering [preauth]\ndebug3: mm_request_send entering: type 112 [preauth]\nmaximum authentication attempts exceeded for vagrant from 192.168.2.48 port 55671 ssh2 [preauth]\nDisconnecting: Too many authentication failures [preauth]\ndebug3: send packet: type 1 [preauth]\ndebug3: mm_request_send entering: type 122 [preauth]\ndebug3: mm_request_receive_expect entering: type 123 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 112\ndebug3: mm_answer_audit_event entering\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 122\ndebug3: mm_request_send entering: type 123\ndebug1: do_cleanup [preauth]\ndebug3: PAM: sshpam_thread_cleanup entering [preauth]\ndebug3: mm_request_send entering: type 124 [preauth]\ndebug1: monitor_read_log: child log fd closed\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 124\ndebug3: mm_request_receive entering\ndebug1: do_cleanup\ndebug1: PAM: cleanup\ndebug3: PAM: sshpam_thread_cleanup entering\ndebug1: Killing privsep child 5426\nWhen 7.6.0.1 client tries to connect to CentOS 7 VM...\ndebug2: load_server_config: filename /etc/ssh/sshd_config\ndebug2: load_server_config: done config len = 706\ndebug2: parse_server_config: config /etc/ssh/sshd_config len 706\ndebug3: /etc/ssh/sshd_config:22 setting HostKey /etc/ssh/ssh_host_rsa_key\ndebug3: /etc/ssh/sshd_config:24 setting HostKey /etc/ssh/ssh_host_ecdsa_key\ndebug3: /etc/ssh/sshd_config:25 setting HostKey /etc/ssh/ssh_host_ed25519_key\ndebug3: /etc/ssh/sshd_config:32 setting SyslogFacility AUTHPRIV\ndebug3: /etc/ssh/sshd_config:47 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: /etc/ssh/sshd_config:65 setting PasswordAuthentication no\ndebug3: /etc/ssh/sshd_config:69 setting ChallengeResponseAuthentication no\ndebug3: /etc/ssh/sshd_config:79 setting GSSAPIAuthentication yes\ndebug3: /etc/ssh/sshd_config:80 setting GSSAPICleanupCredentials no\ndebug3: /etc/ssh/sshd_config:96 setting UsePAM yes\ndebug3: /etc/ssh/sshd_config:101 setting X11Forwarding yes\ndebug3: /etc/ssh/sshd_config:116 setting UseDNS no\ndebug3: /etc/ssh/sshd_config:127 setting AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES\ndebug3: /etc/ssh/sshd_config:128 setting AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT\ndebug3: /etc/ssh/sshd_config:129 setting AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE\ndebug3: /etc/ssh/sshd_config:130 setting AcceptEnv XMODIFIERS\ndebug3: /etc/ssh/sshd_config:133 setting Subsystem sftp /usr/libexec/openssh/sftp-server\ndebug1: sshd version OpenSSH_7.4, OpenSSL 1.0.2k-fips  26 Jan 2017\ndebug1: private host key #0: ssh-rsa SHA256:i0dXDHZEHo24ddHpB0YP72UYsWhIFt18motFKj2EwYk\ndebug1: private host key #1: ecdsa-sha2-nistp256 SHA256:qNTz9y0qAGvOzRCXpslRh7dmIXTk08mr4maNPkseun8\ndebug1: private host key #2: ssh-ed25519 SHA256:5e//fAV2fv88qQw39D0+99xSUZFw/nv8vH4VrE60lzI\ndebug1: rexec_argv[0]='/sbin/sshd'\ndebug1: rexec_argv[1]='-ddd'\ndebug3: oom_adjust_setup\ndebug1: Set /proc/self/oom_score_adj from 0 to -1000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 4 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug3: fd 5 is not O_NONBLOCK\ndebug1: Server will not fork when running in debugging mode.\ndebug3: send_rexec_state: entering fd = 8 config len 706\ndebug3: ssh_msg_send: type 0\ndebug3: send_rexec_state: done\ndebug1: rexec start in 5 out 5 newsock 5 pipe -1 sock 8\ndebug1: inetd sockets after dupping: 3, 3\nConnection from 192.168.2.46 port 54748 on 192.168.2.150 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_for_Windows_7.6\ndebug1: match: OpenSSH_for_Windows_7.6 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_7.4\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: ssh_sandbox_init: preparing seccomp filter sandbox\ndebug2: Network child is on pid 6154\ndebug3: preauth child monitor started\ndebug1: SELinux support enabled [preauth]\ndebug3: ssh_selinux_change_context: setting context from 'unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023' to 'unconfined_u:unconfined_r:sshd_net_t:s0-s0:c0.c1023' [preauth]\ndebug3: ssh_selinux_change_context: setcon unconfined_u:unconfined_r:sshd_net_t:s0-s0:c0.c1023 from unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 failed with Invalid argument [preauth]\ndebug3: privsep user:group 74:74 [preauth]\ndebug1: permanently_set_uid: 74/74 [preauth]\ndebug3: ssh_sandbox_child: setting PR_SET_NO_NEW_PRIVS [preauth]\ndebug3: ssh_sandbox_child: attaching seccomp filter program [preauth]\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug3: send packet: type 20 [preauth]\ndebug1: SSH2_MSG_KEXINIT sent [preauth]\ndebug3: receive packet: type 20 [preauth]\ndebug1: SSH2_MSG_KEXINIT received [preauth]\ndebug2: local server KEXINIT proposal [preauth]\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 [preauth]\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,blowfish-cbc,cast128-cbc,3des-cbc [preauth]\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc,blowfish-cbc,cast128-cbc,3des-cbc [preauth]\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: compression ctos: none,zlib@openssh.com [preauth]\ndebug2: compression stoc: none,zlib@openssh.com [preauth]\ndebug2: languages ctos:  [preauth]\ndebug2: languages stoc:  [preauth]\ndebug2: first_kex_follows 0  [preauth]\ndebug2: reserved 0  [preauth]\ndebug2: peer client KEXINIT proposal [preauth]\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c [preauth]\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa [preauth]\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: compression ctos: none [preauth]\ndebug2: compression stoc: none [preauth]\ndebug2: languages ctos:  [preauth]\ndebug2: languages stoc:  [preauth]\ndebug2: first_kex_follows 0  [preauth]\ndebug2: reserved 0  [preauth]\ndebug1: kex: algorithm: curve25519-sha256 [preauth]\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\ndebug1: kex: curve25519-sha256 need=64 dh_need=64 [preauth]\ndebug3: mm_request_send entering: type 120 [preauth]\ndebug3: mm_request_receive_expect entering: type 121 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 120\ndebug3: mm_request_send entering: type 121\ndebug1: kex: curve25519-sha256 need=64 dh_need=64 [preauth]\ndebug3: mm_request_send entering: type 120 [preauth]\ndebug3: mm_request_receive_expect entering: type 121 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 120\ndebug3: mm_request_send entering: type 121\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\ndebug3: receive packet: type 30 [preauth]\ndebug3: mm_key_sign entering [preauth]\ndebug3: mm_request_send entering: type 6 [preauth]\ndebug3: mm_key_sign: waiting for MONITOR_ANS_SIGN [preauth]\ndebug3: mm_request_receive_expect entering: type 7 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 6\ndebug3: mm_answer_sign\ndebug3: mm_answer_sign: hostkey proof signature 0x55a760ee7b40(100)\ndebug3: mm_request_send entering: type 7\ndebug2: monitor_read: 6 used once, disabling now\ndebug3: send packet: type 31 [preauth]\ndebug3: send packet: type 21 [preauth]\ndebug2: set_newkeys: mode 1 [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: SSH2_MSG_NEWKEYS sent [preauth]\ndebug1: expecting SSH2_MSG_NEWKEYS [preauth]\ndebug3: send packet: type 7 [preauth]\ndebug3: receive packet: type 21 [preauth]\ndebug1: SSH2_MSG_NEWKEYS received [preauth]\ndebug2: set_newkeys: mode 0 [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: KEX done [preauth]\ndebug3: receive packet: type 5 [preauth]\ndebug3: send packet: type 6 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user vagrant service ssh-connection method none [preauth]\ndebug1: attempt 0 failures 0 [preauth]\ndebug3: mm_getpwnamallow entering [preauth]\ndebug3: mm_request_send entering: type 8 [preauth]\ndebug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\ndebug3: mm_request_receive_expect entering: type 9 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 8\ndebug3: mm_answer_pwnamallow\ndebug2: parse_server_config: config reprocess config len 706\ndebug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 1\ndebug3: mm_request_send entering: type 9\ndebug2: monitor_read: 8 used once, disabling now\ndebug2: input_userauth_request: setting up authctxt for vagrant [preauth]\ndebug3: mm_start_pam entering [preauth]\ndebug3: mm_request_send entering: type 100 [preauth]\ndebug3: mm_inform_authserv entering [preauth]\ndebug3: mm_request_send entering: type 4 [preauth]\ndebug3: mm_inform_authrole entering [preauth]\ndebug3: mm_request_send entering: type 80 [preauth]\ndebug2: input_userauth_request: try method none [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,gssapi-keyex,gssapi-with-mic\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 100\ndebug1: PAM: initializing for \"vagrant\"\ndebug1: PAM: setting PAM_RHOST to \"192.168.2.46\"\ndebug1: PAM: setting PAM_TTY to \"ssh\"\ndebug2: monitor_read: 100 used once, disabling now\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 4\ndebug3: mm_answer_authserv: service=ssh-connection, style=\ndebug2: monitor_read: 4 used once, disabling now\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 80\ndebug3: mm_answer_authrole: role=\ndebug2: monitor_read: 80 used once, disabling now\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user vagrant service ssh-connection method publickey [preauth]\ndebug1: attempt 1 failures 0 [preauth]\ndebug2: input_userauth_request: try method publickey [preauth]\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA-CERT SHA256:hn9mpQlSfwX3D5dFqBrpXkDHmm2xzshRXKvstcmjtao [preauth]\ndebug3: mm_key_allowed entering [preauth]\ndebug3: mm_request_send entering: type 22 [preauth]\ndebug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\ndebug3: mm_request_receive_expect entering: type 23 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 22\ndebug3: mm_answer_keyallowed entering\ndebug3: mm_answer_keyallowed: key_from_blob: 0x55a760ee7ab0\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\ndebug1: trying public key file /home/vagrant/.ssh/authorized_keys\ndebug1: fd 4 clearing O_NONBLOCK\ndebug2: key not found\ndebug1: restore_uid: 0/0\ndebug3: mm_answer_keyallowed: key 0x55a760ee7ab0 is not allowed\nFailed publickey for vagrant from 192.168.2.46 port 54748 ssh2: RSA-CERT ID vault-root-867f66a509527f05f70f9745a81ae95e40c79a6db1cec8515cabecb5c9a3b5aa (serial 6179461909725677394) CA RSA SHA256:n3K0yiTWp6fV4Of1L+n2ecbj9CMdJ6d99Raafh7AAcY\ndebug3: mm_request_send entering: type 23\ndebug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa-cert-v01@openssh.com [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,gssapi-keyex,gssapi-with-mic\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user vagrant service ssh-connection method publickey [preauth]\ndebug1: attempt 2 failures 1 [preauth]\ndebug2: input_userauth_request: try method publickey [preauth]\ndebug1: userauth_pubkey: test whether pkalg/pkblob are acceptable for RSA SHA256:OpjK7bw1DZFF6qbOX8ck3ycqATt7t7PCcU0H6q5OGpg [preauth]\ndebug3: mm_key_allowed entering [preauth]\ndebug3: mm_request_send entering: type 22 [preauth]\ndebug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\ndebug3: mm_request_receive_expect entering: type 23 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 22\ndebug3: mm_answer_keyallowed entering\ndebug3: mm_answer_keyallowed: key_from_blob: 0x55a760ef6480\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\ndebug1: trying public key file /home/vagrant/.ssh/authorized_keys\ndebug1: fd 4 clearing O_NONBLOCK\ndebug2: key not found\ndebug1: restore_uid: 0/0\ndebug3: mm_answer_keyallowed: key 0x55a760ef6480 is not allowed\nFailed publickey for vagrant from 192.168.2.46 port 54748 ssh2: RSA SHA256:OpjK7bw1DZFF6qbOX8ck3ycqATt7t7PCcU0H6q5OGpg\ndebug3: mm_request_send entering: type 23\ndebug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512 [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,gssapi-keyex,gssapi-with-mic\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user vagrant service ssh-connection method publickey [preauth]\ndebug1: attempt 3 failures 2 [preauth]\ndebug2: input_userauth_request: try method publickey [preauth]\ndebug3: userauth_pubkey: have signature for RSA SHA256:1M4RzhMyWuFS/86uPY/ce2prh/dVTHW7iD2RhpquOZA [preauth]\ndebug3: mm_key_allowed entering [preauth]\ndebug3: mm_request_send entering: type 22 [preauth]\ndebug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\ndebug3: mm_request_receive_expect entering: type 23 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 22\ndebug3: mm_answer_keyallowed entering\ndebug3: mm_answer_keyallowed: key_from_blob: 0x55a760ef4bf0\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\ndebug1: trying public key file /home/vagrant/.ssh/authorized_keys\ndebug1: fd 4 clearing O_NONBLOCK\ndebug1: matching key found: file /home/vagrant/.ssh/authorized_keys, line 1 RSA SHA256:1M4RzhMyWuFS/86uPY/ce2prh/dVTHW7iD2RhpquOZA\ndebug1: restore_uid: 0/0\ndebug3: mm_answer_keyallowed: key 0x55a760ef4bf0 is allowed\ndebug3: mm_request_send entering: type 23\ndebug3: mm_key_verify entering [preauth]\ndebug3: mm_request_send entering: type 24 [preauth]\ndebug3: mm_key_verify: waiting for MONITOR_ANS_KEYVERIFY [preauth]\ndebug3: mm_request_receive_expect entering: type 25 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 24\ndebug3: mm_answer_keyverify: key 0x55a760ef7bc0 signature verified\ndebug3: mm_request_send entering: type 25\ndebug3: mm_request_receive_expect entering: type 102\ndebug3: mm_request_receive entering\ndebug1: do_pam_account: called\ndebug3: PAM: do_pam_account pam_acct_mgmt = 0 (Success)\ndebug3: mm_request_send entering: type 103\nAccepted publickey for vagrant from 192.168.2.46 port 54748 ssh2: RSA SHA256:1M4RzhMyWuFS/86uPY/ce2prh/dVTHW7iD2RhpquOZA\ndebug1: monitor_child_preauth: vagrant has been authenticated by privileged process\ndebug3: mm_get_keystate: Waiting for new keys\ndebug3: mm_request_receive_expect entering: type 26\ndebug3: mm_request_receive entering\ndebug3: mm_get_keystate: GOT new keys\ndebug3: mm_request_receive_expect entering: type 122\ndebug3: mm_request_receive entering\ndebug3: mm_request_send entering: type 123\ndebug2: userauth_pubkey: authenticated 1 pkalg rsa-sha2-512 [preauth]\ndebug3: mm_do_pam_account entering [preauth]\ndebug3: mm_request_send entering: type 102 [preauth]\ndebug3: mm_request_receive_expect entering: type 103 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_do_pam_account returning 1 [preauth]\ndebug3: send packet: type 52 [preauth]\ndebug3: mm_request_send entering: type 26 [preauth]\ndebug3: mm_send_keystate: Finished sending state [preauth]\ndebug3: mm_request_send entering: type 122 [preauth]\ndebug3: mm_request_receive_expect entering: type 123 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug1: monitor_read_log: child log fd closed\ndebug3: ssh_sandbox_parent_finish: finished\ndebug1: temporarily_use_uid: 1000/1000 (e=0/0)\ndebug1: ssh_gssapi_storecreds: Not a GSSAPI mechanism\ndebug1: restore_uid: 0/0\ndebug1: SELinux support enabled\ndebug3: sshd_selinux_setup_variables: setting execution context\ndebug1: PAM: establishing credentials\ndebug3: PAM: opening session\nUser child is on pid 6156\ndebug1: PAM: establishing credentials\ndebug3: sshd_selinux_setup_variables: setting execution context\ndebug1: permanently_set_uid: 1000/1000\ndebug3: monitor_apply_keystate: packet_set_state\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: ssh_packet_set_postauth: called\ndebug3: ssh_packet_set_state: done\ndebug3: notify_hostkeys: key 0: ssh-rsa SHA256:i0dXDHZEHo24ddHpB0YP72UYsWhIFt18motFKj2EwYk\ndebug3: notify_hostkeys: key 1: ecdsa-sha2-nistp256 SHA256:qNTz9y0qAGvOzRCXpslRh7dmIXTk08mr4maNPkseun8\ndebug3: notify_hostkeys: key 2: ssh-ed25519 SHA256:5e//fAV2fv88qQw39D0+99xSUZFw/nv8vH4VrE60lzI\ndebug3: notify_hostkeys: sent 3 hostkeys\ndebug3: send packet: type 80\ndebug1: Entering interactive session for SSH2.\ndebug2: fd 7 setting O_NONBLOCK\ndebug2: fd 8 setting O_NONBLOCK\ndebug1: server_init_dispatch\ndebug3: receive packet: type 90\ndebug1: server_input_channel_open: ctype session rchan 0 win 1048576 max 16384\ndebug1: input_session_request\ndebug1: channel 0: new [server-session]\ndebug2: session_new: allocate (allocated 0 max 10)\ndebug3: session_unused: session id 0 unused\ndebug1: session_new: session 0\ndebug1: session_open: channel 0\ndebug1: session_open: session 0: link with channel 0\ndebug1: server_input_channel_open: confirm session\ndebug3: send packet: type 91\ndebug3: receive packet: type 80\ndebug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\ndebug3: receive packet: type 98\ndebug1: server_input_channel_req: channel 0 request pty-req reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req pty-req\ndebug1: Allocating pty.\ndebug3: mm_request_send entering: type 28\ndebug3: mm_pty_allocate: waiting for MONITOR_ANS_PTY\ndebug3: mm_request_receive_expect entering: type 29\ndebug3: mm_request_receive entering\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 28\ndebug3: mm_answer_pty entering\ndebug2: session_new: allocate (allocated 0 max 10)\ndebug3: session_unused: session id 0 unused\ndebug1: session_new: session 0\ndebug1: SELinux support enabled\ndebug3: ssh_selinux_setup_pty: setting TTY context on /dev/pts/0\ndebug3: ssh_selinux_setup_pty: done\ndebug3: mm_request_send entering: type 29\ndebug3: mm_answer_pty: tty /dev/pts/0 ptyfd 5\ndebug1: session_pty_req: session 0 alloc /dev/pts/0\ndebug3: send packet: type 99\ndebug3: receive packet: type 98\ndebug1: server_input_channel_req: channel 0 request shell reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req shell\nStarting session: shell on pts/0 for vagrant from 192.168.2.46 port 54748 id 0\ndebug2: fd 3 setting TCP_NODELAY\ndebug3: ssh_packet_set_tos: set IP_TOS 0x10\ndebug2: channel 0: rfd 13 isatty\ndebug2: fd 13 setting O_NONBLOCK\ndebug3: fd 9 is O_NONBLOCK\ndebug3: mm_forward_audit_messages: entering\ndebug1: Setting controlling tty using TIOCSCTTY.\ndebug3: send packet: type 99\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 124. Wiping out the keys loaded in my ssh-agent fixed the issue on 7.7.0.0 ...but shouldn't ssh -i bypass the ssh-agent altogether?. My fault...this ended up working for me:\nssh -o IdentitiesOnly=yes -i \"$HOME\\.ssh\\vagrant_unsecure_private_key\" vagrant@192.168.2.150\n\nThanks for your help! Sorry for eating up your time.. Just noticed this thread after creating a duplicate issue a couple minutes ago (#1213).\nI'm having the same issue. Here's all of my log information.\nhttps://gist.github.com/pldmgg/edfb798404302ea73ba5c8e42f6fb591\n@manojampalam You asked @TCS-Taylor if this worked correctly in a previous version...The last time I tried this (i.e. Public Cert Auth) was with 7.6.0.0, and it seemed to work fine. I'm not able to re-test with 7.6.0.0 at this point in time though.. @NoMoreFood That was it! I set the UPN attribute for zero\\zeroadmin and it all worked.\nBut the UPN attribute isn't mandatory...is there a different way that sshd can lookup the user in AD?\n(FYI, Domain Controller is Windows 2012 R2). @NoMoreFood Awesome! Thank you!. Disregard...ssh.exe wasn't in my $env:Path. Closing.. More information on this...still not solved, but I've narrowed down the problem to the sshd Subsystem invocation of pwsh. Still not clear whether this is a pwsh.exe or OpenSSH-Win64 problem...\nThe ForceCommand pwsh.exe -NoProfile option in my original sshd_config concealed the fact that the \"successful\" ssh commands were NOT in fact using Subsystem to put me in a pwsh.exe session. Instead, logs indicate that sshd was...\nStarting session: shell on windows-pty for zero\\\\zeroadmin from 192.168.2.13 port 50944 id 0\n...and then immediately running the ForceCommand to put me in pwsh.exe. To clarify, what I should be seeing here is...\nStarting session: subsystem 'powershell' for zero\\\\zeroadmin from 192.168.2.13 port 51060 id 0\n...which is what I see when I run New-PSSession. (My updated sshd_config comments-out the ForceCommand option : https://gist.github.com/pldmgg/2850f834889fc430c08e3fd4e735c3e3)\nUnfortunately commenting out ForceCommand did not make it so that my ssh commands used Starting session: subsystem... - they were/are still showing Starting session: shell, and I did NOT end up in pwsh.exe (but Public Certificate Authentication worked).\nSo the first problem is figuring out why Subsystem is NOT being used with straight ssh commands, and it IS being used (and failing for some unknown reason) by the pwsh.exe *-PSSession cmdlets.\nUpdated sshd logs can be found here:\n1) SSHD_Results_New-PSSession_No_DefaultShell_In_Registry: https://gist.github.com/pldmgg/6cf1a2e1ca02ae540062222fc50bbb63\n2) SSHD_Results_SSHExe_No_DefaultShell_In_Registry:\nhttps://gist.github.com/pldmgg/3fa040a73ce6f83385dbc05acb96cf1a. @manojampalam Not sure what you were looking at, but I didn't just have pwsh.exe -NoProfile...Everywhere I look it has -sshs -NoLogo -NoProfile included. Can you point out where you see that?\nPlease see my updated information that I literally posted seconds before you closed this item.\nAnd just to be clear...you tried Public Certificate Authentication?. @manojampalam I did remove ForceCommand in the latest info I posted immediately preceding when you closed this item. It's pretty clear that Subsystem is not being honored when I use straight ssh commands, and is being honored when I use New-PSSession (but then fails from some unknown reason...)\nPlease let me know your thoughts on this updated info when you get a chance.\nAnd just want to make sure...you tried Public Certificate Authentication?. @manojampalam Right now, my requirement is to use Public Cert Auth and Subsystem sshd_config such that both ssh.exe and Enter-PSSession put me in a pwsh session on the remote host.\nSo far, I have not been able to accomplish this for both ssh.exe and *-PSSession cmdlets. The only scenarios that led to me being in a pwsh.exe session on a remote host (where both client and server machines are Windows OSes) are as follows:\nSCENARIO 1: \nWithout DefaultShell entry in the registry, with ForceCommand pwsh.exe -NoProfile  in sshd_config, with Subsystem powershell C:/symlinks/pwsh.exe -sshs -NoLogo -NoProfile in sshd_config.\n\nThe ssh commands in my original post place me in a pwsh.exe on the Remote Host (SUCCESS)\n*-PSSession cmdlets on the client side fail for some unknown reason (FAILURE)\nNOTE: Eventhough Subsystem... is active in sshd_config, it is not honored when using ssh.exe. It is honored when using the *-PSSession cmdlets.\nIMPORTANT NOTE: I've just confirmed that using ForceCommand pwsh.exe -sshs -NoLogo -NoProfile as you suggested causes ssh.exe to hang on the client side - so ForceCommand pwsh.exe -NoProfile is the only thing that works for me in this scenario, and only with ssh.exe commands (*-PSSession cmdlets still fail in the same way)\n\nSCENARIO 2:\nWith DefaultShell entry in the registry of C:/Program Files/Powershell/6-preview/pwsh.exe without ForceCommand in sshd_config, with Subsystem powershell C:/symlinks/pwsh.exe -sshs -NoLogo -NoProfile in sshd_config.`\n\nThe ssh commands in my original post place me in a pwsh.exe on the Remote Host (SUCCESS)\n*-PSSession cmdlets on the client side fail for some unknown reason (FAILURE)\nNOTE: Eventhough Subsystem... is active in sshd_config, it is not honored when using ssh.exe. It is honored when using the *-PSSession cmdlets.\n\nFor every other permutation of these three configuration settings (DefaultShell, ForceCommand, Subsystem) :\n\n\nAttempting to connect interactively via the ssh commands outlined in my original post have either -\n1) Placed me in cmd.exe on the remote host\n2) Prevented me from connecting altogether\n3) Hung indefinitely\n\n\nAttempting to connect via the *-PSSession cmdlets has never been successful under any circumstances.\n\n\nCan you please confirm that you've tried Public Certificate Authentication specifically? If not, can you please reopen?\nEDIT: Yes SSH Cert Auth is what I mean by Pub Cert Auth, and I see that you already confirmed that (sorry I missed that bit). But I'm 99% sure that's not the issue given the fact that I can actually authenticate using an SSH Cert. The problem is that when I use SSH Cert Auth, I can't get ssh.exe to honor the Subsystem setting to put me in pwsh and the pwsh cmdlets on the client side don't seem to work at all when specifying -KeyFilePath).. From /u/ainesophaur on reddit (https://www.reddit.com/r/PowerShell/comments/9doeqm/has_anyone_successfully_been_able_to_get_to_an/)\n\"There's a github issue about this and ultimately it was stated that authing by key pair will not grant you a kerberos session.. So you're then unable to do remote powershell using kerberos or negotiate auth. Your options are to either sign in with username and password via ssh (which will give you a kerberos ticket) or you have to use basic auth for remote powershell\"\nThis actually makes a lot of sense to me...is that what's going on here?. > Not convinced about Kerberos session theory. If key based auth works, cert auth should work as well. Are you saying key based auth doesn't work either ?\nCert and Key based auth works, but only with ssh.exe. I've never been able to get it to work with the *-PSSession cmdlets (between Windows machines ).\nUsing ssh.exe, I can get to an interactive pwsh.exe on the remote host by EITHER\n- Using a DefaultShell registry value of C:\\symlinks\\pwsh.exe; OR\n- By using ForceCommand pwsh.exe -NoProfile in sshd_config - in which case having no DefaultShell entry in the registry or having a DefaultShell entry with value C:\\Windows\\system32\\cmd.exe works.\nI understand how the subsystem is supposed to be invoked. But I think the biggest problem that I'm having on sshd when using ssh.exe is that I NEVER get to see with no pty. It ALWAYS uses pty and NEVER honors Subsystem powershell C:/symlinks/pwsh.exe -sshs -NoLogo -NoProfile. (This includes DefaultShell in registry with value pointing to C:\\Windows\\system32\\cmd.exe or C:\\symlinks\\pwsh.exe or no DefaultShell entry at all, as well as any permutation of ForceCommand in sshd_config or not using it at all.)\nIn contrast, when I use the *-PSSession cmdlets I ALWAYS see with no pty.\nSo, Problem Number 1 that I'm encountering is that ssh.exe is not honoring Subsystem under any circumstances.\nProblem Number 2 is that I can't get any of the *-PSSession cmdlets to work under any circumstances.\nRegarding Problem Number 2, I wanted to try and recreate your success where you saif:\n\nit works with DefaultShell set to cmd.exe\n\nTo be overly cautious, I wiped out all of my ssh keys from my ssh-agent and my filesystem so that the *-PSSession cmdlets give me a password prompt. Here's what happened\nSCENARIO A:\n\nDefaultShell value of \"C:\\Windows\\system32\\cmd.exe\" in registry - YES\nsshd_config here: https://gist.github.com/pldmgg/4fcdded3fb5d2cfa95d136c6b5fda6d6\n\nOn the client side I see this:\npowershell\nPS C:\\Users\\zeroadmin> New-PSSession -HostName zerowin16sshb -UserName zero\\zeroadmin\nzeroadmin@zero@zerowin16sshb's password:\nNew-PSSession : [zerowin16sshb] The background process reported an error with the following message: The SSH client session has ended with error message: Connection reset by 192.168.2.53 port 22.\nAt line:1 char:1\n+ New-PSSession -HostName zerowin16sshb -UserName zero\\zeroadmin\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+ CategoryInfo          : OpenError: (System.Manageme....RemoteRunspace:RemoteRunspace) [New-PSSession], PSRemotingTransportException\n+ FullyQualifiedErrorId : 2100,PSSessionOpenFailed \nOn the sshd side, I see this:\nhttps://gist.github.com/pldmgg/671be4e6f9dd9ffff198bbe4b555cc2d\nRESULT:\nIt accepts zero\\zeroadmin's password, but then throws this stuff...\nCreateProcessAsUserW failed error:1314\nfork of unprivileged child failed\nSCENARIO B:\nSame as SCENARIO A, but this time using ssh.exe from the client (as opposed to *-PSSession cmdlets).\nRESULT:\nIt accepts zero\\zeroadmin's password, but then throws this stuff...\nCreateProcessAsUserW failed error:1314\nfork of unprivileged child failed\nSCENARIO C:\nSame as SCENARIO B (i.e. using ssh.exe), but this time using the sshd service as opposed running sshd -ddd manually.\nRESULT:\nIt accepts zero\\zeroadmin's password, and puts me in cmd.exe on the remote host.\n\nAt this point, I'd just be happy if we could just solve Problem Number 1 - i.e. why Subsystem is never honored when I use ssh.exe. I have a hunch this is the root of all of these issues.. @manojampalam After doing more reading, I'm starting to think that Subsystem never being honored when using ssh.exe interactively is by design? Can you confirm?\nAssuming I'm correct about the above, then the main problem I'm having is how sshd is handling the *-PSSession cmdlets.\n(NOTE: I had to use psexec64 -s sshd -ddd in order to run sshd as System in order to get these logs):\nUsing Password Auth\nsshd Logs...\n(Problems after line 260)\nhttps://gist.github.com/pldmgg/2b675389975c19d27ea17cc7da14e52e\nOn the client side, it just hangs...\n```powershell\nPS C:\\Users\\zeroadmin> New-PSSession -HostName zerowin16sshb\nzeroadmin@ZERO@zerowin16sshb's password:\nI need the Ctrl-C here, otherwise it just hangs indefinitely\n```\nUsing SSH (RSA) Cert Auth:\nsshd Logs...\n(Problems after line 304)\nhttps://gist.github.com/pldmgg/c0172dfbd8a867b5f5c52ae159c14bbd\nOn the client side...\n```powershell\nPS C:\\Users\\zeroadmin> New-PSSession -HostName zerowin16sshb -UserName zero\\zeroadmin -KeyFilePath \"C:\\Users\\zeroadmin.ssh\\zeroadmin_090918_121751-cert.pub\"\nI need the Ctrl-C here, otherwise it just hangs indefinitely\n```. Okay...I guess one last question before I chalk this up to some issue completely unique to my environment:\nIs this what you see in your sshd logs for your working E2E test?\ndebug1: Executing command: \"c:\\\\windows\\\\system32\\\\cmd.exe\" /c \"C:\\PS6.1.0-rc.1\\pwsh.exe -sshs -NoLogo -NoProfile\" with no pty. @manojampalam Thanks for working with me on this!\nUnfortunately, I still haven't had any success getting the *-PSSession cmdlets to work between two Windows 2016 Standard machines. I've tried fresh VMs, different domains, always with the result where pwsh on the client Win16 machine hangs and I need to Ctrl+C.\nI'm certain that I've followed all of the aforementioned guidance (symlinks, permissions, etc), but still no dice.\nI'm not going to close this issue because I really feel like someone should be able to recreate what's happening with my environment. But I understand if a contributor wants to close this issue without a solution if the issue can't be recreated.. HOLY CRAP I figured it out!\nMy mistake was that I was creating the symlink to pwsh.exe directly as opposed to its parent directory, i.e.\npowershell\nNew-Item -ItemType SymbolicLink -Path \"C:\\symlinks\\pwsh.exe\" -Target $(Get-Command pwsh).Source\nWhen I made a symlink to pwsh.exe's parent directory (and updated the Subsystem path in sshd_config), the *-PSSession cmdlets started working:\npowershell\nNew-Item -ItemType SymbolicLink -Path \"C:\\pwshRoot\" -Target $($(Get-Command pwsh).Source | Split-Path -Parent)\nNow we're firing on all cylinders (password auth, key auth, ssh cert auth)\nThanks for your help @manojampalam !. ",
    "ebekker": "Thanks, should've tried that to start, but glad I filed the issue, I can document my findings here for benefit of others.\nSo here are the issues...\n~~1. For starters, was getting the error:~~\nNetUserGetInfo() failed with error: 2221 for user: XXXX and domain: (null)\n~~Turns out that in order to test against a domain user's group memberships you have to use a domain qualified form of the username, so when you sign in, you have to use something like domain\\username.~~ \n~~What's interesting is that when you don't qualify it with the domain, it doesn't satisfy the Match Group, however the authentication  still succeeds, so the main authentication piece is still resolving against the domain user account.  This could be a security issue, no?  A user who would otherwise be restricted Match configuration, would be able to bypass it.~~\nThis turned out to be a non-issue, see my comment below.\n\nAfter I started signing in with domain-qualified username, I found that Match clause was still not matching against the group name which was specified in group@domain format.  Here it turns out, I specified the group name in mixed case to match how it's defined in AD (based on ADUC), but in the log it was clearly testing against the lowercased-form of the group names + domains.  So once I updated the Match clause to lowercase the group name, it started working.\n. Turns out (1) above was incorrect on my part, I misinterpreted the log output.  It was strictly (2) issue, once the groups names were all lowercased in the Match everything works as expected.\n. \n",
    "schifazl": "Thanks for your quick reply!\nI've created a local user and it worked flawlessly. I've also checked if the DC is accessible by using\nnltest /dsgetdc:<domain name> and it also worked.. Hello!\nStill no luck with my account.\nAny idea?. Still no luck.\nStrange thing: I tried to edit the sshd_config file by explicitly adding PubkeyAuthentication yes and PasswordAuthentication no, but it seems that the configuration is ignores, as the public  key method will allways fail and fall back to the password auth.. ",
    "mlt": "Somehow it does not work for me too. I have a local user (not domain). I try to ForceCommand C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe just to test (I know it breaks sftp and alikes). However I end up seeing regular prompt. I use v7.9.0.0 commit 68ad673db4bf971b5c087cef19bb32953fd9db75\nThe overall goal is to use rrsync. However COMMAND from authorized_keys seems to be ignored as well. I bet it is another issue though.. ",
    "musm": "that's a pretty bad, any chance the conhost bug can be reported ?  Is there somewhere we can track progress on this. . Seems to be fixed?\n. ",
    "riverar": "Can you please provide the TFS # for reference? Thanks!. It's also worth mentioning in some ncurses apps, like iftop, resizing completely hangs conhost and you have to kill it, as of 17134.. Can confirm flashing and hanging (e.g. iftop) is gone in 17763. ",
    "itn3000": "It seems to be occured in my testing environment(win2008r2) too.\nhere is my log.\nserver side(sshd -ddd)\n```\ndebug2: load_server_config: filename PROGRAMDATA\\ssh/sshd_config\ndebug2: load_server_config: done config len = 152\ndebug2: parse_server_config: config PROGRAMDATA\\ssh/sshd_config len 152\ndebug3: PROGRAMDATA\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: PROGRAMDATA\\ssh/sshd_config:76 setting Subsystem sftp  sftp-server.exe\ndebug1: sshd version OpenSSH_for_Windows_7.6, LibreSSL 2.6.4\ndebug3: ReadFileEx() ERROR:38, io:00000000001BC5D0\ndebug3: read - no more data, io:00000000001BC5D0\ndebug3: ReadFileEx() ERROR:38, io:00000000001BC5D0\ndebug3: read - no more data, io:00000000001BC5D0\ndebug1: private host key #0: ssh-rsa SHA256:CH3Kjtyf6HACEW6l9m8zR5itqJ/FGaJxuk/UfW4WrXY\ndebug3: ReadFileEx() ERROR:38, io:00000000001DC230\ndebug3: read - no more data, io:00000000001DC230\ndebug3: ReadFileEx() ERROR:38, io:00000000001DC230\ndebug3: read - no more data, io:00000000001DC230\ndebug1: private host key #1: ssh-dss SHA256:wD7Ox3vIDC7BUbSVnVC8xZblSMc2ApodwOWuNbtQhTA\ndebug3: ReadFileEx() ERROR:38, io:00000000001DC230\ndebug3: read - no more data, io:00000000001DC230\ndebug3: ReadFileEx() ERROR:38, io:00000000001DC230\ndebug3: read - no more data, io:00000000001DC230\ndebug1: private host key #2: ecdsa-sha2-nistp256 SHA256:Ib6MMdqEcedwtQnHw+PgoGABkmIjaiyuv3XzAyRmGyQ\ndebug3: ReadFileEx() ERROR:38, io:00000000001DC230\ndebug3: read - no more data, io:00000000001DC230\ndebug3: ReadFileEx() ERROR:38, io:00000000001DC230\ndebug3: read - no more data, io:00000000001DC230\ndebug1: private host key #3: ssh-ed25519 SHA256:MAUxGz02UEfRSxN6oC2ormSbWkM+ywdT1PoGZbnF7X0\ndebug1: rexec_argv[0]='c:\\bin\\OpenSSH-Win64\\sshd'\ndebug1: rexec_argv[1]='-ddd'\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug3: fd 5 is not O_NONBLOCK\ndebug1: Server will not fork when running in debugging mode.\ndebug3: send_rexec_state: entering fd = 8 config len 152\ndebug3: ssh_msg_send: type 0\ndebug3: send_rexec_state: done\nConnection from ::1 port 57767 on ::1 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_for_Windows_7.6\ndebug1: match: OpenSSH_for_Windows_7.6 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.6\ndebug2: fd 5 setting O_NONBLOCK\ndebug3: spawning \"c:\\bin\\OpenSSH-Win64\\sshd\" \"-ddd\" \"-y\"\ndebug2: Network child is on pid 1280\ndebug3: recv_rexec_state: entering fd = 3\ndebug3: send_rexec_state: entering fd = 4 config len 152\ndebug3: ssh_msg_recv entering\ndebug3: ssh_msg_send: type 0\ndebug3: recv_rexec_state: done\ndebug3: send_rexec_state: done\ndebug2: parse_server_config: config PROGRAMDATA\\ssh/sshd_config len 152\ndebug3: ssh_msg_send: type 0\ndebug3: PROGRAMDATA\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: PROGRAMDATA\\ssh/sshd_config:76 setting Subsystem sftp  sftp-server.exe\ndebug3: ssh_msg_send: type 0\ndebug1: sshd version OpenSSH_for_Windows_7.6, LibreSSL 2.6.4\ndebug3: ssh_msg_recv entering\ndebug3: preauth child monitor started\ndebug3: ssh_msg_recv entering\ndebug2: fd 5 setting O_NONBLOCK\ndebug3: privsep user:group 1:0 [preauth]\ndebug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms [preauth]\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug3: send packet: type 20 [preauth]\ndebug1: SSH2_MSG_KEXINIT sent [preauth]\ndebug3: receive packet: type 20 [preauth]\ndebug1: SSH2_MSG_KEXINIT received [preauth]\ndebug2: local server KEXINIT proposal [preauth]\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1 [preauth]\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: compression ctos: none [preauth]\ndebug2: compression stoc: none [preauth]\ndebug2: languages ctos:  [preauth]\ndebug2: languages stoc:  [preauth]\ndebug2: first_kex_follows 0  [preauth]\ndebug2: reserved 0  [preauth]\ndebug2: peer client KEXINIT proposal [preauth]\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c [preauth]\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa [preauth]\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: compression ctos: none [preauth]\ndebug2: compression stoc: none [preauth]\ndebug2: languages ctos:  [preauth]\ndebug2: languages stoc:  [preauth]\ndebug2: first_kex_follows 0  [preauth]\ndebug2: reserved 0  [preauth]\ndebug1: kex: algorithm: curve25519-sha256 [preauth]\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none [preauth]\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none [preauth]\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\ndebug3: receive packet: type 30 [preauth]\ndebug3: mm_key_sign entering [preauth]\ndebug3: mm_request_send entering: type 6 [preauth]\ndebug3: mm_key_sign: waiting for MONITOR_ANS_SIGN [preauth]\ndebug3: mm_request_receive_expect entering: type 7 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 6\ndebug3: mm_answer_sign\ndebug3: mm_answer_sign: hostkey proof signature 0000000000190090(99)\ndebug3: mm_request_send entering: type 7\ndebug2: monitor_read: 6 used once, disabling now\ndebug3: send packet: type 31 [preauth]\ndebug3: send packet: type 21 [preauth]\ndebug2: set_newkeys: mode 1 [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: SSH2_MSG_NEWKEYS sent [preauth]\ndebug1: expecting SSH2_MSG_NEWKEYS [preauth]\ndebug3: send packet: type 7 [preauth]\ndebug3: receive packet: type 21 [preauth]\ndebug1: SSH2_MSG_NEWKEYS received [preauth]\ndebug2: set_newkeys: mode 0 [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: KEX done [preauth]\ndebug3: receive packet: type 5 [preauth]\ndebug3: send packet: type 6 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user administrator service ssh-connection method none [preauth]\ndebug1: attempt 0 failures 0 [preauth]\ndebug3: mm_getpwnamallow entering [preauth]\ndebug3: mm_request_send entering: type 8 [preauth]\ndebug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\ndebug3: mm_request_receive_expect entering: type 9 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 8\ndebug3: mm_answer_pwnamallow\ndebug2: parse_server_config: config reprocess config len 152\ndebug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 1\ndebug3: mm_request_send entering: type 9\ndebug2: monitor_read: 8 used once, disabling now\ndebug2: input_userauth_request: setting up authctxt for administrator [preauth]\ndebug3: mm_inform_authserv entering [preauth]\ndebug3: mm_request_send entering: type 4 [preauth]\ndebug2: input_userauth_request: try method none [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 4\ndebug3: mm_answer_authserv: service=ssh-connection, style=\ndebug2: monitor_read: 4 used once, disabling now\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user administrator service ssh-connection method keyboard-interactive [preauth]\ndebug1: attempt 1 failures 0 [preauth]\ndebug2: input_userauth_request: try method keyboard-interactive [preauth]\ndebug1: keyboard-interactive devs  [preauth]\ndebug1: auth2_challenge: user=administrator devs= [preauth]\ndebug1: kbdint_alloc: devices '' [preauth]\ndebug2: auth2_challenge_start: devices  [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user administrator service ssh-connection method password [preauth]\ndebug1: attempt 2 failures 1 [preauth]\ndebug2: input_userauth_request: try method password [preauth]\ndebug3: mm_auth_password entering [preauth]\ndebug3: mm_request_send entering: type 12 [preauth]\ndebug3: mm_auth_password: waiting for MONITOR_ANS_AUTHPASSWORD [preauth]\ndebug3: mm_request_receive_expect entering: type 13 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 12\ndebug3: mm_answer_authpassword: sending result 1\ndebug3: mm_request_send entering: type 13\nAccepted password for administrator from ::1 port 57767 ssh2\ndebug1: monitor_child_preauth: administrator has been authenticated by privileged process\ndebug3: mm_get_keystate: Waiting for new keys\ndebug3: mm_request_receive_expect entering: type 26\ndebug3: mm_request_receive entering\ndebug3: mm_get_keystate: GOT new keys\ndebug3: mm_auth_password: user authenticated [preauth]\ndebug3: send packet: type 52 [preauth]\ndebug3: mm_request_send entering: type 26 [preauth]\ndebug3: mm_send_keystate: Finished sending state [preauth]\ndebug3: ReadFileEx() ERROR:109, io:00000000001E1F90\ndebug3: read - no more data, io:00000000001E1F90\ndebug1: monitor_read_log: child log fd closed\ndebug3: spawning \"c:\\bin\\OpenSSH-Win64\\sshd\" \"-ddd\" \"-z\"\nUser child is on pid 4436\ndebug3: send_rexec_state: entering fd = 4 config len 152\ndebug3: recv_rexec_state: entering fd = 3\ndebug3: ssh_msg_send: type 0\ndebug3: ssh_msg_recv entering\ndebug3: recv_rexec_state: done\ndebug3: send_rexec_state: done\ndebug2: parse_server_config: config PROGRAMDATA\\ssh/sshd_config len 152\ndebug3: ssh_msg_send: type 0\ndebug3: PROGRAMDATA\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: PROGRAMDATA\\ssh/sshd_config:76 setting Subsystem sftp  sftp-server.exe\ndebug3: ssh_msg_send: type 0\ndebug1: sshd version OpenSSH_for_Windows_7.6, LibreSSL 2.6.4\ndebug3: ssh_msg_send: type 0\ndebug3: ssh_msg_recv entering\ndebug3: ssh_msg_recv entering\ndebug2: fd 4 setting O_NONBLOCK\ndebug2: parse_server_config: config reprocess config len 152\ndebug3: ssh_msg_recv entering\ndebug3: monitor_apply_keystate: packet_set_state\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: ssh_packet_set_postauth: called\ndebug3: ssh_packet_set_state: done\ndebug3: notify_hostkeys: key 0: ssh-rsa SHA256:CH3Kjtyf6HACEW6l9m8zR5itqJ/FGaJxuk/UfW4WrXY\ndebug3: notify_hostkeys: key 1: ssh-dss SHA256:wD7Ox3vIDC7BUbSVnVC8xZblSMc2ApodwOWuNbtQhTA\ndebug3: notify_hostkeys: key 2: ecdsa-sha2-nistp256 SHA256:Ib6MMdqEcedwtQnHw+PgoGABkmIjaiyuv3XzAyRmGyQ\ndebug3: notify_hostkeys: key 3: ssh-ed25519 SHA256:MAUxGz02UEfRSxN6oC2ormSbWkM+ywdT1PoGZbnF7X0\ndebug3: notify_hostkeys: sent 4 hostkeys\ndebug3: send packet: type 80\ndebug1: Entering interactive session for SSH2.\ndebug2: fd 7 setting O_NONBLOCK\ndebug2: fd 8 setting O_NONBLOCK\ndebug1: server_init_dispatch\ndebug3: receive packet: type 90\ndebug1: server_input_channel_open: ctype session rchan 0 win 1048576 max 16384\ndebug1: input_session_request\ndebug1: channel 0: new [server-session]\ndebug2: session_new: allocate (allocated 0 max 10)\ndebug3: session_unused: session id 0 unused\ndebug1: session_new: session 0\ndebug1: session_open: channel 0\ndebug1: session_open: session 0: link with channel 0\ndebug1: server_input_channel_open: confirm session\ndebug3: send packet: type 91\ndebug3: receive packet: type 80\ndebug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\ndebug3: receive packet: type 98\ndebug1: server_input_channel_req: channel 0 request pty-req reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req pty-req\ndebug1: Allocating pty.\ndebug1: session_pty_req: session 0 alloc console\ndebug3: send packet: type 99\ndebug3: receive packet: type 98\ndebug1: server_input_channel_req: channel 0 request shell reply 1\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_input_channel_req: session 0 req shell\nStarting session: shell on console for administrator from ::1 port 57767 id 0\ndebug2: fd 9 setting O_NONBLOCK\ndebug2: fd 10 setting O_NONBLOCK\ndebug2: fd 11 setting O_NONBLOCK\ndebug2: fd 12 setting O_NONBLOCK\ndebug2: fd 13 setting O_NONBLOCK\ndebug2: fd 14 setting O_NONBLOCK\ndebug1: Executing command: c:\\bin\\OpenSSH-Win64\\ssh-shellhost.exe \ndebug2: fd 4 setting TCP_NODELAY\ndebug2: channel 0: rfd 11 isatty\ndebug3: fd 11 is O_NONBLOCK\ndebug3: fd 10 is O_NONBLOCK\ndebug3: fd 13 is O_NONBLOCK\ndebug3: send packet: type 99\ndebug2: channel 0: read<=0 rfd 11 len 0\ndebug2: channel 0: read failed\ndebug2: channel 0: close_read\ndebug2: channel 0: input open -> drain\ndebug2: channel 0: read 0 from efd 13\ndebug2: channel 0: closing read-efd 13\ndebug2: channel 0: ibuf empty\ndebug2: channel 0: send eof\ndebug3: send packet: type 96\ndebug2: channel 0: input drain -> closed\ndebug2: notify_done: reading\ndebug1: Received SIGCHLD.\ndebug1: session_by_pid: pid 1992\ndebug1: session_exit_message: session 0 channel 0 pid 1992\ndebug2: channel 0: request exit-status confirm 0\ndebug3: send packet: type 98\ndebug1: session_exit_message: release channel 0\ndebug2: channel 0: write failed\ndebug2: channel 0: close_write\ndebug2: channel 0: send eow\ndebug2: channel 0: output open -> closed\ndebug3: mm_request_send entering: type 30\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 30\ndebug2: channel 0: send close\ndebug3: mm_answer_pty_cleanup entering\ndebug3: send packet: type 97\ndebug1: session_by_tty: unknown tty console\ndebug3: channel 0: will not send data after close\ndebug3: receive packet: type 97\ndebug2: channel 0: rcvd close\ndebug3: channel 0: will not send data after close\ndebug2: channel 0: is dead\ndebug2: channel 0: gc: notify user\ndebug1: session_by_channel: session 0 channel 0\ndebug1: session_close_by_channel: channel 0 child 0\nClose session: user administrator from ::1 port 57767 id 0\ndebug3: session_unused: session id 0 unused\ndebug2: channel 0: gc: user detached\ndebug2: channel 0: is dead\ndebug2: channel 0: garbage collecting\ndebug1: channel 0: free: server-session, nchannels 1\ndebug3: channel 0: status: The following connections are open:\n  #0 server-session (t4 r0 i3/0 o3/0 fd -1/-1 cc -1)\ndebug3: WSARecv - WSARecv() ERROR: io:0000000000312450 10054\ndebug3: recv - from CB ERROR:108, io:0000000000312450\nRead error from remote host ::1 port 57767: Unknown error\ndebug1: do_cleanup\ndebug3: mm_request_receive entering\ndebug1: do_cleanup\n```\nclient side(ssh -vvv administrator@localhost)\n```file:ssh-client-debug.log\nOpenSSH_for_Windows_7.6p1, LibreSSL 2.6.4\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/config error:2\ndebug3: Failed to open file:C:\\ProgramData\\ssh/ssh_config error:2\ndebug2: resolving \"localhost\" port 22\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to localhost [::1] port 22.\ndebug1: Connection established.\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_rsa error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_rsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_rsa type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_rsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_rsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_rsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_dsa error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_dsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_dsa type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_dsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_dsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_dsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ecdsa error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ecdsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_ecdsa type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ecdsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ecdsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_ecdsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ed25519 error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ed25519.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_ed25519 type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ed25519-cert error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ed25519-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_ed25519-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.6\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_for_Windows_7.6\ndebug1: match: OpenSSH_for_Windows_7.6 pat OpenSSH* compat 0x04000000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to localhost:22 as 'administrator'\ndebug3: hostkeys_foreach: reading file \"C:\\Users\\Administrator/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file C:\\Users\\Administrator/.ssh/known_hosts:1\ndebug3: load_hostkeys: loaded 1 keys from localhost\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/known_hosts2 error:2\ndebug3: Failed to open file:C:\\ProgramData\\ssh/ssh_known_hosts error:2\ndebug3: Failed to open file:C:\\ProgramData\\ssh/ssh_known_hosts2 error:2\ndebug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos: \ndebug2: languages stoc: \ndebug2: first_kex_follows 0 \ndebug2: reserved 0 \ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos: \ndebug2: languages stoc: \ndebug2: first_kex_follows 0 \ndebug2: reserved 0 \ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug3: send packet: type 30\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug3: receive packet: type 31\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:Ib6MMdqEcedwtQnHw+PgoGABkmIjaiyuv3XzAyRmGyQ\ndebug3: hostkeys_foreach: reading file \"C:\\Users\\Administrator/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file C:\\Users\\Administrator/.ssh/known_hosts:1\ndebug3: load_hostkeys: loaded 1 keys from localhost\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/known_hosts2 error:2\ndebug3: Failed to open file:C:\\ProgramData\\ssh/ssh_known_hosts error:2\ndebug3: Failed to open file:C:\\ProgramData\\ssh/ssh_known_hosts2 error:2\ndebug1: Host 'localhost' is known and matches the ECDSA host key.\ndebug1: Found key in C:\\Users\\Administrator/.ssh/known_hosts:1\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug3: unable to connect to pipe \\\\.\\pipe\\openssh-ssh-agent, error: 2\ndebug1: pubkey_prepare: ssh_get_authentication_socket: No such file or directory\ndebug2: key: C:\\Users\\Administrator/.ssh/id_rsa (0000000000000000)\ndebug2: key: C:\\Users\\Administrator/.ssh/id_dsa (0000000000000000)\ndebug2: key: C:\\Users\\Administrator/.ssh/id_ecdsa (0000000000000000)\ndebug2: key: C:\\Users\\Administrator/.ssh/id_ed25519 (0000000000000000)\ndebug3: send packet: type 5\ndebug3: receive packet: type 7\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=\ndebug3: receive packet: type 6\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: C:\\Users\\Administrator/.ssh/id_rsa\ndebug3: no such identity: C:\\Users\\Administrator/.ssh/id_rsa: No such file or directory\ndebug1: Trying private key: C:\\Users\\Administrator/.ssh/id_dsa\ndebug3: no such identity: C:\\Users\\Administrator/.ssh/id_dsa: No such file or directory\ndebug1: Trying private key: C:\\Users\\Administrator/.ssh/id_ecdsa\ndebug3: no such identity: C:\\Users\\Administrator/.ssh/id_ecdsa: No such file or directory\ndebug1: Trying private key: C:\\Users\\Administrator/.ssh/id_ed25519\ndebug3: no such identity: C:\\Users\\Administrator/.ssh/id_ed25519: No such file or directory\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup keyboard-interactive\ndebug3: remaining preferred: password\ndebug3: authmethod_is_enabled keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug2: userauth_kbdint\ndebug3: send packet: type 50\ndebug2: we sent a keyboard-interactive packet, wait for reply\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: userauth_kbdint: disable: no info_req_seen\ndebug2: we did not send a packet, disable method\ndebug3: authmethod_lookup password\ndebug3: remaining preferred: \ndebug3: authmethod_is_enabled password\ndebug1: Next authentication method: password\ndebug3: failed to open file:/dev/tty error:3\ndebug1: read_passphrase: can't open /dev/tty: No such file or directory\ndebug3: send packet: type 50\ndebug2: we sent a password packet, wait for reply\ndebug3: receive packet: type 52\ndebug1: Authentication succeeded (password).\nAuthenticated to localhost ([::1]:22).\ndebug2: fd 6 setting O_NONBLOCK\ndebug3: fcntl - SetHandleInformation failed with error:87, io:00000000003A01C0\ndebug3: fcntl - SetHandleInformation failed with error:87, io:000000000039C320\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug3: send packet: type 90\ndebug1: Requesting no-more-sessions@openssh.com\ndebug3: send packet: type 80\ndebug1: Entering interactive session.\ndebug1: pledge: network\ndebug1: console doesn't support the ansi parsing\ndebug3: receive packet: type 80\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\ndebug3: receive packet: type 91\ndebug2: channel_input_open_confirmation: channel 0: callback start\ndebug2: fd 3 setting TCP_NODELAY\ndebug2: client_session2_setup: id 0\ndebug2: channel 0: request pty-req confirm 1\ndebug3: send packet: type 98\ndebug2: channel 0: request shell confirm 1\ndebug3: send packet: type 98\ndebug2: channel_input_open_confirmation: channel 0: callback done\ndebug2: channel 0: open confirm rwindow 0 rmax 32768\ndebug3: receive packet: type 99\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: PTY allocation request accepted on channel 0\ndebug2: channel 0: rcvd adjust 2097152\ndebug3: receive packet: type 99\ndebug2: channel_input_status_confirm: type 99 id 0\ndebug2: shell request accepted on channel 0\ndebug3: receive packet: type 96\ndebug2: channel 0: rcvd eof\ndebug2: channel 0: output open -> drain\ndebug2: channel 0: obuf empty\ndebug2: channel 0: close_write\ndebug2: channel 0: output drain -> closed\ndebug3: receive packet: type 98\ndebug1: client_input_channel_req: channel 0 rtype exit-status reply 0\ndebug3: receive packet: type 97\ndebug2: channel 0: rcvd close\ndebug2: channel 0: close_read\ndebug2: channel 0: input open -> closed\ndebug3: channel 0: will not send data after close\ndebug2: channel 0: almost dead\ndebug2: channel 0: gc: notify user\ndebug2: channel 0: gc: user detached\ndebug2: channel 0: send close\ndebug3: send packet: type 97\ndebug2: channel 0: is dead\ndebug2: channel 0: garbage collecting\ndebug1: channel 0: free: client-session, nchannels 1\ndebug3: channel 0: status: The following connections are open:\n  #0 client-session (t4 r0 i3/0 o3/0 fd -1/-1 cc -1)\ndebug3: send packet: type 1\ndebug3: fd 2 is not O_NONBLOCK\nConnection to localhost closed.\nTransferred: sent 1940, received 5432 bytes, in 4.2 seconds\nBytes per second: sent 458.9, received 1284.9\ndebug1: Exit status 0\n```. sorry, after I tried re-installing, error no longer occured.. ",
    "sddim": "Report.zip\n. There's a crash dump:\nsshd.exe.24680.dmp.zip\n. The only unusal thing that comes to my mind in regard to the affected user is that the user's home direcory (in C:\\users)  has a different name than the username (created by Windows, in the form user.machine, since a folder with the name of the user coincidentally already existed).. ",
    "cstalker99": "version v1.0.0.0-Beta of openssh installed on server2. ",
    "doussse": "Yes, it works on unix..... ",
    "JoeSchr": "He, I'm trying to connect via SFTP Net Drive, everything works if I connect via a \"normal\" ssh client, also triple-checked user/pw combo. It seems to be an issue with the available crypto, is there anything you guys can do on your end or is this on SFTP Net Drive?\nHere is the log from SFTP Net Drive:\n```\nSFTP Net Drive 2017 17.0.0.621\nWindows 10 x64 Build 17134\nDriver installed: 2017.0.3.12, state: running\n16:14:31.302    4998    INFO    Creating the main window\n16:14:31.373    4998    INFO    Initializing controls\n16:14:31.561    4998    INFO    Initializing the application settings\n16:14:31.710    4998    INFO    Loading the application settings\n16:14:31.790    4998    INFO        - drive connected = False\n16:14:31.875    4998    INFO        - startup action = ifbefore\n16:14:31.975    4998    INFO        - minimize on close = False\n16:14:32.061    4998    INFO        - minimize on connected = False\n16:14:32.153    4998    INFO        - spawn instances for connections = False\n16:14:32.275    4998    INFO        - last profile = [PrimePc-Dev]\n16:14:32.351    4998    INFO    Filling in the list of Windows drives\n16:14:32.431    4998    INFO    Loading profiles to the list\n16:14:32.497    4998    INFO        loaded profiles: 3\n16:14:32.570    4998    INFO    Looking for the last profile used: [PrimePc-Dev]\n16:14:32.630    4998    INFO    Last used profile found\n16:14:32.700    4998    INFO    Auto connect: False\n16:14:39.589    4998    INFO    Creating drive handler\n16:14:39.619    4998    INFO    Drive handler created\n16:14:39.741    4998    INFO    Creating drive handler starter\n16:14:39.859    4998    INFO    Drive handler starter has been started\n16:14:39.859    09B4    INFO    ----- executing TDriveHandlerStarter\n16:14:40.054    09B4    INFO    State changed from OFFLINE to CONNECTING\n16:14:40.177    09B4    INFO    Creating SFTP client\n16:14:40.219    09B4    INFO    Enabled protocol versions\n16:14:40.274    09B4    INFO        SFTPv2, SFTPv3, SFTPv4, SFTPv5, SFTPv6\n16:14:40.330    09B4    INFO    Enabled algorithms\n16:14:40.385    09B4    INFO        key exchange:\n16:14:40.440    09B4    INFO            diffie-hellman-group-exchange-sha1 (33)\n16:14:40.508    09B4    INFO            diffie-hellman-group1-sha1 (32)\n16:14:40.563    09B4    INFO            diffie-hellman-group14-sha1 (31)\n16:14:40.619    09B4    INFO            diffie-hellman-group-exchange-sha256 (30)\n16:14:40.640    09B4    INFO        message authentication:\n16:14:40.662    09B4    INFO            hmac-sha2-256 (28)\n16:14:40.733    09B4    INFO            aes128-gcm (27)\n16:14:40.816    09B4    INFO            hmac-sha2-512 (26)\n16:14:40.885    09B4    INFO            hmac-sha256-96@ssh.com (25)\n16:14:40.955    09B4    INFO            hmac-sha1 (24)\n16:14:41.006    09B4    INFO            hmac-ripemd160 (23)\n16:14:41.062    09B4    INFO            hmac-ripemd (22)\n16:14:41.117    09B4    INFO            hmac-ripemd160@openssh.com (21)\n16:14:41.173    09B4    INFO            umac-128@openssh.com (20)\n16:14:41.228    09B4    INFO            umac-96@openssh.com (19)\n16:14:41.308    09B4    INFO            umac-64@openssh.com (18)\n16:14:41.372    09B4    INFO            umac-32@openssh.com (17)\n16:14:41.433    09B4    INFO            aes256-gcm (16)\n16:14:41.528    09B4    INFO            hmac-sha1-96 (15)\n16:14:41.583    09B4    INFO            hmac-sha256@ssh.com (14)\n16:14:41.639    09B4    INFO            hmac-md5 (13)\n16:14:41.694    09B4    INFO            hmac-md5-96 (12)\n16:14:41.749    09B4    INFO            chacha20-poly1305@openssh.com (11)\n16:14:41.805    09B4    INFO            none (10)\n16:14:41.861    09B4    INFO        public key:\n16:14:41.955    09B4    INFO            ssh-rsa (46)\n16:14:42.027    09B4    INFO            ssh-dss (45)\n16:14:42.093    09B4    INFO            ecdsa-sha2-nistb409 (44)\n16:14:42.149    09B4    INFO            ecdsa-sha2-nistk409 (43)\n16:14:42.204    09B4    INFO            ecdsa-sha2-nistk283 (42)\n16:14:42.271    09B4    INFO            ecdsa-sha2-nistb233 (41)\n16:14:42.337    09B4    INFO            ecdsa-sha2-nistk233 (40)\n16:14:42.426    09B4    INFO            ecdsa-sha2-nistp224 (39)\n16:14:42.493    09B4    INFO            ecdsa-sha2-nistp192 (38)\n16:14:42.560    09B4    INFO            ecdsa-sha2-nistk163 (37)\n16:14:42.626    09B4    INFO            ecdsa-sha2-nistt571 (36)\n16:14:42.693    09B4    INFO            ecdsa-sha2-nistp521 (35)\n16:14:42.759    09B4    INFO            ecdsa-sha2-nistp256 (34)\n16:14:42.826    09B4    INFO            x509v3-sign-dss (33)\n16:14:42.912    09B4    INFO            x509v3-sign-rsa (32)\n16:14:42.994    09B4    INFO            ecdsa-sha2-nistp384 (31)\n16:14:43.048    09B4    INFO            ecdsa-sha2-curve25519 (30)\n16:14:43.115    09B4    INFO            pgp-sign-dss (29)\n16:14:43.170    09B4    INFO            pgp-sign-rsa (28)\n16:14:43.225    09B4    INFO            spki-sign-dss (27)\n16:14:43.281    09B4    INFO            spki-sign-rsa (26)\n16:14:43.336    09B4    INFO            x509v3-ssh-rsa (25)\n16:14:43.403    09B4    INFO            x509v3-ssh-dss (24)\n16:14:43.524    09B4    INFO            x509v3-rsa2048-sha256 (23)\n16:14:43.547    09B4    INFO            x509v3-ecdsa-sha2-nistp256 (22)\n16:14:43.569    09B4    INFO            x509v3-ecdsa-sha2-nistp384 (21)\n16:14:43.625    09B4    INFO            x509v3-ecdsa-sha2-nistp521 (20)\n16:14:43.719    09B4    INFO            x509v3-ecdsa-sha2-nistk163 (19)\n16:14:43.769    09B4    INFO            x509v3-ecdsa-sha2-nistp192 (18)\n16:14:43.824    09B4    INFO            x509v3-ecdsa-sha2-nistp224 (17)\n16:14:43.879    09B4    INFO            x509v3-ecdsa-sha2-nistk233 (16)\n16:14:43.954    09B4    INFO            x509v3-ecdsa-sha2-nistb233 (15)\n16:14:44.024    09B4    INFO            x509v3-ecdsa-sha2-nistk283 (14)\n16:14:44.090    09B4    INFO            x509v3-ecdsa-sha2-nistk409 (13)\n16:14:44.146    09B4    INFO            x509v3-ecdsa-sha2-nistb409 (12)\n16:14:44.201    09B4    INFO            x509v3-ecdsa-sha2-nistt571 (11)\n16:14:44.256    09B4    INFO            x509v3-ecdsa-sha2-curve25519 (10)\n16:14:44.312    09B4    INFO        encryption:\n16:14:44.368    09B4    INFO            aes256-cbc (46)\n16:14:44.422    09B4    INFO            aes192-cbc (45)\n16:14:44.489    09B4    INFO            aes128-cbc (44)\n16:14:44.598    09B4    INFO            aes256-ctr (43)\n16:14:44.626    09B4    INFO            aes192-ctr (42)\n16:14:44.679    09B4    INFO            aes128-ctr (41)\n16:14:44.734    09B4    INFO            aes128-gcm (40)\n16:14:44.789    09B4    INFO            aes256-gcm (39)\n16:14:44.845    09B4    INFO            aes128-gcm@openssh.com (38)\n16:14:44.901    09B4    INFO            aes256-gcm@openssh.com (37)\n16:14:44.966    09B4    INFO            twofish256-cbc (36)\n16:14:45.056    09B4    INFO            twofish192-cbc (35)\n16:14:45.123    09B4    INFO            twofish128-cbc (34)\n16:14:45.166    09B4    INFO            serpent256-cbc (33)\n16:14:45.212    09B4    INFO            serpent192-cbc (32)\n16:14:45.278    09B4    INFO            serpent128-cbc (31)\n16:14:45.344    09B4    INFO            blowfish-cbc (30)\n16:14:45.411    09B4    INFO            twofish128-ctr (29)\n16:14:45.478    09B4    INFO            twofish192-ctr (28)\n16:14:45.569    09B4    INFO            twofish256-ctr (27)\n16:14:45.644    09B4    INFO            serpent128-ctr (26)\n16:14:45.711    09B4    INFO            serpent192-ctr (25)\n16:14:45.777    09B4    INFO            serpent256-ctr (24)\n16:14:45.844    09B4    INFO            blowfish-ctr (23)\n16:14:45.899    09B4    INFO            idea-ctr (22)\n16:14:45.963    09B4    INFO            cast128-ctr (21)\n16:14:46.033    09B4    INFO            arcfour128 (20)\n16:14:46.124    09B4    INFO            arcfour256 (19)\n16:14:46.199    09B4    INFO            cast128-cbc (18)\n16:14:46.254    09B4    INFO            3des-cbc (17)\n16:14:46.290    09B4    INFO            3des-ctr (16)\n16:14:46.310    09B4    INFO            chacha20-poly1305 (15)\n16:14:46.334    09B4    INFO            arcfour (14)\n16:14:46.354    09B4    INFO            idea-cbc (13)\n16:14:46.378    09B4    INFO            chacha20-poly1305@openssh.com (12)\n16:14:46.442    09B4    INFO            des-cbc (11)\n16:14:46.498    09B4    INFO            none (10)\n16:14:46.554    09B4    INFO        compression:\n16:14:46.634    09B4    INFO            zlib (30)\n16:14:46.697    09B4    INFO            zlib@openssh.com (20)\n16:14:46.737    09B4    INFO            none (10)\n16:14:46.778    09B4    INFO    SFTP client created\n16:14:46.851    09B4    INFO    Connecting to 10.0.0.21:22\n16:14:46.920    09B4    INFO        authentication: password\n16:14:46.975    09B4    INFO        keyboard authetication: enabled\n16:14:47.104    09B4    INFO    Server: OpenSSH_for_Windows_7.7\n16:14:47.237    09B4    INFO    Server supported algorithms:\n16:14:47.277    09B4    INFO        curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\n16:14:47.363    09B4    INFO        ssh-ed25519\n16:14:47.429    09B4    INFO        chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\n16:14:47.496    09B4    INFO        chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\n16:14:47.573    09B4    INFO        umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n16:14:47.647    09B4    INFO        umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\n16:14:47.699    09B4    INFO        none\n16:14:47.762    09B4    INFO        none\n16:14:47.841    09B4    ERROR   SSH error 0x0007 No cipher supported by both the client and server\n16:14:47.899    09B4    ERROR   Exception: EElSimpleSFTPClientError\n16:14:47.976    09B4    ERROR   Message: Connection lost due to error 10058\n16:14:48.062    09B4    INFO    State changed from CONNECTING to ERROR\n16:14:48.171    09B4    INFO    ----- TDriveHandlerStarter finished\n16:14:48.275    4998    INFO    Stopping drive handler\n16:14:48.351    4998    INFO    Creating drive handler stopper\n16:14:48.417    4998    INFO    Drive handler stopper has been started\n16:14:48.418    2FCC    INFO    ----- executing TDriveHandlerStopper\n16:14:48.622    2FCC    INFO    Destroying file system component\n16:14:48.733    2FCC    INFO    File system component destroyed\n16:14:48.811    2FCC    INFO    Closing SFTP client silently\n16:14:48.894    2FCC    INFO    Destroying SFTP client\n16:14:48.978    2FCC    INFO    SFTP client destroyed\n16:14:49.082    2FCC    INFO    Drive handler stopped\n16:14:49.130    2FCC    INFO    ----- TDriveHandlerStopper finished\n16:14:52.588    4998    INFO    Form is requested to close\n16:14:52.693    4998    INFO    Finalizing the app\n16:14:52.745    4998    INFO    Session finished\n```. ",
    "kovvalsky": "I was getting the same error when I had Authentication: key.\nI changed it into Authentication: password + key and connection was established. \nThe account I was using for the connection requires a password so I needed to feed the password to the SFTP NET drive . ",
    "bit1tech": "Hmm. Sad news.\nAnyway, here is the debug output:\n```\nc:\\Program Files>\"c:\\Program Files\\OpenSSH\\sshd.exe\"\nPROGRAMDATA\\ssh/sshd_config: line 24: Bad configuration option: LogFacility\nPROGRAMDATA\\ssh/sshd_config: terminating, 1 bad configuration options\nc:\\Program Files>\"c:\\Program Files\\OpenSSH\\sshd.exe\" -dd\ndebug2: load_server_config: filename PROGRAMDATA\\ssh/sshd_config\ndebug2: load_server_config: done config len = 188\ndebug2: parse_server_config: config PROGRAMDATA\\ssh/sshd_config len 188\ndebug1: sshd version OpenSSH_for_Windows_7.6, LibreSSL 2.6.4\ndebug1: private host key #0: ssh-rsa SHA256:ubcUSUR5dPkVsxYjkOriJavSe8yKa9tRjTWDNDcz3ko\ndebug1: private host key #1: ssh-dss SHA256:EcpRnFF0NJctLIrE59AEqgSeKDmnfj0HMnigBOGkkQs\ndebug1: private host key #2: ecdsa-sha2-nistp256 SHA256:vT6/KnZBczP84ekbCpJK2tLKz6XfKgTasU1PcEER+EQ\ndebug1: private host key #3: ssh-ed25519 SHA256:5bvoRhh/JN7WZHrORxrK9cNPYWdQg4h3EIIW5EbTFDM\ndebug1: rexec_argv[0]='c:\\Program Files\\OpenSSH\\sshd.exe'\ndebug1: rexec_argv[1]='-dd'\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug1: Server will not fork when running in debugging mode.\nConnection from 192.168.1.2 port 54100 on 192.168.1.78 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_7.2p2 Ubuntu-4ubuntu2.4\ndebug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu2.4 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.6\ndebug2: fd 5 setting O_NONBLOCK\nLsaManageSidNameMapping failed with : LsaSidNameMappingOperation_NonMappingError\nunable to generate token for user sshd\nunable to generate token on 2nd attempt for user sshd\nunable to get security token for user sshd\nprivsep_preauth, posix_spawn failed\nssh_msg_send: write\nsend_rexec_state: ssh_msg_send failed\ndebug1: do_cleanup\n```. ",
    "pyephyoeaung": "I can't do like that . OpenSSH_6.6.1, OpenSSL 1.0.1f 6 Jan 2014\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 19: Applying options for \ndebug1: Connecting to 35.187.224.170 [35.187.224.170] port 22.\ndebug1: Connection established.\ndebug1: identity file Desktop/aa type -1\ndebug1: identity file Desktop/aa-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.8\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_for_Windows_7.6\ndebug1: match: OpenSSH_for_Windows_7.6 pat OpenSSH compat 0x04000000\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: server->client aes128-ctr hmac-sha1-etm@openssh.com none\ndebug1: kex: client->server aes128-ctr hmac-sha1-etm@openssh.com none\ndebug1: sending SSH2_MSG_KEX_ECDH_INIT\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ECDSA 02:00:68:bc:a8:94:80:83:aa:b6:dc:90:7d:7b:bf:54\ndebug1: Host '35.187.224.170' is known and matches the ECDSA host key.\ndebug1: Found key in /home/pyephyoeaung/.ssh/known_hosts:11\ndebug1: ssh_ecdsa_verify: signature correct\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey,keyboard-interactive\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: Desktop/aa\ndebug1: key_parse_private2: missing begin marker\ndebug1: read PEM private key done: type RSA\ndebug1: Authentications that can continue: publickey,keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug1: Authentications that can continue: publickey,keyboard-interactive\ndebug1: No more authentication methods to try.\nPermission denied (publickey,keyboard-interactive).. OpenSSH_6.6.1, OpenSSL 1.0.1f 6 Jan 2014\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 19: Applying options for \ndebug1: Connecting to 35.187.224.170 [35.187.224.170] port 22.\ndebug1: Connection established.\ndebug1: identity file Desktop/aa type -1\ndebug1: identity file Desktop/aa-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.8\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_for_Windows_7.6\ndebug1: match: OpenSSH_for_Windows_7.6 pat OpenSSH compat 0x04000000\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: server->client aes128-ctr hmac-sha1-etm@openssh.com none\ndebug1: kex: client->server aes128-ctr hmac-sha1-etm@openssh.com none\ndebug1: sending SSH2_MSG_KEX_ECDH_INIT\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ECDSA 02:00:68:bc:a8:94:80:83:aa:b6:dc:90:7d:7b:bf:54\ndebug1: Host '35.187.224.170' is known and matches the ECDSA host key.\ndebug1: Found key in /home/pyephyoeaung/.ssh/known_hosts:11\ndebug1: ssh_ecdsa_verify: signature correct\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey,keyboard-interactive\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: Desktop/aa\ndebug1: key_parse_private2: missing begin marker\ndebug1: read PEM private key done: type RSA\ndebug1: Authentications that can continue: publickey,keyboard-interactive\ndebug1: Next authentication method: keyboard-interactive\ndebug1: Authentications that can continue: publickey,keyboard-interactive\ndebug1: No more authentication methods to try.\nPermission denied (publickey,keyboard-interactive).. ",
    "pboard": "it could be the file ownership on the userprofile\\ .ssh\\authorized_keys file - If you enable server side debugging in the sshd_config file in ProgramData\\ssh (DEBUG3 for the debug level), you should find the reason why it is failing. That was my issue when testing key authentication. So for Cygwin SSH, individual users can have custom shells, defined in /etc/passwd (currently the MS version seems to only support one global shell - another issue). So we can have some users on a Unix Bash Shell, others on a Windows Command shell.\nMany years ago, there was a custom shell named \"switch.exe\" that was part of a Cygwin SSH package named CopSSH. This would execute a script passed to the SSH connection (using the putty.exe SSH client -m parameter - to provide a text file with a list of commands to run - like a batch file really - I don't know if the default SSH opensource client has this function), provide a Windows CMD.exe session, and supported SFTP / SCP transfers. The built in bash shell provides the same basic services, with the ability to be passed a text file containing bash / sh commands to execute in a scripted fashion, and provides SFTP / SCP services as well).\nAnyway, when we went to a 64bit Cygwin, the switch.exe tool didn't work, so I was able to write an equivalent function using a basic Shell Script. This works on both 64bit and 32bit Cygwin OpenSSH. We were able to just drop this in and replace the switch.exe with a shell script named switch.\nIt provides a Windows CMD.exe if no script is passed to the SSH client, if a script is passed, it redirects the script to a temporary file temp.bat and then executes it - it also tidies up escaping sequences (caused by Unix / SSH).\n/bin/switch (shell script)\n!/bin/bash\nif [ \"$\" != \"-c /bin/sftp-server\" ]; then\nif [ \"$\" == \"\" ]; then\ncmd.exe\nelse\necho \"Executing Script\"\ncommandstring=${*//\\\\\\/\\}\necho \"${commandstring:3}\" > temp.bat\ncmd.exe /c temp.bat\ndel temp.bat\nfi\nexit 1\nfi\nexec /bin/sftp-server\n\nExample script passed to the switch shell using the Putty SSH client, using -m \"script.txt\"\nDue to behaviour of the old switch.exe and Cygwin, backslashes are encoded with three backslashes \\\\, the comandstring in the shell script, converts it back for Windows execution to single slashes\nexample script.txt\necho %systemdrive%  > runme.bat\necho cd\\\\path to patchaudit\\\\patchcheck >> runme.bat\necho copy scripttorun.bat flagtorun.txt /Y >> runme.bat\necho patchaudit.bat %computername% clientid %systemdrive% >> runme.bat\ncmd /c call runme.bat\n\n. ",
    "zack-snyder": "will the account not be created on demand?. Please reopen, there was an error getting the version information correctly (I just previously downloaded OpenSSH via windows feature installer) then downloaded from github latest release.\nC:\\Program Files\\OpenSSH>sshd.exe --version\nunknown option -- -\nOpenSSH_for_Windows_7.6p1, LibreSSL 2.6.4\nusage: sshd [-46DdeiqTt] [-C connection_spec] [-c host_cert_file]\n            [-E log_file] [-f config_file] [-g login_grace_time]\n            [-h host_key_file] [-o option] [-p port] [-u len]. Here my config file from : C:\\ProgramData\\ssh\\\nsshd_config.txt\n. @manojampalam \nWhat do you mean with latest version? I have downloaded this version 4 day ago.\nFrom here: https://github.com/PowerShell/Win32-OpenSSH/releases. C:\\Program Files\\OpenSSH>sshd.exe --version\nunknown option -- -\nOpenSSH_for_Windows_7.6p1, LibreSSL 2.6.4. ",
    "JeremySkinner": "For anyone who also comes across this issue who wants to use the ssh agent service that ships as part of the Win10 spring update and is using posh-git, a simple fix is just to delete the environment variables inside your profile after importing the posh-git module. Eg:\nImport-Module \"$mydir\\posh-git\\src\\posh-git\"\nremove-item env:\\SSH_AGENT_PID\nremove-item env:\\SSH_AUTH_SOCK . ",
    "davclark": "I just came to this issue after a fresh install (last night) of Win 10 Edu 1803. I don't have either SSH_AGENT_PID or SSH_AUTH_SOCK set, but still get:\nPS> ssh-agent.exe\nunable to start ssh-agent service, error :1058\nor \n```\nPS> Get-Service ssh-agent\nStatus   Name               DisplayName\n------   ----               -----------\nStopped  ssh-agent          OpenSSH Authentication Agent\nPS> Start-Service ssh-agent\nStart-Service : Service 'OpenSSH Authentication Agent (ssh-agent)' cannot be started due to the following error: Cannot start service ssh-agent on computer '.'.\nAt line:1 char:1\n+ Start-Service ssh-agent\n+ ~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OpenError: (System.ServiceProcess.ServiceController:ServiceController) [Start-Service], ServiceCommandException\n    + FullyQualifiedErrorId : CouldNotStartService,Microsoft.PowerShell.Commands.StartServiceCommand\n```\nNote that the SSH client was also NOT installed by default, and after installation didn't show up in my path right away (though seems to have done so eventually?).\nEDIT: nevermind, worked this time when I ran in an administrative shell (it wasn't working before). I guess there is some async stuff that Windows 10 is doing in the background?. ",
    "kevmul": "For anyone else looking to fix this issue that uses Scoop.\nI had this error thrown when I had pshazz installed using Scoop.\nI ran\n~ $ gci Env: | grep -i ssh\nSSH_ASKPASS    C:\\Users\\{me}\\scoop apps\\pshazz\\curren...\nUninstalled, and error went away.\nHope this helps!\nUPDATE:\nI saw this error over on pshazz https://github.com/lukesampson/pshazz/issues/70 and @myty had a comment that solved this for me too, without uninstalling pshazz. Go take a look, and if it works give him a well deserved thumbs up!. ",
    "rageshkrishna": "Just ran in to this myself and found that the \"Startup Type\" for the ssh-agent service was set to \"Disabled\". I changed that to \"Manual\" and was able to start the service normally.. I don't have an exact version number at the moment, but it was whatever came with the \"OpenSSH Server\" feature in Windows 10 (build 1803).. ",
    "jmegevand": "Hey that was my issue too: \n1 . Check the current status of ssh-agent: \"Get-Service | select -property name,starttype\"\n2.  Set the new type :   \"Set-Service -Name ssh-agent -StartupType Manual\"\n3. Start it: \"Start-Service ssh-agent\"\n4 Add simply your key as before: \"ssh-add\". ",
    "egbertn": "On my Windows there is even no ssh-agent service.\nSshDBroker service exists\nSSH Server Proxy\nSSH Server Broker\nTherefore, I cannot add users from the commandline\u2026\nMicrosoft Windows [Version 10.0.17134.137]. Ok, developer mode is removed, those files exist but still the same message.\nAnd starting it using PowerShell gives this:\nStart-Service : Service 'OpenSSH Authentication Agent (ssh-agent)' cannot be started due to the following error: Cannot\n start service ssh-agent on computer '.'.\nAt line:1 char:1\n+ Start-Service ssh-agent\n+ ~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OpenError: (System.ServiceProcess.ServiceController:ServiceController) [Start-Service],\n   ServiceCommandException\n    + FullyQualifiedErrorId : CouldNotStartService,Microsoft.PowerShell.Commands.StartServiceCommand. Thanks. This also helped. Set-Service -name \"ssh-agent\" -startuptype \"automatic\"\n. ",
    "TUTUBIG": "@egbertn I have the same problems. ",
    "frankfuu": "For some reason it was disabled, just had to flick it to manual\nGet-Service ssh-agent | Set-Service -StartupType Manual\nGet-service ssh-agent | Start-Service\nThen to make sure it's running\n```\n\nGet-Service ssh-agent | select *\n\nName                : ssh-agent\nRequiredServices    : {}\nCanPauseAndContinue : False\nCanShutdown         : False\nCanStop             : True\nDisplayName         : OpenSSH Authentication Agent\nDependentServices   : {}\nMachineName         : .\nServiceName         : ssh-agent\nServicesDependedOn  : {}\nServiceHandle       : SafeServiceHandle\nStatus              : Running\nServiceType         : Win32OwnProcess\nStartType           : Manual\n```. ",
    "TCB13": "This works to start the service and I can successfully add keys, however, when trying to ssh to some server it seems to ignore the keys added and always asks for password :(. I\u2019m sure, server has password login disabled. Also, I tried other servers / keys and they work fine on a Ubuntu box.. @manojampalam here is my debug and an everything I tried:\n`````\nssh -V\nOpenSSH_for_Windows_7.7p1, LibreSSL 2.6.4\n``````\nInstalled via scoop with:\n```\nsudo scoop install 7zip git win32-openssh \ncd \"C:\\Users\\TAD BNT\\scoop\\apps\\win32-openssh\\current\\\"\nsudo .\\install-sshd.ps1\nsudo Set-Service ssh-agent -StartupType Automatic\n```\nStarted the service:\n```\nStart-Service ssh-agent\nGet-Service ssh-agent\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  ssh-agent          OpenSSH Authentication Agent\n```\nAdded the key:\nssh-add.exe \"C:\\Users\\TAD BNT/.ssh/svpd4895\"\nEnter passphrase for C:\\Users\\TAD BNT/.ssh/svpd4895:\nIdentity added: C:\\Users\\TAD BNT/.ssh/svpd4895 (C:\\Users\\TAD BNT/.ssh/svpd4895)\nNow the ssh command:\nssh pd4895\n(....)\ndebug1: Authentications that can continue: publickey\ndebug3: start over, passed a different list publickey\ndebug3: preferred publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Trying private key: C:\\\\Users\\\\TAD BNT/.ssh/svpd4895\ndebug3: failed to open file:/dev/tty error:3\ndebug1: read_passphrase: can't open /dev/tty: No such file or directory\nEnter passphrase for key 'C:\\Users\\TAD BNT/.ssh/svpd4895':\nIn my config file this server is set as:\nhost pd4895\n  hostname svpd4895---\n  user ---\n  port ---\n  IdentitiesOnly yes\n  IdentityFile ~/.ssh/svpd4895\nIf I add AddKeysToAgent yes to my config  file keys get automatically added to ssh-agent instead of me having to issue ssh-add path\\key, but I still get the Enter passphrase for key message. It looks like there is some communication failure between the ssh client and the agent.\nAlso, I was reading previous comments again, and I don't have an SSH_AUTH_SOCK set:\ngci env:SSH_AUTH_SOCK\ngci : Cannot find path 'SSH_AUTH_SOCK' because it does not exist.\nAt line:1 char:1\n+ gci env:SSH_AUTH_SOCK\nHowever, when I'm using AddKeysToAgent yes my keys get added to the agent (I can see that with `ssh-add -L), so, apparently, the ssh client is somehow communicating with the agent.\nI also tried to use only windows directory separators \\ and .ssh\\svpd4895 and the issue is the same.\nWhat am I missing here?\nThe full output of the ssh -vvv is available here: https://gist.github.com/TCB13/aa582b24a08dead443d1179811831d92\nMany thanks.. I've finally found the cause of my problem!\nIn my config file I had some global options:\nHost *\n  IdentitiesOnly yes\n  AddKeysToAgent yes\n  PreferredAuthentications publickey\nApparently, if one sets IdentitiesOnly yes the SSH client will not ask the ssh-agent for keys. Maybe this is expected behavior, however, I was unaware of it and under macOS, that option doesn't cause this (maybe a bug in macOS?).\nSetting IdentitiesOnly no in the global Hosts * section fixed everything! Many thanks for the previous comments.. ",
    "NiKiZe": "The included version of OpenSSH in windows is mainly causing issues, and it is not clear how this ssh client is installed (When did Microsoft stop checking compability before releasing.)\nI had to spend half a day to get my workflow with poshgit running again.\nFix for me: uninstall the windows OpenSSH client which is causing issues:\nGet-WindowsCapability -Online | Where Name -like \"*OpenSSH*\" | Remove-WindowsCapability -Online\nPosting here for anyone else that this causes issues for.. ",
    "pawel-majczyk": "\nFix for me: uninstall the windows OpenSSH client which is causing issues:\nGet-WindowsCapability -Online | Where Name -like \"*OpenSSH*\" | Remove-WindowsCapability -Online\n\nAre you using different ssh-agent/ssh,exe client then? Is it the one provided with Git for Windows? Or maybe the Linux native installation?\nI am browsing for answers everywhere to get my VSCode connect Git by ssh under windows and nothing helps.. ",
    "russellseymour": "Thank you very much for this.\nI set the GIT_SSH_COMMAND environment variable as the link states and everything started working :-).. ",
    "roblourens": "\nThe name of this name pipe is static and all ssh binaries assume this static one, if SSH_AUTH_SOCK is not explicitly set.\n\nWhat is the name of this pipe? I can't find it mentioned in any docs and have no idea where to look in the code.. ",
    "wenkyzhang": "c:\\OpenSSH-Win64>.\\sshd.exe -ddd\ndebug2: load_server_config: filename __PROGRAMDATA__\\\\ssh/sshd_config\ndebug2: load_server_config: done config len = 212\ndebug2: parse_server_config: config __PROGRAMDATA__\\\\ssh/sshd_config len 212\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/auth\norized_keys\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:76 setting Subsystem sftp      C:\\\\Open\nSSH-Win64\\\\sftp-server.exe\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:77 setting Subsystem scp           C:\\\\\nOpenSSH-Win64\\\\scp.exe\ndebug1: sshd version OpenSSH_for_Windows_7.7, LibreSSL 2.6.4\ndebug3: ReadFileEx() ERROR:38, io:0000009B94E60A20\ndebug3: read - no more data, io:0000009B94E60A20\ndebug3: ReadFileEx() ERROR:38, io:0000009B94E60A20\ndebug3: read - no more data, io:0000009B94E60A20\ndebug1: private host key #0: ssh-rsa SHA256:**********************************************\ndebug3: ReadFileEx() ERROR:38, io:0000009B94E7E830\ndebug3: read - no more data, io:0000009B94E7E830\ndebug3: ReadFileEx() ERROR:38, io:0000009B94E7E830\ndebug3: read - no more data, io:0000009B94E7E830\ndebug1: private host key #1: ecdsa-sha2-nistp256 SHA256:***********************************\ndebug3: ReadFileEx() ERROR:38, io:0000009B94E23660\ndebug3: read - no more data, io:0000009B94E23660\ndebug3: ReadFileEx() ERROR:38, io:0000009B94E23660\ndebug3: read - no more data, io:0000009B94E23660\ndebug1: private host key #2: ssh-ed25519 SHA256:*****************************************\ndebug1: rexec_argv[0]='.\\\\sshd.exe'\ndebug1: rexec_argv[1]='-ddd'\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\nuse putty connect, enter the user and password, i got this error\nNetwork error: Software caused connection abort\nServer log:\ndebug1: monitor_child_preauth: ecs-smart-0002\\\\administrator has been authentica\nted by privileged process\ndebug3: mm_get_keystate: Waiting for new keys\ndebug3: mm_request_receive_expect entering: type 26\ndebug3: mm_request_receive entering\ndebug3: mm_get_keystate: GOT new keys\ndebug3: mm_auth_password: user authenticated [preauth]\ndebug3: send packet: type 52 [preauth]\ndebug3: mm_request_send entering: type 26 [preauth]\ndebug3: mm_send_keystate: Finished sending state [preauth]\ndebug3: ReadFileEx() ERROR:109, io:0000009B94E7D740\ndebug3: read - no more data, io:0000009B94E7D740\ndebug1: monitor_read_log: child log fd closed\ndebug1: Not running as SYSTEM: skipping loading user profile\ndebug3: spawning \"c:\\\\OpenSSH-Win64\\\\.\\\\sshd.exe\" \"-ddd\" \"-z\"\nCreateProcessAsUserW failed error:1314\nfork of unprivileged child failed\ndebug1: do_cleanup\nany help? thanks . ",
    "LozBoz63": "I was following some old install instructions and was running under an sshd account\nSwitching to system resolved instantly.\nThanks for the mistake and sorry for not spotting my mistake. Hi,\nThank you for your explanation and I can confirm we had set the default shell as powershell, I hadn't realized the full impact of what was discussed in point 9.\nMay I say, I believe the choice of whether you use cmd.exe or powerShell.exe and the consequential impacts on the default PATH seem counter intuitive to me.\nIf both cmd.exe and Powershell.exe were hard coded to locate files in the sshd.exe folder this would seem sensible as they are the two Windows Shells, only one is going to cause a lot of confusion and support calls in the longer term I recon.\n. ",
    "Jan-E": "\nI was able to build, but I believe I had to futz around with things beyond the instructions. I'll confirm from scratch.\n\nFWIW: I had the same troubles. The first step in the instructions did nothing at all. It exited within a second without any output.\nipmo .\\contrib\\win32\\openssh\\OpenSSHBuildHelper.psm1 -Force\nI had to copy the latest LibreSSL manually to .\\contrib\\win32\\openssh\\LibreSSL before I could start building. What might be of interest: Cygwin is in my path and Chocolatey was already installed.. ",
    "emanuelsescu": "Screenshots attached\nwhat doesn't work:\n\nwhat works:\n\n. Update:\nI tried configuring on another windows 10 machine. Everything works fine on the second machine.\nI guess might be some configuration issue with the first machine.. ",
    "electricduck": "Have you tried updating the SSH server? At the time of writing, the latest version is 7.6.1.0. 0.0.18.0 was released on Aug 29, 2017.. ",
    "Cisien": "The version I am running is indeed 7.6.1.0. The ((Get-Item (Get-Command sshd).Source).VersionInfo.FileVersion) command was using what was in my path, which was a previous install. The service is installed using the latest release, and is correctly referencing the sshd in program files.\n```\nPS C:\\Program Files\\OpenSSH> (Get-Item (Get-Command sshd).Source)\nDirectory: C:\\Program Files\\OpenSSH\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----        3/31/2018   3:06 AM         955592 sshd.exe\nPS C:\\Program Files\\OpenSSH> ((Get-Item (Get-Command sshd).Source).VersionInfo.FileVersion)\n7.6.1.0\n```\napologies for the confusion.\n. ",
    "yanoryuichi": "Configuration files should not be stored in %USERPROFILE%.ssh. It should be under %APPDATA%, or make it configurable with an environment variable %SSH_CONFIG_HOME% or something.. In the first place, %HOME% and dot files are meaningless in Windows. Although OpenSSH specifies $HOME in UNIX, it's a bad design.. I agree using ssh in WSL is a better way. In Windows 10 1803, I can make a symlink of $HOME/.ssh. Or using plink.exe of PuTTY is another way. The problem is a configuration directory of OpenSSH is not cofigurable. . No, your request is useful. Actually I set a HOME environment variable in Windows like you do. I mean \"CMD> setx HOME C:\\Unix_Home\".  A lot of commands are hard-coded with $HOME (=%USERPROFILE%). So, as you said, OpenSSH can pick %HOME% is good, but it's better if a configuration directory of OpenSSH is configurable, IMO. . ",
    "archfrog": "I'm only asking to have it be storable under %HOME%\\.ssh just like with all other OpenSSH implementations.  I'm not talking about %USERPROFILE% at all :-)\nSo far, I've resorted to using the OpenSSH implementation that is included in Git for Windows because it works well for me and supports configuration files in %HOME%\\.ssh very well.\nI was just hoping that I could some day use Microsoft's OpenSSH for Windows 10 like I use the Git one and the Linux ones.  But, alas, perhaps not.. Not if you regularly work on Linux platforms too.  You could also argue that the Linux subsystem is meaningless on Windows, yet some find it highly relevant and usable.  I'm only asking for a tiny change that will make it a seamless experience to use Win32-OpenSSH for us advanced users who regularly work in many different environments.. I suppose if I could make a Windows symbolic link (junction, whatever?) to my regular config file, that would work too.  So you had %APPDATA%\\whatever\\My Happy OpenSSH Configuration File.txt was a symlink to %HOME%.ssh\\config, then it would work for me.  Would be tedious, but would work for me as my %HOME% never changes (it is a VeraCrypt container aka a virtual drive mounted from an encrypted file) :-). Yes, I interchangably use Putty and OpenSSH.  I tend to use OpenSSH for copying files because of the bulky Putty syntax (putty -load Profile local-file.zip remote-server:/path/) and Putty for actual SSH work because of the, IMHO, better console window (which I open with start /max putty ... to get a nice Unix-like terminal window :-)).\nI didn't know that you can't configure the OpenSSH config directory.  And I guess you are ahead of me when it comes to what needs to be done on Windows.  So feel free to close this request; I'll try out the symlink method and see if I can't figure out a proper solution.. Okay, I see what you mean.  Perhaps a cascading design would make sense?  I.e. pick in this order:\n\n--config-file:PATH.\n%APPDATA%\\....\n%HOME%\\.ssh\\config.\nGive up locating the file and report an error.\n\nWhere --config-file is a new option to specify the directory that Win32-OpenSSH should use (better suggestions much wanted :-)).  \nOr something like that.  I was just hoping to have %HOME% added somewhere in the cascade of lookups.  And this mostly for compatibility with other OpenSSH toolsets out there.  I really do love that OpenSSH is being officially supported on Windows, but there are some rough edges yet.. ",
    "yf225": "Update: setting Vim to take less than half of the terminal window height fixes the issue (e.g. for a terminal window with 52 lines total, I need to do :set lines=25 in Vim to make the new characters show up properly. I suspect that this is a rendering issue with OpenSSH.. The Cygwin SSH server and vim handle it much better. Highly recommend it if anyone is facing the same issue.. ",
    "jirijanata": "Hi,\nthank you very much for your answer. I'm attaching log and my config file. It looks, that ForceCommand is processing, but I'm still logged in and I'm not getting any deny message.\nsshd_testssh_domain.log\nsshd_config.txt\nMaybe some other bug (but I'll report it in another issue) - if I open ssh session just like TestSSH user (not TestSSH@doma.local), I'm able to log in, but no match is found in config file. This is just domain joined machine and there is no local TestSSH user. So there is maybe some bug in looking for domain/local users. \nThank you for information about chroot :) it looks promising.\n. Thank you very much for your prompt response. I tested few variants:\nDomain User\nUsername: openssh@doma.local\nConfig file: Match User openssh@doma.local\nStatus: BUG - user is able to use ssh.\nUsername: openssh\nConfig file: Match User openssh@doma\nStatus: OK- user is not able to use ssh, but sftp works. This domain format is not standard - usually is used format DOMAIN\\user or user@domain.extension. I've now no test environment for domains like intern.redmond.microsoft.com - but it should be also somehow implemented.\nUsername: openssh\nConfig file: Match User openssh\nStatus: BUG - user is able to use ssh.\nUsername: DOMA\\openssh\nConfig file: Match User DOMA\\openssh\nStatus: BUG - user is able to use ssh.\nsshd_backslash_format.log\nLocal User\nUsername: test\nConfig file: Match User test\nStatus: OK - I'm not able to login to ssh, but sftp works. It doesn't matter, if I use in Putty username Test or test\nUsername: test\nConfig file: Match User Test\nStatus: BUG - user is able to use ssh.\nThank you very much!. It works as expected. Thank you very much.\nCan you edit Not supported commands in wiki - there are still listed commands this commands, which works in 7.7.0.0p1 - ChrootDirectory, DenyGroups, DenyUsers.. Hi,\nusually are non-production (beta, alpha etc) versions numbered lower than 1 (with many exeptions like putty, etc). In the description is clearly written, that they wanted to synchronize future version number with OpenSSH numbering.\n\nPlease note\nto avoid confusion with various internal versions, we have made a conscious decision to synchronize future releases with the base OpenSSH software version (currently at 7.6).\n\nThis project is quite new and not every single functionality from OpenSSH is working (for example chroot). Also there are some bugs, but on the other side is OpenSSH quite stable on Windows. To your question - there is nothing distinctly unstable. To your second question - nobody knows (maybe except from manojampalam) - this is OpenSource project - there is no timeline, eta, deadlines. You can freely contribute :). Hi, thank you for quick reaction :) It was just test. I do not see any practical reason for using Domain Users group. I was just a little bit confused.. \nThe information about not showing Domain Users group in whoami /groups command is also new for me.\nIf you can't easilly fix it (because of using whoami /groups) I suggest you to mention this behavior in Wiki :). Awesome :) I'll test it with new release. Thank you very much.. Thank you for your quick reply. I thought that it's by design. I'm using mostly Windows based systems, so for me it was not expected behavior.\nBut from my point of view is easily understood, that cross-platform software should work same on all platforms.. ",
    "kartiklunkad26": "@joeyaiello Appreciate your input here. The support position absolutely makes sense. I think from the consumer of the Github releases, as @dwatley pointed that, it'd be highly appreciated if we know what stable OpenSSH release we can consume. \nFrom what I understand - the 7.x releases are very much stable. Would that be accurate? . ",
    "rtollert": "Hooray! That is precisely what I was hoping for.. ",
    "CollinChaffin": "@pldmgg - Thanks for also looking at it!  I'll remind you though that the boot2docker IS THE BASIS of the Docker for windows/toolbox product and has been for years.  Yes, you can take established containers and hack around and run (some) of them (I'm not convinced all) other than boot2docker, but it's somewhat irrelevant - bear with me.  Just because you got one established non-boot2docker container you build elsewhere to accept a few ssh commands.....if you watch my reproduction of the issue you will see that 80% of my SSH commands with the faulty OpenSSH also worked.  It's the 20% that didn't that made the product unusable.   You can also make this product work 100% of the time (which is why this has been ignored for so long) if you simply don't run the OpenSSH for Windows implementation - which to me proves boot2docker is just fine.  Not that there cannot be a small/weird parsing issue in boot2docker of the ssh strings or something, but my tests already prove there is a difference in something being sent specifically by OpenSSH vs other implementations - so I'm sure you agree the problem absolutely cannot ONLY be in boot2docker or you'd see it choke on other SSH clients and we don't.\nAlso, it really is amazing how much this bug is really affecting.  After years of NEVER having Kitematic even run on Win7 w/Docker Machine because of \"120 second timeout\" and other timeout issues...also 100% reproducible....after 3 yrs now when I figured this out and swapped my path and hit enter without so much as a reboot, I was for the very first time ever on these systems (either with virtualbox or even vmworkstation driver) able to literally only move my mouse a few inches, close the unsuccessful error screen on Kitematic I've seen for years, re-open it, and literally less than 10 seconds later have a live Kitematic GUI finally up and running for the very first time.  All because of my path pointing to a specific version of a ssh client of all things.\nThis is/was/has been a product killing bug that hopefully can finally be debugged down to the code defects and mitigated to ease all these docker-machine on Win issues related to it.  I appreciate @pldmgg and anyone else helping to get to the root cause (I'm VERY surprised neither DEV team has even acknowledged the issue considering this severity and ease of reproduction).  Probably most efficient now though to focus on the root cause in code and not spending too much time trying to determine what you still can pull off with the product with this bug in place. :). ",
    "nocentino": "+1000. ",
    "guilala": "+1 It's just a matter of mapping the mouse events to specific escape sequences, right? Something like ^[OA^[OA^[OA^[OA^[OB^[OB^[OB^[OB^[OB for the scroll wheel? Must be easy to accomplish, low hanging fruit. Would be very much appreciated by vim users! . ",
    "Jookia": "'Get-Help which' was used in the screenshot above. ",
    "gabest11": "More info. Tested the server on a FreeBSD machine. Almost the same thing, just there are no stuck processes, because the ports are already in use. Also, there are no ServerAlive options for dropbear (cut down, minimal implementation of ssh), this is probably why the idle connection is being dropped by a router along the path after 10 min. Setting ClientAlive on the server seems to be a good solution on both platforms. FreeBSD just handles the problem nicer, without leaking zombie processes.. Looks to be alright with the latest version (7.7), but I bumped into another one.\nIn win32_usertoken_utils.c, TranslateName fails to convert domain\\name to name@domain, because on the server ONLY \"User logon name (pre-Windows 2000)\" was filled in. As soon as I corrected it in the circled part, public key authentication started working again.\n\nThis was the logged error:\n1368 2018-05-31 22:02:14.588 debug3: generate_s4u_user_token: Unable to discover upn for user 't': 1332\n1368 2018-05-31 22:02:14.588 debug1: generate_s4u_user_token: LsaLogonUser() failed: -1073741726 SubStatus 0.\n1368 2018-05-31 22:02:14.588 debug3: unable to generate token for user testenv\\\\gabest\n1368 2018-05-31 22:02:16.932 debug3: generate_s4u_user_token: Unable to discover upn for user 't': 1332\n1368 2018-05-31 22:02:16.932 debug1: generate_s4u_user_token: LsaLogonUser() failed: -1073741726 SubStatus 0.\n1368 2018-05-31 22:02:16.932 error: unable to generate token on 2nd attempt for user testenv\\\\gabest\n1368 2018-05-31 22:02:16.932 error: unable to get security token for user testenv\\\\gabest\n1368 2018-05-31 22:02:16.932 fatal: fork of unprivileged child failed\n1368 2018-05-31 22:02:16.932 debug1: do_cleanup. It was my mistake, but the log file could be more helpful!. All fine after a couple of days with 7.7.. ",
    "hugginsa": "@manojampalam Just compiled and tested the latest commit. Bash is now failing commands passed to it.\nExample command:\nssh user@computer java -version\nDebug message:\ndebug1: Executing command: \"D:\\\\Apps\\\\Git\\\\bin\\\\bash.exe\" -c java -version\nCommand to successfully execute should be\n\"D:\\\\Apps\\\\Git\\\\bin\\\\bash.exe\" -c \"java -version\"\nAlso affects SCP.\ndebug1: Executing command: \"D:\\\\Apps\\\\Git\\\\bin\\\\bash.exe\" -c scp.exe -t D:\\\\filename.jar. Powershell bash is not affected, only appears to be vanilla bash such as with Git for Windows and Cygwin.. Fun experiment, won't work in the long term but double-quoting  single-quote command passes and executes.\nssh.exe user@computer \"'java -version'\". @manojampalam I know this is highly irregular, but here is the fix I propose. However, I cannot contribute myself. I suggest adding a generic bash \"SH_GEN_BASH\" to the enum for command building, or else having \"SH_OTHER\" get decorated like WSL bash or Cygwin bash.\nThe following code fixes my issue, and even allows Jenkins to successfully connect an SSH slave. Starts at line 1724 and ends at 1899.\n```\n/ builds session commandline. returns NULL with errno set on failure, caller should free returned string /\nchar \nbuild_session_commandline(const char shell, const char shell_arg, const char command, int pty)\n{\n    enum sh_type { SH_CMD, SH_PS, SH_WSL_BASH, SH_CYGWIN, SH_OTHER, SH_GEN_BASH } shell_type = SH_OTHER;\n    enum cmd_type { CMD_OTHER, CMD_SFTP, CMD_SCP } command_type = CMD_OTHER;\n    char progdir = w32_programdir(), cmd_sp = NULL, cmdline = NULL, ret = NULL, *p;\n    int len, progdir_len = (int)strlen(progdir);\ndefine CMDLINE_APPEND(P, S)        \\\ndo {                    \\\n    int _S_len = (int)strlen(S);        \\\n    memcpy((P), (S), _S_len);   \\\n    (P) += _S_len;          \\\n} while(0)\n/* get shell type */\nif (strstr(shell, \"system32\\\\cmd\"))\n    shell_type = SH_CMD;\nelse if (strstr(shell, \"powershell\"))\n    shell_type = SH_PS;\nelse if (strstr(shell, \"system32\\\\bash\"))\n    shell_type = SH_WSL_BASH;\nelse if (strstr(shell, \"cygwin\"))\n    shell_type = SH_CYGWIN;\nelse if (strstr(shell, \"\\\\bash\"))\n    shell_type = SH_GEN_BASH;\n\n/* special case where incoming command needs to be adjusted */\ndo {\n    /*\n    * identify scp and sftp sessions\n    * we want to launch scp and sftp executables from the same binary directory\n    * that sshd is hosted in. This will facilitate hosting and evaluating\n    * multiple versions of OpenSSH at the same time.\n    *\n    * currently we can only accomodate this for cmd.exe, since cmd.exe simply executes \n    * its commandline without applying CRT or shell specific rules\n    *\n    * Ex.\n    * this works\n    *   cmd /c \"c:\\program files\\sftp\" -d\n    * this following wouldn't work in powershell, cygwin's or WSL bash unless we put\n    * some shell specific rules \n    *   powershell -c \"c:\\program files\\scp\" -t\n    *   cygwin\\bash -c \"c:\\program files\\scp\" -t\n    *   bash -c \"c:\\program files\\scp\" -t\n    * \n    * for now, for all non-cmd shells, we launch scp and sftp-server directly -\n    *   shell -c \"scp.exe -t\"\n    * note that .exe extension and case matters for WSL bash\n    * note that double quotes matter for WSL and Cygwin bash, they dont matter for PS\n    *\n    * consequence - \n    * for non-cmd shells - sftp and scp installation path is expected to be in machine wide PATH\n    * \n    */\n\n    int command_len;\n    const char *command_args = NULL;\n\n    if (!command)\n        break;\n    command_len = (int)strlen(command);\n\n    if (command_len >= 13 && _memicmp(command, \"internal-sftp\", 13) == 0) {\n        command_type = CMD_SFTP;\n        command_args = command + 13;\n    } else if (command_len >= 11 && _memicmp(command, \"sftp-server\", 11) == 0) {\n        command_type = CMD_SFTP;\n\n        /* account for possible .exe extension */\n        if (command_len >= 15 && _memicmp(command + 11, \".exe\", 4) == 0)\n            command_args = command + 15;\n        else\n            command_args = command + 11;\n    } else if (command_len >= 3 && _memicmp(command, \"scp\", 3) == 0) {\n        command_type = CMD_SCP;\n\n        /* account for possible .exe extension */\n        if (command_len >= 7 && _memicmp(command + 3, \".exe\", 4) == 0)\n            command_args = command + 7;\n        else\n            command_args = command + 3;\n    }\n\n    if (command_type == CMD_OTHER)\n        break;\n\n    len = 0;\n    len += progdir_len + 4; /* account for \" around */\n    len += command_len + 4; /* account for possible .exe addition */\n\n    if ((cmd_sp = malloc(len)) == NULL) {\n        errno = ENOMEM;\n        goto done;\n    }\n\n    p = cmd_sp;\n\n    if (shell_type == SH_CMD) {\n\n        CMDLINE_APPEND(p, \"\\\"\");\n        CMDLINE_APPEND(p, progdir);\n\n        if (command_type == CMD_SCP)\n            CMDLINE_APPEND(p, \"\\\\scp.exe\\\"\");\n        else\n            CMDLINE_APPEND(p, \"\\\\sftp-server.exe\\\"\");\n\n    } else {\n        if (command_type == CMD_SCP)\n            CMDLINE_APPEND(p, \"scp.exe\");\n        else\n            CMDLINE_APPEND(p, \"sftp-server.exe\");\n    }\n\n    CMDLINE_APPEND(p, command_args);\n    *p = '\\0';\n    command = cmd_sp;\n} while (0);\n\nlen = 0;\nif (pty)\n    len += progdir_len + (int)strlen(\"ssh-shellhost.exe\") + 5;\nlen +=(int) strlen(shell) + 3;/* 3 for \" around shell path and trailing space */\nif (command) {\n    len += 15; /* for shell command argument, typically -c or /c */\n    len += (int)strlen(command) + 5; /* 5 for possible \" around command and null term*/\n}\n\nif ((cmdline = malloc(len)) == NULL) {\n    errno = ENOMEM;\n    goto done;\n}\n\np = cmdline;\nif (pty) {\n    CMDLINE_APPEND(p, \"\\\"\");\n    CMDLINE_APPEND(p, progdir);\n    CMDLINE_APPEND(p, \"\\\\ssh-shellhost.exe\\\" \");\n}\nCMDLINE_APPEND(p, \"\\\"\");\nCMDLINE_APPEND(p, shell);\nCMDLINE_APPEND(p, \"\\\"\");\nif (command) {\n    if (shell_arg) {\n        CMDLINE_APPEND(p, \" \");\n        CMDLINE_APPEND(p, shell_arg);\n        CMDLINE_APPEND(p, \" \");\n    }\n    else if (shell_type == SH_CMD)\n        CMDLINE_APPEND(p, \" /c \");\n    else\n        CMDLINE_APPEND(p, \" -c \");\n\n    /* bash type shells require \" decoration around command*/\n    if (shell_type == SH_WSL_BASH || shell_type == SH_CYGWIN || shell_type == SH_GEN_BASH)\n        CMDLINE_APPEND(p, \"\\\"\");\n\n    CMDLINE_APPEND(p, command);\n\n    if (shell_type == SH_WSL_BASH || shell_type == SH_CYGWIN || shell_type == SH_GEN_BASH)\n        CMDLINE_APPEND(p, \"\\\"\");\n}\n*p = '\\0';\nret = cmdline;\ncmdline = NULL;\n\ndone:\n    if (cmd_sp)\n        free(cmd_sp);\n    if (cmdline)\n        free(cmdline);\nreturn ret;\n\n}\n```. Testing now, but looking at the code I believe this solves my issue. Will request that it re-open if this does not give the expected behavior with bash.. The sftp and tunneling issue may relate to #1165. ",
    "jhiswin": "I've solved it myself, but this should be listed somewhere prominent.  Doesn't help that I can't access the wiki to add it myself.. ",
    "shitrus": "You are suffering from this issue #1164. ",
    "cw789": "Of course. I've seen it generally concerns ProxyJump. So it doesn't depend on the ssh_config.\nYou can reproduce it simple by running ssh -J localhost localhost.\nOutput:\nBad stdio forwarding specification ''[localhost]:22''\nssh_exchange_identification: Connection closed by remote host. Workaround: ProxyCommand ssh -W %h:%p jump_host will also work on Windows meanwhile.. ",
    "gobbedy": "I get the same error\nI use OpenSSH_for_Windows_7.6p1, and Windows 10 Education\nssh -J user1@jumphost user2@server\nBad stdio forwarding specification ''[server]:22''\nssh_exchange_identification: Connection closed by remote host\n. ",
    "TheLinuxNinja": "Just decided to try the native ssh in Windows 10 - and found this bug immediately. I can't access anything since the ProxyJump is required to specify the bastion to jump through. How can I help troubleshoot this?\nWindows 10 Enterprise 1803 Build 17134.320\nOpenSSH_for_Windows_7.6p1, LibreSSL 2.6.4. ",
    "phoz78": "Have the same issue on Microsoft Windows [Version 10.0.17134.471]\nBad stdio forwarding specification ''[example.com]:22''\nssh_exchange_identification: Connection closed by remote host. ",
    "cniekerk": "Any idea when this will be fixed? It's very irritating to have to run a find-replace every time I copy a SSH configuration from a Linux setup.. After the 1809 update, the workaround is now also no longer working for me.\npowershell\nPS C:\\> systeminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\"\nOS Name:                   Microsoft Windows 10 Home\nOS Version:                10.0.17763 N/A Build 17763\nPS C:\\> ssh myexample\nCreateProcessW failed error:2\nposix_spawn: No such file or directory\nIn my ~/.ssh/config I have this:\n```\nHost myjumphost\n[...]\nHost myexample\n[...]\nProxyCommand ssh -W %h:%p myjumphost\n```. @manojampalam I agree with @kumarharsh and am also hesitant to download and execute a binary that is not from a known trusted source. Considering it has been tested and confirmed to be working by more than one party, when can we expect a new official release to be available including this patch?. @manojampalam Thanks for the feedback. I installed all the updates on my Windows 10 setup but still have the older version of OpenSSH. Is there any way to get the latest version installed, or do I need to wait for future updates to be pushed to my device?. @manojampalam After applying all updates and rebooting I currently have this environment:\nPS C:\\> systeminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\"\nOS Name:                   Microsoft Windows 10 Home\nOS Version:                10.0.17134 N/A Build 17134\nPS C:\\> ssh -V\nOpenSSH_for_Windows_7.6p1, LibreSSL 2.6.4\nDo I need to enable anything, like an insider preview or something similar?. @manojampalam On Windows Server I am getting the new version:\nPS C:\\> systeminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\"\nOS Name:                   Microsoft Windows Server 2019 Datacenter Evaluation\nOS Version:                10.0.17763 N/A Build 17763\nPS C:\\> ssh -V\nOpenSSH_for_Windows_7.7p1, LibreSSL 2.6.5\nIt would appear that Windows 10 is running behind.. @manojampalam I just got the October update this morning and am now running on the latest version:\nPS C:\\> systeminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\"\nOS Name:                   Microsoft Windows 10 Home\nOS Version:                10.0.17763 N/A Build 17763\nPS C:\\> ssh -V\nOpenSSH_for_Windows_7.7p1, LibreSSL 2.6.5. After the update I am now running into a completely unrelated issue:\nhttps://github.com/MicrosoftDocs/windowsserverdocs/issues/2235\nI am therefore unfortunately unable to test this.. @manojampalam Thanks, that fixed the problem for me and am now able to test this. I can confirm this is working fine now on my environment with Windows line endings.. ",
    "tats-u": "I'm bothered by this issue. (10 Pro 1809)\nPS C:\\Users\\tatsu> ssh -vvv lab-dpc-tun\nOpenSSH_for_Windows_7.7p1, LibreSSL 2.6.5\ndebug1: Reading configuration data C:\\\\Users\\\\tatsu/.ssh/config\ndebug1: C:\\\\Users\\\\tatsu/.ssh/config line 65: Applying options for lab-*-tun\ndebug1: C:\\\\Users\\\\tatsu/.ssh/config line 68: Applying options for lab-dpc-tun\ndebug1: C:\\\\Users\\\\tatsu/.ssh/config line 70: Applying options for lab-*\ndebug3: Failed to open file:C:/ProgramData/ssh/ssh_config error:2\ndebug2: resolve_canonicalize: hostname 192.168.10.2 is address\ndebug1: Setting implicit ProxyCommand from ProxyJump: ssh -vvv -W '[%h]:%p' lab-dns\ndebug1: Executing proxy command: exec ssh -vvv -W '[192.168.10.2]:22' lab-dns\ndebug3: spawning \"C:\\\\WINDOWS\\\\System32\\\\OpenSSH\\\\ssh -vvv -W '[192.168.10.2]:22' lab-dns\"\nCreateProcessW failed error:2\nposix_spawn: No such file or directory\nLatest OpenSSH:\n```\nPS C:\\Users\\tatsu> scoop install win32-openssh\nInstalling 'win32-openssh' (7.9.0.0p1-Beta) [64bit]\nLoading OpenSSH-Win64.zip from cache\nChecking hash of OpenSSH-Win64.zip ... ok.\nExtracting OpenSSH-Win64.zip ... done.\nLinking ~\\scoop\\apps\\win32-openssh\\current => ~\\scoop\\apps\\win32-openssh\\7.9.0.0p1-Beta\nCreating shim for 'scp'.\nCreating shim for 'sftp'.\nCreating shim for 'sftp-server'.\nCreating shim for 'ssh-add'.\nCreating shim for 'ssh-agent'.\nCreating shim for 'ssh-keygen'.\nCreating shim for 'ssh-keyscan'.\nCreating shim for 'ssh-shellhost'.\nCreating shim for 'ssh'.\nCreating shim for 'sshd'.\n'win32-openssh' (7.9.0.0p1-Beta) was installed successfully!\nNotes\n\nThis is a pre-release (non-production ready)\nRun 'sudo C:\\Users\\tatsu\\scoop\\apps\\win32-openssh\\current\\install-sshd.ps1' to install sshd and ssh-agent as a service.\nRun 'sudo C:\\Users\\tatsu\\scoop\\apps\\win32-openssh\\current\\uninstall-sshd.ps1' them service.\nPS C:\\Users\\tatsu> C:\\Users\\tatsu\\scoop\\apps\\win32-openssh\\7.9.0.0p1-Beta\\ssh.exe -vvv lab-dpc-tun\nOpenSSH_for_Windows_7.9p1, LibreSSL 2.6.5\ndebug1: Reading configuration data C:\\Users\\tatsu/.ssh/config\ndebug1: C:\\Users\\tatsu/.ssh/config line 65: Applying options for lab--tun\ndebug1: C:\\Users\\tatsu/.ssh/config line 68: Applying options for lab-dpc-tun\ndebug1: C:\\Users\\tatsu/.ssh/config line 70: Applying options for lab-\ndebug3: Failed to open file:C:/ProgramData/ssh/ssh_config error:2\ndebug2: resolve_canonicalize: hostname 192.168.10.2 is address\ndebug1: Setting implicit ProxyCommand from ProxyJump: C:\\Users\\tatsu\\scoop\\apps\\win32-openssh\\7.9.0.0p1-Beta\\ssh.exe -vvv -W '[%h]:%p' lab-dns\ndebug1: Executing proxy command: exec C:\\Users\\tatsu\\scoop\\apps\\win32-openssh\\7.9.0.0p1-Beta\\ssh.exe -vvv -W '[192.168.10.2]:22' lab-dns\ndebug3: spawning \"C:\\Users\\tatsu\\scoop\\apps\\win32-openssh\\7.9.0.0p1-Beta\\ssh.exe -vvv -W '[192.168.10.2]:22' lab-dns\"\ndebug3: spawning C:\\Users\\tatsu\\scoop\\apps\\win32-openssh\\7.9.0.0p1-Beta\\ssh.exe -vvv -W '[192.168.10.2]:22' lab-dns\ndebug3: w32_getpeername ERROR: not sock :2\ndebug1: identity file C:\\Users\\tatsu/.ssh/id_ed25519_lab type 3\ndebug3: Failed to open file:C:/Users/tatsu/.ssh/id_ed25519_lab-cert error:2\ndebug3: Failed to open file:C:/Users/tatsu/.ssh/id_ed25519_lab-cert.pub error:2\ndebug1: identity file C:\\Users\\tatsu/.ssh/id_ed25519_lab-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.9\nBad stdio forwarding specification ''[192.168.10.2]:22''\nssh_exchange_identification: Connection closed by remote host\n```\nWithout using jump host (successfully connected):\nPS C:\\Users\\tatsu> .\\scoop\\apps\\win32-openssh\\7.9.0.0p1-Beta\\ssh.exe -vvv lab-dpc -N\nOpenSSH_for_Windows_7.9p1, LibreSSL 2.6.5\ndebug1: Reading configuration data C:\\\\Users\\\\tatsu/.ssh/config\ndebug1: C:\\\\Users\\\\tatsu/.ssh/config line 51: Applying options for lab-dpc\ndebug1: C:\\\\Users\\\\tatsu/.ssh/config line 70: Applying options for lab-*\ndebug3: Failed to open file:C:/ProgramData/ssh/ssh_config error:2\ndebug2: resolve_canonicalize: hostname 192.168.10.2 is address\ndebug2: ssh_connect_direct\ndebug1: Connecting to 192.168.10.2 [192.168.10.2] port 22.\ndebug1: Connection established.\ndebug1: identity file C:\\\\Users\\\\tatsu/.ssh/id_ed25519_lab type 3\ndebug3: Failed to open file:C:/Users/tatsu/.ssh/id_ed25519_lab-cert error:2\ndebug3: Failed to open file:C:/Users/tatsu/.ssh/id_ed25519_lab-cert.pub error:2\ndebug1: identity file C:\\\\Users\\\\tatsu/.ssh/id_ed25519_lab-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.9\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.6p1 Ubuntu-4ubuntu0.1\ndebug1: match: OpenSSH_7.6p1 Ubuntu-4ubuntu0.1 pat OpenSSH_7.0*,OpenSSH_7.1*,OpenSSH_7.2*,OpenSSH_7.3*,OpenSSH_7.4*,OpenSSH_7.5*,OpenSSH_7.6*,OpenSSH_7.7* compat 0x04000002\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to 192.168.10.2:22 as 'tatsu16'\ndebug3: hostkeys_foreach: reading file \"C:\\\\Users\\\\tatsu/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file C:\\\\Users\\\\tatsu/.ssh/known_hosts:16\ndebug3: load_hostkeys: loaded 1 keys from 192.168.10.2\ndebug3: Failed to open file:C:/Users/tatsu/.ssh/known_hosts2 error:2\ndebug3: Failed to open file:C:/ProgramData/ssh/ssh_known_hosts error:2\ndebug3: Failed to open file:C:/ProgramData/ssh/ssh_known_hosts2 error:2\ndebug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none,zlib@openssh.com\ndebug2: compression stoc: none,zlib@openssh.com\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\ndebug3: send packet: type 30\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug3: receive packet: type 31\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:[Host key]\ndebug3: hostkeys_foreach: reading file \"C:\\\\Users\\\\tatsu/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file C:\\\\Users\\\\tatsu/.ssh/known_hosts:16\ndebug3: load_hostkeys: loaded 1 keys from 192.168.10.2\ndebug3: Failed to open file:C:/Users/tatsu/.ssh/known_hosts2 error:2\ndebug3: Failed to open file:C:/ProgramData/ssh/ssh_known_hosts error:2\ndebug3: Failed to open file:C:/ProgramData/ssh/ssh_known_hosts2 error:2\ndebug1: Host '192.168.10.2' is known and matches the ECDSA host key.\ndebug1: Found key in C:\\\\Users\\\\tatsu/.ssh/known_hosts:16\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug3: unable to connect to pipe \\\\\\\\.\\\\pipe\\\\openssh-ssh-agent, error: 2\ndebug1: pubkey_prepare: ssh_get_authentication_socket: No such file or directory\ndebug1: Will attempt key: C:\\\\Users\\\\tatsu/.ssh/id_ed25519_lab ED25519 SHA256:[My key] explicit\ndebug2: pubkey_prepare: done\ndebug3: send packet: type 5\ndebug3: receive packet: type 7\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=<ssh-ed25519,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521>\ndebug3: receive packet: type 6\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password\ndebug3: start over, passed a different list publickey,password\ndebug3: preferred publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering public key: C:\\\\Users\\\\tatsu/.ssh/id_ed25519_lab ED25519 SHA256:[My key] explicit\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 60\ndebug1: Server accepts key: C:\\\\Users\\\\tatsu/.ssh/id_ed25519_lab ED25519 SHA256:[My key] explicit\ndebug3: sign_and_send_pubkey: ED25519 SHA256:[My key]\ndebug3: sign_and_send_pubkey: signing using ssh-ed25519\ndebug3: send packet: type 50\ndebug3: receive packet: type 52\ndebug1: Authentication succeeded (publickey).\nAuthenticated to 192.168.10.2 ([192.168.10.2]:22).\ndebug2: fd 3 setting TCP_NODELAY\ndebug1: Requesting no-more-sessions@openssh.com\ndebug3: send packet: type 80\ndebug1: Entering interactive session.\ndebug1: pledge: network\ndebug3: receive packet: type 80\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0. Is this related to #1172?\nOne of the collaborators uploaded a pached binary of ssh, which (ssh with jump hosts) works fine for some people and me.\nThe patch was submitted as a PR https://github.com/PowerShell/openssh-portable/pull/373.\nAs of the error PowerShell says, is your scp.exe in your PATH?. I made it with:\npowershell\nPS> scp -oProxyCommand=\"$((gcm ssh).path) -W %h:%p jumphost\"  path\\to\\src targethost:path/to/dest\nssh is the patched one and scp is the built-in one (v7.7), and:\nmy PC ----- jumphost (Linux) ----- targethost (Linux)\n``\nPS> scp -oProxyCommand=\"$((gcm ssh).path) -W\"%h`\":%p jumphost\" -v .\\LICENSE targethost:foo.md\nExecuting: program ssh.exe host targethost, user (unspecified), command scp -v -t foo.md\nOpenSSH_for_Windows_7.7p1, LibreSSL 2.6.5\ndebug1: Reading configuration data C:\\Users\\tatsu/.ssh/config\ndebug1: C:\\Users\\tatsu/.ssh/config line \u25a0: Applying options for \u25a0\ndebug1: C:\\Users\\tatsu/.ssh/config line \u25a0: Applying options for \u25a0\ndebug1: C:\\Users\\tatsu/.ssh/config line \u25a0: Applying options for \u25a0\ndebug1: Executing proxy command: exec C:/ProgramData/chocolatey/bin/ssh.exe -W 192.168.\u25a0.\u25a0:22 lab-dns\ndebug1: identity file C:\\Users\\tatsu/.ssh/id_ed25519\u25a0 type 3\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\tatsu/.ssh/id_ed25519\u25a0-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.7\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.6p1 Ubuntu-4ubuntu0.3\ndebug1: match: OpenSSH_7.6p1 Ubuntu-4ubuntu0.3 pat OpenSSH* compat 0x04000000\ndebug1: Authenticating to 192.168.\u25a0.\u25a0:22 as '\u25a0'\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:\u25a0\ndebug1: Host '192.168.\u25a0.\u25a0' is known and matches the ECDSA host key.\ndebug1: Found key in C:\\Users\\tatsu/.ssh/known_hosts:16\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: rekey after 134217728 blocks\ndebug1: pubkey_prepare: ssh_get_authentication_socket: No such file or directory\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey,password\ndebug1: Next authentication method: publickey\ndebug1: Offering public key: ED25519 \u25a0 C:\\Users\\tatsu/.ssh/id_ed25519_\u25a0\ndebug1: Server accepts key: pkalg ssh-ed25519 blen 51\ndebug1: Authentication succeeded (publickey).\nAuthenticated to 192.168.\u25a0.\u25a0 (via proxy).\ndebug1: channel 0: new [client-session]\ndebug1: Requesting no-more-sessions@openssh.com\ndebug1: Entering interactive session.\ndebug1: pledge: proc\ndebug1: client_input_global_request: rtype hostkeys-00@openssh.com want_reply 0\ndebug1: Sending command: scp -v -t foo.md\nSending file modes: C0666 1310 LICENSE\nSink: C0666 1310 LICENSE\nLICENSE                                                                                                                                                          100% 1310    64.8KB/s   00:00\ndebug1: client_input_channel_req: channel 0 rtype exit-status reply 0\ndebug1: channel 0: free: client-session, nchannels 1\nTransferred: sent 3404, received 2416 bytes, in 0.4 seconds\nBytes per second: sent 7862.6, received 5580.5\ndebug1: Exit status 0\nPS> gcm scp\nCommandType     Name                                               Version    Source\n-----------     ----                                               -------    ------\nApplication     scp.exe                                            7.7.2.1    C:\\WINDOWS\\System32\\OpenSSH\\scp.exe\n```. ",
    "jaketyo": "I am also suffering from this issue. Does anyone have an update?\nPS C:\\WINDOWS\\system32>  ssh -v HOSTNAME\nOpenSSH_for_Windows_7.7p1, LibreSSL 2.6.5\ndebug1: Reading configuration data __PROGRAMDATA__\\\\ssh/ssh_config\ndebug1: __PROGRAMDATA__\\\\ssh/ssh_config line 1: Applying options for *\ndebug1: __PROGRAMDATA__\\\\ssh/ssh_config line 15: Applying options for artifacts\ndebug1: Executing proxy command: exec ssh BASTION_HOST -W HOSTNAME:22\nCreateProcessW failed error:2\nposix_spawn: No such file or directory\nI redacted the hostnames. However, they are correct.. Can confirm @manojampalam patched copy fixes the issue.. ",
    "matsmcp": "@manojampalam \nPrivate fix works for me.\nMy testenvironment is 3 windows and one CentOS machines.\nOne 2016 1607 and a  Centos7 as my adminservers that I'm connecting from.\nOne 2016 1607 as jumphost.\nOne 2016 1607 that I'm connecting to. It's also a DC with DNS.\nAll windows machines are running OpenSSH_for_Windows_7.9p1\nRunning the command ssh -J automate2@jumphost.test.local administrator@dc1.test.local with the old SSH.exe it gives the known failure. With the new ssh.exe it works as expected and I get my remote shell\n. How to reproduce. \nI have a very simple powershell script\n& 'C:\\Program Files\\OpenSSH-Win64\\scp.exe' -o \"ProxyCommand ssh automate2@jumphost.test.local -W %h:%p\" c:\\test.cmd administrator@dc1.test.local:\\test.cmd\n& \"C:\\Program Files\\OpenSSH-Win64\\ssh.exe\" -J  automate2@jumphost.test.local Administrator@dc1.test.local \"test.cmd\"\n& 'C:\\Program Files\\OpenSSH-Win64\\scp.exe' -o \"ProxyCommand ssh automate2@jumphost.test.local -W %h:%p\" administrator@dc1.test.local:\\test.txt c:\\test.txt\nwith \n[HKEY_LOCAL_MACHINE\\SOFTWARE\\OpenSSH]\n\"defaultshell\"=\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" it will fail with:\n\nscp.exe : scp.exe : The term 'scp.exe' is not recognized as the name of a cmdlet, functio\nAt C:\\Users\\Administrator\\Desktop\\remoteEcho.ps1:3 char:1\n+ & 'C:\\Program Files\\OpenSSH-Win64\\scp.exe' -o \"ProxyCommand ssh autom ...\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (scp.exe : The t...cmdlet, functio:String) [], RemoteException\n    + FullyQualifiedErrorId : NativeCommandError\n\nn, script file, or operable program. Check the spelling of the name, or if a pa\nth was included, verify that the path is correct and try again.\nAt line:1 char:1\n+ scp.exe -f /test.txt\n+ ~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (scp.exe:String) [], CommandNotF \n   oundException\n    + FullyQualifiedErrorId : CommandNotFoundException\n\nIf I remove the regkey -forcing cmd as shell the script works. Opps, didn't intend to close. It might be the same type of issue but it's not the issue of 1172 ( I do use the patched binary and i have also tested from a Linux system with the same error. \nI do have the following test scenarios:\nWindows adminserver - Windows JumpHost - TargetServer\nWindows adminserver - Linux JumpHost - TargetServer\nLinux Adminserver - Windows JumpHost - TargetServer\nLinux Adminserver - Linux JumpHost - TargetServer\nI can log on to them with SSH and I will get powershell as shell so that proves that the regvalue is correct and working\nAs long as you have CMD as shell on Targetserver all scenarios above works- it's only when you have powershell as defaultshell on targetserver it fails so therefore we now that the path is ok else it would fail with CMD as shell too. \nThe path looks ok too.\nPATH=C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\OpenSSH-Win64;C:\\Users\\Administrator\\AppData\\Local\\Microsoft\\WindowsApps;. I reinstalled the sytem and currently I can't repro anymore ...... ",
    "kumarharsh": "@manojampalam thanks for providing a workaround \ud83c\udf89! However, I feel dicey to trust the authenticity of your private patched build... Can it be pushed as a PR so we can review the changes made which fix the issue?. ",
    "julien-padovani": "Hello,\nYes, I did. When enabled I find detailed information when the user establish the connexion. But I see no logs about files or user actions. . I've added the user to administrators group, I still see no logs about files that the user create/remove/etc...\nWhat results do you see as admin? Could you share your logs? \n. ",
    "gayantd": "@manojampalam I do agree with @NiQ1 . I installed this and I have an account called \"sshd\". But I never assigned to any. I created own account in windows. SSHD service runs under SYSTEM account.\nBut when I check \"logon as service\" I could see sshd_port has been created numerous times. \nSo I do believe sshd account is created when I install \"install-sshd.ps1\". Yet I don't know the purpose of that account.\n@NiQ1 , sorry I didn't meant to HiJack your thread. . @ThomasAnkcorn , thanks a lot for sharing ! This was the issue with min.. Did you add anything in registry at windows \"DefaultShellCommandOption\" ?. Where do you have below entry ? In client or server ?\nSubsystem       powershell      C:/Program Files/PowerShell/6-preview/pwsh.exe -sshs -NoLogo -NoProfile\nDid you add Powershell as your default shell in registry ? If yes, try removing that.. Here is the registry path:\nComputer\\HKEY_LOCAL_MACHINE\\SOFTWARE\\OpenSSH\\DefaultShell\nWhat is the value assigned to DefaultShell ?. As I know you will set it only if runs below at Server:\nNew-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -PropertyType String -Force\npage: https://github.com/PowerShell/Win32-OpenSSH/wiki/Install-Win32-OpenSSH\n. Great ! Good luck Keith !\n. @bingbing8 , Thanks a lot for the reply. I do need to set this SFTP connection and have deadline. Appreciate your help.\nPlease find results :\nPS C:\\Users\\Gayan.Dissanayake> (Get-Acl C:\\Users\\irdtds.ssh\\authorized_keys).Access\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : NT AUTHORITY\\SYSTEM\nIsInherited       : True\nInheritanceFlags  : ContainerInherit, ObjectInherit\nPropagationFlags  : None\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : BUILTIN\\Administrators\nIsInherited       : True\nInheritanceFlags  : ContainerInherit, ObjectInherit\nPropagationFlags  : None\nFileSystemRights  : FullControl\nAccessControlType : Allow\nIdentityReference : IFINDDEVFS01\\irdtds\nIsInherited       : True\nInheritanceFlags  : ContainerInherit, ObjectInherit\nPropagationFlags  : None\nHere is the result from FixHostFilePermissions.ps1. But it didn't check \"C:\\Users\\irdtds.ssh\\authorized_keys\" folder :(\n\n. Hi @bingbing8 , I created authorized_keys folder instead of a file. #1180\nSo that issue resolved and I can login with ssh.exe.\nBut still sftp.exe failing with below error :\n\nGot this with WinSCP : \n\nServer logs :\n5576 2018-06-29 06:06:32.228 debug1: Executing command: \"C:\\Windows\\system32\\cmd.exe\" /c C:\\Program Files\\OpenSSH-Win64\\sftp-server.exe\n5576 2018-06-29 06:06:32.228 debug2: fd 4 setting TCP_NODELAY\n5576 2018-06-29 06:06:32.228 debug3: fd 11 is O_NONBLOCK\n5576 2018-06-29 06:06:32.228 debug3: fd 10 is O_NONBLOCK\n5576 2018-06-29 06:06:32.228 debug3: fd 13 is O_NONBLOCK\n5576 2018-06-29 06:06:32.228 debug3: send packet: type 99\n5576 2018-06-29 06:06:32.228 debug3: ReadFileEx() ERROR:109, io:0000000000418750\n5576 2018-06-29 06:06:32.228 debug2: channel 0: read<=0 rfd 11 len 0\n5576 2018-06-29 06:06:32.228 debug2: channel 0: read failed\n5576 2018-06-29 06:06:32.228 debug2: channel 0: close_read\n5576 2018-06-29 06:06:32.228 debug2: channel 0: input open -> drain\n5576 2018-06-29 06:06:32.228 debug2: channel 0: read 101 from efd 13\n5576 2018-06-29 06:06:32.228 debug3: channel 0: discard efd\n5576 2018-06-29 06:06:32.228 debug2: channel 0: ibuf empty\n5576 2018-06-29 06:06:32.228 debug2: channel 0: send eof\n5576 2018-06-29 06:06:32.228 debug3: send packet: type 96\n5576 2018-06-29 06:06:32.228 debug2: channel 0: input drain -> closed\n5576 2018-06-29 06:06:32.228 debug1: Received SIGCHLD.\n5576 2018-06-29 06:06:32.228 debug1: session_by_pid: pid 7656\n5576 2018-06-29 06:06:32.228 debug1: session_exit_message: session 0 channel 0 pid 7656\n5576 2018-06-29 06:06:32.228 debug2: channel 0: request exit-status confirm 0\n5576 2018-06-29 06:06:32.228 debug3: send packet: type 98\n5576 2018-06-29 06:06:32.228 debug1: session_exit_message: release channel 0\n5576 2018-06-29 06:06:32.228 debug2: channel 0: write failed\n5576 2018-06-29 06:06:32.228 debug2: channel 0: close_write\n5576 2018-06-29 06:06:32.228 debug2: channel 0: send eow\n5576 2018-06-29 06:06:32.228 debug2: channel 0: output open -> closed\n5576 2018-06-29 06:06:32.228 debug3: ReadFileEx() ERROR:109, io:0000000000456ED0\n5576 2018-06-29 06:06:32.228 debug3: read - no more data, io:0000000000456ED0\n5576 2018-06-29 06:06:32.228 debug2: channel 0: read 0 from efd 13\n5576 2018-06-29 06:06:32.228 debug2: channel 0: closing read-efd 13\n5576 2018-06-29 06:06:32.228 debug2: channel 0: send close\n5576 2018-06-29 06:06:32.228 debug3: send packet: type 97\n5576 2018-06-29 06:06:32.228 debug3: channel 0: will not send data after close\n5576 2018-06-29 06:06:32.228 debug2: notify_done: reading\n5576 2018-06-29 06:06:32.228 debug3: channel 0: will not send data after close\n5576 2018-06-29 06:06:32.368 debug3: channel 0: will not send data after close\n5576 2018-06-29 06:06:32.368 debug3: WSARecv - WSARecv() ERROR: io:000000000040CF40 10054\n5576 2018-06-29 06:06:32.368 debug3: recv - from CB ERROR:108, io:000000000040CF40\n5576 2018-06-29 06:06:32.368 Read error from remote host 101.98.84.53 port 54979: Unknown error\n5576 2018-06-29 06:06:32.368 debug1: do_cleanup\n4912 2018-06-29 06:06:32.384 debug3: mm_request_receive entering\n4912 2018-06-29 06:06:32.384 debug1: do_cleanup. @bingbing8 , Thanks for quick response \nI use version : OpenSSH_for_Windows_7.7p1, LibreSSL 2.6.4. I will try. But not sure if it is related with mine. Because I added below line to sshd_config at server.\nSubsystem   sftp    \"C:\\Program Files\\OpenSSH-Win64\\sftp-server.exe\"\nAnd it picked from there.  logs:\n1612 2018-06-29 09:50:07.560 debug1: Executing command: \"C:\\Windows\\system32\\cmd.exe\" /c C:\\Program Files\\OpenSSH-Win64\\sftp-server.exe\n. I will do right away. Should I uninstall and install services back or replace binary would enough ?\nOne extra question: Do I have to install OpenSSH in client machine ?. I think I don't have any:\n\nBut I was able to login using ssh.exe with using Binary extraction only. No SSHD or Agent service in my client machine. So do I have to install it for sftp.exe ? Which service should be running in my client ?\nI don't want to save my Private key for SSO.\nThanks !. Gotcha. I replaced Binaries. But didn't work because sshd_config file had relative path specified. So update to default as below:\nSubsystem   sftp    sftp-server.exe\nGot logs:\n7656 2018-06-29 10:49:44.780 debug1: Executing command: \"c:\\windows\\system32\\cmd.exe\" /c \"C:\\Program Files\\OpenSSH-Win64\\sftp-server.exe\"\nBoom!!  I am in !!!\nI highly appreciate your help and impressed with your knowledge.\nOne question : This give me access to all folders and files in server. But I don't want that. I want client has restricted access to only a folder. How can I do that ?\nThanks !\n. I just tried by specifying path. Nice ! It did work. I will explore more regarding permissions...etc\nThanks heaps !!\nWe can close this Yanbing. You are a Legend !!. Thanks for that info ! It is valuable.  Because I have to pass details to third party to access our production servers. How can I enable only sftp then ? Is there a way to disable ssh and enable only sftp ? . Awesome. I will try these on Monday and let you know guys.\nIs there a space after \"Match User\" and asterisk ?\nBest Regards\nGayan Dissanayake\n(+64 221352218)\nOn Sat, Jun 30, 2018 at 11:52 AM bagajjal notifications@github.com wrote:\n\n\nAdd these lines to c:\\programdata\\ssh\\sshd_config\n\nMatch User *\nForceCommand internal-sftp\nChrootDirectory \n1.\nRestart sshd (net stop sshd, net start sshd)\n   2.\nValidate both sftp, ssh.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1201#issuecomment-401500584,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AmW4j4mkl124PeYieseYfr4sNZZ1NCaCks5uBr3XgaJpZM4U6zfP\n.\n. @bagajjal yes I did check. \nAwesome ! It is working as expected. Cheers. Agree. I have seen same behavior in Win2008R2.. Awesome !!!\nThanks for quick fix !. Did you notice your server registry DefaultShell value with double quotes ? Please try removing it. \nCheers. Can you please explain the issue here ?. I tried by renaming rsa-key to ssh-rsa. But still same error.\nI don't have Linux OS as my client is from outside. \n\nThis is working fine for \"ecdsa\" key, but failed with RSA.\nConfig file following line is commented. Should I un-comment it ? what is the default value ?\nPubkeyAuthentication yes. yes tried by renaming rsa-key to ssh-rsa. But still same error.\nLet me try with new rsa key.. ah no. I just renamed \"rsa-key-20160610\" to \"ssh-rsa-20160610\".\nLet me try to rename just \"ssh-rsa\" and try.\nThank you !. Awesome, that did work !!!\n@bagajjal , you helped me last time to exclude ssh and leave only for sftp by adding below lings config file.\nMatch User *\nForceCommand internal-sftp\nBut it doesn't work. When my Key is not authenticated, It asking for Password. When I provide password, I can login. I don't want to login with password. Only need to use by Key.\nIs there a way to do it ?. Great ! That worked. Thank you!. ",
    "TCS-Taylor": "manojampalam - My domain is accessible, as is evident by the fact that I can SSH into the windows 7 machine when sshd is being run interactively.. Apologies, I was unaware of the difference.  I tested SSHing in using a local user, with the service running and authenticating with public keys, and it worked great.  So it definitely has something to do with the domain users.\nMy domain is accessible as far as I can tell (I can log into it, access network resources, etc).  Any other suggestions?  Any way I can turn up the logging of sshd running in service mode?. @manojampalam , This is a clean install and my first attempt at using SSH on windows.  I'm putting together a proof of concept to show my team, we are planning on using SSH to help us manage our windows clients easier.\nI will go thru the troubleshooting steps right now.  Thanks!. I have tried using v7.6.1.0p1, v7.7.0.0p1 and 7.7.1.0p1, all with the same results  (unable to ssh in, and the same three events in event vwr).\nI have attached the DEBUG3 logs of my attempt with each version.  Lines 228 and 231 of v7.7.0 and 7.7.1 are of interest to me.  Thinking that might point us in the right direction...\n@NoMoreFood  - yes, tcsbasys\\root does have a UPN in active directory and the machine i'm running sshd on is domain joined to the tcsbasys domain.\nsshd-TEST-LOG-v7.6.1.0p1.txt\nsshd-TEST-LOG-v7.7.0.0p1.txt\nsshd-TEST-LOG-v7.7.1.0p1.txt\n. I should also note that our Active Directory isn't technically Microsoft.  We are running Samba Version 4.7.3-Debian, which emulates a windows 2008r2 environment.. I followed these instructions for setting up our Samba4 AD environment.\nhttps://github.com/thctlo/samba4/tree/master/howtos\nSamba4 emulates 2008r2 AD VERY well.  All AD maintenance happens thru Microsoft's built in tools (IE, RSAT, Active directory users and computers, etc).. I just built a clean Microsoft Windows 2008r2 domain test environment, with all the same settings as our SAMBA4 domain environment (usernames, passwords, forest name, etc) and tested OpenSSH 7.7.0.0p1 public key authentication using a clean client joined to the Windows domain, and it worked great.  So it has to be something with the SAMBA4 setup.  Next step for me is to run some packet captures against the working ssh server on the test domain, as well as the not-working ssh server on the production domain and then compare the packet captures.... Alright, I captured packets from attempts to SSH in using v7.6.1.0p1 (both using username only AND UPN), v7.7.0.0p1 (using username) and v7.7.1.0p1 (using username).  Below are the packet captures.\nOpenSSH_v7.6.1.0p1-SAMBA4-PCAP-justusername.zip\nOpenSSH_v7.6.1.0p1-SAMBA4-PCAP-upn.zip\nOpenSSH_v7.7.0.0p1-SAMBA4-PCAP.zip\nOpenSSH_v7.7.1.0p1-SAMBA4-PCAP.zip\n. Thanks again for helping with this folks!  If we can ferret out the problem that would be FANTASTIC!  If it does end up being an issue on the SAMBA4 side, maybe if we let them know they can fix it.. ",
    "jamieshaw": "I'm seeing this issue also; fresh install of Windows Server 2016 with Windows Server Essentials configured on it.\nHappy to assist in any way that I can but I'm primary a Mac user so not sure where to start digging into the logs. Same issues as OP. Cannot log in via Public Key but can via password; when starting SSHD from the command line, it works fine.\nSetup was working fine before configuring Windows Server Essentials so I'm assuming Active Directory / Domain binding is causing the issue somewhere.. ",
    "wvoyek": "I'm having the same issue. I can sign-in using a password but the connection gets reset when I use my key. I have attached a log of the attempt.\nMy domain account does have a proper userPrincipalName. The Domain Controller is Windows Server 2012 R2. The domain functional level is 2012 R2 and the forest functional level is 2008 R2.\nsshd_log.txt\n. @NoMoreFood Yes, username/password works fine.. @NoMoreFood Nope, no 4625 but a 4624 event. I've attached the event log entries that occurred during the login event in the sshd_log.\nsshd_log.xml.txt\nedited to add:\nNothing weird about the account or the setup either. Or at least I don't think so. It's my regular daily use account I'm using. I'm trying to sign-in from an Ubuntu guest running on the host that's running sshd. And it does work fine w/ user/pass.. @NoMoreFood Nothing additional there. Just the same 4624 event.. ",
    "Ankcorn": "Thanks\nIn the stdout it connects fine up until auth \ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug1: Next authentication method: publickey\ndebug1: Offering public key: RSA SHA256:604SyK5C6dOapV6LGA7zli11Id8z8ISxa1jigX8EEUk ./id_rsa\nIt attempts that with the path of the ./id_rsa file i gave it. Then the path to my users id_rsa key. Both which have been added to the local ssh agent and the public key is in the authorised key files with only Administrator and System permissions.\nAfter attempting that it attempts password auth that works\nOn the sshd.exe stdout it shows it Could not open authorised keys \nThis is despite having opened up cmd as an administrator ran psexec -s cmd.\nIt sounds like I am doing something wrong with user permissions. Any advice would be appreciated \ud83d\udc4d . Exactly.. Oh sorry, unfortunately I cannot check till tomorrow morning. \nThanks for your help :grinning:. I have done a bit more detective work. \nThe Error message is \ndebug1: trying public key file C:\\\\Users\\\\<me>\\\\.ssh/authorized_keys\ndebug1: Could not open authorized keys 'C:\\\\Users\\\\<me>\\\\.ssh/authorized_keys': Permission Denied\nFailed publickey for <me> from <localip> port 64842 ssh2: RSA SHA 256:<xxxxxxx>\nI have also double checked my config to make sure PubkeyAuthentication is yes\nThe only similar issue I can find is https://github.com/PowerShell/Win32-OpenSSH/issues/287 but they feel unrelated. I still think I must have done something wrong but have followed the docs.\nedit: Apologies for the accidentally closing and opening it.. @NoMoreFood Thanks for the help and apologies I didn't get back to you sooner. \nI have resolved my issue. It boiled down to me not understanding ssh well enough.\nI copied my public key file into a folder called authorized_keys. Rather than the contents of the public key file into a file called authorized_keys.\nTo my defence I am not sure the documentation on this is that clear. It states:\n\nCopy id_rsa.pub (client's public key) to corresponding user's directory on the SSH server at %systemdrive%\\Users\\.ssh\\authorized_keys\n\nThis could be ambiguous and hard to follow. Especially for other new users like me.\nIf it was changed to something like \n\nCopy the content of id_rsa.pub (client's public key) to corresponding user's directory on the SSH server to a file with the path %systemdrive%\\Users\\.ssh\\authorized_keys\n\nIt could be clearer.\nThanks again for all your help\n. ",
    "fungtion": "@franklinyu you said \"I tried (temporarily) disabling authentication in my local X server (VcXsrv). After that I manually set $DISPLAY environment variable (inside session of course), then it worked\", how to \"disabling authentication in my local X server (VcXsrv)\", and \"manually set $DISPLAY\"?. @franklinyu Thanks. ",
    "Kukunin": "I believe the key line here is \ndebug1: No xauth program.\nSince there is no xauth program in the Windows environment, SSH can't generate the auth info. \nThe other thing that for working the SSH X11 forwarding isn't necessary, if an ssh server has a secure data connection to a client (for example, if Linux is local and running inside a virtual machine).\nSo, there are two ways for having X11 with native OpenSSH for Windows:\n- get xauth in the windows environment\n- don't use X11 forwarding at all and make vcxsrv to accept the remote connection . Actually, it worked for me without xauth at all.\n$ set DISPLAY=localhost:0.0\n$ ssh dev@192.168.97.154 -Y -v\n...\ndebug1: No xauth program.\nWarning: No xauth data; using fake authentication data for X11 forwarding.\ndebug1: Requesting X11 forwarding with authentication spoofing.\n...\n[dev@winlinux ~]$ xcalc\nit works. \nEnsure you have configured the SSH server correctly, you can use https://wiki.archlinux.org/index.php/OpenSSH#X11_forwarding as a reference\nP.S. I have xauth.exe inside C:\\Program Files\\VcXsrv, and I added that folder to PATH, but it still printed No xauth program\nP.S.S. If I use -X flag instead of -Y, it shows me the same output as yours. frankly, I don't know. It's totally a default config of VcXsrv with no changes. But I configured /etc/ssh/sshd_config on the archlinux server to enable X11. \nAlso, ensure you use -Y flag instead of -X, it doesn't work for me with -X (remember about security implications). ",
    "lufinkey": "It doesn't work when I SSH from Linux to Windows\nOn Tue, Jun 12, 2018, 5:06 PM Franklin Yu notifications@github.com wrote:\n\nThis does work in my machine:\n\nSSH to Linux.\nRun sleep 10.\nBefore it wake up, hit CTRL + C.\n\nI see that the program sleep terminated. Is this what you want?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1182#issuecomment-396733788,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHdTUc70l_8i0wIjeXGImCnodo6S6keIks5t8C1BgaJpZM4Uhgf9\n.\n. Where in the README does it say to do that, what path is that value at, and\nwhat is the value?\n\nOn Thu, Jun 28, 2018, 2:22 AM gayantd notifications@github.com wrote:\n\nDid you add anything in registry at windows \"DefaultShellCommandOption\" ?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1182#issuecomment-400925451,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHdTUXb4zut3C7t1Rw1EGEOQcf1JUnqoks5uBHY7gaJpZM4Uhgf9\n.\n. The answer to your question is no, but was that something I was supposed to do?. I've been using whatever the default is, which I'm assuming is cmd.exe.\nCTRL-C does work in regular cmd.exe though (not through an SSH connection)\n\nOn Fri, Jun 29, 2018, 7:23 PM Parker Snell notifications@github.com wrote:\n\nAlso important - what shell are you trying to use? I've seen Ctrl-C\nworking in PowerShell in PTY type scenarios a lot more than cmd.exe.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1182#issuecomment-401497314,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHdTUb83_hSOCSrL5-LxSKc_YyauaC4dks5uBrcNgaJpZM4Uhgf9\n.\n. \n",
    "ronnicek": "Hm.. I have actually different problem. I am testing OpenSSH and I am connecting from Mac -> Windows -> Linux to see how OpenSSH works in Windows world :) but when I hit ctrl+c to terminate program running in Linux session (tail -f for example) it disconnect me from Linux machine directly.. any ideas?\nOne point.. when I connect from Windows to Linux then Ctrl + C is working well.. it could be some settings in iTerm2?\nLooks also similar to #20. ",
    "MrWolf-to": "Hi, I can see these options my sshf_config:\nhostkeyagent \\.\\pipe\\openssh-ssh-agent\nPidFile ./logs/sshd.pid\nI changed the second line to:\nPidFile .\\sshd.pid\nas suggested here:\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/493\nand it creates sshd.pid in the program folder.\nIf I tried to add the absolute path C:\\ProgramData\\ssh\\logs, it gives me error:\nsshd: error: Couldn't create pid file \"C:\\\\ProgramData\\\\ssh\\\\logs\": Permission denied\nit doesn't seem to handle backslash \\.\nDoing this, the first error seems gone.. ",
    "jstarks": "Right, upstream uses execv, but it launches the process through the shell (arg0 = $SHELL, arg1 = -c, arg2 = the proxy command) , which will handle looking up the binary in the path internally, among other things.\nPerhaps the right fix is to do the same and run the command line through %COMSPEC% /c.. ",
    "discentem": "I think PyWinRM works on linux: https://github.com/diyan/pywinrm\n. afaik, WinRM is the \"supported\" way to do things though. . I guess signatures are sufficient. Many other software packages list the hashes of each new binary as well to verify downloads. \u00af\\(\u30c4)/\u00af. Acknowledged. Thanks @bingbing8! . @manojampalam @bagajjal added server side logs. . It doesn't like my authorized_keys file for some reason I think. \n4548 2018-06-21 18:49:21.782 debug1: trying public key file C:\\\\Users\\\\<user>\\\\.ssh/authorized_keys\n4548 2018-06-21 18:49:21.782 debug1: read_keyfile_line: C:\\\\Users\\\\<user>\\\\.ssh/authorized_keys line 1 exceeds size limit\n4548 2018-06-21 18:49:21.782 debug3: mm_answer_keyallowed: publickey authentication test: RSA key is not allowed\nSomething I'm unclear about: should authorized_keys be a file where each line is a public key, or a directory which stores .pub files? or both?. Oh. Maybe: https://github.com/PowerShell/Win32-OpenSSH/issues/862. Let me try that.. My bad. It was the encoding: \nGet-Content ~\\.ssh\\authorized_keys | Set-Content -Encoding utf8 ~\\.ssh\\authorized_keys-utf8\nMove-Item ~\\.ssh\\authorized_keys-utf8 ~\\.ssh\\authorized_keys\nfrom https://github.com/PowerShell/Win32-OpenSSH/issues/862 solved my issue.. Sorry folks! Thanks!. I might have missed it in the docs, but can we add/make this more prominent to the docs? . ",
    "trevrobwhite": "PyWinRM works if you have Windows RM Setup (unfortunately we don't), however I have managed to get WinEXE to compile which is working a treat.\nTo share the knowledge, here is the solution that worked for me.\nTake the look at https://sourceforge.net/u/markr123/winexe/ci/master/tree/ and compile winexe on your Linux box.\nNow unzip and put the OpenSSH software on a open share on your linux box\nCopy the file locally off the network (change the command to match your user/password/ip)\nwinexe -U Administrator%password //192.168.0.4 'cmd /c xcopy /E /F \\192.168.1.1\\agent\\OpenSSH-Win64 \"C:\\Program Files\\OpenSSH\\\"'\nNow you can run the commands using WinEXE and automate the install\nOpen port 22 on the remote firewall\nWindows 2012+:\nwinexe -U Administrator%password //192.168.0.4 'powershell.exe New-NetFirewallRule -Name sshd -DisplayName \"OpenSSH Server (sshd)\" -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22'\nWindows 2008:\nwinexe -U Administrator%password //192.168.0.4 'cmd /c netsh advfirewall firewall add rule name=sshd dir=in action=allow protocol=TCP localport=22'\nwinexe -U Administrator%password //192.168.0.4 'powershell.exe -ExecutionPolicy Bypass -File \"C:\\Program Files\\OpenSSH\\install-sshd.ps1\"'\n[SC] SetServiceObjectSecurity SUCCESS\n[SC] ChangeServiceConfig2 SUCCESS\n[SC] ChangeServiceConfig2 SUCCESS\nsshd and ssh-agent services successfully installed\nwinexe -U Administrator%password //192.168.0.4 'powershell.exe Set-Service sshd -StartupType Automatic'\nssh administrator@192.168.0.4\nEnjoy.. ",
    "assaft": "It could be that I simply encountered #1164 .\nIt seems like I don't manage to install version 7.7.1.0 and I'm not sure what I'm doing wrong.\nI downloaded the latest version, which is supposed to be 7.7.1.0p1-Beta and install it as written below:\n\nPS C:\\Program Files\\OpenSSH> powershell.exe -ExecutionPolicy Bypass -File install-sshd.ps1\n[SC] SetServiceObjectSecurity SUCCESS\n[SC] ChangeServiceConfig2 SUCCESS\n[SC] ChangeServiceConfig2 SUCCESS\nsshd and ssh-agent services successfully installed\nPS C:\\Program Files\\OpenSSH> netsh advfirewall firewall add rule name=sshd dir=in action=allow protocol=TCP localport=22\nOk.\nPS C:\\Program Files\\OpenSSH> net start sshd\nThe OpenSSH SSH Server service is starting.\nThe OpenSSH SSH Server service was started successfully.\nPS C:\\Program Files\\OpenSSH> Set-Service sshd -StartupType Automatic\nPS C:\\Program Files\\OpenSSH> Set-Service ssh-agent -StartupType Automatic\nPS C:\\Program Files\\OpenSSH> ((Get-Item (Get-Command sshd).Source).VersionInfo.FileVersion)\n7.6.0.1\nPS C:\\Program Files\\OpenSSH>\n\nAs you can see, it prints 7.6.0.1.\nIt looks like I have two versions messed up - one in C:\\Windows\\System32\\OpenSSH, which came with Windows built in OpenSSH, and the other in C:\\Program Files\\OpenSSH, which I installed manually. \nThere seem to be two problems:\n1. The built-in version hasn't been deleted when I uninstalled it from the menus.\n2. The new version that I manually install doesn't take over the older version.\nCould you please suggest how to work this out?\n. Regarding the version conflict:\n1. I noticed that the PATH variable includes C:\\Windows\\System32\\OpenSSH. This is a bug, since I already uninstalled the internal OpenSSH server.\n2. After updating the PATH to C:\\Program Files\\OpenSSH and reinstalling, I get version 7.7.0.0 - still not  7.7.1.0. Could it be that the zip file for  7.7.1.0 Win64 is in fact 7.7.0.0?\n3. WinSCP is still not working with 7.7.0.0.\n4. I moved the directory to C:\\OpenSSH and reinstalled. Now it works fine. This confirms that what I saw in the beginning was indeed #1164.\nSo to sum up:\n1. There are problems related to uninstalling the internal OpenSSH server - the files are kept in System32\\OpenSSH, and the PATH includes this directory. This causes a version conflict once the user installs other OpenSSH versions manually.\n\n\nAlthough I try to use version 7.7.1.0 I get 7.7.0.0. \nThis is the file I used: https://github.com/PowerShell/Win32-OpenSSH/releases/download/v7.7.1.0p1-Beta/OpenSSH-Win64.zip \n\n\nMoving the directory to C:\\OpenSSH solved the original problem I had (#1164).\n\n\n. 1. No - I didn't uninstall the client.\n\nIt's really strange. It looks like I downloaded 7.7.1.0 but after running the installation script it somehow switched to 7.7.0.0.\n\nThis is what I get in the new path that I'm currently using (after running the installation script and everything as described in the wiki page):\n```\nPS C:\\OpenSSH> dir\nDirectory: C:\\OpenSSH\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----        6/17/2018   2:22 AM          15431 FixHostFilePermissions.ps1\n-a----        6/17/2018   2:22 AM          13748 FixUserFilePermissions.ps1\n-a----        6/17/2018   2:22 AM          15553 install-sshd.ps1\n-a----        6/17/2018   2:22 AM        1624272 libcrypto.dll\n-a----        6/17/2018   2:32 AM           2773 openssh-events.man\n-a----        6/17/2018   2:22 AM          14199 OpenSSHUtils.psd1\n-a----        6/17/2018   2:22 AM          40735 OpenSSHUtils.psm1\n-a----        6/17/2018   2:22 AM         319176 scp.exe\n-a----        6/17/2018   2:22 AM         331984 sftp-server.exe\n-a----        6/17/2018   2:22 AM         396488 sftp.exe\n-a----        6/17/2018   2:22 AM         497872 ssh-add.exe\n-a----        6/17/2018   2:22 AM         393424 ssh-agent.exe\n-a----        6/17/2018   2:22 AM         634064 ssh-keygen.exe\n-a----        6/17/2018   2:22 AM         540368 ssh-keyscan.exe\n-a----        6/17/2018   2:22 AM         158928 ssh-shellhost.exe\n-a----        6/17/2018   2:22 AM         876240 ssh.exe\n-a----        6/17/2018   2:22 AM         966856 sshd.exe\n-a----        6/17/2018   2:22 AM           2143 sshd_config_default\n-a----        6/17/2018   2:22 AM          13894 uninstall-sshd.ps1\nPS C:\\OpenSSH> (dir *.exe).VersionInfo\nProductVersion   FileVersion      FileName\n--------------   -----------      --------\nOpenSSH_7.7p1... 7.7.0.0          C:\\OpenSSH\\scp.exe\nOpenSSH_7.7p1... 7.7.0.0          C:\\OpenSSH\\sftp-server.exe\nOpenSSH_7.7p1... 7.7.0.0          C:\\OpenSSH\\sftp.exe\nOpenSSH_7.7p1... 7.7.0.0          C:\\OpenSSH\\ssh-add.exe\nOpenSSH_7.7p1... 7.7.0.0          C:\\OpenSSH\\ssh-agent.exe\nOpenSSH_7.7p1... 7.7.0.0          C:\\OpenSSH\\ssh-keygen.exe\nOpenSSH_7.7p1... 7.7.0.0          C:\\OpenSSH\\ssh-keyscan.exe\nOpenSSH_7.7p1... 7.7.0.0          C:\\OpenSSH\\ssh-shellhost.exe\nOpenSSH_7.7p1... 7.7.0.0          C:\\OpenSSH\\ssh.exe\nOpenSSH_7.7p1... 7.7.0.0          C:\\OpenSSH\\sshd.exe\n```\nYou can see that it comes from 7.7p1 but the version is 7.7.0.0. I'm not sure what's going on.\nI tried to run these commands on the binaries right after extracting the ZIP file in my Downloads directory. This is what I got from that:\n```\nPS C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64> dir\nDirectory: C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----        6/17/2018   1:24 AM          15439 FixHostFilePermissions.ps1\n-a----        6/17/2018   1:24 AM          13752 FixUserFilePermissions.ps1\n-a----        6/17/2018   1:24 AM          15561 install-sshd.ps1\n-a----        6/17/2018   1:24 AM        1624272 libcrypto.dll\n-a----        6/17/2018   1:24 AM           6326 openssh-events.man\n-a----        6/17/2018   1:24 AM          14231 OpenSSHUtils.psd1\n-a----        6/17/2018   1:24 AM          40739 OpenSSHUtils.psm1\n-a----        6/17/2018   1:24 AM         319184 scp.exe\n-a----        6/17/2018   1:24 AM         331984 sftp-server.exe\n-a----        6/17/2018   1:24 AM         395984 sftp.exe\n-a----        6/17/2018   1:24 AM         497896 ssh-add.exe\n-a----        6/17/2018   1:24 AM         393936 ssh-agent.exe\n-a----        6/17/2018   1:24 AM         634064 ssh-keygen.exe\n-a----        6/17/2018   1:24 AM         539856 ssh-keyscan.exe\n-a----        6/17/2018   1:24 AM         158928 ssh-shellhost.exe\n-a----        6/17/2018   1:24 AM         875728 ssh.exe\n-a----        6/17/2018   1:24 AM         967888 sshd.exe\n-a----        6/17/2018   1:24 AM           2143 sshd_config_default\n-a----        6/17/2018   1:24 AM          13930 uninstall-sshd.ps1\nPS C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64> (dir *.exe).VersionInfo\nProductVersion   FileVersion      FileName\n--------------   -----------      --------\nOpenSSH_7.7p1... 7.7.1.0          C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64\\scp.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64\\sftp-server.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64\\sftp.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64\\ssh-add.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64\\ssh-agent.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64\\ssh-keygen.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64\\ssh-keyscan.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64\\ssh-shellhost.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64\\ssh.exe\nOpenSSH_7.7p1... 7.7.1.0          C:\\users\\boriss\\Downloads\\OpenSSH-Win64 (1)\\OpenSSH-Win64\\sshd.exe\n```\nSo here the files are indeed 7.7.1.0.\nI don't know why it changes to 7.7.0.0 during the installation steps.. I started over again and now there's no problem with the version. It looks like there was some mistake on my side. Sorry about that.. ",
    "rmcgowen": "@bagajjal where is this from and what was the fix? It does indeed work. Thank you.. I am going to leave this open since it is still an issue in this executable.. ",
    "cadegenn": "Hi,\nok, a colleague just point me to this page https://github.com/PowerShell/Win32-OpenSSH/wiki/Project-Scope and I see that Host-based Autentication is not implemented yet.\nI guess you can close this issue.\nSorry to have bothered you.. ",
    "Lnemirage": "Now, I'm able to activate sftp logs on local file with :\nsshd_config : Subsystem sftp    sftp-server.exe -l INFO -f LOCAL0\nand adding write permission to C:\\ProgramData\\ssh\\logs for the connecting user \nbut I'm still unable to have the sftp logs into windows event-viewer\n. thanks, I can see the sftp-logs into windows event viewver with this configuration :\nsshd_config : \n     SyslogFacility AUTH\n     Subsystem sftp sftp-server.exe -l INFO -f AUTH\nand adding the connecting user to the local Administrator group\nbut I can't give Administrator permissions to this user permanently for security reason.\nhow to give the necessary permission to this user to use windows event viewver without adding it as Administrator group? . ",
    "Remeron": "Thanks for the quick response. \nI went through the first link and executed the steps on the Windows server. Got the below response. \nPS C:\\program files\\openssh> Powershell.exe -ExecutionPolicy Bypass -Command '. .\\FixUserFilePermissions.ps1 -Confirm:$false'\n  [*] C:\\Users\\sftpuser.ssh\\id_rsa\n      looks good\n[*] C:\\Users\\sftpuser.ssh\\id_rsa.pub\n      looks good\n   Done.\nPS C:\\program files\\openssh> Powershell.exe -ExecutionPolicy Bypass -Command '. .\\FixHostFilePermissions.ps1 -Confirm:$false'\n  [*] C:\\ProgramData\\ssh\\sshd_config\n      looks good\n[*] C:\\ProgramData\\ssh\\ssh_host_dsa_key\n      looks good\n[*] C:\\ProgramData\\ssh\\ssh_host_dsa_key.pub\n      looks good\n[*] C:\\ProgramData\\ssh\\ssh_host_ecdsa_key\n      looks good\n[*] C:\\ProgramData\\ssh\\ssh_host_ecdsa_key.pub\n      looks good\n[*] C:\\ProgramData\\ssh\\ssh_host_ed25519_key\n      looks good\n[*] C:\\ProgramData\\ssh\\ssh_host_ed25519_key.pub\n      looks good\n[*] C:\\ProgramData\\ssh\\ssh_host_rsa_key\n      looks good\n[*] C:\\ProgramData\\ssh\\ssh_host_rsa_key.pub\n      looks good\n[*] C:\\Users\\sftpuser.ssh\\authorized_keys\n      looks good\nDone.\nWent through the second link and psexec was detected as a threat in my system and removed it immediately but was able to get the log file working. This is the error i get in the sshd.log is below\n2560 2018-06-20 18:17:44.596 debug1: trying public key file C:\\Users\\sftpuser\\.ssh/authorized_keys\n2560 2018-06-20 18:17:44.596 debug1: matching key found: file C:\\Users\\sftpuser\\.ssh/authorized_keys, line 1 \n2560 2018-06-20 18:17:44.596 debug3: mm_answer_keyallowed: key is allowed\n2560 2018-06-20 18:17:44.596 debug3: mm_request_send entering: type 23\n2560 2018-06-20 18:17:44.596 debug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\n2560 2018-06-20 18:17:44.596 debug3: mm_request_receive_expect entering: type 23 [preauth]\n2560 2018-06-20 18:17:44.596 debug3: mm_request_receive entering [preauth]\n2560 2018-06-20 18:17:44.596 debug3: send packet: type 60 [preauth]\n2560 2018-06-20 18:17:44.596 debug2: userauth_pubkey: authenticated 0 pkalg ssh-rsa [preauth]\n2560 2018-06-20 18:17:44.596 Postponed publickey for sftpuser from x.x.x.x port xxxxx ssh2 [preauth]\n2560 2018-06-20 18:17:44.612 debug3: receive packet: type 50 [preauth]\n2560 2018-06-20 18:17:44.612 debug1: userauth-request for user sftpuser service ssh-connection method publickey [preauth]\n2560 2018-06-20 18:17:44.612 debug1: attempt 2 failures 0 [preauth]\n2560 2018-06-20 18:17:44.612 debug2: input_userauth_request: try method publickey [preauth]\n2560 2018-06-20 18:17:44.612 debug3: userauth_pubkey: have signature for RSA SHA256:zwP [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_key_allowed entering [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_request_send entering: type 22 [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_request_receive_expect entering: type 23 [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_request_receive entering [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_request_receive entering\n2560 2018-06-20 18:17:44.612 debug3: monitor_read: checking request 22\n2560 2018-06-20 18:17:44.612 debug3: mm_answer_keyallowed entering\n2560 2018-06-20 18:17:44.612 debug3: mm_answer_keyallowed: key_from_blob: 99999999999999\n2560 2018-06-20 18:17:44.612 debug1: trying public key file C:\\Users\\sftpuser\\.ssh/authorized_keys\n2560 2018-06-20 18:17:44.612 debug1: matching key found: file C:\\Users\\sftpuser\\.ssh/authorized_keys, line 1 RSA SHA256:zwPGhpk55m+VtRfumuP2iBVNIyGuPL6WQDZXZf5zr84\n2560 2018-06-20 18:17:44.612 debug3: mm_answer_keyallowed: key is allowed\n2560 2018-06-20 18:17:44.612 debug3: mm_request_send entering: type 23\n2560 2018-06-20 18:17:44.612 debug3: mm_sshkey_verify entering [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_request_send entering: type 24 [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_sshkey_verify: waiting for MONITOR_ANS_KEYVERIFY [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_request_receive_expect entering: type 25 [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_request_receive entering [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_request_receive entering\n2560 2018-06-20 18:17:44.612 debug3: monitor_read: checking request 24\n2560 2018-06-20 18:17:44.612 debug3: mm_answer_keyverify: publickey gdgdsjshshshs signature verified\n2560 2018-06-20 18:17:44.612 debug3: mm_request_send entering: type 25\n2560 2018-06-20 18:17:44.612 Accepted publickey for sftpuser from x.x.x.x port xxxxx ssh2: RSA \n2560 2018-06-20 18:17:44.612 debug1: monitor_child_preauth: sftpuser has been authenticated by privileged process\n2560 2018-06-20 18:17:44.612 debug3: mm_get_keystate: Waiting for new keys\n2560 2018-06-20 18:17:44.612 debug3: mm_request_receive_expect entering: type 26\n2560 2018-06-20 18:17:44.612 debug3: mm_request_receive entering\n2560 2018-06-20 18:17:44.612 debug3: mm_get_keystate: GOT new keys\n2560 2018-06-20 18:17:44.612 debug2: userauth_pubkey: authenticated 1 pkalg ssh-rsa [preauth]\n2560 2018-06-20 18:17:44.612 debug3: send packet: type 52 [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_request_send entering: type 26 [preauth]\n2560 2018-06-20 18:17:44.612 debug3: mm_send_keystate: Finished sending state [preauth]\n2560 2018-06-20 18:17:44.612 debug1: monitor_read_log: child log fd closed\n2560 2018-06-20 18:17:44.612 debug1: LsaLogonUser failed NTSTATUS: 1\n2560 2018-06-20 18:17:44.612 error: unable to generate token for user sftpuser\n2560 2018-06-20 18:17:46.924 debug1: LsaLogonUser failed NTSTATUS: 1\n2560 2018-06-20 18:17:46.924 error: unable to generate token on 2nd attempt for user sftpuser\n2560 2018-06-20 18:17:46.924 error: unable to get security token for user sftpuser\n2560 2018-06-20 18:17:46.924 fatal: fork of unprivileged child failed\n2560 2018-06-20 18:17:46.924 debug1: do_cleanup . this works \nssh -vvv -i ~/.ssh/id_rsa -l sftpuser@ad servername \nthis gave me broken pipe \nssh -l sftpuser@ad servername \nSo I guess I'm good with SSH \nnow the same problem exist with sftp \nhow to send the ad user name and identity via sftp? \nsorry if this questions sounds really stupid I'm not an extreme technical guy. . Thanks that resolves the issue. \nTwo things that were done. \n1. Ad credentials were used with proper ad syntax for both SSH and SFTP\n2. Key file was mapped to the correct location.\n. ",
    "Rodalli": "As a sysadmin who uses both Windows and Linux, I don't see a functional issue with this. Windows doesn't care what the case of the username is. If I try to make an account on Windows called \"rodalli\" when there's already \"Rodalli\", the OS is going to tell me I can't, since it considers the principal already in use.\nIt's purely cosmetic and a matter of preference, I think. The as-designed functionality should remain as it currently stands, imho. Potentially breaking logic in the OpenSSH implementation for the sake of cosmetics seems like a bad idea.. Unless I'm mistaken, I don't think the ssh client is actually changing the username. What you enter for creds is what it sends. It's how it's displayed after connection that's different (and purely cosmetic). As we said, against sshd running on Windows it doesn't matter...Menci or menci, it's gonna work either way.\nNow, if someone can show a connection from Win32-OpenSSH client not working, or prompting for credentials, because you're connecting to a Linux server where the actual username uses uppercase characters (unusual use case) and the connection breaks because the client is converting case...well then we've got a problem. But that's not what's being reported here.. Well don't I feel silly. @NoMoreFood you were spot-on. Somehow, my installation playbook was pulling an older version of OpenSSH from August 2018 from my Chocolatey repository. I do have the public repo as a source for that, so I need to look into why my Artifactory instance isn't pulling the latest from the web when I request an upgrade.\nAfter manually uploading the 7.9 code to my chocolatey repo and upgrading, everything is performing as expected.\nThank you!. ",
    "gpduck": "It's purely cosmetic if the target of your ssh connection is another Windows box, but if you're using the same account on Windows and Linux I could see how you might want the case to be preserved by the ssh client so you wouldn't have to enter the username manually to connect to Linux.\nIt seems like sshd.exe should convert to lower case when authenticating but ssh.exe should leave the names as-is since it may be targeting a Linux host.. The original issue was when a username was not specified on the command line and the username was resolved from the current user by ssh.exe\nAfter spending the afternoon digging through the code, it looks like when ssh.exe resolves the current user it does convert the username to lower case.  However based on my testing it also seems like the Win32 API that is returning the username (LookupAccountSidW) always returns it in lower case.  Every field on my AD account that has my username in it is upper case, but calling LookupAccountSidW returns my username in lower case.  So it doesn't look like there is anything that could be done about it anyway.. It's my understanding that UAC is not a security boundary (so technically no privilege escalation is occuring).  However I believe separate accounts are supposed to be a security boundary and out of the box, this configuration would allow any administrator to log in as any other administrator with no logging or auditing that it occurred. This seems to violate that security boundary.\nThe new default configuration is the equivalent of just having everyone in an organization log in using a shared admin account.  Shipping with the extra %u in the file by default would preserve the expected security boundary of using separate accounts (and allow filesystem auditing of administrators changing other user's authorized_keys files) while still mitigating the UAC problem.. I realize that as an administrator you can eventually accomplish anything, but calling a bunch of APIs to take over someone's account and typing \"ssh otheruser@server\" are on totally different levels.  If you had two people with similar names you could accidentally end up logged in as someone else because of a typo, and that seems like we've set the bar a bit too low.. The configuration that is shipping now is a single administrators_authorized_keys for everyone in the Administrators group.  I would be fine with the version that includes %u.\nMatch Group administrators\n       AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys. ",
    "surli": "Actually it has been referenced in #1164 and the latest release suggest as a workaround to install in C: (see: https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.7.0.0p1-Beta). So I don't really know if it's going to be fixed or not.... I'm not sure to understand: how can it be fixed in https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.7.0.0p1-Beta if the page of the release itself talk about this regression? \nMy comment was just about fixing the wiki to mention this regression. . Oh! My bad! FYI the release https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v7.7.1.0p1-Beta is not tagged as the latest. . Actually I'm not sure it's possible. Here it seems that this happens because you tag both version on the same commit. Maybe try editing latest release?. ",
    "markm75": "Confused.. for win 2016, do i run / modify one of the above referenced ps1 scripts to secure a user to his home directory and not allow browsing outside of that location or is it more involved?. Thanks this might be what i'm looking for.. but by jails the user/restricts to a session, you mean restricts to one session? (should be fine)\nWhat about a rare case where another user needs restricted but able to see the other users folders (i guess i'd just restrict them one level higher then right?)\nThanks for this, will give it a shot. I tried to just add this to the default sshd_config in program data (at the very end of the file)\nMatch User *\nForceCommand internal-sftp\nChrootDirectory /D:/Data/FTProot/localuser/test/\nBut when i try one of my iis ftp logins it fails to login.. if i remove this code from sshd_config and retest, i can log in with no issue..\nWhat might I be missing here?\nThanks. Thanks.. i made it further but it said no such file... however.. \nChanging to this:\nD:\\Data\\FTProot\\localuser\\test\\  (worked). I also went ahead and did this per user locking them.. in one case we have a user that is locked to the root of these other ftp users home folders (so they can access them), but is there a way to not only do this but make the default starting path be one of those other folders (they can then drill backward and go into other folders as needed)..?\n. ",
    "soul4soul": "Out of the dozen or so times I have used vi this has happened once. What is very annoying is that the color change persists after exiting the ssh session. Ultimately I restarted the PS console.\nClient Info\nSSH Client 7.6.0.0\nWindow 10 Pro 1803 - 17134.345\nServer Info\nOpenSSH_7.7p1, OpenSSL 1.1.0h-fips  27 Mar 2018\nFedora 28 4.16.3-301.fc28.x86_64 #1 SMP Mon Apr 23 21:59:58 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. ",
    "ksalman": "Ugh, I didn't realize that would be a problem. I added the double quotes because there's a space =). Evidently they are not needed. Thank you.. ",
    "angelog0": "Just trying @DarthSpock suggestion in #3325, I tried to install the OpenSSH server native following one of the tutorials found on the WEB. For example this tutorial1 which also contains this reference tutorial2. Both refer to the beta version of OpenSSH sever but now (in April update) we know it is out of beta.\nThe problems arise when I try (for example, from tutorial2) to start ssh-agent and/or generate ssh-keygen. \nIs there a tutorial for installation and usage of this OpenSSH server not in beta? If not, then you/someone should write it. \nThis is the output from PS as administrator:\n```\nWindows PowerShell\nCopyright (C) Microsoft Corporation. Tutti i diritti sono riservati.\nPS C:\\WINDOWS\\system32> Get-WindowsCapability -Online | ? Name -like 'OpenSSH*'\nName  : OpenSSH.Client~~~~0.0.1.0\nState : Installed\nName  : OpenSSH.Server~~~~0.0.1.0\nState : Installed\nPS C:\\WINDOWS\\system32> Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0\nPath          :\nOnline        : True\nRestartNeeded : False\nPS C:\\WINDOWS\\system32> cd C:\\Windows\\System32\\OpenSSH\nPS C:\\Windows\\System32\\OpenSSH> Start-Service ssh-agent\nStart-Service : Impossibile avviare il servizio 'OpenSSH Authentication Agent (ssh-agent)' a causa del seguente\nerrore: Impossibile avviare il servizio ssh-agent sul computer '.'.\nIn riga:1 car:1\n+ Start-Service ssh-agent\n+ ~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : OpenError: (System.ServiceProcess.ServiceController:ServiceController) [Start-Service],\n   ServiceCommandException\n    + FullyQualifiedErrorId : CouldNotStartService,Microsoft.PowerShell.Commands.StartServiceCommand\nPS C:\\Windows\\System32\\OpenSSH> .\\ssh-keygen -A\nC:\\Windows\\System32\\OpenSSH\\ssh-keygen.exe: generating new host keys: RSA Could not save your public key in PROGRAMDATA\\ssh/ssh_host_rsa_key.HXbwLr0RNp: No such file or directory\nC:\\Windows\\System32\\OpenSSH\\ssh-keygen.exe: generating new host keys: DSA Could not save your public key in PROGRAMDATA\\ssh/ssh_host_dsa_key.q6HrKziqxp: No such file or directory\nC:\\Windows\\System32\\OpenSSH\\ssh-keygen.exe: generating new host keys: ECDSA Could not save your public key in PROGRAMDATA\\ssh/ssh_host_ecdsa_key.nF7St2spR9: No such file or directory\nC:\\Windows\\System32\\OpenSSH\\ssh-keygen.exe: generating new host keys: ED25519 Could not save your public key in PROGRAMDATA\\ssh/ssh_host_ed25519_key.x6irJqIWEH: No such file or directory\nPS C:\\Windows\\System32\\OpenSSH> dir\nDirectory: C:\\Windows\\System32\\OpenSSH\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-a----       10/03/2018     19:20         343552 scp.exe\n-a----       01/05/2018     01:16         355840 sftp-server.exe\n-a----       10/03/2018     19:20         408064 sftp.exe\n-a----       10/03/2018     19:20         531968 ssh-add.exe\n-a----       10/03/2018     19:20         495616 ssh-agent.exe\n-a----       10/03/2018     19:20         657920 ssh-keygen.exe\n-a----       10/03/2018     19:20         594944 ssh-keyscan.exe\n-a----       01/05/2018     01:16         154624 ssh-shellhost.exe\n-a----       10/03/2018     19:20         894464 ssh.exe\n-a----       20/05/2018     10:26         970240 sshd.exe\n-a----       01/05/2018     01:16           2143 sshd_config_default\nPS C:\\Windows\\System32\\OpenSSH>\n```\n. @manojampalam please, give a detailed recipe.. Obviously I am the administrator and can use PS or CMD... you should also update some tutorial... ",
    "cbookg": "Sorry, it does return -1.  The value of errno when it does is 24.. The problem seems to be that this function is using _open_osfhandle which creates a new \"runtime file descriptor\", stored in fd but never closed (so it is leaked).  We can't close this directly as the windows handle is still used outside of this function. ie from the docs \"The _open_osfhandle call transfers ownership of the Win32 file handle to the file descriptor. To close a file opened with _open_osfhandle, call _close\"\nInstead, it looks like we should duplicate the windows handle, and then ensure we close the fd created from _open_osfhandle after the _fstat64:\nfileio_fstat(struct w32_io pio, struct _stat64 buf)\n{\n    int fd = _open_osfhandle((intptr_t)pio->handle, 0);\n    debug4(\"fstat - pio:%p\", pio);\n    if (fd == -1) {\n        errno = EOTHER;\n        return -1;\n    }\nreturn _fstat64(fd, buf);\n\n}. The \"arguments as array\" example was for launching from Go.\nI've reproduced the problem in C# as well, using triple-quotes to pass the quotes through the process object (since it takes arguments as a single string).  This is the equivalent string being passed into C#'s ProcessStartInfo.Arguments:\n... -FNUL -oStrictHostKeyChecking=yes -oUserKnownHostsFile=\"\"\"c:\\space test\\ssh\\known_hosts\"\"\" ...\nAgain, this works for launching ssh, but not scp.\n. After looking into this a bit, I believe the spawn_child_internal function needs to escape arguments containing string when it generates the ssh command line.\nCurrently it builds the command line by taking every arg in the list, adding a space to the command line string and then adding the arg surrounded by quotes.  This results in a command like:\n... \"UserKnownHostsFile=\"c:/space test/ssh/known_hosts\"\" ...\nThe inner quotes likely needs to be replaced with something like \\\" or \"\"\"\n. In my last line the backslash was filtered out of my comment.  Should have been (backslash)\" or \"\"\". It looks like this may be fixed, but there hasn't been a release since July to pick this up.  Is there an ETA for the next release?. ",
    "fabwu": "If I use a passphrase it's not a plaintext copy so you still need a password to access a server. Anyway, I used the method you proposed and backed up my private key in a password manager. I also removed my private key from my computer after I added it to ssh-agent.. ",
    "KalleOlaviNiemitalo": "The current version of ssh-agent stores private keys under the user's HKEY_CURRENT_USER\\SOFTWARE\\OpenSSH\\Agent\\Keys. It secures the keys in two ways:\n\nBy giving HKEY_CURRENT_USER\\SOFTWARE\\OpenSSH an ACL that grants access only to SYSTEM and Administrators.\nBy encrypting the key blob using CryptProtectData while impersonating the user.\n\nThis encryption does not protect at all against the user who owns the keys, as they can just call CryptUnprotectData themselves, if they can read the Registry value and haven't lost their DPAPI master key.. ",
    "umemoni256": "Even though I scrolled through the existing issues before opening this one, it seems I missed the #1213. It is indeed the same problem. After setting the UPN as suggested in #1213, everything works as expected.\nThanks!. ",
    "edronne": "Hello.\nWere can i find them please ?\nLe lun. 23 juil. 2018 \u00e0 17:53, Manoj Ampalam notifications@github.com a\n\u00e9crit :\n\nCan you share server side logs?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1219#issuecomment-407107167,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ASuS7bPPa8IkHblnUe8gwAZDowZL9_Euks5uJfGCgaJpZM4VZ7Mj\n.\n\n\n-- \nThis e-mail message is intended for the internal use of the intended \nrecipient(s) only.\nThe information contained herein is \nconfidential/privileged. Its disclosure or reproduction is strictly \nprohibited.\nIf you are not the intended recipient, please inform the sender \nimmediately, do not disclose it internally or to third parties and destroy \nit.\n. Hello,\nSorry for the delay i was in vacation.\nBelow  the log. \n4884 2018-08-24 11:44:34.727 debug2: fd 3 setting O_NONBLOCK\n4884 2018-08-24 11:44:34.727 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n4884 2018-08-24 11:44:34.727 debug1: Bind to port 22 on ::.\n4884 2018-08-24 11:44:34.727 Server listening on :: port 22.\n4884 2018-08-24 11:44:34.727 debug2: fd 4 setting O_NONBLOCK\n4884 2018-08-24 11:44:34.727 debug1: Bind to port 22 on 0.0.0.0.\n4884 2018-08-24 11:44:34.727 Server listening on 0.0.0.0 port 22.\n4884 2018-08-24 11:44:41.993 debug3: fd 5 is not O_NONBLOCK\n4884 2018-08-24 11:44:41.993 debug3: spawning \"C:\\Program Files\\OpenSSH\\sshd.exe\" \"-R\"\n4884 2018-08-24 11:44:41.993 debug3: send_rexec_state: entering fd = 8 config len 543\n4884 2018-08-24 11:44:41.993 debug3: ssh_msg_send: type 0\n4884 2018-08-24 11:44:41.993 debug3: send_rexec_state: done\n348 2018-08-24 11:44:42.040 debug1: inetd sockets after dupping: 3, 3\n348 2018-08-24 11:44:42.040 Connection from 10.173.14.57 port 59234 on 10.111.49.114 port 22\n348 2018-08-24 11:44:42.040 debug1: Client protocol version 2.0; client software version OpenSSH_7.6\n348 2018-08-24 11:44:42.040 debug1: match: OpenSSH_7.6 pat OpenSSH* compat 0x04000000\n348 2018-08-24 11:44:42.040 debug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.7\n348 2018-08-24 11:44:42.040 debug2: fd 3 setting O_NONBLOCK\n348 2018-08-24 11:44:42.071 debug3: spawning \"C:\\Program Files\\OpenSSH\\sshd.exe\" \"-y\"\n348 2018-08-24 11:44:42.086 debug2: Network child is on pid 2584\n348 2018-08-24 11:44:42.086 debug3: send_rexec_state: entering fd = 6 config len 543\n348 2018-08-24 11:44:42.086 debug3: ssh_msg_send: type 0\n348 2018-08-24 11:44:42.086 debug3: send_rexec_state: done\n348 2018-08-24 11:44:42.086 debug3: ssh_msg_send: type 0\n348 2018-08-24 11:44:42.086 debug3: ssh_msg_send: type 0\n348 2018-08-24 11:44:42.086 debug3: preauth child monitor started\n348 2018-08-24 11:44:42.102 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n348 2018-08-24 11:44:42.102 debug3: send packet: type 20 [preauth]\n348 2018-08-24 11:44:42.102 debug1: SSH2_MSG_KEXINIT sent [preauth]\n348 2018-08-24 11:44:42.102 debug3: receive packet: type 20 [preauth]\n348 2018-08-24 11:44:42.102 debug1: SSH2_MSG_KEXINIT received [preauth]\n348 2018-08-24 11:44:42.102 debug2: local server KEXINIT proposal [preauth]\n348 2018-08-24 11:44:42.102 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1 [preauth]\n348 2018-08-24 11:44:42.102 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n348 2018-08-24 11:44:42.102 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\n348 2018-08-24 11:44:42.102 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\n348 2018-08-24 11:44:42.102 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n348 2018-08-24 11:44:42.102 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n348 2018-08-24 11:44:42.102 debug2: compression ctos: none [preauth]\n348 2018-08-24 11:44:42.102 debug2: compression stoc: none [preauth]\n348 2018-08-24 11:44:42.102 debug2: languages ctos:  [preauth]\n348 2018-08-24 11:44:42.102 debug2: languages stoc:  [preauth]\n348 2018-08-24 11:44:42.102 debug2: first_kex_follows 0  [preauth]\n348 2018-08-24 11:44:42.102 debug2: reserved 0  [preauth]\n348 2018-08-24 11:44:42.102 debug2: peer client KEXINIT proposal [preauth]\n348 2018-08-24 11:44:42.118 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c [preauth]\n348 2018-08-24 11:44:42.118 debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa [preauth]\n348 2018-08-24 11:44:42.118 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n348 2018-08-24 11:44:42.118 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n348 2018-08-24 11:44:42.118 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n348 2018-08-24 11:44:42.118 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n348 2018-08-24 11:44:42.118 debug2: compression ctos: none [preauth]\n348 2018-08-24 11:44:42.118 debug2: compression stoc: none [preauth]\n348 2018-08-24 11:44:42.118 debug2: languages ctos:  [preauth]\n348 2018-08-24 11:44:42.118 debug2: languages stoc:  [preauth]\n348 2018-08-24 11:44:42.118 debug2: first_kex_follows 0  [preauth]\n348 2018-08-24 11:44:42.118 debug2: reserved 0  [preauth]\n348 2018-08-24 11:44:42.118 debug1: kex: algorithm: curve25519-sha256 [preauth]\n348 2018-08-24 11:44:42.118 debug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\n348 2018-08-24 11:44:42.118 debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none [preauth]\n348 2018-08-24 11:44:42.118 debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none [preauth]\n348 2018-08-24 11:44:42.118 debug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\n348 2018-08-24 11:44:42.165 debug3: receive packet: type 30 [preauth]\n348 2018-08-24 11:44:42.180 debug3: mm_key_sign entering [preauth]\n348 2018-08-24 11:44:42.180 debug3: mm_request_send entering: type 6 [preauth]\n348 2018-08-24 11:44:42.180 debug3: mm_key_sign: waiting for MONITOR_ANS_SIGN [preauth]\n348 2018-08-24 11:44:42.180 debug3: mm_request_receive_expect entering: type 7 [preauth]\n348 2018-08-24 11:44:42.180 debug3: mm_request_receive entering [preauth]\n348 2018-08-24 11:44:42.180 debug3: mm_request_receive entering\n348 2018-08-24 11:44:42.180 debug3: monitor_read: checking request 6\n348 2018-08-24 11:44:42.180 debug3: mm_answer_sign\n348 2018-08-24 11:44:42.180 debug3: mm_answer_sign: hostkey proof signature 00000207FD0BD140(101)\n348 2018-08-24 11:44:42.180 debug3: mm_request_send entering: type 7\n348 2018-08-24 11:44:42.180 debug2: monitor_read: 6 used once, disabling now\n348 2018-08-24 11:44:42.180 debug3: send packet: type 31 [preauth]\n348 2018-08-24 11:44:42.180 debug3: send packet: type 21 [preauth]\n348 2018-08-24 11:44:42.180 debug2: set_newkeys: mode 1 [preauth]\n348 2018-08-24 11:44:42.180 debug1: rekey after 134217728 blocks [preauth]\n348 2018-08-24 11:44:42.180 debug1: SSH2_MSG_NEWKEYS sent [preauth]\n348 2018-08-24 11:44:42.180 debug1: expecting SSH2_MSG_NEWKEYS [preauth]\n348 2018-08-24 11:44:42.180 debug3: send packet: type 7 [preauth]\n348 2018-08-24 11:44:42.243 debug3: receive packet: type 21 [preauth]\n348 2018-08-24 11:44:42.243 debug1: SSH2_MSG_NEWKEYS received [preauth]\n348 2018-08-24 11:44:42.243 debug2: set_newkeys: mode 0 [preauth]\n348 2018-08-24 11:44:42.243 debug1: rekey after 134217728 blocks [preauth]\n348 2018-08-24 11:44:42.243 debug1: KEX done [preauth]\n348 2018-08-24 11:44:42.352 debug3: receive packet: type 5 [preauth]\n348 2018-08-24 11:44:42.352 debug3: send packet: type 6 [preauth]\n348 2018-08-24 11:44:42.415 debug3: receive packet: type 50 [preauth]\n348 2018-08-24 11:44:42.415 debug1: userauth-request for user myuser@addomain service ssh-connection method none [preauth]\n348 2018-08-24 11:44:42.415 debug1: attempt 0 failures 0 [preauth]\n348 2018-08-24 11:44:42.415 debug3: mm_getpwnamallow entering [preauth]\n348 2018-08-24 11:44:42.415 debug3: mm_request_send entering: type 8 [preauth]\n348 2018-08-24 11:44:42.415 debug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\n348 2018-08-24 11:44:42.415 debug3: mm_request_receive_expect entering: type 9 [preauth]\n348 2018-08-24 11:44:42.415 debug3: mm_request_receive entering [preauth]\n348 2018-08-24 11:44:42.415 debug3: mm_request_receive entering\n348 2018-08-24 11:44:42.415 debug3: monitor_read: checking request 8\n348 2018-08-24 11:44:42.415 debug3: mm_answer_pwnamallow\n348 2018-08-24 11:44:42.415 debug2: parse_server_config: config reprocess config len 543\n348 2018-08-24 11:44:42.415 debug3: checking match for 'Group addomain\\groupA' user myuser@addomain host 10.173.14.57 addr 10.173.14.57 laddr 10.111.49.114 lport 22\n348 2018-08-24 11:44:42.477 debug3: LsaLogonUser Succeeded (Impersonation: 0)\n348 2018-08-24 11:44:42.477 debug3: Added group 'addomain\\domain users' for user 'addomain\\myuser'.\n348 2018-08-24 11:44:42.477 debug3: Added group 'builtin\\users' for user 'addomain\\myuser'.\n348 2018-08-24 11:44:42.477 debug3: Added group 'builtin\\administrators' for user 'addomain\\myuser'.\n<################### my comment :  then add to 198 Add Groups>\n348 2018-08-24 11:44:42.758 debug1: user myuser@addomain does not match group list addomain\\groupA at line 92\n348 2018-08-24 11:44:42.758 debug3: match not found\n348 2018-08-24 11:44:42.758 debug3: checking match for 'Group addomain\\groupB' user myuser@addomain host 10.173.14.57 addr 10.173.14.57 laddr 10.111.49.114 lport 22\n348 2018-08-24 11:44:42.790 debug3: LsaLogonUser Succeeded (Impersonation: 0)\n348 2018-08-24 11:44:42.790 debug3: Added group 'addomain\\domain users' for user 'addomain\\myuser'.\n348 2018-08-24 11:44:42.790 debug3: Added group 'builtin\\users' for user 'addomain\\myuser'.\n348 2018-08-24 11:44:42.790 debug3: Added group 'builtin\\administrators' for user 'addomain\\myuser'.\n<################### my comment :  then add to 198 Add Groups>\n348 2018-08-24 11:44:43.087 debug1: user myuser@addomain matched group list addomain\\groupB at line 99\n348 2018-08-24 11:44:43.087 debug3: match found\n348 2018-08-24 11:44:43.087 debug3: reprocess config:100 setting AllowGroups addomain\\groupB\n348 2018-08-24 11:44:43.087 debug3: reprocess config:101 setting ForceCommand internal-sftp\n348 2018-08-24 11:44:43.087 debug3: reprocess config:102 setting ChrootDirectory \"E:\\R&D\\CDA\"\n348 2018-08-24 11:44:43.118 debug3: LsaLogonUser Succeeded (Impersonation: 0)\n348 2018-08-24 11:44:43.118 debug3: Added group 'addomain\\domain users' for user 'addomain\\myuser'.\n348 2018-08-24 11:44:43.118 debug3: Added group 'builtin\\users' for user 'addomain\\myuser'.\n348 2018-08-24 11:44:43.118 debug3: Added group 'builtin\\administrators' for user 'addomain\\myuser'.\n<################### my comment :  then add to 198 Add Groups>\n348 2018-08-24 11:44:43.430 debug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 1\n348 2018-08-24 11:44:43.430 debug3: mm_request_send entering: type 9\n348 2018-08-24 11:44:43.430 debug2: monitor_read: 8 used once, disabling now\n348 2018-08-24 11:44:43.430 debug2: input_userauth_request: setting up authctxt for myuser@addomain [preauth]\n348 2018-08-24 11:44:43.430 debug3: mm_inform_authserv entering [preauth]\n348 2018-08-24 11:44:43.430 debug3: mm_request_send entering: type 4 [preauth]\n348 2018-08-24 11:44:43.430 debug3: mm_auth2_read_banner entering [preauth]\n348 2018-08-24 11:44:43.430 debug3: mm_request_send entering: type 10 [preauth]\n348 2018-08-24 11:44:43.430 debug3: mm_request_receive_expect entering: type 11 [preauth]\n348 2018-08-24 11:44:43.430 debug3: mm_request_receive entering [preauth]\n348 2018-08-24 11:44:43.430 debug3: mm_request_receive entering\n348 2018-08-24 11:44:43.430 debug3: monitor_read: checking request 4\n348 2018-08-24 11:44:43.430 debug3: mm_answer_authserv: service=ssh-connection, style=\n348 2018-08-24 11:44:43.430 debug2: monitor_read: 4 used once, disabling now\n348 2018-08-24 11:44:43.430 debug3: mm_request_receive entering\n348 2018-08-24 11:44:43.430 debug3: monitor_read: checking request 10\n348 2018-08-24 11:44:43.430 debug3: mm_request_send entering: type 11\n348 2018-08-24 11:44:43.430 debug2: monitor_read: 10 used once, disabling now\n348 2018-08-24 11:44:43.430 debug3: send packet: type 53 [preauth]\n348 2018-08-24 11:44:43.430 debug1: userauth_send_banner: sent [preauth]\n348 2018-08-24 11:44:43.430 debug2: input_userauth_request: try method none [preauth]\n348 2018-08-24 11:44:43.430 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\n348 2018-08-24 11:44:43.430 debug3: send packet: type 51 [preauth]\n348 2018-08-24 11:44:43.493 debug3: receive packet: type 50 [preauth]\n348 2018-08-24 11:44:43.493 debug1: userauth-request for user myuser@addomain service ssh-connection method keyboard-interactive [preauth]\n348 2018-08-24 11:44:43.493 debug1: attempt 1 failures 0 [preauth]\n348 2018-08-24 11:44:43.493 debug2: input_userauth_request: try method keyboard-interactive [preauth]\n348 2018-08-24 11:44:43.493 debug1: keyboard-interactive devs  [preauth]\n348 2018-08-24 11:44:43.493 debug1: auth2_challenge: user=myuser@addomain devs= [preauth]\n348 2018-08-24 11:44:43.493 debug1: kbdint_alloc: devices '' [preauth]\n348 2018-08-24 11:44:43.493 debug2: auth2_challenge_start: devices  [preauth]\n348 2018-08-24 11:44:43.493 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\n348 2018-08-24 11:44:43.493 debug3: send packet: type 51 [preauth]\n348 2018-08-24 11:44:50.509 debug3: receive packet: type 50 [preauth]\n348 2018-08-24 11:44:50.509 debug1: userauth-request for user myuser@addomain service ssh-connection method password [preauth]\n348 2018-08-24 11:44:50.509 debug1: attempt 2 failures 1 [preauth]\n348 2018-08-24 11:44:50.509 debug2: input_userauth_request: try method password [preauth]\n348 2018-08-24 11:44:50.509 debug3: mm_auth_password entering [preauth]\n348 2018-08-24 11:44:50.509 debug3: mm_request_send entering: type 12 [preauth]\n348 2018-08-24 11:44:50.509 debug3: mm_auth_password: waiting for MONITOR_ANS_AUTHPASSWORD [preauth]\n348 2018-08-24 11:44:50.509 debug3: mm_request_receive_expect entering: type 13 [preauth]\n348 2018-08-24 11:44:50.509 debug3: mm_request_receive entering [preauth]\n348 2018-08-24 11:44:50.509 debug3: mm_request_receive entering\n348 2018-08-24 11:44:50.509 debug3: monitor_read: checking request 12\n348 2018-08-24 11:44:50.587 debug3: mm_answer_authpassword: sending result 1\n348 2018-08-24 11:44:50.587 debug3: mm_request_send entering: type 13\n348 2018-08-24 11:44:50.587 Accepted password for myuser@addomain from 10.173.14.57 port 59234 ssh2\n348 2018-08-24 11:44:50.587 debug1: monitor_child_preauth: myuser@addomain has been authenticated by privileged process\n348 2018-08-24 11:44:50.587 debug3: mm_get_keystate: Waiting for new keys\n348 2018-08-24 11:44:50.587 debug3: mm_request_receive_expect entering: type 26\n348 2018-08-24 11:44:50.587 debug3: mm_request_receive entering\n348 2018-08-24 11:44:50.587 debug3: mm_get_keystate: GOT new keys\n348 2018-08-24 11:44:50.587 debug3: mm_auth_password: user authenticated [preauth]\n348 2018-08-24 11:44:50.587 debug3: send packet: type 52 [preauth]\n348 2018-08-24 11:44:50.587 debug3: mm_request_send entering: type 26 [preauth]\n348 2018-08-24 11:44:50.587 debug3: mm_send_keystate: Finished sending state [preauth]\n348 2018-08-24 11:44:50.602 debug1: monitor_read_log: child log fd closed\n348 2018-08-24 11:44:50.602 debug3: spawning \"C:\\Program Files\\OpenSSH\\sshd.exe\" \"-z\"\n348 2018-08-24 11:44:50.602 User child is on pid 4976\n348 2018-08-24 11:44:50.602 debug3: send_rexec_state: entering fd = 5 config len 543\n348 2018-08-24 11:44:50.602 debug3: ssh_msg_send: type 0\n348 2018-08-24 11:44:50.602 debug3: send_rexec_state: done\n348 2018-08-24 11:44:50.602 debug3: ssh_msg_send: type 0\n348 2018-08-24 11:44:50.602 debug3: ssh_msg_send: type 0\n348 2018-08-24 11:44:50.602 debug3: ssh_msg_send: type 0\n4976 2018-08-24 11:44:50.633 debug3: ssh_msg_recv entering\n4976 2018-08-24 11:44:50.633 debug2: fd 4 setting O_NONBLOCK\n4976 2018-08-24 11:44:50.633 debug2: parse_server_config: config reprocess config len 543\n4976 2018-08-24 11:44:50.633 debug3: checking match for 'Group addomain\\groupA' user addomain\\myuser host 10.173.14.57 addr 10.173.14.57 laddr 10.111.49.114 lport 22\n<################### my comment :  then add to 198 Add Groups>\n4976 2018-08-24 11:44:50.977 debug1: user n does not match group list addomain\\groupA at line 92\n4976 2018-08-24 11:44:50.977 debug3: match not found\n4976 2018-08-24 11:44:50.977 debug3: checking match for 'Group addomain\\groupB' user n host 10.173.14.57 addr 10.173.14.57 laddr 10.111.49.114 lport 22\n4976 2018-08-24 11:44:50.993 debug1: get_passwd: LookupAccountName() failed: 1332.\n4976 2018-08-24 11:44:50.993 debug1: Can't match group at line 99 because user n does not exist\n4976 2018-08-24 11:44:50.993 debug3: match not found\n4976 2018-08-24 11:44:50.993 debug3: ssh_msg_recv entering\n4976 2018-08-24 11:44:50.993 debug3: monitor_apply_keystate: packet_set_state\n4976 2018-08-24 11:44:50.993 debug2: set_newkeys: mode 0\n4976 2018-08-24 11:44:50.993 debug1: rekey after 134217728 blocks\n4976 2018-08-24 11:44:50.993 debug2: set_newkeys: mode 1\n4976 2018-08-24 11:44:50.993 debug1: rekey after 134217728 blocks\n4976 2018-08-24 11:44:50.993 debug1: ssh_packet_set_postauth: called\n4976 2018-08-24 11:44:50.993 debug3: ssh_packet_set_state: done\n4976 2018-08-24 11:44:50.993 debug3: notify_hostkeys: key 0: ssh-rsa SHA256:U+2Q8jcGkL/bqmEIiQlzbeIKlLIZfkUvsFvPL9eYjCE\n4976 2018-08-24 11:44:50.993 debug3: notify_hostkeys: key 1: ecdsa-sha2-nistp256 SHA256:Sbeti2B7sKGgIKeVOjugMSCBePHWUizWBSEGqROY90k\n4976 2018-08-24 11:44:50.993 debug3: notify_hostkeys: key 2: ssh-ed25519 SHA256:AvyfpjbyvJTrZrFCQbfQtIf05NGr8DXOBJR2URfxbKM\n4976 2018-08-24 11:44:50.993 debug3: notify_hostkeys: sent 3 hostkeys\n4976 2018-08-24 11:44:50.993 debug3: send packet: type 80\n4976 2018-08-24 11:44:50.993 debug1: active: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\n4976 2018-08-24 11:44:50.993 debug1: Entering interactive session for SSH2.\n4976 2018-08-24 11:44:50.993 debug2: fd 7 setting O_NONBLOCK\n4976 2018-08-24 11:44:50.993 debug2: fd 8 setting O_NONBLOCK\n4976 2018-08-24 11:44:50.993 debug1: server_init_dispatch\n4976 2018-08-24 11:44:50.993 debug3: receive packet: type 90\n4976 2018-08-24 11:44:50.993 debug1: server_input_channel_open: ctype session rchan 0 win 1048576 max 16384\n4976 2018-08-24 11:44:50.993 debug1: input_session_request\n4976 2018-08-24 11:44:50.993 debug1: channel 0: new [server-session]\n4976 2018-08-24 11:44:50.993 debug2: session_new: allocate (allocated 0 max 10)\n4976 2018-08-24 11:44:50.993 debug3: session_unused: session id 0 unused\n4976 2018-08-24 11:44:50.993 debug1: session_new: session 0\n4976 2018-08-24 11:44:50.993 debug1: session_open: channel 0\n4976 2018-08-24 11:44:50.993 debug1: session_open: session 0: link with channel 0\n4976 2018-08-24 11:44:50.993 debug1: server_input_channel_open: confirm session\n4976 2018-08-24 11:44:50.993 debug3: send packet: type 91\n4976 2018-08-24 11:44:50.993 debug3: receive packet: type 80\n4976 2018-08-24 11:44:50.993 debug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\n4976 2018-08-24 11:44:51.149 debug3: receive packet: type 98\n4976 2018-08-24 11:44:51.149 debug1: server_input_channel_req: channel 0 request pty-req reply 1\n4976 2018-08-24 11:44:51.149 debug1: session_by_channel: session 0 channel 0\n4976 2018-08-24 11:44:51.149 debug1: session_input_channel_req: session 0 req pty-req\n4976 2018-08-24 11:44:51.149 debug1: Allocating pty.\n4976 2018-08-24 11:44:51.149 debug1: session_pty_req: session 0 alloc console\n4976 2018-08-24 11:44:51.149 debug3: send packet: type 99\n4976 2018-08-24 11:44:51.149 debug3: receive packet: type 98\n4976 2018-08-24 11:44:51.149 debug1: server_input_channel_req: channel 0 request shell reply 1\n4976 2018-08-24 11:44:51.149 debug1: session_by_channel: session 0 channel 0\n4976 2018-08-24 11:44:51.149 debug1: session_input_channel_req: session 0 req shell\n4976 2018-08-24 11:44:51.149 Starting session: shell on console for (null) from 10.173.14.57 port 59234 id 0\n4976 2018-08-24 11:44:51.149 debug2: fd 9 setting O_NONBLOCK\n4976 2018-08-24 11:44:51.149 debug2: fd 10 setting O_NONBLOCK\n4976 2018-08-24 11:44:51.149 debug2: fd 11 setting O_NONBLOCK\n4976 2018-08-24 11:44:51.149 debug2: fd 12 setting O_NONBLOCK\n4976 2018-08-24 11:44:51.149 debug2: fd 13 setting O_NONBLOCK\n4976 2018-08-24 11:44:51.149 debug2: fd 14 setting O_NONBLOCK\n4976 2018-08-24 11:44:51.149 debug3: failed to convert utf8 payload:(null) error:87\n4976 2018-08-24 11:44:51.149 debug3: send packet: type 100\n4976 2018-08-24 11:44:51.212 debug3: recv - from CB ERROR:10054, io:000001F2E82F8DF0\n4976 2018-08-24 11:44:51.212 Read error from remote host 10.173.14.57 port 59234: Connection reset\n4976 2018-08-24 11:44:51.212 debug1: do_cleanup\n348 2018-08-24 11:44:51.212 debug3: mm_request_receive entering\n348 2018-08-24 11:44:51.212 debug1: do_cleanup\n. Hello,\nProblem do not occurs any more with last version (v7.7.2.0p1-Beta).. ",
    "ronelm2000": "I am able to replicate this error. It seems it happens when the default shell is changed to powershell. The key is this particular line:\ntxt\ndebug1: Executing command: \"c:\\windows\\system32\\windowspowershell\\v1.0\\powershell.exe\" /c sftp-server.exe\nThis should either indicate the exact path to sftp-server.exe or be something like ./sftp-server.exe\nCurrent Workaround is to revert the Registry Entries to use powershell back to Command Prompt.. ",
    "hashCode1": "Ok i will upgrade to the latest version.. \nand yes it is interactive ..  the user profile is loaded in the session and checked acl for the file user has full control. I have updated to the latest version and still cipher command doesnt work\nPS C:\\Users\\hash> ((Get-Item (Get-Command sshd).Source).VersionInfo.FileVersion)\n7.7.1.0\n. ",
    "rmilojkovic": "I've decided to issue certificates based on UPN of domain account it belongs to and this is the only reason why certificate principal looks like this. Access to remote Linux machine, as any local user, is controled via AuthorizedPrincipalsFile, where certificate owner principal (in my case UPN) has to be defined.\nIt makes no difference whatever you pick as certificate principal if AuthorizedPrincipalsFile is used, as log as it matches with the one in file. If AuthorizedPrincipalsFile and AuthorizedKeysFile are not used (defined to none in sshd_config) and TrustedUserCAKeys are defined, user certificate principal must mach the username (local or domain) on remote Unix/Windows machine (default behaviour) in order to establish connection. Alternative is custom principal in user certificate and existence of AuthorizedKeysFile with same principal defined (e.g. principals=user@domain.com).\nIf AuthorizedPrincipalsFile contains just principal of the used certificate, without key options, ssh connection can be established succesfuly and therefore format of the principle is not a problem.\nauthorized_principals file in home directory of any user:\nuser@domain.com\nIf extra key options are added, which are required for root user forced command, principle is not recognised. Has anybody managed to successfully use few key options together with the principal in AuthorizedPrincipalsFile?\nI've also checked sshd_config documentation, but there isn't much details about mentioned file and I'm not sure if my syntax is correct.\n\nAuthorizedPrincipalsFile\nSpecifies a file that lists principal names that are accepted for certificate authentication. When using certificates signed by a key listed in TrustedUserCAKeys, this file lists names, one of which must appear in the certificate for it to be accepted for authentication. Names are listed one per line preceded by key options (as described in AUTHORIZED_KEYS FILE FORMAT in sshd(8)). Empty lines and comments starting with \u2018#\u2019 are ignored.. @dwatley I forgot to mention that after setting principal as domain\\user, same error is present - \u201cCertificate does not contain an authorized principal\u201d. As I've mentioned in my previous post, principal can be anything as log as it matches in both certificate and authorized_principals file.\n\nHas anybody tested some of avaliable key options, together with defined principal in AuthorizedPrincipalsFile?\nExample of key options, that are preceding the principal:\ncommand=\u201d/path/somecommand\u201d,no-agent-forwarding,no-port-forwarding,no-pty,no-X11-forwarding someprincipal\n. ",
    "longtth": "\nI see now that it automatically makes keys in C:\\ProgramData\\ssh on first launch.\n\nSometimes, it not, then the command ssh-keygen.exe -A will return these errors : \nso you must manually go to C:\\ProgramData\\ and create a folder named ssh\nPS C:\\Program Files\\OpenSSH-Win64> .\\ssh-keygen.exe -A\nssh-keygen: generating new host keys: RSA Could not save your public key in __PROGRAMDATA__\\\\ssh/ssh_host_rsa_key.SUifL1\ng3Uy: No such file or directory\nssh-keygen: generating new host keys: DSA Could not save your public key in __PROGRAMDATA__\\\\ssh/ssh_host_dsa_key.cacr5a\nVk02: No such file or directory\nssh-keygen: generating new host keys: ECDSA Could not save your public key in __PROGRAMDATA__\\\\ssh/ssh_host_ecdsa_key.0C\nTq6ro3Av: No such file or directory\nssh-keygen: generating new host keys: ED25519 Could not save your public key in __PROGRAMDATA__\\\\ssh/ssh_host_ed25519_ke\ny.pKnj1ynArI: No such file or directory. @jborean93 sorry for my mistake, it's okay now. \nclosed. \n. ",
    "darthVikes": "I saw some documentation on various websites that list the need to do ssh-keygen -A command, I didn't realize it was doing this automatically also but glad it does as its one less step.\n. ",
    "beardedfool": "Having the same error having added those lines to config and checked permissions.\nbut not confident it's not a config error my end as this system is far from fresh.\nThat said, can I just check whether creating a ssh_config in C:\\ProgramData\\ssh should work? \nssh -vvv seems to be suggesting it's read\ndebug1: Reading configuration data PROGRAMDATA\\ssh/ssh_config\nbut not sure if it's loaded correctly\nJust wondering why there isn't one created by default? Am I in the wrong location?\nWIn10 - 17134.228. OpenSSH_for_Windows_7.6p1, LibreSSL 2.6.4\ndebug1: Reading configuration data C:\\Users\\XXXXX/.ssh/config\ndebug1: C:\\Users\\XXXXX/.ssh/config line 2: Applying options for \ndebug1: Reading configuration data PROGRAMDATA\\ssh/ssh_config\ndebug2: resolving \"192.168.21.5\" port 22\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to 192.168.21.5 [192.168.21.5] port 22.\ndebug1: Connection established.\ndebug1: identity file C:\\Users\\XXXXX/.ssh/id_rsa type 0\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_rsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_rsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\XXXXX/.ssh/id_rsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_dsa error:2\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_dsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\XXXXX/.ssh/id_dsa type -1\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_dsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_dsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\XXXXX/.ssh/id_dsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_ecdsa error:2\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_ecdsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\XXXXX/.ssh/id_ecdsa type -1\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_ecdsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_ecdsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\XXXXX/.ssh/id_ecdsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_ed25519 error:2\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_ed25519.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\XXXXX/.ssh/id_ed25519 type -1\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_ed25519-cert error:2\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/id_ed25519-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\XXXXX/.ssh/id_ed25519-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.6\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.6p1 Ubuntu-4\ndebug1: match: OpenSSH_7.6p1 Ubuntu-4 pat OpenSSH compat 0x04000000\ndebug2: fd 3 setting O_NONBLOCK\ndebug1: Authenticating to 192.168.21.5:22 as 'installer'\ndebug3: hostkeys_foreach: reading file \"C:\\Users\\XXXXX/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file C:\\Users\\XXXXX/.ssh/known_hosts:1\ndebug3: load_hostkeys: loaded 1 keys from 192.168.21.5\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/known_hosts2 error:2\ndebug3: Failed to open file:C:\\ProgramData\\ssh/ssh_known_hosts error:2\ndebug3: Failed to open file:C:\\ProgramData\\ssh/ssh_known_hosts2 error:2\ndebug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521\ndebug3: send packet: type 20\ndebug1: SSH2_MSG_KEXINIT sent\ndebug3: receive packet: type 20\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: local client KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none\ndebug2: compression stoc: none\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug2: peer server KEXINIT proposal\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\ndebug2: compression ctos: none,zlib@openssh.com\ndebug2: compression stoc: none,zlib@openssh.com\ndebug2: languages ctos:\ndebug2: languages stoc:\ndebug2: first_kex_follows 0\ndebug2: reserved 0\ndebug1: kex: algorithm: curve25519-sha256\ndebug1: kex: host key algorithm: rsa-sha2-512\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none\ndebug3: send packet: type 30\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug3: receive packet: type 31\ndebug1: Server host key: ssh-rsa XXXreplaced\ndebug3: hostkeys_foreach: reading file \"C:\\Users\\XXXXX/.ssh/known_hosts\"\ndebug3: record_hostkey: found key type ECDSA in file C:\\Users\\XXXXX/.ssh/known_hosts:1\ndebug3: load_hostkeys: loaded 1 keys from 192.168.21.5\ndebug3: Failed to open file:C:\\Users\\XXXXX/.ssh/known_hosts2 error:2\ndebug3: Failed to open file:C:\\ProgramData\\ssh/ssh_known_hosts error:2\ndebug3: Failed to open file:C:\\ProgramData\\ssh/ssh_known_hosts2 error:2\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\nThe fingerprint for the RSA key sent by the remote host is\nSHA256:replaced.\nPlease contact your system administrator.\nAdd correct host key in C:\\Users\\XXXXX/.ssh/known_hosts to get rid of this message.\nOffending ECDSA key in C:\\Users\\XXXXX/.ssh/known_hosts:1\nPassword authentication is disabled to avoid man-in-the-middle attacks.\nKeyboard-interactive authentication is disabled to avoid man-in-the-middle attacks.\ndebug3: send packet: type 21\ndebug2: set_newkeys: mode 1\ndebug1: rekey after 134217728 blocks\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug3: receive packet: type 21\ndebug1: SSH2_MSG_NEWKEYS received\ndebug2: set_newkeys: mode 0\ndebug1: rekey after 134217728 blocks\ndebug3: unable to connect to pipe \\\\.\\pipe\\openssh-ssh-agent, error: 2\ndebug1: pubkey_prepare: ssh_get_authentication_socket: No such file or directory\ndebug2: key: C:\\Users\\XXXXX/.ssh/id_rsa (0000019E141DB4B0)\ndebug2: key: C:\\Users\\XXXXX/.ssh/id_dsa (0000000000000000)\ndebug2: key: C:\\Users\\XXXXX/.ssh/id_ecdsa (0000000000000000)\ndebug2: key: C:\\Users\\XXXXX/.ssh/id_ed25519 (0000000000000000)\ndebug3: send packet: type 5\ndebug3: receive packet: type 7\ndebug1: SSH2_MSG_EXT_INFO received\ndebug1: kex_input_ext_info: server-sig-algs=\ndebug3: receive packet: type 6\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred publickey\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred:\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering public key: RSA SHA256:+invg+1HNU5vPMp3Srtr0BqsvoMNXkSSCC7t0/f6FTw C:\\Users\\XXXXX/.ssh/id_rsa\ndebug3: send_pubkey_test\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug1: Trying private key: C:\\Users\\XXXXX/.ssh/id_dsa\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\XXXXX/.ssh/id_dsa: No such file or directory\ndebug1: Trying private key: C:\\Users\\XXXXX/.ssh/id_ecdsa\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\XXXXX/.ssh/id_ecdsa: No such file or directory\ndebug1: Trying private key: C:\\Users\\XXXXX/.ssh/id_ed25519\ndebug3: GetFileAttributesExW with last error 2\ndebug3: no such identity: C:\\Users\\XXXXX/.ssh/id_ed25519: No such file or directory\ndebug2: we did not send a packet, disable method\ndebug1: No more authentication methods to try.\ninstaller@192.168.21.5: Permission denied (publickey,password,keyboard-interactive).. Thanks for the help and sorry both for confusing the original issue - long day. \nMuch appreciated. ",
    "draftsteve": "I read through this issue. \nI am using posh-git so I tried deleting the environment variables SSH_AGENT_PID and SSH_AUTH_SOCK but they don't exist. I'm guessing I'm using a newer version of posh-git?\nNot loading posh-git doesn't seem to help either and the ssh-agent service starts fine. . I created the dummy sshd service as described.\nssh-add now works as expected. Thank you @manojampalam! This was driving me crazy. . ",
    "luckerby": "Indeed, I was using a regular user. Following a few tests to determine the minimal rights needed, I've went ahead and delegated permissions to Authenticated Users against the folder that holds sshd.log as below (in my scenario Bypass Traverse Checking is on for everyone, therefore no additional \"Traverse Folder\" permission was required). I used Authenticated Users in order to catch any activity invoked remotely, regardless of user.\n\nOne security issue I'm seeing is for a user to be able to (maliciously) remove data from the log. This could be done directly through the SSH connection, however trying to append manually to the file results in a \"The process cannot access the file ... because it is being used by another process\", probably due to a lock set by the sshd service when it starts...\n. You're right, I wasn't using the \"share\" mode to open the file. Once this was done, as seen below using a FileStream in Powershell (inspired by this) any user could modify sshd.log at will.\n\nThe whole thing however raises an interesting dilemma - either disallow access to the logs, but have unknown commands running remotely on the system invoked by unknown users, or have logging enabled for a subset of users but risk having any of those corrupt the log file. Or is there a way to restrict the people that can connect in the first place ?\n. Thanks, Manoj.. > @luckerby, I tried to set the defaultShell, no need to apply the workaround:\n\n\ngit clone remoteMachine:D:\\test\\mytest.git\nCloning into 'mytest'...\ndomain\\user@localhost's password:\nwarning: You appear to have cloned an empty repository.\n\n@bingbing8, sorry for the late reply. Your solution works perfectly - just tested. Extra bonus point - Jenkins can now connect to OpenSSH for git integration; I wouldn't have been able to apply the previous workaround in the Jenkins git dialog.. My mistake, I didn't pay attention when reading the doc initially. For the domain group I'm using, it's clearly stated that the format to be used is as below. It worked perfectly.\nAllowGroups \"contoso\\ssh users\". @NoMoreFood, removing the existing user account and re-adding it back solved the problem (checking the actual SIDs present on the authorized_keys file itself can be done with icacls authorized_keys /save <output_file>.\nI also saw the pending pull request. I can go ahead and compile/build myself, the only question is what are the dependencies required (already have Visual Studio installed).. ",
    "trzecieu": "Hi, \nhere it's the log of server with DEBUG3 flag: \n16684 2018-08-29 08:49:07.185 debug3: fd 5 is not O_NONBLOCK\n16684 2018-08-29 08:49:07.185 debug3: spawning \"C:\\\\Windows\\\\System32\\\\OpenSSH\\\\sshd.exe\" \"-R\"\n16684 2018-08-29 08:49:07.188 debug3: send_rexec_state: entering fd = 8 config len 167\n16684 2018-08-29 08:49:07.188 debug3: ssh_msg_send: type 0\n16684 2018-08-29 08:49:07.188 debug3: send_rexec_state: done\n7452 2018-08-29 08:49:07.240 debug1: inetd sockets after dupping: 3, 3\n7452 2018-08-29 08:49:07.240 Connection from 127.0.0.1 port 61806 on 127.0.0.1 port 22\n7452 2018-08-29 08:49:07.240 debug1: Client protocol version 2.0; client software version OpenSSH_for_Windows_7.6\n7452 2018-08-29 08:49:07.240 debug1: match: OpenSSH_for_Windows_7.6 pat OpenSSH* compat 0x04000000\n7452 2018-08-29 08:49:07.240 debug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.6\n7452 2018-08-29 08:49:07.240 debug2: fd 3 setting O_NONBLOCK\n7452 2018-08-29 08:49:07.255 debug3: spawning \"C:\\\\Windows\\\\System32\\\\OpenSSH\\\\sshd.exe\" \"-y\"\n7452 2018-08-29 08:49:07.256 debug3: send_rexec_state: entering fd = 6 config len 167\n7452 2018-08-29 08:49:07.256 debug3: ssh_msg_send: type 0\n7452 2018-08-29 08:49:07.256 debug3: send_rexec_state: done\n7452 2018-08-29 08:49:07.256 debug3: ssh_msg_send: type 0\n7452 2018-08-29 08:49:07.259 debug3: ssh_msg_send: type 0\n7452 2018-08-29 08:49:07.259 debug3: preauth child monitor started\n7452 2018-08-29 08:49:07.277 debug3: privsep user:group 1:0 [preauth]\n7452 2018-08-29 08:49:07.277 debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms [preauth]\n7452 2018-08-29 08:49:07.277 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n7452 2018-08-29 08:49:07.277 debug3: send packet: type 20 [preauth]\n7452 2018-08-29 08:49:07.277 debug1: SSH2_MSG_KEXINIT sent [preauth]\n7452 2018-08-29 08:49:07.277 debug3: receive packet: type 20 [preauth]\n7452 2018-08-29 08:49:07.277 debug1: SSH2_MSG_KEXINIT received [preauth]\n7452 2018-08-29 08:49:07.277 debug2: local server KEXINIT proposal [preauth]\n7452 2018-08-29 08:49:07.277 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1 [preauth]\n7452 2018-08-29 08:49:07.277 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n7452 2018-08-29 08:49:07.277 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n7452 2018-08-29 08:49:07.277 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n7452 2018-08-29 08:49:07.277 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n7452 2018-08-29 08:49:07.277 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n7452 2018-08-29 08:49:07.277 debug2: compression ctos: none [preauth]\n7452 2018-08-29 08:49:07.277 debug2: compression stoc: none [preauth]\n7452 2018-08-29 08:49:07.277 debug2: languages ctos:  [preauth]\n7452 2018-08-29 08:49:07.277 debug2: languages stoc:  [preauth]\n7452 2018-08-29 08:49:07.277 debug2: first_kex_follows 0  [preauth]\n7452 2018-08-29 08:49:07.277 debug2: reserved 0  [preauth]\n7452 2018-08-29 08:49:07.277 debug2: peer client KEXINIT proposal [preauth]\n7452 2018-08-29 08:49:07.277 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c [preauth]\n7452 2018-08-29 08:49:07.277 debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa [preauth]\n7452 2018-08-29 08:49:07.277 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n7452 2018-08-29 08:49:07.277 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr [preauth]\n7452 2018-08-29 08:49:07.277 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n7452 2018-08-29 08:49:07.277 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n7452 2018-08-29 08:49:07.277 debug2: compression ctos: none [preauth]\n7452 2018-08-29 08:49:07.277 debug2: compression stoc: none [preauth]\n7452 2018-08-29 08:49:07.277 debug2: languages ctos:  [preauth]\n7452 2018-08-29 08:49:07.277 debug2: languages stoc:  [preauth]\n7452 2018-08-29 08:49:07.277 debug2: first_kex_follows 0  [preauth]\n7452 2018-08-29 08:49:07.277 debug2: reserved 0  [preauth]\n7452 2018-08-29 08:49:07.277 debug1: kex: algorithm: curve25519-sha256 [preauth]\n7452 2018-08-29 08:49:07.277 debug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\n7452 2018-08-29 08:49:07.277 debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\n7452 2018-08-29 08:49:07.277 debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\n7452 2018-08-29 08:49:07.277 debug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\n7452 2018-08-29 08:49:07.277 debug3: receive packet: type 30 [preauth]\n7452 2018-08-29 08:49:07.283 debug3: mm_key_sign entering [preauth]\n7452 2018-08-29 08:49:07.283 debug3: mm_request_send entering: type 6 [preauth]\n7452 2018-08-29 08:49:07.283 debug3: mm_key_sign: waiting for MONITOR_ANS_SIGN [preauth]\n7452 2018-08-29 08:49:07.283 debug3: mm_request_receive_expect entering: type 7 [preauth]\n7452 2018-08-29 08:49:07.283 debug3: mm_request_receive entering [preauth]\n7452 2018-08-29 08:49:07.283 debug3: mm_request_receive entering\n7452 2018-08-29 08:49:07.283 debug3: monitor_read: checking request 6\n7452 2018-08-29 08:49:07.283 debug3: mm_answer_sign\n7452 2018-08-29 08:49:07.283 debug3: mm_answer_sign: hostkey proof signature 000002185363FB90(101)\n7452 2018-08-29 08:49:07.283 debug3: mm_request_send entering: type 7\n7452 2018-08-29 08:49:07.283 debug2: monitor_read: 6 used once, disabling now\n7452 2018-08-29 08:49:07.283 debug3: send packet: type 31 [preauth]\n7452 2018-08-29 08:49:07.283 debug3: send packet: type 21 [preauth]\n7452 2018-08-29 08:49:07.283 debug2: set_newkeys: mode 1 [preauth]\n7452 2018-08-29 08:49:07.283 debug1: rekey after 134217728 blocks [preauth]\n7452 2018-08-29 08:49:07.283 debug1: SSH2_MSG_NEWKEYS sent [preauth]\n7452 2018-08-29 08:49:07.283 debug1: expecting SSH2_MSG_NEWKEYS [preauth]\n7452 2018-08-29 08:49:07.283 debug3: send packet: type 7 [preauth]\n7452 2018-08-29 08:49:07.286 debug3: receive packet: type 21 [preauth]\n7452 2018-08-29 08:49:07.286 debug1: SSH2_MSG_NEWKEYS received [preauth]\n7452 2018-08-29 08:49:07.286 debug2: set_newkeys: mode 0 [preauth]\n7452 2018-08-29 08:49:07.286 debug1: rekey after 134217728 blocks [preauth]\n7452 2018-08-29 08:49:07.286 debug1: KEX done [preauth]\n7452 2018-08-29 08:49:07.304 debug3: receive packet: type 5 [preauth]\n7452 2018-08-29 08:49:07.304 debug3: send packet: type 6 [preauth]\n7452 2018-08-29 08:49:07.304 debug3: receive packet: type 50 [preauth]\n7452 2018-08-29 08:49:07.304 debug1: userauth-request for user trzecieu@acme service ssh-connection method none [preauth]\n7452 2018-08-29 08:49:07.304 debug1: attempt 0 failures 0 [preauth]\n7452 2018-08-29 08:49:07.304 debug3: mm_getpwnamallow entering [preauth]\n7452 2018-08-29 08:49:07.304 debug3: mm_request_send entering: type 8 [preauth]\n7452 2018-08-29 08:49:07.304 debug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\n7452 2018-08-29 08:49:07.304 debug3: mm_request_receive_expect entering: type 9 [preauth]\n7452 2018-08-29 08:49:07.304 debug3: mm_request_receive entering [preauth]\n7452 2018-08-29 08:49:07.304 debug3: mm_request_receive entering\n7452 2018-08-29 08:49:07.304 debug3: monitor_read: checking request 8\n7452 2018-08-29 08:49:07.304 debug3: mm_answer_pwnamallow\n7452 2018-08-29 08:49:07.304 debug2: parse_server_config: config reprocess config len 167\n7452 2018-08-29 08:49:09.613 debug3: NetUserGetInfo() failed with error: 1722 for user: trzecieu and domain: acme \\n\n7452 2018-08-29 08:49:09.663 debug3: NetUserGetInfo() with domainController: \\\\\\\\SVVDC02 failed with error: 5 \\n\n7452 2018-08-29 08:49:09.663 Invalid user trzecieu@acme from 127.0.0.1 port 61806\n7452 2018-08-29 08:49:09.663 debug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 0\n7452 2018-08-29 08:49:09.663 debug3: mm_request_send entering: type 9\n7452 2018-08-29 08:49:09.663 debug2: monitor_read: 8 used once, disabling now\n7452 2018-08-29 08:49:09.663 debug3: mm_inform_authserv entering [preauth]\n7452 2018-08-29 08:49:09.663 debug3: mm_request_send entering: type 4 [preauth]\n7452 2018-08-29 08:49:09.663 debug2: input_userauth_request: try method none [preauth]\n7452 2018-08-29 08:49:09.663 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\n7452 2018-08-29 08:49:09.663 debug3: send packet: type 51 [preauth]\n7452 2018-08-29 08:49:09.663 debug3: mm_request_receive entering\n7452 2018-08-29 08:49:09.663 debug3: monitor_read: checking request 4\n7452 2018-08-29 08:49:09.663 debug3: mm_answer_authserv: service=ssh-connection, style=\n7452 2018-08-29 08:49:09.663 debug2: monitor_read: 4 used once, disabling now\n7452 2018-08-29 08:49:09.663 debug3: receive packet: type 50 [preauth]\n7452 2018-08-29 08:49:09.663 debug1: userauth-request for user trzecieu@acme service ssh-connection method publickey [preauth]\n7452 2018-08-29 08:49:09.663 debug1: attempt 1 failures 0 [preauth]\n7452 2018-08-29 08:49:09.663 debug2: input_userauth_request: try method publickey [preauth]\n7452 2018-08-29 08:49:09.663 debug2: userauth_pubkey: disabled because of invalid user [preauth]\n7452 2018-08-29 08:49:09.663 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\n7452 2018-08-29 08:49:09.663 debug3: send packet: type 51 [preauth]\n7452 2018-08-29 08:49:09.663 debug3: receive packet: type 50 [preauth]\n7452 2018-08-29 08:49:09.663 debug1: userauth-request for user trzecieu@acme service ssh-connection method keyboard-interactive [preauth]\n7452 2018-08-29 08:49:09.663 debug1: attempt 2 failures 1 [preauth]\n7452 2018-08-29 08:49:09.663 debug2: input_userauth_request: try method keyboard-interactive [preauth]\n7452 2018-08-29 08:49:09.663 debug1: keyboard-interactive devs  [preauth]\n7452 2018-08-29 08:49:09.663 debug1: auth2_challenge: user=trzecieu@acme devs= [preauth]\n7452 2018-08-29 08:49:09.663 debug1: kbdint_alloc: devices '' [preauth]\n7452 2018-08-29 08:49:09.663 debug2: auth2_challenge_start: devices  [preauth]\n7452 2018-08-29 08:49:09.663 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\n7452 2018-08-29 08:49:09.663 debug3: send packet: type 51 [preauth]\n7452 2018-08-29 08:49:23.029 debug3: receive packet: type 50 [preauth]\n7452 2018-08-29 08:49:23.029 debug1: userauth-request for user trzecieu@acme service ssh-connection method password [preauth]\n7452 2018-08-29 08:49:23.029 debug1: attempt 3 failures 2 [preauth]\n7452 2018-08-29 08:49:23.029 debug2: input_userauth_request: try method password [preauth]\n7452 2018-08-29 08:49:23.029 debug3: mm_auth_password entering [preauth]\n7452 2018-08-29 08:49:23.029 debug3: mm_request_send entering: type 12 [preauth]\n7452 2018-08-29 08:49:23.029 debug3: mm_auth_password: waiting for MONITOR_ANS_AUTHPASSWORD [preauth]\n7452 2018-08-29 08:49:23.029 debug3: mm_request_receive_expect entering: type 13 [preauth]\n7452 2018-08-29 08:49:23.029 debug3: mm_request_receive entering [preauth]\n7452 2018-08-29 08:49:23.029 debug3: mm_request_receive entering\n7452 2018-08-29 08:49:23.029 debug3: monitor_read: checking request 12\n7452 2018-08-29 08:49:23.033 debug1: Windows authentication failed for user: NOUSER domain: (null) error:1326\n7452 2018-08-29 08:49:23.033 debug3: mm_answer_authpassword: sending result 0\n7452 2018-08-29 08:49:23.033 debug3: mm_request_send entering: type 13\n7452 2018-08-29 08:49:23.033 Failed password for invalid user trzecieu@acme from 127.0.0.1 port 61806 ssh2\n7452 2018-08-29 08:49:23.033 debug3: mm_auth_password: user not authenticated [preauth]\n7452 2018-08-29 08:49:23.033 debug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\n7452 2018-08-29 08:49:23.033 debug3: send packet: type 51 [preauth]\nThis version of OpenSSH comes with Windows 10 1803\nTest case was created with removed %userprofile%/.ssh folder in order to make sure it will pickup right username that comes from system. Small update: \nI've tested this on a similar setup, but this time I used a local account and it worked fine. Maybe something funny is happening with LDAP accounts? \nExtra update:\nJust tested the same computer where I can't login using my LDAP credentials with a local user and it works fine. Is there any known issue / workaround to login to LDAP account?\nNote: Just in case I've retested login with lower-case acme and it didn't work. . ",
    "bigjew92": "Thank you. The logs are showing it is getting my publickey, but still not letting me in. I'm now getting a write failed: broken pipe error when trying to log in. I have my permissions on the .ssh folder and authorized_keys file set properly with just my account and System having access.. > ...\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug2: service_accept: ssh-userauth\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug2: key: /root/.ssh/id_rsa (0x7f2d71420740),\ndebug2: key: /root/.ssh/id_dsa ((nil)),\ndebug2: key: /root/.ssh/id_ecdsa ((nil)),\ndebug2: key: /root/.ssh/id_ed25519 ((nil)),\ndebug1: Authentications that can continue: publickey,password,keyboard-interactive\ndebug3: start over, passed a different list publickey,password,keyboard-interactive\ndebug3: preferred gssapi-keyex,gssapi-with-mic,publickey,keyboard-interactive,password\ndebug3: authmethod_lookup publickey\ndebug3: remaining preferred: keyboard-interactive,password\ndebug3: authmethod_is_enabled publickey\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: /root/.ssh/id_rsa\ndebug3: send_pubkey_test\ndebug2: we sent a publickey packet, wait for reply\ndebug1: Server accepts key: pkalg ssh-rsa blen 535\ndebug2: input_userauth_pk_ok: fp cc:6c:52:e4:aa:68:cd:6e:00:fb:af:47:e3:01:e2:1f\ndebug3: sign_and_send_pubkey: RSA cc:6c:52:e4:aa:68:cd:6e:00:fb:af:47:e3:01:e2:1f\ndebug1: key_parse_private2: missing begin marker\ndebug1: read PEM private key done: type RSA\ndebug1: Authentication succeeded (publickey).\nAuthenticated to 10.32.192.43 ([10.32.192.43]:22).\ndebug1: channel 0: new [client-session]\ndebug3: ssh_session2_open: channel_new: 0\ndebug2: channel 0: send open\ndebug1: Requesting no-more-sessions@openssh.com\ndebug1: Entering interactive session.\nWrite failed: Broken pipe\n$\nIt accepts the key, but when trying to open a session, fails.. Sorry for the late reply, have not been able to work on this. When running in debug mode, I am not able to get in using my public key OR my password. If I am running as a service, I am able to log in only by using my password, not key.\n\nC:\\Program Files\\OpenSSH-Win64>sshd.exe -ddd > C:\\Users\\username\\Desktop\\output.txt\ndebug2: load_server_config: filename PROGRAMDATA\\ssh/sshd_config\ndebug2: load_server_config: done config len = 152\ndebug2: parse_server_config: config PROGRAMDATA\\ssh/sshd_config len 152\ndebug3: PROGRAMDATA\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: PROGRAMDATA\\ssh/sshd_config:76 setting Subsystem sftp      sftp-server.exe\ndebug1: sshd version OpenSSH_for_Windows_7.7, LibreSSL 2.6.4\ndebug1: private host key #0: ssh-rsa SHA256:86iQP6LQyXad7wWuJtH8hy7C5XJXMcpMVrhHMqg0m0w\ndebug1: private host key #1: ecdsa-sha2-nistp256 SHA256:bA5mOnxDW831TD19qpBnQdV4gS0BpBLUZlAskdpc1jQ\ndebug1: private host key #2: ssh-ed25519 SHA256:eQjpwjdoMtyX1NPpa+tbL4S6NnvdBn5R3pBpAvJ6Dz8\ndebug1: rexec_argv[0]='sshd.exe'\ndebug1: rexec_argv[1]='-ddd'\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug3: fd 5 is not O_NONBLOCK\ndebug1: Server will not fork when running in debugging mode.\ndebug3: send_rexec_state: entering fd = 8 config len 152\ndebug3: ssh_msg_send: type 0\ndebug3: send_rexec_state: done\nConnection from 10.32.192.234 port 46912 on 10.32.192.43 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_7.4\ndebug1: match: OpenSSH_7.4 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.7\ndebug2: fd 5 setting O_NONBLOCK\ndebug3: spawning \"C:\\Program Files\\OpenSSH-Win64\\sshd.exe\" \"-ddd\" \"-y\"\ndebug2: Network child is on pid 3804\ndebug3: send_rexec_state: entering fd = 4 config len 152\ndebug3: ssh_msg_send: type 0\ndebug3: send_rexec_state: done\ndebug3: ssh_msg_send: type 0\ndebug3: ssh_msg_send: type 0\ndebug3: preauth child monitor started\ndebug3: recv_rexec_state: entering fd = 3\ndebug3: ssh_msg_recv entering\ndebug3: recv_rexec_state: done\ndebug2: parse_server_config: config PROGRAMDATA\\ssh/sshd_config len 152\ndebug3: PROGRAMDATA\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: PROGRAMDATA\\ssh/sshd_config:76 setting Subsystem sftp      sftp-server.exe\ndebug1: sshd version OpenSSH_for_Windows_7.7, LibreSSL 2.6.4\ndebug3: ssh_msg_recv entering\ndebug3: ssh_msg_recv entering\ndebug2: fd 5 setting O_NONBLOCK\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug3: send packet: type 20 [preauth]\ndebug1: SSH2_MSG_KEXINIT sent [preauth]\ndebug3: receive packet: type 20 [preauth]\ndebug1: SSH2_MSG_KEXINIT received [preauth]\ndebug2: local server KEXINIT proposal [preauth]\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellma\nn-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1 [preauth]\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac\n-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac\n-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: compression ctos: none [preauth]\ndebug2: compression stoc: none [preauth]\ndebug2: languages ctos:  [preauth]\ndebug2: languages stoc:  [preauth]\ndebug2: first_kex_follows 0  [preauth]\ndebug2: reserved 0  [preauth]\ndebug2: peer client KEXINIT proposal [preauth]\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellma\nn-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1,ext-info-c\n[preauth]\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-\nsha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ssh-dss\n [preauth]\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc [preauth]\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc [preauth]\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac\n-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac\n-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: compression ctos: none,zlib@openssh.com,zlib [preauth]\ndebug2: compression stoc: none,zlib@openssh.com,zlib [preauth]\ndebug2: languages ctos:  [preauth]\ndebug2: languages stoc:  [preauth]\ndebug2: first_kex_follows 0  [preauth]\ndebug2: reserved 0  [preauth]\ndebug1: kex: algorithm: curve25519-sha256 [preauth]\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none [preauth]\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none [preauth]\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\ndebug3: receive packet: type 30 [preauth]\ndebug3: mm_key_sign entering [preauth]\ndebug3: mm_request_send entering: type 6 [preauth]\ndebug3: mm_key_sign: waiting for MONITOR_ANS_SIGN [preauth]\ndebug3: mm_request_receive_expect entering: type 7 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 6\ndebug3: mm_answer_sign\ndebug3: mm_answer_sign: hostkey proof signature 0000003AEFDC30A0(100)\ndebug3: mm_request_send entering: type 7\ndebug2: monitor_read: 6 used once, disabling now\ndebug3: send packet: type 31 [preauth]\ndebug3: send packet: type 21 [preauth]\ndebug2: set_newkeys: mode 1 [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: SSH2_MSG_NEWKEYS sent [preauth]\ndebug1: expecting SSH2_MSG_NEWKEYS [preauth]\ndebug3: send packet: type 7 [preauth]\ndebug3: receive packet: type 21 [preauth]\ndebug1: SSH2_MSG_NEWKEYS received [preauth]\ndebug2: set_newkeys: mode 0 [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: KEX done [preauth]\ndebug3: receive packet: type 5 [preauth]\ndebug3: send packet: type 6 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user DOMAIN\\\\username service ssh-connection method none [preauth]\ndebug1: attempt 0 failures 0 [preauth]\ndebug3: mm_getpwnamallow entering [preauth]\ndebug3: mm_request_send entering: type 8 [preauth]\ndebug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\ndebug3: mm_request_receive_expect entering: type 9 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 8\ndebug3: mm_answer_pwnamallow\ndebug2: parse_server_config: config reprocess config len 152\ndebug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 1\ndebug3: mm_request_send entering: type 9\ndebug2: monitor_read: 8 used once, disabling now\ndebug2: input_userauth_request: setting up authctxt for DOMAIN\\\\username [preauth]\ndebug3: mm_inform_authserv entering [preauth]\ndebug3: mm_request_send entering: type 4 [preauth]\ndebug2: input_userauth_request: try method none [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user DOMAIN\\\\username service ssh-connection method publickey [preauth]\ndebug1: attempt 1 failures 0 [preauth]\ndebug2: input_userauth_request: try method publickey [preauth]\ndebug1: userauth_pubkey: test pkalg rsa-sha2-512 pkblob RSA SHA256:fABsQ1viTOPYR3TaDa/96xyBO0qkN+hKKsMQ/GAW6sA [preauth]\ndebug3: mm_key_allowed entering [preauth]\ndebug3: mm_request_send entering: type 22 [preauth]\ndebug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\ndebug3: mm_request_receive_expect entering: type 23 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 4\ndebug3: mm_answer_authserv: service=ssh-connection, style=\ndebug2: monitor_read: 4 used once, disabling now\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 22\ndebug3: mm_answer_keyallowed entering\ndebug3: mm_answer_keyallowed: key_from_blob: 0000003AEFDC30A0\ndebug1: trying public key file C:\\Users\\username\\.ssh/authorized_keys\ndebug3: mm_answer_keyallowed: publickey authentication test: RSA key is not allowed\nFailed publickey for DOMAIN\\username from 10.32.192.234 port 46912 ssh2: RSA SHA256:fABsQ1viTOPYR3TaDa/96xyBO0qkN+hKKsMQ/GAW6sA\ndebug3: mm_request_send entering: type 23\ndebug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512 [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user DOMAIN\\\\username service ssh-connection method keyboard-interactive [preauth]\ndebug1: attempt 2 failures 1 [preauth]\ndebug2: input_userauth_request: try method keyboard-interactive [preauth]\ndebug1: keyboard-interactive devs  [preauth]\ndebug1: auth2_challenge: user=DOMAIN\\\\username devs= [preauth]\ndebug1: kbdint_alloc: devices '' [preauth]\ndebug2: auth2_challenge_start: devices  [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user DOMAIN\\\\username service ssh-connection method password [preauth]\ndebug1: attempt 3 failures 2 [preauth]\ndebug2: input_userauth_request: try method password [preauth]\ndebug3: mm_auth_password entering [preauth]\ndebug3: mm_request_send entering: type 12 [preauth]\ndebug3: mm_auth_password: waiting for MONITOR_ANS_AUTHPASSWORD [preauth]\ndebug3: mm_request_receive_expect entering: type 13 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 12\ndebug3: lookup_principal_name: Successfully discovered explicit principal name: 'domain\\username'=>'EMAIL'\ndebug1: Windows authentication failed for user: EMAIL domain: (null) error: 1326\ndebug3: mm_answer_authpassword: sending result 0\ndebug3: mm_request_send entering: type 13\nFailed password for DOMAIN\\username from 10.32.192.234 port 46912 ssh2\ndebug3: mm_auth_password: user not authenticated [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\ndebug3: send packet: type 51 [preauth]\nConnection closed by authenticating user DOMAIN\\\\username 10.32.192.234 port 46912 [preauth]\ndebug1: do_cleanup [preauth]\ndebug1: monitor_read_log: child log fd closed\ndebug3: mm_request_receive entering\ndebug1: do_cleanup\ndebug1: Killing privsep child 3804\n\nC:\\Program Files\\OpenSSH-Win64>. Well, I realized I was using the wrong key, changed to the correct key and it worked in interactive more, but still not working while running as a service, getting the same error as reported previously.. Followed directions in the link, thank you. Everything came back successful, still running into the same error.\nas for the other troubleshooting fix you mentioned, I am trying to ssh to this box, so I don't believe step 4 would work. I enabled those two items in the config and still nothing, nothing should up in the logs folder either. . ",
    "iainnicol": "@bagajjal In a sense, there is a real bug here in Repair-AuthorizedKeyPermission; this is not just user misconfiguration.  The code change required was committed to this repo long ago.  However, the updated code still needs to be deployed to the PowerShell Gallery.\nLike @mgkuhn, my problem was the NT SERVICE\\sshd:(R) permission on authorized_keys. But how did that permission get there? It was calling Repair-AuthorizedKeyPermission that added that invalid permission for me!\nIndeed, originally that was deliberate. Repair-AuthorizedKeyPermission would add read access for NT SERVICE\\sshd. Then a year ago, @manojampalam added privilege separation. You can see they simultaneously also removed the code which added said read access.\nNow, official Windows documentation says to install OpenSSHUtils from the PowerShell Gallery, and then use the module to set correct permissions. That seems generally reasonable. Unfortunately, the most recent release of OpenSSHUtils on the PowerShell Gallery predates @manojampalam's privilege separation change. That means Repair-AuthorizedKeyPermission adds read access for NT SERVICE\\ssh, which is no longer required, and moreover no longer allowed.\nIn conclusion, please release a new version of OpenSSHUtils to the PowerShell Gallery. Thanks.. ",
    "wanghaiqing2015": "Server 2012 is not supported?. move folder to  C:\\Program Files\\OpenSSH\uff0c now can run successfully\uff01\uff01\nhow can change the folder location to another\uff1f. debug3: mm_request_receive entering\ndebug3: monitor_read: checking request 4\ndebug3: mm_answer_authserv: service=ssh-connection, style=\ndebug2: monitor_read: 4 used once, disabling now\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user administrator service ssh-connection method pa\nssword [preauth]\ndebug1: attempt 1 failures 0 [preauth]\ndebug2: input_userauth_request: try method password [preauth]\ndebug3: mm_auth_password entering [preauth]\ndebug3: mm_request_send entering: type 12 [preauth]\ndebug3: mm_auth_password: waiting for MONITOR_ANS_AUTHPASSWORD [preauth]\ndebug3: mm_request_receive_expect entering: type 13 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 12\ndebug3: mm_answer_authpassword: sending result 1\ndebug3: mm_request_send entering: type 13\nAccepted password for administrator from 125.70.179.0 port 33025 ssh2\ndebug1: monitor_child_preauth: administrator has been authenticated by privilege\nd process\ndebug3: mm_get_keystate: Waiting for new keys\ndebug3: mm_request_receive_expect entering: type 26\ndebug3: mm_request_receive entering\ndebug3: mm_get_keystate: GOT new keys\ndebug3: mm_auth_password: user authenticated [preauth]\ndebug3: send packet: type 52 [preauth]\ndebug3: mm_request_send entering: type 26 [preauth]\ndebug3: mm_send_keystate: Finished sending state [preauth]\ndebug3: ReadFileEx() ERROR:109, io:00000094B4F833E0\ndebug3: read - no more data, io:00000094B4F833E0\ndebug1: monitor_read_log: child log fd closed\ndebug1: Not running as SYSTEM: skipping loading user profile\ndebug3: spawning \"C:\\Users\\Administrator\\Desktop\\1\\sshd.exe\" \"-dddd\" \"-z\"\nCreateProcessAsUserW failed error:1314\nfork of unprivileged child failed\ndebug1: do_cleanup\n. run as  administrator. You don't understand my point.\nI only care about password . \nWhy can I use \u201cC:\\Program Files\\OpenSSH\u201d ?\nWhy can't I use \u201cC:\\Users\\Administrator\\Desktop\\1\\\u201d ?\n. I can use \u201cC:\\OpenSSH\u201d \nI can use \u201cC:\\Users\\OpenSSH\u201d \nI can use \u201cC:\\Users\\11111\u201d \nI can't  use \u201cC:\\Users\\Administrator\\1\u201d \nI can't  use \u201cC:\\Users\\Administrator\\Desktop\\1\u201d \n. As long as there is C:\\Users\\Administrator ,  the sshd service will connect reset it.\n. I can't read your meaning.\nCan you install sshd services to this directory\uff08C:\\Users\\Administrator\uff09?\nThis is error message\uff1a\n\n. ",
    "gtsteffaniak": "Getting the same issue, permissions show full control\nPS C:\\Program Files\\OpenSSH-Win64> ssh -vvv reutadmin@localhost\nOpenSSH_for_Windows_7.7p1, LibreSSL 2.6.4\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/config error:2\ndebug3: Failed to open file:PROGRAMDATA\\ssh/ssh_config error:2\ndebug2: resolving \"localhost\" port 22\ndebug2: ssh_connect_direct: needpriv 0\ndebug1: Connecting to localhost [127.0.0.1] port 22.\ndebug1: Connection established.\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_rsa type 0\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_rsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_rsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_rsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_dsa error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_dsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_dsa type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_dsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_dsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_dsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ecdsa error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ecdsa.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_ecdsa type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ecdsa-cert error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ecdsa-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_ecdsa-cert type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ed25519 error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ed25519.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_ed25519 type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ed25519-cert error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_ed25519-cert.pub error:\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_ed25519-cert type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_xmss error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_xmss.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_xmss type -1\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_xmss-cert error:2\ndebug3: Failed to open file:C:\\Users\\Administrator/.ssh/id_xmss-cert.pub error:2\ndebug1: key_load_public: No such file or directory\ndebug1: identity file C:\\Users\\Administrator/.ssh/id_xmss-cert type -1\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.7\ndebug3: recv - from CB(2) ERROR:108, io:000000000042A2F0\nssh_exchange_identification: read: Connection reset\n\nAny ideas?\n. ",
    "ethanhs": "@bagajjal I have an MS account as my main account\nAlso I should note it says \"on ETHANHS\" (which is my hostname AFIAK) and I know my username is ethanhs.. @bingbing8 I have previously tried that, it seems to consider ethanhs the domain name:\ndebug1: Windows authentication failed for user: NOUSER domain: . error: 1326\ndebug3: mm_answer_authpassword: sending result 0\ndebug3: mm_request_send entering: type 13\nFailed password for invalid user ethanhs from 10.147.18.212 port 48698 ssh2. debug2: load_server_config: filename __PROGRAMDATA__\\\\ssh/sshd_config\ndebug2: load_server_config: done config len = 159\ndebug2: parse_server_config: config __PROGRAMDATA__\\\\ssh/sshd_config len 159\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:9 setting Port 22\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:76 setting Subsystem sftp      sftp-server.exe\ndebug1: sshd version OpenSSH_for_Windows_7.7, LibreSSL 2.6.4\ndebug1: private host key #0: ssh-rsa SHA256:gjiwefWDQo4AiMK96pIWyDFcS3JPW3RWBhrkOjkNLbA\ndebug1: private host key #1: ecdsa-sha2-nistp256 SHA256:Tfgv5toH6rHkklpc9fvWBfLPLW4OuEooXbjX16MkytY\ndebug1: private host key #2: ssh-ed25519 SHA256:J8qk09kbpncZsaYbXAfnvGRkP6+N+zZYb+26hVzs9FQ\ndebug1: rexec_argv[0]='sshd'\ndebug1: rexec_argv[1]='-ddd'\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug3: fd 5 is not O_NONBLOCK\ndebug1: Server will not fork when running in debugging mode.\ndebug3: send_rexec_state: entering fd = 8 config len 159\ndebug3: ssh_msg_send: type 0\ndebug3: send_rexec_state: done\nConnection from 10.147.18.212 port 48754 on 10.147.18.113 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_7.6p1 Ubuntu-4\ndebug1: match: OpenSSH_7.6p1 Ubuntu-4 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.7\ndebug2: fd 5 setting O_NONBLOCK\ndebug3: spawning \"C:\\\\Program Files\\\\OpenSSH-Win64\\\\sshd\" \"-ddd\" \"-y\"\ndebug2: Network child is on pid 14564\ndebug3: send_rexec_state: entering fd = 4 config len 159\ndebug3: ssh_msg_send: type 0\ndebug3: send_rexec_state: done\ndebug3: ssh_msg_send: type 0\ndebug3: ssh_msg_send: type 0\ndebug3: preauth child monitor started\ndebug3: recv_rexec_state: entering fd = 3\ndebug3: ssh_msg_recv entering\ndebug3: recv_rexec_state: done\ndebug2: parse_server_config: config __PROGRAMDATA__\\\\ssh/sshd_config len 159\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:9 setting Port 22\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: __PROGRAMDATA__\\\\ssh/sshd_config:76 setting Subsystem sftp      sftp-server.exe\ndebug1: sshd version OpenSSH_for_Windows_7.7, LibreSSL 2.6.4\ndebug3: ssh_msg_recv entering\ndebug3: ssh_msg_recv entering\ndebug2: fd 5 setting O_NONBLOCK\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug3: send packet: type 20 [preauth]\ndebug1: SSH2_MSG_KEXINIT sent [preauth]\ndebug3: receive packet: type 20 [preauth]\ndebug1: SSH2_MSG_KEXINIT received [preauth]\ndebug2: local server KEXINIT proposal [preauth]\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1 [preauth]\ndebug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: compression ctos: none [preauth]\ndebug2: compression stoc: none [preauth]\ndebug2: languages ctos:  [preauth]\ndebug2: languages stoc:  [preauth]\ndebug2: first_kex_follows 0  [preauth]\ndebug2: reserved 0  [preauth]\ndebug2: peer client KEXINIT proposal [preauth]\ndebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c [preauth]\ndebug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa [preauth]\ndebug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\ndebug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\ndebug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\ndebug2: compression ctos: none,zlib@openssh.com,zlib [preauth]\ndebug2: compression stoc: none,zlib@openssh.com,zlib [preauth]\ndebug2: languages ctos:  [preauth]\ndebug2: languages stoc:  [preauth]\ndebug2: first_kex_follows 0  [preauth]\ndebug2: reserved 0  [preauth]\ndebug1: kex: algorithm: curve25519-sha256 [preauth]\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\ndebug3: receive packet: type 30 [preauth]\ndebug3: mm_key_sign entering [preauth]\ndebug3: mm_request_send entering: type 6 [preauth]\ndebug3: mm_key_sign: waiting for MONITOR_ANS_SIGN [preauth]\ndebug3: mm_request_receive_expect entering: type 7 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 6\ndebug3: mm_answer_sign\ndebug3: mm_answer_sign: hostkey proof signature 000001A6C6E742F0(99)\ndebug3: mm_request_send entering: type 7\ndebug2: monitor_read: 6 used once, disabling now\ndebug3: send packet: type 31 [preauth]\ndebug3: send packet: type 21 [preauth]\ndebug2: set_newkeys: mode 1 [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: SSH2_MSG_NEWKEYS sent [preauth]\ndebug1: expecting SSH2_MSG_NEWKEYS [preauth]\ndebug3: send packet: type 7 [preauth]\ndebug3: receive packet: type 21 [preauth]\ndebug1: SSH2_MSG_NEWKEYS received [preauth]\ndebug2: set_newkeys: mode 0 [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: KEX done [preauth]\ndebug3: receive packet: type 5 [preauth]\ndebug3: send packet: type 6 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user ethanhs service ssh-connection method none [preauth]\ndebug1: attempt 0 failures 0 [preauth]\ndebug3: mm_getpwnamallow entering [preauth]\ndebug3: mm_request_send entering: type 8 [preauth]\ndebug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\ndebug3: mm_request_receive_expect entering: type 9 [preauth]\ndebug3: mm_request_receive entering [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 8\ndebug3: mm_answer_pwnamallow\ndebug2: parse_server_config: config reprocess config len 159\ndebug3: get_passwd: Invalid account type: 3.\nInvalid user ethanhs from 10.147.18.212 port 48754\ndebug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 0\ndebug3: mm_request_send entering: type 9\ndebug2: monitor_read: 8 used once, disabling now\ndebug3: mm_inform_authserv entering [preauth]\ndebug3: mm_request_send entering: type 4 [preauth]\ndebug2: input_userauth_request: try method none [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: mm_request_receive entering\ndebug3: monitor_read: checking request 4\ndebug3: mm_answer_authserv: service=ssh-connection, style=\ndebug2: monitor_read: 4 used once, disabling now\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user ethanhs service ssh-connection method publickey [preauth]\ndebug1: attempt 1 failures 0 [preauth]\ndebug2: input_userauth_request: try method publickey [preauth]\ndebug2: userauth_pubkey: disabled because of invalid user [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\ndebug3: send packet: type 51 [preauth]\ndebug3: receive packet: type 50 [preauth]\ndebug1: userauth-request for user ethanhs service ssh-connection method keyboard-interactive [preauth]\ndebug1: attempt 2 failures 1 [preauth]\ndebug2: input_userauth_request: try method keyboard-interactive [preauth]\ndebug1: keyboard-interactive devs  [preauth]\ndebug1: auth2_challenge: user=ethanhs devs= [preauth]\ndebug1: kbdint_alloc: devices '' [preauth]\ndebug2: auth2_challenge_start: devices  [preauth]\ndebug3: userauth_finish: failure partial=0 next methods=\"publickey,password,keyboard-interactive\" [preauth]\ndebug3: send packet: type 51 [preauth]. @manojampalam \n\n\nssh ethanhs ip doesn't work. It tries to connect to my computer over lan (to hostname ethanhs). I'm trying to connect over zerotier\n\n\nssh ethanhs\\ethanhs ip also doesn't work because it tries to resolve ethanhs\\ethanhs as a host\n\n\nssh ethanhs@ethanhs@ip doesn't work because it tries to resolve the username as ethanhs@ethanhs which is invalid (according to the sshd logs).. @manojampalam thank you, I can confirm changing the host name (which can be done in settings) works around the issue.. \n\n",
    "rezeptpflichtig": "I have the same problem, I can ssh in with my personal domain account but not with my local admin account.. ",
    "kentnek": "My server is actually my personal laptop with only one admin account, and yes I can normally login with the account's credentials. The client is just another laptop which I need to ssh to my personal laptop.\nWhat's funny is the ssh setup worked before, until I changed my personal laptop (server)'s password. \nBy the way, the error I got was 1332, not 1322. May I know what the message is for that error (1332)?. Oh wow thanks everyone for the heads up. A quick search on the error itself led me to the netplwiz command, which allowed me to view the current user accounts on my laptop. It turned out for some weird reason, after changing my Windows password, the username became my full email address.\nSo I changed my username back to kent in netplwiz, and everything works now. Hence I'm closing the issue.. ",
    "ipndeveloper": "Windows PowerShell\nCopyright (C) 2016 Microsoft Corporation. All rights reserved.\nPS C:\\Windows\\system32> cd \"C:\\Program Files\\OpenSSH-Win64\"\nPS C:\\Program Files\\OpenSSH-Win64> ssh-keygen -A\nssh-keygen: generating new host keys: RSA DSA ECDSA ED25519\nPS C:\\Program Files\\OpenSSH-Win64>  sshd.exe -ddd\ndebug2: load_server_config: filename PROGRAMDATA\\ssh/sshd_config\ndebug2: load_server_config: done config len = 253\ndebug2: parse_server_config: config PROGRAMDATA\\ssh/sshd_config len 253\ndebug3: PROGRAMDATA\\ssh/sshd_config:38 setting AuthorizedKeysFile .ssh/authorized_keys\ndebug3: PROGRAMDATA\\ssh/sshd_config:79 setting Subsystem sftp      sftp-server.exe\ndebug3: checking syntax for 'Match Group administrators'\ndebug1: sshd version OpenSSH_for_Windows_7.9, LibreSSL 2.6.5\ndebug1: get_passwd: LookupAccountName() failed: 1332.\ndebug1: private host key #0: ssh-rsa SHA256:WBnE1br59auYc6fObiJVSEJMjWhS1E7KLlB1Hob7j6I\ndebug1: private host key #1: ecdsa-sha2-nistp256 SHA256:9snHnGsXJGTXNy8hc60s83fLhQl2liyVKA2LQ1vmv9Q\ndebug1: private host key #2: ssh-ed25519 SHA256:u+yhTRePA45NUp5rkjIaCg9zHkBoY/v9tIbPDgaZS5A\ndebug1: rexec_argv[0]='C:\\Program Files\\OpenSSH-Win64\\sshd.exe'\ndebug1: rexec_argv[1]='-ddd'\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\nerror get_passwd: LookupAccountName() failed: 1332. ? what is the solution?. @NoMoreFood  thanks for answering  , I followed the steps of this link \nhttps://hostadvice.com/how-to/how-to-install-an-openssh-server-client-on-a-windows-2016-server/\nbut how can I establish the suggestion you mention? \nwhen I execute this command ssh-keygen.exe -A 'the key is created, which then when executing sshd.exe -ddd reads the information of the generated keys is corraceto that?. ",
    "dpsenner": "I'm observing an issue that appears to be related to this one when connecting to a linux machine from windows in a powershell console. I.e. after starting the powershell.exe I observe \"user@some-host\" to be duplicated on the same line:\nshell\nPS D:\\Workspace> ssh some-host\nuser@some-host:~$ clear\nuser@some-host:~$ user@some-host:~$ echo \"hello\"\nhello\nuser@some-host:~$ clear\nuser@some-host:~$ user@some-host:~$ <enter>\nuser@some-host:~$ <enter>\nuser@some-host:~$ lsb_release -r\nRelease:        18.04\nuser@some-host:~$ man clear\n(hit <q>)\nuser@some-host:~$ user@some-host:~$\nIt appears that the way how clear and man attempt to clear the screen does not work out well when done from an ssh shell started in a powershell.\nNoteworthy, too, is that with the user@some-host:~$ user@some-host:~$ printed it is enough to resize the powershell window to restore it such that it displays user@some-host:~$, i.e. by grabbing it with the mouse and increasing or decreasing the width by one column. Decreasing the powershell windows' height does not help, though.. ",
    "vsalvino": "I am also seeing the exact issue that dpsenner reported above. Issue is the same regardless of using any combination of CMD, PowerShell 5.1, or PowerShell 6.1 with Win32-OpenSSH client 7.7 or 7.9.\nAlso interesting, but probably unrelated, is that ssh.exe seems to always change the cursor size to \"small\" even it if it set as \"large\" in PowerShell.. ",
    "alexhass": "Yes, I used password based auth.. You cannot mount network shares with \u201enet use\u201c. The sftp users are only able to use sftp and have no shell access.\nmklink only works locally. This is Windows... not Linux and there is no NFS where this would simply work.\nI\u2019m sorry, but I do not see any solution in the referenced cases.. As I know mklink does only work on local disks. You cannot link to a network share.. I'm not happy with this dirty workaround. Can you support UNC path, please?. I have not used SSH keys yet with this sshd service. Currently the sshd redirects the user to the home dir with d:\\ftproot\\mywindomain\\username automatically. Just a guess, this may not work with ssh keys, too, but does today.. How can I install an \u201eofficially serviced\u201c release on Windows 2016?. @manojampalam: That sounds now like the complete opposite of what you said first.\n\nThese releases on GitHub are not officially serviced. If a security issue gets uncovered, a fix may be included in a later release on GitHub, but a patch wont necessarily be issued for a specific version you may be relying on.\n\ncompared to \n\nGitHub releases are done more often and should have the latest changes. OpenSSH installed through Add-WindowsCapability is version the comes as part of Windows will typically be based off a previous version of Github release.\n\nFirst you said Add-WindowsCapability is newer and may contain security fixes that github does not have and on the other side you say github is updated more often. For me an update also means uncovered security issues are fixed.\nUsing Add-WindowsCapability - I get an \"OpenSSH.Client~~~~0.0.1.0\". That is totally different from 7.7.x or 7.9.x. A version like 0.0.1.0 sound like the first DEV build ever and not like a stable one. I'm also not sure this is really the same and if this can be installed on Windows 2016 or earlier.\nFinally why are github releases not production ready if they are based on same code?. I cannot find a 2.x or 3.x branch at https://github.com/PowerShell/Win32-OpenSSH/releases. There is a 1.0 Beta and than it jumps to 7.6.x and 7.7.x. No idea where 2.x and 3.x is. Maybe v7.7.2.0p1-Beta is the version embedded into Windows 2019?\nI'm not sure if \"OpenSSH.Client~~~~0.0.1.0\" is really https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v0.0.1.0 ? Has Microsoft embedded this 3 years old release marked as This is a pre-release (non-production ready) into Windows 2019? I cannot believe this.\nWhat Github version is the version that Microsoft distributes with Windows 2019 - that is serviced and fully supported aka production ready? I'd like to install this production ready version on Windows 2016 and it should be updatable via Windows Update / WSUS for sure.. Now we know that v7.7.2.0 is the official production use version of Windows 2019. On Github it is marked as non-production version. This is not logic.\nStill not clear to me how I can install the version available for Windows 2019 on Windows 2016 and earlier in a supported way that also allow me to use WU/WSUS to keep it up to date. Can you share details how to install it on Windows 2016, please?. ",
    "sipho102": "I just tested the mklink symbolic link for CHRootDirectory and can confirm that it works. Thank you for the solution/idea. ",
    "mikebuckley": "Fat fingers Harry Here...  need a space on the command line to start pwsh.exe -sshs.  \nSorry for the interruption.  Nothing to see here - Thanks again for all of the great info here.. ",
    "zaphod77": "anyone? until this is fixed, ssh.exe is useless to me if the xterm emulation is bad enough that a simple lightweight text editor does not function.. still busted for me.  is there a newer version to test?\ni still have the same version i posted in the initial test.\nokay found a 7.9p1 and tried it. same issue. pico does not move the characters to the right when inserting at all. works fine in the shell prompt itself. putty works fine.\nnote that the WSL binary for ssh has the same terminal emulation issues. . ",
    "thomasaarholt": "Edit: The below was with Putty version 0.63. Updated to 0.70, and now it connected without issue.\nI can reproduce this. ssh from cmd works, but via Putty I get the same error as above. I tried setting Putty to log \"All session output\", but the error appears to take place before the log is even created.\nScreenshot:\n\n. Basically: as per my edit, this works with the latest Putty. I recommend @sanderaiaots tries that before any further investigation is made.  This . I only tried windows -> windows. Putty did not supply logs. . ",
    "the1derer": "The reason for this is you are giving public key to ssh-agent via ssh-add eg ssh-add FILE_NAME.pub  instead of  private key i.e. ssh-add FILE_NAME.. ",
    "davidmatson": "For a discussion of this symptom in another product see:\nhttps://github.com/cuviper/ssh-pageant/issues/55\nEspecially:\n\nThis warning was added in OpenSSH 7.7:\nhttps://www.openssh.com/txt/release-7.7\nssh(1): Warn when the agent returns a ssh-rsa (SHA1) signature when\na rsa-sha2-256/512 signature was requested. This condition is possible\nwhen an old or non-OpenSSH agent is in use. bz#279. \n",
    "admo": "Hi,\nI do not want to duplicate issues. Should I open new issue, please let me know.\nssh client version: OpenSSH_for_Windows_7.7p1, LibreSSL 2.6.5\nssh server version: OpenSSH_7.9p1, OpenSSL 1.1.1 FIPS  11 Sep 2018\nI'm also warned about different signature. Moreover, authentication with public key fails, and ssh client falls back to password authentication:\ndebug1: Offering public key: RSA SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU C:\\\\Users\\\\adamo/.ssh/id_rsa\ndebug3: send_pubkey_test\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 60\ndebug1: Server accepts key: pkalg rsa-sha2-512 blen 279\ndebug2: input_userauth_pk_ok: fp SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU\ndebug3: sign_and_send_pubkey: RSA SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU\nwarning: agent returned different signature type ssh-rsa (expected rsa-sha2-512)\ndebug3: send packet: type 50\ndebug3: receive packet: type 51\ndebug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password\nLog from server:\nsshd: debug1: attempt 1 failures 0 [preauth]                                                                                                                         [10/683]gru 16 22:08:18 little-helper sshd[6951]: debug2: input_userauth_request: try method publickey [preauth]\nsshd: debug1: userauth_pubkey: test pkalg rsa-sha2-512 pkblob RSA SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU [preauth]\nsshd: debug3: mm_key_allowed entering [preauth]\nsshd: debug3: mm_request_send entering: type 22 [preauth]\nsshd: debug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\nsshd: debug3: mm_request_receive_expect entering: type 23 [preauth]\nsshd: debug3: mm_request_receive entering [preauth]\nsshd: debug3: mm_request_receive entering\nsshd: debug3: monitor_read: checking request 22\nsshd: debug3: mm_answer_keyallowed entering\nsshd: debug3: mm_answer_keyallowed: key_from_blob: 0x555846342180\nsshd: debug1: temporarily_use_uid: 1000/1000 (e=0/0)\nsshd: debug1: trying public key file /home/adamo/.ssh/authorized_keys\nsshd: debug1: fd 13 clearing O_NONBLOCK\nsshd: debug1: /home/adamo/.ssh/authorized_keys:1: matching key found: RSA SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU\nsshd: debug1: /home/adamo/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\nsshd: Accepted key RSA SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU found at /home/adamo/.ssh/authorized_keys:1\nsshd: debug1: restore_uid: 0/0\nsshd: debug3: mm_answer_keyallowed: publickey authentication test: RSA key is allowed\nsshd: debug3: mm_request_send entering: type 23\nsshd: debug3: send packet: type 60 [preauth]\nsshd: debug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512 [preauth]\nsshd: debug3: user_specific_delay: user specific delay 0.000ms [preauth]\nsshd: debug3: ensure_minimum_time_since: elapsed 2.084ms, delaying 6.077ms (requested 8.161ms) [preauth]\nsshd: Postponed publickey for adamo from XXX.XXX.XXX.XXX port 59384 ssh2 [preauth]\nsshd: debug3: receive packet: type 50 [preauth]\nsshd: debug1: userauth-request for user adamo service ssh-connection method publickey [preauth]\nsshd: debug1: attempt 2 failures 0 [preauth]\nsshd: debug2: input_userauth_request: try method publickey [preauth]\nsshd: debug3: userauth_pubkey: have rsa-sha2-512 signature for RSA SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU [preauth]\nsshd: debug3: mm_key_allowed entering [preauth]\nsshd: debug3: mm_request_send entering: type 22 [preauth]\nsshd: debug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\nsshd: debug3: mm_request_receive_expect entering: type 23 [preauth]\nsshd: debug3: mm_request_receive entering [preauth]\nsshd: debug3: mm_request_receive entering\nsshd: debug3: monitor_read: checking request 22\nsshd: debug3: mm_answer_keyallowed entering\nsshd: debug3: mm_answer_keyallowed: key_from_blob: 0x55584634df40\nsshd: debug1: temporarily_use_uid: 1000/1000 (e=0/0)\nsshd: debug1: trying public key file /home/adamo/.ssh/authorized_keys\nsshd: debug1: fd 13 clearing O_NONBLOCK\nsshd: debug1: /home/adamo/.ssh/authorized_keys:1: matching key found: RSA SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU\nsshd: debug1: /home/adamo/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\nsshd: Accepted key RSA SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU found at /home/adamo/.ssh/authorized_keys:1\nsshd: debug1: restore_uid: 0/0\nsshd: debug3: mm_answer_keyallowed: publickey authentication: RSA key is allowed\nsshd: debug3: mm_request_send entering: type 23\nsshd: debug3: mm_sshkey_verify entering [preauth]\nsshd: debug3: mm_request_send entering: type 24 [preauth]\nsshd: debug3: mm_sshkey_verify: waiting for MONITOR_ANS_KEYVERIFY [preauth]\nsshd: debug3: mm_request_receive_expect entering: type 25 [preauth]\nsshd: debug3: mm_request_receive entering [preauth]\nsshd: debug3: mm_request_receive entering\nsshd: debug3: monitor_read: checking request 24\nsshd: debug3: mm_answer_keyverify: publickey 0x555846351160 signature unverified\nsshd: debug1: auth_activate_options: setting new authentication options\nsshd: debug3: mm_request_send entering: type 25\nsshd: Failed publickey for adamo from XXX.XXX.XXX.XXX port 59384 ssh2: RSA SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU\nsshd: debug2: userauth_pubkey: authenticated 0 pkalg rsa-sha2-512 [preauth]\nsshd: debug3: user_specific_delay: user specific delay 0.000ms [preauth]\nsshd: debug3: ensure_minimum_time_since: elapsed 0.946ms, delaying 7.214ms (requested 8.161ms) [preauth]\nsshd: debug3: userauth_finish: failure partial=0 next methods=\"publickey,gssapi-keyex,gssapi-with-mic,password\" [preauth]\nsshd: debug3: send packet: type 51 [preauth]\nHowever, if I remove keys from ssh-agent and ssh uses keys from %USERPROFILE%\\.ssh, then authentication succeed:\ndebug1: Offering public key: RSA SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU C:\\\\Users\\\\adamo/.ssh/id_rsa\ndebug3: send_pubkey_test\ndebug3: send packet: type 50\ndebug2: we sent a publickey packet, wait for reply\ndebug3: receive packet: type 60\ndebug1: Server accepts key: pkalg rsa-sha2-512 blen 279\ndebug2: input_userauth_pk_ok: fp SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU\ndebug3: sign_and_send_pubkey: RSA SHA256:THSeSgCr3A5YDRNtlmgjyWn2Ik5sy2ooxtfIwMKQphU\ndebug3: send packet: type 50\ndebug3: receive packet: type 52\ndebug1: Authentication succeeded (publickey).\nIs it a bug? Are you aware of it? Is there any workaround for it?. @manojampalam OpenSSH_7.9p1, OpenSSL 1.1.1 FIPS  11 Sep 2018. @manojampalam understood. Could I somehow deploy patched version on my host?. ",
    "aaronelliotross": "@mwestphal I'm having the same problem, have you learned anything since October about what the problem is ?. Thanks for the testing example !\nI've updated to 1809 and your example works for me now too. \nHowever, I'm still having trouble getting other connections to work. Here's an example that works in WSL with an ssh built with \"OpenSSH_7.6p1 Ubuntu-4ubuntu0.1, OpenSSL 1.0.2n  7 Dec 2017, but not with the ssh in PowerShell \"OpenSSH_for_Windows_7.7p1, LibreSSL 2.6.5\".\nOn client:\n```\n\npython -m http.server 43333\nServing HTTP on 0.0.0.0 port 43333 (http://0.0.0.0:43333/) ...\n```\n\nLaunch connection with reverse forwarding in PowerShell\n> ssh -R 59245:localhost:43333 server\nOn the server send an HTTP request:\n```\n$ echo \"GET / HTTP/1.0\" | nc localhost 59245\n$\n```\nThe expected output is a HTML response (a directory listing). The actual output is no output at all. An strace show that the connection is made and the string written to the socket. Wireshark shows packets coming through, but the HTTP server on the Client doesn't see the request at all.\nOn the WSL side, the same commands result in a response:\nOn Client:\n$ ssh -R 59244:localhost:43333 remote\nOn the Server:\n```\n$ echo \"GET / HTTP/1.0\" | nc localhost 59244\nHTTP/1.0 200 OK\nServer: SimpleHTTP/0.6 Python/3.7.1\nDate: Fri, 16 Nov 2018 15:02:40 GMT\nContent-type: text/html; charset=utf-8\nContent-Length: 2755\n   \u2026 snip the rest of the request ...\n```\nI'm very new to PowerShell, so while I've been trying to think of anything stupid I'm doing here, I might be missing something very obvious.\nThanks for your help !\n. ",
    "mwestphal": "I'm not working on this anymore, since we consider the Putty work around to be acceptable.\nOnly Win32-OpenSSH devs will be able to help I think.. ",
    "ceztko": "\nUnfortunately, this is not in this project's scope. I guess however that you could leverage posix library that is part of this project to create a native port of rsync for Windows.\n\nThanks for the prompt answer. Yes, I also guessed that rsync support could have not been in the scope of the project. I just hoped that Microsoft wanted to support it since it's extremely useful use case.\nPlease, can you point me more reference to the posix library that you're mentioning? Is it something related to Windows Subsystem for Linux (WSL) or is it something more similar to cygwin/msys2? Is so, how it differs from these approaches?. ",
    "ShawnCrocker": "Already noted and ready to fix. ",
    "stej": "I got it, I hope. \nIt was because of missing Subsytem powershell .... in config on Linux machine. \nAs a newbie in this area, I thought that when connecting to Linux machine from Windows, it is enough to specify the Subsystem in sshd_config on Windows machine. This was kind of confirmed by Process Monitor - it was clearly visible, that pwsh is used as subsystem when calling ssh on Windows.\nMabye the doc might be more clear about this. Something like \"you have to edit sshd_config on both machines - host & guest\".... @rkeithhill thanks for trying to help me. Appreciated a lot!. ",
    "JasonFossen": "Thank you for this detailed reply, looking forward to the article -- best wishes!. ",
    "highpointacademy": "Thanks for the reply...\nFor Number 1.  As far as I can tell, it is set correctly, although the current User (A Domain Admin account) is the owner of the OpenSSH Folder.\n\n\nIt is set correctly as well\n\n\nIt is in the same folder as sshd\n\n\nI have tried following the steps there but I do not ever get any logs output into the log folder?\n\n\n. When attempting to follow the troubleshooting tips, this is what I get in the Powershell window:\nPS C:\\OpenSSH> sshd.exe -d\ndebug1: sshd version OpenSSH_for_Windows_7.7, LibreSSL 2.6.4\ndebug1: private host key #0: ssh-rsa SHA256:y4NgLL/zahQOED8rPpr5zx6iJq+EGSE5pal6HCdcpfg\ndebug1: private host key #1: ecdsa-sha2-nistp256 SHA256:Acp2taSeXhSlUOdMO1FS0srlQNzPCH6mq8LQaFYqsqw\ndebug1: private host key #2: ssh-ed25519 SHA256:9ehJLIGDA/TewQ6qYqP7C3WKbzN053JkIS14aMaKD2s\ndebug1: rexec_argv[0]='C:\\\\OpenSSH\\\\sshd.exe'\ndebug1: rexec_argv[1]='-d'\ndebug1: Bind to port 22 on ::.\nServer listening on :: port 22.\ndebug1: Bind to port 22 on 0.0.0.0.\nServer listening on 0.0.0.0 port 22.\ndebug1: Server will not fork when running in debugging mode.\nConnection from 172.20.15.10 port 52883 on 172.20.15.10 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_for_Windows_7.7\ndebug1: match: OpenSSH_for_Windows_7.7 pat OpenSSH* compat 0x04000000\ndebug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.7\ndebug1: sshd version OpenSSH_for_Windows_7.7, LibreSSL 2.6.4\ndebug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\ndebug1: SSH2_MSG_KEXINIT sent [preauth]\ndebug1: SSH2_MSG_KEXINIT received [preauth]\ndebug1: kex: algorithm: curve25519-sha256 [preauth]\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\ndebug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: SSH2_MSG_NEWKEYS sent [preauth]\ndebug1: expecting SSH2_MSG_NEWKEYS [preauth]\ndebug1: SSH2_MSG_NEWKEYS received [preauth]\ndebug1: rekey after 134217728 blocks [preauth]\ndebug1: KEX done [preauth]\ndebug1: userauth-request for user hpaba\\\\\\\\sshadmin service ssh-connection method none [preauth]\ndebug1: attempt 0 failures 0 [preauth]\ndebug1: userauth-request for user hpaba\\\\\\\\sshadmin service ssh-connection method keyboard-interactive [preauth]\ndebug1: attempt 1 failures 0 [preauth]\ndebug1: keyboard-interactive devs  [preauth]\ndebug1: auth2_challenge: user=hpaba\\\\\\\\sshadmin devs= [preauth]\ndebug1: kbdint_alloc: devices '' [preauth]\ndebug1: userauth-request for user hpaba\\\\\\\\sshadmin service ssh-connection method password [preauth]\ndebug1: attempt 2 failures 1 [preauth]\nAccepted password for hpaba\\\\sshadmin from 172.20.15.10 port 52883 ssh2\ndebug1: monitor_child_preauth: hpaba\\\\sshadmin has been authenticated by privileged process\ndebug1: monitor_read_log: child log fd closed\ndebug1: Not running as SYSTEM: skipping loading user profile\nCreateProcessAsUserW failed error:1314\nfork of unprivileged child failed\ndebug1: do_cleanup\nPS C:\\OpenSSH>\n. So that only confuses me even more.\nI do not understand why this is so hard to get going?\nGuess i am ging to just have to find a 3rd party tool to accomplish this.... SFTP setup should not cause this much trouble. also, How am I going to collect logs of errors if the service will not even start?. ",
    "amarruedo": "I had this exact same issue, the server only would start on debug mode and fail with \"System error 1067\" when started from services desktop app.\nIn my case, the issue was in the ownership of host private key files. They must be owned only by SYSTEM account. Here you can find how to fix this.\n. ",
    "lars18th": "Hi @bagajjal ,\nThank you for the response! :wink: \nIn this case (LibreSSL as the backend crypto provider), can you explain how to replace the stock DLL?\nI suspect we need to recompile it with AES-NI support enabled (available in the library) until you (Microsoft) will compile it with this support enabled.\nRegards.\n . Hi @bagajjal ,\nPerhaps is a good idea to include LibreSSL Tests in the Windows build:\nhttps://github.com/libressl-portable/portable/issues/356\nAt time I don't know how to check if the AES-NI support is enabled or not in the sshd.exe.\nCan you help me in this area?\nThank you!. Hi,\nAny improvement?\nLet me explain the relevance of this topic:\n\nThe AES-NI support is a great improvement, as all recent x86 CPUs support for it. Using it, the performance of the encrypted channel is greatly improved.\nThe LibreSSL library has support for AES-NI, so you only need to enable it (and if it's enabled, but not supported by the hardware, then the software implementation is used).\nInclude some tool to check the support in both: hardware and library, is essential to confirm the availability of AES-NI support.\n\nSo, I hope soon we can use it with Win32-OpenSSH.\nRegards.\n. > @lars18th - We use LibreSSL as our crypto provider. Please file the issue with LibreSSL (https://github.com/libressl-portable/portable)\nDone: https://github.com/libressl-portable/portable/issues/474. Hi,\nNow I see here https://github.com/PowerShell/Win32-OpenSSH/wiki/sshd_config that COMPRESSION isn't supported.\nBut why?\nI understand to support only Compression delayed. But compression is a must have!. Hi @bagajjal ,\n\nWe currently don't support compression.\n\nIt's a shame to hear that! :disappointed: \nHowever, I hope that currently means that you're working to support it soon.\nCompression it's a must have for REMOTE FILE TRANSFERS! Please, don't think only on OpenSSH as a Remote Shell, but too as a Remote File Server (SFTP).\nRegards.\n. ",
    "illera88": "Any reason to use LibreSSL instead of the Windows Crypto API?. Those are great instructions! \nTrying right now. I'll come back to the results to see if we can find the root cause\n. I did what you said and it seems that there is no log files created at C:\\ProgramData\\ssh\\Logs\\sshd.log any reason why that could be?\nthanks. No, I did not start it as a service since I want to start it from within the debugger (instead of attaching to it) and I want to create a ssh server that does not require privileges (running on port > 1000). I think I got close from where the bug happens:\nIt is at spawn_child_internal(char* cmd, char *const argv[], HANDLE in, HANDLE out, HANDLE err, unsigned long flags, HANDLE* as_user, BOOLEAN prepend_module_path) function and the cmd argument instead of being cmd.exe or powershell.exe it is sshd.exe and argv is -z. \nDon't understand really why that is happening. \nFor clarification this happens after successful authentication (that's why I think the process that should be executed there is cmd.exe or powershell.exe .\nIdeas?. I've kept digging and I see that in load_user_profile checks if I'm SYSTEM (have run the process as a service):\n```\nint \nload_user_profile(HANDLE user_token, char* user)\n{\n    wchar_t * user_utf16 = NULL;\nif (!am_system()) {\n    debug(\"Not running as SYSTEM: skipping loading user profile\");\n    return 0;\n}\n\n``\nAs I said I don't and I need it to run in user land. Do you think that could be causing the problem?\n. Indeed I tried to runsshd` as a service and:\n1) If I use the release binaries provided in this repo it does works perfect.\n2) If I use the debug binaries I did create with VS it does not (I guess this needs further debugging)\nIn any case it seems pretty obvious that sshd cannot be used if it is not run as a service and it may be related with load_user_profile not passing the if (!am_system()) { condition. \nIs the requirement of running sshd as a system a known issue?\nThank you\n. Yes, it should not be necesary to run it as admin as long as the it listens\nin a port > 1000\nOn Tue, Dec 11, 2018 at 12:29 AM Bryan Berns notifications@github.com\nwrote:\n\nI know your intent is to not run as a system user, but is it also your\nintent to run an unprivileged user?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1304#issuecomment-446114371,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AE89qHfYeioSHfSrTimXuQVYDX42fxDWks5u32zlgaJpZM4ZMZON\n.\n-- \nAlberto Garc\u00eda Illera\n\nGPG Public Key https://goo.gl/yshdwh\n. Thank you for your time on debugging this issue. Do you know someone that may know about the internals of the mentioned APIs so we can mention him to take a look at this?\nthanks again. I do not need ssh key to work. Just to have a proper portable ssh server\nthey I can drop to listen in any >1024port\nOn Tue, Dec 11, 2018 at 8:03 PM Jordan Borean notifications@github.com\nwrote:\n\nIIRC the trouble with CreateProcessWithLogonW() is that it creates a\nprocess with an interactive logon type whereas normally an ssh spawned\nlogon would have a network cleartext logon type for password based auth.\nThe other option is CreateProcessWithToken() but that need the\nSeImpersonatePrivilege which isn't assigned to standard accounts.\nI'm curious as to why you want to run this as a non privileged account\nconsidering ssh key auth won't ever work.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1304#issuecomment-446454432,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AE89qJPMzMyWjnvaS5gPsVG2t22pWwVBks5u4IAkgaJpZM4ZMZON\n.\n-- \nAlberto Garc\u00eda Illera\n\nGPG Public Key https://goo.gl/yshdwh\n. Do you know anyone we can ask about it?\nThank you Jordan.\nOn Wed, Dec 12, 2018 at 12:39 AM Jordan Borean notifications@github.com\nwrote:\n\nIt's not my place to say whether CreateProcessWithLogonW() is an\nalternative as this isn't my project. Just merely stating the facts as to\nhow moving to that will result in a behaviour change where arguably an\ninteractive logon from a network source isn't really correct. I'm sure\nthere will be other issues that would pop up if this ever starts working as\nthe logon and process creation is just the tip of the iceberg.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1304#issuecomment-446506136,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AE89qFRgARcpTJ_101S6RZQOtqrMWR7eks5u4MC8gaJpZM4ZMZON\n.\n-- \nAlberto Garc\u00eda Illera\n\nGPG Public Key https://goo.gl/yshdwh\n. The use case is pretty simple. If I do no have admin access but I still\nwant to have an ssh server I can connect to and interact with.\nThe ssh protocol does not requiere to be used in ports <1024 and therefore\nit should be doable.\nI know it may be a pain to make it work as a non service but I think it\nwill be useful tu have a portable ssh server that you can drop and run\nwithout privileges.\nBTW, awesome job porting it to Windows!!\nOn Wed, Dec 12, 2018 at 1:26 PM Manoj Ampalam notifications@github.com\nwrote:\n\n@illera88 https://github.com/illera88\nsshd needs to run as system to be able to spawn off child process in\ndifferent security contexts - these include sshd nonprivileged workers and\nuser session proesses. sshd in interactive mode is only supported for\ndebugging purposes. Also make a note of this restriction in\nhttps://github.com/PowerShell/Win32-OpenSSH/wiki/Troubleshooting-Steps\nsshd.exe -d This will run sshd in interactive mode under currently logged\non user (typically as admin). Note that, in this mode, you can only login\nas the \"currently logged on user\" and only using \"key based auth\". To\novercome these restrictions, you should instead run psexec -s sshd.exe -d\nto run sshd as SYSTEM.\nCan you please summarize again what your requirement is?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1304#issuecomment-446750165,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AE89qMWJvYSdvLdWkHnMzWfrlYjBhT09ks5u4XShgaJpZM4ZMZON\n.\n-- \nAlberto Garc\u00eda Illera\n\nGPG Public Key https://goo.gl/yshdwh\n. ",
    "alitimer": "Thanks for the comment. From this part of the log\nFailed password for USERNAME from IP port PORT ssh2\nwe could figure out that it fails since it refers to the server based database for authentication. I tried with local standard/admin windows account and works fine.. Correct.\nThe authentication is through pGina which sits on top of Windows authentication based on pGina custom setting for non-local users. So, authentication happens by sending query to the online database (LDAP). \nComment: pGina makes profile for each non-local user but doesn't store their passwords on local machine as per custom setting. So if connection to LDAP fails, user won't be able to login.\nWhat happens is that when the next user is logged in, I cannot connect through ssh because ssh  doesn't know pGina and asking directly from Windows. It fails: Permission denied, please try again.  since the user is not local; For local user there's no issue as Windows knows them.\nMaybe there would be some config set up for pGina <-> openSSH interaction/integrity which I launched a ticket  for that.\n. Thanks for sharing that.\nAs a summary:\nIn special case of non-Windows authentication you have to be logged-in to be able to connect via ssh with the same account (getting favor of cache). \nOtherwise, you need local accounts to be able to login simultaneously via ssh with multiple users. openSSH talks to the Windows active directory for authentication.\n. UPDATE:\nIt works if you try to login with ssh key, not user's password querying by third party authentication from online database.. ",
    "danielparks": "I'm seeing this with Windows Server 2016 and 2012r2.\nThe first time a user logs in (before their profile directory is created) the terminal works normally. Every time after that, it displays only to the last line in the terminal, as described above.\nClients: openssh ?? on macOS 10.13,  OpenSSH_7.8p1 on macOS 10.14, and OpenSSH_6.7p1 on Debian 8.\nServer: openssh 7.7.1.1 installed with chocolatey.. ",
    "meiry": "@bingbing8\nI know , im looking for openssl support as my app using openssl . ",
    "Geogboe": "@pixelrebel are you absolutely sure you're downloading the latest release from here: https://github.com/PowerShell/Win32-OpenSSH/releases/download/v7.7.2.0p1-Beta/OpenSSH-Win64.zip\nThe file contents of that archive appear like this for me: \n\nI've also redownloaded it to confirm. \n. ",
    "pixelrebel": "Awe shucks!  You are correct. I must have downloaded from the upstream repo by mistake.  Thank you @Geogboe for taking the time to provide a thorough response (even though I am making a silly mistake).  I look forward to playing with this!. ",
    "toupeiro": "This is fantastic!  I've been working with my support channels to get this worked via Microsoft, I just tested this as well successfully!  I hope this can get pushed upstream and officially released soon.  Going to point my contacts in MS to this thread to hopefully help it along!\ntested on Windows 10.0.17134.471. In and beyond the comments below, I\u2019ve never seen any implementation abroad\nwhere the clients using ssh-gssapi from windows to Linux doesn\u2019t also want\nto realistically remove any NTLM based with as well, it\u2019s just harder in\npure windows environments to accomplish this.  Even if there was not an RFC\nforbidding it, this is an epic Dr. Malcolm moment. \u201cYour scientists were so\npreoccupied with whether or not they could that they didn\u2019t stop to think\nof they should.\u201d\nOn Fri, Mar 8, 2019 at 8:28 AM Markus Kuhn notifications@github.com wrote:\n\nOtherwise, I'm wondering if your changes are specific to supporting\nKerberos or can they also do SPNEGO (that can also do NTLM if needed)?\nFurther to my comment above (that NTLM authentication is generally pretty\ndangerous and therefore best left out of SSH), I just noticed that section\n7.3 in RFC 4462 https://www.ietf.org/rfc/rfc4462.txt specifically\nforbids the use of SPNEGO over SSH GSSAPI. This is because SSH has\nalready a method negotiation mechanism, and running a second negotiation\ninside GSSAPI could subvert the preference order of mechanisms and lead to\ninteroperability problems.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1295#issuecomment-470946736,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AImRjTVa4r4Evye66jI8x2bley5YG18qks5vUnObgaJpZM4Ys0pg\n.\n. \n",
    "sunzcosmo": "\n@sunzcosmo , did you create symlink mklink /D c:\\pwsh \"C:\\Program Files\\PowerShell\\6\"?\nfollowing this link\n\nI'm pretty sure I have already done it:\n```powershell\nPS C:> C:\\pwsh\\pwsh.exe\nPowerShell 6.1.0\nCopyright (c) Microsoft Corporation. All rights reserved.\nhttps://aka.ms/pscore6-docs\nType 'help' to get help.\nPS C:>\nyet the problem keeps reacurring:powershell\nPS> New-PSSession -HostName 121.107.1.18 -UserName root\nThe authenticity of host '121.107.1.18 (121.107.1.18)' can't be established.\nECDSA key fingerprint is SHA256:+UhCwkkqDAdvuGCpW21uF2J6ToSizf0IuFJWYa4+tNw.\nAre you sure you want to continue connecting (yes/no)?\nWarning: Permanently added '121.107.1.18' (ECDSA) to the list of known hosts.\nPassword:\nNew-PSSession : [121.107.1.18] The background process reported an error with the following message: The SSH client session has end\ned with error message: subsystem request failed on channel 0.\nAt line:1 char:1\n+ New-PSSession -HostName 121.107.1.18 -UserName root\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+ CategoryInfo          : OpenError: (System.Manageme....RemoteRunspace:RemoteRunspace) [New-PSSession], PSRemotingTransportExcept\nion\n+ FullyQualifiedErrorId : 2100,PSSessionOpenFailed\n```\n. > @sunzcosmo, It works for me using latest binaries built from latest source. Could you follow the Troubleshooting-Steps and post the sshd log?\nJust figured out why ... I was very careless when I read the document, and I forget to config the sshd_config on remote server. Really really sorry for wasting your time.. ",
    "dailyworker": "\nafter you update %programdata%\\ssh\\sshd_config, you need to restart the service to make your change take effect\n\nThanks you so much :). ",
    "HouzuoGuo": "The password text only includes Latin alphabet letters and US-layout keyboard symbols. In fact a local test user whose password is identical can successfully login to the SSH server.. i've been quite curious about the email address as well, these computers only accept domain\\user as logon name and won't let anyone sign in via an email address.\nIt isn't accepted by RDP, SSH, and desktop logon.. I do not have administrative privilege on this network. Login attempts made using UPN \"houzuo.guo@fi.abb.com\" works on Windows desktop and over RDP, though not without a realm name prefix, successful login attempts were made using name \"addomain\\houzuo.guo@fi.abb.com\".. ",
    "lhorace": "~~I meant, does the OpenSSH server shipped with Windows is derived from this repository? So to speak, issues encountered with OpenSSH, should be reported here?~~ Should issues be reported here and not the Microsoft forums? . That's fine, this is not a Production machine. Thanks for the info.. ",
    "smru": "Hi Bryan,\nI'm running Windows 10 Enterprise, Version 1809 (OS Build 17763.134).\nplink.exe:\u00a0\u00a0\u00a0 Version 0.70.0.0, 2017-12-11 14:18, 617048 bytes.\nssh.exe: \u00a0 \u00a0\u00a0 Version 7.7.2.1, 2018-09-15 16:07, 882688 bytes.\n \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 OpenSSH_for_Windows_7.7p1, LibreSSL 2.6.5\nThe PowerShell scripts and results are in the attachments.\nI use the following two statements to easily toggle between using \nplink.exe or ssh.exe.\n$OpenSSH = $False\n \u00a0\u00a0\u00a0 $OpenSSH = $True\nThe Remote-Good.ps1 script always succeeds. See Good.txt.\nThe Remote-Fail.ps1 script always fails when probing more than say 10 \ncomputers. See Fail.txt.\nHowever, the Remote-Fail.ps1 script always succeeds when probing just 1 \ncomputer. See One.txt.\nThe Remote-Fail.ps1 script sometimes succeeds and sometimes fails when \nprobing 4 computers. See Four.txt.\nBest regards, Douwe.\nOn 2018-12-05 10:47, Bryan Berns wrote:\n\nWhat version are you running? And what do you mean by \"wrong results\"?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1301#issuecomment-444348707, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/ALGi4somGj59wXJp6aNTQ8AJWpC2-Ngeks5u10HYgaJpZM4Y9NyT.\n\n\n\n\nREMOTE\n\n\nSee http://www.padisetty.com/2014/05/all-about-powershell-scriptblock.html\nSee help about_Scopes\nfunction Add-Colors{\n    param([Parameter(Mandatory = $True)] $Status)\n    $Field = $Status -split \"\\t+\"\n    if ($Field[0].Length -lt  0) { $Field[1] += \"t\" }\n    if ($Field[1].Length -lt  8) { $Field[1] += \"t\" }\n    if ($Field[2].Length -lt  8) { $Field[2] += \"t\" }\n    if ($Field[3].Length -lt  8) { $Field[3] += \"t\" }\n    if ($Field[3].Length -lt 16) { $Field[3] += \"t\" }\n    if ($Field[4].Length -lt  8) { $Field[4] += \"t\" }\n    if ($Field[5].Length -lt  0) { $Field[5] += \"t\" }\n    if ($Field[6].Length -lt  8) { $Field[6] += \"t\" }\n    if ($Field[6].Length -lt 16) { $Field[6] += \"t\" }\n    if ($Field[6].Length -lt 24) { $Field[6] += \"t\" }\nif ($Field[6].Length -lt 32) { $Field[6] += \"`t\" }\nif ($Field[7].Length -lt  0) { $Field[7] += \"`t\" }\nif ($Field.Count -gt 8) {\n    if ($Field[8].Length -lt  8) { $Field[8] += \"`t\" }\n    if ($Field[8].Length -lt 16) { $Field[8] += \"`t\" }\n\nif ($Field[8].Length -lt 24) { $Field[8] += \"`t\" }\n}\nif ($Field.Count -gt 9) {\n    if ($Field[9].Length -lt  8) { $Field[9] += \"`t\" }\n    if ($Field[9].Length -lt 16) { $Field[9] += \"`t\" }\n    if ($Field[9].Length -lt 24) { $Field[9] += \"`t\" }\n    if ($Field[9].Length -lt 32) { $Field[9] += \"`t\" }\n}\n# Start writing status line with all fields.\nif ($Field[7] -match \"Bitvise\") { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Dns\")     { Write-Host -ForegroundColor Gray    -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Key\")     { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Locked\")  { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Offline\") { Write-Host -ForegroundColor Cyan    -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Online\")  { Write-Host -ForegroundColor Green   -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Passwrd\") { Write-Host -ForegroundColor Magenta -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Plink\")   { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Refused\") { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Ssh\")     { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Timeout\") { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Unknown\") { Write-Host -ForegroundColor Gray    -NoNewLine \"$($Field[0])`t\" }\nWrite-Host -ForegroundColor Green -NoNewLine \"$($Field[1])`t\"\nif ($Field[2]    -match \"SMRU\") { Write-Host -ForegroundColor Green  -NoNewLine \"$($Field[2])`t\" }\nif ($Field[2] -notmatch \"SMRU\") { Write-Host -ForegroundColor Yellow -NoNewLine \"$($Field[2])`t\" }\nWrite-Host -ForegroundColor Green -NoNewLine \"$($Field[3])`t\"\nWrite-Host -ForegroundColor Green -NoNewLine \"$($Field[4])`t\"\nif ($Field[5]    -match \"32-bit\") { Write-Host -ForegroundColor Yellow -NoNewLine \"$($Field[5])`t\" }\nif ($Field[5] -notmatch \"32-bit\") { Write-Host -ForegroundColor Green  -NoNewLine \"$($Field[5])`t\" }\nWrite-Host -ForegroundColor Green -NoNewLine \"$($Field[6])`t\"\nif ($Field[7] -match \"Bitvise\") { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Dns\")     { Write-Host -ForegroundColor Gray    -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Key\")     { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Locked\")  { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Offline\") { Write-Host -ForegroundColor Cyan    -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Online\")  { Write-Host -ForegroundColor Green   -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Passwrd\") { Write-Host -ForegroundColor Magenta -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Plink\")   { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Refused\") { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Ssh\")     { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Timeout\") { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Unknown\") { Write-Host -ForegroundColor Gray    -NoNewLine \"$($Field[7])`t\" }\nif ($Field.Count -gt 8) {\n    Write-Host -ForegroundColor Green -NoNewLine \"$($Field[8])`t\"\n}\nif ($Field.Count -gt 9) {\n    Write-Host -ForegroundColor Green -NoNewLine \"$($Field[9])\"\n}\nWrite-Host\n\n}\nFunction: Get inventory information.\nParameters:   The 1st parameter contains the inventory file.\nReturns:  The Chassis, Domain, Location, User, OSArch, OSName and OSVersion variables.\nfunction Get-Inventory {\n    param([Parameter(Mandatory = $True)] $File)\n    $Chassis = \"???\"\n    $Domain = \"???\"\n    $Location = \"???\"\n    $User = \"???\"\n    $OSArch = \"???\"\n    $OSName = \"???\"\n    $OSVersion = \"???\"\n    if (Test-Path -Path $File) {\n        $Lines = Get-Content \"$File\"\n        foreach ($Line in $Lines) {\n            $Field = $Line -split \"\\t+\"\n            if ($Field) {\n                if ($Field[0] -match \"Chassis Type:\")    { $Chassis   = $Field[1] }\n                if ($Field[0] -match \"Domain:\")          { $Domain    = $Field[1] }\n                if ($Field[0] -match \"Location:\")        { $Location  = $Field[1] }\n                if ($Field[0] -match \"User:\")            { $User      = $Field[1] }\n                if ($Field[0] -match \"OS Architecture:\") { $OSArch    = $Field[1] }\n                if ($Field[0] -match \"OS Name:\")         { $OSName    = $Field[1] }\n                if ($Field[0] -match \"OS Version:\")      { $OSVersion = $Field[1] }\n            }\n        }\n    } else {\n        Write-Host -ForegroundColor Magenta \"File $File does not exist.\"\n    }\n    if ($OSVersion -ne \"\") { $OSName += \" $OSVersion\" }\n    # Make sure not to have empty values.\n    if ($Chassis   -eq \"\") { $Chassis = \" \" }\n    if ($Domain    -eq \"\") { $Domain = \" \" }\n    if ($Location  -eq \"\") { $Location = \" \" }\n    if ($User      -eq \"\") { $User = \" \" }\n    if ($OSArch    -eq \"\") { $OSArch = \" \" }\n    if ($OSName    -eq \"\") { $OSName = \" \" }\n    if ($OSVersion -eq \"\") { $OSVersion = \" \" }\n    # Todo: Remove next 2 lines in next version.\n    if ($Domain -eq \"smru.shoklo-unit.com\") { $Domain = \"SMRU\" }\n    if ($Domain -eq \"SMRU (smru.shoklo-unit.com)\") { $Domain = \"SMRU\" }\n    if ($Domain.Length -lt 8) { $Domain += \"t\" }\n    if ($Location.Length -lt 8) { $Location += \"t\" }\n    if ($Location.Length -lt 16) { $Location += \"t\" }\n    if ($User.Length -lt 8) { $User += \"t\" }\n    $OSName = $OSName -replace \" release\", \"\"\n    if ($OsName.Length -lt 8) { $OSName += \"t\" }\n    if ($OSName.Length -lt 16) { $OSName += \"t\" }\n    if ($OSName.Length -lt 24) { $OSName += \"t\" }\n    return @{\n        Chassis = $Chassis\n        Domain = $Domain\n        Location = $Location\n        User = $User\n        OSArch = $OSArch\n        OSName = $OSName\n        OSVersion = $OSVersion\n        # Create one or more consecutive tabs separated summary.\n        Summary = \"$Domaint$Locationt$Usert$OSArch`t$OSName\"\n    }\n}\nSee https://learn-powershell.net/2012/05/10/speedy-network-information-query-using-powershell\nSee https://learn-powershell.net/2012/05/13/using-background-runspaces-instead-of-psjobs-for-better-performance\nfunction Get-RunspaceData {\n    $OpenSSH = $True\n    $OpenSSH = $False\n    foreach($Runspace in $Runspaces) {\n        # Check if completed or timed out.\n        if ($Runspace.Runspace.IsCompleted) {\n            $Result = $Runspace.Powershell.EndInvoke($Runspace.Runspace)\n            Add-Colors $Result\n        } elseif ($Runspace.Runspace -ne $Null) {\n            $Computer = $Runspace.Computer\n            $Folder = $Runspace.Folder\n            $Info = Get-Inventory \"O:\\Inventory\\$Folder\\$Computer.log\"\n            $Summary = $Info.Summary\n            if ($OpenSSH) {\n                $Result = \"$Computerttt$SummarytSsh\"\n            } else  {\n                $Result = \"$Computerttt$SummarytPlink\"\n            }\n            Add-Colors $Result\n        }\n        $Runspace.Powershell.Dispose()\n        $Runspace.Runspace = $Null\n        $Runspace.Powershell = $Null\n    }\n    # Clean out unused runspace jobs.\n    $temphash = $Runspaces.Clone()\n    $temphash | Where-Object { $.Runspace -eq $Null } | ForEach-Object { $Runspaces.Remove($) }\n}\n$ScriptBlock = {\n    param($Computer, $Folder, $Info)\n$OpenSSH = $True\n$OpenSSH = $False\n\n# Function: Send command to remote computer using plink.exe.\n# Parameters:   The 1st parameter contains the command.\n# Remarks:  Cannot use \"<dos command> *> $Null\" in PowerShell 2.0. Instead\n#       use \"cmd /c \"<dos command> > nul 2>&1\"\". Any double quotes in\n#       the <dos command> need to be escaped with the backtick character.\n# Remarks:  Possible replies:\n#       The server's host key does not match the one PuTTY has cached.\n#       The server's host key is not cached in the registry.\n# Remarks:  It is possible that plink.exe does not return due to some issue\n#       on the remote computer.\n#       See https://powershell.org/forums/topic/timeout-for-runspace\n# Returns:  ???\nfunction Send-PlinkCommand {\n    param([Parameter(Mandatory = $True)] $Computer,\n        [Parameter(Mandatory = $True)] $Command)\n    $Command = \"plink.exe -batch -i `\"$Env:UserProfile\\id_rsa-auto.ppk`\" `\"Administrator@$Computer`\" `\"$Command`\" 2>&1\"\n    $Reply = Invoke-Expression $Command\n    if ($Reply -match \"The server's host key \") {\n        # Update server's host key in PuTTY's cache if it does not match\n        # or add server's host key to PuTTY's cache if it is not cached.\n        # Putty's cache is HKCU:\\Software\\SimonTatham\\PuTTY\\SshHostKeys.\n        # Use \"(echo y)\" to output a yes followed by Enter.\n        $Cmd = \"cmd /c `\"(echo y) | $Command`\"\"\n        $Cmd = $Cmd -replace \" -batch\", \"\"\n        $Null = Invoke-Expression $Cmd\n        # Try again.\n        $Reply = Invoke-Expression $Command\n    }\n    $Status = \"Online\"\n    if ($Reply -match \"FATAL ERROR: \") { $Status = \"Bitvise\" }\n    if ($Reply -match \"FATAL ERROR: Network error: Connection refused\")   { $Status = \"Refused\" }\n    if ($Reply -match \"FATAL ERROR: Network error: Connection timed out\") { $Status = \"Timeout\" }\n    if ($Reply -match \"FATAL ERROR: Server unexpectedly closed network connection\") { $Status = \"Locked\" }\n    if ($Reply -match \"Server refused our key\")  { $Status = \"Passwrd\" }\n    if ($Reply -match \"Unable to load key file\") { $Status = \"Key\" }\n    if ($Reply -match \"Unable to use key file\")  { $Status = \"Key\" }\n    return @{\n        Reply = $Reply\n        Status = $Status\n    }\n}\n\n# Function: Send command to remote computer using ssh.exe.\n# Parameters:   The 1st parameter contains the command.\n# Remarks:  Cannot use \"<dos command> *> $Null\" in PowerShell 2.0. Instead\n#       use \"cmd /c \"<dos command> > nul 2>&1\"\". Any double quotes in\n#       the <dos command> need to be escaped with the backtick character.\n# Remarks:  Possible replies:\n#       The server's host key does not match the one in known hosts.\n#       The server's host key is not listed in known hosts.\n# Remarks:  It is possible that ssh.exe does not return due to some issue\n#       on the remote computer.\n#       See https://powershell.org/forums/topic/timeout-for-runspace\n# Returns:  ???\nfunction Send-SshCommand {\n    param([Parameter(Mandatory = $True)] $Computer,\n        [Parameter(Mandatory = $True)] $Command)\n    $Command = \"ssh.exe -i `\"$Env:UserProfile\\id_rsa-auto`\" -o `\"BatchMode=yes`\" `\"Administrator@$Computer`\" `\"$Command`\" 2>&1\"\n    $Reply = Invoke-Expression $Command\n\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions for 'C:\\Users\\Administrator\\id_rsa-auto' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nLoad key \"C:\\Users\\Administrator\\id_rsa-auto\": bad permissions\nAdministrator@smrunb-ad10: Permission denied (publickey,password).\n    if ($Reply -match \"bad permissions\") {\n        msg.exe * \"Permissions for 'C:\\\\Users\\\\Administrator\\\\id_rsa-auto' are too open.\"\n    }\n    if ($Reply -match \"Host key verification failed\") {\n        # Update server's host key in list of known hosts if it does not match\n        # or add server's host key to list of known hosts if it is not present.\n        # List of OpenSSH known hosts is at C:\\Users\\<User>\\.ssh\\known_hosts.\n        $Cmd = $Command -replace \" -o `\"BatchMode=yes`\"\", \" -o `\"BatchMode=yes`\" -o `\"StrictHostKeyChecking=no`\"\"\n        $Null = Invoke-Expression $Cmd\n        # Try again.\n        $Reply = Invoke-Expression $Command\n    }\n    $Status = \"Online\"\n\nif ($Reply -match \"FATAL ERROR: \") { $Status = \"Bitvise\" }\nif ($Reply -match \"FATAL ERROR: Network error: Connection refused\")   { $Status = \"Refused\" }\n    if ($Reply -match \"Connection timed out\") { $Status = \"Timeout\" }\n    if ($Reply -match \"Connection closed by remote host\") { $Status = \"Locked\" }\n    if ($Reply -match \"Load key\") { $Status = \"Key\" }\n    if ($Reply -match \"No matching host key type found\") { $Status = \"Key\" }\n    if ($Reply -match \"password\") { $Status = \"Passwrd\" }\n    return @{\n        Reply = $Reply\n        Status = $Status\n    }\n}\n\n# Function: Get online status (Bitvise/Dns/Key/Locked/Offline/Online/\n#       Passwrd/Plink/Refused/Ssh/Timeout/Unknown).\n# Parameters:   The 1st parameter contains the computer name.\n#       The 2nd parameter contains the inventory subfolder name.\n#       The 3rd parameter contains the inventory information.\n# Remarks:  When pinging a computer name it is possible that the DNS server\n#       returns an outdated IP address. To ensure that the IP address\n#       is correct, execute a remote command to tell its computer name\n#       or check that the MAC address in the arp table matches the one\n#       in the inventory.\n# Remarks:  Information about the various statuses returned:\n#       Bitvise Bitvise SSH Server fatal error.\n#       Locked  Remote computer is locked out due to too many logon attempts.\n#       Offline Ping of remote computer failed.\n#       Dns Out of date DNS record.\n#       Key Private key file issue.\n#       Online  Public key authentication works.\n#       Passwrd Public key authentication failed.\n#       Plink   plink.exe command timed out.\n#       Refused Connection refused.\n#       Ssh ssh.exe command timed out.\n#       Timeout Bitvise SSH Server is not installed or not started.\n#       Unknown The computer name is not known by the DNS server.\n# Returns:  The Status variable.\nfunction Get-Status {\n    param([Parameter(Mandatory = $True)] $Computer,\n        [Parameter(Mandatory = $True)] $Folder,\n        [Parameter(Mandatory = $True)] $Info)\n    $Addr = \" `t\"\n    $Count = 2\n    $Summary = $Info.Summary\n    $Ping = ping.exe -4 -n $Count -w 2500 $Computer\n    if ($Ping -is [array]) {\n        $Addr = $Ping[1] -replace '^.*?(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}).*?$', '$1'\n        $Unfixed = $Addr\n        if ($Computer -eq $Env:ComputerName) {\n            # Fix possible incorrect IP address due to VirtualBox.\n            $Addr = nslookup.exe $Env:ComputerName | Where-Object { $_ -match \"^Address:\" } |\n                Select-Object -Last 1\n            $Addr = $Addr -replace \"^Address:\\s+\", \"\"\n        }\n    }\n    if ($Ping -match \"Ping request could not find host\")     { return \"$Computer`t$Addr`t$Summary`tUnknown\" }\n    if ($Ping -match \"Destination host unreachable\")         { return \"$Computer`t$Addr`t$Summary`tOffline\" }\n    if (($Ping -match \"Request timed out\").Count -eq $Count) { return \"$Computer`t$Addr`t$Summary`tOffline\" }\n    if (($Ping -match \"Reply from $Unfixed\").Count -eq 0)    { return \"$Computer`t$Addr`t$Summary`tOffline\" }\n\n    # Do not send commands to linux computers and windows servers.\n    if ($Folder -eq \"_Servers\") {\n        if ($Info.Chassis -match \"Virtual\") { return \"$Computer`t$Addr`t$Summary`tOnline`t-\" }\n    }\n    if ($Info.OSName -match \"Debian\") { return \"$Computer`t$Addr`t$Summary`tOnline`t-\" }\n    if ($Info.OSName -match \"Endian\") { return \"$Computer`t$Addr`t$Summary`tOnline`t-\" }\n    if ($Info.OSName -match \"Server\") { return \"$Computer`t$Addr`t$Summary`tOnline`t-\" }\n\n    $Users = \" \"\n\n    # Get computer name from remote computer.\n    $Command = \"set ComputerName\"\n    if ($OpenSSH) {\n        $Answer = Send-SshCommand $Computer $Command\n    } else {\n        $Answer = Send-PlinkCommand $Computer $Command\n    }\n    if ($Answer.Status -ne \"Online\") { return \"$Computer`t$Addr`t$Summary`t$($Answer.Status)`t$Users`t$($Answer.Reply)\" }\n    if ($Answer.Reply) {\n        $RemoteName = $Answer.Reply.Split('=')[1]\n        # Check if out of date DNS entry.\n        if ($Computer -ne $RemoteName) { return \"$Computer`t `t`t$Summary`tDns`t$Users`t$($Answer.Reply)\" }\n    }\n\n    # Get logged on user names on remote computer.\n    $Command = \"query.exe user\"\n    if ($OpenSSH) {\n        $Answer = Send-SshCommand $Computer $Command\n    } else {\n        $Answer = Send-PlinkCommand $Computer $Command\n    }\n    if ($Answer.Status -ne \"Online\") { return \"$Computer`t$Addr`t$Summary`t$($Answer.Status)`t$Users`t$($Answer.Reply)\" }\n    # Maximum length of user name is 20 characters.\n    $Users = ((($Answer.Reply | Select-Object -Skip 1) -replace '^.(.{1,20}).*$', '$1').Trim() | Sort-Object) -join \", \"\n\n    # Get Windows version on remote computer.\n    $Version = \"\"\n    $Command = \"ver\"\n    if ($OpenSSH) {\n        $Answer = Send-SshCommand $Computer $Command\n    } else {\n        $Answer = Send-PlinkCommand $Computer $Command\n    }\n    if ($Answer.Status -ne \"Online\") { return \"$Computer`t$Addr`t$Summary`t$($Answer.Status)`t$Users`t$($Answer.Reply)\" }\n    if ($Answer.Reply -match \"10240\") { $Version = \"1507\" }\n    if ($Answer.Reply -match \"10586\") { $Version = \"1511\" }\n    if ($Answer.Reply -match \"14393\") { $Version = \"1607\" }\n    if ($Answer.Reply -match \"15063\") { $Version = \"1703\" }\n    if ($Answer.Reply -match \"16299\") { $Version = \"1709\" }\n    if ($Answer.Reply -match \"17134\") { $Version = \"1803\" }\n    if ($Answer.Reply -match \"17763\") { $Version = \"1809\" }\n    # Find Windows 10 computers where inventory and current version do not match.\n    if ($Summary -notmatch $Version) {\n        $Summary = $Summary -replace \"^(.*)($($Info.OSVersion))(.*)$\", \"`$1`$2/$Version`$3\"\n    }\n\n    return \"$Computer`t$Addr`t$Summary`tOnline`t$Users`t$($Answer.Reply)\"\n}\n\nGet-Status $Computer $Folder $Info\n\n}\nFunction: Show online status of SMRU computers.\nParameters:   The 1st optional parameter contains the site name.\nReturns:  None.\nfunction Show-Status {\n    param([Parameter(Mandatory = $False)] $Site = \"MST\")\n    $OpenSSH = $True\n    $OpenSSH = $False\n    if ($OpenSSH) {\n        # Clear list of OpenSSH known hosts.\n        $Null = Remove-Item -ErrorAction SilentlyContinue -Force -Path \"$Env:UserProfile.ssh\\known_hosts\"\n    }\n    $Throttle = 15\n    $Path = \"O:\\Inventory\"\n    $File = \"$Path\\Computers3.txt\"\nif (Test-Path -Path $File) {\n    $Header =\n        \"Computer\"      + \"`t\" +\n        \"IP Address\"    + \"`t\" +\n        \"Domain\"        + \"`t`t\" +\n        \"Location\"      + \"`t`t\" +\n        \"User\"      + \"`t`t\" +\n        \"OS Arch\"       + \"`t\" +\n        \"OS Name\"       + \"`t`t`t`t\" +\n        \"Status\"        + \"`t\" +\n        \"Logged on users\"   + \"`t`t\" +\n        \"Reply\"     + \"`t`t`t`t\"\n    $Separator =\n        \"-\" * 15 + \"`t\" +\n        \"-\" * 15 + \"`t\" +\n        \"-\" * 15 + \"`t\" +\n        \"-\" * 23 + \"`t\" +\n        \"-\" * 15 + \"`t\" +\n        \"-\" *  7 + \"`t\" +\n        \"-\" * 31 + \"`t\" +\n        \"-\" *  7 + \"`t\" +\n        \"-\" * 23 + \"`t\" +\n        \"-\" * 31\n\n    Write-Host -Foregroundcolor Green $Header\n    Write-Host -Foregroundcolor Green $Separator\n\n    # Create runspace pool and session states.\n    $SessionState = [system.management.automation.runspaces.initialsessionState]::CreateDefault()\n    $RunspacePool = [runspacefactory]::CreateRunspacePool(1, $Throttle, $SessionState, $Host)\n    $RunspacePool.Open()\n\n    # Create empty collection to hold runspace jobs.\n    $Script:Runspaces = New-Object System.Collections.ArrayList\n\n    # Total number of run spaces.\n    $Total = 0\n\n    # One or more consecutive tabs separated file.\n    # Field 0:  Hostname\n    # Field 1:  Folder\n    # Field 2:  Site\n    # Field 3:  Address\n    # Field 4:  Location\n    # Field 5:  Remark\n    $Lines = Get-Content \"$File\"\n    foreach ($Line in $Lines) {\n        $Field = $Line -split \"\\t+\"\n        # Do not show servers at MST.\n        if (($Field) -and\n            ($Field[0] -match \"SMRU\") -and\n            ($Field[2] -eq $Site) -and\n            (($Field[2] -ne \"MST\") -and ($Field[1] -eq \"_Servers\") -or ($Field[1] -notmatch \"_\")) -and\n            (($Field[2] -ne \"MST\") -or ($Field[3] -eq \" \")))\n        {\n            $Total++\n            $Info = Get-Inventory \"$Path\\$($Field[1])\\$($Field[0]).log\"\n            # Create powershell instance and supply scriptblock with other parameters.\n            $PowerShell = [powershell]::Create().AddScript($ScriptBlock).AddArgument($Field[0]).AddArgument($Field[1]).AddArgument($Info)\n\n            # Add runspace into powershell instance.\n            $PowerShell.RunspacePool = $RunspacePool\n\n            # Create temporary collection for each runspace.\n            $Temp = \"\" | Select-Object Computer, Folder, PowerShell, Runspace\n            $Temp.Computer = $Field[0]\n            $Temp.Folder = $Field[1]\n            $Temp.PowerShell = $PowerShell\n\n            # Save handle output when calling BeginInvoke() that will be used later to end runspace.\n            $Temp.Runspace = $PowerShell.BeginInvoke()\n            $Null = $Runspaces.Add($Temp)\n        }\n    }\n\n    if ($Runspaces) {\n        # Reset progress indicator.\n        $BlankLine = \" \" * ([Console]::BufferWidth - 1)\n\n        # Wait for all runspaces to have completed.\n        $Loops = 0\n        while (($Runspaces.Runspace.IsCompleted -contains $False) -and ($Loops -lt 35)) {\n            $Loops++\n            # Use @() to make sure it always returns an array that has the Count property.\n            # See answer to question 2 at https://www.red-gate.com/simple-talk/sysadmin/powershell/a-plethora-of-powershell-pitfalls\n            $Tasks = @($Runspaces | Where-Object { $_.Runspace.IsCompleted -eq $False })\n            $Completed = $Total - $Tasks.Count\n            # See https://stackoverflow.com/questions/4998173/how-do-i-write-to-standard-error-in-powershell\n            # Show progress line using standard error output.\n            if ($Tasks.Count -lt 9) {\n                # Get list of computers that have not yet finished.\n                $Computers = \"\"\n                foreach ($Task in $Tasks) { $Computers += \", $($Task.Computer)\" }\n                $Computers = $Computers -replace \"^, \", \"\"\n                [Console]::Error.Write(\"$BlankLine`r$Completed out of $Total tasks completed. Still waiting for: $Computers`r\")\n            } else {\n                [Console]::Error.Write(\"$BlankLine`r$Completed out of $Total tasks completed.`r\")\n            }\n            Start-Sleep -Seconds 1\n        }\n\n        # Clear progress line.\n        [Console]::Error.Write(\"$BlankLine`r\")\n\n        # Finish processing the runspace jobs.\n        Get-RunspaceData\n\n        # Close runspace pool.\n        $RunspacePool.Close()\n    }\n} else {\n    Write-Host -ForegroundColor Magenta \"File '$File' is not available, aborting...\"\n}\n\n}\nMain code that is appended to all the .ps1 powershell files. It allows\nrunning a .ps1 powershell file with an argument that is an expression\nor a function (including any arguments) defined in that .ps1 file.\nInvoke expression or function with any given arguments.\n$Command = \"\"\nif ($Args) {\n    for ($i = 0; $i -lt $Args.Count; $i++) {\n        $Command += \"$($Args[$i]) \"\n    }\n    Invoke-Expression -Command $Command\n}\n\n\nREMOTE\n\n\nSee http://www.padisetty.com/2014/05/all-about-powershell-scriptblock.html\nSee help about_Scopes\nfunction Add-Colors{\n    param([Parameter(Mandatory = $True)] $Status)\n    $Field = $Status -split \"\\t+\"\n    if ($Field[0].Length -lt  0) { $Field[1] += \"t\" }\n    if ($Field[1].Length -lt  8) { $Field[1] += \"t\" }\n    if ($Field[2].Length -lt  8) { $Field[2] += \"t\" }\n    if ($Field[3].Length -lt  8) { $Field[3] += \"t\" }\n    if ($Field[3].Length -lt 16) { $Field[3] += \"t\" }\n    if ($Field[4].Length -lt  8) { $Field[4] += \"t\" }\n    if ($Field[5].Length -lt  0) { $Field[5] += \"t\" }\n    if ($Field[6].Length -lt  8) { $Field[6] += \"t\" }\n    if ($Field[6].Length -lt 16) { $Field[6] += \"t\" }\n    if ($Field[6].Length -lt 24) { $Field[6] += \"t\" }\nif ($Field[6].Length -lt 32) { $Field[6] += \"`t\" }\nif ($Field[7].Length -lt  0) { $Field[7] += \"`t\" }\nif ($Field.Count -gt 8) {\n    if ($Field[8].Length -lt  8) { $Field[8] += \"`t\" }\n    if ($Field[8].Length -lt 16) { $Field[8] += \"`t\" }\n\nif ($Field[8].Length -lt 24) { $Field[8] += \"`t\" }\n}\nif ($Field.Count -gt 9) {\n    if ($Field[9].Length -lt  8) { $Field[9] += \"`t\" }\n    if ($Field[9].Length -lt 16) { $Field[9] += \"`t\" }\n    if ($Field[9].Length -lt 24) { $Field[9] += \"`t\" }\n    if ($Field[9].Length -lt 32) { $Field[9] += \"`t\" }\n}\n# Start writing status line with all fields.\nif ($Field[7] -match \"Bitvise\") { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Dns\")     { Write-Host -ForegroundColor Gray    -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Key\")     { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Locked\")  { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Offline\") { Write-Host -ForegroundColor Cyan    -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Online\")  { Write-Host -ForegroundColor Green   -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Passwrd\") { Write-Host -ForegroundColor Magenta -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Plink\")   { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Refused\") { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Ssh\")     { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Timeout\") { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[0])`t\" }\nif ($Field[7] -match \"Unknown\") { Write-Host -ForegroundColor Gray    -NoNewLine \"$($Field[0])`t\" }\nWrite-Host -ForegroundColor Green -NoNewLine \"$($Field[1])`t\"\nif ($Field[2]    -match \"SMRU\") { Write-Host -ForegroundColor Green  -NoNewLine \"$($Field[2])`t\" }\nif ($Field[2] -notmatch \"SMRU\") { Write-Host -ForegroundColor Yellow -NoNewLine \"$($Field[2])`t\" }\nWrite-Host -ForegroundColor Green -NoNewLine \"$($Field[3])`t\"\nWrite-Host -ForegroundColor Green -NoNewLine \"$($Field[4])`t\"\nif ($Field[5]    -match \"32-bit\") { Write-Host -ForegroundColor Yellow -NoNewLine \"$($Field[5])`t\" }\nif ($Field[5] -notmatch \"32-bit\") { Write-Host -ForegroundColor Green  -NoNewLine \"$($Field[5])`t\" }\nWrite-Host -ForegroundColor Green -NoNewLine \"$($Field[6])`t\"\nif ($Field[7] -match \"Bitvise\") { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Dns\")     { Write-Host -ForegroundColor Gray    -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Key\")     { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Locked\")  { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Offline\") { Write-Host -ForegroundColor Cyan    -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Online\")  { Write-Host -ForegroundColor Green   -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Passwrd\") { Write-Host -ForegroundColor Magenta -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Plink\")   { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Refused\") { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Ssh\")     { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Timeout\") { Write-Host -ForegroundColor Red     -NoNewLine \"$($Field[7])`t\" }\nif ($Field[7] -match \"Unknown\") { Write-Host -ForegroundColor Gray    -NoNewLine \"$($Field[7])`t\" }\nif ($Field.Count -gt 8) {\n    Write-Host -ForegroundColor Green -NoNewLine \"$($Field[8])`t\"\n}\nif ($Field.Count -gt 9) {\n    Write-Host -ForegroundColor Green -NoNewLine \"$($Field[9])\"\n}\nWrite-Host\n\n}\nFunction: Get inventory information.\nParameters:   The 1st parameter contains the inventory file.\nReturns:  The Chassis, Domain, Location, User, OSArch, OSName and OSVersion variables.\nfunction Get-Inventory {\n    param([Parameter(Mandatory = $True)] $File)\n    $Chassis = \"???\"\n    $Domain = \"???\"\n    $Location = \"???\"\n    $User = \"???\"\n    $OSArch = \"???\"\n    $OSName = \"???\"\n    $OSVersion = \"???\"\n    if (Test-Path -Path $File) {\n        $Lines = Get-Content \"$File\"\n        foreach ($Line in $Lines) {\n            $Field = $Line -split \"\\t+\"\n            if ($Field) {\n                if ($Field[0] -match \"Chassis Type:\")    { $Chassis   = $Field[1] }\n                if ($Field[0] -match \"Domain:\")          { $Domain    = $Field[1] }\n                if ($Field[0] -match \"Location:\")        { $Location  = $Field[1] }\n                if ($Field[0] -match \"User:\")            { $User      = $Field[1] }\n                if ($Field[0] -match \"OS Architecture:\") { $OSArch    = $Field[1] }\n                if ($Field[0] -match \"OS Name:\")         { $OSName    = $Field[1] }\n                if ($Field[0] -match \"OS Version:\")      { $OSVersion = $Field[1] }\n            }\n        }\n    } else {\n        Write-Host -ForegroundColor Magenta \"File $File does not exist.\"\n    }\n    if ($OSVersion -ne \"\") { $OSName += \" $OSVersion\" }\n    # Make sure not to have empty values.\n    if ($Chassis   -eq \"\") { $Chassis = \" \" }\n    if ($Domain    -eq \"\") { $Domain = \" \" }\n    if ($Location  -eq \"\") { $Location = \" \" }\n    if ($User      -eq \"\") { $User = \" \" }\n    if ($OSArch    -eq \"\") { $OSArch = \" \" }\n    if ($OSName    -eq \"\") { $OSName = \" \" }\n    if ($OSVersion -eq \"\") { $OSVersion = \" \" }\n    # Todo: Remove next 2 lines in next version.\n    if ($Domain -eq \"smru.shoklo-unit.com\") { $Domain = \"SMRU\" }\n    if ($Domain -eq \"SMRU (smru.shoklo-unit.com)\") { $Domain = \"SMRU\" }\n    if ($Domain.Length -lt 8) { $Domain += \"t\" }\n    if ($Location.Length -lt 8) { $Location += \"t\" }\n    if ($Location.Length -lt 16) { $Location += \"t\" }\n    if ($User.Length -lt 8) { $User += \"t\" }\n    $OSName = $OSName -replace \" release\", \"\"\n    if ($OsName.Length -lt 8) { $OSName += \"t\" }\n    if ($OSName.Length -lt 16) { $OSName += \"t\" }\n    if ($OSName.Length -lt 24) { $OSName += \"t\" }\n    return @{\n        Chassis = $Chassis\n        Domain = $Domain\n        Location = $Location\n        User = $User\n        OSArch = $OSArch\n        OSName = $OSName\n        OSVersion = $OSVersion\n        # Create one or more consecutive tabs separated summary.\n        Summary = \"$Domaint$Locationt$Usert$OSArch`t$OSName\"\n    }\n}\nSee https://learn-powershell.net/2012/05/10/speedy-network-information-query-using-powershell\nSee https://learn-powershell.net/2012/05/13/using-background-runspaces-instead-of-psjobs-for-better-performance\nfunction Get-RunspaceData {\n    $OpenSSH = $False\n    $OpenSSH = $True\n    foreach($Runspace in $Runspaces) {\n        # Check if completed or timed out.\n        if ($Runspace.Runspace.IsCompleted) {\n            $Result = $Runspace.Powershell.EndInvoke($Runspace.Runspace)\n            Add-Colors $Result\n        } elseif ($Runspace.Runspace -ne $Null) {\n            $Computer = $Runspace.Computer\n            $Folder = $Runspace.Folder\n            $Info = Get-Inventory \"O:\\Inventory\\$Folder\\$Computer.log\"\n            $Summary = $Info.Summary\n            if ($OpenSSH) {\n                $Result = \"$Computerttt$SummarytSsh\"\n            } else  {\n                $Result = \"$Computerttt$SummarytPlink\"\n            }\n            Add-Colors $Result\n        }\n        $Runspace.Powershell.Dispose()\n        $Runspace.Runspace = $Null\n        $Runspace.Powershell = $Null\n    }\n    # Clean out unused runspace jobs.\n    $temphash = $Runspaces.Clone()\n    $temphash | Where-Object { $.Runspace -eq $Null } | ForEach-Object { $Runspaces.Remove($) }\n}\n$ScriptBlock = {\n    param($Computer, $Folder, $Info)\n$OpenSSH = $False\n$OpenSSH = $True\n\n# Function: Send command to remote computer using plink.exe.\n# Parameters:   The 1st parameter contains the command.\n# Remarks:  Cannot use \"<dos command> *> $Null\" in PowerShell 2.0. Instead\n#       use \"cmd /c \"<dos command> > nul 2>&1\"\". Any double quotes in\n#       the <dos command> need to be escaped with the backtick character.\n# Remarks:  Possible replies:\n#       The server's host key does not match the one PuTTY has cached.\n#       The server's host key is not cached in the registry.\n# Remarks:  It is possible that plink.exe does not return due to some issue\n#       on the remote computer.\n#       See https://powershell.org/forums/topic/timeout-for-runspace\n# Returns:  ???\nfunction Send-PlinkCommand {\n    param([Parameter(Mandatory = $True)] $Computer,\n        [Parameter(Mandatory = $True)] $Command)\n    $Command = \"plink.exe -batch -i `\"$Env:UserProfile\\id_rsa-auto.ppk`\" `\"Administrator@$Computer`\" `\"$Command`\" 2>&1\"\n    $Reply = Invoke-Expression $Command\n    if ($Reply -match \"The server's host key \") {\n        # Update server's host key in PuTTY's cache if it does not match\n        # or add server's host key to PuTTY's cache if it is not cached.\n        # Putty's cache is HKCU:\\Software\\SimonTatham\\PuTTY\\SshHostKeys.\n        # Use \"(echo y)\" to output a yes followed by Enter.\n        $Cmd = \"cmd /c `\"(echo y) | $Command`\"\"\n        $Cmd = $Cmd -replace \" -batch\", \"\"\n        $Null = Invoke-Expression $Cmd\n        # Try again.\n        $Reply = Invoke-Expression $Command\n    }\n    $Status = \"Online\"\n    if ($Reply -match \"FATAL ERROR: \") { $Status = \"Bitvise\" }\n    if ($Reply -match \"FATAL ERROR: Network error: Connection refused\")   { $Status = \"Refused\" }\n    if ($Reply -match \"FATAL ERROR: Network error: Connection timed out\") { $Status = \"Timeout\" }\n    if ($Reply -match \"FATAL ERROR: Server unexpectedly closed network connection\") { $Status = \"Locked\" }\n    if ($Reply -match \"Server refused our key\")  { $Status = \"Passwrd\" }\n    if ($Reply -match \"Unable to load key file\") { $Status = \"Key\" }\n    if ($Reply -match \"Unable to use key file\")  { $Status = \"Key\" }\n    return @{\n        Reply = $Reply\n        Status = $Status\n    }\n}\n\n# Function: Send command to remote computer using ssh.exe.\n# Parameters:   The 1st parameter contains the command.\n# Remarks:  Cannot use \"<dos command> *> $Null\" in PowerShell 2.0. Instead\n#       use \"cmd /c \"<dos command> > nul 2>&1\"\". Any double quotes in\n#       the <dos command> need to be escaped with the backtick character.\n# Remarks:  Possible replies:\n#       The server's host key does not match the one in known hosts.\n#       The server's host key is not listed in known hosts.\n# Remarks:  It is possible that ssh.exe does not return due to some issue\n#       on the remote computer.\n#       See https://powershell.org/forums/topic/timeout-for-runspace\n# Returns:  ???\nfunction Send-SshCommand {\n    param([Parameter(Mandatory = $True)] $Computer,\n        [Parameter(Mandatory = $True)] $Command)\n    $Command = \"ssh.exe -i `\"$Env:UserProfile\\id_rsa-auto`\" -o `\"BatchMode=yes`\" `\"Administrator@$Computer`\" `\"$Command`\" 2>&1\"\n    $Reply = Invoke-Expression $Command\n\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions for 'C:\\Users\\Administrator\\id_rsa-auto' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nLoad key \"C:\\Users\\Administrator\\id_rsa-auto\": bad permissions\nAdministrator@smrunb-ad10: Permission denied (publickey,password).\n    if ($Reply -match \"bad permissions\") {\n        msg.exe * \"Permissions for 'C:\\\\Users\\\\Administrator\\\\id_rsa-auto' are too open.\"\n    }\n    if ($Reply -match \"Host key verification failed\") {\n        # Update server's host key in list of known hosts if it does not match\n        # or add server's host key to list of known hosts if it is not present.\n        # List of OpenSSH known hosts is at C:\\Users\\<User>\\.ssh\\known_hosts.\n        $Cmd = $Command -replace \" -o `\"BatchMode=yes`\"\", \" -o `\"BatchMode=yes`\" -o `\"StrictHostKeyChecking=no`\"\"\n        $Null = Invoke-Expression $Cmd\n        # Try again.\n        $Reply = Invoke-Expression $Command\n    }\n    $Status = \"Online\"\n\nif ($Reply -match \"FATAL ERROR: \") { $Status = \"Bitvise\" }\nif ($Reply -match \"FATAL ERROR: Network error: Connection refused\")   { $Status = \"Refused\" }\n    if ($Reply -match \"Connection timed out\") { $Status = \"Timeout\" }\n    if ($Reply -match \"Connection closed by remote host\") { $Status = \"Locked\" }\n    if ($Reply -match \"Load key\") { $Status = \"Key\" }\n    if ($Reply -match \"No matching host key type found\") { $Status = \"Key\" }\n    if ($Reply -match \"password\") { $Status = \"Passwrd\" }\n    return @{\n        Reply = $Reply\n        Status = $Status\n    }\n}\n\n# Function: Get online status (Bitvise/Dns/Key/Locked/Offline/Online/\n#       Passwrd/Plink/Refused/Ssh/Timeout/Unknown).\n# Parameters:   The 1st parameter contains the computer name.\n#       The 2nd parameter contains the inventory subfolder name.\n#       The 3rd parameter contains the inventory information.\n# Remarks:  When pinging a computer name it is possible that the DNS server\n#       returns an outdated IP address. To ensure that the IP address\n#       is correct, execute a remote command to tell its computer name\n#       or check that the MAC address in the arp table matches the one\n#       in the inventory.\n# Remarks:  Information about the various statuses returned:\n#       Bitvise Bitvise SSH Server fatal error.\n#       Locked  Remote computer is locked out due to too many logon attempts.\n#       Offline Ping of remote computer failed.\n#       Dns Out of date DNS record.\n#       Key Private key file issue.\n#       Online  Public key authentication works.\n#       Passwrd Public key authentication failed.\n#       Plink   plink.exe command timed out.\n#       Refused Connection refused.\n#       Ssh ssh.exe command timed out.\n#       Timeout Bitvise SSH Server is not installed or not started.\n#       Unknown The computer name is not known by the DNS server.\n# Returns:  The Status variable.\nfunction Get-Status {\n    param([Parameter(Mandatory = $True)] $Computer,\n        [Parameter(Mandatory = $True)] $Folder,\n        [Parameter(Mandatory = $True)] $Info)\n    $Addr = \" `t\"\n    $Count = 2\n    $Summary = $Info.Summary\n    $Ping = ping.exe -4 -n $Count -w 2500 $Computer\n    if ($Ping -is [array]) {\n        $Addr = $Ping[1] -replace '^.*?(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}).*?$', '$1'\n        $Unfixed = $Addr\n        if ($Computer -eq $Env:ComputerName) {\n            # Fix possible incorrect IP address due to VirtualBox.\n            $Addr = nslookup.exe $Env:ComputerName | Where-Object { $_ -match \"^Address:\" } |\n                Select-Object -Last 1\n            $Addr = $Addr -replace \"^Address:\\s+\", \"\"\n        }\n    }\n    if ($Ping -match \"Ping request could not find host\")     { return \"$Computer`t$Addr`t$Summary`tUnknown\" }\n    if ($Ping -match \"Destination host unreachable\")         { return \"$Computer`t$Addr`t$Summary`tOffline\" }\n    if (($Ping -match \"Request timed out\").Count -eq $Count) { return \"$Computer`t$Addr`t$Summary`tOffline\" }\n    if (($Ping -match \"Reply from $Unfixed\").Count -eq 0)    { return \"$Computer`t$Addr`t$Summary`tOffline\" }\n\n    # Do not send commands to linux computers and windows servers.\n    if ($Folder -eq \"_Servers\") {\n        if ($Info.Chassis -match \"Virtual\") { return \"$Computer`t$Addr`t$Summary`tOnline`t-\" }\n    }\n    if ($Info.OSName -match \"Debian\") { return \"$Computer`t$Addr`t$Summary`tOnline`t-\" }\n    if ($Info.OSName -match \"Endian\") { return \"$Computer`t$Addr`t$Summary`tOnline`t-\" }\n    if ($Info.OSName -match \"Server\") { return \"$Computer`t$Addr`t$Summary`tOnline`t-\" }\n\n    $Users = \" \"\n\n    # Get computer name from remote computer.\n    $Command = \"set ComputerName\"\n    if ($OpenSSH) {\n        $Answer = Send-SshCommand $Computer $Command\n    } else {\n        $Answer = Send-PlinkCommand $Computer $Command\n    }\n    if ($Answer.Status -ne \"Online\") { return \"$Computer`t$Addr`t$Summary`t$($Answer.Status)`t$Users`t$($Answer.Reply)\" }\n    if ($Answer.Reply) {\n        $RemoteName = $Answer.Reply.Split('=')[1]\n        # Check if out of date DNS entry.\n        if ($Computer -ne $RemoteName) { return \"$Computer`t `t`t$Summary`tDns`t$Users`t$($Answer.Reply)\" }\n    }\n\n    # Get logged on user names on remote computer.\n    $Command = \"query.exe user\"\n    if ($OpenSSH) {\n        $Answer = Send-SshCommand $Computer $Command\n    } else {\n        $Answer = Send-PlinkCommand $Computer $Command\n    }\n    if ($Answer.Status -ne \"Online\") { return \"$Computer`t$Addr`t$Summary`t$($Answer.Status)`t$Users`t$($Answer.Reply)\" }\n    # Maximum length of user name is 20 characters.\n    $Users = ((($Answer.Reply | Select-Object -Skip 1) -replace '^.(.{1,20}).*$', '$1').Trim() | Sort-Object) -join \", \"\n\n    # Get Windows version on remote computer.\n    $Version = \"\"\n    $Command = \"ver\"\n    if ($OpenSSH) {\n        $Answer = Send-SshCommand $Computer $Command\n    } else {\n        $Answer = Send-PlinkCommand $Computer $Command\n    }\n    if ($Answer.Status -ne \"Online\") { return \"$Computer`t$Addr`t$Summary`t$($Answer.Status)`t$Users`t$($Answer.Reply)\" }\n    if ($Answer.Reply -match \"10240\") { $Version = \"1507\" }\n    if ($Answer.Reply -match \"10586\") { $Version = \"1511\" }\n    if ($Answer.Reply -match \"14393\") { $Version = \"1607\" }\n    if ($Answer.Reply -match \"15063\") { $Version = \"1703\" }\n    if ($Answer.Reply -match \"16299\") { $Version = \"1709\" }\n    if ($Answer.Reply -match \"17134\") { $Version = \"1803\" }\n    if ($Answer.Reply -match \"17763\") { $Version = \"1809\" }\n    # Find Windows 10 computers where inventory and current version do not match.\n    if ($Summary -notmatch $Version) {\n        $Summary = $Summary -replace \"^(.*)($($Info.OSVersion))(.*)$\", \"`$1`$2/$Version`$3\"\n    }\n\n    return \"$Computer`t$Addr`t$Summary`tOnline`t$Users`t$($Answer.Reply)\"\n}\n\nGet-Status $Computer $Folder $Info\n\n}\nFunction: Show online status of SMRU computers.\nParameters:   The 1st optional parameter contains the site name.\nReturns:  None.\nfunction Show-Status {\n    param([Parameter(Mandatory = $False)] $Site = \"MST\")\n    $OpenSSH = $False\n    $OpenSSH = $True\n    if ($OpenSSH) {\n        # Clear list of OpenSSH known hosts.\n        $Null = Remove-Item -ErrorAction SilentlyContinue -Force -Path \"$Env:UserProfile.ssh\\known_hosts\"\n    }\n    $Throttle = 15\n    $Path = \"O:\\Inventory\"\n    $File = \"$Path\\Computers3.txt\"\nif (Test-Path -Path $File) {\n    $Header =\n        \"Computer\"      + \"`t\" +\n        \"IP Address\"    + \"`t\" +\n        \"Domain\"        + \"`t`t\" +\n        \"Location\"      + \"`t`t\" +\n        \"User\"      + \"`t`t\" +\n        \"OS Arch\"       + \"`t\" +\n        \"OS Name\"       + \"`t`t`t`t\" +\n        \"Status\"        + \"`t\" +\n        \"Logged on users\"   + \"`t`t\" +\n        \"Reply\"     + \"`t`t`t`t\"\n    $Separator =\n        \"-\" * 15 + \"`t\" +\n        \"-\" * 15 + \"`t\" +\n        \"-\" * 15 + \"`t\" +\n        \"-\" * 23 + \"`t\" +\n        \"-\" * 15 + \"`t\" +\n        \"-\" *  7 + \"`t\" +\n        \"-\" * 31 + \"`t\" +\n        \"-\" *  7 + \"`t\" +\n        \"-\" * 23 + \"`t\" +\n        \"-\" * 31\n\n    Write-Host -Foregroundcolor Green $Header\n    Write-Host -Foregroundcolor Green $Separator\n\n    # Create runspace pool and session states.\n    $SessionState = [system.management.automation.runspaces.initialsessionState]::CreateDefault()\n    $RunspacePool = [runspacefactory]::CreateRunspacePool(1, $Throttle, $SessionState, $Host)\n    $RunspacePool.Open()\n\n    # Create empty collection to hold runspace jobs.\n    $Script:Runspaces = New-Object System.Collections.ArrayList\n\n    # Total number of run spaces.\n    $Total = 0\n\n    # One or more consecutive tabs separated file.\n    # Field 0:  Hostname\n    # Field 1:  Folder\n    # Field 2:  Site\n    # Field 3:  Address\n    # Field 4:  Location\n    # Field 5:  Remark\n    $Lines = Get-Content \"$File\"\n    foreach ($Line in $Lines) {\n        $Field = $Line -split \"\\t+\"\n        # Do not show servers at MST.\n        if (($Field) -and\n            ($Field[0] -match \"SMRU\") -and\n            ($Field[2] -eq $Site) -and\n            (($Field[2] -ne \"MST\") -and ($Field[1] -eq \"_Servers\") -or ($Field[1] -notmatch \"_\")) -and\n            (($Field[2] -ne \"MST\") -or ($Field[3] -eq \" \")))\n        {\n            $Total++\n            $Info = Get-Inventory \"$Path\\$($Field[1])\\$($Field[0]).log\"\n            # Create powershell instance and supply scriptblock with other parameters.\n            $PowerShell = [powershell]::Create().AddScript($ScriptBlock).AddArgument($Field[0]).AddArgument($Field[1]).AddArgument($Info)\n\n            # Add runspace into powershell instance.\n            $PowerShell.RunspacePool = $RunspacePool\n\n            # Create temporary collection for each runspace.\n            $Temp = \"\" | Select-Object Computer, Folder, PowerShell, Runspace\n            $Temp.Computer = $Field[0]\n            $Temp.Folder = $Field[1]\n            $Temp.PowerShell = $PowerShell\n\n            # Save handle output when calling BeginInvoke() that will be used later to end runspace.\n            $Temp.Runspace = $PowerShell.BeginInvoke()\n            $Null = $Runspaces.Add($Temp)\n        }\n    }\n\n    if ($Runspaces) {\n        # Reset progress indicator.\n        $BlankLine = \" \" * ([Console]::BufferWidth - 1)\n\n        # Wait for all runspaces to have completed.\n        $Loops = 0\n        while (($Runspaces.Runspace.IsCompleted -contains $False) -and ($Loops -lt 35)) {\n            $Loops++\n            # Use @() to make sure it always returns an array that has the Count property.\n            # See answer to question 2 at https://www.red-gate.com/simple-talk/sysadmin/powershell/a-plethora-of-powershell-pitfalls\n            $Tasks = @($Runspaces | Where-Object { $_.Runspace.IsCompleted -eq $False })\n            $Completed = $Total - $Tasks.Count\n            # See https://stackoverflow.com/questions/4998173/how-do-i-write-to-standard-error-in-powershell\n            # Show progress line using standard error output.\n            if ($Tasks.Count -lt 9) {\n                # Get list of computers that have not yet finished.\n                $Computers = \"\"\n                foreach ($Task in $Tasks) { $Computers += \", $($Task.Computer)\" }\n                $Computers = $Computers -replace \"^, \", \"\"\n                [Console]::Error.Write(\"$BlankLine`r$Completed out of $Total tasks completed. Still waiting for: $Computers`r\")\n            } else {\n                [Console]::Error.Write(\"$BlankLine`r$Completed out of $Total tasks completed.`r\")\n            }\n            Start-Sleep -Seconds 1\n        }\n\n        # Clear progress line.\n        [Console]::Error.Write(\"$BlankLine`r\")\n\n        # Finish processing the runspace jobs.\n        Get-RunspaceData\n\n        # Close runspace pool.\n        $RunspacePool.Close()\n    }\n} else {\n    Write-Host -ForegroundColor Magenta \"File '$File' is not available, aborting...\"\n}\n\n}\nMain code that is appended to all the .ps1 powershell files. It allows\nrunning a .ps1 powershell file with an argument that is an expression\nor a function (including any arguments) defined in that .ps1 file.\nInvoke expression or function with any given arguments.\n$Command = \"\"\nif ($Args) {\n    for ($i = 0; $i -lt $Args.Count; $i++) {\n        $Command += \"$($Args[$i]) \"\n    }\n    Invoke-Expression -Command $Command\n}\nSMRUWS-IT10\\Administrator C:\\Users\\Administrator# powershell -ExecutionPolicy Bypass -File \"C:\\Tmp\\Remote-Good.ps1\" Show-Status\nComputer        IP Address      Domain          Location                User            OS Arch OS Name                         Status  Logged on users         Reply\n\nSMRUWS-AD01     10.10.1.79      SMRU            ANC office              Mookhopaw       64-bit  Windows 10 Enterprise 1809      Offline\nSMRUWS-AD04     10.10.1.80      SMRU            Data office             Miasa           64-bit  Windows 7 Professional          Online  miasa                    Microsoft Windows [Version 6.1.7601]\nSMRUWS-AD05     10.10.1.75      SMRU            Finance office          Amorn           64-bit  Windows 7 Professional          Offline\nSMRUWS-AD06     10.10.1.109     SMRU            Finance office          Kee             64-bit  Windows 7 Professional          Offline\nSMRUWS-AD07     10.10.1.122     SMRU            Admin office            Sittipong       64-bit  Windows 7 Professional          Offline\nSMRUWS-AD11                     SMRU            METF office 2           Micho           64-bit  Windows 10 Enterprise 1809      Unknown\nSMRUWS-AD12     10.10.1.78      SMRU            Pharmacy room           Carela          64-bit  Windows 7 Professional          Online  carela                   Microsoft Windows [Version 6.1.7601]\nSMRUWS-AD14                     SMRU            Finance office          Jeerawan.w      64-bit  Windows 7 Professional          Unknown\nSMRUWS-AD15     10.10.1.84      SMRU            Logistics               Siam            64-bit  Windows 7 Professional          Online  siam                     Microsoft Windows [Version 6.1.7601]\nSMRUWS-AD17     10.10.1.70      SMRU            Finance office          Janjira         64-bit  Windows 7 Professional          Online  janjira                  Microsoft Windows [Version 6.1.7601]\nSMRUWS-AD18     10.10.1.147     SMRU            Staff office            Sangrawee       64-bit  Windows 7 Professional          Online                           Microsoft Windows [Version 6.1.7601]\nSMRUWS-AD19     10.10.1.136     SMRU            HR                      Suchadas        64-bit  Windows 8.1 Enterprise          Online  suchadas                 Microsoft Windows [Version 6.3.9600]\nSMRUWS-AD20     10.10.1.181     SMRU            Grant                   Phaitoon        64-bit  Windows 8.1 Enterprise          Online  phaitoon                 Microsoft Windows [Version 6.3.9600]\nSMRUWS-AD21     10.10.1.108     SMRU            Finance office          Wararat         64-bit  Windows 10 Enterprise 1809      Online  oh                       Microsoft Windows [Version 10.0.17763.107]\nSMRUWS-AD22     10.10.1.152     SMRU            Meeting room            SMRU            64-bit  Windows 10 Enterprise 1809      Online                           Microsoft Windows [Version 10.0.17763.107]\nSMRUWS-IT10\\Administrator C:\\Users\\Administrator# powershell -ExecutionPolicy Bypass -File \"C:\\Tmp\\Remote-Fail.ps1\" Show-Status\nComputer        IP Address      Domain          Location                User            OS Arch OS Name                         Status  Logged on users         Reply\n\nSMRUWS-AD01     10.10.1.79      SMRU            ANC office              Mookhopaw       64-bit  Windows 10 Enterprise 1809      Offline\nSMRUWS-AD04                     SMRU            Data office             Miasa           64-bit  Windows 7 Professional          Ssh\nSMRUWS-AD05     10.10.1.75      SMRU            Finance office          Amorn           64-bit  Windows 7 Professional          Offline\nSMRUWS-AD06     10.10.1.109     SMRU            Finance office          Kee             64-bit  Windows 7 Professional          Offline\nSMRUWS-AD07     10.10.1.122     SMRU            Admin office            Sittipong       64-bit  Windows 7 Professional          Offline\nSMRUWS-AD11                     SMRU            METF office 2           Micho           64-bit  Windows 10 Enterprise 1809      Unknown\nSMRUWS-AD12                     SMRU            Pharmacy room           Carela          64-bit  Windows 7 Professional          Ssh\nSMRUWS-AD14                     SMRU            Finance office          Jeerawan.w      64-bit  Windows 7 Professional          Unknown\nSMRUWS-AD15                     SMRU            Logistics               Siam            64-bit  Windows 7 Professional          Ssh\nSMRUWS-AD17                     SMRU            Finance office          Janjira         64-bit  Windows 7 Professional          Ssh\nSMRUWS-AD18                     SMRU            Staff office            Sangrawee       64-bit  Windows 7 Professional          Ssh\nSMRUWS-AD19                     SMRU            HR                      Suchadas        64-bit  Windows 8.1 Enterprise          Ssh\nSMRUWS-AD20                     SMRU            Grant                   Phaitoon        64-bit  Windows 8.1 Enterprise          Ssh\nSMRUWS-AD21                     SMRU            Finance office          Wararat         64-bit  Windows 10 Enterprise 1809      Ssh\nSMRUWS-AD22                     SMRU            Meeting room            SMRU            64-bit  Windows 10 Enterprise 1809      Ssh\nSMRUWS-IT10\\Administrator C:\\Users\\Administrator# powershell -ExecutionPolicy Bypass -File \"C:\\Tmp\\Remote-Fail.ps1\" Show-Status\nComputer        IP Address      Domain          Location                User            OS Arch OS Name                         Status  Logged on users         Reply\n\nSMRUWS-AD04     10.10.1.80      SMRU            Data office             Miasa           64-bit  Windows 7 Professional          Online  miasa                    Microsoft Windows [Version 6.1.7601]\nSMRUWS-IT10\\Administrator C:\\Users\\Administrator# powershell -ExecutionPolicy Bypass -File \"C:\\Tmp\\Remote-Fail.ps1\" Show-Status\nComputer        IP Address      Domain          Location                User            OS Arch OS Name                         Status  Logged on users         Reply\n\nSMRUWS-AD04                     SMRU            Data office             Miasa           64-bit  Windows 7 Professional          Dns                             Host key verification failed.\nSMRUWS-AD15                     SMRU            Logistics               Siam            64-bit  Windows 7 Professional          Dns                             Host key verification failed.\nSMRUWS-AD21                     SMRU            Finance office          Wararat         64-bit  Windows 10 Enterprise 1809      Ssh\nSMRUWS-AD22                     SMRU            Meeting room            SMRU            64-bit  Windows 10 Enterprise 1809      Dns                             Host key verification failed.\nSMRUWS-IT10\\Administrator C:\\Users\\Administrator# powershell -ExecutionPolicy Bypass -File \"C:\\Tmp\\Remote-Fail.ps1\" Show-Status\nComputer        IP Address      Domain          Location                User            OS Arch OS Name                         Status  Logged on users         Reply\n\nSMRUWS-AD04                     SMRU            Data office             Miasa           64-bit  Windows 7 Professional          Ssh\nSMRUWS-AD15                     SMRU            Logistics               Siam            64-bit  Windows 7 Professional          Ssh\nSMRUWS-AD21                     SMRU            Finance office          Wararat         64-bit  Windows 10 Enterprise 1809      Ssh\nSMRUWS-AD22                     SMRU            Meeting room            SMRU            64-bit  Windows 10 Enterprise 1809      Ssh\nSMRUWS-IT10\\Administrator C:\\Users\\Administrator# powershell -ExecutionPolicy Bypass -File \"C:\\Tmp\\Remote-Fail.ps1\" Show-Status\nComputer        IP Address      Domain          Location                User            OS Arch OS Name                         Status  Logged on users         Reply\n\nSMRUWS-AD04     10.10.1.80      SMRU            Data office             Miasa           64-bit  Windows 7 Professional          Online  miasa                    Microsoft Windows [Version 6.1.7601]\nSMRUWS-AD15     10.10.1.84      SMRU            Logistics               Siam            64-bit  Windows 7 Professional          Online  siam                     Microsoft Windows [Version 6.1.7601]\nSMRUWS-AD21     10.10.1.108     SMRU            Finance office          Wararat         64-bit  Windows 10 Enterprise 1809      Online  oh                       Microsoft Windows [Version 10.0.17763.107]\nSMRUWS-AD22     10.10.1.152     SMRU            Meeting room            SMRU            64-bit  Windows 10 Enterprise 1809      Online                           Microsoft Windows [Version 10.0.17763.107]\nSMRUWS-IT10\\Administrator C:\\Users\\Administrator# powershell -ExecutionPolicy Bypass -File \"C:\\Tmp\\Remote-Fail.ps1\" Show-Status\nComputer        IP Address      Domain          Location                User            OS Arch OS Name                         Status  Logged on users         Reply\n\nSMRUWS-AD04     10.10.1.80      SMRU            Data office             Miasa           64-bit  Windows 7 Professional          Online  miasa                    Microsoft Windows [Version 6.1.7601]\nSMRUWS-AD15     10.10.1.84      SMRU            Logistics               Siam            64-bit  Windows 7 Professional          Online  siam                     Microsoft Windows [Version 6.1.7601]\nSMRUWS-AD21     10.10.1.108     SMRU            Finance office          Wararat         64-bit  Windows 10 Enterprise 1809      Online  oh                       Microsoft Windows [Version 10.0.17763.107]\nSMRUWS-AD22     10.10.1.152     SMRU            Meeting room            SMRU            64-bit  Windows 10 Enterprise 1809      Online                           Microsoft Windows [Version 10.0.17763.107]\nSMRUWS-IT10\\Administrator C:\\Users\\Administrator# powershell -ExecutionPolicy Bypass -File \"C:\\Tmp\\Remote-Fail.ps1\" Show-Status\nComputer        IP Address      Domain          Location                User            OS Arch OS Name                         Status  Logged on users         Reply\n\nSMRUWS-AD04                     SMRU            Data office             Miasa           64-bit  Windows 7 Professional          Ssh\nSMRUWS-AD15                     SMRU            Logistics               Siam            64-bit  Windows 7 Professional          Ssh\nSMRUWS-AD21                     SMRU            Finance office          Wararat         64-bit  Windows 10 Enterprise 1809      Ssh\nSMRUWS-AD22                     SMRU            Meeting room            SMRU            64-bit  Windows 10 Enterprise 1809      Ssh\n. ",
    "soleroitsolutionsltd": "Well I eventually found out that there was a permission issue - still could be handled more gracefully by openssh. ",
    "cphillips83": "@jborean93 That is awesome, this info should really make it to the wiki. I know its a result of how windows works and not really in scope of what OpenSSH is, but would be useful as a note that you could run in to this.. ",
    "schmitch": "i.e. copy the pubkey to C:\\ProgramData\\ssh\\administrator_authorized_keys does not resolve the problem either. I found that the SSH Config contained something like:\nMatch Group administrators\n       AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys\nhowever even when commenting it out, it still does not work.\ns3544 2018-12-14 15:06:37.650 debug2: fd 3 setting O_NONBLOCK\n3544 2018-12-14 15:06:37.650 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n3544 2018-12-14 15:06:37.650 debug1: Bind to port 22 on ::.\n3544 2018-12-14 15:06:37.650 Server listening on :: port 22.\n3544 2018-12-14 15:06:37.650 debug2: fd 4 setting O_NONBLOCK\n3544 2018-12-14 15:06:37.650 debug1: Bind to port 22 on 0.0.0.0.\n3544 2018-12-14 15:06:37.650 Server listening on 0.0.0.0 port 22.\n3544 2018-12-14 15:06:40.670 debug3: fd 5 is not O_NONBLOCK\n3544 2018-12-14 15:06:40.672 debug3: spawning \"C:\\\\Windows\\\\System32\\\\OpenSSH\\\\sshd.exe\" \"-R\"\n3544 2018-12-14 15:06:40.675 debug3: send_rexec_state: entering fd = 8 config len 394\n3544 2018-12-14 15:06:40.675 debug3: ssh_msg_send: type 0\n3544 2018-12-14 15:06:40.675 debug3: send_rexec_state: done\n2664 2018-12-14 15:06:40.721 debug1: inetd sockets after dupping: 3, 3\n2664 2018-12-14 15:06:40.721 Connection from 192.168.179.152 port 65269 on 192.168.179.249 port 22\n2664 2018-12-14 15:06:40.721 debug1: Client protocol version 2.0; client software version OpenSSH_7.8\n2664 2018-12-14 15:06:40.721 debug1: match: OpenSSH_7.8 pat OpenSSH* compat 0x04000000\n2664 2018-12-14 15:06:40.721 debug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.7\n2664 2018-12-14 15:06:40.722 debug2: fd 3 setting O_NONBLOCK\n2664 2018-12-14 15:06:40.728 debug3: spawning \"C:\\\\Windows\\\\System32\\\\OpenSSH\\\\sshd.exe\" \"-y\"\n2664 2018-12-14 15:06:40.730 debug2: Network child is on pid 2700\n2664 2018-12-14 15:06:40.731 debug3: send_rexec_state: entering fd = 6 config len 394\n2664 2018-12-14 15:06:40.731 debug3: ssh_msg_send: type 0\n2664 2018-12-14 15:06:40.731 debug3: send_rexec_state: done\n2664 2018-12-14 15:06:40.731 debug3: ssh_msg_send: type 0\n2664 2018-12-14 15:06:40.731 debug3: ssh_msg_send: type 0\n2664 2018-12-14 15:06:40.731 debug3: preauth child monitor started\n2664 2018-12-14 15:06:40.756 debug3: list_hostkey_types: ssh-dss key not permitted by HostkeyAlgorithms [preauth]\n2664 2018-12-14 15:06:40.756 debug1: list_hostkey_types: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n2664 2018-12-14 15:06:40.756 debug3: send packet: type 20 [preauth]\n2664 2018-12-14 15:06:40.756 debug1: SSH2_MSG_KEXINIT sent [preauth]\n2664 2018-12-14 15:06:40.756 debug3: receive packet: type 20 [preauth]\n2664 2018-12-14 15:06:40.756 debug1: SSH2_MSG_KEXINIT received [preauth]\n2664 2018-12-14 15:06:40.756 debug2: local server KEXINIT proposal [preauth]\n2664 2018-12-14 15:06:40.756 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1 [preauth]\n2664 2018-12-14 15:06:40.756 debug2: host key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n2664 2018-12-14 15:06:40.756 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\n2664 2018-12-14 15:06:40.756 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\n2664 2018-12-14 15:06:40.756 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n2664 2018-12-14 15:06:40.756 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n2664 2018-12-14 15:06:40.756 debug2: compression ctos: none [preauth]\n2664 2018-12-14 15:06:40.756 debug2: compression stoc: none [preauth]\n2664 2018-12-14 15:06:40.756 debug2: languages ctos:  [preauth]\n2664 2018-12-14 15:06:40.756 debug2: languages stoc:  [preauth]\n2664 2018-12-14 15:06:40.756 debug2: first_kex_follows 0  [preauth]\n2664 2018-12-14 15:06:40.756 debug2: reserved 0  [preauth]\n2664 2018-12-14 15:06:40.756 debug2: peer client KEXINIT proposal [preauth]\n2664 2018-12-14 15:06:40.756 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c [preauth]\n2664 2018-12-14 15:06:40.756 debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa [preauth]\n2664 2018-12-14 15:06:40.756 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\n2664 2018-12-14 15:06:40.757 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\n2664 2018-12-14 15:06:40.757 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n2664 2018-12-14 15:06:40.757 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n2664 2018-12-14 15:06:40.757 debug2: compression ctos: none,zlib@openssh.com,zlib [preauth]\n2664 2018-12-14 15:06:40.757 debug2: compression stoc: none,zlib@openssh.com,zlib [preauth]\n2664 2018-12-14 15:06:40.757 debug2: languages ctos:  [preauth]\n2664 2018-12-14 15:06:40.757 debug2: languages stoc:  [preauth]\n2664 2018-12-14 15:06:40.757 debug2: first_kex_follows 0  [preauth]\n2664 2018-12-14 15:06:40.757 debug2: reserved 0  [preauth]\n2664 2018-12-14 15:06:40.757 debug1: kex: algorithm: curve25519-sha256 [preauth]\n2664 2018-12-14 15:06:40.757 debug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\n2664 2018-12-14 15:06:40.757 debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\n2664 2018-12-14 15:06:40.757 debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none [preauth]\n2664 2018-12-14 15:06:40.757 debug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\n2664 2018-12-14 15:06:40.760 debug3: receive packet: type 30 [preauth]\n2664 2018-12-14 15:06:40.768 debug3: mm_key_sign entering [preauth]\n2664 2018-12-14 15:06:40.768 debug3: mm_request_send entering: type 6 [preauth]\n2664 2018-12-14 15:06:40.768 debug3: mm_key_sign: waiting for MONITOR_ANS_SIGN [preauth]\n2664 2018-12-14 15:06:40.768 debug3: mm_request_receive_expect entering: type 7 [preauth]\n2664 2018-12-14 15:06:40.768 debug3: mm_request_receive entering [preauth]\n2664 2018-12-14 15:06:40.768 debug3: mm_request_receive entering\n2664 2018-12-14 15:06:40.768 debug3: monitor_read: checking request 6\n2664 2018-12-14 15:06:40.769 debug3: mm_answer_sign\n2664 2018-12-14 15:06:40.770 debug3: mm_answer_sign: hostkey proof signature 000001683069E4C0(101)\n2664 2018-12-14 15:06:40.770 debug3: mm_request_send entering: type 7\n2664 2018-12-14 15:06:40.770 debug2: monitor_read: 6 used once, disabling now\n2664 2018-12-14 15:06:40.770 debug3: send packet: type 31 [preauth]\n2664 2018-12-14 15:06:40.770 debug3: send packet: type 21 [preauth]\n2664 2018-12-14 15:06:40.770 debug2: set_newkeys: mode 1 [preauth]\n2664 2018-12-14 15:06:40.770 debug1: rekey after 134217728 blocks [preauth]\n2664 2018-12-14 15:06:40.770 debug1: SSH2_MSG_NEWKEYS sent [preauth]\n2664 2018-12-14 15:06:40.770 debug1: expecting SSH2_MSG_NEWKEYS [preauth]\n2664 2018-12-14 15:06:40.770 debug3: send packet: type 7 [preauth]\n2664 2018-12-14 15:06:40.778 debug3: receive packet: type 21 [preauth]\n2664 2018-12-14 15:06:40.778 debug1: SSH2_MSG_NEWKEYS received [preauth]\n2664 2018-12-14 15:06:40.778 debug2: set_newkeys: mode 0 [preauth]\n2664 2018-12-14 15:06:40.778 debug1: rekey after 134217728 blocks [preauth]\n2664 2018-12-14 15:06:40.778 debug1: KEX done [preauth]\n2664 2018-12-14 15:06:40.789 debug3: receive packet: type 5 [preauth]\n2664 2018-12-14 15:06:40.789 debug3: send packet: type 6 [preauth]\n2664 2018-12-14 15:06:40.789 debug3: receive packet: type 50 [preauth]\n2664 2018-12-14 15:06:40.789 debug1: userauth-request for user Administrator service ssh-connection method none [preauth]\n2664 2018-12-14 15:06:40.789 debug1: attempt 0 failures 0 [preauth]\n2664 2018-12-14 15:06:40.789 debug3: mm_getpwnamallow entering [preauth]\n2664 2018-12-14 15:06:40.789 debug3: mm_request_send entering: type 8 [preauth]\n2664 2018-12-14 15:06:40.789 debug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\n2664 2018-12-14 15:06:40.789 debug3: mm_request_receive_expect entering: type 9 [preauth]\n2664 2018-12-14 15:06:40.789 debug3: mm_request_receive entering [preauth]\n2664 2018-12-14 15:06:40.789 debug3: mm_request_receive entering\n2664 2018-12-14 15:06:40.789 debug3: monitor_read: checking request 8\n2664 2018-12-14 15:06:40.789 debug3: mm_answer_pwnamallow\n2664 2018-12-14 15:06:40.790 debug2: parse_server_config: config reprocess config len 394\n2664 2018-12-14 15:06:40.790 debug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 1\n2664 2018-12-14 15:06:40.790 debug3: mm_request_send entering: type 9\n2664 2018-12-14 15:06:40.791 debug2: monitor_read: 8 used once, disabling now\n2664 2018-12-14 15:06:40.791 debug2: input_userauth_request: setting up authctxt for Administrator [preauth]\n2664 2018-12-14 15:06:40.791 debug3: mm_inform_authserv entering [preauth]\n2664 2018-12-14 15:06:40.791 debug3: mm_request_send entering: type 4 [preauth]\n2664 2018-12-14 15:06:40.791 debug2: input_userauth_request: try method none [preauth]\n2664 2018-12-14 15:06:40.791 debug3: userauth_finish: failure partial=0 next methods=\"publickey,keyboard-interactive\" [preauth]\n2664 2018-12-14 15:06:40.791 debug3: send packet: type 51 [preauth]\n2664 2018-12-14 15:06:40.791 debug3: mm_request_receive entering\n2664 2018-12-14 15:06:40.791 debug3: monitor_read: checking request 4\n2664 2018-12-14 15:06:40.791 debug3: mm_answer_authserv: service=ssh-connection, style=\n2664 2018-12-14 15:06:40.791 debug2: monitor_read: 4 used once, disabling now\n2664 2018-12-14 15:06:40.791 debug3: receive packet: type 50 [preauth]\n2664 2018-12-14 15:06:40.791 debug1: userauth-request for user Administrator service ssh-connection method publickey [preauth]\n2664 2018-12-14 15:06:40.791 debug1: attempt 1 failures 0 [preauth]\n2664 2018-12-14 15:06:40.791 debug2: input_userauth_request: try method publickey [preauth]\n2664 2018-12-14 15:06:40.791 debug1: userauth_pubkey: test pkalg ssh-ed25519 pkblob ED25519 SHA256:2nXx9fR4uOi8KRult6QjtZEvaTHIqH7i4cAv7qg3gSA [preauth]\n2664 2018-12-14 15:06:40.791 debug3: mm_key_allowed entering [preauth]\n2664 2018-12-14 15:06:40.791 debug3: mm_request_send entering: type 22 [preauth]\n2664 2018-12-14 15:06:40.791 debug3: mm_key_allowed: waiting for MONITOR_ANS_KEYALLOWED [preauth]\n2664 2018-12-14 15:06:40.791 debug3: mm_request_receive_expect entering: type 23 [preauth]\n2664 2018-12-14 15:06:40.791 debug3: mm_request_receive entering [preauth]\n2664 2018-12-14 15:06:40.791 debug3: mm_request_receive entering\n2664 2018-12-14 15:06:40.791 debug3: monitor_read: checking request 22\n2664 2018-12-14 15:06:40.791 debug3: mm_answer_keyallowed entering\n2664 2018-12-14 15:06:40.791 debug3: mm_answer_keyallowed: key_from_blob: 000001683069E300\n2664 2018-12-14 15:06:40.791 debug1: trying public key file C:\\\\Users\\\\Administrator\\\\.ssh/authorized_keys\n2664 2018-12-14 15:06:40.792 debug3: Bad permissions. Try removing permissions for user: S-1-5-80-3847866527-469524349-687026318-516638107-1125189541 on file C:/Users/Administrator/.ssh/authorized_keys.\n2664 2018-12-14 15:06:40.792 Authentication refused.\n2664 2018-12-14 15:06:40.792 debug3: mm_answer_keyallowed: publickey authentication test: ED25519 key is not allowed\n2664 2018-12-14 15:06:40.792 Failed publickey for Administrator from 192.168.179.152 port 65269 ssh2: ED25519 SHA256:2nXx9fR4uOi8KRult6QjtZEvaTHIqH7i4cAv7qg3gSA\n2664 2018-12-14 15:06:40.792 debug3: mm_request_send entering: type 23\n2664 2018-12-14 15:06:40.792 debug2: userauth_pubkey: authenticated 0 pkalg ssh-ed25519 [preauth]\n2664 2018-12-14 15:06:40.792 debug3: userauth_finish: failure partial=0 next methods=\"publickey,keyboard-interactive\" [preauth]\n2664 2018-12-14 15:06:40.792 debug3: send packet: type 51 [preauth]\n2664 2018-12-14 15:06:40.794 Connection closed by authenticating user Administrator 192.168.179.152 port 65269 [preauth]\n2664 2018-12-14 15:06:40.794 debug1: do_cleanup [preauth]\n2664 2018-12-14 15:06:40.795 debug1: monitor_read_log: child log fd closed\n2664 2018-12-14 15:06:40.795 debug3: mm_request_receive entering\n2664 2018-12-14 15:06:40.795 debug1: do_cleanup\n2664 2018-12-14 15:06:40.795 debug1: Killing privsep child 2700\nbtw.:\nPS C:\\ProgramData\\ssh> Repair-AuthorizedKeyPermission C:\\Users\\Administrator\\.ssh\\authorized_keys\n  [*] C:\\Users\\Administrator\\.ssh\\authorized_keys\n      looks good\nFile ACL:\n```\nPS C:\\ProgramData\\ssh> Get-Acl C:\\Users\\Administrator.ssh\\authorized_keys|Format-List\nPath   : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\Administrator.ssh\\authorized_keys\nOwner  : BUILTIN\\Administrators\nGroup  : WIN-JC8T67AORH2\\None\nAccess : NT SERVICE\\sshd Allow  Read, Synchronize\n         NT AUTHORITY\\SYSTEM Allow  FullControl\n         BUILTIN\\Administrators Allow  FullControl\n         WIN-JC8T67AORH2\\Administrator Allow  FullControl\nAudit  :\nSddl   : O:BAG:S-1-5-21-2330858761-2518894999-591638271-513D:AI(A;;FR;;;S-1-5-80-3847866527-469524349-687026318-516638107-1125189541)(A;ID;FA;;;SY)\n         (A;ID;FA;;;BA)(A;ID;FA;;;LA)\n```\nI'm on a headless windows. and completly out of ideas.. Actually I did not download anything. \nSo it was either included in pwsh-core-6.1.1.msi or in Windows Server 2019. Actually I remembered:\n```\nGet-WindowsCapability -Online | ? Name -like 'OpenSSH*'\nName  : OpenSSH.Client~~~~0.0.1.0\nState : Installed\nName  : OpenSSH.Server~~~~0.0.1.0\nState : Installed\nInstall the OpenSSH Client\nAdd-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0\nInstall the OpenSSH Server\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0\n```\nSource: https://docs.microsoft.com/de-de/windows-server/administration/openssh/openssh_install_firstuse. than i have no idea, how it was installed.\nActually the system was not upgraded, I only installed PowerShell Core and DotNet Core SDK from Microsoft and other Build Related Tooling like Git, NodeJS etc.\n(I also used Pwsh to run the repair script). Actually I'm on Server Core aswell. However after \"fixing\" the sshd config and now correcting the permission (I.e. not using the powershell command everything works, with ed keys). actually since the problem was solved on my side is probably a totally different issue than the others, I'm closing this.. ",
    "adilinden": "I am seeing the exactly same thing. Fresh install of Server 2019 Core with Hyper-V service.\nInstalled OpenSSH with:\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0\nRunning sshd -d gets me:\ndebug1: trying public key file __PROGRAMDATA__/ssh/administrators_authorized_keys\ndebug1: Could not open authorized keys '__PROGRAMDATA__/ssh/administrators_authorized_keys': No such file or directory\nDo note that I plugged my public key into c:\\Users\\Administrator\\.ssh\\authorized_keys.\n. I commented this out in C:\\ProgramData\\ssh\\sshd_config per instructions above:\n```\nMatch Group administrators\nAuthorizedKeysFile PROGRAMDATA/ssh/administrators_authorized_keys\n```\nI then created .ssh/authorized_keys using notepad. Finally I repaired permissions using:\nRepair-AuthorizedKeyPermission -FilePath $home\\.ssh\\authorized_keys\nIt is still failing, but its looking for a file now closer to what would be expected, debug from sshd -d:\ndebug1: trying public key file C:\\\\Users\\\\Administrator\\\\.ssh/authorized_keys\nAuthentication refused.\nFailed publickey for Administrator from 192.168.123.107 port 62628 ssh2: ED25519 SHA256:XUCnOR. Here is what works and doesn't. Note that this is on Server 2019 Core! I previously installed on Server 2016 Core (LTSB release) using the installer from GitHub. With it Repair-AuthorizedKeyPermission was needed and things failed without.\nFor Server 2019 Core:\nMake sure we are in $home\ncd $home\nOpen sshd_config using notepad\nnotepad C:\\ProgramData\\ssh\\sshd_config`\nEdit the Match statement pertaining Adminstrators\n```\nMatch Group administrators\nAuthorizedKeysFile PROGRAMDATA/ssh/administrators_authorized_keys\n```\nCreate the $home\\.ssh directory\nmkdir .ssh\nCreate authorized_keys and add public key(s)\nnotepad .ssh\\authorized_keys\nThe file created will be authorized_keys.txt, rename to authorized_keys\nmv .\\.ssh\\authorized_keys.txt .\\.ssh\\authorized_keys\nDo NOT repair permissions as this will thow an error\nRepair-AuthorizedKeyPermission -FilePath $home\\.ssh\\authorized_keys\nAnd the error:\ndebug1: trying public key file C:\\\\Users\\\\Administrator\\\\.ssh/authorized_keys\nAuthentication refused.\nDo NOT create authorized_keys using echo and subsequently editing\necho test > .ssh\\authorized_keys\necho $null > .ssh\\authorized_keys\nAnd the error:\ndebug1: read_keyfile_line: C:\\\\Users\\\\Administrator\\\\.ssh/authorized_keys line 1 exceeds size limit. ",
    "SNikalaichyk": "Hi! I was able to get the C:\\ProgramData\\ssh\\administrators_authorized_keys file to work.\nYou should set the ACL for the administrators_authorized_keys file to match the ACL of the ssh_host_dsa_key file in the same C:\\ProgramData\\ssh directory.\nicacls C:\\ProgramData\\ssh\\administrators_authorized_keys /remove \"NT AUTHORITY\\Authenticated Users\"\nicacls C:\\ProgramData\\ssh\\administrators_authorized_keys /inheritance:r\nThen restart SSH services:\npowershell\nRestart-Service -Name sshd, ssh-agent -Force. ",
    "inickt": "I had the same problem with a fresh install of Windows 10 Pro (October 2018 update 17763) in a virtual machine.\nTo fix I had to:\n- uncomment the Match policy in sshd_config\n- convert authorized_keys in .ssh from Unix to CRLF line endings (I had scp'ed this from Linux without thinking about this)\n-  run Repair-AuthorizedKeyPermission on authorized_keys. ",
    "nathanshearer": "I can confirm PubkeyAuthentication with authorized_keys is very broken in 7.9.0.0p1-Beta on a fresh Windws 7 Pro SP1 install.\nI downgraded to 7.6.1.0p1-Beta and reinstalled from scratch. With this older version I was able to login with the same authorized_keys file.. ",
    "vagabond1132": "Are there any administrators_authorized_keys in the C:\\ProgramData\\ssh directory?\ndebug1: KEX done [preauth]\ndebug1: userauth-request for user administrator service ssh-connection method no\nne [preauth]\ndebug1: attempt 0 failures 0 [preauth]\ndebug1: user C:\\\\Users\\\\Administrator matched group list administrators at line\n88\ndebug1: userauth-request for user administrator service ssh-connection method pu\nblickey [preauth]\ndebug1: attempt 1 failures 0 [preauth]\ndebug1: userauth_pubkey: test pkalg rsa-sha2-512 pkblob RSA SHA256:o+WFqqS/UqUzb\nM3mhGY+oTiF0scZBatZKpnRgf0FCGQ [preauth]\ndebug1: trying public key file __PROGRAMDATA__/ssh/administrators_authorized_key\ns\ndebug1: Could not open authorized keys '__PROGRAMDATA__/ssh/administrators_autho\nrized_keys': No such file or directory\nFailed publickey for administrator from 192.168.100.156 port 9223 ssh2: RSA SHA2\n56:o+WFqqS/UqUzbM3mhGY+oTiF0scZBatZKpnRgf0FCGQ\ndebug1: userauth-request for user administrator service ssh-connection method ke\nyboard-interactive [preauth]\ndebug1: attempt 2 failures 1 [preauth]\ndebug1: keyboard-interactive devs  [preauth]\ndebug1: auth2_challenge: user=administrator devs= [preauth]\n. ",
    "jeepMan79": "Tried that, no luck :(.  When running via putty, it prints the output to screen, and doesn't exit until I hit return.  I'm not sure which process is waiting, CMD or Powershell.exe.. okay, so when I put \"< NUL\" at the end of the powershell command/script, it works fine.  not sure why.  only happens in windows 2008.  . ",
    "reina-n": "I think parent sshd always crash on create connection on Win2008 32bit...\nVer: 7.7.2.0 code: 0xc0000005 offset: 0x00025ff8\nVer: 7.9.0.0 code: 0xc0000005 offset: 0x00028548\nthe offset between 7.7.2 and  7.9.0 was near.. ",
    "jaykrell": "I think I'm hitting this and it makes ssh client unusuable.\nI resize window so I can see more.\nThen I hit up arrow to retry previous command.\nJust pressing up arrow resizes the screen back.\nBringing back the horizontal scroll bars which I absolutely do not want.\nI tried changing console resolution in the settings window but somehow that didn't work either.\ni'm going back to the HyperV GUI to to see the VM instead of ssh, or will try telnet/Cygwin-ssh/putty.. This makes ssh unusable.. ",
    "kralikba": "You are right. I have wrongly assumed that overwriting the builtin sshd files would be a good idea; it seems that they have been reverted to the older version when I have not been looking. Apologies. (It does work with the latest binaries indeed.). ",
    "fireson-gor": "Thanks for the reply, I rebuild the openssh to new folder and fix it. . ",
    "KarloX2": "Well, .NET Console.Read/Write methods claim to map to stdin /stdout if the input / output are redirected.\nI also tried with Console.OpenStandardInput(), same result, read just blocks.\nDoes anybody like to repro this?\nThanks. Yes, echo input | C:\\path\\to\\myprogram.exe works just fine.\nAny idea what I could try next?\nC# Source code is as simple as this:\n```\n            Console.WriteLine(\"Hello\");\n        while (true)\n        {\n            var k = Console.ReadLine();\n            if (!string.IsNullOrEmpty(k))\n            {\n                Console.WriteLine(\"R: \" + k);\n                if (k == \"quit\") break;\n            }\n        }\n\n        Console.WriteLine(\"Bye\");\n\n```\nThe \"Hello\" output is visible in the SSH client console. But no \"R: \u2026\" echos and quit doesn't work either.\n. I start the client like so:\nssh localhost -s mytest\nand mytest is the name of the subsystem declared in sshd_config.\n. I tried that, it doesn't make any difference.\nHowever I think I found the cause of the problem now:\nUnder the hood, the .NET framework employs the internal __ConsoleStream class for accessing the console or the standard in/out respectively. Source code of .NET 4.7.2 is available here.\nAt the very end of that class there is an external method  WaitForAvailableConsoleInput declared that is being called when it comes to read. I can't see the source code of that method implementation, but this seems where execution blocks. That may have to do with the fact that the SSH client doesn't send the Windows style line termination sequence <cr><lf>, but only a <lf> like it is usual on Linux.\nThe bad thing is that it is perfectly possible to skip line mode (by a call to the SetConsoleMode API, so Read wouldn't wait for the like termination sequence), but that only works while using a real console. I can't find a way to do the same when the input is redirected (piped).\nIf the above it true, then I think this is a shortcoming of .NET and we should ask MS to add a feature to make WaitForAvailableConsoleInput trigger on <lf> AND also for a non-line mode when using pipes. Does anybody known where one can file such a feature request?\nFor the time being, the workaround seems to be to ignore the Console class (at least for reading) and to work with a FileStream on the native stdin handle.. Hello @manojampalam \nThanks for pointing me to this Wiki. Essentially, I think this is what I tried before, but it doesn't work as expected.\nHere's what I did (client and server are the same machine at the moment):\n\nStarted OpenSSH Authentication Agent\ndelete all priviously added keys: ssh-add -D\ncreate a new private/public keys pair in C:\\users\\myusername\\.ssh by giving this command: ssh-keygen -t rsa -f id_rsa (with an empty password when asked)\nAdded the key by typing ssh-add id_rsa which gives the message Identity added: id_rsa (id_rsa)\nCopied id_rsa.pub to the sub directory (newly created) C:\\users\\myusername\\.ssh\\authorized_keys\nRestart both the OpenSSH Authentication Agent and the OpenSSH SSH Server services (just in case)\nTry to login with ssh -i .\\id_rsa myusername\\localhost\nResult: I can log in, but ssh still asks me for the password (blank isn't accepted, I must enter the user's password) wich is what I want to get rid of.\n\nThen I tried to add the setting AuthenticationMethods publickey in sshd_config and restartet the services. Now when I try ssh -i .\\id_rsa myusername\\localhost it fails with the message strobel@localhost: Permission denied (publickey).\nWhat can I try next?\nsshd.exe is of version 7.6.0.1. Do I need to update (and how)?\nThanks\n. Great. When I copy id_rsa.pub to authorized_keys (file!) it works fine.. ",
    "gwojan": "\nHow can I install an \u201eofficially serviced\u201c release on Windows 2016?\n\nWhy can't we at least get builds later than last July? \ud83d\ude04 . ",
    "aviadmini": "The same one works with WSL through a unix socket\n@manojampalam yes, ssh-add -l works and shows correct info. ",
    "suppenfilter": "The IIS process will run with the account ApplicationPoolIdentity. I managed to make it work with when the IIS process runs with a custom account and limit the access rights of the private key to this account. But I did not yet manage to make it work with the ApplicationPoolIdentity.. ",
    "congyiwu": "bump?. ",
    "LinkPhoenix": "Thank you for the answer :)\nand my mistake for the tittle.\nCan not we add in the documentation that the BANNER option is supported?. ",
    "cdstg": "Ok let me try the latest \nBTW what version were you running\nssh -V\n. > @NoMoreFood interesting, I'm seeing this behavior in 7.9 too (only cert is reported).\n\n@cdstg will see what's the difference between the Unix and Windows versions of ssh-agent. Otherwise, why would you need both of them listed? Even if only the cert is listed, AFAIK, it should work in cases where the public key is \"authorized\" on the server. No?\n\nNo you need the private key to be loaded in the agent as well as the cert is a public cert \nThe cert only has info like how long its valid and what principles are valid \nLinux version is doing that and can connect fine and I tried on only linux versions and newer ones\nWSL also works \nI tried on different windows versions all the same issue and even with the 7.9 :-( \n. ",
    "chambaw": "Not sure. This is all new to me\nOn Tue, Feb 12, 2019 at 12:03 AM cdstg notifications@github.com wrote:\n\nOk let me try the latest\nBTW what version were you running\nssh -V\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PowerShell/Win32-OpenSSH/issues/1333#issuecomment-462617078,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ag5WhBW82NUVNLd7zqryeMPB275D6zolks5vMkstgaJpZM4af6bS\n.\n. \n",
    "alexv1n": "I'm having a similar issue. Executing ssh.exe user@ip.address -- echo -n \"\" just hangs sometimes. \nWhen it does hang, it happens at syncio_close() (in contrib\\win32\\win32compat\\termio.c) at line 263 (WaitForSingleObject):\n```\n    if (pio->read_details.pending) {\n        /\n        Terminate the read thread at the below situations:\n        1. For console - the read thread is blocked by the while loop on raw mode\n        2. Function ReadFile on Win7 machine dees not return when no content to read in non-interactive mode.\n        /\n        if (FILETYPE(pio) == FILE_TYPE_CHAR && (IsWin7OrLess() || in_raw_mode))\n            TerminateThread(pio->read_overlapped.hEvent, 0);\n        else\n            WaitForSingleObject(pio->read_overlapped.hEvent, INFINITE);\n    }\n```\nSometimes hitting Enter in terminal unblocks ssh.exe and it exits successfully.\nAlso, if I run ssh user@server -- echo -n \"\" <NUL it blocks 100% of the time.\nI have tried code from https://github.com/PowerShell/Win32-OpenSSH/issues/1338 but it doesn't fix the issue. This seems like a different bug, probably closely related to https://github.com/PowerShell/Win32-OpenSSH/issues/874 but it seems the issue is not confined to Win7 only. It happens on Win10 as well.. I did say that I tried that and it didn't help. ",
    "EricSL": "ssh.dmp.zip\nI've attached a dump of a deadlocked OpenSSH 7.9.. \"-vvv\" reliably fixes the problem.\nSend me a patch and I'll make a custom build.. @NoMoreFood Your patch fixes the issue for me, thanks!. ",
    "pakona": "@NoMoreFood \nWill this patch make it to the next release? Seems like a critical issue to me.\nAny idea of when to expect the next release?\nThanks!. @bingbing8 any chance we could get some idea of when this patch could be accepted?\nIt would also be so helpful to have a rough idea of the future releases cadence.. ",
    "HealisticEngineer": "Here's the log, one attempt only ;)\n. sshd log\n3508 2019-02-09 07:58:35.044 debug2: fd 3 setting O_NONBLOCK\n3508 2019-02-09 07:58:35.044 debug3: sock_set_v6only: set socket 3 IPV6_V6ONLY\n3508 2019-02-09 07:58:35.044 debug1: Bind to port 22 on ::.\n3508 2019-02-09 07:58:35.044 Server listening on :: port 22.\n3508 2019-02-09 07:58:35.044 debug2: fd 4 setting O_NONBLOCK\n3508 2019-02-09 07:58:35.044 debug1: Bind to port 22 on 0.0.0.0.\n3508 2019-02-09 07:58:35.044 Server listening on 0.0.0.0 port 22.\n3508 2019-02-09 07:58:40.608 debug3: fd 5 is not O_NONBLOCK\n3508 2019-02-09 07:58:40.608 debug3: spawning \"C:\\Program Files\\OpenSSH\\OpenSSH-Win32\\sshd.exe\" -R\n3508 2019-02-09 07:58:40.608 debug3: send_rexec_state: entering fd = 8 config len 245\n3508 2019-02-09 07:58:40.608 debug3: ssh_msg_send: type 0\n3508 2019-02-09 07:58:40.622 debug3: send_rexec_state: done\n2312 2019-02-09 07:58:40.699 debug1: inetd sockets after dupping: 3, 3\n2312 2019-02-09 07:58:40.699 Connection from 10.0.2.15 port 39948 on 10.0.2.23 port 22\n2312 2019-02-09 07:58:40.699 debug1: Client protocol version 2.0; client software version OpenSSH_7.6p1 Ubuntu-4ubuntu0.2\n2312 2019-02-09 07:58:40.699 debug1: match: OpenSSH_7.6p1 Ubuntu-4ubuntu0.2 pat OpenSSH_7.0,OpenSSH_7.1,OpenSSH_7.2,OpenSSH_7.3,OpenSSH_7.4,OpenSSH_7.5,OpenSSH_7.6,OpenSSH_7.7 compat 0x04000002\n2312 2019-02-09 07:58:40.699 debug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.9\n2312 2019-02-09 07:58:40.699 debug2: fd 3 setting O_NONBLOCK\n2312 2019-02-09 07:58:40.714 debug3: spawning \"C:\\Program Files\\OpenSSH\\OpenSSH-Win32\\sshd.exe\" -y\n2312 2019-02-09 07:58:40.714 debug2: Network child is on pid 4008\n2312 2019-02-09 07:58:40.714 debug3: send_rexec_state: entering fd = 6 config len 245\n2312 2019-02-09 07:58:40.714 debug3: ssh_msg_send: type 0\n2312 2019-02-09 07:58:40.714 debug3: send_rexec_state: done\n2312 2019-02-09 07:58:40.714 debug3: ssh_msg_send: type 0\n2312 2019-02-09 07:58:40.714 debug3: ssh_msg_send: type 0\n2312 2019-02-09 07:58:40.731 debug3: preauth child monitor started\n2312 2019-02-09 07:58:40.746 debug1: list_hostkey_types: rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n2312 2019-02-09 07:58:40.746 debug3: send packet: type 20 [preauth]\n2312 2019-02-09 07:58:40.746 debug1: SSH2_MSG_KEXINIT sent [preauth]\n2312 2019-02-09 07:58:40.746 debug3: receive packet: type 20 [preauth]\n2312 2019-02-09 07:58:40.746 debug1: SSH2_MSG_KEXINIT received [preauth]\n2312 2019-02-09 07:58:40.746 debug2: local server KEXINIT proposal [preauth]\n2312 2019-02-09 07:58:40.746 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1 [preauth]\n2312 2019-02-09 07:58:40.746 debug2: host key algorithms: rsa-sha2-512,rsa-sha2-256,ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519 [preauth]\n2312 2019-02-09 07:58:40.746 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\n2312 2019-02-09 07:58:40.746 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\n2312 2019-02-09 07:58:40.746 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n2312 2019-02-09 07:58:40.746 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n2312 2019-02-09 07:58:40.746 debug2: compression ctos: none [preauth]\n2312 2019-02-09 07:58:40.746 debug2: compression stoc: none [preauth]\n2312 2019-02-09 07:58:40.746 debug2: languages ctos:  [preauth]\n2312 2019-02-09 07:58:40.746 debug2: languages stoc:  [preauth]\n2312 2019-02-09 07:58:40.746 debug2: first_kex_follows 0  [preauth]\n2312 2019-02-09 07:58:40.746 debug2: reserved 0  [preauth]\n2312 2019-02-09 07:58:40.746 debug2: peer client KEXINIT proposal [preauth]\n2312 2019-02-09 07:58:40.746 debug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,ext-info-c [preauth]\n2312 2019-02-09 07:58:40.746 debug2: host key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa [preauth]\n2312 2019-02-09 07:58:40.746 debug2: ciphers ctos: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\n2312 2019-02-09 07:58:40.746 debug2: ciphers stoc: chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com [preauth]\n2312 2019-02-09 07:58:40.746 debug2: MACs ctos: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n2312 2019-02-09 07:58:40.746 debug2: MACs stoc: umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1 [preauth]\n2312 2019-02-09 07:58:40.746 debug2: compression ctos: none,zlib@openssh.com,zlib [preauth]\n2312 2019-02-09 07:58:40.746 debug2: compression stoc: none,zlib@openssh.com,zlib [preauth]\n2312 2019-02-09 07:58:40.746 debug2: languages ctos:  [preauth]\n2312 2019-02-09 07:58:40.746 debug2: languages stoc:  [preauth]\n2312 2019-02-09 07:58:40.746 debug2: first_kex_follows 0  [preauth]\n2312 2019-02-09 07:58:40.746 debug2: reserved 0  [preauth]\n2312 2019-02-09 07:58:40.746 debug1: kex: algorithm: curve25519-sha256 [preauth]\n2312 2019-02-09 07:58:40.746 debug1: kex: host key algorithm: ecdsa-sha2-nistp256 [preauth]\n2312 2019-02-09 07:58:40.746 debug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC:  compression: none [preauth]\n2312 2019-02-09 07:58:40.746 debug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC:  compression: none [preauth]\n2312 2019-02-09 07:58:40.746 debug1: expecting SSH2_MSG_KEX_ECDH_INIT [preauth]\n2312 2019-02-09 07:58:40.763 debug3: receive packet: type 30 [preauth]\n2312 2019-02-09 07:58:40.763 debug3: mm_sshkey_sign entering [preauth]\n2312 2019-02-09 07:58:40.763 debug3: mm_request_send entering: type 6 [preauth]\n2312 2019-02-09 07:58:40.763 debug3: mm_sshkey_sign: waiting for MONITOR_ANS_SIGN [preauth]\n2312 2019-02-09 07:58:40.763 debug3: mm_request_receive_expect entering: type 7 [preauth]\n2312 2019-02-09 07:58:40.763 debug3: mm_request_receive entering [preauth]\n2312 2019-02-09 07:58:40.763 debug3: mm_request_receive entering\n2312 2019-02-09 07:58:40.763 debug3: monitor_read: checking request 6\n2312 2019-02-09 07:58:40.763 debug3: mm_answer_sign\n2312 2019-02-09 07:58:40.763 debug3: mm_answer_sign: hostkey proof signature 002003C0(99)\n2312 2019-02-09 07:58:40.763 debug3: mm_request_send entering: type 7\n2312 2019-02-09 07:58:40.763 debug2: monitor_read: 6 used once, disabling now\n2312 2019-02-09 07:58:40.763 debug3: send packet: type 31 [preauth]\n2312 2019-02-09 07:58:40.763 debug3: send packet: type 21 [preauth]\n2312 2019-02-09 07:58:40.763 debug2: set_newkeys: mode 1 [preauth]\n2312 2019-02-09 07:58:40.763 debug1: rekey after 134217728 blocks [preauth]\n2312 2019-02-09 07:58:40.763 debug1: SSH2_MSG_NEWKEYS sent [preauth]\n2312 2019-02-09 07:58:40.763 debug1: expecting SSH2_MSG_NEWKEYS [preauth]\n2312 2019-02-09 07:58:40.763 debug3: send packet: type 7 [preauth]\n2312 2019-02-09 07:58:40.777 debug3: receive packet: type 21 [preauth]\n2312 2019-02-09 07:58:40.777 debug1: SSH2_MSG_NEWKEYS received [preauth]\n2312 2019-02-09 07:58:40.777 debug2: set_newkeys: mode 0 [preauth]\n2312 2019-02-09 07:58:40.777 debug1: rekey after 134217728 blocks [preauth]\n2312 2019-02-09 07:58:40.777 debug1: KEX done [preauth]\n2312 2019-02-09 07:58:40.793 debug3: receive packet: type 5 [preauth]\n2312 2019-02-09 07:58:40.793 debug3: send packet: type 6 [preauth]\n2312 2019-02-09 07:58:40.793 debug3: receive packet: type 50 [preauth]\n2312 2019-02-09 07:58:40.793 debug1: userauth-request for user administrator service ssh-connection method none [preauth]\n2312 2019-02-09 07:58:40.793 debug1: attempt 0 failures 0 [preauth]\n2312 2019-02-09 07:58:40.793 debug3: mm_getpwnamallow entering [preauth]\n2312 2019-02-09 07:58:40.793 debug3: mm_request_send entering: type 8 [preauth]\n2312 2019-02-09 07:58:40.793 debug3: mm_getpwnamallow: waiting for MONITOR_ANS_PWNAM [preauth]\n2312 2019-02-09 07:58:40.793 debug3: mm_request_receive_expect entering: type 9 [preauth]\n2312 2019-02-09 07:58:40.793 debug3: mm_request_receive entering [preauth]\n2312 2019-02-09 07:58:40.793 debug3: mm_request_receive entering\n2312 2019-02-09 07:58:40.793 debug3: monitor_read: checking request 8\n2312 2019-02-09 07:58:40.793 debug3: mm_answer_pwnamallow\n2312 2019-02-09 07:58:40.793 debug2: parse_server_config: config reprocess config len 245\n2312 2019-02-09 07:58:40.793 debug3: mm_answer_pwnamallow: sending MONITOR_ANS_PWNAM: 1\n2312 2019-02-09 07:58:40.793 debug3: mm_request_send entering: type 9\n2312 2019-02-09 07:58:40.793 debug2: monitor_read: 8 used once, disabling now\n2312 2019-02-09 07:58:40.793 debug2: input_userauth_request: setting up authctxt for administrator [preauth]\n2312 2019-02-09 07:58:40.793 debug3: mm_inform_authserv entering [preauth]\n2312 2019-02-09 07:58:40.793 debug3: mm_request_send entering: type 4 [preauth]\n2312 2019-02-09 07:58:40.793 debug2: input_userauth_request: try method none [preauth]\n2312 2019-02-09 07:58:40.793 debug3: user_specific_delay: user specific delay 0.000ms [preauth]\n2312 2019-02-09 07:58:40.793 debug3: ensure_minimum_time_since: elapsed 0.000ms, delaying 6.253ms (requested 6.253ms) [preauth]\n2312 2019-02-09 07:58:40.793 debug3: mm_request_receive entering\n2312 2019-02-09 07:58:40.793 debug3: monitor_read: checking request 4\n2312 2019-02-09 07:58:40.793 debug3: mm_answer_authserv: service=ssh-connection, style=\n2312 2019-02-09 07:58:40.793 debug2: monitor_read: 4 used once, disabling now\n2312 2019-02-09 07:58:40.808 debug3: userauth_finish: failure partial=0 next methods=\"password,keyboard-interactive\" [preauth]\n2312 2019-02-09 07:58:40.808 debug3: send packet: type 51 [preauth]\n2312 2019-02-09 07:58:40.808 debug3: receive packet: type 50 [preauth]\n2312 2019-02-09 07:58:40.808 debug1: userauth-request for user administrator service ssh-connection method keyboard-interactive [preauth]\n2312 2019-02-09 07:58:40.808 debug1: attempt 1 failures 0 [preauth]\n2312 2019-02-09 07:58:40.808 debug2: input_userauth_request: try method keyboard-interactive [preauth]\n2312 2019-02-09 07:58:40.808 debug1: keyboard-interactive devs  [preauth]\n2312 2019-02-09 07:58:40.808 debug1: auth2_challenge: user=administrator devs= [preauth]\n2312 2019-02-09 07:58:40.808 debug1: kbdint_alloc: devices '' [preauth]\n2312 2019-02-09 07:58:40.808 debug2: auth2_challenge_start: devices  [preauth]\n2312 2019-02-09 07:58:40.808 debug3: user_specific_delay: user specific delay 0.000ms [preauth]\n2312 2019-02-09 07:58:40.808 debug3: ensure_minimum_time_since: elapsed 0.000ms, delaying 6.253ms (requested 6.253ms) [preauth]\n2312 2019-02-09 07:58:40.824 debug3: userauth_finish: failure partial=0 next methods=\"password,keyboard-interactive\" [preauth]\n2312 2019-02-09 07:58:40.824 debug3: send packet: type 51 [preauth]\n2312 2019-02-09 07:58:44.964 debug3: receive packet: type 50 [preauth]\n2312 2019-02-09 07:58:44.964 debug1: userauth-request for user administrator service ssh-connection method password [preauth]\n2312 2019-02-09 07:58:44.964 debug1: attempt 2 failures 1 [preauth]\n2312 2019-02-09 07:58:44.964 debug2: input_userauth_request: try method password [preauth]\n2312 2019-02-09 07:58:44.964 debug3: mm_auth_password entering [preauth]\n2312 2019-02-09 07:58:44.964 debug3: mm_request_send entering: type 12 [preauth]\n2312 2019-02-09 07:58:44.964 debug3: mm_auth_password: waiting for MONITOR_ANS_AUTHPASSWORD [preauth]\n2312 2019-02-09 07:58:44.964 debug3: mm_request_receive_expect entering: type 13 [preauth]\n2312 2019-02-09 07:58:44.964 debug3: mm_request_receive entering [preauth]\n2312 2019-02-09 07:58:44.964 debug3: mm_request_receive entering\n2312 2019-02-09 07:58:44.964 debug3: monitor_read: checking request 12\n2312 2019-02-09 07:58:44.980 debug3: mm_answer_authpassword: sending result 1\n2312 2019-02-09 07:58:44.980 debug3: mm_request_send entering: type 13\n2312 2019-02-09 07:58:44.980 Accepted password for administrator from 10.0.2.15 port 39948 ssh2\n2312 2019-02-09 07:58:44.980 debug1: monitor_child_preauth: administrator has been authenticated by privileged process\n2312 2019-02-09 07:58:44.980 debug3: mm_get_keystate: Waiting for new keys\n2312 2019-02-09 07:58:44.980 debug3: mm_request_receive_expect entering: type 26\n2312 2019-02-09 07:58:44.980 debug3: mm_request_receive entering\n2312 2019-02-09 07:58:44.996 debug3: mm_get_keystate: GOT new keys\n2312 2019-02-09 07:58:44.996 debug3: mm_auth_password: user authenticated [preauth]\n2312 2019-02-09 07:58:44.996 debug3: user_specific_delay: user specific delay 0.000ms [preauth]\n2312 2019-02-09 07:58:44.996 debug3: ensure_minimum_time_since: elapsed 15.690ms, delaying 9.322ms (requested 6.253ms) [preauth]\n2312 2019-02-09 07:58:44.996 debug3: send packet: type 52 [preauth]\n2312 2019-02-09 07:58:44.996 debug3: mm_request_send entering: type 26 [preauth]\n2312 2019-02-09 07:58:44.996 debug3: mm_send_keystate: Finished sending state [preauth]\n2312 2019-02-09 07:58:44.996 debug1: monitor_read_log: child log fd closed\n2312 2019-02-09 07:58:45.058 debug3: spawning \"C:\\Program Files\\OpenSSH\\OpenSSH-Win32\\sshd.exe\" -z\n2312 2019-02-09 07:58:45.058 User child is on pid 4036\n2312 2019-02-09 07:58:45.058 debug3: send_rexec_state: entering fd = 5 config len 245\n2312 2019-02-09 07:58:45.058 debug3: ssh_msg_send: type 0\n2312 2019-02-09 07:58:45.058 debug3: send_rexec_state: done\n2312 2019-02-09 07:58:45.058 debug3: ssh_msg_send: type 0\n2312 2019-02-09 07:58:45.058 debug3: ssh_msg_send: type 0\n2312 2019-02-09 07:58:45.074 debug3: ssh_msg_send: type 0\n2312 2019-02-09 07:58:45.074 debug3: ssh_msg_send: type 0\n2312 2019-02-09 07:58:45.074 debug3: ssh_msg_send: type 0\n4036 2019-02-09 07:58:45.091 debug3: recv_idexch_state: entering fd = 3\n4036 2019-02-09 07:58:45.091 debug3: ssh_msg_recv entering\n4036 2019-02-09 07:58:45.091 debug3: recv_idexch_state: done\n4036 2019-02-09 07:58:45.091 debug2: fd 4 setting O_NONBLOCK\n4036 2019-02-09 07:58:45.091 debug3: recv_autxctx_state: entering fd = 3\n4036 2019-02-09 07:58:45.091 debug3: ssh_msg_recv entering\n4036 2019-02-09 07:58:45.091 debug3: recv_autxctx_state: done\n4036 2019-02-09 07:58:45.091 debug2: parse_server_config: config reprocess config len 245\n4036 2019-02-09 07:58:45.091 debug3: monitor_recv_keystate: entering \n4036 2019-02-09 07:58:45.091 debug3: ssh_msg_recv entering\n4036 2019-02-09 07:58:45.091 debug3: monitor_recv_keystate: done\n4036 2019-02-09 07:58:45.091 debug3: monitor_apply_keystate: packet_set_state\n4036 2019-02-09 07:58:45.091 debug2: set_newkeys: mode 0\n4036 2019-02-09 07:58:45.091 debug1: rekey after 134217728 blocks\n4036 2019-02-09 07:58:45.091 debug2: set_newkeys: mode 1\n4036 2019-02-09 07:58:45.091 debug1: rekey after 134217728 blocks\n4036 2019-02-09 07:58:45.091 debug1: ssh_packet_set_postauth: called\n4036 2019-02-09 07:58:45.091 debug3: ssh_packet_set_state: done\n4036 2019-02-09 07:58:45.091 debug3: monitor_recv_authopt: entering \n4036 2019-02-09 07:58:45.091 debug3: ssh_msg_recv entering\n4036 2019-02-09 07:58:45.091 debug3: monitor_recv_authopt: done\n4036 2019-02-09 07:58:45.091 debug3: notify_hostkeys: key 0: ssh-rsa SHA256:KIbXLIwYV4e/0E1r6us1mCKMaGI/GzdawOsY3RV4+cM\n4036 2019-02-09 07:58:45.091 debug3: notify_hostkeys: key 1: ecdsa-sha2-nistp256 SHA256:UNH8/rlqjTPFjIRI4DLBCCD4ptV8wDZ49FUNRtfwwhs\n4036 2019-02-09 07:58:45.091 debug3: notify_hostkeys: key 2: ssh-ed25519 SHA256:oH8Gn9Ch8iwlzbN/M53l+dT+R5Q7yJ8bTk792/SqH9M\n4036 2019-02-09 07:58:45.091 debug3: notify_hostkeys: sent 3 hostkeys\n4036 2019-02-09 07:58:45.091 debug3: send packet: type 80\n4036 2019-02-09 07:58:45.106 debug1: active: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding\n4036 2019-02-09 07:58:45.106 debug1: Entering interactive session for SSH2.\n4036 2019-02-09 07:58:45.106 debug2: fd 7 setting O_NONBLOCK\n4036 2019-02-09 07:58:45.106 debug2: fd 8 setting O_NONBLOCK\n4036 2019-02-09 07:58:45.106 debug1: server_init_dispatch\n4036 2019-02-09 07:58:45.106 debug3: receive packet: type 90\n4036 2019-02-09 07:58:45.106 debug1: server_input_channel_open: ctype session rchan 0 win 1048576 max 16384\n4036 2019-02-09 07:58:45.106 debug1: input_session_request\n4036 2019-02-09 07:58:45.106 debug1: channel 0: new [server-session]\n4036 2019-02-09 07:58:45.106 debug2: session_new: allocate (allocated 0 max 10)\n4036 2019-02-09 07:58:45.106 debug3: session_unused: session id 0 unused\n4036 2019-02-09 07:58:45.106 debug1: session_new: session 0\n4036 2019-02-09 07:58:45.106 debug1: session_open: channel 0\n4036 2019-02-09 07:58:45.106 debug1: session_open: session 0: link with channel 0\n4036 2019-02-09 07:58:45.106 debug1: server_input_channel_open: confirm session\n4036 2019-02-09 07:58:45.106 debug3: send packet: type 91\n4036 2019-02-09 07:58:45.106 debug3: receive packet: type 80\n4036 2019-02-09 07:58:45.106 debug1: server_input_global_request: rtype no-more-sessions@openssh.com want_reply 0\n4036 2019-02-09 07:58:45.136 debug3: receive packet: type 98\n4036 2019-02-09 07:58:45.136 debug1: server_input_channel_req: channel 0 request pty-req reply 1\n4036 2019-02-09 07:58:45.136 debug1: session_by_channel: session 0 channel 0\n4036 2019-02-09 07:58:45.136 debug1: session_input_channel_req: session 0 req pty-req\n4036 2019-02-09 07:58:45.136 debug1: Allocating pty.\n4036 2019-02-09 07:58:45.136 debug3: fd 9 is not O_NONBLOCK\n4036 2019-02-09 07:58:45.136 debug3: fd 10 is not O_NONBLOCK\n4036 2019-02-09 07:58:45.136 debug1: session_pty_req: session 0 alloc windows-pty\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 1 (0x1)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 2 (0x2)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 3 (0x3)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 4 (0x4)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 5 (0x5)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 6 (0x6)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 7 (0x7)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 8 (0x8)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 9 (0x9)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 10 (0xa)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 12 (0xc)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 13 (0xd)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 14 (0xe)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 18 (0x12)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 30 (0x1e)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 31 (0x1f)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 32 (0x20)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 33 (0x21)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 34 (0x22)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 35 (0x23)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 36 (0x24)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 37 (0x25)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 38 (0x26)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 39 (0x27)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 40 (0x28)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 41 (0x29)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 42 (0x2a)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 50 (0x32)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 51 (0x33)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 52 (0x34)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 53 (0x35)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 54 (0x36)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 55 (0x37)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 56 (0x38)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 57 (0x39)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 58 (0x3a)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 59 (0x3b)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 60 (0x3c)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 61 (0x3d)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 62 (0x3e)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 70 (0x46)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 71 (0x47)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 72 (0x48)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 73 (0x49)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 74 (0x4a)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 75 (0x4b)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 90 (0x5a)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 91 (0x5b)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 92 (0x5c)\n4036 2019-02-09 07:58:45.136 debug1: Ignoring unsupported tty mode opcode 93 (0x5d)\n4036 2019-02-09 07:58:45.136 debug3: send packet: type 99\n4036 2019-02-09 07:58:45.136 debug3: receive packet: type 98\n4036 2019-02-09 07:58:45.136 debug1: server_input_channel_req: channel 0 request env reply 0\n4036 2019-02-09 07:58:45.136 debug1: session_by_channel: session 0 channel 0\n4036 2019-02-09 07:58:45.136 debug1: session_input_channel_req: session 0 req env\n4036 2019-02-09 07:58:45.136 debug2: Ignoring env request LANG: disallowed name\n4036 2019-02-09 07:58:45.136 debug3: receive packet: type 98\n4036 2019-02-09 07:58:45.136 debug1: server_input_channel_req: channel 0 request shell reply 1\n4036 2019-02-09 07:58:45.136 debug1: session_by_channel: session 0 channel 0\n4036 2019-02-09 07:58:45.136 debug1: session_input_channel_req: session 0 req shell\n4036 2019-02-09 07:58:45.136 Starting session: shell on windows-pty for administrator from 10.0.2.15 port 39948 id 0\n4036 2019-02-09 07:58:45.136 debug2: fd 11 setting O_NONBLOCK\n4036 2019-02-09 07:58:45.136 debug2: fd 12 setting O_NONBLOCK\n4036 2019-02-09 07:58:45.136 debug2: fd 13 setting O_NONBLOCK\n4036 2019-02-09 07:58:45.136 debug2: fd 14 setting O_NONBLOCK\n4036 2019-02-09 07:58:45.136 debug2: fd 15 setting O_NONBLOCK\n4036 2019-02-09 07:58:45.136 debug2: fd 16 setting O_NONBLOCK\n4036 2019-02-09 07:58:45.136 debug3: shell: \"c:\\windows\\system32\\cmd.exe\"\n4036 2019-02-09 07:58:45.136 debug3: shell_option: /c\n4036 2019-02-09 07:58:45.136 debug3: This windows OS supports conpty\n4036 2019-02-09 07:58:45.136 debug3: pty commandline: C:\\Windows\\system32\\conhost.exe --headless --width 80 --height 24 --signal 0x214 -- \"c:\\windows\\system32\\cmd.exe\"\n4036 2019-02-09 07:58:45.136 debug1: exec_command_with_pty - failed to execute C:\\Windows\\system32\\conhost.exe --headless --width 80 --height 24 --signal 0x214 -- \"c:\\windows\\system32\\cmd.exe\", error:2\n4036 2019-02-09 07:58:45.136 debug3: send packet: type 100\n4036 2019-02-09 07:58:45.136 Connection closed by 10.0.2.15 port 39948\n4036 2019-02-09 07:58:45.136 debug1: channel 0: free: server-session, nchannels 1\n4036 2019-02-09 07:58:45.136 debug3: channel 0: status: The following connections are open:\\r\\n  #0 server-session (t10 r0 i0/0 o0/0 e[closed]/0 fd -1/-1/-1 sock -1 cc -1)\\r\\n\n4036 2019-02-09 07:58:45.136 Close session: user administrator from 10.0.2.15 port 39948 id 0\n4036 2019-02-09 07:58:45.136 debug3: mm_request_send entering: type 30\n4036 2019-02-09 07:58:45.136 debug3: session_unused: session id 0 unused\n4036 2019-02-09 07:58:45.136 debug1: do_cleanup\n2312 2019-02-09 07:58:45.136 debug3: mm_request_receive entering\n bytes\n4036 2019-02-09 07:58:45.136 Closing connection to 10.0.2.15 port 39948\n2312 2019-02-09 07:58:45.136 debug3: monitor_read: checking request 30\n2312 2019-02-09 07:58:45.136 debug3: mm_answer_pty_cleanup entering\n0\n2312 2019-02-09 07:58:45.136 debug1: session_by_tty: unknown tty windows-pty\n2312 2019-02-09 07:58:45.136 debug3: mm_request_receive entering\n2312 2019-02-09 07:58:45.136 debug3: monitor_read: checking request 50\n2312 2019-02-09 07:58:45.136 debug3: mm_answer_term: tearing down sessions\n. No error on the command prompt, no output at all.. Thanks for the pointer I've switched the 32-bit for the 64-bit package and all works.\nBoth password and public key now work fine.. Done ;). ",
    "j4munoz": "It appears as \"OpenSSH SSH Server\":\n\n. ",
    "Alwaysin": "It looks like it may be due to the fact that the default lines:\nMatch Group administrators\n       AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys\nwere causing an error as my system is in french:\nerror: unable to resolve group administrators\nBy removing it, it looks like it is always chrooting now.. That's what I thought but it doesn't happen without those lines.\nIf I put them back, I sometimes am not chrooted.\nThere's probably another logic behind it. I'd be happy to provide you with any log or whatever you need (say a french virtual machine if you need it).. I've changed my config to match yours, but it doesn't create a sftp-server.log!\nInside usual sshd.log I have the same error message about the group.. ",
    "simolev": "Yes, I believe Get-Hotfix uses WMI since calling Get-WmiObject -class Win32_QuickFixEngineering gives exactly the same result.\nWith a non-administrator user, the same thing happens over remote powershell as with SSH. Access Denied:\n```\n\nGet-HotFix\nAccess denied\n    + CategoryInfo          : NotSpecified: (:) [Get-HotFix], ManagementException\n    + FullyQualifiedErrorId : System.Management.ManagementException,Microsoft.PowerShell.Commands.GetHotFixCommand\n\nGet-WmiObject -class Win32_QuickFixEngineering\nGet-WmiObject : Access denied\n    + CategoryInfo          : InvalidOperation: (:) [Get-WmiObject], ManagementException\n    + FullyQualifiedErrorId : GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand\n```. \n",
    "boeckwurst": "Please read the changes history and look at v1.0.0.0-Beta.\nDid you try running ssh.exe as SYSTEM user?\nSee \"You may use psexec -s cmd to open up cmd.exe running as SYSTEM.\". ",
    "mbulandra": "Upgrading to v7.9.0.0p1-Beta solves the problem. Thank you!. ",
    "scuthber": "Thanks NoMoreFood. Tbh I fixed the issue in the end and have turned down the log level. I will bear your comment in mind if/when it goes wrong again!. ",
    "nixdog": "It was reproducible with ssh.exe built from the default branch of https://github.com/PowerShell/openssh-portable so I believe it should be reproducible with 7.9\nI will check later. Roger that. I can confirm it is not reproducible on localhost, that's why I put linux_hostname in the command line. ",
    "fatbigbright": "Hello there, this issue is also exactly what I need to know at this point. And I have another question: is there anyway to make the log file split into another new one by days?. ",
    "Enxer": "Hi Bryan,\nI get the same results.\nsshd.log\nMy account: (Get-ADUser username \u2013Properties MemberOf).MemberOf -match 'helpdesk'\nCN=Helpdesk-local-admins,OU=Local Administrators,OU=Security Groups,OU=MyBusiness,DC=domain,DC=local\nSSHD_Config:\nsshd_config.txt\nI am working with the 64 bit binaries if that matters.. ah! - that's what I get for fat fingering my account name. I just re-tested and I got in. It is probably too late for me to be testing.\nThe correct name worked. Thanks Bryan I think we can close this out.. ",
    "keuucy": "@NoMoreFood yes, this solved my problem, thank you!. "
}