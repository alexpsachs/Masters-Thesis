{
    "jbrooksuk": "This doesn't happen for me on OSX 10.10, that's interesting.\n. ",
    "nvbn": "It's a bit strange, do you wrote something in another terminal between two fucks?\n. I added check if previous command is fuck. It should fix this issue.\n. @LaMi- you need to try require_confirmation settings option, it's doing almost what you want.\n. Summing up everything, now confirmation required by default and when previous command is fuck (or another alias) will be used a command before it.\n. Can you post output of thefuck git brnch?\n. @grammakov, @okonet is it works on 1.14+?\n. Alias required because we can't get previous command from python script.\n$(... $(...))  required for correct work of ncurses and strange-working-with-user-input apps.\n. Actually it's MIT, added info in readme.\n. Thanks, added to wiki.\n. Cool, thank you!\n. Thanks!\n. Thanks!\n. In 1.15 I added settings option require_confirmation, I think it's what you want, when It's True:\nbash\n\u279c  apt-get install vim    \nE: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\n\u279c  fuck\nsudo apt-get install vim [Enter/Ctrl+C]\n[sudo] password for nvbn:\nOr:\nbash\n\u279c  fuck\nsudo apt-get install vim [Enter/Ctrl+C]^CAborted\n. Thanks.\n. Thanks!\n. Now fixed.\n. Hi tpltnt,\nIt's maybe a wrong steps, there's was a little error in app.\nIs your error repeats with new version and without steps in diff?\n. @tpltnt what os and shell are you using?\n. Is it repeats with 1.29+?\n. Thanks!\n. easy_install added in the readme as a fallback if pip fails.\n. Is it repeats with newest version (1.10+)?\n. Cool =)\n. Is it repeats with 1.11+?\n. \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0435 \u043d\u0443\u0436\u043d\u044b \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0451\u043d\u043d\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u0445 + \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u043f\u0430\u0442\u0442\u0435\u0440\u043d \u0438\u0437 \u043f\u0443\u043b \u0440\u0435\u043a\u0432\u0435\u0441\u0442\u0430.\n\u0421\u043f\u0430\u0441\u0438\u0431\u043e =)\n. Is it repeats with 1.23+?\n. There's a settings command_not_found for path to command-not-found.\n. @cdipaolo, cool idea, thanks. I've implemented something similar, but a bit simpler.\nShould be crossplatform in 1.18+.\n. Thanks!\n. Nah, MIT is better =)\n. It's almost not possible to work with aliases.\nBut you can add your layout to https://github.com/nvbn/thefuck/blob/master/thefuck/rules/switch_lang.py#L5\n. Thanks!\n. Thanks!\n. Is it repeats with 1.11+? \n. @AmarOk1412 anyone can use use whatever they want for an alias.\n. @tuxayo I mean that you need to upgrade thefuck:\nbash\nsudo pip install thefuck --upgrade\n. Is it repeats in 1.11+?\nProbably fixed in #20.\n. Cool, info about python-dev already in readme.\n. Thanks!\n. I checked changes locally and it's not working.\nAnd maybe history is a bash/zsh command and can't be called simple from Popen.\nIs it works for you?\n. It's strange, I'm on ubuntu 14.10 and zsh too.\nWhen I run fuck I've got:\n/bin/sh: 1: history: not found\n. Thanks =)\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. I think this rule is too dangerous to be bundled with app =)\n. Added as disabled by default rule =)\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. @shahankit, python uses /bin/sh as a shell for subprocess.Popen, you should match for output from /bin/sh:\nbash\n\u279c  /bin/sh -c \"cd somewhere\"\n/bin/sh: 1: cd: can't cd to somewhere\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks, I've added tests and fixed code style a bit.\n. I missed this pull request, and info about reloading the shell already in readme.\nBut thanks =)\n. Thanks!\n. What os are you using?\nAlso, is:\nbash\ngit brnch\nfuck\nworking?\n. Is it repeats with 1.23+?\n. I think MIT is better =)\nAlso, duplicate of #27 and #5.\n. Thanks!\n. Fix for inspired by a @liamosaur tweet already merged, so I guess this pull request can be closed.\nBut thanks =)\n. Thanks!\n. Thanks!\n. Thanks!\n. I guess rm -rf is better, most of time dir isn't blank when I trying to delete it.\n. Nope, app already has a good name =)\n. \u0412 1.16+ \u0434\u043e\u043b\u0436\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0438\u0437 \u043a\u043e\u0440\u043e\u0431\u043a\u0438.\n. Try 1.33+, aliases should work.\n. Thanks!\n. Is it repeats in 1.19+?\n. @nwinkler, should work in 1.21+ =)\n. Ok, I've repeated that error locally and in 1.22+ it's definitely fixed =)\n. Thanks!\n. Thanks!\n. Probably fixed in 1.23+\n. Thanks!\n. Is it works now?\n. Thanks!\n. Doesn't work on ubuntu 14.10.\nFrom which package I can get import CommandNotFound?\n. I've changed it a bit, so now it requires updated alias: alias fuck='eval $(thefuck $(fc -ln -1))'.\n. With this change in zsh I've got:\nbash\n\u279c  fuck\n\"Can't fuck twice\"\nIt's not good =)\nCan problem with ' be fixed by changing function in config.fish?\n. I made a few changes related to this pull request, is error persists in fresh master?\n. You installed it through pip install thefuck?\nAlthough, pip install psutil should fix the error.\n. The Fuck works with commands output with LANG=C, so only match-strings in English are required.\n. Thanks!\nI think for permissions to .ssh there should be separate rule.\n. Is it implemented in brew-related rules in 1.29+?\n. Thanks!\n. You need to install python headers, in ubuntu package with them called python-dev, in fedora it's probably python-devel.\n. Thanks!\n. In 2.1+ git_checkout rule tries to use branch with similar name before creating new.\n. Thanks!\n. Implemented for zsh and bash in 1.35+\n. So now it works.\n. We don't need to use -r option, -a option includes it.\n. What that mean?\n. It shouldn't be in requirements.txt, it's already in setup.py install_requires.\nAre setup.py develop/install installs it for you?\n. Try latest master and alias:\nbash\nalias shit='$(THEFUCK_REQUIRE_CONFIRMATION=true thefuck $(fc -ln -1))\nI think it does what you want.\n. Python uses /bin/sh as a shell for subprocess.Popen and related functions.\nWe should use output from /bin/sh.\n. Thanks!\n. No it isn't =)\n. Thanks!\n. Try 1.35+, probably it works like you want.\n. Fixed in #117 \n. Thanks!\n. Thanks!\n. Reopened because in the future rules should be applied to every part of a command with pipes.\n. Thanks!\n. Thanks!\n. Thanks!\n. Because difflib.get_close_matches thinks is a closest match from all available binaries.\nIn the future no_command rule will look in a shell history, so result of the fuck will be more accurate.\n. Thanks!\n. What that mean?\n. Thanks!\n. Thanks!\n. Thanks!\nAdded as disabled by default, because it's a bit not how the fuck should work =)\n. Thanks!\n. Thanks!\n. It isn't possible to support interactive commands.\n. I don't know, maybe - create simple as possible api for writing rules. Probably it'll be hard with async io =)\n. I mean that io in nodejs is async.\n. Brew package isn't official, so I can't change it. But your error can be fixed with:\nbash\npip install psutil\n. Can you post output of thefuck git brnch?\n. Version with cd_mkdir was just released, try to upgrade to 1.30+\n. Works in 2.0 (tested on bash and zsh):\nbash\n\u279c  ehco $PATH\nNo command 'ehco' found, did you mean:\n Command 'echo' from package 'coreutils' (main)\nzsh: command not found: ehco\n\u279c  fuck\necho $PATH [enter/ctrl+c]\n/usr/local/heroku/bin:/home/nvbn/bin:/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/opt/jdk1.8.0_11/bin:/home/nvbn/bin:/opt/jdk1.8.0_45/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/opt/kubernetes/cluster\n. Is it possible to replace && and || on fish side?\n. @scorphus I added ability to define from_shell, to_shell functions for specific stuff, if you can implement fish specific actions in thefuck/shells.py, it'll be cool =)\n. Fixed in 2.1.\n. Can it also include solution for stdin?\n. @scorphus yep.\n. Can I merge it? Or it's not a final solution?\n. I moved aliases to wiki, it will be faster to change them there.\n. thefuck-alias added.\n. We can't use cli arguments in this app, reason why:\nbash\n\u279c someapp --bash-alias  \nzsh: command not found: someapp\n\u279c  fuck  # And it just sets new alias\n\u279c alias fuck\nfuck=\\''eval'\n. @SanketDG docopt, optparse and argparse can't help.\n@WhoBrokeTheBuild  only way to do this properly - introduce new entry_point, like thefuck-alias.\n. @SanketDG what difference between thefuck --alias and thefuck-alias?\n. I moved os specific installation steps to the wiki, it'll be good to add commands for other OS there (OS already added).\n. Thanks!\n. Support of aliases was added in 1.40 (or before).\n. Thanks!\n. Hardcoded aliases isn't a solution, I'll try to add support of aliases in nearest time.\n. Maybe it'll be better to add support of pip to sudo rule?\n. @kimtree it's ok, I added it by myself.\n. Only python 2.7 and 3.3+ are supported, 2.6 - not.\nSo you need to update python.\n. Thanks!\n. It's not how it works =)\nBut thanks, I added proper examples in the readme.\n. Thanks!\n. Looks fixed:\n\u279c echo test;fuck\ntest\nNo fucks given. @eduardog3000 Oh, so I reopen it.. Thanks!\n. Thanks!\n. Thanks!\n. Currently works like you described:\nbash\n\u279c  cd dir \nNo such file or directory: dir\n\u279c  fuck\nmkdir -p dir && cd dir [enter/ctrl+c]\n\u279c  cd ..\n\u279c  cd dirr\nNo such file or directory: dirr\n\u279c  fuck\ncd \"/tmp/dir\" [enter/ctrl+c]\n. Yep, repeats for me with:\nbash\n\u279c  cd dummy \nautoenv_cd:cd:2: no such file or directory: dummy\n\u279c  fuck\nmkdir -p dummy && cd dummy [enter/ctrl+c]\n\u279c  cd ..\n\u279c  rm -rf dummy \n\u279c  cd dummy\nautoenv_cd:cd:2: no such file or directory: dummy\n\u279c  fuck\nNo fuck given\n. @scorphus it repeats only in version from git.\nAnd I almost know how to fix it =)\n. Probably fixed in 1.35+\n. Yep, I'll add priority for the rules in nearest time.\n. priority attribute was added to the rules, and priority (THEFUCK_PRIORITY) ws added to settings for overriding rules priorities.\n. It's because this command takes too much time, try with wait_command = 30 in settings.\n. Try 1.33+, aliases should work out of the box =)\n. Try to upgrade to 1.34+, probably fixed.\n. There's no need in localized patterns, thefuck works with commands output with LANG=C.\n. Thanks!\n. Can you post output of:\nbash\npython -c 'from psutil import Process; print(Process); Process()'\n. @smaniato, it's strange. Can you post output of this:\nbash\npython -c 'from thefuck.shells import Process; print(Process); Process()'\n. @smaniato, and of:\nbash\npython -c 'from thefuck import shells; import os; print(shells.Process(os.getpid()).parent().cmdline()[0])'\n. @smaniato, and:\nbash\npython -c 'from thefuck import shells; import os; print(shells.Process(os.getpid()).parent.cmdline()[0])'\n. @smaniato, yep, different psutil versions.\nTry to upgrade to 1.40, probably fixed =)\n. It's already handled by permission denied pattern in sudo rule.\n. Implemented by internal priority mechanism in 1.36.\n. Maybe it's better to not monkeypatch subprocess module and just use:\npython\nDEVNULL = open(os.devnull, 'w')\nIt works on both python versions.\nAlso, FileNotFoundError is inherited from OSError, so maybe just handling OSError will be ok.\n. Fixed =)\n. Thanks!\n. It's a cool idea, but we can't use command line arguments, because previous command can be cmd --remove or something, and for this situation fuck wouldn't work.\n. Rule was added by @SanketDG in 1.38.\n. Thanks!\n. Thanks!\n. Thanks!\n. And what this command will do?)\n. I think will be cool to use pyinstaller in combination with script similar to used in lein. But I'm too lazy for testing script on all platforms =)\n. It's already implemented for bash and zsh:\n``` bash\n\u279c git brnch\ngit: 'brnch' is not a git command. See 'git --help'.\nDid you mean this?\n    branch\n\u279c  fuck\ngit branch [enter/ctrl+c]\n* master\n\u279c fc -ln -3\ngit brnch\nfuck\ngit branch\n``\n. What shell you use?\nWhat version of thefuck?\nAre you use latest version of the alias?\n. Is it reproduces with current version?\n. It's already implemented in thesudo` rule:\n``` bash\n\u279c apt-get install vim\nE: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\n\u279c fuck\nsudo apt-get install vim\n[sudo] password for nvbn:\nReading package lists... Done\n...\n```\n. It's strange, works for me:\n``` bash\n\u279c cat restart.sh \n!/bin/bash\necho 'WARNING: timestamping does nothing in combination with -O. See the manual\nfor details.\nololo.log: Permission denied\nkill: No such process\ndevexp:~/www/bro $ ./restart.sh: line 13: /var/www/bro/bro.log: Permission denied'\n\u279c ./restart.sh \nWARNING: timestamping does nothing in combination with -O. See the manual\nfor details.\nololo.log: Permission denied\nkill: No such process\ndevexp:~/www/bro $ ./restart.sh: line 13: /var/www/bro/bro.log: Permission denied\n\u279c fuck\nsudo ./restart.sh [enter/ctrl+c]\n```\n. Try to upgrade to 1.39, probably fixed.\n. Thanks!\n. Thanks!\n. The way of handling history was changed in previous releases.. Looks like fixed (tested with bash and zsh):\n``` bash\n\u279c  touch /test\\ file\ntouch: cannot touch \u2018/test file\u2019: Permission denied\n\u279c  fuck\nsudo touch /test\\ file [enter/ctrl+c]\n[sudo] password for nvbn: \n\u279c  ls /\nbin    couchdb.stderr  etc         initrd.img.old  lib64       mnt   root  srv        tmp  vmlinuz\nboot   couchdb.stdout  home        lib             lost+found  opt   run   sys        usr  vmlinuz.old\ncdrom  dev             initrd.img  lib32           media       proc  sbin  test file  var\n```\n. Fixed in previous releases.. Thanks!\n. Currently it writes to stdout:\n``` bash\n\u279c  thefuck-alias > out\n\u279c  cat out\nTF_ALIAS=fuck alias fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'\n```\n. Thanks!\n. It's strange, works for me:\nbash\n\u279c \u043f\u0432\nzsh: command not found: \u043f\u0432\n\u279c fuck\ngd [enter/ctrl+c]\n\u279c alias gd\ngd='git diff'\n. Can you post output of alias?\n. Thanks!\n. Thanks!\n. In which file it should be?\n. Ok, cool =)\n. Thanks!\n. The way of handling history was changed in previous releases.. Thanks!\n. Why you use uppercase for variables?\n. Nah, I'll change it by myself. I'll add support of prepare functions to rules and merge this pull request in nearest time =)\nAlso, there's convention in python community that variable written in uppercase is a constant, but it's not like const or let, it's more like define. So most of time it's a bad practice to use uppercase variable =)\n. psutil already in dependencies, maybe something gone wrong when you called pip install thefuck?\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks a lot!\n. @dannion you should run something like:\nbash\nsudo pip3 uninstall thefuck\nsudo pip2 install thefuck\n. Thanks!\n. Currently the rule supports aliases.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks, fixed.. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. @kengz stable release will be on the weekend, I need to code some stuff before it.\n. Should work properly in 1.48+\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Probably you should reinstall thefuck:\nbash\npip uninstall thefuck\npip install thefuck\n. Thanks!\n. Fix is a bit different =)\n. @SanketDG your fix worked too, but only with 2.7. Also it mixes bytes and strings, it's a bit error prone.\n. @SanketDG .encode works in python 3, but I meant this - https://travis-ci.org/nvbn/thefuck/builds/65711118\n. @SanketDG, and also the problem with bytes in python 3:\n``` python\nIn [1]: cmd = 'ls -la'\nIn [2]: cmd_bytes = cmd.encode('utf-8')\nIn [3]: cmd_bytes.replace('-la', '-lah')\nTypeError                                 Traceback (most recent call last)\n in ()\n----> 1 cmd_bytes.replace('-la', '-lah')\nTypeError: 'str' does not support the buffer interface\n```\nSo when _expand_aliases returns bytes, a rule, which uses .replace, will be broken.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\nAlso, sudo patterns are case insensitive.\n. Thanks!\n. App requires python 2.7+ or 3.3+.\nPython 2.6 isn't supported.\n. Thanks!\n. Thanks!\n. Wow! Thanks!\n. Thanks!\n. Thanks!\n. I tested with a dummy rule:\n``` python\ndef match(command, settings):\n    return True\ndef get_new_command(command, settings):\n    return 'echo works'\npriority = 10\n```\nAnd it works:\n``` bash\n\u279c git brnch\ngit: 'brnch' is not a git command. See 'git --help'.\nDid you mean this?\n    branch\n\u279c fuck\necho works [enter/ctrl+c]\nworks\n```\nWhat's in your settings.py?\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Something like this should print debug information in 1.49+:\nexport THEFUCK_DEBUG=true\ngit push\nfuck\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Is this issue can be closed?\n. Thanks, @scorphus \n. Thanks!\n. There's already exists cp_omitting_directory rule for doing similar stuff.\nI added pattern from your rule to it.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks! Now installation is a lot simpler =)\n. Thanks!\n. Rule git_push_force is a bit dangerous, by default it'll be disabled.\nAlso I added rule git_push_pull, that pulls when push was rejected. I guess it'll better in most of rejections.\n. Thanks!\n. Thanks!\n. Probably fixed in 2.2.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. I added convertation from md to rst with pandoc.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. @Hipska can you try with 3.7?\n. @Hipska, does it repeats with latest version?. @Hipska can you try with 3.15?. Looks cool, thanks!\n. Thanks!\n. Should work in 2.7.\n. Thanks!\n. Thanks!\n. I added support for --version, --help, --alias [name], if none of them passed as a first argument (sys.argv[1]), app works like before. So backward compatibility wasn't broken.\n. Already implemented.. Probably fixed in 2.7.\n. Is it ok with 2.8?\n. Thanks!\n. Thanks!\n. Thanks!\n. @mcarton I guess I should add something like install script that used in docker-compose (https://github.com/docker/compose) for fixing dependencies problems.\n. We're checking pip version in setup.py already for a while, so this issue is obsolete.. Thanks!\nSize of pr is ok.\n. Thanks!\n. Thanks!\n. Something strange, try:\nbash\npip uninstall thefuck\npip install thefuck\n. Maybe this will help:\nbash\nrm -rf /Library/Python/2.7/site-packages/thefuck*\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Actually project name is The Fuck =)\n. Actually project name is The Fuck =)\n. @mcarton misread the patch.\n@myoung34 thanks!\n. You should install python-commandnotfound / python3-commandnotfound for apt-get rule.\n. @mcarton yep =)\n. Thanks!\n. Can I merge this, or it's in progress?\n. @mcarton, @scorphus Thanks!\n. @mcarton I've added cache for aliases, now it's slow only in the first run in a session..\n. @ukch try to upgrade to 2.9, it's faster.\n. @libeclipse it's strange. Can you post debug output? You can enable it with:\nbash\nexport THEFUCK_DEBUG=true\n. Thanks!\n. Added in 3.0\n. In 3.0 when alias isn't configured it shows useful message:\nbash\n\ud83d\udd27  fuck\nSeems like fuck alias isn't configured!\nPlease put eval $(thefuck --alias) in your ~/.zshrc.\nMore details - https://github.com/nvbn/thefuck#manual-installation\n. exclude_rules and THEFUCK_EXCLUDE_RULES were added in 3.0.\n. I'm using zsh too, but:\n``` bash\n\ud83d\udd27  git comit -m \"hello again\"\ngit: 'comit' is not a git command. See 'git --help'.\nDid you mean this?\n    commit\n\ud83d\udde1  fuck\ngit commit -m \"hello again\" [enter/\u2191/\u2193/ctrl+c]\n[master c1b5ac3] hello again\n 1 file changed, 1 insertion(+), 1 deletion(-)\n```\nCan you post output of:\nbash\nalias fuck\n. Thanks!\n. Can you remove ~/.thefuck/.thefuck-cache and measure time again?\n. And can you post output of:\nbash\nexport THEFUCK_DEBUG=true\ngit br\nfuck\n?\n. Thanks for the data.\n\n(also kinda weird that it says \"The default values are as follows\", when \"require_confirmation = False\" was in the file by default (commented out) and fuck used True...)\n\nIt's because it was generated by the old version of app, like 1.xx.\n. Thanks!\n. Thanks!\n. Thanks!\n. You should try thefuck plugin for oh-my-zsh - https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/thefuck, it's almost doing what you want.\n. Fixed in 3.2.\n. Thanks!\n. Thanks!\nCurrently ~/.thefuck have a greater priority, then ~/.config/thefuck, so it shouldn't break compatibility, even with old config's backups.\n. Thanks! It'll help too much =)\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Can you post your .bashrc?\nI've tried to repeat, but it works correctly:\nbash\nnvbn@nvbn-XPS13-9333:~$ eval \"$(thefuck --alias)\" \nnvbn@nvbn-XPS13-9333:~$ apt-get search nginx\nE: Invalid operation search\nnvbn@nvbn-XPS13-9333:~$ fuck\napt-cache search nginx [enter/\u2191/\u2193/ctrl+c]\ngunicorn - Event-based HTTP/WSGI server\n...\n. All cool, but thefuck/shells.py#L66 looks like rocket science.\nCan you try branch 394-history-limit, is it works fast on your machine?\n. @lovedboy 394-history-limit helped you and can merge it into master?\n. Can you post your .zshrc?\n. Try to replace:\neval TF_ALIAS=fuck alias fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'\neval alias fuck='TF_ALIAS=fuck eval $(thefuck $(fc -ln -1))'\nwith:\neval \"$(thefuck --alias)\"\n. Thanks!\n. @mcarton I'll try to update script.\n@blakeembrey btw, fix for the problem will be in the next release.\n. @blakeembrey try to update to thefuck 3.2, probably fixed.\n. @mcarton I guess it'll be better to continue support python 2.7. In semi-popular ubuntu 12.04 only 2.7 and 3.2 (not supported by thefuck) are availble.\n. Can you post your .bashrc?\n. Thanks!\n. I think current name is ok =)\nAlso f isn't a good name for the project, it isn't googleable.\nAs @mcarton mention, you can use f alias if you want:\nbash\neval \"$(thefuck --alias f)\"\n. > However on the command line the default alias name fuck is intended to be used as a verb, which I do not find appropriate.\n\nI would prefer if the default, documented alias name would be the magic word please.\n\nDefault alias will stay fuck, just use another alias:\nbash\neval \"$(thefuck --alias please)\"\n. Can you post your .bashrc?\n. It's strange, can you post output of thefuck --alias?\n. Is it works now?\n. Thanks!\n. @lovedboy thanks)\n. Thanks!\n. Can you post result of thefuck purge gitbook?\n. purge is an alias?\nAnd also can you post result of thefuck git bran?\n. Fixed in previous releases.. The code isn't working, rule and tests fails with:\nTypeError: translate() takes exactly one argument (2 given)\n. I've made a few changes, please check branch pakrym-master.\n. @pakrym they said:\n\nSince win_unicode_console replaces the streams in order to support Unicode, win_unicode_console.enable has to be called before colorama.init so everything works as expected.\n\nSo win_unicode_console.enable call is before colorama.init.\nAlso I've updated code in branch pakrym-master, please check is it works on windows correctly =)\n. @pakrym ok, now it calls win_unicode_console.enable before import.\nIs it work ok?\n. Checked by myself, seems working.\n. @makalaaneesh sure!\n. Can I close this issue?\n. Thanks!\n. Thanks!\n. As temporary solutin alter_history settings option can be used.\n. Thanks!\n. Thanks!\n. Thanks!\n. In 3.3 it only shows warning when histfile is readonly. Also now alter_history can be used for disabling writing to histfile:\npython\nalter_history = False\nOr:\nbash\nexport THEFUCK_ALTER_HISTORY=false\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. We no longer use install script.. Thanks @scorphus. I'm also planning on removing proxy functions from __init__, so this pr is wip =)\n. We have PYTHONIOENCODING=utf-8 in alias for a while, so I guess issue is obsolete.. Thanks!\n. @lkmnds, can you post output of pip --version?\n. This kind of problem was caused by outdated pip, but now we check for pip version in setup.py.. Implemented in #611 =). Test was changed a while ago, now everything should work.. Thanks!\n. Nice idea, but I guess it hardly can be implemented without some fs-level support of snapshots.\n. @dnwts I mean somethig like this:\n```\nls\nsnapshot 1 created implicitly\nrm myfile\nsnapshot 2 created\nfuck no\nrollback to snapshot 1\ngit commit -am test\nsnapshot 3 created\ngit branch -D test\nsnapshot 4 created\nfuck no\nrollback to snapshot 3\n```\nIt'll be more generic and not so hard to implement with fs-level snapshots (btrfs, zfs).\n. @Kurtoid, as fast as I know, btrfs snapshots are lightweight and fast. But I can be wrong.\nAnd implementation shouldn't be that straightforward, there should be gc for old snapshots and ton of other things.\nAnd I guess it should be a separate project =)\n. Thanks!\n. Fixed in previous releases.. psutil already mentioned in setup.py as install_requires - https://github.com/nvbn/thefuck/blob/master/setup.py#L25.\n. It happens with some old versions of pip, I guess it'll be better to check pip version in setup.py.\n. \u041a\u0430\u043a\u0430\u044f \u043e\u0441?\n. \u0410 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0430 \u043a\u0430\u043a\u0430\u044f?\n. Thanks!\n. Should work fine in 3.6.\n. Thanks!\n. Thanks!\n. @mcarton it would be nice =)\n. I guess it's some problem in distutils-r1, because thefuck only provides thefuck.types module, not types. Does it happen with python 3?\nAlso setup.py build works fine for me, even with python 2:\nbash\nthefuck master fuck2 \ud83d\udd27  python --version\nPython 2.7.10\nthefuck master fuck2 \ud83d\udd27  python setup.py build\nrunning build\nrunning build_py\nrunning egg_info\nwriting requirements to thefuck.egg-info/requires.txt\nwriting thefuck.egg-info/PKG-INFO\nwriting top-level names to thefuck.egg-info/top_level.txt\nwriting dependency_links to thefuck.egg-info/dependency_links.txt\nwriting entry points to thefuck.egg-info/entry_points.txt\nreading manifest file 'thefuck.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwriting manifest file 'thefuck.egg-info/SOURCES.txt'\n. Thanks!\n. Can you post output of thefuck --version?\n. Treefiddy for one.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Try to upgrade to 3.6.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. @chantisnake already in pip =)\n. @scorphus it woild be nice to have them.\n. Thanks!\n. Thanks!\nI've added it to appveyor.\n. Thanks!\n. Yep, you're right. I'll think about how it can be made.\n. Thanks!\nI've changed rule a bit.\n. Thanks!\n. Thanks!\n. Thanks!\nMerged in d6c2c72. Strange that github didn't see that =)\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. > whereas in fact it is ln -s  \nAre you sure?\n\u279c  /tmp echo origin > origin\n\u279c  /tmp ln -s origin dest\n\u279c  /tmp cat dest\norigin\n. Added in 3.10\n. @sbrl you can fork it and replace all fuck in code with butterfly, or rainbow or whatever you want.\n. Thanks!\n. Thanks!\nI've made a few changes.\n. Try to use thefuck from pip.\n. Thanks!\n@scorphus, accidentally skipped this pr  \ud83d\ude0a.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. So I've checked a bit, and alias like:\nbash\nalias fuck-it='export THEFUCK_REQUIRE_CONFIRMATION=False; fuck; export THEFUCK_REQUIRE_CONFIRMATION=True'\nshould work.. After changes in #620 we can have -y/--yes:\n```bash\n\u279c git br\ngit: 'br' is not a git command. See 'git --help'.\nDid you mean one of these?\n    branch\n    var\n\u279c  fuck -y\ngit branch\n* 614-repeate-option\n  620-command-line-arguments\n  Asday-master\n```. Implemented in 3.16.. Maybe it can be a bit simpler, just a different alias like:\nbash\nalias fuckit='THEFUCK_REQUIRE_CONFIRMATION=0 fuck'\n?\n. Fixed in previous releases.. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n\na single 'return value' statement\n\nIn short functions I prefer to use multiple return instead of changing variable.\n. Thanks!\n. You can return a list of fixed commands, like in no_command rule.\n. thefuck already expands aliases, for example:\n``` bash\n\u279c gp\nfatal: The current branch test has no upstream branch.\nTo push the current branch and set the remote as upstream, use\ngit push --set-upstream origin test\n\n\u279c fuck\ngit push --set-upstream origin test [enter/\u2191/\u2193/ctrl+c]\n```\n. Probably fixed in 3.17.. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. @josephfrazier, ooops, sorry, I just forgot about this pr.\nI'll check it in the nearest time and will merge it.\nThansk.. Thanks! Merged in master.. Thanks!\n. Thanks!\n. Fixed, now we run coveralls only on python 3.6 + linux build.. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!. Fixed in previous releases. \n@tusharmakkar08, try to upgrade thefuck.. Thanks!. Nice idea, it's very easy to implement rule like that. Look at the implementation and tests.. Added in 3.15.. Thanks!. Thanks!. There's special rule for that - ls_lah. If you don't want this behavior you can easily disable it by changing ~/.config/thefuck/settings.py:\npython\nexclude_rules = ['ls_lah']\nOr with environment variable:\nbash\nexport THEFUCK_EXCLUDE_RULES='ls_lah'. Done =). Have you tried restarting shell or doing source ~/.bashrc?. There's a bug, it should suggest .bash_profile if .bashrc doesn't exists.. Fixed in 3.16.. Thanks!. Added work in 3.15.. @josephfrazier we actually should stop using bashlex because of gpl license of it.. @LoZeno try 3.14. Nice idea, I've added something similar in path_from_history rule, it works like:\nbash\n\u279c cd thefuck\ncd: no such file or directory: thefuck\n\u279c fuck\ncd ~/exp/thefuck [enter/\u2191/\u2193/ctrl+c]. Added in 3.15.. It was changed more than year ago by #385. You just need to run:\nbash\nmv ~/.thefuck ~/.config/. What exactly you've put into .bash_profile? Try just:\nbash\neval $(thefuck --alias FUCK). @BenGitsCode have you run source ~/.zsrhc or relaunched the shell after that?. So I guess we should add --winpty option, that would prepend alias with winpty:\neval $(thefuck --alias --winpty)\n?. Strange, I can't reproduce this behavior. Can you show how you configured the alias?. Thanks!. Thanks!. Thanks!. Thanks!. I suggest a few changes:\n remove comments/doctrings at the top of files;\n move sudo-related stuff to sudo rule;\n* for no_command case try to find most similar command, like, for example, in react_native_command_unrecognized rule.. Thanks!. Thanks!. Thanks!. Thanks!. Thanks!. Maybe we should also handle situations, where yarn not suggests us anything, like:\n\u2717 yarn whyy\nyarn whyy v0.21.3\nerror Command \"whyy\" not found.. Thanks!. Thanks!. It shouldn't.\nWhat version you use?\nWhat os?. I guess the nicest way would be if first call to fuck would just configure everything automatically.\nSo it would be like:\npython\n\u279c fuck\nAlias configured successfully. To apply changes please relaunch your shell or just run:\n   source ~/.zshrc. So I've implemented something like this:\n\n(not released yet). Should work in 3.15.. Thanks!. In newer versions when alias isn't configured it works like:\nbash\n\u279c  fuck\nSeems like fuck alias isn't configured!\nPlease put eval $(thefuck --alias) in your ~/.zshrc and apply changes with source ~/.zshrc or restart your shell.\nOr run fuck second time for configuring it automatically.\nMore details - https://github.com/nvbn/thefuck#manual-installation. Because of #620 now we can have something like this:\n\n. Implemented in 3.16.. \"Did you mean\" prediction isn't function of thefuck. Don't know about bash, but in zsh some https://github.com/robbyrussell/oh-my-zsh plugins can do that.. Thanks!. Thanks, I've changed the rule a bit.. Thanks!. Now with zsh and bash we can do:\n```bash\n\u279c  git br\ngit: 'br' is not a git command. See 'git --help'.\nDid you mean one of these?\n    branch\n    var\n\u279c fuck -y\ngit branch\n* 620-command-line-arguments\n\u279c fuck -v\nThe Fuck 3.15 using Python 3.5.1+\n\u279c fuck --help\nusage: thefuck [-v] [-a [ALIAS]] [-h] [-y] [command [command ...]]\npositional arguments:\n  command               command that should be fixed\noptional arguments:\n  -v, --version         show program's version number and exit\n  -a [ALIAS], --alias [ALIAS]\n                        [custom-alias-name] prints alias for current shell\n  -h, --help            show this help message and exit\n  -y, --yes             execute fixed command without confirmation\n```. Implemented in 3.16.. Thanks!\nI've squashed commits and somehow github can't recognize that pull request was merged.. Thanks!. Does it still happens in 3.16?. Please use thefuck from pip. \nIn ubuntu repo it's very outdated and python 2 only.. Probably you can, but you need to implement alias/function for this shell. If you'll do that, feel free to make a PR.. @rhu1988 @Primajin try to add in .bashrc:\nexport PATH=\"$PATH:~/.local/bin/\"\nFix for wsl will be in the next release.. It's probably an unsolvable problem, because thefuck reruns previous command for getting its output.\nIf it's a different problem, please post fuck output with enabled debug output export THEFUCK_DEBUG=true.. @goldingn fixed in 3.19.. It was showing build status for non-master branch, fixed.. In 3.17 when alias isn't fuck the app prints Nothing found.. Should work like you expect in 3.17.. As I remember it's https://github.com/robbyrussell/oh-my-zsh/blob/master/themes/robbyrussell.zsh-theme\nAnd probably it's a default theme in oh-my-zsh.. Thanks!. Seems like on WSL you also need to add in your .bashrc, before thefuck --alias, something like this:\nexport PATH=\"$PATH:~/.local/bin/\"\n. Is it fails with 3.17 too?\nCan you try with python 3?. You can already use j/k.. Can you post your extended rule?. Also, can you try 3.17?, probably fixed.. Try to install thefuck globally:\nbash\npip install thefuck. You can try to reinstall thefuck globally or change your path:\nexport PATH=\"$PATH:~/.local/bin/\". I've updated readme, I guess it would be better to install it globally by default.. You need to remove eval $(thefuck --alias) from your .bashrc.. Thanks!. Fixed in 3.20. @Googulator sorry for so huge delay. I've tried a bit simpler approach, now it configures alias if the previous fuck was less then 60 seconds ago and from the same shell.. Fixed in 3.20. Thanks!\nI somehow haven't noticed this pr.. Done.. Thanks!. @Nightfirecat 3.19 with fix was released today.. Related:\n https://github.com/pypa/setuptools/issues/926\n https://github.com/ninjaaron/fast-entry_points. Before:\nbash\nthefuck --alias  0,29s user 0,01s system 99% cpu 0,303 total\nAfter:\nbash\nthefuck --alias  0,13s user 0,02s system 99% cpu 0,149 total. Thanks!. As a second step we can get previous commands from the log instead of the history, so we can gracefully handle typos in fuck like:\nbash\ngit brunch\nfcuk\nfuck # => git branch\nRelated: #453, #221. In action:\n. It was a workaround for older version of thefuck, now we have -y option that I forgot to mention in the readme. So now there's no need for fuck-it or similar alias.. @ilovezfs it looks like there's already a lot formulas with python3 in dependencies.\n. @ilovezfs yep, it's a bit more complicated than I thought.. @ilovezfs thanks, would it be possible to have an option to install it with Python 2? In case some users have custom rules that work only with Python 2.. @MichaelKim0407 you just need to upgrade to 3.23.. @AntonOlsen current LTS has python 3.5 (even 14.04 has python 3.4), and it doesn't interfere with python 2, after installation python 2 still be used by default. So something like this shouldn't break anything:\nbash\npip uninstall thefuck\napt install python3 python3-dev python3-pip\npip3 install thefuck. You can get an alias with thefuck --alias, modify it and just put in .bashrc or another config. But you need to manually change it after thefuck updates.. I upgraded readme too early. In the next release it will be output.\nAt the moment you can use stdout/stderr instead. . Thanks!. @NyanKiyoshi the old link should work from now.. Thanks!. Python 2 support is deprecated.\nIs it also happening with Python 3?. Thanks!. Fixed in #705 . Thanks!\n@Epse enabled_by_default = True isn't required in rules, it's assumed by default.. Thanks!. @scorphus, thanks!. Thanks!. Thanks!. Thanks!. Thanks!\nI've made match a bit more strict.. Thanks!. Try to run sudo pip3 install -U thefuck. What zsh version do you have?. Thanks!. Thanks!. Have you tried to relaunch shell/reboot after disabling instant mode?. Do we need to support Python 3.3?. Thanks!. Thanks!. Thanks!. Sorry for slow response, it's great idea.. Thanks!. We already have switch_lang rule, you just need to add your language to https://github.com/nvbn/thefuck/blob/master/thefuck/rules/switch_lang.py#L6. @thedrow what happens when you press shift+letter?. Thanks!. On linux you need to install it with pip from python 3 and it will use python 3.\nOtherwise it can't use python 3.. @ErikBrendel, can you post the line from .zshrc where you configure thefuck?\nAnd also what oh-my-zsh plugins do you use?. Thanks!\nWe don't actually use functional tests for rules, because it's too slow, so I removed it.\n. I squashed commits manually, it's not just closed, but merged =). Fixed the problem with apt_get rule, but I can't reproduce psutil._exceptions.AccessDenied: psutil.AccessDenied.\nCan you try the latest version from git?. @scytherswings the latest release already contains this changes. @scytherswings I should've been closed the issue after release\u263a\ufe0f. Thanks!. Python 2.7 needs pathlib2. It's already deprecated and when we will finally drop support of Python 2 we will remove this line.. Python 2.7 support is deprecated, please upgrade to Python 3.. We have two separate rules for this, and thefuck isn't that smart too apply more than one rule by default:\n```bash\n\u279c gir commiy\nzsh: command not found: gir\n\u279c fuck\ngit commiy [enter/\u2191/\u2193/ctrl+c]\ngit: 'commiy' is not a git command. See 'git --help'.\nDid you mean this?\n    commit\n\u279c fuck\ngit commit [enter/\u2191/\u2193/ctrl+c]\n``\nBut it should work withfuck -r.. Do you havepython-devinstalled? If no, try to install it and runpip install -U psutil.. Does it work if you just execute eval $(thefuck --alias --enable-experimental-instant-mode)` in bash?. It doesn't work like that. It needs to be configured for every shell instance.\nWe're working on speeding instant mode up, but it's going a bit slow.. It's not possible with instant mode, because instant mode works like a wrapper on top of your shell, it actually opens another instance of shell.\nBut we're slowly working on shell_logger that will make everything faster, but at the moment there's no eta.. You can use whatever you want as an alias, like:\nbash\neval $(thefuck --alias better-less-profane-name). Thanks, but there's already git_not_command rule that's doing the same.\nAre there some cases where it doesn't help?. Thanks!. @jrr the fix is included in 3.27, should be available in homebrew soon. Thanks!. Thanks!\nChanged code a bit for better suiting our code style and squashed it manually.. Can you try to run:\nbash\nexport THEFUCK_DEBUG=true\neval $(thefuck --alias --enable-experimental-instant-mode)\nAnd echo $PS1 after that.. It looks like they are conflicting.\nBut instant mode will be replaced with shell_logger that shouldn't conflict with pure.. Thanks!. Thanks!. Thanks!. Thanks!. Thanks!. Thanks!. Thanks!. Looks fun, thanks!. Thanks!. @Rom1deTroyes are you using experimental instant mode or shell logger? Otherwise thefuck should rerun the command with LANG=C and get error message in English.. There's already thefuck -r. But it doesn't work well with experimental instant mode and shell logger.. At the moment by default thefuck gets output by reruning command with LANG=C, so the output should be in English. Only in the experimental instant mode or with shell logger thefuck may use translated output.\nAs we will need to support translations in other rules in the future, I think we will need something like this but more generic.\nBut for this rule, maybe it will be better to just check that the command is cat and an argument is a directory? . Command has script_parts property, so you don't need to work with it as a string, it can be something like os.path.isdir(command.script_parts[1]), but with proper checks.\nAlso, instead of checking that the app is cat manually, you can use for_app decorator.. A bit too far =)\nI think it will be enough to just mock, like in prove_recursively rule.. Looks good, thanks!. I don't know how snap works, but will it be updated automatically after each release or it requires some manual actions?. @mati865 sounds good!\nI guess it will be the best to place snapcraft.yaml in the root of the repo, there're already a few yaml configs.. Thanks!. Thanks!. Thanks!. Thanks!. Thanks!. Unfortunately the changes aren't ready to be merged. At the moment it's too much complicating development process.. Thanks!. Thanks!. Diff is huge, thanks \ud83d\ude00!. Thanks for making changes and testing!\nI've merged #844 as it was first.. Thanks, but there's already switch_lang rule. I think it will be better to modify it instead of creating a new rule.. Thanks!. Thanks!. Thanks!. Thanks!. It seems like it's not related to arrow keys, we just don't have a rule for correcting cat to ls.\nCan you try with another command to be sure? Something like git br.. Haven't released thefuck for a while and the rule wasn't included in the previous release, should work with 3.28:\n\u279c  ~ cat go\ncat: go: Is a directory\n\u279c  ~ fuck\nls go [enter/\u2191/\u2193/ctrl+c]\nbin  pkg  src. Thanks!. Thanks for PR, can you please check tests? It looks like it started to replace space with ;:\n```\n____ test_get_new_command[command1-ls -la] _______\ncommand = Command(script=\u03bb\u03c3 -\u03bb\u03b1, output=), new_command = 'ls -la'\n    @pytest.mark.parametrize('command, new_command', [\n        (Command(u'\u0444\u0437\u0435-\u043f\u0443\u0435 \u0448\u0442\u044b\u0435\u0444\u0434\u0434 \u043c\u0448\u044c', ''), 'apt-get install vim'),\n        (Command(u'\u03bb\u03c3 -\u03bb\u03b1', ''), 'ls -la'),\n        (Command(u'\u05e9\u05e4\u05d0-\u05e2\u05e7\u05d0 \u05df\u05de\u05d3\u05d0\u05e9\u05da\u05da \u05d4\u05df\u05e6', ''), 'apt-get install vim'),\n        (Command(u'\u05da\u05d3 -\u05da\u05e9', ''), 'ls -la')])\n    def test_get_new_command(command, new_command):\n\n  assert switch_lang.get_new_command(command) == new_command\n\nE       AssertionError: assert 'ls;-la' == 'ls -la'\nE         - ls;-la\nE         ?   ^\nE         + ls -la\nE         ?   ^\n/home/travis/build/nvbn/thefuck/tests/rules/test_switch_lang.py:33: AssertionError\n```. Thanks!\n\nI've changed it a bit to make it possible to use similar solution for other languages in the future.\nMerged manually in https://github.com/nvbn/thefuck/commit/8093f7cab800089ee1007c4b9e3e3e5479fcac3d. Thanks!. Thanks!. It's shell-dependent, but usually every interaction with shell builtins are made inside an alias/function, outside of thefuck.\nFor example, a call that adds a corrected command to history in bash.\n. Looks good, thanks!. The idea looks interesting, and I guess there'll be more use cases for post-match.\nA few things that would be awesome to have:\n fix lint errors, as @josephfrazier suggested\n add a functional test to ensure that it works with different shells and configurations, you can run them locally with docker\n* add post_match to the README\nThanks!. Is the issue related here?\n. msvcrt.getch returns H for \u2191 and P for \u2193?\n. @scorphus I've added comment.\n. Maybe we shouldn't delete entry from history without alter_history?\n. Thanks =)\n. @josephfrazier I think it should be ok to remove ;, as it's not required by grammar rules. ",
    "curtisz": "Haha this made my day. However, I could not replicate this on Linux Mint 17 (Ubuntu 14.04).\n. ",
    "brianshumate": "The fsck would not succeed as a non-root user anyway.\n. @mvirkkunen given enough fucks, i think this could totally fuck one's system up, yes.\n. ",
    "LarsMichelsen": "Can reproduce this on ubuntu 14.10. For me I just need to execute this twice:\n```\n\n/usr/lib/command-not-found fuck\nNo command 'fuck' found, did you mean:\n Command 'suck' from package 'suck' (universe)\n Command 'fsck' from package 'util-linux' (main)\nfuck: command not found\n```\n\nThe order of suck and fsck is changed on each call. When fsck is shown first, the error appears.\nWhen I remove the subshell from the shell alias this is easily visible:\n```\n\nfuck\nNo fuck given\nfuck\nfsck\nfuck\nsuck\n```\n. btw. I just added an additional alias for testing. It simply outputs the command fuck would execute:\n\nalias tryfuck='thefuck $(fc -ln -1)'\n. Confirmed. Fixed for me.\nHowever, I would prefer to make the rule \"thefuck/rules/no_command.py\" ask before executing the command suggested by /usr/lib/command-not-found. Would make it a lot less dangerous.\n. Maybe try https://github.com/nvbn/thefuck/issues/1#issuecomment-94062948\n. I did not find any other way to get the last command neither. The current bash has the last command only in memory which does not seem to be easily accessible from the python script.\nIt should be easier to replace the outer subshell, making the python script call the fixed command. Changing the way the commands are executed would make it also possible to let fuck decide whether or not execute commands directly, or showing them to the user for confirmation before executing them, for example by configuration.\nHowever, when the alias is still needed it is irrelevant how complex it is. One could just make the installation easier. For example by deploying a config file below /etc/profile.d.\n. ",
    "eridal": "At first, I tested the apt-get, as shown in the README, and then tried running fuck again, and that was the first time the error happened.\nThen I closed the console, and opened another again; and that's the output you're seeing.\nbtw, I'm running Linux where 3.13.0-49-generic #81-Ubuntu SMP Tue Mar 24 19:29:48 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n. ",
    "mvirkkunen": "@brianshumate Wouldn't a third fuck fix that though?\n. ",
    "zmarouf": "fuck needs audio speech recognition. This way if it fucks things up and you end up screaming 'fuck!' out loud it will know not to do that again... or not. Fuck it if I know.\n. ",
    "sebie": "I got to admit, you created a damn good title for this issue.. \n@zmarouf Deffenitly a +1 on that!\n. ",
    "revmischa": "alias nostop=\"sudo halt\"\n. +1\n. learn to spell, dummy\n. -1 nobody gives a fuck about freebsd\n. Installing pypi modules system-wide via pip fucks your shit up on OSX. You get all kinds of permissions errors and general fuckery. pip should really only be used for a venv.\n. My personal preference: https://github.com/landondyer/kasm/blob/master/LICENSE\n. ",
    "g76r": "I think @LaMi- pointed the most important issue: proposing once suck before fsck and the other time fsck before suck is not acceptable, since order matters: suck is far better before fsck\n. ",
    "academo": "same here osx  \"No fucks given,\" is always the output\n. to expand information\n~$ fuck rules\nNo fuck given rules\n. I think the problem with this is about this rule\nhttps://github.com/nvbn/thefuck/blob/master/thefuck/rules/no_command.py\nThe osx terminal doesn't return suggestion (at least not mine) about possible commands and that is why it can not find a command to execute.\nExample osx:\n~$ puthon\nbash: puthon: command not found\nvs linux:\n~$ puthon\nNo command 'puthon' found, did you mean:\n Command 'python' from package 'python-minimal' (main)\n Command 'python' from package 'python3' (main)\nzsh: command not found: puthon\n. I think this is related to https://github.com/nvbn/thefuck/issues/2 and https://github.com/nvbn/thefuck/issues/23 \n.  @skyhighwings  @nvbn  I found an implementation of command not found https://github.com/bfontaine/homebrew-command-not-found but it is not actually trying to correct command names but only suggesting to install packages you don't have if you write the right name.\n. @skyhighwings I think you can write them in other languages and then run it into python I don't know python either.\n. ",
    "feliperezende": "\u279c  ~  thefuck git brnch\ngit branch\ngit branch\n\u279c  ~\n. ",
    "mateuszbuda": "Do you know what is the path to command_not_found binary on osx?\nAnd what does the ~/.rules file contain on linux?\nI guess setting command_not_found and creating correct rules file may help.\n. ",
    "cdipaolo": "having this same issue with pretty much anything that isn't exactly from the example on the front. Doing a git example similar to the front page git branch example gives:\n``` bash\n\u2234 ~ git statu\ngit: 'statu' is not a git command. See 'git --help'.\nDid you mean one of these?\n    status\n    stage\n    stash\n\u2234 ~ fuck\nNo fuck given\n```\n. Yeah confirming it works now on OS X 10.10\nOn Thu, Apr 23, 2015 at 8:15 PM Maurice Rickard notifications@github.com\nwrote:\n\nYep, good here with pip install on OS X 10.10.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/2#issuecomment-95784820.\n. I'd love to do this, but I won't be able to do it until this coming weekend. Lot's of work going on. If the timing is a problem let me know and somebody else can take it. A lot of the stuff below is based on @skyhighwings suggestions above\n\nHeres the implementation I think would work best. Suggestions would be welcome:\n\ndo a $PATH walk and store all executable binaries on a CSV file with a timestamp.\ninclude alias names in CSV list\non fuck, check if the timestamp is older than some config variable (default 7 days.)\nif it is older, then rewalk the $PATH.\nif current, calculate the minimum Lavenstein distance from the CSV list of commands \nif, while running through the commands, the current minimum is 1 insertion/deletion/modification, then return that command\neither ask the user or just run the command\n\n\nAlso, there might be a more efficient way of calculating the best word for our purposes rather than using the Lavenstien distance, because running it on a list takes O(words*maxLength^2) which is pretty slow. Although that would be the most accurate, so if you chose another algorithm then it would be probably necessary to prompt the user and ask if the command should be run.\n. ",
    "mrickard": "\u25b6  thefuck git brnch                                                                                                                          \ngit branch\nHowever, having aliased fuck, I get this: \n\u25b6  fuck git brnch\nNo fuck given git brnch\n. Yep, good here with pip install on OS X 10.10.\n. ",
    "Zhomart": "I just installed on OSX using $ pip install thefuck. Then added alias fuck='$(thefuck $(fc -ln -1))' to ~/.bash_profile.\n```\n$ vom\nbash: vom: command not found\n$ fuck\nNo fuck given\n$ fuck rules\nNo fuck given rules\n$ fuck rules\nCan't fuck twice rules\n$ thefuck git brnch\necho No fuck given\n```\n. ",
    "seanhamlin": "Same here, I assume this is because the previous command is not making it into the command\n$ alias fuck\nalias fuck='$(thefuck $(fc -ln -1))'\n~\n$ fc -ln -1\n~\n$\n. ",
    "grammakov": "same issue:\n```\n\u279c  ~  git st         \ngit: 'st' is not a git command. See 'git --help'.\nDid you mean one of these?\n    status\n    reset\n    stage\n    stash\n    svn\n\u279c  ~  fuck\nNo fuck given\n```\n\u279c  ~  fuck rules\nCan't fuck twice rules\n. ",
    "okonet": "+1. I'm using zsh on OS X 10.10.3\n```\n\u00bb g brnch\ngit: 'brnch' is not a git command. See 'git --help'.\nDid you mean this?\n    branch\n--- adverity/web-app \u2039develop*M\u203a \u00bb fuck                                                                                                                   1 \u21b5\nNo fuck given\n\u00bb fuck rules\nCan't fuck twice rules\n\u00bb alias fuck\nfuck='$(thefuck $(fc -ln -1))'\n```\n. ",
    "ignatov": "@nvbn Works good for me, Mac OS X 10.10, zsh. Thanks.\n. ",
    "kilojoules": "On 10.10 thefuck didn't immediately work after brew install thefuck. Is there something I ned to do for proper configuration?\n$ puthon\n-bash: puthon: command not found\n$ thefuck\nNo fuck given\n$\n. Can you clarrify these instructions? When I add bash: eval\n\"$(thefuck-alias)\" I get -bash: bash:: command not found. When I add eval\n\"$(thefuck-alias)\" I get No Fucks Given...\nBest,\nJulian\nOn Wed, Jul 29, 2015 at 10:38 AM, Pablo Aguiar notifications@github.com\nwrote:\n\nAlso, brew told you that too:\n\n\nbrew install thefuck\n[snip]\n==> Caveats\nAdd the following to your .bash_profile, .bashrc or .zshrc:\n  bash: eval \"$(thefuck-alias)\"\n\n\nOther shells: https://github.com/nvbn/thefuck/wiki/Shell-aliases\n[snip]\n\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/2#issuecomment-126011228.\n. \n",
    "scorphus": "@kilojoules thefuck is the script that reads the last command from the shell history, tries to correct it and, if so, gives it back to the shell to be ran again. This interaction has to be done by way of an alias (or function in some cases \u2013 Fish Shell for instance). You should declare your alias as the README.md states.\n. Also, brew told you that as well:\n```\n\u00bb brew install thefuck\n[snip]\n==> Caveats\nAdd the following to your .bash_profile, .bashrc or .zshrc:\n  bash: eval \"$(thefuck-alias)\"\nOther shells: https://github.com/nvbn/thefuck/wiki/Shell-aliases\n[snip]\n```\n. Oh! Certainly, that message can be improved, I'll do so, thank you for that!\nThe line you should add to your .bashrc is:\neval \"$(thefuck-alias)\"\n. Done so :arrow_up: :wink: \n. I'm experiencing the same but only for specific commands. I'm hunting it\nand will keep this updated.\nEm 13/08/2015 12:03, \"Jordan Elver\" notifications@github.com escreveu:\n\nI'm having this problem still :(\nI installed with brew install thefuck\nIf I try the example\n~ $ thefuck git brnch\nNo fucks given\nI followed the instructions to add fish function and that gives the same\noutput.\n$ fish -v\nfish, version 2.1.2\n~ $ thefuck -v\nThe Fuck 2.7\nAny ideas what's wrong?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/2#issuecomment-130722482.\n. @jordelver what's the output of thefuck git brnch if you declare debug = True in your ~/.thefuck/settings.py?\n. Hello, @jordelver! Yesterday I found some spare time to try and improve the fuck.fish function. This is how it looks now:\n\nfish\nfunction fuck -d 'Correct your previous console command'\n    set -l exit_code $status\n    set -x TF_ALIAS fuck\n    set -l fucked_up_command $history[1]\n    thefuck $fucked_up_command | read unfucked_command\n    if [ \"$unfucked_command\" != \"\" ]\n        eval $unfucked_command\n        if test $exit_code -ne 0\n            history --delete $fucked_up_command\n            history --merge\n            return 0\n        end\n    end\nend\nCan you please test it and tell me how it behaves? It's way faster now :smiley: \nThanks!\n. Hello, @jordelver! That example is \u2013 or will be \u2013 the Fish function! :smiley: Right on line 5 it calls TheFuck directly \u2013 thefuck $fucked_up_command | read unfucked_command\nThis is my attempt to improve the alias for TheFuck on Fish Shell. And I believe it's way faster, as it doesn't deal with file creating/writing/reading/deleting.\nThanks for taking the time to test it! :+1: \n. @jordelver: ping\n. Can anyone give that function a try?\n. Really, we should go back to the root of the problem. \n. So let's try and do so:\n- What OS are you on?\n- What's the output of all the following commands?\nbash\n$ pip freeze\nbash\n$ python -c 'import sys; print(sys.version)'\nbash\n$ which python\nbash\n$ ls - lha $(dirname $(dirname $(which python)))/lib/py*/site-packages/\nbash\n$ python -c 'import psutil; print(psutil); print(psutil.__version__);'\nThanks!\n. Sorry, I'm so used giving support to Linux users... How did you install TheFuck?\nPlease paste the output of:\nbash\n$ ls /usr/local/Cellar/thefuck/*/libexec/vendor/lib/python2.7/site-packages/\n. @jordelver: Sorry for delay, I've had an intense day.\n1. What does $ ls -lhart (which thefuck) tell you?\n2. Also, do other unfucks work? Such as:\n   1. $ thefuck echoo ok\n   2. $ thefuck cd non-existing-dir\n   3. $thefuck brew intall\n3. Would you try upgrading Fish and TheFuck? A.k.a.:\n$ brew update\n   $ brew upgrade fish thefuck  # please copy and paste output of this one\nThanks!\n. @jordelver: ping :smile: \n. Closing this one for now.. Closing this one for now.. Closing this one for now.. Fixed in 9ba36c9. Please check above referenced commit. BTW, I've subscribed to https://github.com/fish-shell/fish-shell/issues/1362 to make future amendments to the documentation.\n. And thanks @mbirth for pointing out the solution.\n. Yes, it does. The wiki contains a working function which makes confirmation work. We can close this issue.\n. Great, @nvbn! I like the latest changes! And, as expected, the error does not persist anymore, thanks!\n. Hey, @Kurtoid, what if you take the following approach?\nsudo yum install python-devel python-psutil\nsudo -H pip install thefuck\n. Awesome, @nvbn! Thanks! As soon as I have some spare time I can dig this one and implement it for Fish.\n. The solution to this issue Fish-wise depends on fish-shell/fish-shell#825 available in the upcoming release, Fish 2.2.0. I'll keep an eye on that and update the fuck Fish function as soon as that's released.\n. Fixed in 9ba36c9. I'm starting to amend this issue, I'll soon create a pull-request.\n. Please check #119. And sorry for all the noise above. :relaxed: \n. Absolutely, a change in thefuck itself to support such a switch is a better approach than replacing occurrences of && and ||. What do you think, @nvbn? I could work on that should we choose to go this way.\n. Sure, @nvbn! Count me in!\n. This issue is addressed by 1b5c935 and can be closed.\n. Glad it works for you! It depends on sed, though. But I believe it's certain to be available.\n. Let me try that, @nvbn \n. @nvbn do you mean adopting the workaround as mentioned in https://github.com/nvbn/thefuck/issues/76#issuecomment-96103809?\n. @nvbn nice, 52f4852 does just that. Let's wait and see if anyone confirms it solves #76.\n. Yeah, absolutely. First I read http://en.wikipedia.org/wiki/TMPDIR and changed it. But then I thought it over and decided to vagrant up Ubuntu 14.04, CentOS 6.4 and Debian 7 to test it and, no surprise. Now I'm testing with mktemp and it's working just fine in all cases.\n. Ouch, no... too bad. mktemp's implementations differ amongst Linux and OS X\n. So, how about this:\n``` fish\nfunction __thefuck_repl --description 'Replace operators into fish-compatible'\n    set -l tmp (echo $argv | sed 's/ && / ; and /g')\n    echo $tmp | sed 's/ || / ; or /g'\nend\nfunction fuck --description 'Correct your previous console command'\n    set -l eval_script (mktemp 2>/dev/null ; or mktemp -t 'thefuck')\n    thefuck $history[1] > $eval_script\n    eval (__thefuck_repl (cat $eval_script))\n    rm $eval_script\nend\n```\n. I think it's good to go. Ping, @daenney, what do you think?\nEm 27/04/2015 02:58, \"Vladimir Iakovlev\" notifications@github.com\nescreveu:\n\nI moved aliases to wiki\nhttps://github.com/nvbn/thefuck/wiki/Shell-aliases, it will be faster\nto change them there.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/pull/130#issuecomment-96514751.\n. Thanks for the input, @daenney!\n\nThe part of the README.md file regarding shell aliases and/or functions was move over to the wiki, that's why this is conflicting with master. I'll move the solution to the wiki too.\n. One thing to remind ourselves of, though, is that from now on, every single rule that involves logical operators (&& and || for instance) should enclose them in blank spaces, like the following: cmd_x && cmd_y or cmd_x || cmd_z.\n. As with #837, this is kinda expected behavior but is actually related to #221, #234, #245, #258, etc.\nAnd the very same is valid here: TheFuck is meant to fix the previous failed command, not the current one:\n$ ecoh ok; fuck\n-su: ecoh: command not found\nNo fucks given\n$ ecoh ok\n-su: ecoh: command not found\n$ fuck\necho ok [enter/\u2191/\u2193/ctrl+c]\nok. Strange. It works just fine for me, I couldn't reproduce:\n\n. It seems to be a problem with Bash. It works nice with Fish:\n\n. What shell are you using? What version of TheFuck? It works for me in Bash too:\n\n. Oh! It works for me:\nbash\n\u00bb\u00bb\u00bb\u00bb cd dummy\ncd: The directory 'dummy' does not exist\n\u00bb\u00bb\u00bb\u00bb fuck\nmkdir -p dummy && cd dummy\n\u00bb\u00bb\u00bb\u00bb cd ..\n\u00bb\u00bb\u00bb\u00bb rm -rf dummy\n\u00bb\u00bb\u00bb\u00bb cd dummy\ncd: The directory 'dummy' does not exist\n\u00bb\u00bb\u00bb\u00bb fuck\nmkdir -p dummy && cd dummy\n\u00bb\u00bb\u00bb\u00bb pip freeze | grep thefuck\nthefuck==1.32\n\u00bb\u00bb\u00bb\u00bb fish --version\nfish, version 2.1.2\n. It also works with bash:\n``` bash\nbash-4.3$ ls\nbash-4.3$ cd dummy\nbash: cd: dummy: No such file or directory\nbash-4.3$ fuck\nmkdir -p dummy && cd dummy\nbash-4.3$ cd ..\nbash-4.3$ rm -rf dummy\nbash-4.3$ cd dummy\nbash: cd: dummy: No such file or directory\nbash-4.3$ fuck\nmkdir -p dummy && cd dummy\nbash-4.3$ pip freeze | grep thefuck\nthefuck==1.32\nbash-4.3$ bash --version\nGNU bash, version 4.3.33(1)-release (x86_64-apple-darwin14.1.0)\nCopyright (C) 2013 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later http://gnu.org/licenses/gpl.html\nThis is free software; you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n```\n. Oh, my bad. Sorry, I thought I was helping. I now confirm this issue.\n. I confirm it is fixed in Fish and Bash. Thanks @nvbn!\n. Right on!\n. :+1: \n. Congratulations, @ja5h! :+1:\n. Hi, @CharlesAtum! Can you please provide the following info?\n- what shell are you using?\n- what is the version of thefuck?\n- what is the version of python?\nThanks!\n. Can you please upgrade to thefuck 1.40 and see if this is still an issue?\n. @Vennik I am extending thefuck's support to other shells, such as Fish and PowerShell. What is the corresponding && operator (AND, for instance) in PowerShell?\n. Good enough. Thank you!\nWhat do you think about contributing code to the project? Would you be interested in improving thefuck's support to PowerShell?\n. Great! This is what I've been doing regarding Fish Shell:\nhttps://github.com/scorphus/thefuck/commit/018ea864318112789c0324a0c035f847b528245b \nIt's a work in progress (WIP) and there's some aspects of it I still want to change or improve. As soon as I have some free time I'll try and do so. \n. Hi @lidonis\nLet's try and do so! :smile: \n- What OS are you on?\n- What's the output of all the following commands?\nbash\n$ pip freeze\nbash\n$ python -c 'import sys; print(sys.version)'\nbash\n$ which python\nbash\n$ ls $(dirname $(dirname $(which python)))/lib/py*/site-packages/\nbash\n$ python -c 'import psutil; print(psutil); print(psutil.__version__);'\nThanks!\n. ping @jakefb, @felippenardi, @lidonis. Did you try the above? :arrow_up: \n. @mcarton Awesome! From that compilation error it looks like the python-dev package is missing (also https://gist.github.com/mcarton/baaab610ea925fd44da9#file-gistfile1-txt-L47 tells the same).\nDo you mind adding python-dev to dependencies and running it again?\nHow do you run it? Docker? Vagrant? Thank you!\n. Count on me trying to solve that, Martin. I have a Debian box here ready to\ngo with. I'll be looking at it.\nEm 07/02/2016 18:32, \"Travis Beck\" notifications@github.com escreveu:\n\nFor Fedora 23 I had to install python2-psutil via dnf in order for thefuck\nto install.\n[vagrant@localhost etc]$ sudo pip install thefuck\nYou are using pip version 7.1.0, however version 8.0.2 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\nCollecting thefuck\n  Using cached thefuck-3.3-py2.py3-none-any.whl\nCollecting psutil (from thefuck)\n  Using cached psutil-3.4.2.tar.gz\nCollecting decorator (from thefuck)\n  Using cached decorator-4.0.8-py2.py3-none-any.whl\nRequirement already satisfied (use --upgrade to upgrade): six in /usr/lib/python2.7/site-packages (from thefuck)\nCollecting pathlib (from thefuck)\n  Using cached pathlib-1.0.1.tar.gz\nCollecting colorama (from thefuck)\n  Using cached colorama-0.3.6-py2.py3-none-any.whl\nInstalling collected packages: psutil, decorator, pathlib, colorama, thefuck\n  Running setup.py install for psutil\n    Complete output from command /usr/bin/python -c \"import setuptools, tokenize;file='/tmp/pip-build-fQt4G4/psutil/setup.py';exec(compile(getattr(tokenize, 'open', open)(file).read().replace('\\r\\n', '\\n'), file, 'exec'))\" install --record /tmp/pip-XnKng4-record/install-record.txt --single-version-externally-managed --compile:\n    running install\n    running build\n    running build_py\n    creating build\n    creating build/lib.linux-x86_64-2.7\n    creating build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_pssunos.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_psbsd.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_pslinux.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_psposix.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_psosx.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_pswindows.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/init.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_compat.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_common.py -> build/lib.linux-x86_64-2.7/psutil\n    running build_ext\n    building 'psutil._psutil_linux' extension\n    creating build/temp.linux-x86_64-2.7\n    creating build/temp.linux-x86_64-2.7/psutil\n    gcc -pthread -fno-strict-aliasing -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -DNDEBUG -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -fPIC -DPSUTIL_VERSION=342 -I/usr/include/python2.7 -c psutil/_psutil_linux.c -o build/temp.linux-x86_64-2.7/psutil/_psutil_linux.o\n    gcc: error: /usr/lib/rpm/redhat/redhat-hardened-cc1: No such file or directory\n    error: command 'gcc' failed with exit status 1\n```\n```\nCommand \"/usr/bin/python -c \"import setuptools, tokenize;file='/tmp/pip-build-fQt4G4/psutil/setup.py';exec(compile(getattr(tokenize, 'open', open)(file).read().replace('\\r\\n', '\\n'), file, 'exec'))\" install --record /tmp/pip-XnKng4-record/install-record.txt --single-version-externally-managed --compile\" f\n ailed with error code 1 in /tmp/pip-build-fQt4G4/psutil\nAfter dnf install python2-psutil and pip install thefuck here is pip\nfreeze\n[vagrant@localhost etc]$ pip freeze\ncolorama==0.3.6\ndecorator==4.0.7\niniparse==0.4\niotop==0.6\npathlib==1.0.1\npsutil==3.2.1\npygpgme==0.3\npyliblzma==0.5.3\nrpm-python==4.13.0rc1\nsix==1.9.0\nthefuck==3.3\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/194#issuecomment-181105078.\n. @Tuzoff said:\nNeed to run sudo apt-get install python-dev before pip.\n\nTrue! For those users who have ran pip install thefuck before apt-get install python-dev must reinstall TheFuck with pip install --force-reinstall -U -I thefuck\n. @mdresden: how alike are this issue and #85?\n. LGTM :+1: \n. One of the few pull requests with test! Nice job!\n. Really? I thought it'd be needless noise. The first and the last are quite simple and the middlers are related to one another.\n. You can check pull request #200 (more precisely: https://github.com/scorphus/thefuck/blob/improve-shells/tests/rules/test_pacman.py)\n. @mcarton: That's awesome!\nThese last days I've struggled trying to vagrant up an Archlinux to run those tests. I haven't had any near-to-good Internet connection so far since Tuesday. So, thank you!\nWhat do you think about fixing the *mocked tests as well?\n. Not quite that... almost! rules/pacman.py has:\npython\n        # [snip]\n        return subprocess.check_output(\n            ['pkgfile', '-b', '-v', command.script.split(\" \")[0]],\n            universal_newlines=True, stderr=DEVNULL\n        ).split()\n        # [snip]\nAnd I get the following form pkgfile:\nshell\nvagrant@archlinux:~$ sudo pkgfile -b -v vim\nextra/gvim 7.4.723-1            /usr/bin/vim\nextra/gvim-python3 7.4.723-1    /usr/bin/vim\nextra/vim 7.4.723-1             /usr/bin/vim\nextra/vim-minimal 7.4.723-1     /usr/bin/vim\nextra/vim-python3 7.4.723-1     /usr/bin/vim\nvagrant@archlinux:~$ \nvagrant@archlinux:~$ sudo pkgfile -b -v convert\nextra/imagemagick 6.9.1.0-2 /usr/bin/convert\n. I appreciate your intent to contribute! But this issue was already reported and a solution already suggested, see #201.\nAlso see my line notes.\n. @detonation Did it work for you?\n. Yeah, that's the next improvement I'll propose! As soon as the latest improvements to shells are merged.\n. Awesome, @nvbn! I'll examine it more closely and support Fish functions if they're not supported yet.\n. UPDATE: support to Fish functions is on the way... :wink: \n. Please check #215\n. This issue is fixed by https://github.com/nvbn/thefuck/commit/d3146aa0aca57522820f5bdb0a22f5b248de407e and can be closed.\n. @jonibatista ping, any update on this?\n. Still got something more to do to avoid #221... working on it.\n. Thanks, @igorsantos07. I can reproduce this one and I'm investigating it.\n. Rereading this issue now I see it suggests more than fixing the loop. I'm going to think more about it... but I think it would require more advanced shell aliases/functions.\n. Fixed in 9ba36c9. This is related to #262 and its fix should apply to this as well. I'll soon open a pull request.\n. Yes, there is! Would you like to dig this one?\n. git_not_command.py is your rule\n. Also, take a look at mercurial.py if you'd like some hints.\n. Nice, @nvbn! I really like your solution! :+1: It's just a pity that you gave @waldyrious no chance to try :stuck_out_tongue_winking_eye: \n. Oh, I'm very sorry if I sounded like not wanting to give you more information, @waldyrious, my bad. It's quite the contrary in fact. But I tend not to give all the hints at once.\nIt may be a fault of mine, I don't know. But I believe we learn more from trying to figure things out by ourselves and making questions along the way than from others telling us what to do and how. On the other hand, you could have asked for more information and I'd happily reply, like gradually lowering the bar :smiley: \n. I agree with you. Yet I'm sorry for not careful reading your message. Had I read it more heedful I'd have replied accordingly, which I didn't. I'll keep this advice and use it the next time I try to onboard a new contributor. Thank you.\n. This one is a duplicate of #221 and can be closed.\n. Hello, @thurstonsand. What shell do you use? What version of thefuck is installed?\nThanks.\n. That's odd. What does your alias look like?\n. How does it behave if you set the alias as the following?\nbash\nalias fuck='eval $(thefuck $(fc -ln -1)); history -r'\neval being the main difference here.\n. Ah, I forgot to mention, that alias is exactly what the command thefuck-alias gives you :wink: \n. @thurstonsand I'm glad it works! Can you please close this issue? Thanks.\n. This one is somehow related to #220.\n. Same issue as #221, try to do a search next time :smiley: We're working on it. I hope to have some spare time to fix it soon. \n. Another duplicate of #221. I'm almost happy with a reasonably good solution to this problem.\n. This issue is fixed by https://github.com/nvbn/thefuck/commit/96fe1e77b3cfacb5e2bb8e8568a5a515f3870ebf and can be closed.\n. No, 1.46 does not include the fix. It's yet to be released.\n. @maxried can you please confirm this issue is addressed in the last release?\n. Superb! Can you please close this issue? Thank you! \n. Same as @bugaevc's here. @eranimo, perhaps your Git is a bit too old that its error message is incompatible with the git_push rule. What does git --version tell you?\n. I really can't reproduce it. What are your Git and Fish versions, @chrimifi?\n. BTW this is what I get:\nfish\n\u22ca> ~/W/barebones on works-for-me \u25cf thefuck git push\ngit push --set-upstream origin works-for-me [enter/\u2191/\u2193/ctrl+c]\ngit push --set-upstream origin works-for-me\n\u22ca> ~/W/barebones on works-for-me \u25cf\n. Great, thank you! Now I have plenty of info to dig this issue.\n. @chrimifi: I'm really sorry for the delay. You need to add git to the set of overridden aliases. Can you please place the following in your config.fish?\nset -x TF_OVERRIDDEN_ALIASES 'cd,grep,ls,man,open,git'\nAlthough this should be enough to fix this issue, I think TheFuck could be improved in order to append those aliases to the default ones. IOW, that line should include only git. Also, a README and/or Wiki entry explaining this.\n. > That did the trick. Thanks!\nYAY! Awesome! \ud83c\udf89\n\nAfter the next release, I'll pare that command down to just git.\n\nExactly! \ud83d\udc4d\n\nDoes this mean that if I alias something else that thefuck operates on that I should add it to that variable, too?\n\nYes. Fish Shell itself overrides some commands that TheFuck has rules for, namely: cd, grep, ls, man and open. That's why we have the default overridden aliases.\n. Hey, @chrimifi, can we call this issue fixed and close it? Thanks!\n. Oh, sorry. My bad. @eranimo: ping.\n. Hi, I'll try and reproduce this error as soon as I get the chance. Thanks\nfor reporting it.\nEm 31/05/2016 00:20, \"Wensheng Tang\" notifications@github.com escreveu:\n\nI've also encounter this issue. The first time running this command will\nfreeze forever.\nP.S. Using latest Git for Windows 2.8.3\n$ fuck\nTraceback (most recent call last):\n  File \"d:\\python27\\lib\\runpy.py\", line 162, in _run_module_as_main\n    \"main\", fname, loader, pkg_name)\n  File \"d:\\python27\\lib\\runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"D:\\Python27\\Scripts\\thefuck.exe__main__.py\", line 9, in \n  File \"d:\\python27\\lib\\site-packages\\thefuck\\main.py\", line 80, in main\n    fix_command()\n  File \"d:\\python27\\lib\\site-packages\\thefuck\\main.py\", line 26, in fix_command\n    command = types.Command.from_raw_script(sys.argv[1:])\n  File \"d:\\python27\\lib\\site-packages\\thefuck\\types.py\", line 120, in from_raw_script\n    stderr = result.stderr.read().decode('utf-8')\n  File \"d:\\python27\\lib\\encodings\\utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xb2 in position 9: invalid start byte\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/254#issuecomment-222584108, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/ACA8uRTitMDR4Q9VEsaa8zFzMTeViNMrks5qG6j0gaJpZM4FBQUu\n.\n. Thanks for reporting, @vdidonato!\n. Not too late to mention, I guess... in the meantime this can be fixed with:\n\nbash\n$ pip install -U \"psutil<3\"\n. Thanks for reporting, @Harry-Chen. This problem is solved in master and will be available in the next, upcoming release.\n. I once tried to add support to Mercurial, but it turned out its error messages were not that useful. But new 3.4 version improves on that. So, I'll dig this one. Thanks for spotting it, @seyfer! :+1: \n. WIP @ mercurial\n. Thanks for reporting it, @0x2F :+1: \n. Hey, @chatainsim. Could you please give us a little bit more info?\n- What OS are you on?\n- What's the output of:\nbash\n$ which python\n- What's the output of:\nbash\n$ which thefuck\n- What's the output of:\nbash\n$ pip freeze | grep six\n- What's the output of:\nbash\n$ python -c 'import six; print(six); print(six.__version__); print(six.PY2)'\nThanks!\n. As I suspect another rule is making it hang, I'd suggest you placing a breakpoint in the get_matched_rule() method of main.py and see if you find out which one it is. A good read depending on your experience debugging python programs: https://blog.safaribooksonline.com/2014/11/18/intro-python-debugger/\n. Nice catch! I totally forgot it. Thanks!\n. Done: https://github.com/Homebrew/homebrew/pull/41997\nThanks, @DomT4 \n. My pleasure!\n. The Homebrew thefuck formula is up-to-date!\n. Sure! Makes sense. I should have done that instead. Thanks!\n. Nice job, @mcarton! Great contributions! Thank you! :+1: \n. Thank you for reporting, I'm investigating this. I'll have time to do so more closely this weekend. \n. Hello everyone!\nSorry for being offline, I was enjoying my vacations! \n@casterx and @all: Most of the action related to this issue has taken place in #398, which has a few referenced commits. Could you please install TheFuck from master and confirm? I'll appreciate that :smiley: \nThanks!\n. Here is the related pull request: #411\n. @casterx I may be wrong but maybe your fuck alias is missing PYTHONIOENCODING=utf-8? Could you please show us how it looks like? And how does its definition look like? Thanks!\n. Cool! I'm glad it works! I'm not sure how you set the PYTHONIOENCODING variable but I do not encourage your to set it system-wide. Instead, set it just for thefuck script \u2013 aka its alias. Make sure you set the alias as we recommend: https://github.com/nvbn/thefuck/wiki/Shell-aliases\n. That shouldn't be done! Not system-wide like that, at least.\nSetting it in the alias is enough. But latest changes to the aliases have broken the correct setting of PYTHONIOENCODING and other variables right in the alias. I'm fixing it and will soon open a pull request. This should be okay in the next release.\n. In the meantime \u2013 while TheFuck still makes no amendments in source code files \u2013 it's fair enough to open the file in the user's preferred editor.\n. Nice! My addition:\n| pattern | tools | note |\n| --- | --- | --- |\n| at {file}:{line}:{col} | js, node | the pattern appears many times, should take the first reference |\n. Absolutely!\njavascript\n// fuck.js\nprocess.argv.slice(2).forEach(function(arg) {\n    conole.log(arg);\n});\n\u00bb node fuck.js asdf qwer\n/Users/pablo/Workspace/barebones/fuck.js:2\n    conole.log(arg);  // this should read console.log(arg);\n    ^\nReferenceError: conole is not defined\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\n    at Array.forEach (native)\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\n    at Module._compile (module.js:460:26)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Function.Module.runMain (module.js:501:10)\n    at startup (node.js:129:16)\n    at node.js:814:3\n. Yes! I already have this unfuck in my TheFuck's to-do list! I'll dig this one.\n. Yes! Unfuck a fucked make command.\nBTW, would you like to implement the vagrant_up rule?\n. Oh... I generalized :smile: It's just an unfuck suggestion.\nOkay, I'll do it then.\n. Hello, @milk. Haven't done much, though. But I'm really glad you took it up and it's looking good! :+1: \nI haven't tested it yet, though, but by just looking at it I'll make a couple of line comments. Later today I'll be able to look at it closer.\nThanks!\n. Thank you for your contributions, @mlk! Good job!\n. Please provide more information such as:\n- On which Ubuntu version?\n- On which Python version?\n- On which TheFuck version?\n- On which Bash version \u2013 or on which shell and version?\nI can't reproduce it, look:\n```\nvagrant@vagrant-ubuntu-trusty-64:~$ uname -a\nLinux vagrant-ubuntu-trusty-64 3.13.0-52-generic #86-Ubuntu SMP Mon May 4 04:32:59 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\nvagrant@vagrant-ubuntu-trusty-64:~$ python --version\nPython 2.7.6\nvagrant@vagrant-ubuntu-trusty-64:~$ pip list | grep thefuck\nthefuck (2.6)\nvagrant@vagrant-ubuntu-trusty-64:~$ bash --version\nGNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)\nCopyright (C) 2013 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later http://gnu.org/licenses/gpl.html\nThis is free software; you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nvagrant@vagrant-ubuntu-trusty-64:~$ mpg123\nThe program 'mpg123' is currently not installed. To run 'mpg123' please ask your administrator to install the package 'mpg321'\nvagrant@vagrant-ubuntu-trusty-64:~$ fuck\nsudo apt-get install mpg321 && mpg123 [enter/ctrl+c]\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nThe following extra packages will be installed:\n  libao-common libao4 libasound2 libasound2-data libaudio-scrobbler-perl\n  libauthen-sasl-perl libconfig-inifiles-perl libencode-locale-perl\n  libfile-listing-perl libfont-afm-perl libhtml-form-perl libhtml-format-perl\n  libhtml-parser-perl libhtml-tagset-perl libhtml-tree-perl\n  libhttp-cookies-perl libhttp-daemon-perl libhttp-date-perl\n  libhttp-message-perl libhttp-negotiate-perl libid3tag0 libio-html-perl\n  libio-socket-inet6-perl libio-socket-ssl-perl liblist-moreutils-perl\n  liblwp-mediatypes-perl liblwp-protocol-https-perl libmad0 libmailtools-perl\n  libnet-http-perl libnet-smtp-ssl-perl libnet-ssleay-perl libsocket6-perl\n  liburi-perl libwww-perl libwww-robotrules-perl\nSuggested packages:\n  libaudio2 libesd0 libesd-alsa0 libpulse0 libasound2-plugins alsa-utils\n  libdigest-hmac-perl libgssapi-perl libdata-dump-perl libcrypt-ssleay-perl\n  libauthen-ntlm-perl\nThe following NEW packages will be installed:\n  libao-common libao4 libasound2 libasound2-data libaudio-scrobbler-perl\n  libauthen-sasl-perl libconfig-inifiles-perl libencode-locale-perl\n  libfile-listing-perl libfont-afm-perl libhtml-form-perl libhtml-format-perl\n  libhtml-parser-perl libhtml-tagset-perl libhtml-tree-perl\n  libhttp-cookies-perl libhttp-daemon-perl libhttp-date-perl\n  libhttp-message-perl libhttp-negotiate-perl libid3tag0 libio-html-perl\n  libio-socket-inet6-perl libio-socket-ssl-perl liblist-moreutils-perl\n  liblwp-mediatypes-perl liblwp-protocol-https-perl libmad0 libmailtools-perl\n  libnet-http-perl libnet-smtp-ssl-perl libnet-ssleay-perl libsocket6-perl\n  liburi-perl libwww-perl libwww-robotrules-perl mpg321\n0 upgraded, 37 newly installed, 0 to remove and 5 not upgraded.\nNeed to get 2,037 kB of archives.\nAfter this operation, 7,441 kB of additional disk space will be used.\nDo you want to continue? [Y/n] n\nAbort.\nvagrant@vagrant-ubuntu-trusty-64:~$\n```\nThanks.\n. Yeah, that's because of TheFuck's design itself. Take thefuck pip intall --update ipdb for instance.\n. However, I think a manpage is a good idea. How willing are you to contribute with this, @waldyrious?\n. Thanks, Martin! :+1: \n. I can test them for you:\n```\n============================= test session starts ==============================\nplatform darwin -- Python 2.7.9 -- py-1.4.30 -- pytest-2.7.2 -- .virtualenvs/thefuck/bin/python2.7\nrootdir: /thefuck, inifile: \nplugins: cov, mock\ncollecting ... collected 6 items\ntests/rules/test_brew_install.py::test_match PASSED\ntests/rules/test_brew_install.py::test_get_new_command PASSED\ntests/rules/test_brew_unknown_command.py::test_match FAILED\ntests/rules/test_brew_unknown_command.py::test_get_new_command FAILED\ntests/rules/test_brew_upgrade.py::test_match[command0] PASSED\ntests/rules/test_brew_upgrade.py::test_get_new_command[command0-brew upgrade --all] PASSED\n=================================== FAILURES ===================================\n______ test_match ________\nbrew_unknown_cmd = 'Error: Unknown command: inst'\ndef test_match(brew_unknown_cmd):\n\n\n  assert match(Command('brew inst', stderr=brew_unknown_cmd), None)\n\n\ntests/rules/test_brew_unknown_command.py:18: \n\nthefuck/rules/brew_unknown_command.py:73: in match\n    return bool(get_closest(broken_cmd, _brew_commands()))\n\ndef _brew_commands():\n    brew_path_prefix = get_brew_path_prefix()\n    if brew_path_prefix:\n        try:\n            return _get_brew_commands(brew_path_prefix) \\\n\n\n               + _get_brew_tap_specific_commands(brew_path_prefix)\n\nE                    TypeError: unsupported operand type(s) for +: 'generator' and 'list'\n\nthefuck/rules/brew_unknown_command.py:56: TypeError\n____ test_get_new_command ____\nbrew_unknown_cmd = 'Error: Unknown command: inst'\nbrew_unknown_cmd2 = 'Error: Unknown command: instaa'\ndef test_get_new_command(brew_unknown_cmd, brew_unknown_cmd2):\n\n\n  assert get_new_command(Command('brew inst', stderr=brew_unknown_cmd),\n                           None) == ['brew list', 'brew install', 'brew uninstall']\n\n\ntests/rules/test_brew_unknown_command.py:24: \n\nthefuck/rules/brew_unknown_command.py:80: in get_new_command\n    return replace_command(command, broken_cmd, _brew_commands())\n\ndef _brew_commands():\n    brew_path_prefix = get_brew_path_prefix()\n    if brew_path_prefix:\n        try:\n            return _get_brew_commands(brew_path_prefix) \\\n\n\n               + _get_brew_tap_specific_commands(brew_path_prefix)\n\nE                    TypeError: unsupported operand type(s) for +: 'generator' and 'list'\n\nthefuck/rules/brew_unknown_command.py:56: TypeError\n====================== 2 failed, 4 passed in 0.17 seconds ======================\n```\nSame thing for Python 3\n. I can work on that later today, what you say?\n\nPablo Aguiar (scorphus) scorphus@gmail.com\nOn Wed, Aug 26, 2015 at 4:46 PM, Martin Carton notifications@github.com\nwrote:\n\nThanks, the coverage of that rule is not really good.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/pull/352#issuecomment-135150688.\n. Almost there...\n\n```\n============================= test session starts ==============================\nplatform darwin -- Python 3.4.3 -- py-1.4.30 -- pytest-2.7.2 -- /Users/pablo/.virtualenvs/thefuck-py3/bin/python3.4\nrootdir: /Users/pablo/Workspace/thefuck, inifile: \nplugins: benchmark, cov, mock\ncollecting ... collected 6 items\ntests/rules/test_brew_install.py::test_match PASSED\ntests/rules/test_brew_install.py::test_get_new_command PASSED\ntests/rules/test_brew_unknown_command.py::test_match PASSED\ntests/rules/test_brew_unknown_command.py::test_get_new_command FAILED\ntests/rules/test_brew_upgrade.py::test_match[command0] PASSED\ntests/rules/test_brew_upgrade.py::test_get_new_command[command0-brew upgrade --all] PASSED\n=================================== FAILURES ===================================\n____ test_get_new_command ____\nbrew_unknown_cmd = 'Error: Unknown command: inst'\nbrew_unknown_cmd2 = 'Error: Unknown command: instaa'\ndef test_get_new_command(brew_unknown_cmd, brew_unknown_cmd2):\n    assert get_new_command(Command('brew inst', stderr=brew_unknown_cmd),\n                           None) == ['brew list', 'brew install', 'brew uninstall']\n\n\n  assert get_new_command(Command('brew instaa', stderr=brew_unknown_cmd2),\n                           None) == ['brew install', 'brew uninstall', 'brew list']\n\nE       assert ['brew instal...ew reinstall'] == ['brew install..., 'brew list']\nE         At index 2 diff: 'brew reinstall' != 'brew list'\nE         Full diff:\nE         - ['brew install', 'brew uninstall', 'brew reinstall']\nE         ?                                          ^^ -  ---\nE         + ['brew install', 'brew uninstall', 'brew list']\nE         ?                                          ^\n\ntests/rules/test_brew_unknown_command.py:27: AssertionError\n====================== 1 failed, 5 passed in 0.22 seconds ======================\n```\n. Just apply:\n``` diff\ndiff --git a/tests/rules/test_brew_unknown_command.py b/tests/rules/test_brew_unknown_command.py\nindex 17adb47..86bec5b 100644\n--- a/tests/rules/test_brew_unknown_command.py\n+++ b/tests/rules/test_brew_unknown_command.py\n@@ -25,4 +25,4 @@ def test_get_new_command(brew_unknown_cmd, brew_unknown_cmd2):\n                            None) == ['brew list', 'brew install', 'brew uninstall']\n assert get_new_command(Command('brew instaa', stderr=brew_unknown_cmd2),\n\n\nNone) == ['brew install', 'brew uninstall', 'brew list']\nNone) == ['brew install', 'brew uninstall', 'brew reinstall']\n```\n\nand we are go.\n. No problem, @mcarton :smile: \npy.test said:\n\n635 passed, 52 skipped in 5.06 seconds \n\nTests tell us we're good to ~~python~~ go :+1: \n@mcarton said:\n\n[...] This test should be rewritten to do the same thing on Linux and OS X (...) and have a better coverage.\n\nI can try and work on that :construction:\n. Just give a chance to test this with zsh, as that other issue states it's slow for some reason. I'll test this in about one hour from now. \n. And count on me for improving the brew tests \n. I can confirm these changes make TheFuck faster on both Fish and Zsh. Thank you, @mcarton. :+1:\nIt LGTM, please merge it, @nvbn\n. Oh, you forgot to setup your shell. You need an alias \u2013 or a function \u2013 to make it work.\nTry and follow the manual installation instructions.\n. @MightyPork said\n\n(also kinda weird that it says \"The default values are as follows\", when \"require_confirmation = False\" was in the file by default (commented out) and fuck used True...)\n\nWhen the file ~/.thefuck/settings.py already exists it's not regenerated/updated. I'm gonna work on that, merge/update it with new/changed confs.\n. :+1:\nHow about moving \u02dc.thefuck to $XDG_CONFIG_HOME/thefuck if the former exists?\n. Yeah, makes sense. I didn't think much about the complications it may raise. \n. I can reproduce this and other cases. I'm investigating it and might soon submit a PR.\n. @blakeembrey: Are you still using Python 2?\n@all: there are still some problems with Python2 and Unicode (i.e. thefuck echoo caf\u00e9). I can fix that. But should I endeavor in such adventure? What do you guys think?\n. I think that there is a real share of Python 2 users, whether we like it or not. And I think we can't just leave them with a buggy software if that's amendable. I don't think we should turn our backs to Python 2.\n. Ah, okay. Your rhetorical questions led me to think otherwise :smile:\nI can turn myself to the fixing of it. #handson\n. @lovedboy: Any update on this?\n. @NIXOYE: ping. Any chances we have a look at your .bashrc content within triple backquotes?\n. @mcornella: what is your bash version, please? (bash --version)\n. @mcornella: Please, forgive my lack of attention. Let's wait then. Thank you!\n. I couldn't reproduce it. This is what I got:\n\n@JaffParker: what's your bash version?\n@dekuenstle: you seem to be using ZSH instead. Correct?\n. @JaffParker: The screenshot above is from a just-installed Ubuntu 15.10 (aka Wily Werewolf). TheFuck was installed using install script, the same procedure you used. So there seems to be something a lot different in your setup. Let's try and find out what that is. Please post the output for each of the following:\nbash\n$ which thefuck\nbash\n$ which python\nbash\n$ pip freeze\nbash\n$ python -c 'import sys; print(sys.version)'\nbash\n$ python -c 'import psutil; print(psutil); print(psutil.__version__);'\nbash\n$ python -c 'import six; print(six); print(six.__version__); print(six.PY2)'\nbash\n$ ls -lha $(dirname $(dirname $(which python)))/lib/py*/site-packages/\nThanks!\n. @mcarton wrote:\n\nThat's yet another problem with Unicode and Python 2. If you can, use The Fuck with Python 3 (eg. install it with pip3 install thefuck), the problem will likely be gone. @scorphus: if you still want to fix that :smile:\n\nI'm on it, as free time allows me :smiley: \n. @lovedboy I'm not sure if you're aware of current open issues \u2013 #398 for example \u2013 about this problem. I'm in the middle of tackling it, I can share my progress once I get home, in a few hours.\n. Ok, @lovedboy. I'll rebase my work on top of yours and continue from there.\n. @lovedboy Can you please squash these two commits into one? :smiley: Then git push --force <your_remote>/master to, as you probably already know, update this pull request. Thank you!\n. What does your fuck function look like? Please post the output of:\nfish\nfunctions fuck\nWhere do you define your function? Can you also post its definition?\nThanks!\nEm 25/11/2015 09:30, \"Sim\u00f3n\" notifications@github.com escreveu:\n\nUbuntu 14.04 64 bits\nfish shell v2.2.0\nThe Fuck 3.2 using Python 2.7.10\n$ thefuck --alias\nfunction fuck -d \"Correct your previous console command\"\n    set -l exit_code $status\n    set -x TF_ALIAS fuck\n    set -l fucked_up_command $history[1]\n    thefuck $fucked_up_command | read -l unfucked_command\n    if [ \"$unfucked_command\" != \"\" ]\n        eval $unfucked_command\n        if test $exit_code -ne 0\n            history --delete $fucked_up_command\n            history --merge ^ /dev/null\n            return 0\n        end\n    end\nend\nI have defined this fish function:\nfunction purge\n    if test (count $argv) -gt 0\n        command sudo aptitude purge $argv; and command sudo aptitude clean -y\n        command notify-send -h int:transient:1 -t 10000 -u normal -i system-software-update \"aptitude\" \"Paquete purgado\"\n    else\n        echo \"Debe indicar el nombre del paquete/s a eliminar...\"\n    end\nend\nI execute:\n$ purge gitbook\nCouldn't find package \"gitbook\".  However, the following\npackages contain \"gitbook\" in their name:\n  gitbook-editor\nCouldn't find package \"gitbook\".  However, the following\npackages contain \"gitbook\" in their name:\n  gitbook-editor\nNo packages will be installed, upgraded, or removed.\n0 packages upgraded, 0 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 0 B of archives. After unpacking 0 B will be used.\n$ fuck\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 9, in \n    load_entry_point('thefuck==3.2', 'console_scripts', 'thefuck')()\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/main.py\", line 77, in main\n    fix_command()\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/main.py\", line 22, in fix_command\n    command = types.Command.from_raw_script(sys.argv[1:])\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/types.py\", line 116, in from_raw_script\n    if cls._wait_output(result):\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/types.py\", line 78, in _wait_output\n    child.kill()\n  File \"/usr/local/lib/python2.7/dist-packages/psutil/init.py\", line 299, in wrapper\n    return fun(self, _args, *_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/psutil/init.py\", line 1089, in kill\n    self._send_signal(signal.SIGKILL)\n  File \"/usr/local/lib/python2.7/dist-packages/psutil/init.py\", line 1026, in _send_signal\n    raise AccessDenied(self.pid, self._name)\npsutil.AccessDenied: psutil.AccessDenied (pid=18339)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/412.\n. Good job, @mcarton :+1: Thanks.\n. Perhaps you need to update brew? Please, do so: brew update\n\nThen tell us what brew --version outputs. And also brew search thefuck.\n. Here's what I've got:\n\u00bb brew --version\nHomebrew 0.9.5 (git revision 9db8f; last commit 2016-01-05)\n\u00bb brew search fuck\nthefuck \u2714\n. Ping, @sehrgut and @pjuhasz. Can we call this fixed and close the issue?\n. Hello, @Amorymeltzer. I'm investigating this. I'm glad you're happy to provide debug output, please do so if you still can. Thanks a lot!\n. @vidarkongsli: ping :smiley: Any updates on this, sir?\nIn the meanwhile, @mcarton, I'll try and fire up a Windows box an see what I get.\n. > In the meanwhile [\u2026] I'll try and fire up a Windows box an see what I get\nAh, for the record, I've done that and assured it works.\n. Good job, @nvbn :+1: \n. Perhaps recent solution to #433 solves this problem too. I see @bardov's alias is a bit outdated \u2013 which is expected as there's still no new release with the fix. Having said that, a bash alias should read like this:\nbash\nbash-4.3$ thefuck --alias\nalias fuck='eval $(TF_ALIAS=fuck PYTHONIOENCODING=utf-8 thefuck $(fc -ln -1)); history -r'\nps.: there's always a thought in my mind whenever I brush against issues like this: how about we keep the default encoding in the settings? We could even have an if python2 statement there. I'm gonna open a pull request :cake: \n. Good catch, @kirushyk! I can code that rule!\n. Count on us! :wink:\n. Good! You can amend the one commit in this pull request and do a forced push to the same branch \u2013 hotfix/wp-windows-dbm-issue \u2013 and GitHub will magically bring it all together. :heart: :octocat: \n. @kizetsu: ping, any updates on this? Thanks.\n. Hello, @larsgrefer. Thanks for reporting this discrepancy. I'll fix it.\nIn the meantime, please add eval (thefuck --alias | tr '\\n' ';') to your config.fish\nIf by any chance you use Oh My Fish, you can just install the thefuck plugin.\n$ omf install thefuck\n. @udiboy1209: you better have setuptools upgraded (aka pip install -U setuptools) or maybe pip too. \n. @kiddick: can you please update TheFuck to latest version and see if it works?\n. \n. Good job, @PLNech :+1: \nDo you mind squashing your three commits into a single one then force-pushing to same branch (your local clone's master, in this case) in order to have a single changeset regarding a single feature?\nThanks!\n. Also, name the test file after the rule, IOW:\nbash\n$ mv test_git_remote_rename_add.py test_git_remote_seturl_add.py\n. Awesome! :+1: \n. Superb! :+1: \nOh! Just in time, @PLNech: I forgot to mention your test lacks a not_match test case (exempli gratia).\n. Great. Thank you!\n. Oh! I'm better improving that comment. In a bit.\n. Worth mentioning that Fish Shell is not affected by this regression.\n. Mind you, TheFuck is not a magic wand you wave and \u201cta daaaa!\u201d. No. :smiley: \n. Isn't this the case when that word comes in very conveniently? :laughing: \n. Good job, @MattKotsenas. From what I can tell it looks okay, although the two logically distinct changes could be split into two independent commits.\nI have a Windows box at home and will give it a shot soon tonight.\nThanks!\n. @MattKotsenas You did great with the commit split! Thanks! Can you please fix those minor issues? I'm glad explaining any of them.\nAlso, this is how my $profile reads:\n``` powershell\nfunction fuck {\n$fuck = $(thefuck (get-history -count 1).commandline)\nif (\"$fuck\".startswith(\"echo\")) {\n\"$fuck\".substring(5)\n} else {\nif ($fuck) {\niex \"$fuck\"\n}\n}\n}\niex \"thefuck --alias\"\n```\nBut this is what I got:\n(py27) PS C:\\Users\\IEUser> fuck\nSeems like fuck alias isn't configured!\nPlease put iex \"thefuck --alias\" in your $profile.\nMore details - https://github.com/nvbn/thefuck#manual-installation\n(py27) PS C:\\Users\\IEUser>\nWhat am I missing? I'm on a Windows 8.1 by the way.\nThanks.\n. How does your fuck alias definition looks like? I mean, what's in your .zshrc regarding TheFuck?\nWhat does alias output? I Imagine g is among these aliases.\n. Thank you for opening the issue, @mcgrew! :+1: \n. Yes, there is. I'll send a fix very soon. Thank you for reporting this\nissue.\nEm 21/03/2016 20:29, \"Cheng Zhang\" notifications@github.com escreveu:\n\npython 2.7.10\nwindows powershell\nwhen I type:\n\ngit comit -am 'test'> fuck\n\nit gives me something that is completely weird:\nC:\\Python27\\lib\\site-packages\\win_unicode_console__init__.py:27: RuntimeWarning: sys.stdin.encoding == 'utf-8', whereas sys.stdout.encoding == None, readline hook consumer may assume they are the same\n  readline_hook.enable(use_pyreadline=use_pyreadline)\n\ufffd[1mgit commit -am 'test'\ufffd[0m [\ufffd[32menter\ufffd[0m/\ufffd[34m\u2191\ufffd[0m/\ufffd[34m\u2193\ufffd[0m/\ufffd[31mctrl+c\ufffd[0m]\nand then give an exception:\nTraceback (most recent call last):\n  File \"C:\\Python27\\lib\\runpy.py\", line 162, in _run_module_as_main\n    \"main\", fname, loader, pkg_name)\n  File \"C:\\Python27\\lib\\runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"C:\\Python27\\Scripts\\thefuck.exe__main__.py\", line 9, in \n  File \"C:\\Python27\\lib\\site-packages\\thefuck\\main.py\", line 80, in main\n    fix_command()\n  File \"C:\\Python27\\lib\\site-packages\\thefuck\\main.py\", line 32, in fix_command\n    selected_command = select_command(corrected_commands)\n  File \"C:\\Python27\\lib\\site-packages\\thefuck\\ui.py\", line 80, in select_command\n    for action in read_actions():\n  File \"C:\\Python27\\lib\\site-packages\\thefuck\\ui.py\", line 13, in read_actions\n    key = get_key()\n  File \"C:\\Python27\\lib\\site-packages\\thefuck\\system\\win32.py\", line 25, in get_key\n    return ch.decode(sys.stdout.encoding)\nTypeError: decode() argument 1 must be string, not None\nI think this is related to UTF-8 encoding in python2...\nI cannot add python3 to path, because my vim plugins will require python2\nin the path...\nIs there any way I can fix this?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/486\n. Sorry for the delay.\n. @chantisnake: No problem :smiley: In the meantime you can update to master with pip install -U git+https://github.com/nvbn/thefuck.git.\n. I can hunt this one at some easy pace. Subshell execution for variable definition is probably messing color sequences.\n\nIn the meantime I've already setup a Windows build on AppVeyor and things are looking good.\nBTW, @nvbn, what do you think of these fancy badges?\n\n. Ah... those fancy badges are on their way.\n. Cool! I like your changes, thanks!\n. Yeah, 9b260eb moved shell's history responsibility over to the alias but I'm yet to update Fish alias regarding this change. Please bear with me, I might have some free time this week.\n. @nvbn: If there's something that could be done better/another way, just let me know.\n. Hi! Care to update to latest version, 3.9? Also, are you using the thefuck plugin for Oh My ZSH? Thanks!\n. Hi! Please paste the output of the two commands below:\nthefuck --version\nfish\npython -c 'from thefuck.shells import shell; print(shell.__class__)'\nThanks!\n. @mdhausman, this is what I got on a fresh Xubuntu 14.04 install:\n\n\nWhat is your Bash version? And can you share your ~/.bashrc file?\nThanks!\n. Also germane to the discussion:\nvagrant@vagrant-VBox:~$ apt-cache show xfce4-terminal | grep -E 'Pa|In|Ve'\nPackage: xfce4-terminal\nInstalled-Size: 2071\nVersion: 0.6.3-1ubuntu1\n. Thanks for that information. How about your .bashrc? Or the script that\nevals the fuck function. Thanks.\nEm 20/05/2016 18:53, \"Maura Hausman\" notifications@github.com escreveu:\n\n\u2665 mhausman:~ \u203d bash --version\nGNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)\nCopyright (C) 2013 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later http://gnu.org/licenses/gpl.html\nThis is free software; you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\u2665 mhausman:~ \u203d apt-cache show xfce4-terminal | grep -E 'Pa|In|Ve'\nPackage: xfce4-terminal\nInstalled-Size: 2071\nVersion: 0.6.3-1ubuntu1\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/499#issuecomment-220727346\n. Thanks for pointing that out, @nvbn :+1: \n. Yeah, not by default. Nor do some flavors of Linux, too. We all know one could install it with brew install wget. But still, perhaps the OSX part should be removed in favor of another section mentioning brew install thefuck? I can propose that change. What do you think, @Meekohi?\n. How does that look, @Meekohi?\n. @Meekohi: I think we can call this solved. What do you think?\n. Hi, @DavidAwad. I can reproduce this problem \u2013 regardless of the shell \u2013 and have already pinpointed the cause. I'm in the process of fixing it. Thank you for submitting this issue.\n. Any of you willing to code it? I'm happy to coach \u263a\n. Hey, @nvbn! Any concerns? Anything you'd like to see changed?\n\nThanks!\n. Try with the following entry in ~/.config/thefuck/settings.py:\npython\nrequire_confirmation = False\n. Yes, at shell alias/function level.\n. @Haroenv are you willing to code it? \ud83d\ude03  What shell do you commonly use?\n. Awesome! I use Fish too! Please feel free to ask for help, although I'm sure you'll nail it :o)\n. To have it implemented the way we discussed earlier \u2013 at shell alias/function level \u2013 it would involve rewriting the shell alias \u2013 i.e. Fish.app_alias() \u2013\u00a0in order to make it conditionally set THEFUCK_REQUIRE_CONFIRMATION to 0 prior to calling thefuck ....\n. Great!\nps.: I'm pondering how this could be done in the Bash alias, for instance.\n. > [\u2026] I found how to add a fish argument, but where should this be documented, tested? [\u2026]\nThere are some funcitonal tests  that could include tests for the new -y functionality.\n\nFor powershell, something like switch could be used (but I don't know how it finds out what the name of the flag is\n\nLooks like it'll work. Maybe @MattKotsenas could chime in and shed some light on the matter?\n\nIn bash (probably the other shells as well, seeing they're aliases instead of functions too) it'll need to be replaced by a function\n\nYeah, that's the critical change, I think. Not sure how much it impacts on the way TheFuck is set up by users and tools alike.\nPerhaps there should be a --function argument that always creates a function. Then we can leave --alias functionality untouched. What do you think?\n. Here's another example of a tool that uses TheFuck.\nThinking it again, on most cases there won't be any problems creating a function instead of an alias. Let me recall how users used to set them.\n. > [\u2026] setting it back to the default [\u2026]\nThat might be unnecessary. It should be an in-command-variable, something like:\n``` fish\nmiddle of Fish alias\nif dash_y\n  env THEFUCK_REQUIRE_CONFIRMATION=0 TF_ALIAS=fuck PYTHONIOENCODING=utf-8 thefuck \nelse\n  env TF_ALIAS=fuck PYTHONIOENCODING=utf-8 thefuck \nend\n\u2026\n``\n. Since [aliases changed in 1.34](https://github.com/nvbn/thefuck#update) and are defined witheval \"$(thefuck --alias)\"I think we might be okay changing it to afunction`.\n/cc @nvbn any concerns?\n. Oh-My-Fish TheFuck plugin, for example, will need to be updated to support this feature, although it would continue to work nonetheless.\n. @Haroenv: the condition can be written like this:\nfish\ncontains -- \"-y\" $argv; and set -lx THEFUCK_REQUIRE_CONFIRMATION 0\n- l: sets the variable locally \u2013 it is bound to the funciton scope only\n- x: exports the variable to sibling processes \u2013\u00a0thefuck will be able to read it\n. 1. What does your alias look like?\n2. How do you define it?\n3. What's the output of thefuck --version?\n. > Correct response should be\n\ntouch idontexist && open idontexist\n\nGood one. mkdir idontexist && open idontexist could be a valid correction too. I can code it \ud83d\ude03 \n\nAlso maybe fuck after a (seemingly successful) should offer \nopen -e file\n\nHmm... TheFuck is intended to correct your last command. It expects it to fail.\n. > [\u2026] does TheFuck first check for a none-zero exit command?\nNot exactly. It runs the command regardless of the exit status. Its interest is in the command's output ( both STDERR and STDOUT).\nSo, imagine you hit open index.html. open does not fail here. Instead, it successfully opens index.html with the default web browser. Assuming TheFuck could fix that and turn it into open -e index.html, you then think \u201cFuck!\u201d, close the browser and hit fuck. TheFuck then runs your previous command \u2013 open \u2013 to get its output, which in case loads up index.html with the default web browser yet again and exits right away, flawlessly, with no output. With that info, TheFuck prompts you with the fixed command, but you're left with index.html opened in the default web browser.\nPerhaps some rules could try and match the command script alone, regardlessly of the output, and TheFuck could run a first round of those rules before running the command itself. It could also base on the last command's exit status. This way we would assume the user knows what he's trying to unfuck. Not really sure how well this could work, though, I haven't thought much about it.\n. I'm gonna turn this last paragraph in a POC, when time allows.\n. What do you get from the following command?\nshell\nTF_ALIAS=fuck TF_SHELL_ALIASES=$(alias) PYTHONIOENCODING=utf-8 thefuck gp. Oh, sorry, I forgot to mention: make sure to run it from a Git repository with commits to be pushed. INW, run it in a scenario where it would correct a previous gp.. Great! So, what happens if, instead of that command I posted earlier, you run fuck? It should generate the same. Does it?\nIf it does: YAY! \ud83c\udf89 \nIf it doesn't: there might be something wrong with the way your fuck alias/function gets declared/interpreted/generated/whatever.\nWaiting on you ;-). @edwardsmit: the problem seems to be not with TehFuck itself but rather with the fuck function on your environment. You see, it works when you run thefuck manually. Let's try and identify where the problem might be. It may be a daunting process, so please bear with me. What are the outputs of the following two commands:\n\ntype fuck\nfunctions fuck\n. Hey @edwardsmit,\n\nGlad it's working for you again! Thanks for keeping us posted.\nSomehow I missed your replies, I'm really sorry about that. I'll review my notification settings.\nSo, I will close this one for now but if any of you users still experience this issue, please just reopen it.\n  . @hugovk your fuck alias definition looks odd \u2013 maybe it's very old. It should be a function instead. Take a look below.\nFor Bash:\nbash\nfuck ()\n{\n    TF_PYTHONIOENCODING=$PYTHONIOENCODING;\n    export TF_SHELL=bash;\n    export TF_ALIAS=fuck;\n    export TF_SHELL_ALIASES=$(alias);\n    export TF_HISTORY=$(fc -ln -10);\n    export PYTHONIOENCODING=utf-8;\n    TF_CMD=$(\n        thefuck THEFUCK_ARGUMENT_PLACEHOLDER $@\n    ) && eval $TF_CMD;\n    unset TF_HISTORY;\n    export PYTHONIOENCODING=$TF_PYTHONIOENCODING;\n    history -s $TF_CMD;\n}\nFor ZSH:\nbash\nfuck ()\n{\n    TF_PYTHONIOENCODING=$PYTHONIOENCODING;\n    export TF_SHELL=zsh;\n    export TF_ALIAS=fuck;\n    export TF_SHELL_ALIASES=$(alias);\n    export TF_HISTORY=\"$(fc -ln -10)\";\n    export PYTHONIOENCODING=utf-8;\n    TF_CMD=$(\n        thefuck THEFUCK_ARGUMENT_PLACEHOLDER $@\n    ) && eval $TF_CMD;\n    unset TF_HISTORY;\n    export PYTHONIOENCODING=$TF_PYTHONIOENCODING;\n    test -n \"$TF_CMD\" && print -s $TF_CMD\n}\nFor Fish:\nbash\nfunction asdfasdf --description 'Correct your previous console command'\n    set -l fucked_up_command $history[1]\n    env TF_SHELL=fish TF_ALIAS=asdfasdf PYTHONIOENCODING=utf-8 thefuck $fucked_up_command | read -l unfucked_command\n    if [ \"$unfucked_command\" != \"\" ]\n        eval $unfucked_command\n        builtin history delete --exact --case-sensitive -- $fucked_up_command\n        builtin history merge ^/dev/null\n    end\nend\nPlease review your setup, specially in regards to the following:\n```\n==> Caveats\nAdd the following to your .bash_profile, .bashrc or .zshrc:\neval $(thefuck --alias)\nFor other shells, check https://github.com/nvbn/thefuck/wiki/Shell-aliases\n```\n  . Awesome, @josephfrazier!\nWell, I feel I can push this even further \ud83d\ude03  As you're in the process of fixing these issues and changes haven't yet made into master, what would you say if I suggested you to remove a couple of commits and squash those which are logically similar/related?\nCommit 85a3e34 is a revert of 4d9f177, both could be removed. Also, all EXYZ-related commits could be joined together, leaving one single commit per violation \u2013\u00a0E123, E225, E231, E265, E302, E402, E711 and E731.\nWhat do you think about getting a cleaner history?\n. As for the failure, please check #568.\n. Good catch, @awonnacott! :+1:\nCan you please add a test case for it?\nThanks! \n. Thanks for reporting the issue. We're already looking for ways to fix it.\n. @liuml07 and @onewheelskyward would you be willing to try and confirm if #578 fixes this issue for you? This may include installing from master of altering the fuck function by hand.\nThanks!\n. Hello, @getthemike.\nCould you please post the output of each of the following commands?\n\nthefuck --version\nTHEFUCK_DEBUG=true thefuck git brnch\ntype fuck\necho $TF_OVERRIDDEN_ALIASES\n\nAlso, what is your shell?\nThanks!. We're always trying to keep up with new stable releases of Fish Shel. Since 2.4 there were some rather big changes to history management. Hence the new --exact option. Check #577 for reference.\nIf upgrading to newer versions of Fish Shell is not an option, you can disable history alteration with an entry alter_history = False in your settings.\nSorry for any inconvenience.\nI hope this helps.. There's no such rule, @Nek-, unfortunately. Are you willing to code it?. ~Hey, I'm curious: does this mean we stop supporting Git versions older than 2.13.1? See #668 for reference~\nGood job, @josephfrazier! \ud83d\udc4d. Confirmed it's fixed. Thanks, @nvbn . It should be eval (thefuck --alias | tr '\\n' ';') but the \\n wasn't escaped. This can be easily fixed.\nAre you interested? hint: https://hacktoberfest.digitalocean.com/. Because that nice and short trick of yours didn't occur to me at all! And now, after reading eval's source code more closely, I can see that, in the end, it pipes to source.\nGood job!\nLGTM \ud83d\udc4d  . Also kudos for the commit message! \ud83d\ude09 . The answer is in your very message.\n\nDEBUG: Call: fish -ic \"fuck\";\n\nYou are trying to fix a previous fuck command.\n\nDEBUG: Execution timed out!\n\nThe execution timed out.\n\n'wait_command': 3,\n\nIt waited 3 seconds until timing out.. Next release will include 2d81166213c403dce5c04d1fb73ba5d3e57d6676 which fixes this slowness. If any of you could test current master and confirm, I'd be grateful.\nThanks!. Hello, @Googulator!\nFirst of all, thank you very much for your intent in solving the issue.\nAs reported in #662, it's been fixed with a different approach, which you can check here. So, I believe we can move on and close this pull request. What are your thoughts?\nThanks.. @Googulator, I'll move on and close this pull request. Please feel free to reopen it \u2013 or submit a new one \u2013 if you see fit.. I think this one is beyond the scope of TheFuck. For instance, how would it suggest git remove github and not git rename github?. Good point, @fluxsauce \ud83d\udc4d . Please refer to the documentation:\n\nYou should place this command in your .bash_profile, .bashrc, .zshrc or other startup script:\n```bash\neval $(thefuck --alias)\n\nYou can use whatever you want as an alias, like for Mondays:\neval $(thefuck --alias FUCK)```. https://github.com/nvbn/thefuck#manual-installation is working again \ud83c\udf89  Thanks @nvbn . Nice! This one also lacks a proper test and a line in README.md explaining the new rule. Can you please add both? Thanks!. Looking good.\nHow about tests?. Hey, @Epse! Great to see a PR from you. However, it lacks a proper test and a line in README.md explaining the new rule. Can you please add both? Thanks!. Thanks for another contribution, @Epse! \ud83d\udc4d \ud83d\udc4a . Actually, I should have LGTMed here \ud83d\ude04 ! Well, it does.. > I've made match a bit more strict\nGreat, I like it! Thanks!. Fix is on its way! As in #738 and #744. Thanks @kosukemori for posting the workaround.. Fixed in 6290560. Hello! I cannot reproduce this one:\n$ eval \"$(thefuck --alias fuck)\"\n$ fuck\nNothing found\n$ functions fuck\nfuck () {\n    TF_PYTHONIOENCODING=$PYTHONIOENCODING \n    export TF_SHELL=zsh \n    export TF_ALIAS=fuck \n    export TF_SHELL_ALIASES=$(alias) \n    export TF_HISTORY=\"$(fc -ln -10)\" \n    export PYTHONIOENCODING=utf-8 \n    TF_CMD=$(\n                    thefuck THEFUCK_ARGUMENT_PLACEHOLDER $@\n                )  && eval $TF_CMD\n    unset TF_HISTORY\n    export PYTHONIOENCODING=$TF_PYTHONIOENCODING \n    test -n \"$TF_CMD\" && print -s $TF_CMD\n}\n$ alias @asdf='echo this is asdf'\n$ alias _wow='echo wow alias'        \n$ alias\n@asdf='echo this is asdf'\n_wow='echo wow alias'\nwhich-command=whence\n$ @asdf\nthis is asdf\n$ @@asdf\nzsh: command not found: @@asdf\n$ fuck\n@asdf [enter/\u2191/\u2193/ctrl+c]\nthis is asdf\nVersions:\n$ grep RELEASE= /etc/linuxmint/info\nRELEASE=18.3\n$ zsh --version\nzsh 5.1.1 (x86_64-ubuntu-linux-gnu)\n$ thefuck --version\nThe Fuck 3.25 using Python 3.6.1\nLooks like I'm missing something. But what?\n~p.s.1: I'll try with a newer zsh and post the results~\np.s.2: I tested with zsh 5.4.2 (x86_64-alpine-linux-musl) and the results are the same as above. What zsh version, @SilvesterHsu?. I still can't reproduce this issue. Can you please share your aliases? IWO output of alias omitting any sensitive information, of course. Thanks.. So this is not an issue anymore since some 5.2 minor (?) version:\n1b23d830ba7f# echo $ZSH_VERSION\n5.2\n1b23d830ba7f# zsh --version\nzsh 5.2 (x86_64-alpine-linux-musl)\n1b23d830ba7f# unalias -m '*'\n1b23d830ba7f# alias\n1b23d830ba7f# alias ll='ls -a'\n1b23d830ba7f# alias\nll='ls -a'\n1b23d830ba7f# foo=$(alias)\n1b23d830ba7f# export foo=$(alias)\n1b23d830ba7f# export foo=\"$(alias)\"\n1b23d830ba7f# print $foo\nll='ls -a'\nZsh 5.2 was released almost 3 years ago.\nThe question now is: should we support old versions?\nPlease cast your vote with either \ud83d\udc4d or \ud83d\udc4e reaction to this very message:\n\nThanks!. Thank you, @josephfrazier . > I have git aliased to hub and it never works for git commands. Other unaliased commands seem to work.\nHi, @jberglinds! Can you please add git to the THEFUCK_OVERRIDDEN_ALIASES environment variable as instructed here and see if it works?\nThanks!. Fixed in 6290560. Fixed in 6290560. Can you please give us more information to reproduce this:\n\nWhat was the command you were trying to correct? \nWhat is thefuck --version output?\n\nThanks!. Hi,\nI can't reproduce this. This is my setup:\n\nThe Fuck 3.25 using Python 3.5.2 (thefuck --version)\ntmux 2.6 (tmux -V)\niTerm2 Build 3.1.5.beta.2 (about menu)\n\nHow about yours? Thanks.. Well, I say we should move forward. If pytest made the move first, they did so for a reason. And even it being a test library, I think we're better dropping Python 3.3 support instead of freezing pytest<3.3. But that's MHO.. > I pushed f966ecd to get the tests working\nOh, I guess you accidentally pushed to master, @josephfrazier.. Also, according to Python 3.3.7 release notes, \"Python 3.3.x has reached end-of-life\" and \"all support for the 3.3 series of releases ended on 2017-09-29, five years after the initial release. This release, Python 3.3.7, was the final release for the 3.3 series.\". Thanks @josephfrazier for dropping Py33 support. This one looks all good now, I'll go ahead and merge it.. The psutil module should have been installed along with TheFuck in the installation process :thinking: Can you please give us more information:\n1. How did you install TheFuck?\n2. What is the output of thefuck --version?\n3. What is the output of pip list --format=columns?\n4. I think I know what you mean by start but I'm not sure. Can you clarify this?\n5. What are the steps to reproduce what you're experiencing?\nThanks!. Glad to know it works! I'm closing this issue for now. Fell free to reopen it in case it raises again. Thanks!. Thanks @davidhart82 for the fix, @andschwa for testing it and @josephfrazier for allowing another maintainer (and fish user) to have a look :+1: I'll do so. Very good job, @davidhart82! Thank you!\n\nYes, I'm wondering about a scenario where a user aliases a fish function, I should probably check that the aliased command is also not in the dict of aliases.\n\nIn this scenario, the overridden set should already contain the aliased function. :smiley: . Yeah... there's 'master' all around but I think that's okay as the tests are more readable now.. Your on :fire: @davidhart82! Let us know when you're done :slightly_smiling_face: . Thank you, @davidhart82!. Great! I also thought about this some while ago, I just can't remember what rule made me think of it, but there are some other rules that might benefit from this as well.. :thinking: I have a branch in my local repo (and maybe remote too) with attempts to cover #469. Ranging from this you're proposing to a very different and more complex solution. All to my dislike mainly because they made fuck a lot slower. Specially on my macbook with so many plugins.. I'll work on this asap.. Fixed in 6290560. Hi! Can you please share with us the output sequence of the following commands?\n```fish\ntype __tf_alias\necho $__tf_vers\ngrep 'sudp vim' ~/.local/share/fish/fish_history . # omit sensitive information from this one\n```\nThanks!. > The Fuck 3.11 using Python 2.7.14+\nSorry I missed this \u2013 your TheFuck is outdated. Current version is 3.25 but it has a bug in which it requires you to manually set the running shell, as reported in #717. This bug is not present in version 3.23, however.\nSo, let's see what that output sequence looks like and then we proceed.. > (sorry for not following your issue template)\nCan you please at least let us know which TheFuck version you have installed?\nthefuck --version\nThanks! \ud83d\ude42 . I still can't reproduce it. What is the version of ZSH in your case?\nWould you mind updating to 3.25 and try it again?\nThanks \ud83d\ude09 . Fixed in 6290560. How willing are you to write tests for this rule?. This is a duplicate of #783.\nNOTE: Please always make sure you're using the latest version before posting to issues. [update: there was no version newer than 3.25 when this issue was first reported, though]\nVersion 3.25 does not correctly detect the shell in some cases. @joaothallis, what version is yours? Please upgrade to 3.27 and confirm the bug is gone.. > The Fuck 3.25 using Python 3.6.5\n@joaothallis, what if you test with latest release?. I managed to reproduce this on a fresh installation (Docker). I'll investigate this ASAP. Thank you for reporting.. Fix is on its way. In the meantime, I guess you can use this temporary fix:\nfish\nalias fish_key_reader /usr/local/bin/fish_key_reader\nPlease let me know if it works for you.\nEdit: if the temporary fix doesn't work, try redeclaring with   (space) every alias declared with = (equal sign):\nfish\nalias foo echo  # declare like this\nalias foo=echo  # instead of this\nps.: maybe you'd want to clear thefuck's cache with rm ~/.cache/thefuck. @DmitriK I'm sorry to read that. Maybe you stumbled over another issue? Can you please post the output with the error with THEFUCK_DEBUG set to true and exported? (aka set -x THEFUCK_DEBUG true). Thanks for your inputs, @DmitriK! I've updated the fix and tests based on them. Also thanks for confirming it works on your side too. Please review and comment on it (#808).. Thanks for confirming, @friendlyfreedom!\n@maracuja-juice, please feel free to reopen if this still an issue for you.. Nice! Thanks, @Ewpratten.\nps.: the AppVeyor build fix is on its way.. Thanks for the comment, @MattKotsenas. Thanks @afwilkin for the fix. Closing this one.. This is a bug in Homebrew: Homebrew/brew#4989. Hi @gma2th,\nThank you for contributing to TheFuck.\nThe tests added in this PR pass even without the change in thefuck/rules/git_push.py.\nCan you please add tests that fail with the previous revision?. Hi @scolby33, thanks for contributing to TheFuck.\nIn Python, we should always try to solve the problem with string methods \u2013 such as endswith, startswith, lstrip, rstrip, etc. \u2013 before resorting to regular expressions, which are slower most of times.\nSo, I'll add a few line comments in order to suggest some changes to your PR regarding the above.. Sorry to know that you're having issues.\nWhat is the output of which thefuck?\nAlso, what is PATH defined as? i.e. what's the output of echo $PATH\nHope to get it solved soon.. You said you reinstalled thefuck with APT. So, what is the output of:\nls -lha /usr/bin/thefuck\n/usr/bin/thefuck --version. That's looking better.\nIt seems that another installation method installed TheFuck binaries in /usr/local/bin but left it somehow, let's say, \"corrupted\". APT, on the other hand, puts binaries in /usr/bin.\nAs /usr/local/bin precedes /usr/bin in PATH:\n...:/usr/local/bin:/usr/sbin:/usr/bin:...\nthe \"corrupted\" installed TheFuck takes precedence over APT's. So, go ahead and remove the binaries from /usr/local/bin:\nrm /usr/local/bin/thefuck\nrm /usr/local/bin/fuck. Not yet, 3.28 will include it. Unfortunately (and confusing) README.md contents don't follow what's released.. Thanks for reporting! This is kinda expected behavior, for the previous command takes longer than 3s to finish and times out. Only that AccessDenied exception needs to be excepted. Fix is on its way.\nBTW, TheFuck is meant to fix the previous failed command, not the current one:\n$ echoo ok; fuck\n-su: echoo: command not found\nNo fucks given\n$ echoo ok\n-su: echoo: command not found\n$ fuck\necho ok [enter/\u2191/\u2193/ctrl+c]\nok. Oh. This is already fixed and should have been closed by one of those merged commits.. This is not related to TheFuck itself. This is quite probably an issue with your Debian setup/package versions. Please have a look: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=870701. Sorry, overlooked the message, the The Fuck 3.1 using Python 3.5.0 part confuses me.. 1. What does which git tell you?\n1. Can you please post the output of THEFUCK_DEBUG=true thefuck gut?\n1. And how about zsh --version?. Thank you for reporting, @waldyrious! Fix is on its way.. No, it's the same case as the other one. BTW, in fact it's not really a bug. It's just that your path contains too many binaries that are closer to gut or gir than git is.. Update: I'll soon post a way to have git suggested in that case.. @waldyrious are you able to test that anyway? Please see if it works for you. Also, please give me your thoughts and let me know if you need any additional info, I'll be more than happy to help.. @waldyrious, there's no official instructions in TF's docs. However, you can use a temporary virtualenv to install TF from the fork. Then, you don't actually need to run it within your shell, just call it this way: env THEFUCK_NUM_CLOSE_MATCHES=10 thefuck gut push and check the suggestions.. Fixed as of #846.. Thanks for your contribution, @manikantanallagatla! Did you test it with PowerShell on Windows?. Thanks for the review, @josephfrazier! \"Rebase and merge\", absolutely! I also prefer it :-). Oh, let me add some tests to thefuck/output_readers/rerun.py.. Hi @sobelek,\nThank you for your contribution! Your PR is ok so far. Only there's already a PR for exactly that: #844\nBut it's awesome that you tested it and confirm it works!. This and other requirements are covered in \u201cInstallation\u201d.. Please follow instructions on README or on the wiki.. Have you kindly followed the installation instructions?\nPlease, feel free to reopen this issue if that still doesn't work for you.. What's your opinion, @josephfrazier?. Thanks, @fabiosantoscode!. Thanks for your PR, @abdulniyaspm.\nWhile I'd like to approve and accept this change \u2013 as much as many others \u2013 I believe we can and should wait until Python 2 is eventually discontinued. I think it's fair to all users.. I'm very glad to read your inputs, @josephfrazier and @nvbn! This is the result of @payton's and @asong4211's amazing work while I happily mentored them on HackIllinois 2019 last weekend! We had some fun there.\nCompleting your points:\n- Avoid adding the --post-match command to shell's history. Absolutely, @daenney! I'll update this pull request ASAP. Thank you!\nEm 26/04/2015 06:20, \"Daniele Sluijters\" notifications@github.com\nescreveu:\n\nIn README.md\nhttps://github.com/nvbn/thefuck/pull/130#discussion_r29108049:\n\n@@ -117,8 +117,16 @@ alias FUCK='fuck'\n Or in config.fish:\nfish\n-function fuck\n-    eval (thefuck $history[1])\n+function __thefuck_repl --description 'Replace operators into fish-compatible'\n+    set -l tmp (echo $argv | sed 's/ && / ; and /g')\n+    echo $tmp | sed 's/ || / ; or /g'\n+end\n+\n+function fuck --description 'Correct your previous console command'\n+    set -l eval_script /tmp/.thefuck.fish\n\nThis should probably use $TMPDIR instead / when it is set.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/pull/130/files#r29108049.\n. I still prefer adding an encoding line at the top of the file, like this:\n\n``` python\n-- encoding: utf-8 --\nfrom six.moves.urllib.parse import urlparse\n...\n```\n. Bumping new releases is up to project owners/maintainers. Also, it doesn't really belongs to any specific fix/feature one tries to solve/implement.\nI imagine you changed it in order to have thefuck upgraded by pip install. I'm not sure about your experience with Python development, but if you allow me to give you what may be a tip, you can use pip install -U -e . from the root of the project to have it installed in editable mode:\n$ pip help install\n[snip]\nInstall Options:\n  -e, --editable <path/url>   Install a project in editable mode (i.e. setuptools \"develop mode\")\n                              from a local project path or a VCS url.\n[snip]\n  -U, --upgrade               Upgrade all specified packages to the newest available version. This\n                              process is recursive regardless of whether a dependency is already\n                              satisfied.\n[snip]\nAlso, allow me to strongly recommend you using Virtualenv, if you're not already doing so.\n. The actual line should be:\n``` python\n-- encoding: utf-8 --\n``\n. You made this line work with Python 2, but now it fails with Python 3. The best option is to use [six](https://six.readthedocs.org/). Check #201.\n. You could have added it at this line instead.\n. We adopt the style of two lines before a function declaration. Please fix this.\n. Same here :+1: You might already know but it's always worth mentioning Python's [Code Style](http://docs.python-guide.org/en/latest/writing/style/).\n. It's a good style we follow to have 2 lines before a class definition.\n. Also, there are 2 spaces betweenreturnand'. Please remove one and align it linedown.\n. This import isn't used. Can you please remove it?\n. Here you're creating an instance ofGeneric. ~~_get_shell` should return the class itself.~~\nPlease ignore this nonsense :smile: \n. @nvbn: I thought about adding another check \u2013 is Fish \u2013 here but then thought this could be decided by the Shell classes implementation. Maybe a comment on Generic.put_to_history() would be a good idea, for future reference. What do you think?\n. Oops! Absolutely!\n. Please, add a new line here. [E302 expected 2 blank lines, found 1]\n. Please remove this unused import. [F401 imported but unused]\n. I'd recommend refactoring the test as the following:\n``` python\nimport pytest\nfrom thefuck.rules.ag_literal import get_new_command, match\nfrom tests.utils import Command\n@pytest.fixture\ndef stderr():\n    return ('ERR: Bad regex! pcre_compile() failed at position 1: missing )\\n'\n            'If you meant to search for a literal string, run ag with -Q\\n')\n@pytest.mark.parametrize('script', ['ag ('])\ndef test_match(script, stderr):\n    assert match(Command(script=script, stderr=stderr))\n@pytest.mark.parametrize('script', ['ag foo'])\ndef test_not_match(script):\n    assert not match(Command(script=script))\n@pytest.mark.parametrize('script, new_cmd', [\n    ('ag (', 'ag -Q (')])\ndef test_get_new_command(script, new_cmd, stderr):\n    assert get_new_command((Command(script=script, stderr=stderr))) == new_cmd\n``\n. Isn'tendswith()a slightly better option thanin?\n. I think we can remove this test entirely. If we ever need it, Git will give it back to us like magic.\n. This one is necessary. Looks like we'll need# noqa: E402` in every of the following import lines.\n. Nice one.\n. Good catch.\n. How about this?\n``` python\ntests = (\n    ('gcc a.c', 'a.c', 3, 1, '',\n     \"\"\"\na.c: In function 'main':\na.c:3:1: error: expected expression before '}' token\n }\n  ^\n\"\"\"),\n('clang a.c', 'a.c', 3, 1, '',\n \"\"\"\n\na.c:3:1: error: expected expression\n}\n^\n\"\"\"),\n```\nI, personally, prefer this over # noqa in every single line. What do you think?\n. > I thought it would be easier to just use # noqa to ignore both the whitespace errors and the indent errors.\nYeah. At least until flake8 doesn't ignore just what it's told to. Maybe we're \u2013 or I am \u2013 getting a bit too meticulous here. These are test files, after all. Anyway, I guess that just appending # noqa to the one line where the tests = (...) tuple definition ends, is sufficient.\n. This answers my question!. -s (lowercase) is a valid command and will timeout when ran by TheFuck. Meaning output will be empty. The rule must tell it doesn't require output. So, add this to the end of the rule:\npython\nrequires_output = False. These 2 lines can be replaced by one:\npython\nreturn re.findall(r'^ +(git push [^\\s]+ [^\\s]+)', command.output, re.MULTILINE)\nAnd maybe move it inside get_new_command, while fixing the latter too.. Let's keep it consistent. Can you please remove that little space before ;?. @git_support already asserts the presence of git in script.. Rules are enabled by default.. This line can be omitted.. This way output is not being used as a fixture. I'll comment on that ASAP.. Please consider the following:\n```python\n@pytest.fixture\ndef branch():\n    return 'master'\noutput fixture definition stays the same\n@pytest.mark.parametrize('script', [\n    'git push',\n    'git push master'])\ndef test_match(script, output):\n    assert match(Command(script, output))\n@pytest.mark.parametrize('script, branch', [\n    ('git push', 'it\\'s-just-a-branch'),\n    ('git push let\\'s-push-it', 'let\\'s-push-it')])\ndef test_match_branch(script, branch, output):\n    assert match(Command(script, output))\nthe rest must be adapted\n```\nWhat do you guys think of this change?. You just read my mind! I was just writing a comment suggesting indirect parameters. Top notch! :clap: . This else can be removed :wink:. I think there are some ' missing here and in lines bellow.. They are now ALL AMD commands :tada: . The actual output contains a LINEFEED (\\n) at the end, so should the test output: 'cat: foo: Is a directory\\n' and 'cat: /foo/bar/: Is a directory\\n'. re.match could be replaced with str.startswith, str.rstrip and str.endswith used in conjunction. str.rstrip is needed here because command.output ends with \\n (see previous line comment). This can be easily replaced with str.replace. Just make sure that only the first occurrence of cat is replaced.. This test parameter can be removed.. Well, as you probably guessed, my initial thought was that there may be a version \u2013 or a user defined alias or function \u2013 of cat that doesn't add that trailing newline. Then I went on and did some benchmarks and it turns out rstrip makes it around 20% slower \u2013\u00a0not that much. Maybe it's worth having.\nOr maybe we're better off with just ... endswith(': Is a directory\\n') and those who use a cat that doesn't follow \u201cdefault\u201d implementation are \u201din a state of sin and deserve whatever happens to them.\u201d We can still have ... or endswith(': Is a directory') if we ever need to, after all.\nI wonder what your thoughts on this are.. WOW! Super! This is how far we go for open source! \ud83c\udf89\nLet me share my benchmarks with you:\nName (time in ns)    |        Min          |        Max          |       Mean          | StdDev          |     Median          |    IQR          | Outliers  OPS (Kops/s)          | Rounds | Iterations\n---------------------|---------------------|---------------------|---------------------|-----------------|---------------------|-----------------|---------------------------------|--------|-----------\ntest_with_endswith   |   422.3146 (1.00)   |   441.1720 (1.02)   |   428.6322 (1.01)   | 7.4089 (4.96)   |   426.0483 (1.00)   | 7.9161 (4.70)   |      1;0    2,333.0027 (0.99)   |      5 |   10000000\ntest_with_rstrip     |   528.8423 (1.25)   |   532.5924 (1.24)   |   531.3621 (1.25)   | 1.4928 (1.0)    |   531.7795 (1.25)   | 1.6846 (1.0)    |      1;0    1,881.9557 (0.80)   |      5 |    1895592\ntest_with_match      | 1,164.0312 (2.76)   | 1,171.8660 (2.72)   | 1,167.8383 (2.74)   | 3.7479 (2.51)   | 1,166.3237 (2.75)   | 6.9720 (4.14)   |      3;0      856.2829 (0.36)   |      5 |    1000000\nGenerated from:\n```python\nimport pytest\nimport re\nclass TestEndswithRstripMatch(object):\ntext = 'cat: /foo/bar/: Is a directory\\n'\n\ndef with_match(self):\n    return re.match(r'cat: .+: Is a directory', self.text)\n\n@pytest.mark.benchmark(group='endswith vs rstrip vs match')\ndef test_with_match(self, benchmark):\n    result = benchmark(self.with_match)\n    assert result\n\ndef with_rstrip(self):\n    return self.text.startswith('cat: ') and self.text.rstrip().endswith(': Is a directory')\n\n@pytest.mark.benchmark(group='endswith vs rstrip vs match')\ndef test_with_rstrip(self, benchmark):\n    result = benchmark(self.with_rstrip)\n    assert result\n\ndef with_endswith(self):\n    return self.text.startswith('cat: ') and self.text.endswith(': Is a directory\\n')\n\n@pytest.mark.benchmark(group='endswith vs rstrip vs match')\ndef test_with_endswith(self, benchmark):\n    result = benchmark(self.with_endswith)\n    assert result\n\n```\nYou might as well need $ pip install pytest-benchmark and these docs.\nSo, sure. Let's go for the rstripless version and make it more tolerant in the future, if necessary.. I had the exact same thought. But the next thought was \"Wait. It's text, not code\". Perhaps it makes sense to have a period there. For me it will look like an unfinished list.. I believe that's a good one, reasonable change. :+1: . I'd rather like it to read something like:\nOn OS X, you can install *The Fuck* via [Homebrew][homebrew] (or via [Linuxbrew][linuxbrew] on Linux):. ",
    "jordelver": "I'm having this problem still :(\nI installed with brew install thefuck\nIf I try the example\nshell\n~ $ thefuck git brnch\nNo fucks given\nI followed the instructions to add fish function and that gives the same output.\n``` shell\n$ fish -v\nfish, version 2.1.2\n~ $ thefuck -v\nThe Fuck 2.7\n```\nAny ideas what's wrong?\n. Great, thanks :+1: \n. Here you go @scorphus :)\n``` shell\n~ $ thefuck git brnch\nDEBUG: Run with settings: {'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'no_colors': True,\n 'priority': {},\n 'require_confirmation': True,\n 'rules': [],\n 'wait_command': 3}\nDEBUG: Received stdout: \nDEBUG: Received stderr: 08:03:53.456375 git.c:555               trace: exec: 'git-brnch'\n08:03:53.456746 run-command.c:351       trace: run_command: 'git-brnch'\ngit: 'brnch' is not a git command. See 'git --help'.\nDid you mean this?\n    branch\nDEBUG: Call: fish -ic \"git brnch\"; with env: {'VERSIONER_PYTHON_PREFER_32_BIT': 'no', '__fish_bin_dir': '/usr/local/Cellar/fish/HEAD/bin', 'LOGNAME': 'jord', 'USER': 'jord', 'PATH': '/usr/local/Cellar/fzf/HEAD/bin:/Users/jord/.fzf/bin:/Users/jord/.rubies/ruby-2.2.1/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/CrossPack-AVR/bin', 'HOME': '/Users/jord', 'DISPLAY': '/private/tmp/com.apple.launchd.cK00syPF8a/org.macosforge.xquartz:0', 'TERM_PROGRAM': 'iTerm.app', 'LANG': 'C', 'TERM': 'screen-256color', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.gLFdjoUbyR/Render', 'COLORFGBG': '7;0', 'VERSIONER_PYTHON_VERSION': '2.7', 'SHLVL': '2', 'XPC_FLAGS': '0x0', 'ITERM_SESSION_ID': 'w0t0p0', 'XPC_SERVICE_NAME': '0', 'PYTHONPATH': '/usr/local/Cellar/thefuck/2.7/libexec/lib/python2.7/site-packages:/usr/local/Cellar/thefuck/2.7/libexec/vendor/lib/python2.7/site-packages', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.NHKCLDRw9z/Listeners', 'TMUX': '/private/var/folders/n8/j262k8b55t566gvwbdzjbz_80000gn/T/tmux-501/default,10042,0', '__fish_sysconfdir': '/usr/local/Cellar/fish/HEAD/etc/fish', 'SHELL': '/usr/local/bin/fish', 'ITERM_PROFILE': 'Default', 'LC_ALL': 'C', 'TMPDIR': '/var/folders/n8/j262k8b55t566gvwbdzjbz_80000gn/T/', '__fish_datadir': '/usr/local/Cellar/fish/HEAD/share/fish', 'GIT_TRACE': '1', '__CF_USER_TEXT_ENCODING': '0x1F5:0x0:0x0', 'PWD': '/Users/jord', '__fish_help_dir': '/usr/local/Cellar/fish/HEAD/share/doc/fish', 'TMUX_PANE': '%1'}; took: 0:00:00.102005\nDEBUG: Loaded rules: brew_install, brew_unknown_command, brew_upgrade, cargo, cargo_no_command, cd_correction, cd_mkdir, cd_parent, composer_not_command, cp_omitting_directory, cpp11, dirty_untar, dirty_unzip, django_south_ghost, django_south_merge, docker_not_command, dry, fix_alt_space, fix_file, git_add, git_branch_delete, git_branch_list, git_checkout, git_diff_staged, git_fix_stash, git_not_command, git_pull, git_pull_clone, git_push, git_push_pull, git_stash, go_run, grep_recursive, gulp_not_task, has_exists_script, heroku_not_command, history, java, javac, lein_not_task, ls_lah, man, man_no_space, mercurial, mkdir_p, no_command, no_such_file, open, pip_unknown_command, python_command, python_execute, quotation_marks, rm_dir, sed_unterminated_s, sl_ls, ssh_known_hosts, sudo, switch_lang, systemctl, test.py, tmux, tsuru_login, tsuru_not_command, whois\nDEBUG: Trying rule: brew_install; took: 0:00:00.000010\nDEBUG: Trying rule: brew_unknown_command; took: 0:00:00.000005\nDEBUG: Trying rule: brew_upgrade; took: 0:00:00.000003\nDEBUG: Trying rule: cargo; took: 0:00:00.000003\nDEBUG: Trying rule: cargo_no_command; took: 0:00:00.000002\nDEBUG: Trying rule: cd_correction; took: 0:00:00.000005\nDEBUG: Trying rule: cd_mkdir; took: 0:00:00.000006\nDEBUG: Trying rule: cd_parent; took: 0:00:00.000003\nDEBUG: Trying rule: composer_not_command; took: 0:00:00.000003\nDEBUG: Trying rule: cp_omitting_directory; took: 0:00:00.000005\nDEBUG: Trying rule: cpp11; took: 0:00:00.000003\nDEBUG: Trying rule: dirty_untar; took: 0:00:00.000002\nDEBUG: Trying rule: dirty_unzip; took: 0:00:00.000003\nDEBUG: Trying rule: django_south_ghost; took: 0:00:00.000003\nDEBUG: Trying rule: django_south_merge; took: 0:00:00.000005\nDEBUG: Trying rule: docker_not_command; took: 0:00:00.000007\nDEBUG: Trying rule: dry; took: 0:00:00.000005\nDEBUG: Trying rule: fix_alt_space; took: 0:00:00.000005\nDEBUG: Trying rule: fix_file; took: 0:00:00.000009\nDEBUG: Trying rule: git_add; took: 0:00:00.000004\nDEBUG: Trying rule: git_branch_delete; took: 0:00:00.000003\nDEBUG: Trying rule: git_branch_list; took: 0:00:00.000004\nDEBUG: Trying rule: git_checkout; took: 0:00:00.000004\nDEBUG: Trying rule: git_diff_staged; took: 0:00:00.000003\nDEBUG: Trying rule: git_fix_stash; took: 0:00:00.000003\nDEBUG: Trying rule: git_not_command; took: 0:00:00.000003\nDEBUG: Trying rule: git_pull; took: 0:00:00.000003\nDEBUG: Trying rule: git_pull_clone; took: 0:00:00.000003\nDEBUG: Trying rule: git_push; took: 0:00:00.000003\nDEBUG: Trying rule: git_push_pull; took: 0:00:00.000003\nDEBUG: Trying rule: git_stash; took: 0:00:00.000003\nDEBUG: Trying rule: go_run; took: 0:00:00.000003\nDEBUG: Trying rule: grep_recursive; took: 0:00:00.000003\nDEBUG: Trying rule: gulp_not_task; took: 0:00:00.000005\nDEBUG: Trying rule: has_exists_script; took: 0:00:00.000027\nDEBUG: Trying rule: heroku_not_command; took: 0:00:00.000007\nDEBUG: Trying rule: history; took: 0:00:00.076158\nDEBUG: Trying rule: java; took: 0:00:00.000021\nDEBUG: Trying rule: javac; took: 0:00:00.000004\nDEBUG: Trying rule: lein_not_task; took: 0:00:00.000006\nDEBUG: Trying rule: ls_lah; took: 0:00:00.000007\nDEBUG: Trying rule: man; took: 0:00:00.000008\nDEBUG: Trying rule: man_no_space; took: 0:00:00.000006\nDEBUG: Trying rule: mercurial; took: 0:00:00.000009\nDEBUG: Trying rule: mkdir_p; took: 0:00:00.000005\nDEBUG: Trying rule: no_command; took: 0:00:00.000010\nDEBUG: Trying rule: no_such_file; took: 0:00:00.000846\nDEBUG: Trying rule: open; took: 0:00:00.000005\nDEBUG: Trying rule: pip_unknown_command; took: 0:00:00.000007\nDEBUG: Trying rule: python_command; took: 0:00:00.000011\nDEBUG: Trying rule: python_execute; took: 0:00:00.000009\nDEBUG: Trying rule: quotation_marks; took: 0:00:00.000008\nDEBUG: Trying rule: rm_dir; took: 0:00:00.000008\nDEBUG: Trying rule: sed_unterminated_s; took: 0:00:00.000005\nDEBUG: Trying rule: sl_ls; took: 0:00:00.000007\nDEBUG: Trying rule: ssh_known_hosts; took: 0:00:00.000010\nDEBUG: Trying rule: sudo; took: 0:00:00.000052\nDEBUG: Trying rule: switch_lang; took: 0:00:00.000004\nDEBUG: Trying rule: systemctl; took: 0:00:00.000006\nDEBUG: Trying rule: test.py; took: 0:00:00.000070\nDEBUG: Trying rule: tmux; took: 0:00:00.000007\nDEBUG: Trying rule: tsuru_login; took: 0:00:00.000006\nDEBUG: Trying rule: tsuru_not_command; took: 0:00:00.000003\nDEBUG: Trying rule: whois; took: 0:00:00.000003\nDEBUG: Matched rules: \nNo fucks given\nDEBUG: Total took: 0:00:00.317003\n``\n. Hey @scorphus. I'm confused, the example above doesn't use the fish function does it? Doesn't it invoke thethefuck` command directly? I'm happy to test this out though :)\n. Sorry for the delay. I've tried it out but I get the same output as before :(\nIf thefuck git brnch doesn't work, I don't understand why this would? I don't understand :(\n. Thanks. I'm on Mac OS X 10.10.4.\n$ pip freeze\nYou are using pip version 7.1.0, however version 7.1.2 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\ndoge==3.5.0\nvboxapi==1.0\nwheel==0.24.0\n$ python -c 'import sys; print(sys.version)'\n2.7.10 (default, Jul 13 2015, 12:05:58)\n[GCC 4.2.1 Compatible Apple LLVM 6.1.0 (clang-602.0.53)]\n$ which python\n/usr/local/bin/python\n```\n$ ls - lha $(dirname $(dirname $(which python)))/lib/py*/site-packages/\nls: -: No such file or directory\nls: lha: No such file or directory\n/usr/local/lib/python2.7/site-packages/:\n_markerlib               pkg_resources\ndoge                    setuptools\ndoge-3.5.0.dist-info            setuptools-18.0.1-py2.7.egg-info\neasy_install.py             sitecustomize.py\neasy_install.pyc            sitecustomize.pyc\npip                         wheel\npip-7.1.0-py2.7.egg-info        wheel-0.24.0-py2.7.egg-info\n/usr/local/lib/python3.4/site-packages/:\npycache         pip-7.1.0-py3.4.egg-info    sitecustomize.py\n_markerlib          pkg_resources           wheel\neasy_install.py         setuptools          wheel-0.24.0-py3.4.egg-info\npip                     setuptools-18.1-py3.4.egg-info\n```\n$ python -c 'import psutil; print(psutil); print(psutil.__version__);'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nImportError: No module named psutil\n. Fish shell didn't like your wildcard so I did this :)\n$ ls -1 /usr/local/Cellar/thefuck/2.7/libexec/vendor/lib/python2.7/site-packages/\n_markerlib\n_psutil_osx.so\n_psutil_posix.so\ncolorama\ncolorama-0.3.3-py2.7.egg-info\neasy_install.py\npathlib-1.0.1-py2.7.egg-info\npathlib.py\npathlib.pyc\npkg_resources\npsutil\npsutil-2.2.1-py2.7.egg-info\nsetuptools\nsetuptools-18.0.1-py2.7.egg-info\nsix-1.9.0-py2.7.egg-info\nsix.py\nsix.pyc\n. ",
    "jschank": "I had this problem too, and for me the problem was that I had installed fish, with homebrew, and used the --HEAD option. Apparently when you do this, updating/upgrading doesn't work. For me I had to uninstall fish, and then reinstall it to get to the latest. (at the time that was fish 2.2.0) And that solved it for me.\nOthers may benefit from checking this\n. ",
    "braco": "Yeah, it would be nice to have a \"run command\" [Y/n]: prompt before executing. I would not use this without some confirmation. So many bad things can happen in shell.\nhttps://github.com/nvbn/thefuck/pull/7\n. ",
    "Cassum": "By the way, this would solve an alias problem (with another $(..) in .bashrc)\n. ",
    "vikstrous": "It seems like fish and bash both have the history command. The issue is that in fish the history is in reverse-chronological order, but in bash it's in chronological order. In bash it's prefixed with a number, in fish it's not. It requires detecting what shell you are using and testing with different shells. I don't think it's impossible. It's just harder.\n. I just tried it. It seems to work. Thanks!\nI made a PR for fixing pacman without sudo: #30 \n. Read the README.\nYou need this in your .zshrc:\nalias fuck='$(thefuck $(fc -ln -1))'\nThe command you want to run is fuck, not thefuck.\n. Actually, there's a problem with using sudo with the above. This works much  better:\nfunction fuck\n    eval (thefuck $history[1])\nend\n. I think it would be cool to use strace for detecting permission issues. It's still a heuristic, but it might be better.\nExample:\n```\n\nstrace cat /etc/shadow 2>&1 | grep EACCES\nopen(\"/etc/shadow\", O_RDONLY)           = -1 EACCES (Permission denied)\n``\n. Yeah, I looked through the pacman strace and there's really nothing useful there. I wonder how it knows that you are not root. In any case, another possibility is to check that the command starts withpacmanand returns1`.\n. \n",
    "jof": "I too would advocate for the WTFPL, here. It just seems so .... right.\nI of course respect your choice of license.\n. ",
    "felixonmars": "And I have added thefuck to [community] repository. Enjoy :P\n. @hcgraf Thanks for the tip, but I'm already using Python 3 :)\n. I have tried to downgrade openssh from 7.0p1 to 6.9p1 (which worked for me before) - and still getting the same error.\n. ",
    "SoniEx2": "You should make it fix running pacman without sudo\n. ",
    "jamescostian": ":+1: for this solution that prevents heart attacks (#1)\n\n. ",
    "ahmetb": "Dry fuck doesn't sound like a good idea at all. Kills the point of the project. Nobody's gonna do --dry.\nHow about printing the command that's going to be executed, sleeping 1.5 or 2 seconds to give user a chance to ctrl+c? git autocorrect config does this way and works for most. https://coderwall.com/p/gvw46q/git-autocorrect-spelling\n. ",
    "hmemcpy": "Is this like dry humping then?\n. ",
    "skyrocknroll": "I Would like to Have this 'Run command? [Y/n] \n+1 \nAsking the user  permission by showing the command  before executing is base required feature i would say \n. if i want to use this for serious command which modifies or deletes my system data then it would be nice to have confirmation.\n. ",
    "nwinkler": "If a question is asked, it doesn't sound like dry mode to me. With other tools, dry mode doesn't do anything.\nThe above (\"Run command? [Y/n]\") looks more like interactive mode to me, so a -i instead of --dry might be more appropriate.\n. Seems to be the same issue as #2 - Bash on OS X does not give recommendations when a command is not found.\n. Absolutely - this works great now!\n- vom -> vim\n- lss -> less\netc.\n. :+1: If this ever gets bundled with the tool, please make it optional or disabled by default :-)\n. Don't you want to cd into the created directory afterwards?\nI would also use mkdir -p to create any missing directories if you try to do something like this cd foo/bar/baz.\n. It would be great to have a test case as well...\n. :+1: Great idea!\nA test case would be nice...\n. That's a bad idea. If the directory is not empty, rmdir foo will complain with rmdir: foo: Directory not empty. The purpose of rm -rf is to delete the directory and all of its contents...\n. No, it would not, since it would result in the need to do two fucks:\n$ rm foo\nrm: foo: is a directory\n$ fuck\nrmdir foo\nrmdir: foo: Directory not empty\n$ fuck\nrm -rf foo\n. Not in this case :-)\n. I've got a similar error. My $PATH contains an entry for ./node_modules/bin to include a potential local node_modules/bin folder under the current directory. Since this folder doesn't always exist, fuck fails with the following error:\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 9, in <module>\n    load_entry_point('thefuck==1.18', 'console_scripts', 'thefuck')()\n  File \"/Users/nils.winkler/workspaces/Nils/thefuck/thefuck/main.py\", line 136, in main\n    matched_rule = get_matched_rule(command, rules, settings)\n  File \"/Users/nils.winkler/workspaces/Nils/thefuck/thefuck/main.py\", line 93, in get_matched_rule\n    if rule.match(command, settings):\n  File \"/Users/nils.winkler/workspaces/Nils/thefuck/thefuck/rules/no_command.py\", line 16, in match\n    _get_all_bins()))\n  File \"/Users/nils.winkler/workspaces/Nils/thefuck/thefuck/rules/no_command.py\", line 9, in _get_all_bins\n    for exe in Path(path).iterdir()\n  File \"/Library/Python/2.7/site-packages/pathlib.py\", line 982, in iterdir\n    for name in self._accessor.listdir(self):\n  File \"/Library/Python/2.7/site-packages/pathlib.py\", line 346, in wrapped\n    return strfunc(str(pathobj), *args)\nOSError: [Errno 2] No such file or directory: 'node_modules/.bin'\n. With 1.20, I'm now getting this error:\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 9, in <module>\n    load_entry_point('thefuck==1.20', 'console_scripts', 'thefuck')()\n  File \"/Users/nils.winkler/workspaces/Nils/thefuck/thefuck/main.py\", line 136, in main\n    matched_rule = get_matched_rule(command, rules, settings)\n  File \"/Users/nils.winkler/workspaces/Nils/thefuck/thefuck/main.py\", line 93, in get_matched_rule\n    if rule.match(command, settings):\n  File \"/Users/nils.winkler/workspaces/Nils/thefuck/thefuck/rules/no_command.py\", line 23, in match\n    _get_all_bins()))\n  File \"/Users/nils.winkler/workspaces/Nils/thefuck/thefuck/rules/no_command.py\", line 16, in _get_all_bins\n    for exe in _safe(Path(path).iterdir, [])\n  File \"/Library/Python/2.7/site-packages/pathlib.py\", line 982, in iterdir\n    for name in self._accessor.listdir(self):\n  File \"/Library/Python/2.7/site-packages/pathlib.py\", line 346, in wrapped\n    return strfunc(str(pathobj), *args)\nOSError: [Errno 2] No such file or directory: 'node_modules/.bin'\n. Sorry, no, still the same error:\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 9, in <module>\n    load_entry_point('thefuck==1.21', 'console_scripts', 'thefuck')()\n  File \"/Users/nils.winkler/workspaces/Nils/thefuck/thefuck/main.py\", line 136, in main\n    matched_rule = get_matched_rule(command, rules, settings)\n  File \"/Users/nils.winkler/workspaces/Nils/thefuck/thefuck/main.py\", line 93, in get_matched_rule\n    if rule.match(command, settings):\n  File \"/Users/nils.winkler/workspaces/Nils/thefuck/thefuck/rules/no_command.py\", line 23, in match\n    _get_all_bins()))\n  File \"/Users/nils.winkler/workspaces/Nils/thefuck/thefuck/rules/no_command.py\", line 16, in _get_all_bins\n    for exe in _safe(lambda: Path(path).iterdir(), [])\n  File \"/Library/Python/2.7/site-packages/pathlib.py\", line 982, in iterdir\n    for name in self._accessor.listdir(self):\n  File \"/Library/Python/2.7/site-packages/pathlib.py\", line 346, in wrapped\n    return strfunc(str(pathobj), *args)\nOSError: [Errno 2] No such file or directory: 'node_modules/.bin'\nTo test this, add ./node_modules/bin to your $PATH variable and try to run fuck in a folder that does not have a node_modules folder.\n. Yes, it's working fine for me now! Thanks a lot for the hard work on this fuck! (Pun intended)\n. I suggest to take a similar approach to the no_command rule (https://github.com/nvbn/thefuck/blob/master/thefuck%2Frules%2Fno_command.py#L24):\n- Get the list of available branches (from git branch -a)\n- Use a function like get_close_matches (see code example above) to find the one that's closest to what the user typed.\n. To avoid adding the fuck commands to history, you can use the following in Bash:\nexport HISTIGNORE=' *'\nThen any command prefixed with a space will not be added to history. So instead of typing fuck, you would need to type fuck (with a space as the first character), and it will not be added to the shell's history.\n. Looks like #50...\n. Good catch! Seems to be OS-specific. On OS X (10.10.3, GNU bash, version 3.2.57(1)-release (x86_64-apple-darwin14)), it's using the lower case version (is a directory).\n. Typing ls again is two characters, typing fuck is four characters that you have to type. Isn't it quicker to simply type ls?\n. True...\n. I think this can be fixed by changing the alias to use eval:\nbash\nalias fuck='eval $(thefuck $(fc -ln -1))'\nThis makes it work for me:\nbash\n$ fuck\nps -ef | grep foo\n  502 12900  2764   0 11:13am ttys003    0:00.00 grep --color=auto foo\nI'll create a PR for this...\n. Yes, good point. I've seen that the no_command rule only fixes the first part of the command. Something like ps -ef | lss currently doesn't get fixed, since it doesn't check for possible alternatives for lss.\n. Instead of providing a dictionary, wouldn't it make more sense to use something like the existing Bash completion for Homebrew?\n`brew --prefix`/Library/Contributions/brew_bash_completion.sh\nThis file has a complete definition of all of the available brew commands.\n. @kimtree Sure, I understand that. I was trying to suggest that instead of hardcoding the possible commands in the rule, maybe there's a way to use the existing completion command to get a hold of the possible commands supported by the locally installed version of Homebrew. I don't know how to go about this, but wanted to make the suggestion nonetheless.\n. Is there a way for the program to know which shell is being used?\n. I've reported @kingwood2112 to GitHub support for the above spam messages...\n. How would it know what to do? How would it know to run cd .. instead of cd.. in this case?\n. That sounds like a reasonable approach! It would need some fiddling with the command parameters so e.g. learning that the foo/bar/baz part in mkdir foo/bar/baz is the dynamic part, so when you run mkdir this/is/great and you get the similar error message to the first command, it will know what to do.\nMany of the rules are built in the following fashion:\n- Apply regex match on command.script, command.stdout and command.stderr.\n- Replace/transform part of command.script to fix the issue, e.g. prepending sudo or adding a parameter (-p in the mkdir case).\nI agree that there should be a moderately easy way to define these without programming the rules...\n. A way to share learned fuckups?\nThe learned fuckups should be stored in the local ~/.thefuck folder.\n. This is great! I wonder though whether you have to provide your own implementation of finding close matches.\nThe no_command rule uses a library function to do this, maybe you could reuse that: https://github.com/nvbn/thefuck/blob/master/thefuck/rules/no_command.py#L24\n. This is dangerous in the case the directory name contains the letters cp, they will be replaced as well. Either add the 1 parameter as a third parameter (maxreplace), or use a regular expression, e.g.\nreturn re.sub('^cp (.*), 'cp -r \\\\1', command.script)\n. This could be merged into one line...\n. Looks like the wrong import... Shouldn't you import thefuck.rules.python_command here?\n. Shouldn't it unstash the changes after running the command? Like git stash pop?\n. ",
    "DavidJFelix": "Shouldn't it really change it to rm -rf --no-preserve-root?\n. ",
    "zenoamaro": "@kballard, the bits about waste, quoting and sourcing instead of evaling are spot-on, but are you sure about history also including the currently running command?\n$ echo foo\nfoo\n$ echo (history | head -n1)\necho foo\nConversely, I find that history[2] yields the second-to-last command:\n$ echo foo\nfoo\n$ echo bar\nbar\n$ echo $history[2]\necho foo\nThis is with fish v2.1.1,\n. I can see mentions of $history[1] in various threads:\n- https://github.com/fish-shell/fish-shell/issues/984\n- https://github.com/fish-shell/fish-shell/issues/288\nWhere ridiculousfish themself agree that it should return the last \nexecuted command.\nMay be a difference in arch/plugins/etc? For comparison, this is Fish \nv2.1.1 installed with Homebrew on OSX.\n. Here is a repeatable test on a completely pristine machine from instantcloud.io with even older fish 2.1.0:\n\n. I agree, if not only for the quoting and eval issues.\nPerformance is also (predictably) way better:\n```\n$ time -p fish -c 'for a in (seq 1000); history | head -n1 > /dev/null; end'\nreal         3.25\nuser         2.06\nsys          1.58\n$ time -p fish -c 'for a in (seq 1000); echo $history[1] > /dev/null; end'\nreal         1.32\nuser         0.65\nsys          0.84\n```\n. ",
    "lilyball": "That's odd. My several-months-old dev version of Fish 2.1.1, and my just-installed tip-of-master version of Fish 2.1.2, both behave as I described:\n```\n\necho foo\nfoo\necho (history | head -n1)\necho (history | head -n1)\necho foo\nfoo\necho bar\nbar\necho $history[2]\necho bar\n```\n. I'm also running OS X.\n\nI'm wondering now if maybe master has a bug where it's adding the command to history too eagerly. Note that master actually has a lot of changes from 2.1.2 (I believe master has been considered to be equivalent to at least 2.2 for a long time, and 2.1.1 / 2.1.2 were just minor changes from 2.1.0).\nGiven the state of things at the moment, I guess the install instructions should be changed to use $history[1] instead of $history[2] until this can be tracked down.\n. Yep, the commit referenced in that issue fish-shell/fish-shell#984 (aa1b065dd1c03f7c0867d002badcf0dc88feb3c4) is the culprit. Building fish from before that commit expands $history[1] to the previous command instead of the current one. That commit is only on master, it's not in v2.1.2.\n. I've filed fish-shell/fish-shell#2028 about this issue.\nIn the meantime, @nvbn, it seems clear that the instructions need to be changed to say $history[1] instead of $history[2] (but other than that, the new function is better than the old).\n. ",
    "aimonb": "Big +1 from me.. This is first thing our team thought about. \n. I would imagine we could design a simple algorithm that compares the last command with the correct command given as an argument and auto generate a regex and rule that matches. This would make it so the user only has to tell fuck about the correct command and not a whole rule. If the new rule matches an existing rules command it can append the new rule. \n. ",
    "morgante": "I approve.\n. ",
    "MartinSeeler": "Definitly necessary!\n. ",
    "Astalaseven": "It looks like a SSL error with pypi.python.org, not with the package itself. Can you download some other package from pypi?\n. ",
    "felipevolpone": "Hey @arvindravi, have you tried do this?\nshellscript\ngit clone git@github.com:nvbn/thefuck.git\ncd thefuck/\npython setup.py install\n. ",
    "arvindravi": "Still can't get it to work with pip. Tried with easy_install and it worked like a charm! \n@felipevolpone, That worked too. Thanks! Except the command was python setup.py install\n@Astalaseven: The issue is definitely with Pypi (or my setup?), I couldn't install other packages too with pip, and ended up with the same error.\nClosing this as its not the package's issue. \n. ",
    "hojgr": "Happend to me too, bash, Linux Mint (kernel - 3.13.0-24-generic), python 2.7.6\nIn new terminal it works (Can't fuck twice) but it is maybe because i've tried a command in another terminal. \n. ",
    "ds64": "Same for me when i use fuck after wrong python command (python for example).\nOS X 10.10.3, iterm(fish), python 2.7.9\n. On 1.11 it freezes for 5 seconds and gives such output:\n\nNo fuck given\n             \u23ce\n\nOS X 10.10.3, fish shell\nBut at least it doesn't freeze terminal forever\n. >: git sttus\ngit: 'sttus' is not a git command. See 'git --help'.\nDid you mean this?\n    status\n\n: fuck\nsource: Error while reading file '-'\n: fuck\ngit status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nnothing to commit, working directory clean\n\nWorks only on second time\nOS X 10.10.3, fish shell 2.1.2\n. ",
    "tpltnt": "Thank you for pointing it out. Since you seem to have a knack for it, I welcome a sincere pull request.\n. @delasteve you are right. Thank you for correcting me.\n. @nvbn I am reinstalling thefuck (version 1.12.) directly via pip and it still fails.\n. I tested it on FreeBSD with zsh (in a VM).\n. I advise against merging this pull request based on SO: Why use pip over easy_install?\n. ",
    "drvinceknight": "+1 @tpltnt \n. Doesn't work for puthon for me also but works for other commands:\n```\n12:09 ~ git brnch\ngit: 'brnch' is not a git command. See 'git --help'.\nDid you mean this?\n        branch\n\u2718 12:09 ~ fuck\ngit branch\nfatal: Not a git repository (or any of the parent directories): .git\n```\n. ",
    "davoclavo": "@revmischa You should add both, at least pip should be included, because in Python 3.4 pip is included by default.\n. ",
    "Sekhmet": "Same thing here, but with 0xc4 byte.\n. Just upgrade thefuck to newest version.\nsudo pip install thefuck --upgrade\n. ",
    "MarekAG": "Similar bug here but on ubuntu 14.04. System lang \"polish\", python version 2.7.6:\nbash\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 9, in <module>\n    load_entry_point('thefuck==1.7', 'console_scripts', 'thefuck')()\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/main.py\", line 91, in main\n    matched_rule = get_matched_rule(command, rules, settings)\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/main.py\", line 67, in get_matched_rule\n    if rule.match(command, settings):\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/utils.py\", line 41, in wrapper\n    return fn(command, settings)\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/rules/no_command.py\", line 19, in match\n    output = _get_output(command, settings)\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/rules/no_command.py\", line 13, in _get_output\n    return result.stderr.read().decode()\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc4 in position 29: ordinal not in range(128)\nI suppose that it is caused by polish diacritics in stderr, for example:\nbash\nE: Nie uda\u0142o si\u0119 otworzy\u0107 pliku blokady /var/lib/dpkg/lock - open (13: Brak dost\u0119pu)\nE: Nie uda\u0142o si\u0119 zablokowa\u0107 katalogu administracyjnego (/var/lib/dpkg/), czy u\u017cyto uprawnie\u0144 administratora?\nTheFuck works great with git commands where errors are in English.\n. @nvbn \nI'm now on 1.9 but I manually do this https://github.com/nvbn/thefuck/commit/a84671dd3b7505d4d73f11ee9c7d057429542e24 and everything is now ok. So 1.10 should do the job (at least for me). Thanks! Good job.\n. I don't think it is possible to make TheFuck work with mvn.\nmvn stack trace does not give us a proper command directly and mvn errors aren't as repeatable as e.g. when we forget to put \"sudo\" before command. \n. ",
    "dennisdegreef": "Ctrl+D returns the shell context, claiming ^DNo fuck given.\n. ",
    "theneva": "Well, sure, but it still seems like a bug. I guess it doesn't really freeze the shell, though. \n. Seems fixed to me!\n. ",
    "jessebraham": "OSX 10.10.3, confirmed the above.\nshell\n\u279c  ~  puthon\nzsh: command not found: puthon\n\u279c  ~  fuck\nNo fuck given\n``` shell\n\u279c  ~  git brnch\ngit: 'brnch' is not a git command. See 'git --help'.\nDid you mean this?\n    branch\n\u279c  ~  fuck\ngit branch\nfatal: Not a git repository (or any of the parent directories): .git\n```\n. ",
    "rrshaban": "$ git sttats\ngit: 'sttats' is not a git command. See 'git --help'.\nDid you mean this?\n    status\n$ thefuck\necho No fuck given\n$ fuck\n-bash: fuck: command not found\n. ",
    "Funfun": "Confirmed too. \n. ",
    "macbig273": "osx 10.10.2 here. Haven't tested it excessively, But it's better with the 1.23. Now fucks are given.\n. ",
    "SashaZd": "I tested all these on 10.10.2 \nEverything is working as of now. This issue can be closed. \n. ",
    "skyhighwings": "Are you suggesting that instead of a properly generic method, the correct path is instead simply using command-not-found?\n. @academo yes, it is related to those :-)\nI'd be willing to write a Levenshtein-based command finder later, but I don't know Python nearly as well as I do other languages.\n. @rperce that is precisely why it doesn't work on Arch, actually!\n. :+1: \n. ",
    "rperce": "Ah ha! This is perhaps why it doesn't work on Arch Linux.\n. ",
    "justanotheranonymoususer": "Perhaps WTFPL is a better fit for the spirit of the project.\n. ",
    "pierlauro": "Added WTFPL License\n. ",
    "ghost": "Other options that should've been corrected:\nneko@takinolap \u2039 master \u203a : ~/src/thefuck\n[0] % pacman -S kde\nerror: you cannot perform this operation unless you are root.\nneko@takinolap \u2039 master \u203a : ~/src/thefuck\n[1] % thefuck\necho No fuck given\netc.\nNothing except for \"no fuck given\" yet.\n. Okay, sorry mr visktrous. Still no luck:\n```\nneko@takinolap : ~\n[0] % pacman -S kde\nerror: you cannot perform this operation unless you are root.\nneko@takinolap : ~\n[1] % fuck\nNo fuck given\nneko@takinolap : ~\n[0] % which fuck\nfuck: aliased to $(thefuck $(fc -ln -1))\nneko@takinolap : ~\n[0] % lls\nzsh: command not found: lls\nneko@takinolap : ~\n[127] % fuck\nNo fuck given\nneko@takinolap : ~\n[0] % puton\nzsh: command not found: puton\nneko@takinolap : ~\n[127] % fuck\nNo fuck given\nneko@takinolap : ~\n[0] % puthon\nzsh: command not found: puthon\nneko@takinolap : ~\n[127] % fuck\nNo fuck given\n```\n. I'm very new as you can see.but I'm trying very hard to learn and I hope that you guys can help me thru this issue maybe one day I'll be a little smarter.I'm not sure e how to merge this in a safe manner please help what you can thanks\n. Thanks now I need to know how to use it the right way so I don't create more issue\n. What ifs the best root to use with this in my galaxy s3\n. Ok baie dankie!\u263a\nSent from Yahoo Mail on Android\nFrom:\"Ankit Shah\" notifications@github.com\nDate:Mon, 20 Apr, 2015 at 8:12\nSubject:[thefuck] cd to mkdir (#50)\nI'm trying to create a fuck for cd: no such file or directory:  which gets converted to mkdir . \nI wrote following for match function but is says No fuck given\ndef match(command, settings): return (\"cd: no such file or directory:\" in command.stderr) \nI tried printing stderr which contains /bin/sh: 1: cd: can't cd to . Why is it so and where do I get \"cd: no such file or directory:\"\n\u2014\nReply to this email directly or view it on GitHub.\ufffc\n. Ok thanks. Will try when im more sober.\nSent from Yahoo Mail on Android\nFrom:\"olysyuk\" notifications@github.com\nDate:Mon, 20 Apr, 2015 at 13:12\nSubject:[thefuck] Update README.md (#54)\nOSX has a different bash file\nhttp://stackoverflow.com/questions/8967843/how-do-i-create-a-bash-alias\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/nvbn/thefuck/pull/54\nCommit Summary\nUpdate README.md \nFile Changes\nM README.md (2) \nPatch Links:\nhttps://github.com/nvbn/thefuck/pull/54.patchhttps://github.com/nvbn/thefuck/pull/54.diff \n\u2014\nReply to this email directly or view it on GitHub.\ufffc\n. This should correct the mistake of trying to install a deb package without root. For example:\n$ dpkg -i some_pkg.deb\ndpkg: error: requested operation requires superuser privilege\n$ fuck\nsudo dpkg -i some_pkg.deb\n. Shell: bash\nVersion: 1.39-1\nPython 3\n. Still happens with thefuck 1.40.\n. The issue I found on Fedora 23 recently is the module psutil under /usr/lib64/python2.7/site-packages/psutil had permission of 700 on directories and 600 on files, change the perms to 755 and 644\n. Oops. Now I feel stupid.\n. Hmm . . \n```\n~ $ fuck you\nman 3 crontab [enter/\u2191/\u2193/ctrl+c]\n. I got a similar behavior but not exactly like this. It corrects the typo, then simply says no fucks given. Still haven-t checked if it's pacman related or if I cannot chain-correct at all:\n\n[Arch Linux \\m/ ~]$ pacmn -S vim\nbash: pacmn: command not found\n[Arch Linux \\m/ ~]$ fuck\npacman -S vim [enter/\u2191/\u2193/ctrl+c]\nerror: you cannot perform this operation unless you are root.\n[Arch Linux \\m/ ~]$ fuck\nNo fucks given\n\nEDIT: I tried with the mount command, and it seems I just cannot chain-fuck at all. Seems like the fuck command tries to correct the previous fuck command\n. This is effectively a duplicate of https://github.com/nvbn/thefuck/issues/519 isn't it?. I am getting the same problem in both Gnome terminal and XFCE terminal (both on Mint). The problem occurred after I edited by /etc/environment, which contains the PATH variable.\nAlso: we've got a duplicate of this issue here (#502).\nEDIT: I think that, as one might think, the problem has to do with the 'path' variable. I had a problem with path as declared in etc\\environment, fixed it, logged out and in again, and all was well.\n. > Did you have a specific implementation in mind?\nA really deep fuck might have a buffer for any command that stores any file that could have been overwritten.  We're talking new-OS-from-the-ground-up level green field utopianism here...I doubt it would work any other way.  But still it'd be a nice pony to have.\nI can't be the only one who makes a single typo once every 8-10 years or so.  To err is human.. On Mint 19, I can't use pip3 to install:\n```\npip3 install thefuck\nCollecting thefuck\n  Downloading https://files.pythonhosted.org/packages/05/35/4272afb90220f06c585da17d3c941df3d647833839ba113823a4e89c8d55/thefuck-3.27-py2.py3-none-any.whl (120kB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 122kB 3.6MB/s \nCollecting pyte (from thefuck)\n  Downloading https://files.pythonhosted.org/packages/66/37/6fed89b484c8012a0343117f085c92df8447a18af4966d25599861cd5aa0/pyte-0.8.0.tar.gz (50kB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 51kB 5.4MB/s \n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"\", line 1, in \n    ModuleNotFoundError: No module named 'setuptools'\n----------------------------------------\n\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-45bjj06l/pyte/\n```. ubuntu 18.04 + zsh\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 11, in \n    sys.exit(main())\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/entrypoints/main.py\", line 25, in main\n    fix_command(known_args)\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/entrypoints/fix_command.py\", line 41, in fix_command\n    corrected_commands = get_corrected_commands(command)\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/corrector.py\", line 89, in get_corrected_commands\n    corrected for rule in get_rules()\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/corrector.py\", line 49, in get_rules\n    key=lambda rule: rule.priority)\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/corrector.py\", line 17, in get_loaded_rules\n    rule = Rule.from_path(path)\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/types.py\", line 140, in from_path\n    rule_module = load_source(name, str(path))\n  File \"/usr/lib/python3.6/imp.py\", line 172, in load_source\n    module = _load(spec)\n  File \"\", line 684, in _load\n  File \"\", line 665, in _load_unlocked\n  File \"\", line 678, in exec_module\n  File \"\", line 219, in _call_with_frames_removed\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/rules/apt_get.py\", line 8, in \n    command_not_found = CommandNotFound()\nTypeError: 'module' object is not callable\nhow i can fix this? thanks!. It seems to me that the ability to alias the command, together with the fact that innumerable of the world's ills are greater that swearing, means this thread (bug report/issue) should be closed.. I just experienced this exact same problem, on Mint 19 Cinnamon.\nThe Fuck 3.27 using Python 3.6.5\n. ",
    "Calinou": "The WTFPL lacks a warranty disclaimer, which means you could be sued for defects in the software.\nConsider adding a warranty disclaimer to it.\nAdd this to the headers of code files:\n/* This program is free software. It comes without any warranty, to\n     * the extent permitted by applicable law. You can redistribute it\n     * and/or modify it under the terms of the Do What The Fuck You Want\n     * To Public License, Version 2, as published by Sam Hocevar. See\n     * http://www.wtfpl.net/ for more details. */\n. > My personal preference: https://github.com/landondyer/kasm/blob/master/LICENSE\nThis is non-free (and not open source) as there is discrimination against persons.\n. ",
    "fzerorubigd": "Thanks, I am sure there is no switch lang when I write that rule :) . \n. ",
    "tuxayo": "Good idea.\nCan someone try with apt? With pacman it can't see EACCES with strace.\n. > Is it repeats with 1.11+?\n@nvbn What does this means? I didn't understood.\n\nBecause it is executed in environment with LANG=C\n\n@Dugucloud Where did you found that? I have to change manually my locale back to english to make thefuck work\n. ",
    "AmarOk1412": "To complete this issue. I suggest to translate the \"fuck\" alias. Indeed, for example, in french, \"putain\" can be a better alias.\nCan we translate the \"fuck\" alias in other languages?\n. @Dugucloud. Yeap I know. I was just thinking about an automatic alias based on the computer language :). But it's not a very good idea.\n. ",
    "qrqiuren": "Currently thefuck actually supports other languages. Because it is executed in environment with LANG=C, that means it only has to detect English strings in multilingual environment.\n@AmarOk1412 It's quite simple, just add your own alias to your shell's configuration (e. g. ~/.bashrc):\nalias putain='fuck'\nI have used tmd (stands for t\u0101 m\u0101 de in Chinese) as an alias to fuck, it works well.\n. Currently, the fuck uses Python's Popen with shell=True, and it uses /bin/sh by default. If your grammar is incompatible with sh, it may cause problems.\nI think one of the reason to use /bin/sh only is to have a unified output to deal with. see #98 .\nThere should have a magnificent way to deal with it. Hmm...\n. Thanks. I've got it. It works!\n. Cool, but maybe it is decided by the shell?\n. +10086\n. This mistake is truly fuckable!!!\n. Cool, I think apt, yum and dnf will like it.\n. ",
    "marcusklaas": "The upgrade worked, but only after installing the python-dev package. I am on Ubuntu 14.04.\n. ",
    "mlk": "@MarekAG why do you think that? \nWe need to look for the line \"Unknown lifecycle phase\", parse the \"Available lifecycle phases are\" and look for a fuzzy match, but I don't see why it would not be doable. \nI am having a go at: https://github.com/mlk/thefuck/tree/35_mvn, please do take a look and let me know if I am missing anything.\nCheers.\n. Hey @sonenko, I've completed the basics for this. Anything missing?\n. It is part of the ubuntu command-not-found package.\nhttps://launchpad.net/ubuntu/+source/command-not-found\n. @scorphus How far have you got? I've started work on this as well but my Python is basic at best. If you want to take over/pull in your work then let me know.\nhttps://github.com/mlk/thefuck/tree/322_vagrant\n. re: fucking vagrant up - I'm not sure that is a good idea as (I anyway) vagrant up to just bring up an existing instance. \nvagrant provision\nfeels to me a like a deliberate command rather than a fucked command. Does that make sense? \nI can tots do it but I think it should be default to off. \n. On vagrant provision - The more I think about this the more I think this is a bad idea as vagrant up will have succeeded. \n@scorphus Thanks for you feedback. I've pushed update. \n. Vagrant up us now merged. Any other vagranty suggestions? \n. @Hipska this is now part of thefuck 2.8, does it work as you expect?\n. Sorry I don't have easy access to a Mac to test this on (Mmm... maybe I can try spinning up a Vagranted Mac later ;) ).\nCould you execute \nthefuck vagrant ssh\nfor me?\nCheers\n. THEFUCK_DEBUG=true thefuck vagrant ssh\n. Thanks @Hipska. \nUnfortunately I was a muppet and copy & pasted the wrong thing. \nTHEFUCK_DEBUG=true thefuck vagrant ssh\n. Cool. Thanks.\nThe application is unable to get the response from vagrant. To start with we should give it more time (10 seconds). \nTHEFUCK_WAIT_COMMAND=10 thefuck vagrant ssh\n. Has later releases on Mac OS fixed this or is it still broken? \n. I've just tried this on a mac and it all works for me.\n. What is the output of thefuck --version?\nAre you using a brew version of python or the default MacOS version? (Looks like the default MacOS version). \n. ```\n$ sudo apt-get install python-pip python-dev\n$ sudo pip install psutil thefuck\nRequirement already satisfied (use --upgrade to upgrade): psutil in /usr/local/lib/python2.7/dist-packages\nDownloading/unpacking thefuck\n  Downloading thefuck-2.7.tar.gz (47Kb): 47Kb downloaded\n  Running setup.py egg_info for package thefuck\nRequirement already satisfied (use --upgrade to upgrade): colorama in /usr/local/lib/python2.7/dist-packages (from thefuck)\nRequirement already satisfied (use --upgrade to upgrade): six in /usr/local/lib/python2.7/dist-packages (from thefuck)\nInstalling collected packages: thefuck\n  Running setup.py install for thefuck\nInstalling thefuck-alias script to /usr/local/bin\nInstalling thefuck script to /usr/local/bin\n\nSuccessfully installed thefuck\n$ fuck\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 9, in \n    load_entry_point('thefuck==2.7', 'console_scripts', 'thefuck')()\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 337, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 2279, in load_entry_point\n    return ep.load()\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 1989, in load\n    entry = import(self.module_name, globals(),globals(), ['name'])\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/main.py\", line 3, in \n    from pathlib import Path\nImportError: No module named pathlib\n$ sudo pip install pathlib\nDownloading/unpacking pathlib\n  Downloading pathlib-1.0.1.tar.gz (49Kb): 49Kb downloaded\n  Running setup.py egg_info for package pathlib\nInstalling collected packages: pathlib\n  Running setup.py install for pathlib\nSuccessfully installed pathlib\nCleaning up...\n$ apt-get install thefuckworksnow\nE: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\n$ fuck\nsudo apt-get install thefuckworksnow [enter/\u2191/\u2193/ctrl+c]\n```\nOS Version:\n$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Debian\nDescription:    Debian GNU/Linux 7.8 (wheezy)\nRelease:        7.8\nCodename:       wheezy\nPython version:\n$ python --version\nPython 2.7.3\nPIP version\n$ pip --version\npip 1.1 from /usr/lib/python2.7/dist-packages (python 2.7)\nAnything else you need please let me know,\n. You need to add a line in the README describing the change and add some tests.\n. Which platform are you using? I've not since \"apt install\" before, only \"apt-get install\". \n. Also maybe fuck after a (seemingly successful) should offer \nopen -e file\n. > Hmm... TheFuck is intended to correct your last command. It expects it to fail.\nThe problem with open is that it will attempt to open it with the thing that is registered to open it. Which may fail (:shakefist: @ tunnelblick and its opening of .conf), however I think at that point open has exited. I've not looked at the source code for a while, does TheFuck first check for a none-zero exit command?\n. Oh yeah it re-runs the command to get the output.\n. Dash? Have I missed something?\n. Ah got ya. OK will change and resubmit. \n. That makes sense. \nShould it then ignore the command and just look for the error message  \": Unknown command\" / \"Did you mean ?\"?\n. The previous solution handled any hdfs dfs blah already as it blinded adds a \"-\" to the second param.\nBut I've now pushed a version that ignores the command and just looks at the error message. \nThanks for the suggestions. \n. No worries. Really it is no longer a fix for hdfs either. \n. ",
    "sonenko": "@mlk wow. great it works now :)\nThanks\nI believe this one can be closed\n. ",
    "jjmason": "It works locally for me, I'm on Ubuntu and zsh.  It's probably the history\nthing, what environment have you been testing it under?\nOn Sun, Apr 19, 2015 at 8:03 AM Vladimir Iakovlev notifications@github.com\nwrote:\n\nI checked changes locally and it's not working.\nAnd maybe history is a bash/zsh command and can't be called simple from\nPopen.\nIs it works for you?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/pull/36#issuecomment-94274917.\n. Oh I see what's going on, on my machine history is an alias to 'fc -l 1'.\nI'll change it to use that, fc is a builtin so it should be available more\nor less anywhere, although we should have a look at how to do it with fish\nI suppose.\n\nOn Mon, Apr 20, 2015 at 8:36 AM Vladimir Iakovlev notifications@github.com\nwrote:\n\nIt's strange, I'm on ubuntu 14.10 and zsh too.\nWhen I run fuck I've got:\n/bin/sh: 1: history: not found\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/pull/36#issuecomment-94452149.\n. Fix pushed, should be on the PR unless you already merged it.\n\nOn Mon, Apr 20, 2015 at 3:30 PM Jon Mason jonathan.j.mason@gmail.com\nwrote:\n\nOh I see what's going on, on my machine history is an alias to 'fc -l 1'.\nI'll change it to use that, fc is a builtin so it should be available more\nor less anywhere, although we should have a look at how to do it with fish\nI suppose.\nOn Mon, Apr 20, 2015 at 8:36 AM Vladimir Iakovlev \nnotifications@github.com wrote:\n\nIt's strange, I'm on ubuntu 14.10 and zsh too.\nWhen I run fuck I've got:\n/bin/sh: 1: history: not found\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/pull/36#issuecomment-94452149.\n. \n\n",
    "JensTimmerman": "I would prefix with sudo to be sure?\n. ok, let me add a new rule, matching rmdir: foo: Directory not empty which will then do rm -rf, would that be acceptable?\n. aren't two fucks better than one?\n. @nwinkler by that logic one would expect every get_new_command to also prefix sudo by default?\n. ",
    "coveralls": "\nChanges Unknown when pulling 38d040f5b74558aa37292b31a5ef6249e1396555 on MarekAG:patch-1 into  on nvbn:master.\n. \nCoverage decreased (-0.01%) to 90.813% when pulling 41707b80c61acadb7c87b0efcbf10f4186dc5937 on scorphus:fix-git-add into 3a39deb485995e67afb1919972cd1c9aaedf4c32 on nvbn:master.\n. \nCoverage remained the same at 90.813% when pulling 5d00b3bc251a4703bc17ae53ed738be517e2712b on shakaran:patch-1 into 0cf4f5e8b0013803c4f7279cf4243498d5332883 on nvbn:master.\n. \nCoverage remained the same at 90.813% when pulling a27115bff1d1cbf09dffb5031e6f753e1219f0c9 on scorphus:484-stdin-pipe into 0cf4f5e8b0013803c4f7279cf4243498d5332883 on nvbn:master.\n. \nCoverage decreased (-0.05%) to 90.763% when pulling 047efd55750ae76c4e4e0b3322a48c2b7a6a5dac on scorphus:stdout-encoding-none into f604756cb7639ab3efb1cd50c85e633a18cd9f9d on nvbn:master.\n. \nCoverage increased (+0.005%) to 90.768% when pulling 18b4f5df6a007a7cba108de1ced3779ef47f2ff0 on scorphus:app-veyor into fa1edd4baef2e37bc8d99dccf1f23e70b6999f9c on nvbn:master.\n. \nCoverage remained the same at 90.768% when pulling 43886c38ff54a263b003a1badbd6ba13c5caa29a on scorphus:improve-readme into d102af41d9aa71d5251ee6878c647e381a88fe87 on nvbn:master.\n. \nCoverage decreased (-0.4%) to 90.355% when pulling 0c98053f743f8fcf6c8e248827b08e52a1ee13a4 on scorphus:git-branch-exists into 17b2fba48d241d7ff44838a4aa3e28682c57b460 on nvbn:master.\n. \nCoverage decreased (-0.003%) to 90.829% when pulling cdccf1881e5e48e1e0f274b62dc5d1518063ad25 on scorphus:overridden-aliases into 183b70c8b8885843efefd2bd4e74dc0a7d42d173 on nvbn:master.\n. \nCoverage increased (+0.04%) to 90.926% when pulling 9d9820676a0fa01b61b0b8639ad387962a810873 on scorphus:brew-update-formula into 5ec4909d2f9b6fa30a8bc03f2ee16af73e234f0f on nvbn:master.\n. \nCoverage decreased (-0.02%) to 90.86% when pulling 530d6dc8c35342dbbec4947e7a7724fab282245b on scorphus:fish-put-to-history into 5ec4909d2f9b6fa30a8bc03f2ee16af73e234f0f on nvbn:master.\n. \nCoverage increased (+0.02%) to 90.951% when pulling d1f55603fee8c257662f81b509e1f128afa0b1bc on scorphus:history-merge into f74bbb7a9ab4a9a91dbea31388b11b9db484cf17 on nvbn:master.\n. \nCoverage increased (+0.03%) to 90.956% when pulling 96f7e53aa27f60938bbe4f2e1eb792fcb70cfcb9 on scorphus:history-merge into f74bbb7a9ab4a9a91dbea31388b11b9db484cf17 on nvbn:master.\n. \nCoverage remained the same at 90.956% when pulling cfa73f10d62b20d4ebdd669535d5977b228486a9 on scorphus:readme-osx into c3709682d5a8a20f1a5d349851b014b429d81c4b on nvbn:master.\n. \nCoverage increased (+0.03%) to 91.142% when pulling 561eb12c08d9c2501ffb31f947f0b5949cd810c7 on scorphus:decode-bin into 15bcd7f03f758a01f2db400ff1194b29a43d37f3 on nvbn:master.\n. \nCoverage increased (+0.05%) to 91.19% when pulling ebf1ea88f504b39fa3c9aa4ab2f73868e2171c8c on asergi:pathlib2 into d2b0b6e8ec2bf8295e270edb93eeede9f9ed53fe on nvbn:master.\n. \nCoverage increased (+0.007%) to 91.149% when pulling e5f8e9c0dedb25be027633a8083fc39a83a7f831 on scorphus:assert-warns into d2b0b6e8ec2bf8295e270edb93eeede9f9ed53fe on nvbn:master.\n. \nCoverage decreased (-0.005%) to 91.192% when pulling e2883430bc2555a46599c6819c95bcd9d1268da1 on scorphus:cleanup_ into a4b690369c632c485e50508636d7564b01f3f94c on nvbn:master.\n. \nCoverage increased (+0.04%) to 91.235% when pulling 4bd4c0f731cf6e3e3d43253f51962c1d187ce3ad on TheJakeSchmidt:add-git_rebase_continue_no_changes into b8c5433dc474ff3ebe658623f5e0dc7d6c02d3ae on nvbn:master.\n. \nCoverage increased (+0.002%) to 91.237% when pulling 2c1666abc43f2a2c580d9e3128655ab74eb0e4dd on scorphus:update-cargo-no-command into 42853f41bb9d8453d334814818c49a28f076056f on nvbn:master.\n. \nCoverage decreased (-0.5%) to 90.754% when pulling d2845a0d2eb8dca463fdeeabbbd45d1c958ff5fa on mklkj:master into 42853f41bb9d8453d334814818c49a28f076056f on nvbn:master.\n. \nCoverage decreased (-0.5%) to 90.754% when pulling d2845a0d2eb8dca463fdeeabbbd45d1c958ff5fa on mklkj:master into 42853f41bb9d8453d334814818c49a28f076056f on nvbn:master.\n. \nCoverage decreased (-0.5%) to 90.754% when pulling 1c500d8140d1f59ff1fbb933633810b86bcf4785 on b1101:master into 42853f41bb9d8453d334814818c49a28f076056f on nvbn:master.\n. \nCoverage decreased (-0.5%) to 90.754% when pulling 01418526b445d6371b56e13f977e5dce1e169aee on b1101:master into 42853f41bb9d8453d334814818c49a28f076056f on nvbn:master.\n. \nCoverage decreased (-0.5%) to 90.754% when pulling 16c110823db8159cb91392f00e206d90f1d96b0c on MattKotsenas:refactor/powershell-config into 42853f41bb9d8453d334814818c49a28f076056f on nvbn:master.\n. \nCoverage increased (+3.3%) to 92.308% when pulling 1b7c8b5498e3d422ebfeb1a2fdd7a97030713e5d on fix-func-tests-on-travis-ci into ff1ee979f0b911957b8b92c23fc52128a5a60b33 on master.\n. \nCoverage remained the same at 92.346% when pulling a7d1c725e490e3aca553bda8c619c9c5b3177cc2 on tdsmith:patch-1 into ae2b767a4d6a6f2b19c219397647bafe0ad5ebe5 on nvbn:master.\n. \nCoverage decreased (-3.3%) to 89.036% when pulling 29ed1800e1618fd58c5ca35568f9808a044d6cd3 on josephfrazier:brew-update into 965c05bfdf8317149e5a060150c19c07f740e62b on nvbn:master.\n. \nCoverage remained the same at 92.346% when pulling 29ed1800e1618fd58c5ca35568f9808a044d6cd3 on josephfrazier:brew-update into 965c05bfdf8317149e5a060150c19c07f740e62b on nvbn:master.\n. \nCoverage decreased (-0.04%) to 92.304% when pulling 837ca73f50b3e622a0454f8d2678acabdb019c14 on yeahbert:git_push_contains_work into a3b2e6872b9e75b8a259375b9440246fdd181565 on nvbn:master.\n. \nCoverage remained the same at 92.304% when pulling 237bc579994de633fe104714156ddfa925a50b6e on scorphus:git-branch-exists-checkout into 2af65071d84a7d1d14a4126364d9b4c9b5241f3c on nvbn:master.\n. \nCoverage decreased (-3.3%) to 88.998% when pulling 237bc579994de633fe104714156ddfa925a50b6e on scorphus:git-branch-exists-checkout into 2af65071d84a7d1d14a4126364d9b4c9b5241f3c on nvbn:master.\n. \nCoverage decreased (-3.3%) to 88.998% when pulling 237bc579994de633fe104714156ddfa925a50b6e on scorphus:git-branch-exists-checkout into 2af65071d84a7d1d14a4126364d9b4c9b5241f3c on nvbn:master.\n. \nCoverage remained the same at 92.304% when pulling ff5372e288c370efd17d8f968daa847e933f23fe on Haroenv:feat/option-y-override-verification into 51415a5cb1ca6955fb99908e7d0e7bf012a66312 on nvbn:master.\n. \nCoverage remained the same at 92.304% when pulling ff5372e288c370efd17d8f968daa847e933f23fe on Haroenv:feat/option-y-override-verification into 51415a5cb1ca6955fb99908e7d0e7bf012a66312 on nvbn:master.\n. \nCoverage decreased (-0.5%) to 91.828% when pulling a97416272c65f4fa7aa5a8b4e81e7d77756c1de3 on Haroenv:feat/option-y-override-verification into 51415a5cb1ca6955fb99908e7d0e7bf012a66312 on nvbn:master.\n. \nCoverage remained the same at 92.304% when pulling c02357c58f3386dc272f19b55efcfedd57e25756 on Haroenv:feat/option-y-override-verification into 51415a5cb1ca6955fb99908e7d0e7bf012a66312 on nvbn:master.\n. \nCoverage remained the same at 92.304% when pulling 190db9407cb55a3a40c3a892ba7893cc94d10e37 on Haroenv:feat/option-y-override-verification into 51415a5cb1ca6955fb99908e7d0e7bf012a66312 on nvbn:master.\n. \nCoverage decreased (-0.01%) to 92.289% when pulling b6b15bf0d13c84a49017982ca7e06862cbeb01a1 on scorphus:534-improve-open into 51415a5cb1ca6955fb99908e7d0e7bf012a66312 on nvbn:master.\n. \nCoverage increased (+2.6%) to 92.99% when pulling 4d89b3499e2e0f87563a2bcd191c8aed67c46249 on lukechilds:git-push-with-args into 070bb2ff28b108e5fc627efa1d95ded00ca067c8 on nvbn:master.\n. \nCoverage decreased (-0.5%) to 89.96% when pulling 612c393ec4d964fb933ebf5b8f957ae573ae65ba on lukechilds:git-push-with-args into 070bb2ff28b108e5fc627efa1d95ded00ca067c8 on nvbn:master.\n. \nCoverage increased (+2.6%) to 92.992% when pulling 612c393ec4d964fb933ebf5b8f957ae573ae65ba on lukechilds:git-push-with-args into 070bb2ff28b108e5fc627efa1d95ded00ca067c8 on nvbn:master.\n. \nCoverage increased (+2.6%) to 92.994% when pulling 9dc8ffa5d44feabaa033000fdc142caedc5ad7bb on lukechilds:git-push-with-args into 070bb2ff28b108e5fc627efa1d95ded00ca067c8 on nvbn:master.\n. \nCoverage increased (+2.6%) to 92.994% when pulling 5df350254e966007f80f7a14fde29a8c93316bb3 on lukechilds:git-push-with-args into 070bb2ff28b108e5fc627efa1d95ded00ca067c8 on nvbn:master.\n. \nCoverage decreased (-0.5%) to 89.963% when pulling 5df350254e966007f80f7a14fde29a8c93316bb3 on lukechilds:git-push-with-args into 070bb2ff28b108e5fc627efa1d95ded00ca067c8 on nvbn:master.\n. \nCoverage decreased (-0.5%) to 89.963% when pulling 5df350254e966007f80f7a14fde29a8c93316bb3 on lukechilds:git-push-with-args into 070bb2ff28b108e5fc627efa1d95ded00ca067c8 on nvbn:master.\n. \nCoverage increased (+2.6%) to 92.987% when pulling cfa51506fb546296d7f60e400c334266d8f5668d on blahgeek:master into 070bb2ff28b108e5fc627efa1d95ded00ca067c8 on nvbn:master.\n. \nCoverage decreased (-0.02%) to 92.974% when pulling 0bd3e85e082ae65a58ed2dc97d438d76b7867c38 on kthrift:fix/prevent-cwd-tilde-dir-creation into faeeef76669c42a5f317e9f54a4d8ab182c80b3d on nvbn:master.\n. \nCoverage remained the same at 93.05% when pulling 495a66088bfe8a3e1f4175198cddb09d9ea469b8 on waldyrious:patch-1 into 4fe64e3dfa61167a3dba4b42692b803cb5fb0fbf on nvbn:master.\n. \nCoverage decreased (-3.5%) to 89.567% when pulling 47f553f26974d370581d4a867084950714aaa308 on awesomefireduck:add_rule_for_shell_aliases into bcc11219e63f3850eee3c8f4a81a47295cd8b316 on nvbn:master.\n. \nCoverage decreased (-0.1%) to 92.901% when pulling 6e2b82911f974dbfb4b7c210affe39fc7943a74b on juzim:git-pull-uncommitted-changes into bcc11219e63f3850eee3c8f4a81a47295cd8b316 on nvbn:master.\n. \nCoverage decreased (-0.1%) to 92.901% when pulling 6e2b82911f974dbfb4b7c210affe39fc7943a74b on juzim:git-pull-uncommitted-changes into bcc11219e63f3850eee3c8f4a81a47295cd8b316 on nvbn:master.\n. \nCoverage decreased (-0.1%) to 92.901% when pulling 6e2b82911f974dbfb4b7c210affe39fc7943a74b on juzim:git-pull-uncommitted-changes into bcc11219e63f3850eee3c8f4a81a47295cd8b316 on nvbn:master.\n. \nCoverage increased (+0.04%) to 92.937% when pulling c9264aff10a153ee7260840d1d69fdd5ab39cd73 on scorphus:git-bisect-usage into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage decreased (-3.4%) to 89.49% when pulling 92133f77d6b3bbfac88e11b8269f2c7a16d2a899 on wikiti:remove-trailing-cedilla into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage decreased (-3.4%) to 89.49% when pulling 8938323229f65b021919b9778af598418c8e2eeb on wikiti:remove-trailing-cedilla into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage decreased (-0.2%) to 92.701% when pulling c3bcdd7deedd8ed79ed14467e0f4a8650622deca on wikiti:remove-trailing-cedilla into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage decreased (-0.2%) to 92.701% when pulling c3bcdd7deedd8ed79ed14467e0f4a8650622deca on wikiti:remove-trailing-cedilla into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.02%) to 92.922% when pulling c3bcdd7deedd8ed79ed14467e0f4a8650622deca on wikiti:remove-trailing-cedilla into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.02%) to 92.922% when pulling c3bcdd7deedd8ed79ed14467e0f4a8650622deca on wikiti:remove-trailing-cedilla into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.04%) to 92.941% when pulling 7bf405e9c369c79236fc50ec3ff608bf6112f5d2 on JordonPhillips:aws-rule into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.04%) to 92.941% when pulling 7bf405e9c369c79236fc50ec3ff608bf6112f5d2 on JordonPhillips:aws-rule into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.04%) to 92.941% when pulling 7bf405e9c369c79236fc50ec3ff608bf6112f5d2 on JordonPhillips:aws-rule into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.04%) to 92.941% when pulling 7bf405e9c369c79236fc50ec3ff608bf6112f5d2 on JordonPhillips:aws-rule into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.04%) to 92.937% when pulling a734b94fece18bbd07f5da0850cdd7211b4bf520 on josephfrazier:brew-uninstall-force into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.04%) to 92.937% when pulling 17c39350788c9d371b6810dcc0bf82dd1fd93be1 on josephfrazier:brew-uninstall-force into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.04%) to 92.939% when pulling bb5c7c576f1c757639afbee054b8e0ee1e4b8d3b on josephfrazier:brew-link into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage remained the same at 92.901% when pulling 3ad8d52a84fe3ac1816f6853139163f784208745 on OJFord:patch-1 into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.02%) to 92.925% when pulling aa6b18d0ce64b1e9f902a617eb7b88b1b88877d0 on josephfrazier:git-push-explicit-upstream into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.02%) to 92.925% when pulling aa6b18d0ce64b1e9f902a617eb7b88b1b88877d0 on josephfrazier:git-push-explicit-upstream into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.02%) to 92.925% when pulling aa6b18d0ce64b1e9f902a617eb7b88b1b88877d0 on josephfrazier:git-push-explicit-upstream into 9660ec7813a0e77ec3411682b0084d07b540084e on nvbn:master.\n. \nCoverage increased (+0.03%) to 93.126% when pulling 2b88ea11eaaba3d13eff2b13be91666f5c914a8b on josephfrazier:git-diff-no-index into db7dffdb44ae5c7be8de088765463fbda96197d1 on nvbn:master.\n. \nCoverage increased (+0.03%) to 93.126% when pulling 2b88ea11eaaba3d13eff2b13be91666f5c914a8b on josephfrazier:git-diff-no-index into db7dffdb44ae5c7be8de088765463fbda96197d1 on nvbn:master.\n. \nCoverage increased (+0.03%) to 93.126% when pulling 2b88ea11eaaba3d13eff2b13be91666f5c914a8b on josephfrazier:git-diff-no-index into db7dffdb44ae5c7be8de088765463fbda96197d1 on nvbn:master.\n. \nCoverage increased (+0.03%) to 93.121% when pulling db4b37910d1fbab3df4294b6aa3ff896829e9150 on josephfrazier:ag-literal into db7dffdb44ae5c7be8de088765463fbda96197d1 on nvbn:master.\n. \nCoverage increased (+0.03%) to 93.121% when pulling b09059669d4bae81058c1d18c90e8b281f47b836 on josephfrazier:ag-literal into db7dffdb44ae5c7be8de088765463fbda96197d1 on nvbn:master.\n. \nCoverage increased (+0.03%) to 93.147% when pulling d2e0a19aae9483906c397d21bdadbc8f3f1d6d8f on josephfrazier:ag-literal into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.03%) to 93.145% when pulling a964af7e9534edae3808acde97de054c3c6dde22 on josephfrazier:ag-literal into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.002%) to 93.094% when pulling 5dbbb3b1ed9b3eb7ac7ec3eb155f7ded3b6f348e on josephfrazier:man-help into db7dffdb44ae5c7be8de088765463fbda96197d1 on nvbn:master.\n. \nCoverage increased (+0.03%) to 93.121% when pulling 8bd6c5da67e55c64257345efa4e3cc454c42475c on josephfrazier:man-help into db7dffdb44ae5c7be8de088765463fbda96197d1 on nvbn:master.\n. \nCoverage decreased (-3.1%) to 89.957% when pulling 94b46ea4326938402d09422474a8e7c842b5b44d on josephfrazier:man-help into db7dffdb44ae5c7be8de088765463fbda96197d1 on nvbn:master.\n. \nCoverage decreased (-2.9%) to 90.147% when pulling 494c9d98bc8abbea42898f275ca33689f89e956f on josephfrazier:man-help into db7dffdb44ae5c7be8de088765463fbda96197d1 on nvbn:master.\n. \nCoverage decreased (-3.0%) to 90.152% when pulling 0c84eefa55fc1b4bc4940b41d74568884344e35c on josephfrazier:man-help into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.03%) to 93.126% when pulling 7b12a89ef74f7d39386e75a2e7df19be26fa1b26 on josephfrazier:man-help into db7dffdb44ae5c7be8de088765463fbda96197d1 on nvbn:master.\n. \nCoverage increased (+0.03%) to 93.126% when pulling 7b12a89ef74f7d39386e75a2e7df19be26fa1b26 on josephfrazier:man-help into db7dffdb44ae5c7be8de088765463fbda96197d1 on nvbn:master.\n. \nCoverage increased (+0.007%) to 93.126% when pulling 0c84eefa55fc1b4bc4940b41d74568884344e35c on josephfrazier:man-help into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage decreased (-2.8%) to 90.289% when pulling 01c0e800cd2a236d2e00454937409278a8f26d82 on josephfrazier:flake8 into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage decreased (-2.8%) to 90.289% when pulling 01c0e800cd2a236d2e00454937409278a8f26d82 on josephfrazier:flake8 into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage decreased (-2.8%) to 90.289% when pulling 01c0e800cd2a236d2e00454937409278a8f26d82 on josephfrazier:flake8 into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.08%) to 93.2% when pulling b97830f6f743f7d03839a8e771e2018726692961 on josephfrazier:flake8 into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.08%) to 93.2% when pulling b97830f6f743f7d03839a8e771e2018726692961 on josephfrazier:flake8 into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.08%) to 93.2% when pulling b97830f6f743f7d03839a8e771e2018726692961 on josephfrazier:flake8 into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.08%) to 93.2% when pulling b97830f6f743f7d03839a8e771e2018726692961 on josephfrazier:flake8 into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.08%) to 93.2% when pulling b97830f6f743f7d03839a8e771e2018726692961 on josephfrazier:flake8 into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.08%) to 93.2% when pulling 31e127da1d47f290c81eac6aa82cddd0b8190ba4 on josephfrazier:flake8 into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.08%) to 93.2% when pulling df8e5ecb40e3e2efa4d2004ad7d54ac6e54652ad on josephfrazier:flake8 into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.08%) to 93.2% when pulling df8e5ecb40e3e2efa4d2004ad7d54ac6e54652ad on josephfrazier:flake8 into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.08%) to 93.232% when pulling dda9d55989cd6c499624388ba55f900d0f42d892 on josephfrazier:flake8 into 4d714994a38d8b2f4342ab4f5e331b9db254076b on nvbn:master.\n. \nCoverage decreased (-2.8%) to 90.335% when pulling dda9d55989cd6c499624388ba55f900d0f42d892 on josephfrazier:flake8 into 4d714994a38d8b2f4342ab4f5e331b9db254076b on nvbn:master.\n. \nCoverage decreased (-2.8%) to 90.335% when pulling dda9d55989cd6c499624388ba55f900d0f42d892 on josephfrazier:flake8 into 4d714994a38d8b2f4342ab4f5e331b9db254076b on nvbn:master.\n. \nCoverage remained the same at 93.119% when pulling 16a440cb9d3476b71e9e7ebd975a16ee609159f5 on josephfrazier:docker-python into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage decreased (-0.2%) to 92.912% when pulling feb36ede5c518fdc3b6eddf945b2d8b1e2294d15 on josephfrazier:git-push-u into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage decreased (-0.2%) to 92.912% when pulling feb36ede5c518fdc3b6eddf945b2d8b1e2294d15 on josephfrazier:git-push-u into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage decreased (-0.2%) to 92.912% when pulling feb36ede5c518fdc3b6eddf945b2d8b1e2294d15 on josephfrazier:git-push-u into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.007%) to 93.126% when pulling feb36ede5c518fdc3b6eddf945b2d8b1e2294d15 on josephfrazier:git-push-u into ce6b82c92d78ae283cb3db001766b76f6647bc47 on nvbn:master.\n. \nCoverage increased (+0.04%) to 93.192% when pulling 229a29d578f0be9246b5ae1f81e731e4284c236d on scorphus:git-rm-local-modifications into 5ee5439c1e2c4b2e82965e9369197af1f2240d23 on nvbn:master.\n. \nCoverage decreased (-2.8%) to 90.318% when pulling af28f0334a62bd682f820ab1b505c1f396ed8ec1 on scorphus:git-rm-local-modifications into 5ee5439c1e2c4b2e82965e9369197af1f2240d23 on nvbn:master.\n. \nCoverage increased (+0.04%) to 93.192% when pulling af28f0334a62bd682f820ab1b505c1f396ed8ec1 on scorphus:git-rm-local-modifications into 5ee5439c1e2c4b2e82965e9369197af1f2240d23 on nvbn:master.\n. \nCoverage remained the same at 93.157% when pulling 890458dd516fe6141aab381426b578a6ad68b341 on scorphus:osx-brew-install into 5ee5439c1e2c4b2e82965e9369197af1f2240d23 on nvbn:master.\n. \nCoverage decreased (-3.2%) to 89.983% when pulling 228a12230e35a426ac3c9f47c9709e4a4b8745f7 on scorphus:osx-brew-install into 5ee5439c1e2c4b2e82965e9369197af1f2240d23 on nvbn:master.\n. \nCoverage remained the same at 93.157% when pulling 30b1c44f913d5d909823d0abd42e705d53e98755 on scorphus:osx-brew-install into 5ee5439c1e2c4b2e82965e9369197af1f2240d23 on nvbn:master.\n. \nCoverage increased (+0.03%) to 93.224% when pulling 07005b591a990dceb026136f7742f9f4e5a123a3 on scorphus:rebase-skip into cb99e42e028cdb83794aa81ffba6bfd8b0e6fe8f on nvbn:master.\n. \nCoverage increased (+0.04%) to 93.237% when pulling 5b420204c9efa1939925a8ff62e3f5bcb971b516 on josephfrazier:git-flag-after-filename into cb99e42e028cdb83794aa81ffba6bfd8b0e6fe8f on nvbn:master.\n. \nCoverage decreased (-2.8%) to 90.381% when pulling 5b420204c9efa1939925a8ff62e3f5bcb971b516 on josephfrazier:git-flag-after-filename into cb99e42e028cdb83794aa81ffba6bfd8b0e6fe8f on nvbn:master.\n. \nCoverage increased (+0.05%) to 93.24% when pulling fa169c686c39552bb62d0f55e7ccd1c513db0135 on josephfrazier:git-flag-after-filename into cb99e42e028cdb83794aa81ffba6bfd8b0e6fe8f on nvbn:master.\n. \nCoverage decreased (-2.8%) to 90.386% when pulling fa169c686c39552bb62d0f55e7ccd1c513db0135 on josephfrazier:git-flag-after-filename into cb99e42e028cdb83794aa81ffba6bfd8b0e6fe8f on nvbn:master.\n. \nCoverage remained the same at 93.192% when pulling b519d317f74374eb9b197a56277e44697ac1764d on josephfrazier:bash-honor-alter-history into cb99e42e028cdb83794aa81ffba6bfd8b0e6fe8f on nvbn:master.\n. \nCoverage increased (+0.02%) to 93.245% when pulling 756044e08716f371710129f852d02eeb02fa302a on josephfrazier:ls_all into 6f0d1e287d53e489c576a2629b53456c75d1d38c on nvbn:master.\n. \nCoverage decreased (-0.2%) to 93.034% when pulling 756044e08716f371710129f852d02eeb02fa302a on josephfrazier:ls_all into 6f0d1e287d53e489c576a2629b53456c75d1d38c on nvbn:master.\n. \nCoverage increased (+0.003%) to 93.201% when pulling b4fda04acbed97183c907e126a22bae3fe5dc561 on awonnacott:master into 6173913291210b2b1e54fc66c8ef2d97b470b124 on nvbn:master.\n. \nCoverage remained the same at 93.287% when pulling a947259eefad7a2332b03afcb1545cb093002d11 on scorphus:fish-builtin-history into 785cb83ff3fd744cf04fd868c9791966e417269e on nvbn:master.\n. \n\nCoverage decreased (-0.02%) to 93.269% when pulling 4ae32cf4ee8cc69d73930f4565c55097cb1f5ce2 on josephfrazier:bash-command-substitution into e0b5d47fa5a716879d44bf3ddfef72a8d36905a3 on nvbn:master.\n. \n\nCoverage increased (+0.03%) to 93.341% when pulling 8c62706db40008e63b85e43dd1b41c3c1798acae on josephfrazier:git_stash_pop into 6baa7f650e407a9d0b176ac50b057a71b62c159c on nvbn:master.\n. \n\nCoverage remained the same at 93.341% when pulling 993a661c6048063e84645015cc832602b6ec32df on duboviy:master into e313ff73a96a1ba5496e24e418e280b7cb0f2eda on nvbn:master.\n. \n\nCoverage decreased (-2.8%) to 90.621% when pulling a34f345bbe1966814e59d07486e6978f65b91c5e on josephfrazier:git-tag-force into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage increased (+0.03%) to 93.455% when pulling a34f345bbe1966814e59d07486e6978f65b91c5e on josephfrazier:git-tag-force into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage increased (+0.03%) to 93.455% when pulling a34f345bbe1966814e59d07486e6978f65b91c5e on josephfrazier:git-tag-force into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage increased (+0.03%) to 93.455% when pulling a34f345bbe1966814e59d07486e6978f65b91c5e on josephfrazier:git-tag-force into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage increased (+0.03%) to 93.455% when pulling a34f345bbe1966814e59d07486e6978f65b91c5e on josephfrazier:git-tag-force into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage increased (+0.03%) to 93.455% when pulling a34f345bbe1966814e59d07486e6978f65b91c5e on josephfrazier:git-tag-force into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage increased (+0.03%) to 93.455% when pulling a34f345bbe1966814e59d07486e6978f65b91c5e on josephfrazier:git-tag-force into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage increased (+0.02%) to 93.453% when pulling 8da4dce5f251f96ab2141273757950aeaa3e2ef3 on josephfrazier:git-tag-force into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage remained the same at 93.43% when pulling ace6e882696110c88d97f6693010de471debd9e2 on josephfrazier:readme-git_stash-typo into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage remained the same at 93.43% when pulling ace6e882696110c88d97f6693010de471debd9e2 on josephfrazier:readme-git_stash-typo into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage remained the same at 93.43% when pulling ace6e882696110c88d97f6693010de471debd9e2 on josephfrazier:readme-git_stash-typo into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage remained the same at 93.43% when pulling ace6e882696110c88d97f6693010de471debd9e2 on josephfrazier:readme-git_stash-typo into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage remained the same at 93.43% when pulling ace6e882696110c88d97f6693010de471debd9e2 on josephfrazier:readme-git_stash-typo into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage increased (+0.02%) to 93.453% when pulling 4d0388b53cf452ba5e7acbccb833d41cdddd97b1 on josephfrazier:git_add_force into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage increased (+0.001%) to 93.431% when pulling ac7b633e288fad8f5bae06664a9cf6b90b99923a on juzim:apt_get_not_installed into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. \n\nCoverage decreased (-2.8%) to 90.677% when pulling ac7b633e288fad8f5bae06664a9cf6b90b99923a on juzim:apt_get_not_installed into a015c0f5e271e9e3c668a9c6a75d13f337baafd0 on nvbn:master.\n. ",
    "kubudi": "You have a typo.\nplease, what is that mean?\n. Oh now it's clear :)\n. ",
    "ScoreUnder": "In its current form, that \"please\" is somewhat buggy:\n$ alias please='sudo $(history -p !!)'\n$ printf '%s\\n' testing testing \"testing testing\"\ntesting\ntesting\ntesting testing\n$ please\n'testing\n''testing\n''\"testing\n''testing\"\n'$ echo $TERM\nrxvt-unicode-256color\n$ please\n$TERM\nI recommend you use eval with the substitution quoted instead:\nbash\nalias please='eval \"sudo $(history -p !!)\"'\nThis accurately reproduces the command with sudo prepended.\n. It might be more robust to make fish compatibility a command-line switch. Replacing && and || is just asking for trouble (think \"perl -e\")\n. ",
    "samrocketman": "Nice, thanks for the feedback.\n. @kubudi \"please\" is sometimes how Americans say fuck out of disbelief or frustration.\nIt's also a play on words for \"Make me a sandwich, please.\"  It turns into the XKCD comic phrase \"sudo make me a sandwich.\"\n. ",
    "shakna-israel": "Creating Your Own Rules is what you're looking for.\n. ",
    "shahankit": "Oh thanks sorry for not reading complete doc\n. @pottiep what does that mean?\n. Whoo the user got deleted altogether : ghost. But still waiting for answer.\n. thanks @nvbn, that solved the issue.\nThis is my script for cd to mkdir\n```\ndef match(command, settings):\n    return (\"cd: can't cd to \" in command.stderr)\ndef get_new_command(command, settings):\n    return 'mkdir '+command.stderr.rsplit(' ', 1)[1]\n```\n. @nwinkler thanks nice suggestion. I'll do that.\n. @ncrocfer Then what should be used in matcher to avoid files and permission issues?\n. ",
    "aatxe": "That appears to be some sort of spam?\n. ",
    "ncrocfer": "FYI, the stderr is the same when a user tries to enter in a file :\n$ cd /foo/bar.txt\nsh: 1: cd: can't cd to /foo/bar.txt\nOr in a denied directory :\n$ cd /root/\nsh: 1: cd: can't cd to /root/\nSo be careful in your match() function to avoid these cases.\n. Ok, thanks !\nMy rule is the same as #50, so I'm waiting his PR rather than sending mine.\n. ",
    "nabeelvalapra": "Thanks!, I'm on it.\n. ",
    "hoangddt": "Are you type fuck after that command? \nsh\n$ fuck\n. I'm also use zsh but It work OK.\n\n. ",
    "RaoHai": "Yes. It says:\n\u25b6 fuck\nNo fuck given\n. ",
    "kalbasit": "Having the same issue\nwmn@cratos ~   % alias fuck\nfuck='$(thefuck $(fc -ln -1))'\nwmn@cratos ~   % vum\nzsh: command not found: vum\nwmn@cratos ~   % fuck\nNo fuck given\n. I am using Mac\nsh-session\nwmn@cratos ~/code/src/github.com/carlhuda/janus [master] \u00b1 % uname -a\nDarwin cratos.local 14.1.0 Darwin Kernel Version 14.1.0: Thu Feb 26 19:26:47 PST 2015; root:xnu-2782.10.73~1/RELEASE_X86_64 x86_64\nwmn@cratos ~/code/src/github.com/carlhuda/janus [master] \u00b1 % git --version\ngit version 2.3.5\nwmn@cratos ~/code/src/github.com/carlhuda/janus [master] \u00b1 % zsh --version\nzsh 5.0.7 (x86_64-apple-darwin13.4.0)\nwmn@cratos ~/code/src/github.com/carlhuda/janus [master] \u00b1 % which zsh\n/usr/local/bin/zsh\nFor git brnch, it only works if git config --global help.autocorrect is set to 0\n``` sh-session\nwmn@cratos ~/code/src/github.com/carlhuda/janus [master] \u00b1 % git config --global help.autocorrect\n1\nwmn@cratos ~/code/src/github.com/carlhuda/janus [master] \u00b1 % git brnch\nWARNING: You called a Git command named 'brnch', which does not exist.\nContinuing under the assumption that you meant 'branch'\nin 0.1 seconds automatically...\n* master\nwmn@cratos ~/code/src/github.com/carlhuda/janus [master] \u00b1 % fuck\nNo fuck given\nwmn@cratos ~/code/src/github.com/carlhuda/janus [master] \u00b1 % git config --global help.autocorrect 0\nwmn@cratos ~/code/src/github.com/carlhuda/janus [master] \u00b1 % git config --global help.autocorrect\n0\nwmn@cratos ~/code/src/github.com/carlhuda/janus [master] \u00b1 % git brnch\ngit: 'brnch' is not a git command. See 'git --help'.\nDid you mean this?\n        branch\nwmn@cratos ~/code/src/github.com/carlhuda/janus [master] \u00b1 % fuck\ngit branch\n* master\n```\n. works now for me!\n. ",
    "yyypasserby": "I have also met this problem when using iterm2 and zsh on Mac.\n. ",
    "nibres": "Add alias in .zshrc; works for me:\nalias fuck='$(thefuck $(fc -ln -1 | tail -n 1)); fc -R'\n. ",
    "alex-kovshovik": "I concur. Please change.\n. ",
    "SanketDG": "Will this be merged?\n. Oh, looks like it's already been fixed. I'll close this.\n. @ide Do you have an idea of what could be done to implement this?\n. @blixt What's that shell?\n. I somehow believe that the alias created for thefuck should be way small, a maximum of three characters. fuck just seems way too big.\n. :+1: Yup. The parameters are specified in the readme, but not the format. How are they read and written?\n. Docopt maybe? I don't know if it would work out, as @nvbn pointed out.\n. @nvbn That would be silly though, anybody would hardly use it that way.\n. Well people are generally habituated to use command line arguements, but I guess this would be a workaround.\n. Rule doesn't exist as of yet. Thanks for the info!\n. What have you changed, @Sclarki?\n. :+1: Good catch.\n. Thanks for pointing that out! I had implemented thefuck-alias and I must have missed it through.\n. Um, yeah, it is because it was being returned through a function. Will work okay after #185 is merged.\n. Yeah, I guess returning from a function and then printing is much better. Sometimes I just forget about Python 3. Need to get that into my workflow.\n. @lidonis @jakefb @felippenardi Unless this issue is fixed, you can do:\nshell\npip install psutil\n. Would have been good, if you had different pull requests for each of the changes. \n. @jonibatista If your issue has been resolved, you can close this issue. :)\n. Try this in the command line with sudo rights.\npip install -U setuptools\npip install -U pip\n. Well, basically your setuptools was probably outdated, so pip didn't work. But I don't know why setuptools would be outdated in 15.04.\n. :+1: for reporting this. A simple .encode(\"utf8\") at the end of the return statement in line 108 in  thefuck/shells.py should fix it.\n. Are you sure mine won't work? I think I did the same thing as you did. Yours is just much more concise.\n. I am pretty sure encode works in python 3. But nonetheless, this is fixed and should be closed.\n. Oh, I see. Yeah that never worked.\n. Ah! I learnt something new. Python 3's encoding is all about bytes! Thanks.\nBut sill, python 3 baffles me. :disappointed: \n. @bartonfriedland The first one happens, when you try to install something using apt-get without sudo permission in Debian/Ubuntu based distros.\nThe second one comes from git, which is a distributed version control system.\n. Strange, even I do not get these. They probably appear when they are not installed. In our cases, it's installed. Although I am not sure about this.\n. @bartonfriedland Looks like this issue can be closed.\n. How did you install it?\n. What OS are you on?\n. You can try pip install --upgrade colorama and then see if it works.\n. pip install six should do the job.\n. Probably upgrade pip and then try?\npip install -U pip\nIt's better if you install all these packages in a virtualenv.\n. @chatainsim your six is pretty old. The current six version is 1.9.0.\nDo sudo pip install --upgrade six to update it.\n. @chatainsim So you didnt use pip.\nThen you do:\nsudo apt-get remove python-six\nThen:\nsudo pip install six\nAgain, I strongly advise you to use a virtualenv. But if this works, then that's okay.\n. @chatainsim What is the current status.\nNow you could again sudo pip uninstall six and then sudo pip install six\n. This is not needed. @Sticksman. setup.py handles all the dependencies. Only the test suite is needed.\n. Probably fix this line too. It's confusing.\n. Wow, that's another approach entirely. Thanks. Just a small note, on the page it looks like it failed to parse the first link.\n. Command options can't be used in thefuck\n. @mlk You might want to upgrade pip though. Your version is ancient, although I am not sure that doing that would fix this.\n. #345 fixes a lot of slowness problems. Make sure you have version 2.8.\n. This line shouldn't be here.\n. You might wanna do return u'sudo {}'.format(command.script)' to avoid any errors.\n. I think that's all right.\n\n. make this install_requires\nand then do install_requires=install_requires\n. ",
    "ytsarev": "well, then you should implement some exceptional fuck to reflect erasing important data ;)\n. ",
    "severen": "Just my 2\u00a2, but I think rm -r would be the best command, as -f/--force will delete any protected files without warning. \n. #385 has been merged.\n. I'm on the same page as @mcarton, moving a user's existing configuration is not a good idea.\n. ",
    "platinumthinker": "Use kdbb for remember language per windows\n. ",
    "klinkin": "@nvbn \u0410\u0433\u043e\u043d\u044c, \u043f\u043e\u0448\u0435\u043b \u0442\u0435\u0441\u0442\u0438\u0442\u044c) :beer: \n. It's works, thx!\n. @nvbn @kimtree  Amazingly fast response. Thank you!  :+1: \n. Yes, it's work fine for me! :beer: \n. +1\n. ",
    "sullyj3": "I've done some poking around, and the issue seems to be that \"subprocess.Popen\" doesn't respect shell aliases. I'll do a bit more research into whether there's any way around this.\n. (y)\nThanks!\n. Should have been fixed by fcc2a1a40a6e07a76cc653352c052e810df0546f.\n. Personal opinion: I prefer your original name for the option, \"add_fuckup\", over \"ifuckedup\". \"add_fuckup\" makes it clearer what it's for. Whereas \"ifuckedup\" is ambiguous, you fucked up every time you need to type fuck, not just when you need to add a new rule.\n. Does it work with zsh and fish?\n. ",
    "thiderman": "Never tried it, but maybe shell=True (which is not recommended) will make it source the shell rc files and therefore get your aliases?\n. ",
    "vlad-shatskyi": "I have a similar situation. Please support aliases. For example, I have gp for git push, and it does not match the git_push rule.\n. @nvbn, awesome, it works!\n. \nDo you need any additional information?\n. ...=../..\n....=../../..\n.....=../../../..\n......=../../../../..\n1='cd -'\n2='cd -2'\n3='cd -3'\n4='cd -4'\n5='cd -5'\n6='cd -6'\n7='cd -7'\n8='cd -8'\n9='cd -9'\n_=sudo\na='alias | grep'\nafind='ack-grep -il'\namend='git add . && git commit --amend'\nb=brew\nbU='b upgrade'\nbe='bundle exec'\nbi='b install'\nbrews='brew list -1'\nbu='b update'\nbubu='brew update && brew upgrade && brew cleanup'\nc=cabal\nd='eval \"cd $(dirs | tr \" \" \"\\n\" | fzf -e)\"'\nfuck='$(thefuck $(fc -ln -1))'\ng=git\nga='git add'\ngaa='git add --all'\ngap='git add --patch'\ngb='git branch'\ngba='git branch -a'\ngbr='git branch --remote'\ngc='git commit -v'\n'gc!'='git commit -v --amend'\ngca='git commit -v -a'\n'gca!'='git commit -v -a --amend'\ngcl='git config --list'\ngclean='git reset --hard && git clean -dfx'\ngcm='git checkout master'\ngcmsg='git commit -m'\ngco='git checkout'\ngcount='git shortlog -sn'\ngcp='git cherry-pick'\ngcs='git commit -S'\ngd='git diff'\ngdc='git diff --cached'\ngdt='git difftool'\ngemsets='rvm gemset list'\ngg='git gui citool'\ngga='git gui citool --amend'\nggpnp='git pull origin $(current_branch) && git push origin $(current_branch)'\nggpull='git pull origin $(current_branch)'\nggpur='git pull --rebase origin $(current_branch)'\nggpush='git push origin $(current_branch)'\ngignore='git update-index --assume-unchanged'\ngignored='git ls-files -v | grep \"^[[:lower:]]\"'\ngit-svn-dcommit-push='git svn dcommit && git push github master:svntrunk'\ngk='gitk --all --branches'\ngl='git log'\nglg='git log --stat --max-count=10'\nglgg='git log --graph --max-count=10'\nglgga='git log --graph --decorate --all'\nglo='git log --oneline --decorate --color'\ngloburl='noglob urlglobber '\nglog='git log --oneline --decorate --color --graph'\nglp=_git_log_prettily\ngm='git merge'\ngmt='git mergetool --no-prompt'\ngp='git push'\ngpoat='git push origin --all && git push origin --tags'\ngr='git remote'\ngrba='git rebase --abort'\ngrbc='git rebase --continue'\ngrbi='git rebase -i'\ngrep='grep  --color=auto --exclude-dir={.bzr,.cvs,.git,.hg,.svn}'\ngrh='git reset HEAD'\ngrhh='git reset HEAD --hard'\ngrmv='git remote rename'\ngrrm='git remote remove'\ngrset='git remote set-url'\ngrt='cd $(git rev-parse --show-toplevel || echo \".\")'\ngrup='git remote update'\ngrv='git remote -v'\ngs='git status'\ngsd='git svn dcommit'\ngsp='git stash pop'\ngsps='git show --pretty=short --show-signature'\ngsr='git svn rebase'\ngss='git status -s'\ngst='git status'\ngsta='git stash'\ngstd='git stash drop'\ngstp='git stash pop'\ngsts='git stash show --text'\ngts='git tag -s'\ngunignore='git update-index --no-assume-unchanged'\ngunwip='git log -n 1 | grep -q -c \"\\-\\-wip\\-\\-\" && git reset HEAD~1'\ngup='git pull --rebase'\ngvt='git verify-tag'\ngwc='git whatchanged -p --abbrev-commit --pretty=medium'\ngwip='git add -A; git ls-files --deleted -z | xargs -r0 git rm; git commit -m \"--wip--\"'\nhard='git reset --hard'\nhistory='fc -l 1'\njira=open_jira_issue\nl='ls -lah'\nla='ll -a'\nll='ls -lh'\nls=exa\nlsa='ls -lah'\nmd='mkdir -p'\npo=popd\npu=pushd\nr=rails\nrc='be rails console'\nrd=rmdir\nreview='git checkout master; git pull; git merge --no-commit --no-ff'\nrh=runhaskell\nrrspec='REAL=1 rspec'\nrs='be rails server'\nrubies='rvm list rubies'\nrun-help=man\nrvm-restart='rvm_reload_flag=1 source '\\''/Users/me/.rvm/scripts/rvm'\\'\nsr='be spring rspec'\nstackage='wget http://www.stackage.org/lts/cabal.config && cabal update && cabal sandbox init'\nvim=nvim\nwhich-command=whence\nzrc='vim ~/.zshrc && exec zsh'\n. Nope, still doesn't work in 1.45.\n. You're right, I had an incorrect alias. Closing the issue.\n. ",
    "MadaraUchiha": "There appears to be a regression in this regard. I'm seeing this bug again (I saw it when it was first raised, I saw it fixed, and now I see it again).\nTo reproduce: \nAdd gp as an alias for git push, create a branch and type gp to get the upstream error message, then invoke thefuck.\nExpected: git_push rule invoked, and thefuck offers git push --set-upstream .... as alternative.\nActual: thefuck offers sudo apt-get install pari-gp && gp.\n. Hey guys, bumping this, can it be reopened? The issue is still very much there.\n. It seems to have solved itself in one of the updates since I've opened this\nticket. Thanks :)\nOn Wed, Jul 15, 2015 at 7:50 AM Vladimir Iakovlev notifications@github.com\nwrote:\n\nSomething like this should print debug information in 1.49+:\nexport THEFUCK_DEBUG=true\ngit push\nfuck\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/280#issuecomment-121486633.\n. \n",
    "mmrwoods": "I've just noticed the same regression. I've tested with v1.43 and 3.0 and see the same issue...\n```\n~/code/foo[master]$ gpr\nThere is no tracking information for the current branch.\nPlease specify which branch you want to rebase against.\nSee git-pull(1) for details\ngit pull <remote> <branch>\n\nIf you wish to set tracking information for this branch you can do so with:\ngit branch --set-upstream-to=origin/<branch> master\n\n~/code/foo[master]$ fuck\nNo fuck given\n~/code/foo[master]$ type gpr\ngpr is aliased to `git pull --rebase'\n~/code/foo[master]$ git pull --rebase\nThere is no tracking information for the current branch.\nPlease specify which branch you want to rebase against.\nSee git-pull(1) for details\ngit pull <remote> <branch>\n\nIf you wish to set tracking information for this branch you can do so with:\ngit branch --set-upstream-to=origin/<branch> master\n\n~/code/foo[master]$ fuck\ngit branch --set-upstream-to=origin/master master && git pull --rebase\nBranch master set up to track remote branch master from origin by rebasing.\nCurrent branch master is up to date.\n~/code/foo[master]$\n```\n. ",
    "braineo": "Hi guys, do you see this regression again? I am using 3.18 and it is not seeing my gp alias . ",
    "ja5h": "I verified this and it has been fixed in the newest version.\n. How about this: \nWe parse the command for fuck and thefuck and replace it with an empty string before matching?\nIt should be able to solve the problem caused by a stray fuck or thefuck.\nUnfortunately, it is no more elegant than what @pranav15197 suggested i.e. there may be many cases to handle.\n. I think you misunderstood my point. \nThe command works fine as it should (Except perhaps for #152 that I found while messing around with it.)\nThe thing I was suggesting was why not let it see my sub-directory names and try to find a match first before creating a new one?\nAlso the code you suggested does not affect the above output in any way (at least on my computer.)\n. Happens, I will check it out.\n. @pranav15197 The fix worked on my system too. Thanks.\n. Same as @pranav15197 . \nthefuck - Installed today, version 1.32\nGNU Bash - version 4.2.42, default with linux 12.04\n. Thanks @nvbn :)\n. Can you please post a screenshot or something to elaborate on it? What was the expected output and what did you get?\n. Interestingly in my case even when I do not have \"sl\" installed, it does not show me the output as \"ls\".\nInstead:\n\nI think this is certainly an issue.\n. I found it! The reason is that in the code the rules are traversed in a specific order in which apt-get rule comes before ls. \nSo when it sees something that can potentially be an apt-get, it evaluates it like that since in our case the repo is available as 'sl'.\nSo it means that the order in which the rules are evaluated is VERY important sometimes.\n. I still think it is because of the order in which the rules are loaded.\nSince \"sl_ls\" is close to the bottom of the list, chances are that some of the higher order rules may trigger because of it. \nHonestly, if there were no WSDL, and if we got to the bottom of the list of rules, 'sl' would give us 'ls' (or so I think).\nI tried changing the code a bit and here's the output:\n\nMy point: Some mechanism needs to be present to find the best match rather than the first match.\n. It always corrects you as long as it finds a rule.\nAnd what rule it uses depends on what is the first rule it finds.\nIn main.py's get_rules() method in the for loop it is sorting the bundle. When I removed that the order of the rules must have been affected. \nTo simplify what I am thinking:\nSuppose the rules are taken one at a time in an alphabetical fashion. Since 'a' comes before 's', apt-get.py will be evaluated before sl_ls.py. This means 'sl' never reaches sl_ls.py since apt-get was found first and since the first rule is satisfied it does not go any further.\nWhat pranav says is right but only partially. The stderr is only used in some cases to find a match. For example in sl_ls.py the script directly uses the command rather than stderr.\nDoes it always correct you? Depends on whether it finds a match or not. If it does, it will. If it does not, then it 'Won't give a fuck'. \nLogic:\n1. In the 'sl' joke version, the problem is no error is generated, so there is no rule that is satisfied, hence 'no fuck'\n2. In my apt-get version, the apt-get rule is satisfied because of the stderr, hence it tries to install.\n3. If we randomise the order of the rules, like I tried, chances are that the first rule to be satisfied is sl_ls, therefore, it gives ls.\n. I updated my explanation to be more simplified and clearer based on my understanding of the code.\n. Thanks to you for pointing the bug out. Today is my first day in open source and I am already learning so much. :)\n. Created a new issue that addresses a more general problem than this one - about the ordering thing that we discussed.\n. I believe this issue is fixed!\n. That should take care of it. \nHowever, may I suggest allowing the priority to also be user defined. Through the 'settings' or similar file.\nFor example, different users may have different needs, and being able to set the priorities would definitely be a good feature.\n. +1 a-x- \nThe thing is reproduced on my shell as well. Would be a useful feature if implemented.\n. History of previous shell commands is not updated:\n\nBut it would be great if it would be updated so that we could use  key to use the previous commands.\n. Solved, thanks.\nTurns out it was due to false alias checking caused by some warnings in bash-it.\nGreat job fixing it. @nvbn :)\n. Thanks a lot. My first commit in OSS!!!\n. Should we write a rule for the history command seperately?\n. I have an idea (but I am still thinking of how to implement it).\nWhat if we try to implement a function that checks if the previous command executed is having an exit code of 0 i.e. it executed successfully? If the command executed successfully we simply avoid 'thefuck' rules and print 'No fuck given'.\nThis will also help resolve the infinite loop problem in #147. Since the command will execute successfully once, 'thefuck' will stop in the second iteration itself. Thus leading to avoidance of an infinite loop.\nWe could use an environment variable like $? for this (at least this works in bash) as it stores the value of exit code of previous command. \n. ",
    "Clpsplug": "Verified here as well, it won't fuck us up - but! I don't think this is what it's meant to be...\n\nWhat I did here:\nI can't do mkdir at / without sudo which I did, and I accidentally ran fuk instead of fuck. Dissatisfied, I ran fuck.\nWhat actually happened\n\nfuck went to get the last command, which resulted in getting fuk\nfuck thought I meant thefuck (or alias fuck), and ran it for me\nBut for some reason that thefuck (which have just been run by thefuck) didn't get the 2nd latest command (which is mkdir a ran at the root) and didn't give any fuck. \n\nWhat I expected\n\nfuck goes to get the last command, which results in getting fuk\nfuck thinks I meant thefuck (or alias fuck), and runs it for me\nThis fuck (which been run by thefuck) gets its last command, mkdir a.\nfuck thinks I skipped sudo, and it runs my command with sudo, resulting in running sudo mkdir a. \n\nCan this be implemented? - like, whenever thefuck tries to correct itself, it'll get the 2nd latest command.\n. I thought typing sl before fuck would correct my mistake, even if I have sl as a valid command.\nThis is what sl looks like when it gets executed. sl is a joke command which is meant to 'cure your bad habit of mistyping,' as the man page says.\n\nRight after that I tried fuck (fk that steam locomotive...). I thought it would run ls for me, but\nwhat I got is this. No fuck given.**\n\n. Wow! I didn't see that coming.\n. OK, seeing your testing I tested thefuck by killing sl temporarily cause Mac haven't got apt-get. No avail, thefuck didn't get it and went wrong like this... wsdl? Seriously?\n\n. Would you mind me asking for clarification since I'm not that familiar with python.\nDoes thefuck give no fuck when the last command you type is right one? Or does it always 'correct me' when the last command matches any of the rules?\n. OK, but in that case why did fuck didn't give any fuck in my first problem? When I have sl, no fuck was given. However, when I killed sl, thefuck suggested wsdr. If what you're saying is the case thefuck would have suggested wsdr no matter what.\n. Crystal clear, thanks :+1: \n. ",
    "daenney": "Can confirm.\n. Same. I just get the replaced command printed on the console, not actually executed.\n. @scorphus One thing on the $TMPDIR thing, a lot of Linux distributions don't appear to have it set by default. OS X does but not every Linux distro does so there should be a fallback there to /tmp if it's not set.\n. Ya, I think this should work. Needs a rebase though since Github thinks it has a merge conflict.\n. This should probably use $TMPDIR instead / when it is set.\n. ",
    "mbirth": "I fixed it by changing my alias to:\nfunction fuck -d \"Magnificient app which corrects your previous console command.\"\n    thefuck $history[2]\nend\n. Okay, this time I tested it before posting and the workaround from the fzf README seems to work for me:\nfunction fuck -d \"Magnificient app which corrects your previous console command.\"                                                                                                                                                     \n    thefuck $history[2] > /tmp/thefuck.sh\n    . /tmp/thefuck.sh\nend\n. ",
    "steamraven": "This is related to a fish bug: fish-shell/fish-shell#1362\nBasically, when running a command in parenthesis, fish does not give the command a stdin.  Thus, thefuck doesn't have a stdin.  \nI though of moving the confirmation out to the shell with something like the read command. But that hits fish-shell/fish-shell#1820, which prevents the contents of the eval from getting a stdin as well.\n. ",
    "luv": "Strange. On Ubuntu it should work \"out of the box\".\nThe package is \"python-commandnotfound\"\n. ",
    "nicholerichardson": "I don't know exactly who is using my account this is Nicole Richardson but I am catching on and I do have your information downloaded it will not be long and I will know so stop !!! can anyone help ;???\n. there is some video information I need to download that I have picked up from another phone I cannot open the application I need to download something from Apple for Android incredible two tell me what I need to download this information . \n. ",
    "woverton": "Thanks, that fixed the issue\n. ",
    "danielkbx": "+1\n. ",
    "jurikolo": "Thanks, this solved issue. Please update installation instruction with:\nsudo dnf install python-devel\nor\nsudo yum install python-devel\n. ",
    "Kurtoid": "installed python-devel\nStill getting gcc exit status 1\n. But it could slow down a lot of commands\n. the only suggestion i get is apt-get clean\n. Thanks. Worked here too.\nOn Mon, Feb 22, 2016, 6:02 PM Martin Carton notifications@github.com\nwrote:\n\nYep, that\u2019s the old way, the new way eval $(thefuck --alias) also has the\nadvantage to update itself [image: :smile:].\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/466#issuecomment-187429216.\n\n\n~Kurt\n. That sounds like a cool idea...\nOn Tue, Mar 15, 2016, 3:17 AM Omer Katz notifications@github.com wrote:\n\nWhy not? If the --help of the command can be parsed we should be able to\nfigure out the right command right away.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/nvbn/thefuck/issues/475#issuecomment-196695880\n\n\n~Kurt\n. ",
    "mattjmcnaughton": "I can take a look at implementing this if there's interest.\n. ",
    "paramsingh": "What common typos do you think should be fixed?\n- amster\n- masetr\nand?\n. ",
    "hexec": "I use zsh, and It seems that the HISTIGNORE trick it's not working. (but It's not so important I've already set to not save duplicates). \nI think thefuck could execute \"history\" command to update the history. I've not tested it but man says:\nhistory change newValue ?event?\n              Replaces the value recorded for  an  event  with  newValue.   Event\n              specifies  the  event to replace, and defaults to the current event\n              (not event -1).  This command is intended for use in commands  that\n              implement new forms of history substitution and wish to replace the\n              current event (which invokes the  substitution)  with  the  command\n              created through substitution. \nis it cross-shell compatible? :\\\n. ",
    "jmeosbn": "I was just about to suggest this. :+1: \nAvoiding adding fuck commands can at least be configured per shell, whereas adding the modified commands cannot.  Ideally the original command would also be left intact (in case thefuck was wrong).  Removing the fuck command from within thefuck could be difficult without some hack.\nWhile fc can work differently in different shells, the example below works great in bash - removing the fc command from history while keeping the original and modified commands in the history. In zsh the example works the same, except the fc command remains in history.\nsh\n$ ls -l /usr\n$ fc -e- /usr=/etc\nHistory in bash afterward:\nls -l /usr\nls -l /etc\n. ",
    "pradyunsg": "Just had to come in and say: :+1:\n. No, it is not.\n220 is about the usage of sudo with pip.\nThis is about the wrong/incomplete dependencies of the package, probably in the Ubuntu's repositories.\n. ",
    "Timidger": ":+1: \n. After looking at this and this, it looks like thefuck would have to be implemented in slightly different ways on different shells (fish, zsh, bash, etc.). For example, with bash all that is needed to be done is for the completion to be registered using complete or compgen, which would not work for zsh. So shouldn't be hard, just add a little shell checking in the installation script to set up tab completion for all the shells (or just the primary one) installed on the system.\n. ",
    "albinekb": "a way to see how many times you used  \"fuck\" :dancer: \n. ",
    "crimsonknave": "I feel that there are a couple of useful statistics that could be collected and displayed.\n- Number of total fucks\n- Number of 'No fucks given'\n- Number of times each rule was matched\n. ",
    "599316527": "Cool! It works well.\n. ",
    "Justineo": "Great.\n. ",
    "szhangpitt": "+1\n. ",
    "karorogunso": "+2\n. ",
    "mikemucc": "Maybe we could do this with Siri on Mac OS X?  \"Hey Siri, FUCK!\"\nOh, or maybe an Alexa skill?\n\nMe: \"Alexa turn on the TV.\"\nAlexa: \"I'm sorry, I didn't get that.\"\nMe: \"Fuck!\"\nAlexa: \"Oh, you want me to turn on the TV.\"\n\nThe possibilities are endless!. ",
    "timofurrer": "Seems like. I have:\nLinux XXX 3.16.0-4-amd64 #1 SMP Debian 3.16.7-ckt2-1 (2014-12-08) x86_64 GNU/Linux\n. ",
    "scott-abernethy": "No problem. :)\n. @thibmaek psutil is installed as a resource by the brew package, so you shouldn't need to install manually. What version did you install (brew list thefuck)?\n@nvbn anyone can submit changes to brew if you need to make a fix.\n. PS the psutils package in brew is utilities for PostScript files. ;)\n. I don't think this is a problem with the brew package.\n@thibmaek did you try to install thefuck with pip or easy_install before installing via brew? You will need to uninstall those as your path is picking that install over the brew install.\n@nvbn the traceback indicates that the problem is with a local thefuck install, not the brew package. Brew packages install all python files under /usr/local/... and are independent of .pyenv. I.e. a problem with the brew package would have shown a traceback referencing /usr/local/Cellar/thefuck/1.29/libexec/bin/thefuck.\n. @thibmaek the brew package does work out of the box, but didn't in your case because you'd installed via pip first. Glad you got it sorted. :smile: \n. ",
    "boblinux": "Did you execute the good command one time before?\nIf not ,Try this : \ngit clone myrepo\n// it will save the command \nand then you can try :\ngit clne myrepo\nfuck\nI believe you have to execute the good command at least onc, This will let thefuck to save the good command and can be used again. I will try it more late with my computer and I'll say you if it runs.\n. maybe fixed in 1.35+  \n[boblinux@bobz ~]$ git clne https://github.com/boblinux/Algo_generique_cpp\ngit : 'clne' n'est pas une commande git. Voir 'git --help'.\nVouliez-vous dire cela ?\n    clone\n[boblinux@bobz ~]$ fuck\ngit clone https://github.com/boblinux/Algo_generique_cpp\nClonage dans 'Algo_generique_cpp'...\nremote: Counting objects: 283, done.\nremote: Compressing objects: 100% (33/33), done.\nremote: Total 283 (delta 13), reused 0 (delta 0), pack-reused 250\nR\u00e9ception d'objets: 100% (283/283), 202.28 KiB | 351.00 KiB/s, fait.\nR\u00e9solution des deltas: 100% (157/157), fait.\nV\u00e9rification de la connectivit\u00e9... fait.\n. ",
    "blixt": "It always works if writing fuck right after a misspelled command. This issue is about misspelling fuck itself and then calling it again a second time (correctly spelled). Today it just says echo No fuck given but ideally it would go back and correct the original command.\n. zsh with oh-my-zsh\nOn Monday, May 4, 2015, Sanket Dasgupta notifications@github.com wrote:\n\n@blixt https://github.com/blixt What's that shell?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/103#issuecomment-98769268.\n. \n",
    "underscorejho": "possibly similar to #74 \n. did you install python-dev?\n. A dictionary maybe? Where the key is the fuckup and the value is the correct command. Probably saved locally somewhere. \nI'm really more interested in seeing if this is an idea people would be interested in. If so, then I can certainly do more research into the most effective ways to implement it. It just seems like a lot of hassle to have to manually enter rules for possible errors.\n(edit) It would work well (in theory) for mistyped commands, though for example the sudo rule is a case where the explicit rule is likely a better option.\n. Sweet. \nOk. So on this feature-idea here we would want:\n- local fuckup learning using an add_fuckup command (or addfuckup.. or newfu... or something)\n- confirmation that it's learning the right fuckup/command pair (but this could be optional)\n- probably some learned_fuckups rule that handles these new learned fuckups\n- ... other things?\n. I'll put that on the wishlist. That'd be sweet to be able to collect everyone's collective fuckups and 'learn' from them.\nOh and a way to remove a fuckup if for some reason you don't want it anymore.\n. fixing bugs...\n. You make a good point. If @nvbn agrees, I'll change that.\n. I'm going to make some changes first to make sure that this is true, but I believe I can build it so that it's only looking at command line args from the relevant fuck command, instead of the 'fucked up' command. That way fuck --remove wouldn't interfere with cmd --remove.\n. I've changed the get_command() function in main.py to programmatically fetch the previous command using .bash_history . This eliminates the need for the current alias, though it requires lines in .bashrc to keep .bash_history up to date. \nI believe this should work, but I'm having trouble adjusting the appropriate tests.\nI also submitted a seperate PR ( #193 ) with just the custom_fuckups rule and related changes, so that the rule is in place, but you'd have to add them manually to the ~/.thefuck/.my_fuckups .\n. Is that possible? That sounds like a more valid way of checking for console typos than to immediately check every rule.\n. While trying to programmatically fetch history (instead of using the alias) on #167 (relevant code is in get_command() in main.py) , I figured out that the following lines in your .bashrc will keep your .bash_history current with each command:\nshopt -s histappend\nPROMPT_COMMAND=\"history -a;$PROMPT_COMMAND\"\nThis executes PROMPT_COMMAND just before displaying each new command prompt, so it is actively updating your .bash_history with each command.\nI'm not 100% certain that this'll solve the problem, but it could help.\n. I guess that's just my style. Upper case variables are more or less 'constants'. I can change that if you like. \n. Sweet. Thanks for the tip. \n. This is awesome. But just a note, the way I usually avoid these typos in my day to day use is to use tab to autocomplete. Then, if it can't autocomplete, I've clearly mistyped it. \nBut in terms of this project, this is really good way to handle this.\n. ",
    "Brobin": "Yeah, but that's not as satisfying! The cd.. - > cd .. rule doesn't save characters either.\n. Perfect. Thank you\n. ",
    "jchayan": "Still doesn't work. Example: ps aux |\u00a0greo 'ruby'\nOutput -> No fucks given. ",
    "kimtree": "@nwinkler AFAIK, That script only supports a command which starts with original command (e.g. inst -> install). But the most case users use 'the fuck' command, they expect this to support auto-correct as well. In the code I wrote, It will automatically finds the most similiar command which user types.\nAlso I know that using static dictionary in the code is bad for working with several user environment. It would be great if somebody suggest other method to support auto-correct as well.\n. @nwinkler How about see the file name lists in https://github.com/Homebrew/homebrew/tree/master/Library/Homebrew/cmd ?\n. As I commented in the pull request above, \"g push\" command is a alias command so It is quite tricky to support to this as well.\n. @nvbn :thumbsup:\n. @SanketDG Thank you for the comments. This was my terrible mistake. I fixed my source code.\n. @nvbn If so, Is it okay to add filter for stdout as well as stderr in sudo rule? I'm worrying about side-effects.\n. @ya0 FYI, Errno 13 means EACCES in errno.h and it's accurate error message in python code.\nhttp://man7.org/linux/man-pages/man3/errno.3.html\n. ",
    "amenk": "Okay, I was thinking is parses the \"did you mean\" output from Ubuntu itself.\n. ",
    "mart-e": "Are you sure about that ? For me $history[1] is the previous, so now it will go one command too far in the history. Maybe some config...\n. Thanks.\n@leiserfg I see that you had also this issue at #105, what is the vesion of fish you are using ?\n I have 2.1.2-1 (archlinux) on my side.\n. ",
    "J3RN": "@mart-e Oh man! It looks like it was a bug in the version of fish I was using.\nOn OSX\n\nBuilding from source (git master), fish claims to be 2.1.1, and has the issue I described\nInstalling from Homebrew, fish claims to be 2.1.2, and $history[1] is the last command\n\nOn Ubuntu\n\nBuilding from source gives fish 2.1.2, and $history[1] is the last command\nInstalling from the repos gives fish 2.1.1, and $history[1] is the last command\n\nThat taken into account, it seems like I'm an edge case. @nvbn Could we revert this? Sorry for causing trouble.\n. ",
    "leiserfg": "I'm using fish, version 2.1.2-1224-g48d3536\n. ",
    "ilovezfs": "Surely there's some sort of shell magic to make it possible! :)\n. ug http://stackoverflow.com/questions/23175809/typeerror-translate-takes-one-argument-2-given-python\n. >it seems like there's no reason to support Python 2 nowadays\nOne reason is that some systems ship with python2 only (e.g. macOS), and python3 is a non-trivial dependency to require.. @nvbn sure but the vast majority use python2. It just feels like a really heavy dependency for something like this, not to mention that it has over 14,000 installs per month.. Anyway, it's obviously up to you, but I don't think it's accurate to say there is \"no reason\" to support python2.. @HoweChen install it with python3 :). @HoweChen it's a HEAD install?. @HoweChen Yes it makes sense a HEAD build fails. I don't understand why you're seeing the warning though. That doesn't seem to be in version 3.21. Which version do you have installed?. It sounds like maybe you have it installed via pip2 as well.. @HoweChen you're welcome!. @nvbn I guess we'll depend on :python3 in the Homebrew formula because users will just complain about the warning to us otherwise.. >@ilovezfs thanks, would it be possible to have an option to install it with Python 2? In case some users have custom rules that work only with Python 2.\n@nvbn We typically only allow python2 and python3 in the same formula for libraries, not for applications.. Just comment out ...\nif six.PY2:\n        warn(\"The Fuck will drop Python 2 support soon, more details \"\n             \"https://github.com/nvbn/thefuck/issues/685\"). why not just pin the version?. I assume this would work:\nansible all -a 'pip install \"thefuck==3.21\"'. @AntonOlsen you're welcome!. ",
    "zzz6519003": "async io? mm....i've seen your code, but haven't noticed that XD\n. welcome to node family!\n. ",
    "thibmaek": "@scott-abernethy @nvbn well tbh, i got a pretty messed up install of pip on my machine, so maybe it would just be better to reinstall pip and try to install it with pip or easy_install.\nToo bad that the brew version doesn't work out of the box when installing.\n. Uninstalled thefuck & psutils from brew. Reinstalled pip and works with package thefuck from pip.\nSorry for this thread.\n. ",
    "reejosamuel": "type this into your command line source ~/.brashrc then try again running fuck\n. ",
    "a-x-": ":+1: \nsh\nehco \"$PATH\"\nfuck\noutput is weird:\necho $PATH\n$PATH\nexpecting: \necho $PATH\n$PATH\n/my/path:/my/another/path/\n. /cc @nerevar\n. Clean unsuccess attempts' traces\nDetect linux distrib and install correctly\nAnd add true alias in true place\n. it would be really big deal!\nthefuck have not simple installation\n. also, i attempt with \nsh\nsudo apt-get install python-pip python-dev\nsudo pip install thefuck\nTraceback (most recent call last):\n  File \"/usr/local/bin/pip\", line 5, in <module>\n    from pkg_resources import load_entry_point\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 2711, in <module>\n    parse_requirements(__requires__), Environment()\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 584, in resolve\n    raise DistributionNotFound(req)\npkg_resources.DistributionNotFound: pip==1.4\n. :ok_hand: i uninstall pip, installed by easy_install and use instruction on page https://github.com/nvbn/thefuck/wiki/Installation#ubuntu\nSuccess!\nWhat about make this instructions are default?\n. and not working...\n. gitt status\nfuck\n...\nthen type <up><up> and get source mistaken gitt status\n. bash\nlatest (installed recently)\nlatest (installed recently :)\n. Hmm, i check my alias now and surprised: it's obsolete: $(thefuck $(fc -ln -1))\n. I update alias (and reload profile) and installation now and caused new issue with history: clearing to start session state!\n\nversion: 1.40\nalias fuck='eval $(thefuck $(fc -ln -1)); history -r'\n. 1)\nsh\nssh $server_domain\n2)\nsh\nhistory 2\nls\nexit <------ Latest command from previous session\n3)\nsh\ngitt\nfuck\ngit\n...\n4)\n<up>\nexit <------\n. Yeah, it fixed! :wave: \n. for example:\nsh\n./restart.sh\n```\nWARNING: timestamping does nothing in combination with -O. See the manual\nfor details.\nololo.log: Permission denied\nkill: No such process\ndevexp:~/www/bro $ ./restart.sh: line 13: /var/www/bro/bro.log: Permission denied\n```\n. but not working in this case\n. ",
    "blaecwen": "This solution works great, thanks.\n. @scorphus, it solves both bugs for me. \n. ",
    "WhoBrokeTheBuild": "Would there be another way to include this functionality?\n. ",
    "phase": ":+1:\n. ",
    "JMoVS": "well at least now I know how it's done, thanks! ;-)\n. ",
    "pranav15197": "Would it work if we would split the args based on the ';' , create a list of commands instead of just one and correct them and then execute them;\nin this case, we'll get 2 commands ecoh test and fuck, former will be corrected to echo test and latter would be ignored\n. oh my bad, that comment was meant for #152\nHow do we differentiate if a person meant to create a new directory, or he mispelled it? Or perhaps we can provide him with 2 commands to choose from. Either open the best match out of the existing directories, or create a new one\n. The problem seems to be with the history class, as on commenting out the following in the get_command function the issue disappears\n```\nif script == 'fuck' or script == history.last_script:\nscript = history.last_fixed_script or history.last_script\n```\n. This seems to be a more general issue, as same bug appears if you repeat any wrong command -\nfor example\n\n. changing \nif script == 'fuck' or script == history.last_script:\n       script = history.last_fixed_script or history.last_script\nto\nif script == 'fuck' or script == history.last_script:\n       script = history.last_script or history.last_fixed_script\nfixes the issue\n. I cloned the repo today and installed it for development, the version = 1.32 on the setup.py file\n. From what I could understand by reading the code,it guesses the right command by looking through the stderr that your wrong command generates, so if your command is right and doesnt give an error, no fuck is given\n. ",
    "neuton": "It's somewhat similar to https://github.com/nvbn/thefuck/issues/129 .\nSo it actually seems to be a more general problem of naive \"double-fuck\" check currently implemented.\n. Splitting based on ';' will work for this special case but won't work, say, for \"ecoh test && fuck\".\n. Well, removing \"fuck\" and \"thefuck\" from a command string may simply break the command in a various ways.\nNot sure, but it seems that a proper parser should be at least as complicated as the bash parser.\nAlso, a more general case of the problem includes situations with aliases, environment variables (and maybe some other cases, like scripts invocation or smth) and situations when \"fuck\" is written wrong and corrected by itself.\n. @ThatTomPerson \nwell, that seems to be somewhat a dirty hack and will, at best, unpredictably break the command\n. ",
    "eduardog3000": "@ja5h ecoh fuck; fuck\n. Also, ecoh a; fuck; fuck can't be stopped with ctrl-c.\n. @nvbn You tested it wrong, it should be ecoh, not echo, the point is if you have ;fuck after something that fuck would correct, you get an infinite loop.\nTry ecoh test; fuck; fuck.. Doesn't seem to be a problem anymore, ecoh test; fuck just does No fucks given and ecoh test; fuck; fuck puts you in a loop of suggesting echo test; fuck that can be broken with ctrl+c.\n837 is somewhat related, a little more extensive, and being worked on..",
    "thattomperson": "Ok I don't do all that much bash programming but if you are running the commands in a subshell couldn't you just something like alias fuck=\"\" before hand \n. ",
    "danybony": "You're welcome! :+1:\n. ",
    "razzius": "+1\n. ",
    "ProgVal": "Indeed :+1:\n. ",
    "orbxball": "I finally found that it was the problem about path.\n'/usr/local/Library/Taps'--->This folder isn't exist, so I mkdir a empty folder named:Taps and then solved.\nThank you.\n. ",
    "mcarton": "I just fixed a conflict. Any reason not to merge this one?\n. @nwinkler: well, I don't like git stash pop; see https://codingkilledthecat.wordpress.com/2012/04/27/git-stash-pop-considered-harmful/ and plenty others. Plus you might need to fix conflicts with the rebase and the stash apply :/\n@dunn: sure, I will do that tomorrow. \u2192 done #188 \n. @scorphus I needed a new Debian VM so I took the opportunity to try to install The Fuck in a fresh install:\nhttps://gist.github.com/mcarton/baaab610ea925fd44da9#file-gistfile1-txt.\n(the only thing I did before that was apt-get install screen && screen -L)\n. @scorphus It was a in virtual box. I won't have time to try it again today.\nOn the other hand psutil requires gcc (which is a dependency of pip, on debian at least) and python header files (ie. the python-dev package on debian).\nFor me it looks like a problem with pip or psutil that do not check for dependencies correctly.\n. I wonder how I could write a test for that one since it depends on the external program pkgfile.\n. I just merged conflicts with #200.\n@scorphus:\nDid you test that on Arch Linux?\nOn mine tests did not pass as pkgfile returns the complete name of the package (eg. extra/gvim for vim). I fixed that in 031669f.\n. @scorphus: I do not know mock but for what I understand I should replace\nCommand('vim'), '{} -S vim && vim'.format(pacman_cmd), 'vim foo bar'),\nin the *mocked test with something like:\nCommand('vim'), '{} -S vim && vim'.format(pacman_cmd), 'extra/gvim\\nextra/gvim-python3'),\nsince pkgfile output is as follow:\n% pkgfile vim\nextra/gvim\nextra/gvim-python3\nextra/vim\nextra/vim-minimal\nextra/vim-python3\nCan you confirm that?\n. Yes I know, I just wanted to be sure return_value was supposed to be the output of pkgfile and forgot the flags in my example. Anyway, it should be right now, this can be merged.\n. How is that specific to thefuck? You should probably put that in your global gitignore.\n. Those are 2 problems with Python 2. It works perfectly on Python 3 and I admit I did not test it with Python 2 when I made the first pull request (see below). Note that commit 2705ff4 now breaks Python 3 and this pull request should not be merged. f04c439 from #201 fixes both problems.\nI though people still used Python 2 because of big and complicated libraries without Python 3 port or for big projects that would be long to port. This is not the case for thefuck, so why use Python 2? (This is a real question, Python is not my preferred language and I actually wonder why this project bothers with Python 2 compatibility)\n. thefuck supports Python 2.7, 3.3 and 3.4. You are using Python 3.2 which does not support the u'' form of string literals (it was a Python 2 syntax, removed in Python 3 because it was useless (Python 3 strings are always unicode) and re-added in Python 3.3 for portability with Python 2).\nYou should upgrade your Python version.\n. How do you use priorities?\nThey definitely work, for example I set the priority in the DRY rule and I get:\n% cd cd foo\ncd: string not in pwd: cd\n% fuck\ncd foo [enter/ctrl+c]\nIf priority is not set in that rule I get:\n% cd cd foo\ncd: string not in pwd: cd\n% fuck\nmkdir -p cd toto && cd cd toto [enter/ctrl+c]\nWhich is the cd_mkdir rule.\n. You're welcome.\nOn Thu, Jul 9, 2015 at 6:14 PM, Pablo Aguiar notifications@github.com\nwrote:\n\nNice catch! Totally forgot it. Thanks!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/pull/283#issuecomment-120053062.\n. @SanketDG: indeed it is. I modeled it as the apt_get rule but that or now makes it wrong. Would something like:\n\n* `pacman` &ndash; installs app with `pacman` if it is not installed (uses `yaourt` if available).\nbe better?\n. Ok, it seems a saner default behavior, I know git_push_force it seems a little dangerous (the rule would first add -f, I amended it afterwards to use --force instead to show users how bad it can be and then I push -f to edit the pull requests :)).\n. :+1: \nI also thought about something like that.\n. must be root is present in the sudo rule so it already works:\nlatex\n% dkms autoinstall\nError! You must be root to use this command.\n% fuck\nsudo dkms autoinstall [enter/ctrl+c]\nMaybe you have not upgraded thefuck for a while?\n. Weird. It works as expected on my debian but it does not even try to match the rules with you.\nDEBUG: Total took: 0:00:03.232152 might be the problem: by default The Fuck only wait for 3s for the command output. Here it took just a little more than 3s so it might have stopped because aptitude did not respond in the 3s delay.\nCan you try again with export THEFUCK_WAIT_COMMAND=100?\n. You're welcome.\nFunny timing, I just added a line to log time outs in #313 but it hasn't been merged yet.\n. Maybe running $EDITOR Tests_Feature/my_test_file.cpp +1925 && the_previous_command would be enough?\n(I'm actually surprised the +line thing works with vi, vim, nano and emacs).\n. I'll implement that tomorrow.\nI started to list some patterns:\n| pattern | tools | note |\n| --- | --- | --- |\n| ^awk: {file}:{line}: | awk |  |\n| ^fatal: bad config file line {line} in {file} | git |  |\n| ^llc: {file}:{line}:{col}: | llc |  |\n| ^lua: {file}:{line}: | lua |  |\n| ^{file} (line {line}): | fish |  |\n| ^{file}: line {line}: | sh, bash, ssh |  |\n| ^{file}:{line:col}-{line:col} | cargo | parsing config file |\n| ^{file}:{line}: | zsh, ruby, make, ghc |  |\n| ^{file}:{line}:{col}: | gcc, clang, rustc, go |  |\n| ^\u00a0\u00a0File \"{file}\", line {line} | thefuck, python |  |\n| ^\u00a0\u00a0\u00a0\u00a0{file}:{line}:{col}: | cargo | compilation |\n| at {file} line {line} | perl |  |\n| at {file}:{line}:{col} | js, node |  |\nFeel free to add a comment if you have other ideas of easy to identify patterns.\n. @scorphus can you give me a full example of output for the tests?\n. I agree that every command should at least have -h, -v and a man page.\nI started working on the CLI and the man page.\nThe CLI breaks compatibility with current aliases as it now needs --fix:\n``` latex\n% thefuck --alias FUCK\nTF_ALIAS=FUCK alias FUCK='eval $(thefuck --fix $(fc -ln -1 | tail -n 1)); fc -R'\n% thefuck --fix vom\nvim [enter/\u2191/\u2193/ctrl+c]\nAborted\n% thefuck --help\nusage: thefuck\n               (--alias [ALIAS_NAME=fuck] | --fix CMD | --help | --rules | --version)\nMagnificent app which corrects your previous console command\narguments:\n  --alias [ALIAS_NAME=fuck], -a [ALIAS_NAME=fuck]\n                        output an example of alias for the current shell\n  --fix CMD, -f CMD\n                        fix the given command\n  --help, -h            show this help message and exit\n  --rules, -r           list enabled rules\n  --version, -v         show program's version number and exit\n% thefuck --rules\nEnabled rules:\n     brew_install\n     brew_unknown_command\n     brew_upgrade\n     cargo\n     cargo_no_command\n     cd_correction\n     [\u2026]\n% thefuck --version \n2.6\n```\nI did not use docopt as it seems a little overkill for such a simple CLI and I don't know if the --fix flag is possible with it. Also I included an --alias flag to do what thefuck-alias currently does, but I kept that command in order not to break everyone's configuration.\nAs for the man page, it uses pandoc (you do not want to write groff files yourself):\npython\npypandoc.convert('MANUAL.1.md', 'man', outputfile='man1/thefuck.1', extra_args=['-s'])\nor directly:\nsh\npandoc -s -t man MANUAL.1.md -o man1/thefuck.1\nBut I have no idea how to specify that in the setup.py file in order to install it (eg. in /usr/[local/]share/man/man1 on linux or wherever other platform put these files). For now the man page is copied in /usr/lib/python3.4/site-packages/thefuck-2.6-py3.4.egg/share/man/man1/thefuck.1 (on my machine) which man obviously ignores.\n. Thanks, I've made the help message clearer according to your comments. Is it better?\n. This is already taken care of.\nHow did you install The Fuck?\n. It seems pip ignored that extras_require kind of marker until version 6.0.\n. The slowness has already been reported.\nThe problem is that there are now a lot of rules, each taking a small amount of time. Unfortunately maths are against us there.\nTry deactivating some rules you don't use (eg. the history, which is the slowest as far as I know).\nI also noticed that getting the aliases list from the shell is quiet slow. On my system this takes up to 400ms, about half the time needed to execute fuck:\n% time zsh -ic alias\n\u2026            \nzsh -ic exit  0.35s user 0.04s system 96% cpu 0.410 total\nI should clean up my .zshrc.\nAnd of course, a raspberry pi is not the fastest computer there is.\n. @SanketDG Well, #345 really fixes one problem, but it had the most important overhead for me. And the fix is indeed included in 2.8.\n. @nvbn Yes but that's the usage section of the help:\n% thefuck\nusage: The Fuck [-h] [-v] [-a] [command [command ...]]\nit should be\n% thefuck\nusage: thefuck [-h] [-v] [-a] [command [command ...]]\nas that's what you would write to execute the program.\n. Yes, Debian now has apt, apt-get and aptitude. Not confusing at all.\nIsn't apt install gnome-tweak-tool also proposed ? (using the arrow keys)\n. \"it also works also on older systems\" is a terrible reason.\nWe would never use anything new if we'd blindly follow that.\n. @nvbn the install script could do that on Debian/ubuntu.\n. That was fast :)\n. Thanks, the coverage of that rule is not really good.\nBy the way, the unit tests fail on travis, but it works for me\u2122. Can you confirm?\n. @scorphus Thanks, that might work on OS X but does not work on Linux anymore (including travis) :p\nI probably have fixed it now, but it's mostly a hack with a weaken test. This test should be rewritten to do the same thing on Linux and OS X (or we should ask for OS X testing on travis and not test it at all on Linux) and have a better coverage.\n. @nvbn You can merge. scorphus helped my fix the tests on mac and I guess the easiest for him would to make another PR if he wants to improve the brew_* tests.\n. For me most of the time is actually spent in my shell to get the alias list:\n% time zsh -ic alias > /dev/null\nzsh -ic alias > /dev/null  0.32s user 0.05s system 96% cpu 0.384 total\n% time thefuck test               \nNo fucks given\nthefuck test  0.54s user 0.09s system 97% cpu 0.640 total\ncan you execute these command for comparison please? And also the output of\nexport THEFUCK_DEBUG=true\nthefuck some-fucked-cmd\n\nAs for the alias list, if that's really a problem and not just my .zshrc which need some cleaning up maybe we could make alias resolution optional (since we cannot reasonably ask every user to clean up their .whatevershellrc :p).\n. So this is history's fault again and a duplicate of #334.\nI can see from the output your version of The Fuck is outdated though, last versions have improved.\n. Seems so work for me:\n``` latex\n% git init test\nInitialized empty Git repository in /tmp/test/.git/\n% cd test\n% touch fnzpifen\n% git add !$\ngit add fnzpifen\n% git comit -m \"a b c\"\ngit: 'comit' is not a git command. See 'git --help'.\nDid you mean this?\n    commit\nzsh: exit 1\n% fuck\ngit commit -m \"a b c\" [enter/\u2191/\u2193/ctrl+c]\n[master (root-commit) cf612e4] a b c\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 fnzpifen\n% git log\ncommit cf612e4302caed94c816253fde6e352fae7897ae\nAuthor: mcarton cartonmartin+git@gmail.com\nDate:   Sat Sep 5 13:03:36 2015 +0200\na b c\n\n```\nTry to upgrade The Fuck, if it still does not work, we'll need more information.\n. I still cannot reproduce with the same example as before and the sequence \u2191 \u2193 enter. But I cannot think of a reason why using arrows would cause a problem with escaping quotes.\nIt might be a problem with you shell as The Fuck clearly passed the quotes:\nerror: pathspec 'again\"' did not match any file(s) known to git.\n                     ~^~\nWhat shell are you using?\n. Can reproduce. I'm on it.\n. This has already been fixed. It will be in the next version.\n. No it's not, but we'd need more information:\n- output of thefuck --version;\n- export THEFUCK_DEBUG=true, reproduce the bug and paste the output here;\n- how to reproduce the bug.\n. Maybe, but that would break the conf of people who currently back up ~/.thefuck or have ~/.thefuck be a symlink to ~/.config/thefuck to be able to back up ./config (such as me, so I'm a little biassed about that :)).\nOther tools that have adopted $XDG_CONFIG_HOME seem to keep the historical directory for compatibility.\n. You're using The Fuck with Python 2, Python 3 has much less Unicode problems, you should try it.\n. You can install The Fuck with python 3 without affecting any other program. You'd just have to use python3 setup.py install/pip3 install thefuck/whatever-you-used-to-install-The-Fuck-but-with-a-3-in-the-name. Python 2 and Python 3 live very well together.\n@nvbn : by the way, how about using python3 if available in the install.sh script ?\n. > I can fix that. But should I endeavor in such adventure?\nIs it worth it? Would that mean adding the u prefix to all string literals in the source code? What is the point of using Python 2 if Python 3 is available? Is there anything in The Fuck that is not compatible with Python 3? Is there any platform where Python 2 is available, but Python 3 is not?\nPython 3 just works. I don't think Python 2 should be a time consuming problem in 2015.\nI vote for updating the install script to use Python 3 and advise using it on the README.\n(I think that most people just use Python 2 when Python 3 would be perfectly fine is because /usr/bin/python defaults to Python 2 on most platforms, and python 1 character less than python3).\n. I did not say we should not fix it. I said the fix was simply to use Python 3.\n. As explained in the README, you can use whatever you want as the alias:\n``` bash\neval \"$(thefuck --alias)\"\nYou can use whatever you want as an alias, like for Mondays:\neval \"$(thefuck --alias FUCK)\"\n```\nOr, in your case :smile::\nbash\neval \"$(thefuck --alias f)\"\n. What I fucking like about the fucking English language is that you can fucking use the fucking word \u201cfuck\u201d almost anywhere you fucking want.\n\nYou don't like it? Fork it, can call it \"fix\". I stand by \"fuck\"\n\nLook at the forks, that's already been done (as fix, as dafuq, etc.), although these forks are usually not maintained afterwards\u2026 fuck.\n. As a non-native English speaker, I find \u201cfuck\u201d is such a common English word that it's not a problem to use it in such circumstances. The name is funny, easy to remember, easy to type, not as likely to be typed by a cat sleeping on your keyboard as f would and it expresses your feeling at the moment you'd use it. It's a good name.\nAnd come on, why would you care being polite to your terminal?\n\nWarning, the following could shock U.S. citizens:\n\nI can say anything I fucking want, the U.S. is still a somewhat free country last I checked.\n\nActually, no, you can't. I'll let you search for it as this is not the place to discuss about it. Also the Internet is not the U.S., there are some other countries in the world that can access it.\n. > However on the command line the default alias name fuck is intended to be used as a verb, which I do not find appropriate.\nThat's an interjection, not a verb, so fuck is appropriate.\n. That's yet another problem with Unicode and Python 2. If you can, use The Fuck with Python 3 (eg. install it with pip3 install thefuck), the problem will likely be gone. @scorphus: if you still want to fix that :smile:\nBTW: you can use eval \"$(thefuck --alias)\" within .bachrc too, that way if the alias ever get updated, you'd automatically use the new one.\n. ~~This is not an error with The Fuck but pip. It seems it is not able to install psutils when some dependencies (here probably python3-dev) are not met but it fails to report that and fails ungracefully. On Ubuntu you could install python3-psutil before you install The Fuck.~~\nOups, that's what you did, I read too fast. I'll have a look at that error.\n. Do you have a ~/.cache/thefuck file? Do you still get the same error if you remove it and run The Fuck again?\n. Nice :smile:\nSo that last problem was because Python 2 and Python 3 shelves are not compatible (how convenient) and your file was a Python 2 shelf. I'll do something about that.\n. > I'm on it, as free time allows me :smiley: \nNo problem, I just wanted to cc you that as you've shown interest for fixing Unicode problems.\n. > This might be a cool rule.\n:+1:\nAlthough, I don't think the quotation mark is a match character with sh/bash by default, and what's a match really depends on the shell and its configuration\u00b9, eg.:\n``` bash\nbash, note that the error is from cat itself, so bash didn't bother with the ?:\n$ cat https://www.youtube.com/watch?v=O0ZnZMhkUyI\ncat: https://www.youtube.com/watch?v=O0ZnZMhkUyI: No such file or directory\nzsh:\n% cat https://www.youtube.com/watch?v=O0ZnZMhkUyI\nzsh: no matches found: https://www.youtube.com/watch?v=O0ZnZMhkUyI\n```\nIt should also work for that one:\nbash\n% git diff HEAD^ \nzsh: no matches found: HEAD^\nwith zsh's EXTENDEDGLOB (which is usually nice but for that case).\n[1]: of course we can just make a rule that add quotes everywhere it could.\n. Oups, my bad :sweat_smile:. I've made a PR: #419.\nAnyway, thanks for the very well-detailed issue :smiley:\n. On Arch it's already integrated but it requires pkgfile from the package extra/pkgfile to be installed. What do you use to get your \u201ctime may be found in the following packages\u201d if not pkgfile?\n(What kind of a shell does not have a built-in time? :open_mouth:)\n. Oh, I see :sweat_smile: \nAre you using fish? If the problem is what I think, you're a very unfortunate guy:\n- fish does not have a time built-in;\n- thefuck executes every program with sh in order to get a consistent output no mater what the shell;\n- sh does have a time built-in;\n- then, when thefuck executes your command, sh executes it happily;\n- therefore there's no reason to propose you to install time, because sh did not tell us there is no such thing as time.\nTL;DR: because we want a consistent output whatever the user's shell is, in that very specific case, we don't get a consistent output.\nCan you confirm that you do have the package extra/pkgfile and get something like that:\n~> eclipse\neclipse may be found in the following packages:\n  extra/eclipse 4.4.2-1 /usr/bin/eclipse\n~> fuck\nyaourt -S extra/eclipse; and eclipse [enter/\u2191/\u2193/ctrl+c]\nfor any program you don't have that does not happen to be an sh built-in? :smile:\n. They don't really do anything special, but they already work:\nshell\n% ehco test\nzsh: command not found: ehco\nzsh: exit 127   ehco test\n% fuck you zsh\necho test [enter/\u2191/\u2193/ctrl+c]\ntest\n. > Very nice, I'm guessing command-line args are just silently ignored?\nYep.\n. I confirm I have the same problem sometimes, but only when The Fuck fails.\n@pjuhasz I don't think we could rely on $SHLVL. On my computer it is 1 in a tty and 3 in a GUI (seems to be 3 = 1 for the WM + 1 for the terminal window + 1 for the shell itself all of which counting as a \u201cshell level\u201d).\n. I never use a nested shell/tmux/whatever, so either that's not the problem or there are two problems :sweat_smile:.\n. zsh seems to have print -s for that. I'll look into that tomorrow.\n\n\nAlternatively (or orthogonally to this discussion), there should be a configuration option for The Fuck so that it optionally doesn't, ahem, fuck with history at all.\n\nHey, it's called The Fuck and it fucks your history, what did you expect?\n(Ok, I'm out :sweat_smile:)\n. Here is what I did: https://github.com/mcarton/thefuck/tree/histfile\nUnfortunately, bash\u2018 history -s and zsh\u2018 print -s are not equivalent and this is a breaking change with zsh according to travis.\n. It should be OK in python 2.7 too and the error seems TIMEOUT-related in some unrelated part of the code. Re-run the tests just in case (don't know if travis will let you, but a git commit --amend && git push -f should do it).\n. @IuryAlves We already have a helper utils.replace_command for that that uses difflib under the hood. In your case it could be something like that:\npython\nreplace_command(command, command.script_parts[1], ['install', 'reinstall', 'search', \u2026])\nAlso prefer command.script_parts to command.script.split(), the former is shell-aware.\n. [[ is a bashism. [ should work as well here.\n. Hurfm, Git blames that on me.\nThe python doc does describe dbm as Interfaces to Unix \u201cdatabases\u201d but also mention:\n\nIf none of these modules is installed, the slow-but-simple implementation in module dbm.dumb will be used.\n\nLooks like this is not true on Windows then.\nI don\u2019t have a Windows to check and fix it. Could someone else take care of that?\n@scorphus gdbm might be missing on Windows too then.\n@vidarkongsli as a temporary fix, if you dare, you can remove lines 1 and 19-22 and replace lines 226-234 of thefuck/utils.py with\npy\n        except:\n            pass\nas you probably don\u2019t care about Python 2 to Python 3 compatibility.\n. Reinstalling it with Python 3 should be as simple as pip2 uninstall thefuck && pip3 install thefuck. The alias is the same.\n. Unfortunately anydbm has been renamed dbm in Python3 (Python 2\u2019s dbm has been renamed dbm.ndbm) which is why your PR fails on all Python3 versions. You can use that trick to fix it.\nTravis tests on Linux by the way.\n. That\u2019s not possible in general. E.g. maybe there there was a file /two/file.txt and your mv /one/file.txt /two erased it. There is no reasonable way to know there was a file there and to get it back.\nWhat you propose would almost always be a partial fix and work on very few commands. I expect that to be more frustrating than useful.\n. :+1:\n. Isn\u2019t that exactly what the apt_get_search rule does?\n. Here is what I get:\n% thefuck --version\nThe Fuck 3.3 using Python 3.4.2\n% apt-get search\nE: Invalid operation search\nzsh: exit 100   apt-get search\n% fuck\napt-cache search [enter/\u2191/\u2193/ctrl+c]\nAre you up-to-date? If you\u2019ve installed The Fuck with pip, you can update it with pip install --upgrade thefuck.\n. @nvbn Should I make a PR with https://github.com/nvbn/thefuck/issues/422#issuecomment-170240398 limited to bash? I haven\u2019t figured out how to do something similar with zsh builtins though.\n. I believe a bug like that was already reported, but I cannot reproduce. What shell are you using? And Python version? And The Fuck version?\n. Well git commmit -m \"shortmessage\" and git commmit -m shortmessage are completely equivalent as far as git is concerned. It\u2019s your shell which is supposed to handle the quotes.\nFrom the log above (note the quote in error: pathspec 'bad\"') it looks like you\u2019re trying to evaluate git commit -m \"\\\"temporarily\" stashing this to try and understand why performance is so \"bad\\\"\" (or equivalently \"git\" \"commit\" \"-m\" \"\\\"temporarily\" \"stashing\" \"this\" \u2026 \"is\" \"so\" \"bad\\\"\").\nWhat is the result of alias fuck?\n. Ok, I can reproduce. Your alias is old, please change it to eval $(thefuck --alias) (not alias fuck=\u2026, literally just eval $(thefuck --alias)).\n. Yep, that\u2019s the old way, the new way eval $(thefuck --alias) also has the advantage to update itself :smile:.\n. LGTM\n. @lawrencebenson sorry but I don\u2019t have merging rights on that repo, I was just suggesting that it would be a nice addition.\n. Nice, but can we have a test file for that?\n. On the other hand you can\u2019t really expect The Fuck to know about all subcommands of all commands.\n. Some commands have --help, some have -h, some have -help, some have -?, some have help, some have a man page. There is no consistent way to get help for a command. Even if there were, the format of that help is not consistent either. Compare:\n``` latex\n% git --help\nusage: git [--version] [--help] [-C ] [-c name=value]\n           [--exec-path[=]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=] [--work-tree=] [--namespace=]\n            []\nThese are common Git commands used in various situations:\nstart a working area (see also: git help tutorial)\n   clone      Clone a repository into a new directory\n   init       Create an empty Git repository or reinitialize an existing one\nwork on the current change (see also: git help everyday)\n   add        Add file contents to the index\n   mv         Move or rename a file, a directory, or a symlink\n   reset      Reset current HEAD to the specified state\n   rm         Remove files from the working tree and from the index\n[a few other such sections]\n%\u00a0svn --help\nusage: svn  [options] [args]\nSubversion command-line client.\nType 'svn help ' for help on a specific subcommand.\nType 'svn --version' to see the program version and RA modules\n  or 'svn --version --quiet' to see just the version number.\nMost subcommands take file and/or directory arguments, recursing\non the directories.  If no arguments are supplied to such a\ncommand, it recurses on the current directory (inclusive) by default.\nAvailable subcommands:\n   add\n   auth\n   blame (praise, annotate, ann)\n   cat\n   changelist (cl)\n   checkout (co)\n   cleanup\n[etc]\n% hg --help\nMercurial Distributed SCM\nlist of commands:\nadd           add the specified files on the next commit\n addremove     add all new files, delete all missing files\n annotate      show changeset information by line for each file\n archive       create an unversioned archive of a repository revision\n backout       reverse effect of earlier changeset\n bisect        subdivision search of changesets\n bookmarks     create a new bookmark or list existing bookmarks\n branch        set or show the current branch name\n[etc]\nadditional help topics:\nconfig        Configuration Files\n dates         Date Formats\n diffs         Diff Formats\n environment   Environment Variables\n extensions    Using Additional Features\n filesets      Specifying File Sets\n glossary      Glossary\n[etc]\n% cargo --help\nRust's package manager\nUsage:\n    cargo  [...]\n    cargo [options]\nOptions:\n    -h, --help          Display this message\n    -V, --version       Print version info and exit\n    --list              List installed commands\n    -v, --verbose       Use verbose output\n    -q, --quiet         No output printed to stdout\n    --color WHEN        Coloring: auto, always, never\nSome common cargo commands are:\n    build       Compile the current project\n    clean       Remove the target directory\n    doc         Build this project's and its dependencies' documentation\n    new         Create a new cargo project\n    init        Create a new cargo project in an existing directory\n    run         Build and execute src/main.rs\n[etc]\n```\nYou might think getting the list of sub-commands from that is easy, but nay. hg does not have a diffs sub-command for example, diffs is an additional help topics. And that\u2019s just 4 commands with a <command> <sub-command> <other> <stuffs> model. The Fuck would either have to special case every command or would have a very poor parsing :sad:.\n. sh\n$ git help st\n`git st' is aliased to `status'\nOh come on git! That\u2019s not helpful!\nLGTM\n. This has been reported again and again. You are free to name the alias whatever you want, see the README.\n. You actually have named your rule hadoop_dfs_missing_dash and that list was in alphabetic order.\n. The command gives a really nice error message: it has the faulty command and the fix for it. Maybe you could make your rule more generic? You can get inspiration from the git_not_command rule.\n. I meant more generic in the sense that there are probably other subcommands than '-ls' no? (I don't know hdfs)\nAnyway yes, it would probably be good to fix any command whose output is of the form \"foo: Unknown command\\nDid you mean bar?\"\n. Oh indeed sorry, I got confused by all those \"fs/ls\" :$\n. Last comment and I stop annoying you for today: all the other items start with a verb conjugated at the 3rd person and with a lower case letter, and all but the last items end with a ';' not a '.'.\n. This is not very generic:\n- The case dnf vs. dfn vs. any other similar typo is already taken care of by the no_command rule;\n- The case of istall vs. install should be taken care of with utils.get_closest and a list of possible candidates (there is a list of possible subcommands in the man page), you could then use the replace_command utility function (look at other similar rules :smile:).\n. You can handle sudo with the @sudo_support annotation.\n. The rule lists are usually alphabetized.\n. You don\u2019t need that with @for_app('ln').\n. ",
    "ChillarAnand": "@underscorejho  yes, i already have that. \n. @nvbn output:\n<class 'psutil.Process'>\n. after upgrading issue was solved\n. @smaniato  i tried \nsudo pip install thefuck --upgrade\nand it worked. i have no idea why it worked. version 1.35 and above seems to work. \n. ",
    "spmaniato": "@ChillarAnand I'm getting TypeError: 'Process' object is not callable even after:\nsudo apt-get update\nsudo apt-get upgrade\nsudo pip install thefuck --upgrade\nWhat did you mean by \"after upgrading\" issue was solved?\n@nvbn in case it helps:\npython\npython -c 'from psutil import Process; print(Process); Process()'\n<class 'psutil.Process'>\nThank you both!\nPS. I'm on Python 2.7.6\n. This (hopefully temporary) hack in shells.py (L102) got it working:\npython\ndef _get_shell():\n    # shell = Process(os.getpid()).parent().cmdline()[0]\n    return shells['bash'] # hardcode 'bash' or 'zsh'\nThis is what I get when upgrading btw:\n$ sudo pip install thefuck --upgrade\nRequirement already up-to-date: thefuck in /usr/local/lib/python2.7/dist-packages\nCleaning up...\n. @nvbn \npython\n$ python -c 'from thefuck.shells import Process; print(Process); Process()'\n<class 'psutil.Process'>\n$ python --version\nPython 2.7.6\n. @nvbn Interesting!\npython\n$ python -c 'from thefuck import shells; import os; print(shells.Process(os.getpid()).parent().cmdline()[0])'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nTypeError: 'Process' object is not callable\n. @nvbn That gave me:\npython\n$ python -c 'from thefuck import shells; import os; print(shells.Process(os.getpid()).parent.cmdline()[0])'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nTypeError: 'list' object is not callable\nI think the correct one is:\npython\n$ python -c 'from thefuck import shells; import os; print(shells.Process().parent.cmdline[0])'\nbash\n. Fix confirmed. Thanks @nvbn ! Feel free to close this issue again.\n. ",
    "brunoborges": "Oh, cool thanks.\n. ",
    "uGuardian": "Couldn't you make it also that if you use fuck and it doesn't come up with something, you could reenter the command correctly and then use the add fuckup command to add the most recent command as a correction so you wouldn't have to manually hard-code the explicit correction?\n. ",
    "LeonardMeyer": "Same problem here. I think Git Bash uses the underlying cmd Windows prompt and it cannot display ANSI color.\n. ",
    "creckord": "I got the same problem. I think the issue here is that the Python version is geared for Windows and doesn't know anything about running in a MinGW shell. Consequently, it seems to mess up the escape sequence output. If I take that output, replace all the little arrows with \\033, and echo -e it in the shell, it works just fine.\n. ",
    "Vennik": "This will work:\nhttp://stackoverflow.com/questions/563600/can-i-get-to-work-in-powershell\nDon't forget the parentheses.\n. Yea that will be interesting. I'll take a look.\n. ",
    "tomchentw": "Same issue here.\n- zsh: zsh 5.0.7 (x86_64-apple-darwin14.0.0)\n- thefuck: 1.40\n- command: g push\n- alias: g=git\nNote:\ngit push and fuck works as expected.\nScreenshot\n\nAlias and thefuck version\n``` log\n\u279c  gh-pages git:(chore-node-012-compatibility) alias\n...=../..\n....=../../..\n.....=../../../..\n......=../../../../..\n1='cd -'\n2='cd -2'\n3='cd -3'\n4='cd -4'\n5='cd -5'\n6='cd -6'\n7='cd -7'\n8='cd -8'\n9='cd -9'\nRED='RAILS_ENV=development'\nREP='RAILS_ENV=production'\nRET='RAILS_ENV=test'\n_=sudo\nafind='ack-grep -il'\nbrake='noglob bundle exec rake'\nbrews='brew list -1'\nbubu='brew update && brew upgrade && brew cleanup'\nd='dirs -v | head -10'\ndevlog='tail -f log/development.log'\nfuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'\ng=git\nga='git add'\ngaa='git add --all'\ngap='git add --patch'\ngb='git branch'\ngba='git branch -a'\ngbr='git branch --remote'\ngc='git commit -v'\n'gc!'='git commit -v --amend'\ngca='git commit -v -a'\n'gca!'='git commit -v -a --amend'\ngcl='git config --list'\ngclean='git reset --hard && git clean -dfx'\ngcm='git checkout master'\ngcmsg='git commit -m'\ngco='git checkout'\ngcount='git shortlog -sn'\ngcp='git cherry-pick'\ngcs='git commit -S'\ngd='git diff'\ngdc='git diff --cached'\ngdt='git difftool'\ngg='git gui citool'\ngga='git gui citool --amend'\nggpnp='git pull origin $(current_branch) && git push origin $(current_branch)'\nggpull='git pull origin $(current_branch)'\nggpur='git pull --rebase origin $(current_branch)'\nggpush='git push origin $(current_branch)'\ngignore='git update-index --assume-unchanged'\ngignored='git ls-files -v | grep \"^[[:lower:]]\"'\ngit-svn-dcommit-push='git svn dcommit && git push github master:svntrunk'\ngk='gitk --all --branches'\ngl='git pull'\nglg='git log --stat --max-count=10'\nglgg='git log --graph --max-count=10'\nglgga='git log --graph --decorate --all'\nglo='git log --oneline --decorate --color'\ngloburl='noglob urlglobber '\nglog='git log --oneline --decorate --color --graph'\nglp=_git_log_prettily\ngm='git merge'\ngmt='git mergetool --no-prompt'\ngp='git push'\ngpoat='git push origin --all && git push origin --tags'\ngr='git remote'\ngrba='git rebase --abort'\ngrbc='git rebase --continue'\ngrbi='git rebase -i'\ngrep='grep  --color=auto --exclude-dir={.bzr,.cvs,.git,.hg,.svn}'\ngrh='git reset HEAD'\ngrhh='git reset HEAD --hard'\ngrmv='git remote rename'\ngrrm='git remote remove'\ngrset='git remote set-url'\ngrt='cd $(git rev-parse --show-toplevel || echo \".\")'\ngrup='git remote update'\ngrv='git remote -v'\ngsd='git svn dcommit'\ngsps='git show --pretty=short --show-signature'\ngsr='git svn rebase'\ngss='git status -s'\ngst='git status'\ngsta='git stash'\ngstd='git stash drop'\ngstp='git stash pop'\ngsts='git stash show --text'\ngts='git tag -s'\ngunignore='git update-index --no-assume-unchanged'\ngunwip='git log -n 1 | grep -q -c \"--wip--\" && git reset HEAD~1'\ngup='git pull --rebase'\ngvt='git verify-tag'\ngwc='git whatchanged -p --abbrev-commit --pretty=medium'\ngwip='git add -A; git ls-files --deleted -z | xargs -r0 git rm; git commit -m \"--wip--\"'\nhistory='fc -l 1'\njimweirich=rake\nl='ls -lah'\nla='ls -lAh'\nll='ls -lh'\nls='ls -G'\nlsa='ls -lah'\nmd='mkdir -p'\nplease=sudo\npo=popd\nprodlog='tail -f log/production.log'\npu=pushd\nrails=_rails_command\nrake=_rake_command\nrc='rails console'\nrd='rails destroy'\nrdb='rails dbconsole'\nrdc='rake db:create'\nrdd='rake db:drop'\nrdm='rake db:migrate'\nrdms='rake db:migrate:status'\nrdmtc='rake db:migrate db:test:clone'\nrdr='rake db:rollback'\nrds='rake db:seed'\nrdtc='rake db:test:clone'\nrdtp='rake db:test:prepare'\nrfind='find . -name \".rb\" | xargs grep -n'\nrg='rails generate'\nrgm='rails generate migration'\nrlc='rake log:clear'\nrn='rake notes'\nrp='rails plugin'\nrr='rake routes'\nrs='rails server'\nrsd='rails server --debugger'\nru='rails runner'\nrun-help=man\nrvm-restart='rvm_reload_flag=1 source '\\''/Users/tomchentw/.rvm/scripts/rvm'\\'\nsbrake='noglob sudo bundle exec rake'\nsc='ruby script/console'\nsd='ruby script/server --debugger'\nsg='ruby script/generate'\nsgem='sudo gem'\nsp='ruby script/plugin'\nsr='ruby script/runner'\nsrake='noglob sudo rake'\nss='thin --stats \"/thin/stats\" start'\nssp='ruby script/spec'\ntestlog='tail -f log/test.log'\nwhich-command=whence\n\u279c  gh-pages git:(chore-node-012-compatibility) brew info thefuck\nthefuck: stable 1.40 (bottled)\nhttps://github.com/nvbn/thefuck\n/usr/local/Cellar/thefuck/1.40 (134 files, 1.0M) \n  Poured from bottle\nFrom: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/thefuck.rb\n==> Caveats\nAdd the following to your .bash_profile or .zshrc:\n  bash: alias fuck='eval $(thefuck $(fc -ln -1)); history -r'\n  zsh: alias fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'\nOther shells: https://github.com/nvbn/thefuck/wiki/Shell-aliases\n\u279c  gh-pages git:(chore-node-012-compatibility) \n``\n. Hmm seems to be fixed in1.44`? \n. ",
    "pvinis": "i guess its the same.\n```\npavlos-mbp% g push\nfatal: The current branch a/10.9-not-working has no upstream branch.\nTo push the current branch and set the remote as upstream, use\ngit push --set-upstream origin a/10.9-not-working\npavlos-mbp% fuck\ngo push\ngo: unknown subcommand \"push\"\nRun 'go help' for usage.\npavlos-mbp% git push\nfatal: The current branch a/10.9-not-working has no upstream branch.\nTo push the current branch and set the remote as upstream, use\ngit push --set-upstream origin a/10.9-not-working\npavlos-mbp% fuck\ngit push --set-upstream origin a/10.9-not-working\nCounting objects: 22, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (22/22), done.\nWriting objects: 100% (22/22), 19.76 KiB | 0 bytes/s, done.\nTotal 22 (delta 18), reused 0 (delta 0)`\n```\ni have g aliased as git. thefuck only got it right when i did git push and not when i did g push.\n. its working for me now. i currently have 1.45 installed. also, im using this eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R\n. ",
    "nicwest": "@nwinkler: I think he meant that for you.\n. ",
    "HughMacdonald": "It looks like proper tcsh support is more involved, and needs changes made to shells.py\nI've done a fork, and I'll look at getting a pull request together\n. Hmm - the one thing I can't get working is re-writing of the tcsh history. Even though loads of places mention ~/.history, this doesn't seem to be the active history file. Other than that, it's all working, though\n. I'll put in a pull request - you can grab or not as you'd like\n. ",
    "dunn": "Same for me on bash 4.3.33.\nMaybe history -r should be replaced with history -a; history -c; history -r? Append to the history file, then clear and re-read.\n. Yeah, currently I've got \nbash\nexport PROMPT_COMMAND=\"${PROMPT_COMMAND:+$PROMPT_COMMAND$'\\n'}history -a; history -c; history -r\";\nin .bashrc (see https://unix.stackexchange.com/questions/1288/preserve-bash-history-in-multiple-terminal-windows) and my fuck alias is back to alias fuck='thefuck $(fc -ln -1)'\n. When did you last run brew update? What's the output of brew doctor?\n. No, I think Homebrew could be better about reminding people to update regularly!\n. The brew issue might be fixed by running brew update before brew install thefuck\n. There hasn't been a stable release since this fix.  If you have Homebrew you can use brew install --HEAD thefuck to build the master branch.\n. Could this be tweaked to work for switching branches too?  That error message is Please, commit your changes or stash them before you can switch branches. So maybe the match could be as simple as or stash them.\n. ",
    "eyalzek": "I'm on bash 4.3.11(1)-release BTW.\nI changed the alias as you suggested and it seems to act correctly, so I'm going to leave it like that for now :)\n. ",
    "ogarcia": "Fuck, fucks itself. :smile:\nThe good alias is: alias fuck='eval $(thefuck $(fc -ln -1)). Or much simply as @dunn comment alias fuck='thefuck $(fc -ln -1) cause not is necessary make an eval.\nAnd this alias only work in bash, cause in you sh cannot make the bash expansion $().\nWhat is clear is that the history -r is a bad thing.\n. ",
    "nbelakovski": "dunn's suggestion for history -a; history -c worked for me. I think underscorejho's suggestion will have some other side effects, like your history doesn't get stored for a single terminal session (since, usually, history is contained in memory and written to disk on exit of a shell, whereas the suggestion changes it to write to disk on every command).\nIdeally this could be fixed within thefuck, instead of outside hacks like this. I've noticed that thefuck seems to duplicate the history, since I see double the entries in history after running fuck. It probably shouldn't be editing the history at all.\nEdit: Never mind, the duplication in history I observed was from the initial history -r. Removing that one seems to solve this problem, i.e. it's not a problem with fuck at all. . ",
    "felippenardi": "Same problem here on ubuntu 14:\nbash\n$ fuck\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 7, in <module>\n    from thefuck.main import main\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/main.py\", line 7, in <module>\n    from psutil import Process, TimeoutExpired\nImportError: No module named psutil\n. ",
    "lidonis": "How can we fix this ?\n. ",
    "Tuzoff": "Upping the issue with python-dev.\nNeed to run sudo apt-get install python-dev before pip.\n. ",
    "tjbenator": "For Fedora 23 I had to install python2-psutil via dnf in order for thefuck to install.\n``` bash\n[vagrant@localhost etc]$ sudo pip install thefuck\nYou are using pip version 7.1.0, however version 8.0.2 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\nCollecting thefuck\n  Using cached thefuck-3.3-py2.py3-none-any.whl\nCollecting psutil (from thefuck)\n  Using cached psutil-3.4.2.tar.gz\nCollecting decorator (from thefuck)\n  Using cached decorator-4.0.8-py2.py3-none-any.whl\nRequirement already satisfied (use --upgrade to upgrade): six in /usr/lib/python2.7/site-packages (from thefuck)\nCollecting pathlib (from thefuck)\n  Using cached pathlib-1.0.1.tar.gz\nCollecting colorama (from thefuck)\n  Using cached colorama-0.3.6-py2.py3-none-any.whl\nInstalling collected packages: psutil, decorator, pathlib, colorama, thefuck\n  Running setup.py install for psutil\n    Complete output from command /usr/bin/python -c \"import setuptools, tokenize;file='/tmp/pip-build-fQt4G4/psutil/setup.py';exec(compile(getattr(tokenize, 'open', open)(file).read().replace('\\r\\n', '\\n'), file, 'exec'))\" install --record /tmp/pip-XnKng4-record/install-record.txt --single-version-externally-managed --compile:\n    running install\n    running build\n    running build_py\n    creating build\n    creating build/lib.linux-x86_64-2.7\n    creating build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_pssunos.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_psbsd.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_pslinux.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_psposix.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_psosx.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_pswindows.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/init.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_compat.py -> build/lib.linux-x86_64-2.7/psutil\n    copying psutil/_common.py -> build/lib.linux-x86_64-2.7/psutil\n    running build_ext\n    building 'psutil._psutil_linux' extension\n    creating build/temp.linux-x86_64-2.7\n    creating build/temp.linux-x86_64-2.7/psutil\n    gcc -pthread -fno-strict-aliasing -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -DNDEBUG -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -fPIC -DPSUTIL_VERSION=342 -I/usr/include/python2.7 -c psutil/_psutil_linux.c -o build/temp.linux-x86_64-2.7/psutil/_psutil_linux.o\n    gcc: error: /usr/lib/rpm/redhat/redhat-hardened-cc1: No such file or directory\n    error: command 'gcc' failed with exit status 1\n----------------------------------------\n\nCommand \"/usr/bin/python -c \"import setuptools, tokenize;file='/tmp/pip-build-fQt4G4/psutil/setup.py';exec(compile(getattr(tokenize, 'open', open)(file).read().replace('\\r\\n', '\\n'), file, 'exec'))\" install --record /tmp/pip-XnKng4-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-fQt4G4/psutil\n```\nAfter dnf install python2-psutil and pip install thefuck here is pip freeze\n[vagrant@localhost etc]$ pip freeze\ncolorama==0.3.6\ndecorator==4.0.7\niniparse==0.4\niotop==0.6\npathlib==1.0.1\npsutil==3.2.1\npygpgme==0.3\npyliblzma==0.5.3\nrpm-python==4.13.0rc1\nsix==1.9.0\nthefuck==3.3\n. ",
    "kikihakiem": "+1\n. ",
    "igorsantos07": "Hahaha thanks!\nI'm a Python newbie and had issues to actually run thefuck locally, so\nthe test was useful to make sure I was not commiting BS :)\nPS: code was based on copy paste from other files. As I said, noob here.\nHaha\nOn 15 May 2015 21:07, \"Pablo Aguiar\" notifications@github.com wrote:\n\nOne of the few pull requests with test! Nice job!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/pull/199#issuecomment-102552085.\n. \n",
    "aragacalledpat": "Sorry! I'm new to some of this stuff.  Didn't know I could do that.\n. ",
    "mmussomele": "Good catch! I'll swap that in instead!\n. ",
    "QuantumQweef": "I just starting using thefuck not too long ago and have noticed active development here on gh, but unfortunately, this has never worked for me :/\n. ",
    "detonation": "Hi, this is on my rpi2. I have python 2.7 and 3.2 which is the newest via\napt on raspbian. How do I make it use 2.7?\nOn May 18, 2015 2:32 AM, \"Martin Carton\" notifications@github.com wrote:\n\nthefuck supports Python 2.7, 3.3 and 3.4. You are using Python 3.2 which\ndoes not support the u'' form of string literals (it was a Python 2\nsyntax, removed in Python 3 because it was useless (Python 3 strings are\nalways unicode) and re-added in Python 3.3 for portability with Python 2).\nYou should upgrade your Python version.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/207#issuecomment-102950577.\n. \n",
    "devkev": "This code spawns a new shell and gets the aliases from it.  This is fine for the common case of stuff defined in shell startup scripts, but not for any subsequently defined things.  Unfortunately I don't think it's generally possible for a sub-process to interrogate the parent shell as to the aliases it has (unless they were to be passed in somehow by the fuck alias).\nSimilarly, exported functions can easily be found in the sub-process environment, but this isn't the case for non-exported functions.  Again, the approach of spawning a new shell and seeing what functions it has will probably suffice, although it will miss some things.\n. ",
    "DomT4": "Make sure your Homebrew is up-to-date.\n. If someone wants to submit a PR to update the formula, that'd be welcome!\n. ",
    "caffeineflo": "brew update && brew install thefuck\nShould help you\n. ",
    "jonibatista": "It's working fine for me now :)\nSorry for taking so long to replay @scorphus\n. ",
    "thecoloryes": "duh! i really need to pay more attention to that...\n. ",
    "LoLei": "Thank you it worked after those two commands and reinstalling thefuck.\nAny insight on why I needed to do that?\n. @RedX2501 Sorry, I can't remember, and I'm not using Windows anymore.\n. ",
    "YarekTyshchenko": "Would be nice if it added the command it ran into the history itself. Possible to just append it to the history before it runs?\nEdit: Actually this seems like a different issue. ",
    "emptyaitch": "The corrects the interpretation, but still has bugs when using \"sudo\"\n. I solved my specific \"nocorrect\" problem by writing a new sudo.py rule that strips out the \"nocorrect\" and \"noglob\" keywords.   \nnocorrect mkdir -p /nopermissions --> sudo mkdir -p /nopermissions\nThis is a dumb solution, because it is zsh-specific.\n. ",
    "kengz": "Hello, I just ran --upgrade thefuck and retried it. The same issue seems to persist. I'm on OSX if that helps.\n. ",
    "waldyrious": "@scorphus can you offer some more info about how to do this? I see lots of git_*.py files but no git_tag.py, so I assume this situation is being captured by a more generic rule, but which?\n. I actually wouldn't, @scorphus. I truly appreciate your attempt to onboard new contributors, but remember that not everyone has sufficient background knowledge for the amount of information you provided to be useful/encouraging (it wasn't for me).\nOf course, you guys might prefer to attract people with more python/git/whatever proficiency, but I personally believe there's more to gain in this kind of collaborative projects by lowering the bar for new contributors.\n. It's ok, I don't hold any hard feelings regarding you personally, I'm just trying to make my perspective clear. Note that I did ask for more information once, which you sounded reluctant on giving, and I'd say that in such a case it's pretty natural to expect that one wouldn't feel compelled to keep asking unless they were already highly motivated.\nMind you, I completely agree that one learns best (more solidly) by experimenting rather than having things presented to them pre-digested. Unfortunately, people don't always have the time or the skill (or neither) to engage in this longer and more prolific process, so the easier route is often better in terms of actually getting things done (as I mentioned, I had given up offering my help here, and this is especially true for new contributors who aren't yet invested in the project).\nIn the end, I guess we kinda agree, it just boils down to recognizing the importance of assessing the involvement/investment and background knowledge shown by a prospective contributor, and adjusting the degree of assistance accordingly. (Or, you know, simply erring on the side of extra help rather than withholding information, especially since one person's Q&A serves as RTFM material for those who come afterwards).\n. Yeah, online communication is hard -- again, no hard feelings at all. Besides, I'm happy if sometime in the future this exchange enables a prospective contributor to become engaged with a project you're involved in when otherwise they wouldn't. I think that's a win for everyone :)\n. Maybe @nvbn can close the issue himself, since @maxried doesn't seem to be very active around here, and has confirmed the resolution.\n. Possibly using docopt?\n. Well, I never created a manpage and I have a vague idea that it involves a weird format and something ending in \"-roff\". If you give me some pointers to quickly get up to speed (for someone with zero experience in this), and an example manpage, I'd gladly contribute one for thefuck. Otherwise, I suspect someone else could put this together much more efficiently.\nAs for the content of the manpage, what could be there? If usage has no variations, and is simply \"fuck\" every time, perhaps authorship / contribution / bug report information, plus maybe installing / upgrading info? And maybe some usage examples and their output? Again, a sample manpage would be useful.\n. That said, would it really be impossible for the invocation thefuck --option to be recognized and dealt with appropriately? Even if not using the usual mechanism for command line options, it would be a great help in usability.\n. Thanks for doing this, @mcarton. Looking at your commits, I'm now positive that it'd have taken me a long time to gather enough expertise to produce that myself :smile: that said, I'll help in whatever way I can. I've already added a few minor suggestions to some commits.\n. Yes! :D :+1: \n. @josephfrazier thanks! What would this work like? Would one have to type \"fuck\" 3 times to get to the --help behavior?\n. > What does which git tell you?\n/usr/local/bin/git\n\n\nCan you please post the output of THEFUCK_DEBUG=true thefuck gut?\n\n\nDEBUG: Run with settings: {'alter_history': True,\n 'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'exclude_rules': [],\n 'history_limit': None,\n 'instant_mode': False,\n 'no_colors': False,\n 'priority': {},\n 'repeat': False,\n 'require_confirmation': True,\n 'rules': [],\n 'slow_commands': ['lein', 'react-native', 'gradle', './gradlew', 'vagrant'],\n 'user_dir': PosixPath('/Users/waldyrious/.config/thefuck'),\n 'wait_command': 3,\n 'wait_slow_command': 15}\nDEBUG: Received output: /bin/sh: gut: command not found\n\nDEBUG: Call: gut; with env: [...] 'THEFUCK_DEBUG': 'true', '_': '/usr/local/bin/thefuck', 'GIT_TRACE': '1'}; is slow:  took: 0:00:00.005707\nDEBUG: Importing rule: adb_unknown_command; took: 0:00:00.001293\nDEBUG: Importing rule: ag_literal; took: 0:00:00.001324\nDEBUG: Importing rule: apt_get; took: 0:00:00.002769\nDEBUG: Importing rule: apt_get_search; took: 0:00:00.000816\nDEBUG: Importing rule: apt_invalid_operation; took: 0:00:00.001838\nDEBUG: Importing rule: apt_list_upgradable; took: 0:00:00.001172\nDEBUG: Importing rule: apt_upgrade; took: 0:00:00.000837\nDEBUG: Importing rule: aws_cli; took: 0:00:00.000618\nDEBUG: Importing rule: brew_cask_dependency; took: 0:00:00.001286\nDEBUG: Importing rule: brew_install; took: 0:00:00.000467\nDEBUG: Importing rule: brew_link; took: 0:00:00.000698\nDEBUG: Importing rule: brew_reinstall; took: 0:00:00.001400\nDEBUG: Importing rule: brew_uninstall; took: 0:00:00.000774\nDEBUG: Importing rule: brew_unknown_command; took: 0:00:00.000705\nDEBUG: Importing rule: brew_update_formula; took: 0:00:00.001008\nDEBUG: Importing rule: cargo; took: 0:00:00.000451\nDEBUG: Importing rule: cargo_no_command; took: 0:00:00.000873\nDEBUG: Importing rule: cd_correction; took: 0:00:00.003531\nDEBUG: Importing rule: cd_mkdir; took: 0:00:00.005735\nDEBUG: Importing rule: cd_parent; took: 0:00:00.001821\nDEBUG: Importing rule: chmod_x; took: 0:00:00.000620\nDEBUG: Importing rule: composer_not_command; took: 0:00:00.002750\nDEBUG: Importing rule: cp_omitting_directory; took: 0:00:00.004407\nDEBUG: Importing rule: cpp11; took: 0:00:00.010380\nDEBUG: Importing rule: dirty_untar; took: 0:00:00.005951\nDEBUG: Importing rule: dirty_unzip; took: 0:00:00.010546\nDEBUG: Importing rule: django_south_ghost; took: 0:00:00.003777\nDEBUG: Importing rule: django_south_merge; took: 0:00:00.001222\nDEBUG: Importing rule: dnf_no_such_command; took: 0:00:00.006943\nDEBUG: Importing rule: docker_not_command; took: 0:00:00.004113\nDEBUG: Importing rule: dry; took: 0:00:00.000767\nDEBUG: Importing rule: fab_command_not_found; took: 0:00:00.001651\nDEBUG: Importing rule: fix_alt_space; took: 0:00:00.002320\nDEBUG: Importing rule: fix_file; took: 0:00:00.012916\nDEBUG: Importing rule: gem_unknown_command; took: 0:00:00.005752\nDEBUG: Importing rule: git_add; took: 0:00:00.008809\nDEBUG: Importing rule: git_add_force; took: 0:00:00.000755\nDEBUG: Importing rule: git_bisect_usage; took: 0:00:00.001087\nDEBUG: Importing rule: git_branch_delete; took: 0:00:00.001000\nDEBUG: Importing rule: git_branch_exists; took: 0:00:00.004524\nDEBUG: Importing rule: git_branch_list; took: 0:00:00.004618\nDEBUG: Importing rule: git_checkout; took: 0:00:00.004405\nDEBUG: Importing rule: git_commit_amend; took: 0:00:00.003237\nDEBUG: Importing rule: git_diff_no_index; took: 0:00:00.002638\nDEBUG: Importing rule: git_diff_staged; took: 0:00:00.008098\nDEBUG: Importing rule: git_fix_stash; took: 0:00:00.001307\nDEBUG: Importing rule: git_flag_after_filename; took: 0:00:00.001970\nDEBUG: Importing rule: git_help_aliased; took: 0:00:00.001053\nDEBUG: Importing rule: git_merge; took: 0:00:00.001129\nDEBUG: Importing rule: git_merge_unrelated; took: 0:00:00.001160\nDEBUG: Importing rule: git_not_command; took: 0:00:00.000703\nDEBUG: Importing rule: git_pull; took: 0:00:00.000842\nDEBUG: Importing rule: git_pull_clone; took: 0:00:00.003472\nDEBUG: Importing rule: git_pull_uncommitted_changes; took: 0:00:00.002988\nDEBUG: Importing rule: git_push; took: 0:00:00.005320\nDEBUG: Importing rule: git_push_different_branch_names; took: 0:00:00.010094\nDEBUG: Importing rule: git_push_force; took: 0:00:00.001539\nDEBUG: Importing rule: git_push_pull; took: 0:00:00.000878\nDEBUG: Importing rule: git_push_without_commits; took: 0:00:00.001482\nDEBUG: Importing rule: git_rebase_merge_dir; took: 0:00:00.001495\nDEBUG: Importing rule: git_rebase_no_changes; took: 0:00:00.000815\nDEBUG: Importing rule: git_remote_delete; took: 0:00:00.007533\nDEBUG: Importing rule: git_remote_seturl_add; took: 0:00:00.004729\nDEBUG: Importing rule: git_rm_local_modifications; took: 0:00:00.005920\nDEBUG: Importing rule: git_rm_recursive; took: 0:00:00.005028\nDEBUG: Importing rule: git_rm_staged; took: 0:00:00.001062\nDEBUG: Importing rule: git_stash; took: 0:00:00.001832\nDEBUG: Importing rule: git_stash_pop; took: 0:00:00.002381\nDEBUG: Importing rule: git_tag_force; took: 0:00:00.006271\nDEBUG: Importing rule: git_two_dashes; took: 0:00:00.014143\nDEBUG: Importing rule: go_run; took: 0:00:00.002556\nDEBUG: Importing rule: gradle_no_task; took: 0:00:00.002218\nDEBUG: Importing rule: gradle_wrapper; took: 0:00:00.001518\nDEBUG: Importing rule: grep_arguments_order; took: 0:00:00.006412\nDEBUG: Importing rule: grep_recursive; took: 0:00:00.003986\nDEBUG: Importing rule: grunt_task_not_found; took: 0:00:00.008114\nDEBUG: Importing rule: gulp_not_task; took: 0:00:00.006292\nDEBUG: Importing rule: has_exists_script; took: 0:00:00.001285\nDEBUG: Importing rule: heroku_multiple_apps; took: 0:00:00.001343\nDEBUG: Importing rule: heroku_not_command; took: 0:00:00.004685\nDEBUG: Importing rule: history; took: 0:00:00.002420\nDEBUG: Importing rule: hostscli; took: 0:00:00.003408\nDEBUG: Importing rule: ifconfig_device_not_found; took: 0:00:00.005869\nDEBUG: Importing rule: java; took: 0:00:00.010431\nDEBUG: Importing rule: javac; took: 0:00:00.001049\nDEBUG: Importing rule: lein_not_task; took: 0:00:00.001075\nDEBUG: Importing rule: ln_no_hard_link; took: 0:00:00.001309\nDEBUG: Importing rule: ln_s_order; took: 0:00:00.003548\nDEBUG: Importing rule: long_form_help; took: 0:00:00.002754\nDEBUG: Importing rule: ls_all; took: 0:00:00.006140\nDEBUG: Importing rule: ls_lah; took: 0:00:00.006361\nDEBUG: Importing rule: man; took: 0:00:00.001412\nDEBUG: Importing rule: man_no_space; took: 0:00:00.000679\nDEBUG: Importing rule: mercurial; took: 0:00:00.001147\nDEBUG: Importing rule: missing_space_before_subcommand; took: 0:00:00.000553\nDEBUG: Importing rule: mkdir_p; took: 0:00:00.001197\nDEBUG: Importing rule: mvn_no_command; took: 0:00:00.001407\nDEBUG: Importing rule: mvn_unknown_lifecycle_phase; took: 0:00:00.003641\nDEBUG: Importing rule: no_command; took: 0:00:00.007780\nDEBUG: Importing rule: no_such_file; took: 0:00:00.002234\nDEBUG: Importing rule: npm_missing_script; took: 0:00:00.008292\nDEBUG: Importing rule: npm_run_script; took: 0:00:00.007727\nDEBUG: Importing rule: npm_wrong_command; took: 0:00:00.007467\nDEBUG: Importing rule: open; took: 0:00:00.003799\nDEBUG: Importing rule: pacman; took: 0:00:00.022002\nDEBUG: Importing rule: pacman_not_found; took: 0:00:00.003264\nDEBUG: Importing rule: path_from_history; took: 0:00:00.001040\nDEBUG: Importing rule: php_s; took: 0:00:00.001751\nDEBUG: Importing rule: pip_unknown_command; took: 0:00:00.002168\nDEBUG: Importing rule: port_already_in_use; took: 0:00:00.006911\nDEBUG: Importing rule: prove_recursively; took: 0:00:00.010618\nDEBUG: Importing rule: python_command; took: 0:00:00.012561\nDEBUG: Importing rule: python_execute; took: 0:00:00.007037\nDEBUG: Importing rule: quotation_marks; took: 0:00:00.004700\nDEBUG: Importing rule: react_native_command_unrecognized; took: 0:00:00.001677\nDEBUG: Importing rule: remove_trailing_cedilla; took: 0:00:00.001254\nDEBUG: Importing rule: rm_dir; took: 0:00:00.002035\nDEBUG: Importing rule: rm_root; took: 0:00:00.004937\nDEBUG: Importing rule: scm_correction; took: 0:00:00.005268\nDEBUG: Importing rule: sed_unterminated_s; took: 0:00:00.007425\nDEBUG: Importing rule: sl_ls; took: 0:00:00.001924\nDEBUG: Importing rule: ssh_known_hosts; took: 0:00:00.007342\nDEBUG: Importing rule: sudo; took: 0:00:00.000812\nDEBUG: Importing rule: sudo_command_from_user_path; took: 0:00:00.003580\nDEBUG: Importing rule: switch_lang; took: 0:00:00.003154\nDEBUG: Importing rule: systemctl; took: 0:00:00.013427\nDEBUG: Importing rule: test.py; took: 0:00:00.000675\nDEBUG: Importing rule: tmux; took: 0:00:00.000861\nDEBUG: Importing rule: touch; took: 0:00:00.002225\nDEBUG: Importing rule: tsuru_login; took: 0:00:00.001204\nDEBUG: Importing rule: tsuru_not_command; took: 0:00:00.005810\nDEBUG: Importing rule: unknown_command; took: 0:00:00.018178\nDEBUG: Importing rule: unsudo; took: 0:00:00.000985\nDEBUG: Importing rule: vagrant_up; took: 0:00:00.001215\nDEBUG: Importing rule: whois; took: 0:00:00.001946\nDEBUG: Importing rule: workon_doesnt_exists; took: 0:00:00.004825\nDEBUG: Importing rule: yarn_alias; took: 0:00:00.012030\nDEBUG: Importing rule: yarn_command_not_found; took: 0:00:00.005315\nDEBUG: Importing rule: yarn_command_replaced; took: 0:00:00.001777\nDEBUG: Importing rule: yarn_help; took: 0:00:00.001141\nDEBUG: Trying rule: path_from_history; took: 0:00:00.007432\nDEBUG: Trying rule: dry; took: 0:00:00.000865\nDEBUG: Trying rule: git_stash_pop; took: 0:00:00.000096\nDEBUG: Trying rule: test.py; took: 0:00:00.000011\nDEBUG: Trying rule: adb_unknown_command; took: 0:00:00.005654\nDEBUG: Trying rule: ag_literal; took: 0:00:00.000266\nDEBUG: Trying rule: aws_cli; took: 0:00:00.000180\nDEBUG: Trying rule: brew_cask_dependency; took: 0:00:00.001744\nDEBUG: Trying rule: brew_install; took: 0:00:00.000043\nDEBUG: Trying rule: brew_link; took: 0:00:00.000112\nDEBUG: Trying rule: brew_reinstall; took: 0:00:00.000089\nDEBUG: Trying rule: brew_uninstall; took: 0:00:00.000059\nDEBUG: Trying rule: brew_unknown_command; took: 0:00:00.000011\nDEBUG: Trying rule: brew_update_formula; took: 0:00:00.000048\nDEBUG: Trying rule: cargo; took: 0:00:00.000007\nDEBUG: Trying rule: cargo_no_command; took: 0:00:00.000045\nDEBUG: Trying rule: cd_correction; took: 0:00:00.000043\nDEBUG: Trying rule: cd_mkdir; took: 0:00:00.000033\nDEBUG: Trying rule: cd_parent; took: 0:00:00.000005\nDEBUG: Trying rule: chmod_x; took: 0:00:00.000007\nDEBUG: Trying rule: composer_not_command; took: 0:00:00.000036\nDEBUG: Trying rule: cp_omitting_directory; took: 0:00:00.000035\nDEBUG: Trying rule: cpp11; took: 0:00:00.000033\nDEBUG: Trying rule: dirty_untar; took: 0:00:00.000028\nDEBUG: Trying rule: dirty_unzip; took: 0:00:00.000030\nDEBUG: Trying rule: django_south_ghost; took: 0:00:00.000006\nDEBUG: Trying rule: django_south_merge; took: 0:00:00.000005\nDEBUG: Trying rule: docker_not_command; took: 0:00:00.000100\nDEBUG: Trying rule: fab_command_not_found; took: 0:00:00.000030\nDEBUG: Trying rule: fix_alt_space; took: 0:00:00.000012\nDEBUG: Trying rule: fix_file; took: 0:00:00.000038\nDEBUG: Trying rule: gem_unknown_command; took: 0:00:00.000019\nDEBUG: Trying rule: git_add; took: 0:00:00.000016\nDEBUG: Trying rule: git_add_force; took: 0:00:00.000012\nDEBUG: Trying rule: git_bisect_usage; took: 0:00:00.000019\nDEBUG: Trying rule: git_branch_delete; took: 0:00:00.000013\nDEBUG: Trying rule: git_branch_exists; took: 0:00:00.000013\nDEBUG: Trying rule: git_branch_list; took: 0:00:00.000012\nDEBUG: Trying rule: git_checkout; took: 0:00:00.000011\nDEBUG: Trying rule: git_commit_amend; took: 0:00:00.000012\nDEBUG: Trying rule: git_diff_no_index; took: 0:00:00.000012\nDEBUG: Trying rule: git_diff_staged; took: 0:00:00.000012\nDEBUG: Trying rule: git_fix_stash; took: 0:00:00.000012\nDEBUG: Trying rule: git_flag_after_filename; took: 0:00:00.000011\nDEBUG: Trying rule: git_help_aliased; took: 0:00:00.000036\nDEBUG: Trying rule: git_merge; took: 0:00:00.000025\nDEBUG: Trying rule: git_merge_unrelated; took: 0:00:00.000022\nDEBUG: Trying rule: git_not_command; took: 0:00:00.000021\nDEBUG: Trying rule: git_pull; took: 0:00:00.000039\nDEBUG: Trying rule: git_pull_clone; took: 0:00:00.000027\nDEBUG: Trying rule: git_pull_uncommitted_changes; took: 0:00:00.000035\nDEBUG: Trying rule: git_push; took: 0:00:00.000020\nDEBUG: Trying rule: git_push_different_branch_names; took: 0:00:00.000020\nDEBUG: Trying rule: git_push_pull; took: 0:00:00.000031\nDEBUG: Trying rule: git_push_without_commits; took: 0:00:00.000025\nDEBUG: Trying rule: git_rebase_merge_dir; took: 0:00:00.000022\nDEBUG: Trying rule: git_rebase_no_changes; took: 0:00:00.000020\nDEBUG: Trying rule: git_remote_delete; took: 0:00:00.000020\nDEBUG: Trying rule: git_remote_seturl_add; took: 0:00:00.000021\nDEBUG: Trying rule: git_rm_local_modifications; took: 0:00:00.000032\nDEBUG: Trying rule: git_rm_recursive; took: 0:00:00.000021\nDEBUG: Trying rule: git_rm_staged; took: 0:00:00.000020\nDEBUG: Trying rule: git_stash; took: 0:00:00.000021\nDEBUG: Trying rule: git_tag_force; took: 0:00:00.000021\nDEBUG: Trying rule: git_two_dashes; took: 0:00:00.000020\nDEBUG: Trying rule: go_run; took: 0:00:00.000029\nDEBUG: Trying rule: gradle_no_task; took: 0:00:00.000025\nDEBUG: Trying rule: gradle_wrapper; took: 0:00:00.000023\nDEBUG: Trying rule: grep_arguments_order; took: 0:00:00.000031\nDEBUG: Trying rule: grep_recursive; took: 0:00:00.000023\nDEBUG: Trying rule: grunt_task_not_found; took: 0:00:00.000025\nDEBUG: Trying rule: gulp_not_task; took: 0:00:00.000024\nDEBUG: Trying rule: has_exists_script; took: 0:00:00.000037\nDEBUG: Trying rule: heroku_multiple_apps; took: 0:00:00.000027\nDEBUG: Trying rule: heroku_not_command; took: 0:00:00.000024\nDEBUG: Trying rule: hostscli; took: 0:00:00.000031\nDEBUG: Trying rule: ifconfig_device_not_found; took: 0:00:00.000037\nDEBUG: Trying rule: java; took: 0:00:00.000040\nDEBUG: Trying rule: javac; took: 0:00:00.000032\nDEBUG: Trying rule: lein_not_task; took: 0:00:00.000034\nDEBUG: Trying rule: ln_no_hard_link; took: 0:00:00.000011\nDEBUG: Trying rule: ln_s_order; took: 0:00:00.000009\nDEBUG: Trying rule: ls_all; took: 0:00:00.000308\nDEBUG: Trying rule: ls_lah; took: 0:00:00.000069\nDEBUG: Trying rule: man; took: 0:00:00.000088\nDEBUG: Trying rule: mercurial; took: 0:00:00.000153\nDEBUG: Trying rule: mkdir_p; took: 0:00:00.000061\nDEBUG: Trying rule: mvn_no_command; took: 0:00:00.000183\nDEBUG: Trying rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000154\nDEBUG: Trying rule: no_such_file; took: 0:00:00.007662\nDEBUG: Trying rule: npm_missing_script; took: 0:00:00.000104\nDEBUG: Trying rule: npm_run_script; took: 0:00:00.000049\nDEBUG: Trying rule: npm_wrong_command; took: 0:00:00.000050\nDEBUG: Trying rule: open; took: 0:00:00.000052\nDEBUG: Trying rule: php_s; took: 0:00:00.000062\nDEBUG: Trying rule: pip_unknown_command; took: 0:00:00.000320\nDEBUG: Trying rule: port_already_in_use; took: 0:00:00.011345\nDEBUG: Trying rule: prove_recursively; took: 0:00:00.000062\nDEBUG: Trying rule: python_command; took: 0:00:00.000012\nDEBUG: Trying rule: python_execute; took: 0:00:00.000029\nDEBUG: Trying rule: quotation_marks; took: 0:00:00.000006\nDEBUG: Trying rule: react_native_command_unrecognized; took: 0:00:00.000029\nDEBUG: Trying rule: remove_trailing_cedilla; took: 0:00:00.000007\nDEBUG: Trying rule: rm_dir; took: 0:00:00.000007\nDEBUG: Trying rule: scm_correction; took: 0:00:00.000299\nDEBUG: Trying rule: sed_unterminated_s; took: 0:00:00.000044\nDEBUG: Trying rule: sl_ls; took: 0:00:00.000016\nDEBUG: Trying rule: ssh_known_hosts; took: 0:00:00.000042\nDEBUG: Trying rule: sudo; took: 0:00:00.000027\nDEBUG: Trying rule: sudo_command_from_user_path; took: 0:00:00.000037\nDEBUG: Trying rule: switch_lang; took: 0:00:00.000047\nDEBUG: Trying rule: systemctl; took: 0:00:00.000039\nDEBUG: Trying rule: tmux; took: 0:00:00.000032\nDEBUG: Trying rule: touch; took: 0:00:00.000034\nDEBUG: Trying rule: tsuru_login; took: 0:00:00.000029\nDEBUG: Trying rule: tsuru_not_command; took: 0:00:00.000064\nDEBUG: Trying rule: unknown_command; took: 0:00:00.000596\nDEBUG: Trying rule: unsudo; took: 0:00:00.000013\nDEBUG: Trying rule: vagrant_up; took: 0:00:00.000075\nDEBUG: Trying rule: whois; took: 0:00:00.000056\nDEBUG: Trying rule: workon_doesnt_exists; took: 0:00:00.000050\nDEBUG: Trying rule: yarn_alias; took: 0:00:00.000040\nDEBUG: Trying rule: yarn_command_not_found; took: 0:00:00.000036\nDEBUG: Trying rule: yarn_command_replaced; took: 0:00:00.000032\nDEBUG: Trying rule: yarn_help; took: 0:00:00.000162\nDEBUG: Trying rule: man_no_space; took: 0:00:00.000010\nDEBUG: Trying rule: no_command; took: 0:00:00.146836\ngcut [enter/\u2191/\u2193/ctrl+c]\n\n\nAnd how about zsh --version?\n\nzsh 5.6.2 (x86_64-apple-darwin17.7.0). Thank you for the quick reaction! Let me know if there's anything else I can do to help.. @scorphus not sure if it makes sense to add this here, but `gir fetch` didn't get the `git fetch` correction (I got `gdir fetch`, `gvdir fetch` and `irb fetch`). Same machine / environment. Should I open a separate issue?. @scorphus I won't be able to test until Monday. Are there instructions somewhere for how to test your fork without messing with the current install?.\n",
    "diezcami": "Have you defined fuck as an alias in .bashrc?\n. ",
    "laike9m": "Sorry, I forgot. Now close this issue.\n. ",
    "thurstonsand": "I am on OSX, GNU bash, version 3.2.57(1)-release (x86_64-apple-darwin14)\n. v1.46 for thefuck\n. alias fuck='$(thefuck $(fc -ln -1))'\n. Yep that fixed things. Thanks for the help! Did my alias use to be what thefuck used, because I'm pretty sure I copied it into my bashrc file on install\n. oh sorry didn't realize that was on me\n. ",
    "MarisaKirisame": "https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1324641.html\nI think this is a debian specific issue and has nothing related to thefuck... Sorry\n. ",
    "roth1002": "I also update setuptools \n. I reinstall python 2.7 and use it compile setuptools and pip \nthen done.\nThanks :)\n. ",
    "Prankal": "It did trick for me: In case of upgrade\nyum reinstall -y python2-\nyum remove -y python2-paramiko\nyum install -y python2-paramiko*\nrerun setup. ",
    "bartonfriedland": "Thanks for that @SanketDG. When I type \"puthon\", since I use zsh, I get \nzsh: command not found: puthon\nbut I do not get \nNo command 'puthon' found, did you mean:\n Command 'python' from package 'python-minimal' (main)\n Command 'python' from package 'python3' (main)\nWhere do those additional messages come from?\n. Well, that's somewhat reassuring. I thought there was some package out there that gave all this feedback.\n. For OS X, this package is also available as https://github.com/Homebrew/homebrew-command-not-found. Thanks, @mlk!\n. ",
    "StarDuster": "I have the same problem on Mac OS X with zsh,I tried to install thefuck(version 1.46) from pip and brew,but both of them fuck themselves.Does the patch in 96fe1e7 included in version 1.46? @scorphus \n. ",
    "maxried": "Confirmed. Thanks :+1: \n. ",
    "circlecrystal": "This might be the issue report of the year.\n. ",
    "StevenZack": "Funny issue, lol. ",
    "bugaevc": "Works fine for me on the latest version (and the rule responsible for that is git_push.py).\n. Can we add @alias_support decorator that would resolve aliases before the command analysis and try to restore them back afterwards? /cc @nvbn\nEdit: ... So there already is _expand_aliases function, that's nice.\n. You should add alias fuck='something thefuck something' and then use just fuck, see README fot more details\n. Make sure your alias is set up exactly as this page recommends.\n. DEFAULT_PRIORITY = 1000\nFound here, used here\n. @chatainsim Are you sure you tried with sudo? Btw. have you tried sudo pip uninstall six and then sudo pip install six?\n. http://stackoverflow.com/questions/6883760/git-for-windows-bashrc-or-equivalent-config-files-for-git-bash-shell\nhttp://superuser.com/questions/602872/how-do-i-modify-my-git-bash-profile-in-windows\n. Then close the issue :)\n. The solution is to put the usual thing (eval \"$(thefuck-alias)\") into .bashrc file. The problem was to find that file on Windows, and the StackOverflow answers suggest that it's C:\\Users\\<your user name>\\.bashrc\n. Are you sure it's bash-compatible?\n. ",
    "elexx": "I had the same problem. It turns out I used githubs hub command on top of git. As github suggests I aliased git to hub alias git=hub. It seems this confuses thefuck.\n[edit] I fixed the problem by removing the alias git=hub. [/edit]\n. ",
    "eranimo": "I'm not aliasing git, and it's still not working. I'm on git version 2.3.2 btw\n. ",
    "jab": "Is there a workaround for this that doesn't require removing the git=hub alias?\n. Alternatively, changing rm to command rm or /bin/rm would bypass any aliases the user set up and run the rm command directly, which does not confirm removals by default. Do you have a preference?\n. I just changed it to /bin/rm for now since I think that's cleanest.\n. s/blinding/blindly. ",
    "symbolboxer": "I'm seeing this issue when I use the fish shell, but not bash. I think it's because the idiomatic way to do aliases in fish is to create a function (and if you use alias the shell will do this for you), and thefuck expects something tighter? I haven't had the chance to investigate it myself yet.\n. Fish 2.2.0\ngit 2.8.0\nhub 2.2.3\nAnd if I type functions git, I get:\nfunction git\n    command hub $argv\nend\n. Here's what I get trying your command:\n```\nfinch@Lindblum $ git push                                                                                                                 \nfatal: The current branch frobulate has no upstream branch.\nTo push the current branch and set the remote as upstream, use\ngit push --set-upstream origin frobulate\n\nfinch@Lindblum $ please                                                                                                                   \nNo fucks given                                                                                                                     \nfinch@Lindblum $ thefuck                                                                                                                  \nusage: thefuck [-h] [-v] [-a] [command [command ...]]                                                                                                                     \nfinch@Lindblum $ thefuck git push                                                                                                         \nNo fucks given\n```\nI also use an alias for thefuck that I set up with eval (thefuck --alias please | tr '\\n' ';') in my config.fish, and functions please returns:\nfunction please --description 'Correct your previous console command'\n    set -l fucked_up_command $history[1];  env TF_ALIAS=please PYTHONIOENCODING=utf-8 thefuck $fucked_up_command | read -l unfucked_command;  if [ \"$unfucked_command\" != \"\" ];    eval $unfucked_command;    history --delete $fucked_up_command;    history --merge ^ /dev/null;  end;\nend\n. Debug output, just in case:\n```\nDEBUG: Run with settings: {'alter_history': True,\n 'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'exclude_rules': [],\n 'history_limit': None,\n 'no_colors': False,\n 'priority': {},\n 'require_confirmation': True,\n 'rules': [],\n 'user_dir': PosixPath('/Users/finch/.thefuck'),\n 'wait_command': 3}\nDEBUG: Received stdout: begin; function please -d \"Correct your previous console command\";  set -l fucked_up_command $history[1];  env TF_ALIAS=please PYTHONIOENCODING=utf-8 thefuck $fucked_up_command | read -l unfucked_command;  if [ \"$unfucked_command\" != \"\" ];    eval $unfucked_command;    history --delete $fucked_up_command;    history --merge ^ /dev/null;  end;end; \n ;end <&3 3<&-\nDEBUG: Received stderr: fish: Could not return shell to foreground\ntcsetpgrp: Inappropriate ioctl for device\nfish: Could not return shell to foreground\ntcsetpgrp: Inappropriate ioctl for device\nCould not send job 3 ('echo \"begin; $argv \"\\n\" ;end <&3 3<&-\" | source 3<&0') to foreground\ntcsetpgrp: Inappropriate ioctl for device\nCould not send job 3 ('echo \"begin; $argv \"\\n\" ;end <&3 3<&-\" | source 3<&0') to foreground\ntcsetpgrp: Inappropriate ioctl for device\nfish: Could not return shell to foreground\ntcsetpgrp: Inappropriate ioctl for device\nfish: Could not return shell to foreground\ntcsetpgrp: Inappropriate ioctl for device\nfish: Could not return shell to foreground\ntcsetpgrp: Inappropriate ioctl for device\n13:07:27.199331 git.c:351               trace: built-in: git 'push'\nfatal: The current branch frobulate has no upstream branch.\nTo push the current branch and set the remote as upstream, use\ngit push --set-upstream origin frobulate\n\nDEBUG: Call: fish -ic \"git push\"; with env: {'PYTHONIOENCODING': 'utf-8', 'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'TERM_PROGRAM_VERSION': '361.1', '__fish_bin_dir': '/usr/local/Cellar/fish/2.2.0/bin', 'LOGNAME': 'finch', 'USER': 'finch', 'HOME': '/Users/finch', 'PATH': '/usr/local/opt/coreutils/libexec/gnubin:/Users/finch/bin:/usr/local/bin:/usr/local/opt/coreutils/libexec/gnubin:/Users/finch/.cabal/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin', 'TERM_PROGRAM': 'Apple_Terminal', 'LANG': 'C', 'THEFUCK_DEBUG': 'true', 'TERM': 'xterm-256color', 'SHELL': '/bin/bash', 'VERSIONER_PYTHON_VERSION': '2.7', 'SHLVL': '2', 'SKURT_DEV_NAME': 'Chris', 'XPC_FLAGS': '0x0', 'MANPATH': '/usr/local/opt/coreutils/libexec/gnuman:/usr/local/opt/coreutils/libexec/gnubin:/Users/finch/bin:/usr/local/bin:/usr/local/opt/coreutils/libexec/gnubin:/Users/finch/.cabal/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin', 'TERM_SESSION_ID': 'FB5E515C-143B-4466-8064-B8E3A36BB376', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.yrKR6RIeGu/Listeners', 'TF_ALIAS': 'please', 'OMF_PATH': '/Users/finch/.local/share/omf', 'PYTHONPATH': '/usr/local/Cellar/thefuck/3.7/libexec/lib/python2.7/site-packages:/usr/local/Cellar/thefuck/3.7/libexec/vendor/lib/python2.7/site-packages', 'XPC_SERVICE_NAME': '0', '__fish_sysconfdir': '/usr/local/Cellar/fish/2.2.0/etc/fish', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.AAfw9Kct4J/Render', 'LC_ALL': 'C', 'OMF_CONFIG': '/Users/finch/.config/omf', 'TMPDIR': '/var/folders/7w/6kklsr652bgfhyv70swfgq1r0000gn/T/', '__fish_datadir': '/usr/local/Cellar/fish/2.2.0/share/fish', 'GIT_TRACE': '1', 'CLICOLOR': '1', '__CF_USER_TEXT_ENCODING': '0x1F5:0x0:0x0', 'PWD': '/Users/finch/workspace/skurt-ims', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:.tar=01;31:.tgz=01;31:.arc=01;31:.arj=01;31:.taz=01;31:.lha=01;31:.lz4=01;31:.lzh=01;31:.lzma=01;31:.tlz=01;31:.txz=01;31:.tzo=01;31:.t7z=01;31:.zip=01;31:.z=01;31:.Z=01;31:.dz=01;31:.gz=01;31:.lrz=01;31:.lz=01;31:.lzo=01;31:.xz=01;31:.bz2=01;31:.bz=01;31:.tbz=01;31:.tbz2=01;31:.tz=01;31:.deb=01;31:.rpm=01;31:.jar=01;31:.war=01;31:.ear=01;31:.sar=01;31:.rar=01;31:.alz=01;31:.ace=01;31:.zoo=01;31:.cpio=01;31:.7z=01;31:.rz=01;31:.cab=01;31:.jpg=01;35:.jpeg=01;35:.gif=01;35:.bmp=01;35:.pbm=01;35:.pgm=01;35:.ppm=01;35:.tga=01;35:.xbm=01;35:.xpm=01;35:.tif=01;35:.tiff=01;35:.png=01;35:.svg=01;35:.svgz=01;35:.mng=01;35:.pcx=01;35:.mov=01;35:.mpg=01;35:.mpeg=01;35:.m2v=01;35:.mkv=01;35:.webm=01;35:.ogm=01;35:.mp4=01;35:.m4v=01;35:.mp4v=01;35:.vob=01;35:.qt=01;35:.nuv=01;35:.wmv=01;35:.asf=01;35:.rm=01;35:.rmvb=01;35:.flc=01;35:.avi=01;35:.fli=01;35:.flv=01;35:.gl=01;35:.dl=01;35:.xcf=01;35:.xwd=01;35:.yuv=01;35:.cgm=01;35:.emf=01;35:.ogv=01;35:.ogx=01;35:.aac=00;36:.au=00;36:.flac=00;36:.m4a=00;36:.mid=00;36:.midi=00;36:.mka=00;36:.mp3=00;36:.mpc=00;36:.ogg=00;36:.ra=00;36:.wav=00;36:.oga=00;36:.opus=00;36:.spx=00;36:.xspf=00;36:', '__fish_help_dir': '/usr/local/Cellar/fish/2.2.0/share/doc/fish'}; took: 0:00:01.208558\nDEBUG: Importing rule: apt_get; took: 0:00:00.002518\nDEBUG: Importing rule: apt_get_search; took: 0:00:00.001636\nDEBUG: Importing rule: apt_invalid_operation; took: 0:00:00.002185\nDEBUG: Importing rule: brew_install; took: 0:00:00.001605\nDEBUG: Importing rule: brew_unknown_command; took: 0:00:00.000594\nDEBUG: Importing rule: brew_upgrade; took: 0:00:00.000271\nDEBUG: Importing rule: cargo; took: 0:00:00.000249\nDEBUG: Importing rule: cargo_no_command; took: 0:00:00.000553\nDEBUG: Importing rule: cd_correction; took: 0:00:00.004443\nDEBUG: Importing rule: cd_mkdir; took: 0:00:00.001181\nDEBUG: Importing rule: cd_parent; took: 0:00:00.001221\nDEBUG: Importing rule: composer_not_command; took: 0:00:00.000642\nDEBUG: Importing rule: cp_omitting_directory; took: 0:00:00.001762\nDEBUG: Importing rule: cpp11; took: 0:00:00.001591\nDEBUG: Importing rule: dirty_untar; took: 0:00:00.003960\nDEBUG: Importing rule: dirty_unzip; took: 0:00:00.001625\nDEBUG: Importing rule: django_south_ghost; took: 0:00:00.001397\nDEBUG: Importing rule: django_south_merge; took: 0:00:00.000411\nDEBUG: Importing rule: docker_not_command; took: 0:00:00.001032\nDEBUG: Importing rule: dry; took: 0:00:00.001242\nDEBUG: Importing rule: fix_alt_space; took: 0:00:00.001709\nDEBUG: Importing rule: fix_file; took: 0:00:00.003646\nDEBUG: Importing rule: git_add; took: 0:00:00.003721\nDEBUG: Importing rule: git_branch_delete; took: 0:00:00.001630\nDEBUG: Importing rule: git_branch_list; took: 0:00:00.002204\nDEBUG: Importing rule: git_checkout; took: 0:00:00.003524\nDEBUG: Importing rule: git_diff_staged; took: 0:00:00.002011\nDEBUG: Importing rule: git_fix_stash; took: 0:00:00.001776\nDEBUG: Importing rule: git_help_aliased; took: 0:00:00.003067\nDEBUG: Importing rule: git_not_command; took: 0:00:00.001620\nDEBUG: Importing rule: git_pull; took: 0:00:00.001933\nDEBUG: Importing rule: git_pull_clone; took: 0:00:00.003361\nDEBUG: Importing rule: git_push; took: 0:00:00.004772\nDEBUG: Importing rule: git_push_force; took: 0:00:00.005069\nDEBUG: Importing rule: git_push_pull; took: 0:00:00.003060\nDEBUG: Importing rule: git_remote_seturl_add; took: 0:00:00.002101\nDEBUG: Importing rule: git_rm_recursive; took: 0:00:00.003262\nDEBUG: Importing rule: git_stash; took: 0:00:00.001473\nDEBUG: Importing rule: git_two_dashes; took: 0:00:00.001692\nDEBUG: Importing rule: go_run; took: 0:00:00.001648\nDEBUG: Importing rule: grep_arguments_order; took: 0:00:00.001375\nDEBUG: Importing rule: grep_recursive; took: 0:00:00.001650\nDEBUG: Importing rule: gulp_not_task; took: 0:00:00.001617\nDEBUG: Importing rule: has_exists_script; took: 0:00:00.001436\nDEBUG: Importing rule: heroku_not_command; took: 0:00:00.000734\nDEBUG: Importing rule: history; took: 0:00:00.000530\nDEBUG: Importing rule: java; took: 0:00:00.000654\nDEBUG: Importing rule: javac; took: 0:00:00.001853\nDEBUG: Importing rule: lein_not_task; took: 0:00:00.003483\nDEBUG: Importing rule: ln_no_hard_link; took: 0:00:00.001908\nDEBUG: Importing rule: ls_lah; took: 0:00:00.001521\nDEBUG: Importing rule: man; took: 0:00:00.001894\nDEBUG: Importing rule: man_no_space; took: 0:00:00.001354\nDEBUG: Importing rule: mercurial; took: 0:00:00.001640\nDEBUG: Importing rule: mkdir_p; took: 0:00:00.001741\nDEBUG: Importing rule: mvn_no_command; took: 0:00:00.007070\nDEBUG: Importing rule: mvn_unknown_lifecycle_phase; took: 0:00:00.002132\nDEBUG: Importing rule: no_command; took: 0:00:00.005721\nDEBUG: Importing rule: no_such_file; took: 0:00:00.004107\nDEBUG: Importing rule: npm_wrong_command; took: 0:00:00.003884\nDEBUG: Importing rule: open; took: 0:00:00.005446\nDEBUG: Importing rule: pacman; took: 0:00:00.002344\nDEBUG: Importing rule: pacman_not_found; took: 0:00:00.001294\nDEBUG: Importing rule: pip_unknown_command; took: 0:00:00.002064\nDEBUG: Importing rule: python_command; took: 0:00:00.005520\nDEBUG: Importing rule: python_execute; took: 0:00:00.002087\nDEBUG: Importing rule: quotation_marks; took: 0:00:00.001480\nDEBUG: Importing rule: rm_dir; took: 0:00:00.003006\nDEBUG: Importing rule: rm_root; took: 0:00:00.002977\nDEBUG: Importing rule: sed_unterminated_s; took: 0:00:00.002741\nDEBUG: Importing rule: sl_ls; took: 0:00:00.000873\nDEBUG: Importing rule: ssh_known_hosts; took: 0:00:00.001553\nDEBUG: Importing rule: sudo; took: 0:00:00.000943\nDEBUG: Importing rule: switch_lang; took: 0:00:00.000545\nDEBUG: Importing rule: systemctl; took: 0:00:00.001479\nDEBUG: Importing rule: test.py; took: 0:00:00.005961\nDEBUG: Importing rule: tmux; took: 0:00:00.007313\nDEBUG: Importing rule: touch; took: 0:00:00.000592\nDEBUG: Importing rule: tsuru_login; took: 0:00:00.001308\nDEBUG: Importing rule: tsuru_not_command; took: 0:00:00.001273\nDEBUG: Importing rule: unknown_command; took: 0:00:00.001233\nDEBUG: Importing rule: vagrant_up; took: 0:00:00.000462\nDEBUG: Importing rule: whois; took: 0:00:00.002292\nDEBUG: Trying rule: dry; took: 0:00:00.000150\nDEBUG: Trying rule: test.py; took: 0:00:00.000015\nDEBUG: Trying rule: brew_install; took: 0:00:00.000014\nDEBUG: Trying rule: brew_unknown_command; took: 0:00:00.000010\nDEBUG: Trying rule: brew_upgrade; took: 0:00:00.000013\nDEBUG: Trying rule: cargo; took: 0:00:00.000010\nDEBUG: Trying rule: cargo_no_command; took: 0:00:00.000531\nDEBUG: Trying rule: cd_correction; took: 0:00:00.002157\nDEBUG: Trying rule: cd_mkdir; took: 0:00:00.000335\nDEBUG: Trying rule: cd_parent; took: 0:00:00.000026\nDEBUG: Trying rule: composer_not_command; took: 0:00:00.000268\nDEBUG: Trying rule: cp_omitting_directory; took: 0:00:00.000229\nDEBUG: Trying rule: cpp11; took: 0:00:00.000192\nDEBUG: Trying rule: dirty_untar; took: 0:00:00.000200\nDEBUG: Trying rule: dirty_unzip; took: 0:00:00.000211\nDEBUG: Trying rule: django_south_ghost; took: 0:00:00.000020\nDEBUG: Trying rule: django_south_merge; took: 0:00:00.000013\nDEBUG: Trying rule: docker_not_command; took: 0:00:00.000206\nDEBUG: Trying rule: fix_alt_space; took: 0:00:00.000027\nDEBUG: Trying rule: fix_file; took: 0:00:00.000037\nDEBUG: Trying rule: git_add; took: 0:00:00.000197\nDEBUG: Trying rule: git_branch_delete; took: 0:00:00.000210\nDEBUG: Trying rule: git_branch_list; took: 0:00:00.000195\nDEBUG: Trying rule: git_checkout; took: 0:00:00.000214\nDEBUG: Trying rule: git_diff_staged; took: 0:00:00.000293\nDEBUG: Trying rule: git_fix_stash; took: 0:00:00.000265\nDEBUG: Trying rule: git_help_aliased; took: 0:00:00.000172\nDEBUG: Trying rule: git_not_command; took: 0:00:00.000165\nDEBUG: Trying rule: git_pull; took: 0:00:00.000690\nDEBUG: Trying rule: git_pull_clone; took: 0:00:00.000528\nDEBUG: Trying rule: git_push; took: 0:00:00.000383\nDEBUG: Trying rule: git_push_pull; took: 0:00:00.000482\nDEBUG: Trying rule: git_remote_seturl_add; took: 0:00:00.000232\nDEBUG: Trying rule: git_rm_recursive; took: 0:00:00.000308\nDEBUG: Trying rule: git_stash; took: 0:00:00.000548\nDEBUG: Trying rule: git_two_dashes; took: 0:00:00.000659\nDEBUG: Trying rule: go_run; took: 0:00:00.000554\nDEBUG: Trying rule: grep_arguments_order; took: 0:00:00.000328\nDEBUG: Trying rule: grep_recursive; took: 0:00:00.000254\nDEBUG: Trying rule: gulp_not_task; took: 0:00:00.000279\nDEBUG: Trying rule: has_exists_script; took: 0:00:00.000069\nDEBUG: Trying rule: heroku_not_command; took: 0:00:00.000329\nDEBUG: Trying rule: java; took: 0:00:00.000371\nDEBUG: Trying rule: javac; took: 0:00:00.000264\nDEBUG: Trying rule: lein_not_task; took: 0:00:00.000222\nDEBUG: Trying rule: ln_no_hard_link; took: 0:00:00.000035\nDEBUG: Trying rule: ls_lah; took: 0:00:00.000349\nDEBUG: Trying rule: man; took: 0:00:00.000602\nDEBUG: Trying rule: mercurial; took: 0:00:00.000347\nDEBUG: Trying rule: mkdir_p; took: 0:00:00.000033\nDEBUG: Trying rule: mvn_no_command; took: 0:00:00.000504\nDEBUG: Trying rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000553\nDEBUG: Trying rule: no_such_file; took: 0:00:00.001596\nDEBUG: Trying rule: npm_wrong_command; took: 0:00:00.000731\nDEBUG: Trying rule: open; took: 0:00:00.000772\nDEBUG: Trying rule: pip_unknown_command; took: 0:00:00.001712\nDEBUG: Trying rule: python_command; took: 0:00:00.000158\nDEBUG: Trying rule: python_execute; took: 0:00:00.000876\nDEBUG: Trying rule: quotation_marks; took: 0:00:00.000054\nDEBUG: Trying rule: rm_dir; took: 0:00:00.000034\nDEBUG: Trying rule: sed_unterminated_s; took: 0:00:00.000368\nDEBUG: Trying rule: sl_ls; took: 0:00:00.000089\nDEBUG: Trying rule: ssh_known_hosts; took: 0:00:00.000744\nDEBUG: Trying rule: sudo; took: 0:00:00.000302\nDEBUG: Trying rule: switch_lang; took: 0:00:00.000056\nDEBUG: Trying rule: systemctl; took: 0:00:00.000400\nDEBUG: Trying rule: tmux; took: 0:00:00.000362\nDEBUG: Trying rule: touch; took: 0:00:00.000511\nDEBUG: Trying rule: tsuru_login; took: 0:00:00.000658\nDEBUG: Trying rule: tsuru_not_command; took: 0:00:00.000473\nDEBUG: Trying rule: unknown_command; took: 0:00:00.002636\nDEBUG: Trying rule: vagrant_up; took: 0:00:00.000375\nDEBUG: Trying rule: whois; took: 0:00:00.000274\nDEBUG: Trying rule: man_no_space; took: 0:00:00.000025\nDEBUG: Trying rule: no_command; took: 0:00:00.000026\nDEBUG: Trying rule: history; took: 0:00:00.095297\nNo fucks given\nDEBUG: Total took: 0:00:01.544653\n```\n. That did the trick. Thanks! After the next release, I'll pare that command down to just git.\n. Does this mean that if I alias something else that thefuck operates on that I should add it to that variable, too?\n. Everything's fixed for me, but I'm actually not the one that opened the issue... \ud83d\ude05\n. ",
    "qyoz": "+1\n$ fuck\n Traceback (most recent call last):\n  File \"C:\\Python27\\lib\\runpy.py\", line 162, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"C:\\Python27\\lib\\runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"c:\\Python27\\Scripts\\thefuck.exe\\__main__.py\", line 9, in <module>\n  File \"C:\\Python27\\lib\\site-packages\\thefuck\\main.py\", line 77, in main\n    fix_command()\n  File \"C:\\Python27\\lib\\site-packages\\thefuck\\main.py\", line 28, in fix_command\n    selected_command = select_command(corrected_commands)\n  File \"C:\\Python27\\lib\\site-packages\\thefuck\\ui.py\", line 106, in select_command\n    logs.confirm_text(selector.value)\n  File \"C:\\Python27\\lib\\site-packages\\thefuck\\logs.py\", line 61, in confirm_text\n    blue=color(colorama.Fore.BLUE)))\n  File \"C:\\Python27\\lib\\encodings\\cp862.py\", line 12, in encode\n    return codecs.charmap_encode(input,errors,encoding_map)\nUnicodeEncodeError: 'charmap' codec can't encode character u'\\u2191' in position\n 45: character maps to <undefined>\n. ",
    "legendtang": "I've also encounter this issue. The first time running this command will freeze forever.\nP.S. Using latest Git for Windows 2.8.3\n```\n$ fuck\nTraceback (most recent call last):\n  File \"d:\\python27\\lib\\runpy.py\", line 162, in _run_module_as_main\n    \"main\", fname, loader, pkg_name)\n  File \"d:\\python27\\lib\\runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"D:\\Python27\\Scripts\\thefuck.exe__main__.py\", line 9, in \n  File \"d:\\python27\\lib\\site-packages\\thefuck\\main.py\", line 80, in main\n    fix_command()\n  File \"d:\\python27\\lib\\site-packages\\thefuck\\main.py\", line 26, in fix_command\n    command = types.Command.from_raw_script(sys.argv[1:])\n  File \"d:\\python27\\lib\\site-packages\\thefuck\\types.py\", line 120, in from_raw_script\n    stderr = result.stderr.read().decode('utf-8')\n  File \"d:\\python27\\lib\\encodings\\utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xb2 in position 9: invalid start byte\n``\n. For someone who also encountered this issue, it may probably be that powershell do not allow user to execute scripts on boot by default. You should change the security policy by inputset-ExecutionPolicy RemoteSigned` and re-open your powershell.\n. ",
    "aendinalt": "The same issue\nTraceback (most recent call last):\n  File \"c:\\python27\\lib\\runpy.py\", line 162, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"c:\\python27\\lib\\runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"c:\\Python27\\Scripts\\thefuck.exe\\__main__.py\", line 9, in <module>\n  File \"c:\\python27\\lib\\site-packages\\thefuck\\main.py\", line 82, in main\n    fix_command()\n  File \"c:\\python27\\lib\\site-packages\\thefuck\\main.py\", line 26, in fix_command\n    command = types.Command.from_raw_script(sys.argv[1:])\n  File \"c:\\python27\\lib\\site-packages\\thefuck\\types.py\", line 120, in from_raw_s\ncript\n    stderr = result.stderr.read().decode('utf-8')\n  File \"c:\\python27\\lib\\encodings\\utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xad in position 6: invalid s\ntart byte\n. ",
    "nitriques": "Yup same issue for me\n$ fuck\nTraceback (most recent call last):\n  File \"c:\\python27\\lib\\runpy.py\", line 162, in _run_module_as_main\n    \"main\", fname, loader, pkg_name)\n  File \"c:\\python27\\lib\\runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"C:\\Python27\\Scripts\\thefuck.exe__main__.py\", line 9, in \n  File \"c:\\python27\\lib\\site-packages\\thefuck\\main.py\", line 51, in main\n    fix_command(known_args)\n  File \"c:\\python27\\lib\\site-packages\\thefuck\\main.py\", line 27, in fix_command\n    command = types.Command.from_raw_script(raw_command)\n  File \"c:\\python27\\lib\\site-packages\\thefuck\\types.py\", line 125, in from_raw_script\n    stderr = result.stderr.read().decode('utf-8')\n  File \"c:\\python27\\lib\\encodings\\utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0x82 in position 84: invalid start byte\n. It stills happens on Windows, The Fuck 3.18 using Python 2.7.3. ",
    "Tomotoes": "The same issue\n\n. ",
    "tjhorner": "That's odd... when I tested the \"need to be root\" rule locally it didn't\npass. Must have been a typo when I tested it. (I didn't use the actual\ntest, I used yum without sudo)\nOn Tue, Jun 16, 2015, 3:47 AM Vladimir Iakovlev notifications@github.com\nwrote:\n\nThanks!\nAlso, sudo patterns are case insensitive.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/pull/257#issuecomment-112383391.\n. I do have an alias as fuck, that doesn't work either.\n. \n",
    "Harry-Chen": "Thanks for the reply.\n. ",
    "zakiaziz": "sudo pip install thefuck\nthen vi ~/.bashrc and added this line: alias fuck='eval $(thefuck $(fc -ln -1)); history -r'\n. My OS info: centos-release-6-6.el6.centos.12.2.x86_64\npip install --upgrade colorama did not solve the issue for me\n. Thanks @nvbn \n. ",
    "drblue": "Just a note, on Ubuntu 14.04.4 LTS the installation succeeded but trying to run thefuck resulted in error about psutil missing. Only got it working after I ran sudo apt-get install python-psutil as @polybuildr suggested.\nError-msg:\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 7, in <module>\n    from thefuck.main import main\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/main.py\", line 10, in <module>\n    from . import logs, types\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/types.py\", line 6, in <module>\n    from psutil import Process, TimeoutExpired\nImportError: No module named psutil\n. ",
    "prasad-high-5": "I have installed psutils and trying to import psutil on SLES 12 platform, but still its shouting with no modules. Any suggestions please.\nSLES_12:~ # rpm -qa | grep psutils\npsutils-p17-1023.1.2.x86_64\nSLES_12:~ #\nSLES_12:~ # python -c 'import psutil'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nImportError: No module named psutil\nSLES_12:~ #. ",
    "mathifonseca": "Yes, I've seen that lines, but I think they aren't working for custom rules.\nThe default rule ls_lah.py doesn't have a priority defined, so it should be 1000, right?\nMy custom rule has this: priority = 10\nThat should mean that my rule has a higher priority, but that's not what's happening. \nHowever, if I change the priorities in the settings.py file, it works correctly:\npriority = {'grails': 100, 'ls_lah': 9999}\n. This is my match function, with priority = 10:\n``` python\ndef match(command, settings):\n    return re.search('command not found: [grails]', command.stderr.lower())\n...\npriority = 10\n```\nBut it conflicts with the ls_lah match:\npython\ndef match(command, settings):\n    return 'ls' in command.script and not ('ls -' in command.script)\nIt only takes mine when I set the priorities in settings.py\n. Mhm... it seems the bug has been fixed magically, because I reinstalled thefuck and now it works as expected.\nHere are some tests:\n\u279c  garils run-app\nzsh: command not found: garils\n\u279c  fuck\ngrails run-app [enter/ctrl+c]\n\u279c  gails run-app\nzsh: command not found: garils\n\u279c  fuck\ngrails run-app [enter/ctrl+c]\n\u279c  gralis run-app\nzsh: command not found: gralis\n\u279c  fuck\ngrails run-app [enter/ctrl+c]\n. ",
    "chatainsim": "Thanks @SanketDG but six seems to be already installed : \nRequirement already satisfied (use --upgrade to upgrade): six in /usr/lib/python2.7/dist-packages\nAnd when trying to upgrade : \nCollecting six\n  Downloading six-1.9.0-py2.py3-none-any.whl\nInstalling collected packages: six\n  Found existing installation: six 1.1.0\n    DEPRECATION: Uninstalling a distutils installed project (six) has been deprecated and will be removed in a future version. This is due to the fact that uninstalling a distutils project will only partially uninstall the project.\n    Can't uninstall 'six'. No files were found to uninstall.\nSuccessfully installed six-1.1.0\nBut I still have the issue : \nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 11, in <module>\n    sys.exit(main())\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/main.py\", line 129, in main\n    command = get_command(settings, sys.argv)\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/main.py\", line 73, in get_command\n    if six.PY2:\nAttributeError: 'module' object has no attribute 'PY2'\n. I've already upgrade pip to the latest version : \npip 7.1.0 from /usr/local/lib/python2.7/dist-packages (python 2.7)\n. Hi @scorphus \nHere are the infos:\nI'm using Ubuntu 12.04.5 LTS - 3.13.0-55-generic - 64 bits\n$ which python\n/usr/bin/python\n$ which thefuck\n/usr/local/bin/thefuck\n$ pip freeze | grep six\nsix==1.1.0\n$ python -c 'import six; print(six); print(six.__version__); print(six.PY2)'\n<module 'six' from '/usr/lib/python2.7/dist-packages/six.pyc'>\n1.1.0\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nAttributeError: 'module' object has no attribute 'PY2'\n. I've already tried this, I got:\nCollecting six\n  Downloading six-1.9.0-py2.py3-none-any.whl\nInstalling collected packages: six\n  Found existing installation: six 1.1.0\n    DEPRECATION: Uninstalling a distutils installed project (six) has been deprecated and will be removed in a future version. This is due to the fact that uninstalling a distutils project will only partially uninstall the project.\n    Can't uninstall 'six'. No files were found to uninstall.\nSuccessfully installed six-1.1.0\n. @bugaevc Yes, i'm using sudo.\nWhen I try uninstall six:\nsimon@ubuntu-server:~$ sudo pip uninstall six\n[sudo] password for simon:\nThe directory '/home/simon/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\nThe directory '/home/simon/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\nDEPRECATION: Uninstalling a distutils installed project (six) has been deprecated and will be removed in a future version. This is due to the fact that uninstalling a distutils project will only partially uninstall the project.\nCan't uninstall 'six'. No files were found to uninstall.\n. Thanks @SanketDG I'll try this.\nBut how can I use the virtualenv ?\nWhat's the difference ?\n. Ok, so just an \nsudo apt-get remove python-six\nand now it's working !\nsudo pip install six\nTell me that six is already installed.\n. Nice, I'm now able to install six.\n$ sudo pip uninstall six\nUninstalling six-1.9.0:\n  /usr/local/lib/python2.7/dist-packages/six-1.9.0.dist-info/DESCRIPTION.rst\n  /usr/local/lib/python2.7/dist-packages/six-1.9.0.dist-info/METADATA\n  /usr/local/lib/python2.7/dist-packages/six-1.9.0.dist-info/RECORD\n  /usr/local/lib/python2.7/dist-packages/six-1.9.0.dist-info/WHEEL\n  /usr/local/lib/python2.7/dist-packages/six-1.9.0.dist-info/metadata.json\n  /usr/local/lib/python2.7/dist-packages/six-1.9.0.dist-info/top_level.txt\n  /usr/local/lib/python2.7/dist-packages/six.py\n  /usr/local/lib/python2.7/dist-packages/six.pyc\nProceed (y/n)? y\n  Successfully uninstalled six-1.9.0\n$ sudo pip install six\nCollecting six\n  Downloading six-1.9.0-py2.py3-none-any.whl\nInstalling collected packages: six\nSuccessfully installed six-1.9.0\n$ python -c 'import six; print(six); print(six.__version__); print(six.PY2)'\n<module 'six' from '/usr/local/lib/python2.7/dist-packages/six.pyc'>\n1.9.0\nTrue\n. I've tried thefuck two times and only work once:\n$ pip install --upgrade youtube-dl\nCollecting youtube-dl\n  Downloading youtube_dl-2015.07.07-py2.py3-none-any.whl (977kB)\n    100% |\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2| 978kB 200kB/s\nInstalling collected packages: youtube-dl\n  Found existing installation: youtube-dl 2015.5.20\n    Uninstalling youtube-dl-2015.5.20:\nException:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/pip/basecommand.py\", line 223, in main\n    status = self.run(options, args)\n  File \"/usr/local/lib/python2.7/dist-packages/pip/commands/install.py\", line 299, in run\n    root=options.root_path,\n  File \"/usr/local/lib/python2.7/dist-packages/pip/req/req_set.py\", line 640, in install\n    requirement.uninstall(auto_confirm=True)\n  File \"/usr/local/lib/python2.7/dist-packages/pip/req/req_install.py\", line 726, in uninstall\n    paths_to_remove.remove(auto_confirm)\n  File \"/usr/local/lib/python2.7/dist-packages/pip/req/req_uninstall.py\", line 125, in remove\n    renames(path, new_path)\n  File \"/usr/local/lib/python2.7/dist-packages/pip/utils/__init__.py\", line 314, in renames\n    shutil.move(old, new)\n  File \"/usr/lib/python2.7/shutil.py\", line 300, in move\n    os.unlink(src)\nOSError: [Errno 13] Permission denied: '/usr/local/bin/youtube-dl'\n$ fuck\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 11, in <module>\n    sys.exit(main())\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/main.py\", line 129, in main\n    command = get_command(settings, sys.argv)\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/main.py\", line 84, in get_command\n    if wait_output(settings, result):\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/main.py\", line 65, in wait_output\n    for child in proc.get_children(recursive=True):\nAttributeError: 'Process' object has no attribute 'get_children'\n$ apt-get update\nE: Impossible d'ouvrir le fichier verrou /var/lib/apt/lists/lock - open (13: Permission non accord\u00c3\u00a9e)\nE: Impossible de verrouiller le r\u00c3\u00a9pertoire /var/lib/apt/lists/\nE: Impossible d'ouvrir le fichier verrou /var/lib/dpkg/lock - open (13: Permission non accord\u00c3\u00a9e)\nE: Impossible de verrouiller le r\u00c3\u00a9pertoire d'administration (/var/lib/dpkg/). Avez-vous les privil\u00c3\u00a8ges du superutilisateur\u00c2\u00a0?\n$ fuck\nsudo apt-get update [enter/ctrl+c]\nAtteint http://ppa.launchpad.net precise Release.gpg\nAtteint http://ppa.launchpad.net precise Release.gpg\nAtteint http://ppa.launchpad.net precise Release.gpg\nAtteint http://ppa.launchpad.net precise Release.gpg\nAtteint http://ppa.launchpad.net precise Release.gpg\nAtteint http://ppa.launchpad.net precise Release.gpg\nAtteint http://ppa.launchpad.net precise Release\nAtteint http://ppa.launchpad.net precise Release\n[...]\n. ",
    "willin": "2333\n. ",
    "JixunMoe": "2333333333333333333333333\n. ",
    "Sticksman": "fix #268 #273 \n. ",
    "mkreder": "you're welcome!\n. ",
    "jdoerrie": "Not an issue:\n``` bash\n$ brew info thefuck\nthefuck: stable 1.48 (bottled), HEAD\nProgramatically correct mistyped console commands\nhttps://github.com/nvbn/thefuck\n/usr/local/Cellar/thefuck/1.48 (186 files, 1.2M) *\n  Poured from bottle\nFrom: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/thefuck.rb\n==> Caveats\nAdd the following to your .bash_profile or .zshrc:\n  bash: alias fuck='eval $(thefuck $(fc -ln -1)); history -r'\n  zsh: alias fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'\nOther shells: https://github.com/nvbn/thefuck/wiki/Shell-aliases\n```\nMaybe you need to run brew update?\n. Yes, you should add \nbash\nalias fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'\nto your .zshrc in order to be able to use fuck to correct your commands.\n. Yes, this issue can be closed, it wasn't an issue to begin with. Homebrew is simply lacking behind:\nhttps://github.com/Homebrew/homebrew/blob/master/Library/Formula/thefuck.rb\n. ",
    "luiscobits": "I was doing everything to install version 1.47 but nothing worked, has now worked well installation, thanks\nPS: For that reason it is necessary to add that line in my .zshrc?\n. Yes, although it seems that brew manually update it, because it tells me that 1.48 is the latest version\n. ",
    "AbdoulNdiaye": "I tried \nsh\nsudo pip install pathlib\nand it works for me :)\n. ",
    "jonathan-villemot": ":+1:  Worked for me too.\n. ",
    "paulagent": "Worked for me too. thx\n. ",
    "alexmwu": "Oh well, that makes a lot of sense. It works now, thanks a lot!\n. ",
    "Aaron3154518": "What is \"pip\" in sudo pip install pathlib?. ",
    "fullyro": "\u00ab\u00a0pip\u00a0\u00bb is a managing dependencies for python. ",
    "askhat": "Even if thefuck won't learn the right one, it's quite easier to insert own command, pressing i key for an instance.\n. ",
    "dzek69": "Sometimes I don't want to make thefuck learn anything nor I want to edit anything just for single use.\nIt would be awesome for thefuck to support editing suggested command, like I press Tab and I have standard console input prefilled with suggestion I can edit.. ",
    "erykpiast": "anyone could help with this? it makes me sad :(\n(I experience the problem on Windows 10, CYGWIN_NT-10.0 DESKTOP-76DLUQN 2.2.1(0.289/5/3) 2015-08-20 11:42 x86_64 Cygwin)\n. ",
    "RedX2501": "@LoLei How did you manage to install psutil under cygwin?\n. ",
    "RichardBradley": "See https://github.com/SnoringFrog/thefuck-cygwin. 1. How on earth could a bash helper like thefuck recover your hard drive when you've just overwritten everything with the wrong data? Did you have a specific implementation in mind?\n\nWhy are you running dd \"frequently\" without checking the arguments carefully? ;-). \n",
    "Tailszefox": "Still happening in 2.4:\n[~]$ mv T\u00e9st                                                                                                                                                                                                                                       \nmv: missing destination file operand after \u2018T\u00e9st\u2019\nTry 'mv --help' for more information.\n[~]$ fuck                                                                                                                                                                                                                                          \nDEBUG: Run with settings: {'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'no_colors': False,\n 'priority': {},\n 'require_confirmation': True,\n 'rules': [],\n 'wait_command': 15}\nDEBUG: Total took: 0:00:00.204458\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 11, in <module>\n    sys.exit(main())\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/main.py\", line 140, in main\n    command = get_command(settings, sys.argv)\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/main.py\", line 91, in get_command\n    result.stderr.read().decode('utf-8'))\n  File \"/usr/lib/python2.7/contextlib.py\", line 24, in __exit__\n    self.gen.next()\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/logs.py\", line 74, in debug_time\n    debug('{} took: {}'.format(msg, datetime.now() - started), settings)\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xe9' in position 10: ordinal not in range(128)\n. Thanks for the quick answer; indeed, I hadn't noticed there was a limit to how long a command could take, and aptitude seems to take a little while running. Perhaps because I'm using a lot of repositories. Well, either way, with a timeout of 100, it works as intended:\n```\n[~]$ aptitude install mpg123                                                                                                                                                                                                                     \nE: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\n[~]$ fuck                                                                                                                                                                                                                                        \nDEBUG: Run with settings: {'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'no_colors': False,\n 'priority': {},\n 'require_confirmation': True,\n 'rules': [],\n 'wait_command': 100}\nDEBUG: Call: aptitude install mpg123; with env: {'WINDOWID': '39845915', 'GIT_TRACE': '1', 'LESS': '-R', 'AUTOJUMP_DATA_DIR': '/home/tails/.local/share/autojump', 'LC_CTYPE': 'en_US.UTF-8', 'XCURSOR_SIZE': '0', 'XDG_CURRENT_DESKTOP': 'KDE', 'LOGNAME': 'tails', 'USER': 'tails', 'PATH': '/home/tails/bin:/usr/games:/usr/local/bin:/usr/bin/X11:/usr/games:/home/tails/Android/Sdk/platform-tools:/home/tails/Android/Sdk/tools:/home/tails/pi/tools/arm-bcm2708/arm-bcm2708-linux-gnueabi/bin:/home/tails/pi/tools/arm-bcm2708/arm-bcm2708hardfp-linux-gnueabi/bin:/bin:/usr/bin', 'XDG_VTNR': '7', 'DM_CONTROL': '/var/run/xdmctl', 'ZSH': '/home/tails/.oh-my-zsh', 'KDE_SESSION_VERSION': '4', 'KDE_FULL_SESSION': 'true', 'LANG': 'C', 'PROFILEHOME': '', 'TERM': 'xterm', 'SHELL': '/usr/bin/zsh', 'COLORFGBG': '15;0', 'LANGUAGE': 'en_US:en', 'SESSION_MANAGER': 'local/kirby:@/tmp/.ICE-unix/967,unix/kirby:/tmp/.ICE-unix/967', 'SHLVL': '0', 'XDG_SESSION_ID': '1', 'KONSOLE_PROFILE_NAME': 'Shell', 'DBUS_SESSION_BUS_ADDRESS': 'unix:abstract=/tmp/dbus-QGJ0xEBZin,guid=91cf2c02b3f03b13d88ffeb455b33b1f', 'XDG_RUNTIME_DIR': '/run/user/1000', 'WINDOWPATH': '7', 'EDITOR': 'nano', 'SSH_AGENT_PID': '887', 'HOME': '/home/tails', 'KONSOLE_DBUS_SESSION': '/Sessions/26', 'SYSROOT_ARM': '/home/tails/pi/tools/arm-bcm2708/arm-bcm2708-linux-gnueabi/arm-bcm2708-linux-gnueabi/sysroot', 'KDE_SESSION_UID': '1000', 'QT_PLUGIN_PATH': '/home/tails/.kde/lib/kde4/plugins/:/usr/lib/kde4/plugins/', 'SYSROOT_ARM_HARDFP': '/home/tails/pi/tools/arm-bcm2708/arm-bcm2708hardfp-linux-gnueabi/arm-bcm2708hardfp-linux-gnueabi/sysroot', 'XDM_MANAGED': 'method=classic,auto', 'SSH_AUTH_SOCK': '/tmp/ssh-Jl5qVShEhWqw/agent.818', 'KONSOLE_DBUS_SERVICE': ':1.29', 'GTK2_RC_FILES': '/etc/gtk-2.0/gtkrc:/home/tails/.gtkrc-2.0:/home/tails/.kde/share/config/gtkrc-2.0', 'LC_ALL': 'C', 'GS_LIB': '/home/tails/.fonts', 'SHELL_SESSION_ID': '6d0b1a5405244000898c9217672d58a1', '_': '/usr/local/bin/thefuck', 'DESKTOP_SESSION': 'default', 'LSCOLORS': 'Gxfxcxdxbxegedabagacad', 'DISPLAY': ':0', 'XCURSOR_THEME': 'oxy-chrome', 'XDG_SEAT': 'seat0', 'OLDPWD': '/home/tails', 'GPGKEY': '53F05529', 'XDG_DATA_DIRS': '/usr/share:/usr/share:/usr/local/share', 'PWD': '/home/tails', 'GTK_RC_FILES': '/etc/gtk/gtkrc:/home/tails/.gtkrc:/home/tails/.kde/share/config/gtkrc', 'PAGER': 'most', 'KDE_MULTIHEAD': 'false'}; took: 0:00:03.983861\nDEBUG: Received stdout: Reading package lists...\nBuilding dependency tree...\nReading state information...\nReading extended state information...\nInitializing package states...\nReading task descriptions...\nBuilding tag database...\nDEBUG: Received stderr: E: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\nDEBUG: Loaded rules: dry, test.py, brew_install, brew_unknown_command, brew_upgrade, cargo, cargo_no_command, cd_correction, cd_mkdir, cd_parent, composer_not_command, cp_omitting_directory, cpp11, django_south_ghost, django_south_merge, docker_not_command, fix_alt_space, git_add, git_branch_delete, git_branch_list, git_checkout, git_diff_staged, git_fix_stash, git_not_command, git_pull, git_pull_clone, git_push, git_push_pull, git_stash, go_run, grep_recursive, gulp_not_task, has_exists_script, heroku_not_command, java, javac, lein_not_task, ls_lah, man, mercurial, mkdir_p, no_such_file, open, pip_unknown_command, python_command, python_execute, quotation_marks, rm_dir, sed_unterminated_s, sl_ls, ssh_known_hosts, sudo, switch_lang, systemctl, tmux, whois, man_no_space, no_command, history\nDEBUG: Trying rule: dry; took: 0:00:00.000030\nDEBUG: Trying rule: test.py; took: 0:00:00.000013\nDEBUG: Trying rule: brew_install; took: 0:00:00.000013\nDEBUG: Trying rule: brew_unknown_command; took: 0:00:00.000011\nDEBUG: Trying rule: brew_upgrade; took: 0:00:00.000011\nDEBUG: Trying rule: cargo; took: 0:00:00.000010\nDEBUG: Trying rule: cargo_no_command; took: 0:00:00.000011\nDEBUG: Trying rule: cd_correction; took: 0:00:00.000017\nDEBUG: Trying rule: cd_mkdir; took: 0:00:00.000016\nDEBUG: Trying rule: cd_parent; took: 0:00:00.000011\nDEBUG: Trying rule: composer_not_command; took: 0:00:00.000011\nDEBUG: Trying rule: cp_omitting_directory; took: 0:00:00.000021\nDEBUG: Trying rule: cpp11; took: 0:00:00.000012\nDEBUG: Trying rule: django_south_ghost; took: 0:00:00.000012\nDEBUG: Trying rule: django_south_merge; took: 0:00:00.000010\nDEBUG: Trying rule: docker_not_command; took: 0:00:00.000015\nDEBUG: Trying rule: fix_alt_space; took: 0:00:00.000017\nDEBUG: Trying rule: git_add; took: 0:00:00.000015\nDEBUG: Trying rule: git_branch_delete; took: 0:00:00.000012\nDEBUG: Trying rule: git_branch_list; took: 0:00:00.000012\nDEBUG: Trying rule: git_checkout; took: 0:00:00.000012\nDEBUG: Trying rule: git_diff_staged; took: 0:00:00.000013\nDEBUG: Trying rule: git_fix_stash; took: 0:00:00.000011\nDEBUG: Trying rule: git_not_command; took: 0:00:00.000011\nDEBUG: Trying rule: git_pull; took: 0:00:00.000012\nDEBUG: Trying rule: git_pull_clone; took: 0:00:00.000011\nDEBUG: Trying rule: git_push; took: 0:00:00.000013\nDEBUG: Trying rule: git_push_pull; took: 0:00:00.000012\nDEBUG: Trying rule: git_stash; took: 0:00:00.000012\nDEBUG: Trying rule: go_run; took: 0:00:00.000011\nDEBUG: Trying rule: grep_recursive; took: 0:00:00.000012\nDEBUG: Trying rule: gulp_not_task; took: 0:00:00.000012\nDEBUG: Trying rule: has_exists_script; took: 0:00:00.000052\nDEBUG: Trying rule: heroku_not_command; took: 0:00:00.000013\nDEBUG: Trying rule: java; took: 0:00:00.000012\nDEBUG: Trying rule: javac; took: 0:00:00.000013\nDEBUG: Trying rule: lein_not_task; took: 0:00:00.000013\nDEBUG: Trying rule: ls_lah; took: 0:00:00.000013\nDEBUG: Trying rule: man; took: 0:00:00.000013\nDEBUG: Trying rule: mercurial; took: 0:00:00.000012\nDEBUG: Trying rule: mkdir_p; took: 0:00:00.000017\nDEBUG: Trying rule: no_such_file; took: 0:00:00.001810\nDEBUG: Trying rule: open; took: 0:00:00.000016\nDEBUG: Trying rule: pip_unknown_command; took: 0:00:00.000011\nDEBUG: Trying rule: python_command; took: 0:00:00.000019\nDEBUG: Trying rule: python_execute; took: 0:00:00.000013\nDEBUG: Trying rule: quotation_marks; took: 0:00:00.000011\nDEBUG: Trying rule: rm_dir; took: 0:00:00.000015\nDEBUG: Trying rule: sed_unterminated_s; took: 0:00:00.000012\nDEBUG: Trying rule: sl_ls; took: 0:00:00.000011\nDEBUG: Trying rule: ssh_known_hosts; took: 0:00:00.000015\nDEBUG: Trying rule: sudo; took: 0:00:00.000018\nDEBUG: Matched rule: sudo\nsudo aptitude install mpg123 [enter/ctrl+c]^CAborted\nDEBUG: Total took: 0:00:11.485413\n```\nI'll probably set the timeout to 15 seconds, since 100 might be a bit much. In any case, thanks again for the quick answer and fix.\n. ",
    "casterx": "Still happening in 3.2:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/thefuck/3.2/libexec/bin/thefuck\", line 9, in <module>\n    load_entry_point('thefuck==3.2', 'console_scripts', 'thefuck')()\n  File \"/usr/local/Cellar/thefuck/3.2/libexec/lib/python2.7/site-packages/thefuck/main.py\", line 77, in main\n    fix_command()\n  File \"/usr/local/Cellar/thefuck/3.2/libexec/lib/python2.7/site-packages/thefuck/main.py\", line 28, in fix_command\n    selected_command = select_command(corrected_commands)\n  File \"/usr/local/Cellar/thefuck/3.2/libexec/lib/python2.7/site-packages/thefuck/ui.py\", line 106, in select_command\n    logs.confirm_text(selector.value)\n  File \"/usr/local/Cellar/thefuck/3.2/libexec/lib/python2.7/site-packages/thefuck/logs.py\", line 61, in confirm_text\n    blue=color(colorama.Fore.BLUE)))\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2191' in position 64: ordinal not in range(128)\n. Hello @scorphus, could you please update us on this issue? Thanks :)\n. Hi, it's still happening for me. I installed master branch\n```\n\ud83c\udf7a  [22:58] nhattran@mbp:~ $ brew reinstall thefuck --HEAD\n==> Reinstalling thefuck\n==> Cloning https://github.com/nvbn/thefuck.git\nCloning into '/Library/Caches/Homebrew/thefuck--git'...\nremote: Counting objects: 209, done.\nremote: Compressing objects: 100% (205/205), done.\nremote: Total 209 (delta 14), reused 25 (delta 1), pack-reused 0\nReceiving objects: 100% (209/209), 787.93 KiB | 375.00 KiB/s, done.\nResolving deltas: 100% (14/14), done.\nChecking connectivity... done.\n==> Checking out branch master\n==> Downloading https://pypi.python.org/packages/source/s/setuptools/setuptools-18.2.tar.gz\n################################################################## 100.0%\n==> python -c import setuptools... --no-user-cfg install --prefix=/usr/local/Cellar/thefuck/HEAD/li\n==> Downloading https://pypi.python.org/packages/source/p/pathlib/pathlib-1.0.1.tar.gz\n################################################################## 100.0%\n==> python -c import setuptools... --no-user-cfg install --prefix=/usr/local/Cellar/thefuck/HEAD/li\n==> Downloading https://pypi.python.org/packages/source/p/psutil/psutil-3.2.1.tar.gz\n################################################################## 100.0%\n==> python -c import setuptools... --no-user-cfg install --prefix=/usr/local/Cellar/thefuck/HEAD/li\n==> Downloading https://pypi.python.org/packages/source/c/colorama/colorama-0.3.3.tar.gz\n################################################################## 100.0%\n==> python -c import setuptools... --no-user-cfg install --prefix=/usr/local/Cellar/thefuck/HEAD/li\n==> Downloading https://pypi.python.org/packages/source/s/six/six-1.9.0.tar.gz\n################################################################## 100.0%\n==> python -c import setuptools... --no-user-cfg install --prefix=/usr/local/Cellar/thefuck/HEAD/li\n==> Downloading https://pypi.python.org/packages/source/d/decorator/decorator-4.0.2.tar.gz\n################################################################## 100.0%\n==> python -c import setuptools... --no-user-cfg install --prefix=/usr/local/Cellar/thefuck/HEAD/li\n==> python -c import setuptools... --no-user-cfg install --prefix=/usr/local/Cellar/thefuck/HEAD/li\n==> Caveats\nAdd the following to your .bash_profile, .bashrc or .zshrc:\neval \"$(thefuck --alias)\"\nFor other shells, check https://github.com/nvbn/thefuck/wiki/Shell-aliases\n==> Summary\n\ud83c\udf7a  /usr/local/Cellar/thefuck/HEAD: 550 files, 2.3M, built in 16 seconds\n```\nAnd tried\n\ud83c\udf7a  [23:02] nhattran@mbp:~ $ gi\n-bash: gi: command not found\n\ud83c\udf7a  [23:02] nhattran@mbp:~ $ fu\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/thefuck/HEAD/libexec/bin/thefuck\", line 9, in <module>\n    load_entry_point('thefuck==3.2', 'console_scripts', 'thefuck')()\n  File \"/usr/local/Cellar/thefuck/HEAD/libexec/lib/python2.7/site-packages/thefuck/main.py\", line 79, in main\n    fix_command()\n  File \"/usr/local/Cellar/thefuck/HEAD/libexec/lib/python2.7/site-packages/thefuck/main.py\", line 31, in fix_command\n    selected_command = select_command(corrected_commands)\n  File \"/usr/local/Cellar/thefuck/HEAD/libexec/lib/python2.7/site-packages/thefuck/ui.py\", line 83, in select_command\n    logs.confirm_text(selector.value)\n  File \"/usr/local/Cellar/thefuck/HEAD/libexec/lib/python2.7/site-packages/thefuck/logs.py\", line 61, in confirm_text\n    blue=color(colorama.Fore.BLUE)))\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2191' in position 38: ordinal not in range(128)\nAlready double checked the installed revision\n```\n\ud83c\udf7a  [23:02] nhattran@mbp:~ $ cd /Library/Caches/Homebrew/thefuck--git/\n\ud83c\udf7a  [23:05] nhattran@mbp:thefuck--git (master) $ git log -1\ncommit a0ef0efe46f7dba793839a4c16d6f16fdc51eb48\nAuthor: Vladimir Iakovlev nvbn.rm@gmail.com\nDate:   Wed Dec 30 00:58:30 2015 +0300\nMerge pull request #419 from mcarton/fix-unzip\n\nFix the `dirty_unzip` rule\n\n```\n. Could you please show me how to check that? I'm not familiar with python :P\nUpdated: ok, so you're talking about sys env variable, not python :D It works after setting that variable to utf-8\n```\n\ud83c\udf7a  [09:44] nhattran@mbp:~ $ echo $PYTHONIOENCODING\nUTF-8\n\ud83c\udf7a  [09:44] nhattran@mbp:~ $ gi\n-bash: gi: command not found\n\ud83c\udf7a  [09:44] nhattran@mbp:~ $ fu\ngit [enter/\u2191/\u2193/ctrl+c]\nusage: git [--version] [--help] [-C ] [-c name=value]\n           [--exec-path[=]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=] [--work-tree=] [--namespace=]\n            []\nThese are common Git commands used in various situations:\nstart a working area (see also: git help tutorial)\n   clone      Clone a repository into a new directory\n   init       Create an empty Git repository or reinitialize an existing one\nwork on the current change (see also: git help everyday)\n   add        Add file contents to the index\n   mv         Move or rename a file, a directory, or a symlink\n   reset      Reset current HEAD to the specified state\n   rm         Remove files from the working tree and from the index\nexamine the history and state (see also: git help revisions)\n   bisect     Use binary search to find the commit that introduced a bug\n   grep       Print lines matching a pattern\n   log        Show commit logs\n   show       Show various types of objects\n   status     Show the working tree status\ngrow, mark and tweak your common history\n   branch     List, create, or delete branches\n   checkout   Switch branches or restore working tree files\n   commit     Record changes to the repository\n   diff       Show changes between commits, commit and working tree, etc\n   merge      Join two or more development histories together\n   rebase     Forward-port local commits to the updated upstream head\n   tag        Create, list, delete or verify a tag object signed with GPG\ncollaborate (see also: git help workflows)\n   fetch      Download objects and refs from another repository\n   pull       Fetch from and integrate with another repository or a local branch\n   push       Update remote refs along with associated objects\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help ' or 'git help '\nto read about a specific subcommand or concept.\n```\nThanks for the fix :)\n. ",
    "nelson-liu": "I still have this as well:\nTraceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/bin/thefuck\", line 11, in <module>\n    sys.exit(main())\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/thefuck/main.py\", line 77, in \nmain                                                                                                               \n    fix_command()\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/thefuck/main.py\", line 28, in \nfix_command                                                                                                        \n    selected_command = select_command(corrected_commands)\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/thefuck/ui.py\", line 106, in s\nelect_command                                                                                                      \n    logs.confirm_text(selector.value)\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/thefuck/logs.py\", line 61, in \nconfirm_text                                                                                                       \n    blue=color(colorama.Fore.BLUE)))\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2191' in position 60: ordinal not in range(128)\n. ",
    "taz77": "On a Mac (which this questiosn is about). Use the following in your .bash_profile:\n\nPYTHONIOENCODING=\"UTF-8\"\nexport PYTHONIOENCODING\n. \n",
    "phieudu241": "Thanks for your support @bugaevc . I reached it!\n. ",
    "ClementParis016": "So, what was the solution?\n. Ok thanks! I need to figure out how to use a .bashrc file with Cmder now ;)\n. I have no idea, I will ask there. I can keep you informed in this issue if you want.\n. ",
    "brittneybrinsfield": "Send me my videos\n. Open\n. Dash\n. ",
    "DanielGGordon": "Cmder does not use a .bashrc file. Cmder by default is still the Windows command line. What you can do, is open up Cygwin using Cmder, as described here: https://github.com/cmderdev/cmder/wiki/%5BWindows%5D-Integrating-Cygwin\n. ",
    "Vihangbodh": "I did the same as said in the 2 links (created a .bashrc file, added thefuck alias in it, saved it and used it as source). But it still does not seem to work. I type thefuck and it shows usage help, I type fuck and it says no fucks given. But typing a wrong command still only says bash: __ command not found. What did I miss?. Although I don't really understand how thefuck works (yet), I'd be happy to help debug this issue if I can :). ",
    "OfficerHalf": "Cmder (and by extension, clink) does keep a history file. Clink also provides tail and head commands. So, with some really janky trickery, I was able to make thefuck work on Windows with Cmder.\n\nRun clink set history_io 1 and restart your shell. By default clink only writes history on exit, this ensures it writes as commands are run.\nPlace this file somewhere in your path: https://gist.github.com/OfficerHalf/a9848df0a25706532f86dc8aaae56e4f\nRun alias fuck=thefuckcmder\n\nIf you only want to use clink, not Cmder, you can replace all the %CMDER_ROOT% paths with %LOCALAPPDATA%\\clink\\.history\nI'm sure there's a better way to do this, I'm just not sure what it is. ctrl+c also crashes the whole thing, and colors in the console seem to get funky.\nEssentially that batch file:\n1. Writes the last command run (before fuck) to a temporary file by getting the 2nd to last line of the history file.\n2. Sets fucked_cmd to the content of that file\n3. Runs thefuck %fucked_cmd%, and saves the output to a second temporary file, this time a .cmd file.\n4. Calls that .cmd file\nI don't do a whole lot of batch stuff, so if someone can condense that, be my guest.. Maybe, haven't actually tried it in a while. It should be the same, but look here: http://nathan-smith.org/blog/using-thefuck-with-clink-cmder. Looks like an issue with spaces in your path to cmder - see how it split up Program and Files?. ",
    "bariod": "does it still work for you? @OfficerHalf . I actually already did that :D\nI still don't get it to work, though.\nWhen running cmder normally: \nC:\\Users\\\n\u03bb fuck\n*Access denied\nWhen running cmder as admin:\nC:\\Users\\\n\u03bb fuck\ntail: cannot open 'Files\\cmder\\config\\.history'head for reading::  No such file or directorycannot open\n'Files\\cmder\\config\\fucked_cmd.txt' for reading: No such file or directory\nFiles\\cmder\\config\\fucked_cmd.txtNo fucks given\n*The command \"C:\\Program\" is either misspelled or could not be found.\n*: translated. Yes! But how to resolve this? \nI've tried setting CMDER_ROOT to %programfiles%\\cmder which didn't change anything... ",
    "zionyx": "@bariod, maybe this can help?\nhttps://gist.github.com/OfficerHalf/a9848df0a25706532f86dc8aaae56e4f#gistcomment-2857119. I had the same issue as well.. Thanks, worked like a charm.. ",
    "0x2F": "Yup, upgrade fixed the issue, sorry for reporting it :)\n. ",
    "ValentinH": "Well my .bach_history file was owned by root....\n. ",
    "SylvainDe": "Wahoo! You guys are crazy! Thanks for the quick and comprehensive answers!\n. ",
    "Hipska": "Nice, do you have other unfuck suggestions?\n. What has make to do with vagrant?\nAnd I don't think that I have enough knowledge and time to create rules in python.\n. Yes it did, sorry for not responding. Didn't see the mention.\nIt did until now, after upgrading to El Capitan. I updated homebrew and other packages as well.\n12:42 $ vagrant ssh\nVM must be running to open SSH connection. Run `vagrant up`\nto start the virtual machine.\n12:42 $ fuck\nNo fucks given\n12:43 $ thefuck -v\nthefuck 3.0\n12:43 $ vagrant -v\nVagrant 1.7.4\n12:43 $ brew -v\nHomebrew 0.9.5 (git revision 26b6f; last commit 2015-10-05)\n. This just returns: \"No fucks given\"\n. DEBUG: Run with settings: {'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'exclude_rules': [],\n 'no_colors': False,\n 'priority': {},\n 'require_confirmation': True,\n 'rules': [<object object at 0x10ca49130>],\n 'user_dir': PosixPath('/Users/Hipska/.thefuck'),\n 'wait_command': 3}\nDEBUG: Execution timed out!\nDEBUG: Call: vagrant ssh; with env: {'GIT_TRACE': '1', 'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'LOGNAME': 'Hipska', 'USER': 'Hipska', 'XPC_SERVICE_NAME': '0', 'PATH': '/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/sbin:/opt/X11/bin', 'HOME': '/Users/Hipska', 'DISPLAY': '/private/tmp/com.apple.launchd.2W8TJStYS8/org.macosforge.xquartz:0', 'TERM_PROGRAM': 'iTerm.app', 'LANG': 'C', 'THEFUCK_DEBUG': 'true', 'TERM': 'xterm', 'SHELL': '/bin/bash', 'COLORFGBG': '7;0', 'VERSIONER_PYTHON_VERSION': '2.7', 'SHLVL': '1', 'XPC_FLAGS': '0x0', 'ITERM_SESSION_ID': 'w0t4p0', '_': '/usr/local/bin/thefuck', 'JAVA_HOME': '/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home', 'DESTINATION': '/var/folders/sr/py8zdj8x169gstw6wl608kzm0000gn/T/iTerm 2.1.1 Update', 'PYTHONPATH': '/usr/local/Cellar/thefuck/3.0/libexec/lib/python2.7/site-packages:/usr/local/Cellar/thefuck/3.0/libexec/vendor/lib/python2.7/site-packages', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.9IrOW2920N/Listeners', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.3JmS5kj0bP/Render', 'ITERM_PROFILE': 'Default', 'LC_ALL': 'C', 'TMPDIR': '/var/folders/sr/py8zdj8x169gstw6wl608kzm0000gn/T/', '__GIT_PROMPT_IGNORE_STASH': '', '__CF_USER_TEXT_ENCODING': '0x1F5:0x0:0x0', 'PWD': '/Users/Hipska/Documents/***hidden***'}; took: 0:00:03.028214\nDEBUG: Importing rule: apt_get; took: 0:00:00.000724\nDEBUG: Importing rule: apt_get_search; took: 0:00:00.000940\nDEBUG: Importing rule: brew_install; took: 0:00:00.001176\nDEBUG: Importing rule: brew_unknown_command; took: 0:00:00.000289\nDEBUG: Importing rule: brew_upgrade; took: 0:00:00.000162\nDEBUG: Importing rule: cargo; took: 0:00:00.000158\nDEBUG: Importing rule: cargo_no_command; took: 0:00:00.000529\nDEBUG: Importing rule: cd_correction; took: 0:00:00.002050\nDEBUG: Importing rule: cd_mkdir; took: 0:00:00.000488\nDEBUG: Importing rule: cd_parent; took: 0:00:00.000261\nDEBUG: Importing rule: composer_not_command; took: 0:00:00.000480\nDEBUG: Importing rule: cp_omitting_directory; took: 0:00:00.000635\nDEBUG: Importing rule: cpp11; took: 0:00:00.000462\nDEBUG: Importing rule: dirty_untar; took: 0:00:00.003307\nDEBUG: Importing rule: dirty_unzip; took: 0:00:00.000698\nDEBUG: Importing rule: django_south_ghost; took: 0:00:00.000234\nDEBUG: Importing rule: django_south_merge; took: 0:00:00.000165\nDEBUG: Importing rule: docker_not_command; took: 0:00:00.000674\nDEBUG: Importing rule: dry; took: 0:00:00.000295\nDEBUG: Importing rule: fix_alt_space; took: 0:00:00.000429\nDEBUG: Importing rule: fix_file; took: 0:00:00.004115\nDEBUG: Importing rule: git_add; took: 0:00:00.001689\nDEBUG: Importing rule: git_branch_delete; took: 0:00:00.000469\nDEBUG: Importing rule: git_branch_list; took: 0:00:00.000641\nDEBUG: Importing rule: git_checkout; took: 0:00:00.000495\nDEBUG: Importing rule: git_diff_staged; took: 0:00:00.000540\nDEBUG: Importing rule: git_fix_stash; took: 0:00:00.000414\nDEBUG: Importing rule: git_not_command; took: 0:00:00.000397\nDEBUG: Importing rule: git_pull; took: 0:00:00.000397\nDEBUG: Importing rule: git_pull_clone; took: 0:00:00.000386\nDEBUG: Importing rule: git_push; took: 0:00:00.000377\nDEBUG: Importing rule: git_push_force; took: 0:00:00.000379\nDEBUG: Importing rule: git_push_pull; took: 0:00:00.000383\nDEBUG: Importing rule: git_stash; took: 0:00:00.000471\nDEBUG: Importing rule: go_run; took: 0:00:00.000453\nDEBUG: Importing rule: grep_recursive; took: 0:00:00.000538\nDEBUG: Importing rule: gulp_not_task; took: 0:00:00.000407\nDEBUG: Importing rule: has_exists_script; took: 0:00:00.000488\nDEBUG: Importing rule: heroku_not_command; took: 0:00:00.000490\nDEBUG: Importing rule: history; took: 0:00:00.000258\nDEBUG: Importing rule: java; took: 0:00:00.000380\nDEBUG: Importing rule: javac; took: 0:00:00.000379\nDEBUG: Importing rule: lein_not_task; took: 0:00:00.000682\nDEBUG: Importing rule: ls_lah; took: 0:00:00.000414\nDEBUG: Importing rule: man; took: 0:00:00.000257\nDEBUG: Importing rule: man_no_space; took: 0:00:00.000154\nDEBUG: Importing rule: mercurial; took: 0:00:00.000392\nDEBUG: Importing rule: mkdir_p; took: 0:00:00.000542\nDEBUG: Importing rule: mvn_no_command; took: 0:00:00.000592\nDEBUG: Importing rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000426\nDEBUG: Importing rule: no_command; took: 0:00:00.000437\nDEBUG: Importing rule: no_such_file; took: 0:00:00.000207\nDEBUG: Importing rule: open; took: 0:00:00.000906\nDEBUG: Importing rule: pacman; took: 0:00:00.000639\nDEBUG: Importing rule: pacman_not_found; took: 0:00:00.000296\nDEBUG: Importing rule: pip_unknown_command; took: 0:00:00.000544\nDEBUG: Importing rule: python_command; took: 0:00:00.000434\nDEBUG: Importing rule: python_execute; took: 0:00:00.000408\nDEBUG: Importing rule: quotation_marks; took: 0:00:00.000431\nDEBUG: Importing rule: rm_dir; took: 0:00:00.000598\nDEBUG: Importing rule: rm_root; took: 0:00:00.000565\nDEBUG: Importing rule: sed_unterminated_s; took: 0:00:00.000707\nDEBUG: Importing rule: sl_ls; took: 0:00:00.000269\nDEBUG: Importing rule: ssh_known_hosts; took: 0:00:00.000500\nDEBUG: Importing rule: sudo; took: 0:00:00.000322\nDEBUG: Importing rule: switch_lang; took: 0:00:00.000195\nDEBUG: Importing rule: systemctl; took: 0:00:00.000741\nDEBUG: Importing rule: test.py; took: 0:00:00.000181\nDEBUG: Importing rule: tmux; took: 0:00:00.000430\nDEBUG: Importing rule: touch; took: 0:00:00.000381\nDEBUG: Importing rule: tsuru_login; took: 0:00:00.000380\nDEBUG: Importing rule: tsuru_not_command; took: 0:00:00.000419\nDEBUG: Importing rule: unknown_command; took: 0:00:00.000166\nDEBUG: Importing rule: vagrant_up; took: 0:00:00.000496\nDEBUG: Importing rule: whois; took: 0:00:00.000380\nDEBUG: Trying rule: dirty_unzip; took: 0:00:00.000658\nNo fucks given\nDEBUG: Total took: 0:00:03.091693\n. Yeah, I saw that and used that actual command to get this output.\n. Yes indeed, then it works..\n. Hi didn't use thefuck for a while, but it seems more broken now:\n``\nDEBUG: Run with settings: {'alter_history': True,\n 'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'exclude_rules': [],\n 'history_limit': None,\n 'no_colors': False,\n 'priority': {},\n 'require_confirmation': True,\n 'rules': [<object object at 0x109d09160>],\n 'user_dir': PosixPath('/Users/Hipska/.thefuck'),\n 'wait_command': 10}\nDEBUG: Received stdout:\nDEBUG: Received stderr: A Vagrant environment or target machine is required to run this\ncommand. Runvagrant initto create a new Vagrant environment. Or,\nget an ID of a target machine fromvagrant global-status` to run\nthis command on. A final option is to change to a directory with a\nVagrantfile and to try again.\nDEBUG: Call: vagrant ssh; with env: {'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'LOGNAME': 'Hipska', 'USER': 'Hipska', 'PATH': '/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/sbin:/opt/X11/bin', 'HOME': '/Users/Hipska', 'DISPLAY': '/private/tmp/com.apple.launchd.EYEI2z8M3z/org.macosforge.xquartz:0', 'TERM_PROGRAM': 'iTerm.app', 'LANG': 'C', 'THEFUCK_DEBUG': 'true', 'TERM': 'xterm', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.1Du1TyzKyU/Render', 'COLORFGBG': '7;0', 'VERSIONER_PYTHON_VERSION': '2.7', 'SHLVL': '1', 'XPC_FLAGS': '0x0', 'ITERM_SESSION_ID': 'w0t3p0', '_': '/usr/local/bin/thefuck', 'JAVA_HOME': '/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home', 'XPC_SERVICE_NAME': '0', 'PYTHONPATH': '/usr/local/Cellar/thefuck/3.3/libexec/lib/python2.7/site-packages:/usr/local/Cellar/thefuck/3.3/libexec/vendor/lib/python2.7/site-packages', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.8TIf5kxaHp/Listeners', 'SHELL': '/bin/bash', 'ITERM_PROFILE': 'Default', 'LC_ALL': 'C', 'TMPDIR': '/var/folders/sr/py8zdj8x169gstw6wl608kzm0000gn/T/', 'GIT_TRACE': '1', '__CF_USER_TEXT_ENCODING': '0x1F5:0x0:0x0', 'PWD': '/Users/Hipska'}; took: 0:00:01.395693\nDEBUG: Importing rule: apt_get; took: 0:00:00.000657\nDEBUG: Importing rule: apt_get_search; took: 0:00:00.000789\nDEBUG: Importing rule: apt_invalid_operation; took: 0:00:00.002086\nDEBUG: Importing rule: brew_install; took: 0:00:00.000673\nDEBUG: Importing rule: brew_unknown_command; took: 0:00:00.000171\nDEBUG: Importing rule: brew_upgrade; took: 0:00:00.000086\nDEBUG: Importing rule: cargo; took: 0:00:00.000087\nDEBUG: Importing rule: cargo_no_command; took: 0:00:00.000482\nDEBUG: Importing rule: cd_correction; took: 0:00:00.001879\nDEBUG: Importing rule: cd_mkdir; took: 0:00:00.000629\nDEBUG: Importing rule: cd_parent; took: 0:00:00.000074\nDEBUG: Importing rule: composer_not_command; took: 0:00:00.000363\nDEBUG: Importing rule: cp_omitting_directory; took: 0:00:00.000619\nDEBUG: Importing rule: cpp11; took: 0:00:00.000317\nDEBUG: Importing rule: dirty_untar; took: 0:00:00.001978\nDEBUG: Importing rule: dirty_unzip; took: 0:00:00.000317\nDEBUG: Importing rule: django_south_ghost; took: 0:00:00.000062\nDEBUG: Importing rule: django_south_merge; took: 0:00:00.000059\nDEBUG: Importing rule: docker_not_command; took: 0:00:00.000673\nDEBUG: Importing rule: dry; took: 0:00:00.000061\nDEBUG: Importing rule: fix_alt_space; took: 0:00:00.000317\nDEBUG: Importing rule: fix_file; took: 0:00:00.003376\nDEBUG: Importing rule: git_add; took: 0:00:00.000570\nDEBUG: Importing rule: git_branch_delete; took: 0:00:00.000353\nDEBUG: Importing rule: git_branch_list; took: 0:00:00.000321\nDEBUG: Importing rule: git_checkout; took: 0:00:00.000315\nDEBUG: Importing rule: git_diff_staged; took: 0:00:00.000296\nDEBUG: Importing rule: git_fix_stash; took: 0:00:00.000305\nDEBUG: Importing rule: git_not_command; took: 0:00:00.000289\nDEBUG: Importing rule: git_pull; took: 0:00:00.000294\nDEBUG: Importing rule: git_pull_clone; took: 0:00:00.000288\nDEBUG: Importing rule: git_push; took: 0:00:00.000305\nDEBUG: Importing rule: git_push_force; took: 0:00:00.000335\nDEBUG: Importing rule: git_push_pull; took: 0:00:00.000318\nDEBUG: Importing rule: git_stash; took: 0:00:00.000299\nDEBUG: Importing rule: git_two_dashes; took: 0:00:00.000294\nDEBUG: Importing rule: go_run; took: 0:00:00.000269\nDEBUG: Importing rule: grep_recursive; took: 0:00:00.000274\nDEBUG: Importing rule: gulp_not_task; took: 0:00:00.000281\nDEBUG: Importing rule: has_exists_script; took: 0:00:00.000288\nDEBUG: Importing rule: heroku_not_command; took: 0:00:00.000405\nDEBUG: Importing rule: history; took: 0:00:00.000091\nDEBUG: Importing rule: java; took: 0:00:00.000280\nDEBUG: Importing rule: javac; took: 0:00:00.000305\nDEBUG: Importing rule: lein_not_task; took: 0:00:00.000492\nDEBUG: Importing rule: ls_lah; took: 0:00:00.000285\nDEBUG: Importing rule: man; took: 0:00:00.000289\nDEBUG: Importing rule: man_no_space; took: 0:00:00.000071\nDEBUG: Importing rule: mercurial; took: 0:00:00.000293\nDEBUG: Importing rule: mkdir_p; took: 0:00:00.000288\nDEBUG: Importing rule: mvn_no_command; took: 0:00:00.000276\nDEBUG: Importing rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000294\nDEBUG: Importing rule: no_command; took: 0:00:00.000290\nDEBUG: Importing rule: no_such_file; took: 0:00:00.000073\nDEBUG: Importing rule: open; took: 0:00:00.000279\nDEBUG: Importing rule: pacman; took: 0:00:00.000414\nDEBUG: Importing rule: pacman_not_found; took: 0:00:00.000137\nDEBUG: Importing rule: pip_unknown_command; took: 0:00:00.000433\nDEBUG: Importing rule: python_command; took: 0:00:00.000298\nDEBUG: Importing rule: python_execute; took: 0:00:00.000448\nDEBUG: Importing rule: quotation_marks; took: 0:00:00.000084\nDEBUG: Importing rule: rm_dir; took: 0:00:00.000320\nDEBUG: Importing rule: rm_root; took: 0:00:00.000393\nDEBUG: Importing rule: sed_unterminated_s; took: 0:00:00.000353\nDEBUG: Importing rule: sl_ls; took: 0:00:00.000062\nDEBUG: Importing rule: ssh_known_hosts; took: 0:00:00.000467\nDEBUG: Importing rule: sudo; took: 0:00:00.000070\nDEBUG: Importing rule: switch_lang; took: 0:00:00.000099\nDEBUG: Importing rule: systemctl; took: 0:00:00.000517\nDEBUG: Importing rule: test.py; took: 0:00:00.000057\nDEBUG: Importing rule: tmux; took: 0:00:00.000288\nDEBUG: Importing rule: touch; took: 0:00:00.000294\nDEBUG: Importing rule: tsuru_login; took: 0:00:00.000289\nDEBUG: Importing rule: tsuru_not_command; took: 0:00:00.000290\nDEBUG: Importing rule: unknown_command; took: 0:00:00.000066\nDEBUG: Importing rule: vagrant_up; took: 0:00:00.000555\nDEBUG: Importing rule: whois; took: 0:00:00.000416\nDEBUG: Trying rule: dry; took: 0:00:00.000227\nDEBUG: Trying rule: test.py; took: 0:00:00.000021\nDEBUG: Trying rule: apt_get_search; took: 0:00:00.000594\nDEBUG: Trying rule: apt_invalid_operation; took: 0:00:00.000215\nDEBUG: Trying rule: brew_install; took: 0:00:00.000021\nDEBUG: Trying rule: brew_unknown_command; took: 0:00:00.000018\nDEBUG: Trying rule: brew_upgrade; took: 0:00:00.000017\nDEBUG: Trying rule: cargo; took: 0:00:00.000016\nDEBUG: Trying rule: cargo_no_command; took: 0:00:00.000210\nDEBUG: Trying rule: cd_correction; took: 0:00:00.000203\nDEBUG: Trying rule: cd_mkdir; took: 0:00:00.000192\nDEBUG: Trying rule: cd_parent; took: 0:00:00.000019\nDEBUG: Trying rule: composer_not_command; took: 0:00:00.000197\nDEBUG: Trying rule: cp_omitting_directory; took: 0:00:00.000194\nDEBUG: Trying rule: cpp11; took: 0:00:00.000200\nDEBUG: Trying rule: dirty_untar; took: 0:00:00.000189\nDEBUG: Trying rule: dirty_unzip; took: 0:00:00.000188\nDEBUG: Trying rule: django_south_ghost; took: 0:00:00.000019\nDEBUG: Trying rule: django_south_merge; took: 0:00:00.000017\nDEBUG: Trying rule: docker_not_command; took: 0:00:00.000195\nDEBUG: Trying rule: fix_alt_space; took: 0:00:00.000024\nDEBUG: Trying rule: fix_file; took: 0:00:00.000024\nDEBUG: Trying rule: git_add; took: 0:00:00.000200\nDEBUG: Trying rule: git_branch_delete; took: 0:00:00.000190\nDEBUG: Trying rule: git_branch_list; took: 0:00:00.000195\nDEBUG: Trying rule: git_checkout; took: 0:00:00.000188\nDEBUG: Trying rule: git_diff_staged; took: 0:00:00.000187\nDEBUG: Trying rule: git_fix_stash; took: 0:00:00.000187\nDEBUG: Trying rule: git_not_command; took: 0:00:00.000187\nDEBUG: Trying rule: git_pull; took: 0:00:00.000187\nDEBUG: Trying rule: git_pull_clone; took: 0:00:00.000186\nDEBUG: Trying rule: git_push; took: 0:00:00.000186\nDEBUG: Trying rule: git_push_pull; took: 0:00:00.000193\nDEBUG: Trying rule: git_stash; took: 0:00:00.000187\nDEBUG: Trying rule: git_two_dashes; took: 0:00:00.000209\nDEBUG: Trying rule: go_run; took: 0:00:00.000187\nDEBUG: Trying rule: grep_recursive; took: 0:00:00.000187\nDEBUG: Trying rule: gulp_not_task; took: 0:00:00.000194\nDEBUG: Trying rule: has_exists_script; took: 0:00:00.000039\nDEBUG: Trying rule: heroku_not_command; took: 0:00:00.000194\nDEBUG: Trying rule: java; took: 0:00:00.000228\nDEBUG: Trying rule: javac; took: 0:00:00.000208\nDEBUG: Trying rule: lein_not_task; took: 0:00:00.000199\nDEBUG: Trying rule: ls_lah; took: 0:00:00.000199\nDEBUG: Trying rule: man; took: 0:00:00.000201\nDEBUG: Trying rule: mercurial; took: 0:00:00.000191\nDEBUG: Trying rule: mkdir_p; took: 0:00:00.000021\nDEBUG: Trying rule: mvn_no_command; took: 0:00:00.000190\nDEBUG: Trying rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000193\nDEBUG: Trying rule: no_such_file; took: 0:00:00.001223\nDEBUG: Trying rule: open; took: 0:00:00.000233\nDEBUG: Trying rule: pip_unknown_command; took: 0:00:00.000208\nDEBUG: Trying rule: python_command; took: 0:00:00.000024\nDEBUG: Trying rule: python_execute; took: 0:00:00.000199\nDEBUG: Trying rule: quotation_marks; took: 0:00:00.000019\nDEBUG: Trying rule: rm_dir; took: 0:00:00.000020\nDEBUG: Trying rule: sed_unterminated_s; took: 0:00:00.000198\nDEBUG: Trying rule: sl_ls; took: 0:00:00.000019\nDEBUG: Trying rule: ssh_known_hosts; took: 0:00:00.000194\nDEBUG: Trying rule: sudo; took: 0:00:00.000099\nDEBUG: Trying rule: switch_lang; took: 0:00:00.000017\nDEBUG: Trying rule: systemctl; took: 0:00:00.000199\nDEBUG: Trying rule: tmux; took: 0:00:00.000189\nDEBUG: Trying rule: touch; took: 0:00:00.000194\nDEBUG: Trying rule: tsuru_login; took: 0:00:00.000188\nDEBUG: Trying rule: tsuru_not_command; took: 0:00:00.000183\nDEBUG: Trying rule: unknown_command; took: 0:00:00.000974\nDEBUG: Trying rule: vagrant_up; took: 0:00:00.000201\nDEBUG: Trying rule: whois; took: 0:00:00.000289\nDEBUG: Trying rule: man_no_space; took: 0:00:00.000025\nDEBUG: Trying rule: no_command; took: 0:00:00.000022\nDEBUG: Trying rule: history; took: 0:00:00.099972\nDEBUG: Total took: 0:00:01.573020\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/thefuck/3.3/libexec/bin/thefuck\", line 9, in \n    load_entry_point('thefuck==3.3', 'console_scripts', 'thefuck')()\n  File \"/usr/local/Cellar/thefuck/3.3/libexec/lib/python2.7/site-packages/thefuck/main.py\", line 79, in main\n    fix_command()\n  File \"/usr/local/Cellar/thefuck/3.3/libexec/lib/python2.7/site-packages/thefuck/main.py\", line 31, in fix_command\n    selected_command = select_command(corrected_commands)\n  File \"/usr/local/Cellar/thefuck/3.3/libexec/lib/python2.7/site-packages/thefuck/ui.py\", line 83, in select_command\n    logs.confirm_text(selector.value)\n  File \"/usr/local/Cellar/thefuck/3.3/libexec/lib/python2.7/site-packages/thefuck/logs.py\", line 61, in confirm_text\n    blue=color(colorama.Fore.BLUE)))\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2191' in position 45: ordinal not in range(128)\n```\nThe same happens for all fucks I try. Did reinstall of thefuck but that didn't help.\n. Not much better here :(\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/thefuck/3.7/libexec/bin/thefuck\", line 9, in <module>\n    load_entry_point('thefuck==3.7', 'console_scripts', 'thefuck')()\n  File \"/usr/local/Cellar/thefuck/3.7/libexec/lib/python2.7/site-packages/thefuck/main.py\", line 80, in main\n    fix_command()\n  File \"/usr/local/Cellar/thefuck/3.7/libexec/lib/python2.7/site-packages/thefuck/main.py\", line 32, in fix_command\n    selected_command = select_command(corrected_commands)\n  File \"/usr/local/Cellar/thefuck/3.7/libexec/lib/python2.7/site-packages/thefuck/ui.py\", line 78, in select_command\n    logs.confirm_text(selector.value)\n  File \"/usr/local/Cellar/thefuck/3.7/libexec/lib/python2.7/site-packages/thefuck/logs.py\", line 61, in confirm_text\n    blue=color(colorama.Fore.BLUE)))\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2191' in position 45: ordinal not in range(128)\n. Please, tell me what i'm doing wrong then, I still got the same stack trace. (python version not good?)\n. > $ thefuck --version\n\nThe Fuck 3.7 using Python 2.7.10\n\nYes, I think it's the default, as I'm not doing anything specific with python.\n\n$ which python\n/usr/bin/python\n. It works fine when doing vagrant ssh and afterwards fuck, but when I run that debug command or just thefuck vagrant ssh I still get that stack trace with the UnicodeEncodeError.. related to #353?\n. \n",
    "nodegin": "great\n. Understood. So should this issue be closed now?\n. ",
    "Kjwon15": "I re-installed it. works fine.\nthanks.\n. ",
    "LuoPX-15510486969": "after upgrade to 2.7.still has the same problem.\n. ",
    "FradSer": "Same problem at The Fuck 3.27 using Python 3.7.1\n``` zsh\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 12, in \n    sys.exit(main())\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/site-packages/thefuck/entrypoints/main.py\", line 25, in main\n    fix_command(known_args)\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/site-packages/thefuck/entrypoints/fix_command.py\", line 41, in fix_command\n    corrected_commands = get_corrected_commands(command)\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/site-packages/thefuck/corrector.py\", line 89, in get_corrected_commands\n    corrected for rule in get_rules()\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/site-packages/thefuck/corrector.py\", line 49, in get_rules\n    key=lambda rule: rule.priority)\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/site-packages/thefuck/corrector.py\", line 17, in get_loaded_rules\n    rule = Rule.from_path(path)\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/site-packages/thefuck/types.py\", line 140, in from_path\n    rule_module = load_source(name, str(path))\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/imp.py\", line 171, in load_source\n    module = _load(spec)\n  File \"\", line 696, in _load\n  File \"\", line 677, in _load_unlocked\n  File \"\", line 728, in exec_module\n  File \"\", line 219, in _call_with_frames_removed\n  File \"/Users/FradSer/.config/thefuck/rules/git.py\", line 3, in \n    from ..utils import is_app\nImportError: attempted relative import with no known parent package\nin 1 at Frad-MBP on \uf418 master [?] is \uf8d2 v1.0.0 via \uf898 v11.1.0 on \uf308 v18.06.1 took 4s\n\u279c lsadaada\nzsh: command not found: lsadaada\nin 1 at Frad-MBP on \uf418 master [?] is \uf8d2 v1.0.0 via \uf898 v11.1.0 on \uf308 v18.06.1\n\u279c fuck\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 12, in \n    sys.exit(main())\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/site-packages/thefuck/entrypoints/main.py\", line 25, in main\n    fix_command(known_args)\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/site-packages/thefuck/entrypoints/fix_command.py\", line 41, in fix_command\n    corrected_commands = get_corrected_commands(command)\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/site-packages/thefuck/corrector.py\", line 89, in get_corrected_commands\n    corrected for rule in get_rules()\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/site-packages/thefuck/corrector.py\", line 49, in get_rules\n    key=lambda rule: rule.priority)\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/site-packages/thefuck/corrector.py\", line 17, in get_loaded_rules\n    rule = Rule.from_path(path)\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/site-packages/thefuck/types.py\", line 140, in from_path\n    rule_module = load_source(name, str(path))\n  File \"/usr/local/Cellar/thefuck/3.27_1/libexec/lib/python3.7/imp.py\", line 171, in load_source\n    module = _load(spec)\n  File \"\", line 696, in _load\n  File \"\", line 677, in _load_unlocked\n  File \"\", line 728, in exec_module\n  File \"\", line 219, in _call_with_frames_removed\n  File \"/Users/FradSer/.config/thefuck/rules/git.py\", line 3, in \n    from ..utils import is_app\nImportError: attempted relative import with no known parent package\n```. ",
    "kloetzl": "Even with my history being just 1600 lines, the rule took 0.25 seconds. That might not sound like much, but its a noticeable delay. I think, executing fuck should really feel instantaneous i.e. the result must not take longer than 50ms.\n. ",
    "hcgraf": "Suggestion: try to use the version for python 3, the history rule seems to be MUCH faster\u2026\npip uninstall thefuck\npip3 install thefuck\n. I had the same problem, in my case the history rule was very slow.\nTry to use the version for python 3, the history rule seems to be MUCH faster\u2026\npip uninstall thefuck\npip3 install thefuck\n. ",
    "sylvainar": "Hey guys !\nI've successfully installed The Fuck on my Raspberry Pi, it's awesome !\nThe only problem is that it's really, really slow (I've got a result 2 or 3 seconds after I typed \"fuck\"). Do you know why ?\nThanks !\n. ",
    "tels7ar": "Yeah I'm seeing this too.  I'm on macos x 10.10.5 if that helps any.  Latest thefuck installed.\n. ",
    "BuZZ-T": "Ok, i'll do that!\nEDIT: Done!\n. ",
    "hilen": "Still not work\n```\n[~] sudo pip uninstall thefuck                                        23:39:55\nPassword:\nThe directory '/Users/hilenlai/Library/Caches/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\nThe directory '/Users/hilenlai/Library/Caches/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\nException:\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/pip/basecommand.py\", line 223, in main\n    status = self.run(options, args)\n  File \"/Library/Python/2.7/site-packages/pip/commands/uninstall.py\", line 76, in run\n    requirement_set.uninstall(auto_confirm=options.yes)\n  File \"/Library/Python/2.7/site-packages/pip/req/req_set.py\", line 305, in uninstall\n    req.uninstall(auto_confirm=auto_confirm)\n  File \"/Library/Python/2.7/site-packages/pip/req/req_install.py\", line 683, in uninstall\n    for path in pip.wheel.uninstallation_paths(dist):\n  File \"/Library/Python/2.7/site-packages/pip/wheel.py\", line 512, in unique\n    for item in fn(args, *kw):\n  File \"/Library/Python/2.7/site-packages/pip/wheel.py\", line 531, in uninstallation_paths\n    r = csv.reader(FakeFile(dist.get_metadata_lines('RECORD')))\n  File \"/Library/Python/2.7/site-packages/pip/_vendor/pkg_resources/init.py\", line 1619, in get_metadata_lines\n    return yield_lines(self.get_metadata(name))\n  File \"/Library/Python/2.7/site-packages/pip/_vendor/pkg_resources/init.py\", line 1611, in get_metadata\n    return self._get(self._fn(self.egg_info, name))\n  File \"/Library/Python/2.7/site-packages/pip/_vendor/pkg_resources/init.py\", line 1722, in _get\n    with open(path, 'rb') as stream:\nIOError: [Errno 2] No such file or directory: '/Library/Python/2.7/site-packages/thefuck-2.6.dist-info/RECORD'\n```\n. Okay, I delete the packages and install it . Thanks  :+1: \n. ",
    "anshuman73": "Hi, Is there anything more to work on this issue ?\nI think this would practically be solved after pip and homebrew support\n. ",
    "myoung34": "348\n. @nvbn  ^^ that was what I was attempting to fix.\nall command usage lists the command, not the human readable application name.\n. ",
    "marsjaninzmarsa": "Debian 8, in new Ubuntu it's also working.\nIt can be apt-get, no difference for me, just less typing. :smile: \n. @mcarton: isn't.\n@NDevox: apt-get should be preferred, because apt and apt-get works the same and apt-get works also in older systems. apt is preferred by me only because it's 4 keys to type less, and if I don't must write it at all it's no difference for me. :smiley: \n. @mcarton but apt is nothing really new, it's only shortcut wrapper for apt-get...\n. That was because Synaptic was open...\n. ",
    "NDevox": "Which one is the most common? I only use apt-get. So in my mind that is the one that should be used.\n. ",
    "ukch": "I haven't tried either upgrading or using Python 3 (I will try that next) but here's the output of the commands that @mcarton posted:\n```\n$ time zsh -ic alias > /dev/null\nzsh -ic alias > /dev/null  0.45s user 0.08s system 88% cpu 0.605 total\n$ time thefuck test\nls test [enter/ctrl+c]\nls test\nthefuck test  3.31s user 0.10s system 88% cpu 3.859 total\n$ env THEFUCK_DEBUG=true thefuck apt-get install foo\nDEBUG: Run with settings: {'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'no_colors': False,\n 'priority': {},\n 'require_confirmation': True,\n 'rules': [],\n 'wait_command': 3}\nDEBUG: Received stdout: \nDEBUG: Received stderr: E: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\nDEBUG: Call: apt-get install foo; with env: {TRUNCATED}; took: 0:00:00.175564\nDEBUG: Loaded rules: brew_install, brew_unknown_command, brew_upgrade, cargo, cargo_no_command, cd_correction, cd_mkdir, cd_parent, composer_not_command, cp_omitting_directory, cpp11, dirty_untar, dirty_unzip, django_south_ghost, django_south_merge, docker_not_command, dry, fix_alt_space, fix_file, git_add, git_branch_delete, git_branch_list, git_checkout, git_diff_staged, git_fix_stash, git_not_command, git_pull, git_pull_clone, git_push, git_push_pull, git_stash, go_run, grep_recursive, gulp_not_task, has_exists_script, heroku_not_command, history, java, javac, lein_not_task, ls_lah, man, man_no_space, mercurial, mkdir_p, no_command, no_such_file, open, pip_unknown_command, python_command, python_execute, quotation_marks, rm_dir, sed_unterminated_s, sl_ls, ssh_known_hosts, sudo, switch_lang, systemctl, test.py, tmux, tsuru_login, tsuru_not_command, unknown_command, vagrant_up, whois\nDEBUG: Trying rule: brew_install; took: 0:00:00.000021\nDEBUG: Trying rule: brew_unknown_command; took: 0:00:00.000011\nDEBUG: Trying rule: brew_upgrade; took: 0:00:00.000008\nDEBUG: Trying rule: cargo; took: 0:00:00.000008\nDEBUG: Trying rule: cargo_no_command; took: 0:00:00.000008\nDEBUG: Trying rule: cd_correction; took: 0:00:00.000012\nDEBUG: Trying rule: cd_mkdir; took: 0:00:00.000010\nDEBUG: Trying rule: cd_parent; took: 0:00:00.000007\nDEBUG: Trying rule: composer_not_command; took: 0:00:00.000008\nDEBUG: Trying rule: cp_omitting_directory; took: 0:00:00.000014\nDEBUG: Trying rule: cpp11; took: 0:00:00.000008\nDEBUG: Trying rule: dirty_untar; took: 0:00:00.000009\nDEBUG: Trying rule: dirty_unzip; took: 0:00:00.000008\nDEBUG: Trying rule: django_south_ghost; took: 0:00:00.000008\nDEBUG: Trying rule: django_south_merge; took: 0:00:00.000007\nDEBUG: Trying rule: docker_not_command; took: 0:00:00.000010\nDEBUG: Trying rule: dry; took: 0:00:00.000011\nDEBUG: Trying rule: fix_alt_space; took: 0:00:00.000012\nDEBUG: Trying rule: fix_file; took: 0:00:00.000012\nDEBUG: Trying rule: git_add; took: 0:00:00.000010\nDEBUG: Trying rule: git_branch_delete; took: 0:00:00.000008\nDEBUG: Trying rule: git_branch_list; took: 0:00:00.000008\nDEBUG: Trying rule: git_checkout; took: 0:00:00.000008\nDEBUG: Trying rule: git_diff_staged; took: 0:00:00.000008\nDEBUG: Trying rule: git_fix_stash; took: 0:00:00.000007\nDEBUG: Trying rule: git_not_command; took: 0:00:00.000008\nDEBUG: Trying rule: git_pull; took: 0:00:00.000008\nDEBUG: Trying rule: git_pull_clone; took: 0:00:00.000008\nDEBUG: Trying rule: git_push; took: 0:00:00.000008\nDEBUG: Trying rule: git_push_pull; took: 0:00:00.000008\nDEBUG: Trying rule: git_stash; took: 0:00:00.000007\nDEBUG: Trying rule: go_run; took: 0:00:00.000008\nDEBUG: Trying rule: grep_recursive; took: 0:00:00.000008\nDEBUG: Trying rule: gulp_not_task; took: 0:00:00.000007\nDEBUG: Trying rule: has_exists_script; took: 0:00:00.000060\nDEBUG: Trying rule: heroku_not_command; took: 0:00:00.000008\nDEBUG: Trying rule: history; took: 0:00:02.855475\nDEBUG: Trying rule: java; took: 0:00:00.000011\nDEBUG: Trying rule: javac; took: 0:00:00.000007\nDEBUG: Trying rule: lein_not_task; took: 0:00:00.000008\nDEBUG: Trying rule: ls_lah; took: 0:00:00.000008\nDEBUG: Trying rule: man; took: 0:00:00.000007\nDEBUG: Trying rule: man_no_space; took: 0:00:00.000006\nDEBUG: Trying rule: mercurial; took: 0:00:00.000006\nDEBUG: Trying rule: mkdir_p; took: 0:00:00.000008\nDEBUG: Trying rule: no_command; took: 0:00:00.000008\nDEBUG: Trying rule: no_such_file; took: 0:00:00.000856\nDEBUG: Trying rule: open; took: 0:00:00.000009\nDEBUG: Trying rule: pip_unknown_command; took: 0:00:00.000006\nDEBUG: Trying rule: python_command; took: 0:00:00.000011\nDEBUG: Trying rule: python_execute; took: 0:00:00.000006\nDEBUG: Trying rule: quotation_marks; took: 0:00:00.000006\nDEBUG: Trying rule: rm_dir; took: 0:00:00.000008\nDEBUG: Trying rule: sed_unterminated_s; took: 0:00:00.000006\nDEBUG: Trying rule: sl_ls; took: 0:00:00.000006\nDEBUG: Trying rule: ssh_known_hosts; took: 0:00:00.000011\nDEBUG: Trying rule: sudo; took: 0:00:00.000011\nDEBUG: Trying rule: switch_lang; took: 0:00:00.000006\nDEBUG: Trying rule: systemctl; took: 0:00:00.000008\nDEBUG: Trying rule: test.py; took: 0:00:00.000006\nDEBUG: Trying rule: tmux; took: 0:00:00.000005\nDEBUG: Trying rule: tsuru_login; took: 0:00:00.000006\nDEBUG: Trying rule: tsuru_not_command; took: 0:00:00.000006\nDEBUG: Trying rule: unknown_command; took: 0:00:00.000232\nDEBUG: Trying rule: vagrant_up; took: 0:00:00.000006\nDEBUG: Trying rule: whois; took: 0:00:00.000006\nDEBUG: Matched rules: history, sudo\nsudo apt-get install foo [enter/ctrl+c]\nsudo apt-get install foo\nDEBUG: Total took: 0:00:06.958977\n```\n. ",
    "awnumar": "It's reaaaaly slow for me too. Takes a good four seconds to give a suggestion, making it more annoying than the command that fucked up in the first place.\n. ```\n~/github/edgychat  dev/crypto \u2714                                                               0m\n\u25b6 cler\nzsh: command not found: cler\n~/github/edgychat  dev/crypto \u2714                                                              0m  \u2349\n\u25b6 fuck\nDEBUG: Run with settings: {'alter_history': True,\n 'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'exclude_rules': [],\n 'history_limit': None,\n 'no_colors': False,\n 'priority': {},\n 'require_confirmation': True,\n 'rules': [],\n 'user_dir': PosixPath('/home/eclipse/.config/thefuck'),\n 'wait_command': 3}\nDEBUG: Received stdout: \nDEBUG: Received stderr: /bin/sh: cler: command not found\nDEBUG: Call: cler; with env: {'PATH': '/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/home/eclipse/.gem/ruby/2.3.0/bin', 'QT_STYLE_OVERRIDE': 'gtk', 'LANG': 'C', 'WINDOWPATH': '2', '': '/usr/bin/thefuck', 'PWD': '/home/eclipse/github/edgychat', 'XAUTHORITY': '/run/user/1000/gdm/Xauthority', 'XDG_SESSION_TYPE': 'x11', 'GIO_LAUNCHED_DESKTOP_FILE': '/usr/share/applications/termite.desktop', 'XDG_CURRENT_DESKTOP': 'X-Cinnamon', 'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'MAIL': '/var/spool/mail/eclipse', 'GIT_TRACE': '1', 'PAGER': 'less', 'TF_SHELL_ALIASES': '-=\\'cd -\\'\\n...=../..\\n....=../../..\\n.....=../../../..\\n......=../../../../..\\n1=\\'cd -\\'\\n2=\\'cd -2\\'\\n3=\\'cd -3\\'\\n4=\\'cd -4\\'\\n5=\\'cd -5\\'\\n6=\\'cd -6\\'\\n7=\\'cd -7\\'\\n8=\\'cd -8\\'\\n9=\\'cd -9\\'\\n=sudo\\nafind=\\'ack -il\\'\\nd=\\'dirs -v | head -10\\'\\nfuck=\\'TF_CMD=$(TF_ALIAS=fuck PYTHONIOENCODING=utf-8 TF_SHELL_ALIASES=$(alias) thefuck $(fc -ln -1 | tail -n 1)) && eval $TF_CMD && print -s $TF_CMD\\'\\ng=git\\nga=\\'git add\\'\\ngaa=\\'git add --all\\'\\ngapa=\\'git add --patch\\'\\ngb=\\'git branch\\'\\ngba=\\'git branch -a\\'\\ngbda=\\'git branch --no-color --merged | command grep -vE \"^(\\|\\s(master|develop|dev)\\s*$)\" | command xargs -n 1 git branch -d\\'\\ngbl=\\'git blame -b -w\\'\\ngbnm=\\'git branch --no-merged\\'\\ngbr=\\'git branch --remote\\'\\ngbs=\\'git bisect\\'\\ngbsb=\\'git bisect bad\\'\\ngbsg=\\'git bisect good\\'\\ngbsr=\\'git bisect reset\\'\\ngbss=\\'git bisect start\\'\\ngc=\\'git commit -v\\'\\n\\'gc!\\'=\\'git commit -v --amend\\'\\ngca=\\'git commit -v -a\\'\\n\\'gca!\\'=\\'git commit -v -a --amend\\'\\ngcam=\\'git commit -a -m\\'\\n\\'gcan!\\'=\\'git commit -v -a --no-edit --amend\\'\\n\\'gcans!\\'=\\'git commit -v -a -s --no-edit --amend\\'\\ngcb=\\'git checkout -b\\'\\ngcf=\\'git config --list\\'\\ngcl=\\'git clone --recursive\\'\\ngclean=\\'git clean -fd\\'\\ngcm=\\'git checkout master\\'\\ngcmsg=\\'git commit -m\\'\\n\\'gcn!\\'=\\'git commit -v --no-edit --amend\\'\\ngco=\\'git checkout\\'\\ngcount=\\'git shortlog -sn\\'\\ngcp=\\'git cherry-pick\\'\\ngcs=\\'git commit -S\\'\\ngd=\\'git diff\\'\\ngdca=\\'git diff --cached\\'\\ngdct=\\'git describe --tags git rev-list --tags --max-count=1\\'\\ngdt=\\'git diff-tree --no-commit-id --name-only -r\\'\\ngdw=\\'git diff --word-diff\\'\\ngf=\\'git fetch\\'\\ngfa=\\'git fetch --all --prune\\'\\ngfo=\\'git fetch origin\\'\\ngg=\\'git gui citool\\'\\ngga=\\'git gui citool --amend\\'\\nggpull=\\'git pull origin $(git_current_branch)\\'\\nggpur=ggu\\nggpush=\\'git push origin $(git_current_branch)\\'\\nggsup=\\'git branch --set-upstream-to=origin/$(git_current_branch)\\'\\ngignore=\\'git update-index --assume-unchanged\\'\\ngignored=\\'git ls-files -v | grep \"^[[:lower:]]\"\\'\\ngit-svn-dcommit-push=\\'git svn dcommit && git push github master:svntrunk\\'\\ngk=\\'\\gitk --all --branches\\'\\ngke=\\'\\gitk --all $(git log -g --pretty=format:%h)\\'\\ngl=\\'git pull\\'\\nglg=\\'git log --stat\\'\\nglgg=\\'git log --graph\\'\\nglgga=\\'git log --graph --decorate --all\\'\\nglgm=\\'git log --graph --max-count=10\\'\\nglgp=\\'git log --stat -p\\'\\nglo=\\'git log --oneline --decorate\\'\\ngloburl=\\'noglob urlglobber \\'\\nglog=\\'git log --oneline --decorate --graph\\'\\ngloga=\\'git log --oneline --decorate --graph --all\\'\\nglol=\\'git log --graph --pretty=format:\\'\\\\'\\'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset\\'\\\\'\\' --abbrev-commit\\'\\nglola=\\'git log --graph --pretty=format:\\'\\\\'\\'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset\\'\\\\'\\' --abbrev-commit --all\\'\\nglp=_git_log_prettily\\nglum=\\'git pull upstream master\\'\\ngm=\\'git merge\\'\\ngmom=\\'git merge origin/master\\'\\ngmt=\\'git mergetool --no-prompt\\'\\ngmtvim=\\'git mergetool --no-prompt --tool=vimdiff\\'\\ngmum=\\'git merge upstream/master\\'\\ngp=\\'git push\\'\\ngpd=\\'git push --dry-run\\'\\ngpoat=\\'git push origin --all && git push origin --tags\\'\\ngpristine=\\'git reset --hard && git clean -dfx\\'\\ngpu=\\'git push upstream\\'\\ngpv=\\'git push -v\\'\\ngr=\\'git remote\\'\\ngra=\\'git remote add\\'\\ngrb=\\'git rebase\\'\\ngrba=\\'git rebase --abort\\'\\ngrbc=\\'git rebase --continue\\'\\ngrbi=\\'git rebase -i\\'\\ngrbm=\\'git rebase master\\'\\ngrbs=\\'git rebase --skip\\'\\ngrep=\\'grep  --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}\\'\\ngrh=\\'git reset HEAD\\'\\ngrhh=\\'git reset HEAD --hard\\'\\ngrmv=\\'git remote rename\\'\\ngrrm=\\'git remote remove\\'\\ngrset=\\'git remote set-url\\'\\ngrt=\\'cd $(git rev-parse --show-toplevel || echo \".\")\\'\\ngru=\\'git reset --\\'\\ngrup=\\'git remote update\\'\\ngrv=\\'git remote -v\\'\\ngsb=\\'git status -sb\\'\\ngsd=\\'git svn dcommit\\'\\ngsi=\\'git submodule init\\'\\ngsps=\\'git show --pretty=short --show-signature\\'\\ngsr=\\'git svn rebase\\'\\ngss=\\'git status -s\\'\\ngst=\\'git status\\'\\ngsta=\\'git stash save\\'\\ngstaa=\\'git stash apply\\'\\ngstd=\\'git stash drop\\'\\ngstl=\\'git stash list\\'\\ngstp=\\'git stash pop\\'\\ngsts=\\'git stash show --text\\'\\ngsu=\\'git submodule update\\'\\ngts=\\'git tag -s\\'\\ngtv=\\'git tag | sort -V\\'\\ngunignore=\\'git update-index --no-assume-unchanged\\'\\ngunwip=\\'git log -n 1 | grep -q -c \"\\-\\-wip\\-\\-\" && git reset HEAD~1\\'\\ngup=\\'git pull --rebase\\'\\ngupv=\\'git pull --rebase -v\\'\\ngwch=\\'git whatchanged -p --abbrev-commit --pretty=medium\\'\\ngwip=\\'git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit -m \"--wip--\"\\'\\nhistory=\\'fc -l 1\\'\\nl=\\'ls -lah\\'\\nla=\\'ls -lAh\\'\\nll=\\'ls -lh\\'\\nls=\\'ls --color=tty\\'\\nlsa=\\'ls -lah\\'\\nmd=\\'mkdir -p\\'\\nplease=sudo\\npo=popd\\npu=pushd\\nrd=rmdir\\nrun-help=man\\nwhich-command=whence', 'GREP_COLOR': '1;33', 'DESKTOP_SESSION': 'cinnamon', 'SESSION_MANAGER': 'local/ArchSystem:@/tmp/.ICE-unix/580,unix/ArchSystem:/tmp/.ICE-unix/580', 'USERNAME': 'eclipse', 'COLORTERM': 'truecolor', 'WINDOWID': '56623107', 'LESS': '-R', 'HOME': '/home/eclipse', 'PYTHONIOENCODING': 'utf-8', 'THEFUCK_DEBUG': 'true', 'GDMSESSION': 'cinnamon', 'SHELL': '/bin/zsh', 'LSCOLORS': 'exfxcxdxbxegedabagacad', 'LS_COLORS': 'di=34;40:ln=35;40:so=32;40:pi=33;40:ex=31;40:bd=34;46:cd=34;43:su=0;41:sg=0;46:tw=0;42:ow=0;43:', 'TERM': 'xterm-termite', 'GTK_MODULES': 'canberra-gtk-module', 'USER': 'eclipse', 'CINNAMON_VERSION': '3.0.7', 'GJS_DEBUG_OUTPUT': 'stderr', 'LOGNAME': 'eclipse', 'SHLVL': '0', 'VTE_VERSION': '4402', 'TZ': 'Europe/London', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'XDG_VTNR': '2', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '4306', 'LC_CTYPE': 'en_GB.UTF-8', 'XDG_SEAT': 'seat0', 'GTK_OVERLAY_SCROLLING': '1', 'DISPLAY': ':0', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'XDG_SESSION_DESKTOP': 'cinnamon', 'TF_ALIAS': 'fuck', 'OLDPWD': '/home/eclipse', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'GDM_LANG': 'en_GB.UTF-8', 'XDG_RUNTIME_DIR': '/run/user/1000', 'XDG_SESSION_ID': 'c2', 'MOZ_PLUGIN_PATH': '/usr/lib/mozilla/plugins', 'LC_ALL': 'C'}; took: 0:00:00.004522\nDEBUG: Importing rule: apt_get; took: 0:00:00.001308\nDEBUG: Importing rule: apt_get_search; took: 0:00:00.000615\nDEBUG: Importing rule: apt_invalid_operation; took: 0:00:00.001455\nDEBUG: Importing rule: brew_install; took: 0:00:00.000583\nDEBUG: Importing rule: brew_unknown_command; took: 0:00:00.000248\nDEBUG: Importing rule: brew_update_formula; took: 0:00:00.000850\nDEBUG: Importing rule: brew_upgrade; took: 0:00:00.000188\nDEBUG: Importing rule: cargo; took: 0:00:00.000165\nDEBUG: Importing rule: cargo_no_command; took: 0:00:00.000451\nDEBUG: Importing rule: cd_correction; took: 0:00:00.001939\nDEBUG: Importing rule: cd_mkdir; took: 0:00:00.000737\nDEBUG: Importing rule: cd_parent; took: 0:00:00.000168\nDEBUG: Importing rule: chmod_x; took: 0:00:00.000175\nDEBUG: Importing rule: composer_not_command; took: 0:00:00.000446\nDEBUG: Importing rule: cp_omitting_directory; took: 0:00:00.000737\nDEBUG: Importing rule: cpp11; took: 0:00:00.000440\nDEBUG: Importing rule: dirty_untar; took: 0:00:00.000478\nDEBUG: Importing rule: dirty_unzip; took: 0:00:00.000468\nDEBUG: Importing rule: django_south_ghost; took: 0:00:00.000170\nDEBUG: Importing rule: django_south_merge; took: 0:00:00.000162\nDEBUG: Importing rule: docker_not_command; took: 0:00:00.000767\nDEBUG: Importing rule: dry; took: 0:00:00.000167\nDEBUG: Importing rule: fix_alt_space; took: 0:00:00.000472\nDEBUG: Importing rule: fix_file; took: 0:00:00.003608\nDEBUG: Importing rule: git_add; took: 0:00:00.000880\nDEBUG: Importing rule: git_branch_delete; took: 0:00:00.000516\nDEBUG: Importing rule: git_branch_exists; took: 0:00:00.000673\nDEBUG: Importing rule: git_branch_list; took: 0:00:00.000985\nDEBUG: Importing rule: git_checkout; took: 0:00:00.000711\nDEBUG: Importing rule: git_diff_staged; took: 0:00:00.000918\nDEBUG: Importing rule: git_fix_stash; took: 0:00:00.000680\nDEBUG: Importing rule: git_help_aliased; took: 0:00:00.000630\nDEBUG: Importing rule: git_not_command; took: 0:00:00.000498\nDEBUG: Importing rule: git_pull; took: 0:00:00.000482\nDEBUG: Importing rule: git_pull_clone; took: 0:00:00.000483\nDEBUG: Importing rule: git_push; took: 0:00:00.000475\nDEBUG: Importing rule: git_push_force; took: 0:00:00.000482\nDEBUG: Importing rule: git_push_pull; took: 0:00:00.000518\nDEBUG: Importing rule: git_rebase_no_changes; took: 0:00:00.000345\nDEBUG: Importing rule: git_remote_seturl_add; took: 0:00:00.000358\nDEBUG: Importing rule: git_rm_recursive; took: 0:00:00.000486\nDEBUG: Importing rule: git_stash; took: 0:00:00.000473\nDEBUG: Importing rule: git_two_dashes; took: 0:00:00.000472\nDEBUG: Importing rule: go_run; took: 0:00:00.000449\nDEBUG: Importing rule: grep_arguments_order; took: 0:00:00.000444\nDEBUG: Importing rule: grep_recursive; took: 0:00:00.000434\nDEBUG: Importing rule: gulp_not_task; took: 0:00:00.000454\nDEBUG: Importing rule: has_exists_script; took: 0:00:00.000472\nDEBUG: Importing rule: heroku_not_command; took: 0:00:00.000446\nDEBUG: Importing rule: history; took: 0:00:00.000186\nDEBUG: Importing rule: java; took: 0:00:00.000450\nDEBUG: Importing rule: javac; took: 0:00:00.000546\nDEBUG: Importing rule: lein_not_task; took: 0:00:00.000725\nDEBUG: Importing rule: ln_no_hard_link; took: 0:00:00.000482\nDEBUG: Importing rule: ln_s_order; took: 0:00:00.000483\nDEBUG: Importing rule: ls_lah; took: 0:00:00.000433\nDEBUG: Importing rule: man; took: 0:00:00.000434\nDEBUG: Importing rule: man_no_space; took: 0:00:00.000168\nDEBUG: Importing rule: mercurial; took: 0:00:00.000471\nDEBUG: Importing rule: mkdir_p; took: 0:00:00.000509\nDEBUG: Importing rule: mvn_no_command; took: 0:00:00.000444\nDEBUG: Importing rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000447\nDEBUG: Importing rule: no_command; took: 0:00:00.000507\nDEBUG: Importing rule: no_such_file; took: 0:00:00.000181\nDEBUG: Importing rule: npm_wrong_command; took: 0:00:00.000736\nDEBUG: Importing rule: open; took: 0:00:00.000431\nDEBUG: Importing rule: pacman; took: 0:00:00.000611\nDEBUG: Importing rule: pacman_not_found; took: 0:00:00.000193\nDEBUG: Importing rule: pip_unknown_command; took: 0:00:00.000610\nDEBUG: Importing rule: python_command; took: 0:00:00.000476\nDEBUG: Importing rule: python_execute; took: 0:00:00.000525\nDEBUG: Importing rule: quotation_marks; took: 0:00:00.000168\nDEBUG: Importing rule: rm_dir; took: 0:00:00.000476\nDEBUG: Importing rule: rm_root; took: 0:00:00.000480\nDEBUG: Importing rule: sed_unterminated_s; took: 0:00:00.000448\nDEBUG: Importing rule: sl_ls; took: 0:00:00.000170\nDEBUG: Importing rule: ssh_known_hosts; took: 0:00:00.000476\nDEBUG: Importing rule: sudo; took: 0:00:00.000179\nDEBUG: Importing rule: switch_lang; took: 0:00:00.000212\nDEBUG: Importing rule: systemctl; took: 0:00:00.000726\nDEBUG: Importing rule: test.py; took: 0:00:00.000163\nDEBUG: Importing rule: tmux; took: 0:00:00.000438\nDEBUG: Importing rule: touch; took: 0:00:00.000452\nDEBUG: Importing rule: tsuru_login; took: 0:00:00.000446\nDEBUG: Importing rule: tsuru_not_command; took: 0:00:00.000449\nDEBUG: Importing rule: unknown_command; took: 0:00:00.000188\nDEBUG: Importing rule: vagrant_up; took: 0:00:00.000465\nDEBUG: Importing rule: whois; took: 0:00:00.000729\nDEBUG: Trying rule: dry; took: 0:00:00.000151\nDEBUG: Trying rule: test.py; took: 0:00:00.000059\nDEBUG: Trying rule: brew_update_formula; took: 0:00:00.000117\nDEBUG: Trying rule: cargo; took: 0:00:00.000058\nDEBUG: Trying rule: cargo_no_command; took: 0:00:00.000085\nDEBUG: Trying rule: cd_correction; took: 0:00:00.000087\nDEBUG: Trying rule: cd_mkdir; took: 0:00:00.000081\nDEBUG: Trying rule: cd_parent; took: 0:00:00.000054\nDEBUG: Trying rule: chmod_x; took: 0:00:00.000053\nDEBUG: Trying rule: composer_not_command; took: 0:00:00.000079\nDEBUG: Trying rule: cp_omitting_directory; took: 0:00:00.000080\nDEBUG: Trying rule: cpp11; took: 0:00:00.000078\nDEBUG: Trying rule: dirty_untar; took: 0:00:00.000078\nDEBUG: Trying rule: dirty_unzip; took: 0:00:00.000076\nDEBUG: Trying rule: django_south_ghost; took: 0:00:00.000057\nDEBUG: Trying rule: django_south_merge; took: 0:00:00.000052\nDEBUG: Trying rule: docker_not_command; took: 0:00:00.000076\nDEBUG: Trying rule: fix_alt_space; took: 0:00:00.000055\nDEBUG: Trying rule: fix_file; took: 0:00:00.000067\nDEBUG: Trying rule: git_add; took: 0:00:00.000077\nDEBUG: Trying rule: git_branch_delete; took: 0:00:00.000076\nDEBUG: Trying rule: git_branch_exists; took: 0:00:00.000071\nDEBUG: Trying rule: git_branch_list; took: 0:00:00.000071\nDEBUG: Trying rule: git_checkout; took: 0:00:00.000071\nDEBUG: Trying rule: git_diff_staged; took: 0:00:00.000071\nDEBUG: Trying rule: git_fix_stash; took: 0:00:00.000071\nDEBUG: Trying rule: git_help_aliased; took: 0:00:00.000070\nDEBUG: Trying rule: git_not_command; took: 0:00:00.000070\nDEBUG: Trying rule: git_pull; took: 0:00:00.000071\nDEBUG: Trying rule: git_pull_clone; took: 0:00:00.000074\nDEBUG: Trying rule: git_push; took: 0:00:00.000070\nDEBUG: Trying rule: git_push_pull; took: 0:00:00.000070\nDEBUG: Trying rule: git_rebase_no_changes; took: 0:00:00.000071\nDEBUG: Trying rule: git_remote_seturl_add; took: 0:00:00.000071\nDEBUG: Trying rule: git_rm_recursive; took: 0:00:00.000071\nDEBUG: Trying rule: git_stash; took: 0:00:00.000077\nDEBUG: Trying rule: git_two_dashes; took: 0:00:00.000071\nDEBUG: Trying rule: go_run; took: 0:00:00.000075\nDEBUG: Trying rule: grep_arguments_order; took: 0:00:00.000082\nDEBUG: Trying rule: grep_recursive; took: 0:00:00.000075\nDEBUG: Trying rule: gulp_not_task; took: 0:00:00.000075\nDEBUG: Trying rule: has_exists_script; took: 0:00:00.000074\nDEBUG: Trying rule: heroku_not_command; took: 0:00:00.000076\nDEBUG: Trying rule: java; took: 0:00:00.000075\nDEBUG: Trying rule: javac; took: 0:00:00.000074\nDEBUG: Trying rule: lein_not_task; took: 0:00:00.000080\nDEBUG: Trying rule: ln_no_hard_link; took: 0:00:00.000054\nDEBUG: Trying rule: ln_s_order; took: 0:00:00.000055\nDEBUG: Trying rule: ls_lah; took: 0:00:00.000073\nDEBUG: Trying rule: man; took: 0:00:00.000074\nDEBUG: Trying rule: mercurial; took: 0:00:00.000075\nDEBUG: Trying rule: mkdir_p; took: 0:00:00.000054\nDEBUG: Trying rule: mvn_no_command; took: 0:00:00.000075\nDEBUG: Trying rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000073\nDEBUG: Trying rule: no_such_file; took: 0:00:00.001180\nDEBUG: Trying rule: npm_wrong_command; took: 0:00:00.000095\nDEBUG: Trying rule: open; took: 0:00:00.000085\nDEBUG: Trying rule: pacman; took: 0:00:00.211637\nDEBUG: Trying rule: pacman_not_found; took: 0:00:00.000185\nDEBUG: Trying rule: pip_unknown_command; took: 0:00:00.000137\nDEBUG: Trying rule: python_command; took: 0:00:00.000063\nDEBUG: Trying rule: python_execute; took: 0:00:00.000086\nDEBUG: Trying rule: quotation_marks; took: 0:00:00.000058\nDEBUG: Trying rule: rm_dir; took: 0:00:00.000062\nDEBUG: Trying rule: sed_unterminated_s; took: 0:00:00.000083\nDEBUG: Trying rule: sl_ls; took: 0:00:00.000057\nDEBUG: Trying rule: ssh_known_hosts; took: 0:00:00.000082\nDEBUG: Trying rule: sudo; took: 0:00:00.000097\nDEBUG: Trying rule: switch_lang; took: 0:00:00.000095\nDEBUG: Trying rule: systemctl; took: 0:00:00.000090\nDEBUG: Trying rule: tmux; took: 0:00:00.000081\nDEBUG: Trying rule: touch; took: 0:00:00.000080\nDEBUG: Trying rule: tsuru_login; took: 0:00:00.000079\nDEBUG: Trying rule: tsuru_not_command; took: 0:00:00.000076\nDEBUG: Trying rule: unknown_command; took: 0:00:00.000365\nDEBUG: Trying rule: vagrant_up; took: 0:00:00.000081\nDEBUG: Trying rule: whois; took: 0:00:00.000080\nDEBUG: Trying rule: man_no_space; took: 0:00:00.000056\nDEBUG: Trying rule: no_command; took: 0:00:00.062330\n```\n. Just an update on this: I've noticed that it's most slow after not using it for a while. So if I use it one day, and then use shell normally for a while without using fuck, then use it, it will take a good four seconds, but immediately after this if I run it again, it will still lag, but only for about a second. By the way I'm using zsh.\n. ",
    "firedev": "Looks like you got to press \u2191 and  \u2193 first:\n```\n$ git comit -m \"hello again\"                                                                                                                                                 \ngit: 'comit' is not a git command. See 'git --help'.\nDid you mean this?\n    commit\n$ fuck                                                                                                                                                                       \ngit commit -m \"hello again\" [enter/\u2191/\u2193/ctrl+c]\n```\n\u2191 \u2193 enter\nerror: pathspec 'again\"' did not match any file(s) known to git.\n. I am using ZSH and can reproduce it any time. \n. Hi,\nIn fact it is the same even without \u2191 \u2193 enter:\n```\n$ git commit -m \"the fuck\"                                                                                                                                                 \nOn branch journal-dev-custom_errors-IN-477\nYour branch is up-to-date with 'origin/journal-dev-custom_errors-IN-477'.\nnothing to commit, working directory clean\n$ git comit -m \"the fuck\"                                                                                                                                                    \ngit: 'comit' is not a git command. See 'git --help'.\nDid you mean this?\n    commit\n$ fuck                                                                                                                                                                       \ngit commit -m \"the fuck\" [enter/ctrl+c]\nerror: pathspec 'fuck\"' did not match any file(s) known to git.\n```\n```\n$ which fuck                                                                                                                                                                 \nfuck: aliased to $(thefuck $(fc -ln -1))\n$ alias fuck\nfuck='$(thefuck $(fc -ln -1))'\n```\n. ",
    "MightyPork": "Small improvement, I tried \"time fuck\" and pressed ^C just when it appeared, and got 0.6s. So I think something like 0.5s. Maybe that's normal, not sure - I have SSD though, should be really fast...\n. Here it is:\n```\n$ git br\ngit: 'br' is not a git command. See 'git --help'.\nDid you mean one of these?\n    branch\n    var\n$ fuck\nDEBUG: Run with settings: {'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'no_colors': False,\n 'priority': {},\n 'require_confirmation': False,\n 'rules': [],\n 'wait_command': 3}\nDEBUG: Received stdout: \nDEBUG: Received stderr: 14:49:49.147308 git.c:558               trace: exec: 'git-br'\n14:49:49.147380 run-command.c:347       trace: run_command: 'git-br'\ngit: 'br' is not a git command. See 'git --help'.\nDid you mean one of these?\n    branch\n    var\nDEBUG: Call: git br; with env: {'HG': '/usr/bin/hg', 'SSH_AUTH_SOCK': '/tmp/ssh-KWPO5wntrdor/agent.1375', 'USER': 'ondra', 'GNUSTEP_FLATTENED': 'yes', 'LANG': 'C', 'GNUSTEP_HOST_CPU': 'x86_64', 'RUST_SRC_PATH': '/usr/src/rust/src/', 'XDG_CURRENT_DESKTOP': 'XFCE', 'COLORTERM': 'gnome-terminal', 'XDG_SEAT': 'seat0', 'PROMPT_DIRTRIM': '2', 'GIT_TRACE': '1', 'CLASSPATH': '/home/ondra/GNUstep/Library/Libraries/Java:/usr/lib/GNUstep/Libraries/Java', 'MAIL': '/var/spool/mail/ondra', 'GNUSTEP_LOCAL_ROOT': '/usr/Local', 'LIBRARY_COMBO': 'gnu-gnu-gnu', 'XDG_DATA_DIRS': '/usr/local/share:/usr/share', 'TERMINATOR_UUID': 'urn:uuid:a0affb3d-6a17-43bc-a273-00532f4912e8', 'GTK_MODULES': 'canberra-gtk-module', 'LD_LIBRARY_PATH': '/home/ondra/GNUstep/Library/Libraries:/usr/lib', 'STEAM_FRAME_FORCE_CLOSE': '1', 'GNUSTEP_HOST_VENDOR': 'unknown', 'GNUSTEP_HOST': 'x86_64-unknown-linux-gnu', 'ORBIT_SOCKETDIR': '/tmp/orbit-ondra', 'THEFUCK_DEBUG': 'true', 'MOZ_PLUGIN_PATH': '/usr/lib/mozilla/plugins', 'DBUS_SESSION_BUS_ADDRESS': 'unix:abstract=/tmp/dbus-L8UwioCx4H,guid=0e0bfbf1b8eb7be7b3c7d41055f27299', 'XDG_VTNR': '1', 'GLADE_PIXMAP_PATH': ':', 'GNUSTEP_HOST_OS': 'linux-gnu', 'GNUSTEP_NETWORK_ROOT': '/usr/Network', 'LOGNAME': 'ondra', 'XDG_SESSION_ID': 'c1', 'INFOPATH': '/usr/share/info::/home/ondra/GNUstep/Library/Documentation/info:', 'GUILE_LOAD_PATH': '/home/ondra/GNUstep/Library/Libraries/Guile:/usr/lib/GNUstep/Libraries/Guile', 'SESSION_MANAGER': 'local/x201:@/tmp/.ICE-unix/1363,unix/x201:/tmp/.ICE-unix/1363', 'LC_TIME': 'cs_CZ.UTF-8', 'XAUTHORITY': '/home/ondra/.Xauthority', 'QT_GRAPHICSSYSTEM': 'native', 'PS1': '\\[\\x1b[1m\\]\\[\\x1b[34m\\]\\w \\$ \\[\\x1b(B\\x1b[m\\]', 'TERM': 'xterm', 'LC_ALL': 'C', 'WINDOWID': '96468996', 'OLDPWD': '/srv/webroot-flowbox', 'GNUSTEP_MAKEFILES': '/usr/share/GNUstep/Makefiles', 'DISPLAY': ':0.0', 'HOME': '/home/ondra', 'GTK_IM_MODULE': 'xim', 'SHELL': '/bin/bash', 'SSH_AGENT_PID': '1376', 'XDG_CONFIG_DIRS': '/etc/xdg', 'PATH': '/home/ondra/.gem/ruby/2.2.0/bin:/home/ondra/GNUstep/Tools:/usr/local/sbin:/usr/local/bin:/usr/bin:/opt/android-sdk/platform-tools:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/home/ondra/bin:/home/ondra/.composer/vendor/bin', 'GLADE_CATALOG_PATH': ':', 'GNUSTEP_SYSTEM_ROOT': '/usr/System', 'XDG_RUNTIME_DIR': '/run/user/1000', 'GNUSTEP_PATHLIST': '/usr/System:/usr/Network:/usr/Local:/home/ondra/GNUstep', 'SHLVL': '4', 'XDG_MENU_PREFIX': 'xfce-', 'PWD': '/srv/webroot-flowbox/public', 'GLADE_MODULE_PATH': ':', 'GNUSTEP_IS_FLATTENED': 'yes', 'DESKTOP_SESSION': 'Xfce Session', 'GNUSTEP_USER_ROOT': '/home/ondra/GNUstep', 'MATHEMATICA_HOME': '/opt/mathematica', '_': '/usr/bin/thefuck'}; took: 0:00:00.016147\nDEBUG: Loaded rules: brew_install, brew_unknown_command, brew_upgrade, cargo, cargo_no_command, cd_correction, cd_mkdir, cd_parent, composer_not_command, cp_omitting_directory, cpp11, dirty_untar, dirty_unzip, django_south_ghost, django_south_merge, docker_not_command, dry, fix_alt_space, fix_file, git_add, git_branch_delete, git_branch_list, git_checkout, git_diff_staged, git_fix_stash, git_not_command, git_pull, git_pull_clone, git_push, git_push_pull, git_stash, go_run, grep_recursive, gulp_not_task, has_exists_script, heroku_not_command, history, java, javac, lein_not_task, ls_lah, man, man_no_space, mercurial, mkdir_p, no_command, no_such_file, open, pip_unknown_command, python_command, python_execute, quotation_marks, rm_dir, sed_unterminated_s, sl_ls, ssh_known_hosts, sudo, switch_lang, systemctl, test.py, tmux, tsuru_login, tsuru_not_command, unknown_command, vagrant_up, whois\nDEBUG: Trying rule: brew_install; took: 0:00:00.000028\nDEBUG: Trying rule: brew_unknown_command; took: 0:00:00.000012\nDEBUG: Trying rule: brew_upgrade; took: 0:00:00.000012\nDEBUG: Trying rule: cargo; took: 0:00:00.000012\nDEBUG: Trying rule: cargo_no_command; took: 0:00:00.000012\nDEBUG: Trying rule: cd_correction; took: 0:00:00.000014\nDEBUG: Trying rule: cd_mkdir; took: 0:00:00.000014\nDEBUG: Trying rule: cd_parent; took: 0:00:00.000012\nDEBUG: Trying rule: composer_not_command; took: 0:00:00.000011\nDEBUG: Trying rule: cp_omitting_directory; took: 0:00:00.000018\nDEBUG: Trying rule: cpp11; took: 0:00:00.000012\nDEBUG: Trying rule: dirty_untar; took: 0:00:00.000012\nDEBUG: Trying rule: dirty_unzip; took: 0:00:00.000012\nDEBUG: Trying rule: django_south_ghost; took: 0:00:00.000011\nDEBUG: Trying rule: django_south_merge; took: 0:00:00.000012\nDEBUG: Trying rule: docker_not_command; took: 0:00:00.000014\nDEBUG: Trying rule: dry; took: 0:00:00.000015\nDEBUG: Trying rule: fix_alt_space; took: 0:00:00.000014\nDEBUG: Trying rule: fix_file; took: 0:00:00.000028\nDEBUG: Trying rule: git_add; took: 0:00:00.000017\nDEBUG: Trying rule: git_branch_delete; took: 0:00:00.000014\nDEBUG: Trying rule: git_branch_list; took: 0:00:00.000017\nDEBUG: Trying rule: git_checkout; took: 0:00:00.000014\nDEBUG: Trying rule: git_diff_staged; took: 0:00:00.000017\nDEBUG: Trying rule: git_fix_stash; took: 0:00:00.000016\nDEBUG: Trying rule: git_not_command; took: 0:00:00.000016\nDEBUG: Trying rule: git_pull; took: 0:00:00.000014\nDEBUG: Trying rule: git_pull_clone; took: 0:00:00.000014\nDEBUG: Trying rule: git_push; took: 0:00:00.000014\nDEBUG: Trying rule: git_push_pull; took: 0:00:00.000014\nDEBUG: Trying rule: git_stash; took: 0:00:00.000015\nDEBUG: Trying rule: go_run; took: 0:00:00.000012\nDEBUG: Trying rule: grep_recursive; took: 0:00:00.000015\nDEBUG: Trying rule: gulp_not_task; took: 0:00:00.000015\nDEBUG: Trying rule: has_exists_script; took: 0:00:00.000036\nDEBUG: Trying rule: heroku_not_command; took: 0:00:00.000013\nDEBUG: Trying rule: history; took: 0:00:00.158519\nDEBUG: Trying rule: java; took: 0:00:00.000015\nDEBUG: Trying rule: javac; took: 0:00:00.000012\nDEBUG: Trying rule: lein_not_task; took: 0:00:00.000014\nDEBUG: Trying rule: ls_lah; took: 0:00:00.000013\nDEBUG: Trying rule: man; took: 0:00:00.000014\nDEBUG: Trying rule: man_no_space; took: 0:00:00.000012\nDEBUG: Trying rule: mercurial; took: 0:00:00.000013\nDEBUG: Trying rule: mkdir_p; took: 0:00:00.000014\nDEBUG: Trying rule: no_command; took: 0:00:00.000015\nDEBUG: Trying rule: no_such_file; took: 0:00:00.001485\nDEBUG: Trying rule: open; took: 0:00:00.000013\nDEBUG: Trying rule: pip_unknown_command; took: 0:00:00.000012\nDEBUG: Trying rule: python_command; took: 0:00:00.000018\nDEBUG: Trying rule: python_execute; took: 0:00:00.000013\nDEBUG: Trying rule: quotation_marks; took: 0:00:00.000012\nDEBUG: Trying rule: rm_dir; took: 0:00:00.000013\nDEBUG: Trying rule: sed_unterminated_s; took: 0:00:00.000012\nDEBUG: Trying rule: sl_ls; took: 0:00:00.000012\nDEBUG: Trying rule: ssh_known_hosts; took: 0:00:00.000016\nDEBUG: Trying rule: sudo; took: 0:00:00.000044\nDEBUG: Trying rule: switch_lang; took: 0:00:00.000013\nDEBUG: Trying rule: systemctl; took: 0:00:00.000015\nDEBUG: Trying rule: test.py; took: 0:00:00.000012\nDEBUG: Trying rule: tmux; took: 0:00:00.000012\nDEBUG: Trying rule: tsuru_login; took: 0:00:00.000012\nDEBUG: Trying rule: tsuru_not_command; took: 0:00:00.000012\nDEBUG: Trying rule: unknown_command; took: 0:00:00.000355\nDEBUG: Trying rule: vagrant_up; took: 0:00:00.000013\nDEBUG: Trying rule: whois; took: 0:00:00.000013\nDEBUG: Matched rules: git_not_command, history\ngit branch\nDEBUG: Total took: 0:00:00.389301\n  dev\n* history\n  master\n  meteogram\n  testing\n```\nI've changed the config file from default to:\n```\n\nThe default values are as follows. Uncomment and change to fit your needs.\nSee https://github.com/nvbn/thefuck#settings for more information.\n\nrequire_confirmation = False\nwait_command = 3\nrules = []\nno_colors = False\n```\n(also kinda weird that it says \"The default values are as follows\", when \"require_confirmation = False\" was in the file by default (commented out) and fuck used True...)\n. For the record, after deleting .bash_history, I get:\nDEBUG: Trying rule: history; took: 0:00:00.093100\n...\nDEBUG: Total took: 0:00:00.331774\nno not a very big improvement (if my assumption that it uses .bash_history is right)\n. ",
    "crimsdings": "3 seconds lag on no fucks given\n``` bash\ncrimson@silverserver:~$ time fuck\nNo fucks given\nreal    0m3.252s\nuser    0m0.192s\nsys     0m0.036s\n```\n. ",
    "josephfrazier": "Sorry you had trouble (and for the delay in response)! I'm closing this now that install.sh is deprecated (see https://github.com/nvbn/thefuck/commit/15bcd7f03f758a01f2db400ff1194b29a43d37f3). . Thanks for the review, @scorphus! I've made some changes addressing your comments.\n. When multiple suggestions are available, you can scroll between them using the up/down arrow keys. In this case, you'd type 'fuck', then press the up arrow key until you see the --help option.\nHowever, after further experimentation, I learned that man searches all sections if you don't explicitly provide one in your command, so I'll probably update this pull request so that it doesn't suggest a section when there was none provided, as you had originally requested in #546.\n. Cheers @scorphus! It was your comments on #561 that inspired me to do this. I figured it might save some effort going forward.\n. Thanks again for the comments, @scorphus! I made some more changes addressing them :)\n. Good call @scorphus, I did a lot more error-fixing and cleaned up the history :D \n. @nvbn, do you have any thoughts on this? Is there anything else that needs to be done to land it (other than fixing files that have been changed on the master branch)?. Great, thanks! I just pushed some changes that fix the files that had been updated on the master branch, but haven't rebased them yet. If everything looks good to you, let me know and I can git rebase -i --autosquash master to combine the fixup! commits with their referents and get rid of that Merge branch 'master' into flake8 commit.. Cheers, hopefully this will make it easier to ensure future contributions adhere to the code style.. Ah, that works too. Thanks!. Hmm, it looks like AppVeyor had some brief bugginess earlier. Here's a successful rebuild of the same commit: https://ci.appveyor.com/project/josephfrazier/thefuck/build/1.0.14. The WARNING lines are caused by https://github.com/idank/bashlex/issues/20\nThe other lines are a separate matter. It could be fixed by changing bashlex so that it does not try to create parsetab.py (see https://github.com/dabeaz/ply/issues/79#issuecomment-243572084), but after some informal testing, I'm worried this might make thefuck slower, since it would be rebuilding the parser table on every invocation, rather than loading from parsetab.py.\nPerhaps a better solution would be to make it so that thefuck can tell bashlex to put the parsetab.py file in ~/.config/thefuck/.. @nvbn Oops, I wasn't aware of the licensing conflict. Sorry about that! I'll open a new issue for finding an alternative solution to https://github.com/nvbn/thefuck/pull/580. Fixed in https://github.com/nvbn/thefuck/pull/764#event-1412005922, thanks @davidhart82!. This was fixed in https://github.com/nvbn/thefuck/pull/657, but hasn't been released yet. I'm not yet sure when the next release will be, but you could install from source in the mean time.. Sorry, but I'm not a fan of this one, personally. There are loads of places we could write \"fuck\" (or variations thereof, it's a versatile word!), and I don't really want to start adding it unnecessarily.. It looks like https://github.com/nvbn/thefuck/commit/08082e606be80b45a5738e60bf5ad7aaa9d206ee fixed the issue, so I'm closing this. Let me know if that's not the case, and I'll gladly re-open!. For what it's worth, we had previously tried using a more robust bash parser, but we stopped after discovering potential licensing issues. See here for details: https://github.com/nvbn/thefuck/issues/589. Thanks for the review @scorphus! I was also thinking they should be squashed together, so I went ahead and did it just now :). Thanks for the report, I've been experiencing this as well! It looks like git_push is the relevant rule here: https://github.com/nvbn/thefuck/blob/629056077f3d9c4055821736e9a3479e38c91584/thefuck/rules/git_push.py. @davidhart82, would you mind posting the local rule you've added? We might be able to simply use it instead of the current one. I'd be happy to handle the PR myself, if you just show your code.. I realized that simply using the git suggestion might not include any additional options the user passed, since I'm not sure if the git suggestion accounts for those. Could you elaborate on the edge cases?. I'm personally okay with dropping Python 3.3 support, but I pushed https://github.com/nvbn/thefuck/commit/f966ecd4f5b8221ee15e843f5ec287e1f7cca940 to get the tests working while we decide on that.. Yeah, I agree we should drop Python 3.3 and unfreeze pytest. I just pushed https://github.com/nvbn/thefuck/commit/f966ecd4f5b8221ee15e843f5ec287e1f7cca940 to master so that I could unblock myself on https://github.com/nvbn/thefuck/pull/745, and to ensure that any new PRs wouldn't fail for no fault of their own (like this one did), just in case there was any debate over dropping Python 3.3.\nIt sounds like the three of us are in agreement though, so I'll open a new PR reverting f966ecd4f5b8221ee15e843f5ec287e1f7cca940 and dropping Python 3.3 from the tests.. It's hard to say without more information, but it seems like something might be messed up (or \"confused\") with your Python installation. As a workaround, you could try to install the Homebrew version (which should bring its own Python with it) using Linuxbrew. This is how I do it, and it works well for me.. Thanks!. Thanks!. Thanks for the fix @davidhart82 (and for testing it, @andschwa)! This looks good to me, but I'll give a little more time for the other maintainers to have a look, if they wish. I don't use fish myself, so I'm not as familiar with this area of the code.. Thanks @davidhart82! I just made a slight tweak (and probably should do the same for other rules).. Yeah, I guess it would be better to filter out the script_parts that start with - before checking the one at a particular position. I'm not sure if this has been an issue in practice, but if you'd like to implement it, feel free to submit a PR.. The tests are failing because each rule is required to be listed in the README, so you just need to add it right after git_help_aliased.. I took the liberty of adding the README entry. Thanks for the contribution!. I was thinking the same thing when I saw https://github.com/nvbn/thefuck/pull/764#discussion_r159547506. I think it'd be useful, and would definitely welcome further work! I just merged #764, so this PR can build off of the new master and use git_commit_amend as the first rule to be tested.\nIt would also be nice to have functional tests that ensure the status code is actually being set properly, since the rule tests won't cover that.. If you're having trouble with fuck running slowly, maybe these issues would help (found by searching the issues for \"slow\"):\n\nhttps://github.com/nvbn/thefuck/issues/353 - Command is slow\nhttps://github.com/nvbn/thefuck/issues/576 - \"thefuck\" typically loads slower that I manually type the command\nhttps://github.com/nvbn/thefuck/issues/660 - Slow execution time. This is the same issue as https://github.com/nvbn/thefuck/issues/791, but with Python 3, right?. Thanks for confirming. I'm unable to reproduce this one myself, so I don't know how much I can help, unfortunately :/\n\nEDIT: Maybe try it inside a docker container or a VM and see if you can reproduce it there?. Glad you figured it out! For reference, if you use brew to install thefuck, you can install the master branch with brew install thefuck --HEAD. This is what I do when I want to use merged but unreleased changes.. Thanks again, @b1skit!. Thanks for the PR and demo animation, @payton, this looks potentially very useful! Could you fix the lint errors shown in the build (for example., at the bottom of https://ci.appveyor.com/project/nvbn/thefuck/build/job/cfarsivh5chvk9ve)?. I considered that alternative as well. However, after noticing that some multiline strings also have trailing whitespace (see 432878bd773319cf034d3070697e8601d4201b6d), I thought it would be easier to just use # noqa to ignore both the whitespace errors and the indent errors. My thought process was that it wouldn't be good to edit the string to remove the trailing whitespace, since it was likely pasted from a terminal and we should preserve its formatting. As far as I know, there's no way to have flake8 ignore just the trailing whitespace in multiline strings while still emitting indent errors for them, unfortunately.\nOf course, preserving trailing whitespace inside multiline strings may not be all that important (it's hard to imagine a rule that relies on trailing whitespace for matching to work correctly), so maybe we should remove it, remove the # noqa comments, and indent the leading triple quotes as you're suggesting. Here's a commit showing what that might look like: https://github.com/josephfrazier/thefuck/commit/25efd1b670c8f9694f6e5617fe4c38666f9b0704. I'm not sure if I like the way tests/rules/test_fix_file.py looks, though :/\n. Specifically, it was the unindented multiline strings that were bugging me. To avoid those, we could use textwrap.dedent to remove the common leading whitespace from the string contents. I've added some commits that show two ways this could be done:\n1. https://github.com/josephfrazier/thefuck/commit/0725c9e3776e85f292716ef09b250193fe5892a0\n2. https://github.com/josephfrazier/thefuck/commit/548c4bcec621ac271c29b7060e0b469a7b69a679\nWhat do you think?\n. Oh, so it does! I think that's the best option so far, and I've updated the branch accordingly :D \n. I think this should be 2015-2018 instead.. Instead of replacing just single quotes, I think we should use shell.quote here.. I'm not sure how this change relates to the tests that were added. If I undo the changes on this line, the new tests still pass. Can you help me understand how this fixes the issue?. Oh, I had overlooked the fact that the command contains other arguments as well. Thanks for pointing that out. This seems fine to me now.. This test and the one above are duplicates of the previous one. Other than that, this looks good to me!. Yeah, I think we may as well go ahead and list them all.. \nI'm thinking we should just make this line be:\npython\n            and '--set-upstream' in command.script_parts)\nin order to allow --set-upstream to occur elsewhere than right after push. Unless someone names a branch --set-upstream, this should be fine.\n\nEDIT: Nevermind, I wasn't paying attention to the fact that the output was being tested.. I think we can just split on os.pathsep here, instead of defining paths above, see https://stackoverflow.com/questions/1499019/how-to-get-the-path-environment-variable-separator-in-python/1499033#1499033. I think we should keep the comma between clauses. That is:\n\nThe Fuck is a magnificent app inspired by a @liamosaur tweet, that corrects errors in previous console commands.\n\ninstead of:\n\nThe Fuck is a magnificent app inspired by a @liamosaur tweet that corrects errors in previous console commands.\n\nto avoid suggesting that the tweet corrects errors :P . Should we just switch to putting a ; on the last line (instead of .), so the diff can be smaller going forward?. Hmm yeah, that makes sense too. Alternatively, since we already have the bullet points, maybe it makes sense to remove the semicolon/period entirely? Obviously this would be a separate change.. Thanks, I'll wait until this is closed to make that change (if I remember). ",
    "hchokshi": "I'm also experiencing the same issue using Powershell and the msysgit bundled with Github for Desktop. Shows the correct command suggestion, but doesn't take any input after that.\nI'm also seeing \\u2191 and \\u2198 in the console like you are, here. I doubt this is intentional. \nThese issues are experienced directly opening Powershell / bash and using them through cmder.\nThe Fuck 3.1 using Python 3.5.0 on Windows 10 x64.\nI installed psutil using a wheel from http://www.lfd.uci.edu/~gohlke/pythonlibs/ because I got errors using the MSYS gcc I have installed and didn't want to install VS 2015.\n. ",
    "TAGC": "I'm experiencing this as well (through both Cygwin and Git Bash for Windows).\n. ",
    "Bioto": "Try:\nsudo chown -v $(whoami):staff ~/.zsh_history | chmod 740 ~/.zsh_history\nThat should make you the owner of ~/.zsh_history and give you full access to the file.\n. ",
    "michalgnacek": "Thanks a lot, worked right away!\ud83d\udc4d\n. ",
    "ariefbayu": "in my case, it gives the following:\n- mkdir -p ,, && cd ,,\n- mkdir -p ,, && cd ,,\n- cd ..\n. ",
    "DominikAngerer": "Yes it is :+1: \nbtw. no it isn't :)\n. ",
    "jucor": "Problem reproduced here:\n\nSteps to reproduce:\n1. run a vim command, e.g. 'vim test'\n1. exit vim (that's :wq for the emacsers out here), back to the shell\n3. call fuck\nResult:\n- See screenshot\n- No local echo anymore at the prompt\n- No line returns\n- Need to call reset to put the term back into proper shape\nResult expected\n- Having a working prompt\nUsing\n-  iTerm 2, Build 2.1.4\n- thefuck --version gives: The Fuck 3.2 using Python 2.7.10\n- debug output (messed up because of the bug ruining the output)\n  jucor@jucor-macbookpro:~$ export THEFUCK_DEBUG=true\n  jucor@jucor-macbookpro:~$ vim test\n  jucor@jucor-macbookpro:~$ fuck\n  DEBUG: Run with settings: {'debug': True,\n  'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n  'exclude_rules': [],\n  'no_colors': False,\n  'priority': {},\n  'require_confirmation': True,\n  'rules': [<object object at 0x102093160>],\n  'user_dir': PosixPath('/Users/jucor/.config/thefuck'),\n  'wait_command': 3}\n  DEBUG: Execution timed out!\n                         DEBUG: Call: vim test; with env: {'_': '/Users/jucor/homebrew/bin/thefuck', 'HOMEBREW_GITHUB_API_TOKEN': '560f7141b9d6ceeabc2be6b82735b19c28555a2a', '__CF_USER_TEXT_ENCODING': '0x39A9A:0x0:0x0', 'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'ITERM_PROFILE': 'Default', 'CPATH': '/Users/jucor/homebrew/include:', 'LOGNAME': 'jucor', 'USER': 'jucor', 'HOME': '/Users/jucor', 'PATH': '/Users/jucor/anaconda/bin:/Users/jucor/usr/bin:/Users/jucor/homebrew/bin:/Users/jucor/.luarocks/bin:/Users/jucor/torch/bin:/Applications/RStudio.app/Contents/MacOS:/Users/jucor/homebrew/bin:/Users/jucor/bin:/Users/jucor/homebrew/sbin:/usr/local/git/current/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/opt/X11/bin:/Library/TeX/texbin', 'CMAKE_PREFIX_PATH': '/Users/jucor/homebrew:', 'DISPLAY': '/private/tmp/com.apple.launchd.0qGUiO5f2h/org.macosforge.xquartz:0', 'TERM_PROGRAM': 'iTerm.app', 'LANG': 'C', 'THEFUCK_DEBUG': 'true', 'TERM': 'xterm-256color', 'SHELL': '/bin/bash', 'COLORFGBG': '7;0', 'STOW_DIR': '/Users/jucor/usr/stow', 'SHLVL': '1', 'XPC_FLAGS': '0x0', 'ITERM_SESSION_ID': 'w0t0p0', 'GIT_TRACE': '1', 'EDITOR': '/usr/bin/vim', 'LUA_PATH': '/Users/jucor/.luarocks/share/lua/5.1/?/init.lua;/Users/jucor/Software/Whetlab-Lua-Client/?.lua;;./?/init.lua;?.lua;;', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.jI2YrAMvKV/Listeners', 'PYTHONPATH': '/Users/jucor/homebrew/Cellar/thefuck/3.2/libexec/lib/python2.7/site-packages:/Users/jucor/homebrew/Cellar/thefuck/3.2/libexec/vendor/lib/python2.7/site-packages', 'XPC_SERVICE_NAME': '0', 'LUA_CPATH': '/Users/jucor/.luarocks/lib/lua/5.1/?.so;;', 'RSTUDIO_WHICH_R': '/Users/jucor/homebrew/bin/R', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.RxHxbAJNKA/Render', 'PKG_CONFIG_PATH': '/Users/jucor/homebrew/lib/pkgconfig:', 'LC_ALL': 'C', 'TMPDIR': '/var/folders/00/1sn6h000h01000cxqpysvccm0076mt/T/', 'LUA_HISTORY': '/Users/jucor/.luahist', 'BASH_FUNC_luarocks_update_all%%': '() {  function _luarocks_update () \\n { \\n local tree=\"$1\";\\n local prefix=\"$2\";\\n ${prefix} sh -c \"luarocks list --porcelain --tree=${tree}       | awk \\'{print \\\\$1}\\'       | xargs -n1 luarocks install --tree=${tree}\"\\n };\\n echo \\'Updating global rocks...\\';\\n _luarocks_update \"/usr\" \"sudo\";\\n echo \\'\\';\\n echo \\'Updating local rocks...\\';\\n _luarocks_update \"$HOME/usr\"\\n}', 'HISTCONTROL': 'ignoreboth', 'PWD': '/Users/jucor', 'VERSIONER_PYTHON_VERSION': '2.7'}; took: 0:00:03.027775\n                                                                  DEBUG: Importing rule: apt_get; took: 0:00:00.000335\n                                      DEBUG: Importing rule: apt_get_search; took: 0:00:00.000356\n                 DEBUG: Importing rule: brew_install; took: 0:00:00.000425\n                                                                          DEBUG: Importing rule: brew_unknown_command; took: 0:00:00.000100\n                                                           DEBUG: Importing rule: brew_upgrade; took: 0:00:00.000044\n                                    DEBUG: Importing rule: cargo; took: 0:00:00.000041\n      DEBUG: Importing rule: cargo_no_command; took: 0:00:00.000221\n                                                                   DEBUG: Importing rule: cd_correction; took: 0:00:00.001093\n                                             DEBUG: Importing rule: cd_mkdir; took: 0:00:00.000304\n                  DEBUG: Importing rule: cd_parent; took: 0:00:00.000042\n                                                                        DEBUG: Importing rule: composer_not_command; took: 0:00:00.000188\n                                                         DEBUG: Importing rule: cp_omitting_directory; took: 0:00:00.000315\n                                           DEBUG: Importing rule: cpp11; took: 0:00:00.000185\n             DEBUG: Importing rule: dirty_untar; took: 0:00:00.001527\n                                                                     DEBUG: Importing rule: dirty_unzip; took: 0:00:00.000283\n                                             DEBUG: Importing rule: django_south_ghost; took: 0:00:00.000056\n                            DEBUG: Importing rule: django_south_merge; took: 0:00:00.000050\n           DEBUG: Importing rule: docker_not_command; took: 0:00:00.000508\n                                                                          DEBUG: Importing rule: dry; took: 0:00:00.000042\n                                          DEBUG: Importing rule: fix_alt_space; took: 0:00:00.000250\n                    DEBUG: Importing rule: fix_file; took: 0:00:00.002057\n                                                                         DEBUG: Importing rule: git_add; took: 0:00:00.000438\n                                             DEBUG: Importing rule: git_branch_delete; took: 0:00:00.000204\n                           DEBUG: Importing rule: git_branch_list; took: 0:00:00.000187\n       DEBUG: Importing rule: git_checkout; took: 0:00:00.000229\n                                                                DEBUG: Importing rule: git_diff_staged; took: 0:00:00.000233\n                                            DEBUG: Importing rule: git_fix_stash; took: 0:00:00.000229\n                      DEBUG: Importing rule: git_not_command; took: 0:00:00.000198\n  DEBUG: Importing rule: git_pull; took: 0:00:00.000309\n                                                       DEBUG: Importing rule: git_pull_clone; took: 0:00:00.000241\n                                  DEBUG: Importing rule: git_push; took: 0:00:00.000226\n       DEBUG: Importing rule: git_push_force; took: 0:00:00.000229\n                                                                  DEBUG: Importing rule: git_push_pull; took: 0:00:00.000227\n                                            DEBUG: Importing rule: git_stash; took: 0:00:00.000212\n                  DEBUG: Importing rule: git_two_dashes; took: 0:00:00.000233\n                                                                             DEBUG: Importing rule: go_run; took: 0:00:00.000215\n                                                DEBUG: Importing rule: grep_recursive; took: 0:00:00.000212\n                           DEBUG: Importing rule: gulp_not_task; took: 0:00:00.000230\n     DEBUG: Importing rule: has_exists_script; took: 0:00:00.000219\n                                                                   DEBUG: Importing rule: heroku_not_command; took: 0:00:00.000208\n                                                  DEBUG: Importing rule: history; took: 0:00:00.000185\n                      DEBUG: Importing rule: java; took: 0:00:00.000186\n                                                                       DEBUG: Importing rule: javac; took: 0:00:00.000185\n                                         DEBUG: Importing rule: lein_not_task; took: 0:00:00.000306\n                   DEBUG: Importing rule: ls_lah; took: 0:00:00.000182\n                                                                      DEBUG: Importing rule: man; took: 0:00:00.000218\n                                      DEBUG: Importing rule: man_no_space; took: 0:00:00.000043\n               DEBUG: Importing rule: mercurial; took: 0:00:00.000188\n                                                                     DEBUG: Importing rule: mkdir_p; took: 0:00:00.000181\n                                         DEBUG: Importing rule: mvn_no_command; took: 0:00:00.000175\n                    DEBUG: Importing rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000185\n            DEBUG: Importing rule: no_command; took: 0:00:00.000190\n                                                                   DEBUG: Importing rule: no_such_file; took: 0:00:00.000073\n                                            DEBUG: Importing rule: open; took: 0:00:00.000180\n             DEBUG: Importing rule: pacman; took: 0:00:00.000419\n                                                                DEBUG: Importing rule: pacman_not_found; took: 0:00:00.000090\n                                             DEBUG: Importing rule: pip_unknown_command; took: 0:00:00.000314\n                             DEBUG: Importing rule: python_command; took: 0:00:00.000191\n        DEBUG: Importing rule: python_execute; took: 0:00:00.000180\n                                                                   DEBUG: Importing rule: quotation_marks; took: 0:00:00.000041\n                                               DEBUG: Importing rule: rm_dir; took: 0:00:00.000196\n                  DEBUG: Importing rule: rm_root; took: 0:00:00.000186\n                                                                      DEBUG: Importing rule: sed_unterminated_s; took: 0:00:00.000182\n                                                     DEBUG: Importing rule: sl_ls; took: 0:00:00.000039\n                       DEBUG: Importing rule: ssh_known_hosts; took: 0:00:00.000189\n   DEBUG: Importing rule: sudo; took: 0:00:00.000120\n                                                    DEBUG: Importing rule: switch_lang; took: 0:00:00.000064\n                            DEBUG: Importing rule: systemctl; took: 0:00:00.000304\n  DEBUG: Importing rule: test.py; took: 0:00:00.000038\n                                                      DEBUG: Importing rule: tmux; took: 0:00:00.000183\n                       DEBUG: Importing rule: touch; took: 0:00:00.000178\n                                                                         DEBUG: Importing rule: tsuru_login; took: 0:00:00.000187\n                                                 DEBUG: Importing rule: tsuru_not_command; took: 0:00:00.000177\n                               DEBUG: Importing rule: unknown_command; took: 0:00:00.000044\n           DEBUG: Importing rule: vagrant_up; took: 0:00:00.000177\n                                                                  DEBUG: Importing rule: whois; took: 0:00:00.000236\n                                    DEBUG: Trying rule: dirty_unzip; took: 0:00:00.000416\n         No fucks given\n                       DEBUG: Total took: 0:00:03.055213\n                                                        jucor@jucor-macbookpro:~$\n. ",
    "ls0f": "I have no idea why  checks  failed.\n. @nvbn Review the pull request :)\n. @nvbn I just want to make certain that the history_limit variable is digit. :)\nBefore i open the pull request. I have a simple test. if i don't set the history limit , it cost more than one second to match the closest  command\uff0csometimes worse. when I set the history_limit to 2000,it will just takes 0.1s or so. So this effect is what I want.\nAny way, I will test the branch 394-history-limit and @ you\n. @nvbn i just try the branch 394-history-limit.\nif i not set THEFUCK_HISTORY_LIMIT.\nDEBUG: Trying rule: history; took: 0:00:01.225300\nwhen i set THEFUCK_HISTORY_LIMIT=2000\nDEBUG: Trying rule: history; took: 0:00:00.343468\nmore info:\n\u279c  thefuck git:(394) \u2717 wc -l ~/.zsh_history\n   10027 /Users/superadmin/.zsh_history\n. @nvbn  I think so. :)\n. nice:)\n. @nvbn Python2.7 and have merged the newest master code\n```\n\u21d2  git commt -am \"\u54c8\u54c8\"\ngit: 'commt' is not a git command. See 'git --help'.\nDid you mean this?\n    commit\nzhuo@lovedboy:~/Desktop/git/thefuck|master\u26a1\n\u21d2  fuck\n[WARN] Rule dry:\nTraceback (most recent call last):\n  File \"/Users/zhuo/git/thefuck/thefuck/types.py\", line 222, in is_match\n    if compatibility_call(self.match, command):\n  File \"/Users/zhuo/git/thefuck/thefuck/utils.py\", line 255, in compatibility_call\n    return fn(*args)\n  File \"/Users/zhuo/git/thefuck/thefuck/rules/dry.py\", line 2, in match\n    split_command = command.script_parts\n  File \"/Users/zhuo/git/thefuck/thefuck/types.py\", line 35, in script_parts\n    self, sys.exc_info()))\n  File \"/Users/zhuo/git/thefuck/thefuck/types.py\", line 48, in repr\n    self.script, self.stdout, self.stderr)\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 15-16: ordinal not in range(128)\n\n```\n\u21d2  echo $PYTHONIOENCODING\nutf-8\n. @scorphus works nice now.\n. when i run git commt -am \"\u4f60\u597d\" then fuck will get follow error msg:\nTraceback (most recent call last):\n  File \"/Users/superadmin/Desktop/git/thefuck/thefuck/types.py\", line 222, in is_match\n    if compatibility_call(self.match, command):\n  File \"/Users/superadmin/Desktop/git/thefuck/thefuck/utils.py\", line 242, in compatibility_call\n    return fn(*args)\n  File \"<decorator-gen-103>\", line 2, in match\n  File \"/Users/superadmin/Desktop/git/thefuck/thefuck/specific/sudo.py\", line 10, in sudo_support\n    return fn(command)\n  File \"/Users/superadmin/Desktop/git/thefuck/thefuck/rules/no_command.py\", line 8, in match\n    return (command.script_parts\n  File \"/Users/superadmin/Desktop/git/thefuck/thefuck/types.py\", line 35, in script_parts\n    self, sys.exc_info()))\n  File \"/Users/superadmin/Desktop/git/thefuck/thefuck/types.py\", line 48, in __repr__\n    self.script, self.stdout, self.stderr)\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 15-16: ordinal not in range(128)\n. @scorphus Yep. The latest 3.2 version don't support Chinese. :)\n. @scorphus If you're handling this, I am free.\n. @nvbn  #398 Finally,both py2 and py3 are Travis CI build passed \n. @scorphus :)\n. @scorphus Okay.\n. @nvbn  history_limit &ndash numeric value of how many history commands will be scanned, like 2000; has a syntax mistake need be fixed.\n. @scorphus great works.\n. ",
    "andyxning": "Here it is.\n```\n~/.bashrc: executed by bash(1) for non-login shells.\nsee /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\nfor examples\nIf not running interactively, don't do anything\ncase $- in\n    i) ;;\n      *) return;;\nesac\ndon't put duplicate lines or lines starting with space in the history.\nSee bash(1) for more options\nHISTCONTROL=ignoreboth\nappend to the history file, don't overwrite it\nshopt -s histappend\nfor setting history length see HISTSIZE and HISTFILESIZE in bash(1)\nHISTSIZE=1000\nHISTFILESIZE=2000\ncheck the window size after each command and, if necessary,\nupdate the values of LINES and COLUMNS.\nshopt -s checkwinsize\nIf set, the pattern \"**\" used in a pathname expansion context will\nmatch all files and zero or more directories and subdirectories.\nshopt -s globstar\nmake less more friendly for non-text input files, see lesspipe(1)\n[ -x /usr/bin/lesspipe ] && eval \"$(SHELL=/bin/sh lesspipe)\"\nset variable identifying the chroot you work in (used in the prompt below)\nif [ -z \"${debian_chroot:-}\" ] && [ -r /etc/debian_chroot ]; then\n    debian_chroot=$(cat /etc/debian_chroot)\nfi\nset a fancy prompt (non-color, unless we know we \"want\" color)\ncase \"$TERM\" in\n    xterm-color) color_prompt=yes;;\nesac\nuncomment for a colored prompt, if the terminal has the capability; turned\noff by default to not distract the user: the focus in a terminal window\nshould be on the output of commands, not on the prompt\nforce_color_prompt=yes\nif [ -n \"$force_color_prompt\" ]; then\n    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then\n    # We have color support; assume it's compliant with Ecma-48\n    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such\n    # a case would tend to support setf rather than setaf.)\n    color_prompt=yes\n    else\n    color_prompt=\n    fi\nfi\nif [ \"$color_prompt\" = yes ]; then\n    PS1='${debian_chroot:+($debian_chroot)}[\\033[01;32m]\\u@\\h[\\033[00m]:[\\033[01;34m]\\w[\\033[00m]\\$ '\nelse\n    PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ '\nfi\nunset color_prompt force_color_prompt\nIf this is an xterm set the title to user@host:dir\ncase \"$TERM\" in\nxterm|rxvt)\n    PS1=\"[\\e]0;${debian_chroot:+($debian_chroot)}\\u@\\h: \\w\\a]$PS1\"\n    ;;\n*)\n    ;;\nesac\nenable color support of ls and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n    test -r ~/.dircolors && eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n    alias ls='ls --color=auto'\n    #alias dir='dir --color=auto'\n    #alias vdir='vdir --color=auto'\nalias grep='grep --color=auto'\nalias fgrep='fgrep --color=auto'\nalias egrep='egrep --color=auto'\n\nfi\nsome more ls aliases\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\nAdd an \"alert\" alias for long running commands.  Use like so:\nsleep 10; alert\nalias alert='notify-send --urgency=low -i \"$([ $? = 0 ] && echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s[0-9]+\\s//;s/[;&|]\\s*alert$//'\\'')\"'\nAlias definitions.\nYou may want to put all your additions into a separate file like\n~/.bash_aliases, instead of adding them here directly.\nSee /usr/share/doc/bash-doc/examples in the bash-doc package.\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\nenable programmable completion features (you don't need to enable\nthis, if it's already enabled in /etc/bash.bashrc and /etc/profile\nsources /etc/bash.bashrc).\nif ! shopt -oq posix; then\n  if [ -f /usr/share/bash-completion/bash_completion ]; then\n    . /usr/share/bash-completion/bash_completion\n  elif [ -f /etc/bash_completion ]; then\n    . /etc/bash_completion\n  fi\nfi\nalias binrm=\"/bin/rm -i\"\nmkdir -p /tmp/ssh\neval \"$(thefuck --alias)\"\n```\n. ",
    "chfw": "the same issue on centos\n. ",
    "mattgrande": "On CentOS, you probably have an old version of Python. (That's what my problem with CentOS is, at least)\n. @ronanamsterdam - There's no need to bump a three year old, closed, ticket just to complain about how offended people are.. $ brew --version\n0.9.5\n$ brew search thefuck\nNo formula found for \"thefuck\".\nSearching pull requests...\nClosed pull requests:\nthefuck 3.2 (https://github.com/Homebrew/homebrew/pull/45665)\nthefuck 3.1 (https://github.com/Homebrew/homebrew/pull/44753)\nthefuck 3.0 (https://github.com/Homebrew/homebrew/pull/43784)\nthefuck 2.8 (https://github.com/Homebrew/homebrew/pull/43246)\nthefuck: tweak outdated alias (https://github.com/Homebrew/homebrew/pull/42914)\nthefuck 2.7 (https://github.com/Homebrew/homebrew/pull/42778)\nthefuck 2.6 (https://github.com/Homebrew/homebrew/pull/42308)\nthefuck 2.5.6 (https://github.com/Homebrew/homebrew/pull/42248)\nthefuck 2.4 (https://github.com/Homebrew/homebrew/pull/42123)\nthefuck 2.3 (https://github.com/Homebrew/homebrew/pull/41997)\nthefuck.rb: fix deprecated syntax in caveat (https://github.com/Homebrew/homebrew/pull/42920)\nthefuck 1.48 (https://github.com/Homebrew/homebrew/pull/41605)\nthefuck 1.46 (https://github.com/Homebrew/homebrew/pull/40467)\nthefuck 1.45 (https://github.com/Homebrew/homebrew/pull/40384)\nthefuck 1.44 (https://github.com/Homebrew/homebrew/pull/40165)\nthefuck 1.43 (https://github.com/Homebrew/homebrew/pull/40060)\nthefuck 1.42 (https://github.com/Homebrew/homebrew/pull/39916)\nthefuck 1.40 (https://github.com/Homebrew/homebrew/pull/39662)\nthefuck 1.29 (https://github.com/Homebrew/homebrew/pull/38995)\nthefuck 1.26 (https://github.com/Homebrew/homebrew/pull/38927)\nI'll try a brew update and get back to you...\n. Alright, my brew was all messed up apparently, but after a few runs of brew doctor I was finally able to update, and after that, thefuck installed fine.\n. You're a swell guy, @mcarton.\n(You're alright too, @nvbn)\n. I'd also like to see yarn rm suggest yarn remove, personally.. ",
    "rakshazi": "@nvbn here is it:\n```\nGeneral config\nexport LANG=en_US.UTF-8\nexport PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:$PATH\"\nZSH_THEME=\"pygmalion\"\nexport EDITOR='vim'\nexport ZSH=$HOME/.zsh\nexport THEFUCK_DEBUG=true\nDisable AutoUpdate prompt\nDISABLE_UPDATE_PROMPT=true\nPlugins\nplugins=(copydir, copyfile, cp, git, git-prompt, git-extras, git-remote-branch, gitfast, github, gitignore, history, history-substring-search, sudo, zsh-syntax-highlighting, colored-man, colorize, extract, screen, vi-mode, mercurial, composer)\nHotkeys\nvi style\nbindkey -v\n\nemacs style\nbindkey -e\nAliases\nConsole tools\nalias ls='ls --color=auto'\nalias grep='grep --colour=auto'\n\nAutocomplete\nautoload -U compinit promptinit\ncompinit\npromptinit\n\nJust promt dir path to cd\nsetopt autocd\n\nShow autocomplete menu\nzstyle ':completion:*' menu select=long-list select=0\nzstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}\n\nCorrect input\nsetopt CORRECT_ALL\n\nHistory\nHistory file\nexport HISTFILE=~/.zsh_history\n\nMax commands saved in session\nexport HISTSIZE=1000\nexport SAVEHIST=$HISTSIZE\n\nEnable commands history\nsetopt APPEND_HISTORY\n\nRemove duplicates, emty strings, etc.\nsetopt HIST_IGNORE_ALL_DUPS\nsetopt HIST_IGNORE_SPACE\nsetopt HIST_REDUCE_BLANKS\n\nHelp\nautoload -U run-help\nautoload run-help-git\nautoload run-help-svn\nautoload run-help-svk\nalias help=run-help\n\nFunctions\nCreate archive\npk () {\n    if [ $1 ] ; then\n        case $1 in\n            tbz)       tar cjvf $2.tar.bz2 $2      ;;\n    tgz)       tar czvf $2.tar.gz  $2       ;;\n    tar)      tar cpvf $2.tar  $2       ;;\n    bz2)    bzip $2 ;;\n    gz)        gzip -c -9 -n $2 > $2.gz ;;\n    zip)       zip -r $2.zip $2   ;;\n    7z)        7z a $2.7z $2    ;;\n    *)         echo \"'$1' cannot be packed via pk()\" ;;\n    esac\n    else\n        echo \"'$1' is not a valid file\"\n            fi\n}\n\nSource Oh My Zsh\nsource $ZSH/oh-my-zsh.sh\n\neval TF_ALIAS=fuck alias fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'\neval alias fuck='TF_ALIAS=fuck eval $(thefuck $(fc -ln -1))'\n```\n. Thank you! This variant works!\npS: Please, update docs for zsh, because I got bugged variant from your wiki\n. ",
    "prewk": "Same error, tried cd sr (the correct dir name is src) and then fuck:\n```\n oskar@Oskars-iMac \ue0b0 ~ \ue0b0 cd sr\ncd: no such file or directory: sr\n \u2718 oskar@Oskars-iMac \ue0b0 ~ \ue0b0 fuck\nDEBUG: Run with settings: {'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'exclude_rules': [],\n 'no_colors': False,\n 'priority': {},\n 'require_confirmation': True,\n 'rules': [],\n 'user_dir': PosixPath('/Users/oskar/.config/thefuck'),\n 'wait_command': 3}\nDEBUG: Received stdout:\nDEBUG: Received stderr: /bin/sh: line 0: cd: sr: No such file or directory\nDEBUG: Call: cd sr; with env: {'LESS': '-R', 'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'LC_CTYPE': '', 'LOGNAME': 'oskar', 'USER': 'oskar', 'PATH': '/usr/local/bin:/Users/oskar/bin:/usr/bin:/bin:/usr/sbin:/sbin', 'HOME': '/Users/oskar', 'ZSH': '/Users/oskar/.oh-my-zsh', 'TERM_PROGRAM': 'iTerm.app', 'LANG': 'C', 'THEFUCK_DEBUG': 'TRUE', 'TERM': 'xterm-256color', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.tJ83YfY5Lr/Render', 'COLORFGBG': '12;8', 'VERSIONER_PYTHON_VERSION': '2.7', 'SHLVL': '0', 'SECURITYSESSIONID': '186a8', 'XPC_FLAGS': '0x0', 'ITERM_SESSION_ID': 'w0t1p0', '_': '/usr/local/bin/thefuck', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.GmOUBAfWd3/Listeners', 'PYTHONPATH': '/usr/local/Cellar/thefuck/3.2/libexec/lib/python2.7/site-packages:/usr/local/Cellar/thefuck/3.2/libexec/vendor/lib/python2.7/site-packages', 'XPC_SERVICE_NAME': '0', 'SHELL': '/bin/zsh', 'ITERM_PROFILE': 'Default', 'LC_ALL': 'C', 'TMPDIR': '/var/folders/xb/lz_hwys161b_pg3_hyckstpw0000gn/T/', 'LSCOLORS': 'Gxfxcxdxbxegedabagacad', 'GIT_TRACE': '1', '__CF_USER_TEXT_ENCODING': '0x1F5:0x0:0x0', 'PWD': '/Users/oskar', 'PAGER': 'less'}; took: 0:00:00.002986\nDEBUG: Importing rule: apt_get; took: 0:00:00.000181\nDEBUG: Importing rule: apt_get_search; took: 0:00:00.000289\nDEBUG: Importing rule: brew_install; took: 0:00:00.000323\nDEBUG: Importing rule: brew_unknown_command; took: 0:00:00.000106\nDEBUG: Importing rule: brew_upgrade; took: 0:00:00.000038\nDEBUG: Importing rule: cargo; took: 0:00:00.000035\nDEBUG: Importing rule: cargo_no_command; took: 0:00:00.000189\nDEBUG: Importing rule: cd_correction; took: 0:00:00.000786\nDEBUG: Importing rule: cd_mkdir; took: 0:00:00.000273\nDEBUG: Importing rule: cd_parent; took: 0:00:00.000040\nDEBUG: Importing rule: composer_not_command; took: 0:00:00.000203\nDEBUG: Importing rule: cp_omitting_directory; took: 0:00:00.000287\nDEBUG: Importing rule: cpp11; took: 0:00:00.000183\nDEBUG: Importing rule: dirty_untar; took: 0:00:00.001115\nDEBUG: Importing rule: dirty_unzip; took: 0:00:00.000204\nDEBUG: Importing rule: django_south_ghost; took: 0:00:00.000051\nDEBUG: Importing rule: django_south_merge; took: 0:00:00.000050\nDEBUG: Importing rule: docker_not_command; took: 0:00:00.000310\nDEBUG: Importing rule: dry; took: 0:00:00.000051\nDEBUG: Importing rule: fix_alt_space; took: 0:00:00.000193\nDEBUG: Importing rule: fix_file; took: 0:00:00.001827\nDEBUG: Importing rule: git_add; took: 0:00:00.000343\nDEBUG: Importing rule: git_branch_delete; took: 0:00:00.000202\nDEBUG: Importing rule: git_branch_list; took: 0:00:00.000190\nDEBUG: Importing rule: git_checkout; took: 0:00:00.000199\nDEBUG: Importing rule: git_diff_staged; took: 0:00:00.000187\nDEBUG: Importing rule: git_fix_stash; took: 0:00:00.000268\nDEBUG: Importing rule: git_not_command; took: 0:00:00.000211\nDEBUG: Importing rule: git_pull; took: 0:00:00.000196\nDEBUG: Importing rule: git_pull_clone; took: 0:00:00.000190\nDEBUG: Importing rule: git_push; took: 0:00:00.000188\nDEBUG: Importing rule: git_push_force; took: 0:00:00.000188\nDEBUG: Importing rule: git_push_pull; took: 0:00:00.000187\nDEBUG: Importing rule: git_stash; took: 0:00:00.000184\nDEBUG: Importing rule: git_two_dashes; took: 0:00:00.000188\nDEBUG: Importing rule: go_run; took: 0:00:00.000169\nDEBUG: Importing rule: grep_recursive; took: 0:00:00.000176\nDEBUG: Importing rule: gulp_not_task; took: 0:00:00.000187\nDEBUG: Importing rule: has_exists_script; took: 0:00:00.000178\nDEBUG: Importing rule: heroku_not_command; took: 0:00:00.000174\nDEBUG: Importing rule: history; took: 0:00:00.000051\nDEBUG: Importing rule: java; took: 0:00:00.000153\nDEBUG: Importing rule: javac; took: 0:00:00.000151\nDEBUG: Importing rule: lein_not_task; took: 0:00:00.000254\nDEBUG: Importing rule: ls_lah; took: 0:00:00.000215\nDEBUG: Importing rule: man; took: 0:00:00.000145\nDEBUG: Importing rule: man_no_space; took: 0:00:00.000033\nDEBUG: Importing rule: mercurial; took: 0:00:00.000152\nDEBUG: Importing rule: mkdir_p; took: 0:00:00.000153\nDEBUG: Importing rule: mvn_no_command; took: 0:00:00.000144\nDEBUG: Importing rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000153\nDEBUG: Importing rule: no_command; took: 0:00:00.000155\nDEBUG: Importing rule: no_such_file; took: 0:00:00.000038\nDEBUG: Importing rule: open; took: 0:00:00.000168\nDEBUG: Importing rule: pacman; took: 0:00:00.000192\nDEBUG: Importing rule: pacman_not_found; took: 0:00:00.000069\nDEBUG: Importing rule: pip_unknown_command; took: 0:00:00.000210\nDEBUG: Importing rule: python_command; took: 0:00:00.000154\nDEBUG: Importing rule: python_execute; took: 0:00:00.000147\nDEBUG: Importing rule: quotation_marks; took: 0:00:00.000032\nDEBUG: Importing rule: rm_dir; took: 0:00:00.000165\nDEBUG: Importing rule: rm_root; took: 0:00:00.000176\nDEBUG: Importing rule: sed_unterminated_s; took: 0:00:00.000162\nDEBUG: Importing rule: sl_ls; took: 0:00:00.000030\nDEBUG: Importing rule: ssh_known_hosts; took: 0:00:00.000160\nDEBUG: Importing rule: sudo; took: 0:00:00.000035\nDEBUG: Importing rule: switch_lang; took: 0:00:00.000047\nDEBUG: Importing rule: systemctl; took: 0:00:00.000260\nDEBUG: Importing rule: test.py; took: 0:00:00.000030\nDEBUG: Importing rule: tmux; took: 0:00:00.000153\nDEBUG: Importing rule: touch; took: 0:00:00.000229\nDEBUG: Importing rule: tsuru_login; took: 0:00:00.000145\nDEBUG: Importing rule: tsuru_not_command; took: 0:00:00.000146\nDEBUG: Importing rule: unknown_command; took: 0:00:00.000034\nDEBUG: Importing rule: vagrant_up; took: 0:00:00.000156\nDEBUG: Importing rule: whois; took: 0:00:00.000196\nDEBUG: Trying rule: dry; took: 0:00:00.000068\nDEBUG: Trying rule: test.py; took: 0:00:00.000010\nDEBUG: Trying rule: apt_get_search; took: 0:00:00.000315\nDEBUG: Trying rule: brew_install; took: 0:00:00.000012\nDEBUG: Trying rule: brew_unknown_command; took: 0:00:00.000008\nDEBUG: Trying rule: brew_upgrade; took: 0:00:00.000007\nDEBUG: Trying rule: cargo; took: 0:00:00.000007\nDEBUG: Trying rule: cargo_no_command; took: 0:00:00.000092\nDEBUG: Trying rule: cd_correction; took: 0:00:00.000094\nDEBUG: Total took: 0:00:00.025918\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/thefuck/3.2/libexec/bin/thefuck\", line 9, in \n    load_entry_point('thefuck==3.2', 'console_scripts', 'thefuck')()\n  File \"/usr/local/Cellar/thefuck/3.2/libexec/lib/python2.7/site-packages/thefuck/main.py\", line 77, in main\n    fix_command()\n  File \"/usr/local/Cellar/thefuck/3.2/libexec/lib/python2.7/site-packages/thefuck/main.py\", line 28, in fix_command\n    selected_command = select_command(corrected_commands)\n  File \"/usr/local/Cellar/thefuck/3.2/libexec/lib/python2.7/site-packages/thefuck/ui.py\", line 106, in select_command\n    logs.confirm_text(selector.value)\n  File \"/usr/local/Cellar/thefuck/3.2/libexec/lib/python2.7/site-packages/thefuck/logs.py\", line 61, in confirm_text\n    blue=color(colorama.Fore.BLUE)))\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2191' in position 56: ordinal not in range(128)\n```\nUsing zsh with eval \"$(thefuck --alias)\" in my .zshrc.\nInstalled thefuck with brew: The Fuck 3.2 using Python 2.7.10\n. ",
    "CoreISP": "Experiencing the same issue all of a sudden. Not exactly sure what changed, other than maybe the brew being updated.\nMBP:~ l$ grip\n-bash: grip: command not found\nMBP:~ l$ fuck\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 11, in \n    sys.exit(main())\n  File \"/usr/local/lib/python2.7/site-packages/thefuck/main.py\", line 77, in main\n    fix_command()\n  File \"/usr/local/lib/python2.7/site-packages/thefuck/main.py\", line 28, in fix_command\n    selected_command = select_command(corrected_commands)\n  File \"/usr/local/lib/python2.7/site-packages/thefuck/ui.py\", line 106, in select_command\n    logs.confirm_text(selector.value)\n  File \"/usr/local/lib/python2.7/site-packages/thefuck/logs.py\", line 61, in confirm_text\n    blue=color(colorama.Fore.BLUE)))\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2191' in position 39: ordinal not in range(128)\n. ",
    "blakeembrey": "@mcarton Definitely python 2. I probably won't end up aliasing python3 over python, there's some things in node that fail to build with python3. \n. @nvbn Sorry for the delay, looks like it works :+1: Doesn't work with the ZSH shortcut I'm using from https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/thefuck/thefuck.plugin.zsh#L9-L17 though.\n. @scorphus Yes, it's still Python 2 by default. I'm just using brew for this, and some native deps in node require Python 2 so it's unlikely I'll update the alias.\n. ",
    "cintiadr": "Not really sure why, got similar error message on OSX:\n~/checkouts/configuration (MIN-338_new_jobs:git) $ fuck\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 11, in <module>\n    sys.exit(main())\n  File \"/usr/local/lib/python2.7/site-packages/thefuck/main.py\", line 77, in main\n    fix_command()\n  File \"/usr/local/lib/python2.7/site-packages/thefuck/main.py\", line 28, in fix_command\n    selected_command = select_command(corrected_commands)\n  File \"/usr/local/lib/python2.7/site-packages/thefuck/ui.py\", line 106, in select_command\n    logs.confirm_text(selector.value)\n  File \"/usr/local/lib/python2.7/site-packages/thefuck/logs.py\", line 61, in confirm_text\n    blue=color(colorama.Fore.BLUE)))\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2191' in position 45: ordinal not in range(128)\nI added export PYTHONIOENCODING=utf-8 to my .profile, and not it doesn't complain anymore, just works. \nPip tells me it has installed fuck 3.2,  Python 2.7.10\n. ",
    "WANG-lp": "@cintiadr Thanks. It is ok after I added export PYTHONIOENCODING=utf-8 in my .zshrc\n. ",
    "NIXOYE": "yes\n~/.bashrc: executed by bash(1) for non-login shells.\nsee /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\nfor examples\nWe use preexec and precmd hook functions for Bash\nIf you have anything that's using the Debug Trap or PROMPT_COMMAND\nchange it to use preexec or precmd\nSee also https://github.com/rcaloras/bash-preexec\nIf not running interactively, don't do anything\ncase $- in\n    i) ;;\n      *) return;;\nesac\ndon't put duplicate lines or lines starting with space in the history.\nSee bash(1) for more options\nHISTCONTROL=ignoreboth\nappend to the history file, don't overwrite it\nshopt -s histappend\nfor setting history length see HISTSIZE and HISTFILESIZE in bash(1)\nHISTSIZE=1000\nHISTFILESIZE=2000\ncheck the window size after each command and, if necessary,\nupdate the values of LINES and COLUMNS.\nshopt -s checkwinsize\nIf set, the pattern \"**\" used in a pathname expansion context will\nmatch all files and zero or more directories and subdirectories.\nshopt -s globstar\nmake less more friendly for non-text input files, see lesspipe(1)\n[ -x /usr/bin/lesspipe ] && eval \"$(SHELL=/bin/sh lesspipe)\"\nset variable identifying the chroot you work in (used in the prompt below)\nif [ -z \"${debian_chroot:-}\" ] && [ -r /etc/debian_chroot ]; then\n    debian_chroot=$(cat /etc/debian_chroot)\nfi\nset a fancy prompt (non-color, unless we know we \"want\" color)\ncase \"$TERM\" in\n    xterm-color) color_prompt=yes;;\nesac\nuncomment for a colored prompt, if the terminal has the capability; turned\noff by default to not distract the user: the focus in a terminal window\nshould be on the output of commands, not on the prompt\nforce_color_prompt=yes\nif [ -n \"$force_color_prompt\" ]; then\n    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then\n    # We have color support; assume it's compliant with Ecma-48\n    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such\n    # a case would tend to support setf rather than setaf.)\n    color_prompt=yes\n    else\n    color_prompt=\n    fi\nfi\nif [ \"$color_prompt\" = yes ]; then\n    PS1='${debian_chroot:+($debian_chroot)}[\\033[01;32m]\\u@\\h[\\033[00m]:[\\033[01;34m]\\w[\\033[00m]\\$ '\nelse\n    PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ '\nfi\nunset color_prompt force_color_prompt\nenable color support of ls and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n    test -r ~/.dircolors && eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n    alias ls='ls --color=auto'\n    #alias dir='dir --color=auto'\n    #alias vdir='vdir --color=auto'\nalias grep='grep --color=auto'\nalias fgrep='fgrep --color=auto'\nalias egrep='egrep --color=auto'\nfi\nsome more ls aliases\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\nAdd an \"alert\" alias for long running commands.  Use like so:\nsleep 10; alert\nalias alert='notify-send --urgency=low -i \"$([ $? = 0 ] && echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s_[0-9]+\\s_//;s/[;&|]\\s*alert$//'\\'')\"'\nAlias definitions.\nYou may want to put all your additions into a separate file like\n~/.bash_aliases, instead of adding them here directly.\nSee /usr/share/doc/bash-doc/examples in the bash-doc package.\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\nenable programmable completion features (you don't need to enable\nthis, if it's already enabled in /etc/bash.bashrc and /etc/profile\nsources /etc/bash.bashrc).\nif ! shopt -oq posix; then\n  if [ -f /usr/share/bash-completion/bash_completion ]; then\n    . /usr/share/bash-completion/bash_completion\n  elif [ -f /etc/bash_completion ]; then\n    . /etc/bash_completion\n  fi\nfi\nIf this is an xterm set more declarative titles\n\"dir: last_cmd\" and \"actual_cmd\" during execution\nIf you want to exclude a cmd from being printed see line 156\ncase \"$TERM\" in\nxterm_|rxvt_)\n    PS1=\"[\\e]0;${debian_chroot:+($debian_chroot)}\\$(print_title)\\a]$PS1\"\n    __el_LAST_EXECUTED_COMMAND=\"\"\n    print_title () \n    {\n        __el_FIRSTPART=\"\"\n        __el_SECONDPART=\"\"\n        if [ \"$PWD\" == \"$HOME\" ]; then\n            __el_FIRSTPART=$(gettext --domain=\"pantheon-files\" \"Home\")\n        else\n            if [ \"$PWD\" == \"/\" ]; then\n                __el_FIRSTPART=\"/\"\n            else\n                __el_FIRSTPART=\"${PWD##/}\"\n            fi\n        fi\n        if [[ \"$__el_LAST_EXECUTED_COMMAND\" == \"\" ]]; then\n            echo \"$__el_FIRSTPART\"\n            return\n        fi\n        #trim the command to the first segment and strip sudo\n        if [[ \"$__el_LAST_EXECUTED_COMMAND\" == sudo ]]; then\n            __el_SECONDPART=\"${__el_LAST_EXECUTED_COMMAND:5}\"\n            __el_SECONDPART=\"${__el_SECONDPART%% }\"\n        else\n            __el_SECONDPART=\"${__el_LAST_EXECUTED_COMMAND%% }\"\n        fi \n        printf \"%s: %s\" \"$__el_FIRSTPART\" \"$__el_SECONDPART\"\n    }\n    put_title()\n    {\n        __el_LAST_EXECUTED_COMMAND=\"${BASH_COMMAND}\"\n        printf \"\\033]0;%s\\007\" \"$1\"\n    }\n```\nShow the currently running command in the terminal title:\nhttp://www.davidpashley.com/articles/xterm-titles-with-bash.html\nupdate_tab_command()\n{\n    # catch blacklisted commands and nested escapes\n    case \"$BASH_COMMAND\" in \n        \\033]0|update_|echo|printf|clear|cd)\n        __el_LAST_EXECUTED_COMMAND=\"\"\n            ;;\n        )\n        put_title \"${BASH_COMMAND}\"\n        ;;\n    esac\n}\npreexec_functions+=(update_tab_command)\n;;\n```\n*)\n    ;;\neval \"$(thefuck --alias)\"\n. any help? its quite annoying to always see this error when opening a terminal. I also cant use thefuck which is pretty useful\n. ",
    "mcornella": "You should put the contents of your bashrc file inside triple backquotes to format it as code. See this example for help.\n. A little trick I just came up with is just using the github API to get the raw comment (body attribute).\nHere's what he said with the proper formatting:\n\nyes\n```\n~/.bashrc: executed by bash(1) for non-login shells.\nsee /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\nfor examples\nWe use preexec and precmd hook functions for Bash\nIf you have anything that's using the Debug Trap or PROMPT_COMMAND\nchange it to use preexec or precmd\nSee also https://github.com/rcaloras/bash-preexec\nIf not running interactively, don't do anything\ncase $- in\n    i) ;;\n      *) return;;\nesac\ndon't put duplicate lines or lines starting with space in the history.\nSee bash(1) for more options\nHISTCONTROL=ignoreboth\nappend to the history file, don't overwrite it\nshopt -s histappend\nfor setting history length see HISTSIZE and HISTFILESIZE in bash(1)\nHISTSIZE=1000\nHISTFILESIZE=2000\ncheck the window size after each command and, if necessary,\nupdate the values of LINES and COLUMNS.\nshopt -s checkwinsize\nIf set, the pattern \"**\" used in a pathname expansion context will\nmatch all files and zero or more directories and subdirectories.\nshopt -s globstar\nmake less more friendly for non-text input files, see lesspipe(1)\n[ -x /usr/bin/lesspipe ] && eval \"$(SHELL=/bin/sh lesspipe)\"\nset variable identifying the chroot you work in (used in the prompt below)\nif [ -z \"${debian_chroot:-}\" ] && [ -r /etc/debian_chroot ]; then\n    debian_chroot=$(cat /etc/debian_chroot)\nfi\nset a fancy prompt (non-color, unless we know we \"want\" color)\ncase \"$TERM\" in\n    xterm-color) color_prompt=yes;;\nesac\nuncomment for a colored prompt, if the terminal has the capability; turned\noff by default to not distract the user: the focus in a terminal window\nshould be on the output of commands, not on the prompt\nforce_color_prompt=yes\nif [ -n \"$force_color_prompt\" ]; then\n    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then\n  # We have color support; assume it's compliant with Ecma-48\n  # (ISO/IEC-6429). (Lack of such support is extremely rare, and such\n  # a case would tend to support setf rather than setaf.)\n  color_prompt=yes\n    else\n  color_prompt=\n    fi\nfi\nif [ \"$color_prompt\" = yes ]; then\n    PS1='${debian_chroot:+($debian_chroot)}[\\033[01;32m]\\u@\\h[\\033[00m]:[\\033[01;34m]\\w[\\033[00m]\\$ '\nelse\n    PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ '\nfi\nunset color_prompt force_color_prompt\nenable color support of ls and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n    test -r ~/.dircolors && eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n    alias ls='ls --color=auto'\n    #alias dir='dir --color=auto'\n    #alias vdir='vdir --color=auto'\nalias grep='grep --color=auto'\nalias fgrep='fgrep --color=auto'\nalias egrep='egrep --color=auto'\n\nfi\nsome more ls aliases\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\nAdd an \"alert\" alias for long running commands.  Use like so:\nsleep 10; alert\nalias alert='notify-send --urgency=low -i \"$([ $? = 0 ] && echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s[> \n0-9]+\\s//;s/[;&|]\\s*alert$//'\\'')\"'> \nAlias definitions.\nYou may want to put all your additions into a separate file like\n~/.bash_aliases, instead of adding them here directly.\nSee /usr/share/doc/bash-doc/examples in the bash-doc package.\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\nenable programmable completion features (you don't need to enable\nthis, if it's already enabled in /etc/bash.bashrc and /etc/profile\nsources /etc/bash.bashrc).\nif ! shopt -oq posix; then\n  if [ -f /usr/share/bash-completion/bash_completion ]; then\n    . /usr/share/bash-completion/bash_completion\n  elif [ -f /etc/bash_completion ]; then\n    . /etc/bash_completion\n  fi\nfi\nIf this is an xterm set more declarative titles\n\"dir: last_cmd\" and \"actual_cmd\" during execution\nIf you want to exclude a cmd from being printed see line 156\ncase \"$TERM\" in\nxterm|rxvt)\n    PS1=\"[\\e]0;${debian_chroot:+($debian_chroot)}\\$(print_title)\\a]$PS1\"\n    __el_LAST_EXECUTED_COMMAND=\"\"\n    print_title () \n    {\n        __el_FIRSTPART=\"\"\n        __el_SECONDPART=\"\"\n        if [ \"$PWD\" == \"$HOME\" ]; then\n            __el_FIRSTPART=$(gettext --domain=\"pantheon-files\" \"Home\")\n        else\n            if [ \"$PWD\" == \"/\" ]; then\n                __el_FIRSTPART=\"/\"\n            else\n                __el_FIRSTPART=\"${PWD##/}\"\n            fi\n        fi\n        if [[ \"$__el_LAST_EXECUTED_COMMAND\" == \"\" ]]; then\n            echo \"$__el_FIRSTPART\"\n            return\n        fi\n        #trim the command to the first segment and strip sudo\n        if [[ \"$__el_LAST_EXECUTED_COMMAND\" == sudo ]]; then\n            __el_SECONDPART=\"${__el_LAST_EXECUTED_COMMAND:5}\"\n            __el_SECONDPART=\"${__el_SECONDPART%% }\"\n        else\n            __el_SECONDPART=\"${__el_LAST_EXECUTED_COMMAND%% }\"\n        fi \n        printf \"%s: %s\" \"$__el_FIRSTPART\" \"$__el_SECONDPART\"\n    }\n    put_title()\n    {\n        __el_LAST_EXECUTED_COMMAND=\"${BASH_COMMAND}\"\n        printf \"\\033]0;%s\\007\" \"$1\"\n    }\n# Show the currently running command in the terminal title:\n# http://www.davidpashley.com/articles/xterm-titles-with-bash.html\nupdate_tab_command()\n{\n    # catch blacklisted commands and nested escapes\n    case \"$BASH_COMMAND\" in \n        *\\033]0*|update_*|echo*|printf*|clear*|cd*)\n        __el_LAST_EXECUTED_COMMAND=\"\"\n            ;;\n        *)\n        put_title \"${BASH_COMMAND}\"\n        ;;\n    esac\n}\npreexec_functions+=(update_tab_command)\n;;\n\n*)\n    ;;\neval \"$(thefuck --alias)\"\n```\n\nping @nvbn \n. Read again, this is not my issue, I'm just reposting what @NIXOYE's bashrc with the proper formatting.\nThough if he doesn't answer again this issue should be closed. \n. ",
    "dedanna1029": "WHY do you want to change the name of the whole project when you can change it to suit your own needs??? The name is part of its appeal! Do you have something against the f word??? I'm not finding that rational at all. Sometime check out the kernel comments for that matter on your Linux machine. For shame, wanting to change this.\n. @Celti I can say anything I fucking want, the U.S. is still a somewhat free country last I checked. I said it that way for yours and @kim0 's benefit, but after that smart-ass remark I don't think I will any more.\nThank you @icovada ! I think both the package and name are brill! :+1: \n. O rly? That's why three other people in this thread used it as well? No make that four. One has it in their code. Don't like it? Don't use it, either that or alias it.\nOh and you can nitpick the First Amendment all you want. It still doesn't take away my right to speak as I will.\n. @mcarton From your own search:\n\"Nevertheless, the court\u2019s free speech jurisprudence does not allow government-sanctioned punishment of speech solely because the message may be offensive. Rather, it allows regulation of speech only if there are objective indications of harm, such as threats, fraud or violence. The court protects offensive speech because speech on matters of public concern is valuable even when it is delivered in an offensive manner and because punishing offensive speech can lead to censorship of unpopular views. In doing so, the court has implicitly recognized the inherent tensions created by our psychological responses to offensive speech and the importance we place on the free exchange of ideas.\"\nhttp://www.apa.org/monitor/2011/01/jn.aspx\n. I would say that the kind of shaming it does is what makes Fuck so\nhysterical. I'm sure we can all laugh at ourselves, can we not? If we get\nsomething wrong so many times that it gets to that point, maybe we should\ndo some research and find out why we got it wrong so it doesn't continue\nif we're seriously that offended?\nThanks for consideration to this.\nOn Fri, Jan 22, 2016 at 5:51 PM, James Hadley notifications@github.com\nwrote:\n\nEach time I type a command, I draw on years of experience, not only as a\n\"computer person\", but also as a typist. Yet, the frequency of my errors\nleads to intense feelings of inadequacy. I am surprised that Fuck makes no\nattempt to deal with the overwhelming shame that is associated with each\nrealisation that in spite of an expensive education and decades of hard\nwork, I am incapable of pressing buttons in the correct quantity and\nsequence.\nFurther, my use of Fuck has contributed a new realisation that whereas I\nam incapable of pushing two buttons to input a command to view the contents\nof a directory, your software is not only capable, but mocks me with the\nsort of competence that I will never be able to realise, like a small child\nlicking an ice cream on the bench outside my stuffy office on a hot day.\nI therefore recommend, much like our fine education system, that we align\nan expectation of failure (already present), with motivational newspeak to\nensure that nobody's feelings are hurt. I suggest the addition of the\nfollowing to the output of Fuck:\n- That's why pencils have erasers\n- It's the taking part that counts\n- You did your best and that's all anyone can ask\n- Everyone gets it wrong sometimes\nPerhaps we could enlist the services of a so-called life coach, who\nincidentally, charges more per hour than I do, to provide this sort of\nempty reassurance.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nvbn/thefuck/issues/440.\n\n\n\nRegistered Linux user # 368516\n100% Windows-free (almost)! :)\n. ",
    "Celti": "When you can't actually say \"fuck\" and are saying \"the f word\" instead, perhaps he has a point?\n. ",
    "icovada": "We're not playing \"marketing department\" here. This software is open source. We don't have a target audience nor do we have any need to push its use in more serious corporate environments, or to kids learning how to sysadmin.\nI must admit that for me, most of the appeal of this software is in its name. A more polite but much much less cathartic \"fix\" instead of \"FUUUUUUCK\" wouldn't just be as stupidly funny.\nYou don't like it? Fork it, can call it \"fix\". I stand by \"fuck\"\n. ",
    "e3krisztian": "I think the project name is OK - it describes the situation when the command applies (utter astonishment).  Even the command name thefuck is OK!\nHowever on the command line the default alias name fuck is intended to be used as a verb, which I do not find appropriate.\nThe situation is, that I made a mistake and I am asking for easy help!\nI would prefer saying \"please, fix it for me\".\nI would prefer if the default, documented alias name would be the magic word please.\nPlease, reconsider this issue!\n. ",
    "thechief389": "There are the people that are okay with it. And then there are the people that will get offended, not want to use the software, and possibly start flame wars.\nPeople can also say fudge or snap instead of swearing.. You could name it feck or fudge.. Are there other maintained command correctors?. What's an SJW?\nSent from my iPhone\n\nOn Dec 21, 2018, at 3:43 AM, informer2016 notifications@github.com wrote:\n@thechief389 Fuck SJWs and their boring politically-correct corporate culture. Stop ruining our fun\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Can I finally close this once and for all?. \n",
    "ronanamsterdam": "people get offended too much these days and there workaround or just don't use the tool. ",
    "bjornicus": "\nI think current name is ok =)\nAlso f isn't a good name for the project, it isn't googleable.\n\nI mean, you're right, but try googling 'fuck', you aren't going to find it that way either...\n(obviously 'theFuck' does turn up the expected result). ",
    "steaksauce-": "\n\nI think current name is ok =)\nAlso f isn't a good name for the project, it isn't googleable.\n\nI mean, you're right, but try googling 'fuck', you aren't going to find it that way either...\n(obviously 'theFuck' does turn up the expected result)\n\nWell, thefuck is actually the name of the tool (maybe so that it can be Googleable?) - it's just that if one follows the installation guide, an alias is set to call it fuck instead.\n. I had a similar issue, in which my history file got owned by root when setting up everything.\nTry checking the ownership and correcting it if something is wrong. > You could name it feck or fudge.\n@thechief389 those are good alternatives.\nYou (or anyone else who wants to) could alias it to those names on your machine, or fork the repo to those. I don't think you're going to convince many projects to change their name.\n@nvbn can this issue be locked and closed?. @thechief389 please? :). It seems like the option for --yeah is in the master branch, but is missing from the version releases.. > @nicolargo @TheHackmeister I think you got ImportError because you try to use Python 2.7 which is not supported. Try to use Python 3.4+.\nI can confirm that on Ubuntu 18.04, I had to install python3 and pip3 and use pip3 to install thefuck.\nTo install pip3 on Ubuntu 18.04: sudo apt-get -y install python3-pip and then pip3 install thefuck. Assuming that you mean you installed the package from an unofficial source that uses a forked version, it would be nice to have thefuck correct your installation by uninstalling the unofficial version and installing the official version. This would have to assume that the fork keeps the feature.. ",
    "JaffParker": "Attached below (renamed to added extension to upload).\n.bashrc.txt\n. It's unavailable. Outputs nothing and then loads up my system within seconds :(\n. @scorphus my bash version is version 4.3.42(1)-release (x86_64-pc-linux-gnu)\n. ",
    "dekuenstle": "Same problem here, also Ubuntu 15.10\nActually eval $(thefuck --alias) produces a endless recursion of process spawning in order thefuck --alias, sh /bin/zsh -ic alias, zsh -ic thefuck --alias\n. ",
    "Kwaadpepper": "I just got python3-pip and done pip3 install thefuck\nI got errors on install which i give you in these links (second is the debug file)\nhttp://paste.ubuntu.com/13282680/\nhttp://paste.ubuntu.com/13282685/\nRunning thefuck gives :\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 7, in <module>\nfrom thefuck.main import main\n  File \"/usr/local/lib/python3.5/dist-packages/thefuck/main.py\", line 6, in <module>\nfrom . import logs, types, shells\n  File \"/usr/local/lib/python3.5/dist-packages/thefuck/types.py\", line 6, in <module>\nfrom psutil import Process, TimeoutExpired\nImportError: No module named 'psutil'\nSo it was missing psutil and decorator, which i installed (using python3 packages).\nAnd finally i got this thefuck error\nhttp://paste.ubuntu.com/13282783/\nSorry i think this may be bad news, or hopefully i'm missing another dependency ?\n. Well indeed i removed thefuck and reinstall without errors.\nHowever i still got this bug (same as my last link on previous comment): \nhttp://paste.ubuntu.com/13282990/\nI just tried getting thefuck from ubuntu repo, and having eval \"$(thefuck --alias)\" with repo version 2.5.6-1, running with python2 made a fork bomb - just so you know -\nSo i ran wget -O - https://raw.githubusercontent.com/nvbn/thefuck/master/install.sh | sh - && $0 as in Readme and back from start point of course.\nSo ultimately again, using pip3, i got this error http://paste.ubuntu.com/13282990/\n. ~~Indeed i tried deleting it and still same issue\nhere it is\nhttps://www.freethepepper.com/owncloud/index.php/s/F6XQd9xperIt1Qw~~\nI mis deleted it, redo a rm, so now it is working nicely thanks\n. ",
    "cprice404": "I've narrowed it down a bit; it seems like the thefuck alias works as expected if I turn off the per-directory-history plugin from oh-my-zsh:\nhttps://github.com/robbyrussell/oh-my-zsh/wiki/Plugins#per-directory-history\nhttps://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/per-directory-history\nUnfortunately I really like that plugin :)  Would be really nice to figure out a way to have them both working at the same time.\n. It looks like the issue is that per-directory-history is adding the latest command to the history before it executes, meaning that the tail -n 1 was actually returning the fuck alias, rather than the previous command.  This seems to work for me:\nalias fuck='eval $(thefuck $(fc -ln | tail -n 2 |head -n 1)); fc -R'\n. ",
    "simonbcn": "I've installed it via omf plugin\nfunction fuck --description 'Correct your previous console command'\n    set -l exit_code $status;    set -x TF_ALIAS fuck;    set -l fucked_up_command $history[1];    thefuck $fucked_up_command | read -l unfucked_command;    if [ \"$unfucked_command\" != \"\" ];        eval $unfucked_command;        if test $exit_code -ne 0;            history --delete $fucked_up_command;            history --merge ^ /dev/null;            return 0;        end;    end;\nend\n. $ thefuck purge gitbook                                                                                                                         15:48\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 9, in <module>\n    load_entry_point('thefuck==3.2', 'console_scripts', 'thefuck')()\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/main.py\", line 77, in main\n    fix_command()\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/main.py\", line 22, in fix_command\n    command = types.Command.from_raw_script(sys.argv[1:])\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/types.py\", line 116, in from_raw_script\n    if cls._wait_output(result):\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/types.py\", line 78, in _wait_output\n    child.kill()\n  File \"/usr/local/lib/python2.7/dist-packages/psutil/__init__.py\", line 299, in wrapper\n    return fun(self, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/psutil/__init__.py\", line 1089, in kill\n    self._send_signal(signal.SIGKILL)\n  File \"/usr/local/lib/python2.7/dist-packages/psutil/__init__.py\", line 1026, in _send_signal\n    raise AccessDenied(self.pid, self._name)\npsutil.AccessDenied: psutil.AccessDenied (pid=21816)\n. purge is a function (it's in my first post).\nthefuck git bran works well until I press \u2191 or \u2193:\n```\n$ thefuck git bran\ngit branch [enter/\u2191/\u2193/ctrl+c][WARN] Rule history:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/types.py\", line 222, in is_match\n    if compatibility_call(self.match, command):\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/utils.py\", line 252, in compatibility_call\n    return fn(args)\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/rules/history.py\", line 29, in match\n    _history_of_exists_without_current(command)))\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/utils.py\", line 28, in wrapper\n    memo[key] = fn(args, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/rules/history.py\", line 19, in _history_of_exists_without_current\n    history = get_history()\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/utils.py\", line 28, in wrapper\n    memo[key] = fn(*args, kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/shells.py\", line 315, in get_history\n    return list(_get_shell().get_history())\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck-3.2-py2.7.egg/thefuck/shells.py\", line 68, in get_history\n    prepared = self._script_from_history(line)\\\nAttributeError: 'Fish' object has no attribute '_script_from_history'\n\ngit prune [enter/\u2191/\u2193/ctrl+c]\nAborted\n```\n. ",
    "pakrym": "You moved win_unicode_console.enable() call after importing colorama they fixed the issue (https://github.com/tartley/colorama/issues/32) but this change is not in colorama-0.3.3 which thefuck uses.\nRelated: https://github.com/Drekin/win-unicode-console#compatibility\n. I meant other part of it:\n\nAs of colorama v0.3.3, there is an early binding issue (https://github.com/tartley/colorama/issues/32), so win_unicode_console.enable has to be called even before importing colorama\n. Yes. It returns two chars one \\xe0 and one of those.\n. Yes, you need to init win_unicode_console before importing colorama\n. \n",
    "makalaaneesh": "@nvbn Hey, as of now, you've just prevented the double sudo. If I'm not wrong, the permission error for the second command (after the '&&') will still persist. \nCan i work on this issue?\n. Yup!\n. ",
    "kramer9x": "Yes, I think\n. ",
    "konaya": "Ha! You're right, it actually works with other programs. Unlucky indeed! Not sure if it's worth fixing, really.\n. ",
    "battlesnake": "+1 haha\n. Very nice, I'm guessing command-line args are just silently ignored?\nMaybe some ML/NLP person could hack together a \"swearbot\" that just responds to \"fuck [arg]\" with another sweary message\n. ",
    "Epse": "added #736 \nYep, I know. Couldn't we just make pacman automatically correct with sudo?\nLike I quickly whipped up here: https://github.com/Epse/thefuck/blob/pacmansudo/thefuck/rules/pacman.py. @Zane96 if it's fixed, could you close the issue?. made a quick PR. In need of testing. made a quick PR. @BertieJim if it's fixed might help if you close the issue. Added a PR. docker ps -a is a valid command.\ndocker ps a-a is not though. Might I ask what you intended fuck to give as a correction?. I assumed I shouldn't touch the README. Oh well, I'll fix it. On their way. Running into a couple of issues where tests are failing but the same deal actually typed and fucked in a terminal works... Seems to be due to byte strings and regular strings . There are now tests!. oh well, it's extra clear anyhow.\nMy pleasure!. is this one okay now?. This should be okay now then.. oops yeah didn't push everything here. I must have had a retarded brainfart writing the test on this one. Really. Thing is fine now. Sorry for the delay.. should be all fixed now. Auwch. How did I not spot that? . ",
    "sehrgut": "On examination, it appears fuck is simply appending massive numbers of old history lines again, and missing the most recent several.\n\n. I use bash, not zsh, but from a cursory look at the zsh docs, perhaps the fc builtin could perform the \"replace\" logic by capturing entries 0 through n-1, writing them back as the new history, and then appending?\n. ",
    "pjuhasz": "This does happen to me as well, but apparently only when I'm in a nested shell session.\nSo simply opening a terminal and issuing 'fuck' won't mess up the history, but running 'bash', then 'fuck' inside it does.\nThis is relevant because tmux or screen inevitably leads to a situation with nested shells.\nThe environment variable $SHLVL can be used to detect nesting.\n. I'm not familiar with the internals of The Fuck, so I don't know what kind of magic does it do to the shell history, but from where I stand adding thousands of lines to it is a bug. Being in a nested shell is only a condition that seems to reliably trigger the bug. If it can be fixed, $SHLVL should be irrelevant.\n. Now that I've looked into the source, I see that the program wants to append to the history by simply and brutally opening the history file on the disk (.bash_history) and writing the line to it.\nThis is unfortunately not a good strategy: by default, bash does not write the history of the current session to .bash_history, only later when it (the bash process) exits. The situation is further complicated when you use nested shells: the outermost one has the history of its session in its own memory, then when you start the second shell it starts to accumulate its own history in memory. When you exit the inner shell it updates .bash_history, then when you finally exit the terminal/logout etc., the outermost shell saves its own history.\nI don't yet see where this fails and how dumping thousands of entries into the history can happen, but writing to .bash_history directly clearly messes up the order of commands even in the simple case of a single shell in a tty. The corrected command should go at the end of the history which is collected in the shell session's memory.\nBash appears to have the built-in command 'history -s' for exactly this purpose.\nAlternatively (or orthogonally to this discussion), there should be a configuration option for The Fuck so that it optionally doesn't, ahem, fuck with history at all.\n. Thanks.\nmcarton's modification above seems to fix the problem, though.\n. Yes, I guess.\n. ",
    "MattKotsenas": "I see I failed the build for Python 2.7, but not 3.x. I'm still new to Python so any help is greatly appreciated. Thanks!\n. I've rebased to split the commit apart. Please let me know how it goes!\n. Thanks @scorphus for the feedback. Stylistic feedback addressed and squashed into previous commit.\nFor the alias I'm not sure what's going on. If I do\niex \"thefuck --alias\" >> $profile\nAnd restart PowerShell (necessary to pick up changes) I get the expected behavior. Am I interpreting the prompt wrong? Thanks!\nEdit: Nevermind I looked at how it works on Bash and I see how it is intended to be used. I'll see if I can change it to match the unix style\n. I see this as well. There are two options I've come up with, but I don't fully understand the ramifications of doing so. One is:\n``` diff\ndiff --git a/thefuck/system/win32.py b/thefuck/system/win32.py\nindex a8b6c0a..6d6fa0a 100644\n--- a/thefuck/system/win32.py\n+++ b/thefuck/system/win32.py\n@@ -7,7 +7,7 @@ from .. import const\ndef init_output():\n     import colorama\n-    win_unicode_console.enable()\n+    win_unicode_console.enable(use_readline_hook = False)\n     colorama.init()\n```\nWhich works on my system (Windows 10 + PowerShell), but I don't know enough about win_unicode_console to know if it is correct.\nThe safer but hack-ish way is to just ignore the warning\n``` diff\ndiff --git a/thefuck/system/win32.py b/thefuck/system/win32.py\nindex a8b6c0a..a38c584 100644\n--- a/thefuck/system/win32.py\n+++ b/thefuck/system/win32.py\n@@ -3,14 +3,15 @@ import sys\n import msvcrt\n import win_unicode_console\n from .. import const\n+import warnings\ndef init_output():\n     import colorama\n-    win_unicode_console.enable()\n+    with warnings.catch_warnings():\n+        warnings.simplefilter(\"ignore\")\n+        win_unicode_console.enable()\n     colorama.init()\n```\nLet me know how I can help with a fix here as this is the last bug I run into using thefuck with PowerShell. Thanks!\n. We should also update the wiki once this update gets pushed to pip. I don't want to do that ahead-of-time because it would break new users.\n. I can repro this as well.\nI'd be interested in taking a look at this, since I originally added PowerShell support (and created this mess ;)), but I'm not sure where the tests for this should go. Can someone suggest where to get started? It looks like test_ui.py is the right place, but I see in there colors are explicitly turned off. Would it be possible / a good idea to turn them on?. Hi @maracuja-juice!  From the error message you posted, it looks like thefuck is not on your path environment variable.\nYou can verify that the path is missing by running this command from PowerShell\npowershell\necho $ENV:Path\nBased on your example, you should see the path C:\\Users\\MyUserName\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts listed (be sure it has semi-colon ; separators).\nYou can also verify that thefuck is / isn't on your path by running this command from PowerShell\npowershell\nGet-Command -Name thefuck\nIf you get an entry back from Get-Command, the tool is on your path, if you get a CommandNotFoundException error message, then you'll need to update your environment variables to add it. You can follow the direction on this stackoverflow question to add C:\\Users\\MyUserName\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts to your path (be sure to close and re-open your PowerShell windows to pick up the changed path environment variable!). Duplicate of #772, fixed by #805. . ",
    "IuryAlves": "@mcarton What you think of using difflib to find possible typos?\nSomething like\n```\nfrom difflib import SequenceMatcher\ntypo = \"istall\" \ncorrect_subcommand = \"install\"\ndiff = SequenceMatcher(typo, correct_subcommand)\ndif.ratio()  # something greater than 0.8\n``\n. - When a typedfn installfuck only gives meidn_installanddf install.\n- Sorry, i didn't noticeutils.get_closest`. I will fix it. And yes. There is much more for dnf command, but i wanted to start with a short commit, since this is my first one for this project.\n. ",
    "robkorv": "tnx @makalaaneesh, it's fixed. :cake: \n. ",
    "Amorymeltzer": "Sure, it's not an issue.  FWIW, ~/.thefuck/settings.py is empty.\n``` shell\n\nexport THEFUCK_DEBUG=true\nputhon\n-bash: puthon: command not found\nfuck\nDEBUG: Run with settings: {'alter_history': True,\n 'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'exclude_rules': [],\n 'history_limit': None,\n 'no_colors': False,\n 'priority': {},\n 'require_confirmation': True,\n 'rules': [],\n 'user_dir': PosixPath('/Users/Amory/.thefuck'),\n 'wait_command': 3}\nDEBUG: Received stdout: \nDEBUG: Received stderr: /bin/sh: puthon: command not found\n\nDEBUG: Call: puthon; with env: {'HISTTIMEFORMAT': '[%F %T] ', 'Color_White_Bold': '\\033[1;37m', 'HOMEBREW_CASK_OPTS': '--appdir=/Applications --qlplugindir=/Library/Quicklook', 'LESS': '-FXiRgMw', 'Color_Cyan_Bold': '\\033[1;36m', 'Color_White_Intense': '\\033[0;97m', 'Color_Blue_Bold_Intense': '\\033[1;94m', 'DBUS_LAUNCHD_SESSION_BUS_SOCKET': '/tmp/launch-XkqMmB/unix_domain_listener', 'Color_Red_Bold': '\\033[1;31m', 'SHELL': '/opt/local/bin/bash', 'Color_Green_Bold_Intense': '\\033[1;92m', 'SECURITYSESSIONID': '186a4', 'HISTSIZE': '500000', 'PERL_MM_USE_DEFAULT': '1', 'MANPATH': '/opt/local/share/perl5.20/siteman:/opt/local/share/perl5.20/man:', 'Color_zBold': '\\033[1m', 'LESS_TERMCAP_ue': '\\x1b[0m', 'Color_Yellow_zBackground': '\\033[43m', 'GIT_TRACE': '1', 'Color_Black_Bold': '\\033[1;30m', 'Color_White_Bold_Intense': '\\033[1;97m', 'LESS_TERMCAP_us': '\\x1b[4;35m', 'Color_Green_zBackground': '\\033[42m', 'Color_Cyan_Intense': '\\033[0;96m', 'LESSOPEN': '| /opt/local/bin/lesspipe.sh %s', 'Color_Black_zBackground': '\\033[40m', 'USER': 'Amory', 'PS2': '\\[\\033[0;36m\\]\\xe2\\x86\\x92\\[\\033[0m\\] ', 'PS3': '#? ', 'Color_Black_Bold_Intense': '\\033[1;90m', 'PS1': '\\[\\033[0;30m\\]$fill\\n\\[\\033[0;36m\\]\\xe2\\x94\\x8c\\xe2\\x94\\x80[\\[\\033[0;91m\\]\\u\\[\\033[0;34m\\]@\\[\\033[0;91m\\]\\h\\[\\033[0;36m\\]]-[\\[\\x1b[0;95m\\]\\t Fri 15 Jan\\[\\033[0;36m\\]]-[\\[\\033[0;33m\\]-\\[\\033[0;36m\\]]-[\\[\\033[0;33m\\]\\w\\[\\033[0;36m\\]]\\n\\[\\033[0;36m\\]\\xe2\\x94\\x94\\xe2\\x94\\x80[\\[\\033[0;91m\\]$\\[\\033[0;36m\\]]\\[\\]->\\[\\033[0m\\] ', 'PS4': '+ ', 'Color_Magenta_Intense': '\\033[0;95m', 'THEFUCK_DEBUG': 'true', 'SHLVL': '1', 'EDITOR': 'emacs', 'Color_zInvisible': '\\033[8m', 'Color_Magenta_zBackground': '\\033[45m', 'Color_Green_Intense': '\\033[0;92m', 'Color_Blue_Bold': '\\033[1;34m', 'TERM_SESSION_ID': 'C09A2FBE-1B46-4913-9D55-502D1F64C46E', 'Color_Magenta_Bold': '\\033[1;35m', 'MANPAGER': 'less -FXiRgMw', 'Color_Yellow_Bold_Intense': '\\033[1;93m', '_': '/opt/local/Library/Frameworks/Python.framework/Versions/Current/bin/thefuck', 'Color_Red': '\\033[0;31m', 'Color_Black_Intense': '\\033[0;90m', 'PERL5DB': 'use Devel::NYTProf', 'TERM_PROGRAM_VERSION': '326', 'HOME': '/Users/Amory', 'Color_Green_Bold': '\\033[1;32m', 'TERM_PROGRAM': 'Apple_Terminal', 'LANG': 'C', 'Apple_PubSub_Socket_Render': '/tmp/launch-gt5ipy/Render', 'Color_Black': '\\033[0;30m', 'TMPDIR': '/var/folders/h7/1_b2zfh17pzbyrjy5lnm5crh0000gn/T/', 'Color_Red_Bold_Intense': '\\033[1;91m', 'Color_Cyan_zBackground': '\\033[46m', 'Color_White_zBackground': '\\033[47m', 'Color_Blue_Intense': '\\033[0;94m', 'Color_Yellow_Intense': '\\033[0;93m', 'Color_Yellow': '\\033[0;33m', '__CF_USER_TEXT_ENCODING': '0x1F5:0:0', '__CHECKFIX1436934': '1', 'Color_Blue': '\\033[0;34m', 'Color_Blue_zBackground': '\\033[44m', 'LOGNAME': 'Amory', 'PATH': '/Users/Amory/bin:/opt/local/bin:/opt/local/sbin:/usr/local/bin:/opt/local/libexec/perl5.22/sitebin:/opt/local/Library/Frameworks/Python.framework/Versions/Current/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin', 'Color_Cyan': '\\033[0;36m', 'HISTCONTROL': 'ignoreboth', 'TERM': 'xterm-color', 'Color_Magenta': '\\033[0;35m', 'LESS_TERMCAP_me': '\\x1b[0m', 'LESS_TERMCAP_md': '\\x1b[0;34m', 'Color_Magenta_Bold_Intense': '\\033[1;95m', 'LESS_TERMCAP_mb': '\\x1b[0;37m', 'GREP_COLOR': '0;35', 'Color_Yellow_Bold': '\\033[1;33m', 'HISTFILESIZE': '500000', 'Color_Green': '\\033[0;32m', 'HTML_TIDY': '/Users/Amory/.tidyrc', 'SSH_AUTH_SOCK': '/tmp/launch-lJGYgl/Listeners', 'Color_Cyan_Bold_Intense': '\\033[1;96m', 'LC_ALL': 'C', 'Color_Red_Intense': '\\033[0;91m', 'HISTIGNORE': 'ls:la:ll:lal:lla:l1:ltr:lsr:lasr:lt:l:cdl:pwd: --help: -h:btc:clear:exit:logout:history*:h:pg', 'Color_zOff': '\\033[0m', 'Color_White': '\\033[0;37m', 'CLICOLOR': '1', 'LESS_TERMCAP_se': '\\x1b[0m', 'PWD': '/Users/Amory', 'Color_Red_zBackground': '\\033[41m', 'LESS_TERMCAP_so': '\\x1b[0;31m'}; took: 0:00:00.008089\nDEBUG: Importing rule: apt_get; took: 0:00:00.000797\nDEBUG: Importing rule: apt_get_search; took: 0:00:00.000660\nDEBUG: Importing rule: apt_invalid_operation; took: 0:00:00.003456\nDEBUG: Importing rule: brew_install; took: 0:00:00.000846\nDEBUG: Importing rule: brew_unknown_command; took: 0:00:00.000197\nDEBUG: Importing rule: brew_upgrade; took: 0:00:00.000108\nDEBUG: Importing rule: cargo; took: 0:00:00.000098\nDEBUG: Importing rule: cargo_no_command; took: 0:00:00.000492\nDEBUG: Importing rule: cd_correction; took: 0:00:00.022676\nDEBUG: Importing rule: cd_mkdir; took: 0:00:00.000910\nDEBUG: Importing rule: cd_parent; took: 0:00:00.000129\nDEBUG: Importing rule: composer_not_command; took: 0:00:00.000507\nDEBUG: Importing rule: cp_omitting_directory; took: 0:00:00.000839\nDEBUG: Importing rule: cpp11; took: 0:00:00.000440\nDEBUG: Importing rule: dirty_untar; took: 0:00:00.025935\nDEBUG: Importing rule: dirty_unzip; took: 0:00:00.000748\nDEBUG: Importing rule: django_south_ghost; took: 0:00:00.000157\nDEBUG: Importing rule: django_south_merge; took: 0:00:00.000127\nDEBUG: Importing rule: docker_not_command; took: 0:00:00.001010\nDEBUG: Importing rule: dry; took: 0:00:00.000161\nDEBUG: Importing rule: fix_alt_space; took: 0:00:00.000661\nDEBUG: Importing rule: fix_file; took: 0:00:00.017391\nDEBUG: Importing rule: git_add; took: 0:00:00.001141\nDEBUG: Importing rule: git_branch_delete; took: 0:00:00.000530\nDEBUG: Importing rule: git_branch_list; took: 0:00:00.000514\nDEBUG: Importing rule: git_checkout; took: 0:00:00.000632\nDEBUG: Importing rule: git_diff_staged; took: 0:00:00.000844\nDEBUG: Importing rule: git_fix_stash; took: 0:00:00.000589\nDEBUG: Importing rule: git_not_command; took: 0:00:00.000521\nDEBUG: Importing rule: git_pull; took: 0:00:00.003529\nDEBUG: Importing rule: git_pull_clone; took: 0:00:00.000990\nDEBUG: Importing rule: git_push; took: 0:00:00.000504\nDEBUG: Importing rule: git_push_force; took: 0:00:00.000465\nDEBUG: Importing rule: git_push_pull; took: 0:00:00.000437\nDEBUG: Importing rule: git_stash; took: 0:00:00.000424\nDEBUG: Importing rule: git_two_dashes; took: 0:00:00.000428\nDEBUG: Importing rule: go_run; took: 0:00:00.000406\nDEBUG: Importing rule: grep_recursive; took: 0:00:00.000461\nDEBUG: Importing rule: gulp_not_task; took: 0:00:00.000396\nDEBUG: Importing rule: has_exists_script; took: 0:00:00.000435\nDEBUG: Importing rule: heroku_not_command; took: 0:00:00.000404\nDEBUG: Importing rule: history; took: 0:00:00.000225\nDEBUG: Importing rule: java; took: 0:00:00.000401\nDEBUG: Importing rule: javac; took: 0:00:00.000377\nDEBUG: Importing rule: lein_not_task; took: 0:00:00.000698\nDEBUG: Importing rule: ls_lah; took: 0:00:00.000375\nDEBUG: Importing rule: man; took: 0:00:00.000388\nDEBUG: Importing rule: man_no_space; took: 0:00:00.000101\nDEBUG: Importing rule: mercurial; took: 0:00:00.000381\nDEBUG: Importing rule: mkdir_p; took: 0:00:00.000422\nDEBUG: Importing rule: mvn_no_command; took: 0:00:00.000547\nDEBUG: Importing rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000392\nDEBUG: Importing rule: no_command; took: 0:00:00.000423\nDEBUG: Importing rule: no_such_file; took: 0:00:00.000109\nDEBUG: Importing rule: open; took: 0:00:00.000395\nDEBUG: Importing rule: pacman; took: 0:00:00.001061\nDEBUG: Importing rule: pacman_not_found; took: 0:00:00.000474\nDEBUG: Importing rule: pip_unknown_command; took: 0:00:00.000632\nDEBUG: Importing rule: python_command; took: 0:00:00.000442\nDEBUG: Importing rule: python_execute; took: 0:00:00.000379\nDEBUG: Importing rule: quotation_marks; took: 0:00:00.000095\nDEBUG: Importing rule: rm_dir; took: 0:00:00.000435\nDEBUG: Importing rule: rm_root; took: 0:00:00.000411\nDEBUG: Importing rule: sed_unterminated_s; took: 0:00:00.000392\nDEBUG: Importing rule: sl_ls; took: 0:00:00.000093\nDEBUG: Importing rule: ssh_known_hosts; took: 0:00:00.000411\nDEBUG: Importing rule: sudo; took: 0:00:00.000111\nDEBUG: Importing rule: switch_lang; took: 0:00:00.000152\nDEBUG: Importing rule: systemctl; took: 0:00:00.000733\nDEBUG: Importing rule: test.py; took: 0:00:00.000117\nDEBUG: Importing rule: tmux; took: 0:00:00.000401\nDEBUG: Importing rule: touch; took: 0:00:00.000393\nDEBUG: Importing rule: tsuru_login; took: 0:00:00.000388\nDEBUG: Importing rule: tsuru_not_command; took: 0:00:00.000369\nDEBUG: Importing rule: unknown_command; took: 0:00:00.000101\nDEBUG: Importing rule: vagrant_up; took: 0:00:00.000393\nDEBUG: Importing rule: whois; took: 0:00:00.000686\nDEBUG: Trying rule: dry; took: 0:00:00.000282\nDEBUG: Trying rule: test.py; took: 0:00:00.000027\nDEBUG: Trying rule: apt_get_search; took: 0:00:00.009043\nDEBUG: Trying rule: apt_invalid_operation; took: 0:00:00.000345\nDEBUG: Trying rule: brew_install; took: 0:00:00.000029\nDEBUG: Trying rule: brew_unknown_command; took: 0:00:00.000029\nDEBUG: Trying rule: brew_upgrade; took: 0:00:00.000026\nDEBUG: Trying rule: cargo; took: 0:00:00.000025\nDEBUG: Trying rule: cargo_no_command; took: 0:00:00.000291\nDEBUG: Trying rule: cd_correction; took: 0:00:00.000290\nDEBUG: Trying rule: cd_mkdir; took: 0:00:00.000272\nDEBUG: Trying rule: cd_parent; took: 0:00:00.000026\nDEBUG: Trying rule: composer_not_command; took: 0:00:00.000282\nDEBUG: Trying rule: cp_omitting_directory; took: 0:00:00.000280\nDEBUG: Trying rule: cpp11; took: 0:00:00.000280\nDEBUG: Trying rule: dirty_untar; took: 0:00:00.000344\nDEBUG: Trying rule: dirty_unzip; took: 0:00:00.000277\nDEBUG: Trying rule: django_south_ghost; took: 0:00:00.000027\nDEBUG: Trying rule: django_south_merge; took: 0:00:00.000025\nDEBUG: Trying rule: docker_not_command; took: 0:00:00.000286\nDEBUG: Trying rule: fix_alt_space; took: 0:00:00.000032\nDEBUG: Trying rule: fix_file; took: 0:00:00.000177\nDEBUG: Trying rule: git_add; took: 0:00:00.000294\nDEBUG: Trying rule: git_branch_delete; took: 0:00:00.000278\nDEBUG: Trying rule: git_branch_list; took: 0:00:00.000276\nDEBUG: Trying rule: git_checkout; took: 0:00:00.000280\nDEBUG: Trying rule: git_diff_staged; took: 0:00:00.000274\nDEBUG: Trying rule: git_fix_stash; took: 0:00:00.000274\nDEBUG: Trying rule: git_not_command; took: 0:00:00.000274\nDEBUG: Trying rule: git_pull; took: 0:00:00.000272\nDEBUG: Trying rule: git_pull_clone; took: 0:00:00.000273\nDEBUG: Trying rule: git_push; took: 0:00:00.000275\nDEBUG: Trying rule: git_push_pull; took: 0:00:00.000274\nDEBUG: Trying rule: git_stash; took: 0:00:00.000281\nDEBUG: Trying rule: git_two_dashes; took: 0:00:00.000273\nDEBUG: Trying rule: go_run; took: 0:00:00.000275\nDEBUG: Trying rule: grep_recursive; took: 0:00:00.000309\nDEBUG: Trying rule: gulp_not_task; took: 0:00:00.000273\nDEBUG: Trying rule: has_exists_script; took: 0:00:00.000056\nDEBUG: Trying rule: heroku_not_command; took: 0:00:00.000277\nDEBUG: Trying rule: java; took: 0:00:00.000292\nDEBUG: Trying rule: javac; took: 0:00:00.000297\nDEBUG: Trying rule: lein_not_task; took: 0:00:00.000282\nDEBUG: Trying rule: ls_lah; took: 0:00:00.000282\nDEBUG: Trying rule: man; took: 0:00:00.000298\nDEBUG: Trying rule: mercurial; took: 0:00:00.000303\nDEBUG: Trying rule: mkdir_p; took: 0:00:00.000035\nDEBUG: Trying rule: mvn_no_command; took: 0:00:00.000290\nDEBUG: Trying rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000272\nDEBUG: Trying rule: no_such_file; took: 0:00:00.001692\nDEBUG: Trying rule: open; took: 0:00:00.000325\nDEBUG: Trying rule: pip_unknown_command; took: 0:00:00.000286\nDEBUG: Trying rule: python_command; took: 0:00:00.000032\nDEBUG: Trying rule: python_execute; took: 0:00:00.000275\nDEBUG: Trying rule: quotation_marks; took: 0:00:00.000027\nDEBUG: Trying rule: rm_dir; took: 0:00:00.000028\nDEBUG: Trying rule: sed_unterminated_s; took: 0:00:00.000288\nDEBUG: Trying rule: sl_ls; took: 0:00:00.000029\nDEBUG: Trying rule: ssh_known_hosts; took: 0:00:00.000287\nDEBUG: Trying rule: sudo; took: 0:00:00.000087\nDEBUG: Trying rule: switch_lang; took: 0:00:00.000286\nDEBUG: Trying rule: systemctl; took: 0:00:00.000290\nDEBUG: Trying rule: tmux; took: 0:00:00.000277\nDEBUG: Trying rule: touch; took: 0:00:00.000280\nDEBUG: Trying rule: tsuru_login; took: 0:00:00.000275\nDEBUG: Trying rule: tsuru_not_command; took: 0:00:00.000289\nDEBUG: Trying rule: unknown_command; took: 0:00:00.000500\nDEBUG: Trying rule: vagrant_up; took: 0:00:00.000297\nDEBUG: Trying rule: whois; took: 0:00:00.000289\nDEBUG: Trying rule: man_no_space; took: 0:00:00.000030\nDEBUG: Trying rule: no_command; took: 0:00:01.088361\nDEBUG: Total took: 0:00:01.770493\nTraceback (most recent call last):\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/Current/bin/thefuck\", line 11, in \n    sys.exit(main())\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/thefuck/main.py\", line 79, in main\n    fix_command()\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/thefuck/main.py\", line 31, in fix_command\n    selected_command = select_command(corrected_commands)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/thefuck/ui.py\", line 83, in select_command\n    logs.confirm_text(selector.value)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/thefuck/logs.py\", line 61, in confirm_text\n    blue=color(colorama.Fore.BLUE)))\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2191' in position 41: ordinal not in range(128)\n```\n. :+1: \n. ",
    "AlphaT3ch": "Ah, since it's not my project I didn't feel like checking the script, etc. I just submitted this as an error for a heads up, but the install went through anyways.\n. ",
    "vidarkongsli": "@scorphus I was able to edi the utils.py file to make it run. But the program crashed later on with a completely different error. :-/\n. ",
    "mymykuo": "I also have the same issue. Is there any updates on this issue?\nThanks a lot.\n. ",
    "tyrcho": "Same issue for me, seems to work with previous version :\npip.exe install 'thefuck==3.2'\n. ",
    "majormoses": "I would say that it should mirror the results of /etc/sudoers insults option\n. ",
    "bardov": "I've also seen it is possible to get it to work with python3. \nI have python3 installed, but between the issue that tells how to set it up with python3 and the main installation instructions, I fail to figure out how to get it to install properly.\nI'd appreciate a concise how-to install thefuck on a system that has both python2 and python3 (so that it will work only using the python3 route)\n. Not that simple. Obviously this concise instruction is missing something\ndanb@ubuntu-danb ~ $ pip2 uninstall thefuck && pip3 install thefuck\nCannot uninstall requirement thefuck, not installed\n/usr/local/lib/python2.7/dist-packages/pip/vendor/requests/packages/urllib3/util/ssl.py:315: SNIMissingWarning: An HTTPS request has been made, but the SNI (Subject Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#snimissingwarning.\n  SNIMissingWarning\n/usr/local/lib/python2.7/dist-packages/pip/vendor/requests/packages/urllib3/util/ssl.py:120: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.\n  InsecurePlatformWarning\n. ",
    "vkotovv": "I've created a pull request for that.\n. It will not make sense to suggest you typing fuck instead of guck, if you already typed fuck properly for the second time, right? And it will correct gut-> git, just checked that.\n. So, #444 could not really happen?\n. ",
    "lnmds": "pip 1.5.6 from /usr/lib/python2.7/dist-packages (python 2.7)\ngot pip from apt-get in a fresh debian install.\n. ",
    "PLNech": "I confirm this issue, I did need to install a few more python packages than listed in requirements.txt:\n- psutil\n- colorama\n- decorator\nShould I open a separate issue regarding those?\n\nuname -a\nDarwin MacBook-Pro.local 15.3.0 Darwin Kernel Version 15.3.0: Thu Dec 10 18:40:58 PST 2015; root:xnu-3248.30.4~1/RELEASE_X86_64 x86_64\npip --version\npip 8.0.3\n. @mcarton: I fixed the README test and created a test for this rule.\nI wasn't sure which test style I should follow, please tell me if this was not the best way to do so!\n. @scorphus: thanks for your comments! Good catch for the test rule name, thanks for the style advice - a squashed commit correcting these points is on its way :)\n. Done :)\n. @scorphus: Thanks, I updated accordingly and resquashed!\n. \n",
    "kirushyk": "Thank you, because I don't want to manually tweak my .bashrc...\n. ",
    "minhoryang": "+1 GO F!\n. ",
    "larsgrefer": ":+1: \n. I think\nfish\nuser@host ~> fuck\nSeems like fuck alias isn't configured!\nPlease put eval thefuck --alias in your ~/.config/fish/config.fish.\nMore details - https://github.com/nvbn/thefuck#manual-installation\nuser@host ~> fuck\nshould suggest:\nfish\necho \"eval (thefuck --alias | tr '\\n' ';')\" >> ~/.config/fish/config.fish\n. ",
    "kizetsu": "Thank you for the hint. I completely didn't see that it's renamed in Python3.\nI will fix it as soon I get the time and let you know when it's done.\n. ",
    "mihaimariusbaciu": ":+1: \n. ",
    "DragosRadu": ":+1:\n. ",
    "steodor": "Ok, the file move example wasn't best picked as an example, but it could work for other commands :)\n. Oh, for file moving, fuck could check for the confirmation prompt or the use of -f or --force and advise against performing the undo or simply deny the undo. It may do so kinda like this:\n```\n\nfuck no\nYou're screwed, i cannot undo that.\n```\n\nor\n```\n\nfuck no\nThe file you have overwritten is lost forever, but i can move your file back. Proceed? (Y/N)\n```\n\nor\n```\n\nfuck no\nUndoing this may set your computer ablaze. Proceed? (Y/N)\n```\n\n...you get the idea :)\n. Thanks @nvbn, and the idea wasn't limited to fs-level commands, that's the beauty of it i think. It could be reverting a git command, an apt-get installation, etc. I'm sure you have a much broader imagination you can use to find other cool use-cases for such a feature :)\n. Thank you for your time @nvbn! I wasn't insisting on a generic implementation because i imagined it might slow the system too much or use a ton of disk space, but what you're saying sounds really awesome! \nOf course, it would imply a trade of some performance/disk space to basically get an \"undo\" feature, but who knows? Some may find it very useful (\"undo in terminal\" yields quite a number of relevant results in google).\nAnyway, i agree, it should be the topic for another project, i just thought it would sound really cool in this context, pretty much intuitive =) well, you can reopen the issue if it sticks with you :)\n. ",
    "FrederikNS": "I've done exactly the same a couple of times, so I decided to alias fuck to fu which makes it a bit harder to mistype, you might want to run alias guck=fuck ;-)\n. ",
    "keanegit": "Wow, sorry about that. It was still referenced in .bash_profile somewhere. It would still be nice if there were instructions for uninstallation though.\n. ",
    "akeinhell": "Ubuntu 14.04.3 LTS\nPython 2.7.6\n. ru_RU.UTF-8\n. ",
    "udiboy1209": "@mcarton I'm trying to build from your source but it keeps giving me this error: \nerror in thefuck setup command: Invalid environment marker: python_version<\"3.4\" \nDoesn't thefuck dev version work with 2.7?\n. @scorphus I just removed that line for a temporary fix. I'll try upgrading setuptools and pip. Thanks!\n. ",
    "kapsh": "Hm, manually running ./setup.py build works for me too. Maybe I missed something about gentoo distutils. \nSorry for inconvenience. \n. ",
    "Meekohi": "GNU bash, version 3.2.57(1)-release\nThe Fuck 3.3 using Python 2.7.11\nIt doesn't happen with a shorter message like git commmit -m \"shortmessage\". Both of them are hitting rule git_not_command.\n. meekohi(master) ~$ alias fuck\nalias fuck='$(thefuck $(fc -ln -1))'\n. Also this, not sure which you meant:\nmeekohi(master) ~$ thefuck --alias\nTF_ALIAS=fuck alias fuck='PYTHONIOENCODING=utf-8 eval $(thefuck $(fc -ln -1)); history -r'\n. This is what's in .bash_profile: alias fuck='$(thefuck $(fc -ln -1))'\n. VICTORY, new alias works. Thanks!\n. brew install thefuck has a nice ring to it.\n. \ud83d\udc4d \n. ",
    "kiddick": "I've noticed that fuck creates file args with something like that pwf executable /bin/sh [/bin/sh, -c, upwf] pwd.\n. > Can you post output of thefuck --version?\nThe Fuck 3.3 using Python 2.7.10\n. @scorphus @nvbn looks ok now.\n. ",
    "dikiaap": "nooooooo!!!!!!!\n. ",
    "bhavybarca": "@nvbn i would like to help.\nP.s. i am a newbie. ",
    "SnoringFrog": "You have two options, use thefuck from a native Windows installation, or tweak it to not need psutil.\nFor the first option, install Python to Windows directly, install thefuck through that Python, and call that installation from Cygwin. So instead of eval \"$(thefuck --alias)\" in your startup script, you'll need to skip the eval and make the alias directly like this:\nalias fuck='TF_CMD=$(TF_ALIAS=fuck PYTHONIOENCODING=utf-8 TF_SHELL_ALIASES=$(alias) /cygdrive/c/Users/`whoami`/AppData/Local/Programs/Python/Python35-32/Scripts/thefuck.exe $(fc -ln -1)) && eval $TF_CMD && history -s $TF_CMD'\nWhich works for me on Windows 10.\nHoweber, if you don't want to install Python to Windows, then you have to deal with the fact that psutil doesn't support Cygwin. So, you'd have to remove the need for psutil. It only seems to be used in a few calls. I'm currently tossing together a quick, kinda hacky version of thefuck that will run on Cygwin, but I wouldn't consider it reliable.\nfrom __init__.py, in line 6 we have the import:\nfrom psutil import Process\nand line 23 is the only use of that command:\nproc = Process(os.getpid())\nproc is then uses for proc.name(), proc.name, proc.parent(), and proc.parent.  This is all in the _get_shell() function. Find a different way to reliably get the shell, and you that should be taken care of.\nfrom types.py we have the import on line 6:\nfrom psutil import Process, TimeoutExpired\non line 74 is the use of Process:\nproc = Process(popen.pid)\nand on line 78 is TimeoutExpired\nexcept TimeoutExpired\nThis one seems a bit more involved than the previous use. It calls proc.wait(settings.wait_command), proc.children(recursive=True), and proc.kill(). This is all in _wait_output, which kills the command if it takes too long (which is where TimeoutExpired) comes in. \nIf you feel like tackling all that, you'll probably want to dig through the psutil documentation to figure out how best to emulate their commands. \n. If you check out my fork, you'll find my hacked-together version that runs on Cygwin. It won't work outside of a Linux environment, and ignores the checks for command timeouts, so using the original is likely a better option, but it's there if you want a Cygwin-only install.\n. ",
    "lawben": "@mcarton all tests passing, please consider for merge\n. ",
    "thedrow": "Oh I installed thefuck through homebrew which ships 3.4.\nCare to update?\n. I got 3.6 and I get git as one of the options but the first one is still go and not git.\n. Why not? If the --help of the command can be parsed we should be able to figure out the right command right away.\n. :(\nIn that case it might be worth searching through the history and comparing differences.\nIf we don't see go commit but do see git commit for example then we should suggest it first.\n. My OS is Ubuntu 17.10.\nIf I type something in another language other than English I get:\n\u05d1\u05dc\u05d4\n\u05d1\u05dc\u05d4: command not found. Actually if you'll redefine the command_not_found_handle() function in the shell you'll be able to hijack those events.\nThis is the output of type command_not_found_handle:\nbash\ncommand_not_found_handle () \n{ \n    if [ -x /usr/lib/command-not-found ]; then\n        /usr/lib/command-not-found -- \"$1\";\n        return $?;\n    else\n        if [ -x /usr/share/command-not-found/command-not-found ]; then\n            /usr/share/command-not-found/command-not-found -- \"$1\";\n            return $?;\n        else\n            printf \"%s: command not found\\n\" \"$1\" 1>&2;\n            return 127;\n        fi;\n    fi\n}. @nvbn What do I do if the target language doesn't have any capital letters?. @nvbn I get all caps English letters.. I'm not sure why the build fails if all the tests pass.. I can confirm this problem does not reproduce on Python 3.. Yes. There is no UnicodeDecodeError this time but the rule does not trigger for some reason. . The same happens on a docker container. Just type thefuck \u05da\u05d3 into your shell. You should get ls instead.. My apologies. I thought the code that contains my PR is already released.\n:man_facepalming:  . ",
    "smithtrenton": "I'm getting a similar issue with gitp ush being corrected to git ush on 3.6 using python 2.7.10\n. But suggesting a command that doesn't exist as the first option kind of makes it useless?\n. ",
    "deiga": "Aliases: https://gist.github.com/deiga/b6f397e89ed2a7939a3e\nAnd my .zprofile includes eval $(thefuck --alias) \n. Yeah, something in newer versions fixed this.\n. ",
    "Zarokka": "I had the same problem with 3.4\nbut with 3.6 it works fine for me again\n. ",
    "chantisnake": "Thanks hope this is pushed to pip as soon as possible.\n. Thanks, I just got the fix, it is awesome, but there is still decoding error like \n\ufffd[1mgit commit -am 'test'\ufffd[0m [\ufffd[32menter\ufffd[0m/\ufffd[34m\u2191\ufffd[0m/\ufffd[34m\u2193\ufffd[0m/\ufffd[31mctrl+c\ufffd[0m]\nthis... Is there a way to fix this?\n. ",
    "kondr1": "I have problem like this.  How fix it?\nkonstantin@pc-kondratov MSYS /c/Users/konstantin\n$ fuck\nTraceback (most recent call last):\n  File \"c:\\python27\\lib\\runpy.py\", line 174, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"c:\\python27\\lib\\runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"C:\\Python27\\Scripts\\thefuck.exe\\__main__.py\", line 9, in <module>\n  File \"c:\\python27\\lib\\site-packages\\thefuck\\main.py\", line 82, in main\n    fix_command()\n  File \"c:\\python27\\lib\\site-packages\\thefuck\\main.py\", line 26, in fix_command\n    command = types.Command.from_raw_script(sys.argv[1:])\n  File \"c:\\python27\\lib\\site-packages\\thefuck\\types.py\", line 124, in from_raw_script\n    stderr = result.stderr.read().decode('utf-8')\n  File \"c:\\python27\\lib\\encodings\\utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xad in position 6: invalid start byte. ",
    "Artoria2e5": "thefuck actually has a long way to go regarding whitespace/metachar-safety. Take 237f43e as an example (I found the cd issue when searching for 'whitespace' in issues to make sure that I didn't get a dup):\nPython\nreturn 'cd \"{0}\"'.format(cwd)\nThis is unfortunately not the safe thing to do, e.g.:\nsh\ncd \"$(mktemp -d)\"\nmkdir aaaa\\\"\nthefuck cd aaa\nYou will get some output like:\nsh\ncd \"/tmp/tmp.R71CQrZT1O/aaaa\"\"\nUnbalanced quotes.\nThe Right Thing\u2122 to do is to actually use lists as the data structure for internal representation of single simple commands, i.e.\nPython\nreturn ['cd', cwd]\nAnd finally do some quoting based on shell-dependent rules before outputting (already there in the source).\nNote that POSIX shells don't consider quoted things like 'if' as keywords, and that's why I am putting emphasis on simple.\n. ",
    "plttn": "~~So i see that #495 added put to history back to Fish, but I'm not seeing any change on 3.9. Do i need to modify my alias?~~\nIgnore me, the alias hadn't updated to the new one provided. \n. ",
    "macmodrov": "Using easy-install instead of pip to install decorator fixed this particular issue for me.\n. ",
    "ncolton": "Perhaps it should be considered a feature that one cannot go and fuck oneself?\n. ",
    "rnestler": "Configure your shell to fuck self :wink:\nrnestler@ltli22 ~ % apt upgrade\nE: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\n100 rnestler@ltli22 ~ % fukc\nzsh: correct 'fukc' to 'fuck' [nyae]? y\nsudo apt upgrade [enter/\u2191/\u2193/ctrl+c]. > It appears to work until I need to restart Terminal.\nSo probably on OSX ~/.bashrc doesn't get sourced automatically? This stackoverflow question may give some insight. . This is an issue with the mintty terminal. See https://github.com/git-for-windows/git/wiki/FAQ#some-native-console-programs-dont-work-when-run-from-git-bash-how-to-fix-it. @nvbn The problem with python is, that it thinks it runs in non-interactive mode because it is connected with pipes when running in mintty. For the python interpreter it's enough to pass the -i flag:\n```\n$ python\nnothing happens, need to press Ctrl-C to quit\n$ python -i\nPython 2.7.12 (v2.7.12:d33e0cf91556, Jun 27 2016, 15:19:22) [MSC v.1500 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\n```\nI'm not sure if we can somehow force python to run in interactive mode.\n. > Same problem here. Is there any (even dirty) workaround plz ?\n\n\n\nYou can run it from cmd.exe or from PowerShell\n\n. ",
    "onewheelskyward": "hah yes it is.\n. I've just run into this recently.  Very strange.\n. Looks specific to 2.4.0, I downgraded fish to 2.3.1 and the behaviour is as expected.\n. ",
    "mdhausman": "So I guess this is just more of the weird whitespace handling. We can add xfce-terminal to the list of terminals that aren't being handled properly.\n\u2665 mhausman:~/<snip> \u203d checkout master\ncheckout: command not found\n\u2665 mhausman:~/<snip> \u203d fuck\ngit checkout master [enter/\u2191/\u2193/ctrl+c]\nerror: pathspec '' did not match any file(s) known to git.\n. \u2665 mhausman:~ \u203d thefuck --version\nThe Fuck 3.9 using Python 2.7.6\n\u2665 mhausman:~ \u203d python -c 'from thefuck.shells import shell; print(shell.__class__)'\n<class 'thefuck.shells.bash.Bash'>\n. ```\n\u2665 mhausman:~ \u203d bash --version \nGNU bash, version 4.3.11(1)-release (x86_64-pc-linux-gnu)\nCopyright (C) 2013 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later http://gnu.org/licenses/gpl.html\nThis is free software; you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\u2665 mhausman:~ \u203d apt-cache show xfce4-terminal | grep -E 'Pa|In|Ve'\nPackage: xfce4-terminal\nInstalled-Size: 2071\nVersion: 0.6.3-1ubuntu1\n```\n. Looks like more or less the same issue I got on xfce-terminal: #499.\n. ",
    "dargueta-work": "Happening to me on OSX 10.11.4 as well. Tried installing it with Homebrew and via pip, neither works.\n. ",
    "dazahn": "Reinstalling fixed the issue\n. ",
    "tomoshi0809": "I guess it is difficult to equip your proposal. In the terminal, you inputted Ctrl + C to the \"override\" message, but this prevents  the fuck command catch the stderr or stdout (the fuck command depends on the message from the stderr or stdout). I recommend you should reply 'y' to the override message or add -f option to the 'rm' command.\n. Yes. I think so.\n. I suppose this problem is derived from the feature of \"shlex\" class used for splitting input commands.\nshlex.split () ignores the escape character and catches the next character.\nPlease refer to the document of shlex (https://docs.python.org/3.6/library/shlex.html#module-shlex)\n\"Non-quoted escape characters (e.g. '\\') preserve the literal value of the next character that follows;\". ",
    "wych42": "Also rm command with auto sudo is dangerous.\n. ",
    "caesar": "@nvbn that's what I mean, but we're using the words origin and destination the opposite way around. For me the destination is the file you're liking to, the origin is where you're liking from.\nClearly at least some other people think of it your way round, which is why the arguments are in that order I suppose.\nAnyway, the point is that I tend to put the arguments the wrong way around. The ideal solution would be for me to learn to do it the right way around, but it hasn't happened yet...\nBut that's what fuck is for, right? :-D\n. ",
    "breeze9512": "I also want this function :)\n. ",
    "sbrl": "@mcarton Unfortunately, I don't feel that an alias is enough. As somebody who doesn't swear at all, I'd feel extremely uncomfortable having this kind of language lying around my system.\n. ",
    "Porges": "I fixed this by setting $env:PYTHONIOENCODING='utf-8' in my $PROFILE. ",
    "jagretz": "FYI, this is documented https://github.com/nvbn/thefuck/wiki/Shell-aliases#powershell so this issue can likely be closed. ",
    "rubo77": "doesn't work either:\n```\nCleaning up...\nCommand /usr/bin/python -c \"import setuptools, tokenize;file='/tmp/pip-build-0XUa46/psutil/setup.py';exec(compile(getattr(tokenize, 'open', open)(file).read().replace('\\r\\n', '\\n'), file, 'exec'))\" install --record /tmp/pip-M8zRBr-record/install-record.txt --single-version-externally-managed --compile --user failed with error code 1 in /tmp/pip-build-0XUa46/psutil\nStoring debug log for failure in /home/ruben/.pip/pip.log\n```\nwhat about python 2 or 3? do I have to configure something\n$ python --version\nPython 2.7.10\n. This works:\nsudo apt update\nsudo apt install python3-dev python3-pip\nsudo -H pip3 install thefuck\nseems like there are some dependencies missing in the current debian package. You should fix that\n. I found out:\nOn my Ubuntu it still gets the same errors unless I add this in my .bashrc:\neval $(thefuck --alias)\n\nIt seems like this sentence\n\nYou should place this command in your .bash_profile, .bashrc, .zshrc or other startup script\n\nis not really convincing to really do it\nshould be changed:\nhttps://github.com/nvbn/thefuck/pull/613. ",
    "notriddle": "Just alias it to f.\n. ",
    "pizzapanther": "You could possibly even mis-type f.  So basically you can't double fuck.  That just seems ashamed.\n. ",
    "Ham3D": "there is lots of Fucks.. ",
    "rmax": "You are missing the python development headers (if you are using ubuntu: sudo apt-get install python-dev).\nPD: Unless you know what you are doing, it's not recommended to use sudo pip as it could mess up your system python packages, use pip install --user, but this may require you to modifiy your path to include the .local/bin directory :/\n. ",
    "hq6": "Does bash's reset command fix this issue?\n. ",
    "mechcozmo": "It does! You have to type it blind, though.  Using the menu item to reset (or hard reset) doesn't work.\n. zsh doesn't have this problem... exactly\n```\n$ ssh-add add .ssh/github_rsa\nadd: No such file or directory\nEnter passphrase for .ssh/github_rsa: ^C\n$ fuck\nEnter passphrase for .ssh/github_rsa: No fucks given # I was copying the passphrase out of my password manager when the \"No fucks given\" response killed my command entry\n$ fuck\nEnter passphrase for .ssh/github_rsa:\nssh-add .ssh/github_rsa [enter/\u2191/\u2193/ctrl+c]\nAborted # I aborted this because I wasn't sure what the password entry text was doing above the confirmation command\n```\nBut the shell doesn't break, and I end up being able to type out the command correctly.\n. ",
    "rojepp": "FWIW, I see this issue in ubuntu on Windows 10. Is thefuck not supposed to wait for me to enter my password when sudo-ing something?\n. ",
    "Haroenv": "But what if I want to do it by default with confirmation and just once without, so with a flag; would fuck -y be possible?\n. I use Fish usually, and yes, I'll look at how this would work internally\n. Thanks, and sorry for not following up on the PR. Aha, it's there, I interpreted your comment differently!\n. Okay, so @scorphus, I found how to add a fish argument, but where should this be documented, tested?\ncontains in fish: https://fishshell.com/docs/current/commands.html#contains-example\n. For powershell, something like switch could be used (but I don't know how it finds out what the name of the flag is\n. In bash (probably the other shells as well, seeing they're aliases instead of functions too) it'll need to be replaced by a function\n. I just realised that this would unset the confirmation for everything after once -y, will need else and setting it back to the default. (or setting it to the default at the end of the command maybe?)\n. That seems like a great idea, should need to check if that saves the variable or if it uses it just once though. Using fuckit as a new alias makes sense\n. ",
    "theReticent": "\nalias | grep fuck\n   fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'\nI have the following line in my .zshrc\n   eval \"$(thefuck --alias)\"\nThe Fuck 3.2 using Python 2.7.10\n. Upgrading to The Fuck 3.11 fixed the issue for me.\n. \n",
    "ddspog": "I solve this putting this command on a Invoke-TheFuck.alias.ps1 file. I use this cmder-powershell-powerline-prompt btw, so the file it's in the profile.d folder.\n```powershell\nfuck\nfunction Invoke-TheFuck {\n    $history = (Get-History -Count 1).CommandLine;\n    if (-not [string]::IsNullOrWhiteSpace($history)) {\n        $fuck = $(thefuck $args $history);\n        if (-not [string]::IsNullOrWhiteSpace($fuck)) {\n            if ($fuck.StartsWith(\"echo\")) { $fuck = $fuck.Substring(5); }\n            else { Invoke-Expression \"$fuck\"; }\n        }\n    }\n}\nSet-Alias -name \"fuck\" -value \"Invoke-TheFuck\"\n```\nThe only problem I have with this, it's that the if fuck it's the first command run, it would always show the #673 problem. So, after I restart my cmder Powershell session it's like this:\n\nThis problem also happens after some commands, like Get-ChildItem-Color.. That didn't work for me. I've set the environment variable, but no success.\nI've even reinstalled thefuck with pip, with the environment variable already set. I was hoping that executing the whole python import thefuck with the correct encoding would solve the issue, but no.\nSo, waiting for more suggestions.\nBtw, fuck executes like this, after no commands at all, or after wrong calls like fick; right calls like ls or Get-ChildItem-Color. \nIf I execute after git stats, fuck will work like a charm.. ",
    "kthrift": "This pull request fixes a bug in the _get_user_dir_path method that created a\ndirectory named '~' in the current working directory unless either of\nthe following were true:\n1. the legacy user config directory, named $HOME/.thefuck, existed\n2. the environment variable XDG_CONFIG_HOME existed and contained /fully expanded paths (i.e. $HOME/.config instead of ~/.config)\nThe simplest change to fix the issue would be to change line 52 of\nthefuck/conf.py as so:\n    --- return Path(xdg_config_dir).joinpath('thefuck')\n+++ return Path(xdg_config_dir).expanduser().joinpath('thefuck')\nHowever, this changeset includes some minor refactoring to provide:\n- a single 'return value' statement\n- fixes the logging statement for the case where XDG_CONFIG_HOME is set to something other than $HOME/.config\n. ",
    "medakk": "Add the pattern \"You have to use sudo for that.\" to sudo.py.\n. ",
    "deeuu": "Refer to this issue\nI'd keep this issue open until the xontrib is fixed.. ",
    "JordonPhillips": "I see, looks like I missed the list[str] bit in the docs too. Thanks!\n. ",
    "techhazard": "Perhaps I just need to update thefuck...\n. ",
    "SimenB": "@ProgVal for that case in particular you can do gpsup. \nI've also noticed that aliased commands aren't fucked properly, though, would like a fix for that.\n. ",
    "darrynten": "\ud83d\udc4d . ",
    "ahrenstein": "+1. I opened a similar issue at #645 . It seems editing the default rule to include the alias no longer works. So the latest version of thefuck no longer decodes bash aliases into the command aliased to them. Can this be correced?. Sure. I basically just copied ssh_known_hosts.py and added \"root\" to the list of commands to watch for:\n~/.config/thefuck/rules/ssh_known_hosts.py\n```\nimport re\nfrom thefuck.utils import for_app\ncommands = ('ssh', 'scp', 'root')\n@for_app(*commands)\ndef match(command):\n    if not command.script:\n        return False\n    if not command.script.startswith(commands):\n        return False\npatterns = (\n    r'WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!',\n    r'WARNING: POSSIBLE DNS SPOOFING DETECTED!',\n    r\"Warning: the \\S+ host key for '([^']+)' differs from the key for the IP address '([^']+)'\",\n)\n\nreturn any(re.findall(pattern, command.stderr) for pattern in patterns)\n\ndef get_new_command(command):\n    return command.script\ndef side_effect(old_cmd, command):\n    offending_pattern = re.compile(\n        r'(?:Offending (?:key for IP|\\S+ key)|Matching host key) in ([^:]+):(\\d+)',\n        re.MULTILINE)\n    offending = offending_pattern.findall(old_cmd.stderr)\n    for filepath, lineno in offending:\n        with open(filepath, 'r') as fh:\n            lines = fh.readlines()\n            del lines[int(lineno) - 1]\n        with open(filepath, 'w') as fh:\n            fh.writelines(lines)\nOptional:\npriority = 5\nenabled_by_default = True\n```\nBash alias for root in ~/.profile\nalias root='ssh -A -lroot'. Also I'm installing thefuck via Homebrew so it doesn't seem to see 3.17 just yet.. This appears to have been fixed in the latest version.. ",
    "shssoichiro": "This does not seem to be fixed in 3.17. ",
    "Shir0kamii": "I confirm this is not fixed, I'm in 3.18 and this is still present.. ",
    "edwardsmit": "I'm on 3.21 and this is not fixed. Using zsh 5.4.1 and a simple alias alias gp='git push'. @scorphus No fucks given\nThe alias gp is set to git push. @scorphus \ud83c\udf89 You're on to something, because now it correctly generates the command I expect: git push --set-upstream origin feature/test [enter/\u2191/\u2193/ctrl+c]. Unfortunately it doesn't. I verified that TheFuck is initialised after the alias is defined like so:\n```\necho $(alias)\nTheFuck\neval \"$(thefuck --alias)\"\nWhich showed me that the aliases are defined before the first call to `thefuck`. @scorphus Is there anything I can do to help you debug/fix this problem?. @scorphus\ntype fuck\nfuck is a shell function from /Users/edwardsmit/.zshrc\nfuck is /usr/local/bin/fuck\nfunctions fuck\nfuck () {\n        TF_PREVIOUS=$(fc -ln -1 | tail -n 1)\n        TF_CMD=$(\n                    TF_ALIAS=fuck\n                    TF_SHELL_ALIASES=$(alias)\n                    PYTHONIOENCODING=utf-8\n                    thefuck $TF_PREVIOUS THEFUCK_ARGUMENT_PLACEHOLDER $*\n                )  && eval $TF_CMD\n        test -n \"$TF_CMD\" && print -s $TF_CMD\n}\n```. @scorphus Is there anything I can help you with at this point?. ping @scorphus . Just tried out today, and seems fixed with 3.25\nAFAIC this issue can be closed. ",
    "gligoran": "I'm having a similar issue:\n```\n$ ~/repo git:(my-branch) gp\nfatal: The current branch my-branch has no upstream branch.\nTo push the current branch and set the remote as upstream, use\ngit push --set-upstream origin my-branch\n\n$ ~/repo git:(my-branch) fuck\nNo fucks given\n$ ~/repo git:(my-branch) git push\nfatal: The current branch my-branch has no upstream branch.\nTo push the current branch and set the remote as upstream, use\ngit push --set-upstream origin my-branch\n\n$ ~/repo git:(my-branch) fuck\ngit push --set-upstream origin my-branch [enter/\u2191/\u2193/ctrl+c]\n```\nI'm using Oh My Zsh with the git plugin. As you can see if I type out the git command, it works as it should, but it doesn't give a fuck for my alias.\nI'm running this on a Ubuntu 14.04 that's running through vagrant.. ",
    "hugovk": "It's not working for me (on macOS High Sierra). \nInfo:\nbash\n\u230266% [hugo:~/github/test] delete-me 3s 1 \u00b1 alias fuck\nfuck='eval $(thefuck $(fc -ln -1)); history -r'\n```bash\n\u230269% [hugo:~/github/test] delete-me 2s \u00b1 brew info thefuck\nthefuck: stable 3.25 (bottled), HEAD\nProgramatically correct mistyped console commands\nhttps://github.com/nvbn/thefuck\n/usr/local/Cellar/thefuck/3.25 (710 files, 6.3MB)\n  Poured from bottle on 2017-12-04 at 15:32:19\nFrom: https://github.com/Homebrew/homebrew-core/blob/master/Formula/thefuck.rb\n==> Requirements\nRequired: python3 \u2714\n==> Caveats\nAdd the following to your .bash_profile, .bashrc or .zshrc:\neval $(thefuck --alias)\nFor other shells, check https://github.com/nvbn/thefuck/wiki/Shell-aliases\n```\nUsing gp doesn't work:\nbash\n\u230266% [hugo:~/github/test] master 1 \u00b1 gco -b delete-me\nSwitched to a new branch 'delete-me'\nbash\n\u230261% [hugo:~/github/test] delete-me \u00b1 alias gp\ngp='git push'\n```bash\n\u230265% [hugo:~/github/test] delete-me \u00b1 gp\nfatal: The current branch delete-me has no upstream branch.\nTo push the current branch and set the remote as upstream, use\ngit push --set-upstream origin delete-me\n\nbash\n\u230265% [hugo:~/github/test] delete-me 128 \u00b1 fuck\ngcp [enter/\u2191/\u2193/ctrl+c]\nusage: git cherry-pick [] ...\n   or: git cherry-pick \n--quit                end revert or cherry-pick sequence\n--continue            resume revert or cherry-pick sequence\n--abort               cancel revert or cherry-pick sequence\n-n, --no-commit       don't automatically commit\n-e, --edit            edit the commit message\n-s, --signoff         add Signed-off-by:\n-m, --mainline <parent-number>\n                      select mainline parent\n--rerere-autoupdate   update the index with reused conflict resolution if possible\n--strategy <strategy>\n                      merge strategy\n-X, --strategy-option <option>\n                      option for merge strategy\n-S, --gpg-sign[=<key-id>]\n                      GPG sign commit\n-x                    append commit name\n--ff                  allow fast-forward\n--allow-empty         preserve initially empty commits\n--allow-empty-message\n                      allow commits with empty messages\n--keep-redundant-commits\n                      keep redundant, empty commits\n\nfc: event not found: -r\n```\nUsing git push works:\n```bash\n\u2302119% [hugo:~/github/test] delete-me \u00b1 git push\nfatal: The current branch delete-me has no upstream branch.\nTo push the current branch and set the remote as upstream, use\ngit push --set-upstream origin delete-me\n\nbash\n\u230291% [hugo:~/github/test] delete-me 128 \u00b1 fuck\ngit push --set-upstream origin delete-me [enter/\u2191/\u2193/ctrl+c]\nTotal 0 (delta 0), reused 0 (delta 0)\nTo https://github.com/hugovk/test\n * [new branch]      delete-me -> delete-me\nBranch 'delete-me' set up to track remote branch 'delete-me' from 'origin'.\nfc: event not found: -r\n```\n. @scorphus Thanks, that fixed it!\nYou were right, I had an old alias fuck='eval $(thefuck $(fc -ln -1)); history -r' in my .zshrc, replacing that with eval $(thefuck --alias) gives this:\nbash\n94% [hugo:~] 1 % which fuck\nfuck () {\n    TF_PREVIOUS=$(fc -ln -1 | tail -n 1)\n    TF_CMD=$( TF_ALIAS=fuck TF_SHELL_ALIASES=$(alias) PYTHONIOENCODING=utf-8 thefuck $TF_PREVIOUS THEFUCK_ARGUMENT_PLACEHOLDER $* )  && eval $TF_CMD\n    test -n \"$TF_CMD\" && print -s $TF_CMD\n}\n```bash\n\u230271% [hugo:~/github/test] delete-me3 \u00b1 gp\nfatal: The current branch delete-me3 has no upstream branch.\nTo push the current branch and set the remote as upstream, use\ngit push --set-upstream origin delete-me3\n\nbash\n\u230271% [hugo:~/github/test] delete-me3 128 \u00b1 fuck\ngit push --set-upstream origin delete-me3 [enter/\u2191/\u2193/ctrl+c]\nTotal 0 (delta 0), reused 0 (delta 0)\nTo https://github.com/hugovk/test\n * [new branch]      delete-me3 -> delete-me3\nBranch 'delete-me3' set up to track remote branch 'delete-me3' from 'origin'.\n```. ",
    "Jean85": "I'm currently having this issue using the OhMyZsh plugin. I have just installed my machine, so it's all perfectly clean.\nThe plugin seems to be in order: https://github.com/robbyrussell/oh-my-zsh/blob/ebda8af870acc295388ed187f0139a8bffa83196/plugins/thefuck/thefuck.plugin.zsh#L7\nHow can I debug this further? I'm using The Fuck 3.27 using Python 3.6.5. ",
    "slavaGanzin": "You should have a massive pinky...\n. ",
    "wikiti": "@slavaGanzin This:\n\n. ",
    "andrewcates": "Unsubscribe\n\nOn Oct 30, 2016, at 10:26 PM, Coveralls notifications@github.com wrote:\nCoverage remained the same at 93.192% when pulling b519d31 on josephfrazier:bash-honor-alter-history into cb99e42 on nvbn:master.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "awonnacott": "I'm not familiar with your testing framework, but I'll look into it.\n. and perhaps yarn update suggest yarn upgrade. ",
    "octoxan": "Same. That's all this thing does is return no fucks given for anything in .zsh on Ubuntu. ",
    "liuml07": "I tested and it works as a charm.  Thanks!\n. +1 (non-binding).\nThanks for the fix.\n. ",
    "jedwards1211": "@nvbn awesome, thank you!. awesome, thanks!  I will basically think of fuck -r as the \"fucker\" command \ud83d\ude06 . ",
    "gooddadmike": "The Fuck 3.11 using Python 3.5.1\n```\nDEBUG: Run with settings: {'alter_history': True,\n 'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'exclude_rules': [],\n 'history_limit': None,\n 'no_colors': False,\n 'priority': {},\n 'require_confirmation': True,\n 'rules': [],\n 'slow_commands': ['lein', 'react-native', 'gradle', './gradlew'],\n 'user_dir': PosixPath('/Users/msearcy/.config/thefuck'),\n 'wait_command': 3,\n 'wait_slow_command': 15}\nDEBUG: Received stdout:\nDEBUG: Received stderr: 17:26:00.268329 git.c:561               trace: exec: 'git-brnch'\n17:26:00.268825 run-command.c:343       trace: run_command: 'git-brnch'\ngit: 'brnch' is not a git command. See 'git --help'.\nDid you mean this?\n    branch\nDEBUG: Call: git brnch; with env: {'system_version': '10.12', 'TMPDIR': '/var/folders/sc/n1y0593n063dd6lgvt7yyz3d5km7r0/T/', 'HISTCONTROL': 'ignoreboth', 'MYSQL_HOME': '/usr/local/bin/mysql', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.WQxeyE5Wsa/Render', 'rvm_stored_umask': '0022', 'SHELL': '/bin/bash', 'GIT_PS1_SHOWDIRTYSTATE': 'true', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.uf1Jzy8HRu/Listeners', 'ITERM_ORIG_PS1': '\\[\\e[1;37m\\]\u2554\u2550[\\[\\e[1;32m\\]\\u@\\h\\[\\e[0m\\] \\[\\e[1;37m\\]: \\[\\e[1;34m\\]\\w\\[\\e[1;37m\\]]\\[\\e[1;37m\\]\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\\n\\[\\e[0m\\]\\[\\e[1;37m\\]\u2560\u2550[\\[\\e[1;32m\\]rvm\\[\\e[0m\\] \\[\\e[1;37m\\]: \\[\\e[1;34m\\]ruby-2.2.1\\[\\e[1;37m\\]]\\[\\e[0m\\]\\n\\[\\e[1;37m\\]\u255a\u2550 $\\[\\e[0m\\] ', 'TERM_PROGRAM': 'iTerm.app', 'GIT_PS1_SHOWSTASHSTATE': 'true', '_system_arch': 'x86_64', 'TERM_PROGRAM_VERSION': '3.0.10', 'HOME': '/Users/msearcy', 'XPC_FLAGS': '0x0', 'LC_ALL': 'C', 'RUBY_VERSION': 'ruby-2.2.1', 'ITERM_SESSION_ID': 'w1t2p1:80FEE43B-7BF8-4E99-AEC2-ACECAB646B97', 'EDITOR': 'nvim', 'USER': 'msearcy', 'IRBRC': '/Users/msearcy/.rvm/rubies/ruby-2.2.1/.irbrc', 'VISUAL': 'nvim', 'rvm_loaded_flag': '1', 'SHLVL': '1', 'PS1': '\\[\\e[1;37m\\]\u2554\u2550[\\[\\e[1;32m\\]\\u@\\h\\[\\e[0m\\] \\[\\e[1;37m\\]: \\[\\e[1;34m\\]\\w\\[\\e[1;37m\\]]\\[\\e[1;37m\\]\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\\n\\[\\e[0m\\]\\[\\e[1;37m\\]\u2560\u2550[\\[\\e[1;32m\\]rvm\\[\\e[0m\\] \\[\\e[1;37m\\]: \\[\\e[1;34m\\]ruby-2.2.1\\[\\e[1;37m\\]]\\[\\e[0m\\]\\n\\[\\e[1;37m\\]\u255a\u2550 $\\[\\e[0m\\] ', 'ITERM_PREV_PS1': '\\[\\x1b]133;D;$?\\x07\\x1b]1337;RemoteHost=msearcy@TLH01853.local\\x07\\x1b]1337;CurrentDir=/Users/msearcy\\x07\\x1b]133;A\\x07\\]\\[\\e[1;37m\\]\u2554\u2550[\\[\\e[1;32m\\]\\u@\\h\\[\\e[0m\\] \\[\\e[1;37m\\]: \\[\\e[1;34m\\]\\w\\[\\e[1;37m\\]]\\[\\e[1;37m\\]\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\\n\\[\\e[0m\\]\\[\\e[1;37m\\]\u2560\u2550[\\[\\e[1;32m\\]rvm\\[\\e[0m\\] \\[\\e[1;37m\\]: \\[\\e[1;34m\\]ruby-2.2.1\\[\\e[1;37m\\]]\\[\\e[0m\\]\\n\\[\\e[1;37m\\]\u255a\u2550 $\\[\\e[0m\\] \\[\\x1b]133;B\\x07\\]', 'CLICOLOR': 'YES', 'ITERM_PROFILE': 'Hotkey Window', 'GIT_PS1_SHOWUNTRACKEDFILES': 'true', 'GEM_HOME': '/Users/msearcy/.rvm/gems/ruby-2.2.1', 'rvm_user_install_flag': '1', 'PYVENV_LAUNCHER': '/Library/Frameworks/Python.framework/Versions/3.5/bin/python3', 'rvm_bin_path': '/Users/msearcy/.rvm/bin', 'HISTFILESIZE': '2000', 'GEM_PATH': '/Users/msearcy/.rvm/gems/ruby-2.2.1:/Users/msearcy/.rvm/gems/ruby-2.2.1@global', 'rvm_prefix': '/Users/msearcy', '_system_name': 'OSX', 'XPC_SERVICE_NAME': '0', 'VIRTUALENVWRAPPER_PYTHON': '/Library/Frameworks/Python.framework/Versions/3.5/bin/python3', 'LOGNAME': 'msearcy', '__CF_USER_TEXT_ENCODING': '0x4B2A1F00:0x0:0x0', 'PWD': '/Users/msearcy', 'LANG': 'C', 'rvm_path': '/Users/msearcy/.rvm', 'rvm_version': '1.26.11 (latest)', 'GIT_TRACE': '1', 'TODOTXT_DEFAULT_ACTION': 'ls', 'HISTSIZE': '1000', '_system_type': 'Darwin', 'PATH': '/Users/msearcy/.composer/vendor/bin:/Library/Frameworks/Python.framework/Versions/3.5/bin:/Library/Frameworks/Python.framework/Versions/3.4/bin:/Library/Frameworks/Python.framework/Versions/3.4/bin:/Users/msearcy/.composer/vendor/bin:/Library/Frameworks/Python.framework/Versions/3.5/bin:/Library/Frameworks/Python.framework/Versions/3.4/bin:/Library/Frameworks/Python.framework/Versions/3.4/bin:/Users/msearcy/.rvm/gems/ruby-2.2.1/bin:/Users/msearcy/.rvm/gems/ruby-2.2.1@global/bin:/Users/msearcy/.rvm/rubies/ruby-2.2.1/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/MacGPG2/bin:/Users/msearcy/.rvm/bin:/Users/msearcy/.rvm/bin', 'TERM': 'xterm-256color', 'TERM_SESSION_ID': 'w1t2p1:80FEE43B-7BF8-4E99-AEC2-ACECAB646B97', '': '/Library/Frameworks/Python.framework/Versions/3.5/bin/thefuck', 'MY_RUBY_HOME': '/Users/msearcy/.rvm/rubies/ruby-2.2.1', 'THEFUCK_DEBUG': 'true'}; is slow:  took: 0:00:00.061088\nDEBUG: Importing rule: apt_get; took: 0:00:00.002980\nDEBUG: Importing rule: apt_get_search; took: 0:00:00.000858\nDEBUG: Importing rule: apt_invalid_operation; took: 0:00:00.001593\nDEBUG: Importing rule: brew_install; took: 0:00:00.001775\nDEBUG: Importing rule: brew_unknown_command; took: 0:00:00.000544\nDEBUG: Importing rule: brew_update_formula; took: 0:00:00.000668\nDEBUG: Importing rule: brew_upgrade; took: 0:00:00.000445\nDEBUG: Importing rule: cargo; took: 0:00:00.000484\nDEBUG: Importing rule: cargo_no_command; took: 0:00:00.000755\nDEBUG: Importing rule: cd_correction; took: 0:00:00.003048\nDEBUG: Importing rule: cd_mkdir; took: 0:00:00.000690\nDEBUG: Importing rule: cd_parent; took: 0:00:00.000414\nDEBUG: Importing rule: chmod_x; took: 0:00:00.000350\nDEBUG: Importing rule: composer_not_command; took: 0:00:00.000570\nDEBUG: Importing rule: cp_omitting_directory; took: 0:00:00.000749\nDEBUG: Importing rule: cpp11; took: 0:00:00.000540\nDEBUG: Importing rule: dirty_untar; took: 0:00:00.000577\nDEBUG: Importing rule: dirty_unzip; took: 0:00:00.000586\nDEBUG: Importing rule: django_south_ghost; took: 0:00:00.000441\nDEBUG: Importing rule: django_south_merge; took: 0:00:00.000352\nDEBUG: Importing rule: docker_not_command; took: 0:00:00.000778\nDEBUG: Importing rule: dry; took: 0:00:00.000346\nDEBUG: Importing rule: fab_command_not_found; took: 0:00:00.000709\nDEBUG: Importing rule: fix_alt_space; took: 0:00:00.000579\nDEBUG: Importing rule: fix_file; took: 0:00:00.002820\nDEBUG: Importing rule: git_add; took: 0:00:00.001226\nDEBUG: Importing rule: git_branch_delete; took: 0:00:00.000670\nDEBUG: Importing rule: git_branch_exists; took: 0:00:00.000743\nDEBUG: Importing rule: git_branch_list; took: 0:00:00.000656\nDEBUG: Importing rule: git_checkout; took: 0:00:00.000612\nDEBUG: Importing rule: git_diff_staged; took: 0:00:00.000575\nDEBUG: Importing rule: git_fix_stash; took: 0:00:00.000690\nDEBUG: Importing rule: git_help_aliased; took: 0:00:00.000651\nDEBUG: Importing rule: git_not_command; took: 0:00:00.000589\nDEBUG: Importing rule: git_pull; took: 0:00:00.000638\nDEBUG: Importing rule: git_pull_clone; took: 0:00:00.000577\nDEBUG: Importing rule: git_push; took: 0:00:00.000576\nDEBUG: Importing rule: git_push_force; took: 0:00:00.000573\nDEBUG: Importing rule: git_push_pull; took: 0:00:00.000594\nDEBUG: Importing rule: git_rebase_no_changes; took: 0:00:00.000467\nDEBUG: Importing rule: git_remote_seturl_add; took: 0:00:00.000457\nDEBUG: Importing rule: git_rm_recursive; took: 0:00:00.000706\nDEBUG: Importing rule: git_stash; took: 0:00:00.000580\nDEBUG: Importing rule: git_two_dashes; took: 0:00:00.000594\nDEBUG: Importing rule: go_run; took: 0:00:00.000543\nDEBUG: Importing rule: gradle_no_task; took: 0:00:00.001294\nDEBUG: Importing rule: gradle_wrapper; took: 0:00:00.000805\nDEBUG: Importing rule: grep_arguments_order; took: 0:00:00.000742\nDEBUG: Importing rule: grep_recursive; took: 0:00:00.000690\nDEBUG: Importing rule: grunt_task_not_found; took: 0:00:00.001136\nDEBUG: Importing rule: gulp_not_task; took: 0:00:00.000581\nDEBUG: Importing rule: has_exists_script; took: 0:00:00.000572\nDEBUG: Importing rule: heroku_not_command; took: 0:00:00.000554\nDEBUG: Importing rule: history; took: 0:00:00.000321\nDEBUG: Importing rule: java; took: 0:00:00.000506\nDEBUG: Importing rule: javac; took: 0:00:00.000527\nDEBUG: Importing rule: lein_not_task; took: 0:00:00.000772\nDEBUG: Importing rule: ln_no_hard_link; took: 0:00:00.000632\nDEBUG: Importing rule: ln_s_order; took: 0:00:00.000585\nDEBUG: Importing rule: ls_lah; took: 0:00:00.000506\nDEBUG: Importing rule: man; took: 0:00:00.000495\nDEBUG: Importing rule: man_no_space; took: 0:00:00.001408\nDEBUG: Importing rule: mercurial; took: 0:00:00.000605\nDEBUG: Importing rule: mkdir_p; took: 0:00:00.000565\nDEBUG: Importing rule: mvn_no_command; took: 0:00:00.000671\nDEBUG: Importing rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000533\nDEBUG: Importing rule: no_command; took: 0:00:00.000657\nDEBUG: Importing rule: no_such_file; took: 0:00:00.000419\nDEBUG: Importing rule: npm_missing_script; took: 0:00:00.001152\nDEBUG: Importing rule: npm_run_script; took: 0:00:00.000730\nDEBUG: Importing rule: npm_wrong_command; took: 0:00:00.000849\nDEBUG: Importing rule: open; took: 0:00:00.000748\nDEBUG: Importing rule: pacman; took: 0:00:00.001767\nDEBUG: Importing rule: pacman_not_found; took: 0:00:00.000460\nDEBUG: Importing rule: pip_unknown_command; took: 0:00:00.000738\nDEBUG: Importing rule: port_already_in_use; took: 0:00:00.000867\nDEBUG: Importing rule: python_command; took: 0:00:00.000682\nDEBUG: Importing rule: python_execute; took: 0:00:00.000597\nDEBUG: Importing rule: quotation_marks; took: 0:00:00.000418\nDEBUG: Importing rule: react_native_command_unrecognized; took: 0:00:00.000704\nDEBUG: Importing rule: rm_dir; took: 0:00:00.000700\nDEBUG: Importing rule: rm_root; took: 0:00:00.000638\nDEBUG: Importing rule: sed_unterminated_s; took: 0:00:00.000607\nDEBUG: Importing rule: sl_ls; took: 0:00:00.000400\nDEBUG: Importing rule: ssh_known_hosts; took: 0:00:00.000650\nDEBUG: Importing rule: sudo; took: 0:00:00.000367\nDEBUG: Importing rule: switch_lang; took: 0:00:00.000437\nDEBUG: Importing rule: systemctl; took: 0:00:00.000924\nDEBUG: Importing rule: test.py; took: 0:00:00.000305\nDEBUG: Importing rule: tmux; took: 0:00:00.000883\nDEBUG: Importing rule: touch; took: 0:00:00.000686\nDEBUG: Importing rule: tsuru_login; took: 0:00:00.000590\nDEBUG: Importing rule: tsuru_not_command; took: 0:00:00.000514\nDEBUG: Importing rule: unknown_command; took: 0:00:00.000321\nDEBUG: Importing rule: vagrant_up; took: 0:00:00.000468\nDEBUG: Importing rule: whois; took: 0:00:00.000814\nDEBUG: Importing rule: workon_doesnt_exists; took: 0:00:00.000750\nDEBUG: Trying rule: dry; took: 0:00:00.000146\nDEBUG: Trying rule: test.py; took: 0:00:00.000051\nDEBUG: Trying rule: brew_install; took: 0:00:00.000059\nDEBUG: Trying rule: brew_unknown_command; took: 0:00:00.000034\nDEBUG: Trying rule: brew_update_formula; took: 0:00:00.000089\nDEBUG: Trying rule: brew_upgrade; took: 0:00:00.000109\nDEBUG: Trying rule: cargo; took: 0:00:00.000042\nDEBUG: Trying rule: cargo_no_command; took: 0:00:00.000175\nDEBUG: Trying rule: cd_correction; took: 0:00:00.000086\nDEBUG: Trying rule: cd_mkdir; took: 0:00:00.000067\nDEBUG: Trying rule: cd_parent; took: 0:00:00.000042\nDEBUG: Trying rule: chmod_x; took: 0:00:00.000057\nDEBUG: Trying rule: composer_not_command; took: 0:00:00.000091\nDEBUG: Trying rule: cp_omitting_directory; took: 0:00:00.000077\nDEBUG: Trying rule: cpp11; took: 0:00:00.000107\nDEBUG: Trying rule: dirty_untar; took: 0:00:00.000141\nDEBUG: Trying rule: dirty_unzip; took: 0:00:00.000139\nDEBUG: Trying rule: django_south_ghost; took: 0:00:00.000092\nDEBUG: Trying rule: django_south_merge; took: 0:00:00.000097\nDEBUG: Trying rule: docker_not_command; took: 0:00:00.000106\nDEBUG: Trying rule: fab_command_not_found; took: 0:00:00.000098\nDEBUG: Trying rule: fix_alt_space; took: 0:00:00.000074\nDEBUG: Trying rule: fix_file; took: 0:00:00.000162\nDEBUG: Trying rule: git_add; took: 0:00:00.000070\nDEBUG: Trying rule: git_branch_delete; took: 0:00:00.000056\nDEBUG: Trying rule: git_branch_exists; took: 0:00:00.000053\nDEBUG: Trying rule: git_branch_list; took: 0:00:00.000049\nDEBUG: Trying rule: git_checkout; took: 0:00:00.000045\nDEBUG: Trying rule: git_diff_staged; took: 0:00:00.000085\nDEBUG: Trying rule: git_fix_stash; took: 0:00:00.000061\nDEBUG: Trying rule: git_help_aliased; took: 0:00:00.000052\nDEBUG: Trying rule: git_not_command; took: 0:00:00.000049\ngit branch [enter/\u2191/\u2193/ctrl+c]\n``fuck is aliased to TF_CMD=$(TF_ALIAS=fuck PYTHONIOENCODING=utf-8 TF_SHELL_ALIASES=$(alias) thefuck $(fc -ln -1)) && eval $TF_CMD && history -s $TF_CMD'\necho $TF_OVERRIDDEN_ALIASES gives blank line\nbash shell. Not sure what the issue was. Everything is working fine now. Thanks.. ",
    "wbolster": "i think this is by design. imagine you type ls and you do not see what you are looking for, because the file names start with a dot so they are hidden. now you type fuck and, wow, there they are.. ",
    "tusharmakkar08": "If that's the case, this should extend for ps and ps -ef as well (And possibly a lot others). . ",
    "iamed2": "Great, thanks!. ",
    "mfwass": "A similar issue occurs on macOS Sierra.\nMichaels-MacBook-Pro:base Michael$ fuck\nSeems like fuck alias isn't configured!\nPlease put eval $(thefuck --alias) in your ~/.bashrc.\nMore details - https://github.com/nvbn/thefuck#manual-installation\nIt is already in my ~/.bashrc.\n\n. @nvbn \nMichaels-MacBook-Pro:~ Michael$ source ~/.bashrc\nMichaels-MacBook-Pro:~ Michael$ fuck\nopen ~/.bashrc [enter/\u2191/\u2193/ctrl+c]\nAborted\nRestarted terminal ->\nMichaels-MacBook-Pro:~ Michael$ fuck\nSeems like fuck alias isn't configured!\nPlease put eval $(thefuck --alias) in your ~/.bashrc.\nMore details - https://github.com/nvbn/thefuck#manual-installation\nIt appears to work until I need to restart Terminal.. @rnestler This works, however it will open .bash_profile every time I invoke fuck for the first time.\nMy addition to .bash_profile:\n```\nThe Fuck configuration.\neval $(thefuck --alias)\n. Over time the issue with TextEdit popping up went away.  Looks like it was\nfetching it from a prior command I had made.  Adding theeval....to.bash_profile``` solves the issue entirely.. \ud83d\udcaf . ",
    "graciano": "I just started using mac and I had no ideia about this. This thread helped a lot. Thanks :). ",
    "bilelmoussaoui": "Just run sudo thefuck one time, and the file will be created which will fix your issue. But it would be better if this can be fixed upstream (by bashlex). ",
    "jmona789": "Did you also put eval \"$(thefuck --alias)\" in either of them?  eval \"$(thefuck --alias FUCK)\" adds the alias FUCK so if that's all you have in there your probably need to type the command as \"FUCK\" rather than \"fuck\". ",
    "HesterG": "Yes that solves the problem!. ",
    "BenGitsCode": "I'm having the same issue. Brew install eval $(thefuck --alias FUCK) is all I put in my zshrc.\nIt could be all the gunk I've got in my zsh files causing a problem? \nWhat's the best way to test if it's working? Have you had any luck @radjivC . I did that with no luck,  but restarting iterm seems to have fixed it.\neval $(thefuck --alias FUCK) in the ~/.zshrc and it's working great!\n. I only came across in reading issues and don't have a solution, here's me getting different output on the same input withPython 2.7.10\u2014FWIW in resolving this issue.\n\n. ",
    "garethellis0": "I am also seeing this behavior. ",
    "Mystiflow": "Any news on this issue?. Any news on this?\nThe Fuck 3.23 using Python 3.6.3. ",
    "tbizouerne": "Same problem here. Is there any (even dirty) workaround plz ?. ",
    "gilgoldman": "Any ideas on a solution for this? Been driving me crazy. ",
    "codeofcarson": "Unfortunately I have completely wiped and re-imaged that machine so I can't provide that information. Feel free to close if you haven't seen this issue before.. ",
    "jessetan": "I also have this when I scp a file to my macOS machine if eval \"$(thefuck --alias)\" is added to .bashrc, but not if its added to .bash_profile. So perhaps the suggestion of adding it to .bashrc should be removed from the instructions.. ",
    "davidhart82": "This also occurs in bash.\n-bash: unexpected EOF while looking for matching ''\n-bash: syntax error: unexpected end of file. Was that the entire output @ErikBrendel?  Does this still occur with the latest release?. @andschwa any chance you could test my proposed change fixes your issue? . I'm having this problem too; but it's not obvious to me how to fix it.  The function blindly takes any arguments given to git push and appends them to git's suggestion.  The simple case would be to just use the suggestion provided by git, and ignore any extra arguments you added, since you have no real context.\nFor example, the following commands might both lead to git suggesting a correction, but only the second would result in a valid git command if the extra arguments were appended to git's suggestion.\ngit push myfork\ngit push --verbose. To be pragmatic (and because I very rarely use any extra arguments to git push) I added a local rule, which just returns git's suggestion verbatim.  It's far more useful to me, than trying to be clever, and failing!. @josephfrazier, sure, since I see your commit doesn't solve some of the edge cases. . The current tests just aren't complete enough, but do hint at the cases which aren't covered.  For instance:\ngit push --quiet origin still returns an incorrect result.. Also, the new test you've added, should have been:\ngit push origin and not git push master. I solved the problem by returning a list containing 2 possible corrections.  The first was as originally coded, and the second was git's suggestion verbatim.  I wasn't sure I could return 1 suggestion that was right in all circumstances. . Yes, I'm wondering about a scenario where a user aliases a fish function, I should probably check that the aliased command is also not in the dict of aliases. . Hmm...yeah, that whole thing doesn't seem very robust. What if I wanted git - -git_dir=xxx checkout branch. I think a lot of the suggestions don't cater for this when using positional references in script_parts. . @scorphus all done ;). Interesting.  My timings suggest it's quicker, but then I don't have many plugins installed.  My setup at work is a touch more mature than at home, but even then, I don't really have an exceptionally complex setup.. Not sure if this is valuable; or whether it should be something like:\nelif len(command_parts) > command_parts.index('push'). Actually, probably more like:\nelif len(command_parts) > command_parts.index('push') + 1:. shell.quote uses shlex.quote which escapes the whole string; so you end up with something like:\n'--set-upstream origin test'\"'\"'s'. It's identical in use to test_git_checkout.py.. I added a test to see if we would match on the bitbucket output, which suggests we won't - but thought it best to leave it.  I can only assume that the output provided was not the entire output, and that the text set-upstream must have been in there, since that's the only text searched for.\nChange #682 modified git_push.py to regex search for git push, assuming it was there.  This is the underlying issue; we only search for set-upstream but assume git push is there, when it's entirely possible, and almost certainly the case for this instance, that it doesnt.\n  . Yes, I had hoped there was something better, and I had a quick search, but nothing jumped out to me.  I do agree though, that this is kind of a sticking-plaster.  I do find it weird that Git allows you to use quotes in branch names.... Sure, I can give that a go.. I guess a much better example might be if the branch was called feature/set-upstream.. It's not obvious to me how a) your branch test fixture is used and b) what you expect the branch in test_match_branch to be used for?. No worries, I think I've managed to sort it.  What do you think?. amend. It'd be nice to only offer this if the commit was successful, but it's not obvious what a 'successful' commit may or may not output.. There are more, do we want them all?. Thanks, yes, that'll tech me to find/replace!. ",
    "mylyed": "fuck!. ",
    "jspiro": "Seems like this should be closed. ",
    "dhilipsiva": "@nvbn Should I change something in this PR? I hope I have done this correctly. \ud83d\ude1b . @nvbn Thanks for your suggestions.\n\nApologies. That is my default vim template\nMoved to sudo rule \ud83d\udc4d \nI hope I implemented the similar command properly. \n\nPlease do let me know if this required any further changes.. ",
    "sascha-egerer": "Oh fuck! I had an alias in place that executes the last command as sudo. It was named fuck.. ",
    "tforgione": "(Sorry to have closed and reopened this issue, I thought it was a duplicate of #585 but it was not). Yeah but I mean, launching fuck a second time could do it by itself since it knows exactly what I'm supposed to do. Wouldn't that be awesome ?. Yeah, or maybe you'd need to type fuck twice before it modifies your zshrc, like so\n$ fuck\nSeems like fuck alias isn't configured!\nPlease put eval $(thefuck --alias) in your ~/.zshrc.\nMore details - https://github.com/nvbn/thefuck#manual-installation\n$ fuck\nAlias configured successfully. To apply changes please relaunch your shell or just run:\n   source ~/.zshrc\nin case someone doesn't want its zshrc to be modified (for example, I have my aliases in a particular file that is sourced from my zshrc and I like to keep it that way).\nI think its consistant with the successive corrections shown in the gif in the readme.. This rocks so hard. ",
    "stevechae": "It just means to add eval $(thefuck --alias) line to your .zshrc and reload your zsh shell. Just run the following and you should be good to go:\n```\necho 'eval $(thefuck --alias)' >> ~/.zshrc; exec zsh\n````. ",
    "ditta95aR": "Ty. ",
    "sphvn": "@nvbn, the current version displaying the message like you posted above is more than enough.\n\ud83d\udc4d on just closing this in my opinion.. ",
    "matkoniecz": "Bold is overkill, but changing \"should\" to \"must\" in my opinion is a good clarification.. ",
    "yashpatel5400": "Actually, after thinking about this feature for a little, it seems like it might just cause more frustration on the user end, since if we did \"aptget instll -f\" or something and did a fuck-it, the tool would default to \"apt-get install.\" Should be possible once the corrector becomes really accurate though. ",
    "Radther": "Ahh ok, thanks for clarifying that.. ",
    "Asday": "Aah cool, didn't know about @git.support, thanks!. ",
    "adrfantini": "That made it, thanks.. ",
    "Primajin": "I installed it on \"Bash on Ubuntu on Windows\" like on Ubuntu but afterwards I always get \"no such command\" when trying to run fuck or thefuck. Do I need an extra alias?. Perfect everything works as expected now!. ",
    "rhu1988": "I have the same issue as Primajin. How can I fix this problem? Thank you.. I tried what you said. It works! Thank you for helping.. ",
    "HeroCC": "I think it has to do with sudo. I reproduced it by running sudo echo hello, then running fuck. It will prompt for password, but before I finish typing it, it says this same error.. ",
    "Nightfirecat": "README.md\n\nYou should place this command in your .bash_profile, .bashrc, .zshrc or other startup script:\neval $(thefuck --alias)\n# You can use whatever you want as an alias, like for Mondays:\neval $(thefuck --alias FUCK)\n\n\nI take that to mean that you can enter whatever alias you'd like in your .bash_profile/.bashrc/.zshrc:\neval $(thefuck --alias frick)\nEDIT Never mind, I see what you meant; ignore me. \ud83d\ude43 . I'll defer to #668 then. Thanks!. ",
    "jw4js": "@ChrisJefferson If you want it SFW you can patch it yourself. If you installed via pip, it's at ~/.local/lib/python*/site-packages/thefuck/ui.py where * is the python version. Otherwise you have to find the file yourself. No fucks given is at line 72, you can change it to whatever you like.. ",
    "ChrisJefferson": "@jw4js : Yup, I just greped the whole source code for fucks, and found that no fucks given is the only user-visible one, so I changed it myself. Would a patch which disabled that if an alias was in use be acceptable (I'm not sure how nice it would look, would have to check if argv[0] was fuck I imagine).. Thanks!. ",
    "fluxsauce": "jon@Decker ~/projects/SUPERSECRET (master) $ yarn require lodash\nyarn require v0.23.3\nerror Command \"require\" not found.\njon@Decker ~/projects/SUPERSECRET (master) $ fuck\nyarn add lodash [enter/\u2191/\u2193/ctrl+c]\n\ud83d\udcaf \nmuch appreciated!. @scorphus fuzzy matching wouldn't work, but the intent of delete is pretty unambiguous - just the wrong term. An exact match would work. There's precedence, such as the yarn rule of yarn require foo suggesting yarn add foo.. Can no longer reproduce.\n~ \u00bb lss\nzsh: command not found: lss\n~ \u00bb fuck\nls s [enter/\u2191/\u2193/ctrl+c]\nAborted\n~ \u00bb fuck --version\nThe Fuck 3.27 using Python 3.7.0\nI don't think this was a duplicate of #783 given the difference in error messages, but at the end of the day it's fixed which is \ud83d\udc4d \nThanks!. ",
    "manoshape": "thanks\uff0cvery nice of you\uff0ci get it\uff01. ",
    "vincentzz": "It' working. thx. ",
    "mengyyy": "Debian has the same problem .Solve problem by the same way.. ",
    "josephrexme": "You should check #650 perhaps it helps you solve your problem. The solution is to simply make it available to zsh which could also be by moving eval $(thefuck --alias) from .bash_profile to your .zshrc and running source ~/.zshrc. If problem is fixed you may now close the issue. ",
    "eromoe": "Now work fine with python2 , thanks!. Seems like fuck alias isn't configured!\nMore details - https://github.com/nvbn/thefuck#manual-installation , how could I use it in windows cmd?. ",
    "maple2rain": "Thanks a lot!. ",
    "Fastjur": "I have a very similar issue:\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 7, in <module>\n    from thefuck.main import main\nImportError: No module named 'thefuck'\n\n. So. For people having this issue. For me the fix was that I had setup another python version as default using update-alternatives. Make sure you use the correct python version.. ",
    "grepsedawk": "Looks like we're all having this issue.. Sounds good. Closing this issue.. ",
    "tomdracz": "Also, I've got hub installed but it IS NOT aliased to git.\nIf I call\nhub stats\nIt actually corrects command properly but called command if hub stats, not \nfish -ic \"hub stats\". Nevermind, it seemed to have started working after switching omf theme to default and back to my current one. Not sure why would that help, but well, it did.\nThis together with (maybe) cleaing caches and throwing stuff into my terminal in utter despair, made it works, I'm no longer getting\nfish -ic \"command\"\nIn debug. ",
    "foisonocean": "@tomdracz I have the same problem, but your solution didn't works with me.. I have the same problem, and it seems thefuck only doesn't work with git commands.. ",
    "Notelzg": "are you resolved this problem\uff1fI have meet similar issus\u3002. ",
    "djaskolka": "I haven't received any additional advice about this, nor have I had a chance to look into this on my own. Sorry!. ",
    "ioiogoo": "Traceback (most recent call last):\n  File \"/usr/local/bin/fuck\", line 7, in <module>\n    from thefuck.not_configured import main\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/not_configured.py\", line 2, in <module>\n    from .system import init_output\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/system/__init__.py\", line 7, in <module>\n    from .unix import *  # noqa: F401,F403\n  File \"/usr/local/lib/python2.7/dist-packages/thefuck/system/unix.py\", line 49, in <module>\n    from pathlib2 import Path\n  File \"/usr/local/lib/python2.7/dist-packages/pathlib2.py\", line 45, in <module>\n    from scandir import scandir as os_scandir\nImportError: No module named scandir\nsame to me.\nsystem: ubuntu 14.04 python 2.7. ",
    "Zane96": "\n\n. \n. I think all things is ready....but it's not work. Thx, the problem has been fixed!!~\n. Yes, of course. Thanks. ",
    "steerspace": "Same problem here.\nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=17.04\nDISTRIB_CODENAME=zesty\nDISTRIB_DESCRIPTION=\"Ubuntu 17.04\"\nNAME=\"Ubuntu\"\nVERSION=\"17.04 (Zesty Zapus)\"\nID=ubuntu\nID_LIKE=debian\nPRETTY_NAME=\"Ubuntu 17.04\"\nVERSION_ID=\"17.04\"\nHOME_URL=\"https://www.ubuntu.com/\"\nSUPPORT_URL=\"https://help.ubuntu.com/\"\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\nVERSION_CODENAME=zesty\nUBUNTU_CODENAME=zesty\nuse eval $(thefuck --alias). \nGet\nzsh: command not found: fuck. ",
    "BertieJim": "Is it because during the installing it changed some where in my terminal?\nI google it but didn't find any answers.\nWhat can I do?\nT T. ",
    "MelvIsntNormal": "The history file for fish is no longer located in .config/fish, It's been moved to .local/share/fish. See this commit.. ",
    "babakness": "same error\n. ",
    "z3ntu": "Why does the script add\neval (thefuck --alias | tr '\n' ';')\nto the fish config when the wiki says something else:\nthefuck --alias | source\n?\nBut yes, adding works again fine.. @scorphus And what's the reason it's not thefuck --alias | source as it 1. looks nicer and 2. is shorter and works the same way?\nAnd yes, I will do a PR for this :). ",
    "MrEbbinghaus": "~3 seconds on MacOS with zsh as well. ",
    "smiller171": "I'm also experiencing extremely slow response in Fish shell. I don't have the same problem in zsh. All of the execution time appears to be before importing rules\nVersion: The Fuck 3.28 using Python 3.7.2\nShell: fish, version 3.0.2\nMacOS 10.14.3 (18D109)\n```\n~/code/redacted smiller\n\u276f git connit -m \"test\"\ngit: 'connit' is not a git command. See 'git --help'.\nThe most similar commands are\n        commit\n        config\n~/code/redacted smiller\n\u276f fuck\nDEBUG: Run with settings: {'alter_history': True,\n 'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'exclude_rules': [],\n 'history_limit': None,\n 'instant_mode': False,\n 'no_colors': False,\n 'num_close_matches': 3,\n 'priority': {},\n 'repeat': False,\n 'require_confirmation': True,\n 'rules': [],\n 'slow_commands': ['lein', 'react-native', 'gradle', './gradlew', 'vagrant'],\n 'user_dir': PosixPath('/Users/smiller/.config/thefuck'),\n 'wait_command': 3,\n 'wait_slow_command': 15}\nDEBUG: Received output: 12:13:43.190786 git.c:576               trace: exec: git-connit -m test\n12:13:43.191366 run-command.c:640       trace: run_command: git-connit -m test\ngit: 'connit' is not a git command. See 'git --help'.\nThe most similar commands are\n        commit\n        config\nDEBUG: Call: git connit -m \"test\"; with env: {'APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL': 'true', 'AWS_ACCESS_KEY_ID': 'redacted', 'AWS_DEFAULT_REGION': 'redacted', 'AWS_OKTA_PROFILE': 'redacted', 'AWS_REGION': 'redacted', 'AWS_SECRET_ACCESS_KEY': 'redacted', 'AWS_SECURITY_TOKEN': 'redacted', 'AWS_SESSION_TOKEN': 'redacted', 'Apple_PubSub_Socket_Render': '/private/tmp/com.apple.launchd.pkdgaFw20B/Render', 'COMMAND_MODE': 'unix2003', 'DISPLAY': '/private/tmp/com.apple.launchd.DpcoxAqE3o/org.macosforge.xquartz:0', 'HOME': '/Users/smiller', 'LANG': 'C', 'LC_CTYPE': 'en_US.UTF-8', 'LOGNAME': 'smiller', 'PATH': '/Users/smiller/.virtualenvs/redacted/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Users/smiller/.virtualenvs/redacted/bin', 'PWD': '/Users/smiller/code/redacted', 'SHELL': '/usr/local/bin/fish', 'SHLVL': '3', 'SSH_AUTH_SOCK': '/Users/smiller/.gnupg/S.gpg-agent.ssh', 'TERM': 'xterm-256color', 'TERM_PROGRAM': 'vscode', 'TERM_PROGRAM_VERSION': '1.32.2', 'THEFUCK_DEBUG': 'true', 'TMPDIR': '/var/folders/43/thr3y6c55s718zjvk__hcns4hg_30g/T/', 'USER': 'smiller', 'VIRTUAL_ENV': '/Users/smiller/.virtualenvs/redacted', 'VIRTUAL_ENV_DISABLE_PROMPT': '1', 'XPC_FLAGS': '0x0', 'XPC_SERVICE_NAME': 'com.apple.xpc.launchd.oneshot.0x100000f5.Electron', '__CF_USER_TEXT_ENCODING': '0x20F50C0F:0x0:0x0', '__touchrunner_wd_has_tasks': '0', 'mytest': 'testing', 'pure_color_dark': '\\x1b[92m', 'pure_color_mute': '\\x1b[96m', 'pure_color_success': '\\x1b[32m', 'TF_SHELL': 'fish', 'TF_ALIAS': 'fuck', 'PYTHONIOENCODING': 'utf-8', 'LC_ALL': 'C', 'GIT_TRACE': '1'}; is slow:  took: 0:00:00.030494\nDEBUG: Importing rule: adb_unknown_command; took: 0:00:00.000825\nDEBUG: Importing rule: ag_literal; took: 0:00:00.000935\nDEBUG: Importing rule: apt_get; took: 0:00:00.001932\nDEBUG: Importing rule: apt_get_search; took: 0:00:00.000820\nDEBUG: Importing rule: apt_invalid_operation; took: 0:00:00.001643\nDEBUG: Importing rule: apt_list_upgradable; took: 0:00:00.000818\nDEBUG: Importing rule: apt_upgrade; took: 0:00:00.000796\nDEBUG: Importing rule: aws_cli; took: 0:00:00.000809\nDEBUG: Importing rule: az_cli; took: 0:00:00.000625\nDEBUG: Importing rule: brew_cask_dependency; took: 0:00:00.001542\nDEBUG: Importing rule: brew_install; took: 0:00:00.000436\nDEBUG: Importing rule: brew_link; took: 0:00:00.000856\nDEBUG: Importing rule: brew_reinstall; took: 0:00:00.001330\nDEBUG: Importing rule: brew_uninstall; took: 0:00:00.000880\nDEBUG: Importing rule: brew_unknown_command; took: 0:00:00.000512\nDEBUG: Importing rule: brew_update_formula; took: 0:00:00.000895\nDEBUG: Importing rule: cargo; took: 0:00:00.000472\nDEBUG: Importing rule: cargo_no_command; took: 0:00:00.000808\nDEBUG: Importing rule: cat_dir; took: 0:00:00.000736\nDEBUG: Importing rule: cd_correction; took: 0:00:00.003000\nDEBUG: Importing rule: cd_mkdir; took: 0:00:00.000534\nDEBUG: Importing rule: cd_parent; took: 0:00:00.000528\nDEBUG: Importing rule: chmod_x; took: 0:00:00.000541\nDEBUG: Importing rule: composer_not_command; took: 0:00:00.000986\nDEBUG: Importing rule: cp_omitting_directory; took: 0:00:00.001040\nDEBUG: Importing rule: cpp11; took: 0:00:00.000680\nDEBUG: Importing rule: dirty_untar; took: 0:00:00.004309\nDEBUG: Importing rule: dirty_unzip; took: 0:00:00.003565\nDEBUG: Importing rule: django_south_ghost; took: 0:00:00.000484\nDEBUG: Importing rule: django_south_merge; took: 0:00:00.000432\nDEBUG: Importing rule: dnf_no_such_command; took: 0:00:00.001654\nDEBUG: Importing rule: docker_not_command; took: 0:00:00.001367\nDEBUG: Importing rule: dry; took: 0:00:00.000488\nDEBUG: Importing rule: fab_command_not_found; took: 0:00:00.000778\nDEBUG: Importing rule: fix_alt_space; took: 0:00:00.000681\nDEBUG: Importing rule: fix_file; took: 0:00:00.003012\nDEBUG: Importing rule: gem_unknown_command; took: 0:00:00.000951\nDEBUG: Importing rule: git_add; took: 0:00:00.001445\nDEBUG: Importing rule: git_add_force; took: 0:00:00.000865\nDEBUG: Importing rule: git_bisect_usage; took: 0:00:00.000676\nDEBUG: Importing rule: git_branch_delete; took: 0:00:00.000668\nDEBUG: Importing rule: git_branch_exists; took: 0:00:00.000986\nDEBUG: Importing rule: git_branch_list; took: 0:00:00.000778\nDEBUG: Importing rule: git_checkout; took: 0:00:00.000699\nDEBUG: Importing rule: git_commit_amend; took: 0:00:00.000692\nDEBUG: Importing rule: git_diff_no_index; took: 0:00:00.000810\nDEBUG: Importing rule: git_diff_staged; took: 0:00:00.000895\nDEBUG: Importing rule: git_fix_stash; took: 0:00:00.000995\nDEBUG: Importing rule: git_flag_after_filename; took: 0:00:00.000954\nDEBUG: Importing rule: git_help_aliased; took: 0:00:00.000804\nDEBUG: Importing rule: git_merge; took: 0:00:00.000895\nDEBUG: Importing rule: git_merge_unrelated; took: 0:00:00.000775\nDEBUG: Importing rule: git_not_command; took: 0:00:00.000713\nDEBUG: Importing rule: git_pull; took: 0:00:00.000848\nDEBUG: Importing rule: git_pull_clone; took: 0:00:00.000889\nDEBUG: Importing rule: git_pull_uncommitted_changes; took: 0:00:00.000675\nDEBUG: Importing rule: git_push; took: 0:00:00.000602\nDEBUG: Importing rule: git_push_different_branch_names; took: 0:00:00.000587\nDEBUG: Importing rule: git_push_force; took: 0:00:00.001056\nDEBUG: Importing rule: git_push_pull; took: 0:00:00.000753\nDEBUG: Importing rule: git_push_without_commits; took: 0:00:00.000941\nDEBUG: Importing rule: git_rebase_merge_dir; took: 0:00:00.000982\nDEBUG: Importing rule: git_rebase_no_changes; took: 0:00:00.000718\nDEBUG: Importing rule: git_remote_delete; took: 0:00:00.000868\nDEBUG: Importing rule: git_remote_seturl_add; took: 0:00:00.000624\nDEBUG: Importing rule: git_rm_local_modifications; took: 0:00:00.000893\nDEBUG: Importing rule: git_rm_recursive; took: 0:00:00.000874\nDEBUG: Importing rule: git_rm_staged; took: 0:00:00.000791\nDEBUG: Importing rule: git_stash; took: 0:00:00.000795\nDEBUG: Importing rule: git_stash_pop; took: 0:00:00.000839\nDEBUG: Importing rule: git_tag_force; took: 0:00:00.000967\nDEBUG: Importing rule: git_two_dashes; took: 0:00:00.000691\nDEBUG: Importing rule: go_run; took: 0:00:00.000723\nDEBUG: Importing rule: gradle_no_task; took: 0:00:00.001090\nDEBUG: Importing rule: gradle_wrapper; took: 0:00:00.000976\nDEBUG: Importing rule: grep_arguments_order; took: 0:00:00.000710\nDEBUG: Importing rule: grep_recursive; took: 0:00:00.000672\nDEBUG: Importing rule: grunt_task_not_found; took: 0:00:00.001033\nDEBUG: Importing rule: gulp_not_task; took: 0:00:00.000793\nDEBUG: Importing rule: has_exists_script; took: 0:00:00.000641\nDEBUG: Importing rule: heroku_multiple_apps; took: 0:00:00.000892\nDEBUG: Importing rule: heroku_not_command; took: 0:00:00.000784\nDEBUG: Importing rule: history; took: 0:00:00.000571\nDEBUG: Importing rule: hostscli; took: 0:00:00.000879\nDEBUG: Importing rule: ifconfig_device_not_found; took: 0:00:00.000704\nDEBUG: Importing rule: java; took: 0:00:00.000635\nDEBUG: Importing rule: javac; took: 0:00:00.000750\nDEBUG: Importing rule: lein_not_task; took: 0:00:00.000931\nDEBUG: Importing rule: ln_no_hard_link; took: 0:00:00.000864\nDEBUG: Importing rule: ln_s_order; took: 0:00:00.000810\nDEBUG: Importing rule: long_form_help; took: 0:00:00.000555\nDEBUG: Importing rule: ls_all; took: 0:00:00.000777\nDEBUG: Importing rule: ls_lah; took: 0:00:00.000826\nDEBUG: Importing rule: man; took: 0:00:00.000883\nDEBUG: Importing rule: man_no_space; took: 0:00:00.000712\nDEBUG: Importing rule: mercurial; took: 0:00:00.000660\nDEBUG: Importing rule: missing_space_before_subcommand; took: 0:00:00.000473\nDEBUG: Importing rule: mkdir_p; took: 0:00:00.000846\nDEBUG: Importing rule: mvn_no_command; took: 0:00:00.000798\nDEBUG: Importing rule: mvn_unknown_lifecycle_phase; took: 0:00:00.000772\nDEBUG: Importing rule: no_command; took: 0:00:00.000872\nDEBUG: Importing rule: no_such_file; took: 0:00:00.000533\nDEBUG: Importing rule: npm_missing_script; took: 0:00:00.001618\nDEBUG: Importing rule: npm_run_script; took: 0:00:00.000642\nDEBUG: Importing rule: npm_wrong_command; took: 0:00:00.001224\nDEBUG: Importing rule: open; took: 0:00:00.000870\nDEBUG: Importing rule: pacman; took: 0:00:00.001042\nDEBUG: Importing rule: pacman_not_found; took: 0:00:00.000420\nDEBUG: Importing rule: path_from_history; took: 0:00:00.000476\nDEBUG: Importing rule: php_s; took: 0:00:00.000803\nDEBUG: Importing rule: pip_unknown_command; took: 0:00:00.000944\nDEBUG: Importing rule: port_already_in_use; took: 0:00:00.000748\nDEBUG: Importing rule: prove_recursively; took: 0:00:00.000843\nDEBUG: Importing rule: python_command; took: 0:00:00.000747\nDEBUG: Importing rule: python_execute; took: 0:00:00.000700\nDEBUG: Importing rule: quotation_marks; took: 0:00:00.000473\nDEBUG: Importing rule: react_native_command_unrecognized; took: 0:00:00.000949\nDEBUG: Importing rule: remove_trailing_cedilla; took: 0:00:00.000632\nDEBUG: Importing rule: rm_dir; took: 0:00:00.001002\nDEBUG: Importing rule: rm_root; took: 0:00:00.000769\nDEBUG: Importing rule: scm_correction; took: 0:00:00.000816\nDEBUG: Importing rule: sed_unterminated_s; took: 0:00:00.000852\nDEBUG: Importing rule: sl_ls; took: 0:00:00.000513\nDEBUG: Importing rule: ssh_known_hosts; took: 0:00:00.000689\nDEBUG: Importing rule: sudo; took: 0:00:00.000469\nDEBUG: Importing rule: sudo_command_from_user_path; took: 0:00:00.000669\nDEBUG: Importing rule: switch_lang; took: 0:00:00.000591\nDEBUG: Importing rule: systemctl; took: 0:00:00.001068\nDEBUG: Importing rule: test.py; took: 0:00:00.000557\nDEBUG: Importing rule: tmux; took: 0:00:00.000661\nDEBUG: Importing rule: touch; took: 0:00:00.000732\nDEBUG: Importing rule: tsuru_login; took: 0:00:00.000658\nDEBUG: Importing rule: tsuru_not_command; took: 0:00:00.000998\nDEBUG: Importing rule: unknown_command; took: 0:00:00.000590\nDEBUG: Importing rule: unsudo; took: 0:00:00.000563\nDEBUG: Importing rule: vagrant_up; took: 0:00:00.000835\nDEBUG: Importing rule: whois; took: 0:00:00.000882\nDEBUG: Importing rule: workon_doesnt_exists; took: 0:00:00.000687\nDEBUG: Importing rule: yarn_alias; took: 0:00:00.000632\nDEBUG: Importing rule: yarn_command_not_found; took: 0:00:00.001230\nDEBUG: Importing rule: yarn_command_replaced; took: 0:00:00.001007\nDEBUG: Importing rule: yarn_help; took: 0:00:00.000881\nDEBUG: Trying rule: path_from_history; took: 0:00:00.000982\nDEBUG: Trying rule: dry; took: 0:00:00.000110\nDEBUG: Trying rule: git_stash_pop; took: 0:00:00.000042\nDEBUG: Trying rule: test.py; took: 0:00:00.000002\nDEBUG: Trying rule: adb_unknown_command; took: 0:00:00.000015\nDEBUG: Trying rule: ag_literal; took: 0:00:00.000014\nDEBUG: Trying rule: aws_cli; took: 0:00:00.000013\nDEBUG: Trying rule: az_cli; took: 0:00:00.000018\nDEBUG: Trying rule: brew_cask_dependency; took: 0:00:00.000012\nDEBUG: Trying rule: brew_install; took: 0:00:00.000003\nDEBUG: Trying rule: brew_link; took: 0:00:00.000013\nDEBUG: Trying rule: brew_reinstall; took: 0:00:00.000011\nDEBUG: Trying rule: brew_uninstall; took: 0:00:00.000011\nDEBUG: Trying rule: brew_unknown_command; took: 0:00:00.000002\nDEBUG: Trying rule: brew_update_formula; took: 0:00:00.000010\nDEBUG: Trying rule: cargo; took: 0:00:00.000009\nDEBUG: Trying rule: cargo_no_command; took: 0:00:00.000048\nDEBUG: Trying rule: cat_dir; took: 0:00:00.000016\nDEBUG: Trying rule: cd_correction; took: 0:00:00.000018\nDEBUG: Trying rule: cd_mkdir; took: 0:00:00.000013\nDEBUG: Trying rule: cd_parent; took: 0:00:00.000003\nDEBUG: Trying rule: chmod_x; took: 0:00:00.000002\nDEBUG: Trying rule: composer_not_command; took: 0:00:00.000013\nDEBUG: Trying rule: cp_omitting_directory; took: 0:00:00.000013\nDEBUG: Trying rule: cpp11; took: 0:00:00.000012\nDEBUG: Trying rule: dirty_untar; took: 0:00:00.000012\nDEBUG: Trying rule: dirty_unzip; took: 0:00:00.000012\nDEBUG: Trying rule: django_south_ghost; took: 0:00:00.000003\nDEBUG: Trying rule: django_south_merge; took: 0:00:00.000003\nDEBUG: Trying rule: docker_not_command; took: 0:00:00.000014\nDEBUG: Trying rule: fab_command_not_found; took: 0:00:00.000050\nDEBUG: Trying rule: fix_alt_space; took: 0:00:00.000007\nDEBUG: Trying rule: fix_file; took: 0:00:00.000018\nDEBUG: Trying rule: gem_unknown_command; took: 0:00:00.000029\nDEBUG: Trying rule: git_add; took: 0:00:00.000016\nDEBUG: Trying rule: git_add_force; took: 0:00:00.000013\nDEBUG: Trying rule: git_bisect_usage; took: 0:00:00.000012\nDEBUG: Trying rule: git_branch_delete; took: 0:00:00.000011\nDEBUG: Trying rule: git_branch_exists; took: 0:00:00.000011\nDEBUG: Trying rule: git_branch_list; took: 0:00:00.000013\nDEBUG: Trying rule: git_checkout; took: 0:00:00.000011\nDEBUG: Trying rule: git_commit_amend; took: 0:00:00.000011\nDEBUG: Trying rule: git_diff_no_index; took: 0:00:00.000025\nDEBUG: Trying rule: git_diff_staged; took: 0:00:00.000016\nDEBUG: Trying rule: git_fix_stash; took: 0:00:00.000062\nDEBUG: Trying rule: git_flag_after_filename; took: 0:00:00.000388\nDEBUG: Trying rule: git_help_aliased; took: 0:00:00.000017\nDEBUG: Trying rule: git_merge; took: 0:00:00.000013\nDEBUG: Trying rule: git_merge_unrelated; took: 0:00:00.000012\nDEBUG: Trying rule: git_not_command; took: 0:00:00.000012\n```. Would be interested in contributing if I could help bring instant mode to Fish. ",
    "Googulator": "Filed pull request #663 with a fix. It's not optimal, unfortunately - we would have to call \"history -a\" in the context of the Bash process that called \"fuck\", and we can only do so in a subshell, which doesn't have the intended effect.. ",
    "UtkrishtDhankar": "I cannot replicate the issue with a fresh install. With the debug option set, for me the matched rule that it gets is no_command, which fetches close matches of the comand given. It searches the recently used commands in your history, and executables in the usual executable directories.\nThe only explanation I have is that you recently used touch, then the first option that it got from your history was touch itself, so it displayed that first. In that case, you should be able to scroll with the arrow keys to get the other commands (including source). If that doesn't work, can you try the same thing again, only with the debug options enabled, and confirm that the same rule (no_command) is being executed?. ",
    "OmgImAlexis": "Seems to be working. Not sure what the issue was before.. ",
    "reitermarkus": "@nvbn, no worries. \ud83d\ude09 . ",
    "yusijs": "Experiencing the same problem with python 3.6 in Windows Git Bash:\n$ fuck --version\nThe Fuck 3.20 using Python 3.6.2\n```\n$ git pus\ngit: 'pus' is not a git command. See 'git --help'.\nDid you mean one of these?\n        push\n        pull\n$ fuck\ngit push [enter/\u2191/\u2193/ctrl+c]\n(hangs)\n```. ",
    "JBWalrider": "Still experiencing this.. ",
    "renatoch": "Apparently it has to do with MSys2: https://stackoverflow.com/a/32599341/3211332\nBut I still wasn't able to make it work with this information.. Workaround: on .bashrc, include line below. It will bypass confirmation. Not perfect, but at least it works.\nexport THEFUCK_REQUIRE_CONFIRMATION='false'. ",
    "icylogic": "\nAdd an environment variable PYTHONIOENCODING=utf-8 \nOR change your $PROFILE from\n  Powershell\n  iex \"$(thefuck --alias)\"\n  to\n  Powershell\n  $env:PYTHONIOENCODING=\"utf-8\"\n  iex \"$(thefuck --alias)\". \n",
    "frostming": "I am having the same issue with PYTHONIOENCODING set to utf-8.\nI wonder if thefuck reads the stdout so any non-utf-8 chars will break this.\nPS: I am running thefuck on Python3.7 on a Chinese Windows system.\nSolution:\nAdd this line to profile:\npowershell\n[Console]::OutputEncoding = [System.Text.Encoding]::UTF8. ",
    "HoweChen": "I am wondering if there is a way to close the warning whenever I open the terminal?\n\n. @ilovezfs \nWell, I install it from the homebrew, maybe it's the formula's problem which uses python2 as a default. I would change this to python3, thanks.. @ilovezfs No, it's not. When I try to install thefuck with --HEAD, and I open up a new window of the terminal. It shows this:\n\nI thought the formula of thefuck on homebrew should add be added a new argument --with-python3. I found that homebrew itself uses Python instead of Python3 to run the command by default.\n\n. @ilovezfs \nAfter reinstalling thefuck via homebrew without --HEAD, the problem has been solved. I thought it's my problem, every time when I update thefuck, I need to run brew link --overwrite thefuck. I forgot to run this command this time maybe. If there is a way to avoid running this command?. @ilovezfs Yeah you are right, I have uninstalled the pip2 version. Thank you very much.. ",
    "MichaelKim0407": "How can I remove the warning? I installed thefuck with Python 3.\n\nI'm on Ubuntu/Linux 16.04. @nvbn OK, thanks. ",
    "AntonOlsen": "The easiest way to skip the error is to uninstall  The Fuck.\nI can't upgrade to Python 3 until the next Ubuntu LTS is released and tested in production.. Or:\nansible all -a 'pip uninstall -y thefuck'\nIt was nice to have on the off chance I needed to work directly on a web server, but I have way too many servers to mess with editing the files.\n. That appears to work, thanks.. ",
    "saiqulhaq": "I need do this on my mac, because pip command is not recognized, but pip2 command does\nso to get this awesome library being installed on python 3, I need do this\npython3 -m pip install thefuck. ",
    "machta": "For me the new version still prints the annoying warning. So I suppressed it in .bashrc like this \neval $(thefuck --alias 2>/dev/null). BTW is there a way to tell it to use Python 3.5 if I have also 2.7 installed and it is the default (i.e.  /usr/bin/python is a symlink to python2.7)? Thanks. ",
    "xueyuanl": "For those who still on Python 2, the annoying warn info when login can be removed by: \nIn your python2 path,\nfind / -name alias.py \nfor me, it in: /usr/local/lib/python2.7/dist-packages/thefuck/entrypoints\nThen delete the three lines:\nif six.PY2:\n        warn(\"The Fuck will drop Python 2 support soon, more details \"\n             \"https://github.com/nvbn/thefuck/issues/685\")\nand delete the file alias.pyc in the same path. ",
    "jgrondier": "Great, thank you very much. ",
    "Rinma": "Upps, there I did a mistake. I wanted to write that I got docker ps a- and docker ps a-a as solutions.\ndocker ps -a is indeed a valid command :joy:. ",
    "ikuwow": "It's released. Thank you @nvbn  :+1:. ",
    "Enochenti": "When I use \neval $(thefuck --alias --enable-experimental-instant-mode)\nin my .zshrc ,I get\n```\n\nfuck\n[WARN] Script not found in output log\nNo fucks given\nbut I use \n`eval \"$(thefuck --alias --enable-experimental-instant-mode)\"`\nget this too\nfuck\nusage: thefuck [-v] [-a [ALIAS]] [-l SHELL_LOGGER]\n               [--enable-experimental-instant-mode] [-h] [-y | -r] [-d]\n               [command [command ...]]\n```\n\nso,its not the problem of instant mode.\nthen another problem homebrew asked me to use eval \"XXXX\",\nbut README.md asked me to use eval XXXX.\nIs that because I am using oh-my-zsh or I use macOS?. works now\uff0cthanks. ",
    "jukben": "I had the same issue but I've figured it out. I had to use eval $(thefuck --alias) in my .zshrc without quotes.\n. ",
    "jameshal": "Looks like windows installs broke with the addition of the internal shell logger in d2c70bd8. I switched back to 3.23 for now (on Windows 7 x64, msys bash).. ",
    "LuckierDodge": "Same situation as @rigved, running in WSL.. Tried your test file, got this as output:\n```\nHelp on package thefuck:\nNAME\n    thefuck\nPACKAGE CONTENTS\n    argument_parser\n    conf\n    const\n    corrector\n    exceptions\n    logs\n    main\n    not_configured\n    types\n    ui\n    utils\nFILE\n    (built-in)\n```. ",
    "jmtoball": "I had the same issue on Arch Linux. What solved it for me was to look at where thefuck was imported from:\n```\n\n\n\nimport thefuck\nhelp(thefuck)\n[\u2026]\nFILE\n    /home/max/.local/lib/python3.6/site-packages/thefuck/init.py\n[\u2026]\n``\nI don't remember installing it usingpip --user`, but it ended up there somehow. Getting rid of this copy solved it for me.\nMaybe this helps @LuckierDodge  or @rigved . \n\n\n",
    "rigved": "@nvbn that also did not help. In fact, in the Bash shell itself, I am getting this error message:\nbash\n$ thefuck --alias\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 7, in <module>\n    from thefuck.entrypoints.main import main\nImportError: No module named 'thefuck.entrypoints'\n@jmtoball this is what I got:\n```python3\nHelp on package thefuck:\nNAME\n    thefuck\nPACKAGE CONTENTS\n    argument_parser\n    conf\n    const\n    corrector\n    entrypoints (package)\n    exceptions\n    logs\n    main\n    not_configured\n    output_readers (package)\n    rules (package)\n    shells (package)\n    specific (package)\n    system (package)\n    types\n    ui\n    utils\nFILE\n    /usr/local/lib/python3.5/dist-packages/thefuck/init.py\n```\nSome more details:\n```bash\n$ python3\nPython 3.5.2 (default, Nov 23 2017, 16:37:01) \n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nfrom thefuck.entrypoints.main import main\nTraceback (most recent call last):\n  File \"\", line 1, in \nImportError: No module named 'thefuck.entrypoints'\n\n\n\n\n$ sudo python3\nPython 3.5.2 (default, Nov 23 2017, 16:37:01) \n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nfrom thefuck.entrypoints.main import main\n```\n\n\n\nWhat could this mean? I checked access permissions in the \"/usr/local/lib/python3.5/dist-packages/\" folder and the \"thefuck\" folder had the same permissions as other folders. I am not sure what else to check. If it makes any difference, this is happening only on non-GUI systems (on servers). On my personal machine, I'm not facing this issue.. ",
    "Mexassi": "running sudo pip install thefuck again fixed it for me. ",
    "markko1": "Ubuntu Bionic (18.04): installing with pip3 (official guide) didn't fix the issue, but good old apt-get install thefuck fixed!. ",
    "woinck": "I had the same issue on Ubuntu 16.04. The following steps solved it for me.\nFirstly locate where \"thefuck\" module is installed. For me, it is /usr/local/lib/python3.5/dist-packages/\nThen change the permission of \"thefuck\" folder:\nbash\ncd /usr/local/lib/python3.5/dist-packages\nsudo chmod -R 755 thefuck. ",
    "FireFaced": "+1. Produces the same behavior for me with FISH 2.3.1 and The Fuck 3.24 on Python 3.6.2. Nevermind, it seems that there is an issue with the environment variable being set. When I manually set it in my config.fish, it switched back to No fucks given. ",
    "kosukemori": "+1. My workaround is, \n```\nIn ~/.config/fish/config.fish\n...\nset -gx SHELL /usr/local/bin/fish # Add this line. Path of fish depends on your environment.\nthefuck --alias | source\n...\n```\nProbably the changes in the following line produce this problem.\nhttps://github.com/nvbn/thefuck/blob/master/thefuck/shells/init.py#L53\nThis line check $SHELL at first. So, for example, if we don't use chsh, just run fish from bash, $SHELL still be /bin/bash, and thefuck generates the wrong alias.. ",
    "joshporter1": "Thanks @kosukemori - glad you posted this! Spent way to much time trying to find a fix for this, this issue didn't appear in my search results.. ",
    "dieggsy": "I've found env SHELL=/usr/bin/fish thefuck --alias | source does pretty much the same thing. ",
    "iraquitan": "Almost same problem here:\nzsh\n$ fuck\nfuck:export: not valid in this context: -'\npyenv:11: command not found: pyenv                                                                                                                                                                                                                                                                                                                                        \nprompt_context:10: command not found: whoami\nprompt_dir:1: command not found: sed\nprompt_background_jobs:1: command not found: wc\nprompt_background_jobs:2: command not found: awk\nAdditional info:\n```zsh\n$ zsh --version                                                                                                                                                                                                                                                                                                   \nzsh 5.4.2 (x86_64-apple-darwin15.6.0)\n$ sw_vers                                                                                                                                                                                                                                                                                                         \nProductName:    Mac OS X\nProductVersion: 10.11.6\nBuildVersion:   15G17023\n```. ",
    "yeonzi": "it seems that was a issue of zsh.\nwhen run export TF_SHELL_ALIASES=$(alias) in zsh, you can see the same error.\nrun unalias -- - and this error will disappear, but another error comes.\nmy way to deal with this problem is not use eval \"$(thefuck --alias)\" in ~/.zshrc\nrun thefuck --alias in your shell, delete the line which contain export TF_SHELL_ALIASES=$(alias), and write the output in your .zshrc\njust like\nfuck () {\n    TF_PYTHONIOENCODING=$PYTHONIOENCODING;\n    export TF_ALIAS=fuck;\n    export TF_HISTORY=\"$(fc -ln -10)\";\n    export PYTHONIOENCODING=utf-8;\n    TF_CMD=$(\n        thefuck THEFUCK_ARGUMENT_PLACEHOLDER $@\n    ) && eval $TF_CMD;\n    unset TF_HISTORY;\n    export PYTHONIOENCODING=$TF_PYTHONIOENCODING;\n    test -n \"$TF_CMD\" && print -s $TF_CMD\n}\nIt may not the best way to deal with this problem, but it really works.. ",
    "wrecklass": "It appears that the export won't allow aliases that start with non alphanumeric characters. I made this change to the third line:\nTF_SHELL_ALIASES = $(alias | grep \"^[a-zA-Z0-9]\")\nAnd it seems to be working fine for me now.. ",
    "davidnagli": "I have the same issue. Is there an official fix?. ",
    "SilvesterHsu": "@scorphus Thefuck works fine on Ubuntu with zsh, but I met the above problem on mac.. @scorphus zsh 5.4.2 (x86_64-apple-darwin14.5.0) on mac, and zsh 5.1.1 (x86_64-ubuntu-linux-gnu) on Ubuntu.\n. ",
    "rosiecakes": "having this exact issue on mac as well - zsh 5.2 (x86_64-apple-darwin15.6.0). ",
    "omershelef": "have this same issue on mac. any solution?. ",
    "whirlp00l": "I have this problem with zsh 5.0.2 (x86_64-pc-linux-gnu) and have the alias output as following:\nfuck () {\n                TF_PYTHONIOENCODING=$PYTHONIOENCODING;\n                export TF_SHELL=zsh;\n                export TF_ALIAS=fuck;\n                export TF_SHELL_ALIASES=$(alias);\n                export TF_HISTORY=\"$(fc -ln -10)\";\n                export PYTHONIOENCODING=utf-8;\n                TF_CMD=$(\n                    thefuck THEFUCK_ARGUMENT_PLACEHOLDER $@\n                ) && eval $TF_CMD;\n                unset TF_HISTORY;\n                export PYTHONIOENCODING=$TF_PYTHONIOENCODING;\n                test -n \"$TF_CMD\" && print -s $TF_CMD\n            }. ",
    "harkabeeparolus": "I have the same problem in zsh. You can fix this by quoting the output from \"alias\":\ntraal% echo $ZSH_VERSION\n4.3.10\ntraal% unalias -m '*'         # remove all aliases\ntraal% alias\ntraal% alias ll='ls -a'\ntraal% alias\nll='ls -a'\ntraal% foo=$(alias)           # this works!\ntraal% export foo=$(alias)    # this breaks...\nexport: not valid in this context: -a'\ntraal% export foo=\"$(alias)\"  # works again\ntraal% print $foo\nll='ls -a'\n\nI confirmed that this works as expected with thefuck too.\nIn other words; the proper fix is to change:\nexport TF_SHELL_ALIASES=$(alias);\n\nTo:\nexport TF_SHELL_ALIASES=\"$(alias)\";\n\n. ",
    "sqzrmhj": "\nit seems that was a issue of zsh.\nwhen run export TF_SHELL_ALIASES=$(alias) in zsh, you can see the same error.\nrun unalias -- - and this error will disappear, but another error comes.\nmy way to deal with this problem is not use eval \"$(thefuck --alias)\" in ~/.zshrc\nrun thefuck --alias in your shell, delete the line which contain export TF_SHELL_ALIASES=$(alias), and write the output in your .zshrc\njust like\nfuck () {\n    TF_PYTHONIOENCODING=$PYTHONIOENCODING;\n    export TF_ALIAS=fuck;\n    export TF_HISTORY=\"$(fc -ln -10)\";\n    export PYTHONIOENCODING=utf-8;\n    TF_CMD=$(\n        thefuck THEFUCK_ARGUMENT_PLACEHOLDER $@\n    ) && eval $TF_CMD;\n    unset TF_HISTORY;\n    export PYTHONIOENCODING=$TF_PYTHONIOENCODING;\n    test -n \"$TF_CMD\" && print -s $TF_CMD\n}\nIt may not the best way to deal with this problem, but it really works.\n\nfantastic. ",
    "teresaejunior": "Ugh, that's really sad, but thanks for pointing that out. BTW, by looking at #589, I noticed my examples were unquoted, so I fixed them.. ",
    "Rom1deTroyes": "Le Saturday 28 Oct 2017 \u00e0 23:15:24 (+0000), John Piers Cilliers a \u00e9crit :\nHello !\n\nalias l='ls'\necho 'eval $(thefuck --alias)' >> ~/.zshrc\n\nSo, each time you open a zsh session (login, run a terminal, ...) you\nadd the line 'eval $(thefuck --alias)' at the bottom of your .zshrc\nconfig file...\nComment (or remove) this line, and every thing will go round (-:\n\n}\neval $(thefuck --alias)\n\nKeep just one of this line at the end, btw !\n\nThere were about a hundred of these, eval $(thefuck --alias) entries at the bottom of zshrc\n\nYes, you add one each time the echo >> ~/.zshrc is evalued, so it\nmight grow quickly !\n\nI removed them and when opening a terminal window, everything is\ninstantaneous, no lag at all.\n\nYep, you don't eval the alias a hundred of time (-:\n\nSo after saving the config and exiting, proceed to open another\nterminal and for every subsequent terminal window that I open it\nadds one more of these lines\n\nYes, that what the unwanted echo >> ~/.zshrc command do...\n\nand obviously after a while when i've opened a few hundred of these\nterminal windows over a period of time I have a few hundred of these\nentries in my zshrc.\n\nYep, you've point it : the error is right there...\n\nTo stop this behaviour (as a temporary measure) I commented out the\nline  echo 'eval $(thefuck --alias)' >> ~/.zshrc\n\n... And you've found the solution !\n\nbut presume that is not the correct way to go about it.\n\nThe echo 'eval $(thefuck --alias)' >> ~/.zshrc has to be run in a\nterminal once to write the eval $(thefuck --alias) at the end of your\n~/.zshrc config file.\n\nI'm definitely a rookie when it comes to these things so apologies\nif I've gone about this in the wrong way, here and on my PC! \n\nWell, if you messed it, it may be a problem in the documentation, so\nfeel free to point out where you miss something, and the doc will be\nmore clear and precise for all non-developers user (-:\n++\n    Romain\n-- \nJe vote [OUI] a la cr\u00e9ation de fr.rec.chasse.newbies\n-+- AT in: Guide du Cabaliste Usenet - Bien configurer son newbie -+-\n. Le lundi 09 avril 2018 \u00e0 20:41:25 (+0000), thechief389 a \u00e9crit :\n\nNobody should have to type a profanity to correct a console command. \n\nhttps://www.youtube.com/watch?v=f2L47_W2mFs\nAnd be not conformed to this world:\nbut be ye transformed by the renewing of your mind,\nthat ye may prove what that good, and acceptable, and perfect, will of God.\nRomans 12:2\n(Btw, feel free to fork this project and sed fuck/Gosh or whatever you\nwant...)\n++\n    Romain\n-- \nFrom: \"james\" fuckyourmother@tam\u00e8re.com\nSubject: SACRE PUTAIN DE SA MERE CET ENCULE!!!!\ntest\n-+- james in Guide du Petit Joueur : troll, mode d'emploi -+-\n. > Or maybe we're better off with just `... endswith(': Is a\n\ndirectory\\n')and those who use acatthat doesn't follow \u201cdefault\u201d\nimplementation are \u201din a state of sin and deserve whatever happens to\nthem.\u201d We can still have ... or endswith(': Is a directory')` if we\never need to, after all.\n\nMy sin is on an other kind of state :\nromain@dulix:~/Musique/White_Cowbell_Oklahoma$ cat ..\ncat: ..: est un dossier\n\nOne more time, I miss a test (-:\n\nI wonder what your thoughts on this are.\n\n++\n    Romain\n-- \nCeux qui ne savent pas o\u00f9 ils vont sont surpris d'arriver ailleurs.\n    -+- Pierre Dac -+-\n. Le mardi 10 juil. 2018 \u00e0 11:40:38 (-0700), Scott Colby a \u00e9crit :\n\n@Rom1deTroyes could you post the output of locale and the values of\nthe environment variables LANGAUGE, LC_ALL, LC_MESSAGES, and\nLANG from your system?\n\n$ locale\nLANG=fr_FR.UTF-8\nLANGUAGE=\nLC_CTYPE=\"fr_FR.UTF-8\"\nLC_NUMERIC=\"fr_FR.UTF-8\"\nLC_TIME=\"fr_FR.UTF-8\"\nLC_COLLATE=\"fr_FR.UTF-8\"\nLC_MONETARY=\"fr_FR.UTF-8\"\nLC_MESSAGES=\"fr_FR.UTF-8\"\nLC_PAPER=\"fr_FR.UTF-8\"\nLC_NAME=\"fr_FR.UTF-8\"\nLC_ADDRESS=\"fr_FR.UTF-8\"\nLC_TELEPHONE=\"fr_FR.UTF-8\"\nLC_MEASUREMENT=\"fr_FR.UTF-8\"\nLC_IDENTIFICATION=\"fr_FR.UTF-8\"\nLC_ALL=\nBTW, there is no C or C.utf8 locales on this system (I don't know why :\nthis is an old eepc used as a personal assistant) :\n$ locale -a\nfr_FR.utf8\nPOSIX\n++\n    Romain\n-- \nCe qu'on fait n'est jamais compris mais seulement lou\u00e9 ou bl\u00e2m\u00e9.\n    -+- Friedrich Nietzsche, Le gai savoir -+-\n. > Can we have \"oops\" instead of a curse word?\nDid You means... poos ? :poo\nUnless anyone think being a genius is not an achieved goal for thefuck developpers, this issue can be (water) closed ?. ",
    "johnpiers": "Shot man, totally cool. Really appreciate the answer(s) Loving this, keep up the good work! Thanks again! Stay well.. ",
    "cojack": "```\n\u256d\u2500cojack@cojack-laptop ~ \u2039v8.5.0\u203a \n\u2570\u2500$ git bara                                                                                                                                                                                                                                                         20:45:22\ngit: 'bara' is not a git command. See 'git --help'.\nThe most similar command is\n        branch\n\u256d\u2500cojack@cojack-laptop ~ \u2039v8.5.0\u203a \n\u2570\u2500[1 \u21b5]\u2500$ fuck                                                                                                                                                                                                                                                       20:45:25\n[WARN] Script not found in output log\nNo fucks given\n```\n@agross still doesn't work. ",
    "agross": "@cojack What do you mean by it \"still\" doesn't work?. Closing because #733 was merged. Just found out by accident this was fixed in 3.25.. ",
    "akuma": "+1\nzsh 5.4.2 (x86_64-apple-darwin16.7.0)\nThe Fuck 3.24 using Python 3.6.3. ",
    "ianmurrays": "Same behavior here, it happened to me after upgrading thefuck to the latest version. Unfortunately I'm not sure what my previous version was. Manually running eval $(thefuck --alias fuck) in zsh makes thefuck work as expected, but the same command inside my .zshrc doesn't do the trick.. ",
    "jberglinds": "Same issue here. \nUsing fish with latest thefuck. \nI have git aliased to hub and it never works for git commands. Other unaliased commands seem to work.. ",
    "dmeijboom": "Just use the following function instead of 'thefuck --alias':\nfish\nfunction fuck -d \"Correct your previous console command\"\n  set -l fucked_up_command $history[1]\n  env TF_ALIAS=fuck PYTHONIOENCODING=utf-8 thefuck $fucked_up_command | read -l unfucked_command\n  if [ \"$unfucked_command\" != \"\" ]\n    eval $unfucked_command\n    builtin history delete --exact --case-sensitive -- $fucked_up_command\n    builtin history merge ^ /dev/null\n  end\nend\nThe reason you get this error is because your 'SHELL' environment variable still is bash instead of fish so this program things you're on bash and thus outputs a shell script for bash instead of fish.. ",
    "EwanRenton": "I fix this error with your code, you are really a nice guy, thx :+1: . ",
    "jason-wihardja": "Having the same issue here. I'm on MacOS using zsh 5.4.2. This issue seems to occur only on zsh. When I tried to use bash, the issue didn't happen.. ",
    "fangbyte": "This is a funny customization, I'd use it. ",
    "sylveon": "Yes, I have exited back to fish (in which thefuck works fine) and launched bash again.. ",
    "EmberQuill": "Was going to report that I'm getting an Unexpected End of File when starting bash from zsh but this ended up being the cause of the issue. eval $(SHELL=bash thefuck--alias) worked.. ",
    "yurivict": "$ thefuck --version\nThe Fuck 3.25 using Python 3.6.2\nI don't remember the command now. I will see if I can reproduce it.. ",
    "Silvancx": "I have the same problem.\n\nMy setup:\n- The Fuck 3.27 using Python 3.7.(thefuck -v)\n- tmux 2.7(tmxu -V)\n- Mac OSX 10.13.6(os)\n- zsh 5.3 (x86_64-apple-darwin17.0)(zsh -V). ",
    "OriginCode": "@scorphus Well, it is OK right now...\nI don't know what happened.... ",
    "Geolim4": "Okay thanks !. ",
    "m1guelpf": "@josephfrazier Updated!. ",
    "andschwa": "Thanks @davidhart82! I applied this to master and tested, it fixes my scenario!. ",
    "Genora51": "Ok, so it seems as though PR #767 fixes this issue. I recommend merging pronto, before more people experience this problem with the current version.. I'm fairly sure that's the issue; I believe that's what the PR fixes.. ",
    "Jomik": "Interesting, i have no issue on The Fuck 3.27 using Python 3.6.7, but I decided to make a function rather than source in config.fish. Maybe thefuck --alias is outputting the bash function rather than the fish function..?. ",
    "jhwheeler": "I'm having the same issue.. ",
    "elboletaire": "Same here using ubuntu 18.04 and zsh 5.4.2.. ",
    "johndoudou": "I was having the same issue, until I realized that my .zshrc had some illegal line that broke the sourcing (parse error near...).. ",
    "Harkishen-Singh": "@thedrow  , can u please mention your Operating System along with its version?\nIf its Ubuntu or any Linux distro, then i guess, unless the error pointed out by the terminal is in that language, \"fuck\" cannot process that piece of code.. ",
    "ErikBrendel": "Yep, that would have helped :D\nThe Fuck 3.24 using Python 3.5.2. Zsh version: zsh 5.1.1 (x86_64-ubuntu-linux-gnu)\nAdditionally the newest oh-my-zsh - version.. ",
    "alexbarcelo": "Can do.\nThis WE I suppose I will be able to complete the PR then.. There are no unittest for the correction, but that needs filesystem so... not very unittest-able I'm afraid.\n@scorphus, are the provided basic tests ok? Do you feel that the new functional is enough for the cd_correction? coveralls doesn't detect the executed code in functional tests as covered (AFAIK), but the functional should indeed be testing that.. ",
    "RogueScholar": "I'm experiencing this exact behavior on my system running the Beaver alpha as well. I'm half tempted to rollback the apt related packages back to the Artful release versions to isolate if this is related to changes slated to be released with 18.04 or whether it's of another nature entirely.. ",
    "Steampunkery": "Well I can tell you that it worked for me on my box before bionic, that is, artful. It seems like a python error from the trace back, though. It\u2019s barfing at the CommandNotFound module. . Yeah I did that as well. I\u2019ve never used CommandNotFound so I\u2019m not much help here. . @piotrkochan Weird, It works for me with the exact same specs, except I use bash. Try building from source, sometimes that helps.. ",
    "karamanolev": "Same thing on bionic. I did a hack-fix by changing these lines in apt_get.py:\n```\n    from CommandNotFound import CommandNotFound as CommandNotFound_\ncommand_not_found = CommandNotFound_()\n\nHowever, running fuck after that causes this:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/output_readers/rerun.py\", line 22, in _wait_output\n    else settings.wait_command)\n  File \"/usr/local/lib/python3.6/dist-packages/psutil/init.py\", line 1264, in wait\n    return self._proc.wait(timeout)\n  File \"/usr/local/lib/python3.6/dist-packages/psutil/_pslinux.py\", line 1390, in wrapper\n    return fun(self, args, *kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/psutil/_pslinux.py\", line 1568, in wait\n    return _psposix.wait_pid(self.pid, timeout, self._name)\n  File \"/usr/local/lib/python3.6/dist-packages/psutil/_psposix.py\", line 104, in wait_pid\n    delay = check_timeout(delay)\n  File \"/usr/local/lib/python3.6/dist-packages/psutil/_psposix.py\", line 66, in check_timeout\n    raise TimeoutExpired(timeout, pid=pid, name=proc_name)\npsutil._exceptions.TimeoutExpired: psutil.TimeoutExpired timeout after 3 seconds (pid=16746)\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.6/dist-packages/psutil/init.py\", line 1172, in _send_signal\n    os.kill(self.pid, sig)\nPermissionError: [Errno 1] Operation not permitted\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 11, in \n    sys.exit(main())\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/entrypoints/main.py\", line 25, in main\n    fix_command(known_args)\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/entrypoints/fix_command.py\", line 36, in fix_command\n    command = types.Command.from_raw_script(raw_command)\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/types.py\", line 82, in from_raw_script\n    output = get_output(script, expanded)\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/output_readers/init.py\", line 18, in get_output\n    return rerun.get_output(script, expanded)\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/output_readers/rerun.py\", line 47, in get_output\n    if _wait_output(result, is_slow):\n  File \"/usr/local/lib/python3.6/dist-packages/thefuck/output_readers/rerun.py\", line 26, in _wait_output\n    child.kill()\n  File \"/usr/local/lib/python3.6/dist-packages/psutil/init.py\", line 287, in wrapper\n    return fun(self, args, *kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/psutil/init.py\", line 1246, in kill\n    self._send_signal(signal.SIGKILL)\n  File \"/usr/local/lib/python3.6/dist-packages/psutil/init.py\", line 1183, in _send_signal\n    raise AccessDenied(self.pid, self._name)\npsutil._exceptions.AccessDenied: psutil.AccessDenied (pid=16747)\n```. @nvbn The latest version from git works out of the box on latest 18.04. I consider this closed. Thanks a lot!. ",
    "piotrkochan": "same issue\n\u256d\u2500me@pc ~  \n\u2570\u2500$ thefuck --version \nThe Fuck 3.25 using Python 3.6.5\n\u256d\u2500me@pc ~  \n\u2570\u2500$ zsh --version\nzsh 5.2 (x86_64-ubuntu-linux-gnu)\n\u256d\u2500me@pc ~  \n\u2570\u2500$ lsb_release -a   \nLSB Version:    core-9.20160110ubuntu5-amd64:core-9.20160110ubuntu5-noarch:printing-9.20160110ubuntu5-amd64:printing-9.20160110ubuntu5-noarch:security-9.20160110ubuntu5-amd64:security-9.20160110ubuntu5-noarch\nDistributor ID: Ubuntu\nDescription:    Ubuntu Bionic Beaver (development branch)\nRelease:    18.04\nCodename:   bionic. ",
    "scytherswings": "I'm so fucked without this. Can't wait for the next release ;D. @nvbn I falsely assumed this was still unreleased and didn't even attempt to upgrade my install before posting. Works fine after upgrading. Thank you for all your hard work!. ",
    "johnthagen": "Oh, duh, sorry I missed 2.7 support. I'll close this issue as I'm sure dropping Python 2 will involve much bigger cleanups.. ",
    "b1skit": "@matthewfallshaw @shakaran @thedrow @MattKotsenas @jab Hello! Apologies for the mass-direct-mention.\nThis is my first contribution to this project. I'm wondering if there's anything else I might need to do to get this pull request accepted?\nThanks :). Thanks @RogueScholar , glad I could help.. @jab Great catch, thank you. I've made the correction.. @josephfrazier Great catch, thanks! I've corrected the punctuation.. ",
    "joaothallis": "I have the same problem, it happens when I use zsh, in bash it does not have this problem.. The Fuck 3.25 using Python 3.6.5\n. I'm using the latest version of the distro, I'll uninstall and install it in another way to get the last one\nJo\u00e3o Thallis\nDesenvolvedor de Software\nStone Pagamentosjoaothallis.developer@gmail.com\n(21) 99982 2589\nRio de Janeiro\nhttps://joaothallis.github.io\n\nFrom: Pablo Aguiar notifications@github.com\nSent: Monday, September 24, 2018 5:06:19 AM\nTo: nvbn/thefuck\nCc: Jo\u00e3o Thallis | Stone; Mention\nSubject: Re: [nvbn/thefuck] fuck:history: bad option: -s (#797)\nThe Fuck 3.25 using Python 3.6.5\n@joaothallishttps://github.com/joaothallis, what if you test with latest release?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/nvbn/thefuck/issues/797#issuecomment-423901107, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AYO3QHvf9-LySu0diTh0M_lWy2DSL4Htks5ueJJ7gaJpZM4S9ya1.\n. ",
    "Zmegolaz": "I had a similar problem in bash (version 4.4.23(1)-release), turns out it was because I had a huge list of previous aliases (1776 lines, 378 kB) which messed it up. \n$ grep thefuck .bashrc\neval $(thefuck --alias)\n$ ls /dev/null\n/dev/null\n$ fuck\nbash: /usr/bin/thefuck: Argument list too long\n$ ls /dev/null\nbash: /usr/bin/ls: Argument list too long. ",
    "sww1235": "I am also experiencing this issue:\nthefuck --version\nTraceback (most recent call last):\n  File \"/usr/bin/thefuck\", line 8, in <module>\n    from thefuck.entrypoints.main import main\n  File \"/usr/lib/python3.6/site-packages/thefuck/entrypoints/main.py\", line 11, in <module>\n    from .alias import print_alias  # noqa: E402\n  File \"/usr/lib/python3.6/site-packages/thefuck/entrypoints/alias.py\", line 3, in <module>\n    from ..shells import shell\n  File \"/usr/lib/python3.6/site-packages/thefuck/shells/__init__.py\", line 6, in <module>\n    from psutil import Process\n  File \"/usr/lib/python3.6/site-packages/psutil/__init__.py\", line 100, in <module>\n    from . import _pslinux as _psplatform\n  File \"/usr/lib/python3.6/site-packages/psutil/_pslinux.py\", line 26, in <module>\n    from . import _psutil_linux as cext\nImportError: cannot import name '_psutil_linux'\nfuck\nTraceback (most recent call last):\n  File \"/usr/bin/fuck\", line 8, in <module>\n    from thefuck.entrypoints.not_configured import main\n  File \"/usr/lib/python3.6/site-packages/thefuck/entrypoints/not_configured.py\", line 11, in <module>\n    from psutil import Process  # noqa: E402\n  File \"/usr/lib/python3.6/site-packages/psutil/__init__.py\", line 100, in <module>\n    from . import _pslinux as _psplatform\n  File \"/usr/lib/python3.6/site-packages/psutil/_pslinux.py\", line 26, in <module>\n    from . import _psutil_linux as cext\nImportError: cannot import name '_psutil_linux'\nbash --version\n```\nGNU bash, version 4.4.19(1)-release (armv7l-unknown-linux-musleabihf)\nCopyright (C) 2016 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later http://gnu.org/licenses/gpl.html\nThis is free software; you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n```\npython --version \nPython 3.6.5\nrunning voidlinux with most recent updates as of posting and python 2 not installed.\n. ",
    "mbinary": "I also encountered this problem and it still doesn't work after run pip install -U psutil successfully @nvbn . ",
    "gokuldhoot": "is there any other way to make this work because none of the above solutions are working. ",
    "rhagan21": "I'm also having the same issue and installing python-dev doesn't seem to have helped.. ",
    "dishank-b": "No, same configuration error. And I also don't wanna put this in .bashrc, as then the command will execute every time I open a terminal, increasing the loading time of it. I want it to execute once at the startup of system and then used by all terminal instances I open. . Wouldn't be good if you can run it on the startup and then every shell instance will be able to use it without loading it every time. This will be real time saver. Evaluation on every instance takes at-least 1 sec. So opening a shell instance and waiting for it to load is really annoying. \nI would like to contribute on this if you can guide. . ",
    "pabru": "Why not make the main binary's name adjustable/reconfigurable? That would be a good compromise instead of having to fork.. ",
    "dylmye": "Close as duplicate of #401. ",
    "alxpettit": "I like the name fuck. Professionalism is overrated anyway. I would be fine with making the name more customizable, but that'd complicate the code unnecessarily and this is a pretty minor case. It seems like it would be really easy to maintain a fork that just pulls from this repo, seds it before build/install/whatever.. I myself am often called a SJW, and I have no fucking problem with cursing. But yeah, maybe you should close this while there's still time.. ",
    "mjslawson": "eval $(thefuck --alias nodude). > What's an SJW?\nSocial Justice Warrior\nhttps://en.wikipedia.org/wiki/Social_justice_warrior\nNot sure if profanity falls under the authority of SJW's or simply infuriated grandmothers armed with wooden spoons. That said, it's probably time to wrap up this thread before it degrades into a weird, irrelevant squabble.. ",
    "dfaerch": "Its not an issue for me under normal usage. If you're sitting next to a client/manager, just don't use it at that moment. But the name does present a problem when it inadvertently pops up while showing a client something. Like when opening a new console tab, and you get this in bold red:\n\n[WARN] The Fuck will drop Python 2 support soon, more details https://github.com/nvbn/thefuck/issues/685\n\nI don't think any amount of aliasing solves this :).\n. ",
    "skprog": "I just learned about this but i think fuck is fine. If your so up stuck that it hurts your feelings change the alias. Heck im suprised its not called shit or damnit. ",
    "informer2016": "@thechief389 Fuck SJWs and their boring politically-correct corporate culture. Stop ruining our fun. ",
    "romangraef": "something like this? (put in ~/.config/thefuck/rules). ",
    "grokdesigns": "I've tried the fixes in #717 and am still having the same issue.. ",
    "Chris-W-Weir": "I'm having this issue as well, I'm on Mac OS 10.13.4 with The Fuck 3.26 using Python 3.6.5. The temporary fix works for me after restarting my shell. Thanks!. ",
    "DmitriK": "I have this issue, but I don't think the fix works for me, although I may not be applying it right. I tried adding it to the ~/.config/fish/functions/fuck.fish function, as well as running it separately, and the error was still the same.\nAdditionally, I have not defined any aliases for my shell, so there are no '=' for me to remove. Running 'alias' returns nothing except for the alias from the temporary fix.. Sure, output follows. I know thefuck was working very recently, as I had run into #730, and everything worked when I fixed the environment variable mentioned in that issue. Something  about my setup changed recently to cause this, but I'm not sure exactly what. For what it's worth, I'm on ArchLinux\nDEBUG: Run with settings: {'alter_history': True,\n 'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'exclude_rules': [],\n 'history_limit': None,\n 'instant_mode': False,\n 'no_colors': False,\n 'priority': {},\n 'repeat': False,\n 'require_confirmation': True,\n 'rules': [<const: All rules enabled>],\n 'slow_commands': ['lein', 'react-native', 'gradle', './gradlew', 'vagrant'],\n 'user_dir': PosixPath('/home/dmitri/.config/thefuck'),\n 'wait_command': 3,\n 'wait_slow_command': 15}\nDEBUG: Total took: 0:00:00.100589\nTraceback (most recent call last):\n  File \"/usr/bin/thefuck\", line 12, in <module>\n    sys.exit(main())\n  File \"/usr/lib/python3.6/site-packages/thefuck/entrypoints/main.py\", line 25, in main\n    fix_command(known_args)\n  File \"/usr/lib/python3.6/site-packages/thefuck/entrypoints/fix_command.py\", line 36, in fix_command\n    command = types.Command.from_raw_script(raw_command)\n  File \"/usr/lib/python3.6/site-packages/thefuck/types.py\", line 81, in from_raw_script\n    expanded = shell.from_shell(script)\n  File \"/usr/lib/python3.6/site-packages/thefuck/shells/generic.py\", line 30, in from_shell\n    return self._expand_aliases(command_script)\n  File \"/usr/lib/python3.6/site-packages/thefuck/shells/fish.py\", line 65, in _expand_aliases\n    aliases = self.get_aliases()\n  File \"/usr/lib/python3.6/site-packages/thefuck/shells/fish.py\", line 60, in get_aliases\n    raw_aliases = _get_aliases(overridden)\n  File \"/usr/lib/python3.6/site-packages/thefuck/utils.py\", line 33, in wrapper\n    memo[key] = fn(*args, **kwargs)\n  File \"/usr/lib/python3.6/site-packages/thefuck/utils.py\", line 267, in wrapper\n    return _cache.get_value(fn, depends_on, args, kwargs)\n  File \"/usr/lib/python3.6/site-packages/thefuck/utils.py\", line 243, in get_value\n    value = fn(*args, **kwargs)\n  File \"/usr/lib/python3.6/site-packages/thefuck/shells/fish.py\", line 25, in _get_aliases\n    name, value = alias.replace('alias ', '', 1).split(' ', 1)\nValueError: not enough values to unpack (expected 2, got 1). I did some brute force debugging by adding some logging directly to the fish.py file where the exception occurs. On my system, 'alias_out' is an empty byte string, presumably because I don't generate aliases elsewhere, and a fresh instance of fish is spawned by Popen.\nAnyway, I directly applied the diff in the PR to my copy, and that does fix the issue for me since the split length is checked explicitly. I'll keep the patch in there until an official package gets out.. ",
    "AnthonBerg": "Hi there! I'm hitting something similar too. The alias fish_key_reader fix doesn't seem to work for me. Defined with a space. No other aliases exist. Fish 2.7.1 on MacOS X 10.13.4, using thefuck --HEAD from Homebrew. Output attached, including thefuck debug stuff.\nfishfuckkfail.txt\nThanks a million for thefuck btw! Please let me know how I can help.. I grabbed fish.py from commit dba7a8da02281800c2a3e5ed5e6755fd021f05a6 and dropped it in /usr/local/Cellar/thefuck/HEAD-97f2d74/libexec/lib/python3.6/site-packages/thefuck/shells :)\nEverything is fine now. Thanks!!. ",
    "jrr": "Will this be released (and published to homebrew) soon?. ",
    "Gabgab2003": "The new normal alias is fuck so try that @maracuja-juice . ",
    "friendlyfreedom": "Issue is solved with #844. ",
    "maracuja-juice": "Thanks. Will try this out as soon as I'm on a Windows PC again.. ",
    "cobrabr": "This is what I got:\nzsh\n%(12V.%F{242}%12v%f .)%(?.%F{magenta}.%F{red})${PURE_PROMPT_SYMBOL:-\u276f}%f\nDo you think it might be some conflict with pure?. OK, cool. I'll wait for that, then. :)\nI think we can close this one for now. Thanks!. ",
    "Ewpratten": "appveyor seems to be having problems with pip... ",
    "revolter": "Wow, thanks for the quick merge!. Much inception\n\n. ",
    "jabbson": "Recursive chown'ing these folders to be jabbson:admin did solve the issue for me. ",
    "drx777": "Same here, only it was php and a var folder with root user ownership. Solved by chown. :+1:. ",
    "htl-leonding": "thank you. solved my problem. \ud83d\udc4d. ",
    "scolby33": "Thanks for the feedback! I've made the changes you requested and I'll push once tox finishes running. Let me know if you see anything else.\nI've tested the output of cat on macOS, Debian, and Arch. If someone out there is running a more esoteric system, it'd be interesting to check if all cat's respond the same way.. I\u2019m not super familiar with internationalization, but a bit of digging brought me to gettext. I think the string we\u2019re seeing, \u201cIs a directory\u201d, comes from glibc\u2019s sysdeps/gnu/errlist.c, which is translated to \u201cest un dossier\u201d on the translation project. I suppose we could parse out the messages from the files there or perhaps the python gettext library is what we want.. I\u2019m on mobile so can\u2019t try it right now, and I probably should be asleep, but from a quick look at the docs, it might be as simple as gettext.translation(domain=\u2018libc\u2019).gettext(\u2018Is a directory\u2019). @Rom1deTroyes could you post the output of locale and the values of the environment variables LANGAUGE, LC_ALL, LC_MESSAGES, and LANG from your system?. I've opened #826 to add localization to this rule.. I see using thefuck -r does what I want; it's a shame it doesn't work with the shell logger.. It looks like the locale files might not be available by default on Travis so some further changes might need to be made regarding the testing. I'd like to hear what the maintainers think before moving further with that, though.. Rerunning with LANG=C is super smart! I wonder what the original commenter's configuration is that that didn't work.\ngettext seems like a moderately good system for adapting to translations of other commands, but I think you'll find there to be some difficulties that will make it hard to keep it completely generic, unfortunately--it should be a ~hard~fun project.\nAs for modifying this rule, I think something like os.path.isdir(command.script[4:]) could do it?\nEDIT: that, of course, makes it hard to test with directories that aren't really there.. @nvbn see my edit above, would using pytest to create a temporary directory make sense or is that going too far?. I'm a bit sad that my beautiful 100-test matrix won't get to see the light of day, but I agree that this approach is much more elegant. I've opened a new pull request so I didn't have to fight with git to revert my initial set of changes.\nSee #827.. I wouldn't have considered the case of more than one cat. I added a test for this as well.. What are the relative merits of command.output.rstrip().endswith(': Is a directory') vs. command.output.endswith(': Is a directory\\n')?. Here's some of my own benchmarks\n```python\nbench.py\nimport timeit\nthe base case\nrstrip_timer = timeit.Timer(r\"'cat: foo: Is a directory\\n'.rstrip().endswith(': Is a directory')\")\nwhat if there's no newline?\nrstrip_timer2 = timeit.Timer(r\"'cat: foo: Is a directory'.rstrip().endswith(': Is a directory')\")\nwhat if it's a mess?\nrstrip_timer3 = timeit.Timer(r\"'cat: foo: Is a directory \\n\\n \\n'.rstrip().endswith(': Is a directory')\")\nbase case assuming one newline\nno_rstrip_timer = timeit.Timer(r\"'cat: foo: Is a directory\\n'.endswith(': Is a directory\\n')\")\ntimers = [rstrip_timer, rstrip_timer2, rstrip_timer3, no_rstrip_timer]\ntry:\n    number = max(timer.autorange()[0] for timer in timers)\nexcept AttributeError:  # no autorange in Python 2\n    number = 2000000\nprint('number = {:,}'.format(number))\nresults = [min(timer.repeat(repeat=5, number=number)) for timer in timers]\nprint('results = {}'.format(results))\nresults_percentages = ['{:.2%}'.format((result-results[0])/results[0]) for result in results]\nprint('percentages = {}'.format(results_percentages))  # bigger negative is better\n```\nfish\nfish $ for version in 3.7 3.6 2.7\n           echo \"Python $version\"\n           eval python$version bench.py\n       end\nPython 3.7\nnumber = 2,000,000\nresults = [0.46968697199999987, 0.41365929999999995, 0.48141546300000027, 0.3026672379999997]\npercentages = ['0.00%', '-11.93%', '2.50%', '-35.56%']\nPython 3.6\nnumber = 10,000,000\nresults = [2.472023139009252, 2.1997297610214446, 2.5396445730002597, 1.6017803400172852]\npercentages = ['0.00%', '-11.02%', '2.74%', '-35.20%']\nPython 2.7\nnumber = 2,000,000\nresults = [0.48915696144104004, 0.4453470706939697, 0.563338041305542, 0.329495906829834]\npercentages = ['0.00%', '-8.96%', '15.17%', '-32.64%']\nIt's interesting that Python 3.6 picks such a bigger number in autorange, but the relative timing differences are approximately the same in all Python versions. Also interesting is that the case with all kinds of screwed up whitespace is super slow in Python 2.7.\nI think that 35% lower times are a win, since the match code is (at least in my guess) the most performance-sensitive part of thefuck.\nI think using a custom alias/wrapper is both \"sinful\" enough and unlikely enough to not be worth supporting in the face of this performance difference. I would thus vote for the non-rstrip version unless anyone can find a default implementation of cat that outputs different whitespace or someone comes back in the future complaining that the rule doesn't work for their cat.. Sounds good! I'm happy with my changes, so unless there's anything else you or other collaborators see needing to be done, I think I'm ready for the merge. Let me know if you would like the commits squashed.. This is dirty and I don't like it, but the default _default_localedir includes sys.base_prefix and share/locale isn't generally linked into a virtual environment.\nThoughts on this?. ",
    "The-Fireplace": "Output of which thefuck:\n/usr/local/bin/thefuck\nOutput of echo $PATH:\n/home/lance/bin:/home/lance/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\n. Output of ls -lha /usr/bin/thefuck:\nlrwxrwxrwx 1 root root 29 Oct  5  2016 /usr/bin/thefuck -> ../share/thefuck/thefuck.real\nOutput of /usr/bin/thefuck --version:\nThe Fuck 3.11 using Python 2.7.15rc1. That fixed the issue! Thanks for all the help and the quick responses.. ",
    "mati865": "To give some context there are 4 release channels: edge, beta, candidate, stable. Differences are explained here.\nAs far as I know you there are following strategies:\n- use https://build.snapcraft.io to release new version for every commit to channel egde and handle other channels manually (you can add collaborators via dashboard) or via CI/launchpad\n- use CI/launchpad to handle edge, rest just like above\n- release new versions via CI for tagged commit or do it by hand. Snapcraft team is waiting for this PR to be merged: https://forum.snapcraft.io/t/classic-confinement-for-thefuck/7249/9. ",
    "jraspiprojects": "not sure if they'll allow the name though.....\n. ",
    "sanaptejas": "install python2-devel and python3-devel packages to get rid of that error. ",
    "Dean-Coakley": "https://github.com/nvbn/thefuck/blob/master/thefuck/argument_parser.py#L58 :confused: . ",
    "ChaseFlorell": "has this been released?\nhttps://github.com/nvbn/thefuck/commit/142ef6e66c19af5a4a448ecdbb97d4eb9283b99f . ",
    "sobelek": "If no one is doing so I will do run some tests and put PR later.. ",
    "MathRobin": "Have finally found why. Directly related to that heavy proxy which blocks everything on the network of my client. Thanks for your time. ",
    "manikantanallagatla": "@scorphus , I am getting the expected output with Fuck 3.29.\n\n. ",
    "sragha45": "Lol this must be a joke\nYou can correct with thefuck only after you install thefuck properly. ",
    "TheHackmeister": "Just thought I'd mention that I've had the same problem in Fedora 28. \n$ thefuck\nTraceback (most recent call last):\n  File \"/usr/bin/thefuck\", line 7, in \n    from thefuck.entrypoints.main import main\n  File \"/usr/lib/python2.7/site-packages/thefuck/entrypoints/main.py\", line 12, in \n    from .fix_command import fix_command  # noqa: E402\n  File \"/usr/lib/python2.7/site-packages/thefuck/entrypoints/fix_command.py\", line 5, in \n    from .. import logs, types, const\n  File \"/usr/lib/python2.7/site-packages/thefuck/types.py\", line 10, in \n    from .output_readers import get_output\n  File \"/usr/lib/python2.7/site-packages/thefuck/output_readers/init.py\", line 2, in \n    from . import read_log, rerun, shell_logger\n  File \"/usr/lib/python2.7/site-packages/thefuck/output_readers/read_log.py\", line 8, in \n    from backports.shutil_get_terminal_size import get_terminal_size\nImportError: No module named shutil_get_terminal_size. I had to reinstall pip3 for some reason, but once I did that and installed python3-devel, I was good to go. Thanks for your help @Aquakor! . ",
    "Offpics": "@nicolargo @TheHackmeister I think you got ImportError because you try to use Python 2.7 which is not supported. Try to use Python 3.4+.. ",
    "hossainalhaidari": "Ah sorry I didn't notice that!. ",
    "joelnet": "You are correct. git br works just fine with arrow keys.\nI made the assumption that because the arrow keys were visible that meant other options were available.\nI did see this in the README.md so that was the first thing I tested:\ncat_dir \u2013 replaces cat with ls when you try to cat a directory;\n\nI don't see cat_dir in the DEBUG, but the README states it is enabled by default.. Most excellent! I patiently await.. ",
    "chrisdepas": "I've also found that eval \"$(thefuck --alias)\" is slow. \nSlow enough I'd often end up executing udo apt install and the like because the first letter(s) were cut off. \nI tried this instead (with bash) and it works perfectly, so I'll be using it from now on. Nice work.\n+1 from me!. Okay, I found the problem. This was caused by the order of for_app and sudo_support. \nThe ordering in apt_invalid_operation (and also dnf_no_such_command) was wrong, and meant that the input to for_app contained a sudo prefix, and would fail.\nI've made a PR, which is here. Fix was merged, closing this issue. ",
    "RealOgre": "I think that i can do that, i will try to upload something until Sunday . I did upload a solution here and a few ago, is #864. I will delete my fork and create a new one, i will change some extra things, a will open a new pull request soon. If you like the solution with the dictionary i can do the same with Russian language . ",
    "Mempler": "thefuck. ",
    "tomasantunes": "Can we have \"oops\" instead of a curse word?. ",
    "roots84": "\nCan we have \"oops\" instead of a curse word?\n\nSee https://github.com/nvbn/thefuck/issues/801. ",
    "Zhaohaoran1997": "Not exactly. We should call him a \"fucking\" genius lol.. ",
    "fabiosantoscode": "Done, changed brew's URL to https too. Done. ",
    "Sunyelw": "@jamtur01 Can you help me ?. ",
    "alexclst": "Ok, so I\u2019ve done some more digging. If I run /usr/local/bin/thefuck $@ in my handler it will run. However, it in turn will not run the selected command. So, my command_not_found_handle() will produce this output:\nbash\nd /usr/local/\nid /usr/local/ [enter/\u2191/\u2193/ctrl+c]           \nid /usr/local/\nIt will run thefuck, but the command I pick there only gets printed out, not run. Whereas, running fuck myself right afterwards I get what is expected:\nbash\nfuck\nid /usr/local/ [enter/\u2191/\u2193/ctrl+c]           \nid: /usr/local/: no such user\nIt has run the command selected via fuck. But my handler, for some reason, is not running the command, but rather just printing it.. ",
    "rhaleblian": "Thanks for considering the question.\nThis feature could be a provided as a separate subsystem called thefork. If it could be extended to handle all other GitHub projects, wouldn't that be great?\n. Closing, the requestor is being too silly.\nthefuck is a great idea BTW.. Hey, the fork count went down to 1,974!. ",
    "aditisrinivas97": "So, I just wanted to understand this. I expected \"No fucks given\" when I type \n$ history \n$ fuck\nInstead, I got \n$ hist ory [enter/\u2191/\u2193/ctrl+c]. ",
    "tobibechtold": "My colleague and i just ran into a funny situation while pair programming and trying to bring an out of date branch up to date with the master. We weren't quite sure what actually has changed and he said \"just type git log\". And so i typed \"git lock\". He said no... log with a \"g\". So i said: \" no problem, i got this\" and typed \"fuck\". But instead of \"log\" fuck was suggesting \"lsck\". So this is the intent of this PR. . Hey that sounds like an even better idea. I will try to tackle this next week. Thank you :). ",
    "payton": "We'll definitely get those fixed. The request to StackOverflow will have to be modified a bit, too (so the results are more relevant).\nThis was made at HackIllinois with @asong4211 and @scorphus \nWill work on functional tests and README update soon.. ",
    "kilotaras": "Can empty answer be treated as yes here?\n. ",
    "sjuvekar": "My bad, changed the commit\n. ",
    "brassg": "Hey how is this work I want to be a private socialism \n. ",
    "ya0": "*Error\n. ",
    "tevino": "BTW, shouldn't this line be Process(os.getpid()).name() if parent is None?\nSince the version of psutil is not specified I don't know if I should change this line.\nProcess.parent\n. ",
    "BurdenBear": "Yes, this is the elegant way, and it works fine on windows. I'll fix the lint issue and recommit it.. "
}