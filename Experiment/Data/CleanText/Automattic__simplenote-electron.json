{
    "beaucollins": "Thanks @dmsnell\n. There is a functioning auth screen now if a valid app id and app key are used in config.js.\n. The shareURL is used to allow another person to edit the note.\nThe publishURL is used for a read-only view formatted for reading.\n. I think so. There's nothing much else to do with the app as is.\nAny additional responsive enhancements will require new tickets.\nThanks @jasmussen \n. I like the idea of using something like https://github.com/yahoo/react-intl\n. Keep in mind though that we'll also want to support i18n within the Electron portion of the app as well (e.g. menu items).\nWorst case we could use ipc to send localized values from web -> native.\n. :+1: \n. This is the moment in the app where the cursor position change will need to be calculated.\nAn example of how to calculate the cursor change can be found in the existing simperium-js codebase.\n. I'm thinking of ui navigation as well. Like when you're focused on the notes list using down/up arrows and return can change the selected note.\nOther bindings:\n- Focusing search field\n- Activating/navigating the tag menu\n- Deleting/Restoring note\nIdeally you could use the whole app without ever touching the mouse.\n. FWIW the project originally had it's own dev server. \nI was able to get the webpack hot loading to work with the hot loader on the feature/storage-adapters branch.\n. Looks good to me.\n. Another option is to have a folder of icons whose index.js required and exported each one:\n``` js\n// icons/index.js\nimport Trash from './trash'\nimport Back from './back'\nimport Plus from './plus'\nexport { Trash, Back, Plus }\n```\nThen where you're using them you could import only what you were using:\n``` jsx\nimport { Trash } from './icons'\nrender() {\n   return \n}\n```\nOr reference all of them:\n``` jsx\nimport * as Icons from './icons'\nrender: function() {\n   return \n}\n```\n. I think @drw158 is trying to reduce the amount of characters to type when putting in icons.\n. Indexeddb storage can only be sorted by the configured indexes and seems to be pretty limited. You set up indexes ahead of time and then open those index \"views\" of the data.\nOriginally these were the only indexes configured for notes.\nobjectStore.createIndex( 'modificationDate', 'data.modificationDate' );\n    objectStore.createIndex( 'pinned-sort', ['pinned', 'data.modificationDate'] );\nSo when a note is saved to the note index, whatever its values are for the given keys will be used for the index. Sorting is then a matter of opening that index in a desired direction.\nRight now we're using the pinned-sort index to get the notes returned by their .pinned key then by their .data.modificationDate key.\nIf you want a pinned and then alpha sorted index then you have to create a new index using those object keys [pinned-sort, alphavalue].\nFrom what I see you're setting it up correctly @srgpqt.\n. One thing with the indexeddb storage is to give a way for the bucket to reindex all of it's objects when an index is changed. Otherwise you have to delete the index and download the data again for the indexes to be populated.\nThe simplest way to do that is sign out and sign in again.\n. I rebased and deployed to http://automattic.github.io/simplenote-electron/\n. @dmsnell yes, a source list is a common name for the list of content that accompanies a detail view. It was also the class name already used (.source-list).\n. @drw158 much of the collapsing and size limits can be controlled via CSS. Currently I'm using flex-basis to determine the width of the column, so max-width and min-width combined with media queries might be able to take care of all that logic.\n. > a note about style, I'd like to see us use semicolon's as if they were required. personal preferences aside, I agree with Crockford that not including them is a bug: it's a behavior which can lead to hard-to-track down errors in the code. let's leave those in if you don't mind.\nI'm happy to abide by any rules configured in .eslintrc. I'd rather not see them but won't put up a fight. If eslint --fix adds them for me, even better.\n. I tend to always wrap my jsx in parens. Something makes me uneasy to have those stabby  angle braces floating free with nothing to stop them.\njsx\nreturn (\n    <div>\n        <p>I never appear because this is dead code</p>\n    </div>\n);\nI feel safer.\n. Thanks for the work on this!\nTaking it for a bit of a test drive and one thing missing in the draft-js version is a context menu when right clicking the editor. Looks like this is an Electron integration thing specifically.\nCurrent master using Electron:\n\nThis PR using Electron (no context menu):\n\nThis PR using Chrome:\n\n. @nfcampos all fixed up!\n. Maybe we should make the print stylesheet explicit. Like:\ncss\n* { display: none }\n.printable, .printable * { display: unset }. Still need to account for\n- [x] <meta name=\"viewport\" \n- [x] <link ... for the Google font css.. It's mostly just to remove jade.\nWe can easily get rid of the new dependency by using ejs for the template which already comes along with HtmlWebpackPlugin.. I think removing the <link /> tag to Google is better than relying on a network resource for our UI when packaging for electron. . @dmsnell do you know the reason behind using the DLL webpack plugins? If we used a single webpack config with multiple entry configs the HtmlWebpackPlugin would pick up all the scripts which removes the need for add-asset-html-webpack-plugin.. @dmsnell at this point I'm mostly just changing from jade to ejs.\nMy hope was to remove the need of a custom template but the HtmlWebpackPlugin does a good job of working around customizations.\nTo keep this PR cleaner I can probably remove the config changes and have the ejs template handle them the same way as jade template did.. @dmsnell I have changed the config to be JSON and updated the README.. To be completely future proof we could do config.*.\nFor instance exporting a plain object in a config.jsx file would also work with the current webpack config.. @Copons definitely don't squash this one when you merge it \ud83d\ude09.. Do we know why npm test isn't working? Would be nice to get CI going.. @dmsnell I haven't been able to get jest to run. I'm probably doing something wrong.. \u00af(\u30c4)/\u00af delete works just as well as removeItem\nWe should probably store this in a secure cookie though. The localStorage ends up being an insecure place to put secrets.\n. This method is called by the Simperium bucket object. I was sincing errors in the console that callback was not a function.\n. @dmsnell do you know of a better way to get a reference to a node in \"state-less\" way? I'm trying to use a reference to the .source-list node to figure out where the right edge of the node is in order to activate resizing.\n. canResize means their mouse is over the area where they can initiate dragging with a click.\nisResizing means they are currently holding the mouse button down.\nThe is-resizing CSS class isn't being used so can be removed.\n. This is mostly a product of avoiding the introduction of component state.\n. Ok, the problem I'm having then is that the ref doesn't exist when setting the onMouseMove listener. But attempting to trigger a re-render in the ref handler in order to provide the ref to the onMouseMove listener seems to trigger a render loop.\n. Looking a this now, would it make more sense to move the construction of the Promise external to StoreProvider and simply pass in the promise itself? I think this is originally my weird code.\n. where does expect come from?. I wonder what the performance difference of a strpos( \"\\n\" ) would be vs a RegEx.. I was considering the same thing.. That or shrinkwrap?. I was hoping to add the ability to read in git describe to the config. The require in get-config would already pick up a config.json if one was defined.\nI prefer configuration scripts as js instead of JSON usually.. More pleasant debugging in the dll file.. Before:\n\nAfter:\n\n. I like embedding the state of git during the build into the product. There are many ways of doing this. One way would be making a config script that shells out and runs git describe --always --dirty and uses that as the version.\nMine right now: v1.0.6-26-g40890ca-dirty. Mostly I was trying to make minimal changes to the config portion while using the DefinePlugin which didn't allow using a function.. If something is released whether a custom build or production build we would know the state of the source when it was built.. You can do HTML comments. It's probably worth seeing if iOS 10 still has this limitation.. Might be possible with iOS 10.\n. Should it exit with a failure code since webpack would fail to build?. I feel we should exit with an error so it will work correctly with other build tools. For instance running the following would confusingly boot up electron with either: 1) a broken React app or 2) the last succesfully built version excluding any changes you have made.\nnpm run build && electron .\nWhere as exiting with an error code would prevent electron from starting up.\nYes, npm is noisy in failure mode, but I think npm users have to put up with that.\n. If config is not expected to export a function, we can use js or json or any other webpack resolvable file.\nI prefer js because it allows for things like variables and functions and turing completeness.. I suppose we can perform a typeof check and execute it if it's a function to remain backwards compatible with existing config setups.. I changed mine to export an object literal.. @dmsnell to be backwards compatible we can use typeof and execute if it's a function but still update the README to show exporting of an object literal.. We can leave it as it is in develop.\nDoing this change allows for json or js configs and matched how the webpack config works.\nI don't have a strong opinion, I thought it simplified things moving forward but it looks like it might overcomplicate other things.. My linter doesn't like this:\n\u26a0 at line 10 position 4:  Don't use process.exit(); throw an error instead. (no-process-exit)\nhttp://eslint.org/docs/rules/no-process-exit.html. But I feel its use here is perfectly reasonable.. \ud83e\udd22 . @drw158 are we using Source Sans Pro anymore? Can we remove this reference? It's a pretty hefty network payload.. Should this be Promise.all not Promise.race? You want to make sure that none of  the notes are unsynced right?. Looks like I commented on an outdated change but the Promise.race remains.\nIt seems you want to check if any of the notes have a version of 0 and if any of them do have a version of 0 then you will want to show showUnsyncedWarning.\nPromise.race will return the first promise that resolves or rejects and ignore all others where as Promise.all will wait until all Promises resolve or fail early upon the first reject.\n. Yes, it will do an early abort if it enters the true branch here.. Right, this will only do a single async action at a time so presumably it could be less performant in that it won't make the requests in parallel.. Another rewrite that preserves the potential parallelization (but throwing an Error is kind of gross to me):\njs\ntry {\n  await Promise.all(notes.map( async note => {\n    if ( await getVersion( note ) === 0 ) {\n       throw new Error( 'not synced' );\n    }\n  } ) );\n} catch ( error ) {\n    this.showUnsyncedWarning();\n    return;\n}\nonSignOut();\nIf it turns out the parallelization of Promise.race is important the async/await is probably not worth the tradeoff here.. The beauty of the rejectin the original implementation is that it will short circuit any pending async operations.. You can get rid of the async/await in the closure since getVersion returns a Promise and it becomes:\njs\nconst noteVersions = await Promise.all( notes.map( getVersion ) ). If JavaScript catch statements had pattern matching we could check for the expected error type.\nThe reject in noteHasSynced should be providing an Error instance to reject.. ",
    "roundhill": "Works well enough, we can style it later.\n. You should also be able to edit/delete tags from the list as well.\n. Looks like there's a tag list in there now, but I know @drw158 has some design ideas for it!\n. This is currently working as well, but still needs design. (Click the clock icon to view the history slider at the bottom)\n. I like the first a little better, with the latest version all the way to the right. \nGood point about the mobile apps though, we should consider that UI for them.\n. To make a note published:\nAdd published to the systemTags array (same array where deleted is stored for trashed notes)\nSync note\nWait for publishURL property to be updated.\nThe Simplenote web service should see this newly published note and generate a URL and set the note's publishURL property.\n. Also something to consider: Adding support for locale if this is used as a web app outside of Electron.\n. Yo @rralian, any progress on the module?\n. Note: After some research, we need to be able to hook into the Electron printing apis in order to get this working properly on Windows/Linux. Currently if you print through Electron it just prints a screenie of the entire app :/\nhttp://electron.atom.io/docs/v0.34.0/api/browser-window/#win-print-options\nSome example code that build a new BrowserWindow that handles the print: https://github.com/hokein/electron-sample-apps/tree/master/printing\n. The OS X app is a good example of this.\n. Note: This means that when a note is saved, or changes come in remotely and are applied, that we sort out where the cursor was before the change was applied and restore it.\n. Strange that this only happens on Linux, as far as I can tell. Maybe our bump to Electron 4 that we're working on will help with this.. Thanks @ehremington, I was able to reproduce by:\n\nOpening up the same note on two different apps, one of them being Electron.\nPlace the cursor somewhere in the note in the Electron app.\nMake a change to the note on the other app.\nThe cursor jumps to the bottom in Electron.\n\nSo this could happen easily with shared notes, or any other scenario where you can receive a remote change.. I've tested a bit w/ electron, most keyboard shortcuts work fine (for copy/paste and whatnot).\nThere's some specifics about font size in #12\n. Ah, gotcha. I misunderstood. Reopening!\n. @dmsnell this is still needed right? If you have a sec maybe we can resolve the conflicts.\ncc @srgpqt in case you had another plan for tracking state changes.\n. :shipit: \n. Closing this, but feel free to swipe the code when you start working on menu stuff @srgpqt \n. :+1: \n. Closing this one since we have the basics working now, and @rodrigoi is working on a packaging system.\n. Closing this one since we have the basics working now, and @rodrigoi is working on a packaging system.\n. :shipit: \n. :shipit: \n. Is this good to merge now?\n. :shipit: \n. > Do we have a translation infrastructure here like we do in our other products?\nThere's an issue for that: https://github.com/Automattic/simplenote-electron/issues/16\n. I think we should, go as native as we can on all platforms.\n. :shipit: \n. :shipit: \n. Looks good, go ahead and :shipit: after resolving conflicts!\n. :shipit: \n. Would it be possible to have the popover not move over any of the other content when it is opened? It is a little bit jarring when the rest of the content moves out of the way for it.\nAlso, it looks like it should fade the rest of the content and should close when you click out side of it according to: https://github.com/Automattic/simplenote-electron/issues/46#issue-115097292\n. > In any case, perhaps we can merge this, and review the design afterwards?\nSure, sounds ok.\n. Is this one ready for review?\n. Looks good, but I noticed some weirdness with the login fields, filed as separate issue:\nhttps://github.com/Automattic/simplenote-electron/issues/86\n:shipit: \n. The UX is really nice! Good job.\n. :shipit: \n. Go ahead and merge after the spacing fix.\n. cc @fredrocious \n. Oh, derp. This was in Firefox. Ignore for now ;)\n. The account label is empty for me, the account is danroundhill+versions@gmail.com:\n\n. When you click on Display the content area grows vertically. I think it might be better to always have the content area be at a fixed height, and scroll the content within it.\n@drw158 thoughts? Here's a video of what I mean: https://cloudup.com/iT8LMVH4Lnz\n. Agreed, looking good. :shipit: \n. Something's up with the about view in the light theme:\n\n. Looks good, go ahead and merge after fixing conflicts :shipit: \n. I'm seeing a pin icon on each note in the list:\n\nLooks like the hover thing isn't working for the Dark theme?\n. @drw158 in the other apps, all of the icons are the Simplenote blue color (#4895d9) when in the Dark theme. Should we do the same for this app?\n\n. \nLet's darken the text here to the same color as the app bg color?\n. > I can do that next week, or in another PR.\nLet's go ahead and merge this and you can create another PR to clean things up as desired.\n:shipit: \n. The markdown toggle switch in the note info panel should not be shown unless the user has enabled the global switch in the main settings panel.\nThese are the rules we defined for the feature (sorry, should have put this in the original issue)\n- Add a global toggle in settings named something like 'Markdown enabled' \n- Flipping the global toggle enables a markdown switch in note info panel (so individual notes can enable/disable markdown)\n- Existing notes will not have markdown enabled when the global switch is turned on\n- Disabling global toggle will disable markdown editing and preview for all notes,  but note may still have the markdown system tag present. \n. \nLarge images cause horizontal scrolling. Let's max-width: 100%; height: auto; images in the CSS?\n. The body font size in the preview feels a bit small to me. Will that also use the font size setting?\n. Code looks good. @drw158 I wonder if you might want to contribute some CSS to this branch to clean up how the markdown preview looks?\n. Awesome :)\n:shipit: \n. I also saw another bug. In this branch it appears that the list view titles don't ever get updated if a note changes content or if a new note is created in another app.\n. After merging w/ master, this is working well. I had to make sure to clear out all local caching of the app to get it working with the new indexes that were added. :shipit: \n. I committed a few fixes for this. Still another bug: it doesn't print long notes, seems to clip them at one page.\n. Closing this, will add details to #17\n. :shipit: \n. It appears to make everything larger for me, like it makes the icons bigger too. I think we only want it to update the font size in the editor and markdown preview (not the list view). I'll defer to @drw158 on that though.\nAlso, the default font size seems too small to me.\n. Note: I fixed this PR to have the desired behavior. Ready for another review!\n. I don't see any padding in the editor at smaller resolutions:\n\n. :shipit:\n. Gonna merge this one for now. We can do style cleanups in other PRs.\n. :shipit: \n. Merging based on approval from @drw158 \n. oops, they work. Didn't realize you needed to type the enter key ;)\n. > This isn't a blocker, but I just saw the ActionMap and wondering how useful it is as an abstraction. Do you happen to know if we use it in more places than this settings file?\nI think it's used a few more places... should we just move the methods up to the parent?\n. Looks good :shipit: \n. > @roundhill I didn't see any code to specify these - are they automatically used by Electron?\nYou specify the icon when you use electron-packager. I need to make a small change for Linux (just realized). One more commit coming.\n. Looks good, I like the new external link arrow you added.\n. Thanks @dmsnell I cleaned it up and fixed the logic for checking for the eventNames.\n. @dmsnell added in 5b8ea2dbaf01602614f279bf625fb92833d15e10. Thanks for the tip!\n. Hmm, we could use preventDefault() which wouldn't allow any clicks to happen. But then stuff you mentioned like setting the editor active would no longer work. We could special-case some of those too, if we desire such things to happen.\n. > Using preventDefault() sounds like a good place to start. The only helpful exception that I can think of right now is clicking on the text editor.\nI discovered pointer-events: none which seems to do the trick. Give it a try.\n. I think character count is handy for some users (a lot of Simplenote users are students), but I agree that creation date isn't that useful and we should remove it.\n. I think I like it. It's just a bit weird to see different fonts after seeing Source Sans Pro for so long.\nI tried it out in Windows 7 and Ubuntu and it looked good. I think the default fonts are actually easier to read that Source Sans Pro anyways.\nSomething to noodle on: Users have been asking for the option to change the font for quite a while... especially for a monospace one. Maybe we could offer then a few font options in the settings in a future update.\n. > 3 font options on all platforms:\nI imagined something like that myself, let's add that later when we can do it for all of the apps. For now I think we can :shipit: \n. :shipit: \n. Just saw a bug: It seems as if the modified date gets stuck or actually saved to the revision object. You can actually see it not changing in the video I linked to.\n. @dmsnell Thanks for the great feedback, I made most of the suggested improvements. Please take another look at your convenience!\n. @dmsnell incorporated a lot of your feedback in 8f4aba6c3cf96ecadc9c96576d0533e2e74ffe7b. I still had to have the empty string check there, because the node editor would focus when you opened the tag drawer.\n. :shipit: \n. :shipit: \n. @drw158 give the latest a try. The mobile experience you described was kind of tough to implement. The tags will not show for longer notes until you get to the bottom, then they kinda pop into place. I wish the animation could be nicer there, but not quite sure how to do it.\n. :ship: \n. This is a toughie, I think it has to do with the shuffling around of the flex parameters and with how we animate the in/out of the note editor.\n. > Does this only work in packaged apps?\nYeah, see the first sentence of the PR ;)\n. :shipit: \n. Cool, @dmsnell or @rodrigoi can you have a peek at the code please? No rush\n. Great, thanks Dennis!\n. :shipit: \n. Thanks @drw158, I fixed up those opacity values.\n\nAn edge case.\n\nAgreed, I filed a separate issue here: #171\n. Fixed in #170 \n. No reason, really. I just googled for a React date formatter that I could use since it appeared that formatting dates in plain js was a pain in the bootie. It's what I came across, and seemed simple enough to use.\n. > @roundhill it's probably worth a good look at moment then!\nIt does look way better :) We can use moment.unix() and avoid creating the Date object altogether. Thanks for the suggestion!\n. I should have mentioned that I caused this in #164. We need to leave that solution in though...\n. @dmsnell OK good to know I am on the right track. I will try out the new component like you suggested.\n. @dmsnell Seems to work great with a few tweaks (mainly needed to pass the props through as well as the state because of how Simperium is implemented). I also changed up the syntax a bit to match the other components. Ready for another look!\n. > { ...this.state, ...this.props }\nHrm, tried it and it errors out with Unexpected token\n. I think this might be a lot of work ;) I'll look into it though.\n. It's supposed to launch at 1024 width.\n. Just confirmed this with @drw158. We need to either:\n- Delete the C:\\Users\\(user)\\AppData\\Roaming\\Simplenote folder when the app is uninstalled.\n- Somehow know when the app is starting up for the first time, and intentionally delete the existing auth token that is stored in localStorage.\n. I've just tried this with Slack, if you delete the app and install it again you are still signed in. \nI don't see an immediate solution for this, so I guess I'm thinking that if Slack can't solve it maybe we shouldn't worry about this for now. Thoughts?\n. @drw158 Sounds good, I updated it to be 370x520 minimum.\n. > Interesting piece of code.\nMindblown?\n. Working great :ship: \n. Beauty, :shipit: \n. I disabled it in one my PRs already. \n. Nice. :shipit: \n. Nice, I like the smaller font size. :shipit: \n. :shipit: \n. Lint is complaining: \n/components/spinner.jsx:\n  87:2  warning  Mixed spaces and tabs  no-mixed-spaces-and-tabs\n  88:2  warning  Mixed spaces and tabs  no-mixed-spaces-and-tabs\n  89:2  warning  Mixed spaces and tabs  no-mixed-spaces-and-tabs\n  90:2  warning  Mixed spaces and tabs  no-mixed-spaces-and-tabs\n. The spinner looks great :+1: \n. :shipit: \n. Nice, confirmed fixed :shipit: \n. :ship: \n. Seeing some strange behavior with this branch. If I make a change, I see the app reload but the change isn't applied. If I save the file again or refresh the browser, then I see it.\n. This fix unfortunately was causing performance issues for my account that has hundreds of notes in it. Like we discussed, let's just un-bold the list title for now and cross our fingers that Electron updates chromium to the version with the emoji fix soon.\n. :shipit: \n. :shipit: \n. Looks good :shipit: \n. Just tried this out with my account (a few hundred notes), and it didn't seem to work in Firefox. Clicks on the notes list stopped working as well, so I'm wondering if it is taking too much to process the array...\nSome log stuffs:\n``\n\"Warning: Each child in an array or iterator should have a unique \"key\" prop. Check the render method ofProxyComponent`. See https://fb.me/react-warning-keys for more information.\" app.js line 799 > eval:45:9\nWarning: Failed propType: Required prop key was not specified in ProxyComponent. Check the render method of ProxyComponent. app.js line 799 > eval:45:9\nTypeError: event.srcElement is undefined\n app.js line 3289 > eval:79:1\n``\n. Alas, I am still seeing the same behavior in Firefox :cry: It does seem to be working well in Electron, though.\n. I just noticed that in the web app we show the icon if a note is bothpublishedandshared` with another user. Should we mirror that in this app?\n. > Cry.\n\ud83d\ude22 I wonder if was something we added recently, this wasn't reported earlier...\n. Besides discovering #466, this looks good :shipit: . This is so cool ;) I made a windows build ok, but linux is giving me an error. I'm probably missing something?\n```\nError: Command failed: fpm --version 1.0.0 --license \"GPLv2\" --name \"simplenote\" --description \"Simplenote for Linux\" --vendor \"Automattic, Inc.\" --maintainer \"Simplenote Support support@simplenote.com\" --url \"https://simplenote.com/\" -s dir -t deb --force --package ./release/simplenote-1.0.0.deb -C release/tmp ./\nat checkExecSyncError (child_process.js:464:13)\nat Object.execSync (child_process.js:504:13)\nat Object.<anonymous> (/Users/dan/git/simplenote-electron/resources/build-scripts/package-linux.js:53:4)\nat Module._compile (module.js:413:34)\nat Object.Module._extensions..js (module.js:422:10)\nat Module.load (module.js:357:32)\nat Function.Module._load (module.js:314:12)\nat Function.Module.runMain (module.js:447:10)\nat startup (node.js:140:18)\nat node.js:1001:3\n\nmake: *** [package-linux] Error 1\n``\n. Thanks, that worked. I was missinggnu-tar`. \n:shipit: \n. Nice, :shipit: \n. Maybe we could add a query arg that would only show the account related stuff there?\nhttps://app.simplenote.com/settings?filter=account or something...\n. Added the new shorter p url, has space now:\n\n. @dmsnell I simplified it a bit more in https://github.com/Automattic/simplenote-electron/pull/242/commits/aaa38d876915d2d5ac968691d190969019b1505b. It's still a big line. The null is needed I think because it is used as the value of an <input>, and will display the text false if it is a boolean.\n. > Please try and keep the PRs shorter next time.\nPlease review my PRs faster then :)\n. Sounds like a :bug: to me\n. It appears that we are writing to the IndexedDB way too often, after every editor change:\nhttps://github.com/Automattic/simplenote-electron/blob/master/lib/flux/app-state.js#L480\n. Looks good, I only tested on OS X though. @rodrigoi were you able to test on linux/windows?\n. Cool, I think we're good to go once the test stuff is removed and it is pointed to production.\n. - [x] Bug: if you start typing, then close the browser or quit the app you will lose those changes.\n. @dmsnell Ready for another look. Got debounce working and its flush method helped the code be a lot simpler!\n. I am, and huge thanks for the assistance once again!\n. > How about cmd F or shift cmd F for search.\nMakes sense!\n. @dmsnell / @rodrigoi updated and squashed. Cheers\n. > just do it @roundhill\n\n. Strangely, when I do make package-win32 on my machine and install it, I don't seem to have this issue.\nI uploaded a windows installer here, so you guys can compare: https://github.com/Automattic/simplenote-electron/releases/download/v1.0.0-rc.1/Simplenote-1.0.0-rc.1-Setup-dan.exe\ncc @drw158 @rodrigoi \n. Confirmed fixed #253 :shipit: \n. A wild mystery 0 has appeared!\n\n. The note info toggles don't appear to be updating when clicked:\n1. Open the note info panel\n2. Click on 'Pin' or 'Markdown' toggles\n3. State seems to update but the toggle does not change.\n. Working well. Let's :shipit: \n. +1 from me to have new notes have markdown enabled if the global was switched.\nIn hindsight, I think we probably don't need to worry about users seeing the markdown toggle even when they don't know what markdown is. I wonder if maybe we should remove the global toggle and always show the toggle in note info? Maybe we could add a setting to always set new notes as markdown enabled as well.\n. I like your plan Dave but it is a problem not to have the toggle in order to set the markdown flag, which is a per-note thing in the back end. This way the markdown formatting persists across apps and also renders the published note in markdown if it were flagged as so.\nI think with this in mind, we should leave the individual toggle but have all notes created be markdown enabled if the previous note had it enabled. This way we could get rid of the global setting.\n. > Noting here that we'd just need to add user-select: all; on the preview element.\nEasy PR then :) Let's do it!\n. > The app would update by itself\nIt will prompt you when there is an update available!\n. Closed via #283\n. You might want to check with your system administrator for access to https://api.simperium.com, maybe it's not allowed through your proxy?. Is 73MB of memory extreme these days anyways?\n. Do you know that you can download a .zip archive from the web app at https://app.simplenote.com?\n. > Do you remember if we landed on a good solution?\nI think we decided to not do a button (we're running out of space), but instead put this as an 'Editor only' option in the View menu.. And a keyboard shortcut for it would be awesome \ud83d\udc4d . I think we should probably just add support for registering an account directly in the app. The mobile apps currently support that.\n. I'm not sure if we should add this. Do other desktop apps have such a feature? Seems like most people these days add passwords to their desktops/laptops.\n. Nice, :shipit: \n. > Making linter to fail in these cases\nYes, that would be good. Thanks for fixing that.\n. :shipit: \n. Fixed via #649 . What if you right-click the installer and run as administrator?\n. This was fixed somewhere along the way ;). :shipit: \n. We're already using marked, so I think we just need to enable the gfm option \ud83d\udc4d \n. Simperium ref: https://github.com/Simperium/node-simperium/pull/36\n. Hmm, I can reproduce using OS X but not on Windows or Linux... still investigating.\n. @rodrigoi I enlisted the help of master @beaucollins to fix the duplication weirdness you were seeing. New simperium version published and ready for another look!\n. @rodrigoi trashing syncs for me \u00af(\u30c4)/\u00af\n. I was able to reproduce. You cool with filing a separate issue for that? I don't think it's related to the Simperium change.\n. @rodrigoi OS X should be fixed now. Care to give it another look?\n. The stylesheets for this app and the web have been synced up \ud83d\udc4d . We have an issue open for the mac app to add markdown, so closing here.\n. @titoesteves the mac app is currently in a private repo, sorry.\n. > Any plans for an official OSX build of this Electron app?\nWe're trying to decide on that. Replace the native app? Offer two apps? The electron app actually has more features that the native one.\nWhat do y'all think?\n. @randallagordon Try downloading the source, and run make package-osx. Should work...\n. You might be interested in this \ud83d\ude04  https://simplenote.com/2017/02/14/try-the-new-macos-beta/. @stevegray it's a different version number based on the Electron app. Sorry for any confusion there.. @ericsoco we added Markdown to the native Mac app a few months ago:\nhttps://simplenote.com/2018/02/20/markdown-support-added-in-latest-macos-app-update/. This is pretty challenging because we are using a <textarea> element in the electron app. Open to suggestions :)\n. It works! I'm pretty sure I tried this before, maybe an update to WebKit between then and now added support:\n\nI'll create a PR for this at the end of the week.\n. We are planning to open source the other apps, once we get them cleaned up and ready for OSS.\n. An Android app update is coming soon with Markdown support.\nAnd this is also a dupe of #330 \n. It is a + icon in the app, unless I'm missing something:\n\n. Screenshot didn't come through, is it an android tablet? This repo is for the electron app (windows and Linux). The android app will get the + icon in an update soon.\n. Closing since I'm pretty sure you were referring to the Android app, which now has the same icon.\n. Isn't this the same as filtering by the tag name when you click on it in the left sidebar?\n. > we really have lots of work to do with the actions and stores here, don't we?\nIt'd be nice if node-simperium had its own store for stuff like the username/email.\n. Can you please reach out to support at https://simplenote.com/contact-us? They can help with your .zip issue.\n. This is actually a design implementation, in order to make text of notes more readable. It looks weird with that text though because there's no long lines that wrap in that note.\n. > Just a bit wider at large widths (1920px+)\nI'm thinking I'll try this out with a PR. It's the easiest of your options :). Here's an attempt with a break at 1366px, it changes the max width to 1280px:\nhttps://cloudup.com/c8hgWsGM1hE. Hmm, works for me. Are you using version 1.0.2 of the Linux app?\n. I'm still unable to reproduce this, unfortunately. Are your windows/linux devices using a proxy at all? Any other details you can provide, especially clear repro steps would be helpful!\n. > Can the developers provide any info how to capture any useful diagnostics? Logs/command line flags, etc.\nHere's a build that will show the developer tools, if you don't mind running it with it open. When you notice the issue, have a look at the console window and let us know if you see anything interesting in there:\nWindows: https://cloudup.com/files/iGgHkFjgdzK/download\nLinux: https://cloudup.com/cQJFwwnPkAC\n. The Connected debug line does tell us a lot. That means that the websocket connection was established successfully, so I think we can rule out connectivity and/or authorization.\n. We've fixed up a few issues related to sync, here's a beta of the next release: https://github.com/Automattic/simplenote-electron/releases/tag/v1.0.4. Let us know how it works for you.\n. > @dmsnell, @roundhill any pro-tips on how to enable more verbose dev debugging in the Electron app?\nYup, you can enable them by uncommenting this line: https://github.com/Automattic/simplenote-electron/blob/master/desktop/app.js#L50\n. I think this comment is the biggest clue here. He was able to create notes from the electron app, and they sync fine. But the issue is that it does not appear to be requesting the changes from simperium when it reconnects in some cases.\n. Seems ok, I packaged it up fine along with #358. Shall we merge both?\nI do notice a few deprecation errors that we should fix sometime.\n. I revisited this and tried renaming the parent folder to have a space in it, and it built just fine \ud83d\udc4d. Going to close this for now, haven't seen other reports and we have the native macOS app up to par w/ electron.. What's this mean exactly?\n. We'd love help with translations, but unfortunately the app isn't currently set up to support other languages. We'll get back to you ;)\n. Is this meant for https://github.com/automattic/wp-desktop?\n. We don't have any plans to open source the current web app, as we'd like to replace it eventually with this app.\nHere's a version running on our app engine host. You can try it out at your own risk! https://electron-dot-simple-note-hrd.appspot.com/\n. > anything in particular stopping you from replacing the web app with this?\nI think just lots of testing! A lot of the users rely on the web app every day, so we'll want to make sure it's rock solid, or offer both web apps in a non-confusing way.\n. You probably haven't added a simperium app key to config.js: https://github.com/Automattic/simplenote-electron/blob/master/README.md\n. Yes, please! I think I tried contenteditable for a while but it gave me problems which of course I don't recall. Go for it!\n. Maybe, I think we'd need to test our desktop app packager to see if it works with node 6. cc @rodrigoi \n. :shipit: \n. > @roundhill it appears to work for me, can you give more detail?\nNevermind :) I was looking at the web app because I had no config file...\n. > if you don't have a config file and open the development version of this repo served by webpack you end up being redirected to app.simplenote.com (open it in chrome)\nWe should probably just kill that for now, have it default to the react app...\n. The cursor on the editor should be a text select cursor, on this branch it is showing the mouse arrow cursor.\n. > @roundhill fixed\nNice, this looks good to :shipit: from my side\n. > @roundhill is this ready for review?\n@dmsnell yes, added the label. Thanks!\n. > Will we be leaving any place to adjust it after this?\nSorry for ay confusion, but what I did was repurpose that boolean. It now is set whenever any note sets the individual markdown toggle. This is how the app knows whether or not to have markdown enabled or not when a new note is created.\nYou can see it being set here: https://github.com/Automattic/simplenote-electron/blob/7fd5f61170d0ad4ca58410a0fd260285217e015d/lib/app.jsx#L212-L220\n. And also, whether that boolean is set or not, all notes will now show the checkbox in the note info panel.\n. Haven't seen any recent reports of .deb issues, closing this one.. Thanks for the feedback! Please use search to see if issues have already been filed. If it hasn't been filed yet, feel free to file one separately. \nSince a lot of these are duplicates I'm going to close this.\n. I don't think we intentionally added anything for regexp specifically, so I'm a go to merge this.\n. Here's a build of the next release of the app, that may resolve some sync issues. Give it a try and let us know if you see any improvements or not: https://github.com/Automattic/simplenote-electron/releases/tag/v1.0.4\n. Thanks @nfcampos, I updated it.\n. I was thinking... maybe one way to band-aid fix this issue for now would be to force an index call to Simperium everytime the app starts (currently it does this only after signing in). I'm 70% confident it would fix the bug, but doesn't isolate the cause.. We were finally able to reproduce the bug and have implemented a fix. I created some beta builds for y'all to try out to ensure that it does indeed fix the issue. Let us know!\nYou can download the beta here: https://github.com/Automattic/simplenote-electron/releases/tag/v1.0.7. You may need to sign out/in again to get older notes synced, but it should work fine after that.. > \u4e16\u306e\u4e2d\u3092\u3000\u6182\u3057\u3068\u3084\u3055\u3057\u3068\u3000\u304a\u3082\u3078\u3069\u3082\u3000\u98db\u3073\u7acb\u3061\u304b\u306d\u3064\u3000\u9ce5\u306b\u3057\u3042\u3089\u306d\u3070 > should show 7 I think, but definitely more than 5\nIt shows a count of 5 for me when I pasted this text in. The other counts all seemed good though.\n. > @roundhill should we merge this?\n:shipit: \n. > Tab usually autocompletes the word for this type of thing\nCan we have the tab keypress also add the tag? Currently it autocompletes, but you still need to press enter to actually add it.. Working great now, thanks for this cool feature @dmsnell!\n:shipit:. LGTM :shipit: \n. Looks ok as a band-aid for now :shipit: \n. :shipit: \n. LGTM :shipit: \n. @dmsnell @nfcampos It's hard to tell where this one left off. Is it waiting on changes?. Merging for now, but we did find one bug to be fixed in a follow-up PR:\nIf you type a space and then a - or *, the autocomplete fails to add a new bullet when you press enter.. \ud83d\udc4d \n. It works fine for indenting with the cursor on its own, but I noticed that nothing happens when text is selected. There's inconsistent behavior in the other apps as well:\nNative macOS app: Deletes the highlighted text when tab is pressed.\napp.simplenote.com: Adds a tab at the beginning of the line when tab is pressed on highlighted text.\nWhich behavior do we want here? I think I expected the text to be deleted.\n. > Alright, so the consensus is, when text is selected, and the user hits tab, replace the selected text with a tab character?\n\nand when text is selected and the user hits shift-tab do nothing?\n\nYes, let's go with that!\n. Looks great, thanks for your work on this @nfcampos! :shipit: \n. :shipit: \n. The app captures some anonymous statistics to help us improve the app. We don't currently have an option to turn it off, so I agree that an adding opt-out is a good idea. \n. I don't think we need to clutter up the UI with something like this, when you can just restore the note from the trash if you accidentally delete it, like @dmsnell described.\n. @dmsnell sure, let's :shipit: \n. Did those keys previously scroll to the top/bottom of the editor?\ncc @nfcampos \n. > I don't have PgUp / PgDown keys on my keyboard (i'm on a mac)\nI'll have a look, I have a keyboard with these keys.\n. I logged out and saw this error:\n\n. > I logged out and saw this error:\nAlso, that was after checking out the branch, running webpack and electron . so maybe something was stuck after the update?\n. Also, seeing this warning in the console:\nsimplenote-electron/lib/app.jsx\n  207:4  warning  \"resetAuth\" is already declared in the upper scope      no-shadow\n  208:4  warning  \"setAuthorized\" is already declared in the upper scope  no-shadow\n  211:9  warning  \"isAuthorized\" is already declared in the upper scope   no-shadow\n  476:4  warning  \"authIsPending\" is already declared in the upper scope  no-shadow\n  477:4  warning  \"isAuthorized\" is already declared in the upper scope   no-shadow\n. Seems good now, feel free to :shipit:. It'd be nice if those warnings went away but not critical.\n. Awesome, this works great. Thanks again for the PR @arshsingh . Nice: :shipit:\n. :shipit: \n. My initial thought after trying it out is that I think we should match the styles for the editor to how it looks in the markdown preview. That way when you move back and forth between the editor and preview, the transition won't be as jarring. You should just see the markdown syntax disappear.\n. > The user could change to a monospace font, and the Preview would remain as the system font.\nWoah: \n\n. > @roundhill is that a good woah or a bad woah?\nI'm not sure, I think I kind of like it with the monospace font. What do you think @drw158, should we add it as an option?. @dmsnell We could probably do the same for the navigation drawer too\n. > We could probably do the same for the navigation drawer too\nI added that in 63192bb\n. The Android app's accountless UI was an experiment to see how valuable it was to users. I think it has proved to be useful by a very small minority.\n. And I'll add that there were quite a few bugs related to that feature, I'd have to try and remember what those gotchas were before we attempt something like this.\n. :shipit:. Sometimes it can take a while for the note to publish. If you return to this note now is it published?\n. > @roundhill I just noticed this issue when addressing #228. I'm not sure when it creeped in or why.\noh, I see. Thanks for the additional info!\n. This was fixed via https://github.com/Automattic/simplenote-electron/pull/749. Interesting idea! Should be fairly easy to build this and try it out.\n. We removed this setting in the latest release. The markdown switch is in the info panel of each note.\n. Let's wrap this one into https://github.com/Automattic/simplenote-electron/issues/734, sounds similar.. Tried it out, everything seems hunky-dory. :shipit: . LGTM :shipit: . Nice, :shipit: . Thanks for the report! We're investigating now.. Closing here, will link to it from a new issue over at https://github.com/automattic/simplenote-android. #1337 - Sync like a boss. You could, you know, update the app ;)\nOr perhaps you are receiving the update erroneously? If you're on the latest version you shouldn't be prompted.. The latest update only prompts when you launch the app, so in a way we've fixed this, but you would need to update the app.... > source JSON included in 9c0380c\nNice, I like that we've included the json too. How did Export Notes look in the menu?\n. > not terrible, but still a bit odd to me. what do you think? I think it's okay.\nI'm cool with it \ud83d\udc4d \nReady to :shipit: IMO!. OK, I'm going to merge this for now and we can do another PR for the login form full-page drag if @drw158 is interested.. I wonder if we could do the print stylesheet better, currently we have to remember to add new things to hide to the styles as we add them. We've forgotten a lot :). Pretty sure this is fixed, but we haven't released the update with the fix yet.. Strange! Do you have the app open on any other devices?. @gubrist Is the note shared with another Simplenote user? Just trying to see if we can nail down what's causing that.. Working well. One thing I noticed: If I start a new note and type a * and then enter, it gets deleted. Do you think someone would ever want just a star at the top of their note?. > but for what it's worth, the Mac app exhibits the same behavior\nFair enough! :shipit: . > To test, pack versions for Windows, macOS and linux. Executable versions should weight around 130mb, and dmg, tar and exe should weight around 45mb.\nConfirmed that this is the case :shipit:. Let's :shipit:. > search input is fatter\nOh, I had to move the padding around to make space for the X. Should be easy to fix. Here's some tweaks to the height. I think it's still actually a pixel or two larger than how it was, though.\n\n. > I noticed a bold white outline around the search box\nCan I get a screenshot of that @dmsnell? Was that in a specific browser?. > @roundhill this is running inside of Electron\nAh, forgot about the dark theme! Fixed in dd7fa98. OK, I'll merge. I sort of received a thumbs up on the design over slack last week.. Markdown tables are looking much better with the new stylesheet, closing this for now.. \ud83d\udea2 . Nice sleuthing on this one!. I think this is the same-ish bug? Just noticed if you add a second line for a note, the list doesn't update the height for that row:\n\n. > @roundhill I noticed this too but when I tested it the rows finally updated after we saved the content. there was a noticeable delay but it did pop in. I believe that this is the delay we find in queueSaveNote()\nCool, that was actually from master. I tried it out in this branch and it is fixed \ud83d\udc4d. Is there more to fix here?. Yay, working well now! :shipit: . Everything seems happy again. Grip it and :shipit: . I've tested this out a bit, and was able to reproduce on 1.0.7, but I'm not certain how I got it in that state. A build of master has yet to show this behavior for me. So maybe it's already fixed, or is quite rare?. > One correction, we don't hide the email tags on MacOS, only on iOS. Not sure about Android.\nAndroid shows the emails in the tags, which I prefer. Any thoughts on what the standard should be @drw158?. Thanks @hoverduck! Picking this up, looks like an easy fix.. Looks good, thanks for the PR :shipit: . I think this should be fixed via #682, but it requires that you delete any tags you created in this app previously.\nI was able to auto-complete a tag:\n * Create a new tag on a note.\n * Switch to another note and start to type the name of the tag, then press the tab key. It added the tag and saved.. So cool! On Chrome I can't seem to actually click the tick box. I can click the text and then it checks it off ok.. I'd like this as well. The native macOS app will let you press the delete key to trash the note (when the editor is not active). Hi @ekohilas! If you are still curious about the lost note feel free to reach out to our support team here: https://simplenote.com/contact. If they do indeed find a bug we will open another issue here.. Resolved by #640 . @hoverduck found a way to reproduce this one:\n\nAnd as a more fun version of that bug, if you have an empty note selected, type a character in the search, then type it in the title field\u2026then click on the body of the note, it will get caught in a loop pasting that search in repeatedly\n\n\n. This was fixed in 1.1.0. Awesome stuff @dmsnell. Some copy edits:\n```\nWelcome to Simplenote!\nTo create a new note, click on the new note button.\nTo search your notes, type in the search bar and enter any text. Simplenote will show you matching results instantly.\nGot a really important note? Open the note info bar and press the 'Pin to top' button to pin it to the top of the list.\nUse tags to help organize your notes. Look for the tag bar at the bottom of the note editor.\nDeleted notes go in the trash. You can restore them if you want, or empty the trash to get rid of them forever.\nYou can access your notes on the web and your other devices. Go to https://app.simplenote.com to get started.\nWe hope you enjoy using Simplenote!\n``. I dug into this a bit, it appears thatisIndexingis alwaystrue` after signing in with the new account here: https://github.com/Automattic/simplenote-electron/blob/36263d094927f2fcdcffc32897aa5d717b8cdbd8/lib/flux/app-state.js#L439-L441\nSo something isn't getting reset properly in the Simperium library, or it's getting confused. Maybe we need to recreate the bucket objects after we sign in again?\nA band-aid solution for this would be to remove the throttling when we are indexing, that would fix the issue but may cause performance problems if a user signs in and has a ton of notes.\ncc @beaucollins for any ideas :)\n. I'm all for this \ud83d\udc4d, creates a nicer UX.. I tested this on macOS, and it does help the launch experience to look/feel better. There's not much of a delay difference with this patch, it feels like the same launch time for any native macOS app.. Thanks again @secretfork!. Thanks for the PR @natanielcz! This is one of those \"If we add it here, we should add it to the rest of the apps\" things. We do get requests to show the date from users every now and again, so might be worth revisiting. Marking for design review.. Closing due to inactivity.. Just tried this out, very cool! Can we update the regex to match for a space character after #? That would match up the behavior with the native Mac app. So #hashtag would still show the hash but # hashtag would remove it.. New bug :)\nIt seems to not show the second preview line now, when a note is markdown:\n\nIt should show the 'Awesome cool' text in the list for that note.\n. Seems to be working quite well \ud83d\udc4d I did get this warning when attempting to install the .deb:\n\nI think we need to add an email address somewhere: https://lintian.debian.org/tags/maintainer-address-missing.html. We can use support@simplenoteapp.com for that.\n. > @roundhill which app did you use to install this deb? I can't reproduce that issue.\nI used whatever the default Ubuntu installer is, is that Ubuntu Software Center? Sorry, I'm not much of a linux person :). My VM is actually on an older version of Ubuntu (15), maybe it's not an issue in newer releases?. OK, I will update it and let you know if I see the same error.. > OK, I will update it and let you know if I see the same error.\nNo error on 17.10 \ud83d\udc4d \nCan you remove the projectDir argument that @rodrigoi mentioned? It doesn't appear to be needed, unless I'm missing something. It prevents me from building on macOS without removing it.. I think this is good to go. I've tested the builds and they work great.. Did you turn off your computer really quickly? The app auto saves after you stop typing for a few seconds.. Thanks all!. > Probably something deeper, but you may have seen the behavior where after logging in no notes appear until the new note button is clicked. That's something I think probably needs to be addressed before the release.\nThat's what I fixed in node-simperium, are you still seeing that behavior on this branch?. > but I didn't rm -rf node_modules && npm install so maybe I had the old node-simperium library in there\nAh yes, I should have put that in the instructions. Should work better after you npm install. Sort of got it resolved in Slack, I'm going to merge this and keep testing :). > did you consider the work in #650 for this @roundhill?\nI did not, but it can still be applicable. My main goal was fixing the Windows build.. > It didn't seem obvious that new-window could come from user-input code though, rather only from our own code. Is that right?\nHmm I can't quite tell either. Do you know how the markdown parser handles links? I would guess that it would pick up on those links as well and run them through this code.. I created https://github.com/Automattic/simplenote-electron/issues/665 to have a look at the markdown links.\nGoing to merge this one for now so we can get the app-created links working again.. > Why was this problematic, @roundhill?\nThe app would install to a different folder, and you'd have two instances of the app on windoze. . And also testers on 32 bit windows would get an error in the installer that the app required 64 bit!. > Have we only so far produced 32bit builds?\nThat's my understanding, yup. Not sure about advantages we'd get with 64 bit, other than that I really liked Super Mario 64.. > easy time splitting off early (up in or around app.jsx)\nI could probably fake it with a few divs. \ud83e\udd14 I thought it would be nice to keep the editor toolbar at the top with the dividers, but I can certainly fake that too :). @dmsnell I got it working mainly in app.jsx. The only tradeoff was that you don't see the toolbar buttons at all now, but I think it works.\n\n. - [x] Bug: You can't drag the placeholder toolbar to reposition the app when in electron.. > The alignment of the header is off when running inside the electron chrome.\nThanks @rodrigoi I updated it for the macOS version in \n31bbdb2. Fixed in 1.1.1!. You're right, it's only designed to serve the .deb. Cool idea to do a user agent check, might be possible.. Thanks @Jackymancs4! I think it looks great. Any thoughts @drw158?. > Design looks good!\nThanks for reviewing!\n\nMaybe a little lighter? Not sure.\n\nI think it looks great, @Jackymancs4! Thanks again for the PR.\n. Hmm it works ok for me using that syntax @nagpai. The entire url links correctly. Any other examples?. > Looks like they put in a monumental amount of effort to choose the perfect writing font.\nNice, let's give it a try.. Here's a screen with iA Writer Duospace. Looks nice!\n\nWe will need to include another license file to use it, but it seems compatible with our current license.. > It looks great! We will need to check language support.\nDo you know of a good way to test that?. We're still not quite there with deciding on different font support across the apps, going to close this for now but we can keep the branch for the future once we're ready to go.. Did you create a new test account for the dev version? When you build the app yourself you are using a different app id than the production version, so it will do weird things if you are using a production Simplenote account.. This would be a great place to sync up on the styling of the editor for the live highlighting. We should standardize the coloring and styles for things like headers and block quotes. All for @drw158 I suppose :)\nI have a similar branch for the native Mac app here: https://github.com/Automattic/simplenote-macos/tree/add/markdown. Here's a little styling proposal for the live markdown editor (this is from the native app):\n\nI was thinking it'd be good to not do any coloring at all, except for some grays for quotes and inline code. Keep it Simple :) Let us know what you think @drw158 . > opposed to changing the size of the headers and sizes in general\nThat's ok with me, but IMHO the large headers feel weird when you are editing.\n\nLet's see those CSS color values!\n\nLink/Image: https://github.com/Automattic/simplenote-electron/blob/master/scss/variables.scss#L2\nQuote/code (light theme, maybe dark too?): https://github.com/Automattic/simplenote-electron/blob/master/scss/variables.scss#L9\n. > opposed to changing the size of the headers and sizes in general\nOh, do you mean to not have them be a different size at all? Keep them the same size as the body? I'm cool with that. Can we still do the trick where the first line is larger though?. > not changing the font size for the # Headers.\nWhat if we made the headers Bold?. @dmsnell is it cool if I add some CSS updates? I'd like to:\n\nStyle the scrollbar to match the notes list scrollbar\nFix scrollbar positioning/padding\nMake the first line of text always larger. I've added a few fixes, but man it's a bit hacky to get it all working right.\n\nThere's still a few issues:\n\n[ ] Monaco rearranges the divs for the content on the fly in no particular order, so I think it might be impossible to make the first line always larger?\n[ ] I can't seem to click to put the cursor anywhere but the very end of the last line.\n[ ] The scrollbar margins seem difficult to move around to match the notes list.\n[ ] There is vertical scrolling for notes that are small and shouldn't show any scrollbars.. > I'm not sure I follow - what are you trying to do? Set a specific cursor position programmatically? If so, check out modifyPosition on the editor model\n\nIn Safari I can't click to place the cursor anywhere in the last line of a note, unless it is the very end of the line. I think it may have been because of some CSS margin hacks I added...\nEdit: here's a gif:\n\n. > but we can add a custom range and have more control\nI tried adding the range w/o much luck, could you have a go at adding it @dmsnell? I think we're pretty close to getting this looking good.. Glad it worked! Maybe you already created an account in the past?. @dmsnell this used to work, but appears to have broken. Mind taking a peek?. Oh, I bet this broke because we don't allow html tags in the preview now, they get escaped.. Closing, I think you meant this for https://github.com/automattic/simplenote-android and it looks like these features have already been requested there.. Let's merge this one with #708 . @dmsnell would you mind \ud83d\udc40 this one?. Thanks, I simplified it like you suggested \ud83c\udf2e . I'd like to move forward with merging this, as we're going to ship the same icon/UX in the macOS app. If we decide to change how the preview is displayed/dismissed like in #677, we can then do it in both apps for consistency \ud83d\udc4d . The minimize button works fine for me after a quick test. And the close button is usually expected to quit an app, isn't it?. Noticed that I said Signing out in the screenshots, it should be Logging out. Corrected in \n7492903. One other thing to note, the iOS and macOS PRs also check for notes with queued changes that haven't synced yet. I haven't dug into whether or not we can do that with node-simperium for this PR .. > One other thing to note, the iOS and macOS PRs also check for notes with queued changes that haven't synced yet.\n@beaucollins helped me get a check for this added to node-simperium as well \ud83d\udc4d It now also checks for queued local changes.\n@dmsnell could you have a look a this one at your convenience? \ud83d\ude4f . Here's what I think is going on:\nWhen we reach this code, Simperium has already merged whatever it got from the server with whatever was saved locally (so basically anything but the current 2 second autosave content). So the loadNotes call at line 440 should be ok, I think. \nIt then moves on to check if there was anything in the currently active editor that may need to be merged, which is why it uses the object in the state because that gets updated on every keypress in the editor, I believe?\n\nif this patch is helping then I'm all for it, though I think it's just brushing the surface.\n\nYes, this is a band-aid, but I think could help a scenario we recently received where two users were working on a shared note would often lose content. It fixes two things:\n\nChanges applied twice to an active note in the editor when coming back online and receiving changes from the server.\nThe editor was not updating with the new note content after receiving changes in the same scenario as #1.. OK, sounds good. The conversation doesn't have to stop here! It'll be interesting to see how this impacts the number of reports we get about sync issues.. I'm working on getting it in the Windows App Store, which I think we need to convert to appx for. I've followed this guide and it seems to work fine:\n\nhttps://electronjs.org/docs/tutorial/windows-store-guide. > Alright, awesome. ETA?\nUnknown, but I'd love to have it out this month.. Pretty awesome, although I just learned Promise and now need to learn await? I can't keep up with javascript! :). Closing due to inactivity.. Thanks @dmsnell! :shipit: . This is awesome! I did find one createClass remaining here: https://github.com/Automattic/simplenote-electron/blob/6b8dc3c2d97c56473454bd67c38691cdeb74e7a0/lib/list.jsx#L3\nAlso, there's some conflicts now \ud83e\udd37\u200d\u2642\ufe0f . OK awesome! :shipit: . Just tried this out, thanks for the fix @Jackymancs4. We are indeed allowing any input with a type=\"checkbox\" now. I'm wondering if we could limit it to only allow if it is within a <li> element? Otherwise I can add it in note content and it gets rendered:\n\nThere's also a small conflict with package.json now. If we can fix those two things then I think we can :shipit:.. > Could your forked-patch apply to the upstream project?\nWe should also see about this, or maybe put the fork in one of our repos.. @Jackymancs4 still interested in finishing this? @dmsnell's updates to the html sanitizer should make it work easily now.. Closing due to inactivity.. I wonder if we actually would want to disable it by default \ud83e\udd14. That way if the app is built for some other purpose it wouldn't bother with the prompts (like mentioned in #707). We'd still want to build a Windows app with the updater enabled to be offered as a download for Windows 7/8 on Simplenote.com. But not for the .appx, which I think we need to either add support for in the build process or just run it manually when we want to submit the update to the Windows Store.. Sure @rodrigoi if you want to have a go at that I'd appreciate it! I'm thinking of adding an additional step when building the win32 app that will also create an .appx package.. This is irrelevant now. Nice, I think we're good to go here. :shipit: . I updated the deb build, can you test it again and see if it installs @justinkterry? It is at the same link here: \nhttps://github.com/Automattic/simplenote-electron/releases/download/v1.1.3/Simplenote-linux-1.1.3.deb. Assuming this is working now, closing.. Hmm, I just tested it on vanilla Ubuntu 17 and it worked fine. Seems as though it works for some and not for others.. Ah ok, thanks Justin. @natanielcz is there some way we can include/install it in the package?. > \"depends\": [\"gconf2\"]\nThis worked \ud83d\udc4d I submitted a PR for that change and updated the current .deb download for v1.1.3\nhttps://github.com/Automattic/simplenote-electron/pull/751. :shipit:\nThanks for the contribution!. In my testing, clicking the link opened up the page in my browser so I think it's working as expected.. Whoops, this is for the native macOS app. Closing!. Thanks for the report. We pushed a fix to the published page, is it looking better for you now?. Merging identically 'labeled' tags sounds good to me. I think internally what we are calling 'label' here is the 'name' property.\nI assume we have this issue on all of the apps?. It's a very similar icon to what macOS/iOS uses for sharing. Sharing icons are one of those things that changes across platforms \ud83e\udd37\u200d\u2642\ufe0f . > Did you create actual release builds after this update from a fresh clone of the repo?\nGood call to test that. It is probably unrelated to the electron update but there's an error with the new isemail lib we are using:\nERROR in app.js from UglifyJs\nUnexpected token name \u00abi\u00bb, expected punc \u00ab;\u00bb [../node_modules/isemail/lib/index.js:121,0][app.js:21300,13]. > It is probably unrelated to the electron update but there's an error with the new isemail lib we are using:\nLooks like we need to update webpack to fix that. I'll do that in a follow-up PR.. Is there a way to have the menu show up if you hover near it? I tested on windows and there was no menu at all, the only way to show it was by pressing the alt key which I think the average user won't be able to discover easily.. Instead of a setting, can we show the menu at launch and then you can press alt to hide it if desired?. @mariosant I think we're close. Instead of adding a setting, I think @natanielcz was suggesting that we could just store a boolean of the last state of the menu, hidden or not.\nIt can be added to settings state so that it persists between launches:\nhttps://github.com/Automattic/simplenote-electron/tree/master/lib/state/settings\nLet me know if you need any help with that.. Sure @mariosant go ahead and add a similar option to the view menu \ud83d\udc4d . @mariosant any chance you can finish this PR up? It's gone stale.. I just noticed that this was attempted before: https://github.com/Automattic/simplenote-electron/pull/559. It was removed because setting that flag hid the menu by default.\nShould we just remove the menu item and map the toggle to the alt key to fit in better across the platforms?. We could have the MenuItem there still, but tied to the Alt key with a visible property set to false?\nhttps://github.com/electron/electron/blob/master/docs/api/menu-item.md. Closing due to inactivity.. > we no longer need to pass params: { note },\nGood call @rodrigoi! Removed those params in 91d6afb. Thanks @rodrigoi!. @dmsnell I got it working \ud83c\udf89\n\nTurns out a context-menu in electron provides a misspelled work if there is one beneath where it was called. \nI am having a problem with the node-spellchecker lib though, it is a native module and I'm not able to figure out how to package the app while building the .node file for the windows or linux platforms from macOS. We might have to build and package from windows and linux itself?. @dmsnell Ready for a review here as well. I was \ud83e\udd14, should we also add a menu option to disable spellcheck? I'd imagine some users would not want it.. @adlk mentioned that this library may be better to use: https://github.com/electron-userland/electron-spellchecker\nWe could also just use that lib for copy/paste/undo commands in the right-click menu, but we'd want to ensure that you can still copy the markdown preview content via right-click as well.. Closing in favor of #821 . > The issue occurs when my disk runs out of memory.\n\nIf the disk is full, simplenote won't open.\nIf the disk becomes full while simplenote is open, you can't open a new note when navigating back to the notes page when one is already open.\nI wasn't able to record what happens when you try to edit a note while the disk is full.\n\nWe can't do much about that :) Going to close this one.. @dmsnell any other thoughts on this one? \ud83d\ude2c. > Why are we storing the WP token? We don't seem to be using here in this PR at least\u2026can we take that out? is it used for any purpose somewhere else?\nThe plan is to use it for integrations in the near future. This is the first step to get us there.. Thanks for the suggestions @dmsnell! I committed some updates that I hope you'll find satisfactory.. Thanks @dmsnell!\n\nAny final concerns you want me to review or look for?\n\nFeeling good about this one \ud83d\udc4d . Moved this issue to the web app repo.. Moved to https://github.com/Automattic/simplenote-android/issues/538. Thanks for looking @dmsnell. This was still buggy after some testing, I have found a much better solution which is just a few lines of code. Going to abandon this one and create a new one.. Thanks @dmsnell, went ahead and removed the Apps row since we were in agreement on that.. Thanks @mdrovdahl! Merge away.. You need to whitelist:\nhttps://api.simperium.com\nhttps://auth.simperium.com. Tested and working fine. (ignoring the CI stuff for now) :shipit: . > The tests are still failing though (#802).\nCan confirm that they are broken for me. Can't remember the last time I ran the tests, there weren't that many IIRC.\nBut, this looks good :shipit: . We're adding server builds soon which should standardize the naming \ud83d\udc4d \ncc @adlk . Had one thought, but looks good :shipit: It's really great that we don't need the global electron any longer!. :shipit: . LGTM \ud83d\udc4d \n\n. \ud83d\ude0e :shipit: . I've tested all of the builds from the server, and everything is looking good from my side. :shipit: I'll let @mirka make the final call!. Looks good, tested and the context-menu still worked. :shipit: . :shipit: Nice fix.. Looks good, and tests pass \ud83d\udc4d :shipit: . Tested this, didn't see any issues with the CSS. :shipit: . Note: The bucket to use is now preferences, with a boolean field named analytics_enabled. Correct me if I'm wrong @jleandroperez :). > make package-win32 (on Mac) is ending in an error:\nI see this as well, but it looks like it is when it is attempting to make the .appx, which only works from Windows. Maybe we could skip the .appx build if not running the script from Windows @adlk?. Oops missed that this was WIP!. Still approved once the code conflicts are taken care of :shipit: . Thanks @ManoelLobo!. Yesterday we fixed this for notes shared to the web. Did you use the publish to web option while testing? Looks like you published it to WordPress.. The padding for the app drawer is a bit off now:\nBefore:\n\nAfter:\n\n. Same for the Settings button when running in browser:\n\n. When I emptied the trash on this branch, the Empty trash button strangely snapped up to the No Notes placeholder:\n\n. Everything seems great now! :shipit: . I found a bug:\n\nLaunch in electron.\nResize to the compact size.\nEnable focus mode (with the list view showing)\nThe screen goes blank:\n\n\n. The native app shows a little spinner in the toolbar while it is indexing, it usually goes away in a second or two, but it is good to see that it's working on something :). \n\ud83d\udc4d \nBut, I see a change to the integrity package:\n\"tslib\": {\n       \"version\": \"1.9.3\",\n       \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-1.9.3.tgz\",\n-      \"integrity\": \"sha1-1+TdeSRdhUKMTX5IIqeZF5VMooY=\"\n+      \"integrity\": \"sha512-4krF8scpejhaOgqzBEcGM7yDIEfi0/8+8zDRZhNZZ2kjmHJ4hv3zCbQWxoJGz1iw5U0Jl0nma13xzHXcncMavQ==\"\n     },\n. > Does the issue persist after rm -rf node_modules/\nThat took care of it! :shipit: . Looking pretty good, I sent a few fixes via Slack. Also, we need to see if the iOS/macOS apps can get fixed from sending 1/0 instead of true/false. If it can't get fixed we'll need to set 0/1 from all of the other clients instead of a boolean :(\nRef: https://github.com/Automattic/simplenote-ios/pull/228#issuecomment-422970461. Everything seemed to work OK for me until I tried the production testing. The app never updated on macOS. I got the prompt but the update didn't appear to install.\n@adlk How can I get access to an AppVeyor build to test on Windows?. > * Works as long as the app is in the Applications folder.\nAh this must have been my issue, I had it in a subfolder in Applications because I already had the native macOS app there.. We should style the checkboxes as well, those look like chrome default?. I'm afraid it doesn't look possible at the moment: https://github.com/electron/electron/issues/9456. I think I like it. Do you think it'd be too weird to only show the icon when focus mode is enabled? There's a lot of buttons at the top with this addition and I'm wondering if it is too much clutter.. OK, how about we roll with this for now and we'll iterate on it later?. > @roundhill Oh yes I forgot to mention, I've opted to deal with the selectedNoteId redundancy as a separate issue (#883), if that's ok. It's being used in several places, and I was afraid there might be ramifications that are not immediately apparent \ud83d\ude2c\nAh, ok. :shipit: then!. Do you have a way to reproduce this consistently? It'd really help us isolate the issue!. I think this may only happen on macOS, we have some special drag listeners for the way it renders the toolbar.. > Probably not, because navigator.appVersion.indexOf('Win') would still match people using the web app on Windows.\nMmm good point.. Yes, a is better there thanks!\nAha I found it: https://github.com/Automattic/simplenote-electron/blob/master/package.json#L3. We should nuke that whole line and put an actual marketing summary there, not sure who wrote that.\n. @adlk do we still need this?. > * We also need to add the tags to the tagBucket.\nGood call!. > How about we add some tag to indicate which import the notes came from? even if we leave it as a user-facing tag the customer could remove them if they wanted.\nHmm. How about we add a systemTag for that? Then it wouldn't be user facing.. ToDo:\n- [x] Via #938, we should import the markdown property to the systemTags if present.. > CoreImporter is actually not dealing with JSON at all\nOh yeah, lol! I think I can change importNotes of CoreImporter to handle a File, in the same way the other importers do it. It'd take the file and load the file in as a string to JSON.parse(). Could be some memory issues with that, but Simplenote exports should be relatively small files for most users.. I'm good!. Is there anything unique about the notes that aren't showing up in Linux? Did you check the trash?. Thanks @marianoju! Are you giving it a bit of time to sync all of the notes before you download the export file? A thousand notes might take a while to sync up.. Hi, can you please reach out to our support team at https://simplenote.com/contact-us? They can help troubleshoot your issue.. Maybe @popey would have some idea on this issue? The snap is managed over at https://github.com/snapcrafters/simplenote. > It looks like the errors currently emitted in the two importers are all of the former kind. Shall I just assume for this iteration that I won\u2019t receive errors of the latter kind?\nI can add some note-level errors, should I send the event name as error-note or something?. > * Have the import() method take an options object as a second argument. To start, I think the markdown option is a must\nWould the markdown option set every imported note to have the markdown systemTag then?. import = filesArray => {\nThis looks pretty weird to me due to import being so common in js :) How about the standard method name is importNotes?. > Would the markdown option set every imported note to have the markdown systemTag then?\nok you can pass an options object in now to the constructor, like:\nconst textFileImporter = new TextFileImporter({\n        noteBucket: this.props.noteBucket,\n        tagBucket: this.props.tagBucket,\n        options: { isTrashed: true, isMarkdown: true },\n      });\nIt will then override those properties for all notes in the import.. I think we may want to see if the title of the file is contained in the text. I have an export from apple notes that puts the title of the note in the file title, but not in the content:\n\ud83d\ude18Breakfast.txt\nIf the title isn't the first part of the content, we should use it as the title.. > If the title isn't the first part of the content, we should use it as the title.\nAdded via 876c7be082edb754c21ff7dc8f358a9689d1825b. \nThoughts on this being labeled Import Notes? Might help clarify what it is for easier...\n\nShould error messages be colored red, or some other way to get the user's attention that something went awry?. I think I may have hit a race condition, maybe that last note issue that we should resolve with a promise? I tried the same import again and it worked fine so the results are different each time:\n\nEvenso, the progress bar should probably adjust to be full width if there were some notes that weren't imported.. > I think I may have hit a race condition, maybe that last note issue that we should resolve with a promise? I tried the same import again and it worked fine so the results are different each time:\nActually this was happening because I had text files with titles but no content, so they were skipped.  See https://github.com/Automattic/simplenote-electron/pull/952#issuecomment-434007000. > * Dropzone errors: I'm not too keen on introducing red here because it seems like a serious mistake happened. How about something like this?\n\ud83d\udc4d . \ud83c\udf89 . One sort-of-related thing that's a little weird is when you tab into the note editor and it locks you in to tabbing the text inside of it, there's no way to get out of that as far as I can see.. I don't think we really have the resources to support end users via Slack, but a developer community sounds like a good idea. What do you think @mirka?. > * Is the class name good?\nIt WFM \ud83d\udc4d . This will need to be based on master now that we've merged the core importer.. I also tried an import while offline, and then connecting up again. It synced up in the same way and I could see the idle reviver working \ud83d\udc4d . And congrats on #1000! \ud83c\udf89 . I've tested:\n\n[x] Linux\n[x] Mac\n[x] Windows (will get to it tomorrow!). All 3 platforms now tested :shipit: . Good idea! You can sort of do this via Sign in with WordPress.com, because it supports Sign in with Google. But then you also get a WordPress account ;) . I'm not sure I'm testing this correctly, but I'm running make dev-server NODE_ENV=production, and I see that app.js is 632kb in the dist folder. Is there a way to test it w/ gzip as well?. But overall the app seems to still be looking/working fine \ud83d\udc4d . > Oh, I should've put that in the PR description too! I tried a few bundle analyzers and I'm enjoying webpack-bundle-analyzer. This is how I've been doing it:\n\nNice, thanks! webpack-bundle-analyzer says that app.js is 179.78 KB for me. Which I guess isn't the same buy good that it is even lower :)\n. @adlk can we close this PR?. > but none of my tests seemed to record the event in tracks.. maybe because it isn't a production build\nIt eventually showed up! Confirmed fixed :shipit: . Hmm it ran ok during our internal testing... do y'all see anything interesting in the console? You can access it at Help -> Advanced -> Debugging Console and then click on the Console tab.. Thanks @henriiquecampos, that's some serious lag there! I'm wondering if it is something in your notes, do you have any notes that are really large? I'm also curious if it helps if you disable the spell checker in the Edit menu?. Would one of you mind creating another Simplenote account and see if it has the same lag issue? Just trying to isolate if it is something with your notes or if it is something else.. I think I'm on to something here. Do y'all have a lot of Markdown notes?. Would one of you mind testing this Windows build?\nhttps://ci.appveyor.com/api/buildjobs/ptjvuhvjwo7wrr73/artifacts/release%2FSimplenote-win-1.3.3.exe\nIt should fix the issue. Looks like a module we used to strip Markdown caused the lag.. \ud83d\ude0e We'll get this fix out in the 1.3.4 update, probably Monday or Tuesday.. @henriiquecampos we think we found a nice workaround for the bug that still allows the markdown to be stripped from the notes list, could you test one more build to be sure that it works well for you?\nhttps://ci.appveyor.com/api/buildjobs/yrpuw3qsi7c8wbq0/artifacts/release%2FSimplenote-win-1.3.3.exe. Great idea! Should we actually display something in the UI? A dev mode ribbon or something?. This is already fixed in the next release (1.3.2)\nSee #999 . @mirka any more thoughts on this?. > Dark theme \u2014 The grays used for .dialog-tabs-button and .settings-group p text need to be lightened. (Currently at contrast ratio 2.95)\nOK I've added some fixes for those in ea7d690\n\n. Hi @igorkulman, a build server misconfiguration caused an issue with the app we submitted to the Windows Store. We've submitted an update to Microsoft for certification, but it isn't approved yet.\nYou can download a working update from here in the meantime: https://github.com/Automattic/simplenote-electron/releases/tag/v1.3.0\nOur apologies!. > The success criteria for IE11 is \"is it usable\", rather than \"does it look the same as in other browsers\".\nLove it ;). Hi @Ymetro we released a 1.3.1 update that should fix this issue. Can you check for it in the Windows Store?. Can you try signing out and in again?. > Let's merge this revert for now, and I'll try submitting a fix for the cache problem and maybe a workaround for the remove-markdown bug.\nOK \ud83d\udc4d . Sounds like this could related to this issue in node-simperium: https://github.com/Simperium/node-simperium/issues/68. > The render() in NoteList is being called twice for every click in the editor (!), which seems very strange and is something we should look into...\n\ud83d\ude31 https://github.com/Automattic/simplenote-electron/issues/1079. Waiting for AppVeyor to rebuild this one \ud83d\udd65 . For a bit on Windows 7, I got this message:\n\nAfter maybe 10 seconds, it did download the update though \ud83e\udd14 Let me know if you can reproduce that.. > This may happen if the GitHub API call flaked out on the user-initiated check, but succeeded on the check that happens automatically on application launch. In this case, you would not have seen a download progress window \u2014 just a dialog that says an update is ready to be installed.\nAh ok \ud83d\udc4d . > It would be nice if we could redirect straight to the app engine page on logout without briefly landing on the React login page. Do you want to leave that to a separate issue?\nI'll try and fix that here!. > I'll try and fix that here!\nI updated it so that the Auth component doesn't render when we run from the web. I think this should work well, but I'm slightly concerned that a user still might get to the point where it tries to load the component and the user sees only a blank screen. But from my testing it has worked well.\nApp has been updated at https://web-dot-simple-note-hrd.appspot.com/new. > I was going to add logic for this, but turns out we don't need any because:\n\n\nThe local queues are persisted when the user closes/navigates away, so only empty local queues will be persisted if a user is logged out.\nThe local queue data is removed from localStorage immediately after it's been read into memory.\n\n\nI see! :shipit: . As discussed in Slack, let's set MAX_REQUESTS_PER_SEC to 50.. Filed https://github.com/Simperium/node-simperium/issues/70 for our friend node-simperium.. It'd be nice if the \"top bun\" and \"bottom bun\" aligned with the top and bottom of the other icons in the toolbar. If not possible, maybe just push it down a few more pixels so that it is centered vertically?\n\n. > It'd be nice if the \"top bun\" and \"bottom bun\" aligned with the top and bottom of the other icons in the toolbar. If not possible, maybe just push it down a few more pixels so that it is centered vertically?\nNoticed that it is perfectly aligned with the search box though \ud83e\udd14. Maybe we need to adjust the position of the search box as well... > except for the New Note icon which seems to be optically adjusted to account for the protruding plus sign.\nI think that was the issue. I found that bumping down the search field by one pixel aligned everything nicely:\n\nI pushed the fix, let me know if you like it. . Mutual :shipit: achieved!. > Looks like it simply fell through the cracks in the original PR?\nThat's my guess! :shipit: . The cursor jumps next to the checkbox when clicked, would it be possible to preserve the current cursor position?\n\n. At very large font sizes, the checkboxes start to look off-center:\n\n. > This will make the caret go away instead of preserving the position, but HTML-wise this is probably more correct. Do you think that\u2019s ok?\nSounds good.. > We're going to need to update Electron to fix that, so it probably won't make it into our next release. Hopefully the next one, though.\nOK \ud83d\udc4d . > @roundhill Did we change anything on the App Engine side that could be causing this?\nYes :) I've fixed it for the old web app, still looking for a good solution for the new app as well.. Ahhh, it is only happening on Chrome on macOS for me. Good to see that it's ok in Electron.. I can't reproduce this now on Chrome 72.0.3626.81. Will reopen if I see it again.. Copied it over to #1170. Not sure if this is the right PR to report this, but I noticed that an extra space is hanging around if you press enter on an empty checklist item and it gets removed:\n\n. Pretty sure there's a bug with this where characters get duplicated, I can't reproduce this in master:\n\nUsing Hiragana input, type tab and then kanji.\nPress enter.\nThe phrase is repeated twice, and pressing backspace doesn't work as expected:\n\n\n. > Thoughts?\nI agree, duplicated content is better than a WSOD. And we'll have it really fixed soon enough with the electron update. :shipit: . Not sure, have you tried installing it without admin privileges?. This was actually intentional to match up with the correct Markdown syntax and to be compatible with the other Simplenote apps. To enforce a new line, add two spaces at the end of the line. \nSee #1169. I tested this out and am not seeing the cursor jump any longer \ud83d\udc4d \nBut, I've found that I can get a crash. It's probably not a normal use case though :) It also may be unrelated to this PR. If you type really fast on a line and keep selecting the text you just typed with the mouse, it'll eventually crash.\nhttps://cloudup.com/co8U9-Abcgn\n```\nUncaught DOMException: Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.\n    at removeChild (webpack-internal:///../node_modules/react-dom/cjs/react-dom.development.js:1891:413)\n    at unmountHostComponents (webpack-internal:///../node_modules/react-dom/cjs/react-dom.development.js:3142:91)\n    at commitDeletion (webpack-internal:///../node_modules/react-dom/cjs/react-dom.development.js:3151:1)\n    at commitAllHostEffects (webpack-internal:///../node_modules/react-dom/cjs/react-dom.development.js:3272:177)\n    at HTMLUnknownElement.callCallback (webpack-internal:///../node_modules/react-dom/cjs/react-dom.development.js:66:102)\n    at Object.invokeGuardedCallbackDev (webpack-internal:///../node_modules/react-dom/cjs/react-dom.development.js:86:45)\n    at invokeGuardedCallback (webpack-internal:///../node_modules/react-dom/cjs/react-dom.development.js:102:126)\n    at commitRoot (webpack-internal:///../node_modules/react-dom/cjs/react-dom.development.js:3294:118)\n    at completeRoot (webpack-internal:///../node_modules/react-dom/cjs/react-dom.development.js:3624:60)\n    at performWorkOnRoot (webpack-internal:///../node_modules/react-dom/cjs/react-dom.development.js:3605:1)\nremoveChild @ react-dom.development.js?f8c1:8703\nunmountHostComponents @ react-dom.development.js?f8c1:16470\ncommitDeletion @ react-dom.development.js?f8c1:16519\ncommitAllHostEffects @ react-dom.development.js?f8c1:17202\ncallCallback @ react-dom.development.js?f8c1:145\ninvokeGuardedCallbackDev @ react-dom.development.js?f8c1:198\ninvokeGuardedCallback @ react-dom.development.js?f8c1:253\ncommitRoot @ react-dom.development.js?f8c1:17417\ncompleteRoot @ react-dom.development.js?f8c1:18909\nperformWorkOnRoot @ react-dom.development.js?f8c1:18841\nperformWork @ react-dom.development.js?f8c1:18729\nperformSyncWork @ react-dom.development.js?f8c1:18712\ninteractiveUpdates$1 @ react-dom.development.js?f8c1:18979\ninteractiveUpdates @ react-dom.development.js?f8c1:2162\ndispatchInteractiveEvent @ react-dom.development.js?f8c1:4872\n5react-dom.development.js?f8c1:15749 The above error occurred in the  component:\n    in div (created by DraftEditorContents)\n    in div (created by DraftEditorContents)\n    in DraftEditorContents (created by DraftEditor)\n    in div (created by DraftEditor)\n    in div (created by DraftEditor)\n    in div (created by DraftEditor)\n    in DraftEditor (created by NoteContentEditor)\n    in div (created by NoteContentEditor)\n    in NoteContentEditor (created by NoteDetail)\n    in div (created by NoteDetail)\n    in div (created by NoteDetail)\n    in div (created by NoteDetail)\n    in NoteDetail (created by Connect(NoteDetail))\n    in Connect(NoteDetail) (created by NoteEditor)\n    in div (created by NoteEditor)\n    in NoteEditor (created by Connect(NoteEditor))\n    in Connect(NoteEditor) (created by AppLayout)\n    in div (created by AppLayout)\n    in Suspense (created by AppLayout)\n    in div (created by AppLayout)\n    in AppLayout (created by App)\n    in div (created by App)\n    in div (created by App)\n    in App (created by Connect(App))\n    in Connect(App) (created by BrowserShell)\n    in BrowserShell\n    in Provider\nConsider adding an error boundary to your tree to customize error handling behavior.\nVisit https://fb.me/react-error-boundaries to learn more about error boundaries.\nlogCapturedError @ react-dom.development.js?f8c1:15749\nlogError @ react-dom.development.js?f8c1:15749\nupdate.callback @ react-dom.development.js?f8c1:16645\ncallCallback @ react-dom.development.js?f8c1:11154\ncommitUpdateEffects @ react-dom.development.js?f8c1:11191\ncommitUpdateQueue @ react-dom.development.js?f8c1:11191\ncommitLifeCycles @ react-dom.development.js?f8c1:15991\ncommitAllLifeCycles @ react-dom.development.js?f8c1:17202\ncallCallback @ react-dom.development.js?f8c1:145\ninvokeGuardedCallbackDev @ react-dom.development.js?f8c1:198\ninvokeGuardedCallback @ react-dom.development.js?f8c1:253\ncommitRoot @ react-dom.development.js?f8c1:17452\ncompleteRoot @ react-dom.development.js?f8c1:18909\nperformWorkOnRoot @ react-dom.development.js?f8c1:18841\nperformWork @ react-dom.development.js?f8c1:18729\nperformSyncWork @ react-dom.development.js?f8c1:18712\ninteractiveUpdates$1 @ react-dom.development.js?f8c1:18979\ninteractiveUpdates @ react-dom.development.js?f8c1:2162\ndispatchInteractiveEvent @ react-dom.development.js?f8c1:4872\n```. > * Start searching for a note, and the editor will continue showing the initially selected note even when the query doesn't match it anymore.\nThis always bugged me, yay!. +1 for implementing the Automattic style checks.\n. Might want to check the performance here with a lot of notes. Maybe we can use a web worker for stuff like this?\nYou also need to do a similar loop when renaming a tag, the existing notes that had the old tag name should be updated to use the new name. Sorry ;)\n. Nit: Our spacing standards would have this be more compact:\nif (whatever) {\n    blah();\n} else {\n   blahBlah();\n}\n. How about adding some constants for the systemTag names? They reoccur a few times in the code for markdown and pinned\n. Wow, marked makes it really easy!\n. The pill buttons look great :+1: \n. :heart: flexbox!\n. Hmm it must be there for a reason... I tried removing the closure but the app become unresponsive, like it is stuck in a loop.\n. :+1: makes sense, added in https://github.com/Automattic/simplenote-electron/commit/7e2c773addbf319e8b5fb0f02e716e69b72cdcac\n. I'm not sure, I just nabbed it from Calypso.\n. Also a copied file, we could update and submit a PR back to calypso I guess ;)\n. > also is this supposed to be an or || instead of an &&?\nYes :)\n\nES6 strings have a new prototype function includes()\n\n:+1: \n. > lodash\nThat's cool! I haven't used lodash much yet. I also just noticed #120 so I'm thinking of making a helper function for this so we can easily call it from multiple places.\n. > Using the export syntax of ES6 has some benefits for the compiler and testing\nThat's better, thanks. Added in 900bfac373b47a7eab844d44c5a4a39da32d1ed2\n. I tried this out, needed to move the init() call to after state is defined.\nBut in the console I'm getting this: TypeError: 'open' called on an object that does not implement interface Window. Any thoughts on that?\n. > we might have to be more creative there\nNice, got it working with a few tweaks in de6ba65\n. I get how that can be useful!\n. That's pretty rad. I will try this out! :bow: \n. Maybe delete these commented out lines?\n. Ahhh yes :+1: \n. I guess I was thinking that it'd be better for the notes array to be already filtered at the moment render() is called.\n. No reason! We can do that for sure.\n. \"If the selection is at the end, use the string Latest instead of the revision's date.\"\n. I actually didn't want it to update the UI any longer, so that's why I changed it.\n. Sorry, not following you here. The noteContent const is used on Line 42 for the string comparison.\n. Cool, thanks for the info. I think my concerns stem from the Android/Native world where you're meant to not do much processing on the main thread that isn't related to UI. So I see a render() method and I think similar thoughts :)\n. > Looking at this, I wonder if the ternary is better still because it shows what's going on more semantically.\nlgtm, I can still grok that.\n. Sure, added in e044cba\n. Oh, meant to mention that I tried using this destructuring method, but revisions was being passed in as null and it seemed to think that was valid and didn't assign the default empty array.\n. Thanks, I ended up just correcting it to the const = function() syntax. I found the destructuring you suggested to be a bit tough to read. Could just be me though :)\n. No reason, dateFormat looked like it had a lot of support as well. I will switch it out for that so we can stay in sync with Calypso tech.\n. Have a look here: https://github.com/Automattic/simplenote-electron/blob/master/lib/note-editor.jsx#L35-L38\nSo sometimes, we may not have a note in the editor and instead it uses that default. If there's no id, we know that this is a blank selection and will avoid selecting the textarea.\n. Sure, how about isValidNote. Would that make it as clear as possible?\n. It used to be guarded as well: https://github.com/Automattic/simplenote-electron/pull/172#discussion-diff-53519383L109\nIs that what you mean?\n. Hmm, I think we actually don't want to show a date at all if there wasn't a valid timestamp provided. No date no service\n. > a valid timestamp is any positive integer no matter how far into the future\nThat's true, I guess I'm trusting Simperium here.\n\nwhen would we get an invalid timestamp?\n\nIf the note editor is blank, state.note will be an empty object and this method will be sent false. \n\nshould we be addressing those places that send bad data here?\n\nWe do have plans to do a better job at handling the UI when there is no note selected, but we decided to get to that later (after the beta) \n\nshould we do things like msg = time ? formatTimestamp( time ) : '' instead?\n\nThis reads better to me than the check on the timestamp. I like that it always returns a string.\n. Whoopsie! \ud83d\ude09\n. It does look a lot better now. Thanks for the help cleaning it up!\n. Beautimous :+1: \n. > There's no need for this here, let's move this into the static area of the module and just call it as isElectron()\nOK, updated!\n. > If you like this idea I would be up for trying to make it a PR\nWow that's really cool! If you want to have a try that'd be great.\n. > Don't we already have a function defined to tell us whether or not we are in electron?\nOh yes, I forgot. That's in #197 but hasn't been approved yet (hint hint)\n. pick looks handy. Another point for lodash.\n. I gave debounce a try but it didn't do the trick for me. It would delay the first execution, but then all of the rest of the queued calls to the functions would fire after the 3 second delay. Is that what maxWait can help with?\n. :+1: \n. :+1: Nice, I missed that it had prevProps.\n. This was my attempt to save the note content before a change happens, or if the user switches notes. So if you start typing, then immediately switch notes before the timer fires.\nI will test that server change scenario, I think there might be content loss in that case!\n. Yeah, even though it's cool these days to not do that, I was matching it up with the rest of the class ;)\n. > // looks kinda ugly, but somewhere something is going to be ugly anyway \u00af(\u30c4)/\u00af\n\nvalue={ publishURL && publishURL }\n\nlol! I guess that looks better...\n. > Iteration 1 - make a simple function, maybe the best option here\nI went with this, created a function.\n. No, sorry if I wasn't clear. If you look at the newNote action, it requires that the bucket object gets passed to it. These appCommands usually call the action methods directly which is why I added this case.\n. First off, thanks for the PR! This makes sense to me to add. Not your fault, but would you mind adding a semicolon to the previous line? I know it's not needed but it looks off with the new import you added.\n. Just reviewing this now, sorry it took so long! I think x is more commonly used in Exit. \n. Great, let's :shipit: \n. There's missing spaces in the parens here and the line after this one.\n. Nit: My editor informs me that there's some extra spaces here.\n. Did you forget to commit this folder/file?\n. Cheers, I didn't realize that process was provided by Electron. Also updated to use matchesProperty \ud83d\udc4d . > I hope that you tested this since I didn't.\nYes, I did test it. In the web version on OS X the check fails and the styles aren't applied. \ud83d\udc4d . My editor informs me that this is never used.. \ud83c\udf86 . Maybe add exportToZip() here in the README as well.. One of the things users complain about with the current zip export is that it uses the id as the file name. If there's a way that we can use the note's first line, that'd be cool. What we need to watch out for is notes with the same first line so we don't overwrite the file!. Also users have requested that the tags be in the exported file as well. Maybe just at the bottom of the file? \nTags: ToDo, Shopping. Should we just delete this commented out code, or do you think it will still be needed?. > I thought about adding them as hashtag strings\nI like that \ud83d\udc4d . > grab the first N-characters of content -> third line of note maybe.txt\nI like that options vs. untitled. How about Export Notes?. If we are using hashtags, I would prefer that they are just listed one each per line with out the -:\n```\nTags:\ntodo\nshopping\n```\nThoughts? I'm actually backtracking a bit now on using the hash because we don't use it anywhere else in the apps or website.. > I wonder if we should comma-separate them\nSounds good \ud83d\udc4d . Oh! I think I misunderstood what it was for. I thought you needed it if doing local state. Will update.. Would you mind throwing a semicolon at the end here? Just want to try to match the coding style with the rest of the file.. @secretfork cool if you don't mind updating to that one last time I will merge this!. Might be nice to use tag instead of x here for easier code readability?. For reference, here's how we do it in the macOS app with a string replace:\nhttps://github.com/Automattic/simplenote-macos/blob/develop/Simplenote/NSString%2BCondensing.m#L60\nBut I think the regex is fine too.. I hate to be the 'semicolon person', but could you please add one here ;). cool, I'll correct that.. WFM!. missing a semicolon here.. also a semicolon missing here.. one more semicolon spot ;). Yeah it doesn't make much sense after you rename a tag. But it is indeed how the other apps are doing it: https://github.com/Automattic/simplenote-macos/blob/develop/Simplenote/TagListViewController.m#L237. I removed it in c6b0f8e. The tags list appears to update fine after adding the tag so I don't think it's needed.. Nice! Updated in b3e2d2bfbac66fdbc93f3256d213d333db8aa923. Unfortunately it doesn't look like you can use fat arrow functions to support this.. I see! Could have sworn I tried that... anyways it works great.. Whoops, I had an if there that didn't belong. Callbacks are silly.. Hmm ok, I think I indeed want Promise.all then. If we ever see a version of zero we should stop and show the warning. Otherwise, keep checking.. Updated in 5324686. Nice catch!. I've learned a lot about Promise via this PR! :). This is now unused and can be deleted.. I noticed that my malicious note would be rendered quickly when printing (if markdown was disabled for the note), maybe we should always pass this through renderNoteToHtml for safety's sake?. How about mailto links? The markdown for that is typically:\n[emailme](mailto:dennis@raddude.com). I noticed that checkboxes render with bullets, I think we should remove those so they look more like GitHub:\n\n. ok \ud83d\udc4d . I think the dot notation access works in addition to setItem for localStorage. This localStorage object is actually how node-simperium keeps the user token.\nI copy pasta'd from this line: https://github.com/Automattic/simplenote-electron/pull/764/files/f5283df47cd25ef89b9e35816787df0b8372b38f#diff-f041a427c603cb2a78907c18cf90d341L156. We can use setItem for both lines if you'd prefer?. Ah, for sure let's do the recommended way. Updated in \nbde3059. > this is more or less about style and so not a blocker but I think in cases where we are checking a list of possible values it can be helpful to use a switch consistently to follow the logic\u2026\nI'm cool with that, and would look nicer if we want to check additional error codes in the future.. Yeah I guess I double-fixed the issue. I can probably just remove this, but I was trying to disable clicks on the print div.. That sounds better, I also wasn't a fan of returning true early there.. All set via cdd0d06. Added some comments in 92b1fde. Thanks @dmsnell!. The linter picked up a few things: you should use a strict not equal here, and add a space to match the style guidelines:\nprocess.platform !== 'darwin' && process.platform !== 'linux'. Would you mind updating these Urls to use https?. It'd be nice if we could just do npm run electron --devtools but I guess the other -- is required?. Should we pin the exact version instead of adding the wildcard? I think that's the recommended way to do it so we don't get unexpected results.. Let's delete this!. And delete this! \ud83d\udc4d . I think we may want to consider only showing the context menu for the editor div. I'm seeing spell check on the login, tag, search, etc inputs.. I wonder how you localize these... \ud83e\udd14 . Don't think it really matters, but you could have made this a boolean setting since it's sort of a toggle vs. storing a string. But this will future-proof it in case we add another option in the future!. Here's some wildcarded dependencies again. Maybe ok for a dev dependency?. I can learn something here :) I'm not too familiar with all of the lodash functions, but I can see that it is taking the dialogs and running them all through makeDialog(), and then what happens after that?. Ahhh yes I see that this was existing code now that was copied ever. Yeah Dennis does some cool stuff \ud83d\ude0e . Yay!. Good idea to move the placeholder logic here \ud83d\udc4d . This change probably caused this issue: https://github.com/Automattic/simplenote-electron/pull/857#issuecomment-421426835. Can we make this a constant like dbVersion or something so that future devs can grok this better?. Unfortunately we need to check if this is either a boolean or an int value of 0 or 1 because of how iOS saves the boolean value (it won't be fixed in the near future). We can still save it as a boolean (no need for int conversion) because iOS can read the value properly still.. \u2764\ufe0f . What do you think of Check Spelling for the label?. Javascript can be so magical sometimes \u2764\ufe0f . Suggestion: This might be a nice place to use lodash's get method: https://lodash.com/docs/4.17.10#get\nsomething like get(preferences, 'data.analytics_enabled', true)?. Nice! Change looks good \ud83d\udc4d . \ud83d\udc4d \ud83d\ude04 . Nice \ud83d\udc4d . Should we add deleted prop to the export?. The deleted property is required, or else Simperium will reject it.. I think it was executing the function during the test instead of evaluating it for the result. Hope that makes sense :). Also this should be an && not an || \ud83d\ude2c. Will fix! . Nice! Thanks.. Is this better than an if statement here? \ud83e\udd14 . We should always use braces around if statements. (We try to follow the Calypso guidelines where appropriate). Sounds good! Although I have gotten used to our prettier format \ud83e\udd14 . \ud83d\udc4d . I think we usually use underscores to signify a structure difference in sass?\n.dialog-renderer__overlay. suggestion\n  box-shadow: 0 2px 4px 2px rgba($gray-darkest, 0.15);\nI think if we add a 2px spread here it helps the dialog stand out a little bit more along the edges of the dialog, especially in the dark theme:\n\n. suggestion\n    box-shadow: 0 2px 4px 2px rgba(darken($gray, 45%), 0.5);. Thanks ;). Yeah, this is async so I need to find a way to know when we've reached the end.. Added a solution in 2bdc4bfcd9978bb15f310f7d957cb652d4675fad. I'm not in love with it since it may fire early due to the async nature of FileReader, but it will probably suffice.. Oh nice! I haven't worked with Promises before. \ud83d\udc4d . Do you think there'd be any benefit to having an Import more or Start over type button here? \ud83e\udd14 . Totally not important, but I was trying to see if there's a way to reference the root folder here instead of all of the ../. I found this: https://stackoverflow.com/a/41181321. Might be worth exploring in the future.. Might be of interest for us to use Pluralize as we start to implement localization.. Yeah sounds good \ud83d\udc4d . I have a Simplenote export file with 1,600 notes that is just over 2mb. Maybe we should set a 5mb limit? Not sure if you tested it with a large export or not.. Maybe create a constant for these two 500 values?. How about we return the type and the alt text if it is available, instead of one or the other?\n(image/png)\nA picture of a beautiful flower. The cookie is set by app engine when signing in on the web. We could probably have it pass it directly instead of using a cookie? We can probably sort that out in a separate PR.. Good call, I think we were running those functions twice in a row. I removed those and also made use of the onIndex methods in https://github.com/Automattic/simplenote-electron/pull/1022/commits/9d4771835e852b9b86d092de1139dc0f8cc44e45. Created https://github.com/Automattic/simplenote-electron/issues/1026 to sort that out :). #easybutton. Was this intended for this PR? \ud83e\udd14 . Much cleaner!. Ahh, I see. Thanks for the clarification. . Yeah! I've updated it to #808080, which is AA-compliant for the white theme. The same color in the dark theme should now adjust it to be a bit lighter where it is used to #999999 (#808080 isn't AA-compliant against the #1E1E1E bg)\nI also snuck in a fix for the markdown preview with inline code syntax, it was changing the font size and looked a bit odd.. Oh, I must be mistaken about it being compliant. But it is what Apple uses for secondary text:\n\n. Should this const be called selectedNoteTitleAndPreview? It's a little confusing that it is getting the .preview value but is called selectedNoteTitle.. \ud83d\ude2d -ms prefix makes me sad. What's this for? \ud83e\udd14 . Not sure if this is better, but you could do something like calc(2.5 * 1.75em + 16px); to get the exact 'two and a half lines' value. (1.75em is the line height and 16px of top and bottom padding). Yeah it keeps track of that entry point to login the user to the new web app vs. the old one (that's the idea anyways). Should we only worry about persisting the tag and note buckets? Probably doesn't hurt anything to do the preferences one too.. \ud83d\ude0c . Should we move these dialog-column divs to within the panel components? \ud83e\udd14 . Just for fun, what if we called this Simplenotes.zip?. idedText => identifiedText maybe?. Should we include more Markdown characters here like *, -, _ etc?. TIL. Thanks, I also needed to update to use the is-active class in 36ee908. . If it works, it works ;). This is pretty neat! I'll have to look into drafts.js more.. I don't think we want the whitespace matching in this regex, I'm able to add spaces and then add a checkbox:\n\n. nit: how about naming this firstHyphenOffset or firstHyphenLocation?. Oh, ok. The mobile apps enforce them to be at the start of the line. Should we do that here for consistency?. Just wondering, does this have to be a random string? Maybe it could just be the index of the current match?. Let me investigate how hard it'd be to support it on the mobile apps.. OK it should be possible \ud83d\udc4dI'll create PRs for the other apps to support the nested checklists.. Nice \ud83d\udc4d . Are we safe from out of index exceptions here?. One of the smallest regex I've ever seen ;). Where is this icon from? Is it a GridIcon?. I'm also wondering if we should show this icon. It may look like a button to some users that you can click to start a sync?. Is this limit so that the popup doesn't become too tall? What if we put the note titles in a scrollable div?. > One mitigating factor is that the sync icon is only shown when the websocket is connected. So in most situations, a user would only see that sync icon in conjunction with \"All changes synced\" \u2014 thus no reason to click it.\nThat makes sense, let's leave it in then and I'll add it to macOS :). Why did you disable it for the menu button?. ",
    "drw158": "Tags panel:\n\nOn desktop, an Edit button appears when hovering over the tags section:\n\nIt will always be visible on touch devices.\nAfter clicking Edit, you can delete tags (triggers alert explaining that the tag will be removed but not the notes), Reorder tags, and tag name text.\n\nReordering can be done by dragging and dropping using the icon on the right, similar to Simplenote for iOS. This can be done well on desktop, but I haven't seen a smooth implementation on mobile web using a touch device. We might have to resort to up/down arrows to reorder.\nEditing text can be done simply by clicking on the text. No visual changes when the user is editing text.\nThese are in the clickable prototype: https://marvelapp.com/37h8e1g\nExample of tag panel transition:\n\n(as seen here: http://codepen.io/drw158/pen/ZbjeWV)\nIn order to get a smooth transition we should use translate3d.\n. @srgpqt I don't see why not. Let me know if you have any design questions.\n. The idea is that once the sidebar is opened, you can only close the sidebar (by clicking outside), or click on something inside the sidebar. In other words, you cannot toggle the sidebar on/off (similar to the hamburger menu in Google Keep or Google Photos).This applies to both the tag and info sidebars. Because of this, the info sidebar cannot be opened while the tag sidebar is open.\nThis is the solution we've come to, but please share if you have other thoughts on it.\n. Yes, All Notes and Trash would also close the sidebar.\nFor Settings, Help, and About, I'm not exactly sure what should happen. Since Settings and About will be modals/overlays I'm leaning towards keeping the sidebar open if those are clicked. Help would open a browser window.\n. Yep, sorry I didn't put real icons in there :). The icon to the left of the search bar opens the left sidebar. My idea for the icon is a combination of a tag and a list. If that doesn't work will, it will probably be some sort of arrow.\nBy \"toggle on/off\" I meant that it will not be a permanent layout toggle. Once the user opens the tag sidebar, they can either click on an item, or close it by clicking outside. They cannot leave it open permanently.\nJust thought of this: in that respect, it will work very similar to the tag sidebar in the iOS app.\n. Just added history in the clickable prototype (second icon in the action bar): https://marvelapp.com/37h8e1g\nI'm not entirely sure how history works, or what we are able to do, so this is sort of best case scenario I think.\n\nEverything fades out except for the editor it history mode. We don't want users clicking other things during this process.\nEach node on the timeline represents a version. The timeline is scrollable to show more nodes. We could do some smart spacing, for example, if there are greater than 10 versions, then decrease the space between each node. Hovering over a node shows the date and time:\n\nOnce clicked, the Restore button is enabled, and the timeline to the right is faded:\n\nAfter clicking the Restore button, the editor updates to that version, and all versions after than date are deleted (I think).\n. Here is an alternate interaction:\n\nIt's a crude animation, but basically the selected node is always in the middle. Closest example would be the history view in the iOS app.\nThis might work better on touch devices, so that the user doesn't have to tap on each node that they want to view. They can simply swipe left and right.\nOn desktop, maybe they could click and drag or swipe if they have a touchpad? Maybe this design only gets implemented in the native mobile apps?\n. A third design, similar to what @roundhill has done for Android, a little simpler and probably more feasible for v1:\n\n- Slider max-width the same as the content width, in this case 625px.\n- As you slide to the left, the right bar fades a little to a more transparent color.\n- Restore button is disabled unless the slider is not on its start position (all the way to the right).\nIf we can, I think it would be cool to show the date of the version on hover (and change while the user slides):\n\n. > It would be cool to have some sort of wordcount or maybe some other way to indicate how much changed inbetween versions\nThis could be done by changing the size of the nodes, based on how much has changed (big node for a big change).\nTaking everything into account, I think for v1 (goal is by end of the year) maybe we should implement the last design posted (https://github.com/Automattic/simplenote-electron/issues/4#issuecomment-161779886), and possibly adding more detail later.\n. Design can be found here: #56 \n. done #98 \n. \nThis was just added to the prototype: https://marvelapp.com/37h8e1g#8593625?overlay=8573809\nMy idea is that it will be presented as a modal with 3 sections: Account, Display, and Writing.\nCurrently, the only settings planned for syncing across devices are sort type, sort order, and markdown (This is a global markdown setting, the one in the info panel is a per note setting). The rest are per device settings.\nHere is the logic that we came up with for the markdown settings:\n- Add a global toggle in settings named something like 'Markdown enabled' \n- Flipping the global toggle enables a markdown switch in note info panel (so individual notes can enable/disable markdown)\n- Existing notes will not have markdown enabled when the global switch is turned on\n- Disabling global toggle will disable markdown editing and preview for all notes, but noted may still have the markdown system tag present.\nEditing account info in the app vs. only on the site\nI don't see any reason not to allow editing of account info in this app, especially since it may replace the web app. Apps like Rdio allow editing passwords and such in the Mac app. Although, it seems that \"traditional\" apps don't allow account editing \u2014 they leave that for the website to handle.\nI'll need to design the account editing if we go the in-app route.\n. Alternative idea to the modal:\nThe modal is necessary if we replaced the web app, but opening a separate Electron window for settings might make it feel more native:\n\n. True. I don't think we need to style it to look native to the platform, but probably just use what I've designed above (my first comment), and wrap it in a separate window.\n. I was thinking we could keep the overall font setting in the system menu bar (for example Slack):\n\nOn the web, it would be up to the browser.\nOn Android, the font setting in the app changes the font size of the list + editor.\nOn iOS, there are no app font settings.\n. Yes, I think so.\nFor the web, I'm not sure what we could do. In order to remember the font size, I suppose we would have to add a setting within the app. I'm ok with just leaving the font size up to the browser though.\n. done #99 \n. Not sure how much we'll be able to tap into the native OS share options, but here's an idea if we are limited to web.\n\nThe button would open up the email application and start a new message.\nWe could do SMS, but I'm not sure how useful that would be.\nMaybe we could do 3rd party apps like Dropbox, but then the user would have to authenticate first.\n. https://github.com/electron/electron/issues/6330\nFor enabling share menu. Modal:\n\n. Design can be found here: #56\n. The design that I posted in #56 would be triggered by a share icon in the note editor:\n\nThe other solution, which might be more feasible for v1, is what Dan posted in the original post. The user would just know to add an email to the tags field in order to collaborate with that person. The gray popup shown in Dan's screenshot would be triggered at some point during the NUX when a user focuses on the tags field in the note editor. I'm not sure what logic the Mac app uses to determine when to show it though. Maybe @jleandroperez would know.\nJorge, do know know when the Mac app shows this popup? Is it the first time the user focuses on the tag field? \n\n. Ah my mistake, I thought it appeared when the field was focused for some reason. \n. done #98 \n. Latest: publishing individual npm modules has failed\nhttps://github.com/Automattic/wp-calypso/pull/3300#issuecomment-218184051\n. May or may not help, but I noticed that Nylas opens a new window with just the email content and opens the print dialog.\n\n. Edit/Preview toggle\nOption 1: place the toggle within the editor. This will play nice at smaller widths.\n\nOption 2: add a preview icon in the action bar. This is nice on desktop, but at smaller widths we would have 6 icons! This option is more subtle and out of the way though.\n\n\n. I think we should also add keyboard shortcuts for basic MD formatting, maybe only available if they have MD on?\n- bold\n- italic\n- link\n  etc.\n. Looks like the issue was resolved by #603 . This should be a post v1 feature I think since the custom css is getting us 90% there. Currently going to keep it open but remove the milestone.\n. The only thing we'd want a custom scrollbar to do is fade in and out. Either way, I don't think it's possible to respect the native MacOS scrollbar settings (fade in while hovering, etc.). Because of this, just using the custom css scrollbar is realistic for the foreseeable future.. \n. @srgpqt I don't see why not. Let me know if you have any design questions.\n. Desktop widths\nAfter using the the app for a few months, I think the tags should be fixed to the bottom, just like in the Mac app. \nMobile\nFor small widths (single column mode), I think the tags should be located at the end of the note, just like the iOS app. If the length of the note is shorter than the viewport, then the tags will be fixed to the bottom. If the note length is longer and you have to scroll, then the tags will be at the end of the note. Check out the iOS app for an example.\n. Alternate design, similar to the iOS app:\n\nThe placeholder text changes from \"All Notes\" to the tag name.\n. Oh so you are saying what if the user adds a tag named 'untagged' to a note? Hopefully an edge case, but it's important to think about.\n\nWe could show the notes that are only tagged untagged, alongside the notes that have no tags.\nWe could ignore it and just make it impossible to search for notes with the tag untagged.\nWe could restrict the use of the untagged tag\n\nGtiHub has some advanced search patterns like this. Maybe they have a similar problem?\nI like option number 1 best. Not sure what the user would expect.\n. Ready to merge?\n. done #98 \n. Thanks for the comment @MichaelArestad \n@srgpqt: Since we have adopted Sass to use on all of our Automattic projects, I'd like to keep it. It will be best to be consistent in that area, so that this project will be easier to maintain in the future. I don't think we'll need Bourbon or Compass, but we should add Autoprefixer. I imagine we'll only need a few mixins.\n. Also just wanted to clarify: we aren't doing a Mac app, but I don't have Linux or Windows handy right now :)\n. @srgpqt Let's plan on moving Settings, Help, and About to the OS menu bar.\n\nNot sure about what should happen once the menu items are clicked though. Probably a new window.\n. Unfortunately, our other Automattic project breaks with 4.0 and higher (last time I checked), so most of us have an outdated version of node. I think for this project it's fine though.\n. Design:\n\nNoting here:\nGoing forward, I think we should use the phrases Log in and Sign up.\n. \"New note\" should be reserved for only creating notes. If it also changes the view, the inconsistency will be a confusing UX.\n. Actually, we should remove that sign out button since you can now sign out via Settings. The action buttons in the note editor disappear though.\n. No remaining tasks, just one enhancement. Made a new issue for it: #224\n. Yep, the main benefit is reducing the amount of work when creating new components. Instead of searching for the icon you need, looking up the icon name, and then adding an import for each one, you could just import the entire set. Beau's solution would probably be better for long term than what we have now.\nIt's not a lot of trouble now because we only have a handful of icons, but it's possible that we'll add more. If it becomes cumbersome, we can reopen this issue.\n. @srgpqt Can you take another look? I just finished separating out all of the css.\nThanks!\n. I removed it just because it didn't seem like it was needed. Admittedly, React and javascript are not my forte.\nIf I'm understanding correctly, it seems fine to add it back in, if it helps people understand which scss file corresponds to that component. I'll defer to whatever y'all think is best.\n. @srgpqt The requires are now back in.\n. Oh, whoops, in that case, I would prefer removing the requireds then. It will be easier to manage the css if it's all in one file via imports. Sorry, didn't realize it would effect the app.scss file!\nAnother option would be to place a style.scss alongside each of the components, each in a separate folder. This is what we do with another Automattic project. That would help with identifying which scss corresponds with the .jsx file.\n-- components/\n    -- tag-list/\n        -- tag-list.jsx\n        -- style.scss\n    -- another-component/\n        -- another-component.jsx\n        -- style.scss\n. Current proposal:\n- No require()\n- style.scss in a directory with component\n- those are @importeded in a main scss file\n. We should do the above proposal in a separate PR. Does this PR look good to merge for now?\n. Yea, ideally I would want the borders to hit the right edge, but unfortunately I don't think it's possible with -webkit-scrollbar. I think we would have to make a custom scrollbar from scratch. \nFor the left edge, the space is there to accommodate the pin icon, and eventually the collaborate icon. Similar to Mail.app on iOS.\nEdit: just decreased the gap on the left edge a little bit\n. The Info panel slides over mostly to be consistent with the the tags list, but we could try to slide it in over the note editor and see how it feels. I think we should wait until some of the tweaks are in before we pass judgement (icons moved to the right, content faded out when open, click outside to close the panel).\nI think either one of these options would work for the web, but for the native app, it might feel the most native to just toggle the info panel on/off. By that I mean the panel could be shown/hidden at any time and the content wouldn't fade out or move. That would take a bit of UI rework though. \n. yep, I agree on the max height\n. Just tried a few different options using the web inspector. I like the vertically centered option with a max-height around 540px the best. The title and tab bars of the settings modal should stick to the top of the modal I think.\n. We should add this so we can get rid of the white square:\n::-webkit-scrollbar-corner {\n    background: transparent;\n}\n\n. At 640px viewport height, the modal height turns to auto:\n\nI think matching the top margin and letting it scroll would be better probably:\n\nNot sure about mobile though; we can tackle that in another PR.\n. Then should we add a width rule to that media query so that it doesn't affect desktop like in the screenshot above?\n. Thanks, I think everything looks good.\n. > Either way I can remove level 1 for most of these if you would prefer that.\nLet's do that, thanks!\n. Sorry wrong PR. Moved comment.\n. How do we test? I can't get to settings.\n. Got it working, thanks. I see you added some css to alter the scrollbar colors, but I'm still seeing the light colors:\n\nIs this what you are seeing?\nEdit: ah, nevermind, I see the new scrollbars now.\n. @srgpqt To make it more clear, maybe the classes should be named theme-* or theme-color-*. It took me a bit to understand what the classes meant.\n. @roundhill The gray is a good color for the icons. Or, at least I think they should both be gray or both be blue in both themes. If they're not it messes with the active states. \n. I think it would be nice for the animation to be consistent when you turn on the dark theme, instead of the flickering. I'm not married to the 2 different animation speeds we have in our scss variables, so I think we should just stick with one speed (assuming that is the cause of the flickering).\n. Because you matched colors from the mac app, there are several colors that aren't using variables. I'll Probably need to go in and pick an appropriate color equivalent from one of the existing variables. The Master Plan is to port these color changes to the other apps once this is released. I can do that next week, or in another PR.\n. I can add some styling to the preview in a separate PR if you'd like. I'll be gone tomorrow and through the weekend.\nOne small thing: We should add cursor: pointer back in the preview for the links. We can make an exception here since they are web links.\nLooks good otherwise!\n. Unless \"last modified\" is selected, my notes do not appear in the note list. Changing the sort options doesn't appear to change anything. Here are the errors I get in the console when I open settings:\n\n. The Alphabetical sorting option seems to put all notes that start with lowercase at the bottom. I expected this sorting option to be not case sensitive (I imagine this is the expectation for most users as well).\n\nCan't figure this out. For some reason my note \"Cat Sitting\" is at the top (alphabetical)(this also happens in the web app):\n\nAlso, I can't seem to get \"last modified\" to update properly. I start editing a note further down the list, but nothing seems to move it to the top, even though it is the last note modified. (also happens in the web app).\n. Found a light gray border at the top of the page (you might have to zoom in to see it). It looks unintentional so I think we should remove it.\nAlso, we should make sure to test this when printing from the dark theme too.\n. Ok, since I think the expectation is that printing will just print the content, we should remove the tags while printing. If there a good use for also printing the tags, maybe we can add them to the bottom of the text instead of the top.\n. Strange, I can't get the web app to print anything (blank), and the Mac app isn't showing tags for me.\n. After #101 gets merged, can we update this branch from master? I'd like to test markdown and the dark theme with printing.\n. Made a couple of tweaks to the CSS.\nPublish issues:\n- The lag is too great between making a note public and seeing the url appear. I propose that instead of showing \"Note published!\" immediately, we should display \"Publishing note...\" and possibly a small loading animation.\n- I think the url link input should be selectable (I got rid of the readonly). But, now it's a little hard to double-click and select the url (see gif below).\n- It would be nice if \"Copy\" changed to \"Copied\" after clicking it. After a second or two, it should revert back to \"Copy\".\n- I haven't been able to reproduce, but sometimes if I publish a note that was just unpublished, for some reason the url doesn't appear. I think the problem is on the backend because publishing didn't work on the web app either.\n- We should disable the Copy button if the note is not published.\n\nCollaborate issues:\n- if you add something that is not an email address, then it gets added as a tag, but nothing is added in the collaborators list. We should probably add some basic email validation. Maybe html5 validation with a custom pattern? http://stackoverflow.com/questions/20573488/why-does-html5-form-validation-allow-emails-without-a-dot?rq=1\n- I'm able to add my own email address, which is strange.\n- Add a max width on the emails and truncate with an ellipsis:\n\nIdea I'd like us to implement (in this PR or another):\nPin the owner to the top of the collaborator list (cannot be removed):\n\n. Issues moved to #114 and #115 \n. I'm adjusting the default font size to 18px in another PR. I haven't tried out this branch, but yea I think it should only adjust the note editor font size.\n. Just tested this in electron. \nWe should rename the menu label to Editor Font Size since we will be only affecting the editor, just to make it more clear.\n. ~~@srgpqt~~ @rodrigoi ( :smile:  ) Is there an alternative solution to my padding trick, to center the editor text?\nhttps://github.com/Automattic/simplenote-electron/pull/101#discussion_r46965615\n. Noting here, I think once #109 gets merged we can merge this too.\n. Some strange UX:\nNo. 1\n- Click on a note in All Notes\n- Go to Trash, and that note is still in the note editor\nNo. 2\n- Go to Trash and select a note.\n- Go to All Notes.\n- The delete UI is still visible along with the trashed note in the editor.\nNo. 3\nAfter deleting a note forever, it's strange that a note is not selected and the UI changes back to the regular one.\nSmall UI bit:\nThere should still be a vertical border separating the list header and the editor header.\n\nBug:\nNotes with the exact same content cannot be deleted forever (also happens with blank notes):\n\n. > As for the border, I removed the border in delete mode to match your design, thinking it was intentional. I guess I'll put it back?\nYep, my bad.\n. Issues have been moved to #111\n. Doing separate windows is not realistic at this point.. Now when I test in Chrome, the emojis that are not in the note list title now render. Emojis in the title still do not render.\n. I have to go slow, but I get double scrollbars when I resize my window:\n\nHappens at a couple points, hard to reproduce exactly.\nChanging overflow to hidden or overlay fixes it on .note-detail-textarea\n. Bugs 3, 4, and 5 are now fixed due to #164 \n. This might have been fixed in the latest. When I type a new tag, then press enter, the field remains focused and I can continue typing tags.\nchrome 47\n. Closing in favor of separate issues\n. To elaborate, when you try to drag the tag list items with the reorder icon, the item moves with your finger, but the other tags do not respond while you are trying to reorder.\nI'm pretty sure it's because the tag reordering is dependent on mouse hover.\n. Thank you!\n. before:\n\n. Thanks, PR updated\n. In the publish view, not the info panel\n. This is really nice. Much faster to move around.\n- It would be nice to use the mixin for the dialogs as well. Possibly use the same code for the fade animation and color.\n- Some things are hover-able while faded, which seems unintentional (pin icon, cursor change in editor).\n- Some things are clickable while faded, which sometimes feels \"wrong\" but others feel right. \nFor example, \n- I kind of like the ability to click the editor while it's faded to get straight to typing. \n- It feels unintentional that I can click on a deselected note and select it.\n- If you click on the tags icon (opens the sidebar) really quickly while it's faded, it will start to close but then open back up really fast.\n- If I click on the new note icon while it's faded, a new note is not created, which feels right to me.\n- Actually, if you click the new note button really fast while it's faded it does create a new note...\n- Clicking on the Preview button while it's faded activates the active button state, but it stays in edit mode.\nIt seems some things only trigger if you click really fast.\nNot sure what is going on. Maybe we should eliminate all click/hover interaction in the faded area if possible (aside from clicking to close, of course).\n\n. Using preventDefault() sounds like a good place to start. The only helpful exception that I can think of right now is clicking on the text editor.\n. I initially wanted to set the background in CSS, but I wanted to figure out a way that would use the icon component so that we wouldn't have 2 separate icons (one as a data URI in the CSS file, and the icon component .jsx file). It wouldn't be too bad though, since this is smaller project that won't be constantly updated.\nAnother option might be to include the icon as an html element, which is what we do in Calypso I think. This isn't as elegant though.\n. Hm ok, let's leave the character count in.\nWhile we are at it, I'd like to change the format as well to:\nDec 2, 2014, 8:15 AM\n. In the future, I imagine having 3 font options on all platforms:\n- System default\n- monospace\n- maybe a serif?\n. I added an updated font stack (I'm following what we are doing in wp-calypso). I also added variables to all font-weights for easier tweaking in the future.\n. Also happens when I go to https://electron-dot-simple-note-hrd.appspot.com/\n. Just added some style tweaks.\nI agree that it's too big. I like the idea of a popover, but everything I've thought of wouldn't work great at smaller widths.\nThings I'd like for history:\n1. Disabled buttons until you start sliding, so you can't Restore Note if you're on the latest revision.\n2. The drop in animation to also happen when the history panel closes.\n3. The dates to be formatted as described here (we should keep seconds though for history) https://github.com/Automattic/simplenote-electron/issues/141#issuecomment-180474112\n4. Solve the overlapping text problem\n5. Disable markdown preview buttons while in history mode? If you click on Preview while the history panel is open, the panel closes; it's kinda weird. You can also look at the history while Previewing markdown, which is kinda cool, but should that be possible for the user?\nNone of these are blockers for the beta except for number 4. We can create issues for the rest.\nIdeas for number 4:\n- Go back to bottom placement for the history panel. This would solve the issue of it covering up the text at the top.\n- Maybe redesign it in such a way that the cancel/restore buttons aren't visible until you slide to a date?\n- When the history panel comes in, also transform: translateY the editor so that it moves down. We'd need to add some bottom padding to make sure the bottom of the note isn't cut off.\n- Just add some more top padding to the editor textarea div.\nI think the easiest thing right now is the last solution. It won't look great at small widths, but it at least makes it presentable for the beta.\nI have some better ideas for the short term but I need to make mockups. I'll post today.\n. To solve the text overlapping problem and keeping the slider at the top:\nWithout markdown\nhttps://cloudup.com/cI4Sm8QGDgp\nWith markdown\nhttps://cloudup.com/c5oMs4nqgc4\nNotice how the markdown segmented control takes up the same space as the history buttons.\n. Could not reproduce bug.. I changed how the css worked a little bit. The tags can now wrap to a few lines.\n\nReally annoying but I couldn't figure out why the tags are a tiny bit misaligned with the editor text:\n\n. I tried to \"unstick\" the tag bar at small viewport widths, but it proved to be too complex. For v1, at mobile widths, I want to tags to be at the bottom of the content and let them scroll with the content if possible.\n. This is ready to go on the design side.\n. I think since desktop is a priority (with the ability to size the window smaller), we should keep the tags stuck at the bottom at all viewport widths for now. There was some jittery scroll things going on, and I don't see the tags for one of my notes that only has one tag.\n. There is no empty message, but the bug no longer exists.. Does this only work in packaged apps?\n. Ha!\n. I tested it, and everything works as you described!\n. I was thinking something like this, but with the spinner in the middle. We can just use the Calypso spinner CSS.\n\n. A quick solution to this would be to add a placeholder, something like \"Start writing...\"\nThis would indicate where to click.\n. Oh, hah, I didn't realize it was that simple. It now seems to work. \nI wonder why the issue was happening randomly (sometimes the tag area went 100% height when I turned on my web inspector).\n:shipit: \n. Nice! I think this is a good solution. I like the animation. It would be nice to eventually figure out a slide transition using some transform properties in the future.\nI guess this was happening before, but it's now possible to have a note unselected:\n- make your viewport smaller so that's it's in single column\n- go to the notes list (nothing is now selected)\n- expand your viewport width\n- the editor is now empty, but the action buttons are still enabled.\nAn edge case. The easiest solution might be to just disable the editor buttons (share, history, etc.) and the tag editor. Would be nice to show a message too, like \"No note selected\".\n. The transition into single column is also very sluggish when changing your viewport size, but we can ignore that for the beta. Maybe it's just me.\n. Noting there that html5 validation does not seem to do anything in the Electron packaged app. We use validation on the email field under Share > Collaborate.\nI would be interested in seeing what other Electron apps do for validation.\nThis is what Chrome looks like\n\n. Interesting, it was working well a day or two ago. \n. I tried using \n-webkit-app-region: drag; \nbut it didn't work.\n\nIn fact, -webkit-app-region works only when you create the window with 'frame' : 'none' . You don't have to implement the logic to support window move.\n\nLooks like we would have to ditch the frame if we wanted to do this.\n. We have implement frameless window for MacOS. It's not planned to do the same for the other OSes.. See https://github.com/Automattic/simplenote-electron/issues/61#issuecomment-160714078\n. Cool, the Nylas email client had separate settings windows at one point but now it's just a full screen modal, like Slack does. Maybe a full screen modal is the way to go. \n. I do think that login should be a separate window if possible. Or maybe just a smaller window that turns into a large window. \n. Tags are manually reorderable by the user in all the apps afaik. I think I made this issue because I noticed that it was not the same across all apps.\n. Meaning: I noticed that the order of the tags was not the same across the apps I was using. So maybe a sync problem?\n. One possible idea is to add a github link in the about view. Actually, even easier, we could just add a menu item, maybe under Help?\nOpen source on Github\nGithub Repo\nSimplenote is Open Source\n. Also noticed that the WordPress app does not have a right click menu.\n. This could be a non-issue, but we should make a decision. There is some controversy over this in Electron I believe. This also happens in Slack, and I assume WP Desktop? We could decide to not fix this.\nI think it's only really a problem for us, because notes can be personal, and might even contain passwords. The problem would be alleviated if we had password-protected notes.\n. This is available in the electron app. You can go to Settings > Writing to turn it on globally. After that, you can turn it on per note in the Info side panel.\n. #273 and #267 will fix this\n. Seems pretty small, but if everything works, then that seems like a good size to me.\n. maybe a little bit bigger, some thing might look broken that small \n\nHow about around this size? \n\n\n. That's fine, I just wanted to clean up the Menu. I assume it's a simple Electron setting. WordPress and Slack don't have it in the Menu. The shortcut is also not available. It might be all or nothing?\n. \n. @dmsnell \nThis is just a p element right before the login-actions div. You can use the $red variable for the color.\nThe credentials you entered don't match.\n\n. This might be a good opportunity to go ahead and fix #165 while you are in there.\nThis would immediately display a loading spinner after click. Not a huge deal if you don't want to right now though.\n. Awesome, thanks for this. I just gave it a go, and everything works as expected.\n. Should be \"published\" not shared! Updated.\n. I assume that Preferences opens the Settings modal (I haven't tested the latest package). I think that is fine.\nI just wanted to make sure we didn't mix terminology, and be consistent with Log in/ Log out.\n. :+1: to the change\n. That works, but I think it will be simplest to use flexbox here.\n1. Remove the extra div you created.\n2. Only CSS change that is needed:\n.note-editor-mode-bar {\n     display: flex;\n     justify-content: center;\n}\nThe margin, display, and flex properties on that class can be removed.\nSeems to work well.\n. This is great, I didn't think we'd ever get around to this. The UI/UX works as expected. Thanks for doing this!\n. Dark theme looks good, everything works for me!\nThe RSS icon was a weird choice for \"published\". I can update it later, maybe before we launch v1.\n. Whoops, I forgot to test the Condensed setting. \n\n. I think something like this would be the best option for all note display settings\n\nWe will need to take care of truncated text though.\n\n. I got this working in the inspector\n\n. Sure, I \n- inserted the svg into the title div, note-list-item-title.\n- wrapped the title text in a span.\n- display: flex on note-list-item-title div.\n- margin-left: auto on the svg.\nThe ellipsis doesn't work though at this point. Add this to the new span element with the title text:\n- width: calc(100% - 24px);\nThat gets the truncation to work, although I'm not sure why. 24px is about the amount of space the icon takes up. I thought that width was required for text-overflow: ellipsis; to work, but there is no width on that element right now.\n. Hm! Maybe I left out a step.\n. Oh, hm I forgot that we had the icon positioned on the right to account for the condensed view. Looks like I had it working in the inspector at one point:\nhttps://github.com/Automattic/simplenote-electron/pull/228#issuecomment-196996338\n. Yea, I'm not sure how I got it working. I'd have to open it up and try it.\n. We should eventually \n. Hm, I can't seem to get this branch working. I can't pull the latest because of merge conflicts. git reset --hard doesn't seem to work.\n. Got it working. I tweaked the CSS a bit; it wasn't working correctly.\n\nCan we enable the icon for the condensed view? I think it is being hidden.\nAfter that, let's ship\n. Another example \n\n. Ideas for the menu (ignore that it's a right click menu):\n\n\n. Edit Account would be the same as it is now. It would open up a browser window, take you to https://app.simplenote.com/settings\nIdeally we could keep the code in there, and display when we need it if/when we release it for the web.\n~~Looking at this now, I would probably create a new menu for Markdown, maybe Format or Writing > Enable Markdown.~~ We don't have the MD setting anymore.\nAnother idea, which I don't think we'd need unless we add a lot more settings:\n\n(a separate native window)\n. Nope, edit account is just for changing account info. They'd still be able to edit settings in the electron app via the menu bar. \nBy \"keep it in there\" I meant keep the modal code in the repo and enable it once we need it for a web release. \n. I just committed a change so that it would be on one line. The text is truncated, but I think that is ok, and hopefully we can get the urls a bit shorter one day :)\n. Just tested again on master. I can confirm that when I publish/unpublish a note it is moved to the top on the Last Modified setting. I don't think we should update the modificationDate on publish/unpublish.\n. Using L seems kinda weird, not sure why the Mac app uses it. I think it's because cmd F brings up a native search and replace.\nHow about cmd F or shift cmd F for search.\nUlysses for ideas: http://ulyssesapp.com/blog/2014/08/ulysses-tips-shortcuts-2/\nalso #37 \n. Heh, I tried to test this locally but realized that the shortcuts are used by the browser.\n. After turning on the global MD setting, would you expect every new subsequent note created to have MD automatically turned on? Also, what would you expect to happen if you turned off the global MD setting once you had created several MD notes?\nThanks for testing!\n. > It would be great if there was a toggle ui element to prevent any confusion. just flick it to turn on/off markdown for the post. There should be no need for a global setting!\nThis currently exists in the note Info panel.\n\nThere is always the option of putting the toggle in the button area above a note somewhere with a mouseover saying that it's a markdown toggle. :)\n\nWe try to put all settings like that in the note Info panel.\n. After reviewing all of the feedback, I'm inclined to:\n- Only have one global MD switch, in account preferences\n- Global switch would affect all notes if turned on/off\n- Eliminate the MD switch in the note Info panel\nPros\n- Simpler, it would clear up the issue reported here\nCons\n- Notes could not be individually set for MD\nHaving a MD setting in the note Info panel will inherently require another setting, to determine if new notes will have the per note setting on/off by default. Creating a setting for another setting is too convoluted and I think the pros outlined above outweigh the cons.\nBasically, we'd be hurting users who want only some notes with MD enabled, but we are making the process much more simple and easier to understand.\n. Thank you @roundhill, @dmsnell, and @MiteshNinja for the feedback. Y'all have made a good case for a per-note MD toggle, in the Info panel. I'll have to check out Day One 2.\nSounds like going forward, we should:\n- Remove the global MD toggle.\n- Keep the per-note MD toggle.\nthen there are 3 options:\n- Default for toggle is ON.\n- Default for toggle is OFF.\n- The toggle state is determined by the note you have selected.\nI think we are getting closer! All three options for the toggle state are valid. The next time we have some resources to push out a new release, we should take care of this.\n. It looks like that list of items are the only relevant ones for logged out \ud83d\udc4d \n. Noting here that we'd just need to add user-select: all; on the preview element.\n. Interesting, that is unexpected. I'll file as a bug. Thanks!\n. Documentation for the solution to this: https://github.com/atom/electron/blob/master/docs/api/shell.md#shellopenexternalurl\n. There are no plans to offer a 32 bit Linux build at the moment. We are currently adhering to the standards of https://github.com/Automattic/wp-calypso\n. We hope to do this in the future at some point.\n. Currently, we don't have any plans for another note display option, but I do think the vertical whitespace in-between each note could be decreased.\n. Thanks for the feedback. There aren't any plans to adjust the whitespace in the editor itself, but we are looking at an option to resize the note list. We have a max width on the editor text, because after a certain point, having too many characters on one line is a hinderance for legibility. In the mean time, I suggest adjust the width of the app window. That will decrease the whitespace in the editor.\n. I just updated the issue with some history, and also added it to the FAQ\n@roundhill I believe we talked a bit about this recently. Do you remember if we landed on a good solution?. @nemonein @gerv We don't use any custom fonts, and we only use system fonts. It should fallback to a font on your computer with the correct glyphs in your language.\nSee our font-stack here: https://github.com/Automattic/simplenote-electron/blob/master/scss/variables.scss#L30\nI would open this as a separate issue. @nemonein do you mind opening a separate issue please?\n. @nemonein Sure, no problem.\nSimplenote will try to load the fonts in a sequence from left to right. For example, it will try to find the first font, \"-apple-system\", and if it doesn't find it, it will look for the next font in the list, \"BlinkMacSystemFont\". Since your computer has the \"Ubuntu\" font, it loads that one.. Let's create a new issue and discuss further.. is this fixed with https://github.com/Automattic/simplenote-electron/pull/407 ?. This is really cool. \nThe main design challenge is determining when we trigger the 1 column styles we have in place (hide the sidebar). Nylas has some complex panel manipulation going on; maybe we can learn from them. https://github.com/nylas/N1\nN1 has resizable panels, but if you resize the window small enough, it overrides the user's setting and gradually decreases the panel width until the minimum widow width is reached.\nThe mac app is a good starting point for min and max width of the note list \u2014 240px / 380px.\nPercentage of window would be cool, but I think users would get frustrated that the width would change when they adjust the window size.\nMight be nice to use the col-resize cursor\n. Also, the resize icon should only show up when the cursor is hovering on the border.\n. No problem, updated the issue.\n. Apple just added password support to their both of their note apps, and it got a really positive strong reaction. I think that is probably a lot more useful than locking the entire app. \n. Also, not having password protection means you can't have any sort of sensitive data in simplenote - imagine working in a coffee shop, and opening the app and the first note is selected automatically. Or, you start writing and realize that you can't m hide that sensitive note in the note list, unless you add some dummy content to the top. \n. Thinking more about this, I think it makes much more sense to lock specific notes, not the entire app. Rarely do you need to lock more than 1 or 2 notes. It would be worth it to go through the Notes.app locking flow and see what we can learn.\nUnfortunately, this might be something we have to do across all apps. I don't know if we should do it on just one app and not the others.\n. You can already adjust the amount of lines shown. So, you are suggesting to remove the MD syntax in the note list? Can you elaborate why you'd want this?\n. Interesting, I didn't think about that. It doesn't bother me.\n. Hey @Nebrit, thanks for the suggestion. We have thought about this, but we explicitly chose to keep Simplenote's organizing functionality simple with tags only.\n. Duplicate of #266 \n. No problem!\n. The File, Edit, etc. menu can't be hidden on Windows or Linux. Not sure how to solve that though.\n. That's Github flavored MD, I don't think we support that right now.\n. Proper to do list support is something we want to do, but no plans. Maybe in the meantime we can enable Github flavored MD.\n. Closing in favor of #309 \n. This is fixed now right?. Already fixed! Should be out whenever we release the next version.\n. Should be fixed in the next release \n249\n. Sorry, I completely misread the issue.\n. I still stand by my opinion here in #412 \nTo paraphrase, CtrlOrCmd + L to search anything in SN is unintuitive to me, and I don't think we need to follow web browser paradigms or be consistent with the native MacOS app. We have a chance here to improve the native MacOS app.\nI think something like what these apps have done would be great:\nUlysses\nshift+command+F: search notes\ncommand+F: search within note\nEvernote\nalt+command+F: search notes\ncommand+F: search within note\nTo clarify, we don't have a search within note feature do we? I can try to design one if we need it.. Duplicate of #267 \n. That idea sounds great to me. p as in preview or p as in print. Easy to remember.. This would be solved with #259, so closing\n. Can you elaborate? You can use emojis in your notes.\n. Note: We should allow the user to turn off/on spellcheck like in any textarea in the browser. If that's not possible, then this will require developing a feature and adding a settings to the app.\nEdit: I'm not sure how this works on Windows and Linux. On Mac, you can enable/disable spellcheck with a right click.\n. Sorry, somehow I missed this.\nI think the spellcheck setting should be in the Edit menu. Nothing in the app settings pane. Would be nice to also have it in the right click menu?\n@dmsnell Is spellcheck now enabled via draft.js?\nWe have a recent issue for spellcheck #517 . Library for adding spellcheck in the duplicate issue:\nhttps://github.com/electron-userland/electron-spellchecker. Sorry @JasonSwindle, an internet connection is a core requirement of the Simplenote app. There are no plans to support complete offline usage.\n. The Linux and Windows apps use a slightly different Markdown library. For these apps, you have to put a space after the hash character. This should work for you:\n# Here is a top level title\nThe web app does not require the space after the hash character. We consider the Linux/Windows app to be the correct version, since it follows the Daring Fireball syntax more closely.\nhttps://daringfireball.net/projects/markdown/syntax#header\n. Not sure this is really feasible. If you are not focused on the app, then we cannot guarantee than this shortcut would not interfere with the app you are focused on.. will be done in #37 . #481 . #389 . It would be nice if when you go back to the editor pane, then it would remember where your cursor was.. Dupe of #368 \n. The margins are intentional, and make reading the notes easier. It's not wasted space. In most cases, seeing more text on the screen at once is not better. \nSome ideas to address this:\n\nMulti-column at large widths\nJust a bit wider at large widths (1920px+)\nInclude at option to set the max width maybe with 2 options? (full and automatic)\n. > I think the margin is good for legibility (although a preference option would be great, too). Is there a way to tweak this design so that the margins are better communicated as a purposeful design?\n\nI think we should add a light background color in the margins so that it looks intentional. I think Ulysses does this via a \"page mode\", but the default I think is just white space. Do ppl think it's an issue on Ulysses?\nWe can also use better width breakpoints.\nAs far as the option goes, I'm in favor of this:\n\nInclude at option to set the max width maybe with 2 options? (full and automatic)\n\n\n\n. Can you clarify what you mean exactly? Do you mean that you do not like having both the Edit and Preview modes when you have MD enabled? Do you want editing and preview of MD all in the same view?\n\nFirst solution that comes to mind is going in to Edit mode on clicking in to the note, assuming markdown is enabled.\n\nCurrently, once you click on a note you should go straight to Edit mode unless you previously selected Preview.\n. Related to #343 \nWe could do this in the same feature\n. Looks like this would be the equivalent of adding SN to the Mac menu bar, which we haven't done for the Mac app. Not sure what functionality we would put there.\n. \n. cross linking the main issue: #16 . Dupe of #278 \n. This is expected \u2014 we have not implemented this feature yet.\n. I think this has been implemented.. Duplicate of #349 \n. Unfortunately there are no plans to implement a feature like this.\n. An elegant way to implement this in Simplenote, is for the app to remember the last view mode you were in. Right now, if you restart the app, it reverts back to the editor as the default view.. If it's supported by Markdown, it should be available, or easily added. What kind of math support did you need?\n. Mac OS X \nElectron, Chrome\nSometimes hitting the tab key inserts a space, sometimes a tab character.\n\nI can get consistent results by using this phrase: consectetur adipiscing. It seems to insert tabs based on the characters that are around the cursor? Sometimes hitting tab actually inserts a small space.\nSelect a paragraph of text then hitting tab inserts a tab at the beginning of the paragraph. I think the default OS behavior is to replace the entire selection with a tab.\n\nI kind of like how it inserts the tab at the beginning, but it was unexpected. Worth seeing what other editors do.\nBug: \n- go to Trash and select a note\n- make sure you are in Edit mode\n- click inside the note content\n- hit tab\n- info panel is opened and can't be closed\n- reason: it's tabbing through the links in the panel\nSuggested fix: when you are \"focused\" on the editor, tab should not tab through links. When you are in All Notes in preview mode, tabbing goes through links too.\n. I might be doing something wrong, but I couldn't get the new feature to work at all.\nChrome and Electron\nMac OS X\n. Hm not seeing the autocomplete. Maybe because of this error?\nERROR in ./lib/tag-input.jsx\n. Got it to work! That is really nice. I think in the spirit of simplicity, we should try something inline.\nhttp://www.jqueryscript.net/demo/Simple-Inline-Autocomplete-Autosuggest-Plugin-suggest-js/\nCan't find live demo of a Material example, but they have an image:\n\ntab will complete the auto-completed tag\n. That\u2019s fine. The mac app has a combination of inline and the popover. I\nthink inline will be good. We can see how it feels.\nOn Tue, Oct 11, 2016 at 10:08 AM, Dennis Snell notifications@github.com\nwrote:\n\n@drw158 https://github.com/drw158 to confirm, inline would break with\nthe mac app\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/pull/389#issuecomment-252945693,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAlwNyc7ZpE51HydkWQP0F2y4M0DEd0Yks5qy6aBgaJpZM4KFV7G\n.\n. The suggestion text should be just a tiny bit lighter, maybe lighten($gray, 10%)\n\nOther than that and the known issues you outlined, I think it's simple and elegant. A few quirks:\n\nTab usually autocompletes the word for this type of thing\nEnter use to confirm the tag and make it into the pill shape\nNot sure if clicking twice to delete would be expected behavior.\n\nI now think the tag bar should span the entire width of the editor window instead of the width of the note content. It'd be nice to sneak that in this PR too.\n. Sounds good to me.. Sorry, this sounds good to me:\n\nCan we have the tab keypress also add the tag?. Sorry Dennis, I never got back to you about the placeholder text. Before this, the placeholder was Add tags\u2026 \n\nWe should just use that. I'll create an issue.. I think I encountered this same bug (info sidebar open and stuck) while testing the new tab PR. If I remember correctly, hitting tab in Trash did something similar.\n. #481 . We differ from the Mac app because it didn't make sense at the time to focus the search field with ctrl L. It seemed unintuitive, especially since we don't currently have searching within notes. I know it's standard to focus the search field on browsers with ctrl L, but I think we should be looking more at other apps, writing apps. \nUlysses \n- shift+command+F: search notes\n- command+F: search within note\nSlack \n- command+F: search bar\nEvernote \n- alt+command+F: search notes\n- command+F: search within note\n. Cool!\nI did get some errors in my terminal, so sorry if that is related to the bugs I found!\nModule not found: Error: Cannot resolve module 'draft-js-simpledecorator' in /Users/Dave/simplenote-electron/lib\n\nI noticed that it doesn't seem to work if:\n- already existing note\n- not MD enabled \nWhen I enabled MD on the existing note, the highlighting doesn't seem to work.\nAnother bug:\n- make a new note, make sure it has MD already enabled\n- turn off MD\n- highlighting still works, even though MD is off\nNot sure if this is a regression, but the edit/preview button should not be visible in the Trash. You shouldn't be able to edit the note while it is in the trash. No preview, just read only edit view.\nI don't think we should use the monospace font quite yet. Not until we make font selection a setting. It is kinda cool that it makes MD mode more clear though.\nAlso, our MD parser does not render #header (no space) in the preview, so I don't think we should highlight it.\n. Unable to boot the branch at the moment, but I'm more in favor of the way Ulysses handles it. Editing and Preview are 2 different writing environments, and if they look exactly the same then there will be confusion. By that I mean the user will be in Preview, but think they are in Edit. They'll try to click, and then realize what mode they are in. \nWe do use the same fonts in both modes, but hopefully that will change. The user could change to a monospace font, and the Preview would remain as the system font.\nAlso, it's jarring if the text suddenly gets really large while writing (# headings). Basically any sort of text size change would be problematic I think.\nThe screenshot looks good except I would prefer\n\nbold headings, no size change\nblue instead of red for the checkboxes \n. We could add it as an option for all notes, not just MD notes. The setting would need to live in the view options. We have been meaning to do that anyway. Should we go ahead and implement it? :). > @drw158 one concern I have with the font setting is that I probably want all of my Markdown notes to show in a monospaced font in the editor but I don't want non-Markdown notes to use that monospaced font. Do you think it would be bad to have this kind of checkmark or distinction?\n\nI'd rather keep the font choice consistent for all notes. Per note font distinction is a bit too complex imo.. It would be great to have offline. I guess the native Mac app does this too?\nJust adding a design consideration, we'd need to visually indicate that the app is offline I think. Or if the user never had an account and opening it for the first time offline, we should indicate that as well.\n. I think so, yep. Android probably does something like that.\n. >  please note that I added padding around the sides of the search result because the white text was fading into the background of the note.\nWe could use box-shadow to make a border around the span. Then there would be no jumping. We should check performance though if we do that. Lots of box-shadows.\nIf that doesn't work, I'd rather remove the padding and eliminate jumping; it's pretty jarring. \nI can also come up with another color to use so that the text does not bleed.\nEdit: just tried out the new updates, and it wasn't that jumpy!. As discussed in Slack, it can be very confusing if you are searching with the preview pane on:\n\nLooks broken because my search term is not being highlighted.\nOne solution is to switch to the editor during searching and disabling the buttons. I think this would be a better experience. Big changes in the UI is pretty common while searching a page in other apps.. I think that works well. Seeing the editor switch to Edit while typing in the search box felt ok to me. Only thing missing is the disabled Preview button. Automatically clearing the search box after clicking on Preview definitely felt odd.\n\n. Yep, this is a very specific situation, and I can't think of a similar problem in another app. Although, apps commonly alter their UI while in search mode. It's a matter of changing it the right way in an expected manner.\nI think we could research more apps that have an editor/preview component, ideally ones that don't show them at the same time. \nAtom is a nice example:\n\nBut they don't have our issue, since both modes are shown at the same time.\nAnother option would be to completely hide the edit/preview button while searching (and auto switch to edit of course). This would be less confusing than showing a disabled preview button (\"why is this button disabled?\").\nAs far as shipping this feature, I think this is an important one, I'd rather see it shipped. I think users will inevitably be confused if they search with the preview mode on, but it only affects Markdown users. I think let's ship without addressing that issue and figure out a solution later.. > how bad would it be to simply leave the preview mode open for now? \nYep that sounds good. Basically revert back to before I made this comment about the Preview pane: https://github.com/Automattic/simplenote-electron/pull/424#pullrequestreview-17318181\n(except for the blue color, keep the blue color :) )\nWe can iterate later!\nThanks for taking the time to work on it.. User setup:\nSimplenote (1.0.5) on Windows 7 64-bit\n. This appears to only be a Windows 7 setting. I have 10, so I am unable to test it at the moment. If someone has a Windows 7 machine and can reproduce we can add this is as bug. Although, it is probably an issue with Electron.\n. My suggestion is to record the last position of the user's cursor. Alternatively, placing the cursor at the end of the note could be the default, instead of the top of the note.\n. I could be wrong, but think Microsoft Word saves your position. I haven't been able to test. Ulysses for Mac seems to save the cursor state, which is nice (not sure if that is cross-platform).\nIt's good to remember the use case of our app, which unfortunately is a wide range for us. I think it's safe to say that most people use SN for short-form notes, so keeping the cursor at the  top makes sense. Based on the conversation on Slack, I don't think it's feasible to come up with a great solution that also caters to our main audience.\n. We get this one a lot, but we have no plans to ever change the tagging system.\n. The Info button and sidebar also become a toggle, but that has no effect on what I mocked up.\n. Also, you might notice there is a lot of space in the top bar, enough for the search bar. We could do this, but having the search bar in editor only mode would be counterintuitive. Maybe it's just hidden in that mode?\n. duplicate #349 \n. Just checked it out. I think it works really well!\nFirst thing I noticed: can we limit the search bar to only appear in the notes list column?\nBug: Go to editor only mode, shrink viewport. Hit the tags button, and it's blank.\nI think it'd we worthwhile to ship this at the same time as the resize column feature. Not sure how that'd work with the responsive styles.\n. > Are we showing a single icon and rotating the view based on repeated clicks to that icon? I'm not sure how I feel about this if it's true. Do I have to click twice to go back to the previous view?\n\nI'm a big fan of how the Mac app handles the tag list. There's an arrow one can click on to open and close it - the drawer idiom.\n\nThe toggle is a 3 state toggle (1 pane, 2 pane, editor only). Condensing this all to one button is an elegant way to also include another requested feature, editor only mode. I think the drawer metaphor still exists \u2014 you are basically opening and closing the 2 drawers on the left (just sequentially, not at the same time).\n\nif I wanted to open or close the tag list, would I be able to easily discover the icon in the top left? I wonder if there are ways to bring the actions closer to the context they control.\n\n\nI think they will be able to find the button easily, and also guess what the button does, based on the icon. Placing the layout controls to the far left is a common pattern, and the icon is recognizable as well. The other benefit is that the button is close to the panels that it controls, the 2 sidebars. These are all assumptions though. We can always test!\nI decided against having multiple buttons for a few reasons. Here are the possibilities I considered that achieve the same functionality:\n\none button to toggle the tags list, one button to go to editor only mode\n2 buttons that toggle each sidebar (tags, notes) (basically same as above)\none button (that toggles tags), with a dropdown option for fullscreen\n\nReally, all above are similar, but with slight differences in UI\n\nHaving multiple buttons increases cognitive load (Figuring out which button to click. What happens if I toggle the tags on, but also click the \"editor only\" button?)\nWith a 3 state toggle you are only at most 2 clicks away from the layout you want to achieve (3 clicks to arrive at the layout you are currently on).\nI didn't think having a dropdown was a good solution because we have few layout options. Also, with a dropdown, you are still at most 2 clicks away from the layout you want. The benefit of the dropdown,  I think, is that if you only ever want to toggle the tags list, then the UI is optimized for you (you have a single toggle to show/hide the tags).\nWe can test multiple ways of doing it to try it out or test. If we want to, we can user test as well.\nThanks @Copons for doing this!\n. Here are the icons: https://cloudup.com/cmyvtPWvzWZ\n(will help us know if the design feels natural). Good research on gathering those that helps. The screenshot I posted is from Ulysses.\nThe Day One app looks interesting, and I've been meaning to get it. I wish I could try it out with a trial. We could do a similar thing: one toggle to turn on/off both sidebars at the same time. Then, to hide the tags list, there would be another button within that column (if I understand the UI correctly).\nI'll add some more to the mix:\nSafari\nSimple on/off sidebar toggle\n\nSafari Dev Tools\nOne toggle for separate window, one toggle for side or bottom.\n\nBear\nSeems to have the same setup as us. There is no UI for this, just keyboard or through the menu bar.\n\nGithub\nSingle sidebar toggle, but what's interesting is that hiding the sidebar also hides the \"Add\" plus button.\n\n\nNumbers\nNot a toggle, but just a dropdown with 3 options.\n\n. To solve the shortcut problem I think we would just do what Bear and others have done, create a shortcut for each of the 3 states.\n\n. > I'm very curious to know why they went this route. to me it seems far more difficult to remember a layout shortcuts than it is to remember toggles, though I think ^1 ^2 ^3 is reasonable. \nSketch gets around this by having toggles for each shortcut, but then adding an additional shortcut that toggles both sidebars on/off. It's nice that each shortcut is a toggle, unlike Bear.\n. > this is interesting. it's mutating the menu bar and I wouldn't anticipate that. is there any analogue in Simplenote that we might want to hide or show contextually?\nWe could also hide the New Note button in editor only mode. Different circumstances, but we already do that in the mobile view.. I think we should try these 3 options\nOption 1\nThis one actually reverts back to the layout in master. A new button is added in the editor to enable editor only mode. \n :arrow_right: Prototype\n\nOption 2\nLayout control with one button.\n :arrow_right: Prototype\n\nOption 3\nSimilar to Day One, one button toggles both sidebars (in other words, it toggles editor only mode). A button within the notes list toggles the tags.\n :arrow_right: Prototype\n :arrow_right: Prototype v2\n. Option 1\nI like this one the best I think, but has some downsides.\nPros:\n- More vertical space for the notes. Less wasted space in the app toolbar in general.\n- Icons are close to the area they control.\nCons:\n- None of the layout buttons stay in the same place after toggling. We could fix the tags button by keeping the search bar static. Distraction free mode button could be moved to the right, but I'd like to separate it.\n- Integration of the naive traffic light wouldn't look quite as native, but the inset traffic light work Dan has done looks nice.\n- Not quite as elegant. It uses 2 buttons to control layout.\n- New Note button is hidden in distraction free mode. Good thing?\nOption 2\nIt does use only 1 button, but it takes 2 clicks to get to any layout option. Mobile shouldn't be a concern, since this all goes away on small screens anyway. Assuming the mobile is a small screen...\nOption 3\nUnconventional, but is it intuitive? Makes the tags seem like an extension of the notes list, rather than its own separate sidebar. Makes sense I think.\nPlaying around with these, I'm going to try and fix the jumping button problems on option 2 and 3.\n. Updated option 3 with a v2. Tags button now does not move when you toggle it (ignore the small jumping when clicking between screens).\nIt feels wrong to have the search bar span the width of both columns, but maybe that's because I'm so accustomed to the other way. Also, the search bar doesn't search the trash and all notes at the same, and the placement of the search suggests this.\nThere are ways I think to do this without the search bar spanning both columns. I'll look into doing that next.. Here is a new idea that combines some previous ones. The editor toggle is now on the right.\nhttps://marvelapp.com/4e071j4/screen/17419626\nAfter making these prototypes, I think the best option would be to \"soft-launch\" the editor only mode by just creating a keyboard shortcut for it, no UI. Not every view option has to be in the UI. I'm not sure how high the demand is for an editor only mode compared to those who won't use it. The editor is prime real estate, and we should be very judicious when adding buttons. The keyboard shortcut will satisfy that demand I think!. Thanks Dennis\n\nnot sure how I feel about putting the distraction-free mode button next to the other icons. those icons all pertain to the specifically-opened note while this button is a UI-centric action maybe.\n\nAgreed on this.. @Copons to move this PR forward, I propose we:\n\nnot worry about the editor-only mode in this PR\nupdate PR to function like prototype in https://github.com/Automattic/simplenote-electron/pull/443#issuecomment-264917056\neveryone try it out to get a feel for it, make changes based on feedback\n\nThe prototype is actually not that far off from what is currently in master. Sorry if that causes any backtracking!. Nice, I like it. There are a few things I noticed that would improve it before we'd merge.\n\nDecreased tag sidebar width\nSearch bar has no transition, so it's a weird jumping effect.\nWe'd also need to toggle the info panel\n. By that, I mean that we should decrease the default sidebar width because now it will be always visible. I think it's a bit too wide right now, but it was ok before, because it was not always visible. Ideally of course, the user should be able to resize it (in a different PR \ud83d\ude04  ). Thanks, @owcz, added to the original post.. Can we add the UI for this only in the menu bar for now? I'm thinking Simplenote > Export Notes...\n\nOpens a finder window with the .zip file shown. Maybe just export to Desktop?. All of this looks good to me. I don't have an opinion on including the JSON. If it's just a matter of adding a .json file to the notes folder, then I'd say go for it!. Time to move again, since this is actually the web app!\nhttps://github.com/Simperium/simplenote-gae. This is working for me on latest master.. Can select a single element to print in JS by selecting a single ID?\nhttp://electron.atom.io/docs/api/web-contents/#methods\nwebContents.fromId(id)\nid Integer\nReturns WebContents - A WebContents instance with the given ID.\nIf not, we could use the not:() CSS selector. That could hide everything expect for a specified class. I don't think so. We can merge it.. I believe #418 would fix this issue once it is merged. It formats Markdown in the editor, similar to Bear. We don't have a lot of time to work on it, but it should come eventually.. Thanks for the bug report, but because this issue is not from the electron app, this will need to be moved to the web app GitHub repo.. #274 . Here's where the discussion stopped\n\nin the meantime I will remove the confirmation step so that a single click removes the tags. we can play with it and see how it feels\n@drw158 one issue with not selecting the tags before deleting them is that it currently mirrors the keyboard method for deleting tags\nhave the cursor focused in the tag entry with existing tags\nbackspace to clear out the entry\nbackspace again and it should select the last tag\nbackspace again and it confirms and deletes the tag\nshould we maintain selection for the keyboard but remove it for the mouse?\n\nAnother thing I forgot to respond to :). I don't know the solution, but this is the issue that should be solved:\n\njust a single click deletes the tag with no confirmation. The hover state also does not indicate deletion.\n. I agree, adding top padding to that div makes the space uneven. Looks like this is the only div that could have the bottom padding:\n\n\nIt's a nested div. Would it be ok to use that one?\nSome things I think we should do:\n\n.tag-editorright-padding is 48px for some reason. Should be 12px to be consistent.\n\n\n\nMaybe a box shadow to the top of the tag field box-shadow: 0px -8px 12px 2px #fff;?\n\n\n. > I'm not overly fond of adding a class to that particular element, since it's automagically created by Draft.js, and we can't be 100% sure it won't change at some point.\nDarn! I thought that might be the case.\n\nI'm personally not into the \"disappearing text\" effect to hide content\n\nOk, let's leave out the box shadow for now. I was on the fence about it.\n\nEither way, this would not change the uneven vertical spacing of the tag chips: it just moves from an element to another, but visually is the same.\n\nThey are slightly different. If you add top padding to the tag field, it'll look awkward because the tags are not centered in the white space:\n\nIf you add bottom padding to the bottom of the note, there will be equal space around the tags:\n\nOnly at the bottom, there will be some breathing room below the note:\n\nWhich is ok imo.\n. One correction, we don't hide the email tags on MacOS, only on iOS. Not sure about Android.. Adding email as tags always seemed like a hack to me. Originally there was no interface for sharing. Email as tags is a novel idea, but a separate UI I think is better.. No hard opposition, but I don't think it's ideal that the email tag will disappear after you enter it. Not sure what the solution is, maybe disable adding email tags altogether. But, I also want to accommodate the users that still try to type in email addresses into the tag field.\nJust checked iOS: if you try to put an email into the tag field, a popup is shown, saying that collaboration has moved. Maybe that's the best way forward?. Thank you for providing screenshots for the design review!. As of 1.0.8, you can export all of your notes as .txt files. File > Export Notes\nYou can't export single notes, but this should be able to cover your needs.. dupe of #312 . dupe of #274 . This possible might help https://github.com/electron/electron/pull/4181\nalso https://github.com/electron/electron/pull/4843. Electron does not support this currently. We could do a keyboard shortcut.. Technically I think this is a dupe of https://github.com/Automattic/simplenote-electron/issues/37\nMacOS for SN seems like a good approach. If the cursor is not focused on the editor, then you can simply use the up and down arrows to change notes.. #349 . Nothing to add. I think if we do anything, it would be a sync indicator as outlined in #459. @dmsnell That makes sense, but I don't know enough about snap to make an informed decision.. For some reason I can't reproduce this. @dmsnell, do we have this shortcut?. Can you paste your Simplenote version here, just to be user I'm on the same?\nSimplenote > About Simplenote\nThanks for testing out the Mac beta btw.. I believe we try to keep this behavior consistent with all of the apps, but here we deviate from the Mac app from the App Store. We decided to not create a list if there is no space between the dash and the next character. This is more standard in web editors and markdown. We don't have any plans on changing this in the near future.. Not possible right now, but a good idea.. Nice, I don't use Windows/Linux so I'm sure about what is the expected behavior. Does this have any effect on Mac? \nDid we hide the menubar before this on Windows/Linux or was it always shown?\nWhat is the part of the gif when the toolbar changes from white to black? That is the only part that seems weird to me.\nOther than that looks good!\n. Thank you very much, that makes sense. I think this looks good to me. \ud83d\udc4d \n. cc @gerv in case you are interested.\n\nSimplenote will try to load the fonts in a sequence from left to right. For example, it will try to find the first font, \"-apple-system\", and if it doesn't find it, it will look for the next font in the list, \"BlinkMacSystemFont\". Since your computer has the \"Ubuntu\" font, it loads that one.\nBut does electron do font substitution if a glyph isn't found, like a browser does? If not, then this could be a problem, because the first font found will be used, and if it doesn't have the right glyphs, you are outta luck.\n\nI'm not sure. Electron should behave the same as Chrome or any browser in this case. We can narrow the issue down by testing the web only version of the Electron app. It could be a problem with Electron, or just the font stack that we are using in the CSS.\n. Wow, great detective work. I've update the issue title so that it includes the Snap aspect. Thank you for this report! We will need to dig deeper into how Snap works.. Font styes changing in Preview mode is expected, but it should not change from RTL to LTR. Thanks for reporting, we will look into as soon as we can.. I will cross link the main localization issue: #16 \nClosing because this is a dupe.. I think someone mentioned this to me a long time ago, or I thought about it while first making the icon. Wasn't a big deal to me at the time, since the feature allows you to scrub back and forward.\nAccording to the review we will also need to update Android (I don't have my device with me atm).\nWouldn't be a big deal to fix. We can just flip the icon horizontally.. Here is the path for the updated icon. Should be an easy replacement:\n<path d=\"M8.7,14.7l3.3-3.3V6h-2v4.6l-2.7,2.7L8.7,14.7z M11,2c5,0,9,4,9,9h-2c0-3.9-3.1-7-7-7s-7,3.1-7,7s3.1,7,7,7c2.4,0,4.5-1.2,5.7-3H13v-2h7v7h-2v-3.3c-1.6,2-4.2,3.3-7,3.3c-5,0-9-4-9-9S6,2,11,2z\"/>. Yep, that's why I initially just settled with the arrow pointing forward in time. This icon has a mirror effect and looks \"backward\". But, you saying that validates my concern. I can try and alter the icon so that it looks more like the iOS icon.\nAlthough, after looking at it for a while it does seem normal now.\n. Yea, iOS will be a bit more work to change since those icons have a different thin stroke style, and we would need to replace all 4 icons (Send, History, Collaborate, Trash). Not a ton of work, but does need to happen at some point.. Ok, sounds like the issue is with the web app and the Android app, not this app (Simplenote Electron). This is the repo for the Simplenote app for Windows and Linux.\nPlease file you issue here! Thanks!. Also http://commonmark.org requires a space and its the closest thing we have to a standard format.. @natanielcz Can you please add a before and after screenshot of the changes you made? Thanks!. Sorry for the late response. A few things to think about:\n\nThe sorting options might complicate the idea of using time headers to group notes (last modified, last created, alphabetical, reverse).\nWe've never had the date in the note list (if we have it's been a very long time), so this is a pretty big change we should think about across platforms if we proceed.\nThe date as it is right now is way too long. It should be something no more than 5 or so characters, like 12:38 AM, Jan 12, or 8/12/17.. I love the idea of adding the modification date when the date sorting is active!. Pinned notes should be grouped at the top. I think they should be sorted by modification date if it's selected in Settings. So, the list would display the pinned notes first, then the rest.. This is cool, hopefully I'll have time to test it out. Judging from the screenshot, I think the biggest pain point will be users not knowing how to exit 'edit' mode. ESC key is nice, but not obvious in the UI. \n\nI could imagine something like the top bar changing color with an X button to escape edit mode. The bar would go back to normal in preview mode.\nI still like the idea of something in-between, like highlighting the syntax, but not displaying it exactly how it will look in the preview. I do like the idea of simplifying things and getting rid of the idea of a preview though. Or rather, getting rid of the switching back and forth.\nCounterargument is Medium and others do this well, so why can't we do something similar?. Design looks good!. Might be cool to use a single open source monospace font, instead of relying on the system's font. But, we do already use the default system font for the main sans serif typography.\nHere is a font-stack I pulled from Medium:\nfont-family: Menlo, Monaco, \"Courier New\", Courier, monospace;\nand one from Github:\n\"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\nI don't understand the Medium one, since most of those are Apple-only I think. I like the Github one, although I haven't come across SFMono before \u2014 would be cool if it worked for us and the Electron Mac version. Courier strays pretty far from what a \"normal\" monospace font looks like nowadays, so I like that they put it last.\n  . Just came across this article from IA Writer:\nhttps://ia.net/topics/in-search-of-the-perfect-writing-font/\n\nIf you don\u2019t own a copy of our writing app, you will find iA Writer Duospace on GitHub, so you can use it in the writing app of your choice. We are looking forward to hearing how it feels to you.\n\nLooks like they put in a monumental amount of effort to choose the perfect writing font. If we want to bundle a font in SN, this might be a good monospace font option.. It looks great! We will need to check language support. \nIf that font doesn't work, there are a lot of other open source fonts suggested in the original issue #274 . Sorry for the slow response... I'm not sure, I just remember some language issues people had with Source Sans. My best guess is to create a user on your computer and switch the language?\nEdit: not sure what I was thinking about regarding the language issues. Can't find any issues in this repo. I like the idea of just using blues and grays, and not changing the font size for the # Headers.. Only hesitation I have is that it bumps up the icon count to 6 for small viewport widths. 5 is the ideal maximum. I wouldn't say it's a blocker though, since this is a desktop app.. Developers: we'll need to evaluate all the text contrast and see if it meets AA.. Thanks!\n. The Scss all seemed to work without this require. Not exactly sure why.\n. These pin icon hover states (53 \u2013 86) might be a bit convoluted. I'm open to suggestions.\n. Maybe too much nesting here in the scss? We never talked about it, but generally we try to limit nesting to 1 or 2 levels, and mostly reserved for things like &:hover.  Also, I don't think it's necessary to nest everything under .about since most things here have unique classes.\n. Let's use the border radius variable here and throughout the other pill button styles.\n. Hey yea sorry, they should be the same.\n. I couldn't figure out a way to keep the text centered at a fixed width, while keeping the scrollbar fixed to the right. Do you have any ideas on that?\nping @srgpqt: not sure if you saw my comment\n. Not sure, looks like all of the icons are set up that way too. What are some of the advantages of doing it this way? I'm not familiar enough with React.\n. Ah, interesting, did not think of that.\n. Hm I'm not familiar with that discussion...could be interesting. As far as I know this:\n.div {\n  .inside {\n  color: red;\n  }\n}\nIs the exact same as this:\n.div {\n  & .inside {\n  color: red;\n  }\n}\n. Whoops\n. can just be opacity: 0;\n. can just be opacity: 1;\n. same here\n. same here\n. left: 9px; will make it look a bit more centered\n. We could probably do some fancy flexbox here, but this works fine. No reason to make it complicated.\n. I haven't tried out the PR, but no indent should be required imo. Meaning:\n1. type dash character + some text (With space or no space, doesn't matter.)\n2. press enter\n3. new line is created with dash\nAfter creating a new line, and you hit tab, it should indent the list item, creating nested lists.\nThis is how the Mac app works, and I think it's fine. iOS app works the same way.\n. On second thought, I think a space after the character (- or *) should be required\n. This addition is to override the rule set right above this change:\n*, \n*:before, \n*:after {\n    cursor: default; // Make everything use default cursor\n    box-sizing: border-box;\n}\nThis was originally added because of a recommendation for building Electron apps, because native apps don't have pointer cursors at all. Except for web links that open in a browser, those should use the pointer.\nI'm not sure what web elements use the pointer cursor, but we could just do this:\nbutton {\ncursor: default;\n}\nAlthough, if there are many types of elements that use the pointer, it might be easier just to force everything to use the default cursor, and add in exceptions.. I think for the most part we have used button; perhaps we don't have any non-web links that use a.. Nope, it can be removed.. ",
    "srgpqt": "May I begin work on this?\n. Can the navigation sidebar be hidden, like on the Mac app?\nIf the navigation sidebar is visible, and note info sidebar is opened, does the navigation sidebar get hidden offscreen by the sliding animation?\n. So selecting a tag would close the navigation sidebar?\n. If you cannot toggle the sidebar on/off, as you say, how do you open it in the first place?\nIs that what the icon on the left of the search field is for? An arrow pointing left perhaps?\n. Status update:\nI've completed most of the work for this now ; currently finishing up note editing.\n. I can implement whichever design you want ; the one you proposed initially wouldn't be much more work.\nI'll let a8c decide which one I should do :smile:\n. What is the difference between shareURL and publishURL in the note data?\n. Merged in c9dab96\n. If we opened a separate Electron window that looks native like that, we'd have to build a separate style for each platform we support (a Mac-style settings window would look weird on Windows and Linux, for example). Even Slack doesn't do it :)\n. For the web version, there is no menu so it should probably be in the settings pane too.\n. Should the font size be remembered between app launches, like other app settings?\n. Right, I don't think there should be any font size setting on the web version -- we can rely on plain old browser zoom there.\n. How would a user trigger this popup? Should there be a button in the interface somewhere?\n. @drw158: gotcha\nFrom my limited time using the Mac app, the popup seems to only appear when selecting \"Collaborate\" from the \"...\" menu in the upper right of the app window.\n. Any guidance on this?\n\"Do we have a translation infrastructure here like we do in our other products?\"\n@dmsnell @beaucollins\n. I took a look at the i18n mixin in calypso. It's a little scary.\n. I'm not sure how to proceed here. Do I bring in all of calypso's i18n stuff, which includes jed + momentjs + tzdetect + superagent + interpolate-components + emitter, or just a subset of those?\n. Merged.\n. Redux is fine by me, I'll look into this soon.\n. I've rebased the branch against master, will continue the work started here.\n. Not working quite right yet, but we're almost there :)\n. @dmsnell \nReady for review / merge :)\n. On Linux, Electron uses GTK.\nIt'll work fine under gnome and kde as long as GTK is installed (which is the already the case for everyone using desktop linux)\nI just fired up the app on Ubuntu and it looks and behaves pretty much exactly like on a Mac.\n. @jkudish all of that applies to every platform, not just Linux. We'll have to take care of packaging the application for each platform. IMO we should track that in a separate issue.\n. Is this still relevant now that the scrollbar has custom css applied to it?\n. Implemented in 5216e29\n. May I begin work on this?\n. Fixed by e27a596\n. Error is gone, but electron is showing a blank page.\n. Babel updates should have no effect on this.\n. Well, for some reason webpack-dev-server is reloading the whole page when a change is detected.\nBasically hot module reloading isn't working quite right, and I can't quite figure out what the issue is.\nMaybe that's why the example app didn't use webpack-dev-server?\n. I haven't spent much time on this either way, and I don't really care about what tool we use. Heck I can use something different on my machine without pushing it to github if I really did mind.\nThe issue initially came about because running the dev server (\"npm start\") just didn't work at all, so developing was a bit difficult (having to rebuild with \"webpack\" command every time I made a change).\nI've found the cause of that and pushed a fix in a separate branch, but I really do think the new hot module loading method is much better without the webpack-dev-server. You get errors right inside the browser whenever the build breaks and reloads are instant, and don't lose react state. I'll update this branch to work with the new method, but I'll leave it up to you to merge or not -- instead you can merge my other branch to at least fix webpack-dev-server: dev-server-fix\n. Yup, your branch concatenates the original \"entry\" webpack configuration instead replacing it with \"app\" so it works. I'll do that in my fix branch.\n. You can merge this and/or the dev-server-fix branch. I'll leave it up to you guys :)\nYou should give this branch a try, at least.\n. Already implemented.\n. No translation infrastructure yet.\nIf you guys have a standard one in your other products, we can use that.\nIf not I can easily implement one.\n. Yes, I've rebased this branch on top of the hot-reload branch to make development faster. I'll split it off later on when it's ready for merging.\n. Yeah, not 100% complete yet but it can be merged.\n. Question: how do I get the list of collaborators for a note? look for tags with @ characters?\n. Ah, didn't know Sass was used on all your projects.\nRegarding whitespace, Stylus is flexible. It supports both sensitive and insensitive whitespace, it's just smart about it.\nI'll see about bringing autoprefixer into the project. Thanks for your input!\n. Yes, I'm aware. simplenote-electron just isn't set up for it yet. (we're using webpack on this project)\n. I ran the linter with this configuration and got 1694 linting errors.\nMost of them are about space-in-parens, which requires spaces inside parens.\nShould we disable that particular linting rule, or do you know of an automated (and safe) way to fix these?\nAn esformatter configuration file perhaps?\n. Okay it seems esformatter has configuration options to fix these. I'll see if I can make a good config to match the linter.\n. I've added an esformatter configuration file that automatically fixes most of the code style.\nYou can review it and run esformatter -i 'lib/**/*.js' to try it out.\n. Not yet merged.\nThis is a (relatively) large diff so we should merge the other branches first, to avoid future merge conflicts.\n. Yes, already planned. The navbar links will remain on the web version though.\n. Object.assign is supported in node 4.0 and higher.\nSeems reasonable to expect developers to have a reasonably up-to-date version of node?\n. The register hook would take care of ES6 for files that are required after the register hook, but not the current file that contains it, no?\n. I just tested it -- it appears you are correct. Quite odd!\nI'll add the babel/register require to the webpack config.\n. Fixed.\n. :+1: \n. Alternatively to disabling the \"New note\" button, clicking it could bring the user to the \"All notes\" view?\n. The sign out button disappears when viewing the trash?\n. While this can certainly be done, I don't see the benefit?\n. Doesn't seem like much of a benefit. There aren't that many icons per component.\n. :+1: \n. Looks alright.\nBut: why remove the css require() calls from the components? The idea was that we could directly associate the CSS to its component class. Either way is fine by me though.\ncc @dmsnell \n. Found the Slack conversation about that :\n@dmsnell wrote:\nI\u2019m not sure it\u2019s taken off to the point of being considered idiomatic with \u200bwebpack\u200b, but it definitely helps locality issues when jumping into new projects.\n\u201cWait, what? How did that style get included? Where do I @include it?\"\n. I also like the idea of require()ing the css inside the component files.\n. You should remove the @imports for the files that are require()'d\n. I'll let you and @dmsnell decide this.\n. Fine with me. You could remove the last commit (\"Adding require\") though.\n. It feels weird that the separating lines don't go all the way to the sides\n. :+1: \n. Yes, it's possible to slide the popover over the content area, but this deviates from the design proposed by dave (@drw158).\nIn any case, perhaps we can merge this, and review the design afterwards?\n. You could check it out, but it's not quite done yet\n. Ok now it's ready.\n. Now updates affected notes with the new tag name during rename, or removes them from notes during tag removal.\n. @fredrocious thanks for chiming in. If my understanding is correct, the tag id (key) should be completely ignored in maintaining the tag <-> note relationships. The id is only used to issue commands to simperium.\n. Another observation : if the app updates a tag object but fails to complete the update operation for all tags (network failure?), the data would be left in an inconsistent state.\nTherefore the only sane choice here is to create a new tag, update the notes, then delete the old tag.\n. I'm not seeing the behaviour you describe. It's a totally ordinary form with totally ordinary labels and input fields..\nWhich browser (and version) / OS ?\n. Was easy to fix once I could reproduce :)\n. Fixed.\n. Ready for review + merge\n. Yes currently the account name is not stored anywhere so the settings screen can't display it.\nIt should probably be stored in the app state during login?\n. Alternative to setting a fixed height : if the dialog box was not vertically centered (instead simply aligned near to the top of the page) it wouldn't jump around when switching tabs.\n. Here you go, made some changes based based on your feedback. :smile:\n. The 640px viewport height rule was specifically added for mobile. On those small screens the dialog title and dialog tabs take up too much space and it just feels awkward.\n. Done.\n. Ready for review / merge\n. That's true, it's mostly to make the css easier to understand and nicely encapsulated.\nTypically I try to have at most 3 levels:\n1. component\n2. component children classes\n3. tags and pseudo classes\nThis makes it easier to see that all the selectors only take effect inside the given component.\nEither way I can remove level 1 for most of these if you would prefer that.\n. @roundhill should be fixed now\n. Ready for review / merge\n. You should be able to get to settings from the navigation sidebar on the left\n. @dmsnell my first attempt at this used placeholders as you describe, but over time it became a pain to maintain the theme as new components were added or changed. A few simple color-* classes made things much easier, and they're not used very often. Sass variables are of no help here, as far as i can tell.\n. @roundhill Yes, the font size option will affect it, once it is implemented :smile:\n. Not using lodash anywhere yet.\nIf we do bring lodash in, do we bring all of it or just the modules we use?\nhttps://www.npmjs.com/browse/keyword/lodash-modularized\n. @dmsnell I made the adjustments you suggested :smile:\n. Ah, right, if you use this branch you'll need to recreate database indexes.\nEither clear your cache / local site data, or use incognito (private browsing) mode to try this branch.\nAdded a note about that in my first comment\n. Right, those issues have to do with the storage backend. I'm not very familiar with it yet, but am learning more about it (simperium and indexeddb for the most part). I may have a solution for the case sensitivity.\n@beaucollins \n. I know there's one or more issues with the redux <=> simperium syncing. I've been poring through the simperium code to better understand it but haven't finished looking into it yet.\n. The light gray border separates the note from the tags.\n. Interestingly, the mac app prints the tags (like the electron app does) but the web app does not print them.\n. Hmm i could've sworn i saw the tags printed in the mac app, but they don't print now. Guess I was mistaken.\nI'll remove them from the electron app print.\n. Yes of course :)\n. Currently there is no way to determine who the owner of a note is, as far as I can tell. Either way, that should be its own separate issue.\nI've fixed the collaborator ellipsis and added html5 email validation.\n. Looks good :+1: \n. Right, that's because changing between \"all notes\" and \"trash\" doesn't (and never did) change the currently selected note. The deleted note toolbar UI matches whatever note is currently displayed.\nAs for the border, I removed the border in delete mode to match your design, thinking it was intentional. I guess I'll put it back?\n. Not using webpack-dev-server anymore, and the hot reloading example used \"eval\". However I think we can safely use \"eval-source-map\" which should give us source maps.\n. We can remove it if you don't think we'll need this later on.\n. webpack-dev-server uses express behind the scenes:\nhttps://github.com/webpack/webpack-dev-server/blob/master/package.json\nEssentially this change should reduce complexity.\n. I understand that you see it that way, I'll see if this approach can be adapted to use webpack-dev-server..\n. Well, it seems to be the recommended way to setup hot reloading with React.\nhttps://github.com/gaearon/react-transform-boilerplate/\nPerhaps there is a reason they decided not to use webpack-dev-server anymore? The old way (which we currently use) with react-hot-loader has  been deprecated:\nhttps://github.com/gaearon/react-hot-loader\n. I've updated the pull request to keep webpack-dev-server.\n. We sure can, in fact I've already created a simple .eslintrc configuration file. You should update it to match the Automattic standard. We can also plug automatic lint checks in the build tool.\nJust added a pull request for this : #59\n. Right, well I was following the style that was already there. The event handling functions that I saw were already in the onSomethingHappen style so I kept with it. Happy to change it to whatever is the official style.\n. Fixed in 5156bb9\n. Well, I was planning on changing the function to do something a little different in one of the if branches.\nI guess I'll change it when I get there.\n. everytihng typo ;)\n. Agreed.\n. I have no idea, this is your code that I only rebased and did minor changes to the app.jsx and note-list.jsx components to resolve conflicts.\nYou are probably right, I'll review and fix the code.\n. Again, this is your code (conflicts resolved) but I mostly agree with you here.\n. Agreed.\n. I really wanted to avoid polluting the redux actions with the event properties though. Wrapping it inside the fat arrow avoids this.\n. Not overwriting it, this is just the safe way of using hasOwnProperty in javascript.\n. That only works if we pass \"undefined\" to the function. I wanted to handle \"null\" as well.\n. Yes, you are correct, but Object.keys() creates a new array which is somewhat undesirable.\nIt seems like there is no one best way to iterate the enumerable own properties of an object, but I think the method I used here is appropriate in this case.\n. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty#Iterating_over_the_properties_of_an_object\n. Beats me. It was there before so I left it there. I also think we should use lodash for this. Separate issue!\n. It was copied from the earlier code, but I'll rename it.\n. It just seems cleaner to avoid sending irrelevant data to the store.\nI'll leave it up to you though, feel free to modify this.\n. Avoiding unnecessary object allocations is a good practice in general.\nGranted, here the allocation is only done once at startup so it's not so important, but after all my years writing Javascript it feels natural to do it like this.\n. We do control all input. It's just good programming practice.\n. Hmmm. Surely most experienced javascript developers would instantly understand it?\n. Anyway, I've changed it as per your recommendation.\n. I guess it's all subjective!\nI find my 2 lines loop construct is a lot clearer to understand than a bunch of map, concat and reduce calls.\nEither way you can adjust the code to suit.\n. Ha ha. Funny. You obviously know your stuff. I guess our brains work differently! Who would've thought.\n. Well according to your design, they shouldn't have the same border radius.\nOr do you want to use the same border-radius anyway?\n. Should use flexbox to center this\n. ",
    "fredrocious": "\nHow versions work: The granularity of what constitutes a new version is determined by the clients, on most of them, the logic works like, if user makes changes and has stopped typing for some seconds, then sync (which creates a new version). \nThe # of versions we keep for Simplenote is: we will attempt to keep the most recent 60, and every 10 after that, so history might look like (if we are at version 100): 1, 11, 21, 31, 41, 51-100 (contiguous), this is also dependent on the size of the data, so there may be fewer\nSo mainly, which versions are available are determined by server, generally we will have more of the most recent, how much time passed between versions and how much data has changed is dependent on when clients choose to sync (save)\nThe dates indicated in notes can be changed by the client (they aren't assigned by server), so it is possible that there are strange values (either invalid dates, or non-sequential)\n\nCouple thoughts:\n- I like having some indication of date, though it will be a challenge figuring out sensible labels and spacing, because of variability in the versions (you might have 50 versions over the span of one hour, then a few after that over a span of months), and like the idea of changing spacing to visually indicate frequency of updates\n- It would be cool to have some sort of wordcount or maybe some other way to indicate how much changed inbetween versions \n. This is because simperium initially (and still does not) support any kind of model relationships natively.\nIt would be nice if, in the tags field of notes, they were instead tag IDs, so when you update a tag object, you can just do it one place. It would have still been possible to use IDs instead of the tag name in notes but because of the lack of support in server for enforcing these \"foreign key\" things, dangling relationships would have been possible which would have been not so nice.\nSo the work of maintaining these relationships is left to the clients, when a user renames a tag, the app can choose to:\n1) Update the tag object, update all note objects with that tag\n2) Delete the old tag object, Create a new tag object, update all notes with that tag\nAs long as the end result is the same it doesnt really matter.\nThe app should:\n1) Maintain the tag <-> note.tags field relationships\n2) Be resilient to errors, because another client may not be so vigilant (or a vigilant client may not have had a chance to finish its work)\nBy the \"relationships\" in 1, I mean: Every string in the tags array of a note, should correspond to a tag object with the exact same string in its name field. \nBy 2. I mean: Since it is entirely possible to update the tags field of a note without creating or updating a corresponding tag object, the app should try to do this if it notices a discrepancy. Example: If the app notices a note with the string \"ABA\" in its tags array, AND it's tag bucket is up to date AND in the tag bucket there does not exist a tag object with a name \"ABA\", it should create it.\nAddendum:\ntag objects have a key (like all simperum objects), and within the object have a name field. \nSimperium keys are restricted to be: [a-zA-Z0-9_\\.\\-%@]{1,256}, but name can be any unicode string\nGenerally tag object keys are the same as name but url encoded where necessary\n. :shipit: \n. ",
    "jasmussen": "Should be almost good to close with recent enhancements, no?\n. Just gonna merge this in, I need the favicon. Can't do without it. \n. ",
    "jleandroperez": "Yup, just confirming, that shows up right after clicking Collaborate :smile: \n. There we go... filed an issue in the web app repository. Thanks for the heads up @drw158!!. @dmsnell I'm afraid that tags, in Mac / iOS, have three fields:\n- Index (refers to the \"visual position\")\n- Name\n- Share\nThe data model is definitely up for a cross platform refactor. I'm not sure, though, if the lack of an actual UUID is the root of this specific issue.\n. That would be correct Dan!. ",
    "dmsnell": "We might need to pull in some expertise on this. I'll ping some people in our Globalization team.\ncc: @deBhal \n. > I like the idea of using something like https://github.com/yahoo/react-intl\nNice find!\n. \n. While working on the Monaco interface I built this so that we wouldn't have to destroy the editor context the way we have been. Many issues will be simultaneously solved: wonky cursors, losing the undo history, accidentally undoing remote changes, etc\u2026\nI felt like having access to the patch itself would be highly valuable and I'd like to expose more deeply the underlying data changes to the notes. For example, there are good ideas to show activity based on what segments of a note have been recently changed.\nGetting the cursor shift introduced from a patch then became trivial after having the parsed form in app state.. Needed is strong wording. We can do amazing things in terrible ways, hehe :wink:. This would be awesome and I think we're already at the point where we should be abstracting away UI interactions from the actual visual components rendering the app state.\nI don't care if we scrap this branch or if we stick with Redux, but that would be a good choice for us to use. In an app like this I think we have a valid case for trying to stick to a single global state and use a \"smart component\" for the app itself and also for the part rendering the \"note.\" I wonder how far we could get with just these two components being hooked into the store.\nIt should play extremely well with loading from Simperium, controlling app navigation, managing tags, etc... and if we do this carefully enough at the beginning here we will reap the benefits ten-fold. For example, if we were to push everything to a global state, it would seem incredibly useful and productive to build in a way to force in a state for development purposes.\n. @srgpqt I left a few comments and I'd be more than happy to discuss them with you - feel free to ping me in Slack if you want.\n. @srgpqt this looks better to me. It's probably worth jumping into in another PR as well the update to Babel before we get too far into this. In my own experiments it takes some work to changeover and I'm thinking it might be easier now than after doing a bunch of work, but maybe not?\n. > Babel updates should have no effect on this.\nRight. It's a tangent, but I just wanted to throw it out there while we were talking about the build system.\n. :shipit: \n. @srgpqt go ahead and do whatever you want to do. You can throw out the dev server. I've not personally had any problems with it reloading the page but this shouldn't be holding us back.\n. @drw158 and @rachelmcr suppose we want to add in support to search for notes without a tag and so we choose tag:untagged as the search string. It sounds silly, but how would we search for a note with the tag untagged?. the first option seems reasonable. I would hope that it's a rare case but I'm going to try and see what all the other apps already do in this case before moving forward. it would be great to unify all the behaviors. This won't make it in for v1.1.0 but we can hopefully get it in later.. Do we have a translation infrastructure here like we do in our other products?\ncc: @beaucollins \n. @srgpqt it would also be really helpful to split this PR up into separate ones. For example, the description talks about implementing a navigation sidebar, but the first changed file in the GitHub view actually adds Babel config, then some dev server stuff. If we could separate these different domains into separate PRs it would be much easier to review and also provide some better opportunities to discuss the actual changes.\n. @srgpqt this is just a plain copy\n. @srgpqt what's the status of this? is it relevant anymore? did we already merge in the styling options to the master branch?\n. Closed in #182 \n. This is why I usually prefix my webpack config with the Babel register hook. It takes care of ES6 for older Node version.\n. I've never had trouble with it in my webpack configs that Object.assign() some base config. Also, I think \"after the hook\" is on a line-basis, not a file basis.\n. > it appears you are correct. Quite odd!\nwell despite what the odds might make it out to be, it happens every once in a while :wink:\n. Could we take the opportunity here to go ahead and refactor this file? Looks like it could use some ES6 love and some other love.\nOther than that, looks fine to me. I don't like how those vars are in the middle of the function body since we don't really do that here. Instead, we prefer to manually hoist the vars to the top or use let/const instead.\n. Looks great. :shipit: \n. :shipit: \n. @drw158 can you clarify what, if any, tasks remain for this issue?\n. Code looks good :+1: \n. w00t. I've been waiting to use these. our other projects aren't yet able to use React 0.14\n:shipit:\n. I'm going to close this issue. It's not because it's not important but rather because we're both very aware of the performance issue and it's a very difficult task to improve upon.\nAlthough the reasons for the performance impact have changed (and it's probably better now than it was when this issue opened) they still remain. The biggest performance bottleneck right now is on very long notes and the time is spent initializing the draft-js editor.\nRelated: #501 . Was there not a more generic way of adding these attributes than to append the class names everywhere? It seems like this would be a good place to simply define a few SASS variables and use those variables directly in the components as a part of describing the actual components instead of tacking on the color-bg, color-fg, and color-border classes.\nFurther, maybe using some placeholders and @extending them would further reduce the duplication\n. > do we bring all of it or just the modules we use\nwe should be able to bring it all in and let webpack do its thing, but we still import the functions with their individual paths\u2026\n``` js\nimport includes from 'lodash/collection/includes';\n// instead of\nimport { includes } from 'lodash';\n```\nhonestly I don't know if I have a strong opinion. Maybe if I knew more about the difference or ran some tests to compare post-webpack what it spits out I would.\n. Hi @srgpqt - I'm somewhat back from my vacation, though I'm currently at WCUS so I don't know if I'll be back 100%. I left a few comments here. Thanks for your reply already!\n. @roundhill I left a few comments which you can choose to ignore if you want\n. @roundhill I didn't test this but the code looks good to merge. Please let me know if you want me to do further testing/review.\nBefore committing we should squash these commits into one.\n. Closed in #217 \n. Tracker in Chromium: https://bugs.chromium.org/p/chromium/issues/detail?id=470655\nAccording to that page this is not dependent on the font-family in use\nIronically, it works if I use webding or cursive for the font-family :smile:\n. This isn't a blocker, but I just saw the ActionMap and wondering how useful it is as an abstraction. Do you happen to know if we use it in more places than this settings file?\nWe took an object-oriented stateful design and replaced it with a stateless functional approach, which was a win. But then, we wrapped that functional approach inside a new stateful object-oriented inheritance-based container. Not so sure about that\u2026\n. > should we just move the methods up to the parent?\nprobably not at this point if we use it elsewhere. it's definitely worth paying attention to each time we touch it though. if we find that it weighs too much, then maybe we can consider changing it. if not then it should be fine.\n. @drw158 looks good other than a quick comment I made about how we export the logo\n. LGTM.\n. @roundhill I didn't see any code to specify these - are they automatically used by Electron?\nIf so, :shipit:!\n. @drw158 looks like this has some merge conflicts\n. @drw158 looks fine to me, though I'm not sure how qualified I am to review these changes because of the design element of them\n. Looks good @drw158 - :shipit: \n. @roundhill things here are beyond my immediate knowledge, such as the external script loader. I'm not sure if ES6 syntax is fine here, but it could help clear some bits up in the code if so.\n. :shipit:\n. :shipit:\n. Dupe of #207 \nResolved in #208 \n. :shipit: \n. This is something that isn't going to work out very well, @drw158. Remember that JSX is just syntactic sugar for the underlying JavaScript. After transformation, you get this\u2026\njs\n'url(' + \"data\u2026\" + SmallSearchIcon() + \u2026\nThat SmallSearchIcon function returns an object with various methods, such as render(), which React calls at the appropriate times to generate DOM nodes. It's definitely not a string.\nOn the bright side, we could accomplish this by setting the SmallSearchIcon as a constant string literal and export that value.\njs\n'url(' + \"data\u2026\" + SmallSearchIcon + \u2026\nWe could also create a wrapper to turn image data into the data URI.\nReact components can't be thought of as synchronous function calls, meaning we can't create a React component do multiply two numbers together and get the result - only display it in the browser. We technically might be able to call the render methods directly, or use a new stateless React component (which is just a function) but those ought to be returning DOM intents, that is, a representation of a DOM hierarchy that React parses to draw the real DOM.\n. Well you could create an icon file with the static data URIs for the various icons, then use that file both in an <Icon /> component and directly in places like this\n. :+1: \n. @roundhill I wonder if this could be caused by the fact that we are requesting alphabetical as an index key when that column doesn't exist. If sortType is alphabetical, we should try and fetch the content index.\nNot sure I can reproduce what you were seeing either. Do you have more details on what issues you were having and how to reproduce?\n. Oops, please ignore my previous comment - I still had my fixed branch checked out. Now that I'm back on master, I can see that there appears to be no sorting done at all in Firefox, regardless of the sort options.\nInterestingly enough, the Firefox Developers Edition sorts properly.\nThis seems to happen only sporadically, and I'm currently trying to investigate/pin down when it happens.\n. Closing as we have no immediate plans for general release. We can revisit this (or rediscover it) if and when we do.. @roundhill here are another few comments, particularly centered around revisions and selection - trying to make a clearer expression of what's actually happening.\n. :shipit:\n. > I still had to have the empty string check there, because the node editor would focus when you opened the tag drawer.\noh no worries @roundhill ! I think I wrote a buggy example in my comment. Mainly I was looking at the check if the DOM node exists.\n. :shipit:\n. @roundhill I tried to answer your :question: and think this is ready to :ship: if you are happy with that answer.\n. @roundhill I'd recommend changing the formatting on that ternary mentioned in the comment but this looks good otherwise!\n. @roundhill I left a comment even though I figured it was out-of-scope for this PR. Feel free to :shipit: with or without a response.\n. :shipit: \n. @roundhill this looks good other than the fact that it has merge conflicts\n. @roundhill I am interested in our reasoning for dateFormat over moment. Since it doesn't appear like we currently use moment I don't have a problem really with it, but want to just pause and make sure that was intentional\n. @roundhill it's probably worth a good look at moment then!\nhttp://momentjs.com\n. Looks good @roundhill ! :shipit:\nI left a few comments and you can choose to respond or ignore them. I think your code is ready to go either way.\n. Code looks fine. :+1: \n. :shipit:\n. @roundhill this doesn't seem like a bad way to do it. Calypso does its best to not try and \"detect\" a particular browser or device, but it does make decisions based on the screen-width as the primary driver.\nOn the other hand, this is a great place to return to principles of composability that will help us out greatly here to keep things organized and maintainable. An issue I have with the approach in the code is that it is mangling the display-size logic right into the heart of the app when all we really care about is whether or not the screen is small. The problems in particular here are that we block our ability to test because the value is dependent upon a browser resize listener and additionally that it adds confusion to the component initialization.\nReact handles things like this really well by means of wrapping a component in another component. For example, consider that the App component took a prop, isSmallScreen; it could do everything it needs to do and not care about how that value was generated. If we wanted to change the procedure, we could do that without touching the app. Check out my new component below.\n``` js\n// BrowserShell.jsx\nexport default = Component => {\n    getInitialState() {\n        return {\n            windowWidth: 960,\n            isSmallScreen: false\n        };\n    },\ncomponentDidMount() {\n    window.addEventListener( 'resize', this.updateWindowSize );\n},\n\ncomponentWillUnmount() {\n    window.removeEventListener( 'resize', this.updateWindowSize );\n},\n\nupdateWindowSize() {\n    const { innerWidth } = window;\n\n    this.setState( {\n        windowWidth: innerWidth,\n        isSmallScreen: innerWidth <= 750\n    } );\n},\n\nrender() {\n    return <Component { ...{ this.state } } />\n}\n\n};\n// App.jsx\nimport BrowserShell from 'BrowserShell';\nconst App = React.createClass( { \u2026\u00a0} );\nexport default BrowserShell( App );\n```\nNow the main app gets those properties as props and doesn't have to worry about keeping track of them, updating them, or anything. Additionally, we could instead test with <App isSmallScreen={ true } /> etc\u2026\nThere might be some details amiss on the right way to create this higher-order wrapper, but I'm on a flight and about to lose my WiFi so I'm going to submit right now.\n. @roundhill there is also the option of using a Mixin here, though that may be less testable. The benefit of a Mixin is that you wouldn't need to wrap the component, but the drawback is that it becomes harder to reason about what is happening when reading the code.\n. > { ...this.state, ...this.props }\n\nHrm, tried it and it errors out with Unexpected token\n\nSounds fine. There are some weird things still about this syntax, plus React has its own way of doing it.\n:shipit:\n. @drw158 could you suggest a preferred ordering of the tags?\n. thanks @roundhill - this is a great fix. \n\n. +1\n. probably nothing more than a massive security problem :smile: \nseems like something worth investigating. a :question: I'll look into and maybe someone else who has been working on this more knows (cc: @roundhill @johngodley) - do we have uninstall hooks for electron? could we be storing settings in a user's home directory when we're not already doing so?\n@drw158 I could see this attack vector, \"oh here you can check your notes on my computer, I'll uninstall it after you are done to give you the confidence that you're not giving me your login\"\n. @roundhill I see this as a pretty big issue, but also have trouble thinking that there might be a feasible solution. Maybe it's not so bad as it sounds: designed to make updates or accidental uninstalls easier to deal with. I personally agree with the wipe-everything side of the debate around Atom than the view the maintainers hold.\nIf we roll this out, we at least have this as a place to discuss.\n. > Somehow know when the app is starting up for the first time, and intentionally delete the existing auth token that is stored in localStorage.\ndo we get an easy place to do this in the install script? It would seem like the most likely place to accomplish this. I wonder if there's a way to do it securely, associating some file or state with the individual install.\n. I propose that we close this issue as won't-fix since the prevailing behavior with Electron apps is what we have.\nthere's a point to be made about preserving app data on uninstall and if Simplenote users want to clear it out then we could add some note in the documentation to make that easy to do just that.\notherwise we can probably consider this the expected behavior.\nfor prudence I will go ahead and close this, but feel free to reopen if you disagree.\ncc: @drw158 @roundhill \n. :shipit:\n. Just do it @roundhill !\n. looks good to me\n. Interesting piece of code.\n. I just did a cursory review, but I think we should go ahead and push this out if you have tested it.\n. Just for clarification, @dan, those propType warnings should only exist in development. It's fine to take away the isRequired if they truly aren't required, but I would recommend that if the code expects to receive a callback then we keep the warning. Are we not passing in the appropriate callbacks when we should be?\n. @roundhill ready for your review, what'cha think?\n. Great little PR! :shipit:\n. Anyone could open up the developer tools in the browser version of the app, so I'm not sure why we would want them to prevent peering inside here. Might also be pretty m00t if this is open source.\nGranted, if it's easy to take out of the native menu bar, that sounds fine, but might as well leave in the keyboard shortcut.\n. @roundhill I have been enough problems from the tacky react-hot-loader setup we had that I would like to consider this PR again. Please let me know how you feel about it.\n. Abandoning.\n. This PR fixes one major bug: bolded Emoji disappear in Chrome. However, it still leaves open another major bug, some Emoji simply don't display at all.\nThe latest Canary build of Chrome works and displays the Emoji, so I'm not sure where that leaves us in fixing this with a workaround. I'm not sure exactly yet how we would work around this issue either, besides using something like Tweemoji, which replaces Emoji with images. I'm not a fan of that solution.\n. > I assume that Preferences opens the Settings modal (I haven't tested the latest package). I think that is fine.\nThis is correct, @drw158 - it all matches.\n. Genius @drw158!\n. Thanks for looking into this @roundhill. The key warnings were already there and that darn ProxyComponent has to do with the way the local dev environment was setup with the React hot loader. If you run via webpack-dev-server or what-not then the proxy components disappear to give more useful information.\nI wouldn't be surprised if the broken clicks were from processing in the main thread. It would be nice to know how often these get sorted as I think a JS solution is best, but maybe the architecture isn't well suited for sort-once-then-reuse.\n. @roundhill this is a strange thing. I was able to see the messages you saw, and they weren't there in master, but they didn't make any sense to me. Also, after I ran this without the funky proxy stuff going on, I didn't get the errors. Could you run the following sequence and see if you still get the messages and flakey notes? (by the way, I was never able to reproduce the clicks not working)\nbash\ngit checkout master\ngit pull -p\ngit checkout issue/144-no-firefox-sort\ngit checkout HEAD~1\nNODE_ENV=development node `npm bin`/webpack-dev-server --hot --progress --inline --port 4000 --history-api-fallback\nI have taken the liberty of adding another commit which removed the messages for me, but I would like you to try without that \"revert\" commit and see if this wasn't more of a funny relationship with the react hot loader. On the other hand, you could try with a production build as well since the proxy wrapper should only be here in development builds.\nThanks!\n. Thanks for the review @roundhill - and happy Easter!\nDid this also fail out in Firefox on the branch tip, without backing up a commit?\n. Abandoning since sort is fine in Chrome\n. thanks @drw158! and good catch on the condensed view. Do you mind sharing how you were able to get it to look right in the inspector?\n. @drw158 I still had overlap even after playing with the ellipsis property. It's looking good though.\n\n. @drw158 updated and the icon has been removed from the compact view. You will need to rebase if you want to test and probably wipe your node modules and reinstall with npm install\ncc: @roundhill \n. > I had it working in the inspector at one point:\n@drw158 I think I had visual glitches pictured in the reply to that comment\n. @roundhill and @drw158 should we push this PR out the door? wait for matching the icon behavior for published and shared?\n. Bummer. We appear to have an issue persisting the public URL when sharing a note\u2026\nTesting\nIn master or in this branch, shouldn't matter.\nPublish a note.\nWatch the public URL appear.\nReload the app.\nNote that the public URL is gone and won't come back.\nCry.\n. Abandoning since sorting is fine in Firefox\n. I've been working on this and it's quite a mess. I'm running into issues following the control flow after clicking on a menu item and I can't get the notes list to refresh, even after doing things like calling loadNotes() and forceUpdate()\nThese issues are somewhat giving me the impression that if we fix the sorting issue (#144) then these problems might be fixed with that PR.\n. @drw158 what would appear on the Edit Account action? the Account modal?\nI'm all for this although it does break functionality when running in the browser instead of Electron (may not matter too much). If we wanted we could keep it there but still add the menu options.\nHow do we want to differentiate when running in Electron vs in the browser?\n. Showing a web view would mean people couldn't adjust their settings offline. Did you intend on implying this?\n. after a squash I say :shipit:\n\n. Please try and keep the PRs shorter next time.\n:shipit:\n. This is still present on the indexdb-only sort, right? I know that in the code I put out there for a JS sort, it was specifically looking at the modificationDate field, so if it's sorting on publish, we are probably updating that field. Maybe we don't want this, and that could be changed.\n. Lookin' good @rodrigoi \n. @roundhill here are a few hefty comments. This is great work you are doing - thanks for fixing this potentially embarrassing performance issue!\n. @roundhill I'm happy with this if you are happy with my contributions!\n. we should squash it first though!\n. I saw this behavior too and it bothered me, but I'm terrible at creating issues. Thanks @drw158 \n. just do it @roundhill \n. Should be resolved by #653. @beaucollins does this address any errors or problems we have been experiencing?\n. @beaucollins probably good after conflicts are resolved\n. Killing this PR because it was resolved in #257 \n. Please note that I have removed the storage of the app settings in localStorage temporarily while restructuring this code. A more ideal way to handle that caching is through a Redux store enhancer, or middleware. Once this patch is stable and ready to go, it will have that component in store.js\nSee the redux-localstorage module for inspiration.\n. \nThis was one of those\u2026\n. > A wild mystery 0 has appeared!\nWild mystery 0 has gone back into hiding! (in abba943)\n. > The note info toggles don't appear to be updating when clicked:\nThe panel was getting its props from within props.appState and even though the items inside that object changed, as a JavaScript object, I think the app was seeing no changes since the reference to that object was the same.\nNot sure why this PR is bringing this up, but I fixed it by pushing selectedNote and notes into this.props and not just this.props.appState, meaning that the app should now automatically re-render when it sees those change.\n. I've been using the new Day One 2 recently and I like the way they have their editor. Like Simplenote, it's just text, but they always have a distinction between editing and viewing. In that context, Markdown is always enabled for them. Although we have historical reasons not to enable markdown everywhere due to previous notes being written without that expectation, I could see a good compromise of the following:\n- No more global markdown toggle\n- Every note keeps the markdown toggle\n- If a note is created with markdown enabled, all further new notes automatically have it enabled\n- New accounts have it enabled by default\n. Killing this PR because the rebase is too awful and it's probably not an important bug to fix since we're not releasing a web version.\n. @roundhill it doesn't look like many menu options are relevant when logged out\u2026\n- About Simplenote\n- View > Toggle Full Screen\n- Window (full menu)\n- Help (full menu)\n@drw158 can you review that list.\nWhat do we want to show in this case (logged out)?\nIt's more complicated if we allow using the app without an account\u2026\n. Ouch! thanks for the report @rodalpho \nAs this is a first release, it doesn't surprise me that we have some overhead we don't need (we've been focussing on the functionality). Keep an eye out in the future for optimizations, and feel free to file a PR to fix some yourself if you discover any underlying causes :wink:\n. That's a great point @abirwas. I think it will be great to compare memory usage between accounts with many notes vs. those that are basically empty.\n. @rodalpho I'm going to close this issue not because it's not an issue but because instead it's not going to be something we can do much about for the foreseeable future. as has been pointed out, most of that bloat is coming in through Electron simply being Electron. Unfortunately, it would not have been feasible for us to support out-of-browser applications on Linux and Windows had we not taken advantage of this technology. We'll continue to keep an eye on performance and memory usage and tackle issues as they arise and merit priority above other issues.. we wish you didn't have that problem with the lost data, @marianoju. can you give some rough estimate of how many notes you have or how big your notes are? re: \"possibly due to large amount of notes?\"\n. thanks @marianoju! is that a dump from the zipped download off of the web?\nthese numbers will help us to understand if there's a link between note size and count and the sync issues\n. Hopefully this has been resolved by the introduction of export functionality in #448. Please feel free to comment on that process; we hope it meets your needs!. thanks @marianoju for the feedback. we're glad it meets your needs\n\nmissing timestamp of last modification\n\ngood point! this doesn't seem like something we couldn't add in. my guess is that it will likely show up in the JSON export eventually if not directly in the one-file-per-note part of the export. if we're lucky we might be able to fake the creation and modification timestamp inside the zip file to show those dates for each file. @rodalpho I don't believe that we have any plans for building an auto-export or exporting the notes outside of a zip archive. the export is mainly there as a tool to get notes out of Simplenote and not as a backup.\nI'm not sure what it is that you are wanting to do but many editors do actually allow one to open a compressed zip archive transparently: Atom, Sublime, vim (example for gzip but similar) to name a few.\nThis isn't a suggestion at a workflow, just a suggestion that this workflow isn't Simperium's goal while it may still be possible for you to accomplish your goals with existing tools.. Closing @drw158 because our target is Electron and not Safari. It's handy to be able to test it in Safari, but the build is all Chrome. \nYou may try again because Safari had broken copy/paste support which was supposedly fixed in the v10 release a few days ago.\n. absolutely @skandl! and if you need some help figuring out how to get started contributing please don't hesitate to ask\nif you start working on actual code though I would like to encourage you to be very communicative up-front here because we'll want to partner together on things like design choices and technical patterns.\n\u2764\ufe0f . @beaucollins settings seems to be the right place since it's not related to the note account in any way - in other words, it's a matter that only relates to this particular client, right?\n. @beaucollins a question on terminology - source list is the note list on the left, isn't it?\n. Thanks for tackling this @beaucollins! I left a few comments, feel free to ping me to discuss them with me.\n. @beaucollins are you still interesting in pushing this through? it looks like we might need some updates before that happens.\n. @beaucollins should we move with this or close it out?\n. Also @beaucollins I have taken the liberty of rebasing against master but in the process I ran into some oddities. The rebased and squashed commit has landed in #428 \nsome of the lines have been mangled but if you like it you can reset the tip of this branch to that branch, or we can continue over there. I don't want to take your credit in the blame though, so we could also rebuild this branch from that PR but with your author :smile:\na note about style, I'd like to see us use semicolon's as if they were required. personal preferences aside, I agree with Crockford that not including them is a bug: it's a behavior which can lead to hard-to-track down errors in the code. let's leave those in if you don't mind.\n. > I'm happy to abide by any rules configured in .eslintrc. I'd rather not see them but won't put up a fight. If eslint --fix adds them for me, even better.\nI can look into adding that. You may notice that my personal projects tend to leave them out, but they are an unreasonable risk in team projects, particularly with return\njs\nreturn\n    <div>\n        <p>I never appear because this is dead code</p>\n    </div>;\n. > I tend to always wrap my jsx in parens\nyep. so do I. but that that doesn't prevent it from happening otherwise \ud83d\ude22 \n. Closing for rebased version in #428 . Closing here since we started allowing registration from within the app itself.\nPlease reopen if you feel the problem remains after v1.1.0 is released. Thanks as always for your help!. @drw158 could you be a bit clearer and more specific? issues like these are very difficult to make sense of.\n. @envygeeks for now we're not publishing instructions for building this so that it connects to the actual Simplenote servers, but we're working on moving in that direction. It's also possible to build this to point at a local Simperium server, such as can be powered with https://github.com/simperium/node-simperium.\nbuilding for the linux binary should be able to be accomplished with make package-linux. This should no longer be a challenge since the merge of #574!. Thanks again @efegurkan! We're so happy to have your contributions.\n. @efegurkan please accept our apologies for letting this slide. thanks for your contribution - it looks great!\nwe are hurrying along and have a todo list much bigger than we are currently able to complete. it was, however important to us to get this out there for people who have been waiting on it and to make it open source so that we could all benefit from the various contributions.\nthanks again!\n. No worries @efegurkan! We're so excited that people love Simplenote enough to contribute to it\n. @dangerginger we would welcome your contributions! it looks like you can find this in the note display mixin\nif you need any help getting started with this, please feel free to ping me here. as a quick tip, I find running it in Docker to be useful so that versions are proper and global state on my computer doesn't get mangled\nbash\ndocker-compose up install # will install the node modules with the right node version\ndocker-compose up dev # will start a local server\nAfter that you can open up electron with electron . or open Chrome to localhost:4000\nCheers!\n. I'm not sure what you mean @EdwardYuan - we provide download links at simplenote.com from GitHub\nhttps://github.com/Automattic/simplenote-electron/releases\nWe're note specifying any AWS servers or anything in China. I'm going to close this but if you can provide more detail an the official links aren't working for your please reopen with the additional information. Thanks!. Closing here since we started allowing registration from within the app itself.\nPlease reopen if you feel the problem remains after v1.1.0 is released. Thanks as always for your help!. Thanks for the follow-up @rikai. It's not that we don't consider it a bug - we just hadn't gotten to this yet. Right now we don't have enough resources to work through the full list of issues. We appreciate your help in finding and writing them up!\n. This is an important bug to fix. I'm going to fold this thread into #36 where we can centralize a few spread-out and duplicate conversations. I have moved the ticket references over there as well. Please let me know if I missed any.\nAs we are preparing to overhaul the editor part of the app this should resolve itself as a byproduct of working through the flows which have been broken in the past to make sure we get it right this time. A number of related issues should also resolve.. @rachelmcr I don't think this is an issue anymore. we've gone through considerable changes to the editor. if it is (I couldn't reproduce) please let me know and we'll reopen and get to it.. just curious why are we listing the tickets here? don't we have a way to mark tickets as duplicates?\n. @rachelmcr do you think we could use another method, such as adding thumbs'-ups or editing a single comment/the issue itself to indicate popularity?\nFrom my perspective it's not helpful at all to have a bunch of comments because we're already aware of the issue and it's just a matter of being able to find the resources to dedicate to resolve it. Marking tickets as duplicates still tracks back to the original, no? So maybe we could use that when tracking popularity?\nAnyway, we have different needs and different purposes for this, so it's just my opinion here. Thanks for all the work y'all do keeping things organized!\n. to all fellow Automatticians working in this issue, I'd like to suggest that when we add tickets to the issue to track them that we edit a single comment (or the issue description) as I have done above. Feel free to add some thumbs-up as well to indicate priority or need. It will be much more helpful for us not having the huge list of comments.\nby the way, I've pushed out a branch to fix this :wink:\n. Yes! Thanks to the great work by @nfcampos we have tab and list auto-complete!. @drw158 I feel like I finally understand what we ought to build, can you weigh in here?\nCtrlOrCmd + L should open the note list search box\nCtrlOrCmd + F should open the find box for the currently-open note. Closing as duplicate of #37. Duplicate of #269 \nThanks for the report @PeterTheobald, but as of now we have limited the width of the text area for legibility reasons\n. @fayad we don't really have a fix quite yet. @arshsingh has put together a pull request to include this functionality, but we are waiting to see if we can make a few changes to that patch before we merge it in. we're all very excited to persist the window size :smile:. How do y'all feel about making it a kind of print-preview shortcut like CmdOrCtrl + Shift + P?\nCandidates:\n - CmdOrCtrl + M already mentioned that it is used\n - CmdOrCtrl + [ it doesn't really feel like browser tabs, and I don't think we need two keys whereas a toggle feels right. Further, if we decide to open a live preview on wide displays I think the single-key toggle would fit better with \"open or close preview.\"\n@drw158 do you like this idea?. Closing here as a duplicate of #37 - check back soon for an update in v1.0.9!. Will be resolved when #309 merges.\n. This should have been fixed in the rollout of the showdown renderer in #577.. @nsrosenqvist thanks for the suggestion! this is not a priority of ours right now but it would fit into some work @drw158 has proposed working with the account settings in #237 and also with the work in adding native tray support in #362. At this point in time I'm going to close this issue but will continue to keep it in mind when we work on those other PRs. Thanks again!\n. @drw158 and @rachelsquirrel this came for free when we merged in the draftjs editor (thanks @nfcampos) in #370. While it's now on-by-default, we could add an option to disable it.\n@drw158 do you think an item in the menu would be best for this? add an option in both the menu and in the app settings pane? under the Display settings?\n. > I personally switched to Bear.\nWell we hope that you are happy with Bear. We'll always welcome you back; and we haven't decided to not support spell-check - it's just a problem in the code that we haven't solved yet. We'd also love to have you participate via code submissions :smile:\n\nAn editor that doesn't have spellcheck is ridiculous.\n\nMore like programmers who make an editor with a broken spell-checker are ridiculous. Honestly I've never made a spilling misteak so I didn't know it was broken \ud83d\ude43 \n\nSeriously though I mean this post with a light heart. We are committed long-term to Simplenote and to making it the best free and simple note taking app around but unfortunately don't have the time to get everything fixed or added in the schedules that everybody wants them to be.\nThanks sincerely for using it; we hope it is a tool that enriches what you do more than it hinders.. @PhiLhoSoft I think it's an issue with draft-js - theres a linked comment in the description above. It's specifically related to Electron if that's actually the case.. That's helpful @m1aw - note too that testing locally in the browser won't match the behavior inside of Electron. To test locally though after you have installed the dependencies and built it, you can start with the following command and you will have the Chrome developer tools open for aid in debugging and testing.\n./node_modules/.bin/electron . --devtools. This is something we definitely plan on implementing at some point but haven't yet and probably won't be able to get in for a couple of releases. I think that somehow it should already be working with the Markdown rendering but that obviously isn't. We would absolutely welcome some help on this! :smile:. @johnkjoseph this is on my own personal backlog to try and track down. I'm simply not sure why it's not working is all.. @prat0088 can you help me understand the value of this here? I thought about individual note exports, but since the notes are plain text a quick copy-all gets the note content ready to paste anywhere. I find that more useful than exporting a single note because in most cases I can imagine, exporting to a file would precede opening that file and copying and pasting the content elsewhere.. @prat0088 I'm going to close this issue as I don't see us adding an option to export individual notes. in the app (since #448) you can export the entire account and each note will appear in the generated ZIP file, however. I hope that meets your need!. @davidwolfpaw I wonder if we're crossing terms with export and publish. We can publish notes and they will render the markdown source of the note if Markdown is enabled for that note. If it's disabled for that note then you can publish the markdown source. You could copy a note's contents into a new note and publish both versions if you wanted to.\nExporting will always save the unformatted source of the note which sounds like what you want. If you copy all of the text content from the note when you are in the Simplenote app though, that too should be the unformatted source.\nSorry I'm not understanding your case here - please do show me where I'm not getting it.. Thanks for reporting this! We definitely have ways we can improve the preview styles. Also we have some open issues dealing with our Markdown parser (#309, #450).\nWe'd love to provide guidance and any help we can if if anyone wants to lend a hand!. Looks great @nsrosenqvist - are you interested in putting together a PR for this?\n. Thanks, we'll try and see when and if we can get this in.\n. @marianoju thanks for filing the issue. we really do appreciate it and wish we could attend to replying faster for you. so despite the delay, here is something\u2026\n\nWhere and how are these files stored locally with Ubuntu 16.04?\n\nall of the notes should be stored in the IndexedDB instance inside of the Electron app. we don't store the local copies of the notes anywhere on disk. I believe that the IndexedDB database is being stored as a SQLite database, but that's internal to Chromium/Electron and my knowledge is limited there. @beaucollins or @roundhill should be able to correct me if I'm wrong here.\n\nWhat happens (on the client side) when a note is trashed? Are files deleted? Are files overwritten? Are backup files kept on the client side?\n\nTrashed notes should set a trashed flag and synchronize with all other clients. we don't guarantee that they will live on forever, but they should remain in the trash bin/folder/tag for at least thirty days. We are currently investigating and trying to resolve these sync issues, so hopefully we can resolve it so that it won't be a continuing problem.\nThe way the app is designed eschews a local backup to disk, though we offer a zipped download from the website. It may be possible to eventually provide such an export from this client too.\nThanks again for your help in reporting this. We will be tracking the sync issues in our first GitHub project for this app: Resolve sync issues\n. > so adamantly stating that the Simplenote client does not store the notes locally\n@marianoju we don't mean to communicate that there's no local copy of the notes somewhere, but storing the data to a local file is something that the app doesn't initiate and doesn't care about. It's all stored in IndexedDB which is handled entirely by the Chromium code inside of Electron. That data for sure lives somewhere in the user directory, but it's also not readily available to us.\nI'm less familiar with how Chromium stores its IndexedDB data. We would certainly welcome some knowledge on how to access and extract it.\n. > Some info to get other a head start: SimpleNote uses Electron (atom shell) which uses Chromium which implements IndexedDB which uses LevelDb (key/value store). I suppose the .bak was created by chromium \"cause things could do wrong\".\nwhat an illustrative statement! it feels like a mess when following the chain like this.\ninterestingly, I have been recently trying to look into exporting IndexedDB data and there's no standard way to do it! it appears like a JSON export is possible by reading in the whole thing but there's no defined way to export the data.\nthanks again for the hint @rohzart. we're continuing to try and track down the root cause of this\n. @rohzart right now we're spending our available time finishing up a few small but old issues and the rest of that available time trying to understand the synchronization issue first. data loss isn't something we take lightly, but if we can restore the sync process that might alleviate the data loss problems enough to give us a chance to figure it out (the two issues could be commingled)\nI want to let you know that we think it's wonderful how helpful you have been here. thanks a million!\n. @rohzart unfortunately I don't know what that is using or if we even set it. my guess is that the browser is making those decisions for us.\nhave you had access to a development build of the app wherein the developer tools are enabled? with those you can directly access the IndexedDB data without trouble. using the console it would be possible to pull out the data, though maybe only with a bit of finagling. if you don't, we'll get you a binary soon if you are interested.\n. @rohzart here is a link to the debug-enabled version. when you open it you should have access to the developer tools where you can inspect the data in IndexedDB directly.\nhttps://cloudup.com/i0WtqAodryF\n^^^ thanks @roundhill for making that binary!\n. Looks like I forgot to mention it here explicitly, but #448 added an export feature to get all notes out from the app into a zip archive containing the plaintext notes as well as a JSON export of the entire collection.\nBecause we have few specific details to work with on the sync loss I'm going to close this specific issue but please know we are continuing to work to make sure information loss doesn't occur. In other words, I'm folding this issue into the larger topic of handling synchronization well when logging out and logging in.\nThanks all for the help and comments. I hope that you find the export functionality useful. We're also planning on building a similar import method soon.. Closed by #604 . @AntonioIT we don't encrypt notes in any of the apps the reason is much deeper than allowing full-text search. In fact, we could still do full-text searches even if the notes were encrypted. It is not likely that we will support any kind of encryption for some time as it would require architectural-level changes. Therefore I'm going to close this issue. Thanks!. @rachelmcr awesome spotting! I have submitted an update to the word counter, but it will not completely fix the counts, as some languages (Japanese, for example) are much more difficult than finding spaces between words.\n. oops, thanks @rachelmcr - I hit enter after the first autocomplete on r having seen it was rachel\n. @AntonioIT thanks for the report! I'm having trouble reproducing this locally. could you help me understand how to create a duplicate tag?\nhere's what I tried:\n- found a tag I had used already \"work\"\n- found an existing note without that tag\n- added the tag, but only the one \"work\" tag was found in the list of tags and both the old notes and this newly-tagged note appeared when I searched for \"work\"\n- tried adding that tag again in the \"Add tags\u2026\" input, but when I entered \"work\" the second time, it simply disappeared while the existing \"work\" tag remained\nalso, can you help me understand how to know if I have a duplicate tag? are you seeing two tags of the same name in the list of tags? in the list of tags on a given note?\nthanks again!\n. I'm going to close this here as a duplicate of #54 more so to merge the requests. We should provide a way to indicate in a search that a given string is specifically for searching tags.. \ud83d\udc4d \nwe really have lots of work to do with the actions and stores here, don't we?\n. possible team meetup project?\n. yay!\n. Hi @3vivekb - thanks for filing the issue! Can you help me understand what you are asking for?\nWhen you speak about Spotlight, are you referring to the built-in Spotlight search in macOS?\nCan you clarify the process you refer to when writing, \"Instead I must open spotlight and then search again?\" I'm not sure I follow what you are describing.\n. @bostrt please accept my apology for allowing this to collect dust for so long! thanks for the PR and nice catch - this shouldn't have slipped through review way back when. we're pleased to receive your contribution!\n. cc: @roundhill \n. I would like to see us style the markdown text in the edit mode. @DoTheEvo I don't think it would be aligned with Simplenote to have a WYSIWYG editor, which it sounds like you are describing, though I think we could improve the appearance in the editor view.\nWith the work that @nfcampos is doing in #370 we should be able to experiment with styling and decorators in the edit mode. Zeit.co's blog and some Markdown editors I have used inspire me this way. It's simple, it's minimal, it's plain-text, but it's still semantically emphasized.\ncc: @drw158 @roundhill \n. @bro1 thanks for the helpful information!\n:question: for you or anyone - is syncing broken in this way 100% of the time or is it sporadic\u2026sometimes you write a note and it appears on your Android device, other times it doesn't\u2026\n. @chainedghost this awesome sleuthing is so incredibly valuable to us in finding the cause. I think that what you discovered about having the external edits positioned on the sidebar is critical here - we must be loading the note out of indexedDB and then immediately syncing with Simperium before Simperium syncs with us (my guess is that the \"initial state of the note\" is a blank data structure since all IndexedDB operations are async)\n. Hi all. I'm going to close this issue and merge it into #385 for organizational purposes. I'm pretty sure that it's the same core issue causing the sync problems in all of the apps build off of this repository (Windows, Linux).\nWe'll be tracking there and you are free/welcome to participate in that discussion!\n. Closing this here to fold in with #54.. Thanks @space-curiosity. Some of these are probably legitimate while others are probably stuck this way due to being dependencies of dependencies.\nAre you looking to start contributing? This would make for some great first PRs. You can use a convenient tool npm check updates to see which dependencies are out of date. Then, probably one or a few at a time, submit a PR to update the versions. We only need to make sure that we test functionality for regressions on version bumps. Before testing, it's good to rm -rf node_modules to clear out lingering state.\n. I didn't see anything out of the ordinary here, @roundhill, but I also didn't test it.\n. Thanks for the report @artivilla! We will try and address this soon so that it won't cause any more headaches\n. Thanks for the report @KokkieH. I couldn't reproduce this error but we did recently update the search mechanism. Would you be willing to try again with the latest build/version and let me know if you are still seeing this bug?\n. Thanks @rachelmcr. This should be an easily fixable bug.\nHas this happened to you more than once? Is there a pattern? If it's a rare fluke we will probably address it later as time permits but if it's happening a bunch and we don't realize it then we can try and take care of it more immediately.\n. @nefory thanks for chiming in! if that's the case as you present it then our lack of types strikes again!\ndid you notice where this might be going on? I tried to find it but when I looked I was thinking that the error was likely triggered in desktop/app.js but looking back over the past three years of the call to app.on( 'ready', \u2026 ) I couldn't find the proposed mistake.\nwhere did you find it?. For anyone wanting this in Ubuntu or Gnome, have you tried AllTray?\nI'm not sure how much we would end up doing to meet specific distribution needs so maybe a third-party solution like that could work.\nIt looks like we might be able to provide some level of support through Electron but we haven't tried this yet.\n\u2753what would we put in the tray? I can think of an option to start a new note and maybe one to exit out of the app. Any others?\n. Note: although I didn't push anything up I was able to experiment and get a working prototype working in Mac. The code wasn't too complicated but I think this is the list of steps we need to complete before we can resolve this:\n- [ ] A good design of the task bar item: what icon to use and which actions/items to provide in the menu\n- [ ] IPC between the main process and the renderer which can invoke actions such as \"Add a new note.\" We currently have some simple IPC established for handling changes to the display settings from the menu bar.\n. I'm going to close this issue since we both won't be addressing it soon and translations will remain 100% on our radar without needing the issue to remind us :wink: \ud83c\udf10 \n. Thanks for posting here all. Making it easier to get notes into Simplenote from other applications is something we certainly want to accomplish. We recently added the ability to export notes out of Simplenote from this version of the application, but this was the easier of the two sides of integration.\nAt this point we have other priorities for the next couples releases focused on some pain points in the user interface and with the process of logging in and out of accounts. At or around that time I think we might be able to more realistically focus on adding in some kind of import feature.\nThat being said we can certainly discuss what we would want or need from imports, what kind of file structure we would require (I could imagine having external tools to convert exports from various apps into a unified format for import into Simplenote), and what kind of effects an import would have (would we create a tag on all the imported notes, for example?).\nThanks again for your input! We're always happy to support any help offered here and can work with PRs submitted outside of our own development timelines and flows.. @nfcampos it's probably best to work within node 5 for this PR. an update would be an entire PR by itself is my guess, and probably also something that wouldn't happen quickly enough to be in there before this work gets merged\n. > not working in safari for now\nthere will likely be complications in Internet Explorer as well, though thankfully the Electron shell is running the Chrome codebase. draft-js depends on the polyfill for things like String.prototype.startsWith and I can't remember if we already have that in the app.\n. @nfcampos thanks for all this great work. I wonder if it wouldn't be good to split the editor into its own and new component, where all of the editor logic could be split from the note detail component.\n. > I've added the url decorator now! :)\nwhat should we be seeing with links? could you provide some before/after screenshots? I tried this out but wasn't sure what I should be expecting.\n. thanks @nfcampos - this is awesome work and I look forward to taking a second pass after you have had a chance to see my feedback\n. thanks for the screenies @nfcampos - I think I missed that because I was trying with a URL like  something.com and I didn't see any decoration.\n. @nfcampos probably worth doing 100% before releasing it. we're probably also not in a rush for this, so there is time to figure it out :wink:\n. > what name should I give it?\nThere are two hard things in computer science: cache invalidation, naming things, and off-by-one errors.\n:wink:\n@nfcampos, you can work out whichever name you think is appropriate. One that immediately comes to my mind would be something like NoteContentEditor\n. @nfcampos sorry it took me a week to get back with you on this. It's great work. There were two big concerns that popped into my head while reviewing: we appear to be making plenty of full conversions between the internal draft-js state and plaintext every time the editor gets updated; we appear to have a very heavy (and untested) URL decorator.\nAs important as the URL parsing is, we would definitely want a test suite to accompany the function to be explicit about cases we think could break it. Further, it would be doubly-amazing if we could rely less on Regexs for the parsing. I'm still a bit fuzzy on what's happening with the MarkdownRe.\nPlease let me know how I can be a help with this. Your PR is a super-appreciated contribution to the project and we're happy to have you on board, even if we're a bit slow! :smile: \ud83d\udc4d \n. > I didn't find any tests anywhere in the repo\nthat's a sad thing. okay, we have had good success with Mocha, chai, enzyme, etc\u2026\u00a0but that certainly doesn't belong in this PR.\nwhat if you simply created a basic test file we could run on the command line for now\u2026\n``` js\nimport normalizr from 'thing';\nconst tests = [\n    // input, expected output\n    [ 'this is simplenote.com, fun!', 'this is simplenote.com, fun!' ],\n    [ \u2026 ],\n    \u2026\n];\ntests.forEach( ( [ input, expected ] ) => {\n    if ( expected !== normalizr( input ) ) {\n        throw Test failure\\n\\texpected: ${ expected }\\n\\tactual: ${ normalizr( input ) };\n    }\n} );\n```\nsomething like that can go a long way and lead into a more proper testing framework\n. > this PR could be split into 2\nthat sounds great @nfcampos !\n. > ok, so I'll remove the url-decorator from this one. do I open the url-decorator PR only once this one is merged, since the diff won't make sense against the current master?\nyou can do it any way that suits you, though I tend to avoid branching PRs off of other PRs because of the merge mess\n. @nfcampos I'm going to be testing this as soon as I can and try to run the gauntlet. I have been familiarizing myself with the code and really want to prioritize this, even over my tab/indentation PRs. In the past week or two I have been distracted trying to resolve the sync issues, unfortunately.\nYou are amazing. :smile:\n. @nfcampos how would you feel about converting this into a React \"class\" with export class NoteContentEditor extends Component {\u2026\ndon't worry about it if you don't want to. we can do that later - I know there's a ton of less-than-exemplary code in here, but I'm simply trying to move properly going forward\n. @nfcampos I also noticed that the url normalization is still here for Markdown. can we pull that from this PR as well so we can make sure we test the editor change in isolation? thanks!\n. Looks great @nfcampos - we're all testing it on our ends. Hopefully we will have this out this week! (no guarantees)\nSo far it seems to work well on my machine.\n. @nfcampos when I'm on this branch I'm finding that I can't scroll within the editor window. I don't remember seeing this before but I'm not sure if I was even trying with notes long enough to require scrolling. Can you test this out?\n- Open a long note that extends beyond the view\n- Try and scroll. For me it doesn't work. It does in master\n. > fixed now\nfixed for me too - thanks!\n. what is this redirect we are speaking of?\n. yay @nfcampos - it's happening!\nthanks thanks thanks for your awesome contributions. I'll need to abandon my tab and list PRs or update them in the very least, but that's okay because I'm sure they'll be easier to handle now\n. I'm closing this issue @balaziks because it's a duplicate of #314. We will track development there, but thanks for the report!\n. Not a duplicate. Sorry!\n. I'm closing this issue because it's a duplicate of #299 and we will resolve it there. Thanks for reporting it!\n. \n. @roundhill is this ready for review?\n. @roundhill I'm confused at the global setting. Will we be leaving any place to adjust it after this? In other words, if I disable the setting then checkout this branch I don't think I can ever make it so that new notes start with Markdown support. On the other hand, if I enable the global Markdown setting, it appears like every new note on this branch will always have it enabled. If this is true, would it make more sense to eliminate the global setting from the app and use some simpler method for determining the new note policy, such as \"use whatever the most recent note used\"\n. > It now is set whenever any note sets the individual markdown toggle.\n@roundhill that did confuse me and I missed it when testing. it seems reasonable enough though.\n:shipit: \n. thanks for reporting @deadstar1! I'm closing this out after the merge of #348. Please open it back up if it continues to be a problem (after fetching the updates to master)\n. thanks for another submission @nfcampos - this PR raises an interesting question. it appears that escaping those characters effectively eliminates our RegEx-based search, except it actually does so by performing two RegExp operations where none could do \u00af\\_(\u30c4)_/\u00af\nthe bigger question is whether or not we should have a RegExp search at all and whether people are currently using it this way.\nunfortunately, I do not think we will be able to allow both a RegExp input in the search field and automatically escape the special characters because the escaping function has no way of knowing which use was intended in writing something like (\n. > only do regex search when the search string starts and ends with /\nthat's not a bad idea, although it could still be confusing to have the search magically start working differently based on its input. when I compare to something like most text editors, they have a separate checkbox or toggle to indicate that the input is a RegExp\nif, however, the mobile apps don't do this search, I find it hard to believe that we would demand it here.\n. > currently the app just crashes there if the typed string is an invalid regex\nhow embarrassing! probably at this point we should eliminate the RegExp search altogether. I'm not ready to push it quite yet as something in my memory seems to indicate that there was a particular reason it was put in there, but I haven't found that reason yet\n. @drw158 I forgot to ask you about this one. it seems very appropriate to kill the RegExp and make this a plain-text search. can you remember any reason we added a RegExp or think of any reason to keep it?\ncc: @roundhill \n. @nfcampos let's kill it! no more RegExp search :smile:\n. @nfcampos instead of adding that library, would you be interested in making the search a non-regexp? just a plain string search\n. I'm not sure about that @nfcampos - it looks like the search is currently contained within filterNotes(). If we end up moving forward to highlight the occurrences of the search terms, that will probably need to happen within the note content display.\n. > those 2 places would then have two different ways of doing the same search behaviour\n@nfcampos I don't think we have those two places, right? only a single place right now that searches notes?\n. @nfcampos let's just replace the RegExp for now and replace it with a simple string search. I think we can address it in the future if we add a second piece of search code.\n. @nfcampos this all looks good to me. let's see if @roundhill or @drw158 or @rodrigoi or @beaucollins  could give this a look-over and a \ud83d\udc4d as well\n. thanks @rodrigoi - @nfcampos I'm merging!\n. @TileHalo I don't think that we would be incorporating any math typesetting soon if ever. It definitely would have advantages in certain use cases, but we're very hesitant to add new functionality into Simplenote. Thanks for the suggestion - we'll keep it in our pool of ideas. In the meantime, we would absolutely review a fork PR if you wanted to build it. Thanks for using Simplenote too!\n. @neelkadia and @rustykeyctrl I'm going to close this issue as a duplicate and move the discussion into #385 in order to be able to better organize it. thanks for the reports.\n. Thanks for the report @raniesantos. We're currently trying to figure out why these sync issues are occurring, and we just hate the idea that people are losing content, but we don't expect a manual sync button anytime soon because that doesn't reflect how Simplenote works. Adding a button wouldn't likely impact the current issues. In other words, Simplenote is always synchronizing the notes and if anything has slipped through the cracks there it will continue to be a problem until we figure out why at the deeper level.\nYou can follow the progress in the new Resolve sync issues project.\n. Thanks everyone for continuing to test on these updates. We're working on it trying to track down the issue but it has been elusive because we haven't been able to reproduce. Maybe one of us has been able to reproduce once but we aren't fully sure.\n. Thanks again @hedgefield for your reports. While we haven't identified the problem yet, these details are helping us to narrow down what could be causing the bug. We appreciate it!\n. @raniesantos are you willing to share your normal usage pattern? do you keep Simplenote open for days at a time? close it for days at a time and then only after reopening do you notice the sync issues?\nif it's up-to-date and you close the app then open it again after a few minutes, do the changes from the mobile apps sync then?\n. Thanks @raniesantos!\nWe still believe there's a problem out there because many people are experiencing this issue. We're suspicious of the underlying Simperium JavaScript library.\n\u2753\nFor those who are experiencing this regularly, when you login after a few days and lose the synchronization, do you have lots of changes/notes waiting to come in from your mobile devices or from Simplenote online? Might you get a subset of changes and then none after that?\n\u2753 \nWe're still working hard to try and be able to reproduce this but none of us have had success yet. Maybe one of us has been able to reproduce it once but we're not confident and definitely can't reliably reproduce. Nonetheless, we're still trying to get to the bottom of it.\n. @roundhill is there a technical explanation of what you found and how you resolved it and under what circumstances we would predict that this is happening? while offline I was auditing the protocol in node-simperium and was forming my own hypothesis.\nthanks for the awesome sleuthing on that! if we can get this one fixed, what a happy day that will be. Has anyone here been able to try the 1.0.7 beta and either reproduce the bug or confirm that the update fixed it?. Closing for now because I believe that the fix in 1.0.7 took care of this issue. We can reopen if this continues to be a problem in 1.0.8 and newer releases.. correct @nfcampos - I suppose we should catch both actions if we can. currently we are simply inserting a tab and so I'm not entirely confident that we can remove indentation, but I will check and see what I can get in quickly.\nthe plan is still to build more behavior on your PR though once it's in. this is mainly to improve things in the meantime\n. > if it's not easy to remove indentation then I'd suggest for now just not doing anything if this is true\nthanks for the catch @nfcampos - updated in 5df67d9\n. closing as irrelevant due to #370 \n. > some stuff isn't right with shift+tab\n@nfcampos I updated the shift+tab behavior in 2031dc6. Thanks for finding that!\n. > lines with bullet items without any indentation\nthanks @nfcampos - we don't consider these lines to be actual lists unless I am wrong, so we wouldn't want a newline to add the - or *\n. > pressing enter with the cursor at the end of line with an indented bullet list item does the wrong thing\ngood catch! I will make sure that gets corrected before a merge\n. > the mac and ios apps do consider those actual lists\nhaha, another win for reviews. I tested in the Mac app and it cleared it out, but I failed to add anything after the bullet (so of course it wasn't a list when I hit enter).\nwill update this behavior as well! thanks again\n. Closing as irrelevant due to #370 \n. @roundhill should we merge this?\n. > It shows a count of 5 for me when I pasted this text in. The other counts all seemed good though.\n@roundhill this is as expected. I don't think we'll be able to resolve this issue with languages such as these.\n. @drw158 can you try again? I have updated this. I didn't see that error you got either but I wonder if it had to do with other changes we have recently merged\n. @drw158 to confirm, inline would break with the mac app\n. > Not sure if clicking twice to delete would be expected behavior.\n@drw158 while technical easy to change, if we remove the click-select-click-delete behavior we have no confirmation before removing a tag. granted, there is note history (just found a bug related to notes not sync'ing after adding/deleting a tag) and someone could type the tag back in as well. still they may not have seen which tag was removed.\nin the meantime I will remove the confirmation step so that a single click removes the tags. we can play with it and see how it feels. > Tab usually autocompletes the word for this type of thing\n\nEnter use to confirm the tag and make it into the pill shape\n\nthis is a divergence from the Mac app, but we can make it happen. > The suggestion text should be just a tiny bit lighter, maybe lighten($gray, 10%)\non it. you're constantly increasing my technical load in this PR :smile:. @drw158 one issue with not selecting the tags before deleting them is that it currently mirrors the keyboard method for deleting tags\n\nhave the cursor focused in the tag entry with existing tags\nbackspace to clear out the entry\nbackspace again and it should select the last tag\nbackspace again and it confirms and deletes the tag\n\nshould we maintain selection for the keyboard but remove it for the mouse?. @drw158 I think this is ready for some more of your review. I'm really struggling with the CSS to get the input and the tag list to line up right. you can see this really badly when there are no tags. adding a new tag makes the whole line shift up and then the tag list and input text are out of alignment with each other.. @drw158, @roundhill, @Copons, and @rodrigoi \nI have updated this PR and made big changes to the way the autocomplete was rendered which resolved the funky issues. If I am testing this and seeing it correctly I think that it is ready for final review and merging!\n@drw158 can you review Enter a tag name\u2026 as placeholder text and let me know what you think? Without the placeholder it seemed to me too hard to know that this was a tag entry area. Also, I wasn't entirely sure what words would be best to use.\nThanks all!. @copons in addition to suppressing the warning (thanks for the tip!) I have closed off what I consider a bug in b11197b\npreviously we were able to create duplicate tags if they differed in the case of the letter. for example, Recipe was considered different than recipe even though they would auto-complete and were essentially the same. I have changed this so that tags of different cases are considered identical.\nmaybe @drw158 can review this decision. I think it's the right one.. @copons I added the right-arrow auto-complete in 16a2e05\nif the cursor is at the far-right of the text then hitting the right-arrow should do the same as tab; otherwise it should behave as usual with left/right cursor navigation.. > Can we have the tab keypress also add the tag? Currently it autocompletes, but you still need to press enter to actually add it.\nThis was changed per request by @drw158.\nEither way is okay. > Sounds good to me.\n@drw158 what sounds good to you?. As of a2ae4e4 the tab key now auto-adds the tag to the note. I agree @roundhill - thanks for the review.\nMy recent experiences with Elm have been making me scream with things like this. We wouldn't be able to get it to compile if we tried accessing something that may not be there at runtime.\nWere I to classify this, I would probably mark it as a result of an overly-confusing Redux/data implementation. I'm not sure why we ended up with this crazy creator() system or why everything ended up in one giant file, but I can't seem to make good sense of the structure of the app state or when certain pieces should end up being updated.\n. Thanks @rodrigoi!\n. Thanks for reporting @madhattermattic - we are currently planning on pushing this out at some point but it's not at the top of the list.\n. Should be resolved with the merge of #424 . \ud83d\udc4d \n. @rodrigoi if we are going to do this I would even elect to decrease the frequency to once each day or once a week. maybe just leave it at once per startup unless the app remains open for days at a time.\n. thanks @nfcampos! how hard would it be to split this into separate PRs for the two features? It would be much easier to tackle if we only had to consider one thing at a time :smile:\n. > or if you really want to split it I'd suggest making it one PR at a time, starting with the lists thing\nmy thoughts were to hook up the tab key first so that it indents properly and then we can worry about auto-completion\n. Thanks again for this great PR @nfcampos. I would love to see some of the code broken into separate pieces - split into functions that are shorter and do fewer things. It would also be nice to see less reassignment of variables.\nLet me know if I can help out in any way.\n. @nfcampos sorry you have been waiting so long on me to respond. I've been pretty busy and mobile lately. I have a couple more comments here but I think the behavior is \ud83d\udcaf. after this PR merges I would like to examine the modularity here and see if we can't restructure some files for better organization.\nthanks again for your wonderful contributions!. This looks great. I think it's ready to \ud83d\udea2 - @roundhill want to see it also?\n. @nfcampos I'm going to refrain from adding too many comments here since I think I covered most of it in #398. Please let me know if this is unclear.\n. > can you just tell me if you'd like me to update this PR or the other? keeping both in sync is not really possible\nlet's do this one since it appears to be logically prior to the other.\n. @nfcampos you continue to be awesome here. thanks for being so responsive to my comments. I reviewed #398 before I hit this one and I should have waited. I'll try and remember to leave it until this is merged in so I don't send a bunch of noise your way.\n. > Maybe this is specific enough to indent/outdent that this should just live inside an indent/outdent function and there's no point in creating these custom modifier methods?\nI would wager that this is more the case\n. @roundhill or @rodrigoi or @drw158 I'm ready to merge this. would either/all of you mind testing it to smoke-test?\nthis should provide normal expected tabbing behavior. we can compare to a word processor's behavior or other apps.\n. > Which behavior do we want here? I think I expected the text to be deleted.\nMy expectation when highlighting multiple lines and hitting tab is for all the lines to be indented\u2026\n. Note: This PR is big. We will either split it up or do something with it. I was without internet and did a lot of work locally in the meantime.\n. After feeling like the history of this PR was too mangled and long, I have squashed it into a single commit and it should now be easier to work with. It has been rebased against the current master as well.\n. > Whoops, just noticed something. The tag state isn't working properly for a few things:\n\nIf you select a tag, it should appear in the search bar. It is empty in this branch.\nWhen you select a tag, it should highlight as blue in the tag drawer. On this branch it never highlights.\n\nThese will have to wait on #398 to fix because it does a bunch of work that I don't want to duplicate here and then deal with the conflicts.. @roundhill I believe that I have fixed the issues you raised with the tag behavior in the search bar and in the tag list. Would you mind reviewing again?\nMaybe we're ready to merge! \ud83e\udd1e . Too old to maintain.. Thanks @nfcampos! Good catch\n. @roundhill here is a perfect scenario for the analytics middleware like we started using in Calypso. If we have a toggle then all we need to do is toggle the middleware on and off with the setting. We can continue to program as though it were enabled, but those actions will simply fall to the bit bucket.\n. Hi @popod. Although we don't currently have any note locking mechanism, did you know that when you delete a note it's still available if you list the trashed notes? We can restore accidentally (or intentionally) deleted notes from the trash view.\n. Thanks @rodrigoi !\n. Thanks for the contribution @rnewton! I'll try and take a deeper look into this in the next day or two.\n. @rnewton are there better choices of style for the dark theme vs. the light theme? I appreciate the balance you have picked, but I want to make sure we don't unnecessarily tie ourselves to one when we could switch between the two if that were better.\n. @rnewton I noticed an opportunity to do the rendering in a web worker. probably this isn't the greatest fit at this time, but it would be nice to have a quick assessment if that's a good path to explore\n. @rnewton how hard would it be to swap styles at runtime?\n. @roundhill @drw158 and @rodrigoi this seems like a good future to put out there for 1.1.0 maybe? I think it's ready to ship, what do you all think?\n. Thanks for the \ud83d\udc14 @roundhill - those were good catches. Somehow I had seen them and fixed them but not committed or pushed back up.\nShould be ready now.\n. Good catch @roundhill! I will check in on that.\n. @roundhill I have updated this PR in 8fef338 to account for logged-out and login failures. in this regard, I think it may be more robust than it was before since it makes a distinction between invalid credentials and other failures. the PR is much bigger though\n. > seeing this warning in the console:\nwasn't sure about those. I feel like I want to ignore them for now because I haven't figured out a good way to get around them.\nif you feel like it's important I can replace the calls with the longer this.props.XYZ names instead of extracting them out.\n. > It'd be nice if those warnings went away but not critical\nwe have three options:\n1. Change the linter to allow it\n2. Add a comment to ignore it\n3. Change the code\nI'm reluctant to change the code because I find it most readable the way it is but I'm open to changing it if we want. My preference is to keep this in for now while thinking about a solution, so I will take you up on that.\nThe nice thing about this is that we will have an easy time finding these to come back and refactor because the linter finds them :wink: I have posted the question in a couple places and am waiting to hear back. We do have a similar dilemma in Calypso\n. Thanks for the report @arshsingh. This behavior doesn't make sense and we will put it on the queue for updating!\n. @owcz this sounds like a great idea - thanks for reporting! I'm sure this wasn't a decision we made to not include the x - more like it was something we weren't able to polish in time for the earlier releases. I'll take a look and see how much work it will take to get in. If not much, we can probably sneak it in soon :smile:\n. @drw158 what do you think about this? ctrl+l seems to jive with browser notions of controlling navigation. plus, the native Mac app already uses this binding. maybe it was simply overlooked?\n. Closing as a duplicate of #301 . Thanks for putting this together @arshsingh! It looks like this library is writing to and reading from a special file storing the window position. However, we are already using things like browser localStorage and IndexedDB. Do you think we could get by without the dependency and simply store the settings in the browser?\nI'm thinking that we could follow a similar approach to how manage( win ) works, using lodash's throttle() method and persisting the size changes every 200-500ms even. It doesn't seem like it would need to be super-responsive.\nI like the idea here though and hope we can get this added in.\nPlease feel free to ping me directly here if you need anything.\n. @arshsingh are you still interested in working on this? we'd be happy to help if you have any questions!\n. > I will implement it by the end of the coming week\ncool, but no worries if it takes more time!\n. That's an interesting problem I didn't anticipate @arshsingh! Did you find any ideas how other Electron apps are solving this? I don't mind adding that dependency if that's what we need to do. @arshsingh there are some things I am reluctant about with that library but maybe we can contribute back to it. I think this PR is ready and I will try and get some final testing in. Nice work and thanks for the PR! :smile:. I tested this and it looks great. I would really appreciate it if @roundhill or @rodrigoi could also give it a review pass - they should also be aware of what's happening and also get the chance to test.\nAfter that let's :shipit:. @Gzing thanks for adding this! I'm not sure how we managed so long without it. must have originally been a copy/paste thing because I think npm init asks for it and will default to the right thing if run inside a clone of a git repo.\nI don't see any reason this shouldn't be ready to go - we value your contribution making Simplenote better and more accessible!\ncc: @roundhill and @rodrigoi I'm marking this and other things as v1.1 since they aren't simple bug fixes. Wha'd'ya think?\n. Thanks for the report @keypey! I'm going to close this as a duplicate of #360, but I would love to hear further from you there.\nIt looks like you were running the latest 1.0.5 release which surprises me because we cleaned up a few search-related issues in that. Could you confirm for us that all four of the notes in your screenshot exist on the Linux client?\n. Thanks @drw158 - I did see some of those bugs and I'm pretty sure I know how to fix them already - was not super motivated to do so at 6am. Also, I probably forgot to save the simple decorator dependency since I wasn't sure if I'd go with it or not.\nThe main goal I hope to get out of this PR is design-related. Is this something we think would bring value to the app? How much/how little should we style?\nThe bulk of the work is actually writing the parser. After that I think we could do well by simply wrapping the matched pieces in CSS classnames and style them that way.\nThanks again; I welcome all of your feedback!\n. > @dmsnell this looks great! ill try to leave more feedback one of these days when i get around to it but overall big \ud83d\udc4d from me\n@nfcampos this is only really possible because you put in the draft-js editor. Not sure if I ever mentioned it, but you and I were doing draft-js work at the same time (I was bringing it in to WordPress.com). I love its data model and super-appreciate your contributions bringing it to Simplenote.\n. > Module not found: Error: Cannot resolve module 'draft-js-simpledecorator' in /Users/Dave/simplenote-electron/lib\n@drw158 did you do an npm install before running this? I did put it in the package.json file so that should install if you run that command.\n. @drw158 I updated so that we're now styling only via CSS and not through special HTML elements. It should be much easier to grok and modify now I hope.\n. @roundhill nice suggestions! I updated in   9f06033\n. > Woah:\n@roundhill is that a good woah or a bad woah?. > The setting would need to live in the view options. We have been meaning to do that anyway. Should we go ahead and implement it? :)\nYeah let's take care of the font thing first. I would like to get a more robust parser before merging this anyway (for example, we're not handling code blocks at this point or many nested things).\n@drw158 one concern I have with the font setting is that I probably want all of my Markdown notes to show in a monospaced font in the editor but I don't want non-Markdown notes to use that monospaced font. Do you think it would be bad to have this kind of checkmark or distinction?. closing for now as not relevant. further work would be good but resources aren't available at the moment. also I have discovered some new markdown parsers that may serve the needs without incorporating a custom one, notably GitHub's own parser.. @roundhill awesome job! probably only showing the info panel on demand will be better for performance since we don't have it sitting there in memory and in reflow.\n. @roundhill I can't test because I don't have a PageUp/PageDown key, but the code looks good!\n\ud83d\udea2 at your leisure!\n. @roundhill we should probably get a patch-release out - 1.0.6 or so with this fix.\n. Thanks for the update @DorkeyDear - we're about to change the behavior of tag deletion so that it's a single click instead of two. On that note, there wouldn't be a place to hit the delete key.\nI'm going to close this for now as a result. This brings up one more use case in my head, however, which I will let @drw158 respond to. If we use the arrow keys from the tag insert area will we still allow selecting the other tags. If that's the case, we should reopen this or make sure we provide for that in the PR that changes the tag behavior.. Thanks for reporting this @marianoju! We actually already discovered this and @roundhill patched it up in #419. We'll be shipping an update very soon with the fixed behavior.\nDuplicate of #408 \n. @probonopd that sounds like a great idea. I looked into this a little bit while on a flight yesterday but was limited due to lack of reliable internet. To my knowledge it doesn't look like there is anything to prevent us from doing it. Of course, we might get there faster if someone offers a PR for it :wink:. We'll update here as we learn more and if we put out some code to this end. Thanks for filing the issue and pointing us at AppImage!\n@swalladge it's great to hear about awesome work like what you are doing. thanks for making it possible to more easily spread Simplenote \u2764\ufe0f !\n. Thanks for filing the issue @zhangzhishan. Right now it's not possible to start using the app without having a login. It is possible on the mobile apps, or at least on Android, but not on the desktop. it's important to know, however, that using Simplenote without an account means that the notes won't be synchronizing anywhere. (@roundhill can you confirm this?)\nIf you can create an account when you do have internet, then you should be able to sign in to the app and it will keep you logged-in even after you lose internet access. That is to say, after logging in once you should be safe.\n@roundhill or @drw158 is there a reason for the inconsistency between the platforms on this? is being able to use the app without an account the ideal? is the risk of losing data/confusion of not syncing when not having an account too much of an obstacle to consider making this available on all the apps?\n. > we'd need to visually indicate that the app is offline I think\nThat doesn't sound very Simplenote-y. Indicating that the app isn't linked to an account and therefore not syncing seems very reasonable though. Would some kind of banner/bar across the top of the note view be reasonable?\n. I'm closing this issue because I believe we will not implement logged-out use of the app.. > we should use $blue for the highlight background color\ndone in f835815. please note that I added padding around the sides of the search result because the white text was fading into the background of the note. this causes a slight visual twitch when starting to search because before the highlight the padding wasn't there.\ngiven that it only happens when going from no search query to some search query I think the glitch is understandable. it's most noticeable in the note list.\n\n. > It would be great if the editor scrolled down to the first found word\nthis has already been requested in another issue and I think it's good, but work for a different PR in my opinion. that's a technically different challenge than marking up the changes. > I expected to see the search highlighting in the preview pane on MD documents.\nThis is an interesting question @drw158 that probably needs another PR; highlight in edit mode for now as good enough.\nActually highlighting in Markdown Preview mode is a complicated question: what should the search match and highlight?\nSince we can legitimately embed HTML inside of Markdown we could have something like this in a note:\nhtml\nThis is <strong>strange</strong>\nIn edit mode if we search for strong we will find the match in those HTML tags. what should happen in the rendered preview? do we somehow pull out the HTML tags and highlight them? do we simply not highlight them since they are structure and not content?\nif we highlight the structure then we either will break the document layout by tearing apart HTML tags and attributes or we will need to build a full HTML parser into the process and do cute things like hover a box over locations where those bits of markup are working behind the scenes.\nif we don't highlight the structure we hit the issue where a note appears in the search results in the note list but no obvious highlighting is there in preview pane, probably a jarring experience.\n\n. @drw158 I added the editor mode swapping behavior in a5e46c8. Please take it for a spin and see how you like the behavior.\n\nOpen a note in preview mode then start typing in the search box\nWith text in the search box, find a note in the results with Markdown enabled then click preview. > Only thing missing is the disabled Preview button. Automatically clearing the search box after clicking on Preview definitely felt odd.\n\nI don't know how odd I am but this honestly feels really terrible to me. it's definitely not obvious how one is supposed to flip back to the preview mode with search text in there. I'm not sure I know of any other apps which have this kind of behavior\nall of this preview/search business makes me less and less comfortable with the search highlighting. I don't like where we've landed on the questions and wonder if we should just table this PR and release without it.. @drw158 how bad would it be to simply leave the preview mode open for now? that way it might be a little confusing to not see highlights but it would be less jarring than have the UI jump around to different things.\nWe might also be able to get in there and highlight rendered text too, so that while strong wouldn't appear as an HTML tag it would appear if it were written out in the note content.. @BobTB this should already be available in the 1.0.8 release on Window and Linux.. @rodrigoi sounds good. I somewhat like the more verbose variant. Do you have a preference?\n. @rodrigoi I updated to standardize the shortcut references in 3a3fad7 and it's ready for round 2\n. This is good work but I think it's possibly worth closing due to changes in the app which took place in the meantime. We have big work to do after v1.1.0 so that the window panes are actually separate and visible only when \"visible\" which could impact the way this task is accomplished. Feel free to overwrite my decision @beaucollins . @amontalenti thanks for the inquiry! stay tuned, this might happen in the future!\n. @zeke I'm not sure if we are ready to replace the macOS app yet based on the performance of the app and the list of bugs/features.\npersonally I run the electron app in macOS while I'm developing. we would definitely welcome feedback from people testing it out; other than that I'm not sure what our timeline will be. we need to figure out and resolve this nasty sync bug before we move more over to Electron.\n. @zeke it should link to Project 1, which is the sync bug. We've had great difficulty reproducing the behavior, but sometimes the app isn't syncing data. There are several open issues related to that right now.\n. @roundhill I just noticed this issue when addressing #228. I'm not sure when it creeped in or why.\n. @drw158 am I missing something big? positioning the cursor at the end seems very counterintuitive to me. I may use notes differently, but I think an overwhelming majority of the time I spend in notes is reading old ones and I usually start at the top.\nremembering the cursor spot is something I could imagine getting pretty complicated technically. do we have any examples in other apps that do this? I would like to play around with it and feel how it is.\n. Another brilliant contribution, thanks @nfcampos!\n. @alexforencich thanks for reporting this. that's definitely not a good feeling opening up an empty app. that behavior does seem a bit atypical though. do you think there could have been any abnormal issues with the Internet connection when the app opened up? disconnection? high latency? very slow speed? proxies? etc\u2026\n. @alexforencich I have personally seen some delays when opening the app while developing on it, but I have never seen it draw the UI and show no notes.\nI'll keep a watch out for this, but I don't think there's much in the way of clues as to what could have caused this.\nI don't think it's \"totally broken\" though, thankfully. The only thing that seems like a lead at this point is either the Simperium client had some issue connecting to Simperium the server or perhaps something was wonky with IndexedDB in the browser.\nAlthough I'm going to close this for now, we can reopen it at any point. If we get more reports that are related I'll make sure to reopen and bring this to the top.\n. @ca19972001 that sounds like a big problem! it sounds unrelated to what @alexforencich reported here though if you ask me. if you logout and login again do you experience this issue? are your notes available in any other apps or on Simplenote.com?. wonderful work @copons. I would really like to hit the data representation hard on this one because I'm suspicious that ONE_COLUMN/TWO_COLUMNS/THREE_COLUMNS may not be the right way to do this.. @copons I'm wondering how available this approach is for changing the view. the panes appear to be treated not as separate entities but as pieces of separate layouts. if I wanted to open or close the tag list, would I be able to easily discover the icon in the top left? I wonder if there are ways to bring the actions closer to the context they control.\nanother question is whether or not the editor should ever be hidden. it's stored in the app state as either visible or not visible, but would we ever want it not to be?\nplease don't take this too critically - I'm excited about this work and think you're doing well. it might help to step back and make some visual mockups to see the behavior and play with it before we do too much coding. @drw158 has provided some interactive mockups in the past where we can click around and see the effects without having any code involved. maybe he would be willing to discuss this with us.. thanks @drw158 for your feedback. this arrangement still feels very awkward to me. I don't think there's any way to do this that requires more than two clicks to get to any desired state, but at least in selecting the layout specifically we have introduced the need to identify the editor as a thing on its own when it should always be open.\nif we had two buttons that toggled their respective panes each, we would probably be nominally one click away from the desired layout, presuming that at least one of the panes (tag list, note list) would be relatively static in its on/off state.\nhere are some screenies from other apps I use\n\n\nIn the Mac file browser we choose the layout we want, but there is a separate button for each in a button group. the buttons provide one-click access to the desired end.\n\n\n\nThe Chrome DevTools provide a similar separate button for the layout selection and then within the layout the drawers each have their own collapsable toggle.\n\n\n\nJetBrains' IDEA environment well full-drawer idiom\n\n\n\nPaw, which I find very useful but whose layout selection I find very confusing, has a mixture of confusing icons in a button group to select, [ one, the other, or both in split ], then adds a toggle for a lower drawer\n\n\n\nPhotoshop, which diverges strongly from feeling like a native Mac app, uses the drawer idiom everywhere I think, plus it offers a menu in Window to toggle visibility of the different components\n\n\n\nDayOne uses a drawer icon on their \"note list\" to toggle the notebook list to its left. it has an arrow to indicate what will disappear or where it will go. collapsing the notebook view makes the arrow on the icon disappear. Additionally, a toggle for the \"Dual View\" opens up a new pane or drawer to the right with a live view of the selected note. When collapsed, one has to open the \"note\" from the \"note list\" just like the Electron app currently does. With the dual view open, the note list is always visible and clicking on a note opens it in the right.\n\n\n\nKeyNote has a much more complicated UI. On the left we have the dropdown button which selects major layout for the app. On the right we have three buttons in a group. Clicking a button selects that pane for the right drawer. Clicking on an active button hides the drawer and it slides to the right.\n\n\n\nThe Preview app uses the dropdown button. There are several layout arrangements.\n\nNot pictured\nAtom appears to delegate all visibility controls to the top-level view menu.\nI did not have a particular point I'm trying to make by including these, but just wanted to show a selection of other apps how they handle it and see if we can learn from those examples. which app did you show, @drw158? was that Sketch?. When thinking about cycling between layouts I discovered another problem that I can foresee, which maybe could be solved and I just don't know how: keyboard shortcuts.\nIf we are in a given view and want to provide a keyboard toggle for the tag list, how do we accomplish this? Do we simply selected the appropriate layout? It seems like we're at odds in the verb we're doing, which I think is my main hangup.\nTo me, cycling among a ring of layout choices is choosing one of several specific arrangements of views into the app. Toggling the tag list or note list is fundamentally different than cycling among views. It's a toggle operation that can be easily undone by redoing it. Cycling can only be undone by scanning through the full ring.\nIf we had toggles in some form for the two panes then keyboard shortcuts would provide no UX questions. Hitting the keypress would simply toggle the visibility for the associated pane.\nIf we are in the distraction-free mode with only the editor visible and then use the \"Show notes list\" keypress, we have two choices in a layout ring: show just the notes list or show both the notes list and tag list. If we choose to only show the notes list, the most appropriate choice, and further press the keystroke for showing the tag list, we can now cycle to the tag-list-only view and hide the notes list, or more reasonably switch to the tag-and-note-list-visible view. of course, at this point we have just reached a place of inconsistency because the same keystroke has a different meaning than it does when in distraction-free zone.\nin a cyclical ring we only have \"next view\" and \"previous view\" idioms instead of actions which directly relate to specific visual elements.. > one toggle to turn on/off both sidebars at the same time. Then, to hide the tags list, there would be another button within that column\ncan I reword this to see if I understand you properly?\n - one button to toggle distraction-free mode (editor only)\n - the tag list adopts its drawer toggle as exists in the Mac app already. > do what Bear and others have done\nI'm very curious to know why they went this route. to me it seems far more difficult to remember a layout shortcuts than it is to remember toggles, though I think ^1 ^2 ^3 is reasonable. it may just be that I don't work this way in any apps that I'm aware of.. > hiding the sidebar also hides the \"Add\" plus button\nthis is interesting. it's mutating the menu bar and I wouldn't anticipate that. is there any analogue in Simplenote that we might want to hide or show contextually?. @drw158 I definitely like the expand button in the context of the editor pane for distraction-free mode. @drw158 I like the way the toggling happens in option 3 v2 and agree that the wide search bar is a bit strange.\ntag searching is something I could imaging us improving, noting #343 as well and the request to search for notes containing multiple tags tag:simplenote tag:awesome. the wider search bar could help there, maybe. /random. @drw158 I love the idea of a soft launch. in this latest prototype I like how the search bar doesn't grow, but I feel like it's unexpected how it jumps to the right. it sits above the separating line\nnot sure how I feel about putting the distraction-free mode button next to the other icons. those icons all pertain to the specifically-opened note while this button is a UI-centric action maybe.\nyou're doing an amazing job on these.. @copons and @drw158 what's the status on this PR? have we figured out which design moves we want to make?. this sounds like a good idea, thanks for taking the time to write it down @owcz!\nwe'll check into it at some point but I'm not sure when. we're finishing up some high-priority bug fixes and will then reorganize.. Closing as a duplicate of #333 . @drw158 and @roundhill this is ready to go I think. we just need to follow-up with a PR to add the UI for it. > Can we add the UI for this only in the menu bar for now? I'm thinking Simplenote > Export Notes...\n\nOpens a finder window with the .zip file shown. Maybe just export to Desktop?\n\nseems reasonable @drw158 - that would allow us to get it out quickly.\ndo you have thoughts on also providing the .JSON export? it has considerably more information than the .zip export. > I'm thinking Simplenote > Export Notes...\nto confirm @drw158 you want this in the top-level app menu and not in File?\nthis may not be a thing in Linux or Windows but at least in Mac there's that distinction between the file menu and the one with preferences.. @drw158 I added the Export item to the File menu in 07a267b.\nWe can change it but I found Export listed under File in an Apple HIG document and so that is what I chose.\nThis PR now exports all notes to a zip file appending the list of tags at the end. It opens a save file dialog to get the filename and defaults to ~/Desktop/notes.zip.. > If it's just a matter of adding a .json file to the notes folder, then I'd say go for it!\nwow. great idea @drw158! I hadn't thought about that. source JSON included in 9c0380c @drw158 - thanks again for the suggestion!\nalso in this commit I turned on compression and platform-specific options to the export. > How did Export Notes look in the menu?\nnot terrible, but still a bit odd to me. what do you think? I think it's okay.\n\n. Tested and verified. Works like a charm @roundhill \n. :shipit:. Thanks for reporting @rcarmo. We can look into this but I'm not sure if we'll switch away from F11 because it's pretty standard. That's very unfortunate that your laptop has no F11. In a quick search online I found that others with that model laptop have remapped several keys so that they can access common keystrokes and shortcuts.. @roundhill - nice work on this and the borderless window!\nI noted however that when logged out I expected to be able to click and drag the windows around on my desktop when the point of click was basically anywhere on the window other than the form elements themselves. This could mean clicking on the Simplenote logo or anywhere in the space around it and dragging the window. That behavior was not there, however, and I'm not sure if it's supposed to be there.\nOther than that I think this is good and ready to :ship:, so I'll mark it ready and leave that decision to you on the dragging. Maybe @drw158 could also weigh in.. Thanks for the report @chris-budd. You're probably onto something here. We'll add this to our list. Feel free to submit a PR yourself if you want to clone and try to get this working. We'll be here to answer any questions that might come up.. @beaucollins or also maybe we could be explicit about the media query and make web CSS media-query-specific. @drw158 this is all looking fine, is there any reason not to merge it?. :shipit: @drw158 . For a quick summary around this issue I'd like to summarize what is and isn't possible surrounding a visual indicator. It's possible to indicate that we have local changes which we haven't yet pushed out to Simperium. It's possible to know that after a successful response from the server that our local changes have been accepted and if we have no further local changes since that confirmation we can turn off the indicator. It's impossible to know if we have \"fully sync'ed\" because the fundamental working model of Simperium (which powers Simplenote) is that the app is always in a constant process of synchronizing. We cannot know locally if there are new changes on the server on their way to our copy of the app. We also cannot know if the server successfully folds in our changes if we get no response.\nThis means that we can know for sure if we haven't attempted to synchronize changes and we can know if our changes were accepted but we cannot know if our changes fail to synchronize and we cannot know for sure that they succeeded or failed unless we hear back from the server.\nThat all being said we have been stewing on this issue and hope to have some solution worked out at some point, but probably not before 1.0.9 is done.\nThanks for the feedback, many others have asked about a similar feature.. > But, if the server tells the client that there are no new changes available on the server, surely the client app can now report something like this:\n\n\"Last sync attempt finished: Apr. 21, 9:15:34 AM\"\n\"Last sync status: Sync completed successfully.\"\nAm I correct?\n\n@unforgettableid I'll try not to be too redundant here since I started answering in your other issue.\nSimplenote never \"attempts a sync\" per se. When it has local changes it pushes those out to the server. When the server receives updates it sends those updates out to the apps. Since a stateful socket between the server and apps is maintained whenever they are open these updates are unsolicited meaning that the app never asks the server for recent updates; the server simply sends them as they come. Since Simplenote is by nature a distributed application and updates to the same note could happen from different devices at near the same time we also run into race conditions with the updates, meaning that an announcement from the server could be on its way at the time we think we are up to date (meaning that we are now no longer up to date but don't realize it).\nNow, we can ask ourselves at any given point in time when we aren't receiving an update notice from the server: did we not receive an update notice because we are up to date with the information or did we fail to receive the network packets?. @roundhill adding some random notes here after digging in:\nI believe that we could hook into node-simperium for a few more helpful bits but it's going to take some time and probably way lower priority than fixing the darn bug in #602 \nnode-simperium tracks changes that are in-flight and also ones that are queued to ship off. @beaucollins can probably correct me if I'm wrong but it looks like it does things one at a time and waits for a response from the server before sending out the next change.\nmany aspects of our local queueing are still mysterious to me but I think we could end up with lists of notes and even specific parts of notes that fall into these categories\n\nchanges which have been made locally and definitely haven't been synchronized\nchanges which have been made locally and definitely have been synchronized\nchanges which have been made locally and may or may not have been synchronized\n\nsome kind of network spinner could be a great implementation detail for visualizing the third kind in that list. having definitely-unsynchronized edits is a good reason to confirm before closing too.. Hi @RicardoEPRodrigues - thanks for submitting this issue here. I know that we have no immediate plans to add a split view, even though I too enjoy them when working in Markdown. Before we would likely do this, if we were to add it, we would probably also want to have it working in the mobile apps.\ncc: @drw158 . #418 is more of an experiment than anything else but I'd like to get it in. I agree that Atom, Bear, MacDown, and DayOne all have great Markdown editing experiences. The thing that #418 doesn't address is block contexts such as code fencing, but that shouldn't be a big problem as the blocks are relatively easy to identify.\n@drw158 do we have any fundamental issues with a split view on wide screens?. thanks for the report @gubrist - I may have seen this personally at one point before and we have definitely discussed other issues related to the cursor positioning. I'll try and update here with what I find but we might just need to wait until we can figure out the proper cursor solution in which case this problem might disappear as a result.. @roundhill I think I have seen this with draft-js where we initialize the cursor at the end of the content. Although it looks like this was reported before draft-js in #292.\nThe related issues I was referring to are #36 and #42 and maybe some others.\nI'm not confident on the way we handle updates from Simperium and I think that could be causing us issues.. This is an important bug to fix. I'm going to fold this thread into #36 where we can centralize a few spread-out and duplicate conversations. I have moved the ticket references over there as well. Please let me know if I missed any.\nAs we are preparing to overhaul the editor part of the app this should resolve itself as a byproduct of working through the flows which have been broken in the past to make sure we get it right this time. A number of related issues should also resolve.. :shipit:. @copons I like what you are doing with the props. Do you think it would be possible to do just the prop/action moves in another PR that logically precedes this one? I think that would be stellar and could be done in a PR which doesn't introduce any functional changes to the app.. @copons what's the status on this PR? does it need updating, does it need splitting, does it need abandoning?. @roundhill this is probably a thing someone would want, but for what it's worth, the Mac app exhibits the same behavior. if you want that you have to hit enter first, then go back up and add the star.. > One doubt I have is related to the whole (or part of) filteredNotes \u27a1\ufe0f noteIndex \u27a1\ufe0f selectedNote \u27a1\ufe0f selectedNoteId thing.\nIt's used in several places throughout app.jsx (e.g. NoteList, NoteEditor, NoteInfo, getPreviousNoteIndex(), render()).\nI hear your frustration @copons. You've started descending into the challenges we have with the core app and I agree wholeheartedly. We need to be diligent about trying to make small and testable changes on that path so that we can do our best to prevent introducing bugs. thanks for making this \"sub PR\" from your other one. \nI'll be testing this to see if I can find any issue but the code changes look good.. Yowsers! This is a bad thing. Thanks for reporting it here @chrisfromthelc . @copons I noticed a couple issues here, questioning the removal of the named export and noticing the commented-out import. after those update then this looks good. I'm not sure if you are otherwise done in this PR so I'll wait to hear back before I green-light it. :shipit:. > it might be worth to update it.\nthere are some other updates available as well. I was trying to keep this minimal for the node update and thought about a follow-up PR for those. I think it's a good idea.. > Side note: On MacOS, if using n, remove npm (rm -rf /usr/local/lib/node_modules/npm) before switching to the new version to fix the Cannot find module 'internal/fs' error when running npm install.\nThanks @rodrigoi - I never got this error but it's good to know how to fix it!. > I think we should bump the version of package.json before merging this. Should we bump the minor version?\nNot sure on this one. I don't think it has to happen here since this isn't even a release yet. Probably would be a good idea to make a big bump because we have major changes since 1.0.7. Closing as old and possibly irrelevant.. Thanks @rodrigoi. I wasn't sure why I needed to install react-dom but I did it as well anyway in 6fcf816.. > The height calculation is a bit scary\nmaybe we could get @aduth or @iseulda to have a look. they have been working recently with react-virtualized. > store the node's clientHeight as part of a ref function callbac\nthanks @aduth. I had considered storing this once on note load and then on note update so that getHeight would be a simple property lookup. sounds like there wasn't an obviously better solution in Calypso.. thanks for the feedback @iseulde and @aduth - after caching a couple of properties this has dramatically improved in its performance. I'm not a huge fan of the style of imperative caching at play in note-list.jsx but it is an appropriate trade-off in order to make the app snappy for now. the real fix involves some deeper reworking of how we manage our data I believe.. > I think removing the  tag to Google is better than relying on a network resource for our UI when packaging for electron.\nsuch as for pulling in and \"vendoring\" the font?. > @dmsnell do you know the reason behind using the DLL webpack plugins? If we used a single webpack config with multiple entry configs the HtmlWebpackPlugin would pick up all the scripts which removes the need for add-asset-html-webpack-plugin.\nIn #440 I added the DLL config to make incremental builds faster during development work. Since the base libraries are also relatively static compared to the app code I also considered it a benefit that we might have some separate vendor bundle which is long-term cacheable.\nBesides performance issues, one of the things that bothered me was webpack showing us building close to 1000 modules on every change. It polluted the console with a bunch of messages I didn't care about hiding the ones I did.. @beaucollins hopefully you won't mind that I added a couple commits onto this PR. I was trying to cleanup the bottom of the PR list tonight so we can get some of these out.\nif you have any further changes you want or if you want to undo some of the things I did feel free. I apologize because I rebased before I thought that you might have local changes.\notherwise this one looks good to me. I'm going to mark it as ready to merge but you can make the call if you don't feel it is :smile:. @Copons if you rebase this agains the recent master I'll review it and we can try to get it out there. @copons thanks for rebasing. the code looks good here and my tests seemed like they worked\n\nwas able to search notes and interaction with the search field was normal\ncreated a new note from the button\ncreated a new note from the app menu\n\n:shipit:. This is looking good @Copons - I need to test it still but the code looks fine. Moving in the right direction.. > @dmsnell Am I correct in the assumption that search highlighting does not apply to the markdown preview?\nfor now @Copons that is true. it's not just a technical issue but a decision to choose to make that happen so we're tabling it in the meantime. @Copons let's rebase this. @Copons this is all looking good but I'm getting lost in how many code changes there are. is it possible to break this down any further? things such as introducing the note selector into the existing code, extracting only a single component per-PR, moving things into connect() on the parent before extracting the components\u2026?\nas I know this makes the development burden higher I apologize for asking but I think it's hard to assess what all needs testing with so many different kinds of changes and operations being moved around. it would be much easier to focus on each thing one at a time and confirm the changes.\nif not, c'est la vie, but it would definitely be helpful for review and deploying\u2026. > it would lead to a decent amount of different PRs that must be written one after the previous is merged, increasing also the review burden.\non the contrary, I think this would dramatically lower the review burden. it's not many PRs that are hard to review, but big ones that involve lots of different types of changes and testing\nif you don't mind I think it would be great to break it apart. often I do this when working on a big piece. I'll code it up in a type of prototype but then walk backwards after collecting it into smaller chunks. each chunk makes it a little better overall, plus I revise my large PR and it becomes smaller\u2026. seems fine. \ud83d\udc4d . @roundhill I'm getting the following error trying to npm install\nError: Cannot find module 'internal/fs'\ndid you see this? if you rm -rf node_modules and then npm install do you get it?\nupdate\nwhile running node-7.3.0 this error appeared but when running node-6.9.1 it didn't appear to be there\nupdate update\nnever mind. it was a node issue resolved by rm -rf /usr/local/lib/node_modules and then reinstalling with n again.. Yes it's fatter and also @roundhill I noticed a bold white outline around the search box that isn't there in master. master\n\nthis branch\n\n@roundhill this is running inside of Electron. @roundhill the design changes are so subtle here and with @drw158 out for the week I would think this  is ready to go. I believe that this is directly related to the bug causing the issues in #602 and so I'm going to close this ticket as a duplicate. it's not because it isn't important but rather for our own organization and to try to keep the related issues together. I spend shamefully too much time this weekend auditing these failures and have gained some insight into the problem - thanks again for everyone who has taken the time to report and interact here. you are invited to join the part in #602 unless you believe strongly that these two are separate.. @cateliu thanks for the report. can you share what application you are running? Are you running the native Mac OS version of Simplenote? Are you running Simplenote in Linux or Windows?\nThe Linux and Windows versions (built from the source in this repository) do actually support Markdown including images, so I'd like to confirm we are discussing the same thing before we get any deeper.. @CorentinLemaitre thanks for the question! we might need to make sure we're all talking about the same things. the amd64 builds are also technically x86 so something else might be going on here.\nwould you be willing to send us the output from running the following command in a terminal on your laptop? the terminal is available from the main Ubuntu icon/launcher but you may need to type in \"Terminal\" to find it.\nbash\ncat /proc/cpuinfo\nfeel free to paste it in here or drop it in a gist and share the link. @CorentinLemaitre thanks for sending that over. I can almost guarantee that the reason for this trouble is that it appears like you are running on a computer with an Intel Atom processor, which has a few small differences from the standard line of x86 processors.\nI'm not sure what the implications of that are or if it should be running, but I will try and check in during the next several days to see if we can't figure it out and hopefully get it working for you.\nHere's to hoping it works out!\n(P.S. If anyone has any good knowledge about Electron running on an Atom we would welcome the help!). Good call @Copons! can we leave them both in though? it's actually still valid to have a config.js as long as it's default export is an object.. . Thanks for reporting this @k-miras. We'll have to examine this.\nIt's probably safe to assume that allowing JavaScript inside a note is not what we want. It's also probably safe to assume that we don't want to be evaling JavaScript anywhere from the note contents.\nIt appears like it's fully within the rendered HTML output in the viewer.. Code in PR in #710!. @drw158 is there a question or change request here?. I think this could be related to draft-js. Need some more investigation. My suspicion comes from the fact that I can't fix this with the CSS in the Chrome inspector and it's odd how a newline alone doesn't scroll but once a character is typed it works.. Yeah thanks @copons. I noted this as well and wondered if I should go ahead and do that so I did in 9da5254. It tested fine so I'll go ahead and merge with your previous approval.. > Unfortunately this breaks on small-ish screens.\nDoh! Thanks @copons.\nI'll update and try to mirror our settings.. thanks again @copons - I have relied on pure-css solutions in 3bc7b24 which is the way I should have done it from the get-go.\nthis is ready for another review. > It seems that reverting to width={ width } here solves it\nthis is odd because it was supposed to be back. I'm not sure how that happened but I suspect I missed something when committing or rebasing. > So, it happens that, for example, in $single-column the preview needs only 2 lines, but on wide screen it needs 3 lines.\n\nWhen enlarging the screen, the preview gets cut off at 2 lines; when narrowing, it has an additional empty line.\n\nthanks for the note @Copons. I'm not sure if I follow what you're saying here. To restate my assumptions, I thought that the meaning of the three display modes was line based:\n\nCondensed displays only the title line (first line unless empty)\nComfy displays the title line and up to one line of content\nExpanded displays the title line and up to three lines of content\n\nand then this is all based on the actual newline character to split the lines.. thanks @Copons - I think I understand it now; at least I was able to reproduce behavior where the preview didn't appropriately resize in height.\n\n. > just noticed if you add a second line for a note, the list doesn't update the height for that row\n@roundhill I noticed this too but when I tested it the rows finally updated after we saved the content. there was a noticeable delay but it did pop in. I believe that this is the delay we find in queueSaveNote(). I think there's still a hard-coded with in there that needs to be replaced. All updated and ready for final review!\nUpdate-on-resize should now happen. > It seem to work great for me, but I'm wary of the possible performance impact on huge notes.\nThanks @copons! I'll try to add this in but feel free to directly commit next time.\nPerformance should be fine because string comparison is blazingly fast in JavaScript. Did you know that it can be faster than comparing integers? Most engines intern the strings and so a string comparison for equality is a basic reference comparison while number comparison can involve unboxing and type-checking.\nThis should fix a sore point in the branch where the size doesn't update. I thought it was a dead-end trying to fix that.. @drw158 please pull from master and try again. this should be fixed with the merge of #493. I tested comparing before and after that merge and was able to reproduce what you found and it was fixed in master after the merge. Please reopen if this still fails for you after the update.. works for me in testing!. @copons can you confirm that things are still good after my rebase? Feel free to merge at your leisure if so.. @gubrist I'm not sure of what kind of \"developers kitchen\" you think you have intruded upon - you are welcome here!\nwe don't have a public page like this for reporting issues with the web version at app.simplenote.com but we do pay attention to concerns when people bring them up.\nthanks for the feedback!. @JM-Mendez as far as I'm aware there has been no movement on this issue in the draft-js repo. Also although the author of that issue is comparing to ProseMirror we aren't. Based on my observations above and notes in the linked issue I believe this is the result of an initial parse-and-generate process which thrashes the garbage collector. In that regard Immutable.js probably isn't at fault so much as something is iterating over operations when they potentially could be batched in one call/one allocation. Unfortunately I don't have time to dig into the internals of draft-js without someone guiding me in. This issue is very much a problem with the production build of React as well. To test I have been using the text from Pygmalion from Project Gutenberg.\nAs a workaround there is also an option to switch back to a basic text field in #568 . >  I think the overhead of creating RegEx objects for each of those chunks if thrashing the garbage collector.\n@JM-Mendez that's interesting. I hadn't performed any analysis at the draft-js code level. Hrm\u2026 after taking a look, I'm not seeing anything absurd such as creating RegExps inside of any loops (unless it's in sanitizeDraftText() - I didn't look).\nI wonder if we could replace createFromText() with something like this (from the \"clean\" portion of the draft-js code)\u2026\njs\n// normalize all `\\r\\n` to `\\n` elsewhere\nconst strings = text.split(\"\\n\");\nconst blocks = strings.map( block => new ContentBlock({\n    key: generateRandomKey(),\n    text: block,\n    type: 'unstyled',\n    characterList: List(Repeat(CharacterMetadata.EMPTY, block.length)),\n});\nreturn ContentState.createFromBlockArray(blocks);\nif we did this, we could also potentially replace blocks only as they are changed from the Simperium side, not having to recreate the entire document\u2026. Thanks again for that great analysis @JM-Mendez \n\nDraftjs re-renders the entire editor with each change.\n\nWhile it's definitely slower than other editors on edit, the original provocation for this PR is on initialization of a new document. Even if it takes 200ms to re-render it may take a second or two to load initially. I think that you should be able to recreate this in your tests.\nOnce the blocks have loaded, re-renders become much cheaper and only those blocks which change need to be recalculated and altered. This is actually a pretty cool aspect about the draft-js architecture and allowed for fairly performant syntax highlighting/formatting in #594. Unfortunately that's hardly worth it if large documents don't load quickly.\n\nI also came up with a solution to just update the text, but it's inelegant. I can post that if you want.\n\nI'm not sure I follow what you are proposing here, could you clarify what your code is accomplishing?\n\nI'm a big fan of draft-js but I'm also trying to be practical with its limits. If we could get the performance up I'd love to be able to keep it around because I have many ideas for enhancing the editing experience that are much easier to accomplish with the draft-js model than with textarea fields or other editor components. it's mainly the block-oriented functional design which lets us do incremental updates and changes that's to boast about.\n\n\nare you a maintainer of the simplenote-electron app? I'm curious as to how it only shows usage of around 35mb, when all other electron apps are hovering in the hundreds.\n\n35MB? that surprises me! when I boot my test account in macOS it appears to be using around 130 MB. Electron apps will all be inefficient at a base level but don't have to grow too much beyond that. Visual Studio Code is an excellent example of building a performant Electron-based application. We haven't optimized our code at all so if it's lean it's by accident.\nSimplenote is pretty simple. We don't have many images or animations or files or media to take up memory and processing time. It should be a leaner application because it doesn't do much.. > The code I posted just does that.\nah. in our case I think it's simpler because what I meant is that Simperium gives us the queues to where changes occur and we can run them through the same draft-js update function as direct input does. that is, we can use things like Modifier.replaceText() or Modifier.insertText() etc\u2026 no need to manually interact with the block structure.\n\nAtom editor had issues with React powering their editor as well, and decided to move to a more manual solution as can be seen here atom/atom#5624.\n\nThis is the reason I created #568 and want to see if we can get Monaco to do what we want. I've also considered a custom solution but think that's probably too big of a task for our needs, and Monaco is essentially that custom solution done for us with a few extra constraints. What Monaco doesn't seem as easy for is decoration and variable-height lines, but I may just be inexperienced with it to know of easier ways.\n\nHow can I be a help to you with this? are you wanting to explore some ideas and post PRs for them? I'd be happy to review or answer any questions you might raise. Really appreciate your energy on this as I want Simplenote to be able to handle those large use cases, such as when writing a book.. \ud83d\udc4c. @roundhill don't forget to create a release tag! \ud83d\ude0e. Closing as a duplicate of #301 - I would suspect that we can get this in for the next release, which will probably be 1.0.9 (just pushed out 1.0.8 for testing). I made the mistake of assuming that the macOS and Android apps followed the iOS behavior. This PR was built based on what @drw158 wrote in #143 but we could drop it altogether too.. @drw158 any opposition to merging this?. > I don't think it's ideal that the email tag will disappear after you enter it\nthat's a really good point. I'll try and come up with some kind of dialog such as exists in the iOS app. thanks for the feedback!. @drw158 don't know if you want to take another look at this while away, but I added a popup dialog similar to on iOS, though here there's a link to open the share dialog directly.\n@megsfulton would you be willing to do a design review of this? namely there's junk CSS in there I'm sure is done better differently. I had trouble initially with the editor displaying over the popup and thus couldn't click on the share link. Also I would appreciate some review of the text in the popup as I just kind of doodled it down.. Also a dupe of #301 - closing to keep issues organized. Good catch @roundhill! I tested and it worked fine.\nResolves #301 \n:shipit:. Thanks for your work on this @pacharanero. I think we need to be paying attention not only to leading # symbols but also other Markdown syntax. Should we show the leading _ and * for instance if the title/first line has been emboldened or italicized?\nOne of the things I would like to see (probably not something I'll focus on for the next release) is to just render the first line completely and take the plain text output from the render for the title. Right now our data model doesn't perform this work but there are a few things I would like to see us do when notes are updated:\n\nRender the title and excerpt then remove all formatting for the list\nStore this text and precompute the height for the note list (react-virtualized) as a performance optimization\n\nThoughts?. > \u2026I didn't want to introduce unintended usability problems for people\u2026add other chars later? \u2026use this workaround temporarily\nthis makes me leery @pacharanero (and if you knew me you would also know that I don't believe that \"temporary code\" has ever actually existed :wink:).\nwe definitely will be introducing changing behavior in this PR if we simply strip a character or two from the beginning of the note. this is definitely a problem if a note is marked as non-markdown.\nlike I said, I don't think I'll be focusing on this issue for this upcoming release but I wouldn't want to discourage you from working on it. I'd be happy to continue to review and test your code (and we'd love to be able to list you as a contributor!)\nhere are a few steps I think would be essential to merging this:\n - don't touch non-markdown notes\n - render the note preview (title + excerpt) and strip formatting. there may be a marked renderer which does this.\n - make sure this doesn't bring performance regressions for he note list. obviously it will be slower than it currently is, but our main goal is not noticeably dropping the frame-rate/lag while scrolling\nwould be happy to provide any help I can. thanks for the activity @pacharanero! please don't hesitate to ask questions here either; we'd be happy to help any way we can.\nit seems reasonable that a release coming up soon after 1.0.9 might involve some major data structure changes to the way notes are stored. this would be a perfect place to strip the markdown from the note title because it could be computed once and then whenever the notes actually change.\nin the meantime, we would have to recalculate the transform on every render or cache the changes and keep them in sync with the note contents. you can check out the note-list.jsx and see some rather messy code I recently pushed in to keep the list performance acceptable. all of that I hope to eliminate in this big data structure update at some point.. Thanks for reporting this @djordjeandrejevic. I was able to reproduce the behavior and we'll make sure we fix this; it wasn't intentionally changed to this behavior.. Thanks @taimaiduc - the bug is already reported and should be fixed with #579. If you would like to confirm that you also see a reported bug please leave a :+1: on the opening issue description via the GitHub sticker button\n\n. Closing as this should have been resolved in #579. Please reopen if it remains after the v1.1.0 release coming up.. Thanks for the report @gubrist and I hope this didn't interrupt your flow too much!\n@Copons maybe we missed the fact that Windows apps still use \\r\\n as newlines and we need to coerce this format when we fill the paste buffer\nsomething like selectedText.replace( /(?![\\r])[\\n]/, \"\\r\\n\" ) maybe (negative-lookahead \\r followed by \\n meaning \"replace all newlines not preceded by a carriage return with a \\r\\n). @gubrist the output should be in UTF-8 encoding, with simple newlines, in the picture that would just be LF and probably UTF8 or UTF-8. We could potentially detect the host operating system and normalize the line endings accordingly but I have some other concerns about that too. Let's do some research on how other paps do this when saving plaintext files.. @roundhill and @Copons I would also like to try and reproduce this behavior from the note exports in Windows and tack on that fix (if needed) into this PR since they are so related.. :shipit: . Thanks for reporting @gubrist! I'm afraid this is going to be an issue far more related to the Print to PDF utility than it is with Simplenote.\nWe don't have any way of forcing other software to do specific things. I was able to \"print\" a PDF and use search and other tools as expected.\nI'm also going to close this issue since I don't think this is in our control (we can't change Microsoft's software) but if you become aware of something we are neglecting we can reopen this.. I'm going to close since this is a duplicate. We can track in #312. Closing as this should have been resolved in #578. Please reopen if the issue remains after the v1.1.0 release.. Closing here and folding into #37 . @DTherHtun this appears to be related to an Amazon S3 outage affecting large swaths of the internet. We want you be able to download Simplenote! Please try again after a while as this scale of an outage shouldn't last too long.\nhttps://status.aws.amazon.com - it shows green as of the time of writing this comment but they acknowledge increased error rates and it's affecting many services.. :shipit: if you have tested each of the functions which were moved. :shipit: . Thanks for the comments @owcz! I'm going to close this since it appears to be a duplicate request to #459; feel free to follow along in that issue.. @drw158 have you thought about this? do we have some meta+arrow combination not already taken? or something like some IDEs do with Ctrl+[ etc\u2026. Closing as duplicate of #37 . Thanks @yoyoyojomo . @mizejewski it should work for bulleted lists when typing - or * or + on new lines if you have some spacing before them.\n@druesome we can check into numbered lists. we'd probably want to make sure that the mobile apps also do this. one unintuitive aspect is that Markdown numbered lists ignore the value of the number and restart the numbering at render time from the beginning. it could be unexpected to try and auto-generate the number.\n\nwhat should happen if we have 1/2/3 and we hit enter after 2? should we get a second 2? a second 3? should we rewrite the whole list? write another 1?. @gubrist I'm going to close this because I think this probably has more to do with the PDF printer than with Simplenote. We're not doing anything custom here and when printing the notes.\n\nIf you want, could you print out a basic note and share it with us so we can try and see what you are seeing?. Oops @gubrist - we'd need the PDF documents to check.\nDo you get the same results with the other PDF virtual printers?. @gubrist we need a PDF to examine this more because I can't reproduce your problem. The printouts I'm making are searchable and I'm not doing anything custom or special to produce them. Do you need help finding a way to share a PDF?. Thanks for the report and cross-links @gubrist.\n@roundhill and @jleandroperez I think this probably results from the awkward data model we have for tags, especially since this appears to affect all apps?\ntags have a name and an id that are often the same thing but the id can also apparently be assigned as some kind of UUID. I've seen this for a long time but haven't had the chance to figure out why or fix it (requires cross-app coordination). worse, in some places we seem to use the two fields interchangeably instead of settling on one.\nit would be good to somehow audit our use of the tag data and maybe formalize in a document somewhere the normative ways to use and set it. @roundhill I wonder if we could go through and try to run cleanup on existing tags - do you think we could safely do that automatically?. thanks for the request @zohozer! by happenstance and not by choice we used to actually have RegExp-based searching in the app but we took it out in favor of plain-text searching. for one, the search results were unexpected for most people, for two, searches from different places around the app were harder to make consistent.\none thing that we want to make happen when we are able is to make searching for multiple words work better just as you bring up with World Hello as well as add in support for searching for multiple tags on a note.\nif you'd like to get started helping out we'd be happy to lend a hand in any way we can! I don't think it's likely, however, that we'll intentionally be pulling in RegExp-based searches into the app at any point in the future. Simplenote is, after all, supposed to be simple for most people.\nif there are specific needs you have for some kind of complex RegExp you can always export your notes and get it done. I'm not suggesting this as a normal workflow but as an exception. there's a notes.json file in the export that contains all of the notes and tags and meta information in one file.. Closing because of other search enhancements. From what I understand of your described problem this will be resolved by #604 because \"Hello World\" will also match a note with \"Hello world\". Thanks for the report @grvrulz \nLooks like we might need some adjustment to the print stylesheet. Looks good to me! Thanks for the fix @owcz. After this change I was able to build the OS X package but I'm having trouble with the others. @rodrigoi would you mind giving this a look-over to confirm that the update works well enough?\nThanks for the fix @owcz!. @Copons I'm getting an error while testing this - wasn't able to select an older revision.\n\nI think the hardest part about reviewing these changes is following both the code moves and the logic changes, reorganizing and converting to Redux at the same time. are you getting this error as well?. Thanks @unforgettableid. We have discussed the idea of indicating if there are changes in Simplenote which have not received positive confirmation of being received at the server.\nOn that note we never actually trigger sync operations because it's always running as long as the app is open. There are ways to know for sure that changes we make locally have been received by the server but we cannot know anything more, such as being certain that changes weren't received by the server or whether we have the latest version of a note.\nAt best in specific circumstances we could say, \"We definitely did not synchronize your changes because the network is unreachable. Would you like to wait and see if it comes back up?\" But once it does come back we're left with uncertainty if the changes are definitely synchronized (though likely they will be).\n@drw158 and I have chatted a bit about this and I'm tempted to close this specific issue because the challenge of knowing is much bigger than a specific menu item and the implications would probably change if we fixed the root issue. I'll keep it open for now and see if he has anything to add here.. @unforgettableid thanks for the followup. we actually do experience routine \"unlikely\" and \"unusual\" cases among the pool of Simplenote users. it's fun that way on account of the fact that these rare conditions do pop up and we are exposed to them, to try and make sure they don't cause any more trouble than necessary.\n\nprovide a \"Save and Exit\" command.\n\nit's not really about the specific words used. in the very moment before clicking on this hypothetical menu button, the app was already \"saving.\"\nwe've definitely pointed our sights towards a small and limited indicator to try and better convey if we have a local queue of changes not yet sync'd.\n\nCan Simplenote know for sure that all local changes have been successfully received by the server?\n\nherein lies the problem because the answer to this question is \"no.\" if it syncs successfully and reports back then yes, we can assert that. however, in the case where we don't hear back we can't.\n\ncould you make a \"Save and Exit\" command?\n\ngoing back to the discussion before, we need to figure out what this would mean. the successful path is safe: already done! the unsuccessful or maybe unsuccessful path is the hard one. how long should we show a dialog saying, \"we aren't sure if your changes have been synchronized; continue waiting?\" we could probably assume three to five seconds but that even breaks down on a mobile network (for example) where we see packets occasionally come back successfully after twenty seconds or more (those long-lived responses are the worst!)\n\nI'd like to understand better why it is that you feel like you need a save button. Did you experience data loss? Did the data not appear on another device when you expected it to? \nIn many cases we might be fighting for the solution to a different problem, as one of Simplenote's primary goals is to make your notes instantly and reliably available on all your devices regardless of the quality of network connection (and yes, we apologize for the data loss issues we identified in some earlier versions of this app).\nIn other words, supposing that the notes were synchronized before you hit \"save,\" would you still feel the need for the button?. Thanks for the contribution @popey. I'm wondering if this really belongs in our README though. We don't provide installation instructions for the compiled app for any other systems, only for setting up the development environment. For example, we don't include apt or yum or portage instructions just as we don't provide instructions for brew.\nMy guess is that it would be best to support installation for snap in snap. Thoughts?\ncc: @drw158 . @popey I'm going to close this for now as I'm not sure what to do about it. we don't officially support snap or any other third-party distribution platform. I might consider a variation here but we would need to have a disclaimer about snap not being an official source; would also want to make sure we put some other methods in. since this is the development repo I might like the idea of creating a separate INSTALLING.md file or something like that with client-side installation instructions. How do you feel about that?. Good find @gie3d! That g always gets me. I tested out your code and found that it appears to solve the issue but I wanted to seek your input on a slightly different way of doing it and see how you feel about it.\n```js\nconst includesSearch = ( text, search ) =>\n       (new RegExp( escapeRegExp( search ), 'gi' )).test( text || '' );\noverEvery( [\n    matchesTrashView( showTrash ),\n    matchesTag( tag ),\n    matchesSearch( filter ),\n] )\n```\nin this case, we're passing in the plain search string to matchesSearch() instead of passing in a RegExp object. the benefit is that we're removing the shared mutable state that was there before. I realize that I missed this because it looked like we were creating a new RegExp object on every search but actually it was on every note within a search. if we create the RegExp inside of includesSearch we no longer have to worry about that mutability.\nthoughts? thanks for the PR!. cool. thanks again @gie3d - I'm going to merge in your changes. thanks for being part of the team!. thanks @gie3d! I hadn't gotten the chance to look over the issue yet but I'm glad you found this. do you think it would be possible to put this inside of componentDidUpdate() instead? inside of render() it could cause some more glitchy behavior, for example, when receiving externals updates from Simperium (this is my guess, I haven't verified)\nthanks for taking the initiative to report and resolve - we're glad to have you contributing!. > I'm not quite sure about the glitchy behavior you mentioned. Maybe you can share some information with me\nFor example, if we have Simplenote open on another device it could trigger remote updates. React is free to serenader the components even if it doesn't change. I think this might be the case if we add a new tag somewhere (even not on the same note) that it will serenader the tag field.\n\nin my account on simplenote.com or my macOS (which both are v 1.0.8)\n\nsimplenote.com isn't running this Electron/React app and neither is the macOS native app (the one which has been in the App Store).\nnormally I would prefer to leave the two issues to two separates PRs but I think it's okay to leave them together here if it all seems to work when we test.\n\nI cannot add a unit test for this as I still cannot run it.\n\nunfortunately we don't have much in the way of testing but you are free to create some using our Jest test runner. See lib/components/tag-chip for an example.\nI'd be happy to help you get it up and running. feel free to ask about any problems you are facing.\nthanks again!. Thanks again @gie3d for your hard work on this! I was occupied recently and couldn't get around to performing a final review until today. We're glad to welcome your contribution!. Seems like this caused a regression where the tag input field was being changed too often, whenever the app updated basically. I have made a change in #603 which corrects this behavior but I'm having trouble testing it to make sure I didn't bring back the original bug.. Closing as this should have been resolved in #578 - please reopen if you continue to see this problem after the 1.1.0 release.. Thanks for the contribution! This looks good to me. @drw158 any reason not to incorporate this?. Thanks for the report @canorus. Can you also let us know which versions are the \"old\" and \"new\" ones?. Thanks @Canorus - the \"old\" version is a native macOS app and won't be going away while the \"new\" version is what we've put out there for Windows and Linux users (it happens to run in macOS as well).. @itaysk we intend on fixing every bug we're made aware of, but we don't have any hard timelines on the updates. in the meantime, we're always glad to help anyone who might want to help contribute!. Thanks for raising this @damiongans - we don't currently have translations available for Simplenote, though we would love to and plan on it at some point.. > The Android version is available in Dutch, so maybe you can port that easily to the desktop app?\nI wish we could @damiongans - the problem is that we don't have the translation infrastructure built-in to the app. If we had it we could probably do that. This might actually be a reasonably good project for someone wanting to help out with a \"manageable chunk\" of work.\nUnless I'm mistaken, we could accomplish this with these broad steps:\n - Pull in a translation wrapper such as automattic/i18n-calypso or any other popular one that fits with the project\n - Build an Electron-based provider for the translation files. We probably wouldn't want to load them from the network on every load of the app. We might ship them with the distribution, for example, or might cache them and routinely update them.\n - Wrap all text in the translate wrapper. Should be resolved in #605 \nI believe that this was introduced in another PR which fixed a different bug \ud83d\ude43 \nIf you find that this is still broken after the 1.1.0 release can you reopen the issue? Thanks!. @unforgettableid thanks for writing up this related issue. I think it's a great idea to indicate total loss of network connectivity (though we're still probably looking at a while before being able to get it in).\nIt should be possible to indicate if we have a known successful connection to the server and indicate uncertainty if it's lost. On startup we should also be able to indicate until we get such a connection that the app is in \"standalone mode.\". Thanks for the report. I'm going to call this a duplicate of #552 and close it for now. Please feel free to reopen if you don't think it's the same bug.. Looks fine to me @kwight - :shipit:. The more I get into this the more I feel like we need a text editor that more intrinsically coupled to the data model. draft-js at least operates on atomic edit operations with descriptions, but the textarea don't care. It gives new states on update but doesn't indicate how the content changed. For large notes this too could lead to big enough performance issues to be difficult. Actually, I'm sure this textarea is leagues better than draft-js was, but it does add additional complexity to the state updates.\nI also want to check out the Monaco editor (which powers Visual Studio Code) and see if we can get it look right visually. It's already blazing fast and they have done the heavy-lifting to making large documents scroll and update in controlled manners.\nThere are approaches that involve splitting the input into separate <p> tags for each line but they additionally require using contentEditable in order to make scrolling work. Some issues revolve around updating the DOM nodes appropriately and not getting lost in the confusion.. Thanks @copons - those references have been removed. @copons I think this one is ready. Interested in giving it a go-around @kwight?\nIn my own tests it appears significantly faster to load very large notes. List autocomplete appears to be working relatively well - I'm not sure how to exhaustively test it. Indent and outdent also appear to be working as I expect them to.. I updated this branch to the latest master but I think I lost some important bits related to focus - stuff that was updated in master since I started working here. Need to resolve that before merging.. Closed in favor of #692 . Thanks for your feedback @maanemann!\nThere is no way in Simplenote to upload images as you discovered. The format you found for pulling in an image is standard in the Markdown family of formats and that's why this is the way we do it there in Simplenote.\nIt has been discussed and debated how best to incorporate something like image uploads but we just don't have a clear path forward for that in the app. We hope you are able to find it useful anyway!. @Krzychek we have explored this idea but haven't been able to get it all together as quickly as everyone wants and hopes. I'm not sure what exactly you are proposing that would allow for people to add this feature without getting deep into the app code.\nAre you offering to write some plugins?. @Krzychek I don't see us having any kind of plugin API available anytime soon. We would need to make sure it's available in all of the five different platforms (Android, Electron, iOS, macOS, and web) and also keeps to the mission of being simple.\nI don't think that addActionButton would be the hard part either: more difficult would be the onClick action. . Oops, I addressed #581 which should have been marked as a duplicate of this one. Regardless, this should be resolved in #609. Closing as a duplicate (sorry for the wrong-order in which I addressed these).. @remarks the intended behavior is that any new note follows the setting of the previous note. are you saying that when you have a note with markdown enabled and create a new note that it's not enabled in that new note too? I just tested on my copy and it's working as I expect\u2026\n\nCreate a new note, enabled markdown\nCreate another new note, markdown is already enabled\nCreate a third new note, but disable markdown on this one\nCreate a fourth new note, now markdown is disabled (follows the previous note). Really nice PR @roundhill! This is so much nicer than signing up on the web and we needed it.. still a while longer unfortunately @giannissc. we're trying to make sure we get something working across all apps before releasing it here. also we're trying to answer some of the basic questions like is this the right way to toggle todos and display them\u2026\n\nthanks for the interest! we definitely want to make this happen as soon as we can, but we just don't know yet when that will be. These 45 lines can be easily recreated later and it's not going to come in soon to the Electron app. I'm relegating this into Automattic/Simplenote-United#6. Obviated by the merge of #579 . Thanks @Copons - I deliberated over getState() too but decided it was clear enough due to the small size of the module and also due to the fact that the whole thing is pretty specifically limited to window-specific parameters. If you think it's worth it we can update the naming later.. Thanks @Copons. I saw that behavior too and I think it could relate to draft-js. Note also that I have a PR to pull it out #568.\nDid you also experience this in the preview mode? I'm not sure what \"Markdown edit\" mode means here.. Updated @copons so that now the vendor bundle builds with showdown instead of marked\nIt appears like jest is actually pulling in marked but only for development. Shouldn't make it into the final bundle.\nbash\nnpm ls marked. Thanks for finding the duplicate ticket @djordjeandrejevic - I'll close this one. Should be fixed anyway soon with #579 . > Confirmed the same happens on Windows 7.\nthanks @KokkieH - just a quick note: if it happens in Linux, Mac Beta, or Windows it's almost 100% surely going to happen in all three.. Closing as a duplicate of #492 where I think we have some more diagnostics information.. Thanks for the report @Mrlodgical. This isn't something that is on the roadmap for the near future so I'm going to close it out. There are lots of things to work out before this would be possible.. Thanks @drw158! I've updated it. It feels a bit different to me though for sure.. I can't pin it down, but for some reason the way the iOS app does it, with the arrow curling around the top and pointing to 9 feels more natural to me than this icon, pointing at 3.. @drw158 it may just be the \"different\" effect, though I think for consistency's sake we should probably align them all the same across the apps.. Part of our trouble is that we can only access history when online because we don't pull that in. I think it's reasonable, especially on desktop, to start loading the history in when we open a note (maybe a second or so after having loaded it). That would mean we could disable it when not online completely and also know in advance how many revisions we have. I'll look into this, maybe slate it for 1.0.10 since it will probably require more work.. Closing as duplicate of #524 . Thanks for the report @liberatoaguilar!\nMarkdown has some funny rules around headers and the standard implementation requires a space after the #s and before the content. Can you try adding a space and seeing if it works?\nThis is confusing with Markdown because different parsers handle it differently, but we hope to try and implement the spec as much as we can. http://spec.commonmark.org/0.27/#atx-headings. Thanks for the question @seaneking! We have explored the idea (notably in #418) but haven't yet made plans to add this. It's going to require simultaneous development across the different Simplenote apps and that will take time and coordination. We like the idea though and hope that at some point we will get it in and make it mesh well with the Simplenote paradigms!\nFor now I'm going to close this issue but please feel free to check in as we update the app \ud83d\ude04 . thanks @lindsaymacvean for reporting this. we're aware of the bug and are working on it already in another repository (this is for the Electron-based app), so I'm going to close the issue here.\nthe issue definitely started appearing in Chrome 60 and we're trying to investigate what changed there that is now breaking the app.. @lindsaymacvean sorry I didn't answer that already. we have a form at simplenote.com to contact us with issues for the web app. when I answered yesterday unfortunately the web app wasn't in the list of selectable apps \ud83d\ude43 but later in the day we added it back in :smile:\nhttps://simplenote.com/contact-us/. Closing here as a duplicate of #37 - check back soon for updates in v1.0.9!. Thanks for the suggestion @Topy44 - I'm going to close this here and fold it into #37.. Actually I'm going to leave this open because I'm not sure if we will have a hotkey for trashing a note. We'll keep this tracking for a while\u2026. Hi @neufena - great news! If you trash a note they will be \"soft-deleted\" automatically. You should be able to find the trashed notes from the same place where you can list notes by tag.\n\nWe may occasionally delete notes which have been trashed for a long time though. If we want the notes to stick around forever they will need to be out of the trash; if we want to have them available in case we change our mind within a month or two of trashing then the normal procedure should work fine.. Thanks for finding this and getting some steps in! We'll try and see if we can replicate.\nI'm confused some on step 4\n\nWhen desktop regained connection, notes that had been opened on iOS w/ new update time pushed to client, overwriting changes.\n\nWere the notes new on the desktop and unsynchronized in iOS? What exactly was overwritten? New notes on iOS should nominally be different entities altogether than new notes on the desktop.. This seems related to an issue we had in the past. We might need some time to dig in but we take sync bugs seriously. Thanks again for the report and debugging!. Thanks all for commenting here and helping to provide context for the issue. We certainly don't rely on any timestamps when updating notes. One of the design decisions at play here is having a single central writer so we have been able to leave out all the complexity of trying to rearrange edits: the result is that edits are first-come-first-serve on the server.\n@jleandroperez may have some insight from issues in the past on this.\nThere is one case I'm ware of where changes will be lost but they should be saved in the note's revision when things are working properly. Let's say we have a Mac app Steve and an Android app Larry. When we start on our flight Steve and Larry have the same data. We make edits on Steve offline to some notes. When we arrive at our destination we open the notes on Larry and make conflicting changes and those are immediately sync'd to the server. When we connect Steve back up to the internet and it attempts to send its changes to the server, the server says, \"I'm sorry Steve, but the note you edited has been changed by Larry since you made your edits and I can't automatically merge them. You will need to tell me what to do because I can't find a way to make both edits fit together.\" Then Steve is supposed to decide if it wants to completely wipe out the changes Larry made or forget its own changes and accept Larry's changes. I haven't reproduced this yet but I'm guessing that we're dropping the changes on Steve to accept Larry's changes, if you will.\nNow this scenario should only happen if we make conflicting changes. For example, if at the beginning we had a note whose contents were \"Pet\" and Steve changed it to \"Cat\" while Larry changed it to \"Dog.\" For most changes they won't conflict and we wouldn't be considering this.\nIf it can Simplenote will merge non-conflicting changes so this won't be a problem.\n\nDiff of changes from different sources would be my preference but that can be intimidating\n\nThis is certainly true. It may be possible to do for small changes but presenting the kind of diff that developers are used to might be very confusing. I can hardly resolve merge conflicts on source code I deal with and I've been doing it for years \ud83d\ude43 \n\nI don't think it's likely we'll be able to get this resolved immediately but it is one of our top priorities. Unfortunately we're in the middle of a sprint to get v1.1.0 out the door but after that I think we should have more resources available to focus on this. In the meantime, thanks again for all your wonderful help!. > because I always find it only has a day or two's history in it, even for notes which are older than that\nThat doesn't sound right. It should have history going back to the very first edit of the note (within reason - after a thousand or so changes the very first one might disappear). Another thing we'll look into.\n\nA first-come, first-serve, throw-things-away system is not really \"sync\" in any meaningful sense, and it's a bit disappointing to hear that this is the algorithm! At the very least, why not create a new note called \"Note Title (conflicted version)\" or similar, which has the version which would otherwise have been thrown away, and let people resolve the changes manually, or just delete that note? Just throwing away stuff seems like a very bad solution. I agree the usable solution is not to have people manually resolving line-by-line diffs. I guess you could also make it appear in the history properly, but only if the history has some level of actual persistence.\n\nWe don't throw things away: the apps are nominally designed to keep the \"thrown away\" versions in history. If we have a bug in that behavior that's a different issue. Simplenote is designed intentionally with the goal of never losing any data. The algorithm is there to prevent a host of related bugs other systems have when trying to determine ordering of edits. \n\nBut going back to this problem, I'm not sure I made actual edits on Android.\n\nThat's helpful to know, thanks!\n\nSo perhaps the problem is that it's triggering the \"edited\" flag when it shouldn't?\n\nWell we don't actually have any kind of \"edited flag\" but instead always rely on the actual data: do we have changes registered for a given note\u2026. As an update for everyone here who has noticed history issues, I discovered an artificial limit in the Simplenote library for node environments. It was only loading up to the thirty-most-recent edits when more might exist on the server. I have a patch open to resolve this and we're hoping to get the fix into v1.1.0. That fix would open up the full history of revisions.. The list view one only really applies in narrow screen environments because it gets hidden. Again, some major app architectural pain is behind these quirks. > We have duplicated shortcuts for the search field: CmdOrCtrl + Shift + f and CmdOrCtrl + f.\nGood catch here. I believe that our intention was to make CmdOrCtrl + f search within a note and be repeatable to scan through the results whereas the global key search all notes.. > When using Ctrl + Shift + p on MacOS (Ctrl, not CmdOrCtrl... Cmd worked fine), on a note without markdown enabled, the editor selects the text from the caret position to the end of the line.\nHow odd! I will look into this. > Also, CmdOrCtrl + Shift + [ may be confusing on non-EN keyboards. Maybe we can use CmdOrCtrl + Shift + l. Maybe adding it to the View menu is a good idea.\n~That's a good point. I'll use l~ Oops, that's reserved in macOS by default. Any other suggestions?\nThanks by the way for the great testing!. @rodrigoi I adjusted the note list view to use n instead of [ - that was a good suggestion!. > moving matchesSearch closer to matchesTag on lib/utils/filter-notes.js.\nwhat do you mean @rodrigoi ?. Merging as this was a silly mistake not to have fixed. We can revert if we need to :smile:. Do we think there could be places where this isn't wanted? I think I saw a comment somewhere about only creating the new note content when there were no existing search results.\nThat is, if we typed in a search and notes returned then New Note creates a blank note.\nIf no notes match the search we inject the content of the search field.\nWould that flow make any sense to y'all?. the macOS app doesn't do it - I'll dig in and compare platforms. Thanks for reporting @m-e-h - this is actually a duplicate of another already reported issue - #511 I think - and should be resolved already here in the code. Keep an eye out for the upcoming v1.1.0 release where it should be fixed for you!. Yeah it was unfortunate timing because I recently closed out that issue :wink:. Just a quick note that the upcoming 1.1.0 release is going to support Markdown tables :smile:. @yustnip thanks for reporting. While I sympathize with the frustration I could imagine that causing, I also find that video a bit funny watching the pointer shrink \ud83d\ude43 We'll dig into this. I'm guessing it's related to Electron more than anything else.. @PhiLhoSoft we're not implementing a custom Markdown parser so we won't be diverging from any standard implementation soon. Nominally we have chosen to render GitHub Flavored Markdown. That being said, in the upcoming 1.1.0 release we have replaced the older parser and the newer one is performing much more closely to the GFM standard.\nIt supports tables, code fences (with the language hints for highlighting), and many more features that the existing marked-approach has lacked.. Probably related to #578 - we can dig in and report back later. Oops, I just realize this may be different than #578. Sorry. Let's investigate.. @rachelsquirrel I tried reproducing this but every time I open the app it comes back to the list view (not the note detail view with the back button).\nCould you test with the latest macOS beta and see if you can reproduce?. Kind of, but people can delete that note and get back to an empty list.... @taigi100 live-previewing of the editor is something that will be further out on the radar though we're big fans of it too!\n@kodburn would be very happy to help in any way we can to make it easier for you to contribute. you can get started and play around with this repository - it connects to a test backend service so you won't risk destroying any legitimate note data :wink:. Thanks for the request @dai-pch. Sadly we're not going to try and make it easier to run JavaScript over Simplenote notes. Unfortunately if we were to do so it would be inviting an array of security issues we are constantly trying to prevent - a shortcoming of the way the web works today.\nAlthough I see great value in being able to quickly write math inside of the notes themselves I don't see it coming to Simplenote any time soon. As an alternative you might explore tools for forming MathML markup which you could paste into your notes and that should render, though MathML isn't without its own issues.. Thanks for reporting @gubrist - I'm going to mark this as a duplicate of #54 because we had already decided to add an untagged menu item.\nIn general, I want to repeat that we're grateful for your feedback. You have provided many great reports for feature requests/bugs and we're happy to work to make Simplenote more effective for you and everyone else :smile:. Thanks @roundhill - I updated the text in 1b01f20 and removed some newline issues I thought would occur from the way I had it originally.. can't we reset the throttling on login?. I'm going to mark this as a duplicate of #560 because the operating system shouldn't be playing a role here. Thanks for the report!. Is it a large account? I'm pretty sure there are some existing bugs in that download, but most of the times I've seen customers have trouble it's been with large accounts and the server timing out.\nIn the  meantime, (and we need a better place to report problems with app.simplenote.com since this is the repo for the Electron app), they might try using the Electron app which has its own local export functionality and the export it produces will even give them more data about their notes than the website will.. nice suggestion @secretfork - we'll have to try this out if you don't beat us to it with a pull request :smile:\nmakes me wonder why it's taking so long to get ready, also if we should toss up an indicator that it's loading at least. Nice work!\n@roundhill I had wondered about the UX implications here - is it ridiculous to think about a splash screen? should we spend the time to figure out why the app takes so long to load?\n@secretfork thanks for this effort - by any chance do you have insight into how long it's taking to be ready and what it's doing until then?. Thanks for bringing this up @taigi100 - I verified with the Common Mark spec that these lists should continue as you expected.\nHowever, we don't have our own Markdown parser in the application and so we won't be making changes to bits of how it processes Markdown. Instead, we are aware of issues with the wholesale system.\nIn #577 I replaced the existing parser with a more updated and modern parser. It's in the next release - 1.1.0 but I'm not entirely sure when that will be available - hopefully very soon. Can you check back after the update and see if it's still broken?\nPending that we have a number of issues centered around Markdown parsing and this will be rolled up in those changes. Thanks!. 1. Would we want the date on all views or limit it to comfy and expanded, or just expanded?\n\n\nFurther, would we want to take the same kind of idea present in the WordPress.com notifications to split notes into time groupings with headers for each grouping like, \"Today\", \"Yesterday\", \"Older than two days\", \"Older than a week\" where we could provide more or less in the date string based on the context of the group?\n\n\nDo we need to display Modified or is it clear enough as the chosen sort value?\n\n\nThanks for the screenshots @natanielcz!. > @natanielcz would you mind adding some testing instructions?\n@rodrigoi I updated.. Thanks again @natanielcz!. This looks like some great stuff @natanielcz - can you help us by providing some background on the changes? It looks like there's far more in play than just adding RPM support.. I believe that this is directly related to the bug causing the issues in #602 and so I'm going to close this ticket as a duplicate. it's not because it isn't important but rather for our own organization and to try to keep the related issues together. I spend shamefully too much time this weekend auditing these failures and have gained some insight into the problem - thanks again for everyone who has taken the time to report and interact here. you are invited to join the part in #602 unless you believe strongly that these two are separate.. @natanielcz thanks again for the contribution - can you provide some context in the description here? why you want this change, screenshots or at least descriptions of the behavior you want to change?\nalso a quick note, we will probably not want to introduce the nested ternary, preferring instead something like explicit if structures or better a separate function. @natanielcz I was going to leave a comment then I felt like it would be annoying for you - so I hope you don't mind but I just inlined that function. if you do, please just raise it here.. @roundhill looks like this is ready to go to me!. > are you still seeing that behavior on this branch?\nyeah @roundhill I tested a few times to make sure, but I didn't rm -rf node_modules && npm install so maybe I had the old node-simperium library in there. @roundhill I just did a full clean build on this branch and reinstalled the npm packages and still had the problem. After logging back into my test account it appeared as though there were no notes. The tag list was filled out and I could select tags, but no actual notes appeared in the note list until I created a new note, at which time all of the notes magically appeared.\nAlthough I think this is another issue we can address in a separate PR as this patch appears to fix the issue of the old note appearing on login when it shouldn't.. did you consider the work in #650 for this @roundhill?. Not at my computer here, but that looks suspicious like it could be interacting with my keyboard shortcut to focus the search field . Does this leave it auto-hidden on macOS? If so, :shipit:. Code looks fine. I don't think we have to guard against user-input links but it's worth pondering a bit, if we can open external URLs that came from untrusted sources (shared notes, for example).\nIt didn't seem obvious that new-window could come from user-input code though, rather only from our own code. Is that right?. > Do you know how the markdown parser handles links?\nwe should be able to do whatever we want with links from the markdown. it's just a DOM node so we can scan it and add any attributes there or sanitize at will\nhttps://github.com/Automattic/simplenote-electron/blob/c829a2f4404b4676084a4f54ae84b65f1c4d61a5/lib/note-detail.jsx#L16. Why was this problematic, @roundhill?. Might it be possible to\u2026\n\ncheck if the machine supports 32bit and only install that one if so\ncheck if the app already exists at the location and choose based off of that?\n\nOr, is there any reason that 64bit is advantageous? If we had no history here, would we prefer 32bit over 64bit? Have we only so far produced 32bit builds?. Thanks @roundhill - I don't have any problem keeping up with our existing behaviors. :shipit: . > I thought it would be nice to keep the editor toolbar at the top with the dividers\npersonally I wasn't sure how hard or easy it would be. would probably be nice to at least explore the idea and see because if it could be done I think it might end up as something we would rather have. if it's too much of a headache (and this would definitely seem plausible) then please do what is pragmatic.. > The only tradeoff was that you don't see the toolbar buttons at all now, but I think it works.\nTo me that seems like a boon - the toolbar buttons are useless without a note to operate on :wink:. > p.s. prettier wanted to format the code that way :)\n\ud83d\ude06 . Thanks for providing the feedback @dschneiderch. We'd love to be able to paste in images and media, but that's not something that will be here any time soon. We have had discussions on how best to do this but it's going to involve a lot of work and coordination between the various apps and backend. I'm going to close the issue for now.. Thanks @darkmunn for reporting - that sounds frustrating! Can you help us out a little more? Does it do this reliably every time you use it? Are there only certain times it does it? If you start typing and continue is that different than starting, pausing for a certain time, then typing again?. Hopefully fixed when #692 is ready.. @natanielcz sadly you won't be able to get access to those logs.\nI believe I have pinned-down pretty much the cause of this though and those reports and this one are all facets of the bug. The data flow is isn't quite proper and that's introducing races between the value of the note on the Simplenote servers, the value of the note in IndexedDB, the value of the note in Red memory, and the value of the note in the local state for the editor component.\nWe need to do one of several things:\n - Move the debouncing of sending updates deeper into the Simperium library and let the app \"always have the state of truth\"\n - Treat the editor fully as a viewer of updatable data and merge updates from the Simperium library into the current session\n - Something else\nEither way we have to merge the updates into the cursor position. When we currently get updates we end up replacing the entire contents of the editor and that resets the cursor position - not good.. Thanks @sujaataarya for the idea! We've had a submission in #710 to do what I think you are asking for. Please let me know if this isn't a duplicate and if I have misunderstood! :Smile:. @sujaataarya you can follow the development there - I think that there are just some bugs in the patch that need to be fixed before we can merge it in.. Closing because it was an experiment but we don't have the time to dedicate to figuring out if this is a good way to go.. I believe that this is directly related to the bug causing the issues in #602 and so I'm going to close this ticket as a duplicate. it's not because it isn't important but rather for our own organization and to try to keep the related issues together. I spend shamefully too much time this weekend auditing these failures and have gained some insight into the problem - thanks again for everyone who has taken the time to report and interact here. you are invited to join the part in #602 unless you believe strongly that these two are separate.. Moving this into #314 where the feature request has been being tracked.\nFor the benefit of those in this thread I'll try and summarize why this isn't in yet:\n\nSomething is wrong on the render of the checkbox HTML as a result of some security sanitization going on. This is a bug and we just need to find and fix it.\nGetting the checkbox to work from the preview is much harder than getting it to preview a checkbox.  We had a working prototype in #576 but that was only for the Electron app where the data flow is a bit simpler. We need to be able to get this out to the iOS, Android, macOS, and web versions too which sadly takes much more time.. Thanks for the suggestion @crystalFljzw! We're planning on adding an untagged menu item in the tag list in order to find these notes. I'm going to close this issue then since it's a duplicate of work being tracked in #54 :smile:. Closing because this is a duplicate of #267. This is a good thing to do and we hope to get it out there before too long. Actually we've had some experimental patches but weren't ready to push their changes out yet. Thanks as always @gubrist!. @roundhill @rodrigoi I have rebased this against the current master\n\n@webmasterraj thanks for the offer! always helpful is running the branch through some testing and even more with font issues to run some tests with non-latin characters.\nit seems like this may have been ready to go but got a little lost in the fray; let's see what @roundhill says\u2026. Thanks for reporting this @jtoy! I'm going to mark is as a duplicate and merge the discussion into #273 where we have some existing conversation around the idea.. > There's a double scrollbar (at least on Mac OS) and the editor does not fill the screen.\nThanks @rodrigoi - I believe that these are trivial styling adjustments that need to be made.\nThe big deal is that we have to specify pixel values for the editor and that's why there's a\nresize handler in there. We should probably rearrange a few things in there\u2026\n\nUse requestAnimationFrame() for resizing adjustments instead of a throttle\nFigure out the right pixel values to use instead of the na\u00efve styling I have in here\n\n\nI tried the requestAnimationFrame() thing and it was no better really. It's a reasonable solution because it will prevent stacking up that function but I think it's fine as-is. I did another test where I used lodash.throttle just to make it look cleaner but it wasn't that much better. There are issues when interactively resizing the window that may just be bits we need to fix in separate work.\n\nOf course I would welcome help as pixels are my weak point.. > This would be a great place to sync up on the styling of the editor for the live highlighting.\n@roundhill it's probably obvious but we do have full control over the colors in Monaco. In this PR all I needed to overwrite was the background color, but we have options for the foreground color, for the highlighting, selection, caret?, and all the syntax elements. @natanielcz Typora is definitely a nice product! We've been working on some kind of syntax highlighting for Markdown for a while. Maybe the first actual code was in #418. Also played with a change of the edit/preview idiom in #677.\nWhile I doubt we'll have inline formatted text in edit mode any time soon, I think syntax highlighting on the Markdown itself is going to happen. Just lots of figure out on how to try and make sure the experience is harmonized among the various Simplenote apps (web, this one, mobile, and macOS native).\nThanks for the input though! We're anxious to get this in ourselves.. Fine @roundhill but I think when we brought this up before we were also opposed to changing the size of the headers and sizes in general. (In this case with Monaco it's harder to change sizes but in draft-js it was actually trivial)\nLet's see those CSS color values!. @roundhill and @rodrigoi I have updated this. I think I've taken care of your concerns. it has some differences from the existing solution but I don't think they are necessarily better or worse (many things are better)\nfun fact, you can use F1 to open up the Monaco command input and there are some fun tools included.\n\n. > is it cool if I add some CSS updates?\nyou would be my hero, not like you aren't already, but you'd be my HERO!. > so I think it might be impossible to make the first line always larger?\nmaybe through forcing the CSS but we can add a custom range and have more control. things like spacing are awkward but font size adjusts fairly well\njs\nvar decorations = editor.deltaDecorations([], [\n    { range: new monaco.Range(1,1,1,1), options: { isWholeLine: true, inlineClassName:'first-line'}},\n]);\n.first-line {\n    font-size: 180%;\n}\nthere are a few more things we need to do to make this work right but that's I think where we start. >  I can't seem to click to put the cursor anywhere but the very end of the last line.\nI'm not sure I follow - what are you trying to do? Set a specific cursor position programmatically? If so, check out modifyPosition on the editor model. @rodrigoi I don't see much use in feature-flagging it because then it'd just be maintaining things without the benefit of the merge tools. I'd personally rather see us keep the branch up to date or merge it entirely. I simply don't have the time available to do this now.. Sadly I don't have enough time to give this the attention it needs. I'm closing the issue and I welcome someone to reopen it as they see fit.\nThere are two or three separate changes being made in this PR and some of them would be good to do separately.\n - Track changes to the notes vs. just update notes on changes\n - Update the cursor position when changes come in\n - Replace the editor\nUpdating the cursor is a big one that would be a good step towards this goal.\nThanks to all who provided feedback and review.. I like the way this opens up screen real-estate but I know we need to think about harmony between the apps, also consider #677 for a paradigm-shift in the preview.. @roundhill I knot other note apps don't always quit. for instance, the Tomboy app lives in the dock and normally you'd close it from the dock icon.. Wonderfully being worked on in #710 by a community member!. For reference: p2XLIi-1i0-p2. > It then moves on to check if there was anything in the currently active editor that may need to be merged, which is why it uses the object in the state because that gets updated on every keypress in the editor, I believe?\n@roundhill I think we should merge this as it seems to fix a problem we are experiencing, but this data flow is what scares me and I think it's good to be working in these parts. we need some terms for the different places we're storing note data.\nanyway, thanks for talking through this. hard stuff!. @hfel from which repository did you install Simplenote? Usually these kinds of things are performed by the repository maintainers. Maybe we could make it easier for them to perform this behavior.. @roundhill it seems like we could think of some way to help with this. maybe a release soon could focus on repository maintainers. we've had requests for a Snap release as well.\nI'm not sure if it would be best to provide hooks into the build (maybe a config file) where they could configure settings after build or if we would want to host a config file in this repo they could create PRs against to create multiple builds. We could setup CircleCI probably to generate multiple builds on each release that way.. > It appears to be fairly easy to do with electron.\nI'm not sure any of us have worked with that or have the ability to prioritize this at the current time but we're always excited to review PRs and help people start contributing!. npm run build:prod was producing this error\nERROR in app.js from UglifyJs\nUnexpected token: punc (() [./flux/app-state.js:33,4][app.js:915,15]\nIt relates to the fact that uglifyjs doesn't understand any ES2015+ syntax. We had a couple options here and one was stop minifying the files altogether (a viable option since this is built for Electron) or tell Babel to transform everything so that uglifyjs doesn't freak out.\nFor the time being I felt like adding the uglify flag would be the best option because it's more obvious why we're performing work we shouldn't need to and hopefully also easier to remove when uglify/webpack are able to handle the syntax.\nAdded the flag in 933b64d. > Do we know why npm test isn't working? Would be nice to get CI going.\n@beaucollins it was working for me.\n```\n\nsimplenote@1.1.2 test ./simplenote-electron\njest\n\nPASS  lib/components/tag-chip/test.jsx\n PASS  lib/utils/test/is-email-tag.js\nTest Suites: 2 passed, 2 total\nTests:       10 passed, 10 total\nSnapshots:   1 passed, 1 total\nTime:        1.049s\nRan all test suites.\n```. Thanks for the patch @trustlix! I'll try and get on it this weekend :+1:. Wow - this is fun, I tried this out on my Mac and although the tray icon worked it was a bit surprising \ud83d\ude04 maybe an icon issue?\n\nThat's the Simplenote icon in the tray in case it wasn't obvious \ud83d\ude09 . @natanielcz do other apps typically provide a disable on this behavior? maybe I'm just not looking, but I feel like I've never seen such an option among many apps that close to tray.. @roundhill I don't think that list.jsx was in use so I deleted it \ud83d\ude43 . Thanks for the patch @Jackymancs4!\nIf there another way we can accomplish this with the existing showdown-xss-filter? Should we be looking at js-xss instead? Could your forked-patch apply to the upstream project?. Closing this due to #721 and #724 . Thanks for the report @IlVecchioMago! I'm going to close this issue because we're already working on this feature request over in #54 and tracking it's progress there.. @alxmjo I tried to reproduce and it looks like the link is working for me.\n\nalso I copied this straight for your report. additionally I tested in the native macOS application and found the same behavior.\n\nI tested in the Electron app (this repo) version 1.1.3 and the native macOS version 1.3.1. @alxmjo can you try with a newer version of the app? I'm not entirely sure still if you running this Electron-based app or the native macOS app (they both run on macOS) but both have been updated since 1.0.8 and the issue may already be resolved.. @Jackymancs4 can you re-evaluate this now that we have merged #724?. Thanks for the report @eir87O.\nYour notes should be safe when working on an unstable internet connection. As long as Simplenote is open it should be trying its best to synchronize your content. There's no \"Sync Now\" button because whenever that button could appear the app is already doing everything it can to sync.\nWe recently added the warning because in some cases people were closing Simplenote after making changes and assuming they were already synchronized when in reality they weren't; the dialog gives people a choice to wait a few extra seconds to let the app finish its work and make the notes available on another device or alternatively to rush out in a hurry.\nShould you have concerns about data loss with your notes we'd love to hear about which circumstances were present when you lost notes or note content. Further, we always have the option to export a full backup of all our notes from File > Export Notes.\nFor now I'm going to close this issue because we don't have plans to add a sync button for the reasons I gave above. If you think there's reason to add to this though please feel free to add more comments or reopen the issue \ud83d\ude04 . Updated @roundhill to allow email links but I left the other comments for separate issues. Thoughts?. @eir87O thanks for the report. currently <center> isn't a tag passed through sanitization which is why it's not working as you expect on the published note. we need to do some investigation before we are able to resolve this though\u2026\n@roundhill can you confirm what the server markdown sanitization does with tags it doesn't allow? does it pass them as text or does it strip the tags out and replace them with their inner text?. @AFortune thanks for the patch! this is great!. We appear to be having some issues with the publish service but it's not related to the client code in this repository. Thanks for the reports - we're on it!. Thanks for reporting this @jtoy. That's frustrating! I think we may have some issues in general with window moving. We'll see what we can do!. Thanks for the request, @djordjedjukic! although we probably won't be building much of a rich text editor any time soon we have been exploring ways to integrate Markdown formatting live while editing.\nYou can see some of the work in #692 . Thanks for highlighting this @starndust31. I'm going to fold the issue into #42 because I think they both get resolved from the same update. There are several places the cursor jumps unexpectedly.. Thanks for reporting @ChrissiePollock. There's a sneaky issue with tags where a tag is identified not by is label but by an internal id. That is, we can end up in situations like this. It's possible to rename tags and end up with duplicate labels.\nAt some point we held a discussion about merging identically-labeled tags but I don't think it went anywhere. Doing so I think would clear up issues like this.\n@drw158 @roundhill what do you think? do you remember us talking about the distinction between tag id and tag label.. Hey all, thanks for sharing here! I don't want to sound harsh but please don't leave +1 comments as they don't help us and don't help you either :wink:\nWe'd love to be able to hear you when you think a given issue needs higher priority, but adding a \ud83d\udc4d as a reaction to someone else's comment or to the issue description is a much nicer way to manage the intention on Github.\nAt this point in time I wouldn't expect to see a tree view of the tags on the sidebar. It's already the case that if we add the tag year and 2017 to a note then it will show up in a search for either of those, and we can manually order tags if, for example, we wanted 2017 to be at the top of the list. I realize that this doesn't address everything that has been shared here as a want but for the time now we're not sure if we will move this direction at all and even if we were it wouldn't be coming any time soon.\nFurther, we would happily welcome contribution. This is a community project and the best way to get a feature that you want is to engage with the project and build out a solution that demonstrates it \ud83d\ude04 . Tough one @roundhill - this will come with much acclaim but not having suggestions and corrections is a big deal I think. I'm not sure how this will tie in to the editor work we've looked at (#692)\nMaybe over the weekend I can try and put some time on this.. A good suggestion @GoodGuyNick - I'd like to circle back on this at some point but I am pretty sure this won't be something that would happen soon.. Thanks @katinthehatsite for creating the issue and for closing it. There are some applications out there (like Slack) which use * and _ for different uses but that at least for me always ends up confusing me because Markdown is pretty clear on its use for bold and italics and they are almost universally consistent otherwise.\nWe won't make this change therefore as you probably guessed because it would mess up some pretty fundamental expectations for people who write in Markdown. That's an easy frustration though! I wish they behaved the way you describe here with * as bold and _ as italics :smile;. How about we add some tag to indicate which import the notes came from? even if we leave it as a user-facing tag the customer could remove them if they wanted.\ncould make mess-ups significantly easier to deal with, like when dealing with duplicate notes or partial imports.. > How about we add a systemTag for that? Then it wouldn't be user facing.\nSeems just as good. I bet some people want to see it, others don't. System tag seems fine. importedFrom: [ 'some-export-filename.json', '2018-10-17T05:13:31-07:00Z' ] or something like that. Can we stick to \"sourcemap\" here? I've found that when using webpack-dev-server the performance impact over eval is minimal to not-even-noticeable\n. I'm okay with adding this here, but is there a reason we need it? I didn't think we were actually doing anything that depended on knowing this other than the webpack build itself, handled by having separate config files.\n. Why the switch away from webpack-dev-server? In my mind I prefer having that instead of an express because the home-grown development server seems like it just adds new complexity to a project and more code to understand and maintain. I like using the binary server, whether webpack-dev-server or something like http-server because we can focus on the app itself.\ncc: @beaucollins @roundhill for input\n. why not simply leave it at \"sourcemap\" ? is there a good reason not to?\nalso, see my comment below about webpack-dev-server\n. well, it actually increases the complexity for our project because webpack-dev-server and http-server are binary black boxes while creating our own express server add code. I'm not against using express, I just question bringing in that scope of the problem - building a development web server - when there are good solutions that don't increase our codebase\n. What's the approach that required a custom server?\nAlso, what benefit does that approach bring us?\n. So I'm fine updating the react-hot-loader to react-transform-hmr because that is and has been Dan Abramov's work and he's pretty much the official say on how to use it.\nOn the other hand, there's been no deprecation of the webpack-dev-server. If you read the first item in the trouble-shooting section of the page you linked to it talks about the dev server environment. I think that this \"boilerplate\" code is nothing more than that, it's a demonstration repo to show how to connect the components but not a canonical guide on how to do it. For the same reason, it's not true that a React project should have the main entry point at src/App.js.\nIt appears like the webpack-hot-middleware is more intended for inserting into existing dev servers to enable the functionality of hot-reloading without having to switch into webpack-dev-server, but we are already using that so it doesn't particularly apply unless there were some feature of the middleware that we don't currently have with the dev server. If that were the case I could see much more reason to depend on it.\n. Do we have a formal style pattern for this yet? I'm all for importing our Automattic styles and this line here is different.\n@srgpqt just for the background context: we normally enforce a code style on git commit and it runs through eslint to flag any deviations. Technically, we're supposed to run all of our code through esformatter before committing, but we allowed exceptions for that mainly because of esformatter deficiencies.\nAnyway, if we don't have a code style, can we create one?\n. cc: @roundhill @beaucollins \n. @srgpqt I'm not sure how this was before you started working on it, but we're definitely trying to push company-wide not to use these on_ or handle_ names, instead just writing a descriptive name of what the function does, such as hideNavigation\n. This looks like it might open up a race condition because of the way setState() works. Also, it appears that this code immediately triggers two sequential setState() updates but we can't reason for whether there will be a single app update or two in a row (though two in a row is probably more likely).\nTwo considerations:\n- If we do need to make sure we sequence the event order we should probably pass a callback into setState()\n- If we can reasonably do so, it would be nice to merge these into a single setState() update for redraw performance.\njs\n// setState() callback\nthis.setState( { stuff }, () => this.hideNavigation() );\n. How about something with fewer brackets and indentation?\njs\neditTags: function() {\n    this.setState( { editingTags: ! this.state.editingTags } );\n}\n. I had a suspicion it was that way. Thanks for following the style. Let's leave this for now (especially leave it out of this PR) but come back to it when we get some formalized style decisions.\n. I know there's a way to wrap the component in a \"provider\" for Redux and that's probably a good idea here - more so than what I did in a hurry to hook the store in to the App component.\n. Not an error technically, but a bug depending on who you ask. We end all lines in a ;, so we should have one here too.\n. The store is a great place to see a data-first design pattern. This being said, I question the value of functions that simply return a property of the store's state.\nI would personally prefer to just let the application call store.getState().selectedNote instead of store.getSelectedNote(). If we are conscientious and up-front about how we want to store this data we will get a well-organized data structure that removes the need for all these getters.\n. Where did appState come from? Shouldn't this just be store.getState().selectedNote based on the code in lines 19-21 above?\n. The app is already setup with most of the actual event-handling taking place in App.js and most of the lower-level components getting their data as props. This works pretty well in that basically everything but the top-level component is just a dumb old component that's super-easy to compose and test.\nSince App.js is connected to the store, there's no need to hook this and other lower-level components up to it as well (well, mainly that's true and I think eventually it would make sense for things like the top-level note editor component to also directly connect to the store but that's another discussion).\nI would rather see us continue to get our data via props and continue to call out the event handlers via props instead of creating new dependencies between components that previously didn't have any.\n. See my comment a few lines below: there's still a lot of value in not making this component aware that a store exists and instead simply calling the passed event handler like before.\n. haha. oh yeah - now I remember...when I was writing this up initially, I was thinking about the single global state tree with branches for the app state, for the notes list, and for whatever else.\nSo here I envisions appState for things like navigation, selected items, purely-UI stuff.\nIt confused me here because we return that sub-tree but never create it.\n. :facepunch: it's always myself from a while back that gives me the most grief\n. @srgpqt and @drw158 probably the reason this was working is because it looks like it is being @import-ed in app.scss.\nEarlier in our Slack conversation I threw in my vote for foregoing this style of inclusion in favor of require()-ing directly in the components.\nAlthough we haven't traditionally taken this approach, I believe that the reason behind that decision had more to do with the fact that there was no suitable standardized way to do it at the time.\nMoving forward, I proposed, we could have lots of win by keeping all of the CSS and JSX together in a single place.\nEither way I don't mind in the end, just thought since we are still close to the beginning we have the opportunity to choose.\n. This is just a general note worth creating a new PR for, but after we make this change these handler functions simplify dramatically and it's probably worth replacing them with the actual implementations...\n``` js\nconst { noteBucket } = this.props;\nconst { loadNotes } = this.props.actions;\nthis.props.noteBucket\n    .on( 'index', () => loadNotes( { noteBucket } ) )\n    .on( ... )\n    ...\n```\n. no need for the fat-arrow function here - we are just creating new closures when passing the function itself would suffice\njs\nonSelectAllNotes={ this.props.actions.selectAllNotes }\nThe events will all end up passing a single event object to the function, but if that function doesn't use it or doesn't care then no harm done. The same is true with this empty fat-arrow syntax anyway.\n. If we access a nested property like this, we will crash if appState doesn't exist. It's probably best to add this into the propTypes to alert the developers why...\n``` js\nimport React, { PropTypes } from 'react';\npropTypes: {\n    appState: PropTypes.shape( {\n        showNoteInfo: PropTypes.boolean?.isRequired\n    } ).isRequired\n}\n```\n. Just a note about the nomenclature here...\nWhen I originally envisioned this, I wasn't intending to name the store appState. Instead, I was intending on naming a subtree of the store as appState. It would look something like this...\njs\n{\n    appState: {\n        selectedNote: ...\n        navigationPath: ...\n        fontSize: ...\n        isSyncing: ...\n        ...\n    },\n    notes: [\n        { noteData },\n        { noteData },\n        ...\n    ],\n    tags: [\n        { tagData },\n        { tagData }\n        ...\n    ]\n}\nAnyway - I didn't have the full tree planned, but those are bits and pieces of what it could eventually look like.\n. I'm thinking we should be using localStorage.removeItem() if we want to take it away instead of delete. I just saw this wasn't really your addition to the code - @beaucollins what are you doing? :wink: - but hopefully we can come back in another PR and fix this up.\n. Earmark for moving into the store with an action to abstract away the navigation.\n. What was the reason for overwriting hasOwnProperty?\n. quick note - if you want a default you can set one here...\njs\nconstructor( { namespace = '', initialState, handlers } ) {\n. What's this block of code doing? Could we split it out into its own function? Are you trying to enumerate the ownProperties of the handlers object?\nJust for reference...\njs\nhandlers.getOwnPropertyNames() // returns enumerable _and_ non-enumerable \"own\" properties\nObject.keys( handlers ) // returns only enumerable \"own\" properties\nfor ( let key in handlers ) // gets _all_ enumerable properties down along the prototype chain\nAlso, maybe another way to accomplish what I think you're doing here...\n``` js\nimport partial from 'lodash/function/partial';\nimport partition from 'lodash/collection/partition';\nconst mergeToObject = ( o, [ key, item ] ) => Object.assign( o, { [ key ]: item } );\nconst keyName = key => ${ namespace }${ key };\nconst assignWithType = key => partial( Object.assign, { type: keyName( key ) } );\nconst bindHandler = key => [ key, assignWithType( key ) ]\nconst bindProperty = key => [ key, handlers[ key ].bind( this ) || assignWithType( key ) ]\nconst [ ownMethods, ownProperties ] = partition( Object.keys( handlers ), key => 'function' === typeof handlers[ key ] );\nthis.actionCreators = []\n    .concat( ownMethods.map( key => bindHandler ) )\n    .concat( ownProperties.map( key => bindProperty ) )\n    .reduce( mergeToObject, {} );\nthis.actionReducers = []\n    .concat( ownMethods.map( key => [ keyName( key ), handlers[ key ] ] ) )\n    .concat( ownProperties.map( key => [ keyName( key ), handlers[ key ].reduce ] ) )\n    .reduce( mergeToObject, {} );\n``\n. Why not just call ittimestamp`?\nSorry if this was just copy/pasted from above - I'm not tracing the history\n. What's the reason for creating our own throttle instead of using something like lodash's throttle or requestAnimationFrame()?\n. What kind of pollution are you concerned about?\n. Can you clarify? What's unsafe about using hasOwnProperty here? Don't we control all the input?\n. :+1: \n. > which is somewhat undesirable\nwhy is this undesirable?\n. haha. jolly good. It's hard reviewing this kind of big PR for things just like this. I had already deleted quite a few comments because I saw later on the code was existing.\n. I'd rather skip the fat-arrow functions. My preference is to have less noise around the logic and additionally there's no need to create the closure. If the action doesn't specify any arguments then it won't ever know it's there. There's also essentially no overhead in passing in the object - far less than creating a closure in any case (not that the closure is a performance issue here either)\n. Let's not spend our code trying to protect code from the inside. If we have unsafe input coming from the outside I'm up for sanitizing it, but I think this just adds confusion to the code. Most people are going to see that line and go, \"huh?\" Probably they'll change it thinking it's wrong.\n. It's okay not to do it the way I offered, but let's not avoid other solutions just to skip an array allocation. These are super cheap in JavaScript especially at this small size. My priorities in cases like this are accuracy, code readability, risk of bugs (usually coming from mutating objects) - not sure on the order of those.\nAlso, I try really hard when reviewing code to provide different ways of accomplishing the same goals. That's a far cry from me telling you it's wrong. Usually when I do this, however, I am trying to offer insight into what I consider could be particular weak points in the code while at the same time exploring a different way of thinking about it.\nIn the code I provided I like the final two assignments but the helper functions looks crowded. In the code you wrote I like how the logic is right there but I hate seeing declare {}; for ( mutate {}; mutate {}; etc... )\n. > Surely most experienced javascript developers would instantly understand it?\nNot me dude. I'm just a simpleton.\n. Are we using lodash anywhere? This would be a great place to use get() and includes()\n``` js\nimport get from 'lodash/object/get';\nimport includes from 'lodash/collection/includes';\n\u2026\nbeforeIndex: note => { ...note, pinned: includes( get( note, 'data.systemTags', [] ), 'pinned' ) }\n```\n. A small note here about mutability - and pardon me for not knowing more of the context. We're actually modifying the object handed into this function, meaning the following could occur...\njs\nconst myNote = [ some note object ];\nmyNote.pinned = \"don't change me\";\nconst myNewNote = beforeIndex( myNote );\nmyNote.pinned === true/false;\nComing out of Simperium this might not be a problem as the data might have already been a new clone, but I can't vouch enough for leaving passed parameters alone. If all we need in this case is the new modified note object, let's just return a clone with the specific changes.\n``` js\nconst newNote = Object.assign( note, { pinned: true/false } );\n// or with the shorthand (this must be enabled by a Babel setting if not already)\nconst newNote = { ...note, pinned: true/false };\n```\n. another great spot for lodash\n``` js\nimport partition form 'lodash/collection/partition';\nnotesLoaded( state, { notes } ) {\n    const [ pinned, notPinned ] = partition( notes, note => note.pinned );\nreturn update( state, { notes: { $set: [ ...pinned, ...notPinned ] } } );\n\n}\n```\nWe get an advantage here by reducing the amount of code in this function, but more importantly by removing the possibility of getting things like off-by-one errors or array-bounds errors.\n. any reason not to use const here?\n. if we are going to use the ES6 semantics here, we should go ahead and use const since we don't modify the ipc variable here.\n. Since we end up doing our own error-checking here, we shouldn't need to duplicate those efforts below in componentDidMount and in componentWillUnmount. If we don't have _require, we should be able to happily replace it with a noop.\nOn that point, I was starting to write some code and realized that we don't appear to use _require or ipc anywhere but this one spot, so why wouldn't we simply setup ipc outside of the React component?\n``` js\nimport noop from 'lodash/utility/noop';\nlet ipc = getIpc();\nfunction getIpc() {\n    try {\n        ipc = non_webpack_require( 'ipc' );\n    } catch ( e ) {\n        ipc = {\n            on: noop,\n            removeListener: noop\n        };\n    }\nreturn ipc;\n\n}\n\u2026\ncomponentDidMount() {\n    ipc.on( 'appCommand', this.onAppCommand );\n}\ncomponentWillUnmount() {\n    ipc.removeListener( 'appCommand', this.onAppCommand );\n}\n```\n. there should be no need to create a new closure in all of these props since we don't end up passing around any/more than a single parameter\njs\nonNoteInfo={ this.props.actions.toggleNoteInfo }\ncreating the closure doesn't do anything here but add some overhead. were there to be binding issues (since the way this is written currently ends up being a method call with this.props.action == this) we could keep the new closure or create a bound reference\n. This would be a nice thing to have as a constant somewhere\n. This is really a question for another PR, but why are we exporting this static SVG asset as a function? Wouldn't it make more sense as a variable?\n``` js\nexport default ;\nimport Logo from 'lib/icons/simplenote';\nrender() {\n    return (\n        \n\n            Some stuff\u2026\n        \n    );\n}\n``\n. I don't think there are any advantages to set it up as a function when it never changes - just more overhead. Maybe it was setup this way to standardize the calling convention for all of the icons, some of which have conditional rendering based on some input.\n. This is starting to look like a case where a new component would help - one that could take a link, a title, and a description and render each of these list items.\n. this is a small nitpick, but our JS style guide tells us not to use_prefixes for variable names\n. does this need to be an ES5-only file? there are couple places where some ES6 syntax could help\n- default argument values\n-exportsyntax\n. ES6 strings have a new prototype functionincludes()`\njs\nif ( eventName.includes( 'splinux_' ) && eventName.includes( 'spwindows_' ) )\none step further, we could use the array methods here\u2026\n``` js\n// yuck, sorry for writing this\nif ( [ 'splinux_', 'spwindows_' ].every( eventName.includes, eventName ) )\n// better\nconst inString = s => a => s.includes( a );\nif ( [ 'splinux_', 'spwindows_' ].every( inString( eventName ) ) ) {\n    return;\n}\n```\nI'm waiting to hear back from @aduth but there might be some compatibility issues with String.prototype.includes but since this is electron/chromium I doubt we would have the same concerns - worth testing if you are interested\n. also is this supposed to be an or || instead of an &&?\nI don't know much about the tracking, but it seems like linux and windows names wouldn't both be present at the same time.\n. right here we have a few levels of making sure that the nested properties exist so we don't throw TypeErrors on undefined.process etc\u2026 unfortunately we don't go all the way and could still have issues if window.process.versions === null or undefined\nI prefer soft-failing methods that remove the need for these long compound-conditionals such as lodash's get or ES6 destructuring. Here's one such alternative:\nlodash\n``` js\nimport has from 'lodash/object/has';\nonEditAccount() {\n    if ( ! window ) {\n        return;\n    }\nif ( has( window, 'process.versions.electron' ) ) {\n    return window.require( 'shell' ).openExternal( settingsUrl );\n}\n\nwindow.open( settingsUrl );\n\n}\n``\n. Using theexport` syntax of ES6 has some benefits for the compiler and testing.\n``` js\nimport has from 'lodash/object/has';\nexport function viewExternalUrl( url ) {\n    \u2026\n};\n```\nOf course, in many cases where this isn't required, especially when the function bodies are small, I love the fat-arrow function syntax better, though the grounds for that might be more personal than technical.\n``` js\nimport has from 'lodash/object/has';\nexport const viewExternalUrl = url => {\n    \u2026\n}\n```\nNow when we import this in another file, we can use more specific imports.\n``` js\n// mostly the same as before\nimport * as UrlUtils from '../utils/url-utils';\nUrlUtils.viewExternalUrl( \u2026 );\n// but since this is a named export we can import it directly\nimport { viewExternalUrl } from '../utils/url-utils';\nviewExternalUrl( \u2026 );\n```\nYou can read more about the new import/export syntax at http://www.2ality.com/2014/09/es6-modules-final.html\n. check out my comment below about import/export syntax :wink:\n. Destructuring could help the readability of this function IMO\n``` js\nconst {\n    actions: { toggleNavigation, toggleNoteInfo },\n    appState: { dialogs, showNavigation, showNoteInfo }\n} = this.props;\nif ( dialogs.length > 0 ) { \n    return;\n}\nif ( isNavigationBar && showNavigation ) {\n    return toggleNavigation();\n}\nif ( ! isNavigationBar && showNoteInfo ) {\n    return toggleNoteInfo();\n}\n```\nN.B. I'm using return here just to abort early from the function though the return value shouldn't matter. This isn't all that important, though in bigger functions it can help alleviate nested-indentation-gone-wild.\n. unrelated to this PR - we've adopted pinned version in the notifications client due to supposedly \"compatible\" version updates messing up the app. That's what the ^ here means - updates that don't break should be allowed - but if we removed those (maybe in another PR) we could fix the packages to versions we know work.\n. @drw158 can you comment on using the nested selectors here vs something like & .note-editor? I thought I remembered something in some discussion in Calypso about the efficiency of the two methods in the final CSS\n. Copying this comment from the commit itself because I added it in the wrong place:\nsince we are making this its own module, it might make more sense to track the browser-vs-electron info in some state so we don't have to check it every time.\n``` js\nimport has from 'lodash/object/has';\ninit();\nlet state = {\n    isRunningElectron: null\n};\nfunction init() {\n    const isRunningElectron = window && has( window, 'process.versions.electron' );\n    const openExternalUrl = isRunningElectron\n        ? window.require( 'shell' ).openExternal\n        : window.open;\nstate = { ...state, isRunningElectron, openExternalUrl };\n\n}\nexport const viewExternalUrl = url => state.openExternalUrl( url );\n```\n. oh good catch on the arrangement!\n\nAny thoughts on that?\n\nyes and I forgot to add them to the original comment but meant to. I suspected that we might need to bind these functions when we created them in state but didn't test. Probably the issue is nothing more than this being reassigned because we take window.open() which is a method call and turn it into foo() which is a function call and they get their thiss assigned differently.\njs\nconst openExternalUrl = isRunningElectron\n    ? window.require( 'shell' ).openExternal\n    : window.open.bind( window );\nThe same might be true for the electron call, but since it's all anonymous, we might have to be more creative there in order to set the this to a real reference\u2026\n``` js\nfunction init() {\n    getBoundElectronOpener() {\n        const shell = window.require( 'shell' );\n        return shell.openExternal.bind( shell );\n    }\nconst isRunningElectron = window && has( window, 'process.versions.electron' );\nconst openExternalUrl = isRunningElectron\n    ? getBoundElectronOpener()\n    : window.open.bind( window );\n\nstate = { ...state, isRunningElectron, openExternalUrl };\n\n}\n```\n. We like to abort early instead of nest the success path\u2026\n``` js\nonSelectRevision( revision ) {\n    if ( ! revision ) {\n        return;\n    }\nconst { note, onUpdateContent } = this.props;\nconst { data: { content } } = revision;\n\nonUpdateContent( note, content );\nsetIsViewingRevisions( false );\n\n}\n``\n. Calypso has basically adopted the use of&&here to eliminate the hangingnull`s\njs\n{ isViewingRevisions &&\n    <RevisionSelector \u2026 /> }\n. lodash already defines a noop that is nice to use because we can both identify semantically what we're wanting here and avoid creating a bunch of empty functions\n``` js\nimport noop from 'lodash/util/noop';\n\u2026\nonViewRevision: noop,\n\u2026\n```\n. We have a cool trick here with destructuring that lets us avoid this unnecessary variable. I'm also throwing out a few other suggestions which I'll identify on their appropriate lines with a comment\n``` js\nimport get from 'lodash/object/get';\ncomponentWillReceiveProps( { note = {} } ) {\n    const content = get( note, 'data.content', '' );\n    const { noteEditor } = this.refs;\nthis.setState( { content } );\n\nif ( '' === noteContent ) {\n    this.focusNoteEditor();\n}\n\n}\nfocusNoteEditor() {\n    const noteEditor = ReactDOM.findDOMNode( noteEditor );\nif ( ! noteEditor ) {\n    return;\n}\n\nnoteEditor.focus();\n\n}\n``\n. we can use **lodash**'s natural defaulting nested assignment helperget`. it takes an object, a path on that object, and an optional default value\n``` js\nconst o = { a: { b: { c: 5 } } };\nget( o, 'a.b.c', 'NA' ) => 5\nget( o, 'a.c.b', 'NA' ) => 'NA'\n```\n. This bugs me here because of the way we're doing so much conditional checking in this function. I think putting the focus logic in another function has value by simplifying the meat of what should happen when we receive prop changes.\nAdditionally, it looks like React has a way of passing a function as the ref on a component, giving us the ability to save a bunch of legwork here. I didn't know about this until I was reviewing this code, and I don't know when it came into React. Check out what we can do:\n``` js\nconst uninitializedNoteEditor = { focus: noop };\ncomponentWillMount() {\n    this.noteEditor = unitializedNoteEditor;\n}\ninitializeNoteEditor( noteEditor ) {\n    this.noteEditor = noteEditor;\n}\ncomponentWillReceiveProps() {\n    // look ma!\n    //  - no ReactDOM.findDOMNode\n    //  - no null checking\n    //  - no errors\n    this.noteEditor.focus();\n}\nrender() {\n    return \n}\n``\n. :laughing: \n. I like how you embedded theget()` call in L21 above. Is there a reason for breaking it out into a different variable here?\nEither way seems good - it's a little strange that they are different.\n. @roundhill I don't think calling filterNotes() here is hacky. Maybe you could explain more why you feel this way. Ultimately we're doing little more than the following\u2026\njs\nvar notes = this.props.appState.notes.filter( noteShouldDisplay );\nIt's true that we could have had a better organized architecture, because right now any change that could affect whether or not a note should display needs to also modify this.filterNotes() and that's a grab-bag of application logic.\nOn the other hand, Simplenote is, well, simple. We don't have too much logic (trash/tags/search field) and these certainly shouldn't be a performance issue.\nThe puzzling thing to me was why we're creating RegExps in that filter function. We don't allow regular expression matching for the search field, do we?\n. There's probably not a good reason to request a default of null. If the property doesn't exist, it will already return undefined. Additionally, since we're not pulling out a deeply-nested property, we could just use plain JS to get it.\nOf course, we're also missing a big part of the value proposition of get(). It's a defaulting getter.\njs\nconst selectedNote = get( state, 'note', get( notes, '0' ) );\nNow we will first get state.note if it exists, otherwise we will get notes[ '0' ]. If that doesn't exist, we are left with undefined. This is starting to look a little messy itself. Maybe we can refine it.\nnotes is absolutely guaranteed to be an array. if it isn't, it's someone else's problem and we have no control over it here. We know this because this.filterNotes() returns something.filter() and .filter() will always return an array, maybe a zero-element array, but an array none-the-less. We can reference the first index of that array and it will either be the first note element in the list or it will be undefined\nPutting this together\u2026\njs\nconst selectedNote = get( state, 'note', notes[ 0 ] );\nAs a side note, I don't like the array indexing syntax as much because it represents something entirely different in syntax from how we have been getting other properties/elements. It's also not at all composable, meaning we couldn't say doubleFirst = compose( double, [ 0 ] ) and then apply it to a list. On the other hand, a function that returns the first element without mutating the original array would work well here - doubleFirst = compose( double, head ) and this would return twice the value of the first element of a given array. lodash has implemented head (aliased also to first) for us and if we wanted to use it here it would look all the more pretty\njs\nconst selectedNote = get( state, 'note', head( notes ) )\n. Would we have a selected note id if we didn't have a selected note from the line above this? Why couldn't we just use selectedNote.id here?\n. Just in case we really do need to get this, here's a crazier version that is still error-free.\njs\nconst selectedNoteId = get( state, 'selectedNoteId', notes.slice(0, 1).map( n => n.id ).shift() );\nPersonally I would create a/some helper method(s)\n``` js\nconst getKey = key => o => o[ key ];\nconst getFirstId = notes =>\n    notes\n        .slice( 0, 1 ) // get first element or empty array\n        .map( getKey( 'id' ) ) // extract the id from it\n        .shift(); // return it\nconst selectedNoteId = get( state, 'selecteNoteId', getFirstId( notes ) );\n``\n. We should be real careful withvarhere. This is perfectly valid, butvargets hoisted to the top of the function. It would be better to either move it to the top or better still uselethere instead.\n. Why not actually useclassNames` which is designed for this\u2026\n``` js\nimport classNames from 'classnames';\nconst editorClasses = classNames( 'note-editor', 'theme-color-bg', 'theme-color-fg', {\n    revisions: isViewingRevisions,\n    markdown: markdownEnabled\n} );\n```\nThe string arguments are all completely applied while the object keys get applied if their corresponding values are truthy. You can pass this object directly into className={ \u2026 }\n. as a warning, this.selection is different here than selection. this.selection is a property of the React class that gets created every time it gets created. selection is a module-level variable that gets initialized only once, when the module is first run.\nWe need to be careful about using data outside of state or props because we won't have guarantees that it will update the UI. Worse still, we don't have guarantees against race conditions on it.\n. Array.prototype.slice() was made for things like this\u2026\n``` js\nconst { revisions } = this.props;\nconst revision = revisions.slice( -idx ).shift();\n[1, 2, 3, 4, 5].slice( -2, 1 ).shift() // == 4\n```\nThese are all immutable functions so there would be a clone of the array internally. I don't think that would be a big deal here though. Arrays can be very fast in JavaScript.\n. If we name d as revisionDate we can save ourselves some work and isolate some steps form each other.\n``` js\nconst { revisions } = this.props;\nconst { data: { modificationDate } } = revisions.slice( -idx ).shift();\nconst revisionDate = (new Date( 1000 * modificationDate )).toLocaleString();\nthis.setState( { revisionDate } );\n```\n. destructuring supports defaults!\njs\nconst { revisions = [] } = this.props;\n. What are we trying to get here? Could you write it in English, like, \"Get the date of the last revision in the list if it is selected otherwise 'Latest'\"?\n. If we use parseInt(), we should always give it a radix\njs\nparseInt( this.selection, 10 )\n. How about we default to the stored revision date and then use 'Latest' if it's set and the last one? I'm asking because it's very hard for me to figure out from this code what the expected behavior ought to be.\n``` js\nconst selection = parseInt( this.selection, 10 );\nlet { revisionDate } = this.state;\n// could be -1 or an index\n// if the last index, use a string instead of the date\nif ( selection === Math.max( selection, revisions.length - 1, 1 ) ) {\n    revisionDate = 'Latest';\n}\n``\n. this could also be joined into one expression withObject.assign()`\njs\nconst revisionButtonStyle = Object.assign( {}, selection === max && { opacity: '0.5', pointerEvents: 'none' } );\nor a ternary\njs\nconst revisionButtonStyle = selection === max ? { opacity: '0.5', pointerEvents: 'none' } : {}\nI think a single line with const reads better than the var + conditional\n. aha! I see that now.\n. @roundhill this is pretty standard here. the next best thing would be to abstract at the datastore level. In Redux designs, we actually have what we call a selector that does things like this filtering before passing it into the component.\nSince we have global state holding the notes and the notes aren't being passed down via props, I think this is a valid use. We could on the other hand duplicate the notes list in memory in the global state, keeping both a list of notes and a list of visible notes, but that's not really needed here.\nWhich costs more in terms of performance and maintainability? That's the bigger question. It's cheap to filter our list of notes because we're not talking about tens of thousands of notes rendering many times per second. On the other hand, probably the hackiest thing here is that we are using an app-wide filter in a single module. However, we are in the app module, so that's not too bad. What we want to make sure we don't do is perform this filter from within a lower-level module in such a way that it gets out of sync with updates to the app when a developer might not realize the need to go into all those lower-level components and update their filtering logic.\nThe most practical alternative would be to do something like store this filtered list in state, but then we also have to make sure we update our second list of notes whenever things like delete or tag states change. It's easiest to just do it on render() methinks.\n. The ternary might be a bit much here. It could be simplified.\njs\n// isTrashRow -> showTrash -> ternary value\n// true -> true -> true\n// true -> false -> false\n// false -> true -> false\n// false -> false -> true\nconst isItemSelected = isTrashRow === showTrash;\nLooking at this, I wonder if the ternary is better still because it shows what's going on more semantically.\n. In Calypso we have chosen to start the lines with the : and ?\njs\nreturn isItemSelected && ! selectedTag\n    ? 'navigation-folders-item-selected'\n    : 'navigation-folders-item';\n. \ud83c\udf89\n. how about a comment for this? would hate to have someone \"fix\" it because it looks broken\n. It would be nice to see one item per line here, but not necessary\n. I think the general JavaScript community has been happy to abandon the || defaultValue idiom. It was really a hack anyway.\nMight consider a destructuring assignment here\njs\nconst { revisions = [] } = this.props;\n. Actually, since we have a default value of [] for this.props.revisions, why are we even bothering to check/default here? couldn't we just assume it's []?\n. that makes sense. null is valid while undefined isn't as far as a real value is concerned.\n. Might be a good time to remove some of this wandering nested property lookup. Also, partial creates a new function with the given argument passed in already, for example:\njs\nconst add = (a, b) => a + b;\nconst add5 = partial( add, 5 );\nadd5( 3 ) // => 8\nbind() allows the same thing, but also implies we want to mess with this, which we don't here since we end up passing null anyway.\n``` js\nimport { partial } from 'lodash';\nrender() {\n    const { note, onUpdateNoteTags } = this.props;\n    const tagUpdater = partial( onUpdateNoteTags, note );\n\u2026\n\nonUpdateNoteTags={ tagUpdater }\n\n}\n```\nFor another approach, since both of these approaches still send in the event as the second argument, we could prevent that if it were to cause an issue by making a helper function/closure.\n``` js\nrender() {\n    const { note, onUpdateNoteTags } = this.props;\n    const tagUpdater = () => onUpdateNoteTags( note );\n\u2026\n\nonUpdateNoteTags={ tagUpdater }\n\n}\n```\nPersonally I prefer the partial() approach since it's obvious why we're doing what we're doing, also it eliminates parens and schtuff\n. I really recommend creating a fat-arrow function here since this isn't in context. at first I was confused by the declaration too, since it's using function noteIndex( \u2026 ) syntax instead of const noteIndex = function( \u2026\u00a0)\n``` js\ngetPreviousNoteIndex( note ) {\n    const noteIndex = filteredNote => note.id === filteredNote.id;\nreturn Math.max( this.filterdNotes.findIndex( noteIndex ) - 1, 0 );\n\n}\n```\nadd some destructuring\u2026(I think I like this one the best)\n``` js\ngetPreviousNoteIndex( { id: thisId } ) {\n    const { filteredNotes: notes = [] } = this;\n    const sameId = ( { id: thatId } ) => thisId === thatId;\n    const matchingIndex = notes.findIndex( sameId );\nreturn Math.max( matchingIndex - 1, 0 );\n\n}\n```\n. Beyond the previous comment, I think we can reduce this function into more composable chunks using a couple function I often end up using, such as property getters and equality testers\u2026\n``` js\nconst getKey = key => obj => obj[ key ];\nconst equals = a => b => a === b;\ngetPreviousNoteIndex( { id: thisId } ) {\n    const { filteredNotes: notes = [] } = this;\n    const matchingIndex = notes\n        .map( getKey( 'id' ) )\n        .findIndex( equals( thisId ) );\nreturn Math.max( matchingIndex - 1, 0 );\n\n}\n```\nlodash already provides some of these too\n``` js\ngetPreviousNoteIndex( { id: thisId } ) {\n    const { filteredNotes: notes = [] } = this;\n    const matchingIndex = notes\n        .map( partialRight( get, 'id' ) )\n        .findIndex( partial( eq, thisId ) );\nreturn Math.max( matchingIndex - 1, 0 );\n\n}\n```\nfurther journeys down the composable path\u2026 (feel free to ignore)\nthis one should be at least as performant as the first one or the one I suggested in the previous comment. the others with the mapping stage incur a slight performance penalty\n``` js\nimport { eq, flowRight, get, partial, partialRight } from 'lodash';\ngetPreviousNoteIndex( { id: thisId } ) {\n    const { filteredNotes: notes = [] } = this;\n    const sameId = flowRight( partial( eq, thisId ), partialRight( get, 'id' ) );\n    const matchingIndex = notes.findIndex( sameId );\nreturn Math.max( matchingIndex - 1, 0 );\n\n}\n``\n. We may have discussed this previously, but this is setting off flags about concurrency.this.anythingshould almost never be set insiderender()and when it is, it should be clearly documented _why_ it must be so\n. Since this appears to be used in the production code, we want it listed independenciesinstead ofdevDependencies. Did we choosedateFormatovermomentfor a particular reason? We're actually embeddingmomentinto Calypso modules by default, meaning over there we can do fun stuff likethis.moment( \u2026 )just likethis.translate( \u2026 )`\nAnyway, the point was that it's a pretty standard library with great i18n support.\n. I would prefer not to speak of such things, but because JS is so weird I end up feeling like I have to. time here doesn't look any different from a regular JS ms-based timestamp. Could we rename it to make it clear why we are transforming it? Something like the following\u2026\njs\nfunction formatTimeStamp( epochTime ) {\n    const d = new Date( 1000 * epochTime );\n    \u2026\n}\nMaybe a conversion constant or function helper would even look good\u2026\njs\nfunction formatTimestamp( epochTime ) {\n    const d = new Date( unix2js( epochTime ) );\n}\n. I can understand the blank content check, but note.id is kind of vague to me. I think you are doing this to determine if the note object is filled out with actual data.\nDo we have a canonical way to test if a note exists?\nCan you help me understand what the condition is less in programming terms and more in conversational terms?\n. Makes sense. How would you feel about making a check-function then to test this instead of the unexplained test?\njs\nif ( noteIdBlank( note ) && noteContent === '' ) {\n    \u2026\n}\n. that says so many things in so few words :+1: \n. why the change from unguarded Date( 1000 * time ) to a guarded if ( unixTime )?\nI don't understand the check because whatever is calling this function expects a string in return, but if unixTime is falsey then we return undefined - can we just skip the check and assume the input is right and then make sure we don't send invalid timestamps to it?\n. this is probably a good thing to earmark for centralization into a different module in the future\n. somehow I missed that, sorry.\nwould it make more sense to set a default?\njs\nfunction formatTimestamp( unixTime = moment().unix() ) {\n    return moment.unix( unixTime ).format( \u2026\u00a0);\n}\nor since we've minimized the surface-area of this function to a a -> b-type mapping\u2026\n``` js\nconst formatTimestamp = ( unixTime = moment().unix() ) => moment.unix( unixTime ).format( \u2026\u00a0);\n// other formatting\nconst formatTimestamp = ( unixTime = moment().unix() ) =>\n    moment.unix( unixTime ).format( \u2026\u00a0);\n``\n. this brings us back to the :question: \n- a valid timestamp is any positive integer no matter how far into the future\n- when would we get an invalid timestamp?\n- should we be addressing those places that send bad data here?\n- should we do things likemsg = time ? formatTimestamp( time ) : ''instead?\n. I like how this all came together and we were able to remove the error-checking. looks clean.\n. forget to replaceformatTimestamp( modificationDate )here withformattedDate?\n. oftentimes the property name in the object is what I would rather keep around (because they are so splendidly well-named!) but I still need to run them through a transformation. when this is the case, I like to pull in the original value and mark it somehow asraw` or original and then take over its name in the post-transformed state\njs\nconst { modificationDate: modificationTimestamp } = data;\nconst modificationDate = modificationTimestamp && formatTimestamp( modificationTimestamp );\nI like how you have formattedDate to indicate it's a string and has already been formatted, but I miss the modification part of the name indicating which date it is. Then again, formattedModificationDate seems pretty wordy.\nNothing is wrong with your code here.\n. If this is all that this particular function will be doing, we could choose to eliminate nextProps since we don't actually use it.\njs\ncomponentWillReceiveProps( { note } ) {\n    this.setState( {\n        content: get( note, 'data.content', '' );\n    } );\n}\n. There's no need for this here, let's move this into the static area of the module and just call it as isElectron()\n. I've been exploring ways to push the React paradigm into things like this that we might overlook, but maybe there would be a benefit in turning this buildMenuFromTemplate function into another React component\u2026\njsx\n<ContextMenu>\n    <Item role=\"undo\" shortcut=\"u\">Undo</Item>\n    <Item role=\"redo\" shortcut=\"r\">Redo</Item>\n    <Separator />\n    <Item role=\"cut\" shortcut=\"x\">Cut</Item>\n    <Item role=\"copy\" shortcut=\"c\">Copy</Item>\n    <Item role=\"paste\" shortcut=\"v\">Paste</Item>\n    <Item role=\"selectAll\" shortcut=\"a\">Select All</Item>\n</ContextMenu>\nNow we could hide the logic to turn this into the menu in the <ContextMenu /> component and do the initialization and event listening in that place, inside of componentDidMount() and componentWillUnmount()\nIf you like this idea I would be up for trying to make it a PR\n. Don't we already have a function defined to tell us whether or not we are in electron?\nAnyway, maybe this isn't the best way to use try { } catch { } and instead should take it away from this function and use it above when we call this function:\njs\ntry {\n    this.configureContextMenu()\n} catch ( e ) {\n    // no electron\n}\n. @roundhill I originally tried to move this to another module but __non_webpack_require__() couldn't be found. I'm not sure if this is a special thing that only works in app.jsx or what not. The error was 'require' not found\nit's fine here of course but if we really wanted to keep it clean we would prefer it out of app.jsx in my opinion\n. This belongs outside of isAuthorized so that we can copy/paste in the login screen\n. This is what we mean when we talk about the value of functional programming as it relates to code-reuse :wink:\n. Now would be a good time to clean up this line. What's that null doing there anyway?\nHow about something like this:\n``` js\nimport { isEmpty } from 'lodash';\nconst publishURL = ! isEmpty( data.publishURL ) && data.publishURL;\n```\nWith this, publishURL will either be a non-empty string, or it will be undefined, both of which probably should work fine for the rest of the file because if ( ! publishURL ) will still evaluate to false and we test for the section stuff with isPublished\nI did not test this.\n. Similar place as above to simplify. This just seems like a crazy line to parse and understand what the code's intent was. I keep thinking, \"am I missing something? why is this such a long construct?\"\n. clearTimeout() is always safe to call, even if the timer handle is null. I like to avoid the conditionals just to make the code smoother\n. intentional change?\n. I believe you are looking for debounce() which would let you remove the timer handles and delay variables.\njs\nonEditorChanged: debounced( this.saveNote, saveDelay )\nWhat debounce() does is wait until the delay period has finished before actually running the function. If more calls to this function come in during that waiting period, it resets the clock. Additionally, it has a few options which can still help us out, such as the maxWait property. maxWait will guarantee that the function gets called at least as often as the number of milliseconds given in. That is, we could tell the app to wait to save the note until the user stops typing for three seconds, but if they continue to type, we could save it at least every twenty seconds.\njs\nimport { debounce } from 'lodash';\nonEditorChanged: debounced( this.saveNote, saveDelay, { maxWait: 30000 } );\nNote also that this will expose a new member of onEditorChanged, namely onEditorChanged.cancel, which we could use to prevent running the function call in queue if it's waiting to execute. (There's also a flush method that will immediately execute the function).\njs\nif ( weWantToPreventSaving ) {\n    this.onEditorChanged.cancel();\n}\n``\n. I'm a big fan of removing the valueLink stuff!\n. Is the purpose of this function to make sure that an incoming update from the server doesn't overwrite the content that we have already changed but not yet dispatched? In other words, if we have stopped typing for two seconds and we get an update from the server, is this code supposed to prevent that update from wiping out what I did two second ago?\n. I'm not sure if you are aware, but componentDidUpdate( prevProps, prevState ) actually has access to the old props. It looks like we could accomplish in one spot what we are doing in the two lifecycle methods here.\nIf we use something like the debounce function from lodash, this would be a good spot to call its flush method.\n``` js\ncomponentDidUpdate() {\n    this.onEditorChanged.flush();\n\u2026\n\n}\n```\nthat flush() method won't do anything if no changes are pending. In other words, if I haven't changed the note, then I haven't requested the update, so when flush() gets called it has nothing to run and just returns. The only catch I see is that this.saveNote() relies on this.props, which when called from componentDidUpdate() are the new ones. I'm not sure if that matters or not.\n. should we not call this something like isAtLeastWindows10 or redo the comparison so we aren't doing >=?\n. it would be nice to see us using a URL path builder here just to prevent issues with the slashes and query parts. for example, if we mistype coming in config.updater.url\n``` js\nimport joinUrl from 'url-join';\nreturn joinUrl( config.updater.url, platformString, 'version?compare=' + version );\n```\nor a step further\u2026\n``` js\nimport url from 'url';\nimport joinUrl from 'url-join';\nreturn url.format( {\n    ...url.parse( joinUrl( config.updater.url, platformString, 'version' ) ),\n    query: { compare: version }\n} );\n```\nUnfortunately it doesn't look like url handles joining path pieces in a way that prevents double slashes.\n. There's probably a valid reason to have the updater call itself or wrap this in a function that recursively calls setTimeout because setInterval() will attempt to call the given function every interval on the interval. Granted, the config is set at 10 minutes, but supposing there were network trouble or some freak delay or a misconfigured config maybe we wouldn't want to pile up those calls.\n. this could throw an exception, which is probably something we want to guard against with a try block so that a network or server issue doesn't kill the app\n. Not sure exactly what behavior you are seeing, @roundhill, but I made a quick example on jsbin\n. Thanks for simplifying. I guess I meant that the && || with null was funny. Though I remember seeing the use in value, I though there was already protection against this.\nMight still consider using a ternary here or in the view below since it does exactly what this line is doing\u2026\njs\nconst publishURL = ! isEmpty( data.publishURL )\n    ? `http://simp.ly/p/${data.publishURL}`\n    : '';\nor handle it in the view\n`` js\nconst publishURL = ! isEmpty( data.publishURL ) &&http://simp.ly/p/${data.publishURL}`;\n\u2026\n// looks kinda ugly, but somewhere something is going to be ugly anyway \u00af_(\u30c4)_/\u00af\nvalue={ publishURL && publishURL }\n``\n. There another approach that may be more elegant too at the cost of a bit more mental work. What we're really wanting is a function that gives us a default value likeget( object, path, default )except that we want it to use the default whenever the value is string-empty, agetWith( object, path, default[ predicate, defaultValue ] )`\nIteration 1 - make a simple function, maybe the best option here\n`` js\nconst getPublishUrl = url => isEmpty( url ) ? null :http://simp.ly/p/${url}`;\n\u2026\n// good and good - now it's null if the string is empty\nconst publishURL = getPublishUrl( data.publishURL );\n```\nIteration 2 - make our reusable getWith()\n``` js\nconst getWith = ( object, path, default, predicate ) => {\n    const value = get( object, path );\n    return predicate( value ) ? value : default;\n};\n\u2026\nconst notEmpty = negate( isEmpty );\nconst publishURL = getWith( data, 'publishURL', null, notEmpty );\n``\n. I hate to sound naggy, but we should be careful here usingpath.join()to form a URL. Maybe it's not a problem, but of course the Windows path separator is a` and not a / and I'm not sure if that will cause issues. Maybe it's fine since it's file:// but generally I would recommend specifically using a URL path joiner.\n. :smile:\n. Are we using this elsewhere in the app? Do we even need to?\nI am aware that certain parts of the code can't be run through Babel and what not, so please pardon me if this has to be vanilla JS.\n. Why does this file exist? Do we plan on having other non-desktop index files that do something else? it seems like we should probably just include ./app wherever it is we include desktop\n. A little complicated?\n``` js\nconst os = require( 'os' );\nconst platformInfo = ( { platform } ) => ( {\n    isOSX: platform === 'darwin',\n    isWindows: platform === 'win32',\n    isLinux: platform === 'linux'\n} );\nmodule.exports = platformInfo( process );\n```\nseems simpler and it's testable if we were to export the platformInfo function.\n. Does this have some hidden behavior? It doesn't get called anywhere else in this code\u2026\nIs this what exposes process?\n. I'm confused about the comment here. Is the reason we have the special case because we need to preserve the this context by calling onNewNote() as a method on this?\nIf that's the case, could we remove the special case simply by binding this?\njs\nthis.props.actions[ command.action ].call( this, command );\nor cleaned up\u2026\n``` js\nconst { actions } = this.props;\nconst action = actions[ command.action ];\naction.call( this, command );\n```\n. oh okay, that makes sense. I wish some of this could have been a little less-custom in the way we have our app state, but at least we're in a much better spot than the notes client :smile:\nmaybe we could clarify in the comment, something like\n\nnewNote expects a bucket to be passed in, but the action method itself wouldn't do that\n. yeah - I wouldn't ever recommend that we detect and replace the slashes :wink:\n\nthis is fine. I think ideally we'd use a URL-builder, but if IE/Chrome/Firefox in Windows handle the wrong slash it's okay to ship.\n. I didn't see any changes to where we actually call this function. I guess it's just good practice to declare it to match the library call?\n. Yeah I wasn't sure how far to track this down. I believe that the problem existed before this branch, and it should be getting the key from that dialog prop. I can continue to dig in before we merge. Thanks!\n. This is related to the comment above. I came in to fix the key issue here since it was relatively easy. It seems like most of the files follow the ideology that spaces are expensive and should be avoided.\n. > Dialog has a required key prop.\nRequired key prop has been removed from Dialog\n:wink:\n. gone\n. With React we can pass a function in on a components ref prop and use that to eliminate the need for these things.\n``` js\nupdateDescription() {\n    this.displayParagraph.innerHTML = 'Bazinga!';\n}\nrender() {\n    return (\n        \nTest\n ( this.displayParagraph = node ) }>Gobble gobble!\n\n    );\n}\n```\nI think we can eliminate the checks if this.displayParagraph exists (unless we might programmatically remove it) because it should be initialized when the component mounts. Maybe it won't be there at componentWillMount\nHope this helps!\n. I feel like we should just include Ramda in this project since its helpers would be awesome in places like this. I find these sequences difficult to read because although they feel like a chain or sequence of functions, they are actually passing a bunch of functions through the parameters and I've had to go over it a few times before realizing what exactly they are doing.\n``` js\nimport {\n    compose,\n    ifElse,\n    invoker,\n    prop,\n    tap,\n    when\n} from 'ramda';\nconst preventDefault = tap( invoker( 'preventDefault' ) );\nconst makeResizable = ifElse(\n    prop( 'isResizing' ), \n        ( { onStartResizing } ) => compose( onStartResizing, prop( 'clientX' ) ),\n        detectCanResize\n);\nconst startResizing = when( prop( 'canResize' ), compose( prop( 'onStartResizing' ), preventDefault ) );\nconst stopResizing = when( prop( 'isResizing' ), compose( prop( 'onStopResizing' ), preventDefault ) );\n```\nThat's an idea using Ramda. I like what you are going for with the functional style, but I think it would be simpler/clearer without the middle step.\n. Just realized you are already using this form. If you want to hold the reference, just save it on this\n. I'm a bit leery of the length of this line already. I like how the action is restructured, but I think, \"what if we add one more property?\" when do we split it to a new line?\nIn reducers like these, I often prefer to keep action in the props then restructure inside. As far as the initial state goes I have less of an opinion, but I'm going to go ahead and give a counter-example.\n``` js\nconst initialSourceList = {\n    width: 330,\n    isResizing: false,\n    canResize: false\n}\nconst sourceList( state = initialSourceList, action ) {\n    // now if we get more, we just start putting one item\n    // per line - we could do this already too I suppose\n    const { type, width, canResize, isResizing } = action;\n// or for more obvious diffs\nconst {\n    canResize,\n    isResizing,\n    type,\n    width\n} = action;\n\n\u2026\n\n}\n```\n. This could probably be its own composed reducer, since we're starting to bundle together different logic. I realize that duplicate code is becoming a problem here, so maybe we need a helper function.\n``` js\nimport {\n    equals,\n    ifElse,\n    prop\n} from 'ramda';\nconst simpleState = ( type, propName, default ) => \n    ( state = default, action ) =>\n        ifElse( equals( type, prop( 'type', action ) ), prop( propName, action ), state );\nconst sourceList = combineReducers( {\n    canResize: simpleState( 'setSourceListCanResize', 'canResize', false ),\n    isResizing: simpleState( 'setSourceListResizing', 'isResizing', false ),\n    width: simpleState( 'setSourceListWidth', 'width', 330 )\n} );\n```\nIf this works well, it would be good to follow suit in the other reducers in this file, but probably in another PR\n. Looks like a great opportunity for a reactive observable, which could potentially allow us to remove isResizing from our store. I'm a bit confused as to why we need isResizing in the first place, as it doesn't appear to impact styling at all. Is this only to detect the mouse movements? If so, maybe it should remain contained here in this component.\n``` js\nconst Draggable = React.createClass( {\n    componentWillMount() {\n        this.dragging = false;\n    },\nstartDragging( e ) {\n    e.preventDefault();\n\n    this.dragging = true;\n},\n\nstopDragging( e ) {\n    e.preventDefault();\n\n    this.dragging = false;\n},\n\nrender() {\n    const { children, onDrag } = this.props;\n\n    return React.createElement( children, {\n        onMouseDown: this.startDragging,\n        onMouseUp: this.stopDragging,\n        onMouseMove: onDrag\n    } ;\n}\n\n} );\n onUpdateWidth( e.clientX ) }>\n    \n\n        \u2026\n    \n\n```\nPlease note that in my example wrapper I have removed the safety given by this.setState() because we're dealing with actual input events and not render-cycles.\n. There are a couple of notes here:\n- since the editor content is immutable, we should be able to detect if there were edits made by comparing this.state.editorState.getCurrentContent() to editorState.getCurrentContent()\n- let's make sure we are explicit about what sequencing we want here. the call to this.queueNoteSave() could actually occur before setState() has updated the component state. if we want this to happen in sequence, we can use the second argument to setState() and pass in a function to call once the state has updated\n. It would be great to include some more context in the name here. Maybe something like focusEditor\n. I'm a bit confused here at what we are wanting to match with this pattern. Could we clarify either through reworking the RegExp or by leaving an explanatory comment?\n. this might be a bit permissive. we can probably know up-front which attributes we want to pass, no?\n. I'm curious if you have tried comparing the content from the model without converting it. draft-js is an immutable-based system and so I would think that we could accomplish this by a simple reference check\u2026\njs\nconst hasChangedContent = editorState.getCurrentContent() !== this.state.editorState.getCurrentContent();\nalso I have rearranged the variable name to keep the boolean-ish verb out front, but this is not a big deal\n. using some destructuring and renaming here might help keep things clear here\n``` js\ncomponentWillReceiveProps( { content: oldContent } ) {\n    const { content: newContent } = this.props;\n    const { editorState } = this.state;\nif ( newContent === oldContent ) {\n    return; // reference-identical objects\n}\n\nif ( newContent === plainTextContent( editorState ) ) {\n    return; // identical text\n}\n\nthis.setState( {\n    editorState: EditorState.createWithContent(\n        ContentState.createFromText( newContent, '\\n' ),\n        urlDecorator\n    )\n} );\n\n}\n``\n. This method is well-worth considering. What does it mean to have the props change and what does it mean to create a newEditorStateobject. I think that for one, we will lose our undo history. Do we want to be able to undo changes that pour in from outside of this particular client (for example, I make a change on my phone). I'm sure we could find a way to convey that information and useEditorState.push()instead with a specific action type, such as'update-from-simperium'`.\nFurther, could we map the Simperium deltas into individual editor change sets such as found in the Modifier module. I'm sorry that I don't know these things off of the top of my head, such as if we even have access here to the Simperium diff.\n. Is there a reason go check if it's not already focussed instead of simply always focusing it?\njs\nfocus() {\n    this.editor.focus();\n}\n. Let's not introduce new code with this style of ref attribute. Instead, let's use the function syntax. The React project strongly suggests this as well (for reasons which can be enumerated)\n``` js\nimport { invoke } from 'lodash';\nsaveEditorRef( ref ) {\n    this.editor = ref;\n}\nfocus() {\n    invoke( this, 'editor' );\n}\n\n```\nNotice that we broke a convention of working through this.setState() which in this case is appropriate due to the stateful nature of the DOM elements with respect to the React component's backing instance.\n. isn't this the default value for textAlignment? since we're not overwriting the value, maybe leave it out?\n. if we're just destructuring one property and still allowing for a TypeError from the nested access, let's just use _.get instead\u2026\n``` js\nimport { get } from 'lodash';\nconst content = get( this.props, 'note.data.content', '' );\n``\n. Please see earlier note aboutrefsyntax\n. can we word-wrap these comments so they are shorter lines? also, let's use//instead of/ /`\n. This function could get really expensive as we add URLs and as the document length increases. At a minimum I believe that we could rearrange it to scan through the text instead of iterating over the entire document-up-until-the-start-of-the-URL.\nMaybe through the use of splitting on the RegExp matches we can build a recursive parser that would eliminate the overhead of starting fresh each time. It's something I'll think about more and follow-up here, but feel free to add your own ideas.\nI do not believe that the performance of this function as written will cut it, unfortunately \ud83d\ude22 but we will prevail!\n. It would be really helpful to have this component created elsewhere. Maybe just in the module scope of this file, but possible in another file altogether. Further, if we simply export the strategy from here it's trivial enough to create the decorator in the note content editor itself, which would have certain advantages for code comparability and organization.\n. was there a reason to update webpack? I'm not entirely opposed to doing this, though I find certain value in doing it separately from feature updates if we can help it.\n. hmmm\u2026this reminds me that we should get rid of this soon\n. okay. right. I should have realized that\n. it's definitely semantically different to scroll the history vs get updates from the API. big :question: really\n. that sounds suspicious, and it sounds like this \"fix\" could actually be hiding the problem. did you find others with this problem too?\n. > no chance of a TypeError here\nhehe, I only wish\u2026 something is bound to get changed in the future that will break this\n. I'm still concerned about the strength of this matcher to the URLs. I'm going to think about it some. this iteration is definitely better though.\nwhy isn't our Markdown parser detecting the URLs\u2026 shouldn't Markdown automatically linkify all the things?\nalso, what about <a href=\"wordpresscom\">Yahoo</a> - what happens here?\n. roger. sorry for not reading the comment\n. > I'm starting to think it's actually not a great idea to be writing this function, how about using a different markdown parser (instead of marked) that actually linkifies everything\nanother good :question:\ndo we need to linkify everything if indeed Markdown wouldn't imply it? why should the Simplenote behavior change the way markdown works?\n. @roundhill @beaucollins @jleandroperez ^^^ :question:\n. > could you expand on why you'd like this component to be defined elsewhere?\nmainly I would like to see their definitions outside of the object passed in to create the decorator. if they are separate, we can test them (even though we don't have tests yet) and it can be a little easier to find them.\nthe call to create the decorator isn't that big of a deal either. if we think that something like this is confusion, it's probably more of a naming thing than anything else\u2026\njs\nnew CompositeDecorator( {\n    strategy: findLinks,\n    component: Link\n} );\n. @efegurkan it's been a long while since you did this work and I would love to help you get it merged into the project. Are you still interested in updating from @roundhill's suggestion above?\n. Looks good to me. @roundhill how do you feel? good to go?\n. was causing an error\n. Refactored for updated styling and pattern\n. Not sure why this was previously an <a />, but I couldn't think of any reason to keep it like that\n. this previously reset the tag selection whenever the props changed. I think this was to prevent switching the selection unexpectedly (index vs name)\nfor example, tag Simplenote was selected at index 2, a new tag was added externally and that new tag comes before Simplenote in the list. Selected tag is still index 2 but is now a different tag, maybe Electron.\nwe don't need to be this cautious. If the tags don't change at all or if we don't even have a selected tag we can skip this. if we do have a selected tag, we just need to find where it ends up in the new list and update the selection index.\n. it was concatenation that was providing duplicate tags. using a set union instead prevents that.\n. @nfcampos did you find a problem with it? inside of the character list [] some of the RegExp symbols take on new meaning, some are even position-dependent. In this case * matches a literal * and doesn't mean \"any number of -\"\n. which two are you speaking of? one of the RegExps is for determining if the previous line has a list item while the other is for determining if the previously line is only the list item bullet without following text.\n. good call. originally I was planning on doing something with these, but now I'm not. I'll take them out\n. I'm not sure I agree with you on this one. I think that it's more reasonable if we start using more of these in other places, but my opinion is that combining them together starts to make the RegExp hard to scan and understand what it's supposed to do. In any case, we will hopefully be nixing this code once we get your PR with the draft-js editor merged.\nI may play around with composing the RegExps, which could satisfy both of our wants here.\n. removed in 3fbfd77\n. @nfcampos the tab is a strange character on the web. the tab key doesn't trigger any of the React keypress events from the textarea because it's designed as a way to advance the input focus across the page. these behaviors we're adding actually break web accessibility in one sense because we're changing what the tab key does. on the other hand, this is more of an app than a webpage and the other apps already hold this behavior.\nin short, no we couldn't do it with a React event because it won't fire when we need it\n. They would have to be bound because they access this, and I prefer this syntax over creating the bind statements in the constructor.\n. queueNoteSave would still be problematic the way its declared. we could get around this by moving debounce to where saveNote is defined, but for the time being I want to leave it where it is.\nplus I tend to prefer keeping my ref-saving functions in the constructor. it keeps the class body a bit cleaner in my opinion.\n. after playing around with composing the RegExps, I think I want to leave them alone for now. I don't see much gain in combining them and I don't see much gain in composing them when there are just two uses of them and those uses aren't identical and they aren't complicated.\nthoughts @rodrigoi ?\n. I guess I assumed it was a web thing in general. It's definitely not coming through in the Electron app. Your suggestion was actually my first attempt but then the event never fired. I couldn't seem to easily track down whatever might be intercepting it either.\nI'd be more than happy to get rid of the window listener if we can. If you check out this branch and test locally you should be able to see what I'm seeing though.\n. yeah it should be rebased out when #369 gets merged in. it's required in order for the dev server to serve connections from within the Docker container \n. aha, so strange but the onKeyDown event sends the tab key while onKeyPress skips it. I'm updating the PR. thanks again @nfcampos \n. refactored in f984d70\n. TIL. thanks @nfcampos!\nrefactored in 0d00ddf\n. Restyled in 5e48ddc!\n. boy @nfcampos I wish I knew. the rendered HTML ends up having the intended value value, but it doesn't render the slider in the right spot. If you clone this and run it, you should be able to comment out this line and see that it ends up incorrect.\nalso, it's not after the component mounts, but after loading the revisions. There are typically a few renders that run before the revisions load, since the revisions end up being pulled out of IndexedDB which is asynchronous.\n. good call. I should have done that to start with.\n. updated in fa71bd1, though I used asc order :smile:\n. @nfcampos could you surround these in parentheses and line up the args a bit? this is just a silly styling thing but I would like to avoid the hanging equality comparison. Alternatively we could use a couple of helper variables and make it short enough on a single line\u2026\n``` js\nconst nextContent = plainTextContent( editorState );\nconst prevContent = plainTextContent( this.state.editorState );\nconst hasChangedContent = nextContent !== prevContent;\n``\n. if we use the helper variable above, we can just pass it here too ->onChangeContent( nextContent )`\nalso, we could rearrange this here with another variable. it's styling purely; my preference would be something like this\u2026\n``` js\nimport { noop } from 'lodash';\nconst announceChanges = contentHasChanged\n    ? () => this.props.onChangeContent( nextContent )\n    : noop;\n```\nin fact, if that's the only thing that we use hasContentChanged for, we could join the expressions\u2026\n``` js\nconst announceChanges = nextContent !== prevContent\n    ? () => this.props.onChangeContent( nextContent )\n    : noop;\nthis.setState( { editorState }, announceChanges );\n``\n. small nitpick, sorry - can we move the/>to the next line aligned with?\n. @nfcampos I think what's happening is simply that it's not rendering. you can log the state changes and the render; you can actually open up the HTML view in the dev tools and watch the` change in the rendered HTML and for some reason it doesn't update visually.\nAs much as I am hesitant to think of these explanations, I suspect some bug in the input component or with React rendering it. I noticed some related issues in IE11 with input and plain-old HTML\nThanks as always for your feedback!\n. yay Chrome! let's use string.includes( search )\njs\nif ( filter && ( note.data.content || '' ).toLowerCase().includes( filter ) ) {\n. I'm not sure if this is really something to respond to or not, but that let dangling there makes me a little uneasy. I've seen others simply create a chain of new editor states like this\u2026\n``` js\nconst newEditorState = EditorState.createWithContent( \u2026\u00a0);\nconst editorStateWithProperFocus = oldEditorState.getSelection().getHasFocus()\n    ? EditorState.moveFocusToEnd( newEditorState )\n    : newEditorState;\nthis.setState( { editorState: editorStateWithProperFocus } );\n```\nI'll let you make the call @nfcampos if you like this or not. So far things are going well in testing.\n. Let's put each of these on their own line, alphabetical, if you don't mind\n. Is there a reason to hold these inside an object instead of simply defining them in the module scope?\n. Not a problem, but we don't need to escape the * inside the character list.\n. Instead of carrying the conditional through with indentation, why don't we create a new function to handle the behavior which is here in the block\u2026\n``` js\nconst trimmedLine = line.trim();\nif ( trimmedLine === '-' || trimmedLine === '*' ) {\n    return removeBulletAndEndList( editorState, block );\n}\nconst listItemMatch = line.match( listItemRe );\nif ( listItemMatch ) {\n    const [ bullet ] = listItemMatch;\nreturn addNewListItem( editorState, bullet );\n\n}\n``\n. we don't have any preference for listing all variables at the top. if we move this down to where it's used then it doesn't need to be aletand can instead be aconst, which we _would_ prefer\n. I'm still a fan of creating separate variables here for each step. what if instead of reassigning theeditorState` we created a sequence like this\u2026\njs\nconst withoutPreviousBullet = removeRange( editorState, \u2026 );\nconst withSelectionOnNewline = forceSelection( withoutPreviousBullet, \u2026 );\n. This could probably have a more descriptive name, like splitBlockAtSelection()\n. We'll want a space after the unary operators\u2026\n. Let's shorten this so that it fits comfortably on a single line or use some parenthesis or helper functions so that we're not stuck with an awkward split.\n``` js\nconst trimmedLine = block.getText().trim();\nconst addTabAtStart = trimmedText === '-' || trimmedText === '*';\nconst addTabAtStart = (\n    trimmedText === '-' ||\n    trimmedText === '*'\n);\nconst addTabAtStart = [ '-', '*' ].contains( trimmedText );\n``\n. thanks for the nice comment!\n. @nfcampos that sounds fair. a couple of notes though on the example you posted: you don't need to surround the args toflowin an array. it works as a variable argument call and simply provides the array interface so we can call like we do withapply`\nfurther, I'm a big fan on using partial application for point-free style. here is a way we might be able to rearrange this code:\njs\nconst removeBulletAndEndList = flow(\n    partialRight( removeRange, selection ),\n    partialRight( forceSelection, selection ),\n    this.handleEditorStateChange,\n);\na few quick notes here:\n- let's leave a trailing comma\n- flow is fine. I've been using flowRight as compose in most of the code I put out there since it jives more with basically every other standard library and functional language.\n- I took out the implicit selection parameters in favor of explicitly passing it in\n. That seems a little dubious to me to hide them inside an object just because the Modifier is exported that way. I'd rather see them defined outside and called directly.\n. hmm\u2026 good for consistency but also a little confusing since we're using the same name for a different function.\nwhy not simply use splitBlock as it comes? shouldn't this get a different name to indicate that it does something different?\n. I like this comment, but I find it a big lacking in content. For example, I would assume that the normal insertText function in draft-js would make the claim that it moves the selection to the natural place following a modification, but we have a different definition of natural\n(sorry for duplicating the same comment here as in the other PR), but I would be strongly in favor of not hiding these methods inside the EditorStateModifier object. Even simply extracting them without changing their names would be better, though it's possible that there could be more fitting names.\nWe can then turn the comments into proper JSDoc DocBlock comments explaining the behaviors, such as \"Moves the selection to the end of the insertion\"\n. why? is this what we want it to assume? what happens if it isn't?\n. if we have multiple lines, can we put one parameter per line?\nalso, sorry for not having a proper style guide in this project, or linting\n. I think this is proper as far as draft-js's model goes, but let's double check with \u2764\ufe0f and \ud83d\udca9 - those two characters are good canaries for encoding-related length issues.\n. see comment above on related note\n. I probably commented on this in the other PR, so again, sorry for the dupes.\ncan we split these into separate indentRange and outdentRange functions? they don't have to hold those names, but it would be nice to have them in separate functions. further, after making sure that other modifier keys aren't pressed (ctrl, meta, alt), we can simplify this function here to\njs\nreturn this.handleEditorStateChange(\n    e.shiftKey\n        ? outdentRange( editorState )\n        : indentRange( editorState )\n);\nthe general principle here is twofold:\n- keep functions as short and single-minded as possible\n- keep event handlers even shorter so that they are primarily dispatchers to other functions instead of functions themselves which do things. (we should be able to easily indent or outdent a range without having to call the onTab handler)\n. importantly though, insertText will overwrite a non-collapsed section in production - just throws an error when it does\nit would be nice here to either mimic that behavior or simply remove the note about assuming. if we send in a selection I think the general assumption is that things will write over it.\nthis brings me back to wondering about the utility of these functions attempting to mimic draft-js. we're clearly not trying to match behavior by means of messing with the selection. we could do ourselves well by breaking that notion and asserting \"this is our insert text function\"\n. maybe a good reason to investigate further :wink:\n. when I did my first couple passes I missed this, but I'm suspicious of the default value for selection here\nI do like using proper defaults on parameters, but just as with destructuring objects, it's easy to jump a little too far too quickly. in this case, we've got an input arg dependent on the arg passed in (or not passed in) and dependent on another input arg passed in. would make for some odd debugging at best when something goes wrong.\nconstant values used as defaults: great\nfunction calls as defaults: okay sometimes\ndynamic, dependent, side-effecting actions as defaults: :shiver:\n. right. I'm on vacation and have been playing around with pushing this PR further and there's a leak here on my commits/branches/pushes :wink:\n. it was a drive-by fix. there's a bigger issues I've discovered with tags wherein we're getting multiple tags with the same label. you are absolutely right in that we need to fix this at its root, but I threw this in in the meantime to prevent the errors from crashing things\n. might start out by pulling this function into the module scope instead of creating a new closure on each call. could also use fat-arrow syntax for functions.\n``` js\nconst highlighter = code => highlight.highlightAuto( code ).value;\n\u2026\nconst markdownHTML = marked( content, { highlight: highlighter } );\n```\n. Let's pin this to its specific version. \"Compatible\" updates too often aren't.\n. oops! yes @roundhill this is because I trimmed the PR from #402 and this dangled along. removed in c6efda7\n. removed in c6efda7\n. Let's create a method on the class to set the ref like this\u2026\n``` js\nstoreSourceList( ref ) => this.sourceList = ref;\n\u2026\n```\nand then the mouse move handler can directly reference this.sourceList. if it doesn't exist yet then we can safely ignore the move event because the underlying node won't exist yet either. the handler can safely reference this.sourceList\nalso, wtf is going on with setting the stye ref.style.flexBasis inside of the ref function? :smile:\n. even better yet, why store complex state in a single reducer when we have combineReducers()?\n``` js\nconst width = ( state = 330, { type, width } ) =>\n    type === SOURCE_LIST_WIDTH_SET && state !== width\n        ? width\n        : state;\nconst isResizing = ( state = false, { type, isResizing } ) =>\n    type === SOURCE_LIST_IS_RESIZING_SET && state !== isResizing\n        ? isResizing\n        : state;\nconst canResize = ( state = false, { type, canResize } ) =>\n    type === SOURCE_LIST_CAN_RESIZE_SET && state !== canResize\n        ? canResize\n        : state;\nexport default combineReducers( {\n    canResize,\n    isResizing,\n    width,\n} );\n```\nThis seems much more testable and Redux-y\n. @beaucollins I'm all for removing component state, but I'm not sure isResizing belongs in the global app state either. How do you feel about the kind of wrapper component I provided above?\nIf the app is rendering the data contained in the state tree, then I'm not sure anything beyond the required data should be there. If we persisted the entire state and reloaded it when isResizing = true then wouldn't we end up in a wrong state?\n. Is a line a valid list if it starts with a dash or star but no space? What about spaces instead of tabs? I thought spaces were valid too\n. sure, though I didn't want to change any functionality in this PR. I think that would require making changes at the calling sites - a good change for a future PR\n. @drw158 looks lie @nfcampos found/pointed out another inconsistency among the apps. what are your thoughts here on what should define a list of items?\n. @nfcampos we already have a few issues with the cursor. thanks for pointing this out. I've heard some discussions lately about saving the cursor position on each note, which would definitely help here. I'll take a look and test with this.\nwhen searching, I think it's possible that losing the cursor could be okay if we have to but I will try and rearrange so we don't\n. merp. @nfcampos TIL (well, a week or two ago I learned) that the RegExp object is mutated during exec(). In this case I think we need to keep it all inside matchIndices() because it updates lastIndex after each match.\n. > this would be faster if here you added\nsure. I will do this with a ternary when I get a chance. thanks for the review!\n. Nice!\n. no need to create a new closure here - we can simply pass the function as data\njs\nonCloseNote={ this.props.actions.closeNote }\nonNoteInfo={ this.props.actions.toggleNoteInfo }. what if we got rid of the more generic names moving forward in our state system and used names that more accurately describe what we are doing.\nin this case, the component isn't actually changing anything - it's simply indicating the type of change it wants to see in the world. in fact, that action is inherently coupled to the meaning of the component, in which case there's little to no need to abstract it away (and runaway prop-passing abstraction is one of the big weaknesses for this app in my opinion)\ninstead, let's name it for what it is\njs\nconst mapDispatchToProps = dispatch => ( {\n    setRevision: revision => dispatch( setRevisionState( revision ) ),\n    unsetRevision: () => dispatch( setRevisionState( null ) ),\n} );\nand now the component doesn't need to know anything about the mechanics of how this works or how to clear. it API is simplified to two functions: set( revision ) and unset()\nif we want to think differently, we can compose\u2026\njs\nconst mapDispatchToProps = dispatch => ( {\n    setRevision: compose( dispatch, setRevisionState ),\n    unsetRevision: partial( dispatch, partial( setRevisionState, null ) ),\n} );. coming in here now would be a great opportunity to trim down on the noise\u2026\njs\nsetIsViewingRevisions = isViewingRevisions => this.props.setRevisionChange( { isViewingRevisions } );\nalso, I'm a bit leery of using an object and key name to call a function that only takes one argument. I'm so happy that you added this in here! the Redux state is a great place for something like it.\none question I do have though that maybe is worth some discussion is where the revision state belongs. is it a property of the app? of a note? of a view?\nit appears like we are selecting a \"revision\" in the sense that we are selecting something more akin to a full note object and not simply a marker like \"last tuesday at 8pm.\"\nI'll dig in more later, but I'm pretty sure we don't currently have a list of revisions on the note object itself. that could be really handy to have for times like this probably.. you might want to checkout out state/action-types.js where we can declare global action types.\nwarning though, in master I have code there that I put in but I don't like. instead of defining action types with Symbol() I think I would like to stick with uppercase snake-case strings so that tooling is easier. if only we could have had our Redux pow-wow last week! oh but this is a great little bit of code to illustrate some patterns. I'll come back in a bit with some more code to show what I mean, but combineReducers gives us the ease to eschew reducers with complex state\njs\nexport default combineReducers( {\n    isViewingRevisions,\n    revision,\n} );. this is another type of data to ponder. what is the essence of what we are trying to represent here?\nis it really one, two, or three columns?\nmight it be the presence or absence of different UI components at a particular time?\nwhile I'm not saying this is the only way to do it, at first thought I think about having a set wherein membership in that set indicates that the component should be visible. it also ties the state to the components themselves in an extendible way instead of hard-coding the meaning of columns to components.\ncheck out lodash.union() and lodash.difference() too. we have native-JS sets now but those are unfortunately mutable objects \ud83d\ude22 \njs\nconst visiblePanels = ( state = [], action ) => get( {\n    HIDE_PANEL: ( { panelName } ) => difference( state, [ panelName ] ),\n    SHOW_PANEL: ( { panelName } ) => union( state, [ panelName ] ),\n}, action.type, () => state )( action );. no need to mar the commit - did you see how I removed the parens?\npassing { () => foo() } as a callback is identical to passing { foo } except that the first way with the parens creates function-calling overhead and garbage-collection overhead and also creates a new function on every call, meaning that equal callbacks will register as unequal.. > wouldn't it be quite heavy performance-wise?\nthat depends on how they are stored. if they are full copies of the notes that we asynchronously grab from IndexedDB then yes of course. if however we can grab a list of indexes for valid revisions for the note and they are little more than just integers then probably not.. the main thing here is to recognize what is intrinsically coupled and what isn't. the way this is written implies that the two state properties are intrinsically bound, but I don't think they are. we can do a simple extraction to split these reducers into simpler and much more testable things\n```js\nexport const revision = ( state = null, { type, revisionState } ) =>\n    REVISION_STATE_SET === type\n        ? revisionState\n        : state;\nexport const isViewingRevisions = ( state = false, { type, revisionState } ) =>\n    REVISION_STATE_SET === type\n        ? revisionState === null\n        : state;\nexport default combineReducers( {\n    isViewingRevision,\n    revision,\n} );\n```\nNow we have two separate reducers each with simple data types for state and they are so stupid simple that we practically don't even need to test them properly in order to benefit form their ability to be easily tested.. let's choose a little more verbosity here for clarity (the newline)\u2026\njs\nexport const toggleLayoutType = layoutType => ( {\n    type: LAYOUT_TOGGLE,\n    layoutType,\n} );. the point wasn't really the switch. it's the meaning of the value used to represent the UI. what does 3-col 2-col and 1-col mean? even in their mapping we have a strange break in types from column-indications to editor-indication.\nalso I don't know if I follow the metaphor between UI behavior and the changes to the underlying representation. at the same time, I think that we can hold the metaphor. what are we doing in the UI? toggling the display of a specific panel. what are we doing in the state representation? swapping between one of several predefined layout designations. we could instead toggle some indicator for the matching panel.\nthis could be done with a basic object-and-keys-with-boolean-values approach too, though that's honestly just an easy optimization on top of what is more deeply a set/membership operation.\nI'm not too worried about extensibility, though one could easily imagine us extending it indeed, such as for controlling the display of the settings dialog. right now I'm simply leery about mixing the metaphors and hardcoding in meaning-hungry layout designators.. we should probably reserve toggle for operations that are boolean in nature - toggling on vs toggling off. setLayout is closer to what we are actually doing here.. is the purpose of this function to make sure we don't select an unavailable layout type?\nif so, this hearkens back to my comment above about modeling the data for the app. if we have a different representation then this entire function wouldn't be necessary. if we stick with it as-is then we can still probably eliminate it since we control the code and the values aren't coming from user input.. purely a stylistic decision, but I love the point-free style here with compose\njs\n( {\n    onToggle: compose( dispatch, toggleLayoutType ),\n    onRevisionChange: compose( dispatch, setRevisionState ),\n} ). @copons do we need the if? should this not be a safe operation to dispatch on every call?\nit is not problematic the way it's written. in fact, it is faster this way, though I'm sure this performance impact will never matter.\nI like exploring always-safe process and then removing branching where possible. @copons there's only one case in which not creating the closure might fail and that is if the called actions rely on this, which would be terrible, but I looked and these two don't appear to do that.\ncan you say more about what exactly doesn't work about them?\np.s. in both cases we're actually passing the callback. with the parens we're also binding the this of the called function to the object from which it is called.\njs\n() => this.props.actions.closeNote() // this === this.props.actions\nthis.props.actions.closeNote // this === global context (or maybe null). I think we could improve the naming. This reads like a verb when I think it's probably more akin to a noun such as \"LayoutChanger\" or \"LayoutSelection\" or \"VisibilityToggles\". when we have several attributes on a JSX element like this and they make for long lines, would you mind splitting them with one attribute per line? bonus points for alphabetization\njs\n<button\n    className=\"button button-borderless\"\n    onClick={ this.props.actions.toggleNavigator }\n    title=\"Tags\"\n/>. Are we showing a single icon and rotating the view based on repeated clicks to that icon? I'm not sure how I feel about this if it's true. Do I have to click twice to go back to the previous view?\nI'm a big fan of how the Mac app handles the tag list. There's an arrow one can click on to open and close it - the drawer idiom.. this if block is not needed since get() defaults to the existing state; it is redundant.. js\nconst isElectronMac = () => isElectron() && matchesProperty( 'process.platform', 'darwin' )( window );\nthe call to isElectron() may be redundant here but I'm not sure. my guess is that if window.process.platform is darwin then we'll know that we're inside Electron. I hope that you tested this since I didn't. process is usually set by node and I suppose that Electron itself is the source when running there.. are these strings really needed or are they mainly for debugging? I don't think we have to return any values here since this gets asynchronously called on input. we can still return early in 233 and 239 with return this.handleEditorStateChange( \u2026\u00a0) but just leave this function without a proper return. I'm suspicious of the implicit state being passed in listItemMatch and curious why we need it. it requires a RegExp match object but only uses the first item. what if we required this to be the bullet+prefix and called it something like that\njs\nfunction continueList( editorState, listPrefix ) { \u2026 }\nthen the calling code would read like this:\njs\nconst listItem = matcher.match( line );\nif ( listItem ) {\n    return \u2026\u00a0this.continueList( editorState, listItem[ 0 ] );\n}\nor better yet use some destructuring and comments\u2026\njs\n// list item has prefix up to the bullet and following space then arbitrary text\n//  - thing\nconst listItem = pattern.match( line );\nif ( listItem ) {\n    const [ listPrefix ] = listItem;\n    return this.handle\u2026 this.continueList( editorState, listPrefix );\n}. nice @nfcampos - I was unaware of those. I'm a bit nervous about the string values here for reasons like how I just mistook them. I wonder if constant keywords would be better here, something such as DRAFTJS_HANDLER_CONTINUE or DRAFTJS_HANDLER_FINISH - what do you think?. Is using the patterns here an indication that we have failed to use <a /> appropriately in our app? Is there a reason they shouldn't all use the pointer?. Thanks @drw158 - I was unaware of the Electron recommendations. that sounds reasonable. I'm curious how many non-web links we have that use <a />. why did we remove the export?. this needs to go before merging. My editor informs me that they are no longer there :smile:. shuffled around in recent update/rebase. expect is provided by jest - no need for chai. @beaucollins in the past I have tried beating the RegExps in places like this and struggled to do it. It's actually a pretty basic RegExp and my guess is that it's insignificant, though I considered it.. why this change?. what if we passed in the file path as an argument instead of hard-coding ./config? would we have a good reason to develop or test with multiple config files?. would this not be a reason to kill the program entirely?. can we remove the ^ and pin this version?. why not just store the config as a JSON file instead of creating a JS file which exports JS data which then gets serialized as JSON?. are you opposed to pinning?\nI've personally found it helpful in that version updates have specific testable PRs.\nI guess shrink wrapping can have the same effect. thoughts?. what do you mean by reading in git describe? I don't think I\"m familiar with it in this context.. interesting. what's the point of this? is it simply to identify the exact commit which built the bundle?. @beaucollins I almost feel like this is an important-enough it of knowledge to keep in the template so that nobody accidentally tries to add it back in. how do you feel about it? can we even write comments in ejs?. agreed that they could use some refinement. thanks for marking this!. when I installed react-virtualized it informed me that this was a required peer dependency but would not be installed automatically. we can try again without it, but I believe that the build will fail.. can we move this up above the React component? it's just a personal style request as I like to keep constant declarations at the top.. ibid. are you comfortable moving this up to the top?. sweet. let's just remove this then; though a comment here in the PR/commit would probably be valuable. > I prefer configuration scripts as js instead of JSON usually.\nI can accept this, though if you were to provide some rationale beyond \"I like it\" that would be even better :wink:. @beaucollins I went ahead and instructed the process to exit here since the app won't boot without the config message.. @beaucollins I'm not sure what kind of config file you are using, but the one I had (which matches what's in the project's README needs to be executed in order to return its data. Therefore I went ahead and turned this into a call on the import. If the file is missing or if we could not read it then this will fail and kill the build process.. @beaucollins here I have added what I think are three important indicators of the build generator based on your comments in this PR. Please feel free to change them and add or take them away.. > I like embedding the state of git during the build into the product. There are many ways of doing this. One way would be making a config script that shells out and runs git describe --always --dirty and uses that as the version.\nadded in 812b7a7. thanks! I did a quick online search and didn't find this.. suppressed in b11197b. could not the boolean value of whether or not we are viewing a revision be captured in the presence or absence of state in the selectedRevision?\nI'm not sure we need two values here when we could probably pull this out from a selector.. aha! that makes sense. how do you feel about putting isViewingRevisions inside the state.ui subtree? I was using that for the tags to indicate UI-level state in contrast to data-object-level state.. actually. isn't this kind-a related to the isVisible collection we have used for the other dialogs and modals?\nit seems to me like an independently viewable dialog that could potentially have different visual designs while still keeping the prime notion of visible or hidden.\non the contrary, it does not make sense to have it visible if the note editor is hidden, which would mean we have encoded an impossible state into our app.\nmaybe we could still go back to using one value to represent both things:\nopen the revision slider\n - issue OPEN_REVISION_SLIDER\n - something intercepts that action, loads in the revisions, then finds the newest one\n - that something issues a new SELECT_REVISION action to select the newest revision\n - reducer sets non-null value for selectedRevision indicating that slider should display\ncancel the revision selection\n - issue CLOSE_REVISION_SLIDER\n - reducer sets null value for selectedRevision indicating that slider should hide\nselect a revision from the slider\n - issue SELECT_REVISION\n - reducer sets non-null value for selectedRevision, slider stays open\nclose slider, selecting revision\n - issue SELECT_REVISION\n - reducer sets non-null value for selectedRevision, slider stays open\n - issue CLOSE_REVISION_SLIDER\n - reducer sets null value for selectedRevision indicating that slider should hide\nchange selected note\n - issue SELECT_NOTE\n - reducer sets null value for selectedRevision making sure we start with the slider closed. > If there's a way that we can use the note's first line, that'd be cool.\nhow should we handle duplicates and blank note titles?\nfor duplicates I could imagine document.txt and document (1).txt but for blank notes?\n\ngrab the first N-characters of content -> third line of note maybe.txt\nuntitled.txt and untitled (1).txt. > Also users have requested that the tags be in the exported file as well\n\nI thought about adding them as hashtag strings. do you like Tags: ToDo, Shopping better than #ToDo #Shopping. I'm in favor of removing them, or fixing the reasons they are commented. added in 20721aa. changed naming in e29452f using the following algorithm:\n\nstrip out all unsafe characters from each line of the note\ntrim each line of the note\nfilter out lines that are now blank\ntake the first line, or untitled if the note is blank after these transformations\nlimit line to 40 characters\nsave as .txt unless there are duplicates, in which case we append -(1) or -(2) etc\u2026. > Also users have requested that the tags be in the exported file as well. Maybe just at the bottom of the file?\n\nAdded list of tags to end of note in 9d11ff0.\n@roundhill in this iteration I have explicitly declared the list of tags at the end with a header because it was a bit confusing to me in my tests just having the space-separated list of hashed-tags.\ne.g.\n```\nChocolate Cake\nTake the eggs and beat them with sugar.\nPour in chocolate.\nBake.\nTags:\n - #cake\n - #chocolate\n - #kurz-gesagt\n - #recipes\n```. absolutely, though let's make sure we test it.. I should put a comment in there, or fail with an exit code.\nAlthough I started with process.exit( 1 ); it was spewing out a bunch of npm errors because of the exit code and the explanation then got lost. This was a pragmatic compromise to make sure the message was clear and visible.\nThoughts?. This seems reasonable @roundhill though I wonder if we should comma-separate them then. Especially for notes with lots of tags the list gets looking a bit eccentric. I did start with Export All Notes but it seemed very odd in the menu against the other shorter entries. I'll have a look at Export Notes. thanks @beaucollins. how about I suggest that we either stick with the documented format or update the project README?. very fair. ugly but fair :wink:. > to be backwards compatible we can use typeof and\u2026\nboo! :wink:\n@beaucollins do we have a reason to change it? if we do, I'd rather just force everyone to change it; or, I don't see any compelling reason to be loose here with our input.. returns an exit code of 1 in b842094. Threw up in 80e3553. Updated in cf7e759.\nNow the tags appear as an indented list\u2026\n```\nJust a note\nTags:\n  one, two, three, \u2026, end-of-line\n  next-line, moarTags, what?\n```\nthere's no comma between lines. should we include it?. cool! go ahead and commit it to this branch. this means we should lock-down now and no longer rebase without coordinating with each other first. Keep in mind that we are rebuilding the tag system in #402 . Yep, just be careful about working too far ahead of other existing work. It tends to not save us as much time as we might think it could.. @beaucollins the performance here has been worked-around in the note list by some imperative caching. in the future I hope we can move this operation out of the rendering path and into the note update / note add path which would eliminate repeated calls.. done - thanks for the nudge @Copons . LF_ONLY_NEWLINES I think is helpful. CRLF_NEWLINE's value might be a little more dubious. might actually hamper readability since it's a straightforward constant. I support you either way, but I wouldn't have turned this one ^^^ into a named constant. @beaucollins it would be cool here if we split this up into separate reducers each of which operates on its own simple data. Also, can we move these type constants into the state/action-types.js file? (please ignore the Symbol() in there - I put that in as an experiment and I hate it so I'm following Calypso's trend with named string constants)\n```js\n// state/settings/source-list/reducer.js\nconst width = ( state = 330, { type, width } ) =>\n    SOURCE_LIST_SET_WIDTH === type\n        ? width\n        : state;\nconst isResizing = ( state = false, { type, isResizing } ) =>\n    SOURCE_LIST_SET_RESIZING === type\n        ? isResizing\n        : state;\nconst canResize = ( state = false, { type, canResize } ) =>\n    SOURCE_LIST_SET_CAN_RESIZE === type\n        ? canResize\n        : state;\nexport const sourceList = combineReducers( {\n    canResize,\n    isResizing,\n    width,\n} );\n```\nthat structure seems more fitting for the Redux pattern and it's certainly easier to test. commented code?\nremove much?. nice. so much senseless abstraction going on here. thanks for inlining this stuff.. just a personal preference, and maybe I've broken my own preference, but what do you think about surrounding this in parens just to visually delineate the JSX?\njs\n} ) => (\n    <div\u2026\n        \u2026\n    </div>\n);. earmarking since we do this in two places: from the app menu and from here\u2026. is this change necessary? I know they are out of order alphabetically but I tend to put ref at the top as a pattern since it's a special prop. in any case, I think this change is unnecessary in this PR. this is a weird dangle, also how about using something more semantic like includes( get( revision, 'data.systemTags', '' ), 'markdown' )\nwe could extract this into bindings or use parenthesis to clean it all up\u2026\njs\nconst isMarkdownNote = includes( get( revision, 'data.systemTags', '' ), 'markdown' );\nconst isPreviewing = isMarkdownNote && state.editorMode == 'markdown';. seems like this could have a better name. is it getting the current note or the selected note or the active note?. how about getActiveNote()?\nit's just that I would expect getNote() to take some kind of id parameter and return a specific note. are we sure we need this? using local state is fine. the bigger problem is when we are mutating properties on some object where the object's reference stays the same\u2026\n```js\nrender() {\n  this.state.list.push( 'a' );\nreturn { this.state.list.join() }\n}\n```\nin this case, a shallow comparison won't find any change but we've appended an item to the list, confusing React/Redux.\nit should be fine without { pure: false } I think. it seemed to test okay. For now why don't we limit this to existing behaviors?. do we need to be passing the this context here? if not we can simplify\njs\nmainWindow.once('ready-to-show', mainWindow.show);. On that note a run through of prettier should take care of any and all styling issues.. Just a note that this works exactly the same as noteTitleAndPreviewRegExp because of the kleene star at the beginning [# ]* - in other words, this RegExp will always match when the other one matches. Thanks for clarifying @natanielcz - I had been assuming that pulling it out on normal notes is also okay.. totally fine here as-is, but this makes me think we need to get together a function like isMarkdown( note ) since that's becoming an important test condition.. is this change a typo here?. couple questions:\n - do we want to trap on # # # # and friends?\n - valid headers are one through six long, should we trap that?\n - is a tab or quad-space different than the ASCII space?\njs\n/(#{1,6}\\s+)\u2026. oh thanks! sorry I didn't mean to imply this had to be done here in this PR, but I guess it's in a reasonable spot for it. no need to @roundhill - that's what prettier is for :wink:. good catch! either this or maybe tags.length > 0 && might be more common. this is good either way. also available without any external libraries as new Date().getFullYear() (already in local time that one). what's the point of this empty function? should we just go ahead and remove it now? should we reload the tags here?. is this how the mobile clients create them or are they using a kind of UUID? not sure if we have reason to match them up with mobile clients but I'm pretty sure that the tag id is intentionally unrelated to the label\nsomeone creates a label, adds it to a bunch of notes, decides the label should be something else (e.g. \"work\" to \"naperville file\"), renames the label, now that tag has nothing to do with the text \"work\". we may want to use something like URL instead which does actual URL parsing\u2026\njs\nconst protocol = new URL( url ).protocol;\nif ( ! allowedProtocols.some( allowed => allowed === protocol ) ) {\n    return;\n}. you're right, but we don't even need this\u2026\njs\nif ( ! allowedProtocols.some( allowed => allowed === protocol ) ) {\n    return;\n}\nthis is because Array.prototyp.some() takes a callback and it passes in as the first argument of that callback the current value of the array being iterated over.\njs\nallowedProtocols.some( ( currentValue, indexOfArray, originalArray ) => someTruthyOrFalsyReturnValue() ). what's going on here? is there a missing if statement body? something is wrong.. :smile: looks better now. good catch @beaucollins - the race was from my original idea where only the unsync'd notes would resolve and so we wouldn't have needed to wait for all Promises - an early abort. this was a wrong idea. :smile:\nit would also work if we only reject()ed on unsync'd notes and had a timeout, but that's another kind of race we don't want.. @roundhill you don't need to learn that much about promises. just let your \"yes\" be \"yes\" and your \"no\" be \"no\" :wink:. is this going to change the semantics? will this spread out each async action and then stop getting the versions of others once one is found?. ```js\nconst noteVersions = await Promise.all( notes.map( async note => await getVersion( note ) ) )\nconst needsSync = noteVersions.some( v => v === 0 )\nreturn needsSync\n    ? this.showUnsyncedWarning()\n    : onSignOut()\n```\n???. so we could still reject here too, no? I was overlooking that the first reject() rejects and abort the entire Promise.all()\n```js\nconst noteHasSynced = note => / identical to before /\ntry {\n  await Promise.all( notes.map( noteHasSynced ) )\n} catch ( e ) {\n  return this.showUnsynchedWarning()\n}\nonSignOut()\n```\nactually I really like this construction: \"wait until all notes have sync'd - oh no! they didn't so show the dialog\"\nit's not entirely accurate but definitely looks closer to how I think about it. some subtle renaming could help the accuracy I'm sure\nEdit I had to move onSignOut() out of the try/catch else a failure in onSignOut() could trigger the dialog. what are these highlight modes for? can we add a comment to explain since thy are a bit surprising here in the code?. Please leave a comment. Oftentimes I raise the question just to hint at the need for a comment in the code so that people will have the context in the future when they read it :wink:. That's something I don't know but would leave to testing unless I can find documentation. If that path works in all built environments (as in the path is relative to the package containing the Electron app and its assets) then yeah it makes sense but if not then I think we need to figure out why the discrepancy exists, if it's probably causing problems elsewhere in the app, and if we need to normalize the path behavior.. is this needed since Chrome 55+ supports async functions?. we would definitely want to lock this down. right now it appears like if the input is a checkbox then we'll also allow XSS attacks in other unrelated fields of the same HTML. so this would end up being \"above and beyond\" this PR, but maybe it would be a good time to add it in. how would you feel about making these result indices clearer by eliminating them?\n```js\nconst match = \u2026;\nif ( ! match ) {\n    return { title: 'New note\u2026', preview: '' };\n}\nconst [ / full match /, title, preview ] = match;\nreturn {\n    title: title.slice( 0, 200 ) || 'New note\u2026',\n    preview: preview || '',\n};\n```\nI can see value in doing this and also in leaving it the same way.. Thanks! this shouldn't have been your burden but I noted it simply as a result of the fact that the indices ended up being important in this PR. let's move this into the docblock already present.\njs\n/**\n * Matches the title\u2026\n *\n * \u2026\n *\n * Note! there is an \"extra\" capture group of whitespace at the\n * beginning of the pattern. This is there so that we can maintain\n * parity among the capture group indices with the pattern for\n * notes where Markdown is active.\n *\n * @type {RegExp} \u2026\n */\nconst noteTitleAndPreviewRegExp = \u2026. actually we might as well also skip the pattern matching when the content is empty. no need. I like the cleanliness of ( content || '' ) but actually that's also needless.\nwould you be interested in catching empty-content cases above the match and return the defaults before then?\njs\nif ( ! content ) {\n    return {\n        title: 'New note\u2026',\n        preview: '',\n    }\n}. nitpick: we should have a newline here. I wouldn't worry about it though - if you want to you can add it in but otherwise we'll come back later and add it. I don't want this to hold-up the PR. this comment is more for my own note-taking as I review the RegExp\njs\nconst noteTitleAndPreviewMdRegExp = new RegExp(\n    '[#]{0,6}\\s+?' + // start matching when we have a header with space after it (ungreedy)\n    '(' + // match group 1 - title\n        '\\S[^\\n]*' + // title is some non-whitespace character and then everything until the end of the line\n    ')' +\n    '[\\s]*' + // followed by some amount of whitespace including the newline\n    '[#]{0,6}\\s*?' + // the next bit might be prefixed by a header, and if it is we won't use it for the excerpt\n    '(' + // match group 2 - preview\n        '\\S[^\\n]*' + // preview is the first non-whitespace character and then everything until the end of the line\n    ')?' // there may or may not be an excerpt\n);\nactually now I'm wondering if this is really what we want. I was playing around with different inputs on regex101.com\nquestions\n - is there a reason we have the [] where they aren't required, like around the # and \\s?\n - should we be processing the first line in two stages for Markdown notes? It seems like this RegExp pattern isn't handling Markdown matches properly when they aren't prefixed by the hash.\nMarkdown Title:\n - Skip all whitespace prefixing content\n - Grab first line\n - If prefixed by hashes that would indicate a header then strip them\nMarkdown Preview:\n - Skip whitespace after title\n - Grab until next newline\n - If prefixed by hashes that would indicate a header then strip them. ```js\nconst match = /\\s(\\S[^\\n])\\s(\\S[^\\n])?/.exec( content || '' );\nif ( ! match ) {\n    return defaults;\n}\nconst [ / full match /, first, second ] = match;\nconst title = isMarkdown\n    ? first.replace( /^#{1,6}\\s+/, '' )\n    : first;\nconst preview = isMarkdown\n    ? second.replace( /^#{1,6}\\s+/, '' )\n    : second;\nreturn {\n    title: title.slice( 0, 200 ) || default.title,\n    preview: preview || default.preview\n}\n```\nthoughts?. Sadly I don't think that (?>\u2026) exists in Javascript.\nOne vs. three RegExps isn't usually clear; it's not always better to have fewer and it depends on the characteristics of the expression and the document.\nIn this case yours would probably be fine and faster though I just end up questioning the complexity of the source code. I don't know that this is a performance problem and I find the logic simpler when operating on the line-by-line basis - I almost also wrote content.split('\\n').slice(0,2) up there too!\nActually I'm pretty sure that performance shouldn't be an issue here. After the initial note list generation it should cache the previews for the notes and the only one being recalculated should be the one that's in the editor changing or coming in from the server in updates.\nWe can replace the \"atomic groups\" in this new RegExp with non-capture groups which are similar\u2026\u00a0(?:#{0,6}\\s+)\u2026 They might get the job done.. oh you know what\u2026we shouldn't be setting __html to content if Markdown is disabled. it's not HTML so it shouldn't be treated that way - this is a separate issue so let's do it in another PR (because we'll have to make sure the styling all works out\njs\n{ markdownEnabled ? (\n    <div\n        style={printStyle}\n        className=\"note-print note-detail-markdown\"\n        dangerouslySetInnerHTML={{ __html: renderNoteToHtml( content ) }}\n    />\n) : (\n    <div style={printStyle} className=\"note-print note-detail\">{ content }</div>\n) }. I'd be more keen to fix this in a separate PR since this one right now is solely there for security. The rendering of bullets is going to be more related to how showdown generates the Markdown than how we sanitize it.. is this for debugging?\nalso, this isn't really how we use localStorage as it sets an item on the localStorage object itself but it does not store a value in localStorage\u2026\njs\nlocalStorage.setItem( 'access_token', userToken );\n^^^ that's how we store a value in localStorage but really it's nice to skip it and keep our data in app state. Well the other way should probably be updated but we can get away without it.\nMDN says they all work the same, however\u2026\n\nIt's recommended to use the Web Storage API (setItem, getItem, removeItem, key, length) to prevent the pitfalls associated with using plain objects as key-value stores.\n\nI would prefer to use the intended calling sequence but you can make up your mind about it and I won't be upset either way.. this is more or less about style and so not a blocker but I think in cases where we are checking a list of possible values it can be helpful to use a switch consistently to follow the logic\u2026\n```js\nswitch ( params.get( 'code' ) ) {\n  case '1':\n    return this.authError( 'Please activate\u2026' );\ndefault:\n    return this.authError( 'An error was encountered\u2026' );\n}\n```\nanyway I don't feel too strongly about this but I see the pattern more often in several different ways and the switch I think is a nice way to keep the intention clear while allowing for more linear expansion (such as when we recognize a second or third distinct error code).. processUrl is what it does but not really why it exists. could we think of a more intentional name?\nauthenticateFromUrl(url) for example?. taken further we can simplify this onBrowserNavigate function if we say \"authenticateFromUrl exists to handle URL-based authentication reponders\u2026\" and then move the try/catch logic in there\u2026\n```js\nonBrowserNavigate = url => {\n  try {\n    this.authenticateFromUrl( new URL( url ) );\n  } catch ( e ) {\n    // failure to authenticate likely means\n    // it wasn't an authentication URL\n    // so do nothing\n  }\n}\nauthenticateFromUrl = url => {\n    if ( parsedUrl.protocol !== 'simplenote:' ) {\n      return;\n    }\n\u2026\n\n}\n``. note thatURLSearchParamsalso hashas. of course,get()` also lets us compare these to logical falsey values in addition to presence.. if we are going to reference these above and here below we might as well bind them earlier\n```js\nconst state = params.get( 'state' );\nconst userEmail = params.get( 'user' );\nconst spToken = params.get( 'token' );\nif ( ! ( userEmail && spToken && state ) ) {\n  return this.closeAuthWindow();\n}\nif ( state !== this.authState ) {\n  return;\n}\nauthorizeUserWithToken( userEmail, spToken );\nconst wpToken = params.get( 'wp_token' );\n\u2026\n``. also known ascloseAuthWindow = () => this.authWindow && this.authWindow.close();. not important, just a note of style, we have putlets one per line in Calypso.vars are still combined to match the semantic of hoisting, but notlet`\nthis is not important for this PR. what's the purpose here? will this not prevent clicking on links?. might be best to move this into isAllowedAttr() and pass the value in there\njs\nfunction isAllowedAttr( name, value, tagName, tagValue ) { \u2026\u00a0}\nthis way we can be explicit in our rules. I wouldn't want to eliminate a valid attribute just because it starts with Javascript. I think this one is going to need some explanation here - what we are doing, why we are building this URL, why we are looping through cookies, etc\u2026 can you provide some explanation or a link to an explanatory post?. Would we want this to assign only if we haven't overwritten it from the command line?\nMakefile\nNODE_ENV ?= production. same as above for these. what is the suggested way to choose a different port, or does it have to be hard-coded?. might this also be possible via a WebpackDefinePlugin vs. as a separate module which executes at runtime?\njs\nplugins: [\n  new webpack.DefinePlugin( {\n    isDev: process.env.NODE_ENV === 'development' || process.defaultApp || \u2026\n  } )\n]\nI'm thinking about the bits of running this in a browser too and not having node available for things like process, should this slip it in to the web app. I guess what I'm most curious about is whether this impacts the browser. this app needs to continue working in both environments ; how is not as important \ud83d\ude09 . could we not set the environment variables and use them here?\nMakefile\ndev-server:\n  @NODE_ENV=$(NODE_ENV) HOST=$(HOST) PORT=$(PORT) npx webpack\u2026\njs\nconst url = isDev && process.env.DEV_SERVER\n    ? `${ process.env.HOST }:${ process.env.PORT }`\n    : `file://${ path.join( __dirname, '..', 'dist', 'index.html' );. html\n<ul>\n  <li> Major Changes\n    <ul>\n      <li>New AutoUpdater</li>\n      <li>RegExps parsing HTML</li>\n    </ul>\n  </li>\n  <li>Minor Changes\n    <ul>\n      <li>Updated code</li>\n    </ul>\n  </li>\n</ul>\nhtml\n<ul>\n  <li> Major Changes\n    <ul>\n       - New AutoUpdater\n       - RegExps parsing HTML\n    </ul>\n  </li>\n  <li>Minor Changes\n    <ul>\n       - Updated code\n    </ul>\n  </li>\n</ul>\nIf we want to perform this replacement we should parse the HTML and replace those nodes otherwise we'll get unexpected results.. Wouldn't necessarily call a two-level list as a more complex structure, or even this\u2026\nhtml\n<li>This issue was a real kicker.\n    We had to study extensively to find it.\n    But we fixed it.</li>\nAlso, HTML parsing isn't that hard - the browser does it for us - do we have the browser available here?\nIn other words, we can use a TreeWalker to iterate over the li nodes and replace them and their containing ul or ol nodes with the proper list symbol.\nAlternatively we could strip all tags or show the webview as you mention. If we go half-way I'm guessing we'll get crazy unexpected displays.. why not base this off of NODE_ENV?. one thing we did with Calypso was to let someone specify a sourcemap from the CLI as well since we sometimes want to make sure we get a full sourcemap to debug\njs\nconst devTool = process.env.SOURCEMAP || ( isDevMode && 'cheap-module-eval-source-map' )\nhttps://github.com/Automattic/wp-calypso/blob/e46363e640727564c989bcd33c9407674bc4623d/webpack.config.js#L124. ",
    "deBhal": "Ok, so the bad news is that this is a good question!\nhttps://github.com/yahoo/react-intl looks pretty interesting, I need to have a proper look at that.  From a very quick look, it seems pretty cool.\nI really like what we've got in Calypso with React, but it's embedded in Calypso right now.  It's nicely self-contained and should be pretty easy to pull out, but it hasn't actually been done.\nI'm completely clueless about electron and the specific problems it will pose.  Let me sketch out what translation looks like, maybe you can spot bits that'll be a problem.\nWe're using client/lib/mixins/i18n as a React mixin to add a translate() function, and then when you want to translate \"Some String\", you just this.translate(\"Some String\").\nWe've got a complementary tool that pulls those strings out and sticks them into a .po file, which makes it easy to stick them into glotpress and get them translated.\nOnce they've been translated, we pull them out of glotpress and generate a JSON file per locale, and these are what we need to deploy at runtime, and pass to the i18n mixin, like i18n.initialize( i18nLocaleStringsObject );#, and the translate() call pulls the translated string out for React to render.\nReact-intl uses MessageFormat rather that gettext/po, so there'd be some additional friction in terms of getting it translated, and some extra problems to solve around deployment, but the tool itself is ready to go immediately.\nOverall, I think using the Calypso module is going to be the best approach, and I'd recommend that even with the question marks around getting it split out.\n@rralian would know if we've got any concrete plans in that direction, but he seems crazy busy with getting Calypso open-sourced right now, so please be patient :)\n. The good news, though, is that i18n-calypso has been pulled out into it's own repo (github repo, npm so you can just npm install --save i18n-calypso).\nThere's also i18n-calypso-localize to help with live locale switching.\nThat provides the client side, but we don't have a step-by-step guide on setting up serving the localised strings.\nWe should have better resources on that, but it's all about internal infrastructure, so let's move that discussion to the the i18n p2.\n. :+1: Fixes #64 with my old node \n. ",
    "rralian": "I think it makes sense to pull the i18n functionality out of Calypso and make it easier to use in other projects as a separate module. I would separate the translate functionality into its own module apart from moment and format.\nI can work on that. Makes sense to me as a maintenance project.\n. > Yo @rralian, any progress on the module?\n@roundhill Yep, some progress. I had stripped out interpolate-components (https://www.npmjs.com/package/interpolate-components), but it's just one piece of i18n. The other piece I need to do is split out the translate functionality here.\nBut in my PR to implement this module (https://github.com/Automattic/wp-calypso/pull/2247), I got some feedback from @aduth that we should look into using a mono-repo approach, where we keep all of our code in calypso, but we still publish different modules separately. I still need to experiment with lerna to see if that makes sense as a general approach to splitting out functionality in calypso. I'll push up a PR for that today. Once we settle on the approach, it should go a little more quickly.\n. Still experimenting with lerna. I'll have something to look at shortly.\n. I have a PR here https://github.com/Automattic/wp-calypso/pull/2396 requesting feedback on the monorepo approach.\n. ",
    "iamgabrielma": "Request for i18n: 1872258-zen. Requested as well in 1857067-zen. Another request on 1867947-zen. Requested in #1141390-zen. Requested on 1869427-zen. Requested on 1882108-zen. > Is it a large account?\nNot really, around 20-30 notes\n\n(and we need a better place to report problems with app.simplenote.com since this is the repo for the Electron app). \n\nDefinitely, at the moment we have 11 repos for Simplenote but I was not quite sure were to post the web-related issue, I guessed the javascript one would make more sense for this but \u00af_(\u30c4)_/\u00af  :D\n\nthey might try using the Electron app which has its own local export functionality and the export it produces will even give them more data about their notes than the website will.\n\nThanks for the tip, will reach out to the user :) \n. @mirka I seem to have another case here: 1812291-zen \n\nwhen I move my mouse cursor to a specific place in a text line, the cursor suddenly jumps to the beginning of the line or even to another line as I start typing my text.\nIn addition, the undo function does not seem to work in this case.\n\nI understand this should be fixed with v1.4.1 so it may be one of these edge cases you mention. Anything specific we could ask them for in order to check where this may be coming from?. I'm re-opening this as seems we still have instances of this bug after 1.3 ( 1733481-zen ), in this case with Simplenote 1.3.4 on Windows 10.\nUpdate:\n\nafter a bit more troubleshooting, this morning I discovered that the error might be caused by an outdated video card driver. After installing the latest one, Simplenote started working as expected. \nI have an old Lenovo W520 with two video cards, an Intel and a Quadro 2000M. Getting the latest driver from NVidia's website fixed the issue with Simplenote.\n\nAnd closing it again :). Adding to this request, would be great to be able to found untagged notes as well, as per 1816199-zen:\n\nI use \"tag\" feature. But for one of the notes I forgot to add tag and it was difficult to find it.\nIs there any way to select/separate untagged notes? \n. Another case on 1576084-zen\n\n\n\nThe original error occurred after I updated a note on one of my Android devices and the app began to \"runaway\" pasting characters at \"computer speed\" (something that has happened in the past... a separate problem!!). I was able to exit the app and delete the errant note on my other Android device. But when I went to my PC, the app opened and (according to Task Manager) kept growing in memory to well over 2GB before it (I'm guessing) ran out of available computer memory.\nAt this point I rebooted the computer and uninstalled the Simplenote app. I reinstalled Simplenote from the website and now it opens, but does nothing once it is open. (can't open new note, no place to \"sign on\", can't find version number, etc.).\nI wonder if it's hung up from some remaining files/ data after doing the \"Remove Simplenote\" uninstall\n\nRemoving the remaining data  from C:\\Users(username)\\AppData\\Roaming\\Simplenote , then reinstalling Simplenote using the executable file from the v 1.2.1 seems to be working fine for this user\ncc: @msilbers  @kriskorn . Another case here: 1644791-zen. One more 1707895-zen. One more 1734761-zen. 1810320-zen. 1814851-zen. ",
    "logTom": "I'm on simplenote v1.3.2 on solus linux.\nI experience a very annyoing issue with this version.\nOnce a note reaches a certain length the cursor begins to randomly jump to the bottom of the note.\nSimplenote is kinda unusable because of this.\nVideo demonstration of the bug occuring (timestamps when it occurs 1:00, 1:27, 1:42, 1:52):\n2018-12-11 13-01-39.zip\n. Can confirm.\nDeleting the folder ~/.config/Simplenote/ makes the app usable again. Thanks for pointing out this workaround.. ",
    "jessestu": "I think this is related in 1637228-zen. A Linux user writes,\n\nI've been using Simplenote for 8 months and I noticed that the cursor don't follow on page scroll.\nIt means that if I have a long note, if the cursor is set at the bottom of the page then I hit enter. The page didn't scroll. It hard for me to just continue typing and be not able to see the latest update of my note.. A user mentions this as an issue in 1292890-zen. I'm letting them know it's by design.\n\nI think the margin is good for legibility (although a preference option would be great, too). Is there a way to tweak this design so that the margins are better communicated as a purposeful design?. ",
    "msolefonte": "Is there any update? I love Simplenote but it is barely usable because of this bug. I tried to update and reinstall, but there is no solution.. I have been doing testing and, although the problem persists after reinstall the software, it seems to not appear anymore after deleting the folder ~/.config/Simplenote/. Of course, you have to login again but the application turns useful, which is nice. \nIf another user can report this as a solution, perhaps it can help focusing the debugging. . ",
    "brezocordero": "Another report here: 1641635-zen\n\nThe cursor jumps to the end of the file, even if you are in somewhere else in the note.\nIt seemed to occur when the note was synced. At the end of the sync the cursor went to the end position of the note. However, it was not with every sync.\n. Another report in zen-1728879. \n",
    "BackSeat": "Seeing the same (just started for me with 1.4). Above fix also worked.. Just Googled \"simplenote enable markdown by default\" which brought me here, which I guess is just another way of saying, \"me too\".. ",
    "rob-01": "I'm also seeing this on v1.4.0 on linux mint 18.3, however deleting the folder ~/.config/Simplenote/ did not fix the issue.. ",
    "denismcdonald": "Following the most recent update for Simplenote on Windows, I'm regularly encountering the cursor issue described in #292:  \"Cursor jumps to bottom of the note while editing\".\nI'd experienced this bug previously (many months ago, in 2018, and perhaps even prior to then), before it seemed to resolve for a good time, only to now arise again.. ",
    "KokkieH": "Another report of this happening in Windows 10 received via Twitter today.. Another request for this in https://twitter.com/user/status/749116726701281280\n. Just had another request for this in 2674052-t, specifically for the Windows and Linux apps. This has also been requested on the (old) feature request page of the P2 for the Mac app: 2445663-t.\n. https://twitter.com/user/status/749495005866258432\n. Another request for this in https://twitter.com/glauer42/status/743086090542800896\n. @dmsnell Confirmed in version 1.0.5 I can no longer reproduce this, so it appears to be fixed. I'll also follow up with the user who made the original report.\n. User also confirms the issue is fixed. Closing.\n. See post titled \"Windows sync in 1.0.7-beta\" on internal p2. I think it might be the same issue.. Another request for this via Twitter.. Confirmed the same happens on Windows 7.. I assumed it would, but thought I'd make sure :). Another report via Twitter. ",
    "ehremington": "I am also having this problem on linux. Deleting .config/Simplnote seemed to work until I edited a note on the ios app, and then came back to editing it on the linux app. I add text to the top to keep a daily journal of my classes so this jumping to the bottom is very annoying. Seemed to start upon update to 1.4. Hope the note about switching between iOS and linux apps helps.. Does this look to be the same issue as #1185?. ",
    "gerv": "Even better, automatically turn MD on if someone presses Ctrl-B, Ctrl-I etc. with selected text.. I would expect that to be because the hard-coded font doesn't have Korean glyphs. So yes, this bug would fix that, as would implementing some sort of fallback mechanism (e.g. a set of fonts in CSS).. But does electron do font substitution if a glyph isn't found, like a browser does? If not, then this could be a problem, because the first font found will be used, and if it doesn't have the right glyphs, you are outta luck.. Here's my hacky desktop script to move notes one at a time from Tomboy to Simplenote. Could be adapted for other systems, no doubt.\nhttps://gist.github.com/gerv/f7a9fbf64a9a259593321ae6d9d32e9e. Also, with a little massaging of the data, you can use sncli for this:\nhttps://github.com/insanum/sncli. Workaround: define a shortcut key like F11 to open the app; that's as quick as clicking a tray icon.. Well, maybe. That would require adding similar hash-removal code to every client. But the title is already semantically distinct; making it so that it's styled to match seems like a cleaner solution.. I've had something like this happen very recently. I was on a plane, and used the desktop app. Later, I found all content I'd added to the desktop app had been overwritten with an earlier version. My other client is the Android app, which is presumably where the bad data came from. As you can understand, losing content like this is most frustrating.\nIt may be relevant that I updated the clock on the computer running the desktop app at some point during the flight, and that the Android clock wasn't updated until I landed and connected to a mobile network. But then, I didn't have mobile data so it wouldn't have synced until I got to wifi, which was some time later. So it may not be a clock skew issue. And I'd hope your timestamping was immune to that sort of thing!. It may well be that notes I opened on Android during that period got wiped on the desktop, and notes I didn't open didn't. Looking at things now, a day or two later, there is one note which is still out of sync. The updates I did on the plane are still there on the desktop, but they are not there on Android. This is a note I almost certainly didn't use the Android app to look at during the period of disconnection. Both devices have had good connectivity for some time, so I'd expect the difference to be resolved by now, one way or the other.\nIs there some way I can determine the \"sync status\" of this particular note at each end, which might help you debug this problem?. dmsnell: I confess I'm somewhat confused about how the History is supposed to work, particularly on the Linux app, because I always find it only has a day or two's history in it, even for notes which are older than that. And in this case, as far as I could see when I checked, it didn't have the lost changes anywhere in the history.\nA first-come, first-serve, throw-things-away system is not really \"sync\" in any meaningful sense, and it's a bit disappointing to hear that this is the algorithm! At the very least, why not create a new note called \"Note Title (conflicted version)\" or similar, which has the version which would otherwise have been thrown away, and let people resolve the changes manually, or just delete that note? Just throwing away stuff seems like a very bad solution. I agree the usable solution is not to have people manually resolving line-by-line diffs. I guess you could also make it appear in the history properly, but only if the history has some level of actual persistence.\nBut going back to this problem, I'm not sure I made actual edits on Android. So perhaps the problem is that it's triggering the \"edited\" flag when it shouldn't? . > That doesn't sound right. It should have history going back to the very first edit of the note (within reason - after a thousand or so changes the very first one might disappear). Another thing we'll look into.\nLooking at this, my two most heavily edited notes (Work Jotter and Personal Jotter) are the ones which seem only to have a day's history. And they are edited both from Android and Desktop. (Although given this bug I've taken to making a temporary note on Android for new stuff and then copying it over when I get back to my desktop...) Other notes have history stretching back months. So something is happening that truncates the history on those notes... A bit of fiddling hasn't let me to some steps to reproduce yet.. ",
    "dorianbrown": "Has this issue been solved, or just closed? I can't find any infomation about what the shortcut is if it was. . ",
    "jkudish": "@roundhill gave me access to the Linux build. A few quick notes from playing with it for a few minutes (under Ubuntu 15.10-wily)\n- It'd be great if it came bundled with a .desktop file or better yet, distributed as a .deb and/or .rpm\n- It was missing an icon (for me to be able to make a .desktop file manually)\n- Every time I open it, the dev tools are opened (probably useful during development phase)\n- Login screen looks a bit bland\n. ",
    "user501254": "Hi, any plans of providing rpm packages?\n. ",
    "jeremeylduvall": "@roundhill related to the user above, the user in 2794476-t was also wondering about an rpm package. Is this something we're looking at in the future or not on the radar right now?\n. ",
    "arturtr": "I also need RPM because of using Fedora.\n. ",
    "mirka": "We also received a suggestion to add other bulk actions, such as toggle markdown and export selection.\nRelated: #928 . @charlesinc3 Unfortunately no, we haven't implemented this yet. I'm hoping we can work on improving the search features sometime next year.. Closing as fixed. The current implementation doesn't alter the modificationDate on publish/unpublish.. We now offer several 32-bit builds (ia32, i386, i686) for Linux \ud83c\udf89\nhttps://github.com/Automattic/simplenote-electron/releases. Looks feasible with something like React Split Pane. I'm not immediately sure what the effects will be on note list rendering performance though.. Closed in favor of #796 . @nilsi We actually added this option (#815) in the latest version 1.2.1 \ud83d\udc4d . This has been implemented (#821 #872) and will be released soon \ud83d\ude42 . @erricgunawan @geezzeer \nCurrently, the spell checker language is tied to your OS language. So for example if your OS is set to Chinese, and you typed in English in Simplenote, spell check will not work. Is this the case for you? (If not, please post a new issue with details.)\nI realize this is quite limiting, so we're planning to make it more flexible (#949).. Thanks everyone! Since we do support markdown checklists now (kind of), I'm closing this in favor of more specific enhancements: #874 #875 #876 . This can be achieved with the globalShortcut module in Electron. We would need a new tab in the Settings dialog so the shortcuts can be set by the user. A global New Note and Search Notes shortcut might be useful.. Related: #102 . Closing since I can't reproduce on the current version of Simplenote. AutoHotKey seems to be working fine. Let us know if there are particular key combos or scripts that aren't working.. Thanks for the requests! Closing in favor of #562.. A Line Length setting has been introduced in #815, and will be released soon \ud83d\ude42 . Closing as this seems to have been resolved. (Could not reproduce in v1.2.1). Finally! We can start building this importer!\nClosing in favor of #916 . I'm concerned that persisting the Preview mode state across app relaunches would cause usability issues. For notes that don't contain a lot of Markdown syntax, the Edit/Preview modes aren't that different visually. It may be disorienting to launch into a mode where you expect to start editing a note, but can't, and take some time to discover why.. Yeah, I guess the current behavior is ideal then. The mode will be preserved when selecting another note, but the app will always launch in Edit mode.. Closing since I couldn't reproduce this in the current Simplenote version, and also it's likely not something we can fix on our side.. Closing this as the original issue has been resolved.\nThe printing styles have been simplified somewhat (#1013), but we'll be on the lookout for ways to prevent regressions.. @j2xl This should be fixed in 1.4.0. Could you try the latest version?. Let us know if this persists with our current builds, available on our release page:\nhttps://github.com/Automattic/simplenote-electron/releases. Closing as duplicate of #362 . Action item:\nThe tags should show a small, distinct close button when hovered. Perhaps like the deletable chips in Material. Only that button area should trigger the deletion.. > it's not showing publish icon\n@vadimnicolai Yes, this is actually because publishing is disabled on development builds. In dev, you're going to need to make the icon visible by altering the code in the NoteList component, or by adding the CSS class in devtools.. Since auto-complete is working for normal cases, closing in favor of #1124 #1128.\nI also posted the awkward data model issue at https://github.com/Automattic/Simplenote-United/issues/21. For login issues, our support team might be able to assist you better \ud83d\udc4d https://simplenote.com/contact-us/. Thanks for testing @arunsathiya !\nUnfortunately I can still reproduce this issue on Simplenote Electron 1.1.7. It looks like you might have printed before enabling Markdown on the note. With Markdown enabled, the PDF looks like this: \nMarkdown.PDF.save.from.Simplenote.Electron.pdf\n. Moved to https://github.com/Automattic/simplenote-macos/issues/251. This doesn't seem to be happening in the latest version, v1.2.1. Let us know if you are still encountering this issue.. Let us know if you are still encountering this issue in the latest versions.. This thread is diverging into three separate issues:\n\nThe markdown setting on a new note is not the same as the previously created note (Bug)\nThere should be a way to toggle markdown on all notes (New feature)\nThere should be a visible, intuitive way to see what the default markdown setting will be for new notes (Usability enhancement, however may be unnecessary if number 1 is fixed)\n\n\nI have 1,000+ notes that I need to change to markdown format, and I'd like to save 3,000+ clicks and maybe save others that as well.\nIf I was able to submit a PR for this as a kind of utility / extension from the menu, would the Simplenote team consider it?\n\n@SeanKilleen I can't say yet, but I'm interested to see how many people have this problem. Could you post a separate issue for this so we can gauge interest and consider solutions?. Looks like this may be fixed by updating electron-window-state to 5.0.3.\nhttps://github.com/mawie81/electron-window-state/pull/45. This issue (offline changes won't get sent to the server at all if you quit the app before going back online), was fixed by #1098 and has been released in v1.3.4 \ud83c\udf89 \nPlease post a new issue with details if you still see syncing issues in the latest version. Thanks!. I'm closing this for now. But if anyone is still seeing this in current versions, please report to Electron as it is probably not something we can fix on our side.\nhttps://github.com/electron/electron/issues. Thanks for the report! I looked into this, and it is a limitation with Chromium. (Electron apps are based on it)\nhttps://apple.stackexchange.com/questions/179187/turn-on-text-replacement-chrome\nI could confirm that while third-party utilities like TextExpander and Typinator work, built-in macOS text replacements do not work in Chrome.\nI found a module that works around this, but it doesn't seem stable and it currently doesn't work with Electron 4.0, so it's probably not a good solution here.\nClosing as a wontfix for now. Let's hope Chromium supports it in the near future \ud83e\udd1e . Yes, thank you!. Closing in favor of #381 #460 #944 . I think this is fixed in #1193.. While there are still underlying constraints that could cause this to happen in edge cases, users should be experiencing much fewer of these glitches, due to improvements made in #1193.\nI'm closing this for being outdated, but feel free to post a new issue if you encounter this again.. @iamgabrielma The currently known edge case is #1134. Basically,\n\nPlace cursor somewhere in the note.\nInvoke the Preferences dialog from the menu or Ctrl+,\nClose the Preferences dialog.\nCursor jumps.\n\nIf it is not this case, you could ask for example: Is there a certain line that always triggers it? If not a specific line, do the triggering lines seem to share a similarity? (Indented, Markdown list, particular language, etc.). @justinkterry Thanks for confirming!. Our revamped updater (#869) for Linux will have a button that opens the GitHub latest release page, so Linux users can download their package of choice.. Fixed in #1022. The fix will not make it into v1.3.0, but we'll get it out soon \ud83d\udc4d . Closing as this cannot be reproduced in neither the current web app (app.simplenote.com) nor the Electron app.. Closing as this was fixed in #724.\nI've added two minor issues as enhancements: #874 #875 . ### TODO\n- [x] comb through the code and figure out what all the shortcuts are @rakhi2104 \n- [x] sort them into groups (Navigation, Views, Note, etc.) @rakhi2104 \n- [ ] design a keyboard shortcut cheatsheet (modal dialog) to add in the app\n- [ ] cheatsheet should be smart about platform-specific shortcuts\n- [ ] add it under the Help menu (we\u2019ll only need it in Electron for now)\n- [ ] remove the shortcut documentation at simplenote.com/help/#shortcuts\n- [x] add mouse-over hints to UI buttons that have shortcuts #1214 . @rakhi2104 Awesome! Even partial help with the first one or two tasks would be appreciated. You can post the results in this thread \ud83d\ude42. Yay, thank you @rakhi2104 ! \ud83d\ude02 \nFor the documentation, let's remove some of the ones that are not really specific to our app. So remove Minimize, Close, Exit, and Undo, Redo, Cut, Copy, Paste, Select All, Print.\n\nPrevious note, Next note\n\nI'm planning on removing the Ctrl+Shift+Up/Down shortcuts for this, as per #798. So let's keep just the J/K ones.\nWe also seem to have\nNavigation:\n- Ctrl+T - Tag field\nNote:\n- Ctrl+Shift+P - Toggle Markdown preview. Adding Alt + Ctrl + C for Insert Checklist. It would be nice to have a toggle to disable update checking, regardless of this specific use case here. A \"Check for updates\" checkbox is pretty much standard (on Mac apps, at least).\nI'm going to close this in favor of the more generic #842 . Closing in favor of #433 . Closing this for now since the issue was not reproducible, and our Linux builds have changed recently.. I can confirm that I've encountered this as well, with current development builds on my Mac. The behavior I've been seeing is most similar to the report posted by @pauljacobson, where the notes appear but quickly disappear. The notes reappear when I create a new note.\nThe \"whole screen blank\" issue and the \"notes appear but quickly disappear\" issue may be separate bugs.. This will hopefully be resolved by #1022. The fix won't make it into v1.3.0, but we'll get it out soon. Feel free to reopen if you still encounter this issue on a version > 1.3.0.. Thanks for the request! Closing in favor of #293 . @ashinzekene Did you find out what was wrong? Let us know if you think there was a bug or a usability issue.. Ok, I see how this might be a usability issue on Linux. On Windows the menu bar is always present, and on Mac the menu bar appears when you hover the cursor. There is no way out on Linux if you don't know the F11 shortcut (which is standard, but still...)\nWe might be able to add a fullscreen toggle button somewhere in the top toolbar, if/when we do a slight redesign of the controls.. I guess it would be enough if the Full Screen mode would reset after quitting and relaunching the app. Most apps seem to behave that way.. @rakhi2104 \n\nshould we add a fullscreen toggle ?\n\nNo need, a fullscreen toggle is already in the View menu.. Closing as this seems to be a feature request for the native macOS app, not the Electron app (already implemented here).\nRelated: https://github.com/Automattic/simplenote-macos/issues/18. Closing in favor of https://github.com/Automattic/Simplenote-United/issues/21. Just a quick clarification:\nSince the note does not have keyboard focus in Preview mode, the correct behavior for Ctrl+A is going to be to \"select all text in the page (= window)\", rather than \"select all text in the note\". Like how all text on this GitHub page is selected when you do Ctrl+A with no keyboard focus anywhere.\nBut yes, it is strange that nothing is selected with Ctrl+A.. Partially fixed by #1132. While this makes the preview text selectable by mouse, and by \"Select All\" in a plain web browser, \"Select All\" in Electron will still not work.\n\"Select All\" not working here is an issue with Electron, and will be fixed when we update to Electron >3.0.0.. I confirmed this issue on Ubuntu 18, Simplenote v1.2.1. Typing the key sequence gksrmf seems to produce the characters \ud55c\uae00 in Text Editor, Firefox, etc., but this fails in Simplenote. Japanese is working fine. I would like to know if Chinese is working.\nAlso, this does not happen on Windows or Mac.. > When I try to add a tag in Korean, one stroke produces two characters.\n@rumahrumah Thanks for the report! This is a different issue and will hopefully be fixed in #999.. Thank you so much for looking into this @palindrom615. Seems like this probably can only be addressed in either DraftJS or Chromium itself. There are some nasty interactions between CJK composition and contenteditable and DraftJS \ud83d\ude2d (Like this one: #1171). Closing in favor of #1107.. Unfortunately this is not something we can address on our end, but you can try posting an issue with Electron to see if they can fix it: https://github.com/electron/electron. If you enable Markdown on your note, you can fence your code with three backticks to get a code block:\n\n```\n{\n  \"prop\": \"value\"\n}\n```\n\n. We probably won't be making it user-configurable, but I agree that it would be better to have more size contrast by default.. Closing as duplicate of #352 and #274. Thanks for flagging this. We'll keep this in mind!. AppImage packages are also now available on the releases page.. Thanks! Since your Simplenote version is 1.3.3, I believe you are using the native Mac app, not simplenote-electron. There seems to be a feature request at the simplenote-macos repository.. The captcha on the web app is removed for now, since we\u2019ve added a few more protections. We\u2019ll keep an eye on things and hopefully we won\u2019t need it anymore.. I believe this is a report for simplenote-macos, not simplenote-electron.\nClosing as a duplicate of https://github.com/Automattic/simplenote-macos/issues/227. With information from the original support request, the exact steps I took to reproduce this are:\n\nIn the note editor, hit Tab and type any Latin character (like -).\nSet the keyboard layout to Japanese.\nType the key sequence kanji, hit Space, and then Enter to confirm the conversion to \u6f22\u5b57.\nBackspace.\n\nThe app will crash. Interestingly, it only crashes in Electron, and not in Chrome, Firefox, or Safari.\nThis is likely a bug in draft-js, and I'm not sure we can fix it on our end.. For those who are experiencing this issue, a workaround is to use spaces instead of tabs.. > This is likely a bug in draft-js, and I'm not sure we can fix it on our end.\nI looked into this a little, and it may be a bug (or if not, may be worked around) in our indentCurrentBlock function. We'll need to investigate further.. > zen-1720385\n\nFrom user:\n\"I didn't use tab, only SPACE in the GIF.\n\nFrom the screenshot in the support request, I can see that the crash is happening on a line that is a nested list item, which has a tab character at the beginning. So I'd say this is the same issue \ud83d\udc4d. Thank you for the kind words, and offering to help with translation! We don't have the infrastructure in place yet, but localization is definitely on our minds.\nClosing in favor of #16.. I confirmed this issue. This happens in Windows Electron when the OS language is not set to Japanese.\n\nA temporary workaround is to set the OS language to Japanese.. For Chrome (inside Electron) to correctly choose language-appropriate fonts, we must ensure one of two things:\n\nAn enclosing HTML tag has the proper lang attribute set\nwindow.navigator.language or window.navigator.languages includes the correct language\n\n(In a normal Chrome browser, a user can set multiple languages and their priorities in the Language settings.)\nPossible ways to fix:\n\nUse a language detection library to set an appropriate lang attribute to each note.\n\nSee if there is a way to get the OS's \"Preferred Languages\" settings and set them to navigator.languages. Does this still happen with v1.2.1? If so, could you post a screenshot?. The RPMs are now available on the releases page. Thanks!. Fixed in #1022. The fix will not make it into v1.3.0, but we'll get it out soon \ud83d\udc4d . Some improvements we should make:\n\n\nLight theme\n\nChange the $blue from #4895D9 to #287AC3\nChange $gray from #899199 to #6F7780\nDark theme\nChange the background from #2D3034 to #282A2E\nToggle switches: Add cues to that don't rely on color (currently hard to differentiate with red\u2013green color blindness). Resolved in #809 . Re: horizontal padding, there was a responsive rule that increased the horizontal padding above a certain screen width. I've removed it altogether, since it doesn't really make sense anymore with this new feature.\n\nNow it is a consistent padding: 24px for all line length modes and screen widths. Thanks @roundhill !. >> Shortcut for \u201cRedo\u201d should be Ctrl+Y\n\nis it applicable only to Windows ?\n\nYes, and I think removing the explicit accelerator property and using just role: 'redo' would work, because the logic is baked into Electron. We are actually overwriting the platform logic by adding an accelerator ourselves \ud83d\ude05. > Most of the edit commands already have role assigned in the code.\n\nIs accelerator overriding them ?\n\nThat's correct. So my plan was to look at the Electron code for menu item roles, and remove any properties from our code that is unnecessary.\nWe still have to override the labels though, because the default labels don't include Windows access keys.  (That's what the ampersands in the labels are)\n. @gie3d Thanks for trying this out! I think it looks great \ud83d\udc4d \n\nI think it's more intuitive to label the Zoom In short key using \u2318+ rather than \u2318= but I still cannot find the way to do so.\n\nYes, I was thinking about fixing that, too. It should work if you write it as CommandOrControl+Plus.. Can we keep all the file/folder names spinal-cased to match the rest of the codebase?. Also, I initially had some trouble getting this to work in my environment. Turns out it was a NODE_MODULE_VERSION issue like the one described here, but it was hard to notice there was even such an error because it was only thrown in the devtools console.\nI'm afraid electron-spellchecker will break rather silently like this whenever it's run in a node version it doesn't expect. (Is that a valid concern?) Should we be adding an electron-rebuild step somewhere?. The captcha on the web app is removed for now, since we\u2019ve added a few more protections. We\u2019ll keep an eye on things and hopefully we won\u2019t need it anymore.. I'm unable to reproduce the originally reported issue, neither in v1.1.7 or the current v1.3.3.\nThe exact steps I'm taking are:\n\nLog in to the same account on https://app.simplenote.com and the Windows app.\nOn Windows, make sure that the note list sorting is set to \"Last modified\".\nQuit the Windows app.\nOn the web app, change the first line of the first note.\nLaunch the Windows app.\n\nThe Windows app launches with the first note selected, and it is quickly updated to reflect the changes made on the web app.\nLet me know if there's something else I need to do to reproduce, or if the issue has gone away.. I'm going to close this for now, since the original issue was unreproducible and we have some more sync fixes in v1.3.4. Please feel free to post a new issue with details if you still see sync issues in the latest version.. @bestann Hi there! Our support team may be able to assist you better with this.\nhttps://simplenote.com/contact-us/. Perfect! Thank you \ud83d\ude42. I'm closing this as it looks like a problem on brew cask's end, and is being fixed.\nhttps://github.com/Homebrew/homebrew-cask/issues/51691. \nI've determined the cause as the redux appState.note being out of sync with the actual displayed note. This means that some parts of the app (e.g. ShareDialog) are relying on appState.note to determine state, while other parts are not relying on it (e.g. NoteList, NoteDetail).\nI attempted to tack on a state updater somewhere, but concluded that this would make things worse without bigger structural changes.\nThe simplest hotfix will probably be for the UI to always reset its selection on tagSelect, showing the placeholder UI on the editor side. This should hopefully be easier to achieve after the app.jsx refactor (#822).. Thank you! I was able to confirm the spellchecker working in Mac dev, Mac packaged app, and Win dev. The npm/make scripts are working on my Mac.\nA few questions:\n\nThe spellcheck context menu doesn't seem to be working in the packaged apps for Windows and Linux. Is this expected?\nIs the makefile supposed to work on Windows, too? I was able to install make through something called MinGW, and make start worked (despite giving a \"Path must be a string. Received undefined\" error). make dev didn't work \u2014 it can't find webpack or webpack-dev-server. Do you recommend that we do all dev work on Mac, and just copy over a packaged app for testing?\nCan we run npm audit fix on this? It's reporting a lot of vulns.\nmake package-win32 (on Mac) is ending in an error:\n    \u2022 building block map blockMapFile=release/Simplenote-win-1.1.7.exe.blockmap\n    Error: Exit code: ENOENT. spawn prlctl ENOENT\n    (...long stack trace continues)\n    It results in a working .exe file though... \ud83e\udd14 . Got it. Thank you for clarifying! I understand it better now.\n\n\nMaybe try it with classic npm debugging (rm -rf node_modules && npm install) \ud83d\ude01\n\nI tried this and it's now throwing different errors \ud83d\ude44 Anyway, I think I'll be fine since make start is working. As per your recommendations, I won't be doing in-browser dev on Windows.. I tried it with both the .exe and the Windows Store app, and they both work fine with the current version (1.3.4). Feel free to leave a comment if anybody is still encountering this.. > Why not make it available in the notes and search panel itself ?\nYeah, I think that's better than in the navigation panel too. I haven't decided exactly what's best though. There are other places where it could be \ud83e\udd14. Thank you so much @roundhill for testing this! Both the padding and Empty Trash button issues should be fixed now.\n\nThe padding for the app drawer is a bit off now\n\nGood catch! Looks like this was caused back in #832, due to a change in CSS import order. Exactly the kind of problem that we\u2019ll see less of, once we fully modularize the CSS \ud83d\udcaa. > 2. Resize to the compact size.\n\n\nEnable focus mode (with the list view showing)\nThe screen goes blank:\n\n\nFixed, thanks!. > I do find it a bit odd that there is no UI element to leave focus mode\nYes, I'm starting to worry about the users who invoke the Focus Mode keyboard shortcut by accident and can't figure out how to exit. In the end we'll want a Sidebar toggle button, but in the meantime I think I'll keep the Tags button there as an emergency exit. I'll do another PR for that.. I don't have a strong opinion either way \u2014 I just though it might be better to follow our internal style guide (which says to use Log In and Sign Up) for consistency across the board, including documentation and support interactions. This is very low priority, so I will create issues on the other apps, and perhaps some first time contributors could pick them up \ud83d\ude42\nConnect with WordPress.com seems a little confusing in this particular context, so maybe not here. We could say Connect for the upload to WordPress feature.. @roundhill Ugh, can't reproduce on my end... The integrity hashes do seem to change occasionally for no reason, so I sometimes have to remove node_modules and reinstall. Does the issue persist after rm -rf node_modules/?. @thesacredpath Nice suggestion! I don't think this is currently possible on Electron, but maybe someday. It should be possible in the native macOS and iOS versions though.\nIt would be great if you could also post this feature request in the iOS repo:\nhttps://github.com/Automattic/simplenote-ios. Are these the correct artifacts for Windows?\nhttps://ci.appveyor.com/project/adlk/simplenote-electron/build/1.0.147/artifacts\nProduction tests:\n\nMac... Works as long as the app is in the Applications folder. However, there is quite a long period of no feedback during the download, which will worry the user. We should probably get in an enhancement PR with the download-progress (example) before we release this feature.\nLinux (Ubuntu Bionic)... I could not get it to trigger an update dialog.\nWindows (10)... Apps installed with both the .exe and .appx from the artifacts above did not trigger an update dialog. But more importantly, the app launches to a white screen of death \ud83d\ude31 Can you reproduce? Btw when building from source on Windows, npm run build \u2192 npx electron . works, but both npm start and npm run dev results in a white screen.. Thank you @adlk !\n\nProduction build tests\nUpdated artifacts for testing\nhttps://circleci.com/gh/Automattic/simplenote-electron/703#artifacts/containers/0\nhttps://ci.appveyor.com/project/Automattic/simplenote-electron/builds/19476778/artifacts\n\nWorks on Mac\n\nWorks on Windows, however there seems to be an escaping issue with the Update & Restart button label:\n    \n\n\nStill could not get it to trigger on Ubuntu... Can you reproduce?. @adlk I was able to confirm it working on Ubuntu! Thanks.. Closing for now. We can revisit this when it becomes possible.. > Do you think it'd be too weird to only show the icon when focus mode is enabled?\n\n\nI considered that for a while, but the thing is, that button has to always be there in the web app anyway \ud83d\ude05\nMy impression is that the clutter problem should be dealt with from the note toolbar side first. I don't have an accurate picture of usage patterns yet, but if the Revisions and Share buttons are used infrequently enough they could be moved to the Info pane. (Just a thought!)\nWe could also consider adding some hierarchy to the button designs. For example, the New Note button should be the primary call-to-action, the Markdown Preview button should be a different class of button, etc.. @roundhill \n\nOne bug is that it shows the animation on startup of the app\n\nI've resolved this by preventing the Focus Mode setting from being persisted across launches. I think this will be better UX because there are situations in which launching straight into Focus Mode would be disorienting (like when the note is empty). Also the state management will be much simpler this way.. Just to make sure, is this an account you created from a development build? We have separate databases for development and production, so an account created on one won't work on the other.. > How can I change to production databases if I use the build app( build by myself) ?\nI'm afraid we don't support that. In development builds, please use a test account with test data \ud83d\ude42. I'm not sure what that means, but if you can post an issue for that, we'll be happy to look into it!. @lwx5924 Oh, I see what you're saying. The version in the Mac App Store is a native macOS app, and the repo is https://github.com/Automattic/simplenote-macos.\nThis repo here is the multi-platform Electron app, and that is why you are seeing slightly different feature support. Sorry for the confusion. You can download production builds of this Electron app from the release page. Here's the link for the latest Electron release that runs on macOS. You will be able to use accounts in the production database, and you will get syntax highlighting.. @lwx5924 We only support using the production database in official production builds. Is there still a reason you would want to use the prod database in your own builds?. @roundhill Oh yes I forgot to mention, I've opted to deal with the selectedNoteId redundancy as a separate issue (#883), if that's ok. It's being used in several places, and I was afraid there might be ramifications that are not immediately apparent \ud83d\ude2c . I tried to crash it with some fast typing and backspacing using the Japanese Microsoft IME on Windows 7, but I couldn't get it to crash.\n@mkanenobu Can you tell me what IME you are using, just in case? Google IME, ATOK, etc.... @mkanenobu Good to hear that! Feel free to add more information if you encounter the issue again \ud83d\udc4d . I am testing Simplenote v1.1.7 on Ubuntu 18.04.1 LTS and cannot reproduce this. F11 is correctly toggling fullscreen mode for me.\nIf anyone else is experiencing this issue, please post a comment.\nAs @rakhi2104 mentioned, we are planning on disabling fullscreen mode on application launch, if that helps.\n. We added a fix (#1002) so that it never launches in Full Screen mode. This won't make it into v1.3.0, but we'll get it out soon \ud83d\udc4d . @isdanni A person mentioned that you can access the menus in Full Screen mode by using the Alt keys, like Alt+F, Alt+E, or Alt+V.. Thanks for reporting, @DanyGee !\nI'm moving this to an obscure place where we track cross-platform inconsistencies like this.. For reference: Electron docs on draggable regions. Beautiful! We'll also need to add kbd to the whitelist in sanitize-html.js, right? It won't render for me unless I do that.. Thank you! I confirmed this fix working on Windows and Linux, but strangely not on Mac. Are you able to test on Mac, @rakhi2104 ? If not, I'll look into it.\nTo test\n\nLaunch Electron app and set to Full Screen mode (View menu \u25b8 Toggle Full Screen)\nQuit app\nRelaunch app, and make sure that it is not in Full Screen mode. @rakhi2104 I finally got around to this. I tried a bunch of things and found a workaround. Closing this PR in favor of #1002. Thank you for your work on this!. Thanks, we also need to remove this unnecessary line so it compiles.. > We could maybe just change this code from returning unknown_ to spweb_?\n\nProbably not, because navigator.appVersion.indexOf('Win') would still match people using the web app on Windows. It might be easiest to set a global again like I did with window.analyticsEnabled \ud83e\udd14. Thank you for the report!\nI was able to reproduce this on the native Mac version and not on the Electron Mac version, so I'm guessing this is a report for the native one. I moved it to the other repo. Sorry for the confusion! (This seems to happen a lot, so I will improve the New Issue template to hopefully make it clearer \ud83d\ude05). Thank you for the extension suggestion!\nDue to the nature of being a cross-platform app, one thing we have to consider is whether this is also achievable on the other platform versions (iOS, Android, macOS). It seems like Markdown parity has been hard to achieve, even with the relatively standard Markdown features we currently have. . Sorry, I'm going to put this on hold and try to refactor the menu stuff first \ud83d\ude47\ud83c\udffb\u200d\u2640\ufe0f The platform-specific logic is fragile and there are pre-existing mistakes still remaining.. Thank you for your work on this. I refactored the menu code (#1004) so it will be easier to make changes like this in the future \ud83d\ude4f. I believe this is intentional, so people who don't care about titles don't have to think about it.\nFor example, Apple Notes (another simple note-taking app) works this way, while Evernote (a more feature-rich app) has a dedicated title field. The downside of a dedicated title field is that users who just want to quickly jot down stuff get a bunch of notes with a title that says \"Untitled\".\nI'm open to design enhancement suggestions in terms of usability though. For instance, one could say that the first line of a note in the editor should not automatically have a larger font-size.. Thanks!\nClosing as this is a cross-platform feature request, and is posted here: https://github.com/Automattic/Simplenote-United/issues/6\nFYI, check lists do currently render in Simplenote Electron, however you cannot check/uncheck them from the Markdown Preview yet. You are probably using the native Mac verison. The core app in Simplenote Electron will hopefully soon be available as the official web app. (Sorry for the confusion!). Thank you for this report!\nThe sentence \u201cYou can also add the email as a tag.\u201d should be removed from the Share dialog.. Closing this for now, since we fixed the description, but there doesn't seem to be a way to set the icon, capitalized app name, or license \ud83d\ude2c (As mentioned in #1030). Thank you for this report!\nWould you like to post this in the simplenote-android repo?. Sorry I didn't catch this on the first pass, but this CoreImporter is actually not dealing with JSON at all (it just takes JavaScript objects as input), so we should probably remove mentions of JSON in the readme.\n(So why is the import exportedJSON from './notes.json' working? TIL: webpack >= 2.0.0 has a json-loader enabled by default that parses the JSON string from a file into a JS object automatically \ud83d\ude2e)\nTo allow users to import their JSON files, we're going to need a separate SimplenoteImporter to read from Files and pass the JSON.parsed result to the CoreImporter. (If we want to get the Evernote importer out the door, I guess we can add it later though? Doesn't seem like a must-have feature for the first iteration, and it will spread the surface area for testing.). @roundhill I added some fixes to the tests and readme so this can be merged. Anything left on your side?. @roorco Thanks for the report. Your issue is probably https://github.com/Automattic/simplenote-electron/issues/734#issuecomment-418316299 . We will be investigating this \ud83d\udc4d . I can't reproduce this either (Ubuntu 18.04, Simplenote v1.2.1 from downloaded deb package). Is ctrl-x / ctrl-v working in your other apps?\nIf this issue persists for you, we would need more information to debug it. For example, does it always fail or just under certain conditions?. You will need to ask whoever is in charge of the firewall to whitelist these domains:\n\nhttps://api.simperium.com\nhttps://auth.simperium.com\n\nRelated: #789 . @gubrist Just to make sure that it isn't a different bug, can you check if all the notes reappear when you add a new note?. Thanks for the report! I'm afraid this is an issue between Linux Mint and Electron itself, since we aren't able to control the menu bar color, as far as I know. (The colors are still matching in Ubuntu, by the way.). Thank you so much for working on this \ud83d\ude02\nI have a few suggestions for the integration:\n\nHave the importer constructors take a single buckets object with named props { noteBucket: Bucket, tagBucket: Bucket } so we never mess up the arg order.\nMake all importers expose their default import method as  import(), so consumers don\u2019t have to keep track of the specific method names. That way, instead of knowing to do .importTextFiles() or .importEvernotes(), we can just call the same method name: whateverImporter.import().\nHave the import() method take an options object as a second argument. To start, I think the markdown option is a must. As a future enhancement, we could allow things like \u201cadd arbitrary tag\u201d.. As for error handling, I think we might need to differentiate between the events for \u201cthere was an error, we couldn\u2019t complete the import and have to halt immediately\u201d and \u201cthis particular note threw an error, but we can continue with the import\u201d.\n\nIt looks like the errors currently emitted in the two importers are all of the former kind. Shall I just assume for this iteration that I won\u2019t receive errors of the latter kind?. > I can add some note-level errors, should I send the event name as error-note or something?\nSince I won't need note-level errors in real time, it might be cleaner to have the complete event send an optional error object (or array?) containing whatever note-level errors that occured.. > This looks pretty weird to me due to import being so common in js :) How about the standard method name is importNotes?\nHaha, true! Good idea \ud83d\udc4d . Thanks for bringing this up! I moved this to the iOS repo since we already have character counts on the desktop apps.. We're working on a fix (#1029) to delete the AppData so an uninstall is actually a clean uninstall.\nThe runaway characters may be related to #642.. > We're working on a fix (#1029) to delete the AppData so an uninstall is actually a clean uninstall.\nThis fix was released in v1.3.2 \ud83c\udf89 . As a multilingual user myself, I'm annoyed by apps that trap you into a single global language (which nowadays is often the OS language!).\nI think both a default language setting and per-note setting are technically feasible, so the problem is mostly a design one (= where to put the settings so we don't complicate things).\nI guess we could put the global language setting as a submenu of Edit \u25b8 Check Spelling, where the options would be like:\nOff\n\u2014\u2014\nAuto\nLanguage 1\nLanguage 2\nEtc.\nFor per-note settings, @PhiLhoSoft 's idea to use tags is interesting. Maybe it could be like a hidden, advanced feature, where the syntax (e.g. spell:en-us) is documented on the help page.\nBy the way, our spell checker is supposedly capable of auto-detection. But I think we might be overriding that by explicitly passing the navigator.language. Could some of you try commenting out that line and see if the auto-detection seems usable?. Thanks for the report. Does this still happen for you with the latest version?. This is likely related to electron-spellchecker. Since the module must be rebuilt natively, there is a possibility we are not doing this correctly for a particular target.\nIt might help to know whether the people encountering this issue are on a 32-bit system...?. I got a machine that reproduces this issue \ud83d\udc4d. Seems like this is only happening on the Windows Store version. While we look into this, a temporary workaround would be to use the non-Windows Store version.\nLet me know if this is not the case.. This should now be working in the new v1.3.0 available in the Windows Store. Let us know if you still see issues.. @roundhill Thanks for the great suggestions!\nFixed\n\n[x] Menu labels: Changed to \"Import Notes\u2026\" and \"Export Notes\u2026\"\n\n[x] Dropzone errors: I'm not too keen on introducing red here because it seems like a serious mistake happened. How about something like this?\n    \n\n\n[x] Progress bar: Make sure that it is always maxed out when the import is completed. > when you tab into the note editor and it locks you in to tabbing the text inside of it, there's no way to get out of that as far as I can see.\n\n\nYes, that's something we should address! Thanks for bringing it up. (Issue posted at #970). Fixed by #1078 . Good suggestion! This should probably be a part of #624.. Thank you for contributing @vadimnicolai !\nCould we make this so the Back button is aligned to the left?\nLike this:\n\nInstead of this:\n\n. Thanks. We actually have this, but it's undocumented at the moment. It's Ctrl+Shift+P. I'm hoping to make all the shortcuts discoverable in an in-app shortcut cheat sheet, and perhaps also tooltips. (Related: #700). @triangulum I agree 100%. We're tracking this enhancement at #331 . A shortcut hint will be added as a tooltip in #1214.. Thanks! But I'm not exactly sure what this PR is fixing/improving. The large line spacing issue isn't fixed, and I don't see why we need to add all these styles. Could you maybe clarify your intent?. Ok, thanks for clarifying! However, I was thinking the line spacing issue brought up in #540 is caused by the white-space: pre-line, and it should probably be fixed by removing that one rule. Did you try that?. This seems to be a bug in the Markdown module we are using. I posted a bug report here: https://github.com/showdownjs/showdown/issues/632. Closing this in favor of #780, since I was able to confirm from the user's video that they were indeed typing after a Tab character.. Thanks for the report! I'm going to close this and move it to the web app repo (which is currently private) \ud83d\udc4d . Will close #593 . We could probably add an uninstall script (afterRemove in the build options) to remove the config files in user home. I found an example here.. Thanks for the report! I'm looking into this.\nRelated: #679 #794 #734 . @justinkterry We were able to fix this in #1022. It won't make it into v1.3.0, but we'll release it soon \ud83d\udc4d. Thanks for the request! The current web app repo is private, but we are actually in the process of replacing that web app with the core React app used in this Electron version. So we'll have the same Dark Mode available on the web app when that happens \ud83d\udc4d. @jb510 Yes \ud83c\udf89 The new webapp with Dark Mode (basically the same as the Electron app) is now live at https://app.simplenote.com/new\nThe old webapp will be deprecated soon.. > Will it be open sourced?\nYes, it's basically just the pre-built static files from the lib in this repo. These files are deployed from the webapp branch. (Note: We're not pushing master commits automatically yet, so at any given moment the webapp might be a little behind master.). Thank you for the feature request! I'm closing this as a duplicate of #368 \ud83d\udc4d . @Donboscow Unfortunately this is not on our roadmap at the moment, so we don't have an ETA. I think it's a great idea though, and according to our internal feature request log it has been requested several times over the years.. > I'm not sure I'm testing this correctly, but I'm running make dev-server NODE_ENV=production, and I see that app.js is 632kb in the dist folder. Is there a way to test it w/ gzip as well?\nOh, I should've put that in the PR description too! I tried a few bundle analyzers and I'm enjoying webpack-bundle-analyzer. This is how I've been doing it:\n\nGenerate stats data with NODE_ENV=production npx webpack --profile --json > dist/stats.json\nSee a visualization of the stats with webpack-bundle-analyzer --default-sizes 'gzip' dist/stats.json. @eduardozulian This has been fixed, and will be released soon in v1.3.4!\n\nAs a side note,\n\nIf we could hotkey switch focus on the tags and text like on the mac app this could be a workaround?\n\nWe actually do have a shortcut Ctrl+T for that in this app as well, which is currently undocumented \ud83d\ude05 I'm hoping we can make these shortcuts more discoverable (#700).. Thank you for the feature request! I'm afraid we are not considering folder support at this time (see also #288 #432). However, we are looking into ways to make tags better (sorting, searching, etc.) so it can cover more organizational needs without adding a layer of complexity that a folder structure would bring.. Yes, this seems to be the standard behavior in Showdown (which is the converter we are using), and also in this GitHub textarea. An empty line with just two spaces will not convert into a break tag.\nThanks @subi54 for suggesting some alternatives.. @tonytettinger Sorry, we're still tweaking the AppVeyor settings for forked PRs and the fail is not your fault! No worries \ud83d\udc4d  . Closing in favor of #433 . > When this is merged it will close issue #1006 right?\nHaven't tested yet, but probably not, since deleteAppDataOnUninstall is a setting for the Windows build.. There have been big changes to the updater, so I'm going to close this for now.\nThis was likely caused by the app being installed in different directories. Uninstalling the app and reinstalling should fix it.\nWe'll see if we still get reports of this with v1.3.0 and higher.. Thanks for looking into this!\n\nyou already have to recreate the menus in full JS to port the electron app to your webapp\n\nIn fact no, we're not going to be recreating the menus for the webapp. For menu items that aren't already part of the settings dialog or the browser's menu, we'll be adding to the settings dialog or elsewhere in the UI.\n\nthe menu bars color is taken from the system theme\n\nGiven this limitation, is there anything you recommend we do about this?. If anything, we're leaning towards making the menu hideable. This Dark Mode problem is another reason we should consider it, along with enlarging the workspace (#1048). The idea is to have all (or almost all) app features available in the main app UI, without relying on the menu bar.\nI'm going to close this in favor of #293, since there is nothing we can do about the menu bar color.. We plan on having dedicated typography settings for the editor, so the editor font size can be set independently (#274).. Thanks for the request! Closing in favor of #293 . I confirmed this as occuring in v1.2.1, but was fixed by #884. So this should be fixed in v1.3.0 and higher \ud83d\udc4d . No, not at this time. See also: https://github.com/Automattic/simplenote-electron/issues/1019#issuecomment-439828605. Thanks for the request! Closing as a duplicate of #760.. Thanks for the request! Closing in favor of #293 . I like the idea, and I've noticed that the 1Password app does it this way. Unfortunately, it doesn't seem like this can be easily achieved in Electron.\nAuto-hiding the menu bar (#293) has also been a requested feature. We are in the process of adapting the core React app here to work as a normal (non-Electron) web app. This involves moving some of the currently menu-bar-only features (e.g. import/export) into the main app UI. Once this is completed, we may start to consider auto-hiding the menu bar without worrying too much about feature discoverability.. Closing in favor of #293 . Thanks! I posted the \"search\" part as a separate issue (#1143), since this is handled differently from the \"sort\" part.. Hi there! I don't think there's anything we can do about it on our side (it's either a compatibility issue involving Electron or Snapcrafters). Feel free to reopen if you find out otherwise.. Thanks for the report. Could you see if the new v1.3.0 is working for you?. No worries, v1.3.0 was released just around the time you posted this issue \ud83d\ude42. Thanks for testing! We'll be releasing this soon.. > Should we actually display something in the UI? A dev mode ribbon or something?\n\nMaybe something subtle in the bottom corner?. Thanks for the report!\nI think this is expected behavior, because we are stripping Markdown tags in the note list excerpts for better readability. The sequence */* is going to be interpreted as <em>/</em>, not as a literal */*. You can either turn off Markdown for that note, or use backticks like you did for this textarea \ud83d\ude42. > The problem is not seen in the Linux version of Simplenote\nHmm, that's strange. v1.3.0 on Linux is giving me the exact same behavior.. Yes, that sounds correct. We added the Markdown-stripping (#996) in v1.3.0.. > Dark theme \u2014 The grays used for .dialog-tabs-button and .settings-group p text need to be lightened. (Currently at contrast ratio 2.95)\nI think we can merge once this is addressed \u261d\ufe0f. Thanks for posting the request! This is a highly requested feature, and while we have no immediate timeline, it is something we are considering.\nRelated: #570 . There has been some recent changes in how we handle updates.\nCould you try:\n\nUninstall v1.1.7\nUninstall v1.3.2\nInstall the latest release\n\nand see if the problem persists?. @KshDi13 \n\nthe new updated 1.3.x version (which works but slow).\n\nYou might be experiencing #1057. This will be fixed by #1073 (will be released soon as v1.3.4).. How is the change history when you open that note on https://app.simplenote.com/ ?. That seems to be an error that occurs when the 32/64-bit architecture is mismatched.\nSince you seem to be on a 64-bit machine, can you verify that you are using a 64-bit version of Simplenote? From the latest packages here, the -amd64.deb one is probably for you. (If not, try -x86_64.rpm)\n\nI was no longer given the direct download, and I am now no longer sure which binary I should be running.\n\nWe moved away from direct downloads for Linux users, since they are on all sorts of systems and therefore want different packages. There is no way to reliably detect which package the user needs, so we are asking them to pick their own. The -amd64.deb package should work for most users.. > Perhaps the solution to this is to link the direct download to be relative to the binary that was initially downloaded?\nYes, it would be nice if we could do that!. I tried this with my Windows 10 machine and couldn't reproduce. I'm inclined to think this is a display setup problem, or maybe a bug in Electron itself.\nTo isolate the cause, you could try to see what happens with other Electron apps. Let us know if it only happens with Simplenote.. > I wonder how important all of this caching is \ud83e\udd14. I know we put it in for performance reasons previously, though.\nI'll learn how to better profile this stuff!. Thanks for the report! There seems to be some issues with cursor positioning. Closing in favor of #36. @roundhill Rebased onto current master so you can test it with the polyfill \ud83d\udc4d . @eurello Can they try this on their Windows 7 device?\n\nExport their notes, just to make sure they aren't lost.\nUninstall Simplenote and reinstall.\nLog in again.. Related: #571 . Thanks for the report! I'll be looking into this.\n\nClosing in favor of #825 . > After maybe 10 seconds, it did download the update though \ud83e\udd14 Let me know if you can reproduce that.\nThis may happen if the GitHub API call flaked out on the user-initiated check, but succeeded on the check that happens automatically on application launch. In this case, you would not have seen a download progress window \u2014 just a dialog that says an update is ready to be installed.. > is there a way to update the vip go code with a build of this branch?\nYou're free to play around with the webapp branch, I've been treating it as an experimental thing...\nBut once we launch, I guess we do need a staging site so we can test out changes like these.. > I'm slightly concerned that a user still might get to the point where it tries to load the component and the user sees only a blank screen.\nIt works for me too \ud83d\udea2\nIf you're really worried we can always do something like a \"If this doesn't redirect, click this link\" fallback, but since we're going to beta test this thoroughly I'd rather find out about auth state bugs if there are any!. Does the 64-bit version work?\nI believe Lenovo Yoga 2 is 64-bit, and it might take extra configuration for 32-bit apps to run on it.. > It would be great if Simplenote supports vim mode.\nI agree! But it is unlikely that we will be supporting this feature.\nHowever, I've been told that this exists: https://github.com/insanum/sncli. Hi there! Our support team may be able to assist you with this.\nhttps://simplenote.com/contact-us/. > I'm thinking we might want to make sure the localStorage data is deleted when the user signs out or becomes unauthorized?\nI was going to add logic for this, but turns out we don't need any because:\n\nThe local queues are persisted when the user closes/navigates away, so only empty local queues will be persisted if a user is logged out.\nThe local queue data is removed from localStorage immediately after it's been read into memory.. Inspecting the alignment graphically, it doesn't look like anything is really off center, except for the New Note icon which seems to be optically adjusted to account for the protruding plus sign. I played around with it a bit, but didn't really find a positioning that looked better overall. Let me know if you have an adjustment that looks better to your eye! \ud83d\ude42. Works for me! Thank you. Related: #747. Related: #959 . Importers should probably use the Redux action createTag instead of calling tagBucket.update() directly. createTag should be fixed to protect against collisions (#1124).. Once this is fixed, see #1119. @roundhill Thanks for the catch!\n\nI confirmed this is an Electron problem that will fix itself in >3.0.0. I will keep the issue open until then.. Good news, this can currently be done with two tildes ~~text~~, as specified in the GitHub Flavored Markdown spec \ud83d\udc4d . This is likely caused by a suitable bold font not being available on the user's machine.\nIf they visit this page on their machine in Google Chrome, we can check to see if there's anything we can do about it on our end: https://codepen.io/mirka/pen/BvVPbY\nWe want to know whether \"Test A\" and/or \"Test B\" is rendering the bold parts.. My guess is that they have the Segoe font installed on their machine, but don\u2019t have the Semibold weight. So they could either install the Semibold, or disable the Segoe font altogether. (If they disable Segoe, it should fall back to another font.). > The cursor jumps next to the checkbox when clicked, would it be possible to preserve the current cursor position?\nI couldn\u2019t think of a good way to do this, since the caret position is changing as the result of the click in the contenteditable and not because of any text manipulation we\u2019re doing. Intercepting click events (preventDefault and stopPropagation) on the checkbox span (at the DOM level, before React) didn\u2019t prevent the caret movement either.\nSo instead I added a tabindex to the checkbox span to make it a focusable element https://github.com/Automattic/simplenote-electron/pull/1145/commits/fd660e987d98db81ee9fe50bd39d02795dd74c82. This will make the caret go away instead of preserving the position, but HTML-wise this is probably more correct. Do you think that\u2019s ok?\n\n. (Side note: Looks like the border management in the CSS could use some refactoring! I posted a separate issue for that \u2014 feel free to tackle \ud83d\ude42 #1150 ). AFAIK it hasn't been considered yet. But I feel like we should probably be headed in that direction, regardless of whether we actually abandon Electron \u2014 especially now that this is going to be our official web app as well. Once we get to a point where the app acts like a PWA, we may start to consider moving away from Electron.\nRelated: https://medium.com/dailyjs/goodbye-electron-hello-desktop-pwas-f316b8f39882. Thanks for all the reviews @roundhill !\n\nI noticed that you can't copy text in the markdown preview. Should we add support for that?\n\nI guess you're referring to this thing? We're going to need to update Electron to fix that, so it probably won't make it into our next release. Hopefully the next one, though.. @roundhill Did we change anything on the App Engine side that could be causing this?. > I noticed that if the title of the note has a checklist item, checklist items underneath appear a bit horizontally squashed:\nThat is super weird! Great catch. I posted an issue (#1161).\n. Thanks for the request! Let's consolidate this to #324.. > What OS? I looked into this and it displays properly in linux mint.\nStrange, I can't get it to reproduce either (Mac Electron).\n\n@roundhill Did this go away or is it only in a certain OS/browser?. I don't see it in current Mac Chrome (71.0.3578.98) either, so I'm wondering if there are other repro conditions.. @JMbassignana Thanks for the report! Did you mean to post this as an issue?. Confirmed. This was because the Markdown renderer in Simplenote Electron was configured to GitHub-Flavored Markdown, which renders the lines in style 1. We'll be changing this to use style 2 to maintain compatibility with the other Simplenote apps, as well as with \"standard\" Markdown.. > I noticed that an extra space is hanging around if you press enter on an empty checklist item and it gets removed\nGreat catch. I've determined the cause and will fix in a separate PR (#1168). Thanks!. @Pand9 Thanks for the report!\nToggle Markdown Preview should be working as Ctrl+Shift+P (or Cmd+Shift+P in Mac Electron). If this is not working for you, can you check that Markdown is enabled for your note, and that the Preview button works when you click it?\n\n. @SonGokussj4 I agree, I was thinking of adding mouse-over hints too. I'm going to add that to the todo list, and close this in favor of #700.. > Pretty sure there's a bug with this where characters get duplicated, I can't reproduce this in master\nGaaah. I can reproduce it in master. It just manifests a little differently \u2014 no immediate input duplication, but the internal focus state and visible caret are definitely out of sync so it glitches once you hit backspace. I can confirm that this issue is also fixed by updating to Electron >3.0.0.\nDespite this, I think we should merge in this PR for v1.4.0 as a band-aid while we work to get the Electron update out ASAP. Two reasons:\n\nMost users who are using tabs are presumably typing a nested list item, which will trigger the crash rather than the glitch.\nGlitches are at least better than crashes \ud83d\ude2c\n\nThoughts?. The duplication glitch https://github.com/Automattic/simplenote-electron/pull/1171#issuecomment-456982555 is now fixed in v1.5.0.. > One weird thing happened which I don't think is related to this PR. I got the app into a state where the Focus Mode button wasn't working \ud83e\udd37\u200d\u2642\ufe0f\nThanks, I'll keep an eye out for that!. Thank you for the kind words @crankygeologist!\nPinging the other folks who've worked on it: @dmsnell @ianmorti \ud83d\ude42 . Thanks for the report!\nI'm having trouble reproducing it though. Maybe I'm not doing it fast enough.\nDoes this happen with Simplenote 1.5.0 (we updated the Electron version we're using in it)? Also, do you know if this happens with other Electron-based apps?. @lizardll Great, thank you. I was able to confirm this in Japanese and Polish as well.\nMy first guess is that it has something to do with electron-spellchecker.. gconf2 is set as a dependency and we do test on Ubuntu 18.\nAs far as I know, dpkg does not install dependencies for you. You could instead do something like apt-get -f install. Or gdebi.\nIf dpkg -i had been working for you in the previous version, it's probably because you already had gconf2 installed.\n(I'm not a Linux expert, so correct me if I'm mistaken). > dpkg -i had been working with the previous version without gconf2 installed is the thing.\nAre you saying that this works?\nsudo dpkg -r gconf2\nsudo dpkg -i Simplenote-linux-1.3.0-amd64.deb\nBecause it doesn't work for me, for example with Simplenote v1.3.0. Which is expected, because dpkg literally cannot fetch dependencies by itself. That's what APT is for.\nI'm going to close this particular issue since it is expected behavior with dpkg.. Thanks, this is indeed a popular feature request, and is something we're considering in the coming months. Closing in favor of #750.. I agree that it would be a good idea to accept files with extension .md in addition to .txt in our plain text importer. Maybe we could also check the \"Enable Markdown on all notes\" option by default when there is a .md file in the batch.\nIn the meantime, note that there is nothing inherently special about .md files \u2014 it's just a plain text file, that may or may not contain Markdown syntax. If you have a bunch of .md files, you can bulk rename them to have a .txt extension and import it with the \"Enable Markdown on all notes\" option checked.. > I am just interested in one thing: how can one bulk rename files (on the Mac or other platforms)?\nIn recent versions of macOS, there is a handy bulk renaming feature in the context menu. Before that, I used to use bulk renaming apps like Name Mangler (which are probably still better if you have more advanced needs).. Thank you so much for looking into this! I agree with your assessment that we have a race condition when a user is typing during the short amount of time between the debounced update being fired and the updated note content coming back as a prop. That short window is < 1 ms when I time it, but like you said, there are many opportunities for it to occur.\nBut to back up a little, this editor state re-creation code is only intended for when the selected note receives a remote change from the server, and not for local changes caused by typing:\nhttps://github.com/Automattic/simplenote-electron/blob/792c900f8494f2ab286b798243b33ec8cb5c2dd4/lib/note-content-editor.jsx#L259-L266\nThe reason that local changes weren't being propagated back as the content prop until now is because that itself was a bug, which I fixed in #1130 \ud83d\ude2d\nIdeally we shouldn't be doing createNewEditorState() at all, much less the focus manipulation, for local changes caused by typing. It's unnecessary and also resets the undo stack.\nYour cursor location strategy is relevant to #36 though. The dev team back then seemed to be planning on calculating the new location from the update patch coming in from the server, but I'm not immediately sure if that's even possible in our current DraftJS setup. In that case, I think your strategy here could be an alternative.\nLet me put this on hold while I see if there's a good way to get rid of the root cause \ud83d\ude4f. Thanks again for your great work on this @qualitymanifest! We'll get the fix out asap.. Thank you @roundhill and @qualitymanifest for testing and confirming \ud83d\ude4f . Agreed! Thanks for the report. Closing in favor of #331.. Closing for now, but let us know if you still encounter this in 1.4.1 \ud83d\ude42 . This is caused by the fact that technically, the caret cannot be positioned at offset 0 when a checkbox is at the beginning of the line. A fix will likely require a listener on Shift+DownArrow that calculates an adjusted caret position.\nFor keyboard users, a temporary workaround is to use Opt+Shift+RightArrow instead.. @Donboscow \nYes, your points are valid and that is something we considered as well. But for our first iteration here, the intent was more to provide a way to self-diagnose when something is going wrong, rather than having an indicator animating on every successful server request. Having a constantly visible, animating sync indicator makes you more aware of the syncing, which itself could be considered a distraction for some people.\nThere are definitely tradeoffs for each approach (visible/hidden, static/animating, etc). But nothing is set in stone and I appreciate your input \ud83d\udc4d. @Naerriel This particular fix is only for the Note List, and is released in the current Simplenote 1.5.0. Your screenshot looks like it has a similar issue, but I can't reproduce it on my machine \ud83e\udd14 Does it still happen in 1.5.0?. @4Lisandr No, I don't think we will be supporting custom color schemes.. Sorry for the lack of awareness about this! I read up on it and it seems like we should be steering clear of Ctrl+Alt shortcuts in general.\nWe'll change this one to Ctrl+Shift+C.. Bug confirmed in 1.4.1, and also confirmed fixed in #1172. We'll be releasing this fix in the next few weeks.\nRelated: #1171. Thanks for the PR!\nSince we can't just make the menu bar hidden by default (it's completely undiscoverable), we are going to need a few more things:\n\nA toggle option in the Display Settings (like in Atom, but it should not be shown when on Mac or when not running in Electron)\n~The same option in the View menu (also hidden when on Mac)~ Never mind, this one will probably cause usability issues.\nWhen auto-hide is enabled, the Settings button and footer items in the Navigation Bar should be visible\n\nWould you like to tackle these items, or would you prefer someone to take over?. Closing in favor of #1215.. Good question! We have separate databases for development and production, and we allow use of the production database only in official production builds.. I'm unable to reproduce this. Can you give us some more details about what happens? Does it crash with an error message? Does the app launch but only shows a blank screen?. @roundhill Agreed \ud83d\udcaf Thanks!. This is fixed in 1.5.0 \ud83d\udc4d \nRelated: #1204. We actually do have a shortcut for this: Ctrl+Shift+P\nHowever, this isn't documented anywhere yet and is kind of impossible to discover (related: #700). We have a tooltip enhancement in the pipeline that should make it more discoverable #1214.. This feature is implemented in the Electron app and the new web app (https://app.simplenote.com/new). The old web app will be retired soon.. Great question.\nRight now, our new webapp (https://app.simplenote.com/new) is roughly around 1.5.0. In the commit messages for webapp, I've been leaving the hashes of the corresponding commit on master so we don't lose track.\nThere are a few reasons why this process is so crude at the moment:\n\nI don't think this codebase has sufficient test coverage to do continuous deployment.\nGiven that we need to rely on some manual testing, we should at least set up a staging environment and a way to manually trigger an automated deployment via CircleCI. However this wasn't an absolute priority, so we haven't had the time to do it yet.\n\nThanks for offering to help though. We'll try to keep it as up-to-date as possible.. Yes, it's hard to get a reproducible case for sync issues. If you do encounter a similar problem, our support team can help you troubleshoot \ud83d\udc4d https://simplenote.com/contact-us/. Yes, it looks a little redundant when passing flags like this but is necessary with npm run scripts. Thanks for the review!. Thanks for bringing this up. I was a little unclear about the current package-lock behavior, but after reading up about it I agree that we should pin exact versions here. Will fix.. Another link that helped me understand the confusion around this. The behavior around npm install and package-lock changed between minor versions of npm5 \ud83d\ude13. Yeah, it would be difficult... Maybe drop access key support completely, or manually add them to just the top-level menu labels.. Yes, I was wondering about that. I kind of assumed that was where we were going when it changed from a single \u201cFull Width\u201d toggle in your first iteration to a multiple choice. I do anticipate some kind of View Options dialog in the future \ud83d\ude42\n\n. TBH I'm kind of torn on this though. With lockfiles in place, there's no real reason to worry about these unless we decide to adopt an automated dependency updating system like Renovate. The package-lock will ensure that all versions stay the same until explicitly changed... It seems like an unnecessary fight against the default npm install -D behavior at this point.\nI guess some people like to refer to the package.json for exact versions rather than doing npm list <package> ?. I think we can drop the addModified function and just use the lastModified property directly:\n.forEach(({ content, fileName, lastModified }) => {\n      zip.file(`${fileName}.txt`, content, { date: new Date(lastModified) });. Also, let's add modification timestamps to the files for trashedNotes as well.. Yeah, this is some seriously terse magic! (By Dennis, I think?)\nAfter running each dialog through makeDialog, it then runs the resulting collection through the other arg functions right to left \u2014 so that's concat and then compact (remove falsey elements).\nI'm not immediately sure why the concat and compact is necessary here... the intention might have been to flatten the array elements with concat and then remove the false elements where dialog.modal === false, but AFAICT the lodash concat doesn't really do anything when the args is a single array like in this case. It still seemingly works when I remove both concat and compact.. Mmm chocolate \ud83d\ude0b. Worked great \ud83d\udc4d . The & is for the access key feature on Windows, and they should be set on unique characters for each menu level. (Sorry for the lack of documentation there!) I think we can go with Zoom &Out here.. Good point. There are a lot of arguments here, so I changed it into an object to make it clearer all around. 95f94cd. I made a few tweaks here to keep it generic and not overwrite things.. I added a few steps in here to make sure a preferences-key object is created if it doesn't exist yet.. Good point. Thanks!. Added a step to cast it to a boolean \ud83d\udc4d . I wondered if we could do the HTML to MD conversion with showdown (the MD converter we're already using), but it looks like the feature hasn't shipped yet \ud83e\udd37\u200d\u2640\ufe0f We'll replace it when it's released.. Yes, that's probably clearer... Thanks!. Thanks! I'm not yet familiar with all the lodash functions, so please keep these suggestions coming \ud83d\ude42. Are you adding this file temporarily for a build test?. Oh, I didn't realize this was already present in the showdown output and that it was only a matter of passing it through! \ud83d\ude02 . Wouldn't it be cleaner to do this with just CSS on our side? I was thinking we could apply list-style: none to all li elements inside .note-detail-markdown (in lib/note-detail/style.scss).. You're absolutely right, I forgot about that! Thanks \ud83d\udc4d. suggestion\n  if (!notes.activeNotes || !notes.trashedNotes) {\nI\u2019m wondering if this would be more readable and functionally equivalent in this case.. I think .map(importNote) would be equivalent here.. The deleted prop isn\u2019t set on trashed notes in the export json, so nothing is being set to true here. We will have to explicitly set this prop to true with each note in trashedNotes.. Maybe the \u201cExample JSON\u201d should be \u201cExample JSON with allowed properties\u201d, and then remove the id prop?. Out of curiosity, are these bind statements intended to do anything more than a simple expect(() => importNotes(null))? It had me wondering why a bind was necessary here.. I'm guessing that the deleted prop was not in the export because having that and also keeping a trashedNotes array would be redundant. We could flatten the export structure, but that would be disruptive for users who have export files with the old structure.\nExplicitly setting back the deleted prop in the importer side should be ok, I think.. Ok, if it's just to avoid the immediate call, then simply wrapping the call in a function (e.g. expect(() => importNotes(null)) ) should be sufficient.. I found a copy-paste artifact \ud83d\ude42\n(Btw it may be helpful to put the possible choices in the comments here). My unconscious mind was wishing for 'Mac' to join my list of valid platforms \ud83d\ude01. Thank you! (I was thinking of updating our eslint/prettier rules... They are really not in line with the Calypso guidelines). Brain fart!! \ud83d\ude48 Thank you \ud83d\ude4f\ud83d\ude4f\ud83d\ude4f. Great idea!. suggestion\n      this.emit('status', 'error', 'No text files to import.');. Could we emit a 'complete' status event at the end of this, too?. I realized we're going to need to do some conditional loading here so it doesn't break in browsers (or jest).\n\u2193 Something like we're doing in app.jsx\n```\nlet fs = null;\nconst foundElectron = has(window, 'process.type');\nif (foundElectron) {\n  fs = non_webpack_require('fs'); // eslint-disable-line no-undef\n}\n```. Btw this is exactly where Promises come in handy \u2728\nSimplified example:\n```javascript\nconst importTextFile = file => {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = event => {\n  // import note here...\n\n  this.emit('status', 'progress', importedNoteCount);\n  resolve();\n};\n\nfileReader.readAsText(file);\n\n});\n};\nPromise.all(filesArray.map(importTextFile))\n  .then(() => {\n    this.emit('status', 'complete', importedNoteCount);\n  });\n```\n(Not a blocker, the lastFileName strategy is probably good enough and we can promisify it later!). Hmm, I thought about adding a Back button in the upper left corner, but I dropped it for this iteration since it would complicate the state management.\nMy hunch is that most people don't do multiple imports in succession, but I guess we'll see in the usage data?. Ah, thank you! It was getting a little out of hand \ud83d\ude05 The other answer with the ~/ style plugin looks really cool, too.. This is super useful! I'm going to take note of this as well.. suggestion\n    \"changelogUrl\": \"https://github.com/Automattic/simplenote-electron/blob/master/CHANGELOG.md\",\nJust a small tweak to the file name casing.. Today I tested with export files of varying sizes (80KB \u2013 4MB). While large files did not choke the app in terms of memory, it did degrade the experience in non-trivial ways:\n\nThere is considerable lag between the point when all notes have been added to the noteBucket, and the point when the notes appear (all at once) in the Note List.\nClicking on notes in the Note List is unresponsive for a while. The onClick is firing, but the redux dispatch is being deferred until a certain point... I'm not immediately sure what is causing this.\nIt takes quite a while for all the notes to be synced over to the server, and it is almost impossible to tell when it has finished. The only way to tell is to try clicking the Log Out button and see if it throws an unsynced notes warning.\nIf there are lots of notes AND lots of tags, the tags take a long time to show up in the tag drawer.\n\nWith these constraints, I felt like a 500-note (~400KB) export file was as far as I wanted to go... \ud83d\ude35 And since these issues are occurring after the CoreImporter is done, I'm guessing the other importers will encounter them too.\nI'll see if there are some easy things we can do to address at least 1 and 2.. Good idea!. ^ Addressed in #986 #987 #988 . What do you think about setting the stripListLeaders option to false?\n\nIt might actually be confusing if we strip them out.. I think this removes the need for the calls to loadNotes and loadTags in the componentDidMount. So we should be able to remove lines 171\u2013172:\nthis.onNotesIndex();\nthis.onTagsIndex();. By the way do you know if this cookie is only here for legacy reasons? (Can we drop it...?). It looks like we could probably avoid maintaining this token variable at file scope if we directly used localStorage.access_token as the single source of truth for our token.. You're right!. Oh ok, thanks for clarifying \ud83d\udc4d. Yeah, sorry this PR is a bit of a mess \ud83d\ude05 But the date parsing interface changed as a result of replacing moment.js with date-fns, and I needed to make sure that it was doing as I intended.. Is it possible to make the sorting case insensitive? The sort order was like CSS, SEO, printing and it confused me for a bit.. Let's also add a propType check for sortTagsAlpha.. @roundhill Should we just straight up throw an error and crash the app if shouldWarn is true?. #899199 against a white background wasn't AA-compliant to begin with, so we can't make it even lighter in the Light theme.\nI did a quick contrast check the other day, and to meet AA it looks like we won't be able to share the same blue and gray values across both Light/Dark themes.. Dark theme \u2014 The grays used for .dialog-tabs-button and .settings-group p text need to be lightened. (Currently at contrast ratio 2.95)\nLight theme \u2014 I'm not sure where you got #808080 as AA-compliant for normal text against #FFF, since it is at contrast ratio 3.95. But I'm ok with this value for this PR, since it isn't worse than the current state and we need to make other tweaks to the Light theme colors anyway \ud83d\udc4d . Good catch, thanks!. Sorry, this part is kind of unrelated. Just snuck it in because I noticed it was an unused class.. Good question! It's a workaround for a Safari quirk. I added an inline comment.. It'll also be better for when we em/rem-ify more font-size values for accessibility!. Does this /new mean anything? It's redirecting to /signin for me.. \ud83d\udcaf . Oh ok, makes sense.. Interesting! It guess it's ok for Cocoa apps because macOS has an \"Increase contrast\" option in Accessibility settings...?. Yes, I have trouble imagining a bucket where I wouldn't want offline changes to be synced, so I made this the default behavior for all buckets.. True, the CSS is a bit messy! I refactored the TabPanels component so the CSS isn't all over the place.. Maybe I'm stuffy and overprotective of the Simplenote\u00ae brand, but:\n\nNEVER modify a trademark by changing it to the plural form.\n\nhttp://www.inta.org/trademarkbasics/factsheets/pages/trademarkusefactsheet.aspx\n\ud83d\ude02\ud83d\ude02\ud83d\ude02. Thank you! Done and done! \ud83d\udc69\ud83c\udffb\u200d\ud83d\udd27. Ugh, I just realized that this won't work in IE11 (because of course it doesn't). I'll add some conditional logic to skip this part, since the shim is huge and I don't want to include it just for this.. I think this is fine for now, since we're only stripping the # chars for the Note List titles, and the sorting should reflect the text that's displayed in the Note List. (We can consider doing more aggressive Markdown stripping in both the index and Note List titles if we get a lot of requests!). @roundhill I fixed this part so it won't choke in IE11.. suggestion\n  .tab-panels__tab-list li {\nThe classes for this have changed in master \u261d\ufe0f. This is because Markdown lists can be nested:\n- [ ] parent item\n  - [ ] sub item\n\n[ ] parent item\n[ ] sub item. I agree \ud83d\udcaf Thanks!. Functionally, I don't think it's unreasonable to enforce that tasklists be flat. Rather, I'm more concerned about straying too much from the GFM spec (or common implementations), as it will hurt our compatibility within the wider Markdown ecosystem. Users do import/export and copy/paste between Markdown editors. Not to mention internal consistency, with the Markdown renderers we're using for previews.\n\nDisregarding code blocks (when rendering checkboxes) was a trade-off we had to make for feasibility reasons, but that\u2019s not an issue here with the leading whitespace. I'm leaning toward consistency with common Markdown implementations, as long as it's feasible. Are there any extra considerations on the mobile side?. Good question! Both options are suboptimal \ud83d\ude2c I went this way because it makes the code a little more complex to keep track of the match indices here, and also because using array indices as component keys is generally bad practice.\nBut yeah, random keys aren\u2019t great either \u2014 they\u2019ll never cause weird reconciliation bugs, but will be less performant than an actual stable key.\nI think we are safe to use indices here since we won't be doing any reordering, so let\u2019s go that route \ud83d\udc4d https://github.com/Automattic/simplenote-electron/pull/1159/commits/5de6792bbf81f6c483043cd20135eb61df9be4c0. Awesome. Thank you!. Should be ok, and unit tests will fail spectacularly if the regex is changed in an unexpected way. I tweaked the regex a bit to ensure that the first capturing group is always a string though (https://github.com/Automattic/simplenote-electron/pull/1166/commits/0a738e6a49d1ae8d22ce0c549003d335e3e7fb63).. Yes, it's from the Gridicons set.\nhttps://github.com/Automattic/gridicons/blob/master/sources/svg/gridicons-sync.svg\n\nI'm also wondering if we should show this icon. It may look like a button to some users that you can click to start a sync?\n\nI'm a little conflicted on this, too. The button thing is definitely a concern, but I also feel like it's harder to understand what the indicator even is without the sync icon. (It's less of a problem in the native macOS app, since the Navigation Bar is always visible, and we don't have to think about the webapp case where the Settings button and footer links are in close proximity.)\nOne mitigating factor is that the sync icon is only shown when the websocket is connected. So in most situations, a user would only see that sync icon in conjunction with \"All changes synced\" \u2014 thus no reason to click it.. Good question. A few reasons for the limit, in my mind:\n\nThe note titles are taken by regex-ing the note contents on each sync indicator hover, and not cached.\nI feel like having a scrollable area inside a hover-activated popover is a little too much complexity. That would warrant a proper click-activated popover.\nThe intent of this feature is not to provide an exhaustive list of unsynced changes, but rather a way to self-diagnose if something's going wrong. Providing a list of 100 note titles doesn't add much utility over 10 notes. If we really wanted to show every unsynced note in a useful way, we should consider a different UI.. I was under the impression that it was a standard Material design pattern to disable tooltips on the hamburger button, but I did a little more research today and it doesn't really seem to be the case \ud83e\udd14 (There's even variance in Google's own apps!)\n\nI'm going to remove this logic to keep it simple. Thanks!. Minor nitpick, but I think that setting a single flex-shrink: 0 (or flex: 0 0 auto) on .app-layout__source-column will be a little cleaner than explicitly setting min-widths.. ",
    "BobTB": "Very important thing to do, hard to see where the searched text is without this!\n. I just have to say that I stopped using the official Simplenote app just because this does not exists. It is actually quite useless when the notes are more than a few lines without search highlighting. \n. OK, sorry to bother you all, but is this now implemented in the windows app or online webapp?. ",
    "rbreaves": "I would agree that search highlighting needs to be added and was about to add a request if one had not been made. There are 3rd party clients for Windows, Linux and OSX that support this feature and as much as I love the official Simplenote app this is the single reason why I am no longer able to use the official app. My notes in the application are beginning to get long and detailed enough that search highlighting is critical.\n. Actually it is working correctly now... that is sort of odd. I did reinstall it twice that day, but it is working now. I suspect that maybe it was just some sort of DNS issue, although the site and the notes loaded just fine in chrome on that day.\n. ",
    "systemocracy": "there is highlighting in the android client. Puzzles me how this is not included in the windows version, I have not made the switch to the official windows client for this reason alone. Hope its included soon.\n. ",
    "susingha": "Still not added in Version 1.0.3. I am not able to move to SimpleNote because of the absence of this feature alone\n. ",
    "suaracahaya": "Please implement this soon, hundreds of notes are not easy to navigate through without a search highlighting...\n. It has been requested since last year: https://github.com/Automattic/simplenote-electron/issues/52\n. ",
    "mnmami": "In two days from now, this request turns one year old, sad that it is still dragging. I'm speaking for the Linux version. I'm wondering what makes the task difficult if the full-text search across the notes itself is working?! Anyway, casting a vote for this being so important.\n. Spell-check is needed indeed, at least with the enable/disable option.. Thanks a lot for making this finally happen.. ",
    "rachelsquirrel": "You can already search for untagged notes in the web app by typing tag:untagged and I just tested to see what would happen if I made \"untagged\" a tag for one note. It wasn't returned in the search results. \nI like the first option too - where both untagged notes and notes with the tag \"untagged\" are returned but this is not how it works in the web app. Right now it's not possible to search for notes with the tag \"untagged\". If we make it possible to do this in the Electron app can we also implement it for the web app?. A user has reported that the tag search is case sensitive. For example, if the tag is BobDylan, searching for bobdylan will not find any results. It also doesn't find partial matches. Is it worth changing this to support partial matches and also removing the case requirement?\n964763-zen. Oh wow! That's fantastic!\n. A report on Linux (Mint 17.3, Ubuntu 14.04)- #2642910-t\nAdded October 2017: Also reported in 742551-zen running Windows (happens to pinned and unpinned notes). Another request - #2642910-t\n. Another request - #2641835-t\n. #2653851-t\n. #2654072-t\n. @dmsnell It helps us track how common an issue it is. We do the same thing for Jetpack. (removed the link because it put a comment on that Jetpack issue)\nIt's true that most feature requests go to the p2 but this seems more significant. \n. I'm happy to edit the same comment or add a thumbs up, that's fine. \n. #2672167\n. A request in #3241877-t for Fountain script (https://fountain.io/), which is a markup language for writers. . Are you able to sign into our web app and see your notes there? If yes, try deleting the app from your computer and installing it again. If this doesn't fix the problem then get in touch with us here - https://simplenote.com/contact-us/\n. Ok, great! I'll close this. If you have any other issues then contact us here - https://simplenote.com/contact-us/.\n. I've got a screenshot of the issue. Reported in 983926-zen\n\n. I've also got a report of this in #808817-zen. Possibly related to this:\nhttps://github.com/Automattic/simplenote-macos/issues/70\n. Another report in #3338910-t. I've got a report in #841926-zd with steps for what happened.\nDay 1. Changes were made to a note in the Windows app in offline mode.\nDay 2. More changes were made to the same note in the iPhone app.\nDay 3. Opened Windows app in offline mode and the changes from the first day were visible. Put the app online and the changes were lost. . I've got another report of this with some slightly different information.\n\nChanges are made to a note in offline mode.\nThe app goes online but the changes are not synced with the server.\nThe note is edited again on the Linux app and only then does the note sync with the server.\n\nChanges in offline mode are not synced with the server until the note is modified when it's online again.\n891721-zen. It works with version 1.1.0-rc1. I'll close this.. A similar issue has been reported in the Android app: \nhttps://github.com/Automattic/simplenote-android/issues/443. I've received a similar report of random characters appearing in a user's note that the user did not type themselves. This happened after the update to 1.1.0.  \n804100-zen.",
    "dokker": "Would you consider please that the keyword for searching tags would be t:. So I could search with less typing.\nOr It could be an alias for tag:.. Hi,\nMaybe this is connected to this issue:\nMarkdown:\n```\ntest\n\nList item: This is some text with strong in it\n```\n\nResult:\n\nArchlinux\nSimplenote version 1.1.3\n. ",
    "myrkdinc3": "This is not available in 1.1.7 yet. Will it land ? . ",
    "msilbers": "Searching for untagged notes in the Windows app specifically requested in #1430868-zen\nas well as an easier way to search for multiple tags. This feature is still requested often, most recently in #1388662-zen. This is also reported in #1372185-zen\nThey have about 5 tags duplicated. The duplicates are associated with the same notes, like there is only one tag, but it displays twice.. I had a report of this in #1322822-zen regarding the items mentioned above, as well as undoing anything with Hebrew text. The workaround mentioned above (Ctrl/Cmd+Z) still does work.. On the Mac Electron app, Undo does not seem to do anything. It still works on the native MacOS app.\nTo replicate:\n- delete some text\n- hit Cmd + Z or go to Edit > Undo\nNothing will happen! Then, I hit enter twice after a URL. Hitting Undo pasted the URL to a new line, very unexpected behavior. In the following gif, each time the menu comes down I am clicking Undo but I couldn't capture that part:\n\nI was able to replicate this a few times\n. noted and requested a fix in #1577424-zen for Hebrew. reported in #1383937-zen. reported in #1389692-zen\nfrom the user: \nIn the following case:\n\nThe external display monitor is connected with the PC. \nThe simplenote window is shown on the external monitor and then closed. \nWhen I open simplenote next time without connecting the external monitor.\n\nThe following simptom happens:\n\nSimplenote is not shown on the display of the PC. \nIf I connect the external display monitor in this case, I can find the simplenote window. \nIf there is no external monitor, I have no way to find the simplenote window, even restarting the PC.. another request for this in #1432115-zen. requested for Linux in #1434322-zen. reported by a Simplenote user in #1519364-zen\non English notes using Windows 10\nright click never works, not just in some instances. I was able to reproduce this repeatedly and consistently\nSimplenote Mac Electron version, 1.3.4\nMac OS 10.14.2 Mojave. Based on the report in 1730973-zen I believe this is happening on both versions of the web app for some users. I have had two reports of this on Windows machines for the web app. reported in #1761230-zen\nversion 1.4 on Windows 10, reports cursor frequently jumping to the end of a note, 5-10 times per hour. specific steps reported in #1762135-zen, using Windows\n\nIf you select a note, scroll down into it (say, half-way down a long one), cursor click into a line, hit enter (or type a line and then hit enter), the cursor will automatically drop to the very bottom of the note.. reported by another Windows user on Simplenote 1.4.0 in #1762394-zen. \"when typing info above a previous sentences in the same note, the cursor randomly drops down to the end of the last word of the sentences below it\"\nreported by Windows user in #1763986-zen after update to 1.4.0. reported by Windows user on Simplenote 1.4.0 in #1765103-zen\nnoted that this was an older bug (pre 1.3?) that seems to have returned. This was reported again by another Polish user who is trying to add the \u0107 character, in #1807844-zen. > Still unable to login.\n@gellenburg for now, are you able to log in with the email address and password originally used to set up your Simplenote account?. > How? By typing in my email and password.\n@gellenburg Yes, exactly. If you are having any trouble with that, you can contact support here and we can help you out: https://simplenote.com/contact-us/. ",
    "fhellwig": "I also wanted to add my vote to #716 (folded into #54 here). It would be great to have an \"Untagged\" button. Doesn't even need to be a search feature - just an \"Untagged\" item at the end of the list of tags would be fantastic!. ",
    "MichaelArestad": "I would stick with Sass or maybe PostCSS. CSS should stay pretty close to CSS. I'd also avoid whitespace-dependent preprocessors. Sass is also pretty familiar to designers who generally just speak CSS (though Stylus isn't that much of a jump to pick up). Other than that, there's no major benefit from one over the other.\nI'd avoid any libraries like Bourbon. If you need pieces of it, just grab that code and create your own mixin.\nAutoprefixer handles autoprefixing just fine. We haven't messed with prefixes in some time because of it.\n. Another benefit with writing your own mixins and sticking to Sass is, if you write some brilliant function or mixin, it's portable to our other projects.\n. @srgpqt Are you using Grunt/Gulp or something like that? There's an autoprefixer package that works well with both. The same with Sass (use the libsass version, not the Ruby version)\n. ",
    "Pacerier": "Hey guys, what about the web version?. ",
    "ryanleesipes": "Agreed, people tags are weird...\n. @drw158 I think what he is saying is that if you have a note with markdown enabled it still shows the syntax in the list on the left (vs the content post formatting). The preferred behavior would be to not see the markdown in the preview in the list. (screenshot attached).\n\n^ that is with preview enabled.\n. Thank you @rikai - nice to see JB folks in here! :smile: \n. Hold up, that syntax doesn't work for me, @rikai - does it work for you?\n. @drw158 is it on your roadmap? Is there an alternative way to do it that is supported?\n. That would be awesome.\n. Agreed.\n. ",
    "dar5hak": "Another scenario, which I believe is related to this same bug:\n1. Empty your Trash.\n2. Go to All Notes.\n3. Open one of your non-deleted notes.\n4. Go to Trash again.\n5. The content of the previously selected note is still there in the contents pane.\nObserved on the Linux app.\n. ",
    "bryceadams": "Confirmed, same for me on OSX.\n. ",
    "Viper007Bond": "\nI forgot what the keyboard shortcut was on Windows.\n\nSame as Mac, just control instead of command. :)\n\nAlso noticed that the WordPress app does not have a right click menu.\n\nhttps://github.com/Automattic/wp-desktop/issues/33\n. ",
    "erichiller": "Duplicated of #220  - but I totally agree\n. Similar to #309 - but I concur.\n. Hotkey to minimize to and restore from the TSA would be perfect.\n. ",
    "rodrigoi": "@roundhill you can try a couple things:\nUpgrade Ruby\nYou can try installing the ruby version manager and upgrade to the latest version. I'm running 2.2.1p85. Once updated, run gem install fpm again just in case.\nRun the command to get getter errors\nIf you run fpm --version 1.0.0 --license \"GPLv2\" --name \"simplenote\" --description \"Simplenote for Linux\" --vendor \"Automattic, Inc.\" --maintainer \"Simplenote Support <support@simplenote.com>\" --url \"https://simplenote.com/\" -s dir -t deb --force --package ./release/simplenote-1.0.0.deb -C release/tmp ./ on your simplenote-electron folder you may get a better error. Maybe a depency of fpm is missing.\n. @roundhill yes, works fine on Windows and Linux.\nThe automatic updates only work on OS X. For all others, we have to open a browser window to initiate a download, and we can control the page we show the user on the backend.\n\n\n. @dmsnell I've refactored the setInterval out. Now the AutoUpdater and ManualUpdater emit a end event in case of error, update unavailable or a cancel click on the dialog window, and we use that event to run a new interval. Let me know if you are happy with those changes. To test the auto updater, you'll have to pack the app (make osx, make win32 or make linux).\n. @dmsnell I've cleaned up that os reference that was unused, but sadly destructuring parameters are not supported by electron. Everything in desktop run as a node.js app and to support that syntax we'll have to transpile the code. I'd rather leave it as it is for now.\nThe index.js file is more or less a convention. We could set app.js on package.json and run main() directly, but I'd rather not have that module call itself.\n. :shipit: \n. I'm experiencing a weird behaviour. When I turn the network back on, other devices show: New Note... while the content is synchronizing, and when the note loads the content is duplicated.\n\n\nAnd the electron app only shows the duplicated content on the notes list.\n\nAlso, notes created this way don't sync when trashed. You have to trash the note on every device it synchronized.\nTested with Simplenote OSX and iOS.\n. sync issues looking good, but trashed notes are not synchronized. If I trash an offline note on a device, it doesn't disappear on the desktop app. Or vice versa. \ud83d\ude15 \n. This is what I'm doing:\n- deleting node_modules and dist folders.\n- npm install\n- make build\n- electron . with version 0.36.11\n- disconnect network, create node, connect network... let it sync.\nIf I trash the note on the mac app or the iOS app, it's trashed on those apps but not on the electron app. If I trash it on the electron app, it dos not get trashed on other apps. No javascript errors \ud83d\ude1e \n. I think the issues are related because it only happens to me with notes created offline. But it may require further investigation, therefore, I'm cool with having a separate issue.\n\n:shipit: :shipit: :shipit: \n. @roundhill looking good. :shipit:\n. code looks good and bug fix verified :shipit: \n. :shipit: \n. Tried it and I didn't find any regressions. The build works with versions of node up to 5.12.0 and npm up to 3.8.6. I recommend we add engines to package.json:\njson\nengines: {\n  \"node\": \"5.12.0\",\n  \"npm\": \"3.8.6\"\n}\nother than that, this looks awesome. :shipit: \n. looks good to me too! :shipit: \n. Verified! :shipit: \n. Closing in favor of:\n- Adding a manual check for updates feature, via a menu item on the application menu.\n- Persisting the date of the last automated check.\n- Check using a longer interval (day/week/moth)\n. > My expectation when highlighting multiple lines and hitting tab is for all the lines to be indented\u2026\nWe are used to code editors. Text editors usually delete the highlighted text when hitting tab (they replace the highlighted text with any key really).\nIndent/outdent behavior usually has special shortcuts (\u2318]/\u2318[ in Pages for example)\n. @dmsnell \ud83d\udc4d  for verbosity. I noticed that they were CmdOrCtrl and not Command when reviewing this PR.\n. Closing this PR as stale. @Copons feel free to reopen this any time.. Closing this as stale. @Copons, feel free to reopen this any time.. Side note: On MacOS, if using n, remove npm (rm -rf /usr/local/lib/node_modules/npm) before switching to the new version to fix the Cannot find module 'internal/fs' error when running npm install.. Releases look fine: https://cloudup.com/cxMYncmhy6h. I think we should bump the version of package.json before merging this. Should we bump the minor version?. @roundhill @dmsnell I've updated the build script to package only the needed files and dependencies. Otherwise, everything is included on the packed release (including things on the /releases folder), potentially making the size of the distributable grow out of control.\nTo test, pack versions for Windows, macOS and linux. Executable versions should weight around 130mb, and dmg, tar and exe should weight around 45mb. . Closing this as invalid.  @Copons, feel free to reopen this in the future.. @Copons would you mind rebasing this so we can take another look?. @dmsnell do you need any help closing this PR?. These are the things I've found: \nWhen using Ctrl + Shift + p on MacOS (Ctrl, not CmdOrCtrl... Cmd worked fine), on a note without markdown enabled, the editor selects the text from the caret position to the end of the line.\n\nAlso, CmdOrCtrl + Shift + [ may be confusing on non-EN keyboards. Maybe we can use CmdOrCtrl + Shift + l. Maybe adding it to the View menu is a good idea.\nWe have duplicated shortcuts for the search field: CmdOrCtrl + Shift + f and CmdOrCtrl + f.\nOtherwise, the code looks good. Is managing window state via redux actions in our future plans?. I usually use the local electron from node_modules:\n```\n\n./node_modules/electron/dist/Electron.app/Contents/MacOS/Electron .\n``. I personally find this feature odd. I wasn't aware the web app had this behaviour, and this may be a case when we'll have to remove something instead of adding.\nI think that clearing the search field and adding an empty note makes more sense, but feel free to merge this for consistency with the web app.. Let the version wars begin!7.9.0is safe. The real restriction is npm> 5.2.0`.. @drw158 would you mind taking a look at this PR?. @natanielcz would you mind adding some testing instructions?. Thanks @natanielcz !!. @natanielcz would you mind rebasing this PR? Thanks!. thanks @natanielcz !! I have a couple comments:\n\nI don't have electron-builder as a global. To make package-linux work I've renamed PACKAGE_WIN32 to ELECTRON_BUILDER and used it instead of @electron-builder. It was also complaining about projectDir, so the command looked like:\nmake\npackage-linux: linux\n    @$(ELECTRON_BUILDER) --linux --x64\nWe usually build on macOS, and rpm fails with a warning of a missing dependency. Maybe we should add brew install rpm to the documentation as a requirement.\nAnd finally, yarn.lock is creating an artificially large diff, and at this moment, this project does not use yarn. You may want to create a new PR to add yarn.\nBesides that, this tests very well. All packages work (except for the image on Software/Ubuntu Store you've mentioned before)\nI'll try to get another set of \ud83d\udc40 to review this, but this looks really promising. Thanks for the hard work!. @roundhill this is testing well. It'll be interesting to evaluate the approach on https://github.com/Automattic/simplenote-electron/pull/650/ (which at the moment is not working for me) in the future, but for the moment this works fine.. it also looks awesome on Windows and Ubuntu. :shipit: !. @roundhill I just gave this a try and works fine. Looks like it need a rebase and should be ready to go!\nLet me know if you need more help with this.. This works great. Monaco looks like a great choice. Tried it with really large notes and I've noticed no performance degradation.\nThe only thing I've found is purely aesthetic. There's a double scrollbar (at least on Mac OS) and the editor does not fill the screen.\n\n . @roundhill @dmsnell I just gave this a try and still works great. I did notice the same things @roundhill reported here: https://github.com/Automattic/simplenote-electron/pull/692#issuecomment-367490754\nShould we feature flag this?. @trustlix thanks for this contribution!\nI'm also running into the image size problem with macOS. Apparently, the icon should be 16x16 or 32x32 (@2x). My recommendation would be to have different assets for each target platform.\nAlso, it won't change status if I close the window, and will throw this exception if I click it to open the window:\n\nAlso for macOS, it'll be nice to have a monochromatic icon.. @roundhill do you still need this reviewed (since the Windows Store App was released a few weeks ago)?\nInstructions work as expected, but \ud83d\udc4d to having ENV configs, so let me know if you need help moving that forward.. @mariosant thanks for your contribution!\nWould you mind add some testing instructions and the effect this has on the different platforms? I've tested on macOS and I can confirm that there are no regressions. Will test on Windows and Linux as soon as possible.\nAlso, how is this solution different than using the Frameless Window approach?. I don't think it'll make much sense to have this setting present on Windows or macOS, unless we unify all the platforms on a Frameless Window. We could use process.platform to show this only on Linux.. I've run a quick test and looks like it fixes #430. But the change from params: { note }, to appState on share.jsx props leaves a couple call to showDialog with the wrong parameters:\nhttps://github.com/Automattic/simplenote-electron/blob/7c4a1abb5eef13062dee97aab934857f5f5cc9d5/lib/app.jsx#L342\nhttps://github.com/Automattic/simplenote-electron/blob/7c4a1abb5eef13062dee97aab934857f5f5cc9d5/lib/email-tooltip.jsx#L22\nwe no longer need to pass params: { note },. Otherwise, it appears to work fine \ud83d\ude09 \n. I'll do something better. I'll remove the function. Not even calypso is using it :disappointed: \n. some syntactic sugar. Destructuring assignment lets's you assign an extracted value to a new variable name.\njs\nconst { isAuthenticated, authPending: pending } = this.props;\nconst submitClasses = classNames( 'button', 'button-primary', { pending } );\n. path.join will indeed use \\ on Windows, but Chromium handles that just fine. It changes the separator to /, and also adds the third slash to file://. There's no need for us to detect the OS and replace \\ with /.\n. Everything on desktop runs as a standard node.js app, and indeed, it has to be vanilla JS.\nI'd like to add a build step in the future to transpile the desktop code to enable some more advanced syntax features. Maybe for v1.0.1 :smile: \n. Dialog has a required key prop.\n. there are a bunch of spaces before and after things missing on this file.\n. jus a reminder that this should be commented out before merging :wink: \n. I really love this pattern of moving away from large utils files into smaller single function exports.. would you mind adding quotes to the keys on this file?. you can update skip this and add toggleMonospace to the pick(settingsActions) array.. ",
    "Sushubh": "Noticed this too! \n. Yes. You expect tooltips to be available by nature! I had to click on all of them to see what they did! \n. I had a few MD notes created in the web app so I was confused when they did not appear properly in the just released Windows app. Found the toggle and it processed my existing MD notes properly without touching the non-MD ones. \n. It would be great if there was a toggle ui element to prevent any confusion. just flick it to turn on/off markdown for the post. There should be no need for a global setting! \n. Just curious... The app would update by itself (assuming it is kind of a wrapper around a web app) or we would need to download updates? There is no option in the app to check if there is an update? Thanks. \n. ",
    "philipjohn": "Specifically, the \"revisions\" and \"share\" icons.\nRelated: the \"share\" icon looks like an upload icon, but then the dialog that opens says \"share\" which seems inconsistent to me as well.\n. I could have been less succinct, sorry :)\nI would have at least expected new notes to have Markdown enabled, but actually I didn't test that they were. (I now have, and see that I do have to enable MD on new notes too.)\nAs for existing notes, I'm not sure. I wouldn't mind markdown being enabled on them personally. I'm unsure whether it would be a problem or poor UX to have it retrospectively enabled.\n\nAlso, what would you expect to happen if you turned off the global MD setting once had created several MD notes?\n\nI think I'd expect to see them all return to plain text. I'm seeing the global setting as a global setting that will effect all notes. I think that's the attitude behind my expectation that I wouldn't have to do a per-note setting as well.\nHope that helps!\n. ",
    "rikai": "One of the very first things i did when installing this app was to hover over the icons to see what they were for and when they annoyingly gave me no tooltips, to click them to find out, so i can very much agree with this suggestion.\n. I myself would have thought the global toggle would have been enabled by default.\nThat use case makes sense to me, because it would provide the full functionality out of the box, and people could then disable markdown support on notes they didn't want markdown on, which i can only imagine would be a minority of use cases, or globally if they dont want markdown at all.\nAs for the global toggle, i'd expect that the toggle would only affect notes made after the toggle changed. This makes sense for it the intented functionality to me because for existing notes... You've already decided what format you wanted those notes to be in. Why would you want a global setting to override the decision you already made? That sounds like a headache waiting to happen.\n. There is always the option of putting the toggle in the button area above a note somewhere with a mouseover saying that it's a markdown toggle. :)\n. Just curious if there's a reason this hasn't been marked as a bug yet. :)\n. There is existing markdown syntax that could be used to support this feature, thought i imagine that you'd need some sort of editing ability in preview mode to be able to check the boxes.\n. See #259 :)\n. ",
    "soren121": "Using the cursor: pointer; style on the buttons would also help!\n. Duplicate of #277, although this one does have a screenshot!\n. ",
    "EJOweb": "I agree with avoiding another setting. A global MD switch would suit me perfectly. I can't picture a situation where I want some notes to particularly have MD turned off.\n. ",
    "oxalorg": "On the flip side, I would hate for a single global switch to toggle markdown ON/OFF on every post.\nSince the primary scope and functionality of SN is to be able to take notes, there are tons of us who don't use markdown. \nAny personal note I write is written in plain text. I only use markdown for much larger pieces like blog posts, longer more structured class notes etc. Also, enabling the markdown support occupies extra space for the preview/edit options. \nI'd say the best option would be to remove global toggle and keep the individual one; defaulting to markdown disabled. Most of the time markdown is useful only when the note isn't very small, so IMHO it justifies the 1 extra second it takes to manually enable markdown on those notes.\nJust my opinion.\n. It's not a Simple Note issue. It's a bug with Gnome centre/Ubuntu. View the bug here: https://bugs.launchpad.net/ubuntu/+source/gnome-software/+bug/1573206\n(You can close this now :P)\n. ",
    "anothernode": "I just started using simplenote because I took notice that it supports markdown. Now, at least using the electron based app, I have to enable markdown manually for every new note I create. I would definitely appreciate it very much if there would be a way for me to have markdown enabled by default for new notes I create.\n. ",
    "hindsholm": "I didn't know that it was a bug, I thought it was intentional :)\nBut glad to hear that it will be fixed...\n. I use the Windows version at work behind a proxy and it works just fine.\n. ",
    "lemmoner": "It doesn't work for me under Windows 7. When I start simplenote, I see in wireshark a SYN message towards 72.14.246.169:443 which is never responded, hence retransmissions happen.\nIs Simplenote Win App re-using Internet Explorer settings? If yes, the communication should work. However, why does simplenote try to access that IP? It belongs to Google (My username is a gmail account), but I don't see why the application should rely on google (ghs-svc-https-c423.ghs-ssl.googlehosted.com) for authentication proccess.\n. ",
    "jizusun": "Hope it can support system proxy or manual proxy in Ubuntu.\nAlso, 72.14.246.169 seems to be a Google IP, we have to use proxy to access it in China.\n. ",
    "xAA55": "I'm using the Linux (Debian Jessie) version and I also have this issue.\n. ",
    "irstevenson": "Same problem here with version 1.0.2 on Linux Mint behind a corporate Microsoft NTLM proxy with username and password credentials required. (Have both http_proxy and https_proxy env variables set.)\n. ",
    "aalbertson": "+1 Simplenote Mac 1.1.6, proxy settings enabled everywhere, but no way to even configure simplenote to read it and it is not picking it up automatically.\n. I should clarify, my system (browser, terminal, sudoers, etc...) proxy settings are enabled, however simplenote does not seem to pick this up, and I have yet to find a location to configure them for simplenote itself.\n. ",
    "ghost": "@aalbertson I second this, I would like a way to configure a proxy for simplenote, or have it use systemwide proxy.\n. I am on the master branch. Thanks. I just tested the current master branch and the issue is revolved.\nThank you very much!. I can reproduce that except the link is never shown.. ",
    "xopxe": "1.0.8 here, ubuntu 16.04 behind a plain proxy. No error messages nor any sync. Just stays blank. Created notes on android and webpage, and they work. Nothing goes to/from desktop.. ",
    "isebmo": "Same problem on Windows 7. ",
    "githubusersb": "Google chrome in Windows 7 behind proxy is not working. I can login, but cannot see any note. But I found the same is working in IE11.. ",
    "PhiLhoSoft": "Can we have a detail of what Simplenote does on the network?\nIn my case, I could log in, I see my notes, but if I do an update at work, the changes don't propagate to the server. I don't see them on my phone, for example. On the other hand, if I make a change on my phone, it is correctly merged with my changes at work, but still in download mode, not in upload direction.\n[EDIT jan/2019] Maybe after an update, now my updates at work are synchronized. Thank you.\nAlso found some info at https://www.hybrid-analysis.com/sample/7e32c7eef8be12f686eca419633eef8e02a88abe89a6f6260ec792633ac0687a?environmentId=100 but they might be obsolete.. Do you have an idea where this could be broken? Maybe a contributor can try and fix that, pushing in the right direction can help a lot.\nNote: I am not sure if it is possible at all in an Electron app, but being able to support several languages would be a tremendous bonus!\nI write lot of notes in French, my native language, but I also take technical notes in English, for example.\nAh, I see the above mentioned library handles that, apparently. As long as it doesn't block when off-line and needing a new dictionary. :smile: . I too use tabs in plain text files to make pseudo-tables, so I find this remark useful, although it would be nice to be able to have some kind of metadata associated to a note to specify tab width (eg. 50 spaces).\nIn good text editors (eg. Scintilla-based, like SciTE, Notepad++), it works with variable-width fonts because it computes the width of the tab based on the width of the space for the current font, then place all items after tabs at fixed horizontal position to a multiple of this width.\nIdeally, the metadata would specify several tab-stops, eg. at 10, 50, 150\nAlternatively, a real support of Markdown tables could be nice too.... Curiously, I actually saw this behavior (for the first time) a few days ago, before I upgrade. So it was in 1.0.8 on Win 10 too. I typed some text in the middle of a rather long node, and the caret went to the end of the note in the middle of my typing (on sync ?).\nIt happened a few times, rather randomly.\nSorry, that's a pretty vague bug report, I fear...\nI can't reproduce the problem with 1.1.0.... I was about to create this issue... Glad it is already done.\nAs said above, we need a global setting to choose the language (and probably to load dictionaries), that would set the default language for new notes.\nAnd we need note metadata (like the \"markdown\" one), to disable (or enable) spellchecking, and to choose a language.\nLike melsophos, I write notes in French and others in English, so I would appreciate to be able to choose case per case.\nA quick win here is the capability to disable spellchecking per note: no dictionary management needed yet, and no red squiggly lines in non-default languages.\nI hope it is possible to add metadata to notes. Otherwise, perhaps we can imagine a setting where the presence of a given tag (defined by user) will trigger the activation of a given dictionary (or complete deactivation of spellchecking).. ",
    "Ros-Rain": "Hi!\nLinux users can set a proxy config via command line, when starting the App: simplenote --proxy-server=127.0.0.1:1234\nIt works.. ",
    "Yanpas": "I don't expirience this issue. I just wanted to say thanks for linux version! :smiley: \n. ",
    "progkix": "Adding my support for a 32 bit build for Linux as well. Doesn't necessarily need to be distribution specific - a gzipped archive would work just fine.\n. ",
    "dnv": "Really really hoping this makes it into the next version. ",
    "jtoy": "+1. ",
    "rodalpho": "Totally understand it's your first release, just wanted to get this on the list!\n. This does not satisfy my use case, as the backup is not automatic and it's in the form of a compressed archive rather than individual text files that can be read in any other editor.. ",
    "inprealpha": "That's mostly a problem with Electron I believe. Even just a wrapper for a webpage (using nativefier) can use up close to that amount of memory. I'd be very surprised if they significantly reduced it (not discouraging anyone though). Remember, we've got almost a full chromium running in the backend.\n. Ok then, on a account with one note, the memory usage is 22 + 21 + 16 = 59 (adding up the memory usage of 3 processes). This is on Windows 10 64 bit.\n. @roundhill It is not, usually, but in this case, for a simple note taker, it is a bit too high. That said I am pleasantly surprised that this is actually running on electron and still using such low amount of memory. Despite this I still can't use it though due to functionality problems (that's an issue for another thread).\n. ",
    "marianoju": "I support the feature request. A plain-text backup would have enabled me to recover lost data after client failed to synchroniz (#332). \nDownloading a .zip archive from the web app at https://app.simplenote.com is not an option for me, for two reasons: \n1. since client failed to synchronize data was not accessible trough the web app; \n2. since web app fails to execute request (possibly due to large amount of notes?), see #346.\nAn automatic periodic plain-text (zipped) backup copy of my notes would be very much appreciated. \n. @dmsnell I would estimate I had about 900 notes at the time, totaling 1.8 MB (says Nautilus, the GNOME file manager; listing of the directory with ls -lh states 4.4M), of which \n- 531 items smaller than 1 kB; \n- 167 items equal or larger than 1 kB and smaller than 2 kB; \n- 108 items equal or larger than 2 kB and smaller than 4 kB; \n- 54 items equal or larger than 4 kB and smaller than 8 kB; \n- 22 items equal or larger than 8 kB and smaller than 16 kB; \n- 7 items equal or larger than 16 kB and smaller than 32 kB; \n- 4 items equal or larger than 32 kB and smaller than 64 kB; \n- 2 items equal or larger than 64 kB and smaller than 128 kB. \n. You're welcome @dmsnell! Yes, that is \u201ca dump from the zipped download off of the web\u201d\n. Wow, that is great! I had not realised the function had been introduced. It pretty much fits my needs. The only flaw I can think of is the missing timestamp of last modification, which is not preserved in the exported file(s). Nonetheless very useful as it is. I especially like that the text files' names correspond to the first line of text.. The the missing timestamp of last modification have been added (see #826), and I am grateful for that! Regrettably text files' names as of now do not correspond to the first line of text anymore but I can live with that. . Since this issue has not received any reply in 19 days I have permanently given up on recovering the lost data. I have not been able to find out where the latest Simplenote client for Ubuntu v1.0.2. stores my notes locally. Support has been unable or unwilling to answer my questions in detail. For the record: \n1. Where & how does the Simplenote application locally save notes on Ubuntu 16.04 (64 bit)? Are the files stored in the user home directory? Are the notes stored in one file or several files? Which format is used? JSON? XML? Something completely different?\n2. What happens (on the client side) when a note is trashed? Are files deleted? Are files overwritten? Are backup files kept on the client side?\nAn automatic periodic plain-text (zipped) backup copy of my notes would have enabled me to recover lost data after the client failed to synchronize, see #271.\n. @teemune Not sure this relates to the aforementioned issue, since you're using different (non-Linux) clients and describing a different scenario (i.e. spontaneous log-out).\n. > The way the app is designed eschews a local backup to disk [...] \n@dmsnell I am not sure why you all (including two Happiness Engineer from Simplenote Support) are so adamantly stating that the Simplenote client does not store the notes locally. I don't really care about the technical details, if this happens within the software framework called Electron, if Chromium is involved or not \u2013 but while offline the Simplenote application somehow has to write the notes somewhere. I understand this probably does not happen as plain-text files. \n. Thanks @rohzart, but I have been unable to find any file containing \"indexeddb\" or \"leveldb\" (nor an .BAK file). Since I am using Ubuntu my folder structure differs from yours. I have permanently given up on recovering the lost data two months ago, and abstain from using Simplenote in a productive environment. \n. Thanks @rohzart! I followed your lead and found some BAK files in the\ndirectory you indicated. However they display timestamps of modification\nlong after the data loss event, so I doubt that it would be possible\nto restore any of the lost data from these files. Oldest file is from\nSeptember 5th (data loss was two months prior).\nI appreciate your effort in pointing me in the right direction, but the\n\u201cneed to learn leveldb to extract my data from this point\u201d as you\nmentioned is beyond what I am willing to invest. To much time lost\nalready. If I understand @dmsnell correctly nobody is currently \u201clooking\ninto helping people recover data\u201d.\n. > This was all pretty frustrating. If this happens again, I'm going to have to switch to something more reliable. It's a shame because I really love the simplicity of this app. \nWhat he said.. @roundhill Checking 19 hours later on my note it is still public, but\nthe content is garbled (mixing old and new edits, including text that\nhas been deleted).\nRepublishing of the note i.e. creating a (new?) public URL is still not\npossible.\nI have toggled \u201cMake public link\u201d but note remains public when it should\nnot be, and resetting note to public does not help republishing.\nI have created a new note with the content of the latest version, and it\npublishes within seconds. I have made edits and they are visible on\nreloading the public URL.\n. This bug has been unassigned for too long. I'm out. . +1 \nSame experience here. 112 days later that bug is still not fixed. . Nice. Definitely a functional enhancement! :+1: \n\nHowever this does not satisfy the motivation behind my comment on #271: \n\nDownloading a .zip archive from the web app at https://app.simplenote.com is not an option for me [...] since client failed to synchronize data was not accessible trough the web app; [...] \n\nAn export function within the Simplenote app would have been required to back-up notes to local textfiles (as asked for in #319). I have not experienced problems with synchronization since #332. . \u201cSimplenote is an modern note...\u201d?! How about: \n\nLight, clean and free. Simplenote is a modern note taking app available for iOS, Android, macOS, Windows and Linux, and via web browser. . Summary \nSome or most notes have reappeared. @roundhill I can not see a pattern here. \n\nWhat I have done\nI have for comparison downloaded a ZIP file from the web application (1,248 files) and I have exported ZIP files from the standalone app after each step described below. \n\nI have closed and relaunched the app. No change. \nI have restarted my OS and then relaunched the app. No change. \nI have (within the app) logged out of my account, relaunched the app and logged in: \nafter the 1. relaunch only 238 notes showed up, \nafter the 2. relaunch only 96 notes showed up, \nafter the 3. relaunch only 1,092 notes showed up, \nafter the 4. relaunch only 1,136 notes showed up. \n\n\n\nObviously this is going in the right direction. Who knows? I might end up with more notes than I originally created! ;-)  Seriously I find this behavior troubling and once again makes me doubt the reliability of the app. . Including the files in the trash today's count seem to be in sync.. ",
    "skandl": "Hi, is this something you would accept an implementation in a PR? I'm personally more interested in a \"distraction-free\" or \"zen\" view mode, and am curious if implemented it would be considered for inclusion in the app?. ",
    "JokerQyou": "Although I think the ultimate solution to this would be allowing users to select any font installed on their computer, starting from basic font configuration might be a good idea. Currently CJK characters looks awful in Simplenote. \nHere is how it looks like when I have default font size:\n\nAnd here is how it looks like when I manually set it bigger:\n\nBasically the only acceptable font rendering is the menu text. ASCII characters are still good, though.\n. ",
    "kriskarkoski": "Monospace or alternative font options requested by a user in #2711658-t\n. Also requested in #726598-zen. #2670773-t\n. #2711658-t\n. #2711658-t\n. Another report in 2851098-t\n. ",
    "JeffByers": "For me, the lack of a mono-spaced or non-proportional font such as Courier New, or Consolas on all Simplenote supported platforms is a deal breaker, it's a requirement. I have many notes with column aligned table data, which without the right font, simply does not line up.\n. ",
    "Essayoh": "Requested by a customer in #2792368-t\n. This is still an issue, here's a Printout from the Windows App (via @ashercantrell )\ntest.pdf\n. ",
    "iamlazynic": "Really want a mono-space option :+1: . ",
    "nemonein": "I hope you do something for Korean users.\n\nAll Korean letters are displayed as squares.\nThose are the notes I created on other platforms.(Android or Windows)\nIt's snap installed Simplenote 1.0.8 on (K)Ubuntu 17.04.. @drw158 Thanks for your replay.\nI would open a new issue, but I want to make sure something.\nI'm not a programmer, so I can't read the codes well.\nI just saw the codes you linked, but I'm not sure exactly what font is used for Ubuntu flavours.\nIs it sans? or Ubuntu?\nIf it's Ubuntu, it does not have Korean glyphs.\nIf it's sans, it is normally matched to Ubuntu fonts in Ubuntu, which results in the same consequences(No Korean fonts).\nI don't think Simplenote uses 'sans' because I manually matched 'sans' with Korean font.\n$ fc-match sans\nNanumBarunGothic.ttf: \"\ub098\ub214\ubc14\ub978\uace0\ub515\" \"Regular\"\nNanumBarunGothic is Korean font, which also has Latin characters.\n. @drw158 @gerv I opened a new issue. #561 . I have found something important.\nThis only occurs on snap version of Simplenote.\nI've download and installed the Deb package(1.0.8), which works just fine. No Korean related problem at all.\nAtom(Snap version), which is also based on Electron, has similar problem. In snapped version of Atom, it does not seem to support the language input system, which means I cannot change into Korean input system.\nI guess this is mainly related to the Snap system.\n. I tested 1.3.4 on KDE Neon(Kubuntu 18.04 based Disto).\nKubuntu's default input system(for Far east Asian languages) is fcitx. I used fcitx and fcitx-hangul(Korean engine).\nI can't say it works fine.\n\nIn the gif, the first paragraph shows the right text, and I retype it on the second paragraph.\nAs you can see, there's some lagging(?) at the beginning of the each line. Those are not my typo.\nHowever, it does not happen when I use other input system, Nimf.\nI have not tried with iBus, etc.\nI don't know why this happens. I don't even know who is responsible for this.\nAll I can say is, fcitx is a 'default' input system for Kubuntu, and Nimf is not mainly used.. ",
    "kylehotchkiss": "Monospace font would be very nice. My usecase: using as decorators/headlines like I do in my code editor \ud83d\ude43 \nSource code pro would be awesome / is open source.. ",
    "silmerusse": "As a workaround, especially for CJK users, edit Simplenote\\resources\\app\\dist\\app.js. Search the font style string (-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen-Sans\", \"Ubuntu\", \"Cantarell\", \"Helvetica Neue\", sans-serif;), and add or replace with your custom font name, for example 'Microsoft YaHei' .. ",
    "subodhpareek18": "Would suggest the following open source options for Monospace:\nhttps://github.com/tonsky/FiraCode  (ligatures!!)\n\n\nhttp://madmalik.github.io/mononoki/\n\n. ",
    "w3sip": "Lack of monospace font option is pretty much the only thing preventing me from abandoning Evernote and going with Simplenote instead.. A few things I've noticed:\n- This doesn't seem to happen in Private Mode (nor on another instance of the browser).\n- Attempt to clear local storage and cookies from Inspect panel didn't fix the problem.\nSeems like a state issue to me, but not sure what element of local state can be cleared to fix it.. ",
    "mizejewski": "Please add a monospace font option. This is definitely a dealbreaker and keeps me using https://laverna.cc/ even though I prefer other features of Simplenote.. The swipe back and forth to preview markdown works well for the mobile format, but on a larger screen I would really prefer side by side markdown/preview panes. Similar to the way MacDown does it, including automatic continuation for lists. The current button clicking to switch between then is really annoying.. Just looked at Bear after it was mentioned above by @hfactor. I agree that this merged option could work well too. It's actually pretty awesome in its simplicity and clarity.. The same goes for bulleted lists. ",
    "valhristov": "I started to use Simplenote today and I like it a lot so far. I just found that I can create monospaced inline and multiline blocks with markdown, but having all monospaced text in the editor would be even more awesome.. ",
    "jmillr": "I would like to join the chorus of voices requesting a mono-spaced option. I, too, would like to migrate my notes from Evernote to Simplenote, but I can't have any 'smart-quotes' messing up my terminal commands!!! Thanks, in advance, if you implement this. [Using MacOS X.]. ",
    "colinhowells": "Big fan of Font Bureau's Input Mono\nNot sure what the license + payment situation would be for inclusion in an app, though. One thing that'd be cool is if the 'preview' tab was interactive, so you could check the checkbox and when you went back to the 'edit' tab the checkbox'd be checked. ",
    "yxlao": "Adding a monospace font option would be super helpful for developers (e.g. code snippets and command lines and etc.).. ",
    "Abaxial": "Yes please, am very much looking forward to a monospaced option.. ",
    "katinthehatsite": "Also, requested by a customer in 1042810-zen. I thought the issue was confusing, but I will close it since it seems that it is common in markdown to use two options for the same function.. Hi I used Publish to web, and then used this link to embed the note into WordPress manually; when I try the link directly it seems to work now!. Another report in #1605568-zen . ",
    "dadaphl": "YES! please add a monospace option!\nI'm using simplenote as a calendar. For every month I display the output of unix cal command. This only works properly with a monospaced font.\nSu Mo Tu We Th Fr Sa\n                1  2\n 3  4  5  6  7  8  9\n10 11 12 13 14 15 16\n17 18 19 20 21 22 23\n24 25 26 27 28 29 30. ",
    "juanmeleiro": "Up. I see this issue has been added as an future feature over two years ago. Monospaced fonts are not something to be taken lightly. Monospaced is a matter of mental health.. ",
    "louisabraham": "I'm using nvalt on macOS but my ASCII diagrams don't render on my phone :/. ",
    "i5o": "Still waiting I guess. ",
    "sandymcfadden": "Adding another request from a user here 1576555-zen. ",
    "ernstki": "Just an update to @silmerusse's suggestion for 2019\u2026\nThe assets for the desktop app are now packaged with asar (a tar alternative written in JavaScript). But you can still extract the source files, modify the app's CSS styles, and repackage them with a little bit of effort. For a Linux distribution using the Simplenote .deb package, for example:\n```bash\nrefer to https://stackoverflow.com/a/39373730/785213 if you need\nhelp setting up your PATH to allow you to run Node packages' CLIs\nnpm install -g asar\nyou will need to give your user permission to modify this directory\ncd /opt/Simplenote/resources\nsudo setfacl -m u:$USER:rwx .\nsudo setfacl -m u:$USER:rw *.asar\nback up the original resource bundle, in case you mess it up\ncp app.asar app.asar.factory\nextract the packed resource bundle\nasar extract app.asar app\nreplace the \"-apple-system\" font with \"Liberation Mono,\" available\non most Linux distros, keeping a backup\nsed -i.bak s'/-apple-system/Liberation Mono/g' app/dist/main.*.css\noptionally, re-pack resource bundle and remove the (temporary) 'app' dir.\nasar pack app app.asar && rm -rf app\nrun Simplenote!\nsimplenote\n```\nThis is a very blunt approach that replaces all UI fonts with a monospace family, but if you're up for it, you could theoretically target .note-detail-textarea separately from .note-detail-markdown in the same CSS file.\nThese steps, unfortunately, will need to be repeated after every Simplenote update.. ",
    "z5h": "+1 for monospace editor code.. ",
    "manu-chroma": "Me and @ggyanez have also requested this feature in this duplicate issue. Having a lock on the app would be really useful and also makes sense. \nIt can be passively added in the settings  like on android app and user can manually activate if he/she wants to.\n. ",
    "gracie": "Being able to lock the app was also requested in #2983176-t. Also requested in #2991041-t\nUser has  running note that's hundreds of lines long. They use the search function to first find the note and want to be able to use it to find specific items within the hundreds of lines, but are unable to on the Windows desktop app.. ",
    "suyogyashukla": "Also requested in #767892-zen. ",
    "huangdawei": "Actually, the only reason I still using Simplenote not Notes.app on iOS is the entire app locks automatically. Same reason that nvALT is my fav on macOS to access Simplenote, I'm longing for the password protection for the entire app added to our own apps on macOS.. ",
    "BrookeDot": "While not a \"note\" app, Telegram allows a local passcode to be set per device allowing local locking of the app. If one forgets the passcode they will need to log out and log back in.\n\n\n\n. Requested on Twitter https://twitter.com/stevengayrogers/status/1026925805098754048. Twitter request https://twitter.com/TEDxOdessa/status/1029813699949867009. ",
    "envygeeks": "Closing.  Project has bad maintainership.\n. Sure, I'm happy to make that change, we'll just have to force it so that build servers don't break.\n. @lemuelroberto Done.\n. ",
    "efegurkan": "Hi @roundhill\nAdded semicolon as requested. Making linter to fail in these cases for these kind of issues might be a good idea I believe, don't know what you guys are thinking about that. Anyways that's out of the scope of this conversation.\nCheers.\n. Sorry for doing that. But I believe this project is low prioritized and no one has time, no ?\n. @dmsnell Yeah its fine, sorry for whining actually \ud83d\ude1e.  Thanks.\n. @dmsnell it's been a long while indeed. I thought I sent the suggested change long time ago, i forget to push apparently. Cheers,\n. ",
    "darim92": "@ryanleesipes thanks, that's exactly what I meant.\n. ",
    "sambody": "I would also prefer the markdown syntax to go away in the list, as it is only used to indicate a title, which to me is useful in the content area, but not in the notes list.\nThe web version is not consistent with the desktop version with that regard: in the web version, the markdown syntax is removed (as I would prefer), in the desktop version (Windows), it is not.\n. In the desktop app, Ctrl+M is already used to minimize the desktop app (Windows 10). \nAnd in the web version on Firefox, Ctrl+M is used to mute the current page. So it will probably have to be another shortcut.\n. ",
    "dangerginger": "I would also like this enhancement.  I would be happy to help with a PR.  Do you know off-hand where to start looking at this?\n. ",
    "pacharanero": "Looks like that note display mixin has been refactored and moved to here\nI very much would like the initial '##'s not to be shown (and the main problem is indeed the # character since almost all of the markdown syntax polluting my sidebar is # ## ### ### etc (ie headings)\nI've set up a dev env using docker-compose and am having a look at the code. From what I can see I wonder if a simple way to fix this would be to amend the regexp to match [#+] as an extra match group, but then to discard the matched #'s in the subsequent code, passing only the stripped title and preview to title and preview.\nSuggestions/guidance on how you would prefer this to be fixed is welcome. I've submitted a PR for this just now: #510 . This bug confirmed replicable in Simplenote Linux (mint18.1) following the above steps to reproduce.. Hi @dmsnell. Thanks for the response.\nYes, I think it would be a good idea to remove other MD formatting from title/preview, and this would be a simple addition to the RegExp in const title = unstrippedTitle.replace( /^[#]+/, '' );\nI opted to keep it very simple and just focus on '#' for this PR, because I didn't want to introduce unintended usability problems for people using '*' or '_' characters elsewhere in the title/preview. Maybe it would be worth seeing how '#' works with users and then add other chars later?\nI agree that your proposed future solution of fully rendering the title and first line to MD, and then passing this (without formatting) to the sidebar list, is optimal.\nPerhaps we could use this workaround temporarily until a more complete refactor of this feature can be planned.\nMarcus. Here's some screenshots of simplenote-electron, both with and without the patch installed, to help with design review.\nwithout #510 (showing how messy the left sidebar looks when markdown syntax is shown)\n\nwith #510 (showing a much cleaner left sidebar, and no deleterious effects on other uses of # in titles)\n\nM. Thanks for the response @dmsnell. I think your points made are reasonable. It's going to need a more involved approach to implement, ie just fiddling with the regex won't be enough.\nProbably best to close this PR and I'll have a look at whether or not I know enough about Simplenote internals to implement the Markdown syntax removal in the way you've suggested, but I understand and agree with the reasoning. 'Don't Break Userspace' :-). ",
    "abhishekpc": "@roundhill Indeed it worked with Admin privileges. Maybe this could be either fixed or mentioned in the download page? \nThanks :)\n. ",
    "fernandocalazans": "I agree with Nebrit. ",
    "mDfRg": "Sorry!\n. ",
    "rachelmcr": "I have noticed that if I unpin and re-pin the note, this issue goes away for a while. I'm able to edit the note without any trouble for a while, although eventually the problem comes back and my cursor jumps to the bottom of the note again as I type.\n. I think you meant @rachelsquirrel :)\n. Yes, it happens every time I first open the app after restarting my laptop. It isn't a huge deal (I can dismiss the alert and move on) but it is a consistent, recurring thing.\n. ",
    "cecoates": "User still having this issue:\n864118-zen\nAsked for more information.. User report in 989491-zen, sounds similar in the other direction (older desktop notes overwrote newer Android notes).\n\nChanges are made to a note in the Android app, but in offline mode.\nWindows app is opened, while the Android app is still offline.\nAndroid app is opened after phone WiFi is turned back on, sometimes accidentally, but no changes are made in Android at this time.\nThe older Windows notes will now sync to the Android app, overwriting the newer changes in the Android notes.\n\nAndroid (4.4.2) Simplenote Android app (ver. 1.5.6) and Windows 7 PC app (ver 1.1.3).\n. ",
    "RolfCl": "I am using Windows 10. The problem has been worse since upgrading to 1.1.2.. ",
    "rexpo": "Freshly installed Win10 Enterprise (build 1709), freshly installed Simplenote 1.1.2.\nHappens randomly, whether in bulleted lists or not.\nIt's especially fun when the cursor jumps while I'm hitting backspace quickly to delete a few characters. Extra cool that Ctrl-Z doesn't recover the mystery characters that I just deleted at the end of my note.\nAlmost 2 years and this still isn't fixed???? You do realise that this bug makes the program useless? It damages notes!!\nThank gawd I only need to use this Windows machine for a few days!. ",
    "ChrissiePollock": "Issue brought up again in #958281-zen. Requested again in #1118368-zen. Similar issue in #1220599-Zen\n\nSometimes when typing, the cursor would jump to the bottom of a note. Like when I add or change some text in the middle of a note, it would suddenly lose its place and appear at the bottom after the very last character. I'd have to put it back to continue typing where I need. Happens with longer notes, like 3000 characters (though, I'd think it's not too huge). I'm pretty sure it's not my fingers or anything like that, otherwise it'd happen in other notepads and text editors. Also, it have happened enough times to be sure it's Simplenote's glitch. . \n",
    "zoltanwerner": "Still happening under lates release v1.4. Jumps to end of note seemingly randomly.. ",
    "zhartus": "\nStill happening under lates release v1.4. Jumps to end of note seemingly randomly.\n\nThe same problem here.. ",
    "ebeloded": "Hey @drw158,\nThe menu can be hidden or auto-hidden (like in Slack or VS Code - you can press Alt to show/hide the menu).\nRelevant methods:\n- win.setMenu(menu) - Sets the menu as the window\u2019s menu bar, setting it to null will remove the menu bar.\n- win.setAutoHideMenuBar(hide) - Sets whether the window menu bar should hide itself automatically. Once set the menu bar will only show when users press the single Alt key.\nHope this helps to resolve the issue. The menu is a real eyesore on Windows and Linux.\n. ",
    "nsrosenqvist": "The implementation of this in Atom can be followed in the following issue thread: https://github.com/atom/atom/issues/2914\nThe support for hiding the menu bar in electron apps was added with the following pull request: https://github.com/electron/electron/pull/558\n. @natanielcz  It's not working for me, are you sure you're not using Unity and that it's just moved to the global menu? I still have no control of it in 1.1.0. This can't be that hard to implement, can it? Just a menu entry and keyboard event, right?. Electron is built on Chromium's Blink rendering engine right? The CSS ::first-line pseudo-selector works on textareas for Blink (and WebKit, I assume). I don't think it works for Firefox but that wouldn't be an issue since no code is shared with the official web app, right?\nHere's an example: http://codepen.io/anon/pen/NAwkAV\n. Unfortunately I don't have the time to do that right now. I assume that it would only apply for when markdown is not used as well, right? If you're familiar with the code base, which I am not, it should be pretty straight forward to implement this though.\n. Great! Thanks @roundhill, much appreciated!\n. ",
    "natanielcz": "Looks like someone already upgraded electron version in Simplenote and app menu is working as intended. At least on Ubuntu 17.10. I think that we may close this issue too.. @nsrosenqvist : you are right. I don't know why I thought that it works. I'll take a look after 8th of December when I'll have more time for that. . Maybe we should let a user set the width on his own? For example, we could add the scrollbar to change working area width.. Personally, I don't like it. It's really inconvenient for me to read so long lines.. This one should be closed. Bug was fixed in #305 :). Ubuntu with Unity is no longer developed and Gnome shell has no tray. \nShould we still consider this feature?. I let myself to take care of this one because it wasn't modified for a year. I didn't create AppImage installer because I think that still there aren't many people using this format. Instead I've added support for RPM. @probonopd if you think that I'm wrong and there is a lot of people using AppImage and FlatPak I can take care of this two installers too. \nI'd be grateful If someone could test changes from my recent PR because I don't have RPM based distro.. Ok. I'll try to create AppImage. It's something new for me because this is the first electron app I participate but I'll do my best ;). I've updated my pull request. We are able to build rpm, deb, AppImage and tar.gz packages. There are two new dependencies on Linux: icnsutils and graphicsmagick.\nI've also updated Makefile. Linux installers are put into directory /release. If it should be other location just tell me.. I've created PR for this bug. #652 . We should probably close this one. Fixed in #652 . @eduardohki: I did it in #422 because it was just one additional line. After merging my pull request we may close this request.. I've fixed issue with # tags on the left sidebar but couldn't figure out how to modify font size for the first row of the editor. Looks like it's hidden somewhere in draft-js editor.\n\n. Please add also tag: windows. @nemonein : I tried to reproduce this issue like you described but everything looks OK to me. \nTo reproduce:\n1. Opened Simplenote for Android (version 1.5.6)\n2. Copied some data from http://generator.lorem-ipsum.info/_korean2 and pasted to a note\n3. Opened Simplenote on Ubuntu (version 1.1.2 from snapcraft ) \n4. Result you can see below\n\n\n. Maybe it would be better to set options like this in application settings instead of using unclear for user inheritance?\n. It could be useful to add settings to default mode when markdown is enabled (edit/preview) so it could be used after opening a note.. I took care of this one. If I should change something drop me a line.. This is no longer an issue. If a note isn't selected then info button is hidden.. I'll take care of that after 8th of December.. ## Before changes\nComfy\n\nCondensed\n\nExpanded\n\nAfter changes\nComfy\n\nCondensed\n\nExpanded\n\n. 1. I thought about that and I think that expanded view is too high right now. So I think that point 2 can help to reduce used space in each view type. If we decide to group them like in Wordpress.com notifications we could avoid the Modified text.. Maybe we should display modification date as a group title when sorting by modification date is active.\nFor other sorting types, we could display colored bar on the right \n- green, when a note was modified in last 3 days\n- orange, when a note was modified in last 7 days\n- red otherwise \n\nOn hover, we could expand this bar to the right and show modification date more precisely\n. I thought about that a little bit and there is another problem. What shall we do with pinned notes? Should they be grouped too or maybe just listed one by one? . I've modified regex and extracted method isMarkdown as you suggested. I also renamed file note-title.js to note-utils.js. I'll take care of that after 8th of December.. @rodrigoi: I've fixed this issue. I've also removed #'s from the notes second line.\n  . Sorry, I've missed your comment. I'll investigate this issue.. Should work with recent changes. I've updated PR title. Generally, I added support for two new formats: rpm and AppImage. And move deb and tar.gz packaging from fpm to electron-builder. To make it easier for you during releasing a new version I updated makefile and added building deb, rpm, tar.gz, and AppImage to target linux.\nThis pull request refers also to #530.\nI think that we should also consider moving Windows and Mac installers to electron-builder to have it all in one place. Electron builder will allow us to make also Snap installer for Linux, DMG, MAS (Mac Application Store) and PKG for Mac, MSI installer, NSIS Installer and Web Installer but also AppX (for Windows Store) for Windows.\nHowever, there is still a bug in electron-builder electron-userland/electron-builder#1907 and application icon isn't visible in the Software / Ubuntu Store. . One more fix. We don't need copy icons manually so I've deleted that for Linux build.. I'll take care of that after 8th of December.. @rodrigoi: Rebased.. @rodrigoi You're right that electron-builder installed globally is currently required but I'm working on it. I removed electron-builder from global dependencies and will test a little bit different approach.\nEDIT: @rodrigoi: I've checked that and think that renaming PACKAGE_WIN32 to ELECTRON_BUILDER is not required. My npm packages installed globally looks like below:\nmaciej ~ npm list -g --depth=0\n/home/maciej/.npm-global/lib\n\u251c\u2500\u2500 asar@0.13.0\n\u251c\u2500\u2500 electron@1.7.9\n\u251c\u2500\u2500 gulp@3.9.1\n\u251c\u2500\u2500 nswag@11.12.13\n\u251c\u2500\u2500 typings@2.1.1\n\u251c\u2500\u2500 webpack@3.8.1\n\u2514\u2500\u2500 yarn@1.3.2\nand it still works well (tested on Ubuntu 17.10). Please verify that with my recent changes It will work for You.\nI've also updated docs (dependencies for MacOS and Linux) and added creating packages for x86.. @rodrigo, @roundhill @dmsnell : I've also created .snap the installer which could be put in the snapcraft store. Give me your emails and I'll add you to collaborators to my test Simplenote app on snapcraft so You can see and test installation from there.\nEDIT: I you don't want to post emails here I can send you collaboration link to github email.\nIt seems that someone already created snap for Simplenote but didn't update Simplenote to newest version yet. Maybe It's worth contact author and ask for passing application name to the Automattic team.. Lintian returns more thanks that one error. I'll compare my deb with deb installed from the website to check what else should be done. @roundhill which app did you use to install this deb? I can't reproduce that issue.. @roundhill You may be right about that. I have Ubuntu 17.10 and I don't see anything like that but I'll try to fix at least critical linter problems. It may take a while due to some electron limitations and my lack of knowledge about loading system libraries.. I removed that already. @dmsnell: Before my changes when we had no tags we were able to open left pane and click on edit button in the tags section. Then we were able to click again this time on Done button but actually, nothing was happening. Screenshots:\n\n\nAfter my changes, this panel looks like this below. Edit button disappeared.\n\nI'll change this ternary to if but according to that, I have a question: Don't You think that current beautifier settings are too strict? It looks weird when method arguments start line below its name and continue stretching our code.. @dmsnell can You tell me where are reported those *-zen bugs?. Those gifs looks nice. One day I had an idea to replace Simplenote editor and create something like Typora has. I mean that they created live markdown editor which doesn't require switching modes. What do you think about that? I think that more people without knowledge of markdown could use this advanced mode. Then we could extend it to have inline formatting options like Medium Editor.. @roundhill electron-builder allows creating appx  but I'm not sure that It'll work on Windows Phone. We should also check what are requirements to publish an app in the Microsoft Store. So We need to support only a desktop version in Windows Store? . @trustlix: Maybe we should add an option to disable closing to tray? . @dmsnell Look at skype if you're looking for example. . @cecoates : I tried to reproduce this one but I couldn't. I've installed Simplenote 1.1.3 via gdebi and It works well. Simplenote has been installed to /usr/bin/\n\n\n\n. Also with this approach, we will have to set this flag before each build. Maybe we should consider to have separate config for this flag for each build target?\nEdit: I see that electron-builder has some env files which could pass ENV variables to the build so maybe we could use them to create custom settings for each platform.. I suppose that we'd like to submit the update to the Windows Store after each version so It's a lot of work and changing values after each released version. We could specify many env configs such as:\n- appx.env \n- msi.env\n- deb.env \netc. and then just link specific env file in the npm scripts. . I'll check the deb which may be produced when new version will be released. If this dependency is not included I'll add the missing one. . This deb should install gconf2 dependency. Waiting for confirmation.. We could add dependent packages in electron-builder.json file in section deb -> depends like that:\n\"depends\": [\"gconf2\"]\nI'm not sure but maybe we'll have to add also \"gconf-service\" to this array.\nUnfortunately, I don't have enough time in upcoming weeks to check it out.. I would sugest to save previous app menu state which should be used. For example when I hide app menu I'd like to keep it hidden on the next launch. Exactly. This one is just a little bit extended to catch # at the beginning. We can't join them to one because we don't want to omit # for not markdown notes.. fixed. No. This is intended. Standard library for RegEx doesn't have named groups so I had to add a fake empty group at the beginning so in further part we can refer to the same indexes for notes in markdown and not. Few lines below I've changed indexes to match new regex [1] -> [2], [2] -> [3]. good questions. \n- I think that # # # # should be displayed on the list as # # # because this is a proper behavior of markdown. \n- nice catch. I'll change that\n- probably yes. \\s+ is a better solution. That was only moving few lines to the separate method. I did while making other changes.. Looks clearer. I'm on it. this isn't valid since my previous commit. I've removed this note.. [] are not required. You're right that this one won't work. Here is form that will work: /(?>#{0,6}\\s+)?(\\S[^\\n]*)\\s*(?>#{0,6}\\s+)?(\\S[^\\n]*)?/. Please take a look on that @dmsnell \nI think that doing one regex is better than making 3 but I'm not an expert.. You're right that with caching any approach should be enough fast for this simple task. But those regex's are not so complicated so, for now, I'll live it as it is. And I'll use non-capture groups instead of atomic groups which don't exist in js.. ",
    "algiuxass": "This is taking way to long to add this feature. It shouldn't be that hard to fix it. (I'm using Linux). ",
    "cweagans": "PR #1207 addresses this.. Linux user here.\nPlease no.\nSnap is a gigantic PITA. AppImage is a much better solution if one must be chosen. It just works without having to have a separate daemon running somewhere, so I'm not sure why adoption really matters there - they work everywhere.\nIf Simplenote is distributed only through Snap, I will not use it. It's just not worth it.. > Also, if you read my post I literally said snap and still keeping a tarball around for less common cases.\nActually, what you implied was that anyone that didn't want to/couldn't use Snap was doing something bizarre: \"You may want to still offer the tar ball distribution for Linux, at least for awhile, for people who are doing truly bizarre things\"\n\nCould you please explain why you think snap is terrible?\n\n\nIt needs a separate daemon running to actually function.\nThat daemon is incredibly power and resource hungry (or it was c. Nov 2018 when I tried it)\nThat daemon is unnecessary when AppImage works just as well, achieves the same goals, and does it without requiring a separate daemon.\nAlmost every single time I've come across someone advocating for Snap, it's always been with the pretense that they know better than you, that Snap is the clear solution despite other solutions being just as good and arguably simpler, and that anyone who disagrees is doing something bizarre and is enough of an edge case to effectively ignore.\n\nI don't have a problem with Snap as an option for other people, but I don't want anything to do with it.. I probably won't get to it for a while, so if someone else can do it sooner, please definitely jump in!. ",
    "rkwnyc": "Same behavior in the Linux app, version 1.0.1.  Would be better if tab key worked the same as the web interface (i.e., as a 4-space indentation)\n. ",
    "dcoleonline": "2708420-t\n. ",
    "jerrysarcastic": "2724788-t\n. @dmsnell great question. I had never seen a list of tickets links in a Github issue before this ticket, so doing what everyone else is doing.  To be fair I usually see this kind of thing happening over here:  https://simplenoteideas.wordpress.com/\n. ",
    "catkit": "Not sure what to do, as I don't know how to marking tickets as duplicates so just pasting yet another request:\n2770231-t\n. ",
    "balaziks": "Structured Markdown lists (IMHO killer Markdown feature) are impossible to use quickly and comfortably in the desktop apps due to the missing tab indentation.\n. ",
    "nfcampos": "@dmsnell this would be much easier to do once #370 is merged, in fact I've implemented it in another branch on top of that PR (see NoteContentEditor#onTab on https://github.com/nfcampos/simplenote-electron/tree/lists)\n. I see. The version running at that url looks pretty cool! Curious, anything in particular stopping you from replacing the web app with this?\n. this is already supposed to work in a browser, right?\ni cloned this repo, ran npm i, ran npm start and when i go to the app on the browser (localhost:4000) it redirects to app.simplenote.com... any idea why?\n. Thanks, sorry about that, should have paid more attention to the readme\n. Cool, I'll open a PR when I have something!\nIn the meantime, would you accept a PR updating this to use babel 6? the version you're currently using doesn't work with node 6\n. you could keep using node 5, updating babel would simply allow me (and everyone else) to develop using node 6, but it'd still be totally compatible with node 5, unless I misunderstood what you wrote?\n. but honestly I can just use node 5 for this, it doesnt realy matter to me\n. ok, no problem\n. opened PR replacing textarea with draft.js editor :) the link detection, styling will follow\n. I've added the url decorator now! :)\n. (this is apparently not working in safari for now (but works in chrome with no problems as far as I can tell). I'll investigate)\n. @dmsnell good point about splitting out the editor into its own component, I'd been thinking about that actually, I'll change it\n. screenshot after this PR\n\nscreenshot before \n\n. @dmsnell yeah I didn't write the url regexp but from my tests it looks like just a domain is not enough, you need the www before it, we can probably change that if you think it's worth it\n. @dmsnell I'll be away from a computer during the next week so I'll probably address your comments only after that, in the meantime if you find any problem or have any other comment leave it here and I'll take a look at everything then\n. @dmsnell about splitting the editor into its own component, what name should I give it? the obvious name NoteEditor is already taken...\n. @dmsnell I believe this is ready for a second pass :)\n. @dmsnell no problem about the time :)\nI actually meant to add a test suite for normalizeUrlsInMarkdownString but I didn't find any tests anywhere in the repo so I wasn't sure what test runner you guys wanted,etc. if you point me in the right direction I can definitely write some tests for it\n(btw, this isn't actually explicit anywhere so might as well say it, the reason normalizeUrlsInMarkdownString exists is so that all urls that are highlighted and clickable in edit mode are also clickable in markdown preview mode)\nlet me know if the version of normalizeUrlsInMarkdownString in my comment above is clearer, I'll try to make it clearer if it isn't there yet, but I don't there's any alternative to using regexs in some way for doing the url parsing\n. I'm thinking that maybe this PR could be split into 2, first replacing the editor with Draft.js, second adding the url-decorator. This way other improvements that could be made once the editor is Draft.js-based (eg. auto-continue lists, list items indent/outdent with tab, search term highlighting) don't have to wait for the url-decorator. Thoughts @dmsnell ?\n. ok, so I'll remove the url-decorator from this one. do I open the url-decorator PR only once this one is merged, since the diff won't make sense against the current master?\n. alright, I've removed the url decorator from this PR. This PR is now just replacing the textarea editor with Draft.js. All behaviour should be the same as before. I believe the only open question now is what to do in componentWillReceiveProps.\n. Thanks :)\nI can convert this to a class no problem, in fact that's how I usually write react components.\n. @dmsnell that was my mistake, I had already removed it a week or two ago but did something stupid with a rebase and lost that commit. Solved now. Sorry about the ridiculous commit history now, it makes next to no sense, should I just squash it all into one commit?\n. @dmsnell nevermind, after some careful cherry-picking, we now have a sane commit history again :)\n. (updated the draft.js version to the latest)\n. @dmsnell oops, this was correct before but i accidentally reverted it, fixed now\n. while you're testing I'd suggest to try the following things:\n- type in a note, with pauses of varying length (to allow the note to be synced), and make sure focus is never lost and the cursor never jumps to another place in the note (and text is never lost)\n- paste text in a note and see if it looks ok\n- copy text from a note, paste it somewhere else, and see if it looks ok\n- try to create a couple of really long notes (eg. I've tried a chapter from the great gatsby) and see if it still works ok with no pauses, etc\nhope this helps, I've tried all of these and they work correctly \n. @beaucollins latest commit should have context menu\n. @roundhill it appears to work for me, can you give more detail?\n\n. @roundhill that redirecting to the web app thing was actually pretty confusing for me when I first cloned this repo ;)\n. if you don't have a config file and open the development version of this repo served by webpack you end up being redirected to app.simplenote.com (open it in chrome)\n. @roundhill fixed\n. @dmsnell great :)\nI have some stuff done for tabs and lists, just needs a rebase, and I'll open a PR with it \n. (this should be much easier after #370)\n. yeah I was assuming this wasn't the intended behaviour (especially because the iOS and Mac apps don't allow regex search).\nif we wanted to support both regex and regular search one possibility would be to only do regex search when the search string starts and ends with /, eg. typing 2$ searches for notes that contain the string 2$, typing /2$/ searches for notes whose last char is 2.\n. but even if you end up deciding you do want regexp search the line where the RegExp line is created needs to be inside a try block, currently the app just crashes there if the typed string is an invalid regexp\n. @dmsnell for some reason i forgot to add escape-string-regexp to the dependencies but other than that this should be good to go then\n. for search that makes sense (and probably be marginally faster actually) but to support highlighting of occurrences of the search term in notes in the future a regexp with the g flag like we have now is the way to go, no?\n. yes I realise that, my point is that those 2 places would then have two different ways of doing the same search behaviour the app supports (exact match, case insensitive), one of the places would do \njs\nnew RegExp( escape( filterStr ), 'gi' ).test( content )\nand the other would do\njs\ncontent.toLowerCase().includes( filterStr.toLowerCase() )\nis that desirable?\n. > @nfcampos I don't think we have those two places, right? only a single place right now that searches notes?\n@dmsnell yes only one of those exists currently\n. @dmsnell done\n. @roundhill that link is a 404, for me at least\n. @dmsnell this appears to add a tab character on tab and do nothing on shift+tab, right? \nedit: or actually on a second look it appears shift+tab would also insert a tab char?\n. if it's not easy to remove indentation then I'd suggest for now just not doing anything if this is true https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/shiftKey \n. (this is another one that is better with draft.js, see https://github.com/nfcampos/simplenote-electron/blob/lists/lib/note-content-editor.jsx#L101)\n. some stuff isn't right with shift+tab\nsee this gif http://www.giphy.com/gifs/3o6Zt9ncYZ8oUFjnfa\ni first press tab, works as expected, then press shift-tab, and some text I had deleted (I think, or maybe it's the contents of the previous lines) gets inserted instead of the tab being removed\n(this happens sometimes, not always)\n. another issue, pressing enter with the cursor at the end of line with an indented bullet list item does the wrong thing, see http://www.giphy.com/gifs/3o7TKqHIejvq2zAs36\n. also, the behaviour described in the title seems to not be working for lines with bullet items without any indentation, see http://www.giphy.com/gifs/26uf9DOyE3ankSeWc\n. > thanks @nfcampos - we don't consider these lines to be actual lists unless I am wrong, so we wouldn't want a newline to add the - or *\n@dmsnell ah, i didn't know that. the mac and ios apps do consider those actual lists, i thought the behaviour here would be the same \n. this is great!\n. @dmsnell here it is\n. @dmsnell hmm, the thing is you never really want to have one feature without the other, list autocompletion is not that useful if you can't indent list items, indentation is useful mostly for list items, no?\n. or if you really want to split it I'd suggest making it one PR at a time, starting with the lists thing\n. @dmsnell opened the tab key PR at #400\n. @dmsnell i've rewritten this on top of the latest master, this is ready for your review again\n. @dmsnell i'll go through all your comments soon. can you just tell me if you'd like me to update this PR or the other? keeping both in sync is not really possible\n. (this one has a few changes relative to the other one, which I can easily port to the other one if you'd like)\n. @dmsnell please see the last commit and let me know if this change makes sense to you (the idea is for EditorStateModifier to return an EditorState with the SelectionState that is \"natural\" after the operation. Please let me know if this makes the onTab function short enough.\n. @dmsnell I've reorganised like you suggested\n. Alright, so the consensus is, when text is selected, and the user hits tab, replace the selected text with a tab character?\n. and when text is selected and the user hits shift-tab do nothing?\n. I've made the changes mentioned above\n. @dmsnell this fixes https://github.com/Automattic/simplenote-electron/pull/391/files#r82788408\n. @dmsnell should really add that eslint rule, this is the kind of thing linters are good at ;)\n. hmm, I don't have PgUp / PgDown keys on my keyboard (i'm on a mac) so I'm not sure how to reproduce this. The equivalent keys on the mac (cmd+upArrow / cmd+downArrow) do work for me to scroll to the top/bottom of the editor.\n. @dmsnell this looks great! ill try to leave more feedback one of these days when i get around to it but overall big \ud83d\udc4d from me\n. @dmsnell yeah draft-js is great, I really like it.\nit would be awesome if this same parser could be used for the preview tab, instead of marked, that way it'd be completely consistent (edit: actually this kind of makes the preview tab useless, it'd be a read-only view that looks exactly the same...)\n. I guess list autocompletion is needed as well for parity https://github.com/Automattic/simplenote-electron/pull/398. I'll add a comment ~~and some tests~~ for the regexp which should make it clearer\n. good point, will change\n. 1) form looking at the draft.js docs it appears that a ContentState contains info about both the contents and the current SelectionState of the editor. To avoid triggering a save when all the user changed was the selection, I think we need to compare the actual content which for our purposes (since that's how it is saved) is what's returned from getPlainText. Now the question is, do we want to compare against the note in the props, or against the previous ContentState?\n2) great point about doing this in a setState callback, will change\n. there was actually a mistake in this pattern, I've fixed it now. let me know if the comment is clear enough\n. actually there's no reason to pass any props at all I think, so I've just removed that line\n. I haven't done that but for a different reason \u2014 contentState (despite its name, this is actually not great naming on the part of draft-js I guess, see https://facebook.github.io/draft-js/docs/api-reference-content-state.html#content) contains info about both content and selection state. (edit: and for this purpose I only care about content)\n. there was a weird issue where the cursor would sometimes jump to the right when you were already focused and the focus method was called, this fixed it.\n. you're quite right, I'll remove it\n. I did this actually to keep with the renderMarkdown method above, which does exactly this\n(no chance of a TypeError here, see if ( ! this.isValidNote( note ) ) return; before it in render)\n. will change\n. you're right, this is well worth considering, another situation that would produce a props change would be the use of the revisions ui to select an older revision, do we want to for any reason to differentiate the action type of this v. getting a new note from the api?\n. will change ref\n. done\n. done\n. done\n. done\n. see my comment in the first post of this PR, can definitely roll back before this is merged\n. I agree, this version of this function definitely wasn't one of my best creations.\nhow about this?\n``` js\nconst mdRe = new RegExp(\n    '(\\(|\\]:\\s+)?(' + urlRe.source + ')',\n    urlRe.flags\n);\nexport function normalizeUrlsInMarkdownString( str ) {\n    return str.replace( mdRe, function( _, markdownLinkChars, url ) {\n        var normalizedUrl = normalizeUrl( url );\n    if ( markdownLinkChars !== undefined ) {\n        // if the first capturing group of the regex matched\n        // then this url is part of a markdown link\n        return markdownLinkChars + normalizedUrl;\n    }\n\n    // replace the matched url with a markdown link, to make it clickable\n    return `[${url}](${normalizedUrl})`;\n} )\n\n}\n```\nbasically this is modifying urlRe to also capture either ( or ]: if it appears right before the url. If either one is there it means the url is part of a markdown link so we shouldn't replace it with a markdown link to make it clickable because it is already clickable. makes sense? (this is definitely much faster)\n. could you expand on why you'd like this component to be defined elsewhere?\ndo you mean to use it for something else as well?\nif no, this does look to me like the clearest way of creating a decorator for a draft-js Editor, define the strategy and its component right next to each other (if not for any other reason because this way it's really clear what decoratedTextis inside the component, it's exactly what you called the callback with in the strategy).\nin terms of organisation I think what could be done is put note-content-editor and url-decorator in their own folder, url-decorator is only really meant to be used by note-content-editor. what do you think?\n. ah you're right, I was looking at the wrong place. should I change this both in renderMarkdown and renderEditable then?\n. > why isn't our Markdown parser detecting the URLs\u2026 shouldn't Markdown automatically linkify all the things?\nRegular markdown only linkifies things that are defined with the link syntax, either [abc](www.abc.com) or [abc][1]. Github flavoured markdown is the one that linkifies everything.\n\nalso, what about Yahoo - what happens here?\n\nwell in that particular case you get shown a link with an invalid href because that doens't match the url regexp. however, if that href was valid this would actually break :( and replace the href with a markdown url...\nI'm starting to think it's actually not a great idea to be writing this function, how about using a different markdown parser (instead of marked) that actually linkifies everything (eg. https://github.com/markdown-it/markdown-it)?\n. the only reason I did this to linkify everything is because it was kind of weird to see some urls highlighted in edit mode, switch to preview mode and now they're not urls anymore.\nbut you do have a point that this is no longer markdown (it's probably one of the myriad flavours of markdown out there).\nwhat do you think is more important consistency between edit and preview mode or sticking to pure markdown output?\n. no problem\n. you were right, this was working around the problem described here https://github.com/facebook/draft-js/issues/73#issuecomment-191394559\ni've removed it and added the proper fix\n. (a 3rd situation, and this the only one where we really have to create a new EditorState is when the Editor starts rendering a different note because the user selected a different one in the sidebar, here we definitely don't want undo support)\n. > mainly I would like to see their definitions outside of the object passed in to create the decorator. \nmakes sense, I've changed this\n. do you mean [-\\*] instead of [-*]?\n. it's not an amazing idea to maintain two separate (and similar) regexps for the same thing in each of the two functions, they're bound to get out of sync\n. ah you're right, nevermind then\n. /^(\\s+)([-*])([\\s\\S]+)?/ I mean it's better to use one regexp for both things, if the third group doesn't match then you have \"only the list item bullet without following text\"\n. what's the point of indent and bullet being in separate groups if you then concatenate them?\n. (actually it should be /^(\\s+)([-*])\\s?([\\s\\S]+)?/ to allow for a space after the bullet)\n. yeah maybe it's not worth it, i definitely see the point of simpler regexps, i just dont like the possibility of getting bugs from someone changing one of these without changing both\n. since you started using class properties these could all be turned into those and the constructor could go away\n. these can't be regular react event handlers on Textarea?\n. is there a reason lifecycle methods like this one aren't regular methods ie. componentDidMount() {? they definitely don't need to be bound to the instance\n. hmm, it does trigger keydown, see here a quick example, press tab while focused on that textarea https://esnextb.in/?gist=10f5e3b63353827d220fbe6c4bfe7c05\n. nope, you only need to bind class methods to an instance when you use them \"detached\" from the a reference to the instance, ie.\n``` js\nconst obj = {\n  abc: 2,\nboo() {\n    console.log(this.abc)\n  }\n}\nobj.boo() // logs 2\n// this is obj\n// this is akin to how react internally calls lifecycle methods\nconst boo = this.boo\nboo() // fails\n// this is undefined (in strict mode, in non-strict it's window)\n// because you're not calling this method on any object (and the function isn't previously bound to any context), so there's no context to pass to the function\n// this is akin to how event handler end up being called by react, because by doing <div onClick={this.boo} /> you're passing a reference to the function boo, like in const boo = this.boo above\n```\nlong story short, do bind event handlers, don't bind lifecycle methods\n. hmm, it works for me https://github.com/nfcampos/simplenote-electron/commit/a0873f388ca3325d556e994cd20aa09cfde93412 running it in chrome, weird\n. you have this diff in all your PRs I think?\n. this can also be render() { like the other lifecycle methods\n. since this is a single capturing group with the whole regexp inside it there's no need for it to be a group at all, you can remove the ( and ) and use prevIndent[ 0 ] below\n. this could simply be orderBy( revisions, 'data.modificationDate', 'desc' ) (orderBy comes from lodash)\n. how could code in componentDidUpdate solve something that happens \"after loading in the revisions the first time.\", seeing as componentDidUpdate doesn't get called after the first render, only for subsequent renders?\n. yes pretty weird indeed. I did checkout this branch locally and can confirm that commenting out that line behaves as you describe. Also noticed that, with the line commented out, if you click cancel after bringing it up for the first time, you see the slider move to the right place before the panel slides away, and if you bring up the panel again the slider is in the right position, so maybe it's something to do with how the state of the component is initialised?\n. sure thing, done\n. done\n. good point, changed\n. @dmsnell I don't think this is actually being used anywhere...\n. I'd usually agree with not being a fan of reassigning other things to the same variable, but I think in this case this is clear as is\n. in this PR on in the other?\n. hmm, I just made it like this because it's similar to Modifier\n. I kept the same names as the Modifier methods exported by draft-js (which operate on ContentState objects, the difference with these is that these do the same operations on EditorState objects by using push with the corresponding changeType\n. see this comment for explanation why I wrote it like this https://github.com/Automattic/simplenote-electron/pull/398/files#r82646392\n. how about using flow from lodash to compose these operations into a single function? eg. something like\n``` js\nconst removeBulletAndEndList = flow([\n  editorState => removeRange(editorState, ...),\n  editorState => forceSelection(editorState, ...),\n  this.handleEditorStateChange\n])\nif ( trimmedLine === '-' || trimmedLine === '*' ) {\n  removeBulletAndEndList( editorState )\n  return 'handled'\n}\n``\n. what do you think about this https://github.com/Automattic/simplenote-electron/pull/398/files#r82647506 ?\n. this was fixed in the other PR\n. @dmsnell variableidis not defined, I think you meantnoteId? maybe theno-undefrule should be added to.eslintrcto avoid this? \n. the changes in this file are not related to the rest of the PR, correct?\n. shouldn't this happen when the tags are loaded into state, otherwise you'll end up needing to useuniqeverywhere you render tags, which kind of defeats the purpose of having a central place to store state?\n. well,Modifier.insertTextitself works only on collapsed selections ( see https://facebook.github.io/draft-js/docs/api-reference-modifier.html#inserttext )\n. this one assumes this because my uses of it so far never need to operate on ranges that span across lines\n. sure thing\n. (strictly speakinginsertTextfromdraft-jsdoesn't move the selection anywhere because it operates onContentState, whileSelectionStateis managed byEditorState`)\nit does however have its own conception of \"natural\" selection following the modification, ie.\nContentState#getSelectionAfter(), which appears to be exactly \"Moves the selection to the end of the insertion\" like you wrote.\nThat behaviour is however not what we want when we insert a tab at the beginning of the line even though the cursor isn't at the beginning (eg. https://github.com/Automattic/simplenote-electron/pull/400/files#diff-d65a368b0648bee7bc77b758399fb23cR144).\nMaybe this is specific enough to indent/outdent that this should just live inside an indent/outdent function and there's no point in creating these custom modifier methods?\n. 1. in the mac app at least yes it it is a valid list even if if it has no indentation\n2. I made it work only with tab characters for simplicity but it can be changed\n. this would be faster if here you added \njs\nif (!search)\n  return undefined\n. creating the RegExp\njs\nconst query = search.toLocaleLowerCase();\nconst matcher = new RegExp( query, 'g' );\nshould be moved here for performance reasons (current code creates a new, identical one for each ContentBlock)\n. this doesn't sound good, I think we'd end up losing the current position of the caret when filter changes. But maybe it's impossible for filter to change while the note is focused? If so might still warrant adding a comment stating just that.\n. I know it's mutated but I believe exec will reset lastIndex to 0 after the last match (to be more correct after the first non-match) see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex so I do believe you can indeed re-use it\n. That is then the exact behaviour implemented in this PR\n. I was following this paragraph in the documentation https://facebook.github.io/draft-js/docs/api-reference-editor.html#cancelable-handlers-optional. good point, will change.. ",
    "seanzig": "One thing I do as a clunky work-around is to get a tab character in the clipboard and paste (Ctrl-V) it when I need it.  I use enough tabs in every note, and the autoindent feature from the Mac client keeps the tabs in there, that I have a tab character readily available to copy (Ctrl-C) in any note that I'm using.  The usability pales in comparison to the Mac client, but it's better than no tab at all.\n. ",
    "tiangolo": "Maybe this is related to #347.\nI think I'm having the same \"issue\". I can search for a term in \"All Notes\" and in the left column the notes get filtered to the ones having the term. But I can't see where the keyword is inside one of the notes. I have to read it all to find it.\nBut using the web app (with a browser) instead of the desktop app I can use the browser's search box and find the keyword inside the note.\n. ",
    "kristarella": "Received a support ticket requesting this, and confirming the behaviour that they can only search all notes, in Linux & Windows app.\n. ",
    "SiobhyB": "This also came up in 2994809-t.\n. This also came up in 818198-z. . This was also reported in 830155-z. ",
    "74c5": "Seems fixed in v1.08 on linux... searched word text is also highlighted within the note.. makes sense to me... \nWhen searching in open note, would there also be a hotkey to find next word?\nF3 or Ctrl-F again?. ",
    "PeterTheobald": "I disagree with that reasoning, I find wrapped lines much less legible than clean text running to the edge; But thank you for addressing this.\nAt 03:36 PM 4/22/2016, Dennis Snell wrote:\n\nDuplicate of https://github.com/Automattic/simplenote-electron/issues/269#269 \nThanks for the report https://github.com/PeterTheobald@PeterTheobald, but as of now we have limited the width of the text area for legibility reasons\n\u00ad\nYou are receiving this because you were mentioned.\nReply to this email directly or https://github.com/Automattic/simplenote-electron/issues/303#issuecomment-213563563view it on GitHub\n. \n",
    "nilsi": "Would also like to see this feature. Maybe like an option. I often paste code into simple note fore temporary storage, for me its getting harder to read when it breaks lines when it wouldn't in my code editor. Oh, wow for some reason I haven't updated in a while! Thanks!. ",
    "hirusi": "Having the same issue. Electron client on both Windows and Linux acts in the discussed manner. Would love a quick fix.\n. Same as #305 \n. ",
    "diazbastian": "I really like to take advantage of Simplenote responsive interface and sometimes becomes annoying to have to adapt the interface again and again. Thank you.\n\n. I think that depends on the installation process. In the case of @RobbieFM there is a *.deb package for Ubuntu that includes everything needed for the application to work correctly. For other distributions that we must perform a manual installation.\n@joshcjohns I recommend after installing Simplenote, for example in /opt directory, create a desktop entry with the necessary information. You can do this with a text editor or an application like MenuLibre.\nCheers\n. ",
    "fayad": "Thanks for the fix. Can you update the deb package.. ",
    "prat0088": "CTRL+M would be great.\n. Ok. As long as it gets a shortcut I'm happy. \n. Nearly the same request as #271.\n. ",
    "jcrben": "Ideally keyboard shortcuts are configurable.. ",
    "guilsa": "Why not treat Edit/Preview like browser tabs, so switching between them can be Cmd + Shift + [ OR ]. ",
    "mjio": "+1 on syntax highlighting support.\nAre there plans to also enable Markdown for the OSX application?\n. ",
    "rnewton": "According to the readme and the code, marked has gfm enabled by default. https://github.com/chjj/marked/blob/master/lib/marked.js#L1242\nTo get syntax highlighting, you need to add another library like https://github.com/isagalaev/highlight.js\n. Good call. Thanks!\n. I'm definitely open to suggestions on the theme(s) to pick. highlight.js includes a bunch. I'm basically trying to avoid picking things that are divisive. Some people like monokai and some people hate it. \nI'll admit that I didn't investigate light/dark as separate themes, but \"atom one light/dark\" might be a good fit. \n. I'm actually quite fond of solarized light/dark as an option instead. A little easier to read than the yellow on the light theme of hybrid. \n\n\n. Having never worked with web workers, I hesitate to jump on that right now...\n. ",
    "eblade": "Looking forward to it!\n. ",
    "geekpete": "GFM seems to work for me by wrapping code in ``` backticks.\nThis displays fine in the electron based client preview but breaks in the web version preview.\nCan we get the web version to have parity with this feature? \nI've previously been wrapping code in \\ . ",
    "martynchamberlin": "I'm noticing that in SimpleNote 1.0.8, we've lost spellcheck. Would love to have this back.. @Hywan Yeah. I am sending out emails with typos in them because the hassle of manually running a spellcheck is 2007. Nobody wants to have to do that. It should be automatic. . I personally switched to Bear. An editor that doesn't have spellcheck is ridiculous. . ",
    "Hywan": "@martynchamberlin :+1:\nOne of our user is asking to get spellcheck back on Windows, #3153710-t.. Apparently we have another issue of the same kind in #3128722-T. It implies Linux, Android, Windows, and the web version.. ",
    "belenos": "Any news on that? I'm using the Linux version and Simplenote still doesn't have a working spell check. That's a must-have feature for any decent text editor nowadays. . Bear is nice on iOS, I have tested it. I'm using Ghostwriter on Ubuntu, but it lacks a mobile app or sync between devices.. ",
    "m1aw": "I was able to debug the problem is in electron not being properly configured.\nI cloned the repo and launched the local version and had spellcheck in the browser naturally. So even if draft-js has spellcheck as true electron is not displaying spellcheck.\nI did some googling and tried to hack it to force spellcheck but I wasn't able to do it since I really don't understand much electron.\nI'm not sure if I will have more time to debug it today, but if I do I will post the results.. ",
    "khaullen": "Any updates on where this fits into the roadmap?. ",
    "deanhtid": "Just came across this app recently and I love it, but it really needs a spell checker. ",
    "timypcr": "I just found this app today and I agree needs spell check. ",
    "boubouhkarim": "I am using this app but it's really hard to use it without a spell checker :(\n. ",
    "mdrovdahl": "@drw158 @dmsnell I'm just getting caught up here...were y'all suggesting/confident that draft-js is already providing spell checking to the electron app, but for a configuration error? Or, is spellchecking is a gap which needs filling via something like https://github.com/electron-userland/electron-spellchecker?\nI can't promise I'll fix this...but, as a daily user of the linux/electron app, I'm motivated and hope to at least help zero in on what to fix, where and how.. Hmmm...ok, I just read https://github.com/Automattic/simplenote-electron/pull/692 and that makes me think that with draft-js possibly on its way out (in favor of https://github.com/Microsoft/monaco-editor), that the solution for fixing spellchecking is not going to be within the realm of fixing a configuration issue w/draft-js.\nI'll look into https://github.com/Automattic/simplenote-electron/tree/editor/use-monaco and see what the spellcheck situation looks like on that branch.... Related info here: https://github.com/docker/compose/issues/5003. Another workaround is to set the $PWD variable to the absolute path of your \"simplenote-electron\" directory with on the command line...eg:\nsudo PWD=\"/home/markd/dev/simplenote-electron\" docker-compose up install. Closing as this issue doesn't necessarily need action, more an FYI for others.. Just realized that by changing the logic from non-osx to linux and windows, I've inadvertently dropped other non-linux and non-windows platforms, such as 'freebsd' and 'sunos'.\nUpdate forthcoming...\n. Ok, now we have menu blocks for 1) linux and 2) not-linux AND not-osx\nThere may be a better way to do that comparison operator...I am not a JS developer =). Thanks @roundhill. I pushed the fixes and removed \"Needs Author Reply\" label. Ready for review again.. ",
    "mengfoobar": "@drw158  @dmsnell @mdrovdahl \ntry using https://github.com/kwonoj/electron-hunspell\nIt plays well with draftjs and it's pretty easy to setup. ",
    "gwsone": "What?! 3 years later and as a standalone app SimpleNote still has no spell checker?! What the heck?!. ",
    "j10sanders": "I'm on linux and Simplenote would otherwise be my favorite.  Need spellcheck.\n. ",
    "SoIidarity": "Still no way to add spellcheck to this application?. ",
    "erricgunawan": "I know this issue has been closed.\nBut just wanted to mention that a user reported they still have a problem with spellchecker on Windows: 1584054-zen\nI hope this implementation will fix the user's problem when it's released.. Thanks for checking in @mirka !\nI asked this question from the user in 1584054-zen to get more clarification.. Possible related report from 1252299-zen\n\nSometimes when i make a note on the MAC offline it doesnt quite sync to the phone (when I eventually go back online). \n\nUser asked if there is a manual sync process.\nI suggested making a small edit to the note when they get back online to \"force\" the sync process, as @rachelsquirrel suggestion here.\nWaiting for the user if the workaround works for them.\n. ",
    "geezzeer": "I can confirm that today, Nov 27, 2018, spellcheck is not working in Simplenote 1.2.1 on Windows 10.. Simplenote version 1.2.1\nWindows 10 1809\nSpellcheck is not working on Windows even though \"Check Spelling\" is checked in the \"Edit\" menu.\nMy notes are synced to an Android device, and spelling errors are marked there.. Miriam,\nThanks for the reply and for the advice. I thought I was on the latest version, but ...\nNow that I'm on v1.3.0, I'm getting spellcheck on Windows 10.\nThanks again!. ",
    "kobayashi": "That's problem on my desktop environment.\nThanks!!\n. ",
    "Trollwut": "This would make my household (4 persons) gladly switch to simplenote. :>\nAny word on considering this request?. ",
    "rafaelpimpa": "Would love to see this too!. ",
    "johnkjoseph": "In the meantime is it somehow possible according to #309 using GFM? Couldn't get it to work though.. ",
    "rik-shaw": "Yes, checklists would be great.  Unfortunately, the [ and ] are hard to get to on Android if it follows this syntax.  But I suppose a hard to use standard is better than no standard at all.  Maybe I need to find a markdown friendly Android keyboard? :-). ",
    "Topy44": "I agree that checklists would be great. Especially if they can be activated/deactivated by clicking on the box.. I was just about to open an issue for this - I can confirm this happens in Windows, and it is annoying.. ",
    "pedrojuk": "+1 for Markdown checkbox support. Would be very useful. ",
    "greatkithain": "Yeah, checkbox in Simplenote would be awesome!. ",
    "giannissc": "I was under the impression that this was already submited in the repository and would be inlcuded in the 1.1.0 update yet when i try to show a checkbox i only get this \n\n. The error can be reproduced if the first posts are pinned posts then the first non-pinned post will not inherit from them and instead it will inherit the default behaviour of non-markdown post. When can we expect this to be released on ubuntu?. I have been waiting for this feature for quite some time now so thank you for implementing it :). Keep up the good work then man. Your and your team's work will be well appreciated :). It actually does work but it has a bug. Let me elaborate:\n1. You create a checkbox in markdown like this:\n- [] Blah blah\n- [x] Blah blah\n2. The markdown texted is parsed into the equivalent html\n3. The html text is parsed and rendered into the checkbox\nSomehow step 3 does not happen and instead you only see the html text and not the checkbox that you are supposed to. ",
    "MorgothSauron": "+1 for checkbox support in Simplenote :-). I did not have problem with Simplenote yet, but reading this makes me think I should look for an alternative before a problem occurs. I'll have a look at Standard Notes for sure.. sync progress and status should be available on all platform where Simplenote ca run.\nI use 1Password and it gives sync progress in the notification area. usefull to chekc sync steps progress.. +1. ",
    "jooji-san": "This is a must, pls. I haven't lost notes so far. but I'm a little bit scared. the desktop app gives no information about saving and syncing progress, success. igrlas's suggestions are perfect. how can you create checkboxes? I'm typing [_] but it doesn't work. thanks, but it doesn't work. shows me this in preview: <input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"> test1\n<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"> test1\n<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"> test1\n<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"> test1. ",
    "toast018": "+1 for checkbox support in Simplenote. Made a Github account just to come here and +1 this. . ",
    "Laurent001": "+1 for checkbox support. ",
    "Robertght": "+1 #1236175-zen. +1 on this. Ref: #1428501-zen. To keep this topic alive, I can also say that it would be a very consistent experience across platforms to have it all enabled for all the notes. #1211522-zen. @mgalbritton Thanks! I'm not able to replicate this behavior on MacOS though. Are you able to?. Another request here: 1780353-zen\nWindows 10\nSimplenote 1.4.0. Another one in #1780297-zen \n. ",
    "sinisavukovic": "+1 for checkbox support. ",
    "virtadpt": "+1 for checkbox support, also.. This, please.. ",
    "weems74": "+1 I'm really wanting to switch from Evernote, but this is a big impediment.. ",
    "RobRobM": "On Ubuntu 16.04 Gnome 3.20 there is a icon\n\n. ",
    "amenk": "I installed it using the .deb in Xubuntu and in the taskbar, there is no icon.. ",
    "owcz": "\nA similar situation (note that Xfce's Whisker Menu uses the right icons but that the panel's Window Buttons plugin uses the generic white window icon)\nThe AUR maintainer said it was an upstream issue. An Xfce forum mod said that the app (Electron?) possibly had issues with the Extended Window Manager Hints (EWMH) spec (and recommended a hack\u2014xseticon\u2014for getting around it on my individual install). I found a few threads about this in the Electron issues repo (electron/electron/issues/6205), and tried changing the partial icon path to a full path and linking to a resized 128px square icon\u2014neither worked.\nPerhaps try NativeImage (rhysd/NyaoVim/issues/57) when setting the BrowserWindow icon?. As fixed:\n. Here's the state of the current dependency warnings:\nsh\n$ npm install\nnpm WARN deprecated node-uuid@1.4.8: Use uuid module instead\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nnpm WARN prefer global node-gyp@3.6.0 should be installed with -g\n\n\nnode-uuid: Latest Simperium is in use. Blocked by Simperium/node-simperium/pull/44.\nsh\n$ npm ls node-uuid\nsimplenote@1.0.8\n\u2514\u2500\u252c simperium@0.2.5\n  \u2514\u2500\u2500 node-uuid@1.4.8\n\n\nminimatch: Update electron-builder@16.7.1 in #542. Creates new unmet dependency warning for ajv discussed here: electron-userland/electron-builder/issues/1344. Non-issue?\nsh\n$ npm ls minimatch\nsimplenote@1.0.8 \n\u251c\u2500\u252c babel-core@6.21.0\n\u2502 \u2514\u2500\u2500 minimatch@3.0.3 \n\u2514\u2500\u252c electron-builder@2.8.4\n  \u2514\u2500\u252c electron-winstaller-temp-fork@2.0.5-beta.3\n    \u2514\u2500\u252c fs-jetpack@0.7.3\n      \u2514\u2500\u2500 minimatch@2.0.10\n\n\nnode-gyp: Tried to add \"preinstall\": \"npm install -g node-gyp\", which failed. Blocked by sass/node-sass/issues/1740.\nsh\n$ npm ls node-gyp\nsimplenote@1.0.8\n\u2514\u2500\u252c node-sass@4.1.1\n  \u2514\u2500\u2500 node-gyp@3.6.0. Updated to 1.0.7 through the Arch user repo and still having upload sync issues after logging out and in again. For instance, if on the Linux app I make new notes and other edits, other devices won't receive the new text. However, if I make edits on the web app, the Linux app will receive them (so download working better than upload). Moving back to web app now for stability.. mod+F is most often used to search within a document, as it is on webpages and as is in Evernote/Ulysses. If mod+F invoked a simultaneous view of all hits (as it does in Slack), I could see the parallel.\n\n\nThis isn't a complete duplicate of #301\u2014once that ticket adds \"search within note\" alongside the existing electron all-notes-search, they'll need different keyboard shortcuts, hence why the SN macOS native app assigns \"search within note\" to Cmd+F and all-notes-search to Cmd+L. I think it's smart to extend the native app's paradigm to the electron app (\"L\" signifying that the all-notes-search is similar to a browser's location bar). But at least it should be made consistent when 301 is resolved, right? . For parity,\n- [x] #412 - Ctrl+L to toggle search field focus\nthough someone has argued that the Mac default should change too\n- [x] Link detection like in iOS or Mac app #368. Also #624: search within note (the macOS native client has both Cmd+F to search within a single note and Cmd+L for the app's main search bar, to search between notes). This could be a VirtualBox issue. Have you tried other Electron apps or asking on their forums?. Confirmed in latest Linux release. valid-jsdoc wants a return description for this line. ",
    "davidwolfpaw": "An example of where this would be useful: If I want to write something and share it with someone else in Markdown format. The version that can be shared through the app has HTML as opposed to the Markdown. To get the Markdown file I need to copypaste the content into a text editor and save it as a new file. As the alternative is downloading every note, unzipping the archive, and discarding all other notes after finding the one that I need, if incorporating an individual export feature isn't too onerous, I think that it would be useful.. ",
    "mambusskruj": "It would be really nice. First of wall, web app should highlight inline code and\ncode \nblock. ",
    "daveismyname": "+1\n. ",
    "TwisterMc": "I'd love to see this too.\n. Markdown would be nice in the Mac app too.\nhttps://github.com/Automattic/simplenote-electron/issues/329. This was shared with me. Maybe it helps?\nhttps://github.com/electron-userland/electron-spellchecker\nelectron-spellchecker is a library to help you implement spellchecking in your Electron applications, as well as handle default right-click Context Menus (since spell checking shows up in them). This library intends to solve the problem of spellchecking in a production-ready, international-friendly way.. ",
    "bopinto": "Since there is already Markdown for linux and windows, what's stopping from having it to Mac?\n. ",
    "titoesteves": "In looking at a previous blog post by simplenote(https://simplenote.com/2016/03/29/simplenote-for-windows-and-linux/), it states the windows and linux versions were open sourced. Since they did not mention the mac version, I assume they did not use the same code the mac and linux versions use for markdown support. Again this is only an assumption given that the mac source code is not readily available. Which brings up another point. The mac source code should be open source especially since the windows and linux versions are. I will create another issue to open source mac source code\n. @roundhill I created this issue because I was unable to find a previously created issue. Can you provide a link to the open issue?\n. @roundhill, thanks for the reply. Is there an ETA on when markdown support will be added to the mac app? Also is there an ETA when the mac app will be open sourced?\n. @frenchbread Glad to see it is now open source. Does this include markdown support?\n. ",
    "frenchbread": "@titoesteves It's here: https://github.com/Automattic/simplenote-macos\n. @titoesteves No, it doesn't.\n. +1 for electron build for OSX. (@randallagordon has a point)\n. ",
    "randallagordon": "Any plans for an official OSX build of this Electron app?\n. @roundhill I imagine it'd be easier to support a single Electron app targeting all platforms versus multiple apps, but that could easily be assuming more than I should about what y'all are up to! I'm partial to Electron since I'm a JS dev, but I mostly would like to get my hands on some tasty, tasty Markdown support. \ud83d\ude04 \n. ",
    "marcphilipp": "+1 for an electron build for os x, too.\n. ",
    "oravla1972": "Hi, sorry but I do not understand, Is there a way to use Markdown in simplnote for MAC?\nthanks\nAlvaro\n. ",
    "zky829": "Any ETA on markdown support for the macOS app? Trying to use Simplenote instead of Evernote. Thanks!. ",
    "damiensawyer": "+1 for OSX electron build to bring the three platforms into parity.. Awesome!! Thanks!!\n\nI welcome VSRE emails. Learn more at vsre.info\nOn Tue, Mar 7, 2017 at 7:12 AM, Dan Roundhill notifications@github.com\nwrote:\n\nYou might be interested in this \ud83d\ude04 https://simplenote.com/2017/\n02/14/try-the-new-macos-beta/\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/issues/329#issuecomment-284517475,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2ZqyYxk8Knv0MsdFHS60r4D-xXrDScks5rjGilgaJpZM4JAaBr\n.\n. \n",
    "stevegray": "@roundhill The beta works great but its version number is now lower than the most recent number.  Did the \"beta\" feature get dropped?. @roundhill Thanks for the reply.  So will the beta be extended and maintained?  Or is it a \"one off\" demo of features?  Just trying to understand what the strategy is to incorporate Markdown into the OSX version.. ",
    "seaneking": "Bit late to the party but just wanted to voice a strong -1 for replacing the native MacOS app with this Electron one. Electron wrappers are much slower than native counterparts, and having both the native app and electron beta side by side the difference is very noticeable. For a note taking app, whose only real job is to process text, performance is a key feature. And it's a pretty fundamental problem with Electron's weight (c.f. Atom vs. Sublime). Electron apps also have a tendency to be huge memory hogs, another thing that a simple note taking app definitely shouldn't be.\nCan understand the benefits of a single cross-platform codebase for desktop, and if you need to replace the MacOS app with an Electron distro, from a maintainability/viability standpoint, then okay. But I wouldn't see it as a goal to aim for from the user's perspective.. ",
    "ericsoco": "No clear place to +1 on this thread, and it's been 9 months since the last comment, so...\nWhat's the plan for Markdown on OSX? I see the > 1-year-old Electron beta, but...not clear what the actual plan for OSX support is here.. ",
    "AntonioIT": "I do agree. This will avoid markdown tags to be displayed in the list of the notes (in the left panel).\n. I do not see the + icon. Instead I see the attached screenshot of my tablet.\nThank you!\n-- Antonio\nIl 13/lug/2016 17:46, \"Dan Roundhill\" notifications@github.com ha scritto:\n\nIt is a + icon in the app, unless I'm missing something:\n[image: screen shot 2016-07-13 at 8 45 36 am]\nhttps://cloud.githubusercontent.com/assets/789137/16809743/3da51baa-48d6-11e6-8c29-506300d8411b.png\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/issues/339#issuecomment-232397672,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ATZJfOFHCVJLg2bqBPsc4DYDblv0aZFcks5qVQhVgaJpZM4JIBMB\n.\n. \n",
    "teemune": "I'm using Windows client and it keeps logging out, without a warning. After I log back in all the changes I've made are gone. This makes the app unusable for me.\nAndroid client stays logged in without a problem.\n. ",
    "rohzart": "I'm using the Desktop App on Windows 10 and I've lost my notes/data following these below steps:\n1. Updated to 1.0.3\n2. Noticed that notes weren't syncing at all\n3. Logged out and logged back in\n4. Notes started syncing but lost almost all my 'un-synced' notes\n5. Since, the some of the new local notes did sync (just 2 actually), I think the rest of them are still lying somewhere on my local but I'm clueless how to access them (from: C:\\Users\\AppData\\Roaming\\Simplenote* )\n. If lucky, you might find a \".bak\" file in the folder \"C:\\Users\\AppData\\Roaming\\Simplenote\\IndexedDB\\file__0.indexeddb.leveldb\". That's the one which has all \"lost\" data just hilariously transposed and weirdly encoded (supposed to be utf-8 but I not by the looks of it). \nIf you don't have  a .bak file there, give up. :(\nToo much time lost. I need to learn leveldb to extract my data from this point. Any support would be so very welcome. \nSome info to get other a head start: SimpleNote uses Electron (atom shell) which uses Chromium which implements IndexedDB which uses LevelDb (key/value store). I suppose the .bak was created by chromium \"cause things could do wrong\".\n. Hello @marianoju, I got an ubuntu VM running, installed simplenote and found that the equivalent path for ubuntu: \"/home//.config/Simplenote/IndexedDB/file__0.indexeddb.leveldb/\". This just took me 15mins to figure out and I really hope you find a \".bak\" file there. I have made a copy of that and kept it aside to try recover my data as and when I get time. I'll update this thread as and when I do.\n@dmsnell : You're welcome. Is anyone looking into helping people recover data while I know for sure there's a prrretty good chance of successful recovery (using the same \".bak\" file)? Also, I'm more inclined towards using levelDB to work with those files' data and not indexedDB. Please do correct me if I'm headed in the wrong direction. \n. I did learn to work with leveldb and when I attempt to connect/open the database directly using level npm package in my nodejs program, it fails since the default comparator \"idb_cmp1\" is different from what was used to \"encrypt\" the database. In the code below, the second line throws this error.\nvar levelup = require('levelup')\nvar db = levelup('./<path to your database>/file__0.indexeddb.leveldb')\nAt this point, @dmsnell , I'm curious if you know how (or where from) one could retrieve the comparator that simplenote sets for setting up the leveldb?\n@marianoju : You may use levelui to work with the database. This works well on ubuntu and doesn't need you to learn leveldb. I haven't been able to run this on windows and I might try it on ubuntu \"someday\". So, I'm not sure if this would help retrieve your data but I guess it's worth a try.\n. I've not been able to attend to this since long and I'm giving up. :/ Thank you @dmsnell, @marianoju. Cheers.. ",
    "GitarMan": "Just lost the past month's worth of notes due to this same issue on MacOS. Desktop wasn't syncing with online or my phone. Logged out and logged back in. All my notes were gone.\nJust upgraded to the latest version so hopefully it's fixed now. The notes must have been stored locally somewhere, but I can't find where. I guess they were cleared out when I logged out?\nThis was all pretty frustrating. If this happens again, I'm going to have to switch to something more reliable. It's a shame because I really love the simplicity of this app.. @marianoju Switched to Google Keep. More features, most of which I barely use, but it integrates into some Google products, and I trust the tech not to fail.. ",
    "Arty2": "Confirming this issue. Very disappointed about this; Atom doesn't seem to have the same issue.\n. ",
    "sstil": "Confirming it's still the same, none of my shortcuts (mostly Win + some other key) work. Like Arty I've also tried other Electron apps (Slack, Headset), they work just fine.\nI can imagine the need for a deep keyboard hook (maybe for overriding the Tab handling or something like that) but disabling the other handlers and hooks is just bad form in my view.. ",
    "rezzap": "We have another user requesting this in #1322140-zen\n\nI want to ask you to fix the layout problem in published notes for middle-eastern languages like Persian and Arabic. \nWhen I publish my notes in Persian and check the public link in my browser (Chrome), they are not in \"Right to left\" layout and it really bothers any one who reads my notes. \nCurrently they are being presented like English Text, but in languages like Persian and Arabic, It should be right aligned some how.\nCould you plz solve that issue? \nI'm working with simple note alot and it's becoming really annoying. \nI would be glad to help if you needed extra informations about the issue.. \n",
    "axil": "I second that. It would be a great step forward in usability.\n. ",
    "alexjgustafson": "Relevant to #2736296-t\n. It is - but we provide both the clickable and searchable option in web app. Only the clickable on desktop.\n. ",
    "elexpander": "In my opinion the search bar should search content and tags by default. This way you can find any note related to a word even if the word is not part of the note content.\nThe tag: prefix would still be useful if you want to search tags exclusively. Although this feature is already provided by the tag side bar as they said.\n. ",
    "3vivekb": "I rewrote my issue to improve readability!\n. ",
    "gatestone": "Yes indeed! I would really love to swipe down on iPhone to search for a simplenote! Spotlight supports dozens of my applications but not Simplenote app. It can't be that hard?\n. ",
    "hmijail": "The Simplenote blog post at https://simplenote.com/2017/01/16/ios-and-macos-update-now-available/ mentions that Spotlight is supported in iOS since January 2017. No mention of Spotlight in macOS, and this bug report and the lack of news makes me think that it's still not supported - is that right?\nAny plans to support it?. I was a long-term Simplenote user. I switched to macOS Notes about 3 months ago because it offered some features over Simplenote (like Spotlight integration). But Notes has its own share of bugs and problems, and Simplenote has grown enough of those missing features to give it another try. Alas, there is no way to import notes into Simplenote, so I can't migrate back.\n(Exporting the notes from Notes is not trivial in itself, and I already opened a bug with Apple about that, but still might be doable through AppleScript. But without a way to import into Simplenote there's no point... please don't make me script the GUI ;P)\n. ",
    "Gen4040": "Hello!\nIf this is design implementation, please add some options for user that not need this behavior to have possibility to work on full page width.\nThank you in advance! \n. ",
    "hedgefield": "Seconded, the margins on the windows app are crazy wide. This is not the case in either the webapp or the mac app, which look great.. Same problem here. Was supposed to be better in 1.0.3 I think but I'm still seeing it. Only logging out and back in again updates the list properly.\n. So far it seems for me 1.0.4 solves it.\n. Nope 1.0.5 still has the problem.\n. What usually happens for me is I start a new note on the iOS client, or maybe the webapp or Mac app, and then a few days later when I get around to opening the Windows app, it doesn't sync. So I go into options and logout-login and then the list gets updated properly. I haven't tested extensively with then making more changes across the various platforms, but once the windows app is up-to-date I think it syncs what I do okay until the next time I edit or newly create something via iOS (that's where I mostly use Simplenote).\n. I got around to installing it, and right away it loaded in all my most recent notes, and I haven't used the windows desktop app in weeks and changed a ton via the iOS app, so it's looking good!. Did you try the 1.0.7 beta linked above @raniesantos? That fixed it for me.. ",
    "salehe": "One of my notes is a reading list with lots of URLs. It is really hard to follow with some long URLs here and there.. ",
    "supernovia": "I agree with having shorter lines for readability (except in the case of long urls).\nWhat if just the left margin was removed as requested here? It would leave lots of white space on the right, but I think it wouldn't look as bad.. Reported in ticket 707395, too.. ",
    "sashastone": "User's reply to Jesse's message  1292890-zen:\n\ntotally can understand folks not wanting to have lines of unlimited \nlength, but I would argue that's a totally different issue than having \nthe left side margin vary like that.  In other words, keep the left side \nmargin fixed (and close to the list of note names in Windows) but go \nahead and wrap things where you all deem best on the right hand side.  . No notes displaying after password change on Microsoft Surface running Windows 10, even after uninstalling and reinstalling the app: #1341102-zen. \n",
    "xidianwlc": "because of electron api is change\n. ",
    "artivilla": "Were you able to get this to work? Having the same issues.\n. ",
    "DoTheEvo": "\nDo you mean that you do not like having both the Edit and Preview modes when you have MD enabled? Do you want editing and preview of MD all in the same view?\n\npretty much, yeah\n\nCurrently, once you click on a note you should go straight to Edit mode unless you previously selected Preview.\n\nwell, that just means I need to be in edit mode already so I am in edit mode when I click\nI am probably too demanding, these are simple notes afterall...\nbut what I would prefer instead of having \"markdown view\", I would just have toolbar where I could make text bold, or make unsorted lists, various highlight text, make url... all of this in the same view as the one I am always in. The same way onenote, evernote, or zim have.. just less, simpler\nits just floating idea...   it would be probably too rough change to go from plaintext with some markup options to something that I described, where the note could not be just displayed - \"as is\" on a smartphone\n. ",
    "bro1": "Hi,\nI tried to follow those steps and no, it's not reproducible with the steps that I have described in the original issue report.\nHowever, at this stage I still have a very similar issue:\n- Online application access\n- 2 Android devices (Both of them showing everything as up to date)\n- SimpleNote 1.0.2 on Linux (has all the notes)\n- SimpleNote 1.0.2 on Windows 7 (with strange behavior):\na) it does not have any notes that I have added over the last few days through other clients \n  b) it has all the tags that I have added in other clients\n  c) it still has tags that I have removed using other clients\n  d) I have added a new note (Note A) through Windows client today and the note ended up in all other apps (Android and Linux) - this indicates to me that the app is connected to the internet and manages to connect to the cloud to do some kind of synchronisation.\n  e) Today I have modified Note A in Linux app\n  f) Those changes showed up in all other apps, but not in the Windows app :(\nIs there any technical information that I could extract that would help to investigate this?\n. More development on this issue:\nLinux client got out of sync as well:\n- the notes that existed in Linux client still keep synchronising \n- new notes added through Linux client show up online and in Android\n- any new notes added through other clients do not show up in Linux\n. I have jus upgraded my Linux client to 1.0.3 (+ log-out + logged in ). This resynchronised everything. I'll check if that makes any difference in the synchronisation behaviour.\n. It was all working fine for a few weeks after upgrading to 1.0.3 on Linux Mint 18. \nHowever the issue reappeared today again:\n- I added a note on my Android Simplenote at around lunchtime\n- Launched Simplenote on Linux machine several hours later and the note did not appear in there\nCan the developers provide any info how to capture any useful diagnostics? Logs/command line flags, etc.\n. OK, I downloaded Windows version and there does not seem to be any useful information displayed in the console. \nAnd I still have the same issue: \n1. added a note in Android yesterday.\n2. started Windows application today (the version from https://cloudup.com/files/iGgHkFjgdzK/download)\n3. the note that I have added yesterday is not there\n4. added a test note in Windows it appeared everywhere it showed up in android as well\n5. added a second test note in Android it showed up in Windows too. But no changes in the console output. See attachment below:\n\n. Hi, it's sporadic.\nI am not sure if it's just me finding false patterns, but the two scenarios that I think I may have noticed that precede the missing notes in Desktop based apps are these events:\n- adding notes on Android by sharing note from another app to Simple note\n- adding notes on Android phone while on mobile connection\n. Thanks... I have been using this beta (Linux) version for 8 days and have not had any synch issues.\n. ",
    "chainedghost": "I have the same issue on Ubuntu 16.04.\nThe web app and android stay in sync. The desktop app doesn't pull the changes made on the other apps, but it does send changes.\nI end up with older versions of the note on all devices whenever I open the desktop app.\n. A quick check after upgrading to 1.0.3 and it looks like the issue is resolved.\n. Nevermind, after the first successful sync, the issue is back again.\n. It seems to have something to do with the timeline. You should be able to reproduce with the following:\n1. Create note on any device, except the desktop app.\n2. Editing the note between a web browser or android app keeps edits in sync so that the last edit is seen on the next device.\n3. Open the note on the desktop app and it is up to date. Make edits.\n4.Opening the not from android or the web browser will show the edits made on the desktop app. Make edits.\n5. Open the note on the desktop app. The edits made on the other devices are gone. If you just open the note on other devices at this point, your previous edits are also gone. Everything defaults to your original desktop app edits. At this point I also noticed that if I take the timeline back a tick, the latest edits made on the other devices show up.\nIn other words the desktop app defaults back to the last edits made on the desktop and not on other devices, but those edits are available in the timeline.\n. ",
    "jacklenox": "This affects me too. Using Elementary OS (based on Ubuntu 16.04), with 1.0.3.\n. ",
    "zorgeus": "I have the same issue.\nSync is fine for Android and iOS, but Win7 client doesn't show notes that was added from Android.\nSolution: Logout/login on win7 client.\nNo proxy.\n. ",
    "noamelf": "I  encounter this issue too :disappointed: (also sporadically) \n. ",
    "Harrri": "Hi evrybody,\nI'm now using 1.0.5 and still have the problem.\nThe only way, to get notes created on android into linux-simplenote is to delete ~/.config/Simplenote/IndexedDB and restart simplenote.\nMy proposal: there must be a subroutine in your code, which builds up the local database in ~/.config/Simplenote/IndexedDB when it's missing. Why not add a \"sync\"-button which does just call that subroutine?\nThanks for reading\nHarrri\n. ",
    "chrisfromthelc": "A user is reporting the same issue with the 1.0.5 version on Linux (Fedora 24 & Arch Linux).\n\nI have created few new notes on my phone (android app) and I can see this notes on your server but linux app (on two computers - fedora 24 & arch linux) does not show new notes but I can see new tags that are defined in this new notes... When I create new note in linux app it is immediately on your server and I see this new note immediately also on android app and on another computer with linux app. It seems to me that linux app has trouble to sync new notes that are created through android app?\n. Derp. Yes. I'll repost there.\n. \n",
    "mankurt": "Have a similar issue. Notes created or deleted on android & mac not updating on linux. Using simplenote 1.0.5 on archlinux. Signing out of the simplenote app and signing back in re-syncs everything correctly.\n. ",
    "zeke": "Has anyone been able to reproduce these issues on the macOS Electron Desktop client? I am going to give it a shot.\n@dmsnell, @roundhill any pro-tips on how to enable more verbose dev debugging in the Electron app?\n. See also https://github.com/Automattic/simplenote-macos/search?q=electron&type=Issues&utf8=%E2%9C%93\n@dmsnell let me know if you need help making it happen.\n. Which issue specifically? That link is to the repo's project view.\n. Got it! Will look into it.\n. So I just read through #354, #384, and #385. From what I can tell, it appears that these syncing problems are only affecting the Linux and Windows desktop clients (Electron), whereas no one is mentioning the Mac client (Native).\nI'd going to try to reproduce it on macOS Electron.\n. ",
    "marcorighi": "Year 2018. Android Client do not sync notes with Linux and website data. It remains in a not sync status and it is not possible sync it!. ",
    "nefory": "I know this is late but apparently this error has to do with the way you set your callback to 'ready' event. \nInstead of passing the function instance \u2018callback', you might had passed 'callback()', which caused the app to call the callback function once the set callback is executed, which happens before 'ready' event. ",
    "october21": "\nTo there\n. > I'm not sure how much we would end up doing to meet specific distribution\nDo it for Unity and Gnome because these desktop environments on most popular distributions.\n\nhave you tried AllTray?\n\nThird-party not cool. This is a task that should do the application\n\nwhat would we put in the tray? I can think of an option to start a new note and maybe one to exit out of the app. Any others?\n\nI think create note, open main window of application and exit.\n. ",
    "sercba": "Please!\n. ",
    "lekseven": "+1\n. Same issue. The bug makes almost impossible to format code sections in markdown mode.\n. ",
    "dougmorin": "I'm surprised this hasn't gained more traction.  This is going to be the best way to get users to migrate away from either evernote or icloud.  . Where I agree with what you say @dmsnell, unless you provide an import utility you're not going to see the normal influx in users who might be willing to try the app with their existing notes.  Especially someone like me who has a ton of notes.. This was for the mac os version of simplenote.  . @drw158 And just to confirm, it's not when you have the cursor inside of the body, but it happens when you click on the title of the note with your mouse and then press the delete or backspace key.. Version 1.1.8 (1182). ",
    "seanmmasters": "Random new user here: I'll cutover to Simplenote and keep Evernote as an archive. See how far I get before going insane. For reference I have about 5,000 notes in Evernote, but anything actionable I'll just make new notes/lists for and then the rest is just reference material.. ",
    "nebososo": "Requested in #1162186-zen. ",
    "DrSpaldo": "I would also like to see this. I would have hoped this would take priority over exporting (losing your users) and other features. Importing notes means you can get more/new users. I would like to try your note product, but, without the import function there is no way I can try it. I can only suggest this feature be given priority so you can gain new users.. I don't mind if it is close to tray or minimize to try. Any chance of either? It looks like the above #710 feature was closed?. ",
    "DrAxelbauer": "+1 I would also appreciate this...I am still working with Tomboy which is pretty outdated but still the best for me ;) Import function from html or whatever would be great!!!!. ",
    "ggyanez": "+1 to this request please!\nThis is a must. For example, some of us would like to use Simplenote as a private/protected daily journal, and having this feature would be highly appreciated.\nBtw, after trying Evernote, Google Keep and others, Simplenote is the best. Keep up with the great work!\n. ",
    "memeplex": "The web app neither shows urls as links.. ",
    "tmchartrand": "this would be great on Linux too!. This is definitely the right decision for a default, but it would be great to have the whitelist be user-modifiable to allow for other use cases (file and other protocols). ",
    "laoyuan": "need this!. search in current note, and with \u02c6 | \u02c7  buttons like Chrome. It's very important for me. This problem may be solved whth #624 and #983. ",
    "crankygeologist": "I would likely switch from the native Mac version to the web app or Electron flavor if they had if link detection.. Spelling and grammar functionality, please.. ",
    "roman-yagodin": "Vote for it!. Vote for it! Could be nice to have for any desktop OS version.. ",
    "beeblebrox3": "Do you have a date when this will be available in the app?\nThanks!. ",
    "tkuraku": "This is a must\n. ",
    "naxsooley": "@kaepuo I'm using Simplenote v1.0.3 and it works well under Ubuntu 16.04.1 LTS.\n. ",
    "fregs7": "I achieved that in a rather hacky way by modifying the resources/app/dist/app.js file.\nYou have to look for the following part:\nnamespace: 'App',\ninitialState: {\n    editorMode: 'edit',\n\nAnd change edit to markdown.\nOf course, this is totally a hack, but I want this behavior and this is the only way to have it, as there will be no support for this apparently. I wonder why.. ",
    "rob-maidment": "So, we fixing this? I think edit should be the default, principle of least surprise in a note-taking app\non ios mobile it's not (and cannot be) the default, don't know about droid but I'd guess also a swipe-left only. ",
    "TileHalo": "I was thinking LaTeX or AsciiMath style. And it is not supported by markdown.\n. ",
    "nmabhinandan": "Whyyy? You only need to render it. No backend changes are required!!  \ud83d\ude25. ",
    "cossio": "Please bring math support!. ",
    "honghuzi": "We really need math support in Simplenotes.. ",
    "rustykeyctrl": "I too have the sync issue with Windows 10.\nFinally had to copy and paste from web ver to desktop ver. Thanks for the info going to try it on my computer see if it's working.\n. Sry I'm a beginner here but really intrigued with git and for the most part don't know these things that's why I'm watching this thread maybe I can learn it as I'm learning git.\nI won't summit any other then feedback to learn but my sync status is computer in the shop.\nI'd appreciate any help and if it not ok to give any feedback just reports things I'll understand.\nThank you.\nHave A Great Day\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Victor Evans\nOn Sep 17, 2016 2:38 AM, Victor notifications@github.com wrote:It would be nice to indicate somehow sync status.\n\u2014You are receiving this because you are subscribed to this thread.Reply to this email directly, view it on GitHub, or mute the thread.\n. Thanks for the tip I'll try that if the problem persist\nHave A Great Day\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Victor Evans\nOn Sep 20, 2016 2:09 PM, Tim Hengeveld notifications@github.com wrote:Same problem here. Was supposed to be better in 1.0.3 I think but I'm still seeing it. Only logging out and back in again updates the list properly.\n\u2014You are receiving this because you commented.Reply to this email directly, view it on GitHub, or mute the thread.\n. ",
    "decadence": "It would be nice to indicate somehow sync status.\n. @neelkadia Hardly. I don't use web version at all.\n. Guys, I'm going to unsubscribe from this issue because I don't use Simplenote anymore so you can close this whenever you want.\n. ",
    "neelkadia": "@Decadence I think you can merge the issue with #384 this one. \n. ",
    "raniesantos": "I use Windows 7.\nThe desktop electron app of Simplenote always fails to pull down new notes.\n- When I edit already existing notes from Android app or the web app, the electron app syncs just fine.\n- BUT when I create a new note from Android or web, the electron app NEVER SYNCS THEM.\n. Oh and btw, it has already been mentioned but this is also true in my case, logging out and in again temporarily fixes the problem.\n. @dmsnell I tested simplenote just now. It seems to have been fixed in my case.\n. Just when I thought it was fixed, I'm here again. (v1.0.6 on Win7)\nThe only details I'm able to provide right now is that I haven't used it for several days and it suddenly won't sync again.. @dmsnell Yes, I think it definitely did.. ",
    "CorentinLemaitre": "I have the same problem with the version 1.0.3\nI just install the version 1.0.4 and i will let you know if i have some sync problem (in 10 days if i did n't reply it mean that there is no problem)\n. I have still problem to sync the notes even with 1.0.4\n. I switch to 1.05. I let you know if i have problems.\n. Here is the result : \n```\nprocessor   : 0\nvendor_id   : GenuineIntel\ncpu family  : 6\nmodel       : 28\nmodel name  : Intel(R) Atom(TM) CPU N455   @ 1.66GHz\nstepping    : 10\nmicrocode   : 0x107\ncpu MHz     : 1333.000\ncache size  : 512 KB\nphysical id : 0\nsiblings    : 2\ncore id     : 0\ncpu cores   : 1\napicid      : 0\ninitial apicid  : 0\nfdiv_bug    : no\nf00f_bug    : no\ncoma_bug    : no\nfpu     : yes\nfpu_exception   : yes\ncpuid level : 10\nwp      : yes\nflags       : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe nx lm constant_tsc arch_perfmon pebs bts aperfmperf pni dtes64 monitor ds_cpl est tm2 ssse3 cx16 xtpr pdcm movbe lahf_lm dtherm\nbugs        :\nbogomips    : 3324.83\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 32 bits physical, 48 bits virtual\npower management:\nprocessor   : 1\nvendor_id   : GenuineIntel\ncpu family  : 6\nmodel       : 28\nmodel name  : Intel(R) Atom(TM) CPU N455   @ 1.66GHz\nstepping    : 10\nmicrocode   : 0x107\ncpu MHz     : 1666.000\ncache size  : 512 KB\nphysical id : 0\nsiblings    : 2\ncore id     : 0\ncpu cores   : 1\napicid      : 1\ninitial apicid  : 1\nfdiv_bug    : no\nf00f_bug    : no\ncoma_bug    : no\nfpu     : yes\nfpu_exception   : yes\ncpuid level : 10\nwp      : yes\nflags       : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe nx lm constant_tsc arch_perfmon pebs bts aperfmperf pni dtes64 monitor ds_cpl est tm2 ssse3 cx16 xtpr pdcm movbe lahf_lm dtherm\nbugs        :\nbogomips    : 3324.83\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 32 bits physical, 48 bits virtual\npower management:\n```\n.                                                                                       OK, I understand that my situation is not a classic one.... for the moment I use simplenote online and it's fine. It is an old laptop so I think not so much people have my problem...\u00a0If any other information can help ask mee: Dennis SnellEnvoy\u00e9: mercredi 11 janvier 2017 20:25\u00c0: Automattic/simplenote-electronR\u00e9pondre \u00e0: Automattic/simplenote-electronCc: CorentinLemaitre; MentionObjet: Re: [Automattic/simplenote-electron] .deb installation error: \"architecture 'amd64' wrong\" (#484)@CorentinLemaitre thanks for sending that over. I can almost guarantee that the reason for this trouble is that it appears like you are running on a computer with an Intel Atom processor, which has a few small differences from the standard line of x86 processors.\nI'm not sure what the implications of that are or if it should be running, but I will try and check in during the next several days to see if we can't figure it out and hopefully get it working for you.\nHere's to hoping it works out!\n(P.S. If anyone has any good knowledge about Electron running on an Atom we would welcome the help!)\n\u2014You are receiving this because you were mentioned.Reply to this email directly, view it on GitHub, or mute the thread.\n{\"api_version\":\"1.0\",\"publisher\":{\"api_key\":\"05dde50f1d1a384dd78767c55493e4bb\",\"name\":\"GitHub\"},\"entity\":{\"external_key\":\"github/Automattic/simplenote-electron\",\"title\":\"Automattic/simplenote-electron\",\"subtitle\":\"GitHub repository\",\"main_image_url\":\"https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png\",\"avatar_image_url\":\"https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png\",\"action\":{\"name\":\"Open in GitHub\",\"url\":\"https://github.com/Automattic/simplenote-electron\"}},\"updates\":{\"snippets\":[{\"icon\":\"PERSON\",\"message\":\"@dmsnell in #484: @CorentinLemaitre thanks for sending that over. I can almost guarantee that the reason for this trouble is that it appears like you are running on a computer with an Intel Atom processor, which has a few small differences from the standard line of x86 processors.\\r\\n\\r\\nI'm not sure what the implications of that are or if it should be running, but I will try and check in during the next several days to see if we can't figure it out and hopefully get it working for you.\\r\\n\\r\\nHere's to hoping it works out!\\r\\n\\r\\n(P.S. If anyone has any good knowledge about Electron running on an Atom we would welcome the help!)\"}],\"action\":{\"name\":\"View Issue\",\"url\":\"https://github.com/Automattic/simplenote-electron/issues/484#issuecomment-271968353\"}}}. ",
    "planetahuevo": "Another one with the same issue. \nIt seems that it sync the data I create or modify on my app to the web, but never on the other direction.\nI have 2 computers. If I create a new note on one computer, and go to the other, is not there, but if I open the web, everything is ok. \nI log out and log in into the 2nd computer and everything syncs again until I create  a new one. Windows 10 here too on both computers.\n. Anything will be good. I am just using the web version as I cannot trust the app anymore. :(. I will try it as soon as I can. \nThanks! . Oh! lost a lot of work from yesterday because of this... :( \nIs there anyway to get the data back?\nAnything at all we can do? . Ok, \nAfter some tests, the only solution I have found is not to use simplenote on multiple devices (or not use it at all) :(. \nThis is worse than not having sync at all, because loosing one day or one week of work is too much risk.\nthis should be top priority on any sync app.\nI recommend to anyone reading this to change to a text editor with Dropbox. \nDropbox will never replace content and will create conflicting copies if something has a conflict and you can always go and review old versions, so you have the control all the time.\n. Thank you @zedgoat \nI will check that too. I found ResophNotes, which is a windows Client that sync with simplenote but also allow to save on the folder (dropbox sync) so I am trying with that, I hope dropbox copy will save the day when the sync problem happen again. \nI am considering if sync with simplenote it is needed at all or not at  the moment.\nAlso, I was able to reproduce the issue 100% so I can explain it here to the devs to fix, if they want to. \nIt seems that simplenote takes the lates update as the one to use, and never merges changes with conflicting copies. \nI have 2 simplenote apps, laptop and desktop. \nThe desktop has always internet connection, but the laptop sometimes it does not. \nI start the note on the desktop. Fine and sync ok.\nOpen the laptop and get the synced note, fine too.\nKeep working on the laptop but eventually internet is not available. \nI do not have internet, go home and the note is not completely synced.\nI go to the desktop, open simplenote, and start editing the note again. \nThen, after some new typed text, I realise I do not have the latest changes. But the simplenote has already sync the changes at that time.\nI go to the laptop, open the app thinking that simplenote will be smart enough to sync and merge the note, but it does not. \nSimplenote open the laptop, check that the date of this note is older than the on in the server and remove the laptop one (loosing all the work done and not able to recover because it never reached the server) and replace with the latest one from the desktop. \nIn the way, it also lose the historic changes from both notes, so you are doomed.\nThis is basic stuff and I cannot understand how the simplenote server is not smarter than this. \n. ",
    "klakar": "Just adding Linux App to the problem, and Yes! Logging out, and then in again will sync all notes!\n(Using Simple Note 1.0.6).\nUsually occurs when creating the note in the Android App. Editing the note, even in the web-app, will _not_ sync to Linux App. This is however not consistent! If i do a log-off/log-on it seems to work fine for a while at least.\n. ",
    "darrenca": "Another reported sync issue in 2903142.\n. ",
    "charliescheer": "Another sync issue with Windows 7 in 2916145\n. ",
    "ajcool2k": "Reporting because I lost some unsynced notes lately. Using the app mainly on Ubuntu 16.04 / Windows 10 and at times on Android. All updated to the latest version.\n. ",
    "sgbw": "I used to have the same problem with notes written on android not syncing with the linux client on mint 17/18. Updating from 1.0.2 to 1.0.3 only fixed it for a very short period. From then on the only way to keep linux synced was login/logout, which was pretty annoying.\nInstalled 1.0.7 and it synced like a charm. Will try and test during the next days to see if this time around it keeps working fine.. ",
    "duttakapil": "I'm on Windows 10, Simplenote 1.0.8 and having this issue. It worked when I first set the mobile and desktop app, but not anymore. . I believe I've also lost the all content I had in the desktop version, but which did not sync with the mobile/web version :|. ",
    "stevenfletcher": "I'm having the same problem, but it is hard to spot under what cases this happens and does not happen. I'm wondering (somewhat blindly) if a forced sync on closing the app OR on going from one note to another OR on a settable time of no activity (signifying I'm done for now). Traditionally, you'd do a record lock and release but that can't work here. I often have Simplenote open on both my computer (Windows 7) and on my phone (android). I have tried to make sure I exit one before updated the other, but even then it still has problems. Assuming 3 copies (my computer, my phone and the simplenote server) then it could be seen as 1) action starts > 2) changes > 3) action ends This triad (if you like) has a date and time and should be propagated before allowing any other similar triads on another device (OR they are treated like a log of changes). [The old Palm software would duplicate a record if it got confused in the sync process. Ugly but safe!] ] Just mostly musing here... . ",
    "roorco": "I'm on Manjaro 18, same issue here.\nMy android app is syncing but not the version on my pc.This after the recent upgrade.\nSyncing only after logging out an loggin ing.. I'm having a similar issue. I have updated the software and notes are not showing, but if I create a new note than all notes magically reappear. Quite annoying though. \nI'm using Manjaro 18, Simplenote 1.2.1. ",
    "popod": "Yes, I know that. But it will be better if you could add a \"lock\" option to each note (same as pin to top option) and if this option is set juste disabled the \"delete\" or \"move to trash\" item in menu ;)\nI think it is easy to implement ? What do you think about this new function ?\n. ",
    "danvilar": "Although, a locking mechanism to avoid the note being edited until you unlock it again would be useful.\n. ",
    "laskin82": "yep. i check it.\n. wrong codepage in markdown on mobile. same bug on windows 7. new note\n```\n- [] test1\n- [] test1\n- [] test1\n- [] test1\n```  . I got it. I just do not use the mouse and work mostly from the keyboard when editing a note.. ",
    "arshsingh": "I don't remember how exactly, but I encountered this bug on Ubuntu 16.04 (Simplenote 1.0.5) as well\n. Hi @dmsnell. I'm still interested and agree with what you proposed. I will implement it by the end of the coming week\n. Hi @dmsnell. Apologies for the delay. I tried using localStorage to save the state for this, but the problem is that we need the data before initializing the window:\njavascript\nmainWindow = new BrowserWindow( {\n    width: mainWindowState.width,\n    height: mainWindowState.height,\n} )\nI'm not sure about IndexedDB but from what I can see, the api for that is also available only after window init (?). I did some research, it seems like everyone is storing this data in json/config files. We will probably have to do the same. In that case, my preference would be to use this dependency instead of just replicating the logic in simplenote's codebase.. ",
    "brandonpayton": "@dmsnell I love where this is headed. Being able to work from a grammar is powerful, and I'd enjoy these features as a user. Thanks for sharing and working on this!\n. ",
    "menturi": "I can confirm that this bug still exists in version 1.0.7 of the Windows app.. ",
    "swalladge": "@probonopd while this would be a nice idea, I also suggest reaching out to package maintainers for the distro you are wanting to run Simplenote on to see if someone will be willing to create distro-specific packages for it (if it doesn't already exist). For example, I am currently maintaining a pkgbuild on the aur for easy installation on Archlinux. \n. @natanielcz btw it doesn't matter how many people use the appimage format, because it's simply an executable file with no dependencies. Others like snap and (afaik) flatpak require installing a manager software first though.. How about https://app.simplenote.com/desktop/linux/version?compare=1.0.8&distro=ubuntu instead of checking useragents?. ",
    "probonopd": "@dmsnell it's so trivially easy that I don't think its worthwhile to do a PR:\n1. Edit package.json to use the latest electron-builder.\n2. Edit package.json \u2014 add after \"build\": { ... }:\n```\n    , \"linux\": {\n      \"target\": [\"AppImage\"]\n    },\n```\nThen, npm install or npm run dist or npm run dist -- --linux=AppImage if you want to explicitly set target and do not edit package.json.\n. Since AppImage is the default format for electron-builder Linux builds, I see lots of usage especially for Electron-based apps. Due to the good support in electron-builder I expect this to be straightforward but in any case let me know if you need support @natanielcz.. ",
    "jotak": "I can't see an RPM distribution in github's releases, is there extra steps to get it?. ",
    "zhangzhishan": "One of my computers cannot access to the Internet in some reasons, but I use Simplenote in my other computers. I only want a easy to use note app for my offline computer.\n. Thank you so much.\n. ",
    "amontalenti": "Adding a link here for simplenot-electron release 1.0.8, which includes a Mac OS build. Just in case people are searching for it and come across this ticket. Thank you, SimpleNote devs.. ",
    "chaitanyamsv": "Reported by the user in #947090-zen.. ",
    "goryny4": "same thing for me\n\n. ",
    "damiannep": "Another report in 1.1.6 on Windows 10 in 1219109-zen.. The user confirmed that the non-Windows Store version works.. ",
    "alexforencich": "Alright, after leaving it open for a couple of hours, it suddenly started working.  Maybe some sort of progress indication is required for initial sync on start?\n. No, as far as I could tell, the internet connection was fine.  And it's a decently performing connection as well - speedtest.net shows ping time of 25 ms, download of 35 Mbps, upload of 10 Mbps.  No proxies or VPNs, just wifi (5 GHz 802.11n) to router to cable modem.  My computer does sometimes fall off the university wifi, but I have never had an issue with my home wifi (where this problem occurred).\n. I just tried closing and re-opening the simplenote program, and there is only about a half second delay before it displays the notes.  So it seems to be working at the moment.  Perhaps it is some sort of a migration issue from a previous version?  I can't recall what version I was running before, but every time I tried to start it since upgrading, I ran in to this issue (no notes displayed, etc.) - until last night, when I left it open instead of closing it after a couple of minutes.\n. Yeah, agreed that it's not totally broken.  That's just the way it appeared to me after trying to start the app multiple times over several days and running in to this issue, but now it seems to be working fine, so whatever happened must have been some sort of a transient issue.\n. Not only is this disconcerting, but by not bumping the version number in some way, simply replacing the package will not cause users/package managers to update to the new package, so you end up with people running some mix of the various package variants.  Depending on what has been changed, this may or may not lead to difficult-to-debug issues.  . ",
    "ca19972001": "I have this exact issue in windows. I can reproduce it at will. If I open the app with no internet connection, the notes show up. If there is a good connection in place, the notes will not show. If I open with a good connection and remove the internet connection, the notes will appear, if I reapply the internet connection the notes will again disappear.\nMy suspicion is that that there's a sync conflict on one of my notes and the program is hanging when it encounters the conflict.\nI use simplenote all the time, I'd love to get this fixed. let me know how I may help. . The logout/login did in fact make it work again. I thought I had tried that before but it's been a while so maybe I didn't. \nMy iphone app works fine.\nI'll see if the issue comes back.... ",
    "mariosant": "~~I can confirm this issue with the latest release, using deb release.~~\nNope, I had another instance open! :>. Hello @rodrigoi and @roundhill! :wave:\n@rodrigoi, to be honest, I was hoping you guys have a solution about testing it. I can add instructions on how to test this feature manually, I would prefer automating the test though. My experience with Electron is kinda limited so, if it's not too much to ask, can you guide me please?\nThis is different from Frameless Window approach, in my understanding, since the app still utilizes OS' native components, such as window borders and menus. I understand that using the Frameless Window approach, we will have to implement the menu (and the window borders) ourselves.\n@roundhill, sure we can do that. I am not very sure how this would work under macOS (since the menubar will be visible at all times in my understanding).\nI have an idea, how about displaying it by default and add an option within settings to auto-hide it?. That is a great idea @roundhill! I will see how to get it done.. Here you are @roundhill! When mainWindow initializes, it makes menubar visible. Works like a charm under Linux, still curious on how to test this.. @natanielcz I understand that. Perhaps this should be added to settings.. So guys what do you think? Should we continue this? If yes, how?. Sure, we can do that @rodrigoi. I would like to ask you though, why do you believe it doesn't make sense for Windows users? Keep in mind that I haven't touchd Windows for about 8 years. :rofl: . @roundhill, it seems that Electron does not provide an event  to handle menubar visibility changes. Perhaps might be a better option to add this as a menu entry? Visual Studio Code has a view menu with the option to \"Toggle Menu Bar\", for example.. Apologies @roundhill, things got a bit busy. I will try to give it a shot this weekend.. @roundhill it took a bit more, but here it is!\nThis PR now uses Ctrl-Shift-M to toggle menubar visibility, persists preference via application settings state and adds a menu -> view -> Toggle menubar visibility entry.\nAgain, my apologies for taking so long, things are a bit busier than it should :) . I haven't really found a way to listen to menubar toggles, so I am not sure how to persist the state. Any ideas?. ",
    "Copons": "Moved over to https://github.com/Automattic/simplenote-electron/pull/443. @dmsnell Well, this is not that much code! (the other PR, on the other hand... \ud83d\ude06  )\nI should be able to push soon-ish some changes that actually handle the various hiding and showing, so that this very branch would be an interactive mockup.. @dmsnell, @drw158: I've pushed a commit that actually enables the button (responsive ready too), so that the whole thing is actually testable and ready to discuss.\nThe CSS code and the whole classNames mess are definitely WIP in order to make this work in a rush. I'll get back to it and clean everything up as soon as possible.. @drw158 while I like it per se, I'd avoid the dropdown as it's not really a great UX on a touch device.\nAs for the other two versions:\n\n\nDistraction free mode looks great; I'm not totally sold on the moving button that makes frustrating to cycle between the two layouts.\nMaybe it could be grouped with the other notes buttons on the right? I mean, all in all it is note-related...\n\n\nThe hybrid one seemed a bit confusing on paper, but the prototype actually seems to work pretty well. Maybe having two different buttons that modify the layout increases too much the complexity of the app though?\n\n\nUnrelated: in this PR version, the searchbar will end up in the note list as soon as I remember to do it when actually working on it. :). @drw158 \n\nOption 2: Mobile shouldn't be a concern, since this all goes away on small screens anyway. Assuming the mobile is a small screen...\n\nIt's not mobile per se: it's touch that imho doesn't work well with dropdowns (think about native mobile dropdowns, that are pretty much full screen modals - I doubt we'd want that on Simplenote \ud83d\ude04  ), and touch is not mobile-only anymore so we need to consider touch behaviors on any screen size.. @drw158 no worries for backtracking, I definitely don't mind iterating since it gives me the chance to clean up my code. :). I've removed the \"editor only\" option while keeping all the logic (and style) behind, so that we should be able to add it back with minimum efforts.\ncc @drw158, @dmsnell. @drw158 Finally working on it!\n\nDecreased tag sidebar width\n\nWhat do you mean? It should have the very same width as before.\n\nSearch bar has no transition, so it's a weird jumping effect.\n\nFixed in the upcoming commit.\n\nWe'd also need to toggle the info panel\n\nUh! I believe I've never considered this.\nLet's see what I can do!. @drw158 You can take a look, if you want.\nThough, the more I work on it, the more I feel the current layout structure is not really adequate for this kind of redesign.\nThe component tree could use some refactor to decouple components from each other.\nSee for example the Note Info, that is rendered in the app root, while it would probably make more sense (for this redesign, I mean) if it was inside the Note Editor container.\nI should probably try moving all the various pieces around, and then write something more structured about it.. @dmsnell My effort to reduxify and modularize most of the app was in order to give me more freedom to move around stuff without infinite props inheritance chains.\nI should re-assess the current refactor state and see what's still missing.. @dmsnell I'm not sure I got what you mean with functional changes. \nThe only differences right now are the ES6ification of the functions (and the moving of the components into their own folders), but other than that it's exactly the same as before.. @dmsnell Both fixed. Sorry for those, side-effect of going auto-pilot on these refactors.\nAnd yes, this PR should be done.. Since we're updating modules too, I get these warnings on a fresh npm install:\nnpm WARN deprecated node-uuid@1.4.7: use uuid module instead\nnpm WARN deprecated jade@1.11.0: Jade has been renamed to pug, please install the latest version of pug instead of jade\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nnpm WARN deprecated transformers@2.1.0: Deprecated, use jstransformer\n~~(haven't checked any, though, this is just a reminder)~~\nApparently the only module we import directly is jade which has been renamed into pug for copyright reasons.\nIt looks like it just needs a couple of renames, so it might be worth to update it.. This could strip out the jade-to-pug change after https://github.com/Automattic/simplenote-electron/pull/477. @dmsnell reviews don't show as outdated, but they are.. @dmsnell Rebased!. @dmsnell I've noticed that the revision handling impacts more than what I initially expected.\nI've ended up creating a new, barebones, revision subtree in order to start Reduxifying the remaining children components.\nThough, this might increase this PR size to the point of becoming un-reviewable.\nAt this point, I'd say there are two options:\n1. Keep on working in this PR until everything is Reduxified.\n2. Stop here, revert https://github.com/Automattic/simplenote-electron/pull/479/commits/ec67f0f25c88776f79577d31392879e248b1ab60 (the commit where I've changed the state), move it in another PR, and merge this one.\nAs you can guess, I'm eager to go with 1, but since I won't be the one reviewing it, well... I'll wait for suggestions!. Updated after https://github.com/Automattic/simplenote-electron/pull/389 and Reduxified the new additions.. Rebased against https://github.com/Automattic/simplenote-electron/pull/424\n@dmsnell Am I correct in the assumption that search highlighting does not apply to the markdown preview?. @dmsnell Got it.\nJust asked because the rebase conflicts were all pretty much related to the highlighting filter and, while by the code was pretty clear it was not applied to the preview, it also felt it could have been a regression caused by me.. @dmsnell Rebased!. >is it possible to break this down any further?\n@dmsnell I could give it a try, but it would lead to a decent amount of different PRs that must be written one after the previous is merged, increasing also the review burden.\nI don't mind starting from scratch here, using this PR as a reference, so I can begin if/when it's ok for you.. Code-wise LGTM \ud83d\udc4d . @dmsnell Dang! I recalled you saying it worked as JS too, but I missed the object part and my tests were failing and I thought it eventually got ditched. Updating this asap.. Three commits to replace js with *. This might be my best ever!  \ud83d\ude06 . @beaucollins and risking to lose a clean history? No way!. @dmsnell this doesn't seem to solve the issue.\n.source-list behaves correctly (and you could remove the width, since min-width is the same).\nAutoSizer encloses .note-list in a new element, with a fixed width of 328px.\nIt seems that reverting to width={ width } here solves it, but I'd like to have another set of yes around, in case I might have messed up with CSS without noticing it.. I've also noticed that, with \"expanded\" display (in other words: when the note list preview can span multiple lines), the list element height doesn't update on resize but only on component re-render.\nSo, it happens that, for example, in $single-column the preview needs only 2 lines, but on wide screen it needs 3 lines.\nWhen enlarging the screen, the preview gets cut off at 2 lines; when narrowing, it has an additional empty line.\nClicking on the list, though, sends a new selectedNoteId connected prop, and the previews heights update to the correct size.\n\nThough, this looks like an intended performance tradeoff.. @dmsnell Let me try explaining it better:\n\n\nStart with a large window and with a note of a couple of lines. Make sure there is no selected note, or the 3rd step won't work, since you'll have to close the note and trigger a Note List re-render.\n\n\nSince the Note List is currently narrow, that note preview (aka the note list element) fills 3 lines (correct). The list element is correctly resized and all 3 lines are visible.\n\n\nResize the window under the small screen breakpoint. Now the Note List is much larger and the note preview only needs 2 lines. You now can see that the note preview kept the old height, and it's 3 lines tall (incorrect), with the last line empty.\n\n\nOpen a note just so that you can trigger a re-render, then close it. The note preview is now 2 lines tall (correct), and there are no empty lines.\n\n\nResize the window above the large screen breakpoint. Now the Note List is again narrow and the note previews needs 3 lines. Instead, the height is still 2 lines tall (incorrect).\nThe text is cut off, and you can even see part of the ascender strokes of the tallest letter of the third line, popping up from the lower border of the note preview.. @dmsnell Yup, that's it! \ud83d\ude42 . The height recompute on update content doesn't work for me.\n\n\nIt seems this is caused by the equality check nextProps.notes !== this.props.notes failing on https://github.com/Automattic/simplenote-electron/blob/92713e80cd4cfeed13590b2ca2b52c345c3844eb/lib/note-list.jsx#L223\nOr maybe because the heights recompute debounce somehow conflicts with the save debounce?\nEither way, I've tried adding a new connected prop on the contentKey of the selectedNote:\njs\nconst selectedNoteContent = get( selectedNote, 'contentKey' );\nand then:\njs\ncomponentWillReceiveProps( nextProps ) {\n    if ( nextProps.selectedNoteContent !== this.props.selectedNoteContent ) {\n        // not debounced since the save action is already debounced!\n        this.list.recomputeRowHeights();\n    }\n    ...\n}\nIt seem to work great for me, but I'm wary of the possible performance impact on huge notes.\n(unrelated: approved the changes I requested days ago, thanks!). It looks fixed for me! Great work @dmsnell!\nI'd say :shipit: but for the odd nature of this issue I'd probably wait for @roundhill to give another look.. @drw158\n\n\nI'm not overly fond of adding a class to that particular element, since it's automagically created by Draft.js, and we can't be 100% sure it won't change at some point. Not to speak, it doesn't have any classes, so we should have a weirdly specific rule.\nEither way, this would not change the uneven vertical spacing of the tag chips: it just moves from an element to another, but visually is the same.\n\n\nDidn't notice the .tag-editor padding. Quick and easy fix coming up.\n\n\nI'm personally not into the \"disappearing text\" effect to hide content (don't know why, probably because I've used it on an old site I've made for a client I hated \ud83d\ude06 ), but if you believe it's ok and consistent with Simplenote's design, I have nothing to object.\nThis would also fix the aforementioned uneven spacing, so it'd be a win-win.. Oh! I didn't notice the padding was only at the end of the note. I'll see what I can do about it.\nWorst case scenario, we could apply it to the Draft element, knowing that, if it'll change in the future the worst thing that can happen is simply less padding.. @drw158 call for another design review, thanks!. Ouch @dmsnell I assumed the newline differences ware handled directly on a OS level.\nOpening a fix ASAP, but I'm currently not in the conditions for testing on Win.. @dmsnell I've tentatively added the same regex to the export.\nAs far as I know, there's no way to export from the browser, and it's not clear to me how I can test it on a Win VM from macOS (except maybe setting up the environment in the VM and build the app there?). Alright: tested on Win10.\nThe line breaks issue happened on export too, and the regex fixes it.\n\n\nI've noticed the exported json file too has wrong breaks. Is it worth fixing or can we assume it's only used for feeding it into other apps and not for \"direct consumption\"?. @dmsnell Updated for JSON export too and tested on Win10!. Hi @gubrist!\nThe fix for #512 will also add proper Windows line breaks on the exports, for both text and JSON formats.. @dmsnell removed, sorry about that \ud83d\ude2d . @dmsnell The functions were tested and working.\nJust, there was one last commit taking care of a couple of regressions that for some reasons I didn't push yesterday.. @dmsnell I'm able to move the slider and restore revisions without errors. I've even cleaned up everything to be sure.\nAnyway, I'll go update the reducer to protect it for undefined revisions.\n\nI think the hardest part about reviewing these changes is following both the code moves and the logic changes, reorganizing and converting to Redux at the same time.\n\nYeah, unfortunately this refactor really involves moving methods from a file to the other, and then from this new file to another one, every time deeper into the component hierarchy.\nI honestly don't know how to resize the whole thing even more.. Closing for inactivity. (Sorry for the ugly review dismissal message, didn't think it appeared like that - and it's not editable!)\nAnyway, styling problem: the textarea vertical scrollbar.\n| Preview | Edit | Edit Small Screen |\n| --- | --- | --- |\n|  |  |  |\nIn Preview mode, the overflowing container is the entire \"content section\", so the scrollbar is correctly positioned next to the right edge of the screen.\nIn Edit mode, instead, it's the textarea that overflows, and the scrollbar is instead positioned inside the textarea itself, which is typically quite far from the screen edge.\nIdeally, in Edit mode, we'd want for the containers to have no padding and no scrollbars; while applying them to the textarea instead.\n```scss\n.note-detail {\n  overflow-y: hidden;\n}\n.note-detail-textarea {\n  max-width: 100%;\n  padding: 0;\n}\n.note-detail-textarea textarea {\n  // small screens\n  padding: 24px;\n// medium screens\n  // up to 780px = max width of textarea (684px) + padding (48px per side)\n  padding: 24px 48px;\n// large screens\n  // dynamically calculate the horizontal padding\n  padding: 24px calc( ( ( 100% - 780px) / 2 ) + 48px );\n}\n```. Testing works as expected, but I'm having a weird behaviour on selection.\nThe attached gif should be clear, but this is what seems to happen.\nIn both Text and Markdown Edit modes, once I select a piece of text, the selection \"origin\" gets stuck. So, if I try to select another piece of text, the selection always starts from the same position of the first selection starting point.\nClicking outside the selection does not reset it. The only way to remove this behaviour is to move the cursor around with the keyboard. \n\nThough, this happens on master as well, so it's not caused by any changes made here.\nMight be worth opening an issue, I guess.. > Thanks @Copons. I saw that behavior too and I think it could relate to draft-js. Note also that I have a PR to pull it out #568.\nYay! I totally missed that review request, gonna give it a look asap!\n\nDid you also experience this in the preview mode? I'm not sure what \"Markdown edit\" mode means here.\n\nMeans that it only happen in Edit mode (which only exists for Markdown, therefore \"Markdown Edit\" \ud83d\ude42), but not in Preview.\nSo yeah, definitely all hints point to Draft.. As noted here, I tried with a fresh node_modules to see if something breaks up after removing marked, since it's left in https://github.com/Automattic/simplenote-electron/blob/master/webpack.config.dll.js#L15.\nI got no issues, apparently because marked\u00a0is imported by some other module (it's there in node_modules\u00a0anyway).\nI guess it should be removed from the dll though.. > Why did you see it better to go the other way?\n@dmsnell The idea was to hide the implementation as much as possible, without going over-specific.\nTAG_DRAWER_SHOW is only good for showTagDrawer, even though it's implementation is exactly the same as the one for an hypothetical showSomeOtherDrawer.\nVISIBLE_PANES_ADD is both good for showTagDrawer and it's future proof.\nIt's implementation is simple enough that showSomeOtherDrawer involves pretty much just a copy-paste.\nIn other words, I'm going with over-generic action types, hidden behind over-specific (and readable, and obvious) actions.\nI'm also wary of _TOGGLE actions. They are very handy, until they are not anymore and you have to replace them with _ADD/_REMOVE everywhere (e.g. to add side effects to just one).\n\nAlso I think the selectors are problematic here because they will lie until we couple the existing behavior into state. Maybe we could just not create them now or instead try to return the correct values based on the imperative state of the app.\n\nI'd definitely avoid wiring up the current state into this.\nI'd add a comment saying like \"Do not use these selectors just yet!\", or probably just outright drop them for now.. Here you go @dmsnell!\nIn c2c9e27 I've stripped this down of everything except the toggle tag drawer logic.\nIn 8c0d4f2 I've wired it in the app, removing all \"deprecated\" mentions of appState.showNavigation and toggleNavigation.\nWhere it made sense, for actions to have the hideTagDrawer as side-effect, I've added it directly in the component.\nWhere it didn't make sense (e.g. no need to explicitly hide the tag drawer when opening the note info, as the tag drawer's outside click took care of that already), I've just dropped the previous logic.. Closed in favour of #621 \nThis might still come in handy for when we'll replace the existing patterns with the new Redux approach.. I'm definitely not happy of passing all those props there.\nI've just copied them in order to get the top bar working without pushing a 1K LOC commit. :). Definitely trimmable.\nBut about the one argument: that won't be an issue anymore once I separate the various functions included in onRevisionChange.. It sounds like revisions are properties of notes, but in this case they are only part of the revision selector view.\nWhile having them always available seems awesome, wouldn't it be quite heavy performance-wise?. Already checked that, but... I found it pretty much empty and just assumed this was the way to go. :D\nAnd yeah, I'd go uppercase too.. I've left combineReducers pretty much to be ready to eventually split the reducer as you're suggesting.\n(Still, would definitely love to have the Redux thing! \ud83d\ude04 ). I kinda hate the naming I used there (and of course the returns are only placeholder for the actual icons), but at the same time I honestly feel the good old switch makes it more readable at a quick glance.\nAs for the extendibility: adding a new panel in the main layout is also a heavy design concern and I don't think it that adding a case would prove that hard in the off chance we need it.. Well yeah, it has a minimum performance impact, but I don't like cluttering Redux with unnecessary dispatches that could potentially make it harder to understand what's going on.\nAll in all, this if pretty much replaces a comment. \ud83d\ude03 . Oh damn, I see what you meant now!\nYeah, that's a byproduct of me blindly copying the props from <NoteEditor> a bunch of lines below, where it creates those two closures.\nEDIT:\nit doesn't work without the callback though.\nI'm not exactly sure why, as it's not exactly clear to me how the Redux props mapping works here: https://github.com/Automattic/simplenote-electron/blob/master/lib/app.jsx#L66-L93 (origin of this.props.action). Well, it simply doesn't dispatch the action anymore.. I'm afraid this is needed because there's a Symbol action type (AUTH_SET?) that breaks the get() with Uncaught TypeError: Cannot convert a Symbol value to a string.. I think this is the behavior suggested by @drw158.\nI'm not a fan of it too, but it should be super easy to replace the single icon with all three of them.. Dang, I put this here at some point because I was sure I saw it used in some of the imported functions, but eventually I was wrong and forgot about it. :/. Wouldn't it be better if we use constants for those values, like:\n```es6\nconst heights = {\n  previewComfy: 21,\n  previewExpanded: 88,\n  title: 24,\n  verticalPadding: 18,\n};\nconst noteDisplayMaxHeights = {\n  comfy: heights.title + heights.verticalPadding + heights.previewComfy,\n  ...\n};\n```\nOr maybe a simple comment explaining what those numbers represent at a first glance, without the need of testing and inspecting?. Is this explicitly stated because it's required by react-virtualized? Because I can't see it used anywhere except in webpack.config.dll.js.\nIs there a reason why PureComponent couldn't be used instead?. Curiously enough, I got to think about this a couple of hours ago!\nMy reasoning would be to keep the Redux stuff close to each other, but it feels a bit weird indeed.\nI'm gonna move them up no problems.. This produces a warning:\n\nWarning: A component is contentEditable and contains children managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.\n\nReact has a suppressContentEditableWarning prop to be added here that does exactly what it says.. isViewingRevisions toggles <RevisionSelector>\nselectedRevision contains the currently selected revision that is displayed in the note content, which can be either a revision or null for when the selected revision is the current version of the note.\nThis mimics the current <NoteEditor> internal state:\njs\n{\n   revision: null,\n   isViewingRevisions: false\n}\nThe former could be better renamed. Maybe something like:\nisRevisionSelectorOpen / REVISION_SELECTOR_OPEN. I feel that's the way to go, but I didn't want to create any conflicts with #402, and still keep the behaviour identical to what it is right now but just replacing the internal state with Redux.. I guess we should start with the assumption that the newest revision is... the note itself!\nIn the current code, the object that goes into <NoteDetail> is even called revision, and it's the selected revision (if it exists) or the note.\nWhile I'm not sold on the naming confusion, I dig the simplicity of the logic behind this.\nSo, if we want to have only one state.revision reducer, we could simplify it like this (and notice that I'd keep the action names starting with the feature, to improve their searchability):\ndefault state\n- selectedRevision = null\n- <RevisionSelector> hidden\nopen the revision selector\n- dispatch REVISION_SELECT -> selectedRevision = note\n- <RevisionSelector> visible\nclose the revision selector (cancel or click outside)\n- dispatch REVISION_SELECT -> selectedRevision = null\n- <RevisionSelector> hidden\nselect a revision\n- dispatch REVISION_SELECT -> selectedRevision = revision\n- <RevisionSelector> visible\nrestore a revision (and close the revision selector)\n- note = selectedRevision\n- dispatch REVISION_SELECT -> selectedRevision = null\n- <RevisionSelector> hidden\nchange note\n- dispatch REVISION_SELECT -> selectedRevision = null\n- <RevisionSelector> hidden\n\nThis way, the pattern to toggle the <RevisionSelector> visibility is clear:\njsx\n{ selectedRevision && <RevisionSelector> }\njsx\n// or, well, to preserve the CSS animation, it would likely be a variation of this:\nconst classes = classNames( { visible: selectedRevision } );\nreturn (\n  ...\n  <RevisionSelector className={ classes } />\n  ...\n);\nand we'll spare the toggle visibility reducer (isViewingRevisions), that I feel might be a little out of place in state.ui, since it's so strictly tied to the note editor itself.. Personal request related to the various refactors: react-onclickoutside 4.5.0 has a bug when used as an HOC (for class components) with React 15.\nThe issue was fixed on 4.8.0; I've used 4.9.0 in several different experiments and I couldn't find any bugs or weird behaviours.\n4.9.0 is the last version supporting mixins, which makes it backward compatible to our current code.\nDo you think it's possible to bump it here, to help me ES6-fy all the components that depend on this?. I've tried it on https://github.com/Automattic/simplenote-electron/pull/464.\nUsing as an HOC for the NavigationBar, while keeping it as a mixin for everything else, and I haven't noticed any error or incorrect behaviour.\n(Also, just for information: that module is now at version 5.8.3, but since 5.0 it doesn't support mixins anymore.). Yeah, this last commit was to solve some conflicts and keep them in check with how the rest of the PR was written.\nIt didn't make sense to me to have only the allTags prop to be passed all the way from app.jsx while everything else is directly mapped from the state.\nOnce (or \"if\"? I recall some talk of closing it?) #402 is completed and merged, I'll definitely make sure to update this to reflect your changes.. I'm a little rusty on this, but IIRC it's all of them.\nLike:\n- if there's a selected note \u2192 return the selected note\n- else if there's a note list index stored \u2192 return the note corresponding to that index (if I remember this right, this is needed when you delete a note, to send you back to a previously opened note)\n- else \u2192 return the first note\nMaybe getCurrentNote might be more apt, but it wouldn't really clear the meaning of this function.\nProbably the best approach would be a good old comment.. We do not currently have a distraction free mode though.\nIf we want to toggle between \"editor + panes\" / \"just editor\", we need to know which panes were visible before hiding them.\nSee for example @drw158 mockup:\n- [ notes, editor ] -> enter DF -> [ editor ]\u00a0-> leave DF -> [ notes, editor\u00a0]\n- [ tags, notes, editor ] -> enter DF -> [\u00a0editor ]\u00a0-> leave DF -> [ tags, notes, editor ]\nMy idea is to store the previousPanes\u00a0list into the component internal state, and dispatch it accordingly.\nIf we don't dispatch a previousPanes, no harm done, we just return to the default state.. ",
    "hfactor": "A single button that shows a drop down to choose between Editor Only, Editor + Note List, Editor Note List and Tag List would be the easiest way. Or even have that feature under Menu bar item view (and have some shortcuts). The current tab switch is not a good way. So does having a split. Split will reduce the editor space. I think preview for markdown should be there by default in editor itself (like Bear Writer). ",
    "Gatada": "This is a very good and important discussion. Would love to see that Option 1 come to fruition.. ",
    "jamiepalatnik": "Report from 835615-zen:  \nBeta version 1.0.8 released 31 January 2017. May also be known as the \u2018Electron\u2019 release.\nIn the official release:\nCMD+F: sub window dialog opens, Finds text in the single note.\nCMD+OPT+F: moves the cursor to the \u2018all notes\u2019 search box.\nNeither of these shortcuts works in the \u2018Electron\u2019 beta.. Another report: 757894-zen\nUser is reporting that the cursor is jumping to bottom of the note on Simplenote Linux app, v. 1.0.8, seems to happen randomly, but user notices it more after using CTRL+V. . Another report here: 821993-zen. ",
    "gregzuro": "I'm not on the latest verison and don't want to update the app.. I see.  That works.  Thanks!. ",
    "rcarmo": "Yeah, well, it's still not ideal when there's no other way to toggle fullscreen.. ",
    "Ajkula91": "Yeah, I can imagine some members of my family destroying computer because there is no \"X\" button somewhere in the app, they could get stuck because they don't know about \"F11\" . ",
    "troypdx": "I was able to exit full screen under Ubuntu 18.04 by pressing Alt+V then choose the View > Toggle Fullscreen Mode menu item. . ",
    "gubrist": "No the same error but same \"construction site\".\nIn the produced PDF (e.g. Adobe Reader):\n- you cannot find any text string (CTRL + F)\n- you cannot mark text and copy it\n. Most probably yes: on my Andorid tablet and Android phone.\n- I check with closing the apps.. It happens also when all other apps are closed.. @roundhill \nNo, I do not share my notes at all.\n. With Electron 1.0.8 the overall performance of the GUI has notably improved  \ud83d\udc4d \nBut fluent text typing when you are at the bottom of the note adding more and more text has become creepy - like if a ghost hand would type and erase text at his own will. . Thanks, which is the new location of this bug report?. Has this part of the issue been fixed, as well?\nIn the produced PDF (e.g. Adobe Reader):\n    you cannot find any text string (CTRL + F)\n    you cannot mark text and copy it\n. I do not want to intrude in the \"developper's ktichen\" of electron - but is there a possible link to the \nperformance issue (lots and large notes) on the Simplenote web version (Simperium) as reportet here:\nhttps://github.com/Automattic/simplenote-macos/issues/83\n. Thanks, the line brake problem seems to be on the classic Wind Text editor \n(still running under Windows 10):\n\nYou can resolve it by using an comprehenisve Text Processor such as Open Office;\nOn the other hand, there is an issue with \u00e4, \u00f6, \u00fc etc.:\n\nWhich is the right charset to be applied?\n\n. a) Detecting the host operating system and normalize the line endings accordingly is a good idea \ud83d\udc4d \nb) For the meanwhile work-around, the UTF-8 workes - thank you: \n\n\n. The overall backup (zip) function as of 1.0.8 is great \n- thank you \ud83e\udd47 \nThe exported TXT notes have the same appereance without line breaks as reported with \nhttps://github.com/Automattic/simplenote-electron/issues/512\n\nWill the fix of #512 fix this issue too, automatically?\n\nPS 1:\nan export of a single note as file would be a simplificatoin of my daily tasks:\n- each time a 'task'  (~ 1 note)  has ended, I export the note to the file system.\nPS 2:\nan export a all notes of a tag would be a simplificatoin of my weekly tasks.\n- each time a 'project'  (~ all notes of a tag)  has ended, I export the note to the file system.\n. @dmsnell \na) How were/are you  able to print/create a PDF from Simplenote meeting the  expected results\n- which PDF  printer / PDF creating app did/do you use?\nb) I can print from any known text processing application under Windows 10 (Standard Text editor, Evernote, Open Office, Notepad, Word, Notepad+, PowerPoint) and I get the expected results. \n- Simplenote is currently the only one, which does not work.\nTherefore, I invite you to re-open #515\n. Here you go:\nPrint a Note e.g. with [Microsoft Print to PDF]\n\nOpen the created PDF File [e.g. Adobe Reader]\nTry to find any text string (CTRL + F)\n\nThe String cannot be found:\n\nMark text and copy it\n---> you cannot mark the text\n---> Obviously, it is not considered as / recognized by Adobe Reader as text.\n. I have just made another test with:\n- Microsoft XPS Document Writer\n- FreePDF Printer\nWith both the same problem remains.. Here a picture of how this is implemented on the Android Version 1.5.6:\n(and similar with the iOS Version):\n\n...You start to type the name of the tag e.g. v - and the whole list appears.\nThis avoids creating wrong and double tags.\n(Unfortunately, you see the result of double / duplicate tags issue is here:\nhttps://github.com/Automattic/simplenote-macos/issues/70 )\n. Using  Electron 1.1.1:\nI do not create new tags currently (I have plenty of them).\n\nI create a new note in the \"All Notes\" selection.\nI start to type [WHITE text in the picture] the first letter(s) V and suggestion(s) appear(s) - see [GREY text in the picture]\nbut I have to type in manually the complete tag to activate it:\n\n\n. I have no influence to the firewall.\nand it did work until today with the previous Simplenote-electron versions (during last years, months).\nMy notes have been accessible (read-mode, no online update) like in offline-mode.\nHas Simplenote-electron 1.2.1 changed the offline-behaviour ?. Thanks, mirka\nthe appereance was indeed the same as with the different bug \n[Blank Simplenote window - Windows 10 Pro, Simplenote v1.1.3 #734].\nToday, I have logged in off-line, established an \"open\" internet connection with my mobile phone hot spot and I could see all my notes again.\n\na) However, I experienced that the update / installation simplenote-electron 1.2.1 did not de-install the previous version and this might have lead to the Blank Simplenote window .\nb) Has Simplenote-electron 1.2.1 changed the offline-behaviour ?\nc) I have noticed that V. 1.2.1 has changed the startup screen: there is a blank screen for a few seconds before I can see my notes.. No, with 1.3.2 it works again.. ",
    "unforgettableid": "\nWe cannot know locally if there are new changes on the server on their way to our copy of the app.\n\nBut, if the server tells the client that there are no new changes available on the server, surely the client app can now report something like this:\n\"Last sync attempt finished: Apr. 21, 9:15:34 AM\"\n\"Last sync status: Sync completed successfully.\"\nAm I correct?. Related: #544: \"Please add a new 'File > Sync and Exit' menu command\". @dmsnell, in #459 you wrote:\n\nSince Simplenote is by nature a distributed application and updates to the same note could happen from different devices at near the same time we also run into race conditions with the updates, meaning that an announcement from the server could be on its way at the time we think we are up to date (meaning that we are now no longer up to date but don't realize it).\n\nThis is unlikely, but I admit that it's possible.  Especially in unusual cases like \"my entire house's broadband Internet service just came back up after an outage\".\nOK, fine.  So you can't really guarantee that a \"Sync and Exit\" has been truly successful.  Instead of \"Sync and Exit\", perhaps you can instead provide a \"Save and Exit\" command.\nA)  Can Simplenote know for sure that all local changes have been successfully received by the server?\nB)  If so, could you make a \"Save and Exit\" command?  (This command would show the message \"Sent data to cloud...\" for five seconds.  Then, if all local changes have been successfully received by the server, it would show the words \"Data saved successfully\" for three seconds.  Then it would exit.). ",
    "Novbert": "Although I think introducing split view would unnecessarily overcomplicate simplenote, I think it would be useful if the Edit view and Markdown view could be synchronized, so that I can see the same part of text when switching between the two. When working on longer texts it is a bit of a hassle that I always need to find the place I want to edit, when I switch between the two views. . ",
    "RicardoEPRodrigues": "I see your point of view, Simplenote should be Simple, but the current tab switching it's a little annoying to me, maybe the solution is somewhere in between.. ",
    "yonathanF": "I am interested in this feature too. Maybe updating line by line could work? When I press enter, the line I just wrote could be converted. Or have an \"update\" button so everything I have so far will get converted (like pressing compile in Tex editors). . ",
    "druesome": "I got a similar report about this as well.  A user writes:\n\nWhenever I'm editing a note (say I have a long block of text, and I'm editing a sentence somewhere around the middle of it), the cursor will randomly jump do the bottom of the page, and whatever I type onwards from then ends up at the bottom of the text that was already there. It's really disruptive for my workflow, and really annoying. Couldn't find anyone else with a similar problem so far. \nI have the latest version of the program installed on Windows 7 \n\n(I presume they have version 1.0.8, but I'll ask to make sure).. ",
    "ngarside": "I've had the same problem, although it's very intermittent.\n\nWindows 10 x64 (Creators Update)\nSimplenote v1.0.8\nMarkdown enabled\nNote not shared\nNote open (but not being worked on) on another device\n\n(Haven't had a chance to test if it still happens without the note being open on another device).. ",
    "beatskipt": "I have the issue too. Either it occurs in a session or it doesn't and if it does occur it keeps happening. \nWindows 8.1 Pro \nSimplenote 1.0.8\n\ncurrent note: \nMarkdown not enabled\nPinned to top \nNote not shared\nNote not open on another device\n\nDefinitely a workflow killer. I hope you're successful in fixing it. Thanks. . ",
    "pothi": "\"Cursor jump\" also happens on SimpleNote version 1.1.0 on an Ubuntu 16.04 based distro (elementary OS) and on Macbook Air with macOS latest version and with all latest patches installed (I am not on my mac right now to provide specific version).\nI can't find a reliable way to reproduce it, either. But, wanted to let everyone know here, though.\nIt's not too annoying. But, would love to see it works as a normal note taking app. The app is still great to work with and to sync across devices. Thanks.. ",
    "j2xl": "This is still an issue with Simplenote v. 1.3.4 on Windows 10. Pasting into a rich text box in Chrome applies the dark-mode background.. Yes, this is fixed in 1.4.0. Thanks for the clarification. I had been concerned because I just downloaded 1.3.4 a week ago and this bug had been fixed about 2 years ago. All's well. :). ",
    "aduth": "Yeah, variable heights are tricky in react-virtualized. While a bit cumbersome, the approach I took in Calypso's <PostSelector /> component was to access and store the node's clientHeight as part of a ref function callback. When rerendering, if the item height is available, it's used, otherwise falling back to a computed height based on some predetermined constant. <PostSelector /> also handles hierarchies of items, not sure if that's needed here but available for reference if so.. ",
    "ellatrix": "Yes, I think it's best to cache the calculated row height per note, to avoid recalculating all other note heights, and invalidate it when the note changes. It's possible to recalculate from a certain index, but all the following note heights will also be recalculated. There's no way to recalculate a specific row index' height and recalculate the position of the rows after it without also recalculating their height. Not sure if it's meant to be up to the implementor to cache this, or if there might be room for such a method in React Virtualized.. ",
    "JM-Mendez": "@dmsnell Are you still having this issue and have you checked it with the production React version yet? \nI saw the referenced post on the Draftjs repo, and one thing to keep in mind is that Draftjs uses immutablejs internally. So it will definitely be slower than Prosemirror regardless. Although the numbers posted over there I believe are indicative of using the production version on their demo site. I loaded 160 pages worth of text and saw the same issue, but when I used the examples in their repo, load time significantly improved.\nAlso, each text block has it's own overhead. Including line breaks. So a note with more single lines will be slower than a note with large blocks of text.. @dmsnell I read that apparently FB has made it clear they're mostly interested in fixing issues that affect their own workflow, so I don't think you'll see much movement there. \nI took a cursory glance through the code, and when pasting html they sanitize the html, then sanitize the text while creating multiple new RegEx objects per chunk of text, convert to an Immutable record, then batch render all the new blocks.\nSince the pygmalion text is a play with 1126 separate pieces of text (I tested the length of the blocks array), I think the overhead of creating RegEx objects for each of those chunks if thrashing the garbage collector.. Ok, so I'm not familiar with this project's data structures (I stumbled upon this issue while trying to resolve a similar one for myself), but I ran some more tests and came up with these conclusions.\n\nThe RegEx is not the problem. They're properly cached.\nYou're right that most of the time is spent in React. Draftjs re-renders the entire editor with each change. \nIf you're just typing, then it looks like it just passes a new editor state object as an undo/redo point. \npressing backspace or loading the editor requires each block to render according to the react devtools highlight \n\nI threw together a test using the production version of both Draftjs and React. I logged to the console the time it took to update the block, exclusive of any work React does, and was able to get it significantly down, but it looks like React adds an extra 60-80ms. Still upper bounds were 140ms to update under stress. You'd still be dealing with typing and deleting lag with something this size. I set up the test like so:\n\n\n4000 draftjs blocks (line breaks count as a block), with a total of over 120k words.\n\n\n100k words is the length of a long history non-fiction book, so I thought it'd be a decent stress test\n\nthe blocks of text are of varying length\nI only updated the last two blocks for recording purposes.\n\n\nThe following code assumes \n  - your block data structures contain at least a key and text prop. (I'd recommend using convertToRaw and using the resulting structure if possible.) \n  - you are managing adding new blocks anywhere in the document \n      - cutting and pasting reassigns the key\n      - unfound keys are set to the end of the OrderedMap\nI also came up with a solution to just update the text, but it's inelegant. I can post that if you want.\n```javascript\n// current editorState since each change is a complete editor component (which is why immutablejs is useful)\nconst currentContent = this.state.editorState.getCurrentContent()\n//  key must be a string and unique \nconst arrayOfPojos = [{key: '123', text: 'text of 1'}, {key: '456', text: 'text of 2'} ]\n// entityMap must be provided\nconst newBlocks = convertFromRaw({ entityMap: {}, blocks: arrayOfPojos })\nconst newEditorState = newBlocks.blockMap.reduce((contentState, block) => {\n    const newBlockMap = contentState.blockMap.set(block.key, block)\n    return contentState.set('blockMap', newBlockMap)\n}, currentContent)\nthis.setState({editorState: EditorState.push(this.state.editorState, newEditorState)})\n````\nLet me know if you find this useful.\nOff topic, are you a maintainer of the simplenote-electron app? I'm curious as to how it only shows usage of around 35mb, when all other electron apps are hovering in the hundreds. . > I'm not sure I follow what you are proposing here, could you clarify what your code is accomplishing?\nPreviously you said:\n\nif we did this, we could also potentially replace blocks only as they are changed from the Simperium side, not having to recreate the entire document\u2026\n\nThe code I posted just does that. Updates individual blocks with changes and creates a new editorState object. I did notice the initial slow load, but thought you were recreating the entire doc from a raw state on changes (so 1-2 seconds to update on each change). Re-renders are much cheaper, but the entire editor is passed through on each change, so React still has to diff each child (thousands in your example). Anyways, that's the reason I shared the code.\nI haven't found a way around the slow load times. Honestly I think it has more to do with the combination of React and Draftjs. Atom editor had issues with React powering their editor as well, and decided to move to a more manual solution as can be seen here https://github.com/atom/atom/pull/5624. So using the combination may very well not be ideal for your problem domain.\nAlthough since you're using redux and it can store an immutable object - if you store the note as a complete contentState object (using convertToRaw), then you'd be able to update individual blocks even while it's in the store. You could run it in an invisible browserWindow render process to offload the work as well.\nBut that's just shooting from the hip. I've no idea how performant or viable a solution that would be.\nAnd yeah, 35mb no lie. There's only one instance running that I could find. Not one helper or anything. So weird. lol. At the moment I'm exploring possibilities for writing a collaborative editor using Draftjs. Since I was reading the codebase and running tests anyways, I thought I'd share whatever I found in case you'd find it useful. \nI'm self taught (mostly by following the open source community), and have never worked on a project with others, so I don't have much of an idea on where to begin to make pull requests to be honest. But my editor is the only software I'm working on during my free time, and I figure you probably have a lot more on your plate than I do. So I'm more than happy to post my findings over here. \n\n\nah. in our case I think it's simpler because what I meant is that Simperium gives us the queues to where changes occur...\n\nI see. So your logic flow updates the material using Simperium, and then syncs it into the app \nusing Draftjs, is that correct?\n\nWhat Monaco doesn't seem as easy for is decoration and variable-height lines, but I may just be inexperienced with it to know of easier ways.\n\nFor my use cases, I'd need variable-height lines, so Monaco won't work unless I could figure that out. But it's something I'll look into. Although tbh, I really like the Draftjs internal data structure. I'm contemplating forking it and modifying the base, especially looking into the load times to see if I can bring it down to at least a second for large docs. I personally don't think FB is interested in figuring out this use case because it does not impact their core business. It'll take me some time to get more familiar with the code tho. They micromanage the entire contenteditable state, so my main concern is introducing unknown regressions since I'm not familiar with it.\n. ",
    "will-hart": "I'm not sure if this is the same issue, but I seem to have a variant of this issue with Android and 1.0.7 on Windows 10. My steps:\n\nWhen I opened the desktop app it no longer shows any notes or lets me create new ones. \nThe web and Android interfaces correctly show my notes. \nLogging in and logging out of the electron app doesn't fix it. \nWhen I tried to rename the C:/Users/MyUserName/AppData/Roaming/SimpleNote directory to \"clear the cache\", it refuses and says the folder is in use. \nSimpleNote is not visible in the task bar.\nWhen I look at Task Manager it is still running. \nIf I end the task and reopen SimpleNote it seems to fix it.\n\nI've actually noticed this \"failing to exit\" in other electron apps such as Ghost\nEDIT: Happy to create another issue if this is unrelated. ",
    "nicolad": "@mirka I tried to reproduce it on macOS 10.14.1 and simplenote v1.2.1 and it's not showing publish icon. Although doing the same on web app it's showing publish icon.. Understood, @mirka. Adjustments are here:\nhttps://github.com/Automattic/simplenote-electron/pull/997. Adjusted related printing styles and other generic ones here:\nhttps://github.com/Automattic/simplenote-electron/pull/992. This PR is related to this issue: https://github.com/Automattic/simplenote-electron/issues/858\n@mirka please take a look.. @mirka, have updated, please check . Intent is to adjust spacing, which I have done with additional commit. I have borrowed resets from Gutenberg: https://github.com/BafS/Gutenberg/blob/master/scss/_print-reset.scss. Yes, that's fixing the issue, have updated the PR. Thank you for hint :). ",
    "megsfulton": "\nthough here there's a link to open the share dialog directly \n\n\ud83d\udc4d Good call, it's nice that this is actionable. \n\nnamely there's junk CSS in there I'm sure is done better differently.\n\n\ud83d\ude05 I'm not sure I'm the best person to de-junk CSS \n\nI would appreciate some review of the text\n\nMaybe we try the following:\nCollaboration Has Moved\nPress the Share icon in the toolbar to access the Collaborate screen . ",
    "djordjeandrejevic": "Okay, one more also related to selecting (although this time it's the edit mode). I wasn't sure whether I should open a new issue, so I'll post it here.\nThe issue happens when I try to select long text (usually some long URL) starting from the last character and by using a keyboard (Shift + \u2191 to be precise). This long text I'm trying to select has to break into a new line and and has to have - character somewhere in the middle. Like the one on the screenshot below.\nScreenshot\n\n(you can copy/paste this placeholder text to test it yourself: bbbbbbbbbbbbbbbb-bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb)\nTo reproduce this bug, place your cursor at the end of the text (after last b character) and try to select whole text by using Shift + \u2191 on keyboard. The selection will stop as soon as it reaches the - character. Selecting from top to bottom (Shift + \u2193) works fine though.\n\nUpdate: actually this behavior is electron problem, faced the same bug on Skype for Linux.. Duplicate: https://github.com/Automattic/simplenote-electron/issues/511. One more issue regarding markdown numbered lists.\nPaste the following and switch to markdown preview:\n```\nTest\n\nOne\nTwo\nThree\n\nsome_text some_text\n\nFour\n```\n\nPreview mode doesn't continue numbering. Instead it starts from beginning:\n\nUbuntu 16.10  / Simplenote 1.1.6. Happens to me too. I've immediately noticed slight delay even when switching notes. It wasn't as snappy as the last version. The thing that completely blocked application is the search functionality - I had to manually kill Simplenote process. Downgraded to 1.2.1.. ",
    "t-perm": "Can you fix on window version ?\nI can not copy in preview markdown :(\n\n. Is work on window version?\n\n. ",
    "eduardozulian": "Also reported on 3037899-t. ",
    "keypey": "\nI removed all the notes, and all tags (on Linux LMDE)\nCleaned: Empty trash.\n\nAdd only four notes (see above).\nLMDE2:\n\n\n\nInsert search word: clus - result ()1,3,4:\n\n\n\nOpen client on: Debian & Android:\nDEBIAN:\n\n\n\nANDROID:\n\n...so I suppose Simple Note Data/index corruption. On botch platform I saw new 4 items...and \"old 4 items\" and all \"deleted\" notes.\n. ",
    "ForgottenUmbrella": "Can confirm that this occurs on Linux OSes too.. ",
    "LondonAppDev": "I can confirm this occurs using Simplenote v1.0.8 on Ubuntu 16.04. . ",
    "labuboco": "Windows 7 has same problem.. ",
    "carladoria": "reported here: 3194884-t too. ",
    "chriscollinsboxuk": "I'm also seeing duplicated tags: I'm not sure how this came about. On my Windows 10 machine, I see the duplicates. On the Android app I don't see them. On simplenote.com I see the duplicates.. ",
    "yoyoyojomo": "FYI #422 has been merged. It looks like something still needs to be tweaked so the rpm shows up at https://github.com/Automattic/simplenote-electron/releases. I am just randomly stumbling upon this PR, but I thought I should mention that Duospace is not a fixed-width font; 'm' and 'w' are 1.5 width. This could be confusing for anyone expecting fixed-width like ASCII tables/art/etc.. ",
    "sdixon194": "This featured was also requested in 969927-zen. ",
    "gie3d": "I did some investigation into this issue and found this might be root cause.\nin lib/utils/filter-notes.js, the logic to find related notes are using.\njavascript\nreturn notes\n               .filter( overEvery( [\n                   matchesTrashView( showTrash ),\n                   matchesTag( tag ),\n                   matchesSearch( new RegExp( escapeRegExp( filter ), 'gi' ) ),\n] ) );\nthe interesting part is in matchesSearch which uses 'gi' (g - global). It then calls to includesSearch\njavascript\nconst includesSearch = ( text, search ) => search.test( text || '' );\nand the problem is search.test() which uses RegEx 'gi'. When it finds a match, it sets search.lastIndex to that string position. When it comes to the next note, it won't start examining at the beginning of it but it will start at the lastIndex. (http://stackoverflow.com/questions/1520800/why-regexp-with-global-flag-in-javascript-give-wrong-results)\nSo I think the solution is to reset the search.lastIndex = 0; every time it comes to this function\njavascript\nconst includesSearch = ( text, search ) => {\n    search.lastIndex = 0;\n    return search.test( text || '' );\n}\nWould this fix is acceptable and could I submit a pull request?\n. @dmsnell I agree with you as the code will look cleaner than reset the lastIndex to 0.. Tested with the merged PR and the issue has been resolved.. Thanks @dmsnell for your feedback. I'm not quite sure about the glitchy behavior you mentioned. Maybe you can share some information with me (such as how to produce external update from Simperium) and I'll find a way to verify?\nIn the meantime, I updated the code and put the focusInput() into componentDidUpdate()\nAnd tested this morning I also found an issue, in tag-field.jsx, when you removing all the tags then the this.state.selectedTag becomes undefined and then cause an error Cannot read property 'length' of undefined in hasSelection(). I raise the issue #550 and this should be fixed by this PR.\nI cannot add a unit test for this as I still cannot run it.. One of the thing that I don't understand is that I checked out v1.0.8 in this repo and I still face this issue. \nBut why I can't reproduce it (the caret jumping issue) in my account on simplenote.com or my macOS (which both are v 1.0.8). Ok. I'll try to simulate and test it this weekend.\nOn macOS, actually I use the electron version (not download from App Store) and when I clicked at Contribute, it leads me to this project.\n\nFor unit test, I created a #551 as I still cannot even start running it.\nMany thanks for your help \ud83d\udc4d \n. Hi, @dmsnell \nI tested by opened 2 incognito chrome browsers (let's say (1) and (2)) and opened my account and tried to update tags in both browser.\nI observed an error when\n1. Updated tags in (1)\n2. Updated tags in (2)\n3. Come back to (1) and you will see an error in console log\nHowever, this happened before this PR and I didn't see any other issue. So I think this PR doesn't introduce a new issue.. Thanks @dmsnell  :) I close the #548 and #550.. Basically the cursor should be at the end of the text when you type which I tested the latest master and it didn't bring the issue back.\nBut come to think of it, let's say you want to put a tag name called 'test' but you mistakenly typed 'tst'. So you move the cursor and type the 'e' then the cursor is going to move to the end of the text. Not sure if this is Ok?. This should be fixed by this PR #549 . Tested with the merged PR and the issue has been resolved.. I think it looks nice to put those Zoom In, Zoom Out and Actual Size into the root level. And doing this will left Note Editor a single submenu which is Line Length, so should we pull it out into root level as well?.\nI tried to hack it and it looks like this. What do you think?\n\nOne more thing, I think it's more intuitive to label the Zoom In short key using \u2318+ rather than \u2318= but I still cannot find the way to do so. What do you think?. Ok, I'll try and will submit a pull request.. Saw that the CI checks have fail. Looking through the errors and I think it's about deployment. Not sure that it is something that my code causes this trouble? and is there anything I can do to fix this?. ",
    "kwonye": "Experiencing this on macOS as well. ",
    "raevilman": "First time user. Installed on windows 7. Signed up. Not able to login. Same creds working on web app.. ",
    "a9works": "This is still an issue! Cannot log in on macOS or Windows 10.. ",
    "lwx5924": "I still cannot login in mac, do you solve this issue?\nFirst time, I cannot with the dev version, I think this is the development environment.\nThen ,   I try build the app for Mac build. But still cannot login. \nCannot Sign accout too,\nDisplay:\"The credentials you entered don't match\".  @mirka thanks very much for your  reply.\nHow can I change to production databases if  I use the build app( build by myself) ? . the production app does not support language highlight. . @mirka simplenote production app I install from the app store, it does not support   'syntax highlighting', such as javascript & cplusplus. But the development builds support.. @mirka thanks, that is what's I wanted. thanks for your kindly response.. @mirka  but I want to know, how can I use the production database if I build the code ( using git clone ...) way?. ",
    "figueroadavid": "Didn't occur to me that an application issue would be tied to the virtual host.. I have since blown all that away and haven't come back to this..\nThank you though, \nDavid F. \n. ",
    "grvrulz": "For easier testing, here's the markdown file that I used:\ntest.md.txt\n. Looks like this also happens on Windows, and the new Mac OS beta, according to user reports and some testing I(and others) did.. For Flatpak, it should be submitted to Flathub https://flathub.org\nHere's a sample packaging recipe for Atom from Flathub https://github.com/flathub/io.atom.Atom/\nHow to submit ton app\nhttps://github.com/flathub/flathub/wiki/App-Submission. ",
    "arunsathiya": "Noting that this is not the case on the latest stable version of Mac and Electron apps. \n\nTested on Simplenote for Mac (Simplenote 1.3.8) and the PDF save looks as expected. PDF save from Simplenote for Mac.pdf\nTested on Simplenote Electron 1.1.7 and the PDF looks as expected as well. \nPDF save from Simplenote Electron.pdf\n\nTested using the same test file mentioned earlier on https://github.com/Automattic/simplenote-electron/issues/540#issuecomment-292591886. The saves are fine for other tests I did using other content as well. Should we consider closing this issue, @mirka?. Ah, I misread something, @mirka. Can confirm this is still an issue with markdown enabled. Thanks! \ud83d\udc4d\ud83c\udffd . Noting that I am able to reproduce this as well on Simplenote for Electron. \nAs a side note, on Simplenote for Mac (Simplenote 1.3.8), I am not able to see the tags in the revision. I have gone ahead and submitted this issue over here https://github.com/Automattic/simplenote-macos/issues/254. ",
    "daylightbrightledlight": "I like this idea.. ",
    "woneob": "same issue in 1.0.8 Windows. ",
    "rosszurowski": "Other possible solutions:\n Provide web-based permalinks for notes, so we could open them on app.simplenote.com\n Add a URL scheme (\u00e0 la Notational Velocity's URL scheme) to the apps to allow linking directly within the application\nRegardless of how it's implemented, being able to connect related notes would be really helpful.. ",
    "souljedi": "I also appreciated this feature with nvAlt and would be happy to see it supported in simplenote natively.. ",
    "Crazor": "This would be a great feature! I suggest combining the suggestions of @gerv and @rosszurowski.\nParsing links like [[Note Name]] is convenient to the user, especially if there would be some kind of auto completion while typing the link. NVs usage of unique IDs allows renaming notes without breaking links.\nI've never used NV, but it seems it already supports Simplenote, so it would be nice to follow it's URL style, I guess.. ",
    "jakobdkp": "Or have the # in the note title automatically removed from the notes list, which already happens on the web interface!. ",
    "blukas": "I agree that it would be great to remove the # from the title in the note list. I have all my notes in markdown, so the first line always has a #. This makes for a lot of visible clutter and hurts scannability of the note title list.\n\n. ",
    "leehblue": "I'd really like this feature too. Right now, if I want to see multiple notes at the same time, I have to fire up a web browser and use the web version of Simplenote while composing in the desktop version.. ",
    "klaussinani": "Nope, it has no effect over the MacOS build. This option targets only Windows/Linux platforms.\nIf not defined inside the BrowserWindow class, the autoHideMenuBar attribute is set to it's default false value, which means that yes it was always active on the Windows/Linux builds and hiding it was not possible.\n\nautoHideMenuBar Boolean (optional) - Auto hide the menu bar unless the Alt key is pressed. Default is false. (taken from here)\n\nThe color  change of the app's window bar, from white to dark grey, was due to the app switching from unfocused to focused mode on my desktop, so it is just a \"window manager thing\".\nWhen initially launching the app, the menu bar is hidden. Pressing once the ALT key, toggles it to visible, while a new up-following ALT key-press will un-toggle it, thus setting back to hiding mode.\nI hope my explanation was somehow helpful. Happy to help out : ). ",
    "mleko69": "Thanks @klauscfhq your workaround works like a charm. Why it still hasn't been added to program yet? Simplenote looks so sexy without that visible menubar <3. ",
    "eurruby": "This addition is the simplest way to do. It works like Firefox then users will not be confused. @roundhill @drw158 don't you think it's OK?. ",
    "Canorus": "\"old\" 1.1.8(1182) and \"new\" 1.0.8\n\n\nThank you :)\n. ",
    "tareefdev": "Thanks a lot.. another something I didn\u2019t mentioned it: the problem appear in both Linux and Android apps. ",
    "itaysk": "@drw158 Are you planning to fix this?. ",
    "DamionGans": "The Android version is available in Dutch, so maybe you can port that easily to the desktop app?. ",
    "kwight": "Whenever I stop typing in the textarea, the cursor jumps to the tag section:\n\nNo other surprises though; also tested list behaviour (thought numbered lists wasn't working, but it seems only bulleted lists are supported?).. I had a similar experience to @gwwar , I couldn't tell what difference focus list view made. Then I noticed that it always mad the top note active, but didn't necessarily give the list focus, eg. with the tags column open, cmd+shift+n makes the top note active (and updates the preview), but my focus was still in the Tags column (I think?).\nWhile the other shortcuts worked as described, I had one unexpected behaviour. Once having opened the tags with cmd+shift+t, I wanted navigation keys to move up and down the list of tags so I could select one. I understand that breaks behaviour how things work now, but thought I'd mention it (I did it many times, and it always jarred me to suddenly close the Tags column.. This is fine for me \u2013 my above comments could be later hopeful improvements, but don't block a release at all.. Came across #613 , but it's in master also; while other spelunking around, things seem good \ud83d\udc4d . I'd vote to just fix it now for parity with the web app (so, add the search text to a new note regardless of search results). Intentionally leaving it out feels like a bigger conversation. (And yes, it works well.). Yep, confirmed \u2013 thanks @natanielcz \ud83d\udc4d . ",
    "gwwar": "@dmsnell is this one ready to look at? Are the problems you listed in the summary something we're ok shipping with or did you need help tracking them down?. Which version of electron do we ship with? dev dependencies look pretty out of date, and install instructions note to install electron globally which will pick up the latest published package. Just noting that we should pin versions if we haven't yet for the build. For example, I notice we're using a non LTS version of node in Docker that isn't latest either.. I wasn't able to get the docker container going, but testing this local dev seems to work well. There was one I wasn't able to figure out if anything happened for Open/focus list view. @spen should we also be using v1.6.11 electron and node v7.4.0 here? I forgot about the vulnerability details.\nhttps://github.com/Automattic/wp-desktop/pull/322. ",
    "maanemann": "Alright, I found my answer in the Twitter comments. You have to write the image source in markdown like so: ! [title] (source) (without the spaces). Gotta be honest, that's not simple enough for me, especially not the times when using a touch keyboard. Also the image has to be online, so I'd have to upload my photos before being able to attach them. I'll wait for the friendly button before considering Simplenote again. Sorry.... ",
    "Krzychek": "Sorry for \"reopen\", but how about adding some external service for this (gdrive or imgur like)?\nOr maybe adding ability to write simple plugins, that would allow anybody interested to add this feature (without getting deep into app code).. In near feature (like 2 months) I could write plugin, unfortunately for now I don't have much free time.\nAnyway without a simple plugin hook I (and anybody else) would need much more time to spend on it.\nI imagine simple API like:\ntypescript\ninterface Plugin {\n    addActionButton(opts: {\n        name: string | ActionEnum,\n        icon: string | BaseIconEnum,\n        type?: string | ActionEnum,\n        onClick: Function\n    }): void | Promise\n}. ",
    "sevku": "Having to switch to another program because of this issue. Maybe it'll get fixed in the future. Simplenote would e awesome.. ",
    "viewergit": "Yes, that's what I want to say. ",
    "davealexis": "I agree.  It would be much clearer and a better experience to just explicitly set markdown on for everything in settings.  Always-enabled markdown is something I've wanted in the app since I first started using it.. ",
    "video99": "Always-enabled markdown feature is nice.\nA Toggle option markdown for all notes at once (for all notes) also recommend . ",
    "Itrofnoc": "Please add as well some way to markdown-enable old notes. I have more than 2'000 of them, and every time I need to click an URL in an old note I must manually enable markdown (only 3 clicks, but rather annoying). . ",
    "SeanKilleen": "I don't mind the behavior of defaulting to the behavior of the last note, which works correctly for me upon creating new notes.\nI have 1,000+ notes that I need to change to markdown format, and I'd like to save 3,000+ clicks and maybe save others that as well.\nIf I was able to submit a PR for this as a kind of utility / extension from the menu, would the Simplenote team consider it?. @mirka will do! Incoming shortly.. In terms of the parsing, this project may help as a reference point: https://github.com/claytron/ever2simple. @mirka let me know if I didn't capture something here. Thanks!. @roundhill thanks so much for this! Is going to save me a ton of time in my life.. ",
    "aseemgautam": "\ud83d\udc4dif the app would just remember the preview markdown setting. Its a pain to toggle it everytime opening a new note.. ",
    "liberatoaguilar": "I added the space and now it works fine! Thank you very much.\nOn Thu, Jul 20, 2017 at 4:04 AM, Dennis Snell notifications@github.com\nwrote:\n\nThanks for the report @liberatoaguilar\nhttps://github.com/liberatoaguilar!\nMarkdown has some funny rules around headers and the standard\nimplementation requires a space after the #s and before the content. Can\nyou try adding a space and seeing if it works?\nThis is confusing with Markdown because different parsers handle it\ndifferently, but we hope to try and implement the spec as much as we can.\nhttp://spec.commonmark.org/0.27/#atx-headings\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/issues/591#issuecomment-316658293,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ac55o9HJXUiHjYDb5R20dLIERMOwyd-Kks5sPyY_gaJpZM4OdnJv\n.\n. \n",
    "iblazhko": "Another option would be to clear Markdown markup so that the notes list would look like this:\nRandom Note\nNOTE 1\n---\nNames\nPlanning ahead\n---\nBook\nJust Listen: ...\n\nIf you primarily use Markdown for your notes, the note title will likely start with #, this just clutters the view.. ",
    "PlugaruT": "Any updates in this one? . ",
    "audiovideodisco": "I would looove it if Simplenote showed the rendered markdown in the note list, as @giannissc suggested. Clearing the Markdown markup, as @iblazhko suggested, would be a fine second choice. \nAs it is currently, the markup visible in the note list is so visually janky and hard to parse that I just can't bring myself to use the Markdown in my notes at all. Instead I've searched out a collection of unusual HTML characters that I use for outlining, separating, and emphasizing sections of my notes. . ",
    "rakhi2104": "I fear a problem, if the title is rendered H1 in few notes in the notes-list and not all, that would look weird.\nInstead @giannissc 's hack would be much better.\n- One more suggestion would be different titles for each note, so as to differentiate between content of the note and the title itself. :thinking: . Hope the :eye: preview icon resolved this.\n@roundhill @mirka can close this issue.. I'm taking this up :1st_place_medal: . Definitely :sunglasses: \nDon't know why the third one is also so attractive :drooling_face: . Hey @mirka, I made a board of shortcuts to classify between different categories.\nAny changes to be made ?\n\n. Oh, thanks ! Will make those changes.. @mirka will making the app launch in windowed mode rather than fullscreen mode fix this ? or should we add a fullscreen toggle ?. Fine :+1: . Why not platform dependant icons ? :thinking: . I'll work on it.. > Shortcut for \u201cRedo\u201d should be Ctrl+Y\nis it applicable only to Windows ?. Updating those changes @mirka.\nThanks for reviewing. Most of the edit commands already have role assigned in the code.\nIs accelerator overriding them ?. > Add an easy way to get to Settings (maybe in a permanent footer like the current web app?)\nthe is-electron CSS class hides it in the electron App.\nSo, removing this will finish the work I believe.\n. Should the Settings option hide inside the navigation panel ? (this can be accessed only by selecting the tags icon, which is disturbing)\nWhy not make it available in the notes and search panel itself ? \n@mirka @roundhill . Which release of Simplenote are you using ?. Maybe #904 should resolve, if any. Thanks @mirka :v: !. Hmm... :thinking: \nBut it did work on mine :sweat_smile: . - Corrected 'kbd' tag styles to adjust to text zoom.\n- Added 'kbd' tag in sanitize-html.js. Sorry, I don't have access to a Mac. Its better you give a shot at it.. Since Simplenote uses Showdown.JS to render Markdown.\nShowdown doesn't support MathJax as of now. . I'll definitely update them. :v: . My pleasure, @mirka  :smile: . It works on my computer though.\nTry reinstalling the app. If you still face the same issue, comment here.. Or, we could add some key points to the scroll section to quickly jump to that part of the Note.. I worry that would remove list style to all the li items, not just that wraps task items.\nShowdown does add the task-list-item class if li item contains a checklist.\nExample behaviour:\n the one in the middle with the above code\n the other by adding list-style: none to all the li items\n\n. It was always there. :smiley: . ",
    "lindsaymacvean": "@dmsnell Where is the other repository bug so I can keep an eye on it?. ",
    "thesacredpath": "I see this is still open. Is it still being considered?. Forgot to finish the title.\nAdd Siri integration for mobile app.\nAlso thinking this might be nice on the apps for the other supported platforms as well.. @mirka, sorry I missed this. Yes, I will check to make sure it has not already been added and then add it.. ",
    "shubham9411": "OMG, please can we make it look like its a soft delete, because from a long time I was thinking it will hard delete my notes. Today i was here for making a feature request for same and got this. :disappointed: . ",
    "zedgoat": "Thanks for the reply, to clarify:\n- The notes that were overwritten were existing notes that were on both Desktop and iOS.\n- The offline desktop client had new content, that had not been synced.\n- The online mobile client (iOS) had the old versions of the notes, that I opened to check.\n- When the desktop client came online, the new desktop content was removed, and the old content from the mobile client was there.\nNew notes created on the desktop didn't appear to sync into the iOS client at the time, but were still there.. All good! Good luck hunting it down. Put the suggestion forward via twitter / support that it might be worth having a diff interface for this stuff?\nBreaks the simplicity mantra, but aside from if there are sync issues it would also be useful where multiple clients have been offline for a while and the notes have diverged quite a bit.. @gerv, sounds similar to the sequence I managed to create.\nIt's an interesting case, I'm assuming it's supposed to roll the versions from different sources into the note history in the order of their timestamps. If not, it might not be the worst approach so at a minimum it retains the full documents from each source if there's a conflict or the sync process breaks down.\nDiff of changes from different sources would be my preference but that can be intimidating for non-technical users, at least from what I've seen form people's first exposure to the process.. Nothing additional to report, but thanks @dmsnell for the awesome writeups and insight into the sync scheme.. @planetahuevo I don't normally shill but this seems to be impacting a lot of people, I had a few more instances of content loss around Aug-Sep last year, then switched to Standard Notes (standardnotes.org). It uses a strategy where it keeps conflicting files instead of attempting to merge, no issues so far.. ",
    "GeoJunkie": "Just had a ticket (#696030-zen) with a user reporting this with tags. . ",
    "rohitagarwal257": "Any update? I recently lost my note while syncing between the desktop client and the web browser. Is there anyway in which the note can be recovered? I've looking in the trash folder as well as the update history, but nothing works. . ",
    "tarikmh": "This happens to me constantly! I'm on the brink of dropping Simplenote because of all the info and hard work I've lost. Please fix this ASAP.. ",
    "jenlynnemc": "User report in 1023014-zen. Similar to issues reported above.\n1. Changes are made in the Windows App Offline\n2. Simplenote and OneDrive were synced prior to being offline.\n3. When the user went online, it downloaded the cloud version instead of uploading changes\n4. Web app and Windows app showing same synced info.\n. Another request for this to be added to Windows app here:\n1429656-zen\n. User attached screenshot:\n\n. Another case 1784277-zen. ",
    "jeremypaavola": "User report in 1161737-zen. Although potentially in reverse.\nChanges were made in web app\nChanges reverted after user opened the Android app\nBoth the cloud and offline app showed the older version\nUser was able to restore the updated version from the note history popup\n. ",
    "mgalbritton": "User report in 1213729-zen.\nChanges were made on a mobile device not connected to wifi.\nUser opened up app on desktop and and changes were not synched.\nThen when opening up the phone, while connected to wifi, changes from computer overwrote to mobile, causing a loss of data.\n. Another report of this issue in #1383309-zen.\nScenario of what happened: \nUser was editing date with Win+iOS apps at work \nCame at home, run Linux client and found: \n- missing lines \n- found old lines which they removed in Win/iOS clients few hours ago \n- broken lines (damaged 2 lines concatenated to one line) \nThey opened iOS client and this client synchronized this corrupted data from Linux\n. Another report in #1392039\nUser uses Simplenote across different platforms and the syncing ends up overriding info. . Another request for this feature: 1248483-zen. Another report. User is using 1.1.6 with Windows and getting the same blank notes page. Reported in zen-1248383. Screenshots below.\n\n\n\n. Another report of this in #1277622-zen. \nRunning: Windows 8.1 \nSimplenote: 1.1.6. Another report of this in #1664641-zen. . Another report of this in #1697597-zen. . Another report in #1714515-zen . Looks like it has been reported in Issue 679. @Robertght No I cannot replicate on MacOS. Sorry! . Adding another report of this in #1672373-zen. . Another case 1678805-zen. Another report of this in #1679936-zen. I was also able to replicate it using the Electron version 1.3.4 on macOS Mojave 10.14.2. Here is a short gif:\n\n. reported as well in #1711021-zen\nSteps to reproduce (from user):\n1. Logged in. \"Remember Me\" selected. \"Try it Now\". \n2. Closed tab, NOT browser. \n3. Was still logged in. \n4. Closed browser. \n5. Required new login.. ",
    "sjaved87": "Another user report in 1220599-zen\nThe user was online while making the changes and here are some details about the application:\nSome details: Windows 7, 64x. Simplenote version 1.1.3. Don't use markdown. Don't use it on any other platforms. Never shared or published. Dark theme. Sort by last modified. Display condensed.\n. ",
    "dubyajay": "A user report in Zendesk: #1243253:\n\nWhich app do you need help with?: Windows\nHow can we help?: I made a lot of notes in the Windows app while I was offline (on a plane); then when I connected, they simply disappeared (just now). \nI've checked the Trash and 'previous versions' and can't find the notes.\nIs there any way they can be restored? \nThanks \n . \n",
    "sfbalg": "I just ran into this problem, too.  Tried your suggestion, did not work.  Anyone else?. ",
    "nv-quan": "I also ran into this problem today. I think this is quite serious for a multiplatform note taking app. Hope this will be fixed soon.. ",
    "justinkterry": "This constantly happens to me using the Linux and Android apps, is any progress being made towards fixing this?. I'm unable to reproduce this on the current version of simplenote and the current version of Ubuntu 18.04. The current version works perfectly fine on all my high dpi displays, I recommend closing this issue\n@mirka . Alright, awesome. ETA?\nOn Thu, Feb 8, 2018, 1:17 PM Dan Roundhill notifications@github.com wrote:\n\nI'm working on getting it to the App Store, which I think we need to\nconvert to appx for. I've followed this guide and it seems to work fine:\nhttps://electronjs.org/docs/tutorial/windows-store-guide\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/issues/708#issuecomment-364201488,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AShd7PNLb4Sozz23Ne5WWy_ij8U3pT62ks5tSzo6gaJpZM4R9qTH\n.\n\n\n-- \nThank you for your time,\nJustin Terry\n. I don't think we need to support windows phone. Microsoft no longer does,\nno phones have been sold with it installed in ~2 years, and it's market\nshare is less than .1% of mobile.\nOn Mon, Mar 5, 2018, 4:15 PM Maciej Czekaj notifications@github.com wrote:\n\n@roundhill https://github.com/roundhill electron-builder allows\ncreating appx but I'm not sure that It'll work on Windows Phone. We\nshould also check what are requirements to publish an app in the Microsoft\nStore\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/issues/708#issuecomment-370568264,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AShd7A5OkcFe-if6mDhKFwo0rPhqneogks5tbarvgaJpZM4R9qTH\n.\n-- \nThank you for your time,\nJustin Terry\n. Desktop/tablet, but they should be the same for our purposes.\n\nOn Mon, Mar 5, 2018, 4:40 PM Maciej Czekaj notifications@github.com wrote:\n\nSo We need to support only a desktop version in Windows Store?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/issues/708#issuecomment-370575882,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AShd7PGtsmW8NcLZ5IpRcSNQpJUWA1gjks5tbbDFgaJpZM4R9qTH\n.\n-- \nThank you for your time,\nJustin Terry\n. Update: the fix here (which I found after an error trying to use the tarball version) is you have to apt-get install libgconf-2-4 first. You need to include this, have the installer install this (which is better), or at least fail with error if you try to open without it. This is a documented issue with electron apps on Ubuntu: https://github.com/electron/electron/issues/1518. The issue is the default packages included changed going from 17-18, it's\nfully reproducable within that.\n\nOn Wed, Apr 18, 2018, 12:33 PM Dan Roundhill notifications@github.com\nwrote:\n\nHmm, I just tested it on vanilla Ubuntu 17 and it worked fine. Seems as\nthough it works for some and not for others.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/issues/727#issuecomment-382449065,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AShd7KAKTgsz0GNv9lxIsysnesTq8DMAks5tp2rCgaJpZM4SlkFy\n.\n-- \nThank you for your time,\nJustin Terry\n. FYI I just retested it with what will basically be the final build before thursday and this issue persists. Here's another thing that should be fixed with this: In ubuntu, it lists the software as proprietary in the installer, but the front end here is under GPLv2. What prompted the close?\n\nOn Tue, Nov 20, 2018, 12:32 PM Lena Morita notifications@github.com wrote:\n\nClosed #1007\nhttps://github.com/Automattic/simplenote-electron/issues/1007.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/issues/1007#event-1978015985,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AShd7KMMpu8Ew-qjilygQm7Eusoh4UDSks5uxDzCgaJpZM4YZCn5\n.\n-- \nThank you for your time,\nJustin Terry\n. Will it be open sourced?\nOn Thu, Feb 21, 2019 at 11:57 AM Lena Morita notifications@github.com\nwrote:\n@jb510 https://github.com/jb510 Yes \ud83c\udf89 The new webapp with Dark Mode\n(basically the same as the Electron app) is now live at\nhttps://app.simplenote.com/new\nThe old webapp will be deprecated soon.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/issues/1008#issuecomment-466078187,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AShd7LUhf7PBL8OHMizhOu4iM7yIt2_Mks5vPs_0gaJpZM4YZC0s\n.\n-- \nThank you for your time,\nJustin Terry\n. When this is merged it will close issue #1006 right?. First, I tried this on windows 10 and the issue persists there, which means this is a nontrivial issue. After looking around, I think the only legitimate solution is to recreate the menus in JS. I think that would honestly be worth it though, because they'd look much nicer, use the same fonts, let zooming apply, etc etc.. @mirka \n\nThis is still tagged as \"needs review\"?. Any updates here?\n@mirka . dpkg -i had been working with the previous version without gconf2 installed is the thing. This is issue very is closely related to #727, where you fixed this without having to install anything. It may have something to do with gconf-2-4 vs gconf2.. Also, I encourage you to take a look at what I outlined in #1191, I think that's the correct long term solution to all the problems like this that keep popping up.. Take a look at #1178. You probably have the same problem I was having.. This also effects your Linux build on Ubuntu 18.04, and is causing real problems for me.\nETA on fix?\nAlso, do you know why wasn't this caught in testing? This is a real problem.. When is a release with the fix going out?\nOn Fri, Feb 8, 2019 at 5:56 AM Lena Morita notifications@github.com wrote:\n\nClosed #1185\nhttps://github.com/Automattic/simplenote-electron/issues/1185 via #1193\nhttps://github.com/Automattic/simplenote-electron/pull/1193.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/issues/1185#event-2126772405,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AShd7DCLB_eNArIcZ9BvRjCmnRyOPEHrks5vLVfRgaJpZM4aex_m\n.\n-- \nThank you for your time,\nJustin Terry\n. This happened with a note to me too, on Ubuntu 18.04.. Simplenote doesn't package an official snap image, they only release an appimage. The snap is an unofficial build from snapcrafters, so this isn't the right place to complain.\n\nThat being said: given that the snap has taken over appimage, to the point where everyone knows what it is and almost no one knows what app image is, the team really should upstream snapcrafters build. Especially because that's the version that shows up on the Ubuntu store. . Could you please explain why you think snap is terrible?\nOn Fri, Feb 15, 2019 at 4:25 PM Cameron Eagans notifications@github.com\nwrote:\n\nLinux user here.\nPlease no.\nSnap is a gigantic PITA. AppImage is a much better solution if one must be\nchosen. It just works without having to have a separate daemon running\nsomewhere, so I'm not sure why adoption really matters there - they work\neverywhere.\nIf Simplenote is distributed only through Snap, I will not use it. It's\njust not worth it.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/issues/1191#issuecomment-464205805,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AShd7GjKXHvL0kBfs836QgrYiwnlEaJwks5vNyXBgaJpZM4af8jP\n.\n-- \nThank you for your time,\nJustin Terry\n. Also, if you read my post I literally said snap and still keeping a tarball\naround for less common cases.\nOn Fri, Feb 15, 2019 at 4:45 PM Justin Terry justinkterry@gmail.com wrote:\nCould you please explain why you think snap is terrible?\nOn Fri, Feb 15, 2019 at 4:25 PM Cameron Eagans notifications@github.com\nwrote:\n\nLinux user here.\nPlease no.\nSnap is a gigantic PITA. AppImage is a much better solution if one must\nbe chosen. It just works without having to have a separate daemon running\nsomewhere, so I'm not sure why adoption really matters there - they work\neverywhere.\nIf Simplenote is distributed only through Snap, I will not use it. It's\njust not worth it.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/issues/1191#issuecomment-464205805,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AShd7GjKXHvL0kBfs836QgrYiwnlEaJwks5vNyXBgaJpZM4af8jP\n.\n--\nThank you for your time,\nJustin Terry\n\n-- \nThank you for your time,\nJustin Terry\n. \n",
    "franklin373": "Just begin use SimpleNote, most new version, only add 4 notes, I really like its sync speed and Markdown. I use multiple devices and browser. But second day after I use SimpleNote, bring back one laptop to company, find laptop windows app looks all good, but new modify content not save to cloud, for I use browser and iPhone do not show new change. No way out, so I close windows app and lauch it again, well, all new change lost. It is too bad, I give up to use. I really surprise why app cannot save to cloud but no warning appear.. ",
    "ParhamP": "@dmsnell Ctrl + Shift + p or cmd + shift + p don't work in MacOS Yosemite to enable/disable the markdown preview. . ",
    "m-e-h": "Oh cool thanks! \nAnd sorry about the duplicate. I did a search through the issues but didn't find anything.. ",
    "spen": "Great point - I would say so. \nI'd have to refresh myself on the details but I'm fairly sure this vuln exists for any usage of node v6.9.0 or lower. This won't be an issue for the projects version of node, rather just the version of node we ship in the app (determined by Electron & the version of Electron we build with).\nIn researching for Automattic/wp-desktop#322  I found that the node versions found in Electron's history jumps past v6.9.0, landing at v7.4.0 in Electron v1.6.11.\nIt's a little late so I'll refresh myself on those details tomorrow to be sure, but I'm at least fairly confident in recommending Electron v1.6.11 to avoid that issue.\nAlso, to reiterate - the project wide version of node won't have any play in this vulnerability so that's safe to be pre v6.9.0.. ",
    "dankind": "Also noticed going from iOS / OS X to android with tab-indented lists.\neg.\nList of items added by iOS/OS X\n<\\tab>- one\n<\\tab>- simplenote automatically creates new tabbed dash with newline\n(Same list of items opened on android appears correctly BUT!)\nList of items added by iOS/OS X\n<\\tab>- one\n<\\tab>- simplenote automatically creates new tabbed dash with newline\n<\\space>- android seems to forego the previous tab-width and insert a space instead\n. ",
    "nateshmbhat": "ya please add this\n. ",
    "DanyGee": "Looking for this feature too.\nOnce the search term is found, the note's text (right pane) should scroll to the result. After hitting Ctrl+F it should jump to the next result, and so forth.. ",
    "melsophos": "This is a vital feature, otherwise it becomes very hard to use the app with very long notes.. I agree that this feature would be extremely useful: it would greatly help to navigate very long notes.\nThe table of content could be displayed on the left or right of the notes, with an option (associated to a shortcut) to hide or display it.. I strongly support this feature!\nApparently, there is an extension to use Latex with Showdown.. I also agree with this proposal.. I agree with this feature proposal. Even more, it would be useful to choose a default language for the full app, and then be able to modify case by case (I tend to write notes in both French and English, sometimes also German, etc.).. > For per-note settings, @PhiLhoSoft 's idea to use tags is interesting. Maybe it could be like a hidden, advanced feature, where the syntax (e.g. spell:en-us) is documented on the help page.\nIn fact, it could go in the note information page (accessed by clicking on the i in a circle in the desktop app), where there is already the \"pin-to-top\" and \"markdown\" buttons (if more options come in this page, it might be useful to associate it a shortcut).. ",
    "yustnip": "In addition. It was when I installed Simplenote as a snap. Now I installed it via .deb and all's OK with the cursor size.. ",
    "isanchezd1988": "I think it's not an application problem. It is a problem of a bug in the gnome shell itself that has ubuntu packaging\nThe following link follows the bug in question: https://bugs.launchpad.net/ubuntu/+source/gnome-shell/+bug/1700085\nI know because in my laptop (macbook 2013) i installed ubuntu 18.04 and i have this problem with some apps\nAnyway the test would be simple if we test in a different environment than gnome (KDE for example)\nPD: Sorry for my english, google translate helped me xD. ",
    "borg101": "I can also confirm I have this problem on Ubuntu 18.04.  In fact, after a fresh install, going to universal access and, clicking the largest cursor does nothing....even after reboot.  I also changed cursor size in dconf....again, nothing.  The only thing that enlarged my cursor was installing communitytheme from the software center.  Now, my cursor shrinks when hovering over the gnome panel and dash.. ",
    "sujaataarya": "It's great if you can turn the panel into the system tray!. Hi @dmsnell Yes, I looked at topic 710, in general, about the same speech.\nI just wondered whether it was possible to come to some decision, or a patch for the program.\nThank you!. ",
    "kungpaogao": "How did you fix this? I am also running Xubuntu, and this happens for multiple Electron-based programs, including Simplenote.. ",
    "petrprikryl": "+1. ",
    "ajyotirmay": "@kungpaogao my bad, I was using KDE and it was working just fine there, so I thought this issue was fixed. When I installed the latest build on my Xubuntu Xenial, this issue was still existing.\nI'm reopening this issue, as it seems like this one still exists on Xubuntu/Xfce-Desktop.. The following code snippet is from a Facebook Messenger application that I was creating for my desktop. I'm able to display a proper icon for my application, even on Xfce desktop.\nwindow = new BrowserWindow({\nwidth: 1000,\nheight: 600,\nicon: '/home/apurv/.applications/fb-messenger/app/images/96x96.png',\nwebPreferences: {\nnodeIntegration: false\n}\n});\nFrom what I think, the following code will be able to display an icon for Simplenote:\nicon: '/home/apurv/.applications/fb-messenger/app/images/96x96.png'\nBut this needs to be adapted according to this project's needs. If any one can help with this, it will be great. :). ",
    "taigi100": "Are there serious considerations for choosing to go with edit/preview buttons? Can we have something like edit in the preview too? What I'm talking about it would be nice to write in markdown and see it automatically as it is, for example, what Bear does on mac.. I also want to implement it myself but it will take a bit of time till I understand this project. Yet, let's see if they want it in the official project or we'll have just a separate copy of it.\nI'll also research a bit how to do it and based on the workload I'll try to let you know @kodburn :)\nOr you can just go ahead and beat me to it :P . ",
    "kodburn": "That'd be perfect and I'd love to help with the implementation.. ",
    "Robar666": "+1 for the live preview. ",
    "rizomer": "The Simple Note's Electron app seems to work perfectly even to export/download notes for large account (971kb compressed). Thanks!  . ",
    "secretfork": "@dmsnell now worries. It's actually not that long. Maybe about 0.5 second or so. But it's the small things that give the impression of \"flicker\". To be totally honest, many people probably wont notice (or care). It's actually quite common that developers fail to adress this issue, and it's also a common issue since many ui frameworks has some kind of hook/callback like 'ready-to-show' to remedy just this.\nI don't think you need to think about a splash screen. Now investigating where the delay is is a better idea, however, i don't think 0,5 seconds is very long. Delaying showing the window until it is presentable is what people do. Not just with electron, but with native toolkits too. It's just that sometimes you don't notice the lack of it (that said, if you present the window before it's ready, it might look ok on a fast desktop machine because it's speedy, but it will degrade on slower hardware, so it's alwaysa good idea to wait til it's ready).\nI did two short mp4s to illustrate the issue:\nbefore - https://www.dropbox.com/s/46zjrc1wjj2rji4/before.mp4?dl=0\nafter - https://www.dropbox.com/s/ne6g7u8kmuoghln/after.mp4?dl=0\n. @roundhill Sorry about the missing semi-colon. Amended.. That would work just as well. Let me know if you want me to update the pull request.. @roundhill pushed the change dmsnell suggested (i assume that is what you meant), so feel free to review and merge :+1: . ",
    "igrlas": "no, it was on for a while after i stopped using the app. And I was writing it on and off for couple of hours, so it should have been saved many times i guess.\nMy guess is that something went wrong in creating the note, because I only had an empty note on my account where my note should have bee.. ",
    "grand-lotus-iroh": "Just uninstalled software. Simplnote is lovely but this is a big \"must have feature\". Keep up the great work and hope to see this feature integrated soon.. ",
    "qiuwch": "One simple idea is automatically upgrade images to a third-party service, such as imgur, then paste links to simpleone. The website  handles their images this way and it seems work very well.. ",
    "darkmunn": "So far I can\u2019t get it to repeat the issue after I closed and reopened the program.  I\u2019m hoping it was only after the update and possibly closing it somehow eliminated the issue.  Because I\u2019m in the app a lot I will report it as I find out more.\nEdit removed the previous content from the Github email (@dmsnell). ",
    "zandyring": "It sounds like this is what's happening in 1009130-zen as well.. ",
    "alexdevero": "It is caused by issue in electron: https://github.com/electron/electron/issues/10862.. ",
    "tuckerrc": "I believe it was rendered as a heading.  The single - is causing it to be rendered as a Heading 2.\n```\nHeading 2\normarkdown\nHeading 2\n\n```\nBoth render as \nHeading 2\nA possible fix would be to catch a single - or * and render a blank bulleted line instead of the heading. ",
    "pauljacobson": "There is a related issue with how Markdown lists are rendered in the Electron app. Lists that don't include a line space between the text immediately before the bullet points, and the bullet points themselves, are still rendered as formatted lists.\nFor example, this list shouldn't render correctly because there is no line space before the bullet points:\n\nInstead, it does:\n. Additional report of this behaviour, on Linux: 1229766-zen.\nUser report\nThe user's report:\n\nSometimes the whole window turns blank, the only thing visible is the menu bar, but no way to turn my notes back. The only cure is restart.\nBut after the problem happens once, it happen on and on again after restart.\n\nBrowser / OS version\nOS versions: Ubuntu 16 on Chromebook, and Ubuntu 18.04 on HP EliteBook 850.\nApp version: TBC. Here's another report of this behaviour on Windows from 1223410-zen:\n\nAfter upgrading to Version 1.1.5 there is a very odd behaviour.\nWhen I start the app I see my previous notes briefly and then it changes to an empty user interface as though there were no notes at all.\nOn top of that there seems to be no synchronising happening. I have installed the app on my mobile, too, but the content is not identical to the one I had entered in Windows.\n\nThe user also pointed out that the web app is in sync with their mobile device so this issue seems to be limited to the Windows app:\n\nWeb app: Content identical to mobile, not identical to Windows PC.\nYour screenshots: Similar, but there are a few more things displayed.\nPlease see my video recording (attached) showing the starting up of the application in Windows. Brief display of original content and then \u201cno notes\u201d.\n\nHere's the user's demo:\n\n. Updates from the user:\n\nThe user doesn't recall any particular connectivity issues on their side;\nThe user also doesn't appear to have closed the app immediately after editing their notes.. Another update from the user:\n\n\nI think I've located the problem.\nThe issue occurs when my disk runs out of memory.\nIf the disk is full, simplenote won't open.\nIf the disk becomes full while simplenote is open, you can't open a new note when navigating back to the notes page when one is already open.\nI wasn't able to record what happens when you try to edit a note while the disk is full.. \n",
    "mfcarneiro": "I'm using on Manjaro here.\nThe list note are still showing the markdown, not updating when the preview is off:\n\nManjaro 17.1.12 / Simplenote 1.1.7. ",
    "robertpba": "The numbering issue reported by djordjeandrejevic affects me too and has caused me to use bullets instead of numbers to avoid this.\nIt happens without fail when I have some preformatted text within the list like this:\n1. A point\n2. Another point\n```\nSome code\nSome more code\n```\n3. A third point\nTry it in Simplenote 1.1.7 on Ubuntu 18.04 and the last item renders with a number 1.. ",
    "MrModest": "\n\nCheckbox list showing incorrectly\nAndroid 8.1\nIn Kde Neon works. ",
    "liviopv": "Similar report on #832278-zen\nOS and app version\nWindows 10 Version 1709 (OS Build 16299.64) \nSimplenote electron-windows v1.1.0\nUser's description\n\nI use Simplenote on Windows (the newer Electron app), and I generally just leave it open all the time on my work and home computers. However, it seems like if one of the computers is asleep while I update the other instance, they tend to get out-of-sync. The app doesn't seem to handle this scenario well.\nWhen I re-awake the computer, my notes are out of date and don't have any of the latest changes. Restarting the app doesn't always force a refresh, and whenever I try to use the History button it will show me the latest changes from the server, but I don't have the option to get it (since the app believes that it has the latest version, the only option I have is to hit cancel). Upon doing that, the note disappears from just that app. So far, the only I've found to retrieve it is to log into the website and use the History tool to set the correct version, and then restart the Electron app.\n\n. I've been asking users to remove Simplenote from WordPress.com connected apps in https://wordpress.com/me/security/connected-applications to see if clearing that allows them to login. I believe I answered questions from the 2 Linux users Melissa talked about and another one with login issues in Windows.\nWaiting on the user feedback.. #1875140-zen also was not able to login.. I've been able to reproduce it on a Mac as well. It get stuck on:\n\nScreenshot: https://cld.wthms.co/xNEU2Y. ",
    "swoolz": "Similar report on #928637-zen\nApp installed in 5 devices. PC 1, PC 2, netbook, iPad and Samsung phone.\nUser's Description\nExample: I open a new note in any device. \"Master\" PC is off. \nEverything goes well all the time. \nNow I open the master. All my notes are there. \nSo far so good. \nNow I change one thing on the master PC. \nIt is reflected on all other devices. \nSo far so good. \nI leave the master PC on with Simplenote running. \nI try and change any note on any of the other devices. \nThe change is visible for about 1 or 2 seconds then reverts to the previous version. \nThe only way to avert that is by shutting down the app on the master PC.. ",
    "Jackymancs4": "My bad, had to disable the linter and I missed the semicolons out of habit. Now is fixed.. My doubt now is regarding the border color in the light theme. Maybe a little lighter? Not sure.. > If there another way we can accomplish this with the existing showdown-xss-filter?\nNope, I already extensively studied the code and it seems impossible to me, because of this line\nhttps://github.com/VisionistInc/showdown-xss-filter/blob/e26046384e266be5646ef0eb58816ff4029da565/showdown-xss-filter.js#L20\n\nShould we be looking at js-xss instead? \n\nWell, I think it's a possible way, but I'm not able to see any real gain doing so.\nShowdown is working on expanding is extension capability, and I think it's pretty cool.\nshowdown-xss-filter and showdown-xss-config simply pipe showdown output in a js-xss instance, but more can be done in the future.\n\nCould your forked-patch apply to the upstream project?\n\nActually, my fork is not a patch, but a complete rewrite of the code according to the more recent showdown extension interface. And I'm planning to improve testing coverage. Also, the original repo has been unmantained for almost three years. I can try, of course.. Can you articulate more? I'm very interested if I missed something.\nWithout whitelisting this, rendering checkboxes is near impossible.\nAlso, strictly allowing only checkbox type input seems pretty harmless... I can actually improve sanitization of <input>, stripping it from all the non-type attributes, if that was the problem.\nLike, enforcing that only <input type=\"checkbox disabled> are returned.. ",
    "webmasterraj": "It would be awesome to get this merged in. Anything I can do to help?. ",
    "jasonbrown1965": "Update:\nTried to sign up online, and got 'address not available' error. \nOn a hunch, tried signing in, and it appears that despite the error messages noted above, my account was created.\nWent back to the app, and signed in with no problem.. Did wonder that, and tried the login option as well, but no go, online or in the app. Also double-checked my password manager and nothing there either. My impression is that the app was reporting 'cannot create account' when in fact it was, in the background.\n\nFrom: Dan Roundhill notifications@github.com\nSent: Wednesday, 17 January 2018 5:39 a.m.\nTo: Automattic/simplenote-electron\nCc: Jason Brown; Author\nSubject: Re: [Automattic/simplenote-electron] Cannot sign up (#693)\nGlad it worked! Maybe you already created an account in the past?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/Automattic/simplenote-electron/issues/693#issuecomment-358023368, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AK32X6oUKGRb0C3qzJBDarjLquC-Cgs8ks5tLNDGgaJpZM4RfO1I.\n. ",
    "gocarlos": "https://app.simplenote.com/ also does not seem to work correctly. \nhttp://demo.showdownjs.com/ does work correctly.. ",
    "aizhimou": "This bug has affected the normal use of this app\uff0chopping it can be resolved as soon as possible. ",
    "akatsukiyami": "Same problem, can not input Chinese.. ",
    "AtrumGeost": "Same problem here:\n\nBetter Chinese support for PC client. E.g. It can\u2019t directly enter the Chinese characters but with garbled when creating a new tag.. \n",
    "melines": "Another user reported an issue with Japanese input; ticket #1508255-zen. ",
    "AntonioFasano": "Thanks for the good work!\nA couple of suggestions:\n1) The FAQ entry still says only:\n    What are the keyboard shortcuts for the Mac app?\n2) As I understand, Open Tag List: Ctrl+Shisft+T, should probably  be Toggle Tag List. \n3) I note that when I toggle the Tag List view, the note panel dims, suggesting I can't type there, while  I can.  Instead, I can do nothing on tags  with the keyboard, apart toggling them out. It would be nice to be able to select them.   \n. ",
    "hyayh": "@roundhill As noted by dmsnell other note apps don't always quit, but it may have a 'setting' which could change the default action of close \u2014\u2014 minimize to the notification area or quit the app. . ",
    "AFortune": "Are you on master or another branch?. I submitted a fix for this. Are you still having issues @sivering ?. ",
    "hfel": "The stable branch (shannon) of Solus.. ",
    "trustlix": "@dmsnell yeah, quite surprising. Unfortunately I don't have a mac here to test :-/\n@natanielcz makes a lot of sense. Will try to squeeze some time to work on that... things are a bit crazy here lol. They are visual effects available on macos. Doesn't make a diference on Linux.\nMore details here: https://github.com/electron/electron/blob/master/docs/api/tray.md#traysethighlightmodemode-macos\nI can either remove it or put the comment, what you prefer?. @dmsnell I created a deb package and found out that this icon path doesn't exist in the final installation dir (/usr/share/simplenote). The icon is actually placed at /usr/share/pixmaps/simplenote.png. Should I reference this path here instead?. ",
    "alxmjo": "Sorry, didn't realize the repo was separate. You probably want to close this immediately, but if not, I've attached the complete Markdown file (with suffix changed to txt to allow pasting to this issue). \nTo be clear, the link works, but it shows that extra parenthesis (which I know that you're not seeing). If I remove the extra parenthesis from the Markdown file (effectively breaking the URL), then the link no longer works.\nbug.txt\n. Didn't realize I wasn't running the most up to date version. Updated via App Store to 1.3.1 which resolved the issue. Thanks for your help.. ",
    "8bitreid": "@roundhill I'm on the web version now, and I'm not seeing - [ ] as a checkbox.  was this just dropped?. ",
    "adlk": "@roundhill just for checking if it's an appx from the Windows Store, there is actually a pretty simple solution by using process.windowsStore. \njs\nif (!process.windowsStore) {\n  // let's rock the auto updater\n}. In the works. See #809 for more details . For simplicity reasons I've merged #810 as some changes are required in both branches.. @mirka \n\nCan we keep all the file/folder names spinal-cased to match the rest of the codebase?\n\nyup, I will update the file/folder names.\n\nAlso, I initially had some trouble getting this to work in my environment. Turns out it was a NODE_MODULE_VERSION issue like the one described here, but it was hard to notice there was even such an error because it was only thrown in the devtools console.\nI'm afraid electron-spellchecker will break rather silently like this whenever it's run in a node version it doesn't expect. (Is that a valid concern?) Should we be adding an electron-rebuild step somewhere?\n\nI'm planning to add the same approach using electron-rebuild as we're doing in wp-desktop to check if a rebuild is necessary.\nhttps://github.com/Automattic/wp-desktop/blob/develop/Makefile#L147-L149\nAlso, I'm planning a PR that is simplifying debugging when we are in dev mode like introducing keyboard shortcuts for showing dev tools, .... @mirka @roundhill the required changes were made. Plus,\n\nI've added the make targets:\nmake dev: starting the webpack dev server\nmake start: start electron and check if a native dependency rebuild is necessary\n\nmake rebuild-deps: rebuilds native dependencies. This is a dependency of make start\n\n\nSpellchecker is now just used in fields where we really want spell checking to happen.\n\n\nI'm going to test everything once more and then we should be done here.. > The spellcheck context menu doesn't seem to be working in the packaged apps for Windows and Linux. Is this expected?\nYes, this is expected. Spellchecker is a native dependency that must be compiled on the target OS. The context menu module and spellchecker are closely tied together. Therefore, if spellchecker isn't working (because of a wrongly built binary) the context menu isn't working either. \nThere is still the option to switch to electron-spellchecker-prebuilt to skip the platform specific build in favor of using prebuilt binaries. (We are currently doing this with wp-desktop). But before moving more projects to this dependency, I'd suggest hosting our own fork of cld, keyboard-layout and @paulcbetts/spellchecker and building the binaries from there. This is mainly to ensure that the repos/prebuilt binaries are always available and no one is messing with them.\n\n\nmake package-win32 (on Mac) is ending in an error:\n\nI see this as well, but it looks like it is when it is attempting to make the .appx, which only works from Windows. Maybe we could skip the .appx build if not running the script from Windows @adlk?\n\nI believe this could be possible by extending electron-builder configs. I'll do some checks and get back to you.\n\nIs the makefile supposed to work on Windows, too? I was able to install make through something called MinGW, and make start worked (despite giving a \"Path must be a string. Received undefined\" error). make dev didn't work \u2014 it can't find webpack or webpack-dev-server. Do you recommend that we do all dev work on Mac, and just copy over a packaged app for testing?\n\nThe Makefile should work on Windows too. Unfortunately I can't reproduce the issue when running make dev. Maybe try it with classic npm debugging (rm -rf node_modules && npm install) \ud83d\ude01 \nI however found another issue on one of my windows machines when running make from a path with parenthesis. \ud83d\ude44 \nAd dev:\nI do recommend doing all dev work on Mac as long as it just involves frontend dev and non OS specific main process changes. I however believe that having a proper dev setup on windows and linux is crucial as soon as we build OS specific features. Even if it's just adding a system tray icon.\nIf you just want to test general changes, I recommend using the CI builds as this should be the single source of truth.\n\nCan we run npm audit fix on this? It's reporting a lot of vulns.\n\nSure!. @mirka @roundhill thanks for your review. I'll check your issues to figure out what's going on.\nIn the meantime, here are a few answers:\n\nAre these the correct artifacts for Windows?\nhttps://ci.appveyor.com/project/adlk/simplenote-electron/build/1.0.147/artifacts\n\nyep, that's the one. \n\nWindows (10)... Apps installed with both the .exe and .appx from the artifacts above did not trigger an update dialog. \n\nThe updater now prompts as expected, for whatever reasons, the windows config + artifacts were missing on the test repo. \nAd appx: the updater is disabled as the Windows Store has its own update mechanism. \n\n...there is quite a long period of no feedback during the download, which will worry the user.\n\n\ud83d\udc4d In general, I'm a big fan of giving the user more feedback of what's happening \u2013 even if it's just a simple spinner. IMO, Github for Desktop does a great job (even though they just inform the user about the update once it's already downloaded)\n\nLinux (Ubuntu Bionic)... I could not get it to trigger an update dialog.\n\n\ud83e\udd26\u200d\u2642\ufe0f This is actually a stupid thinking error I've made. As the electron-updater checks Github for new releases. Everything that is using the manual updater (linux) is still accessing the old API.. The white screen of death is fixed in #885 . @mirka @roundhill I've now added support for the manual updater and did a refactor of the updater code base as this will be used for wp-desktop as well.\nTogether with Lena, we've decided to move away from parsing the changelog and showing it in the popup. Instead, we'll show a button to open the changelog.  \n. @mirka the & issue on Windows is fixed. We now just need to wait for #971 to be resolved to get this landed \ud83c\udf89 . @roundhill you now have 3 build jobs for\n- signed production build (.exe)\n- unsigned Windows Store build (.appx)\n- signed Windows Store test build (.appx). This can be easily controlled with spellchecker=\"false\" on the DOM element. I'm going to add it to the obvious fields as a demo.. I'm with you but believe it wouldn't be easily possible with our current setup as we don't yet use webpack for the desktop files.\nIn case of using webpack we should also think of a solution for building shared modules that can be imported in the main as well as the render process without adding every module in both bundles. \nFrom what I know, electron-webpack is doing something like this with the common directory.\nChecking things likeprocess.defaultApp wouldn't be possible in webpack as it's just available in electron \u2013 this however shouldn't be a biggy as we can still decide to only rely on NODE_ENV.. This is actually brilliant as it also enables us to call:\nNODE_ENV=development make dev\nin addition to\nmake dev NODE_ENV=development\nDennis, \ud83d\udcaf points to you! \ud83d\ude04 . The web app and the code base for the electron app don\u2018t have any overlap atm.. In the beginning, I thought so too as I wanted to be able to display more complex text structures by e.g. converting the HTML to a cleaned up form of markdown (removing urls, text styles, ...). \nBy looking at the way release notes are currently done, I'm just not sure if we wouldn't over engineer this by starting to parse the HTML \u2013 instead I went for the IMO simplest solution \u2013 but I'm definitely not holding on to this if I should do it differently!\nSemi off topic: On the long run, I'd vote for a solution like using conventional-changelog and webview enhanced dialogs (once available in electron) to display changelogs. \n. Oh, good catch! This file should actually be ignored in .gitignore but this isn't merged yet from the auto-updater PR \ud83e\udd26\u200d\u2642\ufe0f . Good idea! The comments are now updated!. ",
    "pow4all": "I am also on Ubuntu 18.04 Beta2 and the .deb above (@roundhill) didn\u2018t work. I had to install libgconf-2-4 manually.. ",
    "dww100": "I have the same error installing the current (1.1.6) deb. ",
    "kawamurakazushi": "I will try fixing this if it is needed.. ",
    "sophiegyo": "Update:\nVideo drivers confirmed up to date for 1017910-t\nAdditionally, File > New Note works in the Windows app, even if nothing appears in the window.  The blank new note syncs to an android app logged in on the same account.. ",
    "peterbutler": "Just a note that In the first report, which resolved itself, the issue has since returned, with the same symptoms (1053639-t).. ",
    "jaredpgranger": "@pauljacobson 1229766-zen responded that they're using Simplenote version 1.1.5. ",
    "rantoncuadrado": "About the previous one, the user says \n\nI have discovered that my blank page problem can be overcome by logging out and then logging back in. This loads the data from scratch. Thereafter it has remained.\nHowever the problem now is that it doesn't sync properly. It will sync down from entries elsewhere but only after I close and open twice. It will not sync up at all.\n. \n",
    "zdenys": "Another user reports a similar issue in #1384053-zen. \n\nEvery time i start SimpleNote on my Ubuntu 18.04 machine with all updates installed, including latest SimpleNote 1.1.7 (including previous releases) then i have to first create a new note to see my notes.\n\n. ",
    "muphblu": "yeah looks perfect)\nThanks\nP.S.\nLightning-fast response. ",
    "ashinzekene": "Was finally able to leave full screen. I read through the code :weary:  :weary:  :weary: . Except a user already knows the shortcut, he can't leave full screen. There should be an option to toggle fullscreen here \n\n. Yeah, I actually had to read through the source code to be able to leave full screen. No problem with that then. ",
    "xta": "+1 request as this is a key feature that prevents me from using Simplenote 100% of the time. \nI was previously using Notational Velocity & nvALT. I have to sometimes fall back to one of those to get search result text highlighting since Simplenote macOS doesn't have it.. ",
    "eternaltyro": "No, it is not. Also, MacOS or not, the current share icon is confusing and non-intuitive. Technically, the \"upward arrow from a box\" symbol is for \"Outbox\" in emails IIRC. Also, sharing icons don't change across platforms. At least not as far as I know. There's an accepted, easily identifiable icon for share (three connected dots). \nPlease refer: \n1. https://thenounproject.com/search/?q=share\n2. http://fontawesome.com/icons?d=gallery&q=share\n3. https://thenounproject.com/search/?q=outbox\n4. http://fontawesome.com/icons?d=gallery&q=outbox\nSo, I agree with @srravya that this is confusing and potentially interpreted wrong. . For the record, I'm using Simplenote on Linux, Mac and Android N. The icon is same everywhere for me.. > Why not platform dependant icons ? thinking\nBecause many times platforms sacrifice intuitiveness for aesthetics. As is apparently the case with MacOS.. ",
    "SachinTitus": "I just tried out the steps and yes it has the issue. I'm starting to work on it.. ",
    "rumahrumah": "When I try to add a tag in Korean, one stroke produces two characters.\n\nI guess it's related to this issue.\nI'm using Simplenote 1.1.7 on Ubuntu 18.04.. ",
    "palindrom615": "I guess I have found the cause of bug! It seems that the bug does not come from simplenote-electron itself but draft-js and electron.\nI have reproduced the bug with electron and draft-js only.\n\nI will report this bug on draft-js repo and contribute if I can.. ",
    "Lumiras": "\ud83d\ude44. ",
    "awrog": "+1. ",
    "Kristyjnh": "I too would love this. Even with just a few notes, if you're tagging each note with multiple things the tags bar quickly becomes unwieldy. I'd love to drop Evernote, I'm basically just waiting on this feature.. ",
    "Bajocode": "First of all, great job on the app guys, I really think you understand what people actually need; cross platform synchronization (as wide as possible, even Linux) and multi format input (markdown & text).\nI do think the application is missing out on a crucial part of a note taking apps: organization\nA nested tagging feature should be top priority, as in:\n\nRootTag/SubTag/SubSubTag\n\nHere is an example of how the guys art Bear notes nailed that one: https://bear.app/faq/Tags%20&%20Linking/Nested%20Tags/\nAdding this features does not at all conflict with SimpleNote's simple philosophy as it's a very practical and necessary functionality for your product and will make the others truly obsolete.\nF. ",
    "darnelldibbles": "Another request came in via Twitter: https://twitter.com/jplonghi/status/1090351264012124160. ",
    "jplonghi": "+1. ",
    "kewlfft": "Same comment here, this is an issue, we generally prefer building from source rather than using the binary. If in addition the package is changing unexpectedly and with no proper log and tracking we may have to stop supporting simplenote-electron in it binary form for security reasons.. ",
    "asadana": "It's already available as a Snap by the Snapcrafters team: https://github.com/snapcrafters/simplenote. ",
    "bgi": "I just thought about this yesterday. How about you just add the promised API?. ",
    "mishivee": "zen-1720385\nFrom user: \n\"I didn't use tab, only SPACE in the GIF.\n press D\uff0c then SPACE \u2014\u2014  so you can see the chinese character \u5728 in the simplenote\n press SPACE \u2014\u2014 and the cursor moved ahead itself \n press SPACE again \u2014\u2014 the simplenote went blank\" \nCan I have someone test this out? \nI tested using a few different PinYin input options (PinYin, SunPinYin, and Intelligent PinYin) on Linux and was unable to duplicate the issue. \nUser is using simplenote (download in Microsoft Store) version 1.3.4 \nwin 10 version 1803( OS Build 17134.523) . ",
    "cpt1971": "Hi, the strange thing was that it worked on xfce on leap 15, but not on kde leap 15.\nI have not tested it yet for 1.2.1, but I will next week and get back to you. . I've just tested kde leap 15 with version 1.2.1 and it works well :-)\nMany thanks\nChris. ",
    "triangulum": "Could we maybe add CTRL+PgUp to go up the list of notes, and CTRL+PgDn to go down? That would be in line with Gnome user conventions (such as scrolling through tabs in Nautilus/Terminal/Chrome/etc).. It's worth adding that after exiting the preview mode, the cursor should return to the original editing position, so the user can keep on writing. This would be a kind of write-check-write methodology.\nAt the moment, the cursor simple disappears and the document becomes inactive, which means you have to move your hands off the keyboard, and use the mouse to reposition the cursor. This definitely disrupts the flow of writing notes!. ",
    "Djdany95": "Same problem here.\nI use 3 different SimpleNote apps, 2 in Windows 10 and 1 in Android.\nAndroid syncs perfect but windows 10 version no.\nOS version \nWindows 10\nSimplenote version 1.1.7. ",
    "Lochlaer": "A user submitted a support ticket (#1603901-zen) about a similar syncing issue. Basically, he has a pinned note in his Windows Simplenote app, and one day it disappeared. He logged into the web app as well as the app on two different Android devices, and he was able to see the note on all of those. He made a change in the note on the web app, and then reopened Simplenote on his Windows machine. Voila -- the note was back, this time with the change he'd just made on the web app. \nSimplenote version: v1.2.1\nOS: Windows 10 Home, v1803, build 17134.407. 64-bit system\n. ",
    "bestann": "Today I editied a note (very important and large) on Windows 10.\nDuring it I opened Simplenote on Android. At first it saw my note but then it dissapeared and another I saw anothe note duplicated. And on Windows also another note duplicated. I workec at that note for a week!!! And its' impossible to restore it's older version because Simplenote has deleted it at all. So maybe you'd add audomatic everyday archiving of notes and saving several  copyies of every note. It's impossible to work with your program. Simplenote only see the name of note (first string) and can't restore content!. ",
    "ianmorti": "thanks !\nI think this might also help out @marianoju with #271 . removed redundant function and added stamps to trashed as requested.. ",
    "pakal": "I noticed it'd be more a pb with android app than the windows app also used, so I posted it here instead - https://github.com/Automattic/simplenote-android/issues/560. ",
    "gemmagarner": "Requested on Twitter.. Request on Twitter.. ",
    "Ecnassianer": "Thanks for the info!. ",
    "mkanenobu": "Sorry, I can't reproduce it consistently.\nBut in most cases japanese IME was enabled.. @mirka I'm using Microsoft IME.\nHowever, after updating to 1.2.1, this problem has not occurred.\nShould I close this issue?. ",
    "isdanni": "\nWhich release of Simplenote are you using ?\n\nI'm using Version 1.1.7. However, Esc does not work after entering Full Screen Mode. I also tried End Process using System Monitor but it's still full screen after I restart Simplenote. Any other way to quit app?. ",
    "acrosman": "I built the application successfully (MacOS and node 10.7.x) before opening the PR.  The check appears to fail because a dependency didn't load currently for the test runner, not because of anything triggered by the linting process.. Yeah, I'll cherry pick the README comment into a separate PR.. Requested change included.. Sorry about that, line removed.. ",
    "rogersachan": "I support this as well!. Using the showdown-katex extension as mentioned in the showdownjs tracker and mentioned above would be a great place to start. Dropbox Paper already uses KaTeX for math according to the katex repo, so this seems to be feasible.. @mirka Dropbox Paper has this feature (using katex) implemented on iOS/Android. Their product also uses markdown behind the scenes for note-taking. . ",
    "segeeslice": "@roundhill Ahh, confirmed an issue with snap. Installing via AUR works as expected. Will make an issue there. Thanks!. ",
    "popey": "Apologies for the inconvenience. This is now fixed and published to the stable channel in the snap store.. ",
    "ianchanning": "If there needs further examples of why it's useful, I just imported 1400 notes from Evernote, but they weren't tagged with which notebook they were in. I've re-tagged all my Evernote notebooks with mass tagging (it works really well inside Evernote) and I'm going to re-export them. \nBut now I have a problem with no good solutions:\n\nI could delete all the current Simplenote notes and re-import the notes - this is 1400 clicks\nI could tag the notes one by one - this is click + type tag for 1400 notes\n\nI 'solved' this by deleting and re-creating my account. It's nice to see the delete of the account in action and it does work, but it seemed a bit drastic.\n. ",
    "clayreimann": "Hacktober dibs. I also tried nesting the revision component in the editor component, but for some reason the DOM of the editor extends beyond the right edge of the window.. ",
    "alexanderte": "Totally agree. Formatting headings in bold and showing backticks with monospace would make Markdown preview unnecessary for me.. ",
    "edequalsawesome": "User requested spellcheck in additional languages in #1744970-zen as well.. @mirka Hey! I asked the user to try that test, and Test B is rendering the bold text -- Test A is not. The user supplied a screenshot:\n\nLet me know if there's anything we can do to help the user, or if there's any other information you need \ud83d\ude03 . Reported by a Windows user using 1.4.0 in #17684680-zen. Also mentioned in #1783920-zen. Also reported in #1801149-zen. ",
    "Pyroseza": "I use SimpleNote on my iPhone as well.\nThe search feature behaves the way I want on iPhone.. ",
    "jb510": "@mirka any update on open sourcing the webapp and/or adding dark mode to it?  \nI really want to use SimpleNote instead StationApp, but want a dark mode as the the thin black text on white background is really hard for me to read.. TY.  Looking forward to the switch.  Using StationApp I unfortunately can't tell it to use an alternative webapp entry point URL to get to /new.  Looks good poking around in a standard browser though.  TY agian.. ",
    "Donboscow": "Here is a comprehensive tutorials on how to implement \"Sign in with Google\" https://developers.google.com/identity/. Boss any estimated time of arrival for this feature? @mirka . Alright, that is nice to hear from you. Thank you! @mirka . Please think about this most wanted and most needed feature @mirka @roundhill @drw158 . Isn't it possible to place the animated moving/rotating (like dropbox sync indicator) spinner or [Saving and Saved] sign before the top [History, Share, Trash, Info] logos? I think it will be simpler and natural than this approach. Also to check the sync status you have to always leave the main view and go to the [Menu] which is quite distracting and unintuitive. In the app.simplenote.com  website when you edit any note it shows live [Saving and Saved] status sign in the top right corner which is more natural and intuitive. @mirka @dmsnell . ",
    "subi54": "That's for paragraphs. Try &nbsp; or <br>, the latter doesn't work on mobile though.. ",
    "tonytettinger": "@mirka (Lena:), thank you very much for the quick response, I was trying to figure out the issue with the AppVeyor. I did the revert the changes on the package-lock.json file. I'm glad all is working well!\n. ",
    "sprite-1": "I for one actually prefer this behavior, it would be annoying for me personally to have the UI resize along with the text. Maybe put it in a diffeent option perhaps? But please keep the text-only resizing intact.. I hope you don't mean like actually changing the font size within the individual notes itself because I use the zoom functions only when I'm writing rough drafts in focus mode. Then i reset it back to normal afterwards. \ud83e\udd14. Oh, I thought it was just my laptop being stupid but yeah, I did feel that performance hit and remember the previous versions to be a lot faster and more responsive.. @henriiquecampos do you know how to disable the update prompt? I rolled back to 1.2.1  too but it keeps asking me to update which gets kinda annoying.. I don't quite understand how the profiler works for this but I gave it a go and this was the result after clicking around my notes (on 1.3.3)\n\n. Yes please, I tested using it as a PWA on Linux and it starts up way faster than the Electron app. I just have the issue where it keeps kicking me out of the session whenever I close it and I have to log in again each time but navigation is way faster.. ",
    "lehasb": "I'd like second this, and add that the 'amd64' name in particular is very confusing. x86_64 is more commonly understood.. ",
    "Piyopiyo-Kitsune": "More notes and screen shots from the user:\nMarkdown enabled - you can see the Preview icon on the right-hand side.\nTag icon - clicking on the Tag icon slides the panel open. The Preview icon is still visible (far right) at this point.\nSelect Tag - If you select a tag (I just clicked on All Notes for ease of explanation), the Preview icon disappears.\nSelect Note - The preview icon reappears.\n\n\n. Thanks @mirka! Sent a follow up to the user in 1629283-zen. ",
    "henriiquecampos": "\nOh, I thought it was just my laptop being stupid but yeah, I did feel that performance hit and remember the previous versions to be a lot faster and more responsive.\n\nI really think this isn't something intended, my PC is very robust, this isn't, or at least doesn't seem to be, a simple bottleneck or a performance drop, it is indeed completely impossible to work with it as is. Even writing, each letter takes 4seg to display, there is no way this is a simple performance trade off in order to add features. \n\nThe thing that completely blocked application is the search functionality - I had to manually kill Simplenote process. Downgraded to 1.2.1.\n\nI downgraded to 1.2.1 immediately as well, as said is impossible to work with 1.3 with this 4~8seg delay on every interaction.. @roundhill this is what I get on windows 10\n\n. > I'm wondering if it is something in your notes, do you have any notes that are really large\nI don't think so...the bigger one is about 3k words, with 2 images. But everything was smooth in 1.2.1\n\nI'm also curious if it helps if you disable the spell checker in the Edit menu?\n\nJust checked it off, still lagging \ud83d\ude22 . @roundhill \n\nI think I'm on to something here. Do y'all have a lot of Markdown notes?\n\nI only have markdown notes, around 30 of them.. @roundhill YES! \nIt is working with no (noticeable) lag now! \ud83c\udf89 \nThanks for the support! \ud83d\udcdd \u2764\ufe0f \nEDIT: some notes are still with a bit of lag tho, but noting close to what was before.\n\n. @roundhill sorry for the lag, I don't use windows very often :P \nSeems to be working smoother! I think this is the, noticeable, performance we had with 1.2 \u2764\ufe0f  . ",
    "ddwagner": "Chiming in to say same problem. Happened on both linux (Mint, trusty I think) and Windows 10 updated to 1.3.2. Similar console output as above (i.e., mousedown handler took 1349ms). Going to downgrade to 1.2.1.. I just did that. New account was back to being snappy. Logged out and reloaded my original account and it's molasses down to being unresponsive (I'm currently stuck in a tag and can't get out of it). I don't feel like I have a tremendous amount of notes. Maybe 20 tags w/ 4-5 notes each.\nI am finding one oddity, which is that certain tags are way slower than others. 3 in particular seem to be the source of the problem. Can't find much in the notes that would make them any different than the others. Maybe there's a note or two in there that are slightly longer. All notes view is incredibly slow. I think I ruled out long notes as I just moved two of the notes from the slow tag to a new tag and that tag is also slow even though these two notes are tiny. Just a few words. Hope that helps. . My notes are exclusively in markdown (it's why I switched to simplenote!). The new build works much better. Thanks for fixing the issue!. ",
    "habi": "Funnily, also GitHub munges /.log in '', I had to write it in `` :)\n\n\n. BTW: The problem is not seen in the Linux version of Simplenote.... Simplenote 1.2.0 did not show the problem, version 1.3.0 does show it :). ",
    "Ymetro": "O dear: I did not expect the GIF run so slow in a browser! I made a full HD MP4 capture, masked private info and converted it in GIMP with GAP and exported it to 360p, but still at 60 fps. When downloaded the full speed is shown in Irfanview at least. . Installed it from the Microsoft Store and its version number says 1.3.1, but the note list is still disappearing after a second, exactly as shown above. Console still gives the same error:\n\n. That seems to have fixed it! Great!\nOne other thing: Had sync problems with the iPhone app as well (not showing contents, only tags and the white theme, instead of my chosen dark theme). Did what you mentioned and the iOS app now also works like a charm again. Thank you. I'll go ahead and close this thread. . ",
    "Bread7": "Alright, that is nice to hear from you. Thank you!. ",
    "KshDi13": "I have  the same issue. Updated PC version when prompted and now it's left both a 1.1.x version that i cannot log into (incorrect login credentials it says) and the new updated 1.3.x version (which works but slow).\nI'll try uninstalling both and installing latest release.. ",
    "abhijithvijayan": "[Fixed] for now.\n. ",
    "andaag": "On https://app.simplenote.com/ it looks like the same as my home computer.. ",
    "Majubs": "I've had a similar issue with this steps:\n\nI edited a note on my Linux Mint 19 (Simplenote 1.4.1) notebook, while offline, with no internet connection\nTwo days later, with internet connection, I opened the notebook for it to sync\nTried to open the note on my Android device (Simplenote 1.7.0), but had only the version of the note from before editing offline\nTried to open on a Windows computer (Simplenote 1.5.0) I had just installed the app, so fresh login, but still only the old version of the note\nEdited the note on the notebook to see if it would trigger sync, but no success\nLogged out of the app in the notebook, and when logging in again I had lost the edits I made while offline\n\nAfter this, the note is syncing properly from any device I edit it.. ",
    "ekohilas": "Working now, thank you!\nIt seems I downloaded the wrong package then.\nPerhaps the solution to this is to link the direct download to be relative to the binary that was initially downloaded?. ",
    "eurello": "I've asked them to try that -- thank you!. ",
    "hieutle2011": "Same problem with Ubuntu 16.04 LTS. After installing Simplenote-linux-1.3.2-i386.deb, simplenote doesn't start. I have installed the newer version Simplenote-linux-1.3.3-i386.deb but nothing appears. . ",
    "YKastell": "Hi, \ndidn't try 1.3.3 64-bit but 1.3.4 64-bit works fine \nThanks . ",
    "Paddy-Fr": "Seems to work right now. I believed it was a pb with the last version of SimpleNote, but may be it was an ArchLinux update problem. I will reopen this thread if necessary.\nI really love SimpleNote. Keep up the good work ! :+1: . ",
    "tmo7452": "Came here to report similar. If using dark theme in Simplenote 1.3.4, text copied from it (pasted into Office apps) is pasted as rich white text on black, not plain text. Windows 10. Still an issue in 1.4.1.\nEvery other text editor on windows will jump to the last position if you click below the last line, this is standard behavior. This worked fine in earlier versions, something in 1.4.0 broke it.\nUnless this change was intentional, I believe it should be classified a bug.. ",
    "qualitymanifest": "Sounds good. I made the change and tested it out, works as expected.. What OS? I looked into this and it displays properly in linux mint.. I think I've figured out how to reliably reproduce this. If you watch the note-list, you can see that the note-list-items update about 2 seconds after you stop typing. If you type during this brief updating period, it fires these lines\n https://github.com/Automattic/simplenote-electron/blob/792c900f8494f2ab286b798243b33ec8cb5c2dd4/lib/note-content-editor.jsx#L264-L265\nand causes you to jump to the end of the note. \nIf you type before the update happens, the ~2 second timeout restarts. If you wait until after the note-list-item has been updated before you start typing again, everything works as expected. It only happens if you type during that very short update window. Given that it's natural for people to pause for a couple seconds while they're typing, it makes sense that it's happening a lot.\nNote that I'm not saying the problem is caused by the note-list update, just that that's an easy way to see when the update happens.\nIf you remove the if statement found above, you get the opposite problem: The cursor jumps to the beginning of the note if you type during the update.. Also, when you trigger the condition above, if you keep typing quickly you can keep triggering it on each keystroke until you let off for a moment. . I was curious about the performance of this fix so I filled up a note with 30 large blocks of text and tried it out with my task manager open. \nWhen you trigger the (previously) problem behavior and continue to \"ride\" the update cycle as I describe here https://github.com/Automattic/simplenote-electron/issues/1185#issuecomment-460314564 Simplenote's CPU usage goes up to about 10% until you let off and exit the continuous update cycle.\nI tried restoring the code to the way it was before (with the problem behavior) and the CPU usage is the same when you ride the update cycle, 10%. So, although my fix is somewhat verbose, I don't think it's having a measurable effect on performance, the main issue there being the continuously updating state.. @roundhill I can confirm that that is unrelated to these updates. I've made that happen before when I was first testing trying to identify the cursor jumping issue. I just double-checked on the production version of 1.4.0 that I have installed on my system and you can cause that error there too. You can even make it happen on the editor on draftjs.org (their editor doesn't go blank when it happens but you get the error in the console).. Hey, give 1.4.1 a try, this issue should be resolved there.. I can duplicate this, it seems to be specific to the checkboxes. I noticed that if you move the cursor over so that you wouldn't select a checkbox it works okay until you encounter another group of checkboxes (since the cursor is back at the beginning of the line). \nIt works fine if you select by clicking and dragging over text, it only seems to be a problem when using shift + arrow keys.\n\n. I understand, I\u2019m just providing more details about what works/doesn\u2019t work. Just realized I had missed the $medium breakpoint for the source-column, so added that in.. Made those changes, everything seems to work as expected. \nSomething I noticed while working on this is that if a tag exceeds the width of the tag-field, the entire note-editor grows. If the tag gets long enough the note-list disappears and eventually the note-detail does as well.\nOf course that can only really happen with a really long tag (takes about 65+ characters in the narrowest screen width before you hit the mobile breakpoint), which is so unlikely that it may not be worth addressing.. ",
    "dromero20": "Unable to reproduce in OSX Mojave 10.14.2 + Firefox 64.0 (64-bit) + Chrome 71.0.3578.98. \nI tried both URLs + remember me and I can get back without logging again.. ",
    "blazevivan": "I can confirm this. Tested on Windows 10, Chrome v71.0\nThe issue is with both links. \nThe bigger issue is that when I chose to login with WordPress.com account nothing happens, I'm not logged in and it returns me to the Sign In page. . ",
    "JMbassignana": "Exactly, sorry if that wasn't the way to report issues, im totally new in\nGITHUB, i'll re post it in the issues section, i love your software!\nEl vie., 18 ene. 2019 a las 15:50, Lena Morita (notifications@github.com)\nescribi\u00f3:\n\n@JMbassignana https://github.com/JMbassignana Thanks for the report!\nDid you mean to post this as an issue\nhttps://github.com/Automattic/simplenote-electron/issues?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Automattic/simplenote-electron/pull/1164#issuecomment-455649200,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Aspj47eqeMqBoxELXuMWV5jlp_EXGbfxks5vEheBgaJpZM4aIF1n\n.\n. \n",
    "SonGokussj4": "Hi, just tried downloading v1.4.0-beta for Linux and found that CTRL+SHIFT+P does what I wanted from Simplenote for ages :-) So that's nice. But it's true it's nowhere to be documented. I just \"tried\" the CTRL+SHIFT+P. (because I found that there exists ctrl+shift+f shortcut)\nCould be within \"Preview button\" annotation upon mouse-over.. ",
    "lizardll": "\nThanks for the report!\nI'm having trouble reproducing it though. Maybe I'm not doing it fast enough.\nDoes this happen with Simplenote 1.5.0 (we updated the Electron version we're using in it)? Also, do you know if this happens with other Electron-based apps?\n\nFirst, this also happens with Simplenote 1.5.0. Second, Electron-based vscode doesn't have similar problems.\nHOWEVER, I have an important discovery:\nIf I change my system language from Chinese to English, than it won't happen anymore. And after I change it back to Chinese, this issue reappears. So maybe there are some problems with multi-language supporting.. ",
    "tribukhouski": "ppa is incomparably better than monstrous snap. ",
    "vision8tech": "Yes, of course. Tried and it asks for some credentials with admin rights.\nRunning Simplenote-win-1.4.0.exe it firsts pops up a dialog window, saying that \"You are about to run this Executable with admin rights\". Unfortunately, on that workstation I don't have admin rights.. Clicking Cancel it ends the installation. I assume it all relates to the fact that some file associations are involved and for such cases admin privileges are needed. An installation example that works well is Boostnote, maybe that can help.\nThanks.. An example of such issue and the solution: https://github.com/electron-userland/electron-builder/issues/772\n. ",
    "johann-ka": "Same problem here! I think I have a traceable pattern:\n\nGo into a note (markdown formatting activate) \nCreate a headline '#'\nAdd several bullet points and place the curse at the end of the line of one of them, probably somewhere further up\nUse ALT+Tab to switch to another programme ..e.g. Firefox\nUse ALT+Tab to switch back to Simplenote\nClick with the mouse somewhere where you want to type text (but not the last bullet point), e.g. type the word 'example'\nDelete the word you just typed using 'CTRL' + 'Backspace' \nAfter a short instance the cursor should jump to the end of the note\n\nSometimes the cursor seems to jump although nothing has been typed. Hence, I'm not 100% if the above is useful.. ",
    "milkdromeda": "This is also a problem for me on MacOS Mojave 10.4.2 running the 1.4.0 release. The cursor seems to jump to the end randomly as I type. This happens for almost every line I type, regardless if it's a bullet point or a table.. Hi @mirka,\nI like your suggestion to check \"Enable Markdown on all notes\" by default for .md files.\nI am just interested in one thing: how can one bulk rename files (on the Mac or other platforms)?. ",
    "davidermined": "got the same problem on 1.4.0 on Windows.\nCan happen multiple times per minute, whilst I'm in the\nprocess of carefully considering and changing my words.\nBreaks flow and is jarring.\nGoing back to ResophNotes for now, till this is fixed,\nbecause atm SimpleNote is not usable for me.\nGood luck!. ",
    "detlefholtz": "Had a very similar report of a user using Windows 10 updating to 1.4.1 and experiencing this issue\n1789062-zen. ",
    "jonnyruzek": "Similar report in 1812305-zen. ",
    "kriskorn": "Another report in #1781373-zen. ",
    "AnwarShah": "+1 for appimage. AppImage is simpler and works most of the time consistently.\nI also suggest to integrate update information for AppImages so that updating to the next version becomes easy. AppImageUpdate is the tool that facilitates this sort of update. Basically it updates the local copy of appimage with the updated one from remote location using zsync2, which only fetches the changes between two image.. ",
    "jadupl2": "Just find out what was the problem\nI installed Simplenote-linux-1.4.1-i686.rpm \ninstead of Simplenote-linux-1.4.1-x86_64.rpm.\nIt's working now.\nSorry, Great product, Use it on Linux, Mac, Windows, Web and iOS\n. ",
    "evandrojr": "Maybe this lib can be useful for the task:\nhttps://github.com/SortableJS/Sortable. ",
    "Naerriel": "Hello,\nA smiliar issue appears not on list, but on the main background:\n\nBut it may be that this issue fixes it in both places.\nHas it been released yet?. My version is 1.4.1. I will check it straight away.. @mirka \nThe bug doesn't appear in 1.5.0.\nSorry for the delay.\nThank you :) . ",
    "4Lisandr": "Can you make customise by user theme? I need another colors for background and text.. ",
    "mikeicode": "Also reported #1785056-zen. ",
    "pieroxy": "Just started to work right now.... So I cannot help debugging the issue anymore. Not sure there's anything I can do to help. Let me know if this issue should be closed, I'm not sure it's very actionnable.. ",
    "gellenburg": "Having the same issue on the Windows 10 / Microsoft Store app version as well. This isn't limited to Linux. Can login just fine from Android. App is stuck on:\n\nHowdy! Simplenote would like to connect to all of your WordPress.com sites.\n\n. Removing SimpleNote and re-adding it didn't help.\nStill unable to login.\nThe debug console shows a bunch of messages though under the Network tab:\nWhen I click on the Authorize button, SimpleNote calls the following URI:\nhttps://public-api.wordpress.com/oauth2/login/?client_id=99999&redirect_uri=https%3A%2F%2Fapp.simplenote.com%2Fwpcc&response_type=code&scope=global&state=app-6ef47a0237be4f999999&action=oauth2-login&redirect_to=https%3A%2F%2Fpublic-api.wordpress.com%2Foauth2%2Fauthorize%2F%3Fclient_id%3D99999%26redirect_uri%3Dhttps%253A%252F%252Fapp.simplenote.com%252Fwpcc%26response_type%3Dcode%26scope%3Dglobal%26state%3Dapp-6ef47a0237be4f999999%26jetpack-code%26jetpack-user-id%3D0%26action%3Doauth2-login&blog_id=0&_wpnonce=9999999999\nWhich responds with an HTTP/302 Redirect\nlocation:\nhttps://app.simplenote.com/wpcc?code=XXXXXXXXX&state=app-6ef47a0237be4f999999\nAnd sets various cookies related to my account ID and credentials.\nSimpleNote then calls that redirected URI above:\nRequest URL:\nhttps://app.simplenote.com/wpcc?code=XXXXXXXXXX&state=app-6ef47a0237be4f999999\nWhich receives an HTTP/302 Redirect to the following URI (callback):\nlocation:\nsimplenote://auth?state=app-6ef47a0237be4f999999&user=REDACTED&token=0a2a...7e70&wp_token=17QE...0PMi&new=false\nBut SimpleNote can't complete the call-back!\nIt tries to request:\nRequest URL:\nsimplenote://auth?state=app-6ef47a0237be4f999999&user=REDACTED&token=0a2a...7e70&wp_token=17QE...0PMi&new=false\nWhich never completes!\n\n. How? By typing in my email and password.\nNote, the web version of simplenote works just fine. It's the electron version that's borked.\nOn March 13, 2019 8:09:55 PM EDT, msilbers notifications@github.com wrote:\n\n\nStill unable to login.\n\n@gellenburg for now, are you able to log in with the email address and\npassword originally used to set up your Simplenote account?\n-- \nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub:\nhttps://github.com/Automattic/simplenote-electron/issues/1229#issuecomment-472654314\n\n-- \nSent from my Android device with K-9 Mail. Please excuse my brevity.. > > How? By typing in my email and password.\n\n@gellenburg Yes, exactly. If you are having any trouble with that, you can contact support here and we can help you out: https://simplenote.com/contact-us/\n\nI'm confused, what is Support going to be able to help me with when the Electron version of SimpleNote is hanging when I attempt to login with my WordPress account, yet I am able to login with my WordPress Account with the web version of SimpleNote just fine?\nEdit: I mis-understood your original question. YES I can login with an Email and password with the Electron version just fine.. ",
    "lemuelroberto": "@envygeeks, thank you for the this change that also solves a $PATH's problem on XUbuntu 14.04, while it doesn't have '/usr/share' in it's $PATH.\nBut I'd like to suggest you to point the link to it's real path target ('/usr/share/simplenote/simplenote') instead of pointing it to '../share/simplenote/simplenote'.\nYou could do something like this:\n```\ncp.execSync( \"mkdir -p release/tmp/usr/bin\", onErrorBail);\ncp.execSync( \"ln -s /usr/share/simplenote/simplenote release/tmp/usr/bin\", onErrorBail);\n```\n. ",
    "ksdme": "Yeah, I think that is a good idea.. "
}