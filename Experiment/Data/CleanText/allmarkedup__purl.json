{
    "allmarkedup": "Thanks for this - I initially thought that this was against the spec but it seems that it is actually a W3C recommendation that HTTP server implementors support the use of semicolons as an alternative to the ampersand as a separator (http://www.w3.org/TR/1999/REC-html401-19991224/appendix/notes.html#h-B.2.2). Will merge this in now.\n. Thanks for this. Couldn't merge your pull request because of the spaces issue but have now added this in manually. Cheers!\n. Thanks guys - and sorry for the slow reply. This is definitely on my radar - however I'm going to implement something more akin to the 'full featured' solution discussed (i.e. getting and setting params/fparams etc as well as attributes) so won't merge in this pull request at this time. \n. Hi @omarqureshi - Appreciate your point of view and I think you're generally correct. However this pull request is too simple a solution - for example setting some attributes (like the query string) should probably trigger a re-parsing of the query string so that the .param() method still stays in sync, etc. It's not just all about the toString() method.\nThis re-parsing issue when setting anything was really the reason that I wanted one solution to cover all the bases (attr, param, fparam etc) as a lot of the functionality will likely be shared.\nI'm very much up for having this functionality in there - but I don't want to merge in solutions that are not quite fully baked. But if you (or anyone else!) get this working properly (even just for the attr() method) I'll definitely look at pulling it in. I'm just a little time-poor at the moment :-)\n. Great - totally agree it would be a great addition to be able to have this in there. And glad you have found it useful :-)\n. Sorry guys! Been super busy, but will merge the fix in now. Many thanks for your input.\n. Thanks Kenn - definitely happy to add AMD support. I'll just give it a test to double check it when I have a spare few minutes and then get it merged in if all is good.\nCheers,\nMark\n. Hi @doppelganger9 - I've finally(!) got round to thinking about this, have added a comment to the original issue and it would be good carry on the conversation there if possible :-)\n. Thanks @smoya - I hadn't thought of allowing custom querystring/fragment parsers to be supplied, but I like the idea. I think I'll implement it in a bit of a different way to the way you've done it though, so I'm going to close this pull request but add it to my list of things to do. Thanks again :-)\n. Thanks @sebs - I've manually added this in now. Much appreciated.\n. Thanks! Will merge this in now.\n. This is not an erroneous semicolon, it is there by design to help prevent errors when this script is concatenated and minified with other scripts. It's a pretty common design pattern - see for example this discussion about it in relation to jQuery plugins.\n. Thanks mate - these look great, but I'm currently struggling to get Buster working properly on my machine. Does it not need the HTML scaffold file in there somewhere? Or am I just being a bit slow?\n. Yeah the buster server is all running ok, but nothing is happening when I try and run the tests. Probably just me, will persevere!\n. Ok, so with the new commit it works for me when running buster static and letting that hook up the server. The browser capture and buster test still seems broken to me but it doesn't really matter if the other way works!\nNice work - will merge this in now, much appreciated.\n. Thanks @prodis but this was already patched in commit f61691a8777290695c81be494220216fd089d822 - if you are still having issues with the latest version please let me know.\n. Thanks for this - merging in now.\n. Thanks for this @joncotton - and sorry it took me so long to get too! :-/ Merging now.\n. Hi @matthewwithanm  - I've just implemented a fix to this, please let me know if you are still having problems!\n. Thanks for this - merged now :-)\n. Hey @dodozhang21 - I've added this now but updated the name to @allmarkedup/purl to utilise my npm namespace. Thanks for the PR :-). Done :-) v2.3.2. Thanks for this - I initially thought that this was against the spec but it seems that it is actually a W3C recommendation that HTTP server implementors support the use of semicolons as an alternative to the ampersand as a separator (http://www.w3.org/TR/1999/REC-html401-19991224/appendix/notes.html#h-B.2.2). Will merge this in now.\n. Thanks for this. Couldn't merge your pull request because of the spaces issue but have now added this in manually. Cheers!\n. Thanks guys - and sorry for the slow reply. This is definitely on my radar - however I'm going to implement something more akin to the 'full featured' solution discussed (i.e. getting and setting params/fparams etc as well as attributes) so won't merge in this pull request at this time. \n. Hi @omarqureshi - Appreciate your point of view and I think you're generally correct. However this pull request is too simple a solution - for example setting some attributes (like the query string) should probably trigger a re-parsing of the query string so that the .param() method still stays in sync, etc. It's not just all about the toString() method.\nThis re-parsing issue when setting anything was really the reason that I wanted one solution to cover all the bases (attr, param, fparam etc) as a lot of the functionality will likely be shared.\nI'm very much up for having this functionality in there - but I don't want to merge in solutions that are not quite fully baked. But if you (or anyone else!) get this working properly (even just for the attr() method) I'll definitely look at pulling it in. I'm just a little time-poor at the moment :-)\n. Great - totally agree it would be a great addition to be able to have this in there. And glad you have found it useful :-)\n. Sorry guys! Been super busy, but will merge the fix in now. Many thanks for your input.\n. Thanks Kenn - definitely happy to add AMD support. I'll just give it a test to double check it when I have a spare few minutes and then get it merged in if all is good.\nCheers,\nMark\n. Hi @doppelganger9 - I've finally(!) got round to thinking about this, have added a comment to the original issue and it would be good carry on the conversation there if possible :-)\n. Thanks @smoya - I hadn't thought of allowing custom querystring/fragment parsers to be supplied, but I like the idea. I think I'll implement it in a bit of a different way to the way you've done it though, so I'm going to close this pull request but add it to my list of things to do. Thanks again :-)\n. Thanks @sebs - I've manually added this in now. Much appreciated.\n. Thanks! Will merge this in now.\n. This is not an erroneous semicolon, it is there by design to help prevent errors when this script is concatenated and minified with other scripts. It's a pretty common design pattern - see for example this discussion about it in relation to jQuery plugins.\n. Thanks mate - these look great, but I'm currently struggling to get Buster working properly on my machine. Does it not need the HTML scaffold file in there somewhere? Or am I just being a bit slow?\n. Yeah the buster server is all running ok, but nothing is happening when I try and run the tests. Probably just me, will persevere!\n. Ok, so with the new commit it works for me when running buster static and letting that hook up the server. The browser capture and buster test still seems broken to me but it doesn't really matter if the other way works!\nNice work - will merge this in now, much appreciated.\n. Thanks @prodis but this was already patched in commit f61691a8777290695c81be494220216fd089d822 - if you are still having issues with the latest version please let me know.\n. Thanks for this - merging in now.\n. Thanks for this @joncotton - and sorry it took me so long to get too! :-/ Merging now.\n. Hi @matthewwithanm  - I've just implemented a fix to this, please let me know if you are still having problems!\n. Thanks for this - merged now :-)\n. Hey @dodozhang21 - I've added this now but updated the name to @allmarkedup/purl to utilise my npm namespace. Thanks for the PR :-). Done :-) v2.3.2. ",
    "fguillen": "+1, I also would find useful to be able to modify a selected param or fparam:\n```\n$.url(\"http://mydomain.com?z=3&y=4#a=1&b=2\").param('z','5').toString();\n=> \"http://mydomain.com?z=5&y=4#a=1&b=2\"\n$.url(\"http://mydomain.com?z=3&y=4#a=1&b=2\").fparam('a','5').toString();\n=> \"http://mydomain.com?z=3&y=4#a=5&b=2\"\n```\n. +1, I also would find useful to be able to modify a selected param or fparam:\n```\n$.url(\"http://mydomain.com?z=3&y=4#a=1&b=2\").param('z','5').toString();\n=> \"http://mydomain.com?z=5&y=4#a=1&b=2\"\n$.url(\"http://mydomain.com?z=3&y=4#a=1&b=2\").fparam('a','5').toString();\n=> \"http://mydomain.com?z=3&y=4#a=5&b=2\"\n```\n. ",
    "smoya": "+1 !!!\n. +1 !!!\n. ",
    "jesalg": "yes!\n. yes!\n. ",
    "omarqureshi": "I don't see how setting the fparam or param as an aside to this is mutually exclusive. Why not merge this in for now and sort out the param behaviour afterwards?\nInfact, I'll work on this tomorrow.\n. I'll most likely be spending some time on it tonight. \nThis library is really quite useful and this would make it that much more awesome.\n. Nah - i managed to get it to work without, I assume you have node and npm installed?\n. Ah, you have to connect to the buster server with a client, browse to http://localhost:1111 with a web browser and it will use that as the client (you'll need to leave the browser open).\n. You will also need to explicitly press the 'capture browser' button too\n. The above commit should also help.\n. As a note, someone has implemented parameter modifications on my branch and whilst there a few things I'm nitpicking on with the code (indentation is all changed, the name of the string conversion method) it does from a quick glance look good. Is there any chance we can also look at that too?\nhttps://github.com/omarqureshi/jQuery-URL-Parser/pull/1\n. I don't see how setting the fparam or param as an aside to this is mutually exclusive. Why not merge this in for now and sort out the param behaviour afterwards?\nInfact, I'll work on this tomorrow.\n. I'll most likely be spending some time on it tonight. \nThis library is really quite useful and this would make it that much more awesome.\n. Nah - i managed to get it to work without, I assume you have node and npm installed?\n. Ah, you have to connect to the buster server with a client, browse to http://localhost:1111 with a web browser and it will use that as the client (you'll need to leave the browser open).\n. You will also need to explicitly press the 'capture browser' button too\n. The above commit should also help.\n. As a note, someone has implemented parameter modifications on my branch and whilst there a few things I'm nitpicking on with the code (indentation is all changed, the name of the string conversion method) it does from a quick glance look good. Is there any chance we can also look at that too?\nhttps://github.com/omarqureshi/jQuery-URL-Parser/pull/1\n. ",
    "AndersDJohnson": "+1 Any native solution for this in the works? Currently using my own hack: adjohnson916/purl-rebuild.\n. +1 Any native solution for this in the works? Currently using my own hack: adjohnson916/purl-rebuild.\n. ",
    "dsmiley": "I also experienced URL encoding issues and this appears to work.  I wonder why this hasn't been committed?\n. I also experienced URL encoding issues and this appears to work.  I wonder why this hasn't been committed?\n. ",
    "dannykopping": "I'm getting the following error when attempting to run the tests:\nReferenceError: expect is not defined\nI've installed Buster\n. I'm getting the following error when attempting to run the tests:\nReferenceError: expect is not defined\nI've installed Buster\n. ",
    "joncotton": "You're welcome. Thanks for the merge and new version release.\n. You're welcome. Thanks for the merge and new version release.\n. ",
    "tonyganch": "@allmarkedup, ping :octopus: \n. @allmarkedup, ping :octopus: \n. ",
    "licx": "+1\n. +1\n. ",
    "sferoze": "looking forward to this package. This way I can use this server side. \n. looking forward to this package. This way I can use this server side. \n. ",
    "nicolashery": "Same here :)\nFor now am using:\nbash\n$ npm install --save CodeYellowBV/purl#4314dced8fce07437db276b7650c100228790f91\n. Same here :)\nFor now am using:\nbash\n$ npm install --save CodeYellowBV/purl#4314dced8fce07437db276b7650c100228790f91\n. ",
    "waawal": ":+1: \n. :+1: \n. ",
    "jleppert": "tap tap. is this thing ON?\n. tap tap. is this thing ON?\n. ",
    "robertfausk": "@allmarkedup Will there be any progress on this?\n. @allmarkedup Will there be any progress on this?\n. ",
    "dodozhang21": "I'm trying to switch to use your repo with a tag. But the commit is not in your v2.3.1 tag. Will you please add it?\n```\nnpm install git+https://github.com/allmarkedup/purl.git#v2.3.1 --save\nnpm ERR! addLocal Could not install /var/folders/zh/px7p3g2d30l24_lk47x6h015y2vmyr/T/npm-31918-0134aaed/git-cache-d5b08f39/1771aec03be7f0ae31d83c7f2fca6149a4581821\nnpm ERR! Darwin 15.6.0\nnpm ERR! argv \"/Users/yzhang2/.nvm/versions/node/v7.2.0/bin/node\" \"/Users/yzhang2/.nvm/versions/node/v7.2.0/bin/npm\" \"install\" \"git+https://github.com/allmarkedup/purl.git#v2.3.1\" \"--save\"\nnpm ERR! node v7.2.0\nnpm ERR! npm  v3.10.9\nnpm ERR! code EISDIR\nnpm ERR! errno -21\nnpm ERR! syscall read\nnpm ERR! eisdir EISDIR: illegal operation on a directory, read\nnpm ERR! eisdir This is most likely not a problem with npm itself\nnpm ERR! eisdir and is related to npm not being able to find a package.json in\nnpm ERR! eisdir a package you are trying to install.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Applications/MAMP/htdocs/drp_parents/docroot/sites/parents.com/themes/parents/npm-debug.log\n```. I'm trying to switch to use your repo with a tag. But the commit is not in your v2.3.1 tag. Will you please add it?\n```\nnpm install git+https://github.com/allmarkedup/purl.git#v2.3.1 --save\nnpm ERR! addLocal Could not install /var/folders/zh/px7p3g2d30l24_lk47x6h015y2vmyr/T/npm-31918-0134aaed/git-cache-d5b08f39/1771aec03be7f0ae31d83c7f2fca6149a4581821\nnpm ERR! Darwin 15.6.0\nnpm ERR! argv \"/Users/yzhang2/.nvm/versions/node/v7.2.0/bin/node\" \"/Users/yzhang2/.nvm/versions/node/v7.2.0/bin/npm\" \"install\" \"git+https://github.com/allmarkedup/purl.git#v2.3.1\" \"--save\"\nnpm ERR! node v7.2.0\nnpm ERR! npm  v3.10.9\nnpm ERR! code EISDIR\nnpm ERR! errno -21\nnpm ERR! syscall read\nnpm ERR! eisdir EISDIR: illegal operation on a directory, read\nnpm ERR! eisdir This is most likely not a problem with npm itself\nnpm ERR! eisdir and is related to npm not being able to find a package.json in\nnpm ERR! eisdir a package you are trying to install.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Applications/MAMP/htdocs/drp_parents/docroot/sites/parents.com/themes/parents/npm-debug.log\n```. "
}