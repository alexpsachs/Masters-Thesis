{
    "sharat87": "Thanks for the pull request @twe4ked. Its my first ever :)\nYes, rsync is a good choice for this thing, wonder why I didn't think of that. Either way, I was also thinking of just creating a symlink (with ln) instead of making a copy with cp or rsync.\nI am still testing that method, but I guess we can use rsync until then. What say we do?\n. Yep, simlinking seems to work better. See https://github.com/zsh-users/antigen/commit/2b5d4a0c3fe914e713fd51277b4b2a6cad558e21\nThank you for opening this issue.\n. Thank you for the kind words :)\nYeah, I'm not a ruby person, as you might've guessed.\nThe situation you describe indeed needs to be addressed. I suppose antigen is something that is the least likely to have a conflict with another program, but it doesn't sound quite right. It loses on some semantic meaning that the bundle command had.\nSo, may be something more explicit? Like antigen-bundle or antigen-install? Its long but I can't think of anything better.\nOr is antigen good and I'm over-thinking it? I know, I suck at naming things :)\nI'm glad that you brought this up in this early in the project, when we can afford this kind of changes.\nBtw, learnt about zundle from your dotfiles. Didn't know this approach was tried before :)\n. Also, on a side note, the bundle-install command is not available any more and is not necessary. Just the bundle command installs and loads the plugin. See README for details.\n. You know what, let's rename it to antigen-bundle. And recommend people use an alias to it like b or u, but antigen won't be providing any such alias by itself.\nIn fact, I'll prefix all commands with antigen-, to avoid any conflicts with any other apps.\n. You should see the antigen-bundles command I introduces after this change.\nThanks, but I won't be getting very far without help from people like you :)\n\nShrikant Sharat Kandula, on his iPad.\nOn 10-Jun-2012, at 5:31 AM, Charlie Tanksley\nreply@reply.github.com\nwrote:\n\nSorry I dropped out on this.\nI like the switch a lot.  Thanks! I'll update my version and turn it back on. :)\nI tried zundle for a bit (I just played with it--I was still using bash), but really didn't like the idea of having to manually create repositories for any plugin I wanted from, e.g., oh-my-zsh.  I was actually thinking about trying to implement some automatic workaround, but I'm super thankful you already did it (mine would've been weak ;)).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/zsh-users/antigen/issues/2#issuecomment-6224750\n. Hi Charlie,\n\nNo problem, keep them coming :)\nThis is currently not possible with antigen. The URL and loc arguments\nto antigen-bundle should combine and make up a directory for antigen\nto make sense out of it.\nAnother detail is that copying/symlinking the used bundles in the\nbundle directory is gone. Plugins are loaded directly from the correct\nclone in the repos directory.\nThe implication of the above is that, you can't add just a few select\ncompletion files to your environment. The way completions are loaded\nis by adding a directory with completion files to the $fpath\nvariable. So when we add the zsh-completions directory to this, we get\nall the completions loaded.\nI didn't support this because I don't see any real need for it. Why\nwould you want to load only one completion? If its for performance,\nthen you don't really need to worry, because the antigen-apply\ncaches them. I have an improvement in mind for that function to be\neven faster in the future (it's in a TODO comment).\nHope this answers your concerns. Please feel free to open an issue if\nyou want to discuss anything.\n\nShrikant Sharat Kandula, on his iPad.\nOn 10-Jun-2012, at 5:56 AM, Charlie Tanksley\nreply@reply.github.com\nwrote:\n\nHi again. :)\nI'd like to install some completions from https://github.com/zsh-users/zsh-completions.  I guess I could just install them all, but I only want some of them, so I thought I could use antigen to install them.  Maybe I'm wrong about that?\nHere is what my .zshrc looks like:\n```\n   source ~/.zsh/antigen/antigen.zsh\nantigen-bundle heroku\n   antigen-bundle brew\n   antigen-bundle gem\n   antigen-bundle zsh-users/zsh-completions.git bundle # one I care about and am not getting\n# Syntax highlighting bundle.\n   antigen-bundle zsh-users/zsh-syntax-highlighting\nantigen-apply\n```\nAll those install just fine, save for the zsh-users one.  When I open a new tab I get this message:\nls: /Users/<user>/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-zsh-users-SLASH-zsh-completions/bundle: No such file or directory\n   ls: /Users/<user>/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-zsh-users-SLASH-zsh-completions/bundle: No such file or directory\nInstead of bundle I've tried _bundle, /bundle, and _bundle.  When I look in .antigen I don't see the bundle directory/symlink in the .antigen/bundles directory, though it does show up in the proper repository in .antigen/repos.\nIs this a use case for antigen?  If so, am I doing something wrong?  Thanks in advance, and sorry keep hitting you with the issues. :)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/zsh-users/antigen/issues/3\n. Closing as I don't see a reason as of now to do this. You can just as well add all the available completions, and because of the way the completions cache works, you should rarely see a performance impact for this.\n\nHowever, if we do have a good reason to support this, I am happy to reopen this.\n. Yes, that is correct. With that line, you should have your\nzsh-completions loaded and ready to use.\nFrom what I understand from your last paragraph, yes you can and are\nencouraged to use repositories other than oh-my-zsh for your shell\nplugins.\nI hoped this was clear in the docs. If you feel this isn't as clear as\nit should be, can you suggest what can be added. Documentation is a\nvery important item in my priority list, more than reliability :).\n\nShrikant Sharat Kandula, on his iPad.\nOn 10-Jun-2012, at 8:16 PM, Charlie Tanksley\nreply@reply.github.com\nwrote:\n\nThis is a great answer.  Thanks.\nJust to be clear, here's how I understand (part of) what you said: antigen will work to install non-oh-my-zsh stuff, but only if you point it at a directory.  So if I did\nantigen-bundle someuser/somerepo.git path/to/directory\nThat would install whatever is at path/to/directory.  Is that right?  Will it work if I just do\nantigen-bundle zsh-users/zsh-completions.git\n(Without any directory, just wanting to install the whole thing.)\nI hate having multiple git repositories I have to remember to keep up to date and would like to be able to do all this through antigen, but I'm not sure if that is what antigen is for.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/zsh-users/antigen/issues/3#issuecomment-6228808\n. This looks strange. Can you give the exact version of antigen you were using? The git change set hash should help, if it's not the latest.\n\nWhen you say you upgraded zsh-completions, did you use the antigen's update command or did you manually do a git pull in its clone?\nAlso, for the future, if you face anything like this after an antigen upgrade, just deleting the .antigen directory should get your shell back to sanity ;)\n. I haven't updated my zsh-completions yet, will do it today evening.\nLet me see if I face this.\n\nShrikant Sharat Kandula, on his iPad.\nOn 10-Jun-2012, at 4:54 PM, Ivaylo Kuzev\nreply@reply.github.com\nwrote:\n\nI follow any changes and Is the last version of antigen,\nand use the antigen update command.\n[quote\nAlso, for the future, if you face anything like this after an antigen upgrade, just deleting the .antigen directory should get your shell back to sanity ;) /quote]\nOf course, i know about this, but it seemed strange.\nYou use zsh-complications, any problems with the same?\nThanks!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/zsh-users/antigen/issues/4#issuecomment-6227645\n. Nope, I don't see it. I have a feeling that's because the code that does copying/linking of plugins is no longer present. There is no occurrance of the cp or ln commands in antigen anymore. Probably that piece of code had the problem when you updated.\n\nIn either case, let's take it up if you see it again. Also, please update your antigen if you haven't already done so :)\n. Sorry, missed it. The bug is very much present and I believe its because of this: http://stackoverflow.com/a/5083437/151048\nI'll push a fix right away. Thanks for raising this.\n. I am not sure but it might be because you have spaces and not completely blank lines in the heredoc given to antigen-bundles.\nI've been using blank lines in my call to antigen-bundles and its been working great so far. Of course, when I put a space in the seemingly blank line, the command breaks. I'll push a fix for this in a few minutes.\nThat, or this is a mac/bsd specific issue, if you are not using linux that is.\nAlso, the gist you posted seems to have a syntax error. There is an escaped ' character, which is most likely not intended.\n. Thank you for your kind words Pavel.\nI don't understand the need for having repos in the gitignore though. Antigen doesn't create a repos directory here by default, it creates it in ~/.antigen/repos, which is obviously out of your dotfiles. If however, your specific configurations of antigen is what is causing it to create this directory in this location, then I suppose it should be added to the gitignore of your dotfiles repository, no?\nFrom what I understand from your dotfiles, you are using the same directory for your antigen clone and for the antigen's working directory, pointed by ADOTDIR. This is something I haven't thought of, but from the top of my head, I wouldn't recommend this approach. If you nat yr antigen clone at ~/.antigen, then please change ADOTDIR accordingly so they won't clash.\nClosing since doesn't seem necessary. \n. Nope. Not currently possible, but is a good idea. I'll implement it when it get soon, once I get my new laptop delivered :cake:\n. Finished along with tests (tests/branch.t). Let me know if that is what you were expecting. It is also documented in the readme.\n. That looks good as an initial template, even for those who are not coming from ohmyzsh. But, people might be wary of making big changes to their zshrc file, I know I am :). The same template you. Showed, but already populated with the current theme, ohmyzsh fork and plugins used, will make. The template much more personal and approachable.\nThat's the idea anyway. I haven't done this yet and still open for better ideas. \n. This isn't happening. I suppose the documentation is good enough in this area.\n. Thanks for reporting Amit. It should now be fixed.\n. Also relevant: https://github.com/zsh-users/antigen/commit/0912ba47242d8d83a90aa774a5ab2836f8b28d21\n. This is why we need more tests :)\nI see you found the cause for much of the problem. I'll get the fix rolling today, hopefully I have the time for tests too.\n. This should now be fixed. Along with the rm command not working thing. Please check and reopen if it is still present.\n. Okay, I have IMO simplified the whole branch-management thingy as well as the -cleanup implementation. I have also written a test for the -cleanup command, which obviously currently passes.\nAnd to your points, seeing the problem when there is not .git at the end of default repo url is really weird. I don't know why or how it occurred to you, but currently, I don't fiddle with the .git for any repo url at all. This might cause re-cloning of some plugins after you update your antigen to the latest, but should be fine after that. Also, you might want to know that all the tests are run with the ANTIGEN_DEFAULT_REPO_URL set to a local absolute path (obviously without a .git at the end).\nSecondly, I don't think adding such a check after the rm command makes much sense. If the path given to rm was wrong then rm would quietly exit and the -d check you are doing also passes. So, this check isn't, strictly speaking, checking anything. A check, if any, should check if the $dir is correct, which, as I see it isn't doable.\nI hope cleanup and branch functionality work well now. They do in the tests at least :)\nThank you for your reports and help on this.\n. Amit, thanks for reporting this.\nI created a test for running the scenario you showed in your post, tests/issue-13.t (not committed).\n```\nLoad zsh-syntax-highlighting.\n$ antigen-bundle zsh-users/zsh-syntax-highlighting\n  Cloning into '*-zsh-syntax-highlighting.git'... (glob)\nList the plugins.\n$ antigen list\n  https://github.com/zsh-users/zsh-syntax-highlighting.git / plugin true\nRun cleanup.\n$ antigen cleanup --force\n  You don't have any unidentified bundles.\n```\nBut this test doesn't fail. The final cleanup command does not identify any clones to be cleaned up.\nThe tests are run in a vanilla zsh configuration. While I doubt anything in your zsh environment caused this, can you reconfirm with vanilla zsh (i.e., no significant changes to the environment in .zshrc) and the latest updated antigen, we might find what's going wrong.\n. Will reopen if needed.\n. Thanks!\n. Thanks for reporting this.\n. :) I would've never spotted it. Thanks!\n. The latest development version of cram is required to run the tests. You'll get it if you just use the requirements.txt file. Just run pip install -r requirements.txt and you should be good.\nThe reason is this version has the --shell argument, which is required to tell cram to run our tests in zsh and not the operating system's default shell.\nThanks for pointing this. I'll add this detail to the readme later today.\n. Thanks. I didn't know inner functions allowed in zsh. Thanks for that :)\nA small aside, I'd prefer a more descriptive name to Git, which doesn't indicate at all of its purpose. Just something for future contributions :)\n. Also, wanted to ask, is the eval there required? The tests pass without it.\n. No problem, I'll remove the eval.\nAs for the name, it's just personal taste I guess. While having caps is\nrequired for vim, I tend to prefer lowercase only for shell commands and\nfunctions. That, and to prefix with a - to functions that are to be used\ninternally.\nAnyway, I have renamed the function to --plugin-git, and am deleting it\n(with unfunction) when we are done with it. I know, the name doesn't look\npretty, but it's a temporary function, it isn't named for brevity :)\n\nShrikant Sharat Kandula, on his iPad.\nOn 10-Aug-2012, at 21:45, Arash Rouhani notifications@github.com wrote:\nSorry for using eval, the reason was that I spent an hour trying \"random\"\nways to get this to work, and thought that if I use eval and pass\neverything to it it would work. I really did a great number of\nmiscalculations because I now see that eval is unnecessary here.\nHmmm, as for altenative names to Git, well I can first say that it came\nfrom the fugitive-plugins name called Git which basically is git\n--git-dir=.... But that Git is just called Git for vim conventions. Do you\nknow of any more descriptive name?\nOn the other hand maybe Git isn't so bad? We are basically just using\ngitas the normal command line tool, only that it works even though we\naren't\nin the repo folder?\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/zsh-users/antigen/pull/18#issuecomment-7649237.\n. Thank you!\n. Thanks guys, I fixed this just now. Obviously I don't have a mac, so you'll have to confirm if it works (which I believe it will). Please reopen if the issue persists.\n. Thanks!\n. Hehe, the tests fail on the CI system because it doesn't have zsh :)\nI have to turn it off. Sorry about that.\n. Thanks. I didn't know you could install stuff on their servers.\n. I'll make a few points that should answer your concerns as a whole.\n1. The directory structure of the plugins directory is not intended to look good. Its just an internal works-well-this-way kind of thing.\n2. The file name redundancy is not something antigen introduced. It comes from the way oh-my-zsh did (and still does) plugins.\n3. In the same lines as the above point, I don't want to specify a format saying plugins should be structured this way and that the files names should be this way. I want the plugin authors to just write their plugin and not think about antigen. Antigen should be able to pick it up.\n4. That is the reason I have no objections if someone wants to write a plugin as name/plugin.zsh. As you say antigen loads is perfectly fine. How it loads is not straight forward, but when you want to support many different code organisations, that's what you get. I don't see this as a problem.\n\n1: Filenames with two dots are a bit ugly\n\nAgain, its personal taste and I leave it to the plugin authors to write whichever way they like. Antigen will work with it.\n\n2: More importantly, the plugin authors have to think when naming their loading script. The point of frameworks and tools like these should be that one can just adopt to the standard without thinking and stuff will just work. The The plugin authors are confident that the antigen authors have thought through the naming conventions, so they don't have to.\n\nYou are right. Plugin authors don't need to think about antigen when writing them. They don't have to think about anything currently. The way I see it, antigen doesn't specify any conventions. Just make your own. As long as its a sane one, antigen will just work. That's the point of having a framework right ;)\nAnd yes, we should clear out these things in the beta stage :)\n. > I have to consult my own judgement 100 times to determine which style I like best.\nThat's one way to look at it. Perhaps we can just suggest/recommend one way of doing things. If we are to do that, I don't want to introduce a new way of doing things. If any directory structure is to be recommended by antigen, it will be something that is currently widely in use. Probably the oh-my-zsh way. Such a recommendation will be quite convincing if its the same format use by something like oh-my-zsh. What say?\n. I don't think that is a good idea. As I said, I'd not want antigen to recommend a completely new way of organizing plugins. Being able to load plugins organized as *.plugin.zsh should not be considered legacy, as there are so many written in this way and there is no real benefit from deprecating it.\nI don't want plugin authors to switch their plugin format just becouse one framework wants them to. Instead I'd prefer they made the plugin more awesome :)\nAgain, if any recommendation is to be made, it will be something currently in use by plugin authors. Unless there is a real benefit with a new format, not just cosmetic.\nAs for making it easy for new frameworks, it will actually make it more work, to support this new plugin.zsh format.\n. > Cosmetic is a benefit\nNot if it requires all plugin authors to rename their plugin files when everything is already working just fine.\n\ncan you consider imposing a existing one like *.plugin.zsh?\n\nDefinitely. Will do.\n\nI personally think consistency should go first\n\nSure. I too believe that consistency is important. There is some consistency in the way oh-my-zsh did plugins. If we adopt the same standard, achieving this consistency will be much easier. After all, consistency in the format is much more important than the format itself, don't you think?\n\nbut maybe you meant that not everyone will adapt that standard, and we will end up with this.\n\nYes, I did. I even searched for that comic ;)\n\ncommunity is way more adoptable than you think\n\nThe way I see it, the community will adapt if there is a real benefit from all the trouble taken to adapt. Then yes, it is very adaptable.\n\njust look how everyone overnight started to use the build status image on the top of their readmes\n\nGood point, but probably not the best thing to compare with. Adding that image meant that the project could show off the build status to the visitor, giving more confidence. That's the reason it became so popular. It added value. I don't see any immediate value in re-organising all the plugins that are working just fine, just the way they are.\nAs long as antigen doesn't create and recommend a new standard, I don't think we are making anything difficult for upcoming frameworks.\n\nAlso, I really appreciate that you take your time to discuss this. You also seem to understand the points I make, so I think this is really a healthy and productive discussion. If anybody else have any opinions please comment.\n\nAbsolutely. I've almost done all I wished for, when I started antigen. So, we need more such discussions to find what the community and we want from antigen :)\n. Sorry, couldn't get to this sooner.\n\nBut cosmetics is a benefit in the end no matter what.\n\nSure, opinions differ.\n\nAnyway, you definitely don't like the plugin.zsh pattern\n\nThat aside, I don't see any value in recommending a new standard and making everyone switch their plugins to it. If cosmetics is your only reason, its not enough for work it needs.\nI'll add to the README recommending to write plugins the oh-my-zsh way (against #24). But its not a strict necessity. I can't remember the last time I thought of code organisation when writing a shell utiluty/plugin. But yeah, I see the value in a recommendation.\n. The irregularity is gone now. I think Travis got their git version updated. Its the same as on my machine now (1.7.9.5). Besides, your fix has a small problem. The line should end with (re) to be matched as a regex, otherwise it would be matched as a literal string.\nThe build is fixed now. You provided the motivation I need to investigate it, so thanks ;)\n. Oh yeah, I'll add the badge thingy to README <3\n. Reopening to add auto-completion for sub-command's arguments.\n. Haha @GUIpsp, that's a sweet idea to time zsh startup. I'd have never thought of that :)\nAnd interesting info you have there. Zsh startup typically takes around one second for me.\nAnd @Peeja, if you spot the plugin(s) causing the trouble, please let us know. May be we can do something, else it will at least be documented here. Thanks for reporting :)\n. Are there any existing repos that offer a prompt theme? That would serve both as an example and a case for doing this.\n. I think the lib/git.zsh is required for those themes to work, yeah? Then a antigen-bundle XsErG/zsh-themes lib should be run before using that themes :)\nAs for specifying the theme, I'd say instead of searching in the root and themes directories, we don't search at all. The theme needs to be explicitly specified as antigen-theme XsErG/zsh-themes themes/lazyuser. This way, there won't be a confusion of where the theme file is located in the repo.\nAlso, in the above example antigen-theme command, I omitted the .zsh-theme extension. Not sure if this is a good idea. What do you say?\n. Yes, compatibility should be kept. I'll try getting something working tonight.\n. Ah, I knew I forgot something in the readme.\nCould you add after the \"It's easy\" part, to say something like 'To see how that works, refer to the section on antigen-theme further down.'.\nAnd are you sure the word unofficial is okay? I wish there was a better word. Anyway, add the above and I'll merge it in :)\n. @Tarrasch, you're right. Let's seeif Vundle ends up taking inspiration from antigen on this feature, that would be so much win :)\nI haven't thought of the arguments to those commands, but come to think of it, what you say sounds good.\n@GUIpsp, true. That is how the antigen-revert command is currently implemented. It should be fairly easy to bring that in to these commands.\n. Yep, that's how it will be done.\n. Okay, I just pushed a quick implementation and I got to go now. There is also a test which is very lacking, IMO. Please check it out and let me know what you think.\nI still have to change antigen-update and antigen-revert to use these new commands.\n. Not entirely sure on this, but I think antigen is only aware of and using only one of those two clones (the one with .git in the end). The others must have been lying from a previous version of antigen. Remove/move them out of the .antigen/repos directory and that shouldn't change anything at all w.r.t. antigen. Let me know if it works out.\nThat aside, is there any reason you aren't using antigen-update, instead of pulling each and every clone yourself? Just curious.\n. No problem. Glad you have it working.\n. This is weird behavior indeed. I can't think how this can happen, off the top of my head, but the following information should give some insight.\n- Your zsh version? (Output of zsh --version)\n- Make sure you are running latest version of antigen. (Go to your antigen clone and do git pull)\n- You say antigen-list works immediately after antigen-apply, but not after .zshrc finishes and you're in the shell. Can you find if there is a certian command in your .zshrc, written after antigen-apply that is causing this problem?\n- Is it recently that this started happening? Since there haven't been major changes to antigen recently, it might be a change somewhere else. Can you comment on this?\n. Hi jonyamo, I tried looking around in the grml config, but couldn't find anything immediately suspicious. Do you still face this problem or have you figured something out?\n. No problem. If you face the issue again, please open a new issue.\nThank you.\n. Hah! I can't believe this bug survived for so long without being noticed. Thanks a lot! :)\n. Nice catch. Thanks!\n. So, the tests passing is not enough :)\nAnyway, this change breaks plugins that use compdef in their scripts. Which is why I put compinit to be run at the start. It would be nice to not run compinit twice, but it still needs more work I suppose.\n. I think I came across that thought at one point. Two reasons I can remember,\n- Dynamically loading bundles from an active shell will get awkward, if bundles are loaded on -apply.\n- User won't be able to use the functions/aliases provided within the bundle spec part of the .zshrc. Probably minor, but it may be slightly counter-intuitive.\nIf there is a way to have zsh just define compdef and defer initialization until a later call to compinit, that would be the solution to all. We probably need a zsh expert for that one :)\n. I'm sure I made a comment on this pull request, can't seem to find it now.\nAnyway, blank lines are already being ignored by the grep command before the while loop, so they should already be ignored. Is it not working for you?\nAs for the compdef changes, I actually merged those two commits (cherry picked) but didn't push as I wanted to test for a few days (its been a week I think). I'll push them now.\n. Okay, the implementation is... incomplete. You don't see any issues because compdef calls are not being deferred at all. I think I addressed this now. Please pull and test.\nThanks.\n. > What is the reason for running the compdef calls inside eval?\nGood question. I'm not really sure. I spent a good 3 hours trying to figure it out. Without the eval, if I run compdef right inside the loop, the completions for git aliases give out an error (defined in ohmyzsh git plugin). Although the completions for those aliases works fine, there is no such error when I use eval there. If you or someone else can figure it out, please open a new issue/send a new pull req.\nThe compinit module is loaded in the -antigen-env-setup, which replaces the compdef function. Try putting a debug echo line in the compdef function, you shouldn't see that message.\nAs for the blank line check, yes the grep is not working as it should. Adding another check is not the solution. Even more so because the grep is not filtering comments too. I'll fix it now. Thanks for bringing it up.\n. > But why? You don't need to call compinit until antigen-apply, which will then cause compdef to be redefined as the proper function.\nPrecisely. That's why I removed that line from -antigen-env-setup and put it in antigen-apply.\nMy zsh version is 4.3.17. I'm being lazy to upgrade my zsh, but we can't break compatibility with 4.x either, can we? Either way, I'm not even sure if its the zsh version causing all the trouble.\nYou have extendedglob, kshglob and login in your setopt that I don't. Everything else is same. Not sure what that means. I'll try debugging and removing the eval some time again later, unless someone better at taming zsh does it before me :). Just so we know its not a zsh bug that's been fixed or something, could you try removing the eval and run compdef right inside the for loop, should it work in zsh5?\n. Blank lines thing should be fixed now.\n. So, I suppose I'll let the eval be until we figure out what's going wrong. I'll get zsh5 one of these days and test on that too.\n. This is obviously not happening and antigen's changed quite a bit since this issue has come up. If work is indeed being done on this topic, please open small individual PRs with focused improvements instead of an large ambitious one that is unlikely to be completed.\nThank you for all the effort though :)\n. Definitely welcome. As it might be apparent from the code, I have little clue on writing zsh scripts. It is written with my knowledge of bash, which isn't much. Could definitely use the input of someone who knows zsh.\nWhile you do this, I just have a few things I want you to keep in mind,\n- Comments. Shell scripts are known to look very esoteric and this makes comments all the more important. I tried to add as many in the current version. Please document your changes so I and others can understand them. extended_glob? I have to read the man page for that now ;)\n- Backwards compatibility. Please prefer this over good code or better implementations. And if this has to be broken, please document it in the readme.\nThat's all off the top of my head. And, good luck :)\n. Haha, those glob patterns are taken from the then oh-my-zsh. I don't know if they are still using them. They worked, for the most part, so I didn't bother to fiddle with them since I didn't understand them well enough.\nThanks for taking the initiative and looking forward to what you come up with :)\n. Ah okay.\n. Just came to know about zparseopts. Reading its docs, I'm not sure we can replace the current system with it, but I'm no expert of course. (Quietly looking forward).\n. Please open new PR's for the improvements you make. Thank you.\n. Actually, it is not redundant. The idea is that, if there is a *.plugin.zsh, Thant that will be the only file to be sourced. Any other zsh or sh files will be sourced, if needed, by that plugin zsh file. If there is no such plugin zsh file, then we source all zsh scripts. Could you change this?\nOther than that, it looks super.\n. Yes, it is a crapshoot, but no more than trying to reliably figure out the plugin name ($plugin). I've been through that and figuring out the plugin name from the URL turned out to be quite flaky. I chose to pick the first plugin file and source it, assuming there will only be one such file. I don't remember the exact reasons I had, but if you can crack it, all the better.\n. You should probably do that with $url/$loc, instead of just $loc, inside -antigen-load.\nCome to think of it, when I was trying to get the name, I needed them to be unique. In the current case, we don't need them to be unique. So it might be possible with a simple method.\nAlso, why regex? Wouldn't your initial idea of $plugin_name.plugin.zsh do fine?\n. I think that won't be a problem if you do basename on $url/$loc, as I said in my prev. comment. That way, if $loc happens to be /, basename will pick the last entry  in the $url, which should be what we want.\nAlso, are you having any troubles with running the tests? I'd be much more confident of your changes if they passed.\n. Closing. If you're still working on this, please update with the latest version of antigen and open a new PR. Thanks.\n. I have just merged @midraal's pull request. Antigen now loads init.zsh if present, after first checking for a *.plugin.zsh.\nBut I think there is more to prezto's modules than that. I don't completely understand what prezto does, but I think the functions directory under the modules is added $fpath. Not sure though, need to look deeper as it seems prezto doesn't document its module structure.\n. I planned to close it after adding tests for this functionality. But it probably should be tracked elsewhere anyway.\n. This is good enough for starters I guess. I'm working on merging this now.\n. Merged. Not sure why it isn't showing up here. The commit is c0ee02666f3790a41664db2dd2e4cda8fb5b5f5d.\nI'm closing this issue. Let's discuss further prezto support on #40.\n. Nice catch. Merged at 2873acbf1a9bb56b5b21222c78b18a0518292ba4. Thank you.\n:sparkles: :beers: :sparkles: Closed issue #42!\n. The pmodload function is defined by prezto. So, your implementation is fine for those who use prezto, but for those who don't, loading any plugin with a init.zsh will break the whole thing.\nSo, may be check for the existence of the pmodload function, and act accordingly. That is, if that function is available, we use your implementation, else, we just source it like it is done currently.\nCould you make this change, so I'll merge it? Thank you!\n. Yes, thanks. Merged :)\n. Sweet and simple. Thank you!\n. Thank you for reporting :sparkles:\n. Thank you for reporting this. It should be fixed now. Please update your copy of antigen.\n. Thanks!\n. I'm not really sure what's causing the error, but the only difference I see is the zsh version. My system (and on travis), zsh is v4.3.17. I'm not sure though.\nAs for your fix, I think it actually reads better, without the ! in the front. And your changes to the antigen-revert function do more than fix your problem. You fixed another bug that I just noticed. I forgot to put a return after the echo to stderr :). With your change that is no longer necessary.\nMerged. Thank you!\n. Thank you Josh!\n. I haven't explored on this topic much, but unless we have proper numbers stating performance improvements, I don't see any other reason to do this. So, yeah, it needs some experimentation.\n. Wow! I never thought antigen could work on Solaris with so little a change. Then again, I have no clue about how Solaris works.\nSo, just out of curiosity, do all the tests pass on Solaris, after this change?\n. - I don't see much gained from EOBUNDLES \u2192 EOB. While EOF makes immediate sense as it is well known, EOB makes no sense, unless you already know what it means.\n- Indenting sounds like a good idea.\nI'll cherry-pick the second commit instead of merging this branch.\n. How is it confusing? May be we can edit and fix it instead of purging it altogether.\n. I see what you mean but I don't believe purging it is the answer. There are some things that are only mentioned in that section, like the ability to change theme on the fly in the shell. I'd much rather it be merged with the Usage section into a Getting started like section, which takes the use through the process of setting up antigen and explains the mainly used commands.\n. Closing.\n- The tests fail.\n- The file is mentioned and explained in the readme.\n- It is not out of context it lists the requirements for running the tests.\n. Actually, I think this line can be removed. I don't think it has any role when the file is being sourced and is not even an executable, does it?\n. Why shouldn't we favor oh-my-zsh as the default again? It makes sense to have a sane default as a convention and I see oh-my-zsh as a very reliable default for this purpose. Am I missing something?\n. I like the use commands, they sound (and read) much better than the current ones. Can you change your pull request accordingly? Thanks!\n. Thank you! Even more so for adding tests :+1:.\n. Yep, I'm still here.\n{Finished my exams yesterday, so I have some time to do Antigen again :)}\n. Um, either you intended to open this issue on Vundle, or I'm missing something. Could you clarify what exactly the problem is, if you are indeed talking about Antigen?\n. Nice. Just one change. Can we move the apt-get install command also into the shell script and call it 'travis-install.sh' or something? I don't see a reason to have that file hidden.\nThank you.\n. Um, I don't share that sentiment.\n- It is relevant to a developer in that it sets up the OS so that the tests can run. It was relevant to you wasn't it?\n- Is is irrelevant to a user, just as say, requirements.txt is. That doesn't mean we make it hidden.\nBut that's fine, I could merge this and make the change myself, if you are unwilling.\n. > The reason I didn't put it in the sh is because I meant the sh to be as minimal as possible, I only made it because I was having trouble inlining the if\nI realized that :). My intention was so that everything related to install zsh was in one place, whether the yaml config file, or the shell script. And the name to include something indicating that it is responsible for installing zsh.\n\nIt is as relevant as the .travis.yml file, which is hidden\n\nTrue. But only because that's the way of Travis (as far as I know). If it weren't I wouldn't have made it hidden. The way I see it, it is a part of the project and (arguably) not a piece of metadata about the project (like .git for example).\n\nI did not meant to insult or anything. I'd rather discuss the issue and find the best solution.\n\nI am really sorry, my words gave that impression. I only intended to say in a if-you-can't-attend-to-it-immediately kind of manner, so that I can merge this and get zsh5 testing on to Travis sooner.\n. That would be nice, but Travis needs the .travis.yml file in the root of the project.\n. You mean to move everything, not just installing zsh, into a separate script? I don't think that's a good idea. If we could put what we wanted, right inside the yml file, we wouldn't even need the additional shell script.\nActually, come to think of it, may be instead of moving the install command to the shell script, we could just rename the shell script that indicates its intention of adding a PPA, like travis-zsh-ppa.sh or something. The travis-ci.sh doesn't tell what its doing, other than that its something to do with Travis. What say?\n. There seems to be a merge error. There are two install directives in the yaml file. I think you meant to keep one and remove one.\n. Thanks!\n. :cake:\n. I have been delaying the use of anchor links in README because they are not present in the website. I should either create a website that supports it or remove it altogather. I'm not sure how useful it is especially since most of the time it seems to be out of sync from the project's README.\nNonetheless, I've merged this. Thank you for your contribution :)\n. Yeah, I'm not sure doing a checkout master is a good idea. If you want to track the master branch in a submodule, I think git added a -b flag to the submodule command recently. I think that can be used for this purpose. I don't use submodules much so I can't comment.\nThe other change is, as @GUIpsp said, :+1: :)\n. Thank you @czchen. As for the tests, the docs are lacking in terms of how to get started writing tests, so if you can figure it out, please add tests. Otherwise, I'll do it when I get some time (probably late next week).\n. Thank you. I have checked that this test fails without your previous pull request, so, it works.\n. Hello, welcome to Antigen. You can use zsh-completions with the current antigen with\nantigen-bundle zsh-users/zsh-completions src\nThe second argument, src specifies the directory under the repo which contains the plugin. In this case src will be added to your FPATH and the completions work just fine. See the documentation on antigen-bundle command in the README for more information.\n. In the last command you specified, the one that works for you now, change antigen bundle to antigen theme and remove the btype argument and leave the rest. It should work. If not, please report. antigen theme command is almost the same as antigen bundle with a --btype=theme.\nOr as @neoascetic commented, you can use antigen theme https://gist.github.com/3750104.git agnoster.\nI hoped the docs on the theme command were clear on this, but guess not. I'll try and improve them.\n. > Maybe we should really ignore it?\nI suppose so.\n. Merged. Thank you for the PR and thanks for testing this feature out :)\nI'm not sure if we should add a new global called \"chksum\", might conflict with some other scripts or functions in other scripts. We'll see how we can rectify that, but for now, :cake:!\n. Yep, I see this too. Removing the local keyword in the 8th line of the plugin script seems to fix the problem.\nBut, directly sourcing the plugin script (as opposed to calling antigen bundle) doesn't seem to have this problem. I'm not sure what in antigen is causing this, I'll need to look deeper. If anyone has any ideas, please share :)\n. I don't see this issue any more. I think that's because I'm using zsh5 now. Do you still face the problem?\nEdit: Oops! Spoke too soon. I do see it. On it.\n. The reason this happens is because of the local keyword I mentioned in a previous comment. Because the plugin script is source-d within a function, the local variables defined in the script end up being local to that function. This isn't the case when you're using oh-my-zsh directly or when source-ing directly since the local variables there will just be global variables.\nThe fix is to remove the local keyword from the last-working-directory's cache_file variable definition. As far as I know, that keyword there isn't doing anything anyway.\nI'm contemplating adding a fix to the bundle-loading system that modifies the script source to remove these local references before sourcing. Not sure how reliable that'll be.\n. zsh looks for the startup files in $ZDOTDIR if set, otherwise your home directory. I think something in your config is setting that variable to ~/.antigen/repos. Let me know if it is the case. Sorry, I have limited knowledge in prezto, but I'll try to help :)\n. Then perhaps something in your tmux config somewhere is doing it. Sorry, bu\nI don't use tmux nowadays, so I'm a bit out of touch.\n\nShrikant Sharat Kandula\nOn 08-Mar-2014, at 12:00 am, Sean Mackesey notifications@github.com wrote:\nYou are correct-- ZDOTDIR does get set to ~/.antigen/repos. What's strange\nis that this happens only when opening tmux, not when opening a new shell\nwithout tmux.\n\nReply to this email directly or view it on\nGitHubhttps://github.com/zsh-users/antigen/issues/76#issuecomment-37052871\n.\n. Thanks for the patch!\n. Okay, reading the comments on the linked issue, I think I have to clear something first. The theme command's only intended purpose is so you don't have to add a .zsh-theme extension. The theme command adds it automatically, that's the only intended purpose of the command.\nInternally (and externally, to an extent), antigen does not differentiate between themes and bundles. If the pure theme didn't have the .zsh-theme file, then antigen bundle sindresorhus/pure would work just fine (just tested) as it will execute the pure.zsh file which will set the theme.\nI didn't intend to provide a theme command to antigen at first, but then since bundle command executed files with zsh and sh extension, and oh-my-zsh had themes with .zsh-theme extension, I had to create a theme just for dealing with that extension. That's the story of the theme command. In fact I'd go so far as to say that pure was right in not trying to add a .zsh-theme file. It aligns with antigen's philosophy, from the readme,\n\nThere are lots of plugins out there in the wild and people are writing zsh utilities as small scripts all the time. Antigen is compatible with all of them. The plugins and scripts don't need any special handling to be compatible with antigen.\n\nAnyway, since pure now has a .zsh-theme file, the antigen theme command works too. So, currently as it stands, both the following work correctly,\nantigen bundle sindresorhus/pure\nantigen theme sindresorhus/pure pure\nand do the exact same thing. So, in my opinion, adding a --no-ext to antigen theme is a silly way of just saying antigen bundle.\nI hope that makes some things clear. I'll likely link this issue on the readme page. Feel free to share with the pure project's author, if need be.\nIf this clears things up, let's close the issue. Thanks.\n. No problem. True, I should make this clear in the readme. Will update it.\nNot sure if the .zsh-theme file should be removed from pure though as I see the installation instructions for oh-my-zsh also use it. It will also have to be updated, along with the antigen's instructions, if the .zsh-theme file is removed.\n. I think you forgot to install powerline. I believe its pip install powerline (or pip install --user powerline).\nLet me know if that solves the problem.\n. Hi,\nThank you for your interest in antigen. I have a few changes to make in the\nreadme before I can declare a 1.0, and I'm currently on a vacation. I'll be\nback by the end of this month and will publish a v1.0. I'll see if I can\nget it done before that, but I can't promise anything.\n\nShrikant Sharat Kandula, on his iPad.\nOn 14-Feb-2014, at 5:38 pm, Michael Fladischer notifications@github.com\nwrote:\nAre there any plans to publish a stable release? I'd like to provide\nantigen as a Debian package so people can easily install it and a release\nor a tag would make packaging a lot easier.\n\nReply to this email directly or view it on\nGitHubhttps://github.com/zsh-users/antigen/issues/80\n.\n. Sorry, forgot about this one. I have just pushed a v1 tag to the repo. Let me know if you need anything else.\nThank you.\n. Awesome! Any chance this will make it to Ubuntu in the future? I'm ignorant about the process that happens :)\n. Awesome. Thank you for the details. Really looking forward to seeing it in the repos :).\n. Thanks :)\n. I like a catalog site with popular plugins and themes but I'm not very comfortable with sending data up. Personally, if antigen did that, I wouldn't use antigen.\nI doubt it but I may be alone in thinking that. If there are people interested in a catalog site with stats built on anonymous usage data, we could add it as a strictly opt-in feature.\n. I created the \"In the wild\" wiki page for the purpose that new comers can\ngo look at some existing configurations and find some interesting plugins.\nBut, not a lot of people contributed to it.\nI suppose this is a good idea. I'd imagine the model might be something\nlike Sublime Text's package control site https://sublime.wbond.net/ which\nlists the popular packages.\nThe plan sounds good. Any chance this can work out as an antigen plugin, a\nbundle in itself? In that case, opting-in would mean adding that bundle to\nyour zshrc. Not sure if that's a good idea, if at all possible.\nI'm a bit packed right now though, might be a month before I can spare time\non this.\n\n:shrikant-sharat (m +91 98674 888_42_)\nOn Wed, Apr 16, 2014 at 10:46 PM, Simon Weil notifications@github.comwrote:\n\nSure, I too mean opt-in only and really anonymous.\nThe thing is that antigen is so good that it works without any main\nrepository - which is great, the only thing is that for newbies to it (like\nme) - it's being at lose as to where and how to find plugins and themes...\nTherefore a simple anonymous stat's reporting can gain for the entire\ncommunity and make antigen more usable and popular which I think it\ndeserves.\nAnother thing is that it's becoming quite popular to collect anonymous\ndata for software, I can tell you of multiple examples (wordpress-seo\nplugin, ungit, google chrome, and many many more).\nHow about starting with a simple plan:\n1. On update and install request to collect anonymous usage data (with an\nexplanation).\n2. For opted in users, send data about the plugins, themes and framework\nthey use.\n3. Set up a simple site and have the code for the site OS so no one has\ndoubts about the purity of our intentions.\nWhat do you think?\n\nReply to this email directly or view it on GitHubhttps://github.com/zsh-users/antigen/issues/82#issuecomment-40626091\n.\n. @DArtagan, good point. I like the idea of that better than sending anonymous stats from within antigen. If not a website like vimawesome.com, we could at least curate antigen users' dotfiles and put up the aggregate plugin uses on a wiki page here on github, at least as a proof of concept.\n\nI'll see how feasible that is when I get some time. If anyone has any ideas, share away.\n. I see that the project has been all but abandoned and looks like didn't much gain momentum within the community. As I don't see much interest in this within the community (and I myself am skeptical about this), I'm closing it.\n. Great start. I'm not sure how welcoming haskell will be, but, we'll see. Just a few of tiny suggestions here,\n- Since you are using a full-fledged programming language for bundle configuration, why not exploit it? Why not\nhaskell\nbundles = map bundle\n  [ \"Tarrasch/zsh-functional\"\n  , \"Tarrasch/zsh-bd\"\n  , \"zsh-users/zsh-syntax-highlighting\"\n  , \"zsh-users/zsh-history-substring-search\"\n  -- Add your plugins here\n  ]\n- Instead of telling users to run antigen-hs-compile everytime they change their configuration, try detecting the change in configuration (mtime/hashing?) and trigger antigen-hs-compile when a new shell is opened. Reduces the barrier to entry a bit.\nI'm really interested in seeing where this goes. Good luck :)\n. I went over the code and it appears like the performance improvement isn't because Haskell is in the mix (as I've imagined at first), but because of a generated script that directly sources the plugins. Now I'm curious to your choice of Haskell for this task. Arguably, a shell-function would've been more approachable.\nAlso, this method of sourcing plugins should fix #75.\n. > thanks for your kind words and taking time to discuss this and looking through the code\nAntigen inspired alternative and haskell? How could I not look at the code :)\n\nDo you know a good way to express this fact in words?\n\nHow about \"The performance improvement is achieved by generating a shell script consisting of commands to source plugin scripts, and running it. The script contains full absolute paths of these plugins scripts unlike antigen, where the paths are constructed every time a new shell is opened.\"\n\nI choose Haskell since I'm comfortable in it\n\nI know that feeling :)\n\nI like to be aware of what is going on\n\nSure, but I have a feeling people will ask for a command like antigen-hs-compile-if-needed to be added just after sourcing init.zsh. We'll see.\n\nadd bundles that are not from github\n\nGood point. As I said, you gave a full-blown programming language. And a very powerful one at that. No one's stopping users from having two lists built with map bundle and map bitbucket and them ++-ing them together ;)\n. This is weird. Did you start noticing this after starting to use antigen? Did you try running a bare zsh with just those two entries added to $fpath and see if that works there?\nI have the site-functions folder empty and the zsh-completions folder doesn't exist.\nSorry I couldn't be of much help, but I'd try stripping each layer in starting up zsh (antigen, oh-my-zsh, plugins etc.) to isolate the problem.\n. Done. Thanks for the fix.\n. Are you sure nothing is overwriting your prompt strings after loading the theme? Can I see your .zshrc file somewhere online?\n. No problem. Glad you got it resolved.\n\nShrikant Sharat Kandula\nOn 15-Jul-2014, at 4:50 am, eggcaker notifications@github.com wrote:\nsorry , my bad , just double checked my all configurations file, found one\nfile overwrite the PS1.\nit's works after remove that.\n\nReply to this email directly or view it on GitHub\nhttps://github.com/zsh-users/antigen/issues/87#issuecomment-48972716.\n. Thanks for the praise. I've never used the random theme feature, honestly, I completely forgot about it. I don't think its in the spirit of Antigen to support random theme functionality out of the box. This is best addressed as an external plugin, loaded with antigen bundle.\nOf course, if such a thing exists, we could list it as a tip in the README perhaps.\n. That's odd. Things like the ls and file commands do have local file paths completion at my end. Could you test to find if its a particular plugin that's causing this? Also, is this issue present when you were not using antigen?\n. Antigen itself doesn't provide any shortcuts specific to help with keybinding, but perhaps there's an extension that helps with this? Sorry, I'm not aware of one.\n. Woah! I can't believe this was hiding for so long. Good find. Thank you!\n. Nice idea. But, let's have the -f check as the first if clause. The conditions in the remaining if/elif statements assume $location is a directory so it makes sense to have the -f check in the first if statement.\n. Also, could you update the README to reflect this change? (or I'll do it, no issues). Thanks.\n. Nice. Thanks!\n. It appears this issue is not seen anymore so I'm closing this issue. Please open a new one if it resurfaces. Thank you!\n. Thank you and sorry for the delay :)\n. Implementation looks good to me, but should we add an ANTIGEN_ prefix to the variable name? It will be both explicit in intent and will avoid potential future conflicts with other projects.\nThank you for the PR and sorry for the delay :)\n. I don't have access to a mac but it appears from the comments above that it has been tested with positive results. So, I'm merging this in.\nThank you and sorry for the delay :)\n. Sorry for the delay in responding. I'm not sure I understand what the problem is here. Antigen doesn't rely on any installation script, nothing that I'm aware of anyway.\n. Thank you people! Thank you so much @desyncr, any help is appreciated :)\n. Hey @nicoulaj, can you add @desyncr to the @zsh-users group so he has write permissions to the antigen project please? If you're not the right person for this, please advise. Thank you.\n. There is no copying done. I think you confused git clone with copying. If you don't want your local git repo to be cloned, use the --no-local-clone option to the antigen bundle command. See the README for details.\n. Thank you and sorry for the delay :)\n. Done :)\n. Thank you!\n. Thank you!\n. Nice find. As @desyncr pointed out, the gh-pages branch content will be regenerated. There's a few other changes to the README file, they'll all go in along with the URL fix once I regenerate the website content.\nThank you and sorry for the delay :)\n. Thank you! I was not aware of the SHORT_LOOPS option. Good to know.\n. Thank you :)\n. I suppose removing the link to my fork is a good step. But I'm not sure if we should link to the original repo or @Tarrasch's fork. What do you think we should do @Tarrasch?\n. Cool. Lets do that.\n@bb010g, I just noticed that the changes you made are to the gh-pages branch. The contents of that branch will be overwritten with the README file. I'm closing this pull request and make the change to the README file.\nThank you!\n. Relevant commit: ad8cfa9\n. Thank you! Glad you like it :)\n. ",
    "twe4ked": "Symlinks sound like a good idea! Cheers.\n. Cool looks good, I'll try it out later.\n. I'm having the same issue, @sharat87 if you need any more information or want me to try something let me know. I had a go at fixing it myself but I'm not sure what's going on.\n. Thanks @sharat87, all working again now!\n. ",
    "charlietanksley": "Sorry I dropped out on this.\nI like the switch a lot.  Thanks! I'll update my version and turn it back on. :)\nI tried zundle for a bit (I just played with it--I was still using bash), but really didn't like the idea of having to manually create repositories for any plugin I wanted from, e.g., oh-my-zsh.  I was actually thinking about trying to implement some automatic workaround, but I'm super thankful you already did it (mine would've been weak ;)).\n. This is a great answer.  Thanks.\nJust to be clear, here's how I understand (part of) what you said: antigen will work to install non-oh-my-zsh stuff, but only if you point it at a directory.  So if I did\nantigen-bundle someuser/somerepo.git path/to/directory\nThat would install whatever is at path/to/directory.  Is that right?  Will it work if I just do \nantigen-bundle zsh-users/zsh-completions.git\n(Without any directory, just wanting to install the whole thing.)\nI hate having multiple git repositories I have to remember to keep up to date and would like to be able to do all this through antigen, but I'm not sure if that is what antigen is for.\n. ",
    "ivoarch": "I follow any changes and Is the last version of antigen,\nand use the antigen update command.  \n[quote\n Also, for the future, if you face anything like this after an antigen upgrade, just deleting the .antigen directory should get your shell back to sanity ;) /quote]\nOf course, i know about this, but it seemed strange. \nYou use zsh-complications, any problems with the same?\nThanks! \n. Ok thanks!\n. Ok, the problem is the space, in the  EOF\nantigen-bundles  <<EOF\ngit\nEOF  \nI have solved, so \nantigen-bundles  <<EOF\ngit\nEOF   \nEdit\nEvery space is: \nzsh: can't open input file: /home/ivo/.zsh/custom/tools/check_for_upgrade.sh\n/home/ivo/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh///oh-my-zsh.sh:14: no\nmatches found: /home/ivo/.zsh/custom/lib/*.zsh \nzsh: can't open input file: /home/ivo/.zsh/custom/tools/check_for_upgrade.sh\n/home/ivo/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh///oh-my-zsh.sh:14: no\nmatches found: /home/ivo/.zsh/custom/lib/*.zsh\nzsh: can't open input file: /home/ivo/.zsh/custom/tools/check_for_upgrade.sh\n/home/ivo/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh///oh-my-zsh.sh:14: no \nmatches found: /home/ivo/.zsh/custom/lib/*.zsh \n$ cat .zshrc \nantigen-bundles <<EOF \narchlinux\ngit\nruby\nextract\nEOF\n. The problem was that antigen  ignore only lines starting with a '#' and not 'blank' lines.\nOk, i use grep with the -F flag  and  resolved the problem  https://gist.github.com/2915737\nEdit \nNow not downloading the oh-my-zsh/plugins\n. ",
    "neoascetic": "Oh, nevermind. I just need more time to sleep :)\n. Works like I expected, thanks\n. Is this really needed? Template like below isn't too hard to understanding, is it?\n``` sh\nspecify here oh-my-zsh's fork which you use\nANTIGEN_DEFAULT_REPO_URL=\"git://github.com/robbyrussell/oh-my-zsh\"\nsettings of oh-my-zsh's plugins\nzstyle :omz:plugins:ssh-agent agent-forwarding on\nzstyle :omz:plugins:ssh-agent identities id_rsa other_id_rsa\npath to antigen script\nsource \"$HOME/.zsh/antigen/antigen.zsh\"\nantigen-lib\nantigen-bundles <<EOF\nlist of plugins from oh-my-zsh's \"plugins\" variable, one per line\ngit\ncommand-not-found\nEOF\nantigen-apply\nname of theme of choice\nantigen-theme robbyrussell\ncustomize your needs\n``\n. Ok, works in most cases, but fails whenANTIGEN_DEFAULT_REPO_URLdoesn't contain.git` at the end.\nantigen-cleanup still can't remove directories. Fastfix such as adding - as argument to -antigen-get-clone-url at the remove statement (rm -rf \"$(-antigen-get-clone-dir $line -)\") make it works well. Or we can make second argument of -antigen-get-clone-dir not mandatory (using something like local branch=\"$2\" || \"-\").\nAlso, how about simple notification when removing was unsuccessful? Something like:\nsh\nlocal dir=\"$(-antigen-get-clone-dir $line -)\"\nrm -rf \"$dir\"\nif [[ -d $dir ]]; do\n  echo \"can not remove directory\"\nelse\n  echo \"done\"\n. The main reason why antigen use filenames like this is \"legacy\" in some excent support for oh-my-zsh's plugins\n. :+1:\n. See #6\n. This works well for me: antigen-theme git://gist.github.com/4071928.git bira_venv\n. #6 #64\n@sharat87 request for ignoring \"repos\" is pretty common. Maybe we should really ignore it?\n. If you use brew (which, probably, use most of users of zsh and antigen), you always can install md5sha1sum which provides md5sum executable.\nAlso, wouldn't it be better to detect which executable run using whence md5sum || whence md5?\n. ",
    "Tarrasch": "Sorry for using eval, the reason was that I spent an hour trying \"random\" ways to get this to work, and thought that if I use eval and pass everything to it it would work. I really did a great number of miscalculations because I now see that eval is unnecessary here. \nHmmm, as for altenative names to Git, well I can first say that it came from the fugitive-plugins name called Git which basically is git --git-dir=.... But that Git is just called Git for vim conventions. Do you know of any more descriptive name?\nOn the other hand maybe Git isn't so bad? We are basically just using git as the normal command line tool, only that it works even though we aren't in the repo folder?\n. Oh, two other advantages:\n1: Filenames with two dots are a bit ugly\n  2: More importantly, the plugin authors have to think when naming their loading script. The point of frameworks and tools like these should be that one can just adopt to the standard without thinking and stuff will just work. The The plugin authors are confident that the antigen authors have thought through the naming conventions, so they don't have to.\n. Ok, personally I (as a plugin writer) would prefer that antigen told me \"Do it exactly this way and it will work\". I'll just do it and I know I'm following a convention that the antigen authors have thought hard about.\nIf antigen tells me \"Do it in one of these 100 ways, and it will just work\", I have to consult my own judgement 100 times to determine which style I like best. More likely I will even browse a lot of other antigen-compliant projects to see if developers are currently adopting one of the ways more than the other.\nI'm saying that the point of a framework is not to provide the flexibility to use any convention. No, it should be strict in naming (as rails) so the developer don't need to think when naming their files. And hey, we are only talking about one file.\n\nAt the same time I think I understand why you want antigen to be accepting different ways. Shells have existed for decades before we were born, and  zsh plugins and omz have been on github long before antigen too, so antigen shouldn't come and tell everyone to switch standard. But I really think antigen is respected enough to be forming the plugins file structures. Even if a plugin doesn't follow a antigen structure it takes only 5 minutes for any developer to fork the project and pull request a patch that forms the project to follow an antigen standard.\nI really like antigen since it not only solves the ease-of-install problem that pathogen and vundle does, it also resolves that omz is too centralized. Antigen will be a respected project and people wouldn't mind renaming a file to be part of creating a consistent flora of zsh plugins.\n. I would be happy if the documentation said something like:\n\nAntigen will autoload your library by sourcing the file *.plugin.zsh, for backwards compatibility and for easier adoptability, antigen supports these other formats too: ...\n\nOr even better, let plugin.zsh be the standard file and *.plugin.zsh be a temporarily supported file format. My hope is that in some time everyone have switched to the recommended file structure, and then we can safely drop support for the other 100 methods. Keeping both antigen simple and the plugins consistent.\nAlso, consider if somebody else wants to write something like antigen, they would really appreciate if all existing plugins looks consistent so their sourcing logic would just be source_plugin() { . plugin.zsh }.\n. > Again, if any recommendation is to be made, it will be something currently in use by plugin authors. Unless there is a real benefit with a new format, not just cosmetic.\n1. Cosmetic is a benefit\n2. Again, mainly I want antigen to be strongly imposing a way, if you don't like imposing a new format like plugin.zsh, can you consider imposing a existing one like *.plugin.zsh? The goal being to deprecating the others formats so we will get consistency in the long run?\n\nI don't want plugin authors to switch their plugin format just becouse one framework wants them to. Instead I'd prefer they made the plugin more awesome :)\n\nThat's a valid point, but I personally think consistency should go first, again, it's no work at all for the open minded and fast paced github community. But I do respect your point.\n\nAs for making it easy for new frameworks, it will actually make it more work, to support this new plugin.zsh format.\n\nWhat? Simply I'm stating that if everyone uses the plugin.zsh format, then the code to load any arbitrary plugin would be to just do source plugin.zsh. It definitely can't be simpler, but maybe you meant that not everyone will adapt that standard, and we will end up with this. However I believe that the community is way more adoptable than you think, just look how everyone overnight started to use the build status image on the top of their readmes.\nNote that recommending the *.plugin.zsh will not create a new standard and it will make antigen help the community to be striving for consistency and new frameworks will still be able to do source *.plugin.zsh\n\nAlso, I really appreciate that you take your time to discuss this. You also seem to understand the points I make, so I think this is really a healthy and productive discussion. If anybody else have any opinions please comment.\n. > > Cosmetic is a benefit\n\nNot if it requires all plugin authors to rename their plugin files when everything is already working just fine.\n\nNah, the fact is without conditions actually, it might not be worth the time to switch format. But cosmetics is a benefit in the end no matter what.\nAnyway, you definitely don't like the plugin.zsh pattern, look at my other proposal then: \n\nAn alternative idea is to support *plugin.zsh rather than *.plugin.zsh. We'll then see if people start to use the one or the other. While it'll be a tiny bit more inconsistent, you can always do source *plugin.zsh to load a project.\nHowever, let's separate the cosmetic issue (this ticket) from the issue that the documentation should recommend one way, be it *.plugin.zsh or not. I'll create another ticket for that right away.\n. Lets close this then.\n. I have for some time thought on something just like this. I like the names antigen-snapshot and antigen-restore. I definitely think this is a good next step for antigen, since what I like with pathogen (compared to vundle) is that with pathogen+gitmodules you commit your submodule hashes when you know that it will work because you have used it. I haven't tried Vundle yet, but afaik it's like antigen now. You don't have information about the versions of the submodules across your dotfiles repository.\nAn idea I had was to let antigen-snapshot not take any arguments. It could create something like the .gitmodules file and let antigen-snapshot read from that standard file and checkout those revisions. But there is really no \"default\" place to put such a file (I guess everyone doesn't have a dotfiles repository). So yea, I guess one should do as you said, that is to just provide the desired snapshot path as argument. Then the user can then decide weather they wanna check it in or just put it in a gist somewhere.\nSo yea, I agree with everything you said, it makes sense and I like the naming.\n. As for antigen-revert, I think antigen-revert could be a one-liner provided we have  antigen-{snapshot,restore}. We can let antigen-update just internally do a antigen-snapshot on some file and let antigen-revert be an alias for antigen-restore that-file. Would this work? If so it could save us some code duplication.\n. Whoups, just needed to update antigen :). Sorry for spam\n. First, thanks for your kind words and taking time to discuss this and looking through the code! :)\nYes, the speed-up is not from Haskell as you say but from the fact that it statically generates the script for you. Do you know a good way to express this fact in words?\nAs for Haskell, the big downside with Haskell is that users have to install it, and it can be particularly annoying if you are on a remote machine. I choose Haskell since I'm comfortable in it and I wanted to try out the Shelly library. I also find typed programs more maintainable. Shelly will also print out a stack-trace-ish if some shell command fails, which is useful if you run into problems with antigen-hs.\nSure, I could do some sha1 checking of the MyAntigen.hs file. I'm a tiny bit hesitant because I like to be aware of what is going on and let the programmer explicitly do things. On the other hand both antigen and NeoBundle just goes ahead and installs bundles (and I do appreciate the convenience). NeoBundle prompts though, maybe a [Y/n] prompt is the best option?\nI like your map idea! I'm just worried that later you want to add bundles that are not from github:\nhaskell\nbundles =\n  [ bundle \"Tarrasch/zsh-functional\"\n  , bundle \"Tarrasch/zsh-bd\"\n  , bitbucket \"zsh-users/zsh-history-substring-search\"\n  -- Add your plugins here\n  ]\nAlso, the explicit bundles gives it bit more of a DSL feel.\n. Thanks :)\n. I think it makes more sense pointing to the zsh-optimized version. Mine isn't really a fork but a rewrite. Now mostly contributed to by @blueyed.\nSo yes, please fork to Tarrasch/zsh-autoenv I think. :)\n. ",
    "travisbot": "This pull request fails (merged 813c8722 into 00375bcc).\n. This pull request fails (merged f56c9440 into 9948f3ed).\n. ",
    "GUIpsp": "No problem. Silly CI bot.\n. This should work now\n. The build fails now aren't related to travis, but to the test themselves\n. You learn something new every day. :-P\n. We finally have a green badge! \\o/\n. Raw zsh:\n\nzsh  0.08s user 0.03s system 70% cpu 0.153 total\n\nAntigen(no plugins):\n\nzsh  0.15s user 0.03s system 74% cpu 0.248 total\n\nAntigen(no plugins+lib(with antigen-apply)):\n\nzsh  0.23s user 0.17s system 72% cpu 0.552 total\n\nAntigen(no plugins+lib(with antigen-apply)+theme):\n\nzsh  0.24s user 0.20s system 63% cpu 0.693 total\n\nAntigen(My zshrc):\n\nzsh  1.56s user 0.99s system 68% cpu 3.707 total\n. I don't think the problem is with antigen, but with the amount of plugins you use\n. Just zsh's builtin time\n. Just append exit to the .zshrc and run time zsh\n. https://github.com/XsErG/zsh-themes/blob/master/themes/lazyuser.zsh-theme\nI suggest searching in the root and in the \"themes\" directory, perhaps caching it\n. Themes shouldn't have to patch anything\n. Omitting the extension is a good idea\nWe should however watch out to keep it compatible with the canonical repo\n. See #31\n. Easiest way to do this IMHO is a newline separated pair of the location of origin and the hash\n. @neersighted \n. I don't think zsh plugins can be compiled\n. @rummik Same here :+1:\n. You also should update the docs and the tests\n. @sharat87 \n. That file is hidden because it is only relevant to travis.\n\nAny other user/developer doesn't need/want to care about it.\n. > Can we move the apt-get install command\nThe reason I didn't put it in the sh is because I meant the sh to be as minimal as possible, I only made it because I was having trouble inlining the if\n\nIt is relevant to a developer in that it sets up the OS so that the tests can run. It was relevant to you wasn't it?\n\nIt is as relevant as the .travis.yml file, which is hidden\n\nBut that's fine, I could merge this and make the change myself, if you are unwilling.\n\nI did not meant to insult or anything. I'd rather discuss the issue and find the best solution.\n. > I realized that :). My intention was so that everything related to install zsh was in one place, whether the yaml config file, or the shell script. And the name to include something indicating that it is responsible for installing zsh.\n\nTrue. But only because that's the way of Travis (as far as I know). If it weren't I wouldn't have made it hidden. The way I see it, it is a part of the project and (arguably) not a piece of metadata about the project (like .git for example).\n\nThen we probably should get everything CI related in separate files out of the root dir\n. I mean, instead of having things in the yml, we put them outside and make it run them\n. Done\n. Fixed it\n. I'd rather have the whole the section on the antigen theme command further down. part linkified\nOther than that, :+1: \n. You should probably add some tests for this.\nAlso, you assume the main branch is master. \nOther than that, :+1:\n. hint:\n[guipsp@localhost ~]$ command -v md5sum\n/usr/bin/md5sum\n[guipsp@localhost ~]$ echo $?\n0\n[guipsp@localhost ~]$ command -v md5\n[guipsp@localhost ~]$ echo $?\n1\n(command is also posix)\n. Go the extra mile and add -L\n. ",
    "sheerun": "That's an old issue :)\n. @neersighted What's the status? :)\n. init.zsh should be the only sourced file in case of prezto. that's what I meant by the integration.\n. I guess this is closed?\n. I think it should be purged, because it don't introduce any value. The instructions and commands it describes are documented afterwards, it was hard to me to follow and understand them.\nIt asks for curling antigen.zsh to non-known directory, just \"Get and load antigen.\".. And afterwards you need to remove this file and install it the proper way, that is git clone.\nWhat exactly means antigen-theme XsErG/zsh-themes themes/lazyuser? Why there is no antigen-apply? What does antigen-lib? The descriptions, if any are extremely vague.\nDon't get me wrong, but also the language in which it is written is pretty hard-to-follow and annoying too :)\nThe usage section is well written and understandable for me. I think there shouldn't be any \"fancy introduction\", especially with code. The first paragraph listing features is more than enough!\n. Getting started section could be useful, but that's probably another issue. I think currently it's better to remove this section than to leave it.\n. oh, ok\n. It is also misleading, if you didn't read documentation. antigen oh-my-zsh explains itself. Oh-my-zsh is on top now, but it's not perfect and may be suppressed by other library in future.\nThe only better option would be antigen use oh-my-zsh and antigen use prezto, what would also explain short bundle names in antigen bundle.\n. sure!\n. good to go\n. I attach here repo with similar problem. Try to call git fetch --depth=10, it fails. Then try git fetch --depth=20, it succeeds. It was cloned with NeoBundle. About 10% of cloned packages have this problem. http://www.speedyshare.com/n3MqB/ack.tar.gz\nThis fails:\ngit clone https://github.com/mileszs/ack.vim --depth=1 && cd ack.vim && \n  git fetch --depth=10 && git fetch --depth=10\nThis succeeds:\ngit clone https://github.com/mileszs/apidock.vim.git --depth=1 && cd apidock.vim && \n  git fetch --depth=10 && git fetch --depth=10\n. Oh my goodness.. sorry it's NeoBundle :)\n. ",
    "desyncr": "Fixed at https://github.com/zsh-users/antigen/pull/155. Thanks for reporting.\n. @sheerun Thanks for the interest in improving Antigen. If you have any documentation on how to achieve your proposed changed we may be able to implement them. For the time being I'm closing this as it is stuck.\n. No updates since 2014. I'm closing this for now.\n. If anybody is interested in working on this feature please re-open this issue. I'm closing this for the moment.\n. No update since 2014. I'm closing this for now.\n. It seems as dirname is being passed an option flag, something like -s or similar. What's the value of \"$0\"? It should be the antigen.zsh path.\n. Looks good to me :+1: \n. If the user hasn't git installed then selfupdate will fail with something like 'git: command not found' or similar.\nNow that scenario is quite rare, I think (not having git installed), but it definitely should check it before.\nI don't think _ANTIGEN_INSTALL_DIR needs to be made global as it's now it's accessible by all antigen-* functions.\n. As I mentioned it here the variable is local to the antigen command, that's why you can't access it from the command line.\n. Solved with #98. Thanks for reporting.\n. Tested and seems to work just fine. :+1: \n. I don't think there are repo collaborators who can merge PRs and @sharat87 has been away for a while.\n. We may have to update the README.md or wiki to document the new configuration variable.\nThanks @wonmin82 for these changes.\n. The selfupdate command basically executes a git pull on $_ANTIGEN_INSTALL_DIR. What's the value of that environment variable? Check that it matches the path where you cloned antigen.\nHope that helps!\n. Of course, as $_ANTIGEN_INSTALL_DIR is a local variable on the antigen command. Thought you could debug antigen.zsh and check there the value of this variable.\n. It looks as if $_ANTIGEN_INSTALL_DIR  was empty. Do this: Add the following lines to antigen.zsh:\necho $0\necho $(dirname \"$0\")\nAfter this line. In my set up it prints:\n/home/<username>/.antigen//antigen.zsh\n/home/<username>/.antigen\nAre you using tmux? It some times messes up with env variables.\n. Any update on this @JonathanReeve @meling ?\n. I seems I can't reproduce this. If somebody can reproduce it consistently feel free to re-open it.\n. I tried it but ran into the following issue:\n$ sudo make install PYENV=\nmkdir -p /usr/local/share && cp /antigen.zsh /usr/local/share/antigen.zsh\ncp: cannot stat `/antigen.zsh': No such file or directory\nmake: *** [install] Error 1\nBasically it can't access the ${PWD} environment variable in the install task. It works without sudo, though.\nI looked around and found environment variables are not recommended. Also looked at a bunch of Makefile in other projects and none use PWD.\nCan PWD use be left out and use ./ instead?:\n```\ntests:\n        ${PYENV} ZDOTDIR=\"tests\" cram ${CRAM_OPTS} --shell=zsh ${TESTS}\ninstall:\n        mkdir -p ${PREFIX}/share && cp antigen.zsh ${PREFIX}/share/antigen.zsh\n```\nWhy you think it fails when running with sudo?\n. :+1: Works alright here. Should antigen.zsh be executable (u+x), though?\n. @tubbo You are right about that :-) @sharat87 Could you take a look here?\n. No updates since 2014. I'm closing this for now. @Gaffney feel free to re-open if you have anything to comment on.\n. Count on me to keep the issue tracker active. I don't know much of antigen code base so I can't be that helpful in that regard but I'll keep an eye and try to help.\n. Thanks a lot! @sharat87 @nicoulaj \n. I'm closing this in favor of https://github.com/zsh-users/antigen/issues/198\n. This is a know issue being take care of at #119 #132 #141. I'm closing this.\n. Antigen is tested against zsh 4.3 and 5.0. Should work on  zsh >= 4.3,  5.x\n. I belive this is the issue: https://github.com/sorin-ionescu/prezto/pull/713. https://github.com/sorin-ionescu/prezto/blob/master/modules/prompt/init.zsh#L12\n. loc is an argument that defaults to \"/\" and it can naturally be overwritten. So, removing it will break things.\nIf you feel the need to remove the extra slash then you should check if the value is \"/\" and if it isn't then append it, otherwise do not:\n```\n if [ \"$loc\" == \"/\" ]; then\n     loc=\"\"\n fi\nif $make_local_clone; then\n     location=\"$(-antigen-get-clone-dir \"$url\")/$loc\"\n else\n     location=\"$url/$loc\"\n fi\n```\n. Oh, yeah, my bad. For some reason I didn't saw line 268 :+1: \n. Thank you for using and trying to improve Antigen.\nAs I understand zsh follows a convention for loading autocompletions, which is prefixing your autocompletion definitions with an underscore. This is also advised in the installation instructions for hub.\nGiven the use case is too specific we'd rather not add more complexity to Antigen.\n. I don't think antigen bundle command supports a single repo with multiple plugins. Dunno if, as with themes, you can specify a path altogether with a repo and branch.\n. This issue is old. I'm closing this for now.\nIf you have a suggestion on how to achieve a better documentation on your particular issue feel free to re-open and share your ideas.\n. A tty won't be allocated for antigen bundles because it's reading from stdin. You have to use antigen bundle for gpg-agent plugin.\nTo clarify, this is not an antigen issue. It's a common behavior for most, if not all, shells.\n. Relevant changes for version v1.1.0. Performance branch for preview desyncr:feature/bundle-cache.\n. Following issue at https://github.com/zsh-users/antigen/issues/122.\n. :+1: Thanks. It works just fine.\n. BTW I think the github pages branch content is generated, so I don't know if the pull will be merged or the content re-generated.\n. :+1: Would love to have a faster start up time.\n. Work in being done at #129 #132 #141. I'm closing this for now.\n. Fix will be available in 1.2.1 release. Currently in next/develop.\n. Works for me with lastest master 7860ce7aecdbed8fd8ff75472ac59c52c2ac9a7e . Not sure which antigen version you're using.\n```\n$ ls ~/.antigen/repos\nhttps-COLON--SLASH--SLASH-github.com-SLASH-rupa-SLASH-z.git\n$ antigen cleanup\nYou have clones for the following repos, but are not used.\n  https://github.com/rupa/z.git\nDelete them all? [y/N] y\nDeleting clone for https://github.com/rupa/z.git... done.\n$ ls ~/.antigen/repos\n```\n. mmm interesting. May be antigen should use \\ls to avoid aliasing problems.\n. @michel-slm Made a quick PR addressing this issue.\nAnybody feel free to test it out and give some feedback.\n. Works perfectly. :+1: \nNot sure if it make sense to merge it though, as it doesn't seem to serve the same purpose the 'list' command was thought for (ie, it's missing all the described columns).\nMay be a 'path' argument and a second 'raw' argument to strip the extra columns?:\n```\nantigen list # => '   '\nantigen list --raw # => ''\nantigen list --path # => '   '\nantigen list --path --raw # => ''\n```\nWhat you think? Makes any sense to you?\n. Good idea to move it into a plugin. Wish there were a way to extend antigen without having to hack into antigen itself, some thing such as extensions or similar. Something to think about.\n. Thanks for the work. So far I just saw a little thing that I commented above other than that :+1: \n. Works smoothly :+1: I don't think there is any missing argument so it's all OK. Thanks again for the work!\n. Merged at https://github.com/zsh-users/antigen/pull/155. Thanks @knakayama \n. ```\n$ time zsh\nzsh  0.30s user 0.64s system 121% cpu 0.773 total\n$ export _ANTIGEN_CACHE_ENABLED=true\n$ time zsh\nzsh  0.30s user 0.71s system 124% cpu 0.806 total\n$ time zsh\nzsh  0.12s user 0.20s system 115% cpu 0.276 total\n```\n\n. ```\n$ export _ANTIGEN_CACHE_ENABLED=false\n$ time zsh\nzsh  0.20s user 0.63s system 127% cpu 0.655 total\n$ export _ANTIGEN_CACHE_ENABLED=true\n$ time zsh\nzsh  0.32s user 0.87s system 126% cpu 0.941 total\n$ time zsh\nzsh  0.10s user 0.12s system 111% cpu 0.202 total\n```\n. @forivall Regarding 1. Can you specify the scenarios where this behavior is shown, as so to add tests.\nRegarding 2. This behavior is shown in -antigen-load method. Not the cache implementation. Raise an issue there and changes would be backported.\nAlso use gist next time as to keep the thread readable.\n. I'll not addressing the sed issue as it's platform specific. Thanks for using gist.\n. @forivall What about this 'chmod' thing? Plus if there is a chance to remove the need for 'sed', better off.\n. @HeroCC It may need some code clean up and styling but functionally is working.\nIf anybody has the time and energy just checkout this branch and test it out locally. All feedback is appreciated.\n. @HeroCC Amazing. Thank you. It needs some heavy code clean-up before merge, though.\n. @HeroCC Yeah, this is because once the cache is created you have to manually clear the cache ('antigen cache-rebuild'). Which is an annoyance of course.\nReason for this is I can't properly \"know\" when to rebuild the cache if the user changes his bundles.\nOne option would be to hash and validate the bundles.\nEdit: Any suggestion how to better approach this is also welcome.\n. Thanks I'll take a look. Any custom config?\n. I know where the problem is at (introduced in this refactor). I'll take a look again tonight.\nTime to add some automated tests, it seems.\nThanks again for taking a look at this.\n. Fails on Mac OS X Yosemite:\nsh\nsed: 1: \"/${0/i__ZCACHE_FILE_PAT ...\": command i expects \\ followed by text\nsed: 1: \"/$0/i__ZCACHE_FILE_PATH ...\": command i expects \\ followed by text\nSee http://unix.stackexchange.com/questions/13711/differences-between-sed-on-mac-osx-and-other-standard-sed\n. 0.07s :)\n``` sh\n\u00bb time _ANTIGEN_PERF_ENABLED=true _ANTIGEN_CACHE_ENABLED=false _ANTIGEN_INIT_ENABLED=false zsh\n_ANTIGEN_PERF_ENABLED=true _ANTIGEN_CACHE_ENABLED=false _ANTIGEN_INIT_ENABLED=false 0.35s user 0.33s system 96% cpu 0.703 total\n\u00bb time _ANTIGEN_PERF_ENABLED=true _ANTIGEN_CACHE_ENABLED=true _ANTIGEN_INIT_ENABLED=true zsh\n_ANTIGEN_PERF_ENABLED=true _ANTIGEN_CACHE_ENABLED=true _ANTIGEN_INIT_ENABLED=true 0.07s user 0.07s system 101% cpu 0.136 total\n\u00bb antigen list     \ncolored-man-pages\ncommand-not-found\ndesyncr/powerlevel9k powerlevel9k --branch=dritter/prezto --btype=theme\ndesyncr/vagrant-zsh-completion\nfelixr/docker-zsh-completion\njimhester/per-directory-history\npaoloantinori/hhighlighter h.sh\nzsh-users/zsh-autosuggestions\nzsh-users/zsh-completions\nzsh-users/zsh-history-substring-search\nzsh-users/zsh-syntax-highlighting\n```\n. 0.05s\n``` sh\n\u00bb time _ANTIGEN_PERF_ENABLED=true _ANTIGEN_INIT_ENABLED=true _ANTIGEN_CACHE_ENABLED=true zsh\n_ANTIGEN_PERF_ENABLED=true _ANTIGEN_INIT_ENABLED=true _ANTIGEN_CACHE_ENABLED=  0.05s user 0.06s system 103% cpu 0.103 total\n\u00bb antigen list\ncolored-man-pages\ndesyncr/powerlevel9k powerlevel9k --branch=dritter/prezto --btype=theme\ndesyncr/vagrant-zsh-completion\nfelixr/docker-zsh-completion\njimhester/per-directory-history\npaoloantinori/hhighlighter h.sh\nzsh-users/zsh-autosuggestions\nzsh-users/zsh-completions\nzsh-users/zsh-history-substring-search\nzsh-users/zsh-syntax-highlighting\n```\n. Running on 5.0.7 and latest master and works fine. Did you checked the change log? May be there is a clue.\n. I'll later on update to 5.0.8 and see if the issue persists. Given the version number I think there should not be any breaking changes, but we'll see.\n. Can confirm running zsh 5.0.8 (x86_64-redhat-linux-gnu) just fine.\nEdit: Try deleting your completion files (~/.zcompdump or similar).\n. Interesting. Thanks for the info.\n. Hey there @j-walker23 hope you'll find antigen useful. Feel free to ask questions on the issue tracker and participate in the discussions if you feel like it.\nResponding to your question. It's an intended behavior. Repository folders are escaped that way to avoid issues with path and files names with characters like ':', '/' and so on.\nHope that'd help you.\n. While I do agree that 'grep', 'sed' and so on should be used scarcely it seems it doesn't improve performance on other than cygwin environments, at least here (Fedora 22, zsh 5.0.7) the start up time is as follow:\n```\nperformance-improvements branch\n$ time zsh\nzsh  0.35s user 0.17s system 104% cpu 0.499 total\nmaster\ntime zsh\nzsh  0.38s user 0.44s system 113% cpu 0.718 total\n```\nWhile the cache branch would improve start up time through out all platforms and environments.\n\nThis may alleviate the need for #128.\n\nI don't think antigen completion as anything to do with performance.\n\nShould the other commands be updated to not create extra processes / use pure zsh?\n\nIt should be applied uniformly through out all antigen code if possible as to not have too many ways to do one thing in the code.\n\nHow much should i try to use fancy zsh flags?\n\nAs long as it doesn't introduce backward incompatibility.\n. This doesn't alleviate the need for cache as the performance improvements it brings turn start up time from >0.40s to 0.10s and aren't platform specific.\n. @forivall I looked at your configs (thanks for pointing them out). Given your configs nothing is being cached as 'antigen bundle' is used instead of 'antigen bundles'.\nChanging the configuration would give the following stats:\n```\n$ time zsh\nzsh  0.66s user 0.92s system 119% cpu 1.326 total\n$ time zsh\nzsh  0.38s user 0.09s system 102% cpu 0.461 total\n```\n. @forivall I'm sorry -zcache-start and -zcache-done should only be called inside antigen, not from outside. I don't know how it would behave when using it in a non-standard way.\n. For the reason exposed above and the lack of interest in maintaining/cleaning this PR I'm closing this out.\nThanks for using and contributing to Antigen.\n. It seems there is no tracking for this feature so I'm going to close this PR for now.\n. 'antigen theme'  must be placed before 'antigen apply'.\nHope that helps.\n. Yes you can, although it's hackish. For example you can:\nantigen bundle /home/user/Projects/zsh-syntax-hl --loc=zsh-syntax-highlighting.plugin.zsh --no-local-clone\nBeing '/home/user/Projects/zsh-syntax-hl' a local clone of zsh-users/zsh-syntax-highlighting plugin.\nHope that helps!\n. It's the same thing:\nantigen theme /home/user/Projects/powerlevel9k --loc=powerlevel9k --no-local-clone\n. It's because 'su' doesn't load the profile scripts and so $ADOTDIR is not overwritten. Try 'su -' instead.\n```\n\u00bb su\nPassword: \nroot@host:/home/# echo $ADOTDIR\n/home//.antigen\n\u00bb su - \nPassword: \nroot@host:~# echo $ADOTDIR\n/root/.antigen\n```\nNot sure if it's an antigen problem.\n. su - <username>\n. As noted, this is an upstream issue. Anything we can do to antigen are mostly hacks to make it work.\nAt least from the top of my mind I can't think a non-hacky way to solve it.\nIf you got an idea hack away and send your PR :)\n. Done in v1.1.0.\n. Thanks for the PR. Seems OK to me. I'd put it under a \"Note about prezto bundle\" section just to give it a bit more of importance. But that's just me.\nAlso I was thinking may be a not-so-nasty workaround could be to, instead of setting ZDOTDIR up, Antigen could just create a symlink at $ZDOTDIR/.prezto pointing to $ADOTDIR/repos/.\nSounds reasonable?\n. It that case you should not 'antigen use prezto' it as to not be managed by antigen. Besides that yeah I agree with you it should not touch anything in the home directory.\n. Thanks for the changes. I'd prefer to use the wiki instead of adding even more details to the README file.\n. Does this change makes https://github.com/zsh-users/antigen/pull/138 unnecesarry?\n. Thanks for your changes. Enhancements to prezto support is underway. So, for the time being, I've to reject your changes.\nThanks anyway.\n. I think they'll like to keep the old syntax. Regardless of that it's an alternative to the whole cache thing at https://github.com/zsh-users/antigen/pull/129. I'll try this later today.\n. Thank you @outcoldman for these changes. It has been merged.\n. Antigen is zsh based. As I see in these error messages you're trying to run Antigen on bash. That's not possible and out of the scope of Antigen.\nnpm and node are not related to antigen or zsh at all.\nTry 'apt-get install zsh' (or yum install zsh or similar) then log in in that shell and try the installation/usage steps again.\n. Thanks for using antigen and contributing to make it better, but I think this goes beyond Antigen's scope.\n. What about this?\nEdit: Thanks for the PR, by the way.\n. Maybe changing fpath's will bring side effects, I don't know. It still doesn't look that good after all.\nYour solution is valid and looks less problematic. :+1: \n. I think zsh docs suggests the I flag for searching (under \"15.2.3 Subscript Flags\").\n(( ! ${fpath[(I)$location]} )) && fpath=($location $fpath)\nWhat do you think? Also one-liner! :)\n. Looks fine to me :+1:  Hope it get merged.\n. Thanks for the PR @hlohm \n. The README explains it a bit. In your .zshrc (or wherever you put your configs) after you source antigen you have to use antigen bundle or antigen bundles to load your bundles.\nA basic config would look like:\n```\nsource ~/antigen.zsh\nantigen use oh-my-zsh\nantigen bundles <<EOBUNDLES\n    jimhester/per-directory-history\n    zsh-users/zsh-syntax-highlighting\nEOBUNDLES\nantigen theme robbyrussell\nantigen apply\n```\nSee examples here.\n. It looks like there is no need for this as the issue tracker itself has little activity.\n. \nWorks for me with theunraveler theme. zsh version? terminal?\n. If it's a problem it should not be closed.\n. In that case, yes, you're right. It'd be better to report to the oh-my-zsh team about it.\n. Thanks for the PR @towo \n. Antigen doesn't writes to .zshrc. If you want to persist any changes made on an interactive session you HAVE to manually change .zshrc file.\nPlease take a look at the docs. \n. There is no save function. Sounds like a nice addition but I'm not sure how that could be implemented. \nThis is because antigen is configured at run-time from any .*rc (ie, .zshrc, .zprofile etc etc) which may contain other configurations, aliases, etc. so we can not just manipulate a rc file at our will.\nIf you have an idea how that may be implemented please open an issue and let's see how that can be added.\n. I think the use case is too narrow and there are bigger issues (performance, prezto support) to consider  implementing this, unless there is anybody interested in taking a chance and implement this feature.\nI'm closing this now for the time being.\n. It's a cool idea but I think most plugins/scripts are self-contained (requiring no deps) and don't follow semver. I think being able to require branches is enough for antigen's scope.\n. Please continue this discussion on the appropriate channels. I'm closing this as there is a separated solution.\n. While I like XDG to keep an uncluttered home dir you can configure Antigen config directory without problem by setting up ADOTDIR=$XDG_CONFIG_DIR/antigen\n. @Abdillah Regardless of what I said above, I think we should add a check for old-style antigen configuration directory (~/.antigen) otherwise after updating users may lose their configurations.\n. By default it does contains the revert-info plus the checkout bundles.\nI'll leave this out on hold for now as it's not a priority right now.\nThank you for contributing to antigen.\n. > That is not configuration. If you were going to follow XDG you might put it in $XDG_DATA_HOME but I agree that it's not a priority.\nGranted but it's data we should take into account if we integrate this change IMO.\n. What OS, shell version, path antigen is installed, antigen version.\n. Closing is there is no feedback.\n. This issue is solved upstream. Thanks for raising the issue.\n. There is a 'caveat' for it last time I tried it.\n```\n$ brew info antigen\nantigen: stable 1, HEAD\nPlugin manager for zsh, inspired by oh-my-zsh and vundle.\nhttp://antigen.sharats.me/\n/usr/local/Cellar/antigen/1 (2 files, 22.6K) *\n  Built from source on 2016-08-03 at 08:59:12\nFrom: https://github.com/Homebrew/homebrew-core/blob/master/Formula/antigen.rb\n==> Caveats\nTo activate antigen, add the following to your ~/.zshrc:\nsource $(brew --prefix)/share/antigen.zsh\n```\n. @00guille You're using bash instead of zsh.. Hi @Fandekasp Thanks for the suggestion.\nI think a search functionality would turn out quite useful, despite it may go a bit beyond Antigen's functionality IMO.\nThere are a few issues with the implementation though: The development and maintenance of a web site (with an API), the search functionality would need a more or less complex parser to display search and so on so forth.\nSo, while useful it's quite a huge project for now. Unless somebody would like to take this project in their hands, I'll close this for now.\n. @hulufei Same behavior as @justbuchanan reported.\n. antigen update should by default checkout master branch or the one checked out with --branch keyword argument.\nThis could be achieved with -antigen-parse-args, which would return any specified branch name, defaulting in master otherwise, then performing a pull.\nIf you need to be locked at certain versions use snapshot/restore. This is similar to using a .lock file in most package managers.\n. Done in #212 \n. Gonna take a look today. Thanks for reporting.. @lixiaoyan This is fixed in v2. Soon to be released.. Fixed in latest release. Closing.. @willemdh That's a bash error. Be sure you're on zsh: echo $0 should say \"zsh\". Then you can source antigen.zsh.\nGood luck!\n. Closing this issue out as there is no new feedback. Feel free to open it up if the issue persists.\n. Done.\n. Replaced the alternative list for a link to a more complete and up to date list of frameworks and plugins.\nThanks.\n. Thanks for the changes! @chadmoore \n. Done. #186 \n. Closing in favor of: https://github.com/zsh-users/antigen/issues/261\n.  Support binary bundle. Done. See https://github.com/zsh-users/antigen/wiki/Release-process\n. Done.\n. Addressed in #183\n. Done.\n. Done.\n. Should not have landed in master.\n. It'll need to be updated for v1.0.4 release.\n. Done.\n. Addressed in #206 \n. Addressed in #211 \n. Done in #205 \n. Done in https://github.com/zsh-users/antigen/pull/200\n. Done in https://github.com/zsh-users/antigen/pull/202\n. It's better off as it's right now. Returning an error with a warning message.\nI'm closing this.\n. Done. See https://github.com/zsh-users/antigen/wiki/Contributing\n. Follow up on #341 . All PR should go to develop branch. For some reason I can't just edit the target branch, so I'll take a look later.\nThanks!\n. Following issue @ https://github.com/zsh-users/antigen/pull/221. Thank you.\n. For the time being:\nFor zsh-navigation-tools: \nfpath+=(\"$ANTIGEN/repos/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh.git/plugins/zsh-navigation-tools\")\nFor some reason it's not being added to fpath.\n. For powerlevel9k. I'm using latest from master and it works OK.\nUsing some powerlevel9k custom config? Branch?\n. Please re-open when you have more info about powerlevel9k issue. I'm keeping an eye on it though. @xasx\nThanks for reporting.\n. I'll take a closer look today. Glad ZNT issue is fixed.\n. I can reproduce the issue with powerlevel9k. I'll take a look.\n. Thanks for reporting your issue. I'm gonna take a look later today.\n. @AndrewSpeed Wondering. Could you run antigen cache-reset? I'm trying here with your antigen configs and I see no such problem.\n. How does your .zcache-payload file looks like? Is it all bundled together like this line 25 you provided?\n. Awesome. I'll take a look.\n. Does this issue persist with current version (v1.1.3) ? @AndrewSpeed \n. @duckpuppy  Responding to your original comment: The only thing I saw is dos encoding issues (Debian 8, Ubuntu Trusty) with http://pastebin.com/raw/JQJ9skNy which caused zsh to fail to load it's configuration. Doing vim set ff=unix fixed it for me.\nI guess it's something to do with encoding, but I can't reproduce it. I guess I have to run a VM with Cygwin.\n\nthe $HOME/.antigen folder isn't created\n\nThat's an OK behavior, because it only checks at sourcing antigen if the folder exists or should be created, but not with every antigen command.\n. Hi @duckpuppy regarding .antigen folder creation. What is going on is that when running antigen interactively it won't run cache, which does creates the .antigen and .antigen/.cache path (assuming it is configured with default values).\nAntigen should create the required folders when being sourced. I'll create an issue for it.\nI'll keep an eye on the original issue, which I still can't reproduce.\nThanks for reporting.\n. What antigen version did you use? Zsh and OS version.\nOn 22:22, Sat, Nov 5, 2016 Ois\u00edn notifications@github.com wrote:\n\nI'm seeing the original problem now. It happened after I tried \"antigen\nupdate\", which told me there was some kind of merge problem (or unmerged\nchanges) with oh-my-zsh, so I went to\n~/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh.git\nand did git reset --hard HEAD. This allow antigen update to work, but now\nwhen I open a new shell, I get the error: .antigen/.cache/.zcache-payload:29:\nparse error nearuninstall_oh_my_zsh'`\nI tried antigen cache-reset and got Antigen: Unknown command: cache-reset.\n\u2014\nYou are receiving this because you were assigned.\nReply to this email directly, view it on GitHub\nhttps://github.com/zsh-users/antigen/issues/222#issuecomment-258653810,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABxYqwtLttxBs53KQPYHC9-vwp1SkgNsks5q7SvhgaJpZM4J661o\n.\n. @DestyNova It seems you're missing an antigen apply. It should not affect the main problem but you should add that.\n\nRE: Antigen: Unknown command: cache-reset: May be you were using an older antigen version? Older than 1.1.0, that's were the cache system was deployed.\n. Closing this as there has been no response since 12 days.\n. I can't seem to reproduce it with latest from develop.\nI'm leaving this open to keep an eye on it.\n. I'm not sure if I already ask you but can you gist you zsh and antigen (you $ANTIGEN/.cache/.zcache-payload would also be great.\n. Which antigen version are you using? If no cache exists I'm guessing 1.0.x.\n. @jdkbx Your theme loads correctly here (running develop). It does seem to have some character encoding issues, though - not related to antigen.\n. Do run without caching, or version 1.0.x or version v1. I'm guessing Antigen is not the issue here as I could load it without problems (encoding aside).\n. I can not reproduce the behaviour you're describing. Good to know there's a workaround.\n. @extink Thanks for the info. You gave me quite a few hints where the problem could come from. I'll take a look tonight.\nFor the time being do try with antigen apply rather than antigen-apply.\n. \ud83d\udc4d  Glad it worked. I'll be working on a fix for next 1.1.4.\n. ZSH version, OS, antigen cache-reset? zcache-payload exists?\n. @frgmt Glad it works now. I'm gonna take a look how to better handle upgrades.\n@ilkka Does it work with antigen cache-reset?\n. @ilkka Just keeping a copy of .zcache-payload would be enough. May be gist it?\n. Thank you. I'll take a look later today.\n. Fixed in #233\n. Could you provide your zsh/antigen configuration? .zcache-payload?\n. @zawadzkip Thanks. Edited your comment to use gist.\n. This seems to be an issue with zsh-syntax-highlighting plugin. It seems you have an old version of this plugin, try antigen update.\n. @zawadzkip  See https://github.com/zsh-users/antigen/issues/238\n. Closing this as there has been no new information.\n. I haven't seen an issue with install for awhile. I'm closing it for now.. Hi @laurenbenichou This seems to be an issue with BSD sed. I'm taking a look at it.\nThanks for reporting.\n. Should be fixed in next release v1.1.3. Fix currently available in develop.\n. Sure thing. Will be available in next bugfix release v1.1.4.\n. Done in https://github.com/zsh-users/antigen/pull/461.  Update single plugin. Done.. @paulmelnikow Currently Antigen supports all of them without problem, the only issue is you have to use full bundle url for others than github:\n   antigen bundle example/bundle # will look for https://github.com/example/bundle.git\n\nIf you want to install the bundle from gitlab/bitbucket you'll need to:\n   antigen bundle https://gitlab.com/repository/example.git\n\nThe idea is to support having a custom domain. This is done here.\nSupport for multiple backends is a really nice to have IMO. Really complex to implement I think, huge refactor.\nIt was my bad both issues are mixed up in one single issue, there should be two at least..  Support binary bundle. Use antigen bundle example/bundle if no sourceable is found bundle path will be added to $PATH.. Should have been auto closed by #423! This is done! Available in v2 and then in develop, ready for v2.0.0.. @Hoverbear There are errors due to git output format changes between versions and sed/grep flags IIRC.\nYour issue may be due to antigen not loading oh-my-zsh correctly. You may raise an issue for it.\n. No problem. Thanks for taking a look at it \ud83d\udc4d \n. Fixed with https://github.com/zsh-users/antigen/pull/365.. Please note that current build doesn't contain an up-to-date command completion for antigen.\nIt does completes cache-reset instead of reset.\nThis is solved by issuing an:\nmake build\nThen bin/antigen.zsh will be up-to-date. Will be solved next build.\n. Gotcha. Gonna take a look at it.\n. @Hoverbear Tried it and it seems to work (MacOS and Fedora).\ngit completion usually comes with zsh installation, so it _should be available given you have a proper $fpath.\nTry to regenerate the compdump file:\nmv .zcompdump .zcompdump.1\n...and restart your shell. A new .zcompdump file should be created and hopefully your issue should be gone.\n. No problem. Happy to know it worked. It seems .zcompdump should be reset automatically on antigen reset? I'll investigate a bit more.\n. Fixed in current unstable.\n. @trigun0x2  As @dmdque very well described it, the issue is the interaction between your g function and git plugin, which does defines a g alias.\n@dmdque That's a good question for the zsh-dev guys.\n. Fixed in #275 \n. Doing it interactively it seems to work:\nantigen bundle /path/to/zsh-x x.zsh\nBut it seems that adding it to antigen config (.zshrc, or .antigenrc) it seems to break it.\nI'm going to take a deeper look at it. Thanks for reporting it.\n. Well, now it looks like it's a zcompdump issue again.\nDo try removing it:\nmv ~/.zcompdump ~/.zcompdump.1\nThis issue should have been resolved at https://github.com/zsh-users/antigen/pull/273 but it seems it still present, so I'll leave this issue open.\nThanks again for reporting.\n. Hello there. Running antigen 1.2.0 and everything seems alright from my side.\nCopied and pasted:\nx() {\n  ~/Projects/$1\n}\ncompdef '_path_files -W ~/Projects/' x\n(changed path, but the snippet should be the same regardless of it)\nCreated it under ~/Playground/zsh-x with x.zsh as file name.\nInteractively running:\nantigen bundle ~/Playground/zsh-x # (or antigen bundle ~/Playground/zsh-x x.zsh)\nLoaded the bundle correctly and tab completion worked as expected.\nAdding\nantigen bundle ~/Playground/zsh-x\nTo .antigenrc (.zshrc or wherever you configure antigen) also did the trick. BUT in two different machines (Fedora & Mac OS X) I had to manually remove .zcompdump file to actually see tab completion.\nRegarding, bundle command syntax it's as described in https://github.com/zsh-users/antigen#antigen-bundle, namely:\nantigen bundle [<url> [<loc>]]\nBasically, using <loc>, you're forcing antigen to load whatever thing you're referring to, ie:\nantigen bundle someuser/somerepo somefile.py\nWould try to source somefile.py. Meanwhile with:\nantigen bundle someuser/somerepo\nAntigen would go through this matching:\n- .plugin.zsh\n- init.zsh\n- .zsh\n- *.sh\nIn any case .plugin.zsh is NOT necessary or mandatory at all.\n. Thank you! :+1: \n. @edqu3 Hello there. This is a known issue with 'locals' inside themes. It should be resolved in 1.2.1. See  https://github.com/zsh-users/antigen/issues/122\nEdit: I've found this quite succinct and clear explanation about this issue: https://github.com/bhilburn/powerlevel9k/pull/38#issuecomment-118385844\n. @edqu3 You should be able to use zeta theme as expected with https://github.com/zsh-users/antigen/pull/284 bugfix/hack-local-variables-in-themes branch. Next to be merged in 1.2.1 release.\nBTW you don't need to source oh-my-zsh.sh to be able to use OMZ's plugins and themes with Antigen,  with antigen use oh-my-zsh is enough.\n. @jordi9 Hello there. Please provide a minimum .zshrc/.antigenrc configuration file in order to see what configuration and bundles you're using. Zsh version?\n. @jordi9 @kmikolaj Thanks for the info. I'm gonna take a look today.\nIn 1.1.4 were huge changes regarding bundle loading, so this could have been affected by that.\nThank you both for reporting.\n. Thank you! Looks good \ud83d\udc4d \n. I actually prefer the old format. It makes easier to read with non-markdown viewers. Also there isn't much highlighting to do.\nThank you for contributing. :+1: \n. :+1: Cool.\n. Using latest antigen (1.2.1) and doing both:\nantigen bundle gem\nantigen apply\nand editing .zshrc with\nantigen use oh-my-zsh\nantigen bundle gem\nantigen apply\nSeems to work as expected (tried with both pip and gem).\nDid you tried to clean your cache with antigen reset? (alternatively antigen apply to see completion changes on the current shell).\n. @silvadev Glad it worked!\n. @MichaelRupertDev Using Antigen v1.2.x worked as expected on Ubuntu 16.04.1. Did you tried antigen reset?\nEdit: zsh v5.1.1\n. Find take a look later (I'm sick now). Did you tried antigen reset? If that doesn't work try deleting .zcompdump\n. I'm gonna take a look as I get better (I'm sick). Did you tried antigen\nreset? Otherwise manually delete .zcompdump\nBest regards,\nOn 04:04, Fri, Oct 21, 2016 Petr Zelenin notifications@github.com wrote:\n\nAfter last update Antigen command antigen apply in my .zshrc file not\nwork.\nBut work if I just put it in console.\nMy ZSH config:\n########################################################### Antigen\nsource $HOME/.zsh/antigen/antigen.zsh\n# Load the oh-my-zsh's library.\n  antigen use oh-my-zsh\n# Bundles from the default repo (robbyrussell's oh-my-zsh).\n  antigen bundle command-not-found  # suggests package name with relevant command\n  antigen bundle docker             # docker autocomplete plugin\n  antigen bundle extract            # 'x' alias - swiss knife for archive extracting\n  antigen bundle gem                # support for Ruby package manager\n  antigen bundle git                # support for git\n  antigen bundle git-flow-avh       # support for git-flow-avh completion\n  antigen bundle history            # aliases: h for history, hsi for grepping history\n  antigen bundle npm                # support for NodeJS package manager\n  antigen bundle pip                # support for Python Package Manager\n  antigen bundle rvm                # support for Ruby version manager\n  antigen bundle react-native       # support for React Native CLI\n# Additional completion definitions for Zsh.\n  antigen bundle zsh-users/zsh-completions src\n  antigen bundle sdurrheimer/docker-compose-zsh-completion\n# Load the theme.\n  antigen theme $HOME/.zsh/themes 'petrikoz' --no-local-clone\n# Tell antigen that you're done.\n  antigen apply\n########################################################### Set ZSH options#################################################################== History ================\nsetopt APPEND_HISTORY          # history appends to existing file\n  setopt HIST_FIND_NO_DUPS       # history search finds once only\n  setopt HIST_IGNORE_ALL_DUPS    # remove all earlier duplicate lines\n  setopt HIST_REDUCE_BLANKS      # trim multiple insgnificant blanks in history\n  setopt HIST_NO_STORE           # remove the history (fc -l) command from the history when invoked\nHISTFILE=$HOME/.zsh/history    # history file location\n  HISTSIZE=1000000               # number of history lines kept internally\n  SAVEHIST=1000000               # max number of history lines saved\n...\nFull config you can see in my account:\nhttps://github.com/petrikoz/dotfiles/blob/master/zsh/rc\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/zsh-users/antigen/issues/297, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABxYq3eqOXwBnvpVEFlQiBXmQlZfxZdJks5q2GPrgaJpZM4Kc64o\n.\n. I was considering signed releases but ended up considering it lower priority due to lack of time.\n\nI'll take a second look and see if 2.x can be a signed release.\n. We should be signing commits/PR and tags from now on.. Please provide zsh version, OS version.\nThanks.\nOn 22:53, Sat, Nov 5, 2016 Ois\u00edn notifications@github.com wrote:\n\nA git bisect run identifies the following commit as the start of the\nweird sed errors:\n356f750ba4705c4a100f14e4f558ed5ac3ee7db4 is the first bad commit\ncommit 356f750ba4705c4a100f14e4f558ed5ac3ee7db4\nAuthor: DC* syncr@riseup.net\nDate:   Fri Oct 14 22:52:28 2016 +0200\n```\nFix local variable in themes/bundles (#284)\n\nFix local variable in themes/bundles\nUpdate cache tests for fix on local variables\nOnly pre process \"local\" for themes\n```\n\n:040000 040000 efb405a68a108c9737baee08ce2dac4533e3845e 6951665fc68be63137e6f897f970a7b7bd32fa8c M   bin\n:040000 040000 0c82e98d19f55ac3ce341304b0b7e0dfbfd838c4 b34ecfa561764726239a5478960e297afa7d96d8 M   src\n:040000 040000 93c2a28757595e2b785b784780b09f7025bfa430 aed1047945f8c994e9baf94930d97064d308d7ce M   tests\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/zsh-users/antigen/issues/305#issuecomment-258655074,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABxYq29zvHJuqjbYTfEyIPYskezPqldxks5q7TMogaJpZM4Kqb9s\n.\n. @DestyNova  I'm not sure how did you installed antigen but these are the most succinct install steps:\n\n1- Download antigen to your $HOME path.\ncurl https://cdn.rawgit.com/zsh-users/antigen/v1.2.1/bin/antigen.zsh > $HOME/antigen.zsh\n2- Edit $HOME/.zshrc to load $HOME/antigen.zsh:\nsource $HOME/antigen.zsh\n3- Edit $HOME/.zshrc to configure some bundles:\n```\nantigen use oh-my-zsh\nantigen bundle git\nantigen bundle zsh-users/zsh-syntax-highlighting\nantigen theme muse\nantigen apply\n```\nHere's the final .zshrc as an example.\n. I can't seem to reproduce this. If there is further information please comment.\nI'm closing this for now.\n. I'll take a look later today.\nMeanwhile could you post your .zshrc configuration?, Zsh version and OS?\n. You should probably try rm -f ~/.zcompdump*. Tried with latest antigen on zsh 5.2, worked as expected.\n. Closing this up for now. Comment if you see it's still behaving in this way and it's effectively related to antigen.\nThanks for reporting.\n. This happens due to how zaw determines the current path in order to add functions to fpath, which works without antigen's cache involved, otherwise it fails.\n. Not sure about that. May be running with caching disabled (_ANTIGEN_CACHE_ENABLED=false).\nYou should check ~/.antigen/.cache/.zcache-payload. It does contains the final fpath generated by antigen. If they differ then there's another problem.\n. I haven't seen errors with zsh-syntax-highlighting. What's the issue?\n. I'll try to reproduce it on zsh 5.1.1 but I can't see that error with latest zsh-users/zsh-syntax-highlighting, antigen v1.2.1 or above.\n.  Update single plugin. I'm gonna take a look.. It does seem to work as expected using both load methods: init and bundle.  What's the error you see?\nEdit: grammar.. Tried your set up and works as expected. Try: antigen reset, to reset cache.\nAlso what's the output of antigen version, just to check.. Good to hear. I'll investigate how to avoid issues between major upgrades.\nI believe we currently reset cache on selfupdate.\nBest regards. Should be fixed in v1.2.3\n. What antigen version are you running?, zsh version.\nThanks.. Latest is develop. Try v1.2.3.. Thanks for reporting this. I had this issue in mind but I was quite busy lately.\nThe issue comes from this check, which does prevent cache from being loaded when issuing antigen init.\nA quick fix would be to call zcache-load-cache after zcache-done on the init command.\nScheduled for v1.2.4.. Fixed. Check out develop or wait until v1.2.4 is released by next week.. Thanks dude,  your awesome!. Hey there @orf, unfortunately Antigen has no verbose mode. What I do to debug is either activating zprof or simply perform a binary search/git bisect depending on the issue. Take a look here.\nRegarding antigen apply, what it does is compinit. Check if performing the following lines does cause an unusual delay:\nautoload -U compinit\ncompinit -i -d $HOME/.compdump\n\n. I don't know how Kaspersky works but it could hook source/eval/sed/$() functions/builtins.\nYou can disable Antigen's cache (and those calls) with:\nexport _ANTIGEN_CACHE_ENABLED=false\n\nI'll close this for now as it's not related to Antigen. Do come back with news if you have any.\nCheers.. Thanks! I'll take a look at it when I can \ud83d\udc4d . We should still support custom configuration (for example, loading themes/bundles depending on run-time variables, $TERM, uname etc). As a migration we should support custom .antigenrc  and Antigen-generated configuration.. Closing for #506 . Fixed in #345 . This also can go hand-in-hand with our caching mechanism so new users -not aware of caching- can work with Antigen as natural as possible when creating/migrating their configurations, then define a point when they can lock/mark as stable their configs.. Initial approach at #529. Initial implementation is merged into develop, it lacks some high-level documentation but on the bright side it's a core component and fundamental building block for caching (cache loading antigen and bundles) and lock (lock multiple installations) and parallel (parallel bundle install).\nNext steps are:\n\n[ ] Higher level APIs (register command, (w/ help, completions etc))\n[ ] Improve documentations (low level API spec, higher level manual, examples, practices etc)\n[ ] Consider moving extensions into their own repositories. Fixed in #347.. Merged.. Should be fixed in v1.3.1.. Merged.. Done.. Fixed.. Quickly tested locally with zsh version zsh 5.2 (x86_64-redhat-linux-gnu), and Antigen v1.3.0. Worked as expected.\n\nDid you tried removing $HOME/.zcompdump or issuing antigen reset? As the troubleshooting section suggests?. Closing this for now. I'll open it up if there anything to do with antigen.\nThanks for reporting.. Awesome. Thank you!. Done in https://github.com/zsh-users/antigen/pull/365. Thank you. I'd be looking into this. \nWill probably ship with v1.3.1.. Follow up https://github.com/zsh-users/antigen/issues/360. More than a second from version 1.1.0 and up is clearly a sign something is very wrong.\nWe've maintaining startup time below a second. There are some stats in the wiki.\nIt happened to me that zcompdump was appeding stuff to it on every startup. I don't remember the reason thou.\nDid you tried to clear your compdup? antigen reset would do it. Otherwise  rm $HOME/.zcompdump*\nI'll be taking a further look later today.. Thank you for reporting. We'll keep an eye on the issue.\nI'm closing this for now as the issue is solved.. Merged. It looks like ~, $HOME etc are not expanded inside HERE strings. We should document it in the wiki.. Merged.. Fixed in #368 . Done in #411 . Merged.. Done. https://github.com/zsh-users/antigen/wiki/Cookbook#configure-compdump-location. Too much trouble for too little gain.. Merged.. Hey there @lukechilds, we have queued up to test performance with caching references vs cache sources. So we're probably gonna fix this before 2.0 is out.\nNot sure what's the need to explicitly return 0.. Now I see, it's this condition which may return a non-zero result.. Fair point. Thanks for reporting, we'll look into it.\nFor anyone facing this issue with other plugin you have a workaround by disabling antigen's cache:\nexport _ANTIGEN_CACHE_ENABLED=false\n\n. On 5.2 current develop performs somewhat better:\nenhancement/support-reference-cache (logs):\ntotal 0.187s user 0.069s sys 0.049s (avg)\n\ndevelop (logs):\ntotal 0.164s user 0.073s sys 0.036s (avg). I'm not sure about the path in cygwin. Regarding omz cloning I think I know where the issue might be.\n\nI'll later on take a further look into it. Thank you for reporting.. Great you found out the issue :+1: .\nI don't want to add explicit checks for cygpath, so I'm gonna explore other options.. Done.. It seems an issue with how current caching implementation works.\nWe are testing a different approach to it that will solve this issue and a few others there are.\nAn option you currently have is disable caching for the time being.\nSorry for the inconvenience and thanks for reporting!\nDC*\nSent from mobile.. Looking further at this it looks like this plugin relies on the $ZSH variable to point to ~/.oh-my-zsh as per described here.\nI believe you have ZSH set up to ~/.oh-my-zsh that's the reason it doesn't fail in that shell session/tab. You should add the following line to .zshrc:\nexport ZSH=\"~/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh.git/\"\n\nFor this plugin to work correctly.. Whoops. Actually yes, it's an issue with the cache library. Should be fixed with #400.. Should be fixed on develop, ready for v1.4.0.\nThanks for reporting.. Hey there @einSelbst these installation methods are not interchangeable. The recommended way for end-users (like yourself) is to:\n\nuse brew, if available: brew install antigen\nuse your  os package manager. see install instructions\nif none is available use git\n\nFor brew I believe you have to add source $HOMEBREW_PREFIX/share/antigen/antigen.zsh to your ~/.zshrc.\nHope that helps!. Yes, when using brew, updates are handled through brew itself. It is often updated so no worries about it.\nIf you're up for a PR please go ahead. More and better documentation is always welcome!. I'm gonna take a look today. 4.3.11 is a supported version so it should work.. Maybe related to https://www.zsh.org/mla/users/2011/msg00823.html, https://www.zsh.org/mla/users/2011/msg00034.html. Our test suite is passing and a bit of manual test also gave good result, but if you could give it a quick look it'll be great feedback. Fix is in https://github.com/zsh-users/antigen/pull/395. @TBird2001 . @TBird2001 Awesome! Merged into develop, should be available in 1.3.5 due to be released today.. Done!. Done.. Merged in 274990f.. This is solved in v2.0.0 by using $+commands[git] rather than which git. v2.0.0 is scheduled for March 4th.\nThanks for reporting.. Furthermore, I tried Cent OS 7 and it seems it works correctly.\n```bash\n[antigen@dploy]~% antigen list\nYou don't have any bundles.\n[antigen@dploy]~% which git\n/usr/bin/git\n[antigen@dploy]~% uname -a\nLinux dploy 3.10.0-514.6.1.el7.x86_64 #1 SMP Wed Jan 18 13:06:36 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\n[antigen@dploy]~% cat /etc/redhat-release\nCentOS Linux release 7.3.1611 (Core)\n[antigen@dploy]~%\n``. Closing this for now. Thanks for reporting.. Can you provide your.zshrc` configuration? It will be really helpful to see how you've configured:\n\nsourcing antigen\nbundles used\ncache and possible other env variables\nzsh opts\n\nIt seems you're not properly loading antigen.zsh.\n. Closing this for now. Comment if you have any more information.. Merged.. It seems you're missing antigen-apply:\n.zshrc:\n...\nantigen bundle olivierverdier/zsh-git-prompt\nantigen apply\n\n. Thank you for reporting.. > Any advice on how to get the tests to run, or to go about writing new tests?\nYou'll need cram. New tests should go in tests/use.t. Use mocks to avoid touching the network, as in here.\nThanks for the contribution. Gonna review this tonight.. Merged! Thanks a lot! :+1: @paulmelnikow . @nicoulaj Awesome! I didn't know about this build platform. Gonna update the README.md for 1.4.2.. README.md updated. Thanks a lot! :+1: . Your configs looks right. What Antigen version are you using?:\nantigen version\nzsh --version\nuname -a. Tested with `1.4.1` and `v2` and it seems to work as expected.. Well, I'll keep an eye on it.. I'm gonna take a look later tonight.. Related: https://github.com/zsh-users/antigen/issues/122. Should be fixed on `develop`. Remember to clear your bundle cache:\n\nantigen reset\n\nThanks for reporting!. Thanks a lot! I have faced this same problem on other zsh projects but somehow I haven't addressed this here.. Yep, it's an issue I keep on seeing. The order issue is triggered with builds on OSX vs Gnu/Linux.\nIt's not a major issue so it's low priority until v2 is released.. Thanks a lot!, currently our focus is v2 with is delayed since a while. After v2 is released we'll refocus and take a lot at a bunch of improvements with tooling and prezto integration.. Thanks for the heads up. I'll review this during the day and merge as soon as possible.. @paulmelnikow I don't think we'll need tests for this and I don't know how feasible would be to make them. BTW, I'll review this today.. You're just right. So simple! Yeah, please do add tests! I was afraid of having some hardcoded values to check against. \ud83d\udc4d . Merged! Thank you very much!. @belak Thanks god for that PR! \ud83c\udf89 . @paulmelnikow Thanks for the detailed review! Really appreciate it!\nNow that https://github.com/zsh-users/prezto/pull/54 is merged I'll take a further look at this and hopefully merge into v2.. @paulmelnikow also, we are always looking for people to join Antigen to help with ideas, feedback, testing and of course with development. So if you have some time to help us you can join the team!. @belak Thanks a lot! Will be waiting on this PR to be merged!. @belak Thanks for looking into this! :+1: . A small thing that will save so many headaches! Thanks a lot!. Thanks a lot! Gonna look at it tonight!. @banyan #428 merged! Thanks for all the work!. I'll wait for this to be merged before next release as this is quite important :). I'll take a look and see what I can do! Sorry for the conflicts, had to merge v2 branch!. @popstas Currently we don't support callback actions. Maybe in a future release as #339 is implemented.. I'll take a look! Thanks for reporting!. You're right, there are still some use case missing.. @miszr There is a proposed fix in #442, if you could look at it and report any issue!. @paulmelnikow  Yes, in the case you pass a non-empty value and it's not a file it keeps on reading from std input.. @miszr It's an interesting approach, I haven't thought about it. Anyways I think given the issues it raises it's not worth it for now.\nI'll merge the proposed fix.. I'm gonna take a look. Thanks for reporting!. Should be fixed in develop.\nIf you're running an stable version like v1.4.x you should probably wait for v2.0.0 release instead of using develop.. Related to this.\nCan you share your antigen configuration and zsh version you're using.. It's the EXTENDED_GLOB configuration. As a workaround do unsetopt EXTENDED_GLOB before using antigen-bundles and reset it after.\nI'm gonna take a further look tonight to make it compatible with that option.\nThanks for reporting!. Should be fixed in develop!. We need more people like you! Thanks for the change.. @adamheins Sorry for leaving this PR hanging. I'll add a few reviews tonight, one or two things max. Thanks again!. @adamheins Yeah, please add snapshot and restore.\nAnother thing: I'd remove 'experimental' from revert and wouldn't add it to snapshot and restore because for v2.0.0 they will not be tagged as such :). @adamheins Looks great! Thanks for the addition. :+1: \nI'll take care of moving these changes from bin/antigen.zsh to src/commands/help.zsh to not further delay this PR.. Please verify \"${ADOT:-\"${HOME}\" is correct. I believe it should be \"$ADOTDIR.. init.zsh is the path for cache from develop branch.\nThe Cookbook section reflects current stable version (v1.4.1), and thanks for spotting that error!\nTry using the path to the cache file directly rather than using env variables.. @dein0s Master moves even slower than the stable releases. It should be on v1.4.2 on soon as develop is released.\nIf you're on develop then you don't need to use a custom static loaded as Antigen do it for yourself.. A simple .zshrc as the following would do the job:\n```\n    source /path/to/antigen.zsh\n    antigen init /path/to/.antigenrc\n```\nDo antigen reset and antigen cache-gen. A file init.zsh should be created at ${ADOTDIR:-$HOME/.antigen}. When you start your shell Antigen will use that file to load bundles and lazyload Antigen itself.\nHope that helps!\nEdit: Sorry, misunderstood you, instructions are for develop rather than v1.4.1.. Here's the .zshrc for v1.4.1 and below:\n```\n_ANTIGEN_CACHE_PATH=$ADOTDIR/.cache\nANTIGEN_COMPDUMPFILE=\"$HOME/.zcompdump\"\nIf there is antigen cache available\nif [[ -f \"$_ANTIGEN_CACHE_PATH/.zcache-payload\" ]]; then\n    # Load bundles statically\n    source \"$_ANTIGEN_CACHE_PATH/.zcache-payload\"\n    autoload -Uz compinit\n    compinit -d \"$ANTIGEN_COMPDUMPFILE\"\nelse\n    source \"$HOME/.antigen.zsh\"\n    antigen init \"$HOME/.antigenrc\"\nfi\n```\nNow, regarding ANTIGEN_COMPDUMPFILE, it may have an issue in v1.4.1 that is fixed in develop (https://github.com/zsh-users/antigen/issues/452).\nLet me know if it works for you :). > One more thing - antigen reset and antigen cache-gen are one-time-to-run commands, right?\nYep, those commands are handled by Antigen itself. Only on special cases you should be using them, ie. debugging something.\nAntigen does a cache reset (develop branch) on config changes if you've configured _ANTIGEN_CACHE (See https://github.com/zsh-users/antigen#configuration). cache-gen is done by Antigen every time it can't find the cache file.. @dein0s Jump right in! I have a few mins.. We're currently re-creating zcompdump on apply (ei, when doing antigen reset) so -C is unnecessary and it won't cause issues with stalled zcompdump files.. Re-opening as it has been reported there may be a regression. https://gitter.im/antigen-zsh/develop?at=5942b726d83c50560c0fbc0e. Thanks! I'm looking at this :). @dein0s There is a configuration issue that causes zcompdump to be miss configured. See here. This was changed in 2.0.0 release, see changelog.\nAnyways antigen-reset seems to cause this regression, so I'm gonna take a further look.. Pushed a fix in #549. It seems to fix the issue described.\nThanks for helping out! @dein0s . Took a look around the wiki pages. Updated stats page and cookbook section.. This should be OK.. Fixed in #467. Should be fixed with #529. Maybe separated/extracted from that PR if it further delays deploying.. Done in #477 . Thanks again!. Gonna test if it errors with zstyle after antigen use prezto otherwise it's a non-issue IMO, unless there's a common workflow that need just that.. @belak Can you give it a quick look? Let me know!. @G-Bruin Exactly what @belak is describing. You should first install zsh and git then try again:\n$ apt-get install -y zsh git\n$ zsh\n$ source antigen.zsh\n. This happens because Antigen compiles bundles to avoid loading them each time a terminal launches.. Yes, you could use `ANTIGEN_CACHE` to configure each branch with an alternative cache file:\n\nsh\ncase ${TERM} in\n    xterm*|rxvt*|Eterm|aterm|kterm|gnome*)\n        ANTIGEN_CACHE=$HOME/.antigen/init-xterm.zsh\n    ;;\n    *)\n        ANTIGEN_CACHE=$HOME/.antigen/init-other.zsh\n    ;;\nesac\nPlease note this has to be done before sourcing Antigen.. We're gonna add an option to skip cache generation, probably for 2.0.1, as we are currently on a release :)\n. Closing for now. Thanks for reporting the issue. :+1: . Sounds good. In 2.1.0 it should not be a problem as Antigen will auto-detect it's configuration. \nNevertheless it should be clearly stated how Antigen loads its configs. I'm open to suggestions.. Done. Merged.. It seems ZSH and ZSH_CACHE_DIR are set somewhere else. Could you try with a minimal .zshrc configuration?. It's an issue in the cache lib. As a workaround do set ZSH and ZSH_CACHE_DIR manually before sourcing Antigen.\nI'm gonna work on a fix. Probably ready for v2.0.1.\nThanks for reporting!\n. Fixed in develop branch. Ready for v2.0.1.. It seems to work locally. Same Antigen and zsh version.. If your dotfiles reflects what you're testing right now I should note that antigen apply goes after all antigen bundle commands. Usually at the end of the .antigenrc files.. Take a look at our quick start guide for a minimal .zshrc/.antigenrc example.. Yes, it seems Antigen throws a 1 return code. It's not an error.\nI'll look later tonight how can this be avoided. Thanks for reporting!. It works for me with this minimal configuration:\n```\nShould go first\nantigen use oh-my-zsh\nThese configs should go before antigen theme\nPOWERLEVEL9K_INSTALLATION_PATH=$HOME/.antigen/bundles/bhilburn/powerlevel9k/\nPOWERLEVEL9K_MODE='awesome-patched'\nPOWERLEVEL9K_OS_ICON_BACKGROUND=\"white\"\nPOWERLEVEL9K_OS_ICON_FOREGROUND=\"blue\"  \nPOWERLEVEL9K_VCS_STAGED_ICON='\\u00b1'\nPOWERLEVEL9K_VCS_UNTRACKED_ICON='\\u25CF'\nPOWERLEVEL9K_VCS_UNSTAGED_ICON='\\u00b1'\nPOWERLEVEL9K_VCS_INCOMING_CHANGES_ICON='\\u2193'\nPOWERLEVEL9K_VCS_OUTGOING_CHANGES_ICON='\\u2191'\nPOWERLEVEL9K_VCS_MODIFIED_BACKGROUND='yellow'\nPOWERLEVEL9K_VCS_UNTRACKED_BACKGROUND='cyan'\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(status os_icon context dir vcs)\nPOWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()\nPOWERLEVEL9K_STATUS_VERBOSE=false\nPOWERLEVEL9K_SHORTEN_STRATEGY=\"truncate_left\"\nPOWERLEVEL9K_SHORTEN_DIR_LENGTH=2\nantigen theme bhilburn/powerlevel9k powerlevel9k\nShould be last\nantigen apply\n```\nDoes it work for you?. Please provide a minimal .zshrc/.antigenrc where you face this issue.. Thanks for the detailed report. Gonna try to reproduce it. :+1: . Thanks for the report. I'm gonna take a look!. @AdrienHorgnies @Eloo I believe currently (in develop) Antigen eagerly loads cache at sourcing (ie, at source antigen.zsh) rather than at antigen apply. So what is happening is that the theme is loaded before POWERLEVEL9K_MODE is set (remember Antigen loads it at sourcing).\nA workaround would be to move:\nPOWERLEVEL9K_MODE='awesome-fontconfig'\n\nBefore sourcing Antigen.\nThis will be resolved in the next version (2.1.0).\nSorry for the delay in getting into it.. Should be fixed in current release (v2.1.0). Closing for now, comment if issue still persists.. @eloo Currently Antigen defers sourcing cache to the antigen-apply command. So you may set up env variables before this command and they will be recognised. There is a gotcha regarding antigen-init, which is that it's ignored and not parsed/source if there is cache available.\nAll in all your original issue should be solved :). I'm gonna look for a fix! Thank's for reporting!. Work in progress here if you can take a look at it.. @mgryszko  btw you may try\nantigen bundle --url ssh://git@example.com:10022/group/repo.git\nas a workaround.. Available in develop. Ready for 2.0.1.. Thanks I'm gonna take a look today.. You can take a look here. Let me know if you see anything wrong with it.. It's available on develop. Ready for 2.0.1.. Thanks for reporting. I'm gonna take a look at this.. Should be fixed in https://github.com/zsh-users/antigen/pull/495 if you want to take a look.. Should be fixed in develop. Ready for 2.0.1.. Additional I would do two things:\n\nUse git.io/antigen-nightly as it is our canonical url for develop builds\nCreate a gist or github repo to be able to bundle it (ex, antigen bundle desyncr/antigen-selfupdater)\n\n. You could use $_ANTIGEN_INSTALL_DIR which works regardless of installation method (git clone, curl/wget, brew etc). It is the exact path of Antigen. If you rename it is up to you.. Merged.. It's because Antigen caches its bundles and themes in $ANTIGEN_CACHE on the first start up.\nYou have to either:\n\n\nantigen reset\n\n\nANTIGEN_CHECK_FILES=(/path/to/.zshrc)\n\n\nTake a look at the configuration section.\nRemember you can interactively switch between themes with antigen theme command.\n. Fixed with #526. Fixed in #525 . Fixed in #503 . Fixed in #511. Done in #529 . This is a pending issue. I have to take a look at this.. btw this was reported here and it's an Antigen issue, nothing wrong with your configuration or installation.. No, it's good. I should have had created an specific issue for this. It will make easier for others experiencing the same issue to find it. \ud83d\udc4d . Should be fixed in #508. Target release 2.0.2, due by April 23, 2017.. You can get our nightly releases from git.io/antigen-nightly\nDC*\nSent from mobile.\nRicardo Amaral notifications@github.com wrote:\n\n@desyncr Any way I can get this right now instead of waiting for April 23?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\ufffc\n{\"api_version\":\"1.0\",\"publisher\":{\"api_key\":\"05dde50f1d1a384dd78767c55493e4bb\",\"name\":\"GitHub\"},\"entity\":{\"external_key\":\"github/zsh-users/antigen\",\"title\":\"zsh-users/antigen\",\"subtitle\":\"GitHub repository\",\"main_image_url\":\"https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png\",\"avatar_image_url\":\"https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png\",\"action\":{\"name\":\"Open in GitHub\",\"url\":\"https://github.com/zsh-users/antigen\"}},\"updates\":{\"snippets\":[{\"icon\":\"PERSON\",\"message\":\"@rfgamaral in #507: @desyncr Any way I can get this right now instead of waiting for April 23?\"}],\"action\":{\"name\":\"View Issue\",\"url\":\"https://github.com/zsh-users/antigen/issues/507#issuecomment-294712960\"}}}. It's a good starting point. I think we need to polish the problem description.\n\nGonna come back with feedback tomorrow. Hope to merge into v2.0.2 :+1:. Let me know if you can take a look at the formatting issue. \ud83d\udc4d . I believe I have seen a similar issue way back. You'll need to clear your configs of ^M characters.. .zshrc, open it up in a code editor/vim/etc which shows invisible characters. Check if there is a ^M or similar.. Try with:\nantigen bundle robbyrussell/oh-my-zsh themes/refined.zsh-theme\n\nThemes are handled in a specific way to make it work in interactive mode as well as from cache; this is due to how some (oh-my-zsh) themes are built. See here.\nBTW you can use the same command for any other theme:\n    antigen bundle robbyrussell/oh-my-zsh themes/{theme-name}.zsh-theme\n\nHope that helps!\nEdit: Update examples.. My bad:\nantigen bundle robbyrussell/oh-my-zsh themes/refined.zsh-theme. That behaviour is due to https://github.com/bhilburn/powerlevel9k/pull/38#issuecomment-118385844. Some OMZ themes work correctly, some others do not.\n\nantigen-theme command prevents it for happening. In your case antigen-theme fails for other reason unrelated (something with how sed works on Cygwin/windows/etc).\nI'll have to take a closer look at the issue with antigen-theme on Cygwin.. Updated issue title to match the issue.. I see. Good info, it's the generated cache the issue. Gonna try to reproduce on a VM.. Seems to work correctly on a test VM. Cygwin 2.8.0-1.\n\n. Indeed. Those are not issue with Antigen but with cygwin/zsh install which I particularly don't care about as I don't use it.. You should do antigen reset or remove cache manually by doing rm $ADOTDIR/init.zsh (usually ~/.antigen/init.zsh).\nWhat happened is that the generated cached pointed to an older installation. (Currently it saves the cache version/antigen version but it doesn't check it in order to avoid these kind of issues).\n. Thanks for the detailed report. I never used zsh-autoenv so I'll have to take a look at this.. Issue introduced here.. @shoeffner You may switch to 2.0.0 as a workaround until we release a fix (hopefully for v2.0.2). Should be fixed with #520 if you can take a look!. Thanks again for the detailed report. Can confirm there are still issues with autoenv and theme switching.\nA workaround I believe is using antigen bundle rather than antigen theme.\nYou may have to call -antigen-theme-reset-hooks (https://github.com/zsh-users/antigen/blob/develop/src/commands/theme.zsh#L46) in order to clear hooks set up by themes in order to avoid them conflicting with each other.. Should be fixed with latest changes in #520. Basically autoenv chpwd hook messed up with theme loading.. Merged.. Yes, you can use themes in a local path as follows:\nantigen bundle /path/to/bundle --no-local-clone\n\nIn your case you can copy agnoster theme to a local path and bundle it this way:\nantigen bundle /path/to/agnoster-copy agnoster.zsh-theme --no-local-clone\n\nPath must be absolute. Take a look here for further details on antigen-bundle command.. Yes, it's the url for stable version. To get nightly builds use git.io/antigen-nightly. See https://github.com/zsh-users/antigen/wiki/Quick-start.. 2.0.2 is the latest released version. Nightly is develop. README.md in the default branch is from develop. See https://github.com/zsh-users/antigen/wiki/Release-process#naming-convention. No problem  \ud83d\udc4d .\nIt's the default branch as we always work on develop, not master. You can configure a default branch but not a default branch only for PR.. It's fair to ask for stable releases, currently I have no schedule printed down and I'm sorry for that because it's a good way to communicate with end users. I'll create an schedule for stable releases.\nI was about to release 2.0.2 as stable last week but I was too busy I could barely work on Antigen.\nI'll release 2.1.0 this weekend if no major issues come up.. And answering your questions:  Yes they are unstable and may contain bugs which are fixed in bugfix releases *.*.x that come out regularly bi-weekly.\nPlease note that you're jumping a major version, so you should take a look at the changelog and the release announcement: https://github.com/zsh-users/antigen/releases/tag/v2.0.0. I just released 2.0.2 as stable. 2.1.x has unresolved issues with prezto modules.. Works on my side. It could be that your env is missing a path on fpath:\n% echo $fpath\n/usr/local/share/zsh/site-functions /usr/local/Cellar/zsh/5.3/share/zsh/functions\nAnother option is that you've an old zcompdump file. You could try:\nantigen reset\n\nOr simply rm ~/.antigen/.zcomp*.\n. Thanks for reporting. I'm gonna give it a look tonight.. Hey there @stevenwalton Unfortunately I wasn't able to further investigate it. Been behind schedule for awhile.\nWill try to check it tonight.. @stevenwalton After taking a quick look it seems it's an issue between your config and colored-man-pages plugin due to env alias (env | sort) and colored-man-pages plugin internals. I believe colored-man-pages should use builtin env or \\env to avoid alias conflicting.. Closing for now. Comment if the issue still persists.. Merged.. Awesome. Thanks. Gonna take a look and merge later today. :+1:. Merged. Thanks!. It's not intended. This is due how cache is loaded.\nI'm gonna take a look today. Thanks for reporting.. Should be fixed in develop. Probably available for 2.2.0.. I haven't tried with your specific configuration but this is what I get locally with my configs.\n```\n\u25b2 ~ echo $#path\n24\n\u25b2 ~ zsh        \n\u25b2 ~ echo $#path\n24\n\u25b2 ~ zsh        \n\u25b2 ~ echo $#path\n24\n\u25b2 ~ zsh        \n\u25b2 ~ echo $#path\n24\n\u25b2 ~ echo $SHLVL\n4\n```. It may be related to caching. Try:\nantigen reset. I'm gonna take a look. I believe there's a missing promptinit somewhere.\n\nThanks for reporting.. I'll check that out! thanks @maximbaz . Not a solution but we may add a note/troubleshoot section about missing setopt promptsubst option.. Merged.. Try removing it manually:\nrm ~/.antigen/.lock\n\n(antigen reset also works)\nIf you face this problem again we'll look upon it further.. OK, I'm gonna take a look. Which specific version are you using? (antigen version should tell you that). A quick look it seems you're missing an antigen apply command at the end of https://github.com/nikitavoloboev/dotfiles/blob/master/zsh/zshrc#L6. Can not reproduce locally. Try the following:\nCreate a minimal .zshrc with the following content:\nsource ~/.dotfiles/zsh/antigen/antigen.zsh\nantigen bundle wbinglee/zsh-wakatime\nantigen apply\n\nRemove the lock and cache manually:\nrm ~/.antigen/.lock\nrm ~/.antigen/init.zsh\n\nThen execute zsh. . Thanks a lot for the report and configs. I'm taking a look at this.. Still can't seem to be able to reproduce this behavior. Tried with Antigen v2.1.1 and zsh 5.1.1.. It seems I can't come across this issue. \n$ antigen version\nAntigen v2.1.1 (7c70f82)\n$ zsh --version\nzsh 5.3 (x86_64-apple-darwin14.5.0). As a workaround antigen-reset should remove the lock file.. I haven't seen that error but I'm gonna try to reproduce. Thanks for reporting.\nI'm gonna add a flag so this check can be disable for now.. Added ANTIGEN_MUTEX flag so if this case still persist you can just disable the warning.\nAdding this line before sourcing Antigen:\nANTIGEN_MUTEX=false\n\nShould be enough.\nThis is available on the latest v2.2.1 release. See https://github.com/zsh-users/antigen/releases/tag/v2.2.1. Closing this for now. Let me know if the issue still persists with v2.2.1 or the flag doesn't work as expected.\nThanks for reporting!. @chkl Hey there! First, thanks for using Antigen. Second it all seems OK, I'll give it a quick try locally and see what's going on!. Locally it works as expected. I'm wondering if you may have a cached config. Try the following:\nantigen reset\n\nBest regards!. Hey there @robobenklein.\nThis happened before. By design Antigen aims for static loading of plugins, this way you get really small start up times.\nThis is achieved by building caches, which may interfere with dynamic plugin loading. For dynamic loading you got a couple of options:\n1- Disable cache (ANTIGEN_CACHE=false)\n2- Configure cache path for each instance (See links below)\nThere are examples and further description here. Also you may take a look at the Configuration wiki page.. Antigen differentiates between interactive and non-interactive sessions. Interactive shell doesn't hit or modify cache, this way you can still play with Antigen (see Show off section) without having your changes being persisted.. Feel free to open up a new issue for those OSX issues.. It was designed in a way that it only shows \"Installing\" message for each repository. Now I'm considering showing a message for each bundle, as to not cause this confusion.. A minimal working configuration (using zsh zsh 5.3 (x86_64-apple-darwin14.5.0), antigen develop)\n```\n$ cat ~/.zshrc\nsource /path/to/antigen.zsh\nantigen use oh-my-zsh\nantigen bundle zsh-users/zsh-syntax-highlighting\nantigen theme agnoster\nantigen apply\n```. The issue comes from Antigen not being able to determine configuration changes (see here).\nDoing antigen-reset should fix it.. Merged.. @sthtodo It's an issue with latest release, specifically this issue.\nLocally I could interactively use it without issue, but I'm gonna take a deeper look.\nThanks for reporting.. Same config as yours:\n\u279c  ~ antigen list\nrobbyrussell/oh-my-zsh ~ lib @ master\nrobbyrussell/oh-my-zsh ~ plugins/git @ master\nrobbyrussell/oh-my-zsh ~ plugins/heroku @ master\nrobbyrussell/oh-my-zsh ~ plugins/pip @ master\nrobbyrussell/oh-my-zsh ~ plugins/lein @ master\nrobbyrussell/oh-my-zsh ~ plugins/command-not-found @ master\nzsh-users/zsh-syntax-highlighting @ master\nrobbyrussell/oh-my-zsh ~ themes/robbyrussell.zsh-theme @ master\n\u279c  ~ zsh --version\nzsh 5.3 (x86_64-apple-darwin14.5.0)\n\u279c  ~. @sthtodo Awesome! Let us know of any issue if you have!. Though it was being unmaintained. Gonna add it to the README together with openSUSE build service.\nThanks for the work maintaining the package!. Done. Updated README.md, added wiki page for Installation options, including Debian package. Thanks for the work maintaining it!\nThis is gonna be released tomorrow as v2.2.1. This actually happens when ~/.antigen  doesn't exists.. I did face this same issue on older zsh versiones and made a hack to avoid it as I could not find the core issue.\nGonna take a look.. Can confirm this happens on 5.0.x (5.1 and above works).. @dmotles Should be fixed in v2.2.1. Thanks for reporting!. Merged.. - changelog is updated manually\n- release notes are created manually\n. - PR is created and closed manually\n- milestone is closed manually. That particular code make themes work with Antigen when they define locals globally. See https://github.com/zsh-users/antigen/issues/122. Doesn't ${0:A:h} works?. A bit of manual testing gave me this:\nantigen.zsh\nif [[ \"$btype\" == \"theme\" ]]; then\n          echo $0\n          pushd \"${line:A:h}\" > /dev/null\ngeometry.zsh-theme\nGEOMETRY_ROOT=${0:A:h}\n  echo $GEOMETRY_ROOT\n  echo ${(%):-%N}\n```\n$ antigen theme fribmendes/geometry\n-antigen-load\n/Users/user/.antigen/bundles/fribmendes/geometry\n(eval)\n``. I see. I believe it should work properly ondevelopbranch and fromv2.1.0` and above.. @JohnStarich Thanks for the contribution!\nI'll take a look tonight and see what's going on with zsh 5.1.1.. Glad you found out the issue!\nNow, there's definitely something going on with locals on older zsh versions. I believe there is a commit with a zsh-workers thread somewhere where the issue is discussed.\nI'm gonna test it a bit and merge right away! Thanks again for the contribution! :+1: . Awesome. That would explain why the issue doesn't  come up in the tests.\nThanks for keeping up with this and sorry I couldn't be more helpful but I'm currently very busy.\nI'll take a look tomorrow.. Well, I'm taking a look right now and it seems it's a fundamental issue with how quoted args are passed between functions. You see when you do antigen bundle <args> these arguments are stored and passed away between multiple functions, including extensions and internal functions.\nWhat I found is happening is that as soon as these arguments are handled by Antigen quotes are missing. One of these places is this one. \n_DEFERRED_BUNDLE+=(\"${(j: :)${@}}\")\n\nIn doing that it missing the original quoting, ie:\nantigen bundle \"/path/to/bundle with spaces\"\n\nTurns into:\nantigen bundle /path/to/bundle with spaces\n\nThis happens in multiple places as this is saved in a structure that looks like this:\nname : to/bundle\nurl      : /path/to/bundle with spaces\ndir      : /path/to/bundle with spaces\nloc      : hr-plugin\nbtype  : plugin\nmake_local_clone: true\n\nThis structure is converted to a key-value argument like this:\n${(kv)bundle}\n\nAlso losing quoting, if any.\nThis one also seems to be causing issues.\nI'll keep working on it a bit. But it seems it's a fundamental issue that needs to be addressed in a more broad perspective.. @JohnStarich Sure thing I'm taking a look at this. Changes probably will fix it long-term.\nPlease leave this PR open as to keep in on the radar. I'll open another one where we can work on.. @aserrallerios Thanks for reporting. I'm taking a look at this.\nIt seems it has to do how the plugin loads it completions (dynamically sourcing them) and how Antigen handles DOCBLOCKS blocks.. It seem the issue is introduced in v2.1.0, previous version v2.0.2 works as expected.. Maybe related to a different issue, as in this one we're taking about completions only.\nYou may try:\n\nremove ~/.antigen/init.zsh\nsource antigenrc rather than using antigen-init\n\nHope that helps.. I'm on vacations right now but in a week I can work on the issue.. Just tried your configs and they seems to work. Try resetting your cache:\nantigen reset\nIf that doesn't work, please share your complete zshrc config and terminal you're using.. Alright, thank you. I haven't access to a beta so I can't help with that. Let me know of any news.. This should not happen with git v2.3 and above (see https://github.com/zsh-users/antigen/commit/e7d6710a75a767f4522c2d23a2f1789d4596af95).\nAlso https://github.com/zsh-users/antigen/wiki/Troubleshooting#asked-for-github-user-and-password-when-installing-bundles.. Mmmm seems to be something with this plugin. Try using antigen from develop.\nBest regards. Take a look here: https://github.com/zsh-users/antigen/wiki/Troubleshooting#my-bundles-wont-update\nIt's intended as per performance issues. We'll review it in the future.. @jguenther You're right. I'll look into this.. I'm addressing this issue in https://github.com/zsh-users/antigen/pull/588. Hopefully will be available in 2.2.2.. What Antigen version are you using?\nantigen version\n\nAnd what zsh version?. @seriousben Thanks! I'm gonna look into this.. @seriousben Take a look if it work this way:\nif [[ \"$(uname)\" =~ \"Darwin\" ]] ; then\n  antigen bundles <<MACOS_BUNDLES\n    osx\nMACOS_BUNDLES\nfi\nI think heredocs do not support indentation in the end block.. Thanks for reporting. I'll take a look at the issue (there is an issue being fixed with this configuration) and I'll release it as 2.2.2.. @yahyavi Not unfortunately. But you can jump onto develop which has a fix right now. It's ready for 2.2.2.. @cstockton As @dotwaffle put it very nicely. It seems it comes from oh-my-zsh configuration rather than Antigen's.. The Antigen configuration variables are fine and the wiki explain them correctly. What is happening is that source $ZSH/oh-my-zsh.sh does uses it's own configuration ZSH_COMPDUMP.\nYou should not source oh-my-zsh when using Antigen, use instead antigen use oh-my-zsh.. Which is your zsh version?\n```\nzsh --version\n```\n. Should be enough with autoload -U is-at-least before loading Antigen. I'll add into to Antigen itself.. Tried with latest version (develop, 2.2.1) and it seems to work as expected:\n```\n \u25b2 ~ cat ~/.zshrc.d/.antigenrc\nantigen use oh-my-zsh\nBundles\nantigen bundles <<EOBUNDLES\n  /tmp/local-plugin\n....\n```\n```\n\u25b2 ~ antigen update\nUpdating tmp/local-plugin@master... Done. Took 0s.\n\u25b2 ~ ls -la /tmp/local-plugin/\ntotal 8\ndrwxr-xr-x    4 dario  wheel    136 Nov 16 15:37 .\ndrwxrwxrwt  811 root   wheel  27574 Nov 16 15:40 ..\ndrwxr-xr-x   12 dario  wheel    408 Nov 16 15:37 .git\n-rw-r--r--    1 dario  wheel     31 Nov 16 15:36 hello.zsh\n``. @sohocoke Cache is generated automatically unless configured not to do so, withANTIGEN_CACHEconfiguration variable, see [here](https://github.com/zsh-users/antigen/wiki/Configuration#customizations). No need to usecache-genmanually.. @sohocoke Antigen auto-expire cache when it detects changes in any config files (take a look at [here](https://github.com/zsh-users/antigen/wiki/Configuration#optimizations) -$ANTIGEN_CHECK_FILES`).\nCurrently in develop it automatically check changes in ~/.zshrc and tries to detect where Antigen is configured (antigen use, antigen bundle, antigen apply). You may configure it with ANTIGEN_CHECK_FILES like this:\ntypeset -a ANTIGEN_CHECK_FILES;\nANTIGEN_CHECK_FILES=(/path/to/.antigenrc /path/to/.zshrc /path/to/other)\n\n. Can reproduce the issue simple with antigen cache-gen. Will look into this.. Hey there @Crandel, @mrmark Sorry for the delay in my response.\nRegarding the original issue. Be sure to put antigen apply at the end of any compdef. Ex:\n```\nautoload compinit && compinit\ncompdef <...> # custom compdef\n...\nantigen use <...>\nantigen bundle <...>\nantigen apply\n```\nBefore trying out these changes remember to antigen reset in order to reset caching and compdefs.. @Crandel Hey there, tried your snippet with the following antigen and zsh version and it worked (it did autocompleted prj and backup commands)\ndc@machine:~% antigen version\nantigen version\nAntigen v2.0.2\ndc@machine:~% zsh --version\nzsh --version\nzsh 5.2 (x86_64-ubuntu-linux-gnu)\ndc@machine:~% uname -a\nuname -a\nLinux machine 4.10.0-33-generic #37-Ubuntu SMP Fri Aug 11 10:55:28 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\nTwo things you can try:\n\nMove . $antigen_source line right after antigen_source=\"$HOME/antigen.zsh\" line\nDisable caching with ANTIGEN_CACHE=false (put this before sourcing Antigen)\n. It should be solved in develop and next release 2.2.2.. Isn't it enough to use:\n\nANTIGEN_RSRC=\"${ANTIGEN_RSRC:-${ADOTDIR:-$HOME/.antigen}/.resources}\"\nWhich defaults ANTIGEN_RSRC to whatever value it set, otherwise fallbacks to ADOTDIR/.resources. This was implemented in #588 and is currently available in develop. Ready for next release 2.2.2.. It seems the issue comes from the fact that it runs on a function scope at two different times. I'll continue to investigate.\nThanks for reporting.. Note taken. I'll add it to the backlog for version 2.3.0.. Added it to the Cookbook wiki section. See here.\nThanks a lot!. @igorvisi You have to put antigen theme before antigen apply command:\n```\n...\nLoad the theme.\nantigen theme igorvisi/fibo-zsh-theme\nantigen apply\n``. Yes, do aantigen resetand open a new shell.. Thank you! :). Checkman zshbuiltins.cdsupports-q` flag:\nIf the -q (quiet) option is specified, the hook  function  chpwd\nand  the  functions in the array chpwd_functions are not called.\nThis is useful for calls to cd that do not change  the  environ\u2010\nment seen by an interactive user.\n\n. @bin101 No problem! :+1: We have a pending issue with aliased commands, in order for this not to happen. I'll review that.. Antigen should work fine with an aliased cd command.. @bin101 I don't think it can be done. I tried doing the following:\n```\ncommand cd ...\n```\nBut it doesn't seems to work. I'll keep an eye on it though.. Hi @adambro Latest stable is 2.0.2, which is the one pointed by git.io/antigen, to get the nightly/develop you can use git.io/antigen-nightly.\nI've to release 2.2.1 or 2.2.2 as stable in a few days.. I'll take a look tonight.. It works on my side. \n```\n\nzsh --version                      \nzsh 5.4.1 (x86_64-redhat-linux-gnu) \n```\n\nYou may try changing antigen bundle robbyrussell/oh-my-zsh lib/ into:\nantigen use oh-my-zsh. Can confirm issue with comdef happens:\ncompdef: unknown command or service: git-diff\nIt seems the issues are with the following plugins:\ngit\ngit-extras\ngitfast. I can't seem to be able to reproduce this anymore on zsh 5.4.1 and zsh 5.3.1.. This seems a variation of #631 . I'm taking a look at this.. Done. Stable as v2.2.2 and gh-pages updated accordingly. . Seems to work OK on 2.2.2/develop.. Glad you got it working! Maybe it was an issue between versions :/. Zsh version? Can you send me the debug.log located in ~/.antigen/?. Also .zshrc/.antigenrc configuration.. Thanks for the info. I'll gonna give it a try.. It worked using this configuration.\nMaybe a custom opt is causing these issues. Have you changed your zshrc?\n```\n[root@antigen ~]# curl -L git.io/antigen-nightly > antigen.zsh                                                                                       \n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current                                                                      \n                                 Dload  Upload   Total   Spent    Left  Speed                                                                        \n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0                                                                       \n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0                                                                       \n100 58503  100 58503    0     0  57796      0  0:00:01  0:00:01 --:--:-- 57796                      \n[root@antigen]~# zsh --version                                                                                                                       \nzsh 5.3.1 (x86_64-redhat-linux-gnu)   \n[root@antigen ~]# cat .zshrc                                                                                                                         \nsetopt nonomatch                                                                                                                                     \nsetopt re_match_pcre                                                                                                                                 \nsetopt EXTENDED_GLOB                                                                                                                                 \nsource $HOME/antigen.zsh                                                                                                                             \nantigen use oh-my-zsh                                                                                                                                  \nantigen bundles <<EOBUNDLES                                                                                                                          \nRobSis/zsh-reentry-hook                                                                                                                              \nthe8/terminal-app.zsh                                                                                                                                \nunixorn/tumult.plugin.zsh                                                                                                                            \nruby                                                                                                                                                 \ngem                                                                                                                                                  \nssh-agent                                                                                                                                            \nbattery                                                                                                                                              \nchruby                                                                                                                                               \nrake-fast                                                                                                                                            \nosx                                                                                                                                                  \nrust    \nbrew\ncargo\ncabal\nvagrant\ntmux\nkitchen\ncolored-man-pages\nTarrasch/zsh-autoenv\nextract\nsvn\nemoji\ngitfast\ngit-extras\naws\ngpg-agent\njsontools\ngolang\nmosh\nsudo\nxcode\npython\npyenv\nvundle\ngnu-utils\nsublime\nbundler\nzsh-users/zsh-autosuggestions\nzsh-users/zsh-completions\nzsh-users/zsh-syntax-highlighting\nzsh-users/zsh-history-substring-search\ntylerreckart/odin\nwesbos/Cobalt2-iterm.git\nEOBUNDLES\nif [[ \"$TERM_PROGRAM\" == \"iTerm.app\" ]]; then\n  antigen theme wesbos/Cobalt2-iterm.git cobalt2.zsh-theme\nelse\n  antigen theme tylerreckart/odin odin.zsh-theme\nfi\nantigen apply\n[root@antigen ~]# zsh                                                                                                                                \nInstalling robbyrussell/oh-my-zsh!...                                                                                                                \nInstalling RobSis/zsh-reentry-hook!...\nInstalling the8/terminal-app.zsh!...\nInstalling unixorn/tumult.plugin.zsh!...\nInstalling Tarrasch/zsh-autoenv!...\nInstalling zsh-users/zsh-autosuggestions!...\nInstalling zsh-users/zsh-completions!...\nInstalling zsh-users/zsh-syntax-highlighting!...\nInstalling zsh-users/zsh-history-substring-search!...\nInstalling tylerreckart/odin!...\nInstalling wesbos/Cobalt2-iterm!...\nOh My Zsh brew plugin:\nWith the advent of their 1.0 release, Homebrew has decided to bundle\n  the zsh completion as part of the brew installation, so we no longer\n  ship it with the brew plugin; now it only has brew aliases.\nIf you find that brew completion no longer works, make sure you have\n  your Homebrew installation fully up to date.\nYou will only see this message once.\n/usr/bin/which: no aws_zsh_completer.sh in (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/root/.antigen/bundles/robbyrussell/oh-my-zsh/$\nib:/root/.antigen/bundles/RobSis/zsh-reentry-hook:/root/.antigen/bundles/the8/terminal-app.zsh:/root/.antigen/bundles/unixorn/tumult.plugin.zsh:/root/$\nantigen/bundles/robbyrussell/oh-my-zsh/plugins/ruby:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/gem:/root/.antigen/bundles/robbyrussell/oh-m$\n-zsh/plugins/ssh-agent:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/battery:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/chruby:/roo$\n/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/rake-fast:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/osx:/root/.antigen/bundles/robbyrusse$\nl/oh-my-zsh/plugins/rust:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/brew:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/cargo:/root/$\nantigen/bundles/robbyrussell/oh-my-zsh/plugins/cabal:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/vagrant:/root/.antigen/bundles/robbyrussell$\noh-my-zsh/plugins/tmux:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/kitchen:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/colored-man$\npages:/root/.antigen/bundles/Tarrasch/zsh-autoenv:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/extract:/root/.antigen/bundles/robbyrussell/oh-\nmy-zsh/plugins/svn:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/emoji:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/gitfast:/root/.ant\nigen/bundles/robbyrussell/oh-my-zsh/plugins/git-extras:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/aws:/root/.antigen/bundles/robbyrussell/oh\n-my-zsh/plugins/gpg-agent:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/jsontools:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/golang:\n/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/mosh:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/sudo:/root/.antigen/bundles/robbyrusse\nll/oh-my-zsh/plugins/xcode:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/python:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/pyenv:/ro\not/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/vundle:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/gnu-utils:/root/.antigen/bundles/robbyr\nussell/oh-my-zsh/plugins/sublime:/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/bundler:/root/.antigen/bundles/zsh-users/zsh-autosuggestions:/ro\not/.antigen/bundles/zsh-users/zsh-completions:/root/.antigen/bundles/zsh-users/zsh-syntax-highlighting:/root/.antigen/bundles/zsh-users/zsh-history-sub\nstring-search:/root/.antigen/bundles/tylerreckart/odin:/root/.antigen/bundles/wesbos/Cobalt2-iterm)\n/root/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/aws/aws.plugin.zsh:source:51: not enough arguments\nroot@antigen:~ \u2192                                                                            \n``. On one partexport GREP_OPTIONS='--color=always'does causes issues. I'll investigate what's the issue withgrep.. @dead10ck Thanks for reporting. I'll look into it tonight!. Can you share your.zshrcand.antigenrcto reproduce this report?. Thanks you. I'll take a look!. It's curious but I can't seem to reproduce this fromv1.4.0forward. Which version are you using Debian's/Ubuntu's version?. I'm closing this as I can't seem to reproduce it.. It's probably a bug, let me look into it.. I'll look at the issue. What's your antigen config?. Thanks gonna take a look at this!. Another quick question. Is that file.zshrc` or some other sourced file?. Tried on a clean install (zsh 5.4.2, antigen 2.2.3) but it seems I can't reproduce it. Tries both OSX and debian.\nroot@7d07be6e5a4b:~# ls -ltra\ntotal 40\n-rw-r--r-- 1 root root  140 Nov 19  2007 .profile\n-rw-r--r-- 1 root root  570 Jan 31  2010 .bashrc\n-rw-r--r-- 1 root root   44 Dec  2 04:11 .gitconfig\ndrwxr-xr-x 1 root root 4096 Dec  2 04:11 .ssh\ndrwxr-xr-x 1 root root 4096 Jan 15 16:16 ..\n-rw-r--r-- 1 root root  687 Jan 15 16:21 .zshrc\n-r--r--r-- 1 root root 1640 Jan 15 16:21 .zshrc.zwc\ndrwxr-xr-x 3 root root 4096 Jan 15 16:21 .antigen\n-rw------- 1 root root  341 Jan 15 16:22 .zsh_history\ndrwx------ 1 root root 4096 Jan 15 16:22 .\nroot@7d07be6e5a4b:~# zsh\n\u279c  ~ pwd\n/root\n\u279c  ~ zsh --version\nzsh 5.4.2 (x86_64-unknown-linux-gnu)\n\u279c  ~ antigen version\nAntigen v2.2.3 (ff391b5)\nRevision date: 2018-01-02 13:19:57 +0100. You may set ANTIGEN_AUTO_CONFIG to false to avoid this behavior.. I see no major issues to add it. May be we can create a config for it ANTIGEN_COMPINIT (as we already have ANTIGEN_COMPDUMP).. Should be compinit for v2.2.3 if there is need for it we may change to compinit -i on v2.4 or greater.. It seems it doesn't like running compinit -i as ANTIGEN_COMPINIT value. I'll rather use ANTIGEN_COMPINIT_OPTS, see the other PR.. Merged in #634. Thanks for looking into this!. Thank you for this fix. Looks great. Disregard the Travis CI fail, it's another issue.. This was fixed with #644. /antigen is for stable releases. /antigen-nightly is for current. 2.2.3 is current, meanwhile 2.2.2 is latest stable.\nAfter a couple of weeks of testing current will be stable.. Thanks for the link. Gonna take a look!. Thanks for reporting this. I'll take a look!. The reason this function among others are not available is those functions are lazy loaded at run time.  With the antigen wrapper function.\nYou should not use any antigen- function, unless you're somehow working with Antigens internals.\nYou may use antigen update instead, and check for antigen command (which antigen).. Can you check this out with 2.2.3? We have worked on similar issue which should be fixed on 2.2.3.. Isn't it ${PREFIX}/share/antigen.zsh? share instead of lib?\n. Bundle is missing 'type' (--btype) argument; which values can be either \"theme\" or \"plugin\". See here and here here.\n. Removing this I think makes Make and other tools fail.\n. Full plugin url should end with .git.. Should be local bundle_url. Review this condition.. Despite being a \"private\" function it should throw an error if \"url\" is not set, otherwise it will end up in -antigen-ensure-repo function..     if [[ -n \"$bundle\" ]]. Rather than this it's probably better to use &>>! as per http://zsh.sourceforge.net/Doc/Release/Redirection.html in line 30.\nLet me know if you're up to it, otherwise I'll do it.. Alright. Thank you.. Remove this comment.. I'd put this under a configuration variable. Adding a note on the changelog/release notes about prezto community fork and what means to -update-remote.. We should move this to a configuration variable, defaulting to https://github.com/zsh-users/prezto.git. So they can easily switch between prezto forks, if needed.. Here we can use same configuration mentioned above.. In the context you mention it doesn't make sense, you're right, I was thinking on current prezto users which will be moved to the community fork.\nNow I see it'll create more confusion, with the prezto repository url config will be enough.. It should be moved inside a function.. May be if (( $#_autoloaded_functions )); then. That's a great suggestion! Thanks!. We're going to drop support for 4.3.5 and 4.3.7 on v2.\nWell, honesty there is little features used that aren't available on 4.3.5/7 (:A:h flags and some hooks IIRC) but zsh 4.3.7 is from 2008 so there is little need to keep support for it.. BTW Thanks for taking a look at this!. Is there a reason for omitting antigen-bundle and antigen-apply? I'd also add antigen-selfupdate.. > Antigen compiles bundles to avoid...\nThis would be my approach. Although I think this probably belongs to the Wiki. A shorter description would be more appropriated for the README.md:\nAntigen caches bundles to provide fast start up times. This functionality may cause issues if you're dynamically loading bundles based on environment variables or other conditionals. For example:\ncase ${TERM} in\nxterm*|rxvt*|Eterm|aterm|kterm|gnome*)\n    antigen theme agnoster\n;;\n*)\n    antigen theme pure\n;;\nesac\n\nIn this scenario you have a couple of options:\n\n\nYou may disable caching with ANTIGEN_CACHE=false. This will affect start up time when you've more than 10 bundles.\n\n\nYou may use cache for the different environments with ANTIGEN_CACHE=$HOME/.antigen/init-${TERM}.zsh for the above example.. This causes issues with themes:\n\n\n```\nInstalling desyncr/void void btype... Error! Activate logging and try again.\n$ \n```\nAs antigen-theme calls antigen-bundle with --btype=theme.\n. Sorry for the slow responses.\nantigen theme desyncr/void void. But I believe any theme should fail to load, the tricky part is it doesn't fail in tests.\nI'm gonna try to give it a look today. Let me know if you found anything.. ",
    "Peeja": "What time invocation are you using to get those results?\n. I know, but what's the command line you're using?  How are you timing zsh boot?\n. Aha, brilliant.\nAnd then make sure to delete it before closing the shell.  :bowtie:\n. By gum, you're right.  I even tried making and loading a bunch of empty plugins, and it didn't slow it down, so it's the contents of the plugins, not Antigen.  Thanks.\n. ",
    "nicoulaj": "See zprof\n. done\n. ",
    "tubbo": "@sharat87 That did it! I upgraded from an earlier version of Antigen and it looks like some improvements were made. I'll be sure to keep this vendored/submoduled in my shell configuration repo in the future, so I can get updates like that. Thanks!\n. @desyncr sorry about the typo, should be OK now.\n. @desyncr check the message for commit https://github.com/zsh-users/antigen/commit/2ae346240e9098e59c8f66f5894349f7371877a3, if i'm right this should work without sudo. probably didn't notice the problem on my machine because i just ran make install and since I did have write access to /usr/local on my machine, I had permission to install.\n. I don't believe so since the script itself is never executed, it's sourced and the function it defines is executed...right?\n- T\nOn Tue, Jan 13, 2015 at 1:45 PM, desyncr notifications@github.com wrote:\n\n:+1: Works alright here. Should antigen.zsh be executable (u+x), though?\nReply to this email directly or view it on GitHub:\nhttps://github.com/zsh-users/antigen/pull/101#issuecomment-69796115\n. \n",
    "linjunpop": "Try antigen-update ?\n. ",
    "jonyamo": "antigen-update returns nothing. The reason is that $_ANTIGEN_BUNDLE_RECORD is not set when I run the commands outside of my .zshrc. But I don't know enough about zsh yet to understand why.\n. I haven't figured out the exact issue yet but I have narrowed it down to the fact that I am using the grml-zsh-config. Grml provides a default .zshrc and any customizations are added via a .zshrc.local file which at some point is sourced in .zshrc. My antigen commands are actually set in .zshrc.local... so, something is happening in .zshrc after that file is sourced which is somehow unsetting $_ANTIGEN_BUNDLE_RECORD. If I remove everything from .zshrc and simply add the antigen commands everything works as it should, including in the shell.\nI am planning on moving away from using the grml-zsh-config, so I am not that concerned, but I'll leave this open in case it is something you want to look into more deeply, otherwise feel free to close this as a non-issue. If your still interested... my zsh version is zsh 4.3.17 and I am running the latest version of antigen.\nThanks for your help thus far.\n. I actually stopped using the grml config, so no more issues. I am constantly changing my setup around and trying out new things so unfortunately I don't even remember how I had things set up at that point. It sounds like I am the only person that ever faced this issue, so it may have just been something weird I was doing... Either way, as far as I am concerned feel free to close this issue. Thanks for your help.\n. ",
    "wrboyce": "Ah, good point! Taking a look at the oh-my-zsh source (I figure the way they do it must be acceptable, given you're basing antigen on it) they first build up the ${fpath} from the supplied plugins, run compinit, then source each plugin.\nWhat're your thoughts on changing antigen-bundle(s) to delay sourcing the scripts until antigen-apply is called, or similar?\n. How about something like this? Seems to work in my very quick testing.\n. Any issue with merging this? I've been using it for a while without issue now\u2026\n. What is the reason for running the compdef calls inside eval?\nRegarding the ${line} issue, perhaps this helps:\n```\nanarki:~% /usr/bin/grep -v '^\\s*$\\|^#' ~/.zshrc\nexport ZSH=$HOME/.zsh\nsource $ZSH/main.zsh\nPATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting\nanarki:~% /usr/bin/grep --version\ngrep (BSD grep) 2.5.1-FreeBSD\n```\nBlank lines! I don't see the harm in the [ ! -z ${line} ] check\u2026\nEDIT: Can you elaborate on compdef calls not being deferred? I've added set -x to the top of my zshrc and the compinit/compdef calls are definitely the last thing executed before my shell is ready.\n. Weird\u2026 I updated the compdef function definition:\ntypeset -a __deferred_compdefs\ncompdef () {\n    echo \"deferring compdef call \\\"${*}\\\"\"\n    __deferred_compdefs=($__deferred_compdefs \"$*\")\n}\nAnd opened a new shell:\nLast login: Wed Mar 13 16:14:45 on ttys008\ndeferring compdef call \"_antigen antigen\"\ndeferring compdef call \"g=git\"\ndeferring compdef call \"_managepy manage.py\"\ndeferring compdef call \"_managepy django\"\ndeferring compdef call \"_managepy django-manage\"\ndeferring compdef call \"_npm_completion npm\"\nanarki:~%\nAnd completion is definitely working:\nanarki:~% g [tab]\nadd                      ci                       diff                     init                     rebase                   show-merges\nalias                    citool                   diffstat                 instaweb                 refactor                 squash\naliases                  cl                       difftool                 lc                       reflog                   st\nam                       clean                    effort                   lg                       release                  stage\namend                    clone                    extras                   licence                  relink                   stash\nannotate                 cm                       feature                  local-commits            remote                   status\napply                    co                       fetch                    log                      rename-tag               suba\narchive                  column                   filter-branch            merge                    repack                   submodule\nback                     commit                   flow                     mergetool                repl                     subtree\nbisect                   commits-since            format-patch             mv                       replace                  summary\nblame                    config                   fresh-branch             name-rev                 request-pull             svn\nbr                       contrib                  fsck                     notes                    reset                    tag\nbranch                   count                    gc                       p4                       revert                   touch\nbug                      cp                       get-tar-commit-id        pat                      review                   undo\nbundle                   create-branch            gh-pages                 pod                      ribbon                   whatchanged\ncatchup                  credential               graft                    pom                      rm                       wt-add\nchangelog                credential-osxkeychain   grep                     prune-all                send-email               wtf\nchanges                  delete-branch            gui                      publish-branch           setup\ncheckout                 delete-submodule         help                     pull                     shortlog\ncherry                   delete-tag               ignore                   push                     show\ncherry-pick              describe                 imap-send                rank-contributors        show-branch\nOut of curiosity\u2026 What version of zsh are you using?\nanarki:~% zsh --version\nzsh 5.0.2 (x86_64-apple-darwin12.2.1)\nAnd should they make a difference:\nanarki:~% setopt\nalwaystoend\nautocd\nautonamedirs\nautopushd\ncdablevars\ncompleteinword\ncorrectall\nextendedglob\nextendedhistory\nnoflowcontrol\nhistexpiredupsfirst\nhistignoredups\nhistverify\nincappendhistory\ninteractive\nkshglob\nlogin\nlonglistjobs\nmonitor\npromptsubst\npushdignoredups\nsharehistory\nshinstdin\nzle\n. > The compinit module is loaded in the -antigen-env-setup, which replaces the compdef function. Try putting a debug echo line in the compdef function, you shouldn't see that message.\nBut why? You don't need to call compinit until antigen-apply, which will then cause compdef to be redefined as the proper function.\n. >  Just so we know its not a zsh bug that's been fixed or something, could you try removing the eval and run compdef right inside the for loop, should it work in zsh5?\nSorry should have been clearer\u2026 that is how I have my antigen.zsh currently. No eval.\nI think you're right, we need to maintain compatibility with zsh 4, if it is a versioning issue.\n. ",
    "svenstaro": "So what's up here?\n. ",
    "neersighted": "On 01/09/2013 07:58 PM, Shrikant Sharat wrote:\n\nDefinitely welcome. As it might be apparent from the code, I have little\nclue on writing zsh scripts. It is written with my knowledge of bash,\nwhich isn't much. Could definitely use the input of someone who knows zsh.\nWhile you do this, I just have a few things I want you to keep in mind,\n- Comments. Shell scripts are known to look very esoteric and this\n  makes comments all the more important. I tried to add as many in the\n  current version. Please document your changes so I and others can\n  understand them. |extended_glob|? I have to read the man page for\n  that now ;)\n- Backwards compatibility. Please prefer this over good code or better\n  implementations. And if this has to be broken, please document it in\n  the readme.\nThat's all off the top of my head. And, good luck :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/zsh-users/antigen/issues/38#issuecomment-12079749.\n\nSure, I'll keep it in mind.\nA note for those who want to know what extended_glob is:\nit's a set of extensions to regular globs (_)! The (unnecessary) usage I\nsaw in antigen: (file_)(which is new, but backwards-incomplatible\nglob syntax) and*.zsh(N).\n\nNeer Sighted (neersighted) neersighted@myopera.com\n[PGP]: AF636755 | neersighted@myopera.com\n  [Website]: http://neersighted.com | http://neersighted.github.com\n. On 01/09/2013 09:10 PM, Shrikant Sharat wrote:\n\nHaha, those glob patterns are taken from the then oh-my-zsh. I don't\nknow if they are still using them. They worked, for the most part, so I\ndidn't bother to fiddle with them since I didn't understand them well\nenough.\nThanks for taking the initiative and looking forward to what you come up\nwith :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/zsh-users/antigen/issues/38#issuecomment-12081017.\n\nThe issue was they broke if you didn't use OMZ (because OMZ wasn't\nenable advanced glob features) :p\n\nNeer Sighted (neersighted) neersighted@myopera.com\n[PGP]: AF636755 | neersighted@myopera.com\n  [Website]: http://neersighted.com | http://neersighted.github.com\n. I attempted to get started, and hit a wall with options parsing. The current arguments parser is brittle and I looked to replace it with zparseopts, but that requires breaking changes.  The real issue is the syntactic sugar :laughing:.  I'll play with it, but for now, I'll just fix bits and bobs to make it faster/less brittle.\n. On 01/09/2013 08:03 PM, Shrikant Sharat wrote:\n\nActually, it is not redundant. The idea is that, if there is a\n|*.plugin.zsh|, Thant that will be the /only/ file to be sourced. Any\nother zsh or sh files will be sourced, if needed, by that plugin zsh\nfile. If there is no such plugin zsh file, then we source all zsh\nscripts. Could you change this?\nOther than that, it looks super.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/zsh-users/antigen/pull/39#issuecomment-12079851.\n\nOkay then. Checking for the (first!) *.plugin.zsh is a crapshoot. In the\nspirit of simplification, why don't I just check for $plugin.plugin.zsh?\n\nNeer Sighted (neersighted) neersighted@myopera.com\n[PGP]: AF636755 | neersighted@myopera.com\n  [Website]: http://neersighted.com | http://neersighted.github.com\n. On 01/09/2013 09:04 PM, Shrikant Sharat wrote:\n\nYes, it is a crapshoot, but no more than trying to reliably figure out\nthe plugin name (|$plugin|). I've been through that and figuring out the\nplugin name from the URL turned out to be quite flaky. I chose to pick\nthe first plugin file and source it, assuming there will only be one\nsuch file. I don't remember the exact reasons I had, but if you can\ncrack it, all the better.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/zsh-users/antigen/pull/39#issuecomment-12080913.\n\nI'll probably strip the plugin name ($loc) at '/':\nzsh-users/zsh-syntax-highlighting => zsh-syntax-highlighting\nAnd then match it with regex:\nfor script in *.plugin.zsh; do\n    if [[ $plugin_name =~ $script ]]; then\n        source $script\n    fi\ndone\n\nNeer Sighted (neersighted) neersighted@myopera.com\n[PGP]: AF636755 | neersighted@myopera.com\n  [Website]: http://neersighted.com | http://neersighted.github.com\n. On 01/09/2013 09:27 PM, Shrikant Sharat wrote:\n\nYou should probably do that with |$url/$loc|, instead of just |$loc|,\ninside |-antigen-load|.\nCome to think of it, when I was trying to get the name, I needed them to\nbe unique. In the current case, we don't need them to be unique. So it\nmight be possible with a simple method.\nAlso, why regex? Wouldn't your initial idea of |$plugin_name.plugin.zsh|\ndo fine?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/zsh-users/antigen/pull/39#issuecomment-12081298.\n\nI guess that works. I had a (what I seem to remember as ) sound reason a\nfew minutes ago though, but I seem to have lost it.\n\nNeer Sighted (neersighted) neersighted@myopera.com\n[PGP]: AF636755 | neersighted@myopera.com\n  [Website]: http://neersighted.com | http://neersighted.github.com\n. ah, the reason was this:\nIf you load a plugin from /, it messes up the parsing:\n/home/neer/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-zsh-users-SLASH-zsh-syntax-highlighting.git//\nbasename spits out https-COLON--SLASH--SLASH-github.com-SLASH-zsh-users-SLASH-zsh-syntax-highlighting.git, so we try to load https-COLON--SLASH--SLASH-github.com-SLASH-zsh-users-SLASH-zsh-syntax-highlighting.git.plugin.zsh.\n. On Fri, Jan 11, 2013, at 07:04 AM, Shrikant Sharat wrote:\n\nI think that won't be a problem if you do basename on $url/$loc, as I\nsaid in my prev. comment. That way, if $loc happens to be /,\nbasename will pick the last entry  in the $url, which should be what\nwe want.\nAlso, are you having any troubles with running the tests? I'd be much\nmore confident of your changes if they passed.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/zsh-users/antigen/pull/39#issuecomment-12147648\n\nYou're right, I'll do that.\nNeer Sighted (neersighted) neersighted@myopera.com\n[PGP]: AF636755 | neersighted@myopera.com\n  [Website]: http://neersighted.com | http://neersighted.github.com\n. Prezto plugins with be supported once I have time to finish #39. If no .plugin.zsh is found, it will source all *.zsh files, including Pezto's init.zsh\n/cc @sharat87 Close please\n. Okay then, I'll add init.zsh to the loading logic.\n. :+1:\n. ",
    "ghost": "this should work, not sure if there isn't a cleaner way to do it\n. I also have the same issue described by @jdkbx, but the workaround with disabling antigen's cache does not solve the issue. For me this issue happened after commit: bca02d7a0b8f86fa01849f833b837c262763a881. Everything works of the themes, except the prompt will not be change.\nExample (using https://github.com/sindresorhus/pure)\nExpected (commit 126bb5bf45869b758180c703f1c7687ad14da839 and earlier)\n~/Programming\n\u276f pwd\n/Users/username/Programming\nActual (commit bca02d7a0b8f86fa01849f833b837c262763a881 and later)\n~/Programming\nusername@host:~/Programming% pwd\n/Users/username/Programming\nSetup\nmacOS 10.12\nzsh 5.2.0\nantigen v1.1.3\nConfig\n```\nAntigen\nsource ~/.antigen/antigen/antigen.zsh\nantigen use oh-my-zsh\nantigen bundle aws\nantigen bundle brew\nantigen bundle common-aliases\nantigen bundle docker\nantigen bundle git\nantigen bundle gradle\nantigen bundle osx\nantigen bundle ssh-agent\nantigen bundle thefuck\nantigen bundle tmux\nantigen bundle unixorn/autoupdate-antigen.zshplugin\nantigen bundle zsh-users/zsh-autosuggestions\nantigen bundle zsh-users/zsh-completions\nantigen bundle zsh-users/zsh-history-substring-search\nantigen bundle zsh-users/zsh-syntax-highlighting\nantigen bundle mafredri/zsh-async\nantigen bundle sindresorhus/pure\nantigen-apply\n```\nTest config 1\n```\nAntigen\nsource ~/.antigen/antigen/antigen.zsh\nantigen bundle mafredri/zsh-async\nantigen bundle sindresorhus/pure\nantigen-apply\n```\nTest config 2\n```\nAntigen\nsource ~/.antigen/antigen/antigen.zsh\nantigen use oh-my-zsh\nantigen bundle mafredri/zsh-async\nantigen bundle sindresorhus/pure\nantigen-apply\n``\n. @desyncr: the strangest thing has happened. Withantigen applyeverything is working again as expected, but withantigen-apply` it does not work anymore. Even with or without cache enabled.\n. ",
    "florian": "Yep, works fine! Thanks :)\n. ",
    "jmatth": "Whoops, I might have been mistaken about how well this works. I think I had the wrong version of grep in my path when I tested it. I'll run the tests after I fix this.\n. Ok, found the main problem. On line 624: grep \"^$name:*?*\". The Solaris grep doesn't have an analogue (that I can find anyway) that allows you to say \"0 or 1 of this pattern\". I managed to fix it by changing \\? to *, but that seems not nice.\nAlso, the function antigen-bundles is probably broken from its use of [[:space:]].\n. Ok, fixed the ? issue by using egrep in that one spot. I can't get the tests to run on solaris, but it's a problem with the version of python we have and not antigen. Actually using antigen works fine.\nI ran the tests on my local linux machine with the new commits and they passed. \n. This is broken because Solaris grep doesn't recognize \\?. Replacing with * fixes it but would allow for multiple consecutive instance of : and ?.\n. ",
    "rummik": "I like it to be honest -- the show off section is really what got me interested in Antigen, and I suspect it's like that for others.  It could be reworded, but yeah, fancy things.\n. ",
    "banyan": "OK!\n. Squashed.\n. > because they are not present in the website\nah, right. anyway thanks for merging! :sushi: \n. ",
    "smdern": "My issue is soo 11 months ago.. Thanks for the link :)\n. ",
    "czchen": "Thank for advise. Now I only do git checkout master when the current branch is (no branch). I assume if the current branch is (no branch), it is a submodule repository instead of normal repository. In this case, git checkout master is necessary because we cannot git pull in (no branch). If the branch is already a named branch, I won't do git checkout master.\nFor test cases, I am still working on it. I will push it when it is okay.\n. ",
    "h17u": "Ok.\nAntigen has worked well according to your direction.\nThanks for your quick response. :)\n. ",
    "acook": "Wow, I totally missed that usage of the theme command. Okay. \nYes, antigen theme https://gist.github.com/3750104.git agnoster does work for me as well. \nThanks to you both.\nI submitted a PR to add this syntax to the doc.\n. ",
    "coreyjewett": "OSX uses BSD's md5 v.s. Linux's md5sum. This should make snapshot work with either toolchain, but I have only tested on OSX.\n. ",
    "djmaze": "Having the same problem (with zsh5). Anyone found a real solution yet? There must be more people experiencing this. \n. ",
    "smackesey": "You are correct-- ZDOTDIR does get set to ~/.antigen/repos. What's strange is that this happens only when opening tmux, not when opening a new shell without tmux. The setting of ZDOTDIR is happening when I call antigen use prezto. Here is the culprit code from antigen.zsh:\n-antigen-use-prezto () {\n    antigen-bundle sorin-ionescu/prezto\n    export ZDOTDIR=$ADOTDIR/repos/\n}\n. ",
    "basxto": "The problem is, you are opening zsh in zsh.\nWhen you normally open zsh, ZDOTDIR is not set, but for the nested zsh antigen set it.\nI just made an:\nln -s ~/.zshrc ~/.antigen/repos/.zshrc\n. ",
    "joshuajabbour": "Blerg. Guess I should've dove deeper into antigen's internals before getting the .zsh-theme proxy added to pure. :( \nThanks for the clarification though! I'll get that removed from pure, and have the readme updated. If you can, it might be helpful to clarify this in your readme, just so others don't make the same mistake in the future.\nThanks!\n. Yeah, I had changed the installation instructions for oh-my-zsh to reference that file. Since the user still needs to symlink or copy the file to make pure work with omz, I don't think the proxy really adds anything.\n. ",
    "fladi": "Thanks, a zsh-antigen package is waiting for it's inclusion in Debian:\nhttps://ftp-master.debian.org/new/zsh-antigen_1-1.html\n. The process for it to enter Ubuntu is as follows:\n1. Debian ftp-masters accept the zsh-antigen package from the NEW queue, where it currently sits, into Debian unstable repositories.\n2. After 10 days in Debian unstable with no new (serious) bugs opened for the package, it will automatically enter Debian testing repositories.\n3. Before their next release, Ubuntu will take a snapshot of all packages in Debian testing, including zsh-antigen, if it has reached testing at this point.\nSadly, the Debian import freeze for Ubuntu 14.04 LTS has already happened on February 6th. So Ubuntu 14.10 would be the first release that will ship the zsh-antigen package.\n. Any chances that we will see a new release tag? There have been quite a few additions since v1.\n. Thanks!\n. I checked my package in the Debian repository and it looks fine. The package in the Ubuntu repository is indeed malformed, which is strange as Ubuntu usually only  copies the packages from Debian SID.\nDebian: 6103b2ec4c5b6665582c8790e4debdac38ab0a10  zsh-antigen_2.2.3-1_all.deb\nUbuntu: a903249e77c5a09a0a3a68c3235b1dfa1713b4a1  zsh-antigen_2.2.3-1_all.deb\nThose two files should be identical. I would guess that something went wrong in their build environment.\nAs I'm no Ubuntu developer I can only redirect this towards the Ubuntu bugtracker itself.. ",
    "HeroCC": "I think the best time for a v2 tag would be when #129 is complete, as it is a lot of code changes and will be a large update to antigen.\n. I was having some troubles with my custom theme that I wasn't having with oh-my-zsh in Antigen and I fixed mine and yours by removing the 'local' in front of the variables. Try copying the theme to a custom directory (to prevent updates), setting Antigen to use that theme, and removing the 'local' in front of the variable names.\nExample:\nlocal _current_dir=\"%{$fg[blue]%}%3~%{$reset_color%} \"\nlocal _return_status=\"%{$fg[red]%}%(?..\u2349)%{$reset_color%}\"\nlocal _hist_no=\"%{$fg[grey]%}%h%{$reset_color%}\"\nShould be:\n_current_dir=\"%{$fg[blue]%}%3~%{$reset_color%} \"\n_return_status=\"%{$fg[red]%}%(?..\u2349)%{$reset_color%}\"\n_hist_no=\"%{$fg[grey]%}%h%{$reset_color%}\"\n. Please, I love antigen but the startup time takes much longer than it did without.\n. Any update on this? My zsh startup time is 6+ seconds, but I love antigen too much to remove it!\n. I decided to use this branch for a little more than a week, and can see no adverse affects, and the startup time has decreased by several seconds. +1 for merge!\n. Found some bugs: I can't add any new bundles if cache is enabled, nor does 'antigen update' work if cache is enabled.\n. Found another bug: when running 'antigen cache-update', I get this error:\n```\nRebuild cache? [y/N] y\ncat: /home/me/.zsh/antigen/.cache//.zcache-meta: No such file or directory\nDone.\nPlease open a new shell to see the changes.\n```\nLooks like there is an extra / in there\n. My dotfiles are here: https://github.com/HeroCC/dotfiles/tree/master/zsh, using the latest version of your fork. Also, after running that command it breaks my next shell; none of the bundles or themes are loaded until I run antigen cache-clear and reload.\n. This may not be the problem but: if you use antigen you should use \"antigen use oh-my-zsh\" and not source it directly. It looks you are executing both, try removing line 26.\n. It has something to do with local variables in themes, antigen doesn't like them. See #122 \n. ",
    "simonweil": "Sure, I too mean opt-in only and really anonymous.\nThe thing is that antigen is so good that it works without any main repository - which is great, the only thing is that for newbies to it (like me) - it's being at lose as to where and how to find plugins and themes...\nTherefore a simple anonymous stat's reporting can gain for the entire community and make antigen more usable and popular which I think it deserves.\nAnother thing is that it's becoming quite popular to collect anonymous data for software, I can tell you of multiple examples (wordpress-seo plugin, ungit, google chrome, and many many more).\nHow about starting with a simple plan:\n1. On update and install request to collect anonymous usage data (with an explanation).\n2. For opted in users, send data about the plugins, themes and framework they use.\n3. Set up a simple site and have the code for the site OS so no one has doubts about the purity of our intentions.\nWhat do you think?\n. I'm not sure either how it would work as a plugin and even if we find a way\nI don't think it would be effective.\nI'll fixup a quick pull request as a starting point for further discussion\n(when you have the time).\n\u05d1\u05ea\u05d0\u05e8\u05d9\u05da 18 \u05d1\u05d0\u05e4\u05e8 2014 08:03, \"Shrikant Sharat\" notifications@github.com \u05db\u05ea\u05d1:\n\nI created the \"In the wild\" wiki page for the purpose that new comers can\ngo look at some existing configurations and find some interesting plugins.\nBut, not a lot of people contributed to it.\nI suppose this is a good idea. I'd imagine the model might be something\nlike Sublime Text's package control site https://sublime.wbond.net/\nwhich\nlists the popular packages.\nThe plan sounds good. Any chance this can work out as an antigen plugin, a\nbundle in itself? In that case, opting-in would mean adding that bundle to\nyour zshrc. Not sure if that's a good idea, if at all possible.\nI'm a bit packed right now though, might be a month before I can spare time\non this.\n\n:shrikant-sharat (m +91 98674 888_42_)\nOn Wed, Apr 16, 2014 at 10:46 PM, Simon Weil <notifications@github.com\n\nwrote:\nSure, I too mean opt-in only and really anonymous.\nThe thing is that antigen is so good that it works without any main\nrepository - which is great, the only thing is that for newbies to it\n(like\nme) - it's being at lose as to where and how to find plugins and\nthemes...\nTherefore a simple anonymous stat's reporting can gain for the entire\ncommunity and make antigen more usable and popular which I think it\ndeserves.\nAnother thing is that it's becoming quite popular to collect anonymous\ndata for software, I can tell you of multiple examples (wordpress-seo\nplugin, ungit, google chrome, and many many more).\nHow about starting with a simple plan:\n1. On update and install request to collect anonymous usage data (with an\nexplanation).\n2. For opted in users, send data about the plugins, themes and framework\nthey use.\n3. Set up a simple site and have the code for the site OS so no one has\ndoubts about the purity of our intentions.\nWhat do you think?\n\nReply to this email directly or view it on GitHub<\nhttps://github.com/zsh-users/antigen/issues/82#issuecomment-40626091>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/zsh-users/antigen/issues/82#issuecomment-40787071\n.\n. :+1:\n. \n",
    "DArtagan": "A different approach to stats is by sourcing github dotfiles and such.  Your ideas/possible motivations here remind me of: http://vimawesome.com/\nThe concept seems relevant, just bringing it to attention.\n. ",
    "bedge": "I ended up doing this, which feels plain ugly, but it works.\nfor f in /usr/local/share/zsh/site-functions/_* ; do\n    source $f\ndone\n. ",
    "importjake": "@GUIpsp Done.\n. ",
    "eggcaker": "sorry , my bad , just double checked my all configurations file, found one file overwrite the PS1.\nit's works after remove that.\n. ",
    "matschaffer": "Ah... looks like the apply lets things like git completions work, but breaks local file completions. At least for commands I don't have plugins for (e.g., dpkg).\nIs there a way to get it to default to local file paths?\n. ls works. It's stuff that's a little outside normal (like dpkg that I mentioned, I'm on an OS X host using dpkg to examine build results). Here's what happens if I have a blank zshrc and start adding antigen components manually:\nlocalhost% dpkg workspace/                        # tab completed\nlocalhost% source \"$HOME/.antigen/antigen/antigen.zsh\"\nlocalhost% dpkg workspace/                        # tab completed\nlocalhost% antigen apply\nlocalhost% dpkg wo                        # won't tab complete\n. Btw, I think I found what's causing this. I don't think it's antigen but rather what zsh does once antigen makes everything context aware. This post has details on how to set up an alternate key press for file based completion regardless of command context.\n. ",
    "clinta": "I want to reopen this because I'm seeing the same thing, but it's affecting ls and cd commands for me. I'm running antigen on zsh 5.0.6 on cygwin.\nlocalhost% ls dotfiles                                       #Tab complete works\nlocalhost% source antigen/antigen.zsh\nlocalhost% ls dotfiles                                      #Tab complete still works\nlocalhost% antigen apply\nlocalhost% ls dot                                            #Tab complete doesn't work anymore\nThis is without any plugins loaded at all, just running apply breaks tab completion.\n. Nevermind, this was a cygwin issue, solved by doing this:\nhttp://blog.en.edaro.net/2014/01/fix-broken-autocompletion-with-zsh-in.html\n. ",
    "orschiro": "@sharat87 \nThank you for your response. To summarise, my current zshrc cannot be further simplified. \nThat's good to know as I had the feeling that I have overcomplicated my source file.\n. ",
    "willghatch": "Yeah, I agree it would be better as a first check. I'll make the code and readme changes tonight after I get off work. Thanks.\nOn November 3, 2014 9:44:44 AM MST, Shrikant Sharat notifications@github.com wrote:\n\nAlso, could you update the README to reflect this change? (or I'll do\nit, no issues). Thanks.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/zsh-users/antigen/pull/92#issuecomment-61507215\n\n\nSent from my pocket computer with a free/libre mail client\n. I changed the commit so that it does the file check first, replacing the btype check, I updated the readme in another commit, and I removed the btype parameter from the -antigen-load function, since now it is unnecessary -- if the type is plugin, the path will already have been changed by the function that calls -antigen-load, so it will be sourced by virtue of the location pointing to a file.  So now there is an added feature and simpler logic.\n. I saw that removing the btype arg broke some tests, so I fixed that and rebased it into one commit.  This should be in good shape to pull now.\n. ",
    "Treggats": "I currently don't have the problem anymore, I've reinstalled my system. Some weird things were going on.\nBut if I remember correctly, inside tmux $0 said '-zsh' and outside tmux it was 'zsh'\n. ",
    "tomsihap": "I've had this issue many times, even after reinstalling my system... and doing the same mistakes. \nHere's what I've found : \nHere is my .zshrc file. You can see that the path are a mess (mainly because lot of copy-paste without really looking what I was doing by the time). By removing (actually, commenting) the lines that was written twice, I don't have the dirname issue anymore. \n```\nPath to your oh-my-zsh installation.\nexport ZSH=/Users/tomsihap/.oh-my-zsh\nexport PATH=/usr/local/bin:/usr/local/sbin:$PATH\nexport PATH=/usr/local/bin:$PATH\nexport PATH=$(brew --prefix)/bin:$PATH\nexport PATH=/Users/tomsihap/anaconda/bin:$PATH\nexport PATH=~/.composer/vendor/bin:$PATH\nexport PATH=~/anaconda/bin:$PATH\nexport PATH=$PATH:$HOME/anaconda/bin\nexport PATH=/Users/tomsihap/anaconda/bin/\n```\n(Oh crap, this looks ugly. TL;DR : this is not an exemple)\nSolution : Clean your path in your .zshrc file and don't just copy/paste what you're told in tutorials but think a little bit more about your own configuration\n. ",
    "unixorn": "No problem, real life has an ugly habit of burning time :-)\n. ",
    "wangyandong-ningxia": "Close for fixing the CI error.\n. Actually _ANTIGEN_INSTALL_DIR is not available after antigen.sh is evaluated:\n```\nwangyandong@wangyandong-osx ~\n\u00bb echo $_ANTIGEN_INSTALL_DIR                                                                                        1 \u21b5\nwangyandong@wangyandong-osx ~\n\u00bb\n```\n\u00bb cd $_ANTIGEN_INSTALL_DIR  will navigate to the home directory.\n. I've found the problem of my dotfiles. It's not  antigen's issue.\n. Actually _ANTIGEN_INSTALL_DIR is not available after antigen.sh is evaluated:\n```\nwangyandong@wangyandong-osx ~\n\u00bb echo $_ANTIGEN_INSTALL_DIR                                                                                        1 \u21b5\nwangyandong@wangyandong-osx ~\n\u00bb\n```\n\u00bb cd $_ANTIGEN_INSTALL_DIR  will navigate to the home directory.\n. Thanks for your reply.\nI add the debug line within the antigen-selfupdate function itself\nantigen-selfupdate () {\n    echo \"==> $_ANTIGEN_INSTALL_DIR\"\n    ( cd $_ANTIGEN_INSTALL_DIR\n        if [[ ! ( -d .git || -f .git ) ]]; then\n            echo \"Your copy of antigen doesn't appear to be a git clone. \" \\\n                \"The 'selfupdate' command cannot work in this case.\"\n            return 1\n        fi\n...\nand it still gives the same error\nwangyandong@wangyandong-osx ~\n\u00bb antigen selfupdate                                                                                                1 \u21b5\n==>\nYour copy of antigen doesn't appear to be a git clone.  The 'selfupdate' command cannot work in this case.\n. I'm not using tmux now.\necho $0\necho $(dirname \"$0\")\ngives expected results\n/Users/wangyandong/.antigen/antigen.zsh\n/Users/wangyandong/.antigen\nI think I've found the problem.  antigen.sh is sourced within a function I defined in my dotfiles. After moving the source /<path_to_antigen>/antigen.sh line out of the function, it works fine now.\nThank you.\n. ",
    "wonmin82": "This code could resolve zsh-users/antigen#97.\n. Agreed. I've added prefix to the variable name. Thank you for the review.\n. Can anyone merge this PR? If there is no problem..\n. Thanks for looking this.\nI've confirmed this issue had fixed in develop branch.. ",
    "pedromaltez": "Thanks for looking into this! It was killing me that I was setting the variable but nothing was happening.\n. ",
    "JonathanReeve": "I'm getting these same errors on Ubuntu 14.10. \n```\n\nzsh --version                                                                                   \nzsh 5.0.2 (x86_64-pc-linux-gnu)\nenv | grep ANTI                                                                                \nANTIGEN_DEFAULT_REPO_URL=https://github.com/robbyrussell/oh-my-zsh.git\n```\n. Not with me either. I switched to zgen.\n. \n",
    "meling": "Nope, not on my end. I gave up antigen and went back to oh-my-zsh.\n. ",
    "ZeroKnight": "Just stumbled upon this project and I really like the idea. Currently using OMZ and quite like it, and have indeed learned a fair deal about zsh because of it, but the plugin setup is a bit of a mess...\nI'll help out in any way I can. Once I have time to familiarize myself with antigen I'll definitely try and help improve it :)\n. ",
    "firegore": "Nevermind, got it fixed\n. @stardiviner did you have grml-zsh-config installed?\n. @stardiviner it replaces the PS1 Variable, i have it installed, you just need to go into the: /etc/zsh/zshrc and delete the following line:\nshould be Line 2346:\ngrml_prompt_addto PS1 \"${left_items[@]}\"\nRemember to delete the Line after every Update of the Package\nthen the Themes will work :)\n. It does this because the PS1 Variable is need e.g. for themes, the PS1 \nVar represents the Shell of your Console ([hostname#] or similar)\ni dont think it's a Bug, both edit the ZSH Theme, so they are not that \ncompatible.\ni like the grml-zsh-config because it has one Feature i dont remember \nnow, but i wanted it so badly, that on every grml update, i edit the \nconfig file on all of my Servers^^\nOn 06/22/2015 03:00 AM, stardiviner wrote:\n\nWhy grml will replace this? should we post a issue to grml? I deleted \nthe grml package.\n@firegore https://github.com/firegore and Thanks.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/zsh-users/antigen/issues/105#issuecomment-113975434.\n. \n",
    "stardiviner": "My theme is not working too. and including every theme in oh-my-zsh. \nAnd I'm also using Arch Linux, with Zsh 5.0.7.\n@firegore do you know how to fix it?\n. you're right, after remove the package grml-zsh-config, my problem is solved. weird. What does the grml-zsh-config did?\n. Why grml will replace this? should we post a issue to grml? I deleted the grml package.\n@firegore and Thanks.\n. ",
    "offbyone": "FYI, with some docker mucking about, I think I've confirmed that <5 doesn't work properly (it has some issues in the code that reports on bundle updating) but 4.2.0 mostly works.\n. ",
    "pearofducks": "I'd think a change in the theme files from prezto is needed. Quite a lot of prezto specific functionality is defined, and antigen tends to be closer to stock zsh.\n. ",
    "gerrywastaken": "@hostmaster Yeah I tried the exact same command. :(\nI love how it reduces directories other than the current down to one character. I wish that were possible with antigen.\n. ",
    "bolasblack": "@desyncr \n- Your idea is\nempty the `$loc` if it is a slash, then append it to `$location`\n\n\n\nMy idea is\nif the $loc is a slash, then do not append it to $location\n\n\nI think we will get the same result, isn't it? :)\n. @sharat87 :)\n. ",
    "blueyed": "@desyncr \nHmm, the file itself starts with an underscore?!\n(https://github.com/blueyed/hub/blob/improve-zsh-completion/etc/_hub)\nDo you mean the code should not look for #compdef, but for if the filename starts with an underscore?!\nIn my opinion it's more reliable to check for #compdef.\n. ",
    "bb010g": ":+1:\n. What do you all think of putting in a link to Tarrasch/zsh-autoenv instead? It contains the fix from sharat87/autoenv and is zsh-optomized.\n. ",
    "WhyNotHugo": "Also the same plugins and theme (plus a few extras) loaded via simply using oh-my-zsh straight from my .zshrc:\n$ time zsh\nzsh  0.07s user 0.03s system 95% cpu 0.106 total\n. ",
    "priyadarshan": "If you have the chance, would you mind trying the same set of plugins using zgen?\n. Very interesting, thank you. I tried to test it, but it seems it is bound to your particular dotfiles repo. I wanted to try your repo, but it looks like it is tweaked for OS X (I saw you mention homebrew?)\nI am running on FreeBSD 10.1 with KDE. Prezto runs fine, but I find it too restrictive. That is why I would like to use antigen, as long as it was speedier.\n. ",
    "ijcd": "Antigen does work each time to make sure your modules are up to date. I have a work around that allows you to cache things similar to how zgen does it (I created this before zgen exsited).\nhttps://github.com/ijcd/dotfiles/blob/antigen/antigen/antigen_demo.zsh\n. I\"m not sure that's a full working copy... just an outline of what one would need to do to make this work in antigen. I don't see anything tied to my dotfiles. It should work as long as you have the ENV vars defined correctly.\n. ",
    "outcoldman": "It seems like that the actual problem is how -antigen-parse-args function is implemented. I think it takes about 50% of load time.\n. You can check my pull request https://github.com/zsh-users/antigen/pull/141\nI made antigen to load faster in 4x times. This pull request make it load 2x times faster. The other step described in the pull request comment gives me another 2x times. So instead of 2.2 seconds I have now 0.6 sec. \n. Solution is simple - use https://github.com/tarjoilija/zgen\nI switched to it a while ago. \n. Just a note, another way to get 50% improvement is to avoid using -antigen-parse-args at all. For example in my own .zshrc I specified function right after source ./antigen/antigen.zsh\n```\n    antigen-fbundle() {\n        local loc=$1\n        local url=${2:-$ANTIGEN_DEFAULT_REPO_URL}\n        local make_local_clone=${3:-true}\n        local btype=${4:-plugin}\n        if $make_local_clone; then\n            -antigen-ensure-repo $url\n        fi\n    _ANTIGEN_BUNDLE_RECORD=\"$_ANTIGEN_BUNDLE_RECORD\\n$url $loc $btype\"\n    _ANTIGEN_BUNDLE_RECORD=\"$_ANTIGEN_BUNDLE_RECORD $make_local_clone\"\n\n    -antigen-load \"$url\" \"$loc\" \"$make_local_clone\"\n}\n\n```\nAfter that I use simplified syntax of\n```\nantigen use oh-my-zsh\n\nantigen-fbundle plugins/bower\n#... other plugins\n\n# load from url\nantigen-fbundle / https://github.com/Tarrasch/zsh-autoenv.git\n\n# load from local locations (my own plugins)\nantigen-fbundle / ./plugins/aliases false\n\n# Load plugin\nantigen-fbundle powerlevel9k.zsh-theme https://github.com/bhilburn/powerlevel9k.git\n\nantigen apply\n\n```\n. @desyncr sure, it make sense, I don't want to change the syntax, this is why I just mentioned that it can be another way to improve performance. \nThis pull request is only about avoiding unnecessary using -antigen-parse-args in internal calls.\nWe definitely need to fix -antigen-parse-args, as it makes antigen load in 4x times slower. As a proposal we can make it less generic and work only for antigen bundle (including all other alternatives, like use or theme). \n. @forivall looking on the history of commits it seems like that original maintainer @sharat87 is looking on patches once in a month, so we just need to have a little bit of patience. Could you reopen your pull request as it can be very useful for all antigen users.\n. ",
    "silasdavis": "Any chance of getting this merged? I would love to be able to start using antigen but the load time is a killer, even with no plugins.\nI'm seeing an order of magnitude slowdown as compared to plain oh-my-zsh with the same plugins:\n``` bash\nWith antigen\n$ time zsh -ic exit\nzsh -ic exit  0.34s user 0.15s system 44% cpu 1.110 total\nWithout antigen\n$ time zsh -ic exit\nzsh -ic exit  0.08s user 0.02s system 84% cpu 0.118 total\n```\nSo would be nice to have parity with vanilla oh-my-zsh... I'll try to find time to have a look myself.\n. I was seeing this with a gcloud install without antigen and I fixed it by moving the gcloud lines above the oh-my-zsh declarations - I think the kubectl plugin doesn't load if it can't find the command.\nSince I switched to antigen the issue has returned.. ",
    "blairham": "Sadly I agree with @outcoldman. This is a dead project. I ended up forking it and merging this in my fork for now\n. I've been using this branch for sometime now, no problems can we get this merged in?\n. This looks to be a dead project, time to clone and branch it into a new one.\n. Thanks @forivall ;) I feel your frustration on this project. it's been working fine but the lack of activity on it bothers me. I hadn't switched yet as I really like how antigen works. \n. ",
    "pgib": "Ah, I think I see the issue:\n$ curl -I https://raw.github.com/zsh-users/antigen/master/antigen.zsh\nHTTP/1.1 301 Moved Permanently\nDate: Fri, 27 Mar 2015 18:14:28 GMT\nServer: Apache\nLocation: https://raw.githubusercontent.com/zsh-users/antigen/master/antigen.zsh\nAccept-Ranges: bytes\nVia: 1.1 varnish\nAge: 0\nX-Served-By: cache-lax1422-LAX\nX-Cache: MISS\nX-Cache-Hits: 0\nVary: Accept-Encoding\nUsing curl -L which you have in the README will follow the redirect, but I've tried with curl both on Mac OS X Yosemite (7.37.1) and FreeBSD (7.40.0), and running curl https://raw.github.com/zsh-users/antigen/master/antigen.zsh just gives empty output (no redirect follow).\n. ",
    "dasJ": ":+1:\n. ",
    "nedludd": "Ah, I figured it out.  I have ls aliased, so line 353 (in 7860ce7):\n<(ls -d \"$ADOTDIR/repos/\"* | sort -u))\"\nDoes not return properly. Added the path /bin/ls and it worked properly.\n. ",
    "michel-slm": "@desyncr I'm having the same problem here (but cleanup succeeds in deleting the repos that are actually in use):\n```\n~\n\u276f antigen cleanup\nYou have clones for the following repos, but are not used.\n  https://github.com/mafredri/zsh-async.git/\n  https://github.com/rimraf/k.git/\n  https://github.com/robbyrussell/oh-my-zsh.git/\n  https://github.com/sindresorhus/pure.git/\n  https://github.com/zsh-users/zsh-history-substring-search.git/\nDelete them all? [y/N] \nNothing deleted.\n~\n\u276f ls ~/.antigen/repos\nhttps-COLON--SLASH--SLASH-github.com-SLASH-mafredri-SLASH-zsh-async.git/\nhttps-COLON--SLASH--SLASH-github.com-SLASH-rimraf-SLASH-k.git/\nhttps-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh.git/\nhttps-COLON--SLASH--SLASH-github.com-SLASH-sindresorhus-SLASH-pure.git/\nhttps-COLON--SLASH--SLASH-github.com-SLASH-zsh-users-SLASH-zsh-history-substring-search.git/\n~\n\u276f alias ls\nls='ls -F --color=tty --show-control-chars'\n~\n\u276f unalias ls\n~\n\u276f antigen cleanup\nYou don't have any unidentified bundles.\n```\n. Looking forward to this, especially mercurial support\n. ",
    "knakayama": "Sorry for my poor English.\n\nNot sure if it make sense to merge it though, as it doesn't seem to serve the same purpose the 'list' command was thought for \n\nI think the purpose is responsible for the list subcommand itself, not the option to the subcommand. It makes sense that the original meanings can be changed by the option, to me. Is it just me only? I can't explain properly, but I can see the statement list path is a native English.\nWell, I have another approach, adding path subcommand. But there is a minus point. It is too exaggerative ;)\n. @desyncr \nThanks for your review. I decide to create zsh plugin for this purpose, so I close this PR.\n. @desyncr \nThanks. I add --btype completion.\n. ",
    "forivall": "I've found two issues with this:\n- [1] using sed -i sometimes changes the permissions on paths with special permissions (ACLS). The following diff will fix it.\n  https://gist.github.com/forivall/6adac9776b478f4f2d87\n  This could also be fixed by exposing the _ANTIGEN_CACHE_MINIFY option, or by not using the -i sed option.\n- [2] Plugins that source via relative paths are broken. I'd fix it by caching the file referenced with the source if it's a static source, and if there are dynamic sources, create a function that will intercept the source and change to the plugin's original directory before running source.\n. I also wrote a patch to fix the second issue: https://gist.github.com/forivall/1f52f579a5f2340b964f\n. 1. In my case, it occurs because I have my antigen directory on an NTFS partition with a .NTFS-3g/UserMapping file, which allows NTFS-3g to translate the windows ACLs to Unix ACLs. Below is a simple test case demonstrating the issue, but it'll take some research into manually setting the posix acl to get travis & other people to have a setup to demonstrate this.\n2. No. When $0 is used from a sourced script, it refers to the script's location. When it's used from the cached location, it refers to the cache file. It works perfectly from master, and -antigen-load is not the cause of the problem. With the cache, any use of $0 is broken.\nExample of sed bug:\n$ chmod 644 requirements.txt\n$ ls -l requirements.txt\n-rw-r--r-- 1 forivall users 10 Jun 13 17:30 requirements.txt\n$ strace sed -i s/cram/cram/g requirements.txt\nexecve(\"/usr/bin/sed\", [\"sed\", \"-i\", \"s/cram/cram/g\", \"requirements.txt\"], [/* 75 vars */]) = 0\nbrk(0)                                  = 0xf3b000\naccess(\"/etc/ld.so.preload\", R_OK)      = -1 ENOENT (No such file or directory)\nopen(\"/etc/ld.so.cache\", O_RDONLY|O_CLOEXEC) = 3\nfstat(3, {st_mode=S_IFREG|0644, st_size=336641, ...}) = 0\nmmap(NULL, 336641, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7faee09ea000\nclose(3)                                = 0\nopen(\"/usr/lib/libacl.so.1\", O_RDONLY|O_CLOEXEC) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\300 \\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0644, st_size=35384, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faee09e9000\nmmap(NULL, 2130592, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7faee0613000\nmprotect(0x7faee061b000, 2093056, PROT_NONE) = 0\nmmap(0x7faee081a000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7000) = 0x7faee081a000\nclose(3)                                = 0\nopen(\"/usr/lib/libc.so.6\", O_RDONLY|O_CLOEXEC) = 3\nread(3, \"\\177ELF\\2\\1\\1\\3\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0\\260\\10\\2\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=1979984, ...}) = 0\nmmap(NULL, 3807760, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7faee0271000\nmprotect(0x7faee040a000, 2093056, PROT_NONE) = 0\nmmap(0x7faee0609000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x198000) = 0x7faee0609000\nmmap(0x7faee060f000, 14864, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7faee060f000\nclose(3)                                = 0\nopen(\"/usr/lib/libattr.so.1\", O_RDONLY|O_CLOEXEC) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0>\\0\\1\\0\\0\\0`\\24\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=18736, ...}) = 0\nmmap(NULL, 2113912, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7faee006c000\nmprotect(0x7faee0070000, 2093056, PROT_NONE) = 0\nmmap(0x7faee026f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3000) = 0x7faee026f000\nclose(3)                                = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faee09e8000\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faee09e7000\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faee09e6000\narch_prctl(ARCH_SET_FS, 0x7faee09e7700) = 0\nmprotect(0x7faee0609000, 16384, PROT_READ) = 0\nmprotect(0x7faee026f000, 4096, PROT_READ) = 0\nmprotect(0x7faee081a000, 4096, PROT_READ) = 0\nmprotect(0x610000, 4096, PROT_READ)     = 0\nmprotect(0x7faee0a3d000, 4096, PROT_READ) = 0\nmunmap(0x7faee09ea000, 336641)          = 0\nbrk(0)                                  = 0xf3b000\nbrk(0xf5c000)                           = 0xf5c000\nopen(\"/usr/lib/locale/locale-archive\", O_RDONLY|O_CLOEXEC) = 3\nfstat(3, {st_mode=S_IFREG|0644, st_size=3099952, ...}) = 0\nmmap(NULL, 3099952, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7faedfd77000\nclose(3)                                = 0\nopen(\"/usr/lib/charset.alias\", O_RDONLY|O_NOFOLLOW) = -1 ENOENT (No such file or directory)\nopen(\"/usr/lib/gconv/gconv-modules.cache\", O_RDONLY) = -1 ENOENT (No such file or directory)\nopen(\"/usr/lib/gconv/gconv-modules\", O_RDONLY|O_CLOEXEC) = 3\nfstat(3, {st_mode=S_IFREG|0644, st_size=56095, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faee0a3c000\nread(3, \"# GNU libc iconv configuration.\\n\"..., 4096) = 4096\nread(3, \"1002//\\tJUS_I.B1.002//\\nmodule\\tJUS\"..., 4096) = 4096\nread(3, \"ISO-IR-110//\\t\\tISO-8859-4//\\nalias\"..., 4096) = 4096\nread(3, \"\\t\\tISO-8859-14//\\nalias\\tISO_8859-1\"..., 4096) = 4096\nread(3, \"IC-ES//\\nalias\\tEBCDICES//\\t\\tEBCDIC\"..., 4096) = 4096\nread(3, \"DIC-CP-ES//\\t\\tIBM284//\\nalias\\tCSIB\"..., 4096) = 4096\nread(3, \"//\\nalias\\tCSIBM864//\\t\\tIBM864//\\nal\"..., 4096) = 4096\nread(3, \"BM939//\\nmodule\\tIBM939//\\t\\tINTERNA\"..., 4096) = 4096\nread(3, \"EUC-CN//\\nalias\\tCN-GB//\\t\\t\\tEUC-CN/\"..., 4096) = 4096\nread(3, \"T//\\nmodule\\tISO-2022-CN-EXT//\\tINT\"..., 4096) = 4096\nread(3, \"//\\t\\tISO_5428//\\nalias\\tISO_5428:19\"..., 4096) = 4096\nread(3, \"CII-8\\t1\\n\\n#\\tfrom\\t\\t\\tto\\t\\t\\tmodule\\t\\tc\"..., 4096) = 4096\nbrk(0xf7d000)                           = 0xf7d000\nread(3, \"\\tfrom\\t\\t\\tto\\t\\t\\tmodule\\t\\tcost\\nalias\\t\"..., 4096) = 4096\nread(3, \"712//\\t\\tINTERNAL\\t\\tIBM12712\\t\\t1\\nmod\"..., 4096) = 2847\nread(3, \"\", 4096)                       = 0\nclose(3)                                = 0\nmunmap(0x7faee0a3c000, 4096)            = 0\nopen(\"requirements.txt\", O_RDONLY)      = 3\nioctl(3, TCGETS, 0x7ffc5e5d6db0)        = -1 EINVAL (Invalid argument)\nfstat(3, {st_mode=S_IFREG|0644, st_size=10, ...}) = 0\numask(0700)                             = 022\ngetpid()                                = 20309\nopen(\"./sedlgUolu\", O_RDWR|O_CREAT|O_EXCL, 0600) = 4\numask(022)                              = 0700\nfcntl(4, F_GETFL)                       = 0x8002 (flags O_RDWR|O_LARGEFILE)\nfstat(3, {st_mode=S_IFREG|0644, st_size=10, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faee0a3c000\nread(3, \"cram==0.6\\n\", 4096)            = 10\nfstat(4, {st_mode=S_IFREG, st_size=0, ...}) = 0\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7faee0a3b000\nwrite(4, \"cram==0.6\\n\", 10)             = 10\nread(3, \"\", 4096)                       = 0\nfchown(4, 1000, 100)                    = 0\nfgetxattr(3, \"system.posix_acl_access\", \"\", 132) = 0\nfstat(3, {st_mode=S_IFREG|0644, st_size=10, ...}) = 0\nfsetxattr(4, \"system.posix_acl_access\", \"\\2\\0\\0\\0\\1\\0\\6\\0\\377\\377\\377\\377\\4\\0\\4\\0\\377\\377\\377\\377 \\0\\4\\0\\377\\377\\377\\377\", 28, 0) = 0\nclose(3)                                = 0\nmunmap(0x7faee0a3c000, 4096)            = 0\nclose(4)                                = 0\nmunmap(0x7faee0a3b000, 4096)            = 0\nrename(\"./sedlgUolu\", \"requirements.txt\") = 0\nclose(1)                                = 0\nclose(2)                                = 0\nexit_group(0)                           = ?\n+++ exited with 0 +++\n$ ls -l requirements.txt                \n---------- 1 forivall users 10 Jun 13 17:36 requirements.txt\nIt's true, it's more of a sed bug, but it's one we have to expect. Try googling for it, I'm not making it up :stuck_out_tongue_closed_eyes: . The other solution would be to not use the -i flag.\n. are you kidding me? the sed issue is fixed by one line.\n. @desyncr do you not understand what chmod is?\nAnyways, the other workaround would be to add the _ANTIGEN_CACHE_MINIFY option.\n. @HeroCC I'd recommend switching to zgen. It's pretty easy.\n. I'm on 5.0.8 on Arch Linux and it works fine.\n. Whoops, that was supposed to be\n\nThis may alleviate the need for #129.\n\nYeah, it doesn't have anything to do with completion.\nI load ~22 bundles.\nHere's the performance difference on cygwin\n```\n$ zsh --version\nzsh 5.0.7 (i686-pc-cygwin)\nmaster\n$ time zsh\nzsh  2.65s user 6.69s system 86% cpu 10.812 total\nperformance-improvements\n$ time zsh\nzsh  0.76s user 1.29s system 74% cpu 2.764 total\n```\nDifference on linux\n```\n$ zsh --version\nzsh 5.0.8 (x86_64-unknown-linux-gnu)\nmaster\n$ time zsh\nzsh  0.71s user 0.17s system 49% cpu 1.793 total\nperformance-improvements\n$ time zsh\nzsh  0.66s user 0.10s system 73% cpu 1.030 total\n```\n. I didn't say that it would alleviate the need for cache, I was just pondering if it would. Also, the cache branch isn't ready, and requires user intervention to get it to work (currently), will require cache invalidation, etc.. This is a much smaller, simpler, less complex change, and it does provide a significant performance increase, especially when lots of bundles are used.\nTo compare, here is the difference in time provided by caching on my system:\n```\nFirst time (build cache)\n$ time zsh\nzsh  0.67s user 0.14s system 44% cpu 1.822 total\nSecond time (load cache)\n$ time zsh\nzsh  0.63s user 0.08s system 79% cpu 0.886 total\n```\nSo, you can see, even on linux, my patch does lessen the need for caching; caching only provides a 15% speed increase over my performance-improvements.\n. @desyncr I hadn't pushed my changes yet. It does use the cache. Check again.\n. It behaves exactly the same. I changed my dotfiles to use antigen bundles, and the performance is exactly the same as shown above:\n```\nperformance-improvements\n$ time PERF_TEST=y zsh\nPERF_TEST=y zsh  0.67s user 0.08s system 77% cpu 0.966 total\n$ time PERF_TEST=y zsh\nPERF_TEST=y zsh  0.70s user 0.11s system 80% cpu 1.009 total\n$ git checkout master\nSwitched to branch 'master'\nYour branch is up-to-date with 'origin/master'.\nmaster\n$ time PERF_TEST=y zsh\nPERF_TEST=y zsh  0.64s user 0.18s system 45% cpu 1.800 total\n$ time PERF_TEST=y zsh\nPERF_TEST=y zsh  0.69s user 0.15s system 46% cpu 1.825 total\n$ time PERF_TEST=y zsh\nPERF_TEST=y zsh  0.68s user 0.13s system 45% cpu 1.795 total\n$ git checkout feature/bundle-cache-patch-1 \nSwitched to branch 'feature/bundle-cache-patch-1'\nfeature/bundle-cache-patch-1\n$ time PERF_TEST=y zsh                   \nPERF_TEST=y zsh  0.61s user 0.09s system 81% cpu 0.865 total\n$ time PERF_TEST=y zsh\nPERF_TEST=y zsh  0.62s user 0.08s system 79% cpu 0.880 total\n$ rm .cache/.*\n$ time PERF_TEST=y zsh\nPERF_TEST=y zsh  0.69s user 0.15s system 44% cpu 1.903 total\n$ time PERF_TEST=y zsh\nPERF_TEST=y zsh  0.67s user 0.08s system 81% cpu 0.917 total\n$ time PERF_TEST=y zsh\nPERF_TEST=y zsh  0.71s user 0.09s system 82% cpu 0.973 total\n$ time PERF_TEST=y zsh\nPERF_TEST=y zsh  0.65s user 0.11s system 80% cpu 0.936 total\n$ time PERF_TEST=y zsh\nPERF_TEST=y zsh  0.69s user 0.10s system 82% cpu 0.953 total\n```\nThe other half of the speed bonus is probably that you're running your dotfiles are stored on an ssd. I have my dotfiles stored on a hybrid hdd.\n. Screw it, I'm switching to zgen. It's just as fast as my tweaks, and I don't have to deal with this memester.\n. If somebody wants to take this and clean it up, that's fine by me, but any further involvement from me will be minimal.\n. @HeroCC You can also try out this branch; it makes safer changes than the cache branch for similar performance gains.\n. @blairham I would suggest looking at zgen, zplugin or antibody\n. Just remember, desyncr isn't a contributor to antigen at all. I have a fixed version of antigen-parse-args in #132, but abandoned it because the maintainers seem to be absent, so I just switched to zgen.\n. ",
    "sheldond": "Good idea, no changes jump out to me as related to completion, but I'm also not too familiar with Antigen yet. \nPerhaps we can wait to see if someone else on 5.0.8 can confirm the issue, or we may find it's just me.\n. Thanks! The issue persists for me, deleting .zcompdump has no effect. Perhaps the issue is related to osx?\n. The issue turned out to be related to file permissions, I ran compaudit to find \"insecure directories\" and then setup a new \"zsh-users\" user group with permissions on these directories. \n. ",
    "j-walker23": "Perfect, thank you. I just wanted to make sure i didn't have something setup wrong. \n. ",
    "paulhybryant": "+1 for merging this.\n. ",
    "JikkuJose": "Na it doesn't work. I purposefully put it outside.\n. I had tried it, but there was no use. Surprisingly it works with the same file at home computer but not in office. By removing the sourcing of .oh-my-zsh/oh-my-zsh.sh file it stops working at home too.\n. Seems its the problem with my specific theme - jiks in themes repo! \n. ",
    "ajpaulson": "That is what I was talking about as the current method for local bundles - I am asking about a similar method for themes - at the moment I have a theme locally that I want to use without putting it under a git repo or gist\n. ahh thanks!\n. ",
    "dpacmittal": "I'm actually logged in as root and doing 'su '. How do I workaround that?\n. ",
    "trusktr": "Here's what I did to set up Prezto. I changed the -antigen-use-prezto function to this:\nzsh\n-antigen-use-prezto () {\n    export ZDOTDIR=$ADOTDIR/repos\n    antigen-bundle sorin-ionescu/prezto\n}\nIt sets ZDOTDIR first which fixes some problems inside prezto when prezto isn't running from it's intended location (cc: @sorin-ionescu Please, we need these solved in one go: https://github.com/sorin-ionescu/prezto/issues/920, https://github.com/sorin-ionescu/prezto/pull/761, https://github.com/sorin-ionescu/prezto/pull/271, https://github.com/sorin-ionescu/prezto/issues/1025, https://github.com/sorin-ionescu/prezto/pull/791, basically make sure a new variable PDOTDIR based on ZDOTDIR is used everywhere).\nThen I linked ~/.zshrc to ~/.antigen/repos/.zshrc and linked all ~/.antigen/repos/.z* files to the respective ones in ~/.antigen/repos/.zprezto/runcoms/.\nAfter that, the only thing left to get prezto working is to put this in .zshrc:\nzsh\n    source ~/path/to/antigen.zsh\n    antigen use prezto\n    antigen apply\n. If antigen is doing export ZDOTDIR=$ADOTDIR/repos (which defeats the purpose of doing antigen use prezto because the expectation of antigen use prezto is that prezto will simply work without further tweaking and not having to compensate for a modified ZDOTDIR), the README may as well simply tell the user to set ZDOTDIR to /path/to/antigen/repos manually, and how to act accordingly, by moving all ~/.z* files to the new directory (or linking to them).\n. You could even take things further by running all module code inside a zsh function, making it's own scope, then you'd reduce plugins from (sometimes randomly) conflicting. \nI think this would be awesome. (This is basically how JavaScript's require/module.exports was born, and now it's official with import/export arriving to the language).\n. The current packages in the community can be treated specially, like bundles with no dependencies, so they can just work. Perhaps if a \"package.json\" (or renamed to antigen.json or similar) isn't found, then the bundle is assumed to be an old-style bundle. It get's loaded into node_modules (or zsh_modules), then gets sourced just like bundles currently do.\n. @b4b4r07 Nice! Does it support a way for plugins to specify dependencies without the end user having to specify the relationship? What does on: do, there's not much on that.\n. ",
    "gwerbin": "I'm not personally a fan because that makes it impossible to have a \"vanilla\" Prezto installation alongside an Antigen installation. I like the Homebrew approach of \"don't touch anything outside the Homebrew folder\" and would appreciate the same from Antigen, especially when my home directory is involved.\n. It would be an issue would be for a user (like me) who wants to experiment with different configuration setups.\n. I'm not sure why I closed this\n. @desyncr it's been a while since I've taken a look at this code, so I don't remember. But I don't think so\n. ",
    "mpphilli": "Hi,\nIt looks like you are sourcing antigen.zsh from a bash shell. Make sure you are in zsh before doing the source.\nMIKE\n. ",
    "hlohm": "Oh, that's a much nicer fix, of course. \nHowever, since the -U flag isn't default, shouldn't users still be somehow protected from their ignorance? \n. Thanks :) Probably not the most elegant piece of code but it does the trick.\nI don't know much about zsh's internals but either way it just seems unnecessary to me to stuff sth into fpath without checking if it's already in there. To my understanding the shell will check fpath from beginning to end when looking for a function and especially paths with many function (like, say, plugins ;) ) will slow everything down if they are checked multiple times. \nYou can't rely on the user to set a somewhat esoteric option in their config and setting it in antigen doesn't really seem the right place to me.\nMy first thought was that the -U should be default for path-type environment variables, but maybe it's not because it does indeed have some side effects. I'll have a look at the docs when I find some time.\n. agree, (( ! ${fpath[(I)$location]} )) is much more elegant. \nI'd prefer to keep the if/fi though for readability and consistency with the rest of the code. Almost all conditionals in antigen.zsh are if/fi and it makes code much easier to read an maintain. \nI find [condition] && [action] nice for short, quick and dirty functions, but it makes more complex code considrably more difficult to read since many conditions do themselves contain && as an operator.\n. ",
    "slmjkdbtl": "Thanks. It could work. \n. ",
    "dhagerty9009": "This can be closed. I figured out the issue. I forgot to write the name of the theme after the githubuser/reponame.\n. ",
    "JakubMatejka": "The problem is probably in iTerm 2 app (on Mac) because in standard Mac Terminal app it looks ok. Sorry for false alarm. ;o)\n. Well, I'm not sure if this is the best place where it should be reported. I tried also with oh-my-zsh and there is this problem too. Shouldn't I report it rather there since antigen uses it's templates?\n. Ok, will do. Anyway, thanks for your assistance.\n. ",
    "spider623": "in that case my sincere apologies but then wth there is a save function? makes no sense, anw all fixed now but i wish there was a 'write function' for it, maybe i will care in the summer and make one :p\n. ",
    "b4b4r07": "Hi, zplug (zsh plugin manager) can manage dependencies between plugins.\n. ",
    "ryneeverett": "This doesn't strike me as correct. ~/.antigen doesn't contain any configuration AFAIK.\n. > By default it does contains the revert-info plus the checkout bundles.\nThat is not configuration. If you were going to follow XDG you might put it in $XDG_DATA_HOME but I agree that it's not a priority.\n. ",
    "danielbayley": "+1.\nsh\n$ brew install antigen\n/usr/local/Cellar/antigen/1: 2 files, 22.3K\n$ antigen\nzsh: command not found: antigen # ?\n$ which antigen\nantigen not found # *expletives*\nNo 'caveat' or anything\u2026\n. ",
    "stoplion": "Installed latest version antigen via brew and this still happens for me\n. ",
    "varun19299": "Seems like that is source $(brew --prefix)/share/antigen/antigen.zsh now. Tried on December, 2017.. ",
    "00guille": "i have same problem \n==> Caveats\nTo activate antigen, add the following to your ~/.zshrc:\n  source /usr/local/share/antigen/antigen.zsh\n==> Summary\n\ud83c\udf7a  /usr/local/Cellar/antigen/2.2.3: 5 files, 79.7KB, built in 4 seconds\nCochaPro:~ guillermoahumada$\nCochaPro:~ guillermoahumada$   source /usr/local/share/antigen/antigen.zsh\n-bash: zmodload: command not found\n-bash: autoload: command not found\n-bash: /usr/local/share/antigen/antigen.zsh: line 27: syntax error near unexpected token `newline'\n-bash: /usr/local/share/antigen/antigen.zsh: line 27: `        { zcompile \"$config\" } &!'. ",
    "KumaCool": "iterm every time restart command to be executed.source $(brew --prefix) ...\nplease help me. thanks!. ",
    "Fandekasp": "just found a snippet for peco, and created my plugin peco_zsh.\nAnyways, my question still holds :)\n. ",
    "justbuchanan": "It looks like this is by design.  From the readme:\n\nIt is possible to load completions as and when a bundle is specified with the bundle command, in which case this command would not be necessary. But loading the completions is a time-consuming process, so if the completions were loaded at every call to antigen bundle, your shell will start noticeably slow when you have a good number of bundle specifications.\n. My mistake, I didn't see the antigen apply at the end.  I tried out your config and it seemed to work fine for me.  I did get this warning:\n\n.sh\n\u23da [justin:~] 1 % zsh-autosuggestions: The autosuggest-start widget is deprecated. For more info, see the README at https://github.com/zsh-users/zsh-autosuggestions.\nbut git completion worked fine for me.\n. ",
    "hulufei": "@justbuchanan thanks, but the last line in my .zshrc is antigen apply, I suppose it will do the work.\nAnd if this is by design, allow me ask another question: How to apply auto completion on shell start?\n. ",
    "lixiaoyan": "Seems #311 makes this happened again.. ",
    "MaxUlysse": "I have the same problem, did you manage to get a work arround ?\nEdit: Problem solved for me with a reboot\nDell Precision with Linux 17.3\n. ",
    "Poohblah": "I've discovered that unsetting the TERM environment variable seems to fix the color issues, but the robbyrussell and simple themes are still missing components as shown above.  I think the missing components appears to be a separate issue, so ~~I'll open a new issue for that later~~ I've opened https://github.com/zsh-users/antigen/issues/165 to track that issue.\nHowever, unsetting TERM has some undesirable side effects and seems like a bad idea in general to me. FWIW, I'm using Terminator as a terminal emulator and my TERM variable was set to xterm. I haven't found any values of TERM besides a blank string that fix the color issues.\nI'm not sure if the grml config is related at all.  grml doesn't seem to be messing with TERM directly, but there may be a more subtle conflict between grml and antigen.\n. Let this be a warning against troubleshooting and filing issue reports at 2:30am :stuck_out_tongue_winking_eye:\nThe grml config does not seem to be related; removing it has no effect on the issue. Furthermore, this issue doesn't seem to be local to antigen; I have the same issue with plain ol' oh-my-zsh.\n. Ok, nevermind, this issue is a false alarm. After some troubleshooting, I determined that the color palette (Solarized Dark) in my terminal emulator (Terminator) simply had too little contrast for me to tell apart some of the colors, especially the \"bold\" colors. I'm a bit colorblind, which I'm sure doesn't help. The reason that unsetting TERM \"fixed\" the issue was because it effectively disabled bold colors - without a TERM variable, zsh was unable to initialize $terminfo to an appropriate value, and since many themes use $terminfo[bold] rather than $fg_bold for bold colors, the normal colors, which I could distinguish, were displayed instead of the intended bold colors/\nNow I'm off to find a better colorscheme...\n. Ok, I'll close this as a dupe of #122.\n. ",
    "xasx": "Strangely this does not work for me.\n- ZNT gives me the same error after checking out tag v1.1.1, \n  or even adding the repo to the fpath manually (do I need to call anything after issuing this in a terminal?)\n- I have some variables set for powerlevel9k\nThis is my .zshrc:\n```\nsource /opt/antigen/antigen.zsh\nLoad the oh-my-zsh's library.\nantigen use oh-my-zsh\nBundles from the default repo (robbyrussell's oh-my-zsh).\nantigen bundle git\nantigen bundle zsh-navigation-tools\nantigen bundle docker\nantigen bundle docker-compose\nantigen bundle mvn\nantigen bundle command-not-found\nantigen bundle StackExchange/blackbox\nSyntax highlighting bundle.\nantigen bundle zsh-users/zsh-syntax-highlighting\nAdditional completions\nantigen bundle zsh-users/zsh-completions src\nAuto-Updater\nantigen bundle unixorn/autoupdate-antigen.zshplugin\ndoes not work, dunno y\nantigen bundle zsh-users/zsh-autosuggestions\nPOWERLEVEL9K_MODE='awesome-fontconfig'\nPOWERLEVEL9K_TIME_FORMAT=\"%D{%H:%M:%S %d.%m.%y}\"\nPOWERLEVEL9K_OK_ICON=$'\\UF00C'\nPOWERLEVEL9K_FAIL_ICON=$'\\UF00D'\nPOWERLEVEL9K_VCS_GIT_ICON=$'\\UF296'\nPOWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=\"\"\nPOWERLEVEL9K_MULTILINE_SECOND_PROMPT_PREFIX=\"\\UF120 \"\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs)\nPOWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status time)\nantigen theme bhilburn/powerlevel9k powerlevel9k\nantigen apply\nexport PATH=$HOME/bin:/usr/local/bin:/usr/local/git/bin:/usr/local/hg/bin:$HOME/lib/gsc/bin:$PATH\nexport MANPATH=\"/usr/local/man:/usr/local/git/share/man:/usr/local/hg/share/man:$MANPATH\"\nTHIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!\nexport SDKMAN_DIR=\"/home/xasx/.sdkman\"\n[[ -s \"/home/xasx/.sdkman/bin/sdkman-init.sh\" ]] && source \"/home/xasx/.sdkman/bin/sdkman-init.sh\"\n```\nUnfortunately, this has serious impact to my productivity, I heavily work with Git repos:\n\n. @desyncr I cannot re-open this issue. You are the master :place_of_worship:\n. Follow-up on the theme issue: It is not present on all repos. Probably only those having saved stashes.\n. Follow-up on the ZNT issue: seems to be fixed. Maybe some opening&closing terminals helped there.\nFollow-up on the theme issue: if I do not set any configuration variable for it, it works. However it is not the way I want it to be then.\n. Culprit line\nhttps://github.com/bhilburn/powerlevel9k/blob/master/powerlevel9k.zsh-theme#L260\nshell\n local visual_identifier_color_variable=POWERLEVEL9K_${(U)1#prompt_}_VISUAL_IDENTIFIER_COLOR\nSome more variables are constructed this way.\nI currently do not get the intention of this though. And wondering why this broke with antigen update.\n. Thanks @desyncr - it now really seems to be fixed :gift: \n. ",
    "AndrewSpeed": "Still the same output after running that and reopening my terminal I'm afraid\n. Yeah it is, here's the full output if that's any use: http://pastebin.com/uAY5wrbG\n. I'm afraid so, antigen cache-reset isn't effective either. I've been unable to reproduce it on a similar system of mine with identical versions and .zshrc\n. ",
    "duckpuppy": "I'm seeing this with 1.2.0 as well, and it started very suddenly.  I only started using antigen today, and the only thing I'm doing with antigen is antigen use oh-my-zsh - no bundles or anything.  What's weird is that it worked fine several times without error.  Now it doesn't, even if I blow away $HOME/.antigen and reopen a new shell.  I've been testing with a very stripped down .zshrc file.\nI've noticed that there's different behavior if I run the commands via the shell vs. .zshrc, though.  The main difference is that if I delete $HOME/.antigen and open a new shell with antigen in my .zshrc (as below), it will re-download the bundles properly.  If I comment all the antigen stuff from my .zshrc and open a new shell and try to run it sequentially from the command line, the $HOME/.antigen folder isn't created and I get the following error running antigen use oh-my-zsh (or any antigen bundle command): Installing robbyrussell/oh-my-zsh... -antigen-ensure-repo:35: no such file or directory: /Users/patrickaikens/.antigen/antigen.log.\n.zshrc:\n```\nDOTZSH=\"$HOME/.zsh\"\nsource \"$DOTZSH/antigen/antigen.zsh\"\nantigen use oh-my-zsh\nantigen apply\n```\nVersions:\nAntigen - v1.2.0\nZsh - zsh 5.2 (x86_64-apple-darwin16.0.0)\nOS - macOS Sierra\n. But it doesn't create the .antigen folder when I source antigen from the command line either.  Only on a new shell with the source line in my .zshrc\nAlso, I checked all the files I was testing with - they're all unix line endings.  I ran them through dos2unix anyway, with no changes in the results.\n. ",
    "DestyNova": "I'm seeing the original problem now. It happened after I tried \"antigen update\", which told me there was some kind of merge problem (or unmerged changes) with oh-my-zsh, so I went to ~/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh.git and did git reset --hard HEAD. This allow antigen update to work, but now when I open a new shell, I get the error: .antigen/.cache/.zcache-payload:29: parse error nearuninstall_oh_my_zsh'`\nI tried antigen cache-reset and got Antigen: Unknown command: cache-reset.\n. I wiped my antigen directory and reinstalled from git head. Another git-bisect run produced this output:\n```\n58efc24100da11af15ba56221f28e8f0f7a154f7 is the first bad commit\ncommit 58efc24100da11af15ba56221f28e8f0f7a154f7\nAuthor: DC* syncr@riseup.net\nDate:   Sun Sep 25 05:59:48 2016 +0200\nFix apply and antigen-apply command (#247)\n\n* Fix apply and antigen-apply command\n* Add check for empty bundle as argument to antigen-bundle command\n* Add check for interactive mode with ZSH_EVAL_CONTEXT on >= 4.3.5 Zsh versions\n* Added test for 4.3.x Zsh versions\n\n:040000 040000 f1b865cb31262b7cfc8708f6efa23485647a4d89 a5b94c1de78ac796d795257ba2ed1951375e261f M   bin\n:040000 040000 df2a4d1bcc520f2dddafdbf29db2baa243b7c0d4 8f9c40446cc10dde6ed8ebdecbd670faf9d7ba19 M   src\n:040000 040000 a46bc62243c4c4370b99d6d8368736167f466fdc 2cd0e89c45812bc1225135e2b395a6cd59febc25 M   tests\n```\nzsh: zsh 5.1.1 (x86_64-ubuntu-linux-gnu)\nOS: Ubuntu 16.04.1 LTS\n. BTW my test for git-bisect was just to delete ~/.antigen and open a new shell. My .zshrc contains this:\nsource ~/bin/antigen/antigen.zsh\nantigen bundle git\nantigen use oh-my-zsh\nantigen bundle zsh-users/zsh-syntax-highlighting\nantigen theme muse\n. Ok, so I was able to move past that by using git clone to put everything into ~/.antigen/antigen, and now I'm facing this:\n% Installing robbyrussell/oh-my-zsh... Done. Took 3s.\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nsed: -e expression #1, char 0: unmatched `{'\nInstalling zsh-users/zsh-syntax-highlighting... Done. Took 2s.\nsed: -e expression #1, char 0: unmatched `{'\nMaybe another issue already exists for that problem; I'll check.\n. A git bisect run identifies the following commit as the start of the weird sed errors:\n```\n356f750ba4705c4a100f14e4f558ed5ac3ee7db4 is the first bad commit\ncommit 356f750ba4705c4a100f14e4f558ed5ac3ee7db4\nAuthor: DC* syncr@riseup.net\nDate:   Fri Oct 14 22:52:28 2016 +0200\nFix local variable in themes/bundles (#284)\n\n* Fix local variable in themes/bundles\n* Update cache tests for fix on local variables\n* Only pre process \"local\" for themes\n\n:040000 040000 efb405a68a108c9737baee08ce2dac4533e3845e 6951665fc68be63137e6f897f970a7b7bd32fa8c M   bin\n:040000 040000 0c82e98d19f55ac3ce341304b0b7e0dfbfd838c4 b34ecfa561764726239a5478960e297afa7d96d8 M   src\n:040000 040000 93c2a28757595e2b785b784780b09f7025bfa430 aed1047945f8c994e9baf94930d97064d308d7ce M   tests\n``\n. Sure:\nzsh:zsh 5.1.1 (x86_64-ubuntu-linux-gnu)OS:Ubuntu 16.04.1 LTS`\n. ",
    "jdkbx": "This is still an issue for me. My custom theme is not applied with versions greater than 1.0.4.\nIt is supposed to look somehow like gnzh. But the prompt variable is not set with newer versions of antigen.\ntheme.txt\n. here is the .zshrc\nhttps://gist.github.com/jdkbx/0f28bfd0d1a1a8ee30ed3c7dda3f8c8e\n$ANTIGEN/.cache/.zcache-payload does not exist\nno other files are changed from their upstream version\n. latest master, which is 1.1.2. Even rebooted to check, but no .zcache-payload appears.\n. when I switch to develop nothing changes. You can ignore the encoding, it works in my terminal, that is not an issue.\nI only came about this problem, when I set up a new computer, so antigen and the bundles were freshly cloned from github. But after updating antigen I see the same problem on gentoo and ubuntu with reverting back to 1.0.4 as a possible workaround. If it works on your system, and my only changes are in .zshrc, I suspect the problem in there.\n. I just tried on a new account with autogenerated default .zshrc (zsh 5.1.1 on ubuntu), cloned antigen from github and added the lines to load it. My theme still fails. Others work fine (from oh-my-zsh). No files in .cache, neither under master or develop. So I suspect it to be the theme, but then it should not load on your system ...\nSo I just got it to load, by copying it into ~/.antigen/repos/~robbyrussels~oh-my-zsh.git/themes/ (the default due to antigen use oh-my-zsh) and loading it manually. All themes I try to load on start up from .zshrc fail. In a running zsh I can load the themes from oh-my-zsh successfully, but not local ones (no matter how I specify the path). So this seems to be an issue with search paths. I suppose some of the caching is still broken.\n. setting _ANTIGEN_CACHE_ENABLED=\"false\" is a workaround. With that everything is back to normal.\nWhy do you guess that the issue is outside antigen? I have reproducible failure behaviour on quiet different systems (gentoo and ubuntu) that only have antigen in common:\nWithout _ANTIGEN_CACHE_ENABLED set\n1. themes load fine, when they are in the oh-my-zsh folder and are loaded manually in a running zsh\n2. multiple themes (even from oh-my-zsh; tested pure and gnzh as well as my own) fail to load on start up from .zshrc (they appear garbled or incomplete)\n3. loading a local theme manually fails completely (even themes that load from oh-my-zsh copied to a local directory)\n. same here, now files are appearing under .cache\n. ",
    "lennartstein": "antigen: 1.1.1\nZSH: 5.2\nOS: Mac OS X 10.12 Sierra\nantigen cache-reset\nworked for me. But installed a fresh antigen. So maybe caching should be tweaked a bit. Or README.\n. ",
    "ilkka": "No, sadly a cache reset it did not fix it for me.\n. What happens after antigen cache-reset is that in the first new shell I open afterwards, antigen list lists my bundles, but my prompt works only partially, with the normal sindresorhus/pure prompt mixed with the default zsh prompt:\n\nIn the second new shell I open, the behaviour is again the same: antigen list shows nothing, prompt is the default zsh prompt.\n. Removing all repos and antigen/.cache fixed things for me. I've still got one machine that exhibits this buggy behaviour if you want me to investigate more.\n. There ya go: https://gist.github.com/ilkka/7b03f3f8a89fde8969cb24a502e56cd2\n. ",
    "melmi": "I had nearly the same problem. After a fresh install of antigen and playing with it, I updated my zshrc. But the next time I entered in my shell it couldn't load any specified bundle nor the selected theme. It was very annoying. I managed to fix the problem with a cache-reset, as it was recommended here.\n. ",
    "NightMachinary": "I have this problem, and it doesn\u2019t go away with removing \u201c~/.antigen\u201d or \u201cantigen reset\u201d. Freshly cloned from master, zsh is  5.6.2 (x86_64-pc-linux-gnu).. ",
    "zawadzkip": "sure here is the .zshrc\n```\nsource $(brew --prefix)/share/antigen/antigen.zsh\nexport DEFAULT_USER='zawadzkip'\nwildcards\nsetopt extended_glob\nunsetopt nomatch\nLoad the oh-my-zsh's library.\nantigen use oh-my-zsh\nBundles from the default repo (robbyrussell's oh-my-zsh).\nantigen bundle git\nantigen bundle heroku\nantigen bundle pip\nantigen bundle lein\nantigen bundle command-not-found\nantigen bundle rimraf/k\nSyntax highlighting bundle.\nantigen bundle zsh-users/zsh-syntax-highlighting\nLoad the theme.\nantigen theme agnoster\nTell antigen that you're done.\nantigen apply\nexport PATH=\"/usr/local/sbin:$PATH\"\n```\n.zcache-payload\nhttps://gist.github.com/desyncr/ab1268f3b6a2fb7f6f38facb22735a52\n. @desyncr I just tried antigen update and sudo antigen update unfortunately neither of those seemed to work :/\n. @desyncr wanted to give you an update after the antigen release. \nhttps://gist.github.com/zawadzkip/84950e186f601c9acb986a3f3f4769e8\nAfter the update, or anytime I run antigen update I get this error, and then the syntax highlighting works for that instance of the shell. Otherwise the shell will boot without any errors, and without syntax highlighting\n. @desyncr good news, I will be waiting for the 1.1.3 release!\n. ",
    "lobenichou": "Thank you!\n. Works. Thanks!\n. ",
    "pawelad": "Just found #238 (no sed in the title), I'm very sorry for duplicating.\n. ",
    "paulmelnikow": "Doesn't it already work with github, bitbucket, and gitlab?\nMaybe these git\u2013mercurial bridges would be worth testing to see if they would provide easy hg support.\nSince Mercurial is not used by so many people these days, it might not be worth adding complexity and maintenance burden to accommodate it natively.. I like the way zplug handles ~/.zplug/packages.zsh. It'll append to it automatically, and read from it automatically on startup. It's not as elaborate as what you outlined, but it makes the easy things easy.. Thanks, got the test to run. After looking at the other tests and the note in tests/use.t,  I'm not sure it's feasible to write an automatic test.\nI tested this manually by running antigen use prezto with the latest release, then installing this, and running antigen use prezto && antigen update. Also with a clean install. . Thanks for the review. Makes sense that this should be configurable. Left you a question about the details.. For sure! Thanks your help.. Sure thing.\nBy the way, it seems like our systems are producing a different sort order of bundle.zsh and bundles.zsh. Any idea why that is happening?. If you need help debugging it, let me know when the time comes.. Assuming this makes sense I could add a test to protect this from regression.. Re a test, I was thinking something like env | grep -i antigen should be empty.. Ran these tests on 479c0c8c in the develop branch. On that rev, the ones checking for ZSH and ZSH_CACHE_DIR are passing before and after. That's surprising for the one in use.t. It's problematic when a regression test passes before the change. \ud83e\udd14 . Makes sense to add a configuration variable for the preferred prezto fork.\nAre you suggesting here a second variable, which determines whether remotes should be updated for existing clones? If a user decides to switch forks and adjusts configuration appropriately, it doesn't make sense for them to set an additional variable to get antigen to actually install the fork.. This is used to generate output for the user. Given this is now configurable, it seems better to check which repo was used.. This line isn't needed, and has no effect since ZPREZTODIR is reset regardless.. Could I suggest:\n\nEnsure the checked-in build matches the build produced in CI. Since the CI will run this on both OS X and Linux, the two platforms must also produce the same build, else one of them will fail.. Would $src be clearer?. \n",
    "Hoverbear": "Would this be the cause of this error?\ngit add<tab>\n_call_function:22: _git-add: function definition file not found\n. Okay, perfect. Thanks. I'll explore a bit more and raise an issue if I don't figure it out. Sorry to pollute this one. :)\n. Thanks! Let me know if I can provide any additional information!\n. @desyncr Hey! Thanks, it seems to have worked! Sorry to bother you with this.\n. ",
    "FezVrasta": "I'm finding myself having to reset this file once a day at least, I just installed macOS from scratch and followed the zsh + prezto installation instructions accurately. Is there any way to debug this problem?. ",
    "dmdque": "If you've got alias g='git' somewhere (as is popular in many plugins and configs), then you've got to unalias it before defining the function.\n. When using this config:\nalias g='git'\ng() {\n  if [[ $# > 0 ]]; then\n    git $@\n  else\n    git status\n  fi\n}\nI get:\n$ zsh\n$ g\n[1]    99759 segmentation fault  zsh\nWhich is the source of the problem. From man bash:\n\nAliases are expanded when a function definition is read,  not  when  the  function is executed, because a function definition is itself a command.\n\nIt seems that it's caused by never-ending recursion. But I find it weird that it segfaults instead of behaving like:\n$ pwd() { pwd }\n$ pwd\n$ pwd: maximum nested function level reached\n. ",
    "petelewis": "Thanks for the quick response.\nYep, I tried deleting .compdump (I don't have a .zcompdump.1), and it made no difference.\nBut, different from you, loading it interactively doesn't work for me either.\nI am a little bit unclear on the syntax of the bundle command though. I was under the impression that the preferred thing to do is to call the file x.plugin.zsh (although perhaps that doesn't matter). Assuming I call the file x.zsh, as you have done, trying to load it with antigen bundle /path/to/zsh-x x.zsh doesn't even load the function, whereas antigen bundle /path/to/zsh-x does. I'm not sure if this is related.\nIn any case, I can't get tab completion to load with antigen interactively or otherwise.\nThanks for looking into it.\n. ",
    "jordi9": "Hi @desyncr,\nHere's my .zshrc, it's pretty straightforward \n```\nsource ~/.homesick/repos/dotfiles/antigen/antigen.zsh\nLoad the oh-my-zsh's library.\nantigen use oh-my-zsh\nBundles from the default repo (robbyrussell's oh-my-zsh).\nantigen bundle git\nantigen bundle git-extras\nantigen bundle heroku\nantigen bundle lein\nantigen bundle command-not-found\nantigen bundle mvn\nSyntax highlighting bundle.\nantigen bundle zsh-users/zsh-syntax-highlighting\nantigen bundle zsh-users/zsh-history-substring-search\nLoad the theme.\nantigen theme $HOME/.homesick/repos/dotfiles themes/in-fino-veritas --no-local-clone\nTell antigen that you're done.\nantigen apply\n```\nI guess it's not related to oh-my-zsh, because keys are working with v1.1.3\nI'm using zsh 5.2 (x86_64-apple-darwin15.6.0)\nhth\n. ",
    "kmikolaj": "I have the same problem with Ubuntu 16.04 and Gnome Terminal. I can't cycle through history with Up arrow key. Keys like Home, End won't work. Config is similar to @jordi9.\nCheckout on v1.1.3 solved the problem. \nIt is possibly that somehow oh-my-zsh lib content is not sourced?\nBecause sourcing \"$OHMYZSHDIR/lib/key-bindings.zsh\" makes Home and End keys working again.\n. ",
    "diogoazevedos": "I just update to v1.2.1 and removed my .zcompdump, and it works.\n. ",
    "silvadev": "Yeah! The antigen reset command works for me, thanks @desyncr !\n. ",
    "petrikoz": "Yep, delete .zcompdump* solve problem. Thank you and get well!\n. I tried antigen reset. But it didn't help.\nThen I removed .zcompdump file.\nAfter this completion work normal in new shells (I use Tmux with many windows and panels).\nThis means antigen apply in my .zshrc file work nice.\n. ",
    "qstrahl": "Managed to narrow it down a bit. Problem goes away when I comment out the following:\nIn function -antigen-env-setup:\nzsh\n    # Setup antigen's own completion.\n    autoload -Uz compinit\n    if $_ANTIGEN_COMP_ENABLED; then\n        compinit -C\n        compdef _antigen antigen\n    fi\nAnd in function antigen-apply:\nzsh\n    # Load the compinit module. This will readefine the `compdef` function to\n    # the one that actually initializes completions.\n    autoload -U compinit\n    if [[ -z $ANTIGEN_COMPDUMPFILE ]]; then\n        compinit -i\n    else\n        compinit -i -d $ANTIGEN_COMPDUMPFILE\n    fi\n. A .zshrc capable of reproducing the issue is in the first post. One line (plus sourcing/applying antigen. No plugins needed). Zsh version is 5.2, OS is Arch Linux. But actually now that I'm poking at this more, it looks like loading compinit at all -- with or without antigen -- is enough to cause this screwup... :S\n. ",
    "yacoob": "Why is antigen able to set the path correctly on the other host then?\n. I've checked that: on all of my boxes where I don't see the problem, I had old version of antigen installed (>1year old), and no caching was enabled. After updating antigen and restarting zsh, I've started seeing same problems (wrong fpath) with the other bundle I use (zsh-users/zsh-syntax-highlighting). Disabling cache helped.\nPlease tell me if you need any other information.\n. zsh-syntax-highlighting: highlighters directory '/Users/yacoob/.antigen/.cache/highlighters' not found.\nzsh-syntax-highlighting: failed loading highlighters, exiting.\n. ",
    "beedaan": "I'm having the same problem as @yacoob.  I try to install zsh-syntax-highlighters using antigen init and I get the same error.  However, I can successfully install the highlighters using antigen bundle zsh-users/zsh-syntax-highlighting from the command line.  I think it must have something to do with the cache, but I don't know.\nI'm using zsh 5.2 and antigen v1.3.2. I am getting the same error as @yacoob \nzsh-syntax-highlighting: highlighters directory '/Users/bheussler/.antigen/.cache/highlighters' not found.\nzsh-syntax-highlighting: failed loading highlighters, exiting.\nThis is what my antigen.zsh looks like\nbash\nsource /usr/local/share/antigen/antigen.zsh\nantigen init /Users/bheussler/.dotfiles/zsh/antigenrc\nwhich loads my antigenrc\n```\nLoad the oh-my-zsh's library.\nantigen use oh-my-zsh\nantigen bundle brew\nantigen bundle bundler\nantigen bundle docker\nantigen bundle extract\nantigen bundle gem\nantigen bundle git\nantigen bundle mvn\nantigen bundle npm\nantigen bundle osx\nantigen bundle vagrant\nantigen bundle zsh-users/zsh-syntax-highlighting\nLoad the theme.\nantigen theme arrow\nTell antigen that you're done.\nantigen apply\n``. I think I found the issue.  I'm currently running Antigen v1.3.2 installed from Homebrew.  I did a major upgrade from [an earlier version](https://github.com/zsh-users/antigen/tree/1359b9966689e5afb666c2c31f5ca177006ce710) (version 1?).  The fix was to wipe out the.antigen/` directory in my home and have antigen reinstall plugins.  Works great so far!. ",
    "john-kurkowski": "That regex was updated between 1.2.1 and 1.2.2, in this commit/file.\n. It does look like they originally came from Antigen source (1.4.1). I couldn't figure out what kept carrying them over to new terminals. I flailed around a bit trying to get them to not carry over. Somehow I managed. Then, deleting .antigen/init.zsh* instead of just .antigen/init.zsh deleted one additional cache file. Now, these 2 env vars are set correctly!\nzsh\n\u279c  ~ echo $ZSH\n/Users/John/.antigen/bundles/robbyrussell/oh-my-zsh\n\u279c  ~ echo $ZSH_CACHE_DIR\n/Users/John/.antigen/bundles/robbyrussell/oh-my-zsh/cache/\nUnfortunately an error message similar to my original one persists.\nzsh\n/Users/John/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/fasd/fasd.plugin.zsh:4: permission denied: /fasd-init-cache\n/Users/John/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/fasd/fasd.plugin.zsh:source:6: no such file or directory: /fasd-init-cache\nLooks like $ZSH_CACHE_DIR is no longer set in time for the fasd plugin to use it.. Thank you!. ",
    "wsargent": "Pulled from master five minutes ago\nOn Wed, Nov 23, 2016 at 3:17 PM -0800, \"desyncr\" notifications@github.com wrote:\nWhat antigen version are you running?, zsh version.\nThanks.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. ",
    "VincentBel": "Thanks for your quick fixing . And antigen has came back to life on your great efforts \ud83d\ude09 . . ",
    "orf": "After a bit of hacky profiling with adding echo 'something $(date +%d.%m.%y-%H:%M:%S)' all around antigen.zsh it seems the culprit is source $_ZCACHE_PAYLOAD_PATH. This takes over 12 seconds when kaspersky is installed.\n-zcache-unhook-antigen also takes 4 or 5 seconds as well.\nI'm going to open a support request with Kaspersky to see if they have anything to say about this, but is there any way to avoid those calls? I think I know the answer: no, because they seem to be an amalgamated form of all my plugins? \nEdit: It seems after a restart things are better, and antigen apply is fairly snappy without any plugins installed.. ",
    "michalmo": "this change causes an error on OS X\n$ -antigen-bundle-short-name \"https://github.com/example/bundle.git\"\nsed: 1: \"s|.*/(.*/.*).*?|\\1|\": RE error: repetition-operator operand invalid. ",
    "rben01": "Thanks. antigen reset seemed to fix it.. ",
    "rherrick": "Not sure if it was the antigen reset or removing the zcompdump file(s) (although I'd deleted the zcompdump.HostName.xxxx files previously, I don't think I'd deleted .zcompdump itself), but that cleared it up. I now get:\n```\nnum  calls                time                       self            name\n\n1)    1         878.57   878.57   43.84%    789.90   789.90   39.42%  zcache-load-cache\n 2)    1         359.26   359.26   17.93%    359.26   359.26   17.93%  compdump\n 3)    2         740.49   370.25   36.95%    210.20   105.10   10.49%  compinit\n 4)    1         161.08   161.08    8.04%    161.08   161.08    8.04%  -zcache-unhook-antigen\n 5)  752         130.28     0.17    6.50%    130.28     0.17    6.50%  compdef\n...\n```\nThat gets compdump down to a reasonable level. Thanks for the help and let me know if I can do anything to help figure out what causes that to happen.. ",
    "lukechilds": "If the plugin ends with something like:\nshell\n[[ $SOME_ENV_VAR == \"true\" ]] && load_plugin\nIt'll have a failing exit code if SOME_ENV_VAR is false. Explicitly running return 0 will give us a non failing exit code.. Yeah, my tests suite fails if the script exits with a non zero exit code so I manually return 0 because even though the last operation in the script failed, it should have failed so everything has worked properly.\nObviously I can easily fix this by just running true so we always get a good exit code. I just thought I should let you guys know because if anyone does a return for any reason in a zsh plugin and someone loads it with antigen it'll completely mangle their antigen setup.. ",
    "Wirone": "Additionally:\n- I don't have cygwin installed under standard path, but on D:\\Bin\\cygwin (added to PATH variable)\n- I run ZSH under ConEmu with task D:\\Bin\\cygwin\\Cygwin.bat -new_console:d:D:\\\nCygwin.bat content:\n```\n@echo off\nD:\nchdir D:\\Bin\\cygwin\\bin\nzsh -i -l\n``. I have figured it out. It's because I don't use Cygwin's Git, but Git for Windows. It's in myPATHvariable and Antigen can use it, but it requires windows-style paths, not cygpaths. It's very similar problem to composer/composer#3184 but instead of checking againstphpAntigen should check ifgitis under/bindirectory or has/cygdrivein path (and convert repo location with$(cygpath -m \\$dir)` if required).\nI've been able to fix this locally by changing -antigen-ensure-repo() and -antigen-env-setup() (hardcoded cygpath usage for cloning location and ADOTDIR directories).\nChecking for Cygwin can be done with command -v 'cygpath' >/dev/null 2>&1 or \"Cygwin\" == $(uname -o).. Sure, I am curious if it's possible without it. In my opinion: not ;-) Looking forward for the fix.. @rfgamaral To be honest, I don't remember. I think it's because I wanted to have most recent version and in Cygwin it's not always the newest one (for now it's 2.8.3 and I have 2.9.0). I probably had some issues too, but as I said - I don't remember now :-). ",
    "rfgamaral": "@Wirone I'm also using Zsh/Antigen on Cygwin and I'm just curious if you have a reason for using Git for Windows instead of relying on Cygwin's Git.. That's it. Thank you :). Great :)\nShould we close this one then @desyncr ?. @desyncr Any way I can get this right now instead of waiting for April 23?. What exactly are \"my configs\"?. There are none on my .zshrc file :(. I pinpointed this issue to antigen theme command:\nAmaral@NAZBOX:~% antigen theme refined\n(eval):106: parse error near `\\n'\nantigen theme robbyrussell\n(eval):3: command not found: ^M\nantigen theme avit\n(eval):27: parse error near `elif'\nSomething's wrong here.... @desyncr Didn't work, I got this:\n\nAntigen: Failed to load plugin.\n\n.zshrc\n```\nexport EDITOR=nano\nexport HISTFILE=~/.zhistory\nsource /usr/local/bin/antigen/antigen.zsh\nantigen use oh-my-zsh\nantigen bundle robbyrussell/oh-my-zsh refined.zsh-theme\nantigen bundle command-not-found\nantigen bundle common-aliases\nantigen bundle extract\nantigen bundle git\nantigen bundle zsh-users/zsh-syntax-highlighting\nantigen apply\n```. It partially worked now... The theme doesn't look like the real theme.\nThis is how it should look:\n\nBut this is how it looks now:\n\nNote that I've changed the theme to robbyrussell with antigen bundle robbyrussell/oh-my-zsh themes/robbyrussell.zsh-theme.\n. The weird thing to me is that I get those \"parse error\" and \"command not found\" messages but if i close the shell and reopen it, everything is fine and the theme actually displays correctly.. I think you're missing the arrow symbol in the robbyrussell theme.. I understand... But thing is, this didn't use to happen a few days ago, everything was fine. Not sure what why this is happening now...\nAnyway, my theme preference is actually agnoster.\nantigen bundle robbyrussell/oh-my-zsh themes/agnoster.zsh-theme\nThe above is working fine :). That's it. Thank you :). ",
    "einSelbst": "Thanks for your quick and helpful answer @desyncr !\nBecause of the linear reading of the Readme it might be helpful to have a reference to the \"Installation\" section from the top of the \"Usage\" section, something along the lines of \n\n[...]  Sweet. Let's do it.\nThere are several installation methods available in the \"Installation\" section or you can use git:\nFirst, clone this repo, [...]\n\nIf you like I can send a PR.\nAfter install via brew it told me:\n \"Your copy of antigen doesn't appear to be a git clone.  The 'selfupdate' command cannot work in this case.\"   which is according to the explanation given in the Readme under \"selfupdate\". \nAm I right to assume that brew will handle the updating for me? (Sorry for the noobish questions, I just want to make sure antigen works nicely). ",
    "TBird2001": "That appears to have fixed the problem. Thanks for the quick response. @desyncr . ",
    "marmistrz": "Seems to work, thanks!. ",
    "lovepreetkaul": "These are the versions I am using:\nAntigen v1.4.0\nzsh 5.1.1 (x86_64-ubuntu-linux-gnu)\nLinux workstation 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux. Hi, \nThis seems strange but it is working as expected now and I am not able to reproduce the issue. Thanks for looking into it.. ",
    "Stefanqn": "Antigen v1.4.1. ",
    "belak": "I've opened https://github.com/sorin-ionescu/prezto/pull/1264 as well to make it easier to integrate with the original fork. Fairly simple way to reproduce:\n```\nantigen use prezto\nantigen bundle zsh-users/prezto modules/prompt\nantigen apply\nprompt agnoster # Or just look for a missing prompt_agnoster_setup\n```. There's an experimental fix in #428 . @maximbaz In my own dotfiles, I use a combination of prezto and antigen. I use prezto for all prezto modules and antigen for everything else.\nHere's an example:\n```\nzstyle ':prezto::' color 'yes'\nzstyle ':prezto:module:prompt' theme 'belak'\nzstyle ':prezto:module:prompt' pwd-length 'short'\nzstyle ':prezto:load' pmodule \\\n    'archive' \\\n    'prompt'\nLoad the basic prezto library\nantigen use prezto\nLoad any external bundles we want\nantigen bundle rupa/z z.sh\nantigen apply\n```\nThis lets prezto handle loading prezto modules (which will be more important once more functionality starts moving to the contrib repo) but uses antigen to load prezto core.\nThat being said, this may be an actual bug. I think my fix (adding those dirs to the fpath) was only half of the fix. They still need to be autoloaded in most instances. I was mistakenly using prompt to test which may load prompt files differently than normal autoloaded functions (I think prezto completely skips autoloading them).. The easiest/possibly best method would be to store the prezto modules which need to be loaded and just call pmodload on those... Then antigen can avoid digging into the details of how prezto modules are loaded.. I'd be happy to resolve the conflicts, but I don't see a great way of refactoring this into a function. I'm pretty sure this still triggers the issue, even with #475:\nzstyle ':prezto:module:prompt' theme 'agnoster'\nantigen use prezto\nantigen bundle zsh-users/prezto modules/prompt\nantigen apply. Yeah, it should error with zstyle after use prezto but before the bundle/apply.. Ah, I must have missed this. Good catch.. It looks like you're trying to use antigen with bash. However, antigen doesn't work with bash, it only works with zsh.. Ok, I've just taken a look at this (Just got back from a vacation) and there are two ways I could see fixing this: set prompt_subst in antigen's theme loading (though this has the potential to introduce the pw3nage issue into any prompt where that isn't supported to be set), or have it fixed in any themes (this is probably the better solution).\nThis doesn't show up in OMZ because it sets prompt_subst manually in https://github.com/robbyrussell/oh-my-zsh/blob/0b340bc3a5c58609a07987b296f773eaea17b274/lib/theme-and-appearance.zsh#L44 (loaded from https://github.com/robbyrussell/oh-my-zsh/blob/0b340bc3a5c58609a07987b296f773eaea17b274/oh-my-zsh.sh#L31). It also defines a non-standard way of applying themes, choosing to simply source the files rather than use the prompt function (which loads x_prompt_setup functions)\nhttps://github.com/denysdovhan/spaceship-zsh-theme/pull/275 is my recommended way of fixing the issue. It works with OMZ's prompt loading and it works with the standard prompt loading (and in extension, prezto's prompt module).. > Not a solution but we may add a note/troubleshoot section about missing setopt promptsubst option.\nThis seems like a reasonable stopgap :). It would be nice to not have this copied in a few different files, just not sure how to do that.. I'm sure there's a better way of doing this.. I'm not really sure the best way to move this (and the loop) into a function, as they do similar but different things.. ",
    "maximbaz": "Hey @desyncr and @belak, I'm experiencing seemingly the same problem, not sure if this is a new bug, regression or me doing something wrong.\nThe config is the following:\nantigen use prezto\nantigen bundle archive\nantigen apply\nThis should load 3 functions: lsarchive, archive and unarchive. However, running lsarchive test.zip results in zsh: permission denied: lsarchive.\nIf I add autoload -Uz lsarchive and then try again, it will work.\n```\n\u276f lsarchive test.zip\nzsh: permission denied: lsarchive\n\u276f autoload -Uz lsarchive\n\u276f lsarchive test.zip\nArchive:  test.zip\n  Length      Date    Time    Name\n---------  ---------- -----   ----\n        0  2017-12-07 19:29   test.txt\n---------                     -------\n        0                     1 file\n```\nAs a workaround, I'm adding autoload -Uz lsarchive archive unarchive to my antigenrc, but shouldn't this be handled by antigen itself?. @desyncr could you reopen this issue? The bug is still valid, dirs are added to the fpath, but the functions still have to be autoloaded.. I found that adding setopt prompt_subst before sourcing antigen.zsh fixes the problem.. FYI this issue is not only related to prezto themes (maybe it is related to use prezto?). I switched to spaceship-zsh-theme and I still need to put setopt prompt_subst in my antigenrc.. For spaceship-zsh-theme this is proposed to be fixed in the theme itself: \nhttps://github.com/denysdovhan/spaceship-zsh-theme/pull/275\nPerhaps it's not a problem with antigen, but the problem with other prezto prompts and each of them needs to be fixed accordingly.\n/cc @belak who might want to add some details.. Great! Should the default value for ANTIGEN_COMPINIT be compinit -i or plain compinit?. #634 works perfectly, thank you very much!. ",
    "miszr": "The fix that was implemented in f7d7c33954cc94e4208767b677c60fea7f543ac2 still has some flaws.\nIf the user is using a git clone of the antigen repository, then this will work good enough.\nBut if the user only downloaded the antigen.zsh file and placed it at an arbitrary location, then the _ANTIGEN_INSTALL_DIR will be incorrect(zsh version >= 4.3.7).\nExample:\n/home/<user>/.config/antigen.zsh will now result in _ANTIGEN_INSTALL_DIR being \n/home/<user>\nIf on the other hand, the uses the same structure as in the repository:\n/home/<user>/.config/antigen/bin/antigen.zsh will result in a correct _ANTIGEN_INSTALL_DIR being /home/<user>/.config/antigen\n. This does fix the issue, but I believe there is some changes that could improve antigen-selfupdate.\nUsing  the git rev-parse --show-toplevel command the root of the git repository can be retrieved and an error if there is no repository. This change could also be used to set the _ANTIGEN_INSTALL_DIR correctly when inside a git repository.\nThis change would make antigen-selfupdate git update work even if the user sources the bin/antigen.zsh directly(for some reason).\nThe downside of this is that it will then have a run-time dependency for git. A check if git is available is simple enough. It might also require a check if the actual repository is the antigen repository(might be difficult, if user uses fork). An example where antigen-selfupdate would fail otherwise is in the case where the user places a copy of antigen.zsh in their own git repository(dotfiles repo).. ",
    "jyaworski": "AFAIK, my antigen configuration is stock. The relevant lines in my .zshrc are:\n```shell\nsetopt nonomatch\nsetopt re_match_pcre\nsetopt EXTENDED_GLOB\nsource $HOME/antigen/antigen.zsh\nantigen use oh-my-zsh\nantigen bundles <<EOBUNDLES\nRobSis/zsh-reentry-hook\nthe8/terminal-app.zsh\nunixorn/tumult.plugin.zsh\nruby\ngem\nssh-agent\nbattery\nchruby\nrake-fast\nosx\nrust\nbrew\ncargo\ncabal\nvagrant\ntmux\nkitchen\ncolored-man-pages\nTarrasch/zsh-autoenv\nextract\nsvn\nemoji\ngitfast\ngit-extras\naws\ngpg-agent\njsontools\ngolang\nmosh\nsudo\nxcode\npython\npyenv\nvundle\ngnu-utils\nsublime\nbundler\nzsh-users/zsh-autosuggestions\nzsh-users/zsh-completions\nzsh-users/zsh-syntax-highlighting\nzsh-users/zsh-history-substring-search\ntylerreckart/odin\nwesbos/Cobalt2-iterm.git\nEOBUNDLES\nif [[ \"$TERM_PROGRAM\" == \"iTerm.app\" ]]; then\n  antigen theme wesbos/Cobalt2-iterm.git cobalt2.zsh-theme\nelse\n  antigen theme tylerreckart/odin odin.zsh-theme\nfi\nantigen apply\n```\n\u271d \ue0b0 ~ \ue0b0 zsh --version\nzsh 5.3.1 (x86_64-apple-darwin16.5.0). Yeah, that worked.. Woohoo. Thank you!. The debug.log shows a bunch of this for the failures:\n[TRA][1512142583.6924459934] Called antigen-bundle with zsh-users/zsh-autosuggestions BUNDLE\n[TRA][1512142583.6924459934] TRACE\n-antigen-hook-antigen-bundle\n-antigen-hook-handler\nantigen-bundle\nantigen-bundle-parallel-execute\nantigen-apply-parallel-execute\n-antigen-hook-handler\nantigen-apply\n-antigen-hook-antigen\n-antigen-hook-handler\nantigen\n/Users/jyaworski/.zshrc\n[TRA][1512142583.7004990578] /Users/jyaworski/antigen/bin/antigen.zsh:861\n[TRA][1512142583.7004990578] -antigen-bundle-instal failed to clone https://github.com/zsh-users/zsh-autosuggestions.git BUNDLE\nFor chruby, it shows this:\n[LOG][1512096068.9507129192] Processing deferred bundle: chruby DEFER\n[WRN][1512096068.9509620667] /Users/jyaworski/antigen/bin/antigen.zsh:1469\n[WRN][1512096068.9509620667] Updated meta: target antigen-bundle mode repeat type pre called 41\n[WRN][1512096068.9511239529] /Users/jyaworski/antigen/bin/antigen.zsh:1469\n[WRN][1512096068.9511239529] Updated meta: target antigen-bundle mode repeat type replace called 2\n[WRN][1512096068.9512500763] /Users/jyaworski/antigen/bin/antigen.zsh:1484\n[WRN][1512096068.9512500763] Processing hooks: antigen-bundle-cached antigen-bundle-parallel\n[WRN][1512096068.9513859749] /Users/jyaworski/antigen/bin/antigen.zsh:1487\n[WRN][1512096068.9513859749] Pre hook: antigen-bundle-cached chruby\n[WRN][1512096068.9515640736] /Users/jyaworski/antigen/bin/antigen.zsh:1498\n[WRN][1512096068.9515640736] Replace hook: antigen-bundle-parallel chruby\n[TRA][1512096068.9516870975] /Users/jyaworski/.zshrc:5\n[TRA][1512096068.9516870975] antigen-bundle-parallel: chruby PARALLEL\n[TRA][1512096068.9516870975] TRACE\nantigen-bundle-parallel\n-antigen-hook-handler\nantigen-bundle\nantigen-apply-defer\n-antigen-hook-handler\nantigen-apply\n-antigen-hook-antigen\n-antigen-hook-handler\nantigen\n/Users/jyaworski/.zshrc\nZSH version:\n\u271d \ue0b0 ~ \ue0b0 zsh --version\nzsh 5.4.2 (x86_64-apple-darwin17.0.0). Slightly:\n````\nset -x\nsetopt nonomatch\nsetopt re_match_pcre\nsetopt EXTENDED_GLOB\nzstyle ':completion:*' rehash true\nCredit: https://kev.inburke.com/kevin/profiling-zsh-startup-time/\nexport PROFILE_STARTUP=false\nif [[ \"$PROFILE_STARTUP\" == true ]]; then\n    zmodload zsh/zprof # Output load-time statistics\n    # http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html\n    PS4=$'%D{%M%S%.} %N:%i> '\n    exec 3>&2 2>\"${XDG_CACHE_HOME:-$HOME/tmp}/zsh_startup.$$\"\n    setopt xtrace prompt_subst\nfi\nexport GREP_OPTIONS='--color=always'\nexport DISABLE_UPDATE_PROMPT=true\nexport DISABLE_AUTO_UPDATE=true\nexport HOMEBREW_BRWEFILE_APPSTORE=0\nexport HOMEBREW_BREWFILE_APPSTORE=0\nsource $HOME/antigen/antigen.zsh\nantigen use oh-my-zsh\nantigen bundles <<EOBUNDLES\nchruby\nthe8/terminal-app.zsh\nunixorn/tumult.plugin.zsh\nruby\ngem\nrake-fast\nosx\nbrew\nvagrant\ntmux\nkitchen\ncolored-man-pages\nTarrasch/zsh-autoenv\nextract\nsvn\nemoji\ngitfast\ngit-extras\naws\ngpg-agent\njsontools\ngolang\nmosh\nsudo\nxcode\npython\npyenv\nvundle\ngnu-utils\nsublime\nbundler\nzsh-users/zsh-autosuggestions\nzsh-users/zsh-completions\nzsh-users/zsh-syntax-highlighting\nzsh-users/zsh-history-substring-search\ntylerreckart/odin\nwesbos/Cobalt2-iterm.git\nEOBUNDLES\nif [[ \"$TERM_PROGRAM\" == \"iTerm.app\" ]]; then\n  antigen theme wesbos/Cobalt2-iterm.git cobalt2.zsh-theme\nelse\n  antigen theme tylerreckart/odin odin.zsh-theme\nfi\nantigen apply\nexport LANG=en_US.UTF-8\nexport EDITOR='vim'\nexport TZ=America/New_York\nexport XML_CATALOG_FILES=\"/usr/local/etc/xml/catalog\"\nexport HOMEBREW_GITHUB_API_TOKEN='REDACTED'\nexport HUBOT_GITHUB_TOKEN=$HOMEBREW_GITHUB_API_TOKEN\nexport GITHUB_PRS_OAUTH_TOKEN=$HOMEBREW_GITHUB_API_TOKEN\nexport HUBOT_GITHUB_USER='REDACTED'\nexport GITHUB_PRS_USER='REDACTED'\nexport PERL_MM_USE_DEFAULT=1\nexport PERL_CPANM_OPT=\"--with-recommends --with-suggests --with-develop --with-configure --with-all-features --verify\"\nexport VAGRANT_DEFAULT_PROVIDER=\"parallels\"\nexport AWS_DEFAULT_REGION=\"us-east-1\"\nexport AWS_REGION=$AWS_DEFAULT_REGION\nexport HOMEBREW_NO_EMOJI=1\nexport HOMEBREW_NO_GITHUB_API=1\nexport NVM_DIR=\"$HOME/.nvm\"\nexport GROOVY_HOME=/usr/local/opt/groovy/libexec\nexport JAVA_HOME=\"$(/usr/libexec/java_home)\"\nexport PATH=\"$HOME/bin:$PATH\"\nexport PATH=\"$HOME/.rbenv/bin:$PATH\"\nexport PATH=\"$HOME/.nodebrew/current/bin:/usr/local/sbin:$PATH\"\nexport PATH=\"/opt/chefdk/bin:$PATH\"\nexport ANDROID_HOME=/usr/local/opt/android-sdk\nexport MONO_GAC_PREFIX=/usr/local\nsource /usr/local/share/zsh/site-functions/_aws\nsource $(brew --prefix)/etc/brew-wrap\nzstyle :omz:plugins:ssh-agent agent-forwarding on\nzstyle :omz:plugins:ssh-agent lifetime 8h\nsource /Users/jyaworski/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true\nalias vim=\"mvim -vnN\"\nalias json2yaml=\"ruby -ryaml -rjson -e 'puts YAML.dump(JSON.parse(STDIN.read))'\"\nalias make=\"/usr/local/bin/make -j 9\"\neval perl -I ~/perl5/lib/perl5 -Mlocal::lib\nexport MANPATH=\"$HOME/perl5/man:/usr/local/opt/erlang/lib/erlang/man:$MANPATH\"\nchruby ruby-2.4.2\nif [[ \"$TERM_PROGRAM\" == \"iTerm.app\" ]]; then\n  test -e \"${HOME}/.iterm2_shell_integration.zsh\" && source \"${HOME}/.iterm2_shell_integration.zsh\"\nfi\nPATH=\"/Users/jyaworski/perl5/bin${PATH:+:${PATH}}\"; export PATH;\nPERL5LIB=\"/Users/jyaworski/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}\"; export PERL5LIB;\nPERL_LOCAL_LIB_ROOT=\"/Users/jyaworski/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}\"; export PERL_LOCAL_LIB_ROOT;\nPERL_MB_OPT=\"--install_base \\\"/Users/jyaworski/perl5\\\"\"; export PERL_MB_OPT;\nPERL_MM_OPT=\"INSTALL_BASE=/Users/jyaworski/perl5\"; export PERL_MM_OPT;\nif [[ \"$PROFILE_STARTUP\" == true ]]; then\n    zprof\n    unsetopt xtrace\n    exec 2>&3 3>&-\n    $HOME/bin/parse_zsh_log.py \"${XDG_CACHE_HOME:-$HOME/tmp}/zsh_startup.$$\"\nfi\n```. @desyncr I can confirm this fixes the problem. I just needed to remove~/.antigen` so it would start clean. Thanks.. If we remove this, would we have caught 483a7ad256fc6ad4bd36a990df2dc1048b995998?. ",
    "adamheins": "Are there any further modifications I should make to this PR before it can be merged?. Total oversight on my part! I've now added apply, bundle and selfupdate commands. I also noticed the snapshot and restore commands. Do you think I should add those as well?. Added snapshot and restore commands. Also removed the Experimental label from revert command.. ",
    "dein0s": "In Cookbook it's specified as $ADOT, in Configuration section - $ADOTDIR.\nBut does this really matter if I have a substitution if nothing is found in current env?\nBtw, maybe I need to change the path to the cache file totally? As I see from conf section and my current vars,  cache is currently stored in $_ANTIGEN_CACHE, which is differ from ${ADOT:-\"${HOME}\"/.antigen}/.cache/.zcache-payload:\nbash\n~/.antigen \ue0b0 echo $_ANTIGEN_CACHE \n/home/dein0s/.antigen/init.zsh\n. > init.zsh is the path for cache from develop branch.\nYep, I've configured a submodule to watch for develop branch, as your master is still at 1.3.5. Should've mentioned this before, my bad.\nGonna play with cache file path then and fix submodule at 0bc49f9c9bfd9bbd78e29a2dc1c3f29f9b9a1227. I'll report tomorrow.. > If you're on develop then you don't need to use a custom static loaded as Antigen do it for yourself.\nCan you provide an example of how should my .zshrc look like to load Antigen then?. Got that, I'll stick to the latest develop then :) Atleast until the 2.0 release, if you don't mind, as I don't really like to lock submodules on any particular commit, as this functionality is just meh...\nOne more thing - antigen reset and antigen cache-gen are one-time-to-run commands, right?\nBtw, as an update for the subj - that was definetly some cache problem here. Edited .zshrc to source init.zsh if it exists, autosuggestions works perfect for the last few hours.. Okay then, regarding to the last comments:\n- cleaned up my .zshrc, it now contains only the following to lines that are related to Antigen (from https://github.com/zsh-users/antigen/issues/463#issuecomment-290692515 , as decided that I'll stick with a develop branch for now)\nbash\nsource \"${HOME}/.antigen.zsh\"\nantigen init \"${HOME}/.antigenrc\"\n- set symlinks to both of this files\nbash\n ~ \ue0b0 ls -la | grep antigen\ndrwxr-xr-x  3 dein0s dein0s  4096 Mar 31 16:59 .antigen/\nlrwxrwxrwx  1 dein0s dein0s    59 Mar 22 00:20 .antigenrc -> /home/dein0s/Personal/dotfiles/shells/zsh/antigenrc.dotfile\nlrwxrwxrwx  1 dein0s dein0s    65 Mar 30 05:31 .antigen.zsh -> /home/dein0s/Personal/dotfiles/shells/zsh/antigen/bin/antigen.zsh\n- submodule is set to track develop branch and is up to date\nbash\n ~/\u2026/shells/zsh/antigen \ue0b0 \ue0a0 develop \ue0b0 git status\nOn branch develop\nYour branch is up-to-date with 'origin/develop'.\nnothing to commit, working tree clean\n- rm -rf $HOME/.antigen\n- rm -rf $HOME/.zcompcache\n- rm $HOME/.zcompdump\n- rm $HOME./zcompdump.zwc\n- restart terminal\n- bundles installed, autosuggestions working\n- restart terminal\n- autosuggestions aint working (I guess that cache is not loaded properly)\n- cache file exists\nbash\n~ \ue0b0 ls -la .antigen/\ntotal 56\ndrwxr-xr-x  3 dein0s dein0s  4096 Mar 31 16:55 ./\ndrwxr-xr-x 44 dein0s dein0s  4096 Mar 31 16:56 ../\n-rw-r--r--  1 dein0s dein0s 12504 Mar 31 16:55 init.zsh\n-r--r--r--  1 dein0s dein0s 28528 Mar 31 16:55 init.zsh.zwc\ndrwxr-xr-x  6 dein0s dein0s  4096 Mar 31 16:55 repos/\np.s. I can jump on a gitter channel right now, if you have some spare time for this. Notes from chat:\n\nPeter @dein0s 18:21\nallright, after futher investigation i came up with the following:\n.zcompdump is not storred correctly for some reason\n-C flag for compinit does not allow to re-ccreate dump file if there is one already\nnot sure, is there any sensitive data stored in .zcompdump file, so i'll create a gist for the diff between working and not working states\nas fas as i can see for now from that diff, two of my plugins missing their autocompletions \n\nGist with init.zsh and diff for .zcompdump https://gist.github.com/dein0s/888230d381542b3bfa517a017fad0091. Looks like this was some local issue with .zcompdump file. Redefined it in .zshrc and everything works fine now.\nbash\nexport _ANTIGEN_COMPDUMP=\"${ADOTDIR:-$HOME/.antigen}/.zcompdump\"\nAlso, as I've mentioned in chat - that -C flag for compinit is worth thinking about.\nAnd we are done here :) Thanks for your support.\nFeel free to close this issue if you don't need any additional info from me.. My config files: .zshrc, .antigenrc. Yep, noticed that and already changed locally to this:\n```bash\nThat way Antigen will store it's info in an independent file, so it won't get corrupted by any other script/software\nexport ADOTDIR=\"${HOME}/.antigen\"\nexport ANTIGEN_COMPDUMP=\"${ADOTDIR}/.zcompdump\"\nexport ANTIGEN_LOG=\"${ADOTDIR}/antigen.log\"\nexport ANTIGEN_DEBUG_LOG=\"${ADOTDIR}/antigen_debug.log\"\nexport _ANTIGEN_COMPDUMP=\"${ADOTDIR:-$HOME/.antigen}/.zcompdump\"\nexport _ANTIGEN_LOG=\"${ADOTDIR:-$HOME/.antigen}/antigen.log\"\nStill no success, `wd` autocompletion is still missing in `.zcompdump`:bash\n\n\nccat .zcompdump | grep wd \n'passwd' '_users'\n'pwdx' '_pids'\n'xwd' '_x_utils'\n'yppasswd' '_yp'\n            _expand_word _extensions _external_pwds _fakeroot _fc \\\n\n\n. Almost the same reason as described in https://github.com/zsh-users/antigen/issues/463#issuecomment-290745592: `-C` for `compinit`. Also, I've 22 bundles in [config](https://github.com/dein0s/dotfiles/blob/master/shells/zsh/antigenrc.dotfile) + theme (23), but for some reason I see only 9 \"installing\" messages:bash\nInstalling robbyrussell/oh-my-zsh!...\nInstalling robbyrussell/oh-my-zsh!...\nInstalling robbyrussell/oh-my-zsh!...\nInstalling robbyrussell/oh-my-zsh!...\nInstalling soimort/translate-shell@develop!...\nInstalling djui/alias-tips!...\nInstalling zsh-users/zsh-autosuggestions!...\nInstalling fcambus/ansiweather!...\nInstalling dein0s/dotfiles!...\n``\n. Well, you're wrong with this.git.io/antigen- stable version (which is 2.2.2 as for now, 1-2 minor versions behind current)git.io/antigen-nightly` - current version\nYou can read more about this in wiki:\nhttps://github.com/zsh-users/antigen/wiki/Quick-start\nhttps://github.com/zsh-users/antigen/wiki/Release-process. ",
    "G-Bruin": "thanks!. ",
    "guixxx": "I see. So is there any workaround for this at the moment? Thanks for quickly answering me.. Awesome! Thank you very much.. ",
    "iamkarlson": "What do you think maybe a good place for this information at the most top of the readme? It's completely unexpected behaviour.. @desyncr please review #514 . Please review, I've added your description but preserved a powerlevel theme. It's quite popular and in the readme of the theme repo it's mentioned that put following lines enough to get the theme.. @desyncr sorry for the late answer. Please review with formatting.... ",
    "eloo": "okay.. i've tested some more things and it seems that the issue is not always reproducible.\nBut i've noticed that my env variables (e.g. for powerlevel9k theme) are not always been set or recognized.. and antigen reset fixes the problem.. :/. yes the dotfiles from my repo are nearly update... just done some little changes\nokay i moved antigen apply to end of my .zshrc so its now at the very end of rc files.\nnow i see the red cross which indicates an error during a command..\nbut i don't see any further output :/. okay thanks for your help\nif you need more information please let me know. I noticed some new \"issues\" will loading antigen.\nIt seems that i have to set\nexport POWERLEVEL9K_INSTALLATION_PATH=\"/Users/<username>/.antigen/bundles/bhilburn/powerlevel9k\"\nand \nexport ZSH=$HOME/.antigen/bundles/robbyrussell/oh-my-zsh\nfurther after i resource my .zshrc my powerlevel9k customizations are gone :/  . nope.. facing the same issues.\nif I enable my font it will not work when i fork a new terminal (unless i do antigen reset)\nand if i'm source my .zshrc a second time (reload for example) the theme no more be applied in new terminals :/. Hi if i you the following .zshrc i'm facing the following issues.\n```\nsource dotfiles/antigen.zsh\nShould go first\nantigen use oh-my-zsh\nThese configs should go before antigen theme\nPOWERLEVEL9K_INSTALLATION_PATH=$HOME/.antigen/bundles/bhilburn/powerlevel9k/\nPOWERLEVEL9K_MODE='awesome-patched'\nPOWERLEVEL9K_OS_ICON_BACKGROUND=\"white\"\nPOWERLEVEL9K_OS_ICON_FOREGROUND=\"blue\"\nPOWERLEVEL9K_VCS_STAGED_ICON='\\u00b1'\nPOWERLEVEL9K_VCS_UNTRACKED_ICON='\\u25CF'\nPOWERLEVEL9K_VCS_UNSTAGED_ICON='\\u00b1'\nPOWERLEVEL9K_VCS_INCOMING_CHANGES_ICON='\\u2193'\nPOWERLEVEL9K_VCS_OUTGOING_CHANGES_ICON='\\u2191'\nPOWERLEVEL9K_VCS_MODIFIED_BACKGROUND='yellow'\nPOWERLEVEL9K_VCS_UNTRACKED_BACKGROUND='cyan'\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(status os_icon context dir vcs)\nPOWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()\nPOWERLEVEL9K_STATUS_VERBOSE=false\nPOWERLEVEL9K_SHORTEN_STRATEGY=\"truncate_left\"\nPOWERLEVEL9K_SHORTEN_DIR_LENGTH=2\nantigen theme bhilburn/powerlevel9k powerlevel9k\nShould be last\nantigen apply\n```\nFollowing issues appear\n Icons for OS, Folder, git state are gone (font)\n -> Works on first terminal, all new terminals are without icons. (Can be fixed with 'antigen reset' for the next terminal)\n Whole theme is gone if i do 'source .zshrc' and open a new terminal. (Can be fixed with 'antigen reset')\n* New terminals are getting the red state cross (return code not 0 i guess?)\nI hope you can reproduce my issues too and more fix them :D\nbest regards\nEloo. Thanks for your investigation.\nWIll try your workaround next week. \nAlso looking forward to the fixed version ;)\nThanks for your help!. updated to v2.1.0 and it seems that i still need to use the workaround :/\nbut with this workaround it seems to work. the only thing i'm facing is that if i open a new terminal and exit it in the next moment i'm receiving an \"broken pipe\" error.. i guess this could be closed\nI'm not facing this issue anymore with version 2.2.1. You can simply add somethink like that to your .zshrc file\n```\nOverride antigen-selfupdate\nfunction antigen-selfupdate(){\n    wget 'https://raw.githubusercontent.com/zsh-users/antigen/develop/bin/antigen.zsh' -O ~/dotfiles/antigen.zsh.tmp \n    mv ~/dotfiles/antigen.zsh.tmp ~/dotfiles/antigen.zsh\n    source ~/dotfiles/antigen.zsh\n}\n```. i can confirm this issue in combination with the ubuntu oh-my-zsh plugin. @aserrallerios \ntested your workaround for the ubuntu plugin and it seems to works .\nThanks. looks like helm plugin is also not working :(. ",
    "AdrienHorgnies": "I am able to reproduce with the following (using antigen develop branch) :\n```zsh\nexport TERM=\"xterm-256color\"\nexport ZSH=/home/adrien/.oh-my-zsh\nDEFAULT_USER=\"adrien\"\nsource ~/.antigen.zsh\nframework\nantigen use oh-my-zsh\ndefault repo\nantigen bundle git\nantigen bundle globalias # It seems to work at the moment.\nothers\nantigen bundle zsh-users/zsh-syntax-highlighting\nantigen bundle jhipster/jhipster-oh-my-zsh-plugin\ntheme\nPOWERLEVEL9K_MODE='awesome-fontconfig' # doesn't work, no icon\nantigen theme https://github.com/bhilburn/powerlevel9k powerlevel9k\nantigen apply\n``\nI can however \"fix\" it withantigen resetfor the next terminal (only the next one, the second one will have the same problem) or I cansource .zshrc` again so the current terminal will work (and only this one, another tab won't work). I'm using xterm with xfce4-terminal.. ",
    "oli206": "Same issue here. That was fast, thanks! Will give it a try\nEl jue., 13 abr. 2017 20:01, desyncr notifications@github.com escribi\u00f3:\n\nAvailable in develop. Ready for 2.0.1.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/zsh-users/antigen/issues/490#issuecomment-293976479,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AByHBE2Vz9f0E0NfrLZ-RJJjUUGC9lzAks5rvmMKgaJpZM4M7GR4\n.\n. \n",
    "mgryszko": "Can you have a look at #491 too for 2.0.1 milestone. Actually this issue resulted from the other one - instead of loading a bundle from a local filesystem I tried to load the bundle from Gitlab.. Confirmed, working as expected. Confirmed, working as expected. Closing, since I cannot double-check it. ",
    "Fuzen-py": "Oh, thank you @Eloo  that was much simpler than what i had done earlier \ud83d\ude04. Wouldn't this require antigen to store the path for the script?. This doesn't include the exact path of the script. It might not be named antigen.zsh. ",
    "JuPlutonic": "2.2.2 and, now ff391b5 2.2.3 \nzsh --version  zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\nUbuntu18.04 4.15.0-13-generic #14-Ubuntu SMP x86_64 GNU/Linux\nI got this on any terminal/tab launch gist\nI think I have to revert (comment lines added by this Pull/merged commit) to overcome these warnings. MB I need to fill out a bug. Below in the same gist I have strange Antigen's behavior: antigen update always tries to update old plugins but second launch of antigen update again shows those old plugins. Like nothing had happened previous time.. ",
    "gilbertwyw": "Thanks for your prompt reply.\nFYI, I rm ~/.antigen/init.zsh and open a shell and it WORKS again. ",
    "geekifier": "Just FYI, when I encountered this issue, antigen reset produced the same error message. So the correct solution is to rm $ADOTDIR/init.zsh, as was also suggested.. ",
    "wonbyte": "Is this still a bug or is it being addressed here: https://github.com/zsh-users/antigen/blob/c91f77c8e9d96da43ae6dcaca4f2c823532302dc/bin/antigen.zsh#L35. ",
    "shoeffner": "Thanks for the very quick reply. I checked your changes out and the enter works fine again.\nHowever, when leaving the directory with the following .autoenv_leave.zsh file:\nif test \"${_ANTIGEN_BUNDLE_RECORD#*fae.zsh-theme}\" = \"$_ANTIGEN_BUNDLE_RECORD\"\nthen\n    antigen theme shoeffner/dotfiles fae.zsh-theme\nfi\nsource deactivate zooenv\nIt keeps the theme.\nIf I add echo \"Changing theme...\" before the antigen theme call, I am running into an endless loop of:\n(eval):1: command not found: Changing\nI additionally can observe that conda deactivates the environment again and again, so there seems to be some looping going on.\nIt is a bit surprising that it works into one way but not the other now, even though I am using basically the same commands.\nIf I remove all commands but the following:\n```\n.autoenv.zsh\nantigen bundle emoji\nantigen theme https://gist.github.com/2a0d83c9e78c51c88fd91524d0bbdd0b.git mini-zoo\n\n.autoenv_leave.zsh\nantigen theme shoeffner/dotfiles fae.zsh-theme\n``\nIt again works into one direction (enter) but when leaving the directory I end up with this (just once this time):(eval):1: command not found: Installing`\ncd zooenv\n\ud83d\udc20  % cd ..   \n(eval):1: command not found: Installing\ncd zooenv\n\ud83d\udc17  %\nLeaving me without any style (as shown above) at all.. ",
    "nuno-agostinho": "But is the 2.0.2 version a nightly version? In GitHub releases, it shows 2.0.2 as the latest stable version. Also, the README file \"markets\" the Antigen v2 at the top and then states the instructions (shown in my first comment) to install the 1.4.1 version.. @desyncr You are right, but is your default branch develop? I never changed to that branch, I thought I was looking into the master branch... Sorry for any confusion!. ",
    "RuRo": "Am I correct in my understanding, that 1.4.1 is the latest stable release?\nThat is none of the following releases are stable:\n2.0.0, 2.0.1, 2.0.2, 2.1.0\nIf I am correct, when should I expect the 2.* versions to become stable (Should I be expecting that at all. No pressure.)? Are the versions that are not labeled \"stable\" - unstable? Are they very buggy? I am having a couple of issues in 1.4.1, that I think 2.* should fix.\nThank you.. ",
    "MoonBall": "In ~ directory, there are 3 .zcomp* file.\n-rw-r--r--    1 gangc  staff  154530  5  5 02:16 .zcompdump\n-rw-r--r--    1 gangc  staff   38593  5  4 00:31 .zcompdump-\u9648\u521a\u7684MacBook Pro-5.2\n-rw-r--r--    1 gangc  staff   40611  5  4 00:31 .zcompdump-\u9648\u521a\u7684MacBook Pro-5.3.1\nIt works after delete them.\nI try antigen reset before deleting them, but not work.. ",
    "DanNordness": "I'm having this same issue and neither running antigen reset nor rm ~/.zcomp* ~/.antigen/.zcomp* seems to fix it for me.. ",
    "fazlearefin": "After you run antigen reset, you need to open a new terminal.\nIf you don't want to open a new terminal, you can try source ~/.zshrc. (I have not tried this but it should work). @kylezhang Just run\nantigen reset\nAnd then open a new terminal. No need to manually delete any files.. ",
    "kylezhang": "I deleted rm ~/.zcomp*, but it still does not work.\non my side, command like this:\nrm ~/.zcompdump*\nexec zsh. ",
    "arkban": "For those that might run into this situation, I am running zplug and had included lib/compfix.zsh directly in my .zshrc using zplug \"lib/compfix\", from:oh-my-zsh   (since zplug does not automatically load everything from OMZ).\nRemoving the various .zcompdump* files did nothing. The error only went away when I removed that plugin.\nI hope this helps someone out there.. ",
    "wqycsu": "If rm .zcomdump* & exec zsh does not work for you, please check do you install zplug or not?. ",
    "sebastian2696": "@wqycsu that solution works. The zcomdump* file is inside zplug folder, for those looking for it. ",
    "houpfchn": "I also encountered the same problem as you do. You can do this\uff1a\nrm -rf ~/.zcompdump-*\nexec zsh. ",
    "stevenwalton": "I was wondering if there was an update. If you could at least reproduce my bug. If not I can provide more information. . ",
    "kopp": "No, sorry.  I checked out 3c9ff4ecb6e76813f38827651485df75528ee52c but it still persists.\nJust to be clear: I started zsh in a terminal that was already running zsh before (i.e. nested) and this produced the issue.. ",
    "minimum2scp": "Thanks!. ",
    "nikitavoloboev": "I removed it. And on next startup it went away. However on next one, it came back again. :(. I still get the error even with antigen apply written in my zshrc. ",
    "Miguelme": "I'm getting the same error (even after removing the lock and init.zsh). \nVersion: Antigen v2.1.1\nMy zshrc looks as follows: \n```\nIf you come from bash you might have to change your $PATH.\nexport PATH=$HOME/bin:/usr/local/bin:$PATH\nPath to your oh-my-zsh installation.\nexport ZSH=/Users/user/.oh-my-zsh\nSet name of the theme to load. Optionally, if you set this to \"random\"\nit'll load a random theme each time that oh-my-zsh is loaded.\nSee https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\nZSH_THEME=\"agnoster\"\nUncomment the following line to use case-sensitive completion.\nCASE_SENSITIVE=\"true\"\nUncomment the following line to use hyphen-insensitive completion. Case\nsensitive completion must be off. _ and - will be interchangeable.\nHYPHEN_INSENSITIVE=\"true\"\nUncomment the following line to disable bi-weekly auto-update checks.\nDISABLE_AUTO_UPDATE=\"true\"\nUncomment the following line to change how often to auto-update (in days).\nexport UPDATE_ZSH_DAYS=13\nUncomment the following line to disable colors in ls.\nDISABLE_LS_COLORS=\"true\"\nUncomment the following line to disable auto-setting terminal title.\nDISABLE_AUTO_TITLE=\"true\"\nUncomment the following line to enable command auto-correction.\nENABLE_CORRECTION=\"true\"\nUncomment the following line to display red dots whilst waiting for completion.\nCOMPLETION_WAITING_DOTS=\"true\"\nUncomment the following line if you want to disable marking untracked files\nunder VCS as dirty. This makes repository status check for large repositories\nmuch, much faster.\nDISABLE_UNTRACKED_FILES_DIRTY=\"true\"\nUncomment the following line if you want to change the command execution time\nstamp shown in the history command output.\nThe optional three formats: \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\nHIST_STAMPS=\"mm/dd/yyyy\"\nWould you like to use another custom folder than $ZSH/custom?\nZSH_CUSTOM=/path/to/new-custom-folder\nWhich plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\nCustom plugins may be added to ~/.oh-my-zsh/custom/plugins/\nExample format: plugins=(rails git textmate ruby lighthouse)\nAdd wisely, as too many plugins slow down shell startup.\nplugins=(git)\nsource $ZSH/oh-my-zsh.sh;\nUser configuration\nexport MANPATH=\"/usr/local/man:$MANPATH\"\nYou may need to manually set your language environment\nexport LANG=en_US.UTF-8\nPreferred editor for local and remote sessions\nif [[ -n $SSH_CONNECTION ]]; then\nexport EDITOR='vim'\nelse\nexport EDITOR='mvim'\nfi\nCompilation flags\nexport ARCHFLAGS=\"-arch x86_64\"\nssh\nexport SSH_KEY_PATH=\"~/.ssh/dsa_id\"\nSet personal aliases, overriding those provided by oh-my-zsh libs,\nplugins, and themes. Aliases can be placed here, though oh-my-zsh\nusers are encouraged to define aliases within the ZSH_CUSTOM folder.\nFor a full list of active aliases, run alias.\n\nExample aliases\nalias zshconfig=\"mate ~/.zshrc\"\nalias ohmyzsh=\"mate ~/.oh-my-zsh\"\nsource /usr/local/share/antigen/antigen.zsh;\nantigen bundle z;\nantigen apply;\n```\n. @desyncr its on macOS Sierra. And Zsh version = zsh 5.3.1 (x86_64-apple-darwin16.3.0)\n. ",
    "disrupted": "I have the same issue as OP.\nAntigen v2.1.1\nzsh 5.3.1 (x86_64-apple-darwin16.3.0). now receiving a lot of these errors on shell login\n\nWARN:2: no such file or directory: /Users/disrupted/.antigen/debug.log\nWARN:2: no such file or directory: /Users/disrupted/.antigen/debug.log\nLOG:2: no such file or directory: /Users/disrupted/.antigen/debug.log\n\nedit:\ndid something like touch ~/.antigen/debug.log to fix the warnings but now I am getting the 'Antigen: Another process in running.' messages again. ",
    "sunoterra": "oh beauty @desyncr ... i was experiencing similar struggles, updating to the 2.2.1 tag, but i believe mine were more oriented towards the iTerm session caching mechanisms for window arrangements, rather than antigen itself. creating new shells, with new sessions seemed to work as expected, even though my saved arrangements were loading at least one shell as expected, and then displaying the \"Antigen: Another process in running.\" message for the other shells in the arrangements. i resolved my struggle my typing \"exec zsh\" in the remaining shells.\nwill try the suggested env setting if i run into it again, next update.. ",
    "jep-dev": "I'm not sure exactly what's to blame, but using Tilda, I end up with \"defunct\" terminals (zombie processes) for every shell that terminates (closing the tab/window, sending EOF, etc.) They're harmless in terms of memory leaks, but side effects are always a concern. I verified that the issue only happens on mine when there are zombies - I made about a dozen in total across a couple of emulators without the zombie problem. If this is the/a culprit, I have a few ideas. As opposed to disabling the mutex, maybe fuser could identify it as an orphan, and if not (not really knowing how the mutex is implemented) set/add the owner's PID to the mutex so others know how to look it up later. . ",
    "igimanaloto": "For me, removing ~/.antigen/init.zsh did the trick. . ",
    "chkl": "antigen reset fixed it. Thanks!. ",
    "robobenklein": "That solves my problem, but I still don't understand how a one-off theme switch works differently from the same 'theme' command, but just stored in the .zshrc. How does the live session command switch properly if the same command in the startup script hits the cache instead?. No further issues on my Linux box, however having different issues with zcompdump on OSX.... ",
    "K5HV": "I've got this same issue on ArchLinux (zsh 5.3.1 (x86_64-unknown-linux-gnu)) with antigen installed from AUR (antigen-git v2.2.0.r2.g47a99ad-1).\nk5hv@e6430:~% cat .zshrc\nsource /usr/share/zsh/share/antigen.zsh\nantigen bundle zsh-users/zsh-syntax-highlighting\nantigen theme clean\nantigen apply\nk5hv@e6430:~% . ~/.zshrc \nk5hv:~/ $                                                            [23:04:59]\n It's seems that zsh-syntax-highlighting boundle also wasn't loaded.. It seems that removing my .antigen and resource my .zshrc fixed the issue. ",
    "jeffmartinxyz": "I should have included this previously, but I'm running the same setup as @K5HV . ",
    "Falieson": "I used the .zshrc provided in the readme.md, changed the theme to steeef and reloaded my zsh and nothing changed. running source .zshrc fixed the issue. ",
    "Probotect0r": "Hey, I am having a similar issue. This is what my .zshrc has:\n```\nsource ~/antigen.zsh\nantigen use oh-my-zsh\nantigen bundle git \nantigen bundle nvm \nantigen bundle wd\nantigen bundle tomsquest/nvm-auto-use.zsh\nantigen bundle zsh-users/zsh-syntax-highlighting\nantigen bundle zsh-users/zsh-autosuggestions\nantigen theme agnoster\nantigen apply\nUser configuration\nbindkey '^ ' autosuggest-execute\nThis loads nvm\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  \nSource .profile so you get login configs as well\nsource ~/.aliases.sh\nsource ~/.profile\nThis loads nvm bash_completion\n[ -s \"$NVM_DIR/bash_completion\" ] && . \"$NVM_DIR/bash_completion\"\n``\nMy theme doesn't get loaded in new shells unless I runantigen theme agnosteror. ~/.zshrc.\nIf I runantigen-reset`, and then open a new shell, the theme is loaded in that shell. But all other shells opened after that don't have the theme loaded.. Ok something happened and its working fine now lol. ",
    "0xApe": "No worries, I am use stable version now that comes from curl method. . tried git method, and it works now, thanks!\nadded into submodule of my dotfiles.. ",
    "docwhat": "No.  $0 is the antigen function. Eg -antigen-load. So my theme is meant to work with more than Antigen... it is located outside the ~/.antigen/ directory.  I should have included an example .zshrc:\n``` zsh\nsource ~/antigen/antigen.zsh\nantigen theme \"${HOME}/src/my-prompt-theme\" my-prompt --no-local-clone\nantigen apply\n```\nOh, I see why your usage of ${0} appears to work (which it only does in this case):\n\n${0} is -antigen-load\nThe current working directory is where the script is.\n${0:A} turns into /Users/user/.antigen/bundles/fribmendes/geometry/-antigen-load\n${0:A:h} strips the -antigen-load resulting in /Users/user/.antigen/bundles/fribmendes/geometry\n\nThis would work with flibbit=nothing; echo ${flibbit:Ah} as well. Or just use $PWD.\nHowever this doesn't work (and neither does %N) if the current working directory isn't set to the prompt directory and the .zsh-theme is loaded via fpath and autoload -Uz (the way Prezto does).\nSpecifically, with this debug code in the prompt:\n``` zsh\necho \"NARF 0 ${0}\"\necho \"NARF 0 ${0:A}\"\necho \"NARF 0 ${0:A:h}\"\necho \"NARF N ${(%):-%N}\"\necho \"NARF N ${${(%):-%N}:A}\"\necho \"NARF N ${${(%):-%N}:A:h}\"\necho \"NARF x ${(%):-%x}\"\necho \"NARF x ${${(%):-%x}:A}\"\necho \"NARF x ${${(%):-%x}:A:h}\"\n```\nI get these results:\n```\nPlain zshrc source\nNARF PWD /home/fred\nNARF 0 /home/fred/my-prompt-theme/prompt_myprompt_setup\nNARF 0 /home/fred/my-prompt-theme/myprompt.zsh-theme\nNARF 0 /home/fred/my-prompt-theme\nNARF N /home/fred/my-prompt-theme/prompt_myprompt_setup\nNARF N /home/fred/my-prompt-theme/myprompt.zsh-theme\nNARF N /home/fred/my-prompt-theme\nNARF x /home/fred/my-prompt-theme/prompt_myprompt_setup\nNARF x /home/fred/my-prompt-theme/myprompt.zsh-theme\nNARF x /home/fred/my-prompt-theme\n```\n```\nAntigen\nNARF PWD /home/fred/my-prompt-theme\nNARF 0 -antigen-load\nNARF 0 /home/fred/my-prompt-theme/-antigen-load\nNARF 0 /home/fred/my-prompt-theme\nNARF N (eval)\nNARF N /home/fred/my-prompt-theme/(eval)\nNARF N /home/fred/my-prompt-theme\nNARF x /home/fred/antigen/antigen.zsh\nNARF x /home/fred/antigen/antigen.zsh\nNARF x /home/fred/antigen\n```\n```\nPrezto\nNARF PWD /home/fred\nNARF 0 prompt_myprompt_setup\nNARF 0 /home/fred/prompt_myprompt_setup\nNARF 0 /home/fred\nNARF N prompt_myprompt_setup\nNARF N /home/fred/prompt_myprompt_setup\nNARF N /home/fred\nNARF x /home/fred/.zprezto/modules/prompt/functions/prompt_myprompt_setup\nNARF x /home/fred/my-prompt-theme/myprompt.zsh-theme\nNARF x /home/fred/my-prompt-theme\n```\n%x works the best for the other cases; only Antigen requires checking the current working directory.  I'm still in the process of testing other frameworks (e.g. OMZ).. W00T!  It is indeed fixed in the develop branch @desyncr!\n```\nAntigen 'develop' branch\nNARF 0 /home/fred/my-prompt-theme/myprompt.zsh-theme\nNARF 0 /home/fred/my-prompt-theme/myprompt.zsh-theme\nNARF 0 /home/fred/my-prompt-theme\nNARF N /home/fred/my-prompt-theme/myprompt.zsh-theme\nNARF N /home/fred/my-prompt-theme/myprompt.zsh-theme\nNARF N /home/fred/my-prompt-theme\nNARF x /home/fred/my-prompt-theme/myprompt.zsh-theme\nNARF x /home/fred/my-prompt-theme/myprompt.zsh-theme\nNARF x /home/fred/my-prompt-theme\n```. ",
    "JohnStarich": "It looks like older versions of zsh (<5.1.1) are failing with the same error. I'm not sure what's wrong, but I'll take another look at this later.. I solved the problem, but I am at a loss as to why it worked. Perhaps older zsh versions cannot run subshells in the same line as local variable declarations?. I may have fixed the problem, but I'm not entirely sure. My running theory is that if you used the newish parallel antigen-bundles stuff it would not handle spaces correctly. I then told it to split each line of the heredoc on spaces. It appears that splitting on spaces here was overlooked since most bundles do not contain spaces (but themes do).\nI also updated the PR's primary comment with how this solution handles the spaces splitting.\nLet me know if this fixed the issue for you @desyncr!. I found a far simpler solution. The issue turned out to be in the cache!\nHow does this look instead @desyncr?. Yes, that is along the lines of what I found. I think that is outside the scope of this PR, but I agree that could be worth fixing in the long-term. My total diff now only includes the fix to the cache.\nIf it helps, you can pass unquoted strings with spaces by escaping each space like so:\n/this/path\\ has\\ spaces/\nThe biggest problems I saw were caused by the antigen-bundles command because it reads each line as a string. This caused issues I tried fixing in the parallel bundle installer and in the argument passing done for antigen-bundle.\nWould you like to collaborate on a new issue/PR that tries to fix all of the spaces bugs?. If I change this back to ${=@} then it breaks the test I added because the spaces get turned into different arguments, unfortunately. Is there another way to parse args after they've been send to -antigen-parse-args?\nI can also look into sending the arguments a different way if you like. I'm not super familiar with how themes work. Do you have a test case that fails I could debug?. ",
    "ryannielsen": "I randomly discovered this issue today while poking at some other aspects of my zsh setup, and likewise keep a subset of my dotfiles in iCloud Drive which leads to paths which include \"Mobile Documents\". \nIn trying to fix this, I spent hours playing with zsh array parameter expansion with no luck and, in the end, went with a much simpler approach: I simply append double quote delineated strings to the $_PATH and $_fpath variables, and then inject those strings into the cache output. There's no need to do anything fancier.\nOnly after settling on my approach did I find this PR. I'm far from a zsh expert, but I am fairly certain the resulting cached output won't have any paths.\nIn bin/antigen.zsh, \nfpath+=(${_fpath[@]}) path+=(${_PATH[@]})\nis replaced with \nfpath+=(\\$_fpath) path+=(\\$_PATH)\nand I'm not sure how this will work. It's important to remember that the code under consideration is in a heredoc, and is not actually being evaluated by the current zsh subshell. Thus, rather than including path values from the parent script, the heredoc will instead just contain \nfpath+=($_fpath) path+=($_PATH)\nYou can confirm this by looking at the resulting $ADOTDIR/init.zsh file; the processed contents of the heredoc.\nLikewise, there's no need to unset $_PATH or $_fpath, because those are never defined in the heredoc text.\nI have a commit which seems to work properly in my very limited testing; happy to raise a new PR if that's appropriate: https://github.com/ryannielsen/antigen/commit/3a7206bd1ed3f52409f7f4cb7311b9e161d2908d. ",
    "iarroyo5": "\nantigen v2.0.2\nzsh 5.3.1 (x86_64-apple-darwin16.6.0)\n\nI'm having the same issue with v2.0.2, none of the plugins inside my .antigenrc file works, but if \nI run directly on the shell: antigen bundle plugin then it works.\nI tried removing the .zcompdump* file/s and antigen reset but I'm still having the same issue.\nI tried moving all the content from .antigenrc to .zshrc and nothing either. \nThis is my configuration\n.antigenrc\n```\nLoad the oh-my-zsh's library\nantigen use oh-my-zsh\nantigen bundle <<EOBUNDLES\n    # Bundles from the default repo (robbyrussell's oh-my-zsh)\n    git\n    brew\n    heroku\nzsh-users/zsh-syntax-highlighting # Syntax highlighting bundle\nzsh-users/zsh-autosuggestions # Fish-like auto suggestions\nzsh-users/zsh-completions # Extra zsh completions\nlukechilds/zsh-nvm # NVM suggestions\n\nEOBUNDLES\nLoad the theme\nantigen theme robbyrussell\nTell antigen that you're done\nantigen apply\n```\n.zshrc\nsource $HOME/antigen.zsh\nantigen init $HOME/.antigenrc. ",
    "BrendanBall": "I have the same problem with kubectl as aserrallerios, except for me I can't even run antigen bundle kubectl manually in a shell to fix this. When I do this it just says Seems robbyrussell/oh-my-zsh is already installed! and kubectl completions don't work. I have to actually do source <(kubectl completion zsh) to get kubectl completions to work. I've tried antigen reset but it does nothing. I don't seem to have any zcompdump files. I would really like to get this working so if we can give you any more information please let me know.\nEDIT:\nIt seems that I can't even put source <(kubectl completion zsh) in my zshrc as a workaround. it does nothing.   . @aserrallerios I did that and did antigen reset but it didn't do anything. ",
    "aserrallerios": "@BrendanBall try this:\n```sh\nantigen use oh-my-zsh\nantigen bundles <<EOBUNDLES\n    ... # other plugins\nEOBUNDLES\nantigen apply\nantigen bundle kubectl\n```\n@desyncr is the next antigen version fixing it? Thanks!. My ugly workaround:\nIn your .zshrc, after antigen apply or antigen init:\nsource $HOME/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/kubectl/kubectl.plugin.zsh. This bug also affects `aws` plugin of `oh-my-zsh`.. Any estimation on when a fix will be available?\n\nThanks!. ",
    "seagle0128": "golang of oh-my-zsh plugin doesn't work with antigen on Ubuntu 16.04 LTS.\n. Still not working in 2.2.3. I guess it may be related to cache mechanism.. Same issue here. Hope it can be fixed soon.. ",
    "lwshang": "I came into a similar issue that settings in .antigenrc doesn't work while if I move all stuffs into .zshrc then everything works fine. I assume that it is a bug with the antigen init command since it is the function which tells antigen to find .antigenrc and use the settings there.. The error message suggest that you are using Bash instead of Zsh. Antigen is designed for Zsh only. Change your shell with chsh or just type zsh and click Enter/Return to enter a Zsh REPL. Then source $HOME/antigen.zsh should work.. That's the behavior of pure prompt. It's not an issue with Antigen.. ",
    "hujianxin": "tmuxinator not working.... ",
    "nmaupu": "\nMy ugly workaround:\nIn your .zshrc, after antigen apply or antigen init:\nsource $HOME/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/kubectl/kubectl.plugin.zsh\n\nIt's fixing the issue if I source the file while in a zsh shell. If I source it from the ~/.zshrc file, it doesn't do anything... I can't figure out why .... ",
    "soullivaneuh": "I confirm as run into the issue with helm plugin. Works correctly under v2.0.2.. Thanks a lot for the workaround @mtyler, it works like a charm! :+1: . @mtyler Erf, not working corretly at the end:\n~ at \u2638\ufe0f  microk8s \n\u279c source ~/.zshrc\n_arguments:comparguments:325: can only be called from completion function\n_arguments:comparguments:325: can only be called from completion function\ndenysdovhan/spaceship-prompt @ master\nsullivan@sweethome:~%\nThe theme disappear on a reload. Any idea of why?\nHere is my config file:\n```bash\nsource ~/.shrc\nif [[ ! -a ~/.antigen/antigen.zsh ]]; then\n    git clone --branch master git@github.com:zsh-users/antigen.git ~/.antigen\n    # @see https://github.com/zsh-users/antigen/issues/583\n    cd ~/.antigen && git checkout v2.0.2 && cd -\nfi\nsource ~/.antigen/antigen.zsh\nantigen use oh-my-zsh\nantigen bundles <<EOBUNDLES\n    capistrano\n    cp\n    emoji\n    fzf\n    git\n    helm\n    history\n    sudo\n    $HOME/.zsh_custom/plugins/palette\n    $HOME/.zsh_custom/plugins/skaffold\n    wfxr/forgit\n    zsh-users/zsh-autosuggestions\n    zsh-users/zsh-syntax-highlighting\nEOBUNDLES\n@see https://github.com/zsh-users/antigen/issues/675\nTHEME=denysdovhan/spaceship-prompt\nantigen list | grep ${THEME}; if [[ $? -ne 0 ]]; then antigen theme ${THEME}; fi\nantigen apply\nHYPHEN_INSENSITIVE=\"true\"\nHIST_STAMPS=\"yyyy-mm-dd\"\nsetopt HIST_IGNORE_ALL_DUPS\nalias zshreload=\"source $HOME/.zshrc\"\nctrl+space key binding for auto-suggestion\nbindkey '^ ' autosuggest-accept\n``. The issue seems to come fromdenysdovhan/spaceship-prompt` theme.\nIf I use antigen theme pure instead, it works like a charm.. ",
    "pslobo": "Oddly enough I'm using these same configs on another machine and they're working just fine. This is a newly installed macOS and I'm using terminal.app\nCome to think of it, I'm running macOS public beta, maybe it could be something with the beta that is causing this behaviour. I'll do a little more testing and let you know later if this is replicable in other machines.. ",
    "KristupasSavickas": "This was an issue with my .zshrc, I mistyped zsh-autosuggestions. ",
    "jguenther": "The info in that wiki article didn't work for me. Using this config:\nANTIGEN_CACHE=$HOME/.antigen/init.zsh\ntypeset -a ANTIGEN_CHECK_FILES=($HOME/.zshrc $HOME/.someotherfile)\nafter running antigen reset and opening a new shell, I always get this error if ANTIGEN_CHECK_FILES has more than 1 file (no error if it's just 1 file):\n-zcache-generate-cache:zcompile:81: can't write zwc file: /path/to/home/.zshrc /path/to/home/.someotherfile.zwc\nLooked into it briefly and I think it's from this line. \nIt's quoting \"$ANTIGEN_CHECK_FILES\" which means zcompile gets all files as 1 arg instead of separately. Since this var is an array, the correct way to do this without breaking on files/dirs with whitespace etc is:\nzcompile \"${ANTIGEN_CHECK_FILES[@]}\"\nThis will properly quote each element of the array.. ",
    "Ameausoone": "Same problem \nzsh 5.4.2 (x86_64-apple-darwin16.7.0)\nAntigen v2.2.1\nWhen I add new bundles in .antigenrc, I had to delete my ~/.antigen/ directory install new bundle. ",
    "seriousben": "```\n\nzsh --version\nzsh 5.3.1 (x86_64-apple-darwin16.6.0)\nantigen version\nAntigen v2.0.2\n```. Also fails with nightly and with zsh 5.4.1. I think this is caused in part by the way antigen bundles works now. It seems to be more fragile in its parsing than it used to be. But it can also just be me.\n\nWorks:\nif [[ \"$(uname)\" =~ \"Darwin\" ]] ; then\nantigen bundles <<MACOS_BUNDLES\n  osx\nMACOS_BUNDLES\nfi\nNot working:\nif [[ \"$(uname)\" =~ \"Darwin\" ]] ; then\n  antigen bundles <<MACOS_BUNDLES\n    osx\n  MACOS_BUNDLES\nfi\n. Yes although the errors were pretty strange, everything seems to be working now (I guess except zsh-users/zsh-history-substring-search :( ). ",
    "nisaea": "That's awesome, thanks! \\o/\nShould I open an issue for the original problem I faced or is it something that has already been fixed and I missed the info?. ",
    "yahyavi": "Same issue with fonts not working properly with caching, any way to fix this till the next release?. ",
    "dotwaffle": "Why are you calling oh-my-zsh.sh? Are you not calling antigen apply etc anywhere?. I'm not the maintainer, I just happened to be scanning issues before I submitted my own ;)\nAs I understand it, antigen and oh-my-zsh are different ways of doing the same thing. You can tell antigen to install various packages from within oh-my-zsh, rather than installing it as a whole. So, you'd say something like:\nantigen use oh-my-zsh  # gets oh-my-zsh, but doesn't install it\nantigen bundle git  # gets the git module from oh-my-zsh\nantigen apply  # installs any bundles you've specified\nIf you just want all of oh-my-zsh, I think you just use oh-my-zsh. This is more of a pick-and-choose method, like Debian's apt, or OSX's homebrew. Or at least, that's how I see it.\nTo address your concern, I think the .zcompdump files are being installed by oh-my-zsh, it's not antigen. You'll have to look at oh-my-zsh to see how to rename / manage those.. ",
    "cstockton": "At the time I wrote this I was just giving a default installation of \"oh-my-zsh\" a shot, which seems to include all of this \"antigen\" stuff. I noticed it was creating two files in my home directory, I didn't like this behavior so I googled how to fix it. This led me to the wiki for this project, which did not work. It says:\n```bash\nUse ANTIGEN_COMPDUMPFILE to configure zsh compdump file location:\n.zshrc:\nexport ANTIGEN_COMPDUMPFILE=/path/to/location/.zcompdump\nNote: On Antigen v2 and above this configuration is ANTIGEN_COMPDUMP.\n```\nAs for why I am calling oh-my-zsh.sh, that was what the installer.. installed. Rather than pasting the entire zsh file the installer put on my machine here- I posted the relevant details. That said the question was simply: I can't seem to find a way to write the two .zcompdump{-host-ver} files elsewhere. - Is antigen apply the answer to that question?\nFeel free to close this issue out, I no longer need resolution. Thanks for the response.. I see, maybe the wiki that states it's part of this project just needs updated then. Thanks for the response.. Okay sweet, if I ever give ZSH a try again I at least know how to fix that, thanks a lot.. ",
    "vaer-k": "I believe it is a permissions issue because it works as expected when I su - to another user.. ",
    "igorvisi": "zsh 5.4.2. Nothing have changed ! Should I clear cache ?. It worked ! Thanks  a lot. ",
    "scinos": "Same error with zsh 5.2 (x86_64-apple-darwin16.0). ",
    "dodoru": "Are you running it from bash? \nYou should just run zsh and it will load the zshrc file itself.. ",
    "sohocoke": "from https://github.com/zsh-users/antigen/wiki/Cookbook:\n\nStatic bundle loading\nIf you need to load Antigen faster you may load bundles statically from cache. This way you can avoid loading and running Antigen each time you shell starts.\nNote: This will be unnecessary for 2.x (current develop) as this will be performed by Antigen itself.\n\nI took this to mean that the caching is performed automatically, but I guess it was saying that the cache is used automatically without polluting .zshrc with a conditional, once it's generated with cache-gen. \n. @desyncr So do new antigen bundle commands added in the startup files expire the cache so the cache is automatically kept up-to-date?. Versions of things:\nuser@host ~> which zsh\n/bin/zsh\nuser@host ~> zsh --version\nzsh 5.2 (x86_64-apple-darwin16.0)\nuser@host ~> brew info antigen\nantigen: stable 2.2.1, HEAD\nPlugin manager for zsh, inspired by oh-my-zsh and vundle.\nhttp://antigen.sharats.me/\n/usr/local/Cellar/antigen/2.2.1 (6 files, 188.8KB) *\n  Built from source on 2017-09-14 at 19:09:52\nFrom: https://github.com/Homebrew/homebrew-core/blob/master/Formula/antigen.rb\n==> Caveats\nTo activate antigen, add the following to your ~/.zshrc:\n  source /usr/local/share/antigen/antigen.zsh\nuser@host ~>. ",
    "naphta": "zsh 5.4.2 (x86_64-apple-darwin17.0.0)\nAntigen v2.2.1 (6a99ab8)\nNo extensions loaded.\nSame issue as above. ZSH installed from homebrew, using the nightly antigen.. ",
    "polothy": "Ah, this must have happened to me as well.  I had a completion function for a custom program and it suddenly stopped working.  Could never figure out the source.  Had to convert it into a ZSH plugin and load it via Antigen for it to start working again.\nWould love to see this restored!. Huh, that doesn't seem like a solution, thought you needed the apply call?. Thanks for the reply, if I add autoload compinit && compinit and then my compdef prior to antigen use, it does work.  Thank you!. ",
    "Crandel": "I commented antigen apply in my ~/.zshrc and everything works fine. @desyncr Unfortunately your solution doesn`t work for me. \n```\nautoload -Uz compinit\ncompinit\nantigen_source=\"$HOME/antigen.zsh\"\nCustom compdef\nproject_folders=\"/opt/work/projects/\"\nfunction prj () {\n  cd $project_folders\n  if [ ! -z $1 ]; then\n    cd $1\n  fi\n}\ncompdef \"_path_files -W $project_folders -/ && return 0 || return 1\" prj\nbackup_dir=\"/opt/work/backup\"\nfunction backup () {\n  cd $backup_dir\n  if [ ! -z $1 ]; then\n    cd $1\n  fi\n}\ncompdef \"_path_files -W $backup_dir -/ && return 0 || return 1\" backup\n. $antigen_source\nantigen use oh-my-zsh\nantigen bundle git\nantigen bundle pip\nantigen bundle command-not-found\nantigen bundle shrink-path\nantigen bundle mvn\nantigen bundle sbt\nantigen bundle scala\nantigen bundle cargo\nantigen bundle zsh-users/zsh-autosuggestions\nantigen bundle zsh-users/zsh-completions\nantigen bundle zsh-users/zsh-history-substring-search\nantigen bundle zsh-users/zsh-syntax-highlighting\nantigen apply\n```\nStill don`t have autocomplete for prj and backup functions. \nantigen reset && rm ~/.zcompdump was done before testing. ",
    "ming13": "@desyncr, sorry to bother you, but are there any news on this?. ",
    "cvuorinen": "Same problem here since updated to antigen v2. ",
    "PureWhiteWu": "Same question here.\nI found that this can be fixed by executing source <(kubectl completion zsh) again in zsh.\nMaybe antigen did something after zsh has loaded ~/.zshrc?. ",
    "pluttrell": "@PureWhiteWu I have source <(kubectl completion zsh) in my ~./zshrc as well and still require the temporary work around @shane-lawrence mentioned above.. ",
    "mlushpenko": "@shane-lawrence thanks, your workaround worked for me as well. ",
    "bin101": "Do I need a special option to enable the builtins? Because if I run a \"cd -q dir\" or try antigen update I only get following error: cd: cd : string not in pwd: -q. nvm did an overload for cd years ago to show the content of the entered dir. I am sry for opening this issue.... I didnt used an alias I wrote a function to overload cd:\n```shell\nENTER AND LIST DIRECTORY{{{\nfunction cd() { builtin cd -- \"$@\" && { [ \"$PS1\" = \"\" ] || ls -hrt --color --group-directories-first; }; }\n\n}}}\n```\nI dont know if it is possible to get antigen working with this.. ",
    "adambro": "FYI: with version 2.0.2 the git plugin from oh-my-zsh completion for git commands broke some time ago (see error below), but with 2.2.2 is works well:\n_git:58: _git_commands: function definition file not found. OK, thanks for quick response. I have no idea idea about the versioning, but take into consideration that 2.2.2 fixed my problem with git plugin from OMZ. I've tried that on Ubuntu 17.04 box, because it worked well all the time with antergos-git AUR package.\nThanks a lot for your great work, Antigen is totally awesome!. ",
    "daygr": "Thanks. I removed those three plugins, and then added each one. Looks like git-extras works fine by itself but the other two throw compdef errors (when cache is false).\nStill not having the theme stick when cache is true, but I can live without the git plugins.\nedit: also changed the lib/ inclusion to use oh-my-zsh, no difference AFAICT.\nAlso, not sure if this is related but after removing the plugins from my list of bundles in zshrc, I had to completely remove my ~/.antigen before antigen list stopped showing them.. ~ \ue0b0 zsh --version\nzsh 5.4.2 (x86_64-unknown-linux-gnu)\n ~ \ue0b0 antigen version\nAntigen develop\nExtensions loaded: lock, parallel, defer. Hey desyncr, thanks for the update. \n\nI added the plugins I was having issues with back to my .zshrc and commented out the ANTIGEN_CACHE=false, and now I don't get the compdef garbage, but the theme is still not setting at first... see the screenshot. That is a newly opened terminal with some default zsh theme (can't even figure out where that is getting set from, but that might be the problem).\nIt's really puzzling, though not truly breaking as it works all fine with ANTIGEN_CACHE=false. ",
    "loganintech": "I am running zsh version 5.4.2 (x86_64-apple-darwin16.7.0)\nand I just cloned antigen from git last night. Just was able to fix it by completely uninstalling and reinstalling antigen. I'm talking a full rm -rf ~/*antigen*. ",
    "dead10ck": "Sorry for the delay. Sure, here's my .zshrc:\n```sh\ninstall with antigen-git\nantigen=/usr/share/zsh/share/antigen.zsh\nif [[ -f $antigen ]]; then\n  source $antigen\n# Load the oh-my-zsh's library.\n  antigen use oh-my-zsh\n# Bundles from the default repo (robbyrussell's oh-my-zsh).\n  antigen bundles <<EOBUNDLES\n    pip\n    seebi/dircolors-solarized\n    zsh-users/zsh-autosuggestions\n# these two have to be in this order\nzsh-users/zsh-syntax-highlighting\nzsh-users/zsh-history-substring-search\n\nEOBUNDLES\n# Load the theme.\n  antigen theme robbyrussell\n# Tell Antigen that you're done.\n  antigen apply\nelse\n  print \"$antigen missing!\"\nfi\nkey bindings\nbindkey -v\nbindkey -M vicmd 'k' history-substring-search-up\nbindkey -M vicmd 'j' history-substring-search-down\nbindkey -v '^?' backward-delete-char\nbindkey '\\eOH'  beginning-of-line\nbindkey '\\eOF'  end-of-line\nbindkey '^F'  end-of-line\nbindkey '^[[3~' delete-char\naliases\nalias tiga='tig --all'\nalias tigs='tig --status'\nalias dc='docker-compose'\nalias ap='ansible-playbook'\nalias lss='ls -alh'\nalias e='exa'\nalias el='exa -alb'\nalias gvim='gvim -geom 150x45'\nalias ga='git add'\nalias gbi='git bisect'\nalias gs='git status'\nalias gd='git diff'\nalias gdc='git diffc'\nalias gdlc='git difflc'\nalias gl='git lg'\nalias gll='git llg'\nalias gla='git lga'\nalias glla='git llga'\nalias dr='sudo systemctl daemon-reload'\nalias start='sudo systemctl start'\nalias restart='sudo systemctl restart'\nalias stop='sudo systemctl stop'\nalias enable='sudo systemctl enable'\nalias disable='sudo systemctl disable'\nfish has a built-in called status, so we can't alias it\nalias status='sudo systemctl status'\nalias pbcopy='xclip -selection clipboard'\nalias pbpaste='xclip -selection clipboard -o'\nalias gradle='gradle --console rich'\nalias t='theca'\nalias v='vagrant'\nupdate() {\n  pacaur -Syu --devel --needed $@\nif [ $? -ne 0 ]; then\n    echo \"Pacman update failed. Exiting.\"\n    return -1\n  fi\nantigen update\n# can't do this while it's installed from the AUR\n  # antigen selfupdate\n}\nvim: set ts=2 sw=2 et:\n```\nI have no .antigenrc.. ",
    "devalnor": "The issue is back on a fresh OSX 10.13.2 install with homebrew on zsh 5.4.2 and antigen 2.2.3\n-antigen-cache-generate:zcompile:65: can't open file: zsh. ```\nLoad source from Homebrew Install\nsource /usr/local/share/antigen/antigen.zsh\nLoad the oh-my-zsh's library\nantigen use oh-my-zsh\nantigen bundle <<EOBUNDLES\n    # Bundles from the default repo (robbyrussell's oh-my-zsh)\n    # git\n# Syntax highlighting bundle.\nzsh-users/zsh-syntax-highlighting\n\n# Fish-like auto suggestions\nzsh-users/zsh-autosuggestions\n\n# Extra zsh completions\nzsh-users/zsh-completions\n\nEOBUNDLES\nLoad the theme\nantigen theme robbyrussell\nTell antigen that you're done\nantigen apply\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && . \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n``. Yes it's the complete.zshrc` no other files.. ",
    "TimJones": "So the 2.2.3 release on https://github.com/zsh-users/antigen/releases should be a pre-release??. I understand now.\nGoogle page ranks GitHub Releases way higher than the readme or wiki. I think it would be massively helpful to mark non stable releases as prerealse as suggested by GitHub documentation.. ",
    "ncihnegn": "I just checked, at least the develop version works.. ",
    "ergoz": "same problem. ",
    "yannvanhalewyn": "Same problem on Antigen v2.2.3 and zsh 5.5.1.. Very unfamiliar with antigen internals, but maybe this is a clue:\n```sh\n$ echo $ANTIGEN_CHECK_FILES\n/Users/yannvanhalewyn/.zshrc -zsh\n$ zcompile -zsh\nzcompile: bad option: -s\n```. ",
    "tmjoen": "For anyone else experiencing this:\nIt's because of the cat override somewhere in your zsh config.\nI had mine in $dotfiles/zsh/lib/aliases.zsh\n```zsh\ncat with beautiful colors. Requires Pygments installed.\nif command-exists pygmentize; then\n  alias cat='pygmentize -O style=friendly -f console256 -g'\nfi\n```\nJust comment out the alias, delete .antigen and start shell.. ",
    "sambadevi": "I was using the exact same alias for cat\nMaybe antigen should use /bin/cat instead. ",
    "tysun": "It seems to be fixed. I had to add these lines at the top of my .zshrc file. Does anyone know why? Because other users have not had to add these lines.  Even when you look at the repo .md install example it doesn't have these lines. \n```\nPath to oh-my-zsh\nexport ZSH=$HOME/.oh-my-zsh\nsource $ZSH/oh-my-zsh.sh\n```. ",
    "shvchk": "I've created a bug report on Launchpad, too.\nStrange enough, I don't have this bug on my Ubuntu 18.04 laptop, which was upgraded from 17.10 (bug was there for some time after upgrade IIRC, but not anymore), although sudo grep -r antigen-env-setup /bin /etc /home /lib /lib64 /sbin /usr does not bring anything. I have no idea why it works, maybe this function got cached somewhere. I only encounter this bug on freshly installed 18.04 systems.. ",
    "Bo7a": "Just confirming this is also not an issue on the machine where I have upgraded from 17 to 18. But on my newly installed 18.04 it has the same error.. ",
    "ASalazarMX": "The previous Ubuntu version is 1300+ lines longer and includes the missing -antigen-env-setup function. Could this be used as a temporal workaround?\nEdit: using it, no negative consequences so far.. ",
    "juherr": "Ping @fladi, I think you are the one who can help here.. @srekcahrai In fact, the package comes from Debian repo and that's why I ping @fladi who maintains the package.. @srekcahrai Ubuntu repo => Debian repo => @fladi\n. Issue reported on the debian bugtracker too: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=906757. ",
    "sumit-kumar-rai": "zsh-antigen from Ubuntu repo seems to be missing most of the code. I use this command to install zsh-antigen.\nsudo curl -o /usr/share/zsh-antigen/antigen.zsh -sL git.io/antigen. @juherr The script in the package obtained from the Ubuntu repo is incomplete. If Debian repo is different than Ubuntu repo then I haven't explored it.. ",
    "pointline": "thanks. ",
    "lucatrv": "I add some thoughts to this issue. The main problem is that antigen bundle <<EOBUNDLES fails without any error message. Apart from updating the \"Quick start\" Wiki page, a possible solution would therefore be to add an error message in case more than one bundle is passed to the antigen bundle command.\nAnother option however, which I actually prefer, would be to extend the antigen bundle command so that it works either with single or multiple bundles, and to remove the antigen bundles command altogether. IMHO this would simplify use cases and and prevent the issue at the source.. ",
    "melMass": "It should be as straightforward as removing the $ZSH env and ~/.oh-my-zsh folder. Nothing more.... #657. Never mind, I switched to Antibody.. Anyone ?. I'm pretty sure it's related to how ~/.antigen/init.zsh.zwc & ~/.antigen/init.zsh.zwc gets created. #657. Never mind, I switched to Antibody.. @steinybot Good point I didn't know.\nOnly Linux, BSD, OSX available. ",
    "vviikk": "Yup. And I moved to antibody. Easier to debug what slowing the terminal down.. ",
    "architchandra": "Sorry, I'm a noob and couldn't understand how to remove the $ZSH env. Is there any guide that I can refer to for this?. ",
    "lye95": "By default, zsh tries to run background jobs at a lower priority, which Windows won't let it do. A good workaround is to put\nsh\ncase $(uname -a) in\n   *Microsoft*) unsetopt BG_NICE ;;\nesac\nin your .zshrc file. That alters zsh's default behavior and fixes the problem entirely, in my experience.\n@see https://github.com/rupa/z/issues/230#issuecomment-362297213. ",
    "steinybot": "In case anyone comes to this using antigen with babun then antibody will not work as it has not been compiled for windows. It likely works with bash and WSL.. ",
    "matteobarbieri": "I can confirm the very same behaviour. This seems to happen when trying to load the same theme twice (loading a different theme seems to work fine)\nHowever this prevents for instance to:\n\nload theme A\nload theme B\nload theme A again (this leads to empty prompt). @XikunZhang in case you were still wondering, I found a workaround, however I'm not sure if there are any serious side effects to that (I haven't noticed any so far).\n\nChanging around row 465 of antigen.zsh seems to fix the issue\ndiff\n-  -antigen-set-default _ANTIGEN_WARN_DUPLICATES true\n+  -antigen-set-default _ANTIGEN_WARN_DUPLICATES false. ",
    "dontlaugh": "I feel like I'm experiencing something similar when re-sourcing ~/.zshrc. \nUpon opening a new terminal, the first load is fine. But if I run source ~/.zshrc I get the following output, and then it hangs indefinitely.\nSeems robbyrussell/oh-my-zsh is already installed!    \nSeems robbyrussell/oh-my-zsh is already installed!  \nSeems robbyrussell/oh-my-zsh is already installed!  \nSeems robbyrussell/oh-my-zsh is already installed!     \nSeems robbyrussell/oh-my-zsh is already installed!   \nSeems robbyrussell/oh-my-zsh is already installed!   \nSeems zsh-users/zsh-syntax-highlighting is already installed!  \nSeems robbyrussell/oh-my-zsh is already installed!\nMy .zshrc file looked like this:\n```\n!/bin/zsh\nsource ~/.config/antigen.zsh\nantigen use oh-my-zsh\nantigen bundle git\nantigen bundle heroku\nantigen bundle pip\nantigen bundle lein\nantigen bundle command-not-found\nantigen bundle zsh-users/zsh-syntax-highlighting\nantigen theme clean\nantigen apply\nexport PATH=/usr/local/bin:/usr/local/sbin:${PATH}\nexport PATH=$PATH:~/.cargo/bin\nexport PATH=$PATH:~/bin\nexport RBENV_ROOT=/usr/local/var/rbenv\n```\nUpdate removing the antigen theme clean gets my prompt back. My terminal wasn't actually\nfrozen, it was merely lacking a prompt. Of course now it's unthemed.. ",
    "arowla": "I've been experiencing this issue, too. The problem can be reproduced simply by running antigen theme <themename> at the terminal.. ",
    "ustcyue": "same here, antigen theme is causing the problem.. ",
    "mtyler": "happening for me as well.  Fortunately, it only hangs when trying to apply the same theme so...  \nreplacing \nantigen theme candy #or whatever\nwith \n```\nworkaround for https://github.com/zsh-users/antigen/issues/675\nTHEME=denysdovhan/spaceship-prompt \nantigen list | grep $THEME; if [ $? -ne 0 ]; then antigen theme $THEME; fi\n```\nallowed me to source .zshrc. ",
    "artivilla": "Is this issue been resolved, I'm having issues on reload and getting the following:\n/Users/artichandok/.zshrc:4: command not found: antigen-use\n/Users/artichandok/.zshrc:5: command not found: antigen-bundle\n/Users/artichandok/.zshrc:8: command not found: antigen-bundle\n/Users/artichandok/.zshrc:14: command not found: antigen-bundle\n/Users/artichandok/.zshrc:15: command not found: antigen-bundle\n/Users/artichandok/.zshrc:25: command not found: antigen-apply\nHere's my .zshrc file:\nZSHA_BASE=$HOME\nsource $ZSHA_BASE/.zsh-antigen/antigen.zsh\nAny ideas? I'm using the nightly version.. ",
    "stafyniaksacha": "Got same issue with:\n- antigen v2.2.2\n- debian stretch 4.9.0-7-amd64 \n- zsh 5.3.1 (x86_64-debian-linux-gnu). ",
    "seansfkelley": "I'm seeing something similar, though without twiddling the theme-switching or caching. compdefs for git before antigen apply were failing, but after antigen apply were not. I tried moving antigen apply up to right after the source:\nsource /path/to/antigen.zsh\nantigen apply\nantigen use oh-my-zsh\nantigen bundle git\nand now it works? The antigen apply docs suggest this is either a bad idea (for performance reasons) or shouldn't work, but in any case, all my plugins and completions seem to be working fine. YMMV?\n\nantigen v2.2.2\nzsh 5.7.1\nmacOS 10.14. \n",
    "rossmacarthur": "Btw you can host a gif using GitHub raw content without having to add it to the repo, by dragging and dropping into a comment, waiting for it to upload, and then using the generated link. You don't even need to post the comment.. ",
    "xgarrido": "forget about that\n. ",
    "mikeys": "Flat => Flag\n. ",
    "thiagotalma": "I prefer that you give the most appropriate solution \ud83d\ude09 . ",
    "rbjorklin": "This should be $(basename -- $0). "
}