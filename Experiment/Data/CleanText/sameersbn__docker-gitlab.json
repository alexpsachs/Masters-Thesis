{
    "sameersbn": "The issue is caused by hipache. \n. Merged! Thanks for the contribution.\n. added app:backup command for taking backups. \nRefer the \"Backup\" section of the README for details.\n. You are right. This is a regression introduced in commit #1f0d10658ab.\nNow fixed,\n. Yes. Will work on it soon.\nThis is a necessary configuration.\n. @garfee SMTP support is now added. Please refer README\n. added in commit #542f822e3\n. FYI, controlled via the GITLAB_SIGNUP environment setting.\n. The current directory structure does not allow for backups to be restored. This is because gitlab tries to rename the existing repositories directory to repositories.old while restoring a backup. Since we mount the repositories directory as a volume, the repositories directory cannot be renamed.\nTo fix this we will unify all docker data into a single data directory which would hold all of docker data (with the exception of mysql data) and only this directory would be mounted as a volume\n. commit #dc2a08cd96eee3669c41d37e73ab27bb874904f7 implements this feature\n. commit #77957cd205879c63041c063c6b2f7d097d3cd55e implements this feature.\n. The main idea of this image was to make if easy for anyone to tryout/use gitlab without having to deal with setting up the system or gitlab configuration files etc. Like a plug and play kinda thing.\nOver a period of time I started adding all these configuration options so that users could customize their instance without having to directly deal with the configuration files.\nScalability wise I don't see any issues here. In fact its simple to start multiple instances of the image when you need to do load balancing stuff.\nHaving said that, I do like your idea of being able to pick up the configuration from a config directory so that more advanced users can customize the configuration to their liking. This could be implemented as an alternate configuration method such that if such a configuration is present, it will override all environment variable settings.\nCurrently all of gitlab data is mounted at /home/git/data, so we can look for a config directory within this path and pick the configurations for gitlabhq and gitlab-shell from this directory. I think this could work well and not interfere with users who are already using this image in its current form.\nLet me know your thoughts.\nSince you mentioned that you are new to docker, I advise you to take a look at:\n- http://crosbymichael.com/dockerfile-best-practices.html\n- https://github.com/paulczar/docker-wordpress\nRegards\n~Sameer\n. What do you mean by \"Add override setup script\". Are you saying that\n- the image should pull the default configuration when its run? \n- or do you mean informing users (in the documentation) where to get the sample configs from if case they prefer editing the configs by hand.\nBy \"command-line parameter\" you mean something like 'docker run sameersbn/gitlab app:start --db_host \"192.168.1.100\" --db_port=\"10000\"' and so on right? So basically instead of env variables we do getopt parsing.\nActually, I had started off with this image the same way. Can't remember why I ditched it though. However it would still not fix your original request, unless all possible configurable parameters are tunable this way.\n. Will be working on this soon. Just a little caught up with work.\nThis feature should be implemented before the next gitlab release.\n. @mauvm Hi and sorry for leaving this request open ended for so long. I finally got to it and the changes have been committed to the master. Have yet to get to updating the README. Here is a short version\nExtract https://github.com/sameersbn/docker-gitlab/blob/master/resources/setup/config.tar.bz2 to your data directory and edit the logs as per your liking (be careful though). \nThe variables that are surrounded by the {{}} markers are the ones that are updated at runtime. You can edit this to hold the final value and omit passing the values as environment variable parameters. For example if you are using an external mysql server connection at 192.168.1.100, you can change {{DB_HOST}} in gitlabhq/gitlab.yml to the ip address and so on.\nOther configuration parameters can be edited as per your liking.\nMake sure you do not change any path variables, you are destined to be doomed if you do.\nLet me know if you run into any issues.\n. P.S. If all works fine, please close this request. Then I will officially document this feature.\n. Was it fine before?\n1. Since gitlab-6.4.x, the start up time of the container is gone up. But that's just at start up. After which it is fine.\n2. Check your system load\n3. Clean up leftover docker containers using\n$ docker rm $(docker ps -a -q)\nAbove command will delete all docker containers (not images) that are not currently running. This is sort of a clean up. When I was new to docker, I noticed that this slows down everything.\n1. What is the docker version you are using. If you are using docker > 0.7.2, then I you suggest you downgrade to 0.7.2 and check again. Personally I am seeing all sorts of issue with docker > 0.7.2. So I have held back upgrading docker at the moment.\nsudo service docker stop\nsudo apt-get purge lxc-docker*\nsudo apt-get install lxc-docker-0.7.2\nsudo service docker start\nLet me know if any of the above helps.\nRegards\n~Sameer\nLet me know.\n. P.S. the container by default is configured to run in production mode.\nNeed to add option to run it in development mode (thought i had already done that)\n. @mauvm I would still advice against updating to docker > 0.7.2\n. Its a little more than that isn't it?\nI mean nginx would have to be configured for https and the certificates would need to be installed isn't it?\nIf you are using it via hipache it might be fine. But directly accessing the application will probably not work.\nPlease correct me if i am wrong.\n. To be frank, I understood what you are saying in part but not fully.\nSee I am new to nginx and had never heard of puma until today. So I don't completely understand your response.\nBut I think it is similar to setting up hipache.\nHipache allows you to create vhosts and will internally route HTTP/HTTPS tracffic to docker containers. Hipache talks to docker containers in http only, so if https  support is required then hipache has to be configured for SSL support. So as a result all internal traffic is http while the external traffice could be http/https. I think puma is probably similar (but i cannot be sure).\nHowever, that being said. I think to enable HTTPS the proper method would be install the certs in the container so that the thing can work out of the box or with minimum setup. This way I think it will work both ways.\nP.S. Hipache also allows you to do load balancing stuff. Hipache really is similar  to HAProxy with the difference being that you can setup multiple vhosts.\nLet me know if you agree. I will do the required changes to get SSL working if we are in agreement :)\n. @truongsinh One important thing that needs to works  that once https is enabled http clone url become https. We need to make sure cloning from https works. Long time back when I tried enabling HTTPS using SSL support provided by hipache, it had failed horribly.\n. can you rebase your changes and reopen the pull request?\n. nevermind. not needed\n. @truongsinh are you saying that by just adding the GITHUB_HTTPS option to the run command you are able to clone via https? It definitely didn't work for me.\nWhats your setup?\n. @truongsinh I updated the image to gitlab 6.5.0. Please note that if you face login issues after updating it is probably because of SSL. Hopefully it will work for you (fingers crossed).\nFor me where SSL barely used to work on 6.4.3 (i.e. only https browser requests would work), it got completely broken and i could no longer login to gitlab.\nI hope you dont face any issues. \n~cheers\n. Gitlab-CI is a seperate application and can be run in a seperate container.\nA docker image for this already exists. Please take a look at https://github.com/anapsix/gitlabci-docker.\nPersonally I have not yet used gitlab-ci. But from what I understand it allows you to build software and run tests whenever some event (such as a git push) occurs. As such I think it is advisable to run it in a separate container for when the builds/tests begin to load up the server you could provision a separate server (to run the continuous integration server) with minimal effort.\nIf the above mentioned project does not meet your needs then do let me know. I will be happy to create a gitlab-ci/gitlab-ci-runner image based largely on this image.\n. Maybe gitlab-ci would not load up the server.. The runner could.\nBut still a gitlab-ci server  would be useless without a runner.\n. Please make sure that you are allowing the application enough time to start.\nA typical docker log will look like this https://gist.github.com/sameersbn/b5b99fb72ed4eb22908f\nYou have to wait until you see the below lines in the log.\n``\n--2014-02-03 10:20:55--  http://localhost/\nResolving localhost (localhost)... ::1, 127.0.0.1\nConnecting to localhost (localhost)|::1|:80... failed: Connection refused.\nConnecting to localhost (localhost)|127.0.0.1|:80... connected.\nHTTP request sent, awaiting response... 302 Found\nLocation: http://localhost/users/sign_in [following]\n--2014-02-03 10:20:55--  http://localhost/users/sign_in\nReusing existing connection to localhost:80.\nHTTP request sent, awaiting response... 200 OK\nLength: unspecified [text/html]\nSaving to:/dev/null'\n 0K ..                                                      347M=0s\n\n2014-02-03 10:20:56 (347 MB/s) - `/dev/null' saved [2589]\n```\nIf you make requests to the gitlab application before this you will see the 500 errors since the application has not started yet, but should respond correctly once its up. Please check if this is the case.\nIf you are still seeing this issue then just try restarting the container. \nA few people have reported this issue but they have found that restarting the container fixes this issue. I think that its got something with gitlab.\nIf you are seeing this issue consistently, try running the image without any arguments\nbash\ndocker run -i -t sameersbn/gitlab\nIf you do not see the issue after this, then maybe it could be a problem with the application arguments.\n. @riaanvddool If the mysql error, can you add the parameter\nbash\n-e \"DB_POOL=10\"\nto the run command and retry. If it still does not work, try increasing the number.\n. @riaanvddool You mean you are using the mysql docker container? i.e. https://github.com/sameersbn/docker-mysql\nIf yes, then edit the https://github.com/sameersbn/docker-mysql/blob/master/resources/setup/commands.sql file appropriately and rebuild the mysql docker images.\n. @riaanvddool  glad to hear that the issue is resolved for you.\n. @fannheyward I have just updated the sources to randomly generate a password for root when the container is started. This means the password will differ every time you start the gitlab image. \nThe current password can be fetched from the docker logs. The first line in the log gives away the password for the root user\n$ docker logs <container-id>\nUser: root Password: XXXXXXXXXXX\nI just made the commit, the updated image should be available on the docker index in a couple of minutes.\n. @demas you need to provide -p option while running the images,\ndocker run -d -p 22:22 -p 80:80 sameersbn/gitlab\nThe above will forward all requests (on all interfaces) on ports 22 and 80 of the host to the docker container.\nYou can also setup forwarding for specify interfaces in the host, like so\ndocker run -d -p 192.168.1.xx:22:22 -p 192.168.1.xx:80:80 sameersbn/gitlab\nThe above also means that there cannot be any other application that uses port 22 and 80. For example you cannot have an ssh server running on port 22 of the host machine. \nYou can however change the port numbers for the forwarding, for example\ndocker run -d -p 192.168.1.xx:22222:22 sameersbn/gitlab\nwill forward connection to port 22222 on the host to port 22 of the container. But by setting up the ssh port forwarding this way would require all users to setup ssh configuration to specify the port number of the git server. Its not worth it.\nMy best suggestion is to forward port 22 of the host to port 22 on the container and if you need to run a SSH server on the host, simple change its port number.\n. @ckulla thats right. the most conservative installation of gitlab requires 1GB of available memory. Its more of a ruby thing i think. Anyways, I will add minimum requirements section to the readme. Thanks.\n. @ckulla P.S. the latest available version of gitlab is 6.6.0\ndocker pull sameersbn/gitlab:6.6.0\n. @ckulla added hardware requirements section to README. \n. added app:rake command that allows you to execute gitlab rake tasks. refer readme for a brief introduction\n. @ckulla have added GITLAB_SHELL_SSH_PORT option to specify the public facing SSH port. For example if you have something like -p 22222:22 in the docker run command where connections to port 22222 on the host get forwarded to port 22 of the docker container, then you have to add -e \"GITLAB_SHELL_SSH_PORT=22222\" to the run command.\nThere is no special handling for http port. It should already work as is. \n. @miko have you added the SSH key to your gitlab profile? If you are able to login as root to the container, then your ssh tunnel is probably fine. The SSH key is only thing i suspect.\n. @miko if you have already added the SSH key and are still not able to login, then I would suggest you remove all SSH keys from your profile and then empty the .ssh/authorized_keys from your data store and then try re-adding your key to gitlab profile.\nI remember seeing such an issue once, and the above are the steps I took to resolve it. \n. @milo that error may just be a generate access denied error, probably due to the keys. For starters, try running the container without any options to check if everything works\nbash\ndocker run -i -t sameersbn/gitlab\nAdd your ssh key to the profile and try to push/pull\nIf this does not work, then something is seriously broken.\n. @milo also check if the key you added to your gitlab profile is present here\nbash\ncat /opt/gitlab/data/.ssh/authorized_keys\nThis file is updated automatically when you add your ssh key to your profile. If its not, then it could be a directory permissions issue.\n. @miko oops, somebody with the handle milo is scratching their head.\nThe gitlab_url in the gitlab-shell config is set to http://localhost/ by default. You mean after changing value to http://GITLAB_HOST it worked for you?\n. @miko i am not exactly able to understand what goes wrong for you.\nFirst, can you login to the container and ping the localhost\nbash\nping localhost\nIf it does not ping then there lies the issue. I think older versions of docker did not add the localhost entry in /etc/hosts. The newer versions do. I suspect this is probably the case.\nCan  you provide me the following info\n- What docker version is being used?\n- are you using a GITLAB_HOST url that is registered on a DNS server?\n- Is your gitlab server accessible from outside your network? i.e. is it running on a public address?\n- In you pull/push tests were you using the http or ssh url to the repo\nYou input on the above questions might help me simulate your environment setup to better understand the issue.\nCan you run the container in the following way and see if you are able to clone/pull/push\nbash\ndocker run -i -t -rm \\\n-p MYIP:80:80 \\\n-p MYIP:22:22 \\\nsameersbn/gitlab\nalso try\nbash\ndocker run -i -t -rm \\\n-p MYIP:80:80 \\\n-p MYIP:22:22 \\\n-e \"GITLAB_HOST=gitlab.MYDOMAIN\" \\\nsameersbn/gitlab\nLet me know what works and what does not.\nUpdating the gitlab_url in the shell config might work, but that would require that users specify the -h option while running the image because if the domain resolution does not happen via DNS then it will break. For example, in my case i have added a /etc/hosts entry on my host to git.sameersbn.local and I access the gitlab app using the git.sameersbn.local url. I believe a lot of users are probably using the application this way in internal networks.\nP.S. the official gitlab install guide does not even mention changing the gitlab_url in the gitlan-shell config.\nPlease provide your data on the above tests so that we can come to a conclusion.\n. > No, I mean changing to:\n\ngitlab_url: http://gitlab.MYDOMAIN/\nwhere gitlab.MYDOMAIN is the value set in GITLAB_HOST in the docker command line. So that\ngitlab_url is \"http://\"+$GITLAB_HOST+\"/\"\n\nright right, thats what i meant as well. please read my last comment\n. can you tell me if this works from within the container?\nbash\nping localhost\n. @miko add -h gitlab.MYDOMAIN to your docker run command. that should fix your issue\n. @miko i am able to recreate this issue. will update you on the fix\n. @miko naah.. false alarm, i had some entries in .ssh/config on my host that caused the issue.\n. @euforic what issue are you seeing? Is it same as this one? You referred issue #20, so i am confused. Are you able to open the web page after starting the application?\n. @milo I have applied your fix to the master\n. @abilashks I think you have not allowed remote access to your mysql server/database. Are you able to connect to the mysql server and use the gitlab database remotely? \n. closing issue due to inactivity...\n. @gargkapil2008  Please check if your host meets the hardware requirements. Could be a RAM issue. Gitlab requires at least 1 GB of available RAM.\n. closing issue.. \n. @gargkapil2008 you dont need to send the command\nbash\nsudo service gitlab start\nThe gitlab server is started automatically.\nPlease start the docker image and watch the logs\nbash\ndocker logs -f gitlab\nP.S. Please refer the README\n. bash\ndocker pull sameersbn/gitlab\ndocker run -rm -i -t -name=gitlab -p 8080:80 sameersbn/gitlab\nwait for the application to start, it could take a while to start. Point your web browser to http://127.0.0.1:8080\n. @gargkapil2008 the instructions i sent you are the bare minimum to just get the application started. If you want to use the container in an actual production environment them you need to read the readme. Infact, the commands I sent you are from the quick start section of the readme.\nYou will need to forward the ssh ports for SSH access from outside the guest using the -p option.\n. @mrgamer I have now added the installation of ruby2.0 via ppa and have also included some other fixes. The source tarballs and cached rubygems have been left intact\n. @riaanvddool thats a good point. I will remove the binary files.\n. in commit 6aa8037319b0181db7d04781a34d0476838e1d83 I have removed all binary packages and instead the release tarballs are downloaded from github.\n. @riaanvddool regarding cleaning up the repo. Won't it effect all the forks? Do you think it is wise to do this?\n. @riaanvddool i have rewritten the repo history completely and removed all the binary packages. If you have forked the repo I suggest delete the fork and re-fork. Please make sure you extract your private changes before deleting the fork\n. @jirikolarik \njust a note:\n- the public key should be added from the gitlab interface, you should not directly edit the authorized_keys file. you can check the authorized_keys file if your key is listed\n- you should be a member of the project to push commits to.\nedit:\n- please make sure you are actually connecting to the gitlab server. try an ssh login as root using the instructions on the README. Check if that works.\nIf the above two items do not concern you then please try starting the image with the -h option set to whatever you have set your GITLAB_HOST parameter to. For example, if you have set the GITLAB_HOST option to gitlab.local.host, then add -h gitlab.local.host option to the gitlab run command.\nLet me know if it works.\n. @jirikolarik I have a feeling that when you are trying to push/pull the connection is not being made to the gitlab container and maybe it is being done to the host. You can try push or pull by replacing the GITLAB_HOST part of the git repo url with the ip address of the container.\nPlease check issue #38 if that is the case.\n. @jirikolarik can you try to clone from the docker host machine with the same command you are using on the remote machine?\n. I think the main issue is that you are setting an IP address for the GITLAB_HOST. I imagine that could be the root cause of all your problems. Can you setup a DNS entry for the IP. Also consider changing using the default ssh and http ports..\n. @jirikolarik actually that value used to be hard coded to localhost. but as suggested in #26 i changed that to GITLAB_HOST. I should have left it as localhost. I am going to revert that commit and push the changes. \n. @jirikolarik i found that reverting the change does not fix this issue. I have left it as is.\nTo use the standard ssh port for the container, simple change the Port the hosts ssh server is configured to listen on in /etc/ssh/sshd_config. So only when you want to login to the host you would need to specify the ssh port number using the -p option on the ssh command. This is better than running gitlab's ssh server on a port other than port 22 for two reasons:\n- you have nice clean git urls\n- in the future if you decide to use port 22 you will not have to ask all your users to update the git urls on their repos.\nFor port 80, this can be achieved using haproxy, but this requires that you have configured domain names to point to your server.\n. @jirikolarik I get it. Problem is instructing all users to perform this configuration could become a headache. I am fine as long as it works for you.\n. @raphaelfan thanks for the info. I will update the init script to chmod the directory at startup.\n. @oopTiger this is true for all cases. I think it is not even possible to make git over ssh work without disabling login access to the git user, this is because the ssh server is configured to launch the gitlab-shell when a ssh login occurs.\n. @mbannert please note, using this image you should be able to clone git repos via HTTP as well as SSH.\n. @bfdill can you create a new issue with details such as the sample docker-compose.yml file, docker version, host os in use, whether boot2docker, etc is in use?\n. @18601673727  Sorry for the late response.\nI noticed that you have published 10022:22 while you have GITLAB_SSH_PORT=22. As a result the clone url may be wrong. To me it appears that the git clone is connecting to the host ssh server, not the containers. You need to set  GITLAB_SSH_PORT=10022 and then use the new clone url which will look something like this ssh://git@git.mydomain.com:10022/my-account/xxx.git.\nIf you want to have clone urls like git@git.mydomain.com:myaccount/xxx.git, you will first need to configure the host SSH daemon to listen on another port. In the docker-compose.yml change 10022:22 to 22:22 and set GITLAB_SSH_PORT=22\n. @arnos hello, sorry for not replying earlier. I was on travel\nI will take a look at your request and get back with you.\n. @arnos @mbrgm please note that these options are largely untested. If you face any ssues please file an issue.\n. @arnos commit 2aa43899eb07ff5af80f6ba3abc6a15d98697e4a should fix your issue. please test and report back.\n. @liquid actually it is possible to use sendmail with the current image. the thing is not documented yet. It is something that i was supposed to configure into an advanced configuration guide.\nThe image already has most of the components such that you can bend the installation as per your needs. Here is a short form of the advanced configuration guide.\n- Download https://github.com/sameersbn/docker-gitlab/raw/master/config.tar.bz2\n- Create the folder structure config/gitlabhq in the data directory (/opt/gitlab/data/config/gitlabhq)\n- Copy file config/gitlabhq/smtp_settings.rb from the downloaded tarball to /opt/gitlab/data/config/gitlabhq/smtp_settings.rb\n- Edit /opt/gitlab/data/config/gitlabhq/smtp_settings.rb as per your requirements\n- Run the image as you would normally do.\nThis way you can override the configuration that is automatically created.\nHopefully this is all that you would require.\n. @liquid does this work for you?\n. @liquid closing this issue, refer to issue #41 for additional information\n. @jwthomp Currently there are 2 ways you can do this.\n1. As you have done, you can change the port number of the host ssh server and forward connections to port 22 to the container using the option -p 22:22 in the docker run command. There is no need to use haproxy.\n2. Forward some other port on the host to port 22 of the container and use the GITLAB_SHELL_SSH_PORT configuration option to specify the forwarded port to the gitlab application so that the clone urls reflect this.\nFor example, add -p 10022:22 -e \"GITLAB_SHELL_SSH_PORT=10022\" to the docker run command. Now you will notice that the ssh clone urls in the gitlab server will change to the form ssh://git@git.local.host:10022/docker/docker-gitlab.git.\nMake your pick.\n. @jwthomp @mbrgm  thats pretty sweet. Note that once https://github.com/dotcloud/docker/pull/4441 makes its way into docker master you will not require any extra setup. Just adding --net host to the docker run command will have the desired effect.\nThe feature is already added and is currently being tested and syntax is being finalized, so i think its only a couple of weeks away from landing into the master. As the saying goes \"keep your eyes peeled\"\n. closing this issue.\n. @fazo96 @arnos @zacker330 @djboris @TopCS @bwq @mattvoss @georgkreimer Please note that since the repo was getting bloated because of the packaged binary files. I have completely rewritten the repo history to remove these files.\nSince you have forked this repo and amended your changes on top of it, I suggest you save your commits and then delete and refork this repo before reapplying your commit.\nI am sorry about this.\n. 2014-04-21: the internal mysql and redis servers will soon be removed from the image. Please use external or linked mysql and redis servers.\n. 2014-04-29: added SSL support. Instructions in the README\n. 2014-05-27: have not been able to tag version 6.9.0 due to some issue at the trusted build service. Will tag once they resolve the issue.\n. 2014-05-28: the removal of the internal mysql and redis servers has started and will not be present when the next major version (7.0.0) of gitlab is released.\n. 2014-06-23: Gitlab-7.0.0 now available docker pull sameersbn/gitlab:7.0.0\n. 2014-07-22: Gitlab-7.1.0 now available docker pull sameersbn/gitlab:7.1.0\n. 2014-08-26:\nThe mailer now has to be explicitly set to enable mail delivery via the -e \"SMTP_ENABLED=true\" configuration. SMTP_ENABLED defaults to true if SMTP_USER is defined, else it defaults to false\nThis only affects the latest tag and versions greater than 7.2.0-1\n. 2014-09-25\n- image version 7.3.1-1 and above fixes the bash vulnerability that effects this image. Please make sure you update your gitlab image as soon as possible.\n- in release version 7.3.1-2 you do not need to execute the gitlab:setup rake command to setup the gitlab database at first run. It is handled automatically. \nadvisory: https://about.gitlab.com/2014/09/24/gitlab-shell-and-bash-cve-2014-6271/\n. 2014-09-25\n- release version 7.3.1-3 fixes an issue when mysql database server is used, where the image will wait for the mysql server to accept connections until it times out. If you are using a mysql database then you probably need to update.\n. 2014-10-24\n- gitlab 7.4.0 is out. However there are some issues in gitlab upstream with regards to LDAP. If you are using LDAP with your gitlab installation I suggest you stay away from this release until it has been taken care of. see https://gitlab.com/gitlab-org/gitlab-ce/issues/726 https://gitlab.com/gitlab-org/gitlab-ce/issues/719 for more information\n. Will prepare release 7.4.2 tomorrow. \n. 2013-10-26\n- version 7.4.2 is out and has some LDAP related fixes. Please make sure you take a backup before the upgrade. Refer to the updated upgrade instructions\n. 2014-02-07:\n- The GITLAB_SIGNUP, GITLAB_SIGNIN, GITLAB_PROJECTS_LIMIT and GITLAB_GRAVATAR_ENABLED configuration parameters have been removed from the image. Since GitLab version 7.7, these parameters can be set from the Administration page of the GitLab installation.\n. Folks using this osx + boot2docker + sameersbn/postgresql, it would be great to hear your inputs with issue https://github.com/sameersbn/docker-postgresql/issues/22. Thanks.\n. 2015-03-23:\n- gitlab-ce version 7.9.0 is out now with BitBucket OAuth Support.\n- GITLAB_RESTRICTED_VISIBILITY has been removed and can now be configured from the UI\n- SMTP_OPENSSL_VERIFY_MODE now defaults to peer\n- UNICORN_WORKERS now defaults to 3\n. 2015-05-11:\n- gitlab-ce 7.10.3 is out.\n- version 7.10.2 and above has options to configure remote AWS backups.\n. 2015-09-24\n- Since version 8.0.0, Gitlab CE and CI are one. If you use GitLab CI, then please refer to https://github.com/sameersbn/docker-gitlab/blob/master/CI_MIGRATION.md for migration instructions\nedit: You need to specify the GITLAB_SECRETS_DB_KEY_BASE parameter while starting version 8.0.0. Please refer the updated docs for more information.\n. fixed! \n. Since 8.0.4-1, automated builds have been moved to https://quay.io/repository/sameersbn/gitlab. You will no longer find tagged versions of the image on the hub.docker.com. You can pull the image using docker pull quay.io/sameersbn/gitlab:8.0.4-1. hub.docker.com will only have builds tagged latest, no new versions will be tagged there.\nThe reason for this change is that the release process on hub.docker.com is a very time consuming affair. I had to manually tag builds each time a release was made. quay.io automatically tags new images from the git tag, saving me countless hours of manual effort.\nThis does not change anything other than when you pull the image, you need to prefix quay.io/ to the image name.\n. way better than hub.docker.com\n- simple release process\n- builds are faster\n- user can also download squashed docker image (experimental) or a rocket image\n- has a lot of statistics and visualization tools\n. yea.. but it always says building, when its actually ready. i guess a github caching issue\n. Please be advised that http clones with relative_urls is broken in 8.1.0.\n. If GITLAB_RELATIVE_URL_ROOT is defined then cloning repos using http/https fails. SSH clones work fine.\n. release 8.1.0-1 fixes the https/http cloning issue when GITLAB_RELATIVE_URL_ROOT is used.\n. @davidwindell has it been released? I don't see any options.\nedit:\nI guess it has not been released yet. I don't see any options in the build settings. However once its released I will check it out and decide if it is any good. My main concern is whether docker hub will keep rebuilding tags at every push on the master. If that is the case, I will not even bother.\nI will however continue to generate builds on quay.io as it has served me well over the last couple releases. \n. Builds are now back on Docker Hub and will also remain available on quay.io.\n. 2015-11-22\n- Gitlab 8.2.0 released\n-  & characters in GITLAB_TIMEZONE are now automatically escaped. If you have manually escaped the & character with a / character then you need to remove it\n- For the complete list of changes see https://github.com/sameersbn/docker-gitlab/blob/master/Changelog.md\n- For the complete list of changes in the upstream GitLab project see https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG\n. @mikehaertl this thread is intended to announce changes that could break existing deployments. recently there haven't been any such changes while new releases are being made :smile: \n. @mikehaertl \n\nI think no one would be offended of an announcement too much ;)\n\nAgreed. Issue really is GitLab releases 3 - 4 releases a month. Updating this thread for every release becomes an issue at that point.\np.s. You can get notified about new releases using this atom feed https://github.com/sameersbn/docker-gitlab/tags.atom. If this does not work for you, then I will try updating this thread for every monthly release that happens on 22nd of each month.\n. Note that the release with GitLab 8.6.0 could be delayed by a few days as it breaks relative_url support in the image. If you are eager to use the latest release and DO NOT use relative_urls (i.e. GITLAB_RELATIVE_URL_ROOT) for your gitlab installation, then you can use the latest build of the image. The 8.6.0 tag will be delayed until relative_url support has been fixed.\nPostgreSQL users should also note that GitLab 8.6.0 requires that pg_trgm extension is loaded for the gitlab database. If you are using the sameersbn/postgresql image then please upgrade to sameersbn/postgresql:9.4-17 and add DB_EXTENSION=pg_trgm to the env of the postgresql container (eg, https://github.com/sameersbn/docker-gitlab/blob/master/docker-compose.yml#L8)\n. @lenovouser you are not using relative urls. you can upgrade. \n. 8.6.1 has been released with the relative_url fix.\nbuilds status: https://hub.docker.com/r/sameersbn/gitlab/builds/\nedit: A known issue is the reaction emoji's page does not load with relative urls. This appears to be a upstream issue.\n. @djskinner done. thanks for the suggestion.\n. sameersbn/gitlab:8.7.0 has been released. Please refer the Changelog.\nIMPORTANT NOTICE: If you have reply by email enabled and use email sub-addressing please add +%{key} before the user part of the GITLAB_INCOMING_EMAIL_ADDRESS, eg. GITLAB_INCOMING_EMAIL_ADDRESS=reply+%{key}@example.com. This was automatically added in earlier releases, but since the feature now supports \"dedicated email address\" and \"catch-all mailbox\" this is no longer an option. see #670.\nRefer to http://doc.gitlab.com/ce/incoming_email/README.html for more details.\n. 2016-06-01\nReleases 8.8.0 thru 8.8.2 have been published. We decided to put off the container registry support in these releases until we have a cleaner integration and nicer docs\n. @arnos at which logs are you interested in production.log?\n. @arnos I can get this done. But will take a little while. There are a couple of things on my todo list.\nAlso note that in upcoming commits the mysql and redis servers will be removed from the image and seperate images would be required for the mysql and redis server.\nRest be assured that I will make sure all these components are ready before I start removing things.\n. @arnos i guess its possible.\n. @arnos so you only need to specify the SMTP_HOST and SMTP_PORT for mails to go out?\nThis might be difficult considering the broader audience. You can however override the smtp mailer configuration.\nThis is how you do it.\nDownload https://github.com/sameersbn/docker-gitlab/raw/master/config.tar.bz2 and extract the file config/gitlabhq/smtp_settings.rb into /opt/gitlab/data/config/gitlabhq/\nwget \"https://github.com/sameersbn/docker-gitlab/raw/master/assets/setup/config.tar.bz2\" -O /tmp/config.tar.bz2\ncd /opt/gitlab/data/\ntar -jvxf  /tmp/config.tar.bz2 config/gitlabhq/smtp_settings.rb\nYou can edit the /opt/gitlab/data/config/gitlabhq/smtp_settings.rb to remove the smtp settings you do not require and restart the gitlab application for the changes to take effect.\nUsing this method you can literally override all of my configuration but be warned that you could break the whole application, especially if you change paths in the configuration files. Generally parameters with {{}} around their values are the ones safe to edit. The values with the {{}} that you leave behind will be updated as per the configuration you provide via the environment configuration.\nUsing this method you can also change the default projects number as you have mentioned in #42 and could also have been used to get by #36. I have not documented it yet so that I can see how people are using the image and understand what all options I should be adding.\n. @arnos I think you misunderstood. The edit that I mentioned is done at the data store on the host, not inside the container.\nHow this works is that when the container is started, it checks if there are any configuration overrides in the config/ directory of the datastore, which in this case would be the smtp_settings.rb file in the /opt/gitlab/data/config/gitlabhq folder. Now this file would be used as the template on top of which the container would start applying the configuration.\nThis means that you can upgrade the image normally without having to worry much. The only time you could face an issue is if the base template itself changed, In which case you would have to update your copy in /opt/gitlab/data/config/gitlabhq. So the golden rule of thumb would be to copy only the files you wish to change in the /opt/gitlab/data/config directory and apply the rest of the config using the environment variables.\n\nHow about an alternate approach based on the idea I mentioned in the logs issue (#40), instead of having to input all the options to configure gitlab everytime and running it through the init >script have init check if pre-configured configuration files exist in /opt/gitlab/ (a mounted volume >on the host) and use these to overwrite the default config files.\n\nWell this is exactly what the files inside /opt/gitlab/data/config/ are meant to do. You can specify the entire configuration here and the image will just pick up this configuration and fill out whatever is left to be filled.\nGenerating the configuration at run time is important so that we do not end up in a fix when the configs are changed upstream (read my above \"golden rule of thumb\" comment). \nNOTE: the mountpoint /opt/gitlab/data I mentioned is in reference to the path of the datastore I have used in the README examples. This could be a different path in your case if you have changed it.\n. @arnos so should we close this?\n. @jay61439476 All you need to do is correctly configure the smtp_settings.rb. I see that you have not added the :enable_starttls_auto and :openssl_verify_mode like you have in your old gitlab installation. I reckon that copying old config and updating the syntax should just work.\nI guess your smtp_setting.rb should look like this:\n``` bash\nif Rails.env.production?\n  Gitlab::Application.config.action_mailer.delivery_method = :smtp\nActionMailer::Base.smtp_settings = {\n    address: 'exmail.my.com.cn',\n    port: 25,\n    domain: \"my.com.cn\",\n    authentication: \"plain\",\n    enable_starttls_auto: true,\n    openssl_verify_mode: \"none\"\n  }\nend\n```\nIf this does not work then I\u2019m afraid I will not be of much help.\n. @arnos sure.\n. @thrisp for linking with postgresql container to work the postgresql server should expose the 5432 port. If it does not, then the container will not be able to figure out the link and will instead start a mysql server internally.\nBut I don't understand why the mysql server wont start in this case. Can you just try starting the container with\nbash\ndocker run -i -t --rm sameersbn/gitlab:latest\nCan you tell me which postgresql container are you using? Can I pull it from the docker index?\n. > seems to run ok; there is a lot of output there that looks like its doing something constructive; however I cannnot connect to the container ip address (in this instance 172.17.42.1) even after 5 minutes post command.\n172.17.42.1 seems like its the host ip of the docker0 interface and not the ip address of the container. please check.\nI will try using the orchardup/postgresql:latest image and get back with you. \n. @thrisp I tried the orchardup/postgresql and had not issues using it.\nStart postgresql container with a user and database for gitlab\nbash\nmkdir -p /opt/postgresql\ndocker run -d --name pgdatalocal -v /opt/postgresql:/var/lib/postgresql \\\n-e \"POSTGRESQL_USER=gitlab\"  -e \"POSTGRESQL_PASS=password\" \\\n-e \"POSTGRESQL_DB=gitlabhq_production\"  orchardup/postgresql\nStart gitlab setup with the postgresql container linked\nbash\ndocker run -i -t --rm --name=gitlab --link pgdatalocal:postgresql \\\n-v /opt/gitlab:/home/git/data \\\n-e \"DB_USER=gitlab\" -e \"DB_PASS=password\" -e \"DB_NAME=gitlabhq_production\" \\\nsameersbn/gitlab:latest app:rake gitlab:setup\nNow start the gitlab application\nbash\ndocker run -i -t --rm --name=gitlab --link pgdatalocal:postgresql \\\n-v /opt/gitlab:/home/git/data \\\n-e \"DB_USER=gitlab\" -e \"DB_PASS=password\" -e \"DB_NAME=gitlabhq_production\" \\\nsameersbn/gitlab:latest\nLaunch the web browser.\nbash\nGITLAB_IP=$(docker inspect gitlab | grep IPAddres | awk -F'\"' '{print $4}')\nxdg-open \"http://${GITLAB_IP}\"\nHowever, please note that gitlab restore does not seem to be working when using a linked postgresql server. For example,\nCreating a backup works.\nbash\ndocker run -i -t --rm --name=gitlab --link pgdatalocal:postgresql \\\n-v /opt/gitlab:/home/git/data \\\n-e \"DB_USER=gitlab\" -e \"DB_PASS=password\" -e \"DB_NAME=gitlabhq_production\" \\\nsameersbn/gitlab:latest app:rake gitlab:backup:create\nRestoring a backup takes dump while your watching...\nbash\ndocker run -i -t --rm --name=gitlab --link pgdatalocal:postgresql \\\n-v /opt/gitlab:/home/git/data \\\n-e \"DB_USER=gitlab\" -e \"DB_PASS=password\" -e \"DB_NAME=gitlabhq_production\" \\\nsameersbn/gitlab:latest app:rake gitlab:backup:restore\nlog\nUnpacking backup ... done\nRestoring database ... \nRestoring PostgreSQL database gitlabhq_production ... [FAILED]\ndone\nRestoring repositories ...\nrake aborted!\nPG::Error: ERROR:  relation \"projects\" does not exist\nLINE 1: SELECT  \"projects\".* FROM \"projects\"   ORDER BY \"projects\".\"...\n                                  ^\n: SELECT  \"projects\".* FROM \"projects\"   ORDER BY \"projects\".\"id\" ASC LIMIT 1000\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/connection_adapters/postgresql_adapter.rb:774:in `exec'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/connection_adapters/postgresql_adapter.rb:774:in `exec_no_cache'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/connection_adapters/postgresql/database_statements.rb:138:in `block in exec_query'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/connection_adapters/abstract_adapter.rb:435:in `block in log'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activesupport-4.0.3/lib/active_support/notifications/instrumenter.rb:20:in `instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/connection_adapters/abstract_adapter.rb:430:in `log'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/connection_adapters/postgresql/database_statements.rb:137:in `exec_query'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/connection_adapters/postgresql_adapter.rb:891:in `select'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/connection_adapters/abstract/database_statements.rb:24:in `select_all'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/connection_adapters/abstract/query_cache.rb:63:in `select_all'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/querying.rb:36:in `find_by_sql'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/relation.rb:585:in `exec_queries'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/relation.rb:471:in `load'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/relation.rb:220:in `to_a'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/relation/batches.rb:69:in `find_in_batches'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-deprecated_finders-1.0.3/lib/active_record/deprecated_finders/relation.rb:70:in `find_in_batches'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/relation/batches.rb:25:in `find_each'\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/activerecord-4.0.3/lib/active_record/querying.rb:8:in `find_each'\n/home/git/gitlab/lib/backup/repository.rb:51:in `restore'\n/home/git/gitlab/lib/tasks/gitlab/backup.rake:45:in `block (4 levels) in <top (required)>'\n/home/git/gitlab/lib/tasks/gitlab/backup.rake:29:in `block (3 levels) in <top (required)>'\nTasks: TOP => gitlab:backup:repo:restore\n(See full trace by running task with --trace)\nNow I don't know whether this is an issue with\n- using postgresql in a container\n- using postgresql in general\n- some configuration issue for the postgresql user, given my inexperience with using postgresql\n- some postgresql support issue in gitlab\n- or something else\nI have tried various postgresql containers and all exhibit the same behaviour. The postgresql images i tried include:\n- sameersbn/postgresql\n- paintedfox/postgresql\n- orchardup/postgresql\n  Nothing seems to work when trying to restore a gitlab backup.\n. @thrisp I think I know why restore is not working when a postgresql server is used. Basically the postgresql-client package needs to be installed in the gitlab container.\nI will add that and check.\n. @thrisp yup, that was the cause of the restore operation not working when postgresql was used. fixed in fc0a6d1cddb88edc4cff26152a1491d71ee6d947 \n. @arnos actually the \"Docker doesn\u2019t cache an ADD instruction or any instruction after it\" does not hold true anymore. This was the case in docker releases prior to version 0.8. In newer releases the cache is used even after an ADD, unless some change has occurred in the build directory.\nThe copy default configuration step from the install script should not affect the docker caching mechanism in any way. These lines are executed inside the container and as such should not effect docker's caching mechanism in any way. It can be argued that these lines are not required at all in the init script because they are overwritten in the init script, but i left them there so that any gem that will in installed should not complain of database.yml missing or something. I have seen this happening in some other gems, maybe not in the gems currently used by gitlab.\n. @arnos I understood you point. But here's the problem, In my development I cache the gitlab tarball and gems in the assets directory to speed by installation of gitlab. Now if assets directory is not added before calling install then I lose this optimization.\n. @arnos however, if you are changing only the config files, then maybe you can keep your optimization locally until you finalize your changes. or you can copy the config directory in the data store and do the changes there. This way you dont even have to build the image. \n. @arnos maybe we can move the config directory outside the assets folder. That should fix it. What do you think?\n. @arnos why?\n. @arnos i will see what i can do.\n. kewl\n. @arnos p.s. latest changes on the HEAD boost the application startup times tremendously. This really helps in development testing as the application comes online faster than ever.\n. @li4li5li6 I see the issue you have mentioned here. I will merge this.\njust so you know, It is not advisable to change the GITLAB_PORT to anything other than port 80. If you already have a http server running on the same host pc, i would suggest configuring haproxy or hipache for routing incoming traffice on port 80. Also using an ip address for GITLAB_HOST is a big no no. Consider setting up a name server.\n. @arnos I came across this repo https://github.com/keeb/docker-ttl, its got a very interesting way of connecting to the docker server from the container. I was thinking maybe for the quick start guide we can mount the docker binary and start the database and redis servers on the host.\nIn short, the container would be started like this\nbash\ndocker run -i -t \\\n-v /usr/bin/docker:/bin/docker \\\n-v /var/run/docker.sock:/run/docker.sock \\\nsameersbn/gitlab:latest\nThe gitlab container will now have access to docker running on the host, which means it will be able to pull containers for the mysql/postgresql and redis servers and eventually get the whole thing to work.\nProduction environments will have to go through the setup procedure to configure the database and redis servers manually.\n. @arnos From what I understand, you mean we can create some sort of a docker image that helps in deploying complex application stacks like gitlab or shipyard where you need additional containers/services to complete the stack.\nSuch applications will probably have to define some sort of configuration for the deployment to happen. Like indicating what services are required, how each service has to be configured, the preferred docker image for each service, etc.\nProblem is say an application requires a redis server and already a redis server is available, then we would somehow have to detect the same or ask the user. It could get complicated really quickly.\nMaybe at first we can implement this in the gitlab container as part of the quick start guide and then try and see if this can be generalized and forked into a new image.\nAlso maybe, it would be replicating what chef already does. I am not sure.\n. @arnos whatever be the case lets keep this on the down low for the moment and get the SSL thing finished up.\n. @arnos today I came across geard, which is very close to what you propose here. checkout https://www.youtube.com/watch?v=ZcEEnCMAMvo?t=24m for an overview. Pretty sweet stuff. Unfortunately it is currently only available for Fedora and RHEL. I think that it because of its dependency on systemd.\n. @piclez I have never used vagrant, just installed it yesterday to do some selinux testing. Since I use linux as my primary OS and since docker has come along VM's are a no go for me. That said, since I now have vagrant installed, I will try to create a vagrant file for this image.\n. @piclez @tritao FWIW the official gitlab cookbook includes a vagrant file. You might want to check if thats what you need.\n. @djdefi I was thinking about the same\n. @keyvanfatehi will try it as soon I get the time. Once I can confirm I will close this issue.\n. docker-gitlab can now be deployed using fig as implemented in #158 by @spiddy . Alternately you could also use also use the https://github.com/keyvanfatehi/ydm tool being developed by @keyvanfatehi .\nMarking issue as closed.\n. @arnos whoa... thanks for the info. I was just looking up for something similar on github.\n. @arnos a new gitlab version will be released today, will bundle it the upcoming release\n. that would be amazing... just tell me it will support self signed certificates.\n. I was just looking at your fork. can you make it so that the certs should be installed at the \"datastore\"/certs instead of mounting another volume.\n. another thing is that you have over written my updates to the README file.\n. config.tar.bz2 is removed in the 6.8.0 release\n. @gramakri will merge this after some testing. Instead of setting the GITLAB_HOST to localhost you should rather make a entry in your /etc/hosts file\n127.0.0.1 gitlab.example.com\nand then run the container with -h gitlab.example.com -e \"GITLAB_HOST=gitlab.example.com\"\n. @zacker330 can't say what the issue is. please rebuild and try again\n. @zacker330 try running with docker run -i -t xxx/gitlab\n. @zacker330 i see that you have an unusually large number of stopped containers on your system. probably you didn't mean to keep them. Please remove these containers and try again.\nbash\ndocker rm $(docker ps -a -q)\nAbove command will delete all non running containers. \nIf you wish to remove untagged images, you can remove them using\nbash\ndocker rmi $(docker images | grep none | awk '{print $3}' | sort -r)\nI have noticed that having too many containers / images can really have a negative effect in docker. I am guessing this could be a cause of the issue you are seeing.\n. @zacker330 then i think we should dive in an check out what is going wrong\n``` bash\ndocker run -i -t --rm xxx/gitlab bashbash\nYou will be dropped into the bash shell. Make sure mysql server is not started\n```bash\nsupervisorctl stop mysqld\nkillall mysqld\n``````\nManually start mysqld server\nbash\n/usr/bin/mysqld_safe &\nIf the mysql server is not starting, check the error log\nbash\ncat /var/log/mysql/error.log\nPaste the log here\n. @zacker330 can you paste the output here. Its not possible for me to figure out what you are not being dropped into the bash shell. \n. ps. the mysql server is destined to be removed from the container. so instead try using a linked mysql server. Details can be found here. However I would recommend linking a postgresql container https://github.com/sameersbn/docker-gitlab#linking-to-postgresql-container\n. @cridenour its true that the docker run command could get very long when a lot of environment variables are set using the command line. But in the long run, when you perform an update to the container, you can be assured that the container will continue working with the same arguments. if you handcraft configurations, then you would have to make sure the configurations are updated every time you upgrade the container. Its a choice you have to make.\nAnyways, there is a method to handcraft the configurations without having the need to specify particular or all parameters in the command line. Here's how you can do it.\n- Download packaged configs for the release you are using from https://github.com/sameersbn/docker-gitlab/releases (its the config.tar.gz file attached to the release)\n- extract all or individual files from the tarball into your data store path on the host, while maintaining the directory structure. For example if your data store path is /opt/gitlab/data\nbash\ncd /opt/gitlab/data/\ntar -xvf  <path-to-config-tarball>\nThis will extract all the configuration templates. Now you can manually edit each of the files as per your requirements. refer to #41 for further information on this topic. \nAs I mentioned before, when you override the configuration like this, you will need to make sure you update your configuration templates every time a new gitlab release is out. \nThis method for added for advanced users to do stuff regular users may not generally want to perform. SSL support or enabling twiitter/google oauth login, etc. As such, if you break something, you are on your own. YOU HAVE BEEN WARNED.\n. @mbrgm well i am not sure what issue you are seeing. Is the application  working for you at all?\n. @mbrgm now that i checked it. There are tonnes of those messages and they never seem to stop. Later I will try to figure out why these message are being sent and whether they are actually due to the gitlab container.\n. @mbrgm anyways they do seem to be harmless at this point.\n. @mbrgm closing this issue as it appears to be harmless. If ever I find the cause/fix for this I will reference this issue in the commit.\n. @cridenour sure that you be great. maybe you can work with @arnos for the ssl support addition.\nIf possible make sure that SSL works when the container is behind hipache/haproxy and supports self signed certificates.\n. @arnos i just started looking at working on SSL support today and surprisingly i think i got it working. I am testing with direct port redirection and also with haproxy. both seem to be working (still early to say, need to test further).\nI had added the http to https redirection in the nginx config and it all worked fine with the direct host port redirections but not with haproxy. \n``` nginx\nThis server simply redirects HTTP connections to HTTPS\nserver {\n  listen *:80 default_server;\n  server_name {{YOUR_SERVER_FQDN}};\n  server_tokens off;\n  rewrite ^ https://$server_name$request_uri? permanent;\n}\n```\nInstead I removed the above and configured nginx to also serve requests on port 80\n``` nginx\nserver {\n  listen :80 default_server;         # e.g., listen 192.168.1.1:80; In most cases :80 is a good idea\n  server_name {{YOUR_SERVER_FQDN}};     # e.g., server_name source.example.com;\n  server_tokens off;     # don't show the version number, a security best practice\n  root /home/git/gitlab/public;\n# Increase this if you want to upload large attachments\n  # Or if you want to accept large git objects over http\n  client_max_body_size 20m;\n# individual nginx logs for this gitlab vhost\n  access_log  /var/log/nginx/gitlab_access.log;\n  error_log   /var/log/nginx/gitlab_error.log;\nlocation / {\n    # serve static files from defined root folder;.\n    # @gitlab is a named location for the upstream fallback, see below\n    try_files $uri $uri/index.html $uri.html @gitlab;\n  }\n# if a file, which is not found in the root folder is requested,\n  # then the proxy pass the request to the upsteam (gitlab unicorn)\n  location @gitlab {\n    # If you use https make sure you disable gzip compression \n    # to be safe against BREACH attack\n    # gzip off;\nproxy_read_timeout 300; # Some requests take more than 30 seconds.\nproxy_connect_timeout 300; # Some requests take more than 30 seconds.\nproxy_redirect     off;\n\nproxy_set_header   X-Forwarded-Proto $scheme;\nproxy_set_header   Host              $http_host;\nproxy_set_header   X-Real-IP         $remote_addr;\nproxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\n\nproxy_pass http://gitlab;\n\n}\n# Enable gzip compression as per rails guide: http://guides.rubyonrails.org/asset_pipeline.html#gzip-compression\n  location ~ ^/(assets)/  {\n    root /home/git/gitlab/public;\n    gzip_static on; # to serve pre-gzipped version\n    expires max;\n    add_header Cache-Control public;\n  }\nerror_page 502 /502.html;\n}\n```\nAnd surprisingly it works in both cases and the http to https redirection somehow takes place. But maybe its because of some other fixes I have in place.\nShould I pull your changes and apply my changes on top of it or should i just publish my work for you to review and test? What do you suggest?\n. @arnos i have published my ssl-support branch. There were a lot of use cases to take care of and I finally managed to get it done. I had to hack into the gitlab code to get things working.\nAnyways, can you test the ssl support and confirm that it works for you? Instructions can be found in the README.\n. @arnos its true that gitlab SSL support is supposed to work out of the box. But since we are containerizing the application I had to make minor and harmless edits to get it working for the various use cases.\nThere are a lot of topologies that have to be handled and various scenarios like \n- using a load balancer like haproxy\n- ensuring that git operations work with https\n- making sure everything works when the default ports are not used, etc.\nHopefully, I think I have taken care of all scenario's.\n. @arnos i was just thinking.\nmaybe we should remove all ssl configurations and also remove the nginx server and instead expose the unicorn worker on port 80 so that users can configure the SSL configuration in the host.\nRight now this is the general use case:\nOn the host you install a load balancer such as hipache/haproxy or nginx. If you are enabling SSL support then it (SSL) has to also be configured at the load balancer and as such the internal SSL configuration is more or less pointless. \nInside the container we are running an nginx server which proxies connections to the unicorn workers. So in essence we have a stack that looks like this:\nrequest -> load balancer -> nginx -> unicorn\nIf we remove the internal nginx, then the stack would look like this\nrequest -> load balancer -> unicorn\nBy doing this change we will effectively be converting the gitlab application from a web server to a app server, which i think fits better with docker and as a side effect your access log collection will happen at the host.\nAnother problem we would be solving with this change is, if i am using nginx as my load balancer and if I want to change the client_max_body_size, then I have to configure this on the internal nginx server as well as at the load balancer (just found this out today). But with this change we only end up configuring this setting at one place.\nThe only downside to this that I can see is that you will not be able to enable ssl support if you decide to use the application without a load balancer, which I think should be fine.\nwhat do you think?\n. @arnos can you rebase if you don't mind\n. @arnos yep, in the process of tagging a ubuntu:14.04 build of sameersbn/ubuntu. will push once the trusted build is up.\n. @arnos \n\nOk I'll update my PR to use 14.04\n\nno worries, will update the tag myself. have already merged locally\n. > PS: I went through SSH config, everything looks dandy, the only comment is that you could save a bit of code in your permissive config file by having. listen :80 default_server; listen :443 default_server ssl; Instead of repeating the entire config but there no disadvantage either way.\nIf thats the case, then i think i will remove the duplicate config, will be better to maintain.\n. merged in e2eb91c170b2452cc3837a0eb6548c02f362e83f\n. @arnos ok understood.\n. @ShaggyYeti probably because th password starts with a number. I guess we need to add double quotes around all string variables.\n. @LordFPL do you think removing smtp user, pass and authentication parameters from the config when the smtp user is not defined a good idea? does it work for you?\n. @arnos can you rebase the PR\n. @arnos thats right, it should be -z\n. I think when -z / -n are used, the test string should not be surrounded by quotes. That's why I prefer using == operators\n. @arnos I have fixed the issue with the -z/-n\n\nOk then I'm not sure why my if is working with -n (if I put -z the default value of :login gets set)\n\n:login gets set on SMTP_AUTHENTICATION because it is set by default, even if you don't pass SMTP_AUTHENTICATION or pass it as an empty string this value is internally set to :login\nSMTP_AUTHENTICATION=${SMTP_AUTHENTICATION:-:login}\nI have changed the code b8266c0bf4eb2125892627dbe65305a395dac4b8 so that the default value of SMTP_AUTHENTICATION is set to :login only if SMTP_USER is set. So i think this should work\n. Have added a new SMTP configuration option named SMTP_ENABLED which is set to false by default. Please refer https://github.com/sameersbn/docker-gitlab/issues/39#issuecomment-53474060\n. @mbrgm i think we can generate the host keys the first time the container is run and save the keys in the data store\n. i sense image corruption. I have triggered a rebuild of sameersbn/gitlab:latest on the trusted build service. The build should be ready in a couple of minutes.\nIf this does not work then please completely delete the following images from the host\nubuntu:14.04\nsameersbn/ubuntu\nsameersbn/gitlab\n...and then pull the sameersbn/gitlab image from the index.\nThis issue seems to happen whenever there is a corrupt build or a corrupt intermediate image.  I don't think there is any way to tell where the corruption has occurred. The only way I rid myself of this issue is to nuke everything.\n. @repole when removing images you should remove all ubuntu 14.04 images, this includes ubuntu:14.04, ubuntu:latest and ubuntu:trusty.\nYou may also choose to remove all images that may be present in the host if you can.\n. the ubuntu and sameersbn/ubuntu images would also be pulled. But thats ok, just a \ndocker pull sameersbn/gitlab:6.8.2 should suffice\n. @repole the error you mentioned above is in fact the result of image corruption. I would have triggered a rebuild of the 6.8.2 image, but at the moment there is some issue with the docker build service due to which i cannot tag versions on images.\nIf you are building the image, then remove all the existing images and build from source. \n. p.s. you can also try the sameersbn/gitlab:latest, its essentially the 6.9.0 version of gitlab. it hasn't been tagged as 6.9.0 because of the same trusted build issue.\n. @repole i understand your frustration.\nMy final suggestion would be to build from the source. But before you do so, edit the Dockerfile and change the line FROM sameersbn/ubuntu:14.04.20140519 to FROM sameersbn/ubuntu:latest\nThis will resolve the problem if the issue is coming from the sameersbn/ubuntu:14.04.20140519 image build.\n. @repole I am not sure about this. I have installed gitlab on ubuntu 14.04  server as well as desktop editions without any issues.\n. @outrunthewolf have you tried sameersbn/gitlab:latest from the docker index? Just today I updated one of my servers with sameersbn/gitlab:latest from the index with no problems. If you still witness the issue with this version (from the index), then I think it might have something to do with the host.\nI am guessing it could be related to selinux, but I cannot be sure. Do you have selinux installed on your ubuntu 13.10 host? As far as I can tell, selinux is not installed by default on ubuntu.\nBesides, have you tried deleting all existing images since this issue also appears if an intermediate image suffers some sort of corruption?\nThis issue is turning out to be a pain!\n. @outrunthewolf no idea.. just created an account on digital ocean. will check whats going on.\n. @outrunthewolf are you using the ubuntu packaged docker.io package or manually installing docker using the official docker ppa?\n. @repole @outrunthewolf\nI was able to track down the issue in your use case. Basically the stock ubuntu docker.io package seems to cause the issue.\nHere's what I did, first I tried with the docker.io package:\nbash\napt-get install -y docker.io\ndocker.io build --tag='sameersbn/gitlab' .\nThe result of this was\nAdding user `git' ...\nAdding new group `git' (1000) ...\nAdding new user `git' (1000) with group `git' ...\nCreating home directory `/home/git' ...\nCopying files from `/etc/skel' ...\npasswd: password expiry information changed.\nsudo: unable to execute /bin/mkdir: Permission denied\n2014/05/28 09:06:25 The command [/bin/sh -c /app/setup/install] returned a non-zero code: 1\nSo I decided to use the latest docker packages straight from http://docs.docker.io/installation/ubuntulinux/#ubuntu-precise-1204-lts-64-bit\nbash\napt-get purge docker.io\napt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9\nsh -c \"echo deb https://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list\"\napt-get update\napt-get install lxc-docker\nThen purge all existing containers and images and build docker-gitlab\nbash\ndocker rm $(docker ps -a -q)\ndocker rmi $(docker images -q)\ndocker build --tag='sameersbn/gitlab' .\nAnd the image builds without any issues.\nSo it looks like the issue is cause due to the default docker.io ubuntu package. So you know what that means!\n. @outrunthewolf  \n\nSo this is an issue with the Ubuntu package and not a specific Ubuntu itself?\n\nNo don't think its an issue with ubuntu. The problem is the docker.io package in the ubuntu repo is pretty dated. Maybe it has something to do with apparmor which is probably taken care of in newer docker versions.\nDocker is a fast evolving projects, it makes sense to have whatever up-to-date version you can get your hands on. For ubuntu, it would mean installing docker using the docker.io repository. For RPM based distros, redhat is doing an excellent job of updating the docker packages and making everything work with selinux.\n. @georgkreimer \n\nit's actually in there. all the way at the end\n\nmaybe I'll move the section at the beginning of the README (will probably save people a lot of time). \n. @cmoulliard the invoke-rc.d: policy-rc.d denied execution of restart. is expected when the container is started for the first time. Does the container exit at that point?\nIn case you are using redhat based or any selinux enabled host, then it could be because if the security context. I would  suggest mounting a volume for the data directory and apply the selinux policy as described in the data volume section of the readme\nbtw, the docker flags -it are not compatible with -d. You should use either one.\n. @venth were you getting the mkdir permission denied issue while running the image or while building. Also note that it has been noticed that using the docker.io package from the official ubuntu 14.04 ppa's seems to cause such issues. In which case you are better off installing docker from the https://get.docker.io ppa. see #63 \n. @venth while it does fix the build, but its not really a problem with the image. the 'git' user does not need to have sudo permissions to create a directory in its home directory. You can remove this branch.\n. @frankgerhardt looks like in docker \"only [a-z0-9_] are  allowed, size between 4 and 30\" for the namespace. Just manually specify a namespace instead of using $USER (It really does not have to be your unix username), for example:\nbash\ndocker build --tag=\"frankgerhardt/gitlab\" .\n. @pnelsonsr thats it... nothing happens after that. You need to load the address http://localhost:10080 in the web browser to access the gitlab application.\n. @pnelsonsr yes.. you have to stop the container, add whatever options and then start image again.\n. @pnelsonsr good to know that you were quickly able to blow past all the problems.. Simply demonstrates the power of deploying applications/services using docker.\n. @pnelsonsr You need to configure port forwarding to the 443 port using the -p option. Adding \n-p 10443:443 to the docker run command will do that. You should also set GITLAB_HTTPS=true and SSL_SELF_SIGNED=true like you have already done. Lastly you should update the GITLAB_PORT option to 10443. So your docker run command would look like this:\ndocker run --name='gitlab' -i -t --rm -p 10.10.10.10:10022:22 -p 10.10.10.10:10080:80 -p 10.10.10.10:10443:443 -e \"GITLAB_PORT=10443\" -e \"GITLAB_SSH_PORT=10022\" -e \"DB_TYPE=postgres\" -e \"DB_HOST=hostnameremoved\" -e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=pwremoved\" -e \"GITLAB_HTTPS=true\" -e \"SSL_SELF_SIGNED=true\" -v /var/lib/gitlab/data:/home/git/data sameersbn/gitlab:6.9.2\nNow accessing http://myserver:10080 will automatically redirect to https://myserver:10443 and you should be able to access the application over SSL.\n. Its perfectly OK to start the container with docker start gitlab. You only need to delete it and create a new one after upgrades.\n. @ivanacorovic If you are using the latest version of the image try running the with the app:sanitize option first\nbash\ndocker run -i -t --rm [OPTIONS] sameersbn/gitlab:latest app:sanitize\nThis will fix the permissions on the repository and satellites directories (if that is the cause of the issue).\nP.S. app:sanitize was added recently and is not available in any of the tagged versions. All previously tagged versions to this by default at startup. \n. > docker run --name=gitlab -i -t --rm \\\n\n-e \"DB_HOST=162.243.74.160\" -e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=password\" \\\n-v /opt/gitlab/data:/home/git/data \\\nsameersbn/gitlab:6.9.2 app:rake gitlab:setup\n\nYou should added DB_TYPE=postgres here. If this is not set, then it will default to the DB_TYPE=mysql. In which case I reckon app:rake gitlab:setup would not work or have undefined results. After the setup is complete run the same command without the app:rake gitlab:setup command\n. @matejkramny Just fixed the issue here locally. Will push the changes and reference the commit in this thread once I can confirm the fix.\n. @matejkramny as it appears chmod g+s /home/git//data/repositories does not seem to have any effect when run inside the container. I am guessing this is just one of the many things that have come with using ubuntu:14.04 as the base image. Will try switching to the ubuntu:12.04 base image and retry.\n. @matejkramny @ivanacorovic this commit resolves the issue. Apparent the 's' flag in files/directories can only be changed by the owner of the file/directory. Just had to run the required commands as the git user. The TBS is ready to be consumed. Just make sure tou run the app:sanitize command to make sure all directory permissions are fixed.\n. @matejkramny that's correct, you need to update the docker image first.\n. @enter08 can you please paste your docker run command.\nP.S. you need to make sure you specify the -e \"DB_TYPE=postgres\" along with the other database connection settings while running the container.\n. @enter08 looks alright to me. can you paste the docker run output here. As far as I can tell, when you provide the DB_HOST option, the internal mysql server is not started. I have a feeling that you have not followed the external postgresql server guide correctly and completely skipped the most important part of running the app:rake gitlab:setup command so that the database is initialized.\nPlease confirm.\n. Cab you paste the logs of each command.\n. @enter08 did you have any luck with this?\n. closing for lack of activity... please feel free to reopen the issue if you are still facing this issue\n. @pnelsonsr sorry to hear that the docker update broke gitlab for you. Couple of things.. first of all the fact that the SSH keys are being generated means that it was not able to find the ssh keys from the existing data directory. That effectively means that data store directory was not mounted or was cleared (meaning removed/deleted).\nCan you try running the quick start example to check if ti works. If it does not that, then I would suggest deleting the gitlab image entirely (preferebly deleting ALL existing images not just gitlab everything) and pull from the index again and retry the quick start example. I have a feeling that the docker update for fedora made some changes to the storage system and maybe that has messed up the existing images. I have seen such issues in the past.\nThe data directory having uid and gid of 1000 is ok. That corresponds to the uid and gid of the git user.\n. @pnelsonsr on an unrelated note... it you add your username to the docker group, you would not need to specify sudo to execute docker commands.\nbash\nchmod -a -G docker $USER\n. @pnelsonsr possibly...\n. @pnelsonsr classic!\n. @pnelsonsr ouch! selinux does behave like a bitch sometimes, however for security reasons it might not be the best idea to turn off selinux. Maybe you should change the selinux policy to permissive and see if it works. Better yet, if we can figure out the the selinux rule to fix this, it would be great.\nMaybe, I will install fedora in a vm and try.\nAlso please see if this selinux policy works https://git.fedorahosted.org/cgit/selinux-policy.git/tree/docker.te?h=f20-contrib (refer: http://www.slideshare.net/d0cent/docker-rhel)\n. @pnelsonsr the \"Repo base access is drwxrws---? ... no\" message is ok. I have tried to rid ourselves of that message, but for whatever reason that message refuses to go away.\nRegarding disabling selinux for the container, I don't think that is possible. But interestingly today I found the option --selinux-enabled in the /etc/sysconfig/docker file on a CentOS host. On F20 you should have the same, so maybe you should experiment by removing that.\n. @pnelsonsr that is insane. \n. @pnelsonsr i don't know shit about selinux and now I am jealous. Its been a while since I ditched fedora for ubuntu and never heard of selinux since. When I used fedora, I used to always disable selinux or set it to permissive anytime an issue showed up. I am glad you are making inroads with selinux. more power to you.\nas an aside, i came across this amazing geard project to manage / scale deployments using docker. I have yet to try it out, but I thought it might give you an idea of whats coming in the docker world. when you find the time, checkout https://www.youtube.com/watch?v=ZcEEnCMAMvo?t=24m for an overview\n. @pnelsonsr apparently there are tonnes of such projects coming up. Everyone seems to be doing their own thing (geard,mesos,orchard,shipyard,etc.). So the docker folks are building a component called libswarm which will provide a unified interface to talk to any of these underlying services. Its pretty neat.\n. @pnelsonsr were you able to get this resolved. If yes, can you mention the steps that you took to get selinux configured so that other users can take advantage of your findings.\n. @pnelsonsr The image now appears to work fine on F20 with selinux enabled and docker 1.0.0.\nJust use the latest docker version and a gitlab version higher than 7.1.0 which at the time of writing is the latest tag.\nDepending on the path of the data volume you might have to change the security content of the volume. For example if the data volume is at /opt/gitlab/data then\nbash\nsudo chcon -Rt svirt_sandbox_file_t /opt/gitlab/data\nIf you are using the internal mysql server (deprecated), then the same has to be done for /opt/gitlab/mysql or whatever. This is the only configuration you need to perform for the image to play nicely with selinux.\n. @piclez You are using virtualbox or some other virtualization software on mac osx right? If so try increasing the memory limit on the guest os.\n. @piclez couple of weeks back I tested the image on a digitalocean VPS with 1GB RAM and gitlab worked just fine. I am not sure what could be the issue you are facing. Can you try the quickstart guide and see if it works. You might also want to check available disk space and probably delete any containers that are not running docker rm $(docker ps -a -q)\n. @piclez p.s. you might want to check the memory usage while the image is starting up.\n. @piclez you would have to specify 127.0.0.1 while forwarding. So guest should be something like 127.0.0.1:10080. If that cannot be specified, then change the docker run command to something like this.\nbash\ndocker run --name='gitlab' -i -t --rm \\\n-p 10022:22 -p 10080:80 \\\n-e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" \\\nsameersbn/gitlab:6.9.2\n. @piclez closing this issue. if you still have this issue, please reopen.\n. @pnelsonsr I will try this out and let you know. But my question is what is really the point of this? Ok I get it that the volume is mounted in another container and then imported to gitlab container. But why would you really want to do this, I don't get it.\nI read the comment section of the article and found one valid use \"when you have two containers that need to share some piece of data (like a socket or something)\". There may be other use cases, but these don't apply to the current gitlab image.\nLet me just ask you, how do you expect to benefit from this?\nI think my brain just broke trying to figure out the point to the article  :tired_face::gun: \n. @pnelsonsr \nregarding moving the current installation to another system is pretty straight forward with the current image. There are 2 ways of doing it.\nMethod 1:\n1. pull the same image version from the index on the new system\n2. copy the data store from the old system to the new one and mount it on the new one.\n3. To make sure all file permissions are correct, run the container with app:sanitize command\n4. If the location of your database server has also changed, then you should manually migrate it.\nMethod 2:\n1. take a backup of the old images using the app:rake gitlab:backup:create command\n2. a backup would be generated in the backups folder of the data store\n3. copy this backup to the corresponding location on the new system\n4. pull the same image version from the index (backups are sensitive to the gitlab version).\n5. restore the backup on the new system using the app:rake gitlab:backup:restore command, this will restore the database as well.\nThe second method is probably the cleaner way of doing this.\nThe data/db is the only part that is of persistence here. Which technically means that you could copy the data/db on 100 different machines and pull the same image from the index and have each instance to be a perfect copy of the others.\nThe method described in the article should actually work, however for it to work with this image I think we should not mount a volume at /home/git/data in the gitlab image. Now even if you don't specify the -v option to mount a volume at /home/git/data, a volume is automatically mounted by docker at that location due to Dockerfile:30. So you might have to remove that line from the dockerfile, build the image and retrace the steps from the article.\n. @pnelsonsr p.s. i don't think this will resolve your issue with fedora-20. This is a docker related issue and you might have to wait until the next release / submit a bug report or something.\nI am using docker-1.0 on ubuntu 14.04 and its been a very very long time since docker upgrades have broken my images.\n. @pnelsonsr glad to know that this issue has been resolved... :+1: \n. @WeiLiPenguin The backups are generated at 4am UTC. Since it is in UTC the local time may not be 4am.  I should be able to add an option to specify the time the backup should be taken.\nRegarding timezone refer https://github.com/dotcloud/docker/issues/3359\n. @WeiLiPenguin There are two ways to set the timezone of the container. First method is to mount the /etc/localtime file on the host to the container at the same path -v /etc/localtime:/etc/localtime:ro. This will make sure that the timezone on the host and the container are the same.\nThe second method is to define the TZ environment variable while running the image. For example, -e \"TZ=Asia/Kolkata\" or -e \"TZ=Asia/Dubai\", etc.\nWith this, I do not see the need for adding an option to specify the backup time.\nA correction, The automated backups are generated at 4am not 6am as you stated in your original message. \n. @zergood I think it is not possible at the moment. I remember reading somewhere that gitlab is or will be working on making it possible to run gitlab-shell on seperate servers.\n. @alaning0 well its clearly says that \"The name gitlab is already assigned to 87b045c389ed. You have to delete (or rename) that container to be able to assign gitlab to a container again.\"\nThis basically means that you have to docker rm gitlab first because a container with the gitlab name already exists.\n. @alaning0 just as an aside\ndocker ps -a lists all containers\ndocker ps lists only running containers\ndocker images lists all docker images\nFrom the above you should be able to figure out that a docker image and a container are different things. To be precise,  a container is an instance of a docker image.\n. @alaning0 sorry about this. \n. @lsjostro sure. Will try to get this done tonight.\n. @lsjostro Created a new maintenance release tagged 6.9.2-1. \nPull using docker pull sameersbn/gitlab:6.9.2-1\n. @pnelsonsr naah... just start the redis image with the -v option to mount a data directory for the redis store. For example,\nbash\nmkdir -p /opt/redis\ndocker run -name redis -d \\\n  -v /opt/redis:/var/lib/redis sameersbn/redis:latest\nThats it... nothing fancy.\n. @pnelsonsr you would need to login to the container and change the connection parameters in /home/git/gitlab/config/resque.yml and /home/git/gitlab-shell/config.yml. Once you do that you can would have the USR2 signal to the unicorn master process so that it is restarted with zero downtime.\nbash\nkill -s USR2 $(cat /home/git/gitlab/tmp/pids/unicorn.pid)>\n. @pnelsonsr note that these changes will not persist if the container is stopped and started.\nbash\ndocker stop gitlab\ndocker start gitlab\n. @pnelsonsr thats right\n. @pnelsonsr thats correct and is also set by default in the images. So if your redis server is running using the default redis port then  you just need to specify the REDIS _HOST\n. i think you have this figured out. closing the issue\n. @Nekroze can you send you  docker run command\n. @Nekroze p.s. are u using self signed certificates? if yes, then try added SSL_SELF_SIGNED=true to the environment\n. @Nekroze I remember seeing such an issue when I was adding SSL support and I had resolved the issue (and was specifically tested with self signed SSL certificates). The only thing that comes to my mind that this will not work is that probably the SSL_SELF_SIGNED configuration is not being set to true.\nSince you cannot get the docker command, can you try running the image manually and configuring the reverse proxy on nginx so we can try and figure this out. \nP.S. I am assuming you are using the latest version of the image\n. @Nekroze I think the problem is because you are using True/False, this should be true/false (lowercase).\n. @Nekroze yup, that should be the cause of the issue. You should use lowercase characters while specifying true or false values. Apart from that, I am guessing that your project will automatically pick the forwarding info for ports 80 and 443 and setup nginx accordingly.\nLastly, In you command line I noticed that you are specifying -v /etc/timezone:/etc/timezone:ro, most probably to set the timezone on the container. However I think that does not work, For example, docker run -i -t --rm -v /etc/timezone:/etc/timezone:ro  ubuntu:14.04 date still returns the time in UTC. You can use -v /etc/localtime:/etc/localtime:ro or define the TZ environment variable instead, eg. -e \"TZ=Asia/Kolkata\".\n. @Nekroze today i came across the geard project by redhat and it looks ridiculously similar to what you are trying to achieve with the drydock project. Personally I have not tried either one of them but I thought it might be of some interest to you.\nWatch https://www.youtube.com/watch?v=ZcEEnCMAMvo?t=24m for a quick overview of geard.\n. @piclez Messages indicates that the gitlab application has started properly. If you are using docker inside a VM then you will need to change the docker run command and open ports / forward ports on the VM. If you are indeed using a VM then try the following command:\nbash\ndocker run --name='gitlab' -i -t --rm \\\n-p 10022:22 -p 10080:80 \\\n-e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" \\\nsameersbn/gitlab:latest\nThen open ports 10022 and 10080 on the VM and connect with the ip address of the VM on port 10080.\n. @jk can you combine the two commits into a single commit\n. @riccardomerolla I think this will resolve your issue. https://github.com/sameersbn/docker-gitlab/issues/63#issuecomment-44406252\n. duplicate of #86\n. @ianmurrays You run command looks perfectly fine. I also tested it locally here without any issues. The only reason this would happen is if GITLAB_PORT was set to 80, but your command clearly sets GITLAB_PORT to 443.\nSo here's what I think is happening, you must have previously set GITLAB_PORT=80 when you enabled https and now your browser has cached the redirection and is now redirecting to https://myhost:80 on its own without checking with the server. The solution to this issue is to clear your browser cache.\n. @djdefi thats right, dhparams.pem is something that is generated locally whether you are using ca certified ssl certificates or not. I should fix that in the readme.\n. @jk nginx 1.6 (stable series) was released recently, so hopefully it will show up in the official ubuntu repos soon or maybe i should switch to the official nginx ppa for the latest version.\n. added in commit b8e10d9a443a8525045a1aab368a94c16338b967\n. please let me know if it breaks anything\n. @auraltension try deleting the folder /opt/gitlab/data/tmp on the host and run the command again\nbash\nrm -rf /opt/gitlab/data/tmp\ndocker run --name='gitlab' -it --rm --link postgresql:postgresql \\\n-p 10022:995 -p 10080:8080 \\\n-e \"DB_USER=gitlab\" -e \"DB_PASS=rOrUQUqCvPLqEL8PSwC9a\" -e \"DB_NAME=gitlabhq_production\" \\\n-e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" \\\n-v /opt/gitlab/data:/home/git/data \\\nsameersbn/gitlab:latest\n. @auraltension if it does not work, paste the output of the above command in this thread\n. @auraltension is that the end of the output?\nThe \"lock\" message seems to be harmless, ignore it.\n. @auraltension that does not look right. I am not able to pinpoint what could be the issue you are facing so we might have to do a few tests.\nFirst, can you confirm if the instructions in the quick start guide works for you and you have a working gitlab instance?\nbash\ndocker run --name='gitlab' -i -t --rm \\\n-p 10022:22 -p 10080:80 \\\n-e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" \\\nsameersbn/gitlab:7.0.0\nIf it works, I suggest you delete the gitlab user and gitlabhq_production database from the postgresql server and re-create it using the instructions in the linking to postgresql database section in the readme and then run the following command to initialize the database:\nbash\ndocker run --name='gitlab' -i -t --rm \\\n-p 10022:22 -p 10080:80 --link postgresql:postgresql \\\n-e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" \\\nsameersbn/gitlab:7.0.0 app:rake gitlab:setup\nand then this command to start the container:\nbash\ndocker run --name='gitlab' -i -t --rm \\\n-p 10022:22 -p 10080:80 --link postgresql:postgresql \\\n-e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" \\\nsameersbn/gitlab:7.0.0\nIf this still does not work, I recommend you paste the logs of the above commands here.\n. @auraltension another thing. can you tell me which postgresql image you are using? meaning is it sameersbn/postgresql or some other?\n. @auraltension what did you change the container ubuntu version to? one thing, you may want to use the latest gitlab image in which I have removed the use of chpasswd command so the above chpasswd related issue will not show.\nNext make sure you have installed the latest docker version.\nAll this does not help, then check if selinux is enabled on the host. If yes, disable it to check if it is the cause of the issue.\n. @auraltension I have a feeling that the linode vps is has disabled the container networking and enabled host networking for docker. The above chpasswd error is a know error when host networking is used. But since the latest image docker pull sameersbn/gitlab:latest does not use chpasswd command anymore i think your issue should get resolved.\n. @auraltension looks like a selinux issue. try disabling selinux and retry.\n. @auraltension glad you got it resolved.\n. @auraltension closing.. please reopen if required\n. @jk so basically in the examples i should use single quotes instead of double quotes right?\n. @jk cool. I will update the README examples to use single quotes\n. @jk can you try running the container with -e 'LC_ALL=en_US.UTF-8' -e 'LANG=en_US.UTF-8'? If this fixes the problem, then I will just have to export these settings in the init script. Let me know.\n. @jk maybe we need to build the locales, eg\nbash\nsudo locale-gen de_DE\nsudo update-locale LANG=de_DE\nThere should be a way to rebuild all locales, but it will increase the image build time considerably. But I guess this is not really needed (since I have already disabled shell access over ssh). Apart from the -bash: warning: setlocale: LC_ALL: cannot change locale (de_DE.UTF-8) message, do you notice the image behave incorrectly because of this.\nAnyways, I will experiment with this and let you know. We should be able to get rid of that message.\n. @jk naah... Its not a problem to update the /etc/default/locale file.\n. @jk I have added the change. The trusted build is currently in progress and should be ready in about 10 minutes. Please let me know if the issue persists.\n. closing.. please reopen if the issue persists\n. @jk nsenter is a simple tool to enter the name space of a linux container and essentially get shell access. The article you linked itself has the steps to enter the container. Basically you run docker run -v /usr/local/bin:/target jpetazzo/nsenter on your host. This will install the nsenter binary and a helper script named docker-enter on your host. Now you can simply get shell access to a running container using sudo docker-enter <container-id or container-name>, eg. sudo docker-enter gitlab. Thats all there is really to it.\n. @jk p.s. regarding the documentation, I was thinking of creating a separate repo with various docker related FAQ's and document usage of nsenter there. Right now I think a brief mention of nsenter and a link to  the article may suffice... i think\n. @johnjelinek I really had no idea nsinit existed. Whatever gets the job done is fine. Now that you have introduced me to nsinit I think I will start using it. But first, I will need a wrapper script! \n. @flixi just delete the stopped container first. docker rm gitlab\n. @flixi i meant you remove the existing gitlab container, add the required options to the docker run command and start the image. There is no option available to configure the gitlab application while the container is running. All configuration is provided at while starting the image using environment variable (i.e. -e flag)\nAt the end of your configuration you should have only one running gitlab container with all the required options. I hope this helps.\n. @djdefi thanks for the info. I didn't notice that option existed.\n. @flixi closing.. please reopen if the issue persists\n. @Alas89 First of, please paste your docker run command.\n\nHello Guys,\nI`m relatively new in the howl docker world. So I run into some problems with your gitlab docker container.\nThe first one is: I pulled and run the container. The webfrontend is running fine. I added useres, created a group and project and uploaded my rsa key. But now when I want to pull the project I recive a access denied message.\n\nI think you are connecting to the host and not the container. Check if you are able to clone/push/pull the repository using the container ip.\n\nSecond: To fix this I changed the config files from default to:\ngitlab-shell/config.yml\nUrl to gitlab instance. Used for api calls. Should end with a slash.\ngitlab_url: \"http://mydomain:80/\"\n```\n      gitlab/config/gitlab.yml\n                   ## Web server settings\n                   host: mydomain\n                   port: 80\n               # If you use non-standard ssh port you need to specify it\n               ssh_port: 2222\n\n               test:\n                      <<: *base\n                   gravatar:\n                         enabled: true\n                    gitlab:\n                    host: mydomain\n                    port: 80\n\n```\nAfter this I run into a timeout\n\nDo do not need to edit these files (unless you know what you are going). Try running the image with the -h mydomain flag.\n\nThe third and last problem is when I restart the docker container with docker restart all the changes are restored to the default vallue.\nThe containers port forwarding is 2222:22 and 80:80.\nI used three different RSA-keys all get the access denied.\nThanks ahead for your response. I hope you can help me . I am pretty frustrated now :(\n\nYou need to read the README past the Quick Start instructions.\n. @Alas89 also paste the git clone command you are using\n. @Alas89 first i recommend that you use the latest image docker pull sameersbn/gitlab:latest.\nbash\ndocker run --name='gitlab2000' -h mydomain -it --rm -p 2222:22 -p 80:80 \\\n-e \"GITLAB_PORT=80\" -e \"GITLAB_SSH_PORT=2222\" \\\nsameersbn/gitlab:latest\nTypically I would ask you to use the 7.0.0 version, but since there are couple of improvements and also a fix for git over ssh I suggest that you use the latest version. However, you can continue using 6.8.2 if you have to since the sshd issue is not present in that version.\nRegarding the Access denied message, have you added your ssh key to your gitlab profile?\nThe configuration parameters are specified using environment variables. For example, if you want to set the gitlab hostname to mydomain you have to add -e GITLAB_HOST=mydomain to the docker run command\nbash\ndocker run --name='gitlab2000' -h mydomain  -it --rm -p 2222:22 -p 80:80 \\\n-e \"GITLAB_HOST=mydomain\" -e \"GITLAB_PORT=80\" -e \"GITLAB_SSH_PORT=2222\" \\\nsameersbn/gitlab:latest\nAll available configuration options are listed in the Available Configuration Parameters section of the README\nI hope this helps.\n. @Alas89 There could be a couple of reasons this issue could occur.\n1. If your host distribution is redhat (or its derivatives), then this could be related to selinux. Try disabling selinux to see if this issue goes away.\n2. If your host distribution is ubuntu, the install the latest version of docker from docker.io\nbash\napt-get purge docker.io\ncurl -s https://get.docker.io/ubuntu/ | sudo sh\n1. If neither of the above helps then take a look at #91 \n. @Alas89 P.S. in 6.8.0 the GITLAB_SSH_PORT parameter was named GITLAB_SHELL_SSH_PORT. So you would need to update your command line to reflect this. Once you do this, you should see the updated ssh port in the clone urls.\n. @Alas89 any progress??\n. @Alas89 can you provide me the following information?\n- host linux distribution with the release version.\n- docker infomation, i.e. output of docker version && docker info\nI will try to replicate your environment and look for the issue source and hopefully fix it. Thanks\n. @Alas89 My installation is identical to yours except for the docker version. You should probably update your docker version. Latest release of docker is 1.1.1. The 1.x.x series is considered to be stable.\nIt is also possible that an intermediate file system layer might have gotten corrupt. Since there is no way to figure this out if this has been the case, we can remove all gitlab and its dependent image and pull the image from the index again. Some users have faced such issues in the past and were able to resolve it by deleting existing images and pulling the image from the docker again.\nbash\ndocker rmi sameersbn/gitlab:6.8.1\ndocker rmi sameersbn/gitlab:6.8.2\ndocker rmi sameersbn/gitlab:6.9.0\ndocker rmi sameersbn/gitlab:6.9.1\ndocker rmi sameersbn/gitlab:6.9.2\ndocker rmi sameersbn/gitlab:7.0.0\ndocker rmi sameersbn/gitlab:7.1.0\ndocker rmi sameersbn/gitlab:latest\ndocker rmi sameersbn/ubuntu:14.04.20140508\ndocker rmi sameersbn/ubuntu:14.04.20140628\ndocker pull sameersbn/gitlab:7.0.1\n``\nThe above will remove any gitlab images greater than version `6.8.0` and the last line will pull the most recent image.\n. @mancvso can you pull the latest version docker pull sameersbn/gitlab:latest and try again. I think this should resolve the issue (its a regression of sorts)\n. @hans-d can you try app:rake gitlab:setup force=yes. I think it should work.\n. @hans-d its more of a gitlab (the application) thing. But yes, I can mention it.\n. @hans-d In release version 7.3.1-2 and above you no longer need to run the gitlab:setup rake task. It is automatically executed.\n. @dzwicker can you paste curl commands of the requests you are making? I am guessing commit 8eda25cdf94da3ee33171a7853efd296d4f432b4 might have broken this. If you can send me  the curl requests I will be able to test and hopefully fix the issue.\n. @s2ugimot can you look into this issue?\n. @dzwicker In your original run command you are mounting -v /var/log/gitlab:/var/log. Can you remove that and retry. In my case, the container refuses to start with that mount. I tried the following command to test this issue:\nbash\ndocker run -it --rm --name docker_gitlab -h dev.example.com \\\n-p 8113:80 \\\n-v /tmp/gitlab/data:/home/git/data \\\n-v /tmp/gitlab/mysql:/var/lib/mysql \\\n-e GITLAB_PORT=8113 \\\n-e GITLAB_HOST=dev.example.com \\\n-e GITLAB_RELATIVE_URL_ROOT=/git \\\nsameersbn/gitlab\nand added a /etc/hosts entry for dev.example.com pointing to the container ip and had no problem accessing\ncurl  http://dev.example.com/git/\ncurl http://dev.example.com/git/api/v3/internal/check\nAlso, as per @s2ugimot advise, delete the tmp directory in the datastore so that the assets are recompiled just so that we are clear on this.\n. @dzwicker Please note that there is a command available to fix directory permissions app:sanitize. This command will attempt to fix the permissions on the repositories and gitlab-satellites directories.\nRegarding redis api token, currently it is not possible.\n. @hans-d I dont understand.\n. @hans-d The pre compilation of assets occurs only for the first time and once after a version update. This occurs depending on the contents of the VERSION file in /opt/gitlab/data/tmp/cache/VERSION. Maybe you can use that for the signalling. Take a look at https://github.com/sameersbn/docker-gitlab/blob/master/assets/init#L461-L474\n. @hans-d /home/git/gitlab/tmp is a symlink to /home/git/data/tmp/ which is a path on the data volume and it persists.\nThe VERSION is the version for the gitlab application inside the container. The :latest version of the image packs the most recent version of gitlab, so for example if the last gitlab version is 7.0.0 then the VERSION file for sameersbn/gitlab:7.0.0 and sameersbn/gitlab:latest will both have 7.0.0.\nIf I remember correctly, pre-compilation of the assets requires that the database connection is configured and since 6.9.0 i think it also requires a connection to redis server https://github.com/gitlabhq/gitlabhq/blob/master/CHANGELOG#L75\nIf using the VERSION file does not work for you then I should have no reservations on adding a state file.\n. @hans-d I was thinking of adding a state file in json format which could be updated at certain points within the init script. Something like\njson\n{\n   code: 100\n   status: \"Compiling assets. Please be patient, this could take a while...\"\n}\nwhere code could be\n- 100 : Boot in progress (Informational Message)\n- 500 : Aborted due to some error (Server Error)\n- 200 : Boot sequence completed (All systems up)\nThe accompanying status message is a string that would make sense to a human, examples are: \n- Starting up existing postgresql container\n- Redis connection details not specified\n- Migrating database\n  ... and so on.\nMy idea in the grand scheme of things is to eventually write a simple web application (in golang) that will launch when the container is started and display these messages while the container is being booted up (with a progress bar of sorts) and finally tear down this temporary server when all the daemons are ready to be launched.\nWhat do you think.\n. @hans-d if you are using shell scripting then you could use jq to read the json file\n. The assets can now be compiled at build time. The referenced commit does this. You should now have much faster container startup time. I think this issue may no longer be relevant in this context. Please let me know if you have any concerns. Thanks\n. @raphaelfan the git user is created while building the docker image. This cannot be changed when the container is started.\n. @johnjelinek its because we are installing gitlab from the release tarball. Apparently gitlab wants us to install using the git sources. The string that is displayed at that position is the git commit hash. It is really a harmless message. However if we wanted to fix it, then we would have to setup the image by cloning the gitlab git repo. \n. @johnjelinek recently i had decided to switch to using the git repo, the thing is the gitlab repo is huge ,adds to the size of the image and increases the the image build time. So I decided that it was not worth it. One option is to edit the gitlab source and simply return something like release-7.0.0. P.S. the text displayed at that location is the revision of the branch/tag tip, something like 117ca6ca. What do you think?\n. @johnjelinek That line really has no significance whatsoever, we can just make it go away. \n. @johnjelinek there is hardly any difference between the two:\nbash\n101M    gitlabhq/\n99M 7-0-stable/\nHowever git clone --depth 1 -b v7.0.0 https://github.com/gitlabhq/gitlabhq.git v7.0.0 works perfectly. I can clone just the tip of the specific tag. Will make these changes now.\n. @nonconvergent please try  using the latest image sudo docker pull sameersbn/gitlab:latest\n. @nonconvergent please note that a new version 7.1.0 has been released. You can use this release instead, using the command sudo docker pull sameersbn/gitlab:7.1.0\n. @nonconvergent F20 ahh... its selinux getting in the way.\n. @nonconvergent disabling or setting selinux to permissive mode might resolve this issue. \n. @nonconvergent p.s. the images work fine on ubuntu. For all the shit you have to go through with selinux please look at #74. Now I know selinux is a good thing in general, but it is not intuitive.\n. @nonconvergent well that just bums me out.\n. @nonconvergent after disabling selinux on /etc/selinux/config and rebooting it did not work?\n. @nonconvergent JSYK the latest tag now works on F20 with selinux enabled.\nDepending on the path of the data volume you might have to change the security content of the volume. For example if the data volume is at /opt/gitlab/data then\nbash\nsudo chcon -Rt svirt_sandbox_file_t /opt/gitlab/data\nIf you are using the internal mysql server (deprecated), then the same has to be done for /opt/gitlab/mysql or whatever. This is the only configuration you need to perform for the image to play nicely with selinux.\n. @markozz I suspect the permission on the uploads directory in the data volume might not be correct. Can you try with the new 7.1.0 image docker pull sameersbn/gitlab:7.1.0 and before starting the image run the container with the app:sanitize command. This will try to fix any directory permissions issues\n. @markozz p.s. I have no issues uploading avatars. \n. @markozz thats it. now you have to start the image normally. app:sanitize is a maintenance command, it exits once its job is done.\n. @markozz can you also try uploading an avatar for a group. I guess it will probably not work as well. Here I have no problems uploading user and group avatars.\nAlso can you paste your docker run command.\n. @markozz i guess you might need to check the logs. \n. @markozz I will check with your command later today.\nFor checking logs, you can view the rails logs in the admin panel of gitlab. Also you can use nsenter to gain access to the container terminal. Please take a look at https://github.com/jpetazzo/nsenter on getting shell access to a running container. Once you have installed nsenter using the jpetazzo/nsenter image, you can simply run sudo docker-enter gitlab and you should have shell access.\n. @lemonbar the git user is not allowed to login via ssh. If you want shell access to a running container please take a look at https://github.com/jpetazzo/nsenter. \n. @craigcabrey can you paste your docker run command. If you are using an external or linked database - did you complete the database setup using the app:rake gitlab:setup command?\nLastly, does following the quick start guide work?\n. @elderone Initially I had decided that using redmine for issue tracking is an advanced usage kinda scenario. But now, I think I will revisit it and try and implement it over the weekend.\nHowever, If you are desperate to have the redmine integration right away please take a look at my comment on overriding the gitlab configuration here and of course it comes with warnings.\nOnce I have the redmine integration done I will refer this issue so that you are notified.\n. @elderone I just realized that adding --volumes-from=gitlab option to the docker command would make all the repositories available in the redmine container at /home/git/data/repositories/. Tested it and it works!\nedit: so you can use redmine for the issue tracking and also browsing the repo, while using gitlab for all git related stuff.\n. @elderone I have not used LDAP. But I think you do not need to do the gitlab:setup again. Just add the required LDAP configuration parameters and try. To be safe against any unintended consequences remember to take a back up of gitlab. \n. @elderone LDAP configuration options are available via environment variables. You don't have to edit gitlab.yml for LDAP support, it can easily be done using the LDAP_ configuration options listed here. However you can edit gitlab.yml to add the LDAP configuration if you choose to do it that way. \nThe general rule of thumb is to only edit gitlab.yml whenever you want to configure things that cannot be configured using the available configuration options. For example, configuring the usage of redmine for issue tracking.\nIf you go above and beyond in editing gitlab.yml by hand, you will have a terrible time while upgrading gitlab (gitlabhq releases new versions every month) since you would need to make sure you update the configs and make the required changes to gitlab.yml again after every upgrade.\n. @elderone you do not need to run the setup again.\n. @txthinking please update docker to the latest version available for your distro. If you are using ubuntu then refer to https://github.com/sameersbn/docker-gitlab#reporting-issues to upgrade the docker version.\n. @txthinking did your issue get resolved?\n. @txthinking one thing I noticed in you command, you are running an image named gitlab:7.1.0, it should probably be sameersbn/gitlab:7.1.0. Have you build the image locally from source?\nNext, your log above says ERROR: 1  Can't create/write to file '/var/lib/mysql/mysql/db.MYI' (Errcode: 13). This means that for some reason the image is not able to write to the /data/mysql mount point.\nFor the sake of testing can you try changing the path of the mount point to something else. Try the following command\nbash\ndocker run -it --rm \\\n-p 10022:22 -p 10080:80 \\\n-e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=10022' \\\n-v /opt/gitlab/data:/home/git/data \\\n-v /opt/gitlab/mysql:/var/lib/mysql \\\nsameersbn/gitlab:7.1.0\n. @txthinking this is weird. Can you try the suggestions from issue #63 \n. @txthinking were you able to get the issue resolved?\n. @txthinking cool. \n. @LordFPL are you using a load balancer? If you are using nginx for the load balancing then make sure add_header X-Frame-Options DENY; is not configured. Here is my nginx load balancer config for gitlab-ce. Hope you find it useful.\n. @LordFPL @djdefi understood. I will fix this before the upcoming 7.1.1 tag. Please stand by.\n. @tomislacker I am guessing this might me a computer resource issue maybe insufficient RAM or something. I suggest you monitor the computer resources while the image is booting. I also noticed that you have -m 2048 in your run command. Check if removing that flag works.\nAnother thing you could try is delete the tmp directory in the data volume so that the assets are recompiled. While I don't think it might fix the issue, its worth a try.\nAnother thing you could try is check if the plain docker run command in the quick start guide works.\n. @tomislacker you may also want to try specifying the unit with the -m flag, i.e. -m 2048m or -m 2g. I don't know what the default units are.\n. @tomislacker were you able to resolve the issue?\n. @tomislacker couple of questions\n- Is you docker host a VM? If yes, what are you using for virtualization (virtualbox/kvm)?\n- What is the host distro you see the maximum failures with?\n- Does your gitlab installation have many and/or large repositories.\n- Are you using the images from the docker index, or have built them locally.\nRegarding unicorn and friends not being launched using supervisord. I had begun migrating the stuff from the gitlab init script to launch using supervisord. But quickly I realized that it might end up becoming a nightmare to migrate any changes that occur in the gitlab init script in terms of maintenance. Also after starting the services using supervisord some sort of waiting mechanism has to  be implemented to make sure the services are up before running the api checks and stuff. This probably is not a problem.\nIf I am able to reproduce your setup, then probably I could help better. Any guide to reproduce your environment would help.\nAs an aside, If you are running the postgresql / redis containers on the same host (your docker run command clearly does not) then you generally want to add some sort of delay between starting those services and the gitlab container to make sure they are up.\n. @tomislacker p.s. gitlab 7.1.1 is now available. maybe you could give it a try.\n. @tomislacker probably it might have something to do with bundler/bundler/pull/2814\nIf true, then the 7.1.1 should probably resolve the issue because it has the latest bundler gem.\n. @tomislacker I built the image locally from scratch today. i.e. purged all my existing images and built again and I see the issue you are facing. One thing that was updated is the ubuntu:14.04 base image and I have a feeling that somehow the issue originates from there.\nI will check if I can fix the issue.\n. @tomislacker I haven't been able to find a resolution to this issue. Mostly because I am not able to reproduce this issue. As mentioned in my previous comment, I was seeing this issue momentarily but then it went away. At the time I was working on the OAUTH stuff and I reckon I was probably seeing that issue because of bad configuration.\nHaving said that I was looking at your run command and noticed some issues in it. As indicated by your nginx changes you are using a load balancer to add https support. However you are not setting the required -e GITLAB_HTTPS=true -e GITLAB_HTTPS_ONLY=false and the -p 4443:443 option is not required. As a result of your configuration you will notice that the displayed clone url will be http:// and not https:// and trying to clone using the displayed http:// clone url will not work.\nMy suggestion is to remove the -p 4443:443 option and add -e 'GITLAB_HTTPS=true' -e 'GITLAB_HTTPS_ONLY=false' to your docker run command. \nbash\ndocker run \\\n    -i -t \\\n    -m 2048m \\\n    -e 'GITLAB_HOST=gitlab.REDACTED' \\\n    -e 'GITLAB_SSH_PORT=2222' \\\n    -e 'GITLAB_PROJECTS_VISIBILITY=internal' \\\n    -e \"SMTP_USER=REDACTED\" \\\n    -e \"SMTP_PASS=REDACTED\" \\\n    -e 'DB_HOST=192.168.105.5' \\\n    -e 'DB_NAME=gitlab_beta' \\\n    -e 'DB_USER=gitlab' \\\n    -e 'DB_PASS=REDACTED' \\\n    -e 'GITLAB_HTTPS=true' \\\n    -e 'GITLAB_HTTPS_ONLY=false'\n    -p 2222:22 \\\n    -p 8081:80 \\\n    -v /srv/gitlab:/home/git/data \\\n    sameersbn/gitlab:7.1.0\nThis will make sure the displayed clone url is a https:// one and most importantly cloning using the displayed url works. Additionally you will not need to make the nginx changes.\nFurther, the version 7.2.0 and above have OAUTH_ configuration options, so you do not need to edit the image with these versions.\nThese changes will ease up your upgrade path as you will not have to edit the images and upgrading the image will be just a matter of pulling a new version and launching it.\nIf you get the time to upgrade the image, please do and let me know if the reported issue persists.\nThanks!\n. @keyvanfatehi yep, the 7.1.1 is currently not getting built on the docker trusted build service. It is throwing errors during the installation of dependency packages. I have opened a service request. Until then you can use the 7.1.0 version using docker pull sameersbn/gitlab:7.1.0 or build the image locally.\n. @keyvanfatehi i'm glad you find them useful.\n. @jk @keyvanfatehi finally the 7.1.1 is now ready on the docker index.\n@dosire thank you for the awesome gitlab project :thumbsup: \n. @johnjelinek its because the docker build service builds every tag even if nothing has changed in the github repo. So when I tag 7.1.1 a build is triggered and when I tag latest again a build is triggered. Its not very intelligent that way. That's just the way it is.\nAlso, the TBS does not automatically pick up the github tags. I have to do all of it manually. \n. @jk as far as i know there are two relatively simple ways to set the timezone for a container. The first method is to mount the /etc/localtime file, eg. -v /etc/localtime:/etc/localtime:ro. This will make sure that the timezone on the host and the container are the same.\nThe second method is to define the TZ environment variable while running the image. For example, -e \"TZ=Europe/Berlin\".\n. @jk of course the the -v /etc/localtime:/etc/localtime:ro method applies to the container system wide while the  -e \"TZ=Europe/Berlin\" method only applies to the shell started by docker.\n. @johnjelinek as far as I know you cannot restore a backup of 6.5.1 on a 7.1.1. The versions need to match. i.e. a 6.5.1 backup can only be restored on a 6.5.1 installation. You would need to pull the 6.5.1 image and restore the backup. Then you can perform an upgrade to version 7.1.1\n. @johnjelinek in that case, I would suggest you clone the docker-gitlab repo, change the GITLAB_VERSION and SHELL_VERSION to 6.5.1 and 1.8.0 respectively in assets/setup/install. Then build the image and try restoring the backup.\nbash\ngit clone https://github.com/sameersbn/docker-gitlab.git\ncd docker-gitlab\nsed 's/GITLAB_VERSION=7.1.1/GITLAB_VERSION=6.5.1/' -i assets/setup/install\nsed 's/SHELL_VERSION=1.9.6/SHELL_VERSION=1.8.0/' -i assets/setup/install\ndocker build --tag='sameersbn/gitlab:6.5.1' .\nbash\ndocker run -it --rm --name=gitlab \\\n--link postgresql:postgresql --link redis:redisio \\\n-p 10022:22 -p 10080:80 \\\n-e 'GITLAB_EMAIL=gitlab@example.com' \\\n-e 'GITLAB_PROJECTS_VISIBILITY=public' \\\n-e 'GITLAB_PORT=10080'  -e 'GITLAB_SSH_PORT=10022' \\\n-e 'NGINX_MAX_UPLOAD_SIZE=800m' \\\n-e 'DB_TYPE=postgres' -e 'DB_HOST=172.17.0.4' \\\n-e 'DB_USER=gitlab' -e 'DB_PASS=password' \\\n-v /opt/gitlab/data:/home/git/data \\\nsameersbn/gitlab:6.5.1 app:rake gitlab:backup:restore\nNOTE: you would need to execute the command app:rake gitlab:backup:restore to restore the backup.\n. @johnjelinek regarding the psql error. If I can remember correctly there used to be an issue restoring backups with postgresql databases. I can't remember the exact version, but It has since been fixed.\nThe image is supposed to automatically run the db migrations when the version gets updated. I think I know why this occurred. Its probably because you used the latest git code in which the version file said 7.1.1 and that why the migrations did not trigger.\nTo be on the safer side, please delete the tmp  directory from the data volume and start the container again so that the assets are compiled again.\n. Duplicate of #63 \n. @tstorch I will try to implement this. I will be on travelling for the next couple of days so I cannot commit to an immediate fix.\n. @tstorch I have a question regarding your setup.\nIf you create a container, install sendmail and try sending a mail, does it work?\nFor example:\nbash\ndocker run -it --rm ubuntu:12.04 bash\napt-get update && apt-get install sendmail\nsendmail <options>\nPlease take a look at http://tecadmin.net/ways-to-send-email-from-linux-command-line/ for instructions on sending emails using sendmail command.\nDo let me know. Only if it works, then its worth adding this option. Else it would appear that you system requires additional sendmail configuration. \n. @tstorch in that case, I would suggest you create a sendmail configuration in the image that you will create. This is done by simply adding the necessary configuration in an .rb file and installing the file in the config/initializers/ directory. The config would be very close to the existing smtp_settings.rb file that is used to configure smtp setting. Additionally  you would need to install sendmail and whatever else packages you would need to configure your mail delivery (postfix probably).\nAdding options to enable sendmail in this image when it really is not going to work does not sound like a good idea as it will result in a lot of support requests asking how to get sendmail working for which I would not have an answer.\nI hope you understand. If you host your changes on github I will probably be able to guide you if required.\n. @johnjelinek please check the config/initializers/smtp_settings.rb file for the smtp configuration.\n. @johnjelinek the newer actionmail has dropped the : character from the authentication parameter. :none now becomes none, at least that is the case for login. Since you do not require authentication, you can just drop the -e \"SMTP_AUTHENTICATION=none\" parameter from the run command.\n. @johnjelinek If it does not help. Then you can enter the container (nsenter/nsinit) and try to manually update the config/initializers/smtp_settings.rb. You can reload the unicorn server by executing kill -s USR2 $(cat /home/git/gitlab/tmp/pids/unicorn.pid). Once you get the mailer working let me know the changes and lets try to incorporate them into the image.\n. @johnjelinek I think you need to change it in the config/initializers/smtp_settings.rb since any configs in the initializers folder override other configs. Or you can just remove the config/initializers/smtp_settings.rb file first.\n. @johnjelinek ok.. maybe your right\n. @johnjelinek haha... so you were able to use the existing config options to get the mailer working right?\n. @hsitaa please create a new issue report.\n. @keyvanfatehi great work! I checked your project and found that the DB_PORT value is not set correctly. If dew is specifying the DB_PORT while running the gitlab container then you need to check that.\nIf dew is not passing the DB_PORT and is expecting the gitlab container to discover it then the alias of the postgresql container should be postgresql, i.e. --link test.postgresql:postgresql. Naming the alias of the link to anything else other than postgresql will not work.\nThis the sed command being executed (the DB_PORT variable has been expanded for clarity)\nsudo -u git -H sed 's/{{DB_PORT}}/tcp://172.17.0.5:5432/' -i /home/git/gitlab/config/database.yml\n. @keyvanfatehi p.s. I like what you are doing. Once it is usable I will just link issue #46 to your project.\n. @keyvanfatehi I found that changing line https://github.com/keyvanfatehi/dew/blob/master/drops/gitlab/index.js#L31 to Links: scope.buildLinksArray({ postgresql: pg }), resolves the issue.\n. @Xoib Run the container using your regular docker run command with the app:rake gitlab:backup:create argument. You may want to run it in interactive mode with the -it flags.\nAre you using the internal mysql database server? If yes, and if you did not specify a volume mount for the database directory, then you can enter the running container using nsenter and perform the following steps\nbash\nsu - git\ncd /home/git/gitlab\nbundle exec rake gitlab:backup:create RAILS_ENV=production\n. @Xoib p.s. the gitlab:backup:create rake task backs up the database as well.\n. @Xoib since the application is running inside the docker container there is no way to add env variables to the existing bash environment and trigger a reconfig.\n. @Nekroze I personally have not used the LDAP configuration. However a few people have been successfully using LDAP with the image. Issue's #92 #36 indicate successful usage of LDAP.\nYou can try and debug the LDAP configuration in gitlab.yml by accessing the shell of the container using nsenter/nsint. Refer to https://github.com/sameersbn/docker-gitlab/issues/118#issuecomment-51145492.\n. @Nekroze thats probably because the LDAP password config parameter is named LDAP_PASS, not LDAP_PASSWORD as listed in your run command\n. @Nekroze Just make sure the LDAP configuration in gitlab.yml is set as expected. Inspect each individual LDAP setting to make sure issues indicated in #92 are not the cause.\n. maybe @jk can help you with the LDAP config.\n. @Nekroze Maybe you should look at the logs at the openldap side of things. That might give you some insight.\n. @Nekroze glad that your issue got resolved. \n@jk Thanks for stepping in.\n. :thumbsup: \n. @metal3d looks like selinux might be kicking in. can you disable selinux and retry?\nI have tested the image on an updated version of fedora 13 with selinux enabled without any problems.\nAre you able to perform git clone/push/pull over the ssh protocol? If it works then I think you are done. To get shell access to the container you can use nsenter. Take a look at the http://github.com/jpetazzo/nsenter repo for details.\n. > The main problem, for me, is that I don't have any way to login the docker container to check what happends\nThats where nsenter comes to the rescue. Using nsenter or the helper script docker-enter you can gain shell access to a running container.\n. @metal3d It is weird. Does this happen everytime the image is executed?\n. @metal3d I will try the image on a CentOS 7 host in a couple of days and let you know\n. @metal3d I have installed centos 7 and I am able to see the issue. I think I should revisit by sshd start up procedure. I start sshd using supervisord. Starting sshd using the init script seems to work. It's kind of weird.\nLet me see what I can find. \n. I found that when an ssh connection is made, the sshd daemon tries to chroot to /var/run/sshd and this operation is denied inside the container. The issue was reported here http://github.com/docker/docker/issues/6103 and has since been resolved. However, It appears the docker version available for centos 7 does not have the resolution.\nFor now, I have set UsePrivilegeSeparation no in the sshd_config to resolve the issue until a newer docker version is available for centos that has the fix.\n. Got it. Will make a commit later today\n. @johnjelinek didn't notice that you had made a PR. Thanks for the contribution.\n. @johnjelinek on an unrelated note, have you tried to use redmine for issue management with gitlab? I am trying to add configuration options so that interested user can redmine for issue tracking, but so far I have not be able to get the integration done. I am not sure if there are any configurations that need to be done on the redmine frontend.\n. Just wait. A new version of gitlab is due in next week (22nd) anyway. Unless you really want me to make a 7.1.0-1 tag right now!. I am happy to oblige. Let me know.\n. @djdefi have never seen this before. probably will need to google the error to see what causes this.\n. @djdefi apparently this has something to do with mysql configuration, see issue at https://github.com/gitlabhq/gitlabhq/issues/4971 and a probable fix listed at http://stackoverflow.com/questions/15460959/rails-get-mysql-server-has-gone-away-when-inserting-more-than-7786-caracters/15461032#15461032\nHope this helps.\n. @djdefi if you can confirm this, i will update my mysql container and the internal mysql server config as well.\n. @djdefi the question that remains is what would be the idea value to set for that parameter.\n. @djdefi My guess is postgresql probably does not have this issue. Switching to postgresql might resolve this issue for you. I can't guarantee it though.\nI think you should probably give postgresql a try. \nMigrating data from mysql to postgresql is certainly challenging. Tools like mysql2psql and mysql2pgsql seems to help a lot tough here.\nI have a docker image docker-mysql2psql which packs both of these tools. I found that if mysql2psql cannot do the job then there is an outside chance that mysql2pgsql will be able to. I have successfully used them in the past with varing levels of success (not tried it with the gitlab database tough).\nIf you do plan to switch, please make sure you take a application backup first.\nedit: safest way is probably to create a new mysql container with the existing data and then try to migrate the data from that container to a postgresql container. If the migration works happens then its just a matter of adding/updating the --link in the docker run command.\n. @rtrauntvein while this does fix the issue. I think it probably is not a great idea to set max_allowed_packet=512M as the default in the docker-mysql image. User's can very simply add/modify the mysql configuration by volume mounting a config file with the desired configurations. \nFor example, -v /tmp/mysql-packet-size.cnf:/etc/mysql/conf.d/mysql-packet-size.cnf, where mysql-packet-size.cnf would have something like\nbash\n[mysqld]\nmax_allowed_packet=512M\nWhat do you think?\n. @rtrauntvein ok.. In that case I'll close this issue. BTW, if you do decide to postgresql mysql2psql does work with the gitlab database. \n. @josephpage In that case we can drop the apt-get clean part from the command.\n. @hydra1983 using nsenter you can gain shell access to the container. Please refer to the README for the installation an usage instructions.\nAlso paste the complete output of docker log gitlab and your docker run command so that we can try to alteast figure out if something is wrong with the command.\n. @hydra1983 I think I know what is going on. Will try to reproduce and fix it tonight.\nedit:\nI think this issue is the same as #131\n. @hydra1983 reopened the issue. lets close it once the issue is confirmed to be fixed.\np.s. the image is currently being built. Will update once its ready.\n. @hydra1983 the build is now ready. Please use the latest tag while pulling the image docker pull sameersbn/gitlab:latest. Once you can confirm the fix, I need to make another fix for a different issue and then I will tag the image with 7.2.0-1\n. @hydra1983 great!\n. @luthur did you get it working?\n. @devinrsmith can you update the README to document this option?\n. @devinrsmith also please consider renaming the option to something like OAUTH_GOOGLE_RESTRICT_DOMAIN so that the option is intuitive to read and understand.\n. @devinrsmith cool. thanks. will merge.\n. @devinrsmith the certificates are installed right? Can you paste the full docker log output.\n. @devinrsmith on it.\n. @devinrsmith I think there is an issue with your ssl certificates. I tested using the following command\nbash\ndocker run --name gitlab -it --rm \\\n-e 'GITLAB_HOST=git.example.com' \\\n-e 'GITLAB_PORT=443' \\\n-e 'GITLAB_HTTPS=true' \\\n-e 'SSL_SELF_SIGNED=true' \\\n-p 443:443 \\\n-p 80:80 \\\n-p 22:22 \\\n-v /tmp/gitlab/data:/home/gitlab/data \\\n-v /tmp/gitlab/mysql:/var/lib/mysql \\\nsameersbn/gitlab:latest\nMy guess is that when nginx is booting up, it is requesting the  passphrase for the encrypted certificate key and therefore waiting for user input. You probably need to install the decrypted version of the certificate key. Please refer to http://pandemoniumillusion.wordpress.com/2008/04/21/nginx-ssl-passphrase-at-startup/ for more details and information on how to fix this issue.\nLet me know.\n. @devinrsmith if you want to double check if this is indeed the case, then start the image with the bash argument\nbash\ndocker run --name gitlab -it --rm \\\n-e 'GITLAB_HOST=git.example.com' \\\n-e 'GITLAB_PORT=443' \\\n-e 'GITLAB_HTTPS=true' \\\n-e 'SSL_SELF_SIGNED=true' \\\n-p 443:443 \\\n-p 80:80 \\\n-p 22:22 \\\n-v /tmp/gitlab/data:/home/gitlab/data \\\n-v /tmp/gitlab/mysql:/var/lib/mysql \\\nsameersbn/gitlab:latest bash\nThis will drop you into the container shell. Now try to manually launch nginx\nbash\nnginx\nIf the above command waits for you to enter the ssl passphrase, then it is what is causing the issue.\n. @devinrsmith glad that you got it resolved! :beer: \n. @xeor can you try setting the option GITLAB_HTTPS_ONLY=false?\n. @xeor If with https enabled - the login page loads but login is denied, then this issue will probably be resolved by just setting the -e GITLAB_HTTPS_ONLY=false. This is also the case for me.\nOne of the things that GITLAB_HTTPS_ONLY=false does is disable the secure session store so that login can happen, see https://github.com/sameersbn/docker-gitlab/blob/master/assets/init#L279-L280. As mentioned in the documentation, this option generally needs to be set when using gitlab behind a load balancer for https to work.\n. @xeor the session store secure option means that the session token will not be shared with the client unless the session is established over a secure channel (https). This is probably done so that an attacker cannot hijack your session with a man-in-the-middle attack.\nYour network topology states that outside world traffic will occur over SSL, so as long as you have http to https redirection at the load balancer you should be fine, unless you have a user in your organization sniffing packets :lollipop:\nHaving http -> https redirection will ensure that users do not even get a chance to submit their login credentials over plain http. Keeping all internal data transfer over plain http will reduce the resource usage as well as have a lower response time.\nChanging X-Forwarded-Proto could affect a lot of users. Unless tested with most common use cases, such a change is unwarranted.\nHaving said that, there is a easy way to override the nginx configuration without having to build the image. Please refer to https://github.com/sameersbn/docker-gitlab/issues/51#issuecomment-41369496\nCheers.\n. @xeor however, please let me know if setting -e GITLAB_HTTPS_ONLY=false resolves the issue.\n. @xeor thats weird, by design it is supposed to set the disable the secure session store option. Have you installed the SSL certificates at the container (though its not required) in your case. Just need to know so that I can reproduce the issue.\n. @xeor ah.. read the rest of your comment. so it was a fig issue.\n. @xeor so what solution are you going to settle for? setting -e GITLAB_HTTPS_ONLY=false or the other way.\n. @auraltension does running just the quick start commands work? does linode provide free trial or something. It would be worth just checking this myself.\n. @auraltension lets check this step by step\n- first check if ssh and http push/pull work with SSL disabled\n- next, check if ssh/http/https push/pull work with SSL enabled and with the -e 'SSL_SELF_SIGNED=true' -e 'GITLAB_HTTPS_ONLY=false'\n- If the none of the above protocols work for push/pull, then there is something wrong with the installed SSL certicate, probably it is encrypted with a password. If that is the case you need to install a decrypted version of the certificate. Please check https://github.com/sameersbn/docker-gitlab/issues/131#issuecomment-53275501 it that is the case.\n. @luthur gitlab-ci has to be told where gitlab is using the GITLAB_URL configuration option.Please check https://github.com/sameersbn/docker-gitlab-ci#quick-start\n. you can use the FQDN, eg. -e 'GITLAB_URL=git.example.com'\n. @luthur Have you configured your domain names on the DNS server? Because it seems like this is a DNS resolution issue.\nRegarding the builds pending, you need to have ci-runners to process builds.\n. @luthur you need to register your runner with the ci server. Please try configuring using the ip address for now.\n. Can you look at the output of the runner. It will show you if it is able to connect to the ci server\n. in the docker logs\ndocker logs -f gitlab-ci-runner\n. @luthur were you able to get it to work?\n. @luthur perfect\n. @andrefernandes the latest tag is built from the repo head while the particular versions are built from the tagged releases.\n. @andrefernandes generally yes. But when you use tagged releases it is very convenient to indicate the version used in bugs/issues reports.\n. @ishiguang what @djdefi said. Also I would recommend that you use postgresql database server.\n. @ishiguang gitlabhq recommends postgresql over mysql. with postgresql you will probably not have issues such as #125 \n. @jk I dont exectly get what issue you are facing. If you can send me same docker run commands for the two images maybe I will get a better idea.\nHowever, If you want to run two or more images to use standard http/https ports, you should use a load balancer. \n. @jk i think I understand what you are saying. But its weird that the browser would not connect to the 3000 port when you are expliciltly specifying it. When you remove the HSTS line from the nginx config do you notice that everything works right?\nI will try reproducing this case locally. \nIf the HSTS line causes this issue, then probably I could just remove it from the config.\n. Please refer https://github.com/sameersbn/docker-gitlab#shell-access\n. @fye that is selinux playing spoilsport.\nHowever, centos 7 already has nsenter installed by default so you really dont need to install nsenter using the jpetazzo/nsenter image. Just install the docker-enter helper script at /usr/local/bin.\nbash\ncd /usr/local/bin\nsudo wget https://raw.githubusercontent.com/jpetazzo/nsenter/master/docker-enter\nsudo chmod +x docker-enter\nAnd you'll be ready to go..\n. @pinglamb when you fix the above typo please make sure you amend it to the existing commit and force push, also make sure you post a comment here when your done. Github does not notify me when PR's are updated.\nAlso, have you tested this setup?\n. @mnesarco Couple of questions\n- Have you installed the SSL certificates for the container.\n- Are you using a load balancer (probably not)\n- Does https access work on the host\n- What version of the image are you using\n- When you say http://my-public-host:3580/ works perfect, do you mean you are able to access the application at that address or do you mean it tries to redirect to https and it fails at that point.\n. @mnesarco couple of things don't make sense at all to me.\n1. when GITLAB_HTTPS=true accessing the application at the http:// address should redirect you to the https:// page. Your above curl output suggests that it stays on http://\n2. again you should not be able to access the application at the http:// address and be able to create users, etc.\n3. the displayed urls should be of the form ssh://git@my-public-host:3522 and not git@localhost:root/x.git. The default GITLAB_HOST is localhost.\nAll this leads me to believe that non of the environment variables are actually being set. How have you specified the environment variables for the image, are you using the -e 'VARIABLE=value' flags or are you using the --env-file flag for the docker run command.\nIf you are using the --env-file option to specify the environment variables for the image, then make sure in the file you have not specified the variable in qoutes or anything, i.e.\nthe correct way\nbash\nGITLAB_HTTPS=true\nGITLAB_HOST=my-public-host\nthe wrong way\nbash\nGITLAB_HTTPS=\"true\"\nGITLAB_HOST=\"my-public-host\"\nIf this not the case then I'd suggest you paste in your run command (you can mask out the passwords and other sensitive parameters)\n. @mnesarco the command you pasted above has a stray -e flag just before the -v flag. But I think that is a typo.\nI just tried your command and had no problems. Can you try:\nbash\ndocker run --name=gitlab -it --rm \\\n-p 3522:22 -p 3580:80 -p 35443:443 \\\n-e 'GITLAB_HOST=my-public-host' \\\n-e 'GITLAB_SSH_PORT=3522' \\\n-e 'GITLAB_PORT=35443' \\\n-e 'GITLAB_HTTPS=true' \\\n-e 'SSL_SELF_SIGNED=true' \\\n-e 'DB_TYPE=postgres' \\\n-e 'DB_HOST=192.168.0.102' \\\n-e 'DB_NAME=gitlabhq_production' \\\n-e 'DB_USER=gitlab' \\\n-e 'DB_PASS=yyy'\n-v /opt/gitlab/data:/home/git/data \\\nsameersbn/gitlab:latest\nI have removed the SMTP parts as they are not relevant here. It might probably not make any difference to your case. Next please try the same command with printenv appended to it.\nbash\ndocker run --name=gitlab -it --rm \\\n-p 3522:22 -p 3580:80 -p 35443:443 \\\n-e 'GITLAB_HOST=my-public-host' \\\n-e 'GITLAB_SSH_PORT=3522' \\\n-e 'GITLAB_PORT=35443' \\\n-e 'GITLAB_HTTPS=true' \\\n-e 'SSL_SELF_SIGNED=true' \\\n-e 'DB_TYPE=postgres' \\\n-e 'DB_HOST=192.168.0.102' \\\n-e 'DB_NAME=gitlabhq_production' \\\n-e 'DB_USER=gitlab' \\\n-e 'DB_PASS=yyy'\n-v /opt/gitlab/data:/home/git/data \\\nsameersbn/gitlab:latest printenv\nThis would print the bash environment variables, so in the output you should see something like:\nbash\nHOSTNAME=a521d3ebd422\nTERM=xterm\nGITLAB_SSH_PORT=3522\nSSL_SELF_SIGNED=true\nGITLAB_PORT=35443\nGITLAB_HTTPS=true\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nPWD=/home/git/gitlab\nHOME=/\nSHLVL=2\nGITLAB_HOST=my-public-host\nDEBIAN_FRONTEND=noninteractive\n_=/usr/bin/printenv\nAs you can see the GITLAB_SSH_PORT, GITLAB_HTTPS, etc. (variables that were set using the -e options) are all present in the bash environment. If you don't see these then something has gone terribly wrong.\nIf that is the case my suggestion would be to try removing all gitlab images, repull and retry. i.e.\nbash\ndocker rmi sameersbn/ubuntu:14.04.20140818\ndocker rmi $(docker images | grep 'sameersbn/gitlab' | awk '{print $3}')\nThis will remove all gitlab images and the base ubuntu image on which the image is built upon. Please make sure that all gitlab images have been removed by inspecting the output of the docker images command.\nNext pull the latest gitlab image from the index and retry.\nbash\ndocker pull sameersbn/gitlab:latest\nAlso can you tell the docker version and the host OS you are using?\n. @mnesarco I wonder of the shell you are using matters. Are you using a shell other than bash?\n. @mnesarco looks alright. can you append bash to the docker command and then inspect the contents of the gitlab.yml file\nbash\nvim.tiny /home/git/gitlab/config/gitlab.yml\nThis means ubuntu 12.04 right?\n\nLinux ubunto1 3.8.0-44-generic #66~precise1-Ubuntu SMP Tue Jul 15 04:01:04 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\n. @yaleh when you create the gitlab application on the google developer console, you can edit the redirect url as required. It should be something like https://git.example.com/users/auth/google_oauth2/callback\n\nThere is no need to edit any gems, you only need to set it up right\n. @yaleh ok.. I will check this later in the day.\n. @yaleh I just tested the google oauth integration and everything works perfectly alright here\nbash\ndocker run --name='gitlab' -it --rm \\\n-p 127.0.0.1:10025:22 -p 172.17.42.1:50083:80 \\\n-e 'SSL_SELF_SIGNED=true' \\\n-e 'GITLAB_HTTPS=true' \\\n-e 'GITLAB_HOST=git.example.com' \\\n-e 'GITLAB_EMAIL=git@example.com' \\\n-e 'OAUTH_ALLOW_SSO=true' \\\n-e 'OAUTH_BLOCK_AUTO_CREATED_USERS=false' \\\n-e 'OAUTH_GOOGLE_API_KEY=yomamasofatwhenshejumpforjoy.apps.googleusercontent.com' \\\n-e 'OAUTH_GOOGLE_APP_SECRET=shegetstuck' \\\nsameersbn/gitlab:latest\nI did get an error which was resolved by following https://stackoverflow.com/questions/17166848/invalid-client-in-google-oauth2\n. @yaleh if by proxy you mean the load balancer, then I use nginx and you can find my config here https://gist.github.com/sameersbn/adbc1efebbb2e3d5909d\n. @yaleh glad you got the issue resolved.\n. @hydra1983 it looks like the system is running low on memory.\n. @sinewang were you able to find a resolution to this issue?\n. closing for lack of activity. If you still have the issue please reopen.\n. @bugthing I will try out your command when I get home.\n. @bugthing I tried your command and did not face any problems sending mails. Here's the slightly edited command:\nbash\ndocker run -it --rm --name='sm-gitlab' \\\n  --link sm-gitlab-db:postgresql \\\n  --link sm-gitlab-redis:redisio  \\\n  --volume=/tmp/sm-gitlab:/home/git/data \\\n  --publish=10022:22 \\\n  --publish=10080:80 \\\n  --env=GITLAB_PORT=10080 \\\n  --env=GITLAB_SSH_PORT=10022 \\\n  --env=GITLAB_HOST=git.example.com \\\n  --env=SMTP_ENABLED=true \\\n  --env=SMTP_DOMAIN=www.gmail.com \\\n  --env=SMTP_USER=noreply@example.com \\\n  --env=SMTP_PASS=iamRickJamesBitch \\\n  --env=DB_USER=gitlab \\\n  --env=DB_PASS=password \\\n  --env=DB_NAME=gitlabhq_production \\\n  sameersbn/gitlab:7.3.0\nMaybe you can check the production.log. You can view the logs under the Administration panel under Logs. When I add an SSH key, a line in the production log reads:\nSent mail to rickjames@example.com (4594.9ms)\nYou might need check the logs to see:\n- if any smtp error message is displayed after a SSH key is added to your profile.\n- is gitlab sending the email to the expected recipient.\nFinally, I also noticed that you have specified --dns=172.19.1.182 in your command. Could it be a DNS issue? Maybe the DNS is not resolving addresses?\nedit:\np.s. my use of long options, e.g. --env instead of -e should have no consequence on the results.\n. \n. @spiddy nice!\n. @spiddy no worries.\n. @spiddy The image automatically performs the migrations at first start, i.e. it executes the db:migrate rake task. But the administrator account is only created when the gitlab:setup rake task is executed.\nWe might need to figure out a way to detect that gitlab:setup has not been completed and automatically execute it the gitlab:setup rake task instead of the db:migrate task.\nI think the only possible solution is to check if at least one user exists in the gitlab database. This would requiring querying the mysql/postgresql database.\nWithout this, I don't think you will be able to get the fig configuration to work.\n. @spiddy yes, the latest tag is generated automatically by the docker index at every git push event.\n. #158 adds a fig configuration file.\n. @spiddy The compilation of assets occurs only when the container is booted for the first time or after an upgrade. Of course this depends on whether you have mounted a volume for the data dir.\nThe problem with compiling the assets during the image build is: for the the assets to compile you need to have the database connection configured. This is a little too much to handle in the install script.\nApart from that, it will also increase the image build time drastically which would make the development a very time consuming affair.\n. @spiddy I tried the fig, pretty cool stuff.\n. @jeffutter well it does not end there. Setting / changing GITLAB_RELATIVE_URL_ROOT requireds that the assets are compiled again.\n. @jeffutter As far as I can remember this has been the case. I will double check... stand by.\n. @jeffutter I can confirm that this is the case. Additionally here is a comment about it in the gitlab sources https://github.com/gitlabhq/gitlabhq/blob/master/config/application.rb#L68\n. @spiddy its not unusual to have gitlab running at at relative url. The most common case would be someone using a CA certified SSL certificate where one certificate is purchased for the root domain (www.example.com) and then run all applications under this domain at different relative urls. SSL certificates are expensive, so it makes sense to do this rather than purchase multiple certificates for each subdomain or buy a really expensive wildcard certificate (*.example.com)\n. The assets can now be compiled at build time. The referenced commit does this. You should now have much faster container startup time.\n. @spiddy Please hold on. I will make some changes removing the requirement to run execute the gitlab:setup rake task altogether regardless of the database in use. I will post a comment here so that you are notified about the changes.\nPost that you can revert your changes in the init file and rebase your PR with just the fig parts.\n. @spiddy I have made the required changes. Now you do not have to manually execute the gitlab:setup rake task. It will be launched automatically. At the same time, the image will now wait for the database server to accept connections, so this will allow some time for the mysql container to come online.\nOne thing I would like to mention regarding your PR is that mysql is not recommended by gitlabhq. You are better off using postgresql. It is better supported by gitlab.\n. @spiddy there was an issue in the mysql server status check query. Have made the fix and created a new 7.3.1-2 tag. \n. @aidan- whoops!! i just committed a fix for this with a new release 7.3.1-2\n. @spiddy merged PR #157 which also addresses the same issue. Sorry about this.\n. @aidan- I am so sorry about this. I have merged the PR. The build will be ready in ~15 minutes. Can you test it and let me know. I will make a new release tag.. Damn... this is killing me!\n. @aidan- The build is ready. Please check with the latest tag. Thanks for the help.\n. @jk yep.. I made a horrible mistake. The fix from #157 has been merged and is available on the latest tag. Just waiting for the confirmation that it has been resolved before I make a tagged release. If possible can you check if the issue is resolved in the latest tag.\n. @aidan- Thanks.. 7.3.1-3 release has been tagged and available for download.\nAgain.. I am sorry about this folks.\n. @subesokun current the option is not available. Will add now.\n. @Analect \nThe message rename': Permission denied @ sys_fail2 - (/home/git/data/repositories/me/eolas.git/hooks, /home/git/data/repositories/me/eolas.git/hooks.old.1411721147) (Errno::EACCES) from /usr/lib/ruby/2.1.0/fileutils.rb:525 indicates that there is a permissions issue. First fix the permissions using the app:sanitize command.\nbash\ndocker run --name gitlab -d --link redis:redisio \\\n-p 22:22 -p 80:80 \\\n-e \"DB_TYPE=postgres\" -e \"DB_HOST=172.17.0.5\" \\\n-e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=******\" \\\n-v /opt/gitlab/data:/home/git/data sameersbn/gitlab:7.3.1-3 app:sanitize\nOnce this is done, check if you are able to upgrade. \nedit: removed comment on incremental upgrades\n. @Analect app:sanitize should execute without any errors. It does not do any fancy stuff, it only runs chmod on various directories https://github.com/sameersbn/docker-gitlab/blob/master/assets/init#L675\nThe fact that you get the above messages while running the app:sanitize command begs me to ask you \"what host os are you using\". If you are using RHEL flavoured OS, have you white listed the data directory so that selinux does not mess up? Instructions are available in https://github.com/sameersbn/docker-gitlab#data-store\nYou may also try changing the ownership of the repositories folder on the host chown -R 1000:1000 repositories\n. @Analect  in release 6.8.2 persistent ssh host key feature was added https://github.com/sameersbn/docker-gitlab/commit/0649c693027dda57f8563cbf4b581c169978507a. The keys are store on the data volume in a folder named ssh. If you want to change the server ssh keys, just copy them into this folder and restart the server.\nedit: #62 gives an overview on why it was added\n. @Analect does it cause any issues? If yes, then remove all these file and always start the container with some name, e.g. --name=gitlab. If this does not cause any issues, then just ignore it.\np.s. yes there will be multiple ssh keys in that directory (its normal).\n. @Analect Can you try clearing up your $HOME/.ssh/known_hosts file and retrying If that does not help then remove the ssh directory from the data volume and restart the container with a name using the --name option.\n. > I have copied the contents of ssh_host_ecdsa_key.pub as one of the SSH keys under profile on gitlab and restarted gitlab, but that doesn't appear to resolve\nWHAT!!! WHY?? That is insane. Those are the server keys. Leave them alone. They do not go into your gitlab profile.\n. @Analect generally when you use the command line git operations, ssh would have warning you about the offending key.\nAnyways, I'm glad you got it resolved.\np.s. future upgrades will not change the server keys.\n. @ziirish Seems fine to me.\n``` bash\ndocker run -it --rm sameersbn/debian:jessie.20140918 ls -l /dev\ntotal 0\ncrw------- 1 root root 136,  35 Sep 26 16:28 console\nlrwxrwxrwx 1 root root       13 Sep 26 16:28 fd -> /proc/self/fd\ncrw-rw-rw- 1 root root   1,   7 Sep 26 16:28 full\nc--------- 1 root root  10, 229 Sep 26 16:28 fuse\nlrwxrwxrwx 1 root root       11 Sep 26 16:28 kcore -> /proc/kcore\ncrw-rw-rw- 1 root root   1,   3 Sep 26 16:28 null\nlrwxrwxrwx 1 root root        8 Sep 26 16:28 ptmx -> pts/ptmx\ndrwxr-xr-x 2 root root        0 Sep 26 16:28 pts\ncrw-rw-rw- 1 root root   1,   8 Sep 26 16:28 random\ndrwxrwxrwt 2 root root       40 Sep 26 16:28 shm\nlrwxrwxrwx 1 root root       15 Sep 26 16:28 stderr -> /proc/self/fd/2\nlrwxrwxrwx 1 root root       15 Sep 26 16:28 stdin -> /proc/self/fd/0\nlrwxrwxrwx 1 root root       15 Sep 26 16:28 stdout -> /proc/self/fd/1\ncrw-rw-rw- 1 root root   5,   0 Sep 26 16:28 tty\ncrw-rw-rw- 1 root root   1,   9 Sep 26 16:28 urandom\ncrw-rw-rw- 1 root root   1,   5 Sep 26 16:28 zero\n```\nOR\n```\ndocker run -it --rm debian:jessie ls -l /dev\ntotal 0\ncrw------- 1 root root 136,  35 Sep 26 16:31 console\nlrwxrwxrwx 1 root root       13 Sep 26 16:31 fd -> /proc/self/fd\ncrw-rw-rw- 1 root root   1,   7 Sep 26 16:31 full\nc--------- 1 root root  10, 229 Sep 26 16:31 fuse\nlrwxrwxrwx 1 root root       11 Sep 26 16:31 kcore -> /proc/kcore\ncrw-rw-rw- 1 root root   1,   3 Sep 26 16:31 null\nlrwxrwxrwx 1 root root        8 Sep 26 16:31 ptmx -> pts/ptmx\ndrwxr-xr-x 2 root root        0 Sep 26 16:31 pts\ncrw-rw-rw- 1 root root   1,   8 Sep 26 16:31 random\ndrwxrwxrwt 2 root root       40 Sep 26 16:31 shm\nlrwxrwxrwx 1 root root       15 Sep 26 16:31 stderr -> /proc/self/fd/2\nlrwxrwxrwx 1 root root       15 Sep 26 16:31 stdin -> /proc/self/fd/0\nlrwxrwxrwx 1 root root       15 Sep 26 16:31 stdout -> /proc/self/fd/1\ncrw-rw-rw- 1 root root   5,   0 Sep 26 16:31 tty\ncrw-rw-rw- 1 root root   1,   9 Sep 26 16:31 urandom\ncrw-rw-rw- 1 root root   1,   5 Sep 26 16:31 zero\n```\nEither ways its perfectly alright..\nWhat is the output you get when you run docker run -it --rm debian:jessie ls -l /dev?\n. @pnelsonsr are you not able to? I think it should work.\n. @pnelsonsr can you try starting bash in the container and trying to ping. You can start bash by appending bash to the run command.\n. @pnelsonsr If the domain you are trying to ping can be resolved by a local dns server then you can specify the --dns option while running the container.\nIf editing the /etc/hosts file is the only solution, then you can volume mount a hosts file. i.e. add -v /etc/hosts:/etc/hosts:ro to the run command to volume mount the hosts file on the host to the container.\nYou can test this using the following command:\nbash\ndocker run -it --rm  -v /etc/hosts:/etc/hosts:ro busybox cat /etc/hosts\n. @pnelsonsr when docker starts a container, it adds an entry in the hosts file with the container id, eg.\n127.0.0.1 363e5ed1c069. Since we are mounting this file, this entry is not being made or may be it is not made because the file is mounted in the ro mode.\nTo fix this, you could set a hostname for the container using the -h option, eg. -h localhost. Since the hosts file on your host  would already have a localhost entry it will be fine. Alternately you could pass -h gitlab and add the 127.0.0.1 gitlab entry in your hosts file to get the same effect.\n. It's OK.\n. @pnelsonsr You dont have to start over. Its alright.\nCan you paste the errors you see in the last upgrade.\n\n[deprecated] I18n.enforce_available_locales will default to true in the future. If you really want to skip validation of your locale you can set I18n.enforce_available_locales = false to avoid this message.\n\nIs normal. Its a message from one of the gems.\n\nHey where is the root password displayed now?\n\nThe root user is no longer assigned a password or allowed to login via SSH. You have to use nsenter to access the terminal. Please find the instructions here https://github.com/sameersbn/docker-gitlab#shell-access\n\nis this db or filesystem? Looks like filesystem and therefor selinux...\n\nCan you try setting updating the security context of the data dir again? The permissions denied message is not expected.\n\nI was able to go to 7.2.2, but it said that it needed to check hooks when it couldn't. I did check out the operations and everything appears to be working\n\ngitlabhq  made some changes on the hooks in 7.2.2 which will automatically migrate on upgrade.\n. @pnelsonsr ok.. those deprecated messages are normal.\nI thought I had selinux all figured out, unfortunately it does not seem to be the case :(\n. @pnelsonsr yep.. you can remove the old images.\nBtw, as pointed in the comment https://github.com/sameersbn/docker-gitlab/issues/160#issuecomment-56949383 you can upgrade directly to the required version. So in the future try to upgrade directly to the latest version.\n. @pnelsonsr F20 already has nsinit installed by default. Just install this helper script and you should be done. https://github.com/jpetazzo/nsenter/blob/master/docker-enter\n. @pnelsonsr sorry for the mixup, I meant nsenter. You only need nsenter and the helper script I linked. nsinit is an alternate way of gaining shell access. Though I have never been able to use nsinit. After installing the docker-enter script in you PATH, all you need to do is sudo docker-enter <container-id|container-name>, eg. sudo  docker-enter gitlab\nHowever in docker 1.2.1 a new sub command named exec will be introduced so you could do docker exec gitlab bash to gain shell access. There will be no need to install nsenter or nsinit or whatever.\n. @arnaudlamy Please try this sample config.\n``` nginx\nupstream gitlab {\n  server                    127.0.0.1:10080;\n}\nserver {\n  listen                    80;\n  server_name               git.example.com;\n  server_tokens             off;\n  root                      /dev/null;\nlocation / {\n    proxy_read_timeout      300;\n    proxy_connect_timeout   300;\n    proxy_redirect          off;\nproxy_set_header        X-Forwarded-Proto $scheme;\nproxy_set_header        Host              $http_host;\nproxy_set_header        X-Real-IP         $remote_addr;\nproxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header        X-Frame-Options   SAMEORIGIN;\n\nproxy_pass              http://gitlab;\n\n}\n}\n```\n. @arnaudlamy \n\nlocation /git {\n\nIt should be:\nnginx\nlocation / {\nI think this could be the issue in your config.\n. @arnaudlamy Then you can try adding the location /git part.\n. @arnaudlamy My tests are very basic where I just check if accessing the application at the suburi works and the if links displayed are right. I will try running two applications at different suburi's and check if things are alright. \n. @arnaudlamy ok.. did you have to add the -e 'GITLAB_RELATIVE_URL_ROOT=/git option to the docker run command?\n. @arnaudlamy cool, so the image is alright then. \nClosing the issue.\n. updating sample config for users that may encounter similar situations.\nfor -e 'GITLAB_RELATIVE_URL_ROOT=/git',\n``` nginx\nupstream gitlab {\n  server                    127.0.0.1:10080;\n}\nserver {\n  listen                    80;\n  server_name               git.example.com;\n  server_tokens             off;\n  root                      /dev/null;\nlocation /git {\n    proxy_read_timeout      300;\n    proxy_connect_timeout   300;\n    proxy_redirect          off;\nproxy_set_header        X-Forwarded-Proto $scheme;\nproxy_set_header        Host              $http_host;\nproxy_set_header        X-Real-IP         $remote_addr;\nproxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header        X-Frame-Options   SAMEORIGIN;\n\nproxy_pass              http://gitlab/git;\n\n}\n}\n```\n. @jrabary yes of course. Most users run the container behind a load balancer. I have tested this image behind nginx, haproxy or hipache.\n. FWIW, here is a sample nginx vhost config\n``` nginx\nupstream gitlab {\n  server                    172.17.42.1:10080;\n}\nserver {\n  listen                    80;\n  server_name               git.example.com;\n  server_tokens             off;\n  root                      /dev/null;\n# Increase this if you want to upload larger attachments\n  client_max_body_size      20m;\n# individual nginx logs for this vhost\n  access_log                /var/log/nginx/gitlab_access.log;\n  error_log                 /var/log/nginx/gitlab_error.log;\nlocation / {\n    proxy_read_timeout      300;\n    proxy_connect_timeout   300;\n    proxy_redirect          off;\nproxy_set_header        X-Forwarded-Proto $scheme;\nproxy_set_header        Host              $http_host;\nproxy_set_header        X-Real-IP         $remote_addr;\nproxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header        X-Frame-Options   SAMEORIGIN;\n\nproxy_pass              http://gitlab;\n\n}\n}\n```\nHope you find it useful.\nedit:\nExtend it to add SSL support if required.\n. The proxy_pass instruction will forward requests to the upstream gitlab application. You don't have to open port 10080 on the host. 172.17.42.1 is the address of the docker bridge interface. You can change it to 127.0.0.1. \nFor ssh, you can either use a different port of the host ssh server or change it for the container. \n. @majkinetor It is not a good idea to remove the internal nginx processes. Please refer to my comment https://github.com/sameersbn/docker-redmine/pull/10#issuecomment-44616450\n. @majkinetor the nginx process on the host will not have access to the static assets inside the container. This means that all requests will have to be served by the unicorn workers inside the container.\nWhen nginx runs alongside the unicorn workers inside the container, nginx will handle requests to the static assets while unicorn will only service dynamic content.\n. @jk makes some very valid points. Besides if the image by default requires setup that an average user finds difficult to understand then there will be few takers and at the same time it will be very difficult to handle support requests \nIf a user desires a setup that does not fit how the image works be default, you could always\n1. fork the project\n2. create a new image based on this image FROM sameersbn/redmine:2.6.0-1 and disable startup of nginx via supervisor configs.\n. > docker-gitlab for instance links redis database so he already has double linkage\nThis is the seperation of concerns @jk talks about. You have a software that requires 2 external components i.e. redis and postgresql and so they have to be satisfied using linkages. You make the case that nginx falls in the same category, which is true, but because we dont want unicorn to handle trivial requests nginx is part of the image to take care of this.\nFrom that point any effort to get rid of nginx seems to complicate the setup unnecessarily. Its not worh it. We can of course reduce the number of nginx works inside the image (we probably should, just realized that its 4 by default) to ease of some unnecessary resource usage.\n. > So with gitlab and redmine I will have totall 12 nginx workers\nTrue, this should be corrected inside the images so that you have 6 workers :)\n. @majkinetor yes I meant changing it in the image itself and optionally providing a config option to set the number of nginx workers\n. @majkinetor I have added a new config option NGINX_WORKERS which defaults to 1.\nedit: same done for the redmine image.\n. @pirelenito thats weird. Maybe I didn't build the tag properly. Rebuilding the tag now.\n. @pirelenito can you try the mysqladmin -h ${DB_HOST} -u ${DB_USER} -p$DB_PASS} status command from the gitlab container? of course update the host, user and pass in the command\n. @pirelenito I think I need to install the mysql-client package.\n. @pirelenito can you try the 7.3.2-1 release. It is currently being built and should be ready in about 30 mins\n. @YauzZ can you please paste your docker run command for starting mysql and gitlab containers? This generally happens when the mysql connectio parameters are incorrect.\n. you will need to take a look at the logs in /var/log/gitlab\n. @JasonCubic  Please refer #113 \n. @subesokun you can access the shell of the running container using nsenter and inspect the the contents of /home/git/gitlab/config/initializers/smtp_settings.rb\n. @JasonCubic actually SMTP_ENABLED is automatically set to true if SMTP_USER is defined, otherwise you need to manually set it.\n. @tirithen It definitely is some smtp config issue. can you retry after setting SMTP_PORT to 587 (which is the default). If that does not work, then set SMTP_PORT=465 and set SMTP_STARTTLS=false\n. @tirithen If that does not work, then try setting\nSMTP_PORT=587 (default)\nSMTP_STARTTLS=true (default)\nSMTP_AUTHENTICATION=plain\nThis should probably work (taken from https://github.com/hachpai/labelIndus/blob/master/config/environments/development.rb)\nSMTP_AUTHENTICATION=plain might be the key here.\nedit: \nFYI, https://stackoverflow.com/questions/15796530/what-is-the-difference-between-ports-465-and-587\n. @hans-d probably a check can be added to do that sort of thing.\n. @zimmski can you try to execute cd /home/git/gitlab && PATH=/usr/local/bin:/usr/bin:/bin bundle exec rake gitlab:backup:create RAILS_ENV=production and check if the backup is generated?\nBTW, I hope the gitlab host is running at the time of the backup. The default timezone of the container is GMT which means that 04:00 AM localtime might not be 04:00 AM inside the container, unless you live in the GMT timezone or you have set the timezone via the TZ environment variable or specified it via the /etc/localtime file.\n. @zimmski btw, I am using 7.3.2-1 in production and have timely backups being generated\n``` bash\nls -l\ntotal 29174788\n-rw-r--r-- 1 ubuntu ubuntu 4267847680 Oct  3 04:10 1412289465_gitlab_backup.tar\n-rw-r--r-- 1 ubuntu ubuntu 4267847680 Oct  4 04:11 1412375856_gitlab_backup.tar\n-rw-r--r-- 1 ubuntu ubuntu 4267847680 Oct  5 04:11 1412462274_gitlab_backup.tar\n-rw-r--r-- 1 ubuntu ubuntu 4267847680 Oct  6 04:11 1412548678_gitlab_backup.tar\n-rw-r--r-- 1 ubuntu ubuntu 4267847680 Oct  7 04:12 1412635080_gitlab_backup.tar\n-rw-r--r-- 1 ubuntu ubuntu 4267847680 Oct  8 04:10 1412721465_gitlab_backup.tar\n-rw-r--r-- 1 ubuntu ubuntu 4267868160 Oct  9 04:12 1412807893_gitlab_backup.tar\n```\n. @zimmski \n\nThe time is 2 hours of to the host system but that would just mean that the cronjob would run 2 hours earlier. Right?\n\nYes (i guess)\n\nsudo: cd: command not found\n\nThis could be the source of the issue. Can you try \nbash\nsu - git\ncd /home/git/gitlab && PATH=/usr/local/bin:/usr/bin:/bin bundle exec rake gitlab:backup:create RAILS_ENV=production\nIf that does not work, then please try\nbash\nsu - git\nbash # default shell for git user is set to dash, so lets try using bash\ncd /home/git/gitlab && PATH=/usr/local/bin:/usr/bin:/bin bundle exec rake gitlab:backup:create RAILS_ENV=production\nFinally, have you done any changes to the image. Or are you using the image straight from the docker index?\n. > sudo: cd: command not found\n\nThis could be the source of the issue. Can you try\n\nProbably not... I get the same message here.\nHowever it is not right to prepend sudo to the command because the command has 2 parts.\n. @zimmski can you add the cronjon * * * * *  date >> /tmp/date.log for the git user using sudo -u git crontab -e and check if the job is getting executed by inspecting the /tmp/date.log file. You should see it getting updated every minute.\nIf the cronjob is getting executed, then try changing the backup cronjob to execute every minute or so and capture the output of the command, something like:\n* * * * * cd /home/git/gitlab && PATH=/usr/local/bin:/usr/bin:/bin bundle exec rake gitlab:backup:create RAILS_ENV=production >/tmp/backup.log 2>&1\nthen you can inspect the contents of the /tmp/backup.log to check if anything is going wrong.\n. @zimmski Can you try using the default expiry time to see if the backups are being generated. It seems highly unlikely that it could be the cause of the issue. But its worth a shot i guess.\nFYI, awaiting your response on sugeestions mentioned in https://github.com/sameersbn/docker-gitlab/issues/173#issuecomment-58561996\n@netflash thanks for confirming that the feature works. That makes two of of :)\n. @zimmski I am using docker 1.2.0 on ubuntu 14.04. Can you try with the latest tag. I have switched to the ubuntu:14.04 base image in the latest version.\nedit: If this fixes the issue, then I will make a new point release\n. @zimmski Is your host debian?\n. @zimmski FYI, I use the default libcontainer driver.\n. @zimmski the older image was based on the debian:jessie base image which has the problematic configuration in /etc/pam.d/cron, as you pointed out the ubuntu:14.04 base image on which the image is now rebased on apparently does not have the configuration.\nIts common for people to make such workarounds in docker containers. Since docker is relatively new some compromises have to be made to get things working right. Once the issue is handled correctly as it should be, I am sure the config will reappear in the base image.\n. @jeffutter To be frank I can't even remeber where I got the configuration for the sidekiq.yml file. Anyways, I will get this handled.\n. @matejkramny seems like some config value has character(s) that might need to be escaped see #92 \n. @matejkramny when you are linking the redis and mysql containers, why are you setting -e \"REDIS_HOST=redis\" -e \"DB_HOST=mysql\"? Please remove those parameters from the command and try again.\n. @matejkramny did it work?\n. @matejkramny btw, the alias of the redis link should be redisio, i.e. --link gitlab_redis:redisio\n. @YvanDaSilva maybe you need to set it as Paris https://gist.github.com/jpmckinney/767070\nedit: let me know if that helps. if it works then I will refer the above link in the docs\n. > In the upgrade process you suggest a backup prior with:\n\ndocker run --name=gitlab -it --rm [OPTIONS] sameersbn/gitlab:7.3.2-1 app:rake gitlab:backup:create\nWhat are the [OPTIONS] that I should set in the command?\n\nThe OPTIONS are whatever options you set while executing the container. To be clear while taking a backup you basically run the same docker command you use to start the container except that you append app:rake gitlab:backup:create to it.\n\nWhat does it backup?\n\nThe database, repositories and uploaded files are backed up\n\nWhere does it backup?\n\nThe backups are store in the backups directory of the data volume. See https://github.com/sameersbn/docker-gitlab#creating-backups\n. @pnelsonsr were you able to get this sorted?\n. @pnelsonsr Yeah.. you don't have to do all that. you can enable automated backups by setting up '-e GITLAB_BACKUPS=daily' or -e 'GITLAB_BACKUPS=monthly'. This will make sure backups are generated automatically in the backups folder. From that point on, you only need to copy the tarballs from the backups folder to the backup server.\n. @msmarino well your wish has come true. in upcoming gitlab 7.4.0 there are options to do this sort of thing using http://fog.io/\n. @pnelsonsr right now I have not added support for this. fog.io allows backing up files to google, rackspace, S3, local storage, etc. Some amount of work needs to be put in so that users can easily configure their required method. \nHowever, you can override the gitlab.yml with the desired fog configuration, see https://github.com/sameersbn/docker-gitlab/issues/51#issuecomment-41369496\n. @cboettig As long as you are mounting a data volume and have a volume mounted for the mysql data, in case you are using the internal mysql server, it is perfectly safe to remove the container as the relevant data is store at these mount points. When you recreate the container make sure you specify the same mount points for the data and mysql volumes.\nBack to the issue, as long as the container is stopped while taking the backup you should be good. The command you use to take the backup should match the docker run command you use to start the container but with app:rake gitlab:backup:create appended to the command. For example, if your docker run command is:\nbash\ndocker run --name=gitlab -d \\\n-e 'DB_HOST=192.168.1.100' \\\n-e 'DB_NAME=gitlabhq_production' -e 'DB_USER=gitlab' -e 'DB_PASS=password' \\\n-v /opt/gitlab/data:/home/git/data \\\nsameersbn/gitlab:7.3.2-1\nThen the command to create the backup should be:\nbash\ndocker run -it --rm \\\n-e 'DB_HOST=192.168.1.100' \\\n-e 'DB_NAME=gitlabhq_production' -e 'DB_USER=gitlab' -e 'DB_PASS=password' \\\n-v /opt/gitlab/data:/home/git/data \\\nsameersbn/gitlab:7.3.2-1 app:rake gitlab:backup:create\nBoth commands should have the exact same environment variables and mount points, except you might want to run the backup command in interactive mode -it and maybe with a different or no --name.\nLastly, yes you can nsenter and execute the rake task to create a backup.\nbash\ncd /home/git/gitlab\nsudo -u git -H bundle exec rake gitlab:backup:create RAILS_ENV=production\n. @cboettig are you using the internal mysql server? If yes, have you specified a volume mountpoint for /var/lib/mysql? If not, then there is no way that method to create backups as described in the readme is going to work. \nThe backups are created in the data volumes backup directory. Have you specified a mountpoint for /home/git/data? If yes, then check the contents of the folder on the host. If not (which is not a good idea), then you can use docker cp to copy the .tar file to the host. Refer docker help for usage.\nThe restore process is documented in the readme. However for it to work you should have /home/git/data volume  mounted.\n. @cboettig well it also says \"You should now have the GitLab application up and ready for testing. If you want to use this image in production the please read on.\"\n\n-v /var/run/docker.sock:/run/docker.sock \\\n-v $(which docker):/bin/docker \\\nWhat is the reason for this?\n\nThe reason for this is to get the quick start guide to work. Since the internal mysql and redis components have been removed I wanted to make it easy for new users to take the image for a spin and decide whether they want to use gitlab or not (that is exactly why the quickstart command exists).\nSo now what the image does is, if a redis and/or database connection is not specified (which is the case of the quick start guide) and if the docker binary and socket are volume mounted, then the image will pull a redis and a postgresql image from the docker index, set it all up and you are ready to test gitlab. You can also use fig for this.\nYou can use any postgresql image. The official postgresql image on the docker index I found is very big. It also lacks the feature to create a user and database at launch. Whatever be the case, you can choose whatever postgresql image. The minimum requirements that a postgresql image should fulfil is that it should expose the postgresql port.\n. @cboettig gitlab requires both postgresql/mysql and redis.\n. @cboettig please note that the fig config does not mount volumes. It a basic configuration.\n. @cboettig You cannot restore a backup made with gitlab 7.2.1 on gitlab 7.3.2. You should restore the backup on a 7.2.1 instance and then upgrade the container using the upgrade instructions.\n. @newkit Is your exim server using self signed SSL certificates? If yes, then we may have to disable ssl certificate verification.\nYou can also check the application logs from the Admin > Logs > production.log panel to see what error the gitlab application encounters.\n. > LOGIN authentication mechanism not supported\nI gues this is the cause of your issue. Please try setting -e SMTP_AUTHENTICATION=plain maybe that will fix it.\n\nI think it would be better, if one could install the self signed cert, rather then disabling the certificte verification. But, oc I don't know how much work that involves.\n\nThis feature is already implemented. Please read https://github.com/sameersbn/docker-gitlab#installing-trusted-ssl-server-certificates. Basically you need to paste ssl key(s) for all the servers you want to truct inside ca.crt file.\n. @newkit SMTP_STARTTLS probably needs to be true because you are using port 587.\n. @newkit do let me know if adding the ssl key and removing the SMTP_OPENSSL_VERIFY_MODE=none works.\n. @newkit got it.\n. @msmarino please set GITLAB_EMAIL to the required address. example@example.com is the default value of GITLAB_EMAIL\n. @quasarj that does not sound right. root is the username of the user with email admin@example.com\n. @xujinzheng you need to add your SSH public key to your gitlab profile under SSH keys.\n. @xujinzheng ssh keys have to be generated for you to be able to connect to gitlab via ssh. There is just no way around it. Looks like you may have accidentally deleted your /Users/zhengxujin/.ssh directory.\n. @cosminonnet I think you need to enable POP access in gmail. By default POP access is disabled in gmail.\n. @cosminonnet for gmail user all you need to specify is the username and password for the gmail account. can you check the production.log for any mail sending errors. This can be viewed under logs in the admin area.\n. @cosminonnet I use google apps login which basically has the same settings as the regular gmail and shit seems to work fine. Let me try using my @gmail.com account.\nBTW, Have you enabled two factor authentication on the gmail account that you are using. If yes, then you might have to generate an app specific password because the primary password will not log you in.\n. @cosminonnet configs depend on you mail server. All available options are listed in the readme.\n. @cosminonnet you might also want to look at previously resolved SMTP related issues https://github.com/sameersbn/docker-gitlab/issues?q=is%3Aissue+is%3Aclosed+smtp\n. @sharpner\nYou mean, It was working properly and then all of a sudden you got those messages?\np.s.  there is a helper command called app:sanitize that attempts to fix directory and file permissions. Just run the docker image in interactive mode -it and append app:sanitize to the command line.\n. @jk \n\nDo I have to set some new variables for the 7.4.0 release?\n\nLDAP_ACTIVE_DIRECTORY is the only new configuration option added for the 7.4.0 release. You might have to set it up correctly if the default true does not apply in your setup. But frankly I have no idea what effect this will have on the gitlab application when incorrectly setup.\n\n2014-10-23 18:33:00,675 WARN received SIGTERM indicating exit request\n\nThe supervisor log indicates that the container received the SIGTERM signal, which prompted it to bring down the container.\n\nThe backup task removed all 7.3.1(-3) backups\n\ngitlab automatically removes backups older than the GITLAB_BACKUP_EXPIRY configuration, which defaults to 7 days. So probably it is why the backups were deleted.\nNow back to the original problem. \n@jk @rtrauntvein  Can you guys disable LDAP and check if gitlab works? You might be able to login if you had setup a password for your account. This will at least help us figure out if this is caused by LDAP configuration.\nIn the meantime, I will review my LDAP configurations.\nP.S. Gitlabhq tweeted this about some LDAP error https://twitter.com/gitlabhq/status/525367255232970752\n. @jk @rtrauntvein just checked the gitlab issue tracker and it seems to be riddled with this issue. see https://gitlab.com/gitlab-org/gitlab-ce/issues/726 https://gitlab.com/gitlab-org/gitlab-ce/issues/719. They also have some temporary fixes to resolve the issue. You might find them useful.\nHopefully gitlabhq will release a hotfix for this soon until then check if the resolutions mentioned in the issues i linked above resolves the issue for you or switch back to 7.3.1 if you can and above all remain calm. \nFor reasons such as this the upgrade guide says:\n_If you are using the image in production environments I recommend that you delay updates by a couple of days after the gitlab release, allowing some time for the dust to settle down._\n. > supervisor output remains\nThat is the expected supervisor output. There are no more logs generated after that point.\n\nI tried that, but 7.3.1 crashes during launch, perhaps there was breaking changes in the database migration step\n\nYes, you would need to have the right database schema. You can try manually restoring the database from the backup that you created before upgrading to the 7.4.0 release. Meaning inside the backup tarball you will find db/database.sql, try restoring that manually using mysqldump or psql and then launching the 7.3.1-3 image. But first, please make a backup of the current database just in case it does not go as planned.\n\nrecent backup should have been max. 24 hours ago.\n\nSomething must have gone wrong i guess. There was a issue (#173) related to automatic backups creation. Maybe you were affected by that issue.\n. @hiddenmin what do you mean?\n. @hiddenmin automatic issue closing is enabled by default and uses the default issue_closing_pattern. I have not exposed an option for the user to specify a custom issue_closing_pattern regex. Is that what you need?\n. @hiddenmin are you sure its not enabled? I do not even configure that setting which enables it by default. If that is the case, please open an issue with upstream gitlab project\n. @sybeck2k I face no such issue when I follow the quick start guide.\n- What version of the image are you using? \n- Have you build the image locally or have you pulled it from the docker index?\n- Please provide the full docker logs\nPlease refer https://github.com/sameersbn/docker-gitlab#issues and provide the required information.\n. @UncertainSchrodinger please refer https://github.com/sameersbn/docker-gitlab/issues/190#issuecomment-60708597\n. @sybeck2k I launched the following commands in seperate terminal windows\nstart redis container\nbash\ndocker run -it --rm --name=redis1 sameersbn/redis:latest\nstart postgresql container\nbash\ndocker run -it --rm --name=postgresql1 \\\n-e 'DB_NAME=gitlabhq_production' \\\n-e 'DB_USER=gitlab' -e 'DB_PASS=password'  \\\nsameersbn/postgresql:latest\nstart gitlab container\nbash\n docker run -it --rm --name=gitlab1 \\\n-p 10080:80 -p 2222:22 \\\n--link redis1:redisio \\\n--link postgresql1:postgresql \\\nsameersbn/gitlab:latest\nThe output of gitlab container was:\nlog\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nWaiting for database server to accept connections...\nWaiting for database server to accept connections...\nSetting up GitLab for firstrun. Please be patient, this could take a while...\ngitlabhq_production already exists\nMigrating database...\nCompiling assets. Please be patient, this could take a while...\nCreating satellites...\nStarting supervisord...\n2014-10-28 14:45:29,024 CRIT Supervisor running as root (no user in config file)\n2014-10-28 14:45:29,024 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\n2014-10-28 14:45:29,024 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\n2014-10-28 14:45:29,024 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\n2014-10-28 14:45:29,025 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\n2014-10-28 14:45:29,025 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\n2014-10-28 14:45:29,049 INFO RPC interface 'supervisor' initialized\n2014-10-28 14:45:29,049 CRIT Server 'unix_http_server' running without any HTTP authentication checking\n2014-10-28 14:45:29,049 INFO supervisord started with pid 1\n2014-10-28 14:45:30,052 INFO spawned: 'sidekiq' with pid 394\n2014-10-28 14:45:30,054 INFO spawned: 'unicorn' with pid 395\n2014-10-28 14:45:30,055 INFO spawned: 'cron' with pid 396\n2014-10-28 14:45:30,057 INFO spawned: 'nginx' with pid 397\n2014-10-28 14:45:30,059 INFO spawned: 'sshd' with pid 398\n2014-10-28 14:45:31,919 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2014-10-28 14:45:31,919 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2014-10-28 14:45:31,919 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2014-10-28 14:45:31,919 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2014-10-28 14:45:31,919 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nFollowing which I was then able to login to gitlab @ http://localhost:10080\nWhat do you see when you do the same.\nI am using docker 1.3 on an updated ubuntu 14.04 desktop\n. > invoke-rc.d: policy-rc.d denied execution of restart.\nBTW, This message is normal and does not indicate any issue.\n. @pnelsonsr not sure what the issue is. But I recently updated the upgrade instructions. You need to use the 7.4.2 tag while taking the backup before upgrading. Please check if that fixes the issue.\n. @victort I am not sure what is wrong. It appears to me its complaining about the gitlab config file. You may have to wrap env variable values with a single quotes (or double quotes), especially password values since those can have special characters,  eg.\nconfig\n- DB_PASS='secretpassword'\nAdditionally certain characters may need to be escaped with '\\'. See https://github.com/sameersbn/docker-gitlab/issues/92#issuecomment-47646784 for additional details.\nHowever I would suggest you start with the minimal config and gradually add configs to identify the param that is causing the issue.\n. glad you got the issue resolved. cheers!\n. @xflash I would have prefered it if the parameters were named GITLAB_GRAVATAR_HTTP_URL and  GITLAB_GRAVATAR_HTTPS_URL which makes the distinction very clear.\nWhat do you guys think?\n. @rishid hmm.. It does not work for me either. When I type the emoji completion is displayed, once I select the emoji and commit the changes, no emoji is rendered, just the plain text. Will check if this is an issue with the image or an issue with gitlab. Thanks for letting me know.\nmessage to anyone else reading this comment: does anyone see emoji's working in the wiki and issues.\n. @rishid ok.. emoji's don't seem to work when you run gitlab on a non standard port say 10080 instead of 80 without a proxy server that routes trafic on port 80 on the host to port 10080 to the container. The href to the png's do note have the port part in the urls. This is not an issue with gitlab. But I don't know how I can handle this in the image. Maybe using relative urls should fix this. So will need to test this and open a PR with gitlab proper.\n. @VPusher this issue is similar to #218, but the causes are different. This problem should probably be resolved in upstream gitlab. I haven't had the chance to install gitlab locally (i.e. not using docker) so I cannot be 100% sure.\n. @VPusher @rishid Can you try with release 7.9.0. Gitlab has switched its emoji library in this release. Lets check if that resolved this issue. \n. @chenfz I think you mean -P for port. The -p flag is for password the password.\n-p, --password[=name] \n                      Password to use when connecting to server. If password is\n                      not given it's asked from the tty.\n  -P, --port=#        Port number to use for connection or 0 for default to, in\n                      order of preference, my.cnf, $MYSQL_TCP_PORT,\n                      /etc/services, built-in default (3306).\nI should probably add the -P option too.\n. @chenfz will take a look.\n. @chenfz Gitlab does not seem to work with password protected redis server. So this cannot be implemented for now. Closing the issue\n. @datajerk I am sorry for not replying to this issue earlier.\nI am not sure about using sendmail in the container where sendmail is configured on the host. Typically sendmail would be configured within the container (I may be wrong).  In rails when sendmail is used the mail delivery method should be changed to sendmail, where the action mailer configuration would look something like this\n``` ruby\nif Rails.env.production?\n  Gitlab::Application.config.action_mailer.delivery_method = :sendmail\nActionMailer::Base.sendmail_settings = {\n    location: '/usr/sbin/sendmail',\n    arguments: '-i -t'\n  }\nend\n```\nHowever I would like you to note that I could be wrong about sendmail being installed on another host and the container talking to the sendmail server over SMTP.\n. > @datajerk You can have a look to my image https://github.com/netflash/docker-exim4-gitlab\n\nFeel free to ask any questions in the project.\n\nWhat is this image for? Configuring an exim mail server? If yes, then you should drop the gitlab part.\nAnyways, I haven't tried it yet, but I have a couple of notes on your image\n1. You shouldn't do apt-get upgrade within a container, it goes against best practices.\n2. Use of DEBIAN_FRONTEND=noninteractive is also discouraged.\n3. Combine all apt-get install lines into a single or two apt-get install lines to install all required packages. Each RUN instruction will generate a new FS layer. So install all packages using a single apt-get install line will generate a simple FS layer.\nAs I have mentioned, I have not had the chance of checking out the image. I will try it out as soon as possible.\n. @almereyda works fine for me. can you try deleting the tmp directory from the data volume and restarting the container. This will recompile the assets. If this does not fix the issue, then I think it could be an issue with missing database schema. Maybe the migration did not complete. I cannot be sure though.\nedit: If this is a new install and the above does not work, then duke the database and start over.\n. @almereyda Were you able to resolve this issue?\n. @fetzerch Interesting PR. You might also want to update the ownership of files in /var/log/gitlab which are owned by the git user.\nPlease allow me some time to evaluate and test this PR. Thanks.\n. @fetzerch I tested this PR and it works fine. But there is one problem. Everytime the container is started, the \"Adapting uid:gid\" process takes place. If you have a large number of repos or repos with many files, this process takes a lot of time.\nFor the first launch the extra time taken to start the container is fine. But subsequent starts should not have this effect.\nObviously there is no good way to handle this automatically. So here's what I propose.\n- Keep changing of git users uid and gid part where it is.\n- Move the ownership setting part in the appSanitize function\n- Document the USERMAP_* option and indicate to users that they need to run the app:sanitize command the first time they start the image with the USERMAP_ options so that the files and directories have the correct ownerships.\nWhat do you think?\n. @fetzerch yes you are right everything except the contents of /home/git/data will have to be handled at runtime.\n. @fetzerch will review and let you know. thanks\n. @fetzerch sorry about not making the above suggestions earlier. I was to busy focussing on whether the feature worked and did not affect performance :smiley: \n. @fetzerch for the USERMAP_HOME variable we can define GITLAB_HOME=/home/git at the top of the script (before GITLAB_INSTALL_DIR=\"/home/git/gitlab\") and just use that variable instead of greping the /etc/passwd file.\n. @fetzerch cool. will give it one final test and merge.\n. @fetzerch I wanted to make sure this feature lands in time for the 7.5.0 release which is due on the 22nd.\n. @jks20 yep. such cases are not handled.\n. @jks20 could be added. There could technically be a security risk, but I think its highly unlikely. \n. @ninja-\n1. Assets are compiled on the first run or when the version changes or if the GITLAB_RELATIVE_URL_ROOT is changed. As long as a volume is mounted at /home/git/data and the gitlab version or relative_root is not changed, the assets will not be compiled.\n2.\n\nAny help? Should I keep whole /home/git? Thanks.\nNope, this will break everything.\n1. You docker run command specifies GITLAB_PORT=10080 and GITLAB_PORT=443. You only need to specify one of these and that should be for the SSL port. So GITLAB_PORT=443 should be the only one.\n2. Lastly, you need to publish the SSL port using -p 443:443. If the 443 port is already in use the you can specify a different port e.g. -p 10443:443 in which case you will need to update GITLAB_PORT=10443\n\nWith these changes, you command should look something like this:\nbash\ndocker run --name='gitlab' -it \\\n-p 10022:1122 -p 10080:80 -p 10443:443 \\\n-e 'GITLAB_HOST='www.example.com' \\\n-e 'GITLAB_EMAIL=gitlab@example.com' \\\n-e 'GITLAB_PORT=10443' -e 'GITLAB_SSH_PORT=10022' \\\n-e 'GITLAB_RELATIVE_URL_ROOT=/gitlab' \\\n-e 'GITLAB_HTTPS=true' -e 'SSL_SELF_SIGNED=true' \\\n-v /opt/gitlab/data:/home/git/data \\\n-v /var/run/docker.sock:/run/docker.sock -v $(which docker):/bin/docker sameersbn/gitlab:7.4.3\nWith these changes, accessing http://www.example.com:10080/gitlab will redirect to https://www.example.com:10443/gitlab\n. @ninja- \nPlease note:\nThe use of -v /var/run/docker.sock:/run/docker.sock -v $(which docker):/bin/docker option to start the postgresql and redis containers is only for quickstart purposes. You should manually create these containers and mount a volume for the postgresql container. Else you will lose data if the postgresql container is removed.\n. @ninja- If you are using a load balancer then your run command is alright. You only need to drop the GITLAB_PORT=10080 config and keep the GITLAB_PORT=443 option and yes you do not have to publish the 443 port. \nRegarding nginx load balancer configuration please refer to #165.\n\nLooking at \"docker ps -a\", these were created and mounted automatically.\n\nVolumes are mounted automatically by docker for these containers because of the VOLUME instruction in the image. If the container is stopped and removed, i.e.\nbash\ndocker stop postgresql-demo\ndocker rm postgresql-demo\nYou will lose all data stored in these containers.\n. @ninja- what is this?\n. @ninja- which file is this?\n. @ninja- in my local install \n``` bash\n$ cat /home/git/gitlab/public/422.html \n<!DOCTYPE html>\n\n\nThe change you wanted was rejected (422)\n\n\n\n This file lives in public/422.html \n422\n\nThe change you wanted was rejected.\nMaybe you tried to change something you didn't have access to.\n\n\n\n```\n. @ninja- if you think it is not correct, please open an issue with the upstream gitlab project.\n. Support for configuring gitlab at relative_url is supported and \ndocumented by upstream gitlab. Editing the error templates is not part \nof this configuration.\nIf you do think this is an error, you should open an issue request with \nthe upstream gitlab project.\nOn Monday 17 November 2014 03:18 PM, ninja- wrote:\n\nI still think these files should be patched based on\nGITLAB_RELATIVE_URL_ROOT...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/205#issuecomment-63280836.\n. @badsyntax We are correctly configuring HSTS in the nginx configs as user specifies them in the configs.However as you indicated, in the commit gitlab seems to be doing its own thing which I was not aware of. The HSTS config was contributed by another user and I am sure he had no idea that this was happening.\n\nHowever, it seems the way to fix it is to request gitlab upstream to drop their HSTS configs and allow the user to specify it in the nginx configs because it messes with installations where relative_url is used to host multiple applications on a domain.\nedit:\nElse we will have to patch gitlab ourself.\n. @msteinert Does starting sendmail and configuring the gitlab mailer to use sendmail get mails to work? If yes, then I have no issues adding sendmail to the image. I believe you updated the smtp_settings.rb file to configure gitlab to use sendmail.\nIf that gets mails to work then we can add a new parameter named SENDMAIL_ENABLED to use sendmail over smtp. With SENDMAIL_ENABLED option we can decide whether to start the sendmail daemon.\nThe recomended way of starting deamons is using supervisor. You should find supervisord configs in the install script. Everything in the image is started using supervisord. In the supervisord config for sendmail we will have to set autostart=false and in the init script will will need to make a sed substitution to change it to true if SENDMAIL_ENABLED=true. Additionally we will need to add some logic to make sure users specify either SENDMAIL_ENABLED=true or SMTP_ENABLED=true.\nedit:\nI always thought that sendmail had to be configured for it to be able to send mails.\n. @msteinert as long as the changes work for some users it will be ok. else supporting users will be a nightmare.\n. @msteinert should we close this issue?\n. @fbertux Please refer #121. Hopefully it will help you get this issue resolved. Most probably some env variables need to be escaped.\nYou can also access the shell of the running container docker exec -it gitlab bash and inspect the LDAP configuration in /home/gitlab/config/gitlab.yml. It should give you a clear indication if some variable need to be escaped while specifying it via the -e option.\n. @fbertux p.s. in you command you have added the -v /var/run/docker.sock:/run/docker.sock -v $(which docker):/bin/docker options. It is not required, since you are already linking postgresql and redis containers. Those options are more of a quick start thing.\nWhile adding those options are relatively harmless, it could pose a security risk.\n. @fbertux can you check with the LDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN option. This is set to false by default.\n\nWithout \"-v /var/run/docker.sock:/run/docker.sock -v $(which docker):/bin/docker\" gitlab doesn't start, the docker ps -a show \"Exited (1)\" on status.\n\nThis should not be the case. Can you send me the container log.\n. @fbertux what was the resolution for you ldap issue?\n. @fbertux cool. should we close this issue then?\n. @msteinert I have not yet tested this. However adding postfix to the image may not be the best solution. If sendmail communicates with the postfix server via sockets, then maybe there can be a seperate postfix container with a shared socket volume which sendmail client inside the gitlab container can use. I am not sure about all this, but I think we should evaluate these alternatives.\n. @msteinert installing an additional package so that we have the sendmail binary is ok. What I dont want is to perform the setup of postfix inside the container.\nDocker allows you to share volumes between containers. So my idea is to create a new container (possible postfix) or use an existing postfix container that mounts the postfix socket directory as a volume. From that point, simply adding --volumes-from to the docker run command will make the postfix socket available inside the gitlab container and sendmail would be able to communicate with the postfix server via the socket.\nThis idea can be illustrated using my mysql image\nbash\ndocker run --name=mysql -d sameersbn/mysql:latest\nThis starts a mysql server and also volume mounts /run/mysqld among other things. Now I can start another mysql container to connect to this mysql server using:\nbash\ndocker run -it --rm --volumes-from=mysql sameersbn/mysql:latest mysql -uroot\nThe mysql client will connect to the mysql server via the unix socket that gets shared because of the --volumes-from  docker flag\nI think the similar approach should be possible with postfix.\n. @pnelsonsr these messages are probably from the gitlab integration with fog.io. As of now I have not added any configuration options for this configuration. Until then you can manually specify the configuration using instructions from https://github.com/sameersbn/docker-gitlab/issues/51#issuecomment-41369496\n. @STOIE Nothing to fix here. Its just how bash handles the / character. It needs to be escaped eg. Australia\\/Sydney.\nP.S. You only need to specify Sydney as the timezone as per http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html\n. FYI, the GITLAB_TIMEZONE configuration only affects the gitlab application. cron jobs will continue using the default UTC timezone unless it is changed using the TZ environment variable, eg. TZ=Australia\\/Sydney. \n. @STOIE since 7.5.1 you would need to set both.\n. @stagingcq I have'nt tried using hooks before. I will try it out.\n. @ninja- it probably is an issue with gitlab upstream. However I would need more time to confirm.\n. @ninja- is there a issue report present on the gitlab tracker for this issue?\n. @ninja- can you update to the 7.6.0 and check if the issue still exists. Just in case it has been resolved upstream (fingers crossed)\n. @ninja- can you try with release 7.9.0. Gitlab have changed their emoji library. Could it have ended up resolving this issue?\n. @keigoi Thanks for the information.\nI am thinking of getting rid of the  -v /var/run/docker.sock:/run/docker.sock -v $(which docker):/bin/docker option from the quickstart guide and instead instruct users to just use fig.\nNote the mounting of the docker binary and socket are present to get the quickstart guide working for new users so that they can try out the image easily. In production, you should not use this method and instead use fig or manually start the required images with the required configuration.\n. for people seeing this issue, can you try the following command and let me know the result\nbash\ndocker run -it --rm \\\n-v /var/run/docker.sock:/run/docker.sock \\\n-v $(which docker):/bin/docker \\\n-v $(ldconfig -p | grep 'libdevmapper.so.1.02' | awk '{print $4}'):/usr/lib/libdevmapper.so.1.02 \\\nubuntu:trusty docker ps\n. @keigoi if the above does not work for you on centos 6.6, the you might have to modify the command to\nbash\ndocker run -it --rm \\\n-v /var/run/docker.sock:/run/docker.sock \\\n-v $(which docker):/bin/docker \\\n-v $(ldconfig -p | grep 'libdevmapper.so.1.02.1' | awk '{print $4}'):/usr/lib/libdevmapper.so.1.02.1 \\\nubuntu:trusty docker ps\n. volume mounting the docker binary and socket in the quick start guide has been replaced with manually start of postgresql and redis images or using docker-compose to orchestrate the startup.\n. @sajt gmail requires login authentication, i.e. SMTP_AUTHENTICATION=login. Also, you need to make sure POP access is enabled for the gmail account. You can find this in the gmail settings.\n. @sajt is this the correct email address email@gmail.com ?\n. @sajt It looks like the mail delivery is being aborted for some reason. It looks like no attempt is being made to perform the mail delivery. You can look up the production.log and sidekiq.log\n. @sajt nope. the file should have the smtp configuration. I think you need to stop the gitlab container and remove it before doing fig up again.\n. @sajt fig reuse's stopped containers. Meaning fig up will create the required container. fig down will stop the containers that were started. Doing fig up again, reuses the containers that were created in the first fig up.\nSo it appears that the configuration changes that are done in fig.yml are not updated when fig up is executed the second time.\n. @sajt I myself have'nt used fig extensively.\n. @hydra1983 looks like connection to the database server is not happening. You should see the message \"Could not connect to database server. Aborting...\". But if you don't see it, then maybe the output is not being flushed.\nAnyways, looking at the number of .'s I can confirm that the connection to the database is failing. This could be because of various reasons:\n- database server is not running\n- invalid host/port or invalid username/password, etc.\n. @hydra1983 There are two possible reasons for this\n- you need to have a newer version of the mysql image. Try pulling the latest image from the docker index docker pull sameersbn/mysql:latest and retry.\n- the DB_USER, DB_PASS and DB_NAME arguments have to be present each time you start the mysql image.\n. @datajerk gitlabhq has support for fog.io to copy the backups to local (cp) or remote locations (rsync, s3). This is a relatively new feature and I have not added options for these yet. Now I have setup a NAS server with rsync, so I should be able to test this feature. This will however take a while.\nUntil then if you are eager to have this feature all you need to do is override the gitlab configurations. Please refer to https://github.com/sameersbn/docker-gitlab/issues/51#issuecomment-41369496 for how this can be achived.\n. @stephencooke at the moment only uploading to a AWS bucket is configurable. However, you can manually override the gitlab.yml configuration stated in my previous comment.\n. @datajerk sorry for not responding earlier. I am on travel. Please follow @nopnop advise and let us know.\n. @datajerk However, bear in mind that you will not be able to perform a restore operation with a backup that was created with different version of gitlab. This limitation is something that gitlab imposes.\nThis means you will have to manually hack your way to get things resolved.\n1. manually backup your data volume\n2. manually back up your gitlab database\n3. extract the contents of the gitlab backup tarball. You will find the repositories, uploads and database dump.\n4. delete the gitlab-satellites, repositories, uploads and tmp directories from the existing data volume.\n5. copy the repositories and uploads directories from the backup directory to the data volume\n6. restore the database dump from the backup to the database server.\n7. time to start the image.\n   7a. First time run the image with the app:sanitize option so that all directories have the right permissions\n   7b. Next, run the image with the app:rake gitlab:satellites:create option to re-create the satellites directory.\n  7c. Finally start the image normally, and check if everything is a-ok.\n. @datajerk  no need to restore a backup while updating to newer version.\n. @lucas-clemente this is some problem with libssl package in ubuntu. I had the same issue a while back and had found some online resources to fix it, which if i remember correctly required compiling libssl from source.\nI avoided compiling libssl from source for various reasons, I just decided to wait it out hoping that the issue would automatically be resolved when ubuntu/debian updates the libssl package. So far it seems like it has not been the case.\n. I will try to look it up and let you know.\nOn Friday 02 January 2015 07:49 PM, Lucas Clemente wrote:\n\nThanks for your reply! I couldn't find anything on openssl / nginx and\nthe quoted error message, do you maybe still remember where you read\nsomething about it?\nSomehow I don't understand how it can be a problem with libssl though.\nAs I wrote above, the TLS connection is terminated from nginx running\n/directly on the docker host/, proxying to the gitlab docker container.\nHowever, the |Permission denied| error appears on the nginx proxy\nrunning /inside the container/. But then again, I might just be\nmisinterpreting things ;)\nHappy new year!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/226#issuecomment-68529164.\n. @lucas-clemente I was checking this issue today and found that the git process prematurely gives up on large repos. \n\n``` bash\ngit clone https://git.example.com/opensource/openwrt.git\nCloning into 'openwrt'...\nremote: Counting objects: 290509, done.\nremote: Compressing objects: 100% (79939/79939), done.\nerror: RPC failed; result=56, HTTP code = 200MiB | 8.62 MiB/s \nfatal: The remote end hung up unexpectedly\nfatal: early EOF\nfatal: index-pack failed\n```\nThis happens on both http and https urls. Worth nothing is that it works sometimes. Next I tried connecting directly to the containers http port\n``` bash\ngit clone http://$(docker inspect --format {{.NetworkSettings.IPAddress}} gitlab)/opensource/openwrt.git -v\nCloning into 'openwrt'...\nPOST git-upload-pack (240 bytes)\nremote: Counting objects: 290509, done.\nremote: Compressing objects: 100% (79939/79939), done.\nremote: Total 290509 (delta 198066), reused 289751 (delta 197308)\nReceiving objects: 100% (290509/290509), 106.91 MiB | 20.02 MiB/s, done.\nResolving deltas: 100% (198066/198066), done.\nChecking connectivity... done.\n```\nAnd had no problems cloning using the git http clone url. Maybe you can give it a shot as well. If you see this behaviour as well, then it appears that there would be some configuration required at the reverse proxy.\nI found the following reports of the same issue \n- https://github.com/gitlabhq/gitlabhq/issues/6832\n- https://gitlab.com/gitlab-org/gitlab-ce/issues/232\n. @ulrichSchreiner does increasing the memory settings on unicorn fix the issue?\n. @ulrichSchreiner cool. will try out your changes and make the changes as required. thanks\n. @ulrichSchreiner shit just got complicated :laughing: \n. @smoebody I was trying to reproduce this issue recently to test a probable fix. However I was not able to reproduce the issue. Can you try a fix for me.\n1. Login to the running gitlab container docker exec -it gitlab bash\n2. Edit /etc/nginx/sites-enabled/gitlab server block to replace\nnginx\nupstream gitlab {\n  server unix:/home/git/gitlab/tmp/sockets/gitlab.socket fail_timeout=0;\n}\nwith\nnginx\nupstream gitlab {\n  server 127.0.0.1:8080 fail_timeout=0;\n}\n1. Stop the nginx server supervisorctl stop nginx\n2. Start the nginx server supervisorctl start nginx\n3. Try cloning via http/https clone url\n4. Let me know if it fixes the issue.\n5. If you are able to clone, test many more times to be absolutely sure. Because when I was seeing this issue it was hit or miss. It would work sometimes and would fail other times.\nIf this does not resolve the issue, revert the above changes and try the changes from PR #269. You only need to make the changes to /etc/nginx/sites-enabled/gitlab where you want to set the following options in the nginx configuration\nnginx\nadd_header X-Accel-Buffering no;\nproxy_buffering off;\nRefer to the PR for the appropriate place to insert these settings in the nginx configuration. Once you have these changes in place stop and start the nginx server the same way as described above, i.e. steps 3 and 4.\nLet me know  the results.\n. @smoebody fyi, supervisorctl status will let you know if all the daemons are running\n. @smoebody did you try the second fix?\n. @smoebody ok.. can you revert the first fix and apply the second fix and let me know if resolves the issue as well?\n. @ahmet2mir This should rather be done in the init script. Please update and resend PR.\n. These look like selinux issues. Please check your selinux configuration. \nA quick google search should allow you to fix this issue.\nOn Friday 02 January 2015 06:32 PM, kumm wrote:\n\nOf course in these cases the page does not load. But after a page reload\nsome of them magically start to work without any error.\nA few example for this:\n|2015/01/02 12:01:37 [alert] 319#0: 4 readv() failed (13: Permission denied) while reading upstream, client: 192.168.57.57, server: gitlab.wcs.local, request: \"GET / HTTP/1.1\", upstream: \"http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/\", host: \"gitlab.wcs.local\", referrer: \"http://gitlab.wcs.local/\"\n2015/01/02 12:11:57 [alert] 288#0: 79 readv() failed (13: Permission denied) while reading upstream, client: 192.168.57.57, server: gitlab.wcs.local, request: \"GET /help/workflow/notifications.md HTTP/1.1\", upstream: \"http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/help/workflow/notifications.md\", host: \"gitlab.wcs.local\", referrer: \"http://gitlab.wcs.local/help/workflow/README.md\"\n|\nI have a lot of permanent errors too. They all refer to images. Some\nexample:\n|2015/01/02 12:08:06 [alert] 288#0: 44 readv() failed (13: Permission denied) while reading upstream, client: 192.168.57.57, server: gitlab.wcs.local, request: \"GET /help/workflow/ci_mr.png HTTP/1.1\", upstream: \"http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/help/workflow/ci_mr.png\", host: \"gitlab.wcs.local\", referrer: \"http://gitlab.wcs.local/help/workflow/gitlab_flow.md\"\n2015/01/02 12:08:06 [alert] 288#0: 60 readv() failed (13: Permission denied) while reading upstream, client: 192.168.57.57, server: gitlab.wcs.local, request: \"GET /help/workflow/git_pull.png HTTP/1.1\", upstream: \"http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/help/workflow/git_pull.png\", host: \"gitlab.wcs.local\", referrer: \"http://gitlab.wcs.local/help/workflow/gitlab_flow.md\"\n2015/01/02 12:08:06 [alert] 288#0: *69 readv() failed (13: Permission denied) while reading upstream, client: 192.168.57.57, server: gitlab.wcs.local, request: \"GET /help/workflow/messy_flow.png HTTP/1.1\", upstream: \"http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/help/workflow/messy_flow.png\", host: \"gitlab.wcs.local\", referrer: \"http://gitlab.wcs.local/help/workflow/gitlab_flow.md\"\n|\nI've checked the file permissions inside the container, but can't find\nany problem. All failing files owned by \"git.git\" .\nMy fig.yml file:\n|gitlab:\n   image: sameersbn/gitlab:7.6.2\n   hostname: gitlab\n   domainname: wcs.local\n   environment:\n     - DB_NAME=gitlab\n     - DB_USER=gitlab\n     - DB_PASS=*\n     - GITLAB_HOST=gitlab.wcs.local\n     - GITLAB_TIMEZONE=Budapest\n     - GITLAB_EMAIL=\n     - GITLAB_SIGNUP=true\n     - SMTP_HOST=\n     - SMTP_PORT=25\n     - SMTP_STARTTLS=false\n     - SMTP_USER=\n     - SMTP_PASS=****\n   volumes:\n     - /mnt/data/gitlab/data:/home/git/data\n     - /mnt/data/gitlab/log:/var/log/gitlab\n   links:\n     - redis:redisio\n     - postgresql:postgresql\nredis:\n   image: redis:2.8\n   volumes:\n     - /mnt/data/gitlab/redis:/data\npostgresql:\n   image: postgres:9.3\n   environment:\n    - POSTGRES_USER=gitlab\n    - POSTGRES_PASSWORD=****\n   volumes:\n    - /mnt/data/gitlab/postgres:/var/lib/postgresql/data\n|\nI've assigned the hostname in my dns to the container's ip address, and\ni connect to it's web port directly.\nAny ideas what can I check?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/229.\n. @kumm sorry about my earlier reply. this might not be related to selinux. Here gitlab is basically starting up. You should allow it some time to get ready to server requests.\n. @kumm I used the following fig.yml file, added a entry in /etc/hosts for the gitlab.wcs.local domain pointing to the container ip address and had no issues accessing http://gitlab.wcs.local\n\n``` yaml\ngitlab:\n  image: sameersbn/gitlab:latest\n  hostname: gitlab\n  domainname: wcs.local\n  environment:\n    - DB_NAME=gitlabhq_production\n    - DB_USER=gitlab\n    - DB_PASS=secretpass\n    - GITLAB_HOST=gitlab.wcs.local\n    - GITLAB_TIMEZONE=Budapest\n    - GITLAB_SIGNUP=true\n  volumes:\n    - /tmp/gitlab/data:/home/git/data\n    - /tmp/gitlab/log:/var/log/gitlab\n  links:\n    - redis:redisio\n    - postgresql:postgresql\nredis:\n  image: sameersbn/redis:latest\n  volumes:\n    - /mnt/data/gitlab/redis:/data\npostgresql:\n  image: sameersbn/postgresql:latest\n  environment:\n   - DB_NAME=gitlabhq_production\n   - DB_USER=gitlab\n   - DB_PASS=secretpass\n  volumes:\n   - /tmp/gitlab/postgres:/var/lib/postgresql/data\n``\n. @kumm p.s. I am using docker 1.4.1 on ubuntu 14.04\n. @kumm can you add the host entry in/etc/hosts` on the host and try.\n. @kumm just realized that i don't see those images loading as well.\n. @kumm since the images work on gitlab.com i thought it could be an issue with my nginx configs.\nthanks for confirming that this was an issue in the gitlab upstream. gitlab.com runs of off the master thats why it is probably working there.\n. @jonaskac yes. it is possible to add the option.\n. @xeno1991 custom branding is a Gitlab EE feature. Given which I don't think GitLabHQ will appreciate adding this feature.\n. @StreakyCobra The image already supports what you are trying to achieve. Basically you need to set the GITLAB_PORT to 443. This setting does not configure the internal listening port. It soft of indicates on which public port the server is accessible, which in your case is 443.\nTo clarify things, consider the setup.\n| user |   -- 443 -->   | apache proxy |  --10080-->  | gitlab |\nIn this setting you should launch the gitlab container with the following parameters\n-p 10080:80 -e 'GITLAB_PORT=443' additionally you should set GITLAB_HTTPS=true for HTTPS support.\nIn this case you also don't need to run gitlab at a relative url so long as you can setup a new subdomain.\n. @fye please share docker run command.\n. @fye can you please try @so0k's solution\n. @fye I can confirm that I can reproduce your issue and also confirm that @so0k's suggestion resolves it. I am closing the issue for now. If you still have issues, please reopen.\n. @so0k thats right. You need to increase the NGINX_MAX_UPLOAD_SIZE for large objects.\n. @fye You can specify this value using -e 'NGINX_MAX_UPLOAD_SIZE=200M' while starting the container.\n. @so0k If you use the --env-file option to setup the environment parameters, then you can simply update the file with the new environment and stop/start the container.\nApart from this there is no other way to apply changes in the environment.\n. @so0k FWIW, here is the systemd service configuration that I use for one of my install which works even if the container has not been previously created. I guess it can be better, but for now it should suffice.\n```\n[Unit]\nDescription=Gitlab container\nRequires=docker.service\nAfter=docker.service redis.service postgresql.service\n[Service]\nRestart=always\nRestartSec=10\nExecStartPre=-/usr/bin/docker kill gitlab\nExecStartPre=-/usr/bin/docker rm gitlab\nExecStart=/usr/bin/docker run --name=gitlab [OPTIONS] sameersbn/gitlab:7.6.2\nExecStop=/usr/bin/docker stop -t 15 gitlab\n[Install]\nWantedBy=multi-user.target\n```\nOriginally I tried to port my upstart script to systemd, but could'nt get the docker start -a gitlab || docker run --name gitlab working.\n```\ndescription \"gitlab\"\nauthor \"Sameer Naik\"\nstart on (started docker and started postgresql and started redis)\nstop on runlevel [!2345]\nrespawn\npre-start script\n  sleep 3\nend script\nscript\n  /usr/bin/docker start -a gitlab || \\\n    /usr/bin/docker run --name='gitlab' [OPTIONS] sameersbn/gitlab:7.6.2\nend script\npre-stop exec /usr/bin/docker stop -t 15 gitlab\n```\n. @yely I see that your system has a total memory of 490 MiB. GitlaB itself requires a minimum of 1GB of available memory. \n. @faradaytrs It appears like there is some character in one of the emvironment variables that might need to be escaped, due to which one of the sed substitutions is failing. The password variables are generally the culprits in this case.\nPlease refer to #92 for additional information\n. @faradaytrs any update on this?\n. @faradaytrs got it. i will check it locally to make sure its not broken.\n. @faradaytrs seems to be working fine using the docker cli. Maybe the issue occurs while using fig.\n. @siuying can you try SMTP_PASS=abc\\/1234\n. @siuying oh sorry that will probably not work. you might have to change the password to not have the / character.\n. @siuying sure. if we can fix this to handle all characters there would be nothing like it. before you submit a PR, please suggest your fix.\n. @andycmaj have you tested the backup operation when user does not configure remote backup.\n. @Jack12816 there is some issue with the docker hub. Docker Inc has indicated that they have applied a hotfix to resolve the issue.\nTrying to rebuild now.\n. @Jack12816 The build is now ready\n. @flecno can you try running the container with the app:sanitize argument first. Just run the container in interactive mode and append app:sanitize to the command line. Once completed, launch the container without the app:sanitize option.\nIf there is some file/directory permission issue app:sanitize will fix it.\n. @xeno1991\n- does gitlab list all of your projects? If yes, then the database connection is fine.\n- after the container is started, gain access to the shell of the container docker exec -it gitlab bash and inspect the contents of /home/git/data/repositories. Are all your repositories listed in there? If not then it would mean that the correct data volume is not mounted. In which case you would need to edit your fig.yml file to mount /opt/gitlab/data/repositories at /home/git/data. Assuming that this already is the case, then maybe the gitlab container was started before the /opt partition was mounted by the host.\nedit:\nadditionally you can also inspect the paths of the volumes mounted using docker inspect gitlab\n. @siuying there is a sub command named app:sanitize and is the preferred way of fixing file and directory permissions. That being said the issue faced by @xeno1991 is that the /home/git/data volume was not pointing to the right location in the first place, while means the error \"The repository for this project does not exist\" was in fact true.\n. @apeltzer are you able to clone the repos?\n. @apeltzer ok great to hear that the issue no longer exists :wink: \n. @siuying generally speaking you should not have to run app:sanitize. If you have to run it, it means that something or someone changed the permissions of the data volume contents. \n. I have to update the readme to indicate this option\nOn Friday 10 July 2015 09:23 PM, Francis Chong wrote:\n\n@sameersbn thanks! I could not think anything that might have changed the permissions, but I'd try to see if I can reproduce this.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/sameersbn/docker-gitlab/issues/244#issuecomment-120442730\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. @charles-plessy the repositories should reside in /srv/docker/gitlab/gitlab/repositories on the host. The images does not make any changes to this directory by itself. If this directory or /srv/docker/gitlab/gitlab is empty it probably indicates something wrong when you first setup the image. If at all you had enabled automatic backups and can find the backups in /srv/docker/gitlab/gitlab/backups then you can try restoring a backup.\n. @pozgo p.s. launching the container with app:sanitize argument will fix the permissions of files and directories as required by gitlab.\n. @zipeldiablo please share your setup details. Additionally provide a sample docker command line to test this case out.\nMail sending should work provided it is configured correctly.\n. @zipeldiablo I tested pushing a repo containing 50992 files and folders amounting to 2.6G of storage space and had no problem. But before I list out my test commands, I would like to mention that if you are using a reverse proxy then you should configure the upload limits on the reverse proxy as well. If this is the case than the proxy itself will not forward the request to the gitlab container. I strongly believe this is the problem.\nContinuing with my test, here are the test commands I used\n``` bash\nstart mysql container\ndocker run -it --name=mysql \\\n-e 'DB_USER=gitlab' -e 'DB_PASS=password' -e 'DB_NAME=gitlabhq_production' \\\nsameersbn/mysql:latest\nstart redis container\ndocker run -it --rm --name=redis sameersbn/redis:latest\nstart gitlab container\ndocker run -it --rm \\\n--link mysql:mysql --link redis:redisio \\\n-p 10080:80 -p 2222:22 \\\n-e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=2222' \\\n-e 'NGINX_MAX_UPLOAD_SIZE=1g' \\\nsameersbn/gitlab:latest\nlogin to gitlab and create a project for the push\npush largerepo\ncd largerepo\ngit remote add origin http://localhost:10080/root/largerepo.git\ngit push -u origin master\n``\n. @elderone unless the ssl certificates are installed nginx will not be configured to listen on port 443 https://github.com/sameersbn/docker-gitlab/blob/master/assets/init#L319-L330. However the gitlab application will be configured to support SSL and this is to support case's where the gitlab container is running behind an SSL enabled proxy.\n. @LnAlex what is your host OS? I have a feeling this has got something to do with selinux.\n. @LnAlex can you enter the verbose mode while connecting to the server via sshssh -v localhost -p 10022`. Hopefully it will give you some idea on what is going on.\nIMO possible causes could be:\n- selinux\n- firewall configuration\nBasically it looks like some security policy is preventing the communication. \nAt the moment I am not in the position to install debian 7 and test the issue. Hopefully someone who has the image working on debian 7 could chime in.\n. @netflash @LnAlex maybe you guys can share the docker version in use?\n. @LnAlex why don't you try connecting directly to the containers ssh post, \nbash\nssh $(docker inspect --format {{.NetworkSettings.IPAddress}} gitlab)\nIf this works, then probably the iptables configuration is busted. Try adding the iptables rules listed here https://github.com/sameersbn/docker-gitlab/issues/253#issuecomment-73076889. Hopefully it should get this issue sorted.\n. @minus7 @Jack12816 interesting. will think of a  solution to fix this issue.\n. It is clear that various postgresql versions do not play nice with each other. In such a scenario, installing various postgresql client versions in the  gitlab image to handle with these incompatibilities is not a viable solution.\nSo this basically means that at the moment the gitlab image is compatible will postgresql 9.3 and below. I guess updating the postgresql client libraries to the latest postgresql version should resolve this issue.\n. @minus7 @Jack12816 looks like postgresql clients are backwards compatible, so using postgresql client version 9.4 resolves this issue without breaking anything.\n. @minus7 @Jack12816 looks like postgresql clients are backwards compatible, so using postgresql client version 9.4 resolves this issue without breaking anything.\n. @sammko you need to fix it at the proxy. There are no changes required in the gitlab container.\n. @sammko you need to fix it at the proxy. There are no changes required in the gitlab container.\n. @sammko Here is the nginx proxy configuration I use and have no such issues \n``` nginx\nupstream gitlab {\n  server                    172.17.42.1:10080 fail_timeout=0;\n}\nlet gitlab deal with the redirection\nserver {\n  listen                    80;\n  server_name               git.example.com;\n  server_tokens             off;\n  root                      /dev/null;\n# Increase this if you want to upload larger attachments\n  client_max_body_size      20m;\n# individual nginx logs for this vhost\n  access_log                /var/log/nginx/gitlab_access.log;\n  error_log                 /var/log/nginx/gitlab_error.log;\nlocation / {\n    proxy_read_timeout      300;\n    proxy_connect_timeout   300;\n    proxy_redirect          off;\nproxy_set_header        X-Forwarded-Proto $scheme;\nproxy_set_header        Host              $http_host;\nproxy_set_header        X-Real-IP         $remote_addr;\nproxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header        X-Frame-Options   SAMEORIGIN;\n\nproxy_pass              http://gitlab;\n\n}\n}\nserver {\n  listen                    443   ssl spdy;\n  server_name               git.example.com;\n  server_tokens             off;\n  root                      /dev/null;\n## Increase this if you want to upload larger attachments\n  client_max_body_size      20m;\n## SSL\n  ssl                       on;\n## Individual nginx logs for this vhost\n  access_log                /var/log/nginx/gitlab_ssl_access.log;\n  error_log                 /var/log/nginx/gitlab_ssl_error.log;\nlocation / {\n    ## If you use https make sure you disable gzip compression\n    ## to be safe against BREACH attack.\n    gzip                    off;\nproxy_read_timeout      300;\nproxy_connect_timeout   300;\nproxy_redirect          off;\n\nproxy_set_header        Host                $http_host;\nproxy_set_header        X-Real-IP           $remote_addr;\nproxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;\nproxy_set_header        X-Forwarded-Proto   https;\nproxy_set_header        X-Frame-Options     SAMEORIGIN;\n\nproxy_pass http://gitlab;\n\n}\n}\n```\nI hope this helps.\n. @sammko Here is the nginx proxy configuration I use and have no such issues \n``` nginx\nupstream gitlab {\n  server                    172.17.42.1:10080 fail_timeout=0;\n}\nlet gitlab deal with the redirection\nserver {\n  listen                    80;\n  server_name               git.example.com;\n  server_tokens             off;\n  root                      /dev/null;\n# Increase this if you want to upload larger attachments\n  client_max_body_size      20m;\n# individual nginx logs for this vhost\n  access_log                /var/log/nginx/gitlab_access.log;\n  error_log                 /var/log/nginx/gitlab_error.log;\nlocation / {\n    proxy_read_timeout      300;\n    proxy_connect_timeout   300;\n    proxy_redirect          off;\nproxy_set_header        X-Forwarded-Proto $scheme;\nproxy_set_header        Host              $http_host;\nproxy_set_header        X-Real-IP         $remote_addr;\nproxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header        X-Frame-Options   SAMEORIGIN;\n\nproxy_pass              http://gitlab;\n\n}\n}\nserver {\n  listen                    443   ssl spdy;\n  server_name               git.example.com;\n  server_tokens             off;\n  root                      /dev/null;\n## Increase this if you want to upload larger attachments\n  client_max_body_size      20m;\n## SSL\n  ssl                       on;\n## Individual nginx logs for this vhost\n  access_log                /var/log/nginx/gitlab_ssl_access.log;\n  error_log                 /var/log/nginx/gitlab_ssl_error.log;\nlocation / {\n    ## If you use https make sure you disable gzip compression\n    ## to be safe against BREACH attack.\n    gzip                    off;\nproxy_read_timeout      300;\nproxy_connect_timeout   300;\nproxy_redirect          off;\n\nproxy_set_header        Host                $http_host;\nproxy_set_header        X-Real-IP           $remote_addr;\nproxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;\nproxy_set_header        X-Forwarded-Proto   https;\nproxy_set_header        X-Frame-Options     SAMEORIGIN;\n\nproxy_pass http://gitlab;\n\n}\n}\n```\nI hope this helps.\n. @sammko were you able to resolve this issue?\n. @sammko were you able to resolve this issue?\n. @sammko well I use gitlab with ssl and have no problems with gravatar urls not being https. Have you set GITLAB_HTTPS to true?\n. @sammko well I use gitlab with ssl and have no problems with gravatar urls not being https. Have you set GITLAB_HTTPS to true?\n. i'm glad you guys like my work. thanks.\n. i'm glad you guys like my work. thanks.\n. @adamlc that's right. gitlab inside docker makes upgrades a breeze. Planning of adding similar functionality to my redmine image.\n. @adamlc that's right. gitlab inside docker makes upgrades a breeze. Planning of adding similar functionality to my redmine image.\n. @xeor you are correct.\n. @xeor you are correct.\n. @xeor i seemed to have missed so of the redirections. now fixed.\n. @xeor i seemed to have missed so of the redirections. now fixed.\n. @gionn sshd inside the gitlab image listens on port 22 only. This is not changed when you set GITLAB_SSH_PORT. The GITLAB_SSH_PORT indicates on which port the SSH server is accessible to the outside world.\nThis works fine when the default docker networking is used. With host networking, however, this is bound to fail when port 22 or other ports like 80 or 443 are in use.\nThe question is whether the listening ports of the ssh and nginx servers should reflect the GITLAB_PORT and GITLAB_SSH_PORT configuration. This is easy to achieve, but would require a lot of testing to make sure nothing breaks.\nThe only other alternative  is to not use host networking. I understand using host networking for some applications, but why do you want to use host networking with the gitlab image?\n. @gionn i was able to get around that by adding the following rules.\nbash\n-A POSTROUTING -s 172.17.0.0/24 ! -d 172.17.0.0/24 -j MASQUERADE\n-A POSTROUTING -s 172.17.42.0/24 ! -d 172.17.42.0/24 -j MASQUERADE\n. @gionn before adding these rules the rules added by docker used to get flushed everytime i made some changes to my firewall config. This is now no longer the case. I hope this helps\n. Looks like a DNS resolution error. Please check your DNS configuration. \nOn Friday 06 February 2015 10:27 PM, Georgy wrote:\n\nTried several ways starting gitlab container with linked redis and\npostgres instances.\nSo, started redis:\n|\ndocker run --name=redis -d sameersbn/redis:latest\n|\nthen postgres\n|   docker run --name=postgresql -d \\\n   -e 'DB_NAME=gitlabhq_production' -e 'DB_USER=gitlab' -e 'DB_PASS=c8AsHg8KYCjTo' \\\n   -v /opt/postgresql/data:/var/lib/postgresql \\\n   sameersbn/postgresql:latest\n|\nand finally:\n|docker run --name=gitlab -d \\\n   -v /opt/gitlab/data:/home/git/data \\\n   --link redis:redisio \\\n   --link postgresql:postgresql \\\n   -e 'GITLAB_PORT=10080' \\\n   -e 'GITLAB_SSH_PORT=10022' \\\n   -e 'GITLAB_HOST=git.domain.com' \\\n   -e 'GITLAB_EMAIL=gitlab@domain.com' \\\n   -e 'GITLAB_SUPPORT=gitlab@domain.com' \\\n   -e 'SMTP_USER=domain@gmail.com' \\\n   -e 'SMTP_PASS=[screened]' \\\n   -e 'GITLAB_BACKUPS=daily' \\\n   -e 'GITLAB_BACKUP_EXPIRY=604800' \\\n   -p 10022:22 -p 10080:80 sameersbn/gitlab:latest\n|\nThen created new user and got this in sidekiq.log:\n|2015-02-06T16:36:21Z 303 TID-5rn64 INFO: Starting processing, hit Ctrl-C to stop\n2015-02-06T16:44:47Z 303 TID-8kuac Sidekiq::Extensions::DelayedMailer JID-cf023822088cdeba1d6db781 INFO: start\n2015-02-06T16:44:47Z 303 TID-8kuac Sidekiq::Extensions::DelayedMailer JID-cf023822088cdeba1d6db781 INFO: fail: 0.238 sec\n2015-02-06T16:44:47Z 303 TID-8kuac WARN: {\"retry\"=>true, \"queue\"=>\"default\", \"class\"=>\"Sidekiq::Extensions::DelayedMailer\", \"args\"=>[\"---\\n- !ruby/class 'Notify'\\n- :new_user_email\\n- - 2\\n - Fsy8kMxDrEAgjoFPsBBh\\n\"], \"jid\"=>\"cf023822088cdeba1d6db781\", \"enqueued_at\"=>1423241084.138529, \"error_message\"=>\"getaddrinfo: Name or service not known\", \"error_class\"=>\"SocketError\", \"failed_at\"=>1423241087.3542118, \"retry_count\"=>0}\n2015-02-06T16:44:47Z 303 TID-8kuac WARN: getaddrinfo: Name or service not known\n2015-02-06T16:44:47Z 303 TID-8kuac WARN: /usr/lib/ruby/2.1.0/net/smtp.rb:541:in initialize'\n/usr/lib/ruby/2.1.0/net/smtp.rb:541:inopen'\n/usr/lib/ruby/2.1.0/net/smtp.rb:541:in tcp_socket'\n/usr/lib/ruby/2.1.0/net/smtp.rb:551:inblock in do_start'\n/usr/lib/ruby/2.1.0/timeout.rb:91:in block in timeout'\n/usr/lib/ruby/2.1.0/timeout.rb:101:incall'\n/usr/lib/ruby/2.1.0/timeout.rb:101:in timeout'\n/usr/lib/ruby/2.1.0/net/smtp.rb:550:indo_start'\n/usr/lib/ruby/2.1.0/net/smtp.rb:520:in start'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail-2.5.4/lib/mail/network/delivery_methods/smtp.rb:112:indeliver!'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail-2.5.4/lib/mail/message.rb:2129:in do_delivery'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail-2.5.4/lib/mail/message.rb:232:inblock in deliver'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/actionmailer-4.1.1/lib/action_mailer/base.rb:527:in block in deliver_mail'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.1/lib/active_support/notifications.rb:159:inblock in instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.1/lib/active_support/notifications/instrumenter.rb:20:in instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.1/lib/active_support/notifications.rb:159:ininstrument'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/actionmailer-4.1.1/lib/action_mailer/base.rb:525:in `deliver_mail'\n|\npop and smtp enabled for all addresses and using standard pass for gmail\naccount if it's important)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/254.\n. @gkostyanikov any update on this? Please close the issue if you got the issue resolved.\n. @pkallberg This is probably because the permissions of the tmp directory were changed. Normally nothing like this will happen unless you manually change the ownership/permissions of the tmp directory or the data directory for that matter.\n\nI recommend you run the container again in interactive mode with the app:sanitize command to make sure all files and folders have the correct permissions to avoid any problems\n. @pkallberg dude! you do not run this command on a fresh container. You run it only when you want to fix ownership/permissions issues on existing installation when something goes wrong. What you are doing here is asking the init script to fix permissions on a unpopulated data volume.\nP.S. the recommended way of launching the app:sanitize command is:\nbash\ndocker run -it --rm [OPTIONS] sameersbn/gitlab:7.7.2 app:sanitize\n. @pkallberg the log indicates that you are running the container for the first time. In this case you do not need to use the app:sanitize option. Launch simply using \nbash\ndocker run -it --rm -e DB_HOST='xxx.xxx.xx.xxx' -e DB_NAME='xxx' -e DB_PASS='xxx' -e DB_TYPE='mysql' -e DB_USER='xxx' -e REDIS_HOST='xxx' -e REDIS_PORT='xxx' -e GITLAB_PORT='10080' -e GITLAB_SSH_PORT='10022' sameersbn/gitlab:7.7.2\nIf you still have issue, please check if the following works\n``` bash\nstart mysql container\ndocker run -it --rm --name=mysql \\\n-e 'DB_USER=gitlab' -e 'DB_PASS=secretpass' \\\n-e 'DB_NAME=gitlabhq_production' sameersbn/mysql\nstart redis container\ndocker run -it --rm --name=redis sameersbn/redis\nstart gitlab\ndocker run -it --rm \\\n--link mysql:mysql --link redis:redisio \\\n--publish 10080:80 --publish 10022:22 \\\n-e GITLAB_PORT='10080' -e GITLAB_SSH_PORT='10022' \\\nsameersbn/gitlab:7.2.2\n```\nIf this does not work, then please state the host os and docker version in use.\n. @pkallberg Was your issue resolved?\n. It appears to me that your are running gitlab inside virtual box or something. In that case please connect to the guest is IP on port 10080\n. @chrert that is the extent of the log. I don't see anything wrong. What do you expect? Are you not able to access gitlab?\n. @sydneyhenrard yes, this has something to with the shared folder on a NTFS filesystem. chown and chmod does not work on NTFS filesystems (including FAT32, etc.)\nGitlab seems to perform some filesystem checks while creating the repository, which seems to error out. There is nothing that we can do in the image to fix this issue.\n. its a filesystem thing. If you can create an ext partition and use that for the persistence then it should probably work. Alternatively you can create a separate volume in virtualbox for the persistent data.\nThere is nothing that can be done in the image to resolve this as it is an issue with the environment. For proper functioning, GitLab expects that files and directories have specific ownerships and permissions.\n. @mko-x This is probably some issue with docker.\nFirst please make sure a container with name srv-git does not already exist docker ps -a | grep srv-git. If it does, stop it docker stop srv-git and then remove it docker rm srv-git.  Next make sure the db-git and kv-git containers exist. docker ps -a | grep db-git, docker ps -a | grep kv-git. Docker will fail to start a container if any of the linked containers are missing. Once you have verified this, try starting the gitlab container.\nIf this does not help, there is a possibility that docker has encountered a bug. Collect whatever information you can regarding this state and reboot the machine and retry. If it works, there was an issue with docker. Report the issue at the docker project providing all the information you gathered before the reboot.\nEither ways, the issue is not with the image. Docker does not seem to start the container in the first place.\nI also tested your commands locally and had no issues.\n``` bash\nstart postgresql\ndocker run --name db-git -it --rm \\\n-e 'DB_NAME=gitlabhq_production' \\\n-e 'DB_USER=gitlab' \\\n-e 'DB_PASS=jackson5famoustsong' \\\nsameersbn/postgresql:latest\nstart redis\ndocker run -it --rm --name kv-git \\\nsameersbn/redis:latest\nstart gitlab\ndocker run -it --rm --name srv-git \\\n--link db-git:postgresql \\\n--link kv-git:redisio \\\n-e 'GITLAB_HOST=das-repo.de' -e 'GITLAB_EMAIL=git@das-repo.de' \\\n-e 'SMTP_USER=mymail' -e 'SMTP_PASS=alphabetagamma' \\\nsameersbn/gitlab\n```\nEverything works as expected.\n. @sydneyhenrard scratch the mysql container internal part of @cedvan' response. The internal mysql server does not exist anymore.\nTo extend on @cedvan' response. The gitlab container does its best to store its data in volumes. So long as you have the volumes mounted, your gitlab data is safe. This includes your repositories, etc.\nFor the mysql/postgresql data, the required volumes have to be mounted for these containers so that the data is not lost when the container is removed.\n. @Thijxx yes.\n. @schmunk42 @jk I suggest you file a bug at gitlab upstream.\n. @jk cool.\n. @sydneyhenrard yes. you need to remove the existing gitlab container so that there are no name conflicts. If you want the old container to stay, then you would have to change the name of the new container.\n. @sydneyhenrard In the latest tag you can now run rake tasks on a running gitlab instance using docker exec. Please refer https://github.com/sameersbn/docker-gitlab#rake-tasks for information. However, I advise against running backup operations on a running gitlab instance since it is possible for the gitlab data to get updated while the backup is being created.\n. @andycmaj does the backup operation work when AWS remote backup is not configured?\n. @Jack12816 my visual diff program seems to have failed me. To be fair it did tell me that it could not parse the diff properly.\n. @andycmaj I just tried out the changes without configuring the AWS backup options and the backup create option fails.\nbash\n$ docker run --name='gitlab' -it --rm \\\n--link postgresql:postgresql --link redis:redisio \\\n--volume=/opt/docker/gitlab:/home/git/data \\\n--env-file=/opt/docker/gitlab/envvars \\\nsameersbn/gitlab:latest app:rake gitlab:backup:create\nUpdating CA certificates...\nRunning gitlab rake task...\nDumping database ... \nDumping PostgreSQL database gitlabhq_production ... [DONE]\ndone\nDumping repositories ...\n...\n...\ndone\nDumping uploads ... \ndone\nCreating backup archive: 1425473216_gitlab_backup.tar ... done\nUploading backup archive to remote storage  ... rake aborted!\nArgumentError:  is not a recognized storage provider\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/fog-core-1.21.1/lib/fog/storage.rb:25:in `new'\n/home/git/gitlab/lib/backup/manager.rb:42:in `upload'\n/home/git/gitlab/lib/backup/manager.rb:29:in `pack'\n/home/git/gitlab/lib/tasks/gitlab/backup.rake:16:in `block (3 levels) in <top (required)>'\nTasks: TOP => gitlab:backup:create\n(See full trace by running task with --trace)\n. my env has the following parameters.\nbash\nTZ=Asia/Kolkata\nDB_NAME=gitlabhq_production\nDB_USER=gitlab\nDB_PASS=xxxxxxxxxxx\nGITLAB_HTTPS=true\nGITLAB_HOST=git.example.com\nGITLAB_EMAIL=git@example.com\nGITLAB_PROJECTS_VISIBILITY=internal\nGITLAB_BACKUPS=daily\nGITLAB_BACKUP_TIME=13:00\nGITLAB_TIMEZONE=Kolkata\nSSL_SELF_SIGNED=true\nSMTP_ENABLED=true\nSMTP_DOMAIN=mail.example.com\nSMTP_USER=noreply@example.com\nSMTP_PASS=xxxxxx\nOAUTH_ALLOW_SSO=true\nOAUTH_BLOCK_AUTO_CREATED_USERS=true\nOAUTH_GOOGLE_API_KEY=xxxxxx.apps.googleusercontent.com\nOAUTH_GOOGLE_APP_SECRET=xxxxxx\nOAUTH_GOOGLE_RESTRICT_DOMAIN=example.com\nNGINX_MAX_UPLOAD_SIZE=100m\n. Hi. Can you rebase the PR. I will merge it first thing in the morning before making the 7.9.3 release. Let me know. Thanks. \n. @hyper-carrot i think its normal. just ignore the message.\n. @hyper-carrot the container will start nginx on port 80 and -p 10080:80 will forward the host port 10080 to port 80 of the container.\n. @hyper-carrot couple of things, this setting is not right -v /opt/gitlab/data:/home/gitl/data. Next, I am not sure why you want to mount a volume of the tmp directory, i.e. -v /opt/gitlab/tmp:/home/git/data/tmp and I do not know what implications this can have. Lastly, If you want the backups to be saved at a different location i.e. -v /opt/gitlab/backups:/home/git/data/backups, do not use the /home/git/data/backups mountpoint, use something like /home/git/backups, i.e. outside the data mountpoint and specify the path using the GITLAB_BACKUP_DIR option.\nYou docker command is pretty unusual. What exactly are you trying to achieve with these mountpoints. They do not make sense to me.\n. @hyper-carrot p.s. the readme clearly indicates the mountpoints that you should specify as volumes. Trying to do something the image is not designed to do would yield unexpected results. \n. @hyper-carrot first of, please fix your docker command. Next make sure the redis server and database servers are running and are accessible by the container.\n. @hyper-carrot congratulations!\nI reviewed your docker command and it looks right. \n. @russell Thanks for the PR. But do you think this option is really required? Gitlab is slowly moving all configurable parameters to the webui, which is great because we can remove a lot of configuration options from this image leaving the user to primarily configure only the database, redis, url and ssl configuration.\nBesides this PR has the side-effect that if the GITLAB_ROOT_PASSWORD variable is not specified, the default password is set. But gitlab will not ask you to change the default password on first login as it normally would.\n. @russell sounds good to me. please update the PR after fixing the side-effect issue. thanks.\n. @kinghajj i remember somebody have to do the same on linode vps. no idea what it is \n. @GottZ When you configure https on the reverse proxy, you HAVE to set GITLAB_HTTPS=true and you should NOT install the SSL keys and certificates in the container. This configuration indicates to the container that it is running behind an SSL enabled proxy and will spit out https urls.\nNow, if this is already how you've setup the container and proxy, then I would suggest cleaning up your browser cache before retrying. If the problem persists, then please share your docker command with additional details like your nginx proxy configuration for the gitlab application, the host os, whether boot2docker is used, etc. This will help me duplicate the issue and hopefully propose a resolution to the issue.\n. @GottZ One question. When you enable https, does gitlab work properly with https (i.e. without the oauth part). Are all links https, etc.?\n. @GottZ sorry for not responding earlier. I was quite busy over the past week.\nI'm glad you have the issue resolved. :beer: \n. @qwc You need to stop and remove the running container and execute the backup command. Alternately you can run the backup command with a different name for the container. You can also exec into the running container and execute the rake command manually as you have listed above.\nAs long as the docker image is configured to mount a volume for the data store, all your gitlab data is safe and the running container can be stopped/removed/recreated with the same configuration without any loss of data.\n. > Of course my data is safe in the volume and the image or newly created containers are working with that volume, still I somehow can't accept, that this 'creating a container for every command' isn't too much overhead for this simple commands.\nTechnically there is not much overhead. Yes there are multiple steps involved, but you can setup automatic backups, and that way you don't have to worry about taking backups. The container will do that for you. Basically the current setup makes the process simple for new users. I do agree that, taking backups using docker exec is a simpler solution. Its just that the backups mechanism/instructions were added way before docker added the exec option. Apart from the fact that I am much more comfortable taking the gitlab instance down before taking a backup for obvious reasons, after all its a maintenance task. Maybe, I will revisit this and also provide the option of using docker exec.\n\nAnd additional, if I define always a different name for the one-command-container I get a lot of containers which are just useless, and I have to remove them one-by-one. :/\n\nYou can get around this my using the --rm flag to the docker command. i.e. docker run --it --rm.\n. @qwc I think the docker exec did not work is probably because you are not in the right working directory, i.e. /home/git/gitlab. Basically, I think adding the WORKDIR statement in the docker file should resolve this. Next, the rake command would have to be launched as the git user, i.e. docker exec -it gitlab sudo -u git -H bundle exec rake gitlab:backup:create RAILS_ENV=production.\nThese are minor changes that need to be done. I just got my laptop back from the service center. I will make these changes once I done setting it up.\n. @qwc You can now run rake tasks using docker exec. Please refer https://github.com/sameersbn/docker-gitlab#rake-tasks for basic information.\n. @m451 This won't work on systems that don't have the /usr/lib/libdevmapper.so.1.02 file. On ubuntu:14.04 the file does not exist and hence the docker run command will error out.\n. @m451 solution is to just use fig or docker-compose instead of mounting the docker binary and socket. I will be nuking that option soon.\n. @m451 If you are facing this issue can you try the following command\nbash\ndocker run -it --rm \\\n-v /var/run/docker.sock:/run/docker.sock \\\n-v $(which docker):/bin/docker \\\n-v $(ldconfig -p | grep libdevmapper.so.1.02 | awk '{print $4}'):/usr/lib/libdevmapper.so.1.02 \\\nubuntu:trusty docker ps\nI have not faced this issue so cannot test. Please let me know.\nedit: updated command to only test the docker daemon execution\n. volume mounting the docker binary and socket in the quick start guide has been replaced with manually start of postgresql and redis images or using docker-compose to orchestrate the startup.\n. @danielhass The documentation needs to be corrected. The container will get the DB_HOST and DB_PORT parameters from the linkage 100% of the time because the user does not have to specify anything for this to work (i.e. apart from specifying the --link option to the docker run command).\nThe image will also automatically get DB_NAME, DB_USER and DB_PASS from the linkage, provided that they have been specified when the postgresql image is started and also requires that the DB_NAME option specifies only a single database (the sameersbn/postgresql container allows you to create multiple databases via the DB_NAME option).\nI hope this clarifies things.\n. @kain88-de Please refer to https://github.com/sameersbn/docker-gitlab/pull/211#issuecomment-73389035\n. @epiphyllum In 7.9.0 the default SMTP_OPENSSL_VERIFY_MODE is set to peer. However for some reason verification is failing even with google apps servers. I will try an fix this before making the 7.9.1 release. Until then you can set SMTP_OPENSSL_VERIFY_MODE=none in your configurations.\n. @DeX3 You should set GITLAB_SSH_PORT=10022 for the ssh clone url to appear correctly.\n. @epiphyllum Please refer to https://github.com/sameersbn/docker-gitlab#redmine. The answer to your question lies in there\n. @chengweiv5 thanks for the contribution. Changes have been merged\n. The logs now print the message \"Configuring nginx::gitlab::ssl...\" when SSL is enabled internally. I think it should suffice. what do you think?\n. When the container is started the following messages are printed if the SSL certificates are not found\nSSL keys and certificates were not found.\nAssuming that the container is running behind a HTTPS enabled load balancer.\nTo deal with wrong permissions issue, I will correct the permissions at the container startup.\n. @aguilbau your SMTP_PASS probably has a ' or a / character, which you should probably escape of remove it altogether. These characters confuse the sed substitution. \n. @aguilbau was your issue resolved?\n. @johnjelinek some configuration parameter is confusing sed. This commonly occurs if a / character is present in one of the strings, eg. in password or as @ivanalejandro0 metioned, though the GITLAB_TIMEZONE parameter should not include a / character. \nPlease try adding the configuration parameters one by one to find out which one is causing the issue. Or paste your docker run command here.\n. @johnjelinek setting set -x by default might now be such a good thing. Maybe we can add a DEBUG configuration parameter that will do set -x\n. @hydrosIII thanks for pitching in. Much appreciated.\n. @andreptb did @hydrosIII's  suggestion resolve your issue?\n. @Leibniz137 can you rename the parameter to GITLAB_TIMEOUT so that the naming is homogenous with the other parameters. Thanks. \n. @colinbrownec do you think it would be a better idea to automatically set AWS_BACKUPS to true when the required parameters are configured, so as to avoid broken configurations?\n. @colinbrownec basically we check if AWS_BACKUP_REGION, AWS_BACKUP_ACCESS_KEY_ID, AWS_BACKUP_SECRET_ACCESS_KEY and AWS_BACKUP_BUCKET are not empty before enabling AWS backups.\n. @colinbrownec I think you can keep the AWS_BACKUPS option. But if it is not specified, then it should be enabled automatically if all the four parameters are defined. If it has been enabled by the user, but if any of the four parameters are not defined, the we display a message that says something like \"Cannot enable AWS backups. Invalid configuration.\", disable AWS backups and continue without exiting.\n. @colinbrownec somewhat (not entirBut unlike the case of AWS, ely) similar to SMTP_ENABLED configuration. SMTP_ENABLED is automatically set to true if SMTP_USER is specified. However SMTP_ENABLED can be manually enabled by the user without specifying the SMTP_USER which is not the case for AWS_BACKUPS. \nAWS_BACKUPS has to have the four parameters. I agree with your \"2. since if you have some aws parameters, you were probably trying to use aws\", but it you would have to carefully craft the code to make sure if AWS_BACKUPS was enabled automatically or by the user.\n. @colinbrownec In case of OAUTH support if the user does not specify all oauth parameters. I will just not enable oauth and continue. Here the difference it that the user can tell that oauth has not been enabled by looking at the login screen. In case of aws backups this is not the case. So your right, if AWS_BACKUPS cannot be enabled when the user was trying to enable it, its best to error out.\n. @colinbrownec Lets just keep it simple. If your current PR, add a check to make sure if the four parameters are defined. If not, print error message and exit\n. @colinbrownec ps. post a comment here after you update the PR so that i am notified. thanks\n. Hi. I will test and merge on Monday. Traveling at the moment. Thanks.\n. You are not supposed to edit those files manually. Use GITLAB_HOST\n. @ParadoxDelta If you have mounted a data volume then you can recreate the container with the new parameters without any loss of data.\n. @rawadhilal88 maybe the DB_USER is not allowed remote access to the database. From the gitlab container try connecting to the mysql server using the mysql command. eg. mysql -h <host> -u <user> -p <password>\n. @rawadhilal88 due to the nature of bash certain characters need to escaped. This issue can be alleviated by using single quotes -e 'DB_PASS=pas!sowd' rather than double quotes -e \"DB_PASS=pas!sowd\".\n. @pnelsonsr docker run -it -v /etc/hosts:/etc/hosts:ro --rm sameersbn/ubuntu:latest cat /etc/hosts does not work for me as well. This is not recommended practice. I suggest you setup a local DNS server to setup a local domain. Refer to my blog post Deploying a DNS Server using Docker for some pointers.\n. @pnelsonsr that's a good suggestion by @netflash, should fix your issue.\n. @pnelsonsr Ok.. I am closing this issue because I think you have this resolved using bind.\n. @Arylo probably the postgresql password for the gitlab user is not correct or maybe the postgresql container did not start  for some reason. I tried your commands and had no problems.\nbash\ndocker run --name=gitlab_postgresql -it --rm \\\n-e \"DB_NAME=gitlabhq_production\" \\\n-e \"DB_USER=gitlab\" -e \"DB_PASS=GitlabProject\" \\\n-v /tmp/postgresql/data:/var/lib/postgresql \\\nsameersbn/postgresql:latest\nInitializing database...\nCreating user \"gitlab\"...\nCreating database \"gitlabhq_production\"...\nGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\nStarting PostgreSQL server...\n2015-05-07 04:56:26 UTC [70-1] LOG:  database system was shut down at 2015-05-07 04:56:26 UTC\n2015-05-07 04:56:26 UTC [74-1] LOG:  autovacuum launcher started\n2015-05-07 04:56:26 UTC [69-1] LOG:  database system is ready to accept connections\n2015-05-07 04:57:02 UTC [78-1] gitlab@postgres ERROR:  database \"gitlabhq_production\" already exists\n2015-05-07 04:57:02 UTC [78-2] gitlab@postgres STATEMENT:  CREATE DATABASE \"gitlabhq_production\" ENCODING = 'unicode'\nbash\ndocker run --name=\"gitlab-1\" -it --rm \\\n-e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=GitlabProject\" \\\n--link gitlab_postgresql:postgresql \\\n--link redis:redisio \\\nsameersbn/gitlab:latest\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nWaiting for database server to accept connections\nSetting up GitLab for firstrun. Please be patient, this could take a while...\ngitlabhq_production already exists\nMigrating database...\nCompiling assets. Please be patient, this could take a while...\nStarting supervisord...\n2015-05-07 04:58:10,945 CRIT Supervisor running as root (no user in config file)\n2015-05-07 04:58:10,945 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\n2015-05-07 04:58:10,946 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\n2015-05-07 04:58:10,946 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\n2015-05-07 04:58:10,946 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\n2015-05-07 04:58:10,946 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\n2015-05-07 04:58:10,967 INFO RPC interface 'supervisor' initialized\n2015-05-07 04:58:10,967 CRIT Server 'unix_http_server' running without any HTTP authentication checking\n2015-05-07 04:58:10,968 INFO supervisord started with pid 1\n2015-05-07 04:58:11,972 INFO spawned: 'sidekiq' with pid 605\n2015-05-07 04:58:11,976 INFO spawned: 'unicorn' with pid 606\n2015-05-07 04:58:11,981 INFO spawned: 'cron' with pid 607\n2015-05-07 04:58:11,985 INFO spawned: 'nginx' with pid 608\n2015-05-07 04:58:11,990 INFO spawned: 'sshd' with pid 609\n2015-05-07 04:58:13,735 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-05-07 04:58:13,735 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-05-07 04:58:13,735 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-05-07 04:58:13,735 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-05-07 04:58:13,735 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n. @YauzZ please be a bit more verbose with your query. I don't understand your question\n. @mikehaertl good to see that you had your issue resolved.\n\nSidenote: I don't know why you created your own mysql and redis images. I think the official images are just fine and should work. If that's an issue I think you should make them work.\n\nFact is that my redis/mysql images were created way before the \"official\" ones.\nUsers are not required to use my redis/postgresql/mysql images. Everyone is free to use whatever they image they wish to use for these services. If automatic import of the DB_USER, DB_PASS and DB_NAME from the database container does not work with the image they are using, then they can manually specify these or better yet submit a PR with the support for the image in use see https://github.com/sameersbn/docker-gitlab/blob/master/assets/init#L141-L179.\nMy redis image does not do anything special. Technically I could retire it, since no maintenance goes into the image, it lives on. But I like my mysql image, I has a couple of features like volume mounting the mysql.sock directory which allows me to run the mysql client on the host as if it was running on the host. My postgresql image does one better by automatically upgrading the postgresql data on postgresql version upgrades.\nFYI, GitLab recommends using postgresql over mysql. You will eventually encounter issues with a mysql setup. Switch to postgresql NOW to avoid future mindfuck.\n. @alininja you can exec into the container and check the supervisor and other logs. However @JacobHenner raises a very important question. Gitlab requires a minimum 1G of RAM available to start without which the app will basically freak out.\n. @alininja you can exec into the container \nbash\ndocker exec -it gitlab_1 bash\ncd  /var/log/gitlab\nYou will find all the logs under various sub directories.\n. @linlinlinlin I made the stupid mistake of adding - characters in the container names in the yaml file. I have removed them now. You can download the docker-compose.yml file and retry. Please close this issue once you verify that the issue has been resolved. Thanks.\n. @sabhiram I don't know what the issue could be or how to fix it. You should report it to the upstream gitlab project.\nWhat database server are you using? If its mysql then it is probably the cause of your issue.\n. @sabhiram If you do use mysql then you can take a look at #125 \n. @sabhiram that is one of the reason why there is a Recommended against Postgresql in the readme :smile:\n. @sabhiram no idea. I am only aware of merge issues so far.\n. @johnjelinek what version of gitlab are you using. Do you notice anything in the logs? Try looking up the logs in the /var/log/gitlab directory.\n. @johnjelinek @sabhiram can you please take a look at https://github.com/gitlabhq/gitlabhq/issues/1104\n. Also take a look at https://github.com/gitlabhq/gitlab-public-wiki/wiki/Trouble-Shooting-Guide\nYou might also want to try starting the container with app:sanitize argument to make sure that all files and directories have the right ownership and permissions as it is listed as a probable cause of the issue.\nIf that does not help, the please try launching the raketask to create the satellites directories https://github.com/gitlabhq/gitlabhq/blob/master/doc/raketasks/maintenance.md#re-create-satellite-repositories. Refer to the README on how to launch raketasks.\n. @johnjelinek let me know if any of the above suggestions fixes the issue.\n. @johnjelinek please do try the other suggestions and let me know. Thank you.\n. @simkin can you please try the suggestions in https://github.com/sameersbn/docker-gitlab/issues/313#issuecomment-114942729\n. @simkin great!\n. @JoeOrtiz AWS backups is a gitlab upstream feature. We merely expose the configuration options. So basically it works however Gitlab upstream has implemented it. You could open a feature request with the upstream project or better yet submit a PR for this to the GitLab project.\nAutomatically picking the last backup for the restore is certainly possible. But then the question is what if the user wants a list of all available backups and manually select the backup they wish to restore.\n. @andredasilvapinto please test and let me know if it works and/or if you see any issues.\n. @andredasilvapinto I don't know the reason you are using the CenturyLinkLabs/docker-gitlab image and under what environment. But whatever the CenturyLinkLabs/docker-gitlab is setup to do is now done by default in the sameersbn/gitlab image. That is probably why they have stopped updating it. Consider switching to sameersbn/gitlab:7.12.0\n. @andredasilvapinto thanks for the feedback.\n. This looks like an issue with docker. You either need to report it on the docker projects issue page or at least provide some more information/context for me to give you some advise.\n. were you able to resolve this issue? can we close it?\n. @infinitydeveloper lets us know the suggestion by @thoriumbr helps.\n. @alexwhen are you referring to the latest version of the docker-compose.yml file?\n. @alexwhen I don't understand why you say that secretpassword is wrong. Is it because in the README i have used DB_PASS=password? If yes, then technically the two are unrelated since one uses docker-compose and the other is manually creation. However, I will change it to password in the docker-compose.yml file as well.\n. @ruanjf Sometimes you could face issue downloading the image. In such cases, you should retry pulling the image. If that does not work, try updating docker.\nRegarding the image building, I have noticed issue on redhat based distros. If you are using one of them, then I cannot help with the build process.\n. @ruanjf sorry for not replying before. In my experience I have always had problem building my images on RHEL flavors. I never tried to investigate it because things always seem to break on these distros. You fix it once, couple of months later some other issue causes problems  :dizzy_face: :gun:\n. @ruanjf great! this is a rather common issue and yes, it sucks!\n. @alexwhen why do you say redis does not work? The log you pasted looks valid to me.\n. @can-can ENV configuration cannot be changed once the container has been launched. You need to remove the container and re-create it with the new options. If you have volume mounts for the data then there will be no loss of data.\n. GITLAB_HOST env parameter\n. @likol Thanks for this PR. I would have never realized it. :+1: \n. Will do\n. @pylight there has been an issue with emojis, etc. when using gitlab under a relative url. I don't know if this is a configuration issue with the image or an issue with gitlab itself.\nTo check if this is an image specific issue or not, I need to setup gitlab manually,  I have not found sufficient to do this. I hope to look into this as soon as I find the time.\n. @pylight I tested this today on gitlab installed from source on a virtual machine and found that this is a gitlab issue. We need to report this to gitlab upstream.\n. fixed in release 8.0.0\n. > sudo docker run --name=redis_gitlab -d sameersbn/redis:latest\n\nsudo docker run --name=mysql_gitlab -d -v /var/gitlab/mysql:/var/lib/mysql sameersbn/mysql:latest\n\nWhat about the database user and schema for gitlab? Does it already exist?\n\nsudo docker run -d \\\n-v /var/gitlab/data:/home/git/data \\\n-v /var/gitlab/mysql/:/var/lib/mysql \\\n--link redis_gitlab:redisio \\\n--link mysql_gitlab:mysql \\\n-p 9000:80 -p 2222:22 sameersbn/gitlab:latest\n\nThe -v /var/gitlab/mysql/:/var/lib/mysql volume mount is not required. It is a leftover line from the previous releases. However this cannot be the cause of your issue. \nWhat the issue here is the database connection parameters have not been specified, specifically DB_USER, DB_PASS and DB_NAME. I think you are expecting the gitlab container to automatically fetch this from the mysql container using the link. If so, this only works if these have been specified in the mysql container run command. Otherwise you need to specify them in the gitlab run command (provided that the mysql database and user already exists)\nYou can try \n``` bash\nsudo docker run --name=redis_gitlab -d sameersbn/redis:latest\nsudo docker run --name=mysql_gitlab -d \\\n  --env='DB_NAME=gitlabhq_production' \\\n  --env='DB_USER=gitlab' --env='DB_PASS=password' \\\n  -v /var/gitlab/mysql:/var/lib/mysql \\\n  sameersbn/mysql:latest\nsudo docker run -it --rm \\\n-v /var/gitlab/data:/home/git/data \\\n--link redis_gitlab:redisio \\\n--link mysql_gitlab:mysql \\\n-p 9000:80 -p 2222:22 sameersbn/gitlab:latest\n```\nNOTE: the above gitlab command is being run in interactive mode so that if there are any issues starting up, you should notice them\nOr better yet use the commands from the quick start guide and build upon them.\nP.S. GitLab recommends using postgresql over mysql. I suggest you take this recommendation seriously because you will face issues with mysql, maybe not immediately but eventually the cracks will show up.\n. @kevinsullivan was your issue resolved? If yes, please close this issue.\nLooks like a DB connection error to me. It explains the 1 minutes timeout.\n. @TJC129 Unless you had taken backups or enabled automatic backups, you have lost your postgresql database. The command that you used was for demonstration purposes only. When used in production you were required to manually create postgresql and redis containers.\nIf you have a backup, then you can start the container and restore the backup and then upgrade.\n. > I think have already lost the database(my fault :P), should think before leap next time.\nThis is the reason why I have removed the docker socket mounting in quickstart. Far too many people seem to have considered the quick start a be-all and end-all. With the new quick start you can be assured that whatever the case, you will not loose your data.\n\nbut they turns out to be empty repos\n\nAre these repos empty when you clone them? it might just be that they are very small for gitlab to count them in MB's\n. @fevxie Did the advise by @likol help you?\n. can this issue be closed?\n. @thenewguy I have added the SAML OAuth provider support. However, I have not been able to test it out. If you are able to then please do test and let me know if it works. Thanks.\n. @506764932 @sugarwyc please make sure your VM has 1GB or more of free RAM before launching gitlab.\n. @mecp can you share your docker-compose file or docker run command?\n. @janisfu I dont understand\n. @chyuaner This is normal behaviour of the redis-server. Nothing to be alarmed about.\nAre you seeing any problems?\n. @chyuaner Closing this issue as this is normal redis behaviour. Nothing to be alarmed about.\n. @vince67\nYou can enable automated backups in the image to take daily, monthly or weekly backups\nRegarding the error you are seeing. I don't clearly understand where you are installing the above cron job (on host or container) and what the contents of backup.sh are. Either way, the issue could be with your use of ... in the script path.\n. @vince67 is the container running running at all times? if not you can specify your timezone using the environment variable TZ, eg. -e 'TZ=Asia/Kolkata'. \nCan you share the docker run command you use to run the container. I can check it out locally.\n. @larryzhao the command you listed above works for me. But you can try specifying the full path. However the error i get when I try to execute a non existing command is completely different for me\n``` bash\ndocker exec -it gitlab bashq\nexec: \"bashq\": executable file not found in $PATH\nCannot run exec command f042a2c14785e037fd98dbd2f3bff6dc5f0ef849365f9933fc34687e6acce90a in container 21f3230a683dc620b56dbe10d4f6704c508561d8114758c7bc21e09d31aa0163: [8] System error: exec: \"bashq\": executable file not found in $PATH\n                                                                                         Error starting exec command in container f042a2c14785e037fd98dbd2f3bff6dc5f0ef849365f9933fc34687e6acce90a: Cannot run exec command f042a2c14785e037fd98dbd2f3bff6dc5f0ef849365f9933fc34687e6acce90a in container 21f3230a683dc620b56dbe10d4f6704c508561d8114758c7bc21e09d31aa0163: [8] System error: exec: \"bashq\": executable file not found in $PATH\n```\nWhat docker version are you using?\n. @larryzhao in the worst case, maybe the docker image you pulled from the index are corrupt, in which case you can delete the image and the underlying sameersbn/ubuntu image and pull again from the docker hub.\n. > docker pull sameersbn/gitlab:7.11.2. Is it outdated/corrupted ?\nWhat I meant is that sometimes while pulling from the docker hub, the resulting image somehow gets corrupt. This was particularly the case in the early days. The solution to this was to delete and pull the image from the docker hub again.\n. @larryzhao can you try launching bash in the redis or postgresql container?\n. @larryzhao ok.. You really need to try deleting the image and pulling the image from the hub again.\n. @larryzhao was your issue resolved? If yes, what was the resolution\n. @robinro are you refering to the ssl_stapling options? Is there any particular option that you don't see in the nginx SSL config of this image?\n. @robinro okay.. thanks for closing the issue :wink: \n. @kixiro this is docker hub download issue i think. The only suggestion I can give is to retry.\n. try docker pull sameersbn/ubuntu:14.04.20150604 cause that is the specific tag used by the image\n. @frdmn What is your host os. Please don't tell me its redhat/fedora..\n. @frdmn 14.04 should work fine. Can you check the ip of the redis container and make sure it matches the one in the log.\n. @frdmn were you using locally build images before?\n. @frdmn ok by build you don't mean locally building the images. you only mean launching using docker-compose which will pull the images from the docker hub.. right?\n. @urquilla you need to specify the constant that maps to your timezone listed here http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html.\nFor example, if I want to set the timezone to Asia/Kolkata, I need to use GITLAB_TIMEZONE=Kolkata. Please check the constants listed in the above link and use the appropriate one.\n. The & character is now automatically escaped. If you have manually escaped the & character, then you need to remove it in versions > 8.1.x.\n. @thomasleveil the GITLAB_TIMEZONE variable uses ruby TimeZone constants http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html. If you want to specify Asia/Kolkata as your timezone then you specify GITLAB_TIMEZONE=Kolkata as per the linked page.\nI think this PR is not required unless ruby allows it.\n. @urquilla closing this PR. thanks!\n. @Z3roCoder docker docs lists sample systemd service configurations for launching containers https://docs.docker.com/articles/host_integration/. You can also use the --restart=always option as mentioned by @apeltzer \n. @Z3roCoder In case you are still at it, take a look at https://coreos.com/docs/launching-containers/launching/getting-started-with-systemd/\nClosing issue for now.\n. @utrack u mean GITLAB_HOST right? Can you clear the browser cache and check again.\n. @utrack @Z3roCoder I don't see this issue. Here is what i used\n``` bash\ndocker run -it --rm --name=pg1 \\\n--env='DB_NAME=gitlab' --env='DB_USER=gitlab' --env='DB_PASS=mypass' \\\n-v /tmp/docks/pg1:/var/lib/postgresql \\\nsameersbn/postgresql:latest\ndocker run -it --rm --name redis-gitlab \\\nsameersbn/redis:latest\ndocker run --name='gitlab' -it --rm \\\n--link=pg1:postgresql --link=redis-gitlab:redisio \\\n--publish=10022:22 --publish=10080:80 --env='GITLAB_SSH_PORT=10022' \\\n--env='DB_NAME=gitlab' --env='DB_USER=gitlab' --env='DB_PASS=mypass' \\\n--env='GITLAB_HOST=git.example.com --env='GITLAB_HTTPS=true' \\\n-v /tmp/docks/gitlab:/home/git/data \\\nsameersbn/gitlab:7.11.4\n```\nThen I added a repo with multiple branches and was able to access using git.example.com and change branches etc. without problems.\n. @utrack @Z3roCoder FWIW, here is my nginx reverse proxy configuration\n``` nginx\nupstream gitlab {\n  server                    172.17.42.1:10080 fail_timeout=0;\n}\nlet gitlab deal with the redirection\nserver {\n  listen                    80;\n  server_name               git.example.com;\n  server_tokens             off;\n  root                      /dev/null;\n# Increase this if you want to upload larger attachments\n  client_max_body_size      20m;\n# individual nginx logs for this vhost\n  access_log                /var/log/nginx/gitlab_access.log;\n  error_log                 /var/log/nginx/gitlab_error.log;\nlocation / {\n    proxy_read_timeout      300;\n    proxy_connect_timeout   300;\n    proxy_redirect          off;\nproxy_set_header        X-Forwarded-Proto $scheme;\nproxy_set_header        Host              $http_host;\nproxy_set_header        X-Real-IP         $remote_addr;\nproxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header        X-Frame-Options   SAMEORIGIN;\n\nproxy_pass              http://gitlab;\n\n}\n}\nserver {\n  listen                    443   ssl spdy;\n  server_name               git.example.com;\n  server_tokens             off;\n  root                      /dev/null;\n## Increase this if you want to upload larger attachments\n  client_max_body_size      20m;\n## SSL\n  ssl                       on;\n  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\n  ssl_prefer_server_ciphers on;\nssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';\nssl_session_cache builtin:1000  shared:SSL:10m;\nssl_certificate /etc/nginx/ssl/server.crt;\n  ssl_certificate_key /etc/nginx/ssl/server.key;\n  ssl_dhparam /etc/nginx/ssl/dhparam.pem;\n## Individual nginx logs for this vhost\n  access_log                /var/log/nginx/gitlab_ssl_access.log;\n  error_log                 /var/log/nginx/gitlab_ssl_error.log;\nlocation / {\n    ## If you use https make sure you disable gzip compression\n    ## to be safe against BREACH attack.\n    gzip                    off;\nproxy_read_timeout      300;\nproxy_connect_timeout   300;\nproxy_redirect          off;\n\nproxy_set_header        Host                $http_host;\nproxy_set_header        X-Real-IP           $remote_addr;\nproxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;\nproxy_set_header        X-Forwarded-Proto   https;\nproxy_set_header        X-Frame-Options     SAMEORIGIN;\n\nproxy_pass http://gitlab;\n\n}\n}\n``\n. @Z3roCoderGITLAB_PORTspecifies the port on which the application will be available to the outside world. For example, if your container is using-p 10080:80and you are using a load balancer to proxy requests on port80to the container on port10080, thenGITLAB_PORTshould be80. In case you have enabledhttpsat the load balancer then set it to443`.\nThe container by default sets GITLAB_PORT=80, if GITLAB_SSL=true is specified then it is set to 443. If you want to override the port then you can specify it.\nThe GITLAB_PORT configuration is the only config that effects the port displayed in the urls. If this is the case even when it is set to 80 basically means that there is something wrong in your environment. Please check it and/or purge your browser cache and recheck.\nIn case you have enable the nginx_pagespeed module on the load balancer then turn it off during the tests.\n. @ohugues in the google mail setting you need to enable pop access.\n. @ohugues I use google apps and this is what I have in my env to get mails working.\nbash\nSMTP_ENABLED=true\nSMTP_DOMAIN=mail.example.com\nSMTP_USER=noreply@example.com\nSMTP_PASS=mysecretpassword\n. @ohugues Check if the gitlab container is able to resolve dns addresses. This was the issue for some users. You can try to ping a address using the command docker exec -it gitlab ping -c 4 mail.google.com. If this does not work then it is a DNS issue.\nYou can also check the gitlab logs.\n. The default email address of the admin user is admin@example.com, you \nneed to update it in the user profile settings.\nOn Monday 15 June 2015 01:33 AM, ohugues wrote:\n\nI've found them. Here is a little part of the production.log.\nTrying to add new user:\nStarted GET \"/\" for 88.185.132.13 at 2015-06-14 17:19:02 +0200\nProcessing by DashboardController#show as HTML\nCompleted 200 OK in 166ms (Views: 81.3ms | ActiveRecord: 18.8ms)\nStarted GET \"/?limit=20&offset=0\" for 88.185.132.13 at 2015-06-14\n17:19:02 +0200\nProcessing by DashboardController#show as JSON\nParameters: {\"limit\"=>\"20\", \"offset\"=>\"0\"}\nCompleted 200 OK in 93ms (Views: 0.7ms | ActiveRecord: 14.6ms)\nStarted GET \"/admin\" for 88.185.132.13 at 2015-06-14 17:19:04 +0200\nProcessing by Admin::DashboardController#index as HTML\nCompleted 200 OK in 209ms (Views: 124.4ms | ActiveRecord: 27.6ms)\nSent mail to newuser_valid_email_adress@domain.fr\nmailto:newuser_valid_email_adress@domain.fr (60039.3ms)\nChanging email in the gitlab profile\nThe email is admin@example.com mailto:admin@example.com even if I set\nsomething different using the environment variable)\nStarted PUT \"/profile\" for XX.XX.XX.XX at 2015-06-14 21:47:32 +0200\nProcessing by ProfilesController#update as HTML\nParameters: {\"utf8\"=>\"?~~S\", \"authenticity_token\"=>\"[FILTERED]\",\n\"user\"=>{\"name\"=>\"Administrator\", \"email\"=>\"my_user_id@gmail.com\nmailto:my_user_id@gmail.com\", \"public_email\"=>\"\", \"skype\"=>\"\",\n\"linkedin\"=>\"\", \"twitter\"=>\"\", \"websit\ne_url\"=>\"\", \"location\"=>\"\", \"bio\"=>\"\"}}\nRedirected to http://sub.domain.fr/profile\nCompleted 302 Found in 890ms (ActiveRecord: 25.8ms)\nStarted GET \"/profile\" for XX.XX.XX.XX at 2015-06-14 21:47:33 +0200\nProcessing by ProfilesController#show as HTML\nCompleted 200 OK in 266ms (Views: 201.9ms | ActiveRecord: 20.3ms)\nSent mail to my_user_id@gmail.com mailto:my_user_id@gmail.com (545.1ms)\nStarted GET \"/profile/account\" for XX.XX.XX.XX at 2015-06-14 21:47:39 +0200\nProcessing by Profiles::AccountsController#show as HTML\nCompleted 200 OK in 250ms (Views: 181.6ms | ActiveRecord: 16.5ms)\nStarted GET \"/profile\" for XX.XX.XX.XX at 2015-06-14 21:47:41 +0200\nProcessing by ProfilesController#show as HTML\nCompleted 200 OK in 276ms (Views: 200.1ms | ActiveRecord: 23.8ms)\nSent mail to my_user_id@gmail.com mailto:my_user_id@gmail.com (508.7ms)\nSent mail to my_user_id@gmail.com mailto:my_user_id@gmail.com (696.5ms)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/346#issuecomment-111870816.\n. @ohugues I don't think gitlab sends an email when a new user signs in/registers. Mails are sent when SSH key is added/removed from your profile, or issue and pull request updates, etc. Please try adding/removing a SSH key and check if you are able to receive mails. Also keep an eye on the logs. \n. @ohugues so was your issue resolved?\n. @Z3roCoder that is wrong. all logs are collected at /var/log/gitlab. You should mount a volume at that location: /srv/docker/gitlab/gitlab/log:/var/log/gitlab \n. @Z3roCoder those are symlinks to the logs in /var/log/gitlab\n. @stefanfoulis i have not tried. But I don't see any issue running multiple instances of the image behind a load balancer as long as the updating of the git repositories is somehow serialized (via SSH or HTTP).\n. Closing issue as the answer by @Jack12816 seems to clarify things.\n. @Z3roCoder do you have example commands to test this out?\n. @blacksails thanks for correcting the error.\nDoesn't that mean that redis will get wiped on a container restart?\n\nThis is true, however the loss of data in the redis store will not cause any functional issues with gitlab.\n. @rainyear please elaborate on the issue you are facing. Possibly share sample commands to reproduce this behaviour\n. > Add the following to the top of the install script (now install.sh)\nI dont think it makes sense to add these to the install.sh script since you will have to edit the script either ways. I suggest you specify these as environment variable in the docker file. Add the following to the dockefile before any RUN instructions.\ndockerfile\nENV http_proxy=http://my.proxy.com:3128 \\\n    https_proxy=http://my.proxy.com:3128 \\\n    ftp_proxy=http://my.proxy.com:3128\nRUN echo 'Acquire::http::Proxy \"http://my.proxy.com:3142\";' >> /etc/apt/apt.conf.d/01proxy\nIf you are using a base image, you can add the above to the base image instead. The RUN echo 'Acquire::http::Proxy \"http://my.proxy.com:3142\";' >> /etc/apt/apt.conf.d/01proxy makes sure apt-get uses the proxy as well\n\nsudo -u ${GITLAB_USER} -H bundle exec rake\n\nAre you sure about -E causing issues here? If yes, what issue do you see and how will gitlab-shell install work without the proxy settings? \n. @STOIE I am using local containers for squid and apt-cacher-ng and have no issue with the rake command you mentioned above.\n``` bash\nsquid\ndocker run --name='squid' --publish=172.17.42.1:3128:3128 \\\n  sameersbn/squid:latest\napt-cacher-ng\ndocker run --name='apt-cacher-ng' --publish=172.17.42.1:3142:3142 \\\n  sameersbn/apt-cacher-ng:latest\n```\nIn the base image I have the following ENV configuration\ndockerfile\nENV http_proxy=http://172.17.42.1:3128/ \\\n    https_proxy=http://172.17.42.1:3128/ \\\n    ftp_proxy=http://172.17.42.1:3128/\nRUN echo 'Acquire::http::Proxy \"http://172.17.42.1:3142\";' >> /etc/apt/apt.conf.d/01proxy\nI see no issues whatsoever while building the image.\n. @STOIE great! thanks for closing the issue :wink: \n. should i consider this issue closed? or do you want me to add this to the package install list of this image?\n. @innuendonh I think you can install gitlab-shell on the host itself and use GITLAB_SSH_HOST if required. I haven't tried this but should probably work.\n. @fredericseiler thanks for the fix.\n. @GottZ I have google oauth enabled and have no issues logging into gitlab with google oauth. I cannot remember correctly but I think couple of months back there was a google API change. Can you try setting up google oauth again by following the instructions here http://doc.gitlab.com/ce/integration/google.html.\nRegarding your configuration, I see that you have enabled SSL support at the load balancer. In this case please make sure that you have not installed the SSL certificates in the container. I also see that your docker-compose.yml has the line \"127.0.0.1:8444:443\" in the ports section since the container will only server requests over http.\nLastly, here is the configuration I use at my load balancer if it helps\n``` nginx\nupstream gitlab {\n  server 172.17.42.1:10080 fail_timeout=0;\n}\nlet gitlab deal with the redirection\nserver {\n  listen 80;\n  server_name git.example.com;\n  server_tokens off;\n  root /dev/null;\n# Increase this if you want to upload larger attachments\n  client_max_body_size 20m;\n# individual nginx logs for this vhost\n  access_log /var/log/nginx/gitlab_access.log;\n  error_log /var/log/nginx/gitlab_error.log;\nlocation / {\n    proxy_read_timeout 300;\n    proxy_connect_timeout   300;\n    proxy_redirect off;\nproxy_set_header X-Forwarded-Proto $scheme;\nproxy_set_header Host $http_host;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header X-Frame-Options   SAMEORIGIN;\n\nproxy_pass http://gitlab;\n\n}\n}\nserver {\n  listen 443 ssl spdy;\n  server_name git.example.com;\n  server_tokens off;\n  root /dev/null;\n## Increase this if you want to upload larger attachments\n  client_max_body_size 20m;\n## SSL\n  ssl on;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\n  ssl_prefer_server_ciphers on;\nssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';\nssl_session_cache builtin:1000  shared:SSL:10m;\n## Strong SSL Security\n  ## https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html\n  ssl_certificate /etc/nginx/ssl/server.crt;\n  ssl_certificate_key /etc/nginx/ssl/server.key;\n## [Optional] Generate a stronger DHE parameter (recommended):\n  ##   cd /etc/ssl/certs\n  ##   openssl dhparam -out dhparam.pem 2048\n  ##\n  ssl_dhparam /etc/nginx/ssl/dhparam.pem;\n## Individual nginx logs for this vhost\n  access_log /var/log/nginx/gitlab_ssl_access.log;\n  error_log /var/log/nginx/gitlab_ssl_error.log;\nlocation / {\n    ## If you use https make sure you disable gzip compression\n    ## to be safe against BREACH attack.\n    gzip off;\nproxy_read_timeout 300;\nproxy_connect_timeout 300;\nproxy_redirect off;\n\nproxy_set_header Host $http_host;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header X-Forwarded-Proto https;\nproxy_set_header X-Frame-Options SAMEORIGIN;\n\nproxy_pass http://gitlab;\n\n}\n}\n``\n. @GottZ Let me know if it helps. Tomorrow I will try your commands.\n. @GottZ Was your issue resolved?\n. Please note if gitlab is running behind a load balancer with https support then, you need to setGITLAB_PORTto443. This is automatically set whenGTILAB_HTTPS=true. @GottZ did you deleting your oauth configuration on google and recreate it.\n. @fizzGITLAB_PORTindicates the port on which the gitlab application will be externally accessible. In your comment you indicated use ofGITLAB_HTTPS=true, this indicates that the gitlab application is externally accessible onhttpsport443of the reverse proxy. This means thatGITLAB_PORTshould have been set to443. If not specified, the container automatically sets it to443based onGITLAB_HTTPS=true`.\nThe :80 appended to the redirect_url after the upgrade indicates that gitlab did not respect the port configuration on the redirect_url prior to the upgrade, which is why you did not notice this issue earlier.\nAll in all, your configuration is now correct (earlier it was not :wink: )\n@sp4ke (sorry for the late reply),  The resolution to your issue is probably also the same.\n. > oh and @sameersbn, i didn't change anything in my configuration.\nneither was anything changed in the image apart from upgrading gitlab :smile: \n. @ninja- If you are sure that this is not a RAM issue, then try deleting the tmp directory in the data volume before relaunching. Also make sure that the container can connect to the internet (i think it is required for the assets compilation, i am not sure though)\n. @dobsiin I am not sure about proxy configuration for sidekiq. However if you are using squid then I don't think you can use it to proxy to the gmail smtp servers. Please see http://squid-web-proxy-cache.1019090.n4.nabble.com/Can-squid-be-configured-as-SMTP-SMTPS-proxy-td2727188.html\np.s. I am no expert on the subject.\n. @akaihola adding shopt -s nocasematch and replacing [ with [[ in the entrypoint.sh script should probably resolve this. This change would require a bit of testing to make sure it does not break anything. \n. @akaihola If you find the time can you apply the patch https://gist.github.com/sameersbn/dc6a684394f21f790f75, build and test with ansible?\n. @akaihola I tried this out. For the most part it works. But would cause problems in the yaml files where the truth value would be set to True. I don't think yaml would like that.\nI think the best and quickest solution is to use quotes in the sample docker-compose.yml file.\n. thanks for reporting this @charles-plessy. I have removed the quotes from the docker compose file now.\n. @jiajar no.. It supports other mail hosts as well.\nPlease provide your docker command line for me to take a closer look at whats wrong.\n. @jiajar the command you pasted above has a space character after the \\ character on the --env='SMTP_DOMAIN=163.com' \\ line. Remove it an retry.\nbash\ndocker run --name=gitlab -d  \\\n--link=redis-gitlab:redisio \\\n--link=mysql-gitlab:mysql \\\n--publish=10022:22 --publish=10080:80 \\\n--env='GITLAB_PORT=10080' --env='GITLAB_SSH_PORT=10022' \\\n--env='SMTP_ENABLED=true' \\\n--env='SMTP_DOMAIN=163.com' \\\n--env='SMTP_HOST=smtp.163.com' --env='SMTP_PORT=25' \\\n--env='SMTP_USER=name@163.com' --env='SMTP_PASS=passwd' \\\n--volume=/srv/docker/gitlab/gitlab:/home/git/data \\\nsameersbn/gitlab:latest\n. @sexybee Please provide more information such as the version being used and sample docker commands / docker compose file for me to test out the issue.\nOutput of the containers would also go a long way :smile: \n. @sexybee The connection error and the logs indicates that the unicorn server is not running. I believe you are using the commands from the quick start guide as is, so I tested using those commands and found no issues.\nHere are a few conditions you need to check:\n1. Does the docker host have 1GB or more available RAM before starting the GitLab container?\n2. Are you using docker in a VM (or boot2docker)? If yes, please check the memory configuration on the VM so as to allow for condition 1.\n3. Run docker exec -it gitlab supervisorctl status to see the current status of all the processes. They should all indicate the RUNNING status\n4. Check the unicorn logs at the /var/log/gitlab/gitlab/ and /var/log/gitlab/supervisor/ paths in the container to see if you can notice any reason why unicorn is failing.\nIf all of the above don't help, then please remove the sameersbn/gitlab images using docker rmi sameersbn/gitlab:7.12.0 and download it again from the docker hub docker pull sameersbn/gitlab:7.12.0 and retry.\n. @shaunc I believe you are cloning from your osx environment right. Can you check if the 8018 port has been opened on the docker host (the docker host VM) using sudo  iptables -nL | grep 8018. If the port is closed (no output), then you need to open the port first.\nIf possible, try doing a clone from the docker host vm after replacing the 192.168.53.103:8018 part in the clone url with <container-ip>:22.\n. @renrenfree You probably need to open the 10022 port on the docker host vm.\n. please refer to https://github.com/docker/docker/issues/4007\nyou need to perform some port forwarding steps. I don't use boot2docker so I dont exactly know what commands you should/could execute.\nedit: additional reading https://github.com/boot2docker/boot2docker/blob/master/doc/WORKAROUNDS.md\nOn Monday 06 July 2015 07:58 PM, Shaun Cutts wrote:\n\n@sameersbn ... thanks ... hmm -- looks like there are no restrictions on the OUTPUT chain:\n\nBoot2Docker version 1.7.0, build master : 7960f90 - Thu Jun 18 18:31:45 UTC 2015\nDocker version 1.7.0, build 0baf609\ndocker@boot2docker:~$ sudo iptables -nL | grep 8018\ndocker@boot2docker:~$ sudo iptables -nL\nChain INPUT (policy ACCEPT)\ntarget     prot opt source               destination\nChain FORWARD (policy ACCEPT)\ntarget     prot opt source               destination\nDOCKER     all  --  0.0.0.0/0            0.0.0.0/0\nACCEPT     all  --  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED\nACCEPT     all  --  0.0.0.0/0            0.0.0.0/0\nACCEPT     all  --  0.0.0.0/0            0.0.0.0/0\nChain OUTPUT (policy ACCEPT)\ntarget     prot opt source               destination\nChain DOCKER (1 references)\ntarget     prot opt source               destination\nACCEPT     tcp  --  0.0.0.0/0            172.17.0.40          tcp dpt:22\nACCEPT     tcp  --  0.0.0.0/0            172.17.0.40          tcp dpt:80\nACCEPT     tcp  --  0.0.0.0/0            172.17.0.52          tcp dpt:80\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/sameersbn/docker-gitlab/issues/363#issuecomment-118872733\n\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. can somebody with a similar setup and had to deal with this issue please help out here.\n. @shaunc @renrenfree if this is resolved for you, please close the issue.\n. @ruuds the internal ssh server always runs on port 22. the GITLAB_SSH_PORT is only used to display the correct port number in the clone urls. So in the docker run if you have -p 10022:22 GITLAB_SSH_PORT=10022, the clone urls will look something like ssh://git@git.example.com:10022/namespace/repo.git.\n. @sp4ke the line https://github.com/sameersbn/docker-gitlab/blob/master/entrypoint.sh#L285 was added recently that updates the ownership of the ssh directly. However I cannot understand how it managed to bungle the permissions set on the key files. I have added additional line to make sure the key files have the right permissions.\nThanks for investigating this issue.\n. @outcoldman This can just as easily be configured by mounting the robot.txt file using -v /path/to/robots.txt:/home/git/gitlab/public/robots.txt:ro on the docker command line.\n. @outcoldman You are right. I will symlink this file in the data volume\n. @outcoldman I have added the symlink. regarding the cleanup as linked in your above comment. Users will need to do this manually.\n. @RoboMod can you paste a sample of the docker command. I don't see this issue. I ran docker run with the following environment variables -e USERMAP_UID=500 -e USERMAP_GID=500\n. @RoboMod you cannot use $(id -u git) in the docker-compose file. You need to run id -u git and $(id -g git) on your host and use the printed values. p.s. in this case the git user needs to exist on the host\n. @RoboMod This is a bash thing. You cannot expect such things to be documented in the readme here :smile: \n. @gopeter Regarding your last update. In my case, I see the path with /home/git/data/backups/ prefix, eg. /home/git/data/backups/repositories/docker/gitlab.bundle, even though no such file exists. I think it is used when the rake task to generate a backup is started.\nI guess you might have to change the path in the config files to replace /var/opt/gitlab with /home/git/data. You could also try to run the gitlab:import:repos raketask to see if that helps. \n. @gopeter apparently gitlab seems to hard code the file paths. You might have to manually update the symlinks to point to /home/git/gitlab-shell/hooks. \n(this whole ordeal is really such a shame :disappointed: )\n. @gopeter p.s. if you get everything working please do run the app:sanitize command on the docker image to make sure all files and directories have the right permissions. Also launch the rake task to create the satellite repositories using app:rake gitlab:satellites:create rake task.\n. @gopeter a bash script should help to get the job done quickly\n. great! I hope you do not face any issues with the image :beer: \n. @gopeter closing this issue since you got it resolved :+1: \n. Yep.. the documentation could use a little clarity.\nOn Thursday 09 July 2015 11:57 AM, Ariel Schiavoni wrote:\n\nThanks @outcoldman !, I thought that GITLAB_PORT was used to expose the gitlab's docker container port.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/sameersbn/docker-gitlab/issues/368#issuecomment-119838830\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. @davidwindell I would suggest moving the button before the \"Table of Contents\" title.\n. @jcw9930 I have not tried running the image on kubernetes. But I dont see any reason why it wont work as long as you have proper pod and service descriptions\n. @RobeDevOps the username and password prompt will always be displayed on http/https clone urls. Make sure you are using the ssh clone urls for the SSH keys to come into the picture.\n. @RobeDevOps you need to configure the SMTP settings for mail sending. You can create users from the admin panel as well\n. @RobeDevOps Why dont you just enabled SMTP via google apps / mail.\n. @RobeDevOps disabling gitlab signup might disable the mail sending to activate the account GITLAB_SIGNUP=false. I am not sure about this. But worth a try.\n. @dobsiin should we mark this issue as resolved?\n. From your investigation its pretty clear that right now it cannot be done.\nThis is a issue for Gitlab upstream.\nI had read somewhere that disabling signups should allow you to workaround\nthis. I have not tried it, probably you already have.\nSince this behaviour does not arise due to this image, I think we can close\nit.\nOn Jul 20, 2015 12:59 PM, \"dobsiin\" notifications@github.com wrote:\n\nhttps://forum.gitlab.com/t/no-confirmation-email-for-new-users/617\nfrom tgdesrochers:\nedit:\n/opt/gitlab/embedded/service/gem/ruby/2.1.0/gems/devise-3.2.4/lib/devise.rb\nline: 123\nchange to: @@email_regexp = /\\A[^@]+@[^@]+\\z/\nrerun: gitlab-cli reconfigure.\nNow any new user you create will not be required to click on a\nverification email.\nIf there was an easier way to do this please tell me. I couldn't find one.\n.... there is no easy way to accomplish this. Guess this is resolved.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/373#issuecomment-122785571\n.\n. just realized that GITLAB_SIGNUP option is not available anymore. you should disable signups from the administration area\n. At the momemt there is no option to specify the redis password\nOn Saturday 11 July 2015 12:52 AM, Dimitri KOPRIWA wrote:\nI have just setup a REDIS external server.\nYou don't have an REDIS_PASS environment var ?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/sameersbn/docker-gitlab/issues/374\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. reopening.. this feature is coming soon! :smile: \n. @kopax Gitlab does not seem to work with password protected redis server. So this cannot be implemented for now. Closing the issue.\n\nCool :) it mean I am installing everything for nothing.\n\nI don't understand what you mean.\n\nIs it hard to update from docker-gitlab to another ?\n\nWhat do you mean?\n. @kopax Please refer readme. Upgrading is probably the easiest task with this image\n. @JosephLutz At the moment the restore will not take additional args. I will make some changes to fix that\n. @kopax is your gitlab container linked to the nginx container? because I see the configuration\nnginx\nupstream gitlab {\n    server gitlab:10080;\n}\nThis means that the nginx containers expects to talk to the gitlab container using the gitlab hostname. This is only possible if you have linked the gitlab container to the nginx container.\nThat being said. The way I do it is, on the gitlab container i publish the gitlab containers port 80 using -p 172.17.42.1:10080:80. Any connections to the docker bridge interface 172.17.42.1 on port 10080 will be routed to the gitlab containers port 80. This way I don't have to bother about the gitlab containers ip address in the nginx configuration and also I don't have to link the gitlab container to the nginx container.\nWith that in place, I use the following nginx configuration on the load balancer,\n``` nginx\nupstream gitlab {\n  server 172.17.42.1:10080 fail_timeout=0;\n}\nlet gitlab deal with the redirection\nserver {\n  listen 80;\n  server_name git.example.com;\n  server_tokens off;\n  root /dev/null;\n# Increase this if you want to upload larger attachments\n  client_max_body_size 20m;\n# individual nginx logs for this vhost\n  access_log /var/log/nginx/gitlab_access.log;\n  error_log /var/log/nginx/gitlab_error.log;\nlocation / {\n    proxy_read_timeout 300;\n    proxy_connect_timeout   300;\n    proxy_redirect off;\nproxy_set_header X-Forwarded-Proto $scheme;\nproxy_set_header Host $http_host;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header X-Frame-Options   SAMEORIGIN;\n\nproxy_pass http://gitlab;\n\n}\n}\nserver {\n  listen 443 ssl spdy;\n  server_name git.example.com;\n  server_tokens off;\n  root /dev/null;\n## Increase this if you want to upload larger attachments\n  client_max_body_size 20m;\n## SSL\n  ssl on;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\n  ssl_prefer_server_ciphers on;\nssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';\nssl_session_cache builtin:1000  shared:SSL:10m;\n## Strong SSL Security\n  ## https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html\n  ssl_certificate /etc/nginx/ssl/server.crt;\n  ssl_certificate_key /etc/nginx/ssl/server.key;\n## [Optional] Generate a stronger DHE parameter (recommended):\n  ##   cd /etc/ssl/certs\n  ##   openssl dhparam -out dhparam.pem 2048\n  ##\n  ssl_dhparam /etc/nginx/ssl/dhparam.pem;\n## Individual nginx logs for this vhost\n  access_log /var/log/nginx/gitlab_ssl_access.log;\n  error_log /var/log/nginx/gitlab_ssl_error.log;\nlocation / {\n    ## If you use https make sure you disable gzip compression\n    ## to be safe against BREACH attack.\n    gzip off;\nproxy_read_timeout 300;\nproxy_connect_timeout 300;\nproxy_redirect off;\n\nproxy_set_header Host $http_host;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header X-Forwarded-Proto https;\nproxy_set_header X-Frame-Options SAMEORIGIN;\n\nproxy_pass http://gitlab;\n\n}\n}\n```\nI hope you find this useful.\n. @kopax Also please note that when you want to enable ssl support via a load balancer, you should not install the ssl certificates to the gitlab container. Only set GITLAB_HTTPS=true. Please refer to the SSL part of the readme regarding this.\n. @kopax There are 2 ways to setup SSL support\n1. directly in the container\n2. using a load balancer\nSince you are using a load balancer i will try to describe how this works.\nWhen using a load balancer, \n- the load balancer will talk to the gitlab container over plain http. \n- the SSL configuration has to done at the load balancer. \n- Since gitlab will be accessible to the outside world over https you should set GITLAB_HTTPS=true, this ensures that the urls, etc. have the https prefix.\n- You should not install the SSL certificates in the gitlab container. Installing the SSL certificates in the gitlab container triggers native https support, which is not what you want. \n- You do not need to add -p 4443:443 on the gitlab container, because it will only talk to the load balancer over http so this setting would be pointless.\n- The GITLAB_PORT setting is only used to display the correct url, it has no other effect. So if your load balancer will be listening on port 443, then set  GITLAB_PORT=443. Note: this is automatically set when GITLAB_HTTPS=true.\nIf this does not clear your doubts then please paste you docker command / docker-compose.yml file and the load balancer configuration. I will try and help you figure it out.\n. Please share you nginx and docker launch commands.\n. Please share you docker-compose.yml for launching gitlab as well. You can mask out the sensitive bits.\n. @kopax since you are linking to the gitlab container from the nginx container and as a result the gitlab hostname in your nginx config,\nnginx\nupstream git {\n  server gitlab:10080;\n}\nDirectly addresses the gitlab containers ip, you will have to use port 80 here, i.e.\nnginx\nupstream git {\n  server gitlab:80;\n}\nCan you please try this change. In the mean time I will continue my investigation\n. @kopax Well the issue is that in your nginx docker-compose.yml file you have the line \"443:433\", i think you meant to write \"443:443\"\n. @kopax after doing the gitlab:80 and \"443:443\" change I can see the load balancer working \n. @kopax you need need to figure that out yourself. You should also find pointer in the past issues.\nCouple of notes: \n- Since you are linking to the gitlab container from the nginx container, there is no need to publish -p 10080:80\n- You seem to be using mysql. Gitlab Inc. recommends using postgresql. You will start seeing issues later on if you continue using mysql.\n. @kopax ok\n. @kopax BTW, gitlab seems to have small issues when running on a relative url. see https://github.com/sameersbn/docker-gitlab/issues/326\n. @kopax the command you quoted is from the section that enables https natively in the container. When using a load balancer, this is the section you should refer https://github.com/sameersbn/docker-gitlab#using-https-with-a-load-balancer.\nWhen using a load balancer, no SSL certificates should be installed in the gitlab container. The container will only be listening on port 80. \nThe GITLAB_PORT setting is only used to display the correct url. It has no effect on what ports the internet nginx server listens on.\n. @kopax you will need to refer to your mail server docs to properly configure SMTP. \nOne thing you can check first if the smtp.domain.com resolution happens from the gitlab container. ping your smtp server to see if name resolution is working. \nIf the name resolution does not work, then there is a problem with you dns server configuration for the gitlab container. If you need to use an internet dns server, then use the --dns argument to specify your dns server address in your docker-compose file.\n. @kopax  I cannot tell what the issue could be. One thing you can try is to add the SSL server certificate in a ca.crt file in the certs directory in the data volume. Refer to https://github.com/sameersbn/docker-gitlab#installing-trusted-ssl-server-certificates. This will make sure that your server certificate is trusted since it is a self signed certificate.\n. @kopax FYI, you can input multiple certificates you want to trust in the ca.crt file, just keep appending certificates in ca.crt\n. @dobsiin can you try deleting the /tmp directory inside the data volume and relaunch the container. This will force the asset compilation while the image is starting up.\nMake sure the container is able to access the internet. I think this step required a working internet connection. I am not sure though.\n. sorry for not replying earlier. did you manage to resolve the issue?\n. @arno0203 The log indicates that sidekiq is not starting. Please make sure that the docker host has 1 GB or more of available RAM. This is one common reason that this happens\n. @arno0203 @ovalin I checked the issue. the problem is that in the docker-compose.yml file you have set REDIS_HOST=redis. It should be redisio since that is the docker link alias.\nP.S. When linking the redis container using docker links, you really do not need to set REDIS_HOST and REDIS_PORT. That being said it does not hurt if you set these as long as they are set right.\nLet me know if this resolves your issue. Thanks\nedit: sorry for not testing your compose file when you first reported the issue. my bad!\n. @ovalin please share some information with respect to your setup (host,boot2docker,etc). Additionally please share your docker run command or docker-compose file. \n. @ovalin thats weird. the permissions of the folders in /var/log/gitlab are updated when the container is started https://github.com/sameersbn/docker-gitlab/blob/master/entrypoint.sh#L283-L287.\n. @ovalin interesting. The nginx user www-data should have read access to the /home/git/gitlab directory. The assets file you mentioned reside in /home/git/data/tmp and the nginx user should have read access to these files as well. This leads me to believe that the permissions of the files in the data volume /home/git/data were somehow altered which probably rendered these files inaccessible by the www-data user.\nIn such cases, the permissions of the files and directories in the data volume can be corrected by starting the container with the app:sanitize command.\n. @ovalin hmm.. you are seeing permissions related issues that have never been seen before.\nCan you please provide some information regarding your setup.\nAre you using boot2docker on MacOS?\nIf you are using Linux, which distro?\nHave you build the image or pulled it from the docker hub?\nOutput of docker info and docker version commands\n. @ovalin From the use of devicemapper as the storage driver, I am going to guess that it is some flavor of RHEL, which leads me to believe that the issues you are facing might have something to do with selinux. Can you try out the recommendation for selinux users in the Persistence section of the readme\n. > I seem to be missing the root login.\nyou mean the gitlab root user is missing?\n\nI cant use it to login via the web interface I also logged into the database and checked the user table but only found my new users.\n\nAre you refering to new users created in gitlab?\n\nIs there a way to add an administrator/root account manually?\n\nYou can exec into the container and do.\nNote: This will reinitialize the entire gitlab database and create the root user. This means that you will loose all user and project configurations created in gitlab,\nbash\ncd /home/git/gitlab\nsudo -HEu git bundle exec rake gitlab:setup\n. > I seem to be missing the root login.\nyou mean the gitlab root user is missing?\n\nI cant use it to login via the web interface I also logged into the database and checked the user table but only found my new users.\n\nAre you refering to new users created in gitlab?\n\nIs there a way to add an administrator/root account manually?\n\nYou can exec into the container and do.\nNote: This will reinitialize the entire gitlab database and create the root user. This means that you will loose all user and project configurations created in gitlab,\nbash\ncd /home/git/gitlab\nsudo -HEu git bundle exec rake gitlab:setup\n. @ovalin could be a permissions. The rake tasks is supposed to run without any bundle install or anything.\n. @ovalin could be a permissions. The rake tasks is supposed to run without any bundle install or anything.\n. @ovalin this is what the output should look like\nbash\nroot@89ea8eb67902:/home/git/gitlab# bundle list\nGems included by the bundle:\n  * CFPropertyList (2.3.1)\n  * RedCloth (4.2.9)\n  * ace-rails-ap (2.0.1)\n  * actionmailer (4.1.11)\n  * actionpack (4.1.11)\n  * actionview (4.1.11)\n  * activemodel (4.1.11)\n  * activerecord (4.1.11)\n  * activeresource (4.0.0)\n  * activesupport (4.1.11)\n  * acts-as-taggable-on (3.5.0)\n  * addressable (2.3.8)\n  * arel (5.0.1.20140414130214)\n  * asana (0.0.6)\n  * asciidoctor (1.5.2)\n  * attr_encrypted (1.3.4)\n  * attr_required (1.0.0)\n  * autoprefixer-rails (5.1.11)\n  * axiom-types (0.0.5)\n  * bcrypt (3.1.7)\n  * bootstrap-sass (3.3.4.1)\n  * browser (0.8.0)\n  * builder (3.2.2)\n  * bundler (1.10.5)\n  * cal-heatmap-rails (0.0.1)\n  * carrierwave (0.9.0)\n  * celluloid (0.16.0)\n  * charlock_holmes (0.6.9.4)\n  * coercible (1.0.0)\n  * coffee-rails (4.1.0)\n  * coffee-script (2.4.1)\n  * coffee-script-source (1.9.1.1)\n  * colored (1.2)\n  * connection_pool (2.1.0)\n  * creole (0.3.8)\n  * d3_rails (3.5.5)\n  * default_value_for (3.0.0)\n  * descendants_tracker (0.0.3)\n  * devise (3.2.4)\n  * devise-async (0.9.0)\n  * devise-two-factor (1.0.1)\n  * diff-lcs (1.2.5)\n  * diffy (3.0.3)\n  * doorkeeper (2.1.3)\n  * dotenv (0.9.0)\n  * dropzonejs-rails (0.4.14)\n  * encryptor (1.3.0)\n  * enumerize (0.7.0)\n  * equalizer (0.0.8)\n  * erubis (2.7.0)\n  * escape_utils (0.2.4)\n  * eventmachine (1.0.4)\n  * excon (0.45.3)\n  * execjs (2.5.2)\n  * expression_parser (0.9.0)\n  * faraday (0.8.9)\n  * faraday_middleware (0.9.0)\n  * fission (0.5.0)\n  * fog (1.25.0)\n  * fog-brightbox (0.7.1)\n  * fog-core (1.30.0)\n  * fog-json (1.0.2)\n  * fog-profitbricks (0.0.3)\n  * fog-radosgw (0.0.4)\n  * fog-sakuracloud (1.0.1)\n  * fog-softlayer (0.4.6)\n  * fog-terremark (0.1.0)\n  * fog-vmfusion (0.1.0)\n  * fog-voxel (0.1.0)\n  * fog-xml (0.1.2)\n  * font-awesome-rails (4.2.0.0)\n  * foreman (0.63.0)\n  * formatador (0.2.5)\n  * gemnasium-gitlab-service (0.2.6)\n  * gemojione (2.0.0)\n  * github-markup (1.3.1)\n  * gitlab-flowdock-git-hook (0.4.2.2)\n  * gitlab-grack (2.0.2)\n  * gitlab-grit (2.7.2)\n  * gitlab-linguist (3.0.1)\n  * gitlab_emoji (0.1.0)\n  * gitlab_git (7.2.5)\n  * gitlab_meta (7.0)\n  * gitlab_omniauth-ldap (1.2.1)\n  * gollum-grit_adapter (0.1.3)\n  * gollum-lib (4.0.2)\n  * gon (5.0.1)\n  * grape (0.6.1)\n  * grape-entity (0.4.2)\n  * haml (4.0.5)\n  * haml-rails (0.5.3)\n  * hashie (2.1.2)\n  * hike (1.2.3)\n  * hipchat (1.5.0)\n  * hitimes (1.2.2)\n  * html-pipeline (1.11.0)\n  * http_parser.rb (0.5.3)\n  * httparty (0.13.3)\n  * httpauth (0.2.1)\n  * httpclient (2.5.3.3)\n  * i18n (0.7.0)\n  * ice_cube (0.11.1)\n  * ice_nine (0.10.0)\n  * inflecto (0.0.2)\n  * ipaddress (0.8.0)\n  * jquery-atwho-rails (1.0.1)\n  * jquery-rails (3.1.3)\n  * jquery-scrollto-rails (1.4.3)\n  * jquery-turbolinks (2.0.1)\n  * jquery-ui-rails (4.2.1)\n  * json (1.8.3)\n  * jwt (0.1.13)\n  * kaminari (0.15.1)\n  * kgio (2.9.2)\n  * macaddr (1.7.1)\n  * mail (2.6.3)\n  * mime-types (1.25.1)\n  * mimemagic (0.3.0)\n  * mini_portile (0.6.2)\n  * minitest (5.3.5)\n  * mousetrap-rails (1.4.6)\n  * multi_json (1.11.1)\n  * multi_xml (0.5.5)\n  * multipart-post (1.2.0)\n  * mysql2 (0.3.16)\n  * net-ldap (0.11)\n  * net-scp (1.2.1)\n  * net-ssh (2.9.2)\n  * newrelic_rpm (3.9.4.245)\n  * nokogiri (1.6.6.2)\n  * nprogress-rails (0.1.2.3)\n  * oauth (0.4.7)\n  * oauth2 (0.8.1)\n  * octokit (3.7.0)\n  * omniauth (1.2.2)\n  * omniauth-bitbucket (0.0.2)\n  * omniauth-github (1.1.1)\n  * omniauth-gitlab (1.0.0)\n  * omniauth-google-oauth2 (0.2.5)\n  * omniauth-kerberos (0.2.0)\n  * omniauth-multipassword (0.4.1)\n  * omniauth-oauth (1.0.1)\n  * omniauth-oauth2 (1.1.1)\n  * omniauth-saml (1.3.1)\n  * omniauth-shibboleth (1.1.1)\n  * omniauth-twitter (1.0.1)\n  * opennebula (4.12.1)\n  * org-ruby (0.9.12)\n  * orm_adapter (0.5.0)\n  * pg (0.18.2)\n  * posix-spawn (0.3.9)\n  * pyu-ruby-sasl (0.0.3.3)\n  * rack (1.5.5)\n  * rack-accept (0.4.5)\n  * rack-attack (4.3.0)\n  * rack-cors (0.2.9)\n  * rack-mount (0.8.3)\n  * rack-oauth2 (1.0.8)\n  * rack-protection (1.5.1)\n  * rack-test (0.6.3)\n  * rails (4.1.11)\n  * rails-observers (0.1.2)\n  * railties (4.1.11)\n  * raindrops (0.13.0)\n  * rake (10.4.2)\n  * raphael-rails (2.1.2)\n  * rbvmomi (1.8.2)\n  * rdoc (3.12.2)\n  * redcarpet (3.3.2)\n  * redis (3.1.0)\n  * redis-actionpack (4.0.0)\n  * redis-activesupport (4.0.0)\n  * redis-namespace (1.5.1)\n  * redis-rack (1.5.0)\n  * redis-rails (4.0.0)\n  * redis-store (1.1.4)\n  * request_store (1.0.5)\n  * rinku (1.7.3)\n  * rotp (1.6.1)\n  * rouge (1.7.7)\n  * rqrcode (0.4.2)\n  * rqrcode-rails3 (0.1.7)\n  * ruby-saml (0.8.2)\n  * rubyntlm (0.5.0)\n  * rubypants (0.2.0)\n  * rugged (0.22.2)\n  * rugments (1.0.0.beta8)\n  * sanitize (2.1.0)\n  * sass (3.2.19)\n  * sass-rails (4.0.5)\n  * sawyer (0.6.0)\n  * seed-fu (2.3.5)\n  * select2-rails (3.5.9.3)\n  * settingslogic (2.0.9)\n  * sidekiq (3.3.0)\n  * sidetiq (0.6.3)\n  * simple_oauth (0.1.9)\n  * sinatra (1.4.4)\n  * six (0.2.0)\n  * slack-notifier (1.0.0)\n  * slim (2.0.2)\n  * sprockets (2.12.4)\n  * sprockets-rails (2.3.2)\n  * stamp (0.5.0)\n  * state_machine (1.2.0)\n  * stringex (2.5.2)\n  * systemu (2.6.5)\n  * task_list (1.0.2)\n  * temple (0.6.7)\n  * thor (0.19.1)\n  * thread_safe (0.3.5)\n  * tilt (1.4.1)\n  * timers (4.0.1)\n  * timfel-krb5-auth (0.8.3)\n  * tinder (1.9.3)\n  * trollop (2.1.2)\n  * turbolinks (2.5.3)\n  * twitter-stream (0.1.16)\n  * tzinfo (1.2.2)\n  * uglifier (2.3.2)\n  * underscore-rails (1.4.4)\n  * unf (0.1.4)\n  * unf_ext (0.0.7.1)\n  * unicorn (4.6.3)\n  * unicorn-worker-killer (0.4.2)\n  * uuid (2.3.7)\n  * version_sorter (2.0.0)\n  * virtus (1.0.1)\n  * warden (1.2.3)\n  * wikicloth (0.8.1)\n. @ovalin this is what the output should look like\nbash\nroot@89ea8eb67902:/home/git/gitlab# bundle list\nGems included by the bundle:\n  * CFPropertyList (2.3.1)\n  * RedCloth (4.2.9)\n  * ace-rails-ap (2.0.1)\n  * actionmailer (4.1.11)\n  * actionpack (4.1.11)\n  * actionview (4.1.11)\n  * activemodel (4.1.11)\n  * activerecord (4.1.11)\n  * activeresource (4.0.0)\n  * activesupport (4.1.11)\n  * acts-as-taggable-on (3.5.0)\n  * addressable (2.3.8)\n  * arel (5.0.1.20140414130214)\n  * asana (0.0.6)\n  * asciidoctor (1.5.2)\n  * attr_encrypted (1.3.4)\n  * attr_required (1.0.0)\n  * autoprefixer-rails (5.1.11)\n  * axiom-types (0.0.5)\n  * bcrypt (3.1.7)\n  * bootstrap-sass (3.3.4.1)\n  * browser (0.8.0)\n  * builder (3.2.2)\n  * bundler (1.10.5)\n  * cal-heatmap-rails (0.0.1)\n  * carrierwave (0.9.0)\n  * celluloid (0.16.0)\n  * charlock_holmes (0.6.9.4)\n  * coercible (1.0.0)\n  * coffee-rails (4.1.0)\n  * coffee-script (2.4.1)\n  * coffee-script-source (1.9.1.1)\n  * colored (1.2)\n  * connection_pool (2.1.0)\n  * creole (0.3.8)\n  * d3_rails (3.5.5)\n  * default_value_for (3.0.0)\n  * descendants_tracker (0.0.3)\n  * devise (3.2.4)\n  * devise-async (0.9.0)\n  * devise-two-factor (1.0.1)\n  * diff-lcs (1.2.5)\n  * diffy (3.0.3)\n  * doorkeeper (2.1.3)\n  * dotenv (0.9.0)\n  * dropzonejs-rails (0.4.14)\n  * encryptor (1.3.0)\n  * enumerize (0.7.0)\n  * equalizer (0.0.8)\n  * erubis (2.7.0)\n  * escape_utils (0.2.4)\n  * eventmachine (1.0.4)\n  * excon (0.45.3)\n  * execjs (2.5.2)\n  * expression_parser (0.9.0)\n  * faraday (0.8.9)\n  * faraday_middleware (0.9.0)\n  * fission (0.5.0)\n  * fog (1.25.0)\n  * fog-brightbox (0.7.1)\n  * fog-core (1.30.0)\n  * fog-json (1.0.2)\n  * fog-profitbricks (0.0.3)\n  * fog-radosgw (0.0.4)\n  * fog-sakuracloud (1.0.1)\n  * fog-softlayer (0.4.6)\n  * fog-terremark (0.1.0)\n  * fog-vmfusion (0.1.0)\n  * fog-voxel (0.1.0)\n  * fog-xml (0.1.2)\n  * font-awesome-rails (4.2.0.0)\n  * foreman (0.63.0)\n  * formatador (0.2.5)\n  * gemnasium-gitlab-service (0.2.6)\n  * gemojione (2.0.0)\n  * github-markup (1.3.1)\n  * gitlab-flowdock-git-hook (0.4.2.2)\n  * gitlab-grack (2.0.2)\n  * gitlab-grit (2.7.2)\n  * gitlab-linguist (3.0.1)\n  * gitlab_emoji (0.1.0)\n  * gitlab_git (7.2.5)\n  * gitlab_meta (7.0)\n  * gitlab_omniauth-ldap (1.2.1)\n  * gollum-grit_adapter (0.1.3)\n  * gollum-lib (4.0.2)\n  * gon (5.0.1)\n  * grape (0.6.1)\n  * grape-entity (0.4.2)\n  * haml (4.0.5)\n  * haml-rails (0.5.3)\n  * hashie (2.1.2)\n  * hike (1.2.3)\n  * hipchat (1.5.0)\n  * hitimes (1.2.2)\n  * html-pipeline (1.11.0)\n  * http_parser.rb (0.5.3)\n  * httparty (0.13.3)\n  * httpauth (0.2.1)\n  * httpclient (2.5.3.3)\n  * i18n (0.7.0)\n  * ice_cube (0.11.1)\n  * ice_nine (0.10.0)\n  * inflecto (0.0.2)\n  * ipaddress (0.8.0)\n  * jquery-atwho-rails (1.0.1)\n  * jquery-rails (3.1.3)\n  * jquery-scrollto-rails (1.4.3)\n  * jquery-turbolinks (2.0.1)\n  * jquery-ui-rails (4.2.1)\n  * json (1.8.3)\n  * jwt (0.1.13)\n  * kaminari (0.15.1)\n  * kgio (2.9.2)\n  * macaddr (1.7.1)\n  * mail (2.6.3)\n  * mime-types (1.25.1)\n  * mimemagic (0.3.0)\n  * mini_portile (0.6.2)\n  * minitest (5.3.5)\n  * mousetrap-rails (1.4.6)\n  * multi_json (1.11.1)\n  * multi_xml (0.5.5)\n  * multipart-post (1.2.0)\n  * mysql2 (0.3.16)\n  * net-ldap (0.11)\n  * net-scp (1.2.1)\n  * net-ssh (2.9.2)\n  * newrelic_rpm (3.9.4.245)\n  * nokogiri (1.6.6.2)\n  * nprogress-rails (0.1.2.3)\n  * oauth (0.4.7)\n  * oauth2 (0.8.1)\n  * octokit (3.7.0)\n  * omniauth (1.2.2)\n  * omniauth-bitbucket (0.0.2)\n  * omniauth-github (1.1.1)\n  * omniauth-gitlab (1.0.0)\n  * omniauth-google-oauth2 (0.2.5)\n  * omniauth-kerberos (0.2.0)\n  * omniauth-multipassword (0.4.1)\n  * omniauth-oauth (1.0.1)\n  * omniauth-oauth2 (1.1.1)\n  * omniauth-saml (1.3.1)\n  * omniauth-shibboleth (1.1.1)\n  * omniauth-twitter (1.0.1)\n  * opennebula (4.12.1)\n  * org-ruby (0.9.12)\n  * orm_adapter (0.5.0)\n  * pg (0.18.2)\n  * posix-spawn (0.3.9)\n  * pyu-ruby-sasl (0.0.3.3)\n  * rack (1.5.5)\n  * rack-accept (0.4.5)\n  * rack-attack (4.3.0)\n  * rack-cors (0.2.9)\n  * rack-mount (0.8.3)\n  * rack-oauth2 (1.0.8)\n  * rack-protection (1.5.1)\n  * rack-test (0.6.3)\n  * rails (4.1.11)\n  * rails-observers (0.1.2)\n  * railties (4.1.11)\n  * raindrops (0.13.0)\n  * rake (10.4.2)\n  * raphael-rails (2.1.2)\n  * rbvmomi (1.8.2)\n  * rdoc (3.12.2)\n  * redcarpet (3.3.2)\n  * redis (3.1.0)\n  * redis-actionpack (4.0.0)\n  * redis-activesupport (4.0.0)\n  * redis-namespace (1.5.1)\n  * redis-rack (1.5.0)\n  * redis-rails (4.0.0)\n  * redis-store (1.1.4)\n  * request_store (1.0.5)\n  * rinku (1.7.3)\n  * rotp (1.6.1)\n  * rouge (1.7.7)\n  * rqrcode (0.4.2)\n  * rqrcode-rails3 (0.1.7)\n  * ruby-saml (0.8.2)\n  * rubyntlm (0.5.0)\n  * rubypants (0.2.0)\n  * rugged (0.22.2)\n  * rugments (1.0.0.beta8)\n  * sanitize (2.1.0)\n  * sass (3.2.19)\n  * sass-rails (4.0.5)\n  * sawyer (0.6.0)\n  * seed-fu (2.3.5)\n  * select2-rails (3.5.9.3)\n  * settingslogic (2.0.9)\n  * sidekiq (3.3.0)\n  * sidetiq (0.6.3)\n  * simple_oauth (0.1.9)\n  * sinatra (1.4.4)\n  * six (0.2.0)\n  * slack-notifier (1.0.0)\n  * slim (2.0.2)\n  * sprockets (2.12.4)\n  * sprockets-rails (2.3.2)\n  * stamp (0.5.0)\n  * state_machine (1.2.0)\n  * stringex (2.5.2)\n  * systemu (2.6.5)\n  * task_list (1.0.2)\n  * temple (0.6.7)\n  * thor (0.19.1)\n  * thread_safe (0.3.5)\n  * tilt (1.4.1)\n  * timers (4.0.1)\n  * timfel-krb5-auth (0.8.3)\n  * tinder (1.9.3)\n  * trollop (2.1.2)\n  * turbolinks (2.5.3)\n  * twitter-stream (0.1.16)\n  * tzinfo (1.2.2)\n  * uglifier (2.3.2)\n  * underscore-rails (1.4.4)\n  * unf (0.1.4)\n  * unf_ext (0.0.7.1)\n  * unicorn (4.6.3)\n  * unicorn-worker-killer (0.4.2)\n  * uuid (2.3.7)\n  * version_sorter (2.0.0)\n  * virtus (1.0.1)\n  * warden (1.2.3)\n  * wikicloth (0.8.1)\n. @ovalin you might want to run the gitlab check raketasks https://github.com/gitlabhq/gitlabhq/blob/master/doc/raketasks/maintenance.md#check-gitlab-configuration\n. @ovalin you might want to run the gitlab check raketasks https://github.com/gitlabhq/gitlabhq/blob/master/doc/raketasks/maintenance.md#check-gitlab-configuration\n. @ichizok can you document this in the README available configuration options section\nedit: please post a comment after you have updated the PR so that I am notified. Thank you\n. @ichizok can you document this in the README available configuration options section\nedit: please post a comment after you have updated the PR so that I am notified. Thank you\n. @mike-pun you mean ssh key right?\nMake sure you are connecting to the docker-gitlab ssh server. Some users tend to connect to the ssh server running on the host and not the containers ssh-server. The containers ssh server is accessible on the host port mapped to the containers port 22. For example, -p 10022:22 means that the containers is accessible from the host at localhost:10022.\nThe gitlab related logs are all located under the /var/log/gitlab directory of the container. You can exec into the container docker exec -it gitlab bash and inspect the logs at that location.\n. @mike-pun you mean ssh key right?\nMake sure you are connecting to the docker-gitlab ssh server. Some users tend to connect to the ssh server running on the host and not the containers ssh-server. The containers ssh server is accessible on the host port mapped to the containers port 22. For example, -p 10022:22 means that the containers is accessible from the host at localhost:10022.\nThe gitlab related logs are all located under the /var/log/gitlab directory of the container. You can exec into the container docker exec -it gitlab bash and inspect the logs at that location.\n. @mike-pun the auth.log is not generated. You can edit the ssh config to enable the log and do \nbash\nsupervisorctl stop sshd\nsupervisorctl start sshd\n, to apply the changes\n. @mike-pun the auth.log is not generated. You can edit the ssh config to enable the log and do \nbash\nsupervisorctl stop sshd\nsupervisorctl start sshd\n, to apply the changes\n. were you able to fix this issue?\n. I would suspect that the port forwarding is probably not right. If you can share the docker command or the docker-compose.yml file and share some info related to your setup such as docker version, host os, whether boot2docker or some other virtualization is in use, then maybe i would be able to help.\n. @chyuaner thanks for pointing it out. I was pretty certain they had changed the default password. \n. @chyuaner thanks for pointing it out. I was pretty certain they had changed the default password. \n. @LaurensRietveld Its already documented in https://github.com/sameersbn/docker-gitlab#available-configuration-parameters\n. @LaurensRietveld Its already documented in https://github.com/sameersbn/docker-gitlab#available-configuration-parameters\n. You should use the mapping key. So if you want to set the  rails timezone as Europe/Amsterdam, then according to http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html you should set GITLAB_TIMEZONE=Amsterdam\n. You should use the mapping key. So if you want to set the  rails timezone as Europe/Amsterdam, then according to http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html you should set GITLAB_TIMEZONE=Amsterdam\n. The & character is now automatically escaped. If you have manually escaped the & character, then you need to remove it in versions > 8.1.x.\n. The & character is now automatically escaped. If you have manually escaped the & character, then you need to remove it in versions > 8.1.x.\n. these changes are logged in #39 \n. these changes are logged in #39 \n. @jokogr something to do with gitlab upstream. see https://gitlab.com/gitlab-org/gitlab-ce/issues/2052. \n. @ninja- hi, sorry for not looking into this. I am not aware of grsec, looking it up now.\n. @ninja- I am not sure what the command paxctl -cmewhich nodejs` does exactly and why onlynodejs? why notnginxorruby2.1?\n. Now I have an idea of whatpaxctldoes. But the question still remains, why not apply restrictions onnginxorruby2.1or any other daemon processes? why onlynodejs?\n. @ninja- do you see any issues otherwise?\n. can you check now. I have change the flags topaxctl -Cmas per https://en.wikibooks.org/wiki/Grsecurity/Application-specific_Settings#Node.js. Let me know if it does not work as expected\n. closing this issue. I believe it has been resolved.\n. Not sure if this is something that should be handled in the image. closing it. reopen if required.\n. @mmaschenk thanks for the contribution.\n. @jen-c the error indicates that thegitlab-postgresqlcontainer is not running\n. @jiajar gitlab does not allow it. You need to restore on7.0.0and then upgrade to7.12.0. The root user is automatically created when the database is initialized \nfor the first time. If for some reason this did not happen, then can you \ntry deleting the database and starting the container again so that the \ndb is reinitialized. Also delete thetmp` directory from the data volume.\nNOTE: this means you will lose any data that currently exists in the \ndatabase.\nOn Thursday 06 August 2015 10:50 AM, Benny Thompson wrote:\n\nI tried logging in as the root user with default credentials and cannot log in. I am able to create a user and log in as that new user after confirming my email.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/sameersbn/docker-gitlab/issues/400\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. were you able to resolve the issue? can this be closed? \n. were you able to resolve the issue? can this be closed? \n. @jen-c naah.. that comes from gitlab upstream. we do modify the upstream code in the image.\n. @jen-c naah.. that comes from gitlab upstream. we do modify the upstream code in the image.\n. thanks for the fix :+1: \n. thanks for the fix :+1: \n. thanks for the contribution.\n. thanks for the contribution.\n. either ways... it looks like a DNS resolution issue.\n. either ways... it looks like a DNS resolution issue.\n. I used to be able to use https://github.com/grimborg/gitgitlab which \ntalks to gitlab using the API. But I think the project has not been \nupdated to keep up with the changes in Gitlab.\nOn Sunday 16 August 2015 05:00 AM, Patrick Nelson wrote:\n\nHave you done any thing like repo creation through the api and into the\ngitlab container with ssl?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/406.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. I used to be able to use https://github.com/grimborg/gitgitlab which \ntalks to gitlab using the API. But I think the project has not been \nupdated to keep up with the changes in Gitlab.\nOn Sunday 16 August 2015 05:00 AM, Patrick Nelson wrote:\n\nHave you done any thing like repo creation through the api and into the\ngitlab container with ssl?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/406.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. I used to be able to use https://github.com/grimborg/gitgitlab which \ntalks to gitlab using the API. But I think the project has not been \nupdated to keep up with the changes in Gitlab.\nOn Sunday 16 August 2015 05:00 AM, Patrick Nelson wrote:\n\nHave you done any thing like repo creation through the api and into the\ngitlab container with ssl?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/406.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. @pnelsonsr Does this not work? https://gitlab.com/help/api/projects.md#create-project. The API has the option to specify the namespace_id where you would have to specify the id of the group.\n. @pnelsonsr Does this not work? https://gitlab.com/help/api/projects.md#create-project. The API has the option to specify the namespace_id where you would have to specify the id of the group.\n. @pnelsonsr Does this not work? https://gitlab.com/help/api/projects.md#create-project. The API has the option to specify the namespace_id where you would have to specify the id of the group.\n. @pnelsonsr naah... its a POST request. see http://superuser.com/questions/149329/what-is-the-curl-command-line-syntax-to-do-a-post-request\n. @pnelsonsr naah... its a POST request. see http://superuser.com/questions/149329/what-is-the-curl-command-line-syntax-to-do-a-post-request\n. @pnelsonsr naah... its a POST request. see http://superuser.com/questions/149329/what-is-the-curl-command-line-syntax-to-do-a-post-request\n. @pnelsonsr I have not used the Gitlab api's. But from the list the first method should suffice.\n. @pnelsonsr I have not used the Gitlab api's. But from the list the first method should suffice.\n. @pnelsonsr I have not used the Gitlab api's. But from the list the first method should suffice.\n. > I'm not really that good with the certs area. Do you know how to pull the gitlab's server cert exported to pem format, by any chance?\nIf you are still interested, the pem file simply consists of the servers certificate and key. The following command creates the pem file.\nbash\ncat gitlab.crt gitlab.key > gitlab.pem\nThis file can be imported into chrome to trust the server's ssl certificate.\np.s. Since the file contains the servers private key you should keep it secret and/or share it only with trusted parties.\n. > I'm not really that good with the certs area. Do you know how to pull the gitlab's server cert exported to pem format, by any chance?\nIf you are still interested, the pem file simply consists of the servers certificate and key. The following command creates the pem file.\nbash\ncat gitlab.crt gitlab.key > gitlab.pem\nThis file can be imported into chrome to trust the server's ssl certificate.\np.s. Since the file contains the servers private key you should keep it secret and/or share it only with trusted parties.\n. > I'm not really that good with the certs area. Do you know how to pull the gitlab's server cert exported to pem format, by any chance?\nIf you are still interested, the pem file simply consists of the servers certificate and key. The following command creates the pem file.\nbash\ncat gitlab.crt gitlab.key > gitlab.pem\nThis file can be imported into chrome to trust the server's ssl certificate.\np.s. Since the file contains the servers private key you should keep it secret and/or share it only with trusted parties.\n. @brendangibat Can you create a PR with the changes. That would be great.\n@colinbrownec what do you think about this.\n. @brendangibat Can you create a PR with the changes. That would be great.\n@colinbrownec what do you think about this.\n. @brendangibat Can you create a PR with the changes. That would be great.\n@colinbrownec what do you think about this.\n. > I put in some beginning effort for this but didn't do much testing - I can send what I have though.\nsure you can create a WIP PR.\n. > I put in some beginning effort for this but didn't do much testing - I can send what I have though.\nsure you can create a WIP PR.\n. @intirix there really in no way of fixing such issues in the image i think. As sed is used for the substitutions and because certain characters need to be escaped for bash, the onus is on the user to properly escape the variables. I know that this is a tough ask for newbies, the least one can do in avoid using special characters in the password and instead use long alphanumeric strings (hash of some sort).\n. @intirix there really in no way of fixing such issues in the image i think. As sed is used for the substitutions and because certain characters need to be escaped for bash, the onus is on the user to properly escape the variables. I know that this is a tough ask for newbies, the least one can do in avoid using special characters in the password and instead use long alphanumeric strings (hash of some sort).\n. @intirix there really in no way of fixing such issues in the image i think. As sed is used for the substitutions and because certain characters need to be escaped for bash, the onus is on the user to properly escape the variables. I know that this is a tough ask for newbies, the least one can do in avoid using special characters in the password and instead use long alphanumeric strings (hash of some sort).\n. What is the idea behind this PR?\nBesides the docker-compose.yml file is referenced at multiple times in the README. This too would have to be updated.\n. What is the idea behind this PR?\nBesides the docker-compose.yml file is referenced at multiple times in the README. This too would have to be updated.\n. What is the idea behind this PR?\nBesides the docker-compose.yml file is referenced at multiple times in the README. This too would have to be updated.\n. While I agree with @jngermon, I also agree with @thomasf as I have the same issue as he describes but I just use git stash so that it does not bother me. \nFor the benefit of new users, I decided that having the docker-compose.yml was a better choice so that they could simply do a docker-compose up after downloading the file. I am not opposed to renaming the file to docker-compose.yml.dist or docker-compose.example.yml as long as the instructions in the README are also updated to reflect that.\n. While I agree with @jngermon, I also agree with @thomasf as I have the same issue as he describes but I just use git stash so that it does not bother me. \nFor the benefit of new users, I decided that having the docker-compose.yml was a better choice so that they could simply do a docker-compose up after downloading the file. I am not opposed to renaming the file to docker-compose.yml.dist or docker-compose.example.yml as long as the instructions in the README are also updated to reflect that.\n. While I agree with @jngermon, I also agree with @thomasf as I have the same issue as he describes but I just use git stash so that it does not bother me. \nFor the benefit of new users, I decided that having the docker-compose.yml was a better choice so that they could simply do a docker-compose up after downloading the file. I am not opposed to renaming the file to docker-compose.yml.dist or docker-compose.example.yml as long as the instructions in the README are also updated to reflect that.\n. @jngermon this PR seems to have broken the deploy to tutum button. I am considering reverting this PR.\n. @jngermon this PR seems to have broken the deploy to tutum button. I am considering reverting this PR.\n. @jngermon this PR seems to have broken the deploy to tutum button. I am considering reverting this PR.\n. reverted!\n. reverted!\n. reverted!\n. @arun-gupta what is your environment are you using boot2docker on osx. If yes, this is a known issue and there is no workaround that I am aware of. see \n- https://github.com/sameersbn/docker-postgresql/issues/34\n- https://github.com/sameersbn/docker-postgresql/issues/22\nIn case you are using RHEL, you might want to disable SELinux and try.\n. @arun-gupta what is your environment are you using boot2docker on osx. If yes, this is a known issue and there is no workaround that I am aware of. see \n- https://github.com/sameersbn/docker-postgresql/issues/34\n- https://github.com/sameersbn/docker-postgresql/issues/22\nIn case you are using RHEL, you might want to disable SELinux and try.\n. What is your host os? are you using boot2docker or something for your docker host?\n. What is your host os? are you using boot2docker or something for your docker host?\n. well the workaround is not use shared folders for the postgresql data\n. well the workaround is not use shared folders for the postgresql data\n. I believe /Users/arungupta is a shared folder between your VM and Host OS. Instead of using /Users/arungupta use a location on the VM itself which is not mounted from your host , eg. /srv/docker/gitlab/postgresql:/var/lib/postgresql.\nThis means that the postgresql data files will not reside on the Host OS, instead they will be present only in the VM.\n. I believe /Users/arungupta is a shared folder between your VM and Host OS. Instead of using /Users/arungupta use a location on the VM itself which is not mounted from your host , eg. /srv/docker/gitlab/postgresql:/var/lib/postgresql.\nThis means that the postgresql data files will not reside on the Host OS, instead they will be present only in the VM.\n. @arun-gupta you will need to login to the VM and check out what the issue is. Maybe selinux is enabled in the VM, but I am only guessing.\n. @arun-gupta you will need to login to the VM and check out what the issue is. Maybe selinux is enabled in the VM, but I am only guessing.\n. the data directory is chowned before performing any writes. However things like selinux can get in the way of this operation unless the security policies of the directory is updated, see the readme under persistence. In other cases a partially initialized data directory will cause issues in which case it is wise to delete the existing directory before retrying as @cmckni3 indicated.\n. were you able to resolve this?\n. were you able to resolve this?\n. closing this issue. reopen if required\n. closing this issue. reopen if required\n. @quartzinquartz you should configure the SMTP setting using the SMTP_ variables specified in the environment. If you manually edit the smtp_setting.rb file then you would need to restart the unicorn/sidekiq processes using.\nStop using: \nbash\nsupervisorctl stop sidekiq\nsupervisorctl stop unicorn\nStart using:\nbash\nsupervisorctl start unicorn\nsupervisorctl start sidekiq\n. @quartzinquartz you should configure the SMTP setting using the SMTP_ variables specified in the environment. If you manually edit the smtp_setting.rb file then you would need to restart the unicorn/sidekiq processes using.\nStop using: \nbash\nsupervisorctl stop sidekiq\nsupervisorctl stop unicorn\nStart using:\nbash\nsupervisorctl start unicorn\nsupervisorctl start sidekiq\n. @quartzinquartz its not normal, maybe they were emails queued up from your previous attempts.\n. @quartzinquartz its not normal, maybe they were emails queued up from your previous attempts.\n. @quartzinquartz you can check the sidekiq.log to see if you notice anything.\nWhen I add an SSH key here's is what i see:\n```\n$ cd /var/log/gitlab/gitlab\n$ tail -f production.log sidekiq.log\n==> sidekiq.log <==\n2015-08-30T04:27:25.459Z 2955 TID-cuoz4 GitlabShellWorker JID-48ac7ff47803c5cd602db7a5 INFO: done: 0.904 sec\n2015-08-30T04:27:36.422Z 2955 TID-cuoz4 Sidekiq::Extensions::DelayedMailer JID-3424cb4cab377e0e67ced547 INFO: start\n==> production.log <==\nSent mail to sameer@damagehead.com (7374.8ms)\n==> sidekiq.log <==\n2015-08-30T04:27:44.100Z 2955 TID-cuoz4 Sidekiq::Extensions::DelayedMailer JID-3424cb4cab377e0e67ced547 INFO: done: 7.678 sec\n```\nThe mail sending task is actually performed by sidekiq. So if anything is a miss, you should notice it in the sidekiq.log\n. @quartzinquartz you can check the sidekiq.log to see if you notice anything.\nWhen I add an SSH key here's is what i see:\n```\n$ cd /var/log/gitlab/gitlab\n$ tail -f production.log sidekiq.log\n==> sidekiq.log <==\n2015-08-30T04:27:25.459Z 2955 TID-cuoz4 GitlabShellWorker JID-48ac7ff47803c5cd602db7a5 INFO: done: 0.904 sec\n2015-08-30T04:27:36.422Z 2955 TID-cuoz4 Sidekiq::Extensions::DelayedMailer JID-3424cb4cab377e0e67ced547 INFO: start\n==> production.log <==\nSent mail to sameer@damagehead.com (7374.8ms)\n==> sidekiq.log <==\n2015-08-30T04:27:44.100Z 2955 TID-cuoz4 Sidekiq::Extensions::DelayedMailer JID-3424cb4cab377e0e67ced547 INFO: done: 7.678 sec\n```\nThe mail sending task is actually performed by sidekiq. So if anything is a miss, you should notice it in the sidekiq.log\n. @quartzinquartz the issue appears to be certificate verify failed. try adding/changing  openssl_verify_mode: 'none' in your smtp configuration\n. @quartzinquartz the issue appears to be certificate verify failed. try adding/changing  openssl_verify_mode: 'none' in your smtp configuration\n. glad that the issue was resolved.\n. glad that the issue was resolved.\n. @cmckni3 sorry for not reponding earlier. i am not aware of rack attack configurations. The thing is I try to avoid making changes (unless absolutely required) to the default GitLab configs to ease up the maintenance efforts. Avoiding such changes allows me to offer newer images as soon as gitlab makes new releases.\nThis is one of the reasons why I have not provided any way to customize the login screen etc. If possible add your configuration templates by sending a PR to the upstream gitlab project. Which will make it way easier to then support in our image.\n. 8b0511f9edc5d78577f59b2036d1b415f9c9e151 adds parameters to configure rack attack. can you please take a look and confirm that it works for you?\np.s. the rack_attack.rb file from the config templates has been removed since all the parameters are exposed.\n. @ivlis I will be happy to review your PR with this feature.\n. were you able to resolve your issue? can we close this?\n. thanks\n. you mean add_header Strict-Transport-Security should be present in the http headers when using a load balancer with SSL?\n. @istr sorry for the delay. I have been spending time investigating the issue where the HSTS headers are missing from the response. It appears that the reason why the header is missing is that some of the location blocks also have add_header directives. It seems that these will override ant add_header directive in the main server block.\nFor example, in the following block, the add_header X-Accel-Buffering off; from the location / block overrides add_header Strict-Transport-Security \"max-age=31536000';\"; from the server block and as a result nginx does not output the HSTS header.\n``` nginx\nserver {\n  ...\n  add_header Strict-Transport-Security \"max-age=31536000';\";\n  ...\nlocation / {\n   ...\n   add_header X-Accel-Buffering off;\n   ...\n }\n}\n```\nThis is the exact issue that is occuring. To avoid spewing the add_header Strict-Transport-Security directive all over the place, I am just going to move the add_header X-Accel-Buffering directive to the server block as well, like so:\n``` nginx\nserver {\n  ...\n  add_header Strict-Transport-Security \"max-age=31536000';\";\n  add_header X-Accel-Buffering off;\n  ...\nlocation / {\n   ...\n }\n}\n```\nWhat do you think?\n. Can this issue be closed?\n. Making release for 8.0.0. Release 8.0.1 has no code changes. Only some updates in the docs. So I will hold on to the 8.0.1 allowing me to address issues users may face while using the 8.0.0 release\n. Closed by 40156bb2943360e9b54f8d6b1980fd793b42dc19\n. Mattermost is not part of gitlab. The Gitlab omnibus installer simply adds mattermost as an addon. If you want to install mattermost you can use their image https://github.com/mattermost/platform/blob/master/doc/install/single-container-install.md\n. I would just run mattermost from another container instead of adding it inside the gitlab container. I am not aware if there are any good mattermost images currently available. We have one listed by @lazyfrosch above :smile: . \n. @davidwindell let me check what i can do.. either need to revert #409 or create a copy of docker-compose.yml.dist as tutum.yml \n. I am not sure either, but http://stackoverflow.com/questions/2291165/escape-an-ampersand-at-the-start-of-a-yaml-entry says use double quotes.\n. Let me check the container though.\n. I think it confuses the sed substitution .\n. use GITLAB_TIMEZONE=Central Time (US \\& Canada)\n. The & character is now automatically escaped. If you have manually escaped the & character, then you need to remove it in versions > 8.1.x.\n. Gitlab has some info on the subject here https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/update/mysql_to_postgresql.md\n. did you manage to migrate to postgresql?\n. okay.. i will give it a shot and let you know the instructions if i am successfull. \n. Please try these instructions:\nStep 1: Start the posqtgresql container for our GitLab instance\nbash\ndocker run -it --rm --name postgresql \\\n  -v /srv/docker/gitlab/posqtgresql \\\n  -e DB_USER=<POSTGRESQL_DB_USER> -e DB_PASS=<POSTGRESQL_DB_PASS> \\\n  -e DB_NAME=<POSTGRESQL_DB_NAME> \\\n  sameersbn/postgresql\nSubstitute <POSTGRESQL_DB_USER>, <POSTGRESQL_DB_PASS> and <POSTGRESQL_DB_NAME> in the above command to your choosing.\nStep 2: Create another postgresql container for the migration\nNow we start a new postgresql container for the migration, linking it with the existing mysql container and the postgresql container created in the previous step.\nAssuming that the current mysql container is named mysql\nbash\ndocker run -it --rm --name postgresql-migrate \\\n  --link mysql:mysql --link postgresql:postgresql \\\n  sameersbn/postgresql bash\nYou will be dropped into the containers shell.\nStep 3: Install the required packages:\nbash\napt-get update && apt-get install -y ed git python mysql-client\nStep 4: Perform the migration\nReplace the parameters in <> as per your database connection settings.\nbash\ngit clone https://github.com/gitlabhq/mysql-postgresql-converter.git -b gitlab\ncd mysql-postgresql-converter\nmysqldump --compatible=postgresql --default-character-set=utf8 -r gitlabhq_production.mysql -h mysql -u <MYSQL_DB_USER> <MYSQL_DB_NAME> -p\npython db_converter.py gitlabhq_production.mysql gitlabhq_production.psql\npsql -h postgresql -U <POSTGRESQL_DB_USER> -f gitlabhq_production.psql -d <POSTGRESQL_DB_NAME>\nThe above commands will dump the existing mysql database, and migrate it to the new postgresql container. Once done you can exit this container and you should have your gitlab database migrated to the postgresql instance.\nNow all you need to do is update the docker run command for the gitlab instance, linking it with the postgresql container and update the database connection parameters as required.\nreference: https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/update/mysql_to_postgresql.md\n. Please let me know if this resolves the issue. Thanks.\n. did it work?\n. closing issue.\n. If you have few runners then you can just update the url in the runners config to https://git.example.com/ci and get rid of that redirection all together :). You will no longer need to add GITLAB_CI_HOST parameter as well\n. Will add it to the migration guide.\n. Yes, it is required.\n. This parameters was originally used in the Gitlab CI image. In 8.0.0, since the two have been merged this variable is now part of Gitlab CE.\nThe parameter is used by GitLab's CI feature to encrypt any build script variables that you may define. Gitlab automatically generates this when not specified. But since it is a sensitive variable, we don't rely on this auto generated value because the lose of this variable would result in your builds failing and there will be no way to recover this until you have the original value that was set for this variable.\nDue to this nature of the GITLAB_SECRETS_DB_KEY_BASE parameter, I have taken the decision that user should set specify the variable and is resposible for backing it up. \n. There used to be a direct link on the main dashboard. But it seems to have changed. Visit http://git.example.com/ci/ on your installation and you will get the relevant information. Once you have CI enabled for a project you will notice a Builds button for that project among other visual cues.\n\n. were you able to resolve the issue?\n. closing..\n. 5fc883851331eae85a6d777de8372325a1c85f37 resolves this\n. was your issue resolved after increasing the swap file size?\n. @favorinfo The GITLAB_SECRETS_DB_KEY_BASE variable has been added only since version 8.0.0 for the Gitlab CE image. Before that it existed as the GITLAB_CI_SECRETS_DB_KEY_BASE parameter in the GitLab CI image.\nThis variable is used to encrypt build script variables. Loosing/changing this key would mean that any variables that you may have added for your CI jobs cannot be decrypted and hence would not be usable.\nThe build script variables can be used to encrypt sensitive information such as usernames and passwords in your ci jobs and can be added at Continuous Integration > project > Variables, which become available as environment variables in you build jobs.\n. @pnelsonsr I have now added  a note in the upgrading section\n. marking this issue resolved.\n. p.s. https://github.com/sameersbn/docker-gitlab/blob/master/assets/setup/install.sh#L8 adds the ppa for trusty. If you change the base image to anything other than trusty, then you would need to update the line appropriately.\nedit: if you use the utopic base image you may not require the ppa if utopic packages golang >= 1.2. \n. @STOIE are you able to build the image without any changes?\n. Great. I think we can close this issue. refer https://github.com/sameersbn/docker-gitlab/issues/445#issuecomment-144274487\n. will commit this fix tomorrow.\n. can you try the latest build and let me know if it works for you? I will tag a new release upon confirmation. Thanks\n. Please be advised  that http clones with relative_urls is broken in 8.1.0.\n. 8.1.0-1 fixes the https/http cloning issue when GITLAB_RELATIVE_URL_ROOT is used.\n. @fzerorubigd thanks for the info. I will try this out and eventually add it as part of the image.\n. got it. will add it to the app:sanitize command then\n. not sure about this. I have not used hooks myself. \n. hi. have never used/configured LDAP before. So i am not sure what stuff should be extracted using the link\n. please send a PR with the change.\n. @frenchbeard please go ahead with your PR. thanks.\n. Yea.. there are couple of small base images. I have minimal issues during development and production I have stuck with the ubuntu base image.\nI was planning of doing a POC with the alpine base image. But there are a couple of things i need to get done first, one of them is to switch to s6 for the process supervisor.\n. correction: alpine is musl based.\n. > Are you compiling gitlab and its resources or using pre-compiled binaries?\nGitLab is mostly ruby, so there is not compilation. But in 8.0 they have added a http daemon written in go. so that needs to be compiled.\n. I'm not sure that switching to alpine is a good idea in terms of maintenance. Also I don't think switching to alpine is going to have any effect on RAM usage.\n. you mean the image should support mounting  NFS volumes?\nIf yes, then IMO that is not the right solution. Instead you should create a data-only container which mounts the NFS volume and then use the volumes-from option to import the NFS mount point into the GitLab container.\n. i agree, the discussion in the ycombinator link is something completely different. does not apply here.\n@cusspvz i dont completely understand your use case. Having all gitlab data on a centralized NFS server and mounting it as a volume does not work? What is the use of BTSync here.\n. @abilashks did you try to resolve the issue using the suggestion by @Allineer.\nRegarding SSH, I do not know of any solution to load balance them. Also note that I do not know if GitLab will handle concurrent writes to the repos when there are more than one instances. \n. p.s. please take a look at https://about.gitlab.com/high-availability/\n. The referenced commit pings the redis-server to ensure that it is reachable and responding,\n. breaks the grammer. instead we could just rename the section to Data Store\n. @chengweiv5 that is true a backup can only be restored on the same gitlab version. You can upgrade to Gitlab 8.0 only from v7.14.3. So you first need to upgrade your existing setup to v7.14.3 and then upgrade to v8.0.4. There is no requirement to restore a backup while upgrading. The backup is only a fail-safe so that you can rollback if things go south.\n. the CI migration guide has such a requirement http://doc.gitlab.com/ce/migrate_ci_to_ce/README.html\nI just assume thats the case for GitLab. If you are facing issues migrating to 8.0 from 7.9.2, then I would recommend upgrading to 7.14.3 first.\n. @favorinfo do you see a repositories directory in /home/git/data? If yes, inspect the contents to see ensure that your repos exist.\nNow, stop your gitlab container and start again adding app:sanitize at the end of the docker run command. It will ensure that all files and directories have the right permissions. Once completed, start gitlab normally and check if the issue is resolved.\n. yea.. they will be like /home/git/data/repositories/docker/gitlab.git. If you drop into the directories you should be able to do a git log, git tag, etc. If these commands work, means your repos are there and probably its only a permissions issue. Nothing that app:sanitize can't resolve.\n. @favorinfo you could try that.\n. @favorinfo after the rollback, please check if you can browse  the repos\n. I don't think that is the proper solution. The repos in the \nrepositories directory are bare repos. The ones in gitlab-satellites \nare not.\nIn the worst case, I would use the repos from gitlab-satellite and \npush them to the master using git push instead of doing what you just \ndid :)\nOn Friday 09 October 2015 01:33 PM, favorinfo wrote:\n\nI copy all the files in |gitlab-satellites| to |repository| and use\n|/sbin/entrypoint.sh app:sanitiz| , then solved all the problems.\nthx!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/456#issuecomment-146790931.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. app:sanitize will now (properly) set the ownership and permissions of the uploads/ directory\n. please add -e DEBUG_ENTRYPOINT=1 in the environment. It will show you with sed substitution is erroring out. You will need to escape characters to resolve it.\n. @hodrigohamalho technically it can happen for any variable but generally happens in password fields. You need to escape such characters.\nAs for the issue you reported. GITLAB_PORT is expected to have a port number in the range 1 - 65535. Openshift seems to be creating the variable GITLAB_PORT=tcp://172.30.185.58:22 due to which the sed substitution errors out.\nMaybe it is automatically setting the app name to gitlab and creating a variable named GITLAB_PORT in the containers environment. If this is the case then try setting the application name to something else, eg. gitlab-app so that these variables do not conflict with the variables the container expects. i think this is done using --name argument with oc. I have not used openshift before so I cannot say for sure.\n. closing issue. reopen if required.\n. the builds on quay.io are also automated builds.\n. needed to update the postgresql image version.\n. yea. probably is related to that.\nThere is a patch in one of issue for this image. I will apply it tomorrow and update this thread.\nI was hoping they would have fixed it in upstream by now :(\n. can you try the latest build and let me know if it works for you? I will tag a new release upon confirmation. Thanks\n. initiated build of tag 8.0.4-2\n. Last time I checked:\n- the assets had to be recompiled if GITLAB_RELATIVE_URL_ROOT is changed. \n- required a DB connection for the compilation procedure to execute\n  Due to these reasons, this step is executed at runtime.\nI don't know if things have changed. Will need to check.\n. nope.. it has to be recompiled like it is being done now.\n. @electricmonk gitlab is started in your tests? \n. @electricmonk ok. i'll check if the assets can be precompiled.\n. @electricmonk @ninja- i think it is now possible to compile the cache at build time. Have not tested it yet. but we may have something here. Will update you guys if there is any progress on this.\n. The assets can now be compiled at build time. The referenced commit does this. You should now have much faster container startup time.\n. @electricmonk fixed by PR #468. Please try with the new latest tag.\n. @electricmonk that is not possible. database migration requires a database connection which is a runtime thing.\n. schemas change with every release. using pre-initialized data volumes like you mentioned (compose file) is one option for your use case to speed up the tests.\n. but i believe the bulk of that startup time would be attributed to gitlab and its components starting up. migration might not take that long.\n. dunno, just used whatever the gitlab:check raketask suggested.\n. oh yeah.. thats a mistake. will fix it soon.\n. @dg-ratiodata please provide more details about your setup and your issue. Please refer to the issues section of the readme and provide all the relavant informaton.\nI use Gitlab with HTTPS and have no issues using gitlab-ci-multi-runner. \n@18601673727 Gitlab Inc. publishes a docker image at https://hub.docker.com/r/gitlab/gitlab-ce/.\n. @dg-ratiodata btw, you can override the default nginx configs with your own. see https://github.com/sameersbn/docker-gitlab/issues/51#issuecomment-41369496\nRefer to #11 for additional information\n. @dg-ratiodata thanks for the information. I am not really familiar with this issue and/or the possible resolution. If you come across something that can be made part of this image to resolve the issue, then please do let me know.\n. @dg-ratiodata I use GitLab CI itself.\nBTW, i use https with my GitLab installations and have no issues running the runner. As you rightly pointed this has something to do with the certificate chains.\n. @dg-ratiodata i use the shell executor for my needs.\nBut have tested the docker executor by exposing the docker socket to the container. see https://github.com/sameersbn/docker-gitlab-ci-multi-runner/issues/5 for additional info\n. closing issue. reopen if required\n. In that case we could run all of the app:sanitize commands at every \nstart. Issue is when you have a large number of repos or in this case \nuploads, this step will take a long time to complete. This is okay if \nthe permissions of an existing installation are busted for some reason. \nBut generally this is not going to be the case. So adding this to the \nregular start of the image would been that everyone will have to face \nthe increase in startup time.\nOn Tuesday 13 October 2015 11:56 AM, Allineer wrote:\n\nso that this step does not effect the start up time of the container.\nIf we have the |${GITLAB_DATA_DIR}| already (not first container\nstart), by changing permission we can to prevent any notices.\nWhy not?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/465#issuecomment-147617842.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. Users already complain about the asset compilation step resulting in \nhigh startup times. Even though this occurs only on the first boot or \nafter an upgrade.\nOn Tuesday 13 October 2015 12:26 PM, Allineer wrote:\n\nClosed #465 https://github.com/sameersbn/docker-gitlab/pull/465.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/465#event-433695278.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. @LordFPL  you can override the default nginx configs with your own. see https://github.com/sameersbn/docker-gitlab/issues/51#issuecomment-41369496\nRefer to #11 for additional information\n. @LordFPL Using this method you dont have to rebuild the image. you only edit the nginx config and place them at config/nginx/ in the data volume. When the container is started it will see that you have specified your own nginx config and will override the default with yours. see https://github.com/sameersbn/docker-gitlab/blob/master/entrypoint.sh#L370-L379\nIf i understand right, you are editing the nginx config in the source, rebuilding the image and deploying your build. The method mentioned in #11 does not require you to rebuild the image. You can just override whatever configs you want my placing the overrides in the config directory of the data volume.\nIf you have any problems with this do let me know.\n. keep in mind that when the base nginx template changes, you will need to update your template as well. You can check this on github using the https://github.com/sameersbn/docker-gitlab/compare/, eg https://github.com/sameersbn/docker-gitlab/compare/8.0.4-1...8.0.5\n. thanks for the PR.\n. @maximino The message Faraday::Error::ConnectionFailed (getaddrinfo: Name or service not known): means that the DNS resolution is not happening in the container. Please check your DNS addresses configured on the container. You can override the defaults using --dns flag on the docker run line.\nHowever, I am trying to check if the import from GitHub is working. So far, seems to be broken. Checking further.\n. @maximino the import works. only thing you might want to do is, import each project individually instead of hitting \"Import All\". While the \"Import All\" feature does work, I would suggest manually import each project individually, wait for the import to finish before importing the next. You may decide to choose \"Import All\", that's your choice.\n. the import all option is available once you click the \"GitHub\" bottom that is seen in the screenshot. Maybe the oauth integration is not setup correctly. Are you able to login to gitlab using github oauth?\n. Just checked this on a production system running quay.io/sameersbn/gitlab:8.0.5 and had no issues cloning the repo using the https:// url. This could be an issue with the load balancer. But you can try looking at the logs on /var/lib/gitlab/ to see if you notice anything in there.\n. @mikew i do the same without problems. Are you using a relative_url by any chance as that can cause issues,\n. @mikew gitlab gitlab-git-http-server 0.3.0 is not compatible with GitLab 8.0.x. Please see the changelog https://gitlab.com/gitlab-org/gitlab-git-http-server/blob/master/CHANGELOG\n. Oh sorry something is a miss. will make a new point release.\n. can you guys try with 8.0.5-1.. Build should be ready in a couple of minutes.\n. After the GITLAB_GIT_HTTP_SERVER_VERSION variable was added and fixed to 0.2.14, i forgot to make a release.\n. @mikew something wrong with quay.io. the pull will work.\n. glad that you resolved the issue.\n. If you are migrating from GitLab CI to the Gitlab 8.0, then please refer to the migration document https://github.com/sameersbn/docker-gitlab/blob/master/CI_MIGRATION.md\nIf you were not using GitLab CI before and want to begin using the integrated CI, then please refer to the GitLab documentation http://doc.gitlab.com/ce/\n. no internal redis.\n. There are only two env params with respect to CI\n- GITLAB_NOTIFY_ON_BROKEN_BUILDS\n- GITLAB_NOTIFY_PUSHER\nYou can find the details here https://github.com/sameersbn/docker-gitlab#available-configuration-parameters\n. Prior to 8.x.x, GitLab and CI were separate packages and typically users would host them on separate sub-domains. Now they are one, so you don't have to create a separate sub-domain, the CI feature is available at the /ci path of GitLab. To make it easier for existing users to continue using their runners without changing the CI server path you have to option of creating a redirection. This is available in the image as the variable GITLAB_CI_HOST. You can use it, but it only means that there will be redirections  occurring before your runners can reach the CI server\n. sorry for not responding earlier. I will try to get this in the image before the next release.\n. No idea. Tested it locally and seems to work. Are you using the latest version 8.0.5-1?\n. ps. please try with newer versions of the image to see if it resolves the issue.\n. did you add the certificate key to ca.crt? see https://github.com/sameersbn/docker-gitlab#installing-trusted-ssl-server-certificates\n. @ulrichSchreiner That should be fine. Do you see any issues?\n. Can you try the quickstart instructions to make sure it works?\n. :+1: Glad to hear that you resolved the issue. I myself have not deployed gitlab in  a VM, so would not know much.\n. build should be ready in a couple minutes.\n. @mikew  thanks for helping out. Much appreciated :+1: \n. no worries... i have a working copy. I will apply the changes on top of this PR.\n. seems that assets need to be precompiled when relative url is used. will try to figure out a fix.\n. 8.1.0-2 fixes this issue by recompiling the assets when GITLAB_RELATIVE_URL_ROOT is used. This means that the container will take a little longer to start for the first time or after an upgrade. When you update, please delete the tmp directory from the data volume before starting the container. This automatically happens on new GitLab releases not on point releases. Since this is a point release you will need to remove it manually.\n. @jbaxley are you sure? can you share the details of the behaviour your seeing? \n. Can you share your docker-compose.yml so that I can reproduce the issue?\nI have tested successfully using:\n``` yaml\npostgresql:\n   restart: always\n   image: sameersbn/postgresql:9.4-11\n   environment:\n     - DB_USER=gitlab\n     - DB_PASS=password\n     - DB_NAME=gitlabhq_production\n   volumes:\n     - /srv/docker/gitlab/postgresql:/var/lib/postgresql\ngitlab:\n   restart: always\n   image: sameersbn/gitlab:8.3.2\n   links:\n     - redis:redisio\n     - postgresql:postgresql\n   ports:\n     - \"10080:80\"\n     - \"10022:22\"\n   environment:\n     - DEBUG=false\n - TZ=Asia/Kolkata\n - GITLAB_TIMEZONE=Kolkata\n\n -\n\nGITLAB_SECRETS_DB_KEY_BASE=r73WWLcc4z3pkRqhp3w4HcXjLdtgcm7JJFvWF3K74tFrKfRFR7fXC9Pf3bfw4H3K\n - GITLAB_HOST=git.example.com\n - GITLAB_PORT=80\n - GITLAB_SSH_PORT=10022\n - GITLAB_RELATIVE_URL_ROOT=/gitlab\n\nvolumes:\n     - /srv/docker/gitlab/gitlab:/home/git/data\nredis:\n   restart: always\n   image: sameersbn/redis:latest\n   command:\n     - --loglevel warning\n   volumes:\n     - /srv/docker/gitlab/redis:/var/lib/redis\n```\nOn Monday 11 January 2016 11:00 PM, jbaxley wrote:\n\nWhen I log into my gitlab I see that the icons are just blocks and when\nlooking at the webdev tools that the server is trying to load files from\nserver/assests and not from server/gitlab/assests. It doesn't appear\nthat the workhorse is recompiling the assests for use with the new\nrelative_url_root path.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/481#issuecomment-170626550.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. > i'm not using the docker - I'm using the omnibus installer.\nIn that case you are reporting the issue at the wrong place. Please report your issue at the upstream gitlab project.\nThe sameersbn/gitlab docker image installs GitLab from source. I have no experience using the omnibus installer or how to configure relative_url access properly while using it.\n. hmmm... thats weird\n. @danshaffer wasn't aware. Thanks for letting me know. Will update the guide in a bit.\n. @carukc Please use the SMTP_ENABLED=true syntax or quote the true values as @lazyfrosch indicated. This may be an issue with docker-compose. I am not sure.\n. @consultantRR can you try removing the 8.1.0 image and repulling it and then try creating a backup? If that does not work the see #191 \n. the threads says that removing the repo fixed the backup issue, in your case this is the foo repo. you can recreate the repo later.\n. were you able to resolve the issue?\n. Can you try doing a app:sanitize before performing the restore operation? If that does not work the please try deleting and repulling the image from the docker hub before retrying?\n. seems like you are using journald logging driver. see https://docs.docker.com/reference/logging/journald/. Please check. \nedit: I tested you docker-compose.yml file and had no problems using it. Can you try removing the the quay.io/sameersbn/gitlab:8.1.2 and repulling it, just in case it has gone corrupt.\n. @jave it could be that something on the host is not allowing the connection. maybe --icc=true is set on the docker daemon due to which the two containers are not allowed to communicated. see https://docs.docker.com/articles/networking/#between-containers.\nIf that is not the case, then maybe selinux or some other thing is not allowing the communication.\nps. make sure iptables is running on the host.\n. > gitlab_1 | + /usr/lib/postgresql/9.4/bin/pg_isready -h 172.17.0.37 -p 5432 -U gitlab -d gitlabhq_production -t 1\nThis is a loop that check the connection to the database server. It tries 60 times with an interval of 1 sec between each attempt. This is ok..\nThe problem should most probably be related to selinux. It can be such a bitch sometimes :anger:.\n@pnelsonsr can you help please? I am sure you have come across this issue on fedora.\n@jave can you please state your fedora version, docker version, etc.\n. > I had to use the external postgres/redis conf options, except redis and pg are running in containers rather than being external\nWhat do you mean?\n\nI also had to chown the gitlab repo dir, for some reason. they were owned by root. Im not sure why that happened.\n\nThis is selinux doing its thing. Before starting the container did you do,\nbash\nmkdir -p <host-volume-path>\nsudo chcon -Rt svirt_sandbox_file_t <host-volume-path>\nThis applies some selinux security policies on the host volume. See the readme.\n. The problem is that the gitlab container cannot communicate with the redis and postgresql containers. This issue will surely resolved if these services are running directly on the host. Issue is can we figure out why this communication is not happening.\nThere are two things that come to my mind, selinux or iptables. Can you temporarily disable selinux and check if the communication is allowed. If disabling selinux does not resolve the issue, then it definitely is an iptables thing.\nDockers iptables configuration generally works out of the box, but if you add you own custom rules and stuff it may not work as-is and may require a fair bit of debugging.\nCan you try adding the following iptables rules, not sure if it'll work but just give it a shot.\nbash\niptables -A POSTROUTING -s 172.17.0.0/24 ! -d 172.17.0.0/24 -j MASQUERADE\niptables -A POSTROUTING -s 172.17.42.0/24 ! -d 172.17.42.0/24 -j MASQUERADE\nI would love to try and get this resolved locally, but i dont have access to a F23 system or VM.\n. okay you need to follow this issue https://github.com/docker/docker/issues/14396. Should help you get this resolved. If you get it resolved then please mention the resolution here for the benefit of other users. try the iptables recommendations before switching to docker packaged by Docker Inc.\n. closing..\n. > in github my callback url is\n\nhttps://mydomain.com\n\nThis sounds about right.\nI have the following in my yaml file\nyaml\n    - OAUTH_ENABLED=true\n    - OAUTH_ALLOW_SSO=true\n    - OAUTH_BLOCK_AUTO_CREATED_USERS=false\n    - OAUTH_GITHUB_API_KEY=xxxxxxxxxxxxxxxx\n    - OAUTH_GITHUB_APP_SECRET=yyyyyyyyyyyyyyyyyyyyyyy\nAnd it all works. Just need to click the GitHub icon to login.\nPlease refer to http://doc.gitlab.com/ce/integration/github.html for instruction to register GitLab on GitHub.\n. what was the problem with GITLAB_HOST?\n. @kalesastha i believe its because you have trailing spaces in your envfile. Please remove all trailing spaces from the envfile before retrying.\nAlso, I could not help but notice that your DB_HOST parameter is set to localhost. This definitely is not going to work. Setting this value means that the mysql server is running inside the container, which it definitely is not.\nLastly, mysql is not recommended for GitLab. Use at your own risk.\n. @kalesastha any updates? can we close this issue?\n. @zedtux thanks for the info. will add it to the docs\n. Please make sure the system has more than 1GB of available RAM.\n. was the issue resolved?\n. closing the issue for now. reopen if required.\n. I don't think it is advisable to move /var/lib/docker like that. You should have disabled startup of docker from the boot sequence, restarted the host and then moved /var/lib/docker (using rsync -a).\nInstead of creating a symlink you can specify --graph=/my/new/path/ to the docker daemon arguments in /etc/default/docker on ubuntu hosts. \nGetting back to your issue. Looks like during the move, some file/directory permissions have changed which is causing the permission issue in the gitlab container. There is no way for me to tell what is causing the issue and how to resolve it as-is, my suggested resolution would be to remove the gitlab image and pull it again. \nFurther, to be on the safest side, I would suggest deleting all your existing docker images and repulling all of them again. If you decide to go this route, then stop docker from the boot sequence, reboot, completely delete the location of the new graphs directory, update the docker daemon flags to point to the new graphs location, start docker and pull all images.\n. I am not sure what the problem could be. But can you try running the container with the app:sanitize command to make sure that are no permission issues at play?\n. also can you take a look at this issue in case there are some similarities with your environment https://bugs.launchpad.net/ubuntu/+source/openssh/+bug/1254085\n. will try out your command but note that I am only using vanilla docker (no puppet and stuff). Will let you know how it goes.\n. noticed --net bridge in the docker run. did you intend to use this option?\n. for testing I used the following docker-compose.yml file\n``` yaml\npostgresql:\n  image: sameersbn/postgresql:latest\n  environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n  volumes:\n    - /tmp/gitlab/postgresql:/var/lib/postgresql\ngitlab:\n  image: sameersbn/gitlab:8.1.4\n  links:\n    - redis:redisio\n    - postgresql:postgresql\n  ports:\n    - \"10080:80\"\n    - \"10022:22\"\n  environment:\n    - DEBUG=1\n    - USERMAP_UID=600\n    - USERMAP_GID=600\n- GITLAB_SECRETS_DB_KEY_BASE=qK9nvsxks7hfqzCgbxqq7fWxJRhMNfthPfXRvhtdWwzXXpVzWdJMqMjck9dsadSad\n\n- GITLAB_HOST=git.example.com\n- GITLAB_PORT=10080\n- GITLAB_SSH_PORT=10022\n\nvolumes:\n    - /tmp/gitlab/gitlab:/home/git/data\nredis:\n  image: sameersbn/redis:latest\n  volumes:\n    - /tmp/gitlab/redis:/var/lib/redis\n```\nI had no problems using git over ssh. Can you try using the default docker0 network instead of the bridge network. I too believe this could be a networking issue.\n. This is very unusual. Can you share a sample docker run command or docker-compose.yml so that I can reproduce this issue? Also please state the image version in use. Thanks.\n. I tested using \nbash\nwget https://raw.githubusercontent.com/sameersbn/docker-gitlab/master/docker-compose.yml\ndocker-compose up\nand faced no such issue, can you please try the same?\nAlso, why do you have the following mounts in your docker run command\nbash\n-v \"/mnt/cache/appdata/gitlab-ci-runner/\":\"/etc/gitlab-runner\":rw \\\n-v \"/mnt/cache/appdata/postgresql\":\"/var/lib/postgresql\":rw \\\n-v \"/mnt/user/appdata/gitlab/etc/nginx/sites-enabled\":\"/etc/nginx/sites-enabled\":rw \\\n. > master has more commits, than 8.1.4 tag release.\nThe repo underwent a  code reorganization. No release has been made after this yet.\nwill try going from 8.1.3 -> 8.1.4\n. Here's what i tried.\nLaunch gitlab 8.1.3 using docker-compose\nbash\nwget https://raw.githubusercontent.com/sameersbn/docker-gitlab/8.1.3/docker-compose.yml -O docker-compose.8.1.3.yml\ndocker-compose -f docker-compose.8.1.3.yml up -d\nStop and remove the container.\nbash\ndocker-compose -f docker-compose.8.1.3.yml stop\ndocker-compose -f docker-compose.8.1.3.yml rm -f\nLaunch 8.1.4 container\nbash\nwget https://raw.githubusercontent.com/sameersbn/docker-gitlab/8.1.4/docker-compose.yml -O docker-compose.8.1.4.yml\ndocker-compose -f docker-compose.8.1.4.yml up -d\nI did not see the mentioned issue.\n. will check it wilth relative url option. can you delete the gitlabe vhost file and start the container with -e DEBUG_ENTRYPOINT=1 option. It will print all the commands being executed. This will provide vital info about why and when that file is being generated.\n. Checked it wilt relative_url option.. no issue seen.\n. also checked with the latest tag, still no issues. please run container with -e DEBUG_ENTRYPOINT=1 and send me the logs.\n. Cool.\nOn Friday 20 November 2015 08:14 PM, Jay wrote:\n\nI'm sending them to your email just in case there's something sensitive in\nthem. You should have the email shortly.\nOn Fri, Nov 20, 2015 at 9:43 AM, Sameer Naik notifications@github.com\nwrote:\n\nalso checked with the latest tag, still no issues. please run container\nwith -e DEBUG_ENTRYPOINT=1 and send me the logs.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/498#issuecomment-158419189\n.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/498#issuecomment-158419583.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. Found the issue. Please test with the latest tag once the build is ready. watch for the build status here https://hub.docker.com/r/sameersbn/gitlab/builds/. It could take a while of the build.\n. @jshridha thank you for effort in helping find and squash this bug. \n. This is a docker/iptables/host issue. Not related to this container image in particular. From the logs is appears that iptables cannot find the DOCKER chain or it does not exist. Please see https://github.com/docker/docker/issues/10218 for some ideas or possible solutions on this issue.\n. p.s. If you are able to resolve the issue, then please let us know the resolution for the benefit of other users that may face the same issue. Thanks/\n. > Ideally, if your scripting can be updated to check for the existence of the DOCKER chain in the nat table and create it if not found, that would save an extra manual step\nThis is a configuration on the host. We do not and cannot alter any host configuration directly.\nIf I understand correctly, when docker is installed it automatically creates the DOCKER chain, I don't know why this was not created in your case, maybe because you are using centos (i am not sure).\n\nI had to specify as: America\\/Los_Angeles\n\nGITLAB_TIMEZONE is used to set the timezone on the rails app. This is a mapped value as listed here http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html. In your case if you wanted to set the timezone to America/Los_Angeles you should set this value to Pacific Time (US & Canada) while escaping the & character so that sed is not confused. In short GITLAB_TIMEZONE=Pacific Time (US \\& Canada) is what you should set.\nAs an aside, the TZ variable in the docker-compose.yml is a bash environment variable. This should be set to America/Los_Angeles like you normally would. This basically effects the schedule of the cron jobs so that the jobs execute relative to your local time, which otherwise is as per the GMT time.\n. The & character is now automatically escaped. If you have manually escaped the & character, then you need to remove it in versions > 8.1.x.\n. @mangoxide the /etc/ssh/ssh_host_*_key and /etc/ssh/ssh_host_*_key.pub get generated by dpkg-reconfigure openssh-server if they do not exist. Typically, this should happen only on the first run of the image, because once the keys are generated that block will never get executed.\nThis is the code block in question https://github.com/sameersbn/docker-gitlab/blob/8.1.4/entrypoint.sh#L321-L334. You will notice that at the end of the code block sed -i 's,HostKey /etc/ssh/,HostKey '\"${GITLAB_DATA_DIR}\"'/ssh/,g' -i /etc/ssh/sshd_config is executed which changes the location of the ssh keys to /home/git/data/ssh.\nWhat has occurred in your test is that the keys were generated, the moved and the sshd_config updated. But for some reason the files moved to /home/git/data/ssh did not persist (looks like the fs was not written out before you pulled the plug), but the changes in /etc/ssh/sshd_config remained. As a result dpkg-reconfigure openssh-server is not generating the keys in the expected location and as a result the mv errors out.\nThe quickest way to resolve this is to do a docker-compose rm -fv before doing docker-compose up again. I will perform some tests to check if this can be handled.\n. can you drop the LDAP parameters and try again. Maybe LDAP config is not right.\nYou may also try removing the docker images and repulling it.\n. for the benefit of other users can you please mention what was the resolution?\n. PostgreSQL recommended for GitLab http://doc.gitlab.com/ce/install/database_mysql.html. Please consider using postgresql to avoid problems in the future.\n. @setiseta for the sake of testing can you try create a release branch without the / and check if it works? I will try to check it locally as well.\n. Yes.. i think its a gitlab issue too. wanted to be sure.\nCan you report the issue upstream?\n. :+1: \n. :+1: Thanks.\n. I have not tried it but I think what @xueshanf suggests is correct.\nYou may have to upgrade to 7.14.x before migrating to 8.0.x and then to the most recent version.\nGitLab made some major changes in the 8.0.x release with the additional requirement that you could only upgrade to it from 7.14.x.\nI don't know if you can go directly from 7.14.x to 8.2.0. I will check and let you know.\n. I tried upgrading from 7.8.1 -> 8.2.0 and had no issues at all. I used the sample docker-compose.yml for the tests.\nYou need to follow the 7.8.1 -> 8.0.x -> 8.2.x upgrade path only if you were using the GitLab CI container (FMI: https://github.com/sameersbn/docker-gitlab/blob/master/CI_MIGRATION.md).\nAssuming that you are not using GitLab CI, I do not see any reason why the migration would fail. All I can suggest is to remove the image and repull from DH. Sometimes the image seems to get corrupted during the pull.\n. @liquid did you follow the 7.8.1 -> 8.0.x -> 8.2.x upgrade path to resolve the issue? If yes, do you use GitLab CI?\n. > I did upgrade via 7.8.1 -> 7.14.3 -> then wen straight to 8.2.0\nThen I should probably document this in the README. My basic test allowed me to go straight from 7.8.1 -> 8.2.0. Maybe it causes issues when there are projects in system. Thanks for confirming this.\n\nalthough I've read somewhere that CI is now built in?)\n\nYes, CI is merged into GitLab proper and there is no longer a  separate CI component, its all integrated. You only need to setup runners to complete the CI pipeline.\n. Also could you document OAUTH_SAML_LABEL in the README?\n. There is no need to close this PR. You can amend to the commit \nbash\ngit add ...\ngit commit --amend\nand force push \nbash\ngit push -f ...\nand this PR will get updated with your changes.\n. no problemo.\n. Since you are using a load balancer to add the SSL support, Gitlab will serve requests only on port 80. When a connection is made from the load balancer to the gitlab backend it needs to see the request coming from https. If you are using nginx as the load balancer this can be done using proxy_set_header X-Forwarded-Proto https;\nFollowing is the config that i use on my nginx load balancer. Hope you find it useful\n``` nginx\nupstream gitlab {\n  server 172.17.0.1:10080 fail_timeout=0;\n}\nlet gitlab deal with the redirection\nserver {\n  listen 80;\n  server_name git.example.com;\n  server_tokens off;\naccess_log /var/log/nginx/gitlab_access.log;\n  error_log /var/log/nginx/gitlab_error.log;\nroot /dev/null;\n  client_max_body_size 20m;\nlocation / {\n    proxy_read_timeout 300;\n    proxy_connect_timeout 300;\n    proxy_redirect off;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header X-Frame-Options SAMEORIGIN;\n    proxy_pass http://gitlab;\n  }\n}\nserver {\n  listen 443 ssl spdy;\n  server_name git.example.com;\n  server_tokens off;\naccess_log /var/log/nginx/gitlab_ssl_access.log;\n  error_log /var/log/nginx/gitlab_ssl_error.log;\nroot /dev/null;\n  client_max_body_size 20m;\nssl on;\n  ssl_certificate /etc/nginx/ssl/git.example.com.crt;\n  ssl_certificate_key /etc/nginx/ssl/git.example.com.key;\n  ssl_verify_client off;\nssl_ciphers \"ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4\";\n  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n  ssl_prefer_server_ciphers on;\n  ssl_session_cache shared:SSL:10m;\n  ssl_session_timeout 5m;\n  ssl_dhparam /etc/nginx/ssl/dhparam.pem;\nadd_header Strict-Transport-Security max-age=31536000;\nlocation / {\n    ## If you use https make sure you disable gzip compression\n    ## to be safe against BREACH attack.\n    gzip off;\nproxy_read_timeout 300;\nproxy_connect_timeout 300;\nproxy_redirect off;\nproxy_set_header Host $http_host;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header X-Forwarded-Proto https;\nproxy_set_header X-Frame-Options SAMEORIGIN;\nproxy_pass http://gitlab;\n\n}\n}\n``\n. @djskinner The container will only listen on port 443 if you install the ssl certificates in the container https://github.com/sameersbn/docker-gitlab#installation-of-the-ssl-certificates. When using a load balancer this is not required since the load balancer will proxy SSL requests to the gitlab container over plain http. In short, in your case, the container is only listening on port 80. I think the issue may be because of the use oflocalhost` to access the backend container.\nP.S. I am using a gitlab container behind a nginx load balancer that adds the SSL support, the config of which I have already shared. I tested the curl command curl -H \"X-Forwarded-Proto: https\" http://172.17.0.1:10080/users/signin and it does not work that way (i am redirected). Works perfectly fine through the load balancer though.\n. You should set GITLAB_PORT to 443 to ensure the https clone urls are right.\nOn Nov 23, 2015 11:01 PM, \"djskinner\" notifications@github.com wrote:\n\nThanks for taking the time to explain this to me. I had read the\ndocuments but clearly didn't fully understand. I now have my load balancer\nrunning on 443 with HTTPS enabled. The load balancer forwards to port 80.\nGITLAB_HTTPS=true and GITLAB_PORT=80 and everything is now working as\nexpected. Thanks again!\n\u2014\nReply to this email directly or view it on GitHub.\n. The latest build is generated from the master. This is the development build and its use is not always recommended.\n\nWhen users report issues, it is easier for them to tell the version that they are using which allows us to test with the same version avoiding a lot of back and forth.\nI do not see anything good coming out of this change.\n. From my understanding this is an issue with overlay and/or docker. There is nothing that can be done in the image to fix this. Only solution i can suggest is switching to another storage driver or wait for the respective project to resolve the issue.\nIf there is anything that can be done in the image to fix it then please let me know.\n. @xeor can you try the latest tag (after its ready) from DH. It might help getting around this issue. Watch the build status here https://hub.docker.com/r/sameersbn/gitlab/builds/ :smile: \n. > Don't know why mine is trying to delete them\nIts because you are using the GITLAB_RELATIVE_URL_ROOT option.\nSadly there is no workaround for this.\n. @xeor I can only suggest waiting for docker/overlayfs to resolve this issue :smile: \n. perfect!\n. thanks for pointing it out. added a temporary fix for now.\nWill evaluate the cases and make a proper fix as needed :smile: \n. please add DEBUG=1 in the environment of the gitlab container to see thats going on.\n. it indicates that the gitlab container cannot communicate with redis. can you remove the container_name: parameters from docker-compose.yml and retry.\n. not sure. have not investigated much. but it looks like adding container_name: redis creates a variable named REDIS_PORT which confuses the entrypoint script.\n. have to tried raising the DB_POOL value?\n. @ltchronus are you using docker inside a virtual machine? If yes then you need to connect to the ip of the VM and not localhost.\n. you probably need need to open ports on the vm. not sure how that's done. I will give it a try and let you know.\n. great!\nI just gave it a try using docker-machine and was able to quickly get it deployed using the following commands:\n``` bash\ndocker-machine create --driver virtualbox gitlab\neval \"$(docker-machine env gitlab)\"\nwget https://raw.githubusercontent.com/sameersbn/docker-gitlab/master/docker-compose.yml\ndocker-compose up -d\nwait for gitlab to start, you can watch the logs using docker-compose logs\nxdg-open http://$(docker-machine ip gitlab):10080\n``\n. @to266 please share additional information like the docker command or docker-compose.yml file used, the logs, etc. Please refer to https://github.com/sameersbn/docker-gitlab#issues for the specific information that would be useful to get your issue resolved.\n. @to266 by any chance did you get the issue resolved?\n. @JrCs just checked there is a typo that needs to be fixed.\n. fixed the typo. can you please check thelatesttag once the build is ready. Once you confirm I will make a new point release\n. nevermind. i made a point release. let me know if the issue persists.\n. @JrCs It appears that some character in some value like DB_PASS is confusingsed. Please addDEBUG=trueto the environment of the gitlab container and you will see which sed command is failing.\n. this change looks massive in the way it would alter the setup procedure.\nwhy not just change the password? or escape the offending characters\n. actually in some places the configuration lines are deleted usingsed, https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/functions#L145 for example. I will however experiment usingenvsubst. I agree it could resolve such issues, i want to be cautions with such changes because it could lead to breakages for existing users.\n. you need to create thedhparam.pem` file in the certs volume as well. At the moment it is not optional https://github.com/sameersbn/docker-gitlab#generation-of-self-signed-certificates. As a result of which you see these messages:\nbash\nSSL keys and certificates were not found.\nAssuming that the container is running behind a HTTPS enabled load balancer.\nPlease let me know if this resolves the issue.\n. no idea. can you try answering \"no\" in the prompt above?\n. @abilashks this could be related to the issue mentioned by @xueshanf \nI am not sure how you should do about resolving it. maybe you will have to upgrade your local installation to a newer gitlab version which resolves this issue and then migrate to this image.\n. Gitlab and related components are not started from the init scripts. They are started by supervisord. \nI need to inspect why gitlab wont shutdown gracefully. It was working fine earlier. Will check and let you know.\n. I have been looking into this issue. But first regarding supervisord. When supervisord receives the TERM signal it will send the same signal to all processes that it is supervising. The signal that a process receives can also be configured using the stopsignal parameter in the supervisor conf files.\nGetting to the issue of graceful termination of the container, one of the gitlab components gitlab-workhorse does not terminate gracefully regardless of the signal being sent to terminate the process. Until this is handled in gitlab-workhorse there is nothing we can do to resolve this.\np.s. all the other process terminate gracefully as expected.\n. I do not see this issue. For the test I used the sample docker-compose.yml file with GITLAB_RELATIVE_URL_ROOT=/gitlab\n. Are you using apache as a load balancer?\n. can you try connecting directly to http://localhost:10080/gitlab to verify in the urls are correct?\np.s. i think ProxyPassReverse http://localhost:10080/gitlab should be ProxyPassReverse http://localhost:10080. not a 100% sure.\n. In case you have not tried already, please clear the browser cache and retry.\n. fixed in latest tag\n. @pylight can you please share your docker-compose.yml or docker run command. I testing using the sample docker-compose.yml with GITLAB_RELATIVE_URL_ROOT=/gitlab and everything seems to be working fine.\n. @pylight since you have created a new issue #553, you may want to copy the docker-compose.yml spec to that issue. I have commented on that issue. I will investigate depending on your response to my comment. Thank you.\n. @pylight can you connect directly to the gitlab container i.e.  http://localhost:11080 and check if the issue persists?\n. I think the issue could be related to the load balancer configuration. Please check the behaviour with http://localhost:11080. Also open the browser debug console to check the assets the browser is not able to fetch.\n. GitLab is slowly moving the serving of all http requests to the gitlab-workhorse component with very little left to be handled by nginx itself. While this handoff is not yet complete, but a major part of it took place in the 8.3.0 release. See \"Decoupling GitLab from NGINX\" section of GitLab 8.3.0 Release Announcement\nGetting back to the issue. When you access Gitlab using relative url, the access to the static assets should go through gitlab-workhorsefor the the urls in the css, etc. to the correct urls. If the change in your nginx config at the load balancer fixes the issue then you should be good.\n. I believe the source of the problem could be the location /gitlab/ block. I cannot say for sure. I will try with my load balancer and let you know if I can come up will a clean config.\n. @pylight can you check with the latest build of the image. There seems to be an issue with gitlab-workhorse when relative urls are used. I have created a workaround for this and hopefully this issue should be resolved. Upon your confirmation I will create a new point release.\nedit: you will notice that the first page load will take a long time. This is gitlab regenerating the application.css with the right relative urls.\n. @pylight thanks for the confirmation. made a new point release.\n. issue 555?\n. @ivlis oh.. the issue is not the direct access to those assets. when gitlab is loaded in the browser, it consists of the application-xxxxx.css file. The issue was that the links contained within this file do not point to the correct urls (i.e. the relative_url prefix would be missing).\nedit: what you want to check is if the links contained within the application.css are right. can simply be seen in the firefox network console.\n. > Oh yeah, I confirm. Is this bug reported to the upstream?\nnot yet.\n. @pylight this issue has been resolved. you should probably open a new issue referencing this one.\n. I see you made the changes for all configurations. Will test locally and let you know. thanks for the PR.\n. In https://github.com/sameersbn/docker-gitlab/tree/JrCs-pr-updates i have merged upstream changes and updated to use replace_placeholders (renamed to update_template) whenever possible. You can take a look at the changes here https://github.com/JrCs/docker-gitlab/compare/master...sameersbn:JrCs-pr-updates. I am currently testing these changes on my local install and will merge the PR after I am confident that it will not lead to breakages :smile: \n. was also thinking of updating update_template to automatically select the user for executing envsubst based on the ownership of the target file. This will allow us to use update_template also for the nginx configuration updates\n. Yes. I can see the same issue. Maybe it is an upstream issue. I will check on a physical install  and confirm.\n. I tested on a local install and the issue persists. This is an upstream issue.\n. 8.2.3 has been released.\n. this is part of CI migration https://github.com/gitlabhq/gitlabhq/tree/master/doc/migrate_ci_to_ce#1-update-nginx-configuration\nI have not tested with IPv6. can you share a sample resolv.conf which will help me in fixing the issue?\n. can you check with the latest build.\n. Only reason is that 7.8.4 was released (by upstream) before i could release 7.8.3. I have created a new tag for the 7.8.3 build. You can try using it once the build is ready https://hub.docker.com/r/sameersbn/gitlab/builds/\n. please close the issue if it resolves the issue\n. @jessy1092 I was not able to reproduce this issue. I was also able to go straight from 8.0.4 to 8.2.2. Here are commands i used:\nCreate 8.0.4 container:\nbash\nwget https://raw.githubusercontent.com/sameersbn/docker-gitlab/v8.0.4/docker-compose.yml -O docker-compose.yml\ndocker-compose up -d\nStop and upgrade to 8.2.2\n``` bash\ndocker-compose stop\ndocker-compose rm -fv\nwget https://raw.githubusercontent.com/sameersbn/docker-gitlab/8.2.2/docker-compose.yml -O docker-compose.yml\ndocker-compose up -d\n```\n. @ariault-blanchard there are two options.\nOPTION 1:\nBring down all the containers, create the backup and delete all containers.\nbash\ndocker-compose stop\ndocker-compose run --rm gitlab app:rake gitlab:backup:create\ndocker-compose stop\ndocker-compose rm -fv\nUpdate image version in docker-compose.yml and start again. You can also update versions of other images mentioned in docker-compose.yml\nbash\ndocker-compose up -d\nOPTION 2:\nBring down only the gitlab container and create a backup\nbash\ndocker-compose stop gitlab\ndocker-compose rm -fv gitlab\ndocker-compose run --rm gitlab app:rake gitlab:backup:create\nUpdate only gitlab image version in docker-compose.yml and start again\nbash\ndocker-compose up -d\n. you can try restoring an older backup and then try upgrading again.\n. @osixia I see the same issue. The weird thing is that the links in the CSS point to the correct urls.\n. @taniadaniela can you try docker-compose run gitlab app:rake gitlab:backup:restore\n. I think the backup was created with a mysql database.\n. ps. please use the command docker-compose run --rm gitlab app:rake gitlab:backup:restore. I have added --rm to it because the restart policy in the docker-compose.yml will make it relaunch in the background.\n. I would suggest using mysql to restore and upgrade the installation. Once done, you can follow these instructions to migrate to postgresql.\nP.S. Please create backups along each step of the way.\n. Please take a look at https://github.com/jasonbrooks/docker-gitlab\n. @DockerAsura I have not used the omnibus package before. maybe gitlab upstream may be able to help.  I am not sure if the official gitlab docker images uses the omnibus package. you may want to check that as well.\n. Please take a look at the official GitLab image for omnibus installs. Closing issue..\n. Thank you for the appreciation :+1: \n. the ........................................................... indicate that the database connection test is not passing. Please configure the database parameters using the DB_ configuration options. You can also add -e DEBUG=true to debug.\n. p.s. this has since been fixed. maybe you retry with the latest version\n. @sbilly sorry.. didn't realize that the person who reported and the person who posted the last comment were the same.\n. @liquid you cannot use this image as a runner. You have to create separate runner using gitlab-ci-multi-runner. There is no linking involved, at the runner you would have to specify the url of the gitlab server and a token among other things. Look at the documentation of gitlab-ci-multi-runner and the relevant gitlab CI docs.\n. @abilashks well the error says what it says. you need to handle this in your mysql configuration. Errors such as there are not uncommon when you choose to you mysql with gitlab. I have no suggestion on how to fix this other than increasing the max_allowed_packet further.\nUsers who faced this issue and got it resolved may be able to help you.\n. @fernandoneto We are only setting UNICORN_TIME in unicorn.rb, from that point on unicorn should exhibit the expected behaviour. I will investigate it though.\n. This is very odd behaviour. I checked the unicorn timeout option and setting it in unicorn.rb is all that is required. Can you check things like the available system resources, cpu load, etc. Could be possible that the CPU is under heavy load and/or RAM is being swapped out relatively frequently.\nIt may also be possible that the 60 sec timeout is too low.  Maybe the MR is large and GitLab requires more time to process it (again this could be because of CPU load issues). In which case if the worker is killed, it will start over and this will go over and over. You may want to try raising UNICORN_TIMEOUT parameter to a higher value to see if it resolves long time to create MR issue.\nLastly, try upgrading to newer releases, maybe it was a known issue that has been resolved.\nIf these recommendations do not resolve the issue, then you should consider this to be very severe and maybe the resolution would be to setup GitLab from scratch. There could be some database related issues that could be confusing gitlab. BTW, I hope that you are using PostgreSQL as the database backend. Possibly you could report the issue upstream as well.\nDo let me know if any of these suggestions help.\n. Any update on this?\n. Closing for now.\n. Glad you got it resolved.\n. This probably is an upstream issue. I will check it on a physical install to confirm\n. this issue is because relative_url_root is being set to / in gitlab.yml\n. Have you tried defining the proxy variable in the container environment using the -e argument? You may also want to take a look at #354 in case there's something in there.\n\nSo I thought why not using your squid docker container and have this one being configured appropriately (forward all non RFC 1597/1918 networks to the corporate proxy and all other stuff just being ofloaded with the local squid).\n\nI don't understand this part\n. @freeseacher sorry for the late response. I tested using the following spec without any issues:\n``` yaml\npostgresql:\n  restart: always\n  image: sameersbn/postgresql:latest\n  environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n  volumes:\n    - /srv/docker/gitlab/postgresql:/var/lib/postgresql\nredis:\n  restart: always\n  image: sameersbn/redis:latest\n  volumes:\n    - /srv/docker/gitlab/redis:/var/lib/redis\ngitlab:\n  restart: always\n  image: sameersbn/gitlab:latest\n  links:\n    - redis:redisio\n    - postgresql:postgresql\n  ports:\n    - \"80:80\"\n    - \"10022:22\"\n    - \"443:443\"\n  environment:\n    - TZ=Asia/Yekaterinburg\n    - GITLAB_SECRETS_DB_KEY_BASE=XXXXXX\n    - SMTP_ENABLED=false\n    - SMTP_DOMAIN=\n    - SMTP_HOST=\n    - SMTP_PORT=\n    - SMTP_USER=\n    - SMTP_PASS=\n    - GITLAB_TIMEZONE=Ekaterinburg\n    - GITLAB_HOST=git.example.com\n    - GITLAB_HTTPS=true\n    - GITLAB_PORT=443\n    - GITLAB_SSH_PORT=10022\n    - GITLAB_EMAIL=notifications@example.com\n    - GITLAB_EMAIL_REPLY_TO=noreply@example.com\n    - GITLAB_PROJECTS_MERGE_REQUESTS=true\n    - NGINX_WORKERS=2\n    - SSL_CERTIFICATE_PATH=/home/git/data/certs/gitlab.crt\n    - SSL_KEY_PATH=/home/git/data/certs/gitlab.key\n    - SSL_SELF_SIGNED=true\n    - GITLAB_BACKUPS=daily\n    - GITLAB_BACKUP_TIME=01:00\n    - LDAP_ENABLED=false\n    - LDAP_HOST=\n    - LDAP_PORT=\n    - LDAP_BIND_DN=\n    - LDAP_PASS=\n    - LDAP_BASE=\n    - IMAP_ENABLED=false\n  volumes:\n    - /srv/docker/gitlab/gitlab:/home/git/data\n```\nCan you try with the most recent release to see it it helps?\n. thanks got the confirmation\n. May I suggest you remove the image and pull it again. Sometimes the image tends to get corrupted during the pull. Repulling seems to resolve such weird issues. If that does not help then we call look deeper to figure whats going on.\nInformation such as the host, docker version, etc. maybe helpful here.\n. Couple of notes:\n- adding -v /run/redis to sameersbn/redis will expose the redis socket when --volumes-from redis is used.\n- we don't want these settings by default in the docker-compose.yml, IMO this is an advanced user thing. Support wise this could be more than what we ask for.\n- instead of REDIS_CONNECTION=unix, internally we can check for the existence of /run/redis/redis.sock and configure accordingly. This can be done in the gitlab_finalize_redis_parameters where we perform the discovery from docker links. Here we can check the existence of the socket, or fallback to tcp provided that REDIS_HOST/REDIS_PORT are not specified by the user. Precedence should be:\n  - user config\n  - unix socket\n  - discovery from docker the redisio link alias\nAnyways, this is a small enough change. If you are OK with me taking over this PR from this point, I will be happy to do it over the weekend.\n. can you please create separate PR's for each. \n. Related to #541, closed in  208f95e\n. At the moment there is no such option. Are you using the container with --net host option?\n. yes.. thats all you need to do.\n. @maxa4e Updating the DB_USER, DB_PASS and DB_NAME variables in the docker-compose.yml is the right way. Please paste your docker-compose.yml which will allow me to reproduce this issue.\n. @pylight can you restore the backup with your previous version. then upgrade to 8.0.x before upgrading to 8.2.3. Please try it and let me know. Also you may want to consult https://github.com/sameersbn/docker-gitlab/blob/master/CI_MIGRATION.md in case you were using GitLab CI. \n. please provide the command output of you commands. You can enable bash debugging with the gitlab container using -e DEBUG=true for additional debug information.\n. actually I need the docker logs. Here is what i tried without errors:\nPostgreSQL:\n``` bash\ndocker run --name gitlab-postgresql -it --rm \\\n--env 'DB_NAME=gitlabhq_production' \\\n  --env 'DB_USER=gitlab' --env 'DB_PASS=password' \\\n  --volume /tmp/docker/gitlab/postgresql:/var/lib/postgresql \\\n  sameersbn/postgresql:latest\nInitializing datadir...\nInitializing certdir...\nInitializing logdir...\nInitializing rundir...\nInitializing database...\nConfiguring hot standby...\n\u2023 Setting postgresql.conf parameter: wal_level = 'hot_standby'\n\u2023 Setting postgresql.conf parameter: max_wal_senders = '16'\n\u2023 Setting postgresql.conf parameter: checkpoint_segments = '8'\n\u2023 Setting postgresql.conf parameter: wal_keep_segments = '32'\n\u2023 Setting postgresql.conf parameter: hot_standby = 'on'\n\u2023 Setting postgresql.conf parameter: data_directory = '/var/lib/postgresql/9.4/main'\n\u2023 Setting postgresql.conf parameter: log_directory = '/var/log/postgresql'\n\u2023 Setting postgresql.conf parameter: log_filename = 'postgresql-9.4-main.log'\n\u2023 Setting postgresql.conf parameter: listen_addresses = '*'\n\u2023 Setting postgresql.conf parameter: ssl = 'off'\nCreating database user: gitlab\nCreating database(s): gitlabhq_production \nStarting PostgreSQL 9.4...\nLOG:  database system was shut down at 2015-12-24 05:38:50 UTC\nLOG:  MultiXact member wraparound protections are now enabled\nLOG:  autovacuum launcher started\nLOG:  database system is ready to accept connections\nERROR:  database \"gitlabhq_production\" already exists\nSTATEMENT:  CREATE DATABASE \"gitlabhq_production\" ENCODING = 'unicode'\n```\nRedis:\n`````` bash\ndocker run --name gitlab-redis -it --rm \\\n--volume /tmp/docker/gitlab/redis:/var/lib/redis \\\n  sameersbn/redis:latest\nStarting redis-server...\n                . \n.-__ ''-._                                             \n      _.- ..  ''-.           Redis 2.8.4 (00000000/0) 64 bit\n  .-.-```.  ```\\/    _.,_ ''-._                                   \n (    '      ,       .-`  | `,    )     Running in stand alone mode\n |`-._`-...-` __...-.-.|'_.-'|     Port: 6379\n |-. ._    /     _.-'    |     PID: 1-. -._-./  .-'    .-'                                 \n |-._-. -.__.-'    _.-'_.-'|                                  \n |-.-._        _.-'_.-'    |           http://redis.io-. -._-..-'.-'    .-'                                 \n |-._-. -.__.-'    _.-'_.-'|                                  \n |-.-._        _.-'_.-'    |-._    -._-..-'.-'    _.-'                                 \n-._-..-'    _.-'                                     \n-._        _.-'-..-'                                               \n[1] 24 Dec 05:38:57.466 # Server started, Redis version 2.8.4\n[1] 24 Dec 05:38:57.466 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n[1] 24 Dec 05:38:57.466 * The server is now ready to accept connections on port 6379\n[1] 24 Dec 05:38:57.466 * The server is now ready to accept connections at /var/run/redis/redis.sock\n``````\nGitLab:\n``` bash\ndocker run --name gitlab_m -it --rm \\\n--link gitlab-postgresql:postgresql \\\n  --link gitlab-redis:redisio \\\n  --publish 10022:22 \\\n  --publish 10080:80 \\\n  --env 'GITLAB_PORT=10080' \\\n  --env 'GITLAB_SSH_PORT=10022' \\\n  --env 'GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string' \\\n  --env 'GITLAB_HOST=127.0.0.1' \\\n  --env 'GITLAB_EMAIL_FROM=my_account@gmail.com' \\\n  --env 'GITLAB_EMAIL_REPLY_TO=my_account@gmail.com' \\\n  --env 'SMTP_ENABLED=true' \\\n  --volume /tmp/docker/gitlab/gitlab:/home/git/data \\\n  sameersbn/gitlab:latest\nInitializing logdir...\nInitializing datadir...\nGenerating OpenSSH host keys... RSA1 RSA DSA ECDSA ED25519 \nInstalling configuration templates...\nConfiguring gitlab...\nConfiguring gitlab::database\nConfiguring gitlab::redis\nConfiguring gitlab::secrets...\nConfiguring gitlab::sidekiq...\nConfiguring gitlab::gitlab-workhorse...\nConfiguring gitlab::unicorn...\nConfiguring gitlab::timezone...\nConfiguring gitlab::rack_attack...\nConfiguring gitlab::ci...\nConfiguring gitlab::artifacts...\nConfiguring gitlab::lfs...\nConfiguring gitlab::project_features...\nConfiguring gitlab::smtp_settings...\nConfiguring gitlab::oauth...\nConfiguring gitlab::ldap...\nConfiguring gitlab::backups...\nConfiguring gitlab-shell...\nConfiguring nginx...\nConfiguring nginx::gitlab...\nSetting up GitLab for firstrun. Please be patient, this could take a while...\ngitlabhq_production already exists\nMigrating database...\nClearing cache...\n2015-12-24 05:39:40,856 CRIT Supervisor running as root (no user in config file)\n2015-12-24 05:39:40,856 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\n2015-12-24 05:39:40,856 WARN Included extra file \"/etc/supervisor/conf.d/mail_room.conf\" during parsing\n2015-12-24 05:39:40,856 WARN Included extra file \"/etc/supervisor/conf.d/gitlab-workhorse.conf\" during parsing\n2015-12-24 05:39:40,856 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\n2015-12-24 05:39:40,856 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\n2015-12-24 05:39:40,857 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\n2015-12-24 05:39:40,857 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\n2015-12-24 05:39:40,881 INFO RPC interface 'supervisor' initialized\n2015-12-24 05:39:40,881 CRIT Server 'unix_http_server' running without any HTTP authentication checking\n2015-12-24 05:39:40,881 INFO supervisord started with pid 1\n2015-12-24 05:39:41,886 INFO spawned: 'sidekiq' with pid 462\n2015-12-24 05:39:41,890 INFO spawned: 'unicorn' with pid 463\n2015-12-24 05:39:41,896 INFO spawned: 'gitlab-workhorse' with pid 464\n2015-12-24 05:39:41,900 INFO spawned: 'cron' with pid 465\n2015-12-24 05:39:41,912 INFO spawned: 'nginx' with pid 466\n2015-12-24 05:39:41,923 INFO spawned: 'sshd' with pid 467\n2015-12-24 05:39:42,893 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-12-24 05:39:42,893 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-12-24 05:39:42,894 INFO success: gitlab-workhorse entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-12-24 05:39:43,895 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-12-24 05:39:43,895 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-12-24 05:39:43,895 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n``\n. Can you add-e DEBUG=true` to the docker run command while starting the gitlab container and paste the logs?\n. @ivlis when using relative_urls gitlab rebuilds some of the assets to correct the urls. serving users the static assets using nginx would result in broken links for users who choose to use relative urls. when not in use, it is perfectly fine for nginx to serve these prebuilt assets.\nAlso I would like to mention that recently there has been a lot of activity in GitLab with regards to handing of http requests, wherein they are working towards offloading all http request handling to gitlab-workhorse. I believe that when this transition is complete nginx will become completely optional at which point we might would be able to drop it from the image altogether.\nGiven this development activity, I think we should avoid merging this change in the image, because with every release things will start breaking on the http request handling front and during this time it is best to stick with how gitlab inc. recommends installing Gitlab and finally make the transition when things are ready.  See \"Decoupling GitLab from NGINX\" section of GitLab 8.3.0 Release Announcement\n. It could also be possible that your host may be running out of memory\n. it is only a random string, you can create one with random characters, or you can generate one with 64 random alphanumeric characters using:\n``` bash\n< /dev/urandom tr -dc [:alnum:] | head -c64\n``\n. The https://github.com/sameersbn/docker-gitlab/blob/master/assets/build/install.sh#L88-L89 line automatically generatessecrets.yml. We don't want this file to be there, so we remove it after the asset compilation. We use our template at runtime.\n. @vince67 it should be okay to move the files from/data1/datato/data2/data, you should take a little care while copying the files to the new location. i.e. either of these should be fine\n-cp -a /data1/data /data2/data-rsync --progress -av /data1/data /data2/data`\nSimply doing cp -r /data1/data /data2/data will not preserve the ownerships of the files which will cause issues.\n. can you try restoring a backup of the 7 version and then upgrading to last 8.0.x version before upgrading to 8.3.2. You may also want to refer to https://github.com/sameersbn/docker-gitlab/blob/master/CI_MIGRATION.md in case you are using GitLab CI. If you are not sure about exactly version, you can open the backup and get the version from the backup_information.yml file\nLet me know if it works.\n. You can try reverting the database using instructions from http://stackoverflow.com/a/7695220/4799938. I have never tried this so the results may vary. \nHowever If you have a small installation then I would recommend setting up Gitlab from scratch. Create the users and import the existing repos in the repositories/ directory using the gitlab:import:repos rake task.\np.s. always take backups and/or enable automated backups.\n. > There it states that the .pem file is not needed when using self signed certificates\nI cannot see where it states that the dhparam.pem file is not needed. Can you point it out for me?\n. will just close it.\n. @quartzinquartz I have no idea where this upgrade path would work.\nHowever you can try this. If you have a backup, then please revert to the 7.13.5 EE version. Next check if 7.13.5 CE version works properly with the same install. If all is well, then first upgrade to 8.0.5-1 and then upgrade to 8.3.x version. At every checkpoint please if the installation works properly.\nAlso ensure that you have not overwritten any of the configurations (by installing custom configurations in the config/ directory of the data volume) and are only using the env variables to configure the instance.\nIf the above suggestion does not work then I may not be able to help you much because I do not have access to GitLab EE to conduct any tests with this upgrade path.\nI hope it works. Good luck :+1: \n. @vince67 the contributions calendar is automatically populated by gitlab. The image does not do anything in this regard. What version of Gitlab are you using?\n. @jayme-github will hold on to the PR until 8.4 is released. Thanks for the PR.\n. From what I see, GitLab now generates a single token for use on all runners and can be found at git.example.com/admin/runners. This token is not changed unless you manually hit the RESET RUNNERS REGISTRATION TOKEN button. Restarting the container does not reset the token. As long as you are using persistent storage for your GitLab instance, this token will not change automatically. The only reason you might be seeing that the token changing is because you are not using persistent storage for the gitlab and database instances.\nGitLab does not provide any option to manually specify a token. It us generated automatically by GitLab. If such an option is made available then I would definitely support configuring it. For now, you are out of luck in this regard.\nIf you have ruby coding skills, you could submit a PR to the upstream GitLab project implementing the same.\n. @flexbrane Can you check the mail_room logfile located at  /home/git/gitlab/log/mail_room.log to see if you notice anything unusual? Also can you check if the reply by email feature works?\n. @flexbrane from my understanding you will get that error if the container is not able to connect to your imap server. This could be because the container does not have internet access or the DNS server cannot resolve queries.\nTry logging onto the container using docker exec -it gitlab bash and then test if the DNS server can resolve queries using ping and test the internet connection using curl, etc.\nThe IMAP configuration allows users to comment on issue by replying to emails. This however requires certain features to be available on your imap server. see http://doc.gitlab.com/ce/incoming_email/README.html for details.\nAs a temporary fix you can disable IMAP support by setting IMAP_ENABLED=false. This means that reply_by_email feature will not work.\n. > I have an internet connection, and the DNS is working well.\nPlease note that if it works on the docker host, it does not necessarily mean that it will work inside the container. The only way to check it by logging into the container and testing.\n\nYou do not think That mail_room is doing to many loop or something like that ?\n\nIt appears that the mail_room daemon terminates when it encounters the error. The supervisor then relaunches the daemon. This is the reason why you are seeing the message repeatedly. BTW, it is also possible that you have not configure IMAP correctly. That could also be the reason for the error. Are you using googlemail or google apps as the mail provider?\n\nIs it possible to add a \" sleep 1 \" in the script / program for example? I think I have seen this somewhere , but I don't know how to Do That .\n\nThis is not possible. The relaunch is performed by supervisord.\n. On Tuesday 12 January 2016 12:19 PM, flexbrane wrote:\n\nI have tested the DNS inside the the container (with exec command)\n\nThen it most probably means that IMAP is not configured correctly.\n\nAlthough GitLab can send email, you think that IMAP can be is not\nconfigured correctly ? I use /privateemail/. That's the email system of\nnamecheap for my domain name.\n\nIMAP is used for incoming mails, while SMTP is used for mail delivery. \nThey both have different settings in terms of the ports used, etc. It is \nentirely possible that one or the other is not configured correctly or \nit is also possible that the mail host does not have the required \nfeatures that are needed for reply_by_email to work. Please refer to \nhttp://doc.gitlab.com/ce/incoming_email/README.html for the specific \nrequirements. From the link:\n\"Reply by email requires an IMAP-enabled email account, with a provider \nor server that supports email sub-addressing. Sub-addressing is a \nfeature where any email to user+some_arbitrary_tag@example.com will end \nup in the mailbox for user@example.com, and is supported by providers \nsuch as Gmail, Google Apps, Yahoo! Mail, Outlook.com and iCloud, as well \nas the Postfix mail server which you can run on-premises.\"\nYou may also want to check with namecheap if they support email \nsub-addressing.\n\nSo right now I don't what I can do (expect change my VPS ^^)\n\nChange of VPS is probably not required. You need to check your settings. \nI recommend checking the namecheap KB for the settings. Here is \nsomething I found: \nhttps://www.namecheap.com/support/knowledgebase/article.aspx/1179/2175/general-configuration-for-mail-clients-and-mobile-devices.\nI don't use and have never used namecheap VPS, so I am not in the \nposition to suggest anything. Other users who have got IMAP working with \nNamecheap maybe able to help here. I hope someone takes note of this \nissue and replies.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/571#issuecomment-170815688.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. Can you try.\nIMAP_USER=my@email.com\nIMAP_PASS=myPassword\nIMAP_HOST=mail.privateemail.com\nIMAP_PORT=993\nIMAP_SSL=true\nIMAP_STARTTLS=false\nIMAP_MAILBOX=inbox\nI am only suggesting these values based on \nhttps://www.namecheap.com/support/knowledgebase/article.aspx/1179/2175/general-configuration-for-mail-clients-and-mobile-devices. \nNo guarantees.\nOn Tuesday 12 January 2016 01:07 PM, flexbrane wrote:\n\nHere my command to start the GitLab container :\ndocker run --name gitlab -d \\\n--restart=always \\\n--link gitlab-postgresql:postgresql --link gitlab-redis:redisio \\\n--publish 10022:22 --publish 10080:80 --publish 10443:443 \\\n--env'GITLAB_SSH_PORT=10022'  --env'GITLAB_PORT=10443'  \\\n--env'GITLAB_HTTPS=true'  --env'SSL_SELF_SIGNED=true'  \\\n--env'GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string'  \\\n--volume /srv/docker/gitlab/gitlab:/home/git/data \\\n--env'GITLAB_HOST=X.X.X.X'  \\\n--env'SMTP_USER=my@email.com'  --env'SMTP_PASS=myPassword'  \\\n--env'IMAP_USER=my@email.com'  --env'IMAP_PASS=myPassword'  \\\n--env'SMTP_DOMAIN=www.mydomain.com'  \\\n--env'SMTP_HOST=mail.privateemail.com'  \\\n--env'SMTP_PORT=25'  \\\n--env'IMAP_HOST=mail.privateemail.com'  \\\n--env'IMAP_PORT=143'  \\\n--env'IMAP_STARTTLS=true'  \\\n--env'OAUTH_GITHUB_API_KEY=yyyyyyyyyyyyyyyyyy'  \\\n--env'OAUTH_GITHUB_APP_SECRET=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'  \\\nsameersbn/gitlab:8.3.2\nSomething appear wrong ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/571#issuecomment-170825618.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. > I also removed the IMAP lines and it work to.\nremoving the IMAP lines means that mail_room will be disabled and hence reply_by_email will be disabled.\n. @kujiy the image uses links to automatically get the connection and authentication parameters. Apart from this it serves no other purpose. You can safely remove these links from the gitlab container, but you will need to specify the required DB_ and REDIS_ parameters.\nYou might find the steps listed here useful: https://github.com/docker/docker/issues/18238. Please note that the steps listed in the linked issue is only a test setup. Use at your own discretion. \nPlease close if the issue is resolved.\n. btw, it appears that a new openssh point release was released by debian/ubuntu packaging, which probably plugs the security vulnerability. This is available in the 8.3.4-1 hotfix. This PR may not be required.\n. @lazyfrosch i dont think the issue is specific to the client. maybe I am wrong.\n. I myself have not tested the LDAP integration, but other users have been successfully using it. You might want to look at the gitlab logs.\n. I am a little confused about your report. Do you mean with 8.0.0, 8.0.2 everything is okay? i.e. the repositories exist? and with 8.0.3 they are missing?\n\nmy /home/git/repositories/ is an empty folder.\n\nThe repositories are actually located in /home/git/data/repositories. did not notice the /home/git/repositories directory was being created. You can ignore it as it is never used. Please inspect the contents of /home/git/data/repositories to check if the bare repositories exist.\nDo you have a backup created with the 6.7.3 version (hope you do)? If you do, then please restore it on sameersbn/gitlab:6.7.3 and try upgrading in phases, i.e. upgrade to the last 6.x version, then upgrade to the last 7.x version, then to 8.0.5-1 version and finally to the 8.3.4 release. At every upgrade please check if the instance is working correctly and all your repos are there. It may also be worth taking backups along the way.\nLet me know how it goes.\nps. if you have a small installation  with only a few repos and a few users, you might just want to setup the server from scratch. but this does mean that you will lose the issue and PR history, etc.\n. Thanks @ninja- for helping out.\n@grimabe can you share your solution for the benefit of other users?\n. @ayufan @schmunk42 thanks for debugging this issue. I will move the installation of gitlab-workhorse to /usr/local/ to resolve this issue.\n. released 8.4.0-1\n. you cannot restore a 8.3.4 backup to 8.4.0 or any other version. the backup version and gitlab version should match. you need to restore on 8.3.4 gitlab and then upgrade.\n. refer https://github.com/sameersbn/docker-gitlab#upgrading\n. It can be disabled from the administration page of GitLab UI.\n. I am not sure about the issue you are seeing. Maybe you have set a signout path in the gitlab ui settings.\n. @ayapapa can you try a fresh install using instructions from the quickstart guide to check if this issue exists?\n. @M0E-lnx can you please provide a sample docker-compose.yml which will help understand the cause of the issue. Additionally please provide additional information as suggested in  https://github.com/sameersbn/docker-gitlab#issues\np.s. you may want to try with the most recent gitlab release.\n. Can you try specifying the path in AWS_BACKUP_BUCKET eg. <bucket-name>/path/to/directory? I don't know if it will work, but worth a try.\n. i believe either fog.io or gitlab does not support it.\n. The error indicates that the repository does not exist. Can you inspect the contents of the repositories/ in the data volume. If it does exist, then maybe the file permissions are not correct. If that is the case, then you can launch the container with app:sanitize argument to correct any permission issues. Lastly you may need to check if you have permission to access the repo.\n. Please see https://github.com/sameersbn/docker-gitlab#mail\n. @atom2ueki If you are using gmail for mail sending then you will only need to configure the SMTP_USER and SMTP_PASS parameters (SMTP_DOMAIN if you are using google apps) since the defaults set for the other SMTP parameters are already configured for using with gmail by default.\n. The 90b026841440 sameersbn/gitlab:latest \"/sbin/entrypoint.sh \" 13 seconds ago Exited (2) 12 seconds ago gitlab line indicates that the gitlab container exited after facing some errors.\nPlease check the container logs using docker logs gitlab. You may also want to use the instructions listed here https://github.com/sameersbn/docker-gitlab#quick-start because they are the most up-to-date ones.\n. I tested your launch command and found no issues. You can try adding --env DEBUG=true to debug.\n. > You can try adding --env DEBUG=true to debug\nPlease try this to see whats going on.\n. I cannot say for sure whats going on in your environment. It certainly does look like the the container cannot see the ENV variables.\nCan you run docker run -it --rm -e 'GITLAB_SECRETS_DB_KEY_BASE=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' sameersbn/gitlab:8.4.2 printenv and see if the GITLAB_SECRETS_DB_KEY_BASE variable is printed?\nYou could try docker run -it --rm -e 'GITLAB_SECRETS_DB_KEY_BASE=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' ubuntu:trusty-20160119 printenv as well.\nYou mentioned that it was working earlier. Do you remember making any changes such as updating the docker or maybe the system.\n. btw. a newer docker version was released today. you could try with that as well.\n. Will take a look at it.\n. +1 but can't find the time to add new features. will try to make time. I am very interested in lets-encrypt as well.\n. This image is built from GitLab sources. gitlab-ctl is part of the the \nomnibus packages and as such is not available in here.\nOn Friday 05 February 2016 06:33 PM, lgersman wrote:\n\nHello,\ni actually want to import repositories from another gitlab instance into\nmy docker-gitlab instance\nAs far as i read i have to do a bunch of \"gitlab-ctl\" calls\n(http://stackoverflowcom/questions/19902417/change-the-data-directory-gitlab-to-store-repos-elsewhere)\nbut I cannot find gitlab-ctl in the docker container\nDo I have to install it additionally ?\nKind regards,\nLars\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/595.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. whoops! I didn't even realize @lgersman was trying to import repos :stuck_out_tongue: \ninformation provided by @veggiemonk is spot on.\n. SMTP settings are for mail sending. the IMAP settings are for incoming mails.\n. @bfdill You are using the official gitlab-ce docker image. You have reported the issue at the wrong place :stuck_out_tongue:. You need to report it preferable at https://gitlab.com/gitlab-org/gitlab-ce/, alternatively at https://github.com/gitlabhq/gitlabhq/ \n. I don't think this is a good idea. It will break the quick start guide and will be painful to explain to users. Right now the quick start guide is plain and simple, download the compose file, edit and run.\n. Instead of the proposed solution I suggest loading an .env file from the data volume if it exists. ie. at https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/env-defaults#L4 we add\nbash\nif [[ -f ${GITLAB_DATA_DIR}/.env  ]]; then\n  source ${GITLAB_DATA_DIR}/.env\nfi\nUser would be able to create a .env file in the data volume with the desired configuration and would override anything that's specified using --env arguments.\nI really don't want to get rid of the configuration options from docker-compose.yml since it's the expected location to specify env variables. the .env option could be a hidden or advanced configuration option for advances/experienced users :smile: \nWhat do ya think?\n. if you want the clone paths to look like git@git.example.com, then you need to use port 22 for the SSH server. If you are using the default docker-compose.yml, you would need to change 10022:22 to 22:22 and GITLAB_SSH_PORT=10022 to GITLAB_SSH_PORT=22.  With this change, the host port 22 will be forwarded to the container port 22. This means that if you have an SSH server running on the host on port 22, you will first need to update the host ssh server config to listen on some other port.\n. switching to port 22 will remove the ssh:// from the clone url.\nto reconfigure, you should stop the container, remove stopped container, make the changes in compose.yml and start again.\n. This is because the port 22 is already in use by the ssh server on the\nhost. You need to update the host ssh config to listen on some other port\nOn Feb 11, 2016 8:25 PM, \"psstefanov\" notifications@github.com wrote:\n\nHi,\nWhen I've tried to change the Gitlab configuration to publish 22:22 for\nssh I've received the following error:\nERROR: failed to create endpoint dockercitoolstack_gitlab_1 on network\nbridge: Error starting userland proxy: listen tcp 0.0.0.0:22: bind:\naddress already in use\nI've researched for a solution a lot but with no success. Does someone\nfaced the same issue and is there a solution?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/601#issuecomment-182896867\n.\n. containers inherit the system clock. It means that your host clock should\nbe off as well\nOn Feb 11, 2016 4:57 PM, \"Patrick\" notifications@github.com wrote:\ni have issues with 2fa on my gitlab-installation (using this\ndocker-compose). i did not fully investigate yet but the server is out of\nsync (~1min) and i think that is the issue.\ni think installing ntp would fix the issue. if you want me to i can make a\nPR (just putting apt-get install ntp here should do the trick?\nhttps://github.com/sameersbn/docker-gitlab/blob/5362ee7/Dockerfile#L29-L34\n).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/602.\n. You need to set timezone to Beijing not Shanghai. Please refer http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html. This is mentioned in the readme.\n. @globalcitizen The configuration is Rails specific. Validating these parameters and reporting a sensible error, in this case, is left to rails. I try my best to catch configuration issues whenever possible while expecting users to make sense of errors message and refer to the README and the past issues when things don't go as expected.\n\nIn this specific case, the log clearly indicates that Shanghai is not a valid timezone.\ngitlab_1     | Configuring gitlab-shell...\ngitlab_1     | Setting up GitLab for firstrun. Please be patient, this could take a while...\ngitlab_1     | rake aborted!\ngitlab_1     | ArgumentError: Invalid Timezone: Shanghai\ngitlab_1     | /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.2.5.1/lib/active_support/core_ext/time/zones.rb:72:in `rescue in find_zone!'\nIf you have a solution for cleanly handling this issue in some other way i'm all ears or better yet please send a PR with your solution.\nFYI, GitLab Inc maintains an official docker image for GitLab which you can downloaded using:\n``` bash\nfor community edition:\ndocker pull gitlab/gitlab-ce\nfor enterprise edition\ndocker pull gitlab/gitlab-ee\n```\n. @cashman04  @geeknam I believe the image must have got corrupted during the download (happens quite often). I would suggest removing the image and repulling from the docker hub. You may also want to try downloading the most recent version.\ndocker pull sameersbn/postgresql:9.4-18\n. ??\n. Its a matter of choice and requirements really. Here are some of the differences:\nsameersbn/gitlab:\n- unofficial image, supported by the community.\n- only packages gitlab from source, postgresql and redis services should be linked from other containers\n- can host gitlab on a relative url\n- easily enable ssl support\n- configurations are performed using ENV variables\n- support for automated backups\nrefer the readme for more details.\ngitlab/gitlab-ce:\n- official image supported by Gitlab Inc (and the community).\n- packages gitlab using the omnibus method\n- packages postgresql and redis servers in the image (all-in-one)\n- packages mattermost\n- relative urls might not work out-of-the-box\n- no ssl support out-of-the-box\nrefer to the usage guide for usage instructions\n** to the best of my knowledge, I do not intend to spread misinformation. \n(please close the support request if you feel your question has been answered)\n. yes. it was mistakenly tagged as 8.4.5 instead of 8.4.4-1. \n. @cracker0dks this image installs GitLab from source. The gitlab.rb file you are referring to is part of the gitlab-omnibus package and is not available in this image.\nWith this image, you will need to change environment variables and restart the image. If you need the gitlab.rb functionality you can using the official docker image for gitlab.\n. Can you check the available space on the disk partition with the /var/lib/docker directory. Maybe it is running out of space. You can clean up dangling containers, images and volumes using:\n``` bash\nremoves stopped containers\ndocker rm -f $(docker ps -aq --filter status=exited)\nremoved dangling images\ndocker rmi $(docker images -q --filter \"dangling=true\")\nremoves dangling volumes\ndocker volume rm $(docker volume ls -q --filter \"dangling=true\")\n```\nthis should free up some space.\n. @xuwang release was incorrectly tagged as 8.4.5 instead of 8.4.4-1. sorry about this. have re-tagged as 8.4.4-1.\nI am currently travelling so 8.5.0 will be available in a few days.\n. Do you see this for all merge requests?\n. Thanks for your efforts. I have made the 8.5.0 release. 8.5.1 coming up...\n. I will check if we can use authentication password with redis.\n. oh sorry. I didn't see your PR. \nI am back and have made the new release.\n. > Maybe @sameersbn in yours docker images (since you do it for most of them), the chmod/chown should be allowed to fail with a warning.\nI am not so sure about this. Gitlab expects the files and directories to have certain permissions. Not having the right permissions could effect merges requests, etc. I'll try adding an environment variable to be lenient with the chmod/chown operations.\n. awesome\n. 8.5.4 has been released, can you try with the latest version?\nNote: If you are using gitlab with a relative url then high cpu is expected for the first request (on every start). This is because gitlab goes and re-compiles the assets with the relative url which can take a while during which 100% of the CPU is used. If you are not using a relative url, then you should not see this.\n. Maybe the image was being built on DH at the time you tried. Can you please try again. Here is a complete list of tags that are present on DH: https://hub.docker.com/r/sameersbn/gitlab/tags/\n. Closing.. please reopen if issue persists\n. out now!\n. @vfilby the acl settings are already being set on /etc/resolv.conf.\nUsing ip-address in your oauth callback is probably not a good idea. Can you try using a domain name?\n. I tested locally with 8.5.4 and had no issues. Can you share your docker-compose.yml file? \n. this is the sample docker-compose.yml correct? \n- can you describe your setup?\n- are you using a load balancer?\n- what is your host os?\n- can you paste the link that results in 404 error?\nIn the meanwhile I will test using your docker-compose file.\n. I see that you have set GITLAB_HOST=silvermoon. Are you able able to access the gitlab instance using http://silvermoon:10080 ?\n. The GitLab Install Docs states that currently only ruby 2.1.x is supported, see https://github.com/gitlabhq/gitlabhq/blob/master/doc/install/installation.md#2-ruby\nOnce GitLab announces support for 2.2.x or above we can update to the supported version.\n. Sorry for not replying earlier. GitLab EE has support for Github Pages like feature. Not sure if it can be done in the CE edition\n. This will not work. Please refer to https://github.com/sameersbn/docker-gitlab/issues/11 and https://github.com/sameersbn/docker-gitlab/issues/11#issuecomment-34221545 for more information. With the 8.5.5 release you can use https://github.com/sameersbn/docker-gitlab/releases/download/8.5.5/config.tar.bz2 as the template. Note config.tar.bz2 is just a tarball of https://github.com/sameersbn/docker-gitlab/tree/master/assets/runtime/config, so if you want to use some other version, just download the relavant config template.\nWARNING: Overriding the default configuration is for advanced users and no support will be offered. Do it only if you HAVE to. All configuration options can be configured using ENV variables. if there is something that is not supported please let us know and  we will try to add the required parameters. Thanks.\n. Please reopen if you have further questions. Thank you.\n. Thanks for bringing this up. I will check what should be done. Ideally I want to get rid of golang once gitlab-workhorse is removed.\n. I am going to use this ppa instead https://github.com/golang/go/wiki/Ubuntu\n. have added GITLAB_SIGNUP_ENABLED configuration parameter to control enabling/disabling of user signup on the first run. \nNote: this setting only applies for the first run. On subsequent runs if you wish to change the behaviour then it should be toggled from the UI setting page and the parameter will not have any effect.\nBy default GITLAB_SIGNUP_ENABLED=true, meaning signups are enabled by default.\n. Shallow clones from gitlab git server are broken. This is resolved since release 8.6.6. However for the option to disable signups you need to build the master or use the latest image tag.\n. @sagittarius-a @natsu90 after updating docker-compose.yml you need to stop and remove the existing gitlab container and recreate it. Assuming your docker-compose.yml is based off of https://github.com/sameersbn/docker-gitlab/blob/master/docker-compose.yml\nbash\ndocker-compose down\ndocker-compose up\n. @natsu90 can you share the complete docker-compose.yml that will allow me to test?\n. @natsu90  these are the only changes that are required.\nyaml\nenvironment:\n    - GITLAB_HOST=gitlab.{domain}.com\n    - GITLAB_PORT=80\nI tested it using the latest image and found no issues. Here are my steps\n``` bash\ndownload default docker-compose.yml\nwget https://raw.githubusercontent.com/sameersbn/docker-gitlab/master/docker-compose.yml\nlaunch\ndocker-compose up -d\nwait for gitlab to start, create repo, etc.\nupdate docker-compose.yml\nsed -i 's/GITLAB_HOST=localhost/GITLAB_HOST=git.example.com/' docker-compose.yml\nsed -i 's/GITLAB_PORT=10080/GITLAB_PORT=80/' docker-compose.yml\nstop and remove gitlab containers\ndocker-compose down\nstart\ndocker-compose up\n```\nI don't know why it does not work for you. Can you try logging into the gitlab container using docker exec and checking the values of GITLAB_HOST and GITLAB_PORT using printenv GITLAB_HOST GITLAB_PORT. These should be according to the values set in the docker-compose.yml.\nYou can also access the instance directly using http://localhost:10080 and check if the git clone http urls are according to the GITLAB_HOST and GITLAB_PORT settings. If they are correct, then it may be a case of browser or reverse proxy caching.,\n. > since I renamed the parent folder.\nThis is probably it. Try listing all containers.\nbash\ndocker ps -a\nManually stop and remove the containers that have the prefix OLD_FOLDER_NAME_ in the container name and try again.\n. Closing the issue. Please reopen if the problem persists.\n. the build would probably not have been ready on dockerhub. It is now available. Please retry.\n. @mizunashi-mana In gitlab-workhorse I see that the default timeout is 5m0s. I think we should default to the same.\n. using GITLAB_RELATIVE_URL_ROOT?? If yes, stay away from latest builds.\nOn Thursday 24 March 2016 12:25 AM, ninja wrote:\n\nclearly a regression, css is broken even for a clean setup of\ndocker-gitlab on latest version\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/645#issuecomment-200494319\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. working on it. https://github.com/sameersbn/docker-gitlab/issues/39#issuecomment-200297120\n. fixed since release 8.6.0\n. there are some issues regarding relative_url with the 8.6 release. https://github.com/sameersbn/docker-gitlab/issues/39#issuecomment-200297120\n. @schmunk42 added a 8.6.0-beta1 tag.\n. @lafraia as mentioned by @frenchbeard you need to enable the pg_trgm extension for the gitlab database. Since you are using sameersbn/postgresql:9.4-17 all you need to do is ass - DB_EXTENSION=pg_trgm to the docker-compose.yml file and recreate all the containers. Note, the migration process will continue from the previous point of failure so you should not lose any data.\nthanks @frenchbeard for helping out with the issues.\n. Not sure about your troubles with Synology nas. But if you had automated backups enabled then the complete gitlab instance would have been backed up on a periodic basis. The backups are saved in a backups directory of the data/ volume. Simple perform a restore operation with the 8.2.3 gitlab image and select the most recent backup.\nIf you are moving the gitlab instance to a linux box, then you should also be able to upgrade to the latest gitlab version after the restore.\n. @verrol were you able to resolve the issue? If not try adding DEBUG=1 to enable bash debugging. Hopefully it would point to the source of the issue.\n. I am not sure if its viable for me to create 32 bit version of this and other images. Additionally I am not sure how docker hub will handle automated builds of 32 bit images.\nBTW, is docker officially supported on 32 bit architectures? Just curious, the last time I checked this was not the case.\n. @maxcnunes thanks for sharing. I'm sure other users should find it useful.\n. Please see https://github.com/sameersbn/docker-gitlab/issues/39#issuecomment-200297120\nIf you have based your setup on https://github.com/sameersbn/docker-gitlab/blob/master/docker-compose.yml then please add the following line https://github.com/sameersbn/docker-gitlab/blob/master/docker-compose.yml#L8 and recreate the containers.\n. There is a container_name parameter in docker-compose that allows you to give the container a specific name. However you may face issues with the auto detection of env parameters of linked containers. If you face this issue, manually specify the params instead of relying on autodetection.\n- https://docs.docker.com/compose/compose-file/\n. Yes sure. \n. good catch!\n. since GitLab 8.6 there is no default root user password. Once you create a password you need to login as the root user.\n. Are you seeing the same issue with docker-compose?\n. I see the issue on kubernetes. Wonder what the cause could be. Will try to figure it out. Until then you can try adding GITLAB_ROOT_PASSWORD to the the containers env to bypass that screen.\n. If the gitlab pod is deleted and recreated again it seems to work. Looks to be an upstream issue.\n. I am seeing the issue on docker 4 mac beta too. However I found that the issue is seen in Firefox, but not in Chrome. Can you check of you see the same?\n. @18601673727 @SolidNerd have updated this PR in #661. Please review and test if possible.\n. @18601673727 what exactly is the SSH issue you see? can you please share some details. I have tested SSH and HTTP urls/cloning without any issue.\n. can you share a sample of the docker-compose.yml file you are using? preferable based on the one submitted in PR #661, as I have tested that one and found it to work.\nCan you share the HTTPS/SSH clone urls which are not right and what you expect them to be.\nAlso some details of your docker setup? eg. the host os, whether docker-machine or vms are used for docker, docker version, etc.\nP.S. the docker-compose.yml implemented in this PR is not really complaint with the version 2 spec. It has some very vital bits missing.\n. @18601673727 please rename the file to docker-compose.yml. we dont want to maintain another spec for docker-compose v1, only v2 going forward.\n. Ideally I would have liked to use a volumes section to define named volumes. but unfortunately the local volume driver does not allow specifying a host path for the volume.\nI have also applied the :Z volume label, but haven't tested it on a selinux based distro like redhat or centos. It would be great if someone could test this.\n. Thanks for linking to local-persist. Good to know :smile: \nFor the sample docker-compose.yml file we need to stick with what docker provides as the default.\n. > If you don't have the latest redis image you get an error message that the command does not work. To fix it. You to pull the latest redis image.\nI guess the redis client version in the gitlab image may not be compatible. \n\nMaintenance has been changed. The way of restoring a backup is different to the old way, because your gitlab container must be in the same network and you should provide the enviroment variables to ensure that the gitlab_container finds the database. To fix it i use the following command:\n\nWouldn't you use docker-compose to launch the rake task?\ncreate a backup\nbash\ndocker-compose run --rm gitlab app:rake gitlab:backup:create\nrestore a backup\nbash\ndocker-compose run --rm gitlab app:rake gitlab:backup:restore BACKUP=1460905799\n\nLets rethink about #600.\n\nI have commented on the issue https://github.com/sameersbn/docker-gitlab/pull/600#issuecomment-211043277\n. > I mean sameersbn/redis:latest image. I needed to pull that than everything works at docker-compose up.\nYes. I meant the redis-cli version in the gitlab image was probably not compatible with the redis-server from sameersbn/redis:latest\n\nNext time i will try to use docker-compose to run the rake tasks. It will make my work a lot of easier. :sweat_smile:\n\nWith docker-compose v2 I think this might be the only valid way of doing things correctly because of all the networking bits.\n. @jgsqware can you try it out and let us know it works for you? will merge it on the weekend after doing some tests to check if backup/restore operations work without issues.\n. yea. shallow clones on gitlab.com are broken https://gitlab.com/gitlab-org/gitlab-ce/issues/15110\nWe just have to wait until it's fixed.\n. Will wait for gitlab.com to fix it. I don't want to package the entire git repositories in the image :smile: \nyou can track the progress of the issue here: https://gitlab.com/gitlab-org/gitlab-workhorse/issues/36\n. Until the gitlab issue is fixed I dont think its a good idea to make new releases. I wish gitlab had maintained a mirror of gitlab-workhorse on github.\nThe possible resolutions I see are:\n1. switch to source tarballs instead of doing a git clone. The problem with this is that gitlab will not be able to perform update check.\nOR \n1. Clone the git repos from github and use tarballs for repos that are not available on github.\nI prefer the second option. I will wait until tomorrow to act on it. \n. new 8.6.6 release is out :smile: \n. duplicate of #662 \n. @M0E-lnx Sorry for the late response. \nThis is probably a misconfiguration on the nginx proxy end. I use a similar setup so I may be able to help. \nI tested by seeing up GITLAB_RELATIVE_URL_ROOT=/gitlab and the following vhost configuration on the nginx proxy.\n``` nginx\nupstream app {\n  server 172.17.0.1:10080 fail_timeout=0;\n}\nserver {\n  listen 80;\n  server_name www.example.com\n  server_tokens off;\naccess_log /var/log/nginx/app_access.log;\n  error_log /var/log/nginx/app_error.log;\nroot /dev/null;\n  client_max_body_size 0;\nlocation /gitlab {\n    proxy_read_timeout 300;\n    proxy_connect_timeout 300;\n    proxy_redirect off;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header X-Frame-Options SAMEORIGIN;\n    proxy_pass http://app;\n  }\n}\n```\nWith these I can see the build urls being constructed properly. Can you try this out?\n. @nathanleclaire I was careless while releasing 8.6.5. The changes from 8.6.4 to 8.6.5 were insignificant enough that and I went ahead and tagged a new release before trying to build the image locally. This was a big mistake from my side.\nAs it stands today, I have worked around the issue and made new releases. Sorry for the inconvenience. \n. gitlab-ci-multi-runner is used to configure runners for your builds. It can be run directly on the host or in a container like docker-gitlab-ci-multi-runner. Running it inside the gitlab container can adversely affect the performance of the gitlab ui. You must avoid doing so.\n. @qwc I tested your docker-compose.yml file and found no issues. can you try removing the sameersbn/gitlab:8.6.5-1 image and re-pulling? If that does not help then please try adding DEBUG=1 to the env of the gitlab container in the compose file.\n. > DEBUG=1 doesn't give more output than without.\nSorry. please set DEBUG=true\n. @qwc the log suggests that the automatic discovery of database parameters from the docker links is not happening and as a result the DB_HOST and DB_PORT variables are not being set as @SolidNerd suggested. Can you please verify your docker compose file to check if the links have been setup, i.e.\nyaml\n  links:\n    - redisgitlab:redisio\n    - postgresqlgitlab:postgresql\nIf it has then there may be some issue occurring that I do not understand. You should be able to  resolve this issue by setting DB_HOST=postgresql and REDIS_HOST=redisio \n. When reply_by_email was implemented by gitlab sub addressing was required. Now it seems it may not be the case anymore http://doc.gitlab.com/ce/incoming_email/README.html. I will test and make the changes. Will also have to notify user that rely on https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/env-defaults#L187-L189 \n. The referenced PR has been merged\n. IMO you should avoid using the GITLAB_CI_HOST parameter and instead point your runners to git.example.com/ci. Internally gitlab will redirect always so updating the URL in the runners will avoid this redirection.\n. @SolidNerd accessing the CI using GITLAB_CI_HOST will redirect the runner to git.example.com/ci. We could just set client_body_max_size 0 in the nginx/gitlab_ci config i think.\n. thanks will merge before making the 8.7.0 release\n. Implemented in 4720ff870a29bcb89b554177109b4212cb116521\n. @SolidNerd we need to define {{REDIS_DB_NUMBER}} in the gitlab-shell/config.yml too. https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/config/gitlab-shell/config.yml#L46\n. You need to perform the substitution for it as well. I thought you'd figure that one :smile: \nhttps://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/functions#L1130-L1143\n. I think if we want to support RC's then we should probably create a new development branch. adding RC releases to the master could be risky if a user unknowingly pulls the latest tag from the dockerhub. We could create a development tag on dockerhub as well.\n. I am just wondering how we would want the development to continue. should we do all development on the development branch and merge with master on new releases? If yes, then how do we handle changes that we would want to go on the master that are not really gitlab package updates.\n. @auspex yes, you can override the gitlab.yml without the need for rebuilding the image. see https://github.com/sameersbn/docker-gitlab/issues/413#issuecomment-137476735\nLet us know if you have any questions\n. @auspex oh got it.. like @SolidNerd mentioned, you need to override the gitlab.yml at the /etc/docker-gitlab/runtime/config/gitlabhq/gitlab.yml of the image. That is the runtime template. you download the template from the repo, edit/add whatever you need and add it to the image at the same location from your dockerfile.\n. Thanks for the PR. This is really helpful \ud83d\ude04 \n. @SolidNerd there are a few additional changes that need to be done. I am working on adding those. Will merge with the changes soon\n. @SolidNerd oh.. thanks for pointing it out. I was trying to debug that.\n. That seems to be some other issue.\nI dont see the admin user (root) being created on first boot. Specifying GITLAB_ROOT_PASSWORD also does not do anything. \n. This is the one major issue I see making the release.\nOther things are pretty basic like updating the gitlab.yml config and nginx configuration templates.\n. @vitorarins I think we'll directly release 8.8.2 or whichever version fixes the admin account creation.\n. @SolidNerd do you see the admin account creation issue?\n. @SolidNerd the admin account creation issue seems to be something that is specific to this image. Tried gitlab/gitlab-ce:8.8.1-ce.0 and had no problems. Will need some time to debug it.\n. @SolidNerd I have figured the admin account creation issue. Can you update the PR with the following patch\n`` diff\nFrom 8ec557711818e3aa6ee4109d39465d49f036ed03 Mon Sep 17 00:00:00 2001\nFrom: Sameer Naik <sameer@damagehead.com>\nDate: Fri, 27 May 2016 22:05:51 +0530\nSubject: [PATCH] dogitlab:setupafterdb:migrate`\n\nassets/runtime/functions | 13 +++++++------\n 1 file changed, 7 insertions(+), 6 deletions(-)\ndiff --git a/assets/runtime/functions b/assets/runtime/functions\nindex b1d10d1..1b97220 100644\n--- a/assets/runtime/functions\n+++ b/assets/runtime/functions\n@@ -1242,12 +1242,6 @@ migrate_database() {\n       COUNT=$(PGPASSWORD=\"${DB_PASS}\" psql -h ${DB_HOST} -p ${DB_PORT} -U ${DB_USER} -d ${DB_NAME} -Atw -c \"${QUERY}\")\n       ;;\n   esac\n-  if [[ -z ${COUNT} || ${COUNT} -eq 0 ]]; then\n-    echo \"Setting up GitLab for firstrun. Please be patient, this could take a while...\"\n-    exec_as_git force=yes bundle exec rake gitlab:setup \\\n-      ${GITLAB_ROOT_PASSWORD:+GITLAB_ROOT_PASSWORD=$GITLAB_ROOT_PASSWORD} \\\n-      ${GITLAB_ROOT_EMAIL:+GITLAB_ROOT_EMAIL=$GITLAB_ROOT_EMAIL} >/dev/null\n-  fi\n# migrate database if the gitlab version has changed.\n   CACHE_VERSION=\n@@ -1288,6 +1282,13 @@ migrate_database() {\n     rm -rf ${GITLAB_TEMP_DIR}/GITLAB_RELATIVE_URL_ROOT # force cache cleanup\n   fi\n\nif [[ -z ${COUNT} || ${COUNT} -eq 0 ]]; then\necho \"Setting up GitLab for firstrun. Please be patient, this could take a while...\"\nexec_as_git force=yes bundle exec rake gitlab:setup \\\n${GITLAB_ROOT_PASSWORD:+GITLAB_ROOT_PASSWORD=$GITLAB_ROOT_PASSWORD} \\\n${GITLAB_ROOT_EMAIL:+GITLAB_ROOT_EMAIL=$GITLAB_ROOT_EMAIL} >/dev/null\nfi\n+\n   # clear cache if relative_url has changed.\n   [[ -f ${GITLAB_TEMP_DIR}/GITLAB_RELATIVE_URL_ROOT ]] && CACHE_GITLAB_RELATIVE_URL_ROOT=$(cat ${GITLAB_TEMP_DIR}/GITLAB_RELATIVE_URL_ROOT)\n   if [[ ! -f ${GITLAB_TEMP_DIR}/GITLAB_RELATIVE_URL_ROOT || ${GITLAB_RELATIVE_URL_ROOT} != ${CACHE_GITLAB_RELATIVE_URL_ROOT} ]]; then\n--\n2.8.3\n```\n\nApple patch with git am <patch-name>\nWill start testing the PR tomorrow before landing..\n. The changes are being tested. Should land soon. Please be patient.\nOn 29/05/16 5:20 PM, Kuchaev Ilya wrote:\n\nAny success here?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/697#issuecomment-222356569,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AAZCI1ihgxpMZZG6AFRyxe_OgXzi76_Bks5qGX17gaJpZM4Ij-Mc.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. First of kudos to @SolidNerd for his excellent work on this PR. However at the moment I'm not very comfortable exposing the container registry integration as-is. The setup seems to be complicated and I would prefer holding back exposing the container registry options at least until we have a simple setup and cleanly documented instructions.\nWe have two options:\nOption 1: release for 8.0.x versions that do not include any of the container registry integrations bits. So we have a proper release and everyone can upgrade to the latest versions while we continue working on this PR to clean it up, make it better and easy to setup.\nOption 2: merge this PR and create RC releases instead.\nPersonally I prefer the first option. What do you guys thing?\n. I am going to cherry pick the commits from this PR and ready a release without the contaienr bits. This will be followed by the creation of a branch with the container specific stuff this PR add and will setup and automated build for it so that users who want to setup and use the container registry feature can do so.\nOh shit. just realized this PR makes one gaint commit. \ud83d\ude22 \n. @SolidNerd no worries.. I have the branch with your individual commits. Will be making the release a few minutes from now \ud83d\ude04 \n. I am publishing all the intermediate releases too. I will  create a branch with all your work and give you commit access to the repo \ud83d\ude09 \n. release 8.8.0 thru 8.8.2 have been published sans container registry support \ud83d\ude22 \n. the builds are in queue.. may take a couple of minutes before you can pull them from dockerhub. \n. @SolidNerd can you post the relavant links to the PR (like the gist your created)\n. release 8.8.0 thru 8.8.2 have been published (without container registry support).\n. > Will you continue to maintain this one\nI intend to maintain this image as long as we have users \ud83d\ude04 . In the event that \n\nhow does your container differ from the official one?\n\nPlease see my comment here #609 \n. Thanks for the great work you guys! I'm sorry I wasn't involved with this PR, but I trust @SolidNerd's judgement on this matter \ud83d\ude09 \n. p.s. I'm taking down the latest-container-registry builds from dockerhub. \n. Please see #708 \n. @mhf-ir The nginx configuration of the image will redirect http connections to https when GITLAB_HTTPS=true. \nIf you want the gitlab server to be accessible over http as well as https:\n1. Set GITLAB_HTTPS=false. This will disable the internal http -> https redirections and the clone urls will be of http:// form.\n2. Configure SSL termination at the load-balancer and don't perform any http->https redirections at the load-balancer.\nWith these changes, you should be able to clone repos with plain http as well as with https. But note that if a user accesses the Web UI over the http protocol, they will not be redirected to the more secure https protocol.\nFWIW, here is my nginx load-balancer configuration that I used for testing:\n``` nginx\nupstream gitlab {\n  server 172.17.0.1:10080 fail_timeout=0;\n}\nlet gitlab deal with the redirection\nserver {\n  listen 80;\n  server_name git.example.com;\n  server_tokens off;\naccess_log off;\nroot /dev/null;\n  client_max_body_size 0;\nlocation / {\n    proxy_read_timeout 300;\n    proxy_connect_timeout 300;\n    proxy_redirect off;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header X-Frame-Options SAMEORIGIN;\n    proxy_pass http://gitlab;\n  }\n}\nserver {\n  listen 443 ssl spdy;\n  server_name git.example.com;\n  server_tokens off;\nroot /dev/null;\n  client_max_body_size 0;\nssl on;\n  ssl_certificate /etc/nginx/ssl/git.example.com.crt;\n  ssl_certificate_key /etc/nginx/ssl/git.example.com.key;\n  ssl_verify_client off;\nssl_ciphers \"ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4\";\n  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n  ssl_prefer_server_ciphers on;\n  ssl_session_cache shared:SSL:10m;\n  ssl_session_timeout 5m;\n  ssl_dhparam /etc/nginx/ssl/dhparam.pem;\nlocation / {\n    ## If you use https make sure you disable gzip compression\n    ## to be safe against BREACH attack.\n    gzip off;\nproxy_read_timeout 300;\nproxy_connect_timeout 300;\nproxy_redirect off;\nproxy_set_header Host $http_host;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header X-Forwarded-Proto https;\nproxy_set_header X-Frame-Options SAMEORIGIN;\nproxy_pass http://gitlab;\n\n}\n}\n``\n. used to exist, was removed in c37d3d68569d20f62003d8ee54193ede53dc4605\nYou can add it back if it makes sense.\n. The simplest and recommended way of updating the gmail password (or any env variable for that matter) is to update thedocker-compose.yml` and restart the gitlab service using:\nbash\ndocker-compose down\ndocker-compose up\nChanges in docker-compose.yml are persistent across container startup and shutdowns and therefore recommended.\n. @azman0101 A runner is not started inside the gitlab container. \nYou should use gitlab-ci-multi-runner to setup the runner. sameersbn/gitlab-ci-multi-runner image packages gitlab-ci-multi-runner (you may find the project readme useful).\nPlease see http://docs.gitlab.com/ce/ci/runners/README.html for additional details.\n. Please take a look \ud83d\ude09 \n/cc @SolidNerd \n. @ecrazor1911 The issue may be related. But in the newer gitlab versions all requests are forwarded to the gitlab-workhorse daemon. This is little to no configuring on the nginx end of the container, see https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/config/nginx/gitlab.\nI would try the official gitlab-ce image to see if the problem exists and report to upstream if it did.\n. @GottZ I'd suggest submitting a P.R. to the upstream GitLab project\n. I'd prefer documenting this procedure in a supporting document and linking to it from the main README.\n. Sorry I completely missed tracking this PR. Will review and merge soon. Thanks.\n. @M0E-lnx I wonder if this has got something to go with the base image. Can you update the FROM line in the Dockerfile to FROM sameersbn/ubuntu:14.04.20160504 and retry building?\n. ouch! @SolidNerd does the container bits need more testing?\n. @SolidNerd can you please take a look at this\n. @SolidNerd If this is a desperately required fix then yes, you can make a hotfix release. In other cases we can wait for a few days for the next point release by gitlab.\n. @SolidNerd please hold on to the merge. Will review and merge it my self.\n. P.R. was merged in fd6f96db808803f0798b74ccd4a5f8c3fab4a9b8\nRelease has been made\n. /cc @SolidNerd\n. will make a new release with 8.9.1\n. This image is built using the GitLab Community Edition. The Jenkins \nintegration is part of the GitLab Enterprise Edition offering.\nYou may find relevant information here:\n- https://about.gitlab.com/features/#compare\n- http://docs.gitlab.com/ee/integration/jenkins.html\nPlease close this support request if the issue was resolved. Thanks.\nOn Monday 04 July 2016 08:15 AM, YiLi wrote:\n\nI'm running with images:\nsameersbn/gitlab:8.8.5-1\nsameersbn/postgresql:9.4-18\nsameersbn/redis:latest\nbut in |admin| -> |service templates| list, jenkins template is not\navailable, did I miss some config fields?\nBelow is the docker-compose file:\n`postgresql:\nrestart: always\nimage: sameersbn/postgresql:9.4-18\nenvironment:\n- DB_USER=gitlab\n- DB_PASS=gitlabpassword\n- DB_NAME=gitlabhq_production\n- DB_EXTENSION=pg_trgm\n  volumes:\n- /data/gitlab/postgresql:/var/lib/postgresql\n  gitlab:\n  restart: always\n  image: sameersbn/gitlab:8.8.5-1\n  links:\n- redis:redisio\n- postgresql:postgresql\n  ports:\n- \"10080:80\"\n- \"22:22\"\n  environment:\n- DEBUG=false\n- GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string\n|- GITLAB_HOST=gitlab.my.host - GITLAB_PORT=80 - GITLAB_SSH_PORT=22 -\nGITLAB_RELATIVE_URL_ROOT= - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true -\nGITLAB_NOTIFY_PUSHER=false - GITLAB_EMAIL=notifications@example.com -\nGITLAB_EMAIL_REPLY_TO=noreply@example.com -\nGITLAB_INCOMING_EMAIL_ADDRESS=reply@example.com -\nGITLAB_BACKUP_SCHEDULE=daily - GITLAB_BACKUP_TIME=01:00 -\nSMTP_ENABLED=false - SMTP_DOMAIN=www.example.com -\nSMTP_HOST=smtp.gmail.com - SMTP_PORT=587 - SMTP_USER=mailer@example.com\n- SMTP_PASS=password - SMTP_STARTTLS=true - SMTP_AUTHENTICATION=login -\n  IMAP_ENABLED=false - IMAP_HOST=imap.gmail.com - IMAP_PORT=993 -\n  IMAP_USER=mailer@example.com - IMAP_PASS=password - IMAP_SSL=true -\n  IMAP_STARTTLS=false |\nvolumes:\n- /data/gitlab/gitlab:/home/git/data\n  redis:\n  restart: always\n  image: sameersbn/redis:latest\n  volumes:\n- /data/gitlab/redis:/var/lib/redis`\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/776, or mute the\nthread\nhttps://github.com/notifications/unsubscribe/AAZCI5kCyjg5JwPloOcKXsFcn60z09LAks5qSHPfgaJpZM4JEA1t.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. those builds failed, so no tags were created \n. fixed https://github.com/sameersbn/docker-gitlab/releases/tag/8.9.4\n. @yuiopt I would not suggest using mysql. Gitlab works best with postgresql and is the database recommended by GitLab Inc.\n. @15921050052 The log indicates that the connection to the mysql server is not possible. Looks like the DB_HOST parameter is not set correctly. If your using an external mysql server, the hostname cannot be 127.0.0.1.  This would mean that the mysql server is running inside the gitlab container, which is not the case.\n. @SolidNerd I've avoided this change because removal of NGINX means that we can no longer have SSL termination in the image and users would always have to use a load balancer to provide the SSL termination.\nI'm sure there are at least a few users using SSL termination this way.  I wouldn't want to break this for them.\nWhat are your thoughts?\n. I am okay with the removal of NGINX from the image. But it should be done gradually in phases to provide users time to migrate. I am thinking anywhere from 3 to 6 months for the migration to be completed. \nThere are a number of institutions using this image in their production environments and it'll be wrong to yank the nginx without any warnings. Here's my proposal to carrying out this change:\nPhase 1 (duration: 2 month)\n\nAdd NGINX_ENABLED env variable that defaults to true\nTest internally over a couple of gitlab releases to ensure that everything is going to be fine.\n\nPhase 2 (duration: 1 months)\n\nProvide the necessary samples/templates for the migration\nAnnounce to users in whatever ways possible\nMark sections of README (SSL config, etc) as deprecated\nAdd warnings to the container output\nUpdate the Announcements issue\n\nPhase 3 (duration: 3 months)\n\nSet NGINX_ENABLED=false by default\n\nPhase 4\n\nCompletely remove NGINX and the NGINX_ENABLED flags\n\nWhat do you think?\n. > They need separate tags so we could have :\n\nsameersbn/gitlab:8.9.6\nsameersbn/gitlab:8.9.6-nginx\n\nIMO sameersbn/gitlab:8.9.6 should always be the main version that everyone is expected to use. If you think we should have a separate version without nginx, then it's  the one that should be named differently.\nAnyways, I am of the opinion that adding a NGINX_ENABLED env variable should be good enough. I can't  think of any maintenance issues during the 6 month transition period. It would also allow us to rollback this change, without anyone ever noticing, in case it does not work out for certain cases. \n. Hey @SolidNerd, Sorry about the delay.\nI think we should warn users trying to install SSL certificates when they set NGINX_ENABLED=false cause its definitely not going to fly.\n. @SolidNerd I was thinking maybe we should revert 70dc29de1a1c6b226c4e5f9e8c45fb3ae0136170. In this PR we can configure gitlab-workhorse to listen on port 80 when NGINX_ENABLED=true using sed. WDYT?\n. I'll merge the changes.\n. @SolidNerd Did you test it? \n. Sorry about this guys. The issue was because if this change https://github.com/sameersbn/docker-gitlab/commit/48cf19f9571cc5519908ee2d5ae0df71a9e5871e (line https://github.com/sameersbn/docker-gitlab/commit/48cf19f9571cc5519908ee2d5ae0df71a9e5871e#diff-f8d3d6b83d26bfed3a639be87877628dL105 in particular). Do you think i should revert the change. Or does it make more sense that the update is performed at the loadbalancer ?\n. Have reverted the changes. Could you guys please validate the latest image against your setup? Upon confirmation I'll create a new tag. Thanks.\n. can you update the status? were you able to resolve the issue?\n. @dh1tw @hsitaa It would help if you could provide some basic information about your mail delivery system. \nAnyways, I think this is a basic configuration issue. Consider looking through past mail delivery issues. I'm sure you'll find an answer.\n- https://github.com/sameersbn/docker-gitlab/issues?utf8=%E2%9C%93&q=is%3Aissue%20sendmail\n- https://github.com/sameersbn/docker-gitlab/issues?utf8=%E2%9C%93&q=is%3Aissue%20smtp\n- https://github.com/sameersbn/docker-gitlab/issues?utf8=%E2%9C%93&q=is%3Aissue%20email\n. Sorry that I haven't been very active on this repo. Thanks for the amazing work @SolidNerd. I hope you continue the excellent work while i tend to the other repo's that need some love.\n. yea.. I can configure such builds. I am only worried that DH wont shit on me.\n. yea.. I can configure such builds. I am only worried that DH wont shit on me.\n. sure. whats your id on DH?\n. sure. whats your id on DH?\n. I've configured a 8.10 tag on DH.\nLets see how it works out :smiley: \n. I've configured a 8.10 tag on DH.\nLets see how it works out :smiley: \n. DH is case sensitive :smile: \n. DH is case sensitive :smile: \n. i've added you as a collaborator. can you check if you have access to the build settings page?\n. i've added you as a collaborator. can you check if you have access to the build settings page?\n. whats the point of doing this then? DH makes me so angry sometimes. :angry: \n\n. whats the point of doing this then? DH makes me so angry sometimes. :angry: \n\n. thats another thing... I don't understand why DH allows users to push to a automated build repo.\np.s. please do not push any image directly to DH, we  should only do automated builds.\n. thats another thing... I don't understand why DH allows users to push to a automated build repo.\np.s. please do not push any image directly to DH, we  should only do automated builds.\n. what do you mean? a 8.10 rebuild would be triggered only when a new 8.10.x series release is made.\n. what do you mean? a 8.10 rebuild would be triggered only when a new 8.10.x series release is made.\n. I don't understand this issue you are trying to address.\n. I don't understand this issue you are trying to address.\n. @SolidNerd do you want to change anything here?\n. @SolidNerd do you want to change anything here?\n. @QuickJack If you launch the container with app:sanitize argument it'll set the file and folder permissions to what gitlab expects. So if its indeed the cause, it should get resolved. Please try fixing the permissiong using app:sanitize and avoid doing a chown/chmod.\n. @QuickJack If you launch the container with app:sanitize argument it'll set the file and folder permissions to what gitlab expects. So if its indeed the cause, it should get resolved. Please try fixing the permissiong using app:sanitize and avoid doing a chown/chmod.\n. Thanks @mikew docker-compose exec gitlab /sbin/entrypoint.sh app:sanitize is indeed the easiest :smile: \n. Glad that it worked. And thanks @QuickJack for the sharing the details of your resolution.\n. The cause of the issue is probably caused by the user running chown or moving the data directory which caused the ownerships and permissions to change.\nThe permanent fix this issue is to always to app:sanitize when the container is started. But this results in a longer startup time when you a large number of repos. \n. > Suppose there is a new user and all permissions are set correctly. This user does not have a personal folder\n\nThis is not supposed to happen. I think GitLab will create a the personal folder for each user when the user is created. If it does not, then there's could be some issue. I check if this is the case.\n. You need to update the TOC as well. \n. @nsymms can you make a PR with your proposed changes. \n. nice. thats great guys.\n. I've switched back and forth between github.com and gitlab.com clone urls on multiple occasions in the past. The last time I switched it was when the image builds were failing during to issues to perform a git shallow clone from gitlab.com.\n\nOn that particular occasion no immediate fixes were being proposed and out of frustration i moved it back to github.com. Ideally I would perfer to clone all repos from github.com, but some of the projects are not mirrored on github.com.\n. @SolidNerd The config/resque.yml format seems to have changed. We should updated our copy.\n. >  this will enable redis sentinel as well. Do we support it ?\n\nNo. At least not in this release. But i noticed that the config file has changed for single redis instance\n\nUsed to be:\nyaml\nproduction: unix:/var/run/redis/redis.sock\nNow it is: \nyaml\nproduction:\n  url: unix:/var/run/redis/redis.sock\n\nSo we need to introduce 2 two variables for the keys\n\nPerfectly fine add these variables.\n\nI will do the required steps today in the evening.\n\nThanks for your amazing efforts.\n. Sorry, I didn't comment on this PR earlier. But there are multiple instances in the readme that we could update for this change.\n. @GJRTimmer just did.\n. oh. sorry.. on it.\n. base image has been updated. thanks for your patience.\n. next releases of the base image?\n. yes.. please handle the release :smile: \n. LGTM!. I think we should just steal the one from  the docker repo. It includes everyrthing we should need.. @solidnerd @splattael i've amended some commits to the PR. Please review as time permits.\nThanks for your great contributions.. > some chap has an SSL only mailserver he won't be able to use this repo\nI think in this case you need to set:\nSMTP_TLS=true\nSMTP_STARTTLS=false\n. FYI, I do not think this PR should be merged if my last suggestion works (it most probably will)\n. Thanks @grugnog. You are right, we need to switch to using deployments. I intend to replace/rewrite all the kubernetes manifests as a helm chart. It would be much easier to manage deployments on kubernetes.\n. @tbeadle The upstream instructions/scripts capture these two logs in the log directory of the GitLab installation. This is probably because these two daemons have no logging mechanisms other than logging to the stdout/stderr.\nWe prefer to have the gitlab related logs on the log/ directory of the gitlab installation and hence we log these to files in GITLAB_INSTALL_DIR/log.\nI am of the opinion that this should not be changed.\n. Thanks for the contribution @tbeadle, but don't you think this change is unnecessary? I prefer to have the unicorn configuration intact and would also help in the event we decide to dump supervisord at some point.\n. https://github.com/sameersbn/docker-gitlab/releases/tag/8.13.1\n. @Pegasuz Please apply this patch too \ndiff\ndiff --git a/assets/build/install.sh b/assets/build/install.sh\nindex 5320a47..3122840 100755\n--- a/assets/build/install.sh\n+++ b/assets/build/install.sh\n@@ -231,16 +231,7 @@ priority=10\n directory=${GITLAB_INSTALL_DIR}\n environment=HOME=${GITLAB_HOME}\n command=bundle exec sidekiq -c {{SIDEKIQ_CONCURRENCY}}\n-  -q post_receive\n-  -q mailers\n-  -q archive_repo\n-  -q system_hook\n-  -q project_web_hook\n-  -q gitlab_shell\n-  -q incoming_email\n-  -q runner\n-  -q common\n-  -q default\n+  -C ${GITLAB_INSTALL_DIR}/config/sidekiq_queues.yml\n   -e ${RAILS_ENV}\n   -t {{SIDEKIQ_SHUTDOWN_TIMEOUT}}\n   -P ${GITLAB_INSTALL_DIR}/tmp/pids/sidekiq.pid\n. this too: \ndiff\ndiff --git a/assets/runtime/config/gitlab-shell/config.yml b/assets/runtime/config/gitlab-shell/config.yml\nindex 82fe460..bcaaefa 100644\n--- a/assets/runtime/config/gitlab-shell/config.yml\n+++ b/assets/runtime/config/gitlab-shell/config.yml\n@@ -68,3 +68,10 @@ audit_usernames: false\n # For Debian and Ubuntu systems this can be done with: sudo apt-get install git-annex\n # For CentOS: sudo yum install epel-release && sudo yum install git-annex\n git_annex_enabled: false\n+\n+# Git trace log file.\n+# If set, git commands receive GIT_TRACE* environment variables\n+# See https://git-scm.com/book/es/v2/Git-Internals-Environment-Variables#Debugging for documentation\n+# An absolute path starting with / \u2013 the trace output will be appended to that file.\n+# It needs to exist so we can check permissions and avoid to throwing warnings to the users.\n+git_trace_log_file:\n. and this last one :stuck_out_tongue: \n`` diff\ndiff --git a/README.md b/README.md\nindex 87fdce9..8bb9070 100644\n--- a/README.md\n+++ b/README.md\n@@ -805,6 +805,7 @@ Below is the complete list of available options that can be used to customize yo\n |GITLAB_EMAIL| The email address for the GitLab server. Defaults to value ofSMTP_USER, else defaults toexample@example.com. |\n |GITLAB_EMAIL_DISPLAY_NAME| The name displayed in emails sent out by the GitLab mailer. Defaults toGitLab. |\n |GITLAB_EMAIL_REPLY_TO| The reply-to address of emails sent out by GitLab. Defaults to value ofGITLAB_EMAIL, else defaults tonoreply@example.com. |\n+|GITLAB_EMAIL_SUBJECT_SUFFIX| The e-mail subject suffix used in e-mails sent by GitLab. No defaults. |\n |GITLAB_EMAIL_ENABLED| Enable or disable gitlab mailer. Defaults to theSMTP_ENABLEDconfiguration. |\n |GITLAB_INCOMING_EMAIL_ADDRESS| The incoming email address for reply by email. Defaults to the value ofIMAP_USER, else defaults toreply@example.com. Please read the [reply by email](http://doc.gitlab.com/ce/incoming_email/README.html) documentation to curretly set this parameter. |\n |GITLAB_INCOMING_EMAIL_ENABLED| Enable or disable gitlab reply by email feature. Defaults to the value ofIMAP_ENABLED`. |\ndiff --git a/assets/runtime/config/gitlabhq/gitlab.yml b/assets/runtime/config/gitlabhq/gitlab.yml\nindex 07d4fa7..7efbb2c 100644\n--- a/assets/runtime/config/gitlabhq/gitlab.yml\n+++ b/assets/runtime/config/gitlabhq/gitlab.yml\n@@ -67,6 +67,7 @@ production: &base\n     email_from: {{GITLAB_EMAIL}}\n     email_display_name: {{GITLAB_EMAIL_DISPLAY_NAME}}\n     email_reply_to: {{GITLAB_EMAIL_REPLY_TO}}\n+    email_subject_suffix: '{{GITLAB_EMAIL_SUBJECT_SUFFIX}}'\n # Email server smtp settings are in config/initializers/smtp_settings.rb.sample\n\ndiff --git a/assets/runtime/env-defaults b/assets/runtime/env-defaults\nindex ec8940b..95421c9 100644\n--- a/assets/runtime/env-defaults\n+++ b/assets/runtime/env-defaults\n@@ -186,6 +186,7 @@ SMTP_ENABLED=${SMTP_ENABLED:-false}\n GITLAB_EMAIL_ENABLED=${GITLAB_EMAIL_ENABLED:-${SMTP_ENABLED}}\n GITLAB_EMAIL=${GITLAB_EMAIL:-${SMTP_USER}}\n GITLAB_EMAIL_REPLY_TO=${GITLAB_EMAIL_REPLY_TO:-${GITLAB_EMAIL}}\n+GITLAB_EMAIL_SUBJECT_SUFFIX=${GITLAB_EMAIL_SUBJECT_SUFFIX:-}\n GITLAB_EMAIL=${GITLAB_EMAIL:-example@example.com}\n GITLAB_EMAIL_REPLY_TO=${GITLAB_EMAIL_REPLY_TO:-noreply@example.com}\n GITLAB_EMAIL_DISPLAY_NAME=${GITLAB_EMAIL_DISPLAY_NAME:-GitLab}\ndiff --git a/assets/runtime/functions b/assets/runtime/functions\nindex ac2bab4..1145bd6 100644\n--- a/assets/runtime/functions\n+++ b/assets/runtime/functions\n@@ -359,7 +359,8 @@ gitlab_configure_mail_delivery() {\n     GITLAB_EMAIL_ENABLED \\\n     GITLAB_EMAIL \\\n     GITLAB_EMAIL_DISPLAY_NAME \\\n-    GITLAB_EMAIL_REPLY_TO\n+    GITLAB_EMAIL_REPLY_TO \\\n+    GITLAB_EMAIL_SUBJECT_SUFFIX\n }\ngitlab_configure_mailroom() {\n```\nWith these changes I think we should be good to test before releasing a new version.\n. thanks time for some testing..\n. Hi @solidnerd are you seeing the merge issue too?\nI haven't tried testing yet.. have deferred it by a couple hours. \n. I've preferred to stick with the upstream instructions to avoid unnecessary support requests. http://docs.gitlab.com/ce/install/installation.html#3-go suggests using Go 1.5.3 but I see we have already switched to using a newer version a while back.. We can implement some generic logic in future iterations, for now its better to land this.. On second thought, I dont really like the changes this PR makes. I agree with @solidnerd we should be able to make this configuration generic.. @phenomax please see this comment . Looks good to me.. . @adamniedzielski @dashersw Sorry for my lateness in responding to your PR. I think this is a good idea. I've created #1060 with the required changes. If it's acceptable to you, I get it merged. Best Regards.. @yiwangai1983 The git clone URL's should reflect the value specified in GITLAB_HOST. The information you have suppied is insufficient for us to reproduce and debug the issue. Please provide information that will enable us to reproduce the issue. Refer to the issues section of the readme for the relevant information that should be suppied.. > We update our instance once a month to the latest release from last month and it takes 5 min. We had no upgrade pain since we're doing it.\nI love that your doing this. I recommend the same for people running gitlab-ce in production :+1: \n\nwe will not get the vulnerability patches for the 8.16.x once sameersbn/docker-gitlab is version upped to 8.17 right?\n\nMaybe we can make some efforts to continue updating the last release in such cases. It's a little extra effort for the maintainers but I see this happen infrequently. WDYT @solidnerd?. > update of our maintenance workflow and branching model. \ncompletely agree. I was thinking create a version branch when a new major release it out. f.e. we create a 8.15-stable branch when the first 8.16 release is published. Updating the 8.15-stable branch will be infrequent i believe and we will be paving the way for users to contribute these updates if it effects them.\n\nWe need to work with docker hub hooks\n\nI don't really realise how docker hub hooks will help.\n\nBut first I want automated tests for it.\n\nYep. This is a big pain point. We should be working on this with high priority. Do you have any ideas for this?. Will definitely take a look.\nOn Thursday 02 February 2017 03:43 PM, Niclas Mietz wrote:\n\nFor information about the build hooks. I can provide you some\ninformation https://docs.docker.com/docker-cloud/builds/advanced/ . This\nHooks works as well on Docker Hub.Then we can control the process of builds.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1058#issuecomment-276917789,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAZCI7JzEswcOYvLSn6PAbw0kI4uIiyZks5rYaxWgaJpZM4LpALr.\n\n\n-- \nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. Thanks for the review @solidnerd, have made the suggested change.\n@adamniedzielski Do let us know your thoughts. Would like this to be resolved ASAP.. most changes look good to me.\n@phenomax  can you drop  the WIP label from the PR title?. @joshuacox thanks for trying the image out with rancher and i am happy to know that you were able to workaround the postgresql issue.\nIt is perfectly alright to use the official postgres image with this GitLab image. I will try out rancher as time permits and fix the issue you noticed with the postgresql image. If you do have a fix, I would be grateful if you would be kind enough to propose a fix.\np.s. @solidnerd has been handling the bulk of the development of this repo. props to him.\nThanks and Cheers.. @Holt59 I suspect the port 8443 has not been forwarded properly to the gitlab container. Without knowing the details of your environment its difficult to offer a suggestion.\nDo you see the SSH if you try using telnet to test the connection?\n$ telnet gitlab.example.com 8443\nTrying gitlab.example.com...\nConnected to gitlab.example.com.\nEscape character is '^]'.\nSSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.8\nIf not, then the SSH server running in the container is not reachable from the gitlab.example.com:8443. @Holt59 I suspect the port 8443 has not been forwarded properly to the gitlab container. Without knowing the details of your environment its difficult to offer a suggestion.\nDo you see the SSH if you try using telnet to test the connection?\n$ telnet gitlab.example.com 8443\nTrying gitlab.example.com...\nConnected to gitlab.example.com.\nEscape character is '^]'.\nSSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.8\nIf not, then the SSH server running in the container is not reachable from the gitlab.example.com:8443. @Holt59 thanks for pointing out that you faced the problem only while cloning a group repo. Will try it out and let you know. Thanks.. @Holt59 thanks for pointing out that you faced the problem only while cloning a group repo. Will try it out and let you know. Thanks.. 8.16.0 has been released. gonna skip this revision. 8.16.0 has been released. gonna skip this revision. > Do you mind if I keep a LTS (or stable) version repo that should basically fork from your repo?\nInstead of an LTS version for reasons outlined by @medokin in https://github.com/sameersbn/docker-gitlab/issues/1058#issuecomment-274474879, my proposal is to maintain the previous months release and apply security fixes to it until the next release it out. This is something that will mostly be manageable for the maintainers.\n\nIf you don't like it I'll keep the docker builds private.\n\nNo I do not mind it one bit. The project is licensed under MIT license terms, so you are free to do it. I'm pretty sure @solidnerd won't have any objections as well. We would like it better if all users can benefit from your work :slightly_smiling_face: \n. > Do you mind if I keep a LTS (or stable) version repo that should basically fork from your repo?\nInstead of an LTS version for reasons outlined by @medokin in https://github.com/sameersbn/docker-gitlab/issues/1058#issuecomment-274474879, my proposal is to maintain the previous months release and apply security fixes to it until the next release it out. This is something that will mostly be manageable for the maintainers.\n\nIf you don't like it I'll keep the docker builds private.\n\nNo I do not mind it one bit. The project is licensed under MIT license terms, so you are free to do it. I'm pretty sure @solidnerd won't have any objections as well. We would like it better if all users can benefit from your work :slightly_smiling_face: \n. @kason223 @Niceplace I tried creating a new deployment with sameersbn/postgresql:9.5-4 and later upgrading to sameersbn/postgresql:9.6-1 and faced no data loss. Could you provide more information so that we can reproduce and debug the issue?\n. @kason223 @Niceplace I tried creating a new deployment with sameersbn/postgresql:9.5-4 and later upgrading to sameersbn/postgresql:9.6-1 and faced no data loss. Could you provide more information so that we can reproduce and debug the issue?\n. thanks for reporting the issue. specifying the password via the environment variable should have worked. I will check it and get back to you. In the mean time can you retry with a fresh deployment and with the GITLAB_ROOT_PASSWORD env variable specified?. thanks for reporting the issue. specifying the password via the environment variable should have worked. I will check it and get back to you. In the mean time can you retry with a fresh deployment and with the GITLAB_ROOT_PASSWORD env variable specified?. Hi. I tested on a GKE cluster and was able to use the GITLAB_ROOT_PASSWORD param to set the root password and login using the same. Hi. I tested on a GKE cluster and was able to use the GITLAB_ROOT_PASSWORD param to set the root password and login using the same. Thanks for the contribution. The PR was merged in 41a08e9cbf3f5daad1451e12ad51813a3f88c1ec (before the rebase). Manually closing it.. @phenomax If you are using GitLab in productio  you should wait a couple of weeks after a new releases before upgrading. I think a good upgrade strategy for GitLab in production would be to delay upgrades by a month. . @Ilya-Kuchaev Yes, it's long overdue. I am hoping to get the upgrade completed this week.. @solidnerd i've released sameersbn/ubuntu:16.04.20180124. Maybe we can have it in this release?. > @sameersbn It's already in there 33427da\noh sweet!. > If we use the default uploads dir path, it resides within the images location which is not great.\n@fforootd by default the uploads directory is located at ${GITLAB_DATA_DIR}/uploads (via symlinks). . Sorry about the late response. Were you able to get past this issue?. Could anyone facing this issue try to run mysql_upgrade in there mysql container and retry? . guys, sorry about this issue. this is precisely why we should avoid the use of latest tag. PR #1680 builds on top of #1667. Please refer to it until it has been accepted and merged. ci failed because the image has not been built by dockerhub yet. . @keyj thanks for the tip on the --protected-mode no flag. I'll send in a PR to use it with the latest redis release. Thanks. @weisjohn \nthis is how you'd launch redis.\nbash\ndocker run --name gitlab-redis --rm -d \\\n        --volume $(pwd)/data/redis:/var/lib/redis \\\n        sameersbn/redis:latest --protected-mode=no\n@keyj sorry i did not see your pr here and i went and created #1680 which updates all instances of the docs where this is needed. Pasting the log would be helpful.. but I must point out you should be using sameersbn/redis:3.0.6. The sameersbn/redis:latest tag bring in redis-4.x which currently is not supported in this image config. @sayi65 While taking a look at the config you pasted I noticed that you have specified the host ip of the mysql server as 192.168.1.100. I hope you have logged into the mysql service and created the database first. Please take a look at https://github.com/sameersbn/docker-gitlab#external-mysql-server for more information on the subject.\n. Oh.. good point! let me check. the changes do not appear to have any effect on the relative_url functionality. I think we're good.. closing in favor of #1680. @solidnerd please hold on to this PR. I rather change this in the redis image.. Starting with sameersbn/redis:4.0.9-1, the image disables protected mode by default... PR updated,should be good for merging. lgtm. Please note that I have not in particular tested the gitlab-pages feature set. I do not have the bandwidth to perform the setup for the tests at the moment. I would really appreciate it if someone can give this PR a try and test out the gitlab-pages featureset of gitlab.. yes I agree. It will really help us ramp up with the development.. in my experience circle ci is quick to process builds compared to travis. platform stability wise circle ci does encounter quite a few service outages on a regular basis. Not sure whats the case with travis, by guess is that they probably have fewer outages.\nIf we were to vote, then I'd vote for circle ci because of my familiarity with the platform and the build processing speed. The outages are no that much of a problem be cause the recover quick enough.. :+1:\nOn Wednesday 01 August 2018 12:18 PM, Niclas Mietz wrote:\n\nOkay, can you prepare the circleci stuff. That this repo is able to use\nit. I will do the rest than.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1690#issuecomment-409468084,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAZCIyGJfPbhzAxVb-S3DXd2DD2911lMks5uMU8xgaJpZM4Vojq6.\n\n\n-- \nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. Yes. I have plans for that. Just want to make incremental progress.. So my plans are to use the official go docker images in build stages to compile each of the go packages. Then another stage to build the gitlab-ce package (gem installation and stuff) and the final stage will bring it all together.. eventually we should look into separate each component in it's only microservice dockerfile. looking at all the new components gitlab has added to the stack, the image is started to look very bloated.. @rangochan I believe the compilation step needs to have a working connection to the internet. first i would make sure there are no issues with the internet connectivity. as the error message indicated, you can add the --trace argument to the command to get a dump of what's going on. Also, it would be really useful if you paste the error messages instead of uploading screenshots. Plaintext logs allow us to search for similar errors / issues easily.. > Should we remove travis than ?\nyep, added a commit that removes .travis.yml. > Also I can't see any build logs on the hub anymore.\nYou are still listed as a collaborator on the image. I think you may have to hit the Manage Repository button on https://hub.docker.com/r/sameersbn/gitlab to view the configuration and build timeline.\n\nWe should think about a technical user that publishes images direct from CircleCI.\n\nAre you suggesting we build on circle ci and push images to the hub instead?. > Yep that would be my plan\nIt appears I can only create a team on docker hub if sameersbn is an organisation. That probably explains why you are not able to see the manage repository button even though you are a collaborator. I'll check what can be done and get back with you on this.. The sed substitution at line 142 has no effect on database.yml.\nBesides can't we just rid of the :reconnect option from database.yml since for mysql it is false by default and postgres does not support :reconnect (i think).\nLet me know. \nReferences:\nhttp://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html\nhttp://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html\n. @arnos can you tell me why passwd -d git is being done?\n. @pinglamb typo here\n. @DrSarez can you remove the {} from the GITLAB_DATA_DIR variable here. I have seen issue with such syntax before.\n. @jgeiger behaviour and behavior are valid spellings. Its a American English vs British English thing :)\nHowever I had no idea americans spelt it as \"behavior\". \n. ok.. have merged it already. Thanks for the fixes.\n. @xflash I think you would need to use a different delimiter character in the sed commands here. Since the urls would have the / characters in them, sed would get confused. You would need to use some other delimiter character like |, eg.\nbash\nsudo -u git -H sed 's|{{GITLAB_GRAVATAR_URL}}|'\"${GITLAB_GRAVATAR_URL}\"'|' -i config/gitlab.yml\nsudo -u git -H sed 's|{{GITLAB_GRAVATAR_SEC_URL}}|'\"${GITLAB_GRAVATAR_SEC_URL}\"'|' -i config/gitlab.yml\nI have not tested this yet, but I think that is going to be the case.  Have you tested setting those parameters in your tests?\n. @xflash Also, you did not update the sed command after the last change, i.e. GITLAB_GRAVATAR_URL and GITLAB_GRAVATAR_SEC_URL have been renamed to GITLAB_GRAVATAR_HTTP_URL and GITLAB_GRAVATAR_HTTPS_URL, but the sed command is not updated to reflect this change.\n. @xflash lastly, we dont want the plain_url and//or ssl_url settings in the gitlab.yml file when these parameters are not supplied, so that gitlab can use its default configuration.\nsomething like\nbash\ncase \"${GITLAB_GRAVATAR_HTTP_URL}\" in\n  \"\") sudo -u git -H sed '/{{GITLAB_GRAVATAR_HTTP_URL}}/d' -i config/gitlab.yml ;;\n  *) sudo -u git -H sed 's|{{GITLAB_GRAVATAR_HTTP_URL}}|'\"${GITLAB_GRAVATAR_HTTP_URL}\"'|' -i config/gitlab.yml ;;\nesac\nSame goes for GITLAB_GRAVATAR_HTTPS_URL.\nP.S. I can confirm that sed will error out with the sed: -e expression #1, char 39: unknown option tos'\nmessage ifGITLAB_GRAVATAR_HTTP_URL=http://www.google.com/is set.\n. @fetzerch instead of grepping the/etc/passwdfile, we can use theid` command\nbash\nid -u git  # get git users uid\nid -g git  # get git users gid\n. @fetzerch Would it make sense to automatically set USERMAP_GID to USERMAP_UID when USERMAP_GID is not specified? \n. @fetzerch similar to using id command, we can use usermod command to set the users uid and gid\nbash\ngroupmod -g 500 git  # changes git group gid to 500\nusermod -u 500 git    # changes git user uid to 500\nUsing usermod and groupmod commands will ensure that two groups or users do not have the same id, which could otherwise have unnecessary consequencies.\nIn the documentation we could add that it is generally safe to ids 500 and above. Newer distros use 1000 and above for system user ids.\n. @fetzerch thats right. didn't realize it. I though it only changes the parent directories permissions.\n. @fetzerch I am getting some errors when using USERMAP_UID and USERMAP_GID, with --env='USERMAP_UID=500' --env='USERMAP_GID=1000' \nbash\nAdapting uid and gid for git:git to 500:1000\nchgrp: missing operand after '1000'\nTry 'chgrp --help' for more information.\nI think its because the second find does not return any results. I would suggest replacing\nbash\nfind ${GITLAB_HOME} /var/log/gitlab -not -path \"${GITLAB_DATA_DIR}/*\" \\\n    -not -user 0 -not -user \"${USERMAP_UID}\" -print0 | xargs -0 chown -h \"${USERMAP_UID}\"\n  find ${GITLAB_HOME} /var/log/gitlab -not -path \"${GITLAB_DATA_DIR}/*\" \\\n    -not -group 0 -not -group \"${USERMAP_GID}\" -print0 | xargs -0 chgrp -h \"${USERMAP_GID}\"\nwith \nbash\nchown git:git ${GITLAB_HOME} ${GITLAB_DATA_DIR}\nEverything inside ${GITLAB_DATA_DIR} will have to be fixed with app:sanitize anyway.\nIn the meantime, I will fix the appSanitize function that seems to not work properly here.\nedit: changing ownership of /var/log/gitlab is not required. The directory does not even exist at this point.\n. @fetzerch nope. without the -R flag. But yes, ignore my suggestion. Instead club the two find commands into one\nbash\nfind ${GITLAB_HOME} -not -path \"${GITLAB_DATA_DIR}/*\" -print0 | xargs -0 chown -h git:git\nchown git:git ${GITLAB_DATA_DIR}\nThat should fix the issue\nedit: you can drop the -not -user 0 -not -user \"${USERMAP_UID}\" from the find command. Everything inside /home/git/ should be owned by git:git anyway, we just want to skip contents of the ${GITLAB_DATA_DIR} dir.\nedit: updated suggested command\n. @fetzerch made a slight change in the find command https://github.com/sameersbn/docker-gitlab/commit/f7d5f080e276b20d65cfd51869a184efbdc79f16\n. @msteinert please move this line back to the original position. This line makes sure that the resulting fs layer does not include the apt cache/lists\n. @andycmaj you have a typo here (butket) and I think you intend to use ${GITLAB_BACKUP_AWS_S3_BUCKET} and not ${GITLAB_BACKUP_AWS_S3_BUCKET:-}\n. @russell I would suggest replacing GITLAB_ROOT_PASSWORD=${GITLAB_ROOT_PASSWORD} with ${GITLAB_ROOT_PASSWORD:+GITLAB_ROOT_PASSWORD=$GITLAB_ROOT_PASSWORD} to avoid any breakages in the future.\n${GITLAB_ROOT_PASSWORD:+GITLAB_ROOT_PASSWORD=$GITLAB_ROOT_PASSWORD} will make sure the GITLAB_ROOT_PASSWORD parameter is added to the command line only if GITLAB_ROOT_PASSWORD is defined.\n. @russell also, please rebase the PR while your at it. thanks.\n. @aforward I think you should modify the appInit function to return 1 on failures. i.e. replace the exit 1 with return 1 and end the function with return 0\n. @aforward ok maybe not. un-read my previous comment\n. I think the instructions should be:\nbash\nwget https://raw.githubusercontent.com/sameersbn/docker-gitlab/master/docker-compose.yml.dist -O docker-compose.yml\ndocker-compose up\nIts a quickstart guide, copy-paste commands are preferred here :smile: \n. Here we are only setting permissions on  the topmost uploads/ directory so that this step does not effect the start up time of the container. If user notices issues, he/she is expected to run app:sanitize to fix them\n. Only here we do a recursive chown / chmod\nThe GitLab suggested permission settings, set directories to 0755 and files to 0644. But your changes sets everything to 750. Not sure if this could cause any problems.\np.s. my chmod -R 0750 ${GITLAB_DATA_DIR}/uploads/ line is wrong. should just have been chmod 0750 ${GITLAB_DATA_DIR}/uploads/\n. @xueshanf this is in the wrong code block. Should be in gitlab_configure_oauth_saml function.\n. typo in sed command name (all instances) :smile: \ncan you fix and update PR. Also can you add Configuring gitlab::rack_attack... message like the other functions.\nPlease comment on the PR after you update it so that I am notified.\n. please move this configuration to after https://github.com/sameersbn/docker-gitlab/blob/master/assets/build/install.sh#L131\n. should we remove these links since we have to specify the following in the env:\n- DB_HOST=postgresql\n      - DB_POST=5432\n      - DB_USER=gitlab\n      - DB_PASS=password\n      - REDIS_HOST=redisio\n      - REDIS_PORT=6379\nI haven't played around with docker-compose v2 yet, I don't really know if we will be able to perform automatic discovery of the env variables using links. But from what I have heard there is a push to remove links from docker entirely. So maybe we should do away with the links.\n. We need to specify DB_ADAPTER=postgresql as well. You don't see an issue here because that is the default value.\n. If the links are removed, REDIS_HOST value should be redis. Also I would suggest adding a new line between the DB_ and REDIS_ blocks\n. Advisable to add DB_NAME=gitlabhq_production here\n. sameersbn/postgresql:9.4-14 and sameersbn/gitlab:8.5.5 are release. please rebase your PR against the master. Thank you and sorry for the delay. I have been travelling a lot recently.\n. @e-jigsaw is there any use of having links?. I don't see what purpose it serves with docker-compose v2?\n. yes. links are so yesterday. we need to get rid of them. Docker is in the process of retiring links and we should too :smile: \n. I'd like to know the idea behind this change.\nWouldn't you want to configure the gitlab service as type: LoadBalancer?\n. Yes please.\nOn Saturday 09 April 2016 05:30 PM, Xueshan Feng wrote:\n\nIn kubernetes/gitlab-service.yml\nhttps://github.com/sameersbn/docker-gitlab/pull/660#discussion_r59114270:\n\n@@ -5,7 +5,8 @@ metadata:\n   labels:\n     name: gitlab\n spec:\n-  type: LoadBalancer\n-  type: ClusterIP\n-  externalIPs: [172.17.4.201]\n\nOn Apr 9, 2016, at 02:35, Sameer Naik notifications@github.com wrote:\nIn kubernetes/gitlab-service.yml: > @@ -5,7 +5,8 @@ metadata: > labels:\n\nname: gitlab > spec: > - type: LoadBalancer > + type: ClusterIP > +\nexternalIPs: [172.17.4.201] is this line supposed to be here?\nOh, I use Vagrant to test, no load balancer so I have to give it an\nexternal IP to connect to it. If one uses LoadBalancer, then no need to\nhave it. Should I revert to LoadBalancer spec? Xueshan\n\u2026 <#>\n\u2014 You are receiving this because you authored the thread. Reply to this\nemail directly or view it on GitHub\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/660/files/3386cd735d9fb12fe0e0efebbc2fae08b6bed7db#r59114270\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n. Yep, its not \"required\". \nNot sure if we should keep it or remove it. Guess we can remove it for now and add it later as we see fit?\n. @18601673727 I think we should remove the networks block like @SolidNerd had suggested in the other PR. We can add it later if required.\n. typo.\n. You need to update the TOC to reflect this change.\n. Upstream shows that this line should be \nruby\nunless Rails.env.test? || !rack_attack_enabled\nDid you intentionally avoid this change? If not, I'd recommend a 1-to-1 copy of the upstream file here.\n. Other than that, LGTM!\n. FYI, please hold on to this release until we update the base image with SSL updates.\n. There's an invalid character prefixed to this instruction. Please remove it.. go_build directory contains build artifacts that aren't required.. the gitlab-workhorse source are not required to be left behind.. gitlab-pages sources also do not seem to be required to be kept. clean up go build artifacts and there is a cache directory created which does not seem to be required.. we don't leave sources around. These directories have no meaning... These macros are for convenience.. . I've altered the installation of gitaly bit in the interest of reducing the size of the image.\nNow we build gitaly in a temporary build directory (GITLAB_GITALY_BUILD_DIR) and copy over just the required artifacts to the GITLAB_GITALY_INSTALL_DIR). circle ci explicitly lists the supported docker versions in https://circleci.com/docs/2.0/building-docker-images/#docker-version. I'll update it to 18.05.0-ce and give it a test. But as you can tell using the stable tag could have unintended consequences. ",
    "garfee": "Thanks a lot\n. ",
    "inlikefletch": "We know how to disable sign up from the setting web ui, but how can we disable from the config yml or chef gitlab.rb recipe file?. ",
    "mauvm": "Thank you for responding so quickly and for elaborating on the matter. I'd have to say I agree with you in full. Command-line parameters are easy to use, handy for multiple instances and newb-friendly - although I have to say well documented configuration files are not that hard to use either. :)\nBesides keeping this image backwards compatible, I also think allowing to override individual configuration files will be a good approach. In this way you can - for example - fully configure NGinx, but let the rest of the configuration be generated automatically by the command-line parameters.\nThe implementation of this feature will be quite easy I believe:\n- Adding a default configuration setup archive to this repository. The default configuration is pretty well documented already (https://github.com/gitlabhq/gitlabhq/tree/master/config);\n- Writing file existance checks around each configuration file generation (if exists: copy existing, else: generate);\n- Updating documentation accordingly.\n  - Mentioning overridable configuration files (when placed in /opt/gitlab/data/config);\n  - Add override setup script, something like: curl -L https://raw.github.com/sameersbn/docker-gitlab/master/resources/setup/gitlab-config-1.8.0.tar.gz -s -o - | tar -xzf --directory /opt/gitlab/data -\nYou'd agree?\nThough, what if you specify a command-line parameter, but have a configuration file in place? Wouldn't it then be better to use the existing file as a base, and replace the given options in the local copy? \nPS: Thanks for the advice! Appreciate it.\n. With \"Add override setup script\" I mean adding an archive (for example resources/setup/gitlab-config-6.4.3.tar.gz) which contains the default configuration files (something equivalent to this folder: https://github.com/crashsystems/gitlab-docker/tree/master/config) and inform the users in the documentation. In this way it can be retrieved/installed with curl/wget without having to pull the entire repository (like the crashsystems/gitlab-docker does require you to do).\nBy \"command-line parameter\" I basically mean passing something along with a terminal command. In this case the environment variables of docker run, but getopt parsing is an option too. Although the latter is a cleaner way in my opinion, it's not my preferred choice. Mainly because of the backwards compatible issue.\nIf we'll ingore backwards compatibility though, I'd advise to remove the env variables entirely. For several reasons:\n- A bit higher learning curve, but just one straightforward way of configuring the GitLab instance;\n- I'd apply the 80-20 rule to the multiple instance case, where a copy of the configuration will be an option too;\n- No trouble with adding given env variables into the given configuration files, which will be painfully bug-sensitive.\nIgnoring the env variables when configuration files are present would be an option too, except the given env variables can then be misleading. Also if you have a partial selection of the configuration files available and allow this tool to generate the rest (according to the given env variables), I think it will become a mess and also less newb-friendly.\nIn conclusion, the easy way would be to only allow the configuration files and make them mandatory.\n. @sameersbn Any other thoughts on this?\n. I understand. Please let me know if there's anything I can help with.\n. Thanks! Will try it out.\n. No it was slow from the beginning. Thanks for replying so quickly btw.\n1. That's not the problem. But thanks for letting me know. :)\n2. Memory and CPU usage is around 30-40% when loading a page.\n3. $ docker ps -a only shows the GitLab container, so no need for that.\n4. Docker version 0.7.3, build 8502ad4.. Will try out using Docker 0.7.2 on monday.\nCheers!\n. Awesome! Downgrading to Docker 0.7.2 drastically improved loading speed.\nSeems like this issue is resolved in the latest version: https://github.com/dotcloud/docker/issues/3468\n. ",
    "ulope": "Thanks for merging. Sorry I didn't reply earlier. This somehow dropped off my radar.\n. ",
    "truongsinh": "Never mind, I don't seem to be able to reproduce this error\n. It is correct that Nginx would have to be configured for HTTPS. However, Nginx must not necessary be the instance inside this docker image. For example, my host has nginx1, this image has nginx2 and puma.\nNginx1(with SSL) -> Nginx2(without SSL) -> Puma topology should work.\n. I think we reach consensus. The above-mentioned Puma is the Ruby-On-Rail runner (as Gitlab is built upon ROR), and to serve dynamic files, the nginx inside docker is to serve static assets (js & css). I can redraw the topology using hipache:\n```\n\n| ====External===== | =======================Internal======================= |\n|                     =========Host=========|=======Docker Container======== |\n| Web browser --(encrypted)--> Hipache --(plain)--> Nginx --(plain)--> Puma  |\n|___________|\n``\n. That's good to know. I have no idea when https is enabled, whether we have 2 (git and https) or 3 (git, http and https). Anyway, this param is optional anyway, and we can have a note there. In my case, I have no public repos, so I can stand it.\n. Thanks. Just wanna report that with HTTPS=true,git clone https://my.host.tld/username/repo.git` works well with Nginx 1.4, even for private repo, for which git asks Username and Password.\n. Sorry of the ambiguity, I edited my previous post. Yes, with GITHUBHTTPS=true.\nnginx version: nginx/1.4.1 (Ubuntu)\nStartSSL  issued certificate\nNote: I am unsure of self-sign certs\n. ",
    "riaanvddool": "OK, I will try that.\nThis is what I see in unicorn.stderr.log:\nI, [2014-02-03T11:10:18.193141 #234]  INFO -- : Refreshing Gem list\nfatal: Not a git repository (or any of the parent directories): .git\n/home/git/gitlab/vendor/bundle/ruby/2.0.0/gems/mysql2-0.3.11/lib/mysql2/client.rb:44:in `connect': Host '172.17.42.1' is blocked because of many connection errors; unblock with 'mysqladmin flush-hosts' (Mysql2::Error)\n. Via docker logs:\nfatal: Not a git repository (or any of the parent directories): .git\nrake aborted!\nHost '172.17.42.1' is blocked because of many connection errors; unblock with 'mysqladmin flush-hosts'\nLater on in the log:\n--2014-02-03 11:40:19--  http://localhost/\nResolving localhost (localhost)... ::1, 127.0.0.1\nConnecting to localhost (localhost)|::1|:80... failed: Connection refused.\nConnecting to localhost (localhost)|127.0.0.1|:80... connected.\nHTTP request sent, awaiting response... 502 Bad Gateway\n2014-02-03 11:40:19 ERROR 502: Bad Gateway.\n. I restarted the (separate) mysql docker and the \"is blocked because of many connection errors\" message disappeared. \nNow I get: \nAccess denied for user 'gitlab'@'172.17.42.1' (using password: YES)\nLooking into that now...\n. I am using https://github.com/orchardup/docker-mysql.\nThe problem seemed to be with a line in https://github.com/orchardup/docker-mysql/blob/master/run \nGRANT ALL PRIVILEGES ON . TO 'root'@'%';\nshould have read\nGRANT ALL PRIVILEGES ON . TO 'root'@'%' WITH GRANT OPTION;\nThe omission of the \"WITH GRANT OPTION\" part stopped root from granting privileges to the gitlab user. \nI see that in your file (https://github.com/sameersbn/docker-mysql/blob/master/resources/setup/commands.sql) you have the \"WITH GRANT OPTION\" part.\nThanks for the pointers, I hope this might help someone else.\n. A handy link if you do consider removing the binary files in future:\nhttp://stevelorek.com/how-to-shrink-a-git-repository.html\nI have to say I find it annoying that the binary files are in this repo. I am not sure how good the binary diff feature works, but do you think this is sustainable into the future? As new releases, new binaries, are added to the repo cloning from Github will get slower and slower?\n. @sameersbn this is great news, thanks! I will re-fork.\n. ",
    "ckulla": "It turned out that this a memory issue. My VM had just 368MB, with 2GB it works like a charm. A short section about the resource requirements of gitlab would be helpful in the README\n. ",
    "drubin": "These seem to be documented in the readme pretty well, can we close this issue?. This doesn't seem to be used anymore, also RSS seems like a better way. \nMaybe we should recommend we tell users to subscribe to the RSS feed for the releases (that is what I do via slack integration)\nhttps://github.com/sameersbn/docker-gitlab/releases.atom \n. @goodmorning9527 What version are you running. Could you post a minimal docker-compose version that demos this? . Ah it seems like the image isn't escaping the passwords for MySQL\nhttps://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/functions#L180 \nThis line is the issue \nprog=\"mysqladmin -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} ${DB_PASS:+-p$DB_PASS} status\"\n\nCould read like (untested.)\n prog=\"mysqladmin -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} ${DB_PASS:+-p\"$DB_PASS\"} status\"\n\nBut it appears this pattern is in a bunch of places \nI assume this is the same issue with <%password%> \nWhy do you <%? \nFor now, I would recommend you use the following charset a-Z0-9 but those lines should be fixed.\n. @solidnerd Thanks for the incredibly fast reply. I am not exactly sure how to do \"if\" statements in the current templating language.  Could it be as simple as a sed replace to remove the # comment if the var is set? \nI have tried updating the commit to conditionally remove the multipart section if the ENV var is not passed in. I hope this is ok.\nIt appears that Fog already has default https://github.com/fog/fog-aws/blob/master/lib/fog/aws/models/storage/file.rb#L214 which is lower than the gitlab default? Either way, this seems like a good option to allow us to configure it.. @solidnerd Sure any time just ping me if you require any changes.\nWould you prefer I rebase/squash my commits into 1?. I finally got the docker-compose setup installed, it seems as if my regex is not actually removing the inside blocks between the #start-aws-multipart and #end-aws-multipart when the AWS_BACKUP_MULTIPART_CHUNK_SIZE is not set but when I run them inside the container as a simple sed command they work exactly as expected. \nAm I doing something wrong?. @solidnerd What happens if we default the value to \"null\" instead of leaving it blank it would have the same effect no?. @solidnerd That isn't the issue because I added debug statements inside the IF statement from the functions.\nI am going to keep trying to figure this out as this is something I would really like to see.\nWhat is the policy about submitting releases that don't directly correspond to gitlab releases? Or would this fix have to wait for the next gitlab release?. @solidnerd, in that case, would you mind me adding a flag for encryption: 'AES256' as well?. @solidnerd I managed to get it working, I think there was an issue with the #start-aws starting the #start-aws-multipart LOTS of debugging later I changed the variable.\nI have also added config options for AES encryption as well as storage class options and updated the readme.\nLet me know if it works for you, or if you would like any other changes. Thanks . @sameersbn Any feedback on this?. It doesn't currently seem to be possible. \nThe config file https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/config/gitlabhq/resque.yml#L17\nThe redis checks https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/functions#L248\nOriginally I thought you could hack REDIS_HOST to embed the user:pass but because of the checks that won't work. \nIt would be a nice feature for Redis nodes that are not running on the machine to support REDIS_URI configuration option and create the uri and connect via the -u option but that was only added in 3.2.1 and the redis-cli version bundled with this version is 2.8.4. there is also a pretty old PR for this https://github.com/sameersbn/docker-gitlab/pull/1026. The cache_from is a nice trick to leverage dockers built-in caching from pre-built images. If you aren't keen on either the cache_from or the asset/runtime mounting let me know and will adjust it.. @sameersbn @solidnerd Would this be something of interest? Or should I close the PR. Due to a bug in the way, the COPY of build time assets work the cache doesn't include the bash install.sh code which accounts for most of the build time so this is not as useful as it could be.\nCOPY assets/build/ ${GITLAB_BUILD_DIR}/\nRUN bash ${GITLAB_BUILD_DIR}/install.sh\n\nhttps://travis-ci.org/sameersbn/docker-gitlab/builds/323818604#L404 \nWe could play around with changing the docker file to, but I am not sure its worth the effort.\nCOPY assets/build/install.sh ${GITLAB_BUILD_DIR}/\nRUN bash ${GITLAB_BUILD_DIR}/install.sh. Thanks for adding this.\n\nCould you please add these variables to env-defaults file with a default blank value, as with all other ENV vars. \nIt seems that setting it to blank should keep the \"default\" behaviour. (which should already be the default)\nhttps://github.com/gitlabhq/gitlabhq/blob/bbba5eb06a09c94556cfc20c5580b3f779c49fea/lib/backup/files.rb#L20 . Thanks. Will fix it to exclude the changelog. But yes it should be easier. The annoying bit is also making it work both on mac and Linux. . @solidnerd ping?. @eiabea Sorry I don't have merge permissions, I just suggested a few comments based on what I had gone through with my merge requests. . Have you updated the ENV variable to - GITLAB_HOST=example2.foo.com?  \nThe issue might also be the text in the issues/comments/pull requests. They might be hardcoded to include a link via absolute path similar to how github includes uploaded assets.. Is there anything outstanding? \nDo you need help with testing this?. @bsakweson Its pretty hard to debug this without seeing the k8s events. But gitlab requires a bunch of ram 2+gigs so if you have given it less ram it could be causing the gitly process to crash.\nTry increasing the ram requests and see if that helps. https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/ . You can already load via files, not 100% like you specified but you could always drop an env file in /gitlab-configs\nSee https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/functions#L4 \n. @GJRTimmer Hi is there a reason you don't just set the TZ env variable? \nhttp://www.gnu.org/software/libc/manual/html_node/TZ-Variable.html \nWe have been using this since we started and we don't have issues with timezones/cron. . @Beanben You might be missing the following configs \n- GITLAB_PORT=443\n   - GITLAB_SSH_PORT=22 # ifyou have ssh running on port 22\n   - GITLAB_HTTPS=true. @solidnerd hi any chance you can give a review? . Maybe we can still get this into the 11.8 version. . Hi @solidnerd \nYou can add the following to your docker-compose file. \ngcs-bucket will need to be a real google cloud bucket and updated for each of uploads lfs and artifacts\nGITLAB_OBJECT_STORE_CONNECTION_GOOGLE_PROJECT a google projectID \nGITLAB_OBJECT_STORE_CONNECTION_GOOGLE_CLIENT_EMAIL should be a service account email\nGITLAB_OBJECT_STORE_CONNECTION_GOOGLE_JSON_KEY_LOCATION location for the downloaded service account key file. \nSorry, I can't really share my personal Google account with you.\n```yaml\n    - GITLAB_OBJECT_STORE_CONNECTION_GOOGLE_PROJECT=gcs-project\n    - GITLAB_OBJECT_STORE_CONNECTION_GOOGLE_CLIENT_EMAIL=aa@b.com\n    - GITLAB_OBJECT_STORE_CONNECTION_GOOGLE_JSON_KEY_LOCATION=/gcs/creds.json\n    - GITLAB_OBJECT_STORE_CONNECTION_PROVIDER=Google\n- GITLAB_LFS_OBJECT_STORE_ENABLED=true\n- GITLAB_LFS_OBJECT_STORE_BACKGROUND_UPLOAD=true\n- GITLAB_LFS_OBJECT_STORE_REMOTE_DIRECTORY=gcs-bucket\n\n- GITLAB_ARTIFACTS_OBJECT_STORE_ENABLED=true\n- GITLAB_ARTIFACTS_OBJECT_STORE_BACKGROUND_UPLOAD=true\n- GITLAB_ARTIFACTS_OBJECT_STORE_REMOTE_DIRECTORY=gcs-bucket\n\n- GITLAB_UPLOADS_OBJECT_STORE_ENABLED=true\n- GITLAB_UPLOADS_OBJECT_STORE_BACKGROUND_UPLOAD=true\n- GITLAB_UPLOADS_OBJECT_STORE_REMOTE_DIRECTORY=gcs-bucket\n\n```\nLet me know if you need any further input.. Hi @solidnerd do you need anything else from me or can we get this merged. @solidnerd Thanks for confirming.. You should definitely change them ASAP knowing these values a user can login as an admin user to your gitlab instance (manually setup cookies)\nWhen you change the following could happen maybe more, you should always verify from a backup instance.\n\nAll your secret variables in gitlabCI could be reset \nAny encrypted data stored in gitlab could break \nNone of your user's 2FA otps will work any more \nAll your users will be logged out of gitlab (although they should be able to login) \n\nI am not 100% sure what will happen but you should always test these types of changes on a backup instance.\nThe easiest one to cycle should be GITLAB_SECRETS_SECRET_KEY_BASE then GITLAB_SECRETS_OTP_KEY_BASE as you could potentially disable 2FA for all users and make them re-enable it. \nGITLAB_SECRETS_DB_KEY_BASE this is the one I really am not sure how it will affect. You should do some research in the official gitlab docs about cycling this value. \nHope this helps.\n. This param was actually wrong and it crashes. . @solidnerd Please also include that you replaced base Docker image with sameersbn/ubuntu:16.04.20180124 which upgrades to ubuntu 16.04 from 14.04 \nOr maybe a slightly bigger note about the major changes in this release.. Is there a reason for removing these configuration options?. The reason I removed them is the entire setup requires working proxy server setup and it. The assumption nd the docs don't match\n\nWe assume that you already have Nginx installed on your host system\n\nI would  rather add an additional doc on setting up a proxy for gitlab and the registry and link to that. What do you think? . This default config I think should be set in env-defaults if it is in fact required.. ",
    "miko": "I did try to remove/regenerate/add ssh keys. One more thing I noticed in\ngitlab-shell/gitlab-shell.log are lines like:\nW, [2014-02-25T09:01:35.385177 #807]  WARN -- : gitlab-shell: Access denied for git command <git-receive-pack 'MYDIR/MYREPO.git'> by user with key key-1.\nWill be looking at this...\n. OK, after debugging I found it out - the reason is a \"Host: localhost\" header used in GitlabNet api.allowed() call (web request). It should be replaced in /home/git/gitlab-shell/config.yml in gitlab_url. So either there should be another option to configure, or it should be set to http://GITLAB_HOST/.\nAfter that change git push/pull works for me. So please fix this gitlab_url issue.\n. Looking at this issue: https://github.com/gitlabhq/gitlabhq/issues/3424 I suggest actually adding two options to be future-proof, one for gitlab_url and another for self_signed_cert - someone can use https://... with self-signed certificate.\nEdit: more relevant issue: https://github.com/gitlabhq/gitlabhq/issues/3384\n. No, I mean changing to:\ngitlab_url: http://gitlab.MYDOMAIN/\nwhere gitlab.MYDOMAIN is the value set in GITLAB_HOST in the docker command line. So that \ngitlab_url is \"http://\"+$GITLAB_HOST+\"/\"\n. My symptoms are exactly like here: https://github.com/gitlabhq/gitlabhq/issues/3384 i.e. api call to localhost:80 GET //v3/api/... returns:\n<head>\n<title>Welcome to nginx!</title>\n</head>\n<body bgcolor=\"white\" text=\"black\">\n<center><h1>Welcome to nginx!</h1></center>\n</body>\n</html>\ninstead of \"true\" of \"false\", so that means that nginx server is confused about the \"Host: localhost\" header.\n. I'm OK with my fix (which is: ssh into the container as root, modify gitlab-shell/config.yml as described, commit the changes). I wish it could be documented (like it already is in this issue), and then supported out of the box with additional env parameters so others will not waste their time looking for the cause.\n. ",
    "milo": "@sameersbn I guess you mean @miko ;)\n. ",
    "euforic": "I am having the same issue but I think it is due to a bad install with the current latest version. I am getting the same issues as #20.\n. ",
    "sajeer850": "@sameersbn  please help me i want to push the folder its possible on gitlab \nplease help  me\ni want to upload 2 folder to push\n. ",
    "tyler43636": "I came across this thread after moving my data and containers to a new server. It ended up being a permissions problem. \nI fixed it by running: (requires docker 1.3 or newer)\ndocker exec -it (container name) bash\nchown -R git:git /home/git/data\n. ",
    "gargkapil2008": "I am running this docker on my vagrant box. I will check for ram issue.\nThanks\nOn Mar 8, 2014 12:30 AM, \"Sameer Naik\" notifications@github.com wrote:\n\nPlease check if your host meets the hardware requirements. Could be a RAM\nissue\n\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/28#issuecomment-37055834\n.\n. @sameersbn The issue is still there as i have increased RAM to 2GB but it is not working:\n\n```\nvagrant@precise64:~$ docker ps\nCONTAINER ID        IMAGE                   COMMAND             CREATED             STATUS              PORTS                                                   NAMES\n1338a4d98f34        local/jenkins:latest    /usr/sbin/sshd -D   2 days ago          Up 19 seconds       0.0.0.0:49154->22/tcp, 0.0.0.0:8080->8080/tcp           tender_poincare   \nf329b2e4c9a2        kapil/gitlab:latest   /usr/sbin/sshd -D   2 days ago          Up 18 seconds       0.0.0.0:49153->22/tcp, 0.0.0.0:8086->8080/tcp, 80/tcp   loving_fermi      \nvagrant@precise64:~$ ssh root@0.0.0.0 -p 49153\nWelcome to Ubuntu 12.04.4 LTS (GNU/Linux 3.8.0-33-generic x86_64)\n\nDocumentation:  https://help.ubuntu.com/\n\nLast login: Mon Mar 10 06:14:02 2014 from 172.17.42.1\n-bash: warning: setlocale: LC_ALL: cannot change locale (en_US)\nroot@f329b2e4c9a2:~# sudo service gitlab start\nRemoving stale Unicorn web server pid. This is most likely caused by the web server crashing the last time it ran.\nRemoving stale Sidekiq web server pid. This is most likely caused by the Sidekiq crashing the last time it ran.\nStarting both the GitLab Unicorn and Sidekiq.....\nThe GitLab Unicorn web server with pid 110 is running.\nThe GitLab Sidekiq job dispatcher with pid 124 is running.\nGitLab and all its components are up and running.\nroot@f329b2e4c9a2:~# master failed to start, check stderr log for details\n```\nMaybe i am doing something wrong with ports!\n. Can you send me the exact command needed to run the container file. As I am\nnew to this.\nOn Mar 10, 2014 6:50 PM, \"Sameer Naik\" notifications@github.com wrote:\n\nReopened #28 https://github.com/sameersbn/docker-gitlab/issues/28.\n\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/28\n.\n. Thanks a lot @sameersbn ! Just a one more concern how can i ssh into container, I haven't configured authorized_keys. I have got the password from gitlab logs using this :\ndocker logs gitlab 2>&1 | grep '^User: ' | tail -n1\n\nContainer info:\nCONTAINER ID        IMAGE                  COMMAND                CREATED             STATUS              PORTS                                           NAMES\n473d91fff198        kapil/gitlab:latest    /gitlab/gitlab app:s   22 minutes ago      Up 22 minutes       0.0.0.0:8085->80/tcp, 22/tcp\n. ",
    "jirikolarik": "I have the same issue using docker 0.10.0 build dc9c28f. I have added my public key and this key is in authorized_keys file)\n. @sameersbn thanks for you time.\nI added key via gitlab interface, I just checked if is stored in file and it is. And I'm member and owner of this group. It's working fine on gitlab.com. I have GITLAB_HOST set, but without port, that may invoke this problem.\nI'll try to log in as root as soon as possible. Thanks again.\n. @sameersbn  you are absolutely right, I was connecting to Docker host. Now its working fine on localhost, but I cannot make it work on remote host. When I clone/push repository, it raise this error:\n``\njiris-imac:connect jirikolarik$ git push -u origin master\n /usr/lib/ruby/2.0.0/net/http.rb:878:ininitialize': Connection timed out - connect(2) (Errno::ETIMEDOUT)\n    from /usr/lib/ruby/2.0.0/net/http.rb:878:in open'\n    from /usr/lib/ruby/2.0.0/net/http.rb:878:inblock in connect'\n    from /usr/lib/ruby/2.0.0/timeout.rb:52:in timeout'\n    from /usr/lib/ruby/2.0.0/net/http.rb:877:inconnect'\n    from /usr/lib/ruby/2.0.0/net/http.rb:862:in do_start'\n    from /usr/lib/ruby/2.0.0/net/http.rb:851:instart'\n    from /home/git/gitlab-shell/lib/gitlab_net.rb:75:in get'\n    from /home/git/gitlab-shell/lib/gitlab_net.rb:30:inallowed?'\n    from /home/git/gitlab-shell/lib/gitlab_shell.rb:59:in validate_access'\n    from /home/git/gitlab-shell/lib/gitlab_shell.rb:23:inexec'\n    from /home/git/gitlab-shell/bin/gitlab-shell:16:in `'\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n```\nAnd this is command to create Docker container. \ndocker run --name=gitlab -d --link postgresql:postgresql \\\n  -e \"DB_USER=gitlab\" -e \"DB_PASS=pass\" \\\n  -e \"DB_NAME=gitlabhq_production\" \\\n  -e \"GITLAB_HOST=IP_OF_REMOTE_SERVER\" -e \"GITLAB_PORT=49200\" -e \"GITLAB_SHELL_SSH_PORT=49222\" \\\n  -v /opt/gitlab/data:/home/git/data \\\n  -p 49200:80 \\\n  -p 49222:22 \\\n  sameersbn/gitlab:latest\nI'm running on latest build\n. @sameersbn it doesn't work even on local machine. I give up..\n. The result is the same with IP or with domain. I didn't figure out, how can I use default ssh port, when the same port is used by Docker host.\n. @sameersbn problem solved, I need to have IP of container in gitlab-shell/config.yml\n. I'm using another solution, when you add port of containers ssh into ~/.ssh/config and run container without specifying GITLAB_SHELL_PORT, only with port -p 2222:22, there will be clean git urls too.\nHost GITLAB_HOST\nPort 2222\nI'm not familiar with haproxy yet, so currently dockerized nginx serve Gitlab on port 80.\nIt works like a charm, thanks for your awesome work! :)\n. ",
    "raphaelfan": "Hi, I tried using standard ssh port for the container, but it is still prompting for the git password when pushing to the repo.\nThis is the command to start the gitlab container:\ndocker run --name='gitlab' -d -h \"$DOCKER_HOST\" \\\n  -v /srv/gitlab:/home/git/data \\\n  --link mysql:mysql \\\n  --link redis:redisio \\\n  -p 22:22 -p 80:80 \\\n  -e \"GITLAB_PORT=80\"  \\\n  -e \"GITLAB_HOST=$DOCKER_HOST\" \\\n  sameersbn/gitlab:7.0.0\nI was able to ssh to the container as root.\nI was also able to see the uploaded key file in $DOCKER_HOST/srv/gitlab/.ssh/authorized_keys.\nPlease help, thanks.\n. Never mind, chmod 755 /srv/gitlab fixes the problem.\n. I see, thanks.\n. ",
    "oopTiger": "Hello,\nI installed gitlab and everything is working fine, when i try to do the following\n ssh git@domain.com\nI get the following error\nPTY allocation request failed on channel 0\nWelcome to GitLab, Jhon!\nConnection to domain.com closed.\nI read the above comment\nYou cannot ssh to the gitlab server as git user, that is not allowed even if you have added your your ssh key via gitlab. You can only push/pull as the git user. You can login as the root user if need be.\nIs this true for all cases. I installed gitlab on centos 6.5.  I just want to make sure that we cannot enable interactive services for a git user on gitlab and the result i got was the one that should be expected.\nThanks!!\n. ",
    "mbannert": "@sameersbn You cannot ssh to the gitlab server as git user thanks for stating this!! I wasted a lot of time cause I tried to clone using the git user. Pull / push seems to work. Gitlab seems really nice to me know.\n. ",
    "18601673727": "Is this issue got solved? I met this issue when i do:\ntxt\ngit clone git@git.mydomain.com:myaccount/xxx.git\nCloning into 'xxx'...\ngit@git.mydomain.com's password:\nPermission denied, please try again.  # I don't know this password, so pressed \"enter\"\nI used omnibus version of Gitlab before and SSH is fine without password required. \nSo, there is a load balancer in front of docker-gitlab and docker-compose.yml configured like this:\nyml\n  ports:\n    - \"10080:80\"\n    - \"10022:22\"\n  environment:\n    - GITLAB_HOST=git.mydomain.com\n    - GITLAB_PORT=443\n    - GITLAB_SSH_PORT=22\n    - GITLAB_HTTPS=true\n    - SSL_SELF_SIGNED=false # Using Letsencrypt\nBy the way Web UI is fine and public key added with it, git clone via HTTPS way is working.\nAny help would be appreciate. \ud83d\ude04\n. @sameersbn You're solution perfectly solved this issue, thanks!\n. After saw your issue I\u2018m so doubt to use this project.\n1. Are you enable SSL for your gitlab? \n2. How do you install your gitlab-ci-runner, maybe this?\n. solved with change SMTP_TLS to false and GITLAB_EMAIL, GITLAB_EMAIL_REPLY_TO, GITLAB_INCOMING_EMAIL_ADDRESS to git@smtpissue.com.\n. HI, I just submitted a new PR against this issue, so this could been closed maybe.\n. The workaround I've found is not stable enough, it only work 1 time after docker-compose up, when stopped and re-ran it, SSH server would not been able to connect again.\n```\n$ git push -u origin master\nssh: connect to host git.domain.com port 22: Operation timed out\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n```\n$ ssh -vvT git@git.domain.com\nOpenSSH_6.9p1, LibreSSL 2.1.8\ndebug1: Reading configuration data /Users/xxx/.ssh/config\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 21: Applying options for *\ndebug2: ssh_connect: needpriv 0\ndebug1: Connecting to git.domain.com [xxx.xxx.xxx.xxx] port 22.\ndebug1: connect to address xxx.xxx.xxx.xxx port 22: Operation timed out\nssh: connect to host git.domain.com port 22: Operation timed out\n. @sameersbn Tested, but the SSH issue still at the same situation.\n. @sameersbn  Well, gitlab runs behind a nginx proxy with ssl, SSH ports to 22, ubuntu14.04, everything fine when using compose V1.But your and mine compose V2 will both hang the command git push -u origin master or ssh -vvT git@git.domain.com this is the issue I'm facing right now.\n. - As I said in my last comment, both file will cause SSH hanging. \n- URL not correct with 2222679 only \n- Docker and Compse version are newest.\nOther information I'll offer you about 4 hours later, currently I'm ouside no computers to use.\nThanks!\n. Hi @sameersbn, here comes my docker-compose.yml:\n``` yml\nversion: '2'\nservices:\npostgresql:\n    restart: always\n    image: sameersbn/postgresql:9.4-18\n    environment:\n      - DB_USER=gitlab\n      - DB_PASS=password\n      - DB_NAME=gitlabhq_production\n      - DB_EXTENSION=pg_trgm\n    volumes:\n      - /srv/docker/gitlab/postgresql:/var/lib/postgresql:Z\n    networks:\n      - gitlab-tier\nredis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    volumes:\n      - /srv/docker/gitlab/redis:/var/lib/redis:Z\n    networks:\n      - gitlab-tier\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:8.6.4\n    ports:\n      - \"10080:80\"\n      - \"22:22\"\n    depends_on:\n      - redis\n      - postgresql\n    environment:\n      - DB_HOST=postgresql\n      - DB_USER=gitlab\n      - DB_NAME=gitlabhq_production\n      - DB_PASS=password\n      - DB_ADAPTER=postgresql\n      - REDIS_HOST=redis\n  #- VIRTUAL_NETWORK=nginx-proxy\n  - VIRTUAL_HOST=git.domain.com\n  - LETSENCRYPT_HOST=git.domain.com\n  - LETSENCRYPT_EMAIL=me@domain.com\n\n  - DEBUG=false\n  - TZ=Asia/Shanghai\n  - GITLAB_TIMEZONE=Beijing\n\n  - GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string\n\n  - GITLAB_HOST=git.domain.com\n  #- GITLAB_SSH_HOST=git.domain.com\n  - GITLAB_PORT=443\n  - GITLAB_SSH_PORT=22\n  - GITLAB_HTTPS=true\n  - GITLAB_RELATIVE_URL_ROOT=\n\n  - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n  - GITLAB_NOTIFY_PUSHER=false\n\n  - GITLAB_EMAIL=notifications@domain.com\n  - GITLAB_EMAIL_REPLY_TO=noreply@domain.com\n  - GITLAB_INCOMING_EMAIL_ADDRESS=reply@domain.com\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n\n  - SMTP_ENABLED=false\n  - SMTP_DOMAIN=mail.com\n  - SMTP_HOST=smtp.mail.com\n  - SMTP_PORT=465\n  - SMTP_USER=git@domain.com\n  - SMTP_PASS=xxxxxxxx\n  - SMTP_STARTTLS=true\n  - SMTP_AUTHENTICATION=login\n\n  - IMAP_ENABLED=false\n  - IMAP_HOST=imap.mail.com\n  - IMAP_PORT=993\n  - IMAP_USER=git@domain.com\n  - IMAP_PASS=xxxxxxxx\n  - IMAP_SSL=true\n  - IMAP_STARTTLS=false\nvolumes:\n  - /srv/docker/gitlab/gitlab:/home/git/data:Z\nnetworks:\n  - proxy-tier\n  - gitlab-tier\n\nnetworks:\n  proxy-tier:\n    external:\n      name: nginx-proxy\n  gitlab-tier:\n    driver: bridge\n```\nAnd some docker infos:\n```\n$ docker version\nClient:\n Version:      1.10.3\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   20f81dd\n Built:        Thu Mar 10 15:54:52 2016\n OS/Arch:      linux/amd64\nServer:\n Version:      1.10.3\n API version:  1.22\n Go version:   go1.5.3\n Git commit:   20f81dd\n Built:        Thu Mar 10 15:54:52 2016\n OS/Arch:      linux/amd64\n```\n$ docker info\nContainers: 21\n Running: 17\n Paused: 0\n Stopped: 4\nImages: 57\nServer Version: 1.10.3\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 215\n Dirperm1 Supported: true\nExecution Driver: native-0.2\nLogging Driver: json-file\nPlugins:\n Volume: local\n Network: host bridge null\nKernel Version: 3.16.0-57-generic\nOperating System: Ubuntu 14.04.4 LTS\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 31.993 GiB\nName: xxxxxx\nID: xxxxxx\nWARNING: No swap limit support\nI hope this will help, thank you.\n. @SolidNerd Thanks for your kindly hinting but the test result is exactly same as https://github.com/sameersbn/docker-gitlab/pull/658#issuecomment-207510689.\n. Good news, after upgraded Docker to version 1.11.1, SSH server will work even rebooting the containers with this compose file.\n. @sameersbn @SolidNerd Thanks for the notice, please have a look at the newest version \ud83d\ude04 \n. @SolidNerd  What would you mean, this PR is already latest against master(62470c6c09d7cba4dd094cb09003a1ca4d4db904), isn't it?\n. @SolidNerd Thank you for the words and all the help here. :smile: \n. @sameersbn Got it, please check it out.\n. ",
    "bfdill": "I am in the exact same boat as @18601673727.  Any pointers?\n. ",
    "elyman": "I had the same problem, I spent a lot of time searching! I had the idea to use Eclipse to import the project from GitLab. Once the project is imported correctly. I made the comparison between the configuration of : project's Git ripository that I imported into Eclispe, (\"in Eclipse\", Git Repository, in myprojectRepo / Working Directory / .git / config) and one that is made in .git / config, there i wanted to push my project with git: git push ... and asked me for a password. Surpise: The remote does not have the same in both cases. I handed the same as that in eclipse and everything works.\n. ",
    "mbrgm": "+1 on that. Would be awesome!\n. I'll let you know. Thanks for adding, Sameer!\n. @jwthomp \nAnother way I have investigated in is creating a virtual macvlan interface on the docker host. This way you can assign a hwaddr to the interface, which allows your host to get the IP for the interface via DHCP (you can of course also just assign a static IP address).\nYou then basically just forward requests on the virtual interface to your gitlab container's external IP address. I also added a DNS entry, which points to the virtual interface, e.g. gitlab.example.com. This lets you use gitlab without changing the docker host's ssh port.\nI planned on writing a tutorial on this method but http://blog.codeaholics.org/2013/giving-dockerlxc-containers-a-routable-ip-address/ outlines it pretty well. It should get you through the whole process.\n. @sameersbn Application is working for me. I was just wondering how to interpret those log messages and thought they were some kind of unintended behaviour. Do they also appear in your setup?\n. @sameersbn They also appeared harmless to me, I was just wondering where they were coming from. They also appeared from your postgresql container.\n. +1 !!!\n. That sounds reasonable.\n. ",
    "arnos": "Tanks Will try tomorrow\nOn Sunday, April 6, 2014, Marius Bergmann notifications@github.com wrote:\n\nI'll let you know. Thanks for adding, Sameer!\n\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/36#issuecomment-39664047\n.\n. @sameersbn one question, in the LDAP_BIND_DN I have a white space (OU=Service Accounts).\n\nWhen I leave the white space I get an error \nsed: -e expression #1, char 41: unterminated `s' command\nI tried replacing the whitespace with %20 but it won't work for LDAP authentication.\nI also tried escaping the whitespace \"\\ \" to no avail\n. LDAP is up and working thanks.\n. I would look at all the logs\nThe nginx log (error & access)\nThe gitlab-shell log\nThe gitlab log\nThe sidekiq log\nThe Mysql Logs\nI think that covers all.\nOn Thu, Apr 10, 2014 at 11:45 AM, Sameer Naik notifications@github.comwrote:\n\n@arnos https://github.com/arnos at which logs are you interested in\nproduction.log?\n\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/40#issuecomment-40101684\n.\n. Sounds fantastic thanks.\n\nOn Thu, Apr 10, 2014 at 1:49 PM, Sameer Naik notifications@github.comwrote:\n\n@arnos https://github.com/arnos I can get this done. But will take a\nlittle while. There are a couple of things on my todo list.\nAlso note that in upcoming commits the mysql and redis servers will be\nremoved from the image and seperate images would be required for the mysql\nand redis server.\nRest be assured that I will make sure all these components are ready\nbefore I start removing things.\n\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/40#issuecomment-40116158\n.\n. Ok I have an idea for this as most of the logs are in /var/log/supervisor/*.log\n\nWould it be possible to save these under /var/log/supervisor/${hostname}/*.log\n. @sameersbn I was looking further into how to setup a centralized logging\nsystem.\nIn turn this lead me to\nhttps://groups.google.com/forum/m/#!topic/docker-dev/3paGTWD6xyw\nIt looks like docker 1.0 will provide a better API for logging, it might be\nbest to put this issue on hold until 1.0\nOn Tuesday, May 6, 2014, Sameer Naik notifications@github.com wrote:\n\n@arnos https://github.com/arnos i guess its possible.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/40#issuecomment-42296068\n.\n. Yes, and all I'm proposing is that the default be changed to include the\nother (SMTP_AUTHENTICATION, etc...) only when a user fills it out. This way\nyou still reach a broader audience.\n\nThere could also be another flag say (GMAIL_DEFAULT=true) that would fill\nthe SMTP parameters with the gmail config.\nIn terms of manually updating the configurations that's what I've been\ndoing for testing and it's maintainable at a certain level, but it means\nkeeping my own container image and then syncing it up with yours at every\nupgrade.\nHow about an alternate approach based on the idea I mentioned in the logs\nissue (#40), instead of having to input all the options to configure gitlab\neverytime and running it through the init script have init check if\npre-configured configuration files exist in /opt/gitlab/ (a mounted volume\non the host) and use these to overwrite the default config files.\nIn this manner configurations can be saved and re-used.\nOn Thu, Apr 10, 2014 at 1:30 PM, Sameer Naik notifications@github.comwrote:\n\n@arnos https://github.com/arnos so you only need to specify the\nSMTP_HOST and SMTP_PORT for mails to go out?\nThis might be difficult considering the broader audience. You can however\noverride the smtp mailer configuration.\nThis is how you do it.\nDownload\nhttps://github.com/sameersbn/docker-gitlab/raw/master/assets/setup/config.tar.bz2and extract the file config/gitlabhq/smtp_settings.rb into\n/opt/gitlab/data/config/gitlabhq/\nwget \"https://github.com/sameersbn/docker-gitlab/raw/master/assets/setup/config.tar.bz2\" -O /tmp/config.tar.bz2\ncd /opt/gitlab/data/\ntar -jvxf  /tmp/config.tar.bz2 config/gitlabhq/smtp_settings.rb\nYou can edit the /opt/gitlab/data/config/gitlabhq/smtp_settings.rb to\nremove the smtp settings you do not require and restart the gitlab\napplication for the changes to take effect.\nUsing this method you can literally override all of my configuration but\nbe warned that you could break the whole application, especially if you\nchange paths in the configuration files. Generally parameters with {{}}_around their values are the ones safe to edit. The values with the\n{{}}_ that you leave behind will be updated as per the configuration you\nprovide via the environment configuration.\nUsing this method you can also change the default projects number as you\nhave mentioned in #42https://github.com/sameersbn/docker-gitlab/issues/42and could also have been used to get by\n36 https://github.com/sameersbn/docker-gitlab/issues/36. I have not\ndocumented it yet so that I can see how people are using the image and\nunderstand what all options I should be adding.\n\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/41#issuecomment-40113799\n.\n. My bad, you're right I missed that.\n\nOk after testing both the project number and the SMTP config changes in\n/opt/gitlab/data/config.\nOn Thu, Apr 10, 2014 at 2:23 PM, Sameer Naik notifications@github.comwrote:\n\n@arnos https://github.com/arnos I think you misunderstood. The edit\nthat I mentioned is done at the data storehttps://github.com/sameersbn/docker-gitlab#data-storeon host, not inside the container.\nHow this works is that when the container is started, it checks if there\nare any configuration overrides in the config/ directory of the datastore,\nwhich in this case would be the smtp_settings.rb file in the\n/opt/gitlab/data/config/gitlabhq folder. Now this file would be used as the\ntemplate on top of which the container would start applying the\nconfiguration.\nThis means that you can upgrade the image normally without having to worry\nmuch. The only time you could face an issue is if the base template itself\nchanged, In which case you would have to update your copy in\n/opt/gitlab/data/config/gitlabhq. So the golden rule of thumb would be to\ncopy only the files you wish to change in the /opt/gitlab/data/config\ndirectory and apply the rest of the config using the environment variables.\nHow about an alternate approach based on the idea I mentioned in the logs\nissue (#40 https://github.com/sameersbn/docker-gitlab/issues/40),\ninstead >of having to input all the options to configure gitlab everytime\nand running it through the init >script have init check if pre-configured\nconfiguration files exist in /opt/gitlab/ (a mounted volume >on the host)\nand use these to overwrite the default config files.\nWell this is exactly what the files inside /opt/gitlab/data/config/ are\nmeant to do. You can specify the entire configuration here and the image\nwill just pick up this configuration and fill out whatever is left to be\nfilled.\nGenerating the configuration at run time is important so that we do not\nend up in a fix when the configs are changed upstream (read my above\n\"golden rule of thumb\" comment).\nNOTE: the mountpoint /opt/gitlab/data I mentioned is in reference to\nthe path of the datastore I have using in the READMEhttps://github.com/sameersbn/docker-gitlab#data-storeexamples. This could be a different path in your case if you have changed\nit.\n\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/41#issuecomment-40120336\n.\n. Yes\n\nOn Friday, April 11, 2014, Sameer Naik notifications@github.com wrote:\n\n@arnos https://github.com/arnos so should we close this?\n\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/41#issuecomment-40175296\n.\n. @sameersbn yes any change to the configuration files would trigger the\nbundle install to happen all over again, I've seen it happen while adding\nSSL support.\n\nThe copy configuration only works if the build directory is present which\nwould cause the following steps to not use the cache\nOn Thursday, April 17, 2014, Sameer Naik notifications@github.com wrote:\n\n@arnos https://github.com/arnos actually the \"Docker doesn\u2019t cache an\nADD instruction or any instruction after it\" does not hold true anymore.\nThis was the case in docker releases prior to version 0.8http://blog.docker.io/2014/02/docker-0-8-quality-new-builder-features-btrfs-storage-osx-support/.\nIn newer releases the cache is used even after an ADD, unless some change\nhas occurred in the build directory.\nThe copy default configuration step from the install script should not\naffect the docker caching mechanism in any way. These lines are executed\ninside the container and as such should not effect docker's caching\nmechanism in any way. It can be argued that these lines are not required at\nall in the init script because they are overwritten in the init script, but\ni left them there so that any gem that will in installed should not\ncomplain of database.yml missing or something. I have seen this happening\nin some other gems, maybe not in the gems currently used by gitlab.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/44#issuecomment-40739803\n.\n. Sorry I didn't get back to you earlier,\n\nYes moving the configurations, init and install scripts out of the assests\nfolder should do the trick (I'm touching the init to get the env vars into\nthe config scripts).\nSorry it just a small annoyance when you change the init script and it\nforces a the gems to be reinstalled.\nOther than that for testing the config files folder works great, just need\nthe init script so I can contribute back.\nOn Monday, April 21, 2014, Sameer Naik notifications@github.com wrote:\n\n@arnos https://github.com/arnos maybe we can move the config directory\noutside the assets folder. That should fix it. What do you think?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/44#issuecomment-40954273\n.\n. Is it possible to move the init script to the base folder?\n\nOn Tuesday, April 22, 2014, Sameer Naik notifications@github.com wrote:\n\nClosed #44 https://github.com/sameersbn/docker-gitlab/pull/44 via\ndbe5c39https://github.com/sameersbn/docker-gitlab/commit/dbe5c399cb5d78505df9e3b895174e7e7e7cb9a9\n.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/44\n.\n. To take advantage of the docker caching you would need to split the\nconfiguration from the bundle install step my modification are mostly on\nthe init script.\n. Actually it doesn't need to be the base folder just not the in the same\nfolder structure as the install script.\n\nOn Tuesday, April 22, 2014, Arno Schulz arnoschulz@gmail.com wrote:\n\nTo take advantage of the docker caching you would need to split the\nconfiguration from the bundle install step my modification are mostly on\nthe init script.\n. Saw the changes that should work I'll test and let you know.\n\nOn Tue, Apr 22, 2014 at 6:58 AM, Sameer Naik notifications@github.comwrote:\n\n@arnos https://github.com/arnos i will see what i can do.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/44#issuecomment-41026721\n.\n. Works like a charm thanks.\n\nOn Tue, Apr 22, 2014 at 7:57 AM, Sameer Naik notifications@github.comwrote:\n\nkewl\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/44#issuecomment-41030965\n.\n. I've seen that\n\nOn Saturday, April 26, 2014, Sameer Naik notifications@github.com wrote:\n\n@arnos https://github.com/arnos p.s. latest changes on the HEAD boost\nthe application startup times tremendously. This really helps in\ndevelopment testing as the application comes online faster than ever.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/44#issuecomment-41461048\n.\n. Interesting new service waffle.io to enhance collaboration kind of like\ntrellis but integrated with GitHub.\n\nOn Saturday, April 26, 2014, Arno Schulz arnoschulz@gmail.com wrote:\n\nI've seen that\nOn Saturday, April 26, 2014, Sameer Naik notifications@github.com<javascript:_e(%7B%7D,'cvml','notifications@github.com');>\nwrote:\n\n@arnos https://github.com/arnos p.s. latest changes on the HEAD boost\nthe application startup times tremendously. This really helps in\ndevelopment testing as the application comes online faster than ever.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/44#issuecomment-41461048\n.\n. Yes the remote API, though I would see a setup image to secures the API\nhttp://blog.james-carr.org/2013/10/30/securing-dockers-remote-api/ and load\nredis, db and gitlab as separate containers.\n\n\nOn Saturday, April 26, 2014, Sameer Naik notifications@github.com wrote:\n\n@arnos https://github.com/arnos I came across this repo\nhttps://github.com/keeb/docker-ttl, its got a very interesting way of\nconnecting to the docker server from the container. I was thinking maybe\nfor the quick start guide we can mount the docker binary and start the\ndatabase and redis servers on the host.\nIn short, the container would be started like this\ndocker run -i -t \\\n-v /usr/bin/docker:/bin/docker \\\n-v /var/run/docker.sock:/run/docker.sock \\\nsameersbn/gitlab:latest\nThe gitlab container will now have access to docker running on the host,\nwhich means it will be able to pull containers for the mysql/postgresql and\nredis servers and eventually get the whole thing to work.\nProduction environments will have to go through the setup procedure to\nconfigure the database and redis servers manually.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/46#issuecomment-41460553\n.\n. @sameersbn actually you've struck gold. Instead of doing as mentioned below\nhow about create a generic installer script (a la MSI for windows).\n\nAnyone could use that installer image (based on buusybox perhaps) and\nsupply it with an installer.sh script that would walk the user to setting\nup their image either with a cli or webased wizard.\nThen each project would just point to a generic shell script on GitHub that\nlaunches your installer image with the docker remote API and their\ninstall.sh script...\nGoing further you could have a installation wizard builder, and even a cnet\nof sorts to download pre-built curated installable images.\nI'm kind of drooling at the possibity of integrating this.\nOn Saturday, April 26, 2014, Arno Schulz arnoschulz@gmail.com wrote:\n\nYes the remote API, though I would see a setup image to secures the API\nhttp://blog.james-carr.org/2013/10/30/securing-dockers-remote-api/ and\nload redis, db and gitlab as separate containers.\nOn Saturday, April 26, 2014, Sameer Naik notifications@github.com<javascript:_e(%7B%7D,'cvml','notifications@github.com');>\nwrote:\n\n@arnos https://github.com/arnos I came across this repo\nhttps://github.com/keeb/docker-ttl, its got a very interesting way of\nconnecting to the docker server from the container. I was thinking maybe\nfor the quick start guide we can mount the docker binary and start the\ndatabase and redis servers on the host.\nIn short, the container would be started like this\ndocker run -i -t \\\n-v /usr/bin/docker:/bin/docker \\\n-v /var/run/docker.sock:/run/docker.sock \\\nsameersbn/gitlab:latest\nThe gitlab container will now have access to docker running on the host,\nwhich means it will be able to pull containers for the mysql/postgresql and\nredis servers and eventually get the whole thing to work.\nProduction environments will have to go through the setup procedure to\nconfigure the database and redis servers manually.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/46#issuecomment-41460553\n.\n. Yes I ran into it a month ago as well, it's part of red hat\nhttp://www.projectatomic.io/, I heard was actually RedHat's version of\ndocker until docker came along.\n\n\nOn Wednesday, June 18, 2014, Sameer Naik notifications@github.com wrote:\n\n@arnos https://github.com/arnos today I came across geard\nhttp://openshift.github.io/geard/, which is very close to what you\npropose here. checkout Dockercon Keynote: Brian Stevens (Red Hat)\nhttps://www.youtube.com/watch?v=ZcEEnCMAMvo?t=24m for an overview.\nPretty sweet stuff. Unfortunately it is currently only available for Fedora\nand RHEL. I think that it because of its dependency on systemd.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/46#issuecomment-46471411\n.\n. With the faster build I should be able to finish the gitlab HTTPS and will\npush it to you.\n\nOn Tue, Apr 22, 2014 at 8:31 AM, Sameer Naik notifications@github.comwrote:\n\n@arnos https://github.com/arnos a new gitlab version will be released\ntoday, will bundle it the upcoming release\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/47#issuecomment-41033729\n.\n. Yes I'm working on self-signed certificates, and HTTPS + HTTP and\nHTTPS_ONLY options\n\nOn Tue, Apr 22, 2014 at 9:18 AM, Sameer Naik notifications@github.comwrote:\n\nthat would be amazing... just tell me it will support self signed\ncertificates.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/47#issuecomment-41037943\n.\n. Will fix the Readme, and move the default paths to /home/git/data/certs/\n\nI want to keep the option of mounting a different volume and paths for the\nkeys and certs as I'm going to mount them from a common base image (using a\nwild-card self-signed cert).\nOn Tue, Apr 22, 2014 at 9:36 AM, Sameer Naik notifications@github.comwrote:\n\nanother thing is that you have over written my updates to the README file.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/47#issuecomment-41039978\n.\n. The HTTPS is nearly there you can see my fork under the SSL branch.\n\nThe only thing not in place yet is an automatic redirect from http to https\n(gitlab seems to support a single port at a time) and testing with http\nbehind hipache.\nOn Saturday, April 26, 2014, Sameer Naik notifications@github.com wrote:\n\n@cridenour https://github.com/cridenour sure that you be great. maybe\nyou can work with @arnos https://github.com/arnos for the ssl support\naddition.\nIf possible make sure that SSL works when the container is behind\nhipache/haproxy and supports self signed certificates.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/53#issuecomment-41460110\n.\n. You can pull my SSL branch as everything works and I rebased it yesterday\non your master.\n\nI was just stuck because of ssh issue and trying to get https only working.\nOn Saturday, April 26, 2014, Sameer Naik notifications@github.com wrote:\n\n@arnos https://github.com/arnos i just started looking at working on\nSSL support today and surprisingly i think i got it working. I am testing\nwith direct port redirection and also with haproxy. both seem to be working\n(still early to say, need to test further).\nI had added the http to https redirection in the nginx config and it all\nworked fine with the direct host port redirections but not with haproxy.\nThis server simply redirects HTTP connections to HTTPSserver {\nlisten *:80 default_server;\n  server_name {{YOUR_SERVER_FQDN}};\n  server_tokens off;\n  rewrite ^ https://$server_name$request_uri? permanent;}\nInstead I removed the above and configured nginx to also serve requests on\nport 80\nserver {\n  listen :80 default_server;         # e.g., listen 192.168.1.1:80; In most cases :80 is a good idea\n  server_name {{YOUR_SERVER_FQDN}};     # e.g., server_name source.example.com;\n  server_tokens off;     # don't show the version number, a security best practice\n  root /home/git/gitlab/public;\n# Increase this if you want to upload large attachments\n  # Or if you want to accept large git objects over http\n  client_max_body_size 20m;\n# individual nginx logs for this gitlab vhost\n  access_log  /var/log/nginx/gitlab_access.log;\n  error_log   /var/log/nginx/gitlab_error.log;\nlocation / {\n    # serve static files from defined root folder;.\n    # @gitlab is a named location for the upstream fallback, see below\n    try_files $uri $uri/index.html $uri.html @gitlab;\n  }\n# if a file, which is not found in the root folder is requested,\n  # then the proxy pass the request to the upsteam (gitlab unicorn)\n  location @gitlab {\n    # If you use https make sure you disable gzip compression\n    # to be safe against BREACH attack\n    # gzip off;\n```\nproxy_read_timeout 300; # Some requests take more than 30 seconds.\nproxy_connect_timeout 300; # Some requests take more than 30 seconds.\nproxy_redirect     off;\nproxy_set_header   X-Forwarded-Proto $scheme;\nproxy_set_header   Host              $http_host;\nproxy_set_header   X-Real-IP         $remote_addr;\nproxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_pass http://gitlab;\n```\n}\n# Enable gzip compression as per rails guide: http://guides.rubyonrails.org/asset_pipeline.html#gzip-compression\n  location ~ ^/(assets)/  {\n    root /home/git/gitlab/public;\n    gzip_static on; # to serve pre-gzipped version\n    expires max;\n    add_header Cache-Control public;\n  }\nerror_page 502 /502.html;}\nAnd surprisingly it works in both cases and the http to https redirection\nsomehow takes place. But maybe its because of some other fixes I have in\nplace.\nShould I pull your changes and apply my changes on top of it or should i\njust publish my work for you to review and test? What do you suggest?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/53#issuecomment-41463910\n.\n. Must have missed something a I thought you were pulling my branch?\n\nI'm a bit concerned with the fact you had to modify gitlab code as their\nSSL support is pretty much out of the box.\nI'll check it as soon as I can.\nOn Monday, April 28, 2014, Sameer Naik notifications@github.com wrote:\n\n@arnos https://github.com/arnos i have published my ssl-support branch.\nThere were a lot of use cases to take care of and I finally managed to get\ndone. I had to hack into the gitlab code to get things working.\nAnyways, can you test the ssl support and confirm that it works for you?\nInstructions can be found in the READMEhttps://github.com/sameersbn/docker-gitlab/blob/feature/ssl-support/README.md#ssl\n.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/54#issuecomment-41593806\n.\n. as long as it is defined how to enable SSL from unicorn it should be fine.\nagain this goes back to issue sameersbn/docker-gitlab#46\n\nWith an installer experience, you can ask the user if they have a load\nbalancer or not and if not offer to setup an nginx loadbalancer container.\nOn Tue, May 13, 2014 at 2:08 PM, Sameer Naik notifications@github.comwrote:\n\n@arnos https://github.com/arnos i was just thinking.\nmaybe we should remove all ssl configurations and also remove the nginx\nserver and instead expose the unicorn worker on port 80 so that users can\nconfigure the SSL configuration in the host.\nRight now this is the general use case:\nOn the host you install a load balancer such as hipache/haproxy or nginx.\nIf you are enabling SSL support then it (SSL) has to also be configured at\nthe load balancer as well and as such the internal SSL configuration is\nmore or less pointless.\nInside the container we are running an nginx server which proxies\nconnections to the unicorn workers. So in essence we have a stack that\nlooks like this:\nrequest -> load balancer -> nginx -> unicorn\nIf we remove the internal nginx, then the stack would look like this\nrequest -> load balancer -> unicorn\nBy doing this change we will effectively be converting the gitlab\napplication from a web server to a app server, which i think fits better\nwith docker and as a side effect your access log collection will happen at\nthe host.\nAnother problem we would be solving with this change is, if i am using\nnginx as my load balancer and if I want to change the client_max_body_size,\nthen I have to configure this on the internal nginx server as well as at\nthe load balancer (just found this out today). But with this change we only\nend up configuring this setting at one place.\nThe only downside to this that I can see is that you will not be able to\nenable ssl support if you decide to use the application without a load\nbalancer, which I think should be fine.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/54#issuecomment-42990999\n.\n. Ok webfrontend and login works\n\nroot ssh login works but the git ssh doesn't (the authorized_keys file is blank after setting up the image) -- will do more tests next week as well as testing the SSL support.\n. Tested all scenarios and rebased on master branch. Let me know if you need me to do something else\n. @sameersbn Rebase done. Will you have an ubuntu 14.04? If yes the FROM line should change to reflect it\n. Ok I'll update my PR to use 14.04\nOn Mon, May 5, 2014 at 1:41 PM, Sameer Naik notifications@github.comwrote:\n\n@arnos https://github.com/arnos yep, in the process of tagging a\nubuntu:14.04 build of sameersbn/ubuntu. will push once the trusted build is\nup.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/56#issuecomment-42215068\n.\n. PS: I went through SSH config, everything looks dandy, the only comment is\nthat you could save a bit of code in your permissive config file by having.\n\nlisten :80 default_server;\nlisten :443 default_server ssl;\nInstead of repeating the entire config but there no disadvantage either way.\nOn Mon, May 5, 2014 at 1:42 PM, Arno Schulz arnoschulz@gmail.com wrote:\n\nOk I'll update my PR to use 14.04\nOn Mon, May 5, 2014 at 1:41 PM, Sameer Naik notifications@github.comwrote:\n\n@arnos https://github.com/arnos yep, in the process of tagging a\nubuntu:14.04 build of sameersbn/ubuntu. will push once the trusted build is\nup.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/56#issuecomment-42215068\n.\n. @sameersbn I thought so but @LordFPL is using :plain as SMTP_AUTHENTICATION whereas I'm not using anything, though I don't mind passing an empty environment variable when I launch the container.\n. Yes retesting it and will rebase.\n\n\nOn Mon, May 5, 2014 at 2:34 PM, Sameer Naik notifications@github.comwrote:\n\n@arnos https://github.com/arnos can you rebase the PR\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/60#issuecomment-42221246\n.\n. Ok the rebase is done. \n\n@LordFPL I have one issue that doesn't make sense the if statements for SMTP_USER and SMTP_BASE should start with -z (check if length is 0) instead of -n (check if length > 0) no?\n. Ok then I'm not sure why my if is working with -n (if I put -z the default\nvalue of :login gets set)\nOn Mon, May 5, 2014 at 3:18 PM, LordFPL notifications@github.com wrote:\n\nOups... my fault... i already made the correction, but forget to copy it\nin the patch, sorry...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/60#issuecomment-42226733\n.\n. Ok that makes sense. In this case if we can keep the -n for\nSMTP_AUTHENTICATION it works (ditto entering a value will pass the value\nand not passing the parameter will set :login) and I'm using -z for the\nSMTP_USER/SMTP_PASS and everything is working (finally)\n\nThanks Sameer.\nOn Mon, May 5, 2014 at 3:32 PM, Sameer Naik notifications@github.comwrote:\n\nI think when -z / -n are used, the test string should not be surrounded by\nquotes. That's why I prefer using == operators\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/60#issuecomment-42228387\n.\n. I'll retest it tomorrow, this was bugging me as it didn't make sense that\nit worked\n\nOn Tuesday, May 6, 2014, Sameer Naik notifications@github.com wrote:\n\n@arnos https://github.com/arnos I have the issue with the -z/-n\n:login gets set on SMTP_AUTHENTICATION because it is set by default, even\nif you don't pass SMTP_AUTHENTICATION or pass it as an empty string this\nvalue is internally set to :login\nSMTP_AUTHENTICATION=${SMTP_AUTHENTICATION:-:login}\nI have changed the code so that the default value of SMTP_AUTHENTICATION\nis set to :login only if SMTP_USER is set. So i think this should work\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/60#issuecomment-42269752\n.\n. Nevermind I was escaping the / due to my old SSH branch\n. As of Ubuntu 14.04,  SSHD doesn't allow for locked accounts (as git is)\n\nGiven that it executes a shell script, or uses keys deleting the password\nunlocks the account and that works it was a quick fix.\nNow in retrospective, this seems to be another change in the default SSHD\nconfig as of 14.04 as per the permission denied issue for the docker-ubuntu\nimage (disabling PAM might not be necessary).\nOn Wednesday, May 7, 2014, Sameer Naik notifications@github.com wrote:\n\nIn Dockerfile:\n\n@@ -20,7 +20,7 @@ RUN /app/setup/install\nADD assets/config/ /app/setup/config/\n ADD assets/init /app/init\n-RUN chmod 755 /app/init\n+RUN chmod 755 /app/init && passwd -d git\n\n@arnos https://github.com/arnos can you tell me why passwd -d git is\nbeing done?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/pull/56/files#r12391847\n.\n. \n",
    "jwthomp": "I am currently solving this by using haproxy and have moved the main host ssh daemon off to another port.\n. ",
    "uwydoc": "In my specific situation, where docker-gitlab is run inside the boot2docker-vm(host os is rhel 6.4, the kernel (2.6.32) is too old to run recent version of docker), the only workaround that I came up with is to configure iptables to forward git(ssh) connections. refer to http://stackoverflow.com/a/14637461/1994490 for details.\n. ",
    "johnjelinek": "7.4.1 addresses some stuff in LDAP\n. @sameersbn: what's an example where it would fail in 8.1.0?\n. Why do you prefer nsenter over nsinit?\n. I <3 nsinit\nOn Fri, Aug 1, 2014 at 11:15 AM, Sameer Naik notifications@github.com\nwrote:\n\n@johnjelinek https://github.com/johnjelinek I really had no idea nsinit\nexisted. Whatever gets the job done is fine. Now that you have introduced\nme to nsinit I think I will start using it. But first, I will need a\nwrapper script!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/94#issuecomment-50903501\n.\n. This is after booting with:\n\ndocker run --name='gitlab' -d \\\n-p 10022:22 -p 10080:80 \\\n-e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" \\\nsameersbn/gitlab:latest\n. :+1: want me to submit a PR grabbing the source from git?\n\u2014\nSent from Mailbox\nOn Fri, Jul 18, 2014 at 12:06 AM, Sameer Naik notifications@github.com\nwrote:\n\n@johnjelinek its because we are installing gitlab from the release tarball. Apparently gitlab wants us to install using the git sources. The string that is displayed at that position is the git commit hash. It is really a harmless message. However if we wanted to fix it, then we would have to setup the image by cloning the gitlab git repo.\nReply to this email directly or view it on GitHub:\nhttps://github.com/sameersbn/docker-gitlab/issues/102#issuecomment-49395849\n. Have you considered just cloning the latest stable branch instead of all\nbranches?\n\ngit clone -b 7-0-stable https://github.com/gitlabhq/gitlabhq.git\nOn Jul 18, 2014 7:41 AM, \"Sameer Naik\" notifications@github.com wrote:\n\n@johnjelinek https://github.com/johnjelinek recently i had decided to\nswitch to using the git repo, the thing is the gitlab repo is huge ,adds to\nthe size of the image and increases the the image build time. So I decided\nthat it was not worth it. One option is to edit the gitlab source and\nsimply return something like release-7.0.0. P.S. the text displayed at\nthat location is the revision of the branch/tag tip, something like\n117ca6ca.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/102#issuecomment-49426022\n.\n. Excellent!\nOn Jul 18, 2014 9:13 AM, \"Sameer Naik\" notifications@github.com wrote:\n@johnjelinek https://github.com/johnjelinek there is hardly any\ndifference between the two:\n101M    gitlabhq/\n99M 7-0-stable/\nHowever git clone --depth 1 -b v7.0.0\nhttps://github.com/gitlabhq/gitlabhq.git v7.0.0 works perfectly. I can\nclone just the tip of the specific tag. Will make these changes now.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/102#issuecomment-49435116\n.\n. @craigcabrey: It got changed it to root / 5iveL!fe. Here's the output from when you boot the container:\n\n```\n== Seed from /home/git/gitlab/db/fixtures/production/001_admin.rb\n2014-07-24T20:35:22Z 646 TID-4eha0 INFO: Sidekiq client with redis options {:url=>\"redis://localhost:6379\", :namespace=>\"resque:gitlab\"}\nAdministrator account created:\nlogin.........root\npassword......5iveL!fe\nMigrating database...\nCompiling assets. Please be patient, this could take a while...\n``\n. However, gitlab 7.1.0 docs seem to say it should have been changed from admin@local.host to admin@example.com\n. It's strange that7.1.1andlatesthave differentIMAGE ID`s:\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nsameersbn/gitlab    latest              29ce89fe6a74        10 hours ago        1.112 GB\nsameersbn/gitlab    7.1.1               9ca6c6505381        10 hours ago        1.112 GB\n. Strange, the ubuntu tag aliases match IMAGE ID\nOn Fri, Aug 1, 2014 at 11:24 AM, Sameer Naik notifications@github.com\nwrote:\n\n@johnjelinek https://github.com/johnjelinek its because the docker\nbuild service builds every tag even if nothing has changed in the github\nrepo. So when I tag 7.1.1 a build is triggered and when I tag latest\nagain a build is triggered. Its not very intelligent that way. That's just\nthe way it is.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/112#issuecomment-50904600\n.\n. I pulled the 6.5.1 image and it still wouldn't restore:\n\ndocker run -it --rm --name=gitlab --link postgresql:postgresql --link redis:redisio -p 10022:22 -p 10080:80 -e 'GITLAB_EMAIL=gitlab@example.com' -e 'GITLAB_PROJECTS_VISIBILITY=public' -e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=10022' -e 'NGINX_MAX_UPLOAD_SIZE=800m' -e 'DB_TYPE=postgres' -e 'DB_HOST=172.17.0.4' -e 'DB_USER=gitlab' -e 'DB_PASS=password' -v /opt/gitlab/data:/home/git/data sameersbn/gitlab:6.5.1 app:restore\nredis-server: added process group\n \u251c 1406922384_gitlab_backup.tar\nSelect a backup to restore: 1406922384_gitlab_backup.tar\nfatal: Not a git repository (or any of the parent directories): .git\nUnpacking backup ... done\nfatal: Not a git repository (or any of the parent directories): .git\nGitLab version mismatch:\n  Your current HEAD differs from the HEAD in the backup!\n  Please switch to the following revision and try again:\n  revision: 6f6f1588ba5123f156ee3b0635a061745b71fcde\nI think this is because you didn't use git clone at this state of the repo, you pulled from an archive.\n. Progress:\npsql:/home/git/data/backups/db/database.sql:22: ERROR:  must be owner of extension plpgsql\nSET\nSET\nSET\nCREATE TABLE\npsql:/home/git/data/backups/db/database.sql:48: ERROR:  role \"git\" does not exist\nCREATE SEQUENCE\npsql:/home/git/data/backups/db/database.sql:62: ERROR:  role \"git\" does not exist\nALTER SEQUENCE\nI wonder why it is complaining about role \"git\", maybe I missed a step on initializing the db before a restore.\n. Oh, I think I needed to initialize with username git instead of gitlab for my restore. Trying that now.\n. Yea, changing the username from gitlab to git resolved that error, now the only error is:\npsql:/home/git/data/backups/db/database.sql:22: ERROR:  must be owner of extension plpgsql.\nAny ideas?\n. I had to make my git user a Superuser:\nALTER ROLE git Superuser;\n. After the restore, I needed to run a db:migrate:\nbash\ndocker run -it --rm --name=gitlab \\\n--link postgresql:postgresql --link redis:redisio \\\n-p 10022:22 -p 10080:80 \\\n-e 'GITLAB_EMAIL=gitlab@example.com' \\\n-e 'GITLAB_PROJECTS_VISIBILITY=public' \\\n-e 'GITLAB_PORT=10080'  -e 'GITLAB_SSH_PORT=10022' \\\n-e 'NGINX_MAX_UPLOAD_SIZE=800m' \\\n-e 'DB_TYPE=postgres' -e 'DB_HOST=172.17.0.4' \\\n-e 'DB_USER=git' -e 'DB_PASS=password' \\\n-v /opt/gitlab/data:/home/git/data \\\nsameersbn/gitlab:7.1.1 app:rake db:migrate\nThe docs should probably mention db:migrate\n. ok, thanks\n. ruby\naddress: \"smtp.example.com\",\n\u00a0 \u00a0 port: 25,\n\u00a0 \u00a0 domain: \"www.example.com\",\n\u00a0 \u00a0 authentication: \"none\",\n\u00a0 \u00a0 enable_starttls_auto: true\nThis is what I see (I replaced the address and domain with fake values here). The only difference here is that, I see authentication: :none in my 6.5.1 instance where e-mail works.\n. 6.5.1\n``` ruby\ncat config/initializers/smtp_settings.rb\nTo enable smtp email delivery for your GitLab instance do next:\n1. Change config/environments/production.rb to use smtp\nconfig.action_mailer.delivery_method = :smtp\n2. Rename this file to smtp_settings.rb\n3. Edit settings inside this file\n4. Restart GitLab instance\n\nif Gitlab::Application.config.action_mailer.delivery_method == :smtp\n  ActionMailer::Base.smtp_settings = {\n    address: \"smtp.example.com\",\n    port: 25,\n    # user_name: \"smtp\",\n    # password: \"123456\",\n    domain: \"www.example.com\",\n    authentication: :none,\n    enable_starttls_auto: true\n  }\nend\n```\n7.1.1\n``` ruby\ncat config/initializers/smtp_settings.rb\nTo enable smtp email delivery for your GitLab instance do next:\n1. Rename this file to smtp_settings.rb\n2. Edit settings inside this file\n3. Restart GitLab instance\n\nif Rails.env.production?\n  Gitlab::Application.config.action_mailer.delivery_method = :smtp\nActionMailer::Base.smtp_settings = {\n    address: \"smtp.example.com\",\n    port: 25,\n    domain: \"www.example.com\",\n    authentication: \"none\",\n    enable_starttls_auto: true\n  }\nend\n``\n. ok, I think I'm going to try to jump in withnsinitand changeconfig.action_mailer.delivery_method = :sendmailtoconfig.action_mailer.delivery_method = :smtpinconfig/environments/production.rb. Even though theproduction.rbsays changes there take precedence?\nhttps://github.com/gitlabhq/gitlabhq/blob/master/config/environments/production.rb#L2\n. hmm .. modifying theconfig.action_mailer.delivery_methoddidn't seem to resolve it. Any thoughts? Does SMTP work for you?\n. Maybe I'm not issuing commands that would send out e-mails? In6.5.1`, whenever I create a repo I'd get an e-mail.\n. lol, nvm -- I wasn't doing any actions that were causing e-mails to get sent. SMTP works when you do something like creating a new user. No special changes necessary.\n. Yup, no changes.\nOn Aug 6, 2014 2:33 AM, \"Sameer Naik\" notifications@github.com wrote:\n\n@johnjelinek https://github.com/johnjelinek haha... so you were able to\nuse the existing config options to get the mailer working right?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/118#issuecomment-51302504\n.\n. I just tested this out. With this fix, SSH is nice and speedy :)\n. I haven't tried redmine, but I've got jira integration on my backlog so\nI'll be testing similar config options pretty soon.\nOn Aug 14, 2014 3:34 AM, \"Sameer Naik\" notifications@github.com wrote:\n@johnjelinek https://github.com/johnjelinek on an unrelated note, have\nyou tried to use redmine for issue management with gitlab? I am trying to\nadd configuration options so that interested user can redmine for issue\ntracking, but so far I have not be able to get the integration done. I am\nnot sure if there are any configurations that need to be done on the\nredmine frontend.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/123#issuecomment-52156880\n.\n. Will you be kicking off a new tag for this change or just wait until 7.2.0?\n. No worries. I'll put my build into production until 7.2.0 is ready :)\nOn Aug 14, 2014 8:30 AM, \"Sameer Naik\" notifications@github.com wrote:\nJust wait. A new version of gitlab is due in next week (22nd) anyway.\nUnless you really want me to make a 7.1.0-1 tag right now!. I am happy to\noblige. Let me know.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/123#issuecomment-52182793\n.\n. I'm getting this error too:\n\ndebconf: unable to initialize frontend: Dialog\ndebconf: (TERM is not set, so the dialog frontend is not usable.)\ndebconf: falling back to frontend: Readline\ndebconf: unable to initialize frontend: Readline\ndebconf: (This frontend requires a controlling tty.)\ndebconf: falling back to frontend: Teletype\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nsed: -e expression #1, char 24: unknown option to `s'\nI'm using external redis and external postgres.\nenvironment vars:\nGITLAB_BACKUPS=daily\nGITLAB_EMAIL=gitlab@johnjelinek.com\nGITLAB_EMAIL_REPLY_TO=noreply@johnjelinek.com\nGITLAB_HOST=gitlab.cloudapps.johnjelinek.com\nDB_TYPE=postgres\nDB_HOST=postgresql.gitlab.svc.cluster.local\nREDIS_HOST=redis.gitlab.svc.cluster.local\nREDIS_PORT=6379\n. (I got the error in both 7.10.4 and latest)\n. I figured out that my environment was hijacking the REDIS_PORT env with tcp://IP:port. set -x helped me debug a lot. Maybe set -x should be on by default.\n\u2014\nSent from Mailbox\nOn Fri, Jul 17, 2015 at 1:45 AM, Sameer Naik notifications@github.com\nwrote:\n\n@johnjelinek some configuration parameter is confusing sed. This commonly occurs if a / character is present in one of the strings, eg. in password or as @ivanalejandro0 metioned, though the GITLAB_TIMEZONE parameter should not include a / character. \nPlease try adding the configuration parameters one by one to find out which one is causing the issue. Or paste your docker run command here.\nReply to this email directly or view it on GitHub:\nhttps://github.com/sameersbn/docker-gitlab/issues/301#issuecomment-122196454\n. I like that idea, it's nicer than docker exec .. and modifying the entrypoint manually.\n. This is happening to me too, and I'm using postgres 9.4.\n. I'm using 7.11.4 and I grepped the logs and didn't find anything.\n\nOn Wed, Jun 24, 2015 at 12:03 PM, Sameer Naik notifications@github.com\nwrote:\n\nAlso take a look at\nhttps://github.com/gitlabhq/gitlab-public-wiki/wiki/Trouble-Shooting-Guide\nYou might also want to try starting the container with app:sanitize\nargument to make sure that all files and directories have the right\nownership and permissions as it is listed as a probable cause of the issue.\nIf that does not help, the please try launching the raketask to create the\nsatellites directories\nhttps://github.com/gitlabhq/gitlabhq/blob/master/doc/raketasks/maintenance.md#re-create-satellite-repositories.\nRefer to the README on how to launch raketasks.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/313#issuecomment-114942729\n.\n. Could you update the docker-compose.yml for version 3 so it's supported in swarm mode? I took a stab at it, but the containers couldn't talk to each other within the overlay network like my other stacks can.. \n",
    "sharpner": "you mean 2015 right? :)\n. and a badge for the readme ;P\n. yes, that's happening after I delete the docker image and set it up again. \nI'm running the linked version with gitlab-ci, and linked with mysql.\nThank you for the sanitize command, i will try that next time. \n. you can close this, I think its because i used the volume outside of docker, and changing the owner messed with the permissions. \nthx for your time\n. ",
    "pnelsonsr": "quay.io seems like an easier solution!\n. Ahh...  Silly me.\nOK so I'm configuring for an external postgresql db and want to map to /var/lib/gitlab/data on the host.  Do I have to stop the container to run:\ndocker run --name=gitlab -d -v /var/lib/gitlab/data:/home/git/data sameersbn/gitlab:6.9.2\nand then\ndocker run --name=gitlab -i -t --rm -e \"DB_TYPE=postgres\" -e \"DB_HOST=\" -e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=\" -v /var/lib/gitlab/data:/home/git/data sameersbn/gitlab:6.9.2 app:rake gitlab:setup\nWith what I want to do how do I get there from my running quickstart?\n. Just to be clear.  I would run:\n1. docker run --name='gitlab' -i -t --rm -p 127.0.0.1:10022:22 -p 127.0.0.1:10080:80 -e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" sameersbn/gitlab:6.9.2\n2. docker stop gitlab\n3. docker run --name=gitlab -d -v /var/lib/gitlab/data:/home/git/data sameersbn/gitlab:6.9.2\n4. docker run --name=gitlab -i -t --rm -e \"DB_TYPE=postgres\" -e \"DB_HOST=\" -e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=\" -v /var/lib/gitlab/data:/home/git/data sameersbn/gitlab:6.9.2 app:rake gitlab:setup\n5. docker run --name='gitlab' -i -t --rm -p 127.0.0.1:10022:22 -p 127.0.0.1:10080:80 -e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" sameersbn/gitlab:6.9.2\nWhen I try this I get an error when I try step 4 saying:\n2014/06/06 16:04:15 Error: Conflict, The name gitlab is already assigned to c933c1f09f09. You have to delete (or rename) that container to be able to assign gitlab to a container again.\nwhat am I missing?\n. OK so I messed around a bunch (as I'm really not that familiar with docker...) and I was able to figure out what you mean.  So the quick start is just that...  So I just added to that start up command and was able to get it working, add some stuff, stop gitlab, start it again and everything was still there.  So here is the path I did.\n1.  did quick start just to make sure everything was working.  I was and I was able to start a local firefox and call http://localhost:10080/ and login with admin@local.host and 5iveL!fe.  Cool.\n2.  stopped the container (I think I understand what that is now) with docker stop gitlab\n3.  created the postgresql role and database using psql\n4.  initialized the database with:\ndocker run --name=gitlab -i -t --rm -e \"DB_TYPE=postgres\" -e \"DB_HOST=hostnameremoved\" -e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=pwremoved\" -v /var/lib/gitlab/data:/home/git/data sameersbn/gitlab:6.9.2 app:rake gitlab:setup\n5.  then started the gitlab container with the original quick start call plus the database environment stuff plus the host mounting stuff which looked like:\ndocker run --name='gitlab' -i -t --rm -p 127.0.0.1:10022:22 -p 127.0.0.1:10080:80 -e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" -e \"DB_TYPE=postgres\" -e \"DB_HOST=hostnameremoved\" -e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=pwremoved\" -v /var/lib/gitlab/data:/home/git/data sameersbn/gitlab:6.9.2\n6. ran firefox call to http://localhost:10080 and logged in as admin, changed pw, logged in again, setup my user account saved that then edited it to add a pw, logged out of admin, logged in as me, change pw, logged in again, created a group, created a project getting an external repo, logged out.\n7. stopped gitlab with docker stop gitlab.\n8. started gitlab again with the command from step 5\n9. started my firefox to http://localhost:10080 and was able to log in as me.  Yeah!\nNow I have to get the SMTP stuff working.\n. Yeah the learning curve is docker...  Once you understand how it works then it is easier to understand how to deploy a package.  I was going to ask about the IP address but this is set by docker.  So maybe the better question is:  Hey everything works locally now, but how do get the host system to redirect to my shinny new GitLab container so I can hit it from other systems?\n. OK again this is achieved through docker run command ...  Wow!  Just on a gut feel and based a little on the -v commands syntax I tried changing the '127.0.0.1's to the hosts IP (like 10.10.10.10)\ndocker run --name='gitlab' -i -t --rm -p 10.10.10.10:10022:22 -p 10.10.10.10:10080:80 -e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" -e \"DB_TYPE=postgres\" -e \"DB_HOST=hostnameremoved\" -e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=pwremoved\" -v /var/lib/gitlab/data:/home/git/data sameersbn/gitlab:6.9.2\nand now I can hit if from anywhere that knows of the hosts IP.  Very cool!\n. OK that did it!  YEAH!\nMy finally command looked like (one entry per line reads a bit better):\ndocker run -d\n--name='gitlab'\n-p hostIPremoved:10022:22 \n-p hostIPremoved:10080:80 \n-p hostIPremoved:10443:443 \n-e \"GITLAB_PORT=10443\" \n-e \"GITLAB_SSH_PORT=10022\" \n-e \"DB_TYPE=postgres\" \n-e \"DB_HOST=hostIPremoved\" \n-e \"DB_NAME=gitlabhq_production\" \n-e \"DB_USER=gitlab\" \n-e \"DB_PASS=dbpwremoved\" \n-e \"SMTP_HOST=smtphostremoved\" \n-e \"SMTP_USER=smtpuserremoved\" \n-e \"SMTP_PASS=smtppwremoved\" \n-e \"GITLAB_HOST=glhostnameremoved\" \n-e \"GITLAB_EMAIL=glemailremoved\" \n-e \"GITLAB_SUPPORT=glsupportemailremoved\" \n-e \"GITLAB_HTTPS=true\" \n-e \"SSL_SELF_SIGNED=true\" \n-v /var/lib/gitlab/data:/home/git/data \nsameersbn/gitlab:6.9.2\n. You need to post the output of the startup.  In my case I also had to put a entry into my /var/lib/pgsql/data/pg_hba.conf for 172.17.0.2/0 and I made it specific to gitlabhq_production db and gitlab user.  But it will tell you the connection problem in the startup output.\n. This seems to be a problem with docker...  I moved the data dir to data-hold and created a new one.  Then I renamed the pg database and created a new one.  Then I started it all up again and got the same result.  Next I'm going to try the quick start.\n. So the quick start did work but it did have this:\ndocker run --name='gitlab' -i -t --rm -p 127.0.0.1:10022:22 -p 127.0.0.1:10080:80 -e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" sameersbn/gitlab:6.9.2\nUser: root Password: xxxxxxxxx\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nStarting openssh server...\nStarting nginx...\nStarting mysql server...\nStarting redis server...\nStarting gitlab server...\nInitializing database...\n...\nI was able to log in and things worked OK.\n. So then I just moved everything out of the way and recreated /var/lib/gitlab/data and then tried to run just the bare bones start up of:\nd run --name='gitlab' -i -t -p 10.32.1.12:10022:22 -p 10.32.1.12:10080:80 -e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" -v /var/lib/gitlab/data:/home/git/data sameersbn/gitlab:6.9.2\nwhich failed with:\nUser: root Password: Ahv1Moh8Aish\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nmkdir: cannot create directory '/home/git/data/ssh/': Permission denied\nSo it seems to be a problem with docker and mounting...\n. So...  I downgrading the fedora docker-io to the previous version which took me awhile to find out on the internet (and because yum did something with the old one) so I had to specify the rpm to downgrade to with:\nyum downgrade docker-io docker-io-0.11.1-1.fc20.x86_64.rpm\nrpm -q docker-io\n-> docker-io-0.11.1-1.fc20.x86_64\nthen i restarted the system just to be safe.  Moved data dir back into place.  Then just tried to run my ole gitlab statup command (the image one not the container one <- which got deleted anyway in the fun).  Had a browser hit the site and it was working fine with ssl and pgsql and my external mount dir.\n. So it seems that the docker-io-0.11.1-7.fc20.x86_64.rpm package broke external mounting somehow.\n. I just upgraded the F20 docker-io from 0.11.1-1 to 1.0.0-1 and this one seems to work fine. \n. @sameersbn guess what?  When I went to try the redis server which ment I had to delete the container to do a new one off the image.  When I did I got this darn error again.  I messed around and messed around but I just could not figure out why.  Then in a strock of genious (muhaha) I tailed the message log...  And there it was... SELinux stopping access.  YFKM!  So I turned it off with 'setenforce 0' and tried the command again and yep it worked!   ARG SELinux ARG!\n. @sameersbn I'd love to try the docker.te but to I'm not sure how to do that!\n. @sameersbn I figured out how to implement your suggested docker policy by doing:\nyum install selinux-policy-devel\nmkdir /root/selinux.local\ncd /root/selinux.local\nchcon -R -t usr_t .\nln -s /usr/share/selinux/devel/Makefile .\ncurl https://git.fedorahosted.org/cgit/se...?h=f20-contrib -o docker.te\nmake\nsemodule -i docker.pp\nSo I restarted the host (just to make sure there was nothing lingering...) and leaving selinux on I tried starting docker-gitlab.  I was tailing audit/audit.log and messages.  The container still didn't start.  But I'm getting a different error in the container logs it shows:\nUser: root Password: xxxxx\ninvoke-rc.d: policy-rc.d denied execution of restart.\nmv: cannot stat '/etc/ssh/ssh_hostkey': No such file or directory\nmv: cannot stat '/etc/ssh/sshhost_key.pub': No such file or directory\nAgain if I turn off selinux with 'setenforce 0' then the container starts and seems to work ok.  I did see a warning (error?) in the container logs but it works just fine so I'm not sure if it is related to the selinux thing or not:\nRepo base owned by git:git? ... yes\nRepo base access is drwxrws---? ... no\n  Try fixing it:\n  sudo chmod -R ug+rwX,o-rwx /home/git/data/repositories/\n  sudo chmod -R ug-s /home/git/data/repositories/\n  find /home/git/data/repositories/ -type d -print0 | sudo xargs -0 chmod g+s\n  For more information see:\n  doc/install/installation.md in section \"GitLab Shell\"\n  Please fix the error above and rerun the checks.\nSatellites access is drwxr-x---? ... yes\nI checked the host drive and /var/lib/gitlab/data/repositories is 770 throughout.  Again not sure if this is relevant.\nAlso with selinux off I saw a couple of selinux errors in the host message log that I think is coming from the docker container.  There are a few of them but they are all the same:\nJun 18 10:11:44 servernameremoved setroubleshoot: SELinux is preventing /bin/chmod from setattr access on the file . For complete SELinux messages. run sealert -l a4abe72b-dc74-4c9b-8791-xxx\nJun 18 10:11:44 servernameremoved python: SELinux is preventing /bin/chmod from setattr access on the file .\n**  Plugin catchall (100. confidence) suggests   *****\nIf you believe that chmod should be allowed setattr access on the  file by default.\nThen you should report this as a bug.\nYou can generate a local policy module to allow this access.\nDo\nallow this access for now by executing:\n grep chmod /var/log/audit/audit.log | audit2allow -M mypol\n semodule -i mypol.pp\nI've done the suggested 2 steps but this message is there every time the image or container starts.  Is there a way to turn off selinux in the container?  Just to troubleshoot if its coming from there?\n. I messed around with trying to get selinux-enable working in /etc/sysconfig/docker but I noticed that nothing I was doing was changing it visable by:\nps -AfZ | grep docker\nSo I finally found that it was being set in the systemctl startup file \n/etc/systemd/system/multi-user.target.wants/docker.service\nSo I removed it and rebooted and confirmed that selinux-enabled=false with the ps command again.  However still I get the same error.\n. I got it working...  I had to turn off dontaudit with 'semanage dontaudit off' then try to start gitlab, then capture denials, then 'audit2allow -M' and 'semodule -i' them, then lather, rinse, repeat.  I had to do this about 4 times.  But every time there was new denials or the startup would go further, so I new I just had to get there...  Ultimately I prevailed.  I got a clean boot of gitlab with selinux on...  Yeah!\n. Well further testing showed that more policies were needed.  I was only testing a push to one repo which revealed more problems and I had to go to dontaudit again.  But I got it to push.  The last problem was a lock file I had to remove that got left by the previous push attempt.  But once that was done it pushed.  I'll do other repos tomorrow (I'm exhausted...from this).  I will then test it against new repos and moved repos.  Any anything else I can think of.  I had a total of 13 policy files (.pp) that I imported.\n. I have found some interesting info on selinux on docker on fedora.  Which seems to point to the fact that people are working on it.  http://danwalsh.livejournal.com/67373.html\nOn the today in my insanity side:\nI noticed (well because I'm getting to really know selinux) that I made the mistake of building the docker.pp module with the te file you pointed to but without the if and fc files along with it.  Not a huge issue because the rpm had things labeled correctly.  But, later I did a .autorelabel which changed contexts for docker based on an autogenerated fc file.  So I'm back tracking a bit and then I'll create one pp file (from the 13...) to handle gitlab.  The reason there were so many modules (pp's) was that gitlab failed at a specific denial so you had to clear that denial and then you got the next one...  Consoliating the modules I can kind of understand the errors.  Mostly around file operations in the repositories.\n. Wow the geard atomic thingy is pretty amazing!\n. No kidding...  Very cool.\n. @sameersbn No I've not.  I've noticed other problems...  Still trying to work them out!  I'll post when I do.\n. sorry my output got messed up...\n. Ha!  Sorry about that...  It sounded intriguing so I thought I would try it.  But as I started messing with it was somewhat confusing.  So I got that it would encapsulate everything in docker and therefore make it easy to move to another system.  But this was not the case as I could not get the files (and dirs) in the datastore container to show up in the image that I commited the container from.  So I'm not sure how great that would be.  Sure you could copy the image over but it may not have the data that was part of it.  Again sorry that you brain blew up...  I thought it might be interesting but in practice I couldn't get it working.  I also thought that if I could get it working I could get around my problem with upgrading docker-io on my fedora20 system. \n. How I populated the data store was I tar'd up the data dir and then shared the directory it was in and then used -v to mount that dir and then went interactive within the container and un-tar'd it into the /home/git/data directory.  I copied the tar file to /home/git dir and it stays there during a container-stop/container-commit.  But everything in the /home/git/data dir is gone after container-commit and the start based on the new image.\nJust wanted to be complete with what I tried!\n. Fedora released docker-io 1.0.0-1 and my issue was resolved.\n. Well no configuration sounds good.  I have the redis server running on another F20 system so I take it that all I have to do is point gitlab at it and thats it!\n. Is there a way to change to the external redis server on a running container?\n. So I should just stop the container and include a \"-e \"REDIS_HOST=192.168.1.100\" -e \"REDIS_PORT=6379\" kind of thing to my image startup\n. is 6379 the standard port?\n. No I'm not able to.  I can ping them from the host fine, but I think that somehow within the container it can not...  The Hard IP addresses do work!\n. to the end of the run command?  Just add bash?\n. OK I had to change the -d to a -i and then it worked.  But the host table on the container is not the same as the docker-host so no pinging from there says unknown hosts.  Is there a way to get it in the container?\n. I tried the run command and it showed the proper hosts table.  Am going to try the dns one next\n. So I added the '-v /etc/hosts:/etc/hosts:ro' to my run command and \n  -e \"DB_HOST=mypgprimary.example.com\"\n  -e \"REDIS_HOST=myredisprimary.example.com\"\ngot this in the logs:\n---snip---\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nUpdating CA certificates...\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nsudo: unable to resolve host 363e5ed1c069\nStarting cron...\nStarting openssh server...\nStarting nginx...\nsudo: unable to resolve host 363e5ed1c069\nStarting both the GitLab Unicorn and Sidekiq.\nThe GitLab Unicorn web server with pid 2831 is running.\nThe GitLab Sidekiq job dispatcher with pid 2868 is running.\nGitLab and all its components are up and running.\nsudo: unable to resolve host 363e5ed1c069\n[deprecated] I18n.enforce_available_locales will default to true in the future. If you really want to skip validation of your locale you can set I18n.enforce_available_locales = false to avoid this message.\nCreating satellites for ...\n---snip---\nhowever it is working.  the 363e5ed1c069 is the generated host name of the container.\n. So to be clear we have no dns server running.  We have a maintained centralized hosts file that is for the local network.\n. Great stuff!  I added an entry docker-gitlab-prod 127.0.0.1 to the hosts table and then used -h docker-gitlab-prod and this worked great.  Thanks @sameersbn you're the best!\n. should I move to 7.0.0 -> 7.2.2\n. OK started 7.2.2 and the following errors \nMigrating database...\nrm: cannot remove '/home/git/data/tmp/public/assets/semantic-ui': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/emoji/groupme': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/emoji/dancer': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/emoji/octocat': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/emoji/siamese_kitten': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/emoji/two_men_in_love': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/emoji/GAKUEngine': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/emoji/high_hopes': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/emoji/unicode': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/emoji/one_eyed_robot': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/emoji/bgok': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/emoji/smiling_cat_face_with_heart_shaped_eyes': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/emoji/DSLR_click': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/jquery-ui': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/bootstrap': Permission denied\nrm: cannot remove '/home/git/data/tmp/public/assets/authbuttons': Permission denied\nrm: cannot remove '/home/git/data/tmp/cache/assets/production/sprockets': Permission denied\nrm: cannot remove '/home/git/data/tmp/cache/assets/production/sass/0b094b0a31407c9bbadb835837116403584128c8': Permission denied\nrm: cannot remove '/home/git/data/tmp/cache/assets/production/sass/3b229a5a22db57b53c3cd615f26410f50ac327de': Permission denied\nrm: cannot remove '/home/git/data/tmp/cache/assets/production/sass/e298647bb3ac190c1b1c83978c45d6fe08734060': Permission denied\nrm: cannot remove '/home/git/data/tmp/cache/assets/production/sass/d31b749805703bb891581cb4000998cf5ff3f851': Permission denied\nrm: cannot remove '/home/git/data/tmp/cache/assets/production/sass/b349ede95fb5d7a166cb7983fe50b3c6a5924227': Permission denied\nrm: cannot remove '/home/git/data/tmp/cache/assets/production/sass/254ba37ba41ab4f6f55a93a190a85c60fb9ff4c3': Permission denied\nrm: cannot remove '/home/git/data/tmp/cache/assets/production/sass/fce2bd825e68e6912390c0d8844a3f1d1ae25c1d': Permission denied\nrm: cannot remove '/home/git/data/tmp/cache/assets/production/sass/3fbdf9df142aea8eae1cb6d99f43217fd8a244a8': Permission denied\nrm: cannot remove '/home/git/data/tmp/cache/assets/production/sass/d117af44ffad5cede0326a3bda53c7dc1c53bb56': Permission denied\nrm: cannot remove '/home/git/data/tmp/cache/assets/production/sass/888e4c92dbdbd7219089bd2ace553c93de01cdae': Permission denied\nrm: cannot remove '/home/git/data/tmp/cache/assets/production/sass/29d9ef8d8e7fff88fa65654e9ef20b1cb278ad94': Permission denied\nis this db or filesystem?  Looks like filesystem and therefor selinux...\n. yes it was a filesystem thingy.  I removed the tmp dir manually and this allowed things to move forward...\nI am seeing this db looking thingy:\n[deprecated] I18n.enforce_available_locales will default to true in the future. If you really want to skip validation of your locale you can set I18n.enforce_available_locales = false to avoid this message.\n. Hey where is the root password displayed now?\n. OK will post a new issue on that one.  Back to my current upgrade...\n. I was able to go to 7.2.2, but it said that it needed to check hooks when it couldn't.  I did check out the operations and everything appears to be working.  Now time for 7.3.1-3...\n. This upgrade followed the need for \ndocker run --name gitlab -d -e \"DB_TYPE=postgres\" -e \"DB_HOST=\" -e \"DB_NAME=gitlab\" -e \"DB_USER=gitlab\" -e \"DB_PASS=e5f8smtrmw\" -e \"REDIS_HOST=\" -v /var/lib/gitlab/data:/home/git/data sameersbn/gitlab:7.3.1-3 app:sanitize\nWhich again produced all kinds of permission denied errors...\nHow can I just start over?  Should I just delete the data dir and the database and try and restart 7.3.1-3\n. Well I threw my hands up yesterday and gave up...  Today I turned off selinux and tried to do the app:sanitize thing and this time it worked.  So then I did a my normal run of  sameersbn/gitlab:7.3.1-3 and it booted up fine.  So again selinux is the culprit...  Arg!\nhere is the top portion of my inital boot under 7.3.1-3:\n---snip---\nUpdating CA certificates...\nStarting cron...\nStarting openssh server...\nStarting nginx...\nMigrating database...\n[deprecated] I18n.enforce_available_locales will default to true in the future. If you really want to skip validation of your locale you can set I18n.enforce_available_locales = false to avoid this message.\nCompiling assets. Please be patient, this could take a while...\n[deprecated] I18n.enforce_available_locales will default to true in the future. If you really want to skip validation of your locale you can set I18n.enforce_available_locales = false to avoid this message.\nStarting both the GitLab Unicorn and Sidekiq.\nThe GitLab Unicorn web server with pid 2863 is running.\nThe GitLab Sidekiq job dispatcher with pid 2902 is running.\nGitLab and all its components are up and running.\n[deprecated] I18n.enforce_available_locales will default to true in the future. If you really want to skip validation of your locale you can set I18n.enforce_available_locales = false to avoid this message.\n---snip---\nthen I stopped gitlab container and turned selinux back on and started the gitlab container and this time it went through ok.  So I have some selinux work to do...\n. Everytime I think that \"I' understand selinux...\" it bites me everytime\n. Can I delete the old gitlab images (7.2.2  7.0.0  6.9.2)?\n. Removed all the old images and everything seems to working great.  Glad I didn't start over!\n. Yeah nsenter is installed as part of util-linux package and nsinit as part of golang-github-docker-libcontainer package.\nSo I installed docker-enter in /usr/local/bin\nand ran 'docker-enter gitlab' and got:\nnsenter: failed to execute su: No such file or directory\nSo I added 'su - root' to '/bin/su - root' and tried again and this time it worked.\nSo that is cool but I do not have golang-github-docker-libcontainer package installed.\n. Great info.  docker-enter rules!\n. Sorry was so busy...   Yes this answered it all for me!  Thanks!   I had been doing a tar of the data volume.\n. This is what I was doing:\nMake sure your variables are assigned or things will go very bad!\n\nset vars\n   tardir='/trans/';dockertar=\"gitlab-docker-.tar.gz\";datatar=\"gitlab-data-.tar.gz\";pgdump=\"gitlab-pgdump-\"\nbackup container with (takes about 2 minutes and only needs to be done when gitlab image and/or container changes )\n   docker export gitlab | gzip > ${tardir}${dockertar}\nbackup data with\n   tar -C /var/lib -cvzf ${tardir}${datatar} gitlab/data\nbackup postgresql database with\n   pg_dump -Cch pgsql.npn gitlab > ${tardir}${pgdump}.sql && tar -C ${tardir} -cvzf ${tardir}${pgdump}.tar.gz ${pgdump}.sql && rm -f ${tardir}${pgdump}.sql \ncopy them to backup server\n. Automatic sounds good...\n. How would one do this sort of backup hook?\n. @sameersbn OK thanks I'll stick with just the auto backup.  Just sounded cool.\n. I do track issue #39 but didn't know about gitlab-ce release notes.  Will track that as well!  Thanks!\n. I tried both 7.4.3 and 7.4.2 with the same result.  I looked through the repositories and don't see any glaring differences between mdc project or wiki and any other project.  So I'm not sure it is even that.  I guess I could try and delete that project and recreate it...\n. OK I forgot to respond with my results.  Sorry!\n\nI removed the project and tried the backup again.  This time it worked.  Great!\nI recreated the project and push to from a current repo and tried the backup again.  It worked.  Great!\nI think that this repo might have been created during my initial problems with selinux.  So if you see this kind of error creating a backup  then try deleting the repo from GitLab and recreating it and pushing to it and then try the backup process again.\n. No I will wait for any config options in the possible future.  Was just wondering...\n. @netflash thanks for the command line option.  The problem is that it is static.  Our hosts-all file on our all our docker servers are fequently updated and because we could map it into docker all docker containers were updated at the time hosts-all was.  My temporary solution was to get the ip (within the docker run command) with python -c \"import socket; print socket.gethostbyname(\\\"hostname here\\\")\", but again this is to static.\nUtimately the real solution that I've been putting off (because I could with -v) is a DNS server and @sameersbn has a great docker container for that!  We are working on that now, @sameersbn your docs rule!\n. So I implemented your docker bind container and it is working.  I removed the \n-v /root/dev/conf/hosts/hosts-all:/etc/hosts:ro\nand added\n--dns='IP of the DNS container'\nand this works.  But...\nI have to pull the IP of the actual container to get gitlab to recognize the DNS.  I think this may be because I don't include the network range that includes the docker gitlab IP.  When I tried putting the host docker server IP in \n--dns='IP of the docker server'\nthis did not work.  I'm going to try putting the docker network in the ACL of bind and see it that works.  Is that how you do it?\n. well I was waiting for you to say how you do it.  But I've utilized a bind server and got things dynamic.\n. Well I tracked it down to a postgresql server that was in a strange state.  I restarted the postgresql server and started the gitlab containers and things are working.  Not sure what happened to the db server as I have never seen it act like it was.  But I was doing a lot as part of the upgrade process so something happened that the db server didn't like.\n. An added note:  I found about the same errors when redis server wasn't responding (where the server was down or dns was not responding).\n. That looks kinda interesting...  I'll look into it.  It also tells me that the api will allow me to create repos in groups which is what I really want.  Will let you know what I come up with!\n. That looks kinda interesting...  I'll look into it.  It also tells me that the api will allow me to create repos in groups which is what I really want.  Will let you know what I come up with!\n. I have been using curl with --cacert  to get to other apps api's so I know this works, but I cannot seem to get the correct gitlab api call to create a project in a group.  I'm not getting ssl errors so I don't think its that.\n. I have been using curl with --cacert  to get to other apps api's so I know this works, but I cannot seem to get the correct gitlab api call to create a project in a group.  I'm not getting ssl errors so I don't think its that.\n. namespace_id = group_id well that nice to know.  So OK so my URL needs to be something like:\n'https://my-gitlab-server.com/projects/:name=myproject:namespace_id=mygroup:'\nI've tried a bunch of things like this but I can not get the call right.  It says that this will create a project for an authenticated user but I can see that I'm not authenticating.  I admit I'm kind of new to this whole api thing and feel I'm missing something important.\n. namespace_id = group_id well that nice to know.  So OK so my URL needs to be something like:\n'https://my-gitlab-server.com/projects/:name=myproject:namespace_id=mygroup:'\nI've tried a bunch of things like this but I can not get the call right.  It says that this will create a project for an authenticated user but I can see that I'm not authenticating.  I admit I'm kind of new to this whole api thing and feel I'm missing something important.\n. Wow that link is great!  Which method have you used?\n. Wow that link is great!  Which method have you used?\n. It really helps as I have used curl with APIs from GitHub, BitBucket, and Stash in the past.  I'll post here once I get it working so others can benefit!\n. It really helps as I have used curl with APIs from GitHub, BitBucket, and Stash in the past.  I'll post here once I get it working so others can benefit!\n. So the trick is to get the id of the group, which I could not find anywhere in the webpages.  So I got this working with (I used the -k because I could not get a pem cert from chrome on windows and gave up trying to convert...):\ncurl --header \"PRIVATE-TOKEN: <my token>\" \"https://gitlab.example.com:10443/api/v3/namespaces\" -k\nOnce I had the namespace_id number associated with the wanted group I was able to get the repo created in the proper group with\ncurl --header \"PRIVATE-TOKEN: <my token>\" -X POST \"https://gitlab2.npn:10443/api/v3/projects?name=foobartest1&namespace_id=11&description=FooBarTest%201&wiki_enabled=false&snippets_enabled=true&visibility_level=10\" -k\n. So the trick is to get the id of the group, which I could not find anywhere in the webpages.  So I got this working with (I used the -k because I could not get a pem cert from chrome on windows and gave up trying to convert...):\ncurl --header \"PRIVATE-TOKEN: <my token>\" \"https://gitlab.example.com:10443/api/v3/namespaces\" -k\nOnce I had the namespace_id number associated with the wanted group I was able to get the repo created in the proper group with\ncurl --header \"PRIVATE-TOKEN: <my token>\" -X POST \"https://gitlab2.npn:10443/api/v3/projects?name=foobartest1&namespace_id=11&description=FooBarTest%201&wiki_enabled=false&snippets_enabled=true&visibility_level=10\" -k\n. I'm not really that good with the certs area.  Do you know how to pull the gitlab's server cert exported to pem format, by any chance?\n. I'm not really that good with the certs area.  Do you know how to pull the gitlab's server cert exported to pem format, by any chance?\n. I'm not really that good with the certs area.  Do you know how to pull the gitlab's server cert exported to pem format, by any chance?\n. OK I just use the gitlab.crt from the certs dir by adding to the curl command\n--cacert <Path to gitlab data>/certs/gitlab.crt\n. OK I just use the gitlab.crt from the certs dir by adding to the curl command\n--cacert <Path to gitlab data>/certs/gitlab.crt\n. OK I just use the gitlab.crt from the certs dir by adding to the curl command\n--cacert <Path to gitlab data>/certs/gitlab.crt\n. So the final API URL for adding to a group involves first getting the group namespace_id number using:\ncurl --header \"PRIVATE-TOKEN: <my token>\" \"https://gitlab.example.com:10443/api/v3/namespaces\" --cacert <Path to gitlab data>/certs/gitlab.crt\nand then with that number running the create repo in a group API URL with:\ncurl --header \"PRIVATE-TOKEN: <my token>\" -X POST \"https://gitlab.example.com:10443/api/v3/projects?name=foobartest1&namespace_id=11&description=FooBarTest%201&wiki_enabled=false&snippets_enabled=true&visibility_level=10\" --cacert <Path to gitlab data>/certs/gitlab.crt\nand that's that.  I wish gitlab would fix namespace_id with group_name which is what its called in all gitlab pages.\n. So the final API URL for adding to a group involves first getting the group namespace_id number using:\ncurl --header \"PRIVATE-TOKEN: <my token>\" \"https://gitlab.example.com:10443/api/v3/namespaces\" --cacert <Path to gitlab data>/certs/gitlab.crt\nand then with that number running the create repo in a group API URL with:\ncurl --header \"PRIVATE-TOKEN: <my token>\" -X POST \"https://gitlab.example.com:10443/api/v3/projects?name=foobartest1&namespace_id=11&description=FooBarTest%201&wiki_enabled=false&snippets_enabled=true&visibility_level=10\" --cacert <Path to gitlab data>/certs/gitlab.crt\nand that's that.  I wish gitlab would fix namespace_id with group_name which is what its called in all gitlab pages.\n. So the final API URL for adding to a group involves first getting the group namespace_id number using:\ncurl --header \"PRIVATE-TOKEN: <my token>\" \"https://gitlab.example.com:10443/api/v3/namespaces\" --cacert <Path to gitlab data>/certs/gitlab.crt\nand then with that number running the create repo in a group API URL with:\ncurl --header \"PRIVATE-TOKEN: <my token>\" -X POST \"https://gitlab.example.com:10443/api/v3/projects?name=foobartest1&namespace_id=11&description=FooBarTest%201&wiki_enabled=false&snippets_enabled=true&visibility_level=10\" --cacert <Path to gitlab data>/certs/gitlab.crt\nand that's that.  I wish gitlab would fix namespace_id with group_name which is what its called in all gitlab pages.\n. Thats good to know!\n. Thats good to know!\n. Thats good to know!\n. @Allineer I only had read through the Upgrading part.  So here is what needs to happen...\n1. generate a long random string with: \npwgen -Bsv1 64\n2. then add that to my docker run command with:\nGITLAB_SECRETS_DB_KEY_BASE=\"<generated string>\"\n3. then do the docker run\ngreat everything works.  but I'm still unclear what this is for?\n. Ahh its for db encryption.  So, the key will be needed for back up systems. Its important to keep secret in a password kind of way.\n. @sameersbn yeah it kind of hit me at a moment of weakness as I had a few headaches going on with other systems.  If you had something in upgrade section of the readme then I would have been golden.  I just entered a issue because you are always there for us!  I'll subscribe to #39 and hopefully catch this kind of thing next time.  \nSo, I understand what the key does but the reason I kind of needed to know what it was doing is we keep a couple of docker systems ready to take on a promotion if a failure happens.  So understanding if this value was unique to the server or unique to the db (pg) was important.  Kind of a \"Why its there?\" and \"What is it doing?\" in important to us from an operational standpoint.  That's the why and what of what I was asking about. \n. @sameersbn cool!\n@favorinfo you didn't have to have GITLAB_SECRETS_DB_KEY_BASE prior to 8.0.0 so you probably didn't have one.  Just create a random string with pwgen -Bsv1 64 and assign it in your docker run command options docker run --name gitlab -d [OPTIONS] sameersbn/gitlab:8.0.2.  Once it is set you will need it after that.\n. @sameersbn cool!\n@favorinfo you didn't have to have GITLAB_SECRETS_DB_KEY_BASE prior to 8.0.0 so you probably didn't have one.  Just create a random string with pwgen -Bsv1 64 and assign it in your docker run command options docker run --name gitlab -d [OPTIONS] sameersbn/gitlab:8.0.2.  Once it is set you will need it after that.\n. @jave going with the nose bleeding huh (F23)? I have had problems with F22 and docker.  Things like containers not able to resolve ns.  So I always watch the startup of gitlab and if it hangs or errors it usually been problems with name resolution.  It was easy previously when you could virtually mount the systems host file, but after taking away this option (cant remember what release), all my ns troubles started.  So initially I went with a linked bind container.  Which worked for awhile and then it didn't and still does not.  So I have to specifically set the dns of the gitlab container to the IP of my bind container (not the hosts IP).  The bind container is on the same host and is named bind so, I do this with the --dns=$(docker  inspect --format {{.NetworkSettings.IPAddress}} bind) parameter.  I tried doing it with a --host=<pg-server>:<ip> and --host=<redis-server>:ip parameters but our environment was more dynamic and we needed it to look at bind for resolution.  So, I'm sorry I don't know specifically about what your seeing but I triggered off your comment about not being able to see the PG container.  And although we do not run PG and Redis as containers, it sounds like container name resolution problems.\nAnother weird thing is, that we have mutiple backup hosts running the same F22 with matching versions of software installed but I do not have to have the --dns parameter on those.  I've been perplexed by this container resolution problem to say the least.  But with the dns parameter work around, gitlab is working fine.  Here is my environment.\nF22 Server\nselinux -> enforcing\ndocker -> 1.8.2-fc22\ndocker-compose -> not installed\ndocker-py -> not installed\nCPython -> not installed\nkernel ->  4.2.3-200.fc22.x86_64\ngitlab -> 8.1.2\npostgresql -> 9.4.4\nredis -> 2.8.22\nAgain we do not run PG and Redis in containers and do not use docker-compose.  Hope any of this helps.\n. @jave going with the nose bleeding huh (F23)? I have had problems with F22 and docker.  Things like containers not able to resolve ns.  So I always watch the startup of gitlab and if it hangs or errors it usually been problems with name resolution.  It was easy previously when you could virtually mount the systems host file, but after taking away this option (cant remember what release), all my ns troubles started.  So initially I went with a linked bind container.  Which worked for awhile and then it didn't and still does not.  So I have to specifically set the dns of the gitlab container to the IP of my bind container (not the hosts IP).  The bind container is on the same host and is named bind so, I do this with the --dns=$(docker  inspect --format {{.NetworkSettings.IPAddress}} bind) parameter.  I tried doing it with a --host=<pg-server>:<ip> and --host=<redis-server>:ip parameters but our environment was more dynamic and we needed it to look at bind for resolution.  So, I'm sorry I don't know specifically about what your seeing but I triggered off your comment about not being able to see the PG container.  And although we do not run PG and Redis as containers, it sounds like container name resolution problems.\nAnother weird thing is, that we have mutiple backup hosts running the same F22 with matching versions of software installed but I do not have to have the --dns parameter on those.  I've been perplexed by this container resolution problem to say the least.  But with the dns parameter work around, gitlab is working fine.  Here is my environment.\nF22 Server\nselinux -> enforcing\ndocker -> 1.8.2-fc22\ndocker-compose -> not installed\ndocker-py -> not installed\nCPython -> not installed\nkernel ->  4.2.3-200.fc22.x86_64\ngitlab -> 8.1.2\npostgresql -> 9.4.4\nredis -> 2.8.22\nAgain we do not run PG and Redis in containers and do not use docker-compose.  Hope any of this helps.\n. @jave hmmm on our system that doesn't work (without the --dns= parameter) has PG and Redis on it as host services. Not sure if it matters...   Have you tried to connect directly across the docker network bridge instead of going out through the hosts 5000x ports?   ie DB_HOST=<ip of pg container> and DB_PORT=5432 and same with REDIS_HOST=<ip of redis container> and REDIS_PORT=6379!\n. @jave hmmm on our system that doesn't work (without the --dns= parameter) has PG and Redis on it as host services. Not sure if it matters...   Have you tried to connect directly across the docker network bridge instead of going out through the hosts 5000x ports?   ie DB_HOST=<ip of pg container> and DB_PORT=5432 and same with REDIS_HOST=<ip of redis container> and REDIS_PORT=6379!\n. @sameersbn thanks for the issue link.  I read through and was amazed as the docker releases matched my notes.  I looked at my system that had problems with inter-container connectivity and the backup systems that didn't and I found that the system that had problems had firewalld-filesystem and python-firewall installed but firewalld was not running.  So I removed firewalld-filesystem and python-firewall and then did a dnf update which had a few updates (including docker-1.8.2-7, docker-selinux-1.8.2-7). After rebooting I started up bind and then I just tried to do my gitlab startup without the --dns=... parameter and it worked.  Because I did a few things (and to be honest I have not been trying the gitlab startup without the dns parameter since docker 1.6) I can not say what fixed my problem with inter-container connectivity.  I'm just happy it works!  Without this thread I would not be \"working as expected\".  Thanks\n@jave our systems have firewalld removed but we had a some remniants of it still installed on the system that needed the --dns=... parameter.  I'm not sure that it mattered, or that the dnf update to the latest docker did it, or some update after docker 1.6 when our problems began, but my inter-container communication is working again.  I may consider doing PG and Redis in containers if you tell me it works now for you.  And then I may consider your docker-compose.yml as a starting point for entry into docker-compose.  Thanks\n. @sameersbn thanks for the issue link.  I read through and was amazed as the docker releases matched my notes.  I looked at my system that had problems with inter-container connectivity and the backup systems that didn't and I found that the system that had problems had firewalld-filesystem and python-firewall installed but firewalld was not running.  So I removed firewalld-filesystem and python-firewall and then did a dnf update which had a few updates (including docker-1.8.2-7, docker-selinux-1.8.2-7). After rebooting I started up bind and then I just tried to do my gitlab startup without the --dns=... parameter and it worked.  Because I did a few things (and to be honest I have not been trying the gitlab startup without the dns parameter since docker 1.6) I can not say what fixed my problem with inter-container connectivity.  I'm just happy it works!  Without this thread I would not be \"working as expected\".  Thanks\n@jave our systems have firewalld removed but we had a some remniants of it still installed on the system that needed the --dns=... parameter.  I'm not sure that it mattered, or that the dnf update to the latest docker did it, or some update after docker 1.6 when our problems began, but my inter-container communication is working again.  I may consider doing PG and Redis in containers if you tell me it works now for you.  And then I may consider your docker-compose.yml as a starting point for entry into docker-compose.  Thanks\n. @jave did you get it working?\n. @jave did you get it working?\n. Using an external postgresql database that is...  Its not in a container.  This use to work but stop working when I tried this version.\n. Using an external postgresql database that is...  Its not in a container.  This use to work but stop working when I tried this version.\n. No I do not have either of those.  I looked through the configuration parameters and followed the direction of creating a password using pwgen -Bsv1 64 and then stuck this value into the GITLAB_SECRETS_SECRET_KEY_BASE and GITLAB_SECRETS_OTP_KEY_BASE.  When I tried starting gitlab v8.11.4, it worked.  Thanks @bdwilton for pointing me in the right direction!\n. No I do not have either of those.  I looked through the configuration parameters and followed the direction of creating a password using pwgen -Bsv1 64 and then stuck this value into the GITLAB_SECRETS_SECRET_KEY_BASE and GITLAB_SECRETS_OTP_KEY_BASE.  When I tried starting gitlab v8.11.4, it worked.  Thanks @bdwilton for pointing me in the right direction!\n. I read somewhere that I need to do a admin call but would this be persistent?. When I say I downgraded I did the following:\n\ndocker pull docker.io/sameersbn/gitlab:10.8.0\ndocker tag docker.io/sameersbn/gitlab:10.8.0 docker.io/sameersbn/gitlab:latest\ndocker rmi docker.io/sameersbn/gitlab:10.8.0\n\n\nthen I do my normal start.  Just wanted to add this just in case anyone else is experiencing this problem but needs to keep GitLab up.. When I say I downgraded I did the following:\n\ndocker pull docker.io/sameersbn/gitlab:10.8.0\ndocker tag docker.io/sameersbn/gitlab:10.8.0 docker.io/sameersbn/gitlab:latest\ndocker rmi docker.io/sameersbn/gitlab:10.8.0\n\n\nthen I do my normal start.  Just wanted to add this just in case anyone else is experiencing this problem but needs to keep GitLab up.. Just tried 11.0.0 and now everything is working!. Just tried 11.0.0 and now everything is working!. ",
    "davidwindell": "@sameersbn Docker Hub has just released dynamic matching of git branches and tags as well as faster builds.\n. Or you can just use tutum ;)\n. :+1: \n. :+1: \n. It seems a waste of resources to run a proxy just for SSL termination on a single node. I'd like to see this built in.. It seems a waste of resources to run a proxy just for SSL termination on a single node. I'd like to see this built in.. @bluecamel can you make the requested changes?\nWe had some problems migrating from 8x to 9x because of collation issues.. @bluecamel can you make the requested changes?\nWe had some problems migrating from 8x to 9x because of collation issues.. Ping @digitalLumberjack for your comments. Ping @digitalLumberjack for your comments. ",
    "mikehaertl": "@sameersbn No more announcements here? ;)\n. @sameersbn Hmm, it's just that some of the previous announcements were about new features, too. So I though, you'd also announce new releases here. Unfortunately github doesn't have such a feature.\nI think no one would be offended of an announcement too much ;)\n. Hmm, not sure why that would make a difference, but I've tried. With docker-compose you just have to change the name of the container. So I've modified it from redis to redisio. No difference.\n. Ok, added set -x. The lines where it fails are:\n...\n '[' mysql == mysql ']'\n+ sudo -u git -H sed 's/{{DB_ADAPTER}}/mysql2/' -i config/database.yml\n+ sudo -u git -H sed 's/{{DB_ENCODING}}/utf8/' -i config/database.yml\n+ sudo -u git -H sed 's/{{DB_HOST}}/db/' -i config/database.yml\n+ sudo -u git -H sed 's/{{DB_PORT}}/tcp://172.17.0.43:3306/' -i config/database.yml\nsed: -e expression #1, char 20: unknown option to `s'\n. Yup, just found that out, too. Renamed it to mysql and it seems to work now.\nThanks!\n. For completeness, here's a full docker-compose.yml that works. I think, this could be included in the README as it gets you up and running in no time at all:\ngitlab:\n    image: sameersbn/gitlab:7.10.1\n    ports:\n        - \"8080:80\"\n    expose:\n        - \"80\"\n    links:\n        - mydb\n        - myredis\n    environment:\n        DB_TYPE: mysql\n        DB_HOST: mydb\n        DB_NAME: gitlab\n        DB_USER: gitlab\n        DB_PASS: gitlab\n        REDIS_HOST: myredis\n        REDIS_PORT: 6379\nmydb:\n    image: mysql:5.6.22\n    ports:\n        - \"3306:3306\"\n    expose:\n        - \"3306\"\n    environment:\n        MYSQL_ROOT_PASSWORD: root\n        MYSQL_DATABASE: gitlab\n        MYSQL_USER: gitlab\n        MYSQL_PASSWORD: gitlab\nmyredis:\n    image: redis:3.0.0\n    ports:\n        - \"6379:6379\"\n    expose:\n        - \"6379\"\n. @solidnerd Thanks for your work on this, much appreciated. I assume that after merging this it's also easier to upgrade to 8.17.3, right? Any plans in this regard (and maybe even for 9.0)?\n. @solidnerd No no, I was just wondering because 8.17.0 took a little longer. I see you already released 8.17.3 now. Thanks!. > And so you could even set the domain name of the registry as the same as the gitlab domain (gitlab.example.com) if you handle correctly the request in your proxy (for example by detecting ^/v2 in the request, or/and the docker user-agent string).\n@xxorax I also use my custom nginx proxy. Could you help me clarify two things?\n\nYou say if the same domain is used it should detect ^/v2 or something. But can't this be avoided by using a different public end port for the registry (using a dedicated server{ } block in nginx)?\nI'm still confused about REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE and GITLAB_REGISTRY_KEY_PATH. What domain name is this certificate for? And why is this needed at all if we use our own Nginx?. Ok, I've managed it.\n\n@solidnerd I think, the manual is missing a clear example for how to set up the registry if you already have a Nginx as reverse proxy. How about adding the following to the documenation:\nSetting up the Registry with Your Own Secured Nginx\nIf you already have a Nginx server as reverse proxy and manage your own certififcates there (e.g. with Letsencrypt) the setup can be simplified.\nWe assume the following URLs for your Gitlab installation and your registry respectively:\n\ngit.example.com\nregistry.example.com\n\n1. Create auth tokens\nThe details entered during the creation process (domain name, etc.) are irrelevant:\nmkdir certs\ncd certs\nopenssl req -new -newkey rsa:4096 > registry.csr\nopenssl rsa -in privkey.pem -out registry.key\nopenssl x509 -in registry.csr -out registry.crt -req -signkey registry.key -days 10000\n2. Update docker-compose.yml\nFirst add the configuration for the registry container to your docker-compose.yml.\nyaml\n    registry:\n        image: registry:2.6.2\n        restart: unless-stopped\n        expose:\n            - \"5000\"\n        ports:\n            - \"5000:5000\"\n        volumes:\n            - ./gitlab/shared/registry:/registry\n            - ./certs:/certs\n        environment:\n            - REGISTRY_LOG_LEVEL=info\n            - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n            - REGISTRY_AUTH_TOKEN_REALM=https://git.example.de/jwt/auth\n            - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n            - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n            - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/registry.crt\n            - REGISTRY_STORAGE_DELETE_ENABLED=true\nThen update the volumes and environment sections of your gitlab container:\n```yaml\n    gitlab:\n        environment:\n            # ...\n            # Registry\n            - GITLAB_REGISTRY_ENABLED=true\n            - GITLAB_REGISTRY_HOST=registry.example.de\n            - GITLAB_REGISTRY_PORT=443\n            - GITLAB_REGISTRY_API_URL=http://registry:5000\n            - GITLAB_REGISTRY_KEY_PATH=/certs/registry.key\n    volumes:\n        - ./gitlab:/home/git/data\n        - ./certs:/certs\n\n```\n3. Nginx site configuration\n```nginx\nserver {\n    root /dev/null;\n    server_name registry.example.de;\n    charset UTF-8;\n    access_log /var/log/nginx/registry.example.de.access.log;\n    error_log /var/log/nginx/registry.example.de.error.log;\n# Set up SSL only connections:\nlisten *:443 ssl http2;\nssl_certificate             /etc/letsencrypt/live/registry.example.de/fullchain.pem;\nssl_certificate_key         /etc/letsencrypt/live/registry.example.de/privkey.pem;\n\nssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4';\nssl_protocols  TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;\nssl_session_cache  builtin:1000  shared:SSL:10m;\nssl_session_timeout  5m;\n\nclient_max_body_size        0;\nchunked_transfer_encoding   on;\n\nlocation / {\n    proxy_set_header  Host              $http_host;   # required for docker client's sake\n    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP\n    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;\n    proxy_set_header  X-Forwarded-Proto $scheme;\n    proxy_read_timeout                  900;\n    proxy_pass          http://localhost:5000;\n}\n\n}\nserver {\n    listen *:80;\n    server_name  registry.example.com;\n    server_tokens off; ## Don't show the nginx version number, a security best practice\n    return 301 https://$http_host:$request_uri;\n}\n```. Thanks guys!\nOne thing: I've just updated from 8.16.3 to 9.0.0. Everything looks good so far but during the upgrade there was a warning:\n\nMissing Rails.application.secrets.jws_private_key for production environment. The secret will be generated and stored in config/secrets.yml\n\nCan this be ignored?. Same for me, the fix only helped for some time. But now it's slow again :cry:.\nAny ideas how to reliably fix this in newer releases? . Seriously? This is so hard to believe as our Gitlab installation is really rather small (some hundred issues with a couple of users and groups).\nIs there no way to limit this again? Everything really worked well some releases ago. And I can't see any new feature that would justify such an increase in RAM required.. @chaosversum Oh, right, thanks. Didn't consider to increase the max setting even further. It seems to improve the situation.. I'm on 10.3.0 now and things are incredibly slow again :(. This time I can't see any entries in unicorn.stderr.log. So any further ideas?. @solidnerd I've fixed Gitlab to GitLab everywhere and also rebased the changes to master to fix a merge conflict due to 10.1.2 upgrade.\nLet me know if there's more that should be changed.. I'd say, this issue is a duplicate of #1347. Have you tried the suggested workaround there? It works quite well for me.. Sorry, misread it. I only read \"memory\" and thought you suffer from the same problem. . @maltzsama Hmm, thanks. But my gitlab user in MySQL already has all privileges for the gitlab database:\nSHOW GRANTS for gitlab;\nResult:\nGRANT USAGE ON *.* TO 'gitlab'@'%'\nGRANT ALL PRIVILEGES ON `gitlab`.* TO 'gitlab'@'%'\nAnything else I could try?. Ok, I think I found something. It seems that ALL PRIVILEGES is not enough to create triggers in MySQL in some configurations. The user either needs SUPER privileges or you have to set log_bin_trust_function_creators = 1. \nGitLab also has this note in their upgrade guide:\nhttps://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/update/10.3-to-10.4.md#10-update-mysql-permissions\nI will try to set log_bin_trust_function_creators = 1 later and report back if this helped.\n\nSidenote: It's weird that the GitLab guys have the same upgrade instructions over and over again. E.g. the note above is from 10.3 -> 10.4 but it's also contained in 10.2 -> 10.3 and older upgrade guides. Why all that noise? One of the reasons why I like sameer's image so much. ;). I don't think, my problem is related to permissions as my error looks a little different.\n\nI've created an issue with GitLab as I now have even more problems: I can't even create a backup with 10.3.2 anymore.\nhttps://gitlab.com/gitlab-org/gitlab-ce/issues/42590. I've done an intermediate upgrade to 10.3.6. Now at least backups work again.\nUpgrading to 10.4.2 still fails with the same error. I've also tried to set log_bin_trust_function_creators but to no avail.. I've also added the MySQL query log to the Gitlab issue above. But it seems, they are not interested in fixing MySQL related bugs, so I repeat it here. Maybe someone has an idea. The last query is issued twice, maybe that's a sign.\nI found some pages that mention reaping_frequency as possible cause. But this is already disabled in GitLab for some time now AFAIK. So it's probably something else.\n2018-01-31T14:36:40.130682Z  345 Connect        gitlab@192.168.0.8 on gitlab using TCP/IP\n2018-01-31T14:36:40.142067Z  345 Query  SET NAMES utf8 COLLATE utf8_general_ci,  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_ti\nmeout = 2147483, @@SESSION.sql_mode = 'STRICT_ALL_TABLES'\n2018-01-31T14:36:40.145440Z  345 Query  SHOW TABLES LIKE 'application_settings'\n2018-01-31T14:36:40.149082Z  345 Query  SHOW FULL FIELDS FROM `application_settings`\n2018-01-31T14:36:40.172786Z  345 Query  SHOW TABLES\n2018-01-31T14:36:40.174938Z  345 Query  SHOW CREATE TABLE `application_settings`\n2018-01-31T14:36:40.308565Z  345 Query  SELECT  `application_settings`.* FROM `application_settings`  ORDER BY `application_settin\ngs`.`id` DESC LIMIT 1\n2018-01-31T14:36:40.328810Z  345 Query  SELECT  `application_settings`.* FROM `application_settings`  ORDER BY `application_settin\ngs`.`id` DESC LIMIT 1. I wonder if it could have to do with the upgrade to Ubuntu Xenial as base image since 10.4.0. Maybe some Ruby related stuff fundamentally changed there?\nhttps://github.com/sameersbn/docker-gitlab/blob/master/Changelog.md\n@solidnerd Do you maybe have an idea what could cause the issues we have?. @ld0574 I wonder if it has to do with MySQL version. Which one do you have? Mine is 5.7.11.. @ld0574 Wow, this seems to indeed have fixed it. Thanks! I'm on 10.5.1 now. Without this change, the upgrade still failed.\nBut it makes absolutely no sense to me. I've increased the max_connections from default 100 to 500. I've checked the number of connections before and after with show status like '%onn%';. The Max_used_connections is somewhere in the <10 range. So how could this possibly be the problem?. Has anyone tried the latest 11.0.1? Gitlab now does not work at all anymore for me. I get similar errors like above. See #1652. Does anyone else have this?\n. @josefglatz Did you follow the documentation here? This worked fine for me.\nhttps://github.com/sameersbn/docker-gitlab/blob/master/docs/container_registry.md#setup-with-nginx-as-reverse-proxy. > Do I have to run GitLab and Registry on one/the same server?\nI haven't tried anything else. It could also work on different servers as long as the containers have a network connection.\nRegarding the other questions: I don't know. Why don't you just try it out? The setup only takes some minutes.. Shouldn't this rather be in the Dockerfile at the end of the block where all the packages are installed? Because each single command in there will create a file layer that will always consume the same space. Thus removing stuff in a later commands doesn't reduce the image size.. Don't know if it's the same issue but I  had a problem with backups in 10.3.2. So I first upgraded to 10.3.6 which made backups work again.. Ok, I have the same problem even on 10.5.1 now. This somehow feels related to #1492. Here's my summary so far:\n\neverything worked fine for all older releases (< 10.3.x ?)\nsince some 10.3.x version there are unexplainable connection errors\nthe workaround with increasing max_connections seems to partly have solved the problem for MySQL, at least for applying migrations\nthe problem is not restricted to MySQL as @guilhermesteinmuller is using postgres. Just tried with 10.5.6 and the backup also fails there. So for me the backup is broken in all newer versions except for 10.3.6 where it worked once (but this might also be some coincidental side condition).. Ok, there's more in production.log. This message sounds weird:\n\nMysql2::Error (Unknown MySQL server host 'mysql' (0)):\n  lib/gitlab/request_context.rb:18:in `call'\n  lib/gitlab/metrics/requests_rack_middleware.rb:27:in `call'\n  lib/gitlab/middleware/release_env.rb:10:in `call'\nmysql is the hostname I've used with all previous versions for my mysql docker container. I can ping that host from inside the gitlab container. So which service is complaining here and why?\n. I've configured the IP address of my mysql container, now the error changes, but it still does not work. \nMysql2::Error (Can't connect to MySQL server on '192.168.0.6' (111)):\n  lib/gitlab/request_context.rb:18:in `call'\n  lib/gitlab/metrics/requests_rack_middleware.rb:27:in `call'\n  lib/gitlab/middleware/release_env.rb:10:in `call'\n. > You wrote that you can ping the mysql, but does a mysql connect from the gitlab container work?\n@handcode I'm very sure. The exact same setup runs fine with any other version of gitlab. And I even think, it executes some command on the DB before the error happens.. Meanwhile I've tried to make the setup run locally for a test. There it works, so it really seems to be somehow related to the infrastructure.\nThe big question that remains: Why do some versions of Gitlab work just fine, while others don't?. MySQL config is fine. The connection limit there is increased to 1000 (which is much higher then the max connection count). There are also other apps using the same DB container - they all run fine.\nIt's only some specific versions of Gitlab that have this problem.. UPDATE: Ignore this comment. It was an issue with MySQL itself. I also got a 2013 error when executing the SQL command on the mysql CLI client. I've exported the whole db and re-imported into a fresh DB. Now it works again.\n\n@sameersbn When running the command it says, that the DB is already upgrade.\nFor me the problem is back with 11.4.7 :(. I've meanwhile migrated everything to a new server. It all went fine for a while but after the upgrade now I can't access the admin section anymore. \nI see these errors logged:\nproduction_json_log\njson\n{\"method\":\"GET\",\"path\":\"/admin\",\"format\":\"html\",\"controller\":\"Admin::DashboardController\",\"action\":\"index\",\"status\":500,\"error\":\"ActiveRecord::StatementInvalid: Mysql2::Error: Lost connection to MySQL server during query: SELECT COUNT(*) FROM `notes`\",\"duration\":137.88,\"view\":0.0,\"db\":120.23,\"time\":\"2018-11-25T15:17:37.233Z\",\"params\":[],\"remote_ip\":\"***.***.***.***\",\"user_id\":1,\"username\":\"mike\",\"ua\":\"Mozilla/5.0 (X11;\nLinux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36\"}\nproduction.log\nMysql2::Error (Can't connect to MySQL server on 'mysql' (111)):\n  lib/gitlab/middleware/basic_health_check.rb:25:in `call'\n  lib/gitlab/request_context.rb:18:in `call'\n  lib/gitlab/metrics/requests_rack_middleware.rb:27:in `call'\n  lib/gitlab/middleware/release_env.rb:10:in `call'\nAccording to this comment the problem goes aways if we downgrade from libmysqlclient20 to libmysqlclient18: https://github.com/brianmario/mysql2/issues/938#issuecomment-425960156\nI was not able to verify this as when I manually installed the libmysqlclient18, the mysql connection did not work anymore. I may have missed something, though. \n@solidnerd Would it be an option to downgrade to limbysqlclient18 in the image? . @solidnerd I see that the latest tag was rebuilt successfully yesterday. Could you also trigger build for 11.4.7 again? I like to use fixed tag versions in my setup and so far 11.4.7 is stil missing.. Cool, thanks! Just upgraded to 11.4.7 and it worked fine.. @solidnerd Added it back in.. @drubin I think at least the crucial parts of the Nginx configuration should remain. E.g. which proxy_set_header you should have and the proxy_pass.\nI've actually added the full config to leave no questions about how the setup works. So I'd say, we should keep all of it.. If you remove those, then we should also remove the sentence \"Here is an example of all configuration parameters ...\". They are no longer here. But I agree that those could probably be removed.. Not sure what you mean here:\n\nWe assume that you already have Nginx installed on your system\n\nYes, Nginx is installed. And it may already be configured for the GitLab site (without the registry). But not the registry. That's why I included the configuration that you have to add to your existing Nginx installation.\nMaybe we could change that sentence to:\n\nWe assume that you already have Nginx installed and use it as reverse proxy for GitLab. We add another site configuration for the Container registry.. \n",
    "lenovouser": "@sameersbn I have the GITLAB_RELATIVE_URL_ROOT= in my docker-compose.yml but it is empty, exactly like I posted it. I think that I should be able to upgrade without problems?\n. @sameersbn I have the GITLAB_RELATIVE_URL_ROOT= in my docker-compose.yml but it is empty, exactly like I posted it. I think that I should be able to upgrade without problems?\n. @sameersbn opened a issue for this at gitlab:gitlab-org/gitlab-ce/issues#13305 because I need this too.\n. @sameersbn opened a issue for this at gitlab:gitlab-org/gitlab-ce/issues#13305 because I need this too.\n. New Relic tracking has been removed from the GitLab source code IIRC\n. New Relic tracking has been removed from the GitLab source code IIRC\n. :+1: \n. :+1: \n. This is a duplicate of #374 and currently not supported by GitLab. I have created an issue for that here.\n. This is a duplicate of #374 and currently not supported by GitLab. I have created an issue for that here.\n. Duplicate of #662\n. Duplicate of #662\n. Duplicate of #662 \n. Duplicate of #662 \n. @sameersbn v8.8.2 has been released by the way. So this should be good to merge, right?\n. @sameersbn v8.8.2 has been released by the way. So this should be good to merge, right?\n. @SolidNerd any idea on how to fix the admin account 500 bug? I really want to use the Container Registry :3\n. @SolidNerd any idea on how to fix the admin account 500 bug? I really want to use the Container Registry :3\n. I would rather see you guys including the registry now so that people who really want to use it can do so - and work on refining the image and documentation later. I've been hogging this issue for the past days because I really want to use the registry :smile: \nAlso, AFAIK is the whole certificate stuff for the registry unnecessary - since you proxy it with NGINX anyway like you do it with GitLab too.\n. I would rather see you guys including the registry now so that people who really want to use it can do so - and work on refining the image and documentation later. I've been hogging this issue for the past days because I really want to use the registry :smile: \nAlso, AFAIK is the whole certificate stuff for the registry unnecessary - since you proxy it with NGINX anyway like you do it with GitLab too.\n. @SolidNerd any progress?\n. @SolidNerd any progress?\n. @SolidNerd any ETA on when this will be released with an option to upgrade existing installations with it?\n. @SolidNerd any ETA on when this will be released with an option to upgrade existing installations with it?\n. @ostueker yep, it is because every user on the system could write in it\n. @ostueker yep, it is because every user on the system could write in it\n. Nevermind. Completely missed #748\n. Nevermind. Completely missed #748\n. I am actually for removing it from the image as I proxy it with another container too. I also think that most people do the same.\n. I am actually for removing it from the image as I proxy it with another container too. I also think that most people do the same.\n. Do you want to release this with the 8.10 release coming today, or release that one first and then add this?\n. Do you want to release this with the 8.10 release coming today, or release that one first and then add this?\n. I second @rugdealer . I second @rugdealer . Oh man. I knew I missed such a simple thing \ud83d\ude21 If you spend 5+ hours trying to find the issue your head kind of gets messed up I guess. Thanks so much @SolidNerd!\n. Awesome!\n. This tag should not be released. From gitlab.com/gitlab-8.12.3-released:\n\nVersion 8.12.3 contains some security fixes for GitLab, plus fixes for minor regressions. Version 8.11.8, 8.10.11, and 8.9.11 only contain the security fixes.\nIf you're wondering what happened to 8.12.2, good eye! That version was accidentally packaged without including some fixes for the CE version.\n. This tag should not be released. From gitlab.com/gitlab-8.12.3-released:\nVersion 8.12.3 contains some security fixes for GitLab, plus fixes for minor regressions. Version 8.11.8, 8.10.11, and 8.9.11 only contain the security fixes.\nIf you're wondering what happened to 8.12.2, good eye! That version was accidentally packaged without including some fixes for the CE version.\n. Seems like a good feature to me \ud83d\udc4d \n. Seems like a good feature to me \ud83d\udc4d \n. Yep, should be done for the SSL part too IMO\n. Yep, should be done for the SSL part too IMO\n. Or even the day after tomorrow?. Or even the day after tomorrow?. @globalcitizen I saw your comment on HN. I am pretty sure this is not a issue with the container / image. Do you mind sharing your environment variables or the docker-compose.yml that you're using? Also what e-mail provider are you using? If you're self hosting your e-mail what does:\n\nsh\ndocker exec -it gitlab bash\nping <email server hostname>\ntelnet <email server hostname> <port>\ndo?. @globalcitizen I saw your comment on HN. I am pretty sure this is not a issue with the container / image. Do you mind sharing your environment variables or the docker-compose.yml that you're using? Also what e-mail provider are you using? If you're self hosting your e-mail what does:\nsh\ndocker exec -it gitlab bash\nping <email server hostname>\ntelnet <email server hostname> <port>\ndo?. What I meant is if you can ping the e-mail server from the container? If yes, what is the output?. @sameersbn I think they just don't update the documentation every time a new version of Go comes out. Doesn't seem like a suggestion to me.\nAlso @jostyee - you replaced sameersbn with jostyee everywhere in your commit \ud83d\ude03 . Yep, would really like to see this too :). gitlab.com/gitlab-org/gitlab-ce/compare/v8.15.4...8.16.0#config/gitlab.yml.example. Had no issues with PostgreSQL, seems to be a MySQL problem. can this be merged?. @phenomax v9.5.1 has been released and tagged - we can create the next pull request after this one has been merged. @nixel2007 nope, don't think so. They all have default values and there are only necessary variables in the docker-compose.yml so far.. @solidnerd Thanks, I just noticed that 1333 is also the better number \ud83d\ude04 . @solidnerd @sameersbn can you merge this and #1516 / v10.4.4. Duplicate of #1453. PR implementing it #1026. @solidnerd can this be merged?. @solidnerd . No worries, my guess actually was that you were on vacation \ud83d\ude06 - can you merge v11.0.3 too? (#1661)\nWe could maybe ask @sameersbn to add 1-2 more collaborators to ensure a smoother workflow in the future?. Typo\ndiff\n+Default\n-Defaults\nor\ndiff\n+to\n-is\n. Typo\ndiff\n+Defaults\n-Defautls\n. Typo\ndiff\n+API\n-Api\n. Typo:\ndiff\n-ActionMailer::Base.default_delivery = :stmp\n+ActionMailer::Base.default_delivery = :smtp\n:)\n. I don't think we can remove the whole key - I don't see this be done anywhere in the .yml. ",
    "M0E-lnx": "I'm also waiting on the fix for relative root for 8.6.0.  Managed to get past the DB_EXTENSION by exec-ing into the postgresdb container, but still can't use it because of the relative root problem.\n. There used to be a 32-bit version on dockerhub (pyro225/gitlab-32bit), but that has not been updated for a long time.  I managed to backport your setup into a 32-bit image and it is working quite well (aside from the issue when running behind the nginx proxy (described in #665 )).  \nDockerhub will just build it as usual, given the image referenced in the FROM directive exists. (see m0elnx/gitlab-32bit)\nI'm not sure if docker is officially supported on 32-bit, but i've been using it (and updating it) for a couple of years now and it has yet to fail me.  My hardware is limited to 32-bit, so 64-bit is not an option for me there.\n. No, subdomain is not an option... Would removing the GITLAB_RELATIVE_ROOT setting work?\n. @sameersbn \nTried following your example, the only diff is my GITLAB_RELATIVE_URL_ROOT is 'git', not 'gitlab'.  I adjusted the vhost config file accordingly, but now I get a 404 when I visit the /git/ location.\nHere is my adjusted vhost config file (called gitlab.conf) \n``` nginx\nupstream app {\n    server 172.17.0.1:10080 fail_timeout=0;\n    }\n\nserver {\n  listen 80;\n  server_name www.example.com\n  server_tokens off;\naccess_log /var/log/nginx/app_access.log;\n  error_log /var/log/nginx/app_error.log;\nroot /dev/null;\n  client_max_body_size 0;\nlocation /git {\n    proxy_read_timeout 300;\n    proxy_connect_timeout 300;\n    proxy_redirect off;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header X-Frame-Options SAMEORIGIN;\n    proxy_pass http://app;\n  }\n}\n```\nThis file is in the 'sites-enabled' directory, for nginx.  Do you have anything else in your main nginx.conf that may compliment this setup?\n. UPDATE:\nI was able to resolve this issue by adding a /git/ location to my main vhost config instead of splitting it off to a separate config file.  It's working rather nicely now.\n. I'm connected to the internet... any idea where to start looking?\n. I just upgraded my docker to 1.11.2 and I get the exact same error as before.\n. @SolidNerd I get the exact same results builiding with docker build --no-cache\n. Seems I cannot ping it.  It hangs for a while, then after I CTRL+C it prints\n```\nPING rubygems.org (54.186.104.15): 56 data bytes\n^C\n--- rubygems.org ping statistics ---\n4 packets transmitted, 0 packets received, 100% packet loss\n```\nPinging other sites works btw\n. Same result... hangs and I have to CTRL+C.  100% packet loss\n. Here is my printout from docker info\n```\nContainers: 10\n Running: 4\n Paused: 0\n Stopped: 6\nImages: 156\nServer Version: 1.11.2\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 145\n Dirperm1 Supported: true\nLogging Driver: json-file\nCgroup Driver: cgroupfs\nPlugins: \n Volume: local\n Network: null host bridge\nKernel Version: 3.18.20\nOperating System: \nOSType: linux\nArchitecture: x86_64\nCPUs: 2\nTotal Memory: 1.936 GiB\nName: vlocity.linux.vnet\nID: YAX2:2YKM:NSSF:E2LJ:5EGD:C4EY:2KJE:ZN3X:TEET:6O2I:NXND:7IAP\nDocker Root Dir: /var/lib/docker\nDebug mode (client): false\nDebug mode (server): false\nUsername: m0elnx\nRegistry: https://index.docker.io/v1/\n```\n. @splattael, does the docker build command expect me to have a running redis or is this something else?\n. @SolidNerd \nYes.  I spotted the line that raises the error and I just added a redirect there to have it log the output so I could post it here (initial post).\nMy build command is exactly like yours, except my tag is diff.\ndocker build -t \"gitlab:new\" . is what I'm using.\nThat is at the root of the docker-gitlab directory where the Dockerfile exists.\n. I have tried a fresh clone of the repo... several times... that's what i'm working with\n. @SolidNerd and @sameersbn \nFWIW, if I edit the Dockerfile and change the gitlab version to 8.8.2 it builds fine... but anything newer than 8.8.2 gets me this error as described above.\n. @sameersbn I just tried that and got the exact same error.\n. Restarted docker daemon... retried... same result\nStopped docker... rebooted box.....restarted docker ... retried ... same result.\n:crying_cat_face:\n. Is there nothing else to try on this?  my docker works for everything else... why would this be the exception?\nWhen I first read Errno::EAFNOSUPPORT: Address family not supported by protocol - socket(2) it made me think it's trying to connect to something.  But this is happening after all the gems are installed\n. Thank you @SolidNerd and all who chimed in here.  It turns this is an upstream issue which should be getting resolved soon.\nhttps://gitlab.com/gitlab-org/gitlab-ce/issues/17557#note_12724919\nI patched the code with what they provided there and it fixed it for me.  I will now close this issue here.\n. ",
    "djskinner": "\nPostgreSQL users should also note that GitLab 8.6.0 requires that pg_trgm extension is loaded for the gitlab database. If you are using the sameersbn/postgresql image then please upgrade to sameersbn/postgresql:9.4-17 and add DB_EXTENSION=pg_trgm to the env of the postgresql container\n\nThis worked for me. I think it would be worthwhile adding this to the upgrade notes.\n. I'm trying to make use of a Rancher load balancer so this could be the issue. I'll try and create an alternative setup using nginx and get back to you.\n. I've just asked in the forums and apparently the Rancher Load Balancer does set these headers (http://forums.rancher.com/t/load-balancer-set-headers/1048/4)\n. Let's take the load balance out of the equation. Even if I add the Header I'm still getting connection refused:\n```\nroot@gitlab:/home/git/gitlab# curl --header \"X-Forwared-Proto https\" https://localhost                                                                        \ncurl: (7) Failed to connect to localhost port 443: Connection refused\nroot@gitlab:/home/git/gitlab# curl --header \"X-Forwared-Proto https\" https://localhost:80                                                                     \ncurl: (35) error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol\n``\n. Thanks for taking the time to explain this to me. I had read the documents but clearly didn't fully understand. I now have my load balancer running on 443 with HTTPS enabled. The load balancer forwards to port 80.GITLAB_HTTPS=trueandGITLAB_PORT=80and everything is now working as expected. Thanks again!\n. Not entirely. I changedGITLAB_PORTto443which makes sense and now gitlab is being served over HTTP. I also opened up HTTP port 80 on the load balancer and requests are successfully being redirected to port 80. However, I am constantly redirected to the login page every time I try to navigate. For example, hit the home page, login and I am shown the dashboard. Then if I click say the Activity page I'm just redirected back to the login page again.\n. Many of the project avatar images are also broken because the links look like this. The clone URLs look absolutely fine now that I changedGITLAB_PORT=443`. It's just having to login every time I navigate and some (but not all) of the images trying to load from http rather than https.\n. Removing the env variable also works (with the exception of the missing images and constant redirects to the login screen). Interestingly navigations which use XHR are not affected and the profile images are not always served from the wrong URL. For example on a group home page the project avatar images aren't being served properly but if I go into a project that has a broken avatar the image is actually displaying fine on the project home page itself.\n. Removing and re-adding all the avatar images seems to have fixed them having the wrong (http) URL on the dashboard, which also appears to have fixed the constant redirecting to the login screen. Perhaps it was something to do with HTTP content being served on an HTTPS page?\n. For anyone else who comes across this, here is my working setup.\nI've got the docker-gitlab stack up and running over SSL in a Rancher environment using a standard Rancher load balancer.\ndocker-gitlab is simply configured with GITLAB_HTTPS=true \nThe Load Balancer is configured as follows:\nPublic Port 443 -> use SSL -> forwards to port 80 on docker-gitlab\nPublic Port 80 -> forwards to port 80 on docker-gitlab\nOpening 80 allows gitlab to redirect HTTP users to HTTPS. If you have any issues with avatar images not displaying and being served over HTTP you will need to remove and re-upload each avatar image.\nThanks to everyone who was so quick to respond and help.\n. ",
    "solidnerd": "2016-08-23\nWe released sameersbn/gitlab:8.11.0 this has some important changes. It's now required to set the following environment variables. GITLAB_SECRETS_OTP_KEY_BASE and GITLAB_SECRETS_SECRET_KEY_BASE. We recommend that these environment variables should have a string length of 64 characters. Please backup these keys. They will be needed for encryption like GITLAB_SECRETS_DB_KEY_BASE. We hope that you enjoy this.\n. @vabue app:sanitize is not a rake command. It's only available via the entrypoint.sh for this\nyou can use docker-compose run --rm gitlab /sbin/entrypoint.sh app:sanitize. @andypost Thanks for your Info. I will have a look into it on this Weekend. I think it's good way to use alpine because all official images on Docker Hub will use alpine. This needs to be tested on a long term or we provide 2 images. I have to do some stuff before I start.\n. I don't want to switch directly to alpine. In my opinion we should test it first and see how it works. We could support two Dockerfiles one for alpine and one for your base image. But first let see how it works. So suck it and see \ud83d\ude04 . I couldn't make it to do it this weekend I will test it this week.\n. In my opinion we can close this. It is official droped by GitLab because they use Influx DB for metrics.  Have at look this issue .\n. I will close this because GitLab dropped New Relic.\n. In my opinion we can close this, because we got #794 . And you don't need to communictae with nginx you can communicate with gitlab workhorse over 8181 that is possible since #793 .\n. I will close this now because we got #794 and a schedule for it.\n. @johnsudaar  Which Version do you use ? It could be fixed in the upstream with 8.9.6 or 8.10 but 8.10  will be released today / tomorrow .\n. @johnsudaar  Which Version do you use ? It could be fixed in the upstream with 8.9.6 or 8.10 but 8.10  will be released today / tomorrow .\n. I will close this. This isn't needed anymore.. I will close this. This isn't needed anymore.. Hey @MarZab, it seems so koding will be in 8.11.0 available.  So far I can't say anything to it because currently it will have no impact on the image so far. There is a MR  in the upstream for that. I would say we need to wait until the first rc is coming out and than we can say how much stuff need to be done for this integration.\n. Hey @MarZab, it seems so koding will be in 8.11.0 available.  So far I can't say anything to it because currently it will have no impact on the image so far. There is a MR  in the upstream for that. I would say we need to wait until the first rc is coming out and than we can say how much stuff need to be done for this integration.\n. I will close this because #658 is merged and #661 is closed as well.\n. I will close this because #658 is merged and #661 is closed as well.\n. I tested it out and it didn't works for me. In my opion i would remove the container links and replace it with a network.\n```\nversion: '2'\nservices:\n  postgresql:\n    restart: always\n    image: sameersbn/postgresql:9.4-14\n    environment:\n      - DB_USER=gitlab\n      - DB_PASS=password\n      - DB_NAME=\n    networks:\n      - db_backend\n    volumes:\n      - /srv/docker/gitlab/postgresql:/var/lib/postgresql\n  gitlab:\n    restart: always\n    image: sameersbn/gitlab:8.5.5\n    networks:\n      - db_backend\n    ports:\n      - \"10080:80\"\n      - \"10022:22\"\n    environment:\n      - DB_HOST=postgresql\n      - DB_ADAPTER=postgresql\n      - DB_PORT=5432\n      - DB_USER=gitlab\n      - DB_PASS=password\n      - DB_NAME=gitlabhq_production\n  - REDIS_HOST=redis\n  - REDIS_PORT=6379\n\n  - DEBUG=false\n  - TZ=Asia/Kolkata\n  - GITLAB_TIMEZONE=Kolkata\n\n  - GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string\n\n  - GITLAB_HOST=localhost\n  - GITLAB_PORT=10080\n  - GITLAB_SSH_PORT=10022\n  - GITLAB_RELATIVE_URL_ROOT=\n\n  - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n  - GITLAB_NOTIFY_PUSHER=false\n\n  - GITLAB_EMAIL=notifications@example.com\n  - GITLAB_EMAIL_REPLY_TO=noreply@example.com\n  - GITLAB_INCOMING_EMAIL_ADDRESS=reply@example.com\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n\n  - SMTP_ENABLED=false\n  - SMTP_DOMAIN=www.example.com\n  - SMTP_HOST=smtp.gmail.com\n  - SMTP_PORT=587\n  - SMTP_USER=mailer@example.com\n  - SMTP_PASS=password\n  - SMTP_STARTTLS=true\n  - SMTP_AUTHENTICATION=login\n\n  - IMAP_ENABLED=false\n  - IMAP_HOST=imap.gmail.com\n  - IMAP_PORT=993\n  - IMAP_USER=mailer@example.com\n  - IMAP_PASS=password\n  - IMAP_SSL=true\n  - IMAP_STARTTLS=false\nvolumes:\n  - /srv/docker/gitlab/gitlab:/home/git/data\n\nredis:\n    restart: always\n    image: sameersbn/redis:latest\n    volumes:\n      - /srv/docker/gitlab/redis:/var/lib/redis\n    networks:\n      - db_backend\nnetworks:\n  db_backend:\n```\nI tried it but the gitlab container hangs on gitlab:configuring. I don't know why. I hope it can helps you.\n. I tested it out and it didn't works for me. In my opion i would remove the container links and replace it with a network.\n```\nversion: '2'\nservices:\n  postgresql:\n    restart: always\n    image: sameersbn/postgresql:9.4-14\n    environment:\n      - DB_USER=gitlab\n      - DB_PASS=password\n      - DB_NAME=\n    networks:\n      - db_backend\n    volumes:\n      - /srv/docker/gitlab/postgresql:/var/lib/postgresql\n  gitlab:\n    restart: always\n    image: sameersbn/gitlab:8.5.5\n    networks:\n      - db_backend\n    ports:\n      - \"10080:80\"\n      - \"10022:22\"\n    environment:\n      - DB_HOST=postgresql\n      - DB_ADAPTER=postgresql\n      - DB_PORT=5432\n      - DB_USER=gitlab\n      - DB_PASS=password\n      - DB_NAME=gitlabhq_production\n  - REDIS_HOST=redis\n  - REDIS_PORT=6379\n\n  - DEBUG=false\n  - TZ=Asia/Kolkata\n  - GITLAB_TIMEZONE=Kolkata\n\n  - GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string\n\n  - GITLAB_HOST=localhost\n  - GITLAB_PORT=10080\n  - GITLAB_SSH_PORT=10022\n  - GITLAB_RELATIVE_URL_ROOT=\n\n  - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n  - GITLAB_NOTIFY_PUSHER=false\n\n  - GITLAB_EMAIL=notifications@example.com\n  - GITLAB_EMAIL_REPLY_TO=noreply@example.com\n  - GITLAB_INCOMING_EMAIL_ADDRESS=reply@example.com\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n\n  - SMTP_ENABLED=false\n  - SMTP_DOMAIN=www.example.com\n  - SMTP_HOST=smtp.gmail.com\n  - SMTP_PORT=587\n  - SMTP_USER=mailer@example.com\n  - SMTP_PASS=password\n  - SMTP_STARTTLS=true\n  - SMTP_AUTHENTICATION=login\n\n  - IMAP_ENABLED=false\n  - IMAP_HOST=imap.gmail.com\n  - IMAP_PORT=993\n  - IMAP_USER=mailer@example.com\n  - IMAP_PASS=password\n  - IMAP_SSL=true\n  - IMAP_STARTTLS=false\nvolumes:\n  - /srv/docker/gitlab/gitlab:/home/git/data\n\nredis:\n    restart: always\n    image: sameersbn/redis:latest\n    volumes:\n      - /srv/docker/gitlab/redis:/var/lib/redis\n    networks:\n      - db_backend\nnetworks:\n  db_backend:\n```\nI tried it but the gitlab container hangs on gitlab:configuring. I don't know why. I hope it can helps you.\n. This a closed PR. But you can have a look at an ongoing PR for that  #1095 .. Done. Have a look at :\n- gitlab-registry\n- gitlab-ssl\n. Done. Have a look at :\n- gitlab-registry\n- gitlab-ssl\n. @binarytemple-bet365 Feel free to create an PR for that ;) . . @binarytemple-bet365 Feel free to create an PR for that ;) . . I will test it later\n. I will test it later\n. @18601673727 Your Proxy Configuration is wrong if want to join a network that exists. In your case \"nginx-proxy\". I corrected your network configuration and should look like this: \nnetworks:\n  nginx-proxy:\n    external: true\n  gitlab-tier:\n    driver: bridge\nI hope it helps.\n. @18601673727 Your Proxy Configuration is wrong if want to join a network that exists. In your case \"nginx-proxy\". I corrected your network configuration and should look like this: \nnetworks:\n  nginx-proxy:\n    external: true\n  gitlab-tier:\n    driver: bridge\nI hope it helps.\n. @18601673727 Here is my compose file: \n```\nversion: '2'\nservices:\n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    networks:\n    - gitlab_backend\n    volumes:\n    - /srv/gitlab/redis:/var/lib/redis\npostgresql:\n    restart: always\n    image: sameersbn/postgresql:latest\n    networks:\n    - gitlab_backend\n    volumes:\n    - /srv/gitlab/postgresql:/var/lib/postgresql\n    env_file:\n    - gitlab_postgresql.env\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:8.6.4\n    networks:\n    - gitlab_backend\n    - nginx\n    volumes:\n    - /srv/gitlab/gitlab:/home/git/data\n    ports:\n    - \"22:22\"\n    depends_on:\n    - redis\n    - postgresql\n    env_file:\n    - gitlab.env\nnetworks:\n  gitlab_backend:\n  nginx:\n    external: true\n```\n. @18601673727 Here is my compose file: \n```\nversion: '2'\nservices:\n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    networks:\n    - gitlab_backend\n    volumes:\n    - /srv/gitlab/redis:/var/lib/redis\npostgresql:\n    restart: always\n    image: sameersbn/postgresql:latest\n    networks:\n    - gitlab_backend\n    volumes:\n    - /srv/gitlab/postgresql:/var/lib/postgresql\n    env_file:\n    - gitlab_postgresql.env\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:8.6.4\n    networks:\n    - gitlab_backend\n    - nginx\n    volumes:\n    - /srv/gitlab/gitlab:/home/git/data\n    ports:\n    - \"22:22\"\n    depends_on:\n    - redis\n    - postgresql\n    env_file:\n    - gitlab.env\nnetworks:\n  gitlab_backend:\n  nginx:\n    external: true\n```\n. One last thing would be rebasing against master to fetch the latest updates.\n. One last thing would be rebasing against master to fetch the latest updates.\n. @18601673727 You are right it's already perfect. \n. @18601673727 You are right it's already perfect. \n. This would possible if you use a volume plugin like local-persist\n. This would possible if you use a volume plugin like local-persist\n. @sameersbn. I put my test results in here as you mentioned me in #658 . I guess it will provide a litte bit more clarity. \nFirst of all everything is working for me now. Thanks for the work. But i got some  barriers. \n1. If you don't have the latest redis image you get an error message that the command does not work.\n   To fix it. You to pull the latest redis image.\n2. Maintenance has been changed. The way of restoring a backup is different to the old way, because your gitlab container must be in the same network and you should provide the enviroment variables to ensure that the gitlab_container finds the database.\n   To fix it i use the following command: \ndocker run --name gitlab -it --rm --net=\"gitlab_gitlab_backend\" -v /srv/gitlab/gitlab:/home/git/data --env-file=gitlab.env sameersbn/gitlab:8.6.4 app:rake gitlab:backup:restore BACKUP=1460347212\nI used the env variables from the compose file. In that case we sould use env_file to define them once. Lets rethink about #600.\n. @sameersbn. I put my test results in here as you mentioned me in #658 . I guess it will provide a litte bit more clarity. \nFirst of all everything is working for me now. Thanks for the work. But i got some  barriers. \n1. If you don't have the latest redis image you get an error message that the command does not work.\n   To fix it. You to pull the latest redis image.\n2. Maintenance has been changed. The way of restoring a backup is different to the old way, because your gitlab container must be in the same network and you should provide the enviroment variables to ensure that the gitlab_container finds the database.\n   To fix it i use the following command: \ndocker run --name gitlab -it --rm --net=\"gitlab_gitlab_backend\" -v /srv/gitlab/gitlab:/home/git/data --env-file=gitlab.env sameersbn/gitlab:8.6.4 app:rake gitlab:backup:restore BACKUP=1460347212\nI used the env variables from the compose file. In that case we sould use env_file to define them once. Lets rethink about #600.\n. I mean sameersbn/redis:latest image. I needed to pull that than everything works at docker-compose up. \nNext time i will try to use docker-compose to run the rake tasks. It will make my work a lot of easier.  :sweat_smile:\n. I mean sameersbn/redis:latest image. I needed to pull that than everything works at docker-compose up. \nNext time i will try to use docker-compose to run the rake tasks. It will make my work a lot of easier.  :sweat_smile:\n. See #662 \n. See #662 \n. Perhaps you forget to set the following variables:\n- DB_HOST\n- DB_PORT\nWhich docker version do you use ? Could you provide a docker info ?\n. Perhaps you forget to set the following variables:\n- DB_HOST\n- DB_PORT\nWhich docker version do you use ? Could you provide a docker info ?\n. Hey,\ni like your idea. I made a PR for that case. Could you test my PR ?. \n. Hey,\ni like your idea. I made a PR for that case. Could you test my PR ?. \n. Hey,\ni made a PR for it. Could you test it ? To test it you need to build the docker image manually. \n. Hey,\ni made a PR for it. Could you test it ? To test it you need to build the docker image manually. \n. @sameersbn  It's okay for me as well just to set the client_body_max_size to 0. I updated my PR.\n. @sameersbn  It's okay for me as well just to set the client_body_max_size to 0. I updated my PR.\n. @sameersbn done .\n. @sameersbn done .\n. Ooops \ud83d\ude04 . It's updated.\n. Ooops \ud83d\ude04 . It's updated.\n. It's implemented look for the following env GITLAB_PROJECTS_BUILDS. To Deactivate set GITLAB_PROJECTS_BUILDS=false. I hope i could help you.\n. It's implemented look for the following env GITLAB_PROJECTS_BUILDS. To Deactivate set GITLAB_PROJECTS_BUILDS=false. I hope i could help you.\n. Hey, could you provide some more information which GitLab Version you currently run. In GitLab email is working for me. I use the following config and the latest GitLab(8.7.0): \n```\nGitlab Env's\nSMTP_DOMAIN=mydoamin\nSMTP_HOST=stmpHost\nSMTP_USER=superUsername\nSMTP_PASS=superPassword\nSMTP_PORT=25\nSubstituted ActionMail in Gitlab\nActionMailer::Base.smtp_settings = {\n    address: \"smtpHost\",\n    port: 25,\n    user_name: \"superUsername\",\n    password: \"superPasssword\",\n    domain: \"myDomain\",\n    authentication: \"login\",\n    enable_starttls_auto: true,\n    openssl_verify_mode: \"none\",\n    tls: false\n  }\n```\n. Hey, could you provide some more information which GitLab Version you currently run. In GitLab email is working for me. I use the following config and the latest GitLab(8.7.0): \n```\nGitlab Env's\nSMTP_DOMAIN=mydoamin\nSMTP_HOST=stmpHost\nSMTP_USER=superUsername\nSMTP_PASS=superPassword\nSMTP_PORT=25\nSubstituted ActionMail in Gitlab\nActionMailer::Base.smtp_settings = {\n    address: \"smtpHost\",\n    port: 25,\n    user_name: \"superUsername\",\n    password: \"superPasssword\",\n    domain: \"myDomain\",\n    authentication: \"login\",\n    enable_starttls_auto: true,\n    openssl_verify_mode: \"none\",\n    tls: false\n  }\n``\n. You have a typo in your env. ReplaceAUTH_GITHUB_APP_SECRETwithOAUTH_GITHUB_APP_SECRETand it should work.\n. Which version do you run ? And did you restart the container after the change ?\n. I guess you run a different gitlab image and not this image. Could you show your docker-compose.yml ?\n. I guess you run a different gitlab image and not this image. Could you show your docker-compose.yml ?\n. Yeah you should. In my opion this image is better than the offical because the official image use the omibus repository this one uses only the source and you can configure everythhing via enviroment variables. So if  you want to the official image all enviroment variables from this repository will not work. For more information about the offical image check the [documentation](https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/docker/README.md). I run this image since gitlab 6.X and i got no problems and the upgrade is very easy aswell.\n. Yeah you should. In my opion this image is better than the offical because the official image use the omibus repository this one uses only the source and you can configure everythhing via enviroment variables. So if  you want to the official image all enviroment variables from this repository will not work. For more information about the offical image check the [documentation](https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/docker/README.md). I run this image since gitlab 6.X and i got no problems and the upgrade is very easy aswell.\n. Yeah you should. In my opion this image is better than the offical because the official image use the omibus repository this one uses only the source and you can configure everythhing via enviroment variables. So if  you want to the official image all enviroment variables from this repository will not work. For more information about the offical image check the [documentation](https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/docker/README.md). I run this image since gitlab 6.X and i got no problems and the upgrade is very easy aswell.\n. I agree with you. So can you create the branch and  i will make a new PR.\n. I agree with you. So can you create the branch and  i will make a new PR.\n. Hey,\n[here](https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/config/gitlabhq/gitlab.yml) you can find thegitlab.ymlthat is used in the project. So in that case you need to build your gitlab by your own instead using that this image as base, because everything happens in the image at runtime and not at the build process. So I hope i could help you. If you have more questions feel free to ask.\n. It's fixed now with #1187 and will be available in9.1.0-1orlatest`.. In my opinon we could merge it. An official Announcement is published.\nPing @sameersbn \n. Okay. It seems an admin bug exists currently. So we should wait until this MR is merged.\n. So any things left to do for the update ? \n. The admin bug will be fixed in 8.8.2 .  It's  mentioned in the Changelog .\n. @aranw Thanks for the question. I didn't test it completely. After the test is finished I will try to write a guide for that. I guess the best place to start will be the GitLab Container Registry Administartion Documentation . \nThe communication should be implemented with docker networks, because we have only a docker-compose.yml V2 and this uses docker networks. The second argument would that docker marks the --link API as deprecated since Docker 1.9 and I don't know when they drop it completely . In my opion the only way would be with docker networks.\n. @sameersbn Yes. It's needed to be fixed. I guess we missunderstood us, because i mean with the admin bug another problem. My admin bug was when you enter the admin/application_settings  you get an 500. \nI have no idea if anyone has reported this issue to gitlab and if it's a real gitlab issue. I need some time to investigate this.\n. @sameersbn Okay. In the meatime I will try to test the container registry feature completly to ensure that it works or problems are by gitlab itself.\n. @mgansler At the moment I don't know. My production setup has a reverse proxy. After i finished all tests i will try to make a duplicate of my production system and test it with this setup. But this needs some time. I guess that I have finished the tests tomorrow in the afternoon and I will report you about my results.\n. @lenovouser Currently an issue exist that you can't create an admin account with a fresh version of 8.8.0 this must be fixed before we can merge it.\n@bboehmke You need to configure all related GITLAB_REGISTRY_* env's.\n. @boonkerz You are right. It's currently a bug that the variables aren't subsituted correctly. I will fix this now.. \n. Some updates on my progress for the container registry. Currently I have problems to run the docker-registry. It throws me  some cruel ssl errors but i use an offical ssl certificate. \n. @vitorarins When trying to login in the registry. But I recoginized that i currently didn't mount the registry-conf.yml that was the error.\n@lenovouser Sorry I have no idea. But I have a workaround for this. Use the 8.7.6 and create with this     an admin account. After that you can use the volumes for 8.8+ . \n. At all. I can say that the container registry is working now. I guess that I have found  a bug in GitLab that causes the issues with the container registry but i have fixed it locally. My next plan was to test it all and after that i will cleanup my commits and rebase it. \nMy Assumption is that I'm finished in the late afternoon.\n. So I'm done. Let's wait for @sameersbn .\n. I have create all missing PR's #705 and  #704.  That we are same with the latest gitlab ce version.\n. Currently I haven't any  computer in my near. I clould you post all related\nconfigurations for the container registry later.\n. Sorry yesterday I didn't have time to do it. I have been created a Gist for it. I hope it helps everyone that want's to run the container registry. Post there if you have related issues or questions.\n. @mgansler  GITLAB_REGISTRY_KEY_PATH is the private key of the rootcertbundle. So that GitLab can decrypt all messages from the the docker registry.\n. @mgansler I'm quite not sure if we could leave registry keys in gitlab-ci.yml out. So if this works I could improve the templating of the registry part.\n. Okay I will throw my 2 cents in how we could proceed. I understand the point that the container registry could lead to instability of this image. The current state is that the container registry is disabled by default. So any  user of this image should have no problems if he doesn't use this feature.\nIn the first point of view I like the idea from @mgansler to put in the binary in this image. This will make  a easier setup, but this produce a high coupling of dependencies and in the future It will be harder to maintain it. A example of it why it's hard to support dependencies. Is NGINX in my opionion, because it's not easy to implement Let's encrypt directly in this image you need to do a lot of stuff to achieve this. The first target should be GitLab by itself and not any services that are needed for a GitLab feature. So In my opinion the current way is the best. \nMost common problem of the container registry is the lack of documentation. It tooks me a day to find out that the official container documentation is not correct. Another problem of the container registry is that it's really new and have a lot of early adopting problems.\nThe best way how we could handle all this would be option 1  from @sameersbn upgrading to 8.8.X  and do not any configuration changes except they are implemented before and treat this PR as feature branch for the container registry.\nHow we could make a image based on this feature so that early adopters could test it and report problems because every knows that with the time you will be routine-blinded. Another step is to document how to setup the container registry. We could use my  Gist as starting point for the documentation.\n@bharrisau It's the concept how the container registry works. To run it you need the docker registry for storing images and distribute images. The part of GitLab is to authenticate a user for doing this actions against the docker registry.\n. @mgansler  You are right. I didn't know that tls is optional this would make an integration a lot of easier. You could use the registry in the same docker-compose.yml for GitLab as a standalone services and configure all related stuff via environment variables.\nTo the rootcertbundle yes it's same like you said. So what i read from  docker/distribution#520, it can be every certificate but it's must be a trusted certificate or you must add to the trust store of os. \nThanks for the clearification. I will wirite up a docker-compose.yml later that supports everything that is needed for it.\n. > At all. I can say that the container registry is working now. I guess that I have found a bug in GitLab that causes the issues with the container registry but i have fixed it locally. My next plan was to test it all and after that i will cleanup my commits and rebase it.\n@sameersbn Sorry. I guess we should close this PR and make a new one for the upgrade only or create a patch of it. I could do it if you want.\n. @sameersbn Do you upgrade directly to 8.8.2 ? And can you create the branch for the Container Registery so i can Start a new PR and working on it. After that we can close this pr here.\n. For everyone who wants to try the registry check this #PR 708 out.\n. @sameersbn Yes. I see bug through the old commit and I guess it will currently not work. I have created a fix for that of with one my latest commits.\n. @tkaefer You don't need to close this. After 8.8.0 works we could merge this for the 8.8.1 cause we will not directly jump from 8.8.0 to 8.8.2. \n. LGTM on the first view. \nping @sameersbn.\n. It would be answered in #1150 . If you are using this docker-compose.yml with version: '2' key. It will currently not working, because so far as i know rancher-compose doesn't support docker-compose v2 yml's. Here is the related Issue that i found for it. \nI could try to help you to convert the your current docker-compose.yml in the old format. For this I would be nice if you can post me your docker-compose.yml. \n. Remove the GITLAB_PORT env variable. So this points default to 80 and if https is enabled to 443 .\n. Okay for me it seems to fixed so in that case I will close this now.\n. I will look into it at the weekend. Thanks for your patients.\n. Hey,\nanother fix to use gitlab without an lb for that you can use the 8080 port :) . . Yes this will be maintained by @sameersbn. The difference between this repo and the official is that this image uses the source of GitLab and not gitlab-omnibus like the official docker container. And It's more decoupled than the official. It has a seprate redis database and database. Another benefit is that you can configure everything with environment variables. I hope that i could answer your question well.\n. Hey,\ni guess you using the official docker image from GitLab there you can use the gitlab.rb to configure everything. This Image uses enviroment variables to configure it. If you want to use this image you need to change the image source from gitlab/gitlab-ceto sameersbn/gitlab:8.7.6 and configure everything. You can use the Quickstart and for all configuration parameters have look at available configuration parameters and for your GitHub related stuff have a look at this. Futhermore if you want to stay with the offical image have look at this .\n. I will post updates and changes and anything related to the container registry in this PR.\nA good option would be to enable the notifications for this PR. So you can get everything the latest news of it.\n. For everyone who wants to setup it i have been created a little document for that. \n. You need to be a little be patient. I found a bug currently this is caused by the old commit of mine. I will prepare a fix for it and you will see the change here. \nIf you haven't pulled this tag you should wait or if you did it wait for the fix and pull it again.\n. Yes indeed the current problem is that it depends on only a single variable. Yesterday i thought about it and I came to the same solultion like @mgansler.  It should be an seperate variable added that sets the nginx gitlab proxy port. But It needs a solution that you don't  need to configure both.\nMy proposal would be something like this:\n$GITLAB_REGISTRY_PORT = ${GITLAB_REGISTRY_PORT :- } # Set Default registry to empty\nif [[ -n $GITLAB_REGISTRY_PORT ]]; then\n  NGINX_REGISTRY_PROXY_PORT = 443\nelse\n  NGINX_REGISTRY_PROXY_PORT = $GITLAB_REGISTRY_PORT\nfi\nThis sould solve both issues and extend the configuration of the container.\nEDIT:\nSome investigations on the gitlab-omnibus image leads to the result that they are setting no key if it's not set this is resulting part of gitlab.yml :\nregistry:\n  enabled: true\n  host: <domain>\n  port:\nand your web shows only the commands like \ndocker pull <domain>/<namespace>/<project>\nSo I will  implement this in the evening.\n. I updated this branch to make it nearly equals with master. So the current GitLab Version is 8.8.3 then.\n.  @lenovouser  Yes indeed. Backup can be restored now and so i guess it will be usable for master. I will push all changes in the evening so you can try it out.\n. Some last big issue i found is when you run your own registry under the same domain. The proxy will not be triggered and every request will be directed to gitlab. So should we ignore this ? I don't find any related issue on GitLab.com. \n. @umputun Yes I meant FQDN. It makes sense to ignore this. So I will start to write the documentation for the integration today. \n. @boonkerz Thanks for your reporting. I guess your problem is that GITLAB_REGISTRY_API_URL is wrong but in this case push/pull should not work as well. Futhermore you using the nginx in gitlab for proxying the registry (This is the case if you using using the url that is shown in GitLab). On my testing instance everything works as excepted. \n. @lenovouser  There are some trifles on my list that need to be done. I will assume that I'm finished by no later than saturday. This includes to upgrade an existing installation.\n. I'm finished this feature is stable for me now. If you want to adopt before the merge is passed use the tag.\n@sameersbn I added a seperate doc folder for the documentation of this feature. Can I merge or is something left with this feature. \n. At all. I will prepare a new release 8.8.5-1. If you want to use it earlier use latest.\n. Thanks for the pull request. You are right but I guess my implementation is wrong. Have a look on the official documentation it is called path. I will merge it  and refactor everything easily later.\n. Hey,\nyou need to enable the pg_trim_extension for postgresql. This can be done when add the following env to postgresql container.\ndocker run --restart=always --name gitlab-postgresql -d --env 'DB_NAME=gitlabhq_production' --env 'DB_USER=gitlab' --env 'DB_PASS=WWEERR' --env 'DB_EXTENSION=pg_trgm' \\\n --volume $(pwd)/storage/postgresql:/var/lib/postgresql sameersbn/postgresql:9.4-21\n. I don't like the name of the env variable. It could misleads someone who doesn't know that it's use to change stuff on NGINX and not GitLab. Another problem of the naming is variable is negative and the default value aswell. This could outface a user.\nI would prefer this NGINX_GITLAB_REGISTRY_ENABLED.\nThis speficies thats a nginx related variable and it's default could be both and it's fit better to GITLAB_REGISTRY_ENABLED .\n@sameersbn what do you think about it ?\n. My current implementation will now work like the normal ssl proxy for gitlab if you didn't provide a cert and key for SSL_REGISTRY_CERT & SSL_REGISTRY_KEY. It will be assumed that you are running the registry on your reverse proxy. So In this case an additional environment variable isn't required. But thanks your work on it.\n. Could you rebase it. So i can merge your PR ?\n. Nope \ud83d\ude04 .  There will be only one instance of NGINX started all configuration related to gitlab and the registry are in server blocks (Apache = Virtual Hosts). So NGINX will handle this for us. Now it would be nice to change the title to something that is related with this commit. \n. Yeah this make a lot of more sense to me. Thank's your hard work. \n. If I understand you correctly you want to force that every data is sent via https. This depends on you nginx configuration from the nginx-loadbalancer.\n```\nserver {\n        listen 443 ssl;\n        listen [::]:443 ssl;\n    server_name <YourDomain>;\n    access_log <YourLogPath>\n\n    ssl_session_cache shared:SSL:10m;\n    ssl_session_timeout 24h;\n    ssl_buffer_size 1400;\n    ssl_session_tickets off;\n\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n\n    ssl_ciphers AESGCM:HIGH:AES256+EECDH:AES256+EDH:!aNULL;\n    ssl_prefer_server_ciphers on;\n\n    ssl_certificate <YourDomainCertificate>;\n    ssl_certificate_key<YourDomainCertificatePrivateKey>;;\n\n    ssl_stapling on;\n    ssl_stapling_verify on;\n    resolver 8.8.4.4 8.8.8.8 valid=300s;\n    resolver_timeout 10s;\n\n\n    add_header Strict-Transport-Security max-age=63072000;\n    add_header X-Frame-Options DENY;\n    add_header X-Content-Type-Options nosniff;\n\nlocation / {\n        proxy_pass http://git.example.com;\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Real-IP       $remote_addr;\n        proxy_set_header X-Forwarded-Ssl on;\n\n}\n}\nserver {\n        listen 80;\n        listen [::]:80;\n        server_name ;\n        return 301 https://$server_name$request_uri;  # enforce https\n}\n```\nThis forces the client to use only https connection.\n. Yeah that's currently true after a short investigation i found out that it's don't exist in the source gitlab.yml. But in the gitlab.yml of omnibus it exists. I will try to implement this tomorrow, because i guess it's a cool feature. Or feel free to create a PR by yourself.\n. LGTM \n. LGTM\n. Hey, \nDo you run it with https or http ? \n. Can you post your docker-compose.yml. So we can try to investigate the problem.\n. And which docker version (docker info) and docker-compose version do you use ?\n. @pvinis \nSorry for  my late response. For the ssh problem you had several opportunities to solve it.\n1. Use another port for gitlab or the host ssh \n2. Use another interface\nI guess the problem your main problem is that you running both services on the standard ports. This entails that every request will be forwarded to the service. In your case all http requests will handle by the nginx in the docker-gitlab container.  I would advice you to proxy your GitLab with a web server of your choice. So you can run several services with http on the 80 port. If you need further help feel free to ask.\n. Hey,\nI don't undetstand what's your problem now. Is it that  you aren't receiving the data from the volume container or that you aren't reachable via https ?\n. It will be specified in https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/functions#L230 . So I guess it's fixed. \n. Hey, \nsorry for the late response. Could you try to use sameersbn/gitlab:8.8.5\n. @Kaleesastha Is this fixed as well ?\n. @Kaleesastha I will close this because I think it's gonna be fixed by your self. If it's not feel free to reopen this.\n. At the moment I don't know where you could change the GITLAB_DEFAULT_PROJECTS_FEATURES_VISIBILITY_LEVEL  via a config file. It need to look at this. To change the repository dir you could use GITLAB_REPOS_DIR to change that. For more informations have a look at https://github.com/sameersbn/docker-gitlab#available-configuration-parameters.\n. Okay. I will close this than now.\n. LGTM. \nping @sameersbn \n. @splattael  I tried it out and everything works as excepted. Could you rebase it ? I will add it to the new release.\n. This seems to be a hack because you need to change some sources of GitLab and we try to be same to the official GitLab. If you want this customisation. You can fork this project and do it on your own. If you need help feel free to ask.\n. Can we close this than now ?\n. I will throw my 2 cents in before we start to merge this. I think it's not a good idea to introduce SSH_AUTHORIZED_KEYS_WORLD_READABLE in my opinion it's a hack and this will result in a security vulnerability. I think we could do this only with the correct setting of USERMAP_UID and USERMAP_GID like you described. I know that you post something about it why you want to make it readable. \n\nJust in case, I am aware about USERMAP_UID/USERMAP_GID but in some circumstances it's not convenient (e.g. it breaks linking to sameersbn/redmine container which expects them to be 1000)\n\nI think it's a separate problem of sameersbn/redmine or generally share the keys. You could propose a way there to use another UID and GID. If you want i can help you to do this.\n. Hello, \nI think this pull request is outdate because we already implemented a way how to reuse ssh.\nFor this see #1731.\nIf it's not enough please reopen this PR we and start a discussion again.. This seems to be a dns problem or a general internet problem on your side.\n. I'm currently a little bit confused on my machine it's working like excepted. \nMy docker version is 1.11.2\n. You could try to run the building without a cache. docker build --no-cache -t \"imagename\" .\n. Any updates on this @M0E-lnx  ?\n. Could you try to ping rubygems.org with docker run -it --rm busybox ping rubygems.org .\n. And when you ping rubygems directly with docker run -it --rm busybox ping 54.186.104.15 ?\n. Could you provide me more infos with docker info ?\n. @splattael  Okay On my machine docker run -it --rm busybox rubygems.org works and for the ip direct as well. \n@M0E-lnx  So far as I know you don't need any database running. Have a look at this line here will be the error produced. https://github.com/sameersbn/docker-gitlab/blob/master/assets/build/install.sh#L107\nWhat is your command for building the container I'm still confused, because when i use docker build -t \"gitlab:testing\" . everything works as execepted. Could you post me your command ?\n. I don't know what could be the problem. Perhaps clone this repo and try to build again. \nPing @sameersbn Do you have any clue for this here ?\n. So in my opinion it's a problem with your docker daemon. You can try to restart docker daemon.\n. I don't know. You shoud have look at this issue in the upstream .\n. Hey, \nthanks for your report. So that i understand it correctly you mean build artifacts that are produced with .gitlab-ci.yml. If it's the correct one i will have a look into it tomorrow.\n. Okay thanks your reply I forget the cases with docker-compose and --env-file. For me it's the best as it is now. So I will close this.\n. Oh thanks for you report. The origin of this is issue is in my Gist. I copied it from there. \n@sameersbn Why not. It's stable for me and I hope that i found every evidently bug. I tested every setup that was in my imagination. \ud83d\ude07 \n. Thanks. I will merge this now.\n. You are right overwrite the global GITLAB_REGISTRY_PORT is not a good idea. I test you example and the idea  of local variable is good. This changes the scope of variable but this is what we want. In my point of view scoping GITLAB_REGISTRY_PORT to local resolve the problem of set an an empty value. So we could set GITLAB_REGISTRY_PORT only empty during the configuration of gitlab registry.\nHere my thoughts about it how we could realize it. NGINX_REGISTRY_PROXY_PORT should be removed than.\n``` bash\ngitlab_configure_registry(){\n  echo \"Configuring gitlab::registry...\"\nif [[ $GITLAB_REGISTRY_PORT == 443 ]]; then\n    # Sets GITLAB_REGISTRY_PORT empty during this function.\n    # This helps us to add an empty key to .gitlab-ci.yml .\n    # It needs to be empty because 443 is the default https port and doesn't need a mention\n    # so it will not be displayed on the ui.\n    local GITLAB_REGISTRY_PORT\n  fi\nupdate_template ${GITLAB_CONFIG} \\\n    GITLAB_REGISTRY_ENABLED \\\n    GITLAB_REGISTRY_DIR \\\n    GITLAB_REGISTRY_HOST \\\n    GITLAB_REGISTRY_PORT \\\n    GITLAB_REGISTRY_API_URL \\\n    GITLAB_REGISTRY_KEY_PATH \\\n    GITLAB_REGISTRY_ISSUER\n}\nnginx_configure_gitlab_registry() {\n  if [[ $GITLAB_REGISTRY_ENABLED == true && -f ${SSL_REGISTRY_CERT_PATH} && -f ${SSL_REGISTRY_KEY_PATH} ]]; then\n    echo \"Configuring nginx::gitlab-registry...\"\n    update_template ${GITLAB_REGISTRY_NGINX_CONFIG} \\\n      GITLAB_LOG_DIR \\\n      GITLAB_REGISTRY_PORT \\\n      GITLAB_REGISTRY_HOST \\\n      GITLAB_REGISTRY_API_URL \\\n      SSL_REGISTRY_KEY_PATH \\\n      SSL_REGISTRY_CERT_PATH\n  fi\n}\n``\n. I found a strange behaviour of my propose. If I setGITLAB_REGISTRY_PORTto443registry_port will be set to443as well. This is not what we want. But when I didn't setGITLAB_REGISTRY_PORT` it will be empty.\n. Yep that's correct this reminds me on the problem in the past how I solved it :) .\n. Thanks for your hard work and patient on this PR. I will merge this after I know how it can be released, because it will provide us more stabililty as my first approach. \n@sameersbn  Should I  make a new release with 8.9.1-1 to add a this improvement as an seperate update or should it wait for a next update and it will remain in latest only.\n. Okay I will merge it and we wait for the next gitlab release .\n. @sameersbn This should only the preparation of the next release. I hope that makes your process of upgrading easier.\n. Hey, \nthanks for your report. My GITLAB_REGISTRY_HOST is very short so i didn't have this problem. Could you send me your GITLAB_REGISTRY_HOST with an equivalent length of your current value. So i can reproduce it and test the possible fix.\n. So #786 is merged. It will resolves your problem if you set NGINX_SERVER_NAMES_HASH_BUCKET_SIZE to 64. If this solves not your problem. Please open a new issue. Thanks for reporting this issue.\n. You are right. SSL_REGISTRY_* is used as paths for the configuration of ssl in the gitlab-registry server_block config. GITLAB_REGISTRY_KEY_PATH is the private key of the REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE. This comes from Docker Registry Auth Token Spec. So GitLab implemented this to be able to use the registry. For more information have a look at http://docs.gitlab.com/ce/administration/container_registry.html. I will add more information later to the documentation\n. I updated the documentation of the container_registry.md in #789. I will close this issue now. If it's not solved your question of the container registry. Reopen this issue and ping me. So we can try to solve it for you and other people. This will help me to improve the docs again. Thank you for opening this ticket and ask this \ud83d\udc4d .\n. You are right. It will be merged now.\n. Thanks for your  report. I will update the container registry documenation later.\n. I updated the documentation of the container_registry.md in #789. I will close this issue now. If it's not solved your question of the container registry. Reopen this issue and ping me. So we can try to solve it for you and other people. This will help me to improve the docs again. Thank you for opening this ticket and ask this \ud83d\udc4d .\n. Okay I will try to clearify this. You don't need to mount an extra volume from /srv/gitlab/shared/registry, because it's already mounted in /srv/gitlab/gitlab. To find the registry data you can look at /srv/gitlab/gitlab/shared/registry and this need to be mounted  as registry-storage. Currently it can't be a seperate volume, because of the GitLab backup/restore workflow doesn't work than correctly.\n. I updated the documentation of the container_registry.md in #789. I will close this issue now. If it's not solved your question of the container registry. Reopen this issue and ping me. So we can try to solve it for you and other people. This will help me to improve the docs again. Thank you for opening this ticket and ask this \ud83d\udc4d .\n. Thanks for your report. It's look like a problem the upstream. Have a look at https://gitlab.com/gitlab-org/gitlab-ce/commit/59b5bb033409901dc8e1fa7fa28c3a0fa38f495a . I tested your fix in #759 and it didn't work for me. The Health Check changed but mails won't be send after you install exim4-daemon-light same with sendmail. I guess it needs a deeper inspectation of the problem.\nEDIT: I was pointing in the wrong direction but i was correct it is an upstream problem. This issue describe the problem and resolves your issue and mails will be sent.\n. This will work when you upgrade to 8.9.1 now . So I will close this issue now.\n. Hey,\nif you want to add customisation to this image make a fork of it and change what you want. For your attempt you need to do it, because you try to change the sources. \n1. Add a Gem to the gemfile have a look at https://github.com/sameersbn/docker-gitlab/blob/master/assets/build/install.sh#L91. Here you could add your gem so it will be in your image.\n2. To change the gitlab.yml you should change this file https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/config/gitlabhq/gitlab.yml here.\ngitlab-ce image runs differently to this image. If you want to know the difference have a look at #609 .\nI hope I could help you.\n. I will close this PR because it's isn't a fix for issue #757. Yes It makes the heath_check green again but mails won't be sent.  I tested my PR #763  and health_check goes green again and mails will be sent. The origin of the problem comes from upstream like I said in #757 .\n. Could you provide more informations. Like your configuration. It would be easier to trace the origin of the error. \n. It's not supported in the upstream directly. But I guess you could use it with a trick. Have a look at this issue .\n. @robertoamoreno It is possible to deal with what you need to change is the storage configuration of registry container. In this case GitLab can't do any backups for you, but if's okay than you can use s3. What configurations are needed have a look at https://docs.docker.com/registry/configuration/ .\n. I updated the documentation of the container_registry.md in #789. I will close this issue now. If it's not solved your question of the container registry. Reopen this issue and ping me. So we can try to solve it for you and other people. This will help me to improve the docs again. Thank you for opening this ticket and ask this \ud83d\udc4d .\n. @Ilya-Kuchaev  Yes this will be probably the origin of the problem.\nAt the moment I don't know how to solve it here with an existing GitLab instance. \n. This problem can occur if your GITLAB_SECRETS_DB_KEY_BASE is shorter than 32 characters. To fix this change your GITLAB_SECRETS_DB_KEY_BASE to a key that is longer than 32 characters.\nFor example you could use pwgen -Bsv1 64. \n. But be careful you could lose data if you do that with an existing version of GitLab.\n. Hey\ndid you try to run your restore command with the correct version and your backup should be a 8.7.5 as well. You should restore with a command like this.\ndocker run --name gitlab -it --rm [OPTIONS] \\\n    sameersbn/gitlab:8.7.5 app:rake gitlab:backup:restore BACKUP=1417624827\nThe 500 error comes from that your GITLAB_SECRETS_DB_KEY_BASE is shorter than 32 characters this is cause in an gem update (Encryptor) cause this issue, but you can't change your GITLAB_SECRETS_DB_KEY_BASE this will cause data lose. They will fix it in the next release hopefully.\n. Ah okay. It could be the database. Do you remove container and the related volume to that ? Pe\n. Yep. \n. I don't see so much vuln. At quay.io all images will be checked with clair so far as i know. There says it has only medium vuln.\n. Hey,\nIt's a duplicate of #696 . This error comes from that we are checking tarballs out instead of git repositorys. In my point of view we could ignore this error messages.\n. It's fixed now with #1187 and will be available in 9.1.0-1 or latest.. Hey,\nat the moment it isn't configurable via envvar. If you want an workaround edit in your GitLab container your nginx config file /etc/nginx/nginx.conf and change # server_names_hash_bucket_size 64; to server_names_hash_bucket_size 64; after that restart the container. I will write later an envvar for it. \n. So #786 is merged. It will resolves your problem if you set NGINX_SERVER_NAMES_HASH_BUCKET_SIZE to 64. If this solves not your problem. Please open a new issue. Thanks for reporting this issue.\n. Hey,\nsorry for the late response. I need more information about your Setup. Do you use docker-composeand when it's true could you post your docker-compose.yml\n. I tested it with the official mysql image mysql:5.7.13 and it works as excepted. I guess the problem of sameersbn/mysql:latestit's currently not so configurable. Try it with official mysql image.\n. LGTM ! Personally I don't think that 8.9.3 fixes #765 and #766. I tested it and #766 isn't solved but the problem lays in the upstream.\n. Hey,\nfirst of all what I see is that you using only 8.8.5 but 8.8.5-1 is required to run gitlab registry. Do you run your setup on different Hosts ? So If not I would recommend to proxy without https. It makes a lot of easier to setup. \n. Yes. I would try to without a reverse proxy. I use this setup with a let's encrypt certificate and it works like charm.\n. It could be a self signed certificate or a signed certificate. I don't have any experience with wildcard certificates. But I assume that you need every domain a priv key from the wildcard certificate. Have a look at https://docs.docker.com/registry/configuration/#/token  for the spec and more information. \n. Thanks  \ud83d\udc4d \n. Thanks for your work. I did the same PR at the same time \ud83d\ude05 . So I will close mine #779 . But I needs to be tested first. I will do that now. So I will mark yours as WIP. \n. Yeah :)\n. So I tested it and #765 #766 will be fixed through 8.9.4. It's stable so I can merge it now. Thanks for your effort on this.\n. Duplicate of  #778 . So I will close this.\n. Everything seems to be working. It can be merged now.\n. Hey, \ndid you copied docker-compose.yml and tried to start up with rancher-compose. This  will currently not working because rancher-compose doesn't support docker-compose v2 (https://github.com/rancher/rancher/issues/3973) .\n. Hey, \nyou set your GITLAB_PORT to 30000 so your GitLab instance will be reachable via this port. If you have set GITLAB_HTTPS to true. It will create an nginx ssl sever_block for the 30000 port. Try to connect your site via ssl/tls with port 30000 .\n. I forget something to say. You need to change you port mapping from the container for example from -p 80:80 to -p 30000:80 as well. If you do that everything should work.\n. Hey do you want migrate to mysql or do a fresh installation with MySQL .  With a fresh installation you could do this \n```\nversion: '2'\nservices:\n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    volumes:\n    - ./redis:/var/lib/redis:Z\nmysql:\n    restart: always\n    image: mysql:5.7.13\n    volumes:\n    - ./mysql:/var/lib/mysql:Z\n    environment:\n    - MYSQL_ROOT_PASSWORD=passsword\n    - MYSQL_USER=gitlab\n    - MYSQL_PASSWORD=password\n    - MYSQL_DATABASE=gitlabhq_production\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:8.9.5\n    depends_on:\n    - redis\n    - mysql\n    ports:\n    - \"10080:80\"\n    - \"10022:22\"\n    volumes:\n    - ./gitlab:/home/git/data:Z\n    environment:\n    - DEBUG=false\n- DB_ADAPTER=mysql2\n- DB_HOST=mysql\n- DB_PORT=3306\n- DB_USER=gitlab\n- DB_PASS=password\n- DB_NAME=gitlabhq_production\n\n- REDIS_HOST=redis\n- REDIS_PORT=6379\n\n- TZ=Asia/Kolkata\n- GITLAB_TIMEZONE=Kolkata\n\n- GITLAB_HTTPS=false\n- SSL_SELF_SIGNED=false\n\n- GITLAB_HOST=localhost\n- GITLAB_PORT=10080\n- GITLAB_SSH_PORT=10022\n- GITLAB_RELATIVE_URL_ROOT=\n- GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string\n\n- GITLAB_ROOT_PASSWORD=\n- GITLAB_ROOT_EMAIL=\n\n- GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n- GITLAB_NOTIFY_PUSHER=false\n\n- GITLAB_EMAIL=notifications@example.com\n- GITLAB_EMAIL_REPLY_TO=noreply@example.com\n- GITLAB_INCOMING_EMAIL_ADDRESS=reply@example.com\n\n- GITLAB_BACKUP_SCHEDULE=daily\n- GITLAB_BACKUP_TIME=01:00\n\n- SMTP_ENABLED=false\n- SMTP_DOMAIN=www.example.com\n- SMTP_HOST=smtp.gmail.com\n- SMTP_PORT=587\n- SMTP_USER=mailer@example.com\n- SMTP_PASS=password\n- SMTP_STARTTLS=true\n- SMTP_AUTHENTICATION=login\n\n- IMAP_ENABLED=false\n- IMAP_HOST=imap.gmail.com\n- IMAP_PORT=993\n- IMAP_USER=mailer@example.com\n- IMAP_PASS=password\n- IMAP_SSL=true\n- IMAP_STARTTLS=false\n\n- OAUTH_ENABLED=false\n- OAUTH_AUTO_SIGN_IN_WITH_PROVIDER=\n- OAUTH_ALLOW_SSO=\n- OAUTH_BLOCK_AUTO_CREATED_USERS=true\n- OAUTH_AUTO_LINK_LDAP_USER=false\n- OAUTH_AUTO_LINK_SAML_USER=false\n- OAUTH_EXTERNAL_PROVIDERS=\n\n- OAUTH_CAS3_LABEL=cas3\n- OAUTH_CAS3_SERVER=\n- OAUTH_CAS3_DISABLE_SSL_VERIFICATION=false\n- OAUTH_CAS3_LOGIN_URL=/cas/login\n- OAUTH_CAS3_VALIDATE_URL=/cas/p3/serviceValidate\n- OAUTH_CAS3_LOGOUT_URL=/cas/logout\n\n- OAUTH_GOOGLE_API_KEY=\n- OAUTH_GOOGLE_APP_SECRET=\n- OAUTH_GOOGLE_RESTRICT_DOMAIN=\n\n- OAUTH_FACEBOOK_API_KEY=\n- OAUTH_FACEBOOK_APP_SECRET=\n\n- OAUTH_TWITTER_API_KEY=\n- OAUTH_TWITTER_APP_SECRET=\n\n- OAUTH_GITHUB_API_KEY=\n- OAUTH_GITHUB_APP_SECRET=\n- OAUTH_GITHUB_URL=\n- OAUTH_GITHUB_VERIFY_SSL=\n\n- OAUTH_GITLAB_API_KEY=\n- OAUTH_GITLAB_APP_SECRET=\n\n- OAUTH_BITBUCKET_API_KEY=\n- OAUTH_BITBUCKET_APP_SECRET=\n\n- OAUTH_SAML_ASSERTION_CONSUMER_SERVICE_URL=\n- OAUTH_SAML_IDP_CERT_FINGERPRINT=\n- OAUTH_SAML_IDP_SSO_TARGET_URL=\n- OAUTH_SAML_ISSUER=\n- OAUTH_SAML_LABEL=\"Our SAML Provider\"\n- OAUTH_SAML_NAME_IDENTIFIER_FORMAT=urn:oasis:names:tc:SAML:2.0:nameid-format:transient\n- OAUTH_SAML_GROUPS_ATTRIBUTE=\n- OAUTH_SAML_EXTERNAL_GROUPS=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_NAME=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_FIRST_NAME=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_LAST_NAME=\n\n- OAUTH_CROWD_SERVER_URL=\n- OAUTH_CROWD_APP_NAME=\n- OAUTH_CROWD_APP_PASSWORD=\n\n- OAUTH_AUTH0_CLIENT_ID=\n- OAUTH_AUTH0_CLIENT_SECRET=\n- OAUTH_AUTH0_DOMAIN=\n\n- OAUTH_AZURE_API_KEY=\n- OAUTH_AZURE_API_SECRET=\n- OAUTH_AZURE_TENANT_ID=\n\n``\n. ping @sameersbn  WDYT ? \n. Thanks \ud83d\udc4d \n. A better approach is to set theDB_HOST` to the name of the database container. So this will use DNS than and DNS is often better than an IP.\n. Tests are finished and it works like excepted.\n. ping @sameersbn WDYT ?\n. My intention was to be able to do automatic ssl  acquisition (with Let's Encrypt). In the current state it's not easy to implement with a separate container it's a lot of easier. I had the same consideration about SSL and this image. Currently I think my approach is not the best way how we can solve this.\nA better solution would be in my opinion now to have the ability to enable nginx or not and let workhorse work under tcp(8080) instead of a socket. This give us the ability that the user can choose what he wants. It's not a complete clean way but this should unite a user.  \nAnother option is to build an Image with a separate tag for without nginx (or a tag with nginx inside). \nThis is why I want to discuss this. \n. @sameersbn I don't want to force you into a corner. I think a time frame of removing NGINX is great. To give the people a migration window. I'm fine with your proposal.\nI think we could serve both a container without NGINX and a container with it. This requires a little restructure but It should work.\nThis could be done if we use different FROM. An example would be like this:\nGitLab Image without NGINX .\n```\nFROM sameersbn/ubuntu:14.04.20160608\nMAINTAINER sameer@damagehead.com\n\n```\nAnd then we create an Image with extension of nginx:\n```\nFROM sameersbn/gitlab:8.9.6\nMAINTAINER sameer@damagehead.com\n\n```\nThey need separate tags so we could have :\n1. sameersbn/gitlab:8.9.6 \n2. sameersbn/gitlab:8.9.6-nginx \nThe complete separation could be done through different folder so it's simpler to maintain it. This proposal should have migration phase as well. \n. Okay. I will start to work on this now, but I will do this on a separate PR.\n. ping @sameersbn \n. ping @sameersbn \n. I don't think that we release this 8.10. This could be a separate merge. If you don't want to use nginx use workhorse directly with the 8181 port. Have a look at https://github.com/sameersbn/docker-gitlab/commit/70dc29de1a1c6b226c4e5f9e8c45fb3ae0136170 . If you get further questions to this open an issue for that.\n. @sameersbn I will prepare a separate document for this case and describe the pros and cons of it.\n. @sameersbn  I don't like the idea of reverting https://github.com/sameersbn/docker-gitlab/commit/70dc29de1a1c6b226c4e5f9e8c45fb3ae0136170 . But I assume that you meaning to set gitlab-workhorse to 80 when NGINX_ENABLED=false. Yeah we could use sed for it.\n. If we run workhorse on 80. The process must be run by root, because linux wants to run ports <= 1024 must be run by root. The problem of workhorse is that it's currently not capable to drop the privileges. This is for me a security hole. I would tell people to map the 80. It's better und not uncommon. For other will be a load balancer an option.\n. Hey,\nfor me it seems you use gitlab/gitlab-ce. If it's not the case, could you provide more information about it. Which Version do you use of this image ? If you use an docker-compose.yml could you post it ?\n. Tests are finished. I am happy to say we can merge it.\n. Yep.\nAm 23.07.2016 6:12 nachm. schrieb \"Sameer Naik\" notifications@github.com:\n\n@SolidNerd https://github.com/SolidNerd Did you test it?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/799#issuecomment-234726275,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb-W7ztUvea4XQtYAQd23Oxo0k63rks5qYj11gaJpZM4JTVS3\n.\n. Okay, i use an nginx as fe for container as well but I got not the problems. For me it's seems your fe config is differently to mine.  If have currently set GITLAB_HTTPS to true . You should pull \n\ndocker pull sameersbn/gitlab:8.10.0\nto have latest version of it.\n. Here is my nginx fe configuration:\n```\nupstream gitlab {\n server gitlab_gitlab_1:80 fail_timeout=60s;\n}\nserver {\n        listen 443 ssl;\n        listen [::]:443 ssl;\n    server_name git.example.com;\n    access_log /var/log/nginx/git.example.com/access.log;\n\n    ssl_session_cache shared:SSL:10m;\n    ssl_session_timeout 24h;\n    ssl_buffer_size 1400;\n    ssl_session_tickets off;\n\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n\n    ssl_ciphers AESGCM:HIGH:AES256+EECDH:AES256+EDH:!aNULL;\n    ssl_prefer_server_ciphers on;\n\n    ssl_certificate /etc/letsencrypt/live/git.example.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/git.example.com/privkey.pem;\n    ssl_dhparam /etc/nginx/ssl/dhparam.pem;\n\n    ssl_stapling on;\n    ssl_stapling_verify on;\n    resolver 8.8.4.4 8.8.8.8 valid=300s;\n    resolver_timeout 10s;\n\n    add_header Strict-Transport-Security max-age=63072000;\n\nlocation / {\n        proxy_pass http://gitlab;\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Real-IP       $remote_addr;\n        proxy_set_header X-Forwarded-Ssl on;\n\n}\nlocation /.well-known/ {\n    root /var/www/git.example.com;\n  }\n}\nserver {\n        listen 80;\n        listen [::]:80;\n        server_name git.example.com;\n        return 301 https://$server_name$request_uri;  # enforce https\n}\n``\n. For everyone who uses an own Load Balancer you can expose8181` there is the plain gitlab workhorse that only speaks http. This is relatively new. \nGitLab Container\nload balancer <-> nginx <-> workhorse\nI would recommend this if you use your own load balancer for ssl instead of proxing it to the nginx interface. GitLab workhorse runs on 8181\n. @sameersbn  In my opinion we should revert this. Some people got fixed it with their own load balancer but some not. I have no clue how we could solve this on AWS ELB except we revert https://github.com/sameersbn/docker-gitlab/commit/48cf19f9571cc5519908ee2d5ae0df71a9e5871e .\n. Hey, \nyou set GITLAB_PORT=10080. Remove this env var or set it to GITLAB_PORT=80 .\n. I will finish my tests today / tomorrow. So it will be released than.\n. I will test the following things for a patch that are in my opinion should work if you think i miss something tell me it. I will add it to my list to improve the tests and stability:\n- [ ] Upgrade an existing GitLab Instance\n  - [ ] Test health check\n  - [ ] Test login / OAuth\n  - [ ] Test git pull\n  - [ ] Test git push\n  - [ ] Test backup\n  - [ ] Test backup restore\n  - [ ] Test registry \n  - [ ] Test GitLab CI\n- [ ] Setup a fresh GitLab Instance\n  - [ ] Test health check\n  - [ ] Test login / OAuth\n  - [ ] Test git pull\n  - [ ] Test git push\n  - [ ] Test backup\n  - [ ] Test backup restore\n  - [ ] Test registry \n  - [ ] Test GitLab CI\n. I'm finished. I will start now to :shipit:  .\n. I'm finished. I will start now to :shipit:  .\n. https://hub.docker.com/r/sameersbn/gitlab/builds/\n. https://hub.docker.com/r/sameersbn/gitlab/builds/\n. This image will be configured over environment variables. To configure your SMTP_PASS you need to set SMTP_PASS=<yourvalue> in gitlab container. For more configurations options have a look at https://github.com/sameersbn/docker-gitlab#available-configuration-parameters .\n. This image will be configured over environment variables. To configure your SMTP_PASS you need to set SMTP_PASS=<yourvalue> in gitlab container. For more configurations options have a look at https://github.com/sameersbn/docker-gitlab#available-configuration-parameters .\n. Hey, \nthanks for your  work. Could you rebase your commits to a single commit. And did you tested it ? \n. Hey, \nthanks for your  work. Could you rebase your commits to a single commit. And did you tested it ? \n. \ud83d\udc4d . One last thing is the title of the commit message I would prefer something like Improve OAUTH_GOOGLE_RESTRICT_DOMAIN for mutltiple restricted domains. This should help us to search something in the history instead of your title. Because In the future we won't remind us of GITLAB URL but the env key and we can have a look up for it in env-defaults or functions .\nI want to ship 8.10.1 first and then we can add this so you will need to rebase master again. But thank your very much for your work and patient  with me  \ud83d\ude03  .\n. \ud83d\udc4d . One last thing is the title of the commit message I would prefer something like Improve OAUTH_GOOGLE_RESTRICT_DOMAIN for mutltiple restricted domains. This should help us to search something in the history instead of your title. Because In the future we won't remind us of GITLAB URL but the env key and we can have a look up for it in env-defaults or functions .\nI want to ship 8.10.1 first and then we can add this so you will need to rebase master again. But thank your very much for your work and patient  with me  \ud83d\ude03  .\n. Hey,\nredis will be used for communication between gitlab-shell and sidekiq. sameersbn/redis is a trustry ubuntu image .The redis version that will be used in there is 2.8.4.Because it will be installed via package manager it's a bit harder to tag the image with version. The version can only determined via runtime so taging is a little bit complex. If you want use a versioned redis image use the official one with the same config from sameersbn/redis dockerfile. This should work as well.\n. Hey,\nredis will be used for communication between gitlab-shell and sidekiq. sameersbn/redis is a trustry ubuntu image .The redis version that will be used in there is 2.8.4.Because it will be installed via package manager it's a bit harder to tag the image with version. The version can only determined via runtime so taging is a little bit complex. If you want use a versioned redis image use the official one with the same config from sameersbn/redis dockerfile. This should work as well.\n. Hey,\ncache clear will happen when you restart the container. Your described problems seems for me asset caching issues. This should be resolved after you restart the container. Otherwise I could be a problem in the upstream. I will close this than now.\n. Hey,\ncache clear will happen when you restart the container. Your described problems seems for me asset caching issues. This should be resolved after you restart the container. Otherwise I could be a problem in the upstream. I will close this than now.\n. Sorry for the delay. I will ship it now. \n. Sorry for the delay. I will ship it now. \n. Hey, \ncould you post your supervisor/cron.log and the value of GITLAB_BACKUP_DIR .\n. Hey, \ncould you post your supervisor/cron.log and the value of GITLAB_BACKUP_DIR .\n. Hey, \ni tried to investigate this. At the moment I have no clue. I try to reproduce it with your values this takes time until the cron starts. Meanwhile you could check if your cronjob works per minute. For that do the following steps.\n1. Enter in the running gitlab container\ndocker-compose exec gitlab bash\n1. Add a backup cronjob per minute\nbash\necho \"*/1 * * * * /bin/bash -l -c 'cd ${GITLAB_INSTALL_DIR} && bundle exec rake gitlab:backup:create SKIP=${GITLAB_BACKUP_SKIP} RAILS_ENV=${RAILS_ENV}'\" >> /tmp/cron.${GITLAB_USER} && \ncrontab -u ${GITLAB_USER} /tmp/cron.${GITLAB_USER}\n1. Check if cron is installed  with\ncrontab -u git -l\n1. Wait for the result.\n. Hey, \ni tried to investigate this. At the moment I have no clue. I try to reproduce it with your values this takes time until the cron starts. Meanwhile you could check if your cronjob works per minute. For that do the following steps.\n1. Enter in the running gitlab container\ndocker-compose exec gitlab bash\n1. Add a backup cronjob per minute\nbash\necho \"*/1 * * * * /bin/bash -l -c 'cd ${GITLAB_INSTALL_DIR} && bundle exec rake gitlab:backup:create SKIP=${GITLAB_BACKUP_SKIP} RAILS_ENV=${RAILS_ENV}'\" >> /tmp/cron.${GITLAB_USER} && \ncrontab -u ${GITLAB_USER} /tmp/cron.${GITLAB_USER}\n1. Check if cron is installed  with\ncrontab -u git -l\n1. Wait for the result.\n. Did you tried to add your cron (00 10 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production) command via my instructions . For me it seems that 00 could be a problem because it's not a valid cron value. \n. Did you tried to add your cron (00 10 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production) command via my instructions . For me it seems that 00 could be a problem because it's not a valid cron value. \n. @dh1tw  Could you post your SMTP envvar's. So we can check it.\n. @dh1tw  Could you post your SMTP envvar's. So we can check it.\n. Hey,\ndo you use a reverse proxy for the gitlab container ? \n. Hey,\ndo you use a reverse proxy for the gitlab container ? \n. Hey,\nNET::ERR_CERT_COMMON_NAME_INVALID. means that your common name that you entered during the private key sigin is not equalivalent to GITLAB_HOST. I tested it and it works for me. \nHere is my docker-compose.yml:\n```\nversion: '2'\nservices:\n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    volumes:\n    - ./redis:/var/lib/redis:Z\n  postgresql:\n    restart: always\n    image: sameersbn/postgresql:9.4-24\n    volumes:\n    - ./postgresql:/var/lib/postgresql:Z\n    environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:8.9.5\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"10080:443\"\n    - \"10022:22\"\n    volumes:\n    - ./gitlab:/home/git/data:Z\n    - ./logs:/var/log/gitlab\n    environment:\n    - DEBUG=false\n- DB_ADAPTER=postgresql\n- DB_HOST=postgresql\n- DB_PORT=5432\n- DB_USER=gitlab\n- DB_PASS=password\n- DB_NAME=gitlabhq_production\n\n- GITLAB_HTTPS=true\n- SSL_SELF_SIGNED=true\n\n- SSL_KEY_PATH=/home/git/data/certs/gitlab.key\n- SSL_DHPARAM_PATH=/home/git/data/certs/dhparam.pem\n- SSL_CERTIFICATE_PATH=/home/git/data/certs/gitlab.crt\n\n- REDIS_HOST=redis\n- REDIS_PORT=6379\n- GITLAB_SSH_PORT=1022\n- GITLAB_PORT=10080\n- GITLAB_HOST=gitlab.endor.dev\n\n- GITLAB_SECRETS_DB_KEY_BASE=superrandomsecret\n\n```\nHere is a part of  my gitlab.crt:\nCertificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number:\n            ad:36:d8:c8:00:43:70:f4\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=DE, ST=DE, L=DE, O=DE, OU=DE, CN=gitlab.endor.dev\n        Validity\n            Not Before: Jul 31 07:48:39 2016 GMT\n            Not After : Jul 29 07:48:39 2026 GMT\n        Subject: C=DE, ST=DE, L=DE, O=DE, OU=DE, CN=gitlab.endor.dev\n...\nAs you can see in Subject of the certificate the CN Key stands for Common Name and it's equivalent to GITLAB_HOST . \nYou can check this with openssl x509 -in gitlab.crt -text -noout\n. Hey,\nNET::ERR_CERT_COMMON_NAME_INVALID. means that your common name that you entered during the private key sigin is not equalivalent to GITLAB_HOST. I tested it and it works for me. \nHere is my docker-compose.yml:\n```\nversion: '2'\nservices:\n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    volumes:\n    - ./redis:/var/lib/redis:Z\n  postgresql:\n    restart: always\n    image: sameersbn/postgresql:9.4-24\n    volumes:\n    - ./postgresql:/var/lib/postgresql:Z\n    environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:8.9.5\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"10080:443\"\n    - \"10022:22\"\n    volumes:\n    - ./gitlab:/home/git/data:Z\n    - ./logs:/var/log/gitlab\n    environment:\n    - DEBUG=false\n- DB_ADAPTER=postgresql\n- DB_HOST=postgresql\n- DB_PORT=5432\n- DB_USER=gitlab\n- DB_PASS=password\n- DB_NAME=gitlabhq_production\n\n- GITLAB_HTTPS=true\n- SSL_SELF_SIGNED=true\n\n- SSL_KEY_PATH=/home/git/data/certs/gitlab.key\n- SSL_DHPARAM_PATH=/home/git/data/certs/dhparam.pem\n- SSL_CERTIFICATE_PATH=/home/git/data/certs/gitlab.crt\n\n- REDIS_HOST=redis\n- REDIS_PORT=6379\n- GITLAB_SSH_PORT=1022\n- GITLAB_PORT=10080\n- GITLAB_HOST=gitlab.endor.dev\n\n- GITLAB_SECRETS_DB_KEY_BASE=superrandomsecret\n\n```\nHere is a part of  my gitlab.crt:\nCertificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number:\n            ad:36:d8:c8:00:43:70:f4\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=DE, ST=DE, L=DE, O=DE, OU=DE, CN=gitlab.endor.dev\n        Validity\n            Not Before: Jul 31 07:48:39 2016 GMT\n            Not After : Jul 29 07:48:39 2026 GMT\n        Subject: C=DE, ST=DE, L=DE, O=DE, OU=DE, CN=gitlab.endor.dev\n...\nAs you can see in Subject of the certificate the CN Key stands for Common Name and it's equivalent to GITLAB_HOST . \nYou can check this with openssl x509 -in gitlab.crt -text -noout\n. Hey,\nI tested it with your image configuration and I got no problems. Did you try a fresh install or an upgrade. I would recommend you to use a version number of the GitLab image so it's easier to find the problem and you know which version you running.\n. Hey,\nI tested it with your image configuration and I got no problems. Did you try a fresh install or an upgrade. I would recommend you to use a version number of the GitLab image so it's easier to find the problem and you know which version you running.\n. Thanks for your issue and a solution for the problem. I will resolve this asap. \n. Thanks for your issue and a solution for the problem. I will resolve this asap. \n. @Estebanv I fixed it and it works for me. Please pull latest when the build is done (https://hub.docker.com/r/sameersbn/gitlab/builds/).\n@achretien Could you test it with latest as well to verify that multiple domains like you implemented it. It would be nice.\nI will close this issue than later.\n. @Estebanv I fixed it and it works for me. Please pull latest when the build is done (https://hub.docker.com/r/sameersbn/gitlab/builds/).\n@achretien Could you test it with latest as well to verify that multiple domains like you implemented it. It would be nice.\nI will close this issue than later.\n. Okay. It's created wait for the tag. I will close this issue now. If the issue still exists please reopen this issue @Estebanv .\n. Okay. It's created wait for the tag. I will close this issue now. If the issue still exists please reopen this issue @Estebanv .\n. Sorry the delay. I will ship this in the evening .\n. Sorry the delay. I will ship this in the evening .\n. Tests are finished I will merge this now.\n. Tests are finished I will merge this now.\n. Hey,\ni like your idea, but currently I see no big difference to the latest tag. Your proposed versioning would be something for minor versions than instead of the latest tag.  You have the same problem as usual, because docker will not pull the new  changes when the image exist locally. So you need to pull every time when you start the container.\n. Hey,\ni like your idea, but currently I see no big difference to the latest tag. Your proposed versioning would be something for minor versions than instead of the latest tag.  You have the same problem as usual, because docker will not pull the new  changes when the image exist locally. So you need to pull every time when you start the container.\n. Hey,\ni like your idea, but currently I see no big difference to the latest tag. Your proposed versioning would be something for minor versions than instead of the latest tag.  You have the same problem as usual, because docker will not pull the new  changes when the image exist locally. So you need to pull every time when you start the container.\n. ping @sameersbn  What do you think about it ? \n. ping @sameersbn  What do you think about it ? \n. ping @sameersbn  What do you think about it ? \n. If you want you can add  me als collaborator on DH. So I could have an open eye as well.\n. If you want you can add  me als collaborator on DH. So I could have an open eye as well.\n. If you want you can add  me als collaborator on DH. So I could have an open eye as well.\n. My id is solidnerd \ud83d\ude05 \n. My id is solidnerd \ud83d\ude05 \n. My id is solidnerd \ud83d\ude05 \n. I got no access to it :( . I checked the login on the site and on the cli both works.\nUpdate: It seems that it won't work. I found something on the docs. \n\nA collaborator is someone you want to give access to a private repository. Once designated, they can push and pull to your repositories. They will not be allowed to perform any administrative tasks such as deleting the repository or changing its status from private to public.\n. I got no access to it :( . I checked the login on the site and on the cli both works.\n\nUpdate: It seems that it won't work. I found something on the docs. \n\nA collaborator is someone you want to give access to a private repository. Once designated, they can push and pull to your repositories. They will not be allowed to perform any administrative tasks such as deleting the repository or changing its status from private to public.\n. I got no access to it :( . I checked the login on the site and on the cli both works.\n\nUpdate: It seems that it won't work. I found something on the docs. \n\nA collaborator is someone you want to give access to a private repository. Once designated, they can push and pull to your repositories. They will not be allowed to perform any administrative tasks such as deleting the repository or changing its status from private to public.\n. It will only work if we create an organisation. But it's okay for. I will have an eye on it and ping you if  something breaks.\n. It will only work if we create an organisation. But it's okay for. I will have an eye on it and ping you if  something breaks.\n. It will only work if we create an organisation. But it's okay for. I will have an eye on it and ping you if  something breaks.\n. I could Push to the Repo on DH.\n\nAm 07.08.2016 5:18 nachm. schrieb \"Sameer Naik\" notifications@github.com:\n\nwhats the point of doing this then? DH makes me so angry sometimes. \ud83d\ude20\n[image: index]\nhttps://cloud.githubusercontent.com/assets/410147/17463284/18121848-5ce0-11e6-9151-388e01cf6f01.png\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/825#issuecomment-238088240,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb2DKwT0FccB9V4dqqaam6iEfi4Wnks5qdfcrgaJpZM4Jagyp\n.\n. I could Push to the Repo on DH.\n\nAm 07.08.2016 5:18 nachm. schrieb \"Sameer Naik\" notifications@github.com:\n\nwhats the point of doing this then? DH makes me so angry sometimes. \ud83d\ude20\n[image: index]\nhttps://cloud.githubusercontent.com/assets/410147/17463284/18121848-5ce0-11e6-9151-388e01cf6f01.png\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/825#issuecomment-238088240,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb2DKwT0FccB9V4dqqaam6iEfi4Wnks5qdfcrgaJpZM4Jagyp\n.\n. I could Push to the Repo on DH.\n\nAm 07.08.2016 5:18 nachm. schrieb \"Sameer Naik\" notifications@github.com:\n\nwhats the point of doing this then? DH makes me so angry sometimes. \ud83d\ude20\n[image: index]\nhttps://cloud.githubusercontent.com/assets/410147/17463284/18121848-5ce0-11e6-9151-388e01cf6f01.png\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/825#issuecomment-238088240,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb2DKwT0FccB9V4dqqaam6iEfi4Wnks5qdfcrgaJpZM4Jagyp\n.\n. The problem that you can push to automatic build is techonology related. DH doesn't diferenciate between a normal repository and a public automated repository for DH it's the same. So the main difference between them is that a public automated repository will be triggered from GitHub or Bitbucket and an Build will be started for the repository.\n\n@lazyfrosch It's okay when we use tags instead of branches, because what will happen when a new patch release comes out. We will retag the related Major version so both builds will be triggered.\n. The problem that you can push to automatic build is techonology related. DH doesn't diferenciate between a normal repository and a public automated repository for DH it's the same. So the main difference between them is that a public automated repository will be triggered from GitHub or Bitbucket and an Build will be started for the repository.\n@lazyfrosch It's okay when we use tags instead of branches, because what will happen when a new patch release comes out. We will retag the related Major version so both builds will be triggered.\n. The problem that you can push to automatic build is techonology related. DH doesn't diferenciate between a normal repository and a public automated repository for DH it's the same. So the main difference between them is that a public automated repository will be triggered from GitHub or Bitbucket and an Build will be started for the repository.\n@lazyfrosch It's okay when we use tags instead of branches, because what will happen when a new patch release comes out. We will retag the related Major version so both builds will be triggered.\n. Hey,\nit seems your issue is for the wrong repository. But I will try to help you with your problem. The problem is here that you want to share the specific mysql database date with two MySQL server (2 Processes). This is not the way how you should solve this. What you try in my opinion is to get High Availability or Replication of the database. This should be done by your self with the right container configuration and not sharing only the specific database folder. This can't work because 2 Process try to get access to folder and in the future one of the container will lose the race to get the access and than he will die. The problem is here that no synchronisation exist between the MySQL servers. This will be resolved by replication.\n. Hey,\nit seems your issue is for the wrong repository. But I will try to help you with your problem. The problem is here that you want to share the specific mysql database date with two MySQL server (2 Processes). This is not the way how you should solve this. What you try in my opinion is to get High Availability or Replication of the database. This should be done by your self with the right container configuration and not sharing only the specific database folder. This can't work because 2 Process try to get access to folder and in the future one of the container will lose the race to get the access and than he will die. The problem is here that no synchronisation exist between the MySQL servers. This will be resolved by replication.\n. Hey,\nit seems your issue is for the wrong repository. But I will try to help you with your problem. The problem is here that you want to share the specific mysql database date with two MySQL server (2 Processes). This is not the way how you should solve this. What you try in my opinion is to get High Availability or Replication of the database. This should be done by your self with the right container configuration and not sharing only the specific database folder. This can't work because 2 Process try to get access to folder and in the future one of the container will lose the race to get the access and than he will die. The problem is here that no synchronisation exist between the MySQL servers. This will be resolved by replication.\n. Hey,\ncould you post your environment variables which you are a currently using for the gitlab container. Please obfuscate them, so that aren't any secrets will be exposed. And which database did you use ?\n. Hey,\ncould you post your environment variables which you are a currently using for the gitlab container. Please obfuscate them, so that aren't any secrets will be exposed. And which database did you use ?\n. Hey,\ncould you post your environment variables which you are a currently using for the gitlab container. Please obfuscate them, so that aren't any secrets will be exposed. And which database did you use ?\n. Do you run GitHub enterprise ? If not you don't need to set OAUTH_GITHUB_URL. This is only required when you got GitHub enterprise. For me It seems your OAUTH_GITHUB_URL will break the gitlab.yml and so i can't be parsed and Pysch throws an error. \n. Do you run GitHub enterprise ? If not you don't need to set OAUTH_GITHUB_URL. This is only required when you got GitHub enterprise. For me It seems your OAUTH_GITHUB_URL will break the gitlab.yml and so i can't be parsed and Pysch throws an error. \n. LGTM \ud83d\udc9a . It's fine as it is.\n. LGTM \ud83d\udc9a . It's fine as it is.\n. @sameersbn What do you think ? If you okay with that than feel free to merge it. Accordingly to this we should think about #738 . It's for the same site. \n. @sameersbn What do you think ? If you okay with that than feel free to merge it. Accordingly to this we should think about #738 . It's for the same site. \n. @patrickc91  Thanks for the Hint.  In our normal case all repositories should have the correct permission, because when you start this container all directory permissions will be sanitized.\n@QuickJack  If is this the case that some permissions changed I would like to know where. So i can try to reproduce it and hopefully fix the problem. \n. I will close this issue now. I think it's resolved otherwise reopen this.\n. Tests are done. \n. Since you changed the configuration to https. I will be required to have the certificate of the gitlab container in the registry container when it's self signed or the ca not exists. So in this case REGISTRY_AUTH_TOKEN_REALM must be changed as well.\n. Done everything is working for me like excepted. I will start with release.\n. ping @sameersbn \n. I understand your frustration. In this case it's okay for me that we let GITLAB_CLONE_URL pointing to GitHub.\n. Hey @sameersbn,\nI got this problem again that tag does not exist on GitHub. I had this case with 8.14.2 (#994) and now with 8.15.0. I will switch to the gitlab clone url so it will work i tested it before. This should help us to make our releases easier as before. If we get problems with GitLab by shallow cloning we could switch back again and ping sometimes somebody that updates the tag on github.. The problem seems to be with your connection. You currently have no connection and so the package can't be fetched and installed. It starts here:\nFailed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/InRelease\nIf you have a deeper look I see use IPv6 for your container. It could be a routing problem because it says that your Network is unreachable.\n. So to clarify that. You added http_proxy to the postgresql container. That is the normal behaviour because Linux uses http_proxy as default for enable proxying in applications applications. I don't see why this should be an issue than of our container behaviour, because you can configure your proxy with http_proxy. What we can do is to describe this in a separate section / document and show the people how to solve it.\n. So far as I know you should upgrade to 8.0.5-1 as first step. Than you should be able to upgrade to 8.10.6 . Another important point is that since GitLab 8.6.0 the pg_trm extension is required for GitLab. So add to your postgresql environment variable DB_EXTENSION=pg_trgm. Your plan looks good to me. So I hope that I can help you  for more Upgrading information have a look at https://github.com/sameersbn/docker-gitlab#upgrading . Please give us feedback when you have it done or report it to this issue. After your Upgrade was successful and you have wrote your feedback. Close this issue. \n. Thanks for your detailed feedback \u2764\ufe0f . I hope you could upgrade successfully. You are right NGINX_MAX_UPLOAD_SIZE is replaced with GITLAB_MAX_OBJECT_SIZE this happened during 8.3.0 update. Yeah all DB_* and REDIS_* variables are required during the docker-compose v2 update. This happened because we run this as independent services. \n. Hey, \ni need some more information about your system. Which GitLab version do you use ?\n. It seems that your GITLAB_SECRETS_DB_KEY_BASE is shorter than 32 characters. So check this please. If this is true you need to update your projects. Before you do this make an backup. After this you can run a command for it.\n. Hey,\nI have currently no clue where the error comes from. @sameersbn any idea ?\n. I got a problem during the upgrade process. The problem is that when you upgrade your container to 8.10.7 the login form is missing. So that need to be resolved. \n. I resolved it by not jumping directly from 8.10.4 to 8.10.7. I upgraded all pervious versions.\n. I wll start to :shipit: \n. @sameersbn You are right. But this will enable redis sentinel as well. Do we support it ? Because GitLab says that it's a new experimental feature in 8.11.0. I will update it and test it how sentinel works. For more informations have look at  http://docs.gitlab.com/ce/administration/high_availability/redis.html#experimental-redis-sentinel-support\nAnother step that needs to be done is  to create the following keys in secrets.yml. There are new keys. They will automatically generated with 64 chars. So we need to introduce 2 two variables for the keys.\nyml\nsecret_key_base: \notp_key_base:\nIf we don't do that we got the following message during container startup.\n\ngitlab_1      | Missing Rails.application.secrets.secret_key_base for production environment. The secret will be generated and stored in config/secrets.yml.\ngitlab_1      | Missing Rails.application.secrets.otp_key_base for production environment. The secret will be generated and stored in config/secrets.yml.\n\nI will do the required steps today in the evening.\n. And we should support Koding. This needs to be tested as well.\n. Im finished with testing. I will start to release it.\n. Hey, \nthis seems to be an old error from the upstream. Which version do you run at the moment ?\n. Hey,\ni did some research and I found out that it's a problem in this version. Here is the related issue that i found for your problem https://gitlab.com/gitlab-org/gitlab-ce/issues/18403 . \n. Hey, \ncould you provide us more information about your GitLab version and it would be nice to know  if you are using SELinux. Could you post your configurations of the container as well. If you use a docker-compose file so please post this. Please obfuscate your personal data to let no one know about your url. \n. Thanks,\nI think I know your problem. The problem is that you try to mount path that are readonly, because on Docker for Mac. Docker runs only in a vm and get all it's volume through shared folders. By default the /srv folder will not be shared, so docker can't mount it. \n\nTo solve the problem you have several options. \n1. Share /srv from your OSX. Have a look of the screenshot for that.\n2. Use another location for example /Users/funkyLover/gitlab or something else. \nThis will solve your problems. \n. Sorry for my late late response. This is a nice command \ud83d\udc4d . \n. Hey,\nso far as I know it doesn't need any further steps. Could you provide us more information which version do you run ? .  It would be nice as well if you could let us see what happens in the production.log of GitLab when you are clicking this. \n. Hey, \nit seems that you don't set GITLAB_HTTPS to true. This let GitLab know that it's running under https. This could lead to an mixed content. If this not solves your problem let me know and we will make a deeper investigation.\n. Hey, \nthis could come from several ways. Did you change your GITLAB_SCRETS_OTP_KEY_BASE two times ? It should be set only once. Did you set GITLAB_SECRETS_SECRET_KEY_BASE as well. I tested it on some of my hosts and there i didn't get this issue. I need some more informations about it. Do you use Two-Factor  auth before 8.11.0\n. Could you check if you have an .secret in your container. It should be under the following path /home/git/gitlab\nSo if not. Try to restore to 8.10-7 and check if it's there. When it's exist there should be the correct values for otp.\n. @smcgivern I will update the README asap. \n@adamlc Set this value for GITLAB_SECRETS_SECRET_KEY_BASE as well. \n. @smcgivern If you want you could help us to improve our documentation. I would really appreciate it :green_heart: . Feel free to create a PR.\n. Thanks \ud83d\udc4d . I will update now the section of upgrading after this.\n. > If you're wondering what happened to 8.11.1, good eye! That version was pulled due to a packaging error.\nI will close this MR. It was bumped to early. So it made no sense to make a release for it instead I will release 8.11.2. Have a look at #865.\n. Which version of docker-composedo you use at the moment ?\n. Hey, \nplease show us your logs of /var/log/gitlab/gitlab/unicorn.stderr.log and /var/log/gitlab/supervisor/nginx.log. So we can have a deeper look into it.\n. Tests are finished. Done.\n. Okay thanks @bdwilton for your support on this. I will close this issue now because it's for me solved. \n. Tests are finished and it`s released. \n. Hey, \nsorry for my late response. Your problem is here that you don't configure correct your proxy. In the apache documentation (https://httpd.apache.org/docs/current/mod/mod_proxy.html#proxypass). You added the trailing slash at the wrong place. The trailing slash must be in your ProxyPass\nProxyPass /gitlab http://127.0.0.1:10080/gitlab/\nProxyPassReverse /gitlab http://127.0.0.1:10080/gitlab/\nAnd your relative environment variable should be in the in this state:\nGITLAB_RELATIVE_URL_ROOT=/gitlab\nYour current way works because the request will be successully redirected from our internally proxy. You should handle this in your own proxy iIn your case in your apache config). The difference with the trailing slash is that the proxy appends now your Url path, query and fragment correct.\n. \ud83d\udc4d \n. Hey,\ni use the docker registry without redis and I see no problems. It depends on what you need. If you need a good cache use redis. If you not using redis a local file cache will be used default by the registry.\n. Hey, \nsorry for the delay. This depends on your docker setup. I reckon that you don't receive the correct IP Address within the nginx-proxy container. This could be solved on several ways. There is in issue for that problem at jwilder/nginx-proxy repo. https://github.com/jwilder/nginx-proxy/issues/130 . There you should found more information. If you need more help feel free to ask.\n. Sorry for the delay. I will start with release now.\n. I will test this at the weekend and try to implement your proposed solution.\n. Done. I will start with the release\n. Hey,\nI didn't find any hidden cronjob. Is it a problem that your nas wakes up every hour ?\n. @thecolas You are right the problem comes from the ssl verification. Did you add your cert from REGISTRY_HTTP_TLS_CERTIFICATE to /etc/ssl/certs and update your ca certificates ? So GitLab will accept this cert. This step need to be done in every container that want to communicate with your registry. If you want to setup with self signed certificates you should create an own CA and deploy your root certificate in every container. So it will be easier to make additions. I would recommend to do this with a trusted certificate because there are a lot of certificates in the ssl store. I think we should do an visualization of your setup. So it's easier to understand and to solve this.\nEDIT: Sorry at all for my late response.\n. Hey, \na simple solution would to let the rancher load balancer terminate the ssl connection for you. Behind the load balancer you speak http only. \n. Hey,\nwhich version of docker/distribution do you use ? This seems to be a problem that your registry supports only the manifest v1 spec. I would recommend to upgrade to docker/distribution:2.4.1 or something higher like I said in the documentation. Could you post your docker-compose.yml \n. Could you post your gitlab configuration aswell ? I find currently no error.\n. Works. I will start with the release.\n. Hey,\nthis seems to be a duplicate of #866. The problem could be here that your GITLAB_SECRETS_DB_KEY_BASE is different from the imported Project. \n. Hey,\ncould you post the log output from sameersbn/gitlab:8.11.5? A way how you can do it would be to connect to your worker2 and run docker logs for the swarm container .\n. This seems that he can't connect to redis.\n. I will test this setup on the weekend. So after this i can report you my experience with swarmkit and docker-gitlab .\n. Hey, \nwhich version of the image do you use ? And did you set the correct env's for a user. By default you  should be asked for the root password. Please post your GitLab Container env's .\n. You should be asked for the password. Try to delete (Make a backup of your Database before) your database and restart the container after the initialization is done. It should work.\n. I can handle the next releases. If you want. \n. Nope \ud83d\ude05  I mean the next releases  of GitLab \ud83d\ude04 \n. I'm on it I test it and release it after it. I think this takes 30 mins. After this the release will happen. Tomorrow I will test and release every '1.12.X' .\n. Happy upgrading everyone \ud83d\ude04 \n. Hey @eisnerd,\nthanks for your hard work and patient. Our base image is updated now. I would cherry pick your 8.12.1 later after  we released 8.12.0. Otherwise it would be nice if you later rebase against master and then we could merge it instead of cherry-picking it.\n. @eisnerd  I tested your commit https://github.com/sameersbn/docker-gitlab/pull/905/commits/ce5a2a227891d8c554a2d2621b3fb2682b60db06 and it's LGTM. So rebase your PR and I will start with the next patch release.\n. Your PR contains now to two new versions. I would do it in separated PR's, because we need make it sure that every patch works with our image and so testing is a lot of easier. Your current state is that you leave 8.12.2 out and in 8.12.3 GitLab Shell will be updated as well that is currently missing by your commit. I would suggest that you let your 8.12.1 commit in this PR and we do the next patches in separated PR's.\n. Thanks \ud83d\udc4d now it LGTM. I will start with the tests now and and prepare everything for 8.12.1\n. By the way your update script looks very neat \ud83d\udc96 \n. Ups \ud83d\ude05 . \nI will refactor it later today. Yeah you are right the template from docker is quietly nice. \n. Hey, \nwhy didn't work it when you set SMTP_TLS to true. Does your SMTP server negotiates only SSLv3 or lower ?\n. @gianmarcotoso I'm quite not sure if you PR solves your problem for you and everyone else. For me it seems that you configure your mail settings not correctly. I had a look at possible omnibus configurations and here is an example for Mailgun. The equivalent configuration for our docker image would be:\nSMTP_HOST=smtp.mailgun.org\nSMTP_PORT=587\nSMTP_AUTHENTICATION=plain\nSMTP_STARTTLS=true\nSMTP_TLS=false\nSMTP_USER=postmaster@mg.gitlab.com\nSMTP_PASS= 8b6ffrmle180\nSMTP_DOMAIN=mg.gitlab.com\nCould you check it if it works like that ?\n. Okay you are right I misunderstood your intention. But a problem what I see is what happens when a user use SMTP_SSL=true and SMTP_TLS=true at the same time. Is it possible to run SSL and TLS on the same port ? And how handles ActionMailer this ? \n. I agree with @sameersbn . SSL and TLS are two different protocols. I can't predict the impact of this change. I can't create a tangible example for this problem. Because than I could reproduce this. I don't know what happens with action mailer when you try this. I will close it now.\n. So shall I prepare 8.12.2 after this you rebase again ? Could you make a separate for the update script there are somethings that I want to discuss.\n. Thanks for the work \ud83d\udc4d . LGTM. I will start with release. \n. Yeah thanks for hint I didn't saw the blog post about it. I will close this and work on 8.12.3.\n. @xueshanf At the moment there are no plans to support older security releases. The problem because we don't make security releases is that GitLab by it self is multi branched for every major version. This allows them to make fixes to older version. We are single branched and can go only straight forward. When we want to do this in single branch we need to rewrite the commit history and that is not a good idea. One solution for you would be to make a fork from us and do it by your own. I can help you if you want. For a general support for security releases we should discuss this an separate issue.\n. Could you provide more information of your docker setup ?\n. Same here.\nAm 17.10.2016 12:52 nachm. schrieb \"Tam\u00e1s T\u00f6r\u00f6k-Vistai\" \nnotifications@github.com:\n\n@Kaleesastha https://github.com/Kaleesastha For me it's working out of\nthe box. I'm using GitLab version 8.12.6\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/917#issuecomment-254175591,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb3fGctC9umrQVv75D6spJ0DuMd32ks5q01NygaJpZM4KO1ph\n.\n. Hey, \nthanks for the update. You missed to update our documentation for the container_registry.md . I will test this later / tomorrow in the morning. After this I will prepare the update. \n. So. I'm finished with the tests and it's working for me as excepted. I will start with the release.\n. Thanks for this I will look later into it and merged it when it's LGTM . Otherwise I would give you feedback to you PR.\n. Thanks for this I will look later into it and merged it when it's LGTM . Otherwise I would give you feedback to you PR.\n. Thanks for your work \ud83d\udc4d  . I will test your PR later and if everything works as excepted I will start with the release.\n. LGTM \n. No. Thanks for your work :+1: . I will test 8.12.5 and  release it and after this I will do the same for your pr. I will do this in the evening.\n. What I didn't see before you should rebase later against master when I release 8.12.5. After this I will start testing for 8.12.6\n. @VAdamec  Could you rebase it against master and make a single commit for the upgrade ? \n. I will test this feature within a week and will give you feedback after that. I hope it's okay for you. \n. Should this be done for nginx-ssl as well ? Is it a possible test case ? \n. LGTM ! Thanks for the work \ud83d\udc4d \n. @exreplay How did you resolve it ? A possible problem could GITLAB_REGISTRY_API_URL=https://registry.example.comthis should be in your case GITLAB_REGISTRY_API_URL=http://registry:5000\n. If you have more questions ping me. I hope I will recognize it \ud83d\ude02 \n. @msmarino Which database do you use ? MySQL or Postgresql ?\n. LGTM \ud83d\udc4d  !\n. Hey, \n\nif you want to speak both you need to add your on nginx config to (assets/runtime/configs/nginx)[https://github.com/sameersbn/docker-gitlab/tree/master/assets/runtime/config/nginx] . I would not recommend this. I would use HTTPS only because why do you want HTTP ?\n. If you really want plain http use the port of gitlab-workhose and expose it.  It's under 8181 here is commit that was made for https://github.com/sameersbn/docker-gitlab/commit/70dc29de1a1c6b226c4e5f9e8c45fb3ae0136170  . But this will not be supported .\n. I will test this today and release it after it.\n. LGTM ! \n. Hey, \nfor me this sounds like a problem with implementation of volume driver. Otherwise you could do a fork and do it by your own. If I can help you let me know. \n. @maikelvl You are correct. What GitLab does it will be used as authentication provider for the registry. You don't need to use the all in one solution. But this docs needed an update. I had no time for this and @maikelvl  did the great work.  This will be tested before we merge it. I want to do some other stuff because the impact  will not so hard for current users what I see. \n. I need some time for it. I hope i can make it today or tomorrow. Otherwise I would appreciate a WIP PR for the next update. \n. Hey, \ni tested it on 2 case with an clean environment and update everything works for me as excepted, but I'm still confused with this auto merging issue.\n. @reynold-lariza  Thanks for your report. I will wait on your next test. Later at the day I will try to reproduce it.\n@sameersbn I didn't make it yesterday, because of my spare time.\n. @adimit Please create the PR for 8.13.1 in this repo. So we can track it and better maintain it.\n. So the error comes from the upstream but is fixed in 8.13.1. I will start with release of 8.13 now and will release 8.13.1 shortly. \n@Pegasuz Thanks for your work and patient.\n. @reynold-lariza Okay so the error comes from the upstream but it's fixed. I will work on the 8.13.0 release and after that I will work on 8.13.1 \n@adimit Are you there ? So you need to rebase later that I can start with testing and merging of the patch version.\n. @adimit You can start with a rebase the changelog needs it. And could you chnage your commit message to Upgrade to Gitlab 8.13.1.\n. Thanks I will work on this now.\n. LGTM ! I will start with release.\n. At the moment I don't see  why we should add further column. Newly added variables are listed in Changelog.md .\n. Hey, \ni will close this. Because it's a problem in the upstream. \n. Hey,\nthanks for the info. I will prepare a release for it when the tag is available. \n. It will be fixed in latest tag. You need only to wait when the build is done have a look at https://hub.docker.com/r/sameersbn/gitlab/builds/ . Thanks for your patient and work on it.\n. Hey,\nthanks for your work \ud83d\udc4d but your commit messages seems to be broken. I would prefer a single commit that is named  gitlab: upgrade CE to 8.13.3. What you need to do as well is to rebase against master, because I released 8.13.2.\n. @reynold-lariza  ??\n. Your commit message is broken again. Could you fix it ? \n. LGTM ! \n. It will be fixed in latest tag. You need only to wait when the build is done have a look at https://hub.docker.com/r/sameersbn/gitlab/builds/  . \n. You were faster \ud83d\ude04 . I was atm to start working on the fix. Thanks for your work. I will be available on latestand later in 8.13.3 but this needs to be tested first. This fixes #949  as well.\n. It's merged . I wil be available in latestand later in 8.13.3\n. Thanks \ud83d\udc4d  . LGTM ! I will merge this .\n. Sorry I will use #948 . It's okay for that are are two commits, because they do different things.\n. Hey, which database do you use ?\n. Hey,\nI don't see this as a feature of the makefile, because the purpose of makefile should help to create an image and test it. In your case you want to maintain the container of the image. \n\nEDIT: Also, why is it advised to take gitlab offline before making backups?\n\nThis should prevent inconsistencies between your current running and the current state of the backup process. So this ensures that your backup isn't corrupted with different data to your running container. \n. Hey,\ncould you post your production.log. It would help to resolve the source of the error.\n. Thanks for the PR \ud83d\udc4d . I'm working on it  to test it. After this I will start with the release.\n. LGTM ! \n. Hey, \nthis could be solved when you fork this and implement you own nginx configuration . \n. Hey,\nthis is not correct you can map every port explicitly with -p . I think you use -P and if this port need to be exposed depends on your setup. \n. Hey @ariel17,\nin this example we use nginx to proxy the registry and the nginx runs under 5500 so we expose this.\n- \"5500:5500\"\n. Thanks \ud83d\udc4d  . Fortunately  nobody has recognized it \ud83d\ude05  . \n. Hey,\nyes of course. You can mount your sshd configration to /etc/ssh/sshd_config with your configuration options. But If you do that please merge this with current configuration of /etc/ssh/sshd_config in the container. Because during the build of the image we made some changes to the norma sshd_config. If you want to know what. Have a look at \nhttps://github.com/sameersbn/docker-gitlab/blob/master/assets/build/install.sh#L142 . If you have further question feel free to ask.\n. Hey, \nI don't see this because it's not supported by the upstream and our image should be near as possible to the gitlab community edition. If you want to do this feel free to make a fork and implement it by our own. If you need help feel free to ask :) .\n. Hey @mindriven,\nat first view I see that your DB_HOST  in your docker-compose.yml ist not correct, because you use 2 two different mechanisms. At the docker run command you use links to inter communication between your containers. In your docker-compose.yml you use networks. The problem is here that in a docker network you can you the normal container name. In your case it would postgresql. Try to ping it from the gitlab container. I hope that I could help . A fix would be DB_HOST=postgresql\n. I will release it today :). . LGTM ! :). Thanks :) . Hey,\nit seems that your backup command isn't correct. Because you try to make a backup as the root user. I indicated it because he looks on a different home as the diffened user. I would recommend to set the -H option from sudo and -e aswell. For more information about sudo have a look at https://linux.die.net/man/8/sudo\nSo the correct command would be:\nsudo -HEu git bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production\nIf you use docker-compose I would recommend to use this 2 docker-compose commands to make your backup. #987 \n. Hey,\non the stable branch is 1.0.0and at the update guide as well.\nHere are the links:\nhttps://gitlab.com/gitlab-org/gitlab-ce/blob/8-14-stable/GITLAB_WORKHORSE_VERSION\nhttps://github.com/gitlabhq/gitlabhq/blob/master/doc/update/8.13-to-8.14.md. Or now \ud83d\ude1b . @reynold-lariza  I think this shouldn't be ignored. We need this for 8.14.0. \n@phenomax Thanks for your work. I will test this later and merge it .\n. @phenomax Could you please make a seperate pull request for the 8.14.1 update, because I wan't to release an updated version of 8.14.0. Futhermore I would appreciate that your commit message for the upgrade look like Upgrade to GitLab 8.14.1 . . Hey,\nyour problem is that your DB_* Parameters aren't configured. If you don't define them, the gitlab container will except that  your Database is available on localhost. What you need to  do is to add the correct DB_* Parameters. For all available Parameters you can have a look at https://github.com/sameersbn/docker-gitlab#available-configuration-parameters . Futhermore I would recommend to use the docker-compose file or use an env-file to configure the GitLab Container.\n. Hey, \nyes there are several ways to make a backup with docker-compose. This is one solution:\ncreate backup\ndocker-compose run --rm gitlab app:rake gitlab:backup:create\nrestore backup\ndocker-compose run --rm gitlab app:rake gitlab:backup:restore BACKUP=1460905799\nBefore you start with a backup please shutdown your gitlab container to prevent inconsistency of your database.. For me it's not a real problem to see the workhorse version in the admin panel with 1.0.1 it's isn't. I won't update to 1.1.0 until it's on the 8-14-stable branch. The hole issue should be resolved in the upstream. Sorry for that. But If you wan't to test it with 1.1.0 than make your fork and try it.. Thanks for your work. LGTM ! . . Waiting for a sync of https://github.com/gitlabhq/gitlabhq .\nPing @smcgivern could you let this happen ? \n. @smcgivern Last time we switched to gitlab.com we got some problems with shallow cloning. Here is a pr for that #842 .\nI have a second question why is the github repo not automically mirrored from gitlab. This could be done by a CI Job \ud83d\ude04  .\nBut thanks anyway for the work \ud83d\ude04  . \n. I updated gitlab to 8.15+ so for me this problem doesn't exist anymore. Can anyone upgrade his system and say if it works ?. Hey,\nthis seems to be an issue with your mysql database. I don't recommend to use mysql with Gitlab because in the upstream I won't be supported as well. For some more informations look at #983 .. Hey,\nwhat do you mean with container stopping ? . Hey @mgansler, \non the GitLab Repo there is a file that is called GITLAB_WORKHORSE_VERSION i check this on the stable branch for the version.  If you click on my link there will be redirected to the stable branch and to content of the GITLAB_WORKHORSE_VERSION . \nI currently have no direct upgrade checklist but we could do this with an CONTRIBUTING.md to collect all informations for a contribution in the context of upgrade this docker image .\n. @adamlc Sorry for the delay. I updated the gitlab version to 8.15+ and it should work now. Could you upgrade your GitLab version and say if it works ? . Hey,\ncould you post your configuration and more information about it ? . LGTM ! . I think this isn't mentioned for us. So I will close this one.. Hey,\nyou missed some environment variables to start the gitlab container. What you need to set are the following envs GITLAB_SECRETS_OTP_KEY_BASE, GITLAB_SECRETS_DB_KEY_BASE, and GITLAB_SECRETS_SECRET_KEY_BASE.  For an explanation have a look at the QuickStart. Hey,\nso far what I know is that at the moment metrics are available in the runner. With your hint we will get metrics for the gitlab-workhorse. But what you can do is to support us with an pr that enables the metrics from workhorse. After that a documentation for the use should be written. . Hey,\n@IlyaSemenov wrote a guide about it. It is on a pr #737 feel free to use it. . Hey, \nthis problem comes from upstream. So we need to wait when it's got fixed in the upstream.. Hey, \nyou could start your GitLab container with DEBUG=true and see the complete output. Probably it could be a permission problem. But our container sets the correct permission on the first initialize otherwise you can do it by hand with docker  run ..... sameersbn/gitlab:8.14.5 app:sanitize. LGTM !. Hey, \nfor me it seems that you use different approaches to get your network working. This could lead to your problem. Why do you use network_mode: bridge and not networks ? If you are working with networks you don't need any links: anymore.. Hey, \nthanks for this PR. But for a Minor Releases we need more to do.  What's is missing in your PR. \n\n[x] Update GitLab workhose version\n[x] Update GitLab shell version\n[x] Update all configurations that are under assets/runtime/config\n\nIn the blog post i read about that they want to use Postgressql 9.6 so we need to update this image as well. Another point is to check if the base image can be updated. \n. Please make separate commits for gitlab shell and gitlab workhorse . @timfeirg Let's please do one Step after the other. So let's focus to ship 8.15.0 . For the patch make an separate PR. I will have look for the configuruation updates later and send you a patch. . Merry Christmas ! \nHere all configuration related changes for 8.15.0. @timfeirg  could you apply these git-patches to your branch ?\n```\nFrom aa215412bd0988d3dbc4346aeedf52fb2dfd9ff3 Mon Sep 17 00:00:00 2001\nFrom: solidnerd niclas@mietz.io\nDate: Sat, 24 Dec 2016 21:45:36 +0100\nSubject: [PATCH 1/4] Add GITLAB_MATTERMOST_ENABLED and GITLAB_MATTERMOST_URL\nSigned-off-by: solidnerd niclas@mietz.io\nREADME.md                                 | 2 ++\n assets/runtime/config/gitlabhq/gitlab.yml | 6 ++++++\n assets/runtime/env-defaults               | 4 ++++\n assets/runtime/functions                  | 8 ++++++++\n 4 files changed, 20 insertions(+)\ndiff --git a/README.md b/README.md\nindex 998ac11..f2b8311 100644\n--- a/README.md\n+++ b/README.md\n@@ -833,6 +833,8 @@ Below is the complete list of available options that can be used to customize yo\n | GITLAB_ARTIFACTS_DIR | Directory to store the artifacts. Defaults to $GITLAB_SHARED_DIR/artifacts |\n | GITLAB_LFS_ENABLED | Enable/Disable Git LFS support. Defaults to true. |\n | GITLAB_LFS_OBJECTS_DIR | Directory to store the lfs-objects. Defaults to $GITLAB_SHARED_DIR/lfs-objects |\n+| GITLAB_MATTERMOST_ENABLED | Enable/Disable GitLab Mattermost for Add Mattermost button. Defaults to false. |\n+| GITLAB_MATTERMOST_URL | Sets Mattermost URL. Defaults to https://mattermost.example.com. |\n | GITLAB_BACKUP_SCHEDULE | Setup cron job to automatic backups. Possible values disable, daily, weekly or monthly. Disabled by default |\n | GITLAB_BACKUP_EXPIRY | Configure how long (in seconds) to keep backups before they are deleted. By default when automated backups are disabled backups are kept forever (0 seconds), else the backups expire in 7 days (604800 seconds). |\n | GITLAB_BACKUP_PG_SCHEMA | Specify the PostgreSQL schema for the backups. No defaults, which means that all schemas will be backed up. see #524 |\ndiff --git a/assets/runtime/config/gitlabhq/gitlab.yml b/assets/runtime/config/gitlabhq/gitlab.yml\nindex fd01ba9..e619c48 100644\n--- a/assets/runtime/config/gitlabhq/gitlab.yml\n+++ b/assets/runtime/config/gitlabhq/gitlab.yml\n@@ -155,6 +155,12 @@ production: &base\n     # The location where LFS objects are stored (default: shared/lfs-objects).\n     storage_path: {{GITLAB_LFS_OBJECTS_DIR}}\n\n\nMattermost\n\n\nFor enabling Add to Mattermost button\n\nmattermost:\nenabled: {{GITLAB_MATTERMOST_ENABLED}}\nhost: '{{GITLAB_MATTERMOST_URL}}'\n+\n   ## Gravatar\n   ## For Libravatar see: http://doc.gitlab.com/ce/customization/libravatar.html\n   gravatar:\ndiff --git a/assets/runtime/env-defaults b/assets/runtime/env-defaults\nindex 9a877fc..d37939c 100644\n--- a/assets/runtime/env-defaults\n+++ b/assets/runtime/env-defaults\n@@ -105,6 +105,10 @@ GITLAB_ARTIFACTS_DIR=\"${GITLAB_ARTIFACTS_DIR:-$GITLAB_SHARED_DIR/artifacts}\"\n GITLAB_LFS_ENABLED=${GITLAB_LFS_ENABLED:-true}\n GITLAB_LFS_OBJECTS_DIR=\"${GITLAB_LFS_OBJECTS_DIR:-$GITLAB_SHARED_DIR/lfs-objects}\"\n\n+## Mattermose\n+GITLAB_MATTERMOST_ENABLED=${GITLAB_MATTERMOST_ENABLED:-false}\n+GITLAB_MATTERMOST_URL=${GITLAB_MATTERMOST_URL:-https://mattermost.example.com}\n+\n GITLAB_SECRETS_DB_KEY_BASE=${GITLAB_SECRETS_DB_KEY_BASE:-}\n GITLAB_SECRETS_SECRET_KEY_BASE=${GITLAB_SECRETS_SECRET_KEY_BASE:-}\n GITLAB_SECRETS_OTP_KEY_BASE=${GITLAB_SECRETS_OTP_KEY_BASE:-}\ndiff --git a/assets/runtime/functions b/assets/runtime/functions\nindex 56be271..4b907c0 100644\n--- a/assets/runtime/functions\n+++ b/assets/runtime/functions\n@@ -832,6 +832,13 @@ gitlab_configure_lfs() {\n     GITLAB_LFS_OBJECTS_DIR\n }\n+gitlab_configure_mattermost() {\n+  echo \"Configuring gitlab::mattermost...\"\n+  update_template ${GITLAB_CONFIG} \\\n+    GITLAB_MATTERMOST_ENABLED \\\n+    GITLAB_MATTERMOST_URL\n+}\n+\n gitlab_configure_project_features() {\n   echo \"Configuring gitlab::project_features...\"\n   update_template ${GITLAB_CONFIG} \\\n@@ -1242,6 +1249,7 @@ configure_gitlab() {\n   gitlab_configure_ci\n   gitlab_configure_artifacts\n   gitlab_configure_lfs\n+  gitlab_configure_mattermost\n   gitlab_configure_project_features\n   gitlab_configure_mail_delivery\n   gitlab_configure_mailroom\n-- \n2.11.0\n\nFrom 0112605c070557825fcdfd335de1fdca314e1d0a Mon Sep 17 00:00:00 2001\nFrom: solidnerd niclas@mietz.io\nDate: Sat, 24 Dec 2016 22:03:02 +0100\nSubject: [PATCH 2/4] Add OAUTH Authentiq support\nSigned-off-by: solidnerd niclas@mietz.io\nREADME.md                                 |  4 ++++\n assets/runtime/config/gitlabhq/gitlab.yml |  4 ++++\n assets/runtime/env-defaults               |  6 ++++++\n assets/runtime/functions                  | 14 ++++++++++++++\n 4 files changed, 28 insertions(+)\ndiff --git a/README.md b/README.md\nindex f2b8311..97ff3d9 100644\n--- a/README.md\n+++ b/README.md\n@@ -940,6 +940,10 @@ Below is the complete list of available options that can be used to customize yo\n | OAUTH_FACEBOOK_APP_SECRET | Facebook App API secret. No defaults. |\n | OAUTH_TWITTER_API_KEY | Twitter App API key. No defaults. |\n | OAUTH_TWITTER_APP_SECRET | Twitter App API secret. No defaults. |\n+| OAUTH_AUTHENTIQ_CLIENT_ID | authentiq Client ID. No defaults. |\n+| OAUTH_AUTHENTIQ_CLIENT_SECRET | authentiq Client secret. No defaults. |\n+| OAUTH_AUTHENTIQ_SCOPE | Scope of Authentiq Application Defaults to 'aq:name email~rs address aq:push'|\n+| OAUTH_AUTHENTIQ_REDIRECT_URI |  Callback URL for Authentiq. No defaults. |\n | OAUTH_GITHUB_API_KEY | GitHub App Client ID. No defaults. |\n | OAUTH_GITHUB_APP_SECRET | GitHub App Client secret. No defaults. |\n | OAUTH_GITHUB_URL | Url to the GitHub Enterprise server. Defaults to https://github.com |\ndiff --git a/assets/runtime/config/gitlabhq/gitlab.yml b/assets/runtime/config/gitlabhq/gitlab.yml\nindex e619c48..51643ca 100644\n--- a/assets/runtime/config/gitlabhq/gitlab.yml\n+++ b/assets/runtime/config/gitlabhq/gitlab.yml\n@@ -371,6 +371,10 @@ production: &base\n                   login_url: '{{OAUTH_CAS3_LOGIN_URL}}',\n                   service_validate_url: '{{OAUTH_CAS3_VALIDATE_URL}}',\n                   logout_url: '{{OAUTH_CAS3_LOGOUT_URL}}'} }\n+       - { name: 'authentiq',\n+          app_id: '{{OAUTH_AUTHENTIQ_CLIENT_ID}}',\n+          app_secret: 'OAUTH_AUTHENTIQ_CLIENT_SECRET',\n+          args: { scope: {{OAUTH_AUTHENTIQ_SCOPE}}, redirect_uri: '{{OAUTH_AUTHENTIQ_REDIRECT_URI}}' } }\n       - { name: 'github',\n           label: 'GitHub',\n           app_id: '{{OAUTH_GITHUB_API_KEY}}',\ndiff --git a/assets/runtime/env-defaults b/assets/runtime/env-defaults\nindex d37939c..92674d2 100644\n--- a/assets/runtime/env-defaults\n+++ b/assets/runtime/env-defaults\n@@ -266,6 +266,12 @@ OAUTH_FACEBOOK_APP_SECRET=${OAUTH_FACEBOOK_APP_SECRET:-}\n OAUTH_TWITTER_API_KEY=${OAUTH_TWITTER_API_KEY:-}\n OAUTH_TWITTER_APP_SECRET=${OAUTH_TWITTER_APP_SECRET:-}\n+## Authentiq\n+OAUTH_AUTHENTIQ_CLIENT_ID=${OAUTH_AUTHENTIQ_CLIENT_ID:-}\n+OAUTH_AUTHENTIQ_CLIENT_SECRET=${OAUTH_AUTHENTIQ_CLIENT_SECRET:-}\n+OAUTH_AUTHENTIQ_SCOPE=${OAUTH_AUTHENTIQ_SCOPE:-'aq:name email~rs address aq:push'}\n+OAUTH_AUTHENTIQ_REDIRECT_URI=${OAUTH_AUTHENTIQ_REDIRECT_URI:-}\n+\n ### GITHUB\n OAUTH_GITHUB_API_KEY=${OAUTH_GITHUB_API_KEY:-}\n OAUTH_GITHUB_APP_SECRET=${OAUTH_GITHUB_APP_SECRET:-}\ndiff --git a/assets/runtime/functions b/assets/runtime/functions\nindex 4b907c0..478ac0f 100644\n--- a/assets/runtime/functions\n+++ b/assets/runtime/functions\n@@ -489,6 +489,20 @@ gitlab_configure_oauth_twitter() {\n   fi\n }\n+gitlab_configure_oauth_authentiq() {\n+  if [[ -n ${OAUTH_AUTHENTIQ_CLIENT_ID} && -n ${OAUTH_AUTHENTIQ_CLIENT_SECRET} ]]; then\n+    echo \"Configuring gitlab::oauth::authentiq...\"\n+    OAUTH_ENABLED=${OAUTH_ENABLED:-true}\n+    update_template ${GITLAB_CONFIG} \\\n+      OAUTH_AUTHENTIQ_CLIENT_ID \\\n+      OAUTH_AUTHENTIQ_CLIENT_SECRET \\\n+      OAUTH_AUTHENTIQ_SCOPE \\\n+      OAUTH_AUTHENTIQ_REDIRECT_URI \n+  else\n+    exec_as_git sed -i \"/name: 'authentiq'/,/{{OAUTH_AUTHENTIQ_SCOPE}}/d\" ${GITLAB_CONFIG}\n+  fi\n+}\n+\n gitlab_configure_oauth_github() {\n   if [[ -n ${OAUTH_GITHUB_API_KEY} && -n ${OAUTH_GITHUB_APP_SECRET} ]]; then\n     echo \"Configuring gitlab::oauth::github...\"\n-- \n2.11.0\n\nFrom c1fd9d3bdd36105d94648b7fb8c10cf56b413344 Mon Sep 17 00:00:00 2001\nFrom: solidnerd niclas@mietz.io\nDate: Sun, 25 Dec 2016 11:19:12 +0100\nSubject: [PATCH 3/4] Fix Typos and Grammar\n\nassets/runtime/config/gitlabhq/unicorn.rb | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\ndiff --git a/assets/runtime/config/gitlabhq/unicorn.rb b/assets/runtime/config/gitlabhq/unicorn.rb\nindex 54d05d8..62f650c 100644\n--- a/assets/runtime/config/gitlabhq/unicorn.rb\n+++ b/assets/runtime/config/gitlabhq/unicorn.rb\n@@ -44,7 +44,7 @@ listen \"127.0.0.1:8080\", :tcp_nopush => true\n # nuke workers after 30 seconds instead of 60 seconds (the default)\n #\n # NOTICE: git push over http depends on this value.\n-# If you want be able to push huge amount of data to git repository over http\n+# If you want to be able to push huge amount of data to git repository over http\n # you will have to increase this value too.\n #\n # Example of output if you try to push 1GB repo to GitLab over http.\n-- \n2.11.0\n\nFrom 42380f7072501edc27b741a213a8e1f42c2750d1 Mon Sep 17 00:00:00 2001\nFrom: solidnerd niclas@mietz.io\nDate: Sun, 25 Dec 2016 11:20:53 +0100\nSubject: [PATCH 4/4] Update NGINX configuration files to add websocket support\n\nassets/runtime/config/nginx/gitlab     | 7 +++++++\n assets/runtime/config/nginx/gitlab-ssl | 8 ++++++++\n 2 files changed, 15 insertions(+)\ndiff --git a/assets/runtime/config/nginx/gitlab b/assets/runtime/config/nginx/gitlab\nindex 6cba103..701437f 100644\n--- a/assets/runtime/config/nginx/gitlab\n+++ b/assets/runtime/config/nginx/gitlab\n@@ -20,6 +20,11 @@ upstream gitlab-workhorse {\n   server localhost:8181 fail_timeout=0;\n }\n+map $http_upgrade $connection_upgrade_gitlab {\n+    default upgrade;\n+    ''      close;\n+}\n+\n ## Normal HTTP host\n server {\n   ## Either remove \"default_server\" from the listen line below,\n@@ -56,6 +61,8 @@ server {\n     proxy_set_header    X-Real-IP           $remote_addr;\n     proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;\n     proxy_set_header    X-Forwarded-Proto   {{NGINX_X_FORWARDED_PROTO}};\n+    proxy_set_header    Upgrade             $http_upgrade;\n+    proxy_set_header    Connection          $connection_upgrade_gitlab;\n proxy_pass http://gitlab-workhorse;\n\n}\ndiff --git a/assets/runtime/config/nginx/gitlab-ssl b/assets/runtime/config/nginx/gitlab-ssl\nindex 22ba6bb..786eda1 100644\n--- a/assets/runtime/config/nginx/gitlab-ssl\n+++ b/assets/runtime/config/nginx/gitlab-ssl\n@@ -24,6 +24,11 @@ upstream gitlab-workhorse {\n   server localhost:8181 fail_timeout=0;\n }\n+map $http_upgrade $connection_upgrade_gitlab {\n+    default upgrade;\n+    ''      close;\n+}\n+\n ## Redirects all HTTP traffic to the HTTPS host\n server {\n   ## Either remove \"default_server\" from the listen line below,\n@@ -103,6 +108,9 @@ server {\n     proxy_set_header    X-Forwarded-Ssl     on;\n     proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;\n     proxy_set_header    X-Forwarded-Proto   {{NGINX_X_FORWARDED_PROTO}};\n+    proxy_set_header    Upgrade             $http_upgrade;\n+    proxy_set_header    Connection          $connection_upgrade_gitlab_ssl;\n+  \n     proxy_pass http://gitlab-workhorse;\n   }\n-- \n2.11.0\n```. > I've added your patch as a separate commit, should I git commit --amend them instead? @solidnerd\nYou can use git am to apply all patches .  So for the proccess copy every code block in a file that is called xxx.patchand then you can use git am to apply those. \nIt's quite easy with git am *.patch . If you need more help feel free to ask :) . . @mrslain You are right \ud83d\ude04  . \nHere is the fix:\n```\nFrom 1356692fe87349bf427f1f70a4828cc26844ec2a Mon Sep 17 00:00:00 2001\nFrom: solidnerd niclas@mietz.io\nDate: Sun, 25 Dec 2016 15:46:43 +0100\nSubject: [PATCH 5/5] FIX OAUTH_AUTHENTIQ configuration proccess\n\nassets/runtime/functions | 1 +\n 1 file changed, 1 insertion(+)\ndiff --git a/assets/runtime/functions b/assets/runtime/functions\nindex 478ac0f..4814286 100644\n--- a/assets/runtime/functions\n+++ b/assets/runtime/functions\n@@ -637,6 +637,7 @@ gitlab_configure_oauth() {\n   gitlab_configure_oauth_google\n   gitlab_configure_oauth_facebook\n   gitlab_configure_oauth_twitter\n+  gitlab_configure_oauth_authentiq\n   gitlab_configure_oauth_github\n   gitlab_configure_oauth_gitlab\n   gitlab_configure_oauth_bitbucket\n-- \n2.11.0\n```. @timfeirg You are welcome ! That's the way it should be \ud83d\udc4d  . \nI will start with testing later and will prepare the last things for a release. . LGTM ! for everything so I released it.. At the moment it's not needed to upgrade postgresql. On the first I misinterpretted the message of blog post. But what's actually says is that the update there omnibus postgresql from 9.2.8 to 9.6.1 and you have now the abillity to do an pg-upgrade easily. \nThis is not needed for the image because the image from sameersbn checks the version and do a pg-upgrade when a newer version will be used.\nI run currently 8.15.1 with postgresql 9.5.4 and everything wokrs for me as excepted. Update the base image happens through eafe2bd7e65e3e3ed90b007703bda0d8933cfeaf .\nBut I prepared a PR for that in the related repository . . I thought that I answered on your PR  \ud83d\ude05 . \nOn the first view it's look very neat .\nI will test it with the 8.15.0 release and if everything works as excepted I will merge this. . I thought a little more about it and I would prefer that we add more logic in the shell script to cover all storage provider that are supported by fog and gitlab. We should have not so much changes in the gitlab.yml . For me i think it would be good that we have only the provider environment variable and add the rest dynamically dependent from the provider.\n. Hey, \nsorry for my delay. I thought a little more about it. I would be fine with it when we have the following logic. \nConstraint: \n- You can set only one of Cloud Backups AWS OR GCS\n- Both set will be result in an error.\n\nIf Both not set than delete the upload key\nIf AWS is set than fill the upload: key with aws related envs if all required not empty.\nIf AWS is not set and GCS is set than check the gcs envs.\n\nSo far what I see is that all logic is implemented. \nI wouldn't introduce a new key. I would duplicate only the connection key with google provider and document it that this one will be removed or the google connection.\n. Like this ?\nyaml  \nupload:\n     # One of the connection provider will be used\n     # Only Once can be used at the time.\n      # Fog storage connection settings, see http://fog.io/storage/ .\n      connection:\n        provider: AWS\n        region: {{AWS_BACKUP_REGION}}\n        aws_access_key_id: {{AWS_BACKUP_ACCESS_KEY_ID}}\n        aws_secret_access_key: '{{AWS_BACKUP_SECRET_ACCESS_KEY}}'\n      # The remote 'directory' to store your backups. For S3, this would be the bucket name.\n      remote_directory: '{{AWS_BACKUP_BUCKET}}'\n       # Use multipart uploads when file size reaches 100MB, see\n       #  http://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html\n       # multipart_chunk_size: 104857600\n       # Turns on AWS Server-Side Encryption with Amazon S3-Managed Keys for backups, this is optional\n       # encryption: 'AES256'\n     # Fog storage connection settings, see http://fog.io/storage/ .\n      connection:\n        provider: Google\n        google_storage_access_key_id: {{GCS_BACKUP_ACCESS_KEY_ID}}\n        google_storage_secret_access_key: '{{GCS_BACKUP_SECRET_ACCESS_KEY}}'\n      remote_directory: '{{GCS_BACKUP_BUCKET}}'. Sorry for my late delay and thanks for you patient. I want to merge this. This will be on latest and later in the next release 8.16.5 .. I fixed it. I will be available on latest und later in 8.15.1 .. LGTM ! \n. If have the feeling that this bug exists only on our Image. So far what I know is that GitLab Workhorse passes his version via a http request header to the rails application. . I will close this because it's fixed now with #1187 and will be available in 9.1.0-1 or latest.. Hey,\nthese functions are related to this issue. https://gitlab.com/gitlab-org/gitlab-ce/issues/24769. The reason ist that im currently not available for this because I'm at the\n33c3. I will check this during my train travel in the evening.\nAm 30.12.2016 3:44 nachm. schrieb \"Max\" notifications@github.com:\n\nAny reasons for the delay?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1039#issuecomment-269779103,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb-yMFn0kf2kxkQq1GbgjsmFqPb0xks5rNRjWgaJpZM4LXWV0\n.\n. LGTM ! . Hey,\nwhat you can do is to format your file correctly and try to restore it again.\n\nSo copy the EPOCH from your file and check the date with date -d @1482721258 from your backup 1482721258_gitlab_backup.tar .\nRename your file  like @adamniedzielski said so in this case it would be 1482721258_2016_12_26_gitlab_backup.tar. \nNow you can exec the command as follow:\ndocker-compose run --rm gitlab app:rake gitlab:backup:restore BACKUP=1482721258_2016_12_26. I will have look tomorrow in it and give you feedback.. Hey,\nIt depends which storage backend do you use with the registry. You need only to skip the registry backup if you use the local storage otherwise gitlab can't do backups of your registry for you. \nYou don't need to change any dir. What you need to do is that skip some parts of the backup process. This can be done by:\nbash\ndocker-compose run --rm gitlab app:rake gitlab:backup:create SKIP=\"registry\"\nFor more information what you can skip have a look at this:\nhttps://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/raketasks/backup_restore.md. https://github.com/sameersbn/docker-gitlab/pull/1051/files#diff-a5e54d1fd7bb69a228ef0dcd2431367e ?. LGTM ! . @sameersbn This requires in my opinion an update of our maintenance workflow and branching model. Why GitLab can do that is that they have for every minor version an own branch. If we want to release it. We need to work with docker hub hooks. Furthermore I see this only if we got tests for our setup. The overhead comes from that we want to support old versions than It's not more overhead to support one or two versions before the current version. With the same branch strategy we are able to do it. But first I want automated tests for it.. For information about the build hooks. I can provide you some information https://docs.docker.com/docker-cloud/builds/advanced/ . This Hooks works as well on Docker Hub.Then we can control the process of builds.. Here is my personal list that things we need to releasise it.\n- [ ] Docker Build Hooks\n- [ ] Version branches\n- [ ] Automated tests \n- [ ] Updated .gitlab-ci.yml to cover tests \n- [ ] Contribution Guide \n- [ ] Description of the Branch Model. Looks better to me \ud83d\udc4d than #1049 \n. Hey,\nthanks for the work and the pr. Please make an single commit for the GitLab Workhorse Version. \nFurthermore did you check everything ?\n\n[x] Update GitLab Workhorse version\n[ ] Update GitLab shell version\n[ ] Update all configurations that are under assets/runtime/config\n\nFor this PR don't create a new one instead use rebase to order you commit and squash them if it's needed.\n. Sorry for my delay. I will check it out on the evening with #1070 and #1070. I hope it's okay for you all. LGTM ! . @phenomax There were a discussion about it in #1058  .. Hey,\nthis will be resolved if we use docker hub hooks to do this. At the moment for every commit a new build will be triggered what we need to do after we pushed a version to docker hub than should happen a docker push for latest as well. I will think about it and will report you. There are currently some maintenance discussions so I'm positive that we can solve this.. I will release it tonight.\nAm 08.02.2017 7:18 nachm. schrieb \"Kuchaev Ilya\" notifications@github.com:\n\nAny news here?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1080#issuecomment-278415398,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gby1rleyJMrXiiz-oCjHmaXLny1Z3ks5ragb2gaJpZM4L3aw9\n.\n. This isn't needed any more in favor of #937 .. Hey, \nI won't merge this release until we have all steps from #1058  realised in a good manner. So that we are able to maintain this otherwise I can't see it how we can support this.. LGTM !. Nope . It's currently not built on Docker Hub. Wait for it. ;) Here can you see the build state:\nhttps://hub.docker.com/r/sameersbn/gitlab/builds/. Thanks for PR but it seems this is a duplicate of #1087. . Hey, \nthanks for the PR. I had the same idea yesterday but at the moment I have only spare time to do this. Do you have an docker-compose.yml to test this case ? I would appericate it. So that we can test it later.. Post this in a comment in here\n. I put your docker-compose.yml in YAML code block to make it easier to read. \n\nIt works like charm \ud83d\udc4d  .\nI think we should make a separate document in docs, because this way of backup is not the usual way to create a backup but it could be. \ud83d\ude0f  . This will come in the master when 8.17.0 is released.. @fgouteroux Thanks for your patient I will move this now in and it will be available in 9.0.5. First @iamchanghyunpark  thanks for work. \ud83d\udc4d   I will continue your work and have a look at it.\n@kristiandrucker and @Ilya-Kuchaev Feel free to help us. Currently, I have no eta for this release. I think we should ship this with GitLab Pages and I don't know at the moment how much work and time is needed for this.. Thanks \ud83d\udc4d  .. @splattael I will put this PR in the next release (9.3.0) . I hope it's okay for you.  Do you want to send me a patch for the README ? Or should I do it on my own \ud83d\ude0f .. @splattael Or so :D. @damiendurant  Would you like make a PR for the environment variable ? . NodeJs was added by 8.17.0 as dependencie. Could you rebase you branch and fix your conflicts. I would appreciate to take your commit for yarn.. ping @frank-dspeed . Use rebase instead of merge please to get a clean history.. Wait I will try to do that for you. @frank-dspeed  I updated your commit and use another way to install yarn. I used the documented way from yarn https://yarnpkg.com/en/docs/install#linux-tab. I hope it's okay for you.\n. Okay. LGTM !. - [x] Build\n- [x] Deploy\n- [x] Expose necessary pages arguments\n- [x] Add Nginx Configuration for GitLab Pages\n- [x] External URL for GitLab Pages\n- [x] Test Nginx with GitLab Pages\n- [x] Test External URL for Pages\n. I would prefer someone that can test this with gitlab pages in a single docker-compose yml. I hope that i find some time this week to do it.. For everyone who is interesseted in this I will release every thing from 8.17 during the day. Pages works like excepted I could verfiy it. . @mikehaertl Why is it hard to upgrade to 8.17.3 ? Are there any strange circumstances ?. Yep. This is true. . But GitLab calls it GitLab Container Registry.. @mikehaertl Feel free to make a PR for your last entry. I think would be nice for everyone else who need this. After this I think we can close this issue.. This seems as bug in docker-compose. So far what I know is that the extens key is deprecated and will be removed in near future. . Hey,\nI guess it's fixed in some versions higher than yours. I would recommend to use the latest version.. Hey, \nyour problem is that you use localhost. Every container has is own interface and an own interface for localhostYou should use the container name instead of localhost this should work than.\nIn your case gitlab. @FranVeraC  Does your probem still exists or can we close this issue ? . This is not needed I you want to talk directly to gitlab-workhorse expose 8181 and let you load balancer handle it.. This is not needed I you want to talk directly to gitlab-workhorse expose 8181 and let you load balancer handle it.. @monkeydri @neta79  You don't need this. What you can do is to that the GITLAB_PORT and it will solve your problems. I also run GitLab behind a proxy and it's works for me.. I need some more information about your configuration. On the first View I'm not able to reproduce this error.. I'm quite not sure but I made a change use the latest build when it's available and report please feedback to me.. Wait again for the new latest release and check it again please. Here is the commit that should solves the problems. https://github.com/sameersbn/docker-gitlab/pull/1129/commits/d49d4b2daefd780f6cefa2e44fbbbb2948a387a6. I will close the issue. If it still exists please reopen it.. @nixel2007  I will release later 8.17.1 :). LGTM !. I want only to update these dependencies when we make an gitlab update not for every release. I will close this in flavor of #1147 . Test this again if you check out latest version or later 8.17.4. Otherwise reopen this issue.. @3kami3 I will add this for the next feature (9.4.0). Thanks for your work \ud83d\udc4d  . . \ud83d\udc4d . LGTM ! I'm a little bit confused because in the upstream are two ways to do this the upgrade guide says use yarn and the installation guide says use npm. But I prefer yarn because we add this to the image. Thanks for your work.. Hey,\nthis should be possible with an remote backup like aws, gce or minio :). For this you can use the GITLAB_BACKUP_SCHEDULE. We don't support the ee version. So in the ce we got no problems with git directly.. LGTM ! . LGTM !. Hey, \nwe won't support an EE version because of the license restriction.  \nSoftware may only be used, copied, modified, displayed, distributed, or\notherwise exploited with a valid GitLab Enterprise Edition subscription for the\ncorrect number of user seats.\nThis was posted as well in #701 #849 \n. Hello, \ncurrently it's not implemented in this image, but a PR exists for it #1026.. Hey, \nit seems that you use mysql as database. It will not be supported from the upstream and from me as well. The problem is that you GitLab lost the connection to the database. I would restore a backup and try it again ;) . . @helmut-steiner I use it currently on the latest version with 10 workers on a small machine and it works ;). I didn't bump the GitLab Shell to 5.0.2, because this not available on the stable branch in the upstream. 9.0.1 and 9.0.2 is shipped.  Next time make please single commits for bumping shell or other version in a separate commit. I will close this PR now because it's on the master branch.. I tested it and it will be included in the next release 11.0.3. Thanks for your patient and work ;). So,\nLGTM !. @splattael  Could you rebase against master ? I think I did some crappy stuff currently.. LGTM !. LGTM !\n. Hey,\ncould you post your docker-compos.yml . It seems that you have something wroing in your docker-compose.yml. Did you use Docker on Linux  or something Else ?\nAm 17.04.2017 20:41 schrieb \"Owen Nelson\" notifications@github.com:\n\nI'm seeing the same thing, though I'm not using compose.\nI'm running with -v /docker-data/gitlab:/home/git/data and using\nUSERMAP_UID/USERMAP_GID.\nThe directory on the host is 775 with matching uid/gid.\nThe log output shows\nMapping UID and GID for git:git to 40102:2013\nchown: changing ownership of '/home/git/data': Operation not permitted\nInitializing logdir...\nInitializing datadir...\nchmod: changing permissions of '/home/git/data': Permission denied\nInitializing logdir...\nInitializing datadir...\nchmod: changing permissions of '/home/git/data': Permission denied\n... repeated ...\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1169#issuecomment-294555529,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gbw3pz2G_atzrMZg-5nwsB_XiKyF9ks5rw7JRgaJpZM4M3s9V\n.\n. LGTM !. Yeah \ud83d\udc4d  .\n\nLGTM ! . Thanks. I forgot this \ud83d\ude05 .. Hey, \nthere is an PR for this #1098 . Could someone review it ? . If the assumption is correct. I would advise you to use named-volumes on Windows otherwise it will not work. This is my experience so far. . Everything LGTM !. I can confirm this. It allows us to build again. I have no clue why this solves the problem. It will build again on Docker Hosts. @lsm would you make an PR for that or should I ?. Hey,\nis there anyway to reproduce it. Could you provide an example with before and after your improvement.. @yfoelling I think we can merge this. It would be in the next release 10.1.1-1. It will be in 10.1.2. Hey,\nat the moment not so far I know. You could implement it and make an pr for that. It think it's a useful feature.. Hey, \nwhy I would appreciate it as well to have this doc in our docs folder. So we have all on a single place. This seems for me a lot of work that you did to get it running on your synology. So WDYT ?. LGTM ! . Hey,\ni have the same error on some cloud machines. It runs on my normal machines quite well but if build it on a digitalocean instance i got the same problem. I'm interessted in why yarn kills it.. Could you post me your kernel version you are running on this is the only thing that is shared.. I'm still confused. It's running on travis but If i do it on one of my gitlab runners have the same problem again.. It seems that yarn it isn't. Here is a public build on travis and it works. https://travis-ci.org/sameersbn/docker-gitlab/builds/227655243?utm_source=github_status&utm_medium=notification .  I added tried to get logging from this and here is my output. \nyarn install v0.23.3\n[1/4] Resolving packages...\n[2/4] Fetching packages...\nwarning fsevents@1.0.17: The platform \"linux\" is incompatible with this module.\ninfo \"fsevents@1.0.17\" is an optional dependency and failed compatibility check. Excluding it from installation.\n[3/4] Linking dependencies...\n[4/4] Building fresh packages...\nDone in 21.78s.\nLast Exit Code: 0\nCompiling assets. Please be patient, this could take a while...\nMissing Rails.application.secrets.secret_key_base for production environment. The secret will be generated and stored in config/secrets.yml.\nMissing Rails.application.secrets.otp_key_base for production environment. The secret will be generated and stored in config/secrets.yml.\nMissing Rails.application.secrets.db_key_base for production environment. The secret will be generated and stored in config/secrets.yml.\nMissing Rails.application.secrets.jws_private_key for production environment. The secret will be generated and stored in config/secrets.yml.\nrake aborted!\nErrno::EADDRNOTAVAIL: Cannot assign requested address - connect(2) for [::1]:6379\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/connection/ruby.rb:122:in `connect_addrinfo'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/connection/ruby.rb:162:in `block in connect'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/connection/ruby.rb:160:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/connection/ruby.rb:160:in `each_with_index'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/connection/ruby.rb:160:in `connect'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/connection/ruby.rb:211:in `connect'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/client.rb:323:in `establish_connection'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/client.rb:94:in `block in connect'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/client.rb:280:in `with_reconnect'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/client.rb:93:in `connect'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/client.rb:351:in `ensure_connected'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/client.rb:208:in `block in process'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/client.rb:293:in `logging'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/client.rb:207:in `process'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/client.rb:178:in `call_pipelined'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/client.rb:150:in `block in call_pipeline'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/client.rb:280:in `with_reconnect'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis/client.rb:148:in `call_pipeline'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis.rb:2199:in `block in pipelined'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis.rb:57:in `block in synchronize'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis.rb:57:in `synchronize'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-3.2.2/lib/redis.rb:2195:in `pipelined'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-namespace-1.5.2/lib/redis/namespace.rb:414:in `namespaced_block'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/redis-namespace-1.5.2/lib/redis/namespace.rb:266:in `pipelined'\n/home/git/gitlab/config/initializers/sidekiq.rb:71:in `block in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sidekiq-4.2.7/lib/sidekiq.rb:95:in `block in redis'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/connection_pool-2.2.1/lib/connection_pool.rb:64:in `block (2 levels) in with'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/connection_pool-2.2.1/lib/connection_pool.rb:63:in `handle_interrupt'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/connection_pool-2.2.1/lib/connection_pool.rb:63:in `block in with'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/connection_pool-2.2.1/lib/connection_pool.rb:60:in `handle_interrupt'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/connection_pool-2.2.1/lib/connection_pool.rb:60:in `with'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sidekiq-4.2.7/lib/sidekiq.rb:92:in `redis'\n/home/git/gitlab/config/initializers/sidekiq.rb:70:in `<top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/dependencies.rb:268:in `load'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/dependencies.rb:268:in `block in load'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/dependencies.rb:240:in `load_dependency'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/dependencies.rb:268:in `load'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/engine.rb:652:in `block in load_config_initializer'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/notifications.rb:166:in `instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/engine.rb:651:in `load_config_initializer'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/engine.rb:616:in `block (2 levels) in <class:Engine>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/engine.rb:615:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/engine.rb:615:in `block in <class:Engine>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/initializable.rb:30:in `instance_exec'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/initializable.rb:30:in `run'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/initializable.rb:55:in `block in run_initializers'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/initializable.rb:44:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/initializable.rb:44:in `tsort_each_child'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/initializable.rb:54:in `run_initializers'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/application.rb:352:in `initialize!'\n/home/git/gitlab/config/environment.rb:5:in `<top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/dependencies.rb:274:in `require'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/dependencies.rb:274:in `block in require'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/dependencies.rb:240:in `load_dependency'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/dependencies.rb:274:in `require'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/application.rb:328:in `require_environment!'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/application.rb:457:in `block in run_tasks_blocks'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sprockets-rails-3.2.0/lib/sprockets/rails/task.rb:62:in `block (2 levels) in define'\nTasks: TOP => environment\n(See full trace by running task with --trace)\nThe command '/bin/sh -c bash ${GITLAB_BUILD_DIR}/install.sh' returned a non-zero code: 1 \nIt seems that the bundle command tries to connect to local redis. The exit Code from yarn was successful so it isn't a yarn problem at all. So one interessting point is which docker version do you use ? . @carukc Which docker version do you use ? . ```\nClient:\n Version:      17.04.0-ce\n API version:  1.28\n Go version:   go1.7.5\n Git commit:   4845c56\n Built:        Mon Apr  3 17:45:49 2017\n OS/Arch:      linux/amd64\nServer:\n Version:      17.04.0-ce\n API version:  1.28 (minimum version 1.12)\n Go version:   go1.7.5\n Git commit:   4845c56\n Built:        Mon Apr  3 17:45:49 2017\n OS/Arch:      linux/amd64\n Experimental: false\n``\nSame here let me spawn a machine with the latest version of edge.. Same error on newer docker versions. It still fails on asset compiling. I'm a little bit more confused because it works on travis.. @carukc  in this issue #1188 . It get solved. I will hopefully introduce it tomorrow.. This got fixed now #1208 . I will be available on the latest tag and later in9.1.3. If it's fixed reopen the issue.. Hey, \ncurrently it's supported by us. If you don't defineSSL_REGISTRY_PATHandSSL_REGISTRY_KEY` you will communicate with registry directly without an nginx.  https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/functions#L1027\nBut I would agree with you to make this easier to understand and introduce a new variable make it more clear. Feel free to make an pr for that. ;). Okay. This is because you don't destroy your GitLab container you restarted it only.. I got problems to let it run on my deployment machines during the build. It's covered in #1199 . Do you have the same problems ? I think it depends on our docker version.. LGTM !. It's running on 10080 .\nAm 09.05.2017 16:48 schrieb \"geoff golder\" notifications@github.com:\n\nI am using Docker Community Edition on OSX\nVersion 17.03.1-ce-mac5 (16048)\nChannel: stable\nb18e2a50cc\nI am not sure if this is still using a VM? I have tested a 'hello-world'\nexample here: https://github.com/crccheck/docker-hello-world\nAnd this allows me to see the served HTML at localhost:80\nWhen I use the docker-compose.yml (only adjustments being the 3 secret\nkeys being added), I don't seem to get any errors:\n~/src/gitlabdocker geoff$ sudo docker-compose up\nStarting gitlabdocker_postgresql_1\nStarting gitlabdocker_redis_1\nRecreating gitlabdocker_gitlab_1\nAttaching to gitlabdocker_postgresql_1, gitlabdocker_redis_1, gitlabdocker_gitlab_1\npostgresql_1  | Initializing datadir...\nredis_1       | Starting redis-server...\nredis_1       | [1] 09 May 14:36:56.064 # Server started, Redis version 2.8.4\ngitlab_1      | Initializing logdir...\ngitlab_1      | Initializing datadir...\ngitlab_1      | Installing configuration templates...\ngitlab_1      | Configuring gitlab...\npostgresql_1  | Initializing certdir...\npostgresql_1  | Initializing logdir...\npostgresql_1  | Initializing rundir...\npostgresql_1  | Setting resolv.conf ACLs...\npostgresql_1  | Creating database user: gitlab\npostgresql_1  | Creating database: gitlabhq_production...\npostgresql_1  | \u2023 Loading pg_trgm extension...\npostgresql_1  | \u2023 Granting access to gitlab user...\npostgresql_1  | Starting PostgreSQL 9.6...\npostgresql_1  | LOG:  database system was shut down at 2017-05-09 14:37:08 UTC\npostgresql_1  | LOG:  MultiXact member wraparound protections are now enabled\npostgresql_1  | LOG:  database system is ready to accept connections\npostgresql_1  | LOG:  autovacuum launcher started\ngitlab_1      | Configuring gitlab::database.............\ngitlab_1      | Configuring gitlab::redis\ngitlab_1      | Configuring gitlab::secrets...\ngitlab_1      | Configuring gitlab::sidekiq...\ngitlab_1      | Configuring gitlab::gitlab-workhorse...\ngitlab_1      | Configuring gitlab::unicorn...\ngitlab_1      | Configuring gitlab::timezone...\ngitlab_1      | Configuring gitlab::rack_attack...\ngitlab_1      | Configuring gitlab::ci...\ngitlab_1      | Configuring gitlab::artifacts...\ngitlab_1      | Configuring gitlab::lfs...\ngitlab_1      | Configuring gitlab::mattermost...\ngitlab_1      | Configuring gitlab::project_features...\ngitlab_1      | Configuring gitlab::oauth...\ngitlab_1      | Configuring gitlab::ldap...\ngitlab_1      | Configuring gitlab::backups...\ngitlab_1      | Configuring gitlab::backups::schedule...\ngitlab_1      | Configuring gitlab::registry...\ngitlab_1      | Configuring gitlab::pages...\ngitlab_1      | Configuring gitlab-shell...\ngitlab_1      | Configuring nginx...\ngitlab_1      | Configuring nginx::gitlab...\ngitlab_1      | 2017-05-09 20:07:11,091 CRIT Supervisor running as root (no user in config file)\ngitlab_1      | 2017-05-09 20:07:11,091 WARN Included extra file \"/etc/supervisor/conf.d/mail_room.conf\" during parsing\ngitlab_1      | 2017-05-09 20:07:11,091 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\ngitlab_1      | 2017-05-09 20:07:11,091 WARN Included extra file \"/etc/supervisor/conf.d/gitlab-workhorse.conf\" during parsing\ngitlab_1      | 2017-05-09 20:07:11,091 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\ngitlab_1      | 2017-05-09 20:07:11,091 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\ngitlab_1      | 2017-05-09 20:07:11,091 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\ngitlab_1      | 2017-05-09 20:07:11,091 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\ngitlab_1      | 2017-05-09 20:07:11,107 INFO RPC interface 'supervisor' initialized\ngitlab_1      | 2017-05-09 20:07:11,107 CRIT Server 'unix_http_server' running without any HTTP authentication checking\ngitlab_1      | 2017-05-09 20:07:11,107 INFO supervisord started with pid 1\ngitlab_1      | 2017-05-09 20:07:12,113 INFO spawned: 'sidekiq' with pid 531\ngitlab_1      | 2017-05-09 20:07:12,115 INFO spawned: 'unicorn' with pid 532\ngitlab_1      | 2017-05-09 20:07:12,117 INFO spawned: 'gitlab-workhorse' with pid 533\ngitlab_1      | 2017-05-09 20:07:12,119 INFO spawned: 'cron' with pid 534\ngitlab_1      | 2017-05-09 20:07:12,121 INFO spawned: 'nginx' with pid 535\ngitlab_1      | 2017-05-09 20:07:12,122 INFO spawned: 'sshd' with pid 540\ngitlab_1      | 2017-05-09 20:07:13,766 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2017-05-09 20:07:13,766 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2017-05-09 20:07:13,766 INFO success: gitlab-workhorse entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2017-05-09 20:07:13,767 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2017-05-09 20:07:13,767 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2017-05-09 20:07:13,767 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2017-05-09 20:07:23,152 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1      | 2017-05-09 20:07:24,156 INFO spawned: 'unicorn' with pid 558\ngitlab_1      | 2017-05-09 20:07:25,776 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nHowever all attempts to reach localhost:80 now are just refused.\n~ geoff$ sudo docker ps\nPassword:\nCONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                                                   NAMES\nb8fe389b92d0        sameersbn/gitlab:9.1.2       \"/sbin/entrypoint....\"   7 minutes ago       Up 7 minutes        443/tcp, 0.0.0.0:10022->22/tcp, 0.0.0.0:10080->80/tcp   gitlabdocker_gitlab_1\na054c27c5c07        sameersbn/postgresql:9.6-2   \"/sbin/entrypoint.sh\"    22 minutes ago      Up 7 minutes        5432/tcp                                                gitlabdocker_postgresql_1\nf87530b91d8e        sameersbn/redis:latest       \"/sbin/entrypoint....\"   22 minutes ago      Up 7 minutes        6379/tcp                                                gitlabdocker_redis_1\n~ geoff$\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1206, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/AA2GbzpxgR27C3LFogLN020pMJD7jXZjks5r4HyggaJpZM4NVbXf\n.\n. LGTM ! . We won't change the base image at the moment sorry. For it would be alpine and not a new ubuntu version.. Hey, \nthis looks quite good. Would you like to write an readme how to use it directly on kubernetes with an little README.md. It seems that it's in WIP so I will add the tag to the title.. @israelshirk ping ! What's your current status of this pr ?. Hey, \nwhen you are running a docker compose v2 you don't need to specify any IP Address.\n\nFirst of all using localhost in a container is never a good idea, because every container has it's own localhost (lo) interface. This would be only working when you are changing the network_mode to host, but this is not necessary as well. \nFor the case as I described in the beginning you get your own network and your need only to enter as coordinator url the following http://gitlab .\nBut this depends on how your docker-compose.ymlis declared. But give you better help. I would appreciate to see your docker-compose.yml with obfuscated values for password and other secrets.. Hey,\nthis is a duplicate of #1098 . . How about GITLAB_EMAIL_REPLY_TO ? If it's doesn't solve your issue. Feel free to reopen it.. @lippoliv Why is there no context ? We have an environment variable that solves your problem. I posted it directly. We don't need to add a new one. You can set the SMTP_USER with your credentials and set the GITLAB_EMAIL and GITLAB_EMAIL_REPLY_TO to your real address for the mail server. \n| Parameter | Description |\n|-----------|-------------|\n| GITLAB_EMAIL | The email address for the GitLab server. Defaults to value of SMTP_USER, else defaults to example@example.com. |\n| GITLAB_EMAIL_REPLY_TO | The reply-to address of emails sent out by GitLab. Defaults to value of GITLAB_EMAIL, else defaults to noreply@example.com. |. And why do you want to start one database for two gitlabs. This would require to change the database schemas.\nAll names are unique because you are using docker-compose. You have your own project for with the containers and the scale indicator. For example:\nprojectname_containername_scale-indicator.\ngitlab_postrgresql_1\nFor this you need only to use the -p paramater to your docker-compose.\nbash\ndocker-compose -p my-cool-gitlab up -d\nAnd the container names would be looking like this my-cool-gitlab-postrgresql_1. Please Post only relevant information for the 9.2.0 release.\nAm 24.05.2017 8:07 vorm. schrieb \"Kuchaev Ilya\" notifications@github.com:\n\n9.2.1\nhttps://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG.md#921-2017-05-23\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1224#issuecomment-303626864,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb7rZ9BAbjB6VHuvgFjDM147xhryBks5r88krgaJpZM4NjCIw\n.\n. I would appreciate some last changes. Could you remove your changed Makefile from the Update to 9.2.0 commit and make it as separate as well and squash the following commits as one.\n\n\nUpgrade to 9.2.0\nUpdate docs, readme, k8s, changelog\nAdd manual env setup as dockerfile defaults\n\nAnd remove the Kick travis commit. \nAlso do check if the .gitlab-ci.yml has been changed since 9.1 ?. @phpb-com Thanks for the interpreting my typo correct.\n@andrewstuart I had one last thing.  Could this commit block a single commit as well please. Thanks for patient and work \ud83d\udc4d .\n```bash\nshallow clone gitlab-ce\n+echo \"Cloning gitlab-ce v.${GITLAB_VERSION}...\"\n +exec_as_git git clone -q -b v${GITLAB_VERSION} --depth 1 ${GITLAB_CLONE_URL} ${GITLAB_INSTALL_DIR}\n +\n +GITLAB_SHELL_VERSION=${GITLAB_SHELL_VERSION:-$(cat ${GITLAB_INSTALL_DIR}/GITLAB_SHELL_VERSION)}\n +GITLAB_WORKHORSE_VERSION=${GITLAB_WORKHOUSE_VERSION:-$(cat ${GITLAB_INSTALL_DIR}/GITLAB_WORKHORSE_VERSION)}\n +GITLAB_PAGES_VERSION=${GITLAB_PAGES_VERSION:-$(cat ${GITLAB_INSTALL_DIR}/GITLAB_PAGES_VERSION)}\n``. Thanks for your patient and work.. I will close because this a duplicate of #1224 .. @frostieDE I rebased your pr against master so we could use this for9.2.1. I will close this issue. I think this problem is not in our scope.. Hey, \nthe function  is missing inassets/runtime/functionsto replace the cron thegitlab.yml`. So In your case it would be only \nbash\npipeline_schedule_worker:\n  cron: {{GITLAB_PIPELINE_SCHEDULE_WORKER_CRON}}\nFor this you can have a look at https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/functions#L828. Hey,\nthis image uses an source installation and not an omnibus version. So you have only the gitlab-rails when you install GitLab with omnibus. If you want to do  that use the official image.. Hey, \nthanks for the PR according to this the new default value will be introduced in 9.3 but a PR exists for making it configurable in #1232 . I will close this PR in flavor of #1232 .. Yeah thanks for your recognition. I would test #1098 with an PostgreSQL setup. Could you test it with your MySQL Setup so if it works for us. I will make a Patch to solve your Problem.. In flavor of #1098 . I will close this PR. . @splattael At GitHub I can't reopen the PR so I guess I need to do it by hand.. @green-mike  Thanks ;). LGTM !. @leebing  I guess it be closed.. LGTM !. Hey,\nI rebased your branch so that all changes included and of course LGTM !. @timfeirg No ;) . This was only a test but it doesn't work as excepted. I will close my PR for yours.. @abeltay I prefer to have it in the release versions order. I would also like to have separate Pull Requests for a better overview of this.\n@jostyee This could be important for some users. So that they have other issues that occures in the next patch version. When we bumping it up to the latest version we could not help this users. \nAnother point is that I want personally to support the same gitlab version that are released by the upstream.. @abeltay If you want you can prepare the other patches with PR's as well. I will gonna review them. When I back at home and probably release them today ;) .. I merged my version it was easier to resolve the conflicts there but thanks for your work ;). LGTM ! . Same here. I checked it only the ssh version. I will dig into it now.. Okay. On the first view from your Message. It seems that the storage path is not correct /home/git/repositories/***/***.git it should be like /home/git/gitlab/respositories\nMy Assumption was correct I did the following in a running container and it worked. Here is my workaround for that if you don't won't to upgrade.  But be careful with this.\nFix Gitaly (Temporarily)\n$ docker exec -it gitlab_gitlab_1 /bin/bash\n$ cd /home/git/gitaly\n$ editor config.toml\nChange Gitaly config.toml\ntoml\n[[storage]]\nname = \"default\"\npath = \"/home/git/repositories/\"\nto \ntoml\n[[storage]]\nname = \"default\"\npath = \"/home/git/data/repositories/\"\nRestart the Gitaly proccess\n```bash\n$ ps aux | grep gitaly | awk '{print $2}'\nThere should be something like this\ngit       7469  0.0  0.0 305016 12592 ?        Sl   16:20   0:00 /usr/local/bin/gitaly /home/git/gitaly/config.toml\nNow kill the proccess\n$ kill 7469\n```\nAfter that supervisor will spawn a new gitaly proccess with the change config.toml and it should work now.. @frostieDE I will work now on the correct implementation and add the missing test case.. You don't need to restart the container ;). I'm working now on a correct fix and it will be in 9.3.0-1 available. I fixed it ;). ping @splattael  Any clue here ? Did upgrade to the latest version (9.3.3). Hey @haoyixin,\nit seems that your permissions for bucket aren't correct. Here is an example for the policy json for the AMI User.\njson\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt0000000000000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetBucketLocation\",\n                \"s3:ListAllMyBuckets\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt0000000000000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:ListBucket\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3::example-bucket\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt0000000000000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:AbortMultipartUpload\",\n                \"s3:GetBucketAcl\",\n                \"s3:GetBucketLocation\",\n                \"s3:GetObject\",\n                \"s3:GetObjectAcl\",\n                \"s3:ListBucketMultipartUploads\",\n                \"s3:PutObject\",\n                \"s3:PutObjectAcl\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::example-bucket/*\"\n            ]\n        }\n    ]\n}. Yep will be merged later at the day.. LGTM !. LGTM . It seems that this patch adds new depedencies and that breaks the build process of incomplete libs. I will wait to see what happened in the upstream.. @greyferret I cherry-picked your commit for the re2 library to use this directly with the 9.3.8 release. After this is working I will work on the 9.3.9. @greyferret I removed all unused stuff after installing re2. Now it's LGTM !. Hey @lyda,\nit's not missing. It will be builded by the hub ci system. https://hub.docker.com/r/sameersbn/gitlab/builds/ . It takes sometime ;) .. Hey @greyferret,\nI would use your PR instead of mine (#1294). For this it would be great to make two commits. First for the Upgrade of GitLab and a second one for the dependency. In future when we are upgrading to Ubuntu Xenial or higher than we don't need the compilation anymore. So than we can revert this commit with no effort. . If you need help by this let me know. . @greyferret  Why closing this ?. @greyferret I rebased your branch against master and resolved the conflicts\n. LGTM ! . Nothing was missing so far I know. I waited for the BaseImage update. I'm gonna release this today.. Hey @QuickJack,\nfirst of all you are correct. I think in releases higher than 9.6+ you can only use the api v4. I would reccommend to get to the new gitlab version as far as possible. So the migration are not so hard and can't brake so much instead when you are trying to upgrade from an very old version. It's only delaying the problem in the future.. Hey @TimeBye,\nit seems that subgroups were removed in 9.3.X and this could cause the error. https://about.gitlab.com/2017/06/22/gitlab-9-3-released/#dropping-support-for-subgroups-in-mysql .. Hey at all,\nI got the same error. Thanks for @masakij for the hint. I will try to add the gettext:compile. Would you like to make an PR for that or should I do it ? It can be placed in the same place for compiling the assets. https://github.com/sameersbn/docker-gitlab/blob/master/assets/build/install.sh#L167. It has been fixed by #1302  and will be available in 9.4.0-1. If the issue still persits please reopen this issue.. LGTM !. LGTM !\n. LGTM !. LGTM !\n. @tdroenner Sorry for my late response. You could run it with docker-compose run --rm gitlab app:sanitize. The current implementation can be found https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/functions#L1311 here . If it's doesn't fit feel free to make a PR for that.. I'm testing this now. I assume that the release can happen today ;). LGTM !. Sorry for my delay. \nLGTM !. Please check if any new configuration must be made to all configuration files.. @phenomax \n\nWhat to do with SMTP_CA_PATH, SMTP_CA_FILE & SMTP_TLS - They do not appear in the current config file\n\nThey should be kept. They aren't in the example from the upstream because ActionMail is a standard component of Ruby on Rails.\n\nMaking repositories timeout/reset time values configurable (L496)\nConfiguring unicorn socket metrics/sidekiq_exporter (L573)\n\nYeah you are right. I think this should be done before we merging this, because otherwise it's not feature complete for the release. This week I can do it only at the weekend. So if you can't wait so long feel free to do it or the others in this PR. We could accept them by patch. . @lenovouser I can confirm this as well like @splattael . My tests got passed. I wan't only the full functionality.. Hey @R2ZER0, \nthis sounds very interessting. I would like to merge but before I need to verify if it works correctly. Could make a little documentation. How you can setup a testing Swift store ? . @lenovouser Did the same work :D . I will close mine and checking yours.. LGTM !. I was to late #1333 appeard first . So in this case I will close it.. LGTM !. Why did you close this ? . > I don't believe the README.md is reflective of the most recent changes shown in Gitlab's documentation.\n\nI am not using docker-compose, but I have observed errors when attempting to restore using only the EPOCH. The command I am using was illustrated below with docker exec.\nIn GitLab 9.2 the timestamp format was changed;\nfrom EPOCH_YYYY_MM_DD to EPOCH_YYYY_MM_DD_GitLab version\nWhen running docker exec -it $CONTAINER /sbin/entrypoint.sh app:rake gitlab:backup:restore BACKUP=$BACKUP requires the $BACKUP variable to be defined in the v9.2+ format.\nThis appears to differ from the commands cited within README.md, in section #restoring-backups. The README.md presents BACKUP=1417624827 which appears to only identify the EPOCH. I haven't been able to restore backups using only the EPOCH for quite a few versions.\n\nFeel free to make an Pull Request for this  \ud83d\ude0f  .. LGTM !. Hey @evenh,\nthanks for your PR \ud83d\udc4d  . I got the same error like travis . It seems that there is no gitlab-pages version with 0.5.1 available. https://gitlab.com/gitlab-org/gitlab-pages/tags and there is now work on the master branch since 2 months. https://gitlab.com/gitlab-org/gitlab-pages. @evenh  Thanks. I think would should make an issue in the upstream. Would you like to do it ? . LGTM !. For everyone who needs. The current default value isn't working correct because gitlab doesn't recognize it. You can use the IP Adress space from your container network with \ndocker network inspect --format=\"{{range .IPAM.Config}}{{.Subnet}}{{end}}\" gitlab_default\n172.19.0.0/16\nAfter this you can setup the following env for the container GITLAB_MONITORING_IP_WHITELIST=172.19.0.0/16\n. LGTM ! I will merge this for the 10.0 release and make a note in changelog for that. . @evenh You are right. I Like a clean history. @phenomax you should rebase\nand Squash your commits.\nAt all currently I'm not able to release this, because im on vacation and\nget no computer with me. I will start with Release when Im Back (monday\n2.10) otherwise @sameersbn can handle this.\nAm 24.09.2017 16:15 schrieb \"Constantin\" notifications@github.com:\n\nWhats missing? Maybe we should directly upgrade to the just releases 10.0.1\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1357#issuecomment-331709399,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb5CmWwPVvaHBvSjVjoWkmAprFe71ks5sllXxgaJpZM4PhI9g\n.\n. I'm back from vacation. I updated nodejs to 8.X for fixing all the warnings with yarn.  For the rest it's LGTM ! . Rebase was made by me and LGTM !. Hey @Gaibhne  and @Biegal, did you see #1190 ?\n\nI think this could fix your problem in future.. Hey,\nI would recommend to use the latest patch version. I think your problem got fixed with https://about.gitlab.com/2017/09/24/gitlab-10-dot-0-dot-1-released .. It works for me as well with 10.0.2 and postgres 9.6.1 . Probably it's an upstream problem. \n@tiredofit There is no support for mysql . I would advise you to use postgresql instead of mysql. For you it's the same it seems that is that an upstream problem as well.. @insekticid  I'm gonna close this issue than.. I will close this because it was merged- If the issue still exists please reopen the issue and ping me.. Hey @LordFPL, \nthanks for your PR. I checked it. I would like to have a single commit because this is only a single feature for a clean history and an easy revert. As well I checked the upstream config and I think we should adjust them to it. You can add my following patch for that. It's only reordering the part of the config file.\n```git\ncommit a3d01c11a105ec247c050fc078763f85d223d938\nAuthor: solidnerd niclas@mietz.io\nDate:   Wed Oct 4 17:57:56 2017 +0200\nReorder the ldap config structure to the upstream\n\nSigned-off-by: solidnerd <niclas@mietz.io>\n\ndiff --git a/assets/runtime/config/gitlabhq/gitlab.yml b/assets/runtime/config/gitlabhq/gitlab.yml\nindex c440fa9..0ef2df8 100644\n--- a/assets/runtime/config/gitlabhq/gitlab.yml\n+++ b/assets/runtime/config/gitlabhq/gitlab.yml\n@@ -261,14 +261,32 @@ production: &base\n         # Example: 'Paris' or 'Acme, Ltd.'\n         label: '{{LDAP_LABEL}}'\n\n\nExample: 'ldap.mydomain.com'\n host: '{{LDAP_HOST}}'\n\n\nport: {{LDAP_PORT}}\nuid: '{{LDAP_UID}}'\nencryption: '{{LDAP_METHOD}}' # \"tls\" or \"ssl\" or \"plain\"\nverify_certificates: '{{LDAP_VERIFY_SSL}}'\n\nThis port is an example, it is sometimes different but it is always an integer and not a string\n\nport: {{LDAP_PORT}} # usually 636 for SSL\nuid: '{{LDAP_UID}}' # This should be the attribute, not the value that maps to uid.\n+\n+\n\nExamples: 'america\\momo' or 'CN=Gitlab Git,CN=Users,DC=mydomain,DC=com'\n bind_dn: '{{LDAP_BIND_DN}}'\n password: '{{LDAP_PASS}}'\n\n\n\nEncryption method. The \"method\" key is deprecated in favor of\n\n\n\"encryption\".\n\n\n\n\n\nExamples: \"start_tls\" or \"simple_tls\" or \"plain\"\n\n\n\n\n\nDeprecated values: \"tls\" was replaced with \"start_tls\" and \"ssl\" was\n\n\nreplaced with \"simple_tls\".\n\n\n\n\nencryption: '{{LDAP_METHOD}}'\n+\n\nEnables SSL certificate verification if encryption method is\n\n\n\"start_tls\" or \"simple_tls\". (Defaults to false for backward-\n\n\ncompatibility)\n\nverify_certificates: '{{LDAP_VERIFY_SSL}}'\n+\n         # Set a timeout, in seconds, for LDAP queries. This helps avoid blocking\n         # a request if the LDAP server becomes unresponsive.\n         # A value of 0 means there is no timeout.\n```\n\n@osixia  Feel free to make an PR for that . I would be in the next release 10.0.2-1\n. @vipseixas  Please make an issue for that and a PR is wecolmed . . For everyone there is an ongoing merge request in the upstream of gitlab-runner. If you want to track this follow the current link. https://gitlab.com/gitlab-org/gitlab-runner/merge_requests/725. LGTM ! . @phenomax nothing \ud83d\ude05 . My last days were a little bit stressful so I forget that . I will release it in the next few hours.. Hey @osixia,\ncould you rebase your PR against master. I personally want to include it in a next release. . @rysiekpl  I think not. If it's not true make a feel free to make a PR for this issue. I will close this issue temporarly if it's not true re-open it.. @ggilley You can use the normal way how to restore backups. Have a look in the readme https://github.com/sameersbn/docker-gitlab#restoring-backups . Hey @BirgerK,\ndid you see #1367 ? I think that should could solve your problems.. @BirgerK  I will close the issue since #1383 is merged and available. If this issue still persists please reopen this one.. Hey @yuanying, \nthis is looking really great. I think we should synchronise it with #1211 and see the progress for that. Probably what I think is that we make an new folder for kubernetes it could be k8s and it contains the chart and the plain from #1211 . @yuanying Is it still in WIP or could I do a final check to merge it ?. #1380 is merged i think we can gonna close this issue. @damiendurant If the problem still exists feel free to re-open this issue.. @LordFPL  Could force push this branch ? Something got wrong with rebase on the github website. Also I would like if you do the rebase by yourself.. Done ; Thanks for your work.. @juanmao Is this issue still happen or can this be closed ?. @juanmao This is DNS problem like @cat5  said. I think some goes wrong with your firewall settings and docker. I would not recommend to use a firewall with docker only when you know what you are trying to achieve.\n. All new configuration changes. I will work on it tomorrow. Hopefully I can ship it than.. @ovr I tested this commit on a build. I will gonna merge them before I release 10.1.0. Thanks for pointing this out. \ud83d\udc4d \n@fmauNeko I cherry-picked your commit in https://github.com/sameersbn/docker-gitlab/pull/1387/commits/3fc8424bbae24b0befdb74f4b70fa9b313f6eab8 . Thanks for your work. \ud83d\udc4d \nFor everyone I will start with the release. Thanks for your patient.. @sameersbn ping me for 16.04 upgrade. We can work on a branch on it. With the upgrade we could remove some dependencies and probably we could do a multistage build . . I will put this in the next release for 10.1.0. @gdoteof  I think when it's confuses you. We should update the docs to make more clear to other people. \nSSL_REGISTRY_*are the cert and key for the nginx ssl termination. You can use your own certs if you want but it's not needed.\nGITLAB_REGISTRY_* this will be used to encrypt and decrypt the token between the registry (docker/distrubion) and gitlab as token provider for the authentication.\nI hope it's clear to you now. \nFeel free to make an PR to that ;) .. @gimler I think it's problem of the registration from your runner. I think you used the internal url of gitlab to register the runner. What I would recommend would be to use the external like your domain GITLAB_HOST and this would be gitlab.mydomain.com and not gitlab .. Close mine in favor of #1393 . Thanks ;). @sprucify I don't have those problems. I think it's a timeout problem.\nWhich LB do you use for ssl termination ? \nSo far I know nothing had change in this direction.. @sprucify  Do you use a nginx or something else to do the ssl termination.. @sprucify What I did when I used nginx was to increase the failtimeout of the upstream. Here is an example configuration\n```nginx\nupstream gitlab {\n server gitlab:8181 fail_timeout=60s;\n}\nmap $http_upgrade $connection_upgrade_gitlab_ssl {\n    default upgrade;\n    ''      close;\n}\nserver {\n        listen 443 ssl;\n        listen [::]:443 ssl;\n    server_name gitlab.example.com;\n\n    ssl_session_cache shared:SSL:10m;\n    ssl_session_timeout 24h;\n    ssl_buffer_size 1400;\n    ssl_session_tickets off;\n\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n\nssl_ciphers \"EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\";\nssl_ecdh_curve secp384r1;\n    ssl_prefer_server_ciphers on;\n\n    ssl_certificate /etc/letsencrypt/live/gitlab.example.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/gitlab.example.com/privkey.pem;\n    ssl_dhparam /etc/nginx/ssl/dhparam.pem;\n\n    ssl_stapling on;\n    ssl_stapling_verify on;\n    resolver 8.8.4.4 8.8.8.8 valid=300s;\n    resolver_timeout 10s;\n\n    add_header Strict-Transport-Security max-age=63072000;\n\n\n    location /ci/api/v1/builds/register.json {\n    access_log off;\n      proxy_set_header Host              $http_host;\n    proxy_set_header Referer           $http_referer;\n    proxy_set_header Referrer          $http_referer;\n    proxy_set_header Cookie            $http_cookie;\n    proxy_set_header X-Forwarded-Host  $host;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header X-Forwarded-Port  $server_port;\n    proxy_set_header X-NGINX-Proxy     true;\n    proxy_set_header X-Forwarded-SSL   on;\n    proxy_set_header    Upgrade             $http_upgrade;\n    proxy_set_header    Connection          $connection_upgrade_gitlab_ssl;\n\n\n   client_max_body_size 1000m;\n\n    proxy_redirect                     off;\n    proxy_http_version                 1.1;\n\n            proxy_pass http://gitlab;\n\n}\n\nlocation / {\n    proxy_set_header Host              $http_host;\n    proxy_set_header Referer           $http_referer;\n    proxy_set_header Referrer          $http_referer;\n    proxy_set_header Cookie            $http_cookie;\n    proxy_set_header X-Forwarded-Host  $host;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header X-Forwarded-Port  $server_port;\n    proxy_set_header X-NGINX-Proxy     true;\n    proxy_set_header X-Forwarded-SSL   on;\n    proxy_set_header    Upgrade             $http_upgrade;\n    proxy_set_header    Connection          $connection_upgrade_gitlab_ssl;\n\n\n   client_max_body_size 1000m;\n\n    proxy_redirect                     off;\n    proxy_http_version                 1.1;\n\n    proxy_pass http://gitlab;\n\n}\n}\nserver {\n        listen 80;\n        listen [::]:80;\n        server_name gitlab.example.com;\n        return 301 https://$server_name$request_uri;  # enforce https\n}\n``. @sprucify Could you post theproduction.logfrom/var/log/gitlab/gitlab/production.log`. @sprucify Something on your machine went wrong during the last update. I would use a backup an upgrade after this backup version.. @jasl8r you are right. https://github.com/sameersbn/docker-gitlab/commit/f765ef06bef510e47c4bd6d15831de08de4e7759#diff-06791a442f4393b736ecf1395b7090cfR986 . Feel free to make a PR for that.. @jasl8r Yes you are right. Something doesn't go well during last upgrade.. For me is working everything HTTPS Clone or SSH Clone. I think it's a problem on your site with the ELB .. Hey @baronfel ,\nfirst of all I would not recommend to upgrade directly from 2 old major versions and you skip one entirely. I think this case is not so widespread but you could provide a test case  for that someone Iis able to reproduce your error and we could bring up fix than for that.\nI did a look at some of my instances and all of them have not this permission problem. . @Stel000 Thanks for your Contribution. Is there a way how can someone test it ? With an example omniauth service. That we can ensure that it's working correctly.. @mikehaertl LGTM !. Sorry we are don't support older versions because it's not possible with this gitflow. For this an own release branch needed. But you should be able to do it by your own. Have a look a README for this case.. @evenh \ud83d\udc4d I wil do some tests on it.. LGTM !. LGTM !. LGTM !. LGTM !. LGTM !. Hey @grimmy, \nI think it's not a technical problem more than an license problem. Currently what I found is that they changed the license text.\nYou agree that GitLab\nand/or its licensors (as applicable) retain all right, title and interest in and\nto all such modifications and/or patches, and all such modifications and/or\npatches may only be used, copied, modified, displayed, distributed, or otherwise\nexploited with a valid GitLab Enterprise Edition subscription for the  correct\nnumber of user seats. Notwithstanding the foregoing, you may copy and modify\nthe Software for development and testing purposes, without requiring a\nsubscription.  You agree that GitLab and/or its licensors (as applicable) retain\nall right, title and interest in and to all such modifications.\nping @sameersbn  WDYT ? . Hey @grimmy, \nthanks for your work. I think it will be not merged because this a feature of gitlab-ee and not ce.. LGTM !. @cwildfoerster Sorry for the long waiting. I didn't get the notifications for both pr's. I working on it.. LGTM !. LGTM ! . Now it's good to me removed a lot of deprecated stuff.. LGTM !. A PR for 10.3.2 is available in #1454 \n. Hey @drubin, \nthanks for you work. Yeah It seems that I missed to implement it in directly. I made a short review to that I hope it helps. If not feel free to ask.. Hey @drubin,\nthanks for your changes. I will test it later how it's working directly for the next release. I think everything is working as excepted. \nThe fog-aws default is  ~5Mb (5242880B). \nI will let you know if some changes are required again or not. . Hey @drubin, \ni tried it by my self and get the same problem atm I have no clue why it's not working correctly. We need to dig deeper.\nIf prefer when the feature is complete a rebase to be easier revertable with the changes and are more clean history.. I think the value of the variable isn't the Problem. What I See now is that\nin your If condition your variables needs to be qouted so i will look like\nthis \"${AWS_BACKUP_MULTIPART_CHUNK_SIZE}\"\nAm 29.12.2017 15:14 schrieb \"David Rubin\" notifications@github.com:\n\n@solidnerd https://github.com/solidnerd What happens if we default the\nvalue to \"null\" instead of leaving it blank it would have the same effect\nno?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1449#issuecomment-354451053,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb9ONbijvU3ZaUizZui9NfNEAs9n8ks5tFPO4gaJpZM4RM-YF\n.\n. Ah okay Email replies doesn't support Markdown \"${AWS_BACKUP_MULTIPART_CHUNK_SIZE}\". Nope there is no need to wait for the next GitLab release. This is a fix of\nthe current behaviour so a release cloud have an own Tag (10.3.2-1) or it\nwill live on latest until the next GitLab Release ist available.\n\nAm 29.12.2017 15:36 schrieb \"David Rubin\" notifications@github.com:\n@solidnerd https://github.com/solidnerd That isn't the issue because I\nadded debug statements inside the IF statement from the functions.\nI am going to keep trying to figure this out as this is something I would\nreally like to see.\nWhat is the policy about submitting releases that don't directly correspond\nto gitlab releases? Or would this fix have to wait for the next gitlab\nrelease?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1449#issuecomment-354453579,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2GbyYxJakBYnTae9epoRywT7ZFyX2Qks5tFPjbgaJpZM4RM-YF\n.\n. Feel free to do it. Also the storage_class is missing. For more information have a look in the upstream https://gitlab.com/gitlab-org/gitlab-ce/blob/master/config/gitlab.yml.example#L547. It will be in the next release we didn't a separate release for this because 10.3.3 is available now.. LGTM !. LGTM ! . Thanks for this contribution \nLGTM !. Thanks for this I think we should gonna try to add this for new releases in the format to link to the pr.. @innuendonh  You are lucky. I think it's a good idea to release the latest version 10.3.6 until we gonna go for 10.4. In 10.4 I plan now to use ubuntu xenial over trusty for long support. I will update all branches today / tomorrow. I think we could plan with 10.4 tomorrow.. @sameersbn It's already in there https://github.com/sameersbn/docker-gitlab/pull/1479/commits/33427dac44e586bd9a2b74fd92d25c0511968e4d. @LennardWesterveld I added Golang 1.9.3  in e702071 . \n@Ilya-Kuchaev I think I could resolve all problems now. I'm gonna now to test it if it's working correctly.\n. @drubin everything is fine. I'm gonna start with the release now.. LGTM ! . This will be the last update with docker-ubuntu 14.04. For the next release after 10.3.6 ubuntu 16.04 will be used.. For alle changes have a look at #1479 . This will be closed in flavor of #1482 .. @jamesstout  Faster :P #1481 . But it's not a problem I could also review yours . . @jamesstout  I will take yours over mine it's okay ;) let me see if it's work correctly.. This will be the last update with docker-ubuntu 14.04. For the next release after 10.3.6 ubuntu 16.04 will be used. I will attach this to #1479 instead .. It's LGTM !. Thanks. I think I'm gonna go with 1.9.3 for the 10.4.0 release but I need\nto think about supporting two version the 1.9.x for gitaly and for all\nothers the 1.8.6 .\nAm 26.01.2018 08:22 schrieb \"Peter Leitzen\" notifications@github.com:\n\nThis release of golang is compatible with 1.8.3 but contains some security\nfixes:\nhttps://golang.org/doc/devel/release.html#go1.8.minor\nUpdating should do no harm [image: :neckbeard:]\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/sameersbn/docker-gitlab/pull/1484\nCommit Summary\n\nUpgrade go to 1.8.6\n\nFile Changes\n\nM Dockerfile\n   https://github.com/sameersbn/docker-gitlab/pull/1484/files#diff-0\n   (2)\n\nPatch Links:\n\nhttps://github.com/sameersbn/docker-gitlab/pull/1484.patch\nhttps://github.com/sameersbn/docker-gitlab/pull/1484.diff\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1484, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb2PjQFgPrMSPo0Z2tv-wcaIEwpfnks5tOX1OgaJpZM4Rt8J0\n.\n. Hey,\nit's already in there see #1479 . It will be available with the 10.4.0 release. So I think we can gonna close this.. Hey,\nit's already in there see #1479 . It will be available with the 10.4.0 release.. It can be closed now.. LGTM ! . @mikehaertl  I have at no clue at the moment. I personally don't use mysql as database backend. But I know that @splattael is using mysql as database backend.\n\n@splattael  Did the last update work for you ? And what is your mysql server version ? . LGTM !\n. Hey at all,\nsomething doesn't get catched through my last tests. I prepared a fix for the unspported type it will be available in 10.4.2-1 . Sorry for the disruption.. @Ilya-Kuchaev It's a quite interessting problem because this should not work since the last 8 major version upgrades. The problem in here is that your encryption key is to short. It should be at least 32 digits. A better solution is to use 64 digits. Another problem could be the .secret file in your gitlab installation \nThe way how solve this is manually dececrypt the active records with the old digist and after that encrypt them with the longer digist. The last step is to use that variables in your docker-compose.yml. Hey @ulrichSchreiner,\nyes I agree with you.  The main reason why i didn't delete those things is that it would break some functionality of the image. The problem will come when you are setting gitlab under an own context instead of reserving a full domain. For this case all assets needs to be regenerated again.\n@mikehaertl  install.sh  will be executed in one layer so it will be working.. Sorry for my late response I got very busy last week. I'm back now and I will work on all PR's now.. LGTM !. Hey @jdongelmans,\nI'm back from busy week. Could you fix your merge conflicts to that we could take this as a next release. It will be the last one for 10.4.X . If you need help with this let me know.. I created an PR with the update in #1523 . I hope it's okay. . Hey @ppcat ,\nI'm back from busy week. Could you fix your merge conflicts to that we could take this as a next release. It will be neat that your changes are based on #1516. So that we could make direct update from 10.4.4 to 10.5.0 . If you need help with this let me know. Also like @boeserwolf91 said you also to check if there are any new config path are implented that we could cover them with the right Environment variable.. @ppcat I did a new PR for you. I gonna close this in favor of #1524 .. LGTM ! . This PR is an improved version of #1520 .\n. LGTM !. LGTM !. But I think it will brake some functionality. So one case would be that GITLAB_RELATIVE_URL_ROOT is working also after this.. LGTM !. Hey @SvenDowideit,\nthanks for your work. I think it is a nice cool idea to support that.\nI would like to see this as an additional content so for this case I would like to have it as feature. That means I think we should also need to set an environment variable that allows us to use this feature something like SUPPORT_DOCKER_SWARM_CONFIGS. Also I don't like the change in the standard docker-compose.yml because this a breaking change for the project because compose in version 2 is for single hosts and everything higher than 3.x is for the cluster approach. Also this feature could be used by kubernetes configmaps. I think it would be nice for the user to have an example with that. So i think we could gonna put this in contrib/docker-swarm. In future there will be also support for helm and pure k8s.\nWDYT ?. I think we will support this for 10.8.0 and yes you have right an extra env will make this redundant .\nI tested it and it's working for me. Thanks for the work ;). @Kiina  Thanks for you work looks so far good to me. I will cherry-pick them to release every patch as an independent release.. Everything is done I will close this PR now.. LGTM ! . Hey @rohithn,\nit would be nice to know which version you are currently try to setup ? I seems that something goes wrong with omniauth.. Hey @r2evans,\nI didn't find any hints that this feature is included in the Community Edition and also in the self-hosted version (libre) ? So I guess it's an ee feature.. LGTM ! . LGTM !. Hey @YTS85205107, \nI need some more information about this ? Could you provide something more useful with the Detailed output. You could also enable the Debug Mode  with DEBUG=true for more information.. Hey @drujd,\ncould you rebase your branch against master ? It would be nice to have a separate changelog message for the update of golang .. LGTM !\n. LGTM !. LGTM !. Currently there is blocker in pr. I would like to have the new shiny shiny features. And the most and interessting feature is this https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/17358 . \nI think I can gonna work on this tomorrow/friday. If anyone has more time todo that I would appreciate it ;) .\n. If someone has a better regex for d2f1262dfa658811db04dfe37ce32e562fe401e9 I would be very open for this . \nOtherwise LGTM !. @mfeltscher It takes some time check https://hub.docker.com/r/sameersbn/gitlab/builds/ . But the tag should be there know. . Hey, \nI'll check it out later or tomorrow (saturday).. LGTM ! . LGTM ! \n. Sorry for waiting for this. I tested it and afterwards I had forget to merge it. \nSo\nLGTM ! . I will look at it later probably we gonna switch to travis direct builds.\nKuchaev Ilya notifications@github.com schrieb am Mi., 16. Mai 2018, 08:48:\n\nhttps://hub.docker.com/r/sameersbn/gitlab/builds/\nBuild failed: The command '/bin/sh -c apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E1DD270288B4E6030699E45FA1715D88E1DF1F24 && echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu xenial main\" >> /etc/apt/sources.list && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 80F70E11F0F0D5F10CB20E62F5DA5F09C3173AA6 && echo \"deb http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu xenial main\" >> /etc/apt/sources.list && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 8B3981E7A6852F782CC4951600A6F0A3C300EE8C && echo \"deb http://ppa.launchpad.net/nginx/stable/ubuntu xenial main\" >> /etc/apt/sources.list && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && echo 'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main' > /etc/apt/sources.list.d/pgdg.list && wget --quiet -O - https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && echo 'deb https://deb.nodesource.com/node_8.x xenial main' > /etc/apt/sources.list.d/nodesource.list && wget --quiet -O - https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && echo 'deb https://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y supervisor logrotate locales curl nginx openssh-server mysql-client postgresql-client redis-tools git-core ruby${RUBY_VERSION} python2.7 python-docutils nodejs yarn gettext-base libmysqlclient20 libpq5 zlib1g libyaml-0-2 libssl1.0.0 libgdbm3 libreadline6 libncurses5 libffi6 libxml2 libxslt1.1 libcurl3 libicu55 libre2-dev tzdata && update-locale LANG=C.UTF-8 LC_MESSAGES=POSIX && locale-gen en_US.UTF-8 && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && gem install --no-document bundler && rm -rf /var/lib/apt/lists/*' returned a non-zero code: 2\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1593#issuecomment-389413093,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb8T_JIaPhA01taiWkodRb76HnI5hks5ty8uugaJpZM4TyOlp\n.\n. I retriggered the build through setting the git tag again. For more information look at:\n https://hub.docker.com/r/sameersbn/gitlab/builds/bzjm4ogivatgqfakcprl9a7/. #1602 . Hey,\nthanks for the fix. I hope the feature is working for you now. I will merge it for the next release ;) .. @HEM42 @beevelop I triggered the build new by setting the tag again. For more information look at https://hub.docker.com/r/sameersbn/gitlab/builds/bzjm4ogivatgqfakcprl9a7/. LGTM ! . Let's move to latest version of GitLab. LGTM ! \n. LGTM !. Build isn't finished Check the details at\nhttps://hub.docker.com/r/sameersbn/gitlab/builds/\n\nBoris notifications@github.com schrieb am Sa., 26. Mai 2018, 13:04:\n\nHi as long the release is hot, the 10.8.1 tagged image is missing in the\nhub.\n[image: bildschirmfoto 2018-05-26 um 13 02 53]\nhttps://user-images.githubusercontent.com/14992140/40575437-5c36f8bc-60e5-11e8-942b-cb42a28beeeb.png\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1614, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb43Ekf45tPo1CEkdAXgju6Mdr5LBks5t2TbXgaJpZM4UO3_d\n.\n. Hey @fpeyraud,\n\nthanks for setting up this issue. Something went wrong on my e2e tests. I can confirm this issue now. I need to think about it how we can solve it in an elegant way. . Hey, \nit will be fixed with 10.8.3. If it's not the case for you please reopen this issue.. Hey, \nit will be fixed with 10.8.3. If it's not the case for you please reopen this issue.. LGTM ! . See #1620 . . LGTM !. Hey, \nsorry for that. I will be fixed when '10.8.3' is out. Try this version and it should work again. If not please reopen this issue.. Mhmm strange. I tested it before I was gonna merge it. This could be happen through the introduced lines in last release. https://github.com/sameersbn/docker-gitlab/blob/master/entrypoint.sh#L18 . So we need to find a solution that covers everyone uses case. Could you post the exact steps. From VERSION X to 10.8.3. So I can gonna try to reproduce it.. Could someone provide me the logs from the failing supervisord ?. I tested it again 10.8.2 to 10.8.3 and it's working for me.. Release is underway if your errror still exists please reopen this issue. You can check https://hub.docker.com/r/sameersbn/gitlab/builds/ when the latest version is ready.\nAnd thanks for @adferrand for the work ;) . @adferrand Seems working for me. I tested it with a restart after a migration.. Are there any things left or can we start with a new release ?. Okay I will start with this than now. Thanks for your work \ud83d\udc4d . Hey @mcgowanb ,\nit will be probably fix with #1628 . It will be released soon.. Release is underway if your errror still exists please reopen this issue. You check https://hub.docker.com/r/sameersbn/gitlab/builds/ when the latest version is ready.. Release is underway if your errror still exists please reopen this issue. You check https://hub.docker.com/r/sameersbn/gitlab/builds/ when the latest version is ready.. LGTM ! . LGTM ! . Ah I thought that I merged it already.. Ah I thought that I merged it already.. Ups ! \ud83d\ude05  I will reopen a new one. Ups ! \ud83d\ude05  I will reopen a new one. LGTM !\n. LGTM !\n. LGTM ! . LGTM ! . Hey @pieterlange ,\nsorry for waiting so long. I was the last 10 days on vacation. I think I will need to ensure that this goes a lot of faster in an easier way.. Hey @pieterlange ,\nsorry for waiting so long. I was the last 10 days on vacation. I think I will need to ensure that this goes a lot of faster in an easier way.. But,\nLGTM ! . But,\nLGTM ! . @lenovouser I'm Updating now a lot of stuff. 11.0.3 will also released.. @lenovouser I'm Updating now a lot of stuff. 11.0.3 will also released.. Hey @KartoffelToby ,\nI plan this to use in 11.2.0. I will cherry pick it in the pr for 11.2.0 if it's okay.. Hey @KartoffelToby ,\nI plan this to use in 11.2.0. I will cherry pick it in the pr for 11.2.0 if it's okay.. I will close this now it was included through: https://github.com/sameersbn/docker-gitlab/commit/91e05e4489a5e62602b7229dabeef73e5cf9ff4d. I will close this now it was included through: https://github.com/sameersbn/docker-gitlab/commit/91e05e4489a5e62602b7229dabeef73e5cf9ff4d. Hey @mlsmaycon, \ncould you rebase against master ? This is needed because wenn use circle ci now.. Hey @mlsmaycon, \ncould you rebase against master ? This is needed because wenn use circle ci now.. @GJRTimmer Do you have example configuration with minio to test it ? So we can provide it other users that want to use this feature.\nIt would be great to have an example for that. You can make a separate pull request.. @GJRTimmer Do you have example configuration with minio to test it ? So we can provide it other users that want to use this feature.\nIt would be great to have an example for that. You can make a separate pull request.. @mlsmaycon  Jep a rebase would be fine. @mlsmaycon could you also squash your commits ? Afterwards it looks okay for me.. LGTM ! . I will put it on master so it will live in the latest tag.. @pieterlange I will merge this after #1164 is in master .. @pieterlange I will merge this after #1164 is in master .. LGTM !. LGTM !. LGTM ! . LGTM ! . Thanks for you work it will be included in 1.11.0 ;). Thanks for you work it will be included in 1.11.0 ;). LGTM ! . LGTM ! . Hey @sprucify,\nI think if you have several options how to do this upgrade.\nBeing in equal environment would mean that you update your postgres to sameersbn/postgresql:9.6-4 (It includes the latest changes from ubuntu bionic and postgres 9.6.9) and redis to sameersbn/redis:3.0.6 . \nAfter these updates are shipped you can update gitlab to 11.0.4 .\nFor postgres:10 you can do the same. . Hey @sprucify,\nI think if you have several options how to do this upgrade.\nBeing in equal environment would mean that you update your postgres to sameersbn/postgresql:9.6-4 (It includes the latest changes from ubuntu bionic and postgres 9.6.9) and redis to sameersbn/redis:3.0.6 . \nAfter these updates are shipped you can update gitlab to 11.0.4 .\nFor postgres:10 you can do the same. . Which redis version is used in redis:latest ? . Which redis version is used in redis:latest ? . @sprucify Yes I commited 3 days ago but it's got merged today in the master branch. It's released on github but not on the docker hub.\nFor the information when 11.1.0 is available check: https://hub.docker.com/r/sameersbn/gitlab/builds/ \nIf the issue still exists please reopen the issue.. @sprucify Yes I commited 3 days ago but it's got merged today in the master branch. It's released on github but not on the docker hub.\nFor the information when 11.1.0 is available check: https://hub.docker.com/r/sameersbn/gitlab/builds/ \nIf the issue still exists please reopen the issue.. LGTM !\n. LGTM !\n. LGTM ! . LGTM ! . Did you test it with RELATIVE_URL_ROOT enabled ? To ensure that the assets compiling is also working  again.. Did you test it with RELATIVE_URL_ROOT enabled ? To ensure that the assets compiling is also working  again.. LGTM than ! . LGTM than ! . LGTM ! . LGTM ! . LGTM ! . LGTM !. I will try to do this. I didn't have setup at the moment but I can do it. I think we should think about Integration tests. . Okay I'll prepare some ie tests for that. Should we go with travis or move to circleci ?. Okay, can you prepare the circleci stuff. That this repo is able to use it. I will do the rest than. . Probably this can help to follow the plan https://gitlab.com/gitlab-org/build/CNG/tree/master . Let's create an issue for that and move the discussion to the issue.. I think for the first we could take it over to the next release 11.2.0and in the future we could start with a refactoring of the components.. LGTM !. Hey,\nthanks for your PR. I will test it during the week and give you some feedback for that. . LGTM ! . Otherwise LGTM ! . Should we remove travis than ? . I will merge this by end of the day. . Which docker tag do you use at the moment ? :latest or 11.1.3. I think this is fixed with 11.2.0 I tested it on this version and it was working. Wait for the release and check it out afterwards otherwise reopen this issue.. 11.2.0 is released. Try this Out if IT wont fix your Issue reopen it.. Hey at all,\nI think @xasx has found a temporary workaround for your problem https://github.com/sameersbn/docker-gitlab/issues/1721#issuecomment-419417829 . If this fix your problem let me know. . Hey at all it should be fix with 11.3.0 try it out ;) otherwise reopen this again.. @insekticid I will release every version of 11.2.X to be consistent . @insekticid I will release every version of 11.2.X to be consistent . Hey @harobed ,\ni tested it and it works for me here are my commands:\n```console\nroot@58b6e2677e4a:/home/git/gitlab\nsu - git\n$ bundle exec rake gitlab:backup:create SKIP=registry\n$ ls -alh /home/git/data/backups/\ndrwxr-xr-x  2 git git 4.0K Sep  1 09:40 .\ndrwxr-xr-x 12 git git 4.0K Jul  1  2017 ..\n-rw-------  1 git git 1.2G Sep  1 09:39 1535794798_2018_09_01_11.1.4_gitlab_backup.tar\n``\nCould it be something with your volume under/home/git/data` ?. Hey @harobed ,\ni tested it and it works for me here are my commands:\n```console\nroot@58b6e2677e4a:/home/git/gitlab\nsu - git\n$ bundle exec rake gitlab:backup:create SKIP=registry\n$ ls -alh /home/git/data/backups/\ndrwxr-xr-x  2 git git 4.0K Sep  1 09:40 .\ndrwxr-xr-x 12 git git 4.0K Jul  1  2017 ..\n-rw-------  1 git git 1.2G Sep  1 09:39 1535794798_2018_09_01_11.1.4_gitlab_backup.tar\n``\nCould it be something with your volume under/home/git/data` ?. You need only to wait that the build ist finished. The Progress can be viewed on https://hub.docker.com/r/sameersbn/gitlab/builds/. You need only to wait that the build ist finished. The Progress can be viewed on https://hub.docker.com/r/sameersbn/gitlab/builds/. It seems that you are using gmail. There instructions are for that in the readme https://github.com/sameersbn/docker-gitlab#mail .\nI use the same and it's working for me.. It seems that you are using gmail. There instructions are for that in the readme https://github.com/sameersbn/docker-gitlab#mail .\nI use the same and it's working for me.. LGTM ! . LGTM ! . Important is that this will be my last release before my vacation. I'll be back on 3.10.2018. \n@sameersbn Could you handle the next releases until I will be back.. LGTM ! . Hey @harobed,\nyes I tested it it works. It found some configuration edge cases but I think this is out of scope. The method works only if you don't enable fast lookup for authorized ssh keys.\nhttps://docs.gitlab.com/ce/administration/operations/fast_ssh_key_lookup.html .\nFor the first time we could add this. \nSo LGTM !. Hey, thanks for this I'll be able to release it ~ 2 days. LGTM ! . So there are no changes of gitlab in this release. We'll skip this than.. My assumption was not correct. This should be the correct fix. So we take this than also.. Hey,\nthis will be in 11.6.0 added. If the issue still exists please reopen the issue.. Hey,\nsorry there was an error on the build. I published 11.3.6 via tag now. So you can use it.. LGTM !. LGTM !. LGTM !. LGTM ! . I will close it if your problems still persists. Please feel free to reopen your issue.\n. LGTM ! . Will be published with 11.5.0. Hey @QuickJack,\nit seems there is an issue of missing a migration or something because what it points it is that a table is missing:\npostgresql2_1 | 2018-11-13 12:56:05.293 UTC [218] ERROR: relation \"features\" does not exist at character 323\npostgresql2_1 | 2018-11-13 12:56:05.293 UTC [218] STATEMENT: SELECT a.attname, format_type(a.atttypid, a.atttypmod),\npostgresql2_1 | pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod\npostgresql2_1 | FROM pg_attribute a LEFT JOIN pg_attrdef d\npostgresql2_1 | ON a.attrelid = d.adrelid AND a.attnum = d.adnum\npostgresql2_1 | WHERE a.attrelid = '\"features\"'::regclass\npostgresql2_1 | AND a.attnum > 0 AND NOT a.attisdropped\npostgresql2_1 | ORDER BY a.attnum\npostgresql2_1 |\npostgresql2_1 | 2018-11-13 12:56:05.350 UTC [222] ERROR: database \"gitlabhq_production\" already exists\npostgresql2_1 | 2018-11-13 12:56:05.350 UTC [222] STATEMENT: CREATE DATABASE \"gitlabhq_production\" ENCODING = 'unicode'. LGTM !. LGTM ! . LGTM !. LGTM ! . LGTM !. Hey,\nI fixed it on master. I'll be working now for the latest release. Later when I'm home I'll publish the missing tags.\nIn future this shouldn't happen anymore. I added shellcheck to prevent this cases.\nhttps://github.com/sameersbn/docker-gitlab/pull/1783. Hey at all,\nI fixed it on master. I'll be working now for the latest release. Later when I'm home I'll publish the missing tags.\nIn future this shouldn't happen anymore. I added shellcheck to prevent this cases.\nhttps://github.com/sameersbn/docker-gitlab/pull/1783. @mikehaertl I can't retrigger the build. I rebuilded through my ci and pushed it for you so the tags should also be available back again.. Hey @Its-Alex,\nfor a better reproducibility. Could share your current docker-compose.yml with no secret data in it. So that we can debug it.. I'll check this later on the day thanks for sharing.\n. Hey, \nyesterday was some outages on the docker hub. I got a lot of times that pushes was not correct or pulling. I pushed manually there from my ci. The tag 11.5.0 is available.\n\nIf it's not working for you. Please reopen this  issue.. Hey,\nthis will be released with 11.6.0. Thanks for your work. I need to cherry-pick it manually but you can find it here https://github.com/sameersbn/docker-gitlab/commit/5c59e16edb53976330dbcacfd5e22b265b780b2c .\n. Hey,\nthis will be released with 11.6.0. Thanks for your work. I need to cherry-pick it manually but you can find it here https://github.com/sameersbn/docker-gitlab/commit/e5feefa189a87b27c89f31c2c42f9330688a0b89 .\n. @GJRTimmer  Could you rebase please ? I added all missing updates of the gitlab apps through #1799  . Hey,\na rebase would be good so that this can into the next release.. Can be closed now. This was merged through #1827 .. I will close this with a new release 11.5.1-1. It can be closed since 11.5.1-1 is released also 11.5.5 will be available. Thanks for this. Something during my update procedure seems to be going wrong. It shouldn't happen in future. I will release a separate release for this.. Thanks :neckbeard: . Hey @Beanben,\nyour problem is that you try to use localhost for your database this won't work in container execept your brake up the network isolation. By default every container has it's own localhost.\nSo to fix that use the external IP of your database and ensure that the connection from your container is allowed.. If the error still exists please reopen the issue.. Hey @qq339837609,\nyou shouldn't do an upgrade from your version to the latest one. Because this error happens because you left some upgrades. \nWhat I would recommend is that you do a rolling update for each Major.Minor so this should solve your problem.. Will come after this.. Hey @GJRTimmer,\nthank you for your Pull Request. I seems that there is a lot of work in it. But it has also a lot of breaking changes for this repository. Also there are some new features that at the moment out of scope. To clarify we should start a roadmap for the project and future changes. (This will come from my side)\nFirst of all I\u2019ll say that I won\u2019t replace the current master with your master branch, because of the breaking changes and that I can\u2019t guarantee anyone from my side that this will work backwards and with no migration steps. (This is the current state of the Pull Request) .\nNow let\u2019s dive inside your Components:\n\nUpgrade Components\nWorkhorse: 8.0.0\nGitaly: 1.12.0\nShell: 8.4.4\n\nThese versions are the latest from master and for the release. This could have breaking changes and breaks the whole releases or unintended side effects.\n\nImplemented global configuration (config.yml) \n\nI\u2019m not a really fan of an global configuration. This requires also a parser and structure for the configuration. I know you implemented it in bash but I won\u2019t increase the readability. I think it increases only complexity, because not everyone has the use case to build different gitlab images. \nI think we should cover some features here in the upstream but for this I need sometime to think about it how we can handle this in a good manner with a stable process without breaking changes until 12.X  . \nFor this we need smaller commits and probably more pull requests to implement them separately. \nRegarding the merged issues:\n\nFixes #699 (LDAP Attributes)\nFor this routine we need some tests of how to integrate LDAP and see that it\u2019s working.\n\n\nFeatures: GitLab Pages &&  GitLab Pages  Access Control\nThis should be included in the next release. I need only to verify that it works\n\n\nLFS Uploads\nThis should be included in the next release. I need only to verify that it works\n\n\n\nI hope you can understand my concerns regarding this pull request.\nIt\u2019s okay for me that you have your own fork with different changes.\n. I'll close this issue cause we can't integrate it directly and we have different directions. But I'm open for discussion so let's move this to an issue.. Hey at all,\nI'm back from my visit at kubecon and finally my vacation ends. I'll do the updates tomorrow.\n@paolomainardi  I think we should make easier that more people can contribute to this project. This would help me as a maintainer to review pr and bump versions more frequently because I need only to check the pull request.\n. Hey,\nyep it seems so because ci is also runned successfully. The problem is that I can't retrigger a build manually on docker hub. I'll provide the images from ci.\nhttps://circleci.com/gh/sameersbn/docker-gitlab/308?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link. It's done you can use them now. Have fun with the new release.. LGTM ! \nI think it can be in the next release this means it would be in 11.6.1 available.. Currently this is blocked until yarn gpg key will be updated. See the issue here:\nhttps://github.com/yarnpkg/yarn/issues/6865. Hey @tiangolo,\nsorry for waiting. I'll check it out tomorrow (saturday) and give you the final feedback.\n. I saw this issue also on my mirrored repository on the hub. I think this\ncomes through the \"new\" docker hub and the new nodes got only  around 2 - 4\nGB Memory.\nAlso I can't see any build logs on the hub anymore.\nWe should think about a technical user that publishes images direct from\nCircleCI.\nIf you agree feel free to create the User and provide the credentials in\nCircleCI.\nAm Do., 3. Jan. 2019, 14:47 hat Sameer Naik notifications@github.com\ngeschrieben:\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/sameersbn/docker-gitlab/pull/1830\nCommit Summary\n\nfix image builds on docker hub\n\nFile Changes\n\nM assets/build/install.sh\n   https://github.com/sameersbn/docker-gitlab/pull/1830/files#diff-0\n   (2)\n\nPatch Links:\n\nhttps://github.com/sameersbn/docker-gitlab/pull/1830.patch\nhttps://github.com/sameersbn/docker-gitlab/pull/1830.diff\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1830, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA2Gb10i6ayeOzY5UgX5AbYGCueWr6roks5u_gntgaJpZM4ZoHed\n.\n. I don't have any button there.\n\n\nYep that would be my plan. For the user doesn't change so much and everyone can easily see if a build was successful or not.. Hey, \nit seems that it's a problem from the registry, because 2.7.0 is not semver. It violates it through this setting. \nTo fix it in your instance you can set the following env:\n```bash\nREGISTRY_AUTH_TOKEN_AUTOREDIRECT=true\n````\nor use it in your config.yml:\nyml\n...\ntoken:\n    autoredirect: true    \n    service: container_registry   \n    issuer: gitlab-issuer\n...\n. Oh you was 19 seconds earlier than my post. But It fixes the problem.. Hey, \nI think there is problem with your permissions. Did you try to set the correct permissions on your system with:\ndocker run --name gitlab -d [OPTIONS] \\\n    sameersbn/gitlab:11.6.3 app:sanitize. Did you try to set the SELinux Labels ? \nTo give you a better support would be to show your current docker-compose.yml without secret values.. Hey @Prash45,\nwhich image are you currently using ? Because it seems that you use gitlab/gitlab-ce and not sameersbn/gitlab . These are different ways of using GitLab. \nsameersbn/gitlab\nIs an installation from source without omnibus. This won't have a gitlab-ctl.\ngitlab/gitlab-ce\nUses Omnibus to manage all the process inside.\n. Hey @CommanderTso ,\nThis issue is problem because gitaly is changed as a core requirement. This means it needs to be run when executing rake tasks relating to git because gitaly does this git commands.\nThe current way you describe is a workaround with this image. But it would work and I think I would also do it so. \nA better approach would be to separate gitaly from this gitlab container and start a separate gitaly container so it's easier to handle from the docker side. But this would be a breaking change. I think we could takle this with 12.X .. I think something goes wrong on docker hub automated builds again. I published it from my ci systems. If this issue still exists please reopen it.. LGTM ! . Thanks for pointing this out. I'll fix it today.. Hey, \nI think we shouldn't ship 11.7.1 and 11.7.2 because they weren't released while they got problems in the QA.. I'll close because this doesn't match the correct components version I did a merge request that resolves that #1859 and added also the follow update #1860 .. LGTM ! . Hey,\nit's not perfect but almost done. You missed the gitlab-shell to8.4.4 (latest version).\nCould you also update to the correct version ? \nThanks for your work ;). ping @greyferret. Ah okay fine let's :shipit: . Hey @drubin,\nI'll check this out later. Do you have a small example config to test this directly ? Probably we can pick this up in 11.8.0. Hey @drubin,\nI only need time to check this. I didn't get it until now. I'll try it on the weekend. \nA first view it's looking good to me. But let's me try this and when everything is working for me. I think it can be in the next release. As a first shot my side. . That it's not tagged is correct because I'm thinking of implementing new features. But latest should work. I'll figure out why. I think we need to push this tags through circle ci the docker hub is not reliable enough. . Everything is like before 11.8.0 is tagged and it's released on docker hub. So you can use it. I'll think about it how can't have this type of impact again in future releases.. LGTM !. Do we need the links anymore ? I guess it's redudant through the networks.\n. The networks key isn't needed because docker-compose will create an own network by default. So this could be remove @sameersbn.\n. Its only required when you run an external load-balancer like nginx or something else.\n. Thanks for the hint.\n. You are right.\n. Could we change$GITLAB_REGISTRY_PORTto${GITLAB_REGISTRY_PORT}to be more consistent. I know this is an error of my own.\n. Yeah I didn't see that I will copy it. Thanks for the hint \ud83d\udc4d \n.  I think you should write line 27 likeSSH_HOST_KEYS_DIR=${SSH_HOST_KEYS_DIR:-${GITLAB_DATA_DIR}/ssh}and the removal of the trailing backslash in line 28 is obsolete in my opinion.  Because you remove it and add the slash again this is a little bit confusing \ud83d\ude05 .\n. What is purpose of line because I will be ovewritten by line 134\n. Same behaviour like my comment before\n. This could be a separated commit. To make an easier revert possible.\n. Use current image tagsameersbn/gitlab:8.12.7. I didn't say anything  \ud83d\ude0f . \n.REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORYmust be/var/lib/registryotherwise you get some errors like this:\n```\nError response from daemon: Login: {\"errors\":[{\"code\":\"UNAVAILABLE\",\"message\":\"service unavailable\",\"detail\":\"health check failed: please see /debug/health\"}]}\n (Code: 503; Headers: map[Date:[Mon, 21 Nov 2016 08:02:51 GMT] Content-Length:[125] Content-Type:[application/json; charset=utf-8]])\n```. And you mount your volumes to/var/lib/registry. I guess it should be preferred to have your images on your host :). I'm quite not sure. If we should use a separate function for checking an authenticated redis connection.. Here is it the same we should separate it.. Could you make these changes in separate commit.. I think thatOAUTH_SAML_PRIVATE_KEYandOAUTH_SAML_CERTIFICATEshould be optional and not a must have. . Logical way for an optional way ofOAUTH_SAML_PRIVATE_KEYandOAUTH_SAML_CERTIFICATE. . I think it should [Docker GitLab image](https://gitlab.com/gitlab-org/gitlab-ce/tree/master/docker).. Use echo instead. Same like my comment before. I guess we could remove this and directly fromassets/nginx/gitlab_pages. Default value for$GITLAB_USERis missing. Why is setting the home directory needed ? . At the moment I don't want to have them dynamically in theinstall.sh. So please re add them there because it's easier to change the version and have an overview which version is currently used.\n. We could do this. But first we should check if an VERSION has been set from the Dockerfile.. This should be a separate commit. To make an easier revert if it's working correctly in the upstream again.. Here you squash your last commit from the parallel build.. Same as the comment before.. Could make these changes as a separate commit. I assume that we should change the precompile method as well to\n```bash\nexec_as_git bundle exec rake gitlab:assets:compile USE_DB=false SKIP_STORAGE_VALIDATION=true\n```. For all the GitLab Components like GITLAB_SHELL_VERSION could you make a separate commit for the version changes. And more important for the GOLANG_VERSION as well.. It seems so. In the upstream documentation they are using onlygitlab:assets:compileto compile the assets. . Yeah. I want only fine grained commits for theses changes. Then we get a simple history that everybody can understand directly and doesn't need to check every upgrade commit. I will make a separate commit for every release. So from this point we could see which changes happen between a release.. Thanks for pointing that out.\n. If monitoring isn't required removed the whole key this can be done throughGITLAB_MONITORING_ENABLED.. For the first time it's okay to support only 1 single ip whitelisting. The key for that would beGITLAB_MONITORING_IP_WHITELIST. Add a new key forGITLAB_MONITORING_UNICORN_SAMPLER_INTERVALotherwise if it's not set remove them.. IfGITLAB_MONITORING_SIDEKIQ_EXPORTER_ENABLED== false remove the whole part for this.. Set hereGITLAB_MONITORING_SIDEKIQ_EXPORTER_ENABLED.GITLAB_MONITORING_SIDEKIQ_EXPORTER_ADDRESS.GITLAB_MONITORING_SIDEKIQ_EXPORTER_PORT. This should have the default values.localhostmake not direct sense in a container environment so let's use0.0.0.0. This should have a default value. The default value could be3807. I think the default value should be here0.0.0.0/8. So that we can get access from outside.. This should have a placeholder as wellGITALY_TOKEN. For the value it could be blank.. The env varible cloud beGITLAB_ REPOSITORIES_STORAGES_DEFAULT_FAILURE_COUNT_THRESHOLD. The default value would be10.. The env varible cloud beGITLAB_ REPOSITORIES_STORAGES_DEFAULT_FAILURE_WAIT_TIME. The default value would be 30.. The env varible cloud beGITLAB_ REPOSITORIES_STORAGES_DEFAULT_FAILURE_RESET_TIME. The default value would be 1800.. The env varible cloud beGITLAB_ REPOSITORIES_STORAGES_DEFAULT_STORAGE_TIMEOUT. The default value would be 5.. @lenovouser Yeah I agree with you. This was yesterday my first guess.. I think we should keep this information. Replace Gitlab with GitLab . It would be neat and for backwards compability to remove themultipart_chunk_sizewhenAWS_BACKUP_MULTIPART_CHUNK_SIZE is not set. I think not everyone needs this directly.. Here should be the link to the  documentation for the community edition and not enterprise edition replace this with thishttps://docs.gitlab.com/ce/raketasks/backup_restore.html#backup-strategy-option. I didn't these configuration options. They will be added  it was during the update from the upstream.. we could specify heredocker:stable-gitthan we don't need to worry about the docker version.. Here thandocker:stable`. I think we should make the group id changeable via variable or a flag \nGITLAB_USERGROUP=$1\nGITLAB_USERGROUP=${GITLAB_USERGROUP:-1010}. The same here for the user. Here also the ssh port . generate the rsa key with a least 4096 bits to be a little more secure. I think we should have a separate document for this and linking only here to document.\nSo than we could have a documented in the docs. \nAs an example have a look on https://github.com/sameersbn/docker-gitlab/blob/master/docs/container_registry.md or https://github.com/sameersbn/docker-gitlab/blob/master/docs/s3_compatible_storage.md. Probably we don't to add this to the install.sh\nWhat you can do is to copy the exisiting sshd_conf\n```\n$ docker cp gitlab_gitlab_1:/etc/ssh/sshd_config .\n\nAuthorizedKeysFile   %h/.ssh/authorized_keys\nAuthorizedKeysFile %h/.ssh/authorized_keys %h/.ssh/authorized_keys_proxy\n\nSo that it would be more clear to the user\n. And mount the config back inside the container because it was created during build and changed by the runtime. Please don't use backticks for creating subshells use\n--build-arg BUILD_DATE=$(date -u +\"%Y-%m-%dT%H:%M:%SZ)\n```\nFor date I think it would be more readable to specify the format so use date --rfc-3339=s instead of your date command.\n. again backticks. here also.. here also.. here also.. here also.. Typo ${C_PROJECT_PATH} should ${CI_PROJECT_PATH}. Specify default version. This will also people to build it  without specifing the version.\nVERSION=11.4.5. Backticks and date format should be refactored.. Backticks . This doesn't allow to overwrite it. I think you should do\nbash\nGITLAB_BACKUP_DIR_CHOWN=${GITLAB_BACKUP_DIR_CHOWN:-true}. I think there should be also a docker pull before the build so with this we can ensure that the cache exists\ndocker pull ${IMAGE_NAME}. Small Typ Gitlan to GitLab. Use directly ${CI_COMMIT_REF_SLUG} instead of your replace ${CI_COMMIT_REF_NAME/\\//-}. Use directly ${CI_COMMIT_REF_SLUG} instead of your replace ${CI_COMMIT_REF_NAME/\\//-}. I don't like the naming of this variable, because I think the for the user it's not directly clear what this variable can do. I think more clear way would be NGINX_GITLAB_PAGES_PROXY or GITLAB_PAGES_NGINX_PROXY. I found it also here not clear what this variables means. I think a better name would be directly the reuse of this variable GITLAB_BACKUP_DIRECTORY or GITLAB_BACKUP_TARGET_DIRECTORY. Is this variable not the same like you try to implement ? . Instead of going through the nginx you can call the workhorse directly with traefik.port=8181. For an easier management it would be more nice that use an variable to get the consistency other multiple values.\nThis means it would look like this\n- \"traefik.frontend.rule=Host:${GITLAB_HOST:-git.example.com}\"\nThis can be now overriden in two different ways. \n\nPass it directly with command GITLAB_HOST=2-git.example.com docker stack deploy -c docker-compose.swarm-stack.yml\nYou can provide an file called .env and write the environment variables directly\n```bash\n\n.env\nGITLAB_HOST=2-git.example.com\n```. It would also recommend to use an env here:\nGITLAB_REGISTRY_HOST=${GITLAB_REGISTRY_HOST:-registry.example.com}. - GITLAB_HOST=${GITLAB_HOST:-git.example.com}. Why do we need a password file to generate the key with a password ? . It can be traefik:v1.7. In general instead of a long command. I would also like to see a separate docker-compose.traefik.stack.yml. It's better to maintain instead of a command. . It would be more accurate to move this under assets/runtime/function and add the env to /assets/runtime/env-defaults\n1. Create an own function for your certificate generation \n2. Provide the env in in env-defaults\nAlso to be backwards compatible it should set to false by default. . Yep.\nI think this is missing.\nexec_as_git sed -i \"/username: \\\\[''\\\\],/d\" ${GITLAB_CONFIG}\nBut also email and name should be removed.\nexec_as_git sed -i \"/email: \\\\[''\\\\],/d\" ${GITLAB_CONFIG}\n exec_as_git sed -i \"/name: \\\\[''\\\\],/d\" ${GITLAB_CONFIG}\nping @galexrt . Thanks. \nLGTM ! . ",
    "jay61439476": "Hi, @sameersbn \nI use this in my LAN,\nI clone smtp_settings.rb to /opt/gitlab/data/config/gitlabhq\nchange to \n```\nTo enable smtp email delivery for your GitLab instance do next:\n1. Rename this file to smtp_settings.rb\n2. Edit settings inside this file\n3. Restart GitLab instance\n\nif Rails.env.production?\n  Gitlab::Application.config.action_mailer.delivery_method = :smtp\nActionMailer::Base.smtp_settings = {\n    address: \"exmail.my.com.cn\",\n    port: 25,\n    domain: \"my.com.cn\",\n    authentication: \"plain\"   #I also test  authentication: \":plain\", but still not work...\n  }\nend\n```\nBut I can't receive mail, the production.log show : Sent mail to jay@my.com.cn (5135.6ms)\nI run this docker use:\ndocker run --name=gitlab -p 88:80 -d \\\n  --link mysql:mysql \\\n  -e \"DB_USER=gitlab\" -e \"DB_PASS=root\" -e \"DB_NAME=gitlabhq_production\" \\\n  -e \"GITLAB_EMAIL=gitlab2@my.com.cn\" -e \"GITLAB_SUPPORT=gitlab2@my.com.cn\" \\\n  -e \"GITLAB_SIGNUP=true\" \\\n  -e \"GITLAB_HOST=gitlab2.my.com.cn\" \\\n  -v /opt/gitlab/data:/home/git/data \\\n  sameersbn/gitlab:7.0.0\nI have an old gitlab, configure step by step. has SMTP conf in production.rb like this\n```\n  ## SMTP Settings\n  config.action_mailer.delivery_method = :smtp\n  config.action_mailer.smtp_settings = {\n      :address => 'exmail.my.com.cn',\n      :port => 25,\n      :domain => 'my.com.cn', ## My Domain\n      :authentication => :plain, ## Let it be plain as it is inside my LAN\n      ##:user_name => 'gitlab@yourserver.com', ## This is not required as long as\n      ##:password => 'yourPassword', ## SMTP Gateway allows anonymous relay\n      ##:enable_starttls_auto => true ## In LAN\n      ##:user_name => '',\n      ##:password => '',\n      :enable_starttls_auto => true,\n      :openssl_verify_mode => 'none'\n  }\n  config.eager_load = true\n  config.assets.js_compressor = :uglifier\nconfig.allow_concurrency = false\nend\n```\nThis server works OK, is there any  thing wrong I set in  smtp_settings.rb\n. thanks @sameersbn \nIt still no work, I'm trying to find other configure,   I run docker-gitlab and my old gitlab on the same server, I will send it to a new server and try again.\nthank you~\n. ",
    "thrisp": "running\ndocker run -i -t --rm sameersbn/gitlab:latest\nseems to run ok;  there is a lot of output there that looks like its doing something constructive; however I cannnot connect to the container ip address (in this instance 172.17.42.1) even after 5 minutes post command.\npostgres image is:\norchardup/postgresql:latest\nrun with: \nsudo docker run -d --name pgdatalocal -p 127.0.0.1:5432:5432 -v /opt/postgresql:/var/lib/postgresql orchardup/postgresql\n. I'm still new to using Docker, but as for starting I'm able to use the latest image with a postgresql container, the dev container I have.\n. thank you\n. ",
    "tritao": "This is a great idea, having a Vagrant file to get it up and running quickly would also be very nice.\n. ",
    "piclez": "I liked the idea of having a Vagrantfile too +1\n. Hi @sameersbn I was able to have it running now but I can't access it from outside my VM. I setup in Vagrantfile:\nconfig.vm.network :forwarded_port, guest: 10080, host: 10080\nbut I can't reach localhost:10080 from outside my VM. If I curl within the VM I get the login page.\n. @sameersbn and @jk that did the trick for me running inside the VM!\nI had previously opened those ports in the VM but removing the IP is a good idea.\nThanks a lot!\nPS: I just can't make it work running outside a VM with docker 1.0.0 on Mac OS 10.8.3\n. ",
    "djdefi": "Could also utilize fig ( https://github.com/orchardup/fig ) as an alternative to Vagrant. \nSomething like: \nfig.yml:\ngitlab:\n  image:  sameersbn/gitlab:latest\n  links:\n   - redis:redisio\n  ports:\n   - \"80:80\"\n   - \"10022:22\"\nredis:\n  image: sameersbn/redis:latest\nWould also be able to add a database container and persistent volumes etc to this.\n. It is also possible to pass an Environment file to the docker run command if you don't like the long string of -e \"GITLAB_PORT=10080\" -e .....\nFor example:\ndocker run --name='gitlab' -i -t --rm \\\n-p 10022:22 -p 10080:80 \\\n--env-file=myvars.txt \\\nsameersbn/gitlab:7.0.0\nThen in myvars.txt:\nGITLAB_PORT=10080\nGITLAB_SSH_PORT=10022\n. I am also seeing this with https enabled.  We are not using any load balancer in front of the container.\nFirefox dev console reports: \nLoad denied by X-Frame-Options: https://gitlab.domain.com/admin/sidekiq does not permit framing.\n. This is the output from docker logs <container> when the 500 error occurs:\n172.17.35.5 - - [15/Aug/2014:22:33:28 +0000] \"POST /websites/website-com/merge_requests HTTP/1.1\" 500 349 \"https://gitlab.example.com/websites/website-com/merge_requests/new?merge_request%5Bsource_branch%5D=s3-plugin&merge_request%5Bsource_project_id%5D=30&merge_request%5Btarget_branch%5D=master&merge_request%5Btarget_project_id%5D=30&merge_request%5Btitle%5D=S3+plugin\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:31.0) Gecko/20100101 Firefox/31.0\"\n. Looking at the production.log, it appears that this may be an issue with my external MySQL server resetting the connection on the very large query that it creates for the merge request.\nRight before the failure I see:\nMysql2::Error: MySQL server has gone away: UPDATE `merge_request_diffs`..... \n...\n<HUGE QUERY>\nThen\n```\nMysql2::Error: closed MySQL connection: ROLLBACK\nCompleted 500 Internal Server Error in 290ms\nActiveRecord::StatementInvalid (Mysql2::Error: closed MySQL connection: ROLLBACK):\napp/services/merge_requests/create_service.rb:9:in `execute'\napp/controllers/projects/merge_requests_controller.rb:87:in `create'\n```\n. I will attempt the MySQL config change today and let you know the result.\nSent from my iPhone\n\nOn Aug 16, 2014, at 3:41 AM, Sameer Naik notifications@github.com wrote:\n@djdefi if you can confirm this, i will update my mysql container and the internal mysql server config as well.\n\u2014\nReply to this email directly or view it on GitHub.\n. @sameersbn I have applied this change to my DB host.  I have not yet had a large merge request to really test with.  Seems like it should be a valid fix though.\n. @sameersbn it appears that it depends on the available memory on a system. If you allocate too much it could run the system out of memory on a large query.\n\nI went with the 512M as recommended in the link you found. I can't imagine that anyone would be able to run a MySQL instance for Gitlab with much less than 1GB total ram.\n. Just to follow up:\nHave not yet had time to migrate to Postgres. \nAfter setting  max_allowed_packet=512M in the mysql config we have not had this issue show up again so far.\n. That seems like a fine solution to me. I agree it doesn't make sense to set 512M for the MySQL container default.\n. I believe you need to add:\n-e 'GITLAB_SSH_PORT=10022'\nIf this is not set then the URL provided does not have the correct SSH port for the Gitlab container. \nThe password prompt you are seeing there is for port 22 which is likely the Docker host itself, which you do not want.\n. +1 also 500 error here - logs look the same as @jk \n. Took at look in production.log - seems to be an LDAP error for me.\nLooking at the CHANGELOG.md there is a new attribute:\nLDAP_ACTIVE_DIRECTORY: Specifies if LDAP server is Active Directory LDAP server. If your LDAP server is not AD, set this to false. Defaults to true,\nI added this and set to true as we are using plain LDAP.\nHere is the output from production.log:\n```\nless production.log \nWARNING: terminal is not fully functional\nStarted GET \"/\" for 127.0.0.1 at 2014-10-23 20:54:56 +0000\nProcessing by DashboardController#show as HTML\nCompleted 500 Internal Server Error in 97ms\nRuntimeError (Unknown provider (ldap). Available providers: [\"ldapmain\"]):\n  lib/gitlab/ldap/config.rb:97:in invalid_provider'\n  lib/gitlab/ldap/config.rb:21:ininitialize'\n  lib/gitlab/ldap/adapter.rb:13:in new'\n  lib/gitlab/ldap/adapter.rb:13:inconfig'\n  lib/gitlab/ldap/adapter.rb:7:in open'\n  lib/gitlab/ldap/access.rb:11:inopen'\n  lib/gitlab/ldap/access.rb:17:in allowed?'\n  app/controllers/application_controller.rb:204:inldap_security_check'\n```\n. +1\nSent from my iPhone\n\nOn Feb 1, 2015, at 3:47 PM, Romke van der Meulen notifications@github.com wrote:\nAmazing! I would not have believed it if I hadn't seen it with my own eyes. This has got to be the most painless gitlab deploy I've ever done. This docker image is truly a marvel of engineering.\nI'm sorry to abuse the issue system for this, but I could not rest without giving you my thanks for taking messy work that used to take up entire afternoons and compressing it into a few minutes.\nWell done sir!\n\u2014\nReply to this email directly or view it on GitHub.\n. +1\n\nSent from my iPhone\n\nOn Feb 1, 2015, at 3:47 PM, Romke van der Meulen notifications@github.com wrote:\nAmazing! I would not have believed it if I hadn't seen it with my own eyes. This has got to be the most painless gitlab deploy I've ever done. This docker image is truly a marvel of engineering.\nI'm sorry to abuse the issue system for this, but I could not rest without giving you my thanks for taking messy work that used to take up entire afternoons and compressing it into a few minutes.\nWell done sir!\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "kfatehi": "my program ydm is now functionally complete for use as an installer of @sameersbn's gitlab image. you can check the source here https://github.com/keyvanfatehi/ydm or grab it from npm https://www.npmjs.org/package/ydm\nafter installing, try installing gitlab with ydm gitlab install --namespace test -- from there the error message will help you pass in customized environment variables.\n. dude this image and the postgres image are so well done, and so well documented.. rock on man. thank you again\n. @sameersbn wow thank you for the kind words and solving the issue -- i can continue finishing it up now. i'm honored that you think it is a fine solution to the issues discussed in #46 \n. ",
    "spiddy": "I added the fig.yml as PR. It was necessary to make a small change in order to auto-configure database on first-launch, wthen the PR is merged the fig.yml file will be ready to work even remotely (no need to compile anything)\nAs for the installer part, I open-sourced part of what I'm doing at http://harbur.io/\nyou can check the https://github.com/harbur/docker-sdlc repo. It is a collection of fig.yml files that support multi-container orchestration of an SDLC environment.\nThe purpose of that repo is to be production-ready setup guide. Fig format to describe multi-container setup is pretty robust and using https://github.com/centurylinklabs/fig2coreos iit can be easily translated to coreOS configuration to adapt to more corporate environments.\nhope you find it useful.\n. At https://github.com/harbur/docker-sdlc I have prepared various fig.yml files including examples to launch docker-gitlab.\nHere is an example to launch gitlab with multi-containers:\nI haven''t tried it yet with 7.3.1.\n\nmysql:\n  image: orchardup/mysql:latest\n  environment:\n    - MYSQL_USER=gitlab\n    - MYSQL_PASSWORD=uidoosaipakadila\n    - MYSQL_DATABASE=gitlabhq_production\ngitlab:\n  image: sameersbn/gitlab:7.3.0\n  links:\n   - redis:redisio\n   - mysql:mysql\n  ports:\n   - \"80\"\n   - \"22\"\n  environment:\n    - DB_USER=gitlab\n    - DB_NAME=gitlabhq_production\n    - DB_PASS=uidoosaipakadila\nredis:\n  image: sameersbn/redis:latest\n\nI'll prepare a PR soon.\n. Not fully-working yet, still got an issue with initializing the\nAdministrator user in database. I'll update when it's fully functional.\n2014-09-24 14:29 GMT+02:00 Sameer Naik notifications@github.com:\n\n@spiddy https://github.com/spiddy nice!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/152#issuecomment-56662050\n.\n. I added info about the how-to in the PR.\n\nQuestion, is the repository hook-linked with dockerhub? latest container will contain all master changes when merged?\n. fair enough. I'm closing this then.\n. Ok, but being pragmatic, I think in the case of a docker container, the\nrelative url is a non-usual case. The container is isolated by other apps\nand relative URL doesn't make any benefit (except for backward\ncompatibility of previous systems)\nI'd vote for precompiling assets without relative url. In case relative URL\nis activated start script could rebuild assets automatically during startup.\n On Oct 10, 2014 5:25 PM, \"Sameer Naik\" notifications@github.com wrote:\n\n@jeffutter https://github.com/jeffutter I can confirm that this is the\ncase. Additionally here is a comment about it in the gitlab sources\nhttps://github.com/gitlabhq/gitlabhq/blob/master/config/application.rb#L68\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/153#issuecomment-58671383\n.\n. ok, that sounds much better\n\n2014-09-24 19:28 GMT+02:00 Sameer Naik notifications@github.com:\n\n@spiddy https://github.com/spiddy Please hold on. I will make some\nchanges removing the requirement to run execute the gitlab:setup rake\ntask altogether regardless of the database in use. I will post a comment\nhere so that you are notified about the changes.\nPost that you can revert your changes in the init file and rebase your PR\nwith just the fig parts.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/154#issuecomment-56707547\n.\n. I'm closing this to make a cleaner PR.\n. \n",
    "zacker330": "@sameersbn I try\n1. clone your sameersbn/docker-gitlab\n2. docker build -t xxxx/gitlab .    (success)\n3. docker run -i -t xxx/gitlab \n   User: root Password: zooph8cieNex\n    sshd: started\n    nginx: started\n    mysqld: ERROR (abnormal termination)\nI'd try it again and again.\n$docker info\n   Containers: 36\n   Images: 274\n   Storage Driver: aufs\n    Root Dir: /var/lib/docker/aufs\n    Dirs: 349\n   Execution Driver: native-0.1\n   Kernel Version: 3.8.0-35-generic\n   Username: xxx\n   Registry: [https://index.docker.io/v1/]\n   WARNING: No swap limit support\n. @sameersbn thinks .\nI had done it as you said. but the problem not be solved. It seems cause by mysql. I can't run mysql's image yet.\nMy operation system is ubuntu 13.04\n. @sameersbn\n docker run -i -t --rm xxx/gitlab bash \nI can't dive in it.\n. @sameersbn  thinks very much\n. ",
    "cridenour": "@sameersbn That's fantastic and exactly what I was looking for. Thanks!\n. Turns out this was a configuration issue. Gitlab-shell had the gitlab_url defined as \nbash\ngitlab_url: http://git.domain.com:443\ndue to my environment variables I was setting to get https to work. Changing this to the proper https://git.domain.com fixed the issue. I think I've seen talk of a proper SSL support pull request - but if not, let me know and I would be happy to help since I've been through the trouble already!\n. ",
    "LordFPL": "Hi @sameersbn , yes it was the only way to have mails working (smtp, plain).\nWarning, there was a modification during the last versions : \"plain\" is now defined with \"plain\" and not \":plain\" as seen before.\nRemoving smtp auth is working as \"plain\" when i made some tests (so, it's the simpliest solution i think ;))\n. Hi @sameersbn , yes it was the only way to have mails working (smtp, plain).\nWarning, there was a modification during the last versions : \"plain\" is now defined with \"plain\" and not \":plain\" as seen before.\nRemoving smtp auth is working as \"plain\" when i made some tests (so, it's the simpliest solution i think ;))\n. Oups... my fault... i already made the correction, but forget to copy it in the patch, sorry...\n. Oups... my fault... i already made the correction, but forget to copy it in the patch, sorry...\n. Hi,\nJust back to work, i try the new version : all is working ! :)\nThx :)\n. Hi,\nJust back to work, i try the new version : all is working ! :)\nThx :)\n. It's working :) Thx :)\n. It's working :) Thx :)\n. For information, i made a little test : \n```\ndocker run -it --rm ruby:2.2 gem install bundler\nERROR:  While executing gem ... (ArgumentError)\n    IPv6 address must be 16 bytes\ndocker run -it --rm ruby:2.1 gem install bundler\nERROR:  While executing gem ... (ArgumentError)\n    IPv6 address must be 16 bytes\ndocker run -it --rm ruby:2.0 gem install bundler\nSuccessfully installed bundler-1.10.6\n1 gem installed\n```\nStrange... because it seems to work for other people..\n. For information, i made a little test : \n```\ndocker run -it --rm ruby:2.2 gem install bundler\nERROR:  While executing gem ... (ArgumentError)\n    IPv6 address must be 16 bytes\ndocker run -it --rm ruby:2.1 gem install bundler\nERROR:  While executing gem ... (ArgumentError)\n    IPv6 address must be 16 bytes\ndocker run -it --rm ruby:2.0 gem install bundler\nSuccessfully installed bundler-1.10.6\n1 gem installed\n```\nStrange... because it seems to work for other people..\n. A working but absolutely awful patch (to put just before gem install....) : \nsed -i 's/host = uri.host/host = \"http:\\/\\/rubygems.org\"/g' /usr/lib/ruby/2.2.0/rubygems/remote_fetcher.rb\n. A working but absolutely awful patch (to put just before gem install....) : \nsed -i 's/host = uri.host/host = \"http:\\/\\/rubygems.org\"/g' /usr/lib/ruby/2.2.0/rubygems/remote_fetcher.rb\n. Thx for your answer, but if i understand well, this is already what i do when i edit files under assets/config/nginx.\nI will continue, no problem :)\n. Thx for your answer, but if i understand well, this is already what i do when i edit files under assets/config/nginx.\nI will continue, no problem :)\n. Thank you very much for this clarification, I did not in fact understand correctly ... your solution is exactly what I was looking for (I hope at least this ticket serve others who, like me, done a search on \"set_real_ip_from \").\nThx again and again :-)\n. Thank you very much for this clarification, I did not in fact understand correctly ... your solution is exactly what I was looking for (I hope at least this ticket serve others who, like me, done a search on \"set_real_ip_from \").\nThx again and again :-)\n. Hello,\nFor information, i have added a docker env \"prometheus_multiproc_dir=/dev/shm\", and it's work :)\nSteps to add /-/metrics : \n- Add GITLAB_MONITORING_IP_WHITELIST=\n- Add prometheus_multiproc_dir=/dev/shm (or else location)\n- Check \"Enable Prometheus Metrics\"\n- Restart\n. Hello,\nFor information, i have added a docker env \"prometheus_multiproc_dir=/dev/shm\", and it's work :)\nSteps to add /-/metrics : \n- Add GITLAB_MONITORING_IP_WHITELIST=\n- Add prometheus_multiproc_dir=/dev/shm (or else location)\n- Check \"Enable Prometheus Metrics\"\n- Restart\n. Hmm... big problem in fact... if i disable gitaly... git clone on http access is failing : \n2017/09/21 07:44:11 error: GET \"/xxxxxx/xxxxxx.git/info/refs?service=git-upload-pack\": handleGetInfoRefs: GetInfoRefsHandler: rpc error: code = 14 desc = grpc: the connection is unavailable\nHave to restart gitaly... but performance are bad, and i have supervisord logs as say in my initial post each minute :(. Ok, i found the problem... path are differents on official image. You have to modify /home/git/gitaly/config.toml to add:\n```\n[gitaly-ruby]\nThe directory where gitaly-ruby is installed\ndir = \"/home/git/gitaly/ruby\"\n```\nAfter adding this, restart via supervisorctl all is ok again.. I will try to look at this... but i'm at work... and not very friend with git. My PR was done with github website only.\nIf you want to do anything else with my commit, or do another with other methods, i will be totaly ok ;). I will try to look at this... but i'm at work... and not very friend with git. My PR was done with github website only.\nIf you want to do anything else with my commit, or do another with other methods, i will be totaly ok ;). My fault sorry, PR is done https://github.com/sameersbn/docker-gitlab/pull/1380. My fault sorry, PR is done https://github.com/sameersbn/docker-gitlab/pull/1380. My fault, sorry, i just make a patch : https://github.com/sameersbn/docker-gitlab/pull/1380. My fault, sorry, i just make a patch : https://github.com/sameersbn/docker-gitlab/pull/1380. Or in one line : \ndocker exec -it gitlab bash -c 'supervisorctl stop unicorn sshd ; source ${GITLAB_RUNTIME_DIR}/functions ; execute_raketask gitlab:backup:create SKIP=$GITLAB_BACKUP_SKIP ; supervisorctl start sshd unicorn'. Or in one line : \ndocker exec -it gitlab bash -c 'supervisorctl stop unicorn sshd ; source ${GITLAB_RUNTIME_DIR}/functions ; execute_raketask gitlab:backup:create SKIP=$GITLAB_BACKUP_SKIP ; supervisorctl start sshd unicorn'. ",
    "chilons": "Thanks a lot, I deleted all the images, repulled and the problem is gone now.\n. ",
    "repole": "I too am having this issue with 6.8.2. No amount of removing the image and repulling seems to solve it.\n6.8.0 seems to work just fine though.\n. So I have a totally clean install of ubuntu and docker. No other images. Should I be pulling these Ubuntu images prior to pulling yours?\nIt seems that when I get the github repo and manually build from there, the ubuntu images are getting pulled as well, but when I docker pull sameersbn/docker-gitlab:6.8.2, the only image that ends up being built is docker-gitlab, none of the ubuntu stuff. \n. I've done a remove of 6.8.2 five times now and repulled, each time totally clearing my images/containers, and I'm still getting the /bin/cp error. \n6.8.1 and 6.8.0 seem to run fine, but when actually browsing to localhost:10080 I just get an nginx page (many hours after having started the container).\nPulling from github and building eventually gets me an error:\nsudo: unable to execute /bin/mkdir: Permission denied\nThe command [/bin/sh -c /app/setup/install] returned a non-zero code: 1\nI'm on Ubuntu 14.04, I'll probably try with Ubuntu 13 in a bit if I can't figure anything out here.\nAny logs or things that I can send along that may be of use? \nAlso thanks for the support and fast responses, really appreciate it.\n. Latest also gives me the bin/cp issue, have tried it a good five times now with a totally clean install.\nEvery docker pull or github build I've done has been on a clean docker/ubuntu install, I've always cleared out all images and containers after, so I'm at a bit of a loss.\n. Gave that a shot, unfortunately same error:\nSuccessfully installed bundler-1.6.2\n1 gem installed\n ---> c38e8ff8324b\nStep 3 : ADD assets/setup/ /app/setup/\n ---> 083da30c087e\nStep 4 : RUN chmod 755 /app/setup/install\n ---> Running in ad0b7e950775\n ---> e7b9dbb19305\nStep 5 : RUN /app/setup/install\n ---> Running in ed487c6b4133\nAdding user git' ...\nAdding new groupgit' (1000) ...\nAdding new user git' (1000) with groupgit' ...\nCreating home directory /home/git' ...\nCopying files from/etc/skel' ...\npasswd: password expiry information changed.\nsudo: unable to execute /bin/mkdir: Permission denied\n2014/05/24 10:40:33 The command [/bin/sh -c /app/setup/install] returned a non-zero code: 1\nI'll probably try a few more things and keep tinkering, and if no success, I'll try waiting until the next release. Really do appreciate all the help though, regardless of the outcome.\n. Just as a quick update, everything seems to be working swimingly with Ubuntu 12.04 as my OS. Suppose it's a compatibility issue with 14.04.\n. ",
    "outrunthewolf": "Same issue:\nsh\nStep 5 : RUN /app/setup/install\n ---> Running in 8ca20ac14004\nAdding user `git' ...\nAdding new group `git' (1000) ...\nAdding new user `git' (1000) with group `git' ...\nCreating home directory `/home/git' ...\nCopying files from `/etc/skel' ...\npasswd: password expiry information changed.\nsudo: unable to execute /bin/mkdir: Permission denied\n2014/05/28 11:18:40 The command [/bin/sh -c /app/setup/install] returned a non-zero code: 1\nI'm on 13.04\nBuilding from source\nUsing latest\n. @sameersbn ha yeah sorry to compound the problem.\nNo it doesn't look like selinux is installed\nYes I did use sameersbn/gitlab:latest\nAnd yes I made sure I had a clean image\nI have however spun up a droplet with 12.04 running and the install went completely fine.\nDo you have an idea of where the issue lies? \n. @sameersbn :+1: \nI ran the index on Digital Oceans Ubuntu/Docker VPS which I assume uses the stock ubuntu docker package and it failed.\nI then spun up a VPS and built docker from source, which worked. Nice one :boom: :star: \nSo this is an issue with the Ubuntu package and not a specific Ubuntu itself?\n. @georgkreimer Its a worthy addition. Maybe a p/r? \n. ",
    "georgkreimer": "@sameersbn Maybe you should mention in the README that the default docker.io package doesn't work here. Just had the same issue, but following the steps above fixed it.\n. never mind. just saw it... it's actually in there. all the way at the end https://github.com/sameersbn/docker-gitlab#reporting-issues\n. ",
    "halkeye": "I've installed lxc-docker (14.04) and still have the same issue. Is there any indication on what the issue is? Does building the image help?\nhalkeye@barkdog ~ $ docker run --name='gitlab' -it --rm -p 10022:22 -p 10080:80 -e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=10022' sameersbn/gitlab:7.1.1\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nStarting openssh server...\nsudo: unable to execute /bin/cp: Permission denied\nhalkeye@barkdog ~ $ docker --version\nDocker version 1.1.2, build d84a070\n. Ah, deleting the image and reinstalling seemed to fix\n. ",
    "cmoulliard": "Problem is still there with image 7.9.4\ndocker logs gitlab\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nHere is the instructions used to launch the container\n```\ndocker run -itdP --name redis sameersbn/redis\ndocker run -itdP --name gitlab -e 'DB_TYPE=mysql' -e 'DB_HOST=192.168.59.103' -e 'DB_NAME=gitlabhq_production' -e 'DB_USER=gitlab' -e 'DB_PASS=xxxxx' -e 'GITLAB_SIGNUP=true' -e 'GITLAB_SSH_PORT=10022' -e 'GITLAB_PORT=10080' -p 10022:22 -p 10080:80 --env GITLAB_ROOT_PASSWORD=$GITLAB_PASSWORD --link redis:redisio --privileged sameersbn/gitlab:$GITLAB_VERSION\nwhere $GITLAB_VERSION = 7.9.4\n```\n. ",
    "AdamDanischewski": "I had this problem, I didn't \"fix it\", yet worked around it simply starting the sshd daemon on my own - instead of using the services/init.d/upstart. I recommend you test out starting sshd on your own (use the fully qualified path to sshd from root) and start it with -Dd to keep it from daemon'izing into the background and it will print debug information. If that's working fine, you can implement the workaround (starting it on your own) while you continue to search for the solution to the policy/upstart/init.d interactions. . ",
    "venth": "@sameersbn I encountered the issue during building the image. I use also the offical 14.04 ppa. Regardless to the configuration, just modifying the sudoers files fixed the build. If you consider the branch as unless let me know this ;) I'll remove the branch.\n. OK. Thanks for clarification:) It's great project :+1:\n. ",
    "ivanacorovic": "I was using sameersbn/gitlab:6.9.2, and I get this same thing when I use latest, too. It works just fine when I run without options for postgresql database (which is on a separate server), but it does the migrations. When I use:\ndocker run --name=gitlab -i -t --rm \\\n  -e \"DB_HOST=162.243.74.160\" -e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=password\" \\\n  -v /opt/gitlab/data:/home/git/data \\\n  sameersbn/gitlab:6.9.2 app:rake gitlab:setup\ndatabase gets set fine and, but running server with:\nsudo docker run --name=gitlab -i -t \\\n  -e \"DB_TYPE=postgres\" -e \"DB_HOST=162.243.74.160\" -e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=password\" \\\n  -v /opt/gitlab/data:/home/git/data \\\n  sameersbn/gitlab:6.9.2\nI just get that line in red (Repo base access is drwxrws---? ... no) and everything else seems fine, but when I type in my IP:10080, I get \"Unable to connect\". By the way, the line in red appears also without db options (mentioned at the begining), but that works fine. \n. I added that and also:\n-p 10022:22 -p 10080:80 -e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\"\nwhich was silly of me not to think of in the first place. Thank you!!\n. ",
    "matejkramny": "I have this problem, and cannot solve it!\n```\nGit configured for git user? ... yes\nChecking Environment ... Finished\nChecking GitLab Shell ...\nGitLab Shell version >= 1.9.4 ? ... OK (1.9.6)\nRepo base directory exists? ... yes\nRepo base directory is a symlink? ... no\nRepo base owned by git:git? ... yes\nRepo base access is drwxrws---? ... no\n  Try fixing it:\n  sudo chmod -R ug+rwX,o-rwx /home/git/data/repositories/\n  sudo chmod -R ug-s /home/git/data/repositories/\n  find /home/git/data/repositories/ -type d -print0 | sudo xargs -0 chmod g+s\n  For more information see:\n  doc/install/installation.md in section \"GitLab Shell\"\n  Please fix the error above and rerun the checks.\nSatellites access is drwxr-x---? ... yes\nupdate hook up-to-date? ... yes\n```\nI tried app:sanitize, doing the steps manually, doing them inside the docker vm.. Nothing helps!\nWhat can i do?\nThe volume is attached with -v /home/gitlab:/home/git/data\nI tried fixing the permissions all sorts of way, as i described above. But nothing will help. I am quite desperate. Can anyone help?\n. We should update the docker image, then run app:sanitize yh?\nMatej Kramny\nOn 19 Jun 2014, at 07:37 am, Sameer Naik notifications@github.com wrote:\n@matejkramny https://github.com/matejkramny @ivanacorovic\nhttps://github.com/ivanacorovic this commit resolves the issue. Apparent\nthe 's' flag in files/directories can only be changed by the owner of the\nfile/directory. Just had to run the required commands as the git user. The\nTBS is ready to be consumed. Just make sure tou run the app:sanitize\ncommand to make sure all directory permissions are fixed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/72#issuecomment-46528076\n.\n. Launched the image with\ndocker run -it --rm --link mysql_db:mysql --link gitlab_redis:redis --hostname example.com -e \"REDIS_HOST=redis\" -e \"DB_HOST=mysql\" sameersbn/gitlab:7.3.2-1\nand still throws up that error.\n[root@ks1 ~]# docker run -it --rm --link mysql_db:mysql --link gitlab_redis:redis --hostname example.com -e \"REDIS_HOST=redis\" -e \"DB_HOST=mysql\" sameersbn/gitlab:7.3.2-1\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nsed: -e expression #1, char 23: unknown option to `s'\n[root@ks1 ~]#\n. Hi just tried again..\nIt does fix the issue, thanks\nMatej Kramny\nOn 13 Oct 2014, at 5:53 am, Sameer Naik notifications@github.com wrote:\n@matejkramny https://github.com/matejkramny did i work?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/175#issuecomment-58845022\n.\n. ",
    "enter08": "sudo docker run --name=gitlab -i -t -e \"DB_TYPE=postgres\" -e \"DB_HOST=162.243.74.160\" -e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=password\" -p 10022:22 -p 10080:80 -e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" -v /opt/gitlab/data:/home/git/data sameersbn/gitlab:6.9.2\n. No, I followed the guide correctly.\nI ran this command right before the one I sent previously.\nsudo docker run --name=gitlab -i -t --rm -e \"DB_TYPE=postgres\" -e \"DB_HOST=162.243.74.160\" -e \"DB_NAME=gitlabhq_production\" -e \"DB_USER=gitlab\" -e \"DB_PASS=password\" -p 10022:22 -p 10080:80 -e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" -v /opt/gitlab/data:/home/git/data sameersbn/gitlab:6.9.2 app:rake gitlab:setup\n. ",
    "attilagyorffy": "@sameersbn I'm getting the same error on a Digital Ocean VPS where I should still have enough memory left.\nCreating satellites for ...\nMyname / a.domain.is.here ... exists already\nMyname / my-repo ... exists already\ntracklistr / tracklistr-client ... exists already\ntracklistr / tracklistr.com ... exists already\ntracklistr / tracklist-models ... exists already\nMyname / repo1 ... exists already\nMyfriend / repo1 ... exists already\nMy.other.friend / infrastructure-provisioning ... exists already\nMy.other.friend / mydomain.net ... exists already\nrake aborted!\nErrno::ENOMEM: Cannot allocate memory - whoami\n/home/git/gitlab/lib/gitlab/popen.rb:23:in `popen'\n/home/git/gitlab/lib/tasks/gitlab/task_helpers.rake:83:in `run'\n/home/git/gitlab/lib/tasks/gitlab/task_helpers.rake:104:in `warn_user_is_not_gitlab'\n/home/git/gitlab/lib/tasks/gitlab/check.rake:293:in `block (3 levels) in <top (required)>'\nTasks: TOP => gitlab:check => gitlab:env:check\nThere should be still enough memory on the machine:\nattila@nl ~> free -h\n             total       used       free     shared    buffers     cached\nMem:          994M       253M       740M       336K        14M        76M\n-/+ buffers/cache:       162M       831M\nSwap:           0B         0B         0B\nCan this be a problem with docker?\n```\n$ docker --version\nDocker version 1.0.0, build 63fe64c\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nsameersbn/gitlab    latest              c57768d21053        32 minutes ago      1.221 GB\n```\nLinux version:\n```\n$ cat /etc/lsb-release \nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=14.04\nDISTRIB_CODENAME=trusty\nDISTRIB_DESCRIPTION=\"Ubuntu 14.04 LTS\"\n$ uname -a\nLinux my.domain.net 3.11.0-12-generic #19-Ubuntu SMP Wed Oct 9 16:20:46 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux\n```\n. @sameersbn I'm getting the same error on a Digital Ocean VPS where I should still have enough memory left.\nCreating satellites for ...\nMyname / a.domain.is.here ... exists already\nMyname / my-repo ... exists already\ntracklistr / tracklistr-client ... exists already\ntracklistr / tracklistr.com ... exists already\ntracklistr / tracklist-models ... exists already\nMyname / repo1 ... exists already\nMyfriend / repo1 ... exists already\nMy.other.friend / infrastructure-provisioning ... exists already\nMy.other.friend / mydomain.net ... exists already\nrake aborted!\nErrno::ENOMEM: Cannot allocate memory - whoami\n/home/git/gitlab/lib/gitlab/popen.rb:23:in `popen'\n/home/git/gitlab/lib/tasks/gitlab/task_helpers.rake:83:in `run'\n/home/git/gitlab/lib/tasks/gitlab/task_helpers.rake:104:in `warn_user_is_not_gitlab'\n/home/git/gitlab/lib/tasks/gitlab/check.rake:293:in `block (3 levels) in <top (required)>'\nTasks: TOP => gitlab:check => gitlab:env:check\nThere should be still enough memory on the machine:\nattila@nl ~> free -h\n             total       used       free     shared    buffers     cached\nMem:          994M       253M       740M       336K        14M        76M\n-/+ buffers/cache:       162M       831M\nSwap:           0B         0B         0B\nCan this be a problem with docker?\n```\n$ docker --version\nDocker version 1.0.0, build 63fe64c\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nsameersbn/gitlab    latest              c57768d21053        32 minutes ago      1.221 GB\n```\nLinux version:\n```\n$ cat /etc/lsb-release \nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=14.04\nDISTRIB_CODENAME=trusty\nDISTRIB_DESCRIPTION=\"Ubuntu 14.04 LTS\"\n$ uname -a\nLinux my.domain.net 3.11.0-12-generic #19-Ubuntu SMP Wed Oct 9 16:20:46 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux\n``\n. Also, the container is being run linked to asameersbn/postgresql:9.1-1database and using the following options:\n-d --link postgresql:postgresql --link redis:redisio --env-file /home/git/gitlab/docker.env -p 8081:80 -p 8022:22 -v /home/git/gitlab/data:/home/git/data. Also, the container is being run linked to asameersbn/postgresql:9.1-1database and using the following options:\n-d --link postgresql:postgresql --link redis:redisio --env-file /home/git/gitlab/docker.env -p 8081:80 -p 8022:22 -v /home/git/gitlab/data:/home/git/data`\n. You guys are awesome, thank you for such quick response @xueshanf and @sameersbn. Using the suggested upgrade path I am finally running the latest version.\nI've been looking at the CHANGELOG to find out whether there's something important to do (removal of ENV vars, additional requirements etc) but the required upgrade path was not mentioned. Do you think you could mention these in the future to avoid people having to look at the upstream projects? (Just my $0.02)\nThanks again.\n. You guys are awesome, thank you for such quick response @xueshanf and @sameersbn. Using the suggested upgrade path I am finally running the latest version.\nI've been looking at the CHANGELOG to find out whether there's something important to do (removal of ENV vars, additional requirements etc) but the required upgrade path was not mentioned. Do you think you could mention these in the future to avoid people having to look at the upstream projects? (Just my $0.02)\nThanks again.\n. @sameersbn I did upgrade via 7.8.1 -> 7.14.3 -> then wen straight to 8.2.0 (I had no CI before and am not using it now either -- although I've read somewhere that CI is now built in?)\n. @sameersbn I did upgrade via 7.8.1 -> 7.14.3 -> then wen straight to 8.2.0 (I had no CI before and am not using it now either -- although I've read somewhere that CI is now built in?)\n. ",
    "stayclassychicago": "Just wanted to offer a variation (or more like a combination) of @sameersbn 's suggestion on how we're doing this\ndocker run option:\n-e TZ=${TZ-`readlink /etc/localtime | sed -e 's,/usr/share/zoneinfo/,,'`}\nAnd then this initialization is executed in the entrypoint.sh, since our java applications don't use the TZ environment variable:\nif [ -n ${TZ} ] && [ -f /usr/share/zoneinfo/${TZ} ]; then\n  ln -sf /usr/share/zoneinfo/${TZ}  /etc/localtime\nfi\n. ",
    "caneraydinbey": "How can i change jre so  that i dont have to use command because command line doesnot work for my issue. i need to manually update with tzupdate for daylight http://stackoverflow.com/questions/40418187/update-docker-contanier-jre-timezone\n. ",
    "zergood": "Thanks for your reply.\n. ",
    "lsjostro": "@sameersbn, would you mind backporting this to the 6.9.2 release and push an update to docker registry?\nWould really like to restore a backup from a 6.9.2 installation.\n. @sameersbn , you're the man! ;-)\n. @sameersbn, that was quick! Thanks again! :)\n. ",
    "Nekroze": "@sameersbn: i am using self signed and have already set that to true. It is a bit hard to get the exact command i use to run the image because i am using DryDock (https://github.com/Nekroze/drydock) which is a little program of my own invention that automatically constructs multiple containers and manages them with a reverse proxy (nginx) all based on a yaml config file. This program automatically constructs the commands the run the containers based on that config.\nBasically though these are the configurations i am using:\n    http_port: 80 # nekroze.com:80\n    https_port: 80 # nekroze.com:443 and nginx adds the certificate\n    exposed_ports:\n        22: 22 # nekroze.com:22\n    volumes: [/home/git/data, /var/lib/mysql] # for persistance\n    envs: # environment variables that get turned into -e switches in the run command\n        SSL_SELF_SIGNED: true\n        GITLAB_HTTPS: true\n        GITLAB_HTTPS_ONLY: false\n        GITLAB_HOST: nekroze.com\nAlmost the exact same settings work fine for your gitlab-ci image when changed appropriately for ci. Lets me log in and everything.\nThanks a heap for the swift response, sorry its a bit weird of a set up.\n. @sameersbn Indeed i am using the latest version. i should be able to run it manually. This is something i will have to do tomorrow night unfortunately. Likely i will just patch DryDock to print out the run commands as it runs the containers so i can pick that up from the logs.\n. @sameersbn Here is my run command that presents with the issue:\n$ docker run -d --dns 172.17.42.1 --name root -h nekroze.com -p 22:22 -v /etc/timezone:/etc/timezone:ro -v /var/lib/nekroze.com/root/home/git/data:/home/git/data -v /var/lib/nekroze.com/root/var/lib/mysql:/var/lib/mysql -e \"SSL_SELF_SIGNED=True\" -e \"GITLAB_HTTPS=True\" -e \"GITLAB_HOST=nekroze.com\" -e \"GITLAB_HTTPS_ONLY=False\" sameersbn/gitlab\n. @sameersbn Damn, looks like i have been outdone. Thanks for the info.\nI will give the lowercase and timezone thing a try. Will close this issue now and re-open should it not work.\nThanks a heap for all the help mate. Love your work.\n. @sameersbn Thank you for the point at nsenter, very useful.\nI have discovered that the ldap config section of gitlab.yml has an empty password field. I believe it should be there as i am not sure where else you would specify it.\n. Yeah i noticed that one after my last post but now that it is fixed i still cannot login via ldap. I am continuing to investigate.\n. @sameersbn I have no ''&'' or ''!'' in my configs.\nHere is my current run command:\n$ docker run -d --dns 172.17.42.1 --name root -h nekroze.com -p 22:22 -v /etc/localtime:/etc/localtime:ro -v /var/lib/nekroze.com/root/home/git/data:/home/git/data -v /var/lib/nekroze.com/root/var/lib/mysql:/var/lib/mysql -e 'LDAP_PORT=389' -e 'LDAP_PASS=7Q71C0J6XzMWESu4yYyN' -e 'SMTP_HOST=mail.nekroze.com' -e 'GITLAB_SUPPORT=support@nekroze.com' -e 'LDAP_BASE=OU=People,OU=Logons,OU=Users,OU=Nekroze,DC=nekroze,DC=local' -e 'LDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true' -e 'LDAP_UID=sAMAccountName' -e 'GITLAB_HTTPS_ONLY=false' -e 'LDAP_BIND_DN=CN=ldap,OU=Users,OU=Nekroze,DC=nekroze,DC=local' -e 'GITLAB_EMAIL=admin@nekroze.com' -e 'LDAP_METHOD=plain' -e 'SMTP_DOMAIN=nekroze.com' -e 'SSL_SELF_SIGNED=true' -e 'GITLAB_BACKUP_EXPIRY=604800' -e 'GITLAB_HOST=nekroze.com' -e 'GITLAB_HTTPS=true' -e 'SMTP_PORT=25' -e 'LDAP_HOST=pdc.nekroze.local' -e 'LDAP_ENABLED=true' -e 'GITLAB_BACKUPS=daily' sameersbn/gitlab\nI would really appreciate any assistance. My apologies for turning the issue board into a forum.\n. @jk I can definantly ping pdc.nekroze.local however i cannot test ldap or telnet as i cannot get it to install anything new.\nMy ldap server is a Samba 4 domain and i cannot locate ldap connection specific logs.\n. i tried the apt-get but all i get back is:\nroot@nekroze:/# apt-get install telnet\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nThe following NEW packages will be installed:\n  telnet\n0 upgraded, 1 newly installed, 0 to remove and 45 not upgraded.\nNeed to get 67.1 kB of archives.\nAfter this operation, 167 kB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu/ trusty/main telnet amd64 0.17-36build2 [67.1 kB]\nFetched 67.1 kB in 1s (50.0 kB/s) \ndebconf: delaying package configuration, since apt-utils is not installed\ndpkg: error: PATH is not set\nE: Sub-process /usr/bin/dpkg returned an error code (2)\nYeah i can ping via nsenter and it reaches pdc.nekroze.local fine.\nI am able to connect other apps to ldap fine.\n. perhaps if i remove all of the stateful data and start fresh with ldap rather then adding ldap later.\n. no difference, sadly.\n. My apologies. The issue was with my domain controller that suddenly disabled that from being able to login. Thanks so much for the assistance gents.\n. ",
    "jk": "I coincidentally had the same problem this morning. Changing -p 127.0.0.1:10022:22 -p 127.0.0.1:10080:80 to -p 10022:22 -p 10080:80 did the trick. Now works on OS X 10.9.3 (for testing) and a Ubuntu 12.04.2 LTS machine.\n. @sameersbn Done.\n. :+1: for the 1.6 branch. A lot have changed from 1.4.\n. Works for me. Serves as spdy/3.1. :+1: \n. I'm still investigating the issue. I'll get back to you. Just using single-quotes will not fix the issue entirely. \n. @sameersbn So, I found a solution:\nJust use single-quotes instead of double-quotes and you have to escape an ampersand & to \\&. The exclamation mark ! should not be escaped.\nI use -e 'LDAP_USER_FILTER=(\\&(objectClass=person)(objectClass=user)(!(objectClass=computer)))' and that works.\n. Found a solution to the issue (at least it fixes it for non-root users, and since you migrated to nsenter, this isn't a problem any longer):\nbash\ntouch /etc/default/locale\necho \"LC_ALL=en_US.UTF-8\" >> /etc/default/locale\necho \"LANG=en_US.UTF-8\" >> /etc/default/locale\nFixes the issue. I'm not completely aware of your init script at the moment, so I'm not able to give you a pull request.\n. Sadly, no:\nbash\n~ jk$ ssh -l root -p 10022 host.domain.tld\nroot@host.domain.tld's password: \n-bash: warning: setlocale: LC_ALL: cannot change locale (de_DE.UTF-8)\n[root@63a98e8b865b ~]# echo $LC_ALL\nde_DE.UTF-8\n[root@63a98e8b865b ~]# su git\nbash: warning: setlocale: LC_ALL: cannot change locale (de_DE.UTF-8)\ngit@63a98e8b865b:~$ echo $LC_ALL\nde_DE.UTF-8\ngit@63a98e8b865b:~$ exit\n[root@63a98e8b865b ~]# logout\nConnection to host.domain.tld closed.\n. @sameersbn Build all locales is bit overkill IMO. Prepping the /etc/default/locale file is sufficient for push via git. I think, you should go with that. Or is it a severe problem to build the image with this file in place?\nIt does not behave incorrectly but a warning on every push will lead to confusion onto our junior developers here, I think.\n. :+1: will have look\n. Thanks for letting me know. :+1: \n. Thanks, the advice with mounting /etc/localtime works for me.\n. @Nekroze are you sure you can reach pdc.nekroze.local from within the container? You can verify that while you enter with bsenter that container and ping or better telnet your ldap host. \nI remember there is also a tool called ldap-test you can install to test the connection from within. \n. @Nekroze really from within that container not from the docker host? I initially had a that problem. \nYou can install software when you are inside the container. For example via apt-get install vim.\n. @sameersbn no problem. I don't really have something to do lying at the beach on fuerteventura ;) living the future answering issues with my iPhone :))\n. I think you misunderstood me. If a web server sends the browser the HSTS header (line 113) every subsequent browser request to any other port will be locally redirected by the browser to HTTPS port.\nFor example:\n- gitlab runs on port 443\n- gitlab-ci runs on port 3000\n1. Client browser requests gitlab at https://host.tld/\n2. Server responds as expected with gitlab and the HSTS header\n3. Client browser requests gitlab-ci at http://host.tld:3000/\n4. Client browser rembers HSTS header \u2192 checks HSTS lifetime:\n   - if now is within the lifetime, client browser redirects without requesting the server to https://host.tld/ instead of the requested http://host.tld:3000/ on behalf of the user ( gitlab, not gitlab-ci)\n   - otherwise: I think it rechecks the header and if it's there it also redirects - not sure about this part\nSo the server is not reachable via Port 3000. And that's what is expected if the server admin sends the HSTS header (it's there to avoid any plain HTTP traffic).\nMore over: since the load balancer setup requires turning on HTTP it downgrades the security of the gitlab instance unnecessarily.\nI'll see if I can supply you with the parameters of our in-production container.\n. @sameersbn Sorry for not answering earlier. I'll test that and will get back to you. Need a couple more days - packed schedule here.\n. I don't if this is related, but after upgrading from 7.3.0 to 7.3.1-2 I ran into an infinity loop:\nStarting nginx...\nWaiting for database server to accept connections...\nWaiting for database server to accept connections...\nWaiting for database server to accept connections...\nWaiting for database server to accept connections...\nWaiting for database server to accept connections...\nDowngrading back again to 7.3.0 fixed it again. I'm using an external MySQL server which is not dockerized.\n. @majkinetor Sharing various directories violates the separation of concern principle. Can you do it? Yes. Should you do it? Hell no.\nYou shouldn't do it, because the configuration will be scattered over a lot of containers. One-app-per-container has the goal to reduce tight coupling, yes, but for the sake for maintainability, not for better performance. And IMO the performance impact of multiple nginx instances isn't that noteworthy.\n. @majkinetor You have an argument here with DRY. But for me DRY is more or less a result of copy-and-paste coding. And when there is Separation of concerns vs. DRY. SoC wins, because DRY often tends to violate KISS - and therefor maintainability again. \n. @majkinetor Yupp, I can agree with that. It's a design decision @sameersbn made. I would also like it to be a separate nginx container too, but I also see in the current implementation of docker it is way too complicated to achieve this.\nI would highly insist on cross-container directory sharing. Sharing directories should only be possible between a host and 1 container, but that's my opinion.\nBy the way: When splitting up the internal nginx into its own container, you will also want to remove all nginx completely. That's what happened (or will happen) to the internal mysql server. So no, the user will not be always happy. Except when you give in and bloat your container.\nThe issue can probably be closed, @sameersbn ?\n. Oh, and when I try to reach the server, I get a 500 error.\n. There seem to be more problems. The backup task removed all 7.3.1(-3) backups (I wasn't expecting this) and isn't able to restore from the newly created 7.4.0 backup. I suppose it's because there was an empty repository at the time the backup was created. While restoring it failed restoring that empty repository - so the whole backup failed.\n. @sameersbn Thanks for your awesome response times for an open source project. I can say that we don't freak out. Besides the gitlab backups, we have daily VMWare backups - so don't worry :)\n\nCan you guys disable LDAP and check if gitlab works? You might be able to login if you had setup a password for your account. This will at least help us figure out if this is caused by LDAP configuration.\n\nThat brings back up gitlab and it's running, albeit the supervisor output remains:\nUpdating CA certificates...\nMigrating database...\nCompiling assets. Please be patient, this could take a while...\nCreating satellites...\nStarting supervisord...\n2014-10-24 06:06:22,105 CRIT Supervisor running as root (no user in config file)\n2014-10-24 06:06:22,105 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\n2014-10-24 06:06:22,105 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\n2014-10-24 06:06:22,105 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\n2014-10-24 06:06:22,105 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\n2014-10-24 06:06:22,105 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\n2014-10-24 06:06:22,155 INFO RPC interface 'supervisor' initialized\n2014-10-24 06:06:22,155 CRIT Server 'unix_http_server' running without any HTTP authentication checking\n2014-10-24 06:06:22,155 INFO supervisord started with pid 1\n2014-10-24 06:06:23,158 INFO spawned: 'sidekiq' with pid 2787\n2014-10-24 06:06:23,161 INFO spawned: 'unicorn' with pid 2788\n2014-10-24 06:06:23,164 INFO spawned: 'cron' with pid 2789\n2014-10-24 06:06:23,167 INFO spawned: 'nginx' with pid 2790\n2014-10-24 06:06:23,174 INFO spawned: 'sshd' with pid 2791\n2014-10-24 06:06:24,175 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2014-10-24 06:06:24,175 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2014-10-24 06:06:24,175 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2014-10-24 06:06:24,175 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2014-10-24 06:06:24,175 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n\nHopefully gitlabhq will release a hotfix for this soon until then check if the resolutions mentioned in the issues i linked above resolves the issue for you or switch back to 7.3.1 if you can and above all remain calm.\n\nI tried that, but 7.3.1 crashes during launch, perhaps there was breaking changes in the database migration step.\n\nIf you are using the image in production environments I recommend that you delay updates by a couple of days after the gitlab release, allowing some time for the dust to settle down.\n\nYeah, gitlab isn't critical infrastructure as of now for us, but I think, since it is a docker environment, we build a clone environment to test future migrations before we migrate the production system.\n\ngitlab automatically removes backups older than the GITLAB_BACKUP_EXPIRY configuration, which defaults to 7 days. So probably it is why the backups were deleted.\n\nProbably, yes, I didn't check before hand, but I know that we did DAILY gitlab backups. So the most recent backup should have been max. 24 hours ago.\n. The official CHANGELOG can be found here. But for some reason they don't enlisted the 7.4.2, nevertheless the 7.4.2 incorporates the following changes:\n- Fix LDAP authentication for Git HTTP access\n- Fix LDAP config lookup for provider 'ldap'\n. By the way, you can also take a look at issue https://github.com/sameersbn/docker-gitlab/issues/39\n. @pnelsonsr would you please than close the issue. Thanks.\n. Why not also add the plain_url as a parameter?\n. It's probably a bug in 7.8.1 - I just upgraded from 7.8.0 (which was working fine) and I'm now told that my user is locked.\nAccording to the CHANGELOG they did change something in regard to LDAP: \n\n\nFix the warning for LDAP users about need to set password\n. I just downgraded to 7.8.0 and it works again. So for now you should try 7.8.0 until @sameersbn found a solution or it's fixed upstream.\n. @sameersbn Probably. If it's still an issue you can reopen the issue.\n. \n\n",
    "riccardomerolla": "Solved. Thanks!!!\n. ",
    "ianmurrays": "Apparently that was it. Nice call!\u2014\nIan Murray S.\nSent via mobile, please excuse brevity and grammar.\nOn Tue, Jun 24, 2014 at 1:38 AM, Sameer Naik notifications@github.com\nwrote:\n\n@ianmurrays You run command looks perfectly fine. I also tested it locally here without any issues. The only reason this would happen is if GITLAB_PORT was set to 80, but your command clearly sets GITLAB_PORT to 443.\nSo here's what I think is happening, you must have previously set GITLAB_PORT=80 when you enabled https and now your browser has cached the redirection and is now redirecting to https://myhost:80 on its own without checking with the server. The solution to this issue is to clear your browser cache.\nReply to this email directly or view it on GitHub:\nhttps://github.com/sameersbn/docker-gitlab/issues/88#issuecomment-46933954\n. \n",
    "wsouto": "@sameersbn please consider to change to the nginx ppa. The 1.6 series could not make into official ubuntu repos since it's a LTS and started with 1.4 series. I might be wrong, and hope I am, but I have no expectation that 1.6 comes to ubuntu 14.04. But it's just me, tho...\n. ",
    "auraltension": "Thanks for the response\n```\nroot@jake:~# rm -rf /opt/gitlab/data/tmp\nroot@jake:~#  docker run --name='gitlab' -it --rm --link postgresql:postgresql \\\n\n-p 10022:995 -p 10080:8080 \\\n-e \"DB_USER=gitlab\" -e \"DB_PASS=rOrUQUqCvPLqEL8PSwC9a\" -e \"DB_NAME=gitlabhq_production\" \\\n-e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" \\\n-v /opt/gitlab/data:/home/git/data \\\nsameersbn/gitlab:latest\nUser: root Password: phu8ri3Uquue\nStarting openssh server...\nStarting redis server...\nStarting nginx...\nMigrating database...\nCompiling assets. Please be patient, this could take a while...\nInstance method \"lock!\" is already defined in ActiveRecord::Base, use generic helper instead or set StateMachine::Machine.ignore_method_conflicts = true.\n\nroot@jake:~# docker ps a\nCONTAINER ID        IMAGE                         COMMAND             CREATED             STATUS              PORTS               NAMES\n3de9ff3a7a2d        sameersbn/postgresql:latest   /init               2 days ago          Up 41 hours         5432/tcp            postgresql \n```\nI looked up the 'instance method \"LOCK\"' warning and theres an issue thread in Gitlab, but they claim it is a warning and gitlab should still work ?\n. Yeah, That ^ is a complete copy of my terminal. Confirmed by docker logs.\n. ohh after spotting the following in my syslog I think this actually may be caused by my grsecurity patched kernel:\ngrsec: From X.X.X.X: denied RWX mmap of <anonymous mapping> by /usr/bin/ruby2.1[ruby2.1:15836] uid/euid:1000/1000 gid/egid:1000/1000, parent /usr/bin/sudo[sudo:15835] uid/euid:0/0 gid/egid:0/0\ngrsec: From X.X.X.X: denied RWX mmap of <anonymous mapping> by /usr/bin/ruby2.1[ruby2.1:15836] uid/euid:1000/1000 gid/egid:1000/1000, parent /usr/bin/sudo[sudo:15835] uid/euid:0/0 gid/egid:0/0\ngrsec: From X.X.X.X: denied resource overstep by requesting 4096 for RLIMIT_CORE against limit 0 for /usr/bin/ruby2.1[ruby2.1:15836] uid/euid:1000/1000 gid/egid:1000/1000, parent /usr/bin/sudo[sudo:15835] uid/euid:0/0 gid/egid:0/0\ndocker0: port 2(vethfe87) entered disabled state\ndevice vethfe87 left promiscuous mode\ndocker0: port 2(vethfe87) entered disabled state\ngrsec: From X.X.X.X: unmount of /dev/mapper/docker-202:0-132502-2f41dadbcc31458c49da11cc9cd1455e176c7fd71e2c8825680d168d994da0b0 by /usr/bin/docker[docker:22841] uid/euid:0/0 gid/egid:0/0, parent /sbin/init[init:1] uid/euid:0/0 gid/egid:0/0\nThere is no /usr/bin/ruby2.1 on the host system so I guess this is within the container.  I'll get a chance to play much later tonight and update the thread.\n. I rolled to a non grsecurity patched kernel and then started getting different issues.\nFirst, to add to my above comment, that syslog I had been from running the quickstart command set. And yes, I'm using the latest sameersbn/postgresql. The OS is Debian 7.5, on a Xen based VPS.\nI realised this may be useful also\n$ docker version\nClient version: 1.0.1\nClient API version: 1.12\nGo version (client): go1.2.1\nGit commit (client): 990021a\nServer version: 1.0.1\nServer API version: 1.12\nGo version (server): go1.2.1\nGit commit (server): 990021a\nAs I'm on a Linode VPS I rolled to one of their kernels, and tried again.\nroot@jake:/home/auraltension# uname -a\nLinux jake 3.15.3-x86_64-linode44 #1 SMP Tue Jul 1 15:51:04 EDT 2014 x86_64 GNU/Linux\nFirst, I rm'd gitlab, and tried again with my original full run command, which also failed, but with one extra line of output: su: System error\nroot@jake:/home/auraltension# docker logs gitlab\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nStarting openssh server...\nStarting redis server...\nStarting nginx...\nMigrating database...\nCompiling assets. Please be patient, this could take a while...\nInstance method \"lock!\" is already defined in ActiveRecord::Base, use generic helper instead or set StateMachine::Machine.ignore_method_conflicts = true.\nsu: System error\nI then went back to basics, but now everything had started to respond with a chpasswd error.\n$ sudo docker run --name='gitlab' -it --rm -p 10022:22 -p 10080:80 -v /opt/gitlab/data:/home/git/data -e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" sameersbn/gitlab:7.0.0\nchpasswd: (user root) pam_chauthtok() failed, error:\nSystem error\nchpasswd: (line 1, user root) password not changed\nRelevant syslog\nJul  3 13:26:23 jake kernel: EXT4-fs (dm-2): barriers disabled \nJul  3 13:26:23 jake kernel: EXT4-fs (dm-2): mounted filesystem with ordered data mode. Opts: discard \nJul  3 13:26:23 jake kernel: EXT4-fs (dm-2): barriers disabled \nJul  3 13:26:23 jake kernel: EXT4-fs (dm-2): mounted filesystem with ordered data mode. Opts: discard \nJul  3 13:26:23 jake kernel: netlink: 1 bytes leftover after parsing attributes in process `docker'. \nJul  3 13:26:23 jake kernel: device veth8967 entered promiscuous mode \nJul  3 13:26:23 jake kernel: IPv6: ADDRCONF(NETDEV_UP): veth8967: link is not ready \nJul  3 13:26:23 jake kernel: IPv6: ADDRCONF(NETDEV_CHANGE): veth8967: link becomes ready \nJul  3 13:26:23 jake kernel: docker0: port 2(veth8967) entered forwarding state \nJul  3 13:26:23 jake kernel: docker0: port 2(veth8967) entered forwarding state \nJul  3 13:26:23 jake kernel: docker0: port 2(veth8967) entered disabled state \nJul  3 13:26:23 jake kernel: device veth8967 left promiscuous mode \nJul  3 13:26:23 jake kernel: docker0: port 2(veth8967) entered disabled state\nLast section of strace\nconnect(5, {sa_family=AF_FILE, path=\"/var/run/docker.sock\"}, 23) = 0\ngetsockname(5, {sa_family=AF_FILE, NULL}, [2]) = 0\ngetpeername(5, {sa_family=AF_FILE, path=\"/var/run/docker.sock\"}, [23]) = 0\nclock_gettime(CLOCK_REALTIME, {1404394048, 239847201}) = 0\nclock_gettime(CLOCK_REALTIME, {1404394048, 239903886}) = 0\nclock_gettime(CLOCK_REALTIME, {1404394048, 239968125}) = 0\nwrite(5, \"POST /v1.12/containers/288a980f0\"..., 248) = 248\nfutex(0x14787d8, FUTEX_WAKE, 1)         = 1\nread(5, \"HTTP/1.1 200 OK\\r\\nContent-Type: a\"..., 4096) = 68\nioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, {B38400 opost isig icanon echo ...}) = 0\nioctl(1, SNDCTL_TMR_START or TCSETS, {B38400 -opost -isig -icanon -echo ...}) = 0\n                                                                                 clock_gettime(CLOCK_REALTIME, {1404394048, 242021085}) = 0 \n                clock_gettime(CLOCK_REALTIME, {1404394048, 242164046}) = 0\n                                                                          clock_gettime(CLOCK_REALTIME, {1404394048, 242304903}) = 0 \n         clock_gettime(CLOCK_REALTIME, {1404394048, 242407119}) = 0\n                                                                   clock_gettime(CLOCK_REALTIME, {1404394048, 242525765}) = 0 \n  clock_gettime(CLOCK_REALTIME, {1404394048, 242638900}) = 0\n                                                            write(1, \"\", 0)                         = 0\n                                                                                                       read(5, 0xc21009a000, 4096)             = -1 EAGAIN (Resource temporarily unavailable) \n                                                                  clock_gettime(CLOCK_REALTIME, {1404394048, 243034482}) = 0\n read(0, chpasswd: (user root) pam_chauthtok() failed, error:\nSystem error\nchpasswd: (line 1, user root) password not changed\n <unfinished ... exit status 1>\nI did a quick google and saw an issue you had raised in regards to this, so this may be better in another issue thread.  It's intertesting that docker worked this first time after switching kernels, but now errors out.  Tried rebooting but no joy.  I'm now left wondering how to proceed, Linode claim docker works well, and their users seem to largely concur.  The postgres is working.  I'm thinking of switching back to my custom kernel and compare configs with those of the Ubuntu versions which had been claimed to have solved this latest issue, and doesing a bit of grsecurity forum reading.\nWill keep you posted.\n. Oh, it seems that issue was not solved by upgrading the host, but the container ubuntu version. hrmm\n. Sorry, I didn't upgrade the container image.  I was referencing the issue you had raised elsewhere.  I'm off to bed and so will tinker more over the weekend.\n. Went back to the stock Linode kernel and tried with latest.\nsudo docker run --name='gitlab' -it --rm -p 10022:22 -p 10080:80 -v /opt/gitlab/data:/home/git/data -e \"GITLAB_PORT=10080\" -e \"GITLAB_SSH_PORT=10022\" sameersbn/gitlab:latest\nResults in the 'su: Sustem error' issue\n```\n== Seed from /home/git/gitlab/db/fixtures/production/001_admin.rb\n2014-07-07T04:52:16Z 587 TID-27thk INFO: Sidekiq client with redis options {:url=>\"redis://localhost:6379\", :namespace=>\"resque:gitlab\"}\nAdministrator account created:\nlogin.........admin@local.host\npassword......5iveL!fe\nsu: System error\n```\nI wish I knew how to get better info for you.\n. I see on https://github.com/dotcloud/docker/issues/6345 that people are having similar issues with 3.15. I will try a Linode 3.14 kernel this evening and report back.\nAlso, I have no selinux nor apparmor.\n. I used an earlier kernel version and it all worked fine.\n$ uname -a\nLinux jake 3.14.5-x86_64-linode42 #1 SMP Thu Jun 5 15:22:13 EDT 2014 x86_64 GNU/Linux\n. Thanks for closing, I see Docker will be putting out a release which includes the fix for the 3.15 issues in early august.\n. @sameersbn sorry I should have tried HTTP.  I presumed that SSH being SSH it was not related to SSL.  Upon looking a bit further it looks like gitlab-shell makes a call up to the HTTP stack?\nThe issue is now resolved.  While it's not a self signed cert, I think StartCom CA isn't bundled with Ubuntu which means verification fails.  Unfortunately in gitlab this doesn't seem to display a useful error to us.  But then I'm still new to it.\nAdding -e 'SSL_SELF_SIGNED=true' fixed my issue.  I now have my very first repo up in dockerised gitlab!  Thanks! :)\n. ",
    "djcross": "You're trying to create a container, where a container of the same name already exists.  If you merely want to start the container you'd use docker start <container name>\nYou can list containers with docker ps a, and if you do so you'll likely see a container with the name gitlab listed already.\nhttps://docs.docker.com/reference/run/\n. ",
    "flixi": "Alright, yes I get that, but how do I configure the container then afterwards because all the docker commands are with docker run --name=gitlab.... So I cannot do the step to add the /home/git/data and mount the volume to an actual folder on the host system as to not loose data every time I restart the gitlab container or do a reboot of the system?\nAnd then the MYSQL-db? And all the other config options?\n. However then I am unable to access the container from the outside.\nIs there no configuration file or somekind of command in docker which let'syou preconfig your container?\n. Yes, that helps, though it is quite the pain if you want to use many different variables!\n. ",
    "Alas89": "@sameersbn At first I want to thank you for your quick response.\nI`ve tried the things you recommented with a new docker instance by running\ndocker run --name='gitlab2000' -i -t --rm \\\n-p 2222:22 -p 80:80 \\\n-e \"GITLAB_PORT=80\" -e \"GITLAB_SSH_PORT=2222\" \\\n-h mydomain sameersbn/gitlab:6.8.0\ngitlab container ip: 172.17.0.2\n~/gittest/nxt$ git init\n~/gittest/nxt$ touch README\n~/gittest/nxt$ git add README \n~/gittest/nxt$ git commit -m 'first commit'\n~/gittest/nxt$ git remote add origin ssh://git@172.17.0.2:2222:prom/nxt.git\nfrom host to docker container\n```\n~/gittest/nxt$ git push -u origin master\nThe authenticity of host '172.17.0.2 (172.17.0.2)' can't be established.\nECDSA key fingerprint is 6b:61:03:38:b9:f8:7b:7b:f1:ee:e7:88:63:02:93:e3.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '172.17.0.2' (ECDSA) to the list of known hosts.\nEnter passphrase for key '/home/user/.ssh/id_rsa': \nAccess denied.\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n```\nAfter the push didn`t work I tried to clone the repo and then I got this message:\n```\n~/gittest/nxt2$ git clone ssh://git@172.17.0.2:2222:prom/nxt.git\nCloning into 'nxt'...\nEnter passphrase for key '/home/user/.ssh/id_rsa': \nAccess denied.\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n```\nTo clone (or work with git) I use EGit (Eclipse plugin) on my laptop. It worked fine for a older gitlab VM but now we changed our server infrastructure to docker and I can`t make it work.\nI can connect via ssh to the container from my laptop by using ssh root@mydomain -p 2222 so I think the portforwarding is working fine.\nI read both README files but didn`t fine something helpfull.\nIf I should not edit the config fiels how should I change the git urls in the webfrontend?\nfrom\ngit@localhost:prom/nxt.git\nto what I think should be\nssh://git@mydomain:2222:prom/nxt.git\nI cant see that through right now, cause the-h mydomainflag seems to havent changed any thing.\n. @sameersbn I tried the latest version but run in anothor error:\n```\n~$ docker run --name='gitlab3000' -h mydomain  -it --rm -p 2222:22 -p 80:80 \\\n\n-e \"GITLAB_HOST=mydomain\" -e \"GITLAB_PORT=80\" -e \"GITLAB_SSH_PORT=2222\" \\\nsameersbn/gitlab:latest\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nStarting openssh server...\nsudo: unable to execute /bin/cp: Permission denied\n```\n\nWith sudo:\n~$ sudo docker run --name='gitlab3000' -h mydomain  -it --rm -p 2222:22 -p 80:80 -e \"GITLAB_HOST=mydomain\" -e \"GITLAB_PORT=80\" -e \"GITLAB_SSH_PORT=2222\" sameersbn/gitlab:latest \nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nStarting openssh server...\nsudo: unable to execute /bin/cp: Permission denied\nI`ll try 6.8.0. with the \"new\" run command an let you know the results.\n. @sameersbn So I tried the 6.8.0 the webfronten looks better it shows mydomain but not the differnt ssh port 2222. But still the same acces dined message. I generated the RSA-key an uplodet it, like described in the webfrontend. My commands and the message below.\nclone\n```\n~$ git clone ssh://git@172.17.0.2:2222:prom/nxt.git\nCloning into 'nxt'...\nEnter passphrase for key '/home/user/.ssh/id_rsa': \nAccess denied.\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n```\npush\n```\n~/gittest/nxt$ git push -u origin master\nEnter passphrase for key '/home/user/.ssh/id_rsa': \nAccess denied.\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n```\n. Hey after trying a lot of things and none of them worked. I made it.\nI ran :\ndocker run --name='gitlab' -i -t --rm \\\n-p 2222:22 -p 80:80 -e \"GITLAB_HOST=mydomain\" \\\n-e \"GITLAB_PORT=80\" -e \"GITLAB_SHELL_SSH_PORT=2222\" \\\n-h mydomain sameersbn/gitlab:6.8.0\nAnd I can pull and push as its supposed to be. But still I cant make the 7.0 version run with the error mentioned aboth. Thanks alot for your help. Ill work with the 6.8 version and try to update when I find the time for it.\n. @sameersbn it would be great if you could especially the problem with the 7.0 version or if someone else got the same problem as I.\nSo here are the information you asked for:\n- We run on our server ubuntu 14.04 64 bit.\n- docker version  Client version: 0.9.1 ( I think Ill update it as soon as possible cause docker recomments ist ;))\n-docker info` :\nContainers: 51\n   Images: 402\n   Storage Driver: aufs\n   Root Dir: /var/lib/docker/aufs\n   Dirs: 504\n   Execution Driver: native-0.1\n   Kernel Version: 3.13.0-24-generic\n   WARNING: No swap limit support\nI hope this will help and again thanks a lot.\n. ",
    "mancvso": "Sadly, my first attempt was wrong.\nCommenting the line in \"/etc/pam.d/sshd\"\nsession required        pam_loginuid.so\nDid solve the issue for me.\n. Tested on a fresh Ubuntu 14 host. Everything working perfectly.\n. ",
    "hans-d": "perfect. Perhaps something for the docs?\n. Thanks. \n. Hi,\ncurrently it lives in /home/git/gitlab/tmp/cache/VERSION.\nAs it is not on the data volume, it will not persist. As VERSION will be a variable this needs to be in some parameter (esp when using :latest).\nMigrating the data on startup I can understand. Why is the precompilation not done in the Dockerfile?\nThe signalling could be a simpel touch data/INIT at line 3, and a rm data/INIT at line 561.\n. you are right. Missed that symlink part in the script.\nRe the precompilation, I suspected something like that.\nEarlier test showed that when doing a restart, it sook a significant amount of time and lots of cpu before it was started. Hence I assumed the proecompilation was kicked off again.\nJust did it again, and that seems to be ok now. I'll continue first with the VERSION file and will be back when that does not work... Thanks.\n. As now multiple checks are done (version and relative url, see also #171) it would be good to have a single file available without having to duplicate the checking logic in the deployment scripts\neg touch tmp/cache/CHECK asap, and after the checks/builds a rm tmp/cache/CHECK\n. Sounds good, and will work for my case as well (single file, single & simple regex)\n. Could be like the version check\nOp 8 okt. 2014 12:44 schreef \"Sameer Naik\" notifications@github.com:\n\n@hans-d https://github.com/hans-d probably a check can be added to do\nthat sort of thing.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/171#issuecomment-58339977\n.\n. :+1: \n\nThanks!\n. ",
    "dzwicker": "curl -v https://dev.in2experience.com/git:\n```\n About to connect() to dev.in2experience.com port 443 (#0)\n   Trying 127.0.0.1... connected\n successfully set certificate verify locations:\n   CAfile: none\n  CApath: /etc/ssl/certs\n SSLv3, TLS handshake, Client hello (1):\n SSLv3, TLS handshake, Server hello (2):\n SSLv3, TLS handshake, CERT (11):\n SSLv3, TLS handshake, Server key exchange (12):\n SSLv3, TLS handshake, Server finished (14):\n SSLv3, TLS handshake, Client key exchange (16):\n SSLv3, TLS change cipher, Client hello (1):\n SSLv3, TLS handshake, Finished (20):\n SSLv3, TLS change cipher, Client hello (1):\n SSLv3, TLS handshake, Finished (20):\n SSL connection using ECDHE-RSA-AES256-SHA\n Server certificate:\n    subject: C=DE; ST=Hessen; L=Frankfurt; O=In2Experience GmbH; CN=.in2experience.com; emailAddress=postmaster@in2experience.com\n    start date: 2014-03-20 10:00:21 GMT\n    expire date: 2015-03-20 10:00:21 GMT\n    common name: .in2experience.com (matched)\n    issuer: C=DE; ST=Hessen; L=Frankfurt; O=In2Experience GmbH; CN=.in2experience.com; emailAddress=postmaster@in2experience.com\n*    SSL certificate verify ok.\n\nGET /git HTTP/1.1\nUser-Agent: curl/7.22.0 (x86_64-pc-linux-gnu) libcurl/7.22.0 OpenSSL/1.0.1 zlib/1.2.3.4 libidn/1.23 librtmp/2.3\nHost: dev.in2experience.com\nAccept: /\n< HTTP/1.1 404 Not Found\n< Server: nginx/1.6.0\n< Date: Mon, 14 Jul 2014 07:59:55 GMT\n< Content-Type: text/html\n< Content-Length: 162\n< Connection: keep-alive\n< \n\n404 Not Found\n\n404 Not Found\nnginx\n\n\n Connection #0 to host dev.in2experience.com left intact\n Closing connection #0\n* SSLv3, TLS alert, Client hello (1):\n```\n\ncurl -v https://dev.in2experience.com/git/api/v3/internal/check:\n```\n About to connect() to dev.in2experience.com port 443 (#0)\n   Trying 127.0.0.1... connected\n successfully set certificate verify locations:\n   CAfile: none\n  CApath: /etc/ssl/certs\n SSLv3, TLS handshake, Client hello (1):\n SSLv3, TLS handshake, Server hello (2):\n SSLv3, TLS handshake, CERT (11):\n SSLv3, TLS handshake, Server key exchange (12):\n SSLv3, TLS handshake, Server finished (14):\n SSLv3, TLS handshake, Client key exchange (16):\n SSLv3, TLS change cipher, Client hello (1):\n SSLv3, TLS handshake, Finished (20):\n SSLv3, TLS change cipher, Client hello (1):\n SSLv3, TLS handshake, Finished (20):\n SSL connection using ECDHE-RSA-AES256-SHA\n Server certificate:\n    subject: C=DE; ST=Hessen; L=Frankfurt; O=In2Experience GmbH; CN=.in2experience.com; emailAddress=postmaster@in2experience.com\n    start date: 2014-03-20 10:00:21 GMT\n    expire date: 2015-03-20 10:00:21 GMT\n    common name: .in2experience.com (matched)\n    issuer: C=DE; ST=Hessen; L=Frankfurt; O=In2Experience GmbH; CN=.in2experience.com; emailAddress=postmaster@in2experience.com\n*    SSL certificate verify ok.\n\nGET /git/api/v3/internal/check HTTP/1.1\nUser-Agent: curl/7.22.0 (x86_64-pc-linux-gnu) libcurl/7.22.0 OpenSSL/1.0.1 zlib/1.2.3.4 libidn/1.23 librtmp/2.3\nHost: dev.in2experience.com\nAccept: /\n< HTTP/1.1 200 OK\n< Server: nginx/1.6.0\n< Date: Mon, 14 Jul 2014 08:01:40 GMT\n< Content-Type: application/json\n< Content-Length: 129\n< Connection: keep-alive\n< Status: 200 OK\n< ETag: \"ee5040906d34dcbd979c368b4d53f1fc\"\n< Cache-Control: max-age=0, private, must-revalidate\n< X-Request-Id: 0ef8c828-8cf4-4527-997d-0d192ca2789a\n< X-Runtime: 0.413279\n< \n Connection #0 to host dev.in2experience.com left intact\n Closing connection #0\n* SSLv3, TLS alert, Client hello (1):\n{\"api_version\":\"v3\",\"gitlab_version\":\"7.0.0\",\"gitlab_rev\":\"fatal: Not a git repository (or any of the parent directories): .git\"}\n``\n. I have tried moredocker run` commands and have figured out that mounting the data volume seams to be the trigger the problem. Without the volume every thing is well. Here are the two run commands:\n\ndocker run -it --rm \\\n  --link docker_mariadb:mysql \\\n  -p 127.0.0.1:8113:80 -p 127.0.0.1:10022:22 \\\n  -e GITLAB_PORT=8113 -e GITLAB_SSH_PORT=10022 \\\n  -e GITLAB_HOST=dev.in2experience.com -e GITLAB_RELATIVE_URL_ROOT=/git \\\n  -e DB_USER=gitlab -e DB_PASS=VvwqqrBHrfJpwhUwY2ssLaVRTnA8pVHGYFxNQAekmUmuWPtuJL \\\n  -e GITLAB_EMAIL=gitlab@in2experience.com -e GITLAB_SUPPORT=support@in2experience.com \\\n  -e GITLAB_BACKUPS=monthly -e GITLAB_BACKUP_EXPIRY=31536000 \\\n  -e SMTP_DOMAIN=www.in2experience.com -e SMTP_HOST=smtp.in2experience.com -e SMTP_USER=gitlab -e SMTP_PASS=pfT84uyXkvZEXNqLjXECKduPyKjLvBactJrwrziWwCYevkqBjo \\\n  --name docker_gitlab \\\n  sameersbn/gitlab\ndocker run -it --rm \\\n  --link docker_mariadb:mysql \\\n  -p 127.0.0.1:8113:80 -p 127.0.0.1:10022:22 \\\n  -v /var/lib/gitlab:/home/git/data \\\n  -e GITLAB_PORT=8113 -e GITLAB_SSH_PORT=10022 \\\n  -e GITLAB_HOST=dev.in2experience.com -e GITLAB_RELATIVE_URL_ROOT=/git \\\n  -e DB_USER=gitlab -e DB_PASS=VvwqqrBHrfJpwhUwY2ssLaVRTnA8pVHGYFxNQAekmUmuWPtuJL \\\n  -e GITLAB_EMAIL=gitlab@in2experience.com -e GITLAB_SUPPORT=support@in2experience.com \\\n  -e GITLAB_BACKUPS=monthly -e GITLAB_BACKUP_EXPIRY=31536000 \\\n  -e SMTP_DOMAIN=www.in2experience.com -e SMTP_HOST=smtp.in2experience.com -e SMTP_USER=gitlab -e SMTP_PASS=pfT84uyXkvZEXNqLjXECKduPyKjLvBactJrwrziWwCYevkqBjo \\\n  --name docker_gitlab \\\n  sameersbn/gitlab\n. I have first tried without the volume and used --rm so the second try with volume should be a clean start of the hole container. Even the DB is an empty one. I can see the initial startup in the log, setting up the db schema etc. So i thing the assets should be compiled.\n. Your run command works perfect. So i have take a look at the permissions of the host folder i used as volume for the /home/git/data. Looks ok. But i decided to delete it and run again. Know the directory was created with my user not with root user and a group all docker containers should have r/w access to. And everything is fine. So the error seams to be an permissions problem which is solved if i let docker create the directory for me instead of create it manually before starting the container.\nOne thing, is it possible to set a api token for the redis server when i use linked one? Or is it a feature request? \n. ",
    "shusugmt": "@dzwicker Have you tried recompiling assets?\n. ",
    "nonconvergent": "Tried it with latest, but the container just exits after this su error.\n```\n[root@odin mute]# docker run --name='gitlab' -it --rm -p 10022:22 -p 10080:80 -e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=10022' sameersbn/gitlab:latest\nUnable to find image 'sameersbn/gitlab:latest' locally\nPulling repository sameersbn/gitlab\n100d8596a1a2: Download complete \n511136ea3c5a: Download complete \nd7ac5e4f1812: Download complete \n2f4b4d6a4a06: Download complete \n83ff768040a0: Download complete \n6c37f792ddac: Download complete \ne54ca5efa2e9: Download complete \n85b6ef3eaf6c: Download complete \nf9633a884fa6: Download complete \n9b92b32f33bd: Download complete \ne3e6ef68ec7d: Download complete \nfb369c1e155b: Download complete \nc0c46338e0a9: Download complete \na9ee75d0b704: Download complete \n5902d20f1525: Download complete \n1945051ff6e9: Download complete \nb11f0ab1062f: Download complete \n633d4f9c9eb0: Download complete \n5659856ed74d: Download complete \n339d2190d685: Download complete \ne03978a64395: Download complete \n8a19d8288874: Download complete \n124363ab164f: Download complete \n6f1dbadc06c7: Download complete \n9af7e423612c: Download complete \nf4ccbb5344aa: Download complete \nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nStarting openssh server...\nStarting mysql server...\nStarting redis server...\nStarting nginx...\nInitializing database...\ngitlabhq_production already exists\n-- enable_extension(\"plpgsql\")\n   -> 0.0018s\n-- create_table(\"broadcast_messages\", {:force=>true})\n   -> 0.3564s\n-- create_table(\"deploy_keys_projects\", {:force=>true})\n   -> 0.2258s\n-- add_index(\"deploy_keys_projects\", [\"project_id\"], {:name=>\"index_deploy_keys_projects_on_project_id\", :using=>:btree})\n   -> 0.4122s\n-- create_table(\"emails\", {:force=>true})\n   -> 0.2312s\n-- add_index(\"emails\", [\"email\"], {:name=>\"index_emails_on_email\", :unique=>true, :using=>:btree})\n   -> 0.3952s\n-- add_index(\"emails\", [\"user_id\"], {:name=>\"index_emails_on_user_id\", :using=>:btree})\n   -> 0.9179s\n-- create_table(\"events\", {:force=>true})\n   -> 0.2335s\n-- add_index(\"events\", [\"action\"], {:name=>\"index_events_on_action\", :using=>:btree})\n   -> 0.3862s\n-- add_index(\"events\", [\"author_id\"], {:name=>\"index_events_on_author_id\", :using=>:btree})\n   -> 0.4426s\n-- add_index(\"events\", [\"created_at\"], {:name=>\"index_events_on_created_at\", :using=>:btree})\n   -> 0.6387s\n-- add_index(\"events\", [\"project_id\"], {:name=>\"index_events_on_project_id\", :using=>:btree})\n   -> 0.8727s\n-- add_index(\"events\", [\"target_id\"], {:name=>\"index_events_on_target_id\", :using=>:btree})\n   -> 0.5598s\n-- add_index(\"events\", [\"target_type\"], {:name=>\"index_events_on_target_type\", :using=>:btree})\n   -> 0.5267s\n-- create_table(\"forked_project_links\", {:force=>true})\n   -> 0.2405s\n-- add_index(\"forked_project_links\", [\"forked_to_project_id\"], {:name=>\"index_forked_project_links_on_forked_to_project_id\", :unique=>true, :using=>:btree})\n   -> 0.4445s\n-- create_table(\"issues\", {:force=>true})\n   -> 0.2077s\n-- add_index(\"issues\", [\"assignee_id\"], {:name=>\"index_issues_on_assignee_id\", :using=>:btree})\n   -> 0.4697s\n-- add_index(\"issues\", [\"author_id\"], {:name=>\"index_issues_on_author_id\", :using=>:btree})\n   -> 0.5098s\n-- add_index(\"issues\", [\"created_at\"], {:name=>\"index_issues_on_created_at\", :using=>:btree})\n   -> 0.5599s\n-- add_index(\"issues\", [\"milestone_id\"], {:name=>\"index_issues_on_milestone_id\", :using=>:btree})\n   -> 0.4347s\n-- add_index(\"issues\", [\"project_id\", \"iid\"], {:name=>\"index_issues_on_project_id_and_iid\", :unique=>true, :using=>:btree})\n   -> 0.5862s\n-- add_index(\"issues\", [\"project_id\"], {:name=>\"index_issues_on_project_id\", :using=>:btree})\n   -> 1.4784s\n-- add_index(\"issues\", [\"title\"], {:name=>\"index_issues_on_title\", :using=>:btree})\n   -> 1.1766s\n-- create_table(\"keys\", {:force=>true})\n   -> 0.3571s\n-- add_index(\"keys\", [\"user_id\"], {:name=>\"index_keys_on_user_id\", :using=>:btree})\n   -> 0.5873s\n-- create_table(\"merge_request_diffs\", {:force=>true})\n   -> 0.2571s\n-- add_index(\"merge_request_diffs\", [\"merge_request_id\"], {:name=>\"index_merge_request_diffs_on_merge_request_id\", :unique=>true, :using=>:btree})\n   -> 0.5113s\n-- create_table(\"merge_requests\", {:force=>true})\n   -> 0.2910s\n-- add_index(\"merge_requests\", [\"assignee_id\"], {:name=>\"index_merge_requests_on_assignee_id\", :using=>:btree})\n   -> 0.4612s\n-- add_index(\"merge_requests\", [\"author_id\"], {:name=>\"index_merge_requests_on_author_id\", :using=>:btree})\n   -> 0.6267s\n-- add_index(\"merge_requests\", [\"created_at\"], {:name=>\"index_merge_requests_on_created_at\", :using=>:btree})\n   -> 0.5359s\n-- add_index(\"merge_requests\", [\"milestone_id\"], {:name=>\"index_merge_requests_on_milestone_id\", :using=>:btree})\n   -> 0.6261s\n-- add_index(\"merge_requests\", [\"source_branch\"], {:name=>\"index_merge_requests_on_source_branch\", :using=>:btree})\n   -> 0.4762s\n-- add_index(\"merge_requests\", [\"source_project_id\"], {:name=>\"index_merge_requests_on_source_project_id\", :using=>:btree})\n   -> 0.5012s\n-- add_index(\"merge_requests\", [\"target_branch\"], {:name=>\"index_merge_requests_on_target_branch\", :using=>:btree})\n   -> 0.5595s\n-- add_index(\"merge_requests\", [\"target_project_id\", \"iid\"], {:name=>\"index_merge_requests_on_target_project_id_and_iid\", :unique=>true, :using=>:btree})\n   -> 0.4518s\n-- add_index(\"merge_requests\", [\"title\"], {:name=>\"index_merge_requests_on_title\", :using=>:btree})\n   -> 0.6265s\n-- create_table(\"milestones\", {:force=>true})\n   -> 0.2406s\n-- add_index(\"milestones\", [\"due_date\"], {:name=>\"index_milestones_on_due_date\", :using=>:btree})\n   -> 0.4197s\n-- add_index(\"milestones\", [\"project_id\", \"iid\"], {:name=>\"index_milestones_on_project_id_and_iid\", :unique=>true, :using=>:btree})\n   -> 0.9187s\n-- add_index(\"milestones\", [\"project_id\"], {:name=>\"index_milestones_on_project_id\", :using=>:btree})\n   -> 0.6522s\n-- create_table(\"namespaces\", {:force=>true})\n   -> 0.3070s\n-- add_index(\"namespaces\", [\"name\"], {:name=>\"index_namespaces_on_name\", :using=>:btree})\n   -> 0.4780s\n-- add_index(\"namespaces\", [\"owner_id\"], {:name=>\"index_namespaces_on_owner_id\", :using=>:btree})\n   -> 0.5850s\n-- add_index(\"namespaces\", [\"path\"], {:name=>\"index_namespaces_on_path\", :using=>:btree})\n   -> 1.2447s\n-- add_index(\"namespaces\", [\"type\"], {:name=>\"index_namespaces_on_type\", :using=>:btree})\n   -> 0.9679s\n-- create_table(\"notes\", {:force=>true})\n   -> 0.2736s\n-- add_index(\"notes\", [\"author_id\"], {:name=>\"index_notes_on_author_id\", :using=>:btree})\n   -> 0.4446s\n-- add_index(\"notes\", [\"commit_id\"], {:name=>\"index_notes_on_commit_id\", :using=>:btree})\n   -> 0.5595s\n-- add_index(\"notes\", [\"created_at\"], {:name=>\"index_notes_on_created_at\", :using=>:btree})\n   -> 0.4935s\n-- add_index(\"notes\", [\"noteable_id\", \"noteable_type\"], {:name=>\"index_notes_on_noteable_id_and_noteable_type\", :using=>:btree})\n   -> 0.5180s\n-- add_index(\"notes\", [\"noteable_type\"], {:name=>\"index_notes_on_noteable_type\", :using=>:btree})\n   -> 0.6349s\n-- add_index(\"notes\", [\"project_id\", \"noteable_type\"], {:name=>\"index_notes_on_project_id_and_noteable_type\", :using=>:btree})\n   -> 0.5513s\n-- add_index(\"notes\", [\"project_id\"], {:name=>\"index_notes_on_project_id\", :using=>:btree})\n   -> 0.4933s\n-- add_index(\"notes\", [\"updated_at\"], {:name=>\"index_notes_on_updated_at\", :using=>:btree})\n   -> 0.7617s\n-- create_table(\"projects\", {:force=>true})\n   -> 0.3664s\n-- add_index(\"projects\", [\"creator_id\"], {:name=>\"index_projects_on_creator_id\", :using=>:btree})\n   -> 0.4698s\n-- add_index(\"projects\", [\"last_activity_at\"], {:name=>\"index_projects_on_last_activity_at\", :using=>:btree})\n   -> 0.5605s\n-- add_index(\"projects\", [\"namespace_id\"], {:name=>\"index_projects_on_namespace_id\", :using=>:btree})\n   -> 0.4180s\n-- create_table(\"protected_branches\", {:force=>true})\n   -> 0.2664s\n-- add_index(\"protected_branches\", [\"project_id\"], {:name=>\"index_protected_branches_on_project_id\", :using=>:btree})\n   -> 0.4449s\n-- create_table(\"services\", {:force=>true})\n   -> 0.3911s\n-- add_index(\"services\", [\"project_id\"], {:name=>\"index_services_on_project_id\", :using=>:btree})\n   -> 0.3611s\n-- create_table(\"snippets\", {:force=>true})\n   -> 0.3080s\n-- add_index(\"snippets\", [\"author_id\"], {:name=>\"index_snippets_on_author_id\", :using=>:btree})\n   -> 0.3691s\n-- add_index(\"snippets\", [\"created_at\"], {:name=>\"index_snippets_on_created_at\", :using=>:btree})\n   -> 0.5442s\n-- add_index(\"snippets\", [\"expires_at\"], {:name=>\"index_snippets_on_expires_at\", :using=>:btree})\n   -> 0.4932s\n-- add_index(\"snippets\", [\"project_id\"], {:name=>\"index_snippets_on_project_id\", :using=>:btree})\n   -> 1.1527s\n-- create_table(\"taggings\", {:force=>true})\n   -> 0.7009s\n-- add_index(\"taggings\", [\"tag_id\"], {:name=>\"index_taggings_on_tag_id\", :using=>:btree})\n   -> 0.3613s\n-- add_index(\"taggings\", [\"taggable_id\", \"taggable_type\", \"context\"], {:name=>\"index_taggings_on_taggable_id_and_taggable_type_and_context\", :using=>:btree})\n   -> 0.4926s\n-- create_table(\"tags\", {:force=>true})\n   -> 0.2407s\n-- create_table(\"users\", {:force=>true})\n   -> 0.2258s\n-- add_index(\"users\", [\"admin\"], {:name=>\"index_users_on_admin\", :using=>:btree})\n   -> 0.4374s\n-- add_index(\"users\", [\"authentication_token\"], {:name=>\"index_users_on_authentication_token\", :unique=>true, :using=>:btree})\n   -> 0.5432s\n-- add_index(\"users\", [\"confirmation_token\"], {:name=>\"index_users_on_confirmation_token\", :unique=>true, :using=>:btree})\n   -> 0.5467s\n-- add_index(\"users\", [\"current_sign_in_at\"], {:name=>\"index_users_on_current_sign_in_at\", :using=>:btree})\n   -> 0.6482s\n-- add_index(\"users\", [\"email\"], {:name=>\"index_users_on_email\", :unique=>true, :using=>:btree})\n   -> 0.4515s\n-- add_index(\"users\", [\"extern_uid\", \"provider\"], {:name=>\"index_users_on_extern_uid_and_provider\", :unique=>true, :using=>:btree})\n   -> 0.5439s\n-- add_index(\"users\", [\"name\"], {:name=>\"index_users_on_name\", :using=>:btree})\n   -> 0.5342s\n-- add_index(\"users\", [\"reset_password_token\"], {:name=>\"index_users_on_reset_password_token\", :unique=>true, :using=>:btree})\n   -> 0.5768s\n-- add_index(\"users\", [\"username\"], {:name=>\"index_users_on_username\", :using=>:btree})\n   -> 0.5852s\n-- create_table(\"users_groups\", {:force=>true})\n   -> 0.3407s\n-- add_index(\"users_groups\", [\"user_id\"], {:name=>\"index_users_groups_on_user_id\", :using=>:btree})\n   -> 0.4948s\n-- create_table(\"users_projects\", {:force=>true})\n   -> 0.2741s\n-- add_index(\"users_projects\", [\"project_access\"], {:name=>\"index_users_projects_on_project_access\", :using=>:btree})\n   -> 0.4867s\n-- add_index(\"users_projects\", [\"project_id\"], {:name=>\"index_users_projects_on_project_id\", :using=>:btree})\n   -> 0.5176s\n-- add_index(\"users_projects\", [\"user_id\"], {:name=>\"index_users_projects_on_user_id\", :using=>:btree})\n   -> 0.6681s\n-- create_table(\"web_hooks\", {:force=>true})\n   -> 0.2995s\n-- add_index(\"web_hooks\", [\"project_id\"], {:name=>\"index_web_hooks_on_project_id\", :using=>:btree})\n   -> 0.4698s\n-- initialize_schema_migrations_table()\n   -> 1.6622s\nAdding limits to schema.rb for mysql\n-- change_column(:merge_request_diffs, :st_commits, :text, {:limit=>2147483647})\n   -> 0.5967s\n-- change_column(:merge_request_diffs, :st_diffs, :text, {:limit=>2147483647})\n   -> 1.7633s\n-- change_column(:snippets, :content, :text, {:limit=>2147483647})\n   -> 1.5143s\n-- change_column(:notes, :st_diff, :text, {:limit=>2147483647})\n   -> 0.5687s\n== Seed from /home/git/gitlab/db/fixtures/production/001_admin.rb\n2014-07-24T16:37:15Z 648 TID-6oh6w INFO: Sidekiq client with redis options {:url=>\"redis://localhost:6379\", :namespace=>\"resque:gitlab\"}\nAdministrator account created:\nlogin.........root\npassword......5iveL!fe\nMigrating database...\nCompiling assets. Please be patient, this could take a while...\nsu: System error\n[root@odin mute]# \n```\n. Not sure if that's me or the images.  Running docker 1.0.0 on Fedora 20. Giving it a try on my Arch box.\n. Ah, I'll turn it off right now.  Arch box is slower but seems to be having a good time of it.  Thanks.\n. @sameersbn  Simply setting selinux enforce to PERMISSIVE or setenforce 0 was not enough, even after reboot, so I'm gonna try a Ubuntu 14.04 LTS machine since I have the freedom.\n. @sameersbn Did exactly that and tried again. Same diff. 20 minutes till LTS finishing pulling down.  It's not a huge deal to me at this point.\nFor you, it is just a fresh minimal Fedora 20 install, with barely anything except docker and openssh running.\n. Well, it works kind of fine in Ubuntu, since you have to use a different build of docker according to #63 \n. ",
    "markozz": "@sameersbn thanks for the quick reply. I updated the docker container, but when I run the container with the app:sanitize command it quits when checking the tmp directory permissions..\noutput log:\nStarting openssh server...\nUpdating CA certificates...\nStarting redis server...\nChecking repository directories permissions...\nChecking satellites directories permissions...\nChecking uploads directory permissions...\nChecking tmp directory permissions...\n. @sameersbn hmm in that case it is still not working for me.. weird \nMaybe I should give it another try totaly from scratch and remove the mounted storages.\n. @sameersbn uploading attachements or group avatars works with no problems, it only gives problem for the user.\n. @sameersbn  I still have the same problem with the build from scratch.. \nI use the following run command to run the container:\nsudo docker run --name=gitlab -d -p 10080:80 -p 10022:22 -p 10443:443 --link postgresql:postgresql -e 'DB_USER=_' -e 'DB_PASS=_<' -e 'DB_NAME=_' -e 'GITLAB_HTTPS=true' -e 'SSL_SELF_SIGNED=true' -e 'SMTP_USER=*_' -e 'SMTP_PASS=*_<' -e 'LDAP_ENABLED=true' -e 'LDAP_HOST=*_' -e 'LDAP_BIND_DN=*' -e 'LDAP_PASS=*' -e 'LDAP_BASE=*' -v /dataStores/gitlab/data:/home/git/data sameersbn/gitlab:7.1.0\nHow can I check the logs other than those that are reported to the docker log? Do I need to add the nsenter container to your container ?\n. @sameersbn I think I found the issue, after setting the parameters for github host and port it seems like it is working for me right now. \nThanks for your help :+1: \n. ",
    "lemonbar": "Thanks very much for your help.\n. ",
    "elderone": "now I use https://github.com/phlegx/redmine_gitlab_hook plugin\nbut this need to share volume /etc/cron.d/sync_git_repos to host if we want to save this after reRUN container. local git repo may be in /redmine/files for example.\nI write this script to run into container (with nsenter, but this not enough for automate process)\n!/bin/bash\n/usr/bin/gitadd script for add new git storage to redmine and sync it with gitlab\nif [[ ${1} && ${2} ]]; then\n  cd /redmine/files/git\n  sudo -u redmine -H /usr/bin/git clone --mirror git@git.srv:${1}/${2}.git\n  if [[ $? = 0 ]]; then\n    echo \"*/5 * * * * redmine cd /redmine/files/git/${2}.git && /usr/bin/git fetch -q --all -p\" >> /etc/cron.d/sync_git_repos\n    cd /\n  else\n    echo \"Use right user_or_group_name & project_name\"\n    exit $?\n  fi\nelse\n  echo \"Usage: $0 user_or_group_name project_name (without .git)\"\nfi\nfrom host we can change path to git and cron.d (if shared volume exist on host) and add string to change rights, same as /path/to/redmine/files\n. thank you for great job! your are awesome!:)\n. this is about change gitlab.yml permanently question again...\n. it is great if this do not need to run setup again!\n. it's ok. just in your example parameters in first (setup) and second run are equal.\nok. thank you for answer :)\n. it was bad dhparam.pem\nthank you!\n. ",
    "farrukhnajmi": "@sameersbn I cant seem to configure gitlab for ldap via \"LDAP_\" env vars.\nI start my gitlab docker container like this:\ndocker run -d -p <dockerHostIp>:80:80/tcp --env-file src/docker/gitlab/env.list --name gitlab1 me/gitlab\nMy src/docker/gitlab/env.list file looks like this:\nLDAP_ENABLED=true\nLDAP_LABEL=LDAP\nLDAP_HOST=ldap.corp.acme.com\nLDAP_PORT=389\nLDAP_UID=sAMAccountName\nLDAP_METHOD=tls\nLDAP_BIND_DN=CN=Git Service,OU=Non User Accounts,DC=corp,DC=acme,DC=com\nLDAP_PASS=MySecretPassword\nLDAP_BASE=OU=people,DC=corp,DC=acme,DC=com\nLDAP_VERIFY_SSL=false\nHowever, when I access gitlab login screen I do not see the ldap login tab.\nMy image is \"FROM gitlab/gitlab-ce:10.7.3-ce.0\"\nMy docker version is:\n```\nClient:\n Version:      1.13.0\n API version:  1.25\n Go version:   go1.7.3\n Git commit:   49bf474\n Built:        Wed Jan 18 16:20:26 2017\n OS/Arch:      windows/amd64\nServer:\n Version:      1.13.1\n API version:  1.26 (minimum version 1.12)\n Go version:   go1.6.2\n Git commit:   092cba3\n Built:        Thu Nov  2 20:40:23 2017\n OS/Arch:      linux/amd64\n Experimental: false\n```\nAny advice on what could be wrong?\n. @sameersbn I cant seem to configure gitlab for ldap via \"LDAP_\" env vars.\nI start my gitlab docker container like this:\ndocker run -d -p <dockerHostIp>:80:80/tcp --env-file src/docker/gitlab/env.list --name gitlab1 me/gitlab\nMy src/docker/gitlab/env.list file looks like this:\nLDAP_ENABLED=true\nLDAP_LABEL=LDAP\nLDAP_HOST=ldap.corp.acme.com\nLDAP_PORT=389\nLDAP_UID=sAMAccountName\nLDAP_METHOD=tls\nLDAP_BIND_DN=CN=Git Service,OU=Non User Accounts,DC=corp,DC=acme,DC=com\nLDAP_PASS=MySecretPassword\nLDAP_BASE=OU=people,DC=corp,DC=acme,DC=com\nLDAP_VERIFY_SSL=false\nHowever, when I access gitlab login screen I do not see the ldap login tab.\nMy image is \"FROM gitlab/gitlab-ce:10.7.3-ce.0\"\nMy docker version is:\n```\nClient:\n Version:      1.13.0\n API version:  1.25\n Go version:   go1.7.3\n Git commit:   49bf474\n Built:        Wed Jan 18 16:20:26 2017\n OS/Arch:      windows/amd64\nServer:\n Version:      1.13.1\n API version:  1.26 (minimum version 1.12)\n Go version:   go1.6.2\n Git commit:   092cba3\n Built:        Thu Nov  2 20:40:23 2017\n OS/Arch:      linux/amd64\n Experimental: false\n```\nAny advice on what could be wrong?\n. ",
    "txthinking": "so i want to use internal mysql\ndocker run -d \\\n    -p 10022:22 -p 10080:80 \\\n    -e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=10022' \\\n    -v /data/gitlab:/home/git/data:rw \\\n    -v /data/mysql:/var/lib/mysql:rw \\\n    -e 'REDIS_HOST=10.10.10.52' -e 'REDIS_PORT=16379' \\\n   gitlab:7.1.0\noutput:\n```\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nStarting openssh server...\nInstalling MySQL system tables...\n140726  3:25:47 [Warning] Using unique option prefix key_buffer instead of key_buffer_size is deprecated and will be removed in a future release. Please use the full name instead.\nERROR: 1  Can't create/write to file '/var/lib/mysql/mysql/db.MYI' (Errcode: 13)\n140726  3:25:47 [ERROR] Aborting\n140726  3:25:47 [Note] /usr/sbin/mysqld: Shutdown complete\nInstallation of system tables failed!  Examine the logs in\n/var/lib/mysql for more information.\nYou can try to start the mysqld daemon with:\nshell> /usr/sbin/mysqld --skip-grant &\n\nand use the command line tool /usr/bin/mysql\nto connect to the mysql database and look at the grant tables:\nshell> /usr/bin/mysql -u root mysql\nmysql> show tables\n\nTry 'mysqld --help' if you have problems with paths.  Using --log\ngives you a log in /var/lib/mysql that may be helpful.\nPlease consult the MySQL manual section\n'Problems running mysql_install_db', and the manual section that\ndescribes problems on your OS.  Another information source are the\nMySQL email archives available at http://lists.mysql.com/.\nPlease check all of the above before submitting a bug report\nat http://bugs.mysql.com/\n```\n. thx, then close this one.\n. not yet, i am use new \nClient version: 1.1.2\nClient API version: 1.13\nGo version (client): go1.3\nGit commit (client): d84a070\nServer version: 1.1.2\nServer API version: 1.13\nGo version (server): go1.3\nGit commit (server): d84a070\n. On Wed, Jul 30, 2014 at 12:10 AM, Sameer Naik notifications@github.com\nwrote:\n\n@txthinking https://github.com/txthinking one thing I noticed in you\ncommand, you are running an image named gitlab:7.1.0, it should probably\nbe sameersbn/gitlab:7.1.0. Have you build the image locally from source?\nThis is ok, because a just retag sameersbn/gitlab:7.1.0 to gitlab:7.1.0\nin my local.\nNext, your log above says ERROR: 1 Can't create/write to file\n'/var/lib/mysql/mysql/db.MYI' (Errcode: 13). This means that for some\nreason the image is not able to write to the /data/mysql mount point.\nFor the sake of testing can you try changing the path of the mount point\nto something else. Try the following command\ndocker run -it --rm \\\n-p 10022:22 -p 10080:80 \\\n-e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=10022' \\\n-v /opt/gitlab/data:/home/git/data \\\n-v /opt/gitlab/mysql:/var/lib/mysql \\\nsameersbn/gitlab:7.1.0\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/109#issuecomment-50498721\n.\n\n\nAll is well.\n. ubuntu 14.04\nClient version: 1.1.2\nClient API version: 1.13\nGo version (client): go1.2.1\nGit commit (client): d84a070\nServer version: 1.1.2\nServer API version: 1.13\nGo version (server): go1.2.1\nGit commit (server): d84a070\nAND \nCentos 6.5\nClient version: 1.0.0\nClient API version: 1.12\nGo version (client): go1.2.2\nGit commit (client): 63fe64c/1.0.0\nServer version: 1.0.0\nServer API version: 1.12\nGo version (server): go1.2.2\nGit commit (server): 63fe64c/1.0.0\nAND \nArchlinux\nClient version: 1.1.0\nClient API version: 1.13\nGo version (client): go1.3\nGit commit (client): 79812e3\nServer version: 1.1.0\nServer API version: 1.13\nGo version (server): go1.3\nGit commit (server): 79812000\nBoth have this error: sudo: unable to execute /usr/bin/git: Permission denied\n. I followed issue #63 but not solved.\nSo instead of this,  i use gitlab install directly.\nOn Tue, Sep 2, 2014 at 9:27 PM, Sameer Naik notifications@github.com\nwrote:\n\n@txthinking https://github.com/txthinking were you able to get the\nissue resolved?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/109#issuecomment-54150305\n.\n\n\nAbout Me: https://qianlima.it/txthinking\n. ",
    "tomislacker": "\nThe -m 2048m does give you a 2GB limitation (I did have a unit on there)\nI can continually attempt to relaunch and eventually it works. Sometime between 2 and 5 retries typically.\nTested and reproduceable on two separate hosts, neither of which have been anywhere near RAM exhaustion. \n. @sameersbn just tried again with one of the same hosts and a separate system also running Docker version 1.0.0, build 63fe64c and was able to get the same failed result in I'd guess ~30% (mental estimate) of trials.  Again, no RAM starvation on the host nor within the container.  My test was to launch the containers, attach to them with docker-enter <containerID> and then issue /etc/init.d/gitlab restart.\n\nI'm willing to setup more controlled and verbose testing if someone else can also attest that they're seeing the same result.  Otherwise, for the time being, I'm content with just making modifications to ensure that my services will keep attempting to restart.\nOn a related curious note, is there a reason that services such as unicorn are not manged within supervisord the way the majority of the other services in the container are?  If they were, I wouldn't have to do the work myself and unicorn would restart on it's own.  Otherwise, on my honey do list for this container is to migrate the services out of /etc/init.d/gitlab and into /etc/supervisor/* so we can make sure they continue running whether they have crashed or failed to start in the first place.\nEdit(1): My trials that I note about were actually conducted around 1330CDT.  Though that's probably irrelevant.\n. Cheers and thanks for the rapid response!\nUpgrade to gitlab-7.1.1\n\n@tomislacker p.s. gitlab 7.1.1 is now available. maybe you could give it a try.\n\nI may give that a shot but if there isn't a clear resolution to the original issue with unicorn, or some other highly appealing feature, we probably won't upgrade in the near future.  Each upgrade cycle just involves so much work to ensure full functionality, permissions, service uptime (like unicorn), etc.. that unless there is a known-fix; it's unlikely that I'd make a point of even trying it.  Though, testing new versions of all the containers myself and my [current] employer uses is always on my idle-to-do-list for fun weekend activities.\nbundler/bundler #2814\n\n@tomislacker probably it might have something to do with bundler/bundler#2814\n\nSince this happens not just when starting the container but also even in iterative invocations of the /etc/init.d/gitlab service, I feel like it's not related to this issue.\nDocker Host (VM [and details] or Baremetal)\n\n\nIs you docker host a VM? If yes, what are you using for virtualization (virtualbox/kvm)?\n\n\nNegative, currently all the systems I use as docker hosts are baremetal.\nDistro Usage\n\n\nWhat is the host distro you see the maximum failures with?\n\n\nThey are all (currently) Ubuntu 12.04 systems\nMYUSER@SERVER ~ $ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 12.04.4 LTS\nRelease:    12.04\nCodename:   precise\nGitlab Large Repos\n\n\nDoes your gitlab installation have many and/or large repositories.\n\n\nYea, a few of them have some large binary files in them.  For example (full names redacted because I don't have permission to use/share this code or it's existence and such online):\nSERVER repositories # du -csh www/*  \n235M    www/SITEA-com.git\n96K www/SITEA-com.wiki.git\n1.2G    www/SITEB-com.git\n96K www/SITEB-com.wiki.git\n49M www/SITEC.git\n96K www/SITEC.wiki.git\n1.5G    total\nDocker Image and Modifications?\n\nAre you using the images from the docker index, or have built them locally.\n\nI have used the your trusted build off the docker.io registry with the small changes to the config files for:\n- HTTPS proxying through to the container which serves HTTP-only\n  - Hardcoded gitlab_url in /home/git/gitlab-shell/config.yml\n  - Changed the proxy_set_header param for X-Forwarded-Proto to be \"https\" instead of \"$scheme\" due to my proxying paradigm\n- OmniAuth to make use of authentication via Google Apps for Business\n  - Editted /home/git/gitlab/config/gitlab.yml to change several things\n    - enabled = true\n    - allow_single_sign_on = true\n    - block_auto_created_users = true\n    - providers (Added one...)\n      - { name: 'google_oauth2', app_id: '############.apps.googleusercontent.com', app_secret: '************************' }\nBesides the above, I've made no other modifications to sameersbn/gitlab:7.1.0\n. @sameersbn \n\nThis will make sure the displayed clone url is a https:// one and most importantly cloning using the displayed url works. Additionally you will not need to make the nginx changes.\n\nThanks for the tip, all is running fine for right now and I probably won't change my container invocation until I'm prepared to upgrade to 7.2.0 or higher.\n\nFurther, the version 7.2.0 and above have OAUTH_ configuration options, so you do not need to edit the image with these versions.\n\nSo very stoked for this!\n\nIf you get the time to upgrade the image, please do and let me know if the reported issue persists.\n\nProbably in the next week or two we'll hit 7.2.0 and I'll roger up if there are any issues.  But I'd say the issue is otherwise closeable for now.\n. ",
    "dosire": "@sameersbn Thanks for the great support!\n. @sameersbn :heart: \n. ",
    "tstorch": "@sameersbn Sorry for the late answere. Just read it now.\nThis does not work out of the box, because - like you mentioned - we have a specific setup. But if postfix is configured properly it works (tested). (Do not ask me further questions regarding this. I'm not the mail guy and have not really a clue; for testing purposes I did some copy and paste stuff )\nThe thing is: I want to build an image based on yours for our department and this is something that imho would fit in the gitlab image. The postfix setup should and will be handled \"downstream\" (probably via ADD, because it seems to be rather complicated). The postfix setup is certainly not something I would put in the gitlab image.\nThanks for taking the time so far!\n. OK. Will do this.\nThanks for the efford nonetheless!\n. ",
    "hsitaa": "Its not Working. Specified the conf. Do i need to expose any port in Docker compose yml.\nmy Host machine : Centos7\nrunning it on Docker for gitlab, \nmails are working for Host machine. But when try to send mail from gitlab. Nothing happens.\n1.) Do i need to install postfix on Docker machine?\n2.) Do i need to expose any port.\n3.) Tried using Gmail smtp as well as extrernal mailserver. : Which 1 suggested?\n. gitlab-rake gitlab:setup  also doesnt work \n. @sameersbn @mikew \nPlease help\n. No Local Hosted Server , but can send mail through Terminal.  Yes Port 25 is open.\n. - SMTP_ENABLED=true\n- SMTP_DOMAIN=example.com  = our company domain\n- SMTP_HOST=smtp.gmail.com\n- SMTP_PORT=465\n- SMTP_USER={{email}}  = gmail id\n- SMTP_PASS={{pass}}   = gmail pass\n- SMTP_STARTTLS=true\n- SMTP_AUTHENTICATION=plain\n@lazyfrosch \n. Anyone any Idea ?\n. Apologies for delayed response. I changed the setting to relay from mailserver instead Gmail SMTP. and also whitelisted gitlab server at mailserver . It worked. Thanks for all the help @sameersbn @patrickc91 . ",
    "Xoib": "Thanks @sameersbn \nEdit : It worked like a charm. I was indeed with the mysql db server internal, I moved to a linked db. I also added some env var that I had forgot previously in the new gitlab container with the first run command, btw it's so bad that we can't change these env var on the fly.\n. ",
    "metal3d": "[root@sd-38099 ~]# setenforce --help\nsetenforce: SELinux is disabled\nSo I guess this is not the problem :)\n. As I explained, \"nc\" command on the 10022 port works, the main problem is \"ssh\" command that won't work. \nI tried to add a port forward to connect 10022 from other machine with other ssh version the error is exactly the same. netcat ok, ssh not ok.\nThe main problem, for me, is that I don't have any way to login the docker container to check what happends. I will try to check on the mounted directory\n. nsenter is really nice :) didn't know this, thanks\nSo, this is what I've tried\nroot@git:/# ping localhost\nPING localhost (127.0.0.1) 56(84) bytes of data.\n64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.084 ms\n64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.081 ms\n^C\n--- localhost ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 999ms\nrtt min/avg/max/mdev = 0.081/0.082/0.084/0.009 ms\nroot@git:/# ssh root@localhost\nRead from socket failed: Connection reset by peer\nStrange, isn't it ?\nI completly reinstalled gitlab container before to test this...\nEDIT: Added the netstat status\nroot@git:/# netstat -taupen\nActive Internet connections (servers and established)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       User       Inode       PID/Program name\ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      0          266088      172/nginx       \ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      0          264422      17/sshd         \ntcp        0      0 172.17.0.3:39647        172.17.42.1:3306        ESTABLISHED 1000       266331      201/ruby2.1     \ntcp6       0      0 :::22                   :::*                    LISTEN      0          264424      17/sshd         \nroot@git:/#\n. Ok... I restarted ssh service inside the docker container, and now I can connect... very very strange...\n. @sameersbn yes it does. I have to launch docker container, then \"nsenter\" to the instance pid (with /bin/su - ) then restart openssh.\nThat's a strange behaviour. Before restarting ssh service, I try \"service ssh status\" that says that it's running. I've got no ssh logs (I checked in container's /var/log) and dmesg. \nAt this time, this is not a blocking problem since you gave me the \"nsenter\" tool :) But tath could be cool to find what is the origin of this problem. \nI will retry on my fedora 20 (because I began to use my server, I don't want to loose my work). Maybe I will be able to reproduce the bug, and maybe I could help you to find what happend.\n. Thanks. I will set this config to my container to see if it fixes. But anyway I can restart sshd deamon with nsenter. So it's not a blocking bug now.\n. Sorry, found the problem... I only added:\nproxy_set_header Host $http_host;\nAnd it works like a charm... \n. Problem back with 8.6.7\n. Problem back with 8.6.7\n. Another solution is to set a .env file and give it to the three services\n. To complete my answer, here is my configuration (local test):\nyaml\nversion: '2'\nservices:\n    postgresql:\n      image: sameersbn/postgresql:9.4-20\n      env_file: .env\n      volumes:\n        - ./postgresql:/var/lib/postgresql\n    gitlab:\n      image: sameersbn/gitlab:8.7.0\n      links:\n        - redis:redisio\n        - postgresql:postgresql\n      ports:\n        - \"10080:80\"\n        - \"10022:22\"\n      env_file: .env\n      volumes:\n        - ./gitlab:/home/git/data\n    redis:\n      env_file: .env\n      image: sameersbn/redis:latest\n      volumes:\n        - ./redis:/var/lib/redis\nAnd the .env is:\n``` bash\nDEBUG=false\nTZ=Asia/Kolkata\nGITLAB_TIMEZONE=Kolkata\nGITLAB_SECRETS_DB_KEY_BASE=761oGrTj5qg5TG41NM1UpafPl6q7pbU1\nGITLAB_HOST=localhost\nGITLAB_PORT=10080\nGITLAB_SSH_PORT=10022\nGITLAB_RELATIVE_URL_ROOT=\nDB_HOST=postgresql\nDB_POST=5432\nDB_USER=gitlab\nDB_PASS=password\nDB_NAME=gitlabhq_production\nDB_EXTENSION=pg_trgm\nREDIS_HOST=redisio\nREDIS_PORT=6379\n```\n. ",
    "tamasgal": "Holy crp, this was the solution for the ~20s long SSH auth on our GitLab server. Many thanks!. Holy crp, this was the solution for the ~20s long SSH auth on our GitLab server. Many thanks!. ",
    "josephpage": "@sameersbn You're right. Done.\n. ",
    "hydra1983": "@sameersbn here is the run command and logs of gitlab. This is an upgrade from 7.0.0 to 7.1.1.\n```\nCommand\ndocker run --name=gitlab -d -p $GITLAB_EXPORT_SSH_PORT:22 -p $GITLAB_EXPORT_HTTP_PORT:80 -p $GITLAB_EXPORT_HTTPS_PORT:443 --link mysql:mysql --env-file /etc/docker-gitlab/gitlab.conf -v /opt/gitlab/data:/home/git/data sameersbn/gitlab:$CURRENT_VERSION 1> /dev/null\n```\n```\n/etc/docker-gitlab/gitlab.conf\nValues are removed\nCURRENT_VERSION=latest\nDB_USER=\nDB_PASS=\nDB_NAME=gitlabhq_production\nGITLAB_EXPORT_HTTP_PORT=\nGITLAB_EXPORT_HTTPS_PORT=\nGITLAB_EXPORT_SSH_PORT=\nMYSQL_EXPORT_HTTP_PORT=\nMYSQL_EXPORT_SSH_PORT=\nGITLAB_HOST=\nGITLAB_EMAIL=\nGITLAB_SUPPORT=\nGITLAB_SIGNUP=\nGITLAB_BACKUPS=\nGITLAB_BACKUP_EXPIRY=\nGITLAB_SSH_PORT=\nSMTP_USER=\nSMTP_PASS=\nGITLAB_HTTPS=true\nSSL_SELF_SIGNED=true\nGITLAB_HTTPS_ONLY=false\n```\n```\nLogs\nStarting openssh server...\nUpdating CA certificates...\nStarting redis server...\nStarting nginx...\nStarting both the GitLab Unicorn and Sidekiq.\nThe GitLab Unicorn web server with pid 2740 is running.\nThe GitLab Sidekiq job dispatcher with pid 2776 is running.\nGitLab and all its components are up and running.\nCreating satellites for ...\n...\nChecking Environment ...\nGit configured for git user? ... yes\nChecking Environment ... Finished\nChecking GitLab Shell ...\nGitLab Shell version >= 1.9.6 ? ... OK (1.9.7)\nRepo base directory exists? ... yes\nRepo base directory is a symlink? ... no\nRepo base owned by git:git? ... yes\nRepo base access is drwxrws---? ... yes\nSatellites access is drwxr-x---? ... yes\nupdate hook up-to-date? ... yes\nupdate hooks in repos are links: ... \n...\nRunning /home/git/gitlab-shell/bin/check\nFAILED. code: 400\nCheck GitLab API access: gitlab-shell self-check failed\n  Try fixing it:\n  Make sure GitLab is running;\n  Check the gitlab-shell configuration file:\n  sudo -u git -H editor /home/git/gitlab-shell/config.yml\n  Please fix the error above and rerun the checks.\nChecking GitLab Shell ... Finished\nChecking Sidekiq ...\nRunning? ... yes\nNumber of Sidekiq processes ... 1\nChecking Sidekiq ... Finished\nChecking LDAP ...\nLDAP is disabled in config/gitlab.yml\nChecking LDAP ... Finished\nChecking GitLab ...\nDatabase config exists? ... yes\nDatabase is SQLite ... no\nAll migrations up? ... yes\nDatabase contains orphaned UsersGroups? ... no\nGitLab config exists? ... yes\nGitLab config outdated? ... no\nLog directory writable? ... yes\nTmp directory writable? ... yes\nInit script exists? ... yes\nInit script up-to-date? ... yes\nprojects have namespace: ... \n...\nRedis version >= 2.0.0? ... yes\nYour git bin path is \"/usr/bin/git\"\nGit version >= 1.7.10 ? ... yes (2.1.0)\nChecking GitLab ... Finished\n```\n. @sameersbn  Thank you. \nHope it can be fixed as I cannot pull or push my repositories through SSH. \n```\ngit pull\nAccess denied.\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n```\nSure I'm the owner of the repository.\nI can pull my repositories through https, but I cannot push them\ngit pull origin master\nFrom {REPO_URL}\n * branch            master     -> FETCH_HEAD\nAlready up-to-date.\ngit push origin master\nUsername for '{REPO_URL}': {USERNAME}\nPassword for 'https://{USERNAME}@{REPO_URL}': \nCounting objects: 7, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (7/7), done.\nWriting objects: 100% (7/7), 3.27 KiB | 0 bytes/s, done.\nTotal 7 (delta 1), reused 0 (delta 0)\nremote: GitLab: You are not allowed to access master!\nremote: error: hook declined to update refs/heads/master\nTo {REPO_URL}\n ! [remote rejected] master -> master (hook declined)\nerror: failed to push some refs to '{REPO_URL}'\n. OK. I'm upgrading :D\n. @sameersbn  Fixed!!! Thank you very much.\n. Yes, just increase the memory solved this problem\n. @sameersbn after I add lines below to gitlab.conf, gitlab works well. \nshell\nDB_USER=gitlab\nDB_PASS=password\nDB_NAME=gitlabhq_production\nHowever, from the doc,\n\nThe image will automatically fetch the DB_NAME, DB_USER and DB_PASS variables from the mysql container using the magic of docker links and works with the following images:\n\nWhy I still need to set these variables?\n. @sameersbn Thank you. The problem has been resolved. I need to set DB_USER, DB_PASS, and DB_NAME each time start mysql.\n. ",
    "29x10": "yes, mandrill update their smtp server name, so i didn't work, update the correct server name works fine\n. but gitlab didn't know where the gitlab-ci is.\n. I have to use IP\n. Even though I set the ip, the gitlab-ci build is always pending, I got \nCan't verify CSRF token authenticity in the production log\n. @sameersbn I know what you mean, but in the project settings, the gitlab-ci service's gitlab url have to ip address, otherwise got error\n. I just want to test ls -la, I have installed your ci-runner container\nOn Sep 1, 2014 12:55 AM, \"Sameer Naik\" notifications@github.com wrote:\n\n@luthur https://github.com/luthur Have you configured your domain names\non the DNS server? Because it seems like this is a DNS resolution issue.\nRegarding the builds pending, you need to have ci-runners to process\nbuilds.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/135#issuecomment-53993892\n.\n. I have already register it and use ip address, still pending\nOn Sep 1, 2014 1:00 AM, \"Sameer Naik\" notifications@github.com wrote:\n@luthur https://github.com/luthur you need to register your runner with\nthe ci server. Please try configuring using the ip address for now.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/135#issuecomment-53994065\n.\n. Where can I see the output?\nOn Sep 1, 2014 1:04 AM, \"Sameer Naik\" notifications@github.com wrote:\nCan you look at the output of the runner. It will show you if it is able\nto connect to the ci server\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/135#issuecomment-53994172\n.\n. Thanks very much\nOn Sep 1, 2014 1:11 AM, \"Sameer Naik\" notifications@github.com wrote:\nin the docker logs\ndocker logs -d gitlab-ci-runner\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/135#issuecomment-53994420\n.\n. yes, it got this working. thanks for your patience\n\n\u2014\nSent from Mailbox\nOn Mon, Sep 1, 2014 at 12:25 PM, Sameer Naik notifications@github.com\nwrote:\n\n@luthur were you able to get it to work?\nReply to this email directly or view it on GitHub:\nhttps://github.com/sameersbn/docker-gitlab/issues/135#issuecomment-54014200\n. \n",
    "devinrsmith": "@sameersbn will do\n. Initially, I forgot to attach the shared volume... now I'm attaching shared volume, here are the full logs:\n```\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nStarting openssh server...\nUpdating CA certificates...\nStarting nginx...\nMigrating database...\nCompiling assets. Please be patient, this could take a while...\n[deprecated] I18n.enforce_available_locales will default to true in the future. If you really want to skip validation of your locale you can set I18n.enforce_available_locales = false to avoid this message.\nStarting both the GitLab Unicorn and Sidekiq\nThe GitLab Unicorn web server with pid 2850 is running.\nThe GitLab Sidekiq job dispatcher with pid 2883 is running.\nGitLab and all its components are up and running.\n[deprecated] I18n.enforce_available_locales will default to true in the future. If you really want to skip validation of your locale you can set I18n.enforce_available_locales = false to avoid this message.\nCreating satellites for ...skipping, because you have no projects\n[deprecated] I18n.enforce_available_locales will default to true in the future. If you really want to skip validation of your locale you can set I18n.enforce_available_locales = false to avoid this message.\nChecking Environment ...\nGit configured for git user? ... yes\nChecking Environment ... Finished\nChecking GitLab Shell ...\nGitLab Shell version >= 1.9.7 ? ... OK (1.9.7)\nRepo base directory exists? ... yes\nRepo base directory is a symlink? ... no\nRepo base owned by git:git? ... yes\nRepo base access is drwxrws---? ... yes\nSatellites access is drwxr-x---? ... yes\nupdate hook up-to-date? ... yes\nupdate hooks in repos are links: ... can't check, you have no projects\nRunning /home/git/gitlab-shell/bin/check\n/usr/lib/ruby/2.1.0/net/http.rb:879:in initialize': Connection refused - connect(2) for \"localhost\" port 443 (Errno::ECONNREFUSED)\n    from /usr/lib/ruby/2.1.0/net/http.rb:879:inopen'\n    from /usr/lib/ruby/2.1.0/net/http.rb:879:in block in connect'\n    from /usr/lib/ruby/2.1.0/timeout.rb:76:intimeout'\n    from /usr/lib/ruby/2.1.0/net/http.rb:878:in connect'\n    from /usr/lib/ruby/2.1.0/net/http.rb:863:indo_start'\n    from /usr/lib/ruby/2.1.0/net/http.rb:852:in start'\n    from /home/git/gitlab-shell/lib/gitlab_net.rb:79:inget'\n    from /home/git/gitlab-shell/lib/gitlab_net.rb:43:in check'\n    from /home/git/gitlab-shell/bin/check:11:in'\nCheck GitLab API access: gitlab-shell self-check failed\n  Try fixing it:\n  Make sure GitLab is running;\n  Check the gitlab-shell configuration file:\n  sudo -u git -H editor /home/git/gitlab-shell/config.yml\n  Please fix the error above and rerun the checks.\nChecking GitLab Shell ... Finished\nChecking Sidekiq ...\nRunning? ... yes\nNumber of Sidekiq processes ... 1\nChecking Sidekiq ... Finished\nChecking LDAP ...\nLDAP is disabled in config/gitlab.yml\nChecking LDAP ... Finished\nChecking GitLab ...\nDatabase config exists? ... yes\nDatabase is SQLite ... no\nAll migrations up? ... yes\nDatabase contains orphaned UsersGroups? ... no\nGitLab config exists? ... yes\nGitLab config outdated? ... no\nLog directory writable? ... yes\nTmp directory writable? ... yes\nInit script exists? ... yes\nInit script up-to-date? ... yes\nprojects have namespace: ... can't check, you have no projects\nProjects have satellites? ... can't check, you have no projects\nRedis version >= 2.0.0? ... yes\nRuby version >= 2.0.0 ? ... yes (2.1.2)\nYour git bin path is \"/usr/bin/git\"\nGit version >= 1.7.10 ? ... yes (2.1.0)\nChecking GitLab ... Finished\ntail: cannot open '/var/log/nginx/gitlab_access.log' for reading: No such file or directory\n```\nAlso, I can't curl:\n```\n$ curl http://localhost\ncurl: (56) Recv failure: Connection reset by peer\n$ curl https://localhost\ncurl: (35) Unknown SSL protocol error in connection to localhost:443 \n```\n. Yep, and certs in place:\n$ ls /opt/gitlab/data/certs/\ndhparam.pem  gitlab.crt  gitlab.key\n. Yeah, something seems to be wrong w/ the certs... let me regenerate them and mark down how I answer the prompts:\nroot@2ffc85f7b1a9:/home/git/gitlab# nginx\nnginx: [emerg] SSL_CTX_use_PrivateKey_file(\"/home/git/data/certs/gitlab.key\") failed (SSL: error:0B080074:x509 certificate routines:X509_check_private_key:key values mismatch)\n. Thanks, things seem to be working now... the only difference I made when generating the certificate was leaving blanks instead of using \".\" for the password field... the openssl prompts aren't the easiest to understand.\nopenssl info:\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\nIe, the only difference is I generated with:\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:\nAn optional company name []:\nas opposed to:\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:.\nAn optional company name []:.\n. Maybe a YAML encoding thing? Not sure the proper way to do it.\n. Thanks for the quick reply!\n. Gave up after a while, seems like a headache to do this within the docker container. \ngit@4e744eb0becc:~/gitlab$ mysqldump --compatible=postgresql --default-character-set=utf8 -r gitlabhq_production.mysql -u root gitlabhq_production -p\nEnter password:\nmysqldump: Got error: 2002: Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2) when trying to connect\nProbably doable if I spent more time banging against it until it worked. Will probably just stick with mysql :/\n. I'll make sure to give this a whirl when the time opens up. Thanks for your quick reply!\n. ",
    "xeor": "@sameersbn thanks for the comment, I'm can't try it out before 6-7 hours, but I don't think it will work because https://github.com/sameersbn/docker-gitlab/blob/master/assets/config/nginx/gitlab.https.permissive#L94 says X-Forwarded-Proto should still be sat to $scheme.\nOr is setting https://github.com/gitlabhq/gitlabhq/blob/master/config/initializers/session_store.rb#L7 to false as this will do enough? I would imagine the links (in mails and other places) will still be http if I do this hack?\n. @sameersbn alright, I will try it out. Thanks. But wouldn't it be better to set the X-Forwarded-Proto header to static https so gitlab would store the sessions secure, as it should. Instead of changing the way it stores the sessions..?\n. @sameersbn thanks for explaining :)\n51 looked a little dirty.. I attacked that problem another way (which I think might be useful at a later time on some projects).. My hack is @ https://github.com/xeor/dockerfiles/tree/master/gitlab\nWill try your suggested change soon :)\n. @sameersbn Just tested, GITLAB_HTTPS_ONLY=false did not solve the problem (it was what I already tried).. I am doing GITLAB_HTTPS=true and GITLAB_HTTPS_ONLY=false.\nI checked the /home/git/gitlab/config/initializers/session_store.rb file inside the container manually, and the secure setting was still Gitlab.config.gitlab.https. I edited it manually to false and ran /etc/init.d/gitlab restart and I can now login. So this is definitively the solution.\nLooking deeper, I noticed that the environment variables wasn\u2019t true or false, but True and False.\nLooks like fig is the one to blame for all my frustration... Fig is python, and pythons string representation of booleans starts with uppercase. DOH..\nThe fix was easy, just replace VARIABLE: true/false in fig.yml to \"true\" or \"false\" with quotation..\nEverything works perfectly now.\nLastly, thanks for all the awesome containers you are creating!\n. @sameersbn you beat me to the \"read the rest of the comment\"-comment :smiling_imp: \nI am settling for the environment variable-only solution since I have an ssl container in front.\nThanks for the help!\n. Awesome... What about the original 2> that bit me? :) The one at https://github.com/sameersbn/docker-gitlab/blob/master/assets/init#L728\n. Awesome... What about the original 2> that bit me? :) The one at https://github.com/sameersbn/docker-gitlab/blob/master/assets/init#L728\n. If I make an image with something like this;\nFROM sameersbn/gitlab:8.2.0\nRUN rm -f /home/git/gitlab/builds/.gitkeep\nI am getting 1 step further when starting the image. It now stops at:\nInitializing logdir...\nInitializing datadir...\nrm: cannot remove '/home/git/gitlab/shared/artifacts/tmp/cache': Directory not empty\nrm: cannot remove '/home/git/gitlab/shared/artifacts/tmp/uploads': Directory not empty\nDoing the same to them doesn't do it tho, the \"fixes\" stops after the first .gitkeep deletion. \nSo, something like;\nFROM sameersbn/gitlab:8.2.0\nRUN rm -rf \\\n      /home/git/gitlab/builds/.gitkeep \\\n      /home/git/gitlab/shared/artifacts/tmp/cache/.gitkeep \\\n      /home/git/gitlab/shared/artifacts/tmp/uploads/.gitkeep \\\n      /home/git/gitlab/shared/artifacts/tmp\ngives this error when building the image.\nrm: cannot remove '/home/git/gitlab/shared/artifacts/tmp/cache': Directory not empty\nrm: cannot remove '/home/git/gitlab/shared/artifacts/tmp/uploads': Directory not empty\nMaybe it works cleaning up all this gitkeep files when building on a non-overlay-fs system. I'm yet to try that.. Need to go to work now :)\n@xueshanf It's /home/git/gitlab that is problematic, I already have /home/git/data on a separate volume. /home/git/gitlab as I see is used for setup. :/\n. Almost... :)\nNow we it is stuck on;\ngitlab_1 | Initializing logdir...\ngitlab_1 | Initializing datadir...\ngitlab_1 | rm: cannot remove '/home/git/gitlab/tmp/cache/assets/production/sass/04bd255ed9d8720c1b707e2e636ebcd28c86429b': Directory not empty\ngitlab_1 | rm: cannot remove '/home/git/gitlab/tmp/cache/assets/production/sass/1b51523bdfc6d43977c2cd4a0d7c8de241bbfdf9': Directory not empty\ngitlab_1 | rm: cannot remove '/home/git/gitlab/tmp/cache/assets/production/sass/4338974cc897dfabf2ee1af035b02a8c15eacf8a': Directory not empty\ngitlab_1 | rm: cannot remove '/home/git/gitlab/tmp/cache/assets/production/sass/657cbba3607ec87b451a52a7814712c3f7759bc5': Directory not empty\n.... a lot of these\nThis happens with the sprokets folders as well as sass, and happens more and more everytime I run it;\n$ docker-compose up gitlab | wc -l # 145\n$ docker-compose up gitlab | wc -l # 173\n$ docker-compose up gitlab | wc -l # 201\nRemoving the tmp dir that is mapped to /home/git/data/tmp doesnt solve the problem, as it still tries to delete those files.\nI guess these files are there for making application startup faster. Don't know why mine is trying to delete them. The data-folder I mounted is from an older version. Is this a part of the upgrade process?\nIt do look like a fresh installation works fine tho, even if I stop it and start it.\nThis whole issue looks like a spider-web, there might be more errors. Maybe a warning saying that overlay-fs won't work at the moment is better than trying to solve this?\nI will do all the tests you throw at me if you want to do that instead. :)\n. I see.. Because of https://github.com/sameersbn/docker-gitlab/issues/481. I tested, and as you said, it works without relative url root sat.\nI need to have relative path's. So I'll just think I am migrating back to devicemapper with lvm-thin until they fix overlayfs. Or is there anything else you want to try?\n. This problem went away when I replaced xfs as a backing filesystem for overlay with ext4 (shows up in docker-info as extfs). I did several testing converting the fs back and forth to verify this. All ok now :sunny:\n. ",
    "andrefernandes": "Ok, sorry for that.\nCan we always consider \"latest\" a stable release?\nEnviada do meu iPhone\nEm 01/09/2014, \u00e0s 01:25, \"Sameer Naik\" notifications@github.com<mailto:notifications@github.com> escreveu:\n@andrefernandeshttps://github.com/andrefernandes the latest tag is built from the repo head while the particular versions are built from the tagged releases.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/136#issuecomment-54014179.\n. ",
    "ishiguang": "@djdefi Great! It works for me. Thank you very much!\n. @sameersbn Thanks for your advise, I will try to use postgresql database server. Would you tell me why you recommend the postgresql database instead of mysql?\n. @sameersbn  Thank you!\n. ",
    "cboettig": "Sorry, this seems to be working now just fine in detached mode.  Perhaps I had somehow overloaded my server between testing interactively and in detached mode. \n. @sameersbn Thanks for the detailed reply.  As I mention above, I am doing exactly the backup provess you describe by running the same command, except with -it mode instead of -d and ommitting the --name to avoid conflict.  As you see in the error log I pasted above, this runs but errors along the way.  \nThanks for the nsenter information, that approach worked perfectly for me.  It creates a .tar backup file, but it isn't clear to me how I get the tarball off of the container now, or how I would use it to restore my settings later (e.g. after upgrading or launching gitlab docker image on a different machine). I'd greatly appreciate your advice on how to do this!\n. Yes, I'm using the internal / default mysql server, and no, I did not\nspecify a volume mountpoint for either /home/git/data or\n/varl/lib/mysql  .  Thanks for pointing that out, I'll be sure to do\nso in future. (In the README QuickStart it didn't show linking either\nof these volumes).\nFrom docker inspect I can see where /home/git/data is mounted.\n(/var/lib/docker/vfs/dir/). I can also see that my backup is\nthere, in the backup directory.  Very cool, thanks.\nIn the quickstart, I see you're now linking volumes for docker itself,\nthough I don't see that in other examples:\n-v  /var/run/docker.sock:/run/docker.sock \\\n-v $(which docker):/bin/docker \\\nWhat is the reason for this?\nThanks again for a great application.  Sounds like in future I should\nnow be linking external redis and postrgresql containers, as the\ninternal ones have been removed?  Any reason not to use the Docker\n'official' postgres container now that one exists?\nOn Thu, Oct 16, 2014 at 11:04 AM, Sameer Naik notifications@github.com wrote:\n\n@cboettig are you using the internal mysql server? If yes, have you\nspecified a volume mountpoint for /var/lib/mysql? If not, then there is no\nway that method to create backups as described in the readme is going to\nwork.\nThe backups are created in the data volumes backup directory. Have you\nspecified a mountpoint for /home/git/data? If yes, then check the contents\nof the folder on the host. If not (which is not a good idea), then you can\nuse docker cp to copy the .tar file to the host. Refer docker help for\nusage.\nThe restore process is documented in the readme. However for it to work you\nshould have /home/git/data volume mounted.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\nCarl Boettiger\nUC Santa Cruz\nhttp://carlboettiger.info/\n. Wow, that's really clever! thanks again for your help.\n. @sameersbn last stupid question: do I need to link both a redis and postgres/mysql container, or is linking the postgresql container sufficient?\n. ah, of course I should have seen that in your fig.yml:\nhttps://github.com/sameersbn/docker-gitlab/blob/master/fig.yml\nLike you said, use fig.  brilliant! many thanks\nOn Thu, Oct 16, 2014 at 12:33 PM, Sameer Naik notifications@github.com\nwrote:\n\n@cboettig https://github.com/cboettig gitlab requires both\npostgresql/mysql and redis.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/177#issuecomment-59417128\n.\n\n\nCarl Boettiger\nUC Santa Cruz\nhttp://carlboettiger.info/\n. got it, thanks.\n. ",
    "fye": "As in the shell-access follows, error makes in the command.\n[root@YEFEI-CENTOS7 yefei]# docker run --rm -v /usr/local/bin:/target jpetazzo/nsenter\nInstalling nsenter to /target\ncp: cannot create regular file '/target/nsenter': Permission denied\nInstalling docker-enter to /target\ncp: cannot create regular file '/target/docker-enter': Permission denied\n. 3xs! Done!\n. This is my docker command:\ndocker run --name=gitlab -d \\\n-e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=10022' \\\n-p 10022:22 -p 10080:80 \\\n-e 'GITLAB_RELATIVE_URL_ROOT=/avatar-gitlab' \\\n--link redis:redisio \\\n--link mysql:mysql \\\n-v /opt/gitlab/data:/home/git/data \\\nsameersbn/gitlab:7.6.2\n. @sameersbn @so0k Sorry for late reply, i will try tomorrow.\n. @sameersbn @so0k Sorry for late reply, i will try tomorrow.\n. @sameersbn @so0k . It works, Thanks!\n. @so0k I also met the same problem, through the \"docker exec - it gitlab bash\" commands into the container. I originally to the/etc/nginx/sites - enabled/gitlab configuration of NGINX_MAX_UPLOAD_SIZE value increased to 200M, but every time after start-up-container are reset into 20M. Then by modifying the/app/setup/config/nginx/gitlab client_max_body_size size, will be {{NGINX_MAX_UPLOAD_SIZE}} force changed to 200M, restart can push the big file, although solved the problem, but I feel the way I change is not good.\n. @sameersbn Good.\n. ",
    "pinglamb": "Fixed the typo. Sorry for that.\nI used the GITLAB_SSH_HOST directly last time therefore didn't figure out the typo.\nI have tried to run again with and without the config and it should work now.\nThanks.\n. Fixed the typo. Sorry for that.\nI used the GITLAB_SSH_HOST directly last time therefore didn't figure out the typo.\nI have tried to run again with and without the config and it should work now.\nThanks.\n. ",
    "mnesarco": "Hii Sameer,\nOn Thu, Sep 11, 2014 at 11:24 PM, Sameer Naik notifications@github.com\nwrote:\n\n@mnesarco https://github.com/mnesarco Couple of questions\n- Have you installed the SSL certificates for the container.\n\nYes, I have generated the certificate following the instructions and\ncopied it to /opt/gitlab/data/certs and changed the permissions of the\nkey....\n\n\nAre you using a load balancer (probably not)\n\n\nNo\n\n\nDoes https access work on the host\n\n\nNo\ncurl -v https://127.0.0.1:35443/\n* About to connect() to 127.0.0.1 port 35443 (#0)\n*   Trying 127.0.0.1... connected\n* successfully set certificate verify locations:\n*   CAfile: none\n  CApath: /etc/ssl/certs\n* SSLv3, TLS handshake, Client hello (1):\n* Unknown SSL protocol error in connection to 127.0.0.1:35443\n* Closing connection #0\ncurl: (35) Unknown SSL protocol error in connection to 127.0.0.1:35443\n\n```\ncurl -v http://127.0.0.1:3580/\n About to connect() to 127.0.0.1 port 3580 (#0)\n   Trying 127.0.0.1... connected\n\nGET / HTTP/1.1\nUser-Agent: curl/7.22.0 (x86_64-pc-linux-gnu) libcurl/7.22.0\nOpenSSL/1.0.1 zlib/1.2.3.4 libidn/1.23 librtmp/2.3\nHost: 127.0.0.1:3580\nAccept: /\n< HTTP/1.1 302 Found\n< Server: nginx\n< Date: Fri, 12 Sep 2014 13:53:19 GMT\n< Content-Type: text/html; charset=utf-8\n< Transfer-Encoding: chunked\n< Connection: keep-alive\n< Status: 302 Found\n< X-Frame-Options: SAMEORIGIN\n< X-XSS-Protection: 1; mode=block\n< X-Content-Type-Options: nosniff\n< Location: http://127.0.0.1:3580/users/sign_in\n< Cache-Control: no-cache\n< Set-Cookie: _gitlab_session=8e97bd22b7baf934a10b5330b3f8b0c2; path=/;\nHttpOnly\n< Set-Cookie: request_method=GET; path=/\n< X-Request-Id: 205bacd7-ae38-4507-9e03-357f457962a9\n< X-Runtime: 0.090766\n<\n Connection #0 to host 127.0.0.1 left intact\n Closing connection #0\n```\n\nWhat version of the image are you using\n\n\nsameersbn/gitlab:latest\n\n\nWhen you say http://my-public-host:3580/ works perfect, do you mean\n  you are able to access the application at that address or do you mean it\n  tries to redirect to https and it fails at that point.\n\nI mean, I am able to access the application and create some users, groups,\nprojects .... but there is one problem (probably related): The origin of\nthe project is at localhost instead of my-public-host:\n\ngit@localhost:root/x.git\nAlso if I upload an avatar image, it tries to load it from localhost in the\nprofile view.\nMy env:\nGITLAB_HOST=my-public-host\nGITLAB_PORT=35443\nGITLAB_EMAIL=my-email@gmail.com\nGITLAB_SIGNUP=false\nGITLAB_SIGNIN=true\nGITLAB_PROJECTS_LIMIT=100\nGITLAB_USERNAME_CHANGE=false\nGITLAB_PROJECTS_VISIBILITY=private\nGITLAB_BACKUPS=daily\nGITLAB_SSH_PORT=3522\nGITLAB_HTTPS=true\nSSL_SELF_SIGNED=true\n\nFrank D. Mart\u00ednez M.\n. docker run --name=gitlab -d -p 3522:22 -p 3580:80 -p 35443:443 -e 'GITLAB_HOST=my-public-host' -e 'DB_TYPE=postgres' -e 'DB_HOST=192.168.0.102' -e 'DB_NAME=gitlabhq_production' -e 'DB_USER=gitlab' -e 'DB_PASS=yyy' -e 'GITLAB_SSH_PORT=3522' -e 'GITLAB_PORT=35443' -e 'SMTP_ENABLED=true' -e 'SMTP_DOMAIN=yyy.com' -e 'SMTP_HOST=zzzz.com' -e 'SMTP_PORT=465' -e 'SMTP_USER=uuu' -e 'SMTP_PASS=aaaa' -e 'GITLAB_HTTPS=true' -e 'SSL_SELF_SIGNED=true' -v /opt/gitlab/data:/home/git/data sameersbn/gitlab:latest\n. This is the output (some masked):\nroot@d89b3764f314:/home/git/gitlab# printenv\nHOSTNAME=d89b3764f314\nDB_HOST=XXXXXXXX\nDB_NAME=gitlabhq_production\nTERM=xterm\nDB_PASS=XXXXXXXXX\nSSL_DHPARAM_PATH=/home/git/data/certs/dhparam.pem\nGITLAB_SSH_PORT=3522\nDB_TYPE=postgres\nSSL_SELF_SIGNED=true\nSSL_KEY_PATH=/home/git/data/certs/gitlab.key\nGITLAB_PORT=35443\nSMTP_PORT=465\nSMTP_USER=XXXXXXX\nSMTP_PASS=XXXXXX\nSMTP_ENABLED=true\nSMTP_DOMAIN=XXXXXX\nGITLAB_HTTPS=true\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nPWD=/home/git/gitlab\nSMTP_HOST=XXXXXXX\nHOME=/\nSHLVL=2\nGITLAB_HOST=my-public-host\nDB_USER=gitlab\nDEBIAN_FRONTEND=noninteractive\nSSL_CERTIFICATE_PATH=/home/git/data/certs/gitlab.crt\n_=/usr/bin/printenv\nI am using:\nLinux ubunto1 3.8.0-44-generic #66~precise1-Ubuntu SMP Tue Jul 15 04:01:04 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\nDocker version 1.2.0, build fa7b24f\nsameersbn/gitlab    latest              540902193ced        30 hours ago        988.2 MB\n. @sameersbn Yes, it is ubuntu 12.04. What part of the gitlab.yml do I have to review?\n## GitLab settings\n  gitlab:\n    ## Web server settings (note: host is the FQDN, do not include http://)\n    host: \"my-public-host\"\n    port: 35443\n    https: true\n. @sameersbn I have removed the quotations around the environment vars and now it redirects, but the container shuts down immediately after the redirect:\nCONTAINER ID        IMAGE                     COMMAND                CREATED             STATUS                      PORTS               NAMES\nf07b4e4f73d2        sameersbn/gitlab:latest   \"/app/init app:start   38 seconds ago      Exited (1) 11 seconds ago                       gitlab\n. @sameersbn Finally removing single quotes solved the problem.\nWrong way:\n-e 'GITLAB_HOST=xxxx'\nRight way:\n-e GITLAB_HOST=xxxx\n. ",
    "yaleh": "I did it. The configuration of google developer console is correct. But the URL generated by gitlab is wrong, it's http://HOST:443/users/auth/google_oauth2/callback. And I found it's generated with /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/omniauth-1.1.4/lib/omniauth/strategy.rb. There's a function named ssl which tried to detect HTTPS request. I believe it failed, but I don't know how to trace it (I know nothing about ruby). So I added \"return true\" to the beginning of this func. Then google stopped complain. But gitlab returns a wrong login page url again.\n. Would you please show me your proxy settings also? There maybe something wrong with my apache proxy settings.\n. Thanks a lot. I'm going to try it.\nDoes the above docker command line provide HTTPS service at 50083? According to my test, it's still HTTP.\nI'm using the proxy because I'm running multiple domains with this IP. So, I'm using name based proxy of Apache2.\n. Comfirmed. After updating to the latest build, Google oauth with https works now. Good job!\n. ",
    "dminca": "Setting UNICORN_WORKERS to 2 didn't fix the problem, in fact not even setting it to 1.\nLooks like the only solution is to get more RAM, Minimum 1 GB Required.\nIn their official documentation, they're clearly stating\n\nMemory\nYou need at least 2GB of addressable memory (RAM + swap) to install and use GitLab!\nWith less memory GitLab will give strange errors during the reconfigure run and 500 errors during usage.\n- 512MB RAM + 1.5GB of swap is the absolute minimum but we strongly advise against this amount of memory. See the unicorn worker section below for more advice.\n- 1GB RAM + 1GB swap supports up to 100 users but it will be very slow\n- 2GB RAM is the recommended memory size for all installations and supports up to 100 users\n- 4GB RAM supports up to 1,000 users\n- 8GB RAM supports up to 2,000 users\n- 16GB RAM supports up to 4,000 users\n- 32GB RAM supports up to 8,000 users\n- 64GB RAM supports up to 16,000 users\n- 128GB RAM supports up to 32,000 users\n- More users? Run it on multiple application servers\n. \n",
    "bugthing": "I have done a few things to trigger an email, including add ssh key, change root account email, also add new users.. still nothing.\nWe also use google for our email and this worked perfectly before we changed the container to 7.3.0 ... I guess I must have made a typo somewhere, coz it still an't working\nI have tried specifying SMTP_DOMAIN, that did not help\nIf the image is good, then I'll continue trying to find what I broke .. thanks for checking, sorry to waste your time... and thanks for this image\n. FYI - ths is how I run the container: \ndocker run -d -t --name='sm-gitlab'  --link sm-gitlab-db:postgresql --link sm-gitlab-redis:redisio  -v /storage/docker-container-volumes/sm-gitlab:/home/git/data  -p 10022:22 -p 10080:80  -e GITLAB_PORT=10080 -e GITLAB_SSH_PORT=10022 -e GITLAB_HOST=gitlab.smoffice -e SMTP_ENABLED=true -e SMTP_DOMAIN=www.gmail.com -e SMTP_USER=data@mydomain.co.uk -e SMTP_PASS=whoIsRickJames -e DB_USER=gitlab -e DB_PASS=shhhh -e DB_NAME=gitlabhq_production  --dns=172.19.1.182 sameersbn/gitlab:7.3.0\n. great tip, I checked the logs and saw this:\n2014-09-23T12:56:44Z 295 TID-3mic0 WARN: {\"retry\"=>true, \"queue\"=>\"default\", \"class\"=>\"Sidekiq::Extensions::DelayedMailer\", \"args\"=>[\"---\\n- !ruby/class 'Notify'\\n- :new_ssh_key_email\\n- - 3\\n\"], \"jid\"=>\"d6970d0\n2014-09-23T12:56:44Z 295 TID-3mic0 WARN: getaddrinfo: Name or service not known\nYour edit was spot on, it was indeed the dns\nThanks once again for taking the time.\n. ",
    "jeffutter": "The problem with rails thinking it needs a database connection is related to the act_as_taggable gem that gitlab uses. My gitlab docker container has a workaround for this and I am able to precompile assets at container build time:\nhttps://github.com/jeffutter/gitlab-docker/blob/master/Dockerfile#L76-L86\nI can create a pull request against this project to handle this if you think it is not too hacky and want to support it.\nI think I am going to be switching to your image instead of mine. You do a better job keeping it up to date and it is far more configurable. I would really like to not have to compile assets at ever container start though.\n. Are you sure about that? A quick scan through the gitlab sources it looks like the javascript uses gon.relative_url_root which is exported from the server at runtime. Perhaps it effects the CSS, not sure if they are referenced relatively or not.\nIf the CSS needs it set at asset build time then there may be no way around it. It would certainly be nice if that isn't the case though. I don't see why assets should change in the run processes. Assets should be part of the build process\n. > I'd vote for precompiling assets without relative url. In case relative URL\n\nis activated start script could rebuild assets automatically during startup.\n\nI second this.\n. ",
    "cmckni3": "\nI'd vote for precompiling assets without relative url. In case relative URL\nis activated start script could rebuild assets automatically during startup.\n\nThis could work but I don't think it's the best solution.\nOne solution would be to turn off precompilation and the app would compile assets on the first request but this requires an application setting change.\nTo get around connecting to the database, a  configuration setting, config.assets.initialize_on_precompile=false, would need to be changed. An environment setting, RAILS_ASSETS_PRECOMPILE is also required when using devise.\nIt seems like the asset pipeline is really the problem but again application changes would have to be made. I would have to look around sprockets to see what is going on but I believe the issue involves image assets and cache digests. This can be fixed but would have to happen in sprockets/Rails.\n. Emoji on a wiki page works for me in 7.14.1. The preview of the emoji in the text area doesn't display correctly though. The url is using the wrong digest for some reason.\n\n. There's something funky going on with either the cache or gemojione.\n. Sometimes it's an issue when the folder already exists on the host machine. The user inside of the docker container running the command is more than likely a different user and UID.\nI like to follow the data container paradigm for containers.\nIn development, I run redis and mongodb containers but I have stopped containers labeled redis-data and mongo-data so the data persists between upgrading the mongo and redis containers.\n. Thanks @sameersbn but it isn't a big deal. I got it working by mounting the config file.\n. ",
    "aidan-": "No problem, I should have checked for updates before committing. \n. No problem, I will test once the build is ready.\n. Sorry for the delay.  I can confirm that the 'wait loop' problem has been fixed in the latest and I am successfully able to start a 7.3.1 container.\n. ",
    "subesokun": "Great, thanks a lot :)\n. Great thanks! Everything seems to be fine with my settings though it would be nice if GitLab would add such a settings overview.\n. ",
    "Analect": "Thanks @sameersbn . I'll try that and let you know how I get on.\n. @sameersbn ... I ran app:sanitize ... and predictably it didn't run through error-free.  However, the list of exceptions relates to repos that are ordinarily on github, which I attempted at some point to 'import' into GitLab ... where I was hoping at the time to be able to keep these repos on both Gitlab and Github in synch.  I don't think it ever really worked. So it probably makes sense for me to remove these from Gitlab.  Is there a recommended approach to doing this so that they don't interfere with the migration process?  Hopefully by removing these, then I won't have exceptions in app:sanitize.\nChecking repository directories permissions...\nchmod: changing permissions of '/home/git/data/repositories/user_me/eolas.git': Operation not permitted\nchmod: changing permissions of '/home/git/data/repositories/user_me/eolas.git/packed-refs': Operation not permitted\nchmod: changing permissions of '/home/git/data/repositories/user_me/eolas.git/objects': Operation not permitted\nchmod: changing permissions of '/home/git/data/repositories/user_me/eolas.git/objects/pack': Operation not permitted\n. @sameersbn . I'm running on ubuntu 12.04 LTS. I removed the offending repositories and was able to migrate directly from 6.6.5 to 7.3.1. All seems to be OK, except some SSH key change issues (ECDSA) akin to what is described in http://stackoverflow.com/questions/21087695 ... although their solution in there (to remove the offending ECDSA key from known_hosts) doesn't appear to work for me.  The SSH key I have set up on GitLab appears to be correct ... not sure what part of the migration process might have triggered this.  Any ideas?\n. @sameersbn . Sorry to labour this SSH-related issue. I start the gitlab container using this volumes option: -v /opt/gitlab/data:/home/git/data\nI can see various ssh keys that appear to be in the '/opt/gitlab/data/ssh' directory (see lower down). Should I clear some of these out? The various *.pub files all contain user 'root@3b45d1324bac' at the end ... which looks like it might have been the original container id.  However, that gitlab container has now changed to something else.\nThe SSH key on gitlab (under my profile) is what corresponds to the key back on my host system under ~/.ssh/ .... under the new gitlab set-up, does it bypass this location in favour of looking in the linked /home/git/data/ directory on the container?  Thanks.\nme@ubuntu:/opt/gitlab/data/ssh$ ls -ltr\ntotal 32\n-rw-r--r-- 1 root root  399 Sep 23 08:30 ssh_host_rsa_key.pub\n-rw------- 1 root root 1679 Sep 23 08:30 ssh_host_rsa_key\n-rw-r--r-- 1 root root  607 Sep 23 08:30 ssh_host_dsa_key.pub\n-rw------- 1 root root  668 Sep 23 08:30 ssh_host_dsa_key\n-rw-r--r-- 1 root root  179 Sep 23 08:30 ssh_host_ecdsa_key.pub\n-rw------- 1 root root  227 Sep 23 08:30 ssh_host_ecdsa_key\n-rw-r--r-- 1 root root   99 Sep 23 08:30 ssh_host_ed25519_key.pub\n-rw------- 1 root root  411 Sep 23 08:30 ssh_host_ed25519_key\n. It's just everytime I try to push from sublime to one of the repos on gitlab, I get this.  I have copied the contents of ssh_host_ecdsa_key.pub as one of the SSH keys under profile on gitlab and restarted gitlab, but that doesn't appear to resolve. Do I need to explicitly point it to some SSH key as an environment variable when creating the gitlab container?\n\n. Thank you @sameersbn .  I'm clearly no SSH expert. I ended up deleting known_hosts and a new one was generated that appeared to fix the issue. Please close this issue as I don't have the option to do so.\n. @sameersbn \nIt seems that in looking at the logs from the docker container that I wrongly concluded that the container had not not started. In fact if I persist with the warnings ref a 'suspect' certificated on the browser, that gitlab was there after all. I'll have to figure out how to get rid of those warnings. I'll close this for now ... so you don't waste time unnecessarily on this. Rgds.\n\n. Closing this out ... \nFor anyone interested in progress on this issue, see here. Closing this out ... \nFor anyone interested in progress on this issue, see here. ",
    "ziirish": "Hm, must be related to my docker version...\n~|\u21d2 docker run -i -t --rm sameersbn/debian:jessie.20140918 ls -l /dev\ntotal 0\nlrwxrwxrwx 1 root root 13 Sep 26 16:38 ptmx -> /dev/pts/ptmx\ndrwxr-xr-x 2 root root  0 Sep 26 16:38 pts\ndrwxrwxrwt 2 root root 40 Sep 26 16:37 shm\nIn that case nevermind, I close the issue\nThanks!\n. Temporary fix:\napt-get update\napt-get install exim4-daemon-light\nRun these commands in your container (thanks to docker exec for instance)\n. duplicate of #750 \n. ",
    "arnaudlamy": "Hi, \nThank you for your return, but on my server I already have something on /.\nI do yant to use prefix to mount different web services on the same machine.\nExemple:\n/apache go to apache\n/django go to my django session\nLet me know if it's more clear :)\nArnaud\n. I did but I got a 403 that's the origin of my problem :)\nAny idea why or how I can debug it ?\n. In fact, if I remove this option \"-e 'GITLAB_RELATIVE_URL_ROOT=/git' \", it works like a charm on port 10080. \nI think there's a bug inside the docker configuration.\n. Ok I found it. In my nginx configuration I forgot to add /git.\nWith this it works.\nproxy_pass http://gitlab/git;\nThank you for your help and your project !\n. Yes of course, I need to add the git extension in both configuration.\nArnaud\n. ",
    "jrabary": "Thank @sameersbn . I'll try this but I just have some more questions since I'm new to ngnix. What's the meaning of the field proxy_pass ? And what about the ssh connection ? Is it possible to use the port 22 and still having the possibility to connect to the host ? Finally, where  the address server  172.17.42.1:10080; I don't want to open the port 10080 on my host ?\n. ",
    "majkinetor": "Since I want to use several of your docker containers on the same server (gitlab, redmine etc...) which all host nginx, I am concerned about the impact of multiple internal nginx processes. I also need to have nginx container itself since it redirects to specific web application depending on url.\nDo you have any thoughts on this ? Is it feasible for internal nginx to be optional, that is, to have linking mechanism just as with db ?\n. I can't see how that is relevant since I will use nginx with unicorn, just not the internal one.\n. True, but those dirs can be shared. Redmine static assets are in /public and /files folder. Since second one is already in the data volume I don't see why the first one can't be there too. \nNginx itself could share its conf.d dir for other images to abuse during the setup.\nTBH, I am not sure how mulitple nginx servers on the same box would influence performance but I guess its not insubstantial.\n. @jk Not sharing violates DRY principle. Also, the same logic could apply for external database, yet we have it. Its hard to draw a line here.\nAs of the performance, I guess only measurements can tell. I just found related question here: Efficiently using multiple docker containers in a single host\nBut I guess you are right - any improvement in performance probably isn't worth added complexity. Its questionable though, how much complexity is added this way - its just one more parameter to run command. @sameersbn 's docker-gitlab for instance links redis database so he already has double linkage, this is not different.  From the development of container perspective there is no substantial added complexity either.\njust thoughts anyway ...\n. @sameersbn \n\nIf a user desires a setup that does not fit how the image works be default, you could always ...\n\nOf course, its not a problem to modify the code. I just want to discuss merits of doing that.\nBTW, I forgot to say thanks for doing this awesome list of docker containers. Totally pro done. \n. @jk So it boils down to:\n- You violate DRY but you get SoC and KISS. Developer happy, end user happy if he fits the context or might not be if he wants to change a parameter in every nginx.\n- You violate SoC but get DRY and slightly damage KISS. Developer slightly unhappy about the change  end user always happy (because he can opt to still use internal nginx).\nSoC violation is questionable here - actually, I think that current setup violates SoC since it is not a concern of docker-redmine to deal with nginx requests because we have problems with Unicorn.\nAnyway, I will use the images as is for now with another nginx as proxy. So with gitlab and redmine I will have totall 12 nginx workers. If I get performance issues I will externalize nginx.\n. >  but I also see in the current implementation of docker it is way too complicated to achieve this.\n\n... you will also want to remove all nginx completely\n\nNot necessarily. Not completely. \nI doubt it is way more complicated :) The only difference is that nginx is not in the docker file but could be obtained from within setup script (the same as redmine for instance) if there is no env var defined. \n. That is not trivial to automate. My ansible script provision containers as system services and old images are removed. It is perhaps good idea to have container init script generally just as  with redmine plugins.\n. Thanks dude, awesome !\n. ",
    "pirelenito": "I found the issue.\nThe init script inside the Docker image seems to be outdated. Manually editing inside the container with the latest changes from master seems to fix the problem.\n. Hi @sameersbn \nActually I just discovered that the init is updated in 7.3.2. I accidentally ran an old version while doing the testing (I was doing a lot of back and forward between versions while debugging this issue). \nYou can check on the issue description, I was actually running sameersbn/gitlab:7.3.1-3.\nSorry about that.\nIn my testing if I use the sameersbn/gitlab:7.3.1-3 as a base image to use the updated init script I can make it work.\nHere is the Dockerfile I am using:\n```\nFROM sameersbn/gitlab:7.3.1-3\nOverride default init (which is broken)\nsee: https://github.com/sameersbn/docker-gitlab/issues/167\nADD init /app/init\nRUN chmod 755 /app/init\n```\nUnfortunately the 7.3.2 keeps with the 'Waiting for database server to accept connections'\nBut I managed to make it work for now.\nThanks for the quick response and sorry about my mistake :)\n. Hi @sameersbn \nI can confirm that the release 7.3.2-1 is working.\nThanks!\n. ",
    "stesie": "Hi there,\nI had the same problem, pulled :latest tag about four hours ago, and kept getting the error message.\nThe container was missing the mysqladmin binary.\nAnd yes, I can confirm version 7.3.2-1 working.\ncheers\n  ~stesie\n. ",
    "YauzZ": "i have the same problem that release 7.6.1\n. @sameersbn  i have solved. but i forgot what i do. sorry!\n. @sameersbn i solved.   \nbecause i don't path the ssl certs.  please forgive me.\n. ",
    "dobsiin": "this problem bit me too! I installed the mariadb-server\n(since i have changed the base image from ubuntu to centos the mysqladmin cmd was not found)\nyum -y install mariadb-server\nsolved it\n. I ended up taking the internal smtp server of my company. this works fine.\nbtw great work sameersbn!\n. it seems that there is really no option (searched the offical gitlab forum, github, etc) ended setting up the smtp settings, so gitlab can send those confirmation emails.\n. https://forum.gitlab.com/t/no-confirmation-email-for-new-users/617\nfrom tgdesrochers:\nedit: /opt/gitlab/embedded/service/gem/ruby/2.1.0/gems/devise-3.2.4/lib/devise.rb\nline: 123\nchange to: @@email_regexp = /\\A[^@]+@[^@]+\\z/\nrerun: gitlab-cli reconfigure.\nNow any new user you create will not be required to click on a verification email.\nIf there was an easier way to do this please tell me. I couldn't find one.\n.... there is no easy way to accomplish this. Guess this is resolved.\n. Thanks for the help.\nBut actually this error was because I added the addition gem onmiauth-cas. And permformed a bundle update which is not good because I ended up with different versions of the many many rubygems.\n. ",
    "phani1kumar": "I've a similar problem with gitlab and mysql. Initially I've created the docker containers in a Virtual machine on windows host, at that time gitlab used to work fine when running the virtualbox as admin. I was using a shared folder to virtualbox as mount to the docker volumes. \nI recently moved my virtual machines to Linux (Ubuntu host with Oracle Virtual box). All the other containers are working just fine but for the gitlab. I've redmine, mysql, gitlab, redis, docker-registry containers in this set-up and all of them except for gitlab are working. \nWith gitlab, the push to existing repos is working from the files per say, I could confirm by looking into the mounted virtualbox share folder and checking the date the files got updated. But the changes are not reflected in the mysql database data folders / innodb files. Also, the updates are not reflected in the gitlab GUI. When I create a new repository, it is getting created properly in the filesystem, but the new project is not listed in the UI.\nI ran the following command from my gitlab container, and following is the status:\n<mysqladmin -h ${MYSQL_PORT_3306_TCP_ADDR} -u ${DB_USER} -p${DB_PASS} status\nUptime: 1415  Threads: 2  Questions: 741  Slow queries: 0  Opens: 99  Flush tables: 1  Open tables: 92  Queries per second avg: 0.523\nThe ${DB_HOST} is coming empty. Hence used the other value:MYSQL_PORT_3306_TCP_ADDR Also. The correct IP is present in the database.yml file (I've cross checked this).\nI don't see any error messages anywhere in the /var/log/gitlab and its sub-directories. Need your help. Kindly suggest what I can do.\n. hi @sameersbn, just posted it as a new issue, because it is not 100% the same as this one. Also, provided more details about my issue in the issue #477\n. @sameersbn Thank you for this great repository. I am also in the same situation as @Analect I've got the 7.11.x which I migrated to 8.1.3 using the documentation. \nNow when I login, I am seeing the project listing and stuff but couldn't see the CI specific links. Can you please suggest if I've to visit a different URL?\nThanks and Best Regards,\nPhani\n. Hi @sameersbn I can see that it is somehow related to the file permissions related issue. I did the following and it started working:\n1. copied the entire mount volume into the guest ubuntu server --> making it a local copy of files\n2. gave 777 permissions on the folder and kept the owner to be root itself\n3. ran the gitlab container, the project creation was successful\nBut, I don't want to have the volume directory to be on the guest machine. It should be in the host and mounted via virtualbox share folder. \nI even tried manual mount of the shared volume on the guest with \na) \"sudo mount -t vboxsf -o uid=1000,gid=1000 gitlab /mnt/Share/gitlab\"  ==> these are the uid and gid of git user in the gitlab container. With this the filesystem is writable but the database is not.\nb) \"sudo mount -t vboxsf -o uid=999,gid=50 gitlab /mnt/Share/gitlab\"  ==> these are the uid and gid of vboxadd and staff on guest ==> in some thread somewhere related to docker I found this suggestion. This didn't work, even the filesystem is not writable\n. As per the gitlab documentation, the production.log should list all the sql queries fired by the system, but in my case the production.log doesn't contain any. Can you please help if there is a way I can enable this? I was searching allover in the container and not able to find any references to this.\nhttp://doc.gitlab.com/ce/logs/logs.html\n. I've also cross checked if I can connect to the database through the git user using sudo -u git -H mysql -h ${MYSQL_PORT_3306_TCP_ADDR} -u $DB_USER -p -D $DB_NAME\nI am able to login. I suspect some other hook before making a database insert is failing silently because of the linux file permissions. Not able to get to the root of it.\n. never-mind, I solved the problem myself. The issue was with the link creation by gitlab. The gitlab was not able to create symbolic links. I've had to allow the sym link creation through \nVBoxManage setextradata VIRTUALMACHINE_NAME VBoxInternal2/SharedFoldersEnableSymlinksCreate/SHARE_NAME 1 \nVIRTUALMACHINE_NAME should be the name of the guest, and SHRE_NAME shall be the absolute path of the share directory from host. After the setting is changed, the host need to be rebooted for it to take effect. \nAlso, as I've migrated from one server to the other, I've had to re-create the symlinks manually using\nfind . -name hooks -exec sh -c 'ln -snf /home/git/gitlab-shell/hooks $0' {} \\;\nAlso, the gitlab installation can be validated through the following steps:\nsudo -i -u git\ncd gitlab\nbundle exec rake gitlab:env:info RAILS_ENV=production\nbundle exec rake gitlab:check RAILS_ENV=production\nExtracted from https://github.com/gitlabhq/gitlabhq/blob/master/doc/development/architecture.md\n. ",
    "anish274": "Hello all,\nCan any one explain how to handle databases for CI? I am very new to gitlab and need some tutorial / guide to process the same. If any one can help me on this it will be very helpful. :+1:  @pirelenito . ",
    "Pegasuz": "I use the docker runner and setup my database as a service:\nvariables:\n  MYSQL_DATABASE: testing\n  MYSQL_ROOT_PASSWORD: toor\n  DEVELOPMENT: noprofile\nunittesting:\n  image: dockerwest/php-laravel:7.1\n  services:\n    - mysql:latest\n  stage: testing\n  before_script:\n  - php -v\n  - composer --version\n  - git --version\n  - ls -lah\n  script:\n   script:\n    - composer install\n    - cp .env.testing .env\n    - php artisan key:generate\n    - php artisan config:cache\n    - php artisan env\n    - php artisan migrate\n    - php artisan db:seed\n    - php vendor/bin/phpunit --colors. @evenh I have updated the PR accordingly. Anything else you need me to do?\n. @sameersbn Patches are applied ;)\n. @solidnerd You are very welcome!\n. So if I use nginx-proxy with the letsencrypt companion, I cannot get the registry to work?. I'm using https://github.com/jwilder/nginx-proxy and https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion\nI got it to work now. For future reference I will leave my config here:\n```\ngitlab:\n  // A lot of content skipped \n  environment:\n    - GITLAB_REGISTRY_ENABLED=true\n    - GITLAB_REGISTRY_HOST=registry.myhostname.be\n    - GITLAB_REGISTRY_PORT=\n    - GITLAB_REGISTRY_API_URL=http://registry:5000\n    - GITLAB_REGISTRY_KEY_PATH=/home/git/data/registry.key\nregistry:\n    restart: always\n    image: registry:2.4.1\n    volumes:\n    - ./gitlab/shared/registry:/registry\n    - ./certs:/certs\n    environment:\n    - VIRTUAL_HOST=registry.myhostname.be\n    - VIRTUAL_PORT=5000\n    - LETSENCRYPT_EMAIL=my@email.com\n    - LETSENCRYPT_HOST=registry.myhostname.be\n    - REGISTRY_LOG_LEVEL=info\n    - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n    - REGISTRY_AUTH_TOKEN_REALM=https://gitlab.myhostname.be/jwt/auth\n    - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n    - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n    - REGISTRY_STORAGE_DELETE_ENABLED=true\n    - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/registry-auth.crt\n```. @xxorax is correct. This is why an external docker registry is needed. Hence my setup.. @niksubramanian Here you go:\n```\npostgresql:\n  restart: always\n  image: sameersbn/postgresql:9.6-2\n  environment:\n    - DB_USER=username\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\n  volumes:\n    - ./postgresql:/var/lib/postgresql\ngitlab:\n  restart: always\n  image: sameersbn/gitlab:latest\n  links:\n    - redis:redis\n    - postgresql:postgresql\n    - registry:registry\n  ports:\n    - \"9022:22\"\n  environment:\n    - DB_ADAPTER=postgresql\n    - DB_HOST=postgresql\n    - DB_PORT=5432\n    - DB_USER=username\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n- REDIS_HOST=redis\n- REDIS_PORT=6379\n\n- DEBUG=false\n- TZ=Europe/Brussels\n- GITLAB_TIMEZONE=Brussels\n- VIRTUAL_HOST=gitlab.domain.be\n- LETSENCRYPT_EMAIL=user@domain.be\n- LETSENCRYPT_HOST=gitlab.domain.be\n\n- GITLAB_HTTPS=true\n- SSL_SELF_SIGNED=false\n- GITLAB_SECRETS_DB_KEY_BASE=long-and-random-fdgfdsgsdfgsdfgds\n- GITLAB_SECRETS_SECRET_KEY_BASE=long-and-random-alphanumeric-string\n- GITLAB_SECRETS_OTP_KEY_BASE=long-and-random-alphanumeric-string\n\n- GITLAB_HOST=gitlab.domain.be\n- GITLAB_PORT=443\n- GITLAB_SSH_PORT=9022\n- GITLAB_RELATIVE_URL_ROOT=\n\n\n- GITLAB_ROOT_PASSWORD=rootpassword\n- GITLAB_ROOT_EMAIL=user@domain.be\n\n- GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n- GITLAB_NOTIFY_PUSHER=false\n\n- GITLAB_EMAIL=gitlab@domain.be\n- GITLAB_EMAIL_REPLY_TO=gitlab@domain.be\n- GITLAB_INCOMING_EMAIL_ADDRESS=gitlab@domain.be\n\n- GITLAB_BACKUP_SCHEDULE=disable\n- GITLAB_BACKUP_TIME=01:00\n\n- GITLAB_REGISTRY_ENABLED=true\n- GITLAB_REGISTRY_HOST=registry.domain.be\n- GITLAB_REGISTRY_PORT=\n- GITLAB_REGISTRY_API_URL=http://registry:5000\n- GITLAB_REGISTRY_KEY_PATH=/home/git/data/registry.key\n\nvolumes:\n    - ./gitlab:/home/git/data\n    - ./logs:/var/log/gitlab\n    - ./certs:/certs\nredis:\n  restart: always\n  image: sameersbn/redis:latest\n  volumes:\n    - ./redis:/var/lib/redis\nrunner:\n  image: sameersbn/gitlab-ci-multi-runner:latest\n  volumes:\n    - ./runner-gitlab:/home/gitlab_ci_multi_runner/data\n    - /var/run/docker.sock:/var/run/docker.sock\n    - ~/.docker:/root/.docker\n    - /home/user/.ssh:/home/user/.ssh\n  environment:\n    - CI_SERVER_URL=https://gitlab.domain.be/ci\n    - RUNNER_TOKEN=runnertoken\n    - RUNNER_DESCRIPTION=DockerRunner\n    - RUNNER_EXECUTOR=docker\n  restart: always\n  privileged: true\nregistry:\n    restart: always\n    image: registry:2.4.1\n    volumes:\n    - ./gitlab/shared/registry:/registry\n    - ./certs:/certs\n    environment:\n    - VIRTUAL_HOST=registry.domain.be\n    - VIRTUAL_PORT=5000\n    - LETSENCRYPT_EMAIL=user@domain.be\n    - LETSENCRYPT_HOST=registry.domain.be\n    - REGISTRY_LOG_LEVEL=info\n    - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n    - REGISTRY_AUTH_TOKEN_REALM=https://gitlab.domain.be/jwt/auth\n    - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n    - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n    - REGISTRY_STORAGE_DELETE_ENABLED=true\n    - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/registry-auth.crt\n`. ",
    "JasonCubic": "Maybe try adding in:\n-e 'SMTP_ENABLED=true' \nThat fixed my problems, I hope it helps you and is not a wild goose chase.\n. ",
    "tirithen": "Yes I figured that much out my self by google and looking at the code (with the limited knowledge of ruby that I have). I tried adding SMTP_ENABLED env variable anyway now and recreating the container but as expected it did not seem to help at all.\nThe SMTP server that I want to use (send.one.com) listens to port 465 and I have tried SMTP_STARTTLS=false . I can try using a temp gmail account to try to figure out if the problem is with docker or the SMTP server.\n. Thanks, trying more combinations now. :) I'll report back.\n. I got it working, thanks for all the help, de differences between port 465 and 587 was the key and it turned out that send.one.com supported port 587 without mentioning it.\nThe final configuration that works was:\ndocker run --name=gitlab -d \\\n  --link mysql:mysql \\\n  --link redis:redisio \\\n  -p 2022:22 -p 10080:80 \\\n  -e 'GITLAB_HOST=example.com' \\\n  -e 'GITLAB_EMAIL=gitlab@example.com' \\\n  -e \"GITLAB_PORT=2443\" -e \"GITLAB_SSH_PORT=2022\" \\\n  -e 'GITLAB_HTTPS=true' \\\n  -e 'DB_NAME=gitlabhq_production' \\\n  -e 'DB_USER=gitlab' \\\n  -e 'DB_PASS=databasepassword' \\\n  -e 'SMTP_ENABLED=true' \\\n  -e 'SMTP_USER=gitlab@example.com' \\\n  -e 'SMTP_PASS=smtppassword' \\\n  -e 'SMTP_DOMAIN=example.com' \\\n  -e 'SMTP_HOST=send.one.com' \\\n  -e 'SMTP_PORT=587' \\\n  -e 'SMTP_STARTTLS=true' \\\n  -e 'SMTP_AUTHENTICATION=plain' \\\n  -v /opt/gitlab/data:/home/git/data \\\n  sameersbn/gitlab:latest\n. ",
    "xiangang-wei": "@sameersbn Hi saneersbn, I also have the problem with the smtp setting. I have followed the instructions above, but I still can not make the mail work. I use following command to start a container:\ndocker run --name gitlab -d \\\n--link postgresql:postgresql --link redis:redisio \\\n-p 10022:22 -p 10080:80 \\\n-e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=10022' \\\n-e 'GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string' \\\n-e 'GITLAB_SECRETS_SECRET_KEY_BASE=long-and-random-alpha-numeric-string' \\\n-e 'GITLAB_SECRETS_OTP_KEY_BASE=long-and-random-alpha-numeric-string'\\\n -e 'GITLAB_HOST=mydomain' \\\n-e 'GITLAB_EMAIL=gitlab@phicomm.com' \\\n-e 'SMTP_ENABLED=true' \n-e 'SMTP_DOMAIN=phicomm.com' \\\n-e 'SMTP_HOST=smtp.phicomm.com' \\\n-e 'SMTP_STARTTLS=false' \\\n-e 'SMTP_USER=gitlab@phicomm.com' \\\n-e 'SMTP_PASS=mypassword' \\\n-e 'SMTP_AUTHENTICATION=plain' \\\n-e 'SMTP_PORT=25' \\\n-e 'GITLAB_BACKUP_SCHEDULE=daily' \\\n-e 'GITLAB_BACKUP_TIME=11:50' \\\n-v /newgitlab/gitlab/data:/home/git/data \\\nsameersbn/gitlab\nand when i try to trigger the mail, I got a error:\n\nI knos this is familair problem with the above, but I really can not solve it by the above instructions, can you give me some advices? Thanks!. @sameersbn I solve this problem by remove the -e 'SMTP_USER=gitlab@phicomm.com' and -e 'SMTP_AUTHENTICATION=plain'. The reason why the email fail to work is the authentication type unknown, I think it is a priblem of the mail provider. by removing this,using annomously authentication, it works!. ",
    "zimmski": "The time is 2 hours of to the host system but that would just mean that the cronjob would run 2 hours earlier. Right?\nI ran cd /home/git/gitlab && PATH=/usr/local/bin:/usr/bin:/bin bundle exec rake gitlab:backup:create RAILS_ENV=production in the container as root and the backup worked. I tried the same with sudo -u git but got\nsudo: cd: command not found\n. Sorry for the late response, I was not at home. I found the problem while looking in /var/log/supervisor/cron.log which contains some \"Cannot make/remove an entry for the specified session\".\nI commented out the following line in /etc/pam.d/cron\n```\nSets the loginuid process attribute\nsession    required     pam_loginuid.so\n```\nand restarted the cron daemon. The cronjobs are running now but I do not thing that this is the right solution since you guys are not having this problem.\nEDIT: I did not change the image/container besides debugging the cronjob problem.\n. I did some research. It looks like a debian problem https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=762157 to me which is triggered by docker https://stackoverflow.com/questions/21391142/why-is-it-needed-to-set-pam-loginuid-to-its-optional-value-with-docker\nMaybe this whole thing is triggered because I am using a newer docker version than you?\n$ docker version\nClient version: 1.2.0\nClient API version: 1.14\nGo version (client): go1.3.1\nGit commit (client): fa7b24f\nOS/Arch (client): linux/amd64\nServer version: 1.2.0\nServer API version: 1.14\nGo version (server): go1.3.1\nGit commit (server): fa7b24f\nThere are btw some docker images which do the same workaround https://github.com/tsuru/basebuilder/commit/fbc3bc7af50ef1b3ee0dd96457e11b088ae0e63d https://github.com/docker/docker/issues/5663\nAnd it looks like the official docker response is to just disable this security feature https://github.com/docker/docker/issues/5554 https://github.com/docker/docker/search?utf8=%E2%9C%93&q=pam_loginuid.so which is kind of crazy since it looks like they did not even discuss why it does not work and what it is good for.\n. What execution driver are you using? I use the native one which according to https://github.com/tsuru/now/issues/1 is another workaround.\n. It is working with the latest image (thanks!), but simply because session    required     pam_loginuid.so is missing in /etc/pam.d/cron. When I add it, the cronjobs fail again. Which leads to the question why was it there in the older image and why it is ok to remove it.\nMy host is openSUSE 13.1.\nAnyway I think we can close the issue since it is working and it is no problem of the gitlab image itself. Thanks for your help!\n. Alright, thanks!\n. AFAIK Docker does not automatically expose and forward all ports of a container, this would be a security flaw. You have to manually forward the port. Add \"-p 80:80\" and \"-p 443:443\" to your arguments.\n. ",
    "netflash": "@sameersbn btw me too using 7.3.2-1 and backups doing fine.\nBefore I switched timezone to local, as described in #113 they was created at 04:00 GMT and now at 04:00 localtime. So everything seems working as it has to be.\n. btw I also use docker 1.2.0\n$ docker version\nClient version: 1.2.0\nClient API version: 1.14\nGo version (client): go1.3.1\nGit commit (client): fa7b24f\nOS/Arch (client): linux/amd64\nServer version: 1.2.0\nServer API version: 1.14\nGo version (server): go1.3.1\nGit commit (server): fa7b24f\n. @datajerk You can have a look to my image https://github.com/netflash/docker-exim4-gitlab\nFeel free to ask any questions in the project.\n. I assume that you should check on which  IP addresses 10022/tcp port attached to.\nrun this on your host system\nsudo netstat -tapn|grep 10022\n. I'm with Debian 7 and everything works fine.\n. Try to use this option\n```\nman docker run\n--add-host=[]\n          Add a custom host-to-IP mapping (host:ip)\n   Add a line to /etc/hosts. The format is hostname:ip.  The --add-host option can be set multiple times.\n\n```\n. ",
    "YvanDaSilva": "Had the same issue with TimeZone, in my case I was using Europe/Zurich which is not supported by : http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html\n. ",
    "msmarino": "The automatic backup is great!!  \nIs there a hook (implemented or planned) that allows immediate upload of the backup to a storage server?  Possibly a bash script in the backup directory that accepts the new backup file name and is executed after backup creation?\n. I shall look forward to the new version (and container) ;-)\nThanks again\n. Jeez!  What an embarrassing oversight!  Thanks...\n. Thx for the reply!!\nUnfortunately  when I run\ndocker-compose exec gitlab sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production\nit asks for confirmation and wipes out the whole database!\nAnd  with\ndocker-compose exec gitlab sudo -u git -H bundle exec rake gitlab:setup production\nI get\nD, [2016-10-15T14:42:02.656332 #549] DEBUG -- sentry: ** [Raven] cannot load such file -- haml_lint/rake_task excluded from capture due to environment or should_capture callback\nrake aborted!\nAs you cas see, rails is NOT my thing.\n. I am using postgresql as as defined in the docker-compose.yml.\nFinally I used virtualbox to install a 'full' version and imported/changed/exported my data without a hitch.  Then reimported back to my docker instance.  Not optimal but a solution...\n. Thx.  I missed that one.  . ",
    "newkit": "@sameersbn Thank you for your quick fix! But unfortunatly still no success yet.\nYes, the server uses a self signed SSL cert. With the fix you supplied, and SMTP_OPENSSL_VERIFY_MODE=none I can see in the packet log that the communication is going on for a while, but no success sending the email.\nThe exim log shows the following:\nSMTP connection from [X.X.X.X]:44971 I=[X.X.X.X]:587 (TCP/IP connection count = 1)\nSMTP protocol error in \"AUTH LOGIN\" H=x (X.X.X.X) [X.X.X.X]:44971 I=[X.X.X.X]:587 LOGIN authentication mechanism not supported\nTLS error on connection from x (X.X.X.X) [X.X.X.X]:44971 I=[X.X.X.X]:587 (recv): A TLS packet with unexpected length was received.\nTLS error on connection from x (X.X.X.X) [X.X.X.X]:44971 I=[X.X.X.X]:587 (send): The specified session has been invalidated for some reason.\nSMTP connection from x (X.X.X.X) [X.X.X.X]:44971 I=[X.X.X.X]:587 lost\nno MAIL in SMTP connection from x (X.X.X.X) [X.X.X.X]:44971 I=[X.X.X.X]:587 D=0s X=TLS1.0::32 CV=no C=EHLO,STARTTLS,EHLO,AUTH\nI think it would be better, if one could install the self signed cert, rather then disabling the certificte verification. But, oc I don't know how much work that involves.\nDisabling TLS (SMTP_STARTTLS=false) still results in issueing the command STARTTLS to exim.\nThe Admin > Logs > production.log did not show anything interesting.\n. Using SMTP_AUTHENTICATION=plain and SMTP_STARTTLS=false gives:\nSMTP connection from [X.X.X.X]:57801 I=[X.X.X.X]:587 (TCP/IP connection count = 1)\nSMTP protocol error in \"AUTH PLAIN <HASH REMOVED>==\" H=x (X.X.X.X) [X.X.X.X]:57801 I=[X.X.X.X]:587 AUTH command used when not advertised\nSMTP connection from x (X.X.X.X) [X.X.X.X]:57801 I=[X.X.X.X]:587 lost\nno MAIL in SMTP connection from x (X.X.X.X) [X.X.X.X]:57801 I=[X.X.X.X]:587 D=0s C=EHLO,AUTH\nUsing SMTP_AUTHENTICATION=plain and SMTP_STARTTLS=true and SMTP_OPENSSL_VERIFY_MODE=none works :-D\nNow i'll be looking into getting the self signed certificate verification working.\n@sameersbn thank you very much for your help and your fast responses, much appreciated.\n. I recreated the exim certificate so that the CN matches the server name. Now it works without SMTP_OPENSSL_VERIFY_MODE=none and without installing the cert in the CA file.\nI am sorry I didn't check that before. \n. ",
    "quasarj": "Sorry, posting from a phone, that should have been mysql and redis above.\n. Nevermind, it was a combination of issues. The first time I attempted to launch the docker container with correct mysql settings I did not have correct redis settings, and this apparently caused it to half-configure gitlab, but it didn't create any users. Dropping the database and restarting the container caused it to create the correct users.\nHowever, I did have to use \"admin@example.com\" rather than \"root\" for it to work.\n. ",
    "jeffcichonski": "I had a similar issue. I could not log in with root/password. I did a bit of googling and found 5iveL!fe is used as the default password for gitlab in other implementations. root/5iveL!fe worked. \nDid gitlab make a change to default password?\n. ",
    "MatrixManAtYrService": "I ran across this issue because gitlab asked me to set a password on first startup, so I did.  Then, later, I tried to use 5iveLi!fe and it didn't work.  As it turns out, the password that I set during startup was the root password.. ",
    "xujinzheng": "while I use debug mode to connect ssh, I found it will to find the file of id_dsa, but in old gitlab, it will work correct, I did not generate id_dsa before\nbash\ndebug1: Offering RSA public key: /Users/zhengxujin/.ssh/id_rsa\ndebug1: Authentications that can continue: publickey,password\ndebug1: Trying private key: /Users/zhengxujin/.ssh/id_dsa\ndebug1: Next authentication method: password\nto fix this issue, just use ssh-key to generate dsa type key\n. @sameersbn  yes, I already generated before I use ssh to push code, I means, I already use the same pub key at old version of gitlab, it will successful to push code to server, but while I use this pub key to this new version gitlab(gitlab:7.3.2-1), it will prompt to input password, so I regenerate the key and the type is id_dsa( before is rsa ) , then it could be push successful. \n. ",
    "cosminonnet": "Thanks a lot for the quick response!\nI enabled POP acces in Gmail following the steps presented here:\nhttps://support.google.com/mail/troubleshooter/1668960?hl=en#ts=1665119\nThen, I restarted my Gitlab container, I recreated a user, but no email was sent.\nI know this should not be complicated to resolve, but I just don't figure out what is missing.\nAny other leads? :D\nFor info, here is the Fig file I'm running:\nhttps://github.com/cosminonnet/docker-fig-installs/blob/master/gitlab/fig.yml\n. I checked the logs as you suggested and I don't see any errors:\nSent mail to cosminonnet@myservername.com (30016.3ms)\nSent mail to admin@example.com (30025.0ms)\nOn the Gmail settings I have this: \"Status: POP is enabled for all mail\"\n. So I think we are one step closer to solving this :) In fact, my application is hosted on a private server and  (I just found out) I have to use their smtp. Thus, trying to use Gmail was a bad approach for me since the beginning.\nI adapted my Fig config file accordingly and tried again, but no mail was sent :(\nHere's what changed:\ngitlab:\n  image: sameersbn/gitlab:7.3.2-1\n  environment:\n    - SMTP_ENABLED=true\n    - SMTP_DOMAIN=www.hosting-server-name.com\n    - SMTP_HOST=smtp.hosting-server-name.com\n    - SMTP_PORT=25\n    - SMTP_AUTHENTICATION=none\nIs there another parameter needed to be specified?\n. Ok, thanks! Sorry for wasting your time with this issue. Indeed, the README is complete and well written, but sometimes things just don't do as smoothly as we'd wish to.\nI hope I'll figure it out finally and get the configuration parameters right.\n. ",
    "yar": "Many thanks. You are right.\n. Many thanks. You are right.\n. ",
    "amincheloh": "From gitlab.yml.example\n\n## Automatic issue closing\n   # If a commit message matches this regular expression, all issues referenced from the matched text will be closed.\n   # This happens when the commit is pushed or merged into the default branch of a project.\n   # When not specified the default issue_closing_pattern as specified below will be used.\n   # Tip: you can test your closing pattern at http://rubular.com\n   # issue_closing_pattern: '([Cc]lose[sd]|[Ff]ixe[sd]) #(\\d+)'\n. sorry, I think this feature is not enable by default\n. \n",
    "UncertainSchrodinger": "Same problem here on 14.04 Ubuntu. Just ran the docker run command from readme. I Was using docker 1.3.\n. ",
    "sybeck2k": "Here is the info:\n$ docker version\ndClient version: 1.3.0\nClient API version: 1.15\nGo version (client): go1.3.3\nGit commit (client): c78088f\nOS/Arch (client): linux/amd64\nServer version: 1.3.0\nServer API version: 1.15\nGo version (server): go1.3.3\nGit commit (server): c78088f\n$ docker info\nContainers: 6\nImages: 208\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Dirs: 220\nExecution Driver: native-0.2\nKernel Version: 3.13.0-32-generic\nOperating System: Ubuntu 14.04.1 LTS\nWARNING: No swap limit support\n$ docker run \\\n   --link ldap:ldap --link redis:redisio --link postgres:postgresql \\\n   -e DB_USER=db\\\n   -e DB_PASS=db\\\n   -e DB_NAME=db \\\n   -d sameersbn/gitlab\nThe problem was solved by mounting /home/git/data with a host folder having the ssh keys generated in the subfolder ssh\n. your sequence works right - in my setup I was using dockerfile/redis and orchardup/postgresql.\nIt seems that the origin of my problem is that when using orchardup/postgresql the database password is not passed correctly through the env variables: \n2014-10-28 14:56:51 GMT FATAL:  password authentication failed for user \"gitlab\"\nI will close the issue - thanks for the help!\n. ",
    "victort": "brilliant.. I apologize for my thickheadedness, poorly escaped/quoted variable values for the lose.\nthank you kindly for addressing my ridiculousnless, may i stand as  an example to others to validate their input before asking questions.\nthanks tons!\n. ",
    "xflash": "Done ;-)\n. Hi,\nThe issue is about communication between a SSL-enabled Apache frontend and docker-gitlab.\nI have currently workaround this issue on the gitlab http mapped-port, not the https mapped-port.\nThanks again for your support\n. ",
    "ninja-": "same goes for comments...emoji links giving 404\nUsing an emoticon generates a buggy link:\nhttps://example.com/gitlab/gitlab/assets/emoji/+1-f533c51dd91a3c42ba08aaaf96e81a11.png\n. Another problem with this configuration is redirects...\nRepository urls are shown perfectly fine in form: https://domain.com/gitlab/ etc.\nRelative links are working fine too.\nWhen GitLab tries do a redirect it redirects the browser to localhost:10080...no idea why is that.\n```\nRequest URL:https://domain.com/gitlab/admin/projects/root/testproject/transfer\nRequest Method:POST\nCache-Control:no-cache\nConnection:keep-alive\nContent-Type:text/html; charset=utf-8\nDate:Sun, 16 Nov 2014 17:28:06 GMT\nLocation:https://127.0.0.1:10080/gitlab/admin/projects/root/testproject\nServer:nginx\nSet-Cookie:request_method=PUT; path=/\n```\nEDIT:\nAs the 10080 number couldn't be known from inside the docker, problem seems related to the master nginx instance.\nIs there anything wrong with this configuration?\n```\nlocation ^~ /gitlab/ {\n        proxy_buffering  off;\n        proxy_pass         http://127.0.0.1:10080/gitlab/;\nproxy_redirect    default;\n}\n```\nEDIT2:\nProper configuration...\nproxy_redirect    https://127.0.0.1:10080/gitlab/ https://domain.com/gitlab/;\nmaybe a good idea to add it to documentation...\n. > You docker run command specifies GITLAB_PORT=10080 and GITLAB_PORT=443. You only need to specify one of these and that should be for the SSL port. So GITLAB_PORT=443 should be the only one.\nOops, missed that. I think to correct one to stay will be 10080 as it's used in load balancer to connect.\n\nLastly, you need to publish the SSL port using -p 443:443. If the 443 port is already in use the you can specify a different port e.g. -p 10443:443 in which case you will need to update GITLAB_PORT=10443\n\nI think it's the correct configuration - not exposing the 443 port while it's being used behind \"load balancer\"?\n\nPlease note:\nThe use of -v /var/run/docker.sock:/run/docker.sock -v $(which docker):/bin/docker option to start the postgresql and redis containers is only for quickstart purposes. You should manually create these containers and mount a volume for the postgresql container. Else you will lose data if the postgresql container is removed.\n\nLooking at \"docker ps -a\", these were created and mounted automatically.\nI don't plan to remove any of them(redis and postgresql). (can I remove the docker.sock part now...?)\nIf I were to remove them and then recreate them on my own, I don't see the advantage.\n. Problem solved.\n. Problem solved.\n. That was an example error page(don't mind the actual error).\nI am referring to /static.css which is missing baseurl.\n. That was an example error page(don't mind the actual error).\nI am referring to /static.css which is missing baseurl.\n. /home/git/gitlab/public/.html\n. /home/git/gitlab/public/.html\n. I still think these files should be patched based on GITLAB_RELATIVE_URL_ROOT...\n. I still think these files should be patched based on GITLAB_RELATIVE_URL_ROOT...\n. confirmed upstream\nrewrite                /gitlab/gitlab/(.*) /gitlab/$1 break;\nugly hack but works\n. confirmed upstream\nrewrite                /gitlab/gitlab/(.*) /gitlab/$1 break;\nugly hack but works\n. https://github.com/gitlabhq/gitlabhq/issues/8370\nhttps://github.com/gitlabhq/gitlabhq/issues/8366\n. https://github.com/gitlabhq/gitlabhq/issues/8370\nhttps://github.com/gitlabhq/gitlabhq/issues/8366\n. @sameersbn still broken\n. @sameersbn still broken\n. yeah I'll check and report back\n. yeah I'll check and report back\n. gitlab_1     | I, [2015-06-25T04:41:37.996512 #294]  INFO -- : Writing /home/git/gitlab/public/assets/white-scheme-preview-a483b8ac27efa3b1969ef0f20b9a5aa1.png\ngitlab_1     | I, [2015-06-25T04:41:58.154373 #294]  INFO -- : Writing /home/git/gitlab/public/assets/application-1ce55d9deac8430f385ec7b4c70a6ba6.js\ngitlab_1     | rake aborted!\ngitlab_1     | Sass::SyntaxError: Invalid CSS after \"...140ed079e1f75b1\": expected \")\", was \".eot?v=4.2.0');\"\ngitlab_1     |   (in /home/git/gitlab/app/assets/stylesheets/application.scss:13)\ngitlab_1     | /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/font-awesome-rails-4.2.0.0/app/assets/stylesheets/font-awesome.css.erb:13\ngitlab_1     | /home/git/gitlab/app/assets/stylesheets/application.scss:37\ngitlab_1     | /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sass-3.2.19/lib/sass/scss/parser.rb:1147:in expected'\ngitlab_1     | /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sass-3.2.19/lib/sass/script/lexer.rb:206:inexpected!'\n. gitlab_1     | I, [2015-06-25T04:41:37.996512 #294]  INFO -- : Writing /home/git/gitlab/public/assets/white-scheme-preview-a483b8ac27efa3b1969ef0f20b9a5aa1.png\ngitlab_1     | I, [2015-06-25T04:41:58.154373 #294]  INFO -- : Writing /home/git/gitlab/public/assets/application-1ce55d9deac8430f385ec7b4c70a6ba6.js\ngitlab_1     | rake aborted!\ngitlab_1     | Sass::SyntaxError: Invalid CSS after \"...140ed079e1f75b1\": expected \")\", was \".eot?v=4.2.0');\"\ngitlab_1     |   (in /home/git/gitlab/app/assets/stylesheets/application.scss:13)\ngitlab_1     | /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/font-awesome-rails-4.2.0.0/app/assets/stylesheets/font-awesome.css.erb:13\ngitlab_1     | /home/git/gitlab/app/assets/stylesheets/application.scss:37\ngitlab_1     | /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sass-3.2.19/lib/sass/scss/parser.rb:1147:in expected'\ngitlab_1     | /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sass-3.2.19/lib/sass/script/lexer.rb:206:inexpected!'\n. @sameersbn I started from a clean container and it's the same error. The error I pasted is after deleting >/dev/null from the scripts. v7.6 works fine and that's what I am using atm.\ncan't you reproduce?\nActually...while using docker-compose even 7.6 breaks this way.\nMy working start script(embedded database)\ndocker run --name='gitlab' -it \\\n-e 'GITLAB_HOST=x' \\\n-e 'GITLAB_EMAIL=gitlab@x' \\\n-e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=1122' \\\n-e 'GITLAB_RELATIVE_URL_ROOT=/gitlab' \\\n-e 'GITLAB_HTTPS=true' -e 'SSL_SELF_SIGNED=true' \\\n-e 'GITLAB_PORT=443' \\\n-p 0.0.0.0:1122:22 -p 0.0.0.0:10080:80 \\\n-v /opt/gitlab/data:/home/git/data \\\n-v /var/run/docker.sock:/run/docker.sock -v $(which docker):/bin/docker sameersbn/gitlab:7.6.0\nBroken docker-compose setup: (migrated database from embedded)\n```\npostgresql:\n  image: sameersbn/postgresql:9.4\n  environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n  volumes:\n    - /root/gitlab4/postgresql:/var/lib/postgresql\ngitlab:\n  image: sameersbn/gitlab:7.6.0\nlinks:\n    - redis:redisio\n    - postgresql:postgresql\n  ports:\n    - \"10080:80\"\n    - \"1122:22\"\n  environment:\n    - DB_TYPE=postgres\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - TZ=Europe/Warsaw\n    - GITLAB_HOST=x\n    - GITLAB_EMAIL=gitlab@x\n    - GITLAB_PORT=10080\n    - GITLAB_SSH_PORT=1122\n    - GITLAB_RELATIVE_URL_ROOT=/gitlab'\n    - GITLAB_HTTPS=true\n    - SSL_SELF_SIGNED=true\n    - GITLAB_PORT=443\n    - SMTP_ENABLED=false\n    - SMTP_DOMAIN=www.example.com\n    - SMTP_HOST=smtp.gmail.com\n    - SMTP_PORT=587\n    - SMTP_USER=mailer@example.com\n    - SMTP_PASS=password\n    - SMTP_STARTTLS=true\n    - SMTP_AUTHENTICATION=login\n    - GITLAB_EMAIL=gitlab@x\n    - GITLAB_EMAIL_REPLY_TO=noreply@x\n    - GITLAB_BACKUPS=disable\n    - GITLAB_BACKUP_TIME=01:00\n  volumes:\n    - /root/gitlab4/gitlab:/home/git/data\nredis:\n  image: sameersbn/redis:latest\n  volumes:\n    - /root/gitlab4/redis:/var/lib/redis\n```\n. @sameersbn I started from a clean container and it's the same error. The error I pasted is after deleting >/dev/null from the scripts. v7.6 works fine and that's what I am using atm.\ncan't you reproduce?\nActually...while using docker-compose even 7.6 breaks this way.\nMy working start script(embedded database)\ndocker run --name='gitlab' -it \\\n-e 'GITLAB_HOST=x' \\\n-e 'GITLAB_EMAIL=gitlab@x' \\\n-e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=1122' \\\n-e 'GITLAB_RELATIVE_URL_ROOT=/gitlab' \\\n-e 'GITLAB_HTTPS=true' -e 'SSL_SELF_SIGNED=true' \\\n-e 'GITLAB_PORT=443' \\\n-p 0.0.0.0:1122:22 -p 0.0.0.0:10080:80 \\\n-v /opt/gitlab/data:/home/git/data \\\n-v /var/run/docker.sock:/run/docker.sock -v $(which docker):/bin/docker sameersbn/gitlab:7.6.0\nBroken docker-compose setup: (migrated database from embedded)\n```\npostgresql:\n  image: sameersbn/postgresql:9.4\n  environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n  volumes:\n    - /root/gitlab4/postgresql:/var/lib/postgresql\ngitlab:\n  image: sameersbn/gitlab:7.6.0\nlinks:\n    - redis:redisio\n    - postgresql:postgresql\n  ports:\n    - \"10080:80\"\n    - \"1122:22\"\n  environment:\n    - DB_TYPE=postgres\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - TZ=Europe/Warsaw\n    - GITLAB_HOST=x\n    - GITLAB_EMAIL=gitlab@x\n    - GITLAB_PORT=10080\n    - GITLAB_SSH_PORT=1122\n    - GITLAB_RELATIVE_URL_ROOT=/gitlab'\n    - GITLAB_HTTPS=true\n    - SSL_SELF_SIGNED=true\n    - GITLAB_PORT=443\n    - SMTP_ENABLED=false\n    - SMTP_DOMAIN=www.example.com\n    - SMTP_HOST=smtp.gmail.com\n    - SMTP_PORT=587\n    - SMTP_USER=mailer@example.com\n    - SMTP_PASS=password\n    - SMTP_STARTTLS=true\n    - SMTP_AUTHENTICATION=login\n    - GITLAB_EMAIL=gitlab@x\n    - GITLAB_EMAIL_REPLY_TO=noreply@x\n    - GITLAB_BACKUPS=disable\n    - GITLAB_BACKUP_TIME=01:00\n  volumes:\n    - /root/gitlab4/gitlab:/home/git/data\nredis:\n  image: sameersbn/redis:latest\n  volumes:\n    - /root/gitlab4/redis:/var/lib/redis\n```\n. The problem was a leftover ' in gitlab relative url...such a stupid mistake. Sorry.\n. The problem was a leftover ' in gitlab relative url...such a stupid mistake. Sorry.\n. If you could help with one more issue that would be great. After copying the old database it was migrated from 9.1 to 9.4 but the gitlab instance works like the database is empty (no accounts).\nEDIT: the problem was database name. all working now.\n. If you could help with one more issue that would be great. After copying the old database it was migrated from 9.1 to 9.4 but the gitlab instance works like the database is empty (no accounts).\nEDIT: the problem was database name. all working now.\n. @sameersbn \n. @sameersbn \n. @sameersbn it's not about adding restrictions. it's about taking restrictions off :) it works fine when restrictions are disabled for nodejs\n. @sameersbn it's not about adding restrictions. it's about taking restrictions off :) it works fine when restrictions are disabled for nodejs\n. @sameersbn yeah, nodejs crashes ;)\n. @sameersbn yeah, nodejs crashes ;)\n. @sameersbn sorry...I'll update to upstream and let you know\n. @sameersbn \n. @sameersbn \n. just the ip @sameersbn so it can work between restarts\n. just the ip @sameersbn so it can work between restarts\n. @sameersbn could you pull this?\n```\nindex ee4950c..ebd9466 100755\n--- a/entrypoint.sh\n+++ b/entrypoint.sh\n@@ -135,6 +135,11 @@ LDAP_BASE=${LDAP_BASE:-}\n LDAP_USER_FILTER=${LDAP_USER_FILTER:-}\n LDAP_LABEL=${LDAP_LABEL:-LDAP}\n+if [[ -n ${LDAP_PORT_389_TCP_ADDR} ]]; then\n+  LDAP_HOST=${LDAP_HOST:-${LDAP_PORT_389_TCP_ADDR}}\n+  LDAP_PORT=${LDAP_PORT:-${LDAP_PORT_389_TCP_PORT}}\n+fi\n+\n GITLAB_HTTPS_HSTS_ENABLED=${GITLAB_HTTPS_HSTS_ENABLED:-true}\n GITLAB_HTTPS_HSTS_MAXAGE=${GITLAB_HTTPS_HSTS_MAXAGE:-31536000}\n```\n. @sameersbn could you pull this?\n```\nindex ee4950c..ebd9466 100755\n--- a/entrypoint.sh\n+++ b/entrypoint.sh\n@@ -135,6 +135,11 @@ LDAP_BASE=${LDAP_BASE:-}\n LDAP_USER_FILTER=${LDAP_USER_FILTER:-}\n LDAP_LABEL=${LDAP_LABEL:-LDAP}\n+if [[ -n ${LDAP_PORT_389_TCP_ADDR} ]]; then\n+  LDAP_HOST=${LDAP_HOST:-${LDAP_PORT_389_TCP_ADDR}}\n+  LDAP_PORT=${LDAP_PORT:-${LDAP_PORT_389_TCP_PORT}}\n+fi\n+\n GITLAB_HTTPS_HSTS_ENABLED=${GITLAB_HTTPS_HSTS_ENABLED:-true}\n GITLAB_HTTPS_HSTS_MAXAGE=${GITLAB_HTTPS_HSTS_MAXAGE:-31536000}\n```\n. @sameersbn hm?\n. @sameersbn hm?\n. Sure. Will do\n. Sure. Will do\n. > If we configure a single server in upstream everything is working fine but if we add one more server we faced the above error.\nwhat do you mean by this ? are you mirroring your gitlab files and database on two hosts?\n. > If we configure a single server in upstream everything is working fine but if we add one more server we faced the above error.\nwhat do you mean by this ? are you mirroring your gitlab files and database on two hosts?\n. oh...but doesn't the asset compiler work that way that even if the runtime url root was different than what was compiled in the image it would take only a few seconds to update with cache?\n. oh...but doesn't the asset compiler work that way that even if the runtime url root was different than what was compiled in the image it would take only a few seconds to update with cache?\n. but now it doesn't contain any asset cache\n. but now it doesn't contain any asset cache\n. :+1: :smile: \n. :+1: :smile: \n. you need to change cloudflare's SSL to \"full\"\n. you need to change cloudflare's SSL to \"full\"\n. woah I was about to send a pr like this ;)\n. woah I was about to send a pr like this ;)\n. btw make it 8.5.1 already\n. btw make it 8.5.1 already\n. @outcoldman yeah using docker networking. I can't find a way to isolate redis within docker network while exposing gitlab.\n. @outcoldman yeah using docker networking. I can't find a way to isolate redis within docker network while exposing gitlab.\n. @frenchbeard the problem is in making gitlab be both on internal and external network :/\n. @frenchbeard the problem is in making gitlab be both on internal and external network :/\n. @frenchbeard could you share your compose config? If it's really that easy we can add it to official config\n. That's close. Would it be enough to put redis in network backend and gitlab in networks backend and frontend?\n. clearly a regression, css is broken even for a clean setup of docker-gitlab on latest version\n. :( yes, on relative url\n. <link rel=\"stylesheet\" media=\"all\" href=\"/gitlab/assets/application-c0f2658d29adbe2eb8bff8f10d06476438d47a6f3d756ab00e20ed87803333e9.css\" />\nroot@bd7c885b7bd1:/home/git/gitlab/public/assets# ls application-*css\napplication-c0f2658d29adbe2eb8bff8f10d06476438d47a6f3d756ab00e20ed87803333e9.css\nweird that it's causing 404 while other assets do work\n. what exactly happened?\n. ",
    "vpusher": ":+1:  experiencing the same issue with \"...gitlab/gitlab/assets...\" buggy links. It seems the GITLAB_RELATIVE_URL_ROOT is repeated.\nProbably related to #218 ?\n. ",
    "cyent": "Yes, And line 638: COUNT=$(mysql -h ${DB_HOST} -u ${DB_USER} ${DB_PASS:+-p$DB_PASS} -ss -e \"${QUERY}\") \nalso need -P\n. Thanks.\n. ",
    "datajerk": "After more research, this is an issue with the way the email header is formed in gitlab vs. doing by hand.  I know that this is a sendmail setup issue, still working to find root cause.  Closing this since it is not related to docker-gitlab.\n. @sameersbn Not critical, was just curious.  Right now I have cron pickup the new backups and push to a swift object store then rotate the object store to keep 7 days, 5 weeks, and every month.\n. @nopnop @sameersbn thanks.  Confused, was following the upgrade docs, IOW, backup old version,  docker run new, restore to new.  Is that still correct?\n. @sameersbn thanks.\n. ",
    "almereyda": "Thanks for asking. It seems to be repository-wise issue that sometimes\nappears, sometimes doesn't. Better close this one here.\nOn 24 March 2015 at 06:29, Sameer Naik notifications@github.com wrote:\n\n@almereyda https://github.com/almereyda Were you able to resolve this\nissue?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/201#issuecomment-85347008\n.\n. Thanks for asking. It seems to be repository-wise issue that sometimes\nappears, sometimes doesn't. Better close this one here.\n\nOn 24 March 2015 at 06:29, Sameer Naik notifications@github.com wrote:\n\n@almereyda https://github.com/almereyda Were you able to resolve this\nissue?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/201#issuecomment-85347008\n.\n. I used the last @paddy-hack sequence of commands also for backup:create and it worked.\n\nThis may be useful for #1744 and #1539 as well.. ",
    "fetzerch": "@sameersbn thanks and good point. I've changed the commit to adapt /var/log/gitlab as well.\nIn addition I have verified that there are no files owned by 1000:1000 afterwards using:\n```\ndocker exec -it gitlab find / -not -user git -a -not -user root -a -not -path \"/proc/*\" -exec stat -c \"%U:%G %n\" {} \\;\n``\n. @sameersbn Yes, good idea. But I assume that we'll have to keep setting the ownership of/home/gitexcluding/home/git/dataon every start because it won't survive a container restart.\nAlso it possibly breaks the case when/home/git/datais not mounted to the host for testing.\nI'll try to work on it the next days and push an update.\n. @sameersbn: I've added your suggestions now. Note that changing the permissions has been sped up a lot by replacingfind . | exec ...withfind . -print0 | xargs -0 .... The commandapp:sanitize` seemed to do the correct adaptions already.\nI will do a bit more testing. Can you review the changes (especially also the documentation in the readme) please?\n. @sameersbn thanks for reviewing. I'll adapt the PR.\n. @sameersbn works fine in the your 7.4.4 release. Thanks again for considering the PR.\n. @sameersbn usermod adapts also the ownership of files in the users home directory.\nDo you know any way to prevent that? We could possibly temporarily remove the x bit of /home/git/data.\n. done\n. done\n. using groupmod is fine but I kept using changing /etc/passwd with sed so that we keep control on how we re-own the files. (removing x didn't seem to work since the commands are executed as root)\nI'm not sure if it's a good idea to suggest using ids 500 and above. In my opinion it's better to create a distinct user/group on the host for the container. If you just use any free id, it can always happen that it gets assigned to a system user (for example when you install new services). That's why in the example, I'm mapping it to user git:git that exists on the host. What do you think?\n. @sameersbn hm that's strange. I've tested that on my machine here.\nNot sure if i get what you mean: chown -R git:git ${GITLAB_HOME} ? So that git owns everything including ${GITLAB_DATA_DIR}?\n. @sameersbn allright, done.\n. ",
    "jshridha": "I'm having a small issue with the USERMAP_GID. If the group already exists inside the docker, the user isn't added to the group and initialization of the docker fails.\n. @sameersbn Are there any thoughts of adding this ability or is it a security risk?\n. Awesome! And thanks a lot for this dockerfile. Setting it up has been a breeze!\n. My guess is it is caused when modifying the nginx configuration. I have an\nenvironment variable for relative root set. Can you try setting that\nvariable and rerunning the docker?  The issue may pop up then.\nOn Fri, Nov 20, 2015, 04:59 xvonabur notifications@github.com wrote:\n\nI'm using primary docker run, not docker-compose. My target machine runs\non Unraid http://lime-technology.com/download/. It's NAS software\nsolution based on Slackware 14.1 and has Docker 1.7.1 in it. So far I\nhaven't any problems with it since version 7 of your docker-gitlab repo.\nTill 8.1.4.\nI'll try to reproduce the issue via VM on pure Slackware distro.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/498#issuecomment-158344531\n.\n. I'm sending them to your email just in case there's something sensitive in\nthem. You should have the email shortly.\n\nOn Fri, Nov 20, 2015 at 9:43 AM, Sameer Naik notifications@github.com\nwrote:\n\nalso checked with the latest tag, still no issues. please run container\nwith -e DEBUG_ENTRYPOINT=1 and send me the logs.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/498#issuecomment-158419189\n.\n. It's working for me too. Thanks for the quick fix!\n. I'm having this same issue upgrading from 8.2.1 to anything above it. I restored last night's backup and I'm still having the issue\n. After posting on the gitlab site, I found my problem. It wasn't at all docker-related. The issue was I had some migrations that were performed an some that weren't. I had to manually go though and apply migrations one by one until I came across one that was already applied. I then added this migration to the schema_migrations table so it would skip it on the next db:migrate run. Interestingly it was the lfs-related migrations that were somehow applied while the others weren't. I'm not sure how this happened but all seems to be up and running again!\n. \n",
    "badsyntax": "@sameersbn Thanks for the prompt response. Yea, it's a disappointment to find this in gitlab source. If I have time I'll try send a PR upstream. There's probably a good reason why they're setting some response headers like that.\nPersonally, after finding this problem, I have taken a different route, and have resolved my problems doing SSL Termination at haproxy rather than SSL Pass-Through to let nginx handle the SSL. Unfortunately I wasn't able to test whether HSTS was the culprit :(\n. ",
    "msteinert": "\nDoes starting sendmail and configuring the gitlab mailer to use sendmail get mails to work?\n\nYes, it works beautifully!\nI'll try to rework my branch based on your suggestions.\nI'm using sendmail as a relay for our Exchange server (which seems to work) so that we don't use up a license for the Gitlab server. More advanced use cases would probably require some configuration. IIRC sendmail can be pretty difficult to configure.\n. Sorry, I forgot about this. The solution suggested by @skython worked perfectly.\n. In principle I tend to agree with you although I'm not really sure what the answer is. Both sendmail (the package) and postfix provide an interface application called sendmail. With both packages you end up running extra server processes.\nI understand if you don't want this change. I can keep my branch rebased or build a new image on top of yours.\n. That's a good idea, I'll have to try it out.\nI agree, including Postfix in the Gitlab image is probably ill-advised.\n. ",
    "fbertux": "I connected changing the LDAP_UID value. If I put LDAP_UID=givenName, I can connect using the first name user, and with LDAP_UID=uid I can connect using the username. \nWithout  \"-v /var/run/docker.sock:/run/docker.sock -v $(which docker):/bin/docker\" gitlab doesn't start, the docker ps -a show \"Exited (1)\"  on  status.\n. Now it's working. Gitlab runs without \"-v /var/run/docker.sock:/run/docker.sock -v $(which docker):/bin/docker\" I was missing something.\nThanks for your help!\n. I'm using LDAP_UID=uid. Sometimes the LDAP login is different than e-mail login, so getting de uid it's fine. With \"LDAP_UID=sAMAccountName\" and \"LDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\" works to get e-mail login.\n. Ok. Problem fixed.\nThanks.\n. ",
    "skython": "I think sendmail just doesn't belong into the GitLab container and using postfix volumes with a socket sounds a bit messy.\nWhy not stick with SMTP to decouple both? \nIts pretty easy actually:\nStart postfix:\ndocker run -d --name gitlab_postfix \\\n -e \"maildomain=YOURDOMAIN.ORG\" \\\n -e \"smtp_user=gitlab:YOURPASSWORD\" \\\n catatnight/postfix\nStart GitLab linked to the postfix container:\n...\n --link gitlab_postfix:postfix \\\n -e \"SMTP_DOMAIN=YOURDOMAIN.ORG\" \\\n -e \"SMTP_USER=gitlab\" \\\n -e \"SMTP_PASS=YOURPASSWORD\" \\\n -e \"SMTP_HOST=postfix\" \\\n -e \"SMTP_PORT=25\" \\\n -e \"SMTP_STARTSSL=false\" \\\n -e \"SMTP_OPENSSL_VERIFY_MODE=none\" \\\n ...\nIts internal, so i dropped SSL in this configuration.\n. ",
    "kain88-de": "@skython did this setup work for you? I have created the docker containers locally like you described but I never get an email from this setup.\nthe production.log from gitlab says that it has send all emails. But when I check the mail.log in the postfix container I see no attempt to send a mail at all. I see that gitlab attempts to send email when I use smtpd_relay_restrictions in /etc/postfix/main.cf. But all those attempts say that the SASL Authentication failed. \nWas there maybe anything missing in your setup?\n. Thanks looks like what I was looking for.\nCould you link to that information in the README ?\n. ",
    "ghost": "That does not seem to make any difference though. \n. Hey guys . How can i do this in heroku platform ?. This is still a problem.  using Gitlab 8.3.2\n. When I log into my gitlab I see that the icons are just blocks and when looking at the webdev tools that the server is trying to load files from server/assests and not from server/gitlab/assests.  It doesn't appear that the workhorse is recompiling the assests for use with the new relative_url_root path.\n. i'm not using the docker - I'm using the omnibus installer.\n. also putting it behind a reverse proxy to expose it to the internet.\n. it looks like it is only missing some of the assests - fonts and icons to be specific aren't being directed to the relative_url_root path and are instead using the original assests path.\n. PostgreSQL\n\n. You need some more information?\n. How would this be set in gitlab.rb for non-docker installs?. +1. i had the same issue , my migrate status showed some were down, i just re-ran the migrate command , and then 500 error was gone :). Oh, yes https://github.com/sameersbn/docker-gitlab/releases/tag/10.5.6 is released :tada: . ",
    "STOIE": "Note, this is an issue with the assets/init script.\n. This is my run command:\ndocker run --name=gitlab -d -e 'GITLAB_HOST=somehost.foo.bar' \\\n-e 'GITLAB_TIMEZONE=Australia/Sydney' -e 'GITLAB_EMAIL=gitlab@somehost.foo.bar' \\\n-e 'GITLAB_HTTPS=true' -e 'SMTP_ENABLED=true' -e 'SMTP_DOMAIN=somehost.foo.bar' \\\n-e 'SMTP_HOST=localhost' -e 'LDAP_ENABLED=true' -e 'LDAP_HOST=somehost.foo.bar' \\\n-e 'LDAP_PORT=389' -e 'LDAP_UID=sAMAccountName' -e 'LDAP_METHOD=plain' \\\n-e 'LDAP_BIND_DN=cn=some-bind,ou=SvcAccounts,dc=internal,dc=foobar' \\\n-e 'LDAP_PASS=somepass' -e 'LDAP_BASE=ou=staff-users,dc=internal,dc=foorbar' \\\n-e 'LDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=false' -e 'LDAP_USER_FILTER=' \\\n-e 'DB_TYPE=postgres' -e 'DB_HOST=XXX.XXX.XXX.XXX' -e 'DB_NAME=gitlabhq_production' \\\n-e 'DB_USER=gitlab' -e 'DB_PASS=foobaryipyar' -e 'REDIS_HOST=XXX.XXX.XXX.XXX' \\\n-e 'REDIS_PORT=6379' -v /opt/gitlab/data:/home/git/data -p XXX.XXX.XXX.XXX:22:22 \\\n-p 127.0.0.1:8080:80 XXX.XXX.XXX.XXX:5000/gitlab:7.5.1\n. So after wow... so sooo much hacking at that script... I have determined it's the timezone setting...\nCan't handle the \"/\" in \"Australia/Sydney\"\nPlease fix!!!!\n. Beautiful, I actually started thinking that during my meeting just then... ooops!\nSydney it is! - Thanks mate - I'll close after confirming it works with just Sydney.\n. Working!\n. Very good to know thanks mate!\nSo, I should be setting both the GITLAB_TIMEZONE and TZ or just the TZ?\n. Again, thanks for your help! sends virtual beer\n. Note. except for this line... sudo -E seemingly breaks here:\n```\ninstall gitlab-shell\nsudo -u ${GITLAB_USER} -H bundle exec rake \n```\n. Hey man,\nI'm glad you asked, easier to explain.\nSo, I already have both the apt-proxy and ENV http_proxy etc. settings set in my base image.\nThe reason I opted to have the exports in the install script is due to a few things.\nI you just run export, it won't complain about null vars (when there is no proxy) and if there is one, it will make the environment usable for sudo -E - now, I will actually do some testing and get back to you in regards to having ENV http_proxy ___ in my base, I actually do have that now, but, haven't tested since adding it I believe (was needed for something else.\nThe sudo -E doesn't seem to work on the bundle exec rake, as per the following issue in the log:\n```\nInstalling unicorn-worker-killer 0.4.2\nInstalling version_sorter 2.0.0 with native extensions\nInstalling wikicloth 0.8.1\nBundle complete! 139 Gemfile dependencies, 211 gems now installed.\nGems in the groups development, test and aws were not installed.\nBundled gems are installed into ./vendor/bundle.\nPost-install message from acts-as-taggable-on:\nWhen upgrading\nRe-run the migrations generator\nrake acts_as_taggable_on_engine:install:migrations\n\nThis will create any new migrations and skip existing ones\nVersion 3.5.0 has a migration for mysql adapter\nPost-install message from haml:\nHEADS UP! Haml 4.0 has many improvements, but also has changes that may break\nyour application:\n\nSupport for Ruby 1.8.6 dropped\nSupport for Rails 2 dropped\nSass filter now always outputs ",
    "stagingcq": "Does anybody have the same setup? GitLab + Drone CI? \nMaybe with an different version combination? \n. ",
    "keigoi": "Thank you for quick reply. I agree that some revision on readme is enough, rather than correcting images.\nI am currently willing to migrate my gitlab into a container.  I am planning to use host's postgres, redis and to mount existing repo. \nThanks.\n. ",
    "xphoon": "For the benefit of others who may stumble on this thread when having this problem: I was able to fix the problem on my 64bit machine by simply adding -v /usr/lib64/libdevmapper.1.02:/usr/lib/libdevmapper.1.02 to the command line. I briefly tried simply using -v /usr/lib64:/usr/lib (in case there were other problematic libraries) but this created other problems. \n. ",
    "jdossantos": "On coreOS, you must add a slightly different option : -v /usr/lib/libdevmapper.so.1.02:/usr/lib/libdevmapper.so.1.02\n. ",
    "sajt": "Thank you for the speedy answer.\nI changed to the SMTP_AUTHENTICATION=login\nMy gMail is: Status: POP is enabled for all mail that has arrived since 18/03/2012\nand the same is happened.\nHow can I see more detailed log?\n. Thank you for the speedy answer.\nI changed to the SMTP_AUTHENTICATION=login\nMy gMail is: Status: POP is enabled for all mail that has arrived since 18/03/2012\nand the same is happened.\nHow can I see more detailed log?\n. No. There is my correct e-mail address, but i changed it in here\n. No. There is my correct e-mail address, but i changed it in here\n. @sameersbn Thus is in the sidekiq.log:\n2014-12-04T08:34:37Z 2754 TID-50jug Sidekiq::Extensions::DelayedMailer JID-da179a3fa987f8a59d0070aa INFO: start\n2014-12-04T08:34:37Z 2754 TID-50jug Sidekiq::Extensions::DelayedMailer JID-da179a3fa987f8a59d0070aa INFO: arguments: [\"---\\n- !ruby/class 'Notif\ny'\\n- :new_user_email\\n- - 17\\n  - Q3qysJHz\\n  - zMtDAGaGwSxSZb8EM_sK\\n\"]\n2014-12-04T08:34:37Z 2754 TID-50jug Sidekiq::Extensions::DelayedMailer JID-da179a3fa987f8a59d0070aa INFO: done: 0.11 sec\nI installed a Jenkins (with normal apt-get install) and from it I can send e-mails with my gmail account.\n. @sameersbn Thus is in the sidekiq.log:\n2014-12-04T08:34:37Z 2754 TID-50jug Sidekiq::Extensions::DelayedMailer JID-da179a3fa987f8a59d0070aa INFO: start\n2014-12-04T08:34:37Z 2754 TID-50jug Sidekiq::Extensions::DelayedMailer JID-da179a3fa987f8a59d0070aa INFO: arguments: [\"---\\n- !ruby/class 'Notif\ny'\\n- :new_user_email\\n- - 17\\n  - Q3qysJHz\\n  - zMtDAGaGwSxSZb8EM_sK\\n\"]\n2014-12-04T08:34:37Z 2754 TID-50jug Sidekiq::Extensions::DelayedMailer JID-da179a3fa987f8a59d0070aa INFO: done: 0.11 sec\nI installed a Jenkins (with normal apt-get install) and from it I can send e-mails with my gmail account.\n. How I see my /home/git/gitlab/config/initializers/smtp_settings.rb is the same /home/git/gitlab/config/initializers/smtp_settings.rb.sample \nAnd there is not any information what I putted to it. Is this normal?\n. How I see my /home/git/gitlab/config/initializers/smtp_settings.rb is the same /home/git/gitlab/config/initializers/smtp_settings.rb.sample \nAnd there is not any information what I putted to it. Is this normal?\n. @sameersbn Yes I found this now. I only used fig restart :( Thank you for help\n. @sameersbn Yes I found this now. I only used fig restart :( Thank you for help\n. This is my first docker trying and my friend offer me the fig....\nAnd now it is working like a charm! :100: \n. This is my first docker trying and my friend offer me the fig....\nAnd now it is working like a charm! :100: \n. ",
    "stephencooke": "I noticed this \"Uploading backup archive to remote storage  ... skipped\"  .  I am currently using a custom script to undertake this.   I fire the rsync at a remote, then pack it as backup, then have the client run an auto restore based on the backup number.   Very keen to see if this option can save me some custom scripts.  when will it available?\n. ",
    "nopnop": "Hi @datajerk\nI had the same issue, but this is not related to docker-gitlab - this is a gitlab 7.5.1 issue: see https://gitlab.com/gitlab-org/gitlab-ce/issues/845\nMaybe you should try to update to 7.5.3 instead of 7.5.1\n. ",
    "lucas-clemente": "Thanks for your reply! I couldn't find anything on openssl / nginx and the quoted error message, do you maybe still remember where you read something about it?\nSomehow I don't understand how it can be a problem with libssl though. As I wrote above, the TLS connection is terminated from nginx running directly on the docker host, proxying to the gitlab docker container. However, the Permission denied error appears on the nginx proxy running inside the container. But then again, I might just be misinterpreting things ;)\nHappy new year!\n. ",
    "ulrichSchreiner": "hi,\ni have the same problem with big repositories. i increased the unicorn timeout as well as the workers, but now the unicorn workerkiller stops everything. now i patch \nhttps://gitlab.com/gitlab-org/gitlab-ce/blob/master/config.ru\nto increase the memory settings. it would be great for your dockerfile to have some settings for this too.\n. hi,\ni have the same problem with big repositories. i increased the unicorn timeout as well as the workers, but now the unicorn workerkiller stops everything. now i patch \nhttps://gitlab.com/gitlab-org/gitlab-ce/blob/master/config.ru\nto increase the memory settings. it would be great for your dockerfile to have some settings for this too.\n. on serverside, yes. in nginx-log i see a successfull HTTP 200 with a 1GB of data transferred. no more errors inside of gitlab.\nbut now i have an issue on the client\nhttp://ubuntu.aspcode.net/view/635400140124705175296526/error-gnutlshandshake-falied\ncurrently i compile a git-client with openssl and try again :-)\n. on serverside, yes. in nginx-log i see a successfull HTTP 200 with a 1GB of data transferred. no more errors inside of gitlab.\nbut now i have an issue on the client\nhttp://ubuntu.aspcode.net/view/635400140124705175296526/error-gnutlshandshake-falied\ncurrently i compile a git-client with openssl and try again :-)\n. solved!\nmultiple problems, but\n- first patched memory setting for the unicorn worker\n- then used a modern git (ubuntu 14.04 did not work for me)\n- and next: we had the docker image behind another loadbalancer (a farm of nginx's). they do proxy-buffering with a max-tempfilesize (http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size) of 1G. and this frontend-ELB cutted of my clone. so i added add_header X-Accel-Buffering no; to the nginx inside your docker container\nand now it works! i don't know if it would be a good idea to put this setting inside your dockerfile, but an option would not be too bad :-)\n. solved!\nmultiple problems, but\n- first patched memory setting for the unicorn worker\n- then used a modern git (ubuntu 14.04 did not work for me)\n- and next: we had the docker image behind another loadbalancer (a farm of nginx's). they do proxy-buffering with a max-tempfilesize (http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size) of 1G. and this frontend-ELB cutted of my clone. so i added add_header X-Accel-Buffering no; to the nginx inside your docker container\nand now it works! i don't know if it would be a good idea to put this setting inside your dockerfile, but an option would not be too bad :-)\n. hi,\none additional note: i did a git clone https://... from a WAN client to a loadbalancer with a nginx which then connected to your dockercontainer which also contains a nginx. my repo was about ~1.2GB of data and gitlab pushed out the bytes really fast to your nginx. an your nginx pushed out the bytes to our sencond nginx (our LB). but here we could not deliver the bytes as fast as we wanted (the client was connected via a slow line) and so this LB buffered, because the default is on (http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering). and the default for the temp-file-size is 1GB. so this all lead to my problem: after 1GB of data the stream of data ended and my client received an error.\nbut i think if a (slow) client connects directly to your nginx you would have the same problem, because you also use proxy_buffering and the default size for temp-file-size is also 1GB. \n-> if you have a loadbalancer in front, it would be a good option to include the add_header X-Accel-Buffering no; (optional). But if you do not have a LB in front, you should have the options to disable proxy-buffering and/or set the size for the proxy_max_temp_file_size.\n. hi,\none additional note: i did a git clone https://... from a WAN client to a loadbalancer with a nginx which then connected to your dockercontainer which also contains a nginx. my repo was about ~1.2GB of data and gitlab pushed out the bytes really fast to your nginx. an your nginx pushed out the bytes to our sencond nginx (our LB). but here we could not deliver the bytes as fast as we wanted (the client was connected via a slow line) and so this LB buffered, because the default is on (http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering). and the default for the temp-file-size is 1GB. so this all lead to my problem: after 1GB of data the stream of data ended and my client received an error.\nbut i think if a (slow) client connects directly to your nginx you would have the same problem, because you also use proxy_buffering and the default size for temp-file-size is also 1GB. \n-> if you have a loadbalancer in front, it would be a good option to include the add_header X-Accel-Buffering no; (optional). But if you do not have a LB in front, you should have the options to disable proxy-buffering and/or set the size for the proxy_max_temp_file_size.\n. hi,\nIf you disable both settings as default most users won't need the max_temp_file_size. so both settings should be enough, you're right. \n. Running my local tests with the current base image this command seems to work as expected. No issues found until now ...\nI will close this issue. Perhaps you can document this new behaviour somewhere; i don't know if others will have the same problem when patching/changing resources of gitlab in their dockerfiles.\n. Running my local tests with the current base image this command seems to work as expected. No issues found until now ...\nI will close this issue. Perhaps you can document this new behaviour somewhere; i don't know if others will have the same problem when patching/changing resources of gitlab in their dockerfiles.\n. @solidnerd ok, understand. i'll close this issue\n. @solidnerd ok, understand. i'll close this issue\n. hi,\ni think you are right that install.sh is only executed when building. but your code is run on startup and i do not get, why the whole tree of sourcecode has to be chown'ed to the new UID/GID?\nthe UID/GID of the git user is changed in map_uidgid a few lines in front of the find statement. but my understanding of the whole find is that\n~~~\nfind ${GITLAB_HOME} -path ${GITLAB_DATA_DIR}/* -prune ..\n~~~\nmatches everything inside of GITLAB_HOME except the data directory. so really everything is chown'ed. every ruby-file, go-sources, vendored go-sources, ... every file under \"/home/git (except the data files),\nfor most of the files i don't think this is necessary, because most files are sources and/or executables. the do not need to be owned by the git user.\nyou can test it very easy: if you have a docker with overlay2-FS use the given docker-compose.yml and add a - USERMAP_UID=99 (99 is nobody on my system). now try a docker-compose up and wait ....  you now see Mapping UID and GID for git:git to 99:99 in the output.\nin a second shell you can do a ps auxf | grep chown and see  chown's with thousands of parameters like chown -h git: /home/git/gitlab/tmp/cache/assets/sprockets/v3.0/... \nin my case i simply quit after waiting more than 10 minutes ...\nso i cannot run this image with overlay2.\n. hi,\ni think you are right that install.sh is only executed when building. but your code is run on startup and i do not get, why the whole tree of sourcecode has to be chown'ed to the new UID/GID?\nthe UID/GID of the git user is changed in map_uidgid a few lines in front of the find statement. but my understanding of the whole find is that\n~~~\nfind ${GITLAB_HOME} -path ${GITLAB_DATA_DIR}/* -prune ..\n~~~\nmatches everything inside of GITLAB_HOME except the data directory. so really everything is chown'ed. every ruby-file, go-sources, vendored go-sources, ... every file under \"/home/git (except the data files),\nfor most of the files i don't think this is necessary, because most files are sources and/or executables. the do not need to be owned by the git user.\nyou can test it very easy: if you have a docker with overlay2-FS use the given docker-compose.yml and add a - USERMAP_UID=99 (99 is nobody on my system). now try a docker-compose up and wait ....  you now see Mapping UID and GID for git:git to 99:99 in the output.\nin a second shell you can do a ps auxf | grep chown and see  chown's with thousands of parameters like chown -h git: /home/git/gitlab/tmp/cache/assets/sprockets/v3.0/... \nin my case i simply quit after waiting more than 10 minutes ...\nso i cannot run this image with overlay2.\n. same here, 10.8.3-1. looks like #1625 . same here, 10.8.3-1. looks like #1625 . ",
    "smoebody": "hi all,\ni experience this problem when using gitlab-ci as it's pulling the repo via https. can anyone please be more detailed what i have to adjust so that it works?\nmaybe i should say that the concerning repo is not that big (~15 MB) and that it sometimes works (third or forth retry)\n. @sameersbn, sorry for the delay.\ni tried the your first suggestion by changing from unix-socket to tcp-socket and it seems that did the trick, although i would have preferred the  second fix to solve the problem as its more plausible to me ;)\nBut for now i did 5 build retries without the error occuring again.\nthanks again for your help!\n. @sameersbn no i did not. as i said, the first fix solved the problem, there was no need to try the second.\n. @sameersbn ok, with the issue i get the following error:\n2015/04/08 16:07:43 [alert] 2773#0: *15 readv() failed (13: Permission denied) while reading upstream, client: 172.17.0.116, server: gitlab.xxx.xxx, request: \"GET /xxx/xxx.git/info/refs?service=git-upload-pack HTTP/1.1\", upstream: \"http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/xxx/xxxgit/info/refs?service=git-upload-pack\", host: \"gitlab.xxx.xxx\"\nas you can see, nginx prefixes the socket with an http:// sometimes... thats when its not working.\nboth fixes mentioned above resolve the issue. for the second fix inserting the proxy_buffering off was enough.\n. Thanks for the clarification. I will give it a try soon.\nClosing.\n. The gitlab-runner is a docker-container in the same network as gitlab. So the upload is done via http-post by the gitlab-runner-helper. If you want to test, i suggest the following.\n\ncreate a new branch of an existing project which already has a ci-runner configured.\nput the following job in the .gitlab-ci.yml:\n```yaml\nstages:\nbuild\n\nbuild_artifact:\n  stage: build\n  image: alpine:3.8\n  script: |\n    dd if=/dev/urandom of=artifact.bin bs=1M count=256\n  artifacts:\n    paths:\n    - \"artifact.bin\"\n    expire_in: \"1min\"\n  tags:\n  - docker\n```\nAssuming you have a ci-runner as docker-executor taking jobs tagged with docker this job creates a random file of 256MB size and uploads it as job-artifact.\nThis fails in my gitlab-setup.. Nevermind. It was a Gitlab-setting in \nAdmin Area -> Settings -> Continuous Integration and Deployment ->  Maximum artifacts size (MB). ",
    "ahmet2mir": "Done. https://github.com/sameersbn/docker-gitlab/pull/228\n. ",
    "kumm": "Thanks for your reply!\nI'm sure too this is not selinux. On ubuntu apparmor is the app-security beast. But according to audit logs there are no violations.\nSadly time does not help, i still getting the same errors. Every time i open \"/help/workflow/gitlab_flow.md\" every image cause an error in the log. But everything works - except i can't see these images. Weird... \nStill trying to figure out what is happening here. Previously I've started fig as a normal user with docker group membership. Now trying with root, but still the same.\n. Tried your fig file on an other machine, and i still getting the errors. \nHere are:\n2015/01/03 10:37:30 [alert] 408#0: *1 readv() failed (13: Permission denied) while reading upstream, client: 172.17.42.1, server: gitlab.wcs.local, request: \"GET /help/workflow/gitlab_flow.png HTTP/1.1\", upstream: \"http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/help/workflow/gitlab_flow.png\", host: \"gitlab.wcs.local\", referrer: \"http://gitlab.wcs.local/help/workflow/gitlab_flow.md\"\n2015/01/03 10:37:30 [alert] 408#0: *21 readv() failed (13: Permission denied) while reading upstream, client: 172.17.42.1, server: gitlab.wcs.local, request: \"GET /help/workflow/gitdashflow.png HTTP/1.1\", upstream: \"http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/help/workflow/gitdashflow.png\", host: \"gitlab.wcs.local\", referrer: \"http://gitlab.wcs.local/help/workflow/gitlab_flow.md\"\n2015/01/03 10:37:30 [alert] 408#0: *22 readv() failed (13: Permission denied) while reading upstream, client: 172.17.42.1, server: gitlab.wcs.local, request: \"GET /help/workflow/github_flow.png HTTP/1.1\", upstream: \"http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/help/workflow/github_flow.png\", host: \"gitlab.wcs.local\", referrer: \"http://gitlab.wcs.local/help/workflow/gitlab_flow.md\"\n2015/01/03 10:37:30 [alert] 408#0: *19 readv() failed (13: Permission denied) while reading upstream, client: 172.17.42.1, server: gitlab.wcs.local, request: \"GET /help/workflow/messy_flow.png HTTP/1.1\", upstream: \"http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/help/workflow/messy_flow.png\", host: \"gitlab.wcs.local\", referrer: \"http://gitlab.wcs.local/help/workflow/gitlab_flow.md\"\n2015/01/03 10:37:30 [alert] 408#0: *24 readv() failed (13: Permission denied) while reading upstream, client: 172.17.42.1, server: gitlab.wcs.local, request: \"GET /help/workflow/production_branch.png HTTP/1.1\", upstream: \"http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/help/workflow/production_branch.png\", host: \"gitlab.wcs.local\", referrer: \"http://gitlab.wcs.local/help/workflow/gitlab_flow.md\"\n2015/01/03 10:37:30 [alert] 408#0: *27 readv() failed (13: Permission denied) while reading upstream, client: 172.17.42.1, server: gitlab.wcs.local, request: \"GET /help/workflow/environment_branches.png HTTP/1.1\", upstream: \"http://unix:/home/git/gitlab/tmp/sockets/gitlab.socket:/help/workflow/environment_branches.png\", host: \"gitlab.wcs.local\", referrer: \"http://gitlab.wcs.local/help/workflow/gitlab_flow.md\"\nOn page reload '/help/workflow/gitlab_flow.md' i always get errors. But gitlab is still working.\nOn this machine I use ubuntu 14.10, docker is same (1.4.1).\nI hope it not related, but the kernel is identical (3.16.0-28-generic amd64) on both machine. \n( i've installed 'linux-lts-utopic' on 14.04 ) \n. downgraded to previous kernel on 14.04. now 3.13.0-43\nBut still the same.\n. It's added already. As you can see in the error log referrer is 'http://gitlab.wcs.local.....', so i access gitlab by hostname. This is my line from hosts file:\n172.17.0.32 gitlab.wcs.local\nIn this case the docker host and the client is same. (the \"other\" machine with your fig file)\n. I've found some info in production log.\n```\nStarted GET \"/help/workflow/git_pull.png\" for 127.0.0.1 at 2015-01-03 15:15:43 +0000\nCompleted 500 Internal Server Error in 5ms\nProcessing by HelpController#show as PNG\n  Parameters: {\"category\"=>\"workflow\", \"file\"=>\"git_pull\"}\nActionView::MissingTemplate (Missing template errors/not_found with {:locale=>[:en], :formats=>[:png], :variants=>[], :handlers=>[:e\nrb, :builder, :raw, :ruby, :slim, :coffee, :haml]}. Searched in:\n  * \"/home/git/gitlab/app/views\"\n  * \"/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/semantic-ui-sass-0.16.1.0/app/views\"\n  * \"/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/kaminari-0.15.1/app/views\"\n  * \"/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/devise-3.2.4/app/views\"\n  * \"/home/git/gitlab\"\n  * \"/\"\n):\n  app/controllers/application_controller.rb:129:in not_found!'\n  app/controllers/help_controller.rb:12:inshow'\n```\nThere are a lot of these, but all same except the png filename.\nDoes it mean something useful?\n. I think i've found a gitlab bug.\njust see: http://demo.gitlab.com/help/development/architecture.md\nhttp://demo.gitlab.com/help/development/gitlab_diagram_overview.png gives status code 500\nIt seems all images under help is broken.\n. https://gitlab.com/gitlab-org/gitlab-ce/issues/765\nIt's closed 18 days ago. Maybe just not released yet.\nClosing this issue, thanks for your time.\n. ",
    "jonaskac": "Sweet! Would be awesome :)...\n. :+1: \n. ",
    "xeno14": "@sameersbn \nThank you for your comment. I will do it by myself and keep it local when I really want to do this. Let me close this issue.\n. @sameersbn \nAccording to docker inspect gitlab, the directory seems to be mounted. In my case /home/git/data/repositories was not empty but it looked different from /opt/gitlab/data/repositories.\nFinally, it works by following steps:\n1. stop containers\n2. remove existing containers docker ps -a | grep gitlab | cut -d\" \" -f1 | xargs -I{} docker rm {} \n3. restore backup\n4. start containers fig up\nThank you very much.\n. ",
    "flungo": "As an update, this is now a CE feature under Admin > Appearance\n. ",
    "StreakyCobra": "Oh, my bad. I was thinking that GITLAB_PORT was setting the listening port, but it is the -p 10080:80 only that set it\u2026 All this make sense actually :neutral_face:\nSadly I can neither create subdomains, so continuing with relative url.\nThanks very much for your explanations! Closing the issue then.\n. ",
    "jwijffels": "@sameersbn I'm setting up the gitlab container with -p 10080:80 -e 'GITLAB_PORT=443' but I'm getting stuck on setting up the subdomain. Would it be possible to share an Apache conf file where you show this subdomain and how the proxy refers to the docker container which is started up?. ",
    "pezholio": "Ah, wait. I'm an idiot. I'm using boot2docker, so I needed to run boot2docker ip to get the IP and then navigate to http://{IP}:10080. Works like a charm now :+1: \n. ",
    "so0k": "add -e GITLAB_HOST so gitlab no longer refers to itself as \"localhost\" - image upload works for me after adding this.\n. You're welcome :)\n. I will try to change NGINX_MAX_UPLOAD_SIZE and see if that changes anything (the default is 20MB)\nthis post seems to refer to the same:\nhttp://permalink.gmane.org/gmane.comp.version-control.gitlab/1953\n. yes, you need to docker rm the container and re-create it, the first boot it will take some time, but after that you can docker stop / docker start that container - and it starts faster from then on.\n@sameersbn  - there is no other way to change a container definition apart from the first docker run?\n. adding the envvar fixed my error - my launch script is now (daily backups work great, btw - thanks!):\ndocker run -h git.myserver --name gitlab -it -d \\\n  -e 'DB_NAME=gitlabhq_production' -e 'DB_USER=gitlab' -e 'DB_PASS=<mypass>' \\\n  -e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=10022' \\\n  -e 'GITLAB_HOST=git.myserver' -e 'GITLAB_BACKUPS=daily' \\\n  -e 'GITLAB_BACKUP_EXPIRY=604800' -e 'GITLAB_BACKUP_TIME=00:00' \\\n  -e 'NGINX_MAX_UPLOAD_SIZE=200M' \\\n  -p 10022:22 -p 10080:80 \\\n  --link postgres:postgresql \\\n  --link redis:redisio \\\n  -v /var/gitlab/data:/home/git/data \\\n  -v /var/gitlab/log:/var/log/gitlab \\\n  sameersbn/gitlab:7.6.2\nI had to remove the --volumes-from and add -v one by one .. volumes didn't seem to work otherwise :sob:   (even though I had the data volumes defined in my data volume container they were not being picked up.. I have no idea why!? - anyone?)\nafter this, docker run runs as fast as docker start - so above comment is no longer valid. \nfor anyone curious, my systemd unit files are below - these assume containers were created in advance and I'm not sure if this is the best strategy - else it is required to first remove containers to avoid name collisions.\n```\n/etc/systemd/system/redis.service\n[Unit]\nDescription=Redis Container\nAfter=docker.service\nRequires=docker.service\n[Service]\nTimeoutStartSec=0\nExecStartPre=-/usr/bin/docker stop redis\nExecStart=/usr/bin/docker start -a redis\n[Install]\nWantedBy=multi-user.target\n```\n```\n/etc/systemd/system/postgres.service\n[Unit]\nDescription=Postgres Container\nAfter=docker.service\nRequires=docker.service\n[Service]\nTimeoutStartSec=0\nExecStartPre=-/usr/bin/docker stop postgres\nExecStart=/usr/bin/docker start -a postgres\n[Install]\nWantedBy=multi-user.target\n```\n```\n/etc/systemd/system/gitlab.service\n[Unit]\nDescription=Gitlab Container\nAfter=docker.service postgres.service redis.service\nRequires=docker.service\n[Service]\nTimeoutStartSec=0\nExecStartPre=-/usr/bin/docker stop gitlab\nExecStart=/bin/bash -c 'sleep 2;/usr/bin/docker start -a gitlab'\n[Install]\nWantedBy=multi-user.target\n``\n. @sameersbn  - thanks for the--env-file` hint! :dancers:\n. ",
    "huwenchao": "@sameersbn Got it, thanks very much!\n. ",
    "faradaytrs": "yes @sameersbn it worked when i came into bash and used rake inside of working container.\n. ",
    "siuying": "Hi,\nI had similar issue, got sed: -e expression #1, char 24: unknown option tos'` if I included the SMTP_PASS lines below:\ngitlab:\n  image: sameersbn/gitlab:7.7.2\n  environment:\n    - RAILS_ENV=production\n    - SMTP_PASS=abc/1234\nAny idea how I can escape the line so that sed will not fail?\n. Would you accept PR to fix this, perhaps use proper template like mustache?\n. @KingCrunch the script (/assets/init) use sed to replace configuration variables. Expression like this:\nsed 's/{{SMTP_PASS}}/'\"${SMTP_PASS}\"'/'\nfails when SMTP_PASS contains \"/\", which is the delimiter for sed. Use other characters as delimiter do not solve the issue.\nIn last comment I was looking for alternative template, but that's a big change and need to migrate a lot of logic. A better way to do it might be write a function/script to escape the input before feeding it to sed.\n. I've encounter same issue after restore. \nOne point to check is make sure /home/git/data has proper permission. After I run chown -R git:git /home/git on gitlab container after restore backup, I were able to solve the \"No repository\" issue.\n. Thanks for the tips! \n. I actually encountered same problem after like 6 months and completely forget it. I panic, restored and create new container and spend hours to figure out what happened. This is a reminder to my future self: app:santize.\n. @sameersbn thanks! I could not think anything that might have changed the permissions, but I'd try to see if I can reproduce this.\n. the logs were not created for some reason... I scratch everything and fix that problem. for the problem opening \"Logs\" and \"Background Jobs\", its caused by \"Errno::ENOMEM: Cannot allocate memory - ps\" error. After I reduced the number of unicorn workers, it work as expected now.\n. ",
    "KingCrunch": "@siuying I'd really like it. I have the same issue, but I cannot figure out, what's the cause. At the end I've commented the entire environment section out...\nI want to create a backup (gitlab:backup:create). ~~Other commands I tried works flawless.~~ app:rake itself doesn't work neither, but gitlab itself works.\n. @siuying That I've already read, but my SMTP-password only consists of characters and numbers, so that cannot be the issue. There are many many other sed-calls and the error message doesn't tell, which one is the faulty one, so I commented out one after the other, but no change. Probably at the end I'll say \"Oh, yeah, of course, me idiot\", but not now :|\nThe link looks promising :)\n. ",
    "Jack12816": "Looks good. :) Keep up the good work!\n. I can confirm this.\nbash\nroot@a66e71f140ad:/var/log/gitlab/gitlab# sudo -u git bash -c \"cd /home/git/gitlab && PATH=/usr/local/bin:/usr/bin:/bin bundle exec rake gitlab:backup:create RAILS_ENV=production\"\nDumping database ... \nDumping PostgreSQL database gitlabhq_production ... pg_dump: server version: 9.4.0; pg_dump version: 9.3.5\npg_dump: aborting because of server version mismatch\n[FAILED]\nBackup failed\n. I can confirm this.\nbash\nroot@a66e71f140ad:/var/log/gitlab/gitlab# sudo -u git bash -c \"cd /home/git/gitlab && PATH=/usr/local/bin:/usr/bin:/bin bundle exec rake gitlab:backup:create RAILS_ENV=production\"\nDumping database ... \nDumping PostgreSQL database gitlabhq_production ... pg_dump: server version: 9.4.0; pg_dump version: 9.3.5\npg_dump: aborting because of server version mismatch\n[FAILED]\nBackup failed\n. Thank you, I will test it on the next tagged version and give you feedback afterwards.\n. Thank you, I will test it on the next tagged version and give you feedback afterwards.\n. Oh, ok. I think its not a problem. :) Thanks for the great work!\n. Great! - I realized it yesterday and searched for the reason. Thanks. :)\n. https://about.gitlab.com/2015/01/03/the-hardware-that-powers-100k-git-repos/\nhttps://about.gitlab.com/features/:\n\nScalable: support 25,000 users on one server or a highly available active/active cluster\n\nIt seems Gitlab is not designed to be horizontally scalable at the moment. They run only one active and one backup server for gitlab.com. The parallel access to the physical git repos could be a problem.\n. ",
    "flecno": "@sameersbn thanks for this tips. I ran app:sanitize which outputs to me with:\nChecking repository directories permissions...\nChecking satellites directories permissions...\nChecking uploads directory permissions...\nChecking tmp directory permissions...\nBut it doesn't helps... It looks like a permission problem, because I can't push anythink in existing repos (! [remote rejected] master -> master (unpacker error)). Do you have any other ideas?\n. thanks for your help, but I have not realize that there is no space left on disk >.<\n. I have to set proxy_set_header X-Forwarded-Ssl on; in my nginx proxy described in your readme.\n. ",
    "apeltzer": "Well, I just upgraded from Gitlab 7.10 to 7.11.1-4 and experience the same behaviour unfortunately. All my repositories seem to be gone. I checked my command to fire up the container, which seems fine for me and worked previously without a flaw:\ndocker run --name=gitlab -d --restart=always -h my.host -v /scratch/gitlab:/home/git/data -p 82:80  -e 'GITLAB_HOST=my.host'  --env=\"USERMAP_UID=$(id -u git)\" --env=\"USERMAP_GID=$(id -g git)\" -e 'GITLAB_RELATIVE_URL_ROOT=/gitlab' -e 'SMTP_USER=itest@gmail.com' -e 'SMTP_PASS=password' --link postgresql:postgresql --link redis:redisio sameersbn/gitlab:latest\nThe folder /scratch/gitlab looks like this:\nbackups\ngitlab-satellites\nrepositories\nssh\ntmp\nuploads\nand the content of the repositories is actually fine. However, they're shown as \"empty\" in my Gitlab Instance. Any clue what might have gone wrong? Removed the container, reinstalled it and restarted - never worked :-1: \n. Hi Sameer,\nI don't know what just happened - rebootet the host machine and everything went back to normal behaviour?! All repositories are back online, no issues at all - didn't do anything other than rebooting the host. Weird to be honest, but at least my 20 repos are back online ;-) \n. Why don't you use the docker based --restart=always method? \n. ",
    "charles-plessy": "Hi, I am having the same problem after trying to upgrade from 7.5.1 to 7.12.0. I can not find the repositories anywhere, but disk space does not seem to be freed, so I am probably not looking at the correct place.  The directories /opt/gitlab/data/ and /srv/docker/gitlab/gitlab/ on the host running docker are empty.  In the container, /home/git/repositories/ is empty and /home/git/data/repositories/ only contains wikis...\n. Hi, on my system (Debian Jessie, with docker-compose 1.2.0-1 installed from Stretch), the quotes in SMTP_STARTTLS=\"true\" prevented config/initializers/smtp_settings.rb to be properly initialised with the contents of SMTP_HOST and the like.  Removing the quotes solved the problem.\n. ",
    "pozgo": "I had the same error. Check ovnership of all files in /home/git inside the docker image. Change it if needed \nsudo chown -R git:git /home/git/ \nThat fixed my problem \n. ",
    "NemSavic": "@pozgo thank you this really helped.\n. ",
    "marceldegraaf": "@sameersbn I have this exact same issue after moving Gitlab to a new server (and moving the /srv/docker/gitlab folder with it). I'm running the exact same version of Gitlab as on the old server (8.6.2) and everything except showing repositories works.\nI ran app:sanitize with a UID/GID that exist on the host system (2000/2000). Inside the gitlab container, /home/git/data/repositories shows all the repository folders that I would expect, so the host folder is properly mounted. The UIDs/GIDs on the repository folders are 2000/2000, as expected.\nHowever, Gitlab still refuses to show me the contents of these repositories, instead showing the \"No repository\" alert.\nAlso, when attempting a git push to the repo, this warning is shown:\nGitLab: A repository for this project does not exist yet.\nfatal: Could not read from remote repository.\nIs there anything else I can do to debug/fix this?\n. Ah, found it! Apparently Gitlab caches the result of the \"repository exists?\" check. So even with my repositories existing and having the correct permissions, Gitlab thought they were missing because the check was never re-run.\nA docker exec -ti gitlab bash followed by bundle exec rake cache:clear RAILS_ENV=production fixed the issue for me.\n. ",
    "ragaar": "Nice find!\nOn Apr 18, 2016 5:31 AM, \"Marcel de Graaf\" notifications@github.com wrote:\n\nAh, found it! Apparently Gitlab caches the result\nhttps://github.com/gitlabhq/gitlabhq/blob/v8.6.2/app/models/repository.rb#L44-L54\nof the \"repository exists?\" check. So even with my repositories existing\nand having the correct permissions, Gitlab thought they were missing\nbecause the check was never re-run.\nA docker exec -ti gitlab bash followed by bundle exec rake cache:clear\nRAILS_ENV=production fixed the issue for me.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/244#issuecomment-211294690\n. @solidnerd, I have found it is also mandatory to create a storage volume to /home/git/data.\n\nI've been on 8.17.4 for awhile, and only recently came back to this. I was able to upgrade to 9.0.0 but it required /home/git/data to be persistent.. Someone's idea of a practical joke ._.\nTrying to find a copy of what I had written, to repost and reopen.. Thanks! Phew! Yeah, I was considering doing a PR once I determined if this was accurate.\nNeed to DL docker-compose, and it's restricted on the machine I'm currently working from.. Note for myself (or anyone interested),\nThis also ties into: [assets/runtime/functions#L1643] and docs/s3_compatible_storage#restoring-backups\n[assets/runtime/functions#L1643]: https://github.com/sameersbn/docker-gitlab/blob/18a767a321d548ba04295982d02211681b6b8e52/assets/runtime/functions#L1643. Trying to go back and clean up issues that are open or pending. I've had to relocate and access to the work that I had been performing is currently inaccessible.\nGiven my appreciation of this library, I'll try and catch up on what I had been doing and see if I can clean up the documentation over the remainder of this week.. ",
    "AlexanderHofmeister": "@pozgo  THANK YOU! I just uninstalled and installed the whole setup three times...\n. @pozgo  THANK YOU! I just uninstalled and installed the whole setup three times...\n. ",
    "dexterns88": "Thanks.\nSolution for me:  gitlab-rake cache:clear RAILS_ENV=production\n. ",
    "jasionwa": "Thanks to marceldegraaf. That fixed my problem:\nbundle exec rake cache:clear RAILS_ENV=production. Thanks to marceldegraaf. That fixed my problem:\nbundle exec rake cache:clear RAILS_ENV=production. ",
    "vabue": "Migrated to sameersbn docker from source installation for Gitlab 8.15\nbundle exec rake app:sanitize RAILS_ENV=production\nDon't know how to build task 'app:sanitize' (see --tasks)\nBut \nbundle exec rake cache:clear RAILS_ENV=production \nhelped. Thanks!. ",
    "Kamaradeivanov": "The following command save my day too\nbundle exec rake cache:clear RAILS_ENV=production. The following command save my day too\nbundle exec rake cache:clear RAILS_ENV=production. ",
    "hausenism": "cd /home/git/gitlab/bin\n./rake cache:clear RAILS_ENV=production. ",
    "tirrorex": "what do you mean by setup details? \nI cannot provide a sample docker command line this is a git issue, i tried to push 380 files who are in multiples subdirectory, except for screenshots or maybe a video i have no idea how i can help you reproduce this bug.\nI used git remote add gitlab http://domain.name/root/42_First_Year.git to set a new remote for git and when i push i got this : \ngit push -u gitlab master\nCounting objects: 562, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (358/358), done.\nWriting objects: 100% (562/562), 2.08 MiB | 0 bytes/s, done.\nTotal 562 (delta 377), reused 206 (delta 178)\nerror: RPC failed; result=22, HTTP code = 413\nfatal: The remote end hung up unexpectedly\nfatal: The remote end hung up unexpectedly\nEverything up-to-date\nto run the image i use this : \ndocker run --name=gitlab -d --link mysql:mysql --link redis:redisio \\\n    -e \"DB_USER=gitlab\" \\\n    -e \"DB_PASS=pass\" \\\n    -e \"DB_NAME=gitlabhq_production\" \\\n    -e 'GITLAB_HOST=domain.name' \\\n    -e 'UNICORN_TIMEOUT=180' \\\n    -e 'GITLAB_SSH_HOST=domain.name' \\\n    -e 'GITLAB_EMAIL=user@gmail.com' \\\n    -e 'GITLAB_WEBHOOK_TIMEOUT=100' \\\n    -e 'SMTP_AUTHENTICATION=plain' \\\n    -e 'GITLAB_PROJECTS_SNIPPETS=true' \\\n    -e 'GITLAB_EMAIL_ENABLED=true' \\\n    -e VIRTUAL_HOST=domaine.name \\\n    -e 'GITLAB_SIGNUP=true' \\\n    -e 'NGINX_MAX_UPLOAD_SIZE=1G' \\\n    -e 'SMTP_HOST=smtp.gmail.com' \\\n    -e 'SMTP_PORT=567' \\\n    -e 'SMTP_USER=user@gmail.com' \\\n    -e 'SMTP_PASS=pass' \\\n    -e 'SMTP_DOMAIN=gmail_account_domain' \\\n    -e 'GITLAB_MAX_SIZE=500M' \\\n    -e 'SMTP_ENABLED=true' \\\n    -v /home/zipeldiablo/git/data:/home/git/data \\\n    sameersbn/gitlab:latest\nthe VIRTUAL_HOST variable is for the nginx reverse proxy container\n. Tried lauching the container by assigning port in order to bypass the reverse proxy and it works, so it's an issue related to the reverse proxy not your container, thanks for your time and sorry for bothering you\n. ",
    "lnalex": "@netflash  \n```\nnetstat -tapn|grep 10022\ntcp6       0      0 :::10022                :::*                    LISTEN    \n2047/docker-proxy\n```\n@sameersbn Debian 7.6 64bits\n. ```\nssh -v localhost -p 10022\nOpenSSH_xxxx Debian-4+deb7u2, OpenSSL xxxxx Feb 2013\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 19: Applying options for *\ndebug1: Connecting to localhost [::1] port 10022.\ndebug1: Connection established.\ndebug1: permanently_set_uid: 0/0\ndebug1: identity file /root/.ssh/id_rsa type -1\ndebug1: identity file /root/.ssh/id_rsa-cert type -1\ndebug1: identity file /root/.ssh/id_dsa type -1\ndebug1: identity file /root/.ssh/id_dsa-cert type -1\ndebug1: identity file /root/.ssh/id_ecdsa type -1\ndebug1: identity file /root/.ssh/id_ecdsa-cert type -1\n```\nStill waiting at this last line.\nI use Docker Docker version 1.4.1, build 5bc2ff8\n. Any suggestions ?\n. Connecting to 172.17.0.12 [172.17.0.12]\nConnection failed, the problem is due to a misconfiguration of the running container perhaps but I execute the same docker run command described in my first post...\n. Ok, so the problem is localized. After rebooting the system and disabling the firewall, all works. \nThe issue is due to the firewall, still searching for a solution...\n. The solution is to start the container AFTER firewall otherwise, iptables overwrites gitlab rules and it doesn't work.\n. ",
    "minus7": "Oh, I did not know that it was backwards compatible. Thanks for the quick fix :)\n. Oh, I did not know that it was backwards compatible. Thanks for the quick fix :)\n. ",
    "sydneyhenrard": "I tried to upgrade but it does not work because of missing a repository. \nroot@a986e481390d:/# sudo apt-get install postgresql-client-9.4\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nE: Unable to locate package postgresql-client-9.4\nE: Couldn't find any package by regex 'postgresql-client-9.4'\nI checked the Dockerfile and it includes the postgresql repository: http://apt.postgresql.org/pub/repos/apt/\nThanks\n. I tried to upgrade but it does not work because of missing a repository. \nroot@a986e481390d:/# sudo apt-get install postgresql-client-9.4\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nE: Unable to locate package postgresql-client-9.4\nE: Couldn't find any package by regex 'postgresql-client-9.4'\nI checked the Dockerfile and it includes the postgresql repository: http://apt.postgresql.org/pub/repos/apt/\nThanks\n. You're right. To find out the IP: boot2docker ip.\nThanks for your help.\n. ",
    "sammko": "Sorry for the delay, but no, using your proxy configuration did not help. It seems that somehow gitlab ignores the X-Forwarded-Proto header when serving the pages, since I set it to https (with NGINX_X_FORWARDED_PROTO=https) on the internal proxy. I don't think my external proxy configuration matters, because the gravatar image is loaded over http even when using localhost:10080 on the server machine. The gitlab instance listening on the unix socket has no way of knowing whether I accessed the site over http or not, I explicitly told it that I am using https. I have no idea where the problem could be. A debugging page that would just print out the incoming headers in the gitlab server would be nice, but I don't think such thing exists.\n. Sorry for the delay, but no, using your proxy configuration did not help. It seems that somehow gitlab ignores the X-Forwarded-Proto header when serving the pages, since I set it to https (with NGINX_X_FORWARDED_PROTO=https) on the internal proxy. I don't think my external proxy configuration matters, because the gravatar image is loaded over http even when using localhost:10080 on the server machine. The gitlab instance listening on the unix socket has no way of knowing whether I accessed the site over http or not, I explicitly told it that I am using https. I have no idea where the problem could be. A debugging page that would just print out the incoming headers in the gitlab server would be nice, but I don't think such thing exists.\n. Yeah. Oh, I also got this in the logs. \nAssuming that the container is running behind a HTTPS enabled load balancer.\n. Yeah. Oh, I also got this in the logs. \nAssuming that the container is running behind a HTTPS enabled load balancer.\n. This was fixed updating from 7.7.1 to 7.7.2\n. This was fixed updating from 7.7.1 to 7.7.2\n. ",
    "gaving": ":+1: \n. :+1: \n. ",
    "schmunk42": "Thank you very @sameersbn  much also from my side, I can only second everything @Romke-vd-Meulen said!\n. Thank you very @sameersbn  much also from my side, I can only second everything @Romke-vd-Meulen said!\n. K will try 7.8.0 - sorry I forgot to mention we're on 7.7.2\n. for reference: https://gitlab.com/gitlab-org/gitlab-ce/issues/1145\n. Yep, it's fixed. I needed to add \nX-Forwarded-Ssl: on\nto my reverse proxy, see also https://gitlab.com/gitlab-org/omnibus-gitlab/issues/331#note_997411 \n. Related https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/303#note_3356948\n2016/01/23 21:31:37 error: handleFileUploads: extract files from multipart: exec: \"gitlab-zip-metadata\": executable file not found in $PATH\ngit.ourdomain.com @ - - [2016-01-23 21:31:36.991087607 +0000 UTC] \"POST /ci/api/v1/builds/19321/artifacts HTTP/1.1\" 500 22 \"\" \"curl/7.35.0\" 0.027105\n. I was able to hotfix this by docker exec ... these commands in the container:\nln -s /home/git/gitlab-workhorse/gitlab-zip-cat /usr/local/bin\nln -s /home/git/gitlab-workhorse/gitlab-zip-metadata /usr/local/bin\nA better description can be found here: https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/303#note_3357018\n. @sameersbn Will you release 8.4.0-1 with this fix?\n. Great! I just wanted to confirm that it works as expected.\n. Sorry, this may be totally unrelated, but I just remembered this answer on StackOverflow :smile: \n. Until @sameersbn is back you can build your own image in the meantime, just by changing this line to\nENV GITLAB_VERSION=8.5.1\n. Duplicate of https://github.com/sameersbn/docker-gitlab/pull/617\n. No problem, I didn't saw the previous PR either.\n. Thank you for the info.\nAnother option would be a 8.6.0-beta1 tag for this repo.\n. ",
    "grossjonas": "+1\n. +1\n. ",
    "adamlc": ":+1: from me too! Takes 2 mins to do upgrades now :)\n. :+1: from me too! Takes 2 mins to do upgrades now :)\n. I'm also having this issue using jwilder/nginx-proxy. Unfortunately none of the \"fixes\" above seem to work for me :(\n. It works now, I forgot to use proxy_set_header, I was using add_header before :). So I added the following to my nginx conf:\nproxy_set_header X-Forwarded-Proto https;\nproxy_set_header X-Forwarded-Ssl on;\nproxy_set_header X-Forwarded-Port 443;\n. Same problem here, although I can't even login!\nOpenSSL::Cipher::CipherError (bad decrypt):\n  app/controllers/sessions_controller.rb:108:in `valid_otp_attempt?'\n  app/controllers/concerns/authenticates_with_two_factor.rb:46:in `authenticate_with_two_factor_via_otp'\n  app/controllers/concerns/authenticates_with_two_factor.rb:35:in `authenticate_with_two_factor'\n  lib/gitlab/request_profiler/middleware.rb:15:in `call'\n  lib/gitlab/middleware/go.rb:16:in `call'\n. @SolidNerd I used TFA before 8.11.0. Before I had only GITLAB_SECRETS_DB_KEY_BASE, so for the upgrade I also added a GITLAB_SECRETS_SECRET_KEY_BASE and GITLAB_SECRETS_OTP_KEY_BASE.\n. @dominikschulz the query didn't seem to work for me. Its still erroring on /profile/two_factor_auth :(\n. Unfortunately it won't even let me login, even after running the query. It keeps redirecting to /profile/two_factor_auth\n. I'm thinking I could set encrypted_otp_secret, encrypted_otp_secret_iv & encrypted_otp_secret_salt to null and see if it helps.\n. Nothing there @SolidNerd \nroot@d421122371b5:/home/git/gitlab# cat .secret\ncat: .secret: No such file or directory\n. Taking the value from /home/git/data/.secret and setting that as GITLAB_SECRETS_OTP_KEY_BASE worked for me.\nIn theory everyone should have that in their Docker data volume :)\n. Will do @SolidNerd, thanks @smcgivern for the info :)\n. Awesome, I'll leave it as a different value in that case :)\n. Ahh didn't realise that was the default behaviour, but I guess this bug in git bought it to my attention. I'm not sure what implications downgrading git would have in the container. Its probably worth waiting for an upstream fix I'd say.. Sorry I didn't get back sooner, the upgrade resolves the issue, thanks \ud83d\udc4d . Any updates on this? Would love to get this fixed, even if its only temporary :). Thanks for the help @solidnerd, I should have said I'm using the local storage. I'm also using automated backups, is the skip option something I can add? Thanks!\nIf not I can quite easily setup a cron to do backups automatically :). Ignore that, clearly I can't read, just found GITLAB_BACKUP_SKIP, doh!. Thanks for the feedback @catesandrew!\nUnfortunately whatever I try it seems to create an invalid config or something for pages as it fails to start. Any ideas on how we go about configuring this @solidnerd? \nShould GITLAB_PAGES_EXTERNAL_HTTP be a port number like GITLAB_PAGES_EXTERNAL_HTTP=8091 or something else?\nThanks :). So turns out after a little research you need to put a colon before the port, so GITLAB_PAGES_EXTERNAL_HTTP=:8091.\nI managed to get custom domains working by running pages in a different container. I noticed the gitlab config for nginx is the default_server, do you think it would be more useful for pages to be the default_server so any custom domains are forwarded to pages instead?. Because this is being done in an addition RUN command it'll actually create an additional layer, so won't really have any affect to the build size, assuming thats what you want to do!. I'm also getting the same error :(. I'm getting a similar error too after an upgrade \nmysql: [Warning] Using a password on the command line interface can be insecure.\n/sbin/entrypoint.sh: line 22:   657 Terminated              /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf. I've managed to get it working by commenting out the database migration stuff in entrypoint.sh on line 22 and rebuilding the docker image.\nObviously this isn't good because there may well be migrations in 10.8.3. But at least its running now! If there are migrations I doubt it'll be anything major in a point release.. @flashermaster well as of this morning I had been running 10.8.1 until I tried to upgrade \ud83d\ude1e . @solidnerd I did actually remove those lines from the entrypoint that were added for 10.8.3 and still got the same issue with the migrations. \nI think the issue may lie in the migrations. I went from 10.8.1 to 10.8.3 too.. @solidnerd works perfectly! Also thanks @adferrand. I can confirm this too :). ",
    "jlachowski": "And from me, it's really a marvellous thing :) \n. And from me, it's really a marvellous thing :) \n. ",
    "DinosaurDad": "Completely agree with the thumbs up. This is fantastic, and raised the bar on image design and reusability. Only improvement I can think of is to base each of its parts (gitlab, redis, postgresql) on phusion baseimage to make them smaller and lighter.\nThanks @sameersbn!\n. Completely agree with the thumbs up. This is fantastic, and raised the bar on image design and reusability. Only improvement I can think of is to base each of its parts (gitlab, redis, postgresql) on phusion baseimage to make them smaller and lighter.\nThanks @sameersbn!\n. ",
    "DaveDavenport": "Thanks for the fantastic work.  It is very nice. :+1: \n. Thanks for the fantastic work.  It is very nice. :+1: \n. ",
    "hourliert": "Thanks a lot. No more pain with gitlab now!\n. Thanks a lot. No more pain with gitlab now!\n. ",
    "chanmix51": "Almost no pain, but less pain than normal install by far !\n. Almost no pain, but less pain than normal install by far !\n. ",
    "tbeg": "Great! Thanks!\n. Great! Thanks!\n. ",
    "jeremyvilleneuve": "Yes! Wonderful work! Thanks for your contributions to the community!\n. Yes! Wonderful work! Thanks for your contributions to the community!\n. ",
    "gionn": "The real reason I am using host networking is because of lack on docker side of an API to recreate the iptables rules on-demand, since I have an iptables firewall configured on host machine and all chains get flushed everytime it applies a new configuration, breaking the docker exposed ports.\nI can easily workaround this by manually changing the /etc/ssh/sshd_config, so it is not a problem, I was just expecting that GITLAB_SSH_PORT would reflect directly on sshd config, thanks for your clarifications.\n. Yup, re-adding MASQUERADE rules is a trivial fix to make network working again, but as I've stated on the last message the problem is for exposed ports.\nIt may be possible to use the docker API to enumerate over all active containers and retrieve the exposed ports, and then manually re-create the port forwarding rules, but I never dig into it.\nHowever, many thanks for your interest!\n. ",
    "gkostyanikov": "Solved it by pulling today latest gitlab image and following all previous steps in exact order. Seems like the problem was with previous image. \n. ",
    "pkallberg": "Thanks for your recommendation @sameersbn. This is the result of that command on a fresh container (no changes) running on 7.7.2:\nroot@8de59d0097c2:/app# ./init app:sanitize\nChecking repository directories permissions...\nChecking satellites directories permissions...\nChecking uploads directory permissions...\nChecking tmp directory permissions...\nchmod: cannot access '/home/git/data/tmp/': No such file or directory\nWhen I first run the container it outputs the following, not sure if that may be related:\ninvoke-rc.d: policy-rc.d denied execution of restart.\nDo you have any idea what may be going wrong? I'm surprised if no one else has seen this.\n. Thanks @sameersbn, sorry if I'm not following recommended practices. I ran it the way you specified, but am getting the same result:\n$ docker run -it --rm -e DB_HOST='xxx.xxx.xx.xxx' -e DB_NAME='xxx' -e DB_PASS='xxx' -e DB_TYPE='mysql' -e DB_USER='xxx' -e REDIS_HOST='xxx' -e REDIS_PORT='xxx' -e GITLAB_PORT='10080' -e GITLAB_SSH_PORT='10022' sameersbn/gitlab:7.7.2 app:sanitize\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\ninvoke-rc.d: policy-rc.d denied execution of restart.\nChecking repository directories permissions...\nChecking satellites directories permissions...\nChecking uploads directory permissions...\nChecking tmp directory permissions...\nchmod: cannot access '/home/git/data/tmp/': No such file or directory\nApologies for the back and forth on this. Unless you can think of another solution, do you know if the command that I specified earlier (sudo mv /home/git/gitlab/tmp /home/git/gitlab/tmp_backup) would have any negative implications on the app?\n. ",
    "mklatsky": "I found the solution the the problem. I was using the database from a Gitlab (non-docker) 7.4.3 instance, but was running the 7.7.2 version in my docker container. Once I rolled my container back to 7.4.3, 'git push' worked. I'll now do incremental upgrades to get to the latest version.\n. ",
    "chrert": "@sameersbn Sry, I was a little bit confused! Everything is working fine... Thanks for your answer anyway!\n. ",
    "grahampugh": "It is also the case on OS X using Docker-machine (which uses boot2docker) that the chown commands fail. Therefore volumes cannot be linked, so it doesn't appear possible to use this docker container persistently on a Mac. \n. ",
    "mko-x": "Thank you very much in advance!\nI will give your suggestions a try and report the results here.\n. Working great again for almost a month without problems. Thank you once more.\nClosing.\n. ",
    "cedvan": "Hi,\n- For save files in Gitlab (repositories, avatars, ...), use -v /path/save/data/in/host:/home/git/data\n- For save database (users, projects, rights, ...) :\n  - With mysql container internal : use -v /path/save/database/in/host:/var/lib/mysql in command docker run gitlab\n  - With mysql container external : use -v /path/save/database/in/host:/var/lib/mysql in command docker run mysql and use --link mysql:mysql in command docker run gitlab\n  - With postGreSQL container external : use -v /path/save/database/in/host:/var/lib/postgresql in command docker run postgresql and use --link postgresql:postgresql in command docker run gitlab\nIf you save files and database, you can update your Gitlab easily without data loss\n. Yes sorry, internal mysql has been removed :)\n. ",
    "andycmaj": "testing\n. gonna break this up into separate requests\n. fixed typos\n. hmmm ok i'll take a look. what's your env-file look like?\n. thanks! will fix\n. ",
    "hyper0x": "@sameersbn\nOK, but it have not listen the specific port 80, my command like:\nsudo docker run -e 'GITLAB_HOST=<gitlab_host>' -e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=10022' -e 'GITLAB_BACKUPS=daily' -e 'DB_TYPE=postgres' -e 'DB_HOST=<db_host>' -e 'DB_NAME=gitlabhq_production' -e 'DB_USER=git' -e 'DB_PASS=<db_password>' -p 10022:22 -p 10080:80 -e 'REDIS_HOST=<redis_host>' -e 'REDIS_PORT=6379' -v /opt/gitlab/data:/home/gitl/data -v /opt/gitlab/backups:/home/git/data/backups -v /opt/gitlab/tmp:/home/git/data/tmp sameersbn/gitlab:7.8.2\n. @sameersbn sorry, it's my mistake, the port is 10080, and I run the command:\nwget http://<gitlab_host>:10080/\nAnd the output is: \n--2015-03-10 17:49:05--  http://<gitlab_host>:10080/\nConnecting to <gitlab_host>:10080... connected.\nHTTP request sent, awaiting response... 500 Internal Server Error\n2015-03-10 17:49:06 ERROR 500: Internal Server Error.\n. @sameersbn I found some errors in /var/log/gitlab/gitlab/production.log:\n```\nStarted GET \"/\" for 127.0.0.1 at 2015-03-10 10:04:41 +0000\nProcessing by DashboardController#show as HTML\nCompleted 401 Unauthorized in 7ms\nRedis::TimeoutError (Connection timed out):\n  config/initializers/redis-store-fix-expiry.rb:10:in block in setex'\n  config/initializers/redis-store-fix-expiry.rb:10:insetex'\n```\nWhat does that mean?\n. @sameersbn Thanks, my lord. It have successfully been run. The docker command is\nsudo docker run -d -e 'GITLAB_HOST=<gitlab_host>' -e 'GITLAB_BACKUPS=daily' -e 'DB_TYPE=postgres' -e 'DB_HOST=<db_host>' -e 'DB_NAME=gitlabhq_production' -e 'DB_USER=git' -e 'DB_PASS=<db_password>' -p 22:22 -p 80:80 -e 'REDIS_HOST=<redis_host>' -e 'REDIS_PORT=6379' -v /opt/gitlab/data:/home/git/data sameersbn/gitlab:7.8.2\n. ",
    "russell": "So we are hoping to use the web API to do some post configuration of the gitlab instance.  We don't want our users to be able to change the root password before we have set everything up.  E.g. connect up gitlab-ci and add a service account.\nYou are right, i didn't intend on having that side effect.  I actually can simplify things by just directly passing the env variable without setting a default.  That will keep the default behaviour if the variable isn't specified.\nDoes this seem reasonable or do you think there is a better way to accomplish this same thing?  I had considered inheriting your image and adding more db init scripts.  But using web API seems like it will be easier to maintain.\n. yeah it should be.  i pushed microseconds before commenting.\n. Thanks for the feedback.  I didn't know that bash form!\n. ",
    "bdentino": "my guess is that the database connection attempt isn't successful. literally spent all day yesterday debugging the same symptoms. container mysteriously dies after 60 seconds. try removing the pipe to /dev/null here:\nhttps://github.com/sameersbn/docker-gitlab/blob/master/assets/init#L709\nand see what the output says. If the app can't connect to the database within 60 seconds it terminates.\n. ",
    "kinghajj": "I managed to solve this by putting \"--net=host\" in the \"docker run\" command, and by ensuring that my iptables configuration accepted all incoming loopback connections.\n. ",
    "remohammadi": "Oops, just discovered the folder! data/ssh\n. If I understood correctly, this is not just \"Improve container registry docs\". This commit will change the way registry is exposed to the user. In the current docs, the registry is hidden, and requests are passed through GitLab. But in your changes, registry is exposed to the user, and is set to use GitLab as the authentication driver. Is it the expected result?\n@maikelvl @solidnerd \n. Thank you @maikelvl and @solidnerd . I was just checking my understanding. The title was a bit misleading; I didn't expect a change in behavior from that title :wink: \nSo, should we reconfigure the previously configured dockers to match this configuration after these changes are released? Or are them backward-compatible?\n. I have set GITLAB_SECRETS_SECRET_KEY_BASE in my deployment, but I see Missing Rails.application.secrets.jws_private_key for ... every time I deploy a new version of quay.io/sameersbn/gitlab, since 9.0.0.. Minor: it should be **8.14.3**. Also please fix **8.14.2.. ",
    "GottZ": "well i do know that i should not install ssl certs into it. as i said. it was just a try to get it running.\nhttps://github.com/sameersbn/docker-gitlab/blob/master/assets/init#L343\nanyways.. since you ask for it, here it comes:\nhttps://gist.github.com/GottZ/f27e3f1018b198553aee\nhost system: arch linux 64 bit\nthe host is not running inside a vm.\ndocker version:\nClient version: 1.5.0\nClient API version: 1.17\nGo version (client): go1.4.1\nGit commit (client): a8a31ef\nOS/Arch (client): linux/amd64\nServer version: 1.5.0\nServer API version: 1.17\nGo version (server): go1.4.1\nGit commit (server): a8a31ef\n. lets see..\nremoved the oauth part \u2713\ndocker-compose up -d \u2713\ngoing to my gitlab url \u2713\nmy session is still active \u2713\ngoing into a repo \u2713\nclone url points to https \u2713\nlogout \u2713\nlogin \u2717\n422\nThe change you wanted was rejected.\nMaybe you tried to change something you didn't have access to.\ndisabling nginx reverse proxy caching of static ressources \u2713\nnginx -t \u2713\nnginx -s reload \u2713\ntrying to login again using an icognito tab \u2717\n422\nnow lets see what the log says.\n```\ndocker logs gitlab_Sys_1\nWaiting for database server to accept connections\nStarting supervisord...\n2015-03-20 09:16:22,304 CRIT Supervisor running as root (no user in config file)\n2015-03-20 09:16:22,304 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\n2015-03-20 09:16:22,304 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\n2015-03-20 09:16:22,304 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\n2015-03-20 09:16:22,304 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\n2015-03-20 09:16:22,305 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\n2015-03-20 09:16:22,332 INFO RPC interface 'supervisor' initialized\n2015-03-20 09:16:22,332 CRIT Server 'unix_http_server' running without any HTTP authentication checking\n2015-03-20 09:16:22,332 INFO supervisord started with pid 1\n2015-03-20 09:16:23,335 INFO spawned: 'sidekiq' with pid 297\n2015-03-20 09:16:23,337 INFO spawned: 'unicorn' with pid 298\n2015-03-20 09:16:23,338 INFO spawned: 'cron' with pid 299\n2015-03-20 09:16:23,339 INFO spawned: 'nginx' with pid 300\n2015-03-20 09:16:23,340 INFO spawned: 'sshd' with pid 301\n2015-03-20 09:16:24,997 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-03-20 09:16:24,997 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-03-20 09:16:24,997 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-03-20 09:16:24,997 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-03-20 09:16:24,997 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-03-20 09:16:29,883 INFO exited: sidekiq (exit status 1; not expected)\n2015-03-20 09:16:30,885 INFO spawned: 'sidekiq' with pid 316\n2015-03-20 09:16:31,886 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n```\nif there is anything i should take a look at, just point me to it.\n. @fischerman thats black magic.. it just worked.. thanks :+1: \n. sorry i've not been answering yet. you also mentioned i forward 443 instead of 80.\noriginal i did that because it solved wrong clone urls that were displaying as: https://domain.de:80/namespace/project.git\nthe traffic to and from the reverse proxy is unencrypted\ni'll try something now. will report back in around an hour or so.\n. ok. after updating to 7.12.2-2 the problem persists.\nwhat i did afterwards was reading through all commits from 7.8.4 to the latest one. well.. as i expected.. nothing wrong with docker-gitlab.\nhowever: even since i use dockers http port now aswell as my nginx config matches yours, oauth will always missmatch the response url due to an appended :80 behind the hostname.\ni'll now dig into the container and will see if i can figure something out.\nanyways: i'm doing this in my spare time btw. i only use this container for personal stuff on my private server. so far.. i love it. you sure spent alot of effort into this! thanks for that.\n. i did study your entrypoint.sh and other files.\ni want to point out that i do know that i need to set GITLAB_PORT and even know why its needed.\nthis is my current configuration: https://gist.github.com/GottZ/00771896dac7515bcb88\nclone urls work correctly. just the oauth callback url is broken. it does not matter wich omniauth gem is being used. they all force port 80\ni even dug into https://github.com/intridea/omniauth to see if i can find anything. srsly. i'm kinda lost here.\nthats just another thing i found: https://github.com/gitlabhq/gitlabhq/commit/571ba5a7feb870b7aa711d5a6fc6d4d53d92a4c5\ni still could not verify any relation between the version change and my issue.\nif i cannot find a solution i might hot glue a string replacement into the reverse proxy.\n. Yes. I did that before updating to 7.12 (on 7.8.4 it worked fine) \n. 7.14.1 fixed this issue for me.\n@sp4ke tell us if upgrading solved your issue too.\noh and @sameersbn, i didn't change anything in my configuration.\n. so my guess that this was not related to this repo is actually true. i'm kinda happy now :+1: \n. ye. sorry. i thought this was closed already after pointing out why this should not be added here.\n. http://stackoverflow.com/a/15414811/1519836\n- $http_host equals always the HTTP_HOST request header.\n- $host equals $http_host, lowercase and without the port number (if present), except when HTTP_HOST is absent or is an empty value. In that case, $host equals the value of the server_name directive of the server which processed the request.\nso i guess you want to avoid ports right?\n. ",
    "fischerman": "Have you tried to add the X-Forwarded-Ssl: on header?\nLook here:\nhttps://gitlab.com/gitlab-org/omnibus-gitlab/issues/331#note_997411\n. ",
    "qwc": "Of course my data is safe in the volume and the image or newly created containers are working with that volume, still I somehow can't accept, that this 'creating a container for every command' isn't too much overhead for this simple commands. \nAnd additional, if I define always a different name for the one-command-container I get a lot of containers which are just useless, and I have to remove them one-by-one. :/\n. Well, the kinda obvious and only advantage of using docker exec is the fact that you don't have to supply the complete configuration on every docker run call, your container is completely configured.\nBut I accept the fact, that the current maintainance commands are defined like this, and I have to use them as stated, because the docker exec variant I tried myself does not always work flawlessly.\nLooks like writing some shell scripts which do the configuration part for me on every call. :)\n. Great!!! Thanks, for your fantastic work! :) :+1: \n. sry, copied the 8.6.5-1 config but I am having problems with 8.6.6!\n(same config just changed 8.6.5-1 to 8.6.6)\nDEBUG=1 doesn't give more output than without.\nAlready repulled it, but also this doesn't change the mentioned nonworking state.\nHere the requested docker info output.\n$ docker info\nContainers: 20\n Running: 2\n Paused: 0\n Stopped: 18\nImages: 63\nServer Version: 1.10.3\nStorage Driver: devicemapper\n Pool Name: docker-254:2-4720671-pool\n Pool Blocksize: 65.54 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: xfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 7.962 GB\n Data Space Total: 107.4 GB\n Data Space Available: 99.41 GB\n Metadata Space Used: 11.62 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.136 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Deferred Deletion Enabled: false\n Deferred Deleted Device Count: 0\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.120 (2016-03-11)\nExecution Driver: native-0.2\nLogging Driver: json-file\nPlugins: \n Volume: local\n Network: bridge null host\nKernel Version: 4.4.5-1-ARCH\nOperating System: Arch Linux\nOSType: linux\nArchitecture: x86_64\nCPUs: 8\nTotal Memory: 23.55 GiB\nName: thorium.<domain>\nID: <id>\nUsername: qwick\nRegistry: https://index.docker.io/v1/\n. Whew, yes that's a little bit mooore information. :)\nHere you'll find the output:\nhttps://gist.github.com/qwc/3511bf650dd66575fc2ca14c42e9645c\n. There's really something fishy going on.\nI've checked the containers with docker inspect and on the container from the image gitlab:8.6.6 the network devices are not created.\nThat's also the problem I'm facing, your suggestions should have solved the issue, when docker would do everything like expected.\nThe docker-compose.yml files are all the same except the changed version to 8.6.6 and your suggested env variables, with 8.6.5-1 everything works, with 8.6.6 not. \nI'm quite perplexed with this...\n(closing issue, due to error in docker not in gitlab. :) )\n(I'll update the system later today, or next week, maybe a fresher version of docker may fix this?)\n. I'm sorry to reopen this issue, but the problems I'm facing are still present with my today tried upgrade to 8.7.6. (Did not have time to further investigate the 8.6.6 problem and thought it would go away with 8.7.6...)\nWith DEBUG=true i see following timeout occur:\ngitlab_1            | + /usr/lib/postgresql/9.5/bin/pg_isready -h postgresql -p 5432 -U gitlab -d gitlabhq_production -t 1\ngitlab_1            | ++ expr 52 - 1\ngitlab_1            | + timeout=51\ngitlab_1            | + [[ 51 -eq 0 ]]\nIs there a slight chance that the current gitlab awaits a 9.5 postgresql database instead of the 9.4-21 of yours?\nBut of course a lot of other users do not have that problems. So it has to do something with my config... \nWhen I run docker-compose config no networks are listed and every service has got network_mode: bridge, so maybe here's the problem ?\nWhat's your config saying about networks and the networkmode? Could post an example?\n. Found an issue at docker which looks like my problem here. \nhttps://github.com/docker/docker/issues/18113\nWill close as soon as I've worked around this issue.\n. Well I've solved the problem, here's what I've done:\n1. First I've updated the configuration to version: '2'\n2. On creating the serivce containers with docker-compose create I got following error:\n   - ERROR: b'network <some_network_name> not found'\n   - So I assumed that the automatic creation of service networks does NOT work.\n3. Creating the networks by hand with docker network create -d bridge some_network_name solved this problem easily, but it's a manual step! Of course maybe only once.\n. ",
    "m451": "True. Seems like it needs more investigation. Multiple users report that error.\n. ",
    "danielhass": "@sameersbn thank your for your fast answer. I will test the linking on my system again with this new knowledge in mind. If all works fine I will close this issue afterwards.\n. ",
    "DeX3": "Oh... I must've overlooked that - sorry.\n. ",
    "epiphyllum": "since it will be more flexible\n. Greate!!!\n. ",
    "ivanalejandro0": "I've seen that issue, my problem was to set a value containing / for the GITLAB_TIMEZONE option.\nFor the case in the readme, instead of setting Kolkata I set it as Asia/Kolkata, (I misread \"Kolkata\" => \"Asia/Kolkata\" in the supported TimeZone docs).\nMaybe that's the same problem for you since the command line doesn't seem to be complete.\nCheers.\n. ",
    "jcw9930": "I have a similar issue:\n+ sudo -HEu git sed 's/{{GITLAB_PORT}}/tcp://10.254.118.109:10080/' -i config/gitlab.yml\nsed: -e expression #1, char 24: unknown option to `s'\nHow to work around the \"environment hijacking\"?\n. For my case it was enough to rename the kubernetes service \"gitlab\" to \"gitlab-svc\"\n. yes, it seems this is not related to this image only. It works with a different gitlab container, but also fails for your postgresql (sometimes):\nJul 10 17:19:11 xxx docker[1680]: time=\"2015-07-10T17:19:11.098590036+02:00\" level=error msg=\"Unable to RegisterMachine k8s_postgresql.2b886ce4_postgresql-xrqn6_default_0379d911-2717-11e5-b53a-00012e4f3474_d076efb7 for 0ae32b21957ca366974bf7f8f993f18fac3d5d06eff0b8b0879e8dc0eb3c3a2f: Invalid machine name\"\nI need to dig a bit deeper\n. ",
    "hydrosIII": "Hi, i had this problem. It is simple to solve just use the enviroment variable GITLAB_HOST in your docker startup script\nexample:\ndocker run --name=gitlab -it --rm  -e \"GITLAB_HOST=mydomain.com\"   sameersbn/gitlab:7.10.0\n. ",
    "andrealbinop": "@sameersbn sorry for the delay, the clone links are now generating properly! However  I'm facing Permission denied (publickey) while cloning with SSH, using a key registrated  through GitLab GUI. Issue #26 seems to be similar, but I need to further investigate. Where can I find ssh access logs on the container?\nSince my original problem is resolved I'm closing this issue.\n. Answering my own question, I could found gitlab ssh logs inside the container in the following path: /var/log/gitlab/supervisor/sshd.log\n. ",
    "Leibniz137": "Correction: 10s, not 30s (copy/paste error from previous merge request)\n. Correction: 10s, not 30s (copy/paste error from previous merge request)\n. ",
    "colinbrownec": "@sameersbn I agree. But if not all parameters are valid, should it exit? I see two options;\n1. print error message, disable aws, continue\n2. print error message, exit\nI guess I'm more for 2. since if you have some aws parameters, you were probably trying to use aws\n. @sameersbn I agree. But if not all parameters are valid, should it exit? I see two options;\n1. print error message, disable aws, continue\n2. print error message, exit\nI guess I'm more for 2. since if you have some aws parameters, you were probably trying to use aws\n. @sameersbn new code aborts if AWS_BACKUPS=true but options are incomplete. I also like this way since you can disable AWS without deleting configuration information.\n. @sameersbn new code aborts if AWS_BACKUPS=true but options are incomplete. I also like this way since you can disable AWS without deleting configuration information.\n. Would definitely be an improvement to use IAM profiles.\n\nCan we remove the check for the credentials if they aren't provided and allow fog to use the environment?\n\nI think we should still for credentials but could also check the environment for credentials.\nI don't have much experience with IAM profiles though, I don't host my GitLab instance on AWS. I also couldn't find any Fog documentation on IAM integration, though they do claim to support it.\n. Would definitely be an improvement to use IAM profiles.\n\nCan we remove the check for the credentials if they aren't provided and allow fog to use the environment?\n\nI think we should still for credentials but could also check the environment for credentials.\nI don't have much experience with IAM profiles though, I don't host my GitLab instance on AWS. I also couldn't find any Fog documentation on IAM integration, though they do claim to support it.\n. ",
    "ParadoxDelta": "I see. Is there a way to change this on my current container or do i have to commit and start a new container with run -e GITLAB_HOST=my.domain\n. ",
    "NezumiRyu": "You can use --env-file= with GITLAB_HOST=my.domain\n. Little fixed config. Now:\nCould not authorize you from Ldapmain because \"Undefined method `provider' for nil:nilclass\". \n. Existing users cannot login with ldap accounts.\n. Works! Thanks!\n. ",
    "rawadhilal88": "@sameersbn Hi Mr. Sameer. There was nothing wrong with the connection. I was able to connect properly. However, the problem lies in a password character that was causing the issue. For some reason, the script does not like the character '!' to be in the password. For example:\ndocker run --name=gitlab --link mysql:mysql --link redis:redisio \\\n    -e \"DB_USER=user\" -e \"DB_PASS=pas!sowd\" \\\n    -e \"DB_NAME=db\" \\\n    -e \"GITLAB_HOST=git.local.host\" \\\n    -v /opt/gitlab/data:/home/git/data \\\n    -p 10022:22 -p 10080:80 \\\n    sameersbn/gitlab:latest\n\nI fixed it by changing my password. Thanks for your help anyways. :)\n. @sameersbn yes I did escape it at first which allowed it to pass the first phases of setup but it caused the 'waiting for database connection..' issue. I should've tried it with single quotes.\n. ",
    "Arylo": "After I remove files from /opt/postgresql/data, it is okay :D\n. ",
    "diresi": "I've seen this once and IIRC the problem was some environment variable due to container links. Try linking redis as redisio (although I don't know how to do that using docker-compose).\n. OK, sorry.\nI suggested this due to the /app/init script, where the image env vars collided with env vars from docker container links.\nMaybe you can track down your problem in an interactive bash session. Insert set -x somewhere at the top of /app/init and run it manually with /app/init app:start. Then you should see the line where the script fails.\n. Thats good. Your collision is $DB_PORT. You should also rename your \"db\" container. \n. I've seen the same symptoms yesterday, there was a weird (and unreproducible) docker problem where container links were appearently messed up. From within my gitlab container, access to all linked containers failed (I tried connecting with socat), although they were working from other ones. I had to restart all the images to get around this (docker run).\nI've seen the 1-minute-timeout as well, but there were logs indicating that the DB connection failed.\n. ",
    "JacobHenner": "How much memory are you running on? Are you exceeding the memory available?\n. Disabling 2FA and re-enabling it on a per-user basis seems to have fixed this issue for now.\n. GITLAB_SSH_PORT: 22\nGITLAB_HOST: <host>\nSMTP_USER: <email>\nSMTP_PASS: <pass>\nIMAP_PASS: <pass>\nIMAP_USER: <email>\nGITLAB_EMAIL_DISPLAY_NAME: <displayname>\nGITLAB_HTTPS: \"true\"\nOAUTH_GITHUB_API_KEY: <apikey>\nGITLAB_HTTPS_HSTS_ENABLED: true\nOAUTH_GITHUB_APP_SECRET: <secret>\nOAUTH_BITBUCKET_API_KEY: <secret>\nOAUTH_BITBUCKET_APP_SECRET: <secret>\nOAUTH_TWITTER_API_KEY: <secret>\nOAUTH_TWITTER_APP_SECRET: <secret>\nGITLAB_SECRETS_DB_KEY_BASE: <secret>\nSIDEKIQ_CONCURRENCY: 5\nUNICORN_WORKERS: 1\nGITLAB_SECRETS_OTP_KEY_BASE: <otp>\nGITLAB_SECRETS_SECRET_KEY_BASE: <secret>\nGITLAB_TRUSTED_PROXIES: 172.17.0.1. ",
    "alininja": "Thank you @JacobHenner and @sameersbn for the suggestions.  I'll check the machine in a few days and will report back.  If I can rule out the memory requirement, then I'll check the supervisor logs following this (I've never used supervisor before):\nhttp://supervisord.org/logging.html\nIf you know of an easier way to check logs, then please let me know.  Thanks again and have a good weekend.\n. Hi @JacobHenner and @sameersbn.  Following your suggestions I up'ed the memory from 1GB to 2GB and things are working.  I had other containers running so they probably took up too much memory from GitLabs.\nThanks again for the container and your help.\nFor completeness, in the sidekiq log (/var/log/gitlab/supervisor/sidekiq.log), there was this line:\nCannot allocate memory - git\n. ",
    "changtimwu": "Hi!  I'd like add some notes here.    I encountered the same issue when hosting docker-gitlab on a digitalocean 10mo droplet.  Adding swap memory could be a really simple & quick fix.  Unicorn gets working instantly once upon I entering \"swapon\".  I even don't need to restart the gitlab container.  https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04\n. I'm enjoying lets encrypt + docker-gitlab.  Instead of configuring  the in-container nginx,\nI run another simple load balancer - caddy in front of the gitlab container.  See how simple my config file is.\n. ",
    "pbrackin": "I recently saw this same symptom trying to get this container up on Synology (because Synology is pretty far behind on theirs, and I needed some fixes in the newer Gitlab).  Execing into the container (thanks @sameersbn), I found my issue in the sidekiq.log:  \"Invalid Timezone: Los_Angeles\".  So, in the docker-compose.yml, I needed to fix GITLAB_TIMEZONE.  Had to be \"America/Los_Angeles\".  Totally my fault - but very difficult to debug if you don't know where to look.  Usually I use UTC for everything, but I couldn't use the default UTC for this particular project.  \nI would add this:  the CPU was pegging at 50% with this issue, so someone may be a bit tight on their loop in there somewhere... ",
    "sabhiram": "Oh doh - it is mysql... I will attempt to bump the packet size right now and report back. Wish I knew about this sooner lol. Thanks for the pointer @sameersbn \n. The strange thing is - the instance also fails to allow me to fetch any of the downloads via the download buttons. Regardless of if it is a zip or a diff or a release. To make matters more awesome - we run a SELinux host, and use an NFS file mount :)\nWorst case ill scratch it on a dedicated VM :)\n. @sameersbn - I guess what is strange to me is the fact that even plain text diffs do not download, nor do archives of git projects. I can try and whip up a postgres db and see where it lands - do you know if the other (download) issues occur (potentially) due to the sql container?\n. Yep, I still use sameer's awesome other dockerfiles, but something as vital as gitlab should not be down for small organizations. We moved to a dedicated smartOS vm for gitlab that is snapshotted every hour or so.\n. ",
    "simkin": "I am having the same issue. upping the max_allowed_packet value in my.cn did not fix it for me. Log files contain no obvious errors.\nGitLab 7.12.1 f6fb946 on Centos\n. I upgrade to the latest version 7.13.2 that resolved the issue, thanks for your suggestion though!\n. ",
    "andredasilvapinto": "+1\nMy server doesn't support STARTTLS but it supports TLS. As there is no environment property for enabling TLS, I have to use plain text...\nThis seems to have been added 1 year ago:\n-  https://gitlab.com/gitlab-org/omnibus-gitlab/merge_requests/152\n- https://github.com/gitlabhq/gitlabhq/issues/5636#issuecomment-30476960\n. thanks!\n. @sameersbn I am using this one: https://registry.hub.docker.com/u/centurylink/gitlab/ which builds on top of yours and still uses sameersbn/gitlab:7.3.0. I guess I will have to wait till they release a new version... or recreate it myself.\n. asked for an upgrade on the project: https://github.com/CenturyLinkLabs/docker-gitlab/issues/3\nand actually now that I think about it, the issue that I previously reported there, I should have reported it here, but considering that it is from an old release maybe it is even fixed already: https://github.com/CenturyLinkLabs/docker-gitlab/issues/2\n. OK. I started using CenturyLinkLabs/docker-gitlab simply because that's the image the templates in Panamax use.\nI think I will create my own template (with PostgreSQL and Redis) then, but it's always better to not reinvent the wheel when you don't need to.\n. I just had the chance to test this today. It is working properly. Thank you!\n. ",
    "infinitydeveloper": "ever when i try to service docker start, it doesn't start... instead it respawns too fast and then stops.\n. ",
    "thomasleveil": "take a look at your upstart log files. See http://www.tekhead.org/blog/2014/09/installing-docker-on-ubuntu-quick-fix/\n. :+1: nice move. Implementation details (the use of Bash and related escaping issues) should not leak up to the config. Why would anyone have to escape stuff in a environment variable value ?\n. IMHO, it sucks a user has to follow a web framework documentation addressed to developpers to be able to set a timezone. Anyway see #352 to help future users to figure this out on their own ;)\n. ",
    "gyulaweber": "I had the same issue, (ubuntu trusty, 3.19.0-33), the /var/log/upstart/docker.log said that the graph driver in not supported. \nI've installed the linux-image-extra-3.19.0-33-generic package (additional drivers), and it fixed the issue without reboot.\n. @infinitydeveloper - do you have any log files to see what's happening behind the scenes? (or it's already resolved?). \n. ",
    "thoriumbr": "On my Mint 17.3, I had the same problem. I solved it installing app-armor.\nOn this site (http://www.tekhead.org/blog/2014/09/installing-docker-on-ubuntu-quick-fix/) I saw the problem and the solution. Docker tries to load app-armor profile, fails and dies:\nShutting down daemon due to errors: Error loading docker apparmor profile: exec: \"/sbin/apparmor_parser\": stat /sbin/apparmor_parser: no such file or directory ()\nInstalling app-armor solves the problem.\n. ",
    "pazoozooCH": "For me, I got that exception with the problem (and solution) outlined in https://github.com/docker/docker/issues/24155. ",
    "alexwhen": "@sameersbn of course,pls check docker-compose.yml\nenvironment:\n    - DB_USER=gitlab\n    - DB_PASS=secretpassword\n    - DB_NAME=gitlabhq_production\nthe correct DB_PASS=password\n. @sameersbn because when use docker-compose up,it said postgresql password is wrong,so i edit it ,and then success!\nby the way,can you build a new yml for gitlab+redmine+gitlabci?\n. fixed it,thank you\n. ",
    "ruanjf": "Yes, Docker is installed on RHEL\n. @sameersbn Now it has worked. I run shell script rm -rf /var/lib/docker/ to delete docker file (because I think it is a docker version problem), then run docker pull sameersbn/gitlab:7.11.2  again.  I hope this can be useful for you\n. ",
    "can-can": "@sameersbn thx for your reply\n. ",
    "pylight": "Thanks for investigation. I've created an issue for gitlab ce.\n. Thanks for fixing it for version 8.2.3, it's working there nicely with relative url & reverse proxy. But in latest version 8.3.0 I'm facing the same problem again. Is this a known bug of this version?\n. Sure:\npostgres:\n      image: localhost:5000/postgres\n      environment:\n        - POSTGRES_USER=gitlab\n        - POSTGRES_PASSWORD=<somePW>\n      ports:\n        - \"127.0.0.1:5432:5432\"\n    redis:\n      image: localhost:5000/redis\n      ports:\n        - \"127.0.0.1:6379:6379\"\n    service:\n      image: sameersbn/gitlab:8.2.3\n      links:\n        - redis:redisio\n        - postgres:postgresql\n      ports:\n        - \"127.0.0.1:11080:80\"\n        - \"11022:22\"\n      environment:\n        - TZ=Europe/Berlin\n        - SMTP_ENABLED=true\n        - SMTP_DOMAIN=www.ourDomain.net\n        - SMTP_HOST=www.ourDomain.net\n        - SMTP_PORT=25\n        - GITLAB_TIMEZONE=Berlin\n        - GITLAB_HOST=ourDomain.net\n        - GITLAB_HTTPS=true\n        - GITLAB_PORT=443\n        - GITLAB_SSH_PORT=11022\n        - GITLAB_SSH_HOST=subdomain.ourDomain.net\n        - GITLAB_RELATIVE_URL_ROOT=/gitlab\n        - GITLAB_EMAIL=noreply@ourDomain.net\n        - GITLAB_EMAIL_REPLY_TO=noreply@ourDomain.net\n        - GITLAB_EMAIL_DISPLAY_NAME=Shared Gitlab\n        - GITLAB_BACKUPS=daily\n        - GITLAB_BACKUP_TIME=01:00\n        - GITLAB_GRAVATAR_ENABLED=false\n        - GITLAB_SECRETS_DB_KEY_BASE=<someKey>\n        - DB_TYPE=postgres\n        - DB_NAME=gitlab\n        - DB_USER=gitlab\n        - DB_PASS=<somePW>\n        - http_proxy=<corporateProxy>\n        - https_proxy=<corporateProxy>\n        - no_proxy=\"<list of some internal servers>\"\n      volumes:\n        - /var/run/docker.sock:/run/docker.sock\n        - /usr/bin/docker:/bin/docker\n        - /data/gitlab/:/home/git/data/\n        - /data/gitlab/gitlab/:/var/log/gitlab\nNote: I've upgraded from gitlab 7.10.4 (and just replaces the \"image\" setting of \"service\" + added a GITLAB_SECRETS_DB_KEY_BASE)\nNginx configuration (reverse proxy with https):\n```\nserver {\n    listen 443;\n    server_name  ourDomain.net;\nssl_certificate           /etc/nginx/ssl/cert.crt;\nssl_certificate_key       /etc/nginx/ssl/cert.key;\n\nclient_max_body_size 1G;\n\nssl on;\nssl_session_cache  builtin:1000  shared:SSL:10m;\nssl_protocols  TLSv1 TLSv1.1 TLSv1.2;\nssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;\nssl_prefer_server_ciphers on;\n\naccess_log            /var/log/nginx/nginx.access.log;\n\nlocation /gitlab/ {\n  proxy_set_header        Host $host;\n  proxy_set_header        X-Real-IP $remote_addr;\n  proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n  proxy_set_header        X-Forwarded-Proto $scheme;\n\n  proxy_pass              http://localhost:11080;\n  proxy_read_timeout      180;\n  proxy_redirect          http:// https://;\n\n}\n```\nI also thing that the message \"GITLAB_RELATIVE_URL_ROOT in use, recompiling assets, this could take a while...\" did only appear in version 8.2.3 but not in 8.3.0, but I'm not sure about it...\n. The other issue was solved by upgrading diffently but this problem still persists with 8.3.0 - in 8.2.3 everything is fine, but in 8.3.0 all icons are broken.\n. You're right it's really working without nginx when directly accessing it. But why did it work in 8.2.3 with nginx then? \nWhen looking at the console, I see that gitlab is not using the relative url for assets, example:\nhttps://myDomain.net/assets/icon-search-8ee9d986522a0935babd4119ea11df90.png Failed to load resource: the server responded with a status of 404 (Not Found)\nInstead it should look at https://myDomain.net/gitlab/assets/ normally. A quick and dirty fix is adding a rewrite rule in the nginx configuration: \nlocation /assets/ {\n    rewrite ^(/assets)(.*)$   https://myDomain.net/gitlab/assets/$2 permanent;\n }\nBut of course I would be thankful for better solutions - do I have to change my nginx configuration?\n. Still strange because the URLs are not correct for assets.  Of course my\naim is to have as less exceptional handling outside of the container as\npossible.  I hope this will get better in future releases.  Right now I'll\nstay with 8.2.3 :)\nAm 24.12.2015 06:00 schrieb \"Sameer Naik\" notifications@github.com:\n\nGitLab is slowly moving the serving of all http requests to the\ngitlab-workhorse component with very little left to be handled by nginx\nitself. While this handoff is not yet complete, but a major part of it took\nplace in the 8.3.0 release. See \"Decoupling GitLab from NGINX\" section of GitLab\n8.3.0 Release Announcement\nhttps://about.gitlab.com/2015/12/22/gitlab-8-3-released/\nGetting back to the issue. When you access Gitlab using relative url, the\naccess to the static assets should go through gitlab-workhorsefor the the\nurls in the css, etc. to the correct urls. If the change in your nginx\nconfig at the load balancer fixes the issue then you should be good.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/521#issuecomment-167042721\n.\n. Thanks for investigation!  With latest version,  the icons are now\ndisplayed correctly :)\nAm 24.12.2015 10:54 schrieb \"Sameer Naik\" notifications@github.com:\n@pylight https://github.com/pylight can you check with the latest build\nof the image. There seems to be an issue with gitlab-workhorse when\nrelative urls are used. I have created a workaround for this and hopefully\nthis issue should be resolved. Upon your confirmation I will create a new\npoint release.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/521#issuecomment-167079700\n.\n. Should I create a new issue report there?\n. Similar issue when using the \"Explore  Projects\" view and trying to search for a project/term. I'm also getting a 500 server error there (see attached log).\napplication-log.txt\n. Awesome, upgrading from 7.10.4 to 8.0.0. and afterwards to 8.2.3 solved this problem! Thanks for the hint :+1: \n. \n",
    "kevinsullivan": "I should add that \"docker logs \" shows no log messages at all. (Earlier, when I did have a small configuration problem, I did see log messages, so I'm pretty confident that if log messages were being produced, I'd be seeing them.) And I'm running Docker version 1.0.1, build 990021a.\n. I did initially have a slight misconfiguration that resulted in a failed DB\nconnection. That did show up in the logs and was easy to diagnose and\ncorrect. Now that I've fixed it, though, I am stuck -- with a\nnon-functioning system and no logs to help.\nOn Fri, May 22, 2015 at 2:25 AM, Christoph Rissner <notifications@github.com\n\nwrote:\nI've seen the same symptoms yesterday, there was a weird (and\nunreproducible) docker problem where container links were appearently\nmessed up. From within my gitlab container, access to all linked containers\nfailed (I tried connecting with socat), although they were working from\nother ones. I had to restart all the images to get around this (docker run).\nI've seen the 1-minute-timeout as well, but there were logs indicating\nthat the DB connection failed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/327#issuecomment-104536374\n.\n. \n",
    "SudoHenk": "Used the GITLAB_HTTPS=true option without further specifying the SSL options. Thanks!\n. ",
    "likol": "I think if you want to upgrade gitlab, just need remove old gitlab container,you don't need remove all .\nIf you can't login with existed accounts, maybe lost database data.\nbe sure when you create new postgreSQL container, the data volume location is same as old container. :smiley: \n. Hi, @fevxie :\nyou need give ssl port when you run container, attach -p to command line like -p 443:443 if you want listen default ssl port on docker HOST,use -p 4430:443 if 443 port used or you don't want listen 443 port on docker host.\nAnd you need give environment variation GITLAB_PORT=[docker host listen port] too.\nput all together:\nbash\ndocker run --name='gitlab' -d \\\n  --link=postgresql-gitlab:postgresql --link=redis-gitlab:redisio \\\n  --publish=10022:22 --publish=10443:443 \\\n  --env='GITLAB_PORT=10443' --env='GITLAB_SSH_PORT=10022'\\\n  --env='DB_TYPE=postgres'\\\n  --env='GITLAB_HOST=domain'\\\n  --env='GITLAB_HTTPS=true' --env='SSL_SELF_SIGNED=true'\\\n  --volume=/opt/gitlab/gitlab:/home/git/data \\\nsameersbn/gitlab:7.11.4\nBrowse website via https://domain:10443/\n. should be full path for command like /bin/bash\n. ",
    "owlfox": "Hi Likol,\nThank you very much for your reply!\nI can still find the old git repositories data at --volume=/placetoStoreData:\nSo, I guess I messed up something with the other two containers (removed and pulled all three containers...) like you said.\nmaybe I should try to find some way to get these data back to work\n. Hi @sameersbn, thank you for your reply.\nI think have already lost the database(my fault :P), should think before leap next time.\nsorry for interrupt again, now I'm trying to use rake:import function \ndocker exec -it gitlab sudo -u git -H bundle exec rake gitlab:import:repos RAILS_ENV=production\nwith a successful response like \n* Skipping wiki repo\nProcessing backup/plcdriver.git\n * Created plcdriver (backup/plcdriver.git)\nDone!\nbut they turns out to be empty repos\n\nAny other options should we check before doing import?\n. Hi @sameersbn ,\nI'm sorry for this late and Thank you for your help again! \nI just found that the repo cloned from the \"empty repo\" is not empty:P.\nThe size's about 20 MB's, and after I made some another push, the size label on Web GUI became normal again. So I guess the import is quite success, unless the web GUI didn't display the correct size at first due to my missing postgresql/redis.\nThank you again for the hint, this awesome repo, and the modified quick start script! It will save a lot of newbie like me XD.\n. ",
    "sugarwyc": "same problem, on osx 10.10\n. ",
    "mecp": "+1 I am also facing the same issue.\nIt runs fine few times but finally ends up with this behaviour.\nMemory is now set to 2GB, still its the same.\n. @sameersbn here it is. Its almost same as the default one.\nyml\npostgresql:\n  image: sameersbn/postgresql:9.4-3\n  environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n  volumes:\n    - /srv/docker/gitlab/postgresql:/var/lib/postgresql\ngitlab:\n  image: sameersbn/gitlab:7.13.4\n  links:\n    - redis:redisio\n    - postgresql:postgresql\n  ports:\n    - \"80:80\"\n    - \"10022:22\"\n  environment:\n    - TZ=Asia/Tokyo\n    - SMTP_ENABLED=True\n    - SMTP_DOMAIN=gmail.com\n    - SMTP_HOST=smtp.gmail.com\n    - SMTP_PORT=587\n    - SMTP_USER=xxxxxxx@gmail.com\n    - SMTP_PASS=xxxxxxx\n    - SMTP_STARTTLS=true\n    - SMTP_AUTHENTICATION=login\n    - GITLAB_TIMEZONE=Osaka\n    - GITLAB_HOST=gitlabvm\n    - GITLAB_PORT=80\n    - GITLAB_SSH_PORT=10022\n    - GITLAB_EMAIL=xxxxxxx@gmail.com\n    - GITLAB_EMAIL_REPLY_TO=xxxxxxx@gmail.com\n    - GITLAB_BACKUPS=daily\n    - GITLAB_BACKUP_TIME=01:00\n  volumes:\n    - /srv/docker/gitlab/gitlab:/home/git/data\nredis:\n  image: sameersbn/redis:latest\n  volumes:\n    - /srv/docker/gitlab/redis:/var/lib/redis\n. And here is the log of docker compose, if it helps you spot the problem\nI do not understand why docker-compose prints log from past as well. Its super long because of that.\nbash\nAttaching to zix_postgresql_1, zix_redis_1, zix_gitlab_1\n\u001b[36mpostgresql_1 | \u001b[0mInitializing database...\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:25:17 UTC [76-1] LOG:  database system was shut down at 2015-08-12 09:25:17 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:25:17 UTC [76-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:25:17 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:25:17 UTC [80-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:26:14 UTC [85-1] gitlab@postgres ERROR:  database \"gitlabhq_production\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:26:14 UTC [85-2] gitlab@postgres STATEMENT:  CREATE DATABASE \"gitlabhq_production\" ENCODING = 'unicode'\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:30:46 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:30:46 UTC [80-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:30:56 UTC [77-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:30:56 UTC [77-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:31:02 UTC [21-1] ERROR:  role \"gitlab\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:31:02 UTC [21-2] STATEMENT:  CREATE ROLE gitlab with LOGIN CREATEDB PASSWORD 'password';\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:31:02 UTC [26-1] ERROR:  database \"gitlabhq_production\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:31:02 UTC [26-2] STATEMENT:  CREATE DATABASE gitlabhq_production;\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:31:02 UTC [30-1] LOG:  database system was shut down at 2015-08-12 09:31:02 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:31:02 UTC [30-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:31:02 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:31:02 UTC [34-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:34:05 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:34:05 UTC [34-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:34:15 UTC [31-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:34:15 UTC [31-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:36:56 UTC [23-1] ERROR:  role \"gitlab\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:36:56 UTC [23-2] STATEMENT:  CREATE ROLE gitlab with LOGIN CREATEDB PASSWORD 'password';\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:36:56 UTC [28-1] ERROR:  database \"gitlabhq_production\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:36:56 UTC [28-2] STATEMENT:  CREATE DATABASE gitlabhq_production;\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:36:56 UTC [32-1] LOG:  database system was shut down at 2015-08-12 09:36:56 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:36:56 UTC [32-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:36:56 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:36:56 UTC [36-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:40:52 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:40:52 UTC [36-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:41:02 UTC [33-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:41:02 UTC [33-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:41:25 UTC [23-1] ERROR:  role \"gitlab\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:41:25 UTC [23-2] STATEMENT:  CREATE ROLE gitlab with LOGIN CREATEDB PASSWORD 'password';\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:41:26 UTC [28-1] ERROR:  database \"gitlabhq_production\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:41:26 UTC [28-2] STATEMENT:  CREATE DATABASE gitlabhq_production;\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:41:26 UTC [32-1] LOG:  database system was shut down at 2015-08-12 09:41:26 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:41:26 UTC [32-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:41:26 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:41:26 UTC [36-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:53:15 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:53:15 UTC [36-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:53:25 UTC [33-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:53:25 UTC [33-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:54:02 UTC [22-1] ERROR:  role \"gitlab\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:54:02 UTC [22-2] STATEMENT:  CREATE ROLE gitlab with LOGIN CREATEDB PASSWORD 'password';\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:54:02 UTC [27-1] ERROR:  database \"gitlabhq_production\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:54:02 UTC [27-2] STATEMENT:  CREATE DATABASE gitlabhq_production;\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:54:02 UTC [31-1] LOG:  database system was shut down at 2015-08-12 09:54:02 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:54:02 UTC [31-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:54:02 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:54:02 UTC [35-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:56:38 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-12 09:56:38 UTC [35-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0mInitializing database...\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:06:49 UTC [77-1] LOG:  database system was shut down at 2015-08-13 08:06:49 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:06:49 UTC [77-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:06:49 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:06:49 UTC [81-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:08:57 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:08:57 UTC [81-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:08:57 UTC [78-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:08:57 UTC [78-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mInitializing database...\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:10:34 UTC [77-1] LOG:  database system was shut down at 2015-08-13 08:10:34 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:10:34 UTC [77-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:10:34 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:10:34 UTC [81-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:11:37 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:11:37 UTC [81-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:11:37 UTC [78-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:11:37 UTC [78-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:12:06 UTC [22-1] ERROR:  role \"gitlab\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:12:06 UTC [22-2] STATEMENT:  CREATE ROLE gitlab with LOGIN CREATEDB PASSWORD 'password';\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:12:06 UTC [27-1] ERROR:  database \"gitlabhq_production\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:12:06 UTC [27-2] STATEMENT:  CREATE DATABASE gitlabhq_production;\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:12:06 UTC [31-1] LOG:  database system was shut down at 2015-08-13 08:12:06 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:12:06 UTC [31-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:12:06 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:12:06 UTC [35-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:12:07 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:12:07 UTC [35-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:12:07 UTC [32-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:12:07 UTC [32-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mInitializing database...\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:15:45 UTC [74-1] LOG:  database system was shut down at 2015-08-13 08:15:45 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:15:45 UTC [74-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:15:45 UTC [78-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:15:45 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:16:58 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:16:58 UTC [78-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:16:58 UTC [75-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:16:58 UTC [75-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mInitializing database...\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:18:37 UTC [77-1] LOG:  database system was shut down at 2015-08-13 08:18:37 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:18:37 UTC [77-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:18:37 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:18:37 UTC [81-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:03 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:03 UTC [81-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:03 UTC [78-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:03 UTC [78-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:11 UTC [20-1] ERROR:  role \"gitlab\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:11 UTC [20-2] STATEMENT:  CREATE ROLE gitlab with LOGIN CREATEDB PASSWORD 'password';\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:11 UTC [25-1] ERROR:  database \"gitlabhq_production\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:11 UTC [25-2] STATEMENT:  CREATE DATABASE gitlabhq_production;\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:11 UTC [29-1] LOG:  database system was shut down at 2015-08-13 08:19:11 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:11 UTC [29-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:11 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:11 UTC [33-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:12 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:12 UTC [33-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:12 UTC [30-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:19:12 UTC [30-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:24:13 UTC [20-1] ERROR:  role \"gitlab\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:24:13 UTC [20-2] STATEMENT:  CREATE ROLE gitlab with LOGIN CREATEDB PASSWORD 'password';\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:24:13 UTC [25-1] ERROR:  database \"gitlabhq_production\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:24:13 UTC [25-2] STATEMENT:  CREATE DATABASE gitlabhq_production;\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:24:13 UTC [29-1] LOG:  database system was shut down at 2015-08-13 08:24:13 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:24:13 UTC [29-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:24:13 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:24:13 UTC [33-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:24:38 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:24:38 UTC [33-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:24:38 UTC [30-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:24:38 UTC [30-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:25:01 UTC [20-1] ERROR:  role \"gitlab\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:25:01 UTC [20-2] STATEMENT:  CREATE ROLE gitlab with LOGIN CREATEDB PASSWORD 'password';\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:25:01 UTC [25-1] ERROR:  database \"gitlabhq_production\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:25:01 UTC [25-2] STATEMENT:  CREATE DATABASE gitlabhq_production;\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:25:01 UTC [29-1] LOG:  database system was shut down at 2015-08-13 08:25:01 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:25:01 UTC [29-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:25:01 UTC [33-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:25:01 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:25:03 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:25:03 UTC [33-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:25:03 UTC [30-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:25:03 UTC [30-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mInitializing database...\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:45:59 UTC [74-1] LOG:  database system was shut down at 2015-08-13 08:45:59 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:45:59 UTC [74-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:45:59 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 08:45:59 UTC [78-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0mInitializing database...\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:00:40 UTC [74-1] LOG:  database system was shut down at 2015-08-13 09:00:40 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:00:40 UTC [74-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:00:40 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:00:40 UTC [78-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:00:40 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:00:40 UTC [78-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:00:40 UTC [75-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:00:40 UTC [75-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mInitializing database...\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:21:44 UTC [74-1] LOG:  database system was shut down at 2015-08-13 09:21:44 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:21:44 UTC [74-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:21:44 UTC [78-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:21:44 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:13 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:13 UTC [78-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:13 UTC [75-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:13 UTC [75-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:19 UTC [20-1] ERROR:  role \"gitlab\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:19 UTC [20-2] STATEMENT:  CREATE ROLE gitlab with LOGIN CREATEDB PASSWORD 'password';\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:19 UTC [25-1] ERROR:  database \"gitlabhq_production\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:19 UTC [25-2] STATEMENT:  CREATE DATABASE gitlabhq_production;\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:19 UTC [29-1] LOG:  database system was shut down at 2015-08-13 09:23:19 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:19 UTC [29-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:19 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:19 UTC [33-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:20 UTC [1-2] LOG:  received smart shutdown request\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:20 UTC [33-2] LOG:  autovacuum launcher shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:20 UTC [30-1] LOG:  shutting down\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:20 UTC [30-2] LOG:  database system is shut down\n\u001b[36mpostgresql_1 | \u001b[0mCreating user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:41 UTC [20-1] ERROR:  role \"gitlab\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:41 UTC [20-2] STATEMENT:  CREATE ROLE gitlab with LOGIN CREATEDB PASSWORD 'password';\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mCreating database \"gitlabhq_production\"...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:41 UTC [25-1] ERROR:  database \"gitlabhq_production\" already exists\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:41 UTC [25-2] STATEMENT:  CREATE DATABASE gitlabhq_production;\n\u001b[36mpostgresql_1 | \u001b[0m    \n\u001b[36mpostgresql_1 | \u001b[0mGranting access to database \"gitlabhq_production\" for user \"gitlab\"...\n\u001b[36mpostgresql_1 | \u001b[0mStarting PostgreSQL server...\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:41 UTC [29-1] LOG:  database system was shut down at 2015-08-13 09:23:41 UTC\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:41 UTC [29-2] LOG:  MultiXact member wraparound protections are now enabled\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:41 UTC [33-1] LOG:  autovacuum launcher started\n\u001b[36mpostgresql_1 | \u001b[0m2015-08-13 09:23:41 UTC [1-1] LOG:  database system is ready to accept connections\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:25:24.747 # Server started, Redis version 2.8.4\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:25:24.747 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:25:24.747 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:25:24.747 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:30:25.087 * 10 changes in 300 seconds. Saving...\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:30:25.090 * Background saving started by pid 23\n\u001b[33mredis_1      | \u001b[0m[23] 12 Aug 09:30:25.093 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[23] 12 Aug 09:30:25.093 * RDB: 0 MB of memory used by copy-on-write\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:30:25.192 * Background saving terminated with success\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439371846) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:30:46.770 # User requested shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:30:46.770 * Saving the final RDB snapshot before exiting.\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:30:46.771 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:30:46.771 * Removing the unix socket file.\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:30:46.772 # Redis is now ready to exit, bye bye...\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:31:02.727 # Server started, Redis version 2.8.4\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:31:02.728 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:31:02.728 * DB loaded from disk: 0.000 seconds\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:31:02.730 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:31:02.730 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439372045) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:34:05.546 # User requested shutdown...\n\u001b[32mgitlab_1     | \u001b[0mWaiting for database server to accept connections\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:34:05.547 * Saving the final RDB snapshot before exiting.\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:34:05.548 * DB saved on disk\n\u001b[32mgitlab_1     | \u001b[0mStarting supervisord...\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:27,514 CRIT Supervisor running as root (no user in config file)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:34:05.548 * Removing the unix socket file.\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:27,514 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:34:05.564 # Redis is now ready to exit, bye bye...\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:27,514 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:27,514 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:27,514 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:27,514 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:27,530 INFO RPC interface 'supervisor' initialized\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:27,530 CRIT Server 'unix_http_server' running without any HTTP authentication checking\n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:27,530 INFO supervisord started with pid 1\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:28,534 INFO spawned: 'sidekiq' with pid 284\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:28,536 INFO spawned: 'unicorn' with pid 285\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:28,540 INFO spawned: 'cron' with pid 286\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:28,542 INFO spawned: 'nginx' with pid 287\n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:28,550 INFO spawned: 'sshd' with pid 288\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:36:56.756 # Server started, Redis version 2.8.4\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:29,611 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:36:56.756 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:29,611 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:36:56.756 * DB loaded from disk: 0.000 seconds\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:29,611 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:36:56.756 * The server is now ready to accept connections on port 6379\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:29,611 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:36:56.756 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:41:29,611 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439372452) Received SIGTERM, scheduling shutdown...\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:53:15,852 WARN received SIGTERM indicating exit request\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:40:52.462 # User requested shutdown...\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:53:15,854 INFO waiting for cron, nginx, sshd, sidekiq, unicorn to die\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:40:52.462 * Saving the final RDB snapshot before exiting.\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:53:15,861 INFO stopped: sshd (exit status 0)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:40:52.464 * DB saved on disk\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:53:15,880 INFO stopped: nginx (exit status 0)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:40:52.464 * Removing the unix socket file.\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:53:15,880 INFO stopped: cron (terminated by SIGTERM)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:40:52.466 # Redis is now ready to exit, bye bye...\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:53:18,416 INFO stopped: unicorn (exit status 0)\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:53:19,420 INFO waiting for sidekiq to die\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:53:22,425 INFO waiting for sidekiq to die\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:53:25,432 INFO waiting for sidekiq to die\n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[32mgitlab_1     | \u001b[0mWaiting for database server to accept connections\n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[32mgitlab_1     | \u001b[0mStarting supervisord...\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:03,549 CRIT Supervisor running as root (no user in config file)\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:03,550 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:03,550 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:03,550 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:03,550 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:03,550 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[32mgitlab_1     | \u001b[0mUnlinking stale socket /var/run/supervisor.sock\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:03,872 INFO RPC interface 'supervisor' initialized\n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:41:26.010 # Server started, Redis version 2.8.4\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:03,872 CRIT Server 'unix_http_server' running without any HTTP authentication checking\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:41:26.010 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:03,872 INFO supervisord started with pid 1\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:41:26.010 * DB loaded from disk: 0.000 seconds\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:04,876 INFO spawned: 'sidekiq' with pid 282\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:41:26.010 * The server is now ready to accept connections on port 6379\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:04,878 INFO spawned: 'unicorn' with pid 283\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:04,882 INFO spawned: 'cron' with pid 284\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:41:26.010 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:04,886 INFO spawned: 'nginx' with pid 285\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:04,889 INFO spawned: 'sshd' with pid 286\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:46:26.053 * 10 changes in 300 seconds. Saving...\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:05,967 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:05,967 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:46:26.056 * Background saving started by pid 24\n\u001b[33mredis_1      | \u001b[0m[24] 12 Aug 09:46:26.058 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[24] 12 Aug 09:46:26.058 * RDB: 0 MB of memory used by copy-on-write\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:46:26.157 * Background saving terminated with success\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:05,967 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:51:27.095 * 10 changes in 300 seconds. Saving...\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:51:27.096 * Background saving started by pid 25\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:05,967 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n\u001b[33mredis_1      | \u001b[0m[25] 12 Aug 09:51:27.100 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[25] 12 Aug 09:51:27.100 * RDB: 0 MB of memory used by copy-on-write\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:54:05,967 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:51:27.198 * Background saving terminated with success\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439373195) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:53:16.012 # User requested shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:53:16.012 * Saving the final RDB snapshot before exiting.\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:56:38,386 WARN received SIGTERM indicating exit request\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:53:16.012 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:53:16.012 * Removing the unix socket file.\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:56:38,388 INFO waiting for cron, nginx, sshd, sidekiq, unicorn to die\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:56:38,394 INFO stopped: sshd (exit status 0)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:53:16.019 # Redis is now ready to exit, bye bye...\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:56:38,401 INFO stopped: nginx (exit status 0)\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:56:38,402 INFO stopped: cron (terminated by SIGTERM)\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:56:40,435 INFO stopped: unicorn (exit status 0)\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:56:41,438 INFO waiting for sidekiq to die\n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:56:44,446 INFO waiting for sidekiq to die\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[32mgitlab_1     | \u001b[0m2015-08-12 18:56:47,452 INFO waiting for sidekiq to die\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[33mredis_1      | \u001b[0m\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:54:02.084 # Server started, Redis version 2.8.4\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:54:02.084 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:54:02.085 * DB loaded from disk: 0.001 seconds\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:54:02.085 * The server is now ready to accept connections on port 6379\n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:54:02.085 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439373398) Received SIGTERM, scheduling shutdown...\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:56:38.350 # User requested shutdown...\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:56:38.350 * Saving the final RDB snapshot before exiting.\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:56:38.351 * DB saved on disk\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:56:38.351 * Removing the unix socket file.\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[33mredis_1      | \u001b[0m[1] 12 Aug 09:56:38.354 # Redis is now ready to exit, bye bye...\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:06:47.742 # Server started, Redis version 2.8.4\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:06:47.742 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:06:47.742 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:06:47.742 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439453337) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:08:57.792 # User requested shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:08:57.792 * Saving the final RDB snapshot before exiting.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:08:57.792 * DB saved on disk\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:08:57.792 * Removing the unix socket file.\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:08:57.792 # Redis is now ready to exit, bye bye...\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0m\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:10:32.581 # Server started, Redis version 2.8.4\n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:10:32.581 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:10:32.581 * The server is now ready to accept connections on port 6379\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:10:32.581 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439453497) Received SIGTERM, scheduling shutdown...\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:11:37.975 # User requested shutdown...\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:11:37.975 * Saving the final RDB snapshot before exiting.\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:11:37.975 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:11:37.975 * Removing the unix socket file.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:11:37.975 # Redis is now ready to exit, bye bye...\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[33mredis_1      | \u001b[0m\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:12:06.576 # Server started, Redis version 2.8.4\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:12:06.576 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:12:06.576 * DB loaded from disk: 0.000 seconds\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:12:06.576 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:12:06.576 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439453527) Received SIGTERM, scheduling shutdown...\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:12:07.383 # User requested shutdown...\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:12:07.383 * Saving the final RDB snapshot before exiting.\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:12:07.383 * DB saved on disk\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:12:07.383 * Removing the unix socket file.\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:12:07.383 # Redis is now ready to exit, bye bye...\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Dialog\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (TERM is not set, so the dialog frontend is not usable.)\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Readline\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[32mgitlab_1     | \u001b[0mdebconf: unable to initialize frontend: Readline\n\u001b[32mgitlab_1     | \u001b[0mdebconf: (This frontend requires a controlling tty.)\n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[32mgitlab_1     | \u001b[0mdebconf: falling back to frontend: Teletype\n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:15:44.404 # Server started, Redis version 2.8.4\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:15:44.404 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:15:44.404 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:15:44.404 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439453818) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:16:58.423 # User requested shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:16:58.423 * Saving the final RDB snapshot before exiting.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:16:58.423 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:16:58.423 * Removing the unix socket file.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:16:58.423 # Redis is now ready to exit, bye bye...\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:18:36.766 # Server started, Redis version 2.8.4\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:18:36.766 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:18:36.766 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:18:36.766 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439453943) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:03.154 # User requested shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:03.154 * Saving the final RDB snapshot before exiting.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:03.154 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:03.154 * Removing the unix socket file.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:03.154 # Redis is now ready to exit, bye bye...\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:11.235 # Server started, Redis version 2.8.4\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:11.235 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:11.235 * DB loaded from disk: 0.000 seconds\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:11.235 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:11.235 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439453952) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:12.245 # User requested shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:12.245 * Saving the final RDB snapshot before exiting.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:12.245 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:12.245 * Removing the unix socket file.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:19:12.245 # Redis is now ready to exit, bye bye...\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:24:13.848 # Server started, Redis version 2.8.4\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:24:13.848 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:24:13.848 * DB loaded from disk: 0.000 seconds\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:24:13.848 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:24:13.848 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439454278) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:24:38.601 # User requested shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:24:38.601 * Saving the final RDB snapshot before exiting.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:24:38.601 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:24:38.601 * Removing the unix socket file.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:24:38.601 # Redis is now ready to exit, bye bye...\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:25:02.041 # Server started, Redis version 2.8.4\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:25:02.041 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:25:02.041 * DB loaded from disk: 0.000 seconds\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:25:02.041 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:25:02.041 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439454303) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:25:03.146 # User requested shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:25:03.146 * Saving the final RDB snapshot before exiting.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:25:03.146 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:25:03.146 * Removing the unix socket file.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:25:03.146 # Redis is now ready to exit, bye bye...\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:45:57.946 # Server started, Redis version 2.8.4\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:45:57.946 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:45:57.946 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:45:57.946 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439455559) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:45:59.149 # User requested shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:45:59.149 * Saving the final RDB snapshot before exiting.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:45:59.149 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:45:59.149 * Removing the unix socket file.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 08:45:59.149 # Redis is now ready to exit, bye bye...\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:00:38.812 # Server started, Redis version 2.8.4\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:00:38.812 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:00:38.812 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:00:38.812 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439456440) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:00:40.118 # User requested shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:00:40.118 * Saving the final RDB snapshot before exiting.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:00:40.118 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:00:40.119 * Removing the unix socket file.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:00:40.119 # Redis is now ready to exit, bye bye...\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:21:43.230 # Server started, Redis version 2.8.4\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:21:43.230 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:21:43.231 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:21:43.231 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439457793) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:13.182 # User requested shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:13.182 * Saving the final RDB snapshot before exiting.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:13.182 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:13.182 * Removing the unix socket file.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:13.182 # Redis is now ready to exit, bye bye...\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:19.698 # Server started, Redis version 2.8.4\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:19.698 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:19.698 * DB loaded from disk: 0.000 seconds\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:19.698 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:19.698 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[33mredis_1      | \u001b[0m[1 | signal handler] (1439457800) Received SIGTERM, scheduling shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:20.707 # User requested shutdown...\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:20.707 * Saving the final RDB snapshot before exiting.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:20.708 * DB saved on disk\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:20.708 * Removing the unix socket file.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:20.708 # Redis is now ready to exit, bye bye...\n\u001b[33mredis_1      | \u001b[0mStarting redis-server...\n\u001b[33mredis_1      | \u001b[0m                _._                                                  \n\u001b[33mredis_1      | \u001b[0m           _.-``__ ''-._                                             \n\u001b[33mredis_1      | \u001b[0m      _.-``    `.  `_.  ''-._           Redis 2.8.4 (00000000/0) 64 bit\n\u001b[33mredis_1      | \u001b[0m  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n\u001b[33mredis_1      | \u001b[0m (    '      ,       .-`  | `,    )     Running in stand alone mode\n\u001b[33mredis_1      | \u001b[0m |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n\u001b[33mredis_1      | \u001b[0m |    `-._   `._    /     _.-'    |     PID: 1\n\u001b[33mredis_1      | \u001b[0m  `-._    `-._  `-./  _.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |           http://redis.io        \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n\u001b[33mredis_1      | \u001b[0m |    `-._`-._        _.-'_.-'    |                                  \n\u001b[33mredis_1      | \u001b[0m  `-._    `-._`-.__.-'_.-'    _.-'                                   \n\u001b[33mredis_1      | \u001b[0m      `-._    `-.__.-'    _.-'                                       \n\u001b[33mredis_1      | \u001b[0m          `-._        _.-'                                           \n\u001b[33mredis_1      | \u001b[0m              `-.__.-'                                               \n\u001b[33mredis_1      | \u001b[0m\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:41.959 # Server started, Redis version 2.8.4\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:41.959 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:41.959 * DB loaded from disk: 0.000 seconds\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:41.959 * The server is now ready to accept connections on port 6379\n\u001b[33mredis_1      | \u001b[0m[1] 13 Aug 09:23:41.959 * The server is now ready to accept connections at /var/run/redis/redis.sock\n\u001b[32mgitlab_1     | \u001b[0minvoke-rc.d: policy-rc.d denied execution of restart.\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key': No such file or directory\n\u001b[32mgitlab_1     | \u001b[0mmv: cannot stat '/etc/ssh/ssh_host_*_key.pub': No such file or directory\n\u001b[32mzix_gitlab_1 exited with code 1\n\u001b[0mGracefully stopping... (press Ctrl+C again to force)\nStopping zix_redis_1... \nStopping zix_postgresql_1... \n\u001b[2A\u001b[2K\nStopping zix_redis_1... done\n\u001b[2B\u001b[1A\u001b[2K\nStopping zix_postgresql_1... done\n\u001b[1B\n. ",
    "leriel": "Hello. The issue with VM restart is that /srv/docker/gitlab/ used in volumes, gets cleared out\n(in my installation, for some reason empty directory /srv/docker/gitlab/gitlab/ssh is only left after restart)\nIf you want to gitlab live from restart to restart, you should change target directory volume.\nI am not sure what is best practice for that - i used very crude /var/lib/boot2docker/gitlab dir to check if it fixes the problem.\n@mecp here is your docker-compose remade for changed directory\npostgresql:\n  image: sameersbn/postgresql:9.4-3\n  environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n  volumes:\n    - /var/lib/boot2docker/gitlab/postgresql:/var/lib/postgresql\ngitlab:\n  image: sameersbn/gitlab:7.13.4\n  links:\n    - redis:redisio\n    - postgresql:postgresql\n  ports:\n    - \"80:80\"\n    - \"10022:22\"\n  environment:\n    - TZ=Asia/Tokyo\n    - SMTP_ENABLED=True\n    - SMTP_DOMAIN=gmail.com\n    - SMTP_HOST=smtp.gmail.com\n    - SMTP_PORT=587\n    - SMTP_USER=xxxxxxx@gmail.com\n    - SMTP_PASS=xxxxxxx\n    - SMTP_STARTTLS=true\n    - SMTP_AUTHENTICATION=login\n    - GITLAB_TIMEZONE=Osaka\n    - GITLAB_HOST=gitlabvm\n    - GITLAB_PORT=80\n    - GITLAB_SSH_PORT=10022\n    - GITLAB_EMAIL=xxxxxxx@gmail.com\n    - GITLAB_EMAIL_REPLY_TO=xxxxxxx@gmail.com\n    - GITLAB_BACKUPS=daily\n    - GITLAB_BACKUP_TIME=01:00\n  volumes:\n    - /var/lib/boot2docker/gitlab/gitlab:/home/git/data\nredis:\n  image: sameersbn/redis:latest\n  volumes:\n    - /var/lib/boot2docker/redis:/var/lib/redis\nProper directory should target path like /mnt/sda1/etc/gitlab - but i'm not sure where to add proper hardlink on startup, not to target /mnt directly (/var/lib/boot2docker targets /mnt but indirectly)\n. ",
    "StarpTech": "Same issue here Windows 10 with Docker for Windows. I just try to start the docker-compose.yml but it fails.. ",
    "vince67": "@sameersbn \nI installed the cron job on host not the container. \nAnd those ... mean '/mypath/to/backups.sh',  :).\nHere is the file backups.sh:\nbash\ndocker run \\\n    --name='gitlab-backup' \\\n    -it \\\n    --rm \\\n    --link gitlab-mysql:mysql \\\n    --link gitlab-redis:redisio \\\n    -v /var/run/docker.sock:/run/docker.sock \\\n    -v $(which docker):/bin/docker \\\n    -v /path/on/host/data:/home/git/data \\\n    -v /path/on/host/log:/var/log/gitlab \\\n    sameersbn/gitlab:7.10.4 app:rake gitlab:backup:create\nIn fact, I have enabled the automated backups in gitlab container's start env file.\nwhen run docker inspect gitlab, can find these sentences:\nbash\n \"GITLAB_BACKUP=daily\",\n \"GITLAB_BACKUP_EXPIRY=604800\",\n \"GITLAB_BACKUP_TIME=04:00\",\nBut I haven't get any backups , that's why I tried  the crontab.\nAnd sure I have mounted /home/git/data into /path/on/host/data, /var/log/gitlab into /path/on/host/log.\nI can see logs correctly but no backups.\n. @sameersbn \nI installed the cron job on host not the container. \nAnd those ... mean '/mypath/to/backups.sh',  :).\nHere is the file backups.sh:\nbash\ndocker run \\\n    --name='gitlab-backup' \\\n    -it \\\n    --rm \\\n    --link gitlab-mysql:mysql \\\n    --link gitlab-redis:redisio \\\n    -v /var/run/docker.sock:/run/docker.sock \\\n    -v $(which docker):/bin/docker \\\n    -v /path/on/host/data:/home/git/data \\\n    -v /path/on/host/log:/var/log/gitlab \\\n    sameersbn/gitlab:7.10.4 app:rake gitlab:backup:create\nIn fact, I have enabled the automated backups in gitlab container's start env file.\nwhen run docker inspect gitlab, can find these sentences:\nbash\n \"GITLAB_BACKUP=daily\",\n \"GITLAB_BACKUP_EXPIRY=604800\",\n \"GITLAB_BACKUP_TIME=04:00\",\nBut I haven't get any backups , that's why I tried  the crontab.\nAnd sure I have mounted /home/git/data into /path/on/host/data, /var/log/gitlab into /path/on/host/log.\nI can see logs correctly but no backups.\n. Thx for attention.\nI fixed it. It's my fault to give a wrong configure value. \nCan get backups now by enabling the automated backups.\n. Thx for attention.\nI fixed it. It's my fault to give a wrong configure value. \nCan get backups now by enabling the automated backups.\n. @sameersbn \nThanks, it worked.\nI should't use cp -r to copy files.\n:)\n. @sameersbn  TAG\uff1a7.10.4\nI built this server 8 months ago, so the version may not be the latest.\n. ",
    "archcra": "What is the \"wrong configure value\"?. ",
    "larryzhao": "@sameersbn Thanks a lot. My docker version is Docker version 1.6.2, build 7c8fca2 on Ubuntu 12.04, and I was pulling from docker pull sameersbn/gitlab:7.11.2. Is it outdated/corrupted ?\n. @likol using /bin/bash gives the same output.\n$ docker exec -it gitlab /bin/bash\nno such file or directory\nCannot run exec command a8e6aaf39711e7180bab0c764d81758b4b61eafaaba2771f2758ef710d4fd9f4 in container 40c29d1e78982d80c35740c836d9a07996dffeb6cc38473b7fe83cba463b881c: [8] System error: no such file or directory\n                                                                                                                                                                                                                   Error starting exec command in container a8e6aaf39711e7180bab0c764d81758b4b61eafaaba2771f2758ef710d4fd9f4: Cannot run exec command a8e6aaf39711e7180bab0c764d81758b4b61eafaaba2771f2758ef710d4fd9f4 in container 40c29d1e78982d80c35740c836d9a07996dffeb6cc38473b7fe83cba463b881c: [8] System error: no such file or directory\n. @sameersbn launching bash in redis and postgresql both work fine.\n. @sameersbn Thanks, I will try that as soon as I have time.\n. @sameersbn Sorry for forgetting to update. I tried your suggestion, deleting the image and pulling the image from the hub again, and everything is fine.\n. ",
    "robinro": "nevermind, this was a configuration issue on our side\n. looks good to me, did not run it though\n. sleep 5?\nThis should not run by default.\nMake a variable to ask whether we look for the socket or not and if we do, do some quicker look to check for it which aborts after 5 secs.\n. ",
    "kixiro": "I repeated several times. :\n~: docker build -t gitlab .\nSending build context to Docker daemon 99.33 kB\nSending build context to Docker daemon \nStep 0 : FROM sameersbn/ubuntu:14.04.20150604\n14.04.20150604: Pulling from sameersbn/ubuntu\n4088bd6c4599: Download complete \n4088bd6c4599: Error pulling image (14.04.20150604) from sameersbn/ubuntu, Untar read tcp 54.230.44.176:443: i/o timeout\ne118faab2e16: Download complete \n7e2c5c55ef2c: Download complete \ne04c66a223c4: Download complete \nfa81ed084842: Download complete \nf5b77ae2c674: Download complete \nINFO[0126] Error pulling image (14.04.20150604) from sameersbn/ubuntu, Untar read tcp 54.230.44.176:443: i/o timeout \nIn log docker.log:\ntime=\"2015-06-10T11:05:41+03:00\" level=error msg=\"Error from V2 registry: unable to copy v2 image blob data: read tcp 54.230.46.99:443: i/o timeout\" \nError pulling image (14.04.20150604) from sameersbn/ubuntu, Untar read tcp 54.230.44.176:443: i/o timeout \ntime=\"2015-06-10T11:06:44+03:00\" level=info msg=\"-job pull(sameersbn/ubuntu, 14.04.20150604) = ERR (1)\" \nError pulling image (14.04.20150604) from sameersbn/ubuntu, Untar read tcp 54.230.44.176:443: i/o timeout\ntime=\"2015-06-10T11:06:44+03:00\" level=info msg=\"-job build() = ERR (1)\" \n. \u041e\u041a.\ndocker pull sameersbn/ubuntu\nlatest: Pulling from sameersbn/ubuntu\nd42614196ae9: Download complete \nd42614196ae9: Download complete \ne118faab2e16: Download complete \n7e2c5c55ef2c: Download complete \ne04c66a223c4: Download complete \nfa81ed084842: Download complete \ne468f2229f3f: Download complete \nStatus: Downloaded newer image for sameersbn/ubuntu:latest\n. ",
    "frdmn": "@sameersbn No, a usual Ubuntu 14.04.\u00a0\n\u200bI can try later on a OS X host, if that makes a difference. I'll report back :)\n. @sameersbn Just wanted to check the IP, and thought I restart from scratch, but now I can't start the gitlab container:\nshell\nroot@chewbacca /opt/docker-gitlab # docker-compose up\nRecreating dockergitlab_postgresql_1...\nRecreating dockergitlab_redis_1...\nCreating dockergitlab_gitlab_1...\nCannot start container 7070f5afe33fe4598a4c30f0cc22463085dcdd816913460fe7db0a698f0c1f97:  (exit status 1)\nHere's the --verbose output:\nhttp://paste.frd.mn/zohoh\nAny ideas?\n. Weird. I just removed existing containers and rebuild them:\nshell\ndocker-compose rm\ndocker-compose up\nNow it works. Thank you though @sameersbn \n. @sameersbn Nope, always have used the docker-compose way to build/run them.\n. @sameersbn Ah yes you are right of course, sorry for mixing that up. I didn't manually build the images. I just pulled them. \n. ",
    "urquilla": "I see, thank you very much\nOn Jun 10, 2015 22:21, \"Sameer Naik\" notifications@github.com wrote:\n\n@urquilla https://github.com/urquilla you need to specify the constant\nthat maps to your timezone listed here\nhttp://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html.\nFor example, if I want to set the timezone to Asia/Kolkata, I need to use\nGITLAB_TIMEZONE=Kolkata. Please check the constants listed in the above\nlink and use the appropriate one.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/342#issuecomment-110995319\n.\n. Just to report back, 8.1.0-1 working perfectly here\n. Thanks!\n. Guys,\n\nI see that the issue linked points to the difficulty of the mattermost configuration process, yet is not clear for me how this clarifies how to setup the integrated mattermost though the env variables exposed on this container.\nOr is this a way saying that the current env variables on the docker container aren't enough for the setting up of mattermost?\nShould I get in with docker exec and handle the files myself in this case?\nThanks,. ",
    "zetxx": "I believe that this question is not for here, you should see how you can create systemd service \n. ",
    "Z3roCoder": "I have tried it with systemd but I have no idea how to correctly manage the container to \"start|stop|restart\" correctly. And I haven't found an example online either.\nIs there someone who already did this and could help me out?\n. I second that. Does not work for me either. Set up a reverse Proxy, configured it correctly (other projects work as well so it is not my error). I can enter \"qweqweqwe\" into GITLAB_HOST and it does not change anything at all.\n. @sameersbn It would be awesome if you could look into that\n. The only thing that changes for me when using GITLAB_HOST is the access to the SSL/HTTP-Repository. I can write \"dasdasda\" into GITLAB_HOST and still acces it via \"localhost:10080\", and when I make a reverse proxy, saying it should lead to \"http://myIP.com/gitlab\" and I access that site, I get instantly led to \"http://myIP.com/users/sign_in\"\n. @sameersbn - A reverse Proxy usually leads to www.myWebsite.com/gitlab and not gitlab.mywebsite.com\nis there any way to do this correctly?\n. I have set GITLAB_PORT to 80, yet it is always shown as 10080 inside of my projects when going to the option to download it, aka\nhttp://[url]:10080/gitlab/root/gh.git\nshould be \nhttp://[url]:80/gitlab/root/gh.git\nDo I have to do more than just change GITLAB_PORT?\n. Why are then still logs located at /home/git/gitlab/log ? Even in config-files that is the log-location they are beeing written into\n. All I did was mounting the log-Volume from Gitlab to my host system, tell the logstash container to mount the gitlab-log folder and defined the logs in the \"path\" config of logstash and the moment logstash begins reading the files, gitlab crashes.\n. The files are owned by root and are given rwx-Permissions for any user and group\n. ",
    "burkeazbill": "Sorry to comment on a closed issue, but I've just gotten into all this container stuff and this is the first app that I'm working with so I had a similar need - when the VM reboots, bring the containers back up. I went the easy route here by using docker-compose up -d \nThe key thing here was to add\nrestart: always\nin the docker-compose.yml. I added this immediately following each image: line so that each of the 3 images had the restart: always defined.\nI am now able to reboot my VM and see gitlab up and running afterwards without having to spend the extra time figuring out the systemd stuff from that article.\nIt may be a good idea to just add this line to the sample .yml file that is provided in this repository.\n. That certainly helped since I'm also running CentOS 7.\nOkay, took a bit of digging around since I'm new to docker and CentOS 7 way of managing stuff. \nMy first path of resolution had me disabling firewalld AND adding a command line option of --iptables=false to /etc/sysconfig/docker, but I didn't like this approach so I took a step back and re-evaluated the error message - time to learn a tiny bit more about iptables. The command essentially tells us exactly what we need to do in order for the command to work: we need to pre-create the DOCKER chain, and it needs to be in the \"nat\" table.\nBefore running docker-compose up, run the following:\niptables -t nat -N DOCKER\nIdeally, if your scripting can be updated to check for the existence of the DOCKER chain in the nat table and create it if not found, that would save an extra manual step. Sample script:\n!/bin/bash\nif ! iptables -t nat -n --list DOCKER 2>&1 >/dev/null; then\n  echo \"DOCKER chain not found on nat table, creating now...\"\n  iptables -t nat -N DOCKER\nfi\nAn additional issue (and resolution) I ran into was this:\ngitlab_1     | sed: -e expression #1, char 31: unknown option to `s'\ngitlab_gitlab_1 exited with code 1\nI saw a reply to this in another thread here, while I had the correctly formatted string: America/Los_Angeles, specifying Los_Angeles on the second entry in the docker-compose.yml did not work, neither did America/Los_Angeles. I had to specify as: America\\/Los_Angeles \nThat is a \\ in front of the / to escape it.. \n. ",
    "utrack": "@sameersbn whoops, typo : )\nYeah, GITLAB_HOST as it is in code, and clearing cache doesn't help. It works on your side?\n. Tried to remove folder \"tmp\" in the storage directory, assets were recompiled according to logs, cleared cache in FF after that - still doesn't work...\nAlso noticed that RSS/Atom links sometimes point to localhost:10080 as well. For now it's only @ any project's Commits. If you're not getting the same behaviour then it should be Gitlab's bug\n. @sameersbn Sorry for no updates from me, I'll check your nginx settings out this weekend. The docker launch string looks close to mine.\nMaybe it's relevant - I dunno. I did not put GITLAB_HOST envvar on first launch (when the database was migrated) - but I didn't find anything relevant to hosts in the DB anyway.\n. Tested your nginx settings, after adding\nproxy_set_header        Host                $http_host;\n    proxy_set_header        X-Real-IP           $remote_addr;\n    proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;\n    proxy_set_header        X-Forwarded-Proto   https;\n    proxy_set_header        X-Frame-Options     SAMEORIGIN;\nand changing proxy_pass http://gitlab/; to proxy_pass http://gitlab;\nit works as intended. Guess the issue can be closed, but it's a thing to add to README :+1: \n. Thanks for the hard work  :+1: :smile: \n. ",
    "hugoliv": "Hum, thanks for your answer. POP is activated since 16/07/2008 ;-) \nPerhaps it's caused by the need of SSL/TLS (https://support.google.com/a/answer/176600?hl=en) :\nPort 465 (SSL required).\nPort 587 (TLS required).\nDo I need to enable SSL to make mail works ?\n. Well, no problem to ping mail.google.com using docker exec. Can you help me to localize the gitlab logs ?\n. I've found them. Here is a little part of the production.log.\nTrying to add new user:\nStarted GET \"/\" for XX.XX.XX.XX at 2015-06-14 17:19:02 +0200\nProcessing by DashboardController#show as HTML\nCompleted 200 OK in 166ms (Views: 81.3ms | ActiveRecord: 18.8ms)\nStarted GET \"/?limit=20&offset=0\" for XX.XX.XX.XX at 2015-06-14 17:19:02 +0200\nProcessing by DashboardController#show as JSON\n  Parameters: {\"limit\"=>\"20\", \"offset\"=>\"0\"}\nCompleted 200 OK in 93ms (Views: 0.7ms | ActiveRecord: 14.6ms)\nStarted GET \"/admin\" for XX.XX.XX.XX at 2015-06-14 17:19:04 +0200\nProcessing by Admin::DashboardController#index as HTML\nCompleted 200 OK in 209ms (Views: 124.4ms | ActiveRecord: 27.6ms)\nSent mail to newuser_valid_email_adress@domain.fr (60039.3ms)\nChanging email in the gitlab profile\nThe email is admin@example.com even if I set something different using the environment variable)\nStarted PUT \"/profile\" for XX.XX.XX.XX at 2015-06-14 21:47:32 +0200\nProcessing by ProfilesController#update as HTML\n  Parameters: {\"utf8\"=>\"?~~S\", \"authenticity_token\"=>\"[FILTERED]\", \"user\"=>{\"name\"=>\"Administrator\", \"email\"=>\"my_user_id@gmail.com\", \"public_email\"=>\"\", \"skype\"=>\"\", \"linkedin\"=>\"\", \"twitter\"=>\"\", \"websit\ne_url\"=>\"\", \"location\"=>\"\", \"bio\"=>\"\"}}\nRedirected to http://sub.domain.fr/profile\nCompleted 302 Found in 890ms (ActiveRecord: 25.8ms)\nStarted GET \"/profile\" for XX.XX.XX.XX at 2015-06-14 21:47:33 +0200\nProcessing by ProfilesController#show as HTML\nCompleted 200 OK in 266ms (Views: 201.9ms | ActiveRecord: 20.3ms)\nSent mail to my_user_id@gmail.com (545.1ms)\nStarted GET \"/profile/account\" for XX.XX.XX.XX at 2015-06-14 21:47:39 +0200\nProcessing by Profiles::AccountsController#show as HTML\nCompleted 200 OK in 250ms (Views: 181.6ms | ActiveRecord: 16.5ms)\nStarted GET \"/profile\" for XX.XX.XX.XX at 2015-06-14 21:47:41 +0200\nProcessing by ProfilesController#show as HTML\nCompleted 200 OK in 276ms (Views: 200.1ms | ActiveRecord: 23.8ms)\nSent mail to my_user_id@gmail.com (508.7ms)\nSent mail to my_user_id@gmail.com (696.5ms)\n. Yes, I did it. But I don't receive any email at all so there is no way to confirm a new user signing.\n. Hi,\nHere is another error observed in the sidekiq.log:\nWARN: {\"retry\"=>true, \"queue\"=>\"mailer\", \"class\"=>\"Devise::Async::Backend::Sidekiq\", \"args\"=>[\"confirmation_instructions\", \"User\", \"48\",\n\"S3jhb4eftD4dqPjG_Nyf\", {}], \"jid\"=>\"f2edc0e0a821eb27a40d25b5\", \"enqueued_at\"=>1434549275.3202198, \"error_message\"=>\"534-5.7.14 https://accounts.google.com/ContinueSignIn?sarp\n=1&scc=1&plt=AKgnsbsWE\\n\", \"error_class\"=\"Net::SMTPAuthenticationError\", \"failed_at\"=>1434549276.0376217, \"retry_count\"=>1, \"retried_at\"=>1434549319.7833877}\n2015-06-17T13:55:19.790Z 285 TID-we4ak WARN: 534-5.7.14 <https://accounts.google.com/ContinueSignIn?sarp=1&scc=1&plt=AKgnsbsWE\nAny idea ?\n. Hum,\nDo not forget to enable connections from new app in your google account settings...\n[http://stackoverflow.com/questions/18124878/netsmtpauthenticationerror-when-sending-email-from-rails-app-on-staging-envir]\n. Yes, it is. Could you please add one line in the readme to help upcoming user ?\n. ",
    "ltchronus": "@sameersbn I also have the same problem.\nyml:\n```\ngitlab:\n  restart: always\n  image: sameersbn/gitlab:8.0.4\n  links:\n    - redis:redisio\n    - postgresql:postgresql\n  ports:\n    - \"10080:80\"\n    - \"10022:22\"\n    - \"465:465\"\n    - \"587:587\"\n  environment:\n    - DEBUG=false\n    - TZ=Asia/Kolkata\n    - GITLAB_TIMEZONE=Kolkata\n    - GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string\n    - GITLAB_HOST=localhost\n    - GITLAB_PORT=10080\n    - GITLAB_SSH_PORT=10022\n    - GITLAB_RELATIVE_URL_ROOT=\n- GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n- GITLAB_NOTIFY_PUSHER=false\n\n- GITLAB_EMAIL=XXX@XXX.com\n- GITLAB_EMAIL_REPLY_TO=XXX@XXX.com\n- GITLAB_INCOMING_EMAIL_ADDRESS=XXX@XXX.com\n\n- GITLAB_BACKUPS=daily\n- GITLAB_BACKUP_TIME=01:00\n\n- SMTP_ENABLED=true\n- SMTP_DOMAIN=smtp.exmail.qq.com\n- SMTP_HOST=smtp.exmail.qq.com\n- SMTP_PORT=465\n- SMTP_USER=XXX@XXX.com\n- SMTP_PASS=XXX\n- SMTP_STARTTLS=false\n- SMTP_AUTHENTICATION=login\n\n- IMAP_ENABLED=false\n- IMAP_HOST=imap.gmail.com\n- IMAP_PORT=993\n- IMAP_USER=mailer@example.com\n- IMAP_PASS=password\n- IMAP_SSL=true\n- IMAP_STARTTLS=false\n\nvolumes:\n    - /srv/docker/gitlab/gitlab:/home/git/data\n```\ndocker info \nContainers: 3\nImages: 100\nStorage Driver: devicemapper\n Pool Name: docker-202:17-524291-pool\n Pool Blocksize: 65.54 kB\n Backing Filesystem: extfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 3.323 GB\n Data Space Total: 107.4 GB\n Data Space Available: 27.66 GB\n Metadata Space Used: 5.145 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.142 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Data loop file: /mnt/docker/devicemapper/devicemapper/data\n Metadata loop file: /mnt/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.95-RHEL6 (2015-09-08)\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 2.6.32-573.7.1.el6.x86_64\nOperating System: <unknown>\nCPUs: 4\nTotal Memory: 3.739 GiB\nName: Nodejs_Pre\nID: 37E4:36JM:66JD:YFJU:4OW6:AOHI:7OTE:NIN3:W2AI:GTK5:PO6U:HAP5\nI try gmail turns out the same result. \n. Redirected to http://gitlab.airtake.me/admin/users/43243\nCompleted 302 Found in 692ms (ActiveRecord: 21.6ms)\nStarted GET \"/admin/users/43243\" for 112.16.79.214 at 2015-12-04 14:45:06 +0530\nProcessing by Admin::UsersController#show as HTML\nParameters: {\"id\"=>\"43243\"}\nCompleted 200 OK in 93ms (Views: 56.1ms | ActiveRecord: 9.9ms)\nSent mail to xxxx@xxxx.com (60127.1ms)\nStarted GET \"/admin/application_settings\" for 112.16.79.214 at 2015-12-04 14:47:42 +0530\nProcessing by Admin::ApplicationSettingsController#show as HTML\nCompleted 200 OK in 113ms (Views: 84.1ms | ActiveRecord: 5.5ms)\nStarted GET \"/admin/logs\" for 112.16.79.214 at 2015-12-04 14:47:44 +0530\nProcessing by Admin::LogsController#show as HTML\nThe logs seems that it has snet mail.\n. Solved with change SMTP_PORT to 25, SMTP_DOMAIN to smtp.qq.com\n. #479 dosen't work.\ndocker-machine ip default\n192.168.99.100\ncurl http://192.168.99.100:10080\ncurl: (7) Failed to connect to 192.168.99.100 port 10080: Connection refused\n. After I rm all containers, restart with docker-compose up. It works.\ncurl http://192.168.99.100:10080/\n<html><body>You are being <a href=\"http://192.168.99.100:10080/users/sign_in\">redirected</a>.</body></html>%\n. ",
    "axilleas": "Smells like a permission/ownership issue. Can you check who owns the logs when logstash reads them?\n. ",
    "blacksails": "I made the following pull request showing what i mean: #351 \n. ",
    "innuendonh": "Thank you!\nIt was my first thought, but I had issues in upgrading gitlab on gentoo so\nI tried to avoid having to install anything separated from the image.\nActually, I hoped I could achieve this as a configuration in ssh, but I\ncould not find any way to implement this behaviour. I hope this can be\nuseful for someone.\nIl 22/giu/2015 19:08, \"Sameer Naik\" notifications@github.com ha scritto:\n\n@innuendonh https://github.com/innuendonh I think you can install\ngitlab-shell on the host itself and use GITLAB_SSH_HOST if required. I\nhaven't tried this but should probably work.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/356#issuecomment-114180669\n.\n. An update: I am having issues with this setup regarding file permissions.\nWhat I suspect is that docker exec runs gitlab-shell as root, creating some files owned by root in the objects directory.\nI am testing a little modification of the setup currently:\n\n```\n!/bin/bash\ndocker exec -i -u git gitlab_gitlab_1 sh -c \\\n \"SSH_CONNECTION='$SSH_CONNECTION' SSH_ORIGINAL_COMMAND='$SSH_ORIGINAL_COMMAND' /home/git/gitlab-shell/bin/gitlab-shell $1\"\n```\nWhich means that I force the command to use the gituser instead of the default one (root).\nEDIT: I actually checked that this change solves permission issues,\n. Does this update include fixes introduced in https://about.gitlab.com/2018/01/23/gitlab-10-dot-3-dot-6-released/?\nIn would be very nice to have 10.3.6 merged here before 10.4...... ",
    "kwizzn": "Thanks @innuendonh, I had to solve the same problem and found your solution great!\nI ended up setting the data dir as the git user's home so I didn't have the linking problem for .ssh/authorized_keys.\nIn order to make the docker exec command work, the git user needs to be in the docker group.\nOh, and I believe the path has changed to /opt/gitlab/embedded/service/gitlab-shell/bin/gitlab-shell.\n. ",
    "IlyaSemenov": "It could be further simplified as:\n``` bash\n!/bin/bash\nProxy SSH requests to docker container\ndocker exec -i -u git gitlab sh -c \"SSH_CONNECTION='$SSH_CONNECTION' SSH_ORIGINAL_COMMAND='$SSH_ORIGINAL_COMMAND' $0 $1\"\n``\n. This can be achieved with [incron](http://inotify.aiken.cz/?section=incron&page=about&lang=en), the updated guide in #737 explains this in details.\n. @sameersbn I did as you asked, please check the updated PR.\n. @apertureless I rebased the PR against 8.10.4\nI also published a Docker image with the applied patch as ilyasemenov/gitlab:8.10.4 (see https://hub.docker.com/r/ilyasemenov/gitlab/tags/)\n. This is surely a hack, but for now it gets its job done. Revealing the list of _public_ keys is not much of a vulnerability in most circumstances. In a sense, this is not much different from revealing/etc/passwd` which is already world-readable.\nIn the end, yes, it would suffice to provide a way for Redmine to use repositories with non-default UID/GID, although that would be hacky as well. To support arbitrary GID, one would end up with  something like:\n``` bash\nIn Redmine or other container that needs to access Gitlab data directory\ngroup=$(getent group $GID | cut -d: -f1)\nif [ -z \"$group\" ]; then\n    group=group_$gid\n    groupadd -g $gid $group\nfi\nusermod -aG $group www-data\n```\nNot very elegant at best, and in theory prone to vulnerabilities as well (if GID matches with some non-secure service inside the container).\n. Anyway, I removed SSH_AUTHORIZED_KEYS_WORLD_READABLE and now this PR is purely about adding the guide. The permissions problem when keeping default uid/gid is now advised to be solved with incron. The guide specifically includes the warning for that case:\nPLEASE NOTE: keeping .authorized_keys world-readable brings a security risk. Use this method with discretion.\n. @ostueker:\n1) I am personally not advocating this paranoia, but it is indeed a common belief that authorized_keys shoud not be world-readable. In particular, openssh with StrictModes yes specifically checks that authorized_keys permissions are set to 600.\n2) In case of GitLab, I believe there is a certain additional security risk of exposing the list of key names (thus, in away, revealing users who use this particular GitLab installation).\n3) In any case, I've updated the incron script to use group-readable authorized_keys rather than world-readable, so it's not a problem anymore. And it's only used for certain scenarios when you want different uid/gid for git on the host and on the container, which is not the default and suggested way.\n. ATTENTION Seems like the incrond script that I've included suffers from the dead loop and raises thousands of zombies, please don't use it directly.\nEdit: resolved by the commit below.\n. @MichaelEischer I agree that you bring valid security concern, and that the double SSH trick will avoid it. What I'm thinking however is that perhaps it's easier to remove the host git user from docker group and instead add a custom sudo rule on the host which allows user git to run sudo docker exec -i -u git gitlab <anything> specifically (I don't think /etc/sudoers allows wildcard arguments, so it will rather need one more root-owned proxy script that will pull environment variables and actually run docker exec).. I updated the document correspondingly. Thanks for bringing this matter up, @MichaelEischer.. I see. Yes, since you added support for the proxy key to the core this method is easier and more reliable as it doesn't need to monitor permissions. My PR was working with unmodified docker-gitlab. I believe it's fully superseded now, indeed.\nWhat I don't like in your new guide is that it tells to run the large bash script on the host without any explanation on what it's going to do and which distros it's compatible with. But, who cares.... Inconsistent comment indentation (also inconsistent spaces after # here and above)\n. Thanks, fixed this one.\n. Shouldn't this be indented? Also, the empty line below seems to be out of order (it should follow } not precede it).. Fixed both typos. Thanks.. I personally use incron permissions fixer on two different GitLab installs and it works fine. It's far from being elegant for sure, but it gets the job done.. ",
    "sp4ke": "Hi guys, \nI have the same issue since I updated from 7.10.0 which worked fine to 7.13.2. \nMy configuration is the same as @GottZ I am doing a reverse nginx proxy and only forward https traffic on port 443. \nSince the upgrade the :80 is appended to the redirect uri which creates the mismatch error. \nI am using  docker-compose with the docker image, I did not change any parameter since the upgrade other than the certificate and domain name. \nHere's my config for gitlab:\nhttps://gist.github.com/sp4ke/e3a2312ca41520539ab9\nAnd here's an example of the redirect uri:\nhttps://github.com/login/oauth/authorize?response_type=code&client_id=53f00753e5f4b4574016&redirect_uri=https://git.marbelium.com:80/users/auth/github/callback&state=999e42f13c1071c142fa427d4de06738668b311d4c290a2e&scope=user:email\nLet me know if I can help debug or give you more details to fix this issue.\n. @sameersbn @ruuds I upgraded from 7.10.0 to 7.13.2 and ssh is not working any more with port 10022. I explicitly open 10022 on the host firewall to make sure it was not the source problem. \nWhat can I do to fix this ? \n. @ruuds I also tried disabling the parameter with no luck. \nEven after downgrading to 7.10.0 I still couldn't use ssh. After an hour or so digging I found out that the upgrade messed up the file premissions on the ssh folder of the data store. Fixing the the premissions fixed ssh access. \nSo I guess my issue was not related to yours, I can't risk to upgrade again since there's another issue blocking me. \n. @sameersbn thanks you're welcome \n. ",
    "fizz": "This just bit me after upgrading, GitLab started appending :80 to my redirect_uri. I found that I had both GITLAB_HTTPS=true and GITLAB_PORT=80 set in my environment. When I unset GITLAB_PORT, Google OAuth magically started working again.\n. ",
    "NineSwordsMonster": "Hi,\nThere is a problem, everytime I set --env='SMTP_HOST=smtp.163.com' then ,I get this message Unable to find image ' :latest' locally .And I don't have any idea about this. Does it only support Gmail ?\n. There is my command\ndocker run --name=gitlab -d  \\\n--link=redis-gitlab:redisio \\\n--link=mysql-gitlab:mysql \\\n--publish=10022:22 --publish=10080:80 \\\n--env='GITLAB_PORT=10080' --env='GITLAB_SSH_PORT=10022' \\\n--env='SMTP_ENABLED=true' \\\n--env='SMTP_DOMAIN=163.com' \\ \n--env='SMTP_HOST=smtp.163.com' --env='SMTP_PORT=25' \\\n--env='SMTP_USER=name@163.com' --env='SMTP_PASS=passwd' \\\n--volume=/srv/docker/gitlab/gitlab:/home/git/data \\\nsameersbn/gitlab:latest\n. oh dear,that is ! Thanks !\n. I Have Solve This problem ,I create the gitlabhq_production database,but I try connet to gitlab ! \n. I Have Solve This problem ,I create the gitlabhq_production database,but I try connet to gitlab ! \n. ",
    "abhas": "I can confirm that quoting the string in the Ansible task did help. Adding the shopt line worked as well. Thanks a lot!\n. ",
    "Toub": "I can confirm the same behavior using docker compose.\n. ",
    "dbrgn": "Aaaah, @akaihola, I just spent about 1-2 hours debugging SMTP. Thanks for this!\n. ",
    "atlasian": "@sameersbn I don't use compose, I've launched gitlab manually with : \ndocker run --name='gitlab' -d   --link=postgresql-gitlab:postgresql --link=redis-gitlab:redisio   --\npublish=10022:22 --publish=10080:80   --env='GITLAB_PORT=10080' --\nenv='GITLAB_SSH_PORT=10022'   --volume=/srv/docker/gitlab/gitlab:/home/git/data --\nvolume=/srv/docker/gitlab/logs:/var/log/gitlab sameersbn/gitlab:7.12.0\nand of course this after running the supporting containers postgresql-gitlab and redis-gitlab..\nand here is the output of the gitlab container : \nWaiting for database server to accept connections\nStarting supervisord...\n2015-06-30 15:11:44,618 CRIT Supervisor running as root (no user in config file)\n2015-06-30 15:11:44,619 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\n2015-06-30 15:11:44,619 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\n2015-06-30 15:11:44,619 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\n2015-06-30 15:11:44,619 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\n2015-06-30 15:11:44,619 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\n2015-06-30 15:11:44,728 INFO RPC interface 'supervisor' initialized\n2015-06-30 15:11:44,728 CRIT Server 'unix_http_server' running without any HTTP authentication checking\n2015-06-30 15:11:44,728 INFO supervisord started with pid 1\n2015-06-30 15:11:45,733 INFO spawned: 'sidekiq' with pid 270\n2015-06-30 15:11:45,735 INFO spawned: 'unicorn' with pid 271\n2015-06-30 15:11:45,739 INFO spawned: 'cron' with pid 272\n2015-06-30 15:11:45,742 INFO spawned: 'nginx' with pid 273\n2015-06-30 15:11:45,755 INFO spawned: 'sshd' with pid 274\n2015-06-30 15:11:47,177 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-06-30 15:11:47,177 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-06-30 15:11:47,178 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-06-30 15:11:47,178 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-06-30 15:11:47,178 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-06-30 15:13:41,751 INFO exited: unicorn (exit status 1; not expected)\n2015-06-30 15:13:42,820 INFO spawned: 'unicorn' with pid 333\n2015-06-30 15:13:43,822 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-06-30 15:13:49,942 CRIT reaped unknown pid 309)\n2015-06-30 15:13:49,946 CRIT reaped unknown pid 302\n. @sameersbn it worked, thx, I've increased the available RAM for the docker host (and ended up using docker compose)\n. ",
    "renrenfree": "the same question.\nthe error:\n[root@server ~]# ssh -v  git@localhost:10022\nOpenSSH_6.6.1, OpenSSL 1.0.1e-fips 11 Feb 2013\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 56: Applying options for *\nssh: Could not resolve hostname localhost:10022: Name or service not known\n.  container-ip:22 is ok but docker host vm :10022 is not work  .what is the error?\n. I opened 10022 . I used localhost  but it's not work\n. I closed firewalld bug it's not work\n. thank you @sameersbn .\n it's ok. i don't know how it's ok. but Just can\n. ",
    "shaunc": "@sameersbn ... thanks ... hmm -- looks like there are no restrictions on the OUTPUT chain:\n\nBoot2Docker version 1.7.0, build master : 7960f90 - Thu Jun 18 18:31:45 UTC 2015\nDocker version 1.7.0, build 0baf609\ndocker@boot2docker:~$ sudo iptables -nL | grep 8018\ndocker@boot2docker:~$ sudo iptables -nL \nChain INPUT (policy ACCEPT)\ntarget     prot opt source               destination         \nChain FORWARD (policy ACCEPT)\ntarget     prot opt source               destination\nDOCKER     all  --  0.0.0.0/0            0.0.0.0/0\nACCEPT     all  --  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED\nACCEPT     all  --  0.0.0.0/0            0.0.0.0/0\nACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           \nChain OUTPUT (policy ACCEPT)\ntarget     prot opt source               destination         \nChain DOCKER (1 references)\ntarget     prot opt source               destination\nACCEPT     tcp  --  0.0.0.0/0            172.17.0.40          tcp dpt:22\nACCEPT     tcp  --  0.0.0.0/0            172.17.0.40          tcp dpt:80\nACCEPT     tcp  --  0.0.0.0/0            172.17.0.52          tcp dpt:80\n. ",
    "ruuds": "I had a similar issue today after upgrading from 7.11.4-1 to 7.13.2. GITLAB_SSH_PORT=10022 seems to be ignored after the upgrade; SSH did still run on port 22.\n. @sp4ke That was exactly our problem. We had GITLAB_SSH_PORT=10022 configured, but mapped the container's port 10022 to port 22 on the docker host. This stopped to work after the upgrade. Removing the GITLAB_SSH_PORT solved our problem because we would run it on port 22 anyways.\n. ",
    "outcoldman": "@sameersbn true, but it is imposssible when you are trying to avoid mounting anything from the host and use only data volume containers. \nHow about more general solution, like allowing to specify GITLAB_CUSTOM_INIT_SCRIPT_PATH, which will be empty by default. This script willl allow to invoke any custom script from specified location before gitlab will be started. \nIn that case I will be able to create my own shell script plus with this logic of overriding robots.txt. \n. @arielschiavoni just specify GITLAB_PORT as 80 if you can access to the gitlab as http://gitlab.mydomain.com/users/confirmation?confirmation_token=xxxxxxxx\nThis setting does not change anything how gitlab is running, it is basically just to tell GitLab how to generate urls.\n. For some reason registry does not have 8.1.0 tag. Is it a known issue?\n. It is actually happening all the time.\nVery easy to reproduce, just create new gitlab environment and try to restore with specifying which backup you want to use and without -it \n. @ninja- using docker networking? \n. @ninja- why is this a problem? you can use docker network connect for that. Just start gitlab in gitlab network and add it later to front network using docker network connect\n. @frenchbeard it really depends on the environment and how secure you want to be. You can always go with the third option - have a dedicated network between proxy and gitlab.\n. ",
    "RoboMod": "I don't use a docker command. As mentioned I work with compose. The .yml file looks like this:\ngitlab:\n  image: sameersbn/gitlab:7.12.1\n  ...\n  environment:\n   - ...\n   - USERMAP_UID=$(id -u git)\n   - USERMAP_GID=$(id -g git)\n...\nIt works with the uid and gid numbers like in your parameters. But I think the idea is that you don't have to type in the numbers but use the id command instead.\n. Okay, thanks for the clarification. You should mention both in the documentation.\n. Ahm, sorry, but the documentation doesn't make clear that you cannot use the id command in a compose file. So, please, that should be added!\n. ",
    "gopeter": "Thanks!\nI've adjusted the config file for acceptance/ipad-vertriebsprasentation but I'm getting the same error.\nNow I've tried gitlab:import:repos but this doesn't work too. Now all repositories have an hook file which points to /opt/gitlab/embedded/service/gitlab-shell/hooks...\nroot@5581b4b6aef7:/home/git/data/repositories/acceptance/ipad-vertriebsprasesentation.git# ls -l\ntotal 68\ndrwxrwxrwx 2 root users 4096 Jul  7 16:03 @eaDir\n-rw-r--r-- 1 git  git     23 Jul 22  2014 HEAD\n-rw-r--r-- 1 git  git    181 Jul  7 16:03 config\n-rw-r--r-- 1 git  git     73 Jul 22  2014 description\nlrwxrwxrwx 1 git  git     47 Sep 24  2014 hooks -> /opt/gitlab/embedded/service/gitlab-shell/hooks\ndrwxr-xr-x 2 git  git   4096 Jul 22  2014 hooks.old.1411560698\ndrwxr-xr-x 2 git  git   4096 Jul 22  2014 info\ndrwxr-xr-x 4 git  git   4096 Jul 22  2014 objects\n-rw-r--r-- 1 git  git     98 Jul 22  2014 packed-refs\ndrwxr-xr-x 4 git  git   4096 Jul 22  2014 refs\nI don't get what's wrong.\n. I just removed the remote \"origin\" (newly created repositories doesn't include this remote too) from the config file and added a new symlink to the correct hooks directory. \nNow it works... but I have to edit all files manually (> 50 repositories...). Time for :beer: \nThank you very much for your help (and your app:sanitize and app:rake gitlab:satellites:create hints)! Maybe this issue is worth to mention in the readme (for all people who want to migrate from their Omnibus installations)?\n. Already done :)\n. Thanks! Didn't faced any issues, awesome image! Thank you so much for this :) Migrated GitLab in minutes. Docker ftw :beers: \n. It would be really great if the documentation could include the information about the colon :) This issue saved me hours.. I'm running GitLab pages with this config on my Synology:\n[...]\n\"env_variables\" : [\n    [...]    \n    {\n        \"key\" : \"GITLAB_PAGES_EXTERNAL_HTTP\",\n        \"value\" : \":8081\"\n    },\n    {\n        \"key\" : \"GITLAB_PAGES_ENABLED\",\n        \"value\" : \"true\"\n    },\n    {\n        \"key\" : \"GITLAB_PAGES_DOMAIN\",\n        \"value\" : \"pages.YOURDOMAIN.com\"\n    },\n    [...]\n],\n\"port_bindings\" : [\n    {\n        \"container_port\" : 22,\n        \"host_port\" : 11022,\n        \"type\" : \"tcp\"\n    },\n    {\n        \"container_port\" : 80,\n        \"host_port\" : 11080,\n        \"type\" : \"tcp\"\n    },\n    {\n        \"container_port\" : 8081,\n        \"host_port\" : 11082,\n        \"type\" : \"tcp\"\n    }\n],\n[...]\nTo make web applications work on port 80, I've created some extra vHosts with Nginx on the Synology:\n/etc/nginx/sites-enabled/git.YOURDOMAIN.com:\n```\nserver {\n    listen 80;\n    server_name git.YOURDOMAIN.com;\n    return 301 https://$host$request_uri;\n}\nserver {\n    listen 443 ssl http2;\n    server_name git.YOURDOMAIN.com;\nssl on;\nssl_certificate      /volume1/docker/gitlab-data/certs/git.YOURDOMAIN.com.pem;\nssl_certificate_key  /volume1/docker/gitlab-data/certs/git.YOURDOMAIN.com.key;\nssl_protocols       TLSv1 TLSv1.1 TLSv1.2;\nssl_ciphers         HIGH:!aNULL:!MD5;\n\nlocation / {\n    proxy_set_header    Host $host;\n    proxy_set_header    X-Real-IP $remote_addr;\n    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header    X-Forwarded-Ssl on;\n    proxy_set_header    X-Forwarded-Proto https;\n    proxy_redirect      off;\n\n    proxy_pass          http://localhost:11080;\n}\n\n}\n```\nand\n/etc/nginx/sites-enabled/pages.YOURDOMAIN.com (we're running GitLab pages over http at the moment):\n```\nserver {\n    listen 80;\n    server_name *.pages.YOURDOMAIN.com;\nlocation / {\n    proxy_set_header    Host $host;\n    proxy_set_header    X-Real-IP $remote_addr;\n    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header    X-Forwarded-Proto https;\n    proxy_redirect      off;\n\n    proxy_pass          http://localhost:11082;\n}\n\n}\n```\nHope this helps!. ",
    "arielschiavoni": "Thanks @outcoldman !, I thought that GITLAB_PORT was used to expose the gitlab's docker container port.\n. ",
    "RobeDevOps": "Sorry, that was my error...!!\n. When I create the user from the Admin Area and I try to login with this user, the gitlab throw an error saying that an email confirmation is needed.\n. I just want to insert more user and create a different branchs and send some commits and show to my team how gitlab is working on my local machine.\n. ",
    "kopax": "Cool :) it mean I am installing everything for nothing.\nIs it hard to update from docker-gitlab to another ?\n. I meant that I prefere to have an external protected redis server, so I am ready to reinstall everything\nI have no idea on how to update gitlab when using your image !\n. @sameersbn  Thanks for your reply, I am since more than a day now trying to figure out how to setup properly the load balancer.\nI have readen your doc 10 times now, and still have many details unclear on how it should work.\nNot using certs into containers does that mean the redirect will be from HTTPS to HTTP ?\nThen should I use only GITLAB_HTTPS=true and kept the GITLAB_PORT=10080 ?\nI am a bit confused with 10080:80 and 4443:443 container side, does both have to exist or is in on or the other ?\n. @sameersbn OK.\n- points 1,2,4 : I knew from the doc.\n- point 3 : OK\nEverything is a little more clear.\nSo I think it might come from my Gandi SSL nginx configuration now. I have renewed the certificate so I can't test at the moment.\nMy configuration look like this\nnginx.conf\n```\nuser www-data;\nworker_processes auto;\npid /var/run/nginx.pid;\nevents {\n  worker_connections 1024;\n}\nhttp {\n  sendfile on;\n  tcp_nopush on;\n  tcp_nodelay on;\n  keepalive_timeout 65;\ninclude /etc/nginx/mime.types;\n  default_type application/octet-stream;\naccess_log /var/log/nginx/access.log;\n  error_log /var/log/nginx/error.log;\n##\n  # Virtual Host Configs\n  ##\ninclude /etc/nginx/conf.d/.conf;\n  include /etc/nginx/sites-enabled/;\n}\n```\n/etc/nginx/sites-enabled/gitlab.conf\n```\nserver {\n  # Sample from https://github.com/jlecour/ssl-gandi-nginx-debian\n  # listen 80;\n  # rewrite ^ https://$host$request_uri? permanent; <===== why is this line different BTW ?\nlisten 80;\n  server_name www.domain.tld;\n  server_tokens off;\n  root /dev/null;\n  rewrite ^ https://$server_name$request_uri permanent;\n}\nupstream git {\n  server gitlab:10080;\n}\nserver {\n  listen 443 ssl spdy;\nserver_name www.domain.tld;\n  server_tokens off;\n  root /dev/null;\n## Increase this if you want to upload large attachments\n  ## Or if you want to accept large git objects over http\n  client_max_body_size 20m;\nadd_header Strict-Transport-Security max-age=63072000;\n  # add_header X-Frame-Options DENY;\n  add_header X-Content-Type-Options nosniff;\n## Individual nginx logs for this vhost\n  access_log  /var/log/nginx/gitlab_access.log;\n  error_log   /var/log/nginx/gitlab_error.log;\n## include domain ssl config\n  include /etc/nginx/domain_tld.ssl.conf;\n## proxy pass the request to upsteam.\n  location / {\n    ## If you use https make sure you disable gzip compression\n    ## to be safe against BREACH attack.\n    gzip off;\n## https://github.com/gitlabhq/gitlabhq/issues/694\n## Some requests take more than 30 seconds.\nproxy_read_timeout      300;\nproxy_connect_timeout   300;\nproxy_redirect          off;\n\nproxy_set_header    Host                $http_host;\nproxy_set_header    X-Real-IP           $remote_addr;\nproxy_set_header    X-Forwarded-Ssl     on;\nproxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;\nproxy_set_header    X-Forwarded-Proto   $scheme;\nproxy_set_header    X-Frame-Options     SAMEORIGIN;\n\nproxy_pass http://git;\n\n}\n}\n```\n/etc/nginx/domain_tld.ssl.conf\n```\nssl on;\ncerts sent to the client in SERVER HELLO are concatenated in ssl_certificate\nssl_certificate /etc/ssl/certs/domain_tld.chain.pem;\nssl_certificate_key /etc/ssl/private/domain_tld.key.pem;\nssl_session_timeout 24h;\nssl_session_cache shared:SSL:10m;\nDiffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits or better\nssl_dhparam /etc/ssl/dhparam.pem;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';\nssl_prefer_server_ciphers on;\nOCSP Stapling ---\nfetch OCSP records from URL in ssl_certificate and cache them\nssl_stapling on;\nssl_stapling_verify on;\nverify chain of trust of OCSP response using Root CA and Intermediate certs\nssl_trusted_certificate /etc/ssl/certs/gandi-standardssl-2.chain.pem;\nresolver 127.0.0.1;\n```\nI forgot to say that for test reason and mainly because I am not used to nginx location configuration, the gitlab is setup for www.domain.tld\nAt term, I want it to be defined at httpS://www.domain.tld/git\nSome other HTTP & HTTPS load balanced Node web application will used this nginx container to forward request to httpS://www.domain.tld/api and http://www.domain.tld\nThis, because signed certificate are pricy and I want to use only one.\nDo you know if the configuration will fit like this ? It seems all the redirect from 80 will be treated the same way.\n. My nginx and docker launch commands ? Not sure I understand.\nHere is my docker-compose for my nginx container :\nnginx:\n  build: ./nginx\n  ports:\n    - \"443:433\"\n    - \"80:80\"\n  volumes_from:\n    - data_data_1\n  external_links:\n    - gitlab_gitlab_1:gitlab\nAs GitLab, I launch it with docker-compose up\n. ```\ngitlab:\n  image: sameersbn/gitlab:7.12.2-2\n  links:\n    - redis:redisio\n  ports:\n    - \"10080:80\"\n    - \"22:22\"\n  environment:\nHTTP(S)\n- GITLAB_HTTPS=true\n\n- GITLAB_RELATIVE_URL_ROOT=/git\nLOCALES\n- TZ=Europe/Paris\n- GITLAB_TIMEZONE=Paris\n\nMYSQL\n- DB_TYPE=mysql\n- DB_HOST=sql.domain.com\n- DB_USER=gitlab\n- DB_PASS=123456\n\nSMTP\n- SMTP_ENABLED=true\n- SMTP_DOMAIN=www.domain.com\n- SMTP_HOST=smtp.domain.com\n- SMTP_PORT=587\n- SMTP_USER=git@domain.com\n- SMTP_PASS=789456\n- SMTP_STARTTLS=true\n- SMTP_AUTHENTICATION=login\n\nEMAIL\n- GITLAB_EMAIL=git@domain.com\n- GITLAB_EMAIL_REPLY_TO=no-reply@domain.com\n\nGITLAB\n- GITLAB_HOST=localhost\n- GITLAB_PORT=443\n- GITLAB_SSH_PORT=22\n\nBACKUP\n- GITLAB_BACKUPS=daily\n- GITLAB_BACKUP_TIME=01:00\n\nvolumes_from:\n    - data_data_1\nredis:\n  image: sameersbn/redis:latest\n  volumes:\n    - /srv/docker/gitlab/redis:/var/lib/redis\n```\n. @sameersbn If it can help you, these are extra informations \nThese are my firewall rules during configuration \n2    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:443 (Use by nginx)\n3    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:80 (Use by nginx)\n4    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:22 (Use by gitlab for ssh)\n5    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:10022 (Use for ssh)\n6    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:10080 (Use by gitlab nginx http server)\n7    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:4443 (Not used anymore, was for gitlab https)\nThese are my docker running container \nnginx_nginx:latest          \"nginx -g 'daemon of   15 minutes ago      Up 15 minutes       443/tcp, 0.0.0.0:80->80/tcp, 0.0.0.0:443->433/tcp    nginx_nginx_1\nsameersbn/gitlab:7.12.2-2   \"/sbin/entrypoint.sh   15 minutes ago      Up 15 minutes       0.0.0.0:22->22/tcp, 443/tcp, 0.0.0.0:10080->80/tcp   gitlab_gitlab_1\nsameersbn/redis:latest      \"/start\"               15 minutes ago      Up 15 minutes       6379/tcp                                             gitlab_redis_1\nUsing http://www.domain.com:10080 I can access GitLab sign in page (I can't click anywhere because links are using https  but it work)\nI am trying using local container port 80 to see if it work\nEdit: I did change and restart the container, doesn't seems to change anything, should I leave 80 instead of 10080 ?.\nIt might be a SSL certificate error, when I try to check it : \nopenssl s_client -showcerts -connect www.domain.com:443\nconnect: Connection refused\nconnect:errno=111\nUsing URL with chrom https://www.domain.com \n```\n Page Web inaccessible\nERR_CONNECTION_REFUSED\n```\nTelnet test\ntelnet www.domain.com 80 \n```\n HTTP/1.1 400 Bad Request\nServer: nginx/1.9.2\nDate: Sun, 12 Jul 2015 08:33:23 GMT\nContent-Type: text/html\nContent-Length: 172\nConnection: close\n\n400 Bad Request\n\n400 Bad Request\nnginx/1.9.2\n\n\n```\ntelnet www.domain.com 443\nConnecting To www.domain.com...Could not open connection to the host, on port 443: Connect failed\n. Nice eyes of the tiger ! It worked\nDo you know how I should configure nginx load balancer now to redirect to /git only ?\nI need to do a second route on another container for /api\nand leave the / to http protocole.\nwww.domain.com : Load balancing to a node container app http://www.domain.com\nwww.domain.com/git : Load balancing to a gitlab container https://www.domain.com/git\nwww.domain.com/api : Load balancing to a node container https://www.domain.com/api\n. You seem to be using mysql. Gitlab Inc. recommends using postgresql. You will start seeing issues later on if you continue using mysql.\n@sameersbn Ok, if Gitlab recommends using postgresql, doesn't mean you will have issues with mysql.\nI am using MariaDB btw, I am using 3 differents GitLab, all using mariadb, never had any issues.\n. About 10080:80, If I remove it, I can't access gitlab using the load balancer (502 Bad Gateway)\nIf i keep 80 only, docker will assign an outbound port and configure the firewall to listen to 0.0.0.0:10080\nIs there a way to prevent this behaviour ?\n. Oh, you just closed the issue :+1: \nThanks a lot for your help, I really appreciate, you saved me a big headhache\n. @sameersbn Thanks, I have the same issue\n. @sameersbn the command quoted is from the section using-https-with-a-load-balancer but ok :+1: \n. It's not related to docker-gitlab\n. @sameersbn The smtp server was installed using iredmail.\nContainer can ping smtp.domain.com\nI am accessing using this smtp server with this settings \nSouce : my thunderbird configuration !\n. The iredmail certificate was generated by iredmail and is different from the trusted certificate I use for gitlab.\nHowever, I used to install gitlab and iredmail using self signed certificate, I never had a single issue to send mail before. \nI will dig a little bit more, otherwise I'll use gmail smtp :/\n. ",
    "r2evans": "It appears that another gitlab issue (#729) discussed this and it was committed back in gitlab-8.0.2.\nI too am interested in securing my redis installation. (Would it make better sense to share the redis unix socket as a volume and use that instead? I don't know if it would bring any performance improvements.)\n(ping #619)\n. In /etc/crontab is lists (among others):\n\n```\nm h dom mon dow user  command\n17 *    * * *   root    cd / && run-parts --report /etc/cron.hourly\n```\n\nIt might be that your container is looking for files in /etc/cron.hourly (even if it finds none). This is a common default setting for hourly tasks in some linux distros (and other unix distros as well), is it possible the Synology host OS is the culprit? (I know you said it happens when the container is active, just making sure.)\nWhat puzzles me more is that the container should have no control over the sleep-state of the host machine. When you say is \"wakes up every hour\" (or 3-4h), is the Synology in a powered-off state (potentially with \"wake-on-lan\" or some wake-alarm), a \"hibernate\" (S4) state, or \"sleep\" (S3)? If S3, then the container is definitely still active and it looking within /etc/cron.hourly might be triggering a not-always-cached filesystem lookup. If either of the first two, then the problem is most likely due to the host OS (I think).\n. The fact that it came with 8.6.2 installed is disappointing, certainly, but I suggest your first outreach for support should be to them; unless I'm mistaken, I don't know that sameersbn and solidnerd are providing support to Synology customers.\nHaving said that, if your DS916+ has docker installed, and you can manage images yourselves (instead of being restricted to the images they want you to use), then theoretically it should be possible to use the database for the previous install through an upgrade process.\nCaveat: if you have done nothing with the gitlab instance yet -- no projects and/or you can easily reintroduce the projects into a gitlab instance -- it will be considerably easier for you to just dump the current/old install and start with a fresh one, such as this one.\nAssuming you cannot start over and should migrate, conventional advice and wisdom dictates that you incrementally upgrade through the latest release of each minor version. In order to start with your instance of gitlab, you'll need to know your database name, user, and password, so that you can modify the docker-compose.yml from this repo.\nTo start, you'll want to begin with a version like 8.6.7, the latest release of the 8.6 minor version. You can find that here, the release of this repo at that gitlab version. This is likely the hardest part of this entire migration, ensuring that a non-sameersbn/docker-gitlab instance can be over-taken by this image (with the correct db name/user/pass). Once that is done, breathe a sigh of relief, the hard part is over.\nFrom there, I'd suggest you grab each of the successive latest minor versions and do an upgrade into it.\n- 8.7.6\n- 8.8.5\n- 8.9.6-1\n- 8.10.7\n- 8.11.7\n- 8.12.7\n- and finally, to the current 8.13.5\nThe rationale for doing this many upgrades is that the database structure changes between minor versions. It's much easier to deal with data migration from one database structure to the next, without having to worry about migrating two or three versions old data into the current. If you think about upgrading to 8.13 all database structures from 8.12, 8.11, 8.10, 8.9, etc, it gets rather complicated. Since most users tend to be within a few minor releases or at most one major release away, it's generally not a big undertaking.\nThis comment is just a start, lots of things are glossed over, such as your ability to pull multiple non-Synology-provided images onto your server. Good luck. (Disclaimer: I'm not a dev here, just thought I'd give you a quick response and way-ahead.)\n. I don't know if Synology is using this repo; I couldn't find much info from their web page, so who knows. Bottom line: if they won't support you running their gitlab, then it's all on your shoulders. If you don't need to use their images, then I recommend you find a good repo and stick with it. Sounds like they've already dismissed your concerns about an app they allegedly provided.\n. In case @setiseta is not right (I have absolutely no reason to believe he is wrong), is this behavior any different than when using a non-dockerized gitlab instance? If the behavior is the same, then this might need to go to GitLab Issues (along with the 5,446 other issues currently \"open\").. Either I misunderstand or I didn't explain my position. I showed the command being run manually merely to provide the error. Normally the command is executed internally by setting GITLAB_BACKUP_SCHEDULE=daily in the docker-compose.yml file. This setting causes the following cron schedule to be set:\nbash\nroot@8609a78a95e2:/home/git/gitlab# crontab -u git -l\n00 01 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\nI verified it, and cron is correctly setting the following variables by default:\nHOME='/home/git'\nIFS='\n'\nLANG='C.UTF-8'\nLC_MESSAGES='POSIX'\nLOGNAME='git'\nOPTIND='1'\nPATH='/usr/bin:/bin'\nPPID='5060'\nPS1='$ '\nPS2='> '\nPS4='+ '\nPWD='/home/git'\nSHELL='/bin/sh'\nSo, whatever was causing the truncated tarfile was both (a) internal to the automated backups the scripts provide, and (b) not a function of my use of sudo -u git or sudo -HEu git. (BTW: using -E seems unnecessary if HOME is the only envvar needed. Just a thought.) I tried an image restart (stop, rm, run) a few times and it continued to fail. With the world-readable (empty) /root/.gitconfig file, it consistently worked with restarts (given that I re-opened that file). So, it appears that the problem is with the backup process itself, looking for that file.\nDo you not get the error in your instance?\n*pause*\nOkay, it looks like it may have been either an upstream issue (that was silently fixed), as it does not appear to be afflicting my 8.14.0 instance. I'll keep an eye on it the next day or so (after a restart or two) to make sure it is in fact gone, reopening only if I find out more. Thanks for the reply.. Perhaps: https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/install/database_mysql.md\nThe first paragraph:\n\nWe do not recommend using MySQL due to various issues. For example, case (in)sensitivity and problems that suggested fixes have.\n\n(Multiple links to mysql.com.)\nOther than that, your question of \"why gitlab prefers ...\" can only be answered by GitLab themselves, not here. If you are asking about \"why would <somebody> prefer ...\", there are several non-gitlab-centric comparisons of RDBMSs (e.g., this recent one), as well as a (not-as-new) discussion on Quora.\nI've found that many of the historically-noted differences (e.g., speed, SQL compliance, scalability, replication) are dwindling, and most people will do just fine with either. (I'm not a DB guru, though I've done minor administration on both.)\n. That is the default behavior for GitLab (src: protected_branches.html). I don't know when it became default, since a commit on July 22 implies the verbiage (on line 13 of the old version) was already there at that time.\nI'm still on sameersbn/gitlab:8.14.0 and my master branches are all protected (and I've done nothing to set or change them).\nI'm not saying this is not an issue. If you had previously unprotected all of your master branches, or the branches were created before this became the default mode in GitLab, then who knows.\nIf that's the case, then it's likely something for GitLab issues, not here, since I believe this docker image is not doing anything that specific to repos.. Users belonging to the \"Masters\" list can push to the master branch. I think only the repo owner (since it is a per-repo setting) can change this, but perhaps other \"Masters\" can do it as well.\nTo find the list, within the repo pull down the \"repo gear\" (top-right corner, typically under the user avatar) and select \"Members\". Each member that has been granted access will be specifically listed as a \"Master\" (among \"Guest\", \"Reporter\", \"Developer\", and \"Master\"). If instead of \"Members\" you go to \"Protected Branches\", the level required to push can be set. \"Merge\" ops can be \"Masters\" or \"Masters+Developers\", while \"Push\" ops can be restricted to \"Masters\", \"Master+Developers\", or \"No one\".\nOdd that the behavior appears to be have modified from what was there before. Are you certain it changed at exactly the transition from 8.14.0 to 8.14.1? (Not that your answer here will affect my ability to help, but it might be useful if/when you take it to GitLab Issues.). I'm stumped, sorry. (And GitLab is a bit swamped, you may not get much from them.) I suggest going to GitLab Issues as well as posting to ServerFault and/or StackOverflow (for community response).. @lyda, nice, thanks for going that route. Do you know if the client version of git (not within the GitLab environment) impacts the issue, or is it just the git that GitLab uses internally?. @lyda, looks like your temporary patch will be much needed, as the upstream fix may be taking a bit more work to accept. (But they do \"confirm\" the problem is the internal git-2.11, and downgrading to git-2.10.2 appears to temporarily fix the symptom.). @jstdoit how did you get to the gitlab console? I can't seem to get gitlab-rails console to work (no gitlab-rails). I found vendor/bundle/ruby/2.4.0/bin/rails, but it fails with can't find gem omniauth-oauth2-generic (>= 0.a) (Gem::GemNotFoundException.\nI'd really like to be able to get to the point where I can do Notify.test_email(...).\n. How long does it stay like this? it's \"normal\" to show this for a few minutes while the database and everything else get setup. (Running docker-compose logs -f gitlab might be insightful.). @SebaBoler, not certain if they will help: since your log directory is mapped from the host, then the numeric owner id on the host needs to be mapped internally to the container. This image uses USERMAP_UID (and USERMAP_GID (Host UID/GID Mapping). So,\n\nif you have previously set those two variables and are not this time, then you will need to change ownership to 1000:1000 (the defaults) or re-set those variables;\nif the host's idea of uid/gid has changed, then you might need to map or change the mapping for them;\ncan you confirm that the host is not running any added security (beyond simple unix perms)?\n\nThis is what I have in my running container:\nroot@ace47e405b11:/var/log/gitlab# find gitlab* -type f -iname '*log' -ls\n10100872  360 -rw-r--r--   1 git      git        364115 Dec 19 12:50 gitlab/production.log\n10101724    4 -rw-r--r--   1 git      git           238 Dec 19 10:46 gitlab/application.log\n10100884    4 -rw-r--r--   1 git      git          2275 Dec 19 08:15 gitlab/unicorn.stderr.log\n10100885    4 -rw-r--r--   1 git      git            94 Dec 19 10:46 gitlab/unicorn.stdout.log\n10100876  364 -rw-r--r--   1 root     root       367993 Dec 19 12:47 gitlab/gitlab-workhorse.log\n10100886   56 -rw-r--r--   1 git      git         49549 Dec 19 12:50 gitlab/sidekiq.log\n10101725    4 -rw-r--r--   1 git      git          2027 Dec 19 10:54 gitlab-shell/gitlab-shell.log\n(I'm not sure why workhorse is root:root ... it's working, though, despite running as user git:\nroot@ace47e405b11:/var/log/gitlab# ps faxu | grep '[w]orkhorse'\ngit         589  0.0  0.0 287148 15188 ?        Sl   Dec16   0:12 /usr/local/bin/gitlab-workhorse -listenUmask 0 -listenNetwork tcp -listenAddr :8181 -authBackend http://127.0.0.1:8080/git -authSocket /home/git/gitlab/tmp/sockets/gitlab.socket -documentRoot /home/git/gitlab/public -proxyHeadersTimeout 5m0s\n*shrug*). I suspect that setting is the default value given to users when their account is created. For users that already exist, can you:\n\nGo to the Admin Page &gg Overview &gg Users, then select the specific user.\nConfirm that Personal projects limit lists something other than \"0\".\nClick on Edit (top-right corner of the page) and change the Access &gg Projects limit to something else.\n\nI believe this is a GitLab issue and therefore not specific to this docker image. It is being discussed in https://gitlab.com/gitlab-org/gitlab-ce/issues/17642 (still open) and https://gitlab.com/gitlab-org/gitlab-ce/issues/1129 (closed) at a minimum, though I don't know that any mitigation has been incorporated into CE.. I just tested again on my image (8.15.1), and when I change a user's \"Projects limit\" to a lower number, they are no longer able to create a new project; when I subsequently change to a higher number, they can again create a new project. So, I guess this is not reproducible with the current version, 8.15.1; I'm not sure if it's a GitLab-8.14 thing or not.\nBTW: there are numerous security holes/bugs fixed in 8.14.1, 8.14.3, 8.14.4, and 8.14.5. (8.14.2 appears to be mostly regression fixes). Even if you choose to stay on the 8.14 chain, I urge you to update to 8.14.5.. I have no env-vars defined that would change any of that behavior. I was able to change my own (which is how I verified the below-limit behavior), so there is something else going on with you. If it matters, I'm authenticating against an LDAP/AD domain; I don't know if or how that could affect this behavior, but it's the only thing I can think of that may be different between our setups.. What file is that failure logged in?\nI have this 8.16.6 image but am seeing a different backup failure: the backup tar file (%s_%Y_%m_%d_gitlab_backup.tar) is fine, but all of its components are also in the backup directory.\nFor instance, before today, the process just creates a single tar-file:\n-rw-------  1 1000 1000 106956800 Feb 22 01:00 1487754057_2017_02_22_gitlab_backup.tar\nBut today, I find this:\n-rw-------  1 1000 1000 106967040 Feb 23 01:00 1487840434_2017_02_23_gitlab_backup.tar\n-rw-------  1 1000 1000       146 Feb 23 01:00 artifacts.tar.gz\n-rw-rw-r--  1 1000 1000       159 Feb 23 01:00 backup_information.yml\n-rw-------  1 1000 1000       146 Feb 23 01:00 builds.tar.gz\ndrwxrwxr-x  2 1000 1000      4096 Feb 23 01:00 db/\n-rw-------  1 1000 1000   3709913 Feb 23 01:00 lfs.tar.gz\ndrwx------  4 1000 1000      4096 Feb 23 01:00 repositories/\n-rw-------  1 1000 1000   2640677 Feb 23 01:00 uploads.tar.gz\nThey are confirmed redundant (the tar-file is complete, all components are identical). It's easy enough to remove them manually, but this will quickly clutter things. I don't know what will happen if the files exist when the next backup is attempted tomorrow morning (I don't really want to find out, meaning I have another daily cleanup task until this is fixed).\n(I'm happy to move this to a different issue if it's completely unrelated.)\n. Backups are working, they're just leaving some artifacts behind (including artifacts.tar.gz, coincidentally). The full-size %s_%Y_%m_%d_gitlab_backup.tar is still legitimate, and does not appear to be affected by this buglet. (I wouldn't say it's a \"bug\" or \"debilitating problem\" with the backup, just incomplete cleanup.)\nI go in periodically and clear the redundant files, but it's only for my OCD ... everything else seems to be working just fine.\n(At least, this is the behavior in my install of gitlab-8.16.6.). @QuickJack where are you seeing the [done] and [skipped] messages? I'm seeing neither, apologize if I'm being dim.. Thank you for the reminder, @paddy-hack. Good catch about /etc/supervisor/conf.d/gitlab-workhorse.conf, I missed that.\nI'm currently running 11.0.5 and do in fact see the correct reference in the config file:\n...\ncommand=/usr/local/bin/gitlab-workhorse\n  -listenUmask 0\n  -listenNetwork tcp\n  -listenAddr \":8181\"\n  -authBackend http://127.0.0.1:8080/gitlab\n  -authSocket /home/git/gitlab/tmp/sockets/gitlab.socket\n  -documentRoot /home/git/gitlab/public\n  -proxyHeadersTimeout 5m0s\n...\nand confirmed that the running process is also correct:\n```\n$ ps faxwww | grep [w]orkhorse\n  1053 ?        Sl     0:50 /usr/local/bin/gitlab-workhorse -listenUmask 0 -listenNetwork tcp -listenAddr :8181 -authBackend http://127.0.0.1:8080/gitlab -authSocket /home/git/gitlab/tmp/sockets/gitlab.socket -documentRoot /home/git/gitlab/public -proxyHeadersTimeout 5m0s\n(I see it here ----->   -->   -->   -->   -->   -->   -->   -->   -->   -->   -->   -->   -->   -->   -->   -->   -->   -->   -->   -->   -->  ^^^^^^^\n```\nSo with that, it appears to be not-a-problem anymore.. I'm assuming you have a volume mounted on /home/git/data (as you likely should).\n\nWhat is the host OS?\nIf not windows, on the host side of that volume, what are the mount options? For instance, something like:\n    /dev/sdb3 on /srv type ext4 (rw,relatime,data=ordered)\n\nIf the host is Windows, you're likely out-of-luck, as unix-y perms don't really work well in this regard.. (BTW, this might be assisted by https://github.com/sameersbn/docker-gitlab/pull/907). That looks really nice, @SvenDowideit. I look forward to playing with it. (I made one comment on the docs you added.). I think that that line is only run when building the container, not when running it. It is in functions#L1168, though, and perhaps this change might be more efficient?\ndiff\n @@ -1168 +1168 @@ map_uidgid() {\n -    find ${GITLAB_HOME} -path ${GITLAB_DATA_DIR}/\\* -prune -o -print0 | xargs -0 chown -h ${GITLAB_USER}:\n +    find ${GITLAB_HOME} -path ${GITLAB_DATA_DIR}/\\* ! -user ${GITLAB_USER} -prune -o -print0 | xargs -0 chown -h ${GITLAB_USER}:\nThe underlying problem, though, is that what has been assigned as ${GITLAB_USER} externally does not match /etc/passwd, so this patch won't work since git internally still maps to 1000 regardless of what was set up. @solidnerd , does this sequence make sense?\n\non startup, update /etc/passwd with the provided GITLAB_USER and USERMAP_UID (edit: I think this is already being done)\ninstead of a global overwrite all owners with a blind chown, use the above patch for conditional chown\n\nDoes it make sense?. @djelenc, you suggest writing a proxy that intercepts all SSH connection attempts, determines if the connection is meant for gitlab or not, and then forwarding the connection to the \"real\" sshd? Though novel, I suggest this just opens an injection avenue, whereas instead of just SSH security channels, now I need to be worried about this ssh-proxy for security holes. (Suggestion: don't intervene on SSH channels.)\nI propose an alternative solution would be to use restricted commands in the non-shell-users' ~/.ssh/authorized_keys file to forward the connection to the gitlab's sshd. This would benefit from (but not strictly require) agent-forwarding. This assumes that the \"real\" sshd is on the main port (22), and the gitlab sshd is configured on a non-standard port.\nA start would be to use something like https://superuser.com/a/343675/402193, but changing ./gitserve to something like exec ssh -p otherport localhost git-shell or something like that.\n. I just tested this locally, and it worked.\nAssuming a topology similar to:\n. . .+ +..+  - . .\n                     -. .%.+..+%m..m.-%---- -.\n                    --+#m*+m%+#%%##+##*#m+%--+.\n+----------+        +#*####################%#.%-\n|          |      .m ###########-#=##-######m#%.\n| client   |======= +##%#####           ###%*#-\n+----------+       .--+####   internet   ###*m+.\n                   -.+-+#####          ###%%#  .\n                     -- mm#############m+m*%-+\n                      - .+#+#*##+%++%#--.m.%.\n                       .  .+-.-m. .m .++...\n                         = .+.\n                         =\n                        =\n                   -----=---------\n              ----/     =         \\----\n          ---/          SSH(22)        \\---\n        -/         ===='                   \\-\n       /       nc =                          \\\n      /           =   +---------------+       \\\n     /             =  |               |        \\\n     |              === SSH(11122)    |        |\n     \\                |               |        /\n      \\               |               |       /\n       \\              |  [gitlabhost] |      /\n        -\\            +---------------+    /-\n          ---\\                         /---\n              ----\\   [mainhost]  /----\n                   ---------------\nThis assumes that a user logged in to mainhost can do git clone ssh://mainhost:11122/user/repo.git and the repo on gitlabhost is cloned. (I say this only to say that gitlabhost must be reachable on mainhost through port 11122. Whether port 11122 is reachable outside of mainhost is not required.)\nClient's ~/.ssh/config (use of agent-forwarding not required):\nHost somename\n  Hostname mainhost\n  ProxyCommand ssh -p 22 mainhost nc mainhost 11122\n(Requires nc installed on mainhost.)\nThen, on their laptop/computer:\nbash\n$ git clone ssh://git@somename:22/user/repo.git\nOne problem: since you have to configure gitlab to listen on port 11122 and cannot change the port that it advertises to users, the clone field on gitlab repos will still show ssh://git@gitlabhost:11122/user/repo.git (or ssh://git@mainhost:11122/user/repo.git if you configured GITLAB_HOST=mainhost).\nUser configuration:\n\n\nonly gitlab access: (for security, you might want to use restricted commands)\nHost mainhost\n  Hostname mainhost\n  ProxyCommand ssh -p 22 mainhost nc mainhost 11122\n\n\nboth shell and gitlab access, using gitlab as default; this has the advantage that the user has less to change on the gitlab-provided URI\nHost mainhost\n  Hostname mainhost\n  ProxyCommand ssh -p 22 mainhost nc mainhost 11122\nHost mainhostshell\n  Hostname mainhost\n\n\nboth shell and gitlab access, but shell access is the default; not sure why you'd do this if you're already having to add blocks to the ~/.ssh/config, but perhaps there's rationale; this requires the user to change both the host and port in the gitlab-provided URI to something like ssh://git@mainhostgitlab:22/user/repo.git (depending on the ssh config recipe name):\nHost mainhost\n  Hostname mainhost\nHost mainhostgitlab\n  Hostname mainhost\n  ProxyCommand ssh -p 22 mainhost nc mainhost 11122\n\n\nWithout a workaround (I know of none), the user will always need to change the gitlab-provided URI a little: at least the port number. It might be possible to do this without nc on mainhost (possibly by calling ssh again) but it's a common-enough tool that this seems to work just fine.\nMotivated by https://stackoverflow.com/a/28201217/3358272.. https://docs.gitlab.com/ce/administration/operations/fast_ssh_key_lookup.html, added to CE in 10.4.. Does this mean \"If you're not using one of these files, then don't include its entry in the docker-compose file\"? It's a little confusing as currently worded.. ",
    "benunter": "Ok. my mistake. Just found GITLAB_EMAIL variable.\n. ",
    "arno0203": "@sameersbn Thanks for your comment.\nI execute sudo docker info \nContainers: 3\nImages: 39\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 45\n Dirperm1 Supported: false\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 3.13.0-49-generic\nOperating System: Ubuntu 14.04.1 LTS\nCPUs: 8\nTotal Memory: 7.686 GiB\nName: ADO-POR-2\nID: DIEV:JOXE:O236:ZKCW:6S7Q:LJS5:YUKK:6NJG:3IJV:GWUU:OUQD:MTBD\nWARNING: No swap limit support\nAfter that I try to set the memory limit in docker_compose.yml file for the gitlab image\n```\ngitlab:\n    image: sameersbn/gitlab\n    mem_limit: 2000m   \n    ports:\n        - \"10080:80\"\n        - \"10022:22\"\n    links:\n        - redisgitlab:redisio\n        - mysqlgitlab:mysql\n    environment:\n        - GITLAB_PORT=10080\n        - GITLAB_SSH_PORT=10022\n        - GITLAB_HOST=localhost\n        - GITLAB_UTL=http://localhost:8080\n        - REDIS_HOST=redis\n        - REDIS_PORT=6379 \n    volumes:\n        - /srv/docker/gitlab/gitlab:/home/git/data\nredisgitlab:\n    image: sameersbn/redis\n    volumes:\n        - /srv/docker/gitlab/redis:/var/lib/redis\nmysqlgitlab:\n    image: sameersbn/mysql\n    volumes:\n        - /srv/docker/gitlab/mysql:/var/lib/mysql\n    environment:\n        - DB_NAME=gitlabhq_production\n        - DB_USER=gitlab\n        - DB_PASS=gitlab\n```\nAnd the result is that \nCONTAINER           CPU %               MEM USAGE/LIMIT     MEM %               NET I/O\ndocker_gitlab_1     1.96%               439 MB/2.097 GB     20.93%              2.923 MB/1.212 MB\nBut there is not change \ngitlab_1      | 2015-07-17 08:45:52,586 INFO exited: sidekiq (exit status 1; not expected)\nThank\n. It's ok.\nThank you for your involvement, and the speed of your responses\n. ",
    "ovalin": "I am experiencing the same thing.  And I have nearly 2 gig allocated. \n. I am experiencing the same thing.  And I have nearly 2 gig allocated. \n. I am having trouble starting up gitlab with the following logs\nAccording to the logs it looks like I have a permission issue on my log folder but I've tied giving the folder full permissions and am still running into this issue.\nLet me know what you think\nSupervisor.log\n2015-07-18 13:35:30,073 INFO supervisord started with pid 1\n2015-07-18 13:35:31,076 INFO spawned: 'sidekiq' with pid 270\n2015-07-18 13:35:31,080 INFO spawned: 'unicorn' with pid 271\n2015-07-18 13:35:31,083 INFO spawned: 'cron' with pid 272\n2015-07-18 13:35:31,087 INFO spawned: 'nginx' with pid 273\n2015-07-18 13:35:31,091 INFO spawned: 'sshd' with pid 274\n2015-07-18 13:35:32,133 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:32,133 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:32,133 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:32,133 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:32,133 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:33,234 INFO exited: unicorn (exit status 1; not expected)\n2015-07-18 13:35:33,808 INFO spawned: 'unicorn' with pid 280\n2015-07-18 13:35:33,822 INFO exited: sidekiq (exit status 1; not expected)\n2015-07-18 13:35:34,826 INFO spawned: 'sidekiq' with pid 283\n2015-07-18 13:35:34,827 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:35,727 INFO exited: unicorn (exit status 1; not expected)\n2015-07-18 13:35:36,729 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:36,731 INFO spawned: 'unicorn' with pid 286\n2015-07-18 13:35:37,047 INFO exited: sidekiq (exit status 1; not expected)\n2015-07-18 13:35:38,051 INFO spawned: 'sidekiq' with pid 289\n2015-07-18 13:35:38,054 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:38,676 INFO exited: unicorn (exit status 1; not expected)\n2015-07-18 13:35:39,678 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:39,680 INFO spawned: 'unicorn' with pid 292\n2015-07-18 13:35:40,282 INFO exited: sidekiq (exit status 1; not expected)\n2015-07-18 13:35:41,286 INFO spawned: 'sidekiq' with pid 296\n2015-07-18 13:35:41,287 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:41,628 INFO exited: unicorn (exit status 1; not expected)\n2015-07-18 13:35:42,629 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n...\nSidekiq.log has this repeated\nPermission denied @ rb_sysopen - /home/git/gitlab/log/sidekiq.log\n/usr/lib/ruby/2.1.0/logger.rb:592:in initialize'\n/usr/lib/ruby/2.1.0/logger.rb:592:inopen'\n/usr/lib/ruby/2.1.0/logger.rb:592:in open_logfile'\n/usr/lib/ruby/2.1.0/logger.rb:549:ininitialize'\n/usr/lib/ruby/2.1.0/logger.rb:318:in new'\n/usr/lib/ruby/2.1.0/logger.rb:318:ininitialize'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/logging.rb:30:in new'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/logging.rb:30:ininitialize_logger'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/cli.rb:339:in initialize_logger'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/cli.rb:39:inparse'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/bin/sidekiq:7:in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/bin/sidekiq:23:inload'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/bin/sidekiq:23:in `'\nunicorn.log has the below repeated\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/lib/unicorn/configurator.rb:91:in block in reload': directory for stderr_path=/home/git/gitlab/lo\ng/unicorn.stderr.log not writable (ArgumentError)\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/lib/unicorn/configurator.rb:87:ineach'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/lib/unicorn/configurator.rb:87:in reload'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/lib/unicorn/configurator.rb:68:ininitialize'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/lib/unicorn/http_server.rb:108:in new'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/lib/unicorn/http_server.rb:108:ininitialize'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/bin/unicorn_rails:209:in new'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/bin/unicorn_rails:209:in'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/bin/unicorn_rails:23:in load'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/bin/unicorn_rails:23:in'\n. I am having trouble starting up gitlab with the following logs\nAccording to the logs it looks like I have a permission issue on my log folder but I've tied giving the folder full permissions and am still running into this issue.\nLet me know what you think\nSupervisor.log\n2015-07-18 13:35:30,073 INFO supervisord started with pid 1\n2015-07-18 13:35:31,076 INFO spawned: 'sidekiq' with pid 270\n2015-07-18 13:35:31,080 INFO spawned: 'unicorn' with pid 271\n2015-07-18 13:35:31,083 INFO spawned: 'cron' with pid 272\n2015-07-18 13:35:31,087 INFO spawned: 'nginx' with pid 273\n2015-07-18 13:35:31,091 INFO spawned: 'sshd' with pid 274\n2015-07-18 13:35:32,133 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:32,133 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:32,133 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:32,133 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:32,133 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:33,234 INFO exited: unicorn (exit status 1; not expected)\n2015-07-18 13:35:33,808 INFO spawned: 'unicorn' with pid 280\n2015-07-18 13:35:33,822 INFO exited: sidekiq (exit status 1; not expected)\n2015-07-18 13:35:34,826 INFO spawned: 'sidekiq' with pid 283\n2015-07-18 13:35:34,827 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:35,727 INFO exited: unicorn (exit status 1; not expected)\n2015-07-18 13:35:36,729 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:36,731 INFO spawned: 'unicorn' with pid 286\n2015-07-18 13:35:37,047 INFO exited: sidekiq (exit status 1; not expected)\n2015-07-18 13:35:38,051 INFO spawned: 'sidekiq' with pid 289\n2015-07-18 13:35:38,054 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:38,676 INFO exited: unicorn (exit status 1; not expected)\n2015-07-18 13:35:39,678 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:39,680 INFO spawned: 'unicorn' with pid 292\n2015-07-18 13:35:40,282 INFO exited: sidekiq (exit status 1; not expected)\n2015-07-18 13:35:41,286 INFO spawned: 'sidekiq' with pid 296\n2015-07-18 13:35:41,287 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2015-07-18 13:35:41,628 INFO exited: unicorn (exit status 1; not expected)\n2015-07-18 13:35:42,629 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n...\nSidekiq.log has this repeated\nPermission denied @ rb_sysopen - /home/git/gitlab/log/sidekiq.log\n/usr/lib/ruby/2.1.0/logger.rb:592:in initialize'\n/usr/lib/ruby/2.1.0/logger.rb:592:inopen'\n/usr/lib/ruby/2.1.0/logger.rb:592:in open_logfile'\n/usr/lib/ruby/2.1.0/logger.rb:549:ininitialize'\n/usr/lib/ruby/2.1.0/logger.rb:318:in new'\n/usr/lib/ruby/2.1.0/logger.rb:318:ininitialize'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/logging.rb:30:in new'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/logging.rb:30:ininitialize_logger'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/cli.rb:339:in initialize_logger'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/cli.rb:39:inparse'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/bin/sidekiq:7:in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/bin/sidekiq:23:inload'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/bin/sidekiq:23:in `'\nunicorn.log has the below repeated\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/lib/unicorn/configurator.rb:91:in block in reload': directory for stderr_path=/home/git/gitlab/lo\ng/unicorn.stderr.log not writable (ArgumentError)\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/lib/unicorn/configurator.rb:87:ineach'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/lib/unicorn/configurator.rb:87:in reload'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/lib/unicorn/configurator.rb:68:ininitialize'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/lib/unicorn/http_server.rb:108:in new'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/lib/unicorn/http_server.rb:108:ininitialize'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/bin/unicorn_rails:209:in new'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/unicorn-4.6.3/bin/unicorn_rails:209:in'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/bin/unicorn_rails:23:in load'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/bin/unicorn_rails:23:in'\n. I am using a QNAP NAS with ContainerStation and docker-gitlab container\nmy run command is ...\ndocker run --name gitlab1_gitlab_1 -d \n--link gitlab1_postgresql_1:postgresql \n--link gitlab1_redis_1:redisio \n--publish=10022:22 \n--publish=10080:80 \n--env='GITLAB_PORT=10080' \n--env 'DB_TYPE=postgres' \n--env 'DB_NAME=gitlabhq_production' \n--env 'DB_USER=gitlab' \n--env 'DB_PASS=password' \n--env 'REDIS_HOST=redisio' \n--volume /share/DockerContainers/container-station-data/lib/docker/containers/eb9e1df78ce4db3de8006692905cf01729298c0bc7f51965d450b10d65db7d01:/home/git/data \nsameersbn/gitlab:7.12.2-2\n. I am using a QNAP NAS with ContainerStation and docker-gitlab container\nmy run command is ...\ndocker run --name gitlab1_gitlab_1 -d \n--link gitlab1_postgresql_1:postgresql \n--link gitlab1_redis_1:redisio \n--publish=10022:22 \n--publish=10080:80 \n--env='GITLAB_PORT=10080' \n--env 'DB_TYPE=postgres' \n--env 'DB_NAME=gitlabhq_production' \n--env 'DB_USER=gitlab' \n--env 'DB_PASS=password' \n--env 'REDIS_HOST=redisio' \n--volume /share/DockerContainers/container-station-data/lib/docker/containers/eb9e1df78ce4db3de8006692905cf01729298c0bc7f51965d450b10d65db7d01:/home/git/data \nsameersbn/gitlab:7.12.2-2\n. could it have something to do with permissions given to ruby?\n. could it have something to do with permissions given to ruby?\n. Does anyone know what user is used to execute the gitlab rb files?\n. Does anyone know what user is used to execute the gitlab rb files?\n. I was able to resolve the issue myself thank you for your help though and I appreciate your work on the container.\nThe solution was that by default the container had the folder /var/log/gitlab/ did not providing permission to user git.\nAfter running a chown -R git on the folder I had resolved the issue.\n. I was able to resolve the issue myself thank you for your help though and I appreciate your work on the container.\nThe solution was that by default the container had the folder /var/log/gitlab/ did not providing permission to user git.\nAfter running a chown -R git on the folder I had resolved the issue.\n. yeah sorry I don't know the build well enough to help explain it all i can say is that i rebuilt it a handful of times each with the same issue. \nFYI  I also had trouble with nginx and the permission of all the asset folders.\nI followed this to resolve the issue I got the below from (https://forum.gitlab.com/t/troubleshooting-guide-wiki/31)\nWhen accessing GitLab, the login page is broken, images and CSS files are not correctly loaded.\nIn Nginx error log\n2013/08/23 13:52:19 [error] 31035#0: 1 open() \"/home/git/gitlab/public/assets/login-logo-20fd89985ad8929292196a39fa51787c.png\" failed (13: Permission denied), client: 10.191.131.75, server: devops.company.com, request: \"GET /assets/login-logo-20fd89985ad8929292196a39fa51787c.png HTTP/1.1\", host: \"devops.company.com\", referrer: \"http://devops.company.com/users/sign_in\"\n2013/08/23 13:52:22 [error] 31035#0: 1 open() \"/home/git/gitlab/public/assets/application-8d0430122c22e07faecdd974cd21a38b.css\" failed (13: Permission denied), client: 10.191.131.75, server: devops.company.com, request: \"GET /assets/application-8d0430122c22e07faecdd974cd21a38b.css HTTP/1.1\", host: \"devops.company.com\", referrer: \"http://devops.company.com/users/sign_in\"\n2013/08/23 13:52:22 [error] 31035#0: *10 open() \"/home/git/gitlab/public/assets/application-7b88a88b92ad70a827dbedb75e5206b1.js\" failed (13: Permission denied), client: 10.191.131.75, server: devops.company.com, request: \"GET /assets/application-7b88a88b92ad70a827dbedb75e5206b1.js HTTP/1.1\", host: \"devops.company.com\", referrer: \"http://devops.company.com/users/sign_in\"\nProblem: Permission denied when nginx user was trying to open assets (images, CSS files). The nginx user does NOT have access to the assets directory because it is NOT member of the git group.\nNOTE: In the installation guide, adding Nginx user to the git group is NOT explicitly mentioned. However, it is well documented in the Gitlab Recipes.\nSolution:\nRecommended\nadd nginx user to git group and give groups read/execute permission on /home/git\nsudo usermod -a -G git nginx\nsudo chmod g+rx /home/git/\nAlternatively, replace the default nginx user with git and group root in /etc/nginx/nginx.conf\nuser             nginx;\nuser              git root;\nThen restart Nginx, the issue should be fixed. See issue 48932 for more information.\n. yeah sorry I don't know the build well enough to help explain it all i can say is that i rebuilt it a handful of times each with the same issue. \nFYI  I also had trouble with nginx and the permission of all the asset folders.\nI followed this to resolve the issue I got the below from (https://forum.gitlab.com/t/troubleshooting-guide-wiki/31)\nWhen accessing GitLab, the login page is broken, images and CSS files are not correctly loaded.\nIn Nginx error log\n2013/08/23 13:52:19 [error] 31035#0: 1 open() \"/home/git/gitlab/public/assets/login-logo-20fd89985ad8929292196a39fa51787c.png\" failed (13: Permission denied), client: 10.191.131.75, server: devops.company.com, request: \"GET /assets/login-logo-20fd89985ad8929292196a39fa51787c.png HTTP/1.1\", host: \"devops.company.com\", referrer: \"http://devops.company.com/users/sign_in\"\n2013/08/23 13:52:22 [error] 31035#0: 1 open() \"/home/git/gitlab/public/assets/application-8d0430122c22e07faecdd974cd21a38b.css\" failed (13: Permission denied), client: 10.191.131.75, server: devops.company.com, request: \"GET /assets/application-8d0430122c22e07faecdd974cd21a38b.css HTTP/1.1\", host: \"devops.company.com\", referrer: \"http://devops.company.com/users/sign_in\"\n2013/08/23 13:52:22 [error] 31035#0: *10 open() \"/home/git/gitlab/public/assets/application-7b88a88b92ad70a827dbedb75e5206b1.js\" failed (13: Permission denied), client: 10.191.131.75, server: devops.company.com, request: \"GET /assets/application-7b88a88b92ad70a827dbedb75e5206b1.js HTTP/1.1\", host: \"devops.company.com\", referrer: \"http://devops.company.com/users/sign_in\"\nProblem: Permission denied when nginx user was trying to open assets (images, CSS files). The nginx user does NOT have access to the assets directory because it is NOT member of the git group.\nNOTE: In the installation guide, adding Nginx user to the git group is NOT explicitly mentioned. However, it is well documented in the Gitlab Recipes.\nSolution:\nRecommended\nadd nginx user to git group and give groups read/execute permission on /home/git\nsudo usermod -a -G git nginx\nsudo chmod g+rx /home/git/\nAlternatively, replace the default nginx user with git and group root in /etc/nginx/nginx.conf\nuser             nginx;\nuser              git root;\nThen restart Nginx, the issue should be fixed. See issue 48932 for more information.\n. chown -R git /etc/hosts\nAND\n/etc/resolv.conf\n. chown -R git /etc/hosts\nAND\n/etc/resolv.conf\n. chown -R git /etc/hosts\nAND\n/etc/resolv.conf\n. I am using a NAS produced by QNAP using an app called ContainerStation. On some flavour of linux which I am not sure of.\nDOCKER INFO\nContainers: 9\nImages: 121\nStorage Driver: devicemapper\n Pool Name: docker-253:0-38469648-pool\n Pool Blocksize: 65.54 kB\n Backing Filesystem: extfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 4.103 GB\n Data Space Total: 107.4 GB\n Data Space Available: 103.3 GB\n Metadata Space Used: 5.53 MB\n Metadata Space Total: 1.074 GB\n Metadata Space Available: 1.068 GB\n Udev Sync Supported: false\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.82-git (2013-10-04)\nExecution Driver: native-0.2\nKernel Version: 3.12.6\nOperating System: \nCPUs: 4\nTotal Memory: 1.851 GiB\nName: NASF09800\nID: 7H2Q:QRH3:TD6B:AS67:4NJT:5CCA:QVIT:XNLO:QMFN:CGMZ:PDV4:AGSD\nDOCKER VERSION\nClient version: 1.6.2\nClient API version: 1.18\nGo version (client): go1.4.1\nGit commit (client): 85258fb\nOS/Arch (client): linux/amd64\nServer version: 1.6.2\nServer API version: 1.18\nGo version (server): go1.4.1\nGit commit (server): 85258fb\nOS/Arch (server): linux/amd64\n. I am using a NAS produced by QNAP using an app called ContainerStation. On some flavour of linux which I am not sure of.\nDOCKER INFO\nContainers: 9\nImages: 121\nStorage Driver: devicemapper\n Pool Name: docker-253:0-38469648-pool\n Pool Blocksize: 65.54 kB\n Backing Filesystem: extfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 4.103 GB\n Data Space Total: 107.4 GB\n Data Space Available: 103.3 GB\n Metadata Space Used: 5.53 MB\n Metadata Space Total: 1.074 GB\n Metadata Space Available: 1.068 GB\n Udev Sync Supported: false\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.82-git (2013-10-04)\nExecution Driver: native-0.2\nKernel Version: 3.12.6\nOperating System: \nCPUs: 4\nTotal Memory: 1.851 GiB\nName: NASF09800\nID: 7H2Q:QRH3:TD6B:AS67:4NJT:5CCA:QVIT:XNLO:QMFN:CGMZ:PDV4:AGSD\nDOCKER VERSION\nClient version: 1.6.2\nClient API version: 1.18\nGo version (client): go1.4.1\nGit commit (client): 85258fb\nOS/Arch (client): linux/amd64\nServer version: 1.6.2\nServer API version: 1.18\nGo version (server): go1.4.1\nGit commit (server): 85258fb\nOS/Arch (server): linux/amd64\n. I am using a NAS produced by QNAP using an app called ContainerStation. On some flavour of linux which I am not sure of.\nDOCKER INFO\nContainers: 9\nImages: 121\nStorage Driver: devicemapper\n Pool Name: docker-253:0-38469648-pool\n Pool Blocksize: 65.54 kB\n Backing Filesystem: extfs\n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 4.103 GB\n Data Space Total: 107.4 GB\n Data Space Available: 103.3 GB\n Metadata Space Used: 5.53 MB\n Metadata Space Total: 1.074 GB\n Metadata Space Available: 1.068 GB\n Udev Sync Supported: false\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.82-git (2013-10-04)\nExecution Driver: native-0.2\nKernel Version: 3.12.6\nOperating System: \nCPUs: 4\nTotal Memory: 1.851 GiB\nName: NASF09800\nID: 7H2Q:QRH3:TD6B:AS67:4NJT:5CCA:QVIT:XNLO:QMFN:CGMZ:PDV4:AGSD\nDOCKER VERSION\nClient version: 1.6.2\nClient API version: 1.18\nGo version (client): go1.4.1\nGit commit (client): 85258fb\nOS/Arch (client): linux/amd64\nServer version: 1.6.2\nServer API version: 1.18\nGo version (server): go1.4.1\nGit commit (server): 85258fb\nOS/Arch (server): linux/amd64\n. I am getting an error when running that command\nrake aborted!\nLoadError: cannot load such file -- rubocop/rake_task\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:247:in require'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:247:inblock in require'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:232:in load_dependency'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:247:inrequire'\n/home/git/gitlab/lib/tasks/rubocop.rake:2:in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:241:inload'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:241:in block in load'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:232:inload_dependency'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:241:in load'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/engine.rb:654:inblock in run_tasks_blocks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/engine.rb:654:in each'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/engine.rb:654:inrun_tasks_blocks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/application.rb:400:in run_tasks_blocks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/engine.rb:449:inload_tasks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/railtie.rb:194:in public_send'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/railtie.rb:194:inmethod_missing'\n/home/git/gitlab/Rakefile:7:in `'\n(See full trace by running task with --trace)\n. I am getting an error when running that command\nrake aborted!\nLoadError: cannot load such file -- rubocop/rake_task\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:247:in require'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:247:inblock in require'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:232:in load_dependency'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:247:inrequire'\n/home/git/gitlab/lib/tasks/rubocop.rake:2:in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:241:inload'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:241:in block in load'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:232:inload_dependency'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:241:in load'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/engine.rb:654:inblock in run_tasks_blocks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/engine.rb:654:in each'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/engine.rb:654:inrun_tasks_blocks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/application.rb:400:in run_tasks_blocks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/engine.rb:449:inload_tasks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/railtie.rb:194:in public_send'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/railtie.rb:194:inmethod_missing'\n/home/git/gitlab/Rakefile:7:in `'\n(See full trace by running task with --trace)\n. I am getting an error when running that command\nrake aborted!\nLoadError: cannot load such file -- rubocop/rake_task\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:247:in require'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:247:inblock in require'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:232:in load_dependency'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:247:inrequire'\n/home/git/gitlab/lib/tasks/rubocop.rake:2:in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:241:inload'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:241:in block in load'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:232:inload_dependency'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/dependencies.rb:241:in load'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/engine.rb:654:inblock in run_tasks_blocks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/engine.rb:654:in each'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/engine.rb:654:inrun_tasks_blocks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/application.rb:400:in run_tasks_blocks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/engine.rb:449:inload_tasks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/railtie.rb:194:in public_send'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.1.11/lib/rails/railtie.rb:194:inmethod_missing'\n/home/git/gitlab/Rakefile:7:in `'\n(See full trace by running task with --trace)\n. Could this be another permissions issue?\n. Could this be another permissions issue?\n. Could this be another permissions issue?\n. Is it possible I need a bundle install to have access to these dependencies?\n. Is it possible I need a bundle install to have access to these dependencies?\n. Is it possible I need a bundle install to have access to these dependencies?\n. hmmm yeah so when i do a bundle list I saw that rake wasnt installed\nI did a bundle install and reran the recommendation and got the same issue.\n. hmmm yeah so when i do a bundle list I saw that rake wasnt installed\nI did a bundle install and reran the recommendation and got the same issue.\n. hmmm yeah so when i do a bundle list I saw that rake wasnt installed\nI did a bundle install and reran the recommendation and got the same issue.\n. Thank you that's what I have now\nSo I reran what you sent me with RAILS_ENV=production included and was able to run it successfully.\nThank you again for the help.\nBTW given the types of issues I've seen would you have any suggestions as to things I should look into. to verify that my install is now correct and that I wont run into any more in the future?\n. Thank you that's what I have now\nSo I reran what you sent me with RAILS_ENV=production included and was able to run it successfully.\nThank you again for the help.\nBTW given the types of issues I've seen would you have any suggestions as to things I should look into. to verify that my install is now correct and that I wont run into any more in the future?\n. Thank you that's what I have now\nSo I reran what you sent me with RAILS_ENV=production included and was able to run it successfully.\nThank you again for the help.\nBTW given the types of issues I've seen would you have any suggestions as to things I should look into. to verify that my install is now correct and that I wont run into any more in the future?\n. ",
    "ichizok": "I updated README.\n. I updated README.\n. ",
    "mike-pun": "Thank you for the quick response... yes, ssh key. We are mapping to 8022 and the git command is pointing to 8022. I have already looked through all the logs in /var/log/gitlab, none of them seem to be the ssh log. When I test with ssh -vT xxx.xx.xx.xx -port 8022, I can see ssh trying all my keys, including the right one, but the authentication still fails. This is why I would like to find the auth.log, to see why it failed..\n. Thank you for the quick response... yes, ssh key. We are mapping to 8022 and the git command is pointing to 8022. I have already looked through all the logs in /var/log/gitlab, none of them seem to be the ssh log. When I test with ssh -vT xxx.xx.xx.xx -port 8022, I can see ssh trying all my keys, including the right one, but the authentication still fails. This is why I would like to find the auth.log, to see why it failed..\n. No. I am working with https and that is good enough.\n. ",
    "LaurensRietveld": "Some more info: when you use a slash in the GITLAB_TIMEZONE, you'll get the following error: \nsed: -e expression #1, char 30: unknown option to 's'\nProblem occurs because the slash isnt escaped before passing it on to sed. No problem with me to use another timezone notation, but would be good to document about allowed timezone notations (took some time locating the error)\n. Some more info: when you use a slash in the GITLAB_TIMEZONE, you'll get the following error: \nsed: -e expression #1, char 30: unknown option to 's'\nProblem occurs because the slash isnt escaped before passing it on to sed. No problem with me to use another timezone notation, but would be good to document about allowed timezone notations (took some time locating the error)\n. How I interpreted that page was that Europe/Amsterdam was allowed (Amsterdam as well, which is mapped to Europe/Amsterdam). \nIs that correct? Because the issue here is with the Europe/Amsterdam TZ definition\n. How I interpreted that page was that Europe/Amsterdam was allowed (Amsterdam as well, which is mapped to Europe/Amsterdam). \nIs that correct? Because the issue here is with the Europe/Amsterdam TZ definition\n. ",
    "umputun": "For central time i have found \"Central Time (US & Canada)\" => \"America/Chicago\". Using the key leads to an error: \"ArgumentError: Invalid Timezone: \"Central Time (US {{GITLAB_TIMEZONE}} Canada)\"\n. For central time i have found \"Central Time (US & Canada)\" => \"America/Chicago\". Using the key leads to an error: \"ArgumentError: Invalid Timezone: \"Central Time (US {{GITLAB_TIMEZONE}} Canada)\"\n. @SolidNerd by \"the same domain\" you meant FQDN? If this is the case and someone running private registry on git.example.com and also using the same git.example.com for gitlab - I'd say ignore this issue. In my opinion if one hosting both registry and gitlab on the same box he probably will want to leverage gitlab's registry anyway.\n. yeah, this is correct understanding.\n. this release kind of important as 8.10.1 should fix a terrible wiki bug. Let me know if you need help in tests, glad to do whatever needed to make it released asap.\n. using the latest image from dockerhub, getting the same\n. worked just fine, thx. INFO success: nginx entered RUNNING state. ",
    "michaelryanmcneill": "I'm having basically the same issue as @umputun. I'm trying to use Eastern Time (US & Canada) which bombs out on creation with the error: ArgumentError: Invalid Timezone: Eastern Time (US {{GITLAB_TIMEZONE}} Canada) I was able to get past this by escaping the special characters: GITLAB_TIMEZONE=Eastern Time \\(US \\& Canada\\)\n. I'm having basically the same issue as @umputun. I'm trying to use Eastern Time (US & Canada) which bombs out on creation with the error: ArgumentError: Invalid Timezone: Eastern Time (US {{GITLAB_TIMEZONE}} Canada) I was able to get past this by escaping the special characters: GITLAB_TIMEZONE=Eastern Time \\(US \\& Canada\\)\n. @hodrigohamalho can you let us know how you got the gitlab-ce image to work? We haven't been able to get it to work (doing git pulls, pushes, etc.) We can login, just can't anything to work outside of the web interface. \n. Awesome, thanks @hodrigohamalho, we'll give it a try!\n. ",
    "blitzd": "Ran into this today - may be something worth adding to the 'Upgrade' portion of the readme?\n. Ran into this today - may be something worth adding to the 'Upgrade' portion of the readme?\n. @sameersbn Awesome, I hadn't seen that - thanks!\n. @sameersbn Awesome, I hadn't seen that - thanks!\n. ",
    "jokogr": "@sameersbn indeed that was the case. Upgrading to 7.13.2 went much more smoothly.\n. ",
    "hknochi": "The problem is may a automatically closed unused connection between the two\ncontainers which is closed by your (application -) firewall.\nIs your application deployed on an single machine or on different machines?\nSameer Naik notifications@github.com schrieb am Mi., 5. Aug. 2015 11:08:\n\n@jen-c https://github.com/jen-c the error indicates that the\ngitlab-postgresql container is not running\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/398#issuecomment-127925942\n.\n. The problem is may a automatically closed unused connection between the two\ncontainers which is closed by your (application -) firewall.\n\nIs your application deployed on an single machine or on different machines?\nSameer Naik notifications@github.com schrieb am Mi., 5. Aug. 2015 11:08:\n\n@jen-c https://github.com/jen-c the error indicates that the\ngitlab-postgresql container is not running\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/398#issuecomment-127925942\n.\n. So can you provide your query for doing this. Otherwise it is not possible\nto check what's going wrong\n\nSergiu Ciprian Cornea notifications@github.com schrieb am Do., 17. M\u00e4rz\n2016, 20:49:\n\nI know, but what I meant it was without using the Admin Panel, during the\nContainer runtime, I have a mysql query to do so, however, it is creating\nan extra record instead of appending the value in the existing column\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/639#issuecomment-198054613\n. So can you provide your query for doing this. Otherwise it is not possible\nto check what's going wrong\n\nSergiu Ciprian Cornea notifications@github.com schrieb am Do., 17. M\u00e4rz\n2016, 20:49:\n\nI know, but what I meant it was without using the Admin Panel, during the\nContainer runtime, I have a mysql query to do so, however, it is creating\nan extra record instead of appending the value in the existing column\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/639#issuecomment-198054613\n. \n",
    "jen-c": "Hi thanks for your reply. I got it working by running the commands manually.\nThank you so much!\n. ",
    "fernandoneto": "if i build it in docker hub there's no problem, so problem provably is in my host. \nclosing it\n. @sameersbn sorry for no updates. \nat this moment i don't have time to test this. \nim closing this for now since no one facing the same problem and when i have time i test and give you feedback ok? \n. @mikew \ndocker pull quay.io/sameersbn/gitlab:8.0.5-1\n. @sameersbn i already read that documentation, and looks like everything is correct in my side. i just don't know what to do. \n. just find the problem.\nproblem with GITLAB_HOST\nim closing it\nthanks anyway\n. the value of GITLAB_HOST is different from the value on callback. \nexample:\nCallback - http://mydomain.com\nGITLAB_HOST - http://medomain.com\n. @djskinner did you have sucess?\n. @djskinner you dont need GITLAB_HTTPS=true because is LB who is serving https\n. @renhuailin dont you forget REDIS_HOST: redisio on your docker.compose???\n. ping @sameersbn \n. I will try explain to you what im facing .\nEverytime one of the developers of our team makes a MR it takes a long time to appear ( 1h and sometimes more ). We are facing the same problem with build's triggered by tag's. \nI creat a repo to make some tests with  README.md only and when i try fork it to my user the process takes more than a hour. \nAs you can see in sidekiq.log  the fork process start ate 16:29 and more than one hour it doesn't finish yet.\nbash\n2015-12-22T16:29:54.120Z 801 TID-7mots RepositoryForkWorker JID-288a2dcddd90225c53b55f12 INFO: start\n2015-12-22T16:32:35.745Z 801 TID-91wmg PostReceive JID- INFO: done: 10723.85 sec\n2015-12-22T16:41:22.487Z 801 TID-91wmg PostReceive JID- INFO: start\n2015-12-22T17:03:38.407Z 801 TID-9u8vc PostReceive JID- INFO: done: 12519.32 sec\n2015-12-22T17:19:11.457Z 801 TID-9u8vc ProjectServiceWorker JID-f4fd4b2cda2b5f9d71f49051 INFO: start\n2015-12-22T17:19:11.474Z 801 TID-7dmqc ProjectCacheWorker JID-22cfe6af5c16bb3804f4a25e INFO: start\n2015-12-22T17:34:41.616Z 801 TID-9s6h0 PostReceive JID- INFO: done: 11147.723 sec\n2015-12-22T17:34:41.617Z 801 TID-98fik ProjectServiceWorker JID-2957b38bcf56b73f15fc336a INFO: done: 10243.003 sec\n2015-12-22T17:34:41.617Z 801 TID-9r36k ProjectCacheWorker JID-d2e97f845deff3db5257aeda INFO: done: 10242.986 sec\n2015-12-22T17:34:41.617Z 801 TID-9sz6c ProjectServiceWorker JID-c5e717d14848ef0ca44049be INFO: done: 9313.251 sec\n2015-12-22T17:34:41.617Z 801 TID-9qsuw ProjectCacheWorker JID-c5dde439fe2ff7f9a9c2f1a0 INFO: done: 9313.247 sec\n2015-12-22T17:34:41.617Z 801 TID-808bs ProjectServiceWorker JID-41848f33bdf3694c946ff7b8 INFO: done: 8379.269 sec\n2015-12-22T17:34:41.617Z 801 TID-973xs ProjectCacheWorker JID-433e94b20d2b840c18331485 INFO: done: 8379.255 sec\n2015-12-22T17:34:41.624Z 801 TID-7n2gw PostReceive JID- INFO: done: 7746.919 sec\n2015-12-22T17:35:51.943Z 801 TID-973xs PostReceive JID- INFO: start\nGitlab version:\n\n. I did some more tests and discovered a possible problem in sidekiq process. For some reason the runners are getting jammed. \n. @sameersbn no the problem persist in the last version of gitlab. I think this issue is gitlab related because i found some other people with the same problem running out of docker container's. \n. @sameersbn i think someone can found the root of the problem. \ntake a look ate this issue in gitlab.\nAt the moment we are not using gitlab so i can give you any feedback.\n. ",
    "brendangibat": "I put in some beginning effort for this but didn't do much testing - I can send what I have though.\nYou could do checks that the environment is exposing the AWS metadata service which provides IAM instance profile credentials. That's what fog does if you don't provide explicit credentials - the fog aws lib does the same thing that the aws sdk does - it pull autogenerated credentials from an exposed metadata service for each instance that gives access to resources defined for the policies applied to that instances roles. These credentials are automatically rotated behind the scenes in aws-sdk's or fog every few minutes, which provides a good rotation of credentials but doesn't impact access, while limiting what can be accessed at the instance level. This way if anything subversive broke out of a contained software layer it would still only be able to access the resources defined for that instance.\n. ",
    "JrCs": "Related issue: #516\n. Related issue: #516\n. Same error using latest tag:\nNov 28 14:09:29 sd-65534 docker[21806]: Configuring gitlab::database\nNov 28 14:09:29 sd-65534 docker[21806]: sed: -e expression #1, char 21: unknown option to `s'\nNov 28 14:09:29 sd-65534 systemd[1]: gitlab.service: Main process exited, code=exited, status=1/FAILURE\nI thing some variables value are missing.\nIt will be helpfull if you can add a\nbash\nset -u\nin the script to be sure that all variables are bound\n. Found, it's DB_PASS that contain a | (your sed separator). Error will be raised if string contain another char use by sed like: $, ( , ), etc...\nPerhaps the best is to use:\nbash\nenvsubst < template.txt > destfile\nwhich work even if variables contain specific chars.\nBut you need to rewrite your templates from {{VAR}} to ${VAR}\n. I can but if someone define a pass containing things like $ ( ) [ ] | etc... the error will appear.\nPerhaps it's better to find a definitive solution ?\nYou only have to change all the sed with one envsubst by file (and change all the {{VAR}} to ${VAR})\nsomething like:\nbash\nsudo -HEu git envsubst < database.yml.tmpl > /home/git/gitlab/config/database.yml\n. You can use sed to delete the lines.\nBut to replace some placeholders it's better to use envsubst\n. Is it ok to reopen this issue ?\n. Good idea !\nEdit: check the JrCs-pr-updates branch with my own gitlab and it works flawless with some passwords with \"special\" chars\n. ",
    "jngermon": "Your docker-comose.yml file is a sample file. It enable to test docker-gitlab but it contains default value.\nI propose to use docker-compose.yml.dist file to show configuration sample. To use docmer-compose for gitlab I just have to copy docker-compose.yml.dist to docker-compose.yml. I can custom my file as I want and the modifications are ignored by git. My project is up-to-date and I can pull your commit without create conflict (because I don't update docker-compose.yml.dist file).\n. Your docker-comose.yml file is a sample file. It enable to test docker-gitlab but it contains default value.\nI propose to use docker-compose.yml.dist file to show configuration sample. To use docmer-compose for gitlab I just have to copy docker-compose.yml.dist to docker-compose.yml. I can custom my file as I want and the modifications are ignored by git. My project is up-to-date and I can pull your commit without create conflict (because I don't update docker-compose.yml.dist file).\n. The problem is still here. At the moment the docker-comspose.yml file contains parameters values (relative to deployment) and it's following by GIT. Basically, parameters files must to not be follow (except in dist version).\nI'm working on my fork, I can create a special branch to change docker-compose.yml but I dont want to commit these changes (I don't want that my postgre password to be saved on Github and be public).\nAnd if I don't commit changes on follow's file, I can't rebase on master.\n. The problem is still here. At the moment the docker-comspose.yml file contains parameters values (relative to deployment) and it's following by GIT. Basically, parameters files must to not be follow (except in dist version).\nI'm working on my fork, I can create a special branch to change docker-compose.yml but I dont want to commit these changes (I don't want that my postgre password to be saved on Github and be public).\nAnd if I don't commit changes on follow's file, I can't rebase on master.\n. Ok I understand. I'll add the instructions in the README before submit a new pull request.\n. Ok I understand. I'll add the instructions in the README before submit a new pull request.\n. I have changed the README file to add instructions to create your own docker-compose.yml file since the dist version.\n. ",
    "thomasf": "@jngermon  I think you should arrange your deployment configuration differently. You don't need anything else from this repository than the docker-compose.yml. No need to pull this repository at all. \nIf you really want to have this repository checked out where you are deploying you can create your own branch and rebase from master when there's an update.\n. @jngermon  I think you should arrange your deployment configuration differently. You don't need anything else from this repository than the docker-compose.yml. No need to pull this repository at all. \nIf you really want to have this repository checked out where you are deploying you can create your own branch and rebase from master when there's an update.\n. Something like this seems to happen regardless if I provide valid credentials or nog...\nlog\nStarted POST \"/users/sign_in\" for 85.225.60.228 at 2016-07-25 08:26:32 +0000\nProcessing by SessionsController#create as HTML\nParameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"......\", \"user\"=>{\"login\"=>\"thomasf\", \"password\"=>\"[FILTERED]\", \"remember_me\"=>\"0\"}}\nCan't verify CSRF token authenticity\nCompleted 422 Unprocessable Entity in 11ms (ActiveRecord: 1.7ms)\nWhich like people have said above points to a possible solution here\nhttps://github.com/gitlabhq/gitlab-public-wiki/wiki/Trouble-Shooting-Guide#cant-verify-csrf-token-authenticitycant-get-past-login-pageredirected-to-login-page\nIt didnt work for me (still investigating) and it has worked up until the current version.\nupdate: X-Forwarded-Ssl on probably did the trick after some more rearranging of my haproxy.cfg.\n. @lazyfrosch solution does not work for me using haproxy, not right now at least.\n. @lazyfrosch  I think I just got it to work after rearraging my haproxy.cfg a bit more..  the X-Forwarded-Ssl on probably did the trick.\n. The defaults for protection has been like that for a long time, the problem we see is that we can't push to a branch which has protection even if it isn't a force-push. \nI now see these errors after upgrading to 8.14:\nhttps://gitlab.com/gitlab-org/gitlab-ce/issues/25301#note_19420235. you should probably always clear all data before restoring a older backup.. ",
    "arun-gupta": "Docker Toolbox 1.8.0 a1\nDocker version 1.8.1, build d12ea79\nAny workarounds?\n. OSX 10.10.5\nDocker Toolbox comes with Docker Machine that uses boot2docker.\n. Currently docker-compose.yml uses the following definition for postgres:\npostgresql:\n  image: sameersbn/postgresql:9.4-3\n  environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n  volumes:\n    - /Users/arungupta/tmp/gitlab/postgresql:/var/lib/postgresql\nHow do you recommend that should change?\n. Hosting postgresql files on the VM is fine. Still getting after changing:\npostgresql_1 | Initializing database...\npostgresql_1 | initdb: could not create directory \"/var/lib/postgresql/9.4\": Permission denied\n. ",
    "steinert": "I could solve the \"permission denied\" issue on my OSX 10.10.5 the way Sameer suggests: Connect the docker volumes to some directory which is outside of the directory that is configured as the shared directory in the VirtuslBox image (which is \"/Users\" in my default setup).\n. ",
    "johnosorio": "I have created one directory in /docker-data and put my volumes to write in it, ej:\nvolumes:\n        - /docker-data/dbdata:/var/lib/postgresql\nIt's working without permission issues.\nThanks!\n. ",
    "quartzinquartz": "Thanks for the information @sameersbn. \nI went on and ran those supervisorctl commands, which is something I had not known to do. I had previously ran service gitlab restart after each of those modifications that I listed above in the first post. After the supervisorctl commands that I just issued, I sent out a test email, though the test email hasn't coming through to my inboxes. \nI have tail -f log/production.log and I'm seeing Sent mail to ... lines one after the other. To note - I'm seeing multiple entries per email address; i.e. I sent one test email and user bob has just gotten at least 5 Sent mail to ... lines in the production.log over the past 5 minutes. I'm wondering, is that normal? \n. @sameersbn I'm uncertain about why that's happening, though I can say that there appear to be entries in that log for the emails that I have been attempting today. \nI was getting these:\nSent mail to bob@email.com (3.0ms)\nEmails disabled! Interceptor prevented sending mail test\nNow these:\nSent mail to bob@email.com (219.5ms)\nI'm wondering if the length of time (200'ish ms) has something to do with these emails not coming through to my (or anyone else's) inbox. Do you think they could be timing out against some threshold? I'm not even sure (off the top of my head) where I would go to look for such a threshold.\n. @sameersbn I ran tail -f for the production and sidekiq logs, then I removed/added an ssh key to suit your example:\nStarted POST \"/profile/keys\" for 127.0.0.1 at 2015-08-30 08:44:33 -0400\nProcessing by Profiles::KeysController#create as HTML\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"[FILTERED]\", \"key\"=>{\"title\"=>\"quartzinquartz@ethergen\", \"key\"=>\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDkBgg7J4A88CovWC7QwLNeny7WXrYdeSClvxhXDqMX5R5H42UWJZVid6gt8GOtrV3jo9P8lgH5bNUXLYnu]tL2PszvVK6BRmhxWox8Y+Kcnu6ptB2vvpphizOuJPhnyl1bW9ukQJ2PEgZzIrU093baI+wWudoGYzCxEeLWojoxxUlSOqQKZaBNISpL9zNk4QbQ7pHuTY8JKdDA5rf90PGBxyri92oUf+8GFUDn2MMHF33ogGsLlYVXIHsjWAhsJE7RLJ4zom/0AwUYDeI29PFXsHFIeHTwHzsWXwL3Ki6RTt1n4YAi83ca+ugetftYjOUtYvC9KUw/EjY3NTknKitf quartzinquartz@ethergen\"}}\n==> sidekiq.log <==\n2015-08-30T12:44:33.423Z 17972 TID-a6mno GitlabShellWorker JID-21f95220b4ce88376f3f4259 INFO: start\n==> production.log <==\nRedirected to https://gitlab.ourcompany.io/profile/keys/28\nCompleted 302 Found in 93ms (ActiveRecord: 13.5ms)\nStarted GET \"/profile/keys/28\" for 127.0.0.1 at 2015-08-30 08:44:33 -0400\nProcessing by Profiles::KeysController#show as HTML\n  Parameters: {\"id\"=>\"28\"}\nCompleted 200 OK in 71ms (Views: 46.6ms | ActiveRecord: 8.9ms)\n==> sidekiq.log <==\n2015-08-30T12:44:34.093Z 17972 TID-a6mno GitlabShellWorker JID-21f95220b4ce88376f3f4259 INFO: done: 0.67 sec\n2015-08-30T12:44:37.406Z 17972 TID-a6mno Sidekiq::Extensions::DelayedMailer JID-87a32d67b3e330bb38f910a9 INFO: start\n`\n==> production.log <==\nSent mail to quartzinquartz@ethergen.com (287.5ms)\n\n==> sidekiq.log <==\n2015-08-30T12:44:37.750Z 17972 TID-a6mno Sidekiq::Extensions::DelayedMailer JID-87a32d67b3e330bb38f910a9 INFO: fail: 0.344 sec\n2015-08-30T12:44:37.751Z 17972 TID-a6mno WARN: {\"retry\"=>true, \"queue\"=>\"default\", \"class\"=>\"Sidekiq::Extensions::DelayedMailer\", \"args\"=>[\"---\\n- !ruby/class 'Notify'\\n- :new_ssh_key_email\\n- - 28\\n\"], \"jid\"=>\"87a32d67b3e330bb38f910a9\", \"enqueued_at\"=>1440938673.4271758, \"error_message\"=>\"SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed\", \"error_class\"=>\"OpenSSL::SSL::SSLError\", \"failed_at\"=>1440938677.7497237, \"retry_count\"=>0}\n2015-08-30T12:44:37.751Z 17972 TID-a6mno WARN: SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed\n2015-08-30T12:44:37.751Z 17972 TID-a6mno WARN: /usr/lib/ruby/2.1.0/net/smtp.rb:586:in connect'\n/usr/lib/ruby/2.1.0/net/smtp.rb:586:intlsconnect'\n/usr/lib/ruby/2.1.0/net/smtp.rb:563:in do_start'\n/usr/lib/ruby/2.1.0/net/smtp.rb:520:instart'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail-2.6.3/lib/mail/network/delivery_methods/smtp.rb:112:in deliver!'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail-2.6.3/lib/mail/message.rb:2141:indo_delivery'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail-2.6.3/lib/mail/message.rb:236:in block in deliver'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/actionmailer-4.1.11/lib/action_mailer/base.rb:527:inblock in deliver_mail'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/notifications.rb:159:in block in instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/notifications/instrumenter.rb:20:ininstrument'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.1.11/lib/active_support/notifications.rb:159:in instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/actionmailer-4.1.11/lib/action_mailer/base.rb:525:indeliver_mail'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail-2.6.3/lib/mail/message.rb:236:in deliver'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/extensions/action_mailer.rb:32:indeliver'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/extensions/action_mailer.rb:20:in perform'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/processor.rb:75:inexecute_job'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/processor.rb:52:in block (2 levels) in process'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/chain.rb:127:incall'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/chain.rb:127:in block in invoke'\n/home/git/gitlab/lib/gitlab/sidekiq_middleware/memory_killer.rb:17:incall'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/chain.rb:129:in block in invoke'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidetiq-0.6.3/lib/sidetiq/middleware/history.rb:8:incall'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/chain.rb:129:in block in invoke'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/server/active_record.rb:6:incall'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/chain.rb:129:in block in invoke'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/server/retry_jobs.rb:74:incall'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/chain.rb:129:in block in invoke'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/server/logging.rb:11:inblock in call'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/logging.rb:22:in with_context'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/server/logging.rb:7:incall'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/chain.rb:129:in block in invoke'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/chain.rb:132:incall'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/middleware/chain.rb:132:in invoke'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/processor.rb:51:inblock in process'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/processor.rb:98:in stats'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sidekiq-3.3.0/lib/sidekiq/processor.rb:50:inprocess'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/celluloid-0.16.0/lib/celluloid/calls.rb:26:in public_send'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/celluloid-0.16.0/lib/celluloid/calls.rb:26:indispatch'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/celluloid-0.16.0/lib/celluloid/calls.rb:122:in dispatch'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/celluloid-0.16.0/lib/celluloid/cell.rb:60:inblock in invoke'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/celluloid-0.16.0/lib/celluloid/cell.rb:71:in block in task'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/celluloid-0.16.0/lib/celluloid/actor.rb:357:inblock in task'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/celluloid-0.16.0/lib/celluloid/tasks.rb:57:in block in initialize'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/celluloid-0.16.0/lib/celluloid/tasks/task_fiber.rb:15:inblock in create'\n2015-08-30T12:45:30.390Z 17972 TID-a6mno Sidekiq::Extensions::DelayedMailer JID-87a32d67b3e330bb38f910a9 INFO: start\n`\nWondering if this is the culprit. Looks like something is unable to verify the SSL cert:\n2015-08-30T12:44:37.751Z 17972 TID-a6mno WARN: {\"retry\"=>true, \"queue\"=>\"default\", \"class\"=>\"Sidekiq::Extensions::DelayedMailer\", \"args\"=>[\"---\\n- !ruby/class 'Notify'\\n- :new_ssh_key_email\\n- - 28\\n\"], \"jid\"=>\"87a32d67b3e330bb38f910a9\", \"enqueued_at\"=>1440938673.4271758, \"error_message\"=>\"SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed\", \"error_class\"=>\"OpenSSL::SSL::SSLError\", \"failed_at\"=>1440938677.7497237, \"retry_count\"=>0}\n2015-08-30T12:44:37.751Z 17972 TID-a6mno WARN: SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed\nedit: thanks again for your help\n. @sameersbn good eye. Have a nice day. Fixed.\n. ",
    "march1993": "Although setting openssl_verify_mode to none may help solve the problem, would it be better to include ca-certificates in the docker file?. ",
    "rysiekpl": "Any news on this?\n. ",
    "ivlis": "@rysiekpl  @sameersbn Thanks for reminding me about that :smile:.  Gitlab is changing rapidly, I'll update my config to the current version and submit a PR soon. I'm still on 7.14 for my personal server.\n. Very strange, but I do not see this issue in my build #555 \n```\ncurl -v -s http://localhost:10080/git/assets/select2-spinner-437488a72539a28672c1ca92a5fff21c.gif > /dev/null\n   Trying ::1...\n Connected to localhost (::1) port 10080 (#0)\n\nGET /git/assets/select2-spinner-437488a72539a28672c1ca92a5fff21c.gif HTTP/1.1\nHost: localhost:10080\nUser-Agent: curl/7.46.0\nAccept: /\n< HTTP/1.1 200 OK\n< Server: nginx\n< Date: Thu, 24 Dec 2015 15:12:46 GMT\n< Content-Type: image/gif\n< Content-Length: 1849\n< Connection: keep-alive\n< Accept-Ranges: bytes\n< Cache-Control: public\n< Expires: Sat, 24 Dec 2016 20:42:46 GMT\n< Last-Modified: Wed, 23 Dec 2015 14:03:33 GMT\n< X-Accel-Buffering: no\n< \n{ [1849 bytes data]\n* Connection #0 to host localhost left intact\n```\n. PR #555\n\nOn Thu, Dec 24, 2015, 12:41 PM Sameer Naik notifications@github.com wrote:\n\nissue 555?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/521#issuecomment-167140706\n.\n. Oh yeah, I confirm. Is this bug reported to the upstream?\n. @sameersbn Thanks, I'll do that, as well as for PostgreSQL, mySQL and nginx. Now I know the pattern.\n\nAlso, I'm going to separate the nginx server to a separate container (probably in another PR), what do you think?\n@Allineer ooops, I'll remove that.\n. OK. And I'll update for 8.3.0 also.\nOn Tue, Dec 22, 2015, 8:46 AM Sameer Naik notifications@github.com wrote:\n\ncan you please create separate PR's for each.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/545#issuecomment-166622021\n.\n. DONE\n. @sameersbn any plans for merging this?\n. #521 blocks this. It is better to wait till it will be fixed in the upstream gitlab-workhorse project. It is not possible to configure unicorn (or I don't know how) to open a socket at a location other from tmp/sockets and I don't want to mess with symlinks.\n\nBTW, why not allow nginx to serve static files directly, comes as a great mystery to me.\n. Hopefully gitlab will be decoupled from nginx soon and making all these things much easier! \n. If you use a relative path (i.e. /git) things can misbehave. It is mostly an upstream issue. Can you use a subdomain instead?\n. ",
    "istr": "No, I mean that I want the setting GITLAB_HTTPS_HSTS_ENABLED to have the advertised effect.\nThe point is that the current setup simply is broken. So \"We are correctly configuring HSTS in the nginx configs as user specifies them in the configs.\" still is not true, because\na) the settings do not have the wanted effect at all --  the directive in nginx exists, but the header is simply not added (which could be verified easily using curl or SSL Labs tool).\nLogged into the running gitlab docker container and verified:\nroot@4b8f0031c341:/home/git/gitlab# grep Strict /etc/nginx/sites-enabled/gitlab \nadd_header Strict-Transport-Security max-age=31536000;\nAccessed the running instance using curl (real host hidden here):\n```\ncurl -D- https://{...}.com/users/sign_in 2>/dev/null | head -n 20\nHTTP/1.1 200 OK\nServer: nginx\nDate: Sun, 18 Oct 2015 13:28:13 GMT\nContent-Type: text/html; charset=utf-8\nTransfer-Encoding: chunked\nConnection: keep-alive\nStatus: 200 OK\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\nX-Content-Type-Options: nosniff\nX-UA-Compatible: IE=edge\nETag: \"aad47721a290c9749d3f86c1d7a44383\"\nCache-Control: max-age=0, private, must-revalidate\nSet-Cookie: _gitlab_session=b42f9c8949802de8f56a0696254c66a1; path=/; expires=Sun, 25 Oct 2015 13:28:13 -0000; secure; HttpOnly\nX-Request-Id: 68a53101-ddb6-45e1-8ff4-b82496563d81\nX-Runtime: 0.024318\nX-Accel-Buffering: no\nhtml\n\n```\n\nb) you miss to set the headers for all HTTPS responses (e.g. 302, 404)\nI had similar issues in a different nginx setup -- for me the solution was to replace the \nadd_header directive with the more_set_headers 'Strict-Transport-Security: max-age=31536000'; directive.\n. Great! That should solve the issue. Thanks.\n. ",
    "obi12341": ":+1: thanks for your effort :)\n. Ups missed the stuff in README.md\n. ",
    "xiemeilong": ":+1:\n. ",
    "thiagoalmeidasa": ":thumbsup:\n. ",
    "lazyfrosch": "Please be careful with their image, it runs the service as root...\nI fiddled around with a new container: https://github.com/lazyfrosch/docker-mattermost\nMaybe mergeable to upstream later :)\n. the \"offical\" container of mattermost is rather ugly, bundling MySQL, and running the actual application as root - https://github.com/mattermost/platform/blob/master/docker/2.1/docker-entry.sh\nSince I'm not using a chat tool as of now, I'm not updating my container, but feel free to take the \"code\" lazyfrosch/docker-mattermost\n. @carukc you should maybe quote 'true' since bash has no understanding of a true type, and go might do weird things when converting it to string.\n. Have you tried specifying a full path?\nIt works for me with that...\n. Starting it with a systemd service:\n```\n[Unit]\nDescription=Redis cache\nBindsTo=docker.service\nBindsTo=gitlab-redis.service\nAfter=postgresql@9.4-main.service\n[Service]\nExecStartPre=-/usr/bin/docker kill gitlab\nExecStartPre=-/usr/bin/docker rm gitlab\nExecStartPre=-/usr/bin/docker pull sameersbn/gitlab\nExecStart=/usr/bin/docker run --name gitlab --link gitlab-redis:redisio --publish x.x.x.x:22:22 --publish 10080:80 --env-file /data/services/gitlab/environment -v /data/services/gitlab/data:/home/git/data sameersbn/gitlab\nExecStop=/usr/bin/docker stop gitlab\n[Install]\nWantedBy=multi-user.target\n```\nThe environments file looks like this:\nsh\nDB_TYPE=postgres\nDB_HOST=x.x.x.x\nDB_NAME=gitlab\nDB_USER=gitlab\nDB_PASS=longpassphrase\nGITLAB_HOST=git.lazyfrosch.de\nGITLAB_TIMEZONE=Berlin\nGITLAB_EMAIL=info@lazyfrosch.de\nGITLAB_EMAIL_REPLY_TO=info@lazyfrosch.de\nGITLAB_HTTPS=true\nSSL_SELF_SIGNED=true\nGITLAB_EMAIL_ENABLED=true\nSMTP_ENABLED=true\nSMTP_DOMAIN=lazyfrosch.de\nSMTP_HOST=xxx.lazyfrosch.de\nSMTP_PORT=25\nGITLAB_SECRETS_DB_KEY_BASE=longpassphrase\n. Docker version 1.8.3, build f4bf5c7 running on Debian Jessie\nThe container ran before with 1.7 as well.\nMaybe a problem with 1.7.0, but not sure... I'd definitely say it's no problem with this container.\n. Are you sure this is a problem with the Docker container??\n. I'm not using CI currently, but since nginx does not translate URLs of some sort, it sounds like a problem in the CI component. Maybe they never tested slashed branches...\n. In my setup I haven't set any ports via env variables. I'm just adding the forward proto header, and it works fine. Basically the whole site is redirected to https, and that is proxied to gitlab via port 80.\n. @djskinner :+1: \n. @SebaZet ?\n. The Ubuntu update should fix the problem. Also I'm wondering why a problem in the ssh client would cause us trouble here?\n. @sameersbn it is a bug in the SSH client with a half implemented feature, that can be broken by a malicious server, where the client might leak private keys in its memory.\n. Seems like the user deleted the PPA in the last few days.\n. Maybe we should keep that \"workaround\"\n. In the admin settings inside GitLab\n. The name prefix is generated from the directory name you ran docker-compose in, so its most likely your directory is named gitlab-runner or similar\n. Well, docker-compose is in my eyes not really meant for production, so in a production site you would set your names via the tool that controls the start of your containers. Like fleet, systemd, or custom scripts.\n. I fixed it by adding X-Forwarded-Ssl on as a header in my frontend proxy.\nWeird issue.\n. @thomasf im actually setting 3 headers:\nRequestHeader set X-Forwarded-Proto \"https\"  # (only had this before 8.10.0)\n  RequestHeader set X-Forwarded-Port 443\n  RequestHeader set X-Forwarded-Ssl on\n. @sameersbn I guess this really depends on how users want to use SSL, I'm doing this outside the container\n. @hsitaa what have you configured for the SMTP_* environment variables?\n. Im relaying locally, and don't have problems:\nGITLAB_EMAIL=info@example.com\nSMTP_ENABLED=true\nSMTP_DOMAIN=example.com\nSMTP_HOST=host.example.com\nSMTP_PORT=25\nWith your config and my gmail account I see the following error in Background jobs:\nEOFError: end of file reached\nYour mistake is with the SSL settings, you will need:\n```\nSMTP_STARTTLS=true\nSMTP_SSL=true\n```\nPort 465 is a normal TLS connection, no STARTTLS used there (which would be on port 25).\n. Thats a good point. I had the image running on latest before v7. With the intent to auto-update it when you guys release an image.\nWhich is not a good idea over breaking or even feature borders, e.g. the GITLAB_SECRETS_DB_KEY_BASE environment variable that was required.\nIt would be nice to lock it down to the feature version that way.\n. Thanks for all your efforts :heart: \n. Thanks for all your efforts :heart: \n. Oh regarding these tags, the only problem is that a tag build will only happen on a tag push.\nThere is no button for a manual build, unless you do a branch...\n. Oh regarding these tags, the only problem is that a tag build will only happen on a tag push.\nThere is no button for a manual build, unless you do a branch...\n. If you define it as a tag build yes (my example in first post). If you do a branch build, it can be updated easily.\nI guess it might be best to create such labels in addition to latest, and change the builds when the image adapts to 8.11.\n. If you define it as a tag build yes (my example in first post). If you do a branch build, it can be updated easily.\nI guess it might be best to create such labels in addition to latest, and change the builds when the image adapts to 8.11.\n. EE has a lot more integrations to consider, than CE. Just to name one: Elasticsearch for Indexing the server.\nLicense of EE would also not allow re-distribution, which is a Docker container:\n[...]\nSoftware may only be used, copied, modified, displayed, distributed, or\notherwise exploited with a valid GitLab Enterprise Edition subscription for the\ncorrect number of user seats\n[...]\nhttps://gitlab.com/gitlab-org/gitlab-ee/blob/master/LICENSE\n. IMHO: you should use the official packages when having a license, else GitLab won't support your setup.\n. 15432 is the port used on the Docker host, to forward data to the container.\nThe container still uses 5432, and since you are linking the containers (depends_on), the internal port is still on postgresql:5432. By the hostname, each container gets linked with a different hostname. This is basically a entry into /etc/hosts.\nSo if you have multiple postgresql databases, call it db1 and db2. And tell the gitlab container to connect to db1\n\nhttps://docs.docker.com/compose/compose-file/#links. Yes, plus editing the depends_on and gitlab environment variables.. \n",
    "vassilvk": "@sameersbn - according to this link, Mattermost can be set up alongside GitLab on the same server. Specifically the first approach discussed in the Getting started section indicates that Mattermost can be \"enabled\" by simply modifying gitlab.rb.\nIf this could be done in the Docker container running sameersbn/gitlab, it would provide out-of-the box integration of Mattermost with the GitLab instance.\nDo you think this approach of setting up Mattermost is feasible?\n. I understand, thanks @frenchbeard.\n. Thanks @sameersbn, @lazyfrosch.\nI ended up setting up a parallel Mattermost server using GitLab's official Docker container following the GitLab Mattermost integration setup docs here.\nThis way I get Sameer's lean GitLab setup and a parallel GitLab Mattermost setup, which integrates nicely (SSO, webhooks, etc.) with @sameersbn's GitLab container.\nWhen running the official GitLab container solely for the purposes of using Mattermost, the trick is to turn off GitLab on that container: gitlab_rails['enable'] = false.\n. This worked, @sameersbn - thanks!\n. ",
    "frenchbeard": "@vassilvk This would be on the \"omnibus-type\" install of gitlab, which comes bundled with mattermost and a couple of other things. In this docker image, gitlab (and only gitlab) is compiled and installed from source, meaning you don't have any part of mattermost within it.\n. @ninja- Have you tried your configuration through a docker network ? (I was considering making a configuration with a LDAP container on another host, but since you already plan on a PR...)\n. @ninja- @outcoldman I don't know the extent of isolation it provides, but I compartimented the 3 containers in a \"back-gitlab\" network, put an nginx reverse-proxy (in its own container) in this network and a \"front\" network, only exposing the reverse proxy. Hope this provides you with at least an idea.\n. @ninja- @outcoldman I know in my case I simply use the docker-compose file v2 syntax to specify it. I don't know which would be best though, having the reverse-proxy container simply linked to the gitlab container or plug it on the \"back\" network ?\n. @ninja- I have a big compose file for my server (with a lot of things tied together), I'll work on a simple one regarding only gitlab and nginx. It'll still be tied to jwilder's automated proxy though. I'll come back to you asap, tomorrow if decoupling things does not break the configuration.\n. Sorry for the delay, I kind of broke my config as I went on producing the Compose file.\nThe one thing problematic with v2 is that linked containers no longer provide the environment environment variables you use to connect to both Redis and Postgresql containers (IP and PORT), meaning we'll have to either change the way you get this information within the gitlab container or provide it directly in the Compose file (which I chose to do).\nI'm also trying to include the letsencrypt bit from #594 in this.\n. I left out the letsencrypt part for now, since testing it too many times ends up getting you locked out of the automated process. You can check the configuration file on my fork, with a somewhat secure nginx template file provided for the docker-gen container.\nThe ssh port still remains as a \"problem\", though.\n. That would do, and the same thing can be done for the postgresql, you could base it on the PR regarding switching the compose file to v2 #631, only adding the following :\nyaml\nversion: '2'\nservices:\n   postgresql:\n[...]\n      networks:\n         - backend\n[...]\n   redis:\n[...]\n      networks:\n         - backend\n[...]\n   gitlab:\n[...]\n      networks:\n         - backend\n         - frontend\n[...]\nnetworks:\n   frontend:\n      driver: bridge\n   backend:\n      driver: bridge\n. Yep, as mentionned in the docs, v2 removes part of the environment variables created when linking containers. If it were to be completely optimized for use with compose v2, the gitlab container should rely on the hostname associated with the containers, not their IP, as you will see if you inspect the postgresql container, something like the following : \n[...]\n```\n\"Networks\": {\n   \"gitlabautoproxy_backend\": {\n       \"IPAMConfig\": null,\n       \"Links\": null,\n       \"Aliases\": [\n           \"postgresql\",\n           \"33b255e89923\"\n```\n[...]\nwhereas the gitlab container has links created, with the corresponding aliases in the same network (here, the backend of the project) : \n[...]\n\"Networks\": {\n                \"gitlabautoproxy_backend\": {\n                    \"IPAMConfig\": null,\n                    \"Links\": [\n                        \"gitlabautoproxy_postgresql_1:gitlabautoproxy_postgresql_1\",\n                        \"gitlabautoproxy_postgresql_1:postgresql\",\n                        \"gitlabautoproxy_postgresql_1:postgresql_1\",\n                        \"gitlabautoproxy_redis_1:gitlabautoproxy_redis_1\",\n                        \"gitlabautoproxy_redis_1:redis_1\",\n                        \"gitlabautoproxy_redis_1:redisio\"\n                    ],\n                    \"Aliases\": [\n                        \"gitlab\",\n                        \"fc7f9a6df2c9\"\n                    ],\n[...]\nI was wondering if we could make the container support that form as well, checking for a \"postgresql\" and \"redisio\" answering to ping or something less... clunky.\n. I don't know if you've seen the added configuration necessary with the latest gitlab version (8.6.0 and following) : they now use the pg_trgm extension in postgresql, which you need to provide to the postgresql container, as in the docker-compose example : \npostgresql:\n  restart: always\n  image: sameersbn/postgresql:9.4-17\n  environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\nThe error log you provided even points to the problem : the pg_trgm extension is not activated.\n. @b6pzeusbc54tvhw5jgpyw8pwz2x6gs docker-compose itself provides the -p flag to define the prefix, but an empty string passed to this flag defaults to the directory name, as you currently have. Also, I don't think you'd be able to remove the _1 at the end of the name (haven't been able to on my part so far).\n. @Wyall regarding ssh, orca may be what you're looking for, it even mentions gitlab by name in the readme. I have been meaning to try it for a while, but never had the time to get to it, so any feedback on this would be welcome (the setup seems a little cumbersome, though).. Could you try to launch through \"docker run\" with --env 'DEBUG=true' as well, considering the information on the error Gitlab ran into is not displayed there ?. Your issue is lacking a couple of elements to be answered properly : \n- do you mean pushing java source through git or using Java code to push source code to git ?\n- when you ask for the method in Java, I guess you mean in the Java API bindings ? \nIf this is anything regarding the latter (Java API), there should be documentation linked to the API itself, this project uses the same bindings as the classical one, e.g, if you use http://timolshansky.com/java-gitlab-api/, the GitlabProject class should help you.. First of all, that kind of question shouldn't be posted as an issue on this repository, it's linked to the way git works and would be more at home on a forum dedicated to git itself (not a docker container for Gitlab). The commit API only provides information on the underlying git commit, and, if the name of the method, whatever language is concerned (Java or anything else), has not been modified, git won't know about it.\nYou should learn the way git (and its commits) work a little before attempting to use an API providing information on some of its elements, be it Gitlab's or any other.. ",
    "85siva": "Hi ,\nWe are trying to convert mysql to pgsql - the following error occurred - please help ASAP . \n\nroot@9bdac2ad37d5:/var/lib/postgresql/mysql-postgresql-converter# python db_converter.py gitlabhq_production.mysql gitlabhq_production.psql\nLine 23803 (of 24970: 95.33%) [76 tables] [21058 inserts] [ETA: 0 min 54 sec]Traceback (most recent call last):\nFile \"db_converter.py\", line 256, in \nparse(sys.argv[1], sys.argv[2])\n\nFile \"db_converter.py\", line 73, in parse\nline = line.decode(\"utf8\").strip().replace(r\"\\\\\", \"WUBWUBREALSLASHWUB\").replace(r\"\\0\", \"\").replace(r\"\\'\", \"''\").replace(\"WUBWUBREALSLASHWUB\", r\"\\\\\")\n\nFile \"/usr/lib/python2.7/encodings/utf_8.py\", line 16, in decode\nreturn codecs.utf_8_decode(input, errors, True)\n\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xa9 in position 56: invalid start byte. \n",
    "billfig": "Hi,  I'm having similar issue.\nLine 1401 (of 4740: 29.56%) [33 tables] [185 inserts] [ETA: 0 min 13 sec]Traceback (most recent call last):\n  File \"db_converter.py\", line 264, in \nparse(sys.argv[1], sys.argv[2])\n  File \"db_converter.py\", line 77, in parse\n    line = line.decode(\"utf8\").strip().replace(r\"\\\", \"WUBWUBREALSLASHWUB\").replace(r\"\\0\", \"\").replace(r\"\\'\", \"''\").replace(\"WUBWUBREALSLASHWUB\", r\"\\\")\nline 1401 of mysql dump is:\nINSERT INTO \"gpg_keys\" VALUES\nalso happens on another line: INSERT INTO \"gpg_signatures\" \n85siva , What is Line 23803 in your mysql dump?. ",
    "ye": "The official GitLab guide provides a easy guide to use pgloader to migrate the data from MySQL to PostgreSQL.\nhttps://docs.gitlab.com/ce/update/mysql_to_postgresql.html. Great answers @frostieDE and @ptcuops \nAs much as we like this port of GitLab dockerization, one major concern though I think, is that the new trend of the community is to integrate GitLab with kubernetes ecosystem(helm/charts etc) for container orchestration. And the official GitLab installation guide has acknowledged that, and progress with Cloud Native Images, which will replace its existing recommendation of omnibus GitLab images.\nAlthough Cloud Native Images are still a work in progress, they do intent to address a lot of the issues that mentioned above in existing omnibus images, like breaking down monolithic images into smaller more efficient images, horizontal scaling (with the help of kubernetes), flexible advanced configurations etc.\nAnd most importantly, they are official implementations that's guarantee to be maintained by an commercial organization. With all that, I do feel that many many contributors have poured into huge amount of time and effort into this project, wouldn't it be a better outcome if at last some of these efforts can be back ported into the official cloud native images? In other words, I wonder what's gonna be the ultimate fate of this project?\nMy team started GitLab installation with this project but looking forward, we are really seeing ourselves better benefiting from utilizing the official cloud native images. Is there a way migration from this project to the official GitLab k8s helm/chart images?\n. Make sure your MySQL connection parameters are correct and able to connect from insider of your GitLab container.\nmysqladmin -h 192.168.132.4 -P 3306 -u root -pquyu@mysql@mgr status is not responding, check your host ip, port, user, password(perhaps needs to be quoted?) are correct.. @sufengxue glad that you were able to figure it out. In your particular case, another way to get it working, you  can probably use docker run --link $CONTAINER_NAME to get the default bridge mode networking working as well. . ",
    "lorenz": "That worked, thanks! But is took some time to track down this issue. Could you maybe add a warning to the migration docs or fix it so that others don't need to debug it?\n. According to USN2869 it is now fixed in Ubuntu, so this PR is no longer necessary. Only the base image needs to be updated.\n. Pretty much the same configuration here, I'm not getting 422s but I'm getting URLs with http://git.my-domain.org:443/, which obviously don't work.\n. I have fixed my setup by reverting this line.\n. My config is similar, login works here, but for example on https://git.example.org/admin/health_check I have http://git.example.org:443/health_check... URLs and I can't access build logs. I have the latest version.\n. 11.6.4 was not tagged somehow, it doesn't look like this is Quay/Docker Hub's issue. I think this can be closed, .4 and .5 were tagged.. 11.8.0 is not tagged in the Git repository so it won't be picked up by the Docker registries. Build failure seems to be a fluke, I've just successfully built master.. The problem is not that you're not tagging it since you want to make some additional changes, but that the README currently says one should use a version that doesn't exist.. ",
    "linlinlinlin": "I am curious about the reason why the old version is not required but new version have to do it.\n. @SolidNerd Thanks!\nBut after I change it to \nProxyRequests off\nProxyPass /gitlab http://127.0.0.1:10080/gitlab/\nProxyPassReverse /gitlab http://127.0.0.1:10080/gitlab/\nand\nGITLAB_RELATIVE_URL_ROOT=/gitlab\nStill have same issue:\n422 The change you requested was rejected.\n. ",
    "Allineer": "man sed\n. Please, enable debugging, DEBUG_ENTRYPOINT=true and show me some lines from the log before this error.\nPS: DEBUG_ENTRYPOINT=true is turning on set -x\n. Wow!\nBy first, replace all symbols / in the GIITLAB_SECRETS_DB_KEY_BASE with any non-special ([a-zA-Z0-9])\n. Wow!!!\nReplace the GIITLAB_SECRETS_DB_KEY_BASE => GITLAB_SECRETS_DB_KEY_BASE !!!\n. Wow!!! Alpine is awesome!\n. 1. leave https inside of docker is turned on, but dont use the certificates. With certs must working only the  load balancer.\n. :))\nIf I am not mistaken, the meaning is the same, but is much faster on a large uploads/\n. You're right. Thanks.\n. > The cron stuff in entrypoint.sh failed without it\nJust drop this line.\nHow about the new mail_room.yml and updated gitlab.yml configs?\n. Woops. Thanks!\n. ",
    "favorinfo": "what if I forgot my secret?  \nI had used sameersbn/gitlab:7.9.0, and I forget the path I stored the secret or never owned the sercret?\n. I've got the same problem. \nAs I upgrade the gitlab to the newest version, I found that I can visit the site properly. However once I want to visit the repos, it came out the repository: does not exist .\nI search the repos in my disk, and then found that there is a directory named 'gitlab-satellites' in '/home/git/data/'. However the default GITLAB_REPOS_DIR in 8.0.4 is /home/git/data/repository. is that matters? \n. thx . I found that there is a repositories in /home/git/data.  the content in it  just like the '.git' dir in git repos. and files in gitlab-satellites are the repo files.  what if I copy  the files in  gitlab-satellites to the dir repository?\n. I entered the container, and use /sbin/entrypoint.sh app:sanitize to fix the permissions, it still doesn't work. Maybe I should rollback and upgrade  to the 7.14.3 and then update to the newest version.\n. I copy all the files in gitlab-satellites to repository and  use /sbin/entrypoint.sh app:sanitiz , then solved all the problems. \nthx!\n. ",
    "chengweiv5": "@sameersbn Yes, I changed the base image to official ubuntu and replace apt-get mirrors to a local one, so it could be faster.\nBTW, I could not reproduce on the vanilla code base. I think this bug introduced by changes I made, free free to close this one, thanks.\n. Sure, I'll submit a v2.\n. I'd like to revert commit 7004bb0553e7d86c8906f4970da91afd4e365194 which did rename Data Store to Persistence\n. I put a backup tarball into gitlab 8.0.4 backup directory and run restore task like below, but it fails.\n```\ndocker exec -it gitlab\ncd /home/git/gitlab\nroot@c649fcea323c:/home/git/gitlab# /sbin/entrypoint.sh app:rake gitlab:backup:restore BACKUP=1444248015 \nRunning \"gitlab:backup:restore\" rake task ...\nUnpacking backup ... done\nGitLab version mismatch:\n  Your current GitLab version (8.0.4) differs from the GitLab version in the backup!\n  Please switch to the following version and try again:\n  version: 7.9.2\nHint: git checkout v7.9.2\n```\nSo how could I upgrade gitlab from v7.9.2 to the latest 8.0.4?\n. And I found that gitlab documented that https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/raketasks/backup_restore.md\n\nRestore a previously created backup\nYou can only restore a backup to exactly the same version of GitLab that you created it on, for example 7.2.1.\n\nAnd in our document https://github.com/sameersbn/docker-gitlab#upgrading, it doesn't say anything about restore data from backup after new version of gitlab started. Seems it does a in-place upgrade? just reuse volumes mounted by previous gitlab container? Does this means all data are compatible between different gitlab versions?\n. OK, I found document about how to upgrade from source-installation\nhttps://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/update/patch_versions.md\nhttps://gitlab.com/gitlab-org/gitlab-ce/tree/master/doc/update\n. @sameersbn is there any inside about why I have to first upgrade to v7.14.3? I didn't find any from gitlab document above, thanks in advance!\n. @sameersbn thanks, I'll check that document, BTW, I didn't use gitlab-ci so far.\n. @favorinfo I did below to upgrade 7.9.2 to 8.0.4, note: I didn't use gitlab-ci before\nBefore upgrade, there are three containers started by docker-compose\n- gitlab\n- postgresql\n- redis\nTo verify if upgrade works, I backuped all data in gitlab persistent store(includes postgresql volume and redis volume) and untar in another machine, where I will start docker-compose to create the 3 containers.\nSo now I have all the data in another machine, and then I start docker-compose, after all of them started, I opened browser to access gitlab and all works great!\nTo ensure all goes fine, I did below commands as gitlab document suggested, of course in the gitlab container (docker exec -it gitlab /bin/bash)\nsudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production\nsudo -u git -H bundle exec rake gitlab:check RAILS_ENV=production\nthere is only a small problem says that uploads isn't in 0755 mode, so I just did chmod to fix it.\nBTW, I didn't do any migration commands as gitlab document suggested in step 4.\n. OK, entrypoint.sh does step 4 for me, great! So it works out of box.\n. FYI, I upgraded to 8.0.4 directly minutes ago, all goes fine. Except needs a small fix, like below.\nUploads directory setup correctly? ... no\n  Try fixing it:\n  sudo chmod 0750 /home/git/data/uploads\n  For more information see:\n  doc/install/installation.md in section \"GitLab\"\n  Please fix the error above and rerun the checks.\n. It's very weird!\nThis morning when I access my gitlab service again, I found all changes I made yesterday saved!\n. OK, thanks guys, waiting for the better 8.2.3\n. :+1: \n. @adamlc oh, that's correct! so it's should be removed in the install script.. updated. ",
    "debovema": "+1 for the fix :)\n. up\n. ",
    "fzerorubigd": "I have the exact same problem. I check the gitlab with this command : \ndocker exec -it gitlab sudo -u git -H bundle exec rake gitlab:check RAILS_ENV=production\n(Assume the container name is gitlab) the result is full of this error : \nwrong or missing hooks                                                                      [544/1745]\n  Try fixing it:\n  sudo -u git -H /home/git/gitlab-shell/bin/create-hooks\n  Check the hooks_path in config/gitlab.yml\n  Check your gitlab-shell installation\n  For more information see:\n  doc/install/installation.md in section \"GitLab Shell\"\n  Please fix the error above and rerun the checks.\nSo I try \ndocker exec -it gitlab sudo -u git -H /home/git/gitlab-shell/bin/create-hooks\nAnd every thing is fixed. \n. @sameersbn this was because I migrate from normal installation to this. \nall new repo was fine, but for old repo -since the addresses are changed- I get no hook or activity update or many other thing. \nThis is harmless to call this in the docker entry script, but I think it save a  lot of time for others like me. \nThank you!\n. ",
    "rkcreation": "Thanks ! I will test this soon, and let you know\n-------- Message d'origine --------\nDe : fzerorubigd notifications@github.com \nDate :06/10/2015  12:42  (GMT+01:00) \nA : sameersbn/docker-gitlab docker-gitlab@noreply.github.com \nCc : rkcreation nicolas@rkcreation.fr \nObjet : Re: [docker-gitlab] Webhooks don't trigger (#447) \nI have the exact same problem. I check the gitlab with this command :\ndocker exec -it gitlab sudo -u git -H bundle exec rake gitlab:check RAILS_ENV=production\n(Assume the container name is gitlab) the result is full of this error :\nwrong or missing hooks                                                                      [544/1745]\n  Try fixing it:\n  sudo -u git -H /home/git/gitlab-shell/bin/create-hooks\n  Check the hooks_path in config/gitlab.yml\n  Check your gitlab-shell installation\n  For more information see:\n  doc/install/installation.md in section \"GitLab Shell\"\n  Please fix the error above and rerun the checks.\nSo I try\ndocker exec -it gitlab sudo -u git -H /home/git/gitlab-shell/bin/create-hooks\nAnd every thing is fixed.\n\u2014\nReply to this email directly or view it on GitHub.\n. When I gitlab:check, I have just one warning for uploads directory, but no error for hooks or something. I fix this error, and now everything else is green.\nAnyway, I run /home/git/gitlab-shell/bin/create-hooks but it's the same thing : when I \"Test hook\" in UI, my hooks works, but when I push, nothing is done.\nAny other idea ?\nI think it's my setup, but I can't figure what's wrong...\nThanks\n. ",
    "elboletaire": "\ngot it. will add it to the app:sanitize command then\n\n:+1:\n. ",
    "russellseymour": "@Allineer thanks for that - that is the problem.\nI had checked the strings on everything else .... DOH!!\nI had just found the DEBUG_ENTRYPOINT flag when your email came in so was about to try that and then your second comment arrived.\nThanks again.\n. ",
    "cusspvz": "Alpine is also a great choice and it is libc based (instead of uclibc, as OpenWRT is).\n. Are you compiling gitlab and its resources or using pre-compiled binaries? (Don't really know what it depends on, gave to research that also. :+1: )\n. You could also include glibc. source\n. If i had to choose between both, i would choose the data container and volumes-from options aswell.\nHappens that it production and large scale things doesn't behave quite as we wanted them to. When loading gitlab as a standalone mode, data is there and you could access right away! If you're going to use that technique into a cluster, it doesn't quite work because you have to sync all data before running up GitLab, otherwise it will try to compile assets and create/migrate database. As so, last option is to access to a network file system, where data scaling isn't directly related with GitLab, and thats where NFS enters with BTSync.\nChanged my proposal to allow any type of data mounting before initializing GitLab. This allow users to select between BTSync + NFS or any other implementation such as GlusterFS.\nDocker has already some options for volume drivers using NFS, but it isn't ready for production.\n. @frank-dspeed could you please point to the exact place where it is being discussed? For me, it seems they are only discussing GitHub LFS (storage for none-code resources that are usually large, such as DBs, images, etc) and relating it with older software.\n. We're deploying into a cluster, centralizing something isn't an option for us. As so, I've created a image that sync files cross containers, and called btsync. Problem is that we were getting lot of issues trying to deploy as a \"Global\" cluster service. As so, we added the NFS server feature to allow other containers to access BTSync containers as a NFS service, being a network resource like mysql, redis, or any other else.\nSince this image doesn't have NFS support, we are sidekicking an image to mount NFS and expose as a Volume, but thats a bad workaround as hell. \n. ",
    "andypost": "There's alpine-based official ruby images now, so at least gitlab could eat less RAM\n. Here's a related issue https://gitlab.com/gitlab-org/gitlab-workhorse/issues/55. Passing via docker-compose.yml works for me\nyml\n  environment:\n    GITLAB_OMNIBUS_CONFIG: |\n      gitlab_rails['env'] = { 'prometheus_multiproc_dir' => '/dev/shm' }. for that purpose better to use https://docs.docker.com/compose/extends/. ",
    "csandanov": "Alpine-based GitLab CE 10: https://github.com/wodby/gitlab, see docker-compose.yml we use for tests.. ",
    "frank-dspeed": "NO YOUR ALL WRONG Look this:\nhttps://news.ycombinator.com/item?id=9343021\ngitlab will use git git will support alternate storage like couchbase or amazon s3 so gitlab itself will and then there is no mount workaround needed.\n. you can close this or move this to the existing PR's at git and gitlab but we are implamenting it even because we know the issu so only for your education current implamentation of gitlab and git supports alternate storage engines then a posix file system ;)\n. http://blog.deveo.com/your-git-repository-in-a-database-pluggable-backends-in-libgit2/\n. Sorry for the late answer but i have realy less time but i think there you can read up a bit whats it all about you can store all not only the meta data in databases we at present work mainly on couchbase because its the successor over simply all database systems on earth including all apache big data projects\nexpect auto clustering, sql like quering via n1ql only to point to some key futures, sure it supports also persistence as in memory storage read it up its worth the reading.\nwe ported all our storage needs to our own s3 implamentation via couchbase and cbfs we also doing a fuse mount for couchbase file system (cbfs)  but using libgit2 and directly use couchbase is the best.\n. @solidnerd looks solved. @solidnerd for me all that is ok as i don't use this image i only recommend it sometimes.\nthe most elegant way would be to do \napt-get install npm // Install Node Package Manager\nnpm install -g n yarn // NPM installs yarn and Node version Installer.\nn latest // Install latest NodeJs version. @solidnerd this should then fast get added to the readme i think  as this is the first point where they could see that. ",
    "kps18": "@ninja-  yes now it is working. After changed sticky mode. \nThanks\n. ",
    "dg-ratiodata": "Thanks a lot.\n. ### Preface\nI described the issue in more detail here https://github.com/golang/go/issues/12910. As said before and because of https://github.com/sameersbn/docker-gitlab/issues/464#issuecomment-147930784 I want to point out, that I think it's NOT an issue with https://github.com/sameersbn/docker-gitlab/, but more a problem of https://gitlab.com/gitlab-org/gitlab-ci-multi-runner or even https://gitlab.com/golang/go. \n!!!\nI'm quite happy with https://github.com/sameersbn/docker-gitlab/. It's nice to use, nice to configure and run! Thanks for your afford to make gitlab easy to \"install\".\n!!!\n@sameersbn Thanks for the information about overwriding the nginx configuration. I really appreciate that. As work around I am going to provide access to :80 and :443 without redirecting users from :80 to :443.\nDetails\nI use a certificate with such a chain of trust:\nRoot-CA\n  Sub-CA\n     Sub Sub-CA\n       Sub Sub Sub-CA\n         Server-CRT\nServing the certificate chain via webserver makes gitlab-ci-runner fail on register and each other request https:// to gitlab.\nServed Chain.\nSub-CA\n     Sub Sub-CA\n       Sub Sub Sub-CA\nIt fails with an encoding/asn.1-error.\nConclusion\nI think it's a problem with parsing the certificate chain. Maybe even caused by a bug in golang. I'm on the way to provide a docker image with a similar setup for the guys at https://github.com/golang/go/.\nInformation\nDocker Version\n```\nClient:\nVersion:      1.8.1\nAPI version:  1.20\nGo version:   go1.4.2\nGit commit:   d12ea79\nBuilt:        Thu Aug 13 02:19:43 UTC 2015\nOS/Arch:      linux/amd64\nServer:\nVersion:      1.8.1\nAPI version:  1.20\nGo version:   go1.4.2\nGit commit:   d12ea79\nBuilt:        Thu Aug 13 02:19:43 UTC 2015\nOS/Arch:      linux/amd64\n```\nDistribution\nRHEL 7\nDocker run\n/usr/bin/docker run --rm --name gitlab1 -p 443:443 -p 80:80 -p 10022:22 -v /srv/machines/gitlab/storage:/home/git/data -v /etc/machines/gitlab/config/gitlab-ssl.conf:/var/cache/gitlab/config/nginx/gitlab-ssl -v /etc/machines/gitlab/ssl/:/etc/ssl/gitlab/ --env-file=/etc/machines/gitlab/environment.db localhost:5000/sameersbn/gitlab:8.0.4\n. Yeah, I will do. But in the meantime I will try the Gitlab image directly from GitLab... Although your's work like a charm, but I saw an option to run both HTTP and HTTPS, maybe I can work around \"my\" problem. \nOne other question: What CI solution do you use with Gitlab? \nAfter reading the gitlab-ci-runner-issue tracker it seems to me, that they are a little bit understaffed: Many issues comming with 0.6.0 but only one developer working on that. \nUnfortunately Gitlab Integration of Drone CI seems to be broken (for some users) and this part of drone ci seems to be maintainer-less - at least this is what @bradrydzewski wrote on gitter.im.\n. What do you use as executor? \"docker\"? If yes via dind or via -v /var/lib/docker:/var/lib/docker? Sorry for asking so much, but having someone in reach with some experience is quite helpful if you're a noob in that area. \n. Thanks for sharing that information. :-)\n. ",
    "eanbowman": "\n@chengweiv5 that is true a backup can only be restored on the same gitlab version. You can upgrade to Gitlab 8.0 only from v7.14.3. So you first need to upgrade your existing setup to v7.14.3 and then upgrade to v8.0.4. There is no requirement to restore a backup while upgrading. The backup is only a fail-safe so that you can rollback if things go south.\n\nWhat good is a backup then?\nI have the old drive my gitlab server was on. Still working. Want to restore the repositories from it to my new drive.\nHow do I do THAT?\n[edit] There ARE several old packages of GitLab online.\nTo restore my backup from my old drive, I had to get the version of the backup. The way I did it was the long way (try backup, get error telling version). You can also glean the version from the filename of the backup. The last 3 digits are the version needed.\nsudo apt remove --purge gitlab-ce\nwget ((version of the file you need)).deb\nsudo dpkg -i ((version of the file you need)).deb\nThen if the backup files are already in /var/opt/gitlab/backups/, run your restore. Otherwise copy them there. Hope this helps someone.. > \n\n@chengweiv5 that is true a backup can only be restored on the same gitlab version. You can upgrade to Gitlab 8.0 only from v7.14.3. So you first need to upgrade your existing setup to v7.14.3 and then upgrade to v8.0.4. There is no requirement to restore a backup while upgrading. The backup is only a fail-safe so that you can rollback if things go south.\n\nWhat good is a backup then?\nI have the old drive my gitlab server was on. Still working. Want to restore the repositories from it to my new drive.\nHow do I do THAT?\n[edit] There ARE several old packages of GitLab online.\nTo restore my backup from my old drive, I had to get the version of the backup. The way I did it was the long way (try backup, get error telling version). You can also glean the version from the filename of the backup. The last 3 digits are the version needed.\nsudo apt remove --purge gitlab-ce\nwget ((version of the file you need)).deb\nsudo dpkg -i ((version of the file you need)).deb\nThen if the backup files are already in /var/opt/gitlab/backups/, run your restore. Otherwise copy them there. Hope this helps someone.. ",
    "hodrigohamalho": "Error line\nsudo -HEu git sed 's/{{GITLAB_PORT}}/tcp://172.30.185.58:22/' -i config/gitlab.yml\nBut can happen with any variable that the value contains the char /\nIf change the separator char it will work, eg:\nsudo -HEu git sed 's#{{GITLAB_PORT}}#tcp://172.30.185.58:22#' -i config/gitlab.yml\n. Nice :)\nTo be honest I give up to put this image from sameers to work. I installed gitlab using gitlab-ce image and it is all embedded, so is less flexibe but more easy.\nThanks!\n. @michaelryanmcneill sure, I make an step by step on my repo https://github.com/hodrigohamalho/openshift .\nGitlab specific instructions: https://github.com/hodrigohamalho/openshift/blob/master/gitlab/README.adoc\n. ",
    "kurktchiev": "@hodrigohamalho So @sameersbn is correct you can just pass in --name and get this working. But on the OpenShift end there is a problem, due to the fact that the image is trying to run as root and by default OpenShift does not allow such things. To get started you can do the following on your master:\n1. oc login -u system:admin\n2. oc edit scc privileged \n3. Change all RunAs to RunAsAny\n4. oc edit scc restricted\n5. Repeat step 3\nNOTE: This allows images to run as root, this is not a good idea in production, but for right now I have not figured out the proper way to allow only certain Openshift projects to have RunAsAny vs RunAsUser,etc.\n. We are working on getting this going in a more OpenShifty way here https://github.com/michaelryanmcneill/docker-gitlab @michaelryanmcneill and I are working on it.\n. ",
    "martingabelmann": "sorry, didnt saw your announcement-comment https://github.com/sameersbn/docker-gitlab/issues/39 .\n. In future something like this (comparing the value of GITLAB_SECRETS_OTP_KEY_BASE and the one stored in the container) somewhere in the assets could also prevent from been confused, right?\n. ",
    "fchedemail": "I'm having the same issue, on a similar setup (Debian)\n```\n~# docker-compose --version\ndocker-compose version: 1.4.0\n~# docker version\nClient:\n Version:      1.8.1\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   d12ea79\n Built:        Thu Aug 13 02:20:14 UTC 2015\n OS/Arch:      linux/amd64\nServer:\n Version:      1.8.1\n API version:  1.20\n Go version:   go1.4.2\n Git commit:   d12ea79\n Built:        Thu Aug 13 02:20:14 UTC 2015\n OS/Arch:      linux/amd64\n```\n. ",
    "codingnet": "the issue may be related to the \"relative_root_url via http/https on v8.x\" #446\nI have GITLAB_RELATIVE_URL_ROOT in my settings.\n. The latest build works.\nThank you\n. ",
    "recteurlp": "I've tested the latest build and it's working for me.\nThanks\n. Quick Fix it should work for other sub uri than /gitlab but not tested\nbash\ndocker exec -it gitlab bash\nexport RELATIVE_URL=\"/gitlab\"\nsed -i 's:try_files $uri $uri/ /index.html $uri.html @gitlab;:alias /home/git/gitlab/public/assets;:' /etc/nginx/sites-enabled/gitlab\nsed -i \"s:url(/assets/:url(${RELATIVE_URL}/assets/:g\" application-c0f2658d29adbe2eb8bff8f10d06476438d47a6f3d756ab00e20ed87803333e9.css\nsed -i \"s:url(\\\"/assets/:url(\\\"${RELATIVE_URL}/assets/:g\" application-c0f2658d29adbe2eb8bff8f10d06476438d47a6f3d756ab00e20ed87803333e9.css\nsupervisorcrl restart nginx\nCould you consider something like this ? maybe for a 8.6.1-beta release ?\n. ",
    "electricmonk": "I'm not sure what @ninja-  experienced, but my problem is that startup time for a fresh install can be around 90 seconds due to assert compilation. My use case is end-to-end testing a system that uses Gitlab, the test takes 90+ seconds to run due to Gitlab compiling assets each time. \n. @sameersbn yes. We're talking about an end-to-end test.\n. @sameersbn thanks!\n. Hmmm\nMy tests fail against latest (but pass against 8.0.5). Apparently, cloning via HTTP (didn't try ssh as my tests currently use HTTP cloning) reports the repo is not found. When I query the Gitlab server via web or API, it DOES report that the repo exists.\n(OS X 10.10.5, boot2docker)\n% git clone http://root:5iveL\\!fe@192.168.59.103:10080/root/a-repo-1444990833566.git                                                                                                               !11081\nCloning into 'a-repo-1444990833566'...\nremote: Not Found\nfatal: repository 'http://root:5iveL!fe@192.168.59.103:10080/root/a-repo-1444990833566.git/' not found\n. @sameersbn awesome. Test now runs in just over 60 seconds. It could run even faster if you could also run the database migration during build. Do you think that would be possible? would you mind if I took a stab at it? :)\n. @sameersbn hmm. Do you mean to create tables, insert initial data, stuff like that, right? makes sense.\nMaybe some way to deliver a default setup of Gitlab + Redis + Postgress (like your compose file) which could point to a Postgress image on which the schema already exists? or do Gitlab change the schema often?\n. I think it's ~10 seconds. Not sure if it's worth it. Oh well. Thanks!\nOn Fri, Oct 16, 2015 at 9:32 PM, Sameer Naik notifications@github.com\nwrote:\n\nbut i believe the bulk of that startup time would be attributed to gitlab and its components starting up. migration might not take that long.\nReply to this email directly or view it on GitHub:\nhttps://github.com/sameersbn/docker-gitlab/issues/461#issuecomment-148797027\n. \n",
    "mlewe": "Thanks for the quick fix.\nGreat work! :+1: \n. I have the same problem. In the generated CSS files the wrong asset path is referenced. E.g.:\n@font-face{font-family:'FontAwesome';src:url(\"/assets/fontawesome-webfont-....eot?v=4.4.0\");\nBut GITLAB_RELATIVE_URL_ROOT is set to \"/git\".\n@sameersbn You still can't reproduce this?\n. I'm sorry for opening this unnecessary issue.\nhttp_proxy and https_proxy are environment variables and can be set directly with docker.\n. ",
    "maximino": "@sameersbn Thanks for the prompt reply, I just got into the container and was able to ping google and github from in there:\n```\nsynology> docker exec -it synology-gitlab bash\nERRO[0000] Unable to connect to local syslog daemon   \nroot@synology-gitlab:/home/git/gitlab# ifconfig\neth0      Link encap:Ethernet  HWaddr 02:42:ac:11:00:12\n          inet addr:172.17.0.18  Bcast:0.0.0.0  Mask:255.255.0.0\n          inet6 addr: fe80::42:acff:fe11:12/64 Scope:Link\n          UP BROADCAST RUNNING  MTU:1500  Metric:1\n          RX packets:236212 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:158871 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:0 \n          RX bytes:18631918 (18.6 MB)  TX bytes:47638265 (47.6 MB)\nlo        Link encap:Local Loopback\n          inet addr:127.0.0.1  Mask:255.0.0.0\n          inet6 addr: ::1/128 Scope:Host\n          UP LOOPBACK RUNNING  MTU:65536  Metric:1\n          RX packets:32 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:32 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:0 \n          RX bytes:2240 (2.2 KB)  TX bytes:2240 (2.2 KB)\nroot@synology-gitlab:/home/git/gitlab# ping google.com\nPING google.com (74.125.227.67) 56(84) bytes of data.\n64 bytes from qro01s11-in-f3.1e100.net (74.125.227.67): icmp_seq=1 ttl=57 time=8.27 ms\n64 bytes from qro01s11-in-f3.1e100.net (74.125.227.67): icmp_seq=2 ttl=57 time=6.39 ms\n64 bytes from qro01s11-in-f3.1e100.net (74.125.227.67): icmp_seq=3 ttl=57 time=9.18 ms\n64 bytes from qro01s11-in-f3.1e100.net (74.125.227.67): icmp_seq=4 ttl=57 time=11.2 ms\n64 bytes from qro01s11-in-f3.1e100.net (74.125.227.67): icmp_seq=5 ttl=57 time=8.75 ms\n^C\n--- google.com ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4007ms\nrtt min/avg/max/mdev = 6.395/8.769/11.246/1.564 ms\nroot@synology-gitlab:/home/git/gitlab# ping github.com\nPING github.com (192.30.252.129) 56(84) bytes of data.\n64 bytes from github.com (192.30.252.129): icmp_seq=1 ttl=52 time=84.7 ms\n64 bytes from github.com (192.30.252.129): icmp_seq=2 ttl=52 time=81.0 ms\n64 bytes from github.com (192.30.252.129): icmp_seq=3 ttl=52 time=83.8 ms\n64 bytes from github.com (192.30.252.129): icmp_seq=4 ttl=52 time=81.8 ms\n```\nSo I guess the DNS resolution is working OK.\nAs for your other comment, I don't see where the \"Import All\" option is, probably because I don't get that far in the process. The error 500 I get is immediately after I hit the GitHub button from the \"Import project from\" section, inside the \"New Project\" GitLab form.\n\n. Hi @sameersbn,\nThanks for the feedback, it probably was a bug in the 8.0.5 version. Just upgraded over the weekend to the 8.2.2 version and it worked flawlessly.\nClosing this now! \n. ",
    "Zenithar": "Same problem for me.\n. ",
    "knight42": "+1 same problem here. I have rolled back to 8.0.4-1.\n. @sameersbn It works like a charm now :+1: What happened?\n. ping @sameersbn @solidnerd \n. @solidnerd Any progress?\n. @solidnerd \nnginx_configure_gitlab_retain_ip_header() is called in nginx_configure_gitlab(), which means it directly modify /etc/nginx/sites-enabled/gitlab, hence I think there is no need for this to be done for nginx-ssl.\n. Same  problem here.\nFrom nginx docs:\n\nipv6only=on|off\nthis parameter (0.7.42) determines (via the IPV6_V6ONLY socket option) whether an IPv6 socket listening on a wildcard address [::] will accept only IPv6 connections or both IPv6 and IPv4 connections. This parameter is turned on by default. It can only be set once on start.\n\nTherefore nginx will try to bind 0.0.0.0:80 twice if listen 0.0.0.0:80; and listen [::]:80 ipv6only=off are present in the config, which breaks nginx.\n. ",
    "mikew": "I'm seeing this on 8.0.5 as well, our docker-gitlab is proxied behind an HTTPS nginx container, could that be the issue?\n. Nope, no relative_url stuff here.\n. Are you aware of the changes to nginx.conf?\n. @sameersbn no clue how, but my gitlab:8.0.5 has gitlab-git-http-server 0.3.0, which is causing this issue, and GITLAB_GIT_HTTP_SERVER_VERSION is not set in my container.\n. @sameersbn still not seeing 8.0.5-1 on the tags page\n. are you using OSX?\n. Make sure to use the IP of your Docker VM. If you're using docker-machine, try this:\nbash\nopen http://$(docker-machine ip dev):10080\n. Where is the server hosted? EC2? Is port 25 open?\n. You're correct, but app:sanitize changes permissions and owners of files and folders. Since they're bind-mounted in Docker, those changes will persist.\nMaybe try one of:\n``` sh\nThis will execute the command in an already running container\ndocker-compose exec gitlab /sbin/entrypoint.sh app:sanitize\nThis will spawn a new container, run the command, and delete the container.\ndocker-compose run --rm gitlab /sbin/entrypoint.sh app:sanitize\n``\n. You're correct, but [app:sanitize` changes permissions and owners of files and folders](https://github.com/sameersbn/docker-gitlab/blob/eff3895214bdc475d2aaa0af094bf8d31641b7f1/assets/runtime/functions#L1069-L1106). Since they're bind-mounted in Docker, those changes will persist.\nMaybe try one of:\n``` sh\nThis will execute the command in an already running container\ndocker-compose exec gitlab /sbin/entrypoint.sh app:sanitize\nThis will spawn a new container, run the command, and delete the container.\ndocker-compose run --rm gitlab /sbin/entrypoint.sh app:sanitize\n``\n. @patrickc91 With docker-compose, the generated container name could differ from machine to machine, since it's based on the parent folder name. In fact, in your example it would actually begitlab_gitlab_1. Usingdocker-compose exectakes out that guesswork.\n. @patrickc91 With docker-compose, the generated container name could differ from machine to machine, since it's based on the parent folder name. In fact, in your example it would actually begitlab_gitlab_1. Usingdocker-compose exec` takes out that guesswork.\n. The Git documentation says that the shorter format is acceptable:\n\nOr you can use the shorter scp-like syntax for the SSH protocol:\n$ git clone user@server:project.git\n\nAnyways, I don't think this is an issue because:\n\nThe URL given works\nIt's fine to omit the default port in the URL\nIf it were an issue, it would be upstream in gitlab. Here is where they get the value from.. Since redis/DB ports are not exposed to the host, there's no need to change them.\n\nYou can change port 80, but an alternative would be put an nginx proxy in front of both Gitlab instances so you don't have to worry about that.\nThe tricky part will be port 22. Gitlab expects to own that port. For your other host, you will have to tell SSH to use the other port (or use the HTTPS interface).. @Scukerman docker-compose run ... respects the containers ENTRYPOINT, which is already set to /sbin/entrypoint.sh. Note that even the project's own documentation doesn't mention /sbin/entrypoint.sh: https://github.com/sameersbn/docker-gitlab#creating-backups\n@majidhashemi70 does your docker-compose.yml file override the entrypoint?. Does setting the SMTP_PORT environment variable get it working?. There are specific instructions for this in this project's README: https://github.com/sameersbn/docker-gitlab#restoring-backups\n@scheiblr what was the command you ran?. ",
    "ithiru": "Thanks a lot ! I was pulling my hair for couple of hours\n. ",
    "Sundypha": "@sameersbn 8.0.5-1 works like a charm :thumbsup:\n. ",
    "kesopeso": "Nevermind, I figured it out... I just need to set GITLAB_PORT=10443 and add port entry 10443:443 in docker-compose.yml\n. ",
    "babatundebusari": "I am not migrating actually\nSetting up a new gitlab instance\nSo want to have gitlab on \"https://gitlab.example.com\" and ci on \"https://ci.example.com\"\nRight now gitlab works fine and i am able to get it on \"https://gitlab.example.com\" but have no steps/instructions for the environment variables to use to setup ci.\n2 Also is it possible to have redis internal instead of the external configuration that comes with your container?\nThanks\n. What about the previous question about gitlab-ci environment variables to setup as described in my previous message?\nThanks\n. with new gitlab release can one have ci on another subdomain like i described above(seems you didn't see that part)?\n- gitlab on gitlab.example.com\n- ci ci.example.com\n  with current latest release?\nThanks\n. ",
    "junxy": "Maybe can add some environment variables...\n- GITLAB_ NEW_RELIC_ENABLED: Enable or disable gitlab new relic monitoring. Defaults to true if GITLAB_ NEW_RELIC_LICENSE_KEY is defined, else defaults to false\n- GITLAB_ NEW_RELIC_LICENSE_KEY: Used to new relic  monitoring variables. No defaults.\n- GITLAB_ NEW_RELIC_APP_NAME:  Defaults to gitlab\n- GITLAB_ NEW_RELIC_LOG_LEVEL: Defaults to info\n. @sameersbn Thanks ; )\n. Yes\n$ ls gitlab/certs/\nca.crt  dhparam.pem  gitlab.crt  gitlab.key\n```\nroot@222c1cd17368:/home/git/gitlab# curl -v https://ci.self-signed-cert.com/gitlab/ping\n Hostname was NOT found in DNS cache\n   Trying 192.168.1.199...\n Connected to ci.self-signed-cert.com (192.168.1.199) port 443 (#0)\n successfully set certificate verify locations:\n   CAfile: none\n  CApath: /etc/ssl/certs\n SSLv3, TLS handshake, Client hello (1):\n SSLv3, TLS handshake, Server hello (2):\n SSLv3, TLS handshake, CERT (11):\n SSLv3, TLS handshake, Server key exchange (12):\n SSLv3, TLS handshake, Server finished (14):\n SSLv3, TLS handshake, Client key exchange (16):\n SSLv3, TLS change cipher, Client hello (1):\n SSLv3, TLS handshake, Finished (20):\n SSLv3, TLS change cipher, Client hello (1):\n SSLv3, TLS handshake, Finished (20):\n SSL connection using ECDHE-RSA-AES256-GCM-SHA384\n Server certificate:\n    subject: C=CN; ST=HuNan; O=self-signed-cert; OU=Oc; CN=ci.self-signed-cert.com\n    start date: 2015-07-14 08:50:50 GMT\n    expire date: 2016-07-13 08:50:50 GMT\n    common name: ci.self-signed-cert.com (matched)\n    issuer: C=CN; ST=HuNan; L=ChangSha; O=self-signed-cert; OU=self-signed-cert Root CA\n*    SSL certificate verify ok.\n\nGET /gitlab/ping HTTP/1.1\nUser-Agent: curl/7.35.0\nHost: ci.self-signed-cert.com\nAccept: /\n< HTTP/1.1 200 OK\n Server nginx is not blacklisted\n< Server: nginx\n< Date: Thu, 22 Oct 2015 01:50:26 GMT\n< Content-Type: text/html;charset=UTF-8\n< Content-Length: 37\n< Connection: keep-alive\n< X-Content-Type-Options: nosniff\n< Set-Cookie: JSESSIONID.6ca14ef5=1omhkpbuwstwb1em1r3wlfnubk;Path=/;Secure;HttpOnly\n< Expires: Thu, 01 Jan 1970 00:00:00 GMT\n< X-Frame-Options: sameorigin\n< X-XSS-Protection: 1; mode=block\n< X-Frame-Options: DENY\n<\n Connection #0 to host ci.self-signed-cert.com left intact\nGitlab Web Hook is up and running :-)\n```\n. GitLab bug reported at  https://github.com/gitlabhq/gitlabhq/issues/9304\n. \n",
    "Ilya-Kuchaev": "Any news here? :)\n. @zitsen Thanks! It works for me.\n. +1 :)\n. +1\n. 8.6.1 is available. They are really fast :)\n. Any success here?\n. Any chance to see it merged? :)\n. It's possibly related to https://gitlab.com/gitlab-org/gitlab-ce/issues/19073\nI have the same issue.\n. Any news?\n. https://github.com/sameersbn/docker-gitlab#using-https-with-a-load-balancer\n. Any news here?\n. Any chance to see it merged shortly?\n. Please look at https://gitlab.com/gitlab-org/omnibus-gitlab/compare/8-12-stable...8-13-stable#diff-34 changes. I believe there are some useful settings to set with variables.\n. GitLab 8.13.1 released\nhttps://about.gitlab.com/2016/10/25/gitlab-8-dot-13-dot-1-released/\n. Any news here?. Or even today?. I still do not see the Workhorse's version.. @reynold-lariza Just try to use the proper repository\nhttps://gitlab.com/gitlab-org/gitlab-ce/tags. Any chance to see it merged?\n8.15.4 has been released https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG.md#8154-2017-01-09. Any news here?. Any news here?. Any chance to see it released soon? :). Any news here?. 9.2.1. Any news here?. @sameersbn @solidnerd Ping. 9.2.7 is already merged\nhttps://github.com/sameersbn/docker-gitlab/pull/1258. Any ETA?. What about https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG.md#951-2017-08-23 ?. @solidnerd, @sameersbn Any news here?. @sameersbn  Do you have any plans to move to 16.04?. Any chance to see it merged shortly?. @sameersbn Any thoughts?. Anyone?. If somebody interested...\n\nCreate a dump of all project variables\n```\n\n!/usr/bin/env ruby\nrequire 'pry'\nrequire 'gitlab'\nrequire 'terminal-table'\nrequire 'yaml'\nGitlab.endpoint = 'https:///api/v4'\nGitlab.private_token = ''\nprojects = Gitlab.projects(order_by: 'id')\nprojects.auto_paginate do |project|\n  begin \n    variables = Gitlab.variables(project.id)\n    project_vars = {}\n    variables.auto_paginate do |variable|\n      project_vars[variable.key] = variable.value\n    end\n    unless project_vars.empty?\n      puts project.name\n      File.open(\"dump/#{project.id}.yml\", 'w') { |f| f.write(YAML.dump(project_vars)) }\n    end\n  rescue\n    next\n  end\nend\n2. Upgrade GitLab to 10.4 with the new GITLAB_SECRETS_DB_KEY_BASE value\n3. Delete all variables directly in postgres\ndelete from ci_variables;\n4. Re-create variables from dump\n!/usr/bin/env ruby\nrequire 'pry'\nrequire 'gitlab'\nrequire 'terminal-table'\nrequire 'yaml'\nGitlab.endpoint = 'https:///api/v4'\nGitlab.private_token = ''\nDir.chdir('dump')\nDir.glob('.yml') do |item|\n  variables = YAML.load(File.read(item))\n  variables.each do |variable|\n    puts File.basename(item, \".\")\n    Gitlab.create_variable(File.basename(item, \".\"), variable[0], variable[1])\n  end \nend\nIf you're using the Group based variables edit the scripts to get/create them . Any chance to see it merged?. Yep. It works...\nHm... @solidnerd Maybe it has to be configured with the default value?. @sameersbn @solidnerd Any news?. Something wrong with the PR?. https://hub.docker.com/r/sameersbn/gitlab/builds/\nBuild failed: The command '/bin/sh -c apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E1DD270288B4E6030699E45FA1715D88E1DF1F24 && echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu xenial main\" >> /etc/apt/sources.list && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 80F70E11F0F0D5F10CB20E62F5DA5F09C3173AA6 && echo \"deb http://ppa.launchpad.net/brightbox/ruby-ng/ubuntu xenial main\" >> /etc/apt/sources.list && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 8B3981E7A6852F782CC4951600A6F0A3C300EE8C && echo \"deb http://ppa.launchpad.net/nginx/stable/ubuntu xenial main\" >> /etc/apt/sources.list && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && echo 'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main' > /etc/apt/sources.list.d/pgdg.list && wget --quiet -O - https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && echo 'deb https://deb.nodesource.com/node_8.x xenial main' > /etc/apt/sources.list.d/nodesource.list && wget --quiet -O - https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && echo 'deb https://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y supervisor logrotate locales curl nginx openssh-server mysql-client postgresql-client redis-tools git-core ruby${RUBY_VERSION} python2.7 python-docutils nodejs yarn gettext-base libmysqlclient20 libpq5 zlib1g libyaml-0-2 libssl1.0.0 libgdbm3 libreadline6 libncurses5 libffi6 libxml2 libxslt1.1 libcurl3 libicu55 libre2-dev tzdata && update-locale LANG=C.UTF-8 LC_MESSAGES=POSIX && locale-gen en_US.UTF-8 && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && gem install --no-document bundler && rm -rf /var/lib/apt/lists/' returned a non-zero code: 2\n```. What about latest tag?. @solidnerd  Any news here?. Any news here?\n. @solidnerd Is there any issue with the upgrade?. @sameersbn @solidnerd ?. Any news here?. ",
    "okaufmann": "Is there already a date this will be available? @sameersbn\n. That was quick! Thanks you !\n. @outcoldman no bug it's now builded with quay.io so you have to take this one quay.io/sameersbn/gitlab:8.1.0. More under: https://github.com/sameersbn/docker-gitlab#installation\n. Already tried. Doesn't work, cause its really handled as name not as path...\nOther possibility?\n. :+1: \n. can just confirm this: it works now. ",
    "KurtRMueller": "Yes\n. Yes! This worked for me. Thank you.\n. ",
    "JStumpp": "Absolutely wonderful! Thanks a lot!\n. ",
    "ldgeo": "ok seems to be fixed after \"rake assets:clean assets:precompile cache:clear RAILS_ENV=production\"\nclosing...\n. same issue here, i found a workaround, i don't know if its the right fix but it worked : \nreference: https://gitlab.com/gitlab-org/gitlab-ce/issues/38275#note_41338711. ",
    "carukc": "using\n- SMTP_ENABLED=true\nworks fine.  I wonder why docker-compose is translating these strings.\n. using\n- SMTP_ENABLED=true\nworks fine.  I wonder why docker-compose is translating these strings.\n. I also agree that option 2 sounds better.  I guess this will require a couple mods to install.sh.  Is there anything I can do to help?\nChris\n. I also agree that option 2 sounds better.  I guess this will require a couple mods to install.sh.  Is there anything I can do to help?\nChris\n. Hi, I've not figured it out yet but in my case, it's a local system running Ubuntu 16.10 and latest docker but the build itself uses the Dockerfile that's in this repo.\nSince the whole point of Docker is to create a repeatable build it's hard to see how it's possible that it should appear some time but not others...  perhaps the repo that we happen to be pulling files from?. Hi, I've not figured it out yet but in my case, it's a local system running Ubuntu 16.10 and latest docker but the build itself uses the Dockerfile that's in this repo.\nSince the whole point of Docker is to create a repeatable build it's hard to see how it's possible that it should appear some time but not others...  perhaps the repo that we happen to be pulling files from?. I'm running 4.8.0-46-generic. I'm running 4.8.0-46-generic. Can you tell which version of yarn loads when it does work for you?   I've tried the build on several systems. Always the same result. I'll try on a copy of 16.04 tomorrow.. Can you tell which version of yarn loads when it does work for you?   I've tried the build on several systems. Always the same result. I'll try on a copy of 16.04 tomorrow.. Docker version 17.04.0-ce, build 4845c56  (CE). Docker version 17.04.0-ce, build 4845c56  (CE). Thanks.  I just git cloned and then 'make build'. Thanks.  I just git cloned and then 'make build'. I've just tried a build on a machine with 16.04 (with 9.1.2).  Same error.. I've just tried a build on a machine with 16.04 (with 9.1.2).  Same error.. Thank you!. Thank you!. ",
    "ProbablyRusty": "@sameersbn I removed the 8.1.0 image, and re-ran with an 8.1.2 image, and the symptoms are the same. Backup fails with a NoMethodError: undefined methodempty?' for nil:NilClass` error. I looked at #191, but am not sure specifially what to take away from that thread.\n. ",
    "mohamnag": "I ran into the same problem and @outcoldman's comment solved it for me. It seems that when running without input enabled, for example with run and not with -it key, or with docker-compose up or docker-compose start this happens. Anyway in my case worked around it by running docker-compose run.\n. ",
    "jave": "I did remove the container and the image for gitlab. After pulling and restarting i get the same problem.\nThis is with fairly new bits, docker 1.8 and matching docker compose.\nI'm suspecting some form of race condition that happens only when restarting the gitlab container stack. Starting from fresh seems to nearly always work.\n. I split out the gitlab container from the redis and pg ones, which\nstill run in the compose file.\nstart the gitlab container like this, now with the json-file logger.\ndocker run --name gitlab --log-driver=json-file \\\n    --link ci_postgresql_1:postgresql --link ci_redis_1:redisio \\\n    --publish 50004:22 --publish 50003:80 \\\n    --env 'GITLAB_PORT=50003' --env 'GITLAB_SSH_PORT=50004' \\\n    --env 'GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string' \\\n    --volume ./data/gitlab/gitlab:/home/git/data \\\n    quay.io/sameersbn/gitlab:8.1.2\n\n\n\n\n\n\nWaiting for database server to accept connections...........................................................[root@localhost ci]# [root@localhost ci]# \n\n\n\n\n\n\nso gitlab cant connect to postgres it seems.\nbut i can enter the pg container and issue psql queries.\nsu postgres\npsql\n\\c gitlabhq_production\nselect * from projects;\nlists the test projects so postgres seems happy to a degree anyway.\nso, theres some other reason gitlab cant connect to the pg container.\nI wasnt able to verify network connectivity to the pg 5432 port yet,\nbecause im not sure what the params should look like.\nthis didnt work.\npsql -h 127.0.0.1 -p 5432 gitlabhq_production\nPassword: \npsql: FATAL:  password authentication failed for user \"postgres\"\n. this works from the host(entering password at prompt):\npsql -U gitlab -h 172.17.0.23 gitlabhq_production\n. this is from inside the gitlab container\npsql -U gitlab -h 172.17.0.23 gitlabhq_production\npsql: could not connect to server: No route to host\n    Is the server running on host \"172.17.0.23\" and accepting\n    TCP/IP connections on port 5432?\nbut ping works.\nping 172.17.0.23\nping 172.17.0.23\nPING 172.17.0.23 (172.17.0.23) 56(84) bytes of data.\n64 bytes from 172.17.0.23: icmp_seq=1 ttl=64 time=0.110 ms\n64 bytes from 172.17.0.23: icmp_seq=2 ttl=64 time=0.093 ms\n. On Fedora, the docker daemon gets these flags\n/usr/bin/docker daemon --selinux-enabled --log-driver=journald\nselinux is in permissive state\nThe other containers seem to be able to talk to each other.\ncant there be some problem in the postgres conf, such that it only allows certain ip ranges?\n. the last part of the container pghba conf looks like below.\nit seems like the listening row is added for each restart maybe?\nTYPE  DATABASE        USER            ADDRESS                 METHOD\n\"local\" is for Unix domain socket connections only\nlocal   all             all                                     peer\nIPv4 local connections:\nhost    all             all             127.0.0.1/32            md5\nIPv6 local connections:\nhost    all             all             ::1/128                 md5\nAllow replication connections from localhost, by a user with the\nreplication privilege.\nlocal   replication     postgres                                peer\nhost    replication     postgres        127.0.0.1/32            md5\nhost    replication     postgres        ::1/128                 md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\nhost    all             all             0.0.0.0/0               md5\n. adding\n  log_driver: \"json-file\"\nto each container i get much better logging!\nbefore the gitlab container dies it repeats this statement approx 50 times\ngitlab_1     | + /usr/lib/postgresql/9.4/bin/pg_isready -h 172.17.0.37 -p 5432 -U gitlab -d gitlabhq_production -t 1\nthe same statement from the host works\npg_isready -h 172.17.0.37 -p 5432 -U gitlab -d gitlabhq_production -t 1\n172.17.0.37:5432 - accepting connections\n. [root@localhost ci]# getenforce\nPermissive\n[root@localhost ci]# docker --version\nDocker version 1.8.2-fc23, build 1b3b127-dirty\n[root@localhost ci]# docker-compose version\ndocker-compose version: 1.5.0rc2\ndocker-py version: 1.5.0\nCPython version: 2.7.9\nOpenSSL version: OpenSSL 1.0.1e 11 Feb 2013\n[root@localhost ci]# uname -a\nLinux localhost.localdomain 4.2.0-300.fc23.x86_64 #1 SMP Fri Sep 4 13:27:08 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n[root@localhost ci]# cat /etc/fedora-release \nFedora release 23 (Twenty Three)\n. I have a solution now, which sucks, but it works.\n- I had to export both the redis port and the postgres port to the host\n- I had to use the external postgres/redis conf options, except redis and pg are running in containers rather than being external\n- I also had to chown the gitlab repo dir, for some reason. they were owned by root. Im not sure why that happened.\nheres the working compose file. 10.0.75.24 is the ip of the host.\n``` yaml\npostgresql:\n  log_driver: \"json-file\"\n  image: quay.io/sameersbn/postgresql:9.4-5\n  ports:\n    - \"50005:5432\"\n  environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n  volumes:\n    - ./data/gitlab/postgresql:/var/lib/postgresql\nredis:\n  log_driver: \"json-file\"\n  image: quay.io/sameersbn/redis:latest\n  volumes:\n    - ./data/gitlab/redis:/var/lib/redis\n  ports:\n    - \"50006:6379\"  \ngitlab:\n  log_driver: \"json-file\"\n  image: quay.io/sameersbn/gitlab:8.1.2\n  links:\n    - redis:redisio\n    - postgresql:postgresql\n  ports:\n    - \"50003:80\"\n    - \"50004:22\"\n  environment:\n    - REDIS_HOST=10.0.75.24\n    - REDIS_PORT=50006\n    - DB_TYPE=postgres\n    - DB_HOST=10.0.75.24\n    - DB_PORT=50005\n    - TZ=Europe/Stockholm\n    - GITLAB_TIMEZONE=Stockholm\n- GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string\n\n- GITLAB_HOST=localhost\n- GITLAB_PORT=50003\n- GITLAB_SSH_PORT=50004\n\n- GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n- GITLAB_NOTIFY_PUSHER=false\n\n- GITLAB_EMAIL=notifications@example.com\n- GITLAB_EMAIL_REPLY_TO=noreply@example.com\n- GITLAB_INCOMING_EMAIL_ADDRESS=reply@example.com\n\n- GITLAB_BACKUPS=daily\n- GITLAB_BACKUP_TIME=01:00\n\n- SMTP_ENABLED=true\n- SMTP_DOMAIN=nwise.se\n- SMTP_HOST=127.0.0.1\n- SMTP_PORT=587\n\n- SMTP_USER=mailer@example.com\n- SMTP_PASS=password\n- SMTP_STARTTLS=true\n- SMTP_AUTHENTICATION=login\n- IMAP_ENABLED=false\n- IMAP_HOST=imap.gmail.com\n- IMAP_PORT=993\n- IMAP_USER=mailer@example.com\n- IMAP_PASS=password\n- IMAP_SSL=true\n- IMAP_STARTTLS=false\n- DEBUG_ENTRYPOINT=true\n\nvolumes:\n    - ./data/gitlab/gitlab:/home/git/data\n```\n. @pnelsonsr yes currently I'm trying bleeding nose versions, but I have also tried Centos 7 and Fedora 22. Thanks for the hints!\nIn my case I use docker compose, and the /etc/hosts manipulation does seem to work, since I can ping the redis and pg container, from within the gitlab container. The odd thing is that the gitlab container cant access the redis and pg ports.\nIt is possible for the gitlab container to connect to host ports, so if I export pg and redis to the host, and from gitlab accesses these exported container ports on the host, gitlab works.\n. @pnelsonsr I tried connecting directly from within the gitlab container to the pg container with the psql tool. That doesnt work. I can ping though. So it feels more like the pg and redis ports doesnt answer on the docker net.\n. @sameersbn thanks for the info! The issue you linked to does indeed seem to be the same I have. So I will test to remove firewalld from the machine when I have physicall access to it, which will take a while unfortunately. I will report here when that happens.\n. ",
    "kalesastha": "Yeah , I tried with both . It's not working for me . Could you please send me how you invoked an container with specifying --env-file option .??\n. In which version of docker are you using .? Is this issue related to docker version .? \n. Then, i'll try it with this after upgrading my docker version and let you know the status of the issue . Thanks for your quick reply .\n. ",
    "zedtux": "For your information I have fixed my issue by updating my server's /etc/sysctl.conf file by uncommenting the net.ipv6.conf.all.forwarding=1 and adding net.ipv6.bindv6only=0. Finally I have stopped all my containers, restarted docker and restarted the contains and now it's working.\nThere is a strange behavior in netstat as described in this SO answer.\nI think, a documentation regarding this issue should be added to the README.md file so that people aren't going to waste time on investigating this issue.\n. ",
    "samchristie": "thanks\nSam Christie\n919-272-1368\nFrom: Sameer Naik [mailto:notifications@github.com] \nSent: Tuesday, November 10, 2015 2:02 AM\nTo: sameersbn/docker-gitlab docker-gitlab@noreply.github.com\nCc: samchristie sam.christie@live.com\nSubject: Re: [docker-gitlab] INFO exited: unicorn (exit status 1; not expected) (#492)\nPlease make sure the system has more than 1GB of available RAM.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/sameersbn/docker-gitlab/issues/492#issuecomment-155330828 .  https://github.com/notifications/beacon/AAU_wf6r42NKdywCIUA-x12piy5o5gzYks5pEY3WgaJpZM4GfIhA.gif \n. Thanks for your help (and for following up). I am investigating the use of gitlab.com private project support as an alternative. If that doesn\u2019t pan out for me I will enlarge the instance and try again.\nSam Christie\n919-272-1368\nFrom: Sameer Naik [mailto:notifications@github.com] \nSent: Sunday, November 15, 2015 7:38 AM\nTo: sameersbn/docker-gitlab docker-gitlab@noreply.github.com\nCc: samchristie sam.christie@live.com\nSubject: Re: [docker-gitlab] INFO exited: unicorn (exit status 1; not expected) (#492)\nwas the issue resolved?\n\u2014\nReply to this email directly or view it on GitHub https://github.com/sameersbn/docker-gitlab/issues/492#issuecomment-156808931 .  https://github.com/notifications/beacon/AAU_wQup_H4aIAi8GAWLyZLGT2kbB8KTks5pGHQPgaJpZM4GfIhA.gif \n. ",
    "fevxie": "Thanks @sameersbn, It's working after repulling gitlab image.\n. I know nginx config is out of scope of this documentation.  I fix the issue myself,  still thanks.. ",
    "blufor": "Thank you, I've probably found where the problem is - su git -c \"bundle exec rake gitlab:check\" says something interesting:\n/usr/lib/ruby/2.1.0/logger.rb:592:in `initialize': Permission denied @ rb_sysopen - /var/log/gitlab/gitlab-shell/gitlab-shell.log (Errno::EACCES)\n    from /usr/lib/ruby/2.1.0/logger.rb:592:in `open'\n    from /usr/lib/ruby/2.1.0/logger.rb:592:in `open_logfile'\n    from /usr/lib/ruby/2.1.0/logger.rb:549:in `initialize'\n    from /usr/lib/ruby/2.1.0/logger.rb:318:in `new'\n    from /usr/lib/ruby/2.1.0/logger.rb:318:in `initialize'\n    from /home/git/gitlab-shell/lib/gitlab_logger.rb:15:in `new'\n    from /home/git/gitlab-shell/lib/gitlab_logger.rb:15:in `<top (required)>'\n    from /home/git/gitlab-shell/lib/gitlab_net.rb:6:in `require_relative'\n    from /home/git/gitlab-shell/lib/gitlab_net.rb:6:in `<top (required)>'\n    from /home/git/gitlab-shell/bin/check:4:in `require_relative'\n    from /home/git/gitlab-shell/bin/check:4:in `<main>'\ngitlab-shell self-check failed\n  Try fixing it:\n  Make sure GitLab is running;\n  Check the gitlab-shell configuration file:\n  sudo -u git -H editor /home/git/gitlab-shell/config.yml\n  Please fix the error above and rerun the checks.\ni fixed the ownership manually (it was root's instead of git's) but didn't help. So tried your solution:\n```\nAdapting uid and gid for git:git to 600:600\nSSL keys and certificates were not found.\nAssuming that the container is running behind a HTTPS enabled load balancer.\nChecking repository directories permissions...\nChecking builds directories permissions...\nChecking uploads directory permissions...\nCreating gitlab-shell hooks...\nExecuting gitlab:env:info raketask...\nSystem information\nSystem:     Ubuntu 14.04\nCurrent User:   git\nUsing RVM:  no\nRuby Version:   2.1.7p400\nGem Version:    2.2.5\nBundler Version:1.10.6\nRake Version:   10.4.2\nSidekiq Version:3.3.0\nGitLab information\nVersion:    8.1.4\nRevision:   295b1f0\nDirectory:  /home/git/gitlab\nDB Adapter: postgresql\nURL:        https://git.prz\nHTTP Clone URL: https://git.prz/some-group/some-project.git\nSSH Clone URL:  ssh://git@git.prz:10022/some-group/some-project.git\nUsing LDAP: no\nUsing Omniauth: no\nGitLab Shell\nVersion:    2.6.5\nRepositories:   /home/git/data/repositories/\nHooks:      /home/git/gitlab-shell/hooks/\nGit:        /usr/bin/git\n```\nUnfortunately, no change :(\nI'll try to make SSHd a bit more verbose and update on progress...\n. ok, so here's DEBUG2:\n```\ndebug1: Forked child 466.\nSet /proc/self/oom_score_adj to 0\ndebug1: rexec start in 6 out 6 newsock 6 pipe 8 sock 9\ndebug1: inetd sockets after dupping: 5, 5\nConnection from 10.4.0.1 port 43805 on 192.168.168.4 port 22\ndebug1: Client protocol version 2.0; client software version OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.3\ndebug1: match: OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.3 pat OpenSSH_6.6.1* compat 0x04000000\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_6.6.1p1 Ubuntu-2ubuntu2.3\ndebug2: fd 5 setting O_NONBLOCK\ndebug1: list_hostkey_types: ssh-rsa,ssh-dss,ecdsa-sha2-nistp256,ssh-ed25519\ndebug1: SSH2_MSG_KEXINIT sent\nconnection close happens here after 120s\n```\none interesting thing i've found - /home/git/.ssh/authorized_keys has only one key (a deploy key). there are no traces of my key... wtf? :)\n. ok, I've rebuild the authorized_keys file, which looks OK now, but the problem still persists. honestly, according to SSH logs from both sides it looks more like and issue with the network... Not sure if there's anything wrong, I'll do some dumping. Here's the full command used to start the container:\ndocker run \\\n  --net bridge \\\n  -m 0b \\\n  --detach=true \\\n  --link postgres:postgresql \\\n  --link redis:redisio \\\n  -e USERMAP_UID=600 \\\n  -e USERMAP_GID=600 \\\n  -e SMTP_ENABLED=true \\\n  -e SMTP_STARTTLS=false \\\n  -e SMTP_HOST=mother.prz \\\n  -e SMTP_PORT=25 \\\n  -e GITLAB_HOST=git.prz \\\n  -e GITLAB_PORT=443 \\\n  -e GITLAB_SSH_PORT=10022 \\\n  -e GITLAB_HTTPS=true \\\n  -e GITLAB_ROOT_PASSWORD=XXXXXXXXXXX \\\n  -e GITLAB_EMAIL=repo@xxxxxxxx \\\n  -e GITLAB_EMAIL_DISPLAY_NAME='GitLab' \\\n  -e GITLAB_BACKUPS=daily \\\n  -e UNICORN_WORKERS=4 \\\n  -e GITLAB_SECRETS_DB_KEY_BASE=XXXXXXXXXXXXXXXXXXXXX \\\n  -e SSL_SELF_SIGNED=true \\\n  -p 10080:80 \\\n  -p 10022:22 \\\n  -v /srv/gitlab:/home/git/data  \\\n  --name gitlab \\\n  sameersbn/gitlab:8.1.4\nand the iptables-save:\n```\nGenerated by iptables-save v1.4.21 on Tue Nov 17 16:19:59 2015\n*nat\n:PREROUTING ACCEPT [62:3720]\n:INPUT ACCEPT [40:2400]\n:OUTPUT ACCEPT [379:22460]\n:POSTROUTING ACCEPT [410:24320]\n:DOCKER - [0:0]\n-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER\n-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER\n-A POSTROUTING -s 192.168.168.0/24 ! -o docker0 -j MASQUERADE\n-A POSTROUTING -s 192.168.168.5/32 -d 192.168.168.5/32 -p tcp -m tcp --dport 5000 -j MASQUERADE\n-A POSTROUTING -s 192.168.168.4/32 -d 192.168.168.4/32 -p tcp -m tcp --dport 80 -j MASQUERADE\n-A POSTROUTING -s 192.168.168.4/32 -d 192.168.168.4/32 -p tcp -m tcp --dport 22 -j MASQUERADE\n-A DOCKER ! -i docker0 -p tcp -m tcp --dport 5000 -j DNAT --to-destination 192.168.168.5:5000\n-A DOCKER ! -i docker0 -p tcp -m tcp --dport 10080 -j DNAT --to-destination 192.168.168.4:80\n-A DOCKER ! -i docker0 -p tcp -m tcp --dport 10022 -j DNAT --to-destination 192.168.168.4:22\nCOMMIT\nCompleted on Tue Nov 17 16:19:59 2015\nGenerated by iptables-save v1.4.21 on Tue Nov 17 16:19:59 2015\n*filter\n:INPUT ACCEPT [16915:15572864]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [14753:14943998]\n:DOCKER - [0:0]\n-A FORWARD -o docker0 -j DOCKER\n-A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\n-A FORWARD -i docker0 ! -o docker0 -j ACCEPT\n-A FORWARD -i docker0 -o docker0 -j ACCEPT\n-A DOCKER -d 192.168.168.5/32 ! -i docker0 -o docker0 -p tcp -m tcp --dport 5000 -j ACCEPT\n-A DOCKER -d 192.168.168.4/32 ! -i docker0 -o docker0 -p tcp -m tcp --dport 80 -j ACCEPT\n-A DOCKER -d 192.168.168.4/32 ! -i docker0 -o docker0 -p tcp -m tcp --dport 22 -j ACCEPT\nCOMMIT\nCompleted on Tue Nov 17 16:19:59 2015\n```\n. What puppet does is just use of vanilla docker. It's basically a wrapper library which generates init script for each container you define in puppet DSL. The command I sent you is what actually gets executed.\nAlso --net bridge is default, and means use of docker's bridge (whatever you name it, docker0 by default)\nI've had another idea that's always a good choice, when weird stuff happens and shouldn't - look into kernlog - and it proved itself :)\n[110296.985717] ------------[ cut here ]------------\n[110296.985737] WARNING: CPU: 1 PID: 0 at /build/buildd/linux-3.13.0/net/core/dev.c:2222 skb_warn_bad_offload+0xcd/0xda()\n[110296.985739] : caps=(0x0000000207db78e9, 0x0000000000000000) len=1354 data_len=1226 gso_size=1288 gso_type=5 ip_summed=1\n[110296.985740] Modules linked in: xt_nat xt_tcpudp veth xt_conntrack ipt_MASQUERADE iptable_nat nf_conntrack_ipv4 nf_defrag_ipv4 nf_nat_ipv4 xt_addrtype iptable_filter ip_tables x_tables nf_nat nf_conntrack bridge stp llc aufs joydev hid_generic kvm_intel kvm usbhid cirrus ttm hid serio_raw drm_kms_helper drm syscopyarea sysfillrect sysimgblt mac_hid i2c_piix4 lp parport psmouse floppy pata_acpi\n[110296.985770] CPU: 1 PID: 0 Comm: swapper/1 Tainted: G        W    3.13.0-24-generic #47-Ubuntu\n[110296.985771] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011\n[110296.985773]  0000000000000009 ffff88023fd03a60 ffffffff81715ac4 ffff88023fd03aa8\n[110296.985775]  ffff88023fd03a98 ffffffff810676bd ffff8800a10d7300 ffff88023096e000\n[110296.985777]  0000000000000005 0000000000000001 ffff8800a10d7300 ffff88023fd03af8\n[110296.985785] Call Trace:\n[110296.985786]  <IRQ>  [<ffffffff81715ac4>] dump_stack+0x45/0x56\n[110296.985794]  [<ffffffff810676bd>] warn_slowpath_common+0x7d/0xa0\n[110296.985796]  [<ffffffff8106772c>] warn_slowpath_fmt+0x4c/0x50\n[110296.985801]  [<ffffffff81362e63>] ? ___ratelimit+0x93/0x100\n[110296.985802]  [<ffffffff817189d2>] skb_warn_bad_offload+0xcd/0xda\n[110296.985806]  [<ffffffff8161be59>] __skb_gso_segment+0x79/0xb0\n[110296.985808]  [<ffffffff8161c14a>] dev_hard_start_xmit+0x18a/0x560\n[110296.985810]  [<ffffffff8161c838>] __dev_queue_xmit+0x318/0x500\n[110296.985814]  [<ffffffff816244ca>] ? neigh_add_timer+0x1a/0x40\n[110296.985815]  [<ffffffff8161ca30>] dev_queue_xmit+0x10/0x20\n[110296.985817]  [<ffffffff81624f0b>] neigh_resolve_output+0x11b/0x220\n[110296.985820]  [<ffffffff81654dc0>] ip_finish_output+0x1b0/0x3b0\n[110296.985822]  [<ffffffff81656328>] ip_output+0x58/0x90\n[110296.985823]  [<ffffffff816522ab>] ip_forward_finish+0x8b/0x170\n[110296.985825]  [<ffffffff816526e5>] ip_forward+0x355/0x410\n[110296.985829]  [<ffffffff816503fd>] ip_rcv_finish+0x7d/0x350\n[110296.985831]  [<ffffffff81650d48>] ip_rcv+0x298/0x3d0\n[110296.985833]  [<ffffffff8161a906>] __netif_receive_skb_core+0x666/0x840\n[110296.985835]  [<ffffffff8161aaf8>] __netif_receive_skb+0x18/0x60\n[110296.985836]  [<ffffffff8161ab63>] netif_receive_skb+0x23/0x90\n[110296.985840]  [<ffffffff815216e4>] virtnet_poll+0x4d4/0x850\n[110296.985842]  [<ffffffff8161aee2>] net_rx_action+0x152/0x250\n[110296.985845]  [<ffffffff8106caec>] __do_softirq+0xec/0x2c0\n[110296.985847]  [<ffffffff8106d035>] irq_exit+0x105/0x110\n[110296.985851]  [<ffffffff817287d6>] do_IRQ+0x56/0xc0\n[110296.985855]  [<ffffffff8171df6d>] common_interrupt+0x6d/0x6d\n[110296.985856]  <EOI>  [<ffffffff8104f596>] ? native_safe_halt+0x6/0x10\n[110296.985863]  [<ffffffff8101c5ff>] default_idle+0x1f/0xc0\n[110296.985865]  [<ffffffff8101cec6>] arch_cpu_idle+0x26/0x30\n[110296.985867]  [<ffffffff810beb85>] cpu_startup_entry+0xc5/0x290\n[110296.985872]  [<ffffffff81040fc8>] start_secondary+0x218/0x2c0\n[110296.985873] ---[ end trace 811e30919579a412 ]---\nAnd that sadly points me here https://bugzilla.kernel.org/show_bug.cgi?id=82471\nNeedless to say, it is outside the scope of this project. Thank you for your help.\n. Solved by ethtool -K <ixgbe_card_name> lro off ;)\n. ",
    "xvonabur": "Same problem here. Nginx just doesn't start. Removing gitlabe and restarting nginx via supervisor resolves the issue. \nThe problem is reproducible only on latest tag (8.1.4). 8.1.3 doesn't create gitlabe. \nI'm using the following docker run:\ndocker run -d --name=\"gitlab\" --net=\"bridge\" --privileged=\"true\" -e GITLAB_HOST=\"git.example.org\" -e GITLAB_EMAIL=\"gitlab@example.org\" -e GITLAB_SSH_PORT=\"22\" -e GITLAB_PORT=\"10080\" -e GITLAB_HTTPS=\"false\" -e SSL_SELF_SIGNED=\"false\" -e SMTP_USER=\"gitlab@example.org\" -e SMTP_PASS=\"gitlab_C6\" -e GITLAB_BACKUPS=\"daily\" -e GITLAB_BACKUP_EXPIRY=\"2419200\" -e GITLAB_SECRETS_DB_KEY_BASE=\"rD4GG3DtBHppkMBXbcNNXpwZvhSVh9N9zmbHS6tn74FV3sk97vN24cRf5vbb28Xz\" -e TZ=\"Europe/Moscow\" -p 10022:22/tcp -p 10443:443/tcp -p 10080:80/tcp -v \"/mnt/cache/appdata/gitlab-ci-runner/\":\"/etc/gitlab-runner\":rw -v \"/mnt/cache/appdata/gitlab\":\"/home/git/data\":rw -v \"/mnt/cache/appdata/postgresql\":\"/var/lib/postgresql\":rw -v \"/mnt/user/appdata/gitlab/etc/nginx/sites-enabled\":\"/etc/nginx/sites-enabled\":rw --link gitlab-postgresql:postgresql --link redis:redisio sameersbn/gitlab\n. I'll try soon to do so with master branch. By the way, master has more commits, than 8.1.4 tag release.\nMy mounts are just for testing purposes. I've removed them, but it didn't resolve the issue.\nUPDATE:\nI didn't have gitlabe with docker-compose and docker-compose.yml from master branch. I've tried several times and every run had no issue. So, clean start works fine. \nsameersbn, can you test upgrade process from 8.1.3 to 8.1.4?\n. I'm using primary docker run, not docker-compose. My target machine runs on Unraid. It's NAS software solution based on Slackware 14.1 and has Docker 1.7.1 in it. So far I haven't any problems with it since version 7 of your docker-gitlab repo. Till 8.1.4.\nI'll try to reproduce the issue via VM on pure Slackware distro.\nUPDATE\nSomething strange is happening. Apparently the issue is reproducible only with latest as a tag. When I use explicit version (8.1.4 or 8.1.3) nginx starts without an issue. I tried to remove and redownload docker images, but the issue remains for latest tag.\n. Yep. The issue is solved! :thumbsup: Thanks!\n. ",
    "angeloh": "I got a similar error in my docker setup. It is not related to this issue. But if someone sees this error when you run docker run ..., you can try sudo service docker restart.\n. ",
    "sakhinov": "I just had the same issue on CentOS 7. I figured out that docker service is configured that way (/lib/systemd/system/docker.service):\nAfter=network.target docker.socket\nRequires=docker.socket\nIt means, that docker service starts right after network.target started, and doesn't wait for network.target finished (including firewalld.service). Therefore firewalld.service actually started in parallel or after docker.service rewriting its nat rules.\nChanging docker.service settings to these solved the problem (/lib/systemd/system/docker.service):\nAfter=network.target docker.socket\nRequires=network.target docker.socket\n. I just had the same issue on CentOS 7. I figured out that docker service is configured that way (/lib/systemd/system/docker.service):\nAfter=network.target docker.socket\nRequires=docker.socket\nIt means, that docker service starts right after network.target started, and doesn't wait for network.target finished (including firewalld.service). Therefore firewalld.service actually started in parallel or after docker.service rewriting its nat rules.\nChanging docker.service settings to these solved the problem (/lib/systemd/system/docker.service):\nAfter=network.target docker.socket\nRequires=network.target docker.socket\n. ",
    "mangoxide": "@sameersbn thank you for your post.  I was able to determine the problem a lot quicker with your help.\nThe problem is indeed related to fs.  When I force reboot the docker VM, various folders on the docker VM get removed. I've rebuilt my docker-compose.yml file (below) and this has solved the problem for my specific scenario.  I've verified my solution a couple times.\nThanks again for your help.\n```\ndocker-compose.yml\ngitlab:\n  image: sameersbn/gitlab:8.1.4\n  links:\n    - redis:redisio\n    - postgresql:postgresql\n  ports:\n    - \"10080:80\"\n    - \"10022:22\"\n  environment:\n    - TZ=Asia/Tokyo\n    - GITLAB_TIMEZONE=Tokyo\n- GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string\n\n- GITLAB_HOST=localhost\n- GITLAB_PORT=10080\n- GITLAB_SSH_PORT=10022\n- GITLAB_RELATIVE_URL_ROOT=\n\n- GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n- GITLAB_NOTIFY_PUSHER=false\n\n- GITLAB_EMAIL=notifications@example.com\n- GITLAB_EMAIL_REPLY_TO=noreply@example.com\n- GITLAB_INCOMING_EMAIL_ADDRESS=reply@example.com\n\n- GITLAB_BACKUPS=daily\n- GITLAB_BACKUP_TIME=01:00\n\n- SMTP_ENABLED=false\n- SMTP_DOMAIN=www.example.com\n- SMTP_HOST=smtp.gmail.com\n- SMTP_PORT=587\n- SMTP_USER=mailer@example.com\n- SMTP_PASS=password\n- SMTP_STARTTLS=true\n- SMTP_AUTHENTICATION=login\n\n- IMAP_ENABLED=false\n- IMAP_HOST=imap.gmail.com\n- IMAP_PORT=993\n- IMAP_USER=mailer@example.com\n- IMAP_PASS=password\n- IMAP_SSL=true\n- IMAP_STARTTLS=false\n\nvolumes_from:\n    - gitlab_data\ngitlab_data:\n  image: tianon/true\n  volumes:\n    - /home/git/data\npostgresql:\n  image: sameersbn/postgresql:9.4-8\n  environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n  volumes_from:\n    - postgresql_data\npostgresql_data:\n  image: tianon/true\n  volumes:\n    - /var/lib/postgresql\nredis:\n  image: sameersbn/redis:latest\n  volumes_from:\n    - redis_data\nredis_data:\n  image: tianon/true\n  volumes:\n    - /var/lib/redis\n```\n. ",
    "xigang": "thx.I have solved this problem\uff1a\uff09\n. Because I use MySQL no perfect solution to my problem, I chose postgresql.\npostgresql:\n```\ndocker run --name gitlab-postgresql -d \\\n    --env 'DB_NAME=gitlabhq_production' \\\n    --env 'DB_USER=gitlab' --env 'DB_PASS=password' \\\n    --volume /srv/docker/gitlab/postgresql:/var/lib/postgresql \\\n    sameersbn/postgresql:9.4-8\n```\nredis:\ndocker run --name gitlab-redis -d \\\n    --volume /srv/docker/gitlab/redis:/var/lib/redis \\\n    sameersbn/redis:latest\ngitlab:\n```\ndocker run --name gitlab -d \\\n    --link gitlab-postgresql:postgresql --link gitlab-redis:redisio \\\n    --publish 10022:22 --publish 10080:80 \\\n    --env 'GITLAB_PORT=10080' --env 'GITLAB_SSH_PORT=10022' \\\n    --env 'GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string' \\\n    --volume /srv/docker/gitlab/gitlab:/home/git/data \\\n    sameersbn/gitlab:7.14.3\n```\nAfter that, gitlab will work. I'll try Mysql again. =='\n. ",
    "setiseta": "No not really.\nI think it could be an nginx thing. But im not sure.\nJust started to search for help.\nDoes it work for you?\n. Its working if I'm triggering the master.\nBut at the moment I think its a gitlab problem, don't you?\n. Its reported there: https://gitlab.com/gitlab-org/gitlab-ce/issues/3174\nIt seems that ther will be a change in the future.\n. As far as I know will the project be deleted as background task. so this may take a few sec's / min's.\nAfter this it should be possible to recreate it.\nis the project in the project list marked for deletion?. ",
    "xueshanf": "Not sure if it helps, but I was able to upgrade with this path:\n6.9.2 -> 7.14.3 -> 8.1.4- > 8.2.0\nYou might try to upgrade to 7.14.3 first, at least. \n. Oh, I was too quick. I removed the old fork,  forked a new one and updated README. I thought it'd be cleaner. I know better next time!\n. @xeor You probably already know - if you volume-mount  /home/git/data to a host's volume that is a non-overlay file system, such as NFS or ext4, that should work. It is also necessary for data persistence. I use AWS EFS, e.g. run the docker with \"-v /efs/gitlab/data:/home/git/data\". \n. batch_add_keys has a 300 second timeout lock on the operation, did it take that long for you to hit the timeout error in the stack trace? do you have lots of keys to import? Just a thought. \n. Not sure, but this might help you? https://gitlab.com/gitlab-org/gitlab-ce/issues/3822\n. I tried too. It seems only  work with a s3 bucket name. \n. Would you like to update these pods yml file with ReplicationController kind? I can do a RP if you think it's a good idea.\n. On Thu, Apr 7, 2016 at 1:20 AM, Sameer Naik notifications@github.com\nwrote:\n\nsince GitLab 8.6 there is no default root user password. Once you create\na password you need to login as the root user.\n\nThe problem is that I cannot pass password change:\nChange your password\n7 errors prohibited this user from being saved:\n- Email can't be blank\n- Password can't be blank\n- Name can't be blank\n- Notification email can't be blank\n- Notification email is invalid\n- Username can contain only letters, digits, '_', '-' and '.'. Cannot\n  start with '-' or end in '.'.\n- Username can't be blank\nXueshan\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/657#issuecomment-206755748\n. On Fri, Apr 8, 2016 at 9:04 AM, Sameer Naik notifications@github.com\nwrote:\nI see the issue on kubernetes. Wonder what the cause could be. Will try to\nfigure it out. Until then you can try adding GITLAB_ROOT_PASSWORD to the\nthe containers env to bypass that screen.\n\nYup!  Use GITLAB_ROOT_PASSWORD env does allow root to login!\nYou can close this ticket.\nXueshan\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/657#issuecomment-207494745\n. Is there a plan to release 8.11.8 security release? We aren't ready to upgrade to 8.12 release yet. Thanks!\n. @solidnerd I see. I will make upgrade next few days. On the other hand, it would be good to have some docs in general on how to build the image with specific versions.  Great work in this project, much appreciated. \n. I really like to stay with this docker image because the easy, simple configuration and we already have a upgrade process in place.  Usually it is not a problem to be behind a few versions, but when it comes to security, needless to say there is a risk and we need to respond faster. If it's going to be a delay for some days, we might apply workaround. Please let us know. Thanks for the great work, always. . Thanks for the work! Waiting for the release.. @mgansler Running  gitlab-workhorse --version on a 8.13.5  installation shows similar information:\nroot@code:/home/git/gitlab# gitlab-workhorse --version\ngitlab-workhorse -20161110.114739\nThe GITLAB_WORKHORSE_VERSION  file says  0.8.5. \nSo it looks like  the gitlab-workhorse --version shows the build timestamp.. @globalcitizen Have you configured SMTP_PORT explicitly? The default is 587, which might not be the one your email server opens to the world. When you do telnet from within the container, did  you use that port? . @QuickJack It seems working for me now with 8.15.4 version.. @waterdrops \n\nThis works for me (8.15.4) - It looks like the BACKUP needs a full file name, not just timestamp:\ndocker exec gitlab.service /bin/bash -c \"cd /home/git/gitlab; sudo -u git -H bundle exec rake gitlab:backup:restore force=yes RAILS_ENV=production BACKUP=1485922557_2017_02_01_gitlab_backup.tar. @codereviewvideos\nHere is I think the relevant part:\nFor the GitLab container:\nGITLAB_REGISTRY_ENABLED=true\nGITLAB_REGISTRY_HOST=registry.example.com\nGITLAB_REGISTRY_PORT=443\nGITLAB_REGISTRY_API_URL=http://registry.cluster.local:5500\nGITLAB_REGISTRY_DIR=\"\"\nGITLAB_REGISTRY_KEY_PATH=/certs/gitlab.key\nFor the registry container:\nDOCKER_IMAGE='registry:2.6'\nDOCKER_OPTS=\"-p 5500:5000 \\\n  -e REGISTRY_AUTH_TOKEN_REALM=https://gitlab.example.com/jwt/auth \\\n  -e REGISTRY_AUTH_TOKEN_SERVICE=container_registry \\\n  -e REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/gitlab.crt \\\n  -e REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer \\\n  -e REGISTRY_STORAGE=s3 \\\n  -e REGISTRY_STORAGE_S3_REGION=us-west-2 \\\n  -e REGISTRY_STORAGE_S3_BUCKET=my-gitlab-registry \\\n  -e REGISTRY_STORAGE_S3_ROOTDIRECTORY=/data \\\n  -e REGISTRY_STORAGE_DELETE_ENABLED=true \\\n  -v /efs/gitlab/data/certs:/certs \\\n  -v /var/lib/apps/gitlab-registry/config.yml:/etc/docker/registry/config.yml\"\nNote  GITLAB_REGISTRY_API_URL=http://registry.cluster.local:5500, in which I use a private AWS Route53 DNS.  \nI made a simple mistake to use http://localhost:5500 in my original configuration - there is no  service at localhost:5500  inside of GitLab container!  If run docker logs on GitLab container, I'd see timeout to localhost:5500. \nYou may implement the Registry differently, but whatever you do, make sure that's resolvable and reachable inside of GitLab container. \n. I am confused. I have been using GITLAB_TRUSTED_PROXIES. Is it going away?. My guess - make sure the password is not too short. . I switched the uid / gid back to 1000 the default. Just be aware for others who run into slow start up - if git user ID is different than the default and you have many many repositories, it could take long time every time when GitLab starts, because of the recursive chmod on data directory. . Sorry I cut-pasted in wrong place. I will redo it. Please close this one.\n. > On Apr 9, 2016, at 02:35, Sameer Naik notifications@github.com wrote:\n\nIn kubernetes/gitlab-service.yml:\n\n@@ -5,7 +5,8 @@ metadata:\n   labels:\n     name: gitlab\n spec:\n-  type: LoadBalancer\n-  type: ClusterIP\n-  externalIPs: [172.17.4.201]\n  is this line supposed to be here?\n\n\nOh, I use Vagrant to test, no load balancer so I have to give it an external IP to connect to it. If one uses LoadBalancer, then no need to have it. \nShould I revert to LoadBalancer spec?\nXueshan \n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\n. I reverted back to use LoadBalancer spec for gitlab-service. \n. \n",
    "zddhub": "I see, thanks\n. ",
    "renhuailin": "Cannot access redis:\ngitlab | + redis-cli -h 172.17.0.2 -p tcp://172.17.0.2:6379 ping\ngitlab | ++ expr 53 - 1\ngitlab | + timeout=52\n......\n......\ngitlab | + redis-cli -h 172.17.0.2 -p tcp://172.17.0.2:6379 ping\ngitlab | ++ expr 1 - 1\ngitlab | + timeout=0\n. I removed container_name from docker-compose.yml and now it works.  why ?\n. ",
    "mpbzh": "Not yet. Increased it now and will report back if the problem persists.\nThanks for the hint!\n. So far no 500 errors anymore, so I think we can consider this fixed. Thanks!\n. I had the same issue. Check if its your DB connection that fails and try setting the Synology IP address as the db server address instead of the 127. something that used to work before. \n. ",
    "to266": "I'm having the same issue, however running docker directly on my local machine. I'm also pretty new to docker, any pointers where to start looking?\n. I use the default docker-compose.yml that you have here.\n``` bash\nto266@ararat ~/s/gitlab> docker version\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.5.1\n Git commit:   a34a1d5-dirty\n Built:        Sun Nov 22 00:15:15 UTC 2015\n OS/Arch:      linux/amd64\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.5.1\n Git commit:   a34a1d5-dirty\n Built:        Sun Nov 22 00:15:15 UTC 2015\n OS/Arch:      linux/amd64\n```\nbash\nto266@ararat ~/s/gitlab> docker info\nContainers: 15\nImages: 68\nServer Version: 1.9.1\nStorage Driver: devicemapper\n Pool Name: docker-8:1-4332807-pool\n Pool Blocksize: 65.54 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: \n Data file: /dev/loop0\n Metadata file: /dev/loop1\n Data Space Used: 6.445 GB\n Data Space Total: 107.4 GB\n Data Space Available: 56.27 GB\n Metadata Space Used: 6.308 MB\n Metadata Space Total: 2.147 GB\n Metadata Space Available: 2.141 GB\n Udev Sync Supported: true\n Deferred Removal Enabled: false\n Deferred Deletion Enabled: false\n Deferred Deleted Device Count: 0\n Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n Library Version: 1.02.112 (2015-11-28)\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.2.5-1-ARCH\nOperating System: Arch Linux (containerized)\nCPUs: 8\nTotal Memory: 31.38 GiB\nName: ararat\nID: YOVL:Q6KQ:AYSS:VHV4:TQNP:DAD5:F2ZS:XCZS:Q3V6:Q74Q:OYIB:ZESH\nAnd here is the log with DEBUG=true\n. ",
    "timecards": "It works now.\nThank you!!! \n. ",
    "abilashks": "when i gave \"no\" restore exited with a message \"Exiting..\"\n. no it dint take that long for error to occur but we have so many keys to import. any idea how to solve this issue\n. i get below error when i try to run manually\nRunning \"gitlab:backup:create\" rake task ...\nDumping database ... \nDumping MySQL database gitlabhq_production ... mysqldump: Error 2020: Got packet bigger than 'max_allowed_packet' bytes when dumping table merge_request_diffs at row: 16750\n[FAILED]\nbut i have set max_allowed_packet = 2048M in my my.cnf file of db\n. yes the issue got fixed by increasing max_allowed_packet in gitlab container. But this has to be done manually after invoking the container. We have to do it for each versiion upgrade. It will be great if you could provide this as a option.\n. ",
    "dayiguizhen": "I think supervisord monitor  process like gitlab and nginx and so on.\nBut I'm not sure if supervisord will send SIGTERM signal to gitlab and nginx if supervisord receive SIGTERM(by docker stop).\nIf supervisord didn't do anything ,docker will send SIGKILL to supervisord .So supervisord  have to shutdown.\nMaybe in this time, supervisord didn't have energy to help shutdown gitlab gracefully.\n. ",
    "bne86": "we are using apache as reverse proxy, thats all we have configured:\nProxyRequests Off\n  ProxyPass /gitlab http://localhost:10080/gitlab\n  <Location /gitlab>\n    ProxyPassReverse http://localhost:10080/gitlab\n  </Location>\nStrange, because beside of the gitlab image (it was updated) nothing changed. I will see whether i can find another reason for this behaviour.\nThanks for your fast answer.\n. bypassing the proxy works. i will see what else the reason for this issue is, strange that this did not happen before. thanks for the pointer, sorry for the noise.\n. This was done with different browsers and of course a cache clear. ;) Beside of bypassing the proxy the current workaround is to add a separate proxy rule for the \"/asset\" path to \"/gitlab/asset\". But i think this is  a local and no general issue.\nOnce again, thanks for this great image and your fast help.\n. ",
    "lafraia": "Looks like an 8.2.2 bug.\nhttps://gitlab.com/gitlab-org/gitlab-ce/issues/3609\n8.2.3 is on its way\nhttps://gitlab.com/gitlab-org/gitlab-ce/commit/cd4a33120a39b23128e6798eae0a2ec7b5c9e658\n. Thanks @sameersbn and @frenchbeard. Adding the DB_EXTENSION=pg_trgm worked well.\n. ",
    "j16sdiz": "My resolve.conf contains only google's public dns:\nnameserver 8.8.8.8\nnameserver 8.8.4.4\nnameserver 2001:4860:4860::8888\nnameserver 2001:4860:4860::8844\nIt should generate\nresolver 8.8.8.8 8.8.4.4 [2001:4860:4860::8888] [2001:4860:4860::8844]\nbut the current script generates:\nresolver 8.8.8.8 8.8.4.4 2001:4860:4860::8888 2001:4860:4860::8844\n. ",
    "tu-maurice": "Works. thanks\n. Uh there already seems to be one pull request that solves this #699.\nClosing the issue. My bad.. ",
    "nevermosby": "Got same problem with the latest version and it works for me with downgrading to 9.4-8 of postgres\n. ",
    "taniadaniela": "thanks, the image works.. \n. @sameersbn I'm getting the following error:\nUnpacking backup ... done\nRestoring database ... \nRestoring PostgreSQL database gitlabhq_production ... psql:/home/git/data/backups/db/database.sql:22: ERROR:  syntax error at or near \"`\"\nLINE 1: DROP TABLE IF EXISTS `application_settings`;\n                             ^\npsql:/home/git/data/backups/db/database.sql:38: ERROR:  syntax error at or near \"`\"\nLINE 1: CREATE TABLE `application_settings` (\n                     ^\npsql:/home/git/data/backups/db/database.sql:45: ERROR:  syntax error at or near \"`\"\nLINE 1: LOCK TABLES `application_settings` WRITE;\n......\nI've made the backup from a PostgreSql db to a PostgreSql db so I don't understand why is there a syntax problem.\n. yes I've made a mistake, I will use it with a mysql db.\n. @sameersbn Thank you so much.. I have started my Gitlab in my new server..\n. thanks, I will try docker-gitlab-ci-multi-runner.\n. ",
    "ariault-blanchard": "I would like to ask a question on the upgrade process.\nHow can we upgrade our gitlab while using docker-compose.yml file ?\nActually i have three docker process (a process for each group in docker-compose i guess) : \n- gitlab_gitlab_1\n- gitlab_postgresql_1\n- gitlab_redis_1\nHow do i backup first ? Is it automatically if i just change \n'image: sameersbn/gitlab:8.2.2' to 'image: sameersbn/gitlab:8.2.3' in my docker-compose file ?\n. Ok. I'll try it then tell the result.\nI think i'll do a custom script to do theses commands.\nThanks :)\n. ",
    "jessy1092": "@sameersbn \nI guess the problem is DB still create the table after I upgrade 8.0.4 to 8.2.2 failed. (This failed may the hardware issue, my machine has recorded the shutdown information.)\nLet upgrade 8.1.4 to 8.2.2 process would find out the exist table.\nAny idea about clean pgsql database and restore backup? I am not familiar with pg.\nCould I restore the backup on new container without old data? ex. Start the new container on the new machine and just restore the gitlab backup tar.\nThank you for your help a lot.\n. Hi all,\nThanks for everyone's discussion. Finally, I solve this problem. :)\nFollowing is my solution. I drop my table and re-upgrade.\n``` console\nroot@ift-System-Product-Name:~/gitlab# docker ps\nCONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS              PORTS                                                                  NAMES\n5d6da7749dd1        sameersbn/gitlab:8.1.4        \"/sbin/entrypoint.sh \"   9 hours ago         Up About a minute   0.0.0.0:10022->22/tcp, 0.0.0.0:10080->80/tcp, 0.0.0.0:10443->443/tcp   gitlab_gitlab_1\nf8dfc74f8448        sameersbn/redis:latest        \"/sbin/entrypoint.sh\"    9 hours ago         Up 17 minutes       6379/tcp                                                               gitlab_redis_1\n01f15016a564        sameersbn/postgresql:9.4-18   \"/sbin/entrypoint.sh\"    9 hours ago         Up 17 minutes       5432/tcp                                                               gitlab_postgresql_1\nroot@ift-System-Product-Name:~/gitlab# docker exec -it 5d6da7749dd1 bash\nroot@5d6da7749dd1:/home/git/gitlab# bundle exec rails dbconsole\nPassword: \npsql (9.4.5, server 9.4.6)\nType \"help\" for help.\ngitlabhq_production=> DROP TABLE \"lfs_objects\";\nDROP TABLE\ngitlabhq_production=> DROP TABLE \"lfs_objects_projects\";\nDROP TABLE\ngitlabhq_production=> DROP TABLE \"releases\";\nDROP TABLE\ngitlabhq_production=> \\q\nroot@5d6da7749dd1:/home/git/gitlab#\n```\nThen following @sameersbn step and upgrade success.\n. ",
    "KonstantinSchubert": "Here is how I managed to resolve the issue:\nI disabled SELinux both on the Master as well as on the Minion (Node) where the pod was running.\nI did so by editing /etc/selinux/config from\nSELINUX=enforcing\nto\nSELINUX=disabled\nThe error has disappeared now.\nIt is likely sufficient to just call setenforce 0 on the minion (node), but I did not test this.\n. ",
    "DockerAsura": "Hi ,\nThank you...\nBut this is source code method right? can you help me with omnibus method.\nThanks \nAsura\n. @sameersbn \nI tried omnibus method am getting error....\ninitctl: Unable to connect to Upstart: Failed to connect to socket /com/ubuntu/upstart: Connection refused\nThanks \nAsura\n. ",
    "sbilly": "It's sameersbn/gitlab:latest bug. sameersbn/postgresql:latest listen to 127.0.0.1:5432. and /srv/docker/gitlab/postgresql is created by sameersbn/postgresql.\n```\ndocker run --name=gitlab-pgsql -ti --rm --env='DB_NAME=gitlabhq_production'   --env='DB_USER=gitlab' --env='DB_PASS=password'   --volume=/srv/docker/gitlab/postgresql:/var/lib/postgresql   sameersbn/postgresql:latest /bin/bash\nnetstat -an\nActive Internet connections (servers and established)\nProto Recv-Q Send-Q Local Address           Foreign Address         State\nActive UNIX domain sockets (servers and established)\nProto RefCnt Flags       Type       State         I-Node   Path\nexec start-stop-daemon --start --chuid postgres:postgres --exec /usr/lib/postgresql/9.4/bin/postgres -- -D /var/lib/postgresql/9.4/main &\nLOG:  database system was shut down at 2015-12-15 01:00:27 UTC\nLOG:  MultiXact member wraparound protections are now enabled\nLOG:  database system is ready to accept connections\nLOG:  autovacuum launcher started\n[1] 17\nnetstat -an\nActive Internet connections (servers and established)\nProto Recv-Q Send-Q Local Address           Foreign Address         State\ntcp        0      0 127.0.0.1:5432          0.0.0.0:               LISTEN\ntcp6       0      0 ::1:5432                :::                    LISTEN\nudp6       0      0 ::1:35742               ::1:35742               ESTABLISHED\nActive UNIX domain sockets (servers and established)\nProto RefCnt Flags       Type       State         I-Node   Path\nunix  2      [ ACC ]     STREAM     LISTENING     165250   /var/run/postgresql/.s.PGSQL.5432\n``\n. I've already using the latest sameersbn/postgresql by usingdocker pull sameersbn/postgresql:latest` command when I post this issue 4 days ago.\nI'll close this issue.\n. ",
    "grahovam": "I solved the problem. My mistake was that I copied the volumes with scp to a new server. The proper way to go is to make a backup the way it is described in the readme, scp the backup to the new server, restore the backup with the old gitlab version image (the one that was used to create the backup) and then create a new container with the new gitlab version\n. ",
    "llonchj": "+1\n. ",
    "zitsen": "@Ilya-Kuchaev @llonchj  , this is an upstream error, see upstream gitlab issue#4136 .\nHere is current solution:\nFirst, enter gitlab container.\nsudo docker-enter gitlab\nNow in the container shell:\n```\ncd /home/git/gitlab/public/assets\nbetter backup the original file.\nsed -i 's/\\/autocomplete/autocomplete/g' application-c3f6e83ef5cc6861b3f00e924494622c.js\ngzip -c application-c3f6e83ef5cc6861b3f00e924494622c.js >application-c3f6e83ef5cc6861b3f00e924494622c.js.gz\n```\nIt should works after refreshing your browser(to fetch the changed assets).\n. ",
    "tkaefer": "I totally understand this. It is some kind of delegation, but any container request is done git a docker based squid.\nThe squid \"knows\" which requests needs to be delegated to the corporate proxy and which requests are accessible through direct calls from the squid then.\nI need to dive into that. But sounds feasible - but not yet a very clean solution ;)\n. Hi there - just my two Cents. \nLet's Encrypt is like no option for people that use GitLab with a corporate and protected environment. And there are actually on nginx-reverse-proxy container around that could do this trick, like https://github.com/eforce21/letsencrypt-nginx-proxy.\nI would vote to just upgrade this image to GitLab 8.8.x and see if some one is able to do all of the certificate magic for own hosted CAs (which is mostly a pain somewhere in the lower area).\nNonetheless, I am really looking forward to see the docker registry included here - which might come later and I am totally fine with this.\nCheers.\n. After reading the other PR, I'll close this one. Specially since the update to 8.8.2 will be included, see https://github.com/sameersbn/docker-gitlab/pull/697#issuecomment-221473095\n. @SolidNerd: @sameersbn mentioned in https://github.com/sameersbn/docker-gitlab/pull/697#issuecomment-221473095:\n\nI think we'll directly release 8.8.2 or whichever version fixes the admin account creation.\n\nTherefore I thought the PR 697 will also handle this PR.\n. FTR: Thanks for keeping this registry integration alive. I really appreciate the work and the solution you have now chosen.\n. @mgansler Thanks for bringing this up. I think the two-reverse-proxy setup is a valid example and not only a esoteric corner case (you already named SSL offloading). \nIssue 1 is the one that could be ignored in first place. \nIssue 2 leads me to the question if anybody is intending to have separated port mappings for the reverse proxy setups. I am not so sure how oft this would happen, since you could be quite free to use any port on the built-in reverse proxy and just align it with the one in front of it.\n(Or maybe I did not get your concern right ;))\n. ",
    "otheus": "I suggest we close the issue and make a remark in the WIki. To enable gitlab to use an HTTP/s proxy server, all one must do is add to the Environment listing in docker-compose.yml, re-create the container, and re-start it. Mine includes the lines \ngitlab:\n    ...\n    environment:\n      ...\n       - http_proxy=http://proxy:3128\n       - https_proxy=http://proxy:3128\n       - no_proxy=localhost,docker.uibk.ac.at,.uibk.ac.at\nOlder versions of gitlab might not have honored 'no_proxy', but I see a commit which supposedly fixed this was merged over a year ago.. Bump up. \nIs there any way to customize this backup process? ie, post-run hook (for instance, to trigger save-to tape). bump. Work-around: \nMake sure the line \"include postgresql-local.conf\" exists, and that this file also exists (or empty).. @solidnerd I would like to point out that GitLab 9.4 was released July 2017. That's 4 months ago. While I appreciate the work done here, but it's not feasible for real end-users to keep up with a lifecycle that lasts only 4 months. If I can't expect 9.4 series to be updated, that means I have to test & deploy a new major release every few months; who has that time? \n@hex-m the main problem is taking the time to understand the build system, the 2nd problem is testing, the 3rd problem is the registry. . As _ is not a valid hostname (but is a valid DNS char), the _dockerhost identifier is \"safe\" from conflict with other hostnames.. ",
    "freeseacher": "There is no trouble on 8.3.2. \nThe issue can be closed.\n. There is no trouble on 8.3.2. \nThe issue can be closed.\n. should be closed ?. should be closed ?. ",
    "ymettier": "Removed the image with docker rmi.\nNow create the containers again...\n```\ndocker run --name gitlab-data sameersbn/gitlab:8.2.3 echo \"Data-only container for gitlab\"\nData-only container for gitlab\n```\nNow here are my problems...\nPermissions on log dir\n```\ndocker run --name gitlab-shell -it --rm --volumes-from gitlab-data sameersbn/gitlab:8.2.3 bash\nroot@464f0207d95b:/home/git/gitlab# ls -l | grep log\nlrwxrwxrwx  1 root root    22 Dec 11 08:18 log -> /var/log/gitlab/gitlab\nroot@464f0207d95b:/home/git/gitlab# ls -ld /var/log/gitlab\ndrwxr-xr-x+ 2 root root 4096 Dec 19 22:02 /var/log/gitlab\nroot@464f0207d95b:/home/git/gitlab# ls -l /var/log/gitlab\ntotal 0\n```\nWhat you can see is that /var/log/gitlab/gitlab does not exist.\nI chown git:git /var/log/gitlab and that fixed this problem.\nOtherwise I have problems when I run the gitlab main container.\nPermissions on /etc/hosts\n```\nls -l /etc/hosts\n-rw-r--r--+ 1 root root 326 Dec 19 22:03 /etc/hosts\nroot@464f0207d95b:/home/git/gitlab# su - git\ngit@464f0207d95b:~$ cat /etc/hosts\ncat: /etc/hosts: Permission denied\n```\nInformation about my hardware/software\nThe host is a NAS (QNAP TS-451). Yes, you can run docker on some NAS !\nHere are some information about it :\n```\nuname -a\nLinux  3.12.6 #1 SMP Wed Nov 18 01:49:20 CST 2015 x86_64 unknown\ndocker --version\nDocker version 1.8.2, build 6e97ca1\n```\nMy temporary solution\nSo for me, it seems that I can create my container data as below. Then run a container with a shell and fix my problems :\n```\ndocker run --name gitlab-shell -it --rm --volumes-from gitlab-data sameersbn/gitlab:8.2.3 bash\napt-get install update\napt-get install acl\nsetfacl -m u:git:r /etc/hosts\nsetfacl -m u:git:rwx /var/log/gitlab\nsetfacl -m g:git:rwx /var/log/gitlab\n```\nThen run the main container with all the options I need.\nRegards,\nYves\n. Hello,\nFor your information, I cannot reproduce any of my problems on Fedora23 / sameersbn/gitlab:8.3.0.\nSo I think I can close the issue.\nI will retry on my NAS with sameersbn/gitlab:8.3.0 and newer docker 1.9.1 and see if the problem persists. If yes, I will reopen this issue with more info.\nRegards,\nYves\n. ",
    "lorijean44": "Not currently.  However, it looks like all I would need is to update our -p flag to do : -p IP:443:443\n. Not currently.  However, it looks like all I would need is to update our -p flag to do : -p IP:443:443\n. ",
    "narcisgarcia": "I have same problem in a fresh install of Gitlab-CE 8.16.4. ",
    "blueacker": "here is my command chain and the outputs:\nhttp://paste.ubuntu.com/14185335/\n. it seems postgresql password issue: http://paste.ubuntu.com/14188673/\npsql: FATAL:  password authentication failed for user \"gitlab\"\n. I'm soryy, following is the log when I run with Debug=true:\nhttp://paste.ubuntu.com/14204873/\n. ",
    "veggiemonk": "Nice! \n\nThe configuration scripts detects if an nginx container is\nlinked and does not start nginx inside the gitlab container in that case. If no\nnginx container is detected the script works as normal.\n\nThis is so convenient! Thanks a lot.\n. @oema I think you need to clean the postgresql data to restart fresh.\nThe first line says it all: \n\nERROR:  column \"help_page_text\" of relation \"application_settings\" already exists\n\nmaybe try stopping the containers and delete the postgresql folder: \ndocker-compose stop\nrm -rf /home/romain/gitlab/postgresql\ndocker-compose up -d\ndocker-compose logs #check the logs after gitlab is started\n. Hi @lgersman \nHad the same problem a while back. There are actually many ways to import repositories.\n1. Import by the web interface (one by one) from many 3rd parties hosting repo. \n2. Import by file system (batch import of many repositories) <= I guess this is what you are looking for ?\n3. Sync repo (mirroring is available in EE version only but you can manage it with scripts, although it would be wise to really know git internals before going on such a journey). \nAssuming that you want to batch-import many repos. \nThe fatest and simplest way is to copy the bare repos to the gitlab volume. I'll explained, the default config of the docker-compose.yml places GitLab repos in /srv/docker/gitlab/gitlab/repositories on the host, they are in /home/git/data inside the container. \nCopy all those bare repos  (by rsync or scp, rsync is faster) to that folder on the host.\nBefore you run the next command, make sure the DB container (postgres by default) and the redis container are running\nThen you need to import them into GitLab by running a rake command\ndocker run --name gitlab -it --rm \\\n    --link redis:NAME_OF_REDIS_CONTAINER \\\n    --link postgresql:NAME_OF_POSTGRES_CONTAINER \\\n    --e \"GITLAB_SECRETS_DB_KEY_BASE=dslkjfskjdfwlekjflskdjflskdjfalskdhflaksdjagjdl\"\n    -v \"/srv/docker/gitlab/gitlab:/home/git/data\"\n    [OTHER OPTIONS] \\\n    sameersbn/gitlab:8.4.3 app:rake gitlab:import:repos\nWatch the logs and your repos should be available into your new gitlab container.\nAny command you want to try you can do with rake, I am not sure but for me I never needed more.\nSee https://github.com/sameersbn/docker-gitlab#rake-tasks\n. @sameersbn a quick PR is coming. Many people got stuck at this first step. (sigh) legacy... ;-)\n. PR is #597 \n. @sameersbn should it be added to the doc?\n. @sameersbn Had the same problem and adding the pd_trgm extension to the docker-compose.yml worked! Thanks!\n. ",
    "ngpestelos": "Can we close this PR? @ivlis @sameersbn\n. @SolidNerd Can we close this PR?\n. @sameersbn Done.\n. @sameersbn @nsymms Thank you for your feedback. I'm going through the other docs as well.\n. ",
    "gimler": "i have created a similar setup it works for me only difference.\nVersion:\n- sameersbn/postgresql:9.4-12\n- sameersbn/gitlab:8.4.2\nrestart: always to all containers\nHINT: you can use \"$PWD/gitlab:/home/git/data\" instate of /home/romain/gitlab/gitlab:/home/git/data\n$PWD is the current folder where you run the docker-compose.yml file\n. :+1: very nice image\n. I use it as a external registry now all works ;) thanks @SolidNerd \n. basically my file was that i have tried to use http://registry:5000 as GITLAB_REGISTRY_API_URL change it to the external url https://registry.gitlab.example.com without the port number fix this form me.\nsee comment https://github.com/sameersbn/docker-gitlab/issues/876#issuecomment-243050517. Thanks for the hint that was the problem. @paddy-hack i can confirm it works as expected.\nThe documentation should be updated.. same problem install manually unzip fix it for me. ",
    "mkorobeynikov": "I fixed it by rebooting system xD\nSorry for troubling!\n. ",
    "vanthome": "Unfortunately I have no backup. I tried the steps you proposed anyways but it didn't help. At least I'm able to set passwords now. User initiated password resets are not possible however.\nDo you know whether there is a documentation about upgrading? Is it upgrading the data model automatically or what is the strategy here?\n. ",
    "Sigurthorb": "I\u00b4m sorry but I seem to have misread this documentation\n\nWhen using self-signed certificates you need to generate these files yourself. Skip to Strengthening the server security section if you are armed with CA certified SSL certificates.\n\nThis is the line I am talking about. I read it as if you are using self-signed certificate skip strengthening the server security.\nCan this be thread be deleted?\n. ",
    "krzkaczor": "That's funny I made exactly the same mistake. I think that documentation should emphasize that it's required.. ",
    "davidwalter0": "I have set up persistence as I understand it for for both postgres and the\ngitlab data [ on kubernetes using volumes & hostpath ] .\nIs there an option I'm missing for an environment variable or command line\nflag for reset runners that needs disabling?\nI am seeing using the defaults the runner's token regenerated on restart.\nOn Sun, Jan 10, 2016 at 1:36 AM, Sameer Naik notifications@github.com\nwrote:\n\nFrom what I see, GitLab now generates a single token for use on all\nrunners and can be found at git.example.com/admin/runners. This token is\nnot changed unless you manually hit the RESET RUNNERS REGISTRATION TOKEN\nbutton. Restarting the container does not reset the token. As long as you\nare using persistent storage for your GitLab instance, this token will not\nchange automatically. The only reason you might be seeing that the token\nchanging is because you are not using persistent storage for the gitlab and\ndatabase instances.\nGitLab does not provide any option to manually specify a token. It us\ngenerated automatically by GitLab. If such an option is made available then\nI would definitely support configuring it. For now, you are out of luck in\nthis regard.\nIf you have ruby coding skills, you could submit a PR to the upstream\nGitLab project.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/570#issuecomment-170320505\n.\n. \n",
    "LM1LC3N7": "I have this in my mail_room.log (again and again and again)\n\nAbout the reply feature, you mean If my gitlab server can sent email ? Yes, It can (when someone sign up, or is added to a project).\n. Help ! It take lot lot of my -small- CPU ! Any way to resolve this ?\n. I have an internet connection, and the DNS is working well.\nIn /var/log/gitlab/gitlab/Mail_room.log I have this :\nsh\n/usr/lib/ruby/2.1.0/net/imap.rb:1454:in `connect': SSL_connect returned=1 errno=0 state=unknown state: unknown protocol (OpenSSL::SSL::SSLError)\n        from /usr/lib/ruby/2.1.0/net/imap.rb:1454:in `start_tls_session'\n        from /usr/lib/ruby/2.1.0/net/imap.rb:1047:in `initialize'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail_room-0.6.1/lib/mail_room/mailbox_watcher.rb:20:in `new'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail_room-0.6.1/lib/mail_room/mailbox_watcher.rb:20:in `imap'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail_room-0.6.1/lib/mail_room/mailbox_watcher.rb:83:in `start_tls'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail_room-0.6.1/lib/mail_room/mailbox_watcher.rb:68:in `setup'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail_room-0.6.1/lib/mail_room/mailbox_watcher.rb:132:in `run'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail_room-0.6.1/lib/mail_room/coordinator.rb:19:in `each'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail_room-0.6.1/lib/mail_room/coordinator.rb:19:in `run'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail_room-0.6.1/lib/mail_room/cli.rb:52:in `start'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/mail_room-0.6.1/bin/mail_room:5:in `<top (required)>'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/bin/mail_room:23:in `load'\n        from /home/git/gitlab/vendor/bundle/ruby/2.1.0/bin/mail_room:23:in `<main>'\nAgain and again. What is this ? \n. You do not think That mail_room is doing to many loop or something like that ?\nIs it possible to add a \" sleep 1 \" in the script / program for example? I think I have seen this somewhere , but I don't know how to Do That .\n. I have tested the DNS inside the the container (with exec command)\nAlthough GitLab can send email, you think that IMAP can be is not configured correctly ? I use privateemail. That's the email system of namecheap for my domain name.\nSo right now I don't what I can do (expect change my VPS ^^)\n. > I don't use and have never used namecheap VPS, so I am not in the\n\nposition to suggest anything.\n\nIt's not a namecheap VPS, but a Kimsufi VPS. And my domain name was bought on namecheap who give me an email support (IMAP and SMTP).\n\nThe IMAP configuration allows users to comment on issue by replying to emails. This however requires certain features to be available on your imap server. see http://doc.gitlab.com/ce/incoming_email/README.html for details.\n\nAs you said it's not fundamental, so I will see if I can disabled it.\n. Here my command to start the GitLab container :\n``` sh\ndocker run --name gitlab -d \\\n--restart=always \\\n--link gitlab-postgresql:postgresql --link gitlab-redis:redisio \\\n--publish 10022:22 --publish 10080:80 --publish 10443:443 \\\n--env 'GITLAB_SSH_PORT=10022' --env 'GITLAB_PORT=10443' \\\n--env 'GITLAB_HTTPS=true' --env 'SSL_SELF_SIGNED=true' \\\n--env 'GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string' \\\n--volume /srv/docker/gitlab/gitlab:/home/git/data \\\n--env 'GITLAB_HOST=X.X.X.X' \\\n--env 'SMTP_USER=my@email.com' --env 'SMTP_PASS=myPassword' \\\n--env 'IMAP_USER=my@email.com' --env 'IMAP_PASS=myPassword' \\\n--env 'SMTP_DOMAIN=www.mydomain.com' \\\n--env 'SMTP_HOST=mail.privateemail.com' \\\n--env 'SMTP_PORT=25' \\\n--env 'IMAP_HOST=mail.privateemail.com' \\\n--env 'IMAP_PORT=143' \\\n--env 'IMAP_STARTTLS=true' \\\n--env 'OAUTH_GITHUB_API_KEY=yyyyyyyyyyyyyyyyyy' \\\n--env 'OAUTH_GITHUB_APP_SECRET=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' \\\nsameersbn/gitlab:8.3.2\n```\nSomething appear wrong ?\n. It works ! \nThanks :)\n. I also removed the IMAP lines and it work to.\nOn mar., janv. 12, 2016 at 10:01 AM, Sameer Naik < notifications@github.com [notifications@github.com] > wrote:\nCan you try.\nIMAP_USER=my@email.com\nIMAP_PASS=myPassword\nIMAP_HOST=mail.privateemail.com\nIMAP_PORT=993\nIMAP_SSL=true\nIMAP_STARTTLS=false\nIMAP_MAILBOX=inbox\nI am only suggesting these values based on\nhttps://www.namecheap.com/support/knowledgebase/article.aspx/1179/2175/general-configuration-for-mail-clients-and-mobile-devices.\nNo guarantees.\nOn Tuesday 12 January 2016 01:07 PM, flexbrane wrote:\n\nHere my command to start the GitLab container :\ndocker run --name gitlab -d \\\n--restart=always \\\n--link gitlab-postgresql:postgresql --link gitlab-redis:redisio \\\n--publish 10022:22 --publish 10080:80 --publish 10443:443 \\\n--env'GITLAB_SSH_PORT=10022' --env'GITLAB_PORT=10443' \\\n--env'GITLAB_HTTPS=true' --env'SSL_SELF_SIGNED=true' \\\n--env'GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string' \\\n--volume /srv/docker/gitlab/gitlab:/home/git/data \\\n--env'GITLAB_HOST=X.X.X.X' \\\n--env'SMTP_USER=my@email.com' --env'SMTP_PASS=myPassword' \\\n--env'IMAP_USER=my@email.com' --env'IMAP_PASS=myPassword' \\\n--env'SMTP_DOMAIN=www.mydomain.com' \\\n--env'SMTP_HOST=mail.privateemail.com' \\\n--env'SMTP_PORT=25' \\\n--env'IMAP_HOST=mail.privateemail.com' \\\n--env'IMAP_PORT=143' \\\n--env'IMAP_STARTTLS=true' \\\n--env'OAUTH_GITHUB_API_KEY=yyyyyyyyyyyyyyyyyy' \\\n--env'OAUTH_GITHUB_APP_SECRET=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' \\\nsameersbn/gitlab:8.3.2\nSomething appear wrong ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/571#issuecomment-170825618.\n\n\nSameer Naik\nw: http://www.damagehead.com e: sameer@damagehead.com\n\u2014\nReply to this email directly or view it on GitHub\n[https://github.com/sameersbn/docker-gitlab/issues/571#issuecomment-170844413] .[https://github.com/notifications/beacon/ANk4Oh5coY3p9Zn4T-6jxW5fZeCmoHvVks5pZLh5gaJpZM4HBvIU.gif]\n. docker exec -it gitlab rm /home/git/gitlab/tmp/pids/unicorn.pid && docker restart gitlab\nThis solved my issue, thanks :-). ",
    "kujiy": "@sameersbn Thank you very much for your great answer.\nI'm always using your docker-compose.yml for my basic configiration. \nI didn't want to change lots of lines of that and use extra backend commands, so I did this;\n- $ docker-compose up with your yml(contained link lines)\n- execute $ docker network connect my-network gitlab\n  This means I'm using \"docker link\" and \"docker network\" at the same time.\n  It's a bad way(docker said \"This would result in undefined behavior\" you know) but so far works fine for me.\nI hope the \"link\" lines in your docker-compose.yml will be removed in the future.\nThank you very much.\n. Hi. Did you check the user's permission of the project and subscribing the issue?\n. FYI: I'm using the following smtp settings for my non-authentication smtp server.\n```\n    - SMTP_ENABLED=true\n    - SMTP_DOMAIN=smtp.server.local\n    - SMTP_HOST=smtp.server.local\n    - SMTP_PORT=25\n- SMTP_USER=\n- SMTP_PASS=\n- SMTP_STARTTLS=false\n- SMTP_AUTHENTICATION=none\n\n```\n. Thank you folks! We got the same error and you saved my life.\nOnly postgresql container test (with the original docker-compose.yml)\n``` yml\nversion: '2' \nservices:\n  postgresql:\n    image: sameersbn/postgresql:9.5-1\n    volumes:\n    - /srv/docker/gitlab/postgresql:/var/lib/postgresql:Z\n    environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\n```\nIt couldn't get to outside urls because it doesn't have proxy.\npostgresql_1  | W: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/universe/binary-amd64/Packages  Something wicked happened resolving 'archive.ubuntu.com:http' (-5 - No address associated with hostname)\nAdded http_proxy to yml\n``` yml\nversion: '2' \nservices:\n  postgresql:\n    image: sameersbn/postgresql:9.5-1\n    volumes:\n    - /srv/docker/gitlab/postgresql:/var/lib/postgresql:Z\n    environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\n    environment:\n    - http_proxy=http://id:password@my-proxy.example.com:3128\n```\nWorked well.\npostgresql_1  | Initializing datadir...\npostgresql_1  | Initializing certdir...\npostgresql_1  | Initializing logdir...\npostgresql_1  | Initializing rundir...\npostgresql_1  | Setting resolv.conf ACLs...\npostgresql_1  | Starting PostgreSQL 9.5...\npostgresql_1  | LOG:  database system was shut down at 2016-08-23 14:44:43 JST\npostgresql_1  | LOG:  MultiXact member wraparound protections are now enabled\npostgresql_1  | LOG:  autovacuum launcher started\npostgresql_1  | LOG:  database system is ready to accept connections\nAlternative; Using env_file instead of environment\n``` yml\nversion: '2' \nservices:\n  postgresql:\n    image: sameersbn/postgresql:9.5-1\n    volumes:\n    - /srv/docker/gitlab/postgresql:/var/lib/postgresql:Z\n    environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\n    env_file:\n    - /common/docker-compose.env\n```\nAlso worked well!\npostgresql_1  | Initializing datadir...\npostgresql_1  | Initializing certdir...\npostgresql_1  | Initializing logdir...\npostgresql_1  | Initializing rundir...\npostgresql_1  | Setting resolv.conf ACLs...\npostgresql_1  | Creating database user: gitlab\npostgresql_1  | Creating database: gitlabhq_production...\npostgresql_1  | \u2023 Loading pg_trgm extension...\npostgresql_1  | \u2023 Granting access to gitlab user...\npostgresql_1  | Starting PostgreSQL 9.5...\npostgresql_1  | LOG:  database system was shut down at 2016-08-23 14:45:27 JST\npostgresql_1  | LOG:  MultiXact member wraparound protections are now enabled\npostgresql_1  | LOG:  autovacuum launcher started\npostgresql_1  | LOG:  database system is ready to accept connections\nThank you so much!!!\n. I found the official image\nhttps://docs.gitlab.com/omnibus/docker/README.html\nBut I'm still not sure how to migrate from self-hosting gitlab CE.\nhttps://docs.gitlab.com/ee/workflow/importing/README.html\n. ",
    "vikas027": "@sameersbn Thanks. Indeed, it was something to do with firewall. Closing the issue.\n. ",
    "thiagotrennepohl": "@sameersbn Thank you for the reply.\nCorrect, with 8.0.3 they are missing.\n\nI am a little confused about your report. Do you mean with 8.0.0, 8.0.2 everything is okay? i.e. the repositories exist? and with 8.0.3 they are missing?\n\nmy /home/git/repositories/ is an empty folder.\n\n\nyes, the bare repositories exist.\n\nPlease inspect the contents of /home/git/data/repositories to check if the bare repositories exist.\n\nyes, i have, I'll do what you suggested :)\n\nDo you have a backup created with the 6.7.3 version (hope you do)?\n\nAnything i'll let you know, thank you :)\nps: closed by accident :( sorry.\n. Hello.\nMade it!\nI tried to follow  your suggestion by upgrading to the last version of 6.x , last 7.x then 8.0.5-1, but i didn't succeed.\nWell, i decided to run  a fresh container with an empty volume, just to create gitlab's \n(git/data/) folders in my host machine, then i  moved my repos folder from the old volume to the new volume (/srv/gitlab/data/repositories).\nI started a container with this new volume and ran app:sanitize to fix permissions,  and  then app:rake gitlab:import:repos  and shazam, all users, commits and repos in the place they should be :)\nPS: Still using the same database.\n. ",
    "grimabe": "I figured out another way, I was having a problem with Jwilder/Nginx proxy conf. It is working with flexible SSL on cloud flare.\n. @juyscapco @juanluisbaptiste I am sorry I switched to Gitlab omnibus package a while ago.\nI am not using this docker image anymore and unfortunately, I do not remember my configuration.\nHowever, I can tell you that my config with the omnibus package is working with CloudFlare flexible SSL.\nI changed the following in the default settings \nnginx['listen_port'] = 80\nnginx['listen_https'] = false\nnginx['proxy_set_headers'] = {\n   \"Host\" => \"$http_host_with_default\",\n   \"X-Real-IP\" => \"$remote_addr\",\n   \"X-Forwarded-For\" => \"$proxy_add_x_forwarded_for\",\n   \"X-Forwarded-Proto\" => \"https\",\n   \"X-Forwarded-Ssl\" => \"on\",\n   \"Upgrade\" => \"$http_upgrade\",\n   \"Connection\" => \"$connection_upgrade\"\n  }. ",
    "juyscapco": "@grimabe yes, please share your solution if you don't mind.. ",
    "juanluisbaptiste": "@grimabe yes ! don't be a bad person and tell us how you fixed it please !. ",
    "hypnoboutique": "If anyone else is having this problem, one quick \"solution\" is to set the status of your A/CNAME DNS records to DNS only (click the orange cloud to make it grey).\nObviously, you're not benefitting from all the perks of CloudFlare (CDN, proxy) if you do this but it might help you out in a pinch.\nThere's a good article here, at the time of writing, that explains what's going on with the SSL settings in CF (found under yourdomain.tld > Crypto)\nFor those of us who are on free plans, it's worth pointing out that you won't get any option to change this... it's locked to \"flexible\" (which menas CF tries to connect to your container over http, jwilder sees it is a non-secure request and tries to redirect you to the secure route... which CF still tries to access over :80, etc, ad infinitum) . ",
    "ayufan": "@schmunk42 Thanks for creating an issue.\n. ",
    "mdurieux": "Thank you sameer! Any guidelines for the update?\nLe 25 janv. 2016 5:43 PM, \"Sameer Naik\" notifications@github.com a \u00e9crit :\n\nnot cannot restore a 8.3.4 backup to 8.4.0 or any other version. the\nbackup version and gitlab version should match. you need to restore on\n8.3.4 gitlab and then upgrade.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/581#issuecomment-174576114\n.\n. Thanks!\nAny way to disable signup using your docker image?\nLe 26 janv. 2016 5:45 AM, \"Sameer Naik\" notifications@github.com a \u00e9crit :\nrefer https://github.com/sameersbn/docker-gitlab#upgrading\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/581#issuecomment-174822120\n.\n. \n",
    "ayapapa": "Thanks for your reply.\n\"a signout path\" you said is \"After sign out path\" in \"Admin Area\"?\nI checked \"After sign out path\" in \"Admin Area\", but found setting nothing.\nTo reconfirm this issue, I will try to recreate GitLab container on new virtual machine, and then I will report new result.\nthanks.\n. Hi,\nI tried to reconfirm this issue. Followings are the reconfirmation steps. I'm happy if any suggestions.  \nprepared new virtual machine, OS is ubuntu14.04\nupdated OS(sudo apt-get update && sudo apt-get dist-upgrade)\ninstalled docker, and docker-compose\ngit clone https://github.com/sameersbn/docker-gitlab\ncd docker-gitlab\nsudo docker-compose up -d\nbrowsed http://192.168.11.22:10080\n(192.168.11.22 is my virtual machin's IP address)\nsigned in as root -> OK\nchanged password\nsigned in again -> OK\nsigned out  -> OK(displayed URL is http://192.168.11.22:10080/users/sign_in)\nchanged docker-compose.yml's \"GITLAB_RELATIVE_URL_ROOT=\" to \"GITLAB_RELATIVE_URL_ROOT=/gitlab\"\nsudo docker-compose up -d\nbrowsed http://192.168.11.22:10080/gitlab\nsigned in as root -> OK\nsigned out  -> OK(displayed URL is http://192.168.11.22:10080/gitlab/users/sign_in)\nsigned in as root again -> OK\nchanged \"Sign-up enabled \" to \"OFF\" and clicked \"SAVE\" button in \"Admin area\" page.\nsigned out -> NG(displayed URL is http://192.168.11.22:10080/) <- \"403 Forbidden\" error\nand then,\nbrowsed http://192.168.11.22:10080/gitlab -> No \"Sign up\" area was shown.\nsigned in as root again  -> OK\nchanged  \"Sign-up enabled \" to \"ON\" and clicked \"SAVE\" button in \"Admin area\" page.\nsigned out  -> NG(displayed URL is http://192.168.11.22:10080/) <- \"403 Forbidden\" error\nbrowsed http://192.168.11.22:10080/gitlab -> \"Sign up\" area was shown.\nThat's all.\nMaybe change of \"Sign-up enabled\" is related. \nOff course, I didn't changed \"After sign out path\" in \"Admin area\" page.\n. Oh, yes. I will try new release today.\nThanks.\n. Sorry for my late response. \nI tried a fresh install twice, version 8.4.3 and 8.4.4, and I confirmed this issue existence in both.\nIn these trial, I tried to change the items other than \"Sign-up enabled\"\u3000in admin area, one was changing \"Gravatar enabled\" only, and another was changing \"Maximum attachment size(MB)\" only . \nMaybe is this Gitlab's issue?\n. ",
    "atom2ueki": "@sameersbn I've added email configuration by using gmail account, but seems I still cannot receive any email send by system, e.g sign up confirmation email\n. seems this build didn't expose all the configure for mailing\nconfig.action_mailer.smtp_settings = {  \n  :address              => \"smtp.mailgun.org\",\n  :port                 => 587,\n  :domain               => 'gitlab.mydomain.com',\n  :user_name            => 'user@mydomain.org',\n  :password             => 'password',\n  :authentication       =>  :plain,\n  :enable_starttls_auto => true\n}\n. My bad, just put those variables when running docker can do.\n--env 'SMTP_HOST=smtp.mailgun.org' \\\n--env 'SMTP_DOMAIN=domain' \\\n--env 'SMTP_USER=username' \\\n--env 'SMTP_PASS=password' \\\n. ",
    "valentin2105": "Hi ! \nI have try with Gmail or a private SMTP server, \nAll my test disworks and I think it from this :\nenvironments/production.rb:  config.action_mailer.delivery_method = :sendmail\nHere my SMTP options for gmail :\n\n- SMTP_ENABLED=true\n- SMTP_USER=user@gmail.com\n- SMTP_PASS=passw0rd\nAny idea ?\n\n(thanks for your docker-gitlab image)\n. ",
    "johnsudaar": "Hi !\nSame problem here.\nOn the heathcheck part of the admin area i get:\n\nCurrent Status:  Unhealthy\nno sendmail executable found.\n\nThanks for your amazing work on this image.\n. I'm running the 8.9.6 version\n. Solved by upgrading to 8.10!\nThanks\n. ",
    "ansvver": "Hi @sameersbn , that problem caused by my db account setting. And the platform works perfectly now! Thanks and close the issue!\n. ",
    "TimCook1": "docker logs doesn't show anything different:\nInitializing logdir...\nInitializing datadir...\nUpdating CA certificates...\nInstalling configuration templates...\nConfiguring gitlab...\nConfiguring gitlab::database\nConfiguring gitlab::redis\nConfiguring gitlab::secrets...\nERROR:\n  Please configure the GITLAB_SECRETS_DB_KEY_BASE parameter.\n  Cannot continue. Aborting...\nroot@synology:~# docker version\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   91d36fe\n Built:        Thu Jan 14 08:11:10 UTC 2016\n OS/Arch:      linux/amd64\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   91d36fe\n Built:        Thu Jan 14 08:11:10 UTC 2016\n OS/Arch:      linux/amd64\n. I did add that, the output didn't change.\n. Is it possible that for some reason the CLI isn't accepting my --env variables?\n. No thoughts at all?  Stinks having it down, not the end of the world obviously since I'm using it as more of an archive at the moment, but I'd like to get it up and running again.\n. The variable wasn't printed, so it must not be taking the env flags. And unfortunately I can't update it by hand (well I probably could but it would be a mess) since it's currently running on a synology box and the current version is what's packaged.  \nI guess I'll open a ticket with them and see if it gets me anywhere (HAH!)\n. Looks like I'm not the only one, so not a gitlab issue:\nhttps://forum.synology.com/enu/viewtopic.php?f=260&t=109490\n. This is fixed as of DSM 6.0-RC for anyone else that might stumble upon this.\n. ",
    "bhalothia": "I'm still facing the same issue.\n\u279c  docker-gitlab git:(master) docker version\nClient:\n Version:   18.04.0-ce\n API version:   1.23\n Go version:    go1.10.1\n Git commit:    3d479c0\n Built: unknown-buildtime\n OS/Arch:   darwin/amd64\n Experimental:  false\n Orchestrator:  swarm\nServer:\n Engine:\n  Version:  17.12.1-ce\n  API version:  1.35 (minimum version 1.12)\n  Go version:   go1.9.4\n  Git commit:   7390fc6\n  Built:    Tue Feb 27 22:20:43 2018\n  OS/Arch:  linux/amd64\n  Experimental: false\nI'm still \n\u279c  docker-gitlab git:(master) docker logs cfbac37d2cf3\nInitializing logdir...\nInitializing datadir...\nInstalling configuration templates...\nConfiguring gitlab...\nConfiguring gitlab::database\nConfiguring gitlab::redis\nConfiguring gitlab::secrets...\nERROR:\n  Please configure the GITLAB_SECRETS_DB_KEY_BASE parameter.\n  Cannot continue. Aborting.... ",
    "lgersman": "+1 !!!!!!!\nOn Sun, Feb 7, 2016, 8:04 AM Sameer Naik notifications@github.com wrote:\n\nWill take a look at it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/594#issuecomment-180965204\n.\n. Great support - thank you both !!!\nOn Feb 5, 2016 7:38 PM, \"Julien Bisconti\" notifications@github.com wrote:\nPR is #597 https://github.com/sameersbn/docker-gitlab/pull/597\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/595#issuecomment-180491936\n.\n. \n",
    "ihilt": "This is what I'm currently using to do that. I'm running this as a separate stack from gitlab on docker cloud. https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion#separate-containers-recommended-method\n. ",
    "TWhidden": "+1 on support fro SSL/TLS :)  For now, I guess we can do nginx.\n. ",
    "jffz": "guess there is no new about it ? :3\n. @lordvlad Are you using builtin gitlab builtin nginx ?\nIf so, mind sharing your compose settings for this ?. GitLab 8.7.0-rc3\nGitLab Shell 2.7.0\nGitLab API v3\nGit 2.7.4\nRuby 2.1.8p440\nRails 4.2.5.2\nPostgreSQL 9.2.15\nYes, i restarted the docker container (through docker-compose)\ndocker-compose down\ndocker-compose up -d\n. Yeah you're right, just seen it, I'm using the official gitlab image (https://hub.docker.com/r/gitlab/gitlab-ce/). Maybe should i consider moving to this one ?\n. ",
    "ggtools": "I just setup manually and I think using docker-compose and this image it should not be so hard to implement it with minimal changes to the gitlab part.. As PostgreSQL seems to be the DB of choice for gitlab team I guess it makes some sense to use this database especially if you are using docker-compose.. ",
    "allustin": "any news ?. ",
    "lordvlad": "Same as @ihilt, I added a docker-letsencrypt-nginx-proxy-companion to my docker compose. Works like a charm. @jffz something like this should do:\n```\nvolumes:\n  nginx_conf: {}\n  nginx_vhost: {}\n  nginx_html: {}\n  certs: {}\nservices:\n  ...\n  gitlab:\n    ...\n    environment:\n      ...\n      LETSENCRYPT_HOST: $HOST\n      VIRTUAL_HOST: $HOST\n      LETSENCRYPT_EMAIL: $MAIL\nnginx:\n    image: nginx\n    container_name: nginx\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - \"nginx_conf:/etc/nginx/conf.d\"\n      - \"nginx_vhost:/etc/nginx/vhost.d\"\n      - \"nginx_html:/usr/share/nginx/html\"\n      - \"certs:/etc/nginx/certs:ro\"\n    labels:\n      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: \"true\"\n    restart: unless-stopped\nnginx_gen:\n    image: jwilder/docker-gen\n    container_name: nginx_gen\n    restart: unless-stopped\n    volumes:\n      - \"./nginx.tmpl:/nginx.tmpl:ro\"\n      - \"nginx_conf:/etc/nginx/conf.d\"\n      - \"nginx_vhost:/etc/nginx/vhost.d\"\n      - \"nginx_html:/usr/share/nginx/html\"\n      - \"certs:/etc/nginx/certs:ro\"\n      - \"/var/run/docker.sock:/tmp/docker.sock:ro\"\n    labels:\n      com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen: \"true\"\n    command: -notify-sighup nginx -watch -wait 5s:30s /nginx.tmpl /etc/nginx/conf.d/default.conf\nnginx_letsencrypt:\n    image: jrcs/letsencrypt-nginx-proxy-companion\n    container_name: nginx_letsencrypt\n    depends_on:\n      - nginx\n    volumes:\n      - \"nginx_conf:/etc/nginx/conf.d\"\n      - \"nginx_vhost:/etc/nginx/vhost.d\"\n      - \"nginx_html:/usr/share/nginx/html\"\n      - \"certs:/etc/nginx/certs:rw\"\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\n    environment:\n      NGINX_PROXY_CONTAINER: nginx\n      NGINX_DOCKER_GEN_CONTAINER: nginx_gen\n    restart: unless-stopped\n```\n@davidwindell \nI'm not using it to proxy only gitlab, but other services as well, e.g. nexus, ldap, etc, so I'd actually rather see nginx disabled in the container, leaving only rails. pretty sure you need to upgrade from 10.0.x to 10.1.x first, before upgrading to 10.2.x. would love to see this merged. :+1: . did it yesterday, works flawlessly. just mind the --protected-mode no cli\nsetting.\nOn Wed, Sep 5, 2018 at 9:40 AM Martin notifications@github.com wrote:\n\nDoes this problem still occur when using sameersbn/redis:4.0.9-1? Is it\nsafe to update the redis container of an existing 10.8.4 instance to\nsameersbn/redis:4.0.9-1 before the upgrade to GitLab 11.0.4?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1657#issuecomment-418631060,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABKU6eqL_xw7q9a6ZOg28m00b8Z6n89kks5uX3_lgaJpZM4U_TDx\n.\n. Closes #1854. Had the same issue once. One thing that we did not think about were ci\nvariables on group and project level. We were not able to edit ci variables\nanymore via the ui, the server failed to decrypt the old values. In the end\nwe had to remove all ci variables in the database directly (using psql )\nand recreate them after a server restart. Thinking back, it would've been\neasier removing all variables before changing the keys, and recreating them\nafterwards. using the gitlab web API, you could write a script to iterate\nall groups and projects, back up and remove all ci variables, and restore\nthem after changing the keys.\n\n. ",
    "mhciael": "if you're looking for gitlab-ctl or gitlab-rails in order to reset your root password (like i was), try ( https://github.com/sameersbn/docker-gitlab/issues/916#issuecomment-395078678 ):\n\ndocker exec -it GITLAB_CONTAINER_ID /bin/bash\nsu - git\ncd gitlab\nbundle exec rails c production\nuser = User.where(id: 1).first\nuser.password = 'NEW_PASS'\nuser.password_confirmation = 'NEW_PASS'\nuser.save\n\nexit. in case anyone else finds this and is having trouble like I was, the other method of finding the root user worked for me. user = User.where(id: 1).first (found this in the same page @waterdrops linked to above). IF anyone else lands here (like I did) looking to reset their password, try ( https://github.com/sameersbn/docker-gitlab/issues/916#issuecomment-395078678 ):\n\n\ndocker exec -it GITLAB_CONTAINER_ID /bin/bash\n\nsu - git\ncd gitlab\nbundle exec rails c production\nuser = User.where(id: 1).first\nuser.password = 'NEW_PASS'\nuser.password_confirmation = 'NEW_PASS'\nuser.save\nexit. \n",
    "waterdrops": "i met the same issue,\nlog info:\n2016-06-15 15:48:04,593 INFO success: mail_room entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2016-06-15 15:48:05,508 INFO exited: mail_room (exit status 1; not expected)\n2016-06-15 15:48:06,510 INFO spawned: 'mail_room' with pid 590\n2016-06-15 15:48:07,511 INFO success: mail_room entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nSMTP & IMAP configuration file:\n    - SMTP_ENABLED=true\n    - SMTP_DOMAIN=domain\n    - SMTP_HOST=192.168.1.1\n    - SMTP_PORT=25\n    - SMTP_USER=username\n    - SMTP_PASS=passwd\n    - SMTP_STARTTLS=true\n    - SMTP_AUTHENTICATION=login\n- IMAP_ENABLED=true\n- IMAP_HOST=192.168.1.1\n- IMAP_PORT=993\n- IMAP_USER=username\n- IMAP_PASS=passwd\n- IMAP_SSL=true\n- IMAP_STARTTLS=false\n. @ilyadavydyuk plz try this method, perform\n1. docker exec -it GITLAB_CONTAINER_ID /bin/bash\n2.su - git \n3.cd gitlab\n4.bundle exec rails c production\n   user = User.find_by_email(\"ROOT_EMAIL\")\n   user.password = 'NEW_PASS'\n   user.password_confirmation = 'NEW_PASS'\n   user.save\n   exit\nmore details, plz refer to https://docs.gitlab.com/ee/security/reset_root_password.html. Restoring from backup,I encounter a similar error,running\n```\nSystem information\nSystem:     Ubuntu 14.04\nCurrent User:   git\nUsing RVM:  no\nRuby Version:   2.3.3p222\nGem Version:    2.5.2\nBundler Version:1.13.7\nRake Version:   10.5.0\nSidekiq Version:4.2.7\nGitLab information\nVersion:    8.15.4\nRevision:   a0b1379\nDirectory:  /home/git/gitlab\nDB Adapter: postgresql\nUsing LDAP: yes\nUsing Omniauth: no\nGitLab Shell\nVersion:    4.1.1\nGit:        /usr/bin/git\n```\nthe trace info below:\n```\nbundle exec rake gitlab:backup:restore BACKUP=1484769615_2017_01_18 RAILS_ENV=production --trace\n Invoke gitlab:backup:restore (first_time)\n Invoke environment (first_time)\n Execute environment\n Execute gitlab:backup:restore\nrake aborted!\nTypeError: no implicit conversion of nil into String\n/home/git/gitlab/lib/backup/manager.rb:122:in exist?'\n/home/git/gitlab/lib/backup/manager.rb:122:inunpack'\n/home/git/gitlab/lib/tasks/gitlab/backup.rake:32:in block (3 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:240:inblock in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:235:in each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:235:inexecute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:179:in block in invoke_with_call_chain'\n/usr/lib/ruby/2.3.0/monitor.rb:214:inmon_synchronize'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:172:in invoke_with_call_chain'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:165:ininvoke'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:150:in invoke_task'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:106:inblock (2 levels) in top_level'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:106:in each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:106:inblock in top_level'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:115:in run_with_threads'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:100:intop_level'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:78:in block in run'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:176:instandard_exception_handling'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:75:in run'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/bin/rake:33:in'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/bin/rake:22:in load'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/bin/rake:22:in'\nTasks: TOP => gitlab:backup:restore\n```\n. @xueshanf thanks,it works :); BACKUP file format changed in this version(8.15.4),thanks again \ud83d\udc4d . @spritle thanks for your reply, i found solution,  from CE to EE,thanks again. ",
    "klinsmaya": "the same problem happened in version 8.8.3.\nSMTP & IMAP configuration value:\nSMTP_HOST=mail.xx..com\nSMTP_USER=pby@xx..com\nSMTP_PASS=xx@xx\nIMAP_USER=pby@xx.com\nIMAP_PASS=xx@xx\nIMAP_HOST=mail.xx..com\n. ",
    "psstefanov": "Great, thank you for the detailed description.\nIs there a way to remove the \"ssh://\" from the git clone url and how to reconfigure or restart Gitlab in order changes to take effect, because as gitlab-ctl reconfigure is only available in omnibus?\n. Thank you very much. This is exactly what I was looking for.\n. Hi,\nWhen I've tried to change the Gitlab configuration to publish 22:22 for ssh I've received the following error: \nERROR: failed to create endpoint docker_gitlab on network bridge: Error starting userland proxy: listen tcp 0.0.0.0:22: bind: address already in use\nI've researched for a solution a lot but with no success. Does someone faced the same issue and is there a solution?\n. Thank you again, that solved the issue.\n. ",
    "guybrush": "oh! thanks for the information :) \nshould i close the issue? feel free to close\n. hmmm i dont understand\nhere is /srv/gitlab/shared/registry mounted and not /srv/gitlab/gitlab/shared/registry?\n. yep i can see how it works now, thanks for your time and dedication!\n. yep, using the registry externally works - thanks!\n. ",
    "tommykent1210": "Strangely after further diagnosis it appears that I can contact the github API just fine from the host machine, just not within the docker itself. \n. Strangely after further diagnosis it appears that I can contact the github API just fine from the host machine, just not within the docker itself. \n. ",
    "globalcitizen": "Wow. So you maintain this package and you are fine to use nonstandard timezone settings that fail silently? Way to care for your users. :-1:\n. 587 is open on the server in question.. No environment variables. Standard docker-compose.yml with credentials added. Have tried various SMTP and IMAP options. Provider-wise, we are using bnet.cn (apparently a ~popular reseller platform for ISPs in China). Yes, I can ping and telnet to appropriate ports on the server, and I have tested the same credentials using Mozilla Thunderbird and can SMTP and IMAP without issue.. ```\nhost # ./gitlab-shell\nroot@fdaa1ff1a0fe:/home/git/gitlab# ping smtp.bnet.cn\nPING smtp-189ent.cdn.21cn.com (183.61.185.66) 56(84) bytes of data.\n^C\n--- smtp-189ent.cdn.21cn.com ping statistics ---\n15 packets transmitted, 0 received, 100% packet loss, time 14324ms\nroot@fdaa1ff1a0fe:/home/git/gitlab# ping imap.bnet.cn\nPING imap-189ent.cdn.21cn.com (183.61.185.66) 56(84) bytes of data.\n^C\n--- imap-189ent.cdn.21cn.com ping statistics ---\n10 packets transmitted, 0 received, 100% packet loss, time 9252ms\nroot@fdaa1ff1a0fe:/home/git/gitlab# telnet imap.bnet.cn 993\nbash: telnet: command not found\nroot@fdaa1ff1a0fe:/home/git/gitlab# exit\nexit\nhost # telnet imap.bnet.cn 993\nTrying 183.61.185.66...\nConnected to imap.bnet.cn.\nEscape character is '^]'.\n^]close\ntelnet> close\nConnection closed.\nhost # ping imap.bnet.cn\nPING imap-189ent.cdn.21cn.com (183.61.185.66) 56(84) bytes of data.\n^C\n--- imap-189ent.cdn.21cn.com ping statistics ---\n3 packets transmitted, 0 received, 100% packet loss, time 2055ms\nhost #\n```\nie. It's configured to drop ICMP but telnet works fine from the host machine, connections work fine from the container (because not configuring correctly caused errors which are now resolved, and temporary connectivity issues cause errors to appear in the logs) and there are no issues using the server from other IPs/clients.. @slim12kg As far as I can remember there were some relatively undocumented options available which resolved the issue. I am now on a new server hosting its own SMTP with its own appropriate DNS entries for DKIM etc.. ",
    "geeknam": "Did you figure out a way to fix this?\n. ",
    "sheim-dev": "It still makes a lot of sense to use this image in favor of the official one if you do not like the 'omnibus' package installation used in the official image. That's also the main difference between the two images: Sameer's image does not use GitLab's Omnibus package installation. In addition, it provides many features that are not present in the official image and IMHO follows a much cleaner approach.\n. ",
    "MarZab": "Sorry for reopening this thread but it does seem the best place to put this.\n@sameersbn what is your plan regarding Koding?\n. ",
    "harobed": "What do you think about add \u00ab Rationalize \u00bb section in README with this content: https://github.com/sameersbn/docker-gitlab/issues/609#issuecomment-189889529. @xiaket \n\nI have documented a solution here in my blog: https://blog.xiaket.org/2017/exposing.ssh.port.in.dockerized.gitlab-ce.html\nHope you'll find it helpful.\n\nYes, it is helpful.\nMy note, be careful, with this detail:\n\nLuckily, around half a year ago, someone added this to the sshd_config file used by the sshd in\nthe container, and it was later renamed to /gitlab-data/ssh/authorized_keys.\n\nThis isn't available for sameersbn/docker-gitlab Docker image.\n. Implementation proposal: https://github.com/sameersbn/docker-gitlab/pull/1731. When I execute:\ngit@d2331e0df6a7:~/gitlab$ bundle exec rake gitlab:backup:create SKIP=repositories\nDumping database ...\nDumping PostgreSQL database gitlabhq_production ... [DONE]\ndone\nDumping repositories ...\n[SKIPPED]\nDumping uploads ...\ndone\nDumping builds ...\ndone\nDumping artifacts ...\ndone\nDumping pages ...\ndone\nDumping lfs objects ...\ndone\nDumping container registry images ...\n[DISABLED]\nCreating backup archive: 1535889827_2018_09_02_11.1.4_gitlab_backup.tar ... done\nUploading backup archive to remote storage  ... skipped\nDeleting tmp directories ... done\ndone\ndone\ndone\ndone\ndone\ndone\nDeleting old backups ... done. (0 removed)\nI can see  archive file:\ngit@d2331e0df6a7:~/gitlab$ ls /home/git/data/backups/ -lha\ntotal 33M\ndrwxrwxr-x  2 git git 4.0K Sep  2 14:03 .\ndrwxr-xr-x 11 git git 4.0K Sep  2 13:57 ..\n-rw-------  1 git git  33M Sep  2 14:03 1535889827_2018_09_02_11.1.4_gitlab_backup.tar\nbut if I remove SKIP=repositories archive is empty:\ngit@d2331e0df6a7:~/gitlab$ bundle exec rake gitlab:backup:create SKIP=repositories\nDumping database ...\nDumping PostgreSQL database gitlabhq_production ... [DONE]\ndone\nDumping repositories ...\n...\ndone\nDumping uploads ...\ndone\nDumping builds ...\ndone\nDumping artifacts ...\ndone\nDumping pages ...\ndone\nDumping lfs objects ...\ndone\nDumping container registry images ...\n[DISABLED]\nCreating backup archive: 1535889689_2018_09_02_11.1.4_gitlab_backup.tar ... done\nUploading backup archive to remote storage  ... skipped\nDeleting tmp directories ... done\ndone\ndone\ndone\ndone\ndone\ndone\ndone\nDeleting old backups ... done. (2 removed)\ngit@d2331e0df6a7:~/gitlab$ ls /home/git/data/backups/ -lha\ntotal 8.0K\ndrwxrwxr-x  2 git git 4.0K Sep  2 14:01 .\ndrwxr-xr-x 11 git git 4.0K Sep  2 13:57 ..\nMaybe the total size of my repositories is too large?. When I execute:\ngit@d2331e0df6a7:~/gitlab$ bundle exec rake gitlab:backup:create SKIP=repositories\nDumping database ...\nDumping PostgreSQL database gitlabhq_production ... [DONE]\ndone\nDumping repositories ...\n[SKIPPED]\nDumping uploads ...\ndone\nDumping builds ...\ndone\nDumping artifacts ...\ndone\nDumping pages ...\ndone\nDumping lfs objects ...\ndone\nDumping container registry images ...\n[DISABLED]\nCreating backup archive: 1535889827_2018_09_02_11.1.4_gitlab_backup.tar ... done\nUploading backup archive to remote storage  ... skipped\nDeleting tmp directories ... done\ndone\ndone\ndone\ndone\ndone\ndone\nDeleting old backups ... done. (0 removed)\nI can see  archive file:\ngit@d2331e0df6a7:~/gitlab$ ls /home/git/data/backups/ -lha\ntotal 33M\ndrwxrwxr-x  2 git git 4.0K Sep  2 14:03 .\ndrwxr-xr-x 11 git git 4.0K Sep  2 13:57 ..\n-rw-------  1 git git  33M Sep  2 14:03 1535889827_2018_09_02_11.1.4_gitlab_backup.tar\nbut if I remove SKIP=repositories archive is empty:\ngit@d2331e0df6a7:~/gitlab$ bundle exec rake gitlab:backup:create SKIP=repositories\nDumping database ...\nDumping PostgreSQL database gitlabhq_production ... [DONE]\ndone\nDumping repositories ...\n...\ndone\nDumping uploads ...\ndone\nDumping builds ...\ndone\nDumping artifacts ...\ndone\nDumping pages ...\ndone\nDumping lfs objects ...\ndone\nDumping container registry images ...\n[DISABLED]\nCreating backup archive: 1535889689_2018_09_02_11.1.4_gitlab_backup.tar ... done\nUploading backup archive to remote storage  ... skipped\nDeleting tmp directories ... done\ndone\ndone\ndone\ndone\ndone\ndone\ndone\nDeleting old backups ... done. (2 removed)\ngit@d2331e0df6a7:~/gitlab$ ls /home/git/data/backups/ -lha\ntotal 8.0K\ndrwxrwxr-x  2 git git 4.0K Sep  2 14:01 .\ndrwxr-xr-x 11 git git 4.0K Sep  2 13:57 ..\nMaybe the total size of my repositories is too large?. > Maybe the total size of my repositories is too great?\n11 Go. > Maybe the total size of my repositories is too great?\n11 Go. With is my stupid error:\nGITLAB_BACKUP_EXPIRY=2\nthis is 2 seconds and not 2 archives files.\nSo, I can close the issue.. With is my stupid error:\nGITLAB_BACKUP_EXPIRY=2\nthis is 2 seconds and not 2 archives files.\nSo, I can close the issue.. @solidnerd I have seen and merged all your Pull Requests in docker-gitlab-vagrant-test repository.\nI assume that you have tested expose-gitlab-ssh-port.sh feature? If yes, it works for you?. >  Could someone give this a blessing or at least comment on it?\n@ccoenen \n\nI have followed this post https://blog.xiaket.org/2017/exposing.ssh.port.in.dockerized.gitlab-ce.html to write expose-gitlab-ssh-port.sh\nyou can test it in this test environment docker-gitlab-vagrant-test\n\nI'd be happy to get your feedback \ud83d\ude42. @solidnerd thanks \ud83d\ude42. > Probably we don't to add this to the install.sh\nI have not noticed %h/.ssh/authorized_keys_proxy undesirable side effects.\nomnibus GitLab Docker Image have also this hack.\n\nAnd mount the config back inside the container because it was created during build and changed by the runtime\n\nIt was my first implementation but I can't use it, I had a error (I do not remember precisely the error name) \ud83d\ude1e.\nDo you want that I spend some time to retrieve the error?. I do not remember what I use tee, maybe because that https://github.com/koalaman/shellcheck/wiki/SC2024\n\ntee ... > /dev/null looks like a leftover from debugging, is that right?\n\n@ccoenen do you want to replace that by:\ncat <<EOF > /home/git/gitlab-shell/bin/gitlab-shell\n...\n...\nEOF\nisn't it?. ",
    "cracker0dks": "ok thanks for the info. will do this :)\n. ",
    "xuwang": "Pulled sameersbn/gitlab:8.4.5 image but it seems still packaged with 8.4.4.:\ncore@ip-10-0-2-7-itla-admiral /var/lib/apps/gitlab/units $ docker inspect sameersbn/gitlab:8.4.5  | grep -i version\n            \"GITLAB_VERSION=8.4.4\",\n            \"GITLAB_SHELL_VERSION=2.6.10\",\n            \"GITLAB_WORKHORSE_VERSION=0.6.2\",\nRunning the image doesn't seem to do any migration tasks.\n. ",
    "dlaabs": "Looks like the Dockerfile and change log was not updated to 8.4.5 along side commit 009dd2c513f13722cde0b3a06d36b1b26b83bcad.\n. Issue related to #611.\n. ",
    "ysaotome": ":+1: \n. ",
    "vlsi": ":+1: \n. ",
    "Kaleesastha": "No. I have seen this for a merge request alone.\n. Team,\nAny updates .???\nThanks,\nKalesastha\n. SolidNerd,\nThanks for your response. The above mentioned issue had fixed . The issue was due to the existing mysql folder was not properly copied into another machine.\nThanks,\nKalesastha\n. @solidnerd  thanks for your shift response. Let me inform once you restored from your end.. @solidnerd Any update on the above issue?. @paolomainardi  i restored the database and then tried it again, still the issue persists... @paolomainardi  @solidnerd \n2017-03-28T20:04:39.615418000Z 170328 20:04:39 mysqld_safe Number of processes running now: 0\n2017-03-28T20:04:39.617137000Z 170328 20:04:39 mysqld_safe mysqld restarted\n2017-03-28T20:04:42.241427000Z 170328 20:04:42 mysqld_safe Number of processes running now: 0\n2017-03-28T20:04:42.243267000Z 170328 20:04:42 mysqld_safe mysqld restarted\n2017-03-28T20:04:44.441171000Z 170328 20:04:44 mysqld_safe Number of processes running now: 0\n2017-03-28T20:04:44.442976000Z 170328 20:04:44 mysqld_safe mysqld restarted\n2017-03-28T20:04:46.643210000Z 170328 20:04:46 mysqld_safe Number of processes running now: 0\n2017-03-28T20:04:46.645150000Z 170328 20:04:46 mysqld_safe mysqld restarted\n2017-03-28T20:04:48.783856000Z 170328 20:04:48 mysqld_safe Number of processes running now: 0\n2017-03-28T20:04:48.785762000Z 170328 20:04:48 mysqld_safe mysqld restarted\n2017-03-28T20:04:51.140986000Z 170328 20:04:51 mysqld_safe Number of processes running now: 0\n2017-03-28T20:04:51.142982000Z 170328 20:04:51 mysqld_safe mysqld restarted\n2017-03-28T20:04:53.375819000Z 170328 20:04:53 mysqld_safe Number of processes running now: 0\n2017-03-28T20:04:53.377861000Z 170328 20:04:53 mysqld_safe mysqld restarted\n2017-03-28T20:04:55.560103000Z 170328 20:04:55 mysqld_safe Number of processes running now: 0\n2017-03-28T20:04:55.562209000Z 170328 20:04:55 mysqld_safe mysqld restarted\n2017-03-28T20:04:57.750718000Z 170328 20:04:57 mysqld_safe Number of processes running now: 0\n2017-03-28T20:04:57.752746000Z 170328 20:04:57 mysqld_safe mysqld restarted\n2017-03-28T20:04:59.939735000Z 170328 20:04:59 mysqld_safe Number of processes running now: 0\n2017-03-28T20:04:59.941624000Z 170328 20:04:59 mysqld_safe mysqld restarted\n2017-03-28T20:05:02.156434000Z 170328 20:05:02 mysqld_safe Number of processes running now: 0\n2017-03-28T20:05:02.158229000Z 170328 20:05:02 mysqld_safe mysqld restarted\n2017-03-28T20:05:04.359911000Z 170328 20:05:04 mysqld_safe Number of processes running now: 0\n2017-03-28T20:05:04.361670000Z 170328 20:05:04 mysqld_safe mysqld restarted\n2017-03-28T20:05:06.531638000Z 170328 20:05:06 mysqld_safe Number of processes running now: 0\n2017-03-28T20:05:06.533452000Z 170328 20:05:06 mysqld_safe mysqld restarted\n2017-03-28T20:05:08.800909000Z 170328 20:05:08 mysqld_safe Number of processes running now: 0\n2017-03-28T20:05:08.802851000Z 170328 20:05:08 mysqld_safe mysqld restarted\n2017-03-28T20:05:11.357562000Z 170328 20:05:11 mysqld_safe Number of processes running now: 0\n2017-03-28T20:05:11.359800000Z 170328 20:05:11 mysqld_safe mysqld restarted\n2017-03-28T20:05:13.748073000Z 170328 20:05:13 mysqld_safe mysqld from pid file /var/run/mysqld/mysqld.pid ended\n2017-03-28T20:06:59.697977000Z Could not connect to mysql server. Aborting...\n2017-03-28T20:07:30.164616000Z Could not connect to mysql server. Aborting...\nStill we facing issue in MySQL. ",
    "Klowner": "Doh, thank you @alexmchale. fixed\n. Doh, thank you @alexmchale. fixed\n. quay.io/klowner/gitlab:8.5.0 if anyone wishes to give it a whirl\n. just for you, @ninja- :dancers: \n. ditto, on 10.8.3, after a host reboot last night gitlab is failing to come back up, same error.\nedit: pretty certain this is related to https://github.com/sameersbn/docker-gitlab/pull/1628. Updated to 10.8.4 (which includes #1628) and everything is working for me again.. ",
    "blandes": "How did you fix this error? Iv'e been wrestling with it for a while now.\n. Yeah, I had to make a clone of gitlab without the initialization, bash into it, and chmod/chown then make the original gitlab install correctly then turned off the clone. Odd, but I'm running into other Docker related permissions errors as well.\n. I'm going to guess http://gitlab:5000 needed to be https://gitlab:5000? @mgansler @nachokb\n. @sameersbn I know that I'm not a common contributor but I think that the best route would be option 1. The thing is, the container registry is awesome and I'm so happy that they brought it into GitLab. \nBut as a DevOps guy, that would mean that I would need to change my entire DevOps CI/CD cycles based on this registry. Like mentioned above, I want to be able to sync this to S3 just because of safety and so on. I would have to reconfigure every Developer's computer, or at least inform them, of the new migrations to the GitLab container registry. Let's pause on the registry inclusion and focus on the actual update. You guys are great at these images, and I know that you will make the right decisions but some of us need the new features that 8.8.0 - 8.8.2 bring now. It's not like I'm going to immediately switch my Dockerhub registry to this container registry without the proper safety measures anyways.\nRegardless, thanks for all the hard work. You guys are the backbone.\n. Thank guys! \n. ",
    "oomathias": "@blandes I didn't solve it, I switched from RancherOS to Ubuntu with Rancher. I had the same problem with GlusterFS and NFS (since permission/ownership with NFS volumes doesn't work like that).\nAt the end I extended this image to modify the script, the chmod was not required in my case.\nMaybe @sameersbn in yours docker images (since you do it for most of them), the chmod/chown should be allowed to fail with a warning.\n. I think in most cases the problem is that the group id and user id of the volumes have to be shared between the host and the docker container.\nExporting two variables GID and UID, and using them to create the GITLAB_USER or PG_USER may solve the problem. I've seen a bunch of images doing this to solve related problems with NFS storage.\nHave you tried to mount the volumes with the :Z volume label? https://docs.docker.com/engine/tutorials/dockervolumes/#/volume-labels\n. ",
    "ninrod": "What permissions would be those that gitlab expects? I have the very same problem with chmod/chown right now. I'm currently trying to establish a NFS gitlab docker mountpoint and I'm greeted with the following messages:\ntxt\n...\npostgresql_1  | find: `/var/lib/postgresql/9.4/main/base/1/._11995': Operation not permitted\n...\nI have a /Volumes/docker mounted as a NAS mount point. I get tons of this messages all the time.\nDon't know how to really fix this.\n. ",
    "rivanov2": "@oomathias Could you please re-open this issue? I'm having the exact same problem as @ninrod right now.\n. Hi guys,\nThanks for the quick responses. I've figured out why this happens, and actually it has nothing to do with this repo. I believe that the problem lies with a limitation of the cifs file system. I also believe that this install assumes nfs, as the installation medium. I was naively using cifs, which I read only allows one user:group pair to own the files or subfolders within a directory.\nWhen I mounted my share with nfs the docker container worked like a charm.\n. ",
    "chadmv": "I'm using nfs and I get the issue. \nAttaching to gitlab_redis_1, gitlab_postgresql_1, gitlab_gitlab_1\nredis_1       | chown: changing ownership of '/var/lib/redis': Operation not permitted\npostgresql_1  | Initializing datadir...\ngitlab_1      | Initializing logdir...\npostgresql_1  | chown: changing ownership of '/var/lib/postgresql': Operation not permitted\ngitlab_1      | Initializing datadir...\ngitlab_1      | chown: changing ownership of '/home/git/data': Operation not permitted\ngitlab_redis_1 exited with code 1\ngitlab_postgresql_1 exited with code 1\ngitlab_gitlab_1 exited with code 1\nThe weird thing is that it worked yesterday.  Power went out, things came back on.  Now it doesn't work.. ",
    "junkboy0315": "upgrading gitlab:8.5.1 solved this problem.\nthanks.\n. ",
    "rutsky": "@bscott so is a bug present or you just misconfigured something?\n. @maikelvl can you update docs with your findings?\nE.g. about not needed at all port 5500.\n. @sameersbn \n\nI intend to replace/rewrite all the kubernetes manifests as a helm chart.\n\nFYI there is a helm chart based on your docker-gitlab images by @lwolf: https://github.com/lwolf/gitlab-chart. ",
    "MDXDave": "Use fork: https://github.com/MDXDave/docker-gitlab :laughing: \n. ",
    "vfilby": "I tried doing a straight https git import and saw another error, I suspect these are related:\nfatal: unable to access 'https://github.com/username/repo.git/': Could not resolve host: github.com\nI tried executing a bash shell on the container docker exec -it <id> bash and I was able to ping github.com.  I was also able to wget the github.com page.  \nSo I appear to be able to resolver DNS in the container, but there are some networking issues when used through the gitlab UI.\n. More interesting, it appears to work fine for root, but not git.  \nI tried running a git import as root:\nroot@<dockerid>:/tmp# git clone https://github.com/username/repo.git\nCloning into 'repo'...\nremote: Counting objects: 818, done.        \nremote: Total 818 (delta 0), reused 0 (delta 0), pack-reused 818        \nReceiving objects: 100% (818/818), 123.79 KiB | 0 bytes/s, done.\nResolving deltas: 100% (437/437), done.\nChecking connectivity... done.\nHere is what happens if I try as git:\ngit@<dockerid>:/tmp$ git clone https://github.com/username/repo.git\nCloning into 'repo'...\nfatal: unable to access 'https://github.com/username/repo.git/': Could not resolve host: github.com\n. Looks like this may be related to ACLs:\nroot@<dockerid>:/sbin# ls -l /etc/resolv.conf \n-rw-r--r--+ 1 root root 40 Mar  5 05:02 /etc/resolv.conf\nI haven't played with ACLs before so I would appreciate guidance.  The get/setfacl tools are not in my path on the docker image and some googling revealed that I might need to use posix acl type (for cases on ZFS) but I am using ext4 as the underlying filesystem.\n. One of the other issues also had acl trouble and was helpful: https://github.com/sameersbn/docker-gitlab/issues/544\nI added git to the acl for /etc/resolve.conf and was able to link github and import a project.\napt-get update\napt-get install acl\nsetfacl -m u:git:r /etc/resolv.conf\nIt seems that other users on QNAP NAS systems have had similar issues.\n. I checked the acl before adding read permissions for git and it wasn't present. Based on some forums posts I found it looks like there are some basic permission gotchas on the QNAP systems.  Worth noting that I recreated the container 3-4 times from scratch and each time had to do the same permissions fixes.  Once I even tried running app:sanitize.  \nPost ACL fix I have no problems with Github integration, though I will be flipping to a DNS entry in the near future.\n. A further note for others that find this issue trying to work through permissions. I was having issues with ssh clone.\nGitLab: Failed to authorize your Git request: internal API unreachable\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights and the repository exists.\nProblem was the permissions on /etc/hosts, resolved by \nsetfacl -m u:git:r /etc/hosts\n. ",
    "locallycompact": "Hi, here's what I have:\nhttp://www.fpaste.org/335753/57449502/\n. This seemed to have only been an issue on first boot. I can close this.\n. ",
    "splattael": "Yep, you're right. They still have some issues with Ruby 2.2:\nhttps://gitlab.com/gitlab-com/www-gitlab-com/merge_requests/1434#note_3826391\nI'll keep testing 2.2 though :)\nThanks!\n. ...or remove --depth 1 (3x) from install.sh. It worked for me ;)\n. Thanks for merging and for your tireless effort maintaining this awesome Docker image :green_heart: :heart: :blue_heart: :smiley: \n. The environment variable should be called SSL_CIPHERS because it's not specific to nginx but to openssl.\n. Any thoughts on that PR?\nI'm running this patch (rebased to 8.8.5) on my installation w/o any problems :-)\n. Awesome! Rebased.\nThank you :green_heart: \n. :sparkles: :fireworks: :+1: \n. BTW, I don't think that rubygems.org is pingable.\nFetching data however should work via e.g. curl https://rubygems.org/api/v1/gems/activity.\n. Looking at the error output from above I see that you cannot connect to redis:\n...\nCompiling assets. Please be patient, this could take a while...\nrake aborted!\nErrno::EAFNOSUPPORT: Address family not supported by protocol - socket(2)\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/redis-3.3.0/lib/redis/connection/ruby.rb:24:in `initialize'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/redis-3.3.0/lib/redis/connection/ruby.rb:24:in `initialize'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/redis-3.3.0/lib/redis/connection/ruby.rb:143:in `new'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/redis-3.3.0/lib/redis/connection/ruby.rb:143:in `connect_addrinfo'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/redis-3.3.0/lib/redis/connection/ruby.rb:187:in `block in connect'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/redis-3.3.0/lib/redis/connection/ruby.rb:185:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/redis-3.3.0/lib/redis/connection/ruby.rb:185:in `each_with_index'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/redis-3.3.0/lib/redis/connection/ruby.rb:185:in `connect'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/redis-3.3.0/lib/redis/connection/ruby.rb:260:in `connect'\n...\nMainly: Errno::EAFNOSUPPORT: Address family not supported by protocol - socket(2)\n@SolidNerd I hope this helps for further investigations :-)\n. @M0E-lnx I don't know. I just wanted to jump in helping you decrypting the error message above so you don't look in the wrong direction :neckbeard: \nPossibly @SolidNerd might help you here :-)\n. @SolidNerd I thought about quoting the default value in the README as well but didn't do on purpose.\nReasons:\nWhen copied+pasted with quotes\n- It will break in docker-compose.yml (because of YAML)\n- It will break in a envfile (--env-file)\nNo other default value in the README is actually quoted. The values are quoted in longer docker run examples.\nWe could add a generic hint that about quoting values when using docker run -e.\nWDYT?\n. I like the idea! :+1: \nDon't forget that it's Markdown (.md) after all so want to use Markdown carefully.\nCurrently, every \"point\" would be a h1, wouldn't it be?\nI searched for some other issue templates on GitHub and docker's is quite nice. Maybe, you can steal and tweak it? :smile: \n. Oops, this is a duplicate of #945, probably.\n. Works like a charm. Thanks for the quick fix @heximcz :green_heart: \n. Good catch! It's already fixed in master and will be released with 8.13.3.\nSee #945 #949 \n. Well actually, it's already fixed in lastest.\nSee https://github.com/sameersbn/docker-gitlab/issues/949#issuecomment-258246075 :-)\n. @GJRTimmer I have no idea.\nIn the meantime you could:\n- use latest image\n- start your container and change it live in there ;)\n- build your own image (even on GitLab CI itself) like I do\n. The README states that /srv/docker/gitlab/gitlab is mounted as /home/git/data inside the docker container.\nSo, when talking about /srv/docker/gitlab/gitlab/certs the README means the directory outside of the container on your host machine. The envvar descriptions refer to the pathes inside the docker container.\nIt's not outdated but might be a bit confusing at first, true.\nI hope this helps.\n. Thank you for releasing! It works like a charm :purple_heart: :sparkles: . @solidnerd Kind ping :grinning: \nThe README in this PR should note that DB_COLLATION is not supported for postgresql. Similar to #1239 . @solidnerd Well, you could basically just merge #1239? :D. @phpb-com Thanks for trying!\nI do not see errors for the issue board. Could you please provide more insight?\nAs for metrics, I do not use them anymore :-( Which metrics are missing?\nKind regards,\n  Peter. The warnings from https://github.com/sameersbn/docker-gitlab/pull/1164#issuecomment-291786644 have disappeared since 9.5.0.\nStill, I do not experience any problems running Ruby 2.4.\n\nJust my 2 cents :smiley_cat: . @jostyee Oh, you are right :+1: \nI was talking about the :warning: warning which appeared after you git push. This should be gone.\nOther than the warnings, do you see any problems? Just curious.. @jostyee It seems that the :warning: warnings you talked about disappeared for me.\ngrep warning log/*.log is empty :tada: \nBTW, I am still running on Ruby 2.4 w/o any issues:\n\nAny other success stories or failures with Ruby 2.4? :pray: . I've just rebased againts the latest master.\nStill no failures running Ruby 2.4 :smile: \n\nAny other success stories? :thinking: . Rebased. Ruby 2.4 still works like a charm :green_heart: \n\n. Rebased. Still no problems with Ruby 2.4.4 on GitLab 10.8.4.\n\n. @solidnerd It seems that GitLab CE (and EE) is using Ruby 2.4.4 since 11.0.0 :exclamation: :astonished: :nerd_face: \nSee MR https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/19055\nSooooo, let's merge this PR :question: :1st_place_medal: \nWDYT?. Rebased. Still no problems with Ruby 2.4.4 on GitLab 11.0.1.\n\n. @solidnerd Sure, will do.. @solidnerd Rebased :grin: . Oops, I've just seen #1098 :cry:. @solidnerd :+1: \nMySQL works fine for me\u2122 :neckbeard: \nAs I described above, PostgreSQL installations should not be affected by this PR as the collation option in database.yml is removed on startup.\nThanks for taking your time and keep up great work! :green_heart: . @solidnerd As mentioned in https://github.com/sameersbn/docker-gitlab/pull/1098#issuecomment-310658098 you could just merge this PR in order to add DB_COLLATION.\nI've restored this branch and rebased it against the latest master.\nReady to :twisted_rightwards_arrows: merge!. @solidnerd I've \"re-opened\" it in #1262 . @clamor I had a similar problem.\nAs @maxc0d3r stated changing collation to utf8_unicode_ci should work:\n Expose envvar DB_COLLATION=utf8mb4_unicode_ci\n Start mysql with --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci\n* Fix existing tables GitLab's MySQL guide\nsql\nSET foreign_key_checks = 0;\nSELECT CONCAT('ALTER TABLE `', TABLE_NAME,'` CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;') AS 'Copy & run these SQL statements:' FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=\"gitlabhq_production\" AND TABLE_COLLATION != \"utf8mb4_unicode_ci\" AND TABLE_TYPE=\"BASE TABLE\";\nSET foreign_key_checks = 1;\nNote: I used utf8mb4_unicode_ci here but you can use utf8mb4_general_ci for each point above instead.\n@clamor I hope this helps and sorry for the confusion :green_heart: . @pmoralesp In case of DB_COLLATION (only MySQL!) just make sure that your MySQL server has the same collation as your DB_COLLATION envvar.. @maxc0d3r Which collation did you provide to your MySQL server?\nYou should start your MySQL server with --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci then.. @maxc0d3r Yes, as long as you use the same collation when starting your MySQL server and in DB_COLLATION you can use either utf8_unicode_ci or utf8_general_ci as suggested by GitLab's MySQL Guide.. @maxc0d3r Mh, DB_COLLATION actually defaults to utf8_general_ci which should be OK as long as your MySQL server is started with collation utf8_general_ci as well. This is crucial.. @maxc0d3r Having said that I suspect that you could change the collation of your existing tables to utf8_general_ci and remove DB_COLLATION (which defaults also to utf8_general_ci). This should work. It worked for me.\nEdit: Fix spelling of collation twice :scream: . @solidnerd Maybe, we should link to GitLab's MySQL Guide in description of DB_COLLATION.\nWDYT?. @clamor Use at least MySQL server version 5.7!. I cannot confirm this. I've tried every single point you mentioned on my installation (also 9.3.4) and it worked like a charm.\nDo you see any errors in /admin/logs or via docker logs -f gitlab?. @Laul0 For me, the README from https://gitlab.lsonline.fr/SharePoint/javascript-customactions loads just fine. Note: I am not logged in!. @lenovouser Feel free to try this PR on your own as I did. \n@phenomax Thanks for testing! I've also upgraded w/o problems!\nIt would help a lot if folks just try this PR and report bugs \u2728 . @solidnerd Sure, no problem :+1: \n@LennardWesterveld already (suggested)[https://github.com/sameersbn/docker-gitlab/pull/1479#issuecomment-360747448] to do so in 10.4.0.\nGonna close this then :smile: . @solidnerd I experienced some collation problems with MySQL (also 5.7.21) during the upgrade, but I think this was my own fault.\nCreating a backup works like a charm. No problems at all :/. @solidnerd FYI, I am running 10.5.1 (this PR) successfully so far!\nI did upgrade to 10.4.4 and 10.5.0 beforehand however.\nThanks! :heart: . WebIDE works for me :+1: \nNo problems so far. More success/failure stories with 10.7.0 would be awesome :purple_heart: . Hey @suanziliu,\nthe feature \"Merge Request Approvals\" is available in the GitLab Enterprise Edition (Starter License on-prem and Bronze License on GitLab.com):\n\nSee also Feature Comparison!\nI hope this helps :slightly_smiling_face: \nKind regards,\n  Peter. YES! Finally :-)\n. It should read GitLab.\n. The default value for GITLAB_PIPELINE_SCHEDULE_WORKER_CRON should read 19 * * * *.\nSee https://about.gitlab.com/gitlab-com/settings/#cron-jobs. @GJRTimmer Should this read docker push ${DOCKER_IMAGE}:latest?\nOtherwise it pushes all of local tags found, doesn't it?\n/cc @solidnerd \nEDIT: Or maybe even docker push ${DOCKER_IMAGE}:${VCS_REF}?. So, it'd read:\n```diff\ndiff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 6e8d57a..d5424aa 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -5,6 +5,7 @@ stages:\nbefore_script:\n   - export VERSION=$(cat VERSION)\n+  - export VCS_REF=$(git rev-parse --short HEAD)\n   - export CI_REGISTRY=${CI_REGISTRY:-hub.docker.com}\n   - export CI_REGISTRY_USER=${CI_REGISTRY_USER:-gitlab-ci-token}\n   - export CI_REGISTRY_PASS=${CI_REGISTRY_PASS:-${CI_JOB_TOKEN}}\n@@ -23,11 +24,11 @@ docker:build:\n     - docker build\n       --pull\n       --cache-from=${DOCKER_IMAGE}\n-      --build-arg=VCS_REF=$(git rev-parse --short HEAD)\n+      --build-arg=VCS_REF=${VCS_REF}\n       --build-arg=BUILD_DATE=\"$(date +\"%Y-%m-%d %H:%M:%S%:z\")\"\n       --build-arg=VERSION=${VERSION}\n-      --tag ${DOCKER_IMAGE} .\n-    - docker push ${DOCKER_IMAGE}\n+      --tag ${DOCKER_IMAGE}:${VCS_REF} .\n+    - docker push ${DOCKER_IMAGE}:${VCS_REF}\ndocker:build:branches:\n   stage: build\n@@ -40,7 +41,7 @@ docker:build:branches:\n     - docker build\n       --pull\n       --cache-from=${DOCKER_IMAGE}:${CI_COMMIT_REF_SLUG}\n-      --build-arg=VCS_REF=$(git rev-parse --short HEAD)\n+      --build-arg=VCS_REF=${VCS_REF}\n       --build-arg=BUILD_DATE=\"$(date +\"%Y-%m-%d %H:%M:%S%:z\")\"\n       --build-arg=VERSION=${VERSION}\n       --tag ${DOCKER_IMAGE}:${CI_COMMIT_REF_SLUG} .\n@@ -55,7 +56,7 @@ docker:build:release:\n     - docker build\n       --pull\n       --cache-from=${DOCKER_IMAGE}:${VERSION}\n-      --build-arg=VCS_REF=$(git rev-parse --short HEAD)\n+      --build-arg=VCS_REF=${VCS_REF}\n       --build-arg=BUILD_DATE=\"$(date +\"%Y-%m-%d %H:%M:%S%:z\")\"\n       --build-arg=VERSION=${VERSION}\n       --tag ${DOCKER_IMAGE}:${VERSION} .\n```. ",
    "e-jigsaw": "UPDATE:\nI added below environment values. So I can start container but I had unicorn error.\n- DB_HOST=postgresql\n      - DB_POST=5432\n      - DB_USER=gitlab\n      - DB_PASS=password\n      - REDIS_HOST=redisio\n      - REDIS_PORT=6379\n...\ngitlab_1 | 2016-03-08 01:32:24,105 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1 | 2016-03-08 01:32:25,110 INFO spawned: 'unicorn' with pid 586\ngitlab_1 | 2016-03-08 01:32:26,112 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1 | 2016-03-08 01:32:26,548 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1 | 2016-03-08 01:32:27,552 INFO spawned: 'unicorn' with pid 589\ngitlab_1 | 2016-03-08 01:32:28,554 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1 | 2016-03-08 01:32:29,222 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1 | 2016-03-08 01:32:30,226 INFO spawned: 'unicorn' with pid 592\n...\n. I read #492 #311 and fix that error.\n. @sameersbn Thank you for review. I fixed several lines.\n. @sameersbn Maybe we should use depends_on https://docs.docker.com/compose/compose-file/#depends-on\n. ",
    "SergiuCip": "Hi! \nUntil a proper solution is found and implemented my workaround it was to add the below lines into assets/build/install.sh:\nwget https://storage.googleapis.com/golang/go1.5.linux-amd64.tar.gz\ntar -C /usr/local -xzf go1.5.linux-amd64.tar.gz\nexport GOROOT=/usr/local/go\nexport PATH=$GOROOT/bin:$PATH\nand it will work as it should.\n. Great :+1: \n. I know, but what I meant it was without using the Admin Panel, during the Container runtime, I have a mysql query to do so, however, it is creating an extra record instead of appending the value in the existing column\n. My MYSQL query is as follows:\necho \"Disabled signup\" \nmysql -h \"${DB_HOST}\" -u \"${DB_USER}\" --password=\"${DB_PASS}\" \"${DB_NAME}\" -e \"UPDATE application_settings SET signup_enabled='0' WHERE id='1';\"\nI've also tried:\necho \"Disabled signup\" \nmysql -h \"${DB_HOST}\" -u \"${DB_USER}\" --password=\"${DB_PASS}\" \"${DB_NAME}\" -e \"INSERT INTO application_settings (signup_enabled) VALUES ('0');\"\nBut like I've said it is creating another record instead of existing one.\nRegards,\nSergiu\n. Hi\nThank you very much for implementing that :) :+1: However, when I am trying to build the image I am getting the following error:\nProcessing triggers for libc-bin (2.19-0ubuntu6.7) ...\nfile /usr/bin/nodejs got a new PT_PAX_FLAGS program header\nAdding user git' ...\nAdding new groupgit' (1000) ...\nAdding new user git' (1000) with groupgit' ...\nCreating home directory /home/git' ...\nCopying files from/etc/skel' ...\npasswd: password expiry information changed.\nCloning gitlab-shell v.2.6.10...\nerror: RPC failed; HTTP 500 curl 22 The requested URL returned error: 500 Internal Server Error\nfatal: The remote end hung up unexpectedly\nThe command '/bin/sh -c bash ${GITLAB_BUILD_DIR}/install.sh' returned a non-zero code: 128\nDo you have an idea what might be causing this?\nThose are the details from the Dockerfile:\nFROM sameersbn/ubuntu:14.04.20160308\nMAINTAINER sameer@damagehead.com\nENV GITLAB_VERSION=8.5.5 \\\nThank you! \nRegards,\nSergiu\n. Thanks a lot!!! It was to something with the configuration I was using. I've cloned a fresh version of your repo, changed the version to 8.7 and voila, works.\nThank you very much @sameersbn !\nRegards,\nSergiu\n. ",
    "natsu90": "Same problem to me. Even when do logout it'll redirect to localhost:10080\n. @sameersbn Thanks, but it still use localhost:10080. Below is my settings. Should I change the port?\ngitlab:\n  ports:\n    - \"10080:80\"\n  environment:\n    - GITLAB_HOST=gitlab.{domain}.com\n    - GITLAB_PORT=80\n. @sameersbn I'm using the same exact settings from repo earlier, then I updated only GITLAB_HOST & GITLAB_PORT as above and do docker-compose down & up -d again but localhost:10080 is still seen in repo URL and in redirect after logout.\n. GITLAB_HOST & GITLAB_PORT from printenv looks fine. Wonder if related with this issue; https://github.com/docker/compose/issues/1793 since I renamed the parent folder. \nWhen accessing http://192.168.1.2:10080, git clone http urls following the access url, instead of GITLAB_HOST & GITLAB_PORT that I've set.\n. ",
    "i906": "I am using nginx and have added the proxy_set_header options into the config. It now correctly uses http://gitlab.domain.com instead of http://localhost:10080.\nlocation / {\n    proxy_pass http://localhost:10080;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $http_host;\n    proxy_redirect off;\n    proxy_read_timeout 300;\n}\n. ",
    "averissimo": "@i906 you're the best!!. great guide and work @IlyaSemenov _o_ . _o_ @solidnerd _o_ thank you for pointing in the right direction :)\nI feel stupid for not finding this, but it did not appear in my search engine's queries or when using github search. ",
    "lksv": "Thanks. Now it's ok.\n. ",
    "mizunashi-mana": "Oh, thanks.  (I just read the readme...)\nI fixed it.\n. ",
    "wupeng1988": "I used latest sameersbn/gitlab image and mysql official image and redis official image\n. @sameersbn Sorry, haven't logined for a long time, this issue is not about this image,  it's about mysql image,  using latin1 as default charset when auto created database, so I have change it to utf8\n. ",
    "ecrazor1911": "I'm sorry! I use bad version of postgresql (9.4).\n. Similar issue: #703 \nhttps://domain/help/ci%2Fquick_start/README\nMaybe the problem is a escaped slash character. Can't handle NGINX proxy.\n. ",
    "binarytemple-external": "Same here, on 0.9.5 - as a consequence oauth is broken (presumably unless I run gitlab on port 80).\nI'm trying to test gitlab with drone, running gitlab on port 10080.\ndrone-server_1  | time=\"2017-04-19T09:40:16Z\" level=error msg=\"cannot authenticate user. Error exchanging token. Post http://dgitlab:10080/oauth/token: dial tcp 172.19.0.5:10080: getsockopt: connection refused\"\nThis is because drone makes a http request to the oauth endpoint of the gitlab server (inside the docker-compose network), but within the network gitlab is listening on port 80.\nWould be easier if changing GITLAB_PORT=10080 also made nginx listen on port 10080, currently it's running on 80.\n. ",
    "verrol": "Hi @mpbzh,\nMiraDb seems to be fine. \nI have so far been able to restore the projects and mysql data from a back up file in the gitlab directory. Unfortunately, that was from Jan. 21. I think Synology upgraded Gitlab from 7.9.3 to 8.2.3. And my backup stopped working. I don't even know I had enable automatic backup, but I am glad I had that. It was a process to get it restored, but it restored the projects, and other MySQL database stuff.\nBut I would like to just deploy Gitlab 8.2.3, and have it come up with the latest data stored in the data dir.\nThanks for you time.\n.v\n. The fact that I have the backups and can restore them. Is pretty good. For the projected that existed when the backup was taken, developers just have to push and it will be fine. For projects that were created after, they will just have to recreate them.\n.v\n. ",
    "patrickse": "I had the same problem. What I\u00b4ve did is, remove my gitlab container and recreate it through docker-compose. My data files where mounted as volumes, so no data loss.\nNow the migration is just working...  thanks for the good work @sameersbn \n. ",
    "Blackn0va": "My Gitlab Server was stuck after update to MariaDB10, always says Paket starting..\nMy Solution:  Login to MariaDB as root, Drop database from Gitlab , Delete User Gitlab_user f\u00fcr MariaDB 5, and mariaDB10. After this restart your nas, maybe twice. Then you can go to Paket Store and make a fresh Gitlab installation.\nIn my case i hafe a Backup from My Repositorys, restore it, and Done.. Sure: \nI loggedin on phpMyAdmin, create a backup from Gitlab Database, \nlog in via SSH and Type \"docker exec -t GitLab gitlab-rake gitlab:backup:create\"\nIN MARIADB 5 AND 10 !\nThen in phpMyAdmin drop database GitLab\nThen Restart your NAS, after this you can Remove Gitlab from PaketStation.\nRestart NAS, after This you can try to reinstall GitLab. . The Restore command is \nsudo gitlab-rake gitlab:backup:restore BACKUP=1512477187_2017_12_05_9.4.4_gitlab_backup\n. Okay, you right, i had a backup from my system..\nBut you can try to backup manually these files and Folders.\nDatabase =  work with Broke sys\nRepositorys = Work with broke sys\nArtifacts = I think it works\nbuilds = Work\nlfs = I don\u00b4t know\nPages\nUploads\nAll those files you can find on  (in my case)\n/volume1/docker/gitlab\nin you case you can try to Backup all files, destroy the database and make a clean fresh install and restore your files.\n. i becomes in few minutes direkt support from synology, maybe then i can tell you a better solution.. i have a full backup from Gitlab but i try now something and give you a response. 1. Go to phpMyAdmin and make a backup from gitlab Database, (MariaDB5)\n2. Then login via SSH and make a backup from you comletely gitlab Folder \n3. cp -R /volume1/docker/gitlab /volume1/homes/Black/docker/gitlab.backup\n4. Drop The Gitlab Database (Drop DATABASE gitlab;) (MariaDB5)\n5. Restart NAS\n6. Try Remove  Gitlab via PaketStation\n7. Restart NAS\n8. Install GitLab from PaketStation USE THE SAME DATABASE ANME PORT AND PASSWORDS !!\n9. Restore your Gilab Database Backup via phpMyAdmin (MariaDB10)\n10. Restore gitlab Folder via SSH \n11. cp -R /volume1/homes/Black/docker/gitlab.backup /volume1/docker/gitlab \n12. Restart NAS and Try to Login\nOn Point 6: If you cannot Remove Gitlab, then you have to Destroy some more Files from Gitlab after your BACKUP! For Example you can delete the GiLab Folter with\nrm -R /volume1/docker/gitlab\nOn my Working System it will work.. \n. Yes you make backups from mariaDB 5 and install the newest version on MariaDB10\nAnsonsten k\u00f6nnen wir auch auf Deutsch schreiben, da mein englisch nicht das beste ist :). One more step you need to restore your gitlab data..\nsudo cp 1493107454_2017_04_25_9.1.0_gitlab_backup.tar /volume1/docker/gitlab/backups\nlogin ssh \ndocker exec -it synology_gitlab bash\nand restore your data\nbundle exec rake gitlab:backup:restore RAILS_ENV=production\n. ",
    "GertschiM": "Balckn0va\nI have the same problem,\nQuestion how did you do the backup? can you explain the steps to me?. Thx,\nbut i hat now a problem\nI can only run a backup on a working system ;-)\nroot@WIFDNA0010:~# docker exec -t synology_gitlab gitlab-rake gitlab:backup:create\nError response from daemon: Container ae378e7e43667613ec8ae5afc7f5145ec1b0784bb35b8e231266af597fd87436 is not running\nand the restore command is?\n\nGerhard Mack | Senior IT Systems Architect\nSchindler Fahrtreppen International GmbH | FIVN\nWienerbergstrasse 21-25 | 1100 Wien, Austria\n\nFrom: Blackn0va [mailto:notifications@github.com]\nSent: Friday, December 15, 2017 10:13 AM\nTo: sameersbn/docker-gitlab docker-gitlab@noreply.github.com\nCc: Gerhard Mack gerhard.mack@schindler.com; Comment comment@noreply.github.com\nSubject: Re: [sameersbn/docker-gitlab] How To Restore Gitlab After Failed Upgrade? (#649)\nSure:\nI loggedin on phpMyAdmin, create a backup from Gitlab Database,\nlog in via SSH and Type \"docker exec -t GitLab gitlab-rake gitlab:backup:create\"\nIN MARIADB 5 AND 10 !\nThen in phpMyAdmin drop database GitLab\nThen Restart your NAS, after this you can Remove Gitlab from PaketStation.\nRestart NAS, after This you can try to reinstall GitLab.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/649#issuecomment-351953427, or mute the threadhttps://github.com/notifications/unsubscribe-auth/Ag9yGyEwHeaXqMDtkfQJEVBX0x_drGOuks5tAjgFgaJpZM4H5htn.\n\nNotice: The information contained in this message is intended only for use of the individual(s) named above and may contain confidential, proprietary or legally privileged information. No confidentiality or privilege is waived or lost by any mistransmission. If you are not the intended recipient of this message you are hereby notified that you must not use, disseminate , copy it in any form or take any action in reliance of it. If you have received this message in error please delete it and any copies of it and notify the sender immediately.\n\n. Thx,\nthanks, will test it\ngod thank a second synology, where I can test this\n\nGerhard Mack | Senior IT Systems Architect\nSchindler Fahrtreppen International GmbH | FIVN\nWienerbergstrasse 21-25 | 1100 Wien, Austria\n\nFrom: Blackn0va [mailto:notifications@github.com]\nSent: Friday, December 15, 2017 12:07 PM\nTo: sameersbn/docker-gitlab docker-gitlab@noreply.github.com\nCc: Gerhard Mack gerhard.mack@schindler.com; Comment comment@noreply.github.com\nSubject: Re: [sameersbn/docker-gitlab] How To Restore Gitlab After Failed Upgrade? (#649)\nOkay, you right, i had a backup from my system..\nBut you can try to backup manually these files and Folders.\nDatabase = work with Broke sys\nRepositorys = Work with broke sys\nArtifacts = I think it works\nbuilds = Work\nlfs = I don\u00b4t know\nPages\nUploads\nAll those files you can find on (in my case)\n/volume1/docker/gitlab\nin you case you can try to Backup all files, destroy the database and make a clean fresh install and restore your files.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/649#issuecomment-351979038, or mute the threadhttps://github.com/notifications/unsubscribe-auth/Ag9yG0pomcIdD6XerA3mupxHUrWtxYmlks5tAlK2gaJpZM4H5htn.\n\nNotice: The information contained in this message is intended only for use of the individual(s) named above and may contain confidential, proprietary or legally privileged information. No confidentiality or privilege is waived or lost by any mistransmission. If you are not the intended recipient of this message you are hereby notified that you must not use, disseminate , copy it in any form or take any action in reliance of it. If you have received this message in error please delete it and any copies of it and notify the sender immediately.\n\n. \nthx\n\nGerhard Mack | Senior IT Systems Architect\nSchindler Fahrtreppen International GmbH | FIVN\nWienerbergstrasse 21-25 | 1100 Wien, Austria\n\nFrom: Blackn0va [mailto:notifications@github.com]\nSent: Friday, December 15, 2017 12:37 PM\nTo: sameersbn/docker-gitlab docker-gitlab@noreply.github.com\nCc: Gerhard Mack gerhard.mack@schindler.com; Comment comment@noreply.github.com\nSubject: Re: [sameersbn/docker-gitlab] How To Restore Gitlab After Failed Upgrade? (#649)\ni becomes in few minutes direkt support from synology, maybe then i can tell you a better solution.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/649#issuecomment-351984747, or mute the threadhttps://github.com/notifications/unsubscribe-auth/Ag9yG6E3fSj8qxdcHy_220KC_AcK-mtnks5tAlnBgaJpZM4H5htn.\n\nNotice: The information contained in this message is intended only for use of the individual(s) named above and may contain confidential, proprietary or legally privileged information. No confidentiality or privilege is waived or lost by any mistransmission. If you are not the intended recipient of this message you are hereby notified that you must not use, disseminate , copy it in any form or take any action in reliance of it. If you have received this message in error please delete it and any copies of it and notify the sender immediately.\n\n. Thx,\nI'll test it right away\n\nGerhard Mack | Senior IT Systems Architect\nSchindler Fahrtreppen International GmbH | FIVN\nWienerbergstrasse 21-25 | 1100 Wien, Austria\n\nFrom: Blackn0va [mailto:notifications@github.com]\nSent: Friday, December 15, 2017 1:14 PM\nTo: sameersbn/docker-gitlab docker-gitlab@noreply.github.com\nCc: Gerhard Mack gerhard.mack@schindler.com; Comment comment@noreply.github.com\nSubject: Re: [sameersbn/docker-gitlab] How To Restore Gitlab After Failed Upgrade? (#649)\n\nGo to phpMyAdmin and make a backup from gitlab Database,\nThen login via SSH and make a backup from you comletely gitlab Folder\ncp -R /volume1/docker/gitlab /volume1/homes/Black/docker/gitlab.backup\nDrop The Gitlab Database\nRestart NAS\nTry Remove Gitlab via PaketStation\nRestart NAS\nInstall GitLab from PaketStation USE THE SAME DATABASE ANME PORT AND PASSWORDS !!\nRestore your Gilab Database Backup via phpMyAdmin\nRestore gitlab Folder via SSH\ncp -R /volume1/homes/Black/docker/gitlab.backup /volume1/docker/gitlab\nRestart NAS and Try to Login\n\nOn my Working System it will work..\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/649#issuecomment-351991487, or mute the threadhttps://github.com/notifications/unsubscribe-auth/Ag9yG7v1U_w8CmOHqJirlnJR8N_D4Sr8ks5tAmJsgaJpZM4H5htn.\n\nNotice: The information contained in this message is intended only for use of the individual(s) named above and may contain confidential, proprietary or legally privileged information. No confidentiality or privilege is waived or lost by any mistransmission. If you are not the intended recipient of this message you are hereby notified that you must not use, disseminate , copy it in any form or take any action in reliance of it. If you have received this message in error please delete it and any copies of it and notify the sender immediately.\n\n. but we are already talking about the MariaDB10\nand from the last version\n\nGerhard Mack | Senior IT Systems Architect\nSchindler Fahrtreppen International GmbH | FIVN\nWienerbergstrasse 21-25 | 1100 Wien, Austria\n\nFrom: Blackn0va [mailto:notifications@github.com]\nSent: Friday, December 15, 2017 1:14 PM\nTo: sameersbn/docker-gitlab docker-gitlab@noreply.github.com\nCc: Gerhard Mack gerhard.mack@schindler.com; Comment comment@noreply.github.com\nSubject: Re: [sameersbn/docker-gitlab] How To Restore Gitlab After Failed Upgrade? (#649)\n\nGo to phpMyAdmin and make a backup from gitlab Database,\nThen login via SSH and make a backup from you comletely gitlab Folder\ncp -R /volume1/docker/gitlab /volume1/homes/Black/docker/gitlab.backup\nDrop The Gitlab Database\nRestart NAS\nTry Remove Gitlab via PaketStation\nRestart NAS\nInstall GitLab from PaketStation USE THE SAME DATABASE ANME PORT AND PASSWORDS !!\nRestore your Gilab Database Backup via phpMyAdmin\nRestore gitlab Folder via SSH\ncp -R /volume1/homes/Black/docker/gitlab.backup /volume1/docker/gitlab\nRestart NAS and Try to Login\n\nOn my Working System it will work..\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/649#issuecomment-351991487, or mute the threadhttps://github.com/notifications/unsubscribe-auth/Ag9yG7v1U_w8CmOHqJirlnJR8N_D4Sr8ks5tAmJsgaJpZM4H5htn.\n\nNotice: The information contained in this message is intended only for use of the individual(s) named above and may contain confidential, proprietary or legally privileged information. No confidentiality or privilege is waived or lost by any mistransmission. If you are not the intended recipient of this message you are hereby notified that you must not use, disseminate , copy it in any form or take any action in reliance of it. If you have received this message in error please delete it and any copies of it and notify the sender immediately.\n\n. ",
    "maxcnunes": "Closing it already. Since I was just sharing my solutions. Sorry, for create this \"useless\" issue, but here looked like the best place to share it.\n. ",
    "b6pzeusbc54tvhw5jgpyw8pwz2x6gs": "@lazyfrosch , Thanks! Yes, I ran in gitlab-runner directory, so.. can i avoid this naming? I want to sync the container name to that in the documentation.\n. @lazyfrosch , Thanks thanks! You're been a big help.\n. In my case, docker-gitlab-ci-multi-runner is the best solution for now.\n. I think Docker-gitlab is aim to install and use gitlab easy. So I prefer option1 too\n. What benefit is being offered from decoupled?\nIs there someone who can answer more detail?\n. ",
    "JesperWe": "I am seeing exactly the same problem after a fresh install using apt-get on Ubuntu 14.04.\nRestart gitlab does not help.\n. This should probably be reopened as an issue at gitlab.com if you have the time. AFAIK Gitlab (the company) is not using github (the site) to track issues for gitlab (the product) anymore.\n. This should probably be reopened as an issue at gitlab.com if you have the time. AFAIK Gitlab (the company) is not using github (the site) to track issues for gitlab (the product) anymore.\n. ",
    "madmas": "I just did a fresh install on a raspberrypi with raspbian. When I try to change the password initially, I get the screen shown at top.\n. Yes, I can confirm that, changing the password and logging in with Chrome instead of Firefox works fine.\n. ",
    "adventurist": "Experiencing this with a fresh install in Ubuntu 16.04. Browsing to gitlab via Chrome 54. ",
    "anton-yurchenko": "\nIf someone else gets into this, first check if you have any health check that pings port of gitlab. It seems that if there is another request made to gitlab interface at first screen \"enter password\" it will recreate another token for allowing you to set root password, disabling current one that you achieved in browser.\nConclusion:\nmake sure no other GET / request is made to gitlab while the first screen is displayed\n\nConfirmed!\nTemporary removing Health Check, resolves the problem.\nThanks  @radut !\nAlthough, the warning stated 11 errors:\nEmail can't be blank\nPassword can't be blank\nNamespace route can't be blank\nNamespace name can't be blank\nNamespace name can contain only letters, digits, '_', '.', dash and space.\nName can't be blank\nNotification email can't be blank\nNotification email is invalid\nUsername can't be blank\nUsername can't be blank\nUsername can contain only letters, digits, '_', '-' and '.'. Cannot start with '-' or end in '.', '.git' or '.atom'.\nHere is my docker-compose.yml:\n```\n  gitlab:\n    image: gitlab/gitlab-ce:10.8.4-ce.0\n    restart: on-failure\n    networks:\n      static:\n        ipv4_address: 10.11.12.17\nhealthcheck:\ntest: \"curl -sL http://localhost:80 -o /dev/null || exit 1\"\ninterval: 30s\ntimeout: 10s\nretries: 5\nenvironment:\n  GITLAB_OMNIBUS_CONFIG: |\n    external_url 'https://<HOST>:443'\n    nginx['redirect_http_to_https'] = true\n    nginx['ssl_certificate'] = \"/etc/gitlab/certs/cert.crt\"\n    nginx['ssl_certificate_key'] = \"/etc/gitlab/certs/cert.key\"\n    gitlab_rails['gitlab_https'] = true\n    gitlab_rails['gitlab_port'] = 443\n    gitlab_rails['rack_attack_git_basic_auth'] = true\nports:\n  - 443:443\nvolumes:\n  - /docker_data/gitlab/config:/etc/gitlab:Z\n  - /docker_data/gitlab/logs:/var/log/gitlab:Z\n  - /docker_data/gitlab/data:/var/opt/gitlab:Z\n\n```. ",
    "jgsqware": "Hello, any idea when you will merge it?\n. ",
    "cybertk": "As 8.6.6 is out, can we skip to it?\n. +1 for second option\n. ",
    "nathanleclaire": "Why have the Compose file set to an image that doesn't exist though?  Even if the project is blocked on upgrading to that version, couldn't an older one still be used?\n. Cool no problem thanks @sameersbn \n. ",
    "chinaares": "I have met this error too, I deploy sameersbn/gitlab:8.16.4 on aws cloud.. ",
    "Khorynthium": "Awesome. Thank you!\n. ",
    "Scukerman": "I would like to see this option too. Obviously you need to run executable file with arguments:\n$ /sbin/entrypoint.sh app:rake gitlab:backup:restore. ",
    "Jasperswaagman": "Did you check config/initializers/smtp_settings.rb.sample this can be configured using environment variables: https://github.com/sameersbn/docker-gitlab#mail\n. ",
    "fruel": "Ok, I realize now this issue was my own fault.\nI completely missed the \"Maximum artifacts size\" option in the GitLab admin area and went looking for a solution in the config files. \nNevertheless, thank you very much @SolidNerd for the fast response!\n. Ok, I realize now this issue was my own fault.\nI completely missed the \"Maximum artifacts size\" option in the GitLab admin area and went looking for a solution in the config files. \nNevertheless, thank you very much @SolidNerd for the fast response!\n. ",
    "ffleureau": "Fixed in 8.7.6.\nSee https://gitlab.com/gitlab-org/gitlab-ce/issues/17071\n. ",
    "auspex": "That's not the question. I certainly don't plan to build it on my own, as that loses any updates to this image.  I want to know how that file is getting turned into config/gitlab.yml.  If I knew that, I could just add a three line patch to it.\n. Anyway, that's not what I'm looking for: assets/runtime/config isn't part of the created image, so can't be relevant.  You say \"everything happens in the image at runtime\". It's that \"everything\" that I want to understand.  Somewhere all those environment variables are getting substituted, and it's not using assets/runtime/config/gitlab.yml as the input to that process, and it doesn't appear to be using config/gitlab.yml, either.\n. I understand that. It's NOT what I'm trying to do. Now, perhaps what I'm trying to do isn't what I should be doing, but I'm pretty sure it is.\nI'm using docker-compose, changing the 'build parameter to use my own Dockerfile:\ngitlab:\n  restart: always\n  build: gitlab\n...\nAnd my gitlab/Dockerfile:\n```\nFROM sameersbn/gitlab:8.7.5\nUSER    git\nWORKDIR /home/git/gitlab\nRUN     git remote add martijnvermaat https://github.com/martijnvermaat/gitlabhq.git && \\\n        git fetch martijnvermaat && \\\n        git checkout 8-7-stable-blob-ipython-notebook\nUSER    root\nneeded for the iPython notebook converter\nRUN     apt-get update && apt-get -y install pandoc python-pip\nRUN     pip install ipython jinja2\n```\nThis is working fine, except that I need to inject three lines into config/gitlab.yml. Every attempt I've made so far has resulted in the same gitlab.yml you create, omitting those three lines.  If I have to put a gitlab.yml into /srv/docker/gitlab/gitlab/config/ then it's no longer portable, and it doesn't have the benefit of the environment variables set in docker-compose.yml.\nSo, I'm trying to figure out how the existing process is injecting environment variables into gitlab.yml, apparently at container creation time, and where it gets the source for that process--because that assets/runtime/config/gitlab.yml file isn't there when the container is created.\n. OK, he didn't give me that path. I had no idea that assets/runtime is getting placed under /etc/docker-gitlab.\nSo, now, I add patch to my apt packages, include a diff file in the context, and add\nRUN     patch -d /etc/docker-gitlab/runtime/config/gitlabhq gitlab.yml /tmp/gitlab.yml.diff\nas the last line of my Dockerfile, and the resulting gitlab.yml looks right!\nThank you!  (Now, to see if it actually works as intended--if it doesn't it's no fault of anybody here! ;-) )\n. ",
    "vitorarins": "Hi, will this be merged after release 8.8.2 from Gitlab? Or will it be merged now and another PR will update to 8.8.2? I am sorry for my confusion, I am not sure how you guys are working with versions here. Thank you for the great work!\n. @SolidNerd the errors you are getting are on deploy? Or when you are using the registry? If it is on deploy, you could have the wrong order of chain in your certificate.\n. @SolidNerd: I am running a private Registry with Portus, and thought that I would get rid of all that configuration steps with Gitlab Registry. I just hope it gets a little easier :disappointed: \n. The docker registry is a real pain to install. Even a really good documented application like Portus is difficult to set it up, depending where you want to install things. So I think we are going to wait forever until we make things \"easy\" to set up. I say we could release this, after all it is optional, and work on the documentation. The gist is a good starting point, I can help showing what I did with HAProxy and systemd units for a CoreOS install of a registry. I started some work here: https://github.com/NeowayLabs/deploy-portus but there is a lot to do.\n. ",
    "mgansler": "How will the registry work if gitlab itself is running behind a reverse proxy?\n. Great work! I'm going to try it now, just can't wait any longer ;)\nWhat is your setup with the reverse proxy? Does it terminate SSL for your Gitlab instance? What about the registry?\n. That would be great. Right now I have some issues connection, the registry keeps telling me 400: The plain HTTP request was sent to HTTPS port\n${GITLAB_LOG}/nginx/gitlab_registry_error.log tells me:\n2016/05/29 18:44:09 [error] 543#543: *1182 connect() failed (111: Connection refused) while connecting to upstream, client: 127.0.0.1, server: registry.domain.tld, request: \"GET /v1/users/ HTTP/1.1\", upstream: \"http://[::1]:5000/v1/users/\", host: \"registry.domain.tld:5000\"\nOutput of netstat -tulpen inside the container:\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       User       Inode       PID/Program name\ntcp        0      0 127.0.0.11:47717        0.0.0.0:*               LISTEN      0          10542054    -               \ntcp        0      0 0.0.0.0:5000            0.0.0.0:*               LISTEN      0          10544484    538/nginx -g daemon\ntcp        0      0 127.0.0.1:8080          0.0.0.0:*               LISTEN      1000       10544631    -               \ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      0          10544482    538/nginx -g daemon\ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      0          10542874    539/sshd        \ntcp6       0      0 :::80                   :::*                    LISTEN      0          10544483    538/nginx -g daemon\ntcp6       0      0 :::22                   :::*                    LISTEN      0          10542875    539/sshd        \nudp        0      0 127.0.0.11:33746        0.0.0.0:*                           0          10542053    -\nIf I understand this correctly, it tries to connect via IPv6 but there is nothing listening on :::5000.\nSo I took a look at the nginx configurations for gitlab and for the registry and indeed, there is a difference.\ngitlab looks like this:\nlisten 0.0.0.0:80 default_server;\nlisten [::]:80 default_server;\nwhile gitlab-registry looks like this:\nlisten *:{{GITLAB_REGISTRY_PORT}} ssl http2\nMaybe I'm totally wrong here but I think that the registry is listening only on IPv4 while it tries to connect via IPv6. Will investigate further....\n. I managed to get rid of the Connections refused errors by setting the GITLAB_REGISTRY_API_URL to http://gitlab:5000 (where gitlab is the name of my service in the docker-compose.yml file).\nBut the 400 Bad Request: The plain HTTP request was sent to HTTPS port is still present.\nI'm giving up for today, maybe one of you guys has an idea :)\n. Soon...I didn't gave up and fixed the issue. Too embarrassing to say what it actually was :sob:\n. http was fine but it has to point to the registry, not gitlab itself.\n. Thanks for that! I actually have a question: What is the GITLAB_REGISTRY_KEY_PATH used for?\n. I'm thinking about running the registry behind a reverse proxy.\nDoes this pub/priv key pair has to be the same as the external one?\nOr could I generate a self signed one for authentication and have a Letsencrypt Certificate in my Reverse Proxy for external access?\n. Update:\nMy Registry/Gitlab now use a self signed certificate internally. The LE-cert is loaded by HAProxy and handles SSL/TLS termination for external access. Everything's working (I can login/push to the registry w/o specifying the port).\nThe only \"issue\" I have right now is that Gitlab still includes the port in the Container Registry Port.\nWhen I set GITLAB_REGISTRY_PORT=\"\" and hardcode the port into the gitlab-registry nginx config file it still shows registry.example.com:. I think to get rid of the : changes must be made a Gitlab CE directly.\nPush/Pull w/o the : works well though. So it's only a cosmetic issue.\nAny Ideas on this?\nEDIT:\n@SolidNerd GITLAB_REGISTRY_PORT=443 works (I actually reverted the changes I made to the gitlab-registry nginx config again), but the Gitlab UI still shows the Port.\n. @SolidNerd I still have a registry.crt and registry.key which I pass to Gitlab/Registry. They are just different from the external SSL Certificate.\nBUT what might work is generating these self signed when Gitlab starts. And if the certs/ directory is shared between the Registry and Gitlab Container as in you example the user doesn't have to generate it manually.\nEDIT:\nTo clarify, nginx only acts as a reverse proxy for the registry. It still does it in my setup only that no request will ever reach it. Gitlab directly connects to the registry (GITLAB_REGISTRY_API_URL=http://registry:5000) and externally I use HAProxy anyway which also points to the registry directly.\n. May I propose another option?\nI just took a look at at the Registry Image itself.\nIt looks really small and simple - two packages and a 24MB binary.\nSo why not include it here? Maybe in form of a Tag, but I don't think that will be necessary because of the small footprint and the registry will only be enabled and listening if the correct environment variables are set.\nWhat do you think of this?\nAnyway, I would be fine with either of the two options proposed by @sameersbn . Right now I'm running my container based on #705. And to be honest, the process isn't that complicated, once you figured out what to do, so if anything it's lacking a bit more documentation.\n. @SolidNerd regarding your Gist:\nI don't think you actually need the tls (certificate/key) entries in your config.\nAccording to https://docs.docker.com/registry/configuration/#tls they are optional - and indeed, the Gitlab Nginx is handling SSL Termination for the registry. It all depends how you expose the registry to the outside world.\nAnd you have three choices here, directly (docker run -p 1.2.3.4:5000:5000 registry), via the Gitlab Reverse Proxy (docker run --net gitlab_default -p 172.x.y.1:5000:5000 registry) or have another Reverse Proxy in front of Gitlab AND the registry.\nIn my opinion, the tls setting is only necessary with the direct option.\nAlso, if I understood it correctly, the rootcertbundle should (must?) not be the same as the SSL certificate.\nLooking at https://github.com/docker/distribution/issues/520, I get the feeling that it should be indeed different from the SSL cert.\n. @SolidNerd I don't think it even has to be trusted. It's just a private/public key used to sign/verify the token.\n I generated one myself and it works fine. I didn't add it to neither the registry nor the gitlab container.\nI found these instructions somewhere (I can never remember how to create a certificate):\nbash\nopenssl req -new -newkey rsa:4096 > registry.csr\nopenssl rsa -in privkey.pem -out registry.key\nopenssl x509 -in registry.csr -out registry.crt -req -signkey registry.key -days 3650\ndocker-compose.yml:\n``` yaml\nservices:\n  gitlab:\n    environment:    \n      - GITLAB_REGISTRY_ENABLED=true\n      - GITLAB_REGISTRY_HOST=registry.example.com\n      - GITLAB_REGISTRY_PORT=443\n      - GITLAB_REGISTRY_API_URL=http://registry:5000\n      - GITLAB_REGISTRY_KEY_PATH=/certs/registry.key\n      # next two lines are only there because there would be errors with nginx otherwise\n      - SSL_REGISTRY_KEY_PATH=/certs/registry.key\n      - SSL_REGISTRY_CERT_PATH=/certs/registry.crt\n    volumes:\n      - ./certs:/certs\nregistry:\n    volumes:\n      - ./certs:/certs\n```\nconfig.yml\nyaml\nauth:\n  token:\n    realm: https://gitlab.example.com/jwt/auth\n    service: container_registry\n    issuer: gitlab-issuer\n    rootcertbundle: /certs/registry.crt\n. @hanej what exactly has to run in privileged mode?\nAFAIK, you MAY need privileged mode for certain CI functionality (spawning and linking services).\nBut this is nothing new.\nAlso: http://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/ (written by the guy behind dind)\nI just tested it: for docker build/tag/rmi/push there is no need for privileged mode at all. All you need is the docker binary and access to the docker socket.\n. @hanej thanks for the link to the issue, but I don't completely understand their argument.\ndocker build (and therefor docker run) works just fine, docker push as well. So no limitations as far as I can tell.\nSecurity is a different Story - mounting /var/run/docker.sock basically exposes the entire Host to users of gitlab - they could mount all kinds of directories. It could be used for spam and whatnot. But the same applies to dind. Only it's limited to everything inside this docker container.\nBut isn't it a good Idea to have the runners running on isolated hosts (VM?) anyway?\n. I just noticed an inconsistency of naming the env-vars in the README and the scripts used to configure gitlab. See #711\n. I discussed this with @SolidNerd quite a bit already but I guess we need all your opinions on this.\nIf you don't intend to use the built in Reverse Proxy for the Registry (e.g. you are using an external Reverse Proxy or your Registry is on another host) currently there are some issues.\nCurrently, GITLAB_REGISTRY_PORT defines, on which port the built in reverse proxy is listening as well as what Gitlab shows in the Container Registry Tab. This is perfect if you use a port different from 443.\nIssue 1:\nThis is purely cosmetic. If you are using port 443, you don't have to specify that port for docker login or docker push/pull\nIssue 2:\nLet's say you are using the built in Reverse Proxy and want it to listen on Port 5005.\nBut you have another Reverse Proxy in front of that, which listens in Port 5000. Then the information Gitlab shows you is actually wrong!\nUsing two Reverse Proxies may sound stupid at first, but when you setup Gitlab without SSL certificates it assumes you are running behind a Reverse Proxy - but the built in Reverse Proxy actually routes HTTP  Requests to the Gitlab Workhorse (see assets/runtime/config/nginx/gitlab)\nI'm not sure what is the best way to resolve this right now, maybe I'll have an Idea tomorrow.\n. @tkaefer I guess my argument is, that these two settings can be independent and should therefor be configurable independently. I think the issue right now is, that you must define GITLAB_REGISTRY_PORT, otherwise the built in registry reverse proxy fails to start. But you don't necessarily want this to be the port to show up in the Gitlab UI.\nMaybe the simplest solution would be to introduce something like DISABLE_GITLAB_REGISTRY_REVERSE_PROXY.\n. @SolidNerd I agree, GITLAB_REGISTRY_PORT must not have a default value, otherwise it's impossible to set to empty. (this addresses issue 1)\nedit:\nI just opened #714 which disables the built-in reverse proxy. We may want to combine this with your proposal.\nedit 2:\nAlso #715, which is completely unrelated\n. @SolidNerd Please check #741 \n. I'm not sure I can. There is no default for GITLAB_REGISTRY_PORT right now in your branch, right?\nAnd it may be the Rum talking, but I think their might be an issue - if GITLAB_REGISTRY_PORT is not set, NGINX_REGISTRY_PROXY_PORT is set to 443. But if certificates for Gitlab and the Registry are provided, the current setup tries to start up two instances of Nginx listening on Port 443 which won't work.\n. Closing because target was already merged.\n. @sameersbn @SolidNerd ping! Any opinions on this?\n. Testing my changes now, will remove WIP from the title when I'm done.\n. Same here, that's really strange.\n. Well, there is an easy fix - explicitly set GITLAB_REGISTRY_PORT to empty string: local GITLAB_REGISTRY_PORT=\"\"\n. Same Issue with HAProxy, @lorenz thanks for your \"fix\", works for me as well.\nMy HAProxy Config:\n```\nfrontend https\n        bind IPv4:443 ssl crt domain.com/haproxy.pem\n        bind IPv6:443 ssl crt domain.com/haproxy.pem\n        mode http\n        http-response set-header Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload;\"\n        http-request add-header X-Forwarded-Proto https\n        http-request set-header X-Forwarded-Port 443\n        http-request del-header Proxy # https://httpoxy.org\n        use_backend bk_gitlab if { ssl_fc_sni gitlab.domain.com }\nbackend bk_gitlab\n        server gitlab 172.50.0.1:8080\n``\n. @lazyfrosch works for me, thanks!\n. I googled a bit to find out if settingX-Forward-Ssl onis recommended or not. There are some tutorials which include it, while others do not. [RFC 7239](https://tools.ietf.org/html/rfc7239#page-6) does not mentionX-Forward-Ssl.\nCan anybody think of a situation where addingX-Forward-Ssl on` could break something?\nBut whatever you decided, update the Readme ;)\n. @sameersbn Works for me (HAProxy - removed X-Forwarded-Ssl header)\nBTW: there is an update available :)\n. Updated my installation using your changes: seems to work fine.. sounds good!\nOne more thing regarding the workhorse version:\n$ docker exec -it gitlab_gitlab_1 bash\nroot@1cbbee0f9d41:/home/git/gitlab# gitlab-workhorse --version\ngitlab-workhorse -20161206.104037\nBut if I check the VERSION file in /home/git/gitlab-workhorse it says 1.0.1 - so everyhing seems to be alright. My md5 hash tests earlier are the result of using zsh which handles the ? in the url strangely.... done :)\n. ",
    "boonkerz": "i have no registry entry in my project settings\n-e 'GITLAB_REGISTRY_ENABLED=true'\nshould be enough?\n. @SolidNerd ok because but why the defaults?\nit looks like they are preset :) \n. Wow thx for made this possible it works and can replace quay.io :)\n. so all settings are made i can push pull directly to my gitlab instance.\nthe only thing which not work ist the registry display in the project.\nnothing is display. \nthe registry log says\n2016-06-16 09:36:25,312 INFO: 172.17.0.16 - - [16/Jun/2016:09:36:25] \"GET /v2/tp/test-old-docker/tags/list HTTP/1.1\" 404 233 \"-\" \"Faraday v0.9.2\nbut all other works\n. @SolidNerd it looks like registry does not support v2\n\nroot@108122ce8fdf:/#  curl -X GET http://127.0.0.1:5000/v2/\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n404 Not Found\nNot Found\nThe requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again.\nroot@108122ce8fdf:/#  curl -X GET http://127.0.0.1:5000/v1/_ping\ntrue\nroot@108122ce8fdf:/#\n\nOk back to normal i used registry:2 as image and it works oO\n. ",
    "hanej": "Thank you @sameersbn and @SolidNerd for your hard work on this image.  It's greatly appreciated.\n. In my view, the primary responsibility of GitLab, and by extension this Docker image, is to provide a stable environment for a centralized git repository.  Anything else is extra.  I would much rather have a reliable image of GitLab that works well than try to add something else in that may not be quite ready yet.\nFrom what I've read, the GitLab Docker registry still needs some improvement as it requires Docker-in-Docker running in privileged mode.  That's not the way I want to operate.  As an administrator who needs GitLab to be reliable for the entire company's source code, I would much go with Option 1 and wait a little longer until the kinks get worked out.\n. @mgansler Your docker container has to run in privileged mode if you're using dind and GitLab runners\n\nNotice that it's using the privileged mode to start the build and service containers. If you want to use docker-in-docker mode, you always have to use privileged = true in your Docker containers.\n\nhttp://docs.gitlab.com/ce/ci/docker/using_docker_build.html\n. See also https://gitlab.com/gitlab-org/gitlab-ce/issues/17769\n. If you're using docker-compose to set this environment variable, you have to escape the ' character in YAML.  The way to escape the ' character in YAML is to double it.  So if your LDAP password is pass'word then you should put pass''word in your YAML file.. Those variables are for EE only. ",
    "robertoamoreno": "Also would be handy to have S3  Backend ENV for Registry\n. ",
    "athieriot": "Gitlab doesn't seem to support S3 for Docker Registry at the moment :( It needs the filesystem path to the image storage\n. Where I am we need support for S3 storage anyway so I won't user Gitlab Registry just yet. Happy with both options if hopefully we see the feature released in the future :)\n. ",
    "nachokb": "@mgansler please... what was it?\n. @sameersbn given that upstream guys didn't even announce the registry until AFTER release, I would say there are many things still being decided, so I would also prefer option 1...\n. I'm interested in this as well. ",
    "bharrisau": "Seems like GitLab has separated the registry from the http proxy. You\nshould be able to disable the omnibus registry and point the url to another\ndocker container.\nLooks like it is just the TLS setup between registry and gitlab that is\ntricky.\n. ",
    "ShakataGaNai": "Personally, I really want the registry integration. That was supremely exciting to me. However if getting the registry out the door \"today\" means a possibly not great setup that could potentially break people and/or break on upgrade, then I'd say wait on that portion. So Option 1 seems like the logical choice.\n. ",
    "fheusel": "Could this please be merged @sameersbn? \n. ",
    "CrystalMethod": ":+1::+1:. Ok, https://gitlab.com/help/user/project/container_registry clearifies some details, in particular\nGitLab supports up to three levels of image repository names.\nAnd there is an upcoming change: https://gitlab.com/gitlab-org/gitlab-ce/issues/30651. The DinD service seems to be the cause of this error. Removing the service dependency results in a successful job. Will close this ticket.. Some off-topic question: Any reason to switch from ARG to ENV? \n-ARG DOCKER_ENGINE_VERSION=17.05.0-r0\n-ARG DOCKER_MACHINE_VERSION=0.12.0\n+ENV DOCKER_ENGINE_VERSION=17.05.0-r0\n+ENV DOCKER_MACHINE_VERSION=0.14.0\nBecause I noticed some difficulties when using build args on Synology. It was simply impossible to directly use build args. I always have to write something like\nARG FOO_VERSION\nENV FOO_VERSION=$FOO_VERSION\nto work with build args - which is not so nice.. Currently I'm using something like the following and what works well:\nLDAP_UID=uid\nLDAP_USER_FILTER=(memberOf=cn=gitlab,cn=groups,dc=foo,dc=bar)\n. Try adding something like the following to the gitlab (+postgres/redis) service to get the console log back.\nlogging:\n      driver: json-file\n      options:\n        max-size: \"10m\"\nOr try to \"fix\" it in the docker daemon config.\nOutput of: docker info \n...\nLogging Driver: db\n...\n. 10.5.0 doesn't made to Docker Hub!?. Are you using 10.7.2? This version runs fine for me after upgrading from 10.6.4.. Thx.. #1781 ... my guess. @ma0dubois can you login to your registry using the docker cli? Since 1-2 weeks I have a very similar error. The combination of Gitlab, Registry and Traefik went well over at least 1 year and currently I don't know what the cause is.\n$ echo ${CI_REGISTRY_PASS} | docker login -u ${CI_REGISTRY_USER} --password-stdin ${CI_REGISTRY}\nError response from daemon: Get https://registry.***.com/v2/: received unexpected HTTP status: 500 Internal Server Error\ndocker login registry.***.com                                                                                                                                                                                                   \nAuthenticating with existing credentials...\nLogin did not succeed, error: Error response from daemon: Get https://registry.***.com/v2/: received unexpected HTTP status: 500 Internal Server Error\nUsername (***): ***\nPassword:\nError response from daemon: Get https://registry.***.com/v2/: received unexpected HTTP status: 500 Internal Server Error\n. awesome work. Yes, I have looked at the docs briefly and I like them too. But what delights me the most is that your PR includes some very old PRs that I've missed for a long time.  (mainly LDAP) So I can only hope that this PR will pass through and serve as a \"new basis\" for the project. We have been using this container for quite some time and are very happy with it.. ",
    "snorremd": "You can follow pull request #697  for 8.0.0 to see the progress. It will be available once people have tested a docker build of 8.8.2.\n. ",
    "cloudlady911": "Ah, thanks for that insight!  I converted it myself and I am up and running!\n. I have this behind a load balancer so that my users can access the GUI over port 80.  How do I change the settings so that the signup emails don't have the 10080 port listed.\n. ",
    "cbornet": ":+1:  Due to this the Jenkins Gitlab plugin doesn't work. ",
    "baryshev": "Official docker container also can be fully configured with environment variable like this:\nenvironment:\n      GITLAB_OMNIBUS_CONFIG: |\n        external_url = \"https://gitlab.exmplae.com\"\n        nginx['proxy_set_headers'] = {\n          \"X-Forwarded-Proto\" => \"https\",\n          \"X-Forwarded-Ssl\" => \"on\"\n        }\n. ",
    "thewilli": "@sameersbn great, thank you for clarification :smiley:\n. ",
    "cvle": "Thanks! I got it setup using your instructions and in my case, it was straight forward!\n. ",
    "toch": "thanks a lot @SolidNerd for that great work. I successfully deployed it yesterday (option 1 of your gisted doc).\n. ",
    "mhf-ir": ":+1:  solved. thankyou\n. This is redirect entire request to https.\nmy mean is normal users and developers sign in to gitlab panel force use https. also i have some clients (applications and bots) need to get raw content of my public repositories via http [no redirect them to https].\n. ",
    "thynson": "+1\n. ",
    "khusnetdinov": "I've read docs in ci and gitlab and can't see right way. I need token and url for ci registration in gitlab. But how I can specify it on parallel start gitlab and ci? I have not found PARAMS in docs.\n. @solidnerd Thanks!. ",
    "pvinis": "http.\n. here it is:\nhttp://pastebin.com/jYZsg7zP\n. 1.11.1\n. docker info here\nhttp://pastebin.com/1xr7KcRk\n. its also messing with my ssh, because i ssh to my server like ssh pvin.is, and now its not working anymore, because it tries to ssh to gitlab.\ndo i have to setup a proxy or something?\n. no idea?\n. for ssh, i did it with a different port. ok i will try a proxy and get back to you. i have to figure out how to do that.\n. ",
    "patrickc91": "Your Gitlab configuration looks okay to me. I'm not an expert in this stuff or anything, but it seems like the issue would be in your Reverse Proxy.\nI run this Gitlab image behind an Nginx Reverse Proxy and the only things required to get HTTPS working for me were:\nSet GITLAB_HTTPS=true\nSet GITLAB_PORT=443\nThen some settings that are probably specific to the Reverse Proxy I'm using:\nExpose Port 443\nexpose:\n - \"443\"\nAnd provide an environment variable for the RP\nVIRTUAL_HOST=git.mydomain.com\nHere's an example of my fully working docker-compose.yml if it's helpful at all. Scroll all the way down.\nOf course I also have SSL enabled in my RP and my certs placed in the appropriate place.\n. @xflash Did you ever get this figured out? If so, we should close this issue. Otherwise I'm happy to try my best and help.\n. Whoops, I only provided the actual version of GitLab I'm running, not the tag I'm using. I am using the 8.8.5-1 image.\nCurrently have all 4 images that make up my functioning GitLab setup running alongside my reverse proxy image, all on the same host. It took me a little while to get it all working through HTTPS with the self signed certificate, but I finally did. I just really can't seem to get it working with a CA trusted certificate.\nMaybe I should try setting this all up without the reverse proxy first? Then try to add the proxy later.\n. Alright. I'll give it a go today without a reverse proxy and utilizing a Let's Encrypt certificate. I've been wanting to try out using a Let's Encrypt certificate for something anyway!\n. @SolidNerd Hey, would you mind explaining more about the Certificate needed for REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE? I believe this is where my problem lies. My registry only seems to work when I have a self-signed certificate provided for this variable and the GITLAB_REGISTRY_KEY_PATH variable.\nIf I request a new Trusted Certificate, I'm not positive what FQDN to provide or anything like that. It doesn't seem to work with my wildcard certificate as explained previously *.mydomain.com, so I'm assuming I need a different certificate.\nGitlab - https://gitdev.mydomain.com\nRegistry - https://registry.mydomain.com\nSelf-signed Certificate - Works\nWild-card Certificate - Fails\n. After a lot of messing around with various configurations and different certificates, I've resolved the issue. Sadly...I don't know exactly what I did that fixed the problem.\nI believe the issues were with my SSL Certificate though. I didn't have the intermediate/root .crt combined with my actual wildcard .crt, so the SSL chain wasn't complete and failed to verify. Once I combined the two .crt's into a single file and attached it to my Nginx Reverse Proxy and the Gitlab image itself, I stopped getting:\n Error response from daemon: Get https://registry.precoa.com/v1/users/: x509: certificate signed by unknown authority when using a docker daemon without the --insecure-registry flag set.\nAs for the 500 error...I assume it was related to my certificate error. It just sort of resolved itself once I figured out the SSL certificate. Here is my final, working .yml file if anyone is interested. This is all running behind jwilder's Nginx proxy with a wildcard SSL certificate in place for TLS support. \nThe certificate used for authorization between GitLab and the registry is a self signed certificate I made following the instructions in the documentation and is stored in /auth-certs. The wildcard SSL certificate is found in /certs.\n```\ngitlab:\n build: ./gitlab\n container_name: gitlab\n restart: always\n links:\n  - redis:redisio\n  - postgresql:postgresql\nports:\n  - \"10022:22\"\nenvironment:\n  - VIRTUAL_HOST=git.mydomain.com\n\nGITLAB_HTTPS=true\nNGINX_X_FORWARDED_PROTO=https\n\nGITLAB_GRAVATAR_HTTP_URL=https://secure.gravatar.com/avatar/%{hash}?s=%{size}&d=identicon\n\n\nTZ=America/Los_Angeles\n\n\nGITLAB_TIMEZONE=America/Los_Angeles\n\n\nGITLAB_SECRETS_DB_KEY_BASE=\n\n\nGITLAB_HOST=git.mydomain.com\n\nGITLAB_PORT=443\n\nGITLAB_SSH_PORT=10022\n\n\nGITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n\n\nGITLAB_NOTIFY_PUSHER=false\n\n\nGITLAB_EMAIL=gitlab@mydomain.com\n\nGITLAB_EMAIL_REPLY_TO=noreply@mydomain.com\n\nGITLAB_INCOMING_EMAIL_ADDRESS=reply@mydomain.com\n\n\nGITLAB_BACKUPS=daily\n\n\nGITLAB_BACKUP_TIME=01:00\n\n\nSMTP_ENABLED=true\n\nSMTP_DOMAIN=\nSMTP_HOST=\n\nSMTP_PORT=25\n\n\nIMAP_ENABLED=false\n\n\nGITLAB_PROJECTS_ISSUES=false\n\nGITLAB_PROJECTS_WIKI=false\nGITLAB_PROJECTS_MERGE_REQUESTS=false\n\nGITLAB_PROJECTS_CONTAINER_REGISTRY=true\n\n\nGITLAB_REGISTRY_ENABLED=true\n\nGITLAB_REGISTRY_HOST=registry.mydomain.com\nGITLAB_REGISTRY_ISSUER=gitlab-issuer\nGITLAB_REGISTRY_API_URL=http://registry.mydomain.com\nGITLAB_REGISTRY_KEY_PATH=/auth-certs/registry-auth.key\nSSL_REGISTRY_KEY_PATH=/certs/mydomain.com.key\n\nSSL_REGISTRY_CERT_PATH=/certs/mydomain.com.crt\n\n\nLDAP_ENABLED=true\n\nLDAP_LABEL==\nLDAP_HOST=\nLDAP_PORT=\nLDAP_UID=\nLDAP_BIND_DN=\nLDAP_PASS=\nLDAP_METHOD=plain\nLDAP_BASE=\nLDAP_ACTIVE_DIRECTORY=true\nLDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n\nvolumes:\n  - gitlab_data:/home/git/data:Z\n  - gl_registry:/home/git/data/shared/registry:z\n  - ./certs:/certs\n  - ./auth-certs:/auth-certs\nexpose:\n  - \"80\"\n  - \"22\"\n  - \"443\"\n  - \"10022\"\nregistry:\n build: ./registry\n container_name: gl_registry\n restart: always\n volumes:\n  - gl_registry:/registry:z\n  - ./certs:/certs\n  - ./auth-certs:/auth-certs\nenvironment:\n  - VIRTUAL_HOST=registry.mydomain.com\n  - REGISTRY_LOG_LEVEL=info\n  - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n  - REGISTRY_AUTH_TOKEN_REALM=https://git.mydomain.com/jwt/auth\n  - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n  - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n  - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/auth-certs/registry-auth.crt\n  - REGISTRY_STORAGE_DELETE_ENABLED=true\n  - REGISTRY_HTTP_ADDR=:80\n  - REGISTRY_HTTP_HOST=https://registry.mydomain.com\n  - REGISTRY_HTTP_TLS_CERTFICATE=/certs/mydomain.com.crt\n  - REGISTRY_HTTP_TLS_KEY=/certs/mydomain.com.key\nexpose:\n  - \"80\"\n  - \"443\"\nredis:\n image: sameersbn/redis:latest\n container_name: gl_redis\n restart: always\n volumes:\n  - gitlab_redis_data:/var/lib/redis\npostgresql:\n image: sameersbn/postgresql:latest\n container_name: gl_postgresql\n restart: always\n environment:\n  - DB_USER=\n  - DB_PASS=\n  - DB_NAME=\n  - DB_EXTENSION=pg_trgm\n volumes:\n  - gitlab_db:/var/lib/postgresql\n```\n. Did you ever get this figured out @mahzoun? I believe what SolidNerd was saying is that you shouldn't be making changes anywhere in the file structure of the container at all. \nYou simply need to use the environment variable SMTP_PASS in your docker run... statement or in your docker-compose.yml if you're using Docker Compose (which I recommend).\n~/.profile should have nothing to do with setting your SMTP password as far as I know.\n. Well this issue wasn't resolved, but I've just installed the Slack Jenkins Plugin and converted to using Jenkins to communicate all failed build information.\nI guess it makes sense anyway since the builds are running on Jenkins and simply reporting the status back to Gitlab.\nI still believe there is a bug in Gitlab (and probably more specifically in this distribution) that prevents the build fail trigger to fire. I haven't tested it using Gitlab CI to run builds though, so perhaps someone else can confirm or deny.\n. @hsitaa Did you ever get this issue resolved?\n. I've personally had great luck with jwilder's Reverse Nginx Proxy. I know I've seen others around here use haproxy.\n. I'm not sure if this is a great solution, but I too had this problem and I found that some of my data directories had odd permissions. Some directories were owned by root and others were owned by git. By going in and changing the owner of the directories to the git user I was able to resolve this issue. I believe there were one or two folders that had weird permissions that I ended up fixing as well.\nThese permissions issues were causing the inability to fork and import projects and the inability to change the Avatar image for some repositories and users.\n. @QuickJack That's exactly where I'm talking about. For some reason we were having issues with those personal project folders being created and owned by root, causing permission errors for the git user. I would highly recommend listening to @sameersbn though. If I had known about that sooner, I would have tried it out before using chown/chmod.\n. You shouldn't have to use docker-compose exec to run code inside a running container.\nJust a simple docker exec gitlab /sbin/entrypoint.sh app:sanitize does the trick for me. I would give it a shot without -compose and see if it works out for you.\n. @mikew That's true, and something I didn't really think about as I've gotten into the habit of naming my \"constant\" containers. I do a lot of development on a Windows machine though, so docker-compose exec doesn't allow you to see the output of your command. You're required to use -d and I've yet to see how I can get the output of commands run with docker-compose exec.\nI did test the docker-compose exec version in my Linux environment and it works.\n. > The cause of the issue is probably caused by the user running chown or moving the data directory which caused the ownerships and permissions to change.\nThis is exactly what I did I believe. When I first set up my Gitlab instance, I had no experience with Docker or Gitlab or anything related to my current setup. So I ended up moving things between a couple of servers without doing the proper backup/restore rake tasks, which caused some weird permissions problems.\n. @Ilya-Kuchaev They both mentioned they were computer-less until sometime this week. One of them said they might be near a computer on Wednesday though.. I recently needed to get a runner up and going and switched over to this one: https://github.com/digitalLumberjack/docker-gitlab-ci-multi-runner\nI believe there's a PR in the sameersbn/gitlab-ci-mutli-runner repository to merge digitalLumberjack's changes. But it just never got done.. That was it! Thanks for pointing this out. I need to be better about checking issues on the actual Gitlab board too.\nEverything seems to be working again. Thanks for your guys' help!. ",
    "danielbecker": "Unfortunately this is still an issue. Please fix.. ",
    "apertureless": "Any update on this?\n. ",
    "ostueker": "\nPLEASE NOTE: keeping .authorized_keys world-readable brings a security risk. Use this method with discretion.\n\nIs it? Your public SSH key is already public on GitHub: https://github.com/IlyaSemenov.keys\n(and so are mine and everyone else's).\n. ",
    "MeinAccount": "@lenovouser world-readable is not world-writeable\nOr am I missing something?\n. ",
    "MichaelEischer": "I think this method of forwarding the git ssh access allows for a full container host compromise from inside the gitlab container!\nThe security of this approach relies on the fact that users logging in via ssh can't execute arbitrary commands. However, this only holds as long as Gitlab is creating a proper authorized_keys file that includes a command attribute for each key. This might not be the case if Gitlab had a security issue allowing for arbitrary file creation.\nOnce the command attribute is missing, its possible to login as the git user and run arbitrary docker commands, which is equivalent to root access on the container host!\nMy current workaround for this is to chain two ssh connections. The git user on the container host uses the authorized_keys file from gitlab, but also has its own key-pair that is used to forward the connection to the gitlab container's ssh. The container then uses a suitable sshd_config to force use of a handcrafted authorized_keys file that allows the host git user to connect. In case there's interest in my solution, I can write a detailed tutorial for it.. sudo is in fact able to handle wildcard arguments. This might look like the following /etc/sudoers entry:\nexample ALL = (root) NOPASSWD: /usr/bin/docker image *\nThis will allow the example user to run commands like sudo docker image ls or sudo docker image ls --quiet, while ensuring that image and at least one parameter is present. Passing data via environment variables should also be possible, but requires whitelisting of the used environment variables (sudo sanitizes the environment to prevent privileged applications from getting confused).. @IlyaSemenov Thanks for the update. Btw, the recent gitlab security vulnerability (https://about.gitlab.com/2017/08/10/gitlab-9-dot-4-dot-4-released/) should be enough to allow an attacker to insert arbitrary authorized_key commands. With the git user belonging to the docker group this could then be used for a root privilege escalation on the host.\n@mikebentley15 I've finally got around to writing a short description for using gitlab with chained ssh. However, the description got much longer than I'd anticipated even though it could use some additional details. https://gist.github.com/MichaelEischer/fec2ddf1267e3caca796813340044552\nI'm currently not sure whether my solution with chained ssh is better/more secure than just using docker exec.. This is a docker problem:\nIt seems like docker has problems to create the overlay filesystem when using xfs, ext4 seems to work. See https://github.com/moby/moby/issues/10294 for details.. The guide is written with this alternate gitlab docker container in mind. That said, the primary different to the omnibus docker container is probably just different paths. The path on the host must match the path to gitlab-shell inside the container, thus using /var/opt/gitlab/gitlab-shell/bin should work.\nI'm, however, not sure which uid/gid for the git user is used by the omnibus docker container. As the host machine should ideally use the same uid/gid for its git user, this may cause further problems.. ",
    "mikebentley15": "I'd be interested in such a tutorial of how to chain the two ssh servers.  Do you have it automated so that when I use the git user, it transparently connects to the docker container?. ",
    "gunr2171": "Same problem here. When using the docker gitlab runner and uploading artifacts I got these errors:\nUploading artifacts...\nnames.txt: found 1 matching files                  \nWARNING: Uploading artifacts to coordinator... failed  id=1386 responseStatus=500 Internal Server Error status=500 Internal Server Error token=whsTSMJM\nWARNING: Retrying...                               \nWARNING: Uploading artifacts to coordinator... failed  id=1386 responseStatus=500 Internal Server Error status=500 Internal Server Error token=whsTSMJM\nWARNING: Retrying...                               \nWARNING: Uploading artifacts to coordinator... failed  id=1386 responseStatus=500 Internal Server Error status=500 Internal Server Error token=whsTSMJM\nFATAL: invalid argument                            \nERROR: Job failed: exit code 1\nI then exec'd into the main Gitlab container and ran these commands:\ncd /home/git/gitlab/shared\nchown -R git:git artifacts/\nThat might have been overkill, but at least artifacts will upload now:\nUploading artifacts...\nnames.txt: found 1 matching files                  \nUploading artifacts to coordinator... ok            id=1387 responseStatus=201 Created token=hzLJQtxw\nJob succeeded\nI am running Gitlab 11.3.0, Gitlab runner gitlab/gitlab-runner:alpine-v11.3.0.. It seems that this change went public, however it's only on the \"latest\" tag. Could you make a 8.10.2-1 tag so that I can keep using explicit version numbers in my docker-compose file?\n\n. The 8.10.2-1 tag fixes the error for me. Thanks for the quick turn around.\nJust a note, the other files on this repository haven't been updated for the new tag (the main readme, docker-compose example, kubernetes, etc).\n. ",
    "marthjod": "Thank you so much for the analysis! We ran into the same problem and were able to fix it by chmod -R git:git /home/git/data/shared/artifacts/tmp which belonged to root.. ",
    "jvdgeest": "Well done @SolidNerd! Looks like an easy upgrade with one new cronjob.\n. ",
    "pezzak": "GITLAB_REGISTRY_HOST is set like a docker.abcdef.ru, this issue occurs if i start container on kvm host:\n\nroot@1ab02093a3cc:/etc/nginx/sites-enabled# lscpu\nArchitecture:          x86_64\nCPU op-mode(s):        32-bit, 64-bit\nByte Order:            Little Endian\nCPU(s):                4\nOn-line CPU(s) list:   0-3\nThread(s) per core:    1\nCore(s) per socket:    1\nSocket(s):             4\nNUMA node(s):          1\nVendor ID:             GenuineIntel\nCPU family:            6\nModel:                 2\nStepping:              3\nCPU MHz:               3392.292\nBogoMIPS:              6784.58\nHypervisor vendor:     KVM\nVirtualization type:   full\nL1d cache:             32K\nL1i cache:             32K\nL2 cache:              4096K\nNUMA node0 CPU(s):     0-3\n\nif i start container on bare metal server everything works well\n. ",
    "rmartinez3": "I noticed that the docker compose provided is missing gitlab registry issuer under gitalb configuration. After adding GITLAB_REGISTRY_ISSUER=gitlab-issuer. Which has to be the same as REGISTRY_AUTH_TOKEN_ISSUER in the registry config.\nAlso if you are using the same docker compose file. Make sure to have the correct port set for registry auth token realm\nREGISTRY_AUTH_TOKEN_REALM=http://gitlab.example.com:10080/jwt/auth\nThanks for the document that you made. It help me clear things up.\n. ",
    "ntrifunovic": "@ziirish: Your temp fix seems to be working. Thanks!\n. ",
    "kasperrt": "I've added my custom gems now, but on the command\nexec_as_git bundle exec rake assets:clean assets:precompile --trace USE_DB=false >/dev/null\nI get this error: \n** Invoke assets:clean (first_time)\n** Invoke assets:environment (first_time)\n** Execute assets:environment\n** Invoke environment (first_time)\n** Execute environment\nrake aborted!\nNameError: uninitialized constant Haml\n/home/git/gitlab/config/initializers/haml.rb:1:in `<top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/engine.rb:652:in `block in load_config_initializer'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/activesupport-4.2.6/lib/active_support/notifications.rb:166:in `instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/engine.rb:651:in `load_config_initializer'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/engine.rb:616:in `block (2 levels) in <class:Engine>'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/engine.rb:615:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/engine.rb:615:in `block in <class:Engine>'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/initializable.rb:30:in `instance_exec'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/initializable.rb:30:in `run'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/initializable.rb:55:in `block in run_initializers'\n/usr/lib/ruby/2.1.0/tsort.rb:226:in `block in tsort_each'\n/usr/lib/ruby/2.1.0/tsort.rb:348:in `block (2 levels) in each_strongly_connected_component'\n/usr/lib/ruby/2.1.0/tsort.rb:418:in `block (2 levels) in each_strongly_connected_component_from'\n/usr/lib/ruby/2.1.0/tsort.rb:427:in `each_strongly_connected_component_from'\n/usr/lib/ruby/2.1.0/tsort.rb:417:in `block in each_strongly_connected_component_from'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/initializable.rb:44:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/initializable.rb:44:in `tsort_each_child'\n/usr/lib/ruby/2.1.0/tsort.rb:411:in `call'\n/usr/lib/ruby/2.1.0/tsort.rb:411:in `each_strongly_connected_component_from'\n/usr/lib/ruby/2.1.0/tsort.rb:347:in `block in each_strongly_connected_component'\n/usr/lib/ruby/2.1.0/tsort.rb:345:in `each'\n/usr/lib/ruby/2.1.0/tsort.rb:345:in `call'\n/usr/lib/ruby/2.1.0/tsort.rb:345:in `each_strongly_connected_component'\n/usr/lib/ruby/2.1.0/tsort.rb:224:in `tsort_each'\n/usr/lib/ruby/2.1.0/tsort.rb:205:in `tsort_each'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/initializable.rb:54:in `run_initializers'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/application.rb:352:in `initialize!'\n/home/git/gitlab/config/environment.rb:5:in `<top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/application.rb:328:in `require_environment!'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/railties-4.2.6/lib/rails/application.rb:457:in `block in run_tasks_blocks'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:240:in `call'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:240:in `block in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:235:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:235:in `execute'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:179:in `block in invoke_with_call_chain'\n/usr/lib/ruby/2.1.0/monitor.rb:211:in `mon_synchronize'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:165:in `invoke'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/sprockets-rails-3.0.4/lib/sprockets/rails/task.rb:62:in `block (2 levels) in define'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:240:in `call'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:240:in `block in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:235:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:235:in `execute'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:179:in `block in invoke_with_call_chain'\n/usr/lib/ruby/2.1.0/monitor.rb:211:in `mon_synchronize'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:199:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain'\n/usr/lib/ruby/2.1.0/monitor.rb:211:in `mon_synchronize'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/task.rb:165:in `invoke'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/application.rb:150:in `invoke_task'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/application.rb:106:in `block (2 levels) in top_level'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/application.rb:106:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/application.rb:115:in `run_with_threads'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/application.rb:100:in `top_level'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/application.rb:78:in `block in run'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/application.rb:176:in `standard_exception_handling'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/lib/rake/application.rb:75:in `run'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/gems/rake-10.5.0/bin/rake:33:in `<top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/bin/rake:23:in `load'\n/home/git/gitlab/vendor/bundle/ruby/2.1.0/bin/rake:23:in `<main>'\nTasks: TOP => environment\nINFO[0276] The command [/bin/sh -c bash ${GITLAB_BUILD_DIR}/install.sh] returned a non-zero code: 1\nAny clue on how to fix this?\n. ",
    "yknext": "Thanks for help @SolidNerd \n. @avluis i am try to remove domain.tld portion ,but now working . ",
    "octhreelara": "Yes, my restore command include exactly sameersbn/gitlab:8.7.5 and backup was a 8.7.5. But after success restoring and \nedit docker-compose.yml (string sameersbn/gitlab:8.9.1 to sameersbn/gitlab:8.7.5)\nthen\ndocker-compose up \nand I get this error again. What is my step wrong?\n. Yes, i remove container. Which related volume? \nvolumes:\n    -  /srv/docker/gitlab/postgresql:/var/lib/postgresql:Z\nThis?\n. Thanks! i try!\n. It was necessary to delete all data in all volumes. And then restore. Then start with old version(8.7.5). It works!!! Thanks!\n. ",
    "nsymms": "I had this problem with earlier versions, and what worked for me was to do the restore into a completely empty and new installation of the older gitlab. I'm not sure if it's redis or something in the gitlab data tree, but somewhere it remembers which version you're on and prevents going backwards.\nedit: correct issue. my browser is messing up.  sorry for confusion.\n. If I may offer a couple of items to this PR just to make sure we're correcting the grammar without creating new issues...\n- I'm sure it's an oversight, but on line 520 you've left out out the word \"have\". Actually IMHO there is nothing wrong with the original sentence. It's a little awkward and needs a capital 'Y', but that's all.\n- Line 500 should have an article before \"SSL certificate\". It should be \"an SSL certificate\" (or 'a' -- there's probably room for debate).\nAnd sorry if I didn't do this properly. I'm not sure if I'm supposed to make a pull request of a pull request or how that works.\n. Sorry I missed that one. Done.\n. Crap. Hit the wrong button. Sorry.\n. The \"Connect Failed\" error is a known problem with Gitlab since v11 (I think). I can't find the reference right now, but the basic problem is that gitaly needs to be running or else you get the \"Connect Failed\" message. And gitaly isn't started if you're just doing backups. I guess it wasn't needed before??\nThe workaround I've used for this container is:\n```\n$ docker-compose exec gitlab bash\n/sbin/entrypoint.sh app:rake gitlab:backup:create\n```\nThis runs a backup on the live gitlab, which may cause problems if it's very active. I assume the scheduled backups still work fine; I haven't seen issues reported for those.\nFor reference, see related issue #1655.. No problems with my docker pull. Maybe you tried too early? 11.5.5 was only pushed out a few hours ago.\nHave you tried it again?\n\nEdit: Oops. I take that back. I can't get 11.5.5 either. It was 11.5.4 that I just pulled. I've had this problem before and it's usually because the image is not yet available on the docker hub servers.\n. ",
    "tenken": "@frol just an fyi. 16.04 LTS does not automatically recommend update from 14.04 LTS until the .1 release which is likely sometime this month, July 2016 I believe. 16.04 while released is still not considered \"stable\" to upgrade from 14.04 until the OS itself recommends the upgrade automatically.\n. I'm on sameersb/gitlab:8.6.2 and I've noticed for a while I get 2 backups daily. I wonder if it's related to this behavior. I will try to send you the cron.log later today.\n\nGITLAB_BACKUP_EXPIRY       259200\nGITLAB_BACKUP_DIR          /home/git/data/backups\nGITLAB_BACKUP_TIME         06:00\nGITLAB_BACKUP_SCHEDULE     daily\n\n. Is there any further info I can provide?\n\n# uname -a; pwd; ls -lah\nLinux synology_gitlab 3.10.77 #7393 SMP Thu Jun 2 19:50:12 CST 2016 x86_64 x86_64 x86_64 GNU/Linux\n/var/log/gitlab/supervisor\ntotal 280K\ndrwxr-xr-x 2 root root 4.0K Jul 21 06:26 .\ndrwxr-xr-x 6 root root 4.0K May 31 03:58 ..\n-rwxr-xr-x 1 root root    0 May 31 03:58 cron.log\n-rwxr-xr-x 1 root root    0 May 31 03:58 nginx.log\n-rwxr-xr-x 1 root root    0 Jun 12 06:26 sidekiq.log\n-rwxr-xr-x 1 root root  760 Jun 12 06:26 sidekiq.log.1\n-rwxr-xr-x 1 root root  17K Aug  3 12:07 sshd.log\n-rwxr-xr-x 1 root root  30K Jul 21 06:26 sshd.log.1\n-rwxr-xr-x 1 root root  863 Jun 12 06:26 sshd.log.2.gz\n-rwxr-xr-x 1 root root  49K Aug  3 12:07 supervisord.log\n-rwxr-xr-x 1 root root 141K Jul 21 06:26 supervisord.log.1\n-rwxr-xr-x 1 root root 6.2K Jun 12 06:26 supervisord.log.2.gz\n-rwxr-xr-x 1 root root    0 May 31 03:58 unicorn.log\n\nNone of my cron.log files have data in them.\nIf I look at crontab for user git I see a ton of things; which looks like stuff isn't being cleaned up or set properly:\n\n# crontab -l -u git\n15 13 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n30 13 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n30 13 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n30 13 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n30 13 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n30 13 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 06 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n\n. ",
    "lethe3000": "thanks very much, close now.\n. ",
    "stuwil": "Saw that, nice timing! ;)\nLet me know if you need any changes please.\n. ",
    "medokin": "Oh, someone was faster. \nAnyway, we have already upgraded for security reasons.\n. Gitlab has a rapid release cycle. Every month on 22. they release a new version. \n\n(current is 8.16)\n\nThey ship always a buggy version that gets 3+ patches every cycle.\n\n(8.15 had 4 patches)\n\nSecurity patches are mostly available for the last 3 releases. \n\n(down to 8.13)\n\nThe most \"stable\" version is (8.15.4) from last month. If you take this as LTS it would be safe and supported only for two months.  That is not enough to benefit from.\nWe update our instance once a month to the latest release from last month and it takes 5 min. We had no upgrade pain since we're doing it.\n\nAs an example, when 8.16 is released, we update to 8.15.4.\n\nI can only encourage to do the same.\n. You're right, but that happened only once last year, in that case we updated to current.. ",
    "Trefex": "Hi @SolidNerd that's what i do right, so from outside I do https://ip:30000, and if i connect to the docker instance with -it, and do ss -lunt, i can only see ports listening on 80 and 22. However, all documentations I saw said to change the external port mapping from 30000->80 to 30000->443. If I use the former it will say, can't serve SSL content. If I use the latter, it can't connect.\nNot sure what's wrong :(\n. I do that too of course. But SSL still doesn't work. I put certificates of course in right place.\n. Any update on this?. I figured it out.\nAfter setting the variables, i manually enter the docker container and run /sbin/entrypoint.sh app:init and then it worked !. ",
    "helt": "maybe publish 443 ?\nanyways, @Trefex do you use the gitlab package by synology, or did you set up gitlab yourself?\n. maybe publish 443 ?\nanyways, @Trefex do you use the gitlab package by synology, or did you set up gitlab yourself?\n. ",
    "pilla": "I have the same issue, sameersbn/gitlab:8.15.2. I have run a bash shell inside the container and verified that GITLAB_HTTPS=true. netstat inside the container says that port 80 is open (the HTTP server is working) but there is no mention to 443. . Actually  I have forwarding working all right, the problem is that some elements of served pages have links such as https://myhostname:10080/alink instead of the desired https://myhostname/alink. That breaks those elements. Avatars are a good example.\nThe relative_url option should fix it.\n(I am the OP).. @silenaker , you are correct! I was so focused on external_url from Gitlab's docs that I let that possibility aside... thanks, please somebody close this issue.. Did anybody get the restore process to work? edit: nevermind, finally got it working.. Aditional logs from docker-compose events:\ngitlab_1      | Installing configuration templates...\ngitlab_1      | SSL Key, SSL Certificate and DHParam were not found.\ngitlab_1      | Assuming that the container is running behind a HTTPS enabled load balancer.\ngitlab_1      | Configuring gitlab...\ngitlab_1      | Configuring gitlab::database\ngitlab_1      | Configuring gitlab::redis\ngitlab_1      | Configuring gitlab::secrets...\ngitlab_1      | Configuring gitlab::sidekiq...\ngitlab_1      | Configuring gitlab::gitaly...\ngitlab_1      | Configuring gitlab::monitoring...\ngitlab_1      | Configuring gitlab::gitlab-workhorse...\ngitlab_1      | Configuring gitlab::unicorn...\ngitlab_1      | Configuring gitlab::timezone...\ngitlab_1      | Configuring gitlab::rack_attack...\ngitlab_1      | Configuring gitlab::ci...\ngitlab_1      | Configuring gitlab::artifacts...\ngitlab_1      | Configuring gitlab::lfs...\ngitlab_1      | Configuring gitlab::uploads...\ngitlab_1      | Configuring gitlab::mattermost...\ngitlab_1      | Configuring gitlab::project_features...\ngitlab_1      | Configuring gitlab::smtp_settings...\ngitlab_1      | Configuring gitlab::incoming_email...\ngitlab_1      | Configuring gitlab::oauth...\ngitlab_1      | Configuring gitlab::ldap...\ngitlab_1      | Configuring gitlab::cron_jobs...\ngitlab_1      | Configuring gitlab::backups...\ngitlab_1      | Configuring gitlab::backups::schedule...\ngitlab_1      | Configuring gitlab::registry...\ngitlab_1      | Configuring gitlab::pages...\ngitlab_1      | Configuring gitlab-shell...\ngitlab_1      | Configuring nginx...\ngitlab_1      | Configuring nginx::gitlab...\ngitlab_1      | Configuring nginx::gitlab::hsts...\ngitlab_1      | 2018-09-05 18:13:28,022 CRIT Supervisor running as root (no user in config file)\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/gitaly.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/gitlab-workhorse.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/mail_room.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\ngitlab_1      | /sbin/entrypoint.sh: line 16:   602 Terminated              /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf\ngitlab_1      | 2018-09-05 18:13:28,194 CRIT Supervisor running as root (no user in config file)\ngitlab_1      | 2018-09-05 18:13:28,194 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,194 WARN Included extra file \"/etc/supervisor/conf.d/gitaly.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,194 WARN Included extra file \"/etc/supervisor/conf.d/gitlab-workhorse.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,194 WARN Included extra file \"/etc/supervisor/conf.d/mail_room.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,194 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,195 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,195 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,195 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,205 INFO RPC interface 'supervisor' initialized\ngitlab_1      | 2018-09-05 18:13:28,205 CRIT Server 'unix_http_server' running without any HTTP authentication checking\ngitlab_1      | 2018-09-05 18:13:28,205 INFO supervisord started with pid 1\ngitlab_1      | 2018-09-05 18:13:29,208 INFO spawned: 'gitaly' with pid 619\ngitlab_1      | 2018-09-05 18:13:29,210 INFO spawned: 'sidekiq' with pid 620\ngitlab_1      | 2018-09-05 18:13:29,212 INFO spawned: 'unicorn' with pid 621\ngitlab_1      | 2018-09-05 18:13:29,215 INFO spawned: 'mail_room' with pid 622\ngitlab_1      | 2018-09-05 18:13:29,218 INFO spawned: 'gitlab-workhorse' with pid 626\ngitlab_1      | 2018-09-05 18:13:29,220 INFO spawned: 'cron' with pid 628\ngitlab_1      | 2018-09-05 18:13:29,223 INFO spawned: 'nginx' with pid 630\ngitlab_1      | 2018-09-05 18:13:29,226 INFO spawned: 'sshd' with pid 632\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: gitaly entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: mail_room entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: gitlab-workhorse entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n. Aditional logs from docker-compose events:\ngitlab_1      | Installing configuration templates...\ngitlab_1      | SSL Key, SSL Certificate and DHParam were not found.\ngitlab_1      | Assuming that the container is running behind a HTTPS enabled load balancer.\ngitlab_1      | Configuring gitlab...\ngitlab_1      | Configuring gitlab::database\ngitlab_1      | Configuring gitlab::redis\ngitlab_1      | Configuring gitlab::secrets...\ngitlab_1      | Configuring gitlab::sidekiq...\ngitlab_1      | Configuring gitlab::gitaly...\ngitlab_1      | Configuring gitlab::monitoring...\ngitlab_1      | Configuring gitlab::gitlab-workhorse...\ngitlab_1      | Configuring gitlab::unicorn...\ngitlab_1      | Configuring gitlab::timezone...\ngitlab_1      | Configuring gitlab::rack_attack...\ngitlab_1      | Configuring gitlab::ci...\ngitlab_1      | Configuring gitlab::artifacts...\ngitlab_1      | Configuring gitlab::lfs...\ngitlab_1      | Configuring gitlab::uploads...\ngitlab_1      | Configuring gitlab::mattermost...\ngitlab_1      | Configuring gitlab::project_features...\ngitlab_1      | Configuring gitlab::smtp_settings...\ngitlab_1      | Configuring gitlab::incoming_email...\ngitlab_1      | Configuring gitlab::oauth...\ngitlab_1      | Configuring gitlab::ldap...\ngitlab_1      | Configuring gitlab::cron_jobs...\ngitlab_1      | Configuring gitlab::backups...\ngitlab_1      | Configuring gitlab::backups::schedule...\ngitlab_1      | Configuring gitlab::registry...\ngitlab_1      | Configuring gitlab::pages...\ngitlab_1      | Configuring gitlab-shell...\ngitlab_1      | Configuring nginx...\ngitlab_1      | Configuring nginx::gitlab...\ngitlab_1      | Configuring nginx::gitlab::hsts...\ngitlab_1      | 2018-09-05 18:13:28,022 CRIT Supervisor running as root (no user in config file)\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/gitaly.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/gitlab-workhorse.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/mail_room.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,022 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\ngitlab_1      | /sbin/entrypoint.sh: line 16:   602 Terminated              /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf\ngitlab_1      | 2018-09-05 18:13:28,194 CRIT Supervisor running as root (no user in config file)\ngitlab_1      | 2018-09-05 18:13:28,194 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,194 WARN Included extra file \"/etc/supervisor/conf.d/gitaly.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,194 WARN Included extra file \"/etc/supervisor/conf.d/gitlab-workhorse.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,194 WARN Included extra file \"/etc/supervisor/conf.d/mail_room.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,194 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,195 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,195 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,195 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\ngitlab_1      | 2018-09-05 18:13:28,205 INFO RPC interface 'supervisor' initialized\ngitlab_1      | 2018-09-05 18:13:28,205 CRIT Server 'unix_http_server' running without any HTTP authentication checking\ngitlab_1      | 2018-09-05 18:13:28,205 INFO supervisord started with pid 1\ngitlab_1      | 2018-09-05 18:13:29,208 INFO spawned: 'gitaly' with pid 619\ngitlab_1      | 2018-09-05 18:13:29,210 INFO spawned: 'sidekiq' with pid 620\ngitlab_1      | 2018-09-05 18:13:29,212 INFO spawned: 'unicorn' with pid 621\ngitlab_1      | 2018-09-05 18:13:29,215 INFO spawned: 'mail_room' with pid 622\ngitlab_1      | 2018-09-05 18:13:29,218 INFO spawned: 'gitlab-workhorse' with pid 626\ngitlab_1      | 2018-09-05 18:13:29,220 INFO spawned: 'cron' with pid 628\ngitlab_1      | 2018-09-05 18:13:29,223 INFO spawned: 'nginx' with pid 630\ngitlab_1      | 2018-09-05 18:13:29,226 INFO spawned: 'sshd' with pid 632\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: gitaly entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: mail_room entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: gitlab-workhorse entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-09-05 18:13:30,531 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n. Well, there was a couple of log files with wrong permissions (root) after a rebuilt, now it is working. . Well, there was a couple of log files with wrong permissions (root) after a rebuilt, now it is working. . ",
    "hhue13": "I'm facing the same problem with the following environment settings in my compose file:\n    - GITLAB_HTTPS=true\n    - SSL_SELF_SIGNED=true\n    - GITLAB_HOST=localhost\n    - GITLAB_PORT=10443\n    - GITLAB_SSH_PORT=10022\nand the nginx.conf and /etc/nginx/sites-enabled/gitlab does not have any config entries related to SSL. Can't get port 443 into LISTEN mode.. OK .. could fix that by creating the certificates. Thought when using SSL_SELF_SIGNED the certificate would be created. Extended the container via a wrapper to generate the certificate and copy the the proper location via a custom entrypoint script which then call the /sbin/entrypoint.sh from the original container.. Thanks a lot @iamchanghyunpark for the hint! \nWhat's probably  worth mentioning is that the account need to be enabled for iMAP as well on Google at least (may on other mail providers as well). This link  - provides the required steps.. ",
    "paddy-hack": "GitLab.com actively advised against MySQL.  I have one (legacy) MySQL instance that's stuck on 9.3.9 after I got it to use utf8mb4.  Currently looking at switching that to PostgreSQL using the upstream documentation.  Seems to work mostly fine but I noticed that part of the activity info disappeared :disappointed: . The Docker image uses supervisor to start the various jobs.  The /etc/supervisor/conf.d/gitlab-workhorse.conf snippet does include the {{GITLAB_RELATIVE_URL_ROOT}} that is replaced by the value of the environment variable on startup.  In a running container the -authBackend option should be set as you expect.  You can check the supervisor snippet of a running instance and/or have a look at the ps -HAf | cat output to verify that gitlab-workhorse is indeed running with a -authBackend option that has the value of GITLAB_RELATIVE_URL_ROOT appended.\nConfirmed for 11.1.4 but this was added in a541669f36f8be8abaa774b9fcc6567056d502cd so should have been running just fine since 8.3.0.\n# Too bad you're issue didn't turn out to be cause of my current relative URL root woes :disappointed_relieved: . BTW, I just came across #699.  That would have completely addressed the situation that triggered my issue :wink: . For me, this seems to work\nsh\ndocker-compose exec gitlab su -c 'bundle exec rake gitlab:backup:create' git\nI haven't figured out yet how to restore from the backup that that generates yet :unamused: . Oops!  Sorry for not reporting back on that :flushed: \nHere's what has been working for me, since 10.8.3 at the very least, possibly also 10.7.x.\ndocker-compose exec gitlab supervisorctl stop unicorn\ndocker-compose exec gitlab supervisorctl stop sidekiq\ndocker-compose exec gitlab su -c 'bundle exec rake gitlab:backup:restore' git\ndocker-compose exec gitlab supervisorctl start sidekiq\ndocker-compose exec gitlab supervisorctl start unicorn\n. IIUC, you've tried to address a race between the kill and wait invocations, but didn't you just replace that with a race between the ps and wait invocations?\nIf so, would putting the wait in the background before the kill and then foregrounding it solve that?  Like so\nsh\nwait $SUPERVISOR_PID &\nkill -15 $SUPERVISOR_PID\nfg\nNot sure if fg can be used in the container though.\nIf using bash's wait the -n option might be useful to detect that $SUPERVISOR_PID no longer exists.. About the empirical evidence, I just had both 10.8.3 and 10.8.3-1 loop on a clean startup :unamused:.  I use docker-compose and all the containers use a bind mounted volume (with a shared parent directory).  That is to say, they use something like ./test/$containername.  The clean startup is one where the shared parent directory does not exist yet.\nAs for your theoretical analysis, I think it depends a lot on the implementation details of the shell that's in use, i.c. /bin/bash.  As for my example code, well, that's completely untested but I do put the wait in the background for a reason :smile: . > the changes do not appear to have any effect on the relative_url functionality\nAlas, you spoke too soon :cry:\nThe long story is in #1696, but if your instance is behind a proxy and not given proxy info at run-time you're hosed.  I've been banging my head against the wall for two days before I figured out what was going on :unamused:\nI do believe that an instance should not require HTTP(S) access to stuff on the other side of the proxy at run-time.. Hmm, #1628 put me on the wrong track.\nI realized that restart: always in my docker-compose.yml is most likely causing the looping so I took that out and tried again.\nThe last part of the log is\ngitlab_1      | 2018-08-06 00:58:23,528 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-08-06 00:58:23,528 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-08-06 00:58:23,528 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_gitlab_1 exited with code 1\nwhere the container exists approximately 20 seconds after the sshd line.  The unexpected exit leaves a unicorn PID file that triggers the boot loop when restart: always is in effect.  Without restart: always the boot loop disappears.\n. Slightly modifying my customized entrypoint.sh by inserting\nsh\nexecute_raketask gitlab:assets:compile\nimmediately before the case construct I got a more intelligible error message\ngitlab_1      | Running raketask gitlab:assets:compile...\ngitlab_1      | error An unexpected error occurred: \"https://registry.yarnpkg.com/co/-/co-4.6.0.tgz: getaddrinfo ENOTFOUND registry.yarnpkg.com registry.yarnpkg.com:443\".\ngitlab_1      | Error: You have unmet dependencies. (`yarn check` command failed)\ngitlab_1      | Run `yarn install` to install missing modules.\nThe getaddrinfo ENOTFOUND is a typical DNS error that I see when proxy settings are not in effect in my setup.  So I tried adding https_proxy and that seems to have fixed things for me.. I didn't quite like making my proxy settings available in the gitlab container at run-time.  You can take them out after the assets have been recompiled (at least until the next upgrade and/or change of your GITLAB_RELATIVE_URL_ROOT and/or removal of the /home/git/data/tmp/GITLAB_RELATIVE_URL_ROOT file in the container).\nThat would be one way to deal with things, but I also noticed that yarn check downloads all the dependencies in package.json.  This effectively restores (part of) the cache that got nuked in #1678 :unamused:  So yes, it's not in the image anymore, but it will be in any container that has a non-empty GITLAB_RELATIVE_URL_ROOT :disappointed: \nLooking at the yarn check documentation, I think that for the image's use case, adding an --integrity option in lib/tasks/yarn.rake would be a nice solution.  This option still checks that everything is a-okay but does not need network access.  Alternatively, nuking that whole yarn check line would do the trick as well.\nSo, for the moment, I added the following to my customized entrypoint.sh, right before the case statement\nsh\nsed -i \\\n  -e 's/\\(yarn check\\)/\\1 --integrity/' \\\n  ${GITLAB_INSTALL_DIR}/lib/tasks/yarn.rake. ",
    "15921050052": "thanks a lot. resolved\n. ",
    "sufengxue": "Hello, I meet this question. I want to ask you how to resolve it? Thank you. Thank you for reply. It has done. The reason is network problem. Container's network is different from the host. Set the docker run --net=host. Done. Thank you again.. ",
    "kiview": "@sameersbn I think your point considering backwards compatibility is valid, however, aren't most users already using a tailored version of the docker-compose.yml file? You could add the NGINX there (and hope users uprading to a newer version will notice this change).\n. Okay, this seems to be a general Docker for Windows problem, other people are reporting similar problems when trying to upload files or perform multipart post requests.\nThis is the Docker log output:\n[20:19:22.764][ProxyProcess   ][Debug  ] com.docker.slirp.exe: tcp:0.0.0.0:10022:tcp:172.20.0.4:22: connected\n[20:19:23.120][ProxyProcess   ][Error  ] com.docker.slirp.exe: Hvsock.write: Unix.Unix_error(Unix.ECONNABORTED, \"read\", \"\")\n[20:19:23.123][ProxyProcess   ][Error  ] com.docker.slirp.exe: Hvsock.write: Unix.Unix_error(Unix.ECONNABORTED, \"read\", \"\")\n[20:19:23.126][ProxyProcess   ][Error  ] com.docker.slirp.exe: Hvsock.shutdown_write: got Eof\n[20:19:23.130][ProxyProcess   ][Error  ] com.docker.slirp.exe: tcp:0.0.0.0:10022:tcp:172.20.0.4:22 proxy failed with flow proxy b: write failed with Eof\n[20:19:23.133][ProxyProcess   ][Error  ] com.docker.slirp.exe: Hvsock.write: Unix.Unix_error(Unix.ECONNABORTED, \"read\", \"\")\nI'll update this once I found out more about the underlying problems with Docker for Windows.\n. ",
    "rottenoats": "Wondering if this is still being integrated because I would love to use the nginx-proxy container with the gitlab container.. ",
    "pacoxu": "Check your ~/.ssh/known_hosts and remove the old gitlab line.\nI met similar problem with gitlab clone. When the gitlab container is a new one, I have to remove the old one in  ~/.ssh/known_hosts. ",
    "dominikschulz": "Having the same issues behind an AWS ELB where I can't inject headers, so please revert this change ASAP. It's really annoying.\n. If you have access to the DB you can disable 2FA until this issue is fixed:\nUPDATE users SET otp_required_for_login = false;\n. Opened an Issue with GitLab, as I'm not sure if this is related to docker-gitlab or GitLab itself: https://gitlab.com/gitlab-org/gitlab-ce/issues/21348\n. The query will only let you login w/o 2FA. I can't access /profile/two_factor_auth either.\n. No .secret here either. We use the docker-compose.yml from this repo which mounts a data volume to /home/git/data. This means that all the other files are not persisted upon upgrade (since we remove the container to start the new image). So far I wasn't aware that there is anything outside ENV/DB/datafolder to be persisted.\n. @atkrad Indeed, there is a /home/git/data/.secret. I did only look in /home/git/gitlab/.secret.\n. Using the value from /home/git/data/.secret for GITLAB_SECRETS_SECRET_KEY_BASE and GITLAB_SECRETS_OTP_KEY_BASE works like a charm.\nThanks for the awesome real-time support!\n. ",
    "andy-v": "@lazyfrosch works for me too, thanks!\n. ",
    "baschte": "@sameersbn i guess you should, cause many people use your gitlab docker in combination with nginx-proxy and let it do the SSL stuff. Would be very nice if it's reverted with the next gitlab image.\n. @sameersbn tested in combination with nginx-proxy and works like a charm :-) thank you!\n. ",
    "westberliner": "yup, i'm one of them. gitlab-docker behind nginx proxy for handling ssl.\n. ",
    "haoleg": "Thanks for the tip!\nAs it turned out the problem was elsewhere. It was necessary to specify GITLAB_HOST git.site2.com instead of localhost (GITLAB_HOST = git.site2.com).\n. ",
    "Beanben": "Can anyone help me with this? @lijiapengsa did you figured out anything? If so please guide me.. @meucaa How did you resolved this issue? . am using office 365 and mails are not triggering.. any update on this?. After enabling the --env 'DEBUG=true getting like \n+ export GITLAB_INSTALL_DIR GITLAB_SHELL_INSTALL_DIR GITLAB_DATA_DIR GITLAB_REPOS_DIR GITLAB_DOWNLOADS_DIR GITLAB_SHARED_DIR GITLAB_HOST GITLAB_PORT GITLAB_RELATIVE_URL_ROOT GITLAB_HTTPS GITLAB_SSH_HOST GITLAB_SSH_PORT GITLAB_SIGNUP_ENABLED GITLAB_PROJECTS_LIMIT GITLAB_USERNAME_CHANGE GITLAB_CREATE_GROUP\n+ local IFS=:\n+ sudo -HEu git envsubst '$GITLAB_INSTALL_DIR:$GITLAB_SHELL_INSTALL_DIR:$GITLAB_DATA_DIR:$GITLAB_REPOS_DIR:$GITLAB_DOWNLOADS_DIR:$GITLAB_SHARED_DIR:$GITLAB_HOST:$GITLAB_PORT:$GITLAB_RELATIVE_URL_ROOT:$GITLAB_HTTPS:$GITLAB_SSH_HOST:$GITLAB_SSH_PORT:$GITLAB_SIGNUP_ENABLED:$GITLAB_PROJECTS_LIMIT:$GITLAB_USERNAME_CHANGE:$GITLAB_CREATE_GROUP'\n+ rm -f /tmp/tmp.fJRiqAUhiC\n+ gitlab_configure_database\n+ echo -n 'Configuring gitlab::database'\n+ gitlab_finalize_database_parameters\n+ [[ -n '' ]]\n+ [[ -n '' ]]\n+ [[ -z localhost ]]\n+ DB_ADAPTER=mysql2\n+ case ${DB_ADAPTER} in\n+ DB_ENCODING=utf8\n+ DB_COLLATION=utf8_general_ci\n+ DB_PORT=3306\n+ DB_USER=gitlab\n+ DB_NAME=gitlabhq_production\n+ gitlab_check_database_connection\n+ case ${DB_ADAPTER} in\n+ prog='mysqladmin -h localhost -P 3306 -u gitlab -p password status'\n+ timeout=60\n+ mysqladmin -h localhost -P 3306 -u gitlab -p password status\n++ expr 60 - 1\n+ timeout=59\n+ [[ 59 -eq 0 ]]\n+ echo -n .\n+ sleep 1\n+ mysqladmin -h localhost -P 3306 -u gitlab -p password status\n++ expr 59 - 1\n+ timeout=58\n+ [[ 58 -eq 0 ]]\n+ echo -n .\n+ sleep 1\n+ mysqladmin -h localhost -P 3306 -u gitlab -p password status\n++ expr 58 - 1\n+ timeout=57\n+ [[ 57 -eq 0 ]]\n+ echo -n .\n+ sleep 1\n+ mysqladmin -h localhost -P 3306 -u gitlab -p password status\n++ expr 57 - 1\n+ timeout=56\n+ [[ 56 -eq 0 ]]\n+ echo -n .\n+ sleep 1\n+ mysqladmin -h localhost -P 3306 -u gitlab -p password status\n++ expr 56 - 1\n+ timeout=55\n+ [[ 55 -eq 0 ]]\n+ echo -n .\n    .\n    .\n    .\n\n    + mysqladmin -h localhost -P 3306 -u gitlab -ppassword status\n    ++ expr 1 - 1\n    + timeout=0\n    Configuring gitlab::database...........................................................\n\nthen container exited.. Yes i agree, but even after providing the database host name also its same. Can you please tell me where am i doing wrong. Is mydocker-compose.ymlcorrect. . @GJRTimmer  sorry missed out formatting it.DB_HOST` i provided my external database IP but still not working. That's why i posted.. @solidnerd / @sameersbn any help on this?. any updates on this?. After multiple stop/start it started working. Thanks . ",
    "lijiapengsa": "docker run ....\n--env 'DB_ADAPTER=mysql2' \\\n--env 'DB_HOST=192.168.1.248' \\\n--env 'DB_NAME=gitlabhq_production' \\\n--env 'DB_USER=gitlab' \\\n--env 'DB_PASS=password' \\\n ....\n@Beanben . ",
    "mahzoun": "what is the output of ssh -v -p ssh_port git@ssh_host ?\n. I updated my comment please try again and print the whole output.\n. @mike360 there is something wrong with your ssh-key, check ssh keys. the ssh connection to your container is ok. and you should be able to clone via ssh after adding your ssh key. \n. I set them in ~/.profile but i think gitlab use /home/git/gitlab/config/initializers/smtp_settings.rb for it, I can't send mail after changing my password. I also set it in /sbin/entrypoint.sh, it doesn't work, do you know who changes the /home/git/gitlab/config/initializers/smtp_settings.rb file?\n. I think the version of redis doesn't matter, it's easy to restore from backup, all you need is to place the backup file [TIME_STAMP]_gitlab_backup.tar in backups folder of container and run bundle exec rake gitlab:backup:restore RAILS_ENV=production as git. if you got any trouble run bundle exec rake gitlab:check RAILS_ENV=production\n. ",
    "RanchoCooper": "Bad port\n. @mike360 Is ur GitLab deployed in Docker like mine ?\nmy colleague try to install a new GitLab in a ubuntu virtual machine (not in Docker)\nit goes well clone by via SSH, but the SMTP can't sent email   ... sad !\nI am so blue\n. the Docker environment was deployed by another one, but he go out for days\nI wonder have you set SSH port like this ?   from Quick Start\ndocker run --name gitlab -d \\\n    --link gitlab-postgresql:postgresql --link gitlab-redis:redisio \\\n    --publish 10022:22 --publish 10080:80 \\\n    --env 'GITLAB_PORT=10080' --env 'GITLAB_SSH_PORT=10022' \\\n    --env 'GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string' \\\n    --volume /srv/docker/gitlab/gitlab:/home/git/data \\\n    sameersbn/gitlab:8.10.0\n. ",
    "mike360": "I'm having the same problem -- actually, I can't clone from SSH URL, but the problem is probably the same. My account definitely has the SSH key added to it.\nHere is my output from the above command:\n$ ssh -v -p 30000 git@git.pickslide.tech\nOpenSSH_6.9p1, LibreSSL 2.1.8\ndebug1: Reading configuration data /Users/Mike/.ssh/config\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 21: Applying options for *\ndebug1: Connecting to <hostname redacted> [<ip redacted>] port 30000.\ndebug1: Connection established.\ndebug1: identity file /Users/Mike/.ssh/id_rsa type 1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Mike/.ssh/id_rsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Mike/.ssh/id_dsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Mike/.ssh/id_dsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Mike/.ssh/id_ecdsa type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Mike/.ssh/id_ecdsa-cert type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Mike/.ssh/id_ed25519 type -1\ndebug1: key_load_public: No such file or directory\ndebug1: identity file /Users/Mike/.ssh/id_ed25519-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_6.9\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.2p2 Ubuntu-4ubuntu1\ndebug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu1 pat OpenSSH* compat 0x04000000\ndebug1: Authenticating to <hostname redacted>:30000 as 'git'\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug1: kex: server->client chacha20-poly1305@openssh.com <implicit> none\ndebug1: kex: client->server chacha20-poly1305@openssh.com <implicit> none\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:8ie/lvNniy8xYjj9FGn3YIDcxvXtBb3NwH3Vh+KJQZ8\ndebug1: Host '[<hostname redacted>]:30000' is known and matches the ECDSA host key.\ndebug1: Found key in /Users/Mike/.ssh/known_hosts:147\ndebug1: SSH2_MSG_NEWKEYS sent\ndebug1: expecting SSH2_MSG_NEWKEYS\ndebug1: SSH2_MSG_NEWKEYS received\ndebug1: SSH2_MSG_SERVICE_REQUEST sent\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\ndebug1: Authentications that can continue: publickey,password\ndebug1: Next authentication method: publickey\ndebug1: Offering RSA public key: /Users/Mike/.ssh/id_rsa\ndebug1: Authentications that can continue: publickey,password\ndebug1: Trying private key: /Users/Mike/.ssh/id_dsa\ndebug1: Trying private key: /Users/Mike/.ssh/id_ecdsa\ndebug1: Trying private key: /Users/Mike/.ssh/id_ed25519\ndebug1: Next authentication method: password\ngit@<hostname redacted> password:\n. @RanchoCooper Yes, it's in Docker. I'm sure I could get it working outside of Docker but I have a lot of services running on that box, all Dockerized, so I'd rather keep it that way for GitLab too.\n. ",
    "achretien": "Hi, I just squash the two commits.\nAnd yes I m running my fork in production \n. Everything should be ok. Thanks for all the work already done on this repo \ud83d\udc4d .\n. Ok on the latest. The config file is generated correctly. Sorry for the issue @gunr2171 .\nYou can create the 8.10.2-1 tag for fix\n. ",
    "QuickJack": "Thanks I am already familiar with the backup/restore process. I do not know how redis is used behind the scenes. But it should be clear that each and every software component evolves over time. I it nearly impossible to guarantee that there will never be breaking changes. I always fear that there is a chance of loosing data when trying to restore a backup to a new server instance that uses the redis:latest component which might be newer than expected. I think it is simply a matter of time until this process would cause incompatibility problems if there wouldn't be a clear versioning scheme for the redis part.\n. By looking into https://github.com/sameersbn/docker-redis/blob/master/Dockerfile I see, that the image is based on Trusty's redis-server package which is currently at 2.8.4-2. For Xenial it's currently 3.0.6-1. The update to Xenial would happen anytime soon or later. The question is wheter these versions can simply be exchanged for each other without hitting incompatibility problems.\n. @patrickc91 Do you mean the directories under /srv/docker/gitlab/gitlab/repositories ? The user that was trying to fork the repository in question did not have any personal projects. That is, there was no directory for that user. However, it was possible to create a personal project which also created  a personal folder under /srv/docker/gitlab/gitlab/repositories.\n@SolidNerd I will check the permissions tomorrow and post the results.\n. Thanks for all the replies.\n@sameersbn  I am using docker-compose on my production server. I also have a testing server. How exactly do you suggest me to run the app:sanitize command? According to the \"Host UID / GID Mapping\" section of README.md it should be done like:\ndocker run --name gitlab -d sameersbn/gitlab:8.9.6-1 app:sanitize\nThat would create a new container named gitlab which is not removed automatically. Am I missing something?\n. Thanks for the advice. I did a quick check of the permissions by logging in to the gitlab container. All directories in the repositories folder have owner & group set to git. I never did any manual changes within this folder. Following is the output of the app:sanitize command:\n$ sudo docker-compose exec gitlab /sbin/entrypoint.sh app:sanitize\nNo such command: exec\nCommands:\n  build              Build or rebuild services\n  config             Validate and view the compose file\n  create             Create services\n  down               Stop and remove containers, networks, images, and volumes\n  events             Receive real time events from containers\n  help               Get help on a command\n  kill               Kill containers\n  logs               View output from containers\n  pause              Pause services\n  port               Print the public port for a port binding\n  ps                 List containers\n  pull               Pulls service images\n  restart            Restart services\n  rm                 Remove stopped containers\n  run                Run a one-off command\n  scale              Set number of containers for a service\n  start              Start services\n  stop               Stop services\n  unpause            Unpause services\n  up                 Create and start containers\n  version            Show the Docker-Compose version information\n$ docker-compose --version\ndocker-compose version 1.6.2, build 4d72027\n. I updated my docker-compose to 1.8.0 which includes the exec command. After running \"docker-compose exec gitlab /sbin/entrypoint.sh app:sanitize\", GitLab displays \"Whoops, GitLab is taking too much time to respond\". Hitting F5 didn't help. Obviously, it is not possible to run this command without killing the running GitLab instance. I think that is a different problem which should be analyzed.\nThe good news is, that after restarting the GitLab instance I am now able to fork projects by impersonating the users in question. The app:sanitize command solved the issue. However, the question remains why these permissions were wrong. I never did any manual changes within the repositories folder.\nMany thanks for all the good ideas to find a quick solution for this issue.\n. Unfortunately, it does not work on my production server. I also did \"docker-compose exec gitlab /sbin/entrypoint.sh app:sanitize\". But I am still unable to fork. My test server was created via a backup from the production server a few days ago.\nAfter further tests I found out, that the user did not have a personal folder yet. So I created a personal project which also created a personal folder. After that is was possible to fork other repositories.\nWhen deleting those projects to retest the scenario described above, GitLab does actually not remove the personal folder. Once the personal folder exists, forking will work. I can reproduce this on my test server by manually deleting the personal folder. After doing so I am unable to fork again. @SolidNerd I hope this helps to find a solution for this problem.\n. @sameersbn It is only a workaround but not a solution. Do you plan to further analyze it? I am not sure if it's a problem in docker-gitlab or the upstream GitLab itself.\n. The problem still occurs after doing app:sanitize. Suppose there is a new user and all permissions are set correctly. This user does not have a personal folder. If such a user tries to fork a repository, it won't work. But if he creates a personal project, it works and a personal folder is created.\nOnce such a personal folder exists, it is possible to fork repositories. GitLab will never remove a personal folder. This doesn't even happen if all personal repositories and forks are deleted. In other words, once a user creates a personal project (and indirectly a personal folder), the problem is gone forever.\n. You are totally right. The permissions problems have been resolved on both my test server and my production server. If I now create a new user, GitLab will also create a personal folder for that user. This did obviously not happen when creating some users in the last weeks.\nIf one of the users without a personal folder tries to fork, it will fail. This is because the software assumes, that the folder already exists. It doesn't make this assumtion in case a personal project is created. In this case it simply creates the personal folder.\nWe can now argue, that the forking problem is some kind of secondary bug. If we didn't had the permissions problem we didn't hit the forking problem. But anyway, I think it is a problem, that the personal folder is created when creating personal projects but it's not when trying to fork a project.\n. My network is reachable but only through a proxy. That's the way how it works in almost all corporate environments. I bet that a lot of people will run into the exact same problem sooner or later.\nThe env varibale http_proxy must be set. However this not done because GitLab never required this until now. Why does it need postgresql 9.4 to upgrade to 9.5? Why isn't something like that required when updating the gitlab container?\nDo you think it's enough to specify http_proxy within docker-compose?\n. I upgraded my gitlab instance using postgresql 9.4-24. This worked perfectly. After that I tried to upgrade postgresql to 9.5 which failed as described above.\nI then added \"- http_proxy=\" to the environment section of the postgresql section. That resolved the upgrade problem. But isn't there a better solution?\n. You are right and I do know how http_proxy works. But something like that was never required in the past.\nI think it's a good idea to add some notes on this special upgrade procedure in order to prevent people to hit this problem.\n. There's another thread on the issue https://gitlab.com/gitlab-com/support-forum/issues/207. Still missing in 8.15.4. Still missing in 9.0.4. OK, just a duplicate: https://github.com/sameersbn/docker-gitlab/issues/995. After clicking New Branch under Repository>Branches and entering a new branch name, the new branch is created correctly in 8.15.2. I cannot find a \"create branch\" button.. Does this mean that backups are not working in 8.16.6? Will there be an 8.16.6-1 release?. I have tested everything on a testing server but did not test manual backup creation. I have done the upgrade to 8.16.6 on the production server just now. After manually trying to create a backup I saw the shocking error message.\nThere was another strange thing. Most projects were displayed with [done] when creating the backup. But some where displayed with [skipped]. What does this mean?\nI hope that you are right and backups could be restored in case of a problem.. And there seems to be another problem. I found 21 backups on my testing server. I guess that old backups are not deleted automatically.. It is displayed as some kind of status message for each repository as it is beeing backed up during the backup creation process.. I have created an issue for the other problem (https://github.com/sameersbn/docker-gitlab/issues/1122). It seems that there are a lot of backup related problems in 8.16.6.. @r2evans : It may be this bug https://gitlab.com/gitlab-org/gitlab-ce/issues/28854\n. I have just tested 8.17.4. The [SKIPPED] message is displayed for empty repositories only. The issue seems to be fixed.. I can confirm this. I do have 5 identical entries in my crontab.. I can confirm this. I do have 5 identical entries in my crontab.. I am using 8.16.6. The 8.17 version isn't ready yet. So I guess, there isn't a viable solution to this problem.. I am using 8.16.6. The 8.17 version isn't ready yet. So I guess, there isn't a viable solution to this problem.. My 8.17.4 container is still showing 2 identical entries in /var/spool/cron/crontabs/git. Still present in 9.4.5. This problem is really annoying as it could lead to server crashes because of filled hard discs. Please review the proposed solution.. Still present in 9.4.5. This problem is really annoying as it could lead to server crashes because of filled hard discs. Please review the proposed solution.. Thanks for confirming this.\nI upgraded my server from 8.13.6. In 8.14 we had the permissions issue which wasn\u2018t fully resolved in 8.15. 3 months later we have several backup related issues in 8.16. Yes, I guess that these are all upstream issues. . Thanks for confirming this.\nI upgraded my server from 8.13.6. In 8.14 we had the permissions issue which wasn\u2018t fully resolved in 8.15. 3 months later we have several backup related issues in 8.16. Yes, I guess that these are all upstream issues. . There is an issue for this problem: https://gitlab.com/gitlab-org/gitlab-ce/issues/24530 which was created 3 months ago.. There is an issue for this problem: https://gitlab.com/gitlab-org/gitlab-ce/issues/24530 which was created 3 months ago.. Is there any news about this issue? Will this be fixed in 8.17?. Many thanks. I will start testing 8.17 this afternoon.. I have just tested 8.17.4. Backup rotation is indeed working again.. http://letmegooglethat.com/?q=Host+key+verification+failed. I was also affected by this problem (9.3.9). Unfortunately, the server crashed during my vacation because of this. It would be nice to have a fix for this.. I was also affected by this problem (9.3.9). Unfortunately, the server crashed during my vacation because of this. It would be nice to have a fix for this.. Does this mean that the problem will occur when using MySQL only?. Does this mean that the problem will occur when using MySQL only?. Which day?. Which day?. The Release notes for the latest version of GitLab (https://about.gitlab.com/2017/07/22/gitlab-9-4-released/) include a new depcreation notice for API v1. It clearly says that runners before <9.0 will stop working in GitLab 9.6+. There is an onging MR for the runner at https://github.com/sameersbn/docker-gitlab-ci-multi-runner/pull/33. The Release notes for the latest version of GitLab (https://about.gitlab.com/2017/07/22/gitlab-9-4-released/) include a new depcreation notice for API v1. It clearly says that runners before <9.0 will stop working in GitLab 9.6+. There is an onging MR for the runner at https://github.com/sameersbn/docker-gitlab-ci-multi-runner/pull/33. Here is the issue on GitLab https://gitlab.com/gitlab-org/gitlab-ce/issues/35459. Here is the issue on GitLab https://gitlab.com/gitlab-org/gitlab-ce/issues/35459. Yes, you are right. The PR is here sameersbn/docker-gitlab-ci-multi-runner#33. There's an ongoing discussion but no solution yet.\nThe repository at https://github.com/digitalLumberjack/docker-gitlab-ci-multi-runner has it's last commit at July 3, 2017. None of the these runners is up to date.\n@sameersbn and @solidnerd: What runner do you suggest for GitLab 10+?\n. Yes, you are right. The PR is here sameersbn/docker-gitlab-ci-multi-runner#33. There's an ongoing discussion but no solution yet.\nThe repository at https://github.com/digitalLumberjack/docker-gitlab-ci-multi-runner has it's last commit at July 3, 2017. None of the these runners is up to date.\n@sameersbn and @solidnerd: What runner do you suggest for GitLab 10+?\n. I am on 10.3.5 and uploading a group avatar is working fine.. Please merge this before switching to 10.5.x. Please merge this before switching to 10.5.x. I have talked about the redis versioning problem a long time ago at https://github.com/sameersbn/docker-gitlab/issues/809.. I have talked about the redis versioning problem a long time ago at https://github.com/sameersbn/docker-gitlab/issues/809.. Does this problem still occur when using sameersbn/redis:4.0.9-1? Is it safe to update the redis container of an existing 10.8.4 instance to sameersbn/redis:4.0.9-1 before the upgrade to GitLab 11.0.4?. Does this problem still occur when using sameersbn/redis:4.0.9-1? Is it safe to update the redis container of an existing 10.8.4 instance to sameersbn/redis:4.0.9-1 before the upgrade to GitLab 11.0.4?. In #1680 it is said that sameersbn/redis:4.0.9-1 disables protected mode by default. So I guess we wouldn't have to take care of that anymore.. In #1680 it is said that sameersbn/redis:4.0.9-1 disables protected mode by default. So I guess we wouldn't have to take care of that anymore.. I have tested the workaround proposed by @nanquanyuhao with 11.1.4 and can confirm that it works. Many thanks.. I have tested the workaround proposed by @nanquanyuhao with 11.1.4 and can confirm that it works. Many thanks.. I am just trying to upgrade my 11.1.4 instance. I was wondering why the user profile themes were updated (#1762). I then wanted to go back for my testing instance and was running into the backup restore issue.\nThere is another problem when trying to restore a backup:\n```\n(...)\ndate: invalid date '@1542068726_2018_11_13_11.1.4'\n\u2023 1542068726_2018_11_13_11.1.4_gitlab_backup.tar (created at )\nSelect a backup to restore:\n```\nIt would be nice if these backup/restore problems could be fixed or if we would have at least a workaround.. I am just trying to upgrade my 11.1.4 instance. I was wondering why the user profile themes were updated (#1762). I then wanted to go back for my testing instance and was running into the backup restore issue.\nThere is another problem when trying to restore a backup:\n```\n(...)\ndate: invalid date '@1542068726_2018_11_13_11.1.4'\n\u2023 1542068726_2018_11_13_11.1.4_gitlab_backup.tar (created at )\nSelect a backup to restore:\n```\nIt would be nice if these backup/restore problems could be fixed or if we would have at least a workaround.. Is there anybody who has experienced the same behaviour when upgrading?. When creating a fresh 11.2 or 11.3 instance the navigation theme is \"Dark\" by default. I didn't found this information in GitLab's release notes.. When creating a fresh 11.2 or 11.3 instance the navigation theme is \"Dark\" by default. I didn't found this information in GitLab's release notes.. It was a problem of my testing instance. I restored the system from backup and the error was gone. Thanks anyway.. It was a problem of my testing instance. I restored the system from backup and the error was gone. Thanks anyway.. ",
    "djskinner-sky": "Just seem #800, will try with latest tag and see if that sorts it. My setup currently uses a Rancher load balancer (haproxy) so not so easy to adjust the headers specifically for gitlab.\n. Yeah it works. Thanks for an awesome project and your continued support.\n. I've made a bit more progress by going back to the original key I entered, which was the same value as what I'd used for GITLAB_SECRETS_DB_KEY_BASE. Now there is no unicorn loop and it appears to start but upon loading the page I am redirected to /users/sign_in and presented with a 500 error\n. From /var/log/gitlab/gitlab/unicorn.stderr.log:\n```\n [Raven] Raven 2.0.2 configured not to capture errors.\n [Raven] Raven 2.0.2 configured not to capture errors.\nStarted GET \"/users/sign_in\" for XX.XX.XX.XX at 2016-11-07 07:55:05 +0000\nProcessing by SessionsController#new as HTML\nCompleted 500 Internal Server Error in 445ms (ActiveRecord: 28.6ms)\nActionView::Template::Error (undefined method `description_html' for #):\n```\nand also\n```\nStarted POST \"/api/v3/internal/allowed\" for 127.0.0.1 at 2016-11-07 07:57:45 +00\n00\nActiveRecord::StatementInvalid (PG::UndefinedColumn: ERROR:  column namespaces.d\neleted_at does not exist\nLINE 1: ...\"namespaces\".\"id\" = \"projects\".\"namespace_id\" AND \"namespace...\n                                                             ^\n: SELECT  \"projects\".* FROM \"projects\" INNER JOIN \"namespaces\" ON \"namespaces\".\"\nid\" = \"projects\".\"namespace_id\" AND \"namespaces\".\"deleted_at\" IS NULL WHERE \"pro\njects\".\"pending_delete\" = $1 AND ((\n            (namespaces.path = 'atomx'\n          AND projects.path = 'conversr')\n            OR (\n              LOWER(namespaces.path) = LOWER('atomx')\n              AND LOWER(projects.path) = LOWER('conversr')\n            )\n          ))  ORDER BY (CASE WHEN  namespaces.path = 'atomx' AND  projects.path\n= 'conversr' THEN 0 ELSE 1 END) LIMIT 1):\n  /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active\n_record/connection_adapters/postgresql_adapter.rb:637:in `prepare'\n```\n. How do I force the database migration scripts to run again?\n. Finally got it working and there is no issues. It came down to silly mistakes on my part.\n. ",
    "kanlidy": "everything is ok, after set restrict email domains. what's going on?\nis there any ways to debug it? like gitlab-ctl tails?\n[update]\nall the users is OK, but the admin's dashboard can't open the \"projects\", got the 500 error.\n. After delete all projects which is import failure from github, the problem settled.\n. ports:\n- \"12299:22\"\n- \"12300:443\"\nI've tried 443 port, still not working\n. root@ubuntu:/home/liwei/ssl# openssl x509 -in gitlab.crt -text -noout\nCertificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number: 10093399534452036769 (0x8c12f566431b54a1)\n    Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C=CN, ST=Hubei, L=Wuhan, O=Wayearn Ltd, OU=Wayearn, CN=Wayearn/emailAddress=lw96@live.com\n        Validity\n            Not Before: Jul 30 13:19:49 2016 GMT\n            Not After : Jul 28 13:19:49 2026 GMT\n        Subject: C=CN, ST=Hubei, L=Wuhan, O=Wayearn Ltd, OU=Wayearn, CN=Wayearn/emailAddress=lw96@live.com\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\nThanks a lot, you have solved my problem. Thank you. @SolidNerd \nAfter change the CommonName to GITLAB_HOST, gitlab works well.\n. @solidnerd Why should set GITLAB_SECRETS_OTP_KEY_BASE and GITLAB_SECRETS_SECRET_KEY_BASE the same?\n. https://github.com/sameersbn/docker-gitlab/issues/859#issuecomment-253433740\n. ",
    "tetsuo692": "Hi,\nsupervisor/cron.log exist but is empty.\nGITLAB_BACKUP_DIR          /home/git/data/backups/\n. It's very strange\nIt works, (see screen shot)\n\nSo i try to change it to run it every 30 minutes... and after that, the entire folder is empty...\n. Yes,\nI had this line in the git crontab now :\n*/30 * * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKI\nP= RAILS_ENV=production'\nbut the directory is empty.\nshould I set a GITLAB_BACKUP_EXPIRY value ?\n. I think that there is a gitlab issue...\nwhen i run bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production', it finish by deleting all files in backup dir (also tar archive !!!)\n. GITLAB_BACKUP_DIR seems to be the temp directory to prepare backup.\nI've set up this in gitlab.yml and then it works :\nbackup:                                                                                     \n    upload:                                                                                   \n      connection:                                                                             \n        provider: local                                                                       \n        local_root: '/home/git/data/backup_h'                                                 \n      remote_directory: 'gitlab_backups'                                                      \n    path: \"/home/git/data/backups\"\n. ",
    "dh1tw": "I have the same problem. Emails don\u00b4t get delivered. \n. ",
    "YahirAlejandro": "Worked for me when set:\ngitlab_rails['smtp_enable_starttls_auto'] = false\ngitlab_rails['smtp_tls'] = false\nSince I wasn't using TLS.\nAlso:\ngitlab_rails['smtp_authentication'] = \"plain\"\nWorth notting that I'm using a GoDaddy domain.\nHope that helps.\n. Worked for me when set:\ngitlab_rails['smtp_enable_starttls_auto'] = false\ngitlab_rails['smtp_tls'] = false\nSince I wasn't using TLS.\nAlso:\ngitlab_rails['smtp_authentication'] = \"plain\"\nWorth notting that I'm using a GoDaddy domain.\nHope that helps.\n. ",
    "slim12kg": "@YahirAlejandro  What smpt port 25 or 465. @YahirAlejandro  What smpt port 25 or 465. @globalcitizen  how did you finally fix issue in configuration. @globalcitizen  how did you finally fix issue in configuration. ",
    "hwangjr": "i don't use nginx or apache for gitlab, and just start the redis, postgresql and gitlab container.\n. anyone can help me\uff1f this issue really confused me. \n. i face this issue too, i just update the images(gitlab, postgresql), all users and projects are gone.\nthen i use the auto backups to restore the data.. i face this issue too, i just update the images(gitlab, postgresql), all users and projects are gone.\nthen i use the auto backups to restore the data.. ",
    "lwolf": "got the same issue today, after trying to update postgresql container from 9.5-1 to 9.5-3.\nNow I can't start postgres at all.\nInitializing datadir...\nInitializing certdir...\nInitializing logdir...\nInitializing rundir...\nSetting resolv.conf ACLs...\nCreating database user: gitlab\nCreating database: gitlab_production...\n\u2023 Loading pg_trgm extension...\n\u2023 Granting access to gitlab user...\nERROR:  tuple concurrently updated. ",
    "heiderich": "I am also experiencing this problem. I should mention that just before the docker host system ran out of free disk space. I made sure that disk space is available and restarted the docker host. Since the restart I am experiencing this problem.\nRecently I upgraded from gitlab 9.0.0 to 9.1.4. I am now on postgresql 9.6-2.. ",
    "boxofrox": "I ran into this myself after my server ran into a batch of problems: thermal limit shutdowns and rampant every-minute gitlab backups that led to zero free disk space.\nHere's roughly the commands I ran that eventually resolved the issue for me.\n```sh\ncd path/to/gitlab/docker-compose.yml\nStop all services\ndocker-compose stop\nLet's get rid of the postgres container. (This may not be necessary. Since it's\nnot running, we could probably reuse it for the steps below.)\ndocker-compose rm postgresql\nRun an interactive shell in a new postgres container\ndocker-compose run --rm postgresql /bin/bash\nSpin up postgres manually with some verbosity\nsudo -u ${PG_USER} -g ${PG_USER} ${PG_BINDIR}/postgres -D ${PG_DATADIR} -d 5\nAt this point, postgres just ran with no more \"tuple concurrently updated\" error.\nLet's shut it down with ctrl+c.\nLet's try running postgres the way it was meant to run, via the entrypoint\n/sbin/entrypoint.sh\nHere the \"tuple concurrently updated\" error appeared.  I waffled a bit between\nthe previous step and this one until the error stopped showing up.\nI think I \"fixed\" it.\nShut down postgress with ctrl+c.\nDrop out of the interactive container, it'll show itself out the door\nexit\nFinally, let's start the postgres service\ndocker-compose up -d postgresql && docker-compose logs -f\n...and it's running\n```\nHope you have the same luck I did.. > Oh it looks like that is the command to run\n@luismadrigal yes, those are all options and variables for manually running postgres inside of its docker container.\n\nBut can you please explain what these mean\n\nThese PG_* variables are defined in the postgres Dockerfile [1], so once you're at a shell inside the postgres container, they're available and ready to use.  Type env | grep -i pg_ to print the environment variables for review.\n${PG_USER} specifies both the process UID/GID the database service runs as.\n${PG_BINDIR} holds a path to the directory where the postgres binary is located.\n${PG_DATADIR} holds a path to where postgres stores database files.\nAnd the -d 5 is a postgres option that sets the debugging level to 5 [2].  My intent here was to dump more information related to the tuple concurrently updated error into the server log file, but instead I found that the server ran without any problems, then I just methodically backed out to the composer utility, testing whether each tool between me and postgres might be causing the startup error (i.e. entrypoint.sh, docker compose).\n[1]: https://github.com/sameersbn/docker-postgresql/blob/master/Dockerfile\n[2]: https://www.postgresql.org/docs/9.4/static/app-postgres.html  . Alright, after poking at the containers, breaking things, and fixing them, the rampant backups have ceased.\nThe only oddity that stands out in this affair, is the unicorn process was stuck in a restart loop.  I killed it, modified the config/environments/production.rb (or where ever that file is) and set the log level to :debug, restarted the container, and saw a stale pid file was causing unicorn's restart loop.\nI stopped unicorn, removed the stale pid file, found a similar pid for sidekiq, stopped that process, and removed that pid file, too.  After dealing with some other shenanigans with the database from a self-induced-gunshot-wound moment that killed the postgres process without a proper shutdown, everything started up fine, and no rampant backups.\nIt doesn't make sense to me that unicorn would cause this behavior, maybe sidekiq was quietly stuck in an event loop, too, and it was the cause.  Either way, problem solved.. ",
    "BirgerK": "@boxofrox is saving me some sleep this night!\nHighlighting something in his answer: It is important to spin up another postgres-Container manually, so you can run sudo -u ${PG_USER} -g ${PG_USER} ${PG_BINDIR}/postgres -D ${PG_DATADIR} -d 5 in it. Then you're able to spin up again your production-container!\nThanks @boxofrox!. It is already added: https://github.com/sameersbn/docker-gitlab/pull/1367\nBut the related environemnt-variable is named LDAP_VERIFY_SSL. Yeah, I saw that already.\nBut that PR handles the new config-param verify_certificates. I'm talking about they changed the values (and name) for the encryption config-param. You know?. I did a PR for this.. Please merge!. ",
    "luismadrigal": "@boxofrox thanks for posting this, it is already looking promising.\nBut can you please explain what these mean\n-u ${PG_USER}                  # I am guessing this is a Users for the DB in question\n-g ${PG_USER} ${PG_BINDIR}/postgres   # I have no clue what PG_BINDIR is or where to find it\n-D ${PG_DATADIR}          # same thing with PG_DATADIR\n-d 5                             # what is the d option/switch\n\nThanks, in advance!\nEdit: Oh it looks like that is the command to run\nsudo -u ${PG_USER} -g ${PG_USER} ${PG_BINDIR}/postgres -D ${PG_DATADIR} -d 5\n\n. ",
    "Estebanv": "Works fine for me. Thanks a lot Niclas.\n. ",
    "mr-gosh": "indeed - we also configured oauth for github - and that made everything go wrong, we commented out these three environment variables (that were new) and it works again - strange that this was producing such problems (including failed migrations)\n\n- \"OAUTH_GITHUB_API_KEY=xxxxxxx\"\n    - \"OAUTH_GITHUB_APP_SECRET=yyyyyyy\"\n    - \"OAUTH_GITHUB_URL=https:\\\\/\\\\/github.com\"\n. indeed - we also configured oauth for github - and that made everything go wrong, we commented out these three environment variables (that were new) and it works again - strange that this was producing such problems (including failed migrations)\n- \"OAUTH_GITHUB_API_KEY=xxxxxxx\"\n    - \"OAUTH_GITHUB_APP_SECRET=yyyyyyy\"\n    - \"OAUTH_GITHUB_URL=https:\\\\/\\\\/github.com\"\n. \n",
    "LongLiveCHIEF": "\nAs I was copying my folders into git repository their permissions will be with root, If I am using hooks it is not happening because hooks is working on user git not on root. I want my entire gitlab should work only on root. Is this possible ?\n\nIt sounds like you're trying to use gitlab as a local client for an Operating System, instead of trying to push to your Gitlab instance from a remote.  You shouldn't be performing any operations inside the docker container, with the exception of gitlab cli commands.\n\nI am trying to push the files into the project directory, but unable to push. Every time I push it is asking password to enter for git. I have given ssh keys properly but unable to push the files.\n\nIt sounds like you cloned your project using git clone https://hostname.com/group/project, instead of using the ssh protocol to clone:\nRun git remote -v, and if the output shows something like:\norigin https://hostname.com/group/project.git (fetch)\norigin https://hostname.com/group/project.git (push)\nIf this is the case, then you need to update the remotes by running  git remote set-url origin git@yourgitlab.com:group/project.git\n\nEven I want to change the username for ssh, I don't want to use git@hostname:root/\ninstead of that I want to use root@hostname:. How to do that ?\n\nThis is possible, but not supported using this docker distribution. I doubt this ability would make it's way into a docker-based setup of gitlab.  You could explore using the [omnibus] installer instead, which will allow you to change this via your configuration file.\n. ",
    "faultylee": "Thanks @SolidNerd for the quick reply. I was indeed in 8.0.5-1. \nI ran into some issues (self inflicted one). Just sharing in case someone else bumped into this. I migrated from using docker cmdline to compose v2. I missed the volume for gitlab itself, hence after upgrading, which went smoothly, all repo appears empty. I did some checking and corrected the problem. As I recall there's a migration step for git, so to avoid potential issue, I restore from backup and start again. \nRestoring presented with another problem, I still the have old 8.0.5-1 image, so I follow the usual restore steps which I've done once when I upgraded to 8.0.5-1 from 7.14.3. It errored Please configure the database connection. and later similarly for redis. Probably cause by the upgraded postgres and redis, although I use the same env values. I found the error message coming for a validation check in function. I had to manually put in DB_HOST, DB_USER & REDIS_HOST. After that db migration failed during upgrade due to duplicate tables. Probably the restore only drop old tables from 8.0.5. So I renamed the db, create a new one, restore then upgrade. Now getting ERROR: permission denied to create extension \"pg_trgm\". Found the solution here. Then finally it's up.\nI'm curious on the first upgrade I didn't ran into permission issue with create extension.\nBtw, I noticed that NGINX_MAX_UPLOAD_SIZE was removed, assuming it was replaced with GITLAB_MAX_OBJECT_SIZE. Might be good to mention in the config description for those who upgrade from older version like me. Might also be good to keep a list of deprecated config at the bottom for reference. Another change that I noticed is DB_TYPE to DB_ADAPTER. DB_USER\nI use this to check what changed: [https://github.com/sameersbn/docker-gitlab/compare/0fc158823aa5cbc44f709e6037d3336c0ba3cc94...7829e50f44e2cf71cf0c46be57b29653530c8a28#files_bucket] The reason I didn't compare with master is that the diff didn't work when the config was replace with a table format.\n. I'm seeing this \ngitlab-postgresql    | Initializing datadir...\ngitlab-postgresql    | Initializing certdir...\ngitlab-postgresql    | Initializing logdir...\ngitlab-postgresql    | Initializing rundir...\ngitlab-postgresql    | Setting resolv.conf ACLs...\ngitlab-postgresql    | Creating database user: gitlab\ngitlab-postgresql    | Creating database: gitlabhq_production...\ngitlab-postgresql    | \u2023 Loading pg_trgm extension...\ngitlab-postgresql    | \u2023 Granting access to gitlab user...\ngitlab-postgresql    | Starting PostgreSQL 9.5...\ngitlab-postgresql    | LOG:  database system was shut down at 2016-08-20 01:09:22 UTC\ngitlab-postgresql    | LOG:  MultiXact member wraparound protections are now enabled\ngitlab-postgresql    | LOG:  autovacuum launcher started\ngitlab-postgresql    | LOG:  database system is ready to accept connections\non every restart of the postgresql container, I then proceed to remove DB_USER, DB_PASS & DB_NAME. \n. All seems to be good now\n. After 2 days, I don't see this coming back. Not sure what caused it initially.\n. After 2 days, I don't see this coming back. Not sure what caused it initially.\n. Btw, it did mess up the Description column a little (too wide), not sure how I can fix that though\n. Btw, it did mess up the Description column a little (too wide), not sure how I can fix that though\n. Sorry, my mistaken, didn't notice that. I saw the same thing from github's email notification, but didn't realized it's from there. In that case maybe a note/link to changelog.md above the table might be helpful.\nThanks again, I'll close this.\n. Sorry, my mistaken, didn't notice that. I saw the same thing from github's email notification, but didn't realized it's from there. In that case maybe a note/link to changelog.md above the table might be helpful.\nThanks again, I'll close this.\n. If needed, I can help to translate. Just type in both Chinese and English, I can help to correct them if needed. \n\u9700\u8981\u7684\u8bdd\u6211\u53ef\u4ee5\u5e2e\u5fd9\u7ffb\u8bd1\u3002\u4f60\u53ef\u4ee5\u8f93\u5165\u4e2d\u6587\u548c\u82f1\u6587\u7684\u7ffb\u8bd1\uff0c\u6211\u4f1a\u5e2e\u4f60\u6821\u6b63\u3002. Can you please share your docker & compose version, and docker-compose.yml and the run command. Please remove all sensitive information.\n\u8bf7\u4f60\u5171\u4eab\u4f60\u7684docker\u548ccompose\u7248\u672c\uff0cdocker-compose.yml\u7684\u5185\u5bb9\u53carun\u547d\u4ee4\u3002 \u8bf7\u5220\u9664\u6240\u6709\u654f\u611f\u7684\u90e8\u5206\u3002. Correct me if I'm wrong, I don't think that will work, when upgrading through docker, the container is brought down, recreated and up again. No web application to serve the maintenance page during the transition time, and no one can push anyway. Only thing is it might break those who is in the middle of a push. Correct me if I'm wrong, I don't think that will work, when upgrading through docker, the container is brought down, recreated and up again. No web application to serve the maintenance page during the transition time, and no one can push anyway. Only thing is it might break those who is in the middle of a push. Same here, though I saw 11.3.5, but that version not listed in the release. Same here, though I saw 11.3.5, but that version not listed in the release. ",
    "tomasdelvechio": "Sorry! The first error was detected in 8.10.5 but today I migrate to 8.10.6, and the the problem won't fixed.\n. Sorry! The first error was detected in 8.10.5 but today I migrate to 8.10.6, and the the problem won't fixed.\n. Hi, my GITLAB_SECRETS_DB_KEY_BASE has 64 characters.\n. Hello, sorry for this issue. I did a mistake, changing a few weeks ago the GITLAB_SECRETS_DB_KEY_BASE var. \nThe solution to fixed my problem I found here.\n. Hi, \nwe're using the 8.10.7 release for now.\nThere is no any log in production.log. In fact, when clicking in the button, the modal window is triggered by a js script, and the application has no made any http request.\n. ",
    "alogoc": "Looks like this specific issue was solved by the newer sameersbn/postgresql:9.5-1 image.\nClosing the issue.\n. Hi,\nThanks your reply. \nI am using latest version of the official docker registry (2.5.1). Everything is hosted on CoreOS (as mentioned above) and Kubernetes. \napiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: gitlab-registry\n  namespace: gitlab\n  labels:\n    k8s-app: gitlab-registry\n    version: v0\nspec:\n  replicas: 1\n  selector:\n    k8s-app: gitlab-registry\n    version: v0\n  template:\n    metadata:\n      labels:\n        k8s-app: gitlab-registry\n        version: v0\n    spec:\n      containers:\n      - name: registry\n        image: registry:2.5.1\n        resources:\n          # keep request = limit to keep this container in guaranteed class\n          limits:\n            cpu: 300m\n            memory: 300Mi\n          requests:\n            cpu: 200m\n            memory: 200Mi\n        env:\n        - name: REGISTRY_HTTP_ADDR\n          value: \":5000\"\n        - name: REGISTRY_STORAGE\n          value: \"s3\"\n        - name: REGISTRY_STORAGE_S3_ACCESSKEY\n          value: \"xxxxxx\"\n        - name: REGISTRY_STORAGE_S3_SECRETKEY\n          value: \"xxxxx\"\n        - name: REGISTRY_STORAGE_S3_BUCKET\n          value: \"gitlab-container-registry\"\n        - name: REGISTRY_STORAGE_S3_REGIONENDPOINT\n          value: \"xxxxxx\"\n        - name: REGISTRY_STORAGE_S3_REGION\n          value: \"eu\"\n        - name: REGISTRY_STORAGE_S3_ENCRYPT\n          value: \"true\"\n        - name: REGISTRY_STORAGE_S3_SECURE\n          value: \"true\"\n        - name: REGISTRY_STORAGE_S3_V4AUTH\n          value: \"true\"\n        - name: REGISTRY_STORAGE_S3_CHUNKSIZE\n          value: \"5242880\"\n        - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR\n          value: \"redis\"\n        - name: REGISTRY_REDIS_ADDR\n          value: \"redis.gitlab.svc.cluster.local\"\n        - name: REGISTRY_AUTH_TOKEN_REALM\n          value: \"https://xxxx/jwt/auth\"\n        - name: REGISTRY_AUTH_TOKEN_SERVICE\n          value: \"container_registry\"\n        - name: REGISTRY_AUTH_TOKEN_ISSUER\n          value: \"gitlab-issuer\"\n        - name: REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE\n          value: \"/certs/registry-auth.crt\"\n        - name: REGISTRY_STORAGE_DELETE_ENABLED\n          value: \"true\"\n        - name: REGISTRY_HTTP_SECRET\n          value: \"xxxxx\"\n        - name: REGISTRY_HTTP_RELATIVEURLS\n          value: \"true\"\n        volumeMounts:\n        - name: cert-dir\n          mountPath: /certs\n        ports:\n        - containerPort: 5000\n          name: registry\n          protocol: TCP\n      - name: registry-ui\n        image: alogoc/docker-registry-frontend\n        env:\n        - name: ENV_DOCKER_REGISTRY_HOST\n          value: \"localhost\"\n        - name: ENV_DOCKER_REGISTRY_PORT\n          value: \"5000\"\n        ports:\n        - containerPort: 80\n          name: registry\n          protocol: TCP\n      volumes:\n      - name: cert-dir\n        secret:\n          secretName: gitlab-container-registry-secret\n      nodeSelector:\n        label: worker\n. Here is my gitlab-rc.yaml : \n```\napiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: gitlab\n  namespace: gitlab\nspec:\n  replicas: 1\n  selector:\n    name: gitlab\n  template:\n    metadata:\n      name: gitlab\n      labels:\n        name: gitlab\n    spec:\n      containers:\n      - name: gitlab\n        image: sameersbn/gitlab:8.11.5\n        env:\n        - name: TZ\n          value: Europe/Berlin\n        - name: GITLAB_TIMEZONE\n          value: Berlin\n    - name: GITLAB_SECRETS_SECRET_KEY_BASE\n      value: \"xxxxxxxxx\"\n    - name: GITLAB_SECRETS_OTP_KEY_BASE\n      value: \"xxxxxxxxxxxx\"\n    - name: GITLAB_SECRETS_DB_KEY_BASE\n      value: \"xxxxxxxxxxxxx\"\n    - name: GITLAB_REGISTRY_ENABLED\n      value: \"true\"\n    - name: GITLAB_REGISTRY_HOST\n      value: \"xxxxxxxxx\"\n    - name: GITLAB_REGISTRY_PORT\n      value: \"5000\"\n    - name: GITLAB_REGISTRY_API_URL\n      value: \"gitlab-registry.gitlab.svc.cluster.local:5000\"\n    - name: GITLAB_REGISTRY_KEY_PATH\n      value: \"/certs/registry-auth.key\"\n    - name: SSL_REGISTRY_KEY_PATH\n      value: \"/certs/registry.key\"\n    - name: SSL_REGISTRY_CERT_PATH\n      value: \"/certs/registry.crt\"\n    - name: NGINX_ENABLED\n      value: \"false\"\n    - name: NGINX_HSTS_ENABLED\n      value: \"false\"\n    - name: GITLAB_HTTPS\n      value: \"false\"\n    - name: SSL_SELF_SIGNED\n      value: \"true\"\n    - name: SSL_VERIFY_CLIENT\n      value: \"false\"\n\n\n\n    - name: GITLAB_ROOT_PASSWORD\n      value: xxxx\n    - name: GITLAB_ROOT_EMAIL\n      value: xxxxxxxx\n\n    - name: GITLAB_HOST\n      value: xxxxxxx\n    - name: GITLAB_PORT\n      value: \"80\"\n    - name: GITLAB_SSH_PORT\n      value: \"22\"\n\n    - name: GITLAB_NOTIFY_ON_BROKEN_BUILDS\n      value: \"true\"\n    - name: GITLAB_NOTIFY_PUSHER\n      value: \"false\"\n\n    - name: GITLAB_BACKUP_SCHEDULE\n      value: daily\n    - name: GITLAB_BACKUP_TIME\n      value: 01:00\n\n\n    - name: DB_TYPE\n      value: postgres\n    - name: DB_HOST\n      value: postgresql\n    - name: DB_PORT\n      value: \"5432\"\n    - name: DB_USER\n      value: gitlab\n    - name: DB_PASS\n      value: xxxxx\n    - name: DB_NAME\n      value: gitlab_production\n\n    - name: REDIS_HOST\n      value: redis\n    - name: REDIS_PORT\n      value: \"6379\"\n\n    - name: SMTP_ENABLED\n      value: \"enabled\"\n    - name: SMTP_DOMAIN\n      value: gmail.com\n    - name: SMTP_HOST\n      value: smtp.gmail.com\n    - name: SMTP_PORT\n      value: \"587\"\n    - name: SMTP_USER\n      value: xxxxxxx\n    - name: SMTP_PASS\n      value: xxxxxxx\n    - name: SMTP_STARTTLS\n      value: \"true\"\n    - name: SMTP_AUTHENTICATION\n      value: login\n\n    - name: IMAP_ENABLED\n      value: \"false\"\n    - name: IMAP_HOST\n      value: imap.gmail.com\n    - name: IMAP_PORT\n      value: \"993\"\n    - name: IMAP_USER\n      value: mailer@example.com\n    - name: IMAP_PASS\n      value: password\n    - name: IMAP_SSL\n      value: \"true\"\n    - name: IMAP_STARTTLS\n      value: \"false\"\n    ports:\n    - name: http\n      containerPort: 80\n    - name: ssh\n      containerPort: 22\n    - name: registry\n      containerPort: 5000\n    volumeMounts:\n    - mountPath: /home/git/data\n      name: data\n    - name: cert-dir\n      mountPath: /certs\n  volumes:\n  - name: data\n    persistentVolumeClaim:\n      claimName: gitlab-git-pvc\n  - name: cert-dir\n    secret:\n      secretName: gitlab-container-registry-secret\n  nodeSelector:\n    label: worker\n\n```\n. I have excatly the same issue....any luck  so far?  My cluster nodes are big enough and even if allocate 8GBs of RAM and 2 CPUs just to the gitlab RC it keeps restarting constantly.... ",
    "jeremyzahner": "@lazyfrosch: Well technically you wouldn't need to distribute the container itself (i.E. speaking of an image on Docker Hub). So concerning this repository, it's just a link to the (open source) repository which they provide. I don't see us violating any copyright restrictions by that. Also, our original intention would, of course, be to provide license owners of EE a usable docker image, since the original one isn't.\n. @lazyfrosch: Well technically you wouldn't need to distribute the container itself (i.E. speaking of an image on Docker Hub). So concerning this repository, it's just a link to the (open source) repository which they provide. I don't see us violating any copyright restrictions by that. Also, our original intention would, of course, be to provide license owners of EE a usable docker image, since the original one isn't.\n. @lazyfrosch I do not mainly need their support, but a docker image that's well designed to use. There is an official Docker image for CE as well. Does that make this project pointless? Not at all.\n. @lazyfrosch I do not mainly need their support, but a docker image that's well designed to use. There is an official Docker image for CE as well. Does that make this project pointless? Not at all.\n. Closing this since we now host @ githost.io.. ",
    "invader35": "I currently test this on my server, and till now it seems to work nicely.\nIf there is anything i can help you with please let me know\n. ",
    "Kiina": "/Edit: Can probably be closed now because gitlab is removing the support. I had the same problem, i just added proxy_set_header X-Forwarded-Ssl on; to my nginx and set GITLAB_HTTPS to false and it worked for whatever reason. maybe it will help you\n. My Mattermost hooks work. I tested it via a curl on my computer. How do your gitlab settings look for it to work?\n\nI tried leaving it empty instead of defining the test channel, makes no difference. My systemhook to hubot works.. Okay seems to be related to this. But the other 500 error is still there\nhttps://gitlab.com/gitlab-org/gitlab-ce/issues/14242\n/Edit: it does work in other projects with test buttons, but doesn't trigger if i push or update issues\n. So if you go to a project, then services and mattermost commands there it works (for me). Not sure if this is supposed to be . Oh forgot about that. Should be correct now. https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG.md\n10.5.5 is already tagged. Blogpost will probably follow soon, so I already pushed the commit for 10.5.5. I'm think dockerhub builds a release for each tag and it only needs to be separated by commit, but maybe I'm wrong on that. I have created separate branches so I could make a single PR per version if needed. Have it running for 5 days now without problem. ",
    "yujianglei": "8.8.5\n. Hey,\nthx\n. @torvitas   follow  productions.log:\nStarted GET \"/weizhang/smc-cms\" for 127.0.0.1 at 2016-09-18 19:58:14 +0800\nProcessing by ProjectsController#show as HTML\n  Parameters: {\"namespace_id\"=>\"weizhang\", \"id\"=>\"smc-cms\"}\nCompleted 500 Internal Server Error in 49ms (ActiveRecord: 2.1ms)\nOpenSSL::Cipher::CipherError (bad decrypt):\n  app/models/project.rb:383:in import_url'\n  app/models/project.rb:413:inexternal_import?'\n  app/models/project.rb:405:in import?'\n  app/models/project.rb:421:inimport_in_progress?'\n  app/controllers/projects_controller.rb:93:in show'\n  lib/gitlab/middleware/go.rb:16:incall'\n. ##@solidnerd    thank you!   \nThe problem is solved,the  reason is GITLAB_SECRETS_DB_KEY_BASE is different from the imported Project.  \nThe original  key is configured in config/secrets.yml  files.  \n[git@yd-82-5 ~/gitlab/config]$ more  secrets.yml\nproduction:\n  db_key_base: b499889ac0a283057789383eb430869655bb2b1c88191cd9701b8a000e272455428821f965c0b4053e10d71017434527eef4a75cd3f3647bkldfjlj234980234\n. ",
    "funkyLover": "@SolidNerd sorry i miss the most important information...I have updated it already\n. it work! thank~\n. ",
    "cpoetter": "Same problem here. I run version 8.6.2 as provided through the Synology package center.. I am also having the same issue. I am running version 8.6.2 on my Synology disk station. I followed the explanation here https://gitlab.com/gitlab-org/gitlab-ce/blob/8-14-stable/doc/integration/bitbucket.md to setup the Bitbucket OAuth part.. @jostyee Thanks for your feedback! I also thought about that. But actually most of the information summarised in my tutorial is already part of this repo and the docker-gitlab-ci-multi-runner repo. It just needed to be slightly adjusted. For example the port for the registry can't be 5000, because that is the port used by the Synology DSM itself. Or the runner can't run in Docker executor mode, because a DSM user has no access to /var/run/docker.sock. Therefore the gitlab_ci_multi_runner user in the runner container should at least have the possibility to execute sudo commands if needed.\nMoreover I did not want to duplicate the awesome documentation here, just pick the important part for a Synology user and write it somewhere up. Looking into the issues convinced me to link it directly here in this repo.. @GJRTimmer Awesome idea to use the Synology Certificate Center with Let's encrypt to provide certificates for GitLab. The certificates are currently the only section in my tutorial where users need to actually run terminal commands instead of the WYSIWYG DSM setup. It took me quite some time to configure the setup as is, but I will definitely look into that!\nRegarding your runner Docker image. I was actually hoping to stay with @sameersbn runner version to keep it consistent. And as far as I can see a pull request which is updating to the newest runner version is going to merge soon. I tested the merged repo and it works fine on my DS916+ with the Synology GitLab version.\n@jostyee These discussions are actually the reason I wanted to relocate the tutorial into a new repo. How to setup the Synology Certificate Center has nothing to do with this repo.. @GJRTimmer I looked a bit into the certificate topic just now. The Certificate Center is storing the certificates in /usr/syno/etc/certificate/_archive/. The problem is, that this directory is not visible in the File Station Web UI. So we can't select it as a directory to be mounted into a Docker. Also unfortunately File Station does not support symbolic links. So linking the files into a directory that we can mount does not help.\nThis is the same issue as with the /var/run/docker.sock file for the Docker executor mode of the GitLab runner. I don't have a solution for this problem at the moment (besides launching the Docker via the terminal, which is not the intended solution for my tutorial. I want to write a tutorial that works hopefully just with the Web UI. I made already a pull request in the runner repo to get closer to my goal.).\nI submitted already a feature request to support symbolic links in File Station. Maybe it would be a great idea if you do the same.. @GJRTimmer I actually hope we can eliminate the need of console access soon.\n\nTo install and configure GitLab itself we obviously don't need console access.\nTo install and configure GitLab Runner we also do not need console access. Only if we want to enable sudo commands in the gitlab-ci.yml file. And to fix that I submitted a pull request.\nTo install and configure GitLab Container Registry we only need the console to create self signed certificates. This could also be done automatically while the registry Docker is booting up for the first time with the help of an environment variable flag.\n\nThis would of course only be the first step. The second step would be to find a solution to reuse the Synology Certificate Center certificates. . @GJRTimmer I found a way to use the Let's Encrypt certificates without console access. We can use Synology's Reverse Proxy service as a load balancer with SSL termination. I added a new section regarding that in my tutorial.\nI will look into the certificates used for the communication between the registry container and GitLab now. I think the easiest solution is to create a new pull request for this repository and add an environment variable flag to generate these certificates while booting the GitLab container the first time.. @solidnerd Thanks for the answer!\nI thought so as well. At the beginning I had SSL_REGISTRY_PATH and SSL_REGISTRY_KEY not defined and it was fine. But then I defined it once and now it does not work without it anymore. If I start the Docker container without the two variables I see the following error in /var/log/nginx/error.log:\n2017/04/30 15:02:52 [emerg] 548#548: BIO_new_file(\"/certs/registry.crt\") failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen('/certs/registry.crt','r') error:2006D080:BIO routines:BIO_new_file:no such file)\n/certs/registry.crt is the link to the certificate that I had temporarily. It someone still thinks it's there.. Ah okay, got it! That is true. I only stop and start it, the package respectively. Don't know if I can destroy the container that easy on a Synology. The runner and the registry for sure, because these are self deployed, but GitLab itself is installed via the Synology Package Center.\nBut I am anyway not so sure anymore if GITLAB_REGISTRY_HTTPS is really needed. Because I am running my containers behind a load balancer which is running on the same machine. Ideally I would set GITLAB_REGISTRY_HOST=localhost and GITLAB_REGISTRY_PORT=5556 on HTTP (port obviously flexible). The load balancer then redirects https://hub.my_domain.com:443 to http://localhost:5556 with SSL termination. But now the bad part. When I set GITLAB_REGISTRY_HOST=localhost, the GitLab web interface also thinks my registry is running on localhost, and not at hub.my_domain.com.\nRight now I am totally ignoring what GitLab's Nginx does and set the load balancer directly to the registry container. This surprisingly works :) Probably because the registry knows to contact REGISTRY_AUTH_TOKEN_REALM first for the authorization.. ",
    "iamapinan": "I have same problem on my gitlab version 11.0.2.. ",
    "hoto": "We could not resolve this, we tried many different configurations but this still persists. We just click View raw logs as a workaround for now.\nIt's definitely something wrong with our configuration though, as no one else is complaing about this. Closing this one as unresolved. Thanks for help everyone :)\n. @niksubramanian pointed out those three variables SSL_CERTIFICATE_PATH, SSL_KEY_PATH and SSL_DHPARAM_PATH, and here they go again:\n(not sure if it is really related but I think this could help some people a bit)\nhttps://github.com/sameersbn/docker-gitlab/issues/1248 \n. First thing I did was to set GITLAB_HTTPS=true and set nothing else.\nThen we had this 301 infinite loop in the browser when I hit our gitlab page.\nSo I checked docker exec gitlab cat /etc/nginx/sites-enabled/gitlab and that nginx config was redirecting all calls from port 80 to 443.\nSo I pulled the source code of this project and looked what is going on.\nI noticed that nested if statement and changed SSL_CERTIFICATE_PATH, SSL_KEY_PATH and SSL_DHPARAM_PATH to a path that does not exist (I would unset them but it was easier to set them to something that does exists) and everything started to work.\nI checked docker exec gitlab cat /etc/nginx/sites-enabled/gitlab and the nginx config was different, it just served on port 80.. ",
    "atkrad": "@adamlc me too\n. @dominikschulz I have .secret in /home/git/data/ path\n. Thanks @smcgivern @SolidNerd \n. ",
    "smcgivern": "In GitLab 8.11, we made some changes to secret names and locations to reflect what they're actually used for and make managing them easier. There's a description of this for Omnibus here: https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/update/README.md#migrating-legacy-secrets\nFor source installs, this is what happens:\n1. Previously, we used the value from .secret for otp_key_base and secret_key_base. While secret_key_base can be rotated fairly harmlessly (it will expire password reset tokens, etc.), changing the value of otp_key_base will prevent 2FA from working for all users: https://gitlab.com/gitlab-org/gitlab-ce/issues/3963\n2. On upgrade, move the value of .secret into config/secrets.yml under both keys, so that this is clearer, and delete the .secret file.\n3. If there is no .secret file and there are no matching values in config/secrets.yml, we generate new secrets - again, if there's existing 2FA data encrypted in the DB, this will also have the effect of stopping 2FA working for everyone.\nSo my first suggestion would be to see if you have a backup of your old .secret file, and provide that value in config/secrets.yml. If /home/git/data/.secret has the right value, that should work too.\n. In GitLab 8.11, we made some changes to secret names and locations to reflect what they're actually used for and make managing them easier. There's a description of this for Omnibus here: https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/update/README.md#migrating-legacy-secrets\nFor source installs, this is what happens:\n1. Previously, we used the value from .secret for otp_key_base and secret_key_base. While secret_key_base can be rotated fairly harmlessly (it will expire password reset tokens, etc.), changing the value of otp_key_base will prevent 2FA from working for all users: https://gitlab.com/gitlab-org/gitlab-ce/issues/3963\n2. On upgrade, move the value of .secret into config/secrets.yml under both keys, so that this is clearer, and delete the .secret file.\n3. If there is no .secret file and there are no matching values in config/secrets.yml, we generate new secrets - again, if there's existing 2FA data encrypted in the DB, this will also have the effect of stopping 2FA working for everyone.\nSo my first suggestion would be to see if you have a backup of your old .secret file, and provide that value in config/secrets.yml. If /home/git/data/.secret has the right value, that should work too.\n. @SolidNerd I see in the README this advises people:\n\nNote: Since GitLab 8.11.0 you need to provide the GITLAB_SECRETS_SECRET_KEY_BASE and GITLAB_SECRETS_OTP_KEY_BASE parameter while starting the image.\n\nI'm sorry if the above https://github.com/sameersbn/docker-gitlab/issues/859#issuecomment-241986947 wasn't clear from the CE repo changes \ud83d\ude1e . Will the old value still be around anywhere, by default?\n. @SolidNerd I see in the README this advises people:\n\nNote: Since GitLab 8.11.0 you need to provide the GITLAB_SECRETS_SECRET_KEY_BASE and GITLAB_SECRETS_OTP_KEY_BASE parameter while starting the image.\n\nI'm sorry if the above https://github.com/sameersbn/docker-gitlab/issues/859#issuecomment-241986947 wasn't clear from the CE repo changes \ud83d\ude1e . Will the old value still be around anywhere, by default?\n. @SolidNerd @adamlc technically that doesn't matter too much. Like I said, secret_key_base is OK to rotate - otp_key_base, though, is really important and should be kept very safe! However, for now that's safe advice.\n. @SolidNerd @adamlc technically that doesn't matter too much. Like I said, secret_key_base is OK to rotate - otp_key_base, though, is really important and should be kept very safe! However, for now that's safe advice.\n. @SolidNerd will do, this was kind of a mess before so the upgrade can be tricky. Sorry for the confusion in what these actually do.\n@dominikschulz @atkrad @adamlc no problem, glad it was that easy to resolve!\n. @martingabelmann yes, absolutely. I don't think I'll have time to work on that, unfortunately, but we have tried to make source and Omnibus upgrades to 8.11 as painless as possible for this, so it would be great if it could be the same for this version :tada:\n. Doc changes: https://github.com/sameersbn/docker-gitlab/pull/860\n. @kanlidy if you are upgrading from an earlier version, they will have implicitly had the same values. If you change one of them, that will invalidate some encrypted secrets.\nIf you're starting with a new installation, they don't need to be the same!\n. That's done now!\nJust out of curiosity, could you use the GitLab.com repo instead? https://gitlab.com/gitlab-org/gitlab-ce/tags\nThat's guaranteed to be up-to-date \ud83d\ude03 . @solidnerd fair enough! Just bear https://github.com/gitlabhq/gitlabhq#canonical-source in mind \ud83d\ude09 \nI don't know why we don't mirror, but we do push to GitHub as part of our release process - it just got missed for some reason on this patch. Sorry about that!. ",
    "torvitas": "Could you post the production.log somewhere?\n. Is there anything in particular yet to be tested?. Does someone use this branch already?. ",
    "rakesh-k": "trying the docker-compose with the compose file after editing for my environment. It spins up the redis, postgresql, and registry containers but then bails out with these errors:\n```\ncompose.parallel.feed_queue: Pending: set([, , , ])\ncompose.parallel.feed_queue: Starting producer thread for \ncompose.service.start_container_if_stopped: Starting rakeshk_postgresql_1\ncompose.parallel.feed_queue: Starting producer thread for \ncompose.cli.verbose_proxy.proxy_callable: docker attach <- (u'456eeaa2e6a54301583b9e8d0b99b74fbd2c248798d99a6acb8b2ff2e264652a', stderr=True, stream=True, stdout=True)\ncompose.service.start_container_if_stopped: Starting rakeshk_redis_1\ncompose.parallel.feed_queue: Starting producer thread for \ncompose.service.start_container_if_stopped: Starting rakeshk_registry_1\ncompose.cli.verbose_proxy.proxy_callable: docker attach <- (u'7ce6397fa3dd617871b640780131db15dd9f5430306c416f2a2e93232cfe5337', stderr=True, stream=True, stdout=True)\ncompose.cli.verbose_proxy.proxy_callable: docker attach <- (u'b903630b2fd14c07d2e38a92425c3770e20a547863033a1abce80b13f859517d', stderr=True, stream=True, stdout=True)\ncompose.cli.verbose_proxy.proxy_callable: docker attach -> \ncompose.parallel.parallel_execute_iter: Failed: \ncompose.parallel.feed_queue: Pending: set([])\ncompose.parallel.feed_queue:  has upstream errors - not processing\ncompose.parallel.parallel_execute_iter: Failed: \ncompose.parallel.feed_queue: Pending: set([])\ncompose.cli.verbose_proxy.proxy_callable: docker attach -> \ncompose.cli.verbose_proxy.proxy_callable: docker attach -> \ncompose.parallel.parallel_execute_iter: Failed: \ncompose.parallel.feed_queue: Pending: set([])\ncompose.parallel.parallel_execute_iter: Failed: \ncompose.parallel.feed_queue: Pending: set([])\nERROR: for redis  argument of type 'NoneType' is not iterable\nERROR: for postgresql  argument of type 'NoneType' is not iterable\nERROR: for registry  argument of type 'NoneType' is not iterable\nTraceback (most recent call last):\n  File \"\", line 3, in \n  File \"compose/cli/main.py\", line 61, in main\n  File \"compose/cli/main.py\", line 113, in perform_command\n  File \"compose/cli/main.py\", line 835, in up\n  File \"compose/project.py\", line 400, in up\n  File \"compose/parallel.py\", line 64, in parallel_execute\nTypeError: argument of type 'NoneType' is not iterable\ndocker-compose returned -1\n```\n. upgraded the server to 1.10 and now the error is gone.\n. facing the same issue. I am getting this in the log:\n```\nActiveRecord::StatementInvalid (PG::InsufficientPrivilege: ERROR:  could not open file \"base/16385/17328\": Permission denied\n: SELECT \"tags\".* FROM \"tags\" INNER JOIN \"taggings\" ON \"tags\".\"id\" = \"taggings\".\"tag_id\" WHERE \"taggings\".\"taggable_id\" = $1 AND \"taggings\".\"taggable_type\" = $2 AND (taggings.context = 'tags' AN\nD taggings.tagger_id IS NULL)):\n```\nWhat should be the right permission and where?\n. ",
    "panoramic-machine": "I relaunched on a larger server and it worked fine.  Thanks.\n. I have the exact same problem.  My setting are nearly identical to yours.\n. In my case I am positive that I am typing it correctly.\n. This is what I have in my docker-compose.yml, but I am unable to access the web interface or upload to the registry.  I am sure it is a mess because I have looked at so many articles that I am now completely lost.\n```\nGitLabLB:\n  ports:\n  - 443:443\n  labels:\n    io.rancher.loadbalancer.ssl.ports: '443'\n    io.rancher.loadbalancer.target.gitlab: gitlab.nxt.domain.com:443=443\n    io.rancher.loadbalancer.target.gitlab: registry.nxt.domain.com:5500=5500\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - gitlab:gitlab\n  stdin_open: true\ngl-redis:\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.affinity:host_label: name=rancherpool-pvt\n  command:\n  - --loglevel\n  - warning\n  image: sameersbn/redis:latest\n  volumes:\n  - /efs/data/gitlab811/redis:/var/lib/redis:Z\ngitlab:\n  ports:\n  - 22:22/tcp\n  - 8880:80/tcp\n  - 5500:5500/tcp\n  environment:\n    DB_ADAPTER: postgresql\n    DB_HOST: rds.instance.us-west-2.rds.amazonaws.com\n    DB_NAME: gitlab\n    DB_PASS: password$$\n    DB_PORT: '5432'\n    DB_USER: user\nDEBUG: 'false'\nGITLAB_BACKUP_SCHEDULE: daily\nGITLAB_BACKUP_TIME: 01:00\nGITLAB_BACKUP_EXPIRY: 604800\nAWS_BACKUPS: 'true'\nAWS_BACKUP_REGION: 'us-west-2'\nAWS_BACKUP_ACCESS_KEY_ID: AWSKEYID\nAWS_BACKUP_SECRET_ACCESS_KEY: AWSKEY\nAWS_BACKUP_BUCKET: bucket-gitlab-backups-or\n\nVIRTUAL_HOST: gitlab.nxt.domain.com\nNGINX_X_FORWARDED_PROTO: https\nGITLAB_PORT: '443'\nGITLAB_HTTPS: 'true'\nGITLAB_SSH_PORT: '22'\nGITLAB_EMAIL: git@domain.com\nGITLAB_EMAIL_REPLY_TO: noreply@domain.com\nGITLAB_HOST: gitlab.nxt.domain.com\nGITLAB_INCOMING_EMAIL_ADDRESS: git-reply@domain.com\nGITLAB_NOTIFY_ON_BROKEN_BUILDS: 'true'\nGITLAB_NOTIFY_PUSHER: 'false'\n\nGITLAB_ROOT_PASSWORD: Password$$\nGITLAB_SECRETS_DB_KEY_BASE: DBKEY\nGITLAB_SECRETS_OTP_KEY_BASE: OPT Key\nGITLAB_SECRETS_SECRET_KEY_BASE: SecretKey\nGITLAB_TIMEZONE: America/Los_Angeles\n\nGITLAB_REGISTRY_ENABLED: 'true'\nGITLAB_REGISTRY_HOST: registry.nxt.domain.com\nGITLAB_REGISTRY_PORT: '5500'\nGITLAB_REGISTRY_API_URL: http://registry.nxt.domain.com\nGITLAB_REGISTRY_ISSUER: gitlab-issuer\nGITLAB_REGISTRY_KEY_PATH: /auth-certs/registry-auth.key\n\nSSL_REGISTRY_KEY_PATH: /certs/privkey.pem\nSSL_REGISTRY_CERT_PATH: /certs/fullchain.pem\n\n#  SSL_CERTIFICATE_PATH: /certs/domain.pem\n #  SSL_KEY_PATH: /certs/myserver.key\nREDIS_HOST: redisio\nREDIS_PORT: '6379'\nSMTP_AUTHENTICATION: login\nSMTP_DOMAIN: domain.com\nSMTP_ENABLED: 'true'\nSMTP_HOST: email-smtp.us-west-2.amazonaws.com\nSMTP_PASS: SES Password+XTaW\nSMTP_PORT: '587'\nSMTP_STARTTLS: 'true'\nSMTP_USER: SES User\nTZ: America/Los_Angeles\n\nlabels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.affinity:host_label: name=rancherpool-pvt\n  image:  sameersbn/gitlab:8.11.5\n  links:\n  - gl-redis:redisio\n  volumes:\n  - /efs/data/gitlab811/gitlab:/home/git/data:Z\n  - /efs/data/gitlab811/logs:/var/log/gitlab\n  - /efs/data/gitlab811/le-certs/nxt.panosoft.com:/certs\n  - /efs/data/gitlab811/auth-certs:/auth-certs\nregistry:\n  restart: always\n  image: registry:2.4.1\nports:\n- 443:443/tcp\n- 80:80\n- 5000:5000\nvolumes:\n  - /efs/data/gitlab811/gitlab/shared/registry:/registry:Z\n  - /efs/data/gitlab811/le-certs/nxt.panosoft.com:/certs\n  - /efs/data/gitlab811/auth-certs:/auth-certs \n  environment:\n    VIRTUAL_HOST: registry.nxt.domain.com\n    REGISTRY_LOG_LEVEL: info\n    REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /registry\n    REGISTRY_AUTH_TOKEN_REALM: https://gitlab.nxt.domain.com/jwt/auth\n    REGISTRY_AUTH_TOKEN_SERVICE: container_registry\n    REGISTRY_AUTH_TOKEN_ISSUER: gitlab-issuer\n    REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /auth-certs/registry-auth.crt\n    REGISTRY_STORAGE_DELETE_ENABLED: 'true'\n    REGISTRY_HTTP_ADDR: ':80'\n    REGISTRY_HTTP_HOST: https://registry.nxt.domain.com\n    REGISTRY_HTTP_TLS_CERTFICATE: /certs/fullchain.pem\n    REGISTRY_HTTP_TLS_KEY: /certs/privkey.pem\nlabels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.affinity:host_label: name=rancherpool-pvt\n    io.rancher.scheduler.affinity:container_label: io.rancher.stack_service.name=gitlab/gitlab\n```\n. That is what I am trying to accomplish.  You can see the Rancher Load Balancer at the top of my docker-compose.xml.  But doesn't the registry have to have a certificate of its own anyway?  Should I try to run it will all the certificate related lines removed?\n. I eventually decided to setup gitlab omnibus edition on a linux instance.  And I have an orchestration script to mount my EFS volume during build. . ",
    "cyberkostyan": "I guess this is grsec(paxctl) specific issue.\nVersions:\n~ # docker-compose -v\ndocker-compose version 1.7.0, build 0d7bf73\n~ # docker -v\nDocker version 1.10.3, build 20f81dd\n~ # cat /etc/gentoo-release\nGentoo Base System release 2.2\n ~ # uname -r\n3.18.9-hardened\nPiece of debug log, same error\n```\n....\n gitlab_1      | Configuring nginx::gitlab::hsts...\ngitlab_1      | ++ stat -c %U /etc/nginx/sites-enabled/gitlab\ngitlab_1      | + local USR=root\ngitlab_1      | ++ mktemp\ngitlab_1      | + local tmp_file=/tmp/tmp.wtPDdZH7Qy\ngitlab_1      | + cp -a /etc/nginx/sites-enabled/gitlab /tmp/tmp.wtPDdZH7Qy\ngitlab_1      | + local variable\ngitlab_1      | + for variable in '${VARIABLES[@]}'\ngitlab_1      | + sed -ri 's/[{]{2}NGINX_HSTS_MAXAGE[}]{2}/${NGINX_HSTS_MAXAGE}/g' /tmp/tmp.wtPDdZH7Qy\ngitlab_1      | + export NGINX_HSTS_MAXAGE\ngitlab_1      | + local IFS=:\ngitlab_1      | + sudo -HEu root envsubst '$NGINX_HSTS_MAXAGE'\ngitlab_1      | + rm -f /tmp/tmp.wtPDdZH7Qy\ngitlab_1      | + nginx_configure_gitlab_ipv6\ngitlab_1      | + [[ ! -f /proc/net/if_inet6 ]]\ngitlab_1      | + nginx_configure_gitlab_ci\ngitlab_1      | + [[ -n '' ]]\ngitlab_1      | + nginx_configure_gitlab_registry\ngitlab_1      | + [[ true == true ]]\ngitlab_1      | + [[ -f /certs/registry.crt ]]\ngitlab_1      | + case ${1} in\ngitlab_1      | + migrate_database\ngitlab_1      | + case ${DB_ADAPTER} in\ngitlab_1      | + QUERY='SELECT count() FROM information_schema.tables WHERE table_schema = '\\''public'\\'';'\ngitlab_1      | ++ PGPASSWORD=password\ngitlab_1      | ++ psql -h postgresql -p 5432 -U gitlab -d gitlabhq_production -Atw -c 'SELECT count() FROM information_schema.tables WHERE table_schema = '\\''public'\\'';'\ngitlab_1      | + COUNT=64\ngitlab_1      | + CACHE_VERSION=\ngitlab_1      | + [[ -f /home/git/data/tmp/VERSION ]]\ngitlab_1      | ++ cat /home/git/data/tmp/VERSION\ngitlab_1      | + CACHE_VERSION=8.9.4\ngitlab_1      | + [[ 8.11.2 != 8.9.4 ]]\ngitlab_1      | + [[ -n 8.9.4 ]]\ngitlab_1      | ++ vercmp 8.11.2 8.9.4\ngitlab_1      | ++ expr '(' 8.11.2 : '([^.])' ')' - '(' 8.9.4 : '([^.])' ')' '|' '(' 8.11.2.0 : '[^.][.]([^.])' ')' - '(' 8.9.4.0 : '[^.][.]([^.])' ')' '|' '(' 8.11.2.0.0 : '[^.][.][^.][.]([^.])' ')' - '(' 8.9.4.0.0 : '[^.][.][^.][.]([^.])' ')' '|' '(' 8.11.2.0.0.0 : '[^.][.][^.][.][^.][.]([^.])' ')' - '(' 8.9.4.0.0.0 : '[^.][.][^.][.][^.][.]([^.])' ')'\ngitlab_1      | + [[ 2 -lt 0 ]]\ngitlab_1      | ++ vercmp 8.11.2 8.0.0\ngitlab_1      | ++ expr '(' 8.11.2 : '([^.])' ')' - '(' 8.0.0 : '([^.])' ')' '|' '(' 8.11.2.0 : '[^.][.]([^.])' ')' - '(' 8.0.0.0 : '[^.][.]([^.])' ')' '|' '(' 8.11.2.0.0 : '[^.][.][^.][.]([^.])' ')' - '(' 8.0.0.0.0 : '[^.][.][^.][.]([^.])' ')' '|' '(' 8.11.2.0.0.0 : '[^.][.][^.][.][^.][.]([^.])' ')' - '(' 8.0.0.0.0.0 : '[^.][.][^.][.][^.][.]([^.])' ')'\ngitlab_1      | + [[ 11 -gt 0 ]]\ngitlab_1      | + [[ -n 8.9.4 ]]\ngitlab_1      | ++ vercmp 8.9.4 8.0.0\ngitlab_1      | ++ expr '(' 8.9.4 : '([^.])' ')' - '(' 8.0.0 : '([^.])' ')' '|' '(' 8.9.4.0 : '[^.][.]([^.])' ')' - '(' 8.0.0.0 : '[^.][.]([^.])' ')' '|' '(' 8.9.4.0.0 : '[^.][.][^.][.]([^.])' ')' - '(' 8.0.0.0.0 : '[^.][.][^.][.]([^.])' ')' '|' '(' 8.9.4.0.0.0 : '[^.][.][^.][.][^.][.]([^.])' ')' - '(' 8.0.0.0.0.0 : '[^.][.][^.][.][^.][.]([^.])' ')'\ngitlab_1      | + [[ 9 -lt 0 ]]\ngitlab_1      | + echo 'Migrating database...'\ngitlab_1      | + exec_as_git bundle exec rake db:migrate\ngitlab_1      | Migrating database...\ngitlab_1      | ++ whoami\ngitlab_1      | + [[ root == git ]]\ngitlab_1      | + sudo -HEu git bundle exec rake db:migrate\ngitlab_1      | rake aborted!\ngitlab_1      | Bundler::GemRequireError: There was an error while trying to load the gem 'sys-filesystem'.\ngitlab_1      | Gem Load Error is:\ngitlab_1      | Backtrace for gem load error is:\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/ffi-1.9.10/lib/ffi/library.rb:263:in attach'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/ffi-1.9.10/lib/ffi/library.rb:263:inattach_function'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/unix/sys/filesystem/functions.rb:13:in <module:Functions>'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/unix/sys/filesystem/functions.rb:5:in'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/unix/sys/filesystem/functions.rb:4:in <module:Sys>'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/unix/sys/filesystem/functions.rb:3:in'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/unix/sys/filesystem.rb:3:in require_relative'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/unix/sys/filesystem.rb:3:in'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/filesystem.rb:11:in require_relative'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/filesystem.rb:11:in'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys-filesystem.rb:1:in require_relative'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys-filesystem.rb:1:in'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:86:in require'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:86:inblock (2 levels) in require'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:81:in each'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:81:inblock in require'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:70:in each'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:70:inrequire'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler.rb:102:in require'\ngitlab_1      | /home/git/gitlab/config/application.rb:5:in'\ngitlab_1      | /home/git/gitlab/Rakefile:5:in require'\ngitlab_1      | /home/git/gitlab/Rakefile:5:in'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/rake_module.rb:28:in load'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/rake_module.rb:28:inload_rakefile'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:689:in raw_load_rakefile'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:94:inblock in load_rakefile'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:176:in standard_exception_handling'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:93:inload_rakefile'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:77:in block in run'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:176:instandard_exception_handling'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:75:in run'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/bin/rake:33:in'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/bin/rake:23:in load'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/bin/rake:23:in'\ngitlab_1      | Bundler Error Backtrace:\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:89:in rescue in block (2 levels) in require'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:85:inblock (2 levels) in require'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:81:in each'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:81:inblock in require'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:70:in each'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:70:inrequire'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler.rb:102:in require'\ngitlab_1      | /home/git/gitlab/config/application.rb:5:in'\ngitlab_1      | /home/git/gitlab/Rakefile:5:in require'\ngitlab_1      | /home/git/gitlab/Rakefile:5:in'\ngitlab_1      |\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/ffi-1.9.10/lib/ffi/library.rb:263:in attach'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/ffi-1.9.10/lib/ffi/library.rb:263:inattach_function'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/unix/sys/filesystem/functions.rb:13:in <module:Functions>'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/unix/sys/filesystem/functions.rb:5:in'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/unix/sys/filesystem/functions.rb:4:in <module:Sys>'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/unix/sys/filesystem/functions.rb:3:in'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/unix/sys/filesystem.rb:3:in require_relative'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/unix/sys/filesystem.rb:3:in'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/filesystem.rb:11:in require_relative'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys/filesystem.rb:11:in'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys-filesystem.rb:1:in require_relative'\ngitlab_1      | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/sys-filesystem-1.1.6/lib/sys-filesystem.rb:1:in'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:86:in require'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:86:inblock (2 levels) in require'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:81:in each'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:81:inblock in require'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:70:in each'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler/runtime.rb:70:inrequire'\ngitlab_1      | /var/lib/gems/2.3.0/gems/bundler-1.12.5/lib/bundler.rb:102:in require'\ngitlab_1      | /home/git/gitlab/config/application.rb:5:in'\ngitlab_1      | /home/git/gitlab/Rakefile:5:in require'\ngitlab_1      | /home/git/gitlab/Rakefile:5:in'\ngitlab_1      | (See full trace by running task with --trace)\ngitlab_gitlab_1 exited with code 0\n```\n. ",
    "mikej2": "Gentoo 4.7.10-hardened-r2\n\n[191406.250527] grsec: From 127.0.0.1: denied RWX mprotect of  by /usr/bin/ruby23[ruby23:13079] uid/euid:1002/1002 gid/egid:1002/1002, parent /usr/bin/sudo[sudo:13078] uid/euid:0/0 gid/egid:0/0\n\nSolution: paxctl-ng -m /usr/bin/ruby23\n. ",
    "Awkee": "I got the same error.\nConfiguring gitlab::backups...\nConfiguring gitlab::registry...\nConfiguring gitlab-shell...\nConfiguring nginx...\nConfiguring nginx::gitlab...\nSetting up GitLab for firstrun. Please be patient, this could take a while...\ngitlabhq_production already exists\nrake aborted!\nActiveRecord::StatementInvalid: PG::InsufficientPrivilege: ERROR:  permission denied to create extension \"pg_trgm\"\nHINT:  Must be superuser to create this extension.\n: CREATE EXTENSION IF NOT EXISTS \"pg_trgm\"\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/postgresql_adapter.rb:592:in `async_exec'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/postgresql_adapter.rb:592:in `block in exec_no_cache'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract_adapter.rb:484:in `block in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/notifications/instrumenter.rb:20:in `instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract_adapter.rb:478:in `log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/postgresql_adapter.rb:592:in `exec_no_cache'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/postgresql_adapter.rb:584:in `execute_and_clear'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/postgresql/database_statements.rb:160:in `exec_query'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/postgresql_adapter.rb:338:in `enable_extension'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:665:in `block in method_missing'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:634:in `block in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:634:in `say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:654:in `method_missing'\n/home/git/gitlab/db/schema.rb:18:in `block in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/schema.rb:41:in `instance_eval'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/schema.rb:41:in `define'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/schema.rb:61:in `define'\n/home/git/gitlab/db/schema.rb:14:in `<top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/dependencies.rb:268:in `load'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/dependencies.rb:268:in `block in load'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/dependencies.rb:240:in `load_dependency'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/dependencies.rb:268:in `load'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:219:in `load_schema_for'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:236:in `block in load_schema_current'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:276:in `block in each_current_configuration'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:275:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:275:in `each_current_configuration'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:235:in `load_schema_current'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/railties/databases.rake:247:in `block (3 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/railties/databases.rake:251:in `block (3 levels) in <top (required)>'\n/home/git/gitlab/lib/tasks/gitlab/setup.rake:17:in `setup_db'\n/home/git/gitlab/lib/tasks/gitlab/setup.rake:4:in `block (2 levels) in <top (required)>'\nPG::InsufficientPrivilege: ERROR:  permission denied to create extension \"pg_trgm\"\nHINT:  Must be superuser to create this extension.\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/postgresql_adapter.rb:592:in `async_exec'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/postgresql_adapter.rb:592:in `block in exec_no_cache'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract_adapter.rb:484:in `block in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/notifications/instrumenter.rb:20:in `instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract_adapter.rb:478:in `log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/postgresql_adapter.rb:592:in `exec_no_cache'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/postgresql_adapter.rb:584:in `execute_and_clear'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/postgresql/database_statements.rb:160:in `exec_query'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/postgresql_adapter.rb:338:in `enable_extension'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:665:in `block in method_missing'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:634:in `block in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:634:in `say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:654:in `method_missing'\n/home/git/gitlab/db/schema.rb:18:in `block in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/schema.rb:41:in `instance_eval'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/schema.rb:41:in `define'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/schema.rb:61:in `define'\n/home/git/gitlab/db/schema.rb:14:in `<top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/dependencies.rb:268:in `load'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/dependencies.rb:268:in `block in load'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/dependencies.rb:240:in `load_dependency'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/dependencies.rb:268:in `load'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:219:in `load_schema_for'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:236:in `block in load_schema_current'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:276:in `block in each_current_configuration'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:275:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:275:in `each_current_configuration'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:235:in `load_schema_current'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/railties/databases.rake:247:in `block (3 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/railties/databases.rake:251:in `block (3 levels) in <top (required)>'\n/home/git/gitlab/lib/tasks/gitlab/setup.rake:17:in `setup_db'\n/home/git/gitlab/lib/tasks/gitlab/setup.rake:4:in `block (2 levels) in <top (required)>'\nTasks: TOP => db:schema:load\n(See full trace by running task with --trace)\nmy docker version info:\n```\ndocker-compose version 1.9.0, build 2585387\ndocker-py version: 1.10.6\nCPython version: 2.7.9\nOpenSSL version: OpenSSL 1.0.1t  3 May 2016\ndocker version\nClient:\n Version:      1.12.6\n API version:  1.24\n Go version:   go1.6.4\n Git commit:   78d1802\n Built:        Tue Jan 10 20:38:45 2017\n OS/Arch:      linux/amd64\nServer:\n Version:      1.12.6\n API version:  1.24\n Go version:   go1.6.4\n Git commit:   78d1802\n Built:        Tue Jan 10 20:38:45 2017\n OS/Arch:      linux/amd64\n```\nAnybody can help me solve this problem ???\n\nAt last, I solved this problem.This is because the postgresql images should  be running with this parameter:\ndocker run --name postgresql -itd \\\n  --env 'DB_NAME=db1,db2'  --env 'DB_EXTENSION=unaccent,pg_trgm' \\\n  sameersbn/postgresql:9.6-1\n. ",
    "vitaliy-kuzmich": "@Awkee  same issue, your method did not help to me.. Thank you for response, the thing is that I've used this config : https://github.com/sameersbn/docker-gitlab/blob/master/docker-compose.yml, without any changes, and it does not works for some reasons. Do you have ideas ?. ",
    "bdwilton": "I went from 8.9.6-1 to 8.11.2-1 but need to set some new environment vars, in upgrade notes it says...\nNote: Since GitLab 8.11.0 you need to provide the GITLAB_SECRETS_SECRET_KEY_BASE and GITLAB_SECRETS_OTP_KEY_BASE parameters while starting the image. These should initially both have the same value as the contents of the /home/git/data/.secret file.\nDid you set those ?\n. Oh great to hear, I'm running on a QNAP NAS which allocates a shared folder for /home/git/data which is where I found a .secret file in my case.\n. ",
    "julienTocci": "@FranVeraC Did you find a solution? I have the exact same error. ",
    "nikolicjakov": "\nI use https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion as letsencrypt proxy\n\nI have found solution to this issue. I am also using \"proxy-companion\" for letsencrypt certificates and jwilder/nginx-proxy as docker reverse proxy server.\nThing that did the trick is registry nginx port. I have changed port to 80 since all incoming traffic is going to VIRTUAL_PORT=80. As we are hitting our reverse proxy on port 443 traffic is forwarded to VIRTUAL_HOST port and that is 80 of gitlab container. Then we need our registry nginx to listen on port 80 and it should work fine...\nSo my current config looks like this..\n```\nregistry_external_url 'https://docker.my-domain.com'\ngitlab_rails['registry_enabled'] = true\nregistry['enable'] = true\nregistry_nginx['enable'] = true\nregistry_nginx['listen_https'] = false\nregistry_nginx['listen_port'] = 80\nregistry_nginx['proxy_set_headers'] = {\n  \"Host\" => \"$http_host\",\n  \"X-Real-IP\" => \"$remote_addr\",\n  \"X-Forwarded-For\" => \"$proxy_add_x_forwarded_for\",\n  \"X-Forwarded-Proto\" => \"https\",\n  \"X-Forwarded-Ssl\" => \"on\"\n}\n```\nNext problem that you will face is limitation of jwilder/nginx-proxy is the client_max_body_size limit.\nYou have to increase the body size limit in order to upload docker images to your registry over reverse proxy.\nYou can do that by creating custom jwilder/nginx-proxy image with client_max_body_size 0; in nginx.conf.\nOr you can mount additional proxy config file using -v /path/to/my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf:ro. You can find more information on this here.\nAfter that you should be able to use gitlab docker registry without problems.. ",
    "ChrAu": "Hi, \nI have found the Problem. It was a wrong configuration of my DNS server. The wrong IPv6 IP was called and after the timeout the IPv4 call works.\n. I have found the issue something went wrong with the new Redis version 4.X.X\nI go now directly on the 3.0.6 version\u00b4.. ",
    "datouxia": "found this sql works\nupdate projects set import_url = null WHERE import_url = ''\n. me too! and I can't login or push / pull! Any help please!\n. work around for me:\ndocker exec -t -i gitlab bash\ncd /etc/nginx/site-enabled\nvi gitlab\nfind line \n\nlisten [::]:80 ipv6only=off default_server;\n\nchanged it to\n\nlisten [::]:80 ipv6only=on default_server;\n\nfind line \n\nlisten [::]:443 ipv6only=off ssl http2 default_server;\n\nchanged it to\n\nlisten [::]:443 ipv6only=on ssl http2 default_server;\n\nin vi editor x means delete i means insert and esc + wq + enter make file saved\n. ",
    "GJRTimmer": "Thanks, II hope you have time for the same Pull request for the postgresql.\nKeep up the excellent work.\nOn Mon, Sep 12, 2016 at 8:00 AM Niclas Mietz notifications@github.com\nwrote:\n\n\ud83d\udc4d\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/882#issuecomment-246256473,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv1wePSrk86p-P0syLn8p5mbKc9M-ks5qpOphgaJpZM4Jxm6X\n.\n. @ilyadavydyuk is this still an active topic ?\nIf not could you close the case.. Any idea when 8.13.3 will be releases ?\nI prefer not to use the tag 'latest'\n. 8.13.3 fixes the issues.\nTested and confirmed\n. @DarkFranX could you close this issue please.\n. This looks like a first run/setup. Postgres is better for GitLab, I've switched myself a few days ago from MySQL to Postgres for my GitLab.\n\nWould it be possible for you to switch MySQL with postgres ?\n. Can you post the docker-compose.yml, and remove any passwords / sensitive values from it.\nYou might need a more basic variant of a docker-compose.\n. I think you have to add the links section, now your host can be found. I've not included the possible fix from @solidnerd \n```\nversion: '2'\nservices:\n   redis:\n     image: sameersbn/redis:latest\n     volumes:\n     - /srv/docker/gitlab/redis:/var/lib/redis:Z\npostgresql:\n     image: sameersbn/postgresql:9.4\n     volumes:\n     - /srv/docker/gitlab/postgresql:/var/lib/postgresql:Z\n     environment:\n     - DB_USER=gitlab\n     - DB_PASS=secretpassword\n     - DB_NAME=gitlabhq_production\ngitlab:\n     image: sameersbn/gitlab:7.9.1\n     volumes:\n     - /srv/docker/gitlab/gitlab:/home/git/data:Z\n     depends_on:\n     - redis\n     - postgresql\n     links:\n       - redis:redis\n       - postgresql:postgres\n     ports:\n     - \"10080:80\"\n     - \"10022:22\"\n     environment:\n     - DEBUG=false\n     - DB_TYPE=postgres #added because gitlab explicitly asked for it during the startup\n     - DB_ADAPTER=postgresql\n     - DB_HOST=postgres\n     - DB_PORT=5432\n     - DB_USER=gitlab\n     - DB_PASS=password\n     - DB_NAME=gitlabhq_production\n - REDIS_HOST=redis\n - REDIS_PORT=6379\n\n```\n. There are 3 tricks to upgrading.\n1) follow the version of the changelog of this repository. When upgrading to some versions you have to add certain environment Keys. For example at a certain 8.x.x. version you have to add an additional env secret key\n2) upgrade per patch version.\nVersion: [MAJOR]. [MINOR]. [PATCH]\ndon't go directly from your current 7 version to the current. \n3) when starting a container. You will see in the log of the Gitlab container migrating database. This can take a while.\nBefore you shutdown and pull the next version. You will have to wat until the cpu use of the gitlab container has dropped to idee.  AND very important you check if you can reach the projects web page. Because when the cpu drops. Nginx can still respond with a 5xx unavailable. Until you can reach the webpage the upgrade is still running\n. Wat = wait\nIdee = idle \nSorry dutch mobile autocorrection\n. I think you're lucky, if not upgrading per patch I was expecting that there might be a database problem. But apparently all the changes to the database schema are included when updating.\nHave fun with it.\nBy the way I have built a new complete gitlab-runner.\n[https://github.com/GJRTimmer/docker-gitlab-runner]\n[https://hub.docker.com/r/datacore/gitlab-runner/]. I can help a little. Synology is not using this repository. The developer of the package is 'GitLab Inc.' \n[Modified because I've missed your earlier comment that you can run docker]\nI'm running the latest GitLab from this repository on a DS1515+, including gitlab docker repository and gitlab runners.\nDo you need help setting it up ?\nPS. If you are interested, I've just completed writing a complete new gitlab-runner image, based upon sameersbn/gitlab-ci-multi-runner, this image also has branch specific for Synology. \nYou can find it here: [https://hub.docker.com/r/datacore/gitlab-runner/] for the synology version look at the tags.\n. @oxoocoffee to my knowlegde Synology keeps all docker installs the same version, so you should be able to run docker from this repository.\nIf you need any help let me know. If no further help is required, please close this issue.\n. @oxoocoffee can you tell us the progress, and if all is ok, could you please close this issue ?. solved, please close the issue.. @Quexer69 Thanks for the confirmation.. Also confirmed on 8.15.2\n\n. Any update on this ?\nI would like to enable prometheus for Gitlab. @damiendurant I've seen your update, is there no environment variable added for the gitlab.yml which allows the user to configure the prometheus host etc ??. I maybe found an alternative to add part of this gist script to the image.\nWe can run the garbage collect from the registry imge:\nbash\nregistry garbage-collect <PATH OF CONFIG.yml>. @jostyee I have the registry service also in an other container.\nYou are looking for the value /etc/docker/registry/config.yml the config.yml of the registry service.\nQuick Manual.\nLogin into the registry container\nbash\ndocker exec -it registry sh\nRun Cleanup\nbash\nregistry garbage-collect /etc/docker/registry/config.yml\nAnd your done. Any update on this ?. This is because of Synology OS it has nothing to do with the container or\nthe docker settings.\nWhat you need to do is change the default templates for your synology. At\nevery reboot the system replaces the config files with their default. The\nphilosophy of Synology behind this is that if a user makes changes which\nbricks the NAS then a reboot is sufficient to fix it.\nNow here is to to bypass it; most of the changes can be done from the\n/etc.defaults folder this is where the majority of the default files are\ncopied from.\nCould you tell which internal files you are trying to change ?\nPs: I'm running a full gitlab setup on my synology. Including a docker\nregistry and runners. I've also build a Synology compatible runner image\nwhich is compatible with the docker engine shipped with synology.\nCurrently I'm trying for months to have synology update the current docker\nengine to a higher version. Could you do me a favor. And fo to your\nsynology support tool and submit a question to synology for the docker\npackage and simply asking when they will release an update for the latest\ndocker engine. The more people ask the sooner they will update it.\nHope this helps. I'm a very experienced Synology user have even been\nhelping synology to fix several things in their system for the past few\nyears.\nLet me know how I can help you.\nOp wo 19 apr. 2017 13:45 schreef MACE-Zer0 notifications@github.com:\n\nFirst of all , great tool git lab is .. awesome realy , i know maybe u\nguys dont support the versions in synology , but maybe someone can give me\na little help with this\nIm trying to activate LDAP , with synology and docket , but inside the\nterminal in the docker , the gitlab.yml in the config , when i enter the\nLDAP setttings , after i reboot gitlab ,the files reverts back to its\norignal file , and no ldap activated , iv been seaching in a lot in google\n, cant seem to find where the base fines that i need to change so docker\nasumes the LDAP configurations ,\nCan anyone help me with this ??\nmuch apreciated\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/AFynv7yACzZDGuV2A29WfkV54h6sD3rSks5rxe4hgaJpZM4NBis3\n.\n. What is the path of your gitlab.yml ?\n\nOp wo 19 apr. 2017 18:32 schreef MACE-Zer0 notifications@github.com:\n\nThanks for you reply , i have gitlab running , just need to activate ldap\nso users in my company can login with their AD users in gitlab , but when i\nchanged the gitlab.yml in the docker it would change back , do you know\nwhat files do i need to change to put ldap working ???\ni need files that configure ldap :\nA human-friendly name for your LDAP server. It is OK to change the label\nlater, for instance if you find out it is too large to fit on the web\npage. Example: 'Paris' or 'Acme, Ltd.'\nlabel: 'LDAP'\nExample: 'ldap.mydomain.com'\nhost: '_your_ldap_server'\nThis port is an example, it is sometimes different but it is always an\ninteger and not a string\nport: 389\nuid: 'sAMAccountName'\nmethod: 'plain' # \"tls\" or \"ssl\" or \"plain\"\ndont know where they are in the synology side , have checked all of gitlab\nfiles , and the only place i found them was inside the docker , that doesnt\nallow change ,\ncan u tell me where the files are to configure ldap for gitlab ??\ni willl ask synology for the update of docker no problem!!\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-295334479,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvwzfnU3cB2zCVl1ahQHfnb-GG7RPks5rxjcggaJpZM4NBis3\n.\n. @MACE-Zer0 \n\nAre you by any change running the gitlab from the Synology package center ? because that thing is not up-to-date. And I don't recommend it. I think that will explain your problems.\nIf you are running the gitlab from the package center, my question to you is do you want to know how to run the image from this repository, including backups etc.. (basically a correct setup of gitlab on Synology, sorry to be blunt)\nLet me know, My money is on the fact that you have installed the gitlab image which is shown in the screenshot below. (BTW; this is a very old version of gitlab)\n\n. @MACE-Zer0 Don't worry, I will guide you trough every setup . No. The repo you are currently on, is the correct one. Give me a few minutes to prepare all the data for you to set up a complete gitlab environment on Synology.\nI do need the following from you:\n1) Do you now how to use SSH and login into the console of a Synology ?\n2) Do you want a complete Gitlab environment, with its own docker registry ?\n3) Do you want a gitlab environment which can also run automatic builds of a project ?\n. 4) I assume you will be running GitLab on a docker container.\nMy own Gitlab is available from https://gitlab.timmertech.nl you will not be able to get beyond the login, but it just to show you how to set it up correctly including HTTPS certificates even as a sub domain.\n5) Do you want it also running on a subdomain like I do ?. Auto building can be setup using the internal of gitlab runners, which only require you to add a .gitlab-ci.yml to a project\nWhen I know if you also want to run it on a subdomain I can get started.. Manual Part 1:\nThis manual will be taking you to prepare your environment.\nBecause we first need to setup several things before we can run it.\nP.S.\nLater on I will provide my own docker-compose.yml files which in turn will auto setup a complete environment, so you don't have to reinvent the wheel again. Of course you have to edit my files, I will make it clear where you have to edit them.\nStep 1 Storage\nWe need to setup the environment in such a way that all of your data is saved correctly, so that you will never loose them and that it is every easy to upgrade to the latest version.\n***NOTE: I have a nice bash script for auto upgrading my environment, which I also will provide, this script takes care of every thing, and when there is an update for gitlab, it will take you Synology only about 15-20min downtime of your gitlab environment on upgrade.\nBecause we want to preform upgrades and always run the latest secured and stable version in a safe way we need to start with a correct setup.\nThis manual will assume that you still have the \"Synology Shared Folder\" Docker present.\nIt should be located at /volume1/Docker its default created when you install docker.\nIf this folder is not present create it through the Configuration panel not through SSH, we want it as a normal Synology Shared folder, because in the future you might want to use the \"Snapshot Replication\" application from Synology to make incremental snapshots.\n***NOTE: I will also assume that we are doing a complete fresh install, importing projects you can do later yourself. Second assumption will be that you have uninstalled the docker image and previous version of gitlab.\nCreated the following directory structure. \n(P.S. You will notice is based upon the the linux default FS layout) \n(Use SSH after /volume1/Docker exists or created by the Configuration Panel)\n```bash\n/volume1/Docker/gitlab\n/volume1/Docker/gitlab/etc\n/volume1/Docker/gitlab/etc/certs\n/volume1/Docker/gitlab/var\n/volume1/Docker/gitlab/var/lib\n/volume1/Docker/gitlab/var/lib/gitlab\n/volume1/Docker/gitlab/var/lib/postgresql\n/volume1/Docker/gitlab/var/lib/redis\n/volume1/Docker/gitlab/var/lib/runner-docker\n/volume1/Docker/gitlab/var/lib/runner-scripts\n/volume1/Docker/gitlab/var/lib/runner-shell\n/volume1/Docker/gitlab/var/log\n/volume1/Docker/gitlab/var/log/gitlab\n/volume1/Docker/gitlab/var/log/postgresql\n/volume1/Docker/gitlab/var/log/redis\n```\nExplanation\n/volume1/Docker/gitlab => Root Directory containing everything for your gitlab environment\n/volume1/Docker/gitlab/etc => This will contain all of your docker configuration\n/volume1/Docker/gitlab/etc/certs =>Will contain SSL/TLS certificates\n/volume1/Docker/gitlab/var => Will contain all DATA/LOG\n/volume1/Docker/gitlab/var/lib => Will contain all DATA\n/volume1/Docker/gitlab/var/lib/gitlab => Will contain the data of GitLab\n/volume1/Docker/gitlab/var/lib/postgresql=> Will contain all the postgres data\n/volume1/Docker/gitlab/var/lib/redis => Will contain all the Redis Data\n/volume1/Docker/gitlab/var/lib/runner-docker => Will contain the configuration for docker runner\n/volume1/Docker/gitlab/var/lib/runner-scripts => Will contain the shared scripts between runner\n/volume1/Docker/gitlab/var/lib/runner-shell => Will contain the configuration for the shell runner\n/volume1/Docker/gitlab/var/log => Will contain all log files\n/volume1/Docker/gitlab/var/log/gitlab => Will contain all the log files from GitLab\n/volume1/Docker/gitlab/var/log/postgresql => Will contain all the log files from postgresql\n/volume1/Docker/gitlab/var/log/redis => Will contain all the logfiles from Redis\n. # Step 2 Create Secrets (Mandatory)\nIn order to use GitLab correctly you need to generate several secret keys, this is a one time action.\nYou need to generate three of them.\n- Database Key\n- Secret Key\n- OPT Key\nYou only generate them once, and them you can forget about them, they will be stored within the gitlab docker configuration. Keep in mind that you don't want to lose those configuration files, but that should be obvious.\nGenerate Keys\nRun the following command 3 times\nbash\n$ date +%s | sha256sum | base64 | head -c 64 ; echo\nCopy them to a text editor like notepad++ and assign each one to the following key(s):\n- GITLAB_SECRETS_DB_KEY_BASE\n- GITLAB_SECRETS_SECRET_KEY_BASE\n- GITLAB_SECRETS_OTP_KEY_BASE\nEnd result:\nKEY=VALUE\ntext\nGITLAB_SECRETS_DB_KEY_BASE=ZWRhOWJjMjEyNjAxNTk3ODgyNWYyNGFkOTUyY2E1YjY2YTllNWY4MWEwNTU3ZmY4\nGITLAB_SECRETS_SECRET_KEY_BASE=N2U5MTJlNzU1NjBjZGY4ZjQxMTE1NjI4MTlkMmFjNDIyM2I3OWY2MTRhYTFmM2Q0\nGITLAB_SECRETS_OTP_KEY_BASE=YjI0Y2YyMGVlOTdlMjZkODEyM2VjZTY0NjVlODUyYjE5YWNlMDI2ZWIxMzIwZjYx\nsave the contents above to /volume1/Docker/gitlab/etc/secrets.env\nYou can use either VI or whatever you like. All three lines.. NOT: KEY=VALUE, this was just to illustrate that you needed to add an equal sign between the key and value.\nBelow the only contents of the the file:\ntext\nGITLAB_SECRETS_DB_KEY_BASE=ZWRhOWJjMjEyNjAxNTk3ODgyNWYyNGFkOTUyY2E1YjY2YTllNWY4MWEwNTU3ZmY4\nGITLAB_SECRETS_SECRET_KEY_BASE=N2U5MTJlNzU1NjBjZGY4ZjQxMTE1NjI4MTlkMmFjNDIyM2I3OWY2MTRhYTFmM2Q0\nGITLAB_SECRETS_OTP_KEY_BASE=YjI0Y2YyMGVlOTdlMjZkODEyM2VjZTY0NjVlODUyYjE5YWNlMDI2ZWIxMzIwZjYx\n. # Step 3 Database\nThis is a very easy and short step; We need to pick a password for the database, creating of user and things like that is no concern because this will be done automatically.\nbash\n$ date +%s | sha256sum | base64 | head -c 16 ; echo\nThe command above will generate a 16 character strong password, we also never have to type this in again.\nCreate the following file: /volume1/Docker/gitlab/etc/database.env\nContents:\n```text\nDatabase Configuration\nDB_USER=gitlab\nDB_PASS=\nDB_NAME=gitlab\n```\n. # Step 4 Email\nThis step will setup email. You have IMAP and SMTP, I have only SMTP enabled, but I do have the IMAP configuration on my system and also loaded, I simple have the flag if IMAP should be enabled on false.\nThis will allow you to customize the your email setup later on to your own wishes.\nCreate the following file: /volume1/Docker/gitlab/etc/imap.env\nContents:\n```text\nIMAP Configuration\nIMAP_ENABLED=false\nIMAP_HOST=imap.gmail.com\nIMAP_PORT=993\nIMAP_USER=mailer@example.com\nIMAP_PASS=password\nIMAP_SSL=true\nIMAP_STARTTLS=false\n```\nCreate the following file: /volume1/Docker/gitlab/etc/smtp.env\nContents:\n```text\nSMTP Configuration\nSMTP_ENABLED=true\nSMTP_DOMAIN=\nSMTP_HOST=\nSMTP_PORT=587\nSMTP_USER=\nSMTP_PASS=\nSMTP_STARTTLS=true\nSMTP_AUTHENTICATION=login\n```\nIt will depend on your own smtp server if you need to activate STARTTLS, of course port number is either 25 or 587 if using TLS.\nIf you are unsure about your settings you can for now simple set the SMTP_ENABLED to false.\nIf you edit this in the future it only requires a restart of your environment. That's it. We can in theory but WE WILL NOT do that, It's very bad to use MySQL with GitLab.\nDon't worry. You will get a nice setup :-) We will run a database docker container with it. Trust me it is truly the best way.. What do you mean with smtp env ?. I'm using the MailPlus Server on my Synology, I even have my MailServer completly configured with full DKIM, DMARC SSL etc.. You do not, its optional, but if you don't then make a mental note of it because, within a few steps we will be including these files into a docker-compose files which will manage everything. So if you do not create the imp.env files don't forget to REMOVE it from the docker-compose file.. You still work faster then I can write a manual, we almost done by the way. Question: do you want OATH? Like importing from GitHub, like on import and GitLab wil show projects etc. of OATH and allow users to login with Google account things like that ?. Not any trouble, the only price you pay is that you submit a request to Synology and ask for an update for the Docker :-). # Step 5 OATH\nCreate the following File: /volume1/Docker/etc/oath.env\nDon't worry everything is disabled, but it will allow easier configuration in the future.\nAlso this file is not entirely up to date.\nWithin the README of this GitHub you will notice that there are more keys about OATH which have been added since I created this file.\nContents:\n```text\nOAuth Configuration\nOAUTH_ENABLED=false\nOAUTH_AUTO_SIGN_IN_WITH_PROVIDER=\nOAUTH_ALLOW_SSO=\nOAUTH_BLOCK_AUTO_CREATED_USERS=true\nOAUTH_AUTO_LINK_LDAP_USER=false\nOAUTH_AUTO_LINK_SAML_USER=false\nOAUTH_EXTERNAL_PROVIDERS=\nOAUTH_CAS3_LABEL=cas3\nOAUTH_CAS3_SERVER=\nOAUTH_CAS3_DISABLE_SSL_VERIFICATION=false\nOAUTH_CAS3_LOGIN_URL=/cas/login\nOAUTH_CAS3_VALIDATE_URL=/cas/p3/serviceValidate\nOAUTH_CAS3_LOGOUT_URL=/cas/logout\nOAUTH_GOOGLE_API_KEY=\nOAUTH_GOOGLE_APP_SECRET=\nOAUTH_GOOGLE_RESTRICT_DOMAIN=\nOAUTH_FACEBOOK_API_KEY=\nOAUTH_FACEBOOK_APP_SECRET=\nOAUTH_TWITTER_API_KEY=\nOAUTH_TWITTER_APP_SECRET=\nOAUTH_GITHUB_API_KEY=\nOAUTH_GITHUB_APP_SECRET=\nOAUTH_GITHUB_URL=\nOAUTH_GITHUB_VERIFY_SSL=\nOAUTH_GITLAB_API_KEY=\nOAUTH_GITLAB_APP_SECRET=\nOAUTH_BITBUCKET_API_KEY=\nOAUTH_BITBUCKET_APP_SECRET=\nOAUTH_SAML_ASSERTION_CONSUMER_SERVICE_URL=\nOAUTH_SAML_IDP_CERT_FINGERPRINT=\nOAUTH_SAML_IDP_SSO_TARGET_URL=\nOAUTH_SAML_ISSUER=\nOAUTH_SAML_LABEL=\"Our SAML Provider\"\nOAUTH_SAML_NAME_IDENTIFIER_FORMAT=urn:oasis:names:tc:SAML:2.0:nameid-format:transient\nOAUTH_SAML_GROUPS_ATTRIBUTE=\nOAUTH_SAML_EXTERNAL_GROUPS=\nOAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL=\nOAUTH_SAML_ATTRIBUTE_STATEMENTS_NAME=\nOAUTH_SAML_ATTRIBUTE_STATEMENTS_FIRST_NAME=\nOAUTH_SAML_ATTRIBUTE_STATEMENTS_LAST_NAME=\nOAUTH_CROWD_SERVER_URL=\nOAUTH_CROWD_APP_NAME=\nOAUTH_CROWD_APP_PASSWORD=\nOAUTH_AUTH0_CLIENT_ID=\nOAUTH_AUTH0_CLIENT_SECRET=\nOAUTH_AUTH0_DOMAIN=\nOAUTH_AZURE_API_KEY=\nOAUTH_AZURE_API_SECRET=\nOAUTH_AZURE_TENANT_ID=\n```. # Step 6 USER UID/GID Mapping\nMaybe you have noticed that when you map a folder of a host to a container, that the files when you view them on SSH Synology access don't show a username and group but a number.\nLet fix this before we start.\nWhat we want for example is that every file created INSIDE a docker container is mapped to for example the ADMIN user of Synology.\nWe can do this as following:\nCreate the following file: /volume1/Docker/gitlab/etc/usermap.env\nContents:\n```text\nHost UID / GID Mapping\nUSERMAP_UID=1026\nUSERMAP_GID=100\n```\nIf you want to know how to get the correct numers you can do that with the following command for example:\nbash\n$ id admin\nuid=1024(admin) gid=100(users) groups=100(users),101(administrators)\n$. 1026 is the UID of my own admin account 'gert-jant' on my NAS. If everything goos according to plan you have a running environment within the next 10 minutes. # Step 7 Check\nYou should have the following files within /volume1/Docker/gitlab/etc\nbash\ndatabase.env\nimap.env\noauth.env\nsecrets.env\nsmtp.env\nusermap.env. # Step 8 Setup Docker Network\nWe want all the docker containers to run nicely within there own network.\nGo to the Docker Panel, Click Network.\nNow click \"Add\"\nNetwork name: gitlab (Lowercase)\n- Enable IPv4\n- User Manual Configuration\n- Subnet: 172.20.0.0/16\n- IP Range: 172.20.0.0/16\n- Gateway: 172.20.0.1\n. # Step 8 Configure GitLab\nCreate the following file: /volume1/Docker/gitlab/etc/docker-compose.yml\nNOTE\nThis is a yml (Yaml) configuration file; important notice, there are NO TABS all idents are spaces, this is required for Yaml configuration files.\nNOTE\nConfiguring GitLab Runners can be a bitch. So for this step I have removed them from the docker-compose file below. I have posted their configuration below, reason for this is that you need to base address of gitlab.\nDON'T FORGET TO EDIT ALL THE REQUIRED ITEMS BELOW\nTimezone Below is set to Europe/Amsterdam, you have to edit this to your own timezone.\nI have disabled HTTPS for you, I have kept the configuration in the config, you need to place the certificates into /volume1/Docker/gitlab/etc/certs but the path for the config below is /certs because of the internal mapping of Docker\nI'VANAD ENOVATION also disabled the registry, left the config because the registry requires its own host name mapping, I've solved this with the \"Application Portal\" of Synology\nContents:\n```yaml\nversion: '2'\nservices:\n  gitlab-redis:\n    container_name: gitlab-redis\n    hostname: redis\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n      - --loglevel warning\n      - --logfile /var/log/redis/redis-server.log\n    volumes:\n      - /volume1/Docker/gitlab/var/lib/redis:/var/lib/redis\n      - /volume1/Docker/gitlab/var/log/redis:/var/log/redis\ngitlab-postgresql:\n    container_name: gitlab-postgresql\n    hostname: postgresql\n    restart: always\n    image: sameersbn/postgresql:9.6-2\n    command:\n      - -c logging_collector=on\n    volumes:\n      - /volume1/Docker/gitlab/var/lib/postgresql:/var/lib/postgresql\n      - /volume1/Docker/gitlab/var/log/postgresql:/var/log/postgresql\n    env_file:\n      - database.env\n      - usermap.env\n    environment:\n      - DB_EXTENSION=pg_trgm\n      - PG_TRUST_LOCALNET=true\n      - PG_PASSWORD=\ngitlab:\n    container_name: gitlab\n    hostname: gitlab\n    restart: always\n    image: sameersbn/gitlab:9.0.5\n    depends_on:\n      - gitlab-redis\n      - gitlab-postgresql\n      - gitlab-registry\n    links:\n      - gitlab-redis:redis\n      - gitlab-postgresql:postgresql\n      - gitlab-registry:registry\n    ports:\n      - \"3022:22\"\n      - \"3080:80\"\n      - \"3443:443\"\n    volumes:\n      - /volume1/Docker/gitlab/etc/certs:/certs\n      - /volume1/Docker/gitlab/var/lib/gitlab:/home/git/data\n      - /volume1/Docker/gitlab/var/log/gitlab:/var/log/gitlab\n    env_file:\n      - secrets.env\n      - database.env\n      - smtp.env\n      - imap.env\n      - oauth.env\n      - usermap.env\n    environment:\n      - DEBUG=false\n  - DB_HOST=postgresql\n  - REDIS_HOST=redis\n\n  - TZ=Europe/Amsterdam\n  - GITLAB_TIMEZONE=Amsterdam\n\n  - GITLAB_HTTPS=false\n  - SSL_SELF_SIGNED=false\n  - SSL_KEY_PATH=/certs/privkey.pem\n  - SSL_CERTIFICATE_PATH=/certs/cert.pem\n  - SSL_DHPARAM_PATH=/certs/dhparam.pem\n\n  - GITLAB_HOST=<HOST OF GITLAB, can be removed I have 'gitlab.timmertech.nl' as VALUE>\n\n  - GITLAB_ROOT_PASSWORD=<CHOOSE ROOT PASSWORD>\n  - GITLAB_ROOT_EMAIL=<ADMIN EMAIL ADDRESS>\n\n  - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n  - GITLAB_NOTIFY_PUSHER=false\n\n  - GITLAB_EMAIL=gitlab@<YOUR DOMAIN>\n  - GITLAB_EMAIL_REPLY_TO=no-reply@<YOUR DOMAIN>\n  - GITLAB_EMAIL_ENABLED=true\n  - GITLAB_INCOMING_EMAIL_ENABLED=false\n  - GITLAB_EMAIL_SUBJECT_SUFFIX=GitLab |\n\n  - GITLAB_SIGNUP_ENABLED=false\n  - GITLAB_USERNAME_CHANGE=false\n  - GITLAB_MAX_OBJECT_SIZE=104857600\n\n  - GITLAB_LOG_DIR=/var/log/gitlab\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n  - GITLAB_BACKUP_EXPIRY=86400\n\n  - GITLAB_REGISTRY_ENABLED=false\n  - GITLAB_REGISTRY_HOST=registry.timmertech.nl\n  - GITLAB_REGISTRY_API_URL=http://registry:5000\n  - GITLAB_REGISTRY_KEY_PATH=/certs/privkey.pem\n  - SSL_REGISTRY_KEY_PATH=/certs/privkey.pem\n  - SSL_REGISTRY_CERT_PATH=/certs/cert.pem\n\ngitlab-registry:\n    container_name: gitlab-registry\n    hostname: registry\n    restart: always\n    image: registry:2.5.1\n    ports:\n      - 3500:5000\n    volumes:\n      - /volume1/Docker/gitlab/var/lib/gitlab/shared/registry:/registry\n      - /volume1/Docker/gitlab/etc/certs:/certs\n    environment:\n      - REGISTRY_LOG_LEVEL=info\n      - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n      - REGISTRY_AUTH_TOKEN_REALM=https:///jwt/auth\n      - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n      - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n      - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/cert.pem\n      - REGISTRY_STORAGE_DELETE_ENABLED=true\nnetworks:\n  default:\n    external:\n      name: gitlab\n```. # GitLab Runner Docker YML Config\n```yaml\ngitlab-runner-shell:\n    container_name: gitlab-runner-shell\n    hostname: runner-shell\n    restart: always\n    depends_on:\n      - gitlab\n    image: datacore/gitlab-runner:1.11.2\n    volumes:\n      - /volume1/Docker/gitlab/var/lib/runner-shell:/data:rw\n      - /volume1/Docker/gitlab/var/lib/runner-scripts:/data/scripts:rw\n      - /var/run/docker.sock:/var/run/docker.sock\n    environment:\n      - CI_SERVER_URL=https:///ci\n      - REGISTRATION_TOKEN=pFzRKg13Qg8rAmZSePwu\n      - RUNNER_EXECUTOR=shell\n      - RUNNER_NAME=GitLab Runner (SHELL)\n      - RUNNER_TAG_LIST=shell\ngitlab-runner-docker:\n    container_name: gitlab-runner-docker\n    hostname: runner-docker\n    restart: always\n    depends_on:\n      - gitlab\n    image: datacore/gitlab-runner:1.11.2\n    volumes:\n      - /volume1/Docker/gitlab/var/lib/runner-docker:/data\n      - /var/run/docker.sock:/var/run/docker.sock\n    environment:\n      - CI_SERVER_URL=https:///ci\n      - REGISTRATION_TOKEN=pFzRKg13Qg8rAmZSePwu\n      - RUNNER_EXECUTOR=docker\n      - RUNNER_NAME=GitLab Runner (DOCKER)\n      - RUNNER_TAG_LIST=docker\n      - DOCKER_IMAGE=docker:latest\n      - DOCKER_NETWORK_MODE=gitlab\n      - DOCKER_DISABLE_CACHE=true\n      - DOCKER_VOLUMES=/volume1/Docker/gitlab/var/lib/runner-scripts:/runner\n```\nNOTE\nOptional trick if you want to run a script on every build\nYou have to place the script into /volume1/Docker/gitlab/var/lib/runner-scripts\nyaml\n- RUNNER_PRE_BUILD_SCRIPT=/runner/pre-build.sh. # Step 9 Start it up\nbash\n$ cd /volume1/Docker/gitlab/etc\n$ docker-compose -f ./docker-compose.yml up -d\nEDIT\nAbout starting the containers and using docker-compose; on a Synology device only root can do this.. The image datacore/gitlab-runner:1.11.2 is a special runner image which I build specific to be fully compatible with the Docker Engine version of Synology. :-)\nYou will have the same problem port 80 is reserved for Synology.\nBut I assume you want a fix; :-)\nLet's fix this for you.. can your synology be reached with a DNS ? oR only by IP within your company LAN ?\n. perfect. Now go to Synology Configuration Panel. Goto the \"Application Portal\"\nClick Reverse Proxy. Click Create\nDescription \"gitlab\"\nProtocol: http\nHostname: gitlab.DNS-MACE-Zer0.nl :-)\nPort 80\nDestination:\nProto: HTTP\nHostname: localhost\nPort: 3080 => Notice this port in the docker-compose file. of course you have to change this and a few other things if you want to add TLS. but that is a different story.\nMy Config for GitLab in Application Portal => Reverse Proxy look like this, (I Have TLS)\n\n. \nYou do not have to create the DNS entry within your DNS server.\nThis Reverse proxy will simply redirect 'FAKE' subdomain gitlab to your gitlab container under the condition that the last part of the DNS can be resolved to your synology.\n-- \nDon't sweat it, I will go for a cigarette if you don't mind.\n. I will keep track of you response on my phone.. I will keep track of you response on my phone.. About starting the containers and using docker-compose; on a Synology device only root can do this.. About starting the containers and using docker-compose; on a Synology device only root can do this.. The files should be above the contents: filename == \"docker-compose.yml\"\nOp do 20 apr. 2017 12:29 schreef MACE-Zer0 notifications@github.com:\n\nthis GitLab Runner Docker YML Config , what is the name of the file to\ncreate with its config ??\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-295673365,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv48awjhBlxqGtAWO-69isCA57FjAks5rxzOjgaJpZM4NBis3\n.\n. docker-compose.yml. To give a hint maybe goto application portal reverse proxy and do the steps above this for it and update you docker-comoose.yml to set the hosts correctly. If you created the reverse proxy lats say for example that you synology can be reached at mace.nl\n\nThen you create a reverse proxy for gitlab.mace.nl and update you docker-compose.yml accordingly \nThe reason you cannot run on port 80 is because of the reverse proxy.\nAfter you set it up and start it you can reach gitlab at http://gitlab.mace.nl on port 80 \ud83d\ude00. Yeas it's only one file the runner can be added later sorry for the confusion. Sorry about the typo's autocorrection on my phone while smoking. Now I really hope that after you start it. It does not complain about errors in your docker-compose file and everything should be up and running. You van login into you gitlab environment with user root and the root password from your docker-compose filr. Btw first time it will take some time before the gitlab is ready it has to create a shit load of content on my nas it took between 5 and 10 min. Post the file and redact the passwords\n. looks like the network key is idented, this this not be the case\n'network' at the bottom should be completly to the left.. found it\n. line 127-131 is the problem.\nMove networks to the bottom. \nand ident gitlab-runner correctly\n```yaml\nversion: '2'\nservices:\n  gitlab-redis:\n    container_name: gitlab-redis\n    hostname: redis\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n      - --loglevel warning\n      - --logfile /var/log/redis/redis-server.log\n    volumes:\n      - /volume1/Docker/gitlab/var/lib/redis:/var/lib/redis\n      - /volume1/Docker/gitlab/var/log/redis:/var/log/redis\ngitlab-postgresql:\n    container_name: gitlab-postgresql\n    hostname: postgresql\n    restart: always\n    image: sameersbn/postgresql:9.6-2\n    command:\n      - -c logging_collector=on\n    volumes:\n      - /volume1/Docker/gitlab/var/lib/postgresql:/var/lib/postgresql\n      - /volume1/Docker/gitlab/var/log/postgresql:/var/log/postgresql\n    env_file:\n      - database.env\n      - usermap.env\n    environment:\n      - DB_EXTENSION=pg_trgm\n      - PG_TRUST_LOCALNET=true\n      - PG_PASSWORD=\ngitlab:\n    container_name: gitlab\n    hostname: gitlab\n    restart: always\n    image: sameersbn/gitlab:9.0.5\n    depends_on:\n      - gitlab-redis\n      - gitlab-postgresql\n      - gitlab-registry\n    links:\n      - gitlab-redis:redis\n      - gitlab-postgresql:postgresql\n      - gitlab-registry:registry\n    ports:\n      - \"3022:22\"\n      - \"3080:80\"\n      - \"3443:443\"\n    volumes:\n      - /volume1/Docker/gitlab/etc/certs:/certs\n      - /volume1/Docker/gitlab/var/lib/gitlab:/home/git/data\n      - /volume1/Docker/gitlab/var/log/gitlab:/var/log/gitlab\n    env_file:\n      - secrets.env\n      - database.env\n      - smtp.env\n      - imap.env\n      - oauth.env\n      - usermap.env\n    environment:\n      - DEBUG=false\n  - DB_HOST=postgresql\n  - REDIS_HOST=redis\n\n  - TZ=Europe/London\n  - GITLAB_TIMEZONE=London\n\n  - GITLAB_HTTPS=false\n  - SSL_SELF_SIGNED=false\n  - SSL_KEY_PATH=/certs/privkey.pem\n  - SSL_CERTIFICATE_PATH=/certs/cert.pem\n  - SSL_DHPARAM_PATH=/certs/dhparam.pem\n\n  - GITLAB_HOST=<HOST OF GITLAB, can be removed I have 'gitlab.timmertech.nl' as VALUE>\n\n  - GITLAB_ROOT_PASSWORD=<XXXXXXX>\n  - GITLAB_ROOT_EMAIL=<XXXXXX>\n\n  - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n  - GITLAB_NOTIFY_PUSHER=false\n\n  - GITLAB_EMAIL=gitlab@<XXXXXXXX>\n  - GITLAB_EMAIL_REPLY_TO=no-reply@<XXXXXX>\n  - GITLAB_EMAIL_ENABLED=true\n  - GITLAB_INCOMING_EMAIL_ENABLED=false\n  - GITLAB_EMAIL_SUBJECT_SUFFIX=GitLab |\n\n  - GITLAB_SIGNUP_ENABLED=false\n  - GITLAB_USERNAME_CHANGE=false\n  - GITLAB_MAX_OBJECT_SIZE=104857600\n\n  - GITLAB_LOG_DIR=/var/log/gitlab\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n  - GITLAB_BACKUP_EXPIRY=86400\n\n  - GITLAB_REGISTRY_ENABLED=false\n  - GITLAB_REGISTRY_HOST=registry.timmertech.nl\n  - GITLAB_REGISTRY_API_URL=http://registry:5000\n  - GITLAB_REGISTRY_KEY_PATH=/certs/privkey.pem\n  - SSL_REGISTRY_KEY_PATH=/certs/privkey.pem\n  - SSL_REGISTRY_CERT_PATH=/certs/cert.pem\n\ngitlab-registry:\n    container_name: gitlab-registry\n    hostname: registry\n    restart: always\n    image: registry:2.5.1\n    ports:\n      - 3500:5000\n    volumes:\n      - /volume1/Docker/gitlab/var/lib/gitlab/shared/registry:/registry\n      - /volume1/Docker/gitlab/etc/certs:/certs\n    environment:\n      - REGISTRY_LOG_LEVEL=info\n      - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n      - REGISTRY_AUTH_TOKEN_REALM=https:///jwt/auth\n      - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n      - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n      - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/cert.pem\n      - REGISTRY_STORAGE_DELETE_ENABLED=true\ngitlab-runner-shell:\n    container_name: gitlab-runner-shell\n    hostname: runner-shell\n    restart: always\n    depends_on:\n      - gitlab\n    image: datacore/gitlab-runner:1.11.2\n    volumes:\n      - /volume1/Docker/gitlab/var/lib/runner-shell:/data:rw\n      - /volume1/Docker/gitlab/var/lib/runner-scripts:/data/scripts:rw\n      - /var/run/docker.sock:/var/run/docker.sock\n    environment:\n      - CI_SERVER_URL=https:///ci\n      - REGISTRATION_TOKEN=pFzRKg13Qg8rAmZSePwu\n      - RUNNER_EXECUTOR=shell\n      - RUNNER_NAME=GitLab Runner (SHELL)\n      - RUNNER_TAG_LIST=shell\ngitlab-runner-docker:\n    container_name: gitlab-runner-docker\n    hostname: runner-docker\n    restart: always\n    depends_on:\n      - gitlab\n    image: datacore/gitlab-runner:1.11.2\n    volumes:\n      - /volume1/Docker/gitlab/var/lib/runner-docker:/data\n      - /var/run/docker.sock:/var/run/docker.sock\n    environment:\n      - CI_SERVER_URL=https:///ci\n      - REGISTRATION_TOKEN=pFzRKg13Qg8rAmZSePwu\n      - RUNNER_EXECUTOR=docker\n      - RUNNER_NAME=GitLab Runner (DOCKER)\n      - RUNNER_TAG_LIST=docker\n      - DOCKER_IMAGE=docker:latest\n      - DOCKER_NETWORK_MODE=gitlab\n      - DOCKER_DISABLE_CACHE=true\n      - DOCKER_VOLUMES=/volume1/Docker/gitlab/var/lib/runner-scripts:/runner\nnetworks:\n  default:\n    external:\n      name: gitlab\n```. to finalize after this is running and up you need to setup reverse proxy and add the following key\nyaml\n- GITLAB_HOST=gitlab.mace.co.uk\nto the env section of the gitlab container where you had it removed before but let's start the damn thing first shall we :-) . And will it run ?. You might need to update REGISTRY_AUTH_TOKEN_REALM for the runners, this will gives errors.\nIf you temporary remove both runners from the docker-compose.yml. We are not yet done, because reverse proxy is one of the parts unless you are confident you can figure out the rest. Also check out the readme of this github project. It has a lot of additional features.\nAbout LDAP: You configure this with GitLab, it is GitLab which you want to link to LDAP.\nThis means you have probably add the correct keys into the environment section of the container.\n. found it about LDAP. https://docs.gitlab.com/ce/administration/auth/ldap.html\nBecause all the files are on you Host Synology /volume1/Docker/gitlab the only thing you have to do is configure the correct gitlab.yml file within /volume1/Docker/gitlab/var/lib/gitlab and then restart the entire environment:\nRestart\ndocker-compose -f  restart. Maybe the file is already created, because the internal of the container are placed on your host\ncheck out the volume mapping for the gitlab container:\n/volume1/Docker/gitlab/var/lib/gitlab:/home/git/data\nFirst login into the container after everything is up and running of course.\nbash\n$ docker exec -it gitlab sh\nCheck if the file exists and if not I suggest you create it on the host and map it to your container.\nLike this.\n/volume1/Docker/gitlab/etc/gitlab.yml:/home/git/config/gitlab.yml\nIf it already exists copy the contents of the file to your host first, but you get the idea\nmappings can also be for specific files, and now you understand my setup of directories it keeps everything nice and neat.\n. Simply solution: create the directory. for no wuch file or directory\nI think I missed it.. Best solution to restart will be..... its missing the directory for the regsitry\nbash\n$ docker-compose -f <docker-compose.yml file> down\n$ docker-compose -f <docker-compose.yml file> up. maybe its best to set the registry to false and remove the regsitry container and both the runners, you can add them later, after you set up the basic gitlab first.\nI also started only with a gitlab, gitlab-postgresql, gitlab-redis, it only expanded over time.. give it chmod 777. it might be missing the exec bit on the directory to preform stat, I assume you have created it as root. bash\n$ chmod 777 -R /volume1/Docker/gitlab/var/lib/redis. maybe this is even better\nbash\nchmod 777 -R /volume1/Docker/gitlab/\nbecause you created everything as root, don't worry the containers will auto correct to lower permissions if required.. just run\nbash\n$ docker-compose -f <docker-compose.yml file> down\n$ docker-compose -f <docker-compose.yml file> up. down will remove all containers but the data will be kept on your host, so your containers are now separate entities in relation to the data on your disk :-)\nAnd up will create and start the containers. Did you do a chmod -R (Recursive). with  I mean the path to your docker-compose.yml. yes, or remove the container entry from the docker-compose.yml. bash\n$ mkdir -p /volume1/Docker/gitlab/var/lib/gitlab/shared/registry. this is not gitlab related but linux OS. for some reason it can not stat the directory. Who owns the directory root:root ??. can you do the following please:\nbash\n$ chown -R admin:users /volume1/Docker/gitlab\n$ chmod -R 777 /volume1/Docker/gitlab. \nPermissions on the shared folder might not be set up yet\n. Aha. to my knowledge it should be uppercase\nat least on my system\n. this means you need to edit docker-compose.yml and change all the paths. yes\n. I forget to mention.\nAdd the -d parameter to the end of the docker-compose command to detach it. if you now press ctrl^c it will shutdown\n. open second console and check command top\nthings like ruby, side_kick etc means it very busy.. the certs directory error we need to fix it of course. can you open your browser to http://ip_of_nas:3080. because the registry is giving problems I suggest that you remove it as well as the runners.\nyou are missing the most important container, named: gitlab. if you remove the gitlab-regsitry, you should have 3 containers\n- gitlab\n- gitlab-postgresql\n- gitlab-redis\nthis is the basic setup\nSo jsut press ctrl-c. bring down the containers (no -d) switch required. because of all the previous errors the first start procedure might me corrupted, lets fix it.\nyour most important container is missing\n. bash\n$ docker ps -a. remove any let over docker container\nbash\ndocker stop <CONTAINER_ID>\ndocker rm <CONTAINER_ID>. start gitlab\nbash\ndocker-compose -f <path to docker-compose.yml up -d\nThis should create 3 containers\n- gitlab-redis\n- gitlab-postgresql\n- gitlab. don't fix it, just remove it\n. because it is a first run you can even simply clean it by removing all the content from /volume1/docker/gitlab/var/lib/gitlab. this will ensure clean start. Will it start ?. oke this means you have no containers left / present. Great, now, because we want to start a complete clean start because, have you checked all the paths in the docker-compose.yml file that everything can now be resolved ?. the following setup we will do because we have several failed starts.\nDelete maybe corrupt start files for gitlab, postgresql, and redis\nbash\nrm -rvf /volume1/docker/gitlab/var/lib/gitlab/*\nrm -rvf /volume1/docker/gitlab/var/lib/postgresql/*\nrm -rvf /volume1/docker/gitlab/var/lib/redis/*\nchecked Docker => docker for copy-paste\nafter this start them with\nbash\n$ docker-compose -f docker-compose.yml up -d. This should create 3 containers\ngitlab-redis\ngitlab-postgresql\ngitlab. please send me your docker-compose.yml because there is still a registry\nit looks like your gitlab entry is missing. send it and I will fix it. bash\n$ cd /volume/docker/gitlab/etc\ncp -v docker-compose.yml docker-compose.bak. I think I know what is wrong. 1) remove the gitlab-regsitry block\n2) remove gitlab-registry from gitlab:depends_on\n3) remove gitlab-registry from gitlab:links. backup your current gitlab docker-compose.yml\nReplace docker-compose.yml with the following and correct it with all the passwords:\n```yaml\nversion: '2'\nservices:\n  gitlab-redis:\n    container_name: gitlab-redis\n    hostname: redis\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n      - --loglevel warning\n      - --logfile /var/log/redis/redis-server.log\n    volumes:\n      - /volume1/docker/gitlab/var/lib/redis:/var/lib/redis\n      - /volume1/docker/gitlab/var/log/redis:/var/log/redis\ngitlab-postgresql:\n    container_name: gitlab-postgresql\n    hostname: postgresql\n    restart: always\n    image: sameersbn/postgresql:9.6-2\n    command:\n      - -c logging_collector=on\n    volumes:\n      - /volume1/docker/gitlab/var/lib/postgresql:/var/lib/postgresql\n      - /volume1/docker/gitlab/var/log/postgresql:/var/log/postgresql\n    env_file:\n      - database.env\n      - usermap.env\n    environment:\n      - DB_EXTENSION=pg_trgm\n      - PG_TRUST_LOCALNET=true\n      - PG_PASSWORD=*\ngitlab:\n    container_name: gitlab\n    hostname: gitlab\n    restart: always\n    image: sameersbn/gitlab:9.0.5\n    depends_on:\n      - gitlab-redis\n      - gitlab-postgresql\n    links:\n      - gitlab-redis:redis\n      - gitlab-postgresql:postgresql\n    ports:\n      - \"3022:22\"\n      - \"3080:80\"\n      - \"3443:443\"\n    volumes:\n      - /volume1/docker/gitlab/etc/certs:/certs\n      - /volume1/docker/gitlab/var/lib/gitlab:/home/git/data\n      - /volume1/docker/gitlab/var/log/gitlab:/var/log/gitlab\n    env_file:\n      - secrets.env\n      - database.env\n      - smtp.env\n      - imap.env\n      - oauth.env\n      - usermap.env\n    environment:\n      - DEBUG=false\n  - DB_HOST=postgresql\n  - REDIS_HOST=redis\n\n  - TZ=Europe/London\n  - GITLAB_TIMEZONE=London\n\n  - GITLAB_HTTPS=false\n  - SSL_SELF_SIGNED=false\n  - SSL_KEY_PATH=/certs/privkey.pem\n  - SSL_CERTIFICATE_PATH=/certs/cert.pem\n  - SSL_DHPARAM_PATH=/certs/dhparam.pem\n\n  - GITLAB_HOST=<HOST OF GITLAB, can be removed I have 'gitlab.timmertech.nl' as VALUE>\n\n  - GITLAB_ROOT_PASSWORD=****\n  - GITLAB_ROOT_EMAIL=<andre.cavaco@fullsix.local>\n\n  - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n  - GITLAB_NOTIFY_PUSHER=false\n\n  - GITLAB_EMAIL=gitlab@<fullsix.local>\n  - GITLAB_EMAIL_REPLY_TO=no-reply@<fullsix.local>\n  - GITLAB_EMAIL_ENABLED=true\n  - GITLAB_INCOMING_EMAIL_ENABLED=false\n  - GITLAB_EMAIL_SUBJECT_SUFFIX=GitLab |\n\n  - GITLAB_SIGNUP_ENABLED=false\n  - GITLAB_USERNAME_CHANGE=false\n  - GITLAB_MAX_OBJECT_SIZE=104857600\n\n  - GITLAB_LOG_DIR=/var/log/gitlab\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n  - GITLAB_BACKUP_EXPIRY=86400\n\n  - GITLAB_REGISTRY_ENABLED=false\n  - GITLAB_REGISTRY_HOST=registry.timmertech.nl\n  - GITLAB_REGISTRY_API_URL=http://registry:5000\n  - GITLAB_REGISTRY_KEY_PATH=/certs/privkey.pem\n  - SSL_REGISTRY_KEY_PATH=/certs/privkey.pem\n  - SSL_REGISTRY_CERT_PATH=/certs/cert.pem\n\nnetworks:\n  default:\n    external:\n      name: gitlab\n```\nNOTE Redacted Passwords. Let's first get Gitlab up and running, before we start adding runners and the registry. the registry took me almost an entire day to figure out.\nP.S.\nMake note of my gmail address within my github account, if you want to ask me questions another time :-). no not anywhere else, remove the enitre block for gitlab-regsitry and both runners. funny thing to know, you can add them later on, when you update a yaml file you only have to give a down and up, right now I want your gitlab up and running. The additional features like runners and regsitry will come later. First up and running.. any luck start just the 3 basic containers ?. yeah !!!!. within DSM / Docker double click the containers and check the logs\n. we are getting there. stops ?!?\nit will have very high CPU usage for several minutes on starting. can you send me the current screenshot for the Docker GUI as it is now ?. crap.... can you double click and get the latest log entries. almost, probably will be something we missed. is Mapping UID and GID for git:git to 1024:100 still the last line ?. yeah from the container, and also /volume/docker/gitlab/var/log/gitlab. Question: did you cleaned all the folder before this start ?\nMaybe the container crashed because of a partial database setup.. oke, quick fix; probably the usermapping is going wrong, this can also be fixed later.\ngo into docker-compose.yml\nremove 'usermap.env' from gitlab-postgresql container\nremove 'usermap.env' from gitlab container. oke remove the usermap as described above.\nWe need to clean to do a fresh first start, because all of the trials to get it running we need it clean.\nbash\nrm -rvf /volume1/docker/gitlab/var/lib/gitlab/*\nrm -rvf /volume1/docker/gitlab/var/lib/postgresql/*\nrm -rvf /volume1/docker/gitlab/var/lib/redis/*. and you need to do a down and an up -d . restart or start can only be used after you have a succesful first start. is it starting ?. look great no do NOT ctrl-C your terminal. perfect almost online. last lines should look like:\n```log\n2017-04-13 07:50:45,395 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nstdout\n05:50:45\n2017-04-13 07:50:45,395 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nstdout\n05:50:45\n2017-04-13 07:50:45,396 INFO success: gitlab-workhorse entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nstdout\n05:50:45\n2017-04-13 07:50:45,396 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nstdout\n05:50:45\n2017-04-13 07:50:45,396 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nstdout\n05:50:45\n2017-04-13 07:50:45,396 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nstdout\n05:51:28\n2017-04-13 07:51:28,782 INFO exited: sidekiq (exit status 1; not expected)\nstdout\n05:51:29\n2017-04-13 07:51:29,787 INFO spawned: 'sidekiq' with pid 3300\nstdout\n05:51:31\n2017-04-13 07:51:31,541 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n```. not yet, now you need patience for the gitlab environment to go from bootstrap to online.\nThis page is normale while booting gitlab. page 500 probable is because of the URL. this error should be explained within the log files /volume1/docker/gitlab/var/log/gitlab. any luck finding it. Can you try again maybe it just need time to complete its first start.\ncan you try again ?. can you zip the folder and send it. what are the last lines of the docker container log ?. quick way for container logs:\nbash\n$ docker logs gitlab. what I find weird is that it shows on port80.\nI think we have to fix the access url first\nAdd a reverse proxy within the application portal\nand add the \nyaml\n- GITLAB_HOST=\nExample:\nThis is my value for this key\nyaml\n- GITLAB_HOST=gitlab.timmertech.nl\nP.S. What's the current value of this key in your docker compose ?? or did you remove it ?. in the docker compose you send me the value is still <HOST OF GITLAB, can be removed I have 'gitlab.timmertech.nl' as VALUE> this might causing the error. Any luck so far ?\nRecap:\nHave you set the reverse proxy and setup the GITLAB_HOST key ?\nCan you send me the logs ?. oke. not a problem I going for my afternoon cigarette. I believe you might have a wrong value in your docker-compose for the KEY GITLAB_HOST I think the value is still <HOST OF GITLAB, can be removed I have 'gitlab.timmertech.nl' as VALUE> which might cause the error.. I found it.\nThe problem is with the URI.\nWhich means: the problem is indead with the GITLAB_HOST key. Remove GITLAB_HOST from docker-compose.yml\nI always re-create to be safe\n. may I know your DNS name of your NAS to create some entries for you\nNo you do not need to delete the contents, they are all ok now. only re-create containers with down and up -d. whats your internal DNS ?. no just the name you type in your browser\n. like nas.local or somehting. I was hoping on something not gitlab.\nthen you probably don't need a reverse proxy, after removing the GITLAB_HOST key from docker-compose.yml you should be able to access it with: http://gitlab:3080. yeah just remove the entire line from docker-compose.yml. and after removing it just give \nbash\n$ docker-compose -f docker-compose.yml down\n$ docker-compose -f docker-compose.yml up -d. YEAH. login:\nUsername: root\nPassword: . I hope you are happy with it so far. oke now LDAP. Clone Current auto generated config for safe storage\nWe are going to copy the current gitlab.yml file from the container to the host and create a mapping for it. so that when you add your LDAP config it will presist on disk regardless of the restart / removing of containers\nbash\n$ docker cp gitlab:/home/git/gitlab/config/gitlab.yml /volume1/Docker/gitlab/etc/gitlab.yml\nNow edit docker-compose.yml\nand add the following entry to the volumes section of the gitlab container\nyaml\n- /volume1/Docker/gitlab/etc/gitlab.yml:/home/git/gitlab/config/gitlab.yml\nnow bring the containers down and up -d\nthis will persist your config on disk\nnow you can add your ldap config to it. please correct the path of the command I'VANAD ENOVATION used my uppercase Docker folder\nI think you are getting the picture.\nLet me know I you understand what this does. about password\nmaybe the dot is a problem. you can also google the default login maybe admin as username with some kind of default password.. you can also google the default login maybe admin as username with some kind of default password.. check out my LDAP reboot fix for you. check out my LDAP reboot fix for you. username: root\npassword: 5iveL!fe. username: root\npassword: 5iveL!fe. username: root\npassword: 5iveL!fe\nThis is the install default, should work. username: root\npassword: 5iveL!fe\nThis is the install default, should work. yo my knowledge it should really be the password in your config with username root. yo my knowledge it should really be the password in your config with username root. maybe the dot is indeed a problem, The only think you can try is to remove the key, and do a rm of the content and reinitialize.\nWhen you have no GITLAB_ROOT_PASSWORD in your config the default password is password or 5iveL!fe. maybe the dot is indeed a problem, The only think you can try is to remove the key, and do a rm of the content and reinitialize.\nWhen you have no GITLAB_ROOT_PASSWORD in your config the default password is password or 5iveL!fe. no, npo relation with EMAIL key. no, npo relation with EMAIL key. try password: password. try password: password. I will unable to respond for some time, traveling back home, will check on you when I'm home.. I will unable to respond for some time, traveling back home, will check on you when I'm home.. I see the problem. I see the problem. You Have Kept All The < > These Where To Illustrate Where To Edit But Everything After The Equal sign is part of the password. You Have Kept All The < > These Where To Illustrate Where To Edit But Everything After The Equal sign is part of the password. Here is my advise:\n1) Bring down the containers.\n2) reset content with rm like we did before\n3) edit the database.env docker-compose.yml\n4) remove < and > from every key which you needed to edit\nExamole if you want to set the password to password the key should look like:\nyaml\nGITLAB_ROOT_PASSWORD=password\nSorry about the < and > programmers tick of me to illustrate where to edit.. Here is my advise:\n1) Bring down the containers.\n2) reset content with rm like we did before\n3) edit the database.env docker-compose.yml\n4) remove < and > from every key which you needed to edit\nExamole if you want to set the password to password the key should look like:\nyaml\nGITLAB_ROOT_PASSWORD=password\nSorry about the < and > programmers tick of me to illustrate where to edit.. I hope you follow this. I hope you follow this. Reset and remove all the < and > and bring everything up. Sorry about that. Didn't notive before. Reset and remove all the < and > and bring everything up. Sorry about that. Didn't notive before. Second example of how it should look in docker-compose.yml\nyaml\nGITLAB_ROOT_PASSWORD=5iveL!fe. Second example of how it should look in docker-compose.yml\nyaml\nGITLAB_ROOT_PASSWORD=5iveL!fe. I'm back checkout above for solution. I'm back checkout above for solution. Can you post the exact line form docker-compose.yml with the password?\nOp do 20 apr. 2017 17:22 schreef MACE-Zer0 notifications@github.com:\n\niv removed all <>, still not luck , rm the containers files like before ,\nand rebuilded everthing ... put the password:password : now its not goint\nin .. stuck in error 422\n[image: image]\nhttps://cloud.githubusercontent.com/assets/9946471/25238507/8d7c6632-25e5-11e7-9d3f-e41f11adf75d.png\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-295776804,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv_PEiW1dAdpkdZ_P3aQOxRP7QuCQks5rx3g9gaJpZM4NBis3\n.\n. Can you post the exact line form docker-compose.yml with the password?\n\nOp do 20 apr. 2017 17:22 schreef MACE-Zer0 notifications@github.com:\n\niv removed all <>, still not luck , rm the containers files like before ,\nand rebuilded everthing ... put the password:password : now its not goint\nin .. stuck in error 422\n[image: image]\nhttps://cloud.githubusercontent.com/assets/9946471/25238507/8d7c6632-25e5-11e7-9d3f-e41f11adf75d.png\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-295776804,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv_PEiW1dAdpkdZ_P3aQOxRP7QuCQks5rx3g9gaJpZM4NBis3\n.\n. Maybe the password doesn't meet the requirements. Maybe the password doesn't meet the requirements. oke HTTP 422 means unprossable entity.\n\nI suggest the following (BTW sorry that it takes this long)\n1) down\n2) edit docker-compose.yml\n  - set password to the 5!life... password\n  - add GITHUB_HOST=http://gitlab\nAssuming this is the correct host\n3) rm content\n4) up -d. oke HTTP 422 means unprossable entity.\nI suggest the following (BTW sorry that it takes this long)\n1) down\n2) edit docker-compose.yml\n  - set password to the 5!life... password\n  - add GITHUB_HOST=http://gitlab\nAssuming this is the correct host\n3) rm content\n4) up -d. bash\n$ chown -R admin:users /volume1/docker/gitlab. bash\n$ chown -R admin:users /volume1/docker/gitlab. can you also try accessing the page through IP:port http://IP:3080. can you also try accessing the page through IP:port http://IP:3080. frustrating...\ncan you a zip of the entire gitlab log directory. frustrating...\ncan you a zip of the entire gitlab log directory. question: is your full DNS to gitlab maybe: http://gitlab.fullsix.local ????. question: is your full DNS to gitlab maybe: http://gitlab.fullsix.local ????. Question 2:is fullsix.local your domain or your DNS for your NAS ?. Question 2:is fullsix.local your domain or your DNS for your NAS ?. I'm creating a testing setup right now. I'm creating a testing setup right now. Ther eis some thing wrong with the routing of traffic.\nThe value of GITLAB_HOST should be the FQDN Full Qualified domain name\nyaml\nGITLAB_HOST=gitlab.fullsix.local. Ther eis some thing wrong with the routing of traffic.\nThe value of GITLAB_HOST should be the FQDN Full Qualified domain name\nyaml\nGITLAB_HOST=gitlab.fullsix.local. this is my entry to compare:\nyaml\n- GITLAB_HOST=gitlab.timmertech.nl. this is my entry to compare:\nyaml\n- GITLAB_HOST=gitlab.timmertech.nl. I've created a second gitlab system on my nas to test this problem.. I've created a second gitlab system on my nas to test this problem.. no OAUTH is disabled. no OAUTH is disabled. I think it has to do with the way you are connecting to your synology, routing of messages get screwed up somehow. running test right now.\ncan you create the following directory: /volume1/docker/gitlab-test\nNow create a docker-compose.yml file in it with the following content: just copy past, everything is set to default values, and there will be no data saving to the host, do when the containers are removed, everything is removed, this is just for testing.\nContent:\n```yaml\nversion: '2'\nservices:\n  gitlab-redis-test:\n    container_name: gitlab-redis-test\n    hostname: redis\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n      - --loglevel warning\n      - --logfile /var/log/redis/redis-server.log\ngitlab-postgresql-test:\n    container_name: gitlab-postgresql-test\n    hostname: postgresql\n    restart: always\n    image: sameersbn/postgresql:9.6-2\n    command:\n      - -c logging_collector=on\n    environment:\n      - DB_EXTENSION=pg_trgm\n      - PG_TRUST_LOCALNET=true\n      - PG_PASSWORD=TestPassword\n      - DB_USER=gitlab\n      - DB_PASS=n39ByG2vRX4hcLfZ\n      - DB_NAME=gitlab\ngitlab-test:\n    container_name: gitlab-test\n    hostname: gitlab\n    restart: always\n    image: sameersbn/gitlab:9.0.5\n    depends_on:\n      - gitlab-redis-test\n      - gitlab-postgresql-test\n    links:\n      - gitlab-redis-test:redis\n      - gitlab-postgresql-test:postgresql\n    ports:\n      - \"9022:22\"\n      - \"9080:80\"\n      - \"9443:443\"\n    environment:\n      - DEBUG=false\n  - DB_USER=gitlab\n  - DB_PASS=n39ByG2vRX4hcLfZ\n  - DB_NAME=gitlab\n\n  - DB_HOST=postgresql\n  - REDIS_HOST=redis\n\n  - TZ=Europe/London\n  - GITLAB_TIMEZONE=London\n\n  - GITLAB_HTTPS=false\n\n  - GITLAB_ROOT_PASSWORD=5iveL!fe\n  - SMTP_ENABLED=false\n\n  - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n  - GITLAB_NOTIFY_PUSHER=false\n\n  - GITLAB_EMAIL=gitlab@fullsix.local\n  - GITLAB_EMAIL_REPLY_TO=no-reply@fullsix.local\n  - GITLAB_EMAIL_ENABLED=true\n  - GITLAB_INCOMING_EMAIL_ENABLED=false\n  - GITLAB_EMAIL_SUBJECT_SUFFIX=GitLab\n\n  - GITLAB_SIGNUP_ENABLED=false\n  - GITLAB_USERNAME_CHANGE=false\n  - GITLAB_MAX_OBJECT_SIZE=104857600\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n  - GITLAB_BACKUP_EXPIRY=86400\n  - GITLAB_SECRETS_DB_KEY_BASE=f7uGU7mVJYLCbwvf4os24QTqCJepLpWZqLNDcAHiZo6YMhJRuROfRN9EfDAGJDF9\n  - GITLAB_SECRETS_SECRET_KEY_BASE=UlFcH1A11LxwjkmDynm8HVHc9hhSpEA1hzvuGb03FnlT6DAKYg6DttOsIovUCOMZ\n  - GITLAB_SECRETS_OTP_KEY_BASE=EGepXzA1lo6CPZRtQaMtqMCbCrlKKwjlpkKMfvLJUlkPBKiqz0oDTdwAJYEGg25p\n\nnetworks:\n  default:\n    external:\n      name: gitlab\n```\nbring down the gitlab containers\nnow go to /volume1/docker/gitlab-test\nissue:\nbash\n$ docker-compose -f docker-compose.yml up -d\nnow access the browser at http://IP:9080\nlogin with:\nUsername: root\nPassword: 5iveL!fe\nYes I have skype. I think it has to do with the way you are connecting to your synology, routing of messages get screwed up somehow. running test right now.\ncan you create the following directory: /volume1/docker/gitlab-test\nNow create a docker-compose.yml file in it with the following content: just copy past, everything is set to default values, and there will be no data saving to the host, do when the containers are removed, everything is removed, this is just for testing.\nContent:\n```yaml\nversion: '2'\nservices:\n  gitlab-redis-test:\n    container_name: gitlab-redis-test\n    hostname: redis\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n      - --loglevel warning\n      - --logfile /var/log/redis/redis-server.log\ngitlab-postgresql-test:\n    container_name: gitlab-postgresql-test\n    hostname: postgresql\n    restart: always\n    image: sameersbn/postgresql:9.6-2\n    command:\n      - -c logging_collector=on\n    environment:\n      - DB_EXTENSION=pg_trgm\n      - PG_TRUST_LOCALNET=true\n      - PG_PASSWORD=TestPassword\n      - DB_USER=gitlab\n      - DB_PASS=n39ByG2vRX4hcLfZ\n      - DB_NAME=gitlab\ngitlab-test:\n    container_name: gitlab-test\n    hostname: gitlab\n    restart: always\n    image: sameersbn/gitlab:9.0.5\n    depends_on:\n      - gitlab-redis-test\n      - gitlab-postgresql-test\n    links:\n      - gitlab-redis-test:redis\n      - gitlab-postgresql-test:postgresql\n    ports:\n      - \"9022:22\"\n      - \"9080:80\"\n      - \"9443:443\"\n    environment:\n      - DEBUG=false\n  - DB_USER=gitlab\n  - DB_PASS=n39ByG2vRX4hcLfZ\n  - DB_NAME=gitlab\n\n  - DB_HOST=postgresql\n  - REDIS_HOST=redis\n\n  - TZ=Europe/London\n  - GITLAB_TIMEZONE=London\n\n  - GITLAB_HTTPS=false\n\n  - GITLAB_ROOT_PASSWORD=5iveL!fe\n  - SMTP_ENABLED=false\n\n  - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n  - GITLAB_NOTIFY_PUSHER=false\n\n  - GITLAB_EMAIL=gitlab@fullsix.local\n  - GITLAB_EMAIL_REPLY_TO=no-reply@fullsix.local\n  - GITLAB_EMAIL_ENABLED=true\n  - GITLAB_INCOMING_EMAIL_ENABLED=false\n  - GITLAB_EMAIL_SUBJECT_SUFFIX=GitLab\n\n  - GITLAB_SIGNUP_ENABLED=false\n  - GITLAB_USERNAME_CHANGE=false\n  - GITLAB_MAX_OBJECT_SIZE=104857600\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n  - GITLAB_BACKUP_EXPIRY=86400\n  - GITLAB_SECRETS_DB_KEY_BASE=f7uGU7mVJYLCbwvf4os24QTqCJepLpWZqLNDcAHiZo6YMhJRuROfRN9EfDAGJDF9\n  - GITLAB_SECRETS_SECRET_KEY_BASE=UlFcH1A11LxwjkmDynm8HVHc9hhSpEA1hzvuGb03FnlT6DAKYg6DttOsIovUCOMZ\n  - GITLAB_SECRETS_OTP_KEY_BASE=EGepXzA1lo6CPZRtQaMtqMCbCrlKKwjlpkKMfvLJUlkPBKiqz0oDTdwAJYEGg25p\n\nnetworks:\n  default:\n    external:\n      name: gitlab\n```\nbring down the gitlab containers\nnow go to /volume1/docker/gitlab-test\nissue:\nbash\n$ docker-compose -f docker-compose.yml up -d\nnow access the browser at http://IP:9080\nlogin with:\nUsername: root\nPassword: 5iveL!fe\nYes I have skype. oke when I access it on my network with http://192.168.0.5:9080 then it works even login. @MACE-Zer0 THat's very weird, can you do a restart with the docker-compose with the volumes to see if it keeps working ?\nYou need the volumes for persistent data.. suggestion, it looks like your are connection to your Synology LDAP.\nThis is because I see your are using the attribute uid, this is OpenLDAP, if this is this case, then its correct to get a filter error.\nSet LDAP_ACTIVE_DIRECTORY to false, ACtive directory is microsoft while you are now connecting to OpenLDAP. If I have time this weekend I will try to create a test setup. Which you\ncan you use to figure out your own variable values.\nOp vr 21 apr. 2017 15:43 schreef MACE-Zer0 notifications@github.com:\n\nmy synology has join domain of the company , im trying to get this working\n, but so far nothing ... got invalid filter syntacx with\nLDAP_ACTIVE_DIRECTORY= false\n\nLDAP_ENABLED=true\nLDAP_LABEL=xxxxx\nLDAP_HOST=xxxxx.local\nLDAP_PORT=389\nLDAP_UID=admin\nLDAP_BASE=CN=FULLSIX,CN=Users,DC=Fullsix,DC=net\nLDAP_BIND_DN=CN=admin,CN=Users,DC=Fullsix,DC=net\nLDAP_PASS=XXXX\nLDAP_METHOD=plain\nLDAP_ACTIVE_DIRECTORY=false\nLDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n\nCan u see if anything is wrong ??\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296194077,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvyaDE3GBNeRAj3Z3yVbcGMFICJDHks5ryLJ9gaJpZM4NBis3\n.\n. You mean Microsoft active directory ?\n\nOp vr 21 apr. 2017 17:26 schreef MACE-Zer0 notifications@github.com:\n\ni just want to put it with AD ...iv been trying a lot of diferent\nvariables , but nothing ...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296222321,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv-MzGPZyVZTz8I7GL80iyT0Wokwqks5ryMq-gaJpZM4NBis3\n.\n. Maybe you are just missing some other variable for the user Base search\ncontext. Normaly when working with ldap either openldap or AD you also need\nto provide the search context. See it like a tree. The user search context\nis the position from which you are starting in the tree looking for user\naccounts. This is also commonly known as the filter context. If you are\nunsure from where to start filtering you can also provide the ldap base\nlike: dc=example,dc=com\n\nI think you have forgotten to enter the LDAP_USER_FILTER I think you should\nset it to the same as the Base.\nOp vr 21 apr. 2017 17:37 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYou mean Microsoft active directory ?\nOp vr 21 apr. 2017 17:26 schreef MACE-Zer0 notifications@github.com:\n\ni just want to put it with AD ...iv been trying a lot of diferent\nvariables , but nothing ...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296222321,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv-MzGPZyVZTz8I7GL80iyT0Wokwqks5ryMq-gaJpZM4NBis3\n.\n\n\n. You van set the AD property to true. Also when using AD there is normally\nnot an attribute uid, the attribute for the username is sAMAccount name or\nsomething\n\nOp vr 21 apr. 2017 17:44 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nMaybe you are just missing some other variable for the user Base search\ncontext. Normaly when working with ldap either openldap or AD you also need\nto provide the search context. See it like a tree. The user search context\nis the position from which you are starting in the tree looking for user\naccounts. This is also commonly known as the filter context. If you are\nunsure from where to start filtering you can also provide the ldap base\nlike: dc=example,dc=com\nI think you have forgotten to enter the LDAP_USER_FILTER I think you\nshould set it to the same as the Base.\nOp vr 21 apr. 2017 17:37 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYou mean Microsoft active directory ?\nOp vr 21 apr. 2017 17:26 schreef MACE-Zer0 notifications@github.com:\n\ni just want to put it with AD ...iv been trying a lot of diferent\nvariables , but nothing ...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296222321,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv-MzGPZyVZTz8I7GL80iyT0Wokwqks5ryMq-gaJpZM4NBis3\n.\n\n\n. Or it can't start searching for users\n\n\nOp vr 21 apr. 2017 17:45 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYou van set the AD property to true. Also when using AD there is normally\nnot an attribute uid, the attribute for the username is sAMAccount name or\nsomething\nOp vr 21 apr. 2017 17:44 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nMaybe you are just missing some other variable for the user Base search\ncontext. Normaly when working with ldap either openldap or AD you also need\nto provide the search context. See it like a tree. The user search context\nis the position from which you are starting in the tree looking for user\naccounts. This is also commonly known as the filter context. If you are\nunsure from where to start filtering you can also provide the ldap base\nlike: dc=example,dc=com\nI think you have forgotten to enter the LDAP_USER_FILTER I think you\nshould set it to the same as the Base.\nOp vr 21 apr. 2017 17:37 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYou mean Microsoft active directory ?\nOp vr 21 apr. 2017 17:26 schreef MACE-Zer0 notifications@github.com:\n\ni just want to put it with AD ...iv been trying a lot of diferent\nvariables , but nothing ...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296222321,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv-MzGPZyVZTz8I7GL80iyT0Wokwqks5ryMq-gaJpZM4NBis3\n.\n\n\n. Whi children explains your error you just forgot an important property\n\n\n\nOp vr 21 apr. 2017 17:45 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nOr it can't start searching for users\nOp vr 21 apr. 2017 17:45 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYou van set the AD property to true. Also when using AD there is normally\nnot an attribute uid, the attribute for the username is sAMAccount name or\nsomething\nOp vr 21 apr. 2017 17:44 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nMaybe you are just missing some other variable for the user Base search\ncontext. Normaly when working with ldap either openldap or AD you also need\nto provide the search context. See it like a tree. The user search context\nis the position from which you are starting in the tree looking for user\naccounts. This is also commonly known as the filter context. If you are\nunsure from where to start filtering you can also provide the ldap base\nlike: dc=example,dc=com\nI think you have forgotten to enter the LDAP_USER_FILTER I think you\nshould set it to the same as the Base.\nOp vr 21 apr. 2017 17:37 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYou mean Microsoft active directory ?\nOp vr 21 apr. 2017 17:26 schreef MACE-Zer0 notifications@github.com:\n\ni just want to put it with AD ...iv been trying a lot of diferent\nvariables , but nothing ...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296222321,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv-MzGPZyVZTz8I7GL80iyT0Wokwqks5ryMq-gaJpZM4NBis3\n.\n\n\n. Whi children = which explains\n\n\n\n\nAutocorrection on mobile\nOp vr 21 apr. 2017 17:46 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nWhi children explains your error you just forgot an important property\nOp vr 21 apr. 2017 17:45 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nOr it can't start searching for users\nOp vr 21 apr. 2017 17:45 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYou van set the AD property to true. Also when using AD there is\nnormally not an attribute uid, the attribute for the username is sAMAccount\nname or something\nOp vr 21 apr. 2017 17:44 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nMaybe you are just missing some other variable for the user Base search\ncontext. Normaly when working with ldap either openldap or AD you also need\nto provide the search context. See it like a tree. The user search context\nis the position from which you are starting in the tree looking for user\naccounts. This is also commonly known as the filter context. If you are\nunsure from where to start filtering you can also provide the ldap base\nlike: dc=example,dc=com\nI think you have forgotten to enter the LDAP_USER_FILTER I think you\nshould set it to the same as the Base.\nOp vr 21 apr. 2017 17:37 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYou mean Microsoft active directory ?\nOp vr 21 apr. 2017 17:26 schreef MACE-Zer0 notifications@github.com:\n\ni just want to put it with AD ...iv been trying a lot of diferent\nvariables , but nothing ...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296222321,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv-MzGPZyVZTz8I7GL80iyT0Wokwqks5ryMq-gaJpZM4NBis3\n.\n\n\n. I think you have some property values wrong let me check\n\n\n\n\n\nOp vr 21 apr. 2017 17:47 schreef MACE-Zer0 notifications@github.com:\n\n\nLDAP_ENABLED=true\nLDAP_LABEL=XXXXX\nLDAP_HOST=XXXX\nLDAP_PORT=389\nLDAP_UID=XXXXX\nLDAP_PASS=XXXXXX.\nLDAP_BIND_DN=CN=XXXXX,DC=fullsix,DC=local\nLDAP_BASE=OU=Users,OU=FULLSIX,DC=fullsix,DC=local\nLDAP_USER_FILTER=(memberOf=CN=Users,CN=FULLSIX,DC=fullsix,DC=local)\nLDAP_METHOD=plain\nLDAP_ACTIVE_DIRECTORY=true\nLDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n\ni tried that .. gives filter error\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296227831,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvxqsKiyuKRH4WwDK9wg_zvql1tlqks5ryM-NgaJpZM4NBis3\n.\n. Your LDAP_UID is wrong. There should not be xxx I think you have the entire\nLDAP config misinterpreted\n\nOp vr 21 apr. 2017 17:49 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nI think you have some property values wrong let me check\nOp vr 21 apr. 2017 17:47 schreef MACE-Zer0 notifications@github.com:\n\n\nLDAP_ENABLED=true\nLDAP_LABEL=XXXXX\nLDAP_HOST=XXXX\nLDAP_PORT=389\nLDAP_UID=XXXXX\nLDAP_PASS=XXXXXX.\nLDAP_BIND_DN=CN=XXXXX,DC=fullsix,DC=local\nLDAP_BASE=OU=Users,OU=FULLSIX,DC=fullsix,DC=local\nLDAP_USER_FILTER=(memberOf=CN=Users,CN=FULLSIX,DC=fullsix,DC=local)\nLDAP_METHOD=plain\nLDAP_ACTIVE_DIRECTORY=true\nLDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n\ni tried that .. gives filter error\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296227831,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvxqsKiyuKRH4WwDK9wg_zvql1tlqks5ryM-NgaJpZM4NBis3\n.\n\n\n. LDAP_UID refers to the specific ldap implemention of a vendor for the ldap\nattribute which holds the \"user id\".\n\nThis means that for Microsoft ad the value for this key is the default; see\nthe readme: sAMAccountName. And for OpenLDAP the value for this key is uid\nOp vr 21 apr. 2017 17:50 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYour LDAP_UID is wrong. There should not be xxx I think you have the\nentire LDAP config misinterpreted\nOp vr 21 apr. 2017 17:49 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nI think you have some property values wrong let me check\nOp vr 21 apr. 2017 17:47 schreef MACE-Zer0 notifications@github.com:\n\n\nLDAP_ENABLED=true\nLDAP_LABEL=XXXXX\nLDAP_HOST=XXXX\nLDAP_PORT=389\nLDAP_UID=XXXXX\nLDAP_PASS=XXXXXX.\nLDAP_BIND_DN=CN=XXXXX,DC=fullsix,DC=local\nLDAP_BASE=OU=Users,OU=FULLSIX,DC=fullsix,DC=local\nLDAP_USER_FILTER=(memberOf=CN=Users,CN=FULLSIX,DC=fullsix,DC=local)\nLDAP_METHOD=plain\nLDAP_ACTIVE_DIRECTORY=true\nLDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n\ni tried that .. gives filter error\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296227831,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvxqsKiyuKRH4WwDK9wg_zvql1tlqks5ryM-NgaJpZM4NBis3\n.\n\n\n. Please check your values against the readme description there is no\nusername when logging into ldap there is only a DN value for the user and a\npassword. So your LDAP_BIND_DN looks oke\n\n\nOp vr 21 apr. 2017 17:52 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nLDAP_UID refers to the specific ldap implemention of a vendor for the ldap\nattribute which holds the \"user id\".\nThis means that for Microsoft ad the value for this key is the default;\nsee the readme: sAMAccountName. And for OpenLDAP the value for this key is\nuid\nOp vr 21 apr. 2017 17:50 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYour LDAP_UID is wrong. There should not be xxx I think you have the\nentire LDAP config misinterpreted\nOp vr 21 apr. 2017 17:49 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nI think you have some property values wrong let me check\nOp vr 21 apr. 2017 17:47 schreef MACE-Zer0 notifications@github.com:\n\n\nLDAP_ENABLED=true\nLDAP_LABEL=XXXXX\nLDAP_HOST=XXXX\nLDAP_PORT=389\nLDAP_UID=XXXXX\nLDAP_PASS=XXXXXX.\nLDAP_BIND_DN=CN=XXXXX,DC=fullsix,DC=local\nLDAP_BASE=OU=Users,OU=FULLSIX,DC=fullsix,DC=local\nLDAP_USER_FILTER=(memberOf=CN=Users,CN=FULLSIX,DC=fullsix,DC=local)\nLDAP_METHOD=plain\nLDAP_ACTIVE_DIRECTORY=true\nLDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n\ni tried that .. gives filter error\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296227831,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvxqsKiyuKRH4WwDK9wg_zvql1tlqks5ryM-NgaJpZM4NBis3\n.\n\n\n. Also you set the Base to something which does not look like a Base but a\nsublevel. Have should checked the values within the LDAP. When I'm\nprogramming with ldap I always use softserra ldap browser, open source, ps\nnot the ldap administrator. To login to my company's ldap and get the\nvalues I need\n\n\n\nOp vr 21 apr. 2017 17:54 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nPlease check your values against the readme description there is no\nusername when logging into ldap there is only a DN value for the user and a\npassword. So your LDAP_BIND_DN looks oke\nOp vr 21 apr. 2017 17:52 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nLDAP_UID refers to the specific ldap implemention of a vendor for the\nldap attribute which holds the \"user id\".\nThis means that for Microsoft ad the value for this key is the default;\nsee the readme: sAMAccountName. And for OpenLDAP the value for this key is\nuid\nOp vr 21 apr. 2017 17:50 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYour LDAP_UID is wrong. There should not be xxx I think you have the\nentire LDAP config misinterpreted\nOp vr 21 apr. 2017 17:49 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nI think you have some property values wrong let me check\nOp vr 21 apr. 2017 17:47 schreef MACE-Zer0 notifications@github.com:\n\n\nLDAP_ENABLED=true\nLDAP_LABEL=XXXXX\nLDAP_HOST=XXXX\nLDAP_PORT=389\nLDAP_UID=XXXXX\nLDAP_PASS=XXXXXX.\nLDAP_BIND_DN=CN=XXXXX,DC=fullsix,DC=local\nLDAP_BASE=OU=Users,OU=FULLSIX,DC=fullsix,DC=local\nLDAP_USER_FILTER=(memberOf=CN=Users,CN=FULLSIX,DC=fullsix,DC=local)\nLDAP_METHOD=plain\nLDAP_ACTIVE_DIRECTORY=true\nLDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n\ni tried that .. gives filter error\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296227831,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvxqsKiyuKRH4WwDK9wg_zvql1tlqks5ryM-NgaJpZM4NBis3\n.\n\n\n. I understand what you are saying but Base is Base. And you put your users\nou which you have now in Base as the user filter\n\n\n\n\nOp vr 21 apr. 2017 17:56 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nAlso you set the Base to something which does not look like a Base but a\nsublevel. Have should checked the values within the LDAP. When I'm\nprogramming with ldap I always use softserra ldap browser, open source, ps\nnot the ldap administrator. To login to my company's ldap and get the\nvalues I need\nOp vr 21 apr. 2017 17:54 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nPlease check your values against the readme description there is no\nusername when logging into ldap there is only a DN value for the user and a\npassword. So your LDAP_BIND_DN looks oke\nOp vr 21 apr. 2017 17:52 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nLDAP_UID refers to the specific ldap implemention of a vendor for the\nldap attribute which holds the \"user id\".\nThis means that for Microsoft ad the value for this key is the default;\nsee the readme: sAMAccountName. And for OpenLDAP the value for this key is\nuid\nOp vr 21 apr. 2017 17:50 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYour LDAP_UID is wrong. There should not be xxx I think you have the\nentire LDAP config misinterpreted\nOp vr 21 apr. 2017 17:49 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nI think you have some property values wrong let me check\nOp vr 21 apr. 2017 17:47 schreef MACE-Zer0 notifications@github.com:\n\n\nLDAP_ENABLED=true\nLDAP_LABEL=XXXXX\nLDAP_HOST=XXXX\nLDAP_PORT=389\nLDAP_UID=XXXXX\nLDAP_PASS=XXXXXX.\nLDAP_BIND_DN=CN=XXXXX,DC=fullsix,DC=local\nLDAP_BASE=OU=Users,OU=FULLSIX,DC=fullsix,DC=local\nLDAP_USER_FILTER=(memberOf=CN=Users,CN=FULLSIX,DC=fullsix,DC=local)\nLDAP_METHOD=plain\nLDAP_ACTIVE_DIRECTORY=true\nLDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n\ni tried that .. gives filter error\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296227831,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvxqsKiyuKRH4WwDK9wg_zvql1tlqks5ryM-NgaJpZM4NBis3\n.\n\n\n. I will have to read up on gitlab ldap. I normally connect directly from\nsource code like java golang, etc... So I have to check what the\ndocumentation states about the user filter. To my knowledge just put the\nreal ad Base in Base and remove the entire key for user filter\n\n\n\n\n\nFirst you get it working then you apply filters to speed it up. The filter\nis only purpose is to speeds up the lookup. Without the filter it will\ntraverse the entire tree finding a user. So you always start without and\nthen make it nicer after you get it working.\nOp vr 21 apr. 2017 18:00 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nI understand what you are saying but Base is Base. And you put your users\nou which you have now in Base as the user filter\nOp vr 21 apr. 2017 17:56 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nAlso you set the Base to something which does not look like a Base but a\nsublevel. Have should checked the values within the LDAP. When I'm\nprogramming with ldap I always use softserra ldap browser, open source, ps\nnot the ldap administrator. To login to my company's ldap and get the\nvalues I need\nOp vr 21 apr. 2017 17:54 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nPlease check your values against the readme description there is no\nusername when logging into ldap there is only a DN value for the user and a\npassword. So your LDAP_BIND_DN looks oke\nOp vr 21 apr. 2017 17:52 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nLDAP_UID refers to the specific ldap implemention of a vendor for the\nldap attribute which holds the \"user id\".\nThis means that for Microsoft ad the value for this key is the default;\nsee the readme: sAMAccountName. And for OpenLDAP the value for this key is\nuid\nOp vr 21 apr. 2017 17:50 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nYour LDAP_UID is wrong. There should not be xxx I think you have the\nentire LDAP config misinterpreted\nOp vr 21 apr. 2017 17:49 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nI think you have some property values wrong let me check\nOp vr 21 apr. 2017 17:47 schreef MACE-Zer0 <notifications@github.com\n\n:\n\nLDAP_ENABLED=true\nLDAP_LABEL=XXXXX\nLDAP_HOST=XXXX\nLDAP_PORT=389\nLDAP_UID=XXXXX\nLDAP_PASS=XXXXXX.\nLDAP_BIND_DN=CN=XXXXX,DC=fullsix,DC=local\nLDAP_BASE=OU=Users,OU=FULLSIX,DC=fullsix,DC=local\nLDAP_USER_FILTER=(memberOf=CN=Users,CN=FULLSIX,DC=fullsix,DC=local)\nLDAP_METHOD=plain\nLDAP_ACTIVE_DIRECTORY=true\nLDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n\ni tried that .. gives filter error\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296227831,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvxqsKiyuKRH4WwDK9wg_zvql1tlqks5ryM-NgaJpZM4NBis3\n.\n\n\n. Then you install ldap browser and get the correct dn for the user. I worked\nwith AD a few times and the dn you are using for the binding looks wrong if\nit really is an Microsoft ad you want to connect to. Here is how to get the\ncorrect dn...\n\n\n\n\n\n\nOp vr 21 apr. 2017 18:06 schreef MACE-Zer0 notifications@github.com:\n\ninvalid credentials with this\nLDAP_ENABLED=true\nLDAP_LABEL=xxxxxx\nLDAP_HOST=xxxxxxxx\nLDAP_PORT=389\nLDAP_UID=sAMAccountName\nLDAP_PASS=XXXXXXX\nLDAP_BIND_DN=CN=USER,DC=fullsix,DC=local\nLDAP_BASE=OU=Users,OU=FULLSIX,DC=fullsix,DC=local\nLDAP_USER_FILTER=(memberOf=OU=Users,OU=FULLSIX,DC=fullsix,DC=local)\nLDAP_METHOD=plain\nLDAP_ACTIVE_DIRECTORY=true\nLDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296232753,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv_Wm0q8YPNcEWGFSuqqWHBLXiGenks5ryNPlgaJpZM4NBis3\n.\n. Install ldap browser; setup profile.\n\nBecause you don't know the binding to login the first time you use a\ncompany connect windows machine and select the option to connect with your\ncurrent logged in windows user. Then at the top there is a search bar which\nallows you to search on username.\nDouble click the user entry after you found it.\nThe value you need is the value of the ad property called distinguishedName\nright click and choose copy value\nOp vr 21 apr. 2017 18:10 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nThen you install ldap browser and get the correct dn for the user. I\nworked with AD a few times and the dn you are using for the binding looks\nwrong if it really is an Microsoft ad you want to connect to. Here is how\nto get the correct dn...\nOp vr 21 apr. 2017 18:06 schreef MACE-Zer0 notifications@github.com:\n\ninvalid credentials with this\nLDAP_ENABLED=true\nLDAP_LABEL=xxxxxx\nLDAP_HOST=xxxxxxxx\nLDAP_PORT=389\nLDAP_UID=sAMAccountName\nLDAP_PASS=XXXXXXX\nLDAP_BIND_DN=CN=USER,DC=fullsix,DC=local\nLDAP_BASE=OU=Users,OU=FULLSIX,DC=fullsix,DC=local\nLDAP_USER_FILTER=(memberOf=OU=Users,OU=FULLSIX,DC=fullsix,DC=local)\nLDAP_METHOD=plain\nLDAP_ACTIVE_DIRECTORY=true\nLDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296232753,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv_Wm0q8YPNcEWGFSuqqWHBLXiGenks5ryNPlgaJpZM4NBis3\n.\n\n\n. If you want I'm now traveling home I can show you with teamviewer what to\nlook for or help you with teamviewer if you want\n\nOp vr 21 apr. 2017 18:14 schreef MACE-Zer0 notifications@github.com:\n\nok installing the ldap browser\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296234831,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv7jao2_6q-ZvFjFj43drh8-t773aks5ryNXOgaJpZM4NBis3\n.\n. Also the value plain is wrong for ad this is most likely something like md5\n\nOp vr 21 apr. 2017 18:15 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nIf you want I'm now traveling home I can show you with teamviewer what to\nlook for or help you with teamviewer if you want\nOp vr 21 apr. 2017 18:14 schreef MACE-Zer0 notifications@github.com:\n\nok installing the ldap browser\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296234831,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv7jao2_6q-ZvFjFj43drh8-t773aks5ryNXOgaJpZM4NBis3\n.\n\n\n. Haha that's what most people can't figure out when they are configuring\nldap. There is no username. The bind address is always the full\ndistinguishedName of the user object\n\nOp vr 21 apr. 2017 18:26 schreef MACE-Zer0 notifications@github.com:\n\ndont know where to put the username for the user\npassword is in the LDAP_PASS\nwhere goes the username ??\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296238015,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvyk2j7nVmM3u7uW7IuoMBGipXkpCks5ryNi4gaJpZM4NBis3\n.\n. Trust me this is something everybody gets wrong. Normally with software you\nlogin with username/password not with ldap. You bind to a user object with\nits full distinguishedName and then you provide a password\n\nOp vr 21 apr. 2017 18:33 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nHaha that's what most people can't figure out when they are configuring\nldap. There is no username. The bind address is always the full\ndistinguishedName of the user object\nOp vr 21 apr. 2017 18:26 schreef MACE-Zer0 notifications@github.com:\n\ndont know where to put the username for the user\npassword is in the LDAP_PASS\nwhere goes the username ??\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296238015,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvyk2j7nVmM3u7uW7IuoMBGipXkpCks5ryNi4gaJpZM4NBis3\n.\n\n\n. Skype call is maybe faster if it is not clear\n\nOp vr 21 apr. 2017 18:36 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nTrust me this is something everybody gets wrong. Normally with software\nyou login with username/password not with ldap. You bind to a user object\nwith its full distinguishedName and then you provide a password\nOp vr 21 apr. 2017 18:33 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nHaha that's what most people can't figure out when they are configuring\nldap. There is no username. The bind address is always the full\ndistinguishedName of the user object\nOp vr 21 apr. 2017 18:26 schreef MACE-Zer0 notifications@github.com:\n\ndont know where to put the username for the user\npassword is in the LDAP_PASS\nwhere goes the username ??\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296238015,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvyk2j7nVmM3u7uW7IuoMBGipXkpCks5ryNi4gaJpZM4NBis3\n.\n\n\n. Your Base dn is the lowest from the drop down in the screenshot\n\n\nOp vr 21 apr. 2017 18:37 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nSkype call is maybe faster if it is not clear\nOp vr 21 apr. 2017 18:36 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nTrust me this is something everybody gets wrong. Normally with software\nyou login with username/password not with ldap. You bind to a user object\nwith its full distinguishedName and then you provide a password\nOp vr 21 apr. 2017 18:33 schreef G.J.R. Timmer gjr.timmer@gmail.com:\n\nHaha that's what most people can't figure out when they are configuring\nldap. There is no username. The bind address is always the full\ndistinguishedName of the user object\nOp vr 21 apr. 2017 18:26 schreef MACE-Zer0 notifications@github.com:\n\ndont know where to put the username for the user\npassword is in the LDAP_PASS\nwhere goes the username ??\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296238015,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvyk2j7nVmM3u7uW7IuoMBGipXkpCks5ryNi4gaJpZM4NBis3\n.\n\n\n. Before you change the version number click on top of the readme on the\nbuild badge to see if the servers are ready. After the new versions comes\nout it can take several hours for the docker hub an qoay.io registry to\nbuild the images. After they are done you can do a successful pull. I think\nwith my script you can figure it out very important to let the startup of\nthe new images to takes it time. Sometime upgrading the database etc can\ntake up to 20 min before the webpage is available. So just be patient. In\nthe log file docker logs of gitlab you will see a line \"migrating database\"\n\n\n\nOp vr 21 apr. 2017 22:01 schreef MACE-Zer0 notifications@github.com:\n\na new version has came out !!!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296292500,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynvyH7Akqu4W8N9QEGsHTNX_YIHt6rks5ryQsCgaJpZM4NBis3\n.\n. Not a problem happy to help. Maybe share you ldap knowledge what you have\nlearned with the rest to improve the readme.\n\nCase closed\nOp vr 21 apr. 2017 21:52 schreef MACE-Zer0 notifications@github.com:\n\nyes yes thanks a hugeeeeee deal to @GJRTimmer\nhttps://github.com/GJRTimmer for his huge help ..... everything is\nworking even ldap .. thanks for you help as well @avluis\nhttps://github.com/avluis , everything is good now..... we dont use\nMailserver sorry , i got gitlab working with the exchange server i got here\nin the company\nThank you all\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1180#issuecomment-296290848,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv5XqrsX8u88z5_JDIlSoVxX9WrJVks5ryQkRgaJpZM4NBis3\n.\n. Weird,\n\nI shall try, so create a test suite for it, see if I can reproduce it. 403 is HTTP Status Code: \"Forbidden\" to my knowledge\n. how did you copy the user, because you shouldn't need to copy anything when upgrading\nI just upgraded to 9.1.0-1 by just updating my docker-compose and run the upgrade command I created. yeah that sounds correct, but what do you mean by earlier comment about 'copy user'. can you not login with root ?. should always be possible to select the correct login 'TAB' on the login screen 'LOCAL' and than just login with root.. ohh oke, so to recap: Current users in the AD are not the problem, newly created within the active directory cannot enter.. My advice, is to login into the active directory and check the newly created users, maybe the have to simple problem, and after copy copy the user in the AD then some settings gets reset.\nMost common is the user must change password on login, this will cause a AD Error code which in turn will fail the binding, on GitLab LDAP.\nBasically, login with that user first on a Windows machine, and it will probably ask to change to password to continue the login. After that login in Gitlab. oke, so, the users in question can succesfull login into Windows I presume ?. you can clena the cache without problem, just bring then down first\n. have you checked if there is maybe a gitlab rake task for this ?. RAKE Task: \nbash\ngitlab app:rake cache:clear\nsee https://github.com/sameersbn/docker-gitlab#rake-tasks on how to run rake tasks. yes on a running environment. just finishing my test docker-compose file with LDAP. I htink it is just somehting very simple like new users get defaults blocked until they have been granted clearance by an admin. I think you might be right, that's maybe a gitlab persmission thing. My test setup is booting hopefully I configured LDAP correctly on the first go :-) but as you well know I might need a few minutes to configure it to work :-). you cannot use the same volume locations all that data has been upgraded.\nI have to reboot my test setup, because I have LDAP with SSL/TLS.. I will try to produce the entire issue by creating a test for 9.0.5 make sure my LDAP works and then upgrade to 9.1.0-1. still working on having LDAP work on 9.0.5 before I can continue, have to figure out my own ldap settings in combination woith gitlab. think I found something\nwhat is the value of you LDAP_USER_FILTER key ?\n. Just reading the LDAP GitLab documentation. perfect. I'm booting 9.0.5 and first get LDAP to work. oke, road so far, I have 9.0.5 up and running, and LDAP working, login works correctly.\nB.T.W.\nWithin the documentation for LDAP I found 3 additional config keys which are not yet support by this image. We need to add an issue to add then.\n- group_base\n- admin_group\n- sync_ssh_keys\nSee: https://docs.gitlab.com/ce/administration/auth/ldap.html\nBRB, Lunch . @MACE-Zer0 do the users in your LDAP have all different email addresses, because just reading all the documentation ?. @MACE-Zer0 \nthere is a RAKE task to check and verify a user on commandline\nSee https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/administration/auth/ldap.md\n. running upgrade to 9.1.0-1 will take several minutes\n. no you can remove them, the env files are designed to separate configuration, I use them to keep everything ordend, you can start using it by reading the documentation of docker-compose and use the env_files import directive in docker-compose. Issue reproduced, I get a 403 on a newly created user in LDAP (OpenLDAP) but issue seems to be the same.. I will check the rake command to see if can get more information, have you tried the rake command yet ?. you have to run as git user\nfrom the directory ~/gitlab. bash\ngit@gitlab:~/gitlab$ bundle exec rake gitlab:ldap:check --trace. can you run on 9.0.5 to see what the normal output should be. I'm currently booting a 9.0.5\nBut this probably means that LDAP is broken on 9.1.0-1 (the -1 is a version number of this repo)\nI suggest you post a issue with gitlab to have it fix in the next release.. https://gitlab.com/gitlab-org/gitlab-ce/issues\n. This is the output from 9.1.0\nRemember when submiting use the actual version number 9.1.0 NOT 9.1.0-1\nREDACTED wrong log. i cannot reproduce a correct ldap check. doing something wrong not sure what yet. I successfully completed the command on 9.0.5 I will check 9.1.0-1 one final time. 9.0.5\n```basb\ngit@gitlab:~/gitlab$ bundle exec rake gitlab:ldap:check RAILS_ENV=production\nChecking LDAP ...\nServer: ldapmain\nLDAP authentication... Success\nLDAP users with access to your GitLab server (only showing the first 100 results)\n        DN: uid=*,cn=users,dc=*,dc=nl       uid: *\n        DN: uid=*,cn=users,dc=*,dc=nl      uid: *\n        DN: uid=*,cn=users,dc=*,dc=nl   uid: *\n        DN: uid=*,cn=users,dc=*,dc=nl       uid: *\n        DN: uid=gitlab,cn=users,dc=**,dc=nl      uid: gitlab\nChecking LDAP ... Finished\ngit@gitlab:~/gitlab$\n. see your admin section: 9.0.1, I will sent a screen shot when my test container is back online. what was your logging output on 9.1.0-1 forbundle exec rake gitlab:ldap:check RAILS_ENV=production. maybe even withtrace``` you have to submit all this logging with it when submitting an issue. \nI will get the logging for you. weird same output. whcih means you have to explain the error and show your 403 screenshot. weird in my upgraded 9.0.1-1 I cannot even login with already registered users ?!?!?. found it, reset the content, so thats the reason, for some reason gitlab 9.1.0 does not create users, I will have a look at the logs\n. for my setup it is, no errors on checking\ndelete volumes ??????? . ohh you mean on my side. just forget.\nGot some logging for you.\nbash\nStarted GET \"/users/sign_in\" for 172.20.0.1 at 2017-04-26 12:51:24 +0100\nProcessing by SessionsController#new as HTML\nCompleted 200 OK in 160ms (Views: 30.3ms | ActiveRecord: 9.8ms)\nStarted POST \"/users/auth/ldapmain/callback\" for 172.20.0.1 at 2017-04-26 12:51:33 +0100\nProcessing by OmniauthCallbacksController#ldapmain as HTML\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"DawfKO56PXnegtm+zRRQcIhbmOsQaPfMvpw5Wa9SFg8hAmTEU4p7ULVyP/uAmmj8FfDIiEAY/LJjIkYU3NFFWQ==\", \"username\"=>\"gert-jant\", \"password\"=>\"[FILTERED]\"}\nCompleted 403 Forbidden in 120ms (ActiveRecord: 6.8ms). I will try and find out how to increase loglevel\n. please change to version in the issue\nthe gitlab communicty does not known  about the custom veriso of this docker image\nplease change to 9.1.0. add also please comment the code sections correctly in MarkDown\nhttps://help.github.com/articles/creating-and-highlighting-code-blocks/#syntax-highlighting\n. issue should be \"Gitlab does not create LDAP users anymore in 9.1.0\". please also fix the highlighting\nDebug logging of production.log\nlog\nStarted POST \"/users/auth/ldapmain/callback\" for 172.20.0.1 at 2017-04-26 13:02:57 +0100\nProcessing by OmniauthCallbacksController#ldapmain as HTML\n  Parameters: {\"utf8\"=>\"\u2713\", \"authenticity_token\"=>\"w6h3WoZgfVeSJcmXC3NvsMVnzDnJH7qa2SEg5SWaC/TvBgy2O5A7fvnVL9JG/Vc8WMycWplvseQEn1+oVhlYog==\", \"username\"=>\"********\", \"password\"=>\"[FILTERED]\"}\n  ActiveRecord::SchemaMigration Load (1.5ms)  SELECT \"schema_migrations\".* FROM \"schema_migrations\"\n  Identity Load (1.2ms)  SELECT  \"identities\".* FROM \"identities\" WHERE \"identities\".\"provider\" = $1 AND (LOWER(\"extern_uid\") = LOWER('uid=********,cn=users,dc=********,dc=nl'))  ORDER BY \"identities\".\"id\" ASC LIMIT 1  [[\"provider\", \"ldapmain\"]]\n  User Load (3.5ms)  SELECT  \"users\".* FROM \"users\" WHERE \"users\".\"email\" = $1  ORDER BY \"users\".\"id\" DESC LIMIT 1  [[\"email\", \"********@gmail.com\"]]\n  Namespace Load (2.7ms)  SELECT  \"namespaces\".* FROM \"namespaces\" WHERE \"namespaces\".\"deleted_at\" IS NULL AND (lower(path) = '********' OR lower(name) = '********')  ORDER BY \"namespaces\".\"id\" DESC LIMIT 1\nCompleted 403 Forbidden in 177ms (ActiveRecord: 18.4ms). please wait with copy, I will have to redact some. done. you can close this issue because you have submited one with gitlab, the error is not part of this container.. @cpoetter I'm running also on Synology, here is some additional information:\nI've created a new gitlab-runner which is Synology compliant, the latest version of the runner of gitlab does not match the docker-engine version which is running on Synology. In order to run match version you need a runner which has docker-engine 1.11.2 as backend because of the internal docker-api.\nThe image does use the latest gitlab-runner.\nSee: https://hub.docker.com/r/datacore/gitlab-runner/\nRepo: https://github.com/GJRTimmer/docker-gitlab-runner\nBranch: Synology\nOr: tag 1.11.2\nImage is based on Alpine.\nAdditonally, maybe it is an idea to also write a section how to use the the Synology Certificate center in combination with gitlab to run with TLS/SSL enabled to use Let's encrypt certificates.\nI've also created a image for building GoLang projects maybe a we could add a section for image references to point to build containers for building projects with Gitlab CI, what do you think ?\nGolang image for CI: https://hub.docker.com/r/datacore/alpine-golang\n. Hi chris,\nI'm running it with let's encrypt. Console acces is something I found\nmandatory for this because of the use of docker-compose. I write a bash\nscript which makes everything quite easy. Including finding the correct\ncertificates from synology even after they are auto refreshed by the dsm.\nWill upload the script soon.\nOp vr 28 apr. 2017 17:52 schreef Chris notifications@github.com:\n\n@GJRTimmer https://github.com/GJRTimmer I looked a bit into the\ncertificate topic just now. The Certificate Center is storing the\ncertificates in /usr/syno/etc/certificate/_archive/. The problem is, that\nthis directory is not visible in the File Station Web UI. So we can't\nselect it as a directory to be mounted into a Docker. Also unfortunately\nFile Station does not support symbolic links. So linking the files into a\ndirectory that we can mount does not help.\nThis is the same issue as with the /var/run/docker.sock file for the\nDocker executor mode of the GitLab runner. I don't have a solution for this\nproblem at the moment (besides launching the Docker via the terminal, which\nis not the intended solution for my tutorial. I want to write a tutorial\nthat works hopefully just with the Web UI. I made already a pull request in\nthe runner repo to get closer to my goal.).\nI submitted already a feature request to support symbolic links in File\nStation. Maybe it would be a great idea if you do the same.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1196#issuecomment-298035558,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFynv8JboF5-uDcSmSwx3D9LWgKsWyTkks5r0gtSgaJpZM4NKrT7\n.\n. Found the comment about EE, yhou are correct. Issue Closed. Removing the PID and restarting also solved my issue.\nCaused by reboot of my Synology NAS.\n\n@solidnerd @sameersbn \nCan we fix this permanently by adding a cleanup in the entrypoint ?\nExample:\n```bash\n!/bin/bash\nDefine cleanup procedure\ncleanup() {\n    echo \"Container stopped, performing cleanup...\"\n}\nTrap SIGTERM\ntrap 'cleanup' SIGTERM\nExecute a command\n\"${@}\" &\nWait\nwait $!\nCleanup\ncleanup\n``` . Synology Has updated Docker to: 17.05.0-ce.\nI've made a new docker-gitlab-runner container which works perfectly with Sameersbn/docker.\nbash\ndocker pull datacore/gitlab-runner:17.05.0-ce\nMore information at \nDocker Hub\nGitHub. Switched from ARG to ENV because of the same reason. My gitlab-runners refused to do a succesful build on my synology. Lets call this a Synology fix. Have not pinpointed why this happens.\n. @sameersbn @solidnerd Any idea when this will be merged ?. @sameersbn @solidnerd Any idea when this will be merged ?. Go into your container with docker exec ...\nbash\ncat /etc/supervisor/conf.d/gitlab-pages.conf\nNow run the command under the key command= manually on the terminal. This will give you the direct logging output on what is the problem.\nMaybe you have set the external port and forgot to include the :.. @directrix1 Quick question; I have no problem with the current image with LFS transfers of roughly 700+ MB. Can you provide an information how large your files are ?. @KartoffelToby The default lets encrypt of gitlab does not include Gitlab pages. Would it not be a better idea to support or incorporate 'traefik' as either a built-in component of this image or as docker service linked trough docker-compose. I think that would be more beneficial for the end users of this image. . I need it too. @solidnerd  I've just complete a test with a configuration against self-hosted Minio. Without this parameter the artifacts are not uploaded to S3.\n@Solid I've have the same fix in my own fork, If you want I can create a PR which will also auto close this one. And the matching Issue.. I can even do better, I've just finished what I call the ultimate personal Gitlab Instance. Fully tested.\nGitlab:\n\nRedis\nDatabase: 0 -> Gitlab\nDatabase: 1 -> Registry Object Reference Store, I'm using the redis also for the registry because I'm also using minio as a S3 storage for my registry, I'm using the redis as the cache blob descriptor. And separating the dual usage of redis by assigning Gitlab to database: 0 and the registry to database:1.\nPostgresql\nRegistry\nSecrets stored in separate file\nPlantUML\n4x gitlab runners\n\nMinio Storage\nBucket: Gitlab\nSubfolders:\n gitlab/artifacts (Artifacts stored by gitlab runners, confirmed working, requires this PR)\n gitlab/backups (Gitlab Backups stored here, tested and is working)\n gitlab/cache (From gitlab runners, tested and is working)\n gitlab/lfs (LFS Storage, tested and is working)\n gitlab/registry (Registry storage, including a configured direct link with the runners for faster storage, tested and working including fast uploading from a CI Job)\n gitlab/uploads (Gitlab uploads, tested and is working)\n* gitlab/volumes (Currently working on it. Here I plan to storage entire backups of a docker volume, to clone an entire volume just before I run a upgrade of the gitlab server)\nNice to note is that I even got every subfolder working within the bucket.\nGot the entire thing running on my Synology including a full configuration behind the Synology master Nginx. Configuration of the Synology might be out of scope but I'm of course willing to share.\nI've been running Gitlab on my synology for several years now. Just finished a complete fresh redesign and reconfiguration of my setup.\n@solidnerd BTW, I have no idea why the Circle-CI did not pass. Any thoughts ?\n. Awaiting merge of PR #1660 . @solidnerd Suggestion for usage of --rfc-3389=s reversed.\nReason: --rfc-3389 is not present as an option for the date command within Alpine Linux because of BusyBox which means it will cause errors within the dind image.\nSolution: Format the date timestamp according RFC 3389 while using the default format arguments to ensure full compatibility with environments.. I hope this request will be approved because the current CI cannot be build (master branch) on a private gitlab because the command docker login ... is also missing.\nbash\nThe push refers to a repository [REDACTED]\n18395966f9f3: Preparing\n5bfc2572934c: Preparing\ncd2a56296191: Preparing\n314cbeaf7f45: Preparing\nc9026bdd7063: Preparing\n7ea5b3dd8d41: Preparing\nf1dfa8049aa6: Preparing\n79109c0f8a0b: Preparing\n33db8ccd260b: Preparing\nb8c891f0ffec: Preparing\nf1dfa8049aa6: Waiting\n79109c0f8a0b: Waiting\n33db8ccd260b: Waiting\nb8c891f0ffec: Waiting\n7ea5b3dd8d41: Waiting\ndenied: requested access to the resource is denied\nERROR: Job failed: exit code 1. @solidnerd @sameersbn Any Update. @solidnerd Completed. @splattael Never tested that, and I don't know if it would be a solution. I think there would be quite a few situations where there is a complete different timezone between the containers and the host. With this fix it the container will get the correct timezone. Got this fix from docker on how to set the container timezone correctly by using the TZ variable.\nThis image might even be used by parties that are hosting gitlab environments for clients in different timezone. So I don't want to mount the localtime from the host I want to set it correctly. . @solidnerd @sameersbn Any Update. Rebased on new master. @solidnerd Rebased on new master. @solidnerd Rebased to 11.5.0. Rebased to 11.5.1. @solidnerd rebased. @solidnerd Rebased. @solidnerd @sameersbn Any Update. @solidnerd Thanks. Rebased onto new master. @solidnerd Rebased on master. @jmarcos-cano just spin up the container with the previous version and load your pre-upgrade backup.\nIf that's not an option, I suggest continue upgrading to latest version, maybe their is an known issue which is resolved in a higher version.. @solidnerd Can you restart the Circle-CI. Don't know what caused the failure. Rebased to 11.5.1. @solidnerd Rebased. Rebased to 11.5.1. @solidnerd Rebased. @solidnerd can you restart CI. Also gitlab pages daemon start script need to be extended with the oauth -auth-* commandline parameters. Rebased to 11.5.1. @solidnerd DONE. @solidnerd can you restart CI. Had this a while ago. Any change your gitlab-runner is not up to date and still trying to connect to the old CI URL.\nSomewhere in the 11 series it was changed. Check out your admin section and verify that the runners are connecting to the right URL.\nTry my gitlab-runner image https://github.com/GJRTimmer/docker-gitlab-runner you can find it on docker hub or my personal gitlab. Don't look at the tags. \nCurrently this image on on a schedule to be auto generated every month on the 25th. On the 22nd there is a gitlab-runner release. This image is always up to date with the latest version.\nHope this helps.. @justinushermawan This is how I do it.\nI have created a container for this which can make a complete backup of the containers and even restore them. It uses S3 compatiable storage to store the backups.\nYou can run your own S3 storage with minio\nI use the dockup container: https://hub.docker.com/r/datacore/dockup\nRepository: https://github.com/GJRTimmer/dockup\nTIP:\nIf you run the dockup restore command in an interactive prompt, it will fetch a list from the S3 server and ask you which volume to restore.\nHope this helps.. @solidnerd @sameersbn \n Prefer not to squash the commit for these will close several open issues and PR's.\n Documentation still requires some work of course but I think this is a good start one of the todo's is to replace all the links for references.\n* What is very nice about this refactoring is that everything is now managed from the global config.yml\nNote: Documentation must be generated with the make docs commands. If you want to run it on your local machine, install hugo and run make docs-server. @CrystalMethod \n\nawesome work\n\nHave you seen the documentation ? Currently there is still quite some work to be done, like fixing all the references. I'm hoping to make that community work. What is your impression about the new documentation ? Is it in the right direction ?\nYou can view it here: https://docker.timmertech.nl/gitlab/. @luv2code Would be a great addition, currently don't know if it is possible maybe just as simple as adding it to the _index.md files.\nTo give you a quick summary how it works.\n Its built with Hugo\n Theme DocDock\n Theme Demo with all its functionality\n All the documentation content is in docs/content\nCheck out the demo of the theme to see what an insane amount of features it has.. @CrystalMethod I've updated the Circle-CI config of this new repository, and it is able to push the latest and tags to DockerHub. Also this PR now includes update of subcomponents and upgrade of Gitlab-CI to 11.5.4. It is available on my DockerHub account. So if you cannot wait until this PR is merged and want to play with the new image check here on DockerHub\nHave fun playing.\nP.S.\nI've you decide to upgrade, as always make full backup of your data, so you can roll back.\n*Note: This repository  update also fixes the local testing. So if you clone my fork you only have to give make all and afterwards make test it will spin up a full testing environment.\ndocker-compose located in docker/quickstart.yml exposes localhost port 10080.\nHave fun playing\n@CrystalMethod I've you start playing with the new 11.5.4 build from this massive update, please let me know in this thread what you think. Any feedback or improvement is welcome.. Possible duplicate of #1746\nPossible duplicate of #699. @mrnonz @paolomainardi \nSee #1812 Requested updates are part of the repository upgrade. Including many fixes\nIf you need the updates fast, the builds of this PR are part of my fork, and available on DockerHub\nPlease note that PR #1812 is supposed to replace the master of this repo.\nThe update will including a massive amount of old PR's and it will update all gitlab components to their latest versions. Including easy configuration of the entire project by a global config.yml.\nCurrently available:\n 11.5.4\n 11.5.5\n 11.6.0\n latest\nSee #1812 for more information, and please note that the README has been replaced by an auto generated website.. @Beanben can you edit you question and use MarkDown source highlighting, will be easier for anyone to read it. https://help.github.com/articles/creating-and-highlighting-code-blocks/ use yaml as language.\nTo your question your external database needs to be resolved from within the container. Your DB_HOST is empty. You need to at least enter the IP of the external database. If it is run on the host, put in the IP address of the Host.. @solidnerd Can you look at PR #1812 . DONE. DONE. DONE. DONE. DONE. DONE. DONE. DONE. DONE. DONE. DONE. DONE. DONE. Added --pull to the build command. Backup dir is completely different.\nSee: https://docs.gitlab.com/ee/raketasks/backup_restore.html#specifying-a-custom-directory-for-backups\nThis new variable is for specifiying the subdirectory if you want to group you backups, also it is the only way to use a subdirectory within a bucket when using remote storage like S3.. See https://docs.gitlab.com/ee/raketasks/backup_restore.html#specifying-a-custom-directory-for-backups. Changes Done.\nVariable renamed: GITLAB_PAGES_NGINX_PROXY changed, default, from false to true and updated all corresponding functions so that the variable makes sense.\nGITLAB_PAGES_NGINX_PROXY Default: true\nWhen set to false it will disable the proxy, README has been updated\n@solidnerd Request Check. ",
    "eanekrasov": "Use \n- REGISTRY_HTTP_SECRET=secretstring\nfor http secret warning and\n- REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR=redis\n      - REGISTRY_REDIS_ADDR=redis:6379\nfor redis. ",
    "rstoltenberg": "Hi,\nafter a while it has changed to wake up every 3 to 4 hours. The strange thing is that it happens allways to the minute 18 at which the NAS was initial started.\nIt is not directly a problem, but sensless to to wake up for nothing. Right if I am not at home to work with the NAS.\nPrimarily, it is a mystery that I would like to solve ;)\n. ",
    "maikelvl": "Maybe you made a typo: registry.gitlab.colaspomies.fr:5500 or registry.gitlab.mysite.fr:5500?\n. Maybe you made a typo: registry.gitlab.colaspomies.fr:5500 or registry.gitlab.mysite.fr:5500?\n. Try set the GITLAB_REGISTRY_PORT to 5000 (I think you could remove the 5500:5500 from gitlab)\n. Try set the GITLAB_REGISTRY_PORT to 5000 (I think you could remove the 5500:5500 from gitlab)\n. Also you should connect to port 5000 (the registry itself) docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.mysite.fr:5000\nThe registry will then use GitLab to authenticate.\n. Also you should connect to port 5000 (the registry itself) docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.mysite.fr:5000\nThe registry will then use GitLab to authenticate.\n. Mmm... That's strange because 5500 shouldn't be defined anywhere.\n. Mmm... That's strange because 5500 shouldn't be defined anywhere.\n. I see.\nSo after diggin' through, I've found the cause and a solution.\nShort story: you should not want to use self-signed certificates in production. It's a pain because every docker client has to have your .crt.\nWhen using a self-signed:\n- As stated on the registry docs: \"Be sure to use the name myregistrydomain.com as a CN.\" In this case 'gitlab-issuer' is not a valid CN, use registry.gitlab.mysite.fr.\n- Copy your generated registry-auth.crt file to /etc/docker/certs.d/registry.gitlab.mysite.fr:5000/ca.crt on the machine where the Docker daemon is running.\n- The docker daemon has to be initialised with the --insecure-registry-flag. I did apply this with my docker-machine thanks to this post (see comment from RAY at MAY 14, 2016)\n- Add port \"5000:5000\" to the registry service, else the runner is unable to connect to it. (I assume the 5500 on the gitlab service is not being used, therefore could be removed)\n- Add these env vars to the registry service: (see the docs)\n      REGISTRY_HTTP_TLS_CERTIFICATE=/certs/registry-auth.crt\nREGISTRY_HTTP_TLS_KEY=/certs/registry-auth.key\n- Make sure you have the docker.sock mounted with your gitlab-multi-runner\n- Make sure to mount the docker.sock inside your runners:\n  docker exec -it gitlab-runner vi /etc/gitlab-runner/config.toml\n  and add the docker.sock:\n  volumes = [\"/cache\", \"/var/run/docker.sock:/var/run/docker.sock\"]\nSince I've done a lot of trail and error, it could be that some steps are unnecessary. I hope I did not forget anything. \ud83d\ude05 \nI recommend to use valid ssl certificates for the registry as well as GitLab itself. Use LetsEncrypt for instance.\n. I see.\nSo after diggin' through, I've found the cause and a solution.\nShort story: you should not want to use self-signed certificates in production. It's a pain because every docker client has to have your .crt.\nWhen using a self-signed:\n- As stated on the registry docs: \"Be sure to use the name myregistrydomain.com as a CN.\" In this case 'gitlab-issuer' is not a valid CN, use registry.gitlab.mysite.fr.\n- Copy your generated registry-auth.crt file to /etc/docker/certs.d/registry.gitlab.mysite.fr:5000/ca.crt on the machine where the Docker daemon is running.\n- The docker daemon has to be initialised with the --insecure-registry-flag. I did apply this with my docker-machine thanks to this post (see comment from RAY at MAY 14, 2016)\n- Add port \"5000:5000\" to the registry service, else the runner is unable to connect to it. (I assume the 5500 on the gitlab service is not being used, therefore could be removed)\n- Add these env vars to the registry service: (see the docs)\n      REGISTRY_HTTP_TLS_CERTIFICATE=/certs/registry-auth.crt\nREGISTRY_HTTP_TLS_KEY=/certs/registry-auth.key\n- Make sure you have the docker.sock mounted with your gitlab-multi-runner\n- Make sure to mount the docker.sock inside your runners:\n  docker exec -it gitlab-runner vi /etc/gitlab-runner/config.toml\n  and add the docker.sock:\n  volumes = [\"/cache\", \"/var/run/docker.sock:/var/run/docker.sock\"]\nSince I've done a lot of trail and error, it could be that some steps are unnecessary. I hope I did not forget anything. \ud83d\ude05 \nI recommend to use valid ssl certificates for the registry as well as GitLab itself. Use LetsEncrypt for instance.\n. Just seeing your latest comment \ud83d\ude05 \n. Just seeing your latest comment \ud83d\ude05 \n. mmm... maybe you could find the cause by inspecting logs:\ndocker exec -it ..._gitlab_1 tail -n 100 /var/log/gitlab/gitlab/production.log ?\n. mmm... maybe you could find the cause by inspecting logs:\ndocker exec -it ..._gitlab_1 tail -n 100 /var/log/gitlab/gitlab/production.log ?\n. Could you paste your current docker-compose.yml?\n. Could you paste your current docker-compose.yml?\n. Ok. Maybe with a stripped down env list.\n. Ok. Maybe with a stripped down env list.\n. Thanks, you forgot to set the GITLAB_REGISTRY_PORT to 5000\n. Thanks, you forgot to set the GITLAB_REGISTRY_PORT to 5000\n. @reynold-lariza Could you explain exactly which action you are trying to accomplish and what error messages you get?\nTo isolate the problem you could try to run the docker registry standalone; without authenticating through GitLab, but with plain htpasswd (https://docs.docker.com/registry/configuration/#/auth) It that succeeds, the next step is to connect it to GitLab.\nCould it be you have to open up some inbound ports on AWS?. @reynold-lariza Could you explain exactly which action you are trying to accomplish and what error messages you get?\nTo isolate the problem you could try to run the docker registry standalone; without authenticating through GitLab, but with plain htpasswd (https://docs.docker.com/registry/configuration/#/auth) It that succeeds, the next step is to connect it to GitLab.\nCould it be you have to open up some inbound ports on AWS?. @reynold-lariza ok\nMake sure the registry has authentication settings:\nyaml\nenvironment:\n    - REGISTRY_AUTH_TOKEN_REALM=http://gitlab.example.com/jwt/auth\n    - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n    - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n    - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/registry-auth.crt\n    - REGISTRY_STORAGE_DELETE_ENABLED=true. @reynold-lariza ok\nMake sure the registry has authentication settings:\nyaml\nenvironment:\n    - REGISTRY_AUTH_TOKEN_REALM=http://gitlab.example.com/jwt/auth\n    - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n    - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n    - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/registry-auth.crt\n    - REGISTRY_STORAGE_DELETE_ENABLED=true. @remohammadi Thank you for your comment. In my understanding the registry proxies the authentication to GitLab, so the registry has to be exposed to the user. I found the docs were not aligned with this, so I fixed it. If so, could you explain why this is harmful?\nEDIT:\nI could remove the env-var reusing changes. and redefine them in the docker-compose file example. Is that a valid solution?\n. @remohammadi Thank you for your comment. In my understanding the registry proxies the authentication to GitLab, so the registry has to be exposed to the user. I found the docs were not aligned with this, so I fixed it. If so, could you explain why this is harmful?\nEDIT:\nI could remove the env-var reusing changes. and redefine them in the docker-compose file example. Is that a valid solution?\n. It is backwards compatible. \ud83d\ude04 \n. It is backwards compatible. \ud83d\ude04 \n. Thanks. \ud83d\ude04 . Hi @esben I'm sorry to hear it's not working for you and indeed not correct of me to call it backwards compatible. In most cases it would be backwards compatible. \ud83d\ude05\nGood to hear you fixed it.\n. Hi @esben I'm sorry to hear it's not working for you and indeed not correct of me to call it backwards compatible. In most cases it would be backwards compatible. \ud83d\ude05\nGood to hear you fixed it.\n. There is a new dependency: re2 library\nI've managed to complete the gem install with the following:\napt-get install -y checkinstall\nprev_pwd=$PWD\ncd /tmp\ngit clone https://github.com/google/re2.git\ncd re2/\nmake\nmake test\ncheckinstall -D --install=no -y\ndpkg -i re2_20170720-1_amd64.deb\nldconfig\napt-get remove -y checkinstall\ncd $prev_pwd\nrm -rf /tmp/*\nBut now the exec_as_git bundle exec rake gitlab:assets:compile USE_DB=false SKIP_STORAGE_VALIDATION=true fails with the following:\n/home/git/gitlab/node_modules/.bin/webpack --config /home/git/gitlab/config/webpack.config.js --bail\nrake aborted!\nCommand failed with status (): [/home/git/gitlab/node_modules/.bin/webpack...]\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/webpack-rails-0.9.10/lib/tasks/webpack.rake:17:in `block (2 levels) in <top (required)>'\nTasks: TOP => gitlab:assets:compile => webpack:compile\n(See full trace by running task with --trace). There is a new dependency: re2 library\nI've managed to complete the gem install with the following:\napt-get install -y checkinstall\nprev_pwd=$PWD\ncd /tmp\ngit clone https://github.com/google/re2.git\ncd re2/\nmake\nmake test\ncheckinstall -D --install=no -y\ndpkg -i re2_20170720-1_amd64.deb\nldconfig\napt-get remove -y checkinstall\ncd $prev_pwd\nrm -rf /tmp/*\nBut now the exec_as_git bundle exec rake gitlab:assets:compile USE_DB=false SKIP_STORAGE_VALIDATION=true fails with the following:\n/home/git/gitlab/node_modules/.bin/webpack --config /home/git/gitlab/config/webpack.config.js --bail\nrake aborted!\nCommand failed with status (): [/home/git/gitlab/node_modules/.bin/webpack...]\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/webpack-rails-0.9.10/lib/tasks/webpack.rake:17:in `block (2 levels) in <top (required)>'\nTasks: TOP => gitlab:assets:compile => webpack:compile\n(See full trace by running task with --trace). With --trace:\nCommand failed with status (): [/home/git/gitlab/node_modules/.bin/webpack...]\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/file_utils.rb:66:in `block in create_shell_runner'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/file_utils.rb:57:in `sh'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/file_utils_ext.rb:37:in `sh'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/webpack-rails-0.9.10/lib/tasks/webpack.rake:17:in `block (2 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:240:in `block in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:235:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:235:in `execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:179:in `block in invoke_with_call_chain'\n/usr/lib/ruby/2.3.0/monitor.rb:214:in `mon_synchronize'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:199:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain'\n/usr/lib/ruby/2.3.0/monitor.rb:214:in `mon_synchronize'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:165:in `invoke'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:150:in `invoke_task'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:106:in `block (2 levels) in top_level'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:106:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:115:in `run_with_threads'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:100:in `top_level'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:78:in `block in run'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:176:in `standard_exception_handling'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:75:in `run'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/bin/rake:33:in `<top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/bin/rake:22:in `load'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/bin/rake:22:in `<main>'\nTasks: TOP => gitlab:assets:compile => webpack:compile. With --trace:\nCommand failed with status (): [/home/git/gitlab/node_modules/.bin/webpack...]\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/file_utils.rb:66:in `block in create_shell_runner'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/file_utils.rb:57:in `sh'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/file_utils_ext.rb:37:in `sh'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/webpack-rails-0.9.10/lib/tasks/webpack.rake:17:in `block (2 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:240:in `block in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:235:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:235:in `execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:179:in `block in invoke_with_call_chain'\n/usr/lib/ruby/2.3.0/monitor.rb:214:in `mon_synchronize'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:199:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain'\n/usr/lib/ruby/2.3.0/monitor.rb:214:in `mon_synchronize'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/task.rb:165:in `invoke'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:150:in `invoke_task'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:106:in `block (2 levels) in top_level'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:106:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:115:in `run_with_threads'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:100:in `top_level'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:78:in `block in run'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:176:in `standard_exception_handling'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/lib/rake/application.rb:75:in `run'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-10.5.0/bin/rake:33:in `<top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/bin/rake:22:in `load'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/bin/rake:22:in `<main>'\nTasks: TOP => gitlab:assets:compile => webpack:compile. @chaosversum Thank you very much! \ud83d\ude4c  We are using a slow GitLab for 3 months until today! We were so sick of 10+ seconds page loads. It's hardly mentioned in this repo and in the GitLab documentation.. Moving uploads fixed it for us:\nmkdir /home/git/gitlab/shared/public\nmv /home/git/data/uploads /home/git/data/shared/public/uploads\nchown -R git:git /home/git/data/shared/public. Moving uploads fixed it for us:\nmkdir /home/git/gitlab/shared/public\nmv /home/git/data/uploads /home/git/data/shared/public/uploads\nchown -R git:git /home/git/data/shared/public. @leslau Thanks.\nHere the /home/git/gitlab/public/uploads directory exists and I'm able to upload. \ud83d\ude09 \n. @leslau Thanks.\nHere the /home/git/gitlab/public/uploads directory exists and I'm able to upload. \ud83d\ude09 \n. It will be overwritten if SSL_REGISTRY_KEY_PATH is not set. Just like in line 138.\n. Very sharp. ;) Was used for testing.\n. Yes, that's correct. Thanks. I fixed it now.\nThe registry data is persistent by storing it in a docker volume.. ",
    "colas-pomies": "... Sorry mistake when I write the issue. I wrote mysite instead of colaspomies. I just forget to replace it when I wrote the issue. I change it.\n. Me too I am typing correctly in my configuration !\n. Okay so I try different case and for each I reinstall all : \n- stop & rm all docker\n- rm /srv/docker/gitlab && rm /srv/docker/gitlab-runner\n- recreate ssl certificate\n- execute docker-compose\n- reinstall gitlab-runner\n1 - set GITLAB_REGISTRY_PORT to 5000\n2 - connect direct to port 5000 with docker login\n3 - set GITLAB_REGISTRY_PORT to 5000 && connect direct to port 5000 with docker login\nAnd I've got the same error : \nError response from daemon: Get https://registry.gitlab.mysite.fr:5500/v1/users/: dial tcp XX.XX.XX.XX:5500: getsockopt: connection refused\n. I applied (or I try to apply) the method defined here for the registry\n. If you want more information this is ALL commands I execute : \n- Before all, in my domain name page configuration I set :\ngitlab.mysite.fr -> my server IP\nregistry.gitlab.mysite.fr -> my server IP\n- Stop all my docker and delete them\ndocker stop gitlab-runner mysite_gitlab_1 mysite_registry_1 mysite_postgresql_1 mysite_redis_1;\ndocker rm gitlab-runner mysite_gitlab_1 mysite_registry_1 mysite_postgresql_1 mysite_redis_1;\n- Clean the persistant directory for gitlab and create certificate (with root user)\nrm -r /srv/docker/gitlab;\nmkdir -p /srv/docker/gitlab/gitlab_registry/certs;\ncd /srv/docker/gitlab/gitlab_registry/certs;\nopenssl req -nodes -newkey rsa:4096 -keyout registry-auth.key -out registry-auth.csr -subj \"/CN=gitlab-issuer\";\nopenssl x509 -in registry-auth.csr -out registry-auth.crt -req -signkey registry-auth.key -days 3650;\n- Execute docker-compose with this this docker-compose.yml (same as define upper in the issue) : docker-compose.yml\ndocker-compose up -d\n- Waiting  until gitlab is avaible at gitlab.mysite.fr (~5min)\n- Connect to gitlab.mysite.fr and do : \n  - Set root mdp\n  - Create new user (myuser) and connect with it\n  - Create new project : my-other-site.fr\n- Clean the persistant directory for gitlab-runner (with user root)\n  rm -r /srv/docker/gitlab-runner\n- Create gitlab-runner with docker\ndocker run -d --name gitlab-runner --restart always \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v /srv/docker/gitlab-runner/config:/etc/gitlab-runner \\\n  gitlab/gitlab-runner:latest\n- Register the gitlab-runner to my gitlab (with the url and token get from the runner part of gitlab)\ndocker exec -it gitlab-runner gitlab-ci-multi-runner register -n \\\n  --url http://gitlab.mysite.fr/ci \\\n  --registration-token TOKEN_FROM_GITLAB \\\n  --executor docker \\\n  --description \"My Docker Runner\" \\\n  --docker-image \"docker:latest\" \\\n  --docker-volumes /var/run/docker.sock:/var/run/docker.sock\n- From my computer I add some file in the repo \n  - A codedirectory wich contains an index.html file\n  - A Dockerfile : Dockerfile\n  - A .gitlab-ci.yml : .gitlab-ci.yml\n- When I push this the gitlab-ci is activate and execute the before_script : \n  docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.mysite.fr:5500\n- TADAAAAAAAA !!! In the logs of the pipeline we can see that we have the error : \n  Error response from daemon: Get https://registry.gitlab.mysite.fr:5500/v1/users/: dial tcp XX.XX.XX.XX:5500: getsockopt: connection refused\nI execute all these steps and nothing more !\n. Woh ! Okay I will try all of this tomorow. I know for valid ssl and i program to add letsencrypt (need to learn how to use it before). I will comment with the result tomorow and hope close the issue \n. Okay so It's work but not totaly. I do all the modification you tell me to do and I connect to port 5000 and not to port 5500 in the docker login command.\nThe issue now is that I can't connect to my registry page in gitlab (http://gitlab.mysite.fr/myuser/myproject/container_registry).\n\nThis problem appear only when I add these line in my registry docker : \n- REGISTRY_HTTP_TLS_CERTIFICATE=/certs/registry-auth.crt\n    - REGISTRY_HTTP_TLS_KEY=/certs/registry-auth.key\nAnd when these line are not here I can connect to my registry page but I cant connect to the registry with docker login. I will try to use LetsEncrypt and tell you if it's work but if you have some idea to solve this problem with self signed certificate it will be awsome !!\n. Started GET \"/myuser/my-other-site.fr/container_registry\" for XX.XX.XX.XX at 2016-09-15 23:44:59 +0200\nProcessing by Projects::ContainerRegistryController#index as HTML\n  Parameters: {\"namespace_id\"=>\"myuser\", \"project_id\"=>\"my-other-site.fr\"}\nCompleted 500 Internal Server Error in 381ms (ActiveRecord: 13.5ms)\nFaraday::ConnectionFailed (wrong status line: \"\\x15\\x03\\x01\\x00\\x02\\x02\"):\n  lib/container_registry/client.rb:19:in repository_tags'\n  lib/container_registry/repository.rb:22:inmanifest'\n  lib/container_registry/repository.rb:31:in tags'\n  app/controllers/projects/container_registry_controller.rb:8:inindex'\n  lib/gitlab/request_profiler/middleware.rb:15:in call'\n  lib/gitlab/middleware/go.rb:16:incall'\n. In my last docker-compose I had - GITLAB_REGISTRY_API_URL=http://registry:5000 for gitlab container. I change it with - GITLAB_REGISTRY_API_URL=https://registry:5000 and now I got the error : \n```\nStarted GET \"/myuser/my-other-site.fr/container_registry\" for XX.XX.XX.XX at 2016-09-16 00:02:54 +0200\nProcessing by Projects::ContainerRegistryController#index as HTML\n  Parameters: {\"namespace_id\"=>\"myuser\", \"project_id\"=>\"my-other-site.fr\"}\nCompleted 500 Internal Server Error in 397ms (ActiveRecord: 18.5ms)\nFaraday::SSLError (SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed):\n  lib/container_registry/client.rb:19:in repository_tags'\n  lib/container_registry/repository.rb:22:inmanifest'\n  lib/container_registry/repository.rb:31:in tags'\n  app/controllers/projects/container_registry_controller.rb:8:inindex'\n  lib/gitlab/request_profiler/middleware.rb:15:in call'\n  lib/gitlab/middleware/go.rb:16:incall'\n```\nDo you want my all docker-compose ?\n. ```\n  gitlab:\n    restart: always\nimage: sameersbn/gitlab:8.11.5\n\ndepends_on:\n- redis\n- postgresql\n\nports:\n- \"80:80\"\n- \"5500:5500\"\n- \"10022:22\"\n\nvolumes:\n- /srv/docker/gitlab/gitlab/data:/home/git/data:Z\n- /srv/docker/gitlab/gitlab/logs:/var/log/gitlab\n- /srv/docker/gitlab/gitlab_registry/certs:/certs\n\nenvironment:\n\n...\n\n- GITLAB_REGISTRY_ENABLED=true\n- GITLAB_REGISTRY_HOST=registry.gitlab.mysite.fr\n- GITLAB_REGISTRY_PORT=5500\n- GITLAB_REGISTRY_API_URL=https://registry:5000\n- GITLAB_REGISTRY_KEY_PATH=/certs/registry-auth.key\n- GITLAB_REGISTRY_ISSUER=gitlab-issuer\n\nregistry:\n    restart: always\nimage: registry:2.4.1\n\nports:\n- \"5000:5000\"\n\nvolumes:\n- /srv/docker/gitlab/gitlab/data/shared/registry:/registry\n- /srv/docker/gitlab/gitlab_registry/certs:/certs\n\nenvironment:\n- REGISTRY_LOG_LEVEL=info\n- REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n- REGISTRY_AUTH_TOKEN_REALM=http://gitlab.mysite.fr/jwt/auth\n- REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n- REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n- REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/registry-auth.crt\n- REGISTRY_HTTP_TLS_CERTIFICATE=/certs/registry-auth.crt\n- REGISTRY_HTTP_TLS_KEY=/certs/registry-auth.key\n- REGISTRY_STORAGE_DELETE_ENABLED=true\n\n```\nNow I try some configuration in gitlab container: \n- - GITLAB_REGISTRY_API_URL=https://registry:5000\n  - SSL_REGISTRY_KEY_PATH=/certs/registry-auth.key\n  - SSL_REGISTRY_CERT_PATH=/certs/registry-auth.crt\n- - GITLAB_REGISTRY_API_URL=http://registry:5000\n  - SSL_REGISTRY_KEY_PATH=/certs/registry-auth.key\n  - SSL_REGISTRY_CERT_PATH=/certs/registry-auth.crt\n. AddSSL_REGISTRY_KEY_PATH=/certs/registry-auth.key and SSL_REGISTRY_CERT_PATH=/certs/registry-auth.crt change nothing to the issue\n. Nothing change when I set GITLAB_REGISTRY_PORT to 5000...\nI think it's an error with ssl or https comuniction between gitlab and the registry because it's appear only when I add REGISTRY_HTTP_TLS_CERTIFICATE=/certs/registry-auth.crt and REGISTRY_HTTP_TLS_KEY=/certs/registry-auth.key to the registry container\n. I need to add the REGISTRY_HTTP_TLS_CERTIFICATE to /etc/ssl/certs on my server or in my gitlab container ?\nNo problem for the \"late\" response. \nI trying to do this all by self-signed certificate for the moment but I will try to use Lets Encrypt after. I thinking about using this : https://hub.docker.com/r/garymonson/lets-encrypt-nginx/. If you have better idea for nginx-proxy / gitlab / registry / letsencrypt I'll take it.\nEDIT: \"This step need to be done in every container\" so in the gitlab container\n. @solidnerd I run my docker compose, I do :\ndocker exec ..._gitlab_1 cp /certs/registry-auth.crt /etc/ssl/certs\ndocker exec ..._gitlab_1 update-ca-certificates\nAnd I've got the same error : \n```\nStarted GET \"/myuser/my-other-site.fr/container_registry\" for XX.XX.XX.XX at 2016-09-16 12:53:12 +0200\nProcessing by Projects::ContainerRegistryController#index as HTML\n  Parameters: {\"namespace_id\"=>\"myuser\", \"project_id\"=>\"my-other-site.fr\"}\nCompleted 500 Internal Server Error in 325ms (ActiveRecord: 19.4ms)\nFaraday::SSLError (SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed):\n  lib/container_registry/client.rb:19:in repository_tags'\n  lib/container_registry/repository.rb:22:inmanifest'\n  lib/container_registry/repository.rb:31:in tags'\n  app/controllers/projects/container_registry_controller.rb:8:inindex'\n  lib/gitlab/request_profiler/middleware.rb:15:in call'\n  lib/gitlab/middleware/go.rb:16:incall'\n```\n. ",
    "reynold-lariza": "Hi guys, I'm trying to enable registry, but it seems I'm failing on something...\nI was trying to enable registry with the following params...\n--env 'GITLAB_REGISTRY_ENABLED=true' --env 'GITLAB_REGISTRY_HOST=<same-as-gitlab-host>' --env 'GITLAB_REGISTRY_PORT=5000' \\\nas far as I can see the I did publish it \n--publish 5000:5000\n443/tcp, 0.0.0.0:5000->5000/tcp, 0.0.0.0:10022->22/tcp, 0.0.0.0:10080->80/tcp\nbut when I get inside the container via docker exec -it gitlab bash\nI didn't see anything listening inside the container.\n\nWhat could I be missing here?\nFYI, I'm running docker-gitlab from behind an ELB with ssl cert configured in ELB itself, and routed to port 10080 of the host. Hi @maikelvl,\nI have the standalone docker registry working.\nThe reason I'd like to use Gitlab's built-in docker registry is because so users can login using their specific credential.\nAs I have mentioned, those listening ports shown is from inside the gitlab container, not related to AWS.\n. Hmn... looks like I misunderstood the way registry is installed via gitlab, it seems I still have to enable the standalone registry, hahaha.\nreference : https://docs.gitlab.com/ce/administration/container_registry.html. @maikelvl \nok, so my current docker registry is running behind nginx, and this nginx is behind ELB for the https (ssl cert is uploaded and registered on ELB).\nmy nginx config points to via server name devops.mysite.com\n```\nlocation /v2/ {\n    # Do not allow connections from docker 1.5 and earlier\n    # docker pre-1.6.0 did not properly set the user agent on ping, catch \"Go \" user agents\n    if ($http_user_agent ~ \"^(docker\\/1.(3|4|5(?!.[0-9]-dev))|Go ).$\" ) {\n      return 404;\n    }\n  # To add basic authentication to v2 use auth_basic setting plus add_header\n     auth_basic \"registry.localhost\";\n     auth_basic_user_file /ebs1/nginx/auth/registry.password;\n    # add_header 'Docker-Distribution-Api-Version' 'registry/2.0' always;\nproxy_pass                          http://localhost:5000;\n\nproxy_redirect     off;\nproxy_set_header  Host              $http_host;   # required for docker client's sake\nproxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP\nproxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;\nproxy_set_header  X-Forwarded-Proto \"https\";\nproxy_read_timeout                  900;\n\nproxy_set_header   X-Forwarded-Host $server_name;\n}\n\n```\nthus, I am able to push and pull images to it via https://devops.mysite.com\ndocker login -u someuser -p somepass devops.mysite.com\nI was thinking that I could leverage Gitlab's credentials to login to docker registry, instead of this single someuser credential for all. That way each user can login using their own existing Gitlab account like:\ndocker login -u gitlabUser -p gitlabPassword gitlab.mysite.com\n. ok a bit of trial and error, I am now able to see, push pull docker image on a project\n\nHowever, I am able to do push and pull even without credentials. What could I be missing here?. By the way, here is the docker config:\ndocker run --restart=always --name gitlab -d \\\n    --publish 10022:22 --publish 10080:80 \\\n    --env 'GITLAB_SECRETS_OTP_KEY_BASE=someKey~' \\\n    --env 'GITLAB_SECRETS_SECRET_KEY_BASE=someKey~' \\\n    --env 'GITLAB_SSH_PORT=10022' \\\n    --env 'GITLAB_PORT=443' \\\n    --env='GITLAB_HOST=git.mysite.com' \\\n    --env='GITLAB_SSH_HOST=git.mysite.com' \\\n    --env 'GITLAB_RELATIVE_URL_ROOT=/' \\\n    --env 'GITLAB_HTTPS=true' \\\n    --env 'GITLAB_SECRETS_DB_KEY_BASE=someKey~'\\\n    --env='SMTP_USER=user@mysite.com' \\\n    --env='SMTP_PASS=someKey~' \\\n    --env 'REDIS_HOST=some-redis.cache.amazonaws.com' \\\n    --env 'REDIS_PORT=6379' \\\n    --env 'DB_ADAPTER=mysql2' \\\n    --env 'DB_HOST=some-db.rds.amazonaws.com' \\\n    --env 'DB_NAME=gitlab' \\\n    --env 'DB_USER=gitlab' --env 'DB_PASS=gitlab' \\\n    --env 'GITLAB_REGISTRY_ENABLED=true' \\\n    --env 'GITLAB_REGISTRY_KEY_PATH=/home/git/data/certs/devops/registry-account.key' \\\n    --env 'GITLAB_REGISTRY_HOST=registry.mysite.com' \\\n    --env 'REGISTRY_HTTP_TLS_CERTIFICATE=/home/git/data/certs/devops/registry.crt' \\\n    --env 'REGISTRY_HTTP_TLS_KEY=/home/git/data/certs/devops/registry.key' \\\n    --env 'GITLAB_REGISTRY_ISSUER=registry.mysite.com' \\\n    --env 'GITLAB_REGISTRY_API_URL=https://register.mysite.com/' \\\n    --volume /ebs1/gitlab/gitlab:/home/git/data \\\n    wslph/gitlab. And here is my nginx config:\n```\nLines starting with two hashes (##) are comments with information.\nLines starting with one hash (#) are configuration parameters that can be uncommented.\n\n\nconfiguration\n\nRedirects all HTTP traffic to the HTTPS host\nserver {\n  listen :82;\n  server_name  registry.mysite.com;\n  server_tokens off; ## Don't show the nginx version number, a security best practice\n  return 301 https://$http_host:$request_uri;\n  access_log  /ebs1/logs/nginx/gitlab_registry_access.log;\n  error_log   /ebs1/logs/nginx/gitlab_registry_error.log;\n}\nserver {\n  # If a different port is specified in https://gitlab.com/gitlab-org/gitlab-ce/blob/8-8-stable/config/gitlab.yml.example#L182,\n  # it should be declared here as well\n  listen :443 ssl http2;\n  server_name  registry.mysite.com;\n  server_tokens off; ## Don't show the nginx version number, a security best practice\n  client_max_body_size 0;\n  chunked_transfer_encoding on;\n  ## Strong SSL Security\n  ## https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html & https://cipherli.st/\n  ssl on;\n  ssl_certificate /ebs1/nginx/certs/registry.mysite.com.crt;\n  ssl_certificate_key /ebs1/nginx/certs/registry.mysite.com.key;\n  ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4';\n  ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;\n  ssl_prefer_server_ciphers on;\n  ssl_session_cache  builtin:1000  shared:SSL:10m;\n  ssl_session_timeout  5m;\n  access_log  /ebs1/logs/nginx/gitlab_registry_access.log;\n  error_log   /ebs1/logs/nginx/gitlab_registry_error.log;\n  location / {\n    proxy_set_header  Host              $http_host;   # required for docker client's sake\n    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP\n    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;\n    proxy_set_header  X-Forwarded-Proto $scheme;\n    proxy_read_timeout                  900;\n    proxy_pass          http://localhost:5000;\n  }\n}\n```. Hmn... \nI have already installed mattermost docker container, its up and running, but there is no parameter to docker-gitlab for it? :|\nreference: https://gitlab.com/gitlab-org/omnibus-gitlab/tree/master/doc/gitlab-mattermost. anyone tested 8.13.0 yet?\n. Attaching issue #938  (for it to close automatically upon merge)\n. Hmn... while I was testing with the similar changes into my own fork... merge get stuck, and not working at all even after refreshing the page :/\n\n. Environment/observation with 8.13.0\nMy testing is done with an existing (external) data for git, database, and redis. I had to revert to 8.12.7 yesterday morning, after I found that when I tried to accept a MR from one branch to another branch (to an existing project). \nBehavior:\nThe accept merge request button get stuck, and nothing happens. Then after refreshing the page, the MR wasn't merged.\nP.S. I will do another test later today with these latest changes, when I get the time.\n. I've tested this PR, the MR is now working fine! :)\nNot sure what was wrong with 8.13.0, but the issue I encountered with it, is now gone.\n. Seems to be working fine with my setup.. there is just one thing though, I noticed the version number for GitLab Workhorse seems to be missing?\n\n. I suppose this can be ignored, since there is already 8.14.1 release \nEdit... as of this writing, tag : v8.14.1 is not yet available :/. The missing version seems to be still there :|\n\n. I've already it applied on mine, but still didn't show the version number. Updated mine as well. Seems to be working fine too. (except for the missing workhorse version still missing :D ). @xueshanf, You can fork it, setup your own instead of waiting. \nMine is configured to notify me if there's a new tag in https://gitlab.com/gitlab-org/gitlab-ce/tags. And when that happens, I will go to this repo, and see whatever change I may need to apply to my own fork, which is hosted also to our own Gitlab instance. After commit->push->mr-to-master, everything is automated, gitlab-ci will build the docker container, push it to hub, then run the scripts that will backup the current gitlab instance,and finally update the instance itself (Gitlab). . I'm just wondering, whenever I get a notifcation for a new release, and try to build it. I get a build failure, because the branch/tag does not exist yet (https://github.com/gitlabhq/gitlabhq/tags) until a sometime later? :/. from your LB or nginx/apache config you would need to apply port/route forwarding. \nMine is configured via LB, therefore all requests go thru 443 on on public domain, and routed internally thru 10443 of the gitlab container.\nI would recommend disabling http (port 80) if you already have 443, for better security.\n. Interesting! I didn't know there is an official docker image of Gitlab! :O. much better! :). @iamchanghyunpark,\nI think we should include it into this PR as well. Its easier to track it that way anyway, since it follows whatever new features (or bug fixes) is applied per Gitlab CE release.. FYI guys,\nCURRENT ISSUE:\nI'm currently using 8.17.0, and there seems to be a problem with commits not updating the merge request, even though the commit is seen from the source branch page.\nAnd you cant downgrade anymore to 8.16.6, otherwise you'll get something like:\nActionView::Template::Error (Mysql2::Error: Unknown column 'timelogs.trackable_id' in 'where clause': SELECT SUM(`timelogs`.`time_spent`) FROM `timelogs` WHERE `timelogs`.`trackable_id` = 734 AND `timelogs`.`trackable_type` = 'MergeRequest'):\nAlso, my ci builds are not working properly anymore :(\nI already have re-configured a fresh gitlab-ci-multi-runner to gitlab 8.17.0 instance, and its not triggering any ci builds :(\n. Hi @jostyee,\nHave you tried adding commits to existing MR? Mine's not showing the additional commits :/ Although the merge commits are there after doing the merge.\nAlso, does you gitlab ci builds works fine? I mean, does it auto run your builds upon update to target branch? or upon creation of tag? (depends on gitlab-ci.yml only tag). @jostyee,\nYep, its fine pulling from https/ssh, however because we use built-in gitlab CI, so that's why I'm a bit frustrated, looks like I will have no choice but to inform the entire dev team and rollback sometime tomorrow :(. @jostyee,\nMate, it does not matter if we follow the same git flow or not. The context is that I'm expecting the same behavior similar to Github, and Stash, that if a commit is pushed to a source branch of an MR (or PR) it should update the list of commits. If that is not the expected behavior, it shouldn't even allow it to be merged in the first place. \nAnyway, the reason I'm posting my observations is that everyone who are using Gitlab, know what others like you and me are experience during this update, right mate? ;)\n. Thanks @jostyee,\nFor now I've reverted from 8.17.0 to 8.16.6 manually (geez! what a pain! :D ), I'm currently observing that my existing project ci build are not working, but when I created a fresh project, gitlab ci is triggered. Must be something with after I upgraded from 8.16.6 to 8.17.0.... hmn... For now I'm slowly isolating, and upgrading very slowly, to figure out what happened to our instance :). Hahaha, this is the toughest PR so far eh? :D\nI had to revert ours to stable 8.16.6, I must be doing something wrong or incomplete that it messed up the DB pushing this upgrade to production. \nFor now, I'll wait until this PR is merged ;). Ah, I did a similar thing with #1223, I had to make this work because of Rack Attack. \nAWS ELB > nginx-proxy > docker-gitlab-with-nginx\nHowever in my case I've had it set default to 0.0.0.0/0 since its just the nginx inside gitlab container.. Ah.. surprisingly, I was able to make it work...\nI also added inside gitlab container's nginx.conf (also with main nginx proxy container)\nhttp {\nreal_ip_header X-Forwarded-For;\nset_real_ip_from 0.0.0.0/0;\n...\n}\nand with main nginx proxy gitlab.conf\n```\nserver {\n    listen       80;\n    server_name  gitlab-domain.com;\n    client_max_body_size 640M;\n    client_body_buffer_size 1M;\nlocation / {\nproxy_set_header  Host $host;\nproxy_set_header  X-Real-IP $remote_addr;\nproxy_set_header  X-Forwarded-Proto https;\nproxy_set_header  X-Forwarded-For $remote_addr;\nproxy_set_header  X-Forwarded-Host $server_name;\nproxy_pass http://gitlab-ec2-ip:10080/;\n\n    }\n\n}\n```\nNow it works as I expected it... but I had to do this hard coding edit into a a live gitlab container...\nIs there anyway this can be done upon first run of the container?. FYI, \nCould be useful to others.\nI was successful setting this up with config NGINX_SET_REAL_IP_FROM\n| NGINX_SET_REAL_IP_FROM | Set the value for X-Real-IP. Defaults to 0.0.0.0/0. |\n```\nassets/runtime/env-defaults\n\n\nNginx Additional Configuration\n\nNGINX_SET_REAL_IP_FROM=${NGINX_SET_REAL_IP_FROM:-\"0.0.0.0/0\"}\n```\n\n```\nassets/runtime/functions\nNGINX_PROXY_BUFFERING \\\nNGINX_ACCEL_BUFFERING \\\n\n\nNGINX_SET_REAL_IP_FROM \\\n    NGINX_X_FORWARDED_PROTO\n```\n\n+ # assets/runtime/config/nginx/gitlab and assets/runtime/config/nginx/gitlab-ssl\n+  ## Required for retrieving actual client IP address\n+  real_ip_header X-Forwarded-For;\n+  set_real_ip_from {{NGINX_SET_REAL_IP_FROM}};\nNote: this assumes your nginx is running natively or using --net=host (in addition mine is behind AWS ELB). Hey guys, \nApart from that Aliyun OSS support, how goes the testing with 9.3.0? any issues found? I just upgraded to 9.2.7 yesterday. \nI get more cautious as our usage of Gitlab CE grows ;) I wouldn't want to bang my head on the wall if I break it :P\n. Hey @timfeirg,\nI mean you have upgraded your own instance of gitlab to 9.3.0, you are able to upgrade successfully without any smoke or noise at all? You made this PR with that kind of confidence right? ;)\n. There seems to be some problem with migrating from 9.3 to 9.4 https://gitlab.com/gitlab-org/gitlab-ce/issues/35438, I've encountered similar issue with MariaDB as database\n```\nStandardError: An error has occurred, all later migrations canceled:\nMysql2::Error: Cannot add or update a child row: a foreign key constraint fails (gitlab.#sql-1_4331, CONSTRAINT fk_rails_9ffc86a3d9 FOREIGN KEY (protected_branch_id) REFERENCES protected_branches (id) ON DELETE CASCADE): ALTER TABLE protected_branch_push_access_levels ADD CONSTRAINT fk_rails_9ffc86a3d9\nFOREIGN KEY (protected_branch_id)\n  REFERENCES protected_branches (id)\n ON DELETE CASCADE\n``. Thanks mate! that worked for me as well :). Ahh, that config.toml -- I forgot to add it. Its working now after I rebuilt it.. Hi @grimmy and everyone, I was able to build a container using this patch -- but when I tried this on to our existing Gitlab CE 11.8.1, Gitlab stuck on the temp page (the page when its still just starting up), also workhorse and gitaly failed to start. Was able to revert back to CE, but unable to migrate to EE :( . Not mine. EncounteredError while loading the project data. Please try again.` For web ide. Maybe not all instances will encounter it, but this was reported at https://gitlab.com/gitlab-org/gitlab-ce/issues/45707\nAll other functionalities seems to be working fine, except for this web-ide feature. \n. Is it just me or when I build with 11.0.2 and 11.0.1 even?\nIt just fails to build no matter how many times I tried :(\nwhat could I be missing?\nUpdate:\nI tries manually building it on my local machine:\n/home/git/gitlab/node_modules/.bin/webpack --config /home/git/gitlab/config/webpack.config.js --bail\nThe command '/bin/sh -c bash ${GITLAB_BUILD_DIR}/install.sh' returned a non-zero code: 137\nwhich is the same issue as #1188 \n11.0.2 build error\n/home/git/gitlab/node_modules/.bin/webpack --config /home/git/gitlab/config/webpack.config.js --bail\nrake aborted!\nCommand failed with status (): [/home/git/gitlab/node_modules/.bin/webpack...]\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/webpack-rails-0.9.10/lib/tasks/webpack.rake:17:in `block (2 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-12.3.1/exe/rake:27:in `<top (required)>'\nTasks: TOP => gitlab:assets:compile => webpack:compile\n(See full trace by running task with --trace)\nThe command '/bin/sh -c bash ${GITLAB_BUILD_DIR}/install.sh' returned a non-zero code: 1\nERROR: Job failed: exit status 1\n11.0.1 build error\n/home/git/gitlab/node_modules/.bin/webpack --config /home/git/gitlab/config/webpack.config.js --bail\nrake aborted!\nCommand failed with status (): [/home/git/gitlab/node_modules/.bin/webpack...]\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/webpack-rails-0.9.10/lib/tasks/webpack.rake:17:in `block (2 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-12.3.1/exe/rake:27:in `<top (required)>'\nTasks: TOP => gitlab:assets:compile => webpack:compile\n(See full trace by running task with --trace)\nThe command '/bin/sh -c bash ${GITLAB_BUILD_DIR}/install.sh' returned a non-zero code: 1\nERROR: Job failed: execution took longer than 1h0m0s seconds. I've updated to 10.8.5 for now, as this one got built without a hitch :). Fixed it! Two things I did...\nFirst, the duration for the build default timeout was set to 1h, but then the build was taking longer than it. That's why the timeout. So I set it to 2h and it proceeded fine.\nSecond, the build was using official ubuntu xenial image. So I reverted to use the original sameersbn/ubuntu:16.04.20180124\nGeez! :D\n. cool! thanks! but you might want to separate them to two PRs? theme and letsencrypt. I've added the theme configuration to mine, but not LE, as I don't really need it :). Just an update, even for 11.7.5, same issue :( \nam I missing something? \nTIA. I made it work -- but I had to fire up an 8 core 16GB ubuntu xenial VM in DO.\n/home/git/gitlab/node_modules/.bin/webpack --config /home/git/gitlab/config/webpack.config.js --bail\nHash: 57be36db00242d9b6e00\nVersion: webpack 4.19.1. ",
    "rbucker": "There is lots of information here... One thing that does not seems to be discussed (if I did not skip it...)\nfile: /etc/docker/daemon.json\n{\n  \"insecure-registries\" : [\"registry.bucker.net\"]\n}\nonce I added the daemon config I was able to docker login http://registry.bucker.net\n. this worked better\nservices:\n  - name: docker:dind\n    command: [\"--insecure-registry=registry.bucker.net\"]. ",
    "paolomainardi": "@gitlab-pano have you solved the problem then ?  . I know that this MR has been closed, but you wrote In the blog post i read about that they want to use Postgressql 9.6 so we need to update this image as well. Another point is to check if the base image can be updated. but i cannot find any reference about that, can you clarify if the pgsql is needed ?. Thanks a lot @solidnerd, everything is clear now \ud83d\udc4d \n. Any chance to get this MR reviewed any time soon before the 8.15.0 release ?\nMerry Christmas :). Thanks Nicolas!. @solidnerd i agree with that but i didn't find any way to do it without be BC, any suggestions ?\n. A solution that can be implemented can be the following one:\n```\nREMOTE BACKUPS\nREMOTE_BACKUPS=${REMOTE_BACKUPS:-false}\nREMOTE_BACKUP_PROVIDER=${REMOTE_BACKUP_PROVIDER}\nREMOTE_BACKUP_DIRECTORY=${REMOTE_BACKUP_DIRECTORY}\n```\nThat can be instantiated like this:\nREMOTE_BACKUP_PROVIDER=Google\nREMOTE_BACKUP_DIRECTORY='bucket_name_or_directory'\nREMOTE_BACKUP_CONNECTION_OPTIONS_KEY_1=google_storage_access_key_id\nREMOTE_BACKUP_CONNECTION_OPTIONS_VAL_1=12341234\nREMOTE_BACKUP_CONNECTION_OPTIONS_KEY_2='google_storage_secret_access_key'\nREMOTE_BACKUP_CONNECTION_OPTIONS_VAL_2=12341234\nWhere key_N/val_N will be iterated by the bash script using the name as a pattern, building the exact portion needed by the fog storage.\nIf you have simpler solutions in mind, let me know :)\n. @solidnerd just a follow-up, thanks :). @lenovouser would like to see the gce integration or the gce integration like the last proposal ?. @solidnerd do you have time to check this PR ?. Can I propose to merge this one while discussing a more generic way to support the providers supported by fog ?. Ok what do you suggest ?. What do you think about my more generic proposal ?. ping @sameersbn @solidnerd . @solidnerd got it, as you said most of the logic is already implemented, what do you want let me change ?. @solidnerd thanks, i am going to implement it in the next few days.. @solidnerd finally did as requested, i hope that now can be merged :). @solidnerd just a follow-up\n. Thanks a lot @solidnerd :+1:. I confirm the same bug here on 8.15.2\n. LGTM. In the meanshile has been released 8.16.1 and 8.16.2 https://about.gitlab.com/2017/01/25/gitlab-8-dot-16-dot-2-released/. The problem is:\n```\n== Seed from /home/git/gitlab/db/fixtures/production/001_admin.rb\nCould not create the default administrator account:\n--> Password is too short (minimum is 8 characters)\n```. The problem is:\n```\n== Seed from /home/git/gitlab/db/fixtures/production/001_admin.rb\nCould not create the default administrator account:\n--> Password is too short (minimum is 8 characters)\n``. I like it, thanks for the contribution! \ud83d\udc4d . We missed this MR for the last release @solidnerd. Sorry but the current check fail if AWS_BACKUPS is false, it doesn't evaluate the second argument, sorry for my poor bash skills. cc @solidnerd . I think that we should upgrade the node version bundled with the base image, just to follow the project best practices.\ncc\u00a0@solidnerd @sameersbn . @iamchanghyunpark  we should upgrade node version on the base image, which isFROM sameersbn/ubuntu:14.04.20170123` . @reynold-lariza it is a nice approach as well.\n@iamchanghyunpark just let me understand, are node packages already installed on the ubuntu base image and we relied until today to them to build the themes ?. @iamchanghyunpark ok, so would be useful to just update the node version on the base image as we are relying on it to build and run gitlab ? . @iamchanghyunpark ok that's quite clear now, i was thinking that we already had an outdated nodejs package on the base image, sorry and thanks for the contribution!. We can't ship 8.17 without pages.\nIl giorno lun 27 feb 2017 alle 11:35 Josta Yee notifications@github.com\nha scritto:\n\nbetter to leave Pages to a separate PR?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1095#issuecomment-282684610,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAAiK64ArixSdIHL056UaImj4hOX4Dixks5rgqbbgaJpZM4MJcEE\n.\n-- \nSPARKFABRIK\n\nPaolo Mainardi\nCTO & Founder\ntel: +39-340-1678089\nskype: paolo_mainardi\nhttp://www.sparkfabrik.com\n\u1427\n. anyone is working on this ?. LGTM. LGTM \ud83d\udc4d . Please close this PR @leebing . @solidnerd do you need any kind of support ? . @solidnerd do you need any kind of support ? . any kind of progress or something we can do to speed up the things ?. any kind of progress or something we can do to speed up the things ?. Just 7 days to gitlab 9.0 :). Just 7 days to gitlab 9.0 :). Are you sure to use the right certificate ? I am currently using the K8s integration with gke without any kind of problem.. Are you sure to use the right certificate ? I am currently using the K8s integration with gke without any kind of problem.. LGTM :+1:. LGTM :+1:. LGTM :+1:. LGTM :+1:. @Kaleesastha what kind of update are you waiting for ? as @solidnerd suggested, please restore the database and try again.. @Kaleesastha what kind of update are you waiting for ? as @solidnerd suggested, please restore the database and try again.. LGTM \ud83d\udc4d \n. LGTM \ud83d\udc4d \n. ping @solidnerd @sameersbn . ping @solidnerd @sameersbn . Ehy please merge this one guys.. Ehy please merge this one guys.. LGTM. LGTM. wow, nice contribution!. wow, nice contribution!. Any updates here ?. Any updates here ?. @solidnerd can we help you to get this PR merged and upgrade to the latest one ?. @solidnerd can we help you to get this PR merged and upgrade to the latest one ?. Thanks a lot @solidnerd!. Thanks a lot @solidnerd!. @solidnerd do you need some help to keep this project updated ? . @solidnerd do you need some help to keep this project updated ? . Another security release: https://about.gitlab.com/2018/12/20/critical-security-release-gitlab-11-dot-5-dot-5-released/. Another security release: https://about.gitlab.com/2018/12/20/critical-security-release-gitlab-11-dot-5-dot-5-released/. Another security release: https://about.gitlab.com/2018/12/20/critical-security-release-gitlab-11-dot-5-dot-5-released/. Well, I am a bit worried about future updates. @solidnerd help us to help you . Well, I am a bit worried about future updates. @solidnerd help us to help you . Thanks a lot @solidnerd! Can you write a short upgrade guide that can be used by us to help you for the next releases ?. Thanks a lot @solidnerd! Can you write a short upgrade guide that can be used by us to help you for the next releases ?. \ud83d\udc4d . \ud83d\udc4d . ",
    "marcellodesales": "@gitlab-pano Looking for the same!!! Using RexRay Volume driver for EFS... Will try this docker-compose...\nOr did you get any updates on this? Could you please share any updates?. ",
    "FarhadF": "I was getting \n```\nInitializing logdir...\nInitializing datadir...\nInstalling configuration templates...\nConfiguring gitlab...\nConfiguring gitlab::database\nERROR: \n  Please configure the database connection.\n  Refer http://git.io/wkYhyA for more information.\n  Cannot continue without a database. Aborting...\n```\nand \n```\nInitializing logdir...\nInitializing datadir...\nGenerating OpenSSH host keys... RSA1 RSA DSA ECDSA ED25519 \nInstalling configuration templates...\nConfiguring gitlab...\nConfiguring gitlab::database\nConfiguring gitlab::redis\nERROR: \n  Please configure the redis connection.\n  Refer http://git.io/PMnRSw for more information.\n  Cannot continue without a redis connection. Aborting...\n```\nWhich I fixed using : \nsudo docker service create --name gitlab --publish 10022:22 --publish 10080:80 --env 'GITLAB_PORT=10080' --env 'GITLAB_SSH_PORT=10022 --env 'DB_ADAPTER=postgresql --env 'DB_HOST=gitlab-postgresql' --env 'GITLAB_SECRETS_DB_KEY_BASE=12345678901234567890asdfghjkl' --env 'GITLAB_SECRETS_SECRET_KEY_BASE=12345678901234567890asdfghjkl' --env 'GITLAB_SECRETS_OTP_KEY_BASE=12345678901234567890asdfghjkl' --env 'DB_NAME=gitlabhq_production' --env 'DB_USER=gitlab' --env 'DB_PASS=securepassword' --env 'REDIS_HOST=gitlab-redis' --env 'REDIS_PORT=6379' --network gitlab --mount src=gitlab2,dst=/home/git/data,volume-driver=vmdk --constraint node.hostname==manager1 sameersbn/gitlab:8.11.6\nI exposed both redis and postgresql containers as external to gitlab. I think thats supposed to be as we dont have --link in swarm.\nNow I get : \nInitializing logdir...\nInitializing datadir...\nInstalling configuration templates...\nConfiguring gitlab...\nConfiguring gitlab::database\nConfiguring gitlab::redis...........................................................\n. Still cant figure out whats going on...\n. ",
    "adshrc": "Update: \nThe installer doesn't create any users. \n. Hi,\ni'm using latest.  Here is my docker-compose.yml entry:\ngitlab:\n    image: sameersbn/gitlab\n    container_name: gitlab\n    networks:\n      - main\n    environment:\n      - DEBUG=true\n      - REDIS_HOST=redis\n      - DB_ADAPTER=mysql2\n      - DB_HOST=mariadb\n      - DB_NAME=gitlab\n      - DB_USER=gitlab\n      - DB_PASS=...\n      - GITLAB_SECRETS_DB_KEY_BASE=...\n      - GITLAB_SECRETS_SECRET_KEY_BASE=...\n      - GITLAB_SECRETS_OTP_KEY_BASE=...\n    restart: always\n    links:\n      - mariadb:mariadb\n      - redis:redis\n    volumes:\n      - /mnt/docker/gitlab:/home/git/data:Z\n      - /etc/localtime:/etc/localtime\n. Nope, i've just deleted all volumes, databases (+redis) and re-initialized explicitly with 8.11.6. Same Problem. Is there a method to grant admin rights to a newly created user? (via database or console?)\n. Update:\nI found something interesting in the initialization log with DEBUG=false:\nSetting up GitLab for firstrun. Please be patient, this could take a while...\ngitlab already exists\nrake aborted!\nActiveRecord::StatementInvalid: Mysql2::Error: Cannot delete or update a parent row: a foreign key constraint fails: DROP TABLE `boards` CASCADE\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:in `query'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:in `block in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract_adapter.rb:484:in `block in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/notifications/instrumenter.rb:20:in `instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract_adapter.rb:478:in `log'\n...\nEdit: I don't know why it says gitlab already exists, actually i've emptied the database and deleted everything gitlab related on the filesystem\n. ",
    "3kami3": "Hi.\nFYI. https://gitlab.com/gitlab-org/gitlab-ce/issues/22733  \nWorkaround I found is this.\nhttps://github.com/3kami3/docker-gitlab/commit/4f5f2384800d2200a56c8b8cb185c8ef2175cbc0\n. This problem occurs when using it with a combination of GitLab(8.11.x and later) and Mysql.\nThis situation is the same as Issue #897.\nThe temporary fix is as follows:\n Rebuild the docker-gitlab container with a workaround patch(https://github.com/3kami3/docker-gitlab/commit/4f5f2384800d2200a56c8b8cb185c8ef2175cbc0).\nor\n Docker run option, overwrite mount with the volume option and start it.\n\ndocker run --name gitlab -d \n--link gitlab-mysql:mysql --link gitlab-redis:redisio \n--publish 10022:22 --publish 10080:80 \n--env 'GITLAB_PORT=10080' --env 'GITLAB_SSH_PORT=10022' \n--env 'GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string' \n--env 'GITLAB_SECRETS_SECRET_KEY_BASE=long-and-random-alpha-numeric-string' \n--env 'GITLAB_SECRETS_OTP_KEY_BASE=long-and-random-alpha-numeric-string' \n--volume /data/home/ywm/gitlab/gitlab/data:/home/git/data \n--volume /workaround-patched/assets/runtime/functions:/etc/docker-gitlab/runtime/functions \nsameersbn/gitlab:8.13.6\n. This situation is due to Issue #971.. I think that you can see in the description of the official GitLab document.\nUsing a LB and GitLab with bundled Nginx:\nSet NGINX_REAL_IP_RECURSIVE and NGINX_REAL_IP_TRUSTED_ADDRESSES.\nhttps://docs.gitlab.com/omnibus/settings/nginx.html#configuring-gitlab-trusted_proxies-and-the-nginx-real_ip-module\nUsing a non-bundled web-server:\nSet GITLAB_TRUSTED_PROXIES.\nhttps://docs.gitlab.com/omnibus/settings/nginx.html#using-a-non-bundled-web-server\n. Thank you for the merge.. ",
    "evenh": "There is now two PR's to the Ubuntu base image\n- https://github.com/sameersbn/docker-ubuntu/pull/11 (bumps to ubuntu:xenial-20160923.1) by @eisnerd \n- https://github.com/sameersbn/docker-ubuntu/pull/12 (bumps to ubuntu:trusty-20160923.1)\nHopefully @sameersbn will merge one of them soon enough \n. Sorry about that, forgot to add the file to the commit. Should be fixed now.\n. Great initiative :+1:\nI've never upgraded a to minor release before, but I would think that at least the following changes must be applied as well:\n- Upgrade gitlab-shell to 3.6.6\n- Upgrade gitlab-workhorse to 0.8.5\nBoth of these can be modified in the Dockerfile and should be made as two separate commits as per convention of the last few releases (8.12.0, 8.11.0, 8.10.0) to make reverting easier if needed.\n. Ping @sameersbn and @solidnerd since this is a security update.\n. Please add a note for the changelog as well :-). I'm seeing this issue as well (rejected force push when performing a regular push). Let's hope it is resolved quickly upstream.. I can confirm that upgrading to 8.15.1 fixes the problem here as well.. The Authentiq support seems to be added as of commit ea679665e82557cc27faca859b17fb5a0b5ef61d. Huh, very strange that the tag refers to this version. \nI've removed the non-existing version upgrade for now.. Filed as https://gitlab.com/gitlab-org/gitlab-ce/issues/37617. R\u00e9my Coutable replied and said:\n\nThe v0.5.1 tag for gitlab-pages does exist there: https://gitlab.com/gitlab-org/gitlab-pages/tags/v0.5.1\n\nWhen I now try to manually download https://gitlab.com/gitlab-org/gitlab-pages/repository/archive.tar.gz?ref=v0.5.1 - it succeeds. I will try to add the updated version again.. @phenomax: In commit cb7edf8 you upgrade to versions that are not specified here. Where is the newer versions published?. Nevermind me, I just looked at the wrong commit :sweat_smile: Anyway, I think @solidnerd likes a neat and clean history, so it should probably be squashed down to 1 commit for upgrading to 10.0.0 and one commit for each version upgrade (a total of 3 commits). I\u2019ll try and submit a cleaned up PR later this evening :-). See #1358 . Since @solidnerd is on holiday, are you able to do a review @sameersbn?. Awesome! I've rebased the other two pull requests against the updated branch as well.. Thanks for the info @phenomax. I've added a commit for it, starting in #1358 and rebased from there (even though the GitHub UI sorts by date, it's not the committed order).. Official blog post at https://about.gitlab.com/2017/10/05/gitlab-10-dot-0-dot-3-released/. Ugh, was apparently a bit too trigger happy. They haven't tagged the release yet :laughing: . Have you had the time to have a look @solidnerd? :-). Do you have a reference to the update of Golang @drujd?. Ping @solidnerd @sameersbn. ",
    "dashersw": "@solidnerd looking forward to it! :)\n. Thanks a lot!\n. Unofficial sounds \"fake\". I reviewed the \"original\" Docker images too; but still, this method is better.. I don't think this repo should \"let people know about it\", it's GitLab's responsibility to do that. Make sure to put it in bold in GitLab setup documentation, and people won't have to search Google for docker gitlab.\nThis repo is updated in a controlled way; so it doesn't really break. I'm using it since 2014 and I don't remember it ever breaking. The only problem is, the releases follow GitLab's releases after a few days, because it takes time to update and verify this repository.\nA better wording:\nCustom, or hand-built, as in \"This is a custom GitLab image.\" And one can call GitLab's own images as \"the standard way\".. No problem :) I would merge it this way :). ",
    "virtuman": "I've also been trying to figure out the whole mattermost integration. Gitlab says that it ships with mattermost in omnibus image now but it is disabled by default, ie:\nhttp://docs.gitlab.com/omnibus/package-information/defaults.html\nGitlab.com is not overly clear whether mattermost is something like a registry, that has to be activated with the config settings in order to work, but it looks that way? or am I wrong here and it needs to be installed completely separate and point to the externally running mattermost instance?\nCould you clarify ?\n. From the omni gitlab-ce install i see that workhorse should be version 0.8.5:\n\n. I'm guessing that official omnibus gitlab image hasn't been updated to use v1.0.0, i just reinstalled omnibus and it's still on v0.8.5\nAny chance 8.14 will be merged in today ?. @solidnerd anything i or anyone can try doing to expedite this merge request ?\nThanks. gitlab-ctl db:migrate will fix it for you (most likely) or you can check status first: gitlab-ctl db:migrate:status. ",
    "mindriven": "+1 for implementing it or- if it's out of scope of this project - please clarify where to look for answers.. After some time spent digging around I think I know how the situation looks like. When installing Gitlab from Omnibus package then one gets the boundled-in mattermost. However this repo does installation from sources, so mattermost is not included. Can someone please confirm this?\nIf I got it correctly this \"issue\" should be seen as feature request.. @reynold-lariza from what I understood integrating these two would require a contribution to this repository. I've read around a bit and it seems like this requires fairly intimate knowledge about gitlab. I was hoping that I can find how instructions from using omnibus package are mapped to docker version, but no success so far.\nCan maintainers of this project let us know if this is something we could get in near future. I would love to contribute, but I will need some directions where to start.. How come closed? Resolved or won't fix? Some clarity would be awesome. Thanks!. Sure, with pleasure. The file that I've used is presented below.\nBTW I got gitlab 7.9.1 spinning on my docker-machine but without using docker-compose. I've talked with docker directly. Command that got me going is:\nbash\ndocker run --name=gitlab  -e 'DB_TYPE=postgres' -e 'DB_HOST=postgresql' -e 'DB_NAME=gitlabhq_production' -e 'DB_USER=gitlab' -e 'DB_PASS=password' -e 'GITLAB_PORT=10080' -e 'GITLAB_SSH_PORT=10022' -p 10022:22 -p 10080:80 -v /opt/gitlab/data:/home/git/data  --link postgresql:postgresql --link redis:redisio sameersbn/gitlab:7.9.1\nAnd now docker-compose that failed for me:\n``` yml\nversion: '2'\nservices:\n   redis:\n     image: sameersbn/redis:latest\n     volumes:\n     - /srv/docker/gitlab/redis:/var/lib/redis:Z\npostgresql:\n     image: sameersbn/postgresql:9.4\n     volumes:\n     - /srv/docker/gitlab/postgresql:/var/lib/postgresql:Z\n     environment:\n     - DB_USER=gitlab\n     - DB_PASS=secretpassword\n     - DB_NAME=gitlabhq_production\ngitlab:\n     image: sameersbn/gitlab:7.9.1\n     volumes:\n     - /srv/docker/gitlab/gitlab:/home/git/data:Z\n     depends_on:\n     - redis\n     - postgresql\n     ports:\n     - \"10080:80\"\n     - \"10022:22\"\n     environment:\n     - DEBUG=false\n     - DB_TYPE=postgres #added because gitlab explicitly asked for it during the startup\n     - DB_ADAPTER=postgresql\n     - DB_HOST=postgres\n     - DB_PORT=5432\n     - DB_USER=gitlab\n     - DB_PASS=password\n     - DB_NAME=gitlabhq_production\n - REDIS_HOST=redis\n - REDIS_PORT=6379\n\n```\n. Thanks for help guys! I got it working using this file attached below.\nBTW. can any one please comment if my plan of updating gitlab after dockerizing it is a sane/recommended way? Or can you already predict a showstopper or a better way?\n``` yml\nversion: '2'\nservices:\n   redis:\n     image: sameersbn/redis:latest\n     volumes:\n     - /srv/docker/gitlab/redis:/var/lib/redis:Z\npostgresql:\n     image: sameersbn/postgresql:9.5-3\n     volumes:\n     - /srv/docker/gitlab/postgresql:/var/lib/postgresql:Z\n     environment:\n     - DB_USER=gitlab\n     - DB_PASS=password\n     - DB_NAME=gitlabhq_production\ngitlab:\n     image: sameersbn/gitlab:7.9.1\n     volumes:\n     - /srv/docker/gitlab/gitlab:/home/git/data:Z\n     depends_on:\n     - redis\n     - postgresql\n     ports:\n     - \"10080:80\"\n     - \"10022:22\"\n     environment:\n     - DEBUG=false\n     - DB_TYPE=postgres #added because gitlab explicitly asked for it during the startup\n     - DB_ADAPTER=postgresql\n     - DB_HOST=postgresql\n     - DB_PORT=5432\n     - DB_USER=gitlab\n     - DB_PASS=password\n     - DB_NAME=gitlabhq_production\n - REDIS_HOST=redis\n - REDIS_PORT=6379\n\n```\n. Thanks. I did a dry-run of an update, but I did not kept to your advice of updating only per path. It seems to be working correctly (I've created new repo, cloned it, pushed etc.). What problems did you expect? Am I missing something or am I just lucky this time.. ",
    "inful": "@mindriven mattermost is not included in the sameersbn-gitlab container, but you certainly integrate it when running it in a separate container. . @reynold-lariza Read https://docs.mattermost.com/deployment/sso-gitlab.html\nThen build a custom docker container for mattermost where you can pass the values as environment variables.. ",
    "joshuacox": "I recently built one using this:\nhttps://github.com/joshuacox/mkmattermost\nI did not need to pass those values in a environment variables, but I am mounting in configs as volumes.  All mirroring the official mattermost docker repo.  Then you can setup everything using mattermost itself.. @mindriven post an issue in my project here. I'd gladly support your options.  I think these guys want to support gitlab only.  And thank you @sameersbn and @inful you guys are doing a great job!!!! I rely on your containers, keep 'em up!. btw the broken version is 0.2.3 in the above catalog, closing here as its working for me using my workaround, feel free to reopen if you need any feedback from me. as an aside note, I am setting PGDATA, and I am using convoy-nfs as the the mount point for the official image, this may be related and why your image is failing for me.. \nPGDATA\nThis optional environment variable can be used to define another location - like a subdirectory - for the database files. The default is /var/lib/postgresql/data, but if the data volume you're using is a fs mountpoint (like with GCE persistent disks), Postgres initdb recommends a subdirectory (for example /var/lib/postgresql/data/pgdata ) be created to contain the data.\nhttps://hub.docker.com/_/postgres/. \nPGDATA\nThis optional environment variable can be used to define another location - like a subdirectory - for the database files. The default is /var/lib/postgresql/data, but if the data volume you're using is a fs mountpoint (like with GCE persistent disks), Postgres initdb recommends a subdirectory (for example /var/lib/postgresql/data/pgdata ) be created to contain the data.\nhttps://hub.docker.com/_/postgres/. of note, I now have the redmine catalog item working as well, and it was the same fix as gitlab, ie use the official image with PGDATA declared.  In the above catalog the 0.1.4 version of redmine is the broken example.. of note, I now have the redmine catalog item working as well, and it was the same fix as gitlab, ie use the official image with PGDATA declared.  In the above catalog the 0.1.4 version of redmine is the broken example.. reopening just to make sure this gets noticed as I have  a bit more data now. reopening just to make sure this gets noticed as I have  a bit more data now. ",
    "morsoinferno": "I have the same issue. I have a custom docker-compose for rancher-compose. I define the GITLAB_ROOT_PASSWORD and GITLAB_ROOT_EMAIL but without the expected result. As @gianmarcotoso  said, it is needed to run bin/rake gitlab:production in orden to populate the DB with the admin credentials. Maybe is something missed in the Dockerfile or some script for building the image.\n. ",
    "LoicMahieu": "I had the same issue. By manually run:\nexec_as_git force=yes bundle exec rake gitlab:setup       ${GITLAB_ROOT_PASSWORD:+GITLAB_ROOT_PASSWORD=$GITLAB_ROOT_PASSWORD}       ${GITLAB_ROOT_EMAIL:+GITLAB_ROOT_EMAIL=$GITLAB_ROOT_EMAIL}\nI got the error:\n```\n== Seed from /home/git/gitlab/db/fixtures/production/001_admin.rb\nCould not create the default administrator account:\n--> Password is too short (minimum is 8 characters)\n```\nMaybe it's your case ? For me the value was root... Ok really too short ^^. ",
    "eisnerd": "I'm leaving the update to xenial out for now. I'll open another PR later because the security situation is a little better with xenial despite trusty still being supported.\n. Oh yes, I didn't spot the gitlab-shell update. Good point.\n. The v8.12.2 tag was a mistake according to 8.12.3's release notes, so I wouldn't bother with it.\n. ",
    "gianmarcotoso": "I honestly don't know, I was trying with Mailgun and it didn't connect on 587 TLS, while it works with both SSL on 465 and STARTTLS over port 25. Regardless of my specific use case, though, the setting is valid and it should be included.\n. I think you misunderstood the intention of my PR: it's not about resolving\na problem with my configuration (I am happily mailing away with TLS), it's\nabout adding a valid and recognized setting inside the configuration. If\nsome chap has an SSL only mailserver he won't be able to use this repo\nunless he goes and modifies by hand the file every time the container\nrestarts. This PR solves that, nothing more and nothing less :)\nOn Thu, Oct 13, 2016, 08:44 Niclas Mietz notifications@github.com wrote:\n\nI'm quite not sure if you PR solves your problem for you and everyone\nelse. For me it seems that you configure your mail settings not correctly.\nI had a look at possible omnibus configurations and here is an example for\nMailgun https://docs.gitlab.com/omnibus/settings/smtp.html#mailgun. The\nequivalent configuration for our docker image would be:\nSMTP_HOST=smtp.mailgun.org\nSMTP_PORT=587\nSMTP_AUTHENTICATION=plain\nSMTP_STARTTLS=true\nSMTP_TLS=false\nSMTP_USER=postmaster@mg.gitlab.com\nSMTP_PASS= 8b6ffrmle180\nSMTP_DOMAIN=mg.gitlab.com\nCould you check it if it works like that ?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/909#issuecomment-253427929,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADIFf33Gh_hq-y1AhzV-qgEE8XZET08aks5qzdM0gaJpZM4KJ0r5\n.\n. Well that would be an issue outside of the scope of your repository: it's\npossible to make all sorts of weird configuration errors, if they need to\nbe validated it's up to GitLab, not Docker. ;)\n\nOn Thu, Oct 13, 2016, 08:54 Niclas Mietz notifications@github.com wrote:\n\nOkay you are right I misunderstood your intention. But a problem what I\nsee is what happens when a user use SMTP_SSL=true and SMTP_TLS=true. Is\nit possible to run SSL and TLS on the same port ? And how handles\nActionMailer this ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/909#issuecomment-253429560,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADIFf9rDzWGEmpuO0vVP_0-Up0zv_5JFks5qzdXCgaJpZM4KJ0r5\n.\n. It does not, at least it did not in my configuration. What did work, though, was setting the ssl option within the configuration file to true. I don't really see what the problem is with this: the parameter is valid, but it's not carried over if set as an environment variable.\n. Very well. But by doing this you are effectively NOT supporting SSL. Take a look a the official examples in GitLab documentation: https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/smtp.md \nThe QQ exmail example uses a configuration that is currently not possible to achieve with your repository due to how your container is configured and how variables from the docker-compose.yml are reflected in the settings file. SSL and TLS are indeed two different protocols, and TLS has nothing to do with this PR.\n\nI still think you have completely misunderstood the intention of this PR\n. ",
    "lippoliv": "Forget about it. I hat an spelling mistake in --env 'GITLAB_REGISTRY_KEY_PATH=/certs/gitlab.key', so it was not found. Next start it was Permissions denyed. Now all is well :)\n. @solidnerd There is no context between your answer and my Issue?\nI need to realize the following:\nLogin via SMTP with Username w7365ds and some PW. But that username is no valid E-Mail-Adress. So I have to set the \"Email From\" Mail adress seperate.\nPlease re-open this Issue.. @solidnerd oh my goodness, better to read, than to ask... sorry I really did not see the GITLAB_EMAIL env :/\nTHANK you for answering that fast and good. It works now.. ",
    "Dm3Ch": "So when deployments will be in master branch?. @xueshanf Your suggestion was right. Thank you for help. ",
    "mrusme": "@WebEnd this should solve your issue: https://gist.github.com/sameersbn/becd1c976c3dc4866ef8\n. ",
    "WebEnd": "great ;)\n. ",
    "kalaspuffar": "I only had one user so I got it and made me admin.\nuser = User.first\nuser.admin = true\nuser.save!. ",
    "tvtamas": "@Kaleesastha For me it's working out of the box. I'm using GitLab version 8.12.6\n. @Kaleesastha For me it's working out of the box. I'm using GitLab version 8.12.6\n. We are experiencing this issue with 11.2.3.\nDocker containers:\n\nsameersbn/postgresql:10\nsameersbn/gitlab:11.2.3\nsameersbn/redis:4.0.9-1\nregistry:2.4.1\n\n```\nLogfile created on 2018-09-10 08:29:12 +0000 by logger.rb/56815\nSeptember 10, 2018 08:29 -> INFO -> MergeRequests::RebaseService info (): rebase started\nSeptember 10, 2018 08:29 -> ERROR -> MergeRequests::RebaseService error (): Rebase failed. Please rebase locally\nSeptember 10, 2018 08:29 -> ERROR -> MergeRequests::RebaseService error (): /gitaly-ssh upload-pack: 1: /gitaly-ssh upload-pack: /gitaly-ssh: not found\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\nSeptember 10, 2018 08:35 -> INFO -> MergeRequests::RebaseService info (): rebase started\nSeptember 10, 2018 08:35 -> ERROR -> MergeRequests::RebaseService error (): Rebase failed. Please rebase locally\nSeptember 10, 2018 08:35 -> ERROR -> MergeRequests::RebaseService error (): /gitaly-ssh upload-pack: 1: /gitaly-ssh upload-pack: /gitaly-ssh: not found\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n``. We are experiencing this issue with11.2.3`.\nDocker containers:\n\nsameersbn/postgresql:10\nsameersbn/gitlab:11.2.3\nsameersbn/redis:4.0.9-1\nregistry:2.4.1\n\n```\nLogfile created on 2018-09-10 08:29:12 +0000 by logger.rb/56815\nSeptember 10, 2018 08:29 -> INFO -> MergeRequests::RebaseService info (): rebase started\nSeptember 10, 2018 08:29 -> ERROR -> MergeRequests::RebaseService error (): Rebase failed. Please rebase locally\nSeptember 10, 2018 08:29 -> ERROR -> MergeRequests::RebaseService error (): /gitaly-ssh upload-pack: 1: /gitaly-ssh upload-pack: /gitaly-ssh: not found\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\nSeptember 10, 2018 08:35 -> INFO -> MergeRequests::RebaseService info (): rebase started\nSeptember 10, 2018 08:35 -> ERROR -> MergeRequests::RebaseService error (): Rebase failed. Please rebase locally\nSeptember 10, 2018 08:35 -> ERROR -> MergeRequests::RebaseService error (): /gitaly-ssh upload-pack: 1: /gitaly-ssh upload-pack: /gitaly-ssh: not found\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n```. Hey @solidnerd,\nThanks for the tip, the workaround fixed the rebase issue for us.. Hey @solidnerd,\nThanks for the tip, the workaround fixed the rebase issue for us.. ",
    "VAdamec": "Sure, I'll do that\n. Thanks :-)\n. ",
    "phenomax": "Do we have any updates here?\nI also agree that this PR adds an useful feature to this docker image.. Yeah, I also noticed it. I will now start preparing a pull request for GitLab 8.14.1 :). @solidnerd Sure.. See #989 for the separate commit for v8.14.0. Unfortunately, we have to wait until GitLab releases the new workhorse version.\nCurrently we're still on v1.0.0 and the upgrade to v1.0.1 is still pending.\nSo, referring to #985 we cant do anything than waiting. Today workhorse has been upgraded to v1.1.0. Lets look forward, if this fixes our problem. Any reasons for the delay?. @jostyee Did you have a look, if this problem changed with this update?. @kingcody Thanks for the explanation.\nMy illegal character has been removed.\nCan you please double check?. xD love GitLab. While one PR ist being progressed, they just release another version . Will remove it tomorrow. Used this file in order to resolve the illegal character in the other commit. . ping @solidnerd please check this PR. I deleted the file :). @frol Why? A wrongly added file should be no reason for this. @frol Your right. Because of the wrongly added a.txt, i decided re-creating my pr and rebased the project. Please see #1052 . ping @solidnerd Please check this PR :). Current shell version is v4.1.1, so this is fine.\nI'll start reviewing the config changes tomorrow.\nHelp is highly appreciated.\n. @bsn As far as i can see now, we only have to add the authentiq config options, test the whole pr and we're fine :). @evenh So everything should be fine \ud83d\udc4d . ping @solidnerd . @adimit Could you rebase your prs (also #1071), in order to include the most recent files?. @adimit Could you rebase your prs (also #1071), in order to include the most recent files?. Thanks for the quick update... GitLab does really annoy me with their minutely updates xD. @sameersbn Normally, I do. But if GitLab publishes a new version, including important security fixes, I am about to update asap.. Seems fine to me... LGTM? @solidnerd @sameersbn . LGTM? @sameersbn . I'll prepare a PR asap.\nHope that this will be checked and merged fast.. https://about.gitlab.com/2017/08/04/gitlab-critical-release-preannouncement/\nAnother one coming up this wednesday.. . What is missing?. Forgot to change that :( -  From here, everything looks fine\nping @solidnerd @sameersbn . ping @solidnerd - Could you please check this?. I just added the new config values, but there is some stuff that should be discussed\n- Making repositories timeout/reset time values configurable (L496)\n- Configuring unicorn socket metrics/sidekiq_exporter (L573)\n- What to do with SMTP_CA_PATH, SMTP_CA_FILE & SMTP_TLS - They do not appear in the current config file. I just tested this image myself:\n\nFurthermore GPG signing seems to work:\n\n. ping @solidnerd @sameersbn . @Ilya-Kuchaev I think we should upgrade to 9.5.1 just after we finished this PR\nEdit: https://hub.docker.com/r/gitlab/gitlab-ce/tags/ - 9.5.1 hasn't been tagged yet. @solidnerd?. Sadly Load Balancing is only available in the Enterprise Edition.\n\nIntroduced in GitLab Enterprise Edition Premium 9.0.. LGTM!. @martell Thanks for pointing that out!\nThanks to @evenh for resolving my conflicts. I'll merge our changes together.\n\n@solidnerd I also checked all config files of GitLab 10.0 and everything seems up to date.. ? I just corrected the version numbers.\nSee here and here. @solidnerd I got no time neither. No PC next to me till Wednesday :/. Closing this in favour of #1358 . LGTM!. Can this be merged @solidnerd @sameersbn . warning You are using Node \"7.10.1\" which is not supported and may encounter bugs or unexpected behavior. Yarn supports the following semver range: \"^4.8.0 || ^5.7.0 || ^6.2.2 || ^8.0.0\"\nwarning \"minimatch#brace-expansion@^1.0.0\" could be deduped from \"1.1.8\" to \"brace-expansion@1.1.8\"\nerror \"webpack#ajv\" not installed\nerror \"webpack#ajv-keywords\" not installed\nerror Found 2 errors.\nError: You have unmet dependencies. (`yarn check` command failed)\nRun `yarn install` to install missing modules.\nThe command '/bin/sh -c bash ${GITLAB_BUILD_DIR}/install.sh' returned a non-zero code: 1\nYou need to apply #1360:). LGTM!. @solidnerd Is anything missing?. @solidnerd Could you then please do as you told :D. LGTM - please merge immediately @solidnerd . I'd also look forward to this! ping @solidnerd . Just tested. Everything ist working fine. ",
    "dmednis": "When can we expect this to be merged? \nThis would be a really useful feature.. Any news on when this could be merged? The multiple backups cause our server to fill up its disk space.\nAs it was said, this can be reproduced(reproducible in 9.4.3) by restarting the Gitlab container without deleting it.. ",
    "gaoyifan": "@dmednis  You can try this fork. Maintained by @knight42 . ",
    "exreplay": "maybe duplicate of #775 . Do further testing.\n. Thanks for the reply @solidnerd . I wasn't able to solve it by now. I still try to figure it out. \nYou are right. I give it a shot right now and let you know if it works.\n. Sure, i'll do. Thanks a lot \ud83d\udc4d \n. I feel like it has something to do with my certificates because (when i'm right) gitlab and registry authenticate by the certificate from REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE. I also created a self signed certificate, like described, but nothing changed. Could it be that there is a problem with letsencrypt?\nUpdate1 @solidnerd :\nI moved the registry out of the composer file and now i don't get any 500 and i can even login to the registry with my gitlab credentials. The only problem which still persists is that when i try to push it says:\n```\nThe push refers to a repository [registry.example.de/test/nginx]\ne57fa1f98953: Image push failed \n0b5020a92483: Image push failed \n3e5e0e14a69d: Preparing \n10cb425a3b95: Image push failed \n5f70bf18a086: Preparing \nbbf4634aee1a: Waiting \n64d0c8aee4b0: Waiting \n4dcab49015d4: Waiting \nunauthorized: authentication required\n```\nUpdate2 @solidnerd :\nDon't mind, everything is working as expected! Forgot that i had to create a new project and tag my images right. The strange thing for me is that i was not able to add the registry to my gitlab composer file. I hab to either make a new composer file or just docker run.\nFYI: I changed the GITLAB_REGISTRY_API_URL back to eg https://registry.example.com.\n. ",
    "xmik": "I had this problem yesterday. I succeeded in setting custom gitlab root password with GITLAB_ROOT_PASSWORD (it must be >= 8 characters long) and then run in gitlab container as git user: bundle exec rake gitlab:setup RAILS_ENV=production.\n. ",
    "pasake": "@mhciael  hi,i follow your method but \n\nIs there a problem with my installation?\n. it work by re-install  sory. it work by re-install  sory. ",
    "hcientist": "perhaps you're doing this before you have completed the gitlab install? Like when you first visit it they would create the admin user i think? what error is missing in the above (truncated at top of screenshot)?. ",
    "mrsniperz": "@mhciael Thanks a lot ,it works!!and you can check all the ID with:user = Use.all,because you may not the No.1.. ",
    "iamchanghyunpark": "@solidnerd I just wrote up a long comment on why I would want HTTP, but then I realized that I shouldn't need it... (Closing issue) \nMy initial concerns were\n- When the certificate expires (I use Let's encrypt so that happens every 3 months) I may have trouble logging in.\n- If I renew the certificate I may have to redo the copying of certificates, and during this time I may have numerous restarts of the container which prevents users from using gitlab.\n- and etc.\nSo I was concerned about downtime of gitlab, however accessing via HTTP won't be possible either as I'm concerned about the time the containers are booting.\n. @solidnerd Gotit, Thanks\n. Same problem on Synology NAS 1515+\nusing HTTPS as well.\n. Thanks just checked the latest and it works!\n. Great! Thanks @solidnerd,\nWhen creating the backup, we first need to stop the containers, and then re-execute the backup command right?\nWould you add the instructions to the README.md?\nI'm sure there are other users whom would benefit from your answer :). @chraibi Link to the scheduled backup configuration.\nBackups are stored in the path stored in GITLAB_BACKUP_DIR (default: /home/git/data/backups)\nAlso check out the following variables:\n\nGITLAB_BACKUP_SCHEDULE\nGITLAB_BACKUP_TIME\nGITLAB_BACKUP_EXPIRY\nGITLAB_BACKUP_TIME\n\netc. GITLAB_BACKUP_* are the variables you want to look at.. Looks like a docker-compose error?\nWhat's the version of your docker-compose?\nDo you have any non-ascii characters in your directories?. Oh... something's weird. The unicode character 2023 is the triangular bullet.\n\nIt should be printed by postgresql_1.... I wonder what's going on.\nMy docker compose is 1.7.0. Does printing the docker-compose logs result in the same exception?. Yes, I think it's a real good thing you found a way to startup gitlab!\nPerhaps you might want to post a bug report to docker-compose repository.. Yes, I also looked up some similar issues, perhaps it may be due to your python version, or other issues as well.... :(. It shows 8.14.4 now... is it solved?. I think you should fire up bash for your gitlab container and check the logs for unicorn... \nIt's constantly exiting and spawning right?. You should try attach to the bash shell of your gitlab container and checkout the unicorn logs.\nbash\ndocker exec -it gitlab bash # If you use docker\ndocker-compose exec gitlab bash # if you use docker-compose\nWhen you're attached via bash check out the files in log directory.\nI see that I have two files for unicorn: unicorn.stderr.log and unicorn.stdout.log\n. Guys, I just ran into the same issue;\nMy Synology system (the host machine running the gitlab containers) met an unexpected power failure.\nI don't have the logs no more, but unicorn was dying and respawning every second or so.\nThe logs told me that the pid in /home/git/gitlab/tmp/pids/unicorn.pid was stale.\nI checked the pid value in the log and checked if there was a running process with the same pid, and no there was none.\nI'm guessing this is because of the unexpected powerdown, and unicorn.pid was not properly cleared.\nMy solution was simple\n```bash\ndocker-compose exec gitlab bash\nvi log/unicorn.stderr.log # remove the value (which is the pid), save and exit\nexit # from the bash shell of the gitlab container\nNow restart the containers\ndocker-compose down\ndocker-compose up -d\n```\n. @medokin Thanks for the advice! \nI think the approach you take looks better than updating for every sub-sub version. (ex 8.16.1, then 8.16.2 and so on).\nBut the issue is that from your example, you'll be waiting for 8.16.x when 8.17 is released right?\nHowever, we will not get the vulnerability patches for the 8.16.x once sameersbn/docker-gitlab is version upped to 8.17 right? Correct me if I'm wrong. I'd be delighted if security patches also get pushed into docker-gitlab tags. However I'm afraid only the latest version gets built into a tag.. @medokin Okay! I guess when there are vulnerability issues, we can jump to the current, as it shouldn't happen to often! Thanks for the advice based on your experience :). I opened another issue at #1078 on the same point ;)\nWith the release of 8.16, 8.15.5 was also released; #1065 \nI'd be really delighted if this repo had another thread of tags for the stable versions ;). @sameersbn Do you mind if I keep a LTS (or stable) version repo that should basically fork from your repo?\nIf you don't like it I'll keep the docker builds private. \nDocker\nGithub fork\n@beevelop I used this commit as a patch for the 8.15.5 patch. @sameersbn Do you mind if I keep a LTS (or stable) version repo that should basically fork from your repo?\nIf you don't like it I'll keep the docker builds private. \nDocker\nGithub fork\n@beevelop I used this commit as a patch for the 8.15.5 patch. @sameersbn I just read through your conversation with @solidnerd and I think if we do get another stable like branch, then that would be great \ud83d\udc4d . @sameersbn I just read through your conversation with @solidnerd and I think if we do get another stable like branch, then that would be great \ud83d\udc4d . @phenomax #1065 Checkout the last comment I added.. \nThey seem to be built on different dates. I'd be glad to provide PRs after some testing, any security fixes for the one-prior major release (8.15.x) once in a while (can't promise I would be able to do it every time). Closing. Its a duplicate to #1058 . Perhaps you want to remove some older (unused) images? link\n. Succesful build and run.\nYou may check if the build runs properly from here\nAlso screenshot of a running gitlab 8.16.4\n\n. @sameersbn @solidnerd Guys, should we work on adding the additional arguments for gitlab-pages in this pull request; or should we work on it in another PR?\nAdditional arguments required can be found in the following manual page. https://docs.gitlab.com/ee/administration/pages/index.html. @paolo, could you elaborate how you propose to change the PR? I didn\u2019t quite get what you meant ;) \n\n\n\n\n\n\n\uc624\ud6c4 8:56, Paolo Mainardi notifications@github.com \uc791\uc131:\n\n\n\n\n\nI think that we should upgrade the node version bundled with the base image, just to follow the project best practices.\ncc @solidnerd https://github.com/solidnerd @sameersbn https://github.com/sameersbn\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/sameersbn/docker-gitlab/pull/1095#issuecomment-281973177, or mute the thread https://github.com/notifications/unsubscribe-auth/ABy_a1BPUzEUo8SdpSugGD2lvCde4wlPks5rfXPugaJpZM4MJcEE.\n\n\n. @reynold-lariza I'll see what I can do tomorrow :)\n@paolomainardi Do you mean to say 'try not to add another ppa and stick with the ubuntu trusty repos? Or add the v7.x node.js to sameersbn/ubuntu? (Sorry, there must be something wrong with my understanding today). @paolomainardi node.js was installed in this repo, (docker-gitlab) via Ubuntu's trusty repo. However the node.js version was too old and didn't support the npm, so we had to add a new node.js ppa :). @paolomainardi for the base image you're referring to the sameersbn:ubuntu right?\nIf so, I think not; sameersbn:ubuntu is used for many other docker images and nodejs will likely not be required in many. (The base image is a very simple image :)\n\n. @paolomainardi no problem :) Glad we cleared that up!. BTW if anyone else can work on the argument passing of the Gitlab Pages, plz do; I might be busy and may not have time to work on this until early next week.. \nGitlab Pages Administration page states that we need to set pages daemon to listen on a secondary IP or different port numbers, or a completely different server.\nWhat should we opt for? Probably provide the option to choose between\n1. Same server secondary IP\n2. Same server, same IP, different ports\nI tried adding the pages_external_url to the gitlab config, but seems like a gitlab-pages daemon didn't start up.\nIf there is anyone else that knows how to use Gitlab pages, it may be faster if that person could help out? :). @Ilya-Kuchaev @kristiandrucker I don't know how long it'll take for me to post the updates that enable gitlab pages. First off I don't use gitlab pages, and I'm under a lot of other things to go through and can't be commited to this repo for the moment.\nIf anyone else can help out with gitlab-pages, then I think we can have some forward progress.. Yes, setting up a new gitlab docker instance, and I'm getting the same issue. \nI execed into thje container and checked that nginx was listening on the 80 port not the 443 port even though I set GITLAB_HTTPS to true. @CommanderTso Hi, thank you for the refined instructions!\nI was going to ask you how to list the the running services, but running supervisorctl (without the stop argument) sent me to interactive shell and listed the services.\nSo will this go onto the README? I think this is essential information to backup!. ",
    "gdoteof": "It looks to me like gitlab_registry_key_path and ssl_registry_key_path are actually the same thing?\nVery confusing to me in the docs listed here:  https://github.com/sameersbn/docker-gitlab/blob/master/docs/container_registry.md\ndocker run --name gitlab -d [PREVIOUS_OPTIONS] \\\n-v /srv/gitlab/certs:/certs \\\n--env 'SSL_REGISTRY_CERT_PATH=/certs/registry.crt' \\\n--env 'SSL_REGISTRY_KEY_PATH=/certs/registry.key' \\\n--env 'GITLAB_REGISTRY_ENABLED=true' \\\n--env 'GITLAB_REGISTRY_HOST=registry.gitlab.example.com' \\\n--env 'GITLAB_REGISTRY_API_URL=http://registry:5000/' \\\n--env 'GITLAB_REGISTRY_CERT_PATH=/certs/registry-auth.crt' \\\n--env 'GITLAB_REGISTRY_KEY_PATH=/certs/registry-auth.key' \\\n--link registry:registry\nsameersbn/gitlab:10.0.4\nthe above sets both, with different values.  the /certs/registry-auth. versions are both shown how to be generated in the documentation, but there is no mention of /certs/registry.. \ud83d\ude33\nThanks.. Thanks @solidnerd, so if I understand correctly now, assuming a  a \"gitlab w/ registry\" setup there are three total SSL crt/key pairs that are needed:\n\nThe gitlab installation itself.  (gitlab.example.com)\nThe gitlab token provider (registry.gitlab.example.com)\nThe registry itself (registry:5000). \n",
    "adimit": "I've tested on 005f754a38ad98910e55e9f167fcaa02e31733d2 from @Pegasuz branch. Accepted a 149 commit merge request without a problem (topic-branch into master)\nMaybe it's an intermittent issue?\n. @Pegasuz, I've created a PR for 8.13.1. Works well here, I think we can just skip 8.13.0 and jump straight to 8.13.1\n. @solidnerd done.\n. @solidnerd I'm here, just tell me what needs rebasing.\n. @solidnerd done.\n. Rebased to reflect current changes. Rebased to reflect current changes. Rebased to reflect current changes. Rebased to reflect current changes. ",
    "zlolik": "Request to brightbox: https://groups.google.com/forum/#!topic/brightbox-ruby-ubuntu-packaging/l7uhK7yGHpM\n. Oops, its about Gitlab installation Gemfile\nhttps://gitlab.com/gitlab-org/gitlab-ce/issues/24039\n. ",
    "alexbog8": "Or simply comment out (with #) these two lines! Is a bit strange that they released an update with this huge bug!\n. ",
    "heximcz": "Ok, thank you for all. With comment out is working, but redirect from http is does not. Next when i restart container then default config is back. I'll be waiting for update :-)\n. Fix is perhaps in gitlabhq: Merge pull request #8395 from sbeh/master \nipv6only must equal \"on\", but from nginx v1.3.4 is turned on by default.\n. You are welcome :+1: \n. On Synology NAS it working fine. :-)\n. Yes right. Because if I use non standard port as 30080 for http, redirect will be:\nhttps://<domain>:30080:30443 (bad port number)\nMore in issue #951 \n. Clear install and upgrade example:\n- delete default gitlab and redis container\n- create ssl certificate over let's encrypt for gitlab..com in Synology\n- connect to the Synology NAS over SSH:\n- switch as root: sudo -i\n- save following config to the:\n  /volume1/docker/<my directory>/compose/gitlab/docker-compose.yml\n- create directories in /volume1 (your data will be here):\n  - mkdir -p /volume1/docker/<my directory>/postgresql\n  - mkdir -p /volume1/docker/<my directory>/redis\n  - mkdir -p /volume1/docker/<my directory>/gitlab\n- (change configuration text in '<>')\n```\nversion: '2'\nservices:\n  redis:\n    container_name: my_redis\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n      - --loglevel warning\n    volumes:\n      - /volume1/docker//redis:/var/lib/redis\npostgresql:\n    container_name: my_postgres\n    restart: always\n    image: sameersbn/postgresql:latest\n    volumes:\n      - /volume1/docker//postgresql:/var/lib/postgresql\n    environment:\n      - DB_USER=\n      - DB_NAME=\n      - DB_PASS=\n      - DB_EXTENSION=pg_trgm\ngitlab:\n    container_name: my_gitlab\n    image: 'sameersbn/gitlab:8.13.5'\n    depends_on:\n      - redis\n      - postgresql\n    hostname: 'gitlab..com'\n    environment:\n      - DEBUG=false\n  - DB_ADAPTER=postgresql\n  - DB_HOST=postgresql\n  - DB_PORT=5432\n  - DB_USER=<db user>\n  - DB_NAME=<db name>\n  - DB_PASS=<password>\n\n  - REDIS_HOST=redis\n  - REDIS_PORT=6379\n\n  - TZ=Europe/Prague\n\n  - GITLAB_TIMEZONE=Prague\n  - GITLAB_PORT=10443\n  - GITLAB_SSH_PORT=10022\n  - GITLAB_HTTPS=true\n\n  - GITLAB_SECRETS_DB_KEY_BASE=<random number>\n  - GITLAB_SECRETS_SECRET_KEY_BASE=<random number>\n  - GITLAB_SECRETS_OTP_KEY_BASE=<random number>\n\n  - GITLAB_HOST=gitlab.<your domain>.com\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n\n  - SMTP_ENABLED=true\n  - SMTP_DOMAIN=gitlab.<your domain>.com\n  - SMTP_HOST=<smtp host>\n  - SMTP_PORT=587\n  - SMTP_USER=<email>\n  - SMTP_PASS=<password>\nports:\n  - '10022:22'\n  - '10080:80'\n  - '10443:443'\nexternal_links:\n  - my_postgres:postgresql\n  - my_redis:redisio\nvolumes:\n  - '/volume1/docker/<my directory>/gitlab:/home/git/data'\n\n```\nrun docker compose:\ndocker-compose -f /volume1/docker/<my directory>/compose/gitlab/docker-compose.yml up -d\ncheck if containers is running:\ndocker-compose -f /volume1/docker/<my directory>/compose/gitlab/docker-compose.yml ps\nstop:\ndocker-compose -f /volume1/docker/<my directory>/compose/gitlab/docker-compose.yml stop\nUpgrade:\n- stop container: docker-compose -f /volume1/docker/<my directory>/compose/gitlab/docker-compose.yml stop\n- edit docker-compose.yml and change image: 'sameersbn/gitlab:8.13.5' section to the last stable version\n- remove containers: docker-compose -f /volume1/docker/hexim/compose/gitlab/docker-compose.yml rm --all\n- remove old images:\n  - List all images: docker images\n  - Delete specific image: docker rmi <image ID>\n- Run new version: docker-compose -f /volume1/docker/<my directory>/compose/gitlab/docker-compose.yml up -d\n. I prefer default setting for GitLab (PostgreSQL) but you can try use MySQL:\n```\nversion: '2'\nservices:\n  redis:\n    container_name: my_redis\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n      - --loglevel warning\n    volumes:\n      - /volume1/docker//redis:/var/lib/redis\ngitlab:\n    container_name: my_gitlab\n    image: 'sameersbn/gitlab:8.13.5'\n    depends_on:\n      - redis\n    hostname: 'gitlab..com'\n    environment:\n      - DEBUG=false\n  - DB_ADAPTER=mysql2\n  - DB_HOST=<IP ADDRESS or host>\n  - DB_PORT=<port number>\n  - DB_USER=<db user>\n  - DB_NAME=<db name>\n  - DB_PASS=<password>\n\n  - REDIS_HOST=redis\n  - REDIS_PORT=6379\n\n  - TZ=Europe/Prague\n\n  - GITLAB_TIMEZONE=Prague\n  - GITLAB_PORT=10443\n  - GITLAB_SSH_PORT=10022\n  - GITLAB_HTTPS=true\n\n  - GITLAB_SECRETS_DB_KEY_BASE=<random number>\n  - GITLAB_SECRETS_SECRET_KEY_BASE=<random number>\n  - GITLAB_SECRETS_OTP_KEY_BASE=<random number>\n\n  - GITLAB_HOST=gitlab.<your domain>.com\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n\n  - SMTP_ENABLED=true\n  - SMTP_DOMAIN=gitlab.<your domain>.com\n  - SMTP_HOST=<smtp host>\n  - SMTP_PORT=587\n  - SMTP_USER=<email>\n  - SMTP_PASS=<password>\nports:\n  - '10022:22'\n  - '10080:80'\n  - '10443:443'\nexternal_links:\n  - my_redis:redisio\nvolumes:\n  - '/volume1/docker/<my directory>/gitlab:/home/git/data'\n\n```\n. ",
    "TheNotary": "Regarding the backups, I see your point about the Makefile.  As I first come to docker projects, I tend to inch my way towards the standard way of doing things the 'consumer way' only after getting the gist of how things work bit by bit, hence I deployed locally (as apposed to from docker hub) and had to macgyver the backup command docker-compose exec gitlab bundle exec rake gitlab:backup:create to get a look at the fs outputs of the command.  Because the Makefile contained the commands to run the docker image, I considered adding a backup command to the file.  If this elaboration doesn't change your minds, then consider this bit of the issue closed.  \nThanks @solidnerd, that's good information to know regarding the possibility of backing up a faulty database state, but I'm wondering if that could be looked into more closely.  When I eventually go into production, I'd like a zero downtime, continuous backup/ tested solution.  I'm by no means a postgresql pro, but upon researching this issue, I'm seeing this post which makes me think that postgres will handle things: \nhttp://dba.stackexchange.com/questions/13742/does-running-pg-dump-on-live-db-produce-consistent-backups\nMySQL has solutions for this too, but I don't know how redis does things (or if redis is even involved in the persistent storage process at all).\n. ",
    "laoshancun": "i replace my docker-compose.yml like this, it works!\npostgresql:\n  #image: registry.cn-hangzhou.aliyuncs.com/acs-sample/postgresql-sameersbn:9.4-24\n  image: sameersbn/postgresql:9.5-3\n  environment:\n    - DB_USER=gitlab\n    - DB_PASS=gitlab\n    - DB_NAME=gitlab\n    - DB_EXTENSION=pg_trgm\n  labels:\n    aliyun.probe.url: tcp://container:5432\n  volumes:\n    - /data/docker/gitlab/postgresql:/var/lib/postgresql\ngitlab:\n  #image: registry.cn-hangzhou.aliyuncs.com/acs-sample/gitlab-sameersbn:latest\n  image: sameersbn/gitlab:8.13.3\n  depends_on:\n    - redis\n    - postgresql\n  links:\n    - redis:redisio\n    - postgresql:postgresql\n  hostname: 'gitlab'\n  restart: always\n  ports:\n    - \"10080:8181\"\n    - \"10022:22\"\n  environment:\n    - DEBUG=false\n    - TZ=Asia/Shanghai\n    - SMTP_ENABLED=true\n    - SMTP_DOMAIN=163.com\n    - SMTP_HOST=smtp.163.com\n    - SMTP_PORT=25\n    - SMTP_USER=mail@163.com\n    - SMTP_PASS=password\n    - SMTP_STARTTLS=true\n    - SMTP_AUTHENTICATION=login\n    - SSL_SELF_SIGNED=true\n    - RACK_ATTACK_WHITELIST=127.0.0.1,192.168.0.0/24\n    - GITLAB_TIMEZONE=Asia/Shanghai\n    - GITLAB_HOST=gitlab.test.com\n    - GITLAB_URL=\"https://gitlab.gitlab.test.com\"\n    #- GITLAB_PORT=80\n    - GITLAB_TRUSTED_PROXIES=192.168.0.0/24,127.0.0.1\n    - GITLAB_HTTPS=true\n    - GITLAB_SSH_PORT=22\n    - GITLAB_EMAIL=mail@163.com\n    - GITLAB_EMAIL_REPLY_TO=noreply@test.com\n    - GITLAB_BACKUPS=daily\n    - GITLAB_BACKUP_TIME=01:00\n    - GITLAB_SECRETS_SECRET_KEY_BASE=key\n    - GITLAB_SECRETS_OTP_KEY_BASE=key\n    - GITLAB_SECRETS_DB_KEY_BASE=key\n  volumes:\n    - /data/docker/gitlab/gitlab:/home/git/data\n  labels:\n    aliyun.probe.url: tcp://container:80\n    aliyun.probe.initial_delay_seconds: \"3\"\n    aliyun.routing.port_80: gitlab\ngitlab-runner:\n  image:  gitlab/gitlab-runner:latest\n  #hostname: 'git.test.com'\n  restart: always\n  volumes:\n    - /data/docker/gitlab/gitlab-runner:/etc/gitlab-runner\n    - /var/run/docker.sock:/var/run/docker.sock\nredis:\n  #image: registry.cn-hangzhou.aliyuncs.com/acs-sample/redis-sameersbn:latest\n  image: sameersbn/redis:latest\n  command:\n    - --loglevel warning\n  volumes:\n    - /data/docker/gitlab/redis:/var/lib/redis\n. hello, @1allen .\nthere is my latest version. hope it work for you.\nyou should make sure GITLAB_HOST is same as the hostname of gitlab url.\n```yaml\npostgresql:\nimage: sameersbn/postgresql:9.5-3\nrestart: always\nenvironment:\n- DB_USER=gitlab\n- DB_PASS=234343\n- DB_NAME=gitlab\n- DB_EXTENSION=pg_trgm\nports:\n- \"5432:5432\"\nlabels:\naliyun.probe.url: tcp://container:5432\ncom.docker.swarm.reschedule-policies: \"[\\\"on-node-failure\\\"]\"\nvolumes:\n- /nas/data/docker/gitlab/postgresql:/var/lib/postgresql\ngitlab-v10.8.3-2:\n  image: sameersbn/gitlab:10.8.3-1\n  restart: always\n  depends_on:\n    - redis\n    #- postgresql\n  links:\n    - redis:redisio\n    #- postgresql:postgresql\n    #- registry:registry\n  hostname: 'gitlab.nobody.com'\n  #command: 'app:rake gitlab:backup:restore BACKUP=1516259681_2018_01_18_10.3.3'\n  #command: 'app:rake gitlab:backup:restore'\n  ports:\n    - \"10022:22\"\n  #  - \"10443:443\"\n  environment:\n    - DEBUG=true\n    - TZ=Asia/Shanghai\n    - DB_PORT=3433\n    - DB_HOST=pgm-dsdsfd.pg.rds.aliyuncs.com\n    - DB_ADAPTER=postgresql\n    - DB_NAME=gitlab\n    - DB_USER=DB_USER\n    - DB_PASS=DB_PASS\n    - SMTP_ENABLED=true\n    - SMTP_DOMAIN=163.com\n    - SMTP_HOST=smtp.163.com\n    - SMTP_PORT=25\n    - SMTP_USER=bug@nobody.com\n    - SMTP_PASS=werusadfwer\n    - SMTP_STARTTLS=true\n    - SMTP_AUTHENTICATION=login\n    - SSL_SELF_SIGNED=true\n    - RACK_ATTACK_WHITELIST=127.0.0.1,192.168.0.0/24\n    - GITLAB_TIMEZONE=Asia/Shanghai\n    - GITLAB_HOST=gitlab.nobody.com\n    - GITLAB_URL=\"https://gitlab.nobody.com\"\n    #- GITLAB_PORT=80\n    - GITLAB_TRUSTED_PROXIES=192.168.0.0/24,127.0.0.1\n    - GITLAB_HTTPS=true\n    - GITLAB_SSH_PORT=22\n    - GITLAB_SSH_HOST=git.nobody.com\n    - GITLAB_EMAIL=bug@nobody.com\n    - GITLAB_EMAIL_REPLY_TO=noreply@nobody.com\n    - GITLAB_BACKUPS=daily\n    - GITLAB_BACKUP_TIME=01:00\n    - GITLAB_SECRETS_SECRET_KEY_BASE=key\n    - GITLAB_SECRETS_OTP_KEY_BASE=key\n    - GITLAB_SECRETS_DB_KEY_BASE=key\n    - GITLAB_BACKUP_DIR=/home/git/backups\n    # github OAuth\n    - OAUTH_ENABLED=true\n    - OAUTH_GITHUB_API_KEY=OAUTH_GITHUB_API_KEY\n    - OAUTH_GITLAB_APP_SECRET=OAUTH_GITLAB_APP_SECRET\n  volumes:\n    - /etc/localtime:/etc/localtime:ro\n    - /nas/data/docker/gitlab/gitlab:/home/git/data\n    - /nas/data/docker/gitlab/certs:/certs\n    - /nas/data/docker/gitlab/gitlab/backups:/home/git/backups  \n  labels:\n    com.docker.swarm.reschedule-policies: \"[\\\"on-node-failure\\\"]\"  \nredis:\n  image: sameersbn/redis:latest\n  restart: always\n  command:\n    - --loglevel warning\n  volumes:\n    - /nas/data/docker/gitlab/redis:/var/lib/redis  \n  labels: \n    com.docker.swarm.reschedule-policies: \"[\\\"on-node-failure\\\"]\"\n```. how about merge #1026 to master? @sameersbn. ",
    "1allen": "@laoshancun and what's the point of your changes? I still facing the same issue.. ",
    "pieterlange": "PR is already out in #960, closing.\n. This is a security release: https://about.gitlab.com/2017/02/15/gitlab-8-dot-16-dot-5-security-release/. I can confirm this regression.. ping @solidnerd . This also rewrites the Changelog.md which is probably unintended.\nI just clumsily did something similar while staging a version bump (which should be easy) but it is easily manually patched. Excuse my french:\nfor file in $(grep -r 10.3.3 . | cut -d: -f1 | sort | uniq); do sed -i 's/10.3.3/10.3.4/g' $file ;done. Announcement posted 2018-01-12, fix will be released in 2 hours (2018-01-16 23:59 UTC). Fix in #1466. https://about.gitlab.com/2018/01/16/gitlab-10-dot-3-dot-4-released/\n\nToday we are releasing versions 10.3.4, 10.2.6, and 10.1.6 for GitLab Community Edition (CE) and Enterprise Edition (EE).\nThese versions contain a number of important security fixes, including two that prevent remote code execution, and we strongly recommend that all GitLab installations be upgraded to one of these versions immediately.\nThis security release blog post is the first part of two. The second blog will be posted in approximately 30 days, and it will detail the vulnerability findings.. Duplicate of #1466. (sorry for ping @solidnerd but this is a security release). I did, thanks for the heads up.. Works for me :+1:. Nice head start :+1:\n\n/e: Runs fine on my end.\nref https://about.gitlab.com/2018/05/22/gitlab-10-8-released/. ping @solidnerd \nHave been running both copies, works fine. :shipit: . Should include a changelog entry that this is a security release fixing vulnerabilities in git itself, amongst other serious security bugs.\nhttps://about.gitlab.com/2018/05/29/security-release-gitlab-10-dot-8-dot-2-released/\nhttps://public-inbox.org/git/xmqqy3g2flb6.fsf@gitster-ct.c.googlers.com/\n:shipit:!. Ref https://about.gitlab.com/2018/06/27/gitlab-11-0-2-released/. Build works for me, i'm already running it.  How did you try building this @reynold-lariza ?. @sameersbn @solidnerd i'm happy to help testing & merging these minor upgrades in the repo. This one has been lingering for 8 days now while the patch is relatively minor and should've just been :shipit:'ed :nerd_face:\nYou're probably on holiday or something, which i'll allow but don't make a habit out of it ;-). Runs fine in prod here. :shipit: . 11.7.1 and 11.7.2 were never released to the public upstream either so i guess we can consider those internal project numbers? Just :shipit: ?\n(runs fine here). ",
    "Stenudd": "I assume the correct file to edit would be '/assets/runtime/config/nginx/gitlab' then.\nDo you have a example on how it should be configured to make it work?\n. ",
    "megian": "bash-4.2# docker info\nContainers: 11\n Running: 7\n Paused: 0\n Stopped: 4\nImages: 15\nServer Version: 1.10.3\nStorage Driver: devicemapper\n Pool Name: docker--vg-docker--pool\n Pool Blocksize: 524.3 kB\n Base Device Size: 10.74 GB\n Backing Filesystem: xfs\n Data file:\n Metadata file:\n Data Space Used: 9.314 GB\n Data Space Total: 17.16 GB\n Data Space Available: 7.845 GB\n Metadata Space Used: 1.831 MB\n Metadata Space Total: 46.14 MB\n Metadata Space Available: 44.31 MB\n Udev Sync Supported: true\n Deferred Removal Enabled: true\n Deferred Deletion Enabled: true\n Deferred Deleted Device Count: 0\n Library Version: 1.02.107-RHEL7 (2016-06-09)\nExecution Driver: native-0.2\nLogging Driver: journald\nPlugins:\n Volume: local\n Network: bridge null host\nKernel Version: 3.10.0-327.36.3.el7.x86_64\nOperating System: CentOS Linux 7 (Core)\nOSType: linux\nArchitecture: x86_64\nNumber of Docker Hooks: 2\nCPUs: 2\nTotal Memory: 7.64 GiB\nName: test.localhost\nID: GVO6:AHN4:2VBX:KMF2:FL43:O4D6:DNJU:2ZNR:F5XH:E2CT:KNNC:NISD\nWARNING: bridge-nf-call-ip6tables is disabled\nRegistries: docker.io (secure)\nbash-4.2# docker version\nClient:\n Version:         1.10.3\n API version:     1.22\n Package version: docker-common-1.10.3-46.el7.centos.14.x86_64\n Go version:      go1.6.3\n Git commit:      cb079f6-unsupported\n Built:           Fri Sep 16 13:24:25 2016\n OS/Arch:         linux/amd64\nServer:\n Version:         1.10.3\n API version:     1.22\n Package version: docker-common-1.10.3-46.el7.centos.14.x86_64\n Go version:      go1.6.3\n Git commit:      cb079f6-unsupported\n Built:           Fri Sep 16 13:24:25 2016\n OS/Arch:         linux/amd64\nbash-4.2# cat /etc/redhat-release\nCentOS Linux release 7.2.1511 (Core)\n. ",
    "nguoianphu": "Sorry, but no one has this issue? \n. ",
    "JayenLee": "I have this issue too,no one can solve it?. ",
    "ariel17": "HI @solidnerd! Thanks for collaborate. \nI've created this PR because this compose does not run at first hand (the port is not exposed). Could you give an example on how you run it without exposing the port like I do?\nBest regards.. ",
    "aeoluswing": "Making attempt to import repository will redirect to a '500' error code page.Does this mean gitlab-shell works incorrectly?\n. Having Tried the steps which is Mentioned in issue 244,I'm sure the volume mounted successfully and located all my project repositories in the container's path /home/git/data/repositories.\n. Thx a lot for help,rake cache:clear failed,'cannot load file haml_lint/rake_task' result to a loaderror.Any reason is conceivable,redis' cache state makes task unavailable.An alternative measure which worked for me,oprate redis by cli and process the FLUSHDB command to the gitlab redis db,after that restart gitlab container.\n. ",
    "zwsf": "tks, solve my question too. ",
    "bienhoang": "Thanks @aeoluswing for solution on Redis. It's save my life.. ",
    "brunolm": "On the version 8.9.6-1 we were trying to mount the sshd_config but we were getting this error:\nInitializing logdir...\nInitializing datadir...\nsed: cannot rename /etc/ssh/sedo00Jrn: Device or resource busy\nIs this maybe a bug?\nThe workaround found at this moment was to build another image with a different entry point executing this:\n```\n!/bin/bash\necho \"MaxStartups 100:10:150\" >> /etc/ssh/sshd_config\necho \"MaxSessions 150\" >> /etc/ssh/sshd_config\n/sbin/entrypoint.sh $@\n```\n. ",
    "francisjeanneau": "Understood. Thanks for your reply :)\n2016-11-16 14:25 GMT-05:00 Niclas Mietz notifications@github.com<mailto:notifications@github.com>:\nHey,\nI don't see this because it's not supported by the upstream and our image should be near as possible to the gitlab community edition. If you want to do this feel free to make a fork and implement it by our own. If you need help feel free to ask :) .\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/sameersbn/docker-gitlab/issues/970#issuecomment-261045451, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AOIHbu3GYjk9uwPTDY-umnAT56JIsfXCks5q-1idgaJpZM4K0Ug7.\n. ",
    "AnXi-TieGuanYin-Tea": "docker run --name gitlab-redis -d --volume /data/home/ywm/gitlab/redis/:/var/lib/redis sameersbn/redis:latest\ndocker run --name gitlab-mysql -d \n--env 'DB_NAME=gitlabhq_production' \n--env 'DB_USER=gitlab' --env 'DB_PASS=password' \n--volume /data/home/ywm/gitlab/gitlab/mysql:/var/lib/mysql \nsameersbn/mysql:latest\ndocker run --name gitlab -d \n--link gitlab-mysql:mysql --link gitlab-redis:redisio \n--publish 10022:22 --publish 10080:80 \n--env 'GITLAB_PORT=10080' --env 'GITLAB_SSH_PORT=10022' \n--env 'GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string' \n--env 'GITLAB_SECRETS_SECRET_KEY_BASE=long-and-random-alpha-numeric-string' \n--env 'GITLAB_SECRETS_OTP_KEY_BASE=long-and-random-alpha-numeric-string' \n--volume /data/home/ywm/gitlab/gitlab/data:/home/git/data \nsameersbn/gitlab:8.13.5\n. ",
    "oxoocoffee": "Thank you for your reply. Just to let you kmow i contacted synology about gitlab and i was told right away that this is 3rd party package and thwy do not suport it at all. I was asked to contact developer. But i could not get if this GitLab itself or someone else making this package. It looks like it is NOT Synology. So this is why i did stumble onto this project hoping that it is package maintainer\n. Thank you both for answering :)\nI just did write email to GitLab asking them if they officially support GitLab on Synology or perhaps this package is made by someone else. I also did send email to Synology asking them for contact information about this 3rd party package.\nGJRTimmer,\nThank you for your input. This might be very halpfull very soon if I do not hear for either above contact. My guess is I will hit dead end but I will try.\nFor your information I can install MariaDB and Docker with single click. The current versions are listed in my initial post above. Reading your post I see that my Docker can not be used with datacore/gitlab-runner:latest.  So unless I am missing something I might not be able to install it? Also do you have section about upgrading in future?\nThank you for your time\n. @GJRTimmer I will try to do your method sometimes this week and will post any challenges I encouter :)\n. @heximcz Would you mind edit your post with MariaDB instead postgresql? I used MySQL for some time and that is what I have installed on DS. On different note is there some advantage of using postgresql vs MariaDB from your experience? \n. I am away for little over a week and have no access to unit. I will close it for now and try later. If I have issue I will reopen. \nThank you. ",
    "kdesigns": "Any news yet?. ",
    "Niceplace": "Hi @setiseta, @r2evans thanks for responding !\nActually, I rebooted the instances (docker-compose down / docker-compose up) several times with no result, and a few hours passed since the first deletion of the project, without success.\nI got confirmation that the project was deleted the first time, and after I did not see the project in any list in the GUI, is there a special list for \"deleted\" projects ? I'll do my own research on that.\nI'll give it another try in a few to see if the project was successfully deleted, I'll keep you posted !. I think this might be the key.\n\n\"Please ensure that /home/git/gitlab/log/production.log exists and is writable (ie, make it writable for user and group: chmod 0664 /home/git/gitlab/log/production.log)\"\n\nCan you check the permissions on the volume that you mounted ? More specifically /share/VM/container-station-data/gitlab/gitlab ?. I have the same error here, running\nGitlab : 8.15.4 \nPostgre : 9.6-1\nUp from\nGitlab : 8.13.6\nPostgre : 9.5-3\nI can't restore my data from previous backup and the upgrade flushed all the data (repositories, groups, users).\nWhat should I do ?. @sameersbn It seems that the restore system is broken for 8.15.6, can you confirm this ? Its a major blocker for me right now.. Hi Niclas, thanks for the quick answer ! I'll give it a try !. I tested in another environment and followed the original procedure of sameersbn/docker-gitlab found here and it worked (providing I kept the same database version).\nThe thing I wasn't doing correctly was creating the backup with the rake task with the NEW gitlab image. I was trying to restore a backup created with the old image into the new one, which failed.\nAs Gitlab docs specify :  \"You can only restore a backup to exactly the same version of GitLab on which it was created. The best way to migrate your repositories from one server to another is through backup restore\" source. I had the same thing, the timestamp format of backup archives changed and if you take a look at the logs, I'm pretty confident that the rake task in charge of migrating your data (export backup from old version, import into new version) fails.. I had the same thing, the timestamp format of backup archives changed and if you take a look at the logs, I'm pretty confident that the rake task in charge of migrating your data (export backup from old version, import into new version) fails.. @sameersbn In my case it might be difficult to reproduce. I had some proxy related errors when I upgraded the postgresql image (apt-get update failed with 404 errors on the ubuntu repos, this happened before with other projects and was always related to our corporate proxy).\nAfter this, when the migration happened the error was related to either the backup timestamp change or failure to migrate the data because the new postgre failed to properly install. \nI'm going to have to re-check my logs to back-up my claims with data, I'll edit this post when I have more information.. @sameersbn In my case it might be difficult to reproduce. I had some proxy related errors when I upgraded the postgresql image (apt-get update failed with 404 errors on the ubuntu repos, this happened before with other projects and was always related to our corporate proxy).\nAfter this, when the migration happened the error was related to either the backup timestamp change or failure to migrate the data because the new postgre failed to properly install. \nI'm going to have to re-check my logs to back-up my claims with data, I'll edit this post when I have more information.. @sameersbn \nUpdate : I tried to upgrade the postgresql image version to the latest ( From 9.5-3 to 9.6-2).\nI previously pulled the sameersbn/postgresql:9.6-2 image without problems.\nBefore that, I upgraded my gitlab instance (8.13.6 -> 8.16.3) without problems (backup, restore) and no data was missing. For this step, I kept postgresql:9.5-3\nNext, I updated my docker-compose.yml to upgrade my database to sameersbn/postgresql:9.6-2, I checked the logs at boot and found this (I'm 110% sure its related to my $%(*?/\" proxy again) \n```\nSetting resolv.conf ACLs...\nInitializing database...\n\u2023 Migrating PostgreSQL 9.5 data to 9.6...\n\u2023 Installing PostgreSQL 9.5...\nW: Failed to fetch http://apt.postgresql.org/pub/repos/apt/dists/trusty-pgdg/main/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/main/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/restricted/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/universe/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/main/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/restricted/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/universe/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-updates/main/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-updates/restricted/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-updates/universe/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-updates/main/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-updates/restricted/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-updates/universe/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/main/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/restricted/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/universe/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/main/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/restricted/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/universe/binary-amd64/Packages  404  Not Found\nE: Some index files failed to download. They have been ignored, or old ones used instead.\nERROR! Failed to install PostgreSQL 9.5. Exiting...\n```\nI don't understant why its trying to install postgresql, I already pulled the image ...\nEdit : Added my docker-compose.yml for good measure : \n```\nversion: '2'\nservices:\n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    volumes:\n    - /app/docker-volumes/gitlab/redis:/var/lib/redis:Z\n  postgresql:\n    restart: always\n    image: sameersbn/postgresql:9.6-2\n    volumes:\n    - /app/docker-volumes/gitlab/postgresql:/var/lib/postgresql:Z\n    environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\n  gitlab:\n    restart: always\n    image: sameersbn/gitlab:8.16.3\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"10080:80\"\n    - \"10443:443\"\n    - \"5500:5500\"\n    - \"10022:22\"\n    volumes:\n    - /app/docker-volumes/gitlab/gitlab:/home/git/data:Z\n    - /app/docker-volumes/gitlab/gitlab/certs:/certs\n    environment:\n    - DEBUG=true\n    - DB_ADAPTER=postgresql\n    - DB_HOST=postgresql\n    - DB_PORT=5432\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - REDIS_HOST=redis\n    - REDIS_PORT=6379\n    - GITLAB_SECRETS_DB_KEY_BASE=5bdSR9XDFlc2LP2bSHvX8Snv7CswClCPHXstHnKnBp6rM2DMgKc7n386gDVbtMzp\n    - GITLAB_SECRETS_SECRET_KEY_BASE=VWlt6fvhWNmJsxnxQBdpcQG9hHDS7nqz93pDJjCLg8WVSHfM3RKFJQJ8qxWRMVdf\n    - GITLAB_SECRETS_OTP_KEY_BASE=H4gCCWFdc4QKjfQ3t99PVf9wJc4Z7rQtkQDTMxHrFtpqLQVmq8r99ZRXWH9VNrS6\n    - GITLAB_ROOT_EMAIL=oss-gitlab@[redacted]\n    - GITLAB_ROOT_PASSWORD=[redacted]\n    - GITLAB_EMAIL=oss-gitlab-support@[redacted]\n    - GITLAB_EMAIL_REPLY_TO=oss-gitlab-support@[redacted]\n    - GITLAB_EMAIL_DISPLAY_NAME=\"Gitlab Admin\"\n    - GITLAB_EMAIL_SUBJECT_SUFFIX=\"[Gitlab Support]\"\n    - SMTP_ENABLED=true\n    - SMTP_DOMAIN=[redacted]\n    - SMTP_HOST=[redacted]\n    - SMTP_PORT=25\n    - GITLAB_HOST=[redacted]\n    - GITLAB_PORT=10443\n    - GITLAB_SSH_PORT=10022\n    - GITLAB_RELATIVE_URL_ROOT=\n    - TZ=America/Toronto\n    - GITLAB_TIMEZONE=America/Toronto\n    - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n    - GITLAB_NOTIFY_PUSHER=false\n    - GITLAB_BACKUP_SCHEDULE=daily\n    - GITLAB_BACKUP_EXPIRY=259200\n    - GITLAB_BACKUP_TIME=01:00\n    - GITLAB_HTTPS=true\n    - SSL_SELF_SIGNED=false\n    - SSL_CERTIFICATE_PATH=/certs/oss_gitlab.cer\n    - SSL_KEY_PATH=/certs/oss_gitlab.key\n    - SSL_DHPARAM_PATH=/certs/dhparam.pem\n    - SSL_CIPHERS=AES256-SHA256:RSA:AES-256-GCM:SHA256\n    - SSL_REGISTRY_KEY_PATH=/certs/oss_registry.key\n    - SSL_REGISTRY_CERT_PATH=/certs/oss_registry.cer\n    - GITLAB_REGISTRY_ENABLED=true\n    - GITLAB_REGISTRY_HOST=[redacted]\n    - GITLAB_REGISTRY_PORT=5500\n    - GITLAB_REGISTRY_API_URL=http://registry:5000\n    - GITLAB_REGISTRY_KEY_PATH=/certs/oss_registry.key\n    - GITLAB_REGISTRY_ISSUER=[redacted]\nregistry:\n    restart: always\n    image: registry:2.4.1\n    volumes:\n    - /app/docker-volumes/gitlab/gitlab/shared/registry:/registry\n    - /app/docker-volumes/gitlab/gitlab/certs:/certs\n    environment:\n    - REGISTRY_LOG_LEVEL=info\n    - REGISTRY_HTTP_HOST=[redacted]\n    #- REGISTRY_HTTP_SECRET=superrandomsecret\n    - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n    - REGISTRY_AUTH_TOKEN_REALM=https://[redacted]:10443/jwt/auth\n    - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n    - REGISTRY_AUTH_TOKEN_ISSUER=[redacted]\n    - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/oss_registry.cer\n    - REGISTRY_STORAGE_DELETE_ENABLED=true\n```. @sameersbn \nUpdate : I tried to upgrade the postgresql image version to the latest ( From 9.5-3 to 9.6-2).\nI previously pulled the sameersbn/postgresql:9.6-2 image without problems.\nBefore that, I upgraded my gitlab instance (8.13.6 -> 8.16.3) without problems (backup, restore) and no data was missing. For this step, I kept postgresql:9.5-3\nNext, I updated my docker-compose.yml to upgrade my database to sameersbn/postgresql:9.6-2, I checked the logs at boot and found this (I'm 110% sure its related to my $%(*?/\" proxy again) \n```\nSetting resolv.conf ACLs...\nInitializing database...\n\u2023 Migrating PostgreSQL 9.5 data to 9.6...\n\u2023 Installing PostgreSQL 9.5...\nW: Failed to fetch http://apt.postgresql.org/pub/repos/apt/dists/trusty-pgdg/main/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/main/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/restricted/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/universe/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/main/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/restricted/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty/universe/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-updates/main/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-updates/restricted/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-updates/universe/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-updates/main/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-updates/restricted/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-updates/universe/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/main/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/restricted/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/universe/source/Sources  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/main/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/restricted/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://archive.ubuntu.com/ubuntu/dists/trusty-security/universe/binary-amd64/Packages  404  Not Found\nE: Some index files failed to download. They have been ignored, or old ones used instead.\nERROR! Failed to install PostgreSQL 9.5. Exiting...\n```\nI don't understant why its trying to install postgresql, I already pulled the image ...\nEdit : Added my docker-compose.yml for good measure : \n```\nversion: '2'\nservices:\n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    volumes:\n    - /app/docker-volumes/gitlab/redis:/var/lib/redis:Z\n  postgresql:\n    restart: always\n    image: sameersbn/postgresql:9.6-2\n    volumes:\n    - /app/docker-volumes/gitlab/postgresql:/var/lib/postgresql:Z\n    environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\n  gitlab:\n    restart: always\n    image: sameersbn/gitlab:8.16.3\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"10080:80\"\n    - \"10443:443\"\n    - \"5500:5500\"\n    - \"10022:22\"\n    volumes:\n    - /app/docker-volumes/gitlab/gitlab:/home/git/data:Z\n    - /app/docker-volumes/gitlab/gitlab/certs:/certs\n    environment:\n    - DEBUG=true\n    - DB_ADAPTER=postgresql\n    - DB_HOST=postgresql\n    - DB_PORT=5432\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - REDIS_HOST=redis\n    - REDIS_PORT=6379\n    - GITLAB_SECRETS_DB_KEY_BASE=5bdSR9XDFlc2LP2bSHvX8Snv7CswClCPHXstHnKnBp6rM2DMgKc7n386gDVbtMzp\n    - GITLAB_SECRETS_SECRET_KEY_BASE=VWlt6fvhWNmJsxnxQBdpcQG9hHDS7nqz93pDJjCLg8WVSHfM3RKFJQJ8qxWRMVdf\n    - GITLAB_SECRETS_OTP_KEY_BASE=H4gCCWFdc4QKjfQ3t99PVf9wJc4Z7rQtkQDTMxHrFtpqLQVmq8r99ZRXWH9VNrS6\n    - GITLAB_ROOT_EMAIL=oss-gitlab@[redacted]\n    - GITLAB_ROOT_PASSWORD=[redacted]\n    - GITLAB_EMAIL=oss-gitlab-support@[redacted]\n    - GITLAB_EMAIL_REPLY_TO=oss-gitlab-support@[redacted]\n    - GITLAB_EMAIL_DISPLAY_NAME=\"Gitlab Admin\"\n    - GITLAB_EMAIL_SUBJECT_SUFFIX=\"[Gitlab Support]\"\n    - SMTP_ENABLED=true\n    - SMTP_DOMAIN=[redacted]\n    - SMTP_HOST=[redacted]\n    - SMTP_PORT=25\n    - GITLAB_HOST=[redacted]\n    - GITLAB_PORT=10443\n    - GITLAB_SSH_PORT=10022\n    - GITLAB_RELATIVE_URL_ROOT=\n    - TZ=America/Toronto\n    - GITLAB_TIMEZONE=America/Toronto\n    - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n    - GITLAB_NOTIFY_PUSHER=false\n    - GITLAB_BACKUP_SCHEDULE=daily\n    - GITLAB_BACKUP_EXPIRY=259200\n    - GITLAB_BACKUP_TIME=01:00\n    - GITLAB_HTTPS=true\n    - SSL_SELF_SIGNED=false\n    - SSL_CERTIFICATE_PATH=/certs/oss_gitlab.cer\n    - SSL_KEY_PATH=/certs/oss_gitlab.key\n    - SSL_DHPARAM_PATH=/certs/dhparam.pem\n    - SSL_CIPHERS=AES256-SHA256:RSA:AES-256-GCM:SHA256\n    - SSL_REGISTRY_KEY_PATH=/certs/oss_registry.key\n    - SSL_REGISTRY_CERT_PATH=/certs/oss_registry.cer\n    - GITLAB_REGISTRY_ENABLED=true\n    - GITLAB_REGISTRY_HOST=[redacted]\n    - GITLAB_REGISTRY_PORT=5500\n    - GITLAB_REGISTRY_API_URL=http://registry:5000\n    - GITLAB_REGISTRY_KEY_PATH=/certs/oss_registry.key\n    - GITLAB_REGISTRY_ISSUER=[redacted]\nregistry:\n    restart: always\n    image: registry:2.4.1\n    volumes:\n    - /app/docker-volumes/gitlab/gitlab/shared/registry:/registry\n    - /app/docker-volumes/gitlab/gitlab/certs:/certs\n    environment:\n    - REGISTRY_LOG_LEVEL=info\n    - REGISTRY_HTTP_HOST=[redacted]\n    #- REGISTRY_HTTP_SECRET=superrandomsecret\n    - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n    - REGISTRY_AUTH_TOKEN_REALM=https://[redacted]:10443/jwt/auth\n    - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n    - REGISTRY_AUTH_TOKEN_ISSUER=[redacted]\n    - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/oss_registry.cer\n    - REGISTRY_STORAGE_DELETE_ENABLED=true\n```. I did a little bit of digging and in the sameersbn/postgresql image, more specifically the functions called in the runtime functions of the entrypoint source\nThis section is problematic, because of my proxy\nif ! ( apt-get update &&  DEBIAN_FRONTEND=noninteractive apt-get install -y postgresql-${PG_OLD_VERSION} postgresql-client-${PG_OLD_VERSION} ) >/dev/null; then\n            echo \"ERROR! Failed to install PostgreSQL ${PG_OLD_VERSION}. Exiting...\"\n            # first move the old data back\n            rm -rf ${PG_HOME}/${PG_OLD_VERSION}\n            mv ${PG_HOME}/${PG_OLD_VERSION}.migrating ${PG_HOME}/${PG_OLD_VERSION}\n            exit 1\n          fi\nSolution (in my case) : setting proxy configuration for apt-get inside the postgresql image so that it can migrate properly. Proxy settings are in /etc/apt/apt.conf - create if not exist - and are structured as follows : \nNote : $PROXY_ADDRESS and $PROXY_PORT need to be replaced with actual values depending on your environment.\n```\nSpecific settings for apt package manager\nAcquire::http::Proxy \"http://$PROXY_ADDRESS:$PROXY_PORT\";\nAcquire::https::Proxy \"http://$PROXY_ADDRESS:$PROXY_PORT\";\n```\nIf you need authentication (which is not my case), settings would be structed this way\nNote : $username and $password need to be replaced with actual values depending on your environment. Same rule for $PROXY_ADDRESS and $PROXY_PORT as the example above.\n```\nSpecific settings for apt package manager\nAcquire::http::Proxy \"http://$username:$password@$PROXY_ADDRESS:$PROXY_PORT\";\nAcquire::https::Proxy \"http://$username:$password@$PROXY_ADDRESS:$PROXY_PORT\";\n```. I did a little bit of digging and in the sameersbn/postgresql image, more specifically the functions called in the runtime functions of the entrypoint source\nThis section is problematic, because of my proxy\nif ! ( apt-get update &&  DEBIAN_FRONTEND=noninteractive apt-get install -y postgresql-${PG_OLD_VERSION} postgresql-client-${PG_OLD_VERSION} ) >/dev/null; then\n            echo \"ERROR! Failed to install PostgreSQL ${PG_OLD_VERSION}. Exiting...\"\n            # first move the old data back\n            rm -rf ${PG_HOME}/${PG_OLD_VERSION}\n            mv ${PG_HOME}/${PG_OLD_VERSION}.migrating ${PG_HOME}/${PG_OLD_VERSION}\n            exit 1\n          fi\nSolution (in my case) : setting proxy configuration for apt-get inside the postgresql image so that it can migrate properly. Proxy settings are in /etc/apt/apt.conf - create if not exist - and are structured as follows : \nNote : $PROXY_ADDRESS and $PROXY_PORT need to be replaced with actual values depending on your environment.\n```\nSpecific settings for apt package manager\nAcquire::http::Proxy \"http://$PROXY_ADDRESS:$PROXY_PORT\";\nAcquire::https::Proxy \"http://$PROXY_ADDRESS:$PROXY_PORT\";\n```\nIf you need authentication (which is not my case), settings would be structed this way\nNote : $username and $password need to be replaced with actual values depending on your environment. Same rule for $PROXY_ADDRESS and $PROXY_PORT as the example above.\n```\nSpecific settings for apt package manager\nAcquire::http::Proxy \"http://$username:$password@$PROXY_ADDRESS:$PROXY_PORT\";\nAcquire::https::Proxy \"http://$username:$password@$PROXY_ADDRESS:$PROXY_PORT\";\n```. I found a solution ! It was because of my proxy.\nI detailed the workaround here - sameersbn/docker-postgresql #91. I found a solution ! It was because of my proxy.\nI detailed the workaround here - sameersbn/docker-postgresql #91. Do you want your registry and your gitlab to communicate in HTTPS or no ? I believe this decision will have a big impact on how you implement this.\nFrom my limited understanding of the situation, I guess that if you can make it work for gitlab in HTTPS, you could do the same for the registry. The one thing I cannot figure out is how you plan to make gitlab and the registry communicate with each other securely given your setup.\nIn the docker-compose.yml you have parameters that point directly to the certificates, both for the registry and the gitlab. You kind of need to have then mounted on docker volumes somewhere.\nExample : \ngitlab configuration for registry + SSL in docker-compose : \n- SSL_REGISTRY_KEY_PATH=/certs/registry.key\n    - SSL_REGISTRY_CERT_PATH=/certs/registry.cer\n    - GITLAB_REGISTRY_ENABLED=true\n    - GITLAB_REGISTRY_HOST=registry.example.com\n    - GITLAB_REGISTRY_PORT=5500\n    - GITLAB_REGISTRY_API_URL=http://registry:5000\n    - GITLAB_REGISTRY_KEY_PATH=/certs/registry.key\n    - GITLAB_REGISTRY_ISSUER=registry.example.com\nregistry SSL configuration in docker-compose :\n- REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n    - REGISTRY_AUTH_TOKEN_REALM=https://gitlab.example.com/jwt/auth\n    - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n    - REGISTRY_AUTH_TOKEN_ISSUER=registry.example.com\n    - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/registry.cer\n. ",
    "youuri": "Or even tomorrow ;D. ",
    "SebaBoler": "Thank you.It works. Container is switching off. When i tried your command and get 192.168.20.12:5432 not response.\nI need check NAT, beacuse container working on 10.0.3.3\nI will another solution : create container with postgresql. Initializing logdir...                                                                                                                                                                                                                                        \nInitializing datadir...                                                                                                                                                                                                                                       \nInstalling configuration templates...                                                                                                                                                                                                                         \nConfiguring gitlab...                                                                                                                                                                                                                                         \nConfiguring gitlab::database                                                                                                                                                                                                                                  \nConfiguring gitlab::redis                                                                                                                                                                                                                                     \nConfiguring gitlab::secrets...                                                                                                                                                                                                                                \nConfiguring gitlab::sidekiq...                                                                                                                                                                                                                                \nConfiguring gitlab::gitlab-workhorse...                                                                                                                                                                                                                       \nConfiguring gitlab::unicorn...                                                                                                                                                                                                                                \nConfiguring gitlab::timezone...                                                                                                                                                                                                                               \nConfiguring gitlab::rack_attack...                                                                                                                                                                                                                            \nConfiguring gitlab::ci...                                                                                                                                                                                                                                     \nConfiguring gitlab::artifacts...                                                                                                                                                                                                                              \nConfiguring gitlab::lfs...                                                                                                                                                                                                                                    \nConfiguring gitlab::project_features...                                                                                                                                                                                                                       \nConfiguring gitlab::oauth...                                                                                                                                                                                                                                  \nConfiguring gitlab::ldap...                                                                                                                                                                                                                                   \nConfiguring gitlab::backups...                                                                                                                                                                                                                                \nConfiguring gitlab::registry...                                                                                                                                                                                                                               \nConfiguring gitlab-shell...                                                                                                                                                                                                                                   \nConfiguring nginx...                                                                                                                                                                                                                                          \nConfiguring nginx::gitlab...                                                                                                                                                                                                                                  \nMigrating database...                                                                                                                                                                                                                                         \nRails Error: Unable to access log file. Please ensure that /home/git/gitlab/log/production.log exists and is writable (ie, make it writable for user and group: chmod 0664 /home/git/gitlab/log/production.log). The log level has been raised to WARN and the\n output directed to STDERR until the problem is fixed.                                                                                                                                                                                                        \n** [Raven] Raven 2.0.2 configured not to capture errors.                                                                                                                                                                                                      \nMigrating to MigrateToNewShell (20140903115954)                                                                                                                                                                                                               \n/usr/lib/ruby/2.3.0/logger.rb:703:ininitialize': Permission denied @ rb_sysopen - /var/log/gitlab/gitlab-shell/gitlab-shell.log (Errno::EACCES)                                                                                                           \n        from /usr/lib/ruby/2.3.0/logger.rb:703:in open'                                                                                                                                                                                                      \n        from /usr/lib/ruby/2.3.0/logger.rb:703:inopen_logfile'                                                                                                                                                                                            \n        from /usr/lib/ruby/2.3.0/logger.rb:695:in set_dev'                                                                                                                                                                                                   \n        from /usr/lib/ruby/2.3.0/logger.rb:635:ininitialize'                                                                                                                                                                                              \n        from /usr/lib/ruby/2.3.0/logger.rb:353:in new'                                                                                                                                                                                                       \n        from /usr/lib/ruby/2.3.0/logger.rb:353:ininitialize'                                                                                                                                                                                              \n        from /home/git/gitlab-shell/lib/gitlab_logger.rb:15:in new'                                                                                                                                                                                          \n        from /home/git/gitlab-shell/lib/gitlab_logger.rb:15:in'                                                                                                                                                                           \n        from /home/git/gitlab-shell/lib/gitlab_projects.rb:6:in require_relative'                                                                                                                                                                            \n        from /home/git/gitlab-shell/lib/gitlab_projects.rb:6:in'                                                                                                                                                                          \n        from /home/git/gitlab-shell//bin/create-hooks:8:in require'                                                                                                                                                                                          \n        from /home/git/gitlab-shell//bin/create-hooks:8:in'                                                                                                                                                                                         \nrake aborted!                                                                                                                                                                                                                                               \nStandardError: An error has occurred, this and all later migrations canceled:                                                                                                                                                                                 \nFailed to rewrite gitlab-shell hooks in repositories/home/git/gitlab/db/migrate/20140903115954_migrate_to_new_shell.rb:10:in change'                                                                                                                         \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:608:inexec_migration'                                                                                                                                    /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:592:in block (2 levels) in migrate'                                                                                                                       \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:591:inblock in migrate'                                                                                                                                \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:in with_connection'                                                                                                \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:590:inmigrate'                                                                                                                                         \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:768:in migrate'                                                                                                                                           \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:998:inblock in execute_migration_in_transaction'                                                                                                       \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:1044:in block in ddl_transaction'                                                                                                                         \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract/database_statements.rb:213:inblock in transaction'                                                                                     \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract/transaction.rb:184:in within_new_transaction'                                                                                             \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract/database_statements.rb:213:intransaction'                                                                                              \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/transactions.rb:220:in transaction'                                                                                                                                    \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:1044:inddl_transaction'                                                                                                                                \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:997:in execute_migration_in_transaction'                                                                                                                  \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:959:inblock in migrate'                                                                                                                                \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:955:in each'                                                                                                                                              \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:955:inmigrate'                                                                                                                                         \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:823:in up'                                                                                                                                                \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:801:inmigrate'                                                                                                                                         \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:137:in migrate'                                                                                                                                \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/railties/databases.rake:44:inblock (2 levels) in '\nFailed to rewrite gitlab-shell hooks in repositories                                                                                                                                                                                                        \n/home/git/gitlab/db/migrate/20140903115954_migrate_to_new_shell.rb:10:in change'                                                                                                                                                                             \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:608:inexec_migration'                                                                                                                                  \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:592:in block (2 levels) in migrate'                                                                                                                       \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:591:inblock in migrate'                                                                                                                                \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:in with_connection'                                                                                                \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:590:inmigrate'                                                                                                                                         \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:768:in migrate'                                                                                                                                           \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:998:inblock in execute_migration_in_transaction'                                                                                                       \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:1044:in block in ddl_transaction'                                                                                                                         \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract/database_statements.rb:213:inblock in transaction'                                                                                     \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract/transaction.rb:184:in within_new_transaction'                                                                                             \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/connection_adapters/abstract/database_statements.rb:213:intransaction'                                                                                              \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/transactions.rb:220:in transaction'                                                                                                                                    \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:1044:inddl_transaction'                                                                                                                                \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:997:in execute_migration_in_transaction'                                                                                                                  \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:959:inblock in migrate'                                                                                                                                \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:955:in each'                                                                                                                                              \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:955:inmigrate'                                                                                                                                         \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:823:in up'                                                                                                                                                \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/migration.rb:801:inmigrate'                                                                                                                                         \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/tasks/database_tasks.rb:137:in migrate'                                                                                                                                \n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/railties/databases.rake:44:inblock (2 levels) in '                                                                                                  \nTasks: TOP => db:migrate                                                                                                                                                                                                                                    \n(See full trace by running task with --trace)              `\n. ",
    "ThomBogers": "That fixed it, thank you very much!\nTook me some time to find how to run gitlab-ctl stuff, for other people with this issue this means running:\ndocker run --name gitlab -it --rm [OPTIONS] \\\n    sameersbn/gitlab:8.14.0 app:rake db:migrate\n. ",
    "sash": "Im guessing https://github.com/sameersbn/docker-gitlab/pull/989 will fix that. +1 - missing version tag is annoying!. ",
    "chraibi": "This is interesting to me too! A little bit late, but hope to get an answer though. \nIs it not a bit odd to have to shutdown a production system, just to make a backup?\nAccording to this answer we can start a new image and run inside it the backup command. \nWould this work?. thanks. Link perhaps? \nMy question was not regarding the scheduled part, but just the condition for running the backup.. thanks!. Delete the user? No way!. ",
    "jostyee": "@chraibi GitLab supports scheduled backup already.. our security group issue, fixed.. @solidnerd I haven't found any compatibility issue upgrading to 1.7.4. @lenovouser I'm sorry I was testing dockerhub...\nclose this pr for now since I looked into gitlab-workhorse source code, it built on Go 1.5 and I couldn't say I enjoyed it.. In fact GitLab has very poor support for CJK chars.. This PR should be updated with 8.15.1 https://about.gitlab.com/2016/12/23/gitlab-8-dot-15-dot-1-released/. have you set - GITLAB_HOST=gitlab.yourhost.com ?. I wonder which update introduced this issue: https://github.com/sameersbn/docker-gitlab/issues/1036 seems just adjust version number is not enough.. @GJRTimmer https://gitlab.com/gitlab-org/gitlab-runner-docker-cleanup. @r2evans I've met similar issue in 8.17, or even worse. No complete backup tar file generated, but only components.\n\n. I don't know to add commit on base of this PR, seems we only need to pass pages_external_url flag, small modification to the runtime env script.. better to leave Pages to a separate PR? . @damiendurant can you do a rebase?. @derchrisuk\n- Enable Prometheus Metrics is stored in database\n- you can set prometheus_multiproc_dir in docker-compose.yml as below:\n    environment:\n      - prometheus_multiproc_dir=/dev/shm. @reynold-lariza I've upgraded to 8.17.2 w/o pages & everything is fine till now.. @reynold-lariza We have a convention that do rebasing before resubmitting a MR & it works.\nI've no idea whether the builtin CI is working or not, since it only support pull codes via HTTPS(we only allow SSH), so I build a Jenkins job & invoke it via webhook, working too.. @reynold-lariza Fine here.\n\n. @kristiandrucker why not upgrade GitLab Shell too if you want to use the latest version?. @splattael We're still seeing\nlog\n==> unicorn.stderr.log <==\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/nokogiri-1.6.8.1/lib/nokogiri/html/document.rb:164: warning: constant ::Fixnum is deprecated\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/nokogiri-1.6.8.1/lib/nokogiri/xml/node.rb:390: warning: constant ::Fixnum is deprecated\nafter upgrade ruby to 2.4.1 and redis to 4.0.1. https://stackoverflow.com/a/44477520/391464 said Rails 4.2.8 already supports Ruby 2.4, kinda weird.. Can you visit http://chat.mydomain.com directly?. I guess it should be forwarded to a Mattermost instance?. I mean it's your work to establish the Mattermost instance, before enable the GITLAB_MATTERMOST_ENABLED setting.. What you referred to is GitLab Omnibus(bundled with Mattermost), this repo only contains GitLab CE.. I'd rather commit the tutorial here instead of a link.. https://github.com/sameersbn/docker-gitlab/blob/master/docs/container_registry.md. docker exec -it gitlab_registry_1 registry garbage-collect /etc/docker/registry/config.yml. since 9.3 has been merged, this pr should be rebased and upgrade to the latest 9.3.3 version, which fixed a gitlab api major bug.. Both 9.3.1 and 9.3.2 are buggy, why bother tagging them?. Me neither, can't reproduce any issue you mentioned.. Seems there're more work to do the upgrade: https://gitlab.com/gitlab-org/gitlab-ce/issues/35438#note_35677506. @vipseixas submit a PR to fix this issue would be welcomed.. Had you ever checked the tag files or changelog doc before commit this PR? There're several dependencies updates which you completely ignored.. then GITLAB_UPLOADS_STORAGE_PATH=/home/git/gitlab/public should be the default value.. @solidnerd this pr can reduce almost 600MB of the final image size.. 11.1.2 released: https://about.gitlab.com/2018/07/26/security-release-gitlab-11-dot-1-dot-2-released/. bash\ndocker-compose run --rm gitlab app:rake gitlab:backup:create. stderr logfile should be separate out with stdout.. GITLAB_SHELL_VERSION=5.0.5 \\\n    GITLAB_WORKHORSE_VERSION=2.1.1 \\\n    GITLAB_PAGES_VERSION=0.4.3 \\\nhttps://gitlab.com/gitlab-org/gitlab-ce/tree/acb7f257db65e8ce2907e4de7c42627c110476e1. @solidnerd Separate ci or separate pr? but what for? These version updates are required by GitLab CE.. Dockerfile\nGITLAB_WORKHORSE_VERSION=5.0.0\nGITLAB_PAGES_VERSION=1.0.0\nGITALY_SERVER_VERSION=0.111.1\nsee: \nhttps://gitlab.com/gitlab-org/gitlab-ce/blob/35c387cb6bcc1406fc9aac8451bca128a12bafbf/GITLAB_WORKHORSE_VERSION\nhttps://gitlab.com/gitlab-org/gitlab-ce/blob/35c387cb6bcc1406fc9aac8451bca128a12bafbf/GITLAB_PAGES_VERSION\nhttps://gitlab.com/gitlab-org/gitlab-ce/blob/35c387cb6bcc1406fc9aac8451bca128a12bafbf/GITALY_SERVER_VERSION. ",
    "sotaan": "I didn't touch anything into the postgresql configuration except copy/paste my old password from my last docker-compose.yml file. \u279c  ~ docker-compose -v\ndocker-compose version 1.9.0, build 2585387. Using the -d option helped me pass through this error. Still got the same output but at least I got gitlab working.\n\u279c  gitlab $docker-compose logs\nAttaching to gitlab_gitlab_1, gitlab_redis_1, gitlab_postgresql_1\ngitlab_1      | Initializing logdir...\ngitlab_1      | Initializing datadir...\ngitlab_1      | Installing configuration templates...\ngitlab_1      | Configuring gitlab...\ngitlab_1      | Configuring gitlab::database.\ngitlab_1      | Configuring gitlab::redis\ngitlab_1      | Configuring gitlab::secrets...\ngitlab_1      | Configuring gitlab::sidekiq...\ngitlab_1      | Configuring gitlab::gitlab-workhorse...\ngitlab_1      | Configuring gitlab::unicorn...\ngitlab_1      | Configuring gitlab::timezone...\ngitlab_1      | Configuring gitlab::rack_attack...\ngitlab_1      | Configuring gitlab::ci...\ngitlab_1      | Configuring gitlab::artifacts...\ngitlab_1      | Configuring gitlab::lfs...\ngitlab_1      | Configuring gitlab::project_features...\ngitlab_1      | Configuring gitlab::smtp_settings...\ngitlab_1      | Configuring gitlab::incoming_email...\ngitlab_1      | Configuring gitlab::oauth...\ngitlab_1      | Configuring gitlab::ldap...\ngitlab_1      | Configuring gitlab::backups...\ngitlab_1      | Configuring gitlab::backups::schedule...\ngitlab_1      | Configuring gitlab::registry...\ngitlab_1      | Configuring gitlab-shell...\ngitlab_1      | Configuring nginx...\ngitlab_1      | Configuring nginx::gitlab...\ngitlab_1      | 2016-12-01 12:05:18,312 CRIT Supervisor running as root (no user in config file)\ngitlab_1      | 2016-12-01 12:05:18,313 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\ngitlab_1      | 2016-12-01 12:05:18,313 WARN Included extra file \"/etc/supervisor/conf.d/gitlab-workhorse.conf\" during parsing\ngitlab_1      | 2016-12-01 12:05:18,313 WARN Included extra file \"/etc/supervisor/conf.d/mail_room.conf\" during parsing\ngitlab_1      | 2016-12-01 12:05:18,313 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\ngitlab_1      | 2016-12-01 12:05:18,313 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\ngitlab_1      | 2016-12-01 12:05:18,313 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\ngitlab_1      | 2016-12-01 12:05:18,313 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\ngitlab_1      | 2016-12-01 12:05:18,328 INFO RPC interface 'supervisor' initialized\ngitlab_1      | 2016-12-01 12:05:18,328 CRIT Server 'unix_http_server' running without any HTTP authentication checking\ngitlab_1      | 2016-12-01 12:05:18,328 INFO supervisord started with pid 1\ngitlab_1      | 2016-12-01 12:05:19,331 INFO spawned: 'sidekiq' with pid 486\ngitlab_1      | 2016-12-01 12:05:19,333 INFO spawned: 'unicorn' with pid 487\ngitlab_1      | 2016-12-01 12:05:19,334 INFO spawned: 'mail_room' with pid 488\ngitlab_1      | 2016-12-01 12:05:19,336 INFO spawned: 'gitlab-workhorse' with pid 489\ngitlab_1      | 2016-12-01 12:05:19,337 INFO spawned: 'cron' with pid 490\ngitlab_1      | 2016-12-01 12:05:19,339 INFO spawned: 'nginx' with pid 491\ngitlab_1      | 2016-12-01 12:05:19,340 INFO spawned: 'sshd' with pid 492\ngitlab_1      | 2016-12-01 12:05:21,030 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2016-12-01 12:05:21,030 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2016-12-01 12:05:21,030 INFO success: mail_room entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2016-12-01 12:05:21,030 INFO success: gitlab-workhorse entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2016-12-01 12:05:21,030 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2016-12-01 12:05:21,030 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2016-12-01 12:05:21,030 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nredis_1       | Starting redis-server...\nredis_1       | [1] 01 Dec 11:05:12.200 # Server started, Redis version 2.8.4\nredis_1       | [1] 01 Dec 11:05:12.200 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\npostgresql_1  | Initializing datadir...\npostgresql_1  | Initializing certdir...\npostgresql_1  | Initializing logdir...\npostgresql_1  | Initializing rundir...\npostgresql_1  | Setting resolv.conf ACLs...\npostgresql_1  | Creating database user: gitlab\npostgresql_1  | Creating database: gitlabhq_production...\nTraceback (most recent call last):\n  File \"/usr/bin/docker-compose\", line 11, in <module>\n    load_entry_point('docker-compose==1.9.0', 'console_scripts', 'docker-compose')()\n  File \"/usr/lib/python3.5/site-packages/compose/cli/main.py\", line 65, in main\n    command()\n  File \"/usr/lib/python3.5/site-packages/compose/cli/main.py\", line 117, in perform_command\n    handler(command, command_options)\n  File \"/usr/lib/python3.5/site-packages/compose/cli/main.py\", line 528, in logs\n    event_stream=self.project.events(service_names=options['SERVICE'])).run()\n  File \"/usr/lib/python3.5/site-packages/compose/cli/log_printer.py\", line 98, in run\n    self.output.write(line)\nUnicodeEncodeError: 'ascii' codec can't encode character '\\u2023' in position 25: ordinal not in range(128). I already found issues related to this which were supposed to be already resolved and patched a long time ago. ",
    "gilyes": "I upgraded as well from 8.14.0 to 8.14.1, and now I can't push to my protected branches that I could push to before. Getting error saying \"remote: GitLab: You are not allowed to force push code to a protected branch on this project\" even though I am not force pushing. But yeah, most likely this is an issue for GitLab.. Yes, the issue started immediately after upgrading to 8.14.1. I am the Owner on those repos and tried all combinations with no success. If I take off branch protection all is good. Given the actual error message (talking about force push) if GitLab somehow thinks I am force pushing then it is expected to reject it. But I am not force pushing, Tried it from different machines, different repos, same result.. Yeah, I might do that thanks.. According to this comment the issue preventing regular push to protected branches may be caused by a change in behavior between Git versions. \nEssentially, the output of a git command in a specific scenario apparently changed from empty to a non-empty string, causing GitLab to erroneously think that a regular push is forced push. \nThe commenter reverted the GitLab container's Git version from 2.11 to 1.9.1 and the issue disappeared. . ",
    "jasl8r": "FYI, you can release a quick patch by installing an older version of git still available on the Ubuntu servers:\napt get install -y git=1:1.9.1-1ubuntu0.3 git-man=1:1.9.1-1ubuntu0.3\n. ",
    "lyda": "Note that I've gotten this to build, but have not yet deployed to see if it fixes the issue. For dumb reasons this will require me to build it a second time and the deploy it. Which will take a while. However I think it should address the issue.. The version git uses internally causes the issue. I was seeing the issue\nwith git 2.9.3 on my laptop, but just from reading the bug it's clear that\nit's being caused on the server (gitlab) side. I'll try and fix it on the\ngitlab side tomorrow.. Fixes it for me, closing my PR.. I upgraded and it works fine. This is no longer required.. I'm going to look at doing this unless someone is going to be working on that.. Uh, yes. Please merge this. This is an important fix.. ",
    "liangsuilong": "The upstream has fixed the issue on Gitlab 8.15. https://gitlab.com/gitlab-org/gitlab-ce/issues/25301\nI think we could follow the upstream version to deal with this problem. . ",
    "marcwrobel": "@solidnerd, I just tested and the problem has been fixed by the upgrade to 8.15.0.. ",
    "adferrand": "After update to 8.15.1, I confirm also that the issue is fixed. . Hello @solidnerd, for me, it was when upgrading from 10.8.1 to 10.8.3. No modifications done, just recreate and start the container.\nI commented out lines in /sbin/entrypoint.sh from lines 18 to 23. Made temporary fix by mounting the \"sanitized\" entrypoint.sh from host to the docker in place.\nError on log is the following (line 5):\njuin 04 11:19:32 nuuk b977f18f05f6[801]: Configuring nginx::gitlab...                                                                                              \njuin 04 11:19:32 nuuk b977f18f05f6[801]: Configuring nginx::gitlab::hsts...                                                                                        \njuin 04 11:19:32 nuuk b977f18f05f6[801]: Configuring nginx::gitlab-registry...                                                                                     \njuin 04 11:19:32 nuuk b977f18f05f6[801]: Configuring nginx::gitlab-pages...                                                                                        \njuin 04 11:19:32 nuuk b977f18f05f6[801]: /sbin/entrypoint.sh: line 22:  2887 Terminated              /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf     \njuin 04 11:19:33 nuuk 9c7bde9c4ff7[801]: Loading /etc/docker-gitlab/runtime/env-defaults                                                                           \njuin 04 11:19:33 nuuk 9c7bde9c4ff7[801]: Initializing logdir...                                                                                                    \njuin 04 11:19:33 nuuk 9c7bde9c4ff7[801]: Initializing datadir...                                                                                                   \njuin 04 11:19:34 nuuk 9c7bde9c4ff7[801]: Updating CA certificates...                                                                                               \njuin 04 11:19:39 nuuk 9c7bde9c4ff7[801]: Installing configuration templates...                                                                                     \njuin 04 11:19:39 nuuk 9c7bde9c4ff7[801]: SSL Key, SSL Certificate and DHParam were not found.                                                                      \njuin 04 11:19:39 nuuk 9c7bde9c4ff7[801]: Assuming that the container is running behind a HTTPS enabled load balancer.                                              \njuin 04 11:19:39 nuuk 9c7bde9c4ff7[801]: SSL Key, SSL Certificate were not found.                                                                                  \njuin 04 11:19:39 nuuk 9c7bde9c4ff7[801]: Assuming that the container is running behind a HTTPS enabled load balancer.                                              \njuin 04 11:19:39 nuuk 9c7bde9c4ff7[801]: Configuring gitlab...                                                                                                     \njuin 04 11:19:39 nuuk 9c7bde9c4ff7[801]: Configuring gitlab::database                                                                                              \njuin 04 11:19:39 nuuk 9c7bde9c4ff7[801]: Configuring gitlab::redis                                                                                                 \njuin 04 11:19:39 nuuk 9c7bde9c4ff7[801]: Configuring gitlab::secrets...                                                                                            \njuin 04 11:19:39 nuuk 9c7bde9c4ff7[801]: Configuring gitlab::sidekiq...                                                                                            \njuin 04 11:19:39 nuuk 9c7bde9c4ff7[801]: Configuring gitlab::gitaly...                                                                                             \njuin 04 11:19:39 nuuk 9c7bde9c4ff7[801]: Configuring gitlab::monitoring...                                                                                         \njuin 04 11:19:40 nuuk 9c7bde9c4ff7[801]: Configuring gitlab::gitlab-workhorse...                                                                                   \njuin 04 11:19:40 nuuk 9c7bde9c4ff7[801]: Configuring gitlab::unicorn...                                                                                            \njuin 04 11:19:40 nuuk 9c7bde9c4ff7[801]: Configuring gitlab::timezone...\nFailing line appears in red color in my log, meaning the execution is considered as failing in the bash environment, and the container restarts immediatly after that. It makes me think that the wait called on line 22 uses an invalid PID, leading to a non 0 exit status.. @flashermaster It is not the real error, the real one is below.\nIn fact you did not specified explicit signing key on your docker with env variables GITLAB_SECRETS_*. So at first start, the docker generated it for you, put it in config/secrets.yml and started to sign data using it. Then you deleted this file somehow (certainly with your data fix in persistent storage). Finally, at second start, the docker generated a new key, which is obviously incompatible with existing data.\nSo your data is messed up, you need to start with a completely clean state, meaning with nothing in /volume1/docker/gitlab/gitlab. And avoid to use 10.8.3 for now, and put explicit signing keys in env variables.. Ok @flashermaster, I think that now, if you try to start in 10.8.1, it will fail because your data is already in 10.8.3. But 10.8.3 will bootloop as we saw in this issue.\nSo now, mount a custom entrypoint.sh from your host on path /sbin/entrypoint.sh (like --volume /your/host/path/entrypoint.sh:/sbin/entrypoint.sh), with the content of the script as in the repo sources (entrypoint.sh in on the root of sameersbn/docker-gitlab). Comment lines 18-23, and restart the docker in version 10.8.3. Do not forget chmod +x on entrypoint.sh\nFor me it worked. Also for @adamlc with a slightly different approach (he modified entrypoint.sh and built his own docker image).\nFor everyone, it is a working temporary solution, until the repo sources are fixed and a new image is deployed. But it skips database migration, so you should already be on a 10.8.X gitlab version to avoid weird issues.. @solidnerd, I have some debug data. So I put some output (echo and ps aux) before each commands on line 20, 21 and 22. Basically, before migrate_database, kill supervisord and wait PID.\nHere is the result:\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: Configuring nginx::gitlab-registry...\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: Configuring nginx::gitlab-pages...\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: Supervisor PID is:2887\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: root         1  5.2  0.0  19108  3816 ?        Ss   20:59   0:00 /bin/bash /sbin/entrypoint.sh app:start\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: root      2887  0.0  0.0  20124  3040 ?        R    20:59   0:00 /usr/bin/python /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: root      2888  0.0  0.0  34424  2840 ?        R    20:59   0:00 ps aux\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: Before kill\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: root         1  5.2  0.0  19108  3816 ?        Ss   20:59   0:00 /bin/bash /sbin/entrypoint.sh app:start\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: root      2887  0.0  0.0  38376 14032 ?        R    20:59   0:00 /usr/bin/python /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: root      2899  0.0  0.0  34424  2808 ?        R    20:59   0:00 ps aux\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: Before wait\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: root         1  5.3  0.0  19108  3816 ?        Ss   20:59   0:00 /bin/bash /sbin/entrypoint.sh app:start\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: root      2900  0.0  0.0  34424  2800 ?        R    20:59   0:00 ps aux\njuin 04 20:59:25 nuuk 9c7bde9c4ff7[801]: /sbin/entrypoint.sh: line 16:  2887 Terminated              /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf\njuin 04 20:59:26 nuuk 9c7bde9c4ff7[801]: Loading /etc/docker-gitlab/runtime/env-defaults\njuin 04 20:59:26 nuuk 9c7bde9c4ff7[801]: Initializing logdir...\nThis log shows that supervisord is started with PID = 2887, and shown in the ps aux. Before kill, just after migrate_database, supervisord is still up and shown in ps aux. So migrate_database did not break anything, everything is OK so far.\nWhere it becomes interesting is after the kill and before the wait. No process of PID = 2887 anymore in ps aux ! The process has been killed before wait even occur.\nSo @solidnerd, you do not see the error and some of us see it because our hardware is fast enough to \"instantly\" kill supervisord, and when wait kicks in, the process does not exist anymore and creates the error.. @solidnerd And I deployed it on my production environment without any issue. I think we are good to go.. I thought about the possibility of a the race condition between ps and wait, but in fact I think there is no race.\nFirst empirically because the issue is solved in the same conditions.\nSecond theoretically. Before, kill and wait were executed as two different commands. I think that there is no guaranty that two consecutive bash commands are executed by two consecutive cpu cycles. So there could have sufficiently enough cpu cycles to allow the process to be effectively killed before the wait is invoked, leading to the original error.\nBut it is quite different for a boolean evaluation, which is the case of my correction for ps and wait. Consistency of the evaluation of two operands in a binary combination is required, or your boolean test could be different depending on the runtime. So I think that two operands in a binary association are evaluated as one unique command, and operands are all executed in consecutive cpu cycles, which guarantee that nothing happens between them, and so the consistency, and so the insurance that what ps gave will still be relevant for the wait. \nFor your example however, the wait and kill will never finish normally, because at the time of the wait we said nothing to the process which could change its state (kill it for our case), so wait will stale until timeout. . And so died my hypothesis. As a scientist, I have to admit my mistake ^^ I will remember that shells are definitely programming languages, and that everything must be designed with the multi-threading nature of the underlying os in mind. \nSo your solution is better as it ensures that no race can occur. I will make a new PR. \nThanks! \n. Hum. In fact executing wait $SUPERVISOR_PID & leads to a \"wait pid is not a child of this shell\". Indeed executing the wait in background makes it be executed in a sub-child of the current shell. Then it is not allowed to watch the process of pid $SUPERVISOR_PID, which is also a sub-child of the current shell.\nStarted from the foreground, wait, as a built-in command, stays in the shell and then can act normally.\nSo of course we could make a while loop on the /proc/$SUPERVISOR_PID until it disapear, but here goes again the race between while and its execution statement !\n@paddy-hack, do you have an idea ?. Or will just do a wait $SUPERVISOR_PID || true to trap the potential error on wait, and we are good to go. Anyway if wait fails, it means that the process is already dead, and that is what we want before continuing. . ",
    "philipphoffmann": "I can also confirm that the issue is fixed after upgrading to 8.15.1. ",
    "kelvinblood": "hey guys.\nI met this problem too.\nas @sameersbn says,  database connection test is timing out.  I just clean my /var/lib/docker and then restart from the beginning, it is ok.\nI have build up compose for serveral times, maybe it leave some problem with docker-postgresql.. ",
    "zen0x90": "Just found a solution :\nC_INCLUDE_PATH=\"/usr/kerberos/include\" gem install timfel-krb5-auth -v '0.8.3'\n. ",
    "galet": "This version contains a fix to a critical security vulnerability. Would it be possible to release such versions quicker? Is there a plan to speedup this process?. ",
    "jstdoit": "I am testing with Notify.test_email('xxx@xxxx.me', 'Message Subject', 'Message Body').deliver_now, and got these errors: \n\n\n\nSent mail to xxx@xxx.me (60250.3ms)\nDate: Thu, 08 Feb 2018 14:23:30 +0530\nFrom: GitLab noreply@ganggang.me\nReply-To: GitLab noreply@ganggang.me\nTo: ganggang@ganggang.me\nMessage-ID: 5a7c100a9741f_5dce2d0b046a8@4ea1d5db8218.mail\nSubject: Message Subject\nMime-Version: 1.0\nContent-Type: text/html;\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\nAuto-Submitted: auto-generated\nX-Auto-Response-Suppress: All\n\n\n\nhtml PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\"\nMessage Body\nNet::ReadTimeout: Net::ReadTimeout\n    from /usr/lib/ruby/2.3.0/net/protocol.rb:176:in rbuf_fill'\n    from /usr/lib/ruby/2.3.0/net/protocol.rb:154:inreaduntil'\n    from /usr/lib/ruby/2.3.0/net/protocol.rb:164:in readline'\n    from /usr/lib/ruby/2.3.0/net/smtp.rb:955:inrecv_response'\n    from /usr/lib/ruby/2.3.0/net/smtp.rb:556:in block in do_start'\n    from /usr/lib/ruby/2.3.0/net/smtp.rb:965:incritical'\n    from /usr/lib/ruby/2.3.0/net/smtp.rb:556:in do_start'\n    from /usr/lib/ruby/2.3.0/net/smtp.rb:521:instart'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mail-2.7.0/lib/mail/network/delivery_methods/smtp.rb:109:in start_smtp_session'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mail-2.7.0/lib/mail/network/delivery_methods/smtp.rb:100:indeliver!'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mail-2.7.0/lib/mail/message.rb:2160:in do_delivery'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mail-2.7.0/lib/mail/message.rb:260:inblock in deliver'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/actionmailer-4.2.10/lib/action_mailer/base.rb:543:in block in deliver_mail'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/notifications.rb:164:inblock in instrument'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/notifications/instrumenter.rb:20:in instrument'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/notifications.rb:164:ininstrument'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/actionmailer-4.2.10/lib/action_mailer/base.rb:541:in deliver_mail'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mail-2.7.0/lib/mail/message.rb:260:indeliver'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/actionmailer-4.2.10/lib/action_mailer/message_delivery.rb:85:in deliver_now'\n    from (irb):1\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.10/lib/rails/commands/console.rb:110:instart'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.10/lib/rails/commands/console.rb:9:in start'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.10/lib/rails/commands/commands_tasks.rb:68:inconsole'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.10/lib/rails/commands/commands_tasks.rb:39:in run_command!'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.10/lib/rails/commands.rb:17:in'\n    from ./bin/rails:9:in require'\n    from ./bin/rails:9:in'\n\n\n\n. it works by setting the environment.. \n\n\n",
    "Quexer69": "+1\nBesides there is currently no 4.0.3 release (https://github.com/gitlabhq/gitlab-shell/releases) with 4.0.0 everthing`s just fine.. ",
    "EasonWang01": "2016-12-13 05:29:55,645 INFO exited: unicorn (exit status 1; not expected)\n2016-12-13 05:29:56,660 INFO spawned: 'unicorn' with pid 654\n2016-12-13 05:29:57,661 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nWARNING: This version of GitLab depends on gitlab-shell 4.0.3, but you're running 4.0.0. Please update gitlab-shell.\nI found some log here.. @sameersbn . yes,it might be the problem of the image itself.. ",
    "alex3305": "I have the same issue and the following in the unicorn.stderr.log:\nI, [2016-12-15T13:52:08.252151 #22344]  INFO -- : worker=1 ready                                                \nE, [2016-12-15T13:53:07.295769 #495] ERROR -- : worker=0 PID:22321 timeout (61s > 60s), killing                 \nE, [2016-12-15T13:53:07.329132 #495] ERROR -- : reaped #<Process::Status: pid 22321 SIGKILL (signal 9)> worker=0\nI, [2016-12-15T13:53:07.435196 #22795]  INFO -- : worker=0 ready                                                \nE, [2016-12-15T13:53:09.416083 #495] ERROR -- : worker=1 PID:22344 timeout (61s > 60s), killing                 \nE, [2016-12-15T13:53:09.455313 #495] ERROR -- : reaped #<Process::Status: pid 22344 SIGKILL (signal 9)> worker=1\nI, [2016-12-15T13:53:09.646793 #22819]  INFO -- : worker=1 ready                                                \nE, [2016-12-15T13:54:08.681832 #495] ERROR -- : worker=0 PID:22795 timeout (61s > 60s), killing                 \nE, [2016-12-15T13:54:08.710320 #495] ERROR -- : reaped #<Process::Status: pid 22795 SIGKILL (signal 9)> worker=0\nI, [2016-12-15T13:54:08.772777 #23285]  INFO -- : worker=0 ready                                                \nE, [2016-12-15T13:54:10.812807 #495] ERROR -- : worker=1 PID:22819 timeout (61s > 60s), killing                 \nE, [2016-12-15T13:54:10.889341 #495] ERROR -- : reaped #<Process::Status: pid 22819 SIGKILL (signal 9)> worker=1\nI, [2016-12-15T13:54:10.925535 #23302]  INFO -- : worker=1 ready                                                \nE, [2016-12-15T13:55:10.133465 #495] ERROR -- : worker=0 PID:23285 timeout (61s > 60s), killing                 \nE, [2016-12-15T13:55:10.194133 #495] ERROR -- : reaped #<Process::Status: pid 23285 SIGKILL (signal 9)> worker=0\nE, [2016-12-15T13:55:11.239516 #495] ERROR -- : worker=1 PID:23302 timeout (61s > 60s), killing                 \nE, [2016-12-15T13:55:11.616705 #495] ERROR -- : reaped #<Process::Status: pid 23302 SIGKILL (signal 9)> worker=1\nI, [2016-12-15T13:55:12.006857 #23766]  INFO -- : worker=0 ready                                                \nI, [2016-12-15T13:55:12.025994 #23782]  INFO -- : worker=1 ready                                                \nE, [2016-12-15T13:56:13.714402 #495] ERROR -- : worker=0 PID:23766 timeout (62s > 60s), killing                 \nE, [2016-12-15T13:56:13.729221 #495] ERROR -- : worker=1 PID:23782 timeout (61s > 60s), killing                 \nE, [2016-12-15T13:56:13.973930 #495] ERROR -- : reaped #<Process::Status: pid 23766 SIGKILL (signal 9)> worker=0\nE, [2016-12-15T13:56:14.581461 #495] ERROR -- : worker=1 PID:23782 timeout (61s > 60s), killing                 \nE, [2016-12-15T13:56:15.982136 #495] ERROR -- : reaped #<Process::Status: pid 23782 SIGKILL (signal 9)> worker=1\nI, [2016-12-15T13:56:17.890595 #24390]  INFO -- : worker=0 ready                                                \nI, [2016-12-15T13:56:17.961203 #24396]  INFO -- : worker=1 ready\netc etc.... ",
    "kurkowskik": "Same issue here (the gitlab is working and after some time hangs with 502 err), but im sure that host machine didn't have unexpected powerdowns. The log looks similar as @alex3305 log. . ",
    "rizwansarwar": "@iamchanghyunpark Same problem with my Synology, cleared the bad pid from /home/git/gitlab/tmp/pids/unicorn.pid and restarted container, all is well. It seems that Synology does not cleanly shutdown the running containers. \nThank you. ",
    "leoluyi": "Checking the status by running:\nsh\n$ docker exec gitlab gitlab-ctl status\nTurns out, the GitLab service was not running at all.\nThe solution was then to just restart the service with:\nsh\n$ docker exec gitlab gitlab-ctl start\n. ",
    "rjuszczyk": "Just make sure, that you had open proper port on your router. In my case it was the problem.. Just make sure, that you had open proper port on your router. In my case it was the problem.. ",
    "leebing": "merge branch from master(updated from the fork base project). ",
    "duncau1234": "hey, in my first version of compose file I edited, I have already set 3\nkeys by pwgen command\nbut it doesn't work\nNiclas Mietz notifications@github.com\u65bc 2016\u5e7412\u670818\u65e5 \u9031\u65e5\uff0c00:54\u5beb\u9053\uff1a\n\nHey,\nyou missed some environment variables to start the gitlab container. What\nyou need to set are the following envs GITLAB_SECRETS_OTP_KEY_BASE,\nGITLAB_SECRETS_DB_KEY_BASE, and GITLAB_SECRETS_SECRET_KEY_BASE. For an\nexplanation have a look at the QuickStart\nhttps://github.com/sameersbn/docker-gitlab#quick-start\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1018#issuecomment-267769995,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ALqataXN6WAdzkyR5Cy9kGleDWqjdiOFks5rJAW5gaJpZM4LMkAi\n.\n. finally, I found the problem, that is some of my configurations shown below going wrong \nwould you please to check if statements or formats of configurations are not correct\nand I am wondering CHINESE statements is acceptable or not\n\nthanks a lot.\n- LDAP_ENABLED=true\n    - LDAP_LABEL='LDAP'\n    - LDAP_HOST=192.168.14.18\n    - LDAP_PORT=389\n    - LDAP_UID='sAMAccountName'\n    - LDAP_METHOD='plain'\n    - LDAP_BIND_DN='CN=test,CN=test_Users,DC=test_ideas,DC=test_iii,DC=test_org,DC=test_tw'\n    - LDAP_PASS='d1e2v3o4p5s%'    \n    - LDAP_ACTIVE_DIRECTORY=true\n    - LDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n    - LDAP_BLOCK_AUTO_CREATED_USERS=false\n    - LDAP_BASE='OU=IN_CHINESE,DC=test_ideas,DC=test_iii,DC=test_org,DC=test_tw'. finally, I find the problem which causes the error.\nfirewall of AD server blocks request of my accessing, and thanks for all you guys who answsered me.. ",
    "joaquin386": "The solution that I found it to mv /var/log/gitlab and create an empty one, but would be good to know what is the issue.. ",
    "athirn": "8.14.5 is for a security issue so would love to see this merged in. We're waiting for this as well. ",
    "oozone": "Exact same problem here \n```\n$ docker pull alpine:latest\nlatest: Pulling from library/alpine\nDigest: sha256:1354db23ff5478120c980eca1611a51c9f2b88b61f24283ee8200bf9a54f2e5c\nStatus: Image is up to date for alpine:latest\n$ docker tag alpine:latest [ME]:5501/group/mailserver:latest\n$ docker push [ME]:5501/group/mailserver\nThe push refers to a repository [[ME]:5501/group/mailserver]\nGet https://[ME]:5501/v1/_ping: read tcp 172.17.0.12:55632->xxxxxxxx:5501: read: connection reset by peer\nERROR: Build failed: exit code 1\n```. ",
    "weaktyper": "Hi @solidnerd, I am using the network_mode: bridge to overcome a bug in nginx dockergen, issue here.\nWhy the links are needed, I am not quite sure yet... I will try removing them to see if it continues to work.\nThis is the error I get when I change the network to an external network such as nginx-proxy and use network: nginx-proxy in each container instead:\nno host in upstream \":80\" in /etc/nginx/conf.d/default.conf:35 -- this matches up with the issue documented in nginx-proxy repo. I can't find a solution to that.\nUpdate: \nThe reason I added the link is that without it the database isn't setup successfully:\nI keep getting this error and then the gitlab runtime startup crashes.\n+ /usr/lib/postgresql/9.6/bin/pg_isready -h host -p 5432 -U user -d gitlabhq_production -t 1\n++ expr 1 - 1\n+ timeout=0\nIf I add a link in gitlab to postgresql, \nlinks:\n      - redis # This should not be necessary but for some reason db setup fails without it.\n      - postgresql # This should not be necessary but for some reason db setup fails without it.\n then this goes away. I agree with you though that with networks, it should not be like this but I can't explain it. The passwords and settings are correct, same as for the postgresql container setup.\nTo be honest, I'm more concerned about why my TCP connection is refused though.\nDo you happen to use letsencrypt-companion & nginx-proxy with gitlab-registry working?\nUPDATE 2:\nAfter removing all volumes, data, and reboot the VPS, it seems I have got the container registry page working now. Other than that, not sure if I did anything else.\nStarted GET \"/docker/docker-compose-gitlab/container_registry\" for ip_address at 2016-12-17 23:02:40 +0000\nProcessing by Projects::ContainerRegistryController#index as HTML\n  Parameters: {\"namespace_id\"=>\"docker\", \"project_id\"=>\"docker-compose-gitlab\"}\nCompleted 200 OK in 188ms (Views: 43.9ms | ActiveRecord: 14.7ms)\nThe only big thing is I still cannot login with docker. \ndocker login $REGISTRY_DOMAIN returns \nError response from daemon: Get https://$REGISTRY_DOMAIN/v2/: error parsing HTTP 404 response body: invalid character 'p' after top-level value: \"404 page not found\\n\"\nnginx log:\n$REGISTRY_DOMAIN my_ip_address - username [17/Dec/2016:23:07:49 +0000] \"GET /jwt/auth?account=username&client_id=docker&offline_token=true&service=container_registry HTTP/1.1\" 404 19 \"-\" \"docker/1.12.4 go/go1.6.4 git-commit/1564f02 kernel/4.8.0-30-generic os/linux arch/amd64 UpstreamClient(Docker-Client/1.12.4 \\x5C(linux\\x5C))\"\nregistry log:\n172.17.0.3 - - [17/Dec/2016:23:05:53 +0000] \"GET /v2/ HTTP/1.1\" 401 87 \"\" \"docker/1.11.2 go/go1.5.4 git-commit/b9f10c9 kernel/4.4.0-47-generic os/linux arch/amd64 UpstreamClient(Docker-Client/1.11.2 \\\\(linux\\\\))\"\n172.17.0.3 - - [17/Dec/2016:23:05:53 +0000] \"GET /jwt/auth?account=username&client_id=docker&offline_token=true&service=container_registry HTTP/1.1\" 404 19 \"\" \"docker/1.11.2 go/go1.5.4 git-commit/b9f10c9 kernel/4.4.0-47-generic os/linux arch/amd64 UpstreamClient(Docker-Client/1.11.2 \\\\(linux\\\\))\"\ntime=\"2016-12-17T23:06:11.104502604Z\" level=warning msg=\"error authorizing context: authorization token required\" go.version=go1.6.2 http.request.host=$REGISTRY_DOMAIN http.request.id=fc55661e-99c3-44f7-bffe-87a5ae2c1e94 http.request.method=GET http.request.remoteaddr=SERVER_IP_ADDRESS http.request.uri=\"/v2/\" http.request.useragent=\"docker/1.11.2 go/go1.5.4 git-commit/b9f10c9 kernel/4.4.0-47-generic os/linux arch/amd64 UpstreamClient(Docker-Client/1.11.2 \\\\(linux\\\\))\" instance.id=566e754d-25a4-49b9-8317-508ec5b4ec26 service=registry version=v2.4.1\nmaybe  something wrong with the nginx configuration?  (similar to #876 and somewhat like this issue) I'll try change some of the settings and see what happens. Similar issues: docker forum 404, gitlab forum, similar issue gitlab forum, similar issue on gitlab forum, gitlab issue 983\nWonder if someone has a working configuration with docker-letsencrypt-companion and nginx-proxy?\n. This is my expanded nginx configuration for $REGISTRY_DOMAIN IN the nginx-proxy server:\n```\nupstream $REGISTRY_DOMAIN {\n            # gitlab-registry\n            server 172.17.0.5:5000;\n}\nserver {\n    server_name $REGISTRY_DOMAIN;\n    listen 80 ;\n    access_log /var/log/nginx/access.log vhost;\n    return 301 https://$host$request_uri;\n}\nserver {\n    server_name $REGISTRY_DOMAIN;\n    listen 443 ssl http2 ;\n    access_log /var/log/nginx/access.log vhost;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_ciphers <>;\n    ssl_prefer_server_ciphers on;\n    ssl_session_timeout 5m;\n    ssl_session_cache shared:SSL:50m;\n    ssl_certificate /etc/nginx/certs/$REGISTRY_DOMAIN.crt;\n    ssl_certificate_key /etc/nginx/certs/$REGISTRY_DOMAIN.key;\n    ssl_dhparam /etc/nginx/certs/$REGISTRY_DOMAIN.dhparam.pem;\n    add_header Strict-Transport-Security \"max-age=31536000\";\n    ## Start of configuration add by letsencrypt container\nlocation /.well-known/acme-challenge/ {\n    allow all;\n    root /usr/share/nginx/html;\n    try_files $uri =404;\n    break;\n}\n## End of configuration add by letsencrypt container\nclient_max_body_size 0;\nchunked_transfer_encoding on;\n    add_header Docker-Distribution-API-Version 'registry/2.0' always;\n\nlocation / {\n    proxy_pass http://$REGISTRY_DOMAIN;\n            proxy_set_header Authorization \"\";\n            proxy_set_header  Host              $http_host;\n            proxy_set_header  X-Real-IP         $remote_addr;\n            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;\n            proxy_set_header  X-Forwarded-Proto $scheme;\n            proxy_read_timeout                  900;\n}\n\n}\n```\nThis is what I get when I send a curl request curl -vu **:** $REGISTRY_DOMAIN/v2\n```\n   Trying $SERVER_IP...\n Connected to $REGISTRY_DOMAIN ($SERVER_IP) port 443 (#0)\n found 173 certificates in /etc/ssl/certs/ca-certificates.crt\n found 697 certificates in /etc/ssl/certs\n ALPN, offering http/1.1\n SSL connection using TLS1.2 / ECDHE_RSA_AES_128_GCM_SHA256\n        server certificate verification OK\n        server certificate status verification SKIPPED\n        common name: $REGISTRY_DOMAIN (matched)\n        server certificate expiration date OK\n        server certificate activation date OK\n        certificate public key: RSA\n        certificate version: #3\n        subject: CN=$REGISTRY_DOMAIN\n        start date: Sat, 17 Dec 2016 12:39:00 GMT\n        expire date: Fri, 17 Mar 2017 12:39:00 GMT\n        issuer: C=US,O=Let's Encrypt,CN=Let's Encrypt Authority X3\n        compression: NULL\n ALPN, server did not agree to a protocol\n Server auth using Basic with user 'username'\n\nGET /v2/ HTTP/1.1\nHost: $REGISTRY_DOMAIN\nAuthorization: Basic ****\nUser-Agent: curl/7.50.1\nAccept: /\n< HTTP/1.1 401 Unauthorized\n< Server: nginx/1.10.2\n< Date: Sun, 18 Dec 2016 13:33:33 GMT\n< Content-Type: application/json; charset=utf-8\n< Content-Length: 87\n< Connection: keep-alive\n< Docker-Distribution-Api-Version: registry/2.0\n< Www-Authenticate: Bearer realm=\"https://$REGISTRY_DOMAIN/jwt/auth\",service=\"container_registry\"\n< X-Content-Type-Options: nosniff\n< \n{\"errors\":[{\"code\":\"UNAUTHORIZED\",\"message\":\"authentication required\",\"detail\":null}]}\n* Connection #0 to host $REGISTRY_DOMAIN left intact\n\n```. I gave up on Gitlab-registry in the end and just using gitlab for now. Will come back and see if this is magically fixed in some future release. . ",
    "mat1010": "Almost one year later:\nI encountered the exact same issue and found the reason for it.\n  - REGISTRY_AUTH_TOKEN_REALM=https://$REGISTRY_DOMAIN/jwt/auth\n\nThis has to point to the GITLAB domain itself - not the domain of the registry ... After changing it and restarting the registry daemon it works fine.\nAnyway I still encounter the issue stated here, since the domain itself is not properly written after a reconfigure ...: https://gitlab.com/gitlab-org/gitlab-ce/issues/26265. ",
    "curunoir": "Hello, I'm facing the same issue using traefik in front of gitlab and registry.\n```\nversion: '2'\nservices:\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:11.7.5\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"10022:22\"\n    volumes:\n    - /srv/docker/gitlab/gitlab:/home/git/data:Z\n    - ./certs:/certs\n    networks:\n      - gitlab\n      - traefik\n    labels:\n      - \"traefik.frontend.rule=Host:gitlab.devtools.kpax-manage.com\"\n      - \"traefik.port=80\"\n      - \"traefik.backend=gitlab\"\n      - \"traefik.frontend.entryPoints=http,https\"\n      - \"traefik.docker.network=traefik\"\n    environment:\n    - DEBUG=false\n- TZ=Europe/Brussels\n- GITLAB_TIMEZONE=Brussels\n\n- GITLAB_HTTPS=false\n- SSL_SELF_SIGNED=false\n\n- GITLAB_HOST=gitlab.mydomain.com\n- GITLAB_PORT=80\n- GITLAB_SSH_PORT=10022\n\n\n# Registry\n- GITLAB_REGISTRY_ENABLED=true\n- GITLAB_REGISTRY_HOST=registry.mydomain.com\n- GITLAB_REGISTRY_PORT=443\n- GITLAB_REGISTRY_PATH=/registry\n- GITLAB_REGISTRY_API_URL=http://registry:5000\n- GITLAB_REGISTRY_KEY_PATH=/certs/registry.key\n- GITLAB_REGISTRY_ISSUER=gitlab-issuer\n\nregistry:\n    image: registry:2.6.2\n    restart: always\n    expose:\n     - \"5000\"\n    ports:\n     - \"5000:5000\"\n    volumes:\n      - ./gitlab/shared/registry:/registry\n      - ./certs:/certs\n    environment:\n      - REGISTRY_LOG_LEVEL=info\n      - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n      - REGISTRY_AUTH_TOKEN_REALM=https://registry.mydomain.com/jwt/auth\n      - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n      - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n      - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/registry.crt\n      - REGISTRY_STORAGE_DELETE_ENABLED=true\n      - GITLAB_REGISTRY_ISSUER=gitlab-issuer\n    networks:\n      - gitlab\n      - traefik\n    labels:\n      - \"traefik.enable=true\"\n      - \"traefik.frontend.rule=Host:registry.mydomain.com\"\n      - \"traefik.port=5000\"\n      - \"traefik.backend=registry\"\n      - \"traefik.frontend.entryPoints=http,https\"\n      - \"traefik.docker.network=traefik\"\nnetworks:\n  gitlab:\n    driver: bridge\n  traefik:\n    external:\n      name: traefik\n```. Hello, did you find a workaround ?\nI have a similar use case trying to proxy gitlab's registry though traefik over https but I must admit I am kind of consused on the architecture.\nThe registry container itself exposes its service through port 5000 if I'm correct. Gitlab's registry management is setting a nginx vhost proxy linked to the registry container on port 5000 right ? I guess that the GITLAB_REGISTRY_API_URL=http://registry:5000 env for the gitlab container is aimed to.\nWhat I'm asking myself is if we handle registry entrypoint with Traefik, doe's the nginx vhost is still required by gitlab ? Maybe for it's authentication against registry with the auth token ?. ",
    "guoyoujin": "@munnerz That's a good idea, that is what I need,Thank you. Yes,Hope to support. ",
    "timfeirg": "Thanks for the quick response, gitlab-workhorse and gitlab-shell version updated.\nI don't think I can decide if anything under assets/runtime/config needs changing, but I've read changelogs for both projects, from what I learned I guess the configs are probably good.. I've extract gitlab-shell / gitlab-workhorse changes into separate commits @solidnerd \nUpgraded to gitlab CE v8.15.1 @jostyee . I've removed the gitlab CE v8.15.1 patch @solidnerd . I've applied your patches as one separate commits, should I amend them into the commit titled upgrade to CE v8.15.0? @solidnerd \nI'm not familiar with this process, I feel like you could just edit my PR or pull my branch and push all the necessary commits yourself, it's actually less work, faster.. done, including the last patch @mrslain suggested.\nthis PR has been very educating, thanks @solidnerd . close this issue then? @yknext . this answer should be included in the docs. Don't know if it's related, but here's this ongoing work that aims to separate nginx from this image:\nhttps://github.com/sameersbn/docker-gitlab/pull/794\nhttps://github.com/sameersbn/docker-gitlab/pull/791. I'm unable to look into fog-aliyun and decide which of the configurations should be added into docker-gitlab. Those who actually use this will do a better job. @xen0n . travis build has failed due to long time no output, so I'll close and re-open to trigger a rebuild.. travis failed again, at https://github.com/sameersbn/docker-gitlab/blob/master/assets/build/install.sh#L137\nSo I've removed the output redirection and let it talk, and see if travis is good with that.. Not extremely sure about testing here.\nThe purpose of docker-gitlab is to package gitlab and all its components for ease of deployment, not testing gitlab or fixing its bug.\nSo once the setup and the migration is working, docker-gitlab itself should not require any more testing, at least for minor releases which doesn't change the way gitlab is deployed.\nAnd so I didn't test this PR. @reynold-lariza\nCc @solidnerd. I haven't, as explained in https://github.com/sameersbn/docker-gitlab/pull/1260#issuecomment-310956633. should I close https://github.com/sameersbn/docker-gitlab/pull/1260 ?. PR updated, thanks.. using bin/compile poses a problem, they use ruby script to run go install gitlab.com/gitlab-org/gitlab-shell/go/cmd/..., and when the script does this, it didn't inherit $PATH and $GOROOT from docker-gitlab's install.sh, and the go executables cannot be found.\nSo I had to make go available in the default $PATH.. this blows my mind @phpb-com . I'm not sure I understand. Do you mean this?\n```\ndiff --git a/assets/runtime/functions b/assets/runtime/functions\nindex 7d4a647..d372861 100644\n--- a/assets/runtime/functions\n+++ b/assets/runtime/functions\n@@ -1525,7 +1525,7 @@ migrate_database() {\n     # assets need to be recompiled when GITLAB_RELATIVE_URL_ROOT is used\n     if [[ -n ${GITLAB_RELATIVE_URL_ROOT} ]]; then\n       echo \"Recompiling assets (relative_url in use), this could take a while...\"\n-      exec_as_git bundle exec rake assets:clean assets:precompile webpack:compile  >/dev/null 2>&1\n+      exec_as_git bundle exec rake gitlab:assets:compile USE_DB=false SKIP_STORAGE_VALIDATION=true\n     fi\n echo \"Clearing cache...\"\n\n``\nMeaning thatgitlab:assets:compileequalsassets:clean assets:precompile webpack:compile`?\n@solidnerd . ",
    "mrslain": "@timfeirg @solidnerd I think you have forgotten.\ndiff --git a/assets/runtime/functions b/assets/runtime/functions\nindex a05d645..aee1d13 100644\n--- a/assets/runtime/functions\n+++ b/assets/runtime/functions\n@@ -637,6 +637,7 @@ gitlab_configure_oauth() {\n   gitlab_configure_oauth_google\n   gitlab_configure_oauth_facebook\n   gitlab_configure_oauth_twitter\n+  gitlab_configure_oauth_authentiq\n   gitlab_configure_oauth_github\n   gitlab_configure_oauth_gitlab\n   gitlab_configure_oauth_bitbucket. ",
    "phpb-com": "Thank you, @solidnerd for a fast fix! \ud83e\udd47 . Are there any updates for this PR?. Since so far this project is taking a break, I have span up my own fork https://github.com/phpb-com/docker-gitlab \nHoping that it is only temporary .... There was one last change that I missed, needed to update the cron section of gitlab.yml. All of the investigations I've done so far, indicate that it can be ignored. I am still looking into this in my fork and will submit PR if I find otherwise. . Try migrating to 9.0.0, they have some fixes related to mysql in the change log.. @Kaleesastha did you check https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/install/database_mysql.md and made sure that you MySQL is configured correctly.. Try attaching to the container after it starts (depending on the method you use, docker or docker compose see https://github.com/sameersbn/docker-gitlab#shell-access for docker or use docker-compose exec gitlab bash for docker-compose) and execute nginx -t . I suspect that it is due ipv6 declaration in the pages that is not altered if you do not have ipv6 enabled) like it is done for other config https://github.com/sameersbn/docker-gitlab/blob/master/assets/runtime/functions#L968. The following patch should probably help, but I do not have means to test it at this time:\n```patch\ndiff --git a/assets/runtime/functions b/assets/runtime/functions\nindex af7b710..e0db170 100644\n--- a/assets/runtime/functions\n+++ b/assets/runtime/functions\n@@ -988,11 +988,18 @@ nginx_configure_gitlab_hsts() {\nnginx_configure_gitlab_ipv6() {\n   if [[ ! -f /proc/net/if_inet6 ]]; then\n-    # disable ipv6 support\n+    # disable ipv6 support in nginx for gitlab\n     sed -i \\\n       -e \"/listen [::]:80/d\" \\\n       -e \"/listen [::]:443/d\" \\\n       ${GITLAB_NGINX_CONFIG}\n+    # disable ipv6 support in nginx for pages\n+    if [[ ${GITLAB_PAGES_ENABLED} == true ]]; then\n+      sed -i \\\n+        -e \"/listen [::]:80/d\" \\\n+        -e \"/listen [::]:443/d\" \\\n+        ${GITLAB_PAGES_NGINX_CONFIG}\n+    fi\n   fi\n }\n```. Tried it and issues board is broke, influxdb stats for many metrics is missing. Would not advice to go with 2.4 for now. Though, on a plus side, it is noticeably faster .... @splattael I think, looking at the logs, most of the metrics had integer vs. float mismatch. Since I played with gems as well, that could be the problem. \nAs for the board of issues, now I am not sure if it was a problem with me being partially logged out or if that was the real problem. You can help me troubleshoot if you want, try pulling (deleted) and see if you have different results. . I am currently experimenting with that option in my fork of this image and see that it will require to probably stop using the ubuntu image that this docker image is using as base due to dependencies in other containers. I think it will be hard to do that without breaking bunch or spinning up a new base image.. Will this help? https://docs.gitlab.com/ce/administration/environment_variables.html. I see. It is definitely need fixing as per https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/install/database_mysql.md. Try setting GIT_DEPTH to 3 or so. See https://docs.gitlab.com/ce/ci/yaml/#shallow-cloning for the info. . You will also need to compile gitlab-shell golang assets -  see https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/update/9.1-to-9.2.md\nThe bundled fails due to bundler 1.15.0, see https://gitlab.com/gitlab-org/gitlab-ce/issues/32653\nNice PR, thanks!. @andrewstuart I think @solidnerd means assets/runtime/config/gitlabhq/gitlab.yml. And there is one change that is missing from this PR.\ndiff\n    stuck_ci_jobs_worker:\n      cron: \"0 * * * *\"\n    # Execute scheduled triggers\n--- trigger_schedule_worker:\n+++ pipeline_schedule_worker:\n      cron: \"* */12 * * *\"\n    # Remove expired build artifacts\n    expire_build_artifacts_worker:. @andrewstuart Awesome! \ud83d\udc4d \nBtw, not too important yet, but there is an additional step for gitlab-shell, to compile golfing binaries. So far only hello-world is included, but that might change in the near future.\n```\n6. Update gitlab-shell\ncd /home/git/gitlab-shell\nsudo -u git -H git fetch --all --tags\nsudo -u git -H git checkout v$(</home/git/gitlab/GITLAB_SHELL_VERSION)\nsudo -u git -H bin/compile\n```. You are not specifying correct port in GITLAB_SSH_PORT, it should be 10022. Out of the same need, I created a caddy server docker image for this purpose: https://gotfix.com/docker/caddy\nWorks for me well, so far .... @niksubramanian it is on the page that I pasted: https://gotfix.com/docker/caddy\nFull version: https://gotfix.com/docker/caddy/blob/master/gitlab/docker-compose.yml\n```yams\nversion: '2'\nservices:\n  caddy:\n    restart: always\n    image: gotfix/caddy:latest-gitlab\n    depends_on:\n    - gitlab # Ensures that caddy will relink if gitlab container is restarted\n    command:\n    - -quic\n    ports:\n    - 80:80\n    - 443:443\n    environment:\n    - TLS_AGREE=true # Indicates that you have read and agree to the Let's Encrypt Subscriber Agreement.\n    - CADDY_EMAIL=admin@example.com # Make sure this email is yours and reachable\n    - GITLAB_HOST=gitlab.example.com # Hostname of the GitLab installation that this server is reachable at\n    - GITLAB_IP=gitlab # IP/Hostname of the running Gitlab service. This assume that Gitlab is configured in the same services: section under name gitlab.\n    volumes:\n    - ./.caddy:/root/.caddy # Your certificates will be stored here\n    - ./gitlab/caddy/logs:/var/log/caddy:Z # Caddy logs will be stored here\n```. The registry entry is available in this repo in the docs folder, IIRC. . Unless you are asking about the caddy config for registry, then the settings are explained in the readme from the link that I posted. . gitlab-pages 0.4.0 is also out. You are right, my bad. Thanks. . Try something like this:\ndiff\n+if [[ -x ./bin/compile ]]; then\n+  echo \"Compiling gitlab-shell golang executables...\"\n+  exec_as_git PATH=/tmp/go/bin:$PATH GOROOT=/tmp/go ./bin/compile\n+fi. ",
    "CasparChou": "thanks.... I should look for GitLab issue first\nafter I follow your steps,  it seems like settings didn't update\nIs there have another way to edit personal projects limit ?.  It looks like update GitLab is the last way I can solve this problem...\nVery helpful ! Thank you . Okay , this is weird\nI already update GitLab to latest version , but settings still can't  change \nHere is my version list\n\nIs there any possible environmental variables which I set when docker run cause this issue ?. Something new, I can change other user's limit but not my  !!\nI feel sad now.... Okay.... The worst but should work way is delete the user and recreate it again\nThank you !. ",
    "BartJoris": "This issue can be closed, there was a permission issue with one of the certificates.... ",
    "ClarkHartness": "I was able to Workaround this issue by running the raketask through docker exec\ndocker exec -it gitlab sudo -HEu git bundle exec rake gitlab:backup:restore RAILS_ENV=production\nI had to remove all but one backup as I did not try to feed the backup directly to the rake command.\nI will play around with it a bit before I put this instance into production.\n. ",
    "adamniedzielski": "The relevant issue in GitLab issue tracker is https://gitlab.com/gitlab-org/gitlab-ce/issues/26090. It will be fixed by https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/8477 and released in a patch release to 8.15.\nAs a heads up to the maintainers of this project: we changed the timestamp format from 1483533029 to 1483533029_2017_01_04 in 8.15. If your code relies on the previous format of the timestamp (which may be the case because of date: invalid date in the logs), please update it. I'm sorry for the inconvenience!. @dashersw\n\nUnofficial sounds \"fake\".\n\nFeel free to suggest a better wording!\n\nI reviewed the \"original\" Docker images too; but still, this method is better.\n\nYeah, everybody is free to decide on their own \ud83d\ude04. Being an \"official image\" means that people contributing to GitLab are less likely to break it (because they consider it when making a change). That's why I think that it makes sense to let people know about it.. @dashersw Thank you very much for suggesting a better wording! I've updated the PR.\nI think that the most obvious way to learn about installation methods for GitLab is https://about.gitlab.com/installation/. And this page mentions \"Docker installation instructions for a container based on the Omnibus packages\". We cannot really put it in bold there, because this would suggest that it's somehow more important than other methods which is not the case. Especially that the recommended way is still Omnibus package installation.\nAnyway, I'm leaving it up to the maintainers of this repo whether to accept this PR or close it. Obviously it's their decision what they want to have in the README \ud83d\ude3a.. @sameersbn Looks great to me. Thank you very much! \ud83d\udc9a . ",
    "silenaker": "I attempted some way to set  external_url but there was no effect,  you did not need to set external_url  and only to change GITLAB_HOST and GITLAB_PORT is enough, the two env variables determine the external_url. ",
    "etjr": "docker run --name gitlab -d \\\n    --link gitlab-postgresql:postgresql --link gitlab-redis:redisio \\\n    --publish 10022:22 --publish 10080:80 \\\n    --env 'GITLAB_PORT=10080' --env 'GITLAB_SSH_PORT=10022' \\\n    --env 'GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alpha-numeric-string' \\\n    --env 'GITLAB_SECRETS_SECRET_KEY_BASE=long-and-random-alpha-numeric-string' \\\n    --env 'GITLAB_SECRETS_OTP_KEY_BASE=long-and-random-alpha-numeric-string' \\\n    --env 'GITLAB_HOST=yoururl' \\\n    --volume /srv/docker/gitlab/gitlab:/home/git/data \\\n    sameersbn/gitlab:8.15.2. ",
    "Finkman": "Same behavior when deleting a branch on the gitlab frontend.\nBranching and deleting a branch on console works. . Yes, on 8.15.2 it is labled New Branch. Nevertheless, creating and deleting branches causing timeouts and 502 errors (Whoops, GitLab is taking too much time to respond.) on my installation... and I have no idea what to do next.\nMy setup is:\nGitLab 8.15.2\nGitLab Shell 4.1.1\nGitLab Workhorse\nGitLab API v3\nGit 2.11.0\nRuby 2.3.3p222\nRails 4.2.7.1\nMysql2 5.5.53-MariaDB\n. ... still discovering this issue on 8.16.5.\nMay anybody give me a hint what gitlab tries to do on .../hooks/pre-receive when deleting or creating a branch? I would like to figure out what causes the problem, when using the web-ui. \nWhen i'd retried to delete a branch, with my updated gitlab (now 8.16.5) the web-ui was again not responding for a couple minutes, and returning with the same branches I had before. So deletion failed.\nIn the protokoll, gitlab tells me: CRIT reaped unknown pid 554)\nPlease! I really love the create/delete branch feature on the web-ui. Help would be highly appreciated and I intend to invite you to a beer on next occasion. :-). I am actually on 9.0.0 and tried to add a README.md. Ran into the same error... 502 error page.. I would like, too. Especially because gitlab prefers postgres over mariadb.\nBut, actually, I am stuck at V10.2.x because the update process fails and I can not figure out the reason why. I'd like to know what is causing the \"lost connection\".. It is running as a Synology package.\nIt is Version 10. I will give it a try at evening.. Hi there,\nI tried to use a mysql container, imported my database backup and linked it to the gitlab.\nMigration did not throw errors on the log, but it ended up with error page 500. I tried it with gitlab 10.3.3 and 10.4.3. with same results.\nConfiguring nginx::gitlab...\n2018-03-06 22:50:53,232 CRIT Supervisor running as root (no user in config file)\n2018-03-06 22:50:53,232 WARN Included extra file \"/etc/supervisor/conf.d/gitlab-workhorse.conf\" during parsing\n2018-03-06 22:50:53,232 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\n2018-03-06 22:50:53,232 WARN Included extra file \"/etc/supervisor/conf.d/mail_room.conf\" during parsing\n2018-03-06 22:50:53,232 WARN Included extra file \"/etc/supervisor/conf.d/gitaly.conf\" during parsing\n2018-03-06 22:50:53,233 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\n2018-03-06 22:50:53,233 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\n2018-03-06 22:50:53,233 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\n2018-03-06 22:50:53,233 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\n2018-03-06 22:50:53,280 INFO RPC interface 'supervisor' initialized\n2018-03-06 22:50:53,280 CRIT Server 'unix_http_server' running without any HTTP authentication checking\n2018-03-06 22:50:53,280 INFO supervisord started with pid 1\n2018-03-06 22:50:54,283 INFO spawned: 'gitaly' with pid 561\n2018-03-06 22:50:54,286 INFO spawned: 'sidekiq' with pid 562\n2018-03-06 22:50:54,289 INFO spawned: 'unicorn' with pid 563\n2018-03-06 22:50:54,292 INFO spawned: 'gitlab-workhorse' with pid 564\n2018-03-06 22:50:54,296 INFO spawned: 'cron' with pid 565\n2018-03-06 22:50:54,299 INFO spawned: 'nginx' with pid 566\n2018-03-06 22:50:54,302 INFO spawned: 'sshd' with pid 570\n2018-03-06 22:50:55,339 INFO success: gitaly entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-03-06 22:50:55,339 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-03-06 22:50:55,339 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-03-06 22:50:55,339 INFO success: gitlab-workhorse entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-03-06 22:50:55,340 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-03-06 22:50:55,340 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-03-06 22:50:55,340 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-03-06 22:51:43,539 INFO exited: sidekiq (exit status 1; not expected)\n2018-03-06 22:51:44,542 INFO spawned: 'sidekiq' with pid 697\n2018-03-06 22:51:45,545 INFO success: sidekiq entered RUNNING state, process has stayed up for >\nFor me, it seems that migration worked fine, but sidekiq ran into troubles. Is there a way to figure out what it is?\n... maybe it is a different issue, since the \"connection\" problem is solved by running a mysql container.. I let it run over night and checked it in the morning. :-/. Now, Im on 10.5.1. But I was struggling to get there...\nFirst. Dumped the db. After that started 10.3.3 with a new DB and let Gitlab setup everything.\nAfter that, I manually merged the dumped db into the new and freshly created tables. That cost me hours...\nBut, I could successfully merge the old DB into the new one and got 10.3.3 running.\nThe next step was upgrading in a chain: -> 10.3.3 -> 10.3.4 -> 10.4.2-1 -> 10.5.1\nHurray.\nBut to be honest... im as dumb as before.. ",
    "sxcsfan": "Same problom here, and I discovered that I'm not able to add README.md from the web ui, anything involves repo commit would turn into a nginx 502 error page.. @JonathanBigspin thanks for the first possible solution, I will give it a try as soon as possible. ",
    "JonathanBigspin": "Same problem for me, actually similar to when I ran into this before in issue #1161 but now I can't seem to fix it.. I fixed it this time by first upgrading to MariaDB 10 and GitLab 9.3.4 and then setting permissions to GitLab folder via File Station to allow read/write by everyone (just like in #1161). Doesn't seem like a good solution though.. ",
    "kingcody": "@phenomax no problem, glad I could help. Indeed, the FROM instruction has been added back without the carriage return. Thank you for contributing this PR.. @phenomax, the line was not redundant. There 'was' an invisible character (carriage return, I believe) leading the FROM instruction. The line should be added back, but with out the ^R. You typically won't see this character on GitHub, but if you do a quick git diff you can tell it's there:\n\n. ",
    "frol": "It seems that this PR should be rebased.. Disclaimer: I am not a maintainer of this project, I just use this image and subscribed to receive the updates.\nRebase is not required, but it would be certainly nicer if PR includes only new commits (currently it shows the already merged ones), and no garbage is added/removed for no reason (I refer to a.txt file, which will land into the git repo if you leave it this way).. Sorry for the disturbance, that was completely my fault, I have configured an initialization timeout of 2 minutes on Rancher, and it just kept killing the container due to the timeout.. It should be wrapped with **, so it is parsed as bold, see how it looks now: https://github.com/sameersbn/docker-gitlab/blob/master/Changelog.md. ",
    "janhommes": "I have the Mattermost Command 500 error too. \nThe notifications are working for me. Did you enabled Enable Incoming Webhooks in Mattermost System Console?. My configuration looks nearly the same. I used #gitlab as channel name. Maybe the # is missing?. ",
    "bsn": "how can I help with this? have never done this before :-). sounds good,  waiting for this to migrate from standalone gitlab to rancher based. will try to test today. ",
    "Holt59": "@sameersbn Cloning using SSH from a user repository was working fine, so I assume the problem was not here.\nI imported a backup from a previous non-docker gitlab installation (from source), the import went \"fine\" but I had a lot of issues with your image so I had to switch to the official gitlab images...\nThe official gitlab image uses git 2.10.4 while your image use git 2.11.x, so maybe the problem is here... I really need to have a working gitlab installation right now so I cannot do more debugging with your image right now.... @sameersbn Cloning using SSH from a user repository was working fine, so I assume the problem was not here.\nI imported a backup from a previous non-docker gitlab installation (from source), the import went \"fine\" but I had a lot of issues with your image so I had to switch to the official gitlab images...\nThe official gitlab image uses git 2.10.4 while your image use git 2.11.x, so maybe the problem is here... I really need to have a working gitlab installation right now so I cannot do more debugging with your image right now.... ",
    "jaspreetsingh2701": "lol. lol. ",
    "beevelop": "@sameersbn @solidnerd I guess this one is obsolete with the latest changes (the upgrade to 8.16.0)?. @sameersbn @solidnerd I guess this one is obsolete with the latest changes (the upgrade to 8.16.0)?. @solidnerd Builds for 10.7.3 and latest failed due to:\n\nrequesting key E1DF1F24 from hkp server keyserver.ubuntu.com\nExecuting: /tmp/tmp.rsmQlDc6gW/gpg.1.sh --keyserver hkp://keyserver.ubuntu.com:80 --recv E1DD270288B4E6030699E45FA1715D88E1DF1F24\ngpg: keyserver timed out\ngpg: keyserver receive failed: keyserver error\nRemoving intermediate container 3d194997ea0f\n\nRetriggering the affected builds will most probably fix the issue.. ",
    "kason223": "@sameersbn I had tried but still do not know how to reproduce it.\nBtw, I work around it by creating a backup with sameersbn/postgresql:9.5-4 and restore the backup with sameersbn/postgresql:9.6-2.\n. @sameersbn I had tried but still do not know how to reproduce it.\nBtw, I work around it by creating a backup with sameersbn/postgresql:9.5-4 and restore the backup with sameersbn/postgresql:9.6-2.\n. ",
    "eljefedelrodeodeljefe": "Can confirm. Thanks. Can confirm. Thanks. ",
    "bluecamel": "@paolomainardi thanks!  If you give it a shorter password, it won't whine, but won't create the root user.. @paolomainardi thanks!  If you give it a shorter password, it won't whine, but won't create the root user.. ",
    "radut": "check my comment here : https://github.com/sameersbn/docker-gitlab/issues/657. ",
    "janwillies": "The filesystem was 100% full, because some manually created backups where not removed again. \nIs this something an upgrade could check?. ",
    "SylvainGirod": "Well, the problem was about gitlab's backups.\nI had some backup for a month, and deleted those in order to free some space.. @Br41n I changed the backups interval from day to week (which is OK for my project), and created a CRON task to delete the old backups. It's a little bit gross, but it works so I will wait the migration in order to clean it =)\nThanks for your fix, I will keep it in mind !. ",
    "Br41n": "@SylvainGirod You can configure GITLAB_BACKUP_EXPIRY in order to limited the days to remove backups.\n. ",
    "damiendurant": "Hi,\nOfficial docs talks about Gitlab Omnibus package. This docker is build from source.\nSo the prometheus exporter should be add and build in the docker image (in the install.sh script).\nRepository for gitlab-monitor is here : \nhttps://gitlab.com/gitlab-org/gitlab-monitor/\nI'm also interrested by this feature, I will work on this if I get some time.\n. Hi,\nI have updated the docker image here : \nhttps://github.com/damiendurant/docker-gitlab\nIt install and configure the gitlab-monitor exporter. I will update my prometheus configuration and check it's ok  next week before the do a pull request.\n. I have validated with prometheus,using a shared grafana dashboard (https://grafana.net/dashboards/1575 ). It's working correctly.\nI have done a pull request https://github.com/sameersbn/docker-gitlab/pull/1102. Done !. Above version 10.0.0, gitlabmonitor is included.\nJust have to : \n Add environement variable for setting prometheus_multiproc_dir\n Activate Prometheus metrics in Gitlab setting\nI close the merge request.. The PR was about including https://gitlab.com/gitlab-org/gitlab-monitor.\nThis seems really similar to promotheus metric in gitlab configuration.\nThere is also a influxdb export that provide some metrics.\nLe 11 oct. 2017 6:18 PM, \"Yuankun Zhang\" notifications@github.com a\n\u00e9crit :\n@damiendurant https://github.com/damiendurant\nI think your last reply is about gitlab internal metrics. And this PR is\nabout the gitlab-monitor library. These two are totally different things.\nCould you please confirm this?\nWe're gonna need the gitlab-monitor library as we have been using it for a\nwhile and it gives us lots of useful metrics.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/pull/1102#issuecomment-335864781,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AWkNVEJyCfppalY66D272IYXBuYkKcFIks5srOpQgaJpZM4MM3IQ\n.\n. Ok, I reopen it so. . I've try to update from sameer master.. ",
    "nixel2007": "Good news, thanks! . any chance to merge this soon?. @ragaar all gitlab data (except the postgres part) stored at /home/git/data. So, yes, if you want to recreate/upgrade your container, you need to save this directory  . @solidnerd could you rebuild 8.17.0 tag on docker-hub please?. Looks like you use docker for Windows. You need to mount volumes to your host. Also you can't properly mount postgres volumes to Windows host, so you'll need to up bare postgres. . There are so many useful unmerged PRs... . Due to current version policy 9.5 should be 9.5.0 https://gitlab.com/gitlab-org/gitlab-ce/tags. should new envs be added to docker-compose file? . @mikehaertl \nin our tests Gitlab 10.1+ consumes more memory (~4GB), than previous versions (~2GB). So we had to increase the RAM size on server. . gitlab/gitlab-ce is an official image from GitLab itself.\nThis image lives here - https://hub.docker.com/r/sameersbn/gitlab/\n. Why do you set up host name for postgres? . GitLab doesn't recommend to upgrade through several major versions. You need to upgrade to latest 8.x.x, then upgrade to latest 9.x.x, and only then to 10.5.1\nAnd as always...\n!!!!!!CREATE BACKUPS!!!!!!!. Also be sure to upgrade your envs to solve this https://github.com/sameersbn/docker-gitlab/issues/1526. I think, you need to connect to your DB via pgadmin and change user's password manually. Theese variables only for connection and first time user creation, not for updating existing user. . Try to restore from backup and upgrade through all second point versions. . How do you run gitlab container?\n. you need to supply these variables also:\n--env 'DB_ADAPTER=postgresql' --env 'DB_HOST=192.168.1.100' \\\n--env 'DB_NAME=gitlabhq_production' \\\n--env 'DB_USER=gitlab' --env 'DB_PASS=password' \\. @reynold-lariza looks like it will be fixed at upstream in 10.7.1. @ChunAllen does docker user have access to your home dir?. >GITLAB_BACKUP_DIR=/Users/techx/gitlab/gitlab/backups\n\nah, i see.\nYou set the directory to your host system, but backups tries to find this dir in the container.\nYou should place backups to somewhere in /home/git/data or create and connect another volume.. MySQL support was dropped at GitLab 10.0. Migrate to PostgreSQL if you want use newer versions of GitLab.. @solidnerd please check this and #1781. Yarn Issue was solved . I think maintainers should impmement new features before breaking old behavior... . ",
    "jmarcos-cano": "@GJRTimmer can you specify where is the <PATH OF CONFIG.yml> located, i have a docker-compose where the registry service is in another container than the gitlab one, so maybe the config.yml is in gitlab container instead of the registry container.. ",
    "brunosavyofs": "I've been struggling with these confs for days because of this wrong port configuration in docker-compose.yml.. ",
    "vitosans": "Here are the parts of my compose that that are relevant:\nGitlab:\nyaml\nports:\n     - \"80:80\"\n     - \"10080:80\"\n     - \"5500:5500\"\n     - \"10022:22\"\n     - \"443:443\"\n- GITLAB_REGISTRY_ENABLED=true\n- GITLAB_REGISTRY_HOST=gitlab.example.com\n- GITLAB_REGISTRY_PORT=5500\n- GITLAB_REGISTRY_API_URL=http://registry:5000\n- GITLAB_REGISTRY_KEY_PATH=/home/git/data/certs/gitlab.key\n- SSL_REGISTRY_KEY_PATH=/home/git/data/certs/gitlab.key\n- SSL_REGISTRY_CERT_PATH=/home/git/data/certs/gitlab.crt\nRegistry:\nyaml\nregistry:\n  restart: always\n  image: registry:2.4.1\n  volumes:\n    - /mnt/docker-volume/gitlab/shared/registry:/registry\n    - /mnt/docker-volume/gitlab/gitlab/certs:/certs\n  environment:\n    - REGISTRY_LOG_LEVEL=info\n    - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n    - REGISTRY_AUTH_TOKEN_REALM=http://gitlab.example.com:10080/jwt/auth\n    - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n    - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n    - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/ca.crt\n    - REGISTRY_STORAGE_DELETE_ENABLED=true. Registry Log: \n```\ntime=\"2017-02-11T16:11:46.631138431Z\" level=warning msg=\"error authorizing context: authorization token required\" go.version=go1.7.3 http.request.host=\"gitlab.example.com:5500\" http.request.id=f710af50-09a0-4202-bd6d-9c397ba965c8 http.request.method=GET http.request.remoteaddr=xxx.xxx.xxx.xxx http.request.uri=\"/v2/\" http.request.useragent=\"docker/1.13.0 go/go1.7.3 git-commit/49bf474 kernel/4.9.5-moby os/linux arch/amd64 UpstreamClient(Docker-Client/1.13.0 \\(darwin\\))\" instance.id=e5e73e10-b767-4935-aac7-84a98aaeff18 service=registry version=v2.6.0 \n172.17.0.5 - - [11/Feb/2017:16:11:46 +0000] \"GET /v2/ HTTP/1.0\" 401 87 \"\" \"docker/1.13.0 go/go1.7.3 git-commit/49bf474 kernel/4.9.5-moby os/linux arch/amd64 UpstreamClient(Docker-Client/1.13.0 \\(darwin\\))\"\n```. After much debugging I think the root cause of the problem is the 80 -> 443 redirect in the nginx configuration. \nfor sites-enabled: gitlab\n```\nRedirects all HTTP traffic to the HTTPS host\nserver {\n  ## Either remove \"default_server\" from the listen line below,\n  ## or delete the /etc/nginx/sites-enabled/default file. This will cause gitlab\n  ## to be served if you visit any address that your server responds to, eg.\n  ## the ip address of the server (http://x.x.x.x/)\n  listen 0.0.0.0:80;\n  listen [::]:80 ipv6only=on default_server;\n  server_name _; ## Replace this with something like gitlab.example.com\n  server_tokens off; ## Don't show the nginx version number, a security best practice\n  return 301 https://$host:443$request_uri;\n  access_log  /var/log/gitlab/nginx/gitlab_access.log;\n  error_log   /var/log/gitlab/nginx/gitlab_error.log;\n}\n```\nAnd for sites-enabled: gitlab-registry\n```\nRedirects all HTTP traffic to the HTTPS host\nserver {\n  listen *:80;\n  server_name  gitlab.example.com;\n  server_tokens off; ## Don't show the nginx version number, a security best practice\n  return 301 https://$http_host:$request_uri;\n  access_log  /var/log/gitlab/nginx/gitlab_registry_access.log;\n  error_log   /var/log/gitlab/nginx/gitlab_registry_error.log;\n}\n```\nWhen I hit this with cURL: \ncurl -v \"https://gitlab.example.com:10080/jwt/auth?account=joe&client_id=docker&offline_token=true&service=container_registry\"\n*   Trying x.x.x.x...\n* TCP_NODELAY set\n* Connected to gitlab.example.com (x.x.x.x) port 10080 (#0)\n* ALPN, offering http/1.1\n* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH\n* successfully set certificate verify locations:\n*   CAfile: /opt/local/share/curl/curl-ca-bundle.crt\n  CApath: none\n* TLSv1.2 (OUT), TLS header, Certificate Status (22):\n* TLSv1.2 (OUT), TLS handshake, Client hello (1):\n* **error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol**\n* Curl_http_done: called premature == 1\n* Closing connection 0\n**curl: (35) error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol**\nI think we need something like the following in both  sites-enabled/gitlab and sites-enabled/gitlab-registry\nserver {\n    listen *:80;\n    server_name  gitlab.example.com;\n    server_tokens off; ## Don't show the nginx version number, a security best practice\n        ## Pass json web tokens unchanged\n        location /jwt {\n            [ ... ]\n        }\n    # Redirects all HTTP traffic to the HTTPS host\n    location / {\n        return 301 https://$http_host:$request_uri;\n        access_log  /var/log/gitlab/nginx/gitlab_registry_access.log;\n        error_log   /var/log/gitlab/nginx/gitlab_registry_error.log;\n    }\n}\nCan someone with much more knowledge of the workings of nginx and gitlab lets me know if my assumption is correct here? \n. Solved my own issue. \n\n\nRegistry needs its own subdomain for vhosting. I know the example tells you this but I thought you could get away with out needing it.\n\n\nRemove port 10080, and used https \n\n\nREGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE is the crt not the ca.crt - which is what it sounds like. \n\n\nLooks like everything is working - closing ticket. \n   . ",
    "guilhermesteinmuller": "is it merely a network issue?\nsudo docker pull sameersbn/gitlab:8.16.5\nError response from daemon: manifest for sameersbn/gitlab:8.16.5 not found. Hello @mikehaertl !\nYes indeed, the issue occurred with my again when I was updating from 10.5.1 to 10.5.5.\nWhat I did was: when I did the backup procedure, I deployed the gitlab container with a version <10.3.x. In my case, I used 10.1.1. The backup worked. After that, I did the backup again, but using the latest version of gitlab for me, in this case, 10.5.1, that backup worked again.  That is, I needed to run the backup first with a version <10.3.x and then the backup worked fine for all versions >10.3.x.\nI will try to reproduce it again to have some more details and post the news is this issue. I am going to increase the max connections in postgres to see if will fix like in the MySQL case.\n. I tried here again to reproduce the failing step with each of versions but is not clear at all the real issue. \nFor example, once again I executed the gitlab container with version 10.5.1 and 10.5.6 and these versions didn't complete the backup process. Meanwhile, I executed the container with version 10.4.0 and the backup worked and then I tried again to run the rake task in versions 10.5.x and all worked fine. \nThat's the \"workaround\" that I did in my last upgrade from 10.5.1 to 10.5.5. : running backups with versions <10.4.0 and then upgrading gitlab to the latest image. \n. ",
    "fgouteroux": "To test this case, I have a running minio container and I added in the docker-compose.yml, AWS vars:\n    - AWS_BACKUPS=true\n    - AWS_BACKUP_ENDPOINT='http://my-minio:9000'\n    - AWS_BACKUP_ACCESS_KEY_ID=access-key\n    - AWS_BACKUP_SECRET_ACCESS_KEY=secret-key\n    - AWS_BACKUP_BUCKET=onebucket\n. I 've an docker-compose.yml to test it, how can I give it to you?. ```yml\nversion: '2'\nservices:\n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    volumes:\n    - /tmp/docker/gitlab/redis:/var/lib/redis:Z\npostgresql:\n    restart: always\n    image: sameersbn/postgresql:9.6-2\n    volumes:\n    - /tmp/docker/gitlab/postgresql:/var/lib/postgresql:Z\n    environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\ngitlab:\n    restart: always\n    #image: sameersbn/gitlab:8.16.4\n    build: .\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"10080:80\"\n    - \"10022:22\"\n    volumes:\n    - /tmp/docker/gitlab/gitlab:/home/git/data:Z\n    environment:\n    - DEBUG=false\n    - DB_ADAPTER=postgresql\n    - DB_HOST=postgresql\n    - DB_PORT=5432\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - REDIS_HOST=redis\n    - REDIS_PORT=6379\n    - TZ=Asia/Kolkata\n    - GITLAB_TIMEZONE=Kolkata\n    - GITLAB_HTTPS=false\n    - SSL_SELF_SIGNED=false\n    - GITLAB_HOST=localhost\n    - GITLAB_PORT=10080\n    - GITLAB_SSH_PORT=10022\n    - GITLAB_RELATIVE_URL_ROOT=\n    - GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string\n    - GITLAB_SECRETS_SECRET_KEY_BASE=long-and-random-alphanumeric-string\n    - GITLAB_SECRETS_OTP_KEY_BASE=long-and-random-alphanumeric-string\n    - GITLAB_ROOT_PASSWORD=\n    - GITLAB_ROOT_EMAIL=\n    - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n    - GITLAB_NOTIFY_PUSHER=false\n    - GITLAB_EMAIL=notifications@example.com\n    - GITLAB_EMAIL_REPLY_TO=noreply@example.com\n    - GITLAB_INCOMING_EMAIL_ADDRESS=reply@example.com\n    - GITLAB_BACKUP_SCHEDULE=daily\n    - GITLAB_BACKUP_TIME=01:00\n    - SMTP_ENABLED=false\n    - SMTP_DOMAIN=www.example.com\n    - SMTP_HOST=smtp.gmail.com\n    - SMTP_PORT=587\n    - SMTP_USER=mailer@example.com\n    - SMTP_PASS=password\n    - SMTP_STARTTLS=true\n    - SMTP_AUTHENTICATION=login\n    - IMAP_ENABLED=false\n    - IMAP_HOST=imap.gmail.com\n    - IMAP_PORT=993\n    - IMAP_USER=mailer@example.com\n    - IMAP_PASS=password\n    - IMAP_SSL=true\n    - IMAP_STARTTLS=false\n    - OAUTH_ENABLED=false\n    - OAUTH_AUTO_SIGN_IN_WITH_PROVIDER=\n    - OAUTH_ALLOW_SSO=\n    - OAUTH_BLOCK_AUTO_CREATED_USERS=true\n    - OAUTH_AUTO_LINK_LDAP_USER=false\n    - OAUTH_AUTO_LINK_SAML_USER=false\n    - OAUTH_EXTERNAL_PROVIDERS=\n    - OAUTH_CAS3_LABEL=cas3\n    - OAUTH_CAS3_SERVER=\n    - OAUTH_CAS3_DISABLE_SSL_VERIFICATION=false\n    - OAUTH_CAS3_LOGIN_URL=/cas/login\n    - OAUTH_CAS3_VALIDATE_URL=/cas/p3/serviceValidate\n    - OAUTH_CAS3_LOGOUT_URL=/cas/logout\n    - OAUTH_GOOGLE_API_KEY=\n    - OAUTH_GOOGLE_APP_SECRET=\n    - OAUTH_GOOGLE_RESTRICT_DOMAIN=\n    - OAUTH_FACEBOOK_API_KEY=\n    - OAUTH_FACEBOOK_APP_SECRET=\n    - OAUTH_TWITTER_API_KEY=\n    - OAUTH_TWITTER_APP_SECRET=\n    - OAUTH_GITHUB_API_KEY=\n    - OAUTH_GITHUB_APP_SECRET=\n    - OAUTH_GITHUB_URL=\n    - OAUTH_GITHUB_VERIFY_SSL=\n    - OAUTH_GITLAB_API_KEY=\n    - OAUTH_GITLAB_APP_SECRET=\n    - OAUTH_BITBUCKET_API_KEY=\n    - OAUTH_BITBUCKET_APP_SECRET=\n    - OAUTH_SAML_ASSERTION_CONSUMER_SERVICE_URL=\n    - OAUTH_SAML_IDP_CERT_FINGERPRINT=\n    - OAUTH_SAML_IDP_SSO_TARGET_URL=\n    - OAUTH_SAML_ISSUER=\n    - OAUTH_SAML_LABEL=\"Our SAML Provider\"\n    - OAUTH_SAML_NAME_IDENTIFIER_FORMAT=urn:oasis:names:tc:SAML:2.0:nameid-format:transient\n    - OAUTH_SAML_GROUPS_ATTRIBUTE=\n    - OAUTH_SAML_EXTERNAL_GROUPS=\n    - OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL=\n    - OAUTH_SAML_ATTRIBUTE_STATEMENTS_NAME=\n    - OAUTH_SAML_ATTRIBUTE_STATEMENTS_FIRST_NAME=\n    - OAUTH_SAML_ATTRIBUTE_STATEMENTS_LAST_NAME=\n    - OAUTH_CROWD_SERVER_URL=\n    - OAUTH_CROWD_APP_NAME=\n    - OAUTH_CROWD_APP_PASSWORD=\n    - OAUTH_AUTH0_CLIENT_ID=\n    - OAUTH_AUTH0_CLIENT_SECRET=\n    - OAUTH_AUTH0_DOMAIN=\n    - OAUTH_AZURE_API_KEY=\n    - OAUTH_AZURE_API_SECRET=\n    - OAUTH_AZURE_TENANT_ID=\n    - AWS_BACKUPS=true\n    - AWS_BACKUP_ENDPOINT='http://minio:9000'\n    - AWS_BACKUP_ACCESS_KEY_ID=minio\n    - AWS_BACKUP_SECRET_ACCESS_KEY=minio123\n    - AWS_BACKUP_BUCKET=docker\nminio:\n    image: minio/minio\n    ports:\n      - \"9000:9000\"\n    environment:\n      MINIO_ACCESS_KEY: minio\n      MINIO_SECRET_KEY: minio123\n    command: server /export\n```. Thanks.. ",
    "batthebee": "I'm sorry. Found the missing part. . I'm sorry. Found the missing part. . ",
    "ohardy": "@iamchanghyunpark Don't have time right now to help you sorry but the configuration of Pages for Gitlab source is explained here: https://docs.gitlab.com/ee/administration/pages/source.html. ",
    "kristiandrucker": "When do you think you will ship this release?. @lenovouser Yeah that would be nice. Hi, cannt you just create another container that will have volumes with gitlab pages data and the config for pages (for nginx) so it will be separate. It will be simpler for me and everyone running it behind Traefik or any proxy.. @solidnerd Could you please update gitlab version to 8.17.2? It works on my machine and it's the latest release. \n\n. @jostyee Then what is the latest version?\n5.0.0?. Gitlab works on these versions from upgrade-to-8.17.0 branch. \n\n. @solidnerd I will look into pages and how I can hook it up with a separate nginx container. @solidnerd @paolomainardi can you look at this nginx config provided here?\nhttps://github.com/gitlabhq/omnibus-gitlab/blob/master/doc/settings/nginx.md#vhost-server-block\nAlso going to deploy a normal gitlab server and look into the nginx there.. Nothing there. Dunno where is the nginx config. Why cann't we use the bundled nginx with gitlab?\n. @phpb-com Can you look at official gitlab-ce and try to add mysql into it? Then it should be similar as this project. Official Gitlab-CE configures nginx depending on it's need. Pages should work then. Also then it will be good to setup auto rebuild when parent image is updated on docker hub to auto rebuild the image when gitlab will update theirs. Or look into Omnibus and \"reverse engineer\" it to have mysql support on CE Gitlab.. ok. ",
    "codereviewvideos": "Hi @xueshanf,\nPlease could you share the config you used to fix this? I'm experiencing the exact same issue.\nThanks\nChris. Thanks for sharing. Unfortunately I still haven't solved my issue. I think I have something more fundamentally incorrect given everything I know at this point. It's frustrating, as I have had this working within the last 48 hours, but can't remember how. I really appreciate you sharing your config though, much appreciated. \nUpdate - welp, totally stumped, it just started working again. The only thing I've done is just tried pushing an updated image to an existing project repository. It didn't recognise that I had uploaded an image already, uploaded the full image again, and this time it shows. Confusing, but working... hate stuff like this.. ",
    "L3w1s-L1u": "Closed because I found the problem is that my postgresql['enable']=false didn't take effect due to wrong reconfigure operation. After re-assured it did take effect. My gitlab instance can communicate with external database as expected.. ",
    "maffelbaffel": "I would also really like this to be merged :). ",
    "yuankunzhang": "@damiendurant \nI have built a merged version of Docker image but unfortunately I cannot make it work. It turns out that there is a curly brace missing in assets/runtime/functions. Here you can find my fix.. Hi guys,\nBesides this Gitlab Monitor, Gitlab itself exposes a list of metrics. To enable this, you should:\n\nIn the admin area, check Enable Prometheus Metrics;\nAdd a new environment variable named prometheus_multiproc_dir, and set it to a valid directory, e.g. /dev/shm.\n\nPlease refer to this doc for more details.. @Meowbeast Due to the warning message, the prometheus_multiproc_dir env var does not take effect. Can you print out all the env vars of the running Gitlab process inside your Docker container?. @Meowbeast And what about env vars for the exact Gitlab process? Please do the following.\nFind the PIDs:\nroot@459e22c67ad0:/# ps -ef | grep 'gitlab/gitlab-rails/etc'\ngit        765     1  0 04:31 ?        00:00:22 unicorn master -D -E production -c /var/opt/gitlab/gitlab-rails/etc/unicorn.rb /opt/gitlab/embedded/service/gitlab-rails/config.ru\ngit        880   765  0 04:31 ?        00:00:07 unicorn worker[0] -D -E production -c /var/opt/gitlab/gitlab-rails/etc/unicorn.rb /opt/gitlab/embedded/service/gitlab-rails/config.ru\n...\nCheck env vars:\nroot@459e22c67ad0:/# su - git -c 'cat /proc/765/environ' | tr \\\\0 \\\\n\nprometheus_multiproc_dir=\nenvironment=production\nunicorn_rb=/var/opt/gitlab/gitlab-rails/etc/unicorn.rb\nuser=git\n.... @Meowbeast I'm not familiar with the mechanism of Rancher setting the env vars. Can you capture Rancher's output docker-compose.yml and see what was under the hood?. @Meowbeast \nAs for the official Docker image, seems like setting prometheus_multiproc_dir in docker-compose.yml will not take effect. According to this doc, there're only a limited number of environment variables that can be used in the docker-compose.yml file.\nSince you're using Rancher, I'm not sure if you can do the following operations (which shall be working) toward your running Docker image.\nAttention is needed here, I strongly suggest you first test it in a dev environment.\nEdit the gitlab.rb file by hand:\ndocker exec -it xxx vim /etc/gitlab/gitlab.rb\nFind (or add, if not yet exists) the gitlab_rails['env'] section, and add our dreaming env var here:\ngitlab_rails['env'] = {\n    ...\n    'prometheus_multiproc_dir' => '/dev/shm'\n}\nLastly, save the file and run this command to restart it:\ndocker restart xxx. @damiendurant \nI think your last reply is about gitlab internal metrics. And this PR is about the gitlab-monitor library. These two are totally different things. Could you please confirm this?\nWe're gonna need the gitlab-monitor library as we have been using it for a while and it gives us lots of useful metrics.. @damiendurant \nThe two have different probes.\nFor gitlab-monitor:\n\nFor gitlab prometheus metrics:\n. @krlng you need to add client ip to ip_whitelist.. Waiting for this PR to be merged.. Please stop creating such nonsense issues, this repository is not a playground for you.. ",
    "lborguetti": "Hi guys, \nAny updates about this PR?\nThanks,. I'm had a similar problem, but when upgraded from 9.2.6 to 9.3.5.\nGitaly don't running because directory /home/git/gitlab/tmp/sockets/private is missing.\nMy workaround:\ndocker exec -ti gitlab bash\nmkdir /home/git/gitlab/tmp/sockets/private && chown git: /home/git/gitlab/tmp/sockets/private -R \nsupervisorctl start gitaly\nsupervisorctl stop gitlab-workhorse\nsupervisorctl start gitlab-workhorse\n@solidnerd \"install_template\" fix that too? \nThanks.\n. ",
    "derchrisuk": "@yuankunzhang any idea how to set that variable in the context of the docker-compose file, and make it persistent ?. @jostyee ah, right.\nI have seen so many PR or issues to add a certain variable that I thought this had to be coded into the docker files/install first. Seems to work.\nThanks.. @Meowbeast looks like you are trying to set it from within Gitlab.\nThis needs to go into the either the docker cmd command, or the docker-compose file.\nAnd the image needs to be restarted.. I'm not using Rancher, but the compose file from this repo with normal docker CLI.. I don't know.\nWould say should work with any.\nYou have to make sure you add the env to the gitlab docker itself.. ",
    "ttftw": "@yuankunzhang any idea why this isn't working?  Even after I set the env var in Docker, it still says \n\nand 404's when I check the metrics.\n\nDo I need a special image when it shows this should be available in GitLab's official image?\n. @derchrisuk Thanks for the reply.\nI'm setting this using Rancher, which is adding to docker-compose file and restarting.. Ok, so that was really my original question...to get this to work I need to use THIS repo?  This isn't something that works using the official GitLab docker image gitlab\\gitlab-ce?. Here is printenv from inside the container.\n\n. @yuankunzhang you are correct, it is showing unset in the process itself.  I'm a bit confused on why the container would have the env var, but the process is blank.. Here is the relevant section of docker-compose:\n\n. Aaaaye.  That worked!\nThanks a lot, @yuankunzhang . ",
    "isymbo": "Line 1870, 1871 from the build logs\n\"Downloading gitlab-monitor v....\nThe command '/bin/sh -c bash ${GITLAB_BUILD_DIR}/install.sh' returned a non-zero code: 8\"\nLooks like GITLAB_MONITOR_VERSION definition is not checked in?\n@damiendurant . ",
    "azachar": "\nHello,\nFor information, i have added a docker env \"prometheus_multiproc_dir=/dev/shm\", and it's work :)\nSteps to add /-/metrics :\n\nAdd GITLAB_MONITORING_IP_WHITELIST=\nAdd prometheus_multiproc_dir=/dev/shm (or else location)\nCheck \"Enable Prometheus Metrics\"\nRestart\n\n\nDear @LordFPL,\nDid you apply it to the original installation, without this PR?\nThanks,\nAndrej. ",
    "nicolasgnr": "1152 .",
    "jprjr": "I probably should have added some background on why I did this back when I opened this!\nWe host private NPM modules in our Gitlab and deploy via git-over-ssh. NPM tends to open a lot of simultaneous connections to gitlab, being able to set the MaxStartups item is really helpful for that use-case.. ",
    "derphilipp": "Almost the same here, lot's of mirrored C/C++ Packages that are used as submodules;\nAs those are quite large, settings \"--jobs 32\" for git clone/submodule processing, helps a lot in terms of speed. Unfortunately gitlab does not accept enough connections and therefore fails;. Also when running several parallel builds, my builds tend to break due to the fact that the not enough ssh connections can be opened up at once. This would solve it . Downgrading is not really supported afaik, so I will also go for the \"deactivate migrations\" solutions for now. @flashermaster Ah, sorry; I got that wrong. ",
    "xsteadfastx": "This is pretty useful!. ",
    "xelatirdan": "@solidnerd Could you merge this helpful fix?. ",
    "xxorax": "What nginx-proxy do you use ?\nIf you use the config file provided, then you have change it to include letsencrypt, or you can put an other proxy over it.\nBut the best way is to got your own nginx-proxy (with https) and link it directly to the Docker Registry (port 5000, no-https).\n. This is what it's confusing : there is NO gitlab registry, it's only an authentification service. As I explain in my comment, look at the schema on this page : https://docs.docker.com/registry/spec/auth/token/. ",
    "Routhinator": "A confusing solution @Pegasuz - The Gitlab container registry is internal to Gitlab. In your solution you are enabling the internal registry AND creating a defacto registry using the official docker registry container. Which one is actually answering? Looks like it's the docker registry and not the Gitlab registry.. ",
    "niksubramanian": "@Pegasuz any chance of you sharing your full docker-compose setup (minus anything sensitive, obviously)? I'm having some trouble with the same setup as yours (nginx-proxy, letsencrypt, registry & gitlab).\nThanks in advance!. @Ludea could you post your final configuration?\nThanks in advance.. @sprucify yeah I'm facing the same behavior, so you're not alone. Looking into it right now.. @sprucify perhaps to help you out, I was faced with the same behavior and managed to solve it.\nThe issue on my end was that the default SSL_CERTIFICATE_PATH, SSL_KEY_PATH and SSL_DHPARAM_PATH were not pointing to the right certificate, key and dhparam respectively. Fixing this stopped the redirects.\nHope this helps you out!. Awesome - going to give that a shot! I'll post my docker-compose file if I manage to get it to work for future reference.. @phpb-com - Do you happen to have a docker-compose file that includes both the caddy-server and the registry? That would be hugely helpful - I feel like I'm fighting with getting this to work, and I can't be the only one with this problem...\nThanks in advance!. Thanks @phpb-com - I saw that docker-compose file, but I couldn't find one that also includes the registry (unless I totally missed it?). Alright - managed to get it working (without the registry at the moment). Closing - thanks for all the help!. ",
    "thiesschneider": "hey @Pegasuz,\nhow do you get the cert for the registry in the right folder? Do you map your letsencrypt container in the gitlab cert folder?\nthx in advance. ",
    "jeinwag": "Same here. Might be an upstream issue?. I guess using the nginx real IP module with the inner nginx inside the container could help:\nhttp://nginx.org/en/docs/http/ngx_http_realip_module.html\n. I just noticed that this was fixed in #1137, you can solve the issue by configuring  NGINX_REAL_IP_RECURSIVE and NGINX_REAL_IP_TRUSTED_ADDRESSES accordingly.. Currently, the X-Real-IP header gets set/overwritten by the proxy running inside the gitlab container. I guess you could remove it from the config there and have it set by your outer proxy.\nBut I'm not sure what other usecases might break by removing the X-Real-IP from the configuration of the inner proxy.\n. ",
    "boeserwolf91": "I'm running GitLab 8.17.3 and it seems to work. The backup directory only contains the last 7 days (which is the default value). Why is this PR marked as WIP? Is there still something to do?. Why is this PR marked as WIP? Is there still something to do?. okay thanks. I found the answer in the GitLab blog post of GitLab 10.0 https://about.gitlab.com/2017/09/22/gitlab-10-0-released/ \nThe config option LDAP_VERIFY_SSL was the problem.. okay thanks. I found the answer in the GitLab blog post of GitLab 10.0 https://about.gitlab.com/2017/09/22/gitlab-10-0-released/ \nThe config option LDAP_VERIFY_SSL was the problem.. It might be that you have to update the configuration gitlab.rb, evironments etc. as well because there's a new lets encrypt option: see https://about.gitlab.com/2018/02/22/gitlab-10-5-released/#instant-ssl-with-lets-encrypt-for-gitlab . It might be that you have to update the configuration gitlab.rb, evironments etc. as well because there's a new lets encrypt option: see https://about.gitlab.com/2018/02/22/gitlab-10-5-released/#instant-ssl-with-lets-encrypt-for-gitlab . ",
    "FranVeraC": "@solidnerd thanks for respond me. Let me see if I understood, I have to rename GITLAB_HOST = localhost for another name?? Which variable in specific do I have to modify?... thanks solidnerd for your help and excuse my English.  Stay tuned to your comments.\nGracias :). @solidnerd I am sorry my friend, Even throw me do not understand that in specific of my docker-compose.yml I have to modify ... please help my friend.\n. ",
    "frostieDE": "No, you should use gitlab as hostname when registring the runner.\n$ gitlab-runner register --name my-runner --url http://gitlab --registration-token \nNotes:\n replace <my-registration-token> by the token visible in GitLab\n you must run this command within the gitlab-runner container :wink:\n. Just saw that there is already an opened pull request #1098. No it does not seem to solve the problem. But they do not state that I can change the collation setting (just encoding which I can already set). I tried setting the following variables:\n-DB_ENCODING=utf8mb4\n- GITLAB_DATABASE_COLLATION=utf8mb4_general_ci\nThis makes GitLab not respond to any request as it has problems speaking with MySQL.. What version are you migrating from?\nNote: This issue was also posted on the GitLab issue tracker.. Looks good, why is it still WIP? \ud83d\ude09 . I am using GitLab behind an nginx reverse proxy as well and it works fine (it uses the https://secure.gravatar.com/ domain).\nMy configuration (docker-compose.yml) is as yours:\n```yml\n- GITLAB_HTTPS=true\n- SSL_SELF_SIGNED=false\n\nGITLAB_HOST=myserver.com\nGITLAB_PORT=443\nGITLAB_SSH_PORT=22\n```\nMy nginx config looks like this:\n\n```\n        location / {\n                proxy_set_header    Host                $host;\n                proxy_set_header    X-Real-IP           $remote_addr;\n                proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;\n                proxy_set_header    X-Forwarded-Proto   $scheme;\n            proxy_set_header X-Forwarded-Ssl on;\n            proxy_pass http://gitlab;\n    }\n\n``\nI am not sure if the:` character might confuse Gitlab making it not recognising the headers.\nNote: I defined a backend called gitlab \ud83d\ude09 . Sorry, this is my complete nginx configuration for GitLab:\n```\nupstream gitlab {\n        server 127.0.0.1:10080;\n}\nserver {\n        server_name git.example.com;\n        listen  80;\n        listen  [::]:80;\n        return  301 https://$host$request_uri;\n}\nserver {\n        server_name git.example.com;\n    listen  443 ssl http2;\n    listen  [::]:443 ssl http2;\n\n    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;\n\n    ssl_ciphers                     \"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256\";\n    ssl_dhparam                     /etc/ssl/private/dhparams.pem;\n    ssl_prefer_server_ciphers       on;\n\n    ssl_session_cache               shared:SSL:10m;\n    ssl_session_timeout             5m;\n\n    # OCSP\n    ssl_stapling on;\n    ssl_stapling_verify on;\n    resolver 8.8.4.4 8.8.8.8 valid=300s;\n    resolver_timeout 30s;\n\n    root /usr/share/nginx/html/;\n\n    ssl_certificate /etc/letsencrypt/live/git.example.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/git.example.com/privkey.pem;\n\n    location / {\n            proxy_set_header    Host                $host;\n            proxy_set_header    X-Real-IP           $remote_addr;\n            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;\n            proxy_set_header    X-Forwarded-Proto   $scheme;\n\n            proxy_set_header X-Forwarded-Ssl on;\n            proxy_pass http://gitlab;\n    }\n\n}\n```\nNote: I am using own server directives for each of my webservice. According to your nginx configuration for GitLab, you include other web apps and even php which isn't necessary ;-) This may not have anything to do with your problem but it's common (and good) practise :-). Maybe it would be useful if you paste the (sanitised!) contents of nginx_php.conf and webapps.ssl.conf ;-). As of the nginx documentary, it is recommended to use the ssl parameter within the listen directiveinstead ofssl on;`. But I doubt that this causes your behaviour.\nDoes this behaviour occur when using other browsers? Have you tried clearing all cookies for your GitLab domain? (seems stupid but I was having some redirecting issues because of that in other web applications...). Also, I assume you are using the latest version of GitLab and nginx :wink:. Seems odd to me, too. I am successfully running two GitLab instances behind an nginx...\nDid you some sort of debugging? Does it always redirect to the same page or does pageA redirect to pageB which redirects to pageA again? Maybe you can post the full HTTP response.. Did you provide any SSL certificate paths in your docker-compose.yml?. The paths in docker-compose.yml are more interesting, I guess :wink: Did you provide any of them there? . LGTM \ud83d\udc4d . First, introduce yourself to Docker and Docker compose. Afterwards, follow instructions and configuration options here. As you seem to be running gitlab-runner within Docker, localhost refers to the docker container that runs gitlab-runner and not your actual host machine (which redirects port 10080 to the docker container which runs gitlab). Thus, you might chance http://localhost:10080/ci to http://172.17.0.1:10080/ci (note: depending on your configuration, the host ip from within the container might differ).. Just proposed this PR as the other one seems to take a while until it gets updated :wink: . Maybe this may help.. Basically, the official image is based on the GitLab omnibus package and this image is based on installation from source. But let's take a deeper look:\nThe official image contains all services in one image (GitLab itself, Postgres, Redis, ...) while this image splits the services into different pieces and uses docker-compose to glue them together. Thus, this image is actually the more Docker-way image (because most services run in seperate containers). As a result, you could actually use multiple redis and/or postgres instances for better scaling. \nFuthermore, this image allows you to use either Postgres or MySQL (the official one runs Postgres* only). Also, it allows you to use an external database server (which is actually not the real docker-way, but in some scenarios it might be useful).\nAlso, the offical image gets updated as soon as a new version of GitLab is released. This image is also updated soon after official releases, but it can take some time (in the past months it took around 1-5 days).\nWhile the official docker image is pretty easy to install and configure, this image might need some time to be configured properly (but the documentation is quite good, so if you have a bit experience in Docker, you should be able to install this image in less than an hour). \nIn conclusion, I find it hard to say which one is more suitable for production purpose. Generally, I think both images can be used in production environments. I am using this image as it's using Docker the better way. I have been running two instances successfully for more than three months now and I am very satisfied.\nI hope it helps :wink:\n*) from my past experiences: you get less problems when using Postgres \ud83d\ude09 . I assume that this fix is only temporarily as it gets reverted on the start of the container?. Thank you :-). You missed to replace all occurrances of gitlab:9.3.0 with gitlab:9.3.0-1 :wink:. ",
    "brandshaide": "In my case it has been in fact the solution to pass the value being attached to container_name for successfully registering my gitlab-runner , so thanks for that. \nAlthough there's one strange behavior which bugs me a bit: \nIn my docker-compose.yml I'm providing a hostname: gitlab-custom which is - as expected -  being passed to the containers /etc/hosts file. \nBut when accessing the Web-GUI of GitLab I have to access it by using the hostname of my local host. I would expect to be able to access GitlLab UI by passing the hostname as provided in docker-compose.yml  (which is gitlab-custom).\nThe GITLAB_OMNIBUS_CONFIG for the external URL is set to external_url 'https://gitlab-custom.de'\nWhen navigating to the Admin Area/Runners section of the Web-GUI, the section \"How to setup a shared Runner for a new project\" in order to retrieve the registration token, step 2 is again specifying a URL with the hostname of my actual host-machine, e. g. \"https://localhostname/ \nBut registering the runner is only possible with passing the container name as stated above.\nThanks in advance. ",
    "herobix": "I am still having this issue. ",
    "kelvinji2009": "@herobix Same issue. It may be caused by gitlab is behind a reverse proxy like nginx.. ",
    "qacwnfq": "I googled this and one of the first results was this thread.. ",
    "xNevo": "You sure? I don't see this thread on the first, second or third page of Google's search results\nHow about: https://askubuntu.com/questions/45679/ssh-connection-problem-with-host-key-verification-failed-error. Why don't you use Caddy webserver instead of nginx? Caddy provides you automated cert obtaining and worksfine as a reverse proxy\nhttps://caddyserver.com/docs/automatic-https\nhttps://caddyserver.com/docs/proxy. Same problem here. I get the error \"The requested URL returned error: 500\" as soon as I try to clone/fetch/push anything from/to the server. Some repositories seem to work, others don't. Anybody else having this problem?. I managed to solve the problem by creating a backup, cleaning up the database and importing the previous created backup (Maintenance). > However, the repositories are not stored within the docker container nor in the external path\nRepositories are stored in /home/git/data/repositories. I personally recommend you to use docker-compose (Quick Start)\nInstead of seperating the repository from the data you should probably save all of the data on your external storage (including your database if you want to). Modify the volume path in your docker-compose file:\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:9.4.3\n    volumes:\n    - /home/xxx/external_storage/docker/volumes/diva_gitlab/:/home/git/data:Z. > What advantage do I have with a compose file? It is important for me that the containers are loaded on a reboot of the machine so I was using a systemd service that is loading the containers for me.\nDocker-Compose is a tool for defining and running multi-container Docker applications. You don't need to enter a long command everytime you want to create a container. You can simply specify your settings your your docker-compose file and run docker-compose up\nTo run a docker-compose on startup you can either use crontab @reboot /usr/local/bin/docker-compose -f /path/to/docker-compose.yml -d (start in daemon mode) or change your systemd service file ExecStart parameter to:\nExecStart=/usr/local/bin/docker-compose -f /path/to/docker-compose.yml\n(You don't need daemon-mode when using systemd)\nEnsure that the user in your service file has permissions to use docker\n// edit:\nThe 'Z' option tells Docker to label the content with a private unshared label. \nAnd you could use\nfind -type d -name 'repositories'\nto find the repository folder in your setup. If you're using docker-compose: \nsh\ndocker-compose restart\nor\nsh\ndocker-compose down && docker-compose up -d. Only for ~1 minute if everything goes well. When is this going to be merged?. execute docker-compose down to gracefully stop and delete all containers.. When is this going to be merged?. Could you provide us your docker-compose file/your start command?. lgtm. ",
    "simonseyock": "https://gitlab.com/gitlab-com/support-forum/issues/1665#note_39153486 might help you. ",
    "monkeydri": "@solidnerd could you elaborate please ?\nI run this docker-gitlab behind a nginx reverse-proxy (linuxserver/letsencrypt docker) so only 443 is exposed on host.\nThe thing is internally the port used by the gitlab instance for http is sometimes appended to the images URLs (therefore the images are not displayed because this port is not opened on host).. ",
    "neta79": "@solidnerd \n@monkeydri described precisely our same scenario. \nGitlab generates urls with the only port info it is aware of. \nIn our case, this patch keeps being essential to avoid occasional bad urls. \nPlease reconsider merging.. ",
    "greyferret": "Same problem in 8.17.0:\n2017/03/18 19:53:01 [emerg] 3218#3218: duplicate listen options for [::]:80 in /etc/nginx/sites-enabled/gitlab-pages:6\nHost information:\n$ docker -v\nDocker version 17.03.0-ce, build 60ccb22\n$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 16.04.2 LTS\nRelease:    16.04\nCodename:   xenial\nIn my case, fixed by deletion ipv6only=on from line 6 of /etc/nginx/sites-enabled/gitlab-pages. Upgrade to 9.3.9 and RE2 installation by separate commits in #1297. @solidnerd Sorry, i'm github newbie :) I made a new request with upgrade to 9.3.9 #1297. @solidnerd Ok, I deleted 11.7.1 and 11.7.2. Thanks! Rebased.. @solidnerd gitlab-shell was already version 8.4.4 :)\nhttps://github.com/greyferret/docker-gitlab/blob/upgrade-to-11.8.0/Dockerfile#L10\nhttps://github.com/sameersbn/docker-gitlab/blob/master/Dockerfile#L10. ",
    "f3l1x": "@solidnerd \ud83d\udc4d . Good job guys :+1: . Thank you guys for your work. :-). I think we could close it. 9.3.5 is already tagged, right? :-). I've tested it and it works. Good job.. Confirmed, It requires to keep uploads folder.. If I've moved uploads to shared/public/uploads. Will it work on latest version? I've looked it's changed again. :-) Thanks for help.. @leslau Thanks. I've thought so.. Thanks for explanation.. Ping @sameersbn . ",
    "avluis": "\ud83d\ude3b I need this~\nThe issue is that when using a load balancer, there is still an internal IP that is logged:\nLB -> GitLab NGINX -> GitLab. Have you tried without the @<domain>.<tld> portion? -- I know my smtp server won't authenticate with it.. That's not exactly the greatest character in a password (not because of security) when it comes to scripting.\nIn my experience, if you can't wrap strings with '' then you can use \"\" -- but in the case of a Dockerfile, as well as any other files read by cli, single quotes are just nasty to deal with: https://github.com/docker/docker/issues/5701\nHave you tried wrapping that password in double quotes?\nThis is the environment variable used for LDAP PASS: LDAP_PASS=${LDAP_PASS:-} so I'm not sure how it will resolve, but best of luck.\nAs for escaping: \\ is what you are looking for -- but once again, this ${LDAP_PASS:-} is usually used as a literal -- give it a try though. And please let us know if you had to change the password to address this.. The error you are seeing there is confirming that process not being able to read or missing all the launch arguments that it needs -- in this case, it's the ' in the password causing this unfortunately.\nIf the password was wrapped with double quotes, that wouldn't be an issue -- but then it would break with a double quote \ud83d\ude06\nWhat this field needs is sanitation, but why go thru all that trouble and instead sanitize the password itself.\nAnyways, addressing this issue would be up to the image author, and how much time spent fixing this vs. results or other improvements \ud83d\ude22\nUnless someone has a shell trick to escape this, I'm not certain of any other way to get around this.. @MACE-Zer0 Why are you not making use of environment variables?\nI have a Synology as well -- was running GitLab on it with LDAP with no issues until I moved it to another box (consolidating things).\nCan you export your config file for your GitLab container -- sanitize the data (remove passwords, etc) and post it here? Just need to know what your setup is like so that I can help you out much better.\nAlso, you could move over to the release here instead of Synology -- there's plenty of info on how to import things.. @GJRTimmer Yep -- get him off that image -- it's way too old and unsupported (in GitLab time anyways).\nIt's also way too easy to run GitLab from this repo rather than what Synology offers in the first place~. @MACE-Zer0 Are you following the suggested bind (when using AD)?\nbind_dn: 'CN=Gitlab LDAP,CN=Users,DC=Domain,DC=tld'\nNote that it's binding on a Display Name for the user, not the email (not sure if that has been fixed) -- it is also case sensitive~\nIn addition, try setting the base at bit narrower: base: 'CN=Users,DC=Domain,DC=tld' or apply a filter: LDAP_USER_FILTER:(employeeType=developer)  -- though you can wait until you confirm that GitLab is connecting before applying a filter.. @GJRTimmer\nDon't want to hijack the thread -- just wanted to drop in and say thank you for helping @MACE-Zer0 -- you have been really awesome!\n\nI'm using the MailPlus Server on my Synology, I even have my MailServer completly configured with full DKIM, DMARC SSL etc.\n\nIf you don't already have it, are you interest on knowing how to setup the Reply by email feature on GitLab with MailPlus Server?. Good info here -- thanks for sharing!. I remember having this issue as well since I use NGINX as a load balancer with forward facing HTTPS (with HTTP/2 and HSTS) with gitlab traffic over HTTP -- let me track down what I changed in order to force gravatar over HTTPS and I'll edit.\n\nLooks like I just got rid of Gravatar altogether (since my NGINX install is controlled by a third-party GUI).\nIf you are able to, have you tried following this: https://docs.gitlab.com/omnibus/settings/nginx.html#supporting-proxied-ssl. How big is this repo exactly? Try using Git LFS or is this not an option?. Well, I meant that particular repo -- or is it that repo that is 22.9Gb?\nIF that's the case, then you need to force your devs to use LFS for it ASAP.. Are you using this with the PostgreSQL container?\nYou need to enable the pg_trgm extension as well.. This explains why my configuration was not working properly when following the instructions -- great to know that this will correct the default behavior so thanks for posting this with so much detail~. I think you may be in the wrong repo -- this is a fork of the official GitLab repo that does not use the Omnibus installer (small differences, but they are there nonetheless).. I have one repository for which the directory tree uses the full path (all the way to the image directory) while others are created directly in the project directory.\nThe only difference is that the repository with the image directory was an import from GitHub (for which I then followed the usual docker instructions to pull/push the latest image).\nI won't be able to point you to the definitive answer, but this could simply be a side-effect of v2 registry.. @xNevo Note that you aren't the only one seeing no diff coloring (I am as well): https://gitlab.com/gitlab-org/gitlab-ce/issues/35510 (not the OP, but good to have it linked).\nI am seeing some javascript errors -- ~~but I don't have any issues with dynamic pages.\nTry a Ctrl+F5 on those pages just in case.~~\nScrolling down on the commit list reveals the issue you are experiencing~\nIn addition: I no longer have access to Cycle Analytics (page loads, I still have navigation, but analytics section is blank).\n\n\n. Would like to ref the following issue, for those who like to have all info in one location:\nhttps://gitlab.com/gitlab-org/gitlab-ce/issues/35193\nhttps://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/install/installation.md#compile-gettext-po-files. Maybe you are seeing this issue: #1248\nI have a similar setup as yours [Cloudflare -> NGINX -> Gitlab]\nHopefully some excerpts from my configuration can help resolve your issue.\nRun command:\nyml\ndocker run --name=\"gitlab\" --net=\"none\" -e TZ=\"America/Chicago\" -e HOST_OS=\"unRAID\" \\\n-v \"/mnt/user/appdata-store/gitlab/shared/lfs-objects/\":\"/home/git/data/shared/lfs-objects\":rw \\\n-v \"/mnt/user/appdata-store/gitlab/backups/\":\"/home/git/data/backups\":rw \\\n-v \"/mnt/user/appdata-store/gitlab/shared/registry/\":\"/home/git/data/shared/registry\":rw \\\n-v \"/mnt/user/appdata/gitlab/certs/\":\"/certs\":rw \\\n-v \"/mnt/user/appdata/gitlab/\":\"/home/git/data\":rw \\\n--network <DOCKER_NET> --ip <GITLAB_IP> --hostname='gitlab' \\\n--env-file /mnt/user/appdata/gitlab/DockerEnv sameersbn/gitlab\nRelevant entries from /mnt/user/appdata/gitlab/DockerEnv:\nGITLAB_HOST=gitlab.<domain>.<tld>\nGITLAB_PORT=443\nGITLAB_SSH_HOST=repo.<domain>.<tld>\nGITLAB_SSH_PORT=22\nGITLAB_TRUSTED_PROXIES=<NGINX_IP>\nGITLAB_HTTPS=true\nSSL_CERTIFICATE_PATH=/this_path_must_not_exist_for_https_to_work_properly\nSSL_KEY_PATH=/this_path_must_not_exist_for_https_to_work_properly\nSSL_DHPARAM_PATH=/this_path_must_not_exist_for_https_to_work_properly\nNGINX_REAL_IP_RECURSIVE=on\nNGINX_REAL_IP_TRUSTED_ADDRESSES=<NGINX_IP>\nNGINX:\n```\nserver {\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\nserver_name gitlab.<domain>.<tld>;\n\nssl_certificate /path/to/cert/fullchain.pem;\n\nssl_certificate_key /path/to/key/privkey.pem;\n\nadd_header Strict-Transport-Security \"max-age=15768000; includeSubdomains; preload\" always;\n\nlocation / {\n    proxy_set_header        Host                $http_host;\n    proxy_set_header        X-Real-IP           $remote_addr;\n    proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;\n    proxy_set_header        X-Forwarded-Proto   $scheme;\n    proxy_intercept_errors  on;\n    proxy_http_version      1.1;\n\n    proxy_pass http://<GITLAB_IP>:80;\n\n}\n\n}\n```\n. Have you resolved your issue?\nIt looks like your registry does not recognize your certificates;\nlog\nregistry_1    | 2017/08/01 03:17:24 http: TLS handshake error from 172.18.0.5:44478: remote error: unknown certificate authority\nregistry_1    | 2017/08/01 03:17:24 http: TLS handshake error from 172.18.0.5:44482: remote error: unknown certificate authority\nregistry_1    | 2017/08/01 03:17:24 http: TLS handshake error from 172.18.0.5:44478: remote error: unknown certificate authority\nregistry_1    | 2017/08/01 03:17:24 http: TLS handshake error from 172.18.0.5:44482: remote error: unknown certificate authority\nregistry_1    | 2017/08/01 03:23:46 http: TLS handshake error from 172.18.0.5:44498: remote error: unknown certificate authority\nregistry_1    | 2017/08/01 03:23:47 http: TLS handshake error from 172.18.0.5:44508: remote error: unknown certificate authority\nHave you shared your certificates between each container?\nhttps://github.com/sameersbn/docker-gitlab/blob/master/docs/container_registry.md#signed-certificate. Have you resolved your issue? -- I think I can see what's going on.\nFrom your opening post -- this is no good:\n-e 'GITLAB_REPOS_DIR=/home/xxx/external_storage/docker/volumes/diva_gitlab/data/repositories'\nBut this is:\n-e 'GITLAB_REPOS_DIR=/home/git/data/repositories'\n- Environment vars with path data need to point to the internal path (inside the container)\nHere is how I would do what you are trying to accomplish (and a few additional entries for good measure):\nyml\ndocker run --name=\"gitlab\" --net=\"none\" -e TZ=\"America/Chicago\" -e HOST_OS=\"unRAID\" \\\n-v \"/mnt/user/appdata/gitlab/\":\"/home/git/data\":rw \\\n-v \"/mnt/user/appdata/gitlab/certs/\":\"/certs\":rw \\\n-v \"/mnt/user/appdata-store/gitlab/backups/\":\"/home/git/data/backups\":rw \\\n-v \"/mnt/user/appdata-store/gitlab/repositories/\":\"/home/git/data/repositories\":rw \\\n-v \"/mnt/user/appdata-store/gitlab/shared/lfs-objects/\":\"/home/git/data/shared/lfs-objects\":rw \\\n-v \"/mnt/user/appdata-store/gitlab/shared/registry/\":\"/home/git/data/shared/registry\":rw \\\n--network <DOCKER_NET> --ip <GITLAB_IP> --hostname='gitlab' \\\n--env-file /mnt/user/appdata/gitlab/DockerEnv sameersbn/gitlab\nIgnore everything else but the volume mounts.\nI am defining my variables in an environment file (--env-file /mnt/user/appdata/gitlab/DockerEnv) -- the ones you are seeing in the above command are inserted by Docker.\nNote that I do not have a single variable defined for path data -- I simply remap volume mounts.. ",
    "lukas-hetzenecker": "I'm using Traefik for SSL termination and can confirm this behaviour. Unfortunately I haven't found a workaround yet.. ",
    "stmh": "I see this too with haproxy in front of gitlab.. ",
    "stepan-romankov": "We have the same problem!. We have the same problem!. @jeinwag This solution doesn't work well. \nWe use https://github.com/jwilder/nginx-proxy and proxy itself has dynamic ip address given by docker. \nis it possible that gitlab just take into account  X-Real-IP?\n. @jeinwag This solution doesn't work well. \nWe use https://github.com/jwilder/nginx-proxy and proxy itself has dynamic ip address given by docker. \nis it possible that gitlab just take into account  X-Real-IP?\n. @jeinwag could you configure nginx in a way that if NGINX_REAL_IP_RECURSIVE is set to true and NGINX_REAL_IP_TRUSTED_ADDRESSES is not set, then it takes into account X-Real-IP otherwise not. \nthis should not break existing behaviour because for now NGINX_REAL_IP_TRUSTED_ADDRESSES  is mandatory if NGINX_REAL_IP_RECURSIVE is set to true. \nOr simple another environment flag NGINX_USE_REAL_IP_HEADER :)\nWould appreciate a lot!. @jeinwag could you configure nginx in a way that if NGINX_REAL_IP_RECURSIVE is set to true and NGINX_REAL_IP_TRUSTED_ADDRESSES is not set, then it takes into account X-Real-IP otherwise not. \nthis should not break existing behaviour because for now NGINX_REAL_IP_TRUSTED_ADDRESSES  is mandatory if NGINX_REAL_IP_RECURSIVE is set to true. \nOr simple another environment flag NGINX_USE_REAL_IP_HEADER :)\nWould appreciate a lot!. ",
    "Joeasaurus": "I have this exact problem. I also use my nginx to do SSL management. Doesn't it make more sense to just use the X-* HTTP headers? It's a pretty standard mechanism.. ",
    "catesandrew": "I don't want to get into a lengthy discussion here so take my response with a grain of salt. I think that the external_http is just an alias to the same process. so that the web server can respond to those requests as well as others proxied to it by the gitlab.\nwhen you run pages on same box as gitlab than this is important and not as much when they are separated. if gitlab proxies to pages:8090 vs localhost:8090 than by definition it is already open at pages:8090 (minus a few details). \ni run them separate so am discovering the external_http setting to not be as big of a deal as i am putting pages box behind a load balancer anyways. \nsorry for the brevity, hope it helps. You need to also copy ./config/resque.yml.example to ./config/resque.yml for assets:precompile to work now. perhaps others too but I believe that is it for now in addition to gitlab.yml and database.yml.\n. ",
    "vkarps": "Hi @adamlc \nDo you mind posting your env paramaters for gitlab pages component of the container please? I have been struggling for some time now trying to get it going on my synology. Even if you could point me to some documentation on how to get it going on a separate container, that would be great.. Ah, I think that is what is getting me unstuck, the synology config. I'll give it a shot and let you know, thank you for the quick response!. ",
    "pmoralesp": "I can confirm this solves the problem :+1:. Thank you @phpb-com . Hi, I'm currently running 9.2.7 with mysql. It is safe to upgrade? or will be necessary some kind of patch?. Try to update \"pasito a pasito\", first to 9.2 and then to 9.3.5. BTW, this was my first painful update since over 2 or 3 years using docker-gitlab in production.. Now works flawless. Thank you @solidnerd . It is a premium feature and we use Community Edition (Gitlab Core).\nhttps://about.gitlab.com/2019/01/22/gitlab-11-7-released/#npm-registry. ",
    "HashDot": "@mikehaertl I've upgraded from 8.17.4 to 9.0.0. Same warning. I think we can ignore the warning.. ",
    "drandreas": "jws_private_key is accessed in GitLab in various functions. \nThe warning originates from config/initializers/secret_token.rb\nThe methode description is:\n\nTransition material in .secret to the secret_key_base key in config/secrets.yml.\nHistorically, ENV['SECRET_KEY_BASE'] takes precedence over .secret, so we maintain that\nbehavior.\nIt also used to be the case that the key material in ENV['SECRET_KEY_BASE'] or .secret\nwas used to encrypt OTP (two-factor authentication) data so if present, we copy that key\nmaterial into config/secrets.yml under otp_key_base.\nFinally, if we have successfully migrated all secrets to config/secrets.yml, delete the\n.secret file to avoid confusion.\n\nIf I understand the description correctly everything should be fine as long as GITLAB_SECRETS_SECRET_KEY_BASE is set. the above function will happily recreate secrets.yml during every launch.\nEdit: Is SECRET_KEY_BASE present during migration?. ",
    "dereknex": "I missed the PR #1147. \nClose this issue now.. ",
    "andrewstuart": "Closed in favor of #1147 . I also updated the install.sh script to pull the version numbers for downstream projects out of the gitlab-ce repo itself, since they're included as *_VERSION files.. Haha, that's exactly the issue I struggled with for an hour before adding the gem lock --update=omniauth-google-oauth2. I think that issue should be worked around in this PR.. Yeah, not sure what else remains to be done. I've added a comment to the gitlab issue mentioned above about this specific workaround, but I don't think that will be fixed at the source for 9.2.0 since it's already been released.\nThe workaround I mentioned in the above issue is already part of the PR, and it builds and runs without any issues as far as I've seen over the last 24 hours.. > Also do check if the .gitlab-ci.yml has been changed since 9.1 ?\nDo you mean in the gitlab-ce repository? The local file seems to be pretty dead simple, and shouldn't require updates (since I bumped the version in VERSION).. @phpb-com Alright, the latest rebase should now include that change. :+1: . Yeah, the only reason I added this is that it's a pain to Google the separate latest gitlab versions, and which ought to be used for which build.\nThis way, rebuilding the container for any GitLab version just involves changing a single variable and it'll pull the artifacts compatible with that version, per the included _VERSION files.\nIt's not a big deal for me -- I can add them back in and update to the latest; just thought it would ease your maintenance in the future.. ",
    "tuschl-digitalmobil": "Simply adding an additional service to my docker-compose.yml (see below) and setting the chosen hostname in the corresponding gitlab settings page works fine for me.  \n~~~yaml\nplantuml:\n  image: plantuml/plantuml-server\n  restart: always\n  environment:\n  - VIRTUAL_HOST=plantuml.mydomain.com\n  - LETSENCRYPT_HOST=plantuml.mydomain.com\n  - LETSENCRYPT_EMAIL=certs@mydomain.com\n~~~\nNOTE: I'm using nginx-proxy and its letsencrypt companion for environment based reverse-proxying and SSL termination.\n. ",
    "helmut-steiner": "There is a variable called SIDEKIQ_CONCURRENCY to limit the number of jobs run. Try it!\nUnfortunately it has stopped working on my docker since version 9.1.1.\nAny ideas or fixes are very welcome!. @solidnerd Good for you. Doesn't help me much though... \ud83d\udc45 . ",
    "thopiekar": "Same for me here.\nIn the beginning when I setted up GitLab, I had it set to 25 (default). But now after setting the environment variable on an existing container to eg. 15, the number of workers does not change.. Thanks \ud83d\ude04 . ",
    "orvice": "here is my solution:\ndocker exec -it git_gitlab_1  bash\npsql -h postgresql -d gitlabhq_production -U gitlab\nupdate application_settings set signin_enabled=true;. ",
    "adrianhirst": "Yes I see the same error as well. Yes I see the same error as well. I have this too, try disabling pages. I have this too, try disabling pages. ",
    "gravis": "\"This version contains two important security fixes for the newly released nested groups feature of GitLab 9.0, and we recommend that all affected GitLab installations be upgraded as soon as possible.\" \nCould you merge this asap please?\nThanks. It would be nice if we could have major versions as tags as well (ie: like official images having 9.0.2 tagged as 9 too). Thanks :). ",
    "lnxmad": "Let's do this.\nFor those who are impatient (myself)\nI forked @jostyee's fork and pushed 9.0.2\nhttps://hub.docker.com/r/lnxmad/gitlab/tags/. ",
    "MaximumViciousDeer": "Found another way to change permissions for the folders via DSM. Not the ideal solution but it is working for now.. To elaborate on how I fixed the permissions, it was by setting them via DSM File Station first to 777 and then restrict via SSH inside Docker to the git user. For some reason it was not enough to change the permissions just via SSH, or I was doing something wrong.\nMy Docker data is also encrypted in DSM, maybe this is part of the problem.... ",
    "tanzeelkazi": "@Lorodion I am facing the exact same issue as you (Synology DSM 6 Docker with sameersbn:gitlab-9.0.5). Could you tell me how you resolved this issue since applying any sort of permissions from the terminal does not seem to help?. For now I have updated the USERMAP_UID and USERMAP_GID to 0. That's root but for my purposes it seems to be working fine.. So having set up gitlab to write to my mapped volume as root irked me so much that I set up and destroyed around 10 \"test\" gitlab docker containers on my synology to get to the root of the problem. It is after spending a whole day of spinning up docker gitlab instances, that I realized the git process within the container was choking on my mapped data volume since it had encryption turned on. Turned off encryption, set the USERMAP_UID and USERMAP_GID to be the same as the UID and GID assigned by docker (to the container volumes), and now it works like a charm.\nIn my case Insufficient permissions... didn't paint the real picture right away. Hope this helps somebody else running docker-gitlab under a Synology NAS.\nP.S: Maybe giving elevated privileges to the docker container could have fixed my problem, but I did NOT try it. Why? Even though it might have worked, I didn't feel it was a good security practice just like setting the UID and GID to root which I had done earlier.. > For some reason it was not enough to change the permissions just via SSH\nThat makes sense since setting chmod 777 on the docker data folder via SSH was not working for me as well.\nThanks for responding!. ",
    "guillaumedc": "I answerd my question...\nI had to specify my fqdn in my docker file.\nGITLAB_HOST=fqdn. ",
    "tomislater": "Yeah, we should merge this pull request: https://gitlab.com/gitlab-org/gitlab-ee/blob/master/doc/update/11.0-to-11.1.md#3-update-ruby. Any news? It would be a great option. . I have not noticed errors like these.. I have the same issue: #1693. Installing unzip package has resolved the issue.. We can close this issue.. ",
    "grossjo": "Can we get this merged in?. ",
    "souhaiebtar": "i used the one indicated by the site\nwget https://raw.githubusercontent.com/sameersbn/docker-gitlab/master/docker-compose.yml. i'm using docker on mac and i created those folder and i add permissions to user but it does not resolve the problem, i ended up using the official docker images on gitlab and it worked like a charm, but i wanted to use yours because the documentation is why better,. ",
    "onelson": "I'm seeing the same thing (on linux), though I'm not using compose.\nI'm running with -v /docker-data/gitlab:/home/git/data and using USERMAP_UID/USERMAP_GID.\nThe directory on the host is 775 with matching uid/gid.\nThe log output shows\nMapping UID and GID for git:git to 40102:2013\nchown: changing ownership of '/home/git/data': Operation not permitted\nInitializing logdir...\nInitializing datadir...\nchmod: changing permissions of '/home/git/data': Permission denied\nInitializing logdir...\nInitializing datadir...\nchmod: changing permissions of '/home/git/data': Permission denied\n... repeated .... I'm seeing the same thing (on linux), though I'm not using compose.\nI'm running with -v /docker-data/gitlab:/home/git/data and using USERMAP_UID/USERMAP_GID.\nThe directory on the host is 775 with matching uid/gid.\nThe log output shows\nMapping UID and GID for git:git to 40102:2013\nchown: changing ownership of '/home/git/data': Operation not permitted\nInitializing logdir...\nInitializing datadir...\nchmod: changing permissions of '/home/git/data': Permission denied\nInitializing logdir...\nInitializing datadir...\nchmod: changing permissions of '/home/git/data': Permission denied\n... repeated .... Yep - docker on linux:\nDocker version 1.12.3, build 6b644ec. Yep - docker on linux:\nDocker version 1.12.3, build 6b644ec. I've been messing with assets/runtime/functions to see if I can side-step the issue by prefixing some commands in initialize_data_dir() with exec_as_git but it feels a bit like pushing peas around my plate.\nThe init runs great when I don't use UID/GID mapping. Seems like some steps in this script should be run as the git user and some as root. Not sure how best to straddle the fence here.... ",
    "azizkhani": "change volumes like this  :Z\nvolumes:\n    - /u01/devops/gitlab:/home/git/data:Z. ",
    "Ludea": "Fix with a good configuration . ",
    "NetIds": "@Ludea same, i would like to set also github behind nginx-proxy. Could you post your final config? Thx. ",
    "metamorphious": "Thats the backdraw of generated passwords.. Until no it was no problem.\nI tried using double quotes as well as escaping with a \\. Makes no difference. The password is wrappend in '' inside the gitlab.yml config inside the gitlab container. So I think that is the place where it breaks.\nI looked up the logs inside the gitlab container. I found a repeating error message in the unicorn.stderr.log but I'm not sure if it helps:\nI, [2017-04-18T09:31:06.221681 #535]  INFO -- : Refreshing Gem list\n/usr/lib/ruby/2.3.0/psych.rb:379:in `parse': (<unknown>): did not find expected key while parsing a block mapping at line 247 column 9 (Psych::SyntaxError)\n    from /usr/lib/ruby/2.3.0/psych.rb:379:in `parse_stream'\n    from /usr/lib/ruby/2.3.0/psych.rb:327:in `parse'\n    from /usr/lib/ruby/2.3.0/psych.rb:254:in `load'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/settingslogic-2.0.9/lib/settingslogic.rb:103:in `initialize'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/settingslogic-2.0.9/lib/settingslogic.rb:60:in `new'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/settingslogic-2.0.9/lib/settingslogic.rb:60:in `instance'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/settingslogic-2.0.9/lib/settingslogic.rb:37:in `[]'\n    from /home/git/gitlab/config/initializers/1_settings.rb:113:in `<top (required)>'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/dependencies.rb:268:in `load'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/dependencies.rb:268:in `block in load'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/dependencies.rb:240:in `load_dependency'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/dependencies.rb:268:in `load'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/engine.rb:652:in `block in load_config_initializer'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/notifications.rb:166:in `instrument'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/engine.rb:651:in `load_config_initializer'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/engine.rb:616:in `block (2 levels) in <class:Engine>'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/engine.rb:615:in `each'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/engine.rb:615:in `block in <class:Engine>'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/initializable.rb:30:in `instance_exec'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/initializable.rb:30:in `run'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/initializable.rb:55:in `block in run_initializers'\n    from /usr/lib/ruby/2.3.0/tsort.rb:228:in `block in tsort_each'\n    from /usr/lib/ruby/2.3.0/tsort.rb:350:in `block (2 levels) in each_strongly_connected_component'\n    from /usr/lib/ruby/2.3.0/tsort.rb:422:in `block (2 levels) in each_strongly_connected_component_from'\n    from /usr/lib/ruby/2.3.0/tsort.rb:431:in `each_strongly_connected_component_from'\n    from /usr/lib/ruby/2.3.0/tsort.rb:421:in `block in each_strongly_connected_component_from'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/initializable.rb:44:in `each'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/initializable.rb:44:in `tsort_each_child'\n    from /usr/lib/ruby/2.3.0/tsort.rb:415:in `call'\n    from /usr/lib/ruby/2.3.0/tsort.rb:415:in `each_strongly_connected_component_from'\n    from /usr/lib/ruby/2.3.0/tsort.rb:349:in `block in each_strongly_connected_component'\n    from /usr/lib/ruby/2.3.0/tsort.rb:347:in `each'\n    from /usr/lib/ruby/2.3.0/tsort.rb:347:in `call'\n    from /usr/lib/ruby/2.3.0/tsort.rb:347:in `each_strongly_connected_component'\n    from /usr/lib/ruby/2.3.0/tsort.rb:226:in `tsort_each'\n    from /usr/lib/ruby/2.3.0/tsort.rb:205:in `tsort_each'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/initializable.rb:54:in `run_initializers'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/railties-4.2.8/lib/rails/application.rb:352:in `initialize!'\n    from /home/git/gitlab/config/environment.rb:5:in `<top (required)>'\n    from config.ru:19:in `require'\n    from config.ru:19:in `block in <main>'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rack-1.6.5/lib/rack/builder.rb:55:in `instance_eval'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rack-1.6.5/lib/rack/builder.rb:55:in `initialize'\n    from config.ru:1:in `new'\n    from config.ru:1:in `<main>'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/unicorn-5.1.0/lib/unicorn.rb:56:in `eval'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/unicorn-5.1.0/lib/unicorn.rb:56:in `block in builder'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/unicorn-5.1.0/bin/unicorn_rails:139:in `block in rails_builder'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/unicorn-5.1.0/lib/unicorn/http_server.rb:752:in `build_app!'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/unicorn-5.1.0/lib/unicorn/http_server.rb:129:in `start'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/unicorn-5.1.0/bin/unicorn_rails:209:in `<top (required)>'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/bin/unicorn_rails:22:in `load'\n    from /home/git/gitlab/vendor/bundle/ruby/2.3.0/bin/unicorn_rails:22:in `<main>'. Thanks for the tips and the help. ",
    "stepanorda": "Yes, it opens gitlab. . Yes that's what I was expecting to see.. It's built in gitlab now https://docs.gitlab.com/omnibus/gitlab-mattermost/ so you should only set one setting and run sudo gitlab-ctl reconfigure. Is it not implemented here yet?. Oh, my bad. Now I get it. Thank you for clearing things up!. I have a same problem.. @dotbalo just standard docker volume on host machine. ",
    "henry74": "I get this same error but my keys are correctly generated and a mix of alphanumeric characters.. ",
    "partytimex": "try sudo docker-compose up. ",
    "arturslogins": "And update for this issue?  I get this issue updating gitlab from 10.2.5 to 10.3.0. ",
    "thiago": "Any updates about this?. ",
    "albertoig": "I have the same issue on Ubuntu server.. ",
    "CAVACO-PT": "Thanks for you reply , i have gitlab running , just need to activate ldap so users in my company can login with their AD users in gitlab , but when i changed the gitlab.yml in the docker it would change back , do you know what files do i need to change to put ldap working   ???\ni need files that configure ldap : \n# A human-friendly name for your LDAP server. It is OK to change the label later,\n# for instance if you find out it is too large to fit on the web page.\n  #\n  # Example: 'Paris' or 'Acme, Ltd.'\n  label: 'LDAP'\n# Example: 'ldap.mydomain.com'\n  host: '_your_ldap_server'\n  # This port is an example, it is sometimes different but it is always an integer and not a string\n  port: 389\n  uid: 'sAMAccountName'\n  method: 'plain' # \"tls\" or \"ssl\" or \"plain\"\ndont know where they are in the synology side , have checked all of gitlab files , and the only place i found them was inside the docker , that doesnt allow change , \ncan u tell me where the files are to configure ldap for gitlab ??\ni willl ask synology for the update of docker no problem!!\n. i could only find that file inside the docker synology_gitlab , \n\ncould not find gitlab.yml outside docker , . when i change the gitlab.yml inside the terminal on that docker it changes back when i reboot the docket. Thanks for all the replys , iv been running git server on synology , then i heard of gitlab , and i installed the one from synology , to try it out , im on a company , that wants to start using gitlab , so if the one from synology is old , can u please point me to the right direction , have anyone documented the install of the right gitlab repo in synology without using the one they sypply ???\nif you please give a link or a few directions on how to install ??\nThanks you all. iv found this repo , is this the right one ??\nhttps://github.com/jboxberger/synology-gitlab. ok thanks ..\n1 - yes i know how to use ssh , iv been using ssh in synologys for years now no problem there\n2- yes i would be very useful\n3 - we are running in our company teamcity builds , we would like to integrate gitlab enviroment with teamcity later on , but yes we would like auto builds of projects\nthanks for the help. 4 - yes i already have docker container install , i could run on it \n5 - no need to acess from outside , we regulary use vpn to our company so we can use it only internaly . i already have a dns entry to the ip of the synology to use the adress internaly only. First of all thank you very much for you help and time , realy thanks\niv read all and done all , im doing a fresh install \ni already have a docker folder since its the defaul one when installing docker and created all that structure like you said \n\n. ups did a mistaque ... var and lib folders outside , will move them. all corrected \n\n. do i need to put in the file the : \nEnd result:\nKEY=VALUE\nor just these lines \nGITLAB_SECRETS_DB_KEY_BASE=ZWRhOWJjMjEyNjAxNTk3ODgyNWYyNGFkOTUyY2E1YjY2YTllNWY4MWEwNTU3ZmY4. ok all done , thanks. \n. done as well\n\n. havent asked you this ... the previous install of gitlab the one that synology uses , it installed mariadb , can we use maria db for the databases with this build ??. can i just use smtp env , ???. i only need the smtp to send emails , my question if i realy need to create the imap file. all done the smtp and imap files. sorry about all the trouble. will do that , and have friends with synology as well , will ask them to do that as well !!!. ok , iv created the file , i see where i can later enter the ids of the apps i want to use with gitlab. \n. \n. quick question , problem i encontered with the synology gitlab , it would not run if i set it to port 80 , even if i disabled the redirection of synology port 80 , is there any problem from gitlab from running in port 80 ???\nwhen i changed synology gitlab to port 90 it would run with no problems , with this build will it have the same problem with port 80 ??. it has a dns entry . ok thanks ... give me a few moments to create the step 8 in notepad ++ so to be carefull with yml spacing. and to configure its settings . this GitLab Runner Docker YML Config , what is the name of the file to create with its config ??. this GitLab Runner Docker YML Config , what is the name of the file to create with its config ??. i tough it was 2 files , your copy past was only 1 file but in 2 responses , i touhg the 2nd one was another file , but its only one docker-compose. got an error ,have to see if its something wrong\n\n. it gave an error , something is wrong in the docker compose i guess. the only things i changed iv put them with XXXXX\ndocker-compose.zip\n. \n. thank you very much. ok , thanks , the ldap , for the users to auth with domain acounts still need to be configured inside the docker ??. ok , its still downloading all the files i guess , we need to wait a bit\n\n. whats the next step ??. thanks you very much for the script , \nits still downloading , we still need to setup more things right ??. at the end it have an error \n\n. \nall is stopped do i need to start them ?. \nthis folder exists. iv did the chmod 777 , should i run the last command again so it downloads the creates all again ?. yes iv been creating all as root. yes i did 777 to all gitlab . yes -R\ndocker-compose -f  down says no such command filke. sorry my bad , spleed wrong. \n. still error. do i have to create a registry folder ??. the strangue thing is the folder exist\n. \ndrwxrwxrwx+ 3 root root 4096 Apr 18 22:03 @eaDir\ndrwxrwxrwx  4 root root 4096 Apr 20 10:20 gitlab\n. ahhh found the error , the name of the docker folder ... its with e little d ... and its trying with a bit D. synology created the directory .. with a little d ... . doing it  now. \n. gave an error for cert but started. its stopped here \n\nshould i wait ???. \n. still nothing .. .will wait a bit more . i hasnt created the gitlab container \nit says this \n\n. git lab container is external . skipping. removed from the docker compose the registry. what can i run to fix the gitlab container ?\n. how to check the ids ??\n\n. deleted /volume1/docker/gitlab/var/lib/gitlab  , it had a folder called shared , now going to run \ndocker-compose -f <path to docker-compose.yml up -d. when it runs it doesnt show creating the gitlab container\n\n. it gives the error of the image above ... still git lab doesnt apear . docker-compose.zip\n.   depends_on:\n      - gitlab-redis\n      - gitlab-postgresql\n    links:\n      - gitlab-redis:redis\n      - gitlab-postgresql:postgresql. anywere else ?. i used the file you copy pasted , it createad the git lab container , but its stoped \n\nand gave this error\n\n. got it running by creating the certs folder\n\n. waiting for it to come up. its running but the gitlab container stops after a bit \n\n. New Text Document.txt\n. here is the log of the container. \n. no its only 43% top. you want the logs of the gitlab container ?. 2017-04-20 12:05:37 stdout  Configuring gitlab...\n2017-04-20 12:05:37 stdout  Installing configuration templates...\n2017-04-20 12:05:37 stdout  Generating OpenSSH host keys... RSA1 RSA DSA ECDSA ED25519 \n2017-04-20 12:05:35 stdout  Initializing datadir...\n2017-04-20 12:05:35 stdout  Initializing logdir...\n2017-04-20 12:04:06 stdout  Mapping UID and GID for git:git to 1024:100. nop\n. \ni\nNew Text Document.txt\n. its done something else now. yes i run the rm commands u gave me. rm -rvf /volume1/docker/gitlab/var/lib/gitlab/\nrm -rvf /volume1/docker/gitlab/var/lib/postgresql/\nrm -rvf /volume1/docker/gitlab/var/lib/redis/*. \n. ok did all that ... what command u want me to run now to start ?. \n. \n. doing somthing it never did \n\n. \n. \n. the web page is not responding still. \n. sucesssssss\n\n. error 500 \n\n. page doesnt go out of this. im using the ip only http://ipadresss. \n. witch one ?. restarted container but error 500 , tryied to put ;3080/users/sign_in , same thing , you know the name of the log ??. Um Just trading something t\u00f4 ser um 30 min or  s\u00f3 uma ter back to it and tell you\nThanks. Eating something damm auto corrector\n. here is the log file , \nlog.zip\n. im seeing the docker compose to see if i can see anything wrong. still have this in the host \nGITLAB_HOST=\n. changed the \nGITLAB_HOST=<$gitlab$>\nwitch is the entry of the dns .. \nrelaunched the containers ... still have the same error 500\n. 2017/04/20 13:24:22 Send static file \"/home/git/gitlab/public/favicon.ico\" (\"\") for GET \"/favicon.ico\"\n192.168.40.210 [::1]:52820 - - [2017-04-20 13:24:22.252402897 +0100 BST] \"GET /favicon.ico HTTP/1.1\" 200 5430 \"http://192.168.40.210/\" \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" 0.000355\n2017/04/20 13:24:54 ErrorPage: serving predefined error page: 500. should i remove the line ??. just need to stop containers change file and up again or need to remake everything ?. to recreate i need to delete all the containers and folders ? like before ?. the name  gitlab has a Host (A) to the ip adress of the nas . the ip ?. gitlab. http://gitlab. removing the whole line \n-GITLAB_HOST=xxxxxx. did it .. rebuilding now . sucess\n\n. very happy ... thanks a lot for your time and pacience ... bue the root login is not working ... i have the docker compose open ... maybe its because the password had a . in it ???. nop ... trying root .. already  changed the pass ... and down and up the containers ... still invalid login with root and the pass in this line \n\nGITLAB_ROOT_PASSWORD=\n\nno . this time .. . that doesnt work as well ...  :S. \n. iv put the email here ... is it because of that ?\n      - GITLAB_ROOT_EMAIL=<$XXXXXXXXX$>.  iv changed this one as well .. its ok right ??\nenvironment:\n      - DB_EXTENSION=pg_trgm\n      - PG_TRUST_LOCALNET=true\n      - PG_PASSWORD=<$xxxxxx$>\n. it has the password of the DB . ok thanks. iv removed all <>, still not luck  , rm the containers files like before , and rebuilded everthing ... put the password:password : now its not goint in .. stuck in error 422\n\n. docker-compose.zip\n. tried to put the 5!life... .but now the 422 error , doesnt let me in ... since iv rm the containers\n. \n. what was the command .. chown admin:users ??. itlab:3080 [::1]:53949 - - [2017-04-20 16:22:13.44474118 +0100 BST] \"GET /favicon.ico HTTP/1.1\" 200 5430 \"http://gitlab:3080/users/sign_in\" \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" 0.007029\n2017/04/20 16:22:23 ErrorPage: serving predefined error page: 422. ![image](https://cloud.githubusercontent.com/assets/9946471/25239434/e010961e-25e7-11e7-82e8-dfe2084bf74e.png\nGITLAB_ROOT_PASSWORD=5iveL!fe. still login error ... with that pass. its the same .. with :3080 or not ... cant login ... wtf .. pass is good. log.zip\n. yes its gitlab.fullsix.local\nfullsix.local is the domain \niv recived this in the email \n\nbut after unlock still same error\n. so the user exists .. why isnt it acepting the pass in the docker-compose . i didnt change anything in the 0auth .... could it be because of that ???\nOAuth Configuration\nOAUTH_ENABLED=false\nOAUTH_AUTO_SIGN_IN_WITH_PROVIDER=\nOAUTH_ALLOW_SSO=\nOAUTH_BLOCK_AUTO_CREATED_USERS=true\nOAUTH_AUTO_LINK_LDAP_USER=false\nOAUTH_AUTO_LINK_SAML_USER=false\nOAUTH_EXTERNAL_PROVIDERS=\n. do you have skype or other messaging tool , or do you want to keep talking here ?\n. ok did the folder ... containers are going up with the file you posted. \n. iv tried ldap ... the login problem started again ... after just putting the backup compose back .. still didnt work ... when i reverted to you compose with no volumes , started working agian .. now when u put the volumes back ... the problem of the login comes back .... can it be somethiing corrupted in the volumes ???\nwhat should i do ??. got it working after deleting content in the volumes . Got all the normal stuff working ... fine with password now .... just needed to delete everything inside the containers ,, maybe something there corupted .... trying to activate ldap ... the module is up ... but the authentication is not working with domain acounts  , can u check if my ldap are good ??\n  - LDAP_ENABLED=true\n  - LDAP_LABEL=XXXXX\n  - LDAP_HOST=XXXXXXXXXXX\n  - LDAP_PORT=389\n  - LDAP_UID=XXXXXXXXXXX\n  - LDAP_METHOD=plain\n  - LDAP_BIND_DN=uid=userid,CN=Binding Services,CN=Users,DC=fullsix,DC=local\n  - LDAP_PASS=XXXXXXXXXXXXXXXXXXXXXXXX\n  - LDAP_ACTIVE_DIRECTORY=true\n  - LDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true. Could not authenticate you from Ldapmain because \"Invalid credentials\".. improved a bit .. .got a new message\n\nCould not authenticate you from Ldapmain because \"Invalid filter syntax.\".. my synology has join domain of the company , im trying to get this working , but so far nothing ... got invalid filter syntacx with LDAP_ACTIVE_DIRECTORY= false\n  - LDAP_ENABLED=true\n  - LDAP_LABEL=xxxxx\n  - LDAP_HOST=xxxxx.local\n  - LDAP_PORT=389\n  - LDAP_UID=admin\n  - LDAP_BASE=CN=FULLSIX,CN=Users,DC=Fullsix,DC=net\n  - LDAP_BIND_DN=CN=admin,CN=Users,DC=Fullsix,DC=net\n  - LDAP_PASS=XXXX\n  - LDAP_METHOD=plain\n  - LDAP_ACTIVE_DIRECTORY=false\n  - LDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\n\nCan u see if anything is wrong ??. i just want to put it with AD ...iv been trying a lot of diferent variables , but nothing ... . yes .... or it cant ??. i have an ad server ... i tought it could connect with it . \n      - LDAP_ENABLED=true\n      - LDAP_LABEL=XXXXX\n      - LDAP_HOST=XXXX\n      - LDAP_PORT=389\n      - LDAP_UID=XXXXX\n      - LDAP_PASS=XXXXXX.\n      - LDAP_BIND_DN=CN=XXXXX,DC=fullsix,DC=local\n      - LDAP_BASE=OU=Users,OU=FULLSIX,DC=fullsix,DC=local\n      - LDAP_USER_FILTER=(memberOf=CN=Users,CN=FULLSIX,DC=fullsix,DC=local)\n      - LDAP_METHOD=plain\n      - LDAP_ACTIVE_DIRECTORY=true\n      - LDAP_ALLOW_USERNAME_OR_EMAIL_LOGIN=true\ni tried that .. gives filter error. should i remove LDAP_UID , and LDAP_PASSWORD ??. dont know if they are correct \ni have users in 2 OU in the AD ... FULLSIX and USERS ..... \nFullsix has more ou inside it for each department .... users has ony users . ok installing the ldap browser. dont know where to put  the username for the user \npassword is in the LDAP_PASS\nwhere goes the username ??. i cant connect with any user using simple or md5 .... but with GSS negociate ... my user connects. does gitlab support gss like the browser ??. yes yes thanks a hugeeeeee deal to @GJRTimmer for his huge help ..... everything is working even ldap .. thanks for you help as well @avluis  , everything is good now..... we dont use  Mailserver sorry , i got gitlab working with the exchange server i got here in the company\nThank you all. a new version has came out !!! . did a copy of my user that can enter ... and the copy cannot enter .. so its not a group in the AD .. must be somewhere else !!!. dont know if this has anything to do with .. but the users that can enter where created in the previous version 9.05. 403 seems to be a acess to content denied .. is there anywhere that says who has permitions to acess gitlab ??. i dint copy anything .. just rename the version inside the docker-compose .. and started the scrypt .. and it upgraded without any problems .... in the active directory .. i did a copy of my user inside AD to another with a diferente name so i could check if a AD user simular to mine could enter and it cant !!!\nyes i can login with root and .. with 2 users from AD .. new users give that error. \ni have 3 users that entered ok when i had the 9.0.5. , then i upgraded .. and didnt try to login with other users until today. no no .. no more users in the ad cant enter ... just the ones that are in gitlab ... all the 200 users that try to login give  403. the 2 users of ad that i tried are FULL AD admins ... but when i do a ad copy of my users and create a full ad admin as well it doesnt enter .. so its not  a AD power .. must be a gitlab permition or problem. yes .. no problem ... just to login with gitlab. can i clean cache in gitlab ??. what are the folders to clean i didnt write them down ???. sudo gitlab-rake cache:clear\ni run this command inside the docker ??. dont know if this is a new version problem .. or if its something wrong here .. because its the first time with the new version i try to login with a user from ad since upgrade. the thing is the 2 users that entered with 9.0.5.. work fine ..bue since they are ad admins .. i tought maybe a permition thing .. but a user with same permitions cannot enter. can i run the image with the 9.0.5 . that i have here in another folder .. or because it ugpraded componentes it cant run ??. i removed the volumes from the gitlab image test that has the 9.0.5 .. and will try also. yap .. .with 9.0.5 ... all the users form AD can enter without any problems .. just tested with 9.0.5 test image ... it was the image we created before upgrade. there is some problem with new version ... or something went wrong ... how can i revert the main instance to 9.0.5 ... i have to delete the volumes ... or can i run some command ... 9.0.5 works fine. i didnt set a filter yet !!!. with version 9.0.5 it works fine . reverted everything to 9.0.5 deleted the folders of the volumes ... and changed docker-compose back to 9.0.5 on main image ... started up .. and its on 9.0.5 and working ... . yes everyone has a diferent email .... user.name@domain.com... . quick question .. the files .env .. you moved them to arquive .. they are no longer needed ??? or if i need to change somthing in smtp settings i can changed in the smtp.env still ??\n. so .... for now .. just remain on 9.0.5... if you need ldap. no .. could not run it inside gitlab container gave an error .. maybe im doing something wrong .... . Issue reproduced, I get a 403 on a newly created user in LDAP (OpenLDAP) but issue seems to be the same.\nthe users i was trying were not created recently ... have been here for more than a year in AD ... so its not only for recently created user . where can i post the output of the rake ??. Server: ldapmain                                                                                                     \nLDAP authentication... Success                                                                                       \nLDAP users with access to your GitLab server (only showing the first 100 results)  \nChecking LDAP ... Finished  \n. LDAP users with access to your GitLab server (only showing the first 100 results)                                    \n        DN: CN=Exchange Install Domain Servers,CN=Microsoft Exchange System Objects,DC=xxx,DC=xxx              \nsAMAccountName: $xxxxxxxxxxxxxxxxxxx  . sAMAccountName: xxxxx-xxxx$                                                                                     \n        DN: CN=xxxxxxxxxxxx,OU=xxxxx,OU=xxxxx,DC=xxxxx,DC=xxxx                                            \nsAMAccountName: xxxx.xxxx                                                                                        \nChecking LDAP ... Finished                                               . thats the normal output. can u give me of the new version to put in the issue ??. i have to upgrade again .. because i deleted the volumes to revert to the old version. so far i wrote this\nHello ... after upgrade to the 9.1.0-1 ... could not login with ldap .. or open ldap ... users in and active directory cannot login ... \nAfter doing a test with a new system with 9.0.5 it works fine ... only users that already had logged in , in previous versions can login ... users that never logged in they cannot login in 9.1.0-1 with ldap it gives and 403 error.\ngit@gitlab:~/gitlab$ bundle exec rake gitlab:ldap:check works fine in 9.0.5 ...  \n9.0.5\ngit@gitlab:~/gitlab$ bundle exec rake gitlab:ldap:check RAILS_ENV=production\nChecking LDAP ...\nServer: ldapmain\nLDAP authentication... Success\nLDAP users with access to your GitLab server (only showing the first 100 results)\n        DN: uid=*,cn=users,dc=*,dc=nl       uid: *\n        DN: uid=*,cn=users,dc=*,dc=nl      uid: *\n        DN: uid=*,cn=users,dc=*,dc=nl   uid: *\n        DN: uid=*,cn=users,dc=*,dc=nl       uid: *\n        DN: uid=gitlab,cn=users,dc=**,dc=nl      uid: gitlab\nChecking LDAP ... Finished\n. in mine .. the already registered users .. it worked .... it the output in 9.1.0-1 the same as in 9.0.5 ?\ngit@gitlab:~/gitlab$ bundle exec rake gitlab:ldap:check RAILS_ENV=production\nChecking LDAP ...\nServer: ldapmain\nLDAP authentication... Success\nLDAP users with access to your GitLab server (only showing the first 100 results)\n        DN: uid=*,cn=users,dc=*,dc=nl       uid: *\n        DN: uid=*,cn=users,dc=*,dc=nl      uid: *\n        DN: uid=*,cn=users,dc=*,dc=nl   uid: *\n        DN: uid=*,cn=users,dc=*,dc=nl       uid: *\n        DN: uid=gitlab,cn=users,dc=**,dc=nl      uid: gitlab\nChecking LDAP ... Finished\n ???. delete the volumes and create directly from new version ?? ... what about ppl that have a lot of work ther e??. you sair reset the content .. i tought the volumes. issue created thanks for the logs\nhttps://gitlab.com/gitlab-org/gitlab-ce/issues/31449. ok already changed version. done .. thanks . Thanks for you help in identifyng . ... to enable workhorse like u have .. its something in the docker-compose as well ??. trying to add the gitlab registry .. but i get an error ..\nERROR: Validation failed in file '/volume1/docker/gitlab/etc/docker-compose.yml', reason(s):\nservices.gitlab-registry.ports contains an invalid type, it should be an array\ngitlab-registry:\n    container_name: gitlab-registry\n    hostname: registry\n    restart: always\n    image: registry:2.5.1\n    ports:\n      -3500:5000\n    volumes:\n      - /volume1/docker/gitlab/var/lib/gitlab/shared/registry:/resgistry\n      - /volume1/docker/gitlab/etc/certs:/certs\n    environment:\n      - REGISTRY_LOG_LEVEL=info\n      - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n      - REGISTRY_AUTH_TOKEN_REALM=https://gitlab>/jwt/auth\n      - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n      - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n      - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/cert.pem\n      - REGISTRY_STORAGE_DELETE_ENABLED=true\n. got it working but gave a warning \n[DONE]\nWARNING: Some networks were defined but are not used by any service: default:\nCreating network \"gitlab_default\" with the default driver\nCreating gitlab-registry\nCreating gitlab-redis\nCreating gitlab-postgresql\nCreating gitlab\n. ",
    "truck0321": "I'm having the same problem.  Relevant docker-compose.yml entries below:\n```yaml\n  gitlab:\n    restart: always\n    image: sameersbn/gitlab:9.0.5\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"80:80\"\n    - \"443:443\"\n    - \"10022:22\"\n    volumes:\n    - /opt/docker/gitlab/gitlab:/home/git/data:Z\n    environment:\n- GITLAB_HTTPS=true\n- SSL_SELF_SIGNED=false\n- SSL_CERTIFICATE_PATH=/home/git/data/certs/gitlab-public.crt\n- SSL_KEY_PATH=/home/git/data/certs/gitlab-private.key\n- SSL_DHPARAM_PATH=/home/git/data/certs/dhparam.pem\n\n. Here is the error.\nInitializing logdir...\nInitializing datadir...\nUpdating CA certificates...\nfind: ./ACCVRAIZ1.pem': No such file or directory\nfind:./ACEDICOM_Root.pem': No such file or directory\nfind: ./AC_Ra\\303\\255z_Certic\\303\\241mara_S.A..pem': No such file or directory\nfind:./Actalis_Authentication_Root_CA.pem': No such file or directory\nfind: ./AddTrust_External_Root.pem': No such file or directory\nfind:./AddTrust_Low-Value_Services_Root.pem': No such file or directory\nfind: ./AddTrust_Public_Services_Root.pem': No such file or directory\nfind:./AddTrust_Qualified_Certificates_Root.pem': No such file or directory\nfind: ./AffirmTrust_Commercial.pem': No such file or directory\nfind:./AffirmTrust_Networking.pem': No such file or directory\nfind: ./AffirmTrust_Premium.pem': No such file or directory\nfind:./AffirmTrust_Premium_ECC.pem': No such file or directory\nfind: ./ApplicationCA_-_Japanese_Government.pem': No such file or directory\nfind:./Atos_TrustedRoot_2011.pem': No such file or directory\nfind: ./Autoridad_de_Certificacion_Firmaprofesional_CIF_A62634068.pem': No such file or directory\nfind:./Baltimore_CyberTrust_Root.pem': No such file or directory\nfind: ./Buypass_Class_2_CA_1.pem': No such file or directory\nfind:./Buypass_Class_2_Root_CA.pem': No such file or directory\nfind: ./Buypass_Class_3_Root_CA.pem': No such file or directory\nfind:./CA_Disig.pem': No such file or directory\nfind: ./CA_Disig_Root_R1.pem': No such file or directory\nfind:./CA_Disig_Root_R2.pem': No such file or directory\nfind: ./CA_WoSign_ECC_Root.pem': No such file or directory\nfind:./CFCA_EV_ROOT.pem': No such file or directory\nfind: ./CNNIC_ROOT.pem': No such file or directory\nfind:./COMODO_Certification_Authority.pem': No such file or directory\nfind: ./COMODO_ECC_Certification_Authority.pem': No such file or directory\nfind:./COMODO_RSA_Certification_Authority.pem': No such file or directory\nfind: ./Camerfirma_Chambers_of_Commerce_Root.pem': No such file or directory\nfind:./Camerfirma_Global_Chambersign_Root.pem': No such file or directory\nfind: ./Certification_Authority_of_WoSign_G2.pem': No such file or directory\nfind:./Certigna.pem': No such file or directory\nfind: ./Certinomis_-_Autorit\\303\\251_Racine.pem': No such file or directory\nfind:./Certinomis_-Root_CA.pem': No such file or directory\nfind: ./Certplus_Class_2_Primary_CA.pem': No such file or directory\nfind:./Certum_Root_CA.pem': No such file or directory\nfind: ./Certum_Trusted_Network_CA.pem': No such file or directory\nfind:./Chambers_of_Commerce_Root-2008.pem': No such file or directory\nfind: ./China_Internet_Network_Information_Center_EV_Certificates_Root.pem': No such file or directory\nfind:./ComSign_CA.pem': No such file or directory\nfind: ./Comodo_AAA_Services_root.pem': No such file or directory\nfind:./Comodo_Secure_Services_root.pem': No such file or directory\nfind: ./Comodo_Trusted_Services_root.pem': No such file or directory\nfind:./Cybertrust_Global_Root.pem': No such file or directory\nfind: ./D-TRUST_Root_Class_3_CA_2_2009.pem': No such file or directory\nfind:./D-TRUST_Root_Class_3_CA_2_EV_2009.pem': No such file or directory\nfind: ./DST_ACES_CA_X6.pem': No such file or directory\nfind:./DST_Root_CA_X3.pem': No such file or directory\nfind: ./Deutsche_Telekom_Root_CA_2.pem': No such file or directory\nfind:./DigiCert_Assured_ID_Root_CA.pem': No such file or directory\nfind: ./DigiCert_Assured_ID_Root_G2.pem': No such file or directory\nfind:./DigiCert_Assured_ID_Root_G3.pem': No such file or directory\nfind: ./DigiCert_Global_Root_CA.pem': No such file or directory\nfind:./DigiCert_Global_Root_G2.pem': No such file or directory\nfind: ./DigiCert_Global_Root_G3.pem': No such file or directory\nfind:./DigiCert_High_Assurance_EV_Root_CA.pem': No such file or directory\nfind: ./DigiCert_Trusted_Root_G4.pem': No such file or directory\nfind:./E-Tugra_Certification_Authority.pem': No such file or directory\nfind: ./EBG_Elektronik_Sertifika_Hizmet_Sa\\304\\237lay\\304\\261c\\304\\261s\\304\\261.pem': No such file or directory\nfind:./EC-ACC.pem': No such file or directory\nfind: ./EE_Certification_Centre_Root_CA.pem': No such file or directory\nfind:./Entrust.net_Premium_2048_Secure_Server_CA.pem': No such file or directory\nfind: ./Entrust_Root_Certification_Authority.pem': No such file or directory\nfind:./Entrust_Root_Certification_Authority-EC1.pem': No such file or directory\nfind: ./Entrust_Root_Certification_Authority_-_G2.pem': No such file or directory\nfind:./Equifax_Secure_CA.pem': No such file or directory\nfind: ./Equifax_Secure_Global_eBusiness_CA.pem': No such file or directory\nfind:./Equifax_Secure_eBusiness_CA_1.pem': No such file or directory\nfind: ./GeoTrust_Global_CA.pem': No such file or directory\nfind:./GeoTrust_Global_CA_2.pem': No such file or directory\nfind: ./GeoTrust_Primary_Certification_Authority.pem': No such file or directory\nfind:./GeoTrust_Primary_Certification_Authority-G2.pem': No such file or directory\nfind: ./GeoTrust_Primary_Certification_Authority_-_G3.pem': No such file or directory\nfind:./GeoTrust_Universal_CA.pem': No such file or directory\nfind: ./GeoTrust_Universal_CA_2.pem': No such file or directory\nfind:./GlobalSign_ECC_Root_CA-R4.pem': No such file or directory\nfind: ./GlobalSign_ECC_Root_CA_-_R5.pem': No such file or directory\nfind:./GlobalSign_Root_CA.pem': No such file or directory\nfind: ./GlobalSign_Root_CA_-_R2.pem': No such file or directory\nfind:./GlobalSign_Root_CA-R3.pem': No such file or directory\nfind: ./Global_Chambersign_Root_-_2008.pem': No such file or directory\nfind:./Go_Daddy_Class_2_CA.pem': No such file or directory\nfind: ./Go_Daddy_Root_Certificate_Authority_-_G2.pem': No such file or directory\nfind:./Hellenic_Academic_and_Research_Institutions_RootCA_2011.pem': No such file or directory\nfind: ./Hongkong_Post_Root_CA_1.pem': No such file or directory\nfind:./IGC_A.pem': No such file or directory\nfind: ./IdenTrust_Commercial_Root_CA_1.pem': No such file or directory\nfind:./IdenTrust_Public_Sector_Root_CA_1.pem': No such file or directory\nfind: ./Izenpe.com.pem': No such file or directory\nfind:./Juur-SK.pem': No such file or directory\nfind: ./Microsec_e-Szigno_Root_CA.pem': No such file or directory\nfind:./Microsec_e-Szigno_Root_CA_2009.pem': No such file or directory\nfind: ./NetLock_Arany_=Class_Gold=_F\\305\\221tan\\303\\272s\\303\\255tv\\303\\241ny.pem': No such file or directory\nfind:./NetLock_Business=Class_B=Root.pem': No such file or directory\nfind: ./NetLock_Express_=Class_C=_Root.pem': No such file or directory\nfind:./NetLock_Notary=Class_A=Root.pem': No such file or directory\nfind: ./NetLock_Qualified_=Class_QA=_Root.pem': No such file or directory\nfind:./Network_Solutions_Certificate_Authority.pem': No such file or directory\nfind: ./OISTE_WISeKey_Global_Root_GA_CA.pem': No such file or directory\nfind:./OISTE_WISeKey_Global_Root_GB_CA.pem': No such file or directory\nfind: ./PSCProcert.pem': No such file or directory\nfind:./QuoVadis_Root_CA.pem': No such file or directory\nfind: ./QuoVadis_Root_CA_1_G3.pem': No such file or directory\nfind:./QuoVadis_Root_CA_2.pem': No such file or directory\nfind: ./QuoVadis_Root_CA_2_G3.pem': No such file or directory\nfind:./QuoVadis_Root_CA_3.pem': No such file or directory\nfind: ./QuoVadis_Root_CA_3_G3.pem': No such file or directory\nfind:./RSA_Security_2048_v3.pem': No such file or directory\nfind: ./Root_CA_Generalitat_Valenciana.pem': No such file or directory\nfind:./S-TRUST_Authentication_and_Encryption_Root_CA_2005_PN.pem': No such file or directory\nfind: ./S-TRUST_Universal_Root_CA.pem': No such file or directory\nfind:./SecureSign_RootCA11.pem': No such file or directory\nfind: ./SecureTrust_CA.pem': No such file or directory\nfind:./Secure_Global_CA.pem': No such file or directory\nfind: ./Security_Communication_EV_RootCA1.pem': No such file or directory\nfind:./Security_Communication_RootCA2.pem': No such file or directory\nfind: ./Security_Communication_Root_CA.pem': No such file or directory\nfind:./Sonera_Class_1_Root_CA.pem': No such file or directory\nfind: ./Sonera_Class_2_Root_CA.pem': No such file or directory\nfind:./Staat_der_Nederlanden_EV_Root_CA.pem': No such file or directory\nfind: ./Staat_der_Nederlanden_Root_CA.pem': No such file or directory\nfind:./Staat_der_Nederlanden_Root_CA-G2.pem': No such file or directory\nfind: ./Staat_der_Nederlanden_Root_CA_-_G3.pem': No such file or directory\nfind:./Starfield_Class_2_CA.pem': No such file or directory\nfind: ./Starfield_Root_Certificate_Authority_-_G2.pem': No such file or directory\nfind:./Starfield_Services_Root_Certificate_Authority-G2.pem': No such file or directory\nfind: ./StartCom_Certification_Authority.pem': No such file or directory\nfind:./StartCom_Certification_Authority_2.pem': No such file or directory\nfind: ./StartCom_Certification_Authority_G2.pem': No such file or directory\nfind:./SwissSign_Gold_CA-G2.pem': No such file or directory\nfind: ./SwissSign_Platinum_CA_-_G2.pem': No such file or directory\nfind:./SwissSign_Silver_CA-G2.pem': No such file or directory\nfind: ./Swisscom_Root_CA_1.pem': No such file or directory\nfind:./Swisscom_Root_CA_2.pem': No such file or directory\nfind: ./Swisscom_Root_EV_CA_2.pem': No such file or directory\nfind:./T-TeleSec_GlobalRoot_Class_2.pem': No such file or directory\nfind: ./T-TeleSec_GlobalRoot_Class_3.pem': No such file or directory\nfind:./TC_TrustCenter_Class_3_CA_II.pem': No such file or directory\nfind: ./TURKTRUST_Certificate_Services_Provider_Root_2007.pem': No such file or directory\nfind:./TWCA_Global_Root_CA.pem': No such file or directory\nfind: ./TWCA_Root_Certification_Authority.pem': No such file or directory\nfind:./Taiwan_GRCA.pem': No such file or directory\nfind: ./TeliaSonera_Root_CA_v1.pem': No such file or directory\nfind:./Trustis_FPS_Root_CA.pem': No such file or directory\nfind: ./T\\303\\234B\\304\\260TAK_UEKAE_K\\303\\266k_Sertifika_Hizmet_Sa\\304\\237lay\\304\\261c\\304\\261s\\304\\261_-_S\\303\\274r\\303\\274m_3.pem': No such file or directory\nfind:./T\\303\\234RKTRUST_Elektronik_Sertifika_Hizmet_Sa\\304\\237lay\\304\\261c\\304\\261s\\304\\261_H5.pem': No such file or directory\nfind: ./T\\303\\234RKTRUST_Elektronik_Sertifika_Hizmet_Sa\\304\\237lay\\304\\261c\\304\\261s\\304\\261_H6.pem': No such file or directory\nfind:./USERTrust_ECC_Certification_Authority.pem': No such file or directory\nfind: ./USERTrust_RSA_Certification_Authority.pem': No such file or directory\nfind:./UTN_USERFirst_Email_Root_CA.pem': No such file or directory\nfind: ./UTN_USERFirst_Hardware_Root_CA.pem': No such file or directory\nfind:./VeriSign_Universal_Root_Certification_Authority.pem': No such file or directory\nfind: ./VeriSign_Class_3_Public_Primary_Certification_Authority_-_G4.pem': No such file or directory\nfind:./VeriSign_Class_3_Public_Primary_Certification_Authority-G5.pem': No such file or directory\nfind: ./Verisign_Class_1_Public_Primary_Certification_Authority.pem': No such file or directory\nfind:./Verisign_Class_1_Public_Primary_Certification_Authority-G2.pem': No such file or directory\nfind: ./Verisign_Class_1_Public_Primary_Certification_Authority_-_G3.pem': No such file or directory\nfind:./Verisign_Class_2_Public_Primary_Certification_Authority-G2.pem': No such file or directory\nfind: ./Verisign_Class_2_Public_Primary_Certification_Authority_-_G3.pem': No such file or directory\nfind:./Verisign_Class_3_Public_Primary_Certification_Authority.pem': No such file or directory\nfind: ./Verisign_Class_3_Public_Primary_Certification_Authority_-_G2.pem': No such file or directory\nfind:./Verisign_Class_3_Public_Primary_Certification_Authority-G3.pem': No such file or directory\nfind: ./Verisign_Class_3_Public_Primary_Certification_Authority_2.pem': No such file or directory\nfind:./Visa_eCommerce_Root.pem': No such file or directory\nfind: ./WellsSecure_Public_Root_Certificate_Authority.pem': No such file or directory\nfind:./WoSign.pem': No such file or directory\nfind: ./WoSign_China.pem': No such file or directory\nfind:./XRamp_Global_CA_Root.pem': No such file or directory\nfind: ./certSIGN_ROOT_CA.pem': No such file or directory\nfind:./ePKI_Root_Certification_Authority.pem': No such file or directory\nfind: ./thawte_Primary_Root_CA.pem': No such file or directory\nfind:./thawte_Primary_Root_CA-G2.pem': No such file or directory\nfind: `./thawte_Primary_Root_CA-_G3.pem': No such file or directory\nError opening Certificate ca-certificates.crt\n140642280973984:error:02001002:system library:fopen:No such file or directory:bss_file.c:398:fopen('ca-certificates.crt','r')\n140642280973984:error:20074002:BIO routines:FILE_CTRL:system lib:bss_file.c:400:\nunable to load certificate\nWARNING: ca-certificates.crt does not contain a certificate or CRL: skipping\nInstalling configuration templates...\nSSL Key, SSL Certificate and DHParam were not found.\nAssuming that the container is running behind a HTTPS enabled load balancer.\nConfiguring gitlab...\nConfiguring gitlab::database.\nConfiguring gitlab::redis\nConfiguring gitlab::secrets...\nConfiguring gitlab::sidekiq...\nConfiguring gitlab::gitlab-workhorse...\nConfiguring gitlab::unicorn...\nConfiguring gitlab::timezone...\nConfiguring gitlab::rack_attack...\nConfiguring gitlab::ci...\nConfiguring gitlab::artifacts...\nConfiguring gitlab::lfs...\nConfiguring gitlab::mattermost...\nConfiguring gitlab::project_features...\nConfiguring gitlab::smtp_settings...\nConfiguring gitlab::oauth...\nConfiguring gitlab::ldap...\nConfiguring gitlab::backups...\nConfiguring gitlab::backups::schedule...\nConfiguring gitlab::registry...\nConfiguring gitlab::pages...\nConfiguring gitlab-shell...\nConfiguring nginx...\nConfiguring nginx::gitlab...\nConfiguring nginx::gitlab::hsts...\n2017-04-20 13:47:41,444 CRIT Supervisor running as root (no user in config file)\n2017-04-20 13:47:41,445 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\n2017-04-20 13:47:41,445 WARN Included extra file \"/etc/supervisor/conf.d/gitlab-workhorse.conf\" during parsing\n2017-04-20 13:47:41,445 WARN Included extra file \"/etc/supervisor/conf.d/mail_room.conf\" during parsing\n2017-04-20 13:47:41,445 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\n2017-04-20 13:47:41,445 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\n2017-04-20 13:47:41,445 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\n2017-04-20 13:47:41,445 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\n2017-04-20 13:47:41,462 INFO RPC interface 'supervisor' initialized\n2017-04-20 13:47:41,462 CRIT Server 'unix_http_server' running without any HTTP authentication checking\n2017-04-20 13:47:41,462 INFO supervisord started with pid 1\n2017-04-20 13:47:42,465 INFO spawned: 'sidekiq' with pid 3168\n2017-04-20 13:47:42,466 INFO spawned: 'unicorn' with pid 3169\n2017-04-20 13:47:42,468 INFO spawned: 'gitlab-workhorse' with pid 3170\n2017-04-20 13:47:42,469 INFO spawned: 'cron' with pid 3171\n2017-04-20 13:47:42,470 INFO spawned: 'nginx' with pid 3172\n2017-04-20 13:47:42,471 INFO spawned: 'sshd' with pid 3173\n2017-04-20 13:47:44,224 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2017-04-20 13:47:44,224 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2017-04-20 13:47:44,224 INFO success: gitlab-workhorse entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2017-04-20 13:47:44,224 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2017-04-20 13:47:44,224 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2017-04-20 13:47:44,225 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2017-04-20 13:47:54,119 INFO exited: sidekiq (exit status 1; not expected)\n2017-04-20 13:47:55,120 INFO spawned: 'sidekiq' with pid 3189\n2017-04-20 13:47:56,122 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\nUpdating CA certificates\n```. ",
    "jonkristian": "I managed to get a working pem file by following this.\nWhat I did was move my chain file to dhparam.pem and generate the pem file: openssl dhparam -out tmp.pem 2048 then apply that to my chain file like this: cat tmp.pem >> dhparam.pam\nEDIT: Spoke too soon. It's not working. I wonder if it's possible to turn off dhparam?. ",
    "lsm": "Add \nexec_as_git cp ${GITLAB_INSTALL_DIR}/config/resque.yml.example ${GITLAB_INSTALL_DIR}/config/resque.yml\nto file assets/build/install.sh before rake bundle the assets.. https://github.com/sameersbn/docker-gitlab/pull/1208 here you go @solidnerd . ",
    "yfoelling": "this should fix #1121 . Hey,\nthe if condition you made is in \"$()\", which means you test if the returned output string is NOT 0 characters long.\nAnd you suppress every output, so in every case it would be executed.\nThis causes every restart of the container to add a new cron job.\nExamples for the IF clause:\nif [[ 0 || 0 ]]; then echo true; fi\ntrue\nif [[ 1 || 0 ]]; then echo true; fi\ntrue\nif [[ 0 || 1 ]]; then echo true; fi\ntrue\nif [[ 1 || 1 ]]; then echo true; fi\ntrue\n```\nif [[ \"\" ]]; then echo true; fi\nif [[ ! \"\" ]]; then echo true; fi\ntrue\n```\nExample of crontab file:\n00 04 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 04 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 04 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 04 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 04 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\nPutting the if clause without \"[[ ]]\" causes bash to listen only to the exit code of the command execution!\n. Is there anything i could add, so you would merge this @solidnerd ?\nI\u2018m patching this fix manually after every upgrade.. It works and its used in production... ",
    "froque": "I have version 9.5.5 and it is affected by this bug. This pull request seems OK, what is the delay for merging ? . I was having the opposite problem, trying to enable it. The environment variable GITLAB_GRAVATAR_ENABLED doesn't seem to do anything. \nThere is a column gravatar_enabled in table application_settings. \nThere is a interface to change in http://localhost:8080/admin/application_settings: \"Gravatar enabled\"\n . check issue #1233, that may be what you want. @solidnerd as I said, I think pull request #1472  should also be merged. . ",
    "spelunker": "@solidnerd \nSteps to reproduce this issue:\n\nClone git repo.\nbash\ngit clone https://github.com/sameersbn/docker-gitlab\ncd docker-gitlab\nMake dir for volumes and change permissions\nbash\nsudo mkdir -p /srv/docker/gitlab/redis\nsudo mkdir -p /srv/docker/gitlab/postgresql\nsudo mkdir -p /srv/docker/gitlab/gitlab\nsudo chown your_name:your_group /srv/docker/gitlab\nsudo chown your_name:your_group /srv/docker/gitlab/*\nDocker compose up\nbash\ndocker-compose up -d\nAfter several minutes, check container names\nbash\ndocker ps\nCONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                                                   NAMES\n0f54b8a1ec1b        sameersbn/gitlab:10.1.1      \"/sbin/entrypoint....\"   5 minutes ago       Up 5 minutes        443/tcp, 0.0.0.0:10022->22/tcp, 0.0.0.0:10080->80/tcp   dockergitlab_gitlab_1\n7a9d8b8c37aa        sameersbn/postgresql:9.6-2   \"/sbin/entrypoint.sh\"    5 minutes ago       Up 5 minutes        5432/tcp                                                dockergitlab_postgresql_1\n8cd4ab618e4b        sameersbn/redis:latest       \"/sbin/entrypoint....\"   5 minutes ago       Up 5 minutes        6379/tcp                                                dockergitlab_redis_1\nCheck cron table in gitlab container\nbash\ndocker exec -it dockergitlab_gitlab_1 bash\nroot@0f54b8a1ec1b:/home/git/gitlab# crontab -u git -l\n00 01 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\nroot@0f54b8a1ec1b:/home/git/gitlab# exit\n\nStop and start gitlab\nbash\ndocker-compose stop\ndocker-compose start\n\n\n After several minutes  , re-check cron table in gitlab container\nbash\ndocker exec -it dockergitlab_gitlab_1 bash\nroot@0f54b8a1ec1b:/home/git/gitlab# crontab -u git -l\n00 01 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\n00 01 * * * /bin/bash -l -c 'cd /home/git/gitlab && bundle exec rake gitlab:backup:create SKIP= RAILS_ENV=production'\nroot@0f54b8a1ec1b:/home/git/gitlab# exit\nexit. \n\n",
    "sprucify": "I solved this hard to find issue\nI took the value out of /home/git/data/.secret which is a leftover from older gitlabs and past it in my docker-compose variables GITLAB_SECRETS_OTP_KEY_BASE and GITLAB_SECRETS_SECRET_KEY_BASE\nAnd everything works fine again :). I put them in the same order and removed the : character, but no luck.\nToo many redirects.\n@frostieDE How is your nginx port 80 entry look like? Do you have a redirect there?. This is my latest version of nginx conf.\nStill no luck.\n  ```\n  server\n  {\n    server_name gitlab.myserver.nl www.gitlab.myserver.nl;\n    listen _myserverIP_:80;\n\n    return 301 https://$host$request_uri;\n  }\n\n  server\n  {\n    server_name gitlab.myserver.nl www.gitlab.myserver.nl;\n    listen _myserverIP_:443 ssl;\n\n    access_log /var/log/nginx/domains/myserver.nl.log;\n    access_log /var/log/nginx/domains/myserver.nl.bytes bytes;\n    error_log /var/log/nginx/domains/myserver.nl.error.log;\n\n\n    ssl on;\n    ssl_certificate /usr/local/directadmin/data/users/myserver/domains/myserver.nl.cert.combined;\n    ssl_certificate_key /usr/local/directadmin/data/users/myserver/domains/myserver.nl.key;\n    #include /usr/local/directadmin/data/users/myserver/nginx_php.conf;\n\n    location / {\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto https;\n\n            #proxy_redirect off;\n\n            proxy_set_header X-Forwarded-Ssl on;\n            proxy_pass http://127.0.0.1:10080;\n    }\n\n    #include /etc/nginx/webapps.ssl.conf;\n }\n ```\n\nI noticed you don't have ssl on; option probably they turn that on if you specify the protocols?. Yep I'm on Nginx 1.12.0 and Gitlab 9.1.2\nI did clean my cookies multiple times, but I'm wondering if the redirects are stored in there.\n. I can not believe I'm the only person with this issue?\nI keep seeing the \"too many redirects\" error page. You mean paths in your docker-compose.yml? Or in nginx.conf?. I placed /users/sign_in behind my URL and discovered that the \"too many redirects\" error was gone.\nThat pointed my to the direction of checking my gitlab settings after I managed to login and discovered that my Homepage was set to a http url instead of https.\nWould be nice if Gitlab changed that automatically when you use HTTPS = true.\n. Load balancing you mean?\nI just have one instance and 10m ssl termination. Yes nginx with reverse proxy. I don't have an upstream yet.\nThis is my redacted nginx config that fails:\n server\n {\n    server_name gitlab.example.nl www.gitlab.example.nl;\n    listen myIP:80;\n\n    return 301 https://$host$request_uri;\n }\n\n server\n {\n    server_name gitlab.example.nl www.gitlab.example.nl;\n    listen myIP:443 ssl;\n\n    access_log /var/log/nginx/domains/example.nl.log;\n    access_log /var/log/nginx/domains/example.nl.bytes bytes;\n    error_log /var/log/nginx/domains/example.nl.error.log;\n\n\n    ssl on;\n    ssl_certificate /usr/local/directadmin/data/users/example/domains/example.nl.cert.combined;\n    ssl_certificate_key /usr/local/directadmin/data/users/example/domains/example.nl.key;\n    ssl_session_timeout 10m;\n    #include /usr/local/directadmin/data/users/example/nginx_php.conf;\n\n    location / {\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto https;\n\n            #proxy_redirect off;\n\n            proxy_set_header X-Forwarded-Ssl on;\n            proxy_pass http://127.0.0.1:10080;\n    }\n\n    #include /etc/nginx/webapps.ssl.conf;\n}\n\nThis is what I see in my Nginx error log in multiple lines:\nConnection reset by peer) while reading response header from upstream. @solidnerd It is not able to spin up the gitlab container.\nWhen I do a docker-compose up without -d option I see it loops.\nThe output is too long for here, but a couple of interesting lines:\ngitlab_1      | Migrating database...\n   gitlab_1      | Missing Rails.application.secrets.openid_connect_signing_key for production environment. The secret will be generated and stored in config/secrets.yml.\n   gitlab_1      | rake aborted!\n   gitlab_1      | StandardError: An error has occurred, all later migrations canceled:\n   gitlab_1      | PG::DuplicateColumn: ERROR:  column \"merge_requests_ff_only_enabled\" of relation \"projects\" already exists\n   gitlab_1      | : ALTER TABLE \"projects\" ADD \"merge_requests_ff_only_enabled\" boolean. 10.1.3 works fine now.\nThere is something going wrong in there migration files in version 10.1.0-10.1.2\nExisting column names.\n. So I got a bit further\ngitlab:11.0.3 postgresql:9.6-4 redis:latest  (OK)\ngitlab:11.0.3 postgresql:10 redis:latest (OK)\ngitlab:11.0.4 postgresql:10 redis:latest (FAIL)\ngitlab_1 | 2018-07-24 11:53:53,397 INFO exited: sidekiq (exit status 1; not expected)\nDowngrading to 11.0.3 is not allowed, so I have to restore my VPS backup\n. @solidnerd Ah thanks for pointing that out. I had to lock redis version to 3.0.6\nMost of the time I fill in :latest in my docker-compose file, so I can do \ndocker-compose down\ndocker-compose pull\ndocker-compose up -d\nBut now back to manually changing the version numbering in my docker-compose.yml file\nNot sure what the best way is, still learning\nI saw that 11.1.0 was already committed 3 days ago, but I got manifest for sameersbn/gitlab:11.1.0 not found so I will try later again. I was not sure if you where able to reply above valuable comment if I closed the issue.\nClosing now, thanks a lot @solidnerd you made my day. ",
    "ptcuops": "Was this functionality possibly buggered by this commit? I have a load balancer setup in front of gitlab and the registry containers that terminates SSL, so I left out the SSL_REGISTRY_PATH and SSL_REGISTRY_KEY values from my configuration, but SSL for the registry  was still being set up for me because I DID have GITLAB_REGISTRY_KEY_PATH and GITLAB_REGISTRY_CERT_PATH setup in order to establish SSL between gitlab and the registry container (self signed in my case).\n. Ok, so perhaps you can ignore my last comment. The docs show GITLAB_REGISTRY_CERT_PATH in the \"extended\" configuration example, but looking through the \"functions\" script, it doesn't actually appear to ever be used, so I removed it and  its absence prevents the functions script from setting up an ssl listener for the registry. \nWhat was a little confusing, was that I was expecting there to be a listener on the port I had identified with GITLAB_REGISTRY_PORT but there wasn't. There was only a listener on port 80 (again, all behind my load balancer). This is fine, of course, but a little confusing. Once I removed that variable so that things would default to 80, \"docker login\" works, however, now I\"m having trouble pushing an image. Oh well, on to the next problem. \n . I'm sure this is a common question, so I'll add my two cents. \nPros for this image:\n- The documentation is remarkable. It's very rare to see someone make a open source contribution with this level of attention to detail in the documentation. Seriously, it's impressive. \n- As someone else mentioned above, this is JUST gitlab; combining the database and other services isn't just \"not the docker way\", it's actually dangerous, at least as far as the database is concerned. To date, there is still no way to run a true production database using a docker container. \nPros for Official Image\n- It's omnibus; that may not seem all that important, but a very large portion of the gitlab community is running the omnibus configuration of gitlab and therefore when you see examples, tutorials, or suggestions, it's almost always referring to the omnibus method which uses a significantly different configuration approach than the \"from source\" method. For example, configuring the gitlab registry behind a load balancer with SSL handled by the load balancer and gitlab allowing http to pass through is pretty well documented in the community for the omnibus install. After two days doing nothing else, I'm still struggling to figure this out with this image. \n- It's the official image. Frankly, as amazing as this image is, the odds are that the official image will be supported for longer\nThe real killer for the official image is it's monolithic nature. That's a deal breaker. Of course, you can override the connections to the internal services in the official image, but there still there, making for a very fat service. \nIdeally, I'd love to see this image's attention to detail and documentation combined with the omnibus installation which would allow, by default, for the modification of every single gitlab setting. \nAt the moment, I'm still using this image for out gitlab proof of concept, but this HTTPS registry issue might mean we might end up rolling our own based on Omnibus. \n. ",
    "frebour1": "Tried with GIT_DEPTH,  same issue. \nSeems due to time spend by remote to compressing objects.\nPossible to disable compressing objects ? . LFS enabled,   repo storage 22.9Gb ( 0 un LFS) \nStorage: 22.9 GB ( 22.9 GB repository, 0 Bytes build artifacts, 0 Bytes LFS ). ",
    "plasmaphase": "Yes, it's Windows.  That's unfortunate.  Thanks for the reply.. ",
    "israelshirk": "Thanks!  I'm going to go through and add the remaining variables and fixes to get some level of parity/completeness to the underlying build this Thursday (USA/Mountain time); after that I think we'll be good!  I've been running it in production with SSL for about 5 days now and things have been going quite nicely.. @solidnerd I have discontinued work on this due to the growing stability of Gitlab\u2019s own helm package.  It does require some variation, but much less than this stuff - especially for running EE with things like kubernetes runners.  I\u2019ll drop my manifests (based on helm\u2019s dry-run exports) below.. ",
    "sbehrends": "It appears that it was an issue with validating Docker Registry.\nProblem fixed. ",
    "jarvan4dev": "@frostieDE Thanks so much, but it's not working still, the following is the error\n\nthis is my docker container list\nCONTAINER ID        IMAGE                         COMMAND                  CREATED             STATUS              PORTS                                                                                           NAMES\n3e6c410df221        sameersbn/gitlab:latest       \"/sbin/entrypoint....\"   9 days ago          Up 19 minutes       443/tcp, 0.0.0.0:10022->22/tcp, 0.0.0.0:10080->80/tcp                                           gitlab\n04f3d7bff312        sameersbn/redis:latest        \"/sbin/entrypoint.sh\"    9 days ago          Up 19 minutes       6379/tcp                                                                                        gitlab-redis\n75d532b6e054        sameersbn/postgresql:latest   \"/sbin/entrypoint.sh\"    9 days ago          Up 19 minutes       5432/tcp                                                                                        gitlab-postgresql\n9e0273050747        jarvan4dev/utility            \"/usr/sbin/sshd -D\"      2 weeks ago         Up 17 hours         0.0.0.0:5672->5672/tcp, 0.0.0.0:15672->15672/tcp, 0.0.0.0:22222->22/tcp, 0.0.0.0:8088->80/tcp   hungry_kalam\nand I got the ip of gitlab docker container with the command\ndocker inspect --format '{{ .NetworkSettings.IPAddress }}' 3e6c410df221\nCould you give a help?. ",
    "elielam": "Only add the DB_EXTENSION environnement variable dosn't work for me.\nI fix that by granting my gitlab db user to SUPERUSER postgresql role.\n(basic superuser user is postgres). Yes it's possible re-open if you have trouble.. I found people having the same misbehaving registry error.\nAfter a while or reboot the error disappears.\nIt's not my case.\nIf anyone could add a new look to my config \ud83d\ude4f . One month later and still blocked.\nI can't figure out the problem.\nUP \ud83d\ude4f . ",
    "thomasWeise": "I see.\nIs there any way to change this?\nI mean, is there a method to achieve what I want to do, to use the postresql image two times with different ports (in two different compositions)?. Sorry, this may sound incredibly stupid, but does this mean that you mean instead of doing\n...\npostgresql:\n  restart: always\n\nI should do\n...\ngitlabpostgresql:\n  restart: always\n\nand change all corresponding occurences of postgresql to gitlabpostgresql?\nCould it be that easy??\n. (and the DB_HOST variable)\nWow, cool. It indeed seems to work.\nMay I therefore suggest to @sameersbn to change all host names in his great docker-compose projects to unique names?\nHe already seemingly uses unique ports.\nThis way, beginners like me can more easily run several of them next to each other without collisions.\nAgain, many thanks,\n   Thomas.. No, not two gitlabs. I want one gitlab and one redmine.\nThe redmine is running.\nI try to docker-compose up the gitlab, I get an error \u00e0 la postgre is already used...\nThe reason probably is, I guess, that both compositions use the same host name and port for the database(??)\nAnd both should be using different databases.\nWith your suggestion, I got it to work.\nNow I have a system with gitlab, redmine, and seafile, all hosted neatly on the same server ^_^. ",
    "chihkaiyu": "I have same problem here...\nThe original gitlab database was mysql, and I'm trying to convert it to postgresql since official recommend it.\nThe entire gitlab system works fine if I start up them separately, but fail every time when I try to start up via docker-compose.\nI stuck in Configuring loop like below...\nStarting gitlab_postgresql_1 ...\nStarting gitlab_postgresql_1\nCreating gitlab_redis_1 ...\nCreating gitlab_redis_1 ... done\nCreating gitlab_gitlab_1 ...\nCreating gitlab_gitlab_1 ... done\nAttaching to gitlab_postgresql_1, gitlab_redis_1, gitlab_gitlab_1\npostgresql_1  | Initializing datadir...\nredis_1       | Starting redis-server...\nredis_1       | [1] 31 Jul 15:48:32.830 # Server started, Redis version 2.8.4\nredis_1       | [1] 31 Jul 15:48:32.831 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command\n 'sysctl vm.overcommit_memory=1' for this to take effect.\ngitlab_1      | Initializing logdir...\ngitlab_1      | Initializing datadir...\ngitlab_1      | Installing configuration templates...\ngitlab_1      | Configuring gitlab...\npostgresql_1  | Initializing certdir...\npostgresql_1  | Initializing logdir...\npostgresql_1  | Initializing rundir...\npostgresql_1  | Setting resolv.conf ACLs...\npostgresql_1  | Creating database user: gitlab\npostgresql_1  | Creating database: gitlabhq_production...\npostgresql_1  | \u2023 Loading pg_trgm extension...\npostgresql_1  | \u2023 Granting access to gitlab user...\npostgresql_1  | Starting PostgreSQL 9.6...\npostgresql_1  | LOG:  database system was shut down at 2017-07-31 15:48:34 UTC\npostgresql_1  | LOG:  MultiXact member wraparound protections are now enabled\npostgresql_1  | LOG:  autovacuum launcher started\npostgresql_1  | LOG:  database system is ready to accept connections\ngitlab_1      | Configuring gitlab::database...........................................................gitlab_gitlab_1 exited with code 1\ngitlab_1      | Initializing logdir...\ngitlab_1      | Initializing datadir...\ngitlab_1      | Installing configuration templates...\ngitlab_1      | Configuring gitlab...\ngitlab_1      | Configuring gitlab::database...........................................................Initializing logdir...\ngitlab_1      | Initializing datadir...\ngitlab_1      | Installing configuration templates...\ngitlab_1      | Configuring gitlab...\ngitlab_1      | Configuring gitlab::database...........................................................Initializing logdir...\ngitlab_1      | Initializing datadir...\ngitlab_1      | Installing configuration templates...\ngitlab_1      | Configuring gitlab...\ngitlab_1      | Configuring gitlab::database..........................................................\nAnd this is my docker-compose.yml :\n```\nservices: \n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    volumes:\n    - /home/kai/gitlab/redis:/var/lib/redis:Z\npostgresql:\n    restart: always\n    image: sameersbn/postgresql:9.6-2\n    volumes:\n    - /home/kai/gitlab/postgres:/var/lib/postgresql:Z\n    environment:\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:9.0.5\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"10080:80\"\n    - \"10022:22\"\n    volumes:\n    - /home/kai/gitlab/data:/home/git/data:Z\n    environment:\n    - DEBUG=false\n    - DB_ADAPTER=postgresql\n    - DB_HOST=postgresql\n    - DB_PORT=5432\n    - DB_USER=gitlab\n    - DB_PASS=password\n    - DB_NAME=gitlabhq_production\n```\nI skip some other environment variables.\nAnd if I start up via a shell scirpt like below:\n```\n!/bin/bash\ndocker run --name gitlab-postgresql -d \\\n    --env 'DB_NAME=gitlabhq_production' \\\n    --env 'DB_USER=gitlab' --env 'DB_PASS=password' \\\n    --env 'DB_EXTENSION=pg_trgm' \\\n    --volume /home/kai/gitlab/postgres:/var/lib/postgresql \\\n    sameersbn/postgresql:9.6-2\ndocker run --name gitlab-redis -d \\\n        -v /home/kai/Documents/services_env/gitlab/redis:/var/lib/redis \\\n        sameersbn/redis:latest\ndocker run --name gitlab-instance -d \\\n        -e 'GITLAB_HOST=gitlab.local.bridgewell.com' \\\n        -e 'GITLAB_SSH_PORT=10022' \\\n        -e 'GITLAB_PORT=10080' \\\n        -e 'DB_USER=gitlab' -e 'DB_PASS=pasword' \\\n        -e 'DB_NAME=gitlabhq_production' \\\n        -e 'GITLAB_SECRETS_DB_KEY_BASE=LONG-STRING-I-JUST-SKIP-IT' \\\n        -e 'GITLAB_SECRETS_SECRET_KEY_BASE=LONG-STRING-I-JUST-SKIP-IT' \\\n        -e 'GITLAB_SECRETS_OTP_KEY_BASE=LONG-STRING-I-JUST-SKIP-IT' \\\n        -e 'SMTP_HOST=mail.test.com' \\\n        -e 'SMTP_ENABLED=true' \\\n        -e 'SMTP_PORT=25' \\\n        -e 'SMTP_STARTTLS=false' \\\n        --link gitlab-postgresql:postgresql \\\n        --link gitlab-redis:redisio \\\n        -p 10080:80 -p 10022:22 \\\n        -v /home/kai/gitlab/data:/home/git/data \\\n        sameersbn/gitlab:9.0.5\nEverything works perfectly!\nHas anyone encountered the same problem?. I had the same issue from 10.3.3 to 10.6.4.. Hi all,\nAfter a few hours experiment, I've found that it doesn't work at all.\nI set an environment variable `GITLAB_UNICORN_MEMORY_MAX=524288000`, \nbut I still got error message like\nW, [2017-11-22T11:46:54.396973 #833]  WARN -- : #: worker (pid: 833) exceeds memory limit (458501632.0 bytes > 334369369 bytes)\nW, [2017-11-22T11:46:54.397062 #833]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 833) alive: 65 sec (trial 1)\nI, [2017-11-22T11:46:54.641357 #703]  INFO -- : reaped # worker=1\nI, [2017-11-22T11:46:54.695003 #990]  INFO -- : worker=1 ready\nW, [2017-11-22T11:47:11.245254 #839]  WARN -- : #: worker (pid: 839) exceeds memory limit (464723456.0 bytes > 330745035 bytes)\nW, [2017-11-22T11:47:11.245334 #839]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 839) alive: 93 sec (trial 1)\nI, [2017-11-22T11:47:11.501420 #703]  INFO -- : reaped # worker=3\nI, [2017-11-22T11:47:11.553377 #1010]  INFO -- : worker=3 ready\nSo I did a little experiment and found that I can't get environment variables in `config.ru`.\nThat is, in `config.ru`, the following two lines can't access `ENV['GITLAB_UNICORN_MEMORY_MIN']`\n    min = (ENV['GITLAB_UNICORN_MEMORY_MIN'] || 300 * 1 << 20).to_i\n    max = (ENV['GITLAB_UNICORN_MEMORY_MAX'] || 350 * 1 << 20).to_i\n```\nI don't think this is fixed even you set up an environment variable.\nMy workaround is that I'd revised config.ru directly and restart unicorn via supervisord.. This is probably my computer's problem.\nI restore on another computer works fine.\nBut I still don't know what's wrong with this.. ",
    "mickaeltardy": "I have similar issue. First I was unable to clone. Got it work after the following: \n- put the SSH key in my user settings\n- update /home/git/.ssh/authorized_keys with my public key\n- specify absolute path to the repo like so ssh://git@{hostname}:10022/home/git/data/repositories/test/test-project.git\nAt this point git clone, git fetch started to work. However I'm still unable to perform the push. \nI have public group and public project. Hence, the output is \nCounting objects: 3, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 274 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nremote: GitLab: You are not allowed to upload code for this project.\nTo ssh://git@{hostname}:10022/home/git/data/repositories/test/test-project.git/\n ! [remote rejected] develop -> develop (pre-receive hook declined)\nerror: failed to push some refs to     'ssh://git@{hostname}:10022/home/git/data/repositories/test/test-project.git/'\n\nPrior to making the project public I had the message \nGitLab: The Project You Were Looking For Could Not Be Found\n\nLooks like gitlab doesn't get my identity right: ssh -T -p 10022 git@{hostname} doesn't show me the Welcome message as promised.\n. I just figured out what was happening. \nThe gitlab was indeed unable to get the identity for several reasons: \n- On one hand with ~/.ssh dir being symbolic link to the NFS mount, gitlab-shell was unable to write into. So adding keys via the interface has no effect\n- On the other hand when adding the key in the ~/.ssh/authorized_keys manually, I forgot to specify \"command=...\" before the key. Gitlab-shell was never called.\nRemoving the link solves the issue and creating .ssh owned by git user solve the issue.. ",
    "flytreeleft": "@patope Thanks, I have already submitted the fix code, please check the new code.. ",
    "patope": "LGTM. 8.8.2 here\n. Breaks existing configurations where USERNAME is currently undefined. matches undefined first_name, last_name, name and username. Behaviour should be mentioned or make matcher unique. . remove unset username here.. . cleanup username: here, if OAUTH_SAML_ATTRIBUTE_STATEMENTS_USERNAME is not set. ",
    "danipolo": "hi @niksubramanian what docker-compose did you follow? I followed your config with lets-encrypt and didn't work for mw. I also followed the @phpb-com solution with Caddy but on the docker-compose file his referencing, doesn't include the registry container. Did anybody solve this?\nRegards. ",
    "peanutbother": "push. ",
    "persapiens": "Thanks a lot for your detailed answer @frostieDE .. one more question: Is it required to use host volume with sameersbn image or we could use data volume?. ",
    "gambol99": "Its closely related ... I do recall a while back trying to swapout the nginx to use our own, but the was alot of logic the embedded one was doing and our generic nginx-proxy container didn't suppose it .. I'll keep and eye out for a merge. perhaps kubectl 'apply' is a little more convenient than 'create'\n. ",
    "fmauNeko": "As this PR is taking a long time, I pushed it myself to the Hub as fmauneko/gitlab.\nWill be deleted as soon as this or #1259 are merged.. I already had it done in #1237, looks like I'm not the only one who needs it :D. Any news about this ?. It isn't enough to get Gitaly working, the Makefile is apparently looking for git to get the version now, same as gitlab-pages.\nI've tried doing the same thing as e025be7 for Gitaly, and it seems to build correctly, will update after doing some testing.\nEDIT: there's also a GOROOT issue so this apparently isn't enough, will look into it\nBundled gems are installed into ./vendor/bundle.\ntouch .ruby-bundle\nrm -rf /home/git/gitaly/_build\nmkdir -p \"/home/git/gitaly/_build/src/gitlab.com/gitlab-org/\"\nln -sf ../../../.. \"/home/git/gitaly/_build/src/gitlab.com/gitlab-org/gitaly\"\nmkdir -p \"/home/git/gitaly/_build/bin\"\ntouch \"/home/git/gitaly/_build/.ok\"\ngo install -ldflags '-X gitlab.com/gitlab-org/gitaly/internal/version.version=0.43.0 -X gitlab.com/gitlab-org/gitaly/internal/version.buildtime=20171024.155407' gitlab.com/gitlab-org/gitaly/cmd/gitaly gitlab.com/gitlab-org/gitaly/cmd/gitaly-ssh\ngo: cannot find GOROOT directory: /usr/local/go\nmake: *** [build] Error 2. Apparently they thought it was a good idea to unexport $GOROOT in the Makefile.\nhttps://gitlab.com/gitlab-org/gitaly/blame/v0.43.0/Makefile#L20\nSolved with this patch, which has been rebased on @solidnerd branch\n```patch\ndiff --git a/assets/build/install.sh b/assets/build/install.sh\nindex b5fb3d4..1591447 100755\n--- a/assets/build/install.sh\n+++ b/assets/build/install.sh\n@@ -5,7 +5,7 @@ GITLAB_CLONE_URL=https://gitlab.com/gitlab-org/gitlab-ce.git\n GITLAB_SHELL_URL=https://gitlab.com/gitlab-org/gitlab-shell/repository/archive.tar.gz\n GITLAB_WORKHORSE_URL=https://gitlab.com/gitlab-org/gitlab-workhorse.git\n GITLAB_PAGES_URL=https://gitlab.com/gitlab-org/gitlab-pages.git\n-GITLAB_GITALY_URL=https://gitlab.com/gitlab-org/gitaly/repository/archive.tar.gz\n+GITLAB_GITALY_URL=https://gitlab.com/gitlab-org/gitaly.git\nGEM_CACHE_DIR=\"${GITLAB_BUILD_DIR}/cache\"\n@@ -115,17 +115,16 @@ cp -f gitlab-pages /usr/local/bin/\n# download gitaly\n echo \"Downloading gitaly v.${GITALY_SERVER_VERSION}...\"\n-mkdir -p ${GITLAB_GITALY_INSTALL_DIR}\n-wget -cq ${GITLAB_GITALY_URL}?ref=v${GITALY_SERVER_VERSION} -O ${GITLAB_BUILD_DIR}/gitaly-${GITALY_SERVER_VERSION}.tar.gz\n-tar xf ${GITLAB_BUILD_DIR}/gitaly-${GITALY_SERVER_VERSION}.tar.gz --strip 1 -C ${GITLAB_GITALY_INSTALL_DIR}\n-rm -rf ${GITLAB_BUILD_DIR}/gitaly-${GITALY_SERVER_VERSION}.tar.gz\n+exec_as_git git clone -q -b v${GITALY_SERVER_VERSION} --depth 1 ${GITLAB_GITALY_URL} ${GITLAB_GITALY_INSTALL_DIR}\n chown -R ${GITLAB_USER}: ${GITLAB_GITALY_INSTALL_DIR}\n # copy default config for gitaly\n exec_as_git cp ${GITLAB_GITALY_INSTALL_DIR}/config.toml.example ${GITLAB_GITALY_INSTALL_DIR}/config.toml\n# install gitaly\n cd ${GITLAB_GITALY_INSTALL_DIR}\n-PATH=/tmp/go/bin:$PATH GOROOT=/tmp/go make install && make clean\n+ln -sf /tmp/go /usr/local/go\n+PATH=/tmp/go/bin:$PATH make install && make clean\n+rm -f /usr/local/go\n# remove go\n rm -rf ${GITLAB_BUILD_DIR}/go${GOLANG_VERSION}.linux-amd64.tar.gz /tmp/go\n```. GITLAB_PAGES_VERSION should be bumped to 0.6.1, as in https://gitlab.com/gitlab-org/gitlab-ce/blob/v10.5.4/GITLAB_PAGES_VERSION. ",
    "pitkley": "Ah, I missed that PR. Thanks, good enough for me \ud83d\udc4d . Since everyone here seems to be using GMail, which I had problems with too, make sure that you allow less secure apps to access the mail account from which you are trying to send mails from. This StackOverflow answer is what helped me, but in short:\n\n\nOpen the GMail settings for less secure apps while logged into the account from which you want to send the mails:\nhttps://www.google.com/settings/security/lesssecureapps\n\n\nEnable less secure apps.\n\n\nGoogle seems to be moving over to XOAUTH2, and I'm not sure if the Rails ActionMailer used by GitLab supports it. Anyway: enabling less secure apps solved my issues.. ",
    "ChessSpider": "fixed, problem was in my haproxy. Changed some random values after I noticed my client was sending a PATCH request in cleartext isntead of SSL mumble jumble. \nChanged it to:\n```\nfrontend docker-in\n    mode tcp\n    option httpclose\n    bind *:5000 ssl crt {{ cert_path }}\n    acl is_registry hdr(host) -i {{ gitlab_registry_host }} \nreqadd X-Forwarded-Port:\\ 5000\nreqadd X-Forwarded-Proto:\\ https\nreqadd X-Forwarded-Scheme:\\ https\nreqadd X-Forwarded-Host:\\ {{ gitlab_registry_host }}\n\nrsprep ^Location:\\ http://(.*) Location:\\ https://\\1\nredirect scheme https code 301 if !{ ssl_fc }\n\nuse_backend registry if is_registry\ndefault_backend registry\n\n```\ndont forget to change the {{ varname }} with the correct value \ndont ask me why it works or which ones are required and which ones are not... im just happy it works. IT seems the builds are still pending https://hub.docker.com/r/sameersbn/gitlab/builds/ ? I momentarily reverted back to 10.6.4. I didn't know he was going to release 10.7.0, 10.7.1 and 10.7.2 on the same day ;)\nI'll fetch 10.7.2 and test it momentarily, if it works ill close this issue . ",
    "Coffee2CodeNL": "See https://github.com/iSDP/docker-gitlab-dokku for a version that works with the above.. @solidnerd @sameersbn what do you guys want to do with that Fork? Merge?. @sameersbn can you please add my modifications?. I don't see such behaviour.\nDon't set the SSL_CERTIFICATE_PATH, SSL_KEY_PATH and SSL_DHPARAM_PATH but do set the GITLAB_HTTPS parameter.\nThat'll set the scheme for gitlab to https:// but it only listens on port 80, which allows your reverse proxy to handle SSL.. Check out my fork, and keep checking it out, since I'll add an Envvar tomorrow to fix this issue, after studying it a bit closer I see what you mean... \ud83d\ude05. Does this help?\nhttps://github.com/iSDP/docker-gitlab-dokku/commit/53d6e0ea5055ad651622e4047d663430e2b4e0d4. @sameersbn fixed some stuff and merged the changes.. 10.5.1 is out, even\n. I've been maintaining a fork with better reverse proxy support for Dokku/Heroku and database/redis DSN strings... (https://github.com/sameersbn/docker-gitlab/pull/1249). ",
    "abeltay": "@solidnerd is the PR okay?. No problem \ud83d\ude04 . I've rebased for 9.3.1, I think @solidnerd may prefer to release versions in order.\n@solidnerd shall I bump this to 9.3.1 or 9.3.3?. Okay, I've updated it to 9.3.3. I've reverted the changes to 9.3.1. Done! \ud83d\ude04 . Closing since it doesn't seem like it will be used.. > We advise against upgrading to Gitlab EE 9.3.3 due to issues with Post Receive, please continue to use 9.3.2\nhttps://twitter.com/gitlab/status/881930209448144897\n@solidnerd. @solidnerd LGTM?. @solidnerd \n. These are the release notes...\nhttps://about.gitlab.com/2017/07/19/gitlab-9-dot-3-dot-8-released/. https://gitlab.com/gitlab-org/gitlab-ce/issues/35342. Remember to update the changelog. ",
    "Daxten": "perfect thanks!. Fixed the issue for me. Addition:\nNew Branches which are created without the hooks, are still broke. Those have to be deleted in gitlab and then pushed again.. ",
    "harridu": "I am not sure if this is correct. Apparently there is no semaphore protecting the repository, so it should be \"in read-only mode or not running at all\", according to the documentation. Thats the tricky (and poorly documented, boooooooh!) part.\n. ",
    "galexrt": "@fmauNeko I'll ping @solidnerd, maybe he can help get this or #1237 to be merged soon. :). @solidnerd Updated.. ",
    "cdalvaro": "Is this enhancement forgotten?. I had the same error, but it was solved by downloading the latest build after it was properly built.. I have pushed some commits to one of my repos and the languages bar has appeared.\nMaybe it is triggered by some hook.\nIf someone can confirm this we can close the issue.. I can confirm that the languages bar appears after pushing commits to he default branch or after merging changes.\nI close the issue.. You can use registry:latest if you add the following env variable to your registry environment:\nyaml\nservices:\n  ...\n  registry:\n    image: registry:latest\n    environment:\n      - REGISTRY_AUTH_TOKEN_AUTOREDIRECT=false\nAt the moment, this is the only 'documentation' I have found: https://github.com/docker/distribution/issues/2793\nInfo about the corresponding PR: https://github.com/docker/distribution/pull/2711. Based on what I have read, the value false maintains the old behavior, but I'm not sure about if true is more correct.. ",
    "xen0n": "Note: This release contains Aliyun OSS support for backups. According to the corresponding MR it should be a matter of generating the respective fog configuration. It'd be better to include the feature as well!. fixed by #1458. ",
    "hugomd": "Is this ready to be merged?. @Ilya-Kuchaev I'm sure it'll be soon \u2014 most contributors to open source don't do it full time, so you've got to be patient! \u270c\ufe0f. @Ilya-Kuchaev I'm sure it'll be soon \u2014 most contributors to open source don't do it full time, so you've got to be patient! \u270c\ufe0f. @sprucify I had the same issue, and in my case it was because I had run out of disk space..\nWould you be able to post your logs?. @sprucify I had the same issue, and in my case it was because I had run out of disk space..\nWould you be able to post your logs?. ",
    "sandro-k": "Just updated from 10.4.4 to 10.5.1 and had the same message.. Just updated from 10.4.4 to 10.5.1 and had the same message.. @Finkman I would give Postgres a try. Have everything running in docker on a DS1815+.. @Finkman I would give Postgres a try. Have everything running in docker on a DS1815+.. Is the MariaDB a container too?. Is the MariaDB a container too?. I would backup the data from the package and and make a copy of the gitlab installation and try to get gitlab running on my local machine on docker. . I would backup the data from the package and and make a copy of the gitlab installation and try to get gitlab running on my local machine on docker. . How long did you wait after you started gitlab? Depending on the machine you are stating gitlab on it can take a couple of minutes to be ready. I am getting the 500 every time I am stating the machine, I just have to wait one or two minutes.. How long did you wait after you started gitlab? Depending on the machine you are stating gitlab on it can take a couple of minutes to be ready. I am getting the 500 every time I am stating the machine, I just have to wait one or two minutes.. ",
    "maxc0d3r": "+1 for the issue. I am getting similar issue and migration stops with:\nMysql2::Error: Illegal mix of collations (utf8_general_ci,IMPLICIT) and (utf8_unicode_ci,IMPLICIT) for operation '=': UPDATE ci_builds SET stage_id = (SELECT id FROM ci_stages\n   WHERE ci_stages.pipeline_id = ci_builds.commit_id\n     AND ci_stages.name = ci_builds.stage)\n WHERE ci_builds.id >= 1 AND ci_builds.id < 140 AND ci_builds.stage_id IS NULL/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/peek-mysql2-1.1.0/lib/peek/views/mysql2.rb:14:in `query'. @clamor I just went ahead and changed collation of every table in gitlabhq_production database to utf8_unicode_ci explicitly. I also changed default collation to utf8_unicode_ci for the database as well. Things are looking good now. . @splattael Just curious but in my case my database earlier had collation as utf8_general_ci and I had not set DB_COLLATION environment variable while deploying this new image, as the documentation mentioned that default value for this environment variable is utf8_general_ci (The PR also says the same - https://github.com/sameersbn/docker-gitlab/pull/1262). I am just wondering why did my initial deployment failed than.. Earlier when upgrade to gitlab 9.3.3 was failing this was state of my database -\nmysql> SELECT @@character_set_database, @@collation_database;\n+--------------------------+----------------------+\n| @@character_set_database | @@collation_database |\n+--------------------------+----------------------+\n| utf8                     | utf8_general_ci      |\n+--------------------------+----------------------+\nI went ahead and changed the collation to utf8_unicode_ci for all the tables and database as well and after that the issue was resolved for me.. @splattael So DB_COLLATION is a mandatory environment variable to be passed along while upgrading to 9.3.3, right? I was just confused because documentation mentioned that this environment variable has a default value and hence I didn't used it while deploying the new image.. ",
    "clamor": "By now I had no luck. \nUsing utf8mb4 and utf8mb4_unicode_ci for table char set and collation lead to \n1071 - Specified key was too long; max key length is 767 bytes\nTrying to set utf8 and utf8_general_ci on the gitlab and the mysql image did not work out, as well as setting it to utf8 and utf8_unicode_ci. I will take a closer look to GitLab's MySQL Guide.. Ah, now it migrates. Thank you.\nIt might be a good idea to remove the references to sameersbn/mysql in README, since it is only mysql 5.5.54 and the only tag \"latest\" does not give any hint on that.\nAgain thank you, for the help.. Starting the mysql 5.7 container with --character-set-server=utf8 --collation-server=utf8_general_ci and using DB_COLLATION=utf8_general_ci in the gitlab container, there was no need to use any ALTER TABLE statements in the database.. ",
    "Laul0": "In admin log (production) : Filter chain halted as :ensure_project_found! rendered or redirected\nEverethings seems to be ok in docker logs -f gitlab (no error)\nLink example : https://gitlab.lsonline.fr/SharePoint/javascript-customactions (readme never loaded)\nThx for your first answers. Is loading each time your refresh ? I have to refresh several times...\nOne more things, I can't Push or Pull ! (I'm using GitKraken). I think I thought why.... My \"cert\" folder has disappeared... I'll try to restore it (I don't know why his folder was deleted)... I will keep you informed. I found the reason, but not yet the solution... When I had updated GitLab to latest version, I don't know why the certs folder was deleted.... I had restored this folder and restart the container... But know I meet an old issue when you specify a self-signed and the browser that return the error : Too many redirections.\nSince I use GitLab, I had never met this issue! This is the first time.... Do you have a solution about that ?. I'll test it and keep you in touch. Thx for this information. I tested with the latest version (3.9.5) and I've still the same issue :\n\n. Hi, I tested this the latest version (9.3.9) and the problem persists...\nMore details on my environment : I use GitLab Docker behind jwilder/nginx-proxy and a CloudFlare HTTPS. I always used the same command line to launch the GitLab container and it always works before the GitLab 9.3.5.\nIf I remove --env 'GITLAB_HTTPS=true' --env 'SSL_SELF_SIGNED=true' GitLab works but Git connexion string has to be in HTTP and not HTTPS anymore and the console doesn't show the output\nNote : if no HTTPS in GitLab, the Oauth of GitHub doesn't works anymore too. Hi @avluis, thx for your answer.\nIn fact, after had updated the docker command, I managed to make it work my Gitlab server in TLS mode. Thx, I can close my issue.. Hi guys, I upgraded today my version 10.3.5 to 10.3.6 and everything is ok now.\nAll of my issues are fixed.\nThank you for your investigations \ud83d\ude03 . Hi @dansch94, did you check the upload folder chmod and gown ?. Hi @atasoglou, you're right, you cannot create subgroup when you use a MySQL database.\nFor my part, I migrated my MySQL database to postgresql and it's work !. @nanquanyuhao the main reasons of this choice (PostgreSQL rather than MySQL) is the problem of capacities and performances by MySQL.\nNo other solution, you have to migrate your MySQL database to PostgreSQL.\n1. Choice your database : https://docs.gitlab.com/ee/install/requirements.html\n2. Database migration : https://docs.gitlab.com/ee/update/mysql_to_postgresql.html. ",
    "cat5": "A little more data to add:\nIt appears that during the rake tasks, the OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL variable is not being passed in.\nroot@gitlab-0lj90:/home/git# export DEBUG=true\nroot@gitlab-0lj90:/home/git# env | grep OAUTH\nOAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL=urn:oid:1.2.840.113549.1.9.1\nOAUTH_SAML_LABEL=Keycloak-nightly.time0.io\nOAUTH_SAML_IDP_CERT_FINGERPRINT=fingerprint-here\nOAUTH_SAML_NAME_IDENTIFIER_FORMAT=urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\nOAUTH_SAML_ASSERTION_CONSUMER_SERVICE_URL=https://myurl/git/users/auth/saml/callback\nOAUTH_AUTO_LINK_SAML_USER=true\nOAUTH_BLOCK_AUTO_CREATED_USERS=false\nOAUTH_SAML_IDP_SSO_TARGET_URL=https://myidp-is-keycloak/protocol/saml\nOAUTH_ENABLED=true\nOAUTH_ALLOW_SSO=saml\nOAUTH_AUTO_LINK_LDAP_USER=false\nOAUTH_EXTERNAL_PROVIDERS=saml\nSo, we see that OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL is in fact populated.\nNow, let's run through:\nshell\nConfiguring gitlab::oauth...\n+ gitlab_configure_oauth_cas3\n+ [[ -n '' ]]\n+ exec_as_git sed -i '/name: '\\''cas3'\\''/,/{{OAUTH_CAS3_LOGOUT_URL}}/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/name: '\\''cas3'\\''/,/{{OAUTH_CAS3_LOGOUT_URL}}/d' /home/git/gitlab/config/gitlab.yml\n+ gitlab_configure_oauth_google\n+ [[ -n '' ]]\n+ exec_as_git sed -i '/name: '\\''google_oauth2'\\''/,/{{OAUTH_GOOGLE_RESTRICT_DOMAIN}}/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/name: '\\''google_oauth2'\\''/,/{{OAUTH_GOOGLE_RESTRICT_DOMAIN}}/d' /home/git/gitlab/config/gitlab.yml\n+ gitlab_configure_oauth_facebook\n+ [[ -n '' ]]\n+ exec_as_git sed -i '/name: '\\''facebook'\\''/,/{{OAUTH_FACEBOOK_APP_SECRET}}/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/name: '\\''facebook'\\''/,/{{OAUTH_FACEBOOK_APP_SECRET}}/d' /home/git/gitlab/config/gitlab.yml\n+ gitlab_configure_oauth_twitter\n+ [[ -n '' ]]\n+ exec_as_git sed -i '/name: '\\''twitter'\\''/,/{{OAUTH_TWITTER_APP_SECRET}}/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/name: '\\''twitter'\\''/,/{{OAUTH_TWITTER_APP_SECRET}}/d' /home/git/gitlab/config/gitlab.yml\n+ gitlab_configure_oauth_authentiq\n+ [[ -n '' ]]\n+ exec_as_git sed -i '/name: '\\''authentiq'\\''/,/{{OAUTH_AUTHENTIQ_SCOPE}}/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/name: '\\''authentiq'\\''/,/{{OAUTH_AUTHENTIQ_SCOPE}}/d' /home/git/gitlab/config/gitlab.yml\n+ gitlab_configure_oauth_github\n+ [[ -n '' ]]\n+ exec_as_git sed -i '/name: '\\''github'\\''/,/{{OAUTH_GITHUB_SCOPE}}/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/name: '\\''github'\\''/,/{{OAUTH_GITHUB_SCOPE}}/d' /home/git/gitlab/config/gitlab.yml\n+ gitlab_configure_oauth_gitlab\n+ [[ -n '' ]]\n+ exec_as_git sed -i '/name: '\\''gitlab'\\''/,/{{OAUTH_GITLAB_SCOPE}}/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/name: '\\''gitlab'\\''/,/{{OAUTH_GITLAB_SCOPE}}/d' /home/git/gitlab/config/gitlab.yml\n+ gitlab_configure_oauth_bitbucket\n+ [[ -n '' ]]\n+ exec_as_git sed -i '/name: '\\''bitbucket'\\''/,/{{OAUTH_BITBUCKET_APP_SECRET}}/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/name: '\\''bitbucket'\\''/,/{{OAUTH_BITBUCKET_APP_SECRET}}/d' /home/git/gitlab/config/gitlab.yml\n+ gitlab_configure_oauth_saml\n+ [[ -n goot ]]\n+ [[ -n fingerprint-here ]]\n+ [[ -n https://myidpl ]]\n+ [[ -n http://my-client-url ]]\n+ [[ -n urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ]]\n+ echo 'Configuring gitlab::oauth::saml...'\nConfiguring gitlab::oauth::saml...\n+ OAUTH_ENABLED=true\n+ update_template /home/git/gitlab/config/gitlab.yml OAUTH_SAML_LABEL OAUTH_SAML_ASSERTION_CONSUMER_SERVICE_URL OAUTH_SAML_IDP_CERT_FINGERPRINT OAUTH_SAML_IDP_SSO_TARGET_URL OAUTH_SAML_ISSUER OAUTH_SAML_NAME_IDENTIFIER_FORMAT OAUTH_SAML_GROUPS_ATTRIBUTE OAUTH_SAML_EXTERNAL_GROUPS\n+ local FILE=/home/git/gitlab/config/gitlab.yml\n+ shift\n+ [[ ! -f /home/git/gitlab/config/gitlab.yml ]]\n+ VARIABLES=($@)\n+ local VARIABLES\n++ stat -c %U /home/git/gitlab/config/gitlab.yml\n+ local USR=git\n++ mktemp\n+ local tmp_file=/tmp/tmp.PU8Gt9EyQQ\n+ cp -a /home/git/gitlab/config/gitlab.yml /tmp/tmp.PU8Gt9EyQQ\n+ local variable\n+ for variable in '${VARIABLES[@]}'\n+ sed -ri 's/[{]{2}OAUTH_SAML_LABEL[}]{2}/${OAUTH_SAML_LABEL}/g' /tmp/tmp.PU8Gt9EyQQ\n+ for variable in '${VARIABLES[@]}'\n+ sed -ri 's/[{]{2}OAUTH_SAML_ASSERTION_CONSUMER_SERVICE_URL[}]{2}/${OAUTH_SAML_ASSERTION_CONSUMER_SERVICE_URL}/g' /tmp/tmp.PU8Gt9EyQQ\n+ for variable in '${VARIABLES[@]}'\n+ sed -ri 's/[{]{2}OAUTH_SAML_IDP_CERT_FINGERPRINT[}]{2}/${OAUTH_SAML_IDP_CERT_FINGERPRINT}/g' /tmp/tmp.PU8Gt9EyQQ\n+ for variable in '${VARIABLES[@]}'\n+ sed -ri 's/[{]{2}OAUTH_SAML_IDP_SSO_TARGET_URL[}]{2}/${OAUTH_SAML_IDP_SSO_TARGET_URL}/g' /tmp/tmp.PU8Gt9EyQQ\n+ for variable in '${VARIABLES[@]}'\n+ sed -ri 's/[{]{2}OAUTH_SAML_ISSUER[}]{2}/${OAUTH_SAML_ISSUER}/g' /tmp/tmp.PU8Gt9EyQQ\n+ for variable in '${VARIABLES[@]}'\n+ sed -ri 's/[{]{2}OAUTH_SAML_NAME_IDENTIFIER_FORMAT[}]{2}/${OAUTH_SAML_NAME_IDENTIFIER_FORMAT}/g' /tmp/tmp.PU8Gt9EyQQ\n+ for variable in '${VARIABLES[@]}'\n+ sed -ri 's/[{]{2}OAUTH_SAML_GROUPS_ATTRIBUTE[}]{2}/${OAUTH_SAML_GROUPS_ATTRIBUTE}/g' /tmp/tmp.PU8Gt9EyQQ\n+ for variable in '${VARIABLES[@]}'\n+ sed -ri 's/[{]{2}OAUTH_SAML_EXTERNAL_GROUPS[}]{2}/${OAUTH_SAML_EXTERNAL_GROUPS}/g' /tmp/tmp.PU8Gt9EyQQ\n+ export OAUTH_SAML_LABEL OAUTH_SAML_ASSERTION_CONSUMER_SERVICE_URL OAUTH_SAML_IDP_CERT_FINGERPRINT OAUTH_SAML_IDP_SSO_TARGET_URL OAUTH_SAML_ISSUER OAUTH_SAML_NAME_IDENTIFIER_FORMAT OAUTH_SAML_GROUPS_ATTRIBUTE OAUTH_SAML_EXTERNAL_GROUPS\n+ local IFS=:\n+ sudo -HEu git envsubst '$OAUTH_SAML_LABEL:$OAUTH_SAML_ASSERTION_CONSUMER_SERVICE_URL:$OAUTH_SAML_IDP_CERT_FINGERPRINT:$OAUTH_SAML_IDP_SSO_TARGET_URL:$OAUTH_SAML_ISSUER:$OAUTH_SAML_NAME_IDENTIFIER_FORMAT:$OAUTH_SAML_GROUPS_ATTRIBUTE:$OAUTH_SAML_EXTERNAL_GROUPS'\n+ rm -f /tmp/tmp.PU8Gt9EyQQ\n+ exec_as_git sed -i '/groups_attribute: '\\'''\\'',/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/groups_attribute: '\\'''\\'',/d' /home/git/gitlab/config/gitlab.yml\n+ exec_as_git sed -i '/external_groups: \\[\\],/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n**+ sudo -HEu git sed -i '/external_groups: \\[\\],/d' /home/git/gitlab/config/gitlab.yml\n+ gitlab_configure_oauth_saml_attribute_statements\n+ [[ -n urn:oid:1.2.840.113549.1.9.1 ]]\n+ [[ -n '' ]]**\n+ exec_as_git sed -i '/attribute_statements:/,/{{OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL}}/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/attribute_statements:/,/{{OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL}}/d' /home/git/gitlab/config/gitlab.yml\n+ gitlab_configure_oauth_crowd\n+ [[ -n '' ]]\n+ exec_as_git sed -i '/name: '\\''crowd'\\''/,/{{OAUTH_CROWD_APP_PASSWORD}}/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/name: '\\''crowd'\\''/,/{{OAUTH_CROWD_APP_PASSWORD}}/d' /home/git/gitlab/config/gitlab.yml\n+ gitlab_configure_oauth_auth0\n+ [[ -n '' ]]\n+ exec_as_git sed -i '/name: '\\''auth0'\\''/,/{{OAUTH_AUTH0_DOMAIN}}/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/name: '\\''auth0'\\''/,/{{OAUTH_AUTH0_DOMAIN}}/d' /home/git/gitlab/config/gitlab.yml\n+ gitlab_configure_oauth_azure\n+ [[ -n '' ]]\n+ exec_as_git sed -i '/name: '\\''azure_oauth2'\\''/,/{{OAUTH_AZURE_TENANT_ID}}/d' /home/git/gitlab/config/gitlab.yml\n++ whoami\n+ [[ root == git ]]\n+ sudo -HEu git sed -i '/name: '\\''azure_oauth2'\\''/,/{{OAUTH_AZURE_TENANT_ID}}/d' /home/git/gitlab/config/gitlab.yml\n+ OAUTH_ENABLED=true\n+ update_template /home/git/gitlab/config/gitlab.yml OAUTH_ENABLED OAUTH_ALLOW_SSO OAUTH_BLOCK_AUTO_CREATED_USERS OAUTH_AUTO_LINK_LDAP_USER OAUTH_AUTO_LINK_SAML_USER OAUTH_EXTERNAL_PROVIDERS\n+ local FILE=/home/git/gitlab/config/gitlab.yml\n+ shift\n+ [[ ! -f /home/git/gitlab/config/gitlab.yml ]]\nthis is verified with the following:\n/sbin/entrypoint.sh app:rake configure_gitlab \nYou can see the above bolded text, it's imported, but at no time, is gitlab.yml actually updated.. Just want to throw out that I finally solved the problem, by adding in \"OAUTH_SAML_ATTRIBUTE_STATEMENTS_NAME\"\nThe script section causing the problem:\ngitlab_configure_oauth_saml_attribute_statements() {\n  if [[ -n ${OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL} && \\\n        -n ${OAUTH_SAML_ATTRIBUTE_STATEMENTS_NAME} ]]; then\n    echo \"Configuring gitlab::oauth::saml::attribute_statements...\"\n    update_template ${GITLAB_CONFIG} \\\n      OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL \\\n      OAUTH_SAML_ATTRIBUTE_STATEMENTS_NAME \\\n      OAUTH_SAML_ATTRIBUTE_STATEMENTS_FIRST_NAME \\\n      OAUTH_SAML_ATTRIBUTE_STATEMENTS_LAST_NAME\n    # Remove undefined optional attributes\n    exec_as_git sed -i \"/first_name: \\\\[''\\\\],/d\" ${GITLAB_CONFIG}\n    exec_as_git sed -i \"/last_name: \\\\[''\\\\],/d\" ${GITLAB_CONFIG}\n  else\n    exec_as_git sed -i \"/attribute_statements:/,/{{OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL}}/d\" ${GITLAB_CONFIG}\n  fi\n}\nI just wanted to use OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL, as thats all gitlab needed to communicate with Keycloak via SAML IdP\nIn anycase, for future google searches,\nin your keycloak realm -> client -> mappers, add in the builtin \"X500 givenName\"\nThe saml URN required is \"urn:oid:2.5.4.42\"\nFinaly, update k8s yaml with:\n        - name: OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL\n          value: \"urn:oid:1.2.840.113549.1.9.1\"\n        - name: OAUTH_SAML_ATTRIBUTE_STATEMENTS_NAME\n          value: \"urn:oid:2.5.4.42\"\nAnd upon recreating the RC, everything came up perfectly, and the gitlab.yml is properly configured\n            attribute_statements: {\n                name: ['urn:oid:2.5.4.42'],\n                email: ['urn:oid:1.2.840.113549.1.9.1'] },\n              name_identifier_format: 'urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified' } }\n\n. shell\nSocketError: getaddrinfo: Name or service not known\nDNS. It's always DNS.\n. @juanmao Docker DNS usually just works, but have a look here:\nhttps://docs.docker.com/engine/userguide/networking/default_network/configure-dns/\nYou can also verify if you exec into the container, cat out /etc/resolv.conf and make sure it's populated correctly, and even try a ping smtp.gmail.com and see if it replies.\nI'd assist more, except I run gitlab+registry on a kubernetes cluster, so my networking is different than yours.. After connecting to the container, try this:\nbin/bundle exec rake gitlab:env:info RAILS_ENV=production\n. ",
    "kleug": "the problem was about the right. \ni resolved it by puting good permition on all folders inside /home/git/\n. ",
    "webdeb": "How did you solved it?. Hmm, I would be very careful. Have you tried to create a Test environment, restore your backups to it. Then stop the gitlab container and launch the same gitlab image with the tag you would like to upgrade to?. Actually, there should't be any problems, because of the backups, you should be able to always roll back.. But anyway, better be sure, then fixing your whole system afterwards. Ah, sorry, thanks for clarifying. ",
    "ksioposbuilder": "Same issue as https://github.com/sameersbn/docker-gitlab/issues/487\nand still looking for a fix :(. ",
    "odelreym": "Hi pmoralesp\nI just did it \"des-pa-cito\" but no way\nAny ideas?\n```\nMigrating database...\nMissing Rails.application.secrets.jws_private_key for production environment. The secret will be generated and stored in config/secrets.yml.\nrake aborted!\nStandardError: An error has occurred, all later migrations canceled:\nPG::UniqueViolation: ERROR:  duplicate key value violates unique constraint \"ci_builds_pkey\"\nDETAIL:  Key (id)=(50) already exists.\n: UPDATE \"ci_builds\" SET \"retried\" = ((SELECT MAX(ci_builds2.id)\n  FROM ci_builds ci_builds2\n  WHERE ci_builds.commit_id=ci_builds2.commit_id\n    AND ci_builds.name=ci_builds2.name\n) != ci_builds.id) WHERE \"ci_builds\".\"id\" >= 48 AND \"ci_builds\".\"id\" < 96 AND \"ci_builds\".\"retried\" IS NULL/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:155:in async_exec'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:155:inblock in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:484:in block in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/notifications/instrumenter.rb:20:ininstrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:478:in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:154:inexecute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:665:in block in method_missing'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:inblock in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:654:inmethod_missing'\n/home/git/gitlab/lib/gitlab/database/migration_helpers.rb:198:in block in update_column_in_batches'\n/home/git/gitlab/lib/gitlab/database/migration_helpers.rb:175:inloop'\n/home/git/gitlab/lib/gitlab/database/migration_helpers.rb:175:in update_column_in_batches'\n/home/git/gitlab/db/post_migrate/20170503004427_upate_retried_for_ci_build.rb:49:inblock in up_postgres'\n/home/git/gitlab/db/post_migrate/20170503004427_upate_retried_for_ci_build.rb:60:in with_temporary_partial_index'\n/home/git/gitlab/db/post_migrate/20170503004427_upate_retried_for_ci_build.rb:37:inup_postgres'\n/home/git/gitlab/db/post_migrate/20170503004427_upate_retried_for_ci_build.rb:14:in up'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:611:inexec_migration'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:592:in block (2 levels) in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:591:inblock in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:in with_connection'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:590:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:768:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:998:inblock in execute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:1046:in ddl_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:997:inexecute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:959:in block in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:ineach'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:823:inup'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:801:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/tasks/database_tasks.rb:137:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/railties/databases.rake:44:in block (2 levels) in <top (required)>'\nActiveRecord::RecordNotUnique: PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint \"ci_builds_pkey\"\nDETAIL:  Key (id)=(50) already exists.\n: UPDATE \"ci_builds\" SET \"retried\" = ((SELECT MAX(ci_builds2.id)\n  FROM ci_builds ci_builds2\n  WHERE ci_builds.commit_id=ci_builds2.commit_id\n    AND ci_builds.name=ci_builds2.name\n) != ci_builds.id) WHERE \"ci_builds\".\"id\" >= 48 AND \"ci_builds\".\"id\" < 96 AND \"ci_builds\".\"retried\" IS NULL\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:155:inasync_exec'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:155:in block in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:484:inblock in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/notifications/instrumenter.rb:20:in instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:478:inlog'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:154:in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:665:inblock in method_missing'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:in block in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:insay_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:654:in method_missing'\n/home/git/gitlab/lib/gitlab/database/migration_helpers.rb:198:inblock in update_column_in_batches'\n/home/git/gitlab/lib/gitlab/database/migration_helpers.rb:175:in loop'\n/home/git/gitlab/lib/gitlab/database/migration_helpers.rb:175:inupdate_column_in_batches'\n/home/git/gitlab/db/post_migrate/20170503004427_upate_retried_for_ci_build.rb:49:in block in up_postgres'\n/home/git/gitlab/db/post_migrate/20170503004427_upate_retried_for_ci_build.rb:60:inwith_temporary_partial_index'\n/home/git/gitlab/db/post_migrate/20170503004427_upate_retried_for_ci_build.rb:37:in up_postgres'\n/home/git/gitlab/db/post_migrate/20170503004427_upate_retried_for_ci_build.rb:14:inup'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:611:in exec_migration'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:592:inblock (2 levels) in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:591:in block in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:inwith_connection'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:590:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:768:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:998:in block in execute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:1046:inddl_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:997:in execute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:959:inblock in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:in each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:823:in up'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:801:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/tasks/database_tasks.rb:137:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/railties/databases.rake:44:inblock (2 levels) in '\nPG::UniqueViolation: ERROR:  duplicate key value violates unique constraint \"ci_builds_pkey\"\nDETAIL:  Key (id)=(50) already exists.\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:155:in async_exec'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:155:inblock in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:484:in block in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/notifications/instrumenter.rb:20:ininstrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:478:in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/postgresql/database_statements.rb:154:inexecute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:665:in block in method_missing'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:inblock in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:654:inmethod_missing'\n/home/git/gitlab/lib/gitlab/database/migration_helpers.rb:198:in block in update_column_in_batches'\n/home/git/gitlab/lib/gitlab/database/migration_helpers.rb:175:inloop'\n/home/git/gitlab/lib/gitlab/database/migration_helpers.rb:175:in update_column_in_batches'\n/home/git/gitlab/db/post_migrate/20170503004427_upate_retried_for_ci_build.rb:49:inblock in up_postgres'\n/home/git/gitlab/db/post_migrate/20170503004427_upate_retried_for_ci_build.rb:60:in with_temporary_partial_index'\n/home/git/gitlab/db/post_migrate/20170503004427_upate_retried_for_ci_build.rb:37:inup_postgres'\n/home/git/gitlab/db/post_migrate/20170503004427_upate_retried_for_ci_build.rb:14:in up'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:611:inexec_migration'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:592:in block (2 levels) in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:591:inblock in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:in with_connection'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:590:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:768:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:998:inblock in execute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:1046:in ddl_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:997:inexecute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:959:in block in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:ineach'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:823:inup'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:801:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/tasks/database_tasks.rb:137:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/railties/databases.rake:44:in `block (2 levels) in '\nTasks: TOP => db:migrate\n(See full trace by running task with --trace)\n. ",
    "amannocci": "Seems to refer to this issue. ",
    "johnroyer": "Thanks, @amannocci . Comfirm as duplicate.\nClose issue. I will open another issue if I can not solve this problem by following #34358 .. ",
    "jbtristant": "I restarted the synology and now everything is working fine. Weird. ",
    "jianchan": "@solidnerd I also received this error. but I don't know how to reslove it. \nI find the detail msg below. How can I find the conflict record?\n`-- execute(\"INSERT INTO members (access_level, source_id, source_type, user_id, notification_level, type, created_at, updated_at)\\nVALUES (50, 71, 'Namespace', 28, 3, 'GroupMember', '2018-11-13 12:26:25', '2018-11-13 12:26:25'), (50, 71, 'Namespace', 29, 3, 'GroupMember', '2018-11-13 12:26:25', '2018-11-13 12:26:25'), (50, 71, 'Namespace', 33, 3, 'GroupMember', '2018-11-13 12:26:25', '2018-11-13 12:26:25'), (40, 71, 'Namespace', 39, 3, 'GroupMember', '2018-11-13 12:26:25', '2018-11-13 12:26:25'), (50, 71, 'Namespace', 40, 3, 'GroupMember', '2018-11-13 12:26:25', '2018-11-13 12:26:25')\\n\")\n   -> 0.0011s\n-- execute(\"INSERT INTO members (access_level, source_id, source_type, user_id, notification_level, type, created_at, updated_at)\\nVALUES (40, 72, 'Namespace', 11, 3, 'GroupMember', '2018-11-13 12:26:25', '2018-11-13 12:26:25')\\n\")\n   -> 0.0009s\nrake aborted!\nStandardError: An error has occurred, all later migrations canceled:\nValidation failed: Name has already been taken/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/validations.rb:79:in raise_record_invalid'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/validations.rb:43:insave!'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/attribute_methods/dirty.rb:29:in save!'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/transactions.rb:291:inblock in save!`\nand a part of the database data is\n| 526 |           40 |        72 | Namespace   |      11 |                  3 | GroupMember   | 2018-11-13 13:16:46 | 2018-11-13 13:16:46 |          NULL | NULL         | NULL         | NULL               | NULL         | NULL       |\n| 527 |           50 |        72 | Namespace   |      14 |                  3 | GroupMember   | 2018-11-13 13:16:46 | 2018-11-13 13:16:46 |          NULL | NULL         | NULL         | NULL               | NULL         | NULL       |\n| 136 |           50 |        77 | Namespace   |      11 |                  3 | GroupMember   | 2017-10-20 01:28:30 | 2017-10-20 01:28:30 |          NULL | NULL         | NULL         | NULL               | NULL         | NULL       |\n| 185 |           40 |        77 | Namespace   |       9 |                  3 | GroupMember   | 2017-12-04 01:44:07 | 2017-12-04 01:44:07 |            11 | NULL         | NULL         | NULL               | NULL         | NULL       |\n| 186 |           40 |        77 | Namespace   |       7 |                  3 | GroupMember   | 2017-12-04 01:44:32 | 2017-12-04 01:44:32 |            11 | NULL         | NULL         | NULL               | NULL         | NULL       |\n| 137 |           50 |        78 | Namespace   |      11 |                  3 | GroupMember   | 2017-10-20 01:56:23 | 2017-10-20 01:56:23 |          NULL | NULL         | NULL         | NULL               | NULL         | NULL       |\n| 167 |           40 |        78 | Namespace   |      51 |                  3 | GroupMember   | 2017-11-21 09:00:04 | 2017-11-21 09:29:16 |            11 | NULL         | NULL         | NULL               | NULL         | NULL       |\n| 138 |           50 |        79 | Namespace   |      11 |                  3 | GroupMember   | 2017-10-20 02:39:23 | 2017-10-20 02:39:23 |          NULL | NULL         | NULL         | NULL               | NULL         | NULL       |\n| 139 |           40 |        79 | Namespace   |      51 |                  3 | GroupMember   | 2017-10-20 02:42:12 | 2017-10-20 02:42:12 |            11 | NULL         | NULL         | NULL               | NULL         | NULL       |\n| 140 |           40 |        79 | Namespace   |      47 |                  3 | GroupMember   | 2017-10-20 02:42:26 | 2017-10-20 02:42:26 |            11 | NULL         | NULL         | NULL               | NULL         | NULL       |\n| 142 |           50 |        81 | Namespace   |       7 |                  3 | GroupMember   | 2017-10-24 09:02:04 | 2017-10-24 09:02:04 |          NULL | NULL         | NULL         | NULL               | NULL         | NULL       |\n| 143 |           50 |        82 | Namespace   |      11 |                  3 | GroupMember   | 2017-11-03 07:08:52 | 2017-11-03 07:08:52 |          NULL | NULL         | NULL         | NULL               | NULL         | NULL       |\n. ",
    "masakij": "same errors in MR page.\nI no longer access to Commits tab & Changes tab.. I found a workaround for the issue.\nsolution\n\nrun a gitlab container\nopen a shell in the running container (e.g. docker exec -it gitlab bash)\ncompile locale po files to js (bundle exec rake gettext:compile RAILS_ENV=production)\nrecompile assets (bundle exec rake gitlab:assets:compile RAILS_ENV=production NODE_ENV=production)\n\n\n\ncause\n\nlack of locale data in js. 10.5.3 that contains security fixes was released.\nhttps://about.gitlab.com/2018/03/06/security-10-5-3-plus-10-4-5-plus-10-3-8-1st-blog-post/\n\n. https://about.gitlab.com/2018/03/16/gitlab-critical-release-preannouncement/\nCritical Security update is announced. It will be released on Tuesday, March 20th, 2018 at 23:59 UTC.\nThey recommend installations running affected versions to upgrade immediately.\nProbably, 10.5.x may also be affected.. https://about.gitlab.com/2018/03/28/gitlab-10-6-1-released/\n10.6.1 was released. This resolves  a number of  regressions and bugs in 10.6.0.. Is it correct to upgrade to 1.11.0 ? rather than 11.0.0. ",
    "sk33z3r": "Update: It seems that nothing in my gitlab.rb file is being updated upon running gitlab-ctl reconfigure then restarting the container. I must have been looking in the wrong locations when I thought it was reconfiguring.\n\nIf I change settings directly (even if there's a volume on my host), say the nginx conf files, then a restart always reverts the settings, despite what I have set in the gitlab.rb file.\nIf I add a file to try and force the SMTP settings on the container, then again a restart removes this file.\n\nIs there another way to apply the settings from gitlab.rb to the container that I have missed?\nMy order of ops:\n1. Make my changes in gitlab.rb\n2. Run sudo docker exec gitlab gitlab-ctl reconfigure or just gitlab-ctl reconfigure inside the container\n3. Run sudo docker restart gitlab or gitlab-ctl restart inside the container\nEven though both ways give me a successful reconfigure message, the settings are not changed. At some point, changes I made to gitlab.rb got stored into the container, as every time I rebuild it certain hostnames and settings are unchanged, and my instance returns fairly quickly with all the necessary parameters for certs and HTTPS. I just can't seem to make any further changes to my gitlab container via the config files.\nHere's how I build the container, maybe this is part of the issue. I've attempted to include the config parameters here, as well, with no luck (i.e.: -e \"SMTP_ENABLED=true\").\nsudo docker run --detach \\\n   --hostname gitlab.mydomain.com \\\n   --publish 10443:443 --publish 10080:80 --publish 10022:22 --publish 10587:587 --publish 10025:25 \\\n   --name gitlab \\\n   --restart always \\\n   --volume /srv/gitlab/config:/etc/gitlab \\\n   --volume /srv/gitlab/logs:/var/log/gitlab \\\n   --volume /srv/gitlab/data:/var/opt/gitlab \\\n   gitlab/gitlab-ce:latest. Sorry guys... I just realized this is not the proper forum for this issue. I thought I was using your docker image, but I realize that I switched to the official gitlab docker-ce image. Apologies for the false-alarms about your project, closing the issue.. ",
    "asbjornenge": "Any progress here? I'm trying to run gitlab latest in a docker swarm and getting stuck on this. Is the pidfile still located there for latest version? What version of gitlab were you trying @IlyaSemenov ?. @lucpolak I finally got it working just using a more beefy server. I was trying to run on a g1-small on GCP, but upgrading to a n-standard-2 did the trick \ud83d\udc4d . ",
    "lucpolak": "Hello,\nI have the exactly same issue.\nSometimes Gitlab dont start successfully (after server reboot)\nInterested about resolution of this issue.. Hey @asbjornenge, My server is pretty good. The VM is hosted on ESXI with Intel 4c CPU and 32Gb RAM. \nIt is provided by OVH. \nThe VM is Ubuntu with docker installed on it and 4Gb RAM allowed.\nI have another VM with same config with gitlab-ce installed without docker and all works fine ;-(. ",
    "arthurkrupa": "We had the same issue on a DigitalOcean 4-core VPS with 8GB RAM (~30 regular users and a lot of CI pipelines).\nWhat helped was reducing the number of unicorn workers from 8 to 6 (using the UNICORN_WORKERS variable).. We had the same issue on a DigitalOcean 4-core VPS with 8GB RAM (~30 regular users and a lot of CI pipelines).\nWhat helped was reducing the number of unicorn workers from 8 to 6 (using the UNICORN_WORKERS variable).. I got the same error when running gitlab:backup:repo:create on  10.5.5 and 10.6.3. \nRunning raketask gitlab:backup:create...\nMissing Rails.application.secrets.openid_connect_signing_key for production environment. The secret will be generated and stored in config/secrets.yml.\nDumping database ... \nDumping PostgreSQL database gitlab ... [DONE]\ndone\nDumping repositories ...\n * example-group/example-repo ... rake aborted!\nGRPC::Unavailable: 14:Connect Failed\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:31:in `check_status'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:180:in `attach_status_results_and_complete_call'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:372:in `request_response'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/client_stub.rb:178:in `block in request_response'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/interceptors.rb:170:in `intercept!'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/client_stub.rb:177:in `request_response'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/service.rb:170:in `block (3 levels) in rpc_stub_class'\n/home/git/gitlab/lib/gitlab/gitaly_client.rb:127:in `call'\n/home/git/gitlab/lib/gitlab/gitaly_client/repository_service.rb:17:in `exists?'\n/home/git/gitlab/lib/gitlab/git/repository.rb:142:in `block in exists?'\n/home/git/gitlab/lib/gitlab/gitaly_client.rb:255:in `block (2 levels) in migrate'\n/home/git/gitlab/lib/gitlab/gitaly_client.rb:293:in `allow_n_plus_1_calls'\n/home/git/gitlab/lib/gitlab/gitaly_client.rb:250:in `block in migrate'\n/home/git/gitlab/lib/gitlab/metrics/influx_db.rb:98:in `measure'\n/home/git/gitlab/lib/gitlab/gitaly_client.rb:248:in `migrate'\n/home/git/gitlab/lib/gitlab/git/repository.rb:140:in `exists?'\n/home/git/gitlab/app/models/repository.rb:479:in `exists?'\n/home/git/gitlab/lib/gitlab/repository_cache_adapter.rb:17:in `block (2 levels) in cache_method'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:299:in `block in fetch'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:585:in `block in save_block_result_to_cache'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:547:in `block in instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/notifications.rb:166:in `instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:547:in `instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:584:in `save_block_result_to_cache'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:299:in `fetch'\n/home/git/gitlab/lib/gitlab/repository_cache.rb:22:in `fetch'\n/home/git/gitlab/lib/gitlab/repository_cache_adapter.rb:54:in `cache_method_output'\n/home/git/gitlab/lib/gitlab/repository_cache_adapter.rb:16:in `block in cache_method'\n/home/git/gitlab/app/models/repository.rb:487:in `empty?'\n/home/git/gitlab/app/models/repository.rb:335:in `expire_emptiness_caches'\n/home/git/gitlab/lib/backup/repository.rb:198:in `empty_repo?'\n/home/git/gitlab/lib/backup/repository.rb:21:in `block in dump'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `block (2 levels) in find_each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `block in find_each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:124:in `find_in_batches'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:50:in `find_each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/querying.rb:9:in `find_each'\n/home/git/gitlab/lib/backup/repository.rb:9:in `dump'\n/home/git/gitlab/lib/tasks/gitlab/backup.rake:82:in `block (4 levels) in <top (required)>'\n/home/git/gitlab/lib/tasks/gitlab/backup.rake:12:in `block (3 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-12.3.0/exe/rake:27:in `<top (required)>'\nTasks: TOP => gitlab:backup:repo:create. I got the same error when running gitlab:backup:repo:create on  10.5.5 and 10.6.3. \nRunning raketask gitlab:backup:create...\nMissing Rails.application.secrets.openid_connect_signing_key for production environment. The secret will be generated and stored in config/secrets.yml.\nDumping database ... \nDumping PostgreSQL database gitlab ... [DONE]\ndone\nDumping repositories ...\n * example-group/example-repo ... rake aborted!\nGRPC::Unavailable: 14:Connect Failed\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:31:in `check_status'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:180:in `attach_status_results_and_complete_call'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:372:in `request_response'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/client_stub.rb:178:in `block in request_response'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/interceptors.rb:170:in `intercept!'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/client_stub.rb:177:in `request_response'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/grpc-1.10.0-x86_64-linux/src/ruby/lib/grpc/generic/service.rb:170:in `block (3 levels) in rpc_stub_class'\n/home/git/gitlab/lib/gitlab/gitaly_client.rb:127:in `call'\n/home/git/gitlab/lib/gitlab/gitaly_client/repository_service.rb:17:in `exists?'\n/home/git/gitlab/lib/gitlab/git/repository.rb:142:in `block in exists?'\n/home/git/gitlab/lib/gitlab/gitaly_client.rb:255:in `block (2 levels) in migrate'\n/home/git/gitlab/lib/gitlab/gitaly_client.rb:293:in `allow_n_plus_1_calls'\n/home/git/gitlab/lib/gitlab/gitaly_client.rb:250:in `block in migrate'\n/home/git/gitlab/lib/gitlab/metrics/influx_db.rb:98:in `measure'\n/home/git/gitlab/lib/gitlab/gitaly_client.rb:248:in `migrate'\n/home/git/gitlab/lib/gitlab/git/repository.rb:140:in `exists?'\n/home/git/gitlab/app/models/repository.rb:479:in `exists?'\n/home/git/gitlab/lib/gitlab/repository_cache_adapter.rb:17:in `block (2 levels) in cache_method'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:299:in `block in fetch'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:585:in `block in save_block_result_to_cache'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:547:in `block in instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/notifications.rb:166:in `instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:547:in `instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:584:in `save_block_result_to_cache'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:299:in `fetch'\n/home/git/gitlab/lib/gitlab/repository_cache.rb:22:in `fetch'\n/home/git/gitlab/lib/gitlab/repository_cache_adapter.rb:54:in `cache_method_output'\n/home/git/gitlab/lib/gitlab/repository_cache_adapter.rb:16:in `block in cache_method'\n/home/git/gitlab/app/models/repository.rb:487:in `empty?'\n/home/git/gitlab/app/models/repository.rb:335:in `expire_emptiness_caches'\n/home/git/gitlab/lib/backup/repository.rb:198:in `empty_repo?'\n/home/git/gitlab/lib/backup/repository.rb:21:in `block in dump'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `block (2 levels) in find_each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `block in find_each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:124:in `find_in_batches'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:50:in `find_each'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/querying.rb:9:in `find_each'\n/home/git/gitlab/lib/backup/repository.rb:9:in `dump'\n/home/git/gitlab/lib/tasks/gitlab/backup.rake:82:in `block (4 levels) in <top (required)>'\n/home/git/gitlab/lib/tasks/gitlab/backup.rake:12:in `block (3 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-12.3.0/exe/rake:27:in `<top (required)>'\nTasks: TOP => gitlab:backup:repo:create. ",
    "Mario-Eis": "Exact same issue on Synology NAS. Reducing the workers did not solve the issue. \nMaybe it should be mentioned, that it already worked fine. The issues started about 1-2 month ago. Maybe with 10.2.x or 10.3.x. Is there a workaround like automatically removing the pid file at startup?. ",
    "HengCC": "\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898. INFO exited: unicorn (exit status 1; not expected)2018-04-22 06:08:53,643 INFO spawned: 'unicorn' with pid 587                                                 \n2018-04-22 06:08:54,647 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds\n (startsecs). ",
    "bsakweson": "sameersbn/gitlab:10.6.4\nI am seeing this same behavior at the moment and can hardly understand how to go about resolving it. I am in the process of deploying gitlab in our on-prem kubernetes cluster. Some googling shows that some people have had success beefing up memory for the running instance. I beefed up pod spec to use up to 4G RAM but that has also been futile. Here is what I am seeing in the log before kubernetes restart the containing as an effort to repair it. In essence, it hangs here: \n2018-04-22 09:01:04,820 CRIT Supervisor running as root (no user in config file)\n2018-04-22 09:01:04,820 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\n2018-04-22 09:01:04,820 WARN Included extra file \"/etc/supervisor/conf.d/gitaly.conf\" during parsing\n2018-04-22 09:01:04,820 WARN Included extra file \"/etc/supervisor/conf.d/gitlab-workhorse.conf\" during parsing\n2018-04-22 09:01:04,820 WARN Included extra file \"/etc/supervisor/conf.d/mail_room.conf\" during parsing\n2018-04-22 09:01:04,820 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\n2018-04-22 09:01:04,820 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\n2018-04-22 09:01:04,820 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\n2018-04-22 09:01:04,820 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\n2018-04-22 09:01:04,824 INFO RPC interface 'supervisor' initialized\n2018-04-22 09:01:04,825 CRIT Server 'unix_http_server' running without any HTTP authentication checking\n2018-04-22 09:01:04,825 INFO supervisord started with pid 1\n2018-04-22 09:01:05,827 INFO spawned: 'gitaly' with pid 592\n2018-04-22 09:01:05,829 INFO spawned: 'sidekiq' with pid 593\n2018-04-22 09:01:05,831 INFO spawned: 'unicorn' with pid 594\n2018-04-22 09:01:05,833 INFO spawned: 'gitlab-workhorse' with pid 595\n2018-04-22 09:01:05,835 INFO spawned: 'cron' with pid 600\n2018-04-22 09:01:05,853 INFO spawned: 'nginx' with pid 601\n2018-04-22 09:01:05,855 INFO spawned: 'sshd' with pid 603\n2018-04-22 09:01:07,564 INFO success: gitaly entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-04-22 09:01:07,564 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-04-22 09:01:07,564 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-04-22 09:01:07,564 INFO success: gitlab-workhorse entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-04-22 09:01:07,564 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-04-22 09:01:07,564 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-04-22 09:01:07,564 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-04-22 09:06:03,655 WARN received SIGTERM indicating exit request\n2018-04-22 09:06:03,656 INFO waiting for sshd, gitlab-workhorse, sidekiq, cron, nginx, gitaly, unicorn to die\n2018-04-22 09:06:03,657 INFO stopped: sshd (exit status 0)\n2018-04-22 09:06:03,662 INFO stopped: nginx (exit status 0)\n2018-04-22 09:06:03,663 INFO stopped: cron (terminated by SIGTERM)\n2018-04-22 09:06:03,665 INFO stopped: gitlab-workhorse (terminated by SIGTERM)\n2018-04-22 09:06:05,094 INFO stopped: unicorn (exit status 0)\n2018-04-22 09:06:07,097 INFO waiting for sidekiq, gitaly to die\n2018-04-22 09:06:07,669 INFO stopped: sidekiq (exit status 0)\n2018-04-22 09:06:07,676 INFO stopped: gitaly (exit status 1)\nSee these two lines where it dies and look at how long it took for it to stop:\n2018-04-22 09:01:07,564 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2018-04-22 09:06:03,655 WARN received SIGTERM indicating exit request\nIt just sits at this point until the container is restarted by kubernetes. I have also increased initialDelaySeconds: 300, a relatively higher number to see if that resolves it but no luck. \n. ",
    "fover0932": "docker exec -it gitlab rm /home/git/gitlab/tmp/pids/unicorn.pid && docker restart gitlab\nThis solved my issue, thanks :-)\n-----me too, thanks!!!. ",
    "compurator": "2018\ub144 6\uc6d4 2\uc77c (\ud1a0) \uc624\uc804 11:09, fover0932 notifications@github.com\ub2d8\uc774 \uc791\uc131:\n\ndocker exec -it gitlab rm /home/git/gitlab/tmp/pids/unicorn.pid && docker\nrestart gitlab\nThis solved my issue, thanks :-)\n-----me too, thanks!!!\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1305#issuecomment-394049215,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEzfyNS3nKC5dlYdnxxZX8NRDwxwuiZyks5t4fPcgaJpZM4OkxsJ\n.\n. \n",
    "herrmanthegerman": "I'm seeing this issue just now on my GitLab installation on a Synolog NAS. \nI installed GitLab via Package Center, i.e, I'm using the package provided by Synology which is based on an old version (sameersbn/gitlab:9.4.4). \nFixed the issue by removing the stale PID file. Thanks!. ",
    "sharkymcdongles": "Any actual solution rather than a mitigation? Is it just that my docker container doesn't have enough memory assigned or is there something misconfigured?. ",
    "StefanCristian": "In my case, the problem was the fact that I was using wrong signed-SSL certificates, and especially the wrong dhparam.pem certificate\nNginx didn't recognize them and faulted with that\nThe bad side of the story is that it didn't show up in the logs anywhere\n@bsakweson @sharkymcdongles  did you try with self-signed for a short test?. ",
    "jcberthon": "We experienced a file system full and had to restart GitLab. After restart we also had a error 502.\nI did:\n```console\ngitlab-ctl status\nrun: alertmanager: (pid 551) 1449s; run: log: (pid 545) 1449s\nrun: gitaly: (pid 593) 1449s; run: log: (pid 589) 1449s\nrun: gitlab-monitor: (pid 597) 1449s; run: log: (pid 592) 1449s\nrun: gitlab-pages: (pid 558) 1449s; run: log: (pid 556) 1449s\nrun: gitlab-workhorse: (pid 553) 1449s; run: log: (pid 548) 1449s\nrun: logrotate: (pid 596) 1449s; run: log: (pid 591) 1449s\nrun: nginx: (pid 579) 1449s; run: log: (pid 578) 1449s\nrun: node-exporter: (pid 552) 1449s; run: log: (pid 547) 1449s\nrun: postgres-exporter: (pid 563) 1449s; run: log: (pid 560) 1449s\nrun: postgresql: (pid 561) 1449s; run: log: (pid 557) 1449s\nrun: prometheus: (pid 594) 1449s; run: log: (pid 590) 1449s\nrun: redis: (pid 549) 1449s; run: log: (pid 543) 1449s\nrun: redis-exporter: (pid 550) 1449s; run: log: (pid 544) 1449s\nrun: registry: (pid 542) 1449s; run: log: (pid 540) 1449s\nrun: sidekiq: (pid 541) 1449s; run: log: (pid 539) 1449s\nrun: sshd: (pid 20) 1480s; run: log: (pid 19) 1480s\nrun: unicorn: (pid 33646) 1s; run: log: (pid 559) 1449s\n```\nAll services were up except unicorn which kept on restarting.\nI've checked the log files of unicorn and it stated:\nArgumentError: Already running on PID:777 (or pid=/opt/gitlab/var/unicorn/unicorn.pid is stale)\nSo as already mentioned above a simple rm /opt/gitlab/var/unicorn/unicorn.pid was enough. Actually because GitLab (omnibus installation) was keeping on restarting unicorn, I did not have to restart anything. After a second, unicorn was up and running and GitLab was healthy again! :-). ",
    "ulm0": "It all seems Travis CI doesn't use the makefile so the build arg needs to be passed to travis itself, just updated it. It all seems Travis CI doesn't use the makefile so the build arg needs to be passed to travis itself, just updated it. ",
    "wokadeh": "Thank you for your answer. Yes, usually the repos are stored within /home/git/data/repositories, though through my setup they seem to be somewhere else which is not this path in the container and not the path I intended on my external drive.\nWhat does the \":Z\" stand for?\nWhat advantage do I have with a compose file? It is important for me that the containers are loaded on a reboot of the machine so I was using a systemd service that is loading the containers for me.. So, what is a private unshared label?\nYes, I used 'find' also looking directly for the name of some of the repos to find them, but I didn't get a result. Really weird since they are there somewhere according to the web interface.\nSo, when I setup a new gitlab instance is it possible to migrate the single *.git directories from my old instance to this? I didn't make a backup, unfortunaly, I will change to auto-backup with the given flag in the new container.. So I did use docker-compose and used\n\nInstead of seperating the repository from the data you should probably save all of the data on your external storage (including your database if you want to). Modify the volume path in your docker-compose file:\n\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:9.4.3\n    volumes:\n    - /home/xxx/external_storage/docker/volumes/diva_gitlab/:/home/git/data:Z\nI also set the variable \n - GITLAB_REPOS_DIR=/home/xxx/external_storage/docker/volumes/diva_gitlab/data/repositories\nWhat happens now is that inside the docker container now that path is created and repositories are stored there :-( :-(\nThe reason I also used the variable was that the repositories where still stored at the usual location, e.g. the volume was not used\n. ",
    "tonyyip1969": "Finally, I managed to resolve it,. ",
    "kominoshja": "Can you post the steps you took?\n. ",
    "imsuwj": "@xNevo if that, then service will down for a long while?. ",
    "tdroenner": "Latest Docker 17.06. and MySQL 5.6.26 as backend. @sameersbn I've put this into the gitlab-ce issue tracker, too. The solution would be:\nMake sure only the GitLab user has access to the public/uploads/ directory\nnow that files in public/uploads are served by gitlab-workhorse\nsudo chmod 0700 public/uploads\ncan you adjust this project, please ?. Anything new on this subject?. Found the problem. It was an issue with base filesystem which has been mapped int the docker container.. ",
    "mathewpeterson": "Specifically, this addresses: Remote Command Execution in git client (CVE-2017-12426). @phenomax Is this still Work In Progress?. @innuendonh It would not, each Gitlab release has its own PR here, in order to keep a clean git history. Somebody will need to create a PR for 10.3.6.. I believe they require a single PR per version bump because they cut a docker image for each release.\nIt might be better to create multiple pull requests.. ",
    "bzon": "I also tried adding GITLAB_ROOT_PASSWORD but it kept on prompting me to create a new password that I couldn't pass through.. ",
    "drjoju": "Hi, I think, \nI have the same issue. After updating in my Synology to version 9.4.4 the server doesn't start. I decide to install the latest version 9.5.1. After installing and configuring it the server starts but I can't login. I have standard login and LDAP login but neither works.\nAny suggestion? Exists the posibility to downgrade to an older version like 9.4.1?\nThanks and best regards\n. I finally think it is not the same error.\nMi problem was that after update from 9.4.4 to 9.5.1 the LDAP doesn't works.  With standard login & password we can access.\nSorry and good look.. Hi, I have the same problem.\nFinally I decide to migrate to 9.5.1. All seems to work well except LDAP. \nBest regards. ",
    "c3r63ru5": "Same here...\nMissing Rails.application.secrets.jws_private_key for production environment. The secret will be generated and stored in config/secrets.yml.. Same here...\nMissing Rails.application.secrets.jws_private_key for production environment. The secret will be generated and stored in config/secrets.yml.. For me, the problem was not related to the database migration itself. I was able to upgrade after enabling a mysql feature.\nset global log_bin_trust_function_creators=1;. For me, the problem was not related to the database migration itself. I was able to upgrade after enabling a mysql feature.\nset global log_bin_trust_function_creators=1;. ",
    "aguedeney": "This might be the way the container is constructed or GitLab folks have a migration bug.. Don't do it unless you have a good reliable backup (as should be always).. My issue was with Postgres 9.3.9 -> 9.4.4.  However, after thinking about it.  I believe the following process should allow anyone to overcome this migration issue(s) - :\n\nCreate a current backup of your GitLab repo:\ndocker exec -t gitlab gitlab-rake gitlab:backup:create\n\nIf others are actively using it, stop the container AFTER doing a backup!\n\n\nRename your repository directory \n\n\nUpdate docker-compose.yml with latest versions of GitLab.  You'll get a fresh empty/clean GitLab!\n\n\nCopy in the gitlab-gitlab/backups with all the tar backup files\n\n\nNow restore from latest GitLab backup (my example):\ndocker-compose run --rm gitlab app:rake gitlab:backup:restore BACKUP=1502514156_2017_08_12_9.3.9\n\n\nHope this helps someone!\n. ",
    "alitari": "i'm still hesitating  to upgrade to 9.4.4 ( from 9.4.1) , because of this issue. Anyone done the migration successful?. ",
    "GarbageYard": "Do i need to launch a redis container too or GitLab container has the default in-built? I have implemented only the following section: https://github.com/sameersbn/docker-gitlab#linking-to-postgresql-container.. Sorry for the confusion but i got it working. Redis was indeed required but yesterday when i was checking the logs, it was only complaining about the db issue. Today when i started the Google Cloud instance and checked for error again, it was surprisingly showing no issue with database and started showing issue with redis as shown below:\n...\nConfiguring gitlab...\nConfiguring gitlab::database\nConfiguring gitlab::redis\nERROR:\n  Please configure the redis connection.\n  Refer http://git.io/PMnRSw for more information.\n  Cannot continue without a redis connection. Aborting...\nThen when i configured Redis and provided values to GITLAB_SECRETS_DB_KEY_BASE, GITLAB_SECRETS_SECRET_KEY_BASE and GITLAB_SECRETS_OTP_KEY_BASE, i was finally able to access the GitLab UI. :). Got the issue. Following variables were also required to get the db configuration working.\n- DB_ADAPTER=postgresql\n- DB_HOST=postgresql\n- DB_PORT=5432\n- DB_USER=gitlab\n- DB_PASS=password\n- DB_NAME=gitlabhq_production\n\nWhen i had set up these three containers outside of Kubernetes, i didn't had to declare those in my GitLab container startup script. I used --link gitlab-postgresql:postgresql --link gitlab-redis:redisio in my GitLab script. Anyways, i'm glad it's working now. :). I found the issue. It was because my GitLab service was configured to use type: ClusterIP. What was needed was type: LoadBalancer and i had to use external Load Balancer.. ",
    "R2ZER0": "Hi @solidnerd,\nSorry but I don't know how to actually set up an OpenStack Swift store! I use the cloud object storage from OVH, which is a Swift object store - afaik rackspace also offer something similar. I can recommend OVH for testing, given that it costs a couple of pence. Alternatively openstack seem to have DevStack, for quick setup on a local VM (but I have not tried this):\nhttps://docs.openstack.org/devstack/latest/\nhttps://ask.openstack.org/en/question/3298/how-to-install-devstack-for-testing-swift/\nAs for documentation, I've added the new env variables to the README, and added a usage section in the style of GCE/AWS. . ",
    "GeorgeforChina": "Recently met a problem \uff0con the premise of not to install openstack, I want to install a multi server of swift, could you tell me whether can give help, the opentacke.com show  that to be based on openstack to install on the basis of.so if someone has installed  multi server of swift ,can you sharing you experience.thanks!. Recently met a problem \uff0con the premise of not to install openstack, I want to install a multi server of swift, could you tell me whether can give help, the opentacke.com show  that to be based on openstack to install on the basis of.so if someone has installed  multi server of swift ,can you sharing you experience.thanks!. ",
    "jdongelmans": "\ud83d\udc4d  yes please!. ",
    "GetafixIT": "Scratch that... can see now a new setup option in the GUI for sign up email. Issue closed.. Scratch that... can see now a new setup option in the GUI for sign up email. Issue closed.. ",
    "josefglatz": "Which version/tag do you use of the image? If tested the gitlab 9.5.4 image localy with docker-compose and started/stopped it twice a day the last 5-6 days without problems. I have the exact same problem even if I don't use volumes.\nMy host system is Ubuntu 16.04 with latest stable docker. I tried gitlab 10.4.2, 10.4.0 and 10.3.2 without success. Even without any volumes.\nIt's actually not possible to use this image. Any suggestions for a workaround?\nCheers,\nJosef. @mikehaertl At least: I tried to follow the mentioned documentation, yes. Let me try it once more. I will try to split up my questions here. Maybe we can improve the documentation...\n. ## Same server?\nIt's not clear enough for me:\n\nWe assume that you already have Nginx installed on your host system and that you use a reverse proxy configuration to connect to your GitLab container.\n\nDo I have to run GitLab and Registry on one/the same server?\n\nIt seems like, it would be the best to run it on one machine, as the GitLab container mounts registry's volume.\n\n\nCreate auth tokens\nI have an existing wildcard certificate which I want to use instead of self-signed certs:\n\nYou could use an existing domain ceritificate or create ...\n\nDoes I understand it correct: If I use my own one I use the existing like:\n\nMy existing private server key file for my wildcard certificate = registry.key\nMy existing bundled (pem with my certificat and the intermediate) signed certificate wildcard certificate = registry.crt\n\n\nUpdate docker-compose.yml: REGISTRY_AUTH_TOKEN_REALM (problem)\nThe ENV REGISTRY_AUTH_TOKEN_REALM for the registry-container must be set the to public https url of the gitlab-container (e.g. https://git.example.com/jwt/auth) which is only accessible via the nginx reverse proxy in front of.\nIs it possible, that the registry could have problems for accessing the url from the same local server? (my nginx runs on the host in Ubuntu 16.04). Please check Docker Hub: thier is no 10.5.0 tag -> use 10.5.1 instead if you want to stick to a version near 10.5.0. Could that also be in relation with issue #1563 ?.",
    "baracoder": "Strange, it seams that the issue was gone after setting the docker option -e GITLAB_UNICORN_MEMORY_MAX=524288000. Now on 10.1.1 I see the log messages again and the load on the machine is high.\n```\nroot@git:/home/git/gitlab# env|grep GITLAB_UNICORN_MEMORY_MAX\nGITLAB_UNICORN_MEMORY_MAX=524288000\nroot@git:/home/git/gitlab# tail -f /var/log/gitlab/gitlab/unicorn.stderr.log\nI, [2017-11-22T11:11:25.584536 #673]  INFO -- : reaped # worker=1\nI, [2017-11-22T11:11:27.773492 #6740]  INFO -- : worker=1 ready\nW, [2017-11-22T11:11:50.831465 #6740]  WARN -- : #: worker (pid: 6740) exceeds memory limit (508262912.0 bytes > 422973424 bytes)\nW, [2017-11-22T11:11:50.831803 #6740]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 6740) alive: 15 sec (trial 1)\nI, [2017-11-22T11:11:51.700052 #673]  INFO -- : reaped # worker=1\nI, [2017-11-22T11:11:53.717004 #6757]  INFO -- : worker=1 ready\nW, [2017-11-22T11:12:13.749960 #6757]  WARN -- : #: worker (pid: 6757) exceeds memory limit (494220800.0 bytes > 363311097 bytes)\nW, [2017-11-22T11:12:13.750252 #6757]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 6757) alive: 14 sec (trial 1)\nI, [2017-11-22T11:12:14.839219 #673]  INFO -- : reaped # worker=1\nI, [2017-11-22T11:12:16.958801 #6774]  INFO -- : worker=1 ready\n```\nconfig.ru still contains reference to the environment variables, but it looks like the variable is ignored. Did something change in how the process is started or environment is passed?. ",
    "chaosversum": "I'm currently running gitlab 10.1.4 with GITLAB_UNICORN_MEMORY_MAX=629145600 just fine.\nMaybe gitlab 10.1 is using even more initial memory per worker than before, so you have to increase the setting or the workers keep restarting all the time.\nSeems to be a memory leaking issue that is gitlab/ruby related.. ",
    "lekoder": "Perhaps it would be prudent to increase default value again.. ...and my confusion came from fact, that it was you who pointed this particular line in #1347. Good thing that we have this cleared out.. ",
    "krlng": "Thanks @yuankunzhang , I missed that. However after configuring those metrics, I can view them at <host>/-/metrics?token=<my-token>. But still there is nothing running on port 3807.. ",
    "arnisoph": "everything works expected, @krlng could you close this issue?. ",
    "martell": "@phenomax you have a lot of 10.0.0.0 instead of 10.0.0 changes in the README. LGTM :). ",
    "cwildfoerster": "Whats missing? Maybe we should directly upgrade to the just releases 10.0.1. Well, we could just upgrade to 10.0.2 all together :). Whats missing?. Just check the old PR's for the updates. Most patch releases are pretty straight forward to implement.. Seems like unfortunately @sameersbn and @solidnerd are pretty busy the last couple of weeks :(. @solidnerd Nice, glad to hear you're upgrading to xenial. Thank you very much for your work!. I already opened an issue in his repository and already could boil it down to the usermapping he provides in his image.... lgtm @solidnerd @sameersbn . lgtm @sameersbn @solidnerd . Any sign of life from @solidnerd or @sameersbn ?. ",
    "arastu": "What is your schedule for releasing 10.0.1?. ",
    "SvenDowideit": "I'm using docker swarm too, and I think docker secrets support for over-riding some env vars would solve my problem in a pretty clean way.\nI think it should be possible to just add a conditional source /run/secrets/gitlab-secrets to /etc/docker-gitlab/runtime/functions - right before the env-defaults line - that way the secret file just works... \nactually, the same could be done for a docker config file... \n@solidnerd @r2evans what do you think?\n(PR coming :) ). see #1540. what do you think @solidnerd ?. @solidnerd idk - SUPPORT_DOCKER_SWARM_CONFIGS seems redundant - if you're not using Docker Swarm secrets, then there are no swarm files - so the new code in runtime/functions won't trigger.\nwrt moving the contrib - can do.... @solidnerd awesome! looking forward to it :). ",
    "Biegal": "I've just found out I have the exact same issue.\nI use GitLab for personal use, so I didn't found the issue earlier. What I can see from my backups is that it seems it worked fine when I had vers 9.1.2\nThen I've upgraded to 9.3.5 and two things changed:\n1) name of the backup file (I can see it has a version number in the filename now)\n2) backups become much smaller and doesn't contain all repositories.\nI've just upgraded to latest 10.0.2 version, I will check what backups will contain in following days.\nMy config:\n    - GITLAB_BACKUPS=daily\n    - GITLAB_BACKUP_DIR=/home/git/backups\n    - GITLAB_BACKUP_EXPIRY=1814400. @Gaibhne no, I don't even have samba on that machine as far as I know. I'm using rsync to get the backups out of it.. ",
    "Gaibhne": "This is still happening to me with 10.0.3.\nWhen switching to running backups manually via the Docker hosts cron, I ran into an issue that once googled suggested that there is a problem with the backup folder being a Windows Samba share. I don't know if it that is related; @Biegal are you running your backups to a Windows share by any chance ?. I'm not sure this is what caused our problem. We have a server script that automatically docker-compose's down & up our GitLab during the night, and usually, we don't restart it other than that, so if I understand correctly, we should not have had duplicate crontab entries.\nAlso, since #1190 looks like it would cause race conditions, it seems to me like that should have caused our backups to be erratic, but instead I often would end up with many days in a row missing the exact same repos every day.\nNevertheless, if that fix ever gets merged in, I'll be happy to try if it fixes this issue.. ",
    "fforootd": "As the version 10.0.2 is out, can you try it with that version?\n. I did an upgrade from 9.5.5 to 10.0.2 without a problem \ud83d\ude09\nOn Tue, 3 Oct 2017 at 18:38, Niclas Mietz notifications@github.com wrote:\n\nHey,\nI would recommend to use the latest patch version. I think your problem\ngot fixed with\nhttps://about.gitlab.com/2017/09/24/gitlab-10-dot-0-dot-1-released .\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1365#issuecomment-333904205,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AJbBqDEZrcX-t7V1bQxQ8JKp7Kc3UUnLks5somLngaJpZM4PsGHe\n.\n. \n",
    "tiredofit": "We are seeing it as well. Even tried restoring a fresh DB Backup\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-12.0.0/exe/rake:27:in `<top (required)>'\ngit-xxx-org-app          | Tasks: TOP => db:migrate\ngit-xxx-org-app          | (See full trace by running task with --trace)\ngit-xxx-org-app          | Initializing logdir...\ngit-xxx-org-app          | Initializing datadir...\ngit-xxx-org-app          | Updating CA certificates...\ngit-xxx-org-app          | Installing configuration templates...\ngit-xxx-org-app          | SSL Key, SSL Certificate and DHParam were not found.\ngit-xxx-org-app          | Assuming that the container is running behind a HTTPS enabled load balancer.\ngit-xxx-org-app          | Configuring gitlab...\ngit-xxx-org-app          | Configuring gitlab::database\ngit-xxx-org-app          | Configuring gitlab::redis\ngit-xxx-org-app          | Configuring gitlab::secrets...\ngit-xxx-org-app          | Configuring gitlab::sidekiq...\ngit-xxx-org-app          | Configuring gitlab::gitaly...\ngit-xxx-org-app          | Configuring gitlab::monitoring...\ngit-xxx-org-app          | Configuring gitlab::gitlab-workhorse...\ngit-xxx-org-app          | Configuring gitlab::unicorn...\ngit-xxx-org-app          | Configuring gitlab::timezone...\ngit-xxx-org-app          | Configuring gitlab::rack_attack...\ngit-xxx-org-app          | Configuring gitlab::ci...\ngit-xxx-org-app          | Configuring gitlab::artifacts...\ngit-xxx-org-app          | Configuring gitlab::lfs...\ngit-xxx-org-app          | Configuring gitlab::mattermost...\ngit-xxx-org-app          | Configuring gitlab::project_features...\ngit-xxx-org-app          | Configuring gitlab::smtp_settings...\ngit-xxx-org-app          | Configuring gitlab::oauth...\ngit-xxx-org-app          | Configuring gitlab::ldap...\ngit-xxx-org-app          | Configuring gitlab::cron_jobs...\ngit-xxx-org-app          | Configuring gitlab::analytics:piwik...\ngit-xxx-org-app          | Configuring gitlab::backups...\ngit-xxx-org-app          | Configuring gitlab::registry...\ngit-xxx-org-app          | Configuring gitlab::pages...\ngit-xxx-org-app          | Configuring gitlab-shell...\ngit-xxx-org-app          | Configuring nginx...\ngit-xxx-org-app          | Configuring nginx::gitlab...\ngit-xxx-org-app          | Configuring nginx::gitlab::hsts...\ngit-xxx-org-app          | Configuring nginx::gitlab-registry...\ngit-xxx-org-app          | Migrating database...\ngit-xxx-org-app          | Missing Rails.application.secrets.jws_private_key for production environment. The secret will be generated and stored in config/secrets.yml.\ngit-xxx-org-app          | rake aborted!\ngit-xxx-org-app          | StandardError: An error has occurred, all later migrations canceled:\ngit-xxx-org-app          | \ngit-xxx-org-app          | Mysql2::Error: Illegal mix of collations (utf8_general_ci,IMPLICIT) and (utf8_unicode_ci,IMPLICIT) for operation '=':         INSERT INTO user_synced_attributes_metadata (user_id, provider, email_synced)\ngit-xxx-org-app          |         SELECT id, email_provider, external_email\ngit-xxx-org-app          |         FROM users\ngit-xxx-org-app          |         WHERE external_email = TRUE\ngit-xxx-org-app          |         AND NOT EXISTS (\ngit-xxx-org-app          |           SELECT true\ngit-xxx-org-app          |           FROM user_synced_attributes_metadata\ngit-xxx-org-app          |           WHERE user_id = users.id\ngit-xxx-org-app          |           AND (provider = users.email_provider OR (provider IS NULL AND users.email_provider IS NULL))\ngit-xxx-org-app          |         )\ngit-xxx-org-app          |         AND id BETWEEN 1 AND 41\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:120:in `_query'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:120:in `block in query'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:119:in `handle_interrupt'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:119:in `query'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/peek-mysql2-1.1.0/lib/peek/views/mysql2.rb:14:in `query_with_timing'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:in `block in execute'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:484:in `block in log'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/notifications/instrumenter.rb:20:in `instrument'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:478:in `log'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:in `execute'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/mysql2_adapter.rb:225:in `execute'\ngit-xxx-org-app          | /home/git/gitlab/config/initializers/connection_fix.rb:20:in `execute'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:665:in `block in method_missing'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:in `block in say_with_time'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:in `say_with_time'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:654:in `method_missing'\ngit-xxx-org-app          | /home/git/gitlab/db/migrate/20170828135939_migrate_user_external_mail_data.rb:27:in `block in up'\ngit-xxx-org-app          | /home/git/gitlab/app/models/concerns/each_batch.rb:75:in `block in each_batch'\ngit-xxx-org-app          | /home/git/gitlab/app/models/concerns/each_batch.rb:56:in `step'\ngit-xxx-org-app          | /home/git/gitlab/app/models/concerns/each_batch.rb:56:in `each_batch'\ngit-xxx-org-app          | /home/git/gitlab/db/migrate/20170828135939_migrate_user_external_mail_data.rb:24:in `up'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:611:in `exec_migration'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:592:in `block (2 levels) in migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:591:in `block in migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:in `with_connection'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:590:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:768:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:998:in `block in execute_migration_in_transaction'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:1046:in `ddl_transaction'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:997:in `execute_migration_in_transaction'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:959:in `block in migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:in `each'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:823:in `up'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:801:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/tasks/database_tasks.rb:137:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/railties/databases.rake:44:in `block (2 levels) in <top (required)>'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-12.0.0/exe/rake:27:in `<top (required)>'\ngit-xxx-org-app          | ActiveRecord::StatementInvalid: Mysql2::Error: Illegal mix of collations (utf8_general_ci,IMPLICIT) and (utf8_unicode_ci,IMPLICIT) for operation '=':         INSERT INTO user_synced_attributes_metadata (user_id, provider, email_synced)\ngit-xxx-org-app          |         SELECT id, email_provider, external_email\ngit-xxx-org-app          |         FROM users\ngit-xxx-org-app          |         WHERE external_email = TRUE\ngit-xxx-org-app          |         AND NOT EXISTS (\ngit-xxx-org-app          |           SELECT true\ngit-xxx-org-app          |           FROM user_synced_attributes_metadata\ngit-xxx-org-app          |           WHERE user_id = users.id\ngit-xxx-org-app          |           AND (provider = users.email_provider OR (provider IS NULL AND users.email_provider IS NULL))\ngit-xxx-org-app          |         )\ngit-xxx-org-app          |         AND id BETWEEN 1 AND 41\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:120:in `_query'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:120:in `block in query'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:119:in `handle_interrupt'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:119:in `query'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/peek-mysql2-1.1.0/lib/peek/views/mysql2.rb:14:in `query_with_timing'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:in `block in execute'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:484:in `block in log'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/notifications/instrumenter.rb:20:in `instrument'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:478:in `log'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:in `execute'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/mysql2_adapter.rb:225:in `execute'\ngit-xxx-org-app          | /home/git/gitlab/config/initializers/connection_fix.rb:20:in `execute'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:665:in `block in method_missing'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:in `block in say_with_time'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:in `say_with_time'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:654:in `method_missing'\ngit-xxx-org-app          | /home/git/gitlab/db/migrate/20170828135939_migrate_user_external_mail_data.rb:27:in `block in up'\ngit-xxx-org-app          | /home/git/gitlab/app/models/concerns/each_batch.rb:75:in `block in each_batch'\ngit-xxx-org-app          | /home/git/gitlab/app/models/concerns/each_batch.rb:56:in `step'\ngit-xxx-org-app          | /home/git/gitlab/app/models/concerns/each_batch.rb:56:in `each_batch'\ngit-xxx-org-app          | /home/git/gitlab/db/migrate/20170828135939_migrate_user_external_mail_data.rb:24:in `up'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:611:in `exec_migration'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:592:in `block (2 levels) in migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:591:in `block in migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:in `with_connection'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:590:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:768:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:998:in `block in execute_migration_in_transaction'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:1046:in `ddl_transaction'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:997:in `execute_migration_in_transaction'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:959:in `block in migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:in `each'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:823:in `up'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:801:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/tasks/database_tasks.rb:137:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/railties/databases.rake:44:in `block (2 levels) in <top (required)>'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-12.0.0/exe/rake:27:in `<top (required)>'\ngit-xxx-org-app          | Mysql2::Error: Illegal mix of collations (utf8_general_ci,IMPLICIT) and (utf8_unicode_ci,IMPLICIT) for operation '='\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:120:in `_query'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:120:in `block in query'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:119:in `handle_interrupt'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:119:in `query'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/peek-mysql2-1.1.0/lib/peek/views/mysql2.rb:14:in `query_with_timing'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:in `block in execute'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:484:in `block in log'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/notifications/instrumenter.rb:20:in `instrument'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:478:in `log'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:in `execute'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/mysql2_adapter.rb:225:in `execute'\ngit-xxx-org-app          | /home/git/gitlab/config/initializers/connection_fix.rb:20:in `execute'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:665:in `block in method_missing'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:in `block in say_with_time'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:in `say_with_time'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:654:in `method_missing'\ngit-xxx-org-app          | /home/git/gitlab/db/migrate/20170828135939_migrate_user_external_mail_data.rb:27:in `block in up'\ngit-xxx-org-app          | /home/git/gitlab/app/models/concerns/each_batch.rb:75:in `block in each_batch'\ngit-xxx-org-app          | /home/git/gitlab/app/models/concerns/each_batch.rb:56:in `step'\ngit-xxx-org-app          | /home/git/gitlab/app/models/concerns/each_batch.rb:56:in `each_batch'\ngit-xxx-org-app          | /home/git/gitlab/db/migrate/20170828135939_migrate_user_external_mail_data.rb:24:in `up'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:611:in `exec_migration'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:592:in `block (2 levels) in migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:591:in `block in migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:in `with_connection'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:590:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:768:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:998:in `block in execute_migration_in_transaction'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:1046:in `ddl_transaction'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:997:in `execute_migration_in_transaction'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:959:in `block in migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:in `each'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:823:in `up'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:801:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/tasks/database_tasks.rb:137:in `migrate'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/railties/databases.rake:44:in `block (2 levels) in <top (required)>'\ngit-xxx-org-app          | /home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-12.0.0/exe/rake:27:in `<top (required)>'\ngit-xxx-org-app          | Tasks: TOP => db:migrate\ngit-xxx-org-app          | (See full trace by running task with --trace)\ngit-xxx-org-app exited with code 1. Nevermind. Closing,. Dupe of 1526.. Going to re-open this. After upgrading to 10.6.1 the DB Schema updates properly but then any HTTP request is responded with \"Forbidden\". Can't rollback.\n. Solves #1797 . Fixed #1797 . The 8 to 9 upgrade stalled for me as well when using MySQL. I strongly recommend you convert your DB to Postgresql. Once I did that all further upgrades worked without issues.\nhttps://github.com/gitlabhq/mysql-postgresql-converter\nhttps://jo-m.ch/migrate-gitlab-mysql-to-postgres/\n. Correct versions should be as follows: https://gitlab.com/gitlab-org/gitlab-ce/tree/v11.7.4\nGITLAB_SHELL_VERSION=\"8.4.4\"\n    GITLAB_WORKHORSE_VERSION=\"8.0.1\"\n    GITLAB_PAGES_VERSION=\"1.3.1\"\n    GITALY_SERVER_VERSION=\"1.12.2\". Gitaly Server should be 1.2.0 as per https://gitlab.com/gitlab-org/gitlab-ce/blob/v11.8.0/GITALY_SERVER_VERSION. ",
    "insekticid": "I have tested latest version 10.0.2 and the same problem, I am using postgres 9.6.2. solved!\nI had to manually rename table events_for_migration to events_for_migration_ because it cannot be dropped, duno why\nerror message was: cache lookup failed for relation 16713\ntable events_for_migration_ can be deleted after running this query DELETE FROM pg_depend WHERE objid = 16713;\ngitlab ref https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/13932#note_42295060. Gitlab 11.2.3 security release https://about.gitlab.com/2018/08/28/security-release-gitlab-11-dot-2-dot-2-released/. @solidnerd why not 11.2.3?. @solidnerd why not 11.2.3?. ",
    "joserprieto": "Updated from 9.5.5, to latest version (10.1.1), withour problems.\nHost: Debian 9\n```\nlsb_release -a\nNo LSB modules are available.\nDistributor ID: Debian\nDescription:    Debian GNU/Linux 9.2 (stretch)\nRelease:    9.2\nCodename:   stretch\n```. ",
    "nathanmauro": "I really need this before I can upgrade to 10. ",
    "osixia": "hello,\nwould be nice to add also :  ca_file and ssl_version what do you think ?\ndoc: https://docs.gitlab.com/ce/administration/auth/ldap.html. ",
    "pschmitt": "Why don't just you just squash the commits on merge?. Can confirm what @vipseixas reported. 'false' != false. ",
    "vipseixas": "Hi, just upgraded to 10.0.3 and this fix has a problem, the config is not working with the single quotes, instead of verify_certificates: '{{LDAP_VERIFY_SSL}}' it should be verify_certificates: {{LDAP_VERIFY_SSL}}\nI had to remove the quotes manually to make it work.\n. ",
    "vielmetti": "@solidnerd any update on this effort?. ",
    "kazyx": "Thanks, I think it should be written in the README.md. ",
    "tomastzn": "I have a similar setup.\nThe difference is that I run the reverse proxy(nginx) on one host(192.168.32.32), not in docker, and gitlab in docker on another host(192.168.33.33). \nAlso, my setup exposes gitlab on relative path /gitlab, with HTTPs on non-standard port.\nHere is the part of the nginx configuration:\n```\nupstream gitlabserver {\n    server 192.168.33.33:10080;\n}\nserver {\n        listen 44444 ssl default_server;\n        server_name *;\n    # SSL certificate, key, protocols and ciphers here\n\n    underscores_in_headers on;\n\nlocation /gitlab/ {\n    proxy_set_header X-Forwarded-Ssl on;\n    proxy_set_header X-Forwarded-Host $host;\n            proxy_set_header X-Forwarded-Server $host;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n            proxy_pass http://gitlabserver;\n    proxy_redirect https://$host/ https://$host:$server_port/;\n\n            client_max_body_size 10M;\n            proxy_buffer_size 8k;\n            gzip off;\n}\n\n}\n``\n*Note*: Since I use non-standard port, theproxy_redirect` directive tells the nginx to rewrite redirects so they don't loose the port. \nAnd here are the environment variables for docker running gitlab:\n```\nHost where gitlab is exposed, ports and relative root\nGITLAB_HTTPS=true\nGITLAB_HOST=**\nGITLAB_TRUSTED_PROXIES=192.168.32.32\nGITLAB_SSH_PORT=10022\nGITLAB_PORT=44444\nGITLAB_RELATIVE_URL_ROOT=/gitlab\nNGINX_REAL_IP_RECURSIVE=on\nNGINX_REAL_IP_TRUSTED_ADDRESSES=192.168.32.32\n```\nHopefully this will help you resolve the issue.. In addition to using non-root users inside the container, another approach to improve the security is to enable user namespaces in Docker on the host itself.\nhttps://docs.docker.com/engine/security/userns-remap/\nWith that enabled, each process in a Docker container is mapped to unprivileged user on the host, therefore if a process in the container managed to escape to the host, it would have no privileges there.\nBelow is a portion of process list on my host(the first process is the Docker on the host):\nroot      1814  1047       docker-containerd-shim -namespace moby -workdir /var/lib/docker/231072.231072/containerd/daemon/io.containerd.runtime.v1.linux/moby/192afd54a5756c06f7619be144a4e918d65b96840786ab3fd7cdd8b0d30e5907 -address /var/r\n231072    1838  1814         /usr/bin/python /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf\n232072    5862  1838           /usr/local/bin/gitaly /home/git/gitaly/config.toml\n232072    5910  5862             ruby /home/git/gitaly/ruby/bin/gitaly-ruby 676 /tmp/gitaly-ruby803460822/socket.0\n232072    5915  5862             ruby /home/git/gitaly/ruby/bin/gitaly-ruby 676 /tmp/gitaly-ruby803460822/socket.1\n232072    5863  1838           sidekiq 5.2.1 gitlab [0 of 25 busy]\n232072    5864  1838           unicorn_rails master -c /home/git/gitlab/config/unicorn.rb -E production\n232072    6063  5864             unicorn_rails worker[0] -c /home/git/gitlab/config/unicorn.rb -E production\n232072    6066  5864             unicorn_rails worker[1] -c /home/git/gitlab/config/unicorn.rb -E production\n232072    6069  5864             unicorn_rails worker[2] -c /home/git/gitlab/config/unicorn.rb -E production\n232072    5865  1838           /usr/local/bin/gitlab-workhorse -listenUmask 0 -listenNetwork tcp -listenAddr :8181 -authBackend http://127.0.0.1:8080/gitlab -authSocket /home/git/gitlab/tmp/sockets/gitlab.socket -documentRoot /home/git/git\n231072    5866  1838           /usr/sbin/cron -f\n231072    5867  1838           nginx: master process /usr/sbin/nginx -g daemon off;\n231105    5903  5867             nginx: worker process\n231105    5904  5867             nginx: worker process\n232072    5868  1838           /usr/local/bin/gitlab-pages -pages-domain tekux.com -pages-root /home/git/data/shared/pages -listen-proxy :8090\n231072    5869  1838           /usr/sbin/sshd -D -E /var/log/gitlab/supervisor/sshd.log\nThis is out of scope for this project, this is more to help people secure their Docker host in general.. ",
    "cszawisza": "Hi!\nFunny thing is that... It started to work after I clean my data directory and start a fresh copy of gitlab. ",
    "siruslan": "I switched to https://github.com/vivienm/docker-gitlab-runner/commit/95227484bc35b3c2a7193cb5fade271691a964c3 and it works. Just pay attention to the mount volume path, it's a little bit different. . ",
    "yuanying": "@solidnerd Hi, thanks for your review!\nYes, I saw #1211.\nI'll move my codes to k8s folder!. Hi, I'm still working this but I'll update soon. . This livenessProve doesn't work because \"/\" responds \"404\".\nSo this path should be \"/-/liveness\" and to set \"GITLAB_MONITORING_IP_WHITELIST\" is needed.. This also should be \"/-/readiness\".. Please add GITLAB_MONITORING_IP_WHITELIST: \"10.0.0.0/8\".\nThis network range should be pod network range. Default value \"0.0.0.0/8\" doesn't work.. ",
    "juanmao": "still happen\nNiclas Mietz notifications@github.com\u4e8e2017\u5e7411\u67086\u65e5 \u5468\u4e00\u4e0a\u53484:20\u5199\u9053\uff1a\n\n@juanmao https://github.com/juanmao Is this issue still happen or can\nthis be closed ?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1381#issuecomment-342002065,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFRvP0Vj2hsVMcDnnErLg1BNWQuOv7MPks5szhh_gaJpZM4P1fif\n.\n. but in fact after I disable the firewall, stop and\nup  docker-compose again, it still not working.\n\n2017-11-14 18:28 GMT+08:00 Niclas Mietz notifications@github.com:\n\n@juanmao https://github.com/juanmao This is DNS problem like @cat5\nhttps://github.com/cat5 said. I think some goes wrong with your\nfirewall settings and docker. I would not recommend to use a firewall with\ndocker only when you know what you are trying to achieve.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1381#issuecomment-344214008,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFRvP4yu1oeITXI6jhL9xCxuVPDk-hlbks5s2Ws8gaJpZM4P1fif\n.\n. \n",
    "Nepoxx": "Awesome, merci!. Set the following environment variables when starting your container:\nyaml\n    - LDAP_ENABLED=true\n    - LDAP_LABEL=\n    - LDAP_HOST=\n    - LDAP_BIND_DN=\n    - LDAP_PASS=\n    - LDAP_BASE=\nPlease close this issue.\nalso, this is documented very well in the readme.. I might be missing something but from reading the comments it seems like restarting the container after upgrading fixes this issue?  Can anyone confirm this?. I had this issue and therefore stayed on 10.8.1, I just updated to 11.0.1 and I no longer have this issue.. Thank you. I did that and the assets are indeed migrated to GitLab. Do you happen to know the upload schedule for background uploads?\nI see object_storage:object_storage_background_move and object_storage:object_storage_migrate_uploads queues in https://mygitlabinstance/admin/background_jobs but they are of size 0 and my new LFS objects are not being migrated, even after more than 24 hours. Any ideas how to debug this?\n. For anyone wondering, by default GITLAB_LFS_OBJECT_STORE_BACKGROUND_UPLOAD is set to false in this repository https://github.com/sameersbn/docker-gitlab/blob/13e856141ec14eff47569bb765a08cd1ea7d0f8d/assets/runtime/env-defaults#L121\nThis does not match GitLab's default: https://docs.gitlab.com/ee/workflow/lfs/lfs_administration.html#storing-lfs-objects-in-remote-object-storage\n(also mentionned here: https://github.com/sameersbn/docker-gitlab/blob/13e856141ec14eff47569bb765a08cd1ea7d0f8d/assets/runtime/config/gitlabhq/gitlab.yml#L186 )\n. GITLAB_LFS_OBJECT_STORE_DIRECT_UPLOAD is also set to false by default (and undocumented on the README.md (I can do a PR if that would be helpful)).\nI feel like GITLAB_LFS_OBJECT_STORE_BACKGROUND_UPLOAD should default to true, thoughts @leslau ?. ",
    "bsylvain": "Once in the container, where is the rails gitlab folder ?\n. ",
    "Wicowyn": "docker exec -it myContainer bin/rails console. You may need to increase GITLAB_UNICORN_MEMORY_MAX.\nElse, check log in /var/log/gitlab. ",
    "ovr": "@solidnerd Please cherry-pick 90dbcf2 from @LordFPL because without it Gitaly v0.43 will not start, clone will fail inside CI\nExample error:\nfatal: unable to access 'https://gitlab-ci-token:xxxxxxxxxxxxxxxxxxxx@porno.com/lel/meow.git': The requested URL returned error: 500\n. ",
    "Stel000": "@solidnerd I'm sorry i can't.My employer's plantform use too more weak password.. ",
    "carllhw": "Any progress ?. ",
    "icecraft": "It seems something wrong happend in  file  ' app/views/shared/ new_project_item_select.html.haml'.  But I do not know how to solve it for i do not know ruby.. It seems something wrong happend in  file  ' app/views/shared/ new_project_item_select.html.haml'.  But I do not know how to solve it for i do not know ruby.. ",
    "hex-m": "If you look at the changes for other minor versions here and here it seems like this should be trivial. I didn't test it but I wish you the best of luck.. ",
    "elcolie": "Okay after I spend 10 minutes posting my issue. My gitlab docker returns 200 by now. ;p\nI have never known that it takes time so long to initialized first time.. ",
    "mikeblanton": "Any word on this one? I'm trying to go from 10.0.4 to 10.1.0 and I'm getting a similar issue.. That's what I thought, too. Migrating from 10.0.4 to 10.1.0 results in an error as well\n\n. I just tried to remove the gitlab-config directory from local storage and rebuild the gitlab container (to get a new version of the doorkeeper.rb file), but it doesn't seem to install all of the files needed to run. When I look at the local directory on disk, there are only 3 files in there, and gitlab contains that it can't load a .rb file.. I\u2019m running it on a 415+ with no issues. I get the db error as well, but that doesn\u2019t seem to be impacting it at all. Given that the gitlab docker is exiting over and over with a -1, you\u2019re gitlab instance isn\u2019t launching properly. Have you looked at the logs from that instance? In the Synology UI, you can view them from the Docker app.. I'd say that's what is causing the restart. I haven't tried 10.4.2 yet, though. Perhaps try 10.4.1? That's what I'm running. I'm not sure what might be causing the host_key issue.. See #1496. Apparently it's an issue with SSH and a lack of support of RSA. Strange, though - I upgraded from 10.0.4 to 10.4.1 the other day, and I'd expect to have run into the same problem. I've got all of my files stored in /volume1/docker/gitlab. Permissions on that dir are 755. Within the container, those files are owned by the git user/git group.\nI suspect you won't be able to install 10.4.x from a fresh install until #1496 is resolved.. Did you have 10.3.6 started and working (aside from the email)? You should be able to just use the same data mount that you had in 10.3.6 to get 10.4.1 or 10.4.2 running. That really looks like the only difference between our two setups, and it doesn't appear that clean installs of 10.4.x are working.. @edtriccorp now that you have 10.3.6 up and running, you should be able to upgrade to 10.4.2 using the same data directory. Email should work as well - I\u2019m sending email from my install, but I\u2019m using gmail. We can troubleshoot that under a different ticket.. ",
    "Bouvere": "Hi there,\nfound some more information.\nI was able to get into the docker (via SSH on my QNAP) by running\ndocker run -it sameersbn/gitlab:8.9.6-1 bash\n8.9.6-1 is the most current version supported by QNAP\nNext I just ran for testing the commands shown above\nmkdir -p ${GITLAB_LOG_DIR}/nginx\nchmod -R 0755 ${GITLAB_LOG_DIR}/nginx\nchown -R ${GITLAB_USER}: ${GITLAB_LOG_DIR}/nginx\nFirst two are working well BUT again the third is throwing the very same error message\nchown: changing ownership of '/var/log/gitlab/nginx': Disk quota exceeded\nI was playing around for a while and the user git is just not allowed to create anything at all on this volume.\nAny idea why or how to resolve this?. ",
    "hulupiao": "Has anyone encountered this situation?. You should set env GITLAB_SSH_PORT. ",
    "freakingawesome": "Did you ever find a resolution to this? We've started experiencing the same problem.. LFS was working fine up until a day or two ago. We're on an installed version of Visual Studio Team System and we're about to contact Support. The IT team says they've only restarted the TFS instance in the past day, indicating that no other maintenance has occured.\nI'll post back here with a resolution (though I'm not sure whether or not it will be suitable for your Gitlab experience) when we get this figured out.. Turning on tracing for Git commands indicated that the LFS server was returning HTTP 401 (Unauthorized). From a bash terminal:\nGIT_TRACE=1 git lfs push origin <branch_name>\n\nomitting lots of output\n13:55:57.549907 trace git-lfs: HTTP: 401\n13:55:57.549907 trace git-lfs: tq: refusing to retry .\n",
    "AlexandreRio": "I'm sorry to hear that, I still have this error.\nDid it work before with your instance? What changes have you made?. @Zanndorin even with GIT_TRACE=1 ?\nSame, I still have my original issue. ",
    "krischik": "\u201cVisual Studio Team System\u201d \u2014 we use that as well. Was there any fix?. ",
    "directrix1": "I'm still having this error. Is there a fix?. This is fixed by Pull Request #1637 .. ",
    "MisterJD": "Yes same here, anyone an idea?. ",
    "sprayzcs": "I faced the same problem and solved it by executing git lfs fetch\n. I faced the same problem and solved it by executing git lfs fetch\n. ",
    "andriy-guzenko": "Fixing the domain url for lfs did the job for me. @shadow7412 Mark Kharitonov explained this better above. Removing domain suffix from url fixed the issue.. ",
    "MarkKharitonov": "We worked around it by fixing the URLs we use to communicate with the TFS. Our TFS server is configured to return URLs without the domain suffix, so removing the domain suffix from all the URLs in the git configuration fixes the problem.. ",
    "Zanndorin": "I'm stuck here in 2019. Nothing written above fixed my issue.\nMine never explicitly fails though. It just keeps running. @AlexandreRio Well Git_trace only shows us that we have the file already closed issue. so yeah, even \"with GIT_TRACE=1\".. ",
    "shadow7412": "\nFixing the domain url for lfs did the job for me\n\n@andriy-guzenko fixing it from what, to what?. > Fixing the domain url for lfs did the job for me\n@andriy-guzenko fixing it from what, to what?. For me the solution was a little different.\nI'm using nginx as a proxy to the gitlab nginx as I have other stuff running on the server. \nWhen I first installed it, I had issues with an infinite redirect. The solution I found was to change the configuration file to http instead of https. This solution works for everything except lfs. \nInstead, leaving the config file as https and forwarding nginx to the https port stops the infinite redirect as well as letting lfs do its thing.. For me the solution was a little different.\nI'm using nginx as a proxy to the gitlab nginx as I have other stuff running on the server. \nWhen I first installed it, I had issues with an infinite redirect. The solution I found was to change the configuration file to http instead of https. This solution works for everything except lfs. \nInstead, leaving the config file as https and forwarding nginx to the https port stops the infinite redirect as well as letting lfs do its thing.. ",
    "Adambean": "I'm not sure this is a transport issue. It fails regardless of whether I use Apache's reverse proxy (intended) or the Omnibus supplied NGINX. Exact same issue.\nConfigurations I've tried:\nRepository -> Apache (HTTPS) -> Gitlab Workhorse (HTTP) = Fails on push\nRepository -> Apache (HTTPS) -> Gitlab Workhorse (HTTPS) = Fails to connect at all (both the web UI and Git access)\nRepository -> Apache (HTTPS) -> Omnibus NGINX (HTTP) -> Gitlab Workhorse = Fails on push\nRepository -> Apache (HTTPS) -> Omnibus NGINX (HTTPS) -> Gitlab Workhorse = Fails on push\nRepository -> Omnibus NGINX (HTTP) -> Gitlab Workhorse = Fails on push\nRepository -> Omnibus NGINX (HTTPS) -> Gitlab Workhorse = Fails on push\nRelevant Gitlab configuration:\n```\nexternal_url                                                                    = \"https://git.example.com\"\nregistry_external_url                                                           = \"https://git.example.com\"\nmattermost_external_url                                                         = \"https://git.example.com\"\nnginx['enable']                                                                 = true\nnginx['listen_addresses']                                                       = [\"0.0.0.0\", \"[::]\"]\nnginx['listen_port']                                                            = 28443\nnginx['listen_https']                                                           = true\nnginx['real_ip_trusted_addresses']                                              = ['ipv4-of-this-server', 'ipv6-of-this-server']\nnginx['real_ip_header']                                                         = 'X-Real-IP'\nnginx['real_ip_recursive']                                                      = 'on'\nnginx['redirect_http_to_https']                                                 = true\nnginx['redirect_http_to_https_port']                                            = 28080\nnginx['ssl_certificate']                                                        = \"/etc/gitlab/ssl/git.example.com.crt\"\nnginx['ssl_certificate_key']                                                    = \"/etc/gitlab/ssl/git.example.com.key\"\nnginx['proxy_set_headers'] = {\n    \"X-Forwarded-Proto\" => \"http\",\n    \"X-Forwarded-Ssl\" => \"on\"\n}\nweb_server['external_users']                                                    = ['www-data']\nletsencrypt['enable']                                                           = false # Copied from certbot to /etc/gitlab/ssl by cron\nletsencrypt['contact_emails']                                                   = ['mgmt@example.com']\nregistry_nginx['redirect_http_to_https']                                        = true\nmattermost_nginx['redirect_http_to_https']                                      = true\ngitlab_workhorse['listen_network']                                              = \"tcp\"\ngitlab_workhorse['listen_addr']                                                 = \"127.0.0.1:8181\"\ngitlab_rails['gitlab_host']                                                     = \"git.example.com\"\ngitlab_rails['gitlab_ssh_host']                                                 = \"git.example.com\"\ngitlab_rails['trusted_proxies']                                                 = ['ipv4-of-this-server', 'ipv6-of-this-server']\n```\nApache VHOST:\n```\n\n    ServerName  git.example.com\n    ServerAdmin ${APACHE_SERVER_ADMIN}\nDocumentRoot /opt/gitlab/embedded/service/gitlab-rails/public\n<Directory \"/opt/gitlab/embedded/service/gitlab-rails/public\">\n    Options -Indexes +FollowSymLinks +MultiViews +ExecCGI\n    AllowOverride all\n    Require all granted\n</Directory>\n\nErrorLog ${APACHE_LOG_DIR}/git.example.com.error.log\nCustomLog ${APACHE_LOG_DIR}/git.example.com.access.log combined\n\nRewriteEngine on\n\nRewriteRule \"/\\.|^\\.(?!well-known/)\" - [NC,L]\n\nRewriteCond %{HTTPS} !=on\nRewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R=301,L]\n#RedirectMatch permanent \"^/(.*)\" \"https://git.example.com/$1\"\n\nRedirectMatch permanent \"^/favicon.ico\" \"https://www.example.com/favicon.ico\"\n\n\n\n\n        ServerName  git.example.com\n        ServerAdmin ${APACHE_SERVER_ADMIN}\n    DocumentRoot /opt/gitlab/embedded/service/gitlab-rails/public\n    <Directory \"/opt/gitlab/embedded/service/gitlab-rails/public\">\n        Options -Indexes +FollowSymLinks +MultiViews +ExecCGI\n        AllowOverride all\n        Require all granted\n    </Directory>\n\n    ErrorLog ${APACHE_LOG_DIR}/git.example.com.error.log\n    CustomLog ${APACHE_LOG_DIR}/git.example.com.access.log combined\n\n    SSLEngine       on\n    SSLVerifyClient     none\n    SSLCertificateFile  /etc/letsencrypt/live/git.example.com/fullchain.pem\n    SSLCertificateKeyFile   /etc/letsencrypt/live/git.example.com/privkey.pem\n\n    RewriteEngine on\n\n    RedirectMatch permanent \"^/favicon.ico\" \"https://www.example.com/favicon.ico\"\n\n    ProxyPreserveHost   On\n    AllowEncodedSlashes NoDecode\n    SSLProxyEngine      On\n\n    <Location />\n        Require all granted\n\n        ProxyPassReverse http://127.0.0.1:8181\n        ProxyPassReverse https://git.example.com/\n    </Location>\n\n    RewriteEngine on\n\n    RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_FILENAME} !-f [OR]\n    RewriteCond %{REQUEST_URI} ^/uploads/.*\n    RewriteRule .* http://127.0.0.1:8181%{REQUEST_URI} [P,QSA,NE]\n\n    RequestHeader set X_FORWARDED_PROTO 'https'\n    RequestHeader set X-Forwarded-Ssl on\n\n    ErrorDocument 404 /404.html\n    ErrorDocument 422 /422.html\n    ErrorDocument 500 /500.html\n    ErrorDocument 502 /502.html\n    ErrorDocument 503 /503.html\n</VirtualHost>\n\n\nvim: syntax=apache ts=4 sw=4 sts=4 sr noet\n```\nWith the http://127.0.0.1:8181 reverse proxy destination I've tried:\n\nhttp://127.0.0.1:8181 - Fails to push\nhttps://127.0.0.1:8181 - Fails to connect at all (both the web UI and Git access)\nhttp://git.example.com:28080 (Omnibus NGINX) - Fails to push\nhttps://git.example.com:28443 (Omnibus NGINX) - Fails to push\n\nAlso tried pushing to the Omnibus NGINX ports directly excluding Apache from the loop completely, exact same issue.. ",
    "Gaddea": "@xNevo I tried this, but I still receive the same error.. ",
    "balajidl": "Can this link help you https://gitlab.com/gitlab-org/gitlab-ce/issues/2689?. Its working fine. I didn't tested it in right way.\nAccess the container instance:\ndocker exec -it <dockerinstanceid> /bin/bash\nAccess rails console\nbundle exec rails console production\nthen try sending email:\nirb(main):002:0> ActionMailer::Base.smtp_settings\n=> {:address=>\"localhost\", :port=>25, :domain=>\"localhost.localdomain\", :user_name=>nil, :password=>nil, :authentication=>nil, :enable_starttls_auto=>true}```\nYou can check the debugging tips at https://docs.gitlab.com/ce/administration/troubleshooting/debug.html. Are you starting docker using docker command or docker-compose ?\nIf docker command, see step 3 at https://github.com/sameersbn/docker-gitlab#installation.\nIf via docker-compose, you can change it at https://github.com/sameersbn/docker-gitlab/blob/master/docker-compose.yml#L30\n. I am also waiting.. May be it got to do with ports mapped. This is how part of my docker-compose looks like.\nI mapped port 22 from docker to parent server (Server running docker).\nFor ssh to the parent server, I changed it to other port\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:latest\n    depends_on:\n    - redis\n    - mysql\n    ports:\n    - \"80:80\"\n    - \"22:22\"\n   ....\n   ....\nCan this be of some help?. I am using redis 2.8.4\nWhat version of redis was it ? \nCan you post more error messages ?\nI see https://hub.docker.com/r/sameersbn/redis/tags/ was updated recently (2 days ago). Is this something do to with that @sameersbn ?\n. I also tried adding the command 'mysql_upgrade'\nimage: sameersbn/mysql:latest\n    command: mysql_upgrade\nbut getting the error \"mysql_upgrade: Got error: 2002: Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (111) while connecting to the MySQL server\". Resolved it by using mysql image and then connecting to mysql shell to run the mysql_upgrade\n\nCreated one docker-compose for mysql alone.\n```\nversion: '2'\n\nservices:\nmysql:\n    restart: always\n    image: mysql\n    volumes:\n    - /mnt/data/docker/gitlab/mysql:/var/lib/mysql:Z\n    environment:\n      MYSQL_DATABASE: \"gitlabhq_production\"\n      MYSQL_USER: \"gitlab\"\n      MYSQL_PASSWORD: \"*\"\n```\n\nstarted it by running docker-compose up\nconnected to the running instance by using the command docker exex -it <doc ps id for mysql> bash to get shell access\nInside the shell ran mysql_upgrade. It upgraded all tables in mysql\nNow copied the same docker-compose to my gitlab docker-compose. (this means, I used mysql image and not sameersbn image)\nstarted docker and gitlab is working fine again. \n",
    "edbergavera": "Thanks @faultylee . @webdeb @nixel2007 \nThanks for your tips. I appreciate it.\nI'll check this out and update here.. Thanks @lorenz. Closing the issue.. I've having the same exact issue. Updated Gitlab to 11.7.5. Git client version is 2.20.1. The following is the error:\nfatal: the receiving end does not support push options\nfatal: the remote end hung up unexpectedly. @donbowman I'll try this out and update here. Thank you.. @donbowman The workaround solution is working. Thank you!. Thanks @drubin I'll take note of that.. ",
    "grimmy": "I'm confused.  All this is doing is cloning ee instead of ce.  You still need to enter a license key to make it work.. Sure, but this is just a config update that's ignored in the CE version.  But when this is paired up with #1428  it's actually quite useful.. ",
    "Steven-Harris": "Can you post your docker-compose.yml or the env paths you have set?. @i-prakasa  To import a project from github you have to grant gitlab access. the process is outlined here.\nhttps://docs.gitlab.com/ee/user/project/import/github.html. \nIn this case a proxy has nothing to do with importing the project as long as the container has access to the host's network. (by default it should). There is a docker-compose you can use in the repo and the README shows how you should set it up too.. @bainim, a quick way to do that via script is to schedule gitlab to run a backup and then some time after that schedule your backup machine grab the folder.\nYou could use something like scp or rync. That command would look something like this\nscp -r user@your.server.example.com:/path/to/backup /path/on/the/backup/server/you/want/to/store/it. ",
    "spritle": "New update available @Ilya-Kuchaev \nYou may close this thread.. @insekticid New update available. You may close this issue.. Just a tip: May be this article can help you https://www.behnke.io/setting-up-lets-encrypt-on-docker-gitlab/. In docker-compse we have the ports like\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:latest\n    depends_on:\n    - redis\n    - mysql\n    ports:\n    - \"80:80\"\n    - \"2525:2525\"\n    - \"22:22\"\nThis means, we gave port 22 for gitlab and we used some other port for ssh login.\nCan this help your case?. Check the file really exist inside your docker folder for gitlab.\nIt will be generally at /gitlab/backups. @ChunAllen \nWhat it is saying when you run \ndocker-compose run --rm gitlab app:rake gitlab:backup:restore # List available backups ?\nIf its list the available files, then you can choose it using\ndocker-compose run --rm gitlab app:rake gitlab:backup:restore BACKUP= 1526281372 # Choose to restore from 1526281372\n. What the logs says while importing ?\n. Not sure why the repo's are empty. You may have to make the the backup tar db version and your current instance db version are same.. Hi @vitaliy-kuzmich ,\nIf this is a fresh install, then you may want to delete those docker volume for db and try again.\nIf you are using mysql, then its better you switch to postgresql.. Not able to guess much. Try to clear the docker volume(folders) and run again.\nAlso go through the documentation again to see if you are missing something.. Since you already have access to gitlab-ee, its best you ask for support from gitlab team to resolve your issue.. > @adamlc There is only endless reboot. I have to remove the container and also the data in my volume to make next clean docker-compose up work.\n@flashermaster Could you please give the commands you used for removing the container and also the data volume?. If you can use mysql like this\nmysql:\n    restart: always\n    image: mysql:5.7.21\n    volumes:. @nixel2007 \nUsing gitlab 10.8.3 with mysql 5.7.21. So far so good.. I guess you are already on latest as per sameersbn docker repo. Its mainly maintained by @sameersbn @solidnerd as an open source initiative. They will do it at their own course but dedicated enough for others to relay.. ",
    "edtriccorp": "I have been having the same issue on 10.3.6 but I am using a certificate from Letsencrypt instead of the self signed. I also cannot get SMTP email with SSL to work. HTTP and port 80 email both work however. I did open up port 10443 on my router as well. . I did look at the log. The only line item I see which may or may not be relevant is:\nSaving key \"/home/git/data/ssh/ssh_host_key\" failed: unknown or unsupported key type\nPerhaps a permissions issue with the mounted volume on the host? I manually created the following directories before running docker-compose:\n/volume1/gitlab/gitlab\n/volume1/gitlab/redis\n/volume1/gitlab/postgresql\nWould you happen to know what are the suggested permissions for the container to have the access it needs to the mounted volume?\n. @mikeblanton Interesting. I just tried 10.4.1 and I am seeing the same issue.. Thank you @mikeblanton I did see #1496 but was curious why it worked with your DS. The upgrade path vs. fresh install is interesting. I have never ran GitLab before. I was running 10.3.6 just fine but could never get email to work with my Goddaddy host. I thought \"hey. new release. why not?\"... Oh well... . @mikeblanton Yes 10.3.6 was started and working. Unfortunately, I decided I wanted a clean install after hours and weeks of trying to get email working. I even had HTTPS working through the synology proxy and a Letsencrypt certificate. Gitlab email worked with port 80 settings but the minute I tried to switch over to SSL/587 email would stop but everything else was as expected. \nI just went back to 10.3.6. Installed and worked as before. Now if I can only figure out SMTP email with TLS. \n. @mikeblanton Thank you sir. I can confirm that upgrading to 10.4.2 from 10.3.6 works. I have not requested help on email because I think it is a lack of understanding on my end. Things seem very confusing in the Synology world. Is opening an issue here the right thing for me to do? I thought this channel was mainly for reporting potential bugs rather than seeking help? i.e. my lack of understanding is not a bug :)  I posted on the Synology forum and the GitLab forum some time ago but the questions have gone unanswered so far. . @josefglatz I was able to install 10.3.6 and then upgrade to 10.4.2. I do not know if that will work for you but worth a shot. See #1495. Not much technical detail but it started out with 10.4.2 for me which is now running after the long way around.  . ",
    "ks32": "fixed by editing supervisor mailroom configuration:\n/etc/supervisor/conf.d/mail_room.conf\n'autostart=true'\n. ",
    "goodmorning9527": "@drubin \n   Here is the dockerfile. DB_PASS=<%password%> causes the error I mention before. \nBesides, DB_PASS=pass word also causes another error. Here is the error log: \n+ [[ 26 -eq 0 ]]\n+ echo -n .\n+ sleep 1\n+ mysqladmin -h mysql -P 3306 -u gitlab -ppass word status\n++ expr 26 - 1\n+ timeout=25\n+ [[ 25 -eq 0 ]]\n+ echo -n .\n+ sleep 1\n+ mysqladmin -h mysql -P 3306 -u gitlab -ppass word status\n++ expr 25 - 1\n+ timeout=24\n+ [[ 24 -eq 0 ]]\n+ echo -n .\n+ sleep 1\nThanks!\n```yaml\nversion: '2'\nservices:\n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\nmysql:\n    restart: always\n    image: sameersbn/mysql:latest\n    environment:\n    - DB_USER=gitlab\n    - DB_PASS=<%password%>\n    - DB_NAME=gitlabdb\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:10.3.2\n    depends_on:\n    - redis\n    - mysql\n    ports:\n    - \"40080:80\"\n    - \"40022:22\"\n    environment:\n    - DEBUG=true\n- DB_ADAPTER=mysql2\n- DB_HOST=mysql\n- DB_PORT=3306\n- DB_USER=gitlab\n- DB_PASS=<%password%>\n- DB_NAME=gitlabdb\n\n- REDIS_HOST=redis\n- REDIS_PORT=6379\n\n- TZ=Asia/Kolkata\n- GITLAB_TIMEZONE=Kolkata\n\n- GITLAB_HTTPS=false\n- SSL_SELF_SIGNED=false\n\n- GITLAB_HOST=localhost\n- GITLAB_PORT=10080\n- GITLAB_SSH_PORT=10022\n- GITLAB_RELATIVE_URL_ROOT=\n- GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string\n- GITLAB_SECRETS_SECRET_KEY_BASE=long-and-random-alphanumeric-string\n- GITLAB_SECRETS_OTP_KEY_BASE=long-and-random-alphanumeric-string\n\n- GITLAB_ROOT_PASSWORD=\n- GITLAB_ROOT_EMAIL=\n\n- GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n- GITLAB_NOTIFY_PUSHER=false\n\n- GITLAB_EMAIL=notifications@example.com\n- GITLAB_EMAIL_REPLY_TO=noreply@example.com\n- GITLAB_INCOMING_EMAIL_ADDRESS=reply@example.com\n\n- GITLAB_BACKUP_SCHEDULE=daily\n- GITLAB_BACKUP_TIME=01:00\n\n- SMTP_ENABLED=false\n- SMTP_DOMAIN=www.example.com\n- SMTP_HOST=smtp.gmail.com\n- SMTP_PORT=587\n- SMTP_USER=mailer@example.com\n- SMTP_PASS=password\n- SMTP_STARTTLS=true\n- SMTP_AUTHENTICATION=login\n\n- IMAP_ENABLED=false\n- IMAP_HOST=imap.gmail.com\n- IMAP_PORT=993\n- IMAP_USER=mailer@example.com\n- IMAP_PASS=password\n- IMAP_SSL=true\n- IMAP_STARTTLS=false\n\n- OAUTH_ENABLED=false\n- OAUTH_AUTO_SIGN_IN_WITH_PROVIDER=\n- OAUTH_ALLOW_SSO=\n- OAUTH_BLOCK_AUTO_CREATED_USERS=true\n- OAUTH_AUTO_LINK_LDAP_USER=false\n- OAUTH_AUTO_LINK_SAML_USER=false\n- OAUTH_EXTERNAL_PROVIDERS=\n\n- OAUTH_CAS3_LABEL=cas3\n- OAUTH_CAS3_SERVER=\n- OAUTH_CAS3_DISABLE_SSL_VERIFICATION=false\n- OAUTH_CAS3_LOGIN_URL=/cas/login\n- OAUTH_CAS3_VALIDATE_URL=/cas/p3/serviceValidate\n- OAUTH_CAS3_LOGOUT_URL=/cas/logout\n\n- OAUTH_GOOGLE_API_KEY=\n- OAUTH_GOOGLE_APP_SECRET=\n- OAUTH_GOOGLE_RESTRICT_DOMAIN=\n\n- OAUTH_FACEBOOK_API_KEY=\n- OAUTH_FACEBOOK_APP_SECRET=\n\n- OAUTH_TWITTER_API_KEY=\n- OAUTH_TWITTER_APP_SECRET=\n\n- OAUTH_GITHUB_API_KEY=\n- OAUTH_GITHUB_APP_SECRET=\n- OAUTH_GITHUB_URL=\n- OAUTH_GITHUB_VERIFY_SSL=\n\n- OAUTH_GITLAB_API_KEY=\n- OAUTH_GITLAB_APP_SECRET=\n\n- OAUTH_BITBUCKET_API_KEY=\n- OAUTH_BITBUCKET_APP_SECRET=\n\n- OAUTH_SAML_ASSERTION_CONSUMER_SERVICE_URL=\n- OAUTH_SAML_IDP_CERT_FINGERPRINT=\n- OAUTH_SAML_IDP_SSO_TARGET_URL=\n- OAUTH_SAML_ISSUER=\n- OAUTH_SAML_LABEL=\"Our SAML Provider\"\n- OAUTH_SAML_NAME_IDENTIFIER_FORMAT=urn:oasis:names:tc:SAML:2.0:nameid-format:transient\n- OAUTH_SAML_GROUPS_ATTRIBUTE=\n- OAUTH_SAML_EXTERNAL_GROUPS=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_NAME=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_FIRST_NAME=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_LAST_NAME=\n\n- OAUTH_CROWD_SERVER_URL=\n- OAUTH_CROWD_APP_NAME=\n- OAUTH_CROWD_APP_PASSWORD=\n\n- OAUTH_AUTH0_CLIENT_ID=\n- OAUTH_AUTH0_CLIENT_SECRET=\n- OAUTH_AUTH0_DOMAIN=\n\n- OAUTH_AZURE_API_KEY=\n- OAUTH_AZURE_API_SECRET=\n- OAUTH_AZURE_TENANT_ID=\n\n```. ",
    "jfreax": "Can we please merge this? This is super useful and speeds up updates a lot.. ",
    "jannwe": "Hi, exactly the same problem for me... They are just fixing the failed migration under:\nhttps://gitlab.com/gitlab-org/gitlab-ce/merge_requests/16141#note_52701562\nIt would be great @solidnerd and @sameersbn if you could update the repository with the new release (10.3.2) as soon as possible. \nThanks!. Hi, exactly the same problem for me... They are just fixing the failed migration under:\nhttps://gitlab.com/gitlab-org/gitlab-ce/merge_requests/16141#note_52701562\nIt would be great @solidnerd and @sameersbn if you could update the repository with the new release (10.3.2) as soon as possible. \nThanks!. ",
    "p-v-a": "I just realized that it's not actually required, it works as it is. So closing this request.. ",
    "schizo99": "Other variables were not defined in env-defaults and since it's blank by default I was hesitant in adding it.\nI've tested the rake command with STRATEGY= without issues.. When can I expect this pull request to be merged?\nAs it is our backups are failing because of this.. Have you tried setting the ENV variable GITLAB_BACKUP_DIR?. Is it now possible to have these pull requests merged? This is the same as I have in https://github.com/sameersbn/docker-gitlab/pull/1463. Here should be the link to the documentation for the community edition and not enterprise edition replace this with this https://docs.gitlab.com/ce/raketasks/backup_restore.html#backup-strategy-option. ",
    "jrief": "having the same problem using the current version.. ",
    "eiabea": "@drubin are there some additional steps to do for me? Because i already fixed the third merge conflict due to version updates :smile: . ",
    "snics": "Yeah, would it be nice if someone could comment on that?. ",
    "martinspaeth": "Would be great to see this accepted.\nI have struggle to get the image built (https://github.com/sameersbn/docker-gitlab/issues/1743). Having the original image from this project would be way nicer!. Do I need to have a specific build env? \nI need to build my own image to run the gitlab container in ee as described in the pull request:\nhttps://github.com/sameersbn/docker-gitlab/pull/1477\nBest Regards and thank you for your help!. I run into an issue: when access controll is active pages won\u2019t work with the message  \u201cto many redirects\u201c. I was wondering if this issue means that Pages with access controll might not work currently or if it\u2019s an configuration problem? \nUpdate:\nI got it working. My problem was a configuration mistake for the following env var:\nDocumentation states:\nGITLAB_PAGES_ACCESS_REDIRECT_URI | Required | Redirect URI, non existing pages domain to redirect to pages daemon,\u00a0https://projects.example.io\n-- | -- | --\nBut one has to configure the path to the auth endpoint like:\nhttps://projects.example.io/auth. ",
    "dansch94": "At first all my repository were also empty then i fixed the premission and after that all was working fine, only uploading avatar is not working.\nMy steps for fixing the repository premissions: https://blackit.de/2017/12/10/gitlab-leeres-repository-nach-serverumzug/. I get still error 500. will this fixed in the next update?. Just new uploading the avatars is also working . ",
    "gazben": "@dansch94 The link is broken. Can you help us out?\nI've got similar problems. If you are missing avatar pictures\nhttps://github.com/sameersbn/docker-gitlab/issues/1526. If you are havong trouble with the WebIDE feature and your instance is running behind an apache2 reverse proxy add the following to the config:\nAllowEncodedSlashes NoDecode \nProxyPass / https://backend/ nocanon\nSource: https://gitlab.com/gitlab-org/gitlab-ce/issues/45707. ",
    "LennardWesterveld": "Please also update golang to Go 1.9.2 see > https://about.gitlab.com/2018/01/22/gitlab-10-4-released/#omnibus-improvements. ",
    "willis7": "I found the properties here but I cant fathom if the default has been applied, or if I still need to do this?. Thanks for the link. My issue is with the memory consumption of Sidekiq, I dont see how that can be linked to unicorn. Can you advise further?. No problem, the comment was useful, I was concerned I was missing a connection :-). ",
    "jamesstout": "aww man, 5 mins too slow: https://github.com/sameersbn/docker-gitlab/pull/1481. thanks. ",
    "1am": "Ok, so it seems that I've found it thanks to good docs How clone_url works \nThe missing secret was --clone-url parameter for runner registration. \ngitlab-runner register -n \\\n    --url https://addres-to-my-gitlab.com/gitlab-runner-test \\\n    --registration-token ${TOKEN} \\\n    --executor ${EXECUTOR} \\\n    --description \"Test Docker Runner\" \\\n    --docker-image \"docker:latest\" \\\n    --docker-privileged \\\n    --clone-url https://addres-to-my-gitlab.com/gitlab-runner-test. Hi @ChunAllen It was quite some time ago but I think that the --clone-url parameter solved the issue for me. \nIf you still have issues see if you don't have multiple similar runners defined in ~/.gitlab-runner/config.toml. Every time you register a runner a new entry is added in the configuration so maybe wrong worker is picking the job in your case. But it's just a guess.\n. ",
    "ChunAllen": "Hi @1am, I also encountered this issue. How did you resolved this? Did you change something in docker-compose.yml?\nCurrently I can access Gitlab using http://localhost:10080 but whenever I run the builds in gitlab I keep getting this. \nHow did you managed to run the script gitlab-runner register using docker?\nFetching changes...\nHEAD is now at 0046c57 add US and india number for whitelisting\nfatal: unable to access 'http://gitlab-ci-token:xxxxxxxxxxxxxxxxxxxx@localhost:10080/projects/test_project.git/': Failed to connect to localhost port 10080: Connection refused\nERROR: Build failed: exit code 1. Thanks @1am, I figured it out. I was able to run the build by changing the the GITLAB_HOST url. . @PhillippOhlandt I'm using ngrok to host gitlab it on my local machine. \nI setup ngrok to point to localhost:10080 and when I run ngrok it returns me a local url which I can use in GITLAB_HOST url\nsample:\nGITLAB_HOST=http://abcgitlab.ngrok.io. @spritle I saw there's a backup tar file in /Users/techx/gitlab/gitlab/backups I tried again to restore but still the return is \nthe specified backup doesn't exist I run the command docker-compose run --rm gitlab app:rake gitlab:backup:restore BACKUP=1526281372 in /gitlab/backups \nMy docker-compose.yml is this \n```\nversion: '2'\nservices:\n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    volumes:\n    - /srv/docker/gitlab/redis:/var/lib/redis:Z\npostgresql:\n    restart: always\n    image: sameersbn/postgresql:9.6-2\n    volumes:\n    - /srv/docker/gitlab/postgresql:/var/lib/postgresql:Z\n    environment:\n    - DB_ADAPTER=postgresql\n    - DB_HOST=postgresql\n    - DB_PORT=5432\n    - DB_USER=gitlab\n    - DB_PASS=\n    - DB_NAME=\n    - DB_EXTENSION=pg_trgm\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:8.12.4\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"10080:80\"\n    - \"10022:22\"\n    volumes:\n    - /srv/docker/gitlab/gitlab:/home/git/data:Z\n- GITLAB_BACKUP_DIR=/Users/techx/gitlab/gitlab/backups\n\n```\nDo I miss something here?. @spritle when I run \ndocker-compose run --rm gitlab app:rake gitlab:backup:restore\nit returns:\n\u2023 1526365762_gitlab_backup.tar (created at 15 May, 2018 - 11:59:22 IST)\n\u2023 1526283286_gitlab_backup.tar (created at 14 May, 2018 - 13:04:46 IST)\n\u2023 1526281372_gitlab_backup.tar (created at 14 May, 2018 - 12:32:52 IST)\n\u2023 1526239928_gitlab_backup.tar (created at 14 May, 2018 - 01:02:08 IST)\nthen I restore 1526283286\nbut it returns \nSelect a backup to restore: 1526283286\nSpecified backup does not exist. Aborting.... Sorry my bad. The backup to restore should be the full filename extension:\n1526283286_gitlab_backup.tar\nI manage to restore everything like commits, builds, comments but I when I try to open one of the repositories it gives me this:\n\nWhat else do I need to do?. @nixel2007 Yup i changed the the configuration to \n- GITLAB_BACKUP_DIR=/home/git/data/backups\n    - GITLAB_REPOS_DIR=/home/git/data/repositories\nI was able to restore the backup but when I checked the repo it's empty. \n\n. @spritle looks like there's no problem when importing the repos but there are errors when restoring the PostgreSQL database:\nHere's the log\n```\nCleaning the database ... \ndone\nRestoring database ... \nRestoring PostgreSQL database gitlabhq_production ... SET\nSET\nSET\nSET\nSET\nSET\nSET\nSET\nSET\nERROR:  relation \"public.merge_requests_closing_issues\" does not exist\nERROR:  relation \"public.boards\" does not exist\nERROR:  relation \"public.merge_request_metrics\" does not exist\nERROR:  relation \"public.u2f_registrations\" does not exist\nERROR:  relation \"public.protected_branch_push_access_levels\" does not exist\nERROR:  relation \"public.protected_branch_merge_access_levels\" does not exist\nERROR:  relation \"public.lists\" does not exist\nERROR:  relation \"public.issue_metrics\" does not exist\nERROR:  relation \"public.merge_requests_closing_issues\" does not exist\nERROR:  relation \"public.lists\" does not exist\nERROR:  relation \"public.personal_access_tokens\" does not exist\nDROP INDEX\nERROR:  index \"taggings_idx\" does not exist\nERROR:  index \"subscriptions_user_id_and_ref_fields\" does not exist\nERROR:  index \"index_web_hooks_on_project_id\" does not exist\nERROR:  index \"index_users_star_projects_on_user_id_and_project_id\" does not exist\nERROR:  index \"index_users_star_projects_on_user_id\" does not exist\nERROR:  index \"index_users_star_projects_on_project_id\" does not exist\nERROR:  index \"index_users_on_username_trigram\" does not exist\nERROR:  index \"index_users_on_username\" does not exist\nERROR:  index \"index_users_on_state\" does not exist\nERROR:  index \"index_users_on_reset_password_token\" does not exist\nERROR:  index \"index_users_on_name_trigram\" does not exist\nERROR:  index \"index_users_on_name\" does not exist\nERROR:  index \"index_users_on_email_trigram\" does not exist\nERROR:  index \"index_users_on_email\" does not exist\nERROR:  index \"index_users_on_current_sign_in_at\" does not exist\nERROR:  index \"index_users_on_created_at\" does not exist\nERROR:  index \"index_users_on_confirmation_token\" does not exist\nERROR:  index \"index_users_on_authentication_token\" does not exist\nERROR:  index \"index_users_on_admin\" does not exist\nERROR:  index \"index_u2f_registrations_on_user_id\" does not exist\nERROR:  index \"index_u2f_registrations_on_key_handle\" does not exist\nERROR:  index \"index_todos_on_user_id\" does not exist\nERROR:  index \"index_todos_on_target_type_and_target_id\" does not exist\nERROR:  index \"index_todos_on_project_id\" does not exist\nERROR:  index \"index_todos_on_note_id\" does not exist\nERROR:  index \"index_todos_on_commit_id\" does not exist\nERROR:  index \"index_todos_on_author_id\" does not exist\nERROR:  index \"index_tags_on_name\" does not exist\nERROR:  index \"index_taggings_on_taggable_id_and_taggable_type_and_context\" does not exist\nERROR:  index \"index_snippets_on_visibility_level\" does not exist\nERROR:  index \"index_snippets_on_updated_at\" does not exist\nERROR:  index \"index_snippets_on_title_trigram\" does not exist\nERROR:  index \"index_snippets_on_project_id\" does not exist\nERROR:  index \"index_snippets_on_file_name_trigram\" does not exist\nERROR:  index \"index_snippets_on_author_id\" does not exist\nERROR:  index \"index_services_on_template\" does not exist\nERROR:  index \"index_services_on_project_id\" does not exist\nERROR:  index \"index_sent_notifications_on_reply_key\" does not exist\nERROR:  index \"index_releases_on_project_id_and_tag\" does not exist\nERROR:  index \"index_releases_on_project_id\" does not exist\nERROR:  index \"index_protected_branches_on_project_id\" does not exist\nERROR:  index \"index_protected_branch_push_access\" does not exist\nERROR:  index \"index_protected_branch_merge_access\" does not exist\nERROR:  index \"index_projects_on_visibility_level\" does not exist\nERROR:  index \"index_projects_on_star_count\" does not exist\nERROR:  index \"index_projects_on_runners_token\" does not exist\nERROR:  index \"index_projects_on_pending_delete\" does not exist\nERROR:  index \"index_projects_on_path_trigram\" does not exist\nERROR:  index \"index_projects_on_path\" does not exist\nERROR:  index \"index_projects_on_namespace_id\" does not exist\nERROR:  index \"index_projects_on_name_trigram\" does not exist\nERROR:  index \"index_projects_on_last_repository_check_failed\" does not exist\nERROR:  index \"index_projects_on_last_activity_at\" does not exist\nERROR:  index \"index_projects_on_description_trigram\" does not exist\nERROR:  index \"index_projects_on_creator_id\" does not exist\nERROR:  index \"index_projects_on_created_at\" does not exist\nERROR:  index \"index_projects_on_ci_id\" does not exist\nERROR:  index \"index_project_features_on_project_id\" does not exist\nERROR:  index \"index_personal_access_tokens_on_user_id\" does not exist\nERROR:  index \"index_personal_access_tokens_on_token\" does not exist\nERROR:  index \"index_on_users_lower_username\" does not exist\nERROR:  index \"index_on_users_lower_email\" does not exist\nERROR:  index \"index_on_projects_lower_path\" does not exist\nERROR:  index \"index_on_namespaces_lower_path\" does not exist\nERROR:  index \"index_oauth_applications_on_uid\" does not exist\nERROR:  index \"index_oauth_applications_on_owner_id_and_owner_type\" does not exist\nERROR:  index \"index_oauth_access_tokens_on_token\" does not exist\nERROR:  index \"index_oauth_access_tokens_on_resource_owner_id\" does not exist\nERROR:  index \"index_oauth_access_tokens_on_refresh_token\" does not exist\nERROR:  index \"index_oauth_access_grants_on_token\" does not exist\nERROR:  index \"index_notifications_on_user_id_and_source_id_and_source_type\" does not exist\nERROR:  index \"index_notification_settings_on_user_id\" does not exist\nERROR:  index \"index_notification_settings_on_source_id_and_source_type\" does not exist\nERROR:  index \"index_notes_on_updated_at\" does not exist\nERROR:  index \"index_notes_on_project_id_and_noteable_type\" does not exist\nERROR:  index \"index_notes_on_project_id\" does not exist\nERROR:  index \"index_notes_on_noteable_type\" does not exist\nERROR:  index \"index_notes_on_noteable_id_and_noteable_type\" does not exist\nERROR:  index \"index_notes_on_note_trigram\" does not exist\nERROR:  index \"index_notes_on_line_code\" does not exist\nERROR:  index \"index_notes_on_discussion_id\" does not exist\nERROR:  index \"index_notes_on_created_at\" does not exist\nERROR:  index \"index_notes_on_commit_id\" does not exist\nERROR:  index \"index_notes_on_author_id\" does not exist\nERROR:  index \"index_namespaces_on_type\" does not exist\nERROR:  index \"index_namespaces_on_path_trigram\" does not exist\nERROR:  index \"index_namespaces_on_path\" does not exist\nERROR:  index \"index_namespaces_on_owner_id\" does not exist\nERROR:  index \"index_namespaces_on_name_trigram\" does not exist\nERROR:  index \"index_namespaces_on_name\" does not exist\nERROR:  index \"index_namespaces_on_deleted_at\" does not exist\nERROR:  index \"index_namespaces_on_created_at\" does not exist\nERROR:  index \"index_milestones_on_title_trigram\" does not exist\nERROR:  index \"index_milestones_on_title\" does not exist\nERROR:  index \"index_milestones_on_project_id_and_iid\" does not exist\nERROR:  index \"index_milestones_on_project_id\" does not exist\nERROR:  index \"index_milestones_on_due_date\" does not exist\nERROR:  index \"index_milestones_on_description_trigram\" does not exist\nERROR:  index \"index_merge_requests_on_title_trigram\" does not exist\nERROR:  index \"index_merge_requests_on_title\" does not exist\nERROR:  index \"index_merge_requests_on_target_project_id_and_iid\" does not exist\nERROR:  index \"index_merge_requests_on_target_branch\" does not exist\nERROR:  index \"index_merge_requests_on_source_project_id\" does not exist\nERROR:  index \"index_merge_requests_on_source_branch\" does not exist\nERROR:  index \"index_merge_requests_on_milestone_id\" does not exist\nERROR:  index \"index_merge_requests_on_description_trigram\" does not exist\nERROR:  index \"index_merge_requests_on_deleted_at\" does not exist\nERROR:  index \"index_merge_requests_on_created_at\" does not exist\nERROR:  index \"index_merge_requests_on_author_id\" does not exist\nERROR:  index \"index_merge_requests_on_assignee_id\" does not exist\nERROR:  index \"index_merge_requests_closing_issues_on_merge_request_id\" does not exist\nERROR:  index \"index_merge_requests_closing_issues_on_issue_id\" does not exist\nERROR:  index \"index_merge_request_metrics_on_first_deployed_to_production_at\" does not exist\nERROR:  index \"index_merge_request_metrics\" does not exist\nERROR:  index \"index_merge_request_diffs_on_merge_request_id\" does not exist\nERROR:  index \"index_members_on_user_id\" does not exist\nERROR:  index \"index_members_on_source_id_and_source_type\" does not exist\nERROR:  index \"index_members_on_requested_at\" does not exist\nERROR:  index \"index_members_on_invite_token\" does not exist\nERROR:  index \"index_members_on_access_level\" does not exist\nERROR:  index \"index_lists_on_label_id\" does not exist\nERROR:  index \"index_lists_on_board_id_and_label_id\" does not exist\nERROR:  index \"index_lists_on_board_id\" does not exist\nERROR:  index \"index_lfs_objects_projects_on_project_id\" does not exist\nERROR:  index \"index_lfs_objects_on_oid\" does not exist\nERROR:  index \"index_labels_on_project_id\" does not exist\nERROR:  index \"index_labels_on_priority\" does not exist\nERROR:  index \"index_label_links_on_target_id_and_target_type\" does not exist\nERROR:  index \"index_label_links_on_label_id\" does not exist\nERROR:  index \"index_keys_on_user_id\" does not exist\nERROR:  index \"index_keys_on_fingerprint\" does not exist\nERROR:  index \"index_issues_on_title_trigram\" does not exist\nERROR:  index \"index_issues_on_state\" does not exist\nERROR:  index \"index_issues_on_project_id_and_iid\" does not exist\nERROR:  index \"index_issues_on_milestone_id\" does not exist\nERROR:  index \"index_issues_on_due_date\" does not exist\nERROR:  index \"index_issues_on_description_trigram\" does not exist\nERROR:  index \"index_issues_on_deleted_at\" does not exist\nERROR:  index \"index_issues_on_created_at\" does not exist\nERROR:  index \"index_issues_on_confidential\" does not exist\nERROR:  index \"index_issues_on_author_id\" does not exist\nERROR:  index \"index_issues_on_assignee_id\" does not exist\nERROR:  index \"index_issue_metrics\" does not exist\nERROR:  index \"index_identities_on_user_id\" does not exist\nERROR:  index \"index_forked_project_links_on_forked_to_project_id\" does not exist\nERROR:  index \"index_events_on_target_type\" does not exist\nERROR:  index \"index_events_on_target_id\" does not exist\nERROR:  index \"index_events_on_project_id\" does not exist\nERROR:  index \"index_events_on_created_at\" does not exist\nERROR:  index \"index_events_on_author_id\" does not exist\nERROR:  index \"index_events_on_action\" does not exist\nERROR:  index \"index_environments_on_project_id_and_name\" does not exist\nERROR:  index \"index_emails_on_user_id\" does not exist\nERROR:  index \"index_emails_on_email\" does not exist\nERROR:  index \"index_deployments_on_project_id_and_iid\" does not exist\nERROR:  index \"index_deployments_on_project_id_and_environment_id_and_iid\" does not exist\nERROR:  index \"index_deployments_on_project_id_and_environment_id\" does not exist\nERROR:  index \"index_deployments_on_project_id\" does not exist\nERROR:  index \"index_deploy_keys_projects_on_project_id\" does not exist\nERROR:  index \"index_ci_variables_on_gl_project_id\" does not exist\nERROR:  index \"index_ci_triggers_on_gl_project_id\" does not exist\nERROR:  index \"index_ci_taggings_on_taggable_id_and_taggable_type_and_context\" does not exist\nERROR:  index \"index_ci_runners_on_token\" does not exist\nERROR:  index \"index_ci_runners_on_locked\" does not exist\nERROR:  index \"index_ci_runner_projects_on_runner_id\" does not exist\nERROR:  index \"index_ci_runner_projects_on_gl_project_id\" does not exist\nERROR:  index \"index_ci_commits_on_user_id\" does not exist\nERROR:  index \"index_ci_commits_on_status\" does not exist\nERROR:  index \"index_ci_commits_on_gl_project_id_and_status\" does not exist\nERROR:  index \"index_ci_commits_on_gl_project_id_and_sha\" does not exist\nERROR:  index \"index_ci_commits_on_gl_project_id\" does not exist\nERROR:  index \"index_ci_builds_on_token\" does not exist\nERROR:  index \"index_ci_builds_on_status\" does not exist\nERROR:  index \"index_ci_builds_on_runner_id\" does not exist\nERROR:  index \"index_ci_builds_on_project_id\" does not exist\nERROR:  index \"index_ci_builds_on_gl_project_id\" does not exist\nERROR:  index \"index_ci_builds_on_commit_id_and_type_and_ref\" does not exist\nERROR:  index \"index_ci_builds_on_commit_id_and_type_and_name_and_ref\" does not exist\nERROR:  index \"index_ci_builds_on_commit_id_and_status_and_type\" does not exist\nERROR:  index \"index_ci_builds_on_commit_id_and_stage_idx_and_created_at\" does not exist\nERROR:  index \"index_ci_builds_on_commit_id\" does not exist\nERROR:  index \"index_boards_on_project_id\" does not exist\nERROR:  index \"index_award_emoji_on_user_id_and_name\" does not exist\nERROR:  index \"index_award_emoji_on_user_id\" does not exist\nERROR:  index \"index_award_emoji_on_awardable_type_and_awardable_id\" does not exist\nERROR:  index \"index_audit_events_on_entity_id_and_entity_type\" does not exist\nERROR:  relation \"public.web_hooks\" does not exist\nERROR:  relation \"public.users_star_projects\" does not exist\nERROR:  relation \"public.users\" does not exist\nERROR:  relation \"public.user_agent_details\" does not exist\nERROR:  relation \"public.u2f_registrations\" does not exist\nERROR:  relation \"public.todos\" does not exist\nERROR:  relation \"public.tags\" does not exist\nERROR:  relation \"public.taggings\" does not exist\nERROR:  relation \"public.subscriptions\" does not exist\nERROR:  relation \"public.spam_logs\" does not exist\nERROR:  relation \"public.snippets\" does not exist\nERROR:  relation \"public.services\" does not exist\nERROR:  relation \"public.sent_notifications\" does not exist\nERROR:  relation \"public.releases\" does not exist\nERROR:  relation \"public.protected_branches\" does not exist\nERROR:  relation \"public.protected_branch_push_access_levels\" does not exist\nERROR:  relation \"public.protected_branch_merge_access_levels\" does not exist\nERROR:  relation \"public.projects\" does not exist\nERROR:  relation \"public.project_import_data\" does not exist\nERROR:  relation \"public.project_group_links\" does not exist\nERROR:  relation \"public.project_features\" does not exist\nERROR:  relation \"public.personal_access_tokens\" does not exist\nERROR:  relation \"public.oauth_applications\" does not exist\nERROR:  relation \"public.oauth_access_tokens\" does not exist\nERROR:  relation \"public.oauth_access_grants\" does not exist\nERROR:  relation \"public.notification_settings\" does not exist\nERROR:  relation \"public.notes\" does not exist\nERROR:  relation \"public.namespaces\" does not exist\nERROR:  relation \"public.milestones\" does not exist\nERROR:  relation \"public.merge_requests\" does not exist\nERROR:  relation \"public.merge_requests_closing_issues\" does not exist\nERROR:  relation \"public.merge_request_metrics\" does not exist\nERROR:  relation \"public.merge_request_diffs\" does not exist\nERROR:  relation \"public.members\" does not exist\nERROR:  relation \"public.lists\" does not exist\nERROR:  relation \"public.lfs_objects_projects\" does not exist\nERROR:  relation \"public.lfs_objects\" does not exist\nERROR:  relation \"public.labels\" does not exist\nERROR:  relation \"public.label_links\" does not exist\nERROR:  relation \"public.keys\" does not exist\nERROR:  relation \"public.issues\" does not exist\nERROR:  relation \"public.issue_metrics\" does not exist\nERROR:  relation \"public.identities\" does not exist\nERROR:  relation \"public.forked_project_links\" does not exist\nERROR:  relation \"public.events\" does not exist\nERROR:  relation \"public.environments\" does not exist\nERROR:  relation \"public.emails\" does not exist\nERROR:  relation \"public.deployments\" does not exist\nERROR:  relation \"public.deploy_keys_projects\" does not exist\nERROR:  relation \"public.ci_variables\" does not exist\nERROR:  relation \"public.ci_triggers\" does not exist\nERROR:  relation \"public.ci_trigger_requests\" does not exist\nERROR:  relation \"public.ci_tags\" does not exist\nERROR:  relation \"public.ci_taggings\" does not exist\nERROR:  relation \"public.ci_sessions\" does not exist\nERROR:  relation \"public.ci_runners\" does not exist\nERROR:  relation \"public.ci_runner_projects\" does not exist\nERROR:  relation \"public.ci_projects\" does not exist\nERROR:  relation \"public.ci_jobs\" does not exist\nERROR:  relation \"public.ci_events\" does not exist\nERROR:  relation \"public.ci_commits\" does not exist\nERROR:  relation \"public.ci_builds\" does not exist\nERROR:  relation \"public.ci_application_settings\" does not exist\nERROR:  relation \"public.broadcast_messages\" does not exist\nERROR:  relation \"public.boards\" does not exist\nERROR:  relation \"public.award_emoji\" does not exist\nERROR:  relation \"public.audit_events\" does not exist\nERROR:  relation \"public.application_settings\" does not exist\nERROR:  relation \"public.appearances\" does not exist\nERROR:  relation \"public.abuse_reports\" does not exist\nERROR:  relation \"public.web_hooks\" does not exist\nERROR:  relation \"public.users_star_projects\" does not exist\nERROR:  relation \"public.users\" does not exist\nERROR:  relation \"public.user_agent_details\" does not exist\nERROR:  relation \"public.u2f_registrations\" does not exist\nERROR:  relation \"public.todos\" does not exist\nERROR:  relation \"public.tags\" does not exist\nERROR:  relation \"public.taggings\" does not exist\nERROR:  relation \"public.subscriptions\" does not exist\nERROR:  relation \"public.spam_logs\" does not exist\nERROR:  relation \"public.snippets\" does not exist\nERROR:  relation \"public.services\" does not exist\nERROR:  relation \"public.sent_notifications\" does not exist\nERROR:  relation \"public.releases\" does not exist\nERROR:  relation \"public.protected_branches\" does not exist\nERROR:  relation \"public.protected_branch_push_access_levels\" does not exist\nERROR:  relation \"public.protected_branch_merge_access_levels\" does not exist\nERROR:  relation \"public.projects\" does not exist\nERROR:  relation \"public.project_import_data\" does not exist\nERROR:  relation \"public.project_group_links\" does not exist\nERROR:  relation \"public.project_features\" does not exist\nERROR:  relation \"public.personal_access_tokens\" does not exist\nERROR:  relation \"public.oauth_applications\" does not exist\nERROR:  relation \"public.oauth_access_tokens\" does not exist\nERROR:  relation \"public.oauth_access_grants\" does not exist\nERROR:  relation \"public.notification_settings\" does not exist\nERROR:  relation \"public.notes\" does not exist\nERROR:  relation \"public.namespaces\" does not exist\nERROR:  relation \"public.milestones\" does not exist\nERROR:  relation \"public.merge_requests_closing_issues\" does not exist\nERROR:  relation \"public.merge_requests\" does not exist\nERROR:  relation \"public.merge_request_metrics\" does not exist\nERROR:  relation \"public.merge_request_diffs\" does not exist\nERROR:  relation \"public.members\" does not exist\nERROR:  relation \"public.lists\" does not exist\nERROR:  relation \"public.lfs_objects_projects\" does not exist\nERROR:  relation \"public.lfs_objects\" does not exist\nERROR:  relation \"public.labels\" does not exist\nERROR:  relation \"public.label_links\" does not exist\nERROR:  relation \"public.keys\" does not exist\nERROR:  relation \"public.issues\" does not exist\nERROR:  relation \"public.issue_metrics\" does not exist\nERROR:  relation \"public.identities\" does not exist\nERROR:  relation \"public.forked_project_links\" does not exist\nERROR:  relation \"public.events\" does not exist\nERROR:  relation \"public.environments\" does not exist\nERROR:  relation \"public.emails\" does not exist\nERROR:  relation \"public.deployments\" does not exist\nERROR:  relation \"public.deploy_keys_projects\" does not exist\nERROR:  relation \"public.ci_variables\" does not exist\nERROR:  relation \"public.ci_triggers\" does not exist\nERROR:  relation \"public.ci_trigger_requests\" does not exist\nERROR:  relation \"public.ci_tags\" does not exist\nERROR:  relation \"public.ci_taggings\" does not exist\nERROR:  relation \"public.ci_sessions\" does not exist\nERROR:  relation \"public.ci_runners\" does not exist\nERROR:  relation \"public.ci_runner_projects\" does not exist\nERROR:  relation \"public.ci_projects\" does not exist\nERROR:  relation \"public.ci_jobs\" does not exist\nERROR:  relation \"public.ci_events\" does not exist\nERROR:  relation \"public.ci_commits\" does not exist\nERROR:  relation \"public.ci_builds\" does not exist\nERROR:  relation \"public.ci_application_settings\" does not exist\nERROR:  relation \"public.broadcast_messages\" does not exist\nERROR:  relation \"public.boards\" does not exist\nERROR:  relation \"public.award_emoji\" does not exist\nERROR:  relation \"public.audit_events\" does not exist\nERROR:  relation \"public.application_settings\" does not exist\nERROR:  relation \"public.appearances\" does not exist\nERROR:  relation \"public.abuse_reports\" does not exist\nERROR:  sequence \"web_hooks_id_seq\" does not exist\nERROR:  table \"web_hooks\" does not exist\nERROR:  sequence \"users_star_projects_id_seq\" does not exist\nERROR:  table \"users_star_projects\" does not exist\nERROR:  sequence \"users_id_seq\" does not exist\nERROR:  table \"users\" does not exist\nERROR:  sequence \"user_agent_details_id_seq\" does not exist\nERROR:  table \"user_agent_details\" does not exist\nERROR:  sequence \"u2f_registrations_id_seq\" does not exist\nERROR:  table \"u2f_registrations\" does not exist\nERROR:  sequence \"todos_id_seq\" does not exist\nERROR:  table \"todos\" does not exist\nERROR:  sequence \"tags_id_seq\" does not exist\nERROR:  table \"tags\" does not exist\nERROR:  sequence \"taggings_id_seq\" does not exist\nERROR:  table \"taggings\" does not exist\nERROR:  sequence \"subscriptions_id_seq\" does not exist\nERROR:  table \"subscriptions\" does not exist\nERROR:  sequence \"spam_logs_id_seq\" does not exist\nERROR:  table \"spam_logs\" does not exist\nERROR:  sequence \"snippets_id_seq\" does not exist\nERROR:  table \"snippets\" does not exist\nERROR:  sequence \"services_id_seq\" does not exist\nERROR:  table \"services\" does not exist\nERROR:  sequence \"sent_notifications_id_seq\" does not exist\nERROR:  table \"sent_notifications\" does not exist\nDROP TABLE\nERROR:  sequence \"releases_id_seq\" does not exist\nERROR:  table \"releases\" does not exist\nERROR:  sequence \"protected_branches_id_seq\" does not exist\nERROR:  table \"protected_branches\" does not exist\nERROR:  sequence \"protected_branch_push_access_levels_id_seq\" does not exist\nERROR:  table \"protected_branch_push_access_levels\" does not exist\nERROR:  sequence \"protected_branch_merge_access_levels_id_seq\" does not exist\nERROR:  table \"protected_branch_merge_access_levels\" does not exist\nERROR:  sequence \"projects_id_seq\" does not exist\nERROR:  table \"projects\" does not exist\nERROR:  sequence \"project_import_data_id_seq\" does not exist\nERROR:  table \"project_import_data\" does not exist\nERROR:  sequence \"project_group_links_id_seq\" does not exist\nERROR:  table \"project_group_links\" does not exist\nERROR:  sequence \"project_features_id_seq\" does not exist\nERROR:  table \"project_features\" does not exist\nERROR:  sequence \"personal_access_tokens_id_seq\" does not exist\nERROR:  table \"personal_access_tokens\" does not exist\nERROR:  sequence \"oauth_applications_id_seq\" does not exist\nERROR:  table \"oauth_applications\" does not exist\nERROR:  sequence \"oauth_access_tokens_id_seq\" does not exist\nERROR:  table \"oauth_access_tokens\" does not exist\nERROR:  sequence \"oauth_access_grants_id_seq\" does not exist\nERROR:  table \"oauth_access_grants\" does not exist\nERROR:  sequence \"notification_settings_id_seq\" does not exist\nERROR:  table \"notification_settings\" does not exist\nERROR:  sequence \"notes_id_seq\" does not exist\nERROR:  table \"notes\" does not exist\nERROR:  sequence \"namespaces_id_seq\" does not exist\nERROR:  table \"namespaces\" does not exist\nERROR:  sequence \"milestones_id_seq\" does not exist\nERROR:  table \"milestones\" does not exist\nERROR:  sequence \"merge_requests_id_seq\" does not exist\nERROR:  sequence \"merge_requests_closing_issues_id_seq\" does not exist\nERROR:  table \"merge_requests_closing_issues\" does not exist\nERROR:  table \"merge_requests\" does not exist\nERROR:  sequence \"merge_request_metrics_id_seq\" does not exist\nERROR:  table \"merge_request_metrics\" does not exist\nERROR:  sequence \"merge_request_diffs_id_seq\" does not exist\nERROR:  table \"merge_request_diffs\" does not exist\nERROR:  sequence \"members_id_seq\" does not exist\nERROR:  table \"members\" does not exist\nERROR:  sequence \"lists_id_seq\" does not exist\nERROR:  table \"lists\" does not exist\nERROR:  sequence \"lfs_objects_projects_id_seq\" does not exist\nERROR:  table \"lfs_objects_projects\" does not exist\nERROR:  sequence \"lfs_objects_id_seq\" does not exist\nERROR:  table \"lfs_objects\" does not exist\nERROR:  sequence \"labels_id_seq\" does not exist\nERROR:  table \"labels\" does not exist\nERROR:  sequence \"label_links_id_seq\" does not exist\nERROR:  table \"label_links\" does not exist\nERROR:  sequence \"keys_id_seq\" does not exist\nERROR:  table \"keys\" does not exist\nERROR:  sequence \"issues_id_seq\" does not exist\nERROR:  table \"issues\" does not exist\nERROR:  sequence \"issue_metrics_id_seq\" does not exist\nERROR:  table \"issue_metrics\" does not exist\nERROR:  sequence \"identities_id_seq\" does not exist\nERROR:  table \"identities\" does not exist\nERROR:  sequence \"forked_project_links_id_seq\" does not exist\nERROR:  table \"forked_project_links\" does not exist\nERROR:  sequence \"events_id_seq\" does not exist\nERROR:  table \"events\" does not exist\nERROR:  sequence \"environments_id_seq\" does not exist\nERROR:  table \"environments\" does not exist\nERROR:  sequence \"emails_id_seq\" does not exist\nERROR:  table \"emails\" does not exist\nERROR:  sequence \"deployments_id_seq\" does not exist\nERROR:  table \"deployments\" does not exist\nERROR:  sequence \"deploy_keys_projects_id_seq\" does not exist\nERROR:  table \"deploy_keys_projects\" does not exist\nERROR:  sequence \"ci_variables_id_seq\" does not exist\nERROR:  table \"ci_variables\" does not exist\nERROR:  sequence \"ci_triggers_id_seq\" does not exist\nERROR:  table \"ci_triggers\" does not exist\nERROR:  sequence \"ci_trigger_requests_id_seq\" does not exist\nERROR:  table \"ci_trigger_requests\" does not exist\nERROR:  sequence \"ci_tags_id_seq\" does not exist\nERROR:  table \"ci_tags\" does not exist\nERROR:  sequence \"ci_taggings_id_seq\" does not exist\nERROR:  table \"ci_taggings\" does not exist\nERROR:  sequence \"ci_sessions_id_seq\" does not exist\nERROR:  table \"ci_sessions\" does not exist\nERROR:  sequence \"ci_runners_id_seq\" does not exist\nERROR:  table \"ci_runners\" does not exist\nERROR:  sequence \"ci_runner_projects_id_seq\" does not exist\nERROR:  table \"ci_runner_projects\" does not exist\nERROR:  sequence \"ci_projects_id_seq\" does not exist\nERROR:  table \"ci_projects\" does not exist\nERROR:  sequence \"ci_jobs_id_seq\" does not exist\nERROR:  table \"ci_jobs\" does not exist\nERROR:  sequence \"ci_events_id_seq\" does not exist\nERROR:  table \"ci_events\" does not exist\nERROR:  sequence \"ci_commits_id_seq\" does not exist\nERROR:  table \"ci_commits\" does not exist\nERROR:  sequence \"ci_builds_id_seq\" does not exist\nERROR:  table \"ci_builds\" does not exist\nERROR:  sequence \"ci_application_settings_id_seq\" does not exist\nERROR:  table \"ci_application_settings\" does not exist\nERROR:  sequence \"broadcast_messages_id_seq\" does not exist\nERROR:  table \"broadcast_messages\" does not exist\nERROR:  sequence \"boards_id_seq\" does not exist\nERROR:  table \"boards\" does not exist\nERROR:  sequence \"award_emoji_id_seq\" does not exist\nERROR:  table \"award_emoji\" does not exist\nERROR:  sequence \"audit_events_id_seq\" does not exist\nERROR:  table \"audit_events\" does not exist\nERROR:  sequence \"application_settings_id_seq\" does not exist\nERROR:  table \"application_settings\" does not exist\nERROR:  sequence \"appearances_id_seq\" does not exist\nERROR:  table \"appearances\" does not exist\nERROR:  sequence \"abuse_reports_id_seq\" does not exist\nERROR:  table \"abuse_reports\" does not exist\nERROR:  must be owner of extension pg_trgm\nERROR:  must be owner of extension plpgsql\nERROR:  must be owner of schema public\nERROR:  schema \"public\" already exists\nALTER SCHEMA\nERROR:  must be owner of schema public\nCREATE EXTENSION\nERROR:  must be owner of extension plpgsql\nCREATE EXTENSION\nERROR:  must be owner of extension pg_trgm\nSET\nSET\nSET\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nCREATE TABLE\nALTER TABLE\nCREATE SEQUENCE\nALTER TABLE\nALTER SEQUENCE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 1\n setval \n\n  1\n\n(1 row)\nCOPY 215\n setval \n\n247\n\n(1 row)\nCOPY 3\n setval \n\n  3\n\n(1 row)\nCOPY 1\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 1909\n setval \n\n1949\n(1 row)\nCOPY 1842\n setval \n\n1882\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 2\n setval \n\n  7\n\n(1 row)\nCOPY 1\n setval \n\n  5\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 1\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 2943\n setval \n\n3676\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 1\n setval \n\n  1\n\n(1 row)\nCOPY 1\n setval \n\n  1\n\n(1 row)\nCOPY 17\n setval \n\n 34\n\n(1 row)\nCOPY 55\n setval \n\n 92\n\n(1 row)\nCOPY 6\n setval \n\n  7\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 2\n setval \n\n  2\n\n(1 row)\nCOPY 26\n setval \n\n 29\n\n(1 row)\nCOPY 793\n setval \n\n841\n\n(1 row)\nCOPY 281\n setval \n\n313\n\n(1 row)\nCOPY 281\nCOPY 0\n setval \n\n  1\n\n(1 row)\nsetval\n313\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 11\n setval \n\n 12\n\n(1 row)\nCOPY 1079\n setval \n\n1104\n(1 row)\nCOPY 36\n setval \n\n 37\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 4\n setval \n\n  4\n\n(1 row)\nCOPY 22\n setval \n\n 38\n\n(1 row)\nCOPY 2\n setval \n\n  6\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 22\n setval \n\n 30\n\n(1 row)\nCOPY 20\n setval \n\n 28\n\n(1 row)\nCOPY 20\n setval \n\n 28\n\n(1 row)\nCOPY 20\n setval \n\n 28\n\n(1 row)\nCOPY 4\n setval \n\n  4\n\n(1 row)\nCOPY 438\nCOPY 114\n setval \n\n114\n\n(1 row)\nCOPY 479\n setval \n\n653\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 1\n setval \n\n  5\n\n(1 row)\nCOPY 1\n setval \n\n  1\n\n(1 row)\nCOPY 196\n setval \n\n209\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 10\n setval \n\n 11\n\n(1 row)\nCOPY 0\n setval \n\n  1\n\n(1 row)\nCOPY 5\n setval \n\n 16\n\n(1 row)\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nCREATE INDEX\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nALTER TABLE\nWARNING:  no privileges could be revoked for \"public\"\nREVOKE\nWARNING:  no privileges could be revoked for \"public\"\nREVOKE\nWARNING:  no privileges were granted for \"public\"\nGRANT\nWARNING:  no privileges were granted for \"public\"\nGRANT\n[DONE]\ndone\nRestoring repositories ...\n * techex/room_control_center ... [DONE]\n * techex/hot-desking ... [DONE]\nPut GitLab hooks in repositories dirs [DONE]\ndone\nRestoring uploads ... \ndone\nRestoring builds ... \ndone\nRestoring artifacts ... \ndone\nRestoring lfs objects ... \ndone\nThis will rebuild an authorized_keys file.\nYou will lose any data stored in authorized_keys file.\nDo you want to continue (yes/no)? yes\n.................\nDeleting tmp directories ... done\ndone\ndone\ndone\ndone\ndone\ndone\n```\n. Thanks for all the help. I retry to restore the tar file (backup) and now I can see now the all the data. It's a bit weird that it just suddenly restored everything. Another problem I encounter is when I restart the docker, then I try to access again gitlab docker all the data were gone, I cannot login. Is there something wrong with my configuration?\n```\nversion: '2'\nservices:\nredis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    volumes:\n    - /srv/docker/gitlab/redis:/var/lib/redis:Z\npostgresql:\n    restart: always\n    image: sameersbn/postgresql:9.6-2\n    volumes:\n    - /srv/docker/gitlab/postgresql:/var/lib/postgresql:Z\nenvironment:\n- DB_USER=gitlab\n- DB_PASS=password\n- DB_NAME=gitlabhq_production\n- DB_EXTENSION=pg_trgm\n\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:8.12.4\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"10080:80\"\n    - \"10022:22\"\n    volumes: \n    - /Users/techx/gitlab/gitlab/:/home/git/data:Z\nenvironment:\n- DEBUG=false\n\n- DB_ADAPTER=postgresql\n- DB_HOST=postgresql\n- DB_PORT=5432\n- DB_USER=gitlab\n- DB_PASS=password\n- DB_NAME=gitlabhq_production\n\n- REDIS_HOST=redis\n- REDIS_PORT=6379\n\n- TZ=Asia/Singapore\n- GITLAB_TIMEZONE=Singapore\n\n- GITLAB_HTTPS=false\n- SSL_SELF_SIGNED=false\n\n- GITLAB_HOST=localhost\n- GITLAB_PORT=10080\n- GITLAB_SSH_PORT=10022\n\n- GITLAB_RELATIVE_URL_ROOT=\n- GITLAB_SECRETS_DB_KEY_BASE=QcDrKlcSBvpBDQG4TQBJ5vzzJhjBsR98nGfNcGKsspdwFdDQVKtTpM4RdCHFbLg2\n- GITLAB_SECRETS_SECRET_KEY_BASE=jCs739gp5w8BlmrWNShBMdCCKhsbXwPn5ML5S7sXptncrqpMwbC3BknQB6p8zgJL\n- GITLAB_SECRETS_OTP_KEY_BASE=P62MRkJPvPNqZMGBkBVwcP5qV4fGNcl54JK7HSRKbhdhqq2RJL3q4VQJKRN2qbbB\n\n- GITLAB_ROOT_PASSWORD=password\n- GITLAB_ROOT_EMAIL=email@example.com\n\n- GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n- GITLAB_NOTIFY_PUSHER=false\n\n- GITLAB_EMAIL=email@example.com\n- GITLAB_EMAIL_REPLY_TO=noreply@example.com\n- GITLAB_INCOMING_EMAIL_ADDRESS=reply@example.com\n\n- GITLAB_BACKUP_SCHEDULE=daily\n- GITLAB_BACKUP_TIME=01:00\n- GITLAB_BACKUP_DIR=/home/git/data/backups\n\n- GITLAB_REPOS_DIR=/home/git/data/repositories\n\n- SMTP_ENABLED=true\n- SMTP_DOMAIN=www.example.com\n- SMTP_HOST=smtp.gmail.com\n- SMTP_PORT=587\n- SMTP_USER=email@example.com\n- SMTP_PASS=password\n- SMTP_STARTTLS=true\n- SMTP_AUTHENTICATION=login\n\n- IMAP_ENABLED=false\n- IMAP_HOST=imap.gmail.com\n- IMAP_PORT=993\n- IMAP_USER=mailer@example.com\n- IMAP_PASS=password\n- IMAP_SSL=true\n- IMAP_STARTTLS=false\n\n```\n. ",
    "PhillippOhlandt": "@ChunAllen Did you setup a local domain? I encounter the same error where the gitlab-runner wants to fetch from localhost:10080 which doesn't resolve to my MacBook.. @ChunAllen Make sense, thanks. In the meantime, I found another solution that worked for me. \nIn the config file for the runner under the [runners.docker] section, I added extra_hosts = [\"localhost:172.17.0.1\"] to override localhost inside the container. It's quite hacky but works so far.. ",
    "nanquanyuhao": "\nHi @atasoglou, you're right, you cannot create subgroup when you use a MySQL database.\nFor my part, I migrated my MySQL database to postgresql and it's work !\n\nThis problem can be resolved? \nIf you know,  tell me please... very thanks... @Laul0 Very thanks.... ",
    "maltzsama": "I had same error here when I trying to update from previos versions.\nBut I think you need update your privileges:\n```\nYour database user is not allowed to create, drop, or execute triggers on the\ntable web_hooks.\nIf you are using PostgreSQL you can solve this by logging in to the GitLab\ndatabase (gitlabhq_galileo) using a super user and running:\nALTER gitlab WITH SUPERUSER\n\nFor MySQL you instead need to run:\nGRANT ALL PRIVILEGES ON *.* TO gitlab@'%'\n\nNow its working to me. I'm not sure. I tried to do my update based on 8.x, and after based on 9.x, and my tables was configured like that:\nGRANT SELECT, INSERT, UPDATE, DELETE, CREATE, CREATE TEMPORARY TABLES, DROP, INDEX, ALTER, LOCK TABLES ON gitlabhq_galileo.* TO 'gitlab'@'%';\nBut when I tried to update I had the same error as you. So I reapply the privileges and than that's worked for me.\nThe error log on my `docker logs gitlab` showed this information:\n/home/git/gitlab/lib/gitlab/database/migration_helpers.rb:752:in check_trigger_permissions!'\n/home/git/gitlab/lib/gitlab/database/migration_helpers.rb:373:inrename_column_concurrently'\n/home/git/gitlab/db/migrate/20170511082759_rename_web_hooks_build_events_to_job_events.rb:12:in up'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:611:inexec_migration'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:592:in block (2 levels) in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:591:inblock in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:in with_connection'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:590:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:768:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:1023:inblock in execute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:1071:in ddl_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:1022:inexecute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:984:in block in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:980:ineach'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:980:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:823:inup'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/migration.rb:801:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/tasks/database_tasks.rb:139:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.10/lib/active_record/railties/databases.rake:44:in block (2 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-12.3.0/exe/rake:27:in'\nCaused by:\nYour database user is not allowed to create, drop, or execute triggers on the\ntable web_hooks.\nIf you are using PostgreSQL you can solve this by logging in to the GitLab\ndatabase (gitlabhq_galileo) using a super user and running:\nALTER gitlab WITH SUPERUSER\n\nFor MySQL you instead need to run:\nGRANT ALL PRIVILEGES ON *.* TO gitlab@'%'\n\nBoth queries will grant the user super user permissions, ensuring you don't run\ninto similar problems in the future (e.g. when new tables are created).\n```. ",
    "ld0574": "the same issue here:\nActiveRecord::StatementInvalid: Mysql2::Error: Lost connection to MySQL server during query: SELECT  application_settings. FROM application_settings  ORDER BY application_settings.id DESC LIMIT 1. the same issue here:\nActiveRecord::StatementInvalid: Mysql2::Error: Lost connection to MySQL server during query: SELECT  application_settings. FROM application_settings  ORDER BY application_settings.id DESC LIMIT 1. @mikehaertl Mine is 5.7.21, Maybe mysql connector inside was out-dated. @mikehaertl Mine is 5.7.21, Maybe mysql connector inside was out-dated. I solved the problem by modify mysql's config file: max_connections. @mikehaertl \nMake sure max_connections > Number of Rails Process * Size of Connection Pool. I solved the problem by modify mysql's config file: max_connections. @mikehaertl \nMake sure max_connections > Number of Rails Process * Size of Connection Pool. upgrade 11.0.1 ,not appear this issue, may be just the mysql's config file matters . upgrade 11.0.1 ,not appear this issue, may be just the mysql's config file matters . ",
    "aaaooofff": "1494.",
    "straga": "ssh-keygen not support rsa1 anymore. ",
    "tlightsky": "have exact same problem here. ",
    "zorgzerg": "+1. ",
    "vincentmele": "modify line 1265 in assets/runtime/functions per https://gotfix.com/docker/gitlab/commit/9da8acc85fb48591f68cd0769080519c19f217f6\nRemove the line that has \"rsa1\" in it.\nif [[ ! -e ${GITLAB_DATA_DIR}/ssh/ssh_host_rsa_key ]]; then\n    echo -n \"Generating OpenSSH host keys... \"\n   # generate_ssh_key rsa1     ${GITLAB_DATA_DIR}/ssh/ssh_host_key\n    generate_ssh_key rsa      ${GITLAB_DATA_DIR}/ssh/ssh_host_rsa_key\n    generate_ssh_key dsa      ${GITLAB_DATA_DIR}/ssh/ssh_host_dsa_key\n    generate_ssh_key ecdsa    ${GITLAB_DATA_DIR}/ssh/ssh_host_ecdsa_key. ",
    "compleatang": "For us, none of the 10.4.X images worked. They all threw in exactly the same manner. . @solidnerd or anyone else, is there anywhere I can look for how to perform the sequence you propose? \nWe use this image in k8s context rather than docker-compose.yml and it is not entirely clear to me what encryption key is throwing here. Is it the SSH host keys? Or another key? . Thank you @Ilya-Kuchaev your process worked well for me.. ",
    "ldouchy": "Hi,\nI'm exactly in the same situation as compleatang. Is there any information on how to update the key? . I managed to solve my issue and start a docker container in version 10.4.2 and even 10.4.4 after creating a 64 characters long secret for the GITLAB_SECRETS_DB_KEY_BASE parameter.. ",
    "numnine": "@schizo99  I've tried setting GITLAB_BACKUP_DIR. Its setting for local backup. Not work...\nI had to write a separate script to upload backup files to S3. Thanks for your support :). ",
    "Kristaba": "Another user in the same usecase here...\nSwitched my Docker config to use overlay2 and it just made the Gitlab image absolutely unusable (~40 minutes to start, instead of tens of seconds with default devicemapper).\nThis line in file functions causes thousand of files to be chown'ed at startup, when a UID/GID mapping is used.\nOther projects such as conda forge or jupyter appear to had the same issue for different reasons at some point and \u00absolve\u00bb them by avoiding the chmod/chown.\nHowever, a performance degradation which is that order of magnitude (compared to loopback devicemappers or AUFS) seems to be a real issue in overlay2 itself too...\nSo to recap:\n- overlay2 is incredibly slow for performing chmod/chown operations (and require a full copy of each modified file)\n  - maybe this should be reported to the kernel team behind overlay2, even if it is probably quite deeply caused by the underlying structure of the file system...\n- Gitlab docker init script use to chown on all the gitlab files in the image if GID/UID mapping is required\n  - if a workaround was available for this use case, it could helpful for people using overlay2 storage driver\nIs there any idea of a quick workaround, not too much dirty?\nI mean, maybe just setting sufficient group permissions at image build time, and adding the git user to this group at run time may be enough?\nI don't know the gitlab code enough to know all the places where user/group will matter, but does someone have an idea about it?\nBefore to have a fix for that, it may be great to have some kind of warning in the readme.\nLike \u00abWarning: using overlay2 storage driver with docker is known to cause high performance issue with this image. See . \u00bb ?. Same issue here.\n@gimler I think the solution from @LordFPL is to be preferred if working, as unicorn and sshd are stopped during the backup process.\nFor what I understand from official Gitlab documentation and the docker image one, backups should not be created on a running instance, or at least not by this way. If there is, even with low probability,  any chance of corruptions of the backup'ed data, it should not be recommended at all.\nI am not skilled enough to know what is the safest way to do the backups under these conditions.\nBut if someone here is, it would be great if the documentation could be updated.\nMaybe, at least, a simple warning to say that the current explanations are not correct anymore with a link to this issue?. ",
    "janorn": "10.4.4 is out.. You are aware that there are several issues with running later gitlab versions on mysql? You might want to consider migrating to postgres.. https://docs.gitlab.com/ce/install/requirements.html#database. ",
    "chrislovsund": "Is it only @sameersbn and @solidnerd that have the write permission to this repo?\nSeems like a bottleneck to me. \nI have no complaints about the effort they have put into the project, much appreciated.\nThere's a lot of people that have contributed to the project, perhaps someone else can have the permissions needed?. @vemcaster Yes, changing that setting solved it for us.. I found this https://gitlab.com/gitlab-org/gitlab-ce/issues/44003 and it works when making sure that gitly (and gitlab) is running during manual restore. I haven't been able to make it work in our deployment pipeline yet.\n. Use e.g.\n- GITLAB_BACKUP_EXPIRY=86400\nSee https://github.com/sameersbn/docker-gitlab#automated-backups. ",
    "hzrari": "I manage to workaround the issue, bu fixing the bundle version and merge the fix, by tweeaking my local Dockerfile:\n```\nroot@debian:~/docker/src/docker-gitlab# git diff Dockerfile\ndiff --git a/Dockerfile b/Dockerfile\nindex ed0c259..a6bb79d 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -43,11 +43,18 @@ RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E1DD270288B4E60\n  && update-locale LANG=C.UTF-8 LC_MESSAGES=POSIX \\\n  && locale-gen en_US.UTF-8 \\\n  && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales \\\n- && gem install --no-document bundler \\\n+ && gem install --version '1.14.5' --no-document bundler \\\n  && rm -rf /var/lib/apt/lists/*\n-COPY assets/build/ ${GITLAB_BUILD_DIR}/\n-RUN bash ${GITLAB_BUILD_DIR}/install.sh\n+COPY assets/build/ ${GITLAB_BUILD_DIR}/\n+\n+RUN sed -e '119ised -e \"483,484d;487d\" -i Gemfile.lock' -i \"${GITLAB_BUILD_DIR}\"/install.sh\n+RUN sed -e '120ised -e \"483i\\\\tjwt \\(~> 1.5.2\\)\" -i Gemfile.lock' -i \"${GITLAB_BUILD_DIR}\"/install.sh\n+RUN sed -e '121ised -e \"486i\\\\tomniauth-oauth2 \\(>= 1.3.1\\)\" -i Gemfile.lock' -i \"${GITLAB_BUILD_DIR}\"/install.sh\n+RUN sed -e '122icat -n Gemfile.lock ; #exit 20;' -i \"${GITLAB_BUILD_DIR}\"/install.sh\n+\n+#RUN cat -n \"${GITLAB_BUILD_DIR}\"/install.sh\n+RUN bash -x ${GITLAB_BUILD_DIR}/install.sh\nCOPY assets/runtime/ ${GITLAB_RUNTIME_DIR}/\n COPY entrypoint.sh /sbin/entrypoint.sh\n```\n. ",
    "ValCapri": "10.4.4 was released : https://about.gitlab.com/2018/02/16/gitlab-10-dot-4-dot-4-released/. ",
    "tiangolo": "I would like to know, have you been able to review the changes?\nI would absolutely prefer to have the changes here than in a fork. Or at least to hear the maintainers and see if there are any concerns or objections.\nIf you haven't had the time but still plan to review it, I understand (it's happening to me on some projects), but I would love to hear from you.... Sorry for the delay @solidnerd ! I re-started the conversation and you responded right away... and then I got busy building FastAPI.\nI just created a new PR to keep things clean. Starting from a fresh master, adding all these changes and updating all the versions.\nLet's continue the conversation there. I'll close this PR.. @solidnerd Thanks for the thorough code review. I think I already implemented all the requested changes.\nIf you see anything missing, please let me know.. Hey @solidnerd , have you been able to check this? Is there something else I should change first?. I know you must be busy @solidnerd, but here's a gently (and annoying) reminder to check this out when you get a chance.\nI would like to add this GitLab repo to https://dockerswarm.rocks/ after this PR :smile: . Because otherwise, openssl asks for a \"passphrase\" interactively. So it can't be automatized.\nThat's just to be consistent with the script generate-registry-certificates.sh that does it all automatically when the env var GITLAB_REGISTRY_GENERATE_INTERNAL_CERTIFICATES is set to 'true'.\nWith the commands as they are, they can be copy-pasted directly, without adding any additional input (no passphrase).. Good catch!. Awesome.\nI've been using that recently but imagined you wouldn't like having extra files for this.. Done :heavy_check_mark: . Done :heavy_check_mark: . Done :heavy_check_mark: . Sure. I updated it to have an external extra stack file for Traefik. And I updated the docs accordingly.\nI also updated those same docs with the latest changes/updates/improvements from my original post.. Perfect. Done. :heavy_check_mark: . ",
    "adrianmalacoda": "This is what I do:\n\ncreate git user on host\nas git run a daemon which listens to key_create and key_destroy events from gitlab, you'd need to set up a webhook in gitlab for this.\nthis daemon will pull the authorized_keys from git@container user whenever such an event is received, this means that git@host will need to be in git@container's authorized_keys.\na script is placed in gitlab-shell/bin/gitlab-shell which forwards all sessions on git@host to git@container\n\nImplementation is here: https://gitlab.monarch-pass.net/monarch-pass/gitlab-ssh-proxy\nsome notes:\n See also this question https://serverfault.com/questions/569236/username-based-ssh-proxy. As the top answer there notes, having sshd itself be the proxy is probably infeasible since the ssh connection is encrypted and you can't get at the username with a proxy in the middle. Some of the answers suggest using ForceCommand + nc which may be sufficient for our use case.\n instead of grabbing the authorized_keys from the container using ssh, the gitlab-listener (daemon) could probably just insert or delete the key from authorized_keys given that gitlab provides the key in the webhook event payload. This would obviate the need for git@container to need to know git@host's key.. ",
    "xiaket": "I have documented a solution here in my blog: https://blog.xiaket.org/2017/exposing.ssh.port.in.dockerized.gitlab-ce.html\nHope you'll find it helpful.. ",
    "s1113950": "@r2evans that's the most awesome picture in a comment I've ever seen \u0669(\u0361\u0e4f_\u0e4f)\u06f6. ",
    "zerr0s": "if i run docker run commands directly to create database, redis and gitlab docks, it seems to work.\nan issue with my docker-compose version ??\n```\ndocker-compose --version\ndocker-compose version 1.8.0, build unknown\n```\nEDIT:\nSame issue with the last version: docker-compose version 1.19.0, build 9e633ef. No, in the doc:\n\nIf a postgresql container is linked, only the DB_ADAPTER, DB_HOST and DB_PORT settings are automatically retrieved using the linkage. You may still need to set other database connection parameters such as the DB_NAME, DB_USER, DB_PASS and so on.\n\nI've just added DB_HOST, DB_ADAPTER and REDIS_HOST and gitlab starts. Something is weird.... ",
    "perryprog": "I fixed it!\nThings I changed:\n\nRemoved https:// from GITLAB_HOST\nSet the redirect url in GitHub to http://git.website.com/users/auth/github/callback. 10.5.1 was released as well due to some weirdness, might as well update to that as well.. It's a cloudfare issue. Would like to know what the problem is with SSH though.. It's a cloudfare issue. Would like to know what the problem is with SSH though.. That fixed it for me too.. That fixed it for me too.. \n",
    "ppcat": "~~https://github.com/sameersbn/docker-gitlab/pull/1521 Here comes 10.5.1.~~ \nSorry I didn't check dependencies at all. Maybe when I figure out how to do that, I'll try to push again.. Hi @solidnerd, I\u2019m studying the source code, but not sure when can I figure out how to hook the new config path into environment variable. Maybe someone can open new PR for this version upgrade. Thanks!. @solidnerd Thank you.. My bad. I just followed previous PR. I'll learn how to check dependencies. Thank you!. 10.5.4 was released.\nhttps://about.gitlab.com/2018/03/09/gitlab-10-5-4-released/. ",
    "shkrid": "https://github.com/sameersbn/docker-gitlab/commit/52b669a7a3e36a1d51699435139e83210e723073\nmove uploads -> shared/public/uploads\nOr setup: GITLAB_UPLOADS_STORAGE_PATH=/home/git/gitlab/public\n. > move uploads -> shared/public/uploads\n2018/02/25 22:03:52 error: POST \"/groupname/newproject\": handleFileUploads: extract files from multipart: mkdir for tempfile: mkdir /home/git/gitlab/public/uploads: file exists\n\"uploads\" directory should exist for tmpfiles creations. Strange behavior. For those who moved the uploads dir - check your backups.. ",
    "Edke": "it worked also on for me, thank you @shkrid\n. ",
    "vitalyzhakov": "\nsetup: GITLAB_UPLOADS_STORAGE_PATH=/home/git/gitlab/public\n\nWorks for me. Thank you @shkrid .. @solidnerd , I use sameersbn/gitlab:11.1.3. ",
    "leslau": "@maikelvl works well, but you need to delete /home/git/gitlab/public/uploads link or you will not be able to upload any avatar.. @f3l1x no, you need to move it back to /home/git/data/uploads. @solidnerd  Can you merge this? or the one made by @schizo99 https://github.com/sameersbn/docker-gitlab/pull/1463\nIt's impossible to backup big instances while it's running without changing backup strategy to copy. I did the update from 10.8.1 to 10.8.3 everything fine, until I needed to remove 1 pod, then the pod started to reboot over and over. @solidnerd did you tried restart the instance after migration finish?  . this bug still on 11.2.3, when creating merge request from fork. No, It doesnt migrate old artifacts and uploads automatic, it'll use for the new ones\nTo migrate the old one's you need to run a rake task, like this:\nsudo -u git -H bundle exec rake gitlab:uploads:migrate:all RAILS_ENV=production. if you enable direct_uploads there's no need to enable background_upload, cuz thats nothingo to upload in background :). Can someone merge this plz, thats some security issues that's fixed in this version!. ",
    "ociotec": "I added to my docker run script with --env GITLAB_UPLOADS_STORAGE_PATH=/home/git/gitlab/public and it worked. Thanks @shkrid.\nBut I agree with @jostyee, these kind of changes could use default values to allow previous installations to work properly without issues.. ",
    "inongogo": "Any info on this one?. ",
    "mariofmjr": "Ok,\nBut the issue occurs when i run it for the first time, if i use the default user name and password, it works fine, even if i change it before, that confirm what you wrote above.\nI think the problem occurs when you configure gitlab on container with the environment variables values, it looks like that those variables are been ignored and default values are used instead of them.. ",
    "luanxuechao": "me,too. @mariofmjr  are you solve it?. me,too. @mariofmjr  are you solve it?. you must create usename and password in postgresql. not env.. you must create usename and password in postgresql. not env.. ",
    "marmartintsang": "@sameersbn  could you please help me with this issue ;( Or could i downgrade to a older version of gitlab without using default_group_visibility function ?\nHere are some references of this issue:\n\nhttps://www.reddit.com/r/gitlab/comments/7b6ahx/nomethoderror_undefined_method_default_group/\nhttps://forum.gitlab.com/t/migration-failed-from-8-4-to-10-0-undefined-method-default-group-visibility/12401\n\nthank you very much for your help.\n . ",
    "cloudqq": "I just upgrade my gitlab from 8.0.5 to 10.6.3 and encounter this issue, here is my workaround.\ncomment the source line in user.rb\n`\n/home/git/gitlab/app/models/user.rb\ndefault_value_for :admin, false\n  #<<<< default_value_for(:external) { Gitlab::CurrentSettings.user_default_external }\n  default_value_for :can_create_group, gitlab_config.default_can_create_group\n`\nthen override the user.rb with the modified version leverage docker volume mapping. \n\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:10.6.3\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"10080:80\"\n    - \"10022:22\"\n    volumes:\n    - /gitdata/data/gitlab:/home/git/data:Z\n    - /home/xxx/user.rb:/home/git/gitlab/app/models/user.rb\n    environment:\n\n. ",
    "jest": "I succeeded with upgrade first to 9.5.5, and then with upgrade to 10.6.4.. ",
    "kabengwa": "so what is the solution to this. because i am doing the very first installation on docker and i am getting the same issue when i try to use the :latest version ... should i just settle for the older versions.. ",
    "plakat": "While upgrading from 7.11.4 to 11.0.1 I was able to mitigate this error by expanding from my initial upgrade path (7.11.4-1 -> 8.0.5-1 -> 11.0.1) to one including each major version in between:\n7.11.4-1 -> 8.0.5-1 -> 9.5.5 -> 10.6.4 -> 11.0.1. ",
    "bjornazzopardi": "How do I get the docker-compose file?\nOn Fri, 02 Mar 2018 at 17:58, Nevo notifications@github.com wrote:\n\nCould you provide us your docker-compose file/your start command?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/sameersbn/docker-gitlab/issues/1536#issuecomment-369982379,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AKqOVOyVX74rRJ_ysF3XmQm98UK4g-M1ks5taXo9gaJpZM4SaKAW\n.\n. This is the latest one\n\ndocker run --name gitlab -d \\\n    --link gitlab_postgresql_1 --link gitlab_redis_1 \\\n    --publish 10022:22 --publish 10080:80 \\\n    --env 'GITLAB_PORT=10080' --env 'GITLAB_SSH_PORT=10022' \\\n    --env 'GITLAB_SECRETS_DB_KEY_BASE=ahD8ohjainahkingahchilieshohevooquooguungietunguvaevapixiegiephivai5AegeingeepooxeipuxeiveilooxuquaeboehoowatooxeequohdaewaiteeyIusicie0eeteeyekeechiefebeeceeghohquiekomeilohngiheuquohdeibiosiphoo6NaingeileoreithefahshengaokuhebeongequohnganuohorumainaweerXahlahf5uluoxeihuudaitieghebaimeexeetejiasoxaejafaekoxohsibaethu' \\\n    --env 'GITLAB_SECRETS_SECRET_KEY_BASE=Uw1adixeogoifoofashaeraiyahngohcaaxooroobeilohwapaetaeshaivoefooUriemequ6releimaewaniiyooghadeibagohjohkaipeeghiwogheiloonaighooaenahphai1ouQuohghahhaethoongiengaeshasiekiefaexaihufohgheimaereuH4caenaewahteshahsashithoohaificeephongeteshieshaisaiqueiseisha ohW4inahgachowiemiwolaiteejeeraiyishomohcheiphuwohwoonengeeyeiph' \\\n    --env 'GITLAB_SECRETS_OTP_KEY_BASE=Oithohrei2rophoesuebuileiphieghuiweengoovohheroakaedooghaequaqueLol9jihooyohthahthuokoyiledaloesiehiveuvengiquithaireengasohghahXei7caimaehiengahpietokahgaighiecighudietotheejepohdohvaerohgoosAhthohngiech6otheidahbeengohfohxaingufaeweidogeimohgusaetuquiequAiva6noghucungeiguhooteufechahyohhiicooghaethueteiwaitiwojughaik' \\\n    sameersbn/gitlab:10.5.1. How do I locate the user and pass?. OK sorted. \nIssue was with the link to db and redis. Hi All,\nThe instance seems to be running now however all data seems to be lost. I can see the commits but not the data.\nThanks for your help.. ",
    "wdoekes": "Could be unrelated, but everyone on Maria/MySQL (generally 5.7-) may need to read up on these:\nhttps://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/install/database_mysql.md\nhttps://gitlab.com/gitlab-org/gitlab-ce/issues/35540\nI ran into issues with the lfs_file_locks INDEX during migration from 10.4 to 10.5 just now, so I wrote up the following for my own reference:\n\nBecause collation/charset/row_format may not always be set properly, run these::\nSELECT CONCAT('ALTER TABLE `', TABLE_NAME,'` ROW_FORMAT=DYNAMIC;')\n  AS 'Copy & run these SQL statements:' FROM INFORMATION_SCHEMA.TABLES WHERE\nTABLE_SCHEMA=\"gitlabhq_production\" AND TABLE_TYPE=\"BASE TABLE\" AND\nROW_FORMAT!=\"Dynamic\";\n\nAnd::\nSELECT CONCAT('ALTER TABLE `', TABLE_NAME,'` CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;')\n  AS 'Copy & run these SQL statements:' FROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=\"gitlabhq_production\" AND TABLE_COLLATION != \"utf8mb4_unicode_ci\" AND TABLE_TYPE=\"BASE TABLE\";\n\nAnd::\nSELECT CONCAT('ALTER TABLE `', TABLE_NAME,'` default CHARSET utf8mb4 COLLATE utf8mb4_unicode_ci;')\n  AS 'Copy & run these SQL statements:' FROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA=\"gitlabhq_production\" AND TABLE_COLLATION != \"utf8mb4_unicode_ci\" AND TABLE_TYPE=\"BASE TABLE\";\n\nThe above is not necessary if we have:\n\nmysql 5.7 with innodb_default_row_format = DYNAMIC (=default)\nthe database collection is set properly (alter database gitlabhq_production default character set utf8mb4 collate utf8mb4_unicode_ci)\nthe table collation and collation_connection is set properly\n\nNOTE: If a migration fails halfway, you can fake success by inserting the\nnumber into schema_migrations and then \"fix things manually\". See\ndb/migrations/ for the migration files.. ",
    "guizmaii": "Hi,\nWhat was the solution for this problem ?\nThanks.. ",
    "BillE": "Same issue here. Any resolution?. ",
    "kenshin1983": "I have the same problem. T_T. ",
    "m00re": "I had the same problem and was able to work around the issue as follows.\nUntil now, I always executed the following commands in order to generate a backup:\ndocker-compose stop gitlab\ndocker-compose rm -f gitlab\ndocker-compose run --rm gitlab app:rake gitlab:backup:create\ndocker-compose up -d gitlab\nNow I am only doing the following:\ndocker-compose exec gitlab /sbin/entrypoint.sh app:rake gitlab:backup:create\nIn other words: I don't stop the container before running backups. The workaround is based on the comments from the corresponding Gitlab issue: https://gitlab.com/gitlab-org/gitlab-ce/issues/44003. ",
    "drujd": "bash\nroot@8da3f4eb72b2:/home/git/gitlab# /etc/cron.daily/logrotate\nerror: /etc/logrotate.conf:7 unknown group 'syslog'\nBut that's probably not just it. Logrotate needs some different default config, gitlab logs can grow a LOT over  52 weeks.... The problem with \"unknown group 'syslog'\" has already been fixed and merged. Another possible problem is that sidekiq has its own log rotation that conflicts with logrotate.\nI have solved this by disabling sidekiq rotation, modifying logrotate settings (to rotate based on size) and running logrotate hourly, not daily.. You missed a change in kubernetes/gitlab-rc.yml. Done.. You might also want to include go1.9.6 (released 2018/05/01). https://golang.org/doc/devel/release.html#go1.9\nJust change the version in Dockerfile.. 11.5.3?. ",
    "hardikns": "Can log rotate be fixed in upcoming release?\nIs it something that needs to be fixed in ubuntu base image?. @sameersbn @solidnerd , can you please check if this can be useful config? . can you make it bold? it looks good that way. \n. ",
    "mhietan": "Hello,\nI have same issue with qnap. I'm running to this issue with 10.5.1 version. Previous version in my qnap work okay: 10.4.2. This unicorn issue causes 502 message. Sometimes when stopping gitlab and starting gitlab again then gitlab works correctly. I can see that there is much newer versions available. Is this issue fixed there?. Hello,\nMy Container Station is already newest version. So it won't help me to resolve this issue.\nI'm wondering where that GITLAB_UNICORN_MEMORY_MAX should be put?. ",
    "donny-hardo": "I noticed my QNAP was telling me there was an update available for Container Station. After I updated it, the issue went away. . ",
    "jameswalmsley": "@solidnerd Will this be merged soon?. ",
    "damianbl": "Thanks @spritle. However, I have done exectly the same thing and that is when it does not start with no errors.. ",
    "vemcaster": "Allowing local network requests in the Gitlab`s Admin Settings may help you.\nPay attention to omnibus-gitlab#3307.. ",
    "YTS85205107": "Hi , @solidnerd \nThanks your reply.\nI refer to the previous container config , and I reconfig docker-compose.yml.\nmy docker-compose config as below:\nversion: '2'\nservices:\n  gitlab-postgresql:\n    restart: always\n    image: local/gitlab-postgresql\n    volumes:\n      - /srv/docker/gitlab/postgresql:/var/lib/postgresql\n    environment:\n      - DB_NAME=gitlabhq_production\n      - DB_USER=gitlab\n      - DB_PASS=1qaz@WSX\n      - PG_USER=postgres\n      - PG_HOME=/var/lib/postgresql\n      - PG_CONFDIR=/etc/postgresql/9.4/main\n      - PG_BINDIR=/usr/lib/postgresql/9.4/bin\n      - PG_DATADIR=/var/lib/postgresql/9.4/main\n    command: [ \"/start\" ]\ngitlab-redis:\n    restart: always\n    image: local/gitlab-redis\n    volumes:\n      - /srv/docker/gitlab/redis:/var/lib/redis\n    environment:\n      - REDIS_USER=redis\n      - REDIS_DATA_DIR=/var/lib/redis\n      - REDIS_LOG_DIR=/var/log/redis\n    entrypoint:\n      - /sbin/entrypoint.sh\ngitlab:\n    restart: always\n    image: local/gitlab\n    ports:\n      - \"10022:22\"\n      - \"10080:80\"\n    volumes:\n      - /srv/docker/gitlab/gitlab:/home/git/data\n    links:\n      - gitlab-postgresql:postgresql\n      - gitlab-redis:redisio\n    environment:\n      - DEBUG=true\n  - GITLAB_PORT=10080\n  - GITLAB_SSH_PORT=10022\n  - GITLAB_USER=git\n  - GITLAB_HOME=/home/git\n  - GITLAB_LOG_DIR=/var/log/gitlab\n  - GITLAB_INSTALL_DIR=/home/git/gitlab\n  - GITLAB_SHELL_INSTALL_DIR=/home/git/gitlab-shell\n  - GITLAB_DATA_DIR=/home/git/data\n\n  - DB_TYPE=postgres\n  - DB_ADAPTER=postgresql\n  - DB_HOST=gitlab-postgresql\n  - DB_PORT=5432\n  - DB_USER=gitlab\n  - DB_PASS=1qaz@WSX\n  - DB_NAME=gitlabhq_production\n\n  - REDIS_HOST=gitlab-redis\n  - REDIS_PORT=6379\n\n  - SETUP_DIR=/var/cache/gitlab\n  - RAILS_ENV=production\nentrypoint:\n  - /sbin/entrypoint.sh\n\nAfter I use docker-compose up -d , only gitlab container failed.\nI use docker logs , but nothing.\nThanks.. ",
    "SamuelNitsche": "Since I got no answer, I reinstalled gitlab \ud83d\ude00 . How much memory has your server?. I have experienced the same issues with machines that had less than 4G of memory. Try to increase the memory and tell me if it resolved your issues.. I think this version of gitlab needs way less memory.\nGitlab recommends 4G or more.\n\"We also strongly recommend at least 4GB of free memory to run GitLab.\". ",
    "tonyxyl": "i try to drop table lfs_file_locks;, then another problem took place, the sql CREATE TABLElfs_file_locks(idint(11) auto_increment PRIMARY KEY,project_idint(11) NOT NULL,user_idint(11) NOT NULL,created_atdatetime NOT NULL,pathvarchar(511),  INDEXindex_lfs_file_locks_on_user_id(user_id) ) ENGINE=InnoDB runs smooth, but tells me length of path filed not enough for 767 bytes.. i try to drop table lfs_file_locks;, then another problem took place, the sql CREATE TABLElfs_file_locks(idint(11) auto_increment PRIMARY KEY,project_idint(11) NOT NULL,user_idint(11) NOT NULL,created_atdatetime NOT NULL,pathvarchar(511),  INDEXindex_lfs_file_locks_on_user_id(user_id) ) ENGINE=InnoDB runs smooth, but tells me length of path filed not enough for 767 bytes.. I solve the problem, by migrating to mysql 5.7. I solve the problem, by migrating to mysql 5.7. ",
    "ckeyer": "I have the same problem. ",
    "vinhhrv": "I have the same problem. ",
    "moriyas1984": "Any update?. ",
    "abuango": "Hi @jrada, Are you still experiencing this issue?. ",
    "jrada": "Hi @abuango,\nYes, I am still experiencing this issue...also on the current version of the docker image. But I can add the same Kubernetes cluster to the project hosted on gitlab.com without any issues.. Hi @abuango,\nYes, I am still experiencing this issue...also on the current version of the docker image. But I can add the same Kubernetes cluster to the project hosted on gitlab.com without any issues.. ",
    "FritschAuctores": "I have the problem too, is there no way to add an Kubernetes cluster? I tried a lot of different versions of dockerimages.. gitlab/gitlab-ce:latest works with Kubernetes. ",
    "s-higuma": "As a short-term solution, you can create a backup file by executing the following command.\ndocker exec -it gitlab_container_name bash\nbundle exec rake gitlab:backup:create RAILS_ENV=production. ",
    "europemaster": "Can confirm that it is issue in 11.1.4 as well and @paddy-hack workaround works here.. ",
    "partypeopleland": "Great Job ! Thanks @paddy-hack \nIt's Work!!\nWindows 10 / docker for windows 18.06.1-ce / ameersbn/gitlab:11.3.0. ",
    "dinonovak": "This is due to Synology officially using 9.4.4-0050 which is only able to produce 0.1.8 export version. ",
    "siddheshrele": "Got solution for same it can be closed.\nhttps://github.com/siddheshrele/cd-python-docker-gitlab-jenkins. ",
    "dimm0": "I'd appreciate help with that as well\nHow can I enable redirect to external registry? Setting GITLAB_REGISTRY_ENABLED and GITLAB_REGISTRY_HOST isn't helping.... I've rebuilt the container and updated to 10.8.4, still the same error. My understanding is that supervisord is supposed to be starting 2 times - first for initial config, and second for running the services. So it's starting supervisord, then killing it and waiting for all processes to finish, and then starting again. Not sure why though... Still not fixed in the last 10.8.4 release. Not for me. It keeps restarting with the same error. It did work indeed!. ",
    "fire": "Since the last release breaks the image and there's no downgrade path. Would be good to release this soon.. ",
    "mfeltscher": "@solidnerd Is there a reason this tag doesn't show up on Docker Hub?. Perfect, thanks!. ",
    "chocopowwwa": "this should solve your issue :smile:  \nhttps://github.com/sameersbn/docker-gitlab/issues/595#issuecomment-180475200. ",
    "upstream-nsk": "Sorry\nhttps://docs.gitlab.com/runner/register/index.html. ",
    "Yoshi325": "Exact same error for me.\n. Exact same error for me.\n. ",
    "giangiangian": "\nAre you using 10.7.2? This version runs fine for me after upgrading from 10.6.4.\n\n+1 for this, just finished the same upgrade (10.6.4 -> 10.7.2) over the lab deployment, after testing it on a local machine, and everything went smooth on both machines.\nAlso, to avoid confusion, I'd suggest to never refer to version as \"latest\", since it creates confusion.. ",
    "uda": "The build on hub.docker.com seems to have failed. ",
    "liguobao": "@SamuelNitsche  I have sample problem,my server has 1.8G memory.\n[root@iZn4pjam1xnbipZ ~]$ free -m\n              total        used        free      shared  buff/cache   available\nMem:           1839        1001         445          23         392         606\nSwap:             0           0           0. E.... Other solution? \nI can run sameersbn/gitlab:8.4.2 in my server.\nThanks a lot.. Ok, I use sameersbn/gitlab:8.4.2 in my server . Thanks again.. me too ..... ",
    "yanmingsohu": "in gitlab container:\n  chown -R git /home/git/data\notherwise:\n  chown -R 1000 [gitlab-data-dir]. ",
    "ThomasKoppensteiner": "@hulupiao this is what I did (as a workaround), but in my opinion, this shouldn't be necessary because 22 is the default port.\nFrom the readme: GITLAB_SSH_PORT: The ssh port number. Defaults to 22..\nThe issue is that the URL is built the wrong way, not that the wrong port is used.. Retried to clone a repository with the above URL format ($ git clone user@server:<no_port>project.git) and it worked. I don't know what was the issue.\nThank you for your answers!\nI think we can close / resolve this issue. . ",
    "HEM42": "There is now a finished build, thank you. ",
    "buithehien1991": "It happen for me. I also don't know why. Please someone tell me why and how to resolve it?. ",
    "streetlist": "thanks.. sorry missed this one. no idea why my docker pull is still 10.6.1. ",
    "Wyall": "So even if I'm running 2 complete instances with docker-compose (so 2x redis, DB, gitlab), each gitlab knows which of the DBs to call?\nThe idea is that we have a running GitLab instance on our QNAP NAS but this was created with QNAP's docker-compose script which is pretty short and e.g. doesn't declare the used volumes in the dc.yml which I find annoying. But I think I need to make some changes to the dc.yml from here for it to work on QNAP, at least the paths seem to be different. Still figuring that out. For that I wanted to run a second instance just for testing along the actual working one and once I figured everything out concerning the docker-compose file, merge them.. I get the same, after that message everything tries to restart and it happens again and again. Is your's a QNAP by any chance? Mine is and I have the feeling their docker implementation is weird in many regards. Not sure if that's the problem here though.. I think I tried 10.8.2, I quickly tried 10.8.3-1 now, seemed to have worked for me. From what I saw a key was found, then a restart and then everything spawned correctly. . To run this, do I have to stop the container like in the backup section without docker-compose or really only this one command?. I just installed 11.3.5 and in admin settings it also says 11.3.5. I was hoping that it's 11.3.6 and just mislabeled on dockerhub. ",
    "alimvedats": "i updated but now crashing my gitlab\nConfiguring gitlab-shell...,\nConfiguring nginx...,\nConfiguring nginx::gitlab...,\n/sbin/entrypoint.sh: line 22:   595 Terminated              /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf. ",
    "roberthass": "i have the same problem. ",
    "methol": "I have the same problem too.\nlogs\nLoading /etc/docker-gitlab/runtime/env-defaults\nInitializing logdir...\nInitializing datadir...\nInstalling configuration templates...\nConfiguring gitlab...\nConfiguring gitlab::database\nConfiguring gitlab::redis\nConfiguring gitlab::secrets...\nConfiguring gitlab::sidekiq...\nConfiguring gitlab::gitaly...\nConfiguring gitlab::monitoring...\nConfiguring gitlab::gitlab-workhorse...\nConfiguring gitlab::unicorn...\nConfiguring gitlab::timezone...\nConfiguring gitlab::rack_attack...\nConfiguring gitlab::ci...\nConfiguring gitlab::artifacts...\nConfiguring gitlab::lfs...\nConfiguring gitlab::uploads...\nConfiguring gitlab::mattermost...\nConfiguring gitlab::project_features...\nConfiguring gitlab::smtp_settings...\nConfiguring gitlab::oauth...\nConfiguring gitlab::ldap...\nConfiguring gitlab::cron_jobs...\nConfiguring gitlab::backups...\nConfiguring gitlab::registry...\nConfiguring gitlab::pages...\nConfiguring gitlab-shell...\nConfiguring nginx...\nConfiguring nginx::gitlab...\nSetting up GitLab for firstrun. Please be patient, this could take a while...\nMissing Rails.application.secrets.openid_connect_signing_key for production environment. The secret will be generated and stored in config/secrets.yml.. ",
    "jboxberger": "same here :-(. Same Problem with 10.8.3-1 directrly after the Update. After a Container resatart it seems to work. . Same here!. ",
    "npotier": "Just my 2 cents here, but it worked with the 10.8.2 version \n10.8.3 logs :\n``bash\ngitlab_1       | Rails.application.secrets.openid_connect_signing_key was blank, but the literal value in config/secrets.yml was:\ngitlab_1       |   -----BEGIN RSA PRIVATE KEY-----\n...\ngitlab_1       | -----END RSA PRIVATE KEY-----\ngitlab_1       | \ngitlab_1       | \ngitlab_1       | This probably isn't the expected value for this secret. To keep using a literal Erb string in config/secrets.yml, replace<%with<%%`.\ngitlab_gitlab_1 exited with code 0\n```\nand the 10.8.2 logs :\nbash\ngitlab_1       | Missing Rails.application.secrets.openid_connect_signing_key for production environment. The secret will be generated and stored in config/secrets.yml.\ngitlab_1       | Clearing cache...\n. Hello @simonswine thanks for reporting your problem. I have the similar issue, and for now the only way I found to have gitlab working is to drop the table project_authorizations and recreate it but without the lines : \nUNIQUE KEY `index_project_authorizations_on_user_id_project_id_access_level` (`user_id`,`project_id`,`access_level`),\nKEY `index_project_authorizations_on_project_id` (`project_id`),\nAs a result, Gitlab is working, but the Activity Dashboard  (dashboard/activity ) is empty.\nWould you mind explaining more specifically what you did to recover the table ? And share your MySQL query ? Thank you !. Thanks @simonswine :). ",
    "ogasada": "I also experienced the same error, but now it works as I recreate the docker container of gitlab.. ",
    "flashermaster": "@adamlc There is only endless reboot. I have to remove the container and also the data in my volume to make next clean docker-compose up work.. @adamlc Thanks.Would you please give me any suggestion of which former version of sameersbn/gitlab would be pretty stable?. @derphilipp I'm not upgrading from former version to 10.8.3. I've just made a clean installation and a single reboot try. TOT. @adamlc So now I'll try 10.8.1 to find whether it suits me.... Trying 10.8.1 and I got exit 1 error. Solving..... @solidnerd Thank you for your support. I'm not upgrading. I just made a clean install in my synology docker. I followed the instructions in https://hub.docker.com/r/sameersbn/gitlab/. Wget the yml and fix it with my own info. Then I made the first docker-compose up and it worked. Then I tried to make some date fix(it doesn't matter at all cause I tried the whole steps another time without doing this) so I made a docker-compose stop. This time the up got error code 143.\nUnfortunately now I'm tring 10.8.1 for clean installation and get failure info:\nMissing Rails.application.secrets.openid_connect_signing_key for production environment. The secret will be generated and stored in config/secrets.yml.. @spritle Well I tried 2 ways. \n1. The synology nas provide the docker UI to manage the images and containers though it doesn't support docker-compose through WEB UI.\n2. I also tried docker rm/rmi commands to remove the containers&images.\nTo clean the data volume I pointed in yml such as:\nvolumes:\n    - /volume1/docker/gitlab/gitlab:/home/git/data:Z\nI just rm -rf * the directory \ud83e\udd23 . @adferrand I made a mistake. Actually I'm trying 10.8.1 and faced with the error. I used the same yml and up succeeded with 10.8.3. And also GITLAB_SECRETS_* was filled as the instruction mentioned.\nNow the problem is: \n\n10.8.3 reboot failure.\n10.8.1 install failure.\n\ud83d\ude22 . @adferrand Thank you for your solution. Now I'll try it.\nBut before I try the 10.8.1, I have deleted all the containers and images(includes postresql&redis).  And the issue is not the same of 10.8.3. 10.8.3 can boot the first time while 10.8.1 failed to init.. Where can I get the failing supervisord logs?\nIn docker logs there are only error logs mentioned above.. @HsuNick I tried. Before the reboot, I managed to vi the config/secrets.yml:\nproduction:                                                                             \n  db_key_base: some_long_random_codes1 \n  secret_key_base: some_long_random_codes2                                                                       \n  otp_key_base: some_long_random_codes3                                                    \ndevelopment:                                                                  \n  db_key_base: development\ntest:                                                                         \n  db_key_base: test\n\nseems all fine.. @adferrand Nice work! The temporary solution works.  \ud83d\udc4d . ",
    "HsuNick": "I'm also getting the same error .... i try from 10.5.6 to 10.8.3 upgrade \nwhen appear \nMissing Rails.application.secrets.openid_connect_signing_key for production environment. The secret will be generated and stored in config/secrets.yml. \nI try enter cmd line.\ndocker exec -it gitlab bash\nvi config/secrets.yml\nleft without making any changes.\nthe magic happened, It's working.... version is 10.8.3-1?. ",
    "GytisT": "Anybody willing to share a solution, please?. ",
    "LatinCatin": "Hi !\nSame problem here for a migration from 10.6.3 to 10.8.3.\nI just stop my docker (docker-compose down), upgrade the docker-compose.yml file to 10.8.3 and then run docker-compose up.\nAfter that, the docker container was stuck inside a bootloop with the error \"/sbin/entrypoint.sh: line 22: 558 Terminated /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf\"\nEdit : a migration from 9.5.2 to 10.8.3 works perfectly... Strange.\n@solidnerd Thank you for looking into that. Good luck !. ",
    "hungnguyentps": "@adferrand Awesome, it's worked. You save my life. Thanks very much.. ",
    "qq339837609": "I have the same question and can't start docker.. > Hey @qq339837609,\n\nyou shouldn't do an upgrade from your version to the latest one. Because this error happens because you left some upgrades.\nWhat I would recommend is that you do a rolling update for each Major.Minor so this should solve your problem.\n\nthank you for your help\uff0ci will try it.. sorry,i have tried it,but an error has occurred when i upgrade sameersbn/gitlab from 9.5.5 to 10.0.0.\nthis is error error message\n`StandardError: An error has occurred, all later migrations canceled:\nMysql2::Error: Duplicate entry '2' for key 'index_user_synced_attributes_metadata_on_user_id':         INSERT INTO user_synced_attributes_metadata (user_id, provider, email_synced)\n        SELECT id, email_provider, external_email\n        FROM users\n        WHERE external_email = TRUE\n        AND NOT EXISTS (\n          SELECT true\n          FROM user_synced_attributes_metadata\n          WHERE user_id = users.id\n          AND provider = users.email_provider\n        )\n        AND id BETWEEN 1 AND 28\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:120:in _query'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:120:inblock in query'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:119:in handle_interrupt'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:119:inquery'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/peek-mysql2-1.1.0/lib/peek/views/mysql2.rb:14:in query_with_timing'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:inblock in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:484:in block in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/notifications/instrumenter.rb:20:ininstrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:478:in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:inexecute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/mysql2_adapter.rb:225:in execute'\n/home/git/gitlab/config/initializers/connection_fix.rb:20:inexecute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:665:in block in method_missing'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:inblock in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:654:inmethod_missing'\n/home/git/gitlab/db/post_migrate/20170828170502_post_deploy_migrate_user_external_mail_data.rb:27:in block in up'\n/home/git/gitlab/app/models/concerns/each_batch.rb:75:inblock in each_batch'\n/home/git/gitlab/app/models/concerns/each_batch.rb:56:in step'\n/home/git/gitlab/app/models/concerns/each_batch.rb:56:ineach_batch'\n/home/git/gitlab/db/post_migrate/20170828170502_post_deploy_migrate_user_external_mail_data.rb:24:in up'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:611:inexec_migration'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:592:in block (2 levels) in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:591:inblock in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:in with_connection'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:590:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:768:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:998:inblock in execute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:1046:in ddl_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:997:inexecute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:959:in block in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:ineach'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:823:inup'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:801:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/tasks/database_tasks.rb:137:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/railties/databases.rake:44:in block (2 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-12.0.0/exe/rake:27:in'\nActiveRecord::RecordNotUnique: Mysql2::Error: Duplicate entry '2' for key 'index_user_synced_attributes_metadata_on_user_id':         INSERT INTO user_synced_attributes_metadata (user_id, provider, email_synced)\n        SELECT id, email_provider, external_email\n        FROM users\n        WHERE external_email = TRUE\n        AND NOT EXISTS (\n          SELECT true\n          FROM user_synced_attributes_metadata\n          WHERE user_id = users.id\n          AND provider = users.email_provider\n        )\n        AND id BETWEEN 1 AND 28\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:120:in _query'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:120:inblock in query'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:119:in handle_interrupt'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:119:inquery'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/peek-mysql2-1.1.0/lib/peek/views/mysql2.rb:14:in query_with_timing'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:inblock in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:484:in block in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/notifications/instrumenter.rb:20:ininstrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:478:in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:inexecute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/mysql2_adapter.rb:225:in execute'\n/home/git/gitlab/config/initializers/connection_fix.rb:20:inexecute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:665:in block in method_missing'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:inblock in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:654:inmethod_missing'\n/home/git/gitlab/db/post_migrate/20170828170502_post_deploy_migrate_user_external_mail_data.rb:27:in block in up'\n/home/git/gitlab/app/models/concerns/each_batch.rb:75:inblock in each_batch'\n/home/git/gitlab/app/models/concerns/each_batch.rb:56:in step'\n/home/git/gitlab/app/models/concerns/each_batch.rb:56:ineach_batch'\n/home/git/gitlab/db/post_migrate/20170828170502_post_deploy_migrate_user_external_mail_data.rb:24:in up'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:611:inexec_migration'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:592:in block (2 levels) in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:591:inblock in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:in with_connection'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:590:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:768:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:998:inblock in execute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:1046:in ddl_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:997:inexecute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:959:in block in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:ineach'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:823:inup'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:801:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/tasks/database_tasks.rb:137:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/railties/databases.rake:44:in block (2 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-12.0.0/exe/rake:27:in'\nMysql2::Error: Duplicate entry '2' for key 'index_user_synced_attributes_metadata_on_user_id'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:120:in _query'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:120:inblock in query'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:119:in handle_interrupt'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/mysql2-0.4.5/lib/mysql2/client.rb:119:inquery'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/peek-mysql2-1.1.0/lib/peek/views/mysql2.rb:14:in query_with_timing'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:inblock in execute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:484:in block in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activesupport-4.2.8/lib/active_support/notifications/instrumenter.rb:20:ininstrument'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_adapter.rb:478:in log'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:309:inexecute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/mysql2_adapter.rb:225:in execute'\n/home/git/gitlab/config/initializers/connection_fix.rb:20:inexecute'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:665:in block in method_missing'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:inblock in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:634:in say_with_time'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:654:inmethod_missing'\n/home/git/gitlab/db/post_migrate/20170828170502_post_deploy_migrate_user_external_mail_data.rb:27:in block in up'\n/home/git/gitlab/app/models/concerns/each_batch.rb:75:inblock in each_batch'\n/home/git/gitlab/app/models/concerns/each_batch.rb:56:in step'\n/home/git/gitlab/app/models/concerns/each_batch.rb:56:ineach_batch'\n/home/git/gitlab/db/post_migrate/20170828170502_post_deploy_migrate_user_external_mail_data.rb:24:in up'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:611:inexec_migration'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:592:in block (2 levels) in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:591:inblock in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/connection_adapters/abstract/connection_pool.rb:292:in with_connection'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:590:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:768:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:998:inblock in execute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:1046:in ddl_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:997:inexecute_migration_in_transaction'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:959:in block in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:ineach'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:955:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:823:inup'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/migration.rb:801:in migrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/tasks/database_tasks.rb:137:inmigrate'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/activerecord-4.2.8/lib/active_record/railties/databases.rake:44:in block (2 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.3.0/gems/rake-12.0.0/exe/rake:27:in'\nTasks: TOP => db:migrate\n(See full trace by running task with --trace)\n`. > The 8 to 9 upgrade stalled for me as well when using MySQL. I strongly recommend you convert your DB to Postgresql. Once I did that all further upgrades worked without issues.\n\nhttps://github.com/gitlabhq/mysql-postgresql-converter\nhttps://jo-m.ch/migrate-gitlab-mysql-to-postgres/\n\nI have tried the command that 'mysqldump --compatible=postgresql --default-character-set=utf8 \\\n-r databasename.mysql -u root gitlabhq_production -p' .\nThe error is as follows:\nmysqldump: Couldn't execute 'SHOW VARIABLES LIKE 'gtid_mode'': Table 'performance_schema.session_variables' doesn't exist (1146)\nMysql version is 5.7.22 .. ",
    "KonstantinKuklin": "same on 10.8.3-1, 10.8.2. wasted 1 hour, but the problem not relevant for Missing Rails.application.secrets...\nWhat's going on there: \n- docker trying to start /sbin/entrypoin.sh\n- find command to execute - /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf &\n- go to hell with - kill -15 $SUPERVISOR_PID\n- trying to restart\nwas added in f31c4d71e0e0f54341615a8a11f13a6ba69d75c9\n. ",
    "KartoffelToby": "Look @ #1658 . @reynold-lariza \nThe Color Theme is tested and functional. But the LE isn't working. Maybe i missed something.\n@offtopic: I splitt this merge request. Color Theme without LE is in: #1659. @Ilya-Kuchaev @rozpuszczalny \nThe Config:\nletsencrypt['enable'] = true\nletsencrypt['auto_renew_hour'] = \"12\"\nletsencrypt['auto_renew_minute'] = \"30\"\nletsencrypt['auto_renew_day_of_month'] = \"*/7\"\nletsencrypt['auto_renew'] = true\nmust be set in /etc/gitlab/gitlab.rb\nAnd also \"external_url\" must be https\nI think one of my configs dosn't work with the current setup, i need help here. @solidnerd no problem, but i wonder why the Build failed\n. ",
    "mrnonz": "And here my docker-compose.yml\n```\nversion: '2'\nservices:\n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    volumes:\n    - /srv/docker/gitlab/redis:/var/lib/redis:Z\npostgresql:\n    restart: always\n    image: sameersbn/postgresql:9.6-2\n    volumes:\n    - /srv/docker/gitlab/postgresql:/var/lib/postgresql:Z\n    environment:\n    - DB_USER=####\n    - DB_PASS=####\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:10.8.3-1\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"10080:80\"\n    - \"10022:22\"\n    volumes:\n    - /srv/docker/gitlab/gitlab:/home/git/data:Z\n    environment:\n    - DEBUG=false\n- DB_ADAPTER=postgresql\n- DB_HOST=postgresql\n- DB_PORT=5432\n- DB_USER=####\n- DB_PASS=####\n- DB_NAME=gitlabhq_production\n\n- REDIS_HOST=redis\n- REDIS_PORT=6379\n\n- TZ=Asia/Bangkok\n- GITLAB_TIMEZONE=Bangkok\n\n- GITLAB_HTTPS=true\n- SSL_SELF_SIGNED=false\n\n- GITLAB_HOST=####\n- GITLAB_PORT=443\n- GITLAB_SSH_PORT=10022\n- GITLAB_RELATIVE_URL_ROOT=\n- GITLAB_SECRETS_DB_KEY_BASE=####\n- GITLAB_SECRETS_SECRET_KEY_BASE=####\n- GITLAB_SECRETS_OTP_KEY_BASE=####\n\n- GITLAB_ROOT_PASSWORD=\n- GITLAB_ROOT_EMAIL=\n\n- GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n- GITLAB_NOTIFY_PUSHER=false\n\n- GITLAB_EMAIL=####\n- GITLAB_EMAIL_REPLY_TO=####\n- GITLAB_INCOMING_EMAIL_ADDRESS=####\n\n- GITLAB_BACKUP_SCHEDULE=daily\n- GITLAB_BACKUP_TIME=01:00\n\n- SMTP_ENABLED=true\n- SMTP_DOMAIN=####\n- SMTP_HOST=smtp.gmail.com\n- SMTP_PORT=587\n- SMTP_USER=####\n- SMTP_PASS=####\n- SMTP_STARTTLS=true\n- SMTP_AUTHENTICATION=login\n\n- IMAP_ENABLED=false\n- IMAP_HOST=imap.gmail.com\n- IMAP_PORT=993\n- IMAP_USER=mailer@example.com\n- IMAP_PASS=password\n- IMAP_SSL=true\n- IMAP_STARTTLS=false\n\n- OAUTH_ENABLED=false\n- OAUTH_AUTO_SIGN_IN_WITH_PROVIDER=\n- OAUTH_ALLOW_SSO=\n- OAUTH_BLOCK_AUTO_CREATED_USERS=true\n- OAUTH_AUTO_LINK_LDAP_USER=false\n- OAUTH_AUTO_LINK_SAML_USER=false\n- OAUTH_EXTERNAL_PROVIDERS=\n\n- OAUTH_CAS3_LABEL=cas3\n- OAUTH_CAS3_SERVER=\n- OAUTH_CAS3_DISABLE_SSL_VERIFICATION=false\n- OAUTH_CAS3_LOGIN_URL=/cas/login\n- OAUTH_CAS3_VALIDATE_URL=/cas/p3/serviceValidate\n- OAUTH_CAS3_LOGOUT_URL=/cas/logout\n\n- OAUTH_GOOGLE_API_KEY=\n- OAUTH_GOOGLE_APP_SECRET=\n- OAUTH_GOOGLE_RESTRICT_DOMAIN=\n\n- OAUTH_FACEBOOK_API_KEY=\n- OAUTH_FACEBOOK_APP_SECRET=\n\n- OAUTH_TWITTER_API_KEY=\n- OAUTH_TWITTER_APP_SECRET=\n\n- OAUTH_GITHUB_API_KEY=\n- OAUTH_GITHUB_APP_SECRET=\n- OAUTH_GITHUB_URL=\n- OAUTH_GITHUB_VERIFY_SSL=\n\n- OAUTH_GITLAB_API_KEY=\n- OAUTH_GITLAB_APP_SECRET=\n\n- OAUTH_BITBUCKET_API_KEY=\n- OAUTH_BITBUCKET_APP_SECRET=\n\n- OAUTH_SAML_ASSERTION_CONSUMER_SERVICE_URL=\n- OAUTH_SAML_IDP_CERT_FINGERPRINT=\n- OAUTH_SAML_IDP_SSO_TARGET_URL=\n- OAUTH_SAML_ISSUER=\n- OAUTH_SAML_LABEL=\"Our SAML Provider\"\n- OAUTH_SAML_NAME_IDENTIFIER_FORMAT=urn:oasis:names:tc:SAML:2.0:nameid-format:transient\n- OAUTH_SAML_GROUPS_ATTRIBUTE=\n- OAUTH_SAML_EXTERNAL_GROUPS=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_NAME=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_FIRST_NAME=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_LAST_NAME=\n\n- OAUTH_CROWD_SERVER_URL=\n- OAUTH_CROWD_APP_NAME=\n- OAUTH_CROWD_APP_PASSWORD=\n\n- OAUTH_AUTH0_CLIENT_ID=\n- OAUTH_AUTH0_CLIENT_SECRET=\n- OAUTH_AUTH0_DOMAIN=\n\n- OAUTH_AZURE_API_KEY=\n- OAUTH_AZURE_API_SECRET=\n- OAUTH_AZURE_TENANT_ID=\n\n```. @LivesMountain No, Still have problem.. I think this issue is related to #1638 .. And another Gitlab version release  11.6 : https://about.gitlab.com/2018/12/22/gitlab-11-6-released/. ",
    "LivesMountain": "I have this problem too. Have you solved it yet. I found this error in the execution queue\n. I found a solution to the problem\n\nThe port written in the gitlab mail configuration document is 587 \nBut 587 is not the sending port\n\n. @mrnonz . ",
    "ctuxboy": "Same problem!. ",
    "Ageraluon": "If instead using sameersbn/mysql, as in the following docker-compose file:\n```\nversion: \"3.6\"\nservices:\n  gitlab:\n    image: 'sameersbn/gitlab:latest'\n    ports:\n      - \"8101:443\" #HTTPS Port\n      - \"8102:80\" #HTTP Port\n      - \"8103:22\" #SSH Port\n    #restart: always\n    environment:\n      - DEBUG=true\n  - DB_ADAPTER=mysql2\n  - DB_HOST=con_database\n  - DB_PORT=3306\n  - DB_USER=gitlab\n  - DB_PASS=testpassword\n  - DB_NAME=gitlabhq_production\n\n  - REDIS_HOST=con_redis\n  - REDIS_PORT=6379\n\n  - TZ=Europe/Berlin\n  - GITLAB_TIMEZONE=Berlin\n\n  - GITLAB_HTTPS=false\n  - SSL_SELF_SIGNED=false\n\n  - GITLAB_HOST=localhost\n  - GITLAB_PORT=8102\n  - GITLAB_SSH_PORT=8103\n  - GITLAB_RELATIVE_URL_ROOT=\n  - GITLAB_SECRETS_DB_KEY_BASE=longandrandomalphanumericstring\n  - GITLAB_SECRETS_SECRET_KEY_BASE=longandrandomalphanumericstring\n  - GITLAB_SECRETS_OTP_KEY_BASE=longandrandomalphanumericstring\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n\n\ncontainer_name: con_gitlab\nnetworks:\n  - net_RevProxyLinux\n  - net_GitLab\nhealthcheck:\n  test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:80\"]\n  interval: 3m\n  timeout: 20s\n  retries: 3\n  start_period: 1m\n\n#For user session data\n  redis:\n    restart: always\n    image: sameersbn/redis:latest\n    networks: \n      - net_GitLab\n    container_name: con_redis\n#For permanent user data\n  database:\n    #restart: always\n    image: sameersbn/mysql:latest\n    environment:\n      - DB_NAME=gitlabhq_production\n      - DB_USER=gitlab\n      - MARIADB_PASSWORD=testpassword\n    networks: \n      - net_GitLab\n    container_name: con_database    \nnetworks:\n  net_RevProxyLinux:\n  net_GitLab:\n```\nThe output is as follows:\n\n...\ncon_gitlab  | + [[ false == true ]]\ncon_gitlab  | + case ${1} in\ncon_gitlab  | + SUPERVISOR_PID=591\ncon_gitlab  | + migrate_database\ncon_gitlab  | + /usr/bin/supervisord -nc /etc/supervisor/supervisord.conf\ncon_gitlab  | + case ${DB_ADAPTER} in\ncon_gitlab  | + QUERY='SELECT count() FROM information_schema.tables WHERE table_schema = '\\''gitlabhq_production'\\'';'\ncon_gitlab  | ++ mysql -h con_database -P 3306 -u gitlab -pL86JIYwMpm443qcz5RV9 -ss -e 'SELECT count() FROM information\n_schema.tables WHERE table_schema = '\\''gitlabhq_production'\\'';'\ncon_gitlab  | mysql: [Warning] Using a password on the command line interface can be insecure.\ncon_gitlab  | + COUNT=0\ncon_gitlab  | + [[ -z 0 ]]\ncon_gitlab  | + [[ 0 -eq 0 ]]\ncon_gitlab  | + echo 'Setting up GitLab for firstrun. Please be patient, this could take a while...'\ncon_gitlab  | Setting up GitLab for firstrun. Please be patient, this could take a while...\ncon_gitlab  | + exec_as_git force=yes bundle exec rake gitlab:setup\ncon_gitlab  | ++ whoami\ncon_gitlab  | + [[ root == git ]]\ncon_gitlab  | + sudo -HEu git force=yes bundle exec rake gitlab:setup\ncon_gitlab  | 2018-06-18 16:33:12,103 CRIT Supervisor running as root (no user in config file)\ncon_gitlab  | 2018-06-18 16:33:12,103 WARN Included extra file \"/etc/supervisor/conf.d/cron.conf\" during parsing\ncon_gitlab  | 2018-06-18 16:33:12,103 WARN Included extra file \"/etc/supervisor/conf.d/gitaly.conf\" during parsing\ncon_gitlab  | 2018-06-18 16:33:12,103 WARN Included extra file \"/etc/supervisor/conf.d/gitlab-workhorse.conf\" during par\nsing\ncon_gitlab  | 2018-06-18 16:33:12,103 WARN Included extra file \"/etc/supervisor/conf.d/mail_room.conf\" during parsing\ncon_gitlab  | 2018-06-18 16:33:12,103 WARN Included extra file \"/etc/supervisor/conf.d/nginx.conf\" during parsing\ncon_gitlab  | 2018-06-18 16:33:12,103 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\ncon_gitlab  | 2018-06-18 16:33:12,103 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\ncon_gitlab  | 2018-06-18 16:33:12,103 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\ncon_gitlab  | 2018-06-18 16:33:12,164 INFO RPC interface 'supervisor' initialized\ncon_gitlab  | 2018-06-18 16:33:12,165 CRIT Server 'unix_http_server' running without any HTTP authentication checking\ncon_gitlab  | 2018-06-18 16:33:12,165 INFO supervisord started with pid 591\ncon_gitlab  | 2018-06-18 16:33:13,169 INFO spawned: 'gitaly' with pid 600\ncon_gitlab  | 2018-06-18 16:33:13,176 INFO spawned: 'sidekiq' with pid 601\ncon_gitlab  | 2018-06-18 16:33:13,183 INFO spawned: 'unicorn' with pid 602\ncon_gitlab  | 2018-06-18 16:33:13,200 INFO spawned: 'mail_room' with pid 603\ncon_gitlab  | 2018-06-18 16:33:13,206 INFO spawned: 'gitlab-workhorse' with pid 604\ncon_gitlab  | 2018-06-18 16:33:13,213 INFO spawned: 'cron' with pid 605\ncon_gitlab  | 2018-06-18 16:33:13,234 INFO spawned: 'nginx' with pid 606\ncon_gitlab  | 2018-06-18 16:33:13,239 INFO spawned: 'sshd' with pid 608\ncon_gitlab  | 2018-06-18 16:33:14,251 INFO success: gitaly entered RUNNING state, process has stayed up for > than 1 sec\nonds (startsecs)\ncon_gitlab  | 2018-06-18 16:33:14,251 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 se\nconds (startsecs)\ncon_gitlab  | 2018-06-18 16:33:14,251 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 se\nconds (startsecs)\ncon_gitlab  | 2018-06-18 16:33:14,251 INFO success: mail_room entered RUNNING state, process has stayed up for > than 1\nseconds (startsecs)\ncon_gitlab  | 2018-06-18 16:33:14,251 INFO success: gitlab-workhorse entered RUNNING state, process has stayed up for >\nthan 1 seconds (startsecs)\ncon_gitlab  | 2018-06-18 16:33:14,251 INFO success: cron entered RUNNING state, process has stayed up for > than 1 secon\nds (startsecs)\ncon_gitlab  | 2018-06-18 16:33:14,251 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seco\nnds (startsecs)\ncon_gitlab  | 2018-06-18 16:33:14,251 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 secon\nds (startsecs)\ncon_gitlab  | Missing Rails.application.secrets.openid_connect_signing_key for production environment. The secret will b\ne generated and stored in config/secrets.yml.\ncon_gitlab  | Rails.application.secrets.openid_connect_signing_key was blank, but the literal value in config/secrets.ym\nl was:\ncon_gitlab  |   -----BEGIN RSA PRIVATE KEY-----\ncon_gitlab  | MIIEpAIBAAKCAQEAyZhwkj6b+i/QqqJJ44kuaS36O3GFtMjqBhXidLzDM0nHNkx4\ncon_gitlab  | 5UmqoiSwGsoA6GqM3B49dn9vbgiC/g8lYpyOmOBQnldSeRRovzC0m7WfD48YxExh\ncon_gitlab  | FyQPBdnl93pX1Bo0KiCJDHX11S0jfV/NAuW7bjk7uvoxiXKxGhuGxqHT2l+k5N6E\n...\n...\ncon_gitlab  | -----END RSA PRIVATE KEY-----\ncon_gitlab  |\ncon_gitlab  |\ncon_gitlab  | This probably isn't the expected value for this secret. To keep using a literal Erb string in config/secre\nts.yml, replace <% with <%%.\ncon_gitlab exited with code 1. \n",
    "modInfo": "why is sameersbn/docker-gitlab image not updated?\n. ",
    "handcode": "I switched from mysql to maria a while ago. Mainly to get rid of the annoying index length errors. Since then I have no more problems with the gitlab updates.\nUpgraded from 10.8.3-1 to 11.0.1 without problem.\nYou wrote that you can ping the mysql, but does a mysql connect from the gitlab container work?\n. JFYI: currently used Version is 10.2.16-MariaDB-10.2.16+maria~jessie, not dockerized, no special config . I've just asked, because error 111 means  'connection refused'  which indicates network error, eg. because mysql is not reachable under this ip/port/hostname (at this time) or server refused connection from this client IP, or NAT or Docker Network problems, or....\nthus i would begin to test/debug connection from gitlab to mysql on the lowest possible level.. ",
    "simonswine": "Having similar issues with 11.0.2. Seems like project_authorizations is messed up (not using this docker images). Haven't found an upstream issue yet :slightly_frowning_face: \nThe mysql server crases with:\n```\nE  2018-07-03T14:58:34.205291Z 11 [ERROR] Table ./gitlab_gitlab/project_authorizations has no primary key in InnoDB data dictionary, but has one in MySQL! If you created the table with a MySQL version < 3.23.54 and did not define a primary key, but defined a unique key with all non-NULL columns, then MySQL internally treats that key as the primary key. You can fix this error by dump + DROP + CREATE + reimport of the table.\nE  2018-07-03T14:58:34.206260Z 11 [Warning] Table ./gitlab_gitlab/project_authorizations key_used_on_scan is 0 even though there is no primary key inside InnoDB.\nE  2018-07-03T14:58:34.206830Z 11 [ERROR] Index index_project_authorizations_on_project_id of gitlab_gitlab/project_authorizations has 2 columns unique inside InnoDB, but MySQL is asking statistics for 3 columns. Have you mixed up .frm files from different installations? Please refer to http://dev.mysql.com/doc/refman/5.7/en/innodb-troubleshooting.html for how to resolve the issue. \n````\n. I recovered the table to the pre-upgrade state from the backup. This seemed to have fixed it. @npotier I had a full dump of the project_authorizations, I basically created the table project_authorizations with the migrations how it should look like in 11.0.x (cf. https://github.com/gitlabhq/gitlabhq/blob/11-0-stable/db/schema.rb#L1482) and took the INSERT commands out of the backup and executed them.\nI think I needed to clear the cache gitlab-rake cache:clear to make the activity appear afterwards\n. ",
    "bradleydwyer": "I'm seeing this too. Did you discover the cause?\nEDIT: Ah, I think it was just that I followed some invalid older instructions which turned off too much of the system (instead of just shutting down unicorn/sidekiq).. The instructions from https://docs.gitlab.com/ce/raketasks/backup_restore.html#restore-for-omnibus-installations\nI had previously done a gitlab-ctl stop which takes down everything and the gRPC error is obvious in that case.\nIn the end the restore process is:\nsudo gitlab-ctl stop unicorn\nsudo gitlab-ctl stop sidekiq\nsudo gitlab-rake gitlab:backup:restore BACKUP=<your backup file in /var/opt/gitlab/backups>\n\nAnd manually copying over gitlab-secrets.json in /etc/gitlab if required (which I did).\nTo be fair, I'm doing all this in a Docker container on Kubernetes hosted on GKE, so I'm not actually using the artefacts of this repo, but the process should be the same/very similar. I launched the new Gitlab instance in a new container/pod and connected to that pod and executed the above commands after copying my backup to /var/opt/gitlab/backups.. ",
    "scheiblr": "so, how did you do it? could you please give an example of the commands?. ",
    "serenader2014": "I'm having the same issue, follow the backup/restore guide in this project's README always throw the GRPC::Unavailable: 14:Connect Failed error(Gitlab version 11.0.1 and 11.0.3 both have this problem). After some research, I found a way to fix this.\nThe error is because of some service is not running when you're doing backup or restore, so to fix the problem, just make sure your gitlab is fully running when you are doing backup or restore.\nFor me, the procedure is:\n\nStarting the gitlab container\nEnter the gitlab's bash shell\nExecute /sbin/entrypoint.sh app:rake gitlab:backup:restore to restore a backup\nWhen restore finish, just restart gitlab container, and all is done.\n\nFor backup procedure, simply execute /sbin/entrypoint.sh app:rake gitlab:backup:create command when you're in gitlab container's shell.. ",
    "thomaskr": "The problem seems to be caused by a new version of redis that runs in protected mode.\nTry to add --protected-mode no to the command line. For example:\nservices:\n  redis:\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning --protected-mode no\nThis solved the problem for me.. ",
    "zifeo": "For the moment, you can fix redis to v3 (see https://github.com/sameersbn/docker-gitlab/pull/1667).. ",
    "rozpuszczalny": "I'm also intrested in this. ",
    "JoeOrtiz": "Could this be allowed in? This is something we definitely need!\nThanks!. ",
    "Leopere": "I've tried on a dedicated server that has 16 gigs of ram and 16 gigs of swap.  I've tried my configuration via docker compose and I've tried just running the commands shown in the README and configuring what's supposed to be configured by recommendation of the Quick Start all to no avail.  This container looks like the best/most complete and I need it to be working by end of day tomorrow for a talk I'm giving.  Is there any chance that someone can explain why this doesn't work out of the box at all?  \nI also tried it on an OS X machine with 32 gigs of ram also with no success.. @keyj  I'm not sure where to find docker-compose.override.yml but I've made the change and I'm still getting the following.\n_1      | 2018-07-22 23:03:26,381 WARN Included extra file \"/etc/supervisor/conf.d/sidekiq.conf\" during parsing\ngitlab_1      | 2018-07-22 23:03:26,381 WARN Included extra file \"/etc/supervisor/conf.d/sshd.conf\" during parsing\ngitlab_1      | 2018-07-22 23:03:26,381 WARN Included extra file \"/etc/supervisor/conf.d/unicorn.conf\" during parsing\ngitlab_1      | 2018-07-22 23:03:26,392 INFO RPC interface 'supervisor' initialized\ngitlab_1      | 2018-07-22 23:03:26,392 CRIT Server 'unix_http_server' running without any HTTP authentication checking\ngitlab_1      | 2018-07-22 23:03:26,392 INFO supervisord started with pid 558\ngitlab_1      | 2018-07-22 23:03:27,395 INFO spawned: 'gitaly' with pid 575\ngitlab_1      | 2018-07-22 23:03:27,397 INFO spawned: 'sidekiq' with pid 576\ngitlab_1      | 2018-07-22 23:03:27,399 INFO spawned: 'unicorn' with pid 577\ngitlab_1      | 2018-07-22 23:03:27,401 INFO spawned: 'gitlab-workhorse' with pid 578\ngitlab_1      | 2018-07-22 23:03:27,403 INFO spawned: 'cron' with pid 583\ngitlab_1      | 2018-07-22 23:03:27,405 INFO spawned: 'nginx' with pid 584\ngitlab_1      | 2018-07-22 23:03:27,407 INFO spawned: 'sshd' with pid 587\ngitlab_1      | 2018-07-22 23:03:28,458 INFO success: gitaly entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-07-22 23:03:28,458 INFO success: sidekiq entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-07-22 23:03:28,458 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-07-22 23:03:28,458 INFO success: gitlab-workhorse entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-07-22 23:03:28,458 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-07-22 23:03:28,458 INFO success: nginx entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-07-22 23:03:28,458 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-07-22 23:03:28,548 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1      | 2018-07-22 23:03:28,558 INFO spawned: 'unicorn' with pid 619\ngitlab_1      | 2018-07-22 23:03:29,560 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-07-22 23:03:30,189 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1      | 2018-07-22 23:03:31,192 INFO spawned: 'unicorn' with pid 701\ngitlab_1      | 2018-07-22 23:03:32,170 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1      | 2018-07-22 23:03:33,173 INFO spawned: 'unicorn' with pid 704\ngitlab_1      | 2018-07-22 23:03:34,142 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1      | 2018-07-22 23:03:36,146 INFO spawned: 'unicorn' with pid 707\ngitlab_1      | 2018-07-22 23:03:37,151 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-07-22 23:03:37,209 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1      | 2018-07-22 23:03:38,212 INFO spawned: 'unicorn' with pid 710\ngitlab_1      | 2018-07-22 23:03:39,214 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-07-22 23:03:39,366 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1      | 2018-07-22 23:03:40,369 INFO spawned: 'unicorn' with pid 713\ngitlab_1      | 2018-07-22 23:03:41,372 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-07-22 23:03:41,377 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1      | 2018-07-22 23:03:42,381 INFO spawned: 'unicorn' with pid 716\ngitlab_1      | 2018-07-22 23:03:43,367 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1      | 2018-07-22 23:03:44,371 INFO spawned: 'unicorn' with pid 725\ngitlab_1      | 2018-07-22 23:03:45,373 INFO success: unicorn entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\ngitlab_1      | 2018-07-22 23:03:45,381 INFO exited: unicorn (exit status 1; not expected)\ngitlab_1      | 2018-07-22 23:03:46,384 INFO spawned: 'unicorn' with pid 728\nI'm attempting to execute with the following docker-compose.yml\n```\nversion: \"2\"\nnetworks:\n  traefik:\n    external: true\nservices:\n\nRedis Container\n\nredisio:\n    image: 'sameersbn/redis:latest'\n    restart: always\n    labels:\n      - traefik.enable=false\n    command:\n    - --loglevel warning\n    - --protected-mode no\n    volumes:\n    - ./data/redis:/var/lib/redis:Z\n    expose:\n      - '6379'\n    networks:\n      traefik:\n        ipv4_address: 10.5.0.62\n\nPostgres Container\n\npostgresql:\n    image: postgres:alpine\n    restart: always\n    environment:\n      POSTGRES_PASSWORD: REDACTED\n      ## Might only work with the sameersbn postgres container.\n      DB_EXTENSION: \"pg_trgm\"\n    volumes:\n      - ./data/db:/var/lib/postgresql/data\n    labels:\n      - traefik.enable=false\n    networks:\n      traefik:\n        ipv4_address: 10.5.0.61\n\nGitLab\n\ngitlab:\n    ## Something other than this\n    ## https://github.com/sameersbn/docker-gitlab/blob/master/docker-compose.yml\n    ## Documentation\n    ## https://hub.docker.com/r/sameersbn/gitlab/\n    image: sameersbn/gitlab:11.0.3\n    depends_on:\n      - redisio\n      - postgresql\n    restart: always\n    labels:\n      # https://docs.traefik.io/user-guide/docker-and-lets-encrypt/\n      - \"traefik.gitlab.backend=gitlab\"\n      - \"traefik.registry.backend=registry\"\n      - \"traefik.docker.network=traefik\"\n      - \"traefik.gitlab.frontend.rule=Host:gitlab.REDACTED\"\n      - \"traefik.registry.frontend.rule=Host:registry.REDACTED\"\n      - \"traefik.gitlab.expose=true\"\n      - \"traefik.registry.expose=true\"\n      - \"traefik.gitlab.port=80\"\n      - \"traefik.registry.port=8181\"\n      ## An example I pulled from a github issue somewhere.\n      # - 'traefik.s1.frontend.rule=Host:s1.mydomain.org'\n      # - \"traefik.s1.port=80\"\n      # - 'traefik.s2.frontend.rule=Host:s2.mydomain.org'\n      # - \"traefik.s2.port=8081\"\n    # links:\n    #   - 'gitlab-postgresql:postgresql'\n    #   - 'gitlab-redis:redisio'\n    expose:\n      ## Expose for Traefik\n      - '80'\n      - '8181'\n    ports:\n      ## Port bind for git\n      - '10022:22'\n    networks:\n      traefik:\n        ipv4_address: 10.5.0.60\n    environment:\n      - DEBUG=true\n  - DB_ADAPTER=postgresql\n  - DB_HOST=postgresql\n  - DB_PORT=5432\n  - DB_USER=postgres\n  - DB_PASS=REDACTED\n  - DB_NAME=postgres\n\n  - REDIS_HOST=redisio\n  - REDIS_PORT=6379\n\n  - TZ=America/Toronto\n  - GITLAB_TIMEZONE=Toronto\n\n  - GITLAB_HTTPS=false\n  - SSL_SELF_SIGNED=false\n\n  - GITLAB_HOST=localhost\n  - GITLAB_PORT=443\n  - GITLAB_SSH_PORT=10022\n  - GITLAB_RELATIVE_URL_ROOT=\n  - GITLAB_SECRETS_DB_KEY_BASE=REDACTED\n  - GITLAB_SECRETS_SECRET_KEY_BASE=REDACTED\n  - GITLAB_SECRETS_OTP_KEY_BASE=REDACTED\n\n  - GITLAB_ROOT_PASSWORD=\n  - GITLAB_ROOT_EMAIL=colin@web.fund\n\n  - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n  - GITLAB_NOTIFY_PUSHER=false\n\n  - GITLAB_EMAIL=gitlab@gitlab.REDACTED\n  - GITLAB_EMAIL_REPLY_TO=gitlab@gitlab.REDACTED\n  - GITLAB_INCOMING_EMAIL_ADDRESS='gitlab+%{key}@gitlab.REDACTED'\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n\n  - SMTP_ENABLED=false\n  - SMTP_DOMAIN=REDACTED\n  - SMTP_HOST=REDACTED\n  - SMTP_PORT=587\n  - SMTP_USER=gitlab@gitlab.REDACTED\n  - SMTP_PASS=REDACTED\n  - SMTP_STARTTLS=true\n  - SMTP_AUTHENTICATION=login\n\n  - IMAP_ENABLED=false\n  - IMAP_HOST=REDACTED\n  - IMAP_PORT=993\n  - IMAP_USER=mailer@gitlab.REDACTED\n  - IMAP_PASS=REDACTED\n  - IMAP_SSL=true\n  - IMAP_STARTTLS=false\n\n  - OAUTH_ENABLED=false\nvolumes:\n  - './data/gitlab:/home/git/data'\n\n```. @keyj thanks for enlightening me with the new docker-compose.override.yml feature I don't entirely plan on leaving it as a fully vanilla configuration and want to go something a bit more like this direction if possible.  However, I can't seem to get it to a point where its content with what I have.. Going with the method that @keyj  posted I've managed to get the baseline working.  I guess at this point the next step is to spam the crap out of the overrides instead of making my own from scratch unless someone can see what I'm missing in mine and suggest an edit or two.. ",
    "sligokid": "@chamunks I had to make the following changes to get around this issue.\n`\n12:29 $ git diff\ndiff --git a/docker-compose.yml b/docker-compose.yml\nindex d180dfe..dd7b7db 100644\n--- a/docker-compose.yml\n+++ b/docker-compose.yml\n@@ -5,7 +5,7 @@ services:\n     restart: always\n     image: sameersbn/redis:latest\n     command:\n-    - --loglevel warning\n+    - --loglevel warning --protected-mode no\n     volumes:\n     - /srv/docker/gitlab/redis:/var/lib/redis:Z\n@@ -22,7 +22,7 @@ services:\ngitlab:\n     restart: always\n-    image: sameersbn/gitlab:11.0.3\n+    image: sameersbn/gitlab:10.7.4\n     depends_on:\n     - redis\n     - postgresql\n\u2714 ~/git/docker-gitlab [master|\u271a 1]\n`. ",
    "keyj": "+1 for this solution.\nIn docker-compose.override.yml I changed the REDIS to this:\nyaml\nredis:\n    restart: always\n    image: sameersbn/redis:latest\n    command:\n    - --loglevel warning\n    - --protected-mode no\n    volumes:\n    - /srv/docker/gitlab/redis:/var/lib/redis:Z\nThe change is in \"protected-mode no\".. ",
    "weisjohn": "@keyj I tried this via docker run, but gitlab still crashes:\ndocker run --name gitlab-redis --rm -d \\\n        --volume $(pwd)/data/redis:/var/lib/redis \\\n        -e --protected-mode=no \\\n        sameersbn/redis:latest\nany ideas?. It looks like the best fix is to move back from redis 4 to redis 3:\nhttps://github.com/sameersbn/docker-gitlab/pull/1667. ",
    "sayi65": "@sameersbn Thank you for you comment. i will close this. my ip was wrong.. ",
    "tredence123": "The same configuration am using it for redmine and moodle. These were working but getting problem for the Gitlab. Thanks @geberl it worked !! \ud83d\udc4d . ",
    "geberl": "You have space characters between the equal sign and the values.. This might be the Redis 4.0.9 problem of last week. Try fixing the version to image: sameersbn/redis:4.0.9-1 like in https://github.com/sameersbn/docker-gitlab/blob/master/docker-compose.yml.. The corresponding nginx config value is called client_max_body_size, but it's set to 0 (meaning disabled) everywhere in this repo. Where do you upload to?. Tag doesn't exist yet on https://hub.docker.com/r/sameersbn/gitlab/tags/. I assume sameersbn/gitlab:latest is v11.6.3 though, since it has been built 9h ago (vs 2 days ago for v.11.6.2).. Interesting. Same issue as for the last version? https://github.com/sameersbn/docker-gitlab/issues/1837. As I see it there is GITLAB_BACKUP_SKIP, that takes the same values as described in your documentation link.. ",
    "theWeird": "Well, I ran some maintenance tasks like gitlab:git:fsck and now I have a different error.\nThe backup process dumps the database but fails when dumping the first repository:  \nDumping repositories ...\n * iplay/website-iplay ... rake aborted!\nGRPC::Unavailable: 14:Connect Failed\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:31:in `check_status'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:180:in `attach_status_results_and_complete_call'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:372:in `request_response'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/client_stub.rb:178:in `block in request_response'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/interceptors.rb:170:in `intercept!'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/client_stub.rb:177:in `request_response'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/service.rb:170:in `block (3 levels) in rpc_stub_class'\n/home/git/gitlab/lib/gitlab/gitaly_client.rb:134:in `call'\n/home/git/gitlab/lib/gitlab/gitaly_client/repository_service.rb:17:in `exists?'\n/home/git/gitlab/lib/gitlab/git/repository.rb:147:in `exists?'\n/home/git/gitlab/app/models/repository.rb:499:in `exists?'\n/home/git/gitlab/lib/gitlab/repository_cache_adapter.rb:17:in `block (2 levels) in cache_method'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:299:in `block in fetch'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:585:in `block in save_block_result_to_cache'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:547:in `block in instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activesupport-4.2.10/lib/active_support/notifications.rb:166:in `instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:547:in `instrument'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:584:in `save_block_result_to_cache'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activesupport-4.2.10/lib/active_support/cache.rb:299:in `fetch'\n/home/git/gitlab/lib/gitlab/repository_cache.rb:22:in `fetch'\n/home/git/gitlab/lib/gitlab/repository_cache_adapter.rb:59:in `cache_method_output'\n/home/git/gitlab/lib/gitlab/repository_cache_adapter.rb:16:in `block in cache_method'\n/home/git/gitlab/app/models/repository.rb:507:in `empty?'\n/home/git/gitlab/app/models/repository.rb:354:in `expire_emptiness_caches'\n/home/git/gitlab/lib/backup/repository.rb:272:in `empty_repo?'\n/home/git/gitlab/lib/backup/repository.rb:26:in `block in dump'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `block (2 levels) in find_each'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `each'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `block in find_each'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:124:in `find_in_batches'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:50:in `find_each'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/activerecord-4.2.10/lib/active_record/querying.rb:9:in `find_each'\n/home/git/gitlab/lib/backup/repository.rb:17:in `dump'\n/home/git/gitlab/lib/tasks/gitlab/backup.rake:80:in `block (4 levels) in <top (required)>'\n/home/git/gitlab/lib/tasks/gitlab/backup.rake:11:in `block (3 levels) in <top (required)>'\n/home/git/gitlab/vendor/bundle/ruby/2.4.0/gems/rake-12.3.1/exe/rake:27:in `<top (required)>'\nTasks: TOP => gitlab:backup:repo:create\n(See full trace by running task with --trace). Maybe this is related:\nJust tried to delete this first repository, it's an old abandoned project anyway ...\nI can see an entry for an failed system hook in the background jobs table:\n| N\u00e4chster Versuch | Anzahl der Versuche | Warteschlange | Job | Argumente | Fehler\n-- | -- | -- | -- | -- | -- | --\n\u00a0 | gerade eben | 1 | web_hook | WebHookWorker | 2, {\"event_name\"=>\"project_destroy\",  \"created_at\"=>\"2013-10-17T00:50:42Z\",  \"updated_at\"=>\"2018-07-28T13:08:11Z\", \"name\"=>\"Weird Empire  Homepage\", \"path\"=>\"website-weirdempire\",  \"path_with_namespace\"=>\"iplay/website-weirdempire\",  \"project_id\"=>6, \"owner_name\"=>\"iPLAY\", \"owner_email\"=>\"\",  \"project_visibility\"=>\"private\"}, \"system_hooks\" | Errno::EADDRNOTAVAIL: Failed to open TCP connection  to localhost:11180 (Cannot assign requested address - connect(2) for  \"localhost\" port 11180)\n. That work for me. Thank you.. ",
    "gcelet": "Hi,\nI'm running Gitlab CE on Postgresql 10 on Docker using sameersbn/gitlab for two weeks now.\nI used to run on Postgresql 9.6. \nI upgraded GitLab CE to the last version at the time being (11.0.2). \nThen i upgraded Postgresql from 9.6 to 10: it's worked perfectly.\nBut i experienced a problem during upgrade from 11.0.2 to 11.1.0. \nIt seems that Rails 4 and Postgresql 10 doesn't work together during sql migration: it's the problem that occurred to me.\nI restored a backup and I'm staying for the moment on 11.0.2.\nSee these issues:\nhttps://gitlab.com/gitlab-org/omnibus-gitlab/issues/2865\nhttps://gitlab.com/gitlab-org/gitlab-ce/issues/14286\nThere are a fix possible that i didn't try:\nhttps://github.com/rails/rails/issues/28780#issuecomment-354868174\nMy two cents.. ",
    "stkac": "hi @geberl, yes fixed using: sameersbn/redis:4.0.9-1\nthanks for your time :)\n. ",
    "lchigami": "Resolved!\nThe problem was how the Gitlab was accessing the Registry internal API URL.\nChanged\n- GITLAB_REGISTRY_API_URL=https://registry:5000\nto\n- GITLAB_REGISTRY_API_URL=https://gitlab.abc.def.com:5000. ",
    "kancharla-sandeep": "\nResolved!\nThe problem was how the Gitlab was accessing the Registry internal API URL.\nChanged\n- GITLAB_REGISTRY_API_URL=https://registry:5000\nto\n- GITLAB_REGISTRY_API_URL=https://gitlab.abc.def.com:5000\n\nwhere did you modify your ngnix config\n. ",
    "kev-landry": "thank you @froque . ",
    "nightcoding": "I think the whole GITLAB_BACKUP* variables aren't interpreted. We changed the GITLAB_BACKUP_EXPIRY to 3 days, but even after restarting the container, it still backs up 7 days.. ",
    "GraysMile": "l got where problem is.. ",
    "herrmannpchw": "What was your problem? I updated gitlab and unicorn begin to exit.... ",
    "Kachalov": "The same problem. It's because of broken hooks. Repairing hooks works for me:\ndocker-compose exec gitlab sudo -HEu git bundle exec rake gitlab:shell:create_hooks. ",
    "Wooden-Robot": "I have the same problem.. @zhijiansd \nI solve it with these configuration in docker-compose.yml:\n- SMTP_ENABLED=true\n    - SMTP_DOMAIN=exmail.qq.com\n    - SMTP_HOST=smtp.exmail.qq.com\n    - SMTP_PORT=465\n    - SMTP_USER=xxx@xxx.xxx\n    - SMTP_PASS=password\n    - SMTP_STARTTLS=true\n    - SMTP_TLS=true\n    - SMTP_AUTHENTICATION=login\nThe most important step is that add - SMTP_TLS=true.. ",
    "zhijiansd": "@Wooden-Robot Thanks, I tested a lot of variables at the time, but it didn't work. Later I used the gitlab.rb file to fix this problem.. ",
    "momo2366": "@Wooden-Robot\nThanks,I missed the SMTP_TLS environment. ",
    "laqiguy": "Same problem. pls need fix. \u00a0\u00a0\u2206\n\u2206   \u2206. ",
    "Chegevarich": "Same. Same. ",
    "S-Mak1": "+. +. ",
    "Uporaba1": "+. +. @xasx  Hi! I tried your method 1) i used command docker exec -ti (id container) bash for access to docker container 2)found gitaly-ssh file 3)used the command ln -s (file gitaly-ssh directory) / and restart docker container. Your method did not work.. @xasx  Hi! I tried your method 1) i used command docker exec -ti (id container) bash for access to docker container 2)found gitaly-ssh file 3)used the command ln -s (file gitaly-ssh directory) / and restart docker container. Your method did not work.. @xasx After the ln -s command and reboot docker, the rebase didn't work. No i didn't see error message in the log files. . @xasx After the ln -s command and reboot docker, the rebase didn't work. No i didn't see error message in the log files. . @xasx in gitlab issue i see this:\n\n. @xasx in gitlab issue i see this:\n\n. ",
    "arian": "We're using 11.2.3  and still get:\n```\nSeptember 04, 2018 12:28 -> INFO -> MergeRequests::RebaseService info (symbaloo/main!1487): rebase started\nSeptember 04, 2018 12:28 -> ERROR -> MergeRequests::RebaseService error (symbaloo/main!1487): Rebase failed. Please rebase locally\nSeptember 04, 2018 12:28 -> ERROR -> MergeRequests::RebaseService error (symbaloo/main!1487): /gitaly-ssh upload-pack: 1: /gitaly-ssh upload-pack: /gitaly-ssh: not found\nfatal: Could not read from remote repository.\nPlease make sure you have the correct access rights\nand the repository exists.\n```. ",
    "MatthiasHertel": "\n\nwhat i have do to upgrade to 11.2.3 ?. \n\nwhat i have do to upgrade to 11.2.3 ?. ah ok , thanks i just was a little bit confused ... i had pulled again , and rebuilded it ... now it works, i am on the 11.2.3 version. \n. ah ok , thanks i just was a little bit confused ... i had pulled again , and rebuilded it ... now it works, i am on the 11.2.3 version. \n. i think you are right ...\nthere are some build errors on docker hub.\ne.g. v11.4.7\nhttps://hub.docker.com/r/sameersbn/gitlab/builds/bmd6z59mx2cky8kq8kxuyza/\n\n\n. ",
    "xasx": "Test run (<5min)\n\n[opt] remove /srv/docker\n[opt] docker-compose down\ngit checkout <tag>\ndocker-compose pull\ndocker-compose up\nwait for boot, goto localhost:10080, set root password, login\ncreate group\ncreate project\ncreate README\nfork repo\ncreate branch\nedit readme\ncommit\ncreate merge request. ### Test run (<5min)\n[opt] remove /srv/docker\n[opt] docker-compose down\ngit checkout <tag>\ndocker-compose pull\ndocker-compose up\nwait for boot, goto localhost:10080, set root password, login\ncreate group\ncreate project\ncreate README\nfork repo\ncreate branch\nedit readme\ncommit\ncreate merge request. Works for 11.1.4. Works for 11.1.4. Does not work anymore for 11.2.0. Does not work anymore for 11.2.0. Logs show some\n\ngitlab_1      | 2018-09-07 16:52:58,216 INFO reaped unknown pid 1570\nWhich weren't present when it used to work. Logs show some\ngitlab_1      | 2018-09-07 16:52:58,216 INFO reaped unknown pid 1570\nWhich weren't present when it used to work. Seen another similar issue https://gitlab.com/gitlab-org/gitlab-ce/issues/50691\nIntermediate fix\ndocker-compose exec gitlab bash\nln -s $(which gitaly-ssh) /\nApparently gitaly(-ssh) needs a bit more caring :wink: \n. Seen another similar issue https://gitlab.com/gitlab-org/gitlab-ce/issues/50691\nIntermediate fix\ndocker-compose exec gitlab bash\nln -s $(which gitaly-ssh) /\nApparently gitaly(-ssh) needs a bit more caring :wink: \n. @Uporaba1 which exact problem do you encounter?\nHave you seen the specific error message in the log files, as linked in the GitLab issue?. @Uporaba1 which exact problem do you encounter?\nHave you seen the specific error message in the log files, as linked in the GitLab issue?. ",
    "malfter": "We have the same problem. We are using version 11.2.3\ngitlab_1      | 2018-09-07 13:25:39,348 INFO reaped unknown pid 26672. We have the same problem. We are using version 11.2.3\ngitlab_1      | 2018-09-07 13:25:39,348 INFO reaped unknown pid 26672. Hi @xasx, thanks for the fix. Works :-). Hi @xasx, thanks for the fix. Works :-). ",
    "MickaelCruzDB": "It's needed to install/configure Mail Server on the Synology in order to receive this stupid email ? Thanks!. It's needed to install/configure Mail Server on the Synology in order to receive this stupid email ? Thanks!. It's needed to install/configure Mail Server on the Synology in order to receive this stupid email ? Thanks!. I tried to install/configure GitLab always with docker but on my mac. Exactly the same issue...... --. I tried to install/configure GitLab always with docker but on my mac. Exactly the same issue...... --. ",
    "exodussystem": "root@gitlab-gitlab-784647b987-5g6ss:/home/git/gitlab# bin/rake gitlab:env:info RAILS_ENV=production \nSystem information\nSystem:   \nCurrent User:   root\nUsing RVM:  no\nRuby Version:   2.4.4p296\nGem Version:    2.6.14.1\nBundler Version:1.16.4\nRake Version:   12.3.1\nRedis Version:  3.0.6\nGit Version:    2.18.0\nSidekiq Version:5.1.3\nGo Version: unknown\nGitLab information\nVersion:    11.2.3\nRevision:   06cbee3\nDirectory:  /home/git/gitlab\nDB Adapter: postgresql\nURL:        https://gitlab.k8s-cluster1.local\nHTTP Clone URL: https://gitlab.k8s-cluster1.local/some-group/some-project.git\nSSH Clone URL:  git@gitlab.k8s-cluster1.local:some-group/some-project.git\nUsing LDAP: no\nUsing Omniauth: no\nGitLab Shell\nVersion:    8.1.1\nRepository storage paths:\n\ndefault:  /home/git/data/repositories\nHooks:        /home/git/gitlab-shell/hooks\nGit:      /usr/bin/git\n\nroot@gitlab-gitlab-784647b987-5g6ss:/home/git/gitlab# bin/rake gitlab:check RAILS_ENV=production\n Warning \n  You are running as user root, we hope you know what you are doing.\n  Things may work/fail for the wrong reasons.\n  For correct results you should run this as user git.\nChecking GitLab Shell ...\nGitLab Shell version >= 8.1.1 ? ... OK (8.1.1)\nRepo base directory exists?\ndefault... yes\nRepo storage directories are symlinks?\ndefault... no\nRepo paths owned by git:root, or git:git?\ndefault... yes\nRepo paths access is drwxrws---?\ndefault... yes\nhooks directories in repos are links: ... can't check, you have no projects\nRunning /home/git/gitlab-shell/bin/check\nCheck GitLab API access: OK\nRedis available via internal API: OK\nAccess to /home/git/.ssh/authorized_keys: OK\ngitlab-shell self-check successful\nChecking GitLab Shell ... Finished\nChecking Sidekiq ...\nRunning? ... no\n  Try fixing it:\n  sudo -u git -H RAILS_ENV=production bin/background_jobs start\n  For more information see:\n  doc/install/installation.md in section \"Install Init Script\"\n  see log/sidekiq.log for possible errors\n  Please fix the error above and rerun the checks.\nChecking Sidekiq ... Finished\nReply by email is disabled in config/gitlab.yml\nChecking LDAP ...\nLDAP is disabled in config/gitlab.yml\nChecking LDAP ... Finished\nChecking GitLab ...\nGit configured correctly? ... no\nTrying to fix error automatically. ...Failed\n  Try fixing it:\n  sudo -u git -H \"/usr/bin/git\" config --global core.autocrlf \"input\"\n  For more information see:\n  doc/install/installation.md in section \"GitLab\"\nDatabase config exists? ... yes\nAll migrations up? ... yes\nDatabase contains orphaned GroupMembers? ... no\nGitLab config exists? ... yes\nGitLab config up to date? ... yes\nLog directory writable? ... yes\nTmp directory writable? ... yes\nUploads directory exists? ... yes\nUploads directory has correct permissions? ... yes\nUploads directory tmp has correct permissions? ... skipped (no tmp uploads folder yet)\nInit script exists? ... yes\nInit script up-to-date? ... yes\nProjects have namespace: ... can't check, you have no projects\nRedis version >= 2.8.0? ... yes\nRuby version >= 2.3.5 ? ... yes (2.4.4)\nGit version >= 2.9.5 ? ... yes (2.18.0)\nGit user has default SSH configuration? ... yes\nActive users: ... 1\nChecking GitLab ... Finished\nroot@gitlab-gitlab-784647b987-5g6ss:/home/git/gitlab# cat log/sidekiq.log\n# Logfile created on 2018-09-23 10:46:16 +0000 by logger.rb/56815\n2018-09-23T10:47:01.832Z 596 TID-6e340 INFO: Booting Sidekiq 5.1.3 with redis options {:host=>\"gitlab-redis-master\", :port=>6379, :password=>nil, :db=>0, :namespace=>\"resque:gitlab\", :id=>\"Sidekiq-server-PID-596\", :url=>nil}\n2018-09-23T10:47:01.976Z 596 TID-6e340 INFO: Cron Jobs - add job with name: stuck_ci_jobs_worker\n2018-09-23T10:47:01.997Z 596 TID-6e340 INFO: Cron Jobs - add job with name: pipeline_schedule_worker\n2018-09-23T10:47:02.034Z 596 TID-6e340 INFO: Cron Jobs - add job with name: expire_build_artifacts_worker\n2018-09-23T10:47:02.063Z 596 TID-6e340 INFO: Cron Jobs - add job with name: repository_check_worker\n2018-09-23T10:47:02.099Z 596 TID-6e340 INFO: Cron Jobs - add job with name: admin_email_worker\n2018-09-23T10:47:02.129Z 596 TID-6e340 INFO: Cron Jobs - add job with name: repository_archive_cache_worker\n2018-09-23T10:47:02.163Z 596 TID-6e340 INFO: Cron Jobs - add job with name: pages_domain_verification_cron_worker\n2018-09-23T10:47:02.200Z 596 TID-6e340 INFO: Cron Jobs - add job with name: import_export_project_cleanup_worker\n2018-09-23T10:47:02.244Z 596 TID-6e340 INFO: Cron Jobs - add job with name: ci_archive_traces_cron_worker\n2018-09-23T10:47:02.267Z 596 TID-6e340 INFO: Cron Jobs - add job with name: requests_profiles_worker\n2018-09-23T10:47:02.296Z 596 TID-6e340 INFO: Cron Jobs - add job with name: remove_expired_members_worker\n2018-09-23T10:47:02.338Z 596 TID-6e340 INFO: Cron Jobs - add job with name: remove_expired_group_links_worker\n2018-09-23T10:47:02.373Z 596 TID-6e340 INFO: Cron Jobs - add job with name: prune_old_events_worker\n2018-09-23T10:47:02.410Z 596 TID-6e340 INFO: Cron Jobs - add job with name: trending_projects_worker\n2018-09-23T10:47:02.449Z 596 TID-6e340 INFO: Cron Jobs - add job with name: remove_unreferenced_lfs_objects_worker\n2018-09-23T10:47:02.500Z 596 TID-6e340 INFO: Cron Jobs - add job with name: stuck_import_jobs_worker\n2018-09-23T10:47:02.533Z 596 TID-6e340 INFO: Cron Jobs - add job with name: gitlab_usage_ping_worker\n2018-09-23T10:47:02.569Z 596 TID-6e340 INFO: Cron Jobs - add job with name: remove_old_web_hook_logs_worker\n2018-09-23T10:47:02.604Z 596 TID-6e340 INFO: Cron Jobs - add job with name: stuck_merge_jobs_worker\n2018-09-23T10:47:02.650Z 596 TID-6e340 INFO: Cron Jobs - add job with name: issue_due_scheduler_worker\n2018-09-23T10:47:02.689Z 596 TID-6e340 INFO: Cron Jobs - add job with name: prune_web_hook_logs_worker\n2018-09-23T10:47:46.435Z 596 TID-6e340 INFO: Running in ruby 2.4.4p296 (2018-03-28 revision 63013) [x86_64-linux-gnu]\n2018-09-23T10:47:46.435Z 596 TID-6e340 INFO: See LICENSE and the LGPL-3.0 for licensing details.\n2018-09-23T10:47:46.435Z 596 TID-6e340 INFO: Upgrade to Sidekiq Pro for more features and support: http://sidekiq.org\n2018-09-23T10:47:46.437Z 596 TID-6e340 INFO: Starting processing, hit Ctrl-C to stop\n2018-09-23T10:47:46.440Z 596 TID-6e340 INFO: Listening on queues [\"authorized_projects\", \"background_migration\", \"create_gpg_signature\", \"create_note_diff_file\", \"cronjob\", \"cronjob:admin_email\", \"cronjob:ci_archive_traces_cron\", \"cronjob:expire_build_artifacts\", \"cronjob:gitlab_usage_ping\", \"cronjob:import_export_project_cleanup\", \"cronjob:issue_due_scheduler\", \"cronjob:pages_domain_verification_cron\", \"cronjob:pipeline_schedule\", \"cronjob:prune_old_events\", \"cronjob:prune_web_hook_logs\", \"cronjob:remove_expired_group_links\", \"cronjob:remove_expired_members\", \"cronjob:remove_old_web_hook_logs\", \"cronjob:remove_unreferenced_lfs_objects\", \"cronjob:repository_archive_cache\", \"cronjob:repository_check_dispatch\", \"cronjob:requests_profiles\", \"cronjob:stuck_ci_jobs\", \"cronjob:stuck_import_jobs\", \"cronjob:stuck_merge_jobs\", \"cronjob:trending_projects\", \"default\", \"delete_diff_files\", \"delete_merged_branches\", \"delete_user\", \"detect_repository_languages\", \"email_receiver\", \"emails_on_push\", \"expire_build_instance_artifacts\", \"gcp_cluster\", \"gcp_cluster:cluster_install_app\", \"gcp_cluster:cluster_provision\", \"gcp_cluster:cluster_wait_for_app_installation\", \"gcp_cluster:cluster_wait_for_ingress_ip_address\", \"gcp_cluster:wait_for_cluster_creation\", \"git_garbage_collect\", \"github_import_advance_stage\", \"github_importer\", \"github_importer:github_import_import_diff_note\", \"github_importer:github_import_import_issue\", \"github_importer:github_import_import_lfs_object\", \"github_importer:github_import_import_note\", \"github_importer:github_import_import_pull_request\", \"github_importer:github_import_refresh_import_jid\", \"github_importer:github_import_stage_finish_import\", \"github_importer:github_import_stage_import_base_data\", \"github_importer:github_import_stage_import_issues_and_diff_notes\", \"github_importer:github_import_stage_import_lfs_objects\", \"github_importer:github_import_stage_import_notes\", \"github_importer:github_import_stage_import_pull_requests\", \"github_importer:github_import_stage_import_repository\", \"gitlab_shell\", \"group_destroy\", \"invalid_gpg_signature_update\", \"irker\", \"mail_scheduler\", \"mail_scheduler:mail_scheduler_issue_due\", \"mail_scheduler:mail_scheduler_notification_service\", \"mailers\", \"merge\", \"namespaceless_project_destroy\", \"new_issue\", \"new_merge_request\", \"new_note\", \"object_storage\", \"object_storage:object_storage_background_move\", \"object_storage:object_storage_migrate_uploads\", \"object_storage_upload\", \"pages\", \"pages_domain_verification\", \"pipeline_background\", \"pipeline_background:archive_trace\", \"pipeline_background:ci_build_trace_chunk_flush\", \"pipeline_cache\", \"pipeline_cache:expire_job_cache\", \"pipeline_cache:expire_pipeline_cache\", \"pipeline_creation\", \"pipeline_creation:create_pipeline\", \"pipeline_creation:run_pipeline_schedule\", \"pipeline_default\", \"pipeline_default:build_coverage\", \"pipeline_default:build_trace_sections\", \"pipeline_default:pipeline_metrics\", \"pipeline_default:pipeline_notification\", \"pipeline_hooks\", \"pipeline_hooks:build_hooks\", \"pipeline_hooks:pipeline_hooks\", \"pipeline_processing\", \"pipeline_processing:build_finished\", \"pipeline_processing:build_queue\", \"pipeline_processing:build_success\", \"pipeline_processing:pipeline_process\", \"pipeline_processing:pipeline_success\", \"pipeline_processing:pipeline_update\", \"pipeline_processing:stage_update\", \"pipeline_processing:update_head_pipeline_for_merge_request\", \"plugin\", \"post_receive\", \"process_commit\", \"project_cache\", \"project_destroy\", \"project_export\", \"project_migrate_hashed_storage\", \"project_service\", \"propagate_service_template\", \"reactive_caching\", \"rebase\", \"repository_check\", \"repository_check:repository_check_batch\", \"repository_check:repository_check_clear\", \"repository_check:repository_check_single_repository\", \"repository_fork\", \"repository_import\", \"repository_remove_remote\", \"repository_update_remote_mirror\", \"storage_migrator\", \"system_hook_push\", \"todos_destroyer\", \"todos_destroyer:todos_destroyer_confidential_issue\", \"todos_destroyer:todos_destroyer_entity_leave\", \"todos_destroyer:todos_destroyer_group_private\", \"todos_destroyer:todos_destroyer_private_features\", \"todos_destroyer:todos_destroyer_project_private\", \"update_merge_requests\", \"upload_checksum\", \"web_hook\"]\n2018-09-23T10:48:30.427Z 596 TID-6e340 INFO: Shutting down\n2018-09-23T10:48:30.432Z 596 TID-2qe6vk INFO: Scheduler exiting...\n2018-09-23T10:48:30.432Z 596 TID-6e340 INFO: Terminating quiet workers\n2018-09-23T10:48:30.433Z 596 TID-2bi2hw INFO: Scheduler exiting...\n2018-09-23T10:48:30.933Z 596 TID-6e340 INFO: Pausing to allow workers to finish...\n2018-09-23T10:48:32.944Z 596 TID-6e340 INFO: Bye!\n2018-09-23T10:48:59.020Z 829 TID-5g0m9 INFO: Booting Sidekiq 5.1.3 with redis options {:host=>\"gitlab-redis-master\", :port=>6379, :password=>nil, :db=>0, :namespace=>\"resque:gitlab\", :id=>\"Sidekiq-server-PID-829\", :url=>nil}\n2018-09-23T10:48:59.182Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: stuck_ci_jobs_worker\n2018-09-23T10:48:59.207Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: pipeline_schedule_worker\n2018-09-23T10:48:59.236Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: expire_build_artifacts_worker\n2018-09-23T10:48:59.262Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: repository_check_worker\n2018-09-23T10:48:59.276Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: admin_email_worker\n2018-09-23T10:48:59.300Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: repository_archive_cache_worker\n2018-09-23T10:48:59.324Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: pages_domain_verification_cron_worker\n2018-09-23T10:48:59.351Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: import_export_project_cleanup_worker\n2018-09-23T10:48:59.381Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: ci_archive_traces_cron_worker\n2018-09-23T10:48:59.412Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: requests_profiles_worker\n2018-09-23T10:48:59.436Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: remove_expired_members_worker\n2018-09-23T10:48:59.465Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: remove_expired_group_links_worker\n2018-09-23T10:48:59.492Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: prune_old_events_worker\n2018-09-23T10:48:59.517Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: trending_projects_worker\n2018-09-23T10:48:59.547Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: remove_unreferenced_lfs_objects_worker\n2018-09-23T10:48:59.575Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: stuck_import_jobs_worker\n2018-09-23T10:48:59.594Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: gitlab_usage_ping_worker\n2018-09-23T10:48:59.619Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: remove_old_web_hook_logs_worker\n2018-09-23T10:48:59.645Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: stuck_merge_jobs_worker\n2018-09-23T10:48:59.671Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: issue_due_scheduler_worker\n2018-09-23T10:48:59.706Z 829 TID-5g0m9 INFO: Cron Jobs - add job with name: prune_web_hook_logs_worker\n2018-09-23T10:49:29.144Z 829 TID-5g0m9 INFO: Running in ruby 2.4.4p296 (2018-03-28 revision 63013) [x86_64-linux-gnu]\n2018-09-23T10:49:29.144Z 829 TID-5g0m9 INFO: See LICENSE and the LGPL-3.0 for licensing details.\n2018-09-23T10:49:29.144Z 829 TID-5g0m9 INFO: Upgrade to Sidekiq Pro for more features and support: http://sidekiq.org\n2018-09-23T10:49:29.154Z 829 TID-5g0m9 INFO: Starting processing, hit Ctrl-C to stop\n2018-09-23T10:49:29.157Z 829 TID-5g0m9 INFO: Listening on queues [\"authorized_projects\", \"background_migration\", \"create_gpg_signature\", \"create_note_diff_file\", \"cronjob\", \"cronjob:admin_email\", \"cronjob:ci_archive_traces_cron\", \"cronjob:expire_build_artifacts\", \"cronjob:gitlab_usage_ping\", \"cronjob:import_export_project_cleanup\", \"cronjob:issue_due_scheduler\", \"cronjob:pages_domain_verification_cron\", \"cronjob:pipeline_schedule\", \"cronjob:prune_old_events\", \"cronjob:prune_web_hook_logs\", \"cronjob:remove_expired_group_links\", \"cronjob:remove_expired_members\", \"cronjob:remove_old_web_hook_logs\", \"cronjob:remove_unreferenced_lfs_objects\", \"cronjob:repository_archive_cache\", \"cronjob:repository_check_dispatch\", \"cronjob:requests_profiles\", \"cronjob:stuck_ci_jobs\", \"cronjob:stuck_import_jobs\", \"cronjob:stuck_merge_jobs\", \"cronjob:trending_projects\", \"default\", \"delete_diff_files\", \"delete_merged_branches\", \"delete_user\", \"detect_repository_languages\", \"email_receiver\", \"emails_on_push\", \"expire_build_instance_artifacts\", \"gcp_cluster\", \"gcp_cluster:cluster_install_app\", \"gcp_cluster:cluster_provision\", \"gcp_cluster:cluster_wait_for_app_installation\", \"gcp_cluster:cluster_wait_for_ingress_ip_address\", \"gcp_cluster:wait_for_cluster_creation\", \"git_garbage_collect\", \"github_import_advance_stage\", \"github_importer\", \"github_importer:github_import_import_diff_note\", \"github_importer:github_import_import_issue\", \"github_importer:github_import_import_lfs_object\", \"github_importer:github_import_import_note\", \"github_importer:github_import_import_pull_request\", \"github_importer:github_import_refresh_import_jid\", \"github_importer:github_import_stage_finish_import\", \"github_importer:github_import_stage_import_base_data\", \"github_importer:github_import_stage_import_issues_and_diff_notes\", \"github_importer:github_import_stage_import_lfs_objects\", \"github_importer:github_import_stage_import_notes\", \"github_importer:github_import_stage_import_pull_requests\", \"github_importer:github_import_stage_import_repository\", \"gitlab_shell\", \"group_destroy\", \"invalid_gpg_signature_update\", \"irker\", \"mail_scheduler\", \"mail_scheduler:mail_scheduler_issue_due\", \"mail_scheduler:mail_scheduler_notification_service\", \"mailers\", \"merge\", \"namespaceless_project_destroy\", \"new_issue\", \"new_merge_request\", \"new_note\", \"object_storage\", \"object_storage:object_storage_background_move\", \"object_storage:object_storage_migrate_uploads\", \"object_storage_upload\", \"pages\", \"pages_domain_verification\", \"pipeline_background\", \"pipeline_background:archive_trace\", \"pipeline_background:ci_build_trace_chunk_flush\", \"pipeline_cache\", \"pipeline_cache:expire_job_cache\", \"pipeline_cache:expire_pipeline_cache\", \"pipeline_creation\", \"pipeline_creation:create_pipeline\", \"pipeline_creation:run_pipeline_schedule\", \"pipeline_default\", \"pipeline_default:build_coverage\", \"pipeline_default:build_trace_sections\", \"pipeline_default:pipeline_metrics\", \"pipeline_default:pipeline_notification\", \"pipeline_hooks\", \"pipeline_hooks:build_hooks\", \"pipeline_hooks:pipeline_hooks\", \"pipeline_processing\", \"pipeline_processing:build_finished\", \"pipeline_processing:build_queue\", \"pipeline_processing:build_success\", \"pipeline_processing:pipeline_process\", \"pipeline_processing:pipeline_success\", \"pipeline_processing:pipeline_update\", \"pipeline_processing:stage_update\", \"pipeline_processing:update_head_pipeline_for_merge_request\", \"plugin\", \"post_receive\", \"process_commit\", \"project_cache\", \"project_destroy\", \"project_export\", \"project_migrate_hashed_storage\", \"project_service\", \"propagate_service_template\", \"reactive_caching\", \"rebase\", \"repository_check\", \"repository_check:repository_check_batch\", \"repository_check:repository_check_clear\", \"repository_check:repository_check_single_repository\", \"repository_fork\", \"repository_import\", \"repository_remove_remote\", \"repository_update_remote_mirror\", \"storage_migrator\", \"system_hook_push\", \"todos_destroyer\", \"todos_destroyer:todos_destroyer_confidential_issue\", \"todos_destroyer:todos_destroyer_entity_leave\", \"todos_destroyer:todos_destroyer_group_private\", \"todos_destroyer:todos_destroyer_private_features\", \"todos_destroyer:todos_destroyer_project_private\", \"update_merge_requests\", \"upload_checksum\", \"web_hook\"]\n2018-09-23T10:50:04.636Z 829 TID-2lvlt9 ExpireBuildArtifactsWorker JID-0aed74a7d1ab72a1b87aad0e INFO: start\n2018-09-23T10:50:04.708Z 829 TID-2lvlt9 ExpireBuildArtifactsWorker JID-0aed74a7d1ab72a1b87aad0e INFO: done: 0.072 sec\n. Found few issues when Gitlab was deployed on Kubernetes via Helm\nISSUE: \n Gitlab bootstrap took so long (few minutes) since it has to ping PostgreSQL and redis for readiness. This caused Kubernetes to restart to POD multiple times and each time the logs were different. On the first run, gitlab was setting up database.\nAfter the restart, gitlab detected existing database and started to perform database migration.\nSOLUTION:\n- Provide more time for git lab to bootstrap (livenessProbe and readinessProbe\n- Use kubernetes Init Containers to check for PostgreSQL and Redis readiness.\nThe problem was solved. I hereby close this issue.\n. ",
    "ccoenen": "I currently have a setup that runs on https only, because I need SSH for the host system (and I have no control over the firewall, so I can't just remap to a different port either).\nThis sounds like it is the perfect solution. I am hesitant to run this unless someone more familiar with gitlab or SSH has taken a closer look at it. Could someone give this a blessing or at least comment on it?. tee ... > /dev/null looks like a leftover from debugging, is that right?. ",
    "fdellabetta": "Same behaviour for 11.5.3 version. Anyone else facing the same issue?. ",
    "marisbahtins": "Yes, facing the same issue for sameersbn/gitlab:11.7.3. Checked production_json.log can see \"\"status\":500,\"error\":\"ActionView::Template::Error: Could not load compiled manifest from /home/git/gitlab/public/assets/webpack/manifest.json - have you run rake webpack:compile? (original error No such file or directory @ rb_sysopen - /home/git/gitlab/public/assets/webpack/manifest.json)\" file is missing. Run rake webpack:compile and it start to work. \nI don't think that a solution. \n. ",
    "Albenss": "I have the same issue with the 11.8.0 version, in my log there is a problem with the gitlab-workhorse.log file. I try to running gitlab with the gitlab_relative_url_root=/gitlab on the reverse-proxy named Traefik.\nRecompiling assets (relative_url in use), this could take a while...\nError: The directory named as part of the path /home/git/gitlab/log/gitlab-workhorse.log does not exist. in section 'program:gitlab-workhorse' (file: '/etc/supervisor/conf.d/gitlab-workhorse.conf')\nFor help, use /usr/bin/supervisord -h. ",
    "zer01ike": "ok, I will try it !. ",
    "feixiang622": "thankyou,  My configuration error. ",
    "bjcone": "+1\nI tried to manually run a backup (as my automated backups haven't been working for a few weeks) and got the same error;\nroot@f54f226bfefc:/var/log/gitlab# su - git\ngit@f54f226bfefc:~$ bundle exec rake gitlab:backup:create\nCould not locate Gemfile or .bundle/ directory\nAs a (potentially) related issue, my automated backups are configured to keep daily backups for the default time of 7 days. However, since upgrading to 11.3.4 on 10/10/18 I don't show any new backup files though my database is successfully backed up each day. I am currently running 11.4.0\ngit@f54f226bfefc:~$ ls -l /home/git/data/backups/\ntotal 71029489\n-rw-------  1 git  git 10393528320 Oct  4 04:12 1538626202_2018_10_04_11.1.4_gitlab_backup.tar\n-rw-------  1 git  git 10393569280 Oct  5 04:13 1538712608_2018_10_05_11.1.4_gitlab_backup.tar\n-rw-------  1 git  git 10393651200 Oct  6 04:12 1538799002_2018_10_06_11.1.4_gitlab_backup.tar\n-rw-------  1 git  git 10393640960 Oct  7 04:12 1538885400_2018_10_07_11.1.4_gitlab_backup.tar\n-rw-------  1 git  git 10393651200 Oct  8 04:13 1538971808_2018_10_08_11.1.4_gitlab_backup.tar\n-rw-------  1 git  git 10393681920 Oct  9 04:12 1539058213_2018_10_09_11.1.4_gitlab_backup.tar\n-rw-------  1 git  git 10393671680 Oct 10 04:13 1539144637_2018_10_10_11.1.4_gitlab_backup.tar\nThis is deployed in Rancher with the following env variables:\nGITLAB_BACKUP_SCHEDULE = daily \nGITLAB_BACKUP_ARCHIVE_PERMISSIONS = 0644 \nGITLAB_BACKUP_DIR = /home/git/data/backups\n. ",
    "wally666": "I have this same problem. I can not even set the external url parameter. Any changes made in /home/git/gitlab/lib/gitlab.rb are overriden after docker container restart.\nWhat is the proper way to configure this docker image?. ",
    "RobertAcksel": "@sameersbn Can you please help us with this?. ",
    "Radionz": "Hello, I have the same need.\nI need to start this container in a PaaS OpenShift that I am not the owner (I only have a namespace), I do not have the rights to start this container as root user (so it failed)\nA non-root version would be ideal.\nIn general what is the purpose of running as root if we can not doing it?. ",
    "suanziliu": "Hi @splattael ,\nWell, I see...\nThanks for your kindly help.\nPersonally I really hope it can be supported in CE sometime. :stuck_out_tongue:\nRegards,. ",
    "ElaraFX": "I met the same issue.\n. ",
    "360buyliulei": "hi be careful:\nnotice that errors in chrome's developer tools:         \n\"localhost/api/v4/pro_wikis/attachements:1\"\nthe request url is \"localhost\"  !!!! \nResolve:\n(1) edit configure file of gitlab: \n /etc/gitlab/gitlab.rb\nmodify:\nfor example:\n external_url    'http://123.112.17.155:8023' ;\n(2) execute command to reconfigure gitlab and restart server:\ngitlab-ctl reconfigure\n(2) reflush browser. > Hi\n\nFollow error occurred when i attach a file in wiki of sameersbn/gitlab:11.4.5.\n\nAnd when i checked the network with chrome's developer tools.\nI found follow errors ... Maybe the wiki pulgin has the CORS issue?\n\nIs it a bug of current version? thankfully if help me\n\nhi be careful:\nnotice that errors in chrome's developer tools:\n\"localhost/api/v4/pro_wikis/attachements:1\"\nthe request url is \"localhost\" !!!!\nResolve:\n(1) edit configure file of gitlab:\n/etc/gitlab/gitlab.rb\nmodify:\nfor example:\nexternal_url 'http://123.112.17.155:8023' ;\n(2) execute command to reconfigure gitlab and restart server:\ngitlab-ctl reconfigure\n(3) reflush browser than it is ok. ",
    "hungnt167": "\nPlease see issue #1638, which probably describes the same issue. I had issues with GitLab not being able to send out mails and was able to solve it by enabling \"less secure apps\" in Gmail. See my comment on issue 1638 what worked for me.\n\nthank you so much. i will try it. ",
    "Its-Alex": "This only appear when I use USERMAP_UID option. Yes sure, I use it with ansible to deploy on a virtualbox VM (ubuntu 18.04)\n```\nversion: '3.7'\nservices:\n  postgresql:\n    image: postgres:10-alpine\n    restart: unless-stopped\n    environment:\n      - POSTGRES_USER=gitlab\n      - POSTGRES_PASSWORD=gitlab_password\n      - POSTGRES_DB=gitlab\n    volumes:\n      - /var/lib/gitlab/postgresql:/var/lib/postgresql\ngitlab:\n    image: sameersbn/gitlab:11.4.5\n    restart: unless-stopped\n    ports:\n      - \"9922:22\"\n    environment:\n      - DEBUG=false\n      - TZ=Europe/Paris\n  - USERMAP_UID=1010\n  - USERMAP_GID=1010\n\n  - DB_ADAPTER=postgresql\n  - DB_HOST=postgresql\n  - DB_NAME=gitlab\n  - DB_USER=gitlab\n  - DB_PASS=gitlab_password\n\n  - GITLAB_SECRETS_OTP_KEY_BASE=secret\n  - GITLAB_SECRETS_DB_KEY_BASE=secret\n  - GITLAB_SECRETS_SECRET_KEY_BASE=secret\n\n  - REDIS_HOST=redis\n  - REDIS_PORT=6379\n  - GITLAB_TIMEZONE=Paris\n  - GITLAB_HOST=gitlab.example.com\n  - GITLAB_PORT=80\n  - GITLAB_SSH_PORT=22\n  - GITLAB_RELATIVE_URL_ROOT=\n\n  - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n  - GITLAB_NOTIFY_PUSHER=false\n\n  - GITLAB_BACKUP_SCHEDULE=daily\n  - GITLAB_BACKUP_TIME=01:00\n  - GITLAB_BACKUP_EXPIRY=604800\n  - GITLAB_BACKUP_DIR=/home/git/data/backups\n\n  - GITLAB_REGISTRY_ENABLED=true\n  - GITLAB_REGISTRY_HOST=registry.example.com\n  - GITLAB_REGISTRY_PORT=443\n  - GITLAB_REGISTRY_API_URL=http://registry:5000\n  - GITLAB_REGISTRY_KEY_PATH=/certs/registry.key\nvolumes:\n  - /var/lib/gitlab/data/:/home/git/data\n  - /home/git/.ssh/authorized_keys_proxy:/home/git/data/.ssh/authorized_keys_proxy\n  - /etc/ssl/private/gitlab:/certs\nnetworks:\n  - default\n  - nginx\n\nredis:\n    image: redis:4.0\n    restart: unless-stopped\n    volumes:\n      - /var/lib/gitlab/redis/:/var/lib/redis\nregistry:\n    image: registry:2.5\n    restart: unless-stopped\n    volumes:\n      - /var/lib/gitlab/registry/:/registry\n      - /etc/ssl/private/gitlab:/certs\n    environment:\n      - VIRTUAL_HOST=registry.example.com\n      - REGISTRY_LOG_LEVEL=info\n      - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry\n      - REGISTRY_AUTH_TOKEN_REALM=https://gitlab.example.com/jwt/auth\n      - REGISTRY_AUTH_TOKEN_SERVICE=container_registry\n      - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer\n      - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/registry.crt\n      - REGISTRY_STORAGE_DELETE_ENABLED=true\n    networks:\n      - default\n      - nginx\nnetworks:\n  nginx:\n    name: nginx\n```\nError happend at first startup if I erase and up again container all works fine. ",
    "mantiz": "\nBut one has to configure the path to the auth endpoint like:\nhttps://projects.example.io/auth\n\nThank you very much, you saved me from going crazy :wink: . ",
    "ma0dubois": "@GJRTimmer @CrystalMethod \nSorry for my late response.\nI have long investigated, without success: /\nSo I started to put me a gitlab with the native Docker image of gitlab, and it works today!\nIf it interests someone I can provide my docker-composer.yml with:\n- traefik\n- portainer\n- a listener of the change of the certificates let's encrypt which automatically exports the .crt and .key to bind them to the gitlab and the registry\n- a docker registry\n- gitlab-ce\n- a runner\nThanks anyway for your answers :). ",
    "dotbalo": "@stepanorda I changed GlusterFS to NFS for postgresql persistence , then postgresql is OK. Did you use gfs for postgresql persistence also?. ",
    "luv2code": "\nWhat is your impression about the new documentation ? Is it in the right direction ?\n\nI like it, and I think having an organised document site is a great idea. There is only one thing that I would change. When you click on a top level topic, I would expect it to bring up a page with all the content for the topic on it. Then in the navigation, clicking on a 2nd level topic would take you to anchors within the top level content.  That way I can scan the whole top level topic without having to click very much; but if I know the subtopic I'm looking for, I can still quickly jump to it.\nmaybe do this conditionally; because it doesn't make sense for certain large topics like guides. But for Configuration and Maintenance, I think it makes sense to combine the bottom level subtopics into one page and navigate via anchors.\nThank you.. ",
    "wally-yu": "problem solved...\nSteps for sharing:\n - Synology stop gitlab service\n - to go Synology Docker ui\n - find gitlab docker\n - modify environment variables. ",
    "xyzaxyz": "Thanks for your reply!\nYes, I have tried it some more times, but still without luck.\nI see the 11.5.4 image is now on Docker Hub - probably the 11.5.5 will come soon as you say.  \nI think this is the first release where I was letting myself notify about releases of this repository, so most likely I was not used to the delay between GitHub Release and DockerHub Release.\nWill watch and try this further and close the issue as soon as the 11.5.5 is pullable.\nEDIT:\nIt's pullable :) - gotta be more patient next time \ud83d\ude3a . ",
    "wildlee2": "Assuming my docker compose case : docker-compose run --rm gitlab app:sanitize\ndocker-compose run --rm gitlab app:sanitize\nCreating network \"gitlab_default\" with the default driver\nCreating gitlab-redis   ... done\nCreating gitlab-postgre ... done\nLoading /etc/docker-gitlab/runtime/env-defaults\nInitializing logdir...\nInitializing datadir...\nInstalling configuration templates...\nSSL Key, SSL Certificate and DHParam were not found.\nAssuming that the container is running behind a HTTPS enabled load balancer.\nConfiguring gitlab...\nConfiguring gitlab::database..\nConfiguring gitlab::redis\nConfiguring gitlab::secrets...\nConfiguring gitlab::sidekiq...\nConfiguring gitlab::gitaly...\nConfiguring gitlab::monitoring...\nConfiguring gitlab::gitlab-workhorse...\nConfiguring gitlab::unicorn...\nConfiguring gitlab::timezone...\nConfiguring gitlab::rack_attack...\nConfiguring gitlab::ci...\nConfiguring gitlab::artifacts...\nConfiguring gitlab::lfs...\nConfiguring gitlab::uploads...\nConfiguring gitlab::mattermost...\nConfiguring gitlab::project_features...\nConfiguring gitlab::smtp_settings...\nConfiguring gitlab::oauth...\nConfiguring gitlab::ldap...\nConfiguring gitlab::cron_jobs...\nConfiguring gitlab::backups...\nConfiguring gitlab::backups::schedule...\nConfiguring gitlab::registry...\nConfiguring gitlab::pages...\nConfiguring gitlab-shell...\nConfiguring nginx...\nConfiguring nginx::gitlab...\nConfiguring nginx::gitlab::hsts...\nSanitizing datadir. Please be patient...\nCreating gitlab-shell hooks...\nAnd that did not fixed the problem. . Just migrated to fresh new 11.5, and got 500 error on same project pages again. I have given up, and I am about to migrate to some other self-hosted solution - mostly likely Gitbucket. Thanks for help and I guess this can be closed, since I am the only one having these problems :] . SELinux is off, and sure - here we go:\n```\nversion: '2'\nservices:\n  redis:\n    container_name: gitlab-redis\n    restart: always\n    image: sameersbn/redis:4.0.9-1\n    command:\n    - --loglevel warning\n    volumes:\n    - /srv/docker/gitlab/redis:/var/lib/redis:Z\npostgresql:\n    container_name: gitlab-postgre\n    restart: always\n    image: sameersbn/postgresql:10\n    volumes:\n    - /srv/docker/gitlab/postgresql:/var/lib/postgresql:Z\n    environment:\n    - DB_USER=gitlab\n    - DB_PASS=###redacted###\n    - DB_NAME=gitlabhq_production\n    - DB_EXTENSION=pg_trgm\ngitlab:\n    container_name: gitlab-web\n    restart: always\n    image: sameersbn/gitlab:11.5.5\n    depends_on:\n    - redis\n    - postgresql\n    ports:\n    - \"9080:80\"\n    - \"9060:22\"\n    volumes:\n    - /srv/docker/gitlab/gitlab:/home/git/data:Z\n    environment:\n    - http_proxy=https://###redacted###\n    - https_proxy=https://###redacted###\n    - DEBUG=false\n- DB_ADAPTER=postgresql\n- DB_HOST=postgresql\n- DB_PORT=5432\n- DB_USER=gitlab\n- DB_PASS=###redacted###\n- DB_NAME=gitlabhq_production\n\n- REDIS_HOST=redis\n- REDIS_PORT=6379\n\n- TZ=Europe/Prague\n- GITLAB_TIMEZONE=Prague\n\n- GITLAB_HTTPS=true\n- SSL_SELF_SIGNED=true\n\n- GITLAB_HOST=https://###redacted###\n- GITLAB_PORT=\n- GITLAB_SSH_PORT=9060\n- GITLAB_RELATIVE_URL_ROOT=\n- GITLAB_SECRETS_DB_KEY_BASE=###redacted###\n- GITLAB_SECRETS_SECRET_KEY_BASE=###redacted###\n- GITLAB_SECRETS_OTP_KEY_BASE=###redacted###\n\n- GITLAB_ROOT_PASSWORD=###redacted###\n- GITLAB_ROOT_EMAIL=###redacted###@gmail.com\n- GITLAB_NOTIFY_ON_BROKEN_BUILDS=true\n- GITLAB_NOTIFY_PUSHER=false\n\n- GITLAB_EMAIL=\n- GITLAB_EMAIL_REPLY_TO=\n- GITLAB_INCOMING_EMAIL_ADDRESS=\n\n- GITLAB_BACKUP_SCHEDULE=daily\n- GITLAB_BACKUP_TIME=02:00\n\n- SMTP_ENABLED=true\n- SMTP_DOMAIN=smtp.gmail.com\n- SMTP_HOST=smtp.gmail.com\n- SMTP_PORT=587\n- SMTP_USER=###redacted###@gmail.com\n- SMTP_PASS=###redacted###\n- SMTP_STARTTLS=true\n- SMTP_AUTHENTICATION=login\n\n- IMAP_ENABLED=false\n- IMAP_HOST=imap.gmail.com\n- IMAP_PORT=993\n- IMAP_USER=###redacted###@gmail.com\n- IMAP_PASS=###redacted###\n- IMAP_SSL=true\n- IMAP_STARTTLS=false\n\n- OAUTH_ENABLED=false\n- OAUTH_AUTO_SIGN_IN_WITH_PROVIDER=\n- OAUTH_ALLOW_SSO=\n- OAUTH_BLOCK_AUTO_CREATED_USERS=true\n- OAUTH_AUTO_LINK_LDAP_USER=false\n- OAUTH_AUTO_LINK_SAML_USER=false\n- OAUTH_EXTERNAL_PROVIDERS=\n\n- OAUTH_CAS3_LABEL=cas3\n- OAUTH_CAS3_SERVER=\n- OAUTH_CAS3_DISABLE_SSL_VERIFICATION=false\n- OAUTH_CAS3_LOGIN_URL=/cas/login\n- OAUTH_CAS3_VALIDATE_URL=/cas/p3/serviceValidate\n- OAUTH_CAS3_LOGOUT_URL=/cas/logout\n\n- OAUTH_GOOGLE_API_KEY=\n- OAUTH_GOOGLE_APP_SECRET=\n- OAUTH_GOOGLE_RESTRICT_DOMAIN=\n\n- OAUTH_FACEBOOK_API_KEY=\n- OAUTH_FACEBOOK_APP_SECRET=\n\n- OAUTH_TWITTER_API_KEY=\n- OAUTH_TWITTER_APP_SECRET=\n\n- OAUTH_GITHUB_API_KEY=\n- OAUTH_GITHUB_APP_SECRET=\n- OAUTH_GITHUB_URL=\n- OAUTH_GITHUB_VERIFY_SSL=\n\n- OAUTH_GITLAB_API_KEY=\n- OAUTH_GITLAB_APP_SECRET=\n\n- OAUTH_BITBUCKET_API_KEY=\n- OAUTH_BITBUCKET_APP_SECRET=\n\n- OAUTH_SAML_ASSERTION_CONSUMER_SERVICE_URL=\n- OAUTH_SAML_IDP_CERT_FINGERPRINT=\n- OAUTH_SAML_IDP_SSO_TARGET_URL=\n- OAUTH_SAML_ISSUER=\n- OAUTH_SAML_LABEL=\"Our SAML Provider\"\n- OAUTH_SAML_NAME_IDENTIFIER_FORMAT=urn:oasis:names:tc:SAML:2.0:nameid-format:transient\n- OAUTH_SAML_GROUPS_ATTRIBUTE=\n- OAUTH_SAML_EXTERNAL_GROUPS=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_EMAIL=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_NAME=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_FIRST_NAME=\n- OAUTH_SAML_ATTRIBUTE_STATEMENTS_LAST_NAME=\n\n- OAUTH_CROWD_SERVER_URL=\n- OAUTH_CROWD_APP_NAME=\n- OAUTH_CROWD_APP_PASSWORD=\n\n- OAUTH_AUTH0_CLIENT_ID=\n- OAUTH_AUTH0_CLIENT_SECRET=\n- OAUTH_AUTH0_DOMAIN=\n\n- OAUTH_AZURE_API_KEY=\n- OAUTH_AZURE_API_SECRET=\n- OAUTH_AZURE_TENANT_ID\n\n```. Health check as to be be found in Admin area -> Monitoring -> Health check : No Health Problems Detected\nAlso the proxy worked before - I just leaved these proxy settings empty in docker-compose - to no use. Some projects still gives 500 on project general settings. \nI am wondering what these settings do actually - It is true I am behind nginx https proxy, and some issued might be there...\n- http_proxy=https://###redacted###\n- https_proxy=https://###redacted###\n\nI will try to test these variables a bit with different values, but I admit it just shouting in a darkness. \n. Project general settings still gives 500. . ",
    "kdlslyv": "Hi,\nActually having the same issue, but only at one of the gitlab instances I upgraded.\nThe difference between them is that the one that won't interact with gitlab-shell anymore has http_proxy set.\nI skimmed through plenty of logs and found that a health check was failing due to a Bad Request returned by the http_proxy.\nUsing docker-compose, I disabled the proxy like this:\n- http_proxy=\n- https_proxy=\n- HTTP_PROXY=\nafter down and up -d everything works completely fine again.\n. @wildlee2 \nThese environment variables don't have anything to do with your nginx reverse proxy setup. \nThey are used for client applications e.g. if you'd want to use wget in your container, wget would connect to the proxy and then fetch the file etc.\nI recommend you to unset them like I did above. Do not forget the caps'd one.\nIf you're not sure about your nginx reverse proxy setup entirely, I recommend you to check out this project https://github.com/evertramos/docker-compose-letsencrypt-nginx-proxy-companion.\nKind regards. Hmm, I only got a 503 at the repository view due to the proxy settings I had set, which was weird enough. You could try to reproduce that - although that might not help you identify the root cause.. ",
    "eshion": "you can try to set the repositories fold owner\nchown -R git:git repositories. ",
    "Prash45": "Hello everyone, \nI am seeing the same issue while restoring the gitlab in a docker container.  I have followed the official gitlab documentation for backup and restore https://docs.gitlab.com/ee/raketasks/backup_restore.html . \nWe are using CE - 11.3.5 version. I was able to backup gitlab and copied to new container location. when executed restore command with --trace option, it started unpacking and restoring some of the repositories and couple minutes later it suddely fails in the middle with GRPC OS: error. \nI am pasting the output I got below, How can I fix this issue? \nThank you all\n`* HQITD51FSWEBD/H5-EMVFunding ... [DONE]\n * Starfire/Starfire ... [DONE]\n * Harvest/SourceSafeHQDATA03 ... Error: 14:OS Error\n[Failed] restoring Harvest/SourceSafeHQDATA03 repository\n * HQITD51FSWEBD/H5-CAPS ... rake aborted!\nGRPC::Unavailable: 14:OS Error\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:31:in `check_status'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:180:in `attach_status_results_and_complete_call'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:372:in `request_response'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/client_stub.rb:178:in `block in request_response'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/interceptors.rb:170:in `intercept!'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/client_stub.rb:177:in `request_response'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/service.rb:170:in `block (3 levels) in rpc_stub_class'\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/gitaly_client.rb:134:in `call'\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/gitaly_client/namespace_service.rb:35:in `gitaly_client_call'\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/gitaly_client/namespace_service.rb:17:in `add'\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/shell.rb:280:in `add_namespace'\n/opt/gitlab/embedded/service/gitlab-rails/app/models/storage/legacy_project.rb:29:in `ensure_storage_path_exists'\n/opt/gitlab/embedded/service/gitlab-rails/app/models/project.rb:60:in `ensure_storage_path_exists'\n/opt/gitlab/embedded/service/gitlab-rails/lib/backup/repository.rb:81:in `block in restore'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `block (2 levels) in find_each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `block in find_each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:124:in `find_in_batches'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:50:in `find_each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/activerecord-4.2.10/lib/active_record/querying.rb:9:in `find_each'\n/opt/gitlab/embedded/service/gitlab-rails/lib/backup/repository.rb:78:in `restore'\n/opt/gitlab/embedded/service/gitlab-rails/lib/tasks/gitlab/backup.rake:87:in `block (4 levels) in <top (required)>'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:271:in `block in execute'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:271:in `each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:271:in `execute'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:213:in `block in invoke_with_call_chain'\n/opt/gitlab/embedded/lib/ruby/2.4.0/monitor.rb:214:in `mon_synchronize'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:193:in `invoke_with_call_chain'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:182:in `invoke'\n/opt/gitlab/embedded/service/gitlab-rails/lib/tasks/gitlab/backup.rake:60:in `block (3 levels) in <top (required)>'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:271:in `block in execute'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:271:in `each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:271:in `execute'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:213:in `block in invoke_with_call_chain'\n/opt/gitlab/embedded/lib/ruby/2.4.0/monitor.rb:214:in `mon_synchronize'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:193:in `invoke_with_call_chain'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:182:in `invoke'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:160:in `invoke_task'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:116:in `block (2 levels) in top_level'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:116:in `each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:116:in `block in top_level'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:125:in `run_with_threads'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:110:in `top_level'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:83:in `block in run'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:186:in `standard_exception_handling'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:80:in `run'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/exe/rake:27:in `<top (required)>'\n/opt/gitlab/embedded/bin/rake:23:in `load'\n/opt/gitlab/embedded/bin/rake:23:in `<top (required)>'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/cli/exec.rb:74:in `load'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/cli/exec.rb:74:in `kernel_load'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/cli/exec.rb:28:in `run'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/cli.rb:424:in `exec'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/vendor/thor/lib/thor/command.rb:27:in `run'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in `invoke_command'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/vendor/thor/lib/thor.rb:387:in `dispatch'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/cli.rb:27:in `dispatch'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/vendor/thor/lib/thor/base.rb:466:in `start'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/cli.rb:18:in `start'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/exe/bundle:30:in `block in <top (required)>'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/friendly_errors.rb:124:in `with_friendly_errors'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/exe/bundle:22:in `<top (required)>'\n/opt/gitlab/embedded/bin/bundle:23:in `load'\n/opt/gitlab/embedded/bin/bundle:23:in `<main>'\nTasks: TOP => gitlab:backup:repo:restore\n`. @nanquanyuhao @zer01ike @QuickJack \nCan anyone suggest me how to fix this issue? . @CommanderTso , I have tried as you did, stopped all services except Gitaly, other services are down. \nWhen started restore rake command, it unpacked tar and restored some of the repositories, later it failed again. now it says, GRPC Unavailable 14: Socket closed .. Gitlab container also existed automatically again. \nCan you look the below output.   Thank you\n* stargate/stargate ... Error: 14:Socket closed\n[Failed] restoring stargate/stargate repository\n * CompServicesGroup/Paycheck_Management ... rake aborted!\nGRPC::Unavailable: 14:Socket closed\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:31:in `check_status'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:180:in `attach_status_results_and_complete_call'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/active_call.rb:372:in `request_response'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/client_stub.rb:178:in `block in request_response'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/interceptors.rb:170:in `intercept!'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/client_stub.rb:177:in `request_response'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/grpc-1.11.0-x86_64-linux/src/ruby/lib/grpc/generic/service.rb:170:in `block (3 levels) in rpc_stub_class'\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/gitaly_client.rb:134:in `call'\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/gitaly_client/namespace_service.rb:35:in `gitaly_client_call'\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/gitaly_client/namespace_service.rb:17:in `add'\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/shell.rb:280:in `add_namespace'\n/opt/gitlab/embedded/service/gitlab-rails/app/models/storage/legacy_project.rb:29:in `ensure_storage_path_exists'\n/opt/gitlab/embedded/service/gitlab-rails/app/models/project.rb:60:in `ensure_storage_path_exists'\n/opt/gitlab/embedded/service/gitlab-rails/lib/backup/repository.rb:81:in `block in restore'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `block (2 levels) in find_each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:51:in `block in find_each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:124:in `find_in_batches'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/activerecord-4.2.10/lib/active_record/relation/batches.rb:50:in `find_each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/activerecord-4.2.10/lib/active_record/querying.rb:9:in `find_each'\n/opt/gitlab/embedded/service/gitlab-rails/lib/backup/repository.rb:78:in `restore'\n/opt/gitlab/embedded/service/gitlab-rails/lib/tasks/gitlab/backup.rake:87:in `block (4 levels) in <top (required)>'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:271:in `block in execute'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:271:in `each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:271:in `execute'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:213:in `block in invoke_with_call_chain'\n/opt/gitlab/embedded/lib/ruby/2.4.0/monitor.rb:214:in `mon_synchronize'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:193:in `invoke_with_call_chain'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:182:in `invoke'\n/opt/gitlab/embedded/service/gitlab-rails/lib/tasks/gitlab/backup.rake:60:in `block (3 levels) in <top (required)>'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:271:in `block in execute'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:271:in `each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:271:in `execute'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:213:in `block in invoke_with_call_chain'\n/opt/gitlab/embedded/lib/ruby/2.4.0/monitor.rb:214:in `mon_synchronize'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:193:in `invoke_with_call_chain'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/task.rb:182:in `invoke'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:160:in `invoke_task'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:116:in `block (2 levels) in top_level'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:116:in `each'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:116:in `block in top_level'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:125:in `run_with_threads'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:110:in `top_level'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:83:in `block in run'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:186:in `standard_exception_handling'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/lib/rake/application.rb:80:in `run'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/rake-12.3.1/exe/rake:27:in `<top (required)>'\n/opt/gitlab/embedded/bin/rake:23:in `load'\n/opt/gitlab/embedded/bin/rake:23:in `<top (required)>'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/cli/exec.rb:74:in `load'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/cli/exec.rb:74:in `kernel_load'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/cli/exec.rb:28:in `run'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/cli.rb:424:in `exec'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/vendor/thor/lib/thor/command.rb:27:in `run'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in `invoke_command'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/vendor/thor/lib/thor.rb:387:in `dispatch'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/cli.rb:27:in `dispatch'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/vendor/thor/lib/thor/base.rb:466:in `start'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/cli.rb:18:in `start'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/exe/bundle:30:in `block in <top (required)>'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/lib/bundler/friendly_errors.rb:124:in `with_friendly_errors'\n/opt/gitlab/embedded/lib/ruby/gems/2.4.0/gems/bundler-1.16.2/exe/bundle:22:in `<top (required)>'\n/opt/gitlab/embedded/bin/bundle:23:in `load'\n/opt/gitlab/embedded/bin/bundle:23:in `<main>'\nTasks: TOP => gitlab:backup:repo:restore\n. @CommanderTso , I have followed just as below\n\nWe have swarm set up , so I have deployed stack from host and it created container on git server. \nI have logged into git server and did \"docker ps\" and it showed gitlab container is healthy\nI did docker exec -it \"container ID\" bash\nNow I am inside the container with bash shell. \nI have checked the backup tar file at , /var/opt/gitlab/backups..and its there\nI have run gitlab-ctl stop on all services except Gitaly\nI made sure all the services are down except Gitaly with \"gitlab-ctl status\". Its good as excepted\nNow I ran restore rake command inside the container\n\nStill it did the same thing, Untar and restoring some repo's and failed with below output\nLet me know If I did anything wrong in my steps\nRestoring repositories ...\n * nguyentul/ereceipt ... Error: 14:Socket closed\n[Failed] restoring nguyentul/ereceipt repository\n * kumarip/ROBA ... rake aborted!\nGRPC::Unavailable: 14:Socket closed\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/gitaly_client.rb:134:in `call'\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/gitaly_client/namespace_service.rb:35:in `gitaly_client_call'\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/gitaly_client/namespace_service.rb:17:in `add'\n/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/shell.rb:280:in `add_namespace'\n/opt/gitlab/embedded/service/gitlab-rails/app/models/storage/legacy_project.rb:29:in `ensure_storage_path_exists'\n/opt/gitlab/embedded/service/gitlab-rails/app/models/project.rb:60:in `ensure_storage_path_exists'\n/opt/gitlab/embedded/service/gitlab-rails/lib/backup/repository.rb:81:in `block in restore'\n/opt/gitlab/embedded/service/gitlab-rails/lib/backup/repository.rb:78:in `restore'\n/opt/gitlab/embedded/service/gitlab-rails/lib/tasks/gitlab/backup.rake:87:in `block (4 levels) in <top (required)>'\n/opt/gitlab/embedded/service/gitlab-rails/lib/tasks/gitlab/backup.rake:60:in `block (3 levels) in <top (required)>'\n/opt/gitlab/embedded/bin/bundle:23:in `load'\n/opt/gitlab/embedded/bin/bundle:23:in `<main>'\nTasks: TOP => gitlab:backup:repo:restore\n(See full trace by running task with --trace)\n. @serenader2014 @bradleydwyer @scheiblr  \nCan anyone of know how to fix this?  Thank you all. > Hey @Prash45,\n\nwhich image are you currently using ? Because it seems that you use gitlab/gitlab-ce and not sameersbn/gitlab . These are different ways of using GitLab.\nsameersbn/gitlab\nIs an installation from source without omnibus. This won't have a gitlab-ctl.\ngitlab/gitlab-ce\nUses Omnibus to manage all the process inside.\n\n@solidnerd Hello, \nI am using gitlab/gitlab-ce :11.3.5 image ..Do you know how can I fix this issue. ",
    "CommanderTso": "@Prash45 I was able to work around this.  My steps were:\n\nStart up the docker-gitlab container in bash\nConnect to the container and make sure all services are off except Gitaly\nStill within that same container instance, run the restore rake command\n\nI erred on the side of making sure that GitLab itself wasn't running, since that is recommended for restoring backups in the docker-gitlab repo - so I made sure only Gitaly was running in the container.\nHope this helps.. @Prash45 I would assume that, by the time you're getting to the restore process, the container was either restarted or killed and recreated, and Gitaly was again off.\nI've updated my above steps with a more exact repro of how I did this - take another look at see if that helps?. Having now backed up and restored a couple times, here are refined instructions on how to run backup and restore.  Do not stop your usual GitLab container before doing this.\n\ndocker exec -it gitlab bash\nsupervisorctl stop all active services except gitaly\nStill from inside the container, run bundle exec rake gitlab:backup:create or bundle exec rake gitlab:backup:restore, as needed\nWhen done, turn back on all deactivated services with supervisorctl start. \n",
    "DodgeCamaro": "Works after restart GitLab. ",
    "donbowman": "@edbergavera you can work around it by kubectl exec or docker exec into the running container and running the sudo -u git -H git config --global receive.advertisePushOptions true command, once.\n. ",
    "liuqu11": "Thank you for your answer\n\u00a0\u00a0 Now I pushing java source through git\n\u00a0 What I want is to submit the java code via git and get the modified java class name and method name.\n\u00a0 I am currently using the Get the diff of a commit method in https://gitlab.cae.com/help/api/commits.md, but this method can only get the submitted java class name , can not get the submission The java method name, would you like to ask if there is a way to get the java method name?. ",
    "djelenc": "Thank you. It must be the lack of sleep.. ",
    "jpsamper2009": "We've been starting to see this error too:\nGitlab 11.7.5 with Runner 11.2. ",
    "Andrewpk": "Nice! Super quick PR for latest version of Gitlab. ",
    "fhandschuch": "and the last build has failed as well\nhttps://hub.docker.com/r/sameersbn/gitlab/builds. ",
    "saleemepoch": "If someone can tell me where Gitlab generates the log when it is Configuring gitlab.... I may be able to find out what's causing this.. Right, so I cannot seem to ping postgresql or redis from gitlab container, which makes me think that postgresql and redis are probably running on a different network.\nSo somehow I need to attach two network interfaces to gitlab, one that will connect to postgresql and redis and the other that will expose it to the outside world on a static IP.. Ok, so the fix is as follows:\nTo run Gitlab on its own external static IP address, gitlab container needs to have two network interfaces:\n1. default network that links gitlab, postgresql and redis together, and;\n2. external network that sets a static IP address to gitlab\nTo achieve this in docker-compose.yml we add something like the following to gitlab service:\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:11.8.1\n    networks:\n      default: {}\n      qnet-static-eth0-bf6875:\n        ipv4_address: 192.168.95.7\nWe then define the aforementioned networks right at the end of our docker-compose.yml like so:\nnetworks:\n  default:\n    driver: bridge\n  qnet-static-eth0-bf6875:\n    external: true\nObviously, remember to replace qnet-static-eth0-bf6875 with your own network.. Ok, so the fix is as follows:\nTo run Gitlab on its own external static IP address, gitlab container needs to have two network interfaces:\n1. default network that links gitlab, postgresql and redis together, and;\n2. external network that sets a static IP address to gitlab\nTo achieve this in docker-compose.yml we add something like the following to gitlab service:\ngitlab:\n    restart: always\n    image: sameersbn/gitlab:11.8.1\n    networks:\n      default: {}\n      qnet-static-eth0-bf6875:\n        ipv4_address: 192.168.95.7\nWe then define the aforementioned networks right at the end of our docker-compose.yml like so:\nnetworks:\n  default:\n    driver: bridge\n  qnet-static-eth0-bf6875:\n    external: true\nObviously, remember to replace qnet-static-eth0-bf6875 with your own network.. I encountered the same issue and fixed it up stopping and removing the containers altogether then rebuilding: docker-compose up -d. I encountered the same issue and fixed it up stopping and removing the containers altogether then rebuilding: docker-compose up -d. ",
    "bentwookie": "Figured it out.\n1) Using the Docker app, get a shell into the container\n2) Using File Station, place your bare repos \n3) Make sure your to-be-raked-repos are owned and grouped to git\n4) $ sudo -u git -H bundle exec rake gitlab:import:repos['/home/git/data/repositoriesToRake'] RAILS_ENV=production\n. ",
    "jgeiger": "It was actually spelled behavior a couple of lines above, so I just matched it.\n. ",
    "alexmchale": "Typo here :) \n. ",
    "tbeadle": "The reason I did it like that was to allow the user to define the variable with or without a trailing slash.  Then, after these statements, it would be sure to only end in one slash.\n. ",
    "dfeyer": "This is not required. And gitlab export the port and proxy the access to the registry.. ",
    "nextsux": "It's defined in Dockerfile. Without this adduser creates /home/$GITLAB_USER by default but everything else points to /home/$GITLAB_HOME. ",
    "nekozanmai": "I think that 'sameersbn / postgresql: 9.4.28' is wrong.. ",
    "estan": "I think it's meant to be \"if you rely on the default uid and gid\" here? (note \"gid\" instead of \"git\").. Also, capital \"F\" at the beginning of the sentence.. I'm trying to follow this guide, and I'm unsure at this step. Looking inside my omnibus Docker container, I can only find /var/opt/gitlab/gitlab-shell, not /home/git/gitlab-shell. Does this mean I should create /var/opt/gitlab/gitlab-shell/bin (and intermediate directories) on the host?. Right, I finally realized that this guide was not for the official Docker images :) Sorry for the noise.\nI noticed it when I realized the USERMAP_UID and USERMAP_GID variables were not being respected.\nI'll have to figure out if I can do something similar with the offical images, because this \"hack\" to be able to use port 22 for git is really neat (thanks!).. @IlyaSemenov: Ah, I wasn't asking about permissions though, but about the directory/file paths in the guide, which I couldn't reconcile with what I was seeing locally. But it was just me being confused and thinking this guide was for the official omnibus image.\n(The permission problem I solved by matching the git uid/gid on the host with those hard-coded in the official container, instead of chmod:ing, since we don't want to run OpenSSH with StrictModes off.). @reberinformatik Well, we were running the official omnibus Docker image from GitLab (I didn't realize that this guide was about the alternate image when I first posted here).\nWe solved the problem by simply making sure that the host system has a git/git user/group with the same UID and GID as the one used inside the official omnibus Docker container (I think that's 998 / 998).\nThen, where this guide says\nCreate the shell proxy script at `/home/git/gitlab-shell/bin/gitlab-shell`\n\nwe instead created the shell proxy script at /opt/gitlab/embedded/service/gitlab-shell/bin/gitlab-shell, since this is the path where the offical omnibus Docker container expects to find it.\nWe did not use any of the steps under ## Advanced: Use default UID/GID in the container in this guide. Since we made sure the host system UID/GID for git/git matches that of the Docker container, there was no need to. The authorized_keys file exposed by the container will have the correct permissions in the eyes of the host SSH daemon (even with StrictModes on).\n  . Note that it can be a little awkward to make sure you have a git/git user/group with UID/GID 998/998, since you may already have some other user/group with that UID/GID. We had that problem, but I went through the trouble of changing the UID/GID for that user to make 998/998 available. I thought it was worth the trouble to get GitLab up and running.. ",
    "reberinformatik": "@estan You're mentioning that you solved the permission issue without turning off StrictModes. Could you elaborate this a bit more? Probably in the context of the manual from @IlyaSemenov?\nWhich commands must be changed to achieve this?. @estan Thanks for taking the time to explain this. We also use the official omnibus Docker container. First I just skipped Advanced part in the guide. But as you mentioned, our git-user on the docker-host has a 999 id. Luckily there is no user with 998 yet. So I guess we have to try changing the UID/GID. Thanks!. ",
    "raphaelyancey": "Do you need a path (then the URL is built with OAUTH_GENERIC_SITE) or the full URL with host? Same question for authorize and token.. ",
    "lewismarshall": "@solidnerd indeed thanks good spot - pushed the fix. "
}