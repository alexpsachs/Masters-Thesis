{
    "dayg": "Lore\n. LOVE my\n. ",
    "zachleat": "go on\n. Yes, thank you for the report! I was able to successfully reproduce the issue.\n. Fixed with #5. Thanks!\n. Awesome, thanks Adam!\n. Thank you!\n. @ff4674 Are you asking for a translation?\n. Hm, no, it should work out of the box. I just tested it on iOS 7 and it works as expected. It does require touch events to work, which is why we pair with the navigation buttons at the top. I\u2019m currently charging my old Android device to retest again.\n. Seems to work fine on my Android 2.3 device and on a First-generation Kindle Fire (Android 2.3.4), as well as an Android 4.1 device in Browserstack.\n. It\u2019s worth noting that there isn\u2019t 1-1 feedback on the swipe gesture. It only toggles visibility of the columns after the swipe gesture is performed.\n. I\u2019m going to close this until we get further evidence of the issue. Maybe if you have a webcam you can record a video of yourself using the device live?\n. Just got a new Android device for testing and I can confirm that swipe does not work in Chrome and the default browser. \n. @scottjehl did some great sleuthing and I think his report here is what\u2019s causing this issue: https://github.com/scottjehl/Device-Bugs/issues/50\n. A ha, I see what you\u2019re trying to do. Yes, I think this would be useful\u2014but I\u2019d rather add some JS API options for this and not change the default behavior out of the box.\n. Related: https://github.com/filamentgroup/tablesaw/pull/33\n. This has been merged with #33. The class is tablesaw-cell-content.\n. See the purple arrows on http://filamentgroup.github.io/tablesaw/demo/sort.html:\n\n. If you look at https://github.com/filamentgroup/tablesaw/blob/master/src/tables-init.js#L26 you\u2019ll notice that tablesaw initialization depends on an enhance event. So if you want to initialize tables inserted later (after DOMContentLoaded), just trigger it on the new content like this:\n$( \"#my_new_shiny_content\" ).trigger( \"enhance.tablesaw\" );\nPlease reopen if you have any additional questions!\n. Please see the following examples that are using the yet to be released 0.1.5 version: http://filamentgroup.github.io/tablesaw/demo/ajax-init.html\nhttp://filamentgroup.github.io/tablesaw/demo/ajax-init-tbody.html\n$('#mytable').table().data( \"table\" ).refresh();\n. Icons are generated by grunticon. You don\u2019t need to generate them unless you\u2019re changing them in some way. See https://github.com/filamentgroup/tablesaw/tree/master/dist/icons\nSample usage example: http://filamentgroup.github.io/tablesaw/demo/swipe.html\nIf you want the ability to use grunticon with gulp (gulpicon?? :smile:), that issue probably belongs in the grunticon repo.\n. Please reopen if you have more questions!\n. Note the grunticon loader:\ngrunticon([\"../dist/icons/icons.data.svg.css\", \"../dist/icons/icons.data.png.css\", \"../dist/icons/icons.fallback.css\"]);\n</script>\n<noscript><link href=\"../dist/icons/icons.fallback.css\" rel=\"stylesheet\"></noscript>\nIt\u2019s relative to the HTML file.\n. Please reopen with a test case or sample markup.\nThanks!\n. With this? http://jqueryui.com/sortable/\n. Fixed with 1.0.0\n. Please see the solution presented at the end of #13, I believe it fixes your problem! Make sure your grab the latest from GitHub (or wait for the 0.1.5 release).\n. 0.1.5 is now released!\nhttps://github.com/filamentgroup/tablesaw/releases/tag/v0.1.5\n. Hm, are you using the latest version 0.1.5?\nWhen the column is numeric, the empty rows are placed at the bottom (ascending and descending).\n\n\nWhen the column is non-numeric, the empty rows are placed at the top (ascending) and the bottom (descending).\n\n. Please reopen when you answer the above question.\nThanks!\n. Can you attach a screenshot?\n. Hm, I think you\u2019re going to have to attach some source code, the screenshot\nmakes it clearer but I\u2019m not able to diagnose just from that.\nCan you create a jsbin?\nOn Thu, Jul 24, 2014 at 11:49 AM, Carlos Soares notifications@github.com\nwrote:\n\nYes, when I reduce the screensize I get the following, here it is:\n[image: img]\nhttps://camo.githubusercontent.com/2dfe8d778e2c58da075fb893b2634b59f45f8fd3/68747470733a2f2f646c2e64726f70626f7875736572636f6e74656e742e636f6d2f752f34353036383538392f7461626c657361772d6275672d73637265656e73686f742e6a7067\nThe button doesn't dissapear, what can cause this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/filamentgroup/tablesaw/issues/22#issuecomment-50045358\n.\n. Basically it\u2019s just an easy way to paste a simple example of the problem you\u2019re having.\n\nhttp://jsbin.com/help/getting-started\n. Can you have a look at http://filamentgroup.github.io/tablesaw/demo/ajax-init.html\nIt\u2019s an example of this very thing and it seems to work fine.\n. Please reopen if needed.\n. I\u2019m going to need a demo of this, can you set up a jsbin at jsbin.com?\n. Please reopen when you\u2019ve done the above.\n. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. Can you look at http://filamentgroup.github.io/tablesaw/demo/ajax-init.html ? It seems to work ok\n. Please reopen if needed.\n. Work has started here on the https://github.com/filamentgroup/tablesaw/tree/without-grunticon branch\n. Fixed with https://github.com/filamentgroup/tablesaw/releases/tag/v0.1.7\n. We\u2019ve removed the grunticon dependency. Full zip files including all dependency JS and CSS are now available from the release page: https://github.com/filamentgroup/tablesaw/releases\n\n. Fixed with #27.\n. Also https://twitter.com/LittleCoding/status/515601784338132992\n. Caption demo: http://filamentgroup.github.io/tablesaw/demo/caption.html\nAll of the other demo tables have been updated with scope attributes.\n. https://github.com/filamentgroup/tablesaw#opt-out-of-inline-labels\n. Thanks!\n. Make sure you\u2019re using proper table markup: put your <th> elements instead of <thead>. I added an error message for this very thing to tablesaw: https://github.com/filamentgroup/tablesaw/pull/42\n. Yes, I like this! I wonder if it should be the default behavior?\nThe current behavior shows a bit more content but this change makes it look a bit better.\n. Merged, thanks!\n. Thanks @muffinista!\n. Not sure when we fixed this (it was awhile ago) but it works now. The  elements are ignored when sorting.\nWorks as expected on the stock demo:\nhttp://filamentgroup.github.io/tablesaw/demo/sort.html\nThanks for reporting!\n. This should be working fine now. Note that for this to work correctly in your example, you\u2019ll want to remove the &nbsp; from all of your table whitespace. We want the rows to flow or things get funky.\n. Can you reopen with a screenshot or a jsbin demo?  Thanks!\n. Also if you use the SASS mixin you can do it without monkey-patching the CSS!\nhttps://github.com/filamentgroup/tablesaw#using-stack-only-tablesaw-scss-mixin\n. https://github.com/filamentgroup/tablesaw/tree/issue-40\n. Fixed by https://github.com/filamentgroup/tablesaw/pull/41\n. As of just now, master has been merged into shoestring\n. Thanks!\n. I\u2019m not sure I understand this ticket. Do you mean contenteditable instead of x-editable?\n. Thanks @bilias23!\nClosing as wontfix for now until more people drop in requesting this.\n. Some work has been done to improve this in #225 \nThink we\u2019re still missing rowspan stuff though so I\u2019ll leave this open for now\n. Simple support for rowspan has been added. There are still a few limitations, take note here: https://github.com/filamentgroup/tablesaw#limitations. Glad you figured something out! This is specialized enough that I don\u2019t think we\u2019ll merge anything to core for this. Thanks!\n. Wow, nice! This is an API change, however, and will require a major version bump to maintain proper semver. I know, I know, 0.x doesn\u2019t technically have to maintain semver, but I think that\u2019s silly.\n. Ok, @jefflembeck convinced me that it\u2019s time to go 1.0. Merging this.\n. Merged, thanks!\n. What\u2019s the use case for this?\n. Ah, I see!\nI\u2019m curious about this code: It will override any className on the existing cells. Why not use addClass?\n$.each(cells, function (index, value) {\n  value.className = 'sorted-column';\n});\n. Friendly ping!\n. Closing. Please reopen if you get back to this!\n. Can you attach a screenshot? It sounds like it isn\u2019t even applying the stack behavior at all, maybe a setup issue.\n. Hm, sorry I should have asked for a code sample. Can you attach your markup? or create a jsbin/codepen with the demo?\n. This ticket, unfortunately, is kind of all over the place. I\u2019m not sure that the three commenters in here are having the same issue and the original poster hasn\u2019t responded. If you need additional help, please open a new ticket with the \u201cview source\u201d from your page.\n. Have a look at https://github.com/filamentgroup/tablesaw/issues/13 and please reopen if that\u2019s not what you were looking for. Thanks!\n. Well, I hesitate to add additional options that introduce dependencies for other devs. The current solution (a postprocessor named myth) works really great because the output looks like it was handwritten. This is not true of SCSS output.\n. The only real problem I see here is if you\u2019re using SCSS to concat your libs together\u2014it isn\u2019t friendly to files with the .css extension\u2014I believe the default is to output a CSS @import statement instead of using the SCSS @import.\n. Unfortunately after a pretty substantial wait here I\u2019m going to have to go ahead and decline this request. Sorry! I don\u2019t think the maintenance justifies the benefit.. Your PR has been merged. Gonna close this for now, feel free to open new issues for specific improvements\u2014thanks!\n. I can\u2019t reproduce this with the stock swipe table. Can you attach your markup?\n. Hm, a couple of things. I\u2019ve created a branch for this issue. I checked your test files in here: https://github.com/filamentgroup/tablesaw/tree/issue-58/demo/issues\nI am still not able to reproduce the issue on my personal device: iPhone 6 running iOS 8.1.2. Are you able to recreate using the branch above?\nKeep in mind that table-layout: fixed is not recommended for global Tablesaw tables. We only use it in one place inside of the tablesaw css: to save widths only after a swipe has occurred on the swipe table.\nI will leave this open for now, but as it stands I\u2019ve been unable to reproduce this. If I can\u2019t reproduce, I can\u2019t fix.\n. @cbier Sorry I was unclear (and super late to respond here). You can use it without issue.\nHowever, I don\u2019t think we should include it in the tablesaw library by default though, as it changes how tables size to their content in ways that are unexpected if you\u2019re not aware of it.. Closing per inactivity.. Note that using the same priority for multiple columns should do what you want. https://github.com/filamentgroup/tablesaw#toggle\nPlease reopen if needed.\n. Thanks!\n. Actually, an iteration of tablesaw at one point had a fixed-sticky table headers plugin included. It\u2019s actually live now a side project I built: busyness.io. I\u2019ll leave this open to gather feedback on whether or not we should bring this back in.\n. Agree that it should be a separate project. I\u2019m going to close this since it will apply to a separate repo when/if we decide to publish that code.\n. Thanks @relaxatorium!\nThis is the main reason we provide the SCSS mixin. If you aren\u2019t using SCSS in your workflow, unfortunately some monkey patching is in your future.\nhttps://github.com/filamentgroup/tablesaw/blob/master/dist/tablesaw.css#L552\nhttps://github.com/filamentgroup/tablesaw/blob/master/dist/tablesaw.css#L568\nare the two lines to update.\nPlease reopen if you have additional questions.\n.  I only found one more issue, your css files were swapped between the test files\u2014I fixed it.\nThis is awesome\u2014thank you!\n. Config docs here: https://github.com/filamentgroup/tablesaw#advanced-configure-swipe-thresholds\nAlso, there was a problem with the touch event logic that was resulting in a forward/backward navigation getting called almost every time a touch event was triggered on the table. Should be working better now.\n. I just realized that I didn\u2019t quite do what you wanted above, since this is a global config option. I created a new ticket for this work: https://github.com/filamentgroup/tablesaw/issues/76\n. Just another dev test case for the toolbar. Moved it into a separate file.\n. @relaxatorium I merged your PR, any additions to documentation would be great!\n. I believe this fixes #71. @PattyToland feel free to reopen or create new issues if you see further improvements.\n. Thanks! I\u2019ll leave #71 open for now for the remaining work.\n. Hm, after a little bit of thought I don\u2019t think we\u2019re going to include this use case in tablesaw. It\u2019s not really core to the responsive table problem set and it could be done just as well by mixing tablesaw with another plugin that does this. (Probably also true of sorting, but we had use for that internally)\nSorry! Let me know if you find something else that does this and if you have any integration problems with it working alongside tablesaw.\n. Column toggle tables have numeric data-tablesaw-priority values that are used to perform a similar task to what you\u2019re talking about.\nHowever, swipe tables automatically show as many columns as possible for each individual breakpoint. If you have specific columns you want to always show, use data-tablesaw-priority=\"persist\".\nPlease reopen if you have additional questions!\n. A few things about your markup:\nAll the data-attributes are namespaced, so your table html should look something like this:\n<table class=\"tablesaw\" data-tablesaw-mode=\"swipe\">.\nAlso your first persistent column should look like this: <th data-tablesaw-priority=\"persist\"></th>\nI was able to get this test case to work fine: https://github.com/filamentgroup/tablesaw/blob/issue-74/demo/issues/issue-74.html\nThanks!\n. Eh, closing this for now since #67 stated it would work. This may grow up and become a real use case but not yet.\n. Related: #48\n. Simple support for rowspan has been added. There are still a few limitations, take note here: https://github.com/filamentgroup/tablesaw#limitations. Can you create a test case for this? We tend to discourage use of overflow due to spotty support on mobile.\nWorth asking: what if you removed overflow from the modal?\n. Hm, I don\u2019t think that we\u2019ll solve the overflow problem. It\u2019s not a use case that we do in our work. However, the issue of element queries is a different one, and I think valid.\n. This will be included with 1.0.2\n. *Fixes :)\nThanks!\n. Awesome, thank you! I will merge these changes to gh-pages so they show up on the demo site.\n. Please reopen with an attached test case exhibiting the issue. Thanks!\n. I was able to reproduce this. I checked in a fix which I\u2019m fairly confident about, but could use more testing. Can you give it a whirl? I don\u2019t think it\u2019s quite 100% but it\u2019s certainly a lot better.\n. Please reopen if you still have problems! Thanks\n. <table data-tablesaw-swipe-media=\"(max-width: 1280px)\" should do this.\nThis will be included with 1.0.2\n. I don\u2019t think your refresh method is quite right, is it?\n$('#mytable').table().data( \"table\" ).refresh();\nSee this example: http://filamentgroup.github.io/tablesaw/demo/ajax-init.html\n$('#mytable').table().data( \"table\" ) returns the Tablesaw instance.\nPlease reopen if that doesn\u2019t work!\n. There is now a src/i18n.json file that will inject the appropriate strings in at build time. Let me know if you have any questions.\n. If you provide a PR for this, I will look at merging it. For now though, please use a custom sort function for this functionality.\nhttps://github.com/filamentgroup/tablesaw#custom-sort-functions\n. This is great! Can you fix the one error above?\n. Thank you!\n. Thanks!\n. Unfortunately, we are unlikely to track down this ourselves, but if you research it more and find a small fix (or if Tablesaw is being obtrusive in some way) \u2014please let me know and we can work together on a PR!. Hm, so this style is being added by bootstrap? Not sure what we\u2019d fix on our end for this.\nGonna close for now, please reopen if you have additional questions/concerns.\n. I\u2019m confused, the .table class is not used in tablesaw. It seems specific to bootstrap. As such, this style should probably live in your own stylesheet, or this recommendation should be made in the bootstrap issue tracker instead. You aren\u2019t overriding a style that exists in tablesaw. Am I misunderstanding you?\n. Can you retest? I believe this was fixed in #91. Please reopen if you\u2019re still having problems. See also http://filamentgroup.github.io/tablesaw/demo/swipe-container.html\n. Good idea\u2014the change I made will actually only insert a new style element if any of the widths have changed. Thanks!\n. You can use the SCSS Mixin here: https://github.com/filamentgroup/tablesaw#using-stack-only-tablesaw-scss-mixin\n. Hey, thanks for the issue!\nTurns out the demos were mistakenly using the 2.x branch of jQuery, which is not compatible with IE8. This has been corrected. If you use 1.x jQuery, IE8 will work fine, as you can now verify at http://filamentgroup.github.io/tablesaw/demo/stack.html\nThanks!\n. Sorry I don\u2019t think I want to include this additional dependency in the core library, especially since FG doesn\u2019t use Less in our projects. I\u2019d be happy to link to a fork in the readme though, if you want to maintain one! Let me know, thanks!\n. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. Is this missing on one of the examples?\n. If you\u2019re asking if Tablesaw will support Quirks Mode, the answer is no :)\nHowever, I\u2019d accept a documentation PR for this, if someone wanted to add one. However, I\u2019m going to close this for now\u2014at the very least it\u2019s a great addition to the issue search (as @williamobrien pointed out), if someone has the same problem.\nThanks!\n. The number of columns displayed depends on the width of each column at the current container width. If you\u2019d like to play around with what\u2019s displayed you can set widths on each of the columns to get a little more control.\nNote that if you want to persist a column, they do obey the data-tablesaw-priority=\"persist\" value, per https://github.com/filamentgroup/tablesaw#user-content-swipe\nPlease reopen if you have additional questions!\n. What specifically do you mean when you say \u201crefresh the columns?\u201d What exactly do you expect to happen?\nThanks!\n. Refresh support was added for Stack tables on #211. Looks like it might still be missing on Column Toggle mode, I don\u2019t see any code using the tablesawrefresh event there. Swipe has some, though\u2014what issues are you seeing specifically?. This is fixed with https://github.com/filamentgroup/tablesaw/pull/150\nPlease retest and reopen if you\u2019re still having issues!. Merged, thanks @dz!\n. Thanks! Look for 1.0.5\n. Naw, I wouldn\u2019t use overflow for this. It\u2019s a real anti-pattern on some mobile devices.\nI don\u2019t see why you couldn\u2019t use this with pagination links. We don\u2019t have any built in styles for them, but I\u2019d certainly accept a PR that had that included.\nOtherwise, this might not be helpful to you but we did develop an extension for https://github.com/filamentgroup/fixed-sticky that worked with table headers. I put in a little bit of time to get this working on a side project (busyness.io) but Filament did not open source the code yet. The code for this is here: https://github.com/zachleat/BUSYNESS/blob/master/public/javascripts/lib/tables.stickyheaders.js if you want to try to get it working but I won\u2019t provide support for this until it\u2019s officially open sourced. :)\n. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. It might be easier (and more extensible) to modify Tablesaw to include the actual DOM element as part of the sort object. Would that help?\n. Use a.element and b.element to reference the DOM element.\n. Added better logic for this. Keep in mind that you can use data-sortable-numeric to force numeric sorting. And as of Tablesaw 2.0.2 you\u2019ll be able to use data-sortable-numeric=\"false\" to opt out of numeric sorting.\n. There was a cache stored on the checkboxes that was not invalidated when new rows have been added. Look for this fix in 2.0.2.\n. We\u2019ve removed the auto-initialization stuff from the core library and into a separate file for Tablesaw 2.0. This will allow you to init on your own when the Bootstrap tab is shown. See https://github.com/filamentgroup/tablesaw/blob/master/dist/tablesaw-init.js\nLet me know if that doesn\u2019t work for you.\n. Tablesaw 2.0 decouples the auto initialization process to give you complete control over how tablesaws are initialized (just don\u2019t include the -init.js file). This should solve this problem for you, I think, but you\u2019ll have to initialize the individual tables yourself. Please reopen if that doesn\u2019t work for you!\n. This is unlikely to be included in the project, sorry. We usually don\u2019t use complex tables like this in our client work and implementing this feature would be prohibitively complex for us. If you\u2019d like to have a go at implementation, please feel free!\n. Please reopen with a test case. Thanks!\n. Closing in lieu of #321. Please subscribe over there!. Merged, thanks @chrisschrijver!\n. https://github.com/filamentgroup/tablesaw/commit/3fadcd26789926593df9c3006c4e3070ad9e4591 shows a working example of a stack table loaded with \u201cajax\u201d\nPlease reopen with a test case showing the broken behavior.\n. Thank you so much @wgroenewold @tonycarnell @Raistlfiren and @tonvanalebeek for chiming in with a solution here! Let me know if there is something we can do in the root lib\n. This markup pattern has serious accessibility issues and thus we are unlikely to fix this in Tablesaw. Sorry!. Ack, sorry I should\u2019ve merged this a long time ago, but this change has made it in.\nThank you!\n. Hmm, sorry for the late response here, but you\u2019ve modified the dist/ files, which are generated from the build. Can you look at putting this into the src/ js?\nPlease reopen if you want to keep progressing here.. The behavior of initialization has been changed for awhile, please see https://github.com/filamentgroup/tablesaw#manual-initialization-of-tablesaw-component and reopen if that doesn\u2019t work for this use case!. Looks like this has been included since v1.0.5. Please reopen if there are additional issues!\n. I was able to successfully reproduce this.. @breaker1055 also note that 3.0 provides a data-tablesaw-no-touch attribute that accomplishes a similar task.\nNoted on https://github.com/filamentgroup/tablesaw/releases/tag/v3.0.0. Alright y\u2019all. I checked in a fix for this but I think it\u2019ll need confirmation/testing before we do the 3.0.1 release that will include this.  I did check in the new dist/ files to the GitHub repo. Can y\u2019all try it out and see if it works for you? And if not, can you attach test cases that it\u2019s failing on?\nThanks!. Hm, I doubt we\u2019ll do this, the whole point of column toggle is to allow the user to make best use of horizontal real estate, which is irrelevant to the stack table. Scrolling vertically is a much easier task. Sorry, I think I\u2019ll need more convincing here or someone else to chime in with support for this.\n. On swipe tables we provide a tablesaw-all-cols-visible class: https://github.com/filamentgroup/tablesaw#add-a-mini-map-1\n. Please reopen if this wasn\u2019t what you meant! Thanks!\n. Please reopen with a test case\u2014thanks!\n. Updated! \n\n. What do you mean by slide out nav @xyzbytes?\n. Please reopen if needed. Thanks!\n. We are unlikely to maintain framework wrappers for this\u2014sorry. If you want to create a repo for something like this though, I\u2019d be happy to link it up in the readme. Thanks!\n. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. I tried to reproduce this and couldn\u2019t. Can you reopen with a test case?\n. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. Closing in leiu of #107\n. I think this problem should be solved using a custom sort function: https://github.com/filamentgroup/tablesaw#custom-sort-functions\n. We have an ajax example here: http://filamentgroup.github.io/tablesaw/demo/ajax-init.html Can you have a look and reopen if you have additional questions? Thanks!\n. I wasn\u2019t able to get this to operate correctly with 1 persistent column and 1 swipeable column. See this:\n\nThe left/right arrow buttons had no effect.\nGonna close this for now\u2014please reopen if you\u2019d like to fix the above issue!. Oh, the above was at the demo/swipe.html file at 320px viewport width.. jQuery shouldn\u2019t be bundled with Tablesaw. If it\u2019s provided, it\u2019s only for demo purposes and is referenced separately. Let me know if you have questions.\n. We probably won\u2019t maintain framework wrappers for this, sorry.\n. Super late response: Are y\u2019all still seeing this issue?\n. Please reopen if you need additional help.. Hmmmm, while this looks great I don\u2019t think we want to add an additional dependency that introduces a JS requirement for those styles to the core library.\nSorry.\n. You can add them on a per-table-row basis. Please reopen if this doesn\u2019t meet your needs!\nhttps://github.com/filamentgroup/tablesaw#opt-out-of-inline-labels\n. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. :)\nAll updated and a few newer versions too\n\n. I assume by focus, you mean visibility?\nHave a look at data-tablesaw-priority: https://github.com/filamentgroup/tablesaw#toggle\nPlease reopen if I\u2019ve misunderstood!\n. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. There are two kind-of hidden features in Tablesaw to deal with this (available in 3.x):\n\n<tr data-tablesaw-subrow> will \u201ccombine\u201d\u00a0a row with the previous (probably what you want here for detail rows)\n<tr data-tablesaw-ignorerow> ignores rows and leaves them in place.. @unrealsolver :+1: to this from me but can you fix your whitespace? This project uses tabs. If you do that I\u2019ll resolve the conflicts\n. Merged, thanks!. Not sure what you mean. What does \u201cAuto scroll\u201d mean in this context?\n. Please reopen if you need additional help.. @shashi7896 can you reopen with a test case?\n. Y\u2019all are right. Sorry, we don\u2019t do any row resorting on initialization on purpose. We want the server side rendered markup to be sorted already. This is the most performance-happy path.\n. If you\u2019d like to make a case for why this should be added, please do!\n. Hey @PaulPd0, have you seen the stackonly demo page? It should be sufficient to get you going.\n\nSpecifically the includes:\n<link rel=\"stylesheet\" href=\"../dist/stackonly/tablesaw.stackonly.css\">\n    <script src=\"../dist/dependencies/jquery.js\"></script>\n    <script src=\"../dist/stackonly/tablesaw.stackonly.js\"></script>\n    <script src=\"../dist/tablesaw-init.js\"></script>\nand the table markup starting with:\n<table class=\"tablesaw tablesaw-stack\" data-tablesaw-mode=\"stack\">\nhttp://filamentgroup.github.io/tablesaw/demo/stackonly.html\nPlease reopen if you have additional questions!\n. This is an interesting idea. I think I like it.\nJust for @veksen\u2019s sake priority 1 is the smallest min-width. See this:\n\n. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. Yes! I\u2019ve added a bit more documentation about this here: https://github.com/filamentgroup/tablesaw#manual-initialization-of-tablesaw-components\nThanks!\n. Tablesaw only provides string sort and numeric sort. All other types should use a Custom Sort Function: https://github.com/filamentgroup/tablesaw#custom-sort-functions\nI\u2019ve updated the documentation to reflect this. Thanks!\n. You\u2019re right, the logic for this wasn\u2019t quite there.\nStarting with 2.0.4, it\u2019ll work with $(\"#myTable\").data('table').refresh()\n. Thanks!\n. Unfortunately I don\u2019t have the time to debug individual issues without a reduced test case. If you can create a reduced test case that exhibits this behavior and how it\u2019s different from the working swipe table demo, I can provide further assistance, but as of now, the demo is working fine in Safari on iOS.\n. The PR should not modify dist/ files, those files are generated by the build. Can you make the changes and reopen?. I\u2019m having trouble understanding this question. If you have jQuery on the page already, you don\u2019t need to include anything else other than tablesaw.\nLet me know if I can help more!\n. I\u2019ve updated the docs today to answer this question on the readme (the answer is no, sorry)\nhttps://github.com/filamentgroup/tablesaw#custom-sort-functions\n. Just tested Chrome on both iOS 9 and Android 5.1. The dropdowns both allow selection. Can you reopen with more specific operating system version numbers?\n. @Matthias-Hermsdorf I added some documentation about this here: https://github.com/filamentgroup/tablesaw#manual-initialization-of-tablesaw-components\n. Looks this this is fixed in the newest version.\n. Hmm, this will probably require some kind of CSV export or additional server side processing. It isn\u2019t available in the project now\u2014not sure I\u2019d want to maintain this as part of tablesaw, it seems like a separate thing. Sorry!\n. Fixed with https://github.com/filamentgroup/tablesaw/commit/0dc86538911e5bdfc814e7b465f8dcd86843db46\n. It is not.\n. Can you be more specific? Tablesaw\u2019s selectors are appropriately scoped, it doesn\u2019t bleed out to any other select elements. If a different custom dropdown is applying global select CSS, it should be filed with that repo.\n. Fixed\n. Thanks @bitmanic!\n. I\u2019m guessing this is a duplicate of #204.\n. Can you attach a test case?\n. Oh! I did see this issue when working on some of the colspan stuff for 3.0, so I think it\u2019s fixed in the new version. Please reopen if this is not the case.. Fixed.\n. Fixed.\n. Apply the tablesaw-cell-hidden class to any headers and column cells that you\u2019d like hidden on init.\n. Fixed with #210 \nThank you!\n. Can you remove the dist/ directory changes from this PR?\n. @Cybso Can you file this as a PR instead?\n. Fixed\n. This will be added for the Column Toggle mode in 3.0.1 as data-tablesaw-priority=\"0\". Thanks!. Thanks!\n. Please reopen with a test case! Thank you!\n. What table type is this?\n. Please reopen if you need additional help.. Ack, thank you!\n. #225 has been merged and is available in the early 3.0 betas\n. Try out 3.0 and let me know if this doesn\u2019t work for you!\n. I think I\u2019m going to need a test case to fix this properly. I don\u2019t quite understand what you\u2019re doing. Can you put a reduced test case that shows the problem on jsbin (or similar)? If you do this soon, it\u2019ll probably make it into 3.0. Thank you!\n. Please reopen with a test case!. @jgibson Thank you: this works great! And in so little code too! Really great work\n. I would recommend integrating something like https://github.com/Bill4Time/javascript-natural-sort with tablesaw\u2019s custom sort function feature. I\u2019ve wired up an example here: https://github.com/filamentgroup/tablesaw/blob/master/demo/sort-natural.html\n. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. I\u2019ve added some additional documentation here: https://github.com/filamentgroup/tablesaw#manual-initialization-of-tablesaw-components\nYou may want to remove the tablesaw-init.js file.\n. Please reopen if that wasn\u2019t it!\n. We have a Bare Tablesaw: https://github.com/filamentgroup/tablesaw#using-bare-tablesaw\nhttp://filamentgroup.github.io/tablesaw/demo/bare.html\nDo you think we should we move this to be the default?\n. https://github.com/filamentgroup/tablesaw#default-styles\n. Changed to $( \"table\" ).tablesaw().data( \"tablesaw\" );\n. Hey @kennynaoh I guess it comes down to what your philosophy is at cdnjs.\nHere\u2019s the dist folder for the last release, 2.0.3:\nhttps://github.com/filamentgroup/tablesaw/tree/v2.0.3/dist\ntablesaw.js: is the main JS file\ntablesaw.css: is the main CSS file\ntablesaw-init.js (optional): does autoinitialization of the tablesaw components found in the DOM\nbare/tablesaw.bare.css (optional): alternative CSS file, lighter touch on skinning\ndependencies/: do not include\nstackonly/tablesaw.stackonly.css (optional): alternative, single mode CSS file.\nstackonly/tablesaw.stackonly.js (optional): alternative, single mode JS file.\nstackonly/tablesaw.stackonly.scss: do not include\nAs far as development goes, it\u2019d be hard to recommend loading any of these files as separate requests from a CDN. But worse, tablesaw.js and tablesaw-init.js (optional) are meant to be used in tandem and we don\u2019t really package them up in a way that would be ideal to be used in a CDN. So as it is right now, the dist directory is more for use with build processes.\nJust thinking out loud, maybe it\u2019d make more sense to have a tablesaw-with-init.js.\nAnyway, that\u2019s the relevant information for 2.0.3. Version 3.0 is imminent, though and will change some of this (we\u2019re providing a jQuery-less version). I\u2019m going to bundle this with the 3.0 release to better figure out a solution for some of the issues I noted above.\n. Version 3.0 adds:\ndist/tablesaw.jquery.js: the version that works with existing jQuery present on the page\ndist/stackonly/tablesaw.stackonly.jquery.js: stack-only version that works with existing jQuery present on the page\n. Please reopen if you have additional questions.\n. Can you retest with v3.0.0-beta.1? Prior versions had an issue with Swipe table column width calculations.\nPlease reopen if you still have the problem.\n. Included with v3.0.0-beta.2\n. Fixed with https://github.com/filamentgroup/tablesaw/commit/efacdc01f5043a7623a51c52f153a5f8fdd2db45 Thanks!. I reproduced this on the Kitchen Sink demo http://filamentgroup.github.io/tablesaw/demo/kitchensink.html\n. We are unlikely to provide general Angular support here, sorry! If you have specific questions about a problem integrating into your project, please ask!. Confirmed! This isn\u2019t limited to iOS, unfortunately. I\u2019ll have a look.\n. Welp, there was an issue that would exhibit when a page had jQuery and tried to use the non-jQuery version. I pushed new examples which should work now and officially this will be included with 3.0.0-beta4\n. This will be included with 3.0.0 (non-beta).. I like this @shiftie!\nI wonder what the tablesaw() call does, though.\nI don\u2019t think Tablesaw exports a global that you can call.. Doing a quick ping on this one about the question above, please reopen if you still think it\u2019s valuable!. Sorry I didn\u2019t get to this sooner\u2014trying to clean up outdated PRs.\nPlease reopen if you\u2019d like to discuss further.. This is a valid bug and I\u2019ve added this limitation to the readme. However, your example isn\u2019t quite right. If you want labels to show up when Stack mode is activated, they\u2019d need to be headers cells in <thead>.. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. Good question!\nThere is always the option to do a custom sort function with data attributes. See the very bottom of this portion of the readme (there is a collapsible there you\u2019ll need to expand): https://github.com/filamentgroup/tablesaw#sortable\nBUT, I think the better option would be to use an Accessibility Hiding technique for the text. This way, it won\u2019t be visible to sighted users, but will still have a meaningful value for both screen readers and the tablesaw sort.\nIt would be something like visually-hidden here: http://a11yproject.com/posts/how-to-hide-content/\nHere is one from the HTML Boilerplate: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119\nAs long as it shows up when you call jQuery\u2019s .text() method on the cell, it\u2019ll work with tablesaw.\n. Can you reopen with a test case? Not saying you\u2019re wrong, just that something may have changed recently. I just tested both the stack table and the swipe table with multiple <tbody> and they work fine.. Related: https://github.com/filamentgroup/tablesaw/commit/5d668bf7000797270d7db2e964750348c33df6b7. Is the table hidden during initialization? It needs to be visible to size it correctly. If you\u2019d like additional help with this, please reopen and attach a test case.. Thanks!. Yes\u2014thank you @adrianpuescu!\n@posixpascal: filament-tablesaw/dist/stackonly/tablesaw.stackonly.js is the shoestring version, which does not alias data to DOM attributes. Switching to filament-tablesaw/dist/stackonly/tablesaw.stackonly.jquery.js would\u2019ve probably worked too. If you are already including jQuery on your page, I\u2019d recommend making that change anyway, it\u2019ll save you a few KB.. Ah\u2014good catch! Looking.. Yeah\u2014sorry 3.0 isn\u2019t out of beta yet. Soon!. Simple support for rowspan has been added. There are still a few limitations, take note here: https://github.com/filamentgroup/tablesaw#limitations. Agreed! This will be in 3.0.0-beta4.. \ud83d\udc4d  Looks great\u2014thanks!. I did create a local test case with a few new changes in the past week or so and couldn\u2019t reproduce with your markup. There were some calculation changes that went in, so hopefully something improved here.\n@Dan-Ashdown-FFT Can you retest with the new dist files?. Hmmmmmm, I still don\u2019t see the issue on your jsfiddle. Do you have any additional info on your local environment? Browser/OS?\nIs it possible to record a little screencast of what you\u2019re doing?. Woo! There it is. Thanks, investigating.. Thanks for sticking with me on this one.\nTablesaw actually used table-layout: fixed to preserve the widths of the persistent columns while swiping (those using data-tablesaw-priority=\"persist). But in this case, it didn\u2019t need table-layout: fixed at all because there were no persistent columns. Look for this fix in (the properly released) beta4.. I think this was fixed with #242: https://github.com/filamentgroup/tablesaw/commit/cdf6f7d9248ac58ac6b18f7632c7972bbf62ab38#diff-d43b1284358fe6c0a529ffb09b8fbb2e\nI tested the demo and it seems to work fine now. Please reopen if I\u2019ve missed something\u2014thanks!. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. @scottjehl had the great idea of switching swipe to use overflow scrolling with scroll snap on a tbody.\nhttp://jsbin.com/wofeyocuke/edit?html,css,output. See also this cool example https://weather.com/weather/hourbyhour/l/32459:4:US. This kind of has a novel way of overflow + left/right arrows:\nhttps://adele.uxpin.com/\n\nIt just moves the scroll offset \ud83d\udd90. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. Can you add a more verbose description of what you want?\nMaybe using steps like this?\n\nA B C D _\nswipe right\nA _ C D E\n\nI\u2019m not quite sure what you\u2019re asking.. Thanks for the thanks!\nHmm, this request is kinda warping my brain a little bit. I still don\u2019t think I quite have enough information to evaluate what you\u2019re asking.\nThe columns that show or hide have a very intentional spatial relationship, so the user relates the swipe direction to the navigation. If they swiped right and the next column to the right wasn\u2019t shown, it would break that relationship. We kind of break that now with persistent columns. I don\u2019t think we want to break it further.\nSorry :(\nIf you think I\u2019m still misunderstanding your request, please elaborate further!. Oh, interesting.\nI added a getHeaderCells callback override to TablesawConfig to hopefully help you override this.\nTry it out and let me know if this does enough for you. If not, please reopen the issue!\n<script>\n// make sure this goes before your tablesaw script\nTablesawConfig = {\n  getHeaderCells: function() {\n    return this.$table.find( \"do whatever you want just make sure you return some th elements\" );\n  }\n};\n</script>. After looking into this closer, unfortunately the API for this will be changing since 3.0.1 has not yet been released. I\u2019ll keep you updated.. Also, I should say, per the HTML specification only (and tablesaw relies on this assumption), only one <thead> element is allowed on a table. Same goes for <tfoot>.\nAlternately, multiple <tbody> elements are allowed.. Alright when 3.0.1 is officially released, you\u2019ll add the data-tablesaw-ignorerow attribute to your header-row rows. I think this will be an easier way to get where you want:\n<tr class=\"heading-row\" data-tablesaw-ignorerow>. A few more features:\ndata-tablesaw-ignorerow:\n rows will stay in place while sorting.\n its visibility will not be toggled when columns are shown/hidden on column toggle mode\n its colspan will automatically be adjusted when columns are shown/hidden on column toggle mode\n if used on a thead row, it will be ignored when finding labels for stack mode. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. How are you defining \u201cproperly\u201d here?. Closing per inactivity. Similar to #101.. actually I think this is also #309 . This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. This is a good point. The demo is wrong there.\nI should note that the sort does not run on initialization and that\u2019s on purpose. We want the server rendered markup to be sorted, so that we don\u2019t have to do anything.. > http://s529471052.onlinehome.fr/1.2/sensors/sensors13.html\nis a broken link. Closing per inactivity. It\u2019s unlikely we\u2019ll support this level of sorting in the plugin. We expose functionality to do this through custom sort functions. See \u201cAdvanced Option: Custom Sort Functions\u201d on https://github.com/filamentgroup/tablesaw#sortable. Not sure what this is. We don\u2019t support third party code for tablesaw.. You\u2019re right, we need to expose the i18n text better.. See https://github.com/filamentgroup/tablesaw#internationalization-i18n\nAvailable when 3.0.2 is released!. This needs a reduced test case please!. > This is an automated message to let you know that this issue requires additional input from the original poster and for the health of the repository issue tracker the issue will be closed. This is to help alleviate issues hanging open waiting for a response from the original poster.\n\nDo not let the issue\u2019s closing deter you. After you\u2019ve supplied the required information, the issue will be reopened. Thanks!. @amrithyerramilli awesome comment, thank you! Custom events in jQuery and shoestring both bubble, that\u2019s why we can trigger on the individual table elements (you\u2019re probably already aware of this, but just adding it for completeness).\n\nEveryone else: did @amrithyerramilli\u2019s comment solve the issue? How can we make this easier in the plugin?. I have finally tested a webpack build of Tablesaw and did some cleanup work to the module definition to get this working properly. It\u2019ll be available in 3.0.6.\nWorking example code available here: https://github.com/filamentgroup/tablesaw/tree/master/demo/webpack. 3.0.6 is available.. Yeah, this should definitely work. Are you on the latest version?. A bunch of colspan bug fixes and rework went into 3.0.6. Please retest after that goes stable!. Just confirmed that this was not fixed in 3.0.6. But it is a duplicate of #344, tracking over there.. Don\u2019t bountysource here, please. Feel free to open the issue without mentioning bountysource.. @bmackovic please open a separate issue.. @Karthikpoongo @Webtransformer @bmackovic Can someone attach a test case?\nSeems to work ok for me here: http://filamentgroup.github.io/tablesaw/demo/swipe.html. 3.0.6 is now available which includes improvements for swipe table column sizing.. ```\n/*** Captain Joy will use his css files to style his tables, thank you.\n.tablesaw th,\n.tablesaw td {\n  padding: .5em .7em;\n  text-align: left;\n  vertical-align: middle;\n}\n.tablesaw thead th {\n  text-align: left;\n} ***/\n```\nAhem, what is this @CaptainJoy?\nThe extra space you\u2019re seeing is that padding on the sortable buttons. Please reopen if you have more questions \ud83d\ude00\n. What table types are you using? This should work for the column toggle type using the data-tablesaw-ignorerow attribute on the <tr> element.. Swipe tables didn\u2019t have support for data-tablesaw-ignorerow yet. It\u2019s kind of an \u201coff the books\u201d feature as of right now.\nBut I\u2019ve added it in and it\u2019ll work in 3.0.3.. Read https://github.com/filamentgroup/tablesaw#limitations\nWhat error or issue are you seeing? Please attach a test case.. I can reproduce this\u2014thanks!. Fixed, will be released with 3.0.3. Can you attach a test case? I don\u2019t see that on the demos.. Great\u2014thanks! I added some better error messaging for this case in v3.0.3. Sorry, unfortunately we don\u2019t have the resources to provide support for integration with third party frameworks and libs. If you have a specific easy-to-debug reduced test case, I might make an exception\u2014feel free to reopen if add a test case.. We very recently added support for moving the column chooser on the toggle table, but nothing for swipe yet. I\u2019ll file this as an enhancement request.. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. I haven\u2019t seen this, can you attach a test case?. Thank you @jerone. Those test cases were crucial! This will be included with 3.0.9.. yeah, certainly. The swipe table does use column widths, so certainly you can use CSS to control the widths of different columns and media queries to limit those to certain viewport sizes.\nNote also that the data-tablesaw-priority=\"persist\" option works for persistent columns on swipe tables, so I would recommend using that instead of an absolute positioning approach.\nPlease reopen if you have additional questions.. I don\u2019t think this is possible as is, I\u2019ll file this as an enhancement request.. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. Well, we use prettier as part of our build so our output should conform to default prettier rules. I\u2019m confused why you\u2019re linting library code though? Surely you can\u2019t expect all the library code you import to obey your own internal code style configurations. I\u2019m going to close this, I don\u2019t think it\u2019s on us\u2014sorry.. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. Probably a duplicate of #145.. I ran into this same problem this week and did a bunch of rework around the swipe table\u2019s refresh method. This will be included with v3.0.6 so please retest after that release goes out and reopen if you are still having a problem.. Hm? If your pagination is enforced in the markup it should work fine with the swipe table in tablesaw. Please reopen with a test case or additional questions.. Thanks!. Can you attach a test case?\nAutomated translation:\n\u4f60\u53ef\u4ee5\u9644\u4e0a\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5417\uff1f. > This is an automated message to let you know that this issue requires additional input from the original poster and for the health of the repository issue tracker the issue will be closed. This is to help alleviate issues hanging open waiting for a response from the original poster.\n\nDo not let the issue\u2019s closing deter you. After you\u2019ve supplied the required information, the issue will be reopened. Thanks!. Hmm. This is a nice gesture\u2014yes!\n\nI don\u2019t think I have a desire to put vanity statistics on the readme though, sorry.. Yes, fair question. I personally don\u2019t like checking in minimized code into the repo because I don\u2019t want people to just reference the tablesaw code directly in a script tag. It\u2019s kind of a weak incentive to concat and build it to something better for users.\nThe reason I have uglify in the workflow at all is for file size reporting in the build:\n\nPlease reopen if you want to make a case to change my mind \ud83d\ude00. Sorry, unfortunately we don\u2019t have the resources to provide support for integration with third party frameworks and libs. If there are problems with integration, please feel free to open a new issue!. Related: #115 . This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. Hey @nouvaki,\nHave you tried the approach documented at https://github.com/filamentgroup/tablesaw/#manual-initialization-of-tablesaw-components\nSounds like it isn\u2019t initializing correctly! I\u2019d recommend focusing on proper init rather than refresh. If you need additional help, I\u2019d love to see a complete reduced test case for proper debugging.\nPlease reopen when you have that!\nThanks,\nZach\n. Hmm, @sjorsjes I\u2019m having trouble making it as far as you have in the above example.\nHow did you get around this error without modifying the tablesaw JS?\n\nUncaught SyntaxError: The requested module does not provide an export named 'default'. > This is an automated message to let you know that this issue requires additional input from the original poster and for the health of the repository issue tracker the issue will be closed. This is to help alleviate issues hanging open waiting for a response from the original poster.\nDo not let the issue\u2019s closing deter you. After you\u2019ve supplied the required information, the issue will be reopened. Thanks!. Hmm, good question. That border is specifically for the stack table when rows are actively stacked.\n\nI\u2019d be wary to remove it before a 4.0, but I would be on board with making it opt-in.. Hey @apdrsn, sorry to push back here a bit but functionally speaking what does <col> provide over the class add/remove stuff on <th>/<td> that we do now?. > This is an automated message to let you know that this issue requires additional input from the original poster and for the health of the repository issue tracker the issue will be closed. This is to help alleviate issues hanging open waiting for a response from the original poster.\n\nDo not let the issue\u2019s closing deter you. After you\u2019ve supplied the required information, the issue will be reopened. Thanks!. You will need to manage your own initialization. I\u2019d recommend following the procedure documented here: https://github.com/filamentgroup/tablesaw#manual-initialization-of-tablesaw-components\n\nIf you need additional help, please reopen with a reduced test case!. I\u2019m going to file this as a bug since our babel setup is wholly unnecessary for the ava testing tool.. I released a 3.0.8-beta.1 to the beta release channel on NPM if you want to retest! https://preview.npmjs.com/package/tablesaw#versions. @francescozaia thanks for confirming! 3.0.8 stable is out now with this change\u2014thanks!. Duplicate of #145. Please subscribe over there\u2014thanks!. Can you attach a reduced test case? It\u2019s tough to debug from screenshots :). Probably a duplicate of https://github.com/filamentgroup/tablesaw/pull/345. > This is an automated message to let you know that this issue requires additional input from the original poster and for the health of the repository issue tracker the issue will be closed. This is to help alleviate issues hanging open waiting for a response from the original poster.\n\nDo not let the issue\u2019s closing deter you. After you\u2019ve supplied the required information, the issue will be reopened. Thanks!. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\n\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. I believe you can add a border to the td instead of these classes individually?\n\n\n(Or you can use flexbox align-items: stretch to do height equalization).\nPlease reopen if that doesn\u2019t solve your problem.\n. Thanks!. This repository is now using lodash style issue management for enhancements. This means enhancement issues will now be closed instead of leaving them open.\nThe enhancement backlog can be found here: https://github.com/filamentgroup/tablesaw/issues?utf8=%E2%9C%93&q=label%3Aneeds-votes+sort%3Areactions-%2B1-desc+\nDon\u2019t forget to upvote the top comment with \ud83d\udc4d!. This will be included with v3.1.0. Hmm, I couldn\u2019t reproduce this on the stock swipe table, can you? http://filamentgroup.github.io/tablesaw/demo/swipe.html If not, you\u2019ll need to attach a test case\u2014thanks!\n\nThis is an automated message to let you know that this issue requires additional input from the original poster and for the health of the repository issue tracker the issue will be closed. This is to help alleviate issues hanging open waiting for a response from the original poster.\nDo not let the issue\u2019s closing deter you. After you\u2019ve supplied the required information, the issue will be reopened. Thanks!. Hmm, I\u2019m having real trouble with that page. I wasn\u2019t able to click the tablesaw arrows at all on that test case. Can you make a reduced test case that shows the issue?. Duplicate of #286 . This will work transparently in upcoming version v3.1.0. Thank you!. Merged! Thank you!. Sorry, unfortunately we don\u2019t have the resources to provide support for integration with third party frameworks and libs\u2014especially issue reports that do not include reduced test cases. If you have a specific easy-to-debug reduced test case, that would certainly help!. Oh, interesting! I wonder if this PR could be modified to remove changes to dist/ files?\n\nI want the test changes and the src changes and the README changes. But the dist stuff gets built for releases. (Sorry)\nThis will make testing and merging easier for me. Thank you!. Merged in #359\u2014thank you!. v3.1.0 is out!. I\u2019m guessing this might be related to #342, which will be included in the next version 3.1.0. Can you retest after that has been released?. v3.1.0 is released, please retest!\n\nThis is an automated message to let you know that a helpful response was posted to your issue and for the health of the repository issue tracker the issue will be closed. This is to help alleviate issues hanging open waiting for a response from the original poster.\nIf the response works to solve your problem\u2014great! But if you\u2019re still having problems, do not let the issue\u2019s closing deter you if you have additional questions! Post another comment and I will reopen the issue. Thanks!. Thank you for filing this! The fix will be included with upcoming version v3.1.0.. Maybe a duplicate of #342? Can you retest after upcoming version 3.1.0 is released? . v3.1.0 is released, please retest!\nThis is an automated message to let you know that a helpful response was posted to your issue and for the health of the repository issue tracker the issue will be closed. This is to help alleviate issues hanging open waiting for a response from the original poster.\nIf the response works to solve your problem\u2014great! But if you\u2019re still having problems, do not let the issue\u2019s closing deter you if you have additional questions! Post another comment and I will reopen the issue. Thanks!. We don\u2019t normally do 3rd-party integration issues but this is an easy one and that classname is too generic.. This will be included with v3.1.0.. Confirmed, I can reproduce on the kitchen sink demo.. This will be fixed in v3.1.0. Ah, thank you for updating! Tablesaw requires Standards rendering mode, which is triggered by <!DOCTYPE html>.\n\nRead more: https://developer.mozilla.org/en-US/docs/Web/HTML/Quirks_Mode_and_Standards_Mode. Can you reopen this issue and reattach with the code? It seems to be truncated.. Hmm, looks like a bug with the column sizing logic here. Good test case, thanks!. Hm? No, on that version shoestring is bundled with Tablesaw.\nshoestring is a drop in replacement for a subset of jquery\nhttps://github.com/filamentgroup/shoestring. Can you attach a test case? Thanks!. > This is an automated message to let you know that this issue requires additional input from the original poster and for the health of the repository issue tracker the issue will be closed. This is to help alleviate issues hanging open waiting for a response from the original poster.\n\nDo not let the issue\u2019s closing deter you. After you\u2019ve supplied the required information, the issue will be reopened. Thanks!. I believe this is a duplicate of #147, support for numeric priority on swipe tables. Can you upvote and follow along over there? Thanks!. Not sure why it\u2019s not linking to travis automatically but the tests passed for this, I\u2019m going to merge: https://travis-ci.org/filamentgroup/tablesaw/builds/465111267. Why does using .html() fix this over using .text()?. I think this one might be too many levels deep!\n. \n",
    "Wilto": "\n. ",
    "ErtugKaya": "\nThis happens because of miscalculation width of persistent headers. Persistent columns should not change width when swiping.\nQuick half-fix:\n<th data-priority=\"persist\" class=\"tablesaw-cell-persist\" style=\"\n    width: auto !important;\n\">Name</th>\n. ",
    "vegetableman": "guess this is the fix :- if( width > tableWidth * 0.75 ) on tables.swipetoggle.js. not sure though.\n. ",
    "aakoch": "The stuff isn't being initialized at all. You have a handler for \"enhance.tablesaw\" but it isn't being triggered. In the other full demo you have $( document ).trigger( \"enhance.tablesaw\" ); but nothing like that in the \"stack-only\".\n. Is tables-init.js being included in the Grunt build?\n. Adding 'src/tables-init.js', on line 37 made it work for me locally. I'm not sure how to write a test, though.\n. ",
    "jennschiffer": "yeah can we get this to top priority plz\n. ",
    "mjaverto": "@zachleat heh I can confirm that Maxthon, Safari and Chrome on iOS 7 work. However chrome nor the default android browser work in 4.4.2 Android. It seems like they should work: \nhttp://caniuse.com/touch\n. ",
    "salzz4u": "hi,\nis there a timeline to fix this? this is a winning feature :-)\n. it looks like it works well on stock browser on android 4.x but does not swipe on chrome  for android. \n. ",
    "jefflembeck": "Made sure to push our bower_components folder up for the gh-pages branch.\nThanks!\n. ",
    "chetang": "@zachleat : Am I missing something that is already mentioned?\n. -  I had tried this \"enhance.tablesaw\" trigger without any effect.\njavascript\n$(\"#items-index-table\").trigger( \"enhance.tablesaw\" );\nBut as mentioned in http://demos.jquerymobile.com/1.3.0-beta.1/docs/tables/toggle-methods.html, I tried to intialize the table using below methods and they all worked :)\njavascript\n$( \"#items-index-table\" ).table( \"refresh\" );\nor \njavascript\n$( \"#items-index-table\" ).table( );\nor\njavascript\n$( \"#items-index-table\" ).table( \"rebuild\" );\nAfter successfully initializing the table, when I do some further modifications to it (like adding/removing columns) and try to refresh the table using the above methods. It doesn't work :(\nAny help !!\n-  Unrelated to this issue but guess worth mentioning, in order to make tablesaw (columntoggle and sortable mode only) work with ember, I had to make few changes to tablesaw.js . \n  Ember.js adds extra script tag to the HTML for its own use like : \n<tr>\n   <script id=\"metamorph-29-start\" type=\"text/x-placeholder\"></script>\n   <th data-priority=\"persist\">ID</th>\n   <script id=\"metamorph-29-end\" type=\"text/x-placeholder\"></script>\n   <script id=\"metamorph-30-start\" type=\"text/x-placeholder\"></script>\n   <th data-priority=\"99\" class=\"tablesaw-priority-99\">Name</th>\n   <script id=\"metamorph-30-end\" type=\"text/x-placeholder\"></script>\n</tr>\nSo, while referencing this.cells in https://github.com/filamentgroup/tablesaw/blob/master/src/tables.js#L63, it was returning <script> tags in few cases and hence the plugin was not working as expected (not hiding the tbody tds).\nOn changing https://github.com/filamentgroup/tablesaw/blob/master/src/tables.js#L49 to \n$( this ).children('th').each( function(){\nand https://github.com/filamentgroup/tablesaw/blob/master/src/tables.js#L51 to \nsel = \"td:nth-of-type(\" + ( coltally + 1 ) + \")\";\nI was able to return the cells(only tds) corresponding the referenced th in thead. \nHope, these changes were worth mentioning and need some help with refreshing/reloading the plugin after modifications as mentioned earlier.\nPS: reopen the issue\n. @cmpsoares91 : You are initializing tablesaw first and then the cells are generated. I was facing the same problem. You could verify this in your case by checking if the th has class 'tablesaw-priority-x' but not tds corresponding to that th.If so then you need to reload/ refresh the table after the cells are generated or initialize the table after cells are loaded.\nPlease see the solution presented at the end of #13 .\n. I am also not able to refresh the table after adding some new rows to it. I am trying this in 'columntoggle' mode. Check JS Bin: http://jsbin.com/joqosoqaju/1/ \n. @zachleat : Is it a bug? or not supported? or not implemented properly by us?\n. ",
    "cmpsoares91": "But where are the icons defined, with what relative path are they loaded? That's what I really want to know, becaus the up and down arrows aren't loaded and I think it's because of their relative path...\n. Yes, when I reduce the screensize I get the following, here it is:\n\nThe button doesn't dissapear, what can cause this?\nNote: The optimal scenario for me would be for everything to disappear except the \"Name\", \"Remove\" and the column from the green button.\n. Sorry but I've never heard of jsbin.\nHow can I use it?\n. ",
    "blainerobison": "I believe the issue is with the value of pluginName = \"sortable\" on line 773. This is used with the collection method which conflicts with jQuery UI's Sortable Interaction.\n. Awesome! Thanks @geo242 @zachleat \n. ",
    "geo242": "Just created a pull request that contains the fix for this. \nhttps://github.com/filamentgroup/tablesaw/pull/52\n. Replaced this pull request with a different one\n. Cool beans!\n. One case is applying a style like a background color to an entire column that is being sorted.\n. Good catch! I should change that.\n. ",
    "harryRichardIzquierdo": "friend thank you very much.\nI think I should clean the tbody before cooling. because if it does tbody presents data on the mistake.\n. ",
    "hpatoio": "I'm having a similar/identical problem trying to use tablesaw with DataTable http://www.datatables.net/ (Data are loaded in with an AJAX call)\nHeaders show and hide but not related column. I've tried to run $('#mytableid').table().data(\"table\").refresh(); after AJAX call but nothing changed. \nWhen page load the code for the table is:\nhtml\n<table class=\"tablesaw\" data-mode=\"columntoggle\" id=\"datatable_table\">\n   <thead>\n       <tr>\n           <th data-priority=\"persist\">Column1</th>\n           <th data-priority=\"1\">Column2</th>\n           <th data-priority=\"2\">Column3</th>\n           <th data-priority=\"3\">Column4</th>\n       </tr>\n   </thead>\n   <tbody>\n   </tbody>\n</table>\n. ",
    "serjiosilent": "Update fork\n. Update fork\n. ",
    "designnotdrum": "I would make these links or buttons in the menu that appears, but +1 agree\n. ",
    "giumas79": "I have the same problem, I tried refresh as well with no results.\n$(document).ready(function () {\n        var page = 1;\n        var $table = $('table.tablesaw tbody');\n        var $waypoint = $('#usersWaypoint');\n        var opts = { offset: '100%' };\n        $waypoint.waypoint(function () {\n            $.get('/users/Page?page=' + page++, function (data) {\n                $table.append(data.users);\n                $('table.tablesaw').table().data(\"table\").refresh();\n                $waypoint.waypoint(opts);\n            });\n        }, { offset: '100%' });\nI don't think waypoints is going to make any difference. Is there anybody there?\n. It looks like column toggle data mode needs to be triggered again after rows appending. Setting 'swipe' as default solves the issue.\n. ",
    "ksidibe": "@zachleat \n\nCan you look at http://filamentgroup.github.io/tablesaw/demo/ajax-init.html ? It seems to work ok.\n\nworks for refreshing the data but it causes another problem. The Toggling stops working properly. When you hide a column, only the header is hidden. the corresponding td elements remain visible. Any suggestion? I'm overwriting all the data tr elements which also wipes all the additional markups TableSaw add at instantiation.\nThanks.\n. ",
    "relaxatorium": "I am seeing a similar problem.\nI am loading an entire table via ajax and doing the refresh(), and that initiates the plugin and it works as intended (and I believe as the demo would indicate).\nHowever, if I try to append new rows into the already existing table, then call a refresh(), it does not properly hide columns in the new rows.\n. Agreed, and if I was just trying to fix it for myself only, that's what I'd do (and I well may).\nThat said, I still think it would be useful to have this as a standard built in to the project like the current stackonly one is, and that way it could also be used as a base for more mixins like the current stackonly one, to give users more options without needing to alter the source themselves.\n. I've started investigating this preliminarily, it looks like a lot of the issues I see could be resolved simply by providing a version built without tables.skin.css\nThere would still be some issues elsewhere, and there's room to debate exactly what css is presentational vs. required for proper plugin behavior, but a build without that file would likely be a strong start and is the thing I will try and add first when I get the time to craft a pull request for this.\n. On the one hand, to me it kinda feels like it should be a separate, but compatible project.\nOn the other hand, it fits with the spirit of this plugin (several useful table types of modifications) and I would 100% totally use it in my main TableSaw using project if it was included and worked well.\nSo there's my $.02\n. If you are only using the stack tables, I think you can accomplish this with the SCSS mixin (see the \"Using Stack-Only TableSaw SCSS Mixin\" section of the Readme).\nIf you are only using CSS, or are using the full tablesaw plugin, then currently I think you'd need to just add additional tablesaw targeted media queries using your requested size to your own CSS, using the same stack table CSS the default uses. That solution is a bit of a hack outside the plugin, but would likely work.\n. That is correct, I believe.\nIt probably could be made to work with the tablesaw.bare.css with some wrangling or overrides, but with the current project infrastructure, tablesaw.stackonly.scss (which provides this mixin) is only a drop-in replacement for tablesaw.stackonly.css, which includes all the default tablesaw styles.\n. Haven't updated in my own project yet, but I suspect/hope that the logic fix alone will actually make the behavior what I want it to be.\nIf not, I look forwards to tweaking the currently global options, at least.\nThanks!\n. @toddparker The overall demo, or the bare demo specifically?\nMy intention for that demo is to just show what the tables look like with the new bare css sheet. I based it off the kitchen sink page to show the largest variety of functionality with the altered appearance.\nIf it's not needed or can be refined then by all means drop or simplify it, but I figured that before they use the bare css option folks might want to see which actual styling it removes and what remains, especially since there are still some things there folks might not assume would be there because they happen to not be included in the skin.css file currently, such as shadows on persistent columns and/or specific padding values.\n. @toddparker Sure, I added a brief blurb in the documentation, but I agree that both that blurb and the demo page could have better blurbs written.\n@PattyToland I've noticed that issue as well (and worked around it in the project which has driven me to this spate of helpful commits). The problem is that there is style information, such that those shadows and borders on \".tablesaw-cell-persist\" styles, which is in css files other than the tables.skin.css file. I did not want to start shuffling your css around in my first pull request before I had a better understanding of how the project worked.\nI will open issues related to both of those concerns, and hopefully sooner rather than later get pull requests done for them.\n. I can explain the current state of affairs here:\nThe implementation of the bare css was done soley by removing the \"tables.skin.css\" file from the grunt buildpath. There are however, styles that should probably be in that skin file which are in other CSS files. Relevantly, for your screenshot, there's\ncss\n.tablesaw-swipe .tablesaw-cell-persist {\n    border-right: 1px solid #e4e1de;\n}\n.tablesaw-swipe .tablesaw-cell-persist {\n    box-shadow: 3px 0 4px -1px #e4e1de;\n}\nin tables.columntoggle.css (lines 120 - 125) rather than in tables.skin.css.\nMoving those styles to tables.skin.css would fix that issue, but I didn't want to rearrange your css in my first pull request. I am happy to do so with another pull request.\nAs for the documentation issue, that could be solved with better explanation on the demo page and in the  readme.\n. Just wrote a pull request to address the style concern @PattyToland raised.\nThe issue of clarifying the documentation remains, I should be able to address that in another pull request later tonight or tomorrow.\n. ",
    "RetroMelon": "I have a similar problem. Unfortunately the only solution I could find that worked even a little was to manually add the priority css classes to the td elements before appending them to the DOM like this:\n<tr>\n<td class=\"tablesaw-priority-1\">Some text</td>\n<td class=\"tablesaw-priority-2\">More text</td>\n<td class=\"tablesaw-priority-3\">Even more text</td>\n</tr>\nResizing your window will then hide the columns correctly, but toggling the columns STILL won't work. Has anyone made any progress with this problem? I'd be really interested to hear.\n. ",
    "srinivas2105": "Is any way to make the column toggle to work on dynamic tbody binding.\n. ",
    "cbier": "I am having this problem as well!\n. @zachleat I am also using $('#mytable').table().data( \"table\" ).refresh(); but this issue is still occurring. The columns that are supposed to be hidden in the swipe table are appearing. Do I need to re-init the swipe table?\nAlso, .tablesaw-cell-persist does not show up on the first column of each row in the new data set that is loaded. Am I doing something wrong or is tablesaw just not setup for this sort of thing?\n. @zachleat I hope you're doing ok man. If you can please shoot a quick response to me\n. @zachleat why is table-layout:fixed not recommended? I need to use it to wrap long text in my swipe table's persisted column\n. +1\n. I am having the same issue\n. ",
    "isadovskiy": "Looks like the issue was caused by table-layout: fixed style. Removing this style fixed the issue. Closing the ticket.\n. Looks like on ipad landscape .tablesaw-fix-persist class is automatically added to the table. It applys table-layout: fixed style. And it causes unexpected behavior when user scrolls lowly though the table. \nSee screen shots:\n1. User initially scrolled to table: http://take.ms/7BJi0\n2. User slowly scroll down through the table:\n   a. http://take.ms/7rjVz\n   b. http://take.ms/FU0ro\n   c. http://take.ms/tM4k7\nAs you can see, width of the first column increases constantly... Just scroll http://bit.ly/1uvy7Ay back and forth on ipad (in landscape mode).\n. Validation errors are fixed (updated code is deployed to demo site). However issue still persists.\n. Thanks for clarifying the issue!\n. ",
    "fschroiff": "Your code isn't valid: http://validator.w3.org/check?uri=http%3A%2F%2Fdemo.omnigon.com%2Ftemp%2Ftablesaw%2F&charset=%28detect+automatically%29&doctype=Inline&group=0\n. ",
    "grantmcconnaughey": "Yeah, it definitely helps the table keep it's tabular look. \n. Awesome! I'm glad to hear it. :)\n. ",
    "muffinista": "I'll submit a patch for this but in case it helps anyone, changing\n$( document ).on( \"tablesawcreate\", \"table\", function( e, mode, colstart ){\nto\n$( document ).on( \"tablesawcreate\", \"table.tablesaw-stack\", function( e, mode, colstart ){\nseems to solve this.\n. ",
    "kyleholgate": "Hoping someone can help me out further as I have no experience with javascript, however I did find the most granular line I could that breaks the sorting -\nelse {\n    $cells.prepend( \"<b class='\" + classes.cellLabels + \"'>\" + text + \"</b>\"  );\n    }\nIf I remove that line, the sorting still works - but I no longer get labels when the columns stack. Can anyone help me?\nEdit: After removing the class from the above line, I see what's happening here. Tablesaw is putting the headers in EVERY cell, so there's text in front of all of my numbers, it's just hidden until the screen size is small.\n. ",
    "peterwilsoncc": "I've created an alternative solution in the branch https://github.com/peterwilsoncc/tablesaw/tree/issues37v2\nIn the current solution, the persist setting is respected and can cause an overflow on small screens.\nIn my alternative solution, the persist setting is ignored in the edge case to prevent overflow from occurring. \nThere's a quick screen cast to demo it at http://youtu.be/B1vZAukL7c8\nMy alteration requires looping through header cells a second time, so may have efficiency issues. Changes are:\n- fakeBreakpoints - second loop for ignoring persistent cols\n- new variable for setting the mode to respect/disrespect the setting\n- getNext, advance, canAdvance methods check mode before selecting the appropriate set of headers.\nIssues as I see it are:\n- efficiency of second loop\n- is this solution valid: hiding all columns in financial reports may have legal implications\n- usability\nP\n. Fixed. \nI realised the demo-head URLs should be protocol relative so I've corrected that too.\n. @michaellouviere in which browser were you having problems with the demo?\nAfter a quick check using OSX Yosemite: \n- Chrome 40: fails\n- Safari 8.0.3: works\n- FF 35: works\n- Opera 27.0: fails\nOn failure: \n- load event fires & hides cols on narrow screens\n- can navigate the table\n- resize events do not fire\ntested against the swipe demo at revision 3a292a1303bf4bade9590b1d343c7383b7af55ae. \n. Correction to my comment above\nOn failure\n- Resize events  do fire\n- fakeBreakpoints is running, as it resets the display to the left most columns on resize.\nNot sure if that helps narrow it down.\n. @silverhawk184 or @williamobrien \nOne of two things happening here I suspect, problem occurs either\n- when no doctype is specified, or,\n- when browsers are in Quirks mode.\nAre you able to test with a doctype that puts a browser in Quirks mode?\nRegardless of the cause, I see this as an authoring issue rather than a tablesaw issue; inserting doctype makes assumptions of the authors intent.\nRegardless of my opinion, it's really Zach, et al's call. colon simple smile colon.\n. Is one of the columns persistent?\nWhen there are persistent columns, tablesaw displays a minimum of one optional column in addition to the persistent columns. If this is too wide for the screen, in my experience, it can cause horizontal overflow.\nThis is to avoid around the edge case preventing any navigation, as detailed in #37. \n. A couple of questions:\n- does the issue only occur when tablesaw is enabled, and,\n- does the issue occur when you are using a standard font such as Arial, Helvetica or Times New Roman?\n. @UmbraLimi If you use WP's version of jQuery, you won't need a seperate copy of sizzle. It will be included. A quick guide for setting up jQuery as a dependency is at\nhttps://developer.wordpress.org/reference/functions/wp_enqueue_script/#comment-276\n. ",
    "superkarolis": "I have adjusted it by modifying the breakpoint at CSS, that's all. Issue solved!\n. ",
    "CoralSilver": "Any chance of a SASS mixin when you need stack and sort functionality?\n. ",
    "waggyd": "I do believe he meant x-editable as in (http://vitalets.github.io/x-editable/index.html). Is it possible to use both of these \"plugins\" on the same table? I'm hoping to combine tablesaw, x-editable, and Datatables (http://www.datatables.net/) to combine the functionalities.\n. Thanks. Appreciate it.\n. ",
    "bilias23": "You are correct, I do mean this plugin. In my experience,  I could not get tablesaw and x editable to work without minor bugs/issues. I have been using Datatables with x editable for a while and it seems to be fine. Although I have also seen some minor issues when trying to make specific columns sticky (not scrollable). I would advise using only one of these with x-editable, preferably Datatables. \n. ",
    "nsteiner": "If it helps, I'm encountering some flavor of this in a very simple scenario. Here's a reduced example: \nUpdated URL: http://jsfiddle.net/nsteiner/punz3jzx/2/\nWhen stacked at mobile widths, \"Chicken\" is labeled as a fruit.\n. ",
    "downhiller": "OK, I did manage to kludge something together.  After the existing\n$( e.target ).data( \"cells\" )\n.toggleClass( \"tablesaw-cell-hidden\", !checked )\n.toggleClass( \"tablesaw-cell-visible\", checked );\nI added\nvar col=0;\n$('.tablesaw-columntoggle>thead>tr>th').each(function () {\n    col++;\n    var status = ($(this).hasClass('tablesaw-cell-hidden')) ? 'none' : 'table-cell';\n    $('.tablesaw-columnclone tr>:nth-child('+col+')').css('display',status);\n});\nIt's not pretty/clever, but for my use case it does the job.\n. I have implemented this code in my own project now.  When I get a chance I'll try to clean it up for you, should you be interested.\n. Maybe next week, I'll add it to my todo list.\n. ",
    "juanjcsr": "I am having the same issue and I can provide some screenshots:\n\nand when I resize the window\n\n. ",
    "doniphan": "Same problem here. Heres is my setup code (tablesaw.ccs and tablesaw.js loaded fine):\n\n. OP was not answering, so I have to figured it out by myself. In my case, I had the table with the tablesaw-stack class inside a tab loaded on-click demand via AJAX. So, the table headers were not readed by the tablesaw plugin. My solution was to load the script on the head of the AJAX html file, not on the parent file that contains this AJAX file. I use bootstrap as my main CSS frameware.\nHope this helps.\n. ",
    "rphuber": "It would be nice for the scss to be more efficient but if you are just looking to add into your project workflow and compile with other sass partials just rename the file to .scss and include as normal.  Remember that all css is valid scss.\n. For some reason it is always cutting off one column even when there is plenty of room for the 3rd column.  I am using with Foundation 5.  Not sure where to look next?\nScreenshot of how it should look (and does look when refreshed from a smaller screen)\n\nScreenshot after just refreshing browser from last screenshot.\n\nAny suggestions?\n. ```\n\n                    <thead>\n                        <tr>\n                            <th data-priority=\"persist\" class=\"tablesaw-cell-persist\"></th>\n\n                            <th class=\"text-center\">\n                                <a href=\"#\"><span class=\"primary\" data-icon=\"F\" style=\"float:right;top:5px;right:5px; font-size:1.2em;\"></span></a>\n                                <br>\n                                <img src=\"http://placehold.it/100x100&text=1\">\n                                <br>\n                                <h5 class=\"item-name-table\">Diamond Solitaire Ring &frac12; ct. Princess-cut, 14k White Gold</h5>\n                                <small class=\"small\">In Stock, Online Only</small>\n                                <h5>$4,299.99</h5>\n                                <br>            \n                                <div class=\"row\">\n                                    <div class=\"small-6 column\">\n                                        <span class=\"button expand secondary\">Add to Wishlist</span>\n                                    </div>\n                                    <div class=\"small-6 column\">\n                                        <span class=\"button expand\">Add to Cart</span>\n                                    </div>\n                                </div>\n                            </th>\n\n                            <th class=\"text-center\">\n                                <a href=\"#\"><span class=\"primary\" data-icon=\"F\" style=\"float:right;top:5px;right:5px; font-size:1.2em;\"></span></a>\n                                <br>\n                                <img src=\"http://placehold.it/100x100&text=1\">\n                                <br>\n                                <h3 class=\"item-name-table\">Le Vian Necklace 1 &frac78; ct tw Diamonds 14k Vanilla Gold</h3>\n                                <small class=\"small\">In Stock, Online Only</small>\n                                <h5>$5,299.99</h5>\n                                <br>            \n                                <div class=\"row\">\n                                    <div class=\"small-6 column\">\n                                        <span class=\"button expand secondary\">Add to Wishlist</span>\n                                    </div>\n                                    <div class=\"small-6 column\">\n                                        <span class=\"button expand\">Add to Cart</span>\n                                    </div>\n                                </div>\n                            </th>\n\n                            <th class=\"text-center\">\n                                <a href=\"#\"><span class=\"primary\" data-icon=\"F\" style=\"float:right;top:5px;right:5px; font-size:1.2em;\"></span></a>\n                                <br>\n                                <img src=\"http://placehold.it/100x100&text=1\">\n                                <br>\n                                <h3 class=\"item-name-table\">Diamond Earrings &frac34; ct tw Round-cut 14K White Gold</h3>\n                                <small class=\"small\">In Stock, Online Only</small>\n                                <h5>$2,299.99</h5>\n                                <br>            \n                                <div class=\"row\">\n                                    <div class=\"small-6 column\">\n                                        <span class=\"button expand secondary\">Add to Wishlist</span>\n                                    </div>\n                                    <div class=\"small-6 column\">\n                                        <span class=\"button expand\">Add to Cart</span>\n                                    </div>\n                                </div>\n                            </th>\n                        </tr>\n                    </thead>\n\n                    <tbody>         \n                        <tr class=\"head\">\n                            <th>Product Information</th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                        </tr>\n                                       ....\n\n```\n. ",
    "k03n00b": "After multiple hours of debug, I figured out how to fix this.\nThis works:\ntable.tablesaw\n{\n    table-layout: fixed;\n    max-width: none;\n    width: auto;\n    min-width: 100%;\n}\nThis fails almost randomly with iPhone 6 (iOS 8.1.1)\ntable.tablesaw\n{\n    table-layout: fixed;\n    max-width: 100%;\n    width: 100%;\n}\nProcedure to get always this bug:\n1. Open your http://localhost/demo.html\n2. Refresh with Safari's refresh -button/icon\n3. Activate URL writing by tapping on domain from address bar\n4. Don't change anything, leave http://localhost/demo.html and tap blue Open/Go/Submit (whatever) -button\nBug appears\n\nTables SHOULD work with width: 100% too, so this problem should be fixed.\n. HTML - table.html\n```\n<!DOCTYPE html>\n\n\nTable\n\n\n\n\n\n\n\n\n\n\n\n\n    <div id=\"content_statistics\">\n        <div class=\"tablesaw-bar mode-swipe\"></div>\n        <table class=\"tablesaw\" id=\"table_statistics\" data-tablesaw-mode=\"swipe\" data-tablesaw-sortable data-tablesaw-sortable>\n        <thead>\n        <tr>\n            <th class=\"tablesaw-cell-persist sortable-head sortable-ascending wide\" data-tablesaw-priority=\"persist\" data-tablesaw-sortable-col data-tablesaw-sortable-switch data-tablesaw-sortable-default-col>\n                <span>&nbsp;</span>\n            </th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed time\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n            <th data-tablesaw-sortable-col data-tablesaw-sortable-switch class=\"width-fixed number\"><span>test</span></th>\n\n        </tr>\n        </thead>\n        <tbody>\n        <tr class=\"highlightti\">\n            <td class=\"tablesaw-cell-persist\">\n                test\n            </td>\n            <td class=\"width-fixed time\">\n                test\n            </td>\n            <td class=\"width-fixed number\">\n                850\n            </td>\n            <td class=\"width-fixed number\">\n\n                1483\n            </td>\n            <td class=\"width-fixed number\">\n                78\n            </td>\n            <td class=\"width-fixed number\">\n                41\n            </td>\n            <td class=\"width-fixed number\">\n                108\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                21\n            </td>\n            <td class=\"width-fixed number\">\n                30\n            </td>\n            <td class=\"width-fixed number\">\n                22\n            </td>\n            <td class=\"width-fixed number\">\n                17\n            </td>\n            <td class=\"width-fixed number\">\n                45\n            </td>\n            <td class=\"width-fixed number\">\n                18\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                2406\n            </td>\n\n            <td class=\"width-fixed number\">\n                666\n            </td>\n            <td class=\"width-fixed number\">\n                335\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                12\n            </td>\n            <td class=\"width-fixed number\">\n                18\n            </td>\n            <td class=\"width-fixed number\">\n                850\n            </td>\n        </tr>\n        <tr>\n            <td class=\"tablesaw-cell-persist\">\n                test1\n            </td>\n            <td class=\"width-fixed time\">\n                test1\n            </td>\n            <td class=\"width-fixed number\">\n                450\n            </td>\n            <td class=\"width-fixed number\">\n\n                207\n            </td>\n            <td class=\"width-fixed number\">\n                14\n            </td>\n            <td class=\"width-fixed number\">\n                22\n            </td>\n            <td class=\"width-fixed number\">\n                7\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                22\n            </td>\n            <td class=\"width-fixed number\">\n                22\n            </td>\n            <td class=\"width-fixed number\">\n                4\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                450\n            </td>\n            <td class=\"width-fixed number\">\n                540\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                5\n            </td>\n            <td class=\"width-fixed number\">\n                450\n            </td>\n        </tr>\n        <tr>\n            <td class=\"tablesaw-cell-persist\">\n                test2\n            </td>\n            <td class=\"width-fixed time\">\n                test2\n            </td>\n            <td class=\"width-fixed number\">\n                120\n            </td>\n            <td class=\"width-fixed number\">\n\n                238\n            </td>\n            <td class=\"width-fixed number\">\n                3\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                23\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                8\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                3\n            </td>\n            <td class=\"width-fixed number\">\n                15\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                18\n            </td>\n            <td class=\"width-fixed number\">\n                18\n            </td>\n            <td class=\"width-fixed number\">\n                35\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                12\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n        </tr>\n        <tr>\n            <td class=\"tablesaw-cell-persist\">\n                test3\n            </td>\n            <td class=\"width-fixed time\">\n                test3\n            </td>\n            <td class=\"width-fixed number\">\n                70\n            </td>\n            <td class=\"width-fixed number\">\n\n                398\n            </td>\n            <td class=\"width-fixed number\">\n                18\n            </td>\n            <td class=\"width-fixed number\">\n                9\n            </td>\n            <td class=\"width-fixed number\">\n                30\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                11\n            </td>\n            <td class=\"width-fixed number\">\n                5\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                4\n            </td>\n            <td class=\"width-fixed number\">\n                12\n            </td>\n            <td class=\"width-fixed number\">\n                8\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                4\n            </td>\n            <td class=\"width-fixed number\">\n                55\n            </td>\n            <td class=\"width-fixed number\">\n                126\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                1 dl\n            </td>\n        </tr>\n        <tr>\n            <td class=\"tablesaw-cell-persist\">\n                test4\n            </td>\n            <td class=\"width-fixed time\">\n                test4\n            </td>\n            <td class=\"width-fixed number\">\n                160\n            </td>\n            <td class=\"width-fixed number\">\n\n                353\n            </td>\n            <td class=\"width-fixed number\">\n                33\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                25\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                4\n            </td>\n            <td class=\"width-fixed number\">\n                4\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                1915\n            </td>\n\n            <td class=\"width-fixed number\">\n                31\n            </td>\n            <td class=\"width-fixed number\">\n                44\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                14\n            </td>\n            <td class=\"width-fixed number\">\n                160\n            </td>\n        </tr>\n        <tr>\n            <td class=\"tablesaw-cell-persist\">\n                test5\n            </td>\n            <td class=\"width-fixed time\">\n                test6\n            </td>\n            <td class=\"width-fixed number\">\n                50\n            </td>\n            <td class=\"width-fixed number\">\n\n                287\n            </td>\n            <td class=\"width-fixed number\">\n                10\n            </td>\n            <td class=\"width-fixed number\">\n                9\n            </td>\n            <td class=\"width-fixed number\">\n                23\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                4\n            </td>\n            <td class=\"width-fixed number\">\n                12\n            </td>\n            <td class=\"width-fixed number\">\n                4\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                19\n            </td>\n            <td class=\"width-fixed number\">\n                23\n            </td>\n            <td class=\"width-fixed number\">\n                130\n            </td>\n            <td class=\"width-fixed number\">\n                3\n            </td>\n            <td class=\"width-fixed number\">\n                3\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                50\n            </td>\n        </tr>\n        <tr class=\"highlightti\">\n            <td class=\"tablesaw-cell-persist\">\n                sample\n            </td>\n            <td class=\"width-fixed time\">\n                sample\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n            <td class=\"width-fixed number\">\n\n                119\n            </td>\n            <td class=\"width-fixed number\">\n                20\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                505\n            </td>\n            <td class=\"width-fixed number\">\n                234\n            </td>\n            <td class=\"width-fixed number\">\n                24\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n        </tr>\n        <tr>\n            <td class=\"tablesaw-cell-persist\">\n                sample1\n            </td>\n            <td class=\"width-fixed time\">\n                sample1\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n            <td class=\"width-fixed number\">\n\n                119\n            </td>\n            <td class=\"width-fixed number\">\n                20\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                505\n            </td>\n            <td class=\"width-fixed number\">\n                234\n            </td>\n            <td class=\"width-fixed number\">\n                24\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n        </tr>\n        <tr>\n            <td class=\"tablesaw-cell-persist\">\n                sample1\n            </td>\n            <td class=\"width-fixed time\">\n                sample1\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n            <td class=\"width-fixed number\">\n\n                119\n            </td>\n            <td class=\"width-fixed number\">\n                20\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                505\n            </td>\n            <td class=\"width-fixed number\">\n                234\n            </td>\n            <td class=\"width-fixed number\">\n                24\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n        </tr>\n        <tr>\n            <td class=\"tablesaw-cell-persist\">\n                sample1\n            </td>\n            <td class=\"width-fixed time\">\n                sample1\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n            <td class=\"width-fixed number\">\n\n                119\n            </td>\n            <td class=\"width-fixed number\">\n                20\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                505\n            </td>\n            <td class=\"width-fixed number\">\n                234\n            </td>\n            <td class=\"width-fixed number\">\n                24\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n        </tr>\n        <tr>\n            <td class=\"tablesaw-cell-persist\">\n                sample1\n            </td>\n            <td class=\"width-fixed time\">\n                sample1\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n            <td class=\"width-fixed number\">\n\n                119\n            </td>\n            <td class=\"width-fixed number\">\n                20\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                505\n            </td>\n            <td class=\"width-fixed number\">\n                234\n            </td>\n            <td class=\"width-fixed number\">\n                24\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n        </tr>\n        <tr>\n            <td class=\"tablesaw-cell-persist\">\n                sample1\n            </td>\n            <td class=\"width-fixed time\">\n                sample1\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n            <td class=\"width-fixed number\">\n\n                119\n            </td>\n            <td class=\"width-fixed number\">\n                20\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                505\n            </td>\n            <td class=\"width-fixed number\">\n                234\n            </td>\n            <td class=\"width-fixed number\">\n                24\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n        </tr>\n        <tr>\n            <td class=\"tablesaw-cell-persist\">\n                sample1\n            </td>\n            <td class=\"width-fixed time\">\n                sample1\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n            <td class=\"width-fixed number\">\n\n                119\n            </td>\n            <td class=\"width-fixed number\">\n                20\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                6\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                505\n            </td>\n            <td class=\"width-fixed number\">\n                234\n            </td>\n            <td class=\"width-fixed number\">\n                24\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                1\n            </td>\n            <td class=\"width-fixed number\">\n                2\n            </td>\n            <td class=\"width-fixed number\">\n                0\n            </td>\n            <td class=\"width-fixed number\">\n                200\n            </td>\n        </tr>\n        </tbody>\n        </table>\n    </div>\n\n</div>\n\n\n```\nCSS - table.css\n```\ntable\n{\n    border-collapse: collapse;\n    border: 1px solid #ccc;\n}\nbutton\n{\n    border: 1px solid #ccc;\n}\n.tablesaw.averages .tablesaw-cell-persist\n{\n    white-space: nowrap;\n    text-align: center;\n    width: 80px !important;\n    max-width: 100px !important;\n}\n.tablesaw-bar .tablesaw-advance > .btn.left, .icon-arrow-gray-left\n{\n    background-image: url(\"data:image/svg+xml;charset=US-ASCII,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22utf-8%22%3F%3E%3C!DOCTYPE%20svg%20PUBLIC%20%22-%2F%2FW3C%2F%2FDTD%20SVG%201.1%2F%2FEN%22%20%22http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd%22%3E%3Csvg%20version%3D%221.1%22%20id%3D%22Layer_1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20x%3D%220px%22%20y%3D%220px%22%20%20width%3D%227.5px%22%20height%3D%2211.2px%22%20viewBox%3D%220%200%207.5%2011.2%22%20enable-background%3D%22new%200%200%207.5%2011.2%22%20xml%3Aspace%3D%22preserve%22%3E%3Cg%3E%20%20%20%3Cpolyline%20fill%3D%22none%22%20stroke%3D%22%23808080%22%20stroke-width%3D%222.2691%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20stroke-miterlimit%3D%2210%22%20points%3D%22%20%206.3%2C1.1%201.1%2C5.9%206.3%2C10.1%20%20%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\");\n    background-repeat: no-repeat;\n}\n.tablesaw-bar .tablesaw-advance > .btn.right, .icon-arrow-gray-right\n{\n    background-image: url(\"data:image/svg+xml;charset=US-ASCII,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22utf-8%22%3F%3E%3C!DOCTYPE%20svg%20PUBLIC%20%22-%2F%2FW3C%2F%2FDTD%20SVG%201.1%2F%2FEN%22%20%22http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd%22%3E%3Csvg%20version%3D%221.1%22%20id%3D%22Layer_1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20x%3D%220px%22%20y%3D%220px%22%20%20width%3D%227.5px%22%20height%3D%2211.2px%22%20viewBox%3D%220%200%207.5%2011.2%22%20enable-background%3D%22new%200%200%207.5%2011.2%22%20xml%3Aspace%3D%22preserve%22%3E%3Cg%3E%20%20%20%3Cpolyline%20fill%3D%22none%22%20stroke%3D%22%23808080%22%20stroke-width%3D%222.2691%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20stroke-miterlimit%3D%2210%22%20points%3D%22%20%201.1%2C1.1%206.3%2C5.9%201.1%2C10.1%20%20%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\");\n    background-repeat: no-repeat;\n}\n.highlightti td\n{\n    border-bottom-color: #ccc !important;\n    border-right-color: #ccc !important;\n    font-weight: bold;\n    background: #EDEDED !important;\n}\n.favorite td\n{\n    background: #C5DBE0 !important;\n    border-right-color: #99B7C0 !important;\n    border-bottom-color: #99B7C0 !important;\n}\n.favorite-item td\n{\n    background: #EDF3F5 !important;\n    border-right-color: #C5DBE0 !important;\n    border-bottom-color: #C5DBE0 !important;\n    color: #637c85 !important;\n    font-style: italic;\n}\ntable.tablesaw\n{\n    table-layout: fixed;\n    empty-cells: show;\n    max-width: 100%;\n    width: 100%;\n}\n.tablesaw-swipe .wide\n{\n    width: 158px;\n    min-width: 158px;\n}\n.tablesaw.averages .width-fixed,\n.tablesaw.averages .width-fixed button\n{\n    width: 93px;\n    min-width: 93px !important;\n    max-width: none !important;\n}\n.tablesaw {\n    width: 100%;\n    visibility: hidden;\n}\n.tablesaw.tablesaw-swipe\n{\n    visibility: visible !important;\n}\n.tablesaw-bar .left\n{\n    float: none;\n}\n.tablesaw-bar\n{\n    min-height: 58px;\n}\n.tablesaw\n{\n    border: 0;\n    padding: 0;\n}\n.tablesaw th,\n.tablesaw td\n{\n    color: #000;\n    box-sizing: border-box;\n    padding: 0;\n}\n.tablesaw td\n{\n    background: #fff;\n    line-height: 22px;\n    padding: 7px 9px;\n    border-right: 1px solid #dcdcdc;\n}\n.tablesaw .width-fixed,\n.tablesaw .width-fixed button\n{\n    white-space: nowrap;\n    overflow: hidden;\n}\n.tablesaw .width-fixed-double\n{\n    overflow: hidden;\n}\n.tablesaw-enhanced .tablesaw-bar .btn {\n    border: 1px solid #ccc;\n    background: none;\n    background-color: #fafafa;\n    -webkit-box-shadow: 0 1px 0 rgba(255,255,255,1);\n    box-shadow: 0 1px 0 rgba(255,255,255,1);\n    color: #4a4a4a;\n    clear: both;\n    cursor: pointer;\n    display: block;\n    margin: 0;\n    padding: .5em .85em .4em .85em;\n    position: relative;\n    text-align: center;\n    text-decoration: none;\n    text-transform: capitalize;\n    text-shadow: 0 1px 0 #fff;\n    width: 100%;\n    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba( 255,255,255,.1 )), color-stop(50%, rgba( 255,255,255,.1 )), color-stop(55%, rgba( 170,170,170,.1 )), to(rgba( 120,120,120,.15 )));\n    background-image: -webkit-linear-gradient(top, rgba( 255,255,255,.1 ) 0%, rgba( 255,255,255,.1 ) 50%, rgba( 170,170,170,.1 ) 55%, rgba( 120,120,120,.15 ) 100%);\n    background-image: linear-gradient( top, rgba( 255,255,255,.1 ) 0%, rgba( 255,255,255,.1 ) 50%, rgba( 170,170,170,.1 ) 55%, rgba( 120,120,120,.15 ) 100% );\n    -webkit-appearance: none !important;\n    -moz-appearance: none !important;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    border-radius: .25em;\n    opacity: 1;\n}\n.tablesaw-bar .tablesaw-advance {\n    position: relative;\n    top: -2.6em;\n}\n.tablesaw-advance .btn {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    text-shadow: 0 1px 0 #fff;\n}\n.tablesaw-bar .tablesaw-advance a.tablesaw-nav-btn {\n    display: inline-block;\n    overflow: hidden;\n    width: 70px;\n    height: 70px;\n    background-position: 50% 50%;\n    background-size: 50%;\n    margin-left: 30px;\n}\n.tablesaw-advance a.tablesaw-nav-btn.disabled {\n    opacity: .25;\n    cursor: default;\n    pointer-events: none;\n}\n.tablesaw-bar {\n    clear: both;\n}\n.tablesaw-bar.mode-swipe {\n    margin-top: -2em;\n    position: relative;\n    top: 2em;\n}\n.tablesaw-bar .btn,\n.tablesaw-enhanced .tablesaw-bar .btn {\n    margin-top: 9px;\n    margin-bottom: 6px;\n}\n.tablesaw-bar.mode-swipe {\n    top: 0;\n    margin: 15px 30px;\n}\n.tablesaw-bar .tablesaw-advance {\n    position: static;\n}\n.tablesaw-bar {\n    margin-top: 0;\n    position: static;\n}\n.tablesaw thead\n{\n    border: 1px solid #e5e5e4;\n    background: #fff;\n}\n.tablesaw thead tr:first-child th\n{\n    font-weight: normal;\n    border-right: 1px solid #dcdcdc;\n    border-bottom: 1px solid #dcdcdc;\n}\n.tablesaw th:last-child,\n.tablesaw td:last-child\n{\n    border-right: none !important;\n}\n.tablesaw tbody td\n{\n    vertical-align: middle;\n    border-bottom: 1px solid #DCDCDC;\n}\n.tablesaw-swipe .tablesaw-cell-persist\n{\n    border-right: 1px solid #dcdcdc;\n    overflow: hidden;\n}\n.tablesaw-swipe .tablesaw-cell-persist\n{\n    -webkit-box-shadow: 3px 0 4px -1px #dcdcdc;\n    box-shadow: 3px 0 4px -1px #dcdcdc;\n}\n.tablesaw-swipe th.tablesaw-cell-hidden,\n.tablesaw-swipe td.tablesaw-cell-hidden\n{\n    display: none;\n}\n.tablesaw-sortable,\n.tablesaw-sortable thead,\n.tablesaw-sortable thead tr,\n.tablesaw-sortable thead tr th {\n    position: relative;\n}\n.tablesaw-sortable th.sortable-head span\n{\n    width: 100px;\n    display: block;\n    text-align: left;\n    overflow: hidden;\n    transform: rotate(-52deg);\n}\n.tablesaw td.number\n{\n    padding-left: 16px;\n    padding-right: 17px;\n    text-align: right;\n}\n.tablesaw-sortable .sortable-head button\n{\n    height: 100px;\n    width: 100%;\n    min-width: 100%;\n    color: inherit;\n    background: transparent;\n    padding: 0;\n    text-align: left;\n    font: inherit;\n    text-transform: inherit;\n    position: relative;\n}\n.tablesaw th.number,\n.tablesaw th.number button,\n.tablesaw-sortable .sortable-head.number button\n{\n    text-align: left;\n}\n.tablesaw-sortable .width-fixed.sortable-head.sortable-ascending,\n.tablesaw-sortable .width-fixed.sortable-head.sortable-descending\n{\n    background: #338BB1 !important;\n    color: #ffffff !important;\n}\n.tablesaw-advance {\n    display: block;\n    float: right;\n}\n```\n. ",
    "oilvier": "I've got the problem too.\nYour solution worked, thanks @k03n00b \n. ",
    "amaisano": "Have you taken a look at this table-layout: fixed bug related post? https://stackoverflow.com/questions/3715325/weird-table-layoutfixed-bug-on-webkit?answertab=active#tab-top\nI started here on this github thread, but ended up there. I was having similar issues but they extended to all -webkit browsers, desktop and mobile. Turns out widths need to be recalculated by resetting table-layout: fixed after and only if a width is previously set.\n. ",
    "ogrethegreat": "I ran into this as well.  It seems to only occur on tables where ajax loaded data is substantially larger than the original table header structure.  If you drag and resize the window it will recalculate and self correct.  The fixed style above does in fact correct the issue.  I imagine it has something to do with the order of events in which the data is loaded into the dom and cols are calculated.  Great script.\n. ",
    "danilinked": "@cbier I need to use long text in my swipe table but in a row. Any news about this @zachleat \n. ",
    "melvinnos": "This solved my problem as well!! Thank you very much @k03n00b!!!! Thumbs up!\n. ",
    "Codepadawan": "I had this issue also. Thanks @k03n00b\n. ",
    "anilkachhadiya": "Thanks @k03n00b !! It works perfect.. ",
    "extractachris": "The mixin will not work with any other css file, correct? For example: tablesaw.bare.css\n. Is there a way to disable the touch events but maintain the minimap scrolling arrows?\n. ",
    "toddparker": "@relaxatorium - I agree that those thresholds probably need finessing and possibly exposing as config options. \n@scottjehl - do we have more finessed scrolling threashold logic we could re-purpose here?\n. Fixed by https://github.com/filamentgroup/tablesaw/pull/69\n. Thanks for the fix @relaxatorium. We're still debating what the purpose of that demo is, @zachleat will tell us when he's back from vacation.\n. @relaxatorium - oh, cool. I think keeping it is cool, it just needs some explanation of what is going on in that demo. Mind adding a blurb on that page above the table explaining what this shows and link to whatever relevant parts of the readme or code? If we don't explain the bare css in the readme, feel free to add that as part of this. Thanks again for your help!\n. @zachleat - can you give this a look next week?\n. To be clear, dropping IE8 support would just mean this would stay as a normal, non-responsive table which seems fine given that the intersection of small screens and IE8 is tiny.\n. Good for demos but we've never used it on a project, no. ",
    "PattyToland": "@relaxatorium - I noticed that there's some style oddness on the tables in that \"Bare\" page: some columns have rules and a right edge/shadow, others none. \nIn the second table especially I see that two out of the five columns have the styling with the rules and edge, which looks like a mistake?:\n\nNot sure if this is something you were working on or @zachleat, but just wanted to note it.\n. Just posting an illustration of style inconsistencies. \nmultiple columns have rules and a hard right edge/shadow, others no rules at all (from second table on the page): \n\nlooks like some styles are there and scoped improperly\n. ",
    "buzeeg": "Kedano, did you find any solution to filter data? I am currently using tablesorter and i'd like to use tablesaw along with it.\n. ",
    "ckollars": "I'm having the same issue that @rphuber had. My table cells all fit fine but once I add table saw and my the data attributes it will always hide the last cell. Adding that I'm referring to full browser width on a desktop.\nI even removed the widths of the td and th at one point and it still only showed 5 of the 6 columns. Unsure if it's jut my CSS causing issues.\nHTML\n<table class=\"card-features tablesaw\" data-tablesaw-mode=\"swipe\">\n  <thead>\n    <tr>\n      <th class=\"h3 feature-title\" data-tablesaw-priority=\"persist\">Features</th>\n      <th class=\"card-feature\"><img src=\"-/img_min/logo.png\" alt=\"card\"></th>\n      <th><img src=\"-/img_min/logo.jpg\" alt=\"\"></th>\n      <th><img src=\"-/img_minlogo.jpg\" alt=\"\"></th>\n      <th><img src=\"-/img_min/logo.jpg\" alt=\"\"></th>\n      <th><img src=\"-/img_min/logo.jpg\" alt=\"\"></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"h3 feature-title\">Branchless Branch</td>\n      <td class=\"card-feature featured\"></td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n    </tr>\n    <tr>\n      <td class=\"h3 feature-title\">Monthly Fee</td>\n      <td class=\"card-feature feature-digits\">$5.95</td>\n      <td class=\"feature-digits\">$10</td>\n      <td class=\"feature-digits\">$7</td>\n      <td class=\"feature-digits\">$6.95</td>\n      <td class=\"feature-digits\">$12</td>\n    </tr>\n  </tbody>\n</table>\n``` SCSS\n  td:not(.feature-title),\n  th:not(.feature-title) { width: 13%; }\n.feature-title {\n    width: 35%;\n    background-color: $white;\n    text-align: left;\n  }\n``\n. @jordanyeo I never did get it resolved. I just ended up using!important` rules in my css to override the inline css that tablesaw outputs.\n. ",
    "jordanyeo": "@ckollars I'm having the same issue- did you ever figure this out?\n. ",
    "jonnymaceachern": ":+1: \n. ",
    "MadMichael888": "Hi,\nIs this issue fixed in the latest version of tablesaw?\nThanks,\nMike \n. ",
    "Goutlook": "You can find the test case on fiddle: http://jsfiddle.net/real13/cj3oaL71/1/\nIf i removed the overflow, the minimap is working but the table will go outside of the modal if i resize the windows.\n. This is the goog url: http://jsfiddle.net/real13/cj3oaL71/3/\nThanks\n. ",
    "fallenturtle": "I did sort of do it with adding if (document.documentElement.clientWidth < 1280) { to the top fo the js file and } to the bottom, but is their a classier way to do it?\n. ",
    "slagbat": "Absolutely smashed it. Thank you so much, that solved all my issues.\n. ",
    "msslave": "ajax-init.html is working just because the tbody>tr>td is loaded before the refresh() called. It's accidentaly right.  the refresh func doesn't call the snip \n$cells.wrapInner( \"\" );\n$cells.prepend( \"\" + html + \"\"  );\"\n. ",
    "ronald-pineda": "I have the same problem and if you try to append more rows is not working for them. I tried in the same page by executing the javascript in firefox. It adds the rows but in those the tablesaw is not setting the swipe css.\nvar mydata = [\n    {\"Name\":\"A\", \"P1\":\"1\", \"P2\":\"2\", \"P3\":\"3\", \"P4\":\"1\", \"P5\":\"2\", \"P6\":\"3\"},\n    {\"Name\":\"B\", \"P1\":\"4\", \"P2\":\"5\", \"P3\":\"6\", \"P4\":\"1\", \"P5\":\"2\", \"P6\":\"3\"},\n    {\"Name\":\"C\", \"P1\":\"7\", \"P2\":\"8\", \"P3\":\"9\", \"P4\":\"1\", \"P5\":\"2\", \"P6\":\"3\"}\n];\nvar tbody = $( '#mytable tbody' ), props = [\"Name\",\"P1\",\"P2\",\"P3\",\"P4\",\"P5\",\"P6\"];\n$.each( mydata, function(i, value){\n    var tr = $(\"\");\n```\n$.each(props, function(i, prop){\n    $('').html(value[prop]).appendTo(tr); \n});\ntbody.append(tr);\n```\n});\n$('#mytable').table().data( \"table\" )\n.refresh();\n. ",
    "rbasw-mbrandel": "I'm having a similar issue. Does anyone know if having invalid fields in the grid rows will prevent the grid from refreshing?. ",
    "emattias": "Thanks for the quick response! Unfortunately this doesn't really solve my problem. I need to have the strings be run through my own js function instead of being \"hardcoded\" in a generated script.\nMy thinking is that I define a function name that all the strings are run through at runtime.\n. see #87 \n. ",
    "Tedness": "Same issue here...Swipe isn't behaving as expected in Chrome 40 on OSX Yosemite when resizing the viewport. It requires hitting refresh/reload on the browser in order for the table to re-render properly.\nFF and Safari are fine.\n. ",
    "michaellouviere": "@peterwilsoncc sorry for the delay, was testing in Chrome 40.\n. ",
    "layanto": "The above screen capture showing styling from bootstrap as I added bootstrap class \"table table-striped\" to the table element in addition to \"tablesaw tablestack\". The change I propose to tablesaw.css is:\nI added the following style to tablesaw.stackonly.css in the @media (max-width: 39.9375em) {} section:\n.table>tbody>tr>td, .table>tbody>tr>th, .table>tfoot>tr>td, .table>tfoot>tr>th, .table>thead>tr>td, .table>thead>tr>th {\nborder-top: none;\n}\nThis is only applicable to bootstrap table with class=\"table\" and has no effect if not used with bootstrap. Since bootstrap is a very commonly used foundation css, maybe affecting a good proportion of tablestack users?\n. ",
    "subrata111": "Tablesaw is conflict with jquery and bootstrap. ",
    "mhsparks": "1.0.4 works fine for us, thanks.\n. ",
    "SangeethaThai1": "Thanks Zach!\nLooks like this feature is available only in StackOnly mode.\nIs there any way to configure this in a Table that switches between swipe (large viewport) and stack mode (small viewport)?\n. Great! Thank You for the quick response Zach!\n. ",
    "antelopeb": "I have the same question. Can a table combine the functionality of swipe when over 640px and stack when under? Seems like it might be possible by writing some custom JS to handle, but if there's a built-in function that would be ideal.\n. ",
    "meajmal": "The problem has been solved. I am listing down the changes i made below. I had to edit a few lines in the tablesaw plugin, specifically where events were triggered.\nEarlier it was - this.$table.trigger( events.create, [ this, colstart ] );, which was not triggering the required tablesawcreate event. I changed it to $( document ).trigger( events.create, [ this, colstart ] );, which got it working. I called the plugin directly in my backbone view using this.$el.find(\"#analytics-table\").table();. Further I also removed the 'enhance-tablesaw' event associated with the plugin.\nPlease do let me know if there are any apparent problems in this approach.\n. ",
    "appel": "Hey @silverhawk184, I'm trying to implement this since this is exactly the functionality I need, but I'm getting an \"Uncaught SyntaxError: Unexpected identifier\" error at the $tables pluginName; line. Would you mind including your version of the script here? Thanks in advance!\n. ",
    "msom": "+1\n. ",
    "arenddeboer": "I needed the same functionality, mostly because of server side sortable columns which will reset the column selection on every sort.\nTried silverhawk184's version, but wasn't able to get it working. This modification stores column visibility changes after a checkbox selection change.\nThis works on version: \"Tablesaw - v3.0.0-beta.0 - 2016-09-14\" and is implemented for the column toggle mode only. \nModify tablesaw.jquery.js, inside \"ColumnToggle.prototype.init\" add the localStorage line.\n```\n// bind change event listeners to inputs - TODO: move to a private method?\n        $menu.find( 'input[type=\"checkbox\"]' ).on( \"change\", function(e) {\n            var checked = e.target.checked;\n        var $cells = self.$getCellsFromCheckbox( e.target );\n\n        $cells[ !checked ? \"addClass\" : \"removeClass\" ]( \"tablesaw-cell-hidden\" );\n        $cells[ checked ? \"addClass\" : \"removeClass\" ]( \"tablesaw-cell-visible\" );\n\n        self.$table.trigger( 'tablesawcolumns' );\n\n        // store checkbox value based on checkbox label\n        localStorage['tablesaw#'+e.target.labels[0].innerText]=checked;\n\n    });\n\n```\nNext modify below event listener to restore the saved settings on table create, add the part starting with \"restore checkbox state\"\n```\n// on tablecreate, init\n    $( document ).on( \"tablesawcreate\", function( e, tablesaw ) {\n    if( tablesaw.mode === 'columntoggle' ){\n        var table = new ColumnToggle( tablesaw.table );\n        table.init();\n\n        // restore checkbox state\n        $.each(localStorage, function(key, value) {\n            key = key.replace(\"tablesaw#\", \"\");\n            // find label with innerText = value\n            var label = $(\"label:contains(\" + key + \")\");\n            if(label.length) {\n\n                var columnCheckbox = $(label).children();\n                if(value === \"true\") {\n                    $(columnCheckbox).attr(\"checked\", true);\n                } else {\n                    $(columnCheckbox).attr(\"checked\", false);\n                }\n                // process\n                var checked = (value === \"false\") ? false : true ;\n\n                var $cells = ColumnToggle.prototype.$getCellsFromCheckbox( columnCheckbox[0] );\n\n                $cells[ !checked ? \"addClass\" : \"removeClass\" ]( \"tablesaw-cell-hidden\" );\n                $cells[ checked ? \"addClass\" : \"removeClass\" ]( \"tablesaw-cell-visible\" );\n\n                $(\".tablesaw\").trigger( 'tablesawcolumns' );\n\n            }\n        });\n    }\n\n} );\n\n```\nThis is quick and dirty, but I hope it helps anybody trying to get this working.\n. ",
    "FMDanielAdesanya": "Hi \nPlease has this been sorted? Having an error with key = key.replace(\"tablesaw#\", \"\");. ",
    "SolitaryX88": "the following works on v3.0.6 (please read first the comment of @arenddeboer)\nYou may add the following under Tablesaw Create Event function: \n```\n// on tablecreate, init\n$(document).on(Tablesaw.events.create, function(e, tablesaw) {\n   if (tablesaw.mode === \"columntoggle\") {\n      var table = new ColumnToggle(tablesaw.table);\n      table.init();\n  // restore checkbox state **- copy the following code!**\n  for (var i = 0; i < localStorage.length; i++) {\n     // get key\n     var key = localStorage.key(i);\n     // get value\n     var value = localStorage.getItem(key);\n     // process key\n     key = key.replace(\"tablesaw#\", \"\");\n\n     // find label with innerText = value\n     var label = $(\"label:contains(\" + key + \")\");\n\n     if (label.length) {\n\n        var columnCheckbox = $(label).children();\n        if (value === \"true\") {\n           $(columnCheckbox).attr(\"checked\", true);\n        } else {\n           $(columnCheckbox).attr(\"checked\", false);\n        }\n\n        var checked = (value === \"false\") ? false : true;\n        var header = table.getHeaderFromCheckbox(columnCheckbox[0]);\n        var $cells = tablesaw._$getCells(header);\n\n        $cells[!checked ? \"addClass\" : \"removeClass\"](\"tablesaw-toggle-cellhidden\");\n        $cells[checked ? \"addClass\" : \"removeClass\"](\"tablesaw-toggle-cellvisible\");\n        tablesaw.updateColspanCells(\"tablesaw-toggle-cellhidden\", header, checked);\n\n        $(\".tablesaw\").trigger('tablesawcolumns');\n\n     }\n  } // END OF restore checkbox state\n\n}\n});\n```\nthe first part of the code remains the same. . ",
    "silverhawk184": "No. It was an issue I was having and I thought I'd share the solution with\nothers. It was working fine in IE and Firefox, but not Chrome. I spent\nhours debugging and it turned out to be something so small and easy to\noverlook.\nOn Feb 26, 2015 7:04 PM, \"Zach Leatherman\" notifications@github.com wrote:\n\nIs this missing on one of the examples?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/filamentgroup/tablesaw/issues/102#issuecomment-76302929\n.\n. \n",
    "williamobrien": "Thank you silverhawk! I could NOT figure out why it wouldn't stack correctly! This fixed my problem immediately.\n. ",
    "olegchir": "Thanks man, it's really great comment!\n. ",
    "Philman": "Basically, I have some javascript that adds columns based on the data provided. I would like when I refresh tablesaw, it checks the column headers again to see if any were added (or even if the header text has changed). I understand this is an edgecase and that maybe once the destroy is fixed that using it might be a better solution. \nThanks, and I already am enjoying using it with my small workaround!\n. ",
    "nicolashefti": "@Philman did you achieve to refresh your table? I currently have a similar problem: I have a swip-table with a dynamic number of columns. After adding a column I do not find a way to refresh my table configuration. Thus the \"Swipe\" is broken...\nAny idea?\n. ",
    "jonscottclark": "Please merge. Used this technique in my own fork and works well.\n. I used the fork used in PR #105 and it works great.\n. Yay! Thanks for your recent work on this, @zachleat !\n. ",
    "jmartsch": "Please check and merge this. I want to use this great module with webpack.\n. ",
    "bmuenzenmeyer": "I too am interested, doing things like http://stackoverflow.com/questions/8970362/setting-a-max-height-on-a-table feels ugly.\n. For the curious, this is my current workaround (pretty huh?):\njavascript\n//apply a custom sort for tablesaw to sort on the timestamp accurate to the second\nvar self = this;\nthis.$el.find(\".history-timestamp\").data(\"tablesaw-sort\", function (ascending) {\n    return function (a, b) {\n        var aTimestamp = $($(self.$el.find('.js-history-events-record')[a.rowNum]).find('.js-sort-timestamp')[0]).attr('data-timestamp');\n        var bTimestamp = $($(self.$el.find('.js-history-events-record')[b.rowNum]).find('.js-sort-timestamp')[0]).attr('data-timestamp');\n        if (ascending) {\n            return aTimestamp > bTimestamp;\n        } else {\n            // descending\n            return aTimestamp < bTimestamp;\n        }\n    };\n});\n. Hi Zach, that would be great too! :D\n. Hi @andrewfleming \nI am using tablesaw in much the same way and have had success, albeit a bit heavyhanded, by destroying the data on the table and then reinitializing, like so:\nJavascript\n$('#myTable').removeData(); // remove any data tablesaw has associated with the table\n$('#myTable').table(); //call the plugin again\nPart of the reason this works for me also is because I am destroying the table rows, for other reasons, and then dynamically adding them back in.\nHope this helps.\n. ",
    "panosangelopoulos": "In my opinion tablesaw has some really useful features like toggle and swipe which DataTables.net doesn't, but the pagination is a really huge advantage of DataTables.\n. ",
    "slidenerd": "I triple this, sticky table headers with sticky columns would be awesome. ",
    "harshanarayana": "I too have been facing this issue. \nEspecially in cases when the Row starts with a Number. In my case, when I click on sort, the rows with Number as the first character go to the top and then the sort function stops working. \n. @zachleat  Thanks for getting this issue fixed. :) \n. ",
    "fabiomsb": "In my tablesaw implementation tries I noticed that the div.tablesaw-bar returns to 'stack' mode after receiving new <tr>'s rendered via $.ajax() which should it keep 'columntoggle' mode that I chose with <table ... data-tablesaw-mode=\"columntoggle\">.\nLooking in tablesaw.js I found on line 62 the defaultMode = \"stack\" parameter and I changed its value to \"columntoggle\" thus started to receive duplicates of minimap, from that, I got to solve using:\njavascript\n$.('#myTablesaw').table().data(\"table\").destroy();\n...before calling $.ajax(), and:\njavascript\n$.('#myTablesaw').table().data(\"table\").refresh();\n...within .done(function(){});\nWe certainly need a fix for the mode stack not back when data-tablesaw-mode=\"columntoggle\" is used after a .refresh() call, @zachleat .\n. If you're using data-tablesaw-mode=\"columntoggle\", perhaps you'll need change the defaultMode = \"stack\" parameter (L62) inside your own tablesaw.js, because the div.tablesaw-bar returns to 'stack' mode after receiving new <tr>'s rendered via $.ajax().\nSee issue #110 \n. ",
    "goldsky": "Turned out, I have to destroy() and re- init() the table().\n``` javascript\n$(document).ready(function () {\n    // first tab's content was not rendered,\n    // since it's another bootstrap's trigger,\n    // so must re-initiate fakeBreakpoints() again\n    $(window).resize();\n// attach event on tab's title clicking\n$('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n    var identifier = $(this).data('identifier');\n    $('#' + identifier).table().data('table').destroy();\n    $('#' + identifier).attr('data-tablesaw-mode', 'swipe').table().init();\n});\n\n});\n```\n.data('identifier') is my additional data attribute to select the table.\nhtml\n<li role=\"presentation\" class=\"[[+is_tab_active]]\">\n    <a\n        role=\"tab\"\n        data-toggle=\"tab\"\n        data-identifier=\"table-[[+id]]\"\n        href=\"#tab-content-[[+id]]\"\n        aria-controls=\"tab-content-[[+id]]\">\n        [[+title]]\n    </a>\n</li>\n. ",
    "andrewfleming": "Thanks for the suggestion @bmuenzenmeyer \nFor me, removing tablesaw data and calling the plugin again resulted in a duplicate mini-map above the tables and the width issue remaining.\nI've currently reverted to an even more heavy-handed approach of reloading the page.\n. Hey @shadyhh I haven't found a good solution yet. :( I'm currently refreshing the page on click instead.\n. ",
    "shadyhh": "Hey @andrewfleming \nHave you found a good solution for that problem?\n. ",
    "rgibanez": "I'm also having an issue with this. Any news on this?\n. ",
    "vintyara": "+1\n. One of solutions - https://github.com/filamentgroup/tablesaw/pull/121\n. ",
    "lemooo": "+1\nsame problem....\nsomebody help us....\n. ",
    "tonycarnell": "Hi,\nI'd also find a feature like this enormously useful.\nCongratulations on such a powerful tool by the way!\n. Thanks for your reply wgroenwold, and apologies for not replying sooner.\nFor those also interested in this solution, here's the steps I took to implement wgroenwold's solution:\n1. I downloaded Modernizr from http://modernizr.com/ and placed the modernizr.js file in my assets/js folder. I then created a link in my layout file to call it.\n2. I then added the following code to my theme's custom javascript file (you'll have to substitute '#my-table' for the id you've given to your table):\n```\nfunction tablesawChangeMode(selector, mode) {\n    //selector = id of the table\n    //mode = columntoggle, swipe or stack\nvar $switcher = $(selector).closest('.tablesaw-modeswitch');\n$switcher.remove();\n$(selector).data( 'table' ).destroy();\n\n$(selector).attr( 'data-tablesaw-mode', mode );\n$(selector).table();\n\n}\n$(document).ready(function() {\n    $(window).on('resize', function(){\n        if (Modernizr.mq('(min-width: 640px)')) {\n            tablesawChangeMode(\"#my-table\", \"swipe\");\n        } else {\n            tablesawChangeMode(\"#my-table\", \"stack\");\n        };\n    });\n})(jQuery);\n```\nThat's my solution and it works, but I'm no javascript/jquery expert, so there's probably a far more elegant way to achieve it :)\nTony.\n. ",
    "wgroenewold": "We wrote this today:\n```\nfunction tablesawChangeMode(selector, mode){\n        //selector = id of the table\n        //mode = columntoggle, swipe or stack\n    var $switcher = $(selector).closest('.tablesaw-modeswitch');\n    $switcher.remove();\n    $(selector).data( 'table' ).destroy();\n\n    $(selector).attr( 'data-tablesaw-mode', mode );\n    $(selector).table();\n\n}\n```\nTrigger this function with Modernizr.mq in an if statement and your good to go!\n. Glad I could be of help. Couldn't have figured out this code without my colleague @moorscode, so props to him too please! <3\n. How about checking if the tablesaw-advance-dots has items with a class in them or not and then applying a class to it. Then you can hide it with css.\n. ",
    "Raistlfiren": "Thank you all for creating this simple script to improve functionality with tablesaw. I implemented this as well, and made the script a little bit more versatile. (I use tablesaw on almost every table in our web application) Here is an updated version of the script to just include on one page to automatically detect every table with tablesaw associated with it. I also added minimap mode support as well.\nThanks Tony and wgroenewold!\n``` javascript\nfunction tablesawChangeMode(selector, mode, minimap) {\n    //selector = id of the table\n    //mode = columntoggle, swipe or stack\nvar $switcher = $(selector).closest('.tablesaw-modeswitch');\n$switcher.remove();\n$(selector).data( 'table' ).destroy();\n\n$(selector).attr( 'data-tablesaw-mode', mode );\nif (minimap)\n    $(selector).attr( 'data-tablesaw-minimap', '' );\n\n$(selector).table();\n\n}\n$(document).ready( function() {\n$(window).on('resize', function(){\n    var width = $(document).width();\n    $(\".tablesaw\").each( function() {\n        var selector = '#' + $(this).attr('id');\n\n        if (width >= 500 && width < 1400) {\n            tablesawChangeMode(selector, \"swipe\", true);\n        } else if (width < 400) {\n            tablesawChangeMode(selector, \"stack\", false);\n        };\n    });\n\n});\n\n$(window).trigger('resize');\n\n});\n```\n. ",
    "tonvanalebeek": "Thanks guys, this is exactly what I was looking for!\nI encountered one little problem though, that had me stuck for quite a while.\n@Raistlfiren the .closest in your function did not work for me (it did not remove the modeswitch, and kept adding more of them). I had to change it to .parent().find('.tablesaw-modeswitch') to make it work. Maybe someone else who encounters this problem can use this as a fix :)\nThanks!\n. ",
    "julian-sawicki-xxtract": "TypeError: $(...).table is not a function. ",
    "ghost": "I'm wondering if the solution would be as simple as changing tablesaw-init.js to have this:\nif (!window.WebComponents) {\n   $( function(){\n      $( document ).trigger( \"enhance.tablesaw\" );\n   });\n} else {\n   window.addEventListener('HTMLImportsLoaded', function(e) {\n      $( document ).trigger( \"enhance.tablesaw\" );\n   });\n}\nI think it works in Chrome because Chrome will use native html imports but other browsers use the Polymer webcomponentsjs polyfill.\n. I added that code. It got things started. But tablesawcreate never gets triggered (on Firefox). My knowledge of custom jquery events is insufficient to figure out what is the problem. Anyone got any ideas?\n. +1\nWe are using a tab interface and whenever you switch tabs in mobile the swipe table is full width. The refresh function found here works https://github.com/filamentgroup/tablesaw/issues/163 but only if called 50-70ms after switching tabs (so the table can react to its new width?). So the screen goes full width and then corrects itself, the flash is very ugly. What can we do about this?. Moreover, I can't understand the meaning of this line - L349\nEdit - \nohh I understood the meaning of shoestring over here. But It is overriding the $, what if the jquery $ already available in my app?.. ",
    "craigmdennis": ":+1:\nIt took me ages to diagnose an issue, as part of the script loads but part doesn't function properly when used with Browserify. I ended up having to shim the script in my package.json to include just the file.\n. Looks like it's just a version bump issue.\n. Dup of #128 \n. ",
    "slang800": ":+1: - hit the same issue\n. ",
    "sebnor": ":+1: Same issue when requiring with webpack as well\n. ",
    "niksy": "Is there any progress on this?\n. ",
    "reintroducing": "I completely forgot about this but just got the notification email from the latest reply.  For what it's worth I ended up using DataTables which is a fantastic plugin for responsive tables.\n. ",
    "ralphschmid": "Hello,\neven on your demo ( http://filamentgroup.github.io/tablesaw/demo/swipe.html ), I can reproduce this behavior on every android device with chrome. You just have to swipe the table to a col other than the first and then scroll the page up&down, it keeps resetting the table to the first column.\n. ",
    "breaker1055": "On a mobile device (android at least, both chrome and the default browser), this also happens onFocus of any input text entry within the table.\nClicking into the text input activates the keyboard. The keyboard either scrolls or resizes the screen. The swiped columns reset to first non-persist index and the input loses focus. The keyboard closes. Text entry is impossible.\n. If anyone still has issue with this until it's fixed. This is the workaround/hack I came up with. Find the fakeBreakpoints function and wrap the contents in an 'if' to turn this function on / off by firing events in your js like $(\"#myTable\").trigger(\"stopCaringAboutResizeEvents\"); and resumeCaringAboutResizeEvents.\nvar iCareAboutResizeEvents = true;\n$table.on(\"stopCaringAboutResizeEvents\", function(){\n    iCareAboutResizeEvents = false;\n});\n$table.on(\"resumeCaringAboutResizeEvents\", function(){\n    iCareAboutResizeEvents = true;\n});\nfunction fakeBreakpoints() {\n    if( iCareAboutResizeEvents ){\n        ...\n        }\n}\n. ",
    "vince-rowe": "Hi,\nWe are also seeing this issue on iOS and Android, exactly as written above (on the current demo site and in our examples built using the latest release).\nThere seems to have been no progress on this, is it being looked at? Seems quite a major item as the whole point of this is for mobile tables is it not?\nMany thanks for any input on this.\n. HI there,\nWhile that sounds good, putting it in practice doesn't have the desired effect. Setting the value to something huge like 1000px stops the normal left to right scroll, but the table still jumps to the beginning when you scroll down. So it seems this is not the cause of the issue.\nVince\n. Okay. It happens for us on iOS and Android (latest version) with normal scrolling, not just erratic scrolling. This can also be seen in online testers such as the iOS tester in Browserstack.\n. ",
    "cherner": "I am having the same issue.\nIt seems that when you have a touch with a long duration, with a scroll simultaneously, it breaks the swipe table and triggers an event that then resets the next column to the left... in other words it triggers the 'prev' button event.. or something like that.\nThis behaviour only happens when I get a jQuery warning: \"Ignored attempt to cancel a touchmove event with cancelable=false, for example because scrolling is in progress and cannot be interrupted.\"\n. I think I understand this now. When you swipe with your finger, if your finger goes beyond the horizontalThreshold in left or right directions from the point of origin to the end of your touch (the default is a really low number - 15px) then it will swipe the table left or right accordingly.\nSolution: increase the horizontal threshold! This is probably expected behaviour and not a bug because you can navigate the table by swiping left or right.\nI think it would be useful to provide some documentation on this too. I see a demo provided but not any notes where it explains this configuration. Thanks!\n. Ah, you're right. It still jumps to the beginning, but I only see this behavior when I'm scrolling down and up aggressively. Simply scrolling down at a \"normal\" pace doesn't seem to reproduce it for me.\n. ",
    "Kennybierman": "The column on the left is persistent and the second column  appears to be 50% width same as first column. It is that the text in the left persistent column flows over into the right handed column. The demo will do this in Safari once the width reachs approx. 320 px.\n. ",
    "frlinw": "+1\n. ",
    "johnny5th": "This is by no means completed or fleshed out, but seems to be working on the site I'm building. It creates a row before each data row with a single td with the data row's first cell's data and clicks to toggle it.\nPopped into tablesaw.stackonly.js line 208.\n```\n// get tbody rows to add accordion toggle rows before each\n    var rows = this.$table.find('tr:not(:has(th))');\n    rows.each(function() {\n  // get first cell's content to place in toggle row\n  var title = $(this).children().eq(0).html(),\n      row = $(\"<tr class='tablesaw-row-toggle'></tr>\");\n      cell = $(\"<td colspan='\" + colstart + \"'>\" + title + \"</td>\");\n\n  // add toggle functionality\n  cell.click(function() {\n    row.toggleClass('on').next().toggleClass('open');\n  });\n\n  $(this).before(row.html(cell));\n});\n\n```\n. ",
    "dunn": "According to #61 it was actually removed into a separate repository: https://github.com/filamentgroup/fixed-sticky\n. ",
    "monsieur-z": "Have you tried calling the plugin again once your data has been fetched?\njavascript\n $('.tablesaw').table()\nThat did the trick for me.\nMy mistake was to call it before the ajax request was completed, therefore it was called before the rows were rendered. With the Stack-Only version, part of the layout is handled with CSS, which is why I did not realize at first that there was an issue with how I called the plugin.\n. ",
    "juliolemus": "Yeah you can grab the sizzle.js file from the website and use that instead since its just the sizzle code without the included jquery. This will allow  you to keep using  your own jquery version. \n. ",
    "mathmatomancer": "This affects some of the demos too.\n. ",
    "maxariss": "Yea this is killin' me right now :grin: \n. Everyone: Turns out this is a bug with Chrome 45 - not table saw.\nTo fix: Remove all of the whitespace between your table cell's code (its ugly but seems to do the trick for now).\n\n  stuff\n\n\n  more stuff\n\nNeeds to be ...\nstuff\nmore stuff\n. I know, right ?! I've just left a  TODO:  in my code, and I'll deal with it later haha.\n\u00af(\u30c4)/\u00af\n. ",
    "robtree": "Also seeing this unexpected behaviour on Chrome 45/Android 4.4.2 after rotating screen once or more.\n. ",
    "zuDevonRW": "I'm seeing it to on my project. Broken in Chrome 45. Works as expected in Firefox 41.\n. Just tried it. Works like a charm. Weird.\n. ",
    "kettultim": "I know this is old but would love to see this as well... trying to figure it out atm but it's mega buggy.\n. ",
    "domschmidt": "It would be very nice to have this feature. Thanks.\n. ",
    "Yago": "Maybe I will fork the project for a proper NPM registery :smirk:\n. ",
    "towen999": "No.  My initial request was to be able to position to a specific column and row for the initial focus in the view.\nFor example, assume the table is 20 columns by 6 rows and the size is such that only 5 columns (e.g., iPhone or Android screen) can be contained in the view and we want the last columns (the ones with the most current information) to be selected and shown in the initial view.  The user can then scroll to the earlier columns if desired, but the latest information (i.e., the rightmost columns) are the ones to be displayed first.\nTom Owen\nFrom: Zach Leatherman [mailto:notifications@github.com]\nSent: Wednesday, September 14, 2016 11:54 AM\nTo: filamentgroup/tablesaw tablesaw@noreply.github.com\nCc: towen999 towen999@msn.com; Author author@noreply.github.com\nSubject: Re: [filamentgroup/tablesaw] set focus to specific row and columm (#147)\nI assume by focus, you mean visibility?\nHave a look at data-tablesaw-priority: https://github.com/filamentgroup/tablesaw#toggle\nPlease reopen if I\u2019ve misunderstood!\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/filamentgroup/tablesaw/issues/147#issuecomment-247060670, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AOHnkijyC4VXy6EuWH42YTnyYvOVuU4cks5qqBixgaJpZM4GCVnx.\n\n[Avast logo] https://www.avast.com/antivirus\nThis email has been checked for viruses by Avast antivirus software.\nwww.avast.comhttps://www.avast.com/antivirus\n. ",
    "jb510": "+1 on this. I wrongly assumed data-tablesaw-priority also controlled which columns were hidden at what width in swipe mode.  \nAt the narrowest width, with a 6 column table I want to see two columns, 1 and 6, with 2,3,4, 5 hidden (this is the same as described above I believe and in it's simplest form maybe just is a \"left vs right\" direction to hiding columns)\nThis seems pretty easy by defining a direction, hide 2, then 3 then 4 but keep 5 as the screen narrows, or  hide 5, then 4, then 3 but keep 2 as the screen narrows.\nIdeally however at the narrowest width, with a 6 column table one could set two columns visible, 1 and #4, with 2,3,5,6 hidden.  4 would be the \"focus\" column.\nThis is a bit more more complicated because the focus column is in the middle, so one would be able to swipe right or left from it.  \nHowever the later also leads to the crazy case of showing columns 1, 3, 5.  Then what happens? the UI all falls apart, swiping would make no sense...  maybe just set a direction or focus column.. ",
    "jeepstone": "Swifferly, did you find a solution to this? I have a similar problem.\n. ",
    "swifferly": "Not yet.\nFrom: Pete Jones [mailto:notifications@github.com]\nSent: 19 April 2016 18:08\nTo: filamentgroup/tablesaw tablesaw@noreply.github.com\nCc: Hesseltje van Goor hesseltje.vangoor@eigentech.com\nSubject: Re: [filamentgroup/tablesaw] Sorting & showing \\ hiding detail rows (#148)\nSwifferly, did you find a solution to this? I have a similar problem.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHubhttps://github.com/filamentgroup/tablesaw/issues/148#issuecomment-212021093\n. ",
    "TheWilks": "Code causing the issue in the \"tablesaw.js\".\nif( event && $( event.target ).closest( \".\" + self.classes.popup ).length ) {\n            return;\n    }\nI fixed this issue in my case only by just including this code in my on page JS. Maybe somthing suimiler can be applied to the actual plugin in place of this line. \n$(\"div.dialog-table-coltoggle.tablesaw-columntoggle-popup\").click(function(e) { \n            e.stopPropagation(); \n    });\nMaybe something similar can be applied to the \"tablesaw.js\" to fix the issue in every case.\n. ",
    "jchen1990": "This occurs because when the popup is opened, an event listener listens only once for any click on the document.  I ran across this issue as well and made a change to my local copy of the tablesaw library in the closePopup function.\njavascript\nif( event && $( event.target ).closest( \".\" + self.classes.popup ).length ) {\n    //User clicked in the popup, continue listening to document clicks to close popup.\n    $( document ).unbind( 'click.' + tableId, closePopup );\n    window.clearTimeout( closeTimeout );\n    closeTimeout = window.setTimeout(function() {\n        $( document ).one( 'click.' + tableId, closePopup );\n    }, 15 );\n    return;\n}\nNow, instead of just returning when the event comes from within the popup, I am unbinding and rebinding the click event, essentially resetting the event listener.  This code snippet is identical to what is happening in the openPopup function.\n. ",
    "NDexxx": "I had the same problem like you ,but i managed to solve it by updating the tablesaw.js file, I was using older version of it :) hope that works for you too.\n. ",
    "Firebirdjim": "I just figured this out myself, if you add class=\"tablesaw-sortable-descending\" to your  column header, it makes the column sort display descending sort.\nOf course, this doesn't necessarily means the actual cells are sorted in that order, it just makes the initial sort to display as descending rather than ascending.\n. ",
    "wijwoj": "Yup. That's as far as I got and rebuilding the data resets the sort so no luck there/ Thanks anyway - I ended up creating my own custom sort and making sure the data passed in was sorted correctly when the table was created which got round the problem.\n. ",
    "gerbil": "Any ideas how to do it for default sorting columns data?\n. ",
    "shandy-pgdx": "As was mentioned by @Firebirdjim & @wijwoj in their previous comments, it seems like the best way to achieve this is to 1) add the class=\"tablesaw-sortable-descending\", and 2) render the initial table HTML to match the default order.  This combination will ensure that the UI matches what you want and that the data is actually in the order you want.\n. ",
    "joshpalmeri": "I'll make the case! In our CMS, we offer a plugin for users to create a table and enter their data. For example, a special list of higher ed courses that are offered in a certain group. Data fields are program, course name, date and location. The only options I have is 1) trigger a sort on load, or 2) have the plugin give an option to do on initialization. What do you suggest?\nExample referenced: http://www.stonybrook.edu/commcms/cce/schedule.html. ",
    "veksen": "I just came across this particular issue. The breakpoints are useless in my scenario. Priority 1 doesn't fit the largest breakpoint, so I'm at a lost.\nI'm thinking about implementing it myself, or setting up a PR.\n. @downhiller I am interested for sure!\n. ",
    "jeesus": "Okay, found a way. Added following code to Tabs event when tab is loaded successfully:\n$( document ).trigger( 'enhance.tablesaw' );\n. ",
    "Theophilix": "Hello,\ndoes your commit support natural sorting? Please contact me!\nTheophilix\n. Via Bountysource I offer 50$ for this issue: https://www.bountysource.com/issues/36860904-natural-sort-is-not-working-in-tablesaw.\nI want natural sorting to work in table saw like it does here: https://github.com/overset/javascript-natural-sort. \n. ",
    "Matthias-Hermsdorf": "We have tables inside Accordion Panels. Wenn inizialising the tablesaw at dom ready, they are hidden.\nThanks to @zachleat I could resolve this. \n$( e.target ).trigger( \"enhance.tablesaw.refresh\" ); would be nice.\n. ",
    "daedam": "It looks like the bind and unbind functions have been deprecated in jQuery 3.0. Any calls to bind in the plugin code should also be changed to on (and unbind to off) to make sure that everything remains compatible.\nhttps://github.com/jquery/jquery-migrate/blob/master/warnings.md#jqmigrate-jqueryfnbind-is-deprecated\n. ",
    "681consulting": "Testing this out I found that it seemed to work ok with a part of the same file when declaring the doctype (it wasn't previously declaring this).\nIs anyone able to confirm that this makes sense, i.e. without doctype declaration jQuery possibly wasn't working as it should have been?\nTried with latest version of jQuery as well as 1.11.3 (which is what currently is used on this page) and seemed to work ok ???\nTim\n. ",
    "jaichandra": "pull request: https://github.com/filamentgroup/tablesaw/pull/210\n. Removed dist directory\n. ",
    "Cybso": "Updated the patch to modify the b's HTML content only when it differs. Otherwise refresh() couldn't be triggered by an MutationObserver because each update to the labels content would trigger another mutation event.\ntablesaw.stackonly.js_add-stack-refresh.v2.patch.txt\n. ",
    "dseals": "I solved my own issue here with CSS. I'm adding this comment in case anyone else should want to do the very same thing. \nWithin your HTML, make sure the tablesaw table is contained within a div that has the following css:\nposition: relative;\nUpdate the 'tablesaw-bar' element in tablesaw.css (around line 301) with the following:\n.tablesaw-bar {\n  clear: both;\n  font-family: sans-serif;\n  font-size: 14pt;\n  position: absolute; \n  bottom: 0; \n  margin-left: auto; \n  margin-right: auto; \n  left: 0; \n  right: 0;\n  width: 210px;\n}\nYou will have to also set the height of the div containing the tablesaw table so that the swipe navigation appears properly. \n. ",
    "SDEBEUL": "hi when i apply this the position moves fine. but it breaks the functionality. the dropdown does not work anymore. Did you do somethine else? . ",
    "Ruth-Cantoni": "In toggle mode, it would be interesting to be able to start with some hidden columns and then let the customer decide whether to show them. ",
    "sweetroll": "+1\n. ",
    "jgibson": "I solved the refresh problem by destroying the table and recreating it. I'd try:\njavascript\n$(this.elementRef.nativeElement).table().data(\"table\").destroy()\n$(this.elementRef.nativeElement).table()\n. AFAICT tablesaw doesn't support rowspans or colspans in the data. Colspans in the headers are respected, however. Taking a look at initCells (as of 2.0.3) you can see that Tablesaw scans the table headers and then assigns the cells in the rows that correspond to each header to be toggled on or off later. Unfortunately the assignment algorithm ignores any colspans in the data. If you were to change your footer to look like this:\nhtml\n<tfoot>\n        <tr>\n            <td>Always here</td>\n            <td colspan=\"2\">Total</td>\n            <td>150</td>\n        </tr>\n</tfoot>\nThen I'd expect that toggling off the Budget column would hide the total column in the footer, but that the Actual column would have no effect on it (probably it would instead hide the 150 cell in the footer).\nI adjusted the assignment algorithm to allow colspans in the data, but with the caveat that a cell with a colspan in the data can't cross multiple columns in the header. I'll submit a PR or something so that others can take advantage of it.\nYour problem is thornier because instead of simply hiding or showing cells you'd have to adjust the colspan of your data cells on the fly. Taking a look at issue #48 you can see that other people have the reverse requirement (complex colspans and row spans in a multirow header). I can't see a way to provide the functionality that would satisfy both of you without a creating a comprehensive model of the table (as opposed to just assigning a group of cells to a single column header) and increasing the complexity of the toggling algorithm.\n. I opened #225 for the simple case that I described above.\n. ",
    "juanjosesanchezesteban": "Hi,\nI'm working with Angular 4 and Tablesaw v3.0.2\nI initialize my table by calling $(document).trigger(\"enhance.tablesaw\") but when I want to refresh it by calling $(this.elementRef.nativeElement).table().data(\"table\").refresh() jQuery throws an exception telling me that $(...).table is not a function\nAny ideas?. ",
    "apdrsn": "Thank you very much! I will take a deeper look when I return from vacation. \n. ",
    "fortm": "Only when I am running as below on second ajax request without table , errors go away related to refreshToggle -\n$(window ).unbind( \"resize.table-987\" );\nIs there any wrong configuration in my setup ?\n. I replaced 2.0.1 tablesaw.js with latest v3.0.0-beta.0 tablesaw.jquery.js and same with css\nI am using jquery 1.8.3\nOn resizing console on pages without table , I get now below error ->\ntablesaw.js:521 Uncaught TypeError: Cannot read property 'cells' of undefined\n. I am current intercepting all Ajax requests and doing as below -\nSince without this even new version gives error\nXMLHttpRequest.prototype.send = function(data) {\n            $(window).OffRegexNameSpaces(\"resize\",/^table-\\d{3}/);        \n                send.call(this, data);       \n };\n})(XMLHttpRequest.prototype.send);\nFor regex function, using below link -\n[http://stackoverflow.com/questions/38806912/unbind-to-multiple-namespaced-events-in-jquery]\n. ",
    "dragonSwords98": "i can confirm this issue. When I include tablesaw-jquery.js, I also do not see any headers in stack mode. the error in console reads 'shoestring is undefined' from tablesaw-init.js. Using tablesaw.js worked fine though.\n. ",
    "cbornhoft": "Further to this, when changing ( shoestring || jQuery ) to ( jQuery || shoestring ) on the last line of tablesaw-init.js, the script gives no errors and functions as expected.\n. ",
    "Rajeshrules27": "hi geeks ..\ni  have the same issue when i use this in my app. please help me to solve this issue . i can't understand how to solve this.. ",
    "VickyMahir": "@Bijayini we can use this by create directive for this. See below :\n```\nAppModal.directive('tableSaw', function ($timeout) {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attrs) {\n                if (scope.$first === true) {\n                    $timeout(function () {\n                        $(document).trigger(\"enhance.tablesaw\");\n                    },1000);\n                }\n                if (scope.$last === true) {\n                        $timeout(function () {\n                            $('table').table().data(\"table\").refresh();\n                        }, 1000);\n            }\n        }\n    }\n})\n\n```\nHTML code like this : \n<div class=\"table-responsive\">\n        <table class=\"tablesaw table table-bordered\" data-tablesaw-mode=\"swipe\" data-tablesaw-minimap>\n            <thead>\n                 <tr>\n                    <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"persist\"></th>\n                    <th scope=\"col\" ng-repeat=\"key in array\" align=\"center\">\n                    {{key}}\n                    </th>\n                    <th scope=\"col\" data-tablesaw-priority=\"persist\">Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr ng-repeat=\"data in yourArray\" table-saw>\n                    <td ng-bind=\"data.Name\"></td>\n                    <td ng-repeat=\"value in array\">{{value}}</td>\n                    <td>Sum of Row</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\nSee here i have bind table saw on header bind then i have refresh that on last element bind.\nIf you want to update that on scope value change than you can do as per below :\n```\nAppModal.directive('tableSaw', function ($timeout) {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attrs) {\n                if (scope.$first === true) {\n                    $timeout(function () {\n                        $(document).trigger(\"enhance.tablesaw\");\n                    }, 1000);\n                }\n                if (scope.$last === true) {\n                    scope.$watch(Here your updated value, function () {\n                        $('table').table().data(\"table\").destroy();\n                        $timeout(function () {\n                            $('table').table().data(\"table\").refresh();\n                        }, 1000);\n                    })\n            }\n        }\n    }\n})\n\n```\n. ",
    "rachael-ross": "Is a fix in the works for this yet? I've just integrated it into a project on tight time constraints and found the same issue. \n. Actually, when using tablesaw.js, the persistent column grows just slightly, but when using tablesaw.jquery.js, it collapses severely along with the other columns starting to overlap one another\n. ",
    "cschults": "FYI: In my jQuery code I'm identifying the ID of the table in question (for example: tablesaw-5652) and passing to the following function where I've confirmed that $ is an alias for 'shoestring':\nfunction table_refresh(id) {\n  $(\"#\" + id).data('table').refresh();\n}\nHowever, I'm getting the following error: Uncaught TypeError: Cannot read property 'refresh' of undefined\n. For the error noted in my previous comment, I resolved this by using 'tablesaw' instead of 'table'. This caused the number of visible columns to be fixed, but unfortunately limited it to only one non-persistent column when viewing on my phone where I knew additional columns could fit.\nWhat seems to be working for me, after re-reading the documentation, is to not include tablesaw-init.js and use trigger(\"enhance.tablesaw\") when showing a hidden table instead of refresh().\n. ",
    "leptest": "Thanks! This PR helped me get tablesaw working with es6 + browserify.\nIt would probably help others if the instructions were merged to the main branch.. ",
    "nickalbrecht": "Be nice if this could be persisted to LocalStorage or SessionStorage natively, that way they would be persisted against full page refreshes, and potentially even separate sessions as a user preference for common table display setups. But this would be useful to have :-)\n. ",
    "falconxunit": "153 .",
    "JsonGuy": "I had the same problem with swipe mode first column, since i have no time to wait answers, i just overwrite it like this.\nin your case:\n    width: 100%!important;\n. ",
    "mlingureanu": "in tablesaw.js replace line 2933 with : width = $(this).width();. ",
    "markvaneijk": "I think you forgot to include the tablesaw-init.js :). ",
    "charlesastwood": "I am seeing this too, did you manage to sort it? (tablesaw - v3.0.0-beta.4, jquery plugin). ",
    "posixpascal": "I'm having the same issues (tablesaw-init is included). Manually triggering enhance.tablesaw doesn't work either.. I'm using jQuery to set the tablesaw classes like this:\n$(\"table:not(.no-tablesaw)\").each(function(){\n            $(this)\n            .addClass('tablesaw tablesaw-stack')\n            .data(\"tablesaw-mode\", \"stack\");\n});\nThen I trigger the ?enhance.tablesaw` event on the table (triggering it on document.body) didnt' work as well.\nJust as I'm typing it... You do mean data-tablesaw-mode instead of data-mode right? \nIt works and collapses the columns but skips the label part... not sure why. I didn't got it working yesterday right away and stopped tinkering with it. Maybe it has to do something with my dynamic page, I'll check later if it works on a plain site with nothing else but tablesaw.. Thanks mate. It worked, I'm not exactly sure why? I thought there is no difference between attr and data (except that jQuery tries to JSON.parse the data value on retrieval).\nSo my current code looks like this:\n$(\"table:not(.no-tablesaw)\").each(function(){\n            var currentTable = $(this);\n            currentTable.addClass('tablesaw tablesaw-stack');\n            currentTable.attr(\"data-tablesaw-mode\", \"stack\");\n            $(document.body).trigger( \"enhance.tablesaw\" );\n});\nMy HTML:\n<link rel=\"stylesheet\" href=\"/site/templates/bower_components/filament-tablesaw/dist/stackonly/tablesaw.stackonly.css\">\n<script src=\"/site/templates/bower_components/filament-tablesaw/dist/stackonly/tablesaw.stackonly.js\"></script>\nThat's it. :) Big thanks man.. ",
    "adrianpuescu": "My mistake was that I was adding the tablesaw classes and data-tablesaw-mode to a parent container, instead of the table. Check if you didn't do the same mistake first.. Yeah, 'data-tablesaw-mode' (updated my comment).\nIn your particular case, I think you'll have to replace\n.data(\"tablesaw-mode\", \"stack\")\nwith\n.attr(\"data-tablesaw-mode\", \"stack\");. ",
    "jaketoolson": "@zachleat was there any solution generally speaking? \n@adrianpuescu of course I was including the JS.. ",
    "Yearhouse": "Nm figured it out by replacing the number manually and then doing an update.. ",
    "tomyouds": "@zachleat do you have any feedback on this?. ",
    "wolfcreative": "I have a similar problem. How to solve it?. ",
    "seyfer": "+1. ",
    "Melviyn": "same issue, no idea how to fix it ?. ",
    "CCvinc": "Why not to use text-overflow: ellipsis; or word-wrap to avoid long numbers/words. No?. NB : the mozilla bug is strange cause if you move the window size, the table is swipped. And you think it is working... But after a refresh with a small window displaying only 1 result column you now have 3 results columns.. Hello zachleat,\nFirst of all i want to say you THANK YOU for your great job and for your quick help! \nThe current version is doing :\n1. A B C D E\n2. A B C D \n3. A B _  _\nWhat i'm looking for is :\n1. A B C D E\n2. A _ C D E\n3. A _ _ _ E\n. ",
    "Dan-Ashdown-FFT": "Thanks for the response CCvinc, that's not a workable option for us at the moment. Truncating long numbers makes them somewhat meaningless and wrapping them makes it 2 different numbers. \nIn the above screen shot it would be ideal if Tablesaw only showed 3 columns.. Thanks @zachleat, I've updated the JS Fiddle to use the latest JS and CSS from the master branch but it has the same issue I'm afraid: https://jsfiddle.net/v9of0aq4/4/. I only occurs when you swipe:\n\n\n. ",
    "Webtransformer": "I still have this bug in the latest beta.. +1. ",
    "edwardpayton": "Hi Zachleat,\nI came here to ask about the same thing. My table has lots of columns and I want to group the columns in the toggle list into categories, which will need different html that the standard toggle.\nHave you made any progress with generating different markup?\nAll the best\nEdward. ",
    "DanielRuf": "Could be useful to have this feature. I guess we just need simple for-loops instead of the each commands or track persisted and non-persisted and check if they are allowed to be hidden.. It seems we have to loop over them with a reversed for-loop:\n```\n$headerCells.each(function(index) {\n                var $t = $(this),\n                    isPersist = $t.is('[data-tablesaw-priority=\"persist\"]');\n            persist.push(isPersist);\n            sum += headerWidths[index];\n            sums.push(sum);\n\n            // is persistent or is hidden\n            if (isPersist || sum > containerWidth) {\n                visibleNonPersistantCount--;\n            }\n  });\n\n``.$($headerCells).get().reverse().eachwould be a first step.. Push. We still need this. Alternatively we can usepatch-package.. Hm, I guessinteractive ` interactive is missing in the PR.\nhttps://developer.mozilla.org/en-US/docs/Web/API/Document/readyState\nThis is for example the case when we use requireJS.. Exactly. I could try to force always true but it seems the initialization is sometimes a bit flaky with requireJS (which is used in an ecommerce solution where we try to implement tablesaw). It's mainly meant as information that this might not always work in some cases like ours where we have lazyloaded js files.. I'll try to dig a bit deeper then and provide some tests to cover this usecase.. Not sure I tried to use it in a Magento project and it did throw an error (we use require.js there). Probably was a broken build or another issue.. ",
    "WilliamStam": "awesome! sorry for not replying. things been a bit hectic. \ni took a look at the code used for the plugin. before looking i thought there was some major voodoo at play. couldnt understand how on earth you managed to stack the table :P very clever. \ni then also realized i have no need for a complete can-do-everything type plugin. i purely need to stack it. and my tables will almost always be the same (except for the amount of columns changing - users can select which field they want visible)\ni think the changes you implemented would definitely improve the plugin tho. i created a mockup to see if it works and indeed it does! i might implement it into this project some time in the future tho (when my hack-it-together 15 line implementation self combusts and sets a few kittens on fire). . ",
    "simonwatt": "@zachleat I need this functionality (data-tablesaw-ignorerow) in a project I'm working on, so I installed 3.0.1-beta.21\nIn Toggle mode it seems to be working well. However, in Swipe mode it seems to cause lots of issues. For example as soon as I click on one of the swipe arrows (previous column and next column) the visible columns no longer take up the width of the table. \nI need ability to have fixed columns (which I don't think I can get in Toggle mode) so it's not an option to switch everything to Toggle mode.\nIs this data-tablesaw-ignorerow implemented in Swipe mode in 3.0.1? Or am I doing something wrong?\nThanks. The issue on swipe mode with data-tablesaw-ignorerow seems to be that the colspans aren't adjusted on the ignored row as the number of visible columns are changed.. I'm using it with ReactJS and it's working fine, I've got several components that render tablesaw tables.  Maybe it's a different issue, e.g how you are referencing the tablesaw js and css files?. ",
    "oliveiracdz": "Any workaround for the issue on swipe mode, @simonwatt ? https://github.com/filamentgroup/tablesaw/issues/274#issuecomment-297604918. ",
    "saiballo": "I have the same problem. ",
    "josephsong": "An easy way to work around date sorting specifically, is to precede the formatted date with a machine-sortable version, and then use CSS to hide the machine-sortable version. ISO format works nicely. \nNote, however, that display:none probably won't work. It has to be technically visible, but can be hidden from the user. \nFor example, \nhtml\n<table class=\"tablesaw tablesaw-stack\" data-tablesaw-mode=\"stack\" data-tablesaw-sortable>\n    <thead>\n    <tr>\n        <th data-tablesaw-sortable-col>Date</th>\n        <th data-tablesaw-sortable-col>Something else</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n        <td>\n          <span style=\"position: absolute; left: -9999px; width: 1px; height: 1px; overflow: hidden;\">\n            2017-09-01T10:51:24\n          </span>\n          Sep 1\n        </td>\n        <td>5</td>\n    </tr>\n    <tr>\n        <td>\n          <span style=\"position: absolute; left: -9999px; width: 1px; height: 1px; overflow: hidden;\">\n            2017-08-31T10:51:24\n          </span>\n          Aug 31\n        </td>\n        <td>10</td>\n    </tr>\n    </tbody>\n</table>. ",
    "kevinisaac": "How is pagination third party code? I'd love to see Tablesaw implementing the pagination functionality (show N rows at a time - using JS) like the one in Datatables.. ",
    "erakashpatel": "Hello,\nCan you please provide me demo?\nso i can check it what is the problem?\nThanks\nakashpatel. ",
    "chesterlau": "You can hook up the tablesaw refresh when pagination buttons are clicked.\nFor example:\n$(\".pagination\").click(function () {\n  $('#myTable').tablesaw().data(\"tablesaw\").refresh();\n });\nThis will display all the labels when pagination occurs.\n. ",
    "namu2896": "please help me to add pagination to my data table, I don't search fields in search box of data table and also unable to see the page number. please any one can help me. its very urgent. ",
    "whiteboardmonk": "+1 facing similar issue while trying to include this manually  in an Angular project (ionic framework). ",
    "edmondko": "+1\n. ",
    "amrithyerramilli": "We have got this working with Angular 1.4.3 and Ionic Framework.\nhttps://github.com/filamentgroup/tablesaw/#manual-initialization-of-tablesaw-components\n* You should not use the tablesaw-init.js\n\nIn the main page (usually index.html), add the script and style references\n\n<link rel=\"stylesheet\" href=\"tablesaw.css\">\n<script src=\"tablesaw.js\"></script>\n<script src=\"tablesaw-init.js\"></script>\n\nIn your view, add the necessary table markup\n\n<table id=\"my-tab-content\" tableSaw class=\"tablesaw tablesaw-swipe\" data-tablesaw-minimap data-tablesaw-mode=\"swipe\">\n   <thead>\n      <tr>\n         <th class=\"title\" scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"persist\">Movie Title</th>\n         <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col data-tablesaw-priority=\"3\">Rank</th>\n         <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"2\">Year</th>\n         <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"1\"><abbr title=\"Rotten Tomato Rating\">Rating</abbr></th>\n         <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"4\">Gross</th>\n         <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"2\">Year</th>\n         <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"1\"><abbr title=\"Rotten Tomato Rating\">Rating</abbr></th>\n         <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"4\">Gross</th>\n      </tr>\n   </thead>\n   <tbody>\n      <tr>\n         <td class=\"title\"><a href=\"http://en.wikipedia.org/wiki/Avatar_(2009_film)\">Avatar</a></td>\n         <td>1</td>\n         <td>2009</td>\n         <td>83%</td>\n         <td>$2.7B</td>\n         <td>2009</td>\n         <td>83%</td>\n         <td>$2.7B</td>\n      </tr>\n      <tr>\n         <td class=\"title\"><a href=\"http://en.wikipedia.org/wiki/Titanic_(1997_film)\">Titanic</a></td>\n         <td>2</td>\n         <td>1997</td>\n         <td>88%</td>\n         <td>$2.1B</td>\n         <td>1997</td>\n         <td>88%</td>\n         <td>$2.1B</td>\n      </tr>\n      <tr>\n         <td class=\"title\"><a href=\"http://en.wikipedia.org/wiki/The_Avengers_(2012_film)\">The Avengers</a></td>\n         <td>3</td>\n         <td>2012</td>\n         <td>92%</td>\n         <td>$1.5B</td>\n         <td>2012</td>\n         <td>92%</td>\n         <td>$1.5B</td>\n      </tr>\n   </tbody>\n</table>\n\nIn your controller add this to instantiate tablesaw :\n\n$scope.$on('$viewContentLoaded', function(){\n    //Here your view content is fully loaded !!\n        angular.element(document).trigger(\"enhance.tablesaw\");\n    });\n\nIf you are using Ionic Framework, use ionic's view loaded event.\n\nPlease note that you will have to trigger the event enhance.tablesaw on the document and not the individual table element as mentioned in the tablesaw docs. ",
    "ArulRozario": "How can I initialize Tablesaw in angular 5 components?. ",
    "jdieguezbean": "@ArulRozario Hi, you managed to initialize table saw in angular 5 component??. ",
    "ConneXNL": "Now that you bring react up. Would also love a responsive react library like table saw!. ",
    "khmelevskii": "thanks. ",
    "marketingstarz": "@ConneXNL @PeterMerkert checkout https://www.npmjs.com/package/react-smart-data-table. ",
    "CaptainJoy": "Actually, I'm noticing there is extra space above and below the header row of the \"data-tablesaw-sortable\" table.. ",
    "HongPong": "The problem seems to be that the first column can't be set to persist while allowing colspanned cells (like in example above). If i try to force the matter by setting \"display: table-cell\" on the cells I really want, that works okay for if they span the whole way, but if I try it on the first column then it can't calculate the width of the remaining columns correctly and they come in too narrow.. Swipe table types. This is the table tag we have right now (twig):\n<table class=\"tablesaw tablesaw-swipe sd-subsection\" data-tablesaw-mode=\"swipe\" data-tablesaw-mode-switch=\"\" data-tablesaw-minimap=\"\" summary=\"{{ row.summary }}\">. Thanks, appreciate the consideration on this. The only other issue we had with tablesaw was it's hard to tell on MS Edge what prompts tables to kick into tablesaw mode instead of regular display mode.. ",
    "boudga": "I added thead and tbody to resolve it\nOn Jul 10, 2017 12:27 PM, \"Zach Leatherman\" notifications@github.com\nwrote:\n\nCan you attach a test case? I don\u2019t see that on the demos.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/filamentgroup/tablesaw/issues/303#issuecomment-314176436,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAYJ6A5u9hXRpj3qITU8t_RGYfSiu4cZks5sMl7ugaJpZM4OS35g\n.\n. \n",
    "metalandcoffee": "I'm getting this error as well.. Is there a fix for this yet? I use both HTML and PHP in <th> when I'm working with filtering so it's not as simple as removing new lines since I have PHP functions inside the tags. . ",
    "jerone": "Currently having this issue, but I was able to consistency replicate it. The issue is the use of newlines inside the table header cells.\nThis will work (taken from the example):\nhtml\n<table class=\"tablesaw tablesaw-stack\" data-tablesaw-mode=\"stack\">\n    <thead>\n        <tr>\n            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"persist\">Movie Title</th>\n            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col data-tablesaw-priority=\"3\">Rank</th>\n            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"2\">Year</th>\n            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"1\"><abbr title=\"Rotten Tomato Rating\">Rating</abbr></th>\n            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"4\">Gross</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"title\"><a href=\"http://en.wikipedia.org/wiki/Avatar_(2009_film)\">Avatar</a></td>\n            <td>1</td>\n            <td>2009</td>\n            <td>83%</td>\n            <td>$2.7B</td>\n        </tr>\n    </tbody>\n</table>\nBut this won't (notice the new lines inside the th-elements):\nhtml\n<table class=\"tablesaw tablesaw-stack\" data-tablesaw-mode=\"stack\">\n    <thead>\n        <tr>\n            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"persist\">\n                Movie Title\n            </th>\n            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-sortable-default-col data-tablesaw-priority=\"3\">\n                Rank\n            </th>\n            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"2\">\n                Year\n            </th>\n            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"1\">\n                <abbr title=\"Rotten Tomato Rating\">Rating</abbr>\n            </th>\n            <th scope=\"col\" data-tablesaw-sortable-col data-tablesaw-priority=\"4\">\n                Gross\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"title\"><a href=\"http://en.wikipedia.org/wiki/Avatar_(2009_film)\">Avatar</a></td>\n            <td>1</td>\n            <td>2009</td>\n            <td>83%</td>\n            <td>$2.7B</td>\n        </tr>\n    </tbody>\n</table>. @zachleat commented on Nov 15, 2017, 11:24 PM GMT+1:\n\nI haven\u2019t seen this, can you attach a test case?\n\nI moved above test-case html to JsFiddle:\n Working: http://jsfiddle.net/jerone/ys6rtwe2/2/\n Not working: http://jsfiddle.net/jerone/ys6rtwe2/4/. ",
    "thewrush": "Just found I needed to add data-tablesaw-ignorerow to the hidden row.  Closing this issue/question.. ",
    "drogers98": "Thanks for the explanation, makes sense to me, just wanted to make sure it wasn't an oversight is all. Cheers!. ",
    "brendon": "Sounds good :D. ",
    "olhapi": "Closed as duplicate of https://github.com/filamentgroup/tablesaw/issues/307\nIn my case, br tag inside table header causes the issue.. ",
    "christian-fei": "Having the same issue.\nDid you manage to resolve this issue @francescozaia ?. ",
    "francescozaia": "Yep, all good thanks!\nPushed the fix on my test repo, in case anyone wants to check it out.. ",
    "thedamon": "It sounds like tablesaw only evaluates tables that are present on load by default. I would create a TableSaw component and on its mounted hook run Tablesaw.init() on the specific table you want to saw.. You might need to call this again on any change to the data as well.. i'm not sure if that will be a problem with memory (calling init() over and over again without a destroy method). \nTablesaw looks to be written from a more allthedom approach so it might be tricky to use in a component system.. typically when integrating a non-vue script in a component we'd look for methods like create/destroy/update to call on the script itself to keep it in sync with the Vue data and properly dispose of it when it isn't needed anymore. ",
    "aldrindizonh": "I have the same problem :(. ",
    "dhavalwd": "I am in the same pool. I want to store selection for each user and then when user comes back they have their selected columns shown. . ",
    "elBotija": "The function, refreshPriority() don't exist, in olds commits, he remove functinon.. ",
    "noah-rush": "This only happens when using the buttons to trigger the jump, not when using the slide method. issue is still occuring see test case here --https://github.com/filamentgroup/tablesaw/issues/358. ",
    "alexeydebely": "Did you find a solution to the problem?\n\nThis only happens when using the buttons to trigger the jump, not when using the slide method\n\n. ",
    "dszewczyk1": "You should not pass the table itself into init(), but rather a container in which there's a table with tablesaw attributes.\n<div id=\"myTableContainer\">\n<table id=\"myTable\" class=\"xnt-table-fr\" data-tablesaw-mode=\"swipe\">\n</table>\n</div>\nAnd then\nTablesaw.init(document.querySelector(\"#myTableContainer\"));\nAlso in my case (maybe because I was doing dynamic import) I had to call _init method instead.. ",
    "Anastasia93": "@dszewczyk1 tnx a lot, it resolves my problem.. ",
    "porcus": "I've created a pull request to address this issue.. @DanielRuf - I'm sorry if this didn't work for your scenario.  The interactive document readystate is not included in my PR, because based on my understanding and my tests, the document has an interactive readystate before the DOMContentLoaded event is triggered, so I can be reasonably certain that the DOMContentLoaded event has not fired by the time the document's readystate changes to interactive.  In my case -- where I knew the document had not yet loaded by the time I initialized my tables -- the changes in my pull request were sufficient.  \nTo be clear, the scenario not covered by the changes in PR #345 is the following:\n tablesaw is loaded after the DOMContentLoaded event \n an attempt is made to initialize tables using tablesaw while the document's readystate is still interactive (i.e. not yet completed/loaded)\nI presume this^ describes your scenario.  If you are unable to defer the initialization of tables until a later time, then perhaps you could test setting the domContentLoadedTriggered once the readystate transitions to interactive.  I didn't write tests for that scenario, but feel free to take my pull request and build on it.  . ",
    "itandyrays": "Hi.\nSame problem on this project demo > colspan.html choose data-tablesaw-mode=\"stack\"\nReferring to this line of code: \nhttps://github.com/filamentgroup/tablesaw/blob/master/src/tables.stack.js#L61\ninstr   : var $header = $(this.cloneNode(true));\ncause : this is undefined.\nPrepend this line : \nif(!this || typeof(this)==\"undefined\")return;\nand it seem be fixed but i don't know if it is necessary to continue the execution of the code for other features.\n. ",
    "magicspon": "Any chance this could get merged?. ",
    "bckp1993": "It is caused by not declaring <!DOCTYPE html> in html page. I have no idea why Safari/iOS Safari requires doctype for this feature.. ",
    "sfeigl": "The exploit is triggered in line 70 of the file\nreturn \"<label><input type='checkbox' checked>\" + text + \"</label>\";\nLet's say the Column header text is (in HTML)\n&lt;script&gt;alert(&quot;Oops!&quot;);&lt;/script&gt;\n.text() returns\n<script>alert(\"Oops!\");</script>\nwhich is inserted in the column toggle checkbox label. The JS code is executed.\n.html() returns the original HTML which does not do any harm, as it is still escaped. It appears in the column toggle exactly as in the column header (including formatting) and the script is not executed.\nAn alternative solution would be to still use .text() but HTML-escape this text again. in line 70. Formatting would then be lost. . "
}