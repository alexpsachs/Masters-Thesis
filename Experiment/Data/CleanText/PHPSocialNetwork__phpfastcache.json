{
    "khoaofgod": "Updated at May 6 2013.\nI did updated for APC, MemCache, MemCached, WinCache and Files + PDO\n. Thanks for let me know.\nUpdated version 1.3 - Just download and try it again. \nFixed the issues. \nLet me know of you still have any problem. You can close this question or I will close it at the end of month.\nCheck out new example at http://www.phpfastcache.com\nYou can try phpFastCache::$storage = \"auto\";\nAuto will detect what caching are available on your web server. Supported: APC, MemCache, MemCached, Files, PDO and WinCache.\n. Oh I see. \nI will make a forum.\n. I will take a look at it tonight.\n. I see. Thanks for this bug.\nphpFastCache::$path right now fixed.\n. I will take a look at the path tonight.\n. can you tell me more information & url about composer. I will take care it for you guys.\n. Thanks, Will add it to my schedule and working on it.\n. https://packagist.org/packages/phpfastcache/phpfastcache\n. Just let me know if anything goes wrong with it. I never use composer before. LOL...\n. I'm taking alook on it right now.\n. You \"can't\" cache \"a query\", bro - BUT you \"can\" cache \"a result\" of query.\n``` php\n// Get from cache first\n$result = phpFastCache::get(\"name\");\n// IF nothing in cache\nif($result == null) {\n    $query = mysql_query(\"SELECT * FROM abc WHERE 1\");\n    $result = mysql_fetch_array($query);\n// write to cache, and use it on next 600 seconds - Your PHP will not send query until cache is expired.\nphpFastCache::set(\"name\",$result,600);\n\n}\nreturn $result or print_r($result);\n```\n``` php\n// Get from cache first\n$result = phpFastCache::get(\"name\");\n// IF nothing in cache\nif($result == null) {\n    // Actually, this part will be put in function, not like this.\n    $query = mysql_query(\"SELECT * FROM abc WHERE 1\");\n    $result = array();\n    while($ht = mysql_fetch_array($query)) {\n           $result[] = $ht;\n    }\n// write to cache, and use it on next 600 seconds - Your PHP will not send query until cache is expired.\nphpFastCache::set(\"name\",$result,600);\n\n}\nreturn $result or print_r($result);\n```\n. skype me: khoaofgod\nI am sure you are using Files Cache. I will update the phpFastCache for new auto clean up for files.\nWait me couple hours.\nFor Manual Cleanup use : phpFastCache::cleanup()\n. 1. Please download php_fast_cache.php again.\n2. I have added the auto cleanup for files every hour.\nYou can set \nphp\nphpFastCache::$files_cleanup_after  = 1; // this is hour default added into core already.\nIt will take some hours to clean up your 7 GB of cache. XD. But after that it will fast.\nUpload new php_fast_cache.php and wait couple hour to see it will automatic clean up \"expired files\"\nYou can skype me any time to I can debug and help..\n. LOL, u're welcome.\n. hahaha. My bad. 600 seconds = 10 minutes.\nI will edit document again when I finish my church tomorrow.\n. 1 minute\n. Fixed it. Hahahaha\nI added x-cache, but I forgot add it into the array checking list. Line 261. I just patch 1 update for it already.\nphp\n if(in_array(self::$storage,array(\"files\",\"pdo\",\"mpdo\"))) {\n             self::$sys['storage'] = \"disk\";\n}elseif(in_array(self::$storage,array(\"apc\",\"memcache\",\"memcached\",\"wincache\",\"xcache\"))) {\n                 self::$sys['storage'] = \"memory\";\n} else {\n       self::$sys['storage'] = \"\";\n} if(self::$sys['storage'] == \"\" || !in_array(self::$storage,self::$supported_api)) {\n                    die(\"Don't have this Cache \".self::$storage.\" In your System! Please double check!\");\n}\n. I updated before your pull request already. Check it and let me know.\n. I'm checking\n. Oh la la , this is old bug, I remember I fixed on your last pull request last 3 - 4 days ago already. Why it show off here again. I will patch it again.\n. I just updated it again, that bugs I think I updated last time already.\n. so, should I make a function for minifing css and js on phpfastcache?\n. I think to keep phpFastCache light weight, I will not add an minify class into it.\nBut for caching CSS, you can try this one:\nhttps://code.google.com/p/cssmin/\nFor Javascript, try this one:\nhttp://jscompress.com/\n. thank you for tha patch.\n. Ok, I will take care about it\n. Done, please download php_fast_cache again.\nIt's a bug , but only happend on few Web Server base on PHP version.\nI just re-code the class again for it can run on all php 5 version from now.\nMake sure when you download php_fast_cache again, you will see the first line is \"Updated 5/12/2013\"\n. I don't get what you mean on conflict in tags.\nCan you tell me more, or screen shoot errors / returned value / code / example.\nI am on skype if you want to chat.\n. cool, thanks man. Also, you will see the folder \"testing/index.php\" , that I just upload yesterday, you can try it for debugging too.\nSend me some information for I can understand this bug, I will do my best to update & fix it.\n. thank you.\n. Plan have been setup this morning already.\nWorking on version 2.x and will be finish it soon. However, version 2 will be on Beta and testing for 6 - 12 months before I make it stable.\nFirst Beta version will be available in next week or next 2 weeks.\nVersion 1.3 will keep improving, supporting, and updating together with Version 2. I won't remove the current version in future.\n. Interesting, _c \n:dancer:  hahahahah\n. Guys, \nVersion 2 are completed.\nPlease take a look and let me know.\nhttp://www.phpfastcache.com/v2/\nDownload here in Github too.\n. Hi, Can you help me on these data:\n1. Open your php_fast_cache.php , let me know the latest date updated on the script. It should be 5/31/2013.\n2. Copy the Error and The Code and paste here.\n3. Also, please re-download the php_fast_cache.zip , unzip it, and then upload it to the same server, and run \"testing.php\". Copy and paste the result here too.\nI will take a look and finish it for u fast.\nI am very interesting on your errors, so please help me gather these info, to help me know extractly about this error.\n. thank you,\nI am interesting on every everything that posted in issues, because I have to find out all of issues for next version of Php Fast Cache.\nCan you help 1 more? Please come back to your testing.php , then Press CTRL + F , search \"pdo_sqlite\"\nTo see if your web server have PDO with sqlite or not.\nThe problem is maybe your server don't have \"pdo_sqlite\" , and my php_fast_cache force your server to use PDO, so the prepare statement not working. If your server don't have \"pdo_sqlite\", then I will make a fast update for my script / ignore pdo.\nPlease check it, and let me know.\nIf you trust me, can you email me your link to testing.php ( the original , not edit anything ), my email is \"khoaofgod@yahoo.com\", I will look at your server specs of phpinfo(); and find out what problems to improve php_fast_cache.php\nKhoa,\n. Thanks man,\nI will take care it when I back from my company today.\n. Ola, @ks-git \nI found the problem, it is a big bug from the patched at May 31 ( last 5 days ago ).\nOn May 31, We did fix the always re-config bug to improve the speed of server faster, but when I applied that patched, I totally don't know that I have to do to self::$sys = $info;\nThanks for your issue report again,\nToday Patched: 6/4/2013 at 11 AM have been fixed your issues and improved PHP Fast Cache faster than before.\nPlease re-download php_fast_cache.php again, in header it should show 6/4/2013 11 AM.\nYour issues help me fix the class right away, if you don't report this issue, I wonder how many people will get same errors as you.\nHave a nice day man, I have to run to my company, I am late already. Hahaha.\n. hi @ks-git , can you do me a favor? Please download current version , and run it under your server to see if the current version still have problem or not.\n@mbenabda , thanks for report to me. I have to wait @ks-git confirming his error still on current version 616 or not.\nIf it still here, I will check  a look right away,\nBut if @ks-git  's problem not here anymore, then your problem is different. Maybe PHP version 5.4.7 have something that I have to take a look.\nI will take care this problem for you soon, @mbenabda \n. Thank you, have a small change on PHP 5.4, I have fixed it already.\nRevision 617 have been updated.\n. Thanks @ks-git for getting back to me and confirm the error.\n@mbenabda  <-- I have fixed it already.\nJust download the reivision 617 today.\nAfter you confirm no more error, just close the topic for me.\nI go to sleep. \n. Thanks Neeke for reformat the code. I will take a look at them and re-format some of them only.\n. hi there, can you open your php_fast_cache.php and let me know the revision on header.\nIt should be \"616\" latest version.\n\nFrom: Stian Walgermo notifications@github.com\nTo: khoaofgod/phpfastcache phpfastcache@noreply.github.com \nSent: Friday, June 21, 2013 4:10 AM\nSubject: [phpfastcache] Fatal error: Call to a member function prepare()  (#26)\nHI,\nI just downloaded the script and tested it, but i am getting this error when testing.php\n\nCaching = auto \nSET 1 --> \nFatal error: Call to a member function prepare() on a non-object in /public_html/phpfastcache/php_fast_cache.php on line 1665\n\u2014\nReply to this email directly or view it on GitHub.\n. look like this problem happened on PHP 5.4\nCan you confirm your PHP version, bro?\n. Hi @Walgermo ,\nCan you delete the folder name \"cache\" or \"cache.storage\" or whatever \"cache\" created when you run testing.php\nAnd then try again. Let me know about it. I will fix it for you.\n. I have fixed it. Reivision 617 have been updated.\nJust re-download, and let me know if any problem.\n. Cool... \nHave a nice day\n. hi saiful,\nNormally, when php run under CGI, FCGI or suPHP , they don't need CHMOD 0777 because PHP have permission on owner account files & folder.\nIf PHP is running as MOD of Apache, then you have to chmod 0777.\nThe chmod 0777 for cache folder only required for: auto, pdo, and files:\n- Auto: have to detect the best cache for server, and write the config to .ini\n- PDO: require writable permission because cache store files in 1 single FILE.\n- FIles: require wrtable permission because cache store files and folder in multiple directories.\nWhen you set $storage = \"memcache\" or some memory cache, you don't have to chmod 0777 for cache folder under \"PHP5 MOD\".\nThe PDO can be download so easy. To make more security, you can try 1 of these way:\n1. Put .htaccess in cache folder or your class folder. Set DENY FROM ALL <-- so no access from outside to your php files and cache files over httpd request.\n2. Set phpFastCache::$path = \"/PATH/OUT_OF_HTML_PUBLIC_FOLDER/CACHE\";\n   Example: /home/yourusername/public_html/\n   You can set $path = \"/home/yourusername/cache/\";\nI will add .htaccess automatic on next revision for phpfastcache, your question is a good suggestion for me.\n. That because you are running PHP as module under Apache. \n90% Web Hosting for security, they are running PHP as suPHP, and phpFastCache will automatic create folder. \nHowever, PHP can't do it automatic as Apache Module because of security problem. So, you can switch to suPHP and your folder will be create automatic without any problem. The function \"auto create if not exist\" is embedded already from the beginning. If you can't switch from Mod-PHP to other CGI / suPHP, then you can set the $path = \"/tmp/\" ; I believe MOD-php have full permission on /tmp folder , and it will automatic.\ninclude(\"php_fast_cache.php\");\nphpFastCache::$path = ini_get('upload_tmp_dir');\nAs your suggestion, I will make next version use /tmp folder automatic for Mod-PHP , so that user don't need create and chmod 0777 themself. Also, will add .htaccess DENY FROM ALL to cache folder for suPHP / CGI user for more security.\nNext Revision with these 2 functions will be updated for you on tomorrow.\n. I'm working on it. Will publish it soon after I have a meeting with some php guys tonight.\n. @saiful \nIt have been finished already.\nYou can re-download it, revision 618\nHere is the changes:\npublic static $securityHtAccess = true;\nIt default set as true, .htaccess files will be created automatic under cache folder. No one can send request to download or run from outside, except local users from 127.0.0.1 - Make sure you enable AllowOverride All in Apache Virtual Host for .htaccess ( most of the host enabled this as default )\nHere is the .htaccess content that I have used:\norder deny, allow\ndeny from all\nallow from 127.0.0.1\nFor users who are running PHP as MOD PHP5 / Apache2Handler, right now don't need to chmod 0777 anymore, /tmp dir will be used as default. If you don't want to use /tmp dir, simple change $path to somewhere and chmod 0777 manual. \nHere is the code I have used to check tmp dir\n// revision 618\nif(self::isPHPModule()) {\n     $tmp_dir = ini_get('upload_tmp_dir') ? ini_get('upload_tmp_dir') : sys_get_temp_dir();\n      self::$path = $tmp_dir;\n} else {\n      self::$path = dirname(__FILE__);\n}\nTry: Delete cache.storage folder, and do not set $path. Run your testing.php and see if it works or not. \n. Keep $path = \"\"; // default\nBecause u're running as PHP Module / Apache2Handler, so that 's the best I can do. PHP can't do everything automatic on files / folder under Apache2Handler. \nWith your current PHP Mod config, if you try to install wordpress, then they gonna tell you CHMOD 0777 for many folders to install plugins automatic. \nIf you want everything automatic switch your PHP Config to suPHP or CGI/FCGI\nOR use root to run PHP as module on cronjob.\nOn ROOT@localhost\nType:\ncrontab -e\nThen setup cron like this:\nphp /path/to/cron_file.php > /dev/null 2>&1\nDo not use WGET, with PHP run as ROOT, your PHP CRON Files, have full permission on whole server.\n. i will test fastcgi tonight with ur config and do a hotfix.\n--> APC can't run on FastCGI, so the APC Driver will be ignored, and the backup driver \"files\" will be use instead of APC.\n--> The problem is /var/www/vhosts/###/httpdocs/tmp/cache//cache.storage.###/  <-- I will take a look if the chmod is right permission or not, because fastCGI should run as same owner already.\n-----Original Message-----\nFrom: \"nikmauro\" notifications@github.com\nSent: \u200e2/\u200e12/\u200e2015 5:36 AM\nTo: \"khoaofgod/phpfastcache\" phpfastcache@noreply.github.com\nCc: \"Khoa Bui\" khoaofgod@gmail.com\nSubject: Re: [phpfastcache] PDO CHMOD 0777 (#27)\nHere the config \n$cms39_cache_config = array(\n        \"storage\"   =>  \"apc\",\n        \"path\"      =>  ABS_CACHE_PATH , /* /var/www/vhosts/###/httpdocs/tmp/cache/  /\n        \"htaccess\"  =>  false\n    );\nphpFastCache::setup($cms39_cache_config);\n$cache = phpFastCache();The server running FastCGI with PHP 5.4.37\nAnd the script return \nFatal error: Uncaught exception 'Exception' with message 'PLEASE CHMOD /var/www/vhosts/###/httpdocs/tmp/cache//cache.storage.###/ - 0777 OR ANY WRITABLE PERMISSION!' in /var/www/vhosts/###/httpdocs/vendor/phpfastcache/phpfastcache/phpfastcache/2.4.2/drivers/files.php:58 Stack trace: #0 /var/www/vhosts/###/httpdocs/vendor/phpfastcache/phpfastcache/phpfastcache/2.4.2/drivers/files.php(108): phpfastcache_files->getFilePath('4cf0c74dd903c3b...') #1 /var/www/vhosts/###/httpdocs/vendor/phpfastcache/phpfastcache/phpfastcache/2.4.2/base.php(159): phpfastcache_files->driver_get('4cf0c74dd903c3b...', Array) #2 /var/www/vhosts/###/httpdocs/library/cache.php(151): phpFastCache->get('4cf0c74dd903c3b...') #3 /var/www/vhosts/###/httpdocs/library/functions.php(1385): cms39_cache_fetch('siteurl') #4 /var/www/vhosts/###/httpdocs/library/plugins.php(6): get_option('siteurl') #5 /var/www/vhosts/###/httpdocs/library/settings.php(6): cms39_has_su in /var/www/vhosts/###/httpdocs/vendor/phpfastcache/phpfastcache/phpfastcache/2.4.2/drivers/files.php on line 58\n\u2014\nReply to this email directly or view it on GitHub.\n. ok, I work on that. I will rewrite the way abstract class work right now on next release Feb 23.\nNew class will be coded for faster and config much easier. \n. Hi @marwan2 \nPlease first delete the storage.cache for fixing that error temporary.\nThen please give me this information: Please open your php_fast_cache.php and give me the Revision number. The latest one is \"618\" , if you don't see this number on your file, then please download my latest php_fast_cache.php and update your file.\n1. If you do update to latest revision, and still have this problem, please let me know. I will update next revision in 24 hours after you report problem again.\n2. If your current revision is 618, I will do update next revision to fix this problem for you today.\nThanks @marwan2 for report.\n. Hi @marwan2 \nI will fix it for you today when I get home after work. And will update the next revision 619 on tomorrow for you.\n. Good morning @marwan2 \nI have updated Revision 619 already, please try it, use it couple days and let me know if it still problem or not.\n. Working on it, will update Revision 620 on tomorrow for you.\n. Fixed\n. @mariusz-buk \nHi\nYou mean \"public\" method? ( or protected ?)\nAs I said on other topic, current version is hard to add more function, and I don't want to change the structure of it much. Right now, I only fix bug, improve it, for others can use it easily on their project.\nI know how you feel as a developer that really want to change the current structure ( bad, hard to add more function ), that why I'm developing the version 2.0, not only 1 file php_fast_cache.php anymore, the beta will come out in this week or next week, don't use static method anymore, it will easy to implement, expand and integrate.\nCurrent version will not be deleted, but I will keep improve and fix bugs, for someone like 1 simple file / class.\n. thanks you. I will update it\n. please download reivsion 621, and let me know if that is extractly what you have fixed and close the comment ^_^\nThank you for fixing it !\n. I'm saving it for Version 2 before changed some config in this version ^_^ Thanks for let me know this feature.\n. Hi there.\nUse phpFastCache::$path = \"/home/real_path_to/your_site/\";\nThen CHMOD 0777 for that folder.\nI think because you're using PHP as module under Apache, so the phpfastcache doesn't want to border you about CHMOD, it used the /tmp path for caching, and when server restart the /tmp is clear.\n. Let me know if it fix your case.\n. I'm checking it for you rigth now\n. Fixed it, please try again, and let me know. If still have bugs.\nPlease visit http://www.codehelper.io , and give me a post here.\n. You can use $cache->delete(\"keyword\");\n$cache->clean();\nOR:\nDelete folder cache.storage , this folder is store at current location of phpfastcache.php if you are using CGI , suPHP, and it store at tmp / upload folder of server if you are using DSO.\nRead the document examples/2.setup.php , and you can setup custom path for this folder.\n. if your php run as suPHP it will be in folder phpfastcache\nif you're using DSO as PHP, it will be under /tmp or upload folder.\nphpFastCache doesn't want to border you about CHMOD 0777 for that folder, so it automatic pick a right way with good security and have writeable for you.\nIf you want custom path for that folder, look at examples/2.setup.php <-- :dart: \nYou can do:\nphpFastCache::setup(\"path\", dirname(FILE));\n. set the storage to \"sqlite\" , it will save to sqlite 1 - 2 files only.\nBecause Linux / Windows directory only allow around 30,000 files I think.\nSo, if you don't split them to multiple folder, the cache folder will dead after couple weeks, and also it's very diffucuti to clean up a folder have more than 10,000 files, slow and cost memory when reading everything from that folder. In real world, 1 folder contant all cache files is bad. Use \"sqlite\" / \"memcached\" / \"memcache\" if you don't want to deal with files.\nI suggest sqlite\n. Ok, when I have time this month, I will add the composer.json \n. Done on release_2.4 release next week.\n. Yes. Do you know about Redis? If you know can you help me write a driver for it. I don't have time right now.\n. cool. I bookmark that, and set this issue as todo.\nScheduled for November next revision.\n. Done on release_2.4 release next week.\n. Done on release_2.4 release next week.\n. hi @laurent22 \nCan you do a test for it, if the test is OK, and everything is fine. I will do a merge for it, and update that method on document.\nThanks gain @laurent22 \n. Sure, I will check a look this week, and see if any problems before Merge it. thanks, bro.\n. ok, I will take a look this problem this week.\n. it's fine. \n. sure,\n. right now, just set it 3600_24_365*100 = 100 years. LOL\nI will update it to 0 soon.\n. Will add this option to version 2.2 next week.\n. Oh, sure.\nI will implement Redis this month.\n. it will be done after christmas\n. I will put it back tmr, since I was developing new IO Class for IP Location & phpFastCache version 2.5\n. ok got it, next version I will change it. Or you can comit ur change, I will update ur merge.\n. I will be back this month, and shut down the codehepelper.io and put everything is on github again.\n. hahaha.\nNext version, I will add this option, nice one, bro!\n. @richcom  will have this option on next version 2.2 next week.\n. Done on release_2.4 release next week.\n. I will take a look it when I get home after work. Thanks. Also, if you fix it and tested , you can send me a request.\n. @n-i-m-a do you have driver for Reddis? because right now on current version we dont have reddis.php , if you have it, put it on this branch.\nThanks.\n. @n-i-m-a : after you send a pull request and update the driver Reddis.php  I will do a test on it right away, since version 2.2 will be release next week, I will merge your Reddis.php driver and put ur name as contribute on next version.\nThanks, bro\n. can you help me on basic function for reddis? \nI don't have time right now, have to wait for after Feb 10.\n. Done on release_2.4 release next week.\n. by the end of Jan, PhpFastCache will release version 3.0 that include reddis and OPCache, the old driver APC still avaiable.\nRelease date will be Jan 31 or Feb 1.\n. i'm working on it.\n. OPCache is not an object caching, it's cache the SCRIPT. Automatic already.\nAll you need is set OPCache enabled on php.ini \nThis is different with APC Cache. \n. @tylercollier\n It work like this:\n\"memcached\"  => \"files\",\n\"apc\"       => \"files\"\nThen, if you use phpfastcache as memcached, or apc , AND YOUR SERVER HAVE PROBLEM WITH THESE 2 , THEN it will use \"files\" instead of these 2.\nThis option is use for someone who switching / moving their website to new server, and they can not install memcached or apc right now, so they use fallback while installing memcached / apc.\nHowever, you can set cache::auto or change the driver memcached to files, and switch back to memcached when u done with ur server.\nNext week the version 2.4 will be release on Monday, and right now I am thinking about keep this fallback or not for the Monday Release.\n. right now it's simple on phpFastCache -> function __construct\nIf I keep it on this Monday 's release then I will improve it with a function check Cache Driver available.\n. Look like only that section have that code, it's no use right now, it just a \"ALIAS\" , I think.\nok, I decide will improve it with a function called cache_check to make it work like my logic:\nif memcached server failed then files cache will be use automatic until memcache server is BACK.\nIt's will be done on this monday's release.\n. @tylercollier \n- I will add phpredis on README\n- I will add 1 more driver called \"predis\" on Monday, Feb 09 for who use predis.\n. @ARTPROITCo \nWhat do you mean about \"tags\" ? Can you give me some details & examples. I will work on that right away.\n. oh. OK.\nU meant tags / group / sets of \"keywords\" .. \nGot it, I will add it to next release 2.5 on March 02\n. Working on this.\nNew release on March 02\n. This move to April 12 since I have an urgent project have to finish.\n. Next week, I'm working hard on this >_< a little bit busy with other projects. Will push this one next week.\n. I work on this one, we will have tags soon.\n. it will be add next week, on this version 4 together with mongodb\n. @nikmauro Tags is added\nhttps://github.com/PHPSocialNetwork/phpfastcache/releases/tag/4.1.0\nLook at Examples/Tags.YourCaching.php\n. Example of tagging function here:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/examples/Tags.YourCaching.php\n. K, i'm working on this. Next release Mon Feb 09 will be fixed\n. https://packagist.org/packages/phpfastcache/phpfastcache\n. Fixed already, try again.\n. did you use phpFastCache:::$storage = \"files\"  ? can you post ur code here. Thanks.\n. Ok, I take a look tonight when I get home.\n. I don't have enough documents on xcache_list so, I hang on this one, until someone fix it.\n. I will open this issues again, for some one use xcache see this problem on issues again and if they can provide me some documents on xcache_list or get stats of xcache, then I will work on it.\n. I work on that on next monday release.\n. It will be on March 02\n. This may only work for memcache, redis, apc, sqlite, cookie and files. Because I have no documents on x-cache. So, I gave up xcache :D muaaaah\n. I take a look tonigth when I get home.\n. Fixed.\n. @nikmauro @lichunqiang @antoniocambados @sv1gzf \nCan you guys do me a favor, try composer again, and let me know if it work or not.\nI am not similar with composer, I just updated the json file, hope it good now.\nPlz test and let me know, also, if u have any suggestion on json file, plz comment here, I am not good at composer. \n. I do it tonight\n. working & scheduled, search & tags.\nLMAO, now I feel it like a Universial NoSQL Database with non-expired caching time + tags + search.\n. I will be gone until April 12.\nI have a filming project for Christian TV program, and I have to finish it for them on Easter, April.\nSo, until now, I will only fix bugs, the next release will be moved from March 12 to April 12.\n. My movie project is still not finished yet, I will delay this one a little bit longer by end of this month.\n. I may late on this one couple day since Lunar New Year and my gf is killing me.\n. I test it tonight, can you tell me are u using files  / auto or memcached ?\nIf u are using memcached, please sure that ur memcached server is right.\nAnd are u use FCGi / suPHP / CGI or PHP as Module ?\n. try this one on ur server:\nps -A | grep memcache\nMaybe ur memcache services is not running. Memcache is a software that u have to install on Server.\nIf you are not the one install memcache services or dont know how to install it, just put \n$cache = phpFastCache();\nand chmod the folder that it tell you to chmod, then it ready to work.\n. @MaxLuan I take care this tonight before mid night. Hahhaa. A little bit overload this weekend, since I spent all my time for  Lunar New Year and my gf... >_<\nI see what you mean on this, I will change it to numeric tonight and push it together with the new version.\n. I fixed it yesterday already @gcleaves  @clashboy  can you guys download new version and try again.\nJust delete the old folder cache.\n. https://github.com/khoaofgod/phpfastcache/tree/2.4.3\n. cool. thanks for the document bro. i will take a look at it and try to comit this one together with new version tonight.\n. https://packagist.org/packages/phpfastcache/phpfastcache\nI added tags 2.4.2\nnext will be 2.4.3\n. got it\n. @Neui Fixed\nTry it and let me know, if it good then close ticket , or I will close after 1 week.\n. hi, change the reddis to \"files\"\nsince your computer don't have redis installed.\n. @Geolim4\nHi geo, I will make a throw new exception to error function, will update it next week.\n. hey @Geolim4  can you help me custom function for throw error, I don't have time right now, if you can help, just let me know. Thanks.\n. sure, just go ahead and improve it, I will review and merge the code. I am busy until April 12, since I have filming project todo for Easter.\n. ok, sure\n. This issues will be fixed here: \nhttps://github.com/khoaofgod/phpfastcache/issues/86\n. I see. OK\nI put this one on next version ticket.\n. agree, if path is writeable then files is set already, so if files is not set, then path is not writeable the PDO sqlite will never get to TRUE.\nand SQLite is slower than files, so I agree to remove it out of autoClass.\n. 1. I see, I will add this as a note on next version on securityKey setup.\n2. For the is_dir and file_exists , same perform, nothing is faster or slower on these 2 func.\n. Sure.  I will merge it when i get home tonight. \n. You meant stats right? on next version you will have stats, and then it will return an array store all keys for you. April 12 - April 18 will have an update for that features. I'm working on it.\n. hahaha bro, I want it only get the domain without \"www.\" \nWe don't need trim, since will not space with an HTTP_HOST, and the preg_replace is slower.\n. Woops, I just got into that function details and it's character mask for sure. So, \"www.workexample.com\" will be output \"orkexample.com\"\nMaybe just use str_replace(\"www.\",\"\",$blabla), I will note this one, however let me take a look the whole reasone that I need $securityKey on the script and see if I have another solution.\n. just merged https://github.com/khoaofgod/phpfastcache/pull/96\n. Fixed already. Plz try again and close the ticket\n. I will take a look at it when I have time this month.\nLook like something new & skipSubDir.\n. which driver Files, SQLte ? or Memcache @gcleaves \n. K, I will take it this weekend\n. Fixed\n. @djeraseit  can you copy your error code and paste here.\n. $fastCache = phpFastCache() <-- this one is existing Instance already.\nYou can declare a static class\nclass mycache {\n        public static $cache = array();\n}\nmycache::$cache['my_cache_name'] = phpFastCache(whatever);\nIn your function, class, do call:\n$fastCache = mycache::$cache['my_cache_name'] ;\n. thanks for fix the xcache\n. Sure, Unit Socket is on working schedule.\n. Add them soon\n. added to working scheudle for next release.\n. I take a look tonight\n. ok, glad to heard about it.\n. can you guy us more details ?\n. can you tell me which Cache Driver you using? Files or Memcached or something ? for I patch to that driver.\n. hi, can you make a push request for it, I will accept it.\n. WIki will need to update\n. basicly, the stats function only work for files I think, for memcache , I don't think I finish it. ^_^\n. fallback was removed from my last committed, since we can't keep check the function connect and then fallback, it make the server / hosting slow when keep connect to redis.\n. Yeah, you can just custom it on your config or whatever php, and then do like that if statement.\nAnyway, last 3 months I was busy like hell, and didn't fix some bugs, if you can help fix it, just make a commiit and I will accept it on github.\n. Can you help on that? I am so busy now, if someone can help me that, I will thanks ful, and I will accept the commit as a new version.\n. IF we work on that, it will be version 4.0.0 + all new documents and Methods.\nCurrent version 3.x will keep fix bug and improve.\nI just read the PSR-6, can't tell I have time now, but by end of this month, I will have sometime, and see if I can work with someone or you on this one.\n. Ok, I put this on working right now, I will do some scratch work on version 4. \n. > < let's schedule for October >< Until that I am crazy like hell with many projects >_< \n. this one closed because we have plan to make a new wiki next week already. New Wiki on phpfastcache.com not github anymore, since we gonna have 3 version : 3,4,5\n. Yes, use phpFastCache with \"memcache\" \"memcached\" \"redis\" \nThe sync on multiple server, but make sure your servers are same on a datacenter and a private network for fastest speed.\n. which driver are you using ? memcache or files or pdo ??\n. OK, I will make a file to clean cache with cron.\n. on schedule working now\n. I see,\nI will make a cron.php to clean up all the folders. \nAnd you guys only need to setup 15 mins cron time for cron.php\n. yeah, i'm starting working on some issues now. Any questions just open new issues.\n. so, you got Internal Server Error ?\nServer run: CGI / Fast or Module PHP ?\n. Hahah, I thought u said u have no more problem with the script anymore.\nInternal Error is something problem with Apache Server, not PHP it'self. Or PHP run something that Apache doesn't have that function.\nSo, to check the Internal Error, you have to open the Apache Log, and see the time that you get problem. I am sure it log the bug there,\nLet me know.\n. Ok, I think I got the problem.\nI will do optimize by this weekend, and see new version on Monday will fix it or not.\n. if it's Files Cache, the problem is I/O hit, when the Files is OPEN, other process can not overwrite it. It's barely happen, but I think it is.\n. thanks @bfintal \n. Add them soon\n. added to working schedule next release.\n. add mb_ function soon\n. Done.\n. thanks\n. thanks bro\n. on version 4 its fixed already.\nLook at Examples: global.setup.php \n^_^\n. If anyone work on this, I will happy.\nIf not, wait until Next month, right now company is so busy.\n. hi bro, can you comit a request, and document for this method. I will accept the merge to help others right away.\n. released\n. Can you comit the change? I will accept it. Make sure Predis and Redis is 2 different.\n. redeclare, mean somehow you required the autoloader before phpFastCache already.\nBefore I make a change for it, you can do like this:\nGo to: drivers/predis.php\nLook for: $this->required_extension(\"predis-1.0/autoload.php\");\nComment // these lines and I think you will be all set.\nI will try to check if Predis loaded on next version, right now I am still busy, if someone comite the code, I will thankful and merge it rightaway.\n. thanks @vincent \n. what you mean on this?\n. thanks\n. thanks\n. @koenpunt  is right, hahaha\nThe \"@\" is still there. Should remove the \"@\" after add file existing.\n. do you install redis for php? look like php don't have redis lib.\n. if your PHP version don't have Redis Lib, just use \"Predis\" built-in in PHP Fastcache.\n. @drAlberT  : $cache = phpFastCache('redis'); \ntry $cache = phpFastCache('predis'); <-- this one will use built-in Predis\n. take a look at the PATH and if you move all the sqlite files on CACHE PATH to your new server, it should read, if the domain name is the same.\n. you can cache RESULT ( array, object, string, number, null, ..etc ) , not a PDO statement\n. $geo = $this->connection->prepare(\"call sproc_qryGeo($latitude, $longitude, $radius, $numResults, $startPosition, $pageSize)\");\nAfter prepare, you have to Excute and Fetch() the object.\nFor example:\n$stm = $this->connection->prepare(\"YOUR QUERY\");\n$stm->execute();\n$geo_result = $stm->fetch();\nHERE , you can cache ur $geo_result;\nTry to look for PDO Prepare / execute / fetch\n. $cache = phpFastCache();\n$keyword = $field.$table.$id;\n$data = $cache->get($keyword);\nif($data === null ) {\n       $data = getvalue($field, $table , $id );\n       $cache->set($keyword, $data, 600 );\n}\necho $data;\nYou can also cache level inside your function getValue , same logic , instead of echo data, you return data.\n. sure @Geolim4 \nCan you do a fix for it, also, remember the one that you disagree with \"@read\" something, can you remove these \"@\" too.\nThanks so much.\n. @Geolim4 if you can help working on this :dancer:  I will thankful, I was just too busy, so most the bugs right now, I accept the commit from other developers.\n. Make it 5.1 @Geolim4 \nI think  5.1 is minimum right now and JSON supported on 5,1\n. thanks ^^\n. sure, ^^\n. @dvLden  can you download and try again, someone made a fix patch this morning already\n. can you do chmod -R 0777 /var/www/vhosts/[client]/httpdocs/tmp/cache/cache.storage./\nor do change own for  /var/www/vhosts/[client]/httpdocs/tmp/cache/cache.storage./ to same user with host client.\nOR simple: \nsetPath the cache to outsite httpdocs for it doesn't backup the cache.\nLook like apache backup or system backup don't have permission to read that client's folder.\nIf you still can't handle it, I will try setup Plesk on my VM and see how the backup work.\n. I trust you, hahahaha\nOn Mon, Feb 1, 2016 at 5:52 PM, Georges notifications@github.com wrote:\n\nAlready merged ? Oo\nSo fast !\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/khoaofgod/phpfastcache/pull/181#issuecomment-178307716\n.\n. it merged, but it's not a release yet. ^_^\n\nOn Mon, Feb 1, 2016 at 5:52 PM, Banh Mi DSLR101 khoaofgod@gmail.com wrote:\n\nI trust you, hahahaha\nOn Mon, Feb 1, 2016 at 5:52 PM, Georges notifications@github.com wrote:\n\nAlready merged ? Oo\nSo fast !\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/khoaofgod/phpfastcache/pull/181#issuecomment-178307716\n.\n. I will test it after work today or tmr before I draft a new release on this commit.\nThanks again for help me on this, I was overload from last summer.\n. you want to help me make one? if yes then go ahead.. xD\n. you know what, I am feel like I out date these day, u guys are just keep better and better. LOL. How about, u create a whole new version, release 4, with that and autoload too :dancer:\nI will share you project permission for you can change the home page with your information in contact, if you help on this..xD my way coding still old way =.=!\n. yeah, then thanks for help me on this.\n. here, on release page:\nhttps://github.com/PHPSocialNetwork/phpfastcache/releases\n. https://github.com/PHPSocialNetwork/phpfastcache/releases?after=3.0.8\n. We will make sure new version support legacy code again.\nOn Feb 7, 2016 3:45 AM, \"radia\" notifications@github.com wrote:\n\nYeah, i know 2.1 is old. But if its worked without vendorload stuff.\n@khoaofgod https://github.com/khoaofgod thanks for replying.. i didnt\nsee release link on your github.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/200#issuecomment-180999835\n.\n. yes, minimum php 5.3,\nsupport autoload and legacy coding as 3.x\nphpFastCache::setup() not gonna work like before.\nHave to use CacheManager::setup() \n everything else is same.\n. @olivermcruz \nphpFastCache::setup is not working.\nLook at folder: examples/global.setup.php that file will tell you how to use version 4.\nHowever, if you can go to release, and pull version 3 it stable too.\n\nhttps://github.com/PHPSocialNetwork/phpfastcache/releases/tag/3.1.1\n. @olivermcruz \noh, redis mean you have to setup \"pecl install redis\" on your server to make Redis extensions for PHP.\nIncase your dont have access to server, phpFastCache built in \"predis\" to help people use redis without install PHP extensions.\n. right now Redis is not support search yes, the search is only work for files right now.\nYou can use Tags it work almost like search.\nI will put search to global caching soon on next weeks.\n. @olivermcruz  method @search added. Look at Examples: Search.YourCaching.Php\nhttps://github.com/PHPSocialNetwork/phpfastcache/releases/tag/4.2.1\n. I said 10 times for \"Files\", because I also store temporary data to memory to reuse it, so the I/O load not gonna high like before. and it run on PHP memory until the script end.\nFor memcached, it stores in Memory already as default, can't be much faster, but my caching logic will reduce the hit missing rated to minimum and reduce the connection to memcached deamon, as it used the temporary memory of PHP to keep the caching, and don't need to connect to memcached again until something is changes. That why it can only be 3-4 times faster.\nThe Search & Tags are 2 new features that couldn't be done last year because traditional files cache reached the CPU & highload IO load.  I finished the new phpfastcache last month to improve & work on PHP Memory. That why we had them now. \n. yes, it's gonna effect all storage after call CachingMethod.\nIt come with 3 values: normal, fast, fastest ( default is fastest = phpfastcache )\nor: normal, memory, phpfastcache.\nOn setup , you can put: cache_method = 1,2,3 ( default is 2 = fastest , 1 is normal , 3 is memory )\n. for Files / Sqlite they store on disk, so, u can build a function get diskpace\nOther caching use memory, and on Linux , sometime it show full memory, but actually not full yet, they are reserved memory for running apps faster. For memcached / Memcached, u can call their function to get available memory.\nI will assigned this one and put them to a new function for next release on next 3 weeks.\n. I will add this as function on next one,\nAdded to working list already.\nAlso, you will have 1 more function to see hit rate of phpfastCache\n. gotcha, i fix it now\n. Fixed\n. are you on the latest version, @canc ?\n. @canc I will reopen the ticket, give me couple hours tonight, I will test it, and fix it. Then you can download again.\n. @canc : can download get final commit and try again. Let me know. ( not the release )\n. hi An,\nby default it will connect to default setting of Memcache & Redis.\nIf your server have custom setup, you can look at phpFastCache folder Examples for redis & memcache.\nWe can't set limit max memory for both of them, because they control over Background Service. but you can limit by the deamon command on memcache, or redis config on server.\n. we don't have time for it right now, still have many other functions are on developing. However if u want, u can do a loop 1 to 50,000 , and use phpFastCache , and another normal file cache, use microtime and try call / get / write and see\n. yes, when \"overwrite\" setup , it will use \"files\". So, remove that line.\nI will take a look at the \"fallback\" , fallback is different setup. I will update this ticket when i get home\n. I see, ok, I added it to the list\n. It's here:\nhttps://github.com/PHPSocialNetwork/phpfastcache/releases/tag/4.3.13\nLook at file: example/cookie.php have limited function there.\n. @Geolim4  : take a look at ur autoloader, bro\n. @Geolim4 look open_basedir restriction effect on file_exists, so the simple way that I think is:\nini_get('open_basedir')\nand compare with the path before do file_exists\n. @Geolim4  is_readable() still get warning by open_basedir\nso if you check is_readable before file_exists, it still get the open_basedir warning.\nhahahah\n. @w3l can you verify about this path:\nFile(/secret/Data/Library/phpFastCache/CacheManagerphpFastCache/CacheManager.php) \nis it show on the error_log like that ?\n. oh yeah, shared hosting always got this problem, I will take a look tonight and you can optimize my update.\n. Fixed\n. @w3l  what the .. heo.. LOL\n1. Can you email the warning log to khoaofgod@gmail.com\n2. can you run your phpinfo , copy the value of open_basedir and put on email too.\n3. I need full path of this file: \"Consistency.php\"\n4. And full path where you store phpFastCache\nThanks, I will debug the code and what different between 0.7 and 0.10\n. I believe something is wrong with composer.js , and if it happened it my fraud when I changed require phpfastcache/phpfastcache to phpFastCache/phpFastCache , it make the current dir become not existing anymore on Linux :D \nI changed back on 4.3.12 that I just fixed many bugs on March.\n. I tested phpFastCache with composer and I don't see any problem.\nThis is how you can know the problem on your project:\nFirst, \nLook at  Vendor/composer/autoload_files.php <-- copy this file content to your computer.\nThen,\nUpdate to phpFastCache latest version.\nGo to Vendor/composer/autoload_files.php <-- compare this file with the one you backed up.\nAnd see if the PATH of phpFastCache is changed or not. If it's not change, then verify the PATH on vendor/phpfastcache/phpfastcache/src/phpFastCache/phpFastCache.php <-- have to be like that. \nCase Sensitive. This word \"phpFastCache\" maybe wrong there, and make your project included wrong path. If it's wrong, just fix it on autoload_files.php and save.\nThis will fix the problem and work for sure.\n. so, basicly it's just conficts function with HOA. \nThen it will be easy, on morning, I will make a legacy that included everything of phpfastCache, then u just include that file = DONE.\n. @w3l \nThis will fix ur problem for sure.\nhttps://github.com/PHPSocialNetwork/phpfastcache/releases/tag/4.3.14\nOn your index.php or config.php / whatever file store configuration which is loaded first before composer load. Copy & paste this line on it ( on examples folder have it now ).\ndefine(\"PHPFASTCACHE_LEGACY\",true);\nThen the rest will let Composer handle autoload, it will skip our autoload. You can just keep that line anytime you upgrade phpFastCache. It stay no problem.\n. take a look at the cache folder, but it actually work or not, is up to how do you code your class.\n. You need to see Examples, and this is a Library for PHP projects. If you don't understand how to use a library, please hire a developer.\n. Hi. Can u check that full path. To see if u can write there.\nOn Mar 16, 2016 7:03 PM, \"fredGDS\" notifications@github.com wrote:\n\nWhen calling phpFastCache() I keep getting a fatal error with this content\n('PLEASE CREATE OR CHMOD ' . $full_path . ' - 0777 OR ANY WRITABLE\nPERMISSION!'). I have all files on the test server set to 777 so there\nshould not be an issue with the permissions. It would be great if anyone\nknows how to solve that issue. :)\nBtw: I just downloaded phpFastCache over composer so it should be the\nlatest version\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/254\n. @fredGDS thank you ^_^ I will update the code tonight\n. Fixed it\n. @Geolim4 ?\n. found the problem, will fix it tonight togther with others bugs.\n. ok,\nI update the code tonight together with other bugs.\n. @sv1gzf I fixed it.\n. Ok, I will take a look tonight too.\n. @vatnoise I tested it on my localhost, and I don't see any problem.\nCan you use examples/Sqlite.php and see how it works on your localhost and ur prods.\n. Try pull new version that I just push today 4.3.12\n. for File Mode - You can't write object without serialization .\nfor Memcached - Objects doesn't need serialization to write. phpFastCache don't do serialization for any type of Memory Caching like Memcached / Predis / etc ...\n. @sv1gzf you are using memcache right ? phpFastCache doesn't do serialization on Memcache. It just pass the whole object / varible to Memcache, and let memcache handle it. The serialization is only happen for Files Cache.\n. For Files Cache:\nby default serialize is slower than json_encode around 30% as my benmark. But then some people want to cache an object, and json_encode / decode can't handle it good. So, I picked serialize for Files_Cache. the igBinary does serialize faster as binary, but then user will have to install it on their server. \nBy default PHP 6 & 7, make serialize / core faster than json_encode 70% ( that what they said on their site ).\n\nI think I should make a config for people choose json_encode, serialize, or even put a custom serialize/unserialize for their Files Cache. I will like that, because for my project, I feel like json_encode is enought for me, and some of my type caching, I don't even need serialize.\n. oh, just forget it, I will just keep serialize as default for file cache driver.\nOther drivers like: memcached, predis, mongodb, wincache ...etc <-- phpFastCache just pass the whole object to the driver, and I don't think they do any serialize methods there for sure, because they store in memory.\n. @koenpunt then what can we do ? If memcached decided to do serialized somehow, then it's up to it. hahahahahahah. \nThere are 4 things involved in fetching a remote object whether you fetch from memcached / redis / or database: \n-serialization/deserialization\n-network transfer\n-request processing and \n-potential disk access\nThe question here is the original poster asked: Is it possible to use phpastcache to store an object without serialization? \nand he tested with memcached. \nThe answer is: phpFastCache only do serialization for File Cache. For other drivers, phpFastCache don't do serialization, and just pass the whole object to that driver. Also, I don't really know why he did serialization before set object into memcached, that just make serialization x 2 times: Once himself, and Once again by Memcached or the driver. :dart: \nMaybe he doesn't understand how memcached set an object, so he did serialization himself.\n. hahaha, true. I will make a note to update that line.\n. @Geolim4 can you help on this one. I'm not good at this.\n. I think he used ::Files()  and expired time is 1 second.\n. @caperneoignis Can you use the last commit ( not release, and try again ). Let us know. We debugged but I didn't see any issues.\n. Because sometime phpFastCache will try to store \"all small varibles\" to memory and didn't write to Files yet. Until the script finish, it will write everything to files 1 time to save the responding time / reduce hard disk access time. So, if it happened, because the sleep() function is there. Sleep make the script PAUSE, and the FILES is not written to disk until script end. It just change the expired time / values on memory, and write to FIles when script finish\nOn the latest comit, I disabled that behavier by default to save more memory for regular users, they don't need it, unless they want more speed, and save their disk access repsonding time. and only enable if user config set to TRUE.\n. okay, so everything is good, so I closed the ticket.\n. thank you, I will commit the fix in 1-2 hours, and you can try again. I will let you know.\n. @tatet : Fixed, you can try again ( not the release yet, just download the code from last commit )\nhttps://github.com/PHPSocialNetwork/phpfastcache/archive/final.zip\nand Let me know if it fix the problem / or just simple close the ticket.\n. I will update it today and let u know.\n. I don't see the problem. Can you try download the new final code and try again.\n. You can look at example folder, Tags and Search. They will do that\nfunction. \n. When you write a cache use Tag, and then you can use \"deleteTags\" to delete these cache. Or you can enable search, then look by keyname only and delete these keys.\n. You can install SQLite, or you can go there and change it:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Core/DriverAbstract.php#L665\nchange the work sqLite to Files\n. which driver you planned to use? and can you provide a format that you would like us to make for driver_stats ? \nThe problems with the stats is each driver provider different return back base on their built-in functions. Let's find a universal format for all of them.\n. I see. I put this one in progress, and it will be done in 5 - 7 days for files, sqlite and memcached first.\n. @jbhamilton if you can do this for Files Cache, can you help me with Files ? then just commit it, I will just duplicated ur code for other driver.\n. can you create an examples file and send it to me khoaofgod@gmail.com to show me more details ( leave comment on source code, and output that you see on ur screen in comment ). I am not sure what's problem here. When you turn the search all, it store all Key Index to a database. so it should work with all pages before or after page calls.\n. i got it, i will run the test.\nOn Thu, Apr 28, 2016 at 10:51 PM, On-d-mand notifications@github.com\nwrote:\n\nHi Khoa, an e-mail has been sent to you with the example files.\nFor others reproduction can easily created by running the script and thus\nsetting the cache and then just simply renaming set to get (and echo-ing)\nto see the values exist but are not searchable\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/273#issuecomment-215632258\n. oh, that the fix memory bugs, I did release it on April 15th. Try it. I think it will fix your problem.\n. hahaha. That's the problem, when we fixed bugs, we can't release the code to composer right that day, we have to wait until 15th or 1st of month for release new version. \nI will make a mailing list next month for any fix bugs will be send to mailing list, it will be better on keep track.\n. @jbcubed3 can you try this with latest version and see if the problem still there.\n. I will commit a new example file by tonight and let you know for u can run that test file for clean();\n. I see.\n. @misternerd our plan are keep v4 for 2 more years, they need both update. @thanks for your help on this bro\n. Closed the ticket since it was 7 days without new respones. You can re-open if still have problem.\n. thank you\n. yes, same as v4. <=0 have to be never expired.\n. both Files & SQlite based on I/O of HDD. When the HDD locked access because it reached full speed, the results will always return NULL. \n@val4o0o0  Try to use this on setup of phpFastCache:\ncache_method => 2\n\nThis one will reduce I/O load for slow Hard Drive and multiple access on same caching on 1 script. Try this and let me know.\n. @val4o0o0 \nCan you do me a favor?\nCan you make an example file which will pre-produce this problem, and then send it to me at khoaofgod@gmail.com\nFor I can just run it, and debug the problem.\n. LOL. So, what are your solution for this one?\n. Okay,\nI notice this ticket when I develop new features will try to handle this one.\n. Have you followed this setup:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/examples/Search.YourCaching.php\n\"allow_search\"  =>  true \nAlso ,remove the \"cache_method\" => 2 on  _tagCaching(), since memcached used memory already.\nand it's only store indexing on memcached from the moment that setup enabled.\n. just remove the whole array(\n        \"path\" => $this->config[ 'path' ]\n        //\"cache_method\" => 2,\n      ) \nThe search function can use anytime, not in same request. However if your memcached restart, the indexing will be clean out.\nI have a solution for you, use ::Files with cache_method\" => 2 instead of Memcached.\nP/S: just replace the word \"sqlite\" to \"files\" keep everything same.\nIt will works.\n. Just change the sqlite to Memcached. Then run examples/search and tags. To\nsee if the results you get is good or not.\nOn May 31, 2016 8:30 AM, \"ddauto\" notifications@github.com wrote:\n\n<?php\nerror_reporting(-1);\nrequire_once $_SERVER['DOCUMENT_ROOT'] . '/include/config_inc.php';\nuse phpFastCache\\CacheManager;\n$key=\"test\";\n$cache = CacheManager::getInstance('Memcached');\nif (trim($_REQUEST['s'])==\"Y\"){\n$cache->set($key, \"value1\", 10000, array(\"tags\" => array(\"tag1\",\"tag2\",\"tag3\")));\n}\n$list = $cache->getTags(array(\"tag1\"));\nvar_dump($list);\n?>\nStill not work.\ntest.php?s=Y => array(1) { [\"tag1\"]=> array(1) { [\"test\"]=> string(6)\n\"value1\" } }\ntest.php => array(1) { [\"tag1\"]=> array(0) { } }\nBut I found that has warning message like:\nNotice: Undefined index: memcache in\n/var/www/html_2016/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/memcached.php\non line 74\nNotice: Undefined index: memcache in\n/var/www/html_2016/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/memcached.php\non line 74\nNotice: Undefined index: memcache in\n/var/www/html_2016/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/memcached.php\non line 74\nI am not sure if it's the root cause?\nThanks.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/288#issuecomment-222725731,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AAu07HQsUUWXbEE20uQ-hIqx2ddgo6H8ks5qHFQGgaJpZM4ImSI5\n.\n. Can you do me a favor @ddauto  ?\nMake an examples file to pre-produce this problem, and send it to me at khoaofgod@gmail.com\nFor I can just run it and see what happened with the result.\n. Can you try the new latest commit and see if it fix the problem or not.\nI remember this one was a bug from old version.\n. put page number and something else together in your $keywork.\n. LOL @ltloibrights : Chuyen gi ?\n. @lambasoft it's fine to use it as a database in your situation, because you don't really care if you lose the data inside the cache, you can always fetch it from API again.\nJust make it expire after 10 years LOL.\n. Check the PHP Timeout and the time, if it 30 second, try to make it more than that.\non php.ini then restart ur server\n. Also, debug at ur sendRequest($url); , to see if it stuck at that line or not, that mean you couldn't send request to the API and it stopped there when the 71 is none-cache.\n. @jfcherng \nThe select should not return these expired items. So, I don't think is a change need.\nBecause on deleting, it will remove expired already.\n\nhttps://github.com/jfcherng/phpfastcache/blob/b79746493099632440110b568022e638433d6228/src/phpFastCache/Drivers/Sqlite/Driver.php#L350\n. I see, @jfcherng \nOn v4, after/before I do select, I also delete old exp items first. I am unsure on this V5. We will test it now.\n@Geolim4 : Can you take a look at this PR.\n. @Geolim4 \nThis file:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Core/StandardPsr6StructureTrait.php#L66\nLine 66,\nas @jfcherng said, $item->isExpired() is always FALSE, since it won't return expired items from driverRead();\nHowever, after @jfcherng  changed, it will return TRUE there.\nLead to line 74:  $this->driverDelete($item);\nMy question is:\n* After we do driverDelete($item) there, what should we return? \n* Or we just leave it like that, and it still does well? If it still does well, and no need to return anything, then @jfcherng PR  works good, and you can merge. \n. Oh yeah, we have to wait for @Geolim4 test this code and merge, because he's the lead developer on v5. He wrote the whole thing of v5. Hahaha.\n. we published V5 already. It's production today.\nThe website is not update yet, but github and wiki are v5. Right now it's 5.0.8 already.\n. /www/apache/html/uw_home_redesign/storage/cache <-- you need cache is writeable , not storage.\n. If I remember it right, Lightspeed is caching on Server like Nginx Cache. It's has no GET/SET/DELETE/CLEAR. @UnRyongPark ++\nNice one bro.. ",
    "levani": "Thanks for the support but this is not the way how github issue tracker should be used. I would rather find some other way for providing support (create google group for example) and keep this place only for issues.\n. ",
    "pabgaran": "http://getcomposer.org/\nhttp://getcomposer.org/doc/01-basic-usage.md\nGreat project!\n. ",
    "tylercollier": "Can you update this for the latest version?\n. Great idea. I just implemented your idea and it works great.\nI ended up using the term tag instead of module, because like gmail tags, I might want to tag a cache value with multiple tags. If I only ever wanted to assign a value to a particular module, I think that could be accomplished with the 'securityKey' (which only works for files and PDO drivers; I'm using the files driver) concept already present in phpfastcache.\n. I have not yet tested this in the real world. I'm nervous about how long $cache->delete() calls will take in a loop with many keys. I'll report back after I get some real world testing.\n. @rajneeshojha: yes. I did it just like spud suggested. It was very simple. It's in my own code, not part of the phpfastcache library, so I did not do a pull request or anything.\n. See code here: https://github.com/khoaofgod/phpfastcache/issues/59#issuecomment-58953860\n. I understand the idea. Where does the actual fallback happen? Where in the code?\n. if(isset(self::$config['fallback'][$storage])) {\n    $storage = self::$config['fallback'][$storage];\n}\nIt doesn't read from $option at all. That code looks like it ALWAYS uses the fallback, if there is a global fallback set.\n. If Redis isn't installed, and you try to use it, it you will get:\nPHP Fatal error:  Call to a member function connect() on a non-object in phpfastcache/drivers/redis.php on line 45\nwhich is an un-catchable error.\nThis happens because you have this code in redis.php __construct()\nif(class_exists(\"Redis\")) {\n    $this->instant = new Redis();\n}\nIf the Redis class doesn't exist, you never assign to $this->instant, and thus later, $this->instant->connect($p1,$p2,$p3) thows the error.\n. PS: It's probably worth mentioning in the README that using Redis requires use of phpredis, as opposed to another library such as predis.\n. ",
    "sv1gzf": "Any news on the composer?\n. The composer is not working properly\nWarning: require(....../vendor/phpfastcache/phpfastcache/phpfastcache/phpfastcache/phpfastcache.php): failed to open stream: No such file or directory in ..../vendor/composer/autoload_real.php on line 54\n. ",
    "tkaratug": "Sorry for my English. Thanks.\n. ",
    "marwan2": "Dear Khoaofgod \nThanks for your quick response, I will download the file and see its action\nyours\nMarwan\n. I'm sorry Khoaofgod , I Confused on calculating the Cache file size it wasn't 7 GB, it was 7 MB\nAny way may be the auto cleanup you implemented help other developers for sure\nYours\nMarwan\n. Thanks Khoaofgod\n. Thanks you Khoaofgod\nI'll download and check it and give you my feedback\n. I think there are some conflict in tags or something like that when I get a lot of data.\nI returned to an older version till, you check it again\nThanks\n. Before sending you some print screens, once I upload the new php_fast_cache.php file, I found some (not all) cached data print the open triangle bracket (<) and after refresh some data printed successfully and some data not.\nI'll check it again and send you print screens \n. Good ideas, go ahead\n. Hi khoaofgod\nI just downloaded the php_fast_cache.php 1 day ago (July 2, 2013), so I think this is the latest version, any way the revision number: 618\nI received this error, on the current revision (618)\n. OK khoaofgod, thanks\n. Actually, I have solve this issue by deleting all cache folders created by the phpfastcache class.\nBut its better to investigate this bug.\n. ",
    "saiful": "Good, thank you..\n. ...and I try too if I don't use any cache system (cache is off), prevent all error probability....\n. :+1:  Good, thank you.. \n. Very good if it has a forum...\n. Thank you...\nIn this case, I must create and set CHMOD these folder manually, not by phpFastCache, I think it will be better if these folder created automatically according phpFastCache parameter if exists if not auto create, so cronjob will be run automatically without as us to create these folder. \nI set it globally for module frontend/backend and cronjob module\nphpFastCache::$storage = \"auto\";\nphpFastCache::$autosize = 50;\nphpFastCache::$path = WEB_ROOT.CACHE;\nphpFastCache::$securityKey = md5(\"cache.storage.34342svasdfassdfaadfasd8bH\");\nphpFastCache::$server = array(\n                       array(\"localhost\",11211,30),\n                       array(\"localhost\",11211,70)\n                   );\nThank you very much, I am waiting for next version..\n. Awesome! With these 2 function very interested, phpFastCache will be more reliable and safe.\nThank you very much,\n. I have try by set $path = ''; and it run like a charm (in cron job and others).\nBut when I set $path with a cache path, cron job still need ask me with Sorry, Please create /root/content/8899/94857283/html/myweb/cache/f011a24472fb8efed77741001d5bc793/ and SET Mode 0777 or any Writable Permission!. It does not create a .htaccess. I think we need everything run automatically with set path or not for cron job module or not. I just want to adjustment any probability with server setting and phpFastCache parameters.\n. Thank you khoaofgod\nI think there is a bug, I try run on localhost with setting\nphpFastCache::$storage = \"files\";// \"pdo\",\"mpdo\",\"files\",\"memcache\",\"memcached\",\"apc\",\"xcache\",\"wincache\"\nphpFastCache::$autosize = 50;\nphpFastCache::$path = SRV_ROOT.\"cache\";\nphpFastCache::$securityKey = md5(\"cache.storage.23423sadfas2342fdd\");\nphpFastCache::$server = array(\n                       array(\"localhost\",11211,30),\n                       array(\"localhost\",11211,70)\n                   ); \nBut raise exception like below:\nSorry, Please create /Applications/MAMP/htdocs/myweb/cache/sdfsa3322342sdfa/ and SET Mode 0777 or any Writable Permission!\nLast time I try $storage = \"files\" it's run normally.\nThis is if I am not wrong on parameters.\n. I have remove @ to check what happen in line 228 and 231\nWarning: mkdir() [function.mkdir]: No such file or directory on line 228\nWarning: chmod() [function.chmod]: No such file or directory on  line 231\nI look my path is real path/full path, this path is right\n. Oh I am sorry, I must set full access for myweb folder on localhost to do this.\nthank you\n. Thank you @khoaofgod for cron job I will keep $path = ''; It's good solution and safe\n. for information I don't use WGET and other CMS opensource. \n. ",
    "kantholy": "you can do it by combining multiple css or js files into one file and \"minifing\" it...\n. ",
    "wendynovianto": "Totally agree! When do you think this will be done? The static approach is quite limiting, while a singleton approach will have all the goodness of the current approach, while it can still be used for a much more complex scenario.\n$cache = phpFastCache::instance(); // The singleton approach that requires quick development.\n$cache = new phpFastCache(); // More complex approach that requires different cache configuration.\n. ",
    "maaudet-ca": "Well\n```\nuse phpFastCache as _c;\n_c::config(...);\n_c::get('test');\n```\n. ",
    "ksdev-pl": "\nIt's 5/31/2013\n\n2.\nFatal error: Call to a member function prepare() on a non-object in /php_fast_cache.php on line 1536\nIt shows on this line in my code: $recentArticles = phpFastCache::get(\"recentArticles\");\nAs I have written, it works ok when I manually add: phpFastCache::$sys['method'] = \"pdo\" line to the code.\nAs a side note, the testing.php also shows an error when I remove: phpFastCache::debug(phpFastCache::systemInfo()); line from it:\n```\nCaching = auto\nSET 1 -->\nFatal error: Call to a member function prepare() on a non-object in /php_fast_cache.php on line 1626\n```\n3.\n```\nArray\n(\n    [os] => Array\n        (\n            [os] => Linux\n            [php] => ucgi5\n            [system] => home.pl Linux x86_64\n            [unique] => (something)\n        )\n[errors] => Array\n    (\n    )\n\n[storage] => disk\n[method] => pdo\n[drivers] => Array\n    (\n        [apc] => \n        [xcache] => \n        [memcache] => \n        [memcached] => \n        [wincache] => \n        [pdo] => 1\n        [mpdo] => 1\n        [files] => 1\n    )\n\n)\nData will be testing - Included NULL and Emptry String\nArray\n(\n    [0] => 1\n    [1] => abc hello world\n    [2] => \n    [3] => \n    [4] => 0\n    [5] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n            [3] => 4\n            [4] => string\n            [5] => \n            [6] => \n            [7] => GOT IT\n            [KEY] => VALUE\n            [N] => \n            [E] => \n            [X] => -1\n        )\n)\n\nCaching = auto\nSET 1 --> GET 1 = 1 Increase to 4 Decrease to 1 || Finished Testing || Deleted\nSET 2 --> GET 2 = abc hello world || Finished Testing || Deleted\nSET 3 --> GET 3 = || Finished Testing || Deleted\nSET 4 --> GET 4 = || Finished Testing || Deleted\nSET 5 --> GET 5 = 0 Increase to 3 Decrease to 0 || Finished Testing || Deleted\nSET 6 --> GET 6 = Array ( [0] => 1 [1] => 2 [2] => 3 [3] => 4 [4] => string [5] => [6] => [7] => GOT IT [KEY] => VALUE [N] => [E] => [X] => -1 ) || Finished Testing || Deleted\n\nCaching = files\nSET 1 --> GET 1 = 1 Increase to 4 Decrease to 1 || Finished Testing || Deleted\nSET 2 --> GET 2 = abc hello world || Finished Testing || Deleted\nSET 3 --> GET 3 = || Finished Testing || Deleted\nSET 4 --> GET 4 = || Finished Testing || Deleted\nSET 5 --> GET 5 = 0 Increase to 3 Decrease to 0 || Finished Testing || Deleted\nSET 6 --> GET 6 = Array ( [0] => 1 [1] => 2 [2] => 3 [3] => 4 [4] => string [5] => [6] => [7] => GOT IT [KEY] => VALUE [N] => [E] => [X] => -1 ) || Finished Testing || Deleted\n\nCaching = pdo\nSET 1 --> GET 1 = 1 Increase to 4 Decrease to 1 || Finished Testing || Deleted\nSET 2 --> GET 2 = abc hello world || Finished Testing || Deleted\nSET 3 --> GET 3 = || Finished Testing || Deleted\nSET 4 --> GET 4 = || Finished Testing || Deleted\nSET 5 --> GET 5 = 0 Increase to 3 Decrease to 0 || Finished Testing || Deleted\nSET 6 --> GET 6 = Array ( [0] => 1 [1] => 2 [2] => 3 [3] => 4 [4] => string [5] => [6] => [7] => GOT IT [KEY] => VALUE [N] => [E] => [X] => -1 ) || Finished Testing || Deleted\n\nCaching = mpdo\nSET 1 --> GET 1 = 1 Increase to 4 Decrease to 1 || Finished Testing || Deleted\nSET 2 --> GET 2 = abc hello world || Finished Testing || Deleted\nSET 3 --> GET 3 = || Finished Testing || Deleted\nSET 4 --> GET 4 = || Finished Testing || Deleted\nSET 5 --> GET 5 = 0 Increase to 3 Decrease to 0 || Finished Testing || Deleted\nSET 6 --> GET 6 = Array ( [0] => 1 [1] => 2 [2] => 3 [3] => 4 [4] => string [5] => [6] => [7] => GOT IT [KEY] => VALUE [N] => [E] => [X] => -1 ) || Finished Testing || Deleted\n\nCaching = xcache\n<-- NOT SUPPORTED ON THIS SERVER WITH DEFAULT CONFIG 127.0.0.1\n\nCaching = apc\n<-- NOT SUPPORTED ON THIS SERVER WITH DEFAULT CONFIG 127.0.0.1\n\nCaching = memcache\n<-- NOT SUPPORTED ON THIS SERVER WITH DEFAULT CONFIG 127.0.0.1\n\nCaching = memcached\n<-- NOT SUPPORTED ON THIS SERVER WITH DEFAULT CONFIG 127.0.0.1\n\nCaching = wincache\n<-- NOT SUPPORTED ON THIS SERVER WITH DEFAULT CONFIG 127.0.0.1\nPHP Version 5.3.21\nSystem  home.pl Linux x86_64\nServer API  UltraCGI/1.0 for IdeaWebServer\nLoaded Configuration File   /usr/local/php/php.ini\nPHP API     20090626\nPHP Extension   20090626\nZend Extension  220090626\nZend Extension Build    API220090626,NTS\nPHP Extension Build     API20090626,NTS\nZend Memory Manager     enabled\nZend Multibyte Support  disabled\nIPv6 Support    enabled\nRegistered PHP Streams  https, ftps, compress.zlib, compress.bzip2, php, file, glob, data, http, ftp, phar, zip\nRegistered Stream Socket Transports     tcp, udp, unix, udg, ssl, sslv3, sslv2, tls\nRegistered Stream Filters   zlib., bzip2., convert.iconv., mcrypt., mdecrypt., string.rot13, string.toupper, string.tolower, string.strip_tags, convert., consumed, dechunk \n...\n```\nIt it would take too much time to find a possible cause, please don\u2019t bother your head about it - maybe it's just one strange case with my non-standard shared server?\n. Here is pdo_sqlite:\npdo_sqlite\nPDO Driver for SQLite 3.x   enabled\nSQLite Library  3.7.7.1\nIf you need more information from phpinfo() (I cannot send you mine, but here is phpinfo example from my hosting: http://home.pl/files/phpinfo.php), please write.\nThank you for your answers!\n. I confirm that new version is working without error. Thank you for your work!\n. Hello\nYes, I get 'Fatal error: Call to a member function prepare() on a non-object in php_fast_cache.php on line 1575' in Revision 616\n. Rev 617 works OK.\n. ",
    "mbenabda": "Hi khoaofgod, I get the same error\nI'm running PHP 5.4.7, and pdo_sqlite is active on my server: SQLite Library 3.7.7.1\n1. Open your php_fast_cache.php , let me know the latest date updated on the script. \n-> can't find a date, but it's revision 616. I just cloned the repository.\n2. Copy the Error and The Code and paste here.\n   -> \n   Error is:\n```\n    Notice: Undefined index: method in /phpfastcache/php_fast_cache.php on line 291\nNotice: Undefined index: method in /phpfastcache/php_fast_cache.php on line 312\n\nNotice: Undefined index: method in /phpfastcache/php_fast_cache.php on line 322\n\nNotice: Undefined index: method in /phpfastcache/php_fast_cache.php on line 1501\n\nFatal error: Call to a member function prepare() on a non-object in /phpfastcache/php_fast_cache.php on line 1575\n\n```\nCode to reproduce:\nphp\n$nada = phpFastCache::get(\"nada\");\nphpFastCache::$storage = \"auto\";\nphpFastCache::set(\"nada\", array(), 864000); //10 days\n1. run testing.php. Copy and paste the result here.\n```\n    Try get Server information ... Take 10 - 15 seconds to detect ...\nArray ()\n\nData will be testing - Included NULL and Emptry String\n\nArray (\n    [0] => 1\n    [1] => abc hello world\n    [2] => \n    [3] => \n    [4] => 0\n    [5] => Array (\n\n            [0] => 1\n            [1] => 2\n            [2] => 3\n            [3] => 4\n            [4] => string\n            [5] => \n            [6] => \n            [7] => GOT IT\n            [KEY] => VALUE\n            [N] => \n            [E] => \n            [X] => -1\n        )\n\n)\n\nCaching = auto \nSET 1 --> \nNotice: Undefined index: method in /phpfastcache/php_fast_cache.php on line 291\nNotice: Undefined index: method in /phpfastcache/php_fast_cache.php on line 312\nNotice: Undefined index: method in /phpfastcache/php_fast_cache.php on line 322\nNotice: Undefined index: method in /phpfastcache/php_fast_cache.php on line 1501\nFatal error: Call to a member function prepare() on a non-object in /phpfastcache/php_fast_cache.php on line 1665\n\n```\nThanks in advance for any help\n. thanks for the fix, it works for me as well.\n. ",
    "Neeke": "All right. Code re-format will make coder read better.\n. ",
    "Walgermo": "Sorry for the late response, i am using PHP Version: 5.3.18 and i got the newest revision, 616 :)\n. I get the same error-message  :/\n\nCaching = auto \nSET 1 --> \nFatal error: Call to a member function prepare() on a non-object in /home/walgermo/public_html/phpfastcache/php_fast_cache.php on line 1665\nMy settings ins phpfastcache:\npublic static $storage = \"pdo\"; // PDO | mpdo | Auto | Files | memcache | apc | wincache | xcache\n    public static $files_cleanup_after = 1; // hour | auto clean up files after this\n    public static $autosize = 40; // Megabytes\n    public static $path = \"\"; // PATH/TO/CACHE/ default will be current path\n    public static $securityKey = \"cache.storage\"; // phpFastCache::$securityKey = \"newKey\";\n    public static $option = array();\n    public static $server = array(array(\"localhost\",11211)); // for MemCache\n    public static $useTmpCache = false; // use for get from Tmp Memory, will be faster in checking cache on LOOP.\n    public static $debugging = false; // turn true for debugging\n    private static $step_debugging = 0;\n. Thanks! \nNo errors on the test now. It can also be set to auto without errors :) \n. ",
    "nikmauro": "Here the config \n``` PHP\n$cms39_cache_config = array(\n        \"storage\"   =>  \"apc\",\n        \"path\"      =>  ABS_CACHE_PATH , /* /var/www/vhosts/###/httpdocs/tmp/cache/  /\n        \"htaccess\"  =>  false\n    );\nphpFastCache::setup($cms39_cache_config);\n$cache = phpFastCache();\n```\nThe server running FastCGI with PHP 5.4.37\nWhy ignore the storage aPC and return the FILE chmod issue?\nThe chmod issue with FastCGI it not right!\nHere the logs \nFatal error: Uncaught exception 'Exception' with message 'PLEASE CHMOD /var/www/vhosts/###/httpdocs/tmp/cache//cache.storage.###/ - 0777 OR ANY WRITABLE PERMISSION!' in /var/www/vhosts/###/httpdocs/vendor/phpfastcache/phpfastcache/phpfastcache/2.4.2/drivers/files.php:58 Stack trace: #0 /var/www/vhosts/###/httpdocs/vendor/phpfastcache/phpfastcache/phpfastcache/2.4.2/drivers/files.php(108): phpfastcache_files->getFilePath('4cf0c74dd903c3b...') #1 /var/www/vhosts/###/httpdocs/vendor/phpfastcache/phpfastcache/phpfastcache/2.4.2/base.php(159): phpfastcache_files->driver_get('4cf0c74dd903c3b...', Array) #2 /var/www/vhosts/###/httpdocs/library/cache.php(151): phpFastCache->get('4cf0c74dd903c3b...') #3 /var/www/vhosts/###/httpdocs/library/functions.php(1385): cms39_cache_fetch('siteurl') #4 /var/www/vhosts/###/httpdocs/library/plugins.php(6): get_option('siteurl') #5 /var/www/vhosts/###/httpdocs/library/settings.php(6): cms39_has_su in /var/www/vhosts/###/httpdocs/vendor/phpfastcache/phpfastcache/phpfastcache/2.4.2/drivers/files.php on line 58\n. The APC driver work with Fast CGI in my server, i will try and memcache without success\nIf change the config with this, the cache working with APC or MEMCACHE.\nPHP\n$cache = phpFastCache(\"apc\");\nhere my PHPINFO\n```\nSystem  Linux  2.6.32-504.3.3.el6.x86_64 #1 SMP Wed Dec 17 01:55:02 UTC 2014 x86_64\nBuild Date  Jan 21 2015 11:11:51\nServer API  CGI/FastCGI\nVirtual Directory Support   disabled\nAdditional .ini files parsed    /etc/php.d/00-ioncube-loader.ini, /etc/php.d/apc.ini, #####\nConfiguration\napc\nAPC Support enabled\nVersion 3.1.15-dev\nAPC Debugging   Disabled\nMMAP Support    Enabled\nMMAP File Mask  /tmp/apc.cT3Aer\nLocking type    pthread mutex Locks\nSerialization Support   php, igbinary\nRevision    $Revision$\nBuild Date  Feb 14 2014 13:49:03\nmemcache\nmemcache support    enabled\nVersion 3.0.8\nRevision    $Revision: 329835 $\nDirective   Local Value Master Value\nmemcache.allow_failover 1   1\nmemcache.chunk_size 32768   32768\nmemcache.compress_threshold 20000   20000\nmemcache.default_port   11211   11211\nmemcache.hash_function  crc32   crc32\nmemcache.hash_strategy  consistent  consistent\nmemcache.lock_timeout   15  15\nmemcache.max_failover_attempts  20  20\nmemcache.protocol   ascii   ascii\nmemcache.redundancy 1   1\nmemcache.session_redundancy 2   2\nmemcached\nmemcached support   enabled\nVersion 2.2.0\nlibmemcached version    1.0.18\nSASL support    yes\nSession support yes\nigbinary support    yes\njson support    yes\nmsgpack support yes\n```\n. Any progress or any help about this?\n. here some libraries with tags implementations  [https://github.com/cpojer/php-cache] [http://www.gabrielemittica.com/cont/guide/brennocache-a-smart-cache-engine-for-your-php-applications/19/1.html]\n. @khoaofgod This is awesome news!\n. composer require \"phpfastcache/phpfastcache\": \"dev-final\"\nand return this error Warning: \nPHP\nrequire(/vendor/phpfastcache/phpfastcache/phpfastcache/phpfastcache/phpfastcache.php): failed to open stream: No such file or directory in /home/www/cms39/vendor/composer/autoload_real.php on line 54\n. perfect!\n. I have rename manual the folder path and now the project return this \nFatal error: Class 'Phpfastcache\\core\\InstanceManager' not found in /home/www/cms39/library/cache.php on line 53\nI test with code in examples/3.setup.php\n. After composer update the the file /vendor/composer/autoload_prs4.php is empty\n``` php\n<?php\n// autoload_psr4.php @generated by Composer\n$vendorDir = dirname(dirname(FILE));\n$baseDir = dirname($vendorDir);\nreturn array();\n```\n. composer.json\nJSON\n{\n  \"require\": {\n    \"phpfastcache/phpfastcache\": \"dev-final\"\n  }\n}\n`# composer update\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\n- Installing phpfastcache/phpfastcache (dev-final 3cca8f8)\n  Cloning 3cca8f84903aff1faec67dd39a63fef852b992fc\nWriting lock file\nGenerating autoload files`\nautoload_files.php\n``` php\n$vendorDir = dirname(dirname(FILE));\n$baseDir = dirname($vendorDir);\nreturn array(\n    'b4d7f4479c3aadd86b8a9e7699412297' => $vendorDir . '/phpfastcache/phpfastcache/src/Phpfastcache/legacy/aliases.php',\n);\n```\nautoload_namespaces.php\n``` PHP\n$vendorDir = dirname(dirname(FILE));\n$baseDir = dirname($vendorDir);\nreturn array(\n    'Phpfastcache' => array($vendorDir . '/phpfastcache/phpfastcache/src'),\n);\n```\n. @Geolim4  https://www.wetransfer.com/downloads/c3b90b7bee0954e955ee9a91eae57d1520160205191615/10fe6a496881290b175bcdd154d1d08020160205191615/6295f1\n. Perfect! Thanks @Geolim4 \n. Thanks!\n. The same with version 5 with php7\n. I have the v5 up and running without problems!\n. @Geolim4  i have test this code and not working! \nFatal error: Uncaught Predis\\Connection\\ConnectionException: AUTH failed: ERR Client sent AUTH, but no password is set [tcp://127.0.0.1:6379] in /var/www/vhosts/httpdocs/vendor/predis/predis/src/Connection/AbstractConnection.php:155 Stack trace: #0. with false\nFatal error: Uncaught Predis\\Connection\\ConnectionException: AUTH failed: ERR Client sent AUTH, but no password is set [tcp://127.0.0.1:6379] in \nwith null\nFatal error: Uncaught Predis\\Connection\\ConnectionException: SELECT failed: ERR invalid DB index [tcp://127.0.0.1:6379] in . i try this and working \nPHP\n$this->instance = new PredisClient(array_merge([\n          'host' => '127.0.0.1',\n          'port' => '6379',\n          'password' => null,\n          'database' => null,\n        ], $config));. Thanks!. Perfect!. hello @Geolim4 , i have the same code with this example https://github.com/PHPSocialNetwork/phpfastcache/blob/final/docs/examples/predis.php\n. i have install in composer the predis driver \"composer require predis/predis\" and now working. Now i have this problem\n```php\nNotice: Undefined index: e in /var/www/vhosts/8.com/httpdocs/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/Pool/DriverBaseTrait.php on line 186\nFatal error: Uncaught phpFastCache\\Exceptions\\phpFastCacheInvalidArgumentException: $expiration must be an object implementing the DateTimeInterface in /var/www/vhosts/8.com/httpdocs/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/Item/ItemBaseTrait.php:158 Stack trace: #0 /var/www/vhosts/8.com/httpdocs/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/Pool/CacheItemPoolTrait.php(122): phpFastCache\\Drivers\\Redis\\Item->expiresAt(NULL) #1 /var/www/vhosts/8.com/httpdocs/library/cache.php(130): phpFastCache\\Drivers\\Redis\\Driver->getItem('497aae29104bc7f...') #2 /var/www/vhosts/8.com/httpdocs/library/cache.php(59): cms39_cache->get('497aae29104bc7f...') #3 /var/www/vhosts/8.com/httpdocs/library/plugins.php(1034): cms39_cache_fetch('siteurl') #4 /var/www/vhosts/8.com/httpdocs/library/cms39_validate.php(98): get_option('siteurl') #5 /var/www/vhosts/8.com/httpdocs/library/settings.php(21): cms39_has_subdomain() #6 /var/www/vhosts/8.com/httpdocs/library/shared.php in /var/www/vhosts/8.com/httpdocs/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/Item/ItemBaseTrait.php on line 158\n```. Perfect, thanks @Geolim4 . No i use the same database index. In the same server host Hundred of sites with redis.. Take a look in this post, it say about DB index and Prefix. The redis prefix it's drupal implementation?\nIf you use the Redis module for Drupal, you can set the database and prefix used by your sites. The default Redis database is 0 (so multiple sites use the same database) but the default prefix is the HTTP_HOST variable (so multiple sites use different prefix). You can however, set a shared prefix on both site in their settings.php:\n$conf['cache_prefix']['default'] = 'mysite_';\nYou can also set prefix per cache bin, to only share a subset of the cache between them. See Redis module's README.txt for more details.\nOf course, this should only be done if your are sure the cache can actually be shared. In your case, I guess the sites share the database and are used to balance the load.. ",
    "betterfasterstronger": "works fine ;) \n. ",
    "drakenm": "PHP ver is 5.3\nusing phpfastcache 2.1\nI realize this will go away when I turn error reporting off... but I was wondering if this could cause a problem for me later on\n. Thank you! Problem solved!! I will use http://www.codehelper.io from now on, thanks for your excellent tool!\n. ",
    "LisaYF": "still not. ",
    "Geolim4": "@LisaYF Please open a new topic if you got an issue, thanks you.. I'm writing something similar as i forked your project, i will probably test it in next week as it a quick but complex improvement :)\n. Great, it let me the time to study all the possibilities.\n. I'm currently re-installing my project using composer, so i will not be able to give the PR so soon :/\nBut don't close it please, i stay tuned.\n. I finally not found how to throw a custom class, BUT, i found a way to pass out this bug:\nDoes it is possible that:\nphp\n        if(isset($v[1]) && is_numeric($v[1])) {\n            return $this->set($name,$v[0],$v[1], isset($v[2]) ? $v[2] : array() );\n        } else {\n            throw new Exception(\"Example ->$name = array('VALUE', 300);\",98);\n        }\nmodified to this?\nphp\n        if(isset($v[1]) && is_scalar($v[1])) {\n            return $this->set($name,$v[0],$v[1], isset($v[2]) ? $v[2] : array() );\n        } else {\n            throw new Exception(\"Example ->$name = array('VALUE', 300);\",98);\n        }\n(using is_scalar instead of is_numeric) ?\n. Bump :)\n. Hello,\nThere's no way to do that since there's no real way to retrieve stored keys.\nBut you can use tags to achieve that in V5 and later.\nCheers,\nGeorges\n. Referencing #494. Merged by owner/collaborator.\n. Gotta implements this for V5 :)\n. Reported to V6 as the V4 and V5 will keeps the same method names and had already interfaces.\n. As the v4 will be supported for a while, the psr6 will be implemented in v5 (branch created but no yet commited).\n. I will need some testers so can i get in touch with you when the first preview will be available ?\n. Hi, the V5 just got his first commit with psr6 implementation:\nhttps://github.com/PHPSocialNetwork/phpfastcache/tree/v5\nAnyway i suggest you to carefully read the roadmap: https://github.com/PHPSocialNetwork/phpfastcache/blob/v5/V5-ROADMAP.md\nThe V5 is not yet finalized neither released, it's just for information :)\nWe're working hard on it, expect again 2 months of dev for the first BETA :)\nRegards,\nGeorges\n. @lean-stack Will be added to the roadmap\n. @bfintal The v4 will be maintained for at least 2 years until v4.5.x maybe 4.6.x\nWe want user to have the time to upgrade their code to be php 5.5/composer compatible.\n. The psr6 is now fully implemented in v5.\nThanks you for your contribution :)\n. Hello @SebastianZ,\nWe have decided to delay the Wiki as an non-prioritized task.\nCurrently the Wiki is very descriptive and comprehensive enough .\nThe readme provides also a lot of useful information.\nAlso we have been working on drastically improving code annotations.\nTherefore any today-IDE is now able to understand PhpFastCache code.\nCheers,\nGeorges. We could make this, but there's a lot of enhancements/fixes before.\nYou can also define your own cron that point to a file that run the clean() method API.\nI close this one for now, this will be \"maybe\" discussed in v5.\n. We do not have plan for third party drivers right now, it's not a \"final no\", but we have a lot things to fix and improve currently ;)\nRegards,\nGeorges\n. Hi, not yet, i will add this to my todo-list.\nSorry for closed the bug too soon :)\n. Merged :+1: \n. Related to #164\n. Just define a shared directory for the cache and a shared securityKey, it should work.\nAnyway please test the last release (4.0.3), it is not production stable, but stable enough for testing purposes. Reopen this issue if needed.\n. Did you checked the chmod (777) ?\nAlso you may need to chown the directory as you changed the server, the uid may changed too.\n. Bash commands:\n- chown -R user your_cache_directory\n- chmod -R 777  your_directory\n. You have to call the API method such as get() and set().\nThe latest version documents this ;)\n. It's not planned right now, but feel free to contribute when you'll get some more skills, i'll be glad to merge a new driver to Pfc ;)\n. What is the driver you used ?\n. @ibnbd ? :)\n. Try fetching as an array using PDO::FETCH_ASSOC :)\n. It was probably fixed :)\n. In 2 separate PR i guess?\n. Done, finally, in two separate commits\n. Ok merged, thanks !\n. @khoaofgod Are you ok with this ?\n. Okey, nice so !!\n. What's the php minimum compatibility ?\n. Copy that :)\n. I will also define missing visibility attributes and follow some psr-1/2 recommendations.\nIs up to you to validate the PR later :)\n. You will have a lot of code review :D\n. Done but i resolved a conflict on some files, can you check if a don't forget anything during the merge ?\nThanks.\nConflicts:\n    phpfastcache/3.0.0/abstract.php\n    phpfastcache/3.0.0/drivers/files.php\n    phpfastcache/3.0.0/drivers/sqlite.php\n    phpfastcache/3.0.0/phpfastcache.php\n. Commit @17c589f\n. Does this bug was inserted wth @175f4897f7f54eb1fe44dde9d07c1af251feb7e1 ?\n. Fixed\n. Warning, i resolved a conflict on some files, can you check if a don't forget anything during the merge ?\nThanks.\n- Conflicts:\n  -  phpfastcache/3.0.0/abstract.php\n  -  phpfastcache/3.0.0/drivers/files.php\n  -  phpfastcache/3.0.0/drivers/sqlite.php\n  -  phpfastcache/3.0.0/phpfastcache.php\n. Related issue: #177\n. Already merged ? Oo\nSo fast !\n. Ok :)\n. You're welcome, i love readable and well-commented code :))\n. Then let's go !\nI will keep going in your \"legacy code\" way, until someone make the autoload ;)\n. Not needed for now, i'm glad to contribute ;)\n. \u200bDid you ran the composer ?\u200b\n2016-02-05 11:02 GMT+01:00 nikmauro notifications@github.com:\n\nanual the folder path and now the project return this\n\nGeorges.L\n. Could you zip me the whole directory including phpfastcache and the composer bin ?\nThanks !\n. I also retested it in my side with a composer update, everything works fine, i'm surprised O.o\n. Ok got it, i'm on it.\n. Fixed with 4.0.3.\nDelete your vendor directory and run a composer update :)\nRegards,\nGeorges\n. Hi,\nThe 2.1 is now pretty old ! You should consider to upgrade quickly  :)\nRegards,\nGeorges\n. Indeed, we are working hard with the V4 to get the code much close as we can with psr standards.\nFor now we keep the legacy working, but you have to have to think at your code to be composer-compliant as soon as you can ;)\n. Thanks for the report, will be fixed asap !!!!\n. We'll have a look , thanks for the report :)\n. @canc \nCan you send me your phpinfo to contact@geolim4.com please ?\nThanks you !\n. Got it, thanks you :)\nLe 29 mars 2016 00:54, \"canc\" notifications@github.com a \u00e9crit :\n\n@Geolim4 https://github.com/Geolim4 sent, thanks!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/234#issuecomment-202615663\n. To be honest i will have a look this weekend cuz my week days are tiring :)\n. Hi @nikmauro, you can extends phpfastCache to implements 'em.\nIf you look closely to the driver interface they already exists:\n\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Core/DriverInterface.php\n. Anyway cookie \"cache\" should be used for very small things, so we must simply trow an exception when the size is exceeded.\n. I'll take a look this week, seems weird anyway :(\n. @w3l  After reviewing your error, it seem that's not an issue with our autoloader.\nI did not introduced file_exists() in the autoloader but is_readable().\nAnd the error is pretty clear:\nFile(/secret/Data/Library/phpFastCache/CacheManagerphpFastCache/CacheManager.php) is not within the allowed path(s): (secret) in /secret/api/vendor/hoa/core/Consistency.php on line 355\nYou called directly CacheManager.php from your file Consistency.php. Also there is a weird path:\n/phpFastCache/CacheManagerphpFastCache/CacheManager.php\nYou should not call any file of the lib directly, but use the autoloader once instead.\n. Yeah but i don't get why the error is triggered outside the phpFastCache libs.\n. Yes, but i don't think that an additional check is necessary, it'll slow down the code and hide potential user code issue. Let's waiting more feedback of @w3l  :)\n. Do you have a skype or something else to discuss privately ?\n. Yes it is, i'll be online tonight approximately. (8AM UTC+1)\n. After many tests we are sure that is not a part of our autoloader, in fact we never getting out of the open_base_dir.\nWe did not used composer autoload for the main reason that not everyone is using composer, some people use PhpFastCache vanilla, so it has been decided to implement our own composer.\nAlso i tried to catch you on skype but unfortunately you were often offline :( \n. Can you send me your composer.json to contact@geolim4.com please ?\nThanks you\nLe 24 mars 2016 06:33, \"w3l\" notifications@github.com a \u00e9crit :\n\n@Geolim4 https://github.com/Geolim4 I gave it another try, I installed\n4.3.11 yet again. Same issue.\nI changed:\nrequire_once \"/secret/api/vendor/autoload.php\"; // Path to composer autoloader\nto:\nrequire_once \"/secret/api/vendor/phpfastcache/phpfastcache/src/autoload.php\";\nGuess what, no issues!\nBut I can't require 20+ packages individually because one of them don't\nplay nicely with composer. Sure, I could use phpFastCache \"vanilla\" but my\nguess is that other composer-users has similar issues(even if it depends on\nenvironment, other packages, etc).\nTo sum things up:\n- No issues with: 4.3.7\n- I use 20+ other packages, no issues with any of them in my\n  environment!\n- 4.3.8-4.3.11 has some conflict with composer and/or other packages\n  to generate warnings.\n- Your autoloader works perfectly \"vanilla\", but in combination with\n  composers generated autoloader something messes up somewhere.\nWe did not used composer autoload for the main reason that not everyone is\nusing composer, some people use PhpFastCache vanilla, so it has been\ndecided to implement our own composer.\nThat is great! Provide an autoloader as a stand alone file, but let\ncomposer handle all the autoloading for composer users. Again, telling\ncomposers autoloader to use your autoloader just seems to complicate\nthings...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/243#issuecomment-200678398\n. @khoaofgod I received the composer.json, i will have a look tonigh.\n. @khoaofgod I have the composer.json, i'll test it tomorrow :)\n. I do need the driver that you use && your open_base_dir setting (in private if you want)\n. > That is great! Provide an autoloader as a stand alone file, but let composer handle all the autoloading for composer users. Again, telling composers autoloader to use your autoloader just seems to complicate things...\n\nIn fact if you look at the ReCaptcha lib: https://github.com/google/recaptcha/blob/master/src/autoload.php\nWe do exactly the same thing :(\n. Can you open: vendor/composer/installed.json\nAnd replace phpFastCache autoload with this one:\n\"autoload\": {\n        \"psr-0\": {\n            \"\": \"src/\"\n        },\n        \"files\": [\n            \"src/phpFastCache/phpFastCache.php\"\n        ]\n    }`\nAnd then make a composer update.\n(Check after the composer update that the psr-0 key is always present).\nIf it work then i potentially identified a bug with hoa library :)\nAlso try to put phpfastcache on top of your composer.json requirements :)\n. Check with the api get() function.\nIf it return something then it's working :)\n. @westy92 Please open a new issue if you have any issue.\nThanks :). We started an approach, but the full implementation wont be completed before 4.4.x or 5.x \nBut we're on it don't worry :)\n. It'll be fixed in the next release with some others bugs, just be patient ;)\n. Hello @Pansa237,\nCan you open your own issue please ? :)\nAlso try to chmod recursively using \"-r\"  argument.\nCheers,\nGeorges. serialization is a standard of php included in the core and fast enough for common uses.\nWe should not rely to third party libs due to performances/dependencies issues.\nEven if pecl extension are compiled they're still less efficient that php core functions :)\n. The problem is that json_encode doesn't offers any integrity control. This part is very important since the cache must be 100% trusted. (Speaking about integrity)\nAlso serialize is not less readable than json_encode (unless if you use the JSON_PRETTY_PRINT which use significant more disk space).\n. And i forgot: You can't save object name/state with json_encode() :'(\n. For small objects yes, it's small, what about big object ? :)\n. @caperneoignis \nHi thanks you for your report, i have some questions:\n1- What's the driver tested ?\n2- Can you test for a cache duration that take at least 1 minute please ?\nThanks you :)\n. You cal also store an array of your value and re-set/get it with unseted key :)\n. For the v4 we will keep this as an array, anyway for the v5 an object CacheStatistic (with a cool API doc) will be returned.\nBut keep in mind that this is an enhancement and not a bugfix, so bugs will be fixed first :)\n. For your information the v5 has implemented a specific object for the statistic: 5d545e49b6c23d55d7273d0074b9cd26d368d2fa\nThe documentation about this will follow when the v5 come out :)\n. An object has been dedicated to this job in V5, see:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/[V5]-The-cache-statistics\nUnfortunately we can't extract statistic key-based due to performances issues.\n. Hi,\nWhat kind of driver are you using ?\nRegards,\nLe 01/05/2016 \u00e0 13:11, jbcubed3 a \u00e9crit :\n\nHi,\nHaving a problem with the clearing the cache and reading cache stats.\nCode looks like this:\nrequire_once(\"/phpfastcache/phpfastcache.php\");\n$cache = phpFastCache();\n$cache->clean();\nI can remove an individual cache object just fine with \n$cache->delete(); but clean();\nis failing for some reason. Caching does seem to work though, just \ncan't seem to clean() anymore - despite it working previously.\n$array = $cache->stats();\nprint_r($array);\nThis outputs:\nArray ( [info] => Array ( [Total [bytes]] => 0 [Expired and removed \n[bytes]] => 0 [Current [bytes]] => 0 ) [size] => 0 [data] => Array ( ) )\nAny ideas on how to resolve? Am really stuck on this one!\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub \nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/274\n. Can you debug your cache instance and tell me the kind of driver you are using ?\n. Use var_dump() or get_class() and tell us the driver used.\nLe 1 mai 2016 23:54, \"Khoa Bui\" notifications@github.com a \u00e9crit :\nI will commit a new example file by tonight and let you know for u can run\nthat test file for clean();\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/274#issuecomment-216075290\n. Does the target directory is writeable ?\n. Weird, I can't reproduce it right now, I guess that you use Windows Env ?\n. Do you have the possibility to test it on Lamp or even Map please (Linx/Mac) ?\n. Fixed with #294 :)\nWe identified the bug in an other way.\n. Can you pr to the v5 too please ?\nThanks you :)\n. @misternerd  It's almost perfect, can you replace private by protected please ? Else it wont allow class extends :)\n. Nevermind, my IDE is open, i will do it finally :)\n. Done.\n. array_key_exists provides better data-structure control and if the key exists and is null it mean that there is a code-logic issue. Also this code should be called only once as the driver construct must be kept and/stored in your code as per https://github.com/PHPSocialNetwork/phpfastcache/wiki/[V5]-Why-calling-getInstance%28%29-each-time-is-a-bad-practice-%3F\n. What about this one ?\n\n$cache = CacheManager::getInstance('Files', ['path' => '\\path\\to\\cache']);\n. Also is your directory writable and readable ? (Not outside php open_basedir)\n. Where did you put the $path config ?\n. your path must be an absolute path\n. DIR returns an absolute path so it's fine. To be honest i have no idea of such behaviour o.O\n. did you have a \"slow\" I/O server performance ?\nSqlite can take a while especially when writing a lot of data.\n. You had the same issue with both Files and Sqlite drivers ?\n. I can't reproduce the problem right now :/\n. What abotu casting to string ?\n. Then i don't know what's wrong for now.\nMaybe @khoaofgod will know something i missed :'(\n. You did it the wrong way, here is the good one:\n$cache_instance = CacheManager::Files(array('path' => 'path to the cache'));\n. You're welcome :)\n. Ok, i handle it.\n. Fixed, thanks you for your contribution.\n:innocent:\n. Hi !\nDid you tried with  getInstance('Memcached') instead ?\n. > $cache = CacheManager::getInstance();\nis wrong, try $cache = CacheManager::getInstance('Memcached');\n:)\n. Can you use the tags instead ?\n. I\u2019m closing this pull request for now because of (inactivity / outdated code / \u2026).\n@ddauto you can always reopen it though! :) Please (update the pull request / rebase your branch / clarify \u2026).\nRegards,\nGeorges.L\n. Hi,\nWe can't find out the origin of this issue, as you can see that property is already well-defined:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/CacheManager.php#L40\nDon't you, anytime in your code, unset this var ?\nRegards,\nGeorges\n. Can you temporary set this property to \"protected\" instead of public to identify out the code part that unset this var.\nThanks you,\nGeorges\n. Ok thanks you, I will have a look tonight.\nGeorges\n. I really can't reproduce this bug. And there's no code that unset this var, it's always reset to \"array()\"\nYou may have a php memory leak (this occurs pretty often tho). Try to upgrade your php version to the last 5.6.x version (if possible).\nRegards,\nGeorges\n. Exactly !\n. In V4 it should do it, but you can manually delete these files using clean() method. But this will destroy the cache.\n. Please read the doc and the wiki, the V5 is a full rewrite of the lib.\nThanks you :)\n. Also here's the readme:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/v5/README.md\n. Can you try with the latest fix ?\n(Not merged yet, so you have to hard-fix it)\n. 448c49ce97ed55c3361e2365a0ebe90b8a9bd08c\n. Sorry i just realized that i pushed on the wrong branch....\n. Ok, i will release it on master, thanks you.\n. Fixed on V5. If no bug appears, the release will be dispatched next week\n. Don't merge yet i'll handle it.\n. Indeed, I always thought that array_key_exist was faster than isset (despite it's a structure control) due to the fact that isset checks if the key exist and is not null while array_key_exists just tests if the key exists.\nThanks for the benchmark, would you make a pull request for this ?\n. Ok, i give your some time to do it, anyway my stash is ready, just in case :smile: \n. Just donc forget to checkout on v5 ... :)\n. Ok thanks you :)\n. Hi Reno,\nWe are not ready the merge the v5 yet.\nFor array_key_exists the choice was also took by design because it provides better data structure control and is semantically more appropriated with the context.\nThere's still a small performance gain to use isset() instead of array_key_exists. But let's be fair: as of 5.6 or even phpNG the zend engine/php core got a very high improvement which mean that isset() is no longer significantly faster than array_key_exists. In the mean time, the code remain more semantically understandable using well-designed functionq and methodq for specific var type manipulation :)\nTo avoid any bug we'll make the merge by ourselves, but i appreciate your contribution anyway.\n. Hi Reno,\nThe sleek array (5.4) is not the only one reason that lead us to make this choice.\nThe main reason is that php 5.3 and 5.4 are now in EOL state which mean they are abandonned, the 5.5 is also so close of EOL because it reached the Security Fixe Only state. By this choice we want to push the users to migrate as soon of possible to a more recent php version. It may look selfish, but we can't support these old boys forever.\nThe other reason is the full support of array and string literal dereferencing (5.5) and also the class member access on instantiation (5.4).\nFinally, starting php 5.5, each major versions gain a lot of performances improvement regarding specific criteria such array iteration, objects storage/manipulation etc.\nRegards,\nGeorges\n. If you code is very old old you can still use the v4 for 2 years until we stop the support of this one.\n. Can you please use instanceof instead of use_a :)\nThanks you !\n. Also what's your php version please ?\n. The V5 require at least PHP 5.5, so please try again with a greater version :)\n. Yes, but there's some things that risk to not work well php 5.4. I actually do not recommend to use Pfc under 5.5. Really :/\n. Yeah sorry, but the V5 was targeted for 5.5, and we wont make backward compatible patches for <5.5 versions. In the meantime you can still use the V4 which will be supported for a while :)\n. Will be added for 5.1\n. Thanks you to you for trusting on Pfc  :)\n. Planned in 5.1 as per V5.1 Roadmap :)\n. Would you like to provide me a ftp access (in private) with a test url where your \nserver is installed ?\nMine just crashed and i do not have any other server on my hand :/\nThanks you,\nGeorges\nLe 04/07/2016 \u00e0 19:37, toutavous a \u00e9crit :\n\nThanks so much in advance. I never had the time to appreciate you both \nfor such a wonderful cache solution. I look forward to it.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub \nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/310#issuecomment-230332490, \nor mute the thread \nhttps://github.com/notifications/unsubscribe/ABRTZ7EPc9c3oUkNvdfXiwXMA9E_qZ4Aks5qSUTZgaJpZM4JEboc.\n. @toutavous \n. Done in a0e7c62f506d0156f417dde97fc220173aaffabd :)\n. Hi,\nThis method just does not exists anymore (it has been renamed) :)\nRead the wiki please,\nCheers,\nGeorges\n. You right, it's planned and we will do it asap.\nIn the meantime the readme and the wiki are up to date ;)\n. Thanks you, can you Pr on V5.1 please too ?\n. Nevermind i just made a cherry-pick.\nThanks you anyway.\n. Thanks you !\n. Hello!\n\nThanks you I will have a look tonight!\nCheers\nGeorges.\nLe 20 juil. 2016 4:24 AM, \"Fabio Covolo Mazzo\" notifications@github.com a\n\u00e9crit :\n\nHi,\nI needed to implement a driver for the new MongoDb PHP Driver and would\nlike to share back this improvement. I kept the legacy driver and renamed\nto Mongo, the new was as Mongodb.\nI hope that helps 1% of what you helped me sharing PhpFastCache.\nThank you\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/PHPSocialNetwork/phpfastcache/pull/326\nCommit Summary\n- Create MongoDb new Driver using MondoDb/Driver with\n  mongo-php-library and rename MongoDb legacy driver to Mongo Driver.\n- Create MongoDb new Driver using MondoDb/Driver with\n  mongo-php-library and rename MongoDb legacy driver to Mongo Driver.\nFile Changes\n- M src/phpFastCache/CacheManager.php\n  https://github.com/PHPSocialNetwork/phpfastcache/pull/326/files#diff-0\n  (2)\n- A src/phpFastCache/Drivers/Mongo/Driver.php\n  https://github.com/PHPSocialNetwork/phpfastcache/pull/326/files#diff-1\n  (223)\n- A src/phpFastCache/Drivers/Mongo/Item.php\n  https://github.com/PHPSocialNetwork/phpfastcache/pull/326/files#diff-2\n  (63)\n- M src/phpFastCache/Drivers/Mongodb/Driver.php\n  https://github.com/PHPSocialNetwork/phpfastcache/pull/326/files#diff-3\n  (72)\n- M src/phpFastCache/Drivers/Mongodb/Item.php\n  https://github.com/PHPSocialNetwork/phpfastcache/pull/326/files#diff-4\n  (1)\nPatch Links:\n- https://github.com/PHPSocialNetwork/phpfastcache/pull/326.patch\n- https://github.com/PHPSocialNetwork/phpfastcache/pull/326.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/pull/326, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ6Bo1pzfPFrztB8eQXRp9lhETR6pks5qXYbcgaJpZM4JQXGG\n.\n. I commented on some commits, also can you Pr on the V5.1 please ?\nThanks you :)\n. Are you talking about this library ?\nhttps://github.com/mongodb/mongo-php-library\n. @fabiocmazzo up !\n. Hello @fabiocmazzo,\n\nI\u2019m closing this pull request for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the pull request / rebase your branch / clarify \u2026).\nRegards,\nGeorges.L\n. Hello @fabiocmazzo \nI finally implemented your code in the V6 here: https://github.com/PHPSocialNetwork/phpfastcache/commit/64bc5e61654fba5feba8443638a0c655ff1892f1\nThanks for your contribution :). Hello,\nThis is most likely because your php installation does not include Pdo_Sqlite.\nCheck it out and try again later.\nCheers,\nGeorges\n. We will specify this in the V4 branch, anyway the V5 will fix this problem because the tags are stored in the same driver than items :)\n. Ssdb and Redis are both great and very efficient !\n. Thanks you, can you Pr on V5.1 too please ?\nCheers,\nGeorges\n. Thanks you !\n. I'll check it out. What's your Os/driver used?\nThanks you.\nLe 25 juil. 2016 15:00, \"phuyem\" notifications@github.com a \u00e9crit :\n\nThis just rarely happens but it is still a bug\n`Argument 1 passed to phpFastCache\\Core\\DriverAbstract::driverUnwrapTime()\nmust be of the type array, boolean given, called in\n/somepath/ow_libraries/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/Files/Driver.php\non line 122\nFile:\n/somepath/ow_libraries/vendor/phpfastcache/phpfastcache/src/phpFastCache/Cache/DriverBaseTrait.php\nTrace:\n0\n/somepath/ow_libraries/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/Files/Driver.php(122):\nphpFastCache\\Core\\DriverAbstract->driverUnwrapTime(false)\n1 https://github.com/PHPSocialNetwork/phpfastcache/issues/1\n/somepath/ow_libraries/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/StandardPsr6StructureTrait.php(55):\nphpFastCache\\Drivers\\Files\\Driver->driverRead(Object(phpFastCache\\Drivers\\Files\\Item))\n2 https://github.com/PHPSocialNetwork/phpfastcache/issues/2\n/somepath/ow_libraries/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/ExtendedCacheItemPoolTrait.php(62):\nphpFastCache\\Core\\DriverAbstract->getItem('_TAG_friends.co...')\n3 https://github.com/PHPSocialNetwork/phpfastcache/issues/3\n/somepath/ow_libraries/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/ExtendedCacheItemPoolTrait.php(122):\nphpFastCache\\Core\\DriverAbstract->getItemsByTag('friends.count')\n4 https://github.com/PHPSocialNetwork/phpfastcache/issues/4\n/somepath/ow_libraries/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/ExtendedCacheItemPoolTrait.php(144):\nphpFastCache\\Core\\DriverAbstract->deleteItemsByTag('friends.count')\n5 https://github.com/PHPSocialNetwork/phpfastcache/pull/5\n/somepath/ow_plugins/ext/classes/backend_phpfastcache.php(54):\nphpFastCache\\Core\\DriverAbstract->deleteItemsByTags(Array)\n.........................................................\n`\nMy guess :\nin \\phpfastcache\\phpfastcache\\src\\phpFastCache\\Drivers\\Files\\Driver.php\n$object = $this->decode($content);\nnot always return array\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/330, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ8SyX-IshtmRXQB7IENhzN_Q8Kbjks5qZLOBgaJpZM4JUGJu\n.\n. I will make some test, the weird part is that i'm testing on a strict environment, so this error should appeared before oO\n. Is that boolean true or false ?\n. Merci de lui faire confiance et de lui donner sa chance :)\nThanks for trusting it and giving it a try :)\n\nI'm gonna made an additional check on the abstract class. May this will help.\n. It must be true because this statement is true:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Core/StandardPsr6StructureTrait.php#L57\n. Weird, what do you have at line 122 ?\n0 /somepath/ow_libraries/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/Files/Driver.php(122)\nCan you dump the whole file on gist please ?\n. At line 57: https://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Core/StandardPsr6StructureTrait.php#L57\nCan you replace \nphp\n                if ($driverArray) {\nwith\nphp\n                if ($driverArray && is_array($driverArray)) {\n. @phuyem Is it working for you ?\n. @phuyem Bump !\n. @phuyem I need your confirmation before merging this patch, thanks !\n. The main reason that the decode methods returns a boolean is that the serialized string is truncated or corrupted which leads unserialize to returns false. \nThis leads me to the second question: Why the hell does the if() statement is true with false boolean passed through oO ?\n. @phuyem are you sure that you got the very latest version ?\n. Ok got it, i will fix it asap :)\n. Merged :+1: \n. What's your php version ? It look like a server misconfiguration to me.\n. Hello @yad1995,\nI\u2019m closing this pull request for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the pull request / rebase your branch / clarify \u2026).\nRegards,\nGeorges.L\n. Wow !!\nThat's pretty impressive !!\nDo you have a test server so i can check some test on my side, that would be awesome from you.\nThanks you,\nGeorges\n. Can you also update the readme and the docs/DRIVERS.md too please ?\n. Also you may want to update CacheManager::getStaticSystemDrivers() and composer.json keywords ?\n. Otherwise this look pretty good, i have asked a ZendServer for Open Source project, once i tested it, i'm gonna merge it :)\n. Almost perfect :bowtie:\nJust add the Driver names to the readme.md table please !\n. Perfect, i will merge it asap, i just want to test to make sure that no bug will appear :)\nThanks you for your big contribution !\n. On src/phpFastCache/Drivers/Zendshm/Driver.php line 135:\nLike Scrutinizer said:\nI think that you made a mistake here: The property $this->namespaces does not exists, you may want to use $this->itemInstances instead ?\n. A little question: Are you testing this driver in a from-scratch app, or did you use our PhpFastCache Bundle ? Just a curious question while I am waiting the Server from Zend :)\n. Just got my ZendServer, this is insane, i totally love it !! oO\n. Ok for me, thanks you very much for your contribution\n. A little but deserved reward is available here.\nThanks you again.\n. Ok got it\n. Hello @lambasoft ,\nThis is the intended behavior, the default Ttl is based on 15 min (900 sec):\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV5%5D-The-driver-options\nReplace:\n$CachedString->set($cache_key,$result, 0);\nBy:\n$CachedString->set($cache_key,$result)->expireAfter($seconds);\nOr\n$CachedString->set($cache_key,$result)->expireAt($dateTime);\nOr you can increase the default static config:\nCacheManager::setDefaultConfig([\"path\"=>\"cache\", \"defaultTtl\" => 86400]); // or more\nCheers,\nGeorges\n. It depends the driver, but the 0 value can lead to some confusion, i recommend you to define a long date such a year or something like this.\n. Also remember the fact that a cache is NOT a database and should not be used as such :)\n. Happy Pok\u00e9-coding btw :D\n. Mhhhh weird how much data do you store per item?\n. 150 Cache Item is not that much unless if you store more than 500Ko per item, in that case you can quickly reach the max allowed memory.\n. Absolutely, high-performance driver must be used for this kind of application. (see readme.md)\n. Hi,\nAre you sure that the $path is writable by Apache ?\nSee this line\nCheers,\nGeorges\n. Thanks you to you for trusting on Pfc :)\nHappy coding !!\n. @jfcherng Thanks you for the fix, you totally right, the code will never being executed due to this specific statement. Can you PR' on the V 5.1 too please ?\nThanks you,\nGeorges\n. > Do we need to add $this->itemInstances[$key]->setHit(false); right after driverDelete($item) here?\nNot needed, it's already done here :)\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/c414beb1282e3c2bca930088a9f82e6c975f48c0/src/phpFastCache/Core/StandardPsr6StructureTrait.php#L152\n. Perfect thanks you\n. Perfect thanks you\n. Hi @thingNumber1 \nIf you don't use composer, then follow this example: https://github.com/PHPSocialNetwork/phpfastcache/blob/final/examples/legacy.php\nNow if you want to use multiple driver instance, this is possible:\n$MemcacheCache = CacheManager::getInstance('memcache');\n$ApcCache = CacheManager::getInstance('apc');\n$XcacheCache = CacheManager::getInstance('xcache');\nFor each driver instance (also called ItemPool) that you get, you can get an item using getItem().\nSee the Wiki:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki#item-api\nCheers,\nGeorges\n. Also please note that the Website is not yet updated, for now you must rely on the Wiki, we'll update the website asap.\nThanks you.\n. Hi,\nThe V5 is fresh, you can be absolutely be quiet about using it in a framework.\nHowever for the V4 it's a bit different :)\nThe V5.1 is coming for Christmas and will not introduce api-breaking features. The V5.1 will be a core update of the V5 with some few core improvements.\nFor the Summer 2017 a V6 is planned for taking the full benefits of phpNG :)\nHowever the V5 will live for some years, so you can be absolutely quiet about this !\nAlso check out our continuous integration if you want to be more confident.\nCheers,\nGeorges\n. You can rely on this class to detect any PhpFastCache API updates:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Api.php\nPlease read carefully this notice if you plan to rely on the API version.\n. This community is build on the trust of guys like you ;)\nHave a nice day !\n. Hello @mattheworres \nPlease see the Wiki: https://github.com/PHPSocialNetwork/phpfastcache/wiki#item-api\nThe code structure has changed as of the V5 :)\nCheers,\nGeorges\n. Hello,\nCheck if your path exists and is writable :)\nCheers,\nGeorges\n. Np, happy caching !\n. Hello, please open up a new issue.\nThanks !. Hello @phuyem\nWhat version are you using exactly ?\nI don't see any code looking like $result = $this->driverDelete($item); actually.\nCheers,\nGeorges\n. Got it, it seems that issue has been fixed in 5.0.6, see 72dbeaed13c5af96444b91e8056dfcdc698d534f :)\n. Np. Happy caching :)\n. Hello @SimBioT1954 \nHere is a little guide to help you to migrate your code:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%5D-Migrating-your-code-to-the-V5\nCheers,\ngeorges\n. Hi,\nAs of the V5 the syntax has changed.\nPlease check out the wiki:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%5D-Migrating-your-code-to-the-V5\nIt will help you to migrate from v4 syntax :)\nCheers,\nGeorges\n. Let me know if have any problem to implements the V5 :)\n. Please note that the V5 requires at least php 5.5.\nAlso the wiki is pretty clear, can you post me your code, or PM it on gist please ?\n. Hi meirlo,\nI am unable to reproduce this error, which php version did you use ?\nAlso the Psr\\Cache namespace is a purpose for people which does not makes use of composer.\nCheers,\nGeorges\n. Hum i may found the origin of the error, let me try something\n. The release 5.0.10 is out and fixes the issue.\nThanks you for your report :)\n. Hi,\nIn that case you need to use a shared-memory driver based, such as Redis or Couchbase :)\nCheers,\ngeorges\n. Hello,\nDid you read the wiki and the readme ?\nI guess not :)\nUse expireAfter() to use DateInterval object. Else DateTime or Int for ExpireAt()\nCheers :)\nGeorges\n. Hi,\nYou have to setup an absolute path for the cache, relative path are not recommended at all because it depend how the webserver set up the working directory.\nCheers,\nGeorges\n. I'm closing ticket, do not hesitate to reopen it if the bug persists.\nCheers,\nGeorges\n. You may need to chmod the target directory in 0777\n. Yeah the directory is deleted this is a purpose to make sure that all files are being deleted.\nThe cache directory must be in a writable directory, just by curiosity which version are you using ?\n. Also if your system temp dir is not writable by default there is maybe a huge configuration issue on your server !!\n. The Chmod is maybe not the only one issue, is the Webserver running under the same user ?\nUsually on Unix environment it runs under the www-data user.\nYou may need to chown the cache dir to your webserver user.\n. In that case I don't know where the issue is from, this is maybe env-dev specific but I am currently not able to reproduce this issue. Since the Files driver is the most used, i think that a lot of people would reported the issue before :'(\n. Fine then,\nHappy coding :)\nGeorges\n. Hello,\nFor the newest version you need to load the autoload and it will handle the rest.\nCheers,\nGeorges\n. Have a look at this file:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/examples/TestingFunctions.php\n. Hello Roland,\nThis is a very pertinent observation that you raised !\nPhpFastCache is not really immunized against multiple write calls, because an option allow you to choose the \"path\" where the lib will write the files. The path allow multiple \"write calls\" under a circumstance where for a specific http request you need to write cache on disk with two different instances.\nIn the case of parallel http requests which use the same cache path i never encountered the case probably because our tests write a small amount of serialized data which are too fast to write on disk to notice any blocking issue.\nAnyway this problem concerns only files-based drivers such as Files, Sqlite, etc. You can safely use memory-based driver such as Redis, Ssdb and other big boys, they have internal mechanism that prevent this kind of problem.\nI will made some tests on my side to make sure that we are not concerned by this issue, if we are i will made a hotfix quickly.\nOn your side you can start migrating your code to Pfc and if the problem occurs you can get in touch with me with some precisions so we can move forward together for a quickfix.\nRegards,\nGeorges\n. To be efficient the lock must be exclusive, but on some environment (E.g Unix) super-users can still open the file (like root). The Mutex is a bad idea, in case of an Exception is trowed or a fatal error occurs, the mutex stays on the disc which will lock the file forever.\nI will work on a fix in the next days but this will be a modification that will must be enabled in options (E.g. secureFileManipulation) cuz this can decrease performances.\nI will first release this on V6 which is still in development then merging to the V5 if everything looks good.\n. My computer is too powerful (SSD mounted in Raid) :laughing: i have to pick a powerless one to make my test, could take me some day to find one.\n. @brainfoolong I got the concept i think:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/V6/src/phpFastCache/Drivers/Files/Driver.php#L92\nInstead of writing directly the file, we write it in the directory with a temporary name, then once it's written completely we move it ti it's real name.\nLooks fine to you ?\n. Please test the V6, if the tests look ok for you I'll make an unit test.\n. @brainfoolong Up :)\n. Related to #365\n. Hi,\nCan you translate me the german sentence please ? :)\nThanks you\n. Ok thanks you, i will have a look\n. I fixed something wrong (realpath does not work on non-existing dir/files):\nI made a test with a sleep on it and it seem to work very well:\n\nLet me know if it's working fine for you :)\n. Indeed the Files driver is not really intended for intensive usage, but more for a regular usage to cache some data some times. In your case it's very specific because you tried to write multiple cache data in the very exact same time which is almost impossible to do without memory cache such as Redis or Memcache.\nHowever I will keep the secureFileManipulation option because it provide a more reliable writing system for long writing-operation. Many software today use this mechanism to write in temporary file then rename to the expected filename. It's a bit slower but it's very more reliable.\nFor extreme case like you, I will suggest to upgrade their cache system to a NoDb/Memory cache system.\nI'm not closing this issue, until I finish to update the wiki, the readme and the code commentaries.\nThanks you,\nGeorges\n. The secure file manipulation has been implemented in the V6, i will update the wiki and the roadmap.\nThanks you.\n. Hi MilosNan,\nYou may forgot to specify the TTL:\n$cachedItem->set(\"OTHER cached value\")->expireAfter(300);\nAnother possible case is that your server make use of \"Delayed write\" which can be the cause of this issue.\nI tried your code i cannot reproduce the issue for now.\nCheers,\nGeorges\n. Hello @authorname,\nI\u2019m closing this pull request for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the pull request / rebase your branch / clarify \u2026).\nRegards,\nGeorges.L\n. Hi,\nYou can use another driver instead, like Devnull , it used to be be used this way :)\nCheers,\nGeorges\n. The clear() method is distinct to the driver. Clearing Devnul ldriver wont clean Files drivers.\n. As of the V6 there's an \"ActOnAll\" helper:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/V6/src/phpFastCache/Helper/ActOnAll.php\nWarning: This helper will act on driver which has been initialized at least only once time (using getInstance).\n. Hello,\n@thomich said everything :)\nCheers,\nGeorges\n. Hi,\nThen you must follow the provided message, that's pretty clear ;)\nReplace the use of `setup() with setDefaultConfig()\nCheers,\nGeorges\n. It's a E_USER_DEPRECATED error :)\nIt cannot be from Core, as the core returns E_DEPRECATED errors.\nHappy cahing,\nGeorges\n. Hi,\nThis due to a misconfiguration in your php.ini\nAdd this to your php.ini:\ndate.timezone = Europe/Paris\nCheers,\nGeorges\n. Hello,\nOf course it does !\nIt's even better on an MVC environment !\nYou will find a lot of example on the Wiki and in the /examples directory of the project :)\nCheers,\nGeorges\n. Hi,\nAre you on v6?\n. 1- Your parent directory is not writable\n2- You did not set the default ttl to: $it->set('value');\n. I tried you code just now and no error appears, did you check your chmod ?\n. I will give another try, I hope to be able to reproduce it.\n. Can you try to add this:\n$tmp = [];\nBefore this:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Drivers/Files/Driver.php#L155\nAnd tell me if it's working please ?\nThanks\n. Can you try the fix I applied on V6 please ?\nIf it's ok, I'll push on V5 too :)\n. @bukowskiadam Bump :)\n. You right, it's dirty to alter something that's belong to the trait.\nI will do it in a different way.\n. Let's try this @bukowskiadam :)\n. Rofl... \ud83e\udd14\nLe 4 nov. 2016 11:53 AM, \"Adam Bukowski\" notifications@github.com a\n\u00e9crit :\n\nIt fixes the issue with clear when autoTmpFallback=false, but when you'll\nenable fallback mode, then cache is not cleared, because wrong directory is\nreturned to the rrmdir.\n\ud83d\ude09\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/373#issuecomment-258400978,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ7XfKIT03JPGFiEEQBnQKUn2N5ufks5q6w6TgaJpZM4KdCCv\n.\n. In fact I will review some related thing that annoys me a lot :)\n. Please test it again :)\n. Ok thanks you.\nI will have a look tonigh, in the meantime, feel free to PR, so I can merge\nquickly :)\n\nCheers,\nGeorges\n2016-11-07 11:01 GMT+01:00 Adam Bukowski notifications@github.com:\n\nWell, I've found a minor issue, that have huge impact on the code \ud83d\ude09\nYou've missed ! in the comparison\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/839d12c8575f2dff19f1272d7e7b6e19f52aa90e/src/phpFastCache/Core/Pool/IO/IOHelperTrait.php#L96.\nClearing files driver will try to remove tmp if cache dir exists. It should\nbe:\nif($this->config[ 'autoTmpFallback' ] && (!@file_exists($full_path) || !@is_writable($full_path))){\n    return $tmp_dir;\n}\nSecondly I think that there should be a security key and driver name added\nto the $tmp_dir, because on my system $tmp_dir is just /tmp, so each\napplication and each driver with permission issue will have exactly the\nsame dir /tmp/phpfastcache.\nFinally if path is not defined in the config, then cache files will land\nin phpfastcache/src/phpFastCache/Core/Pool/IO//Files for\nconsole script and in /phpfastcache//Files for web.\nI think that condition about isPHPModule should be negated, to use\nDOCUMENT_ROOT when you're in the module scope and /tmp when in the\nconsole.\nBest regards,\nAdam\n\u2014\nYou are receiving this because you were assigned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/373#issuecomment-258793477,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ8q5brNXSvGig-RBgZRPUtzh_YVmks5q7vb8gaJpZM4KdCCv\n.\n\n\nCheers,\nGeorges.L\n. > Secondly I think that there should be a security key and driver name added to the $tmp_dir, because on my system $tmp_dir is just /tmp, so each application and each driver with permission issue will have exactly the same dir /tmp/phpfastcache.\nOn web or console ?\n. Thanks, I'm reviewing this and merge if it's all food :)\n. Look food, can you Pr on V5 too please ? :)\nThanks you !\n. The V6 is a major enhancement so we can break the b.c as soon as we mention it in the Wiki.\nFor the V5 we can improve the current behavior by keeping a backward compatibility.\nI can do it, or you can Pr, just let me know :)\n. You right, as per Wiki this option will be introduced as of the V6.\nIs the V6 working as expected on your side now ?\n. I added an anti-regression test to prevent.... Regression :)\nFor hard issues like this one, I'll now made an anti-regression test.\n. @bukowskiadam I just released the alpha2 of the V6.\nI won't deploy a new release for the V5 yet, in some days probably.\n. Thanks you @bukowskiadam !!\n. Hi,\nThe \"Files\" cache is not intended to be used for 30 writing operation/sec, use Redis/SSdb for intensives usages.\nAlso you don't use set() method well. There's no 2nd argument on it.\nUse: set($postData)->expireAfter($ttl)\nCheers,\nGeorges\n. Also:\n/files/ is an absolute path which is wrong here, you must put your absolute script path a relative path from your working dir :)\n. Does this appears on V5 too?\n. Please test it :)\n. Feel free to let me know if it's still not working :)\n. Hello don't you forget to set the data?,\nLe 10 nov. 2016 7:03 AM, \"Kayla\" notifications@github.com a \u00e9crit :\n\nThe documentation is very confusing. I'm trying to figure out which lines\nof code belong in which files. In my project I have an includes.php. Here I\nhave:\n```\nuse phpFastCache\\CacheManager;\n// Setup File Path on your config files\nCacheManager::setup(array(\n    \"path\" => DOC_ROOT . '/cache',\n));\nAnd in an included file, event.php, I have a function that pulls events from the database. I want to cache these results. In my function I use.\n`$InstanceCache = CacheManager::getInstance('Memcache');\n      $CachedQuery = $InstanceCache->getItem('event_list');\n  if (!is_null($CachedQuery->get()))\n  {\n      return $CachedQuery->get();\n  }\n\n`\nBut it never goes into the if conditional. It always goes through the rest of the function and completes the database query. At the very end of my query code I have:\n$CachedQuery->set($event_list)->expiresAfter(CACHE_EXPIRES);\n//CACHE_EXPIRES is 120\n$InstanceCache->save($CachedQuery);\nWhen I print $CachedQuery after this, it looks good. But when I refresh the page, $CachedQuery is empty. It does not persist. What am I doing wrong?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/377, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ1byE9KbUCJHpR19Xs5nVBnM3BfPks5q8rOYgaJpZM4KuTwp\n.\n```\n. Also which version (v5/v6) and driver are you using (Files i guess) ?\n. It's documented here:\n\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki#item-api\nIt's a ttl (time to live).\nAlso don't use !is_null($CachedQuery->get() but $CachedQuery->isHit() which is more appropriate.\nCheers,\nGeorges\n. is_null ensure you that the value is not null ofc :)\nisHit ensure you that the value is effectively extracted from the cache, whenever the value is null or something else\nOn the example I make use of is_null because I expect that the \"value\" NULL can be cached from a no database result.\n$ttl like defined in phpDoc is expected to be Int|DateInterval :)\nCheers,\nGeorges\n. If it's working I'm closing this issue right now.\nFeel free to re-open it if you have any additional question/comment, Kayla.\nCheers,\nGeorges\n. Hi, can you provide me more details please ? \nThanks you.\n. Hello @authorname,\nI\u2019m closing this pull request for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the pull request / rebase your branch / clarify \u2026).\nRegards,\nGeorges.L\n. The V5 must remain php 5.5 compatible. 5.6 for the v6\n. Also please make use of DIRECTORY_SEPARATOR constant thanks \ud83e\udd17\n. Ok looks good, I'll run some additional tests @ home tonight.\nThanks you.\nCan't wait to release the v7 in a couple of years\n. Merged, thanks :)\n.  The build failed \ud83d\ude00\n. Good job !! Thanks !\n. Thanks you !!\n. Thanks, I will have a look tonigh, in the meantime can you PR on V6 too please ?\nThanks you !\n. @Golodnyi Looks fine, I'm gonna merge it, can you Pr on the V6 please ? :)\n. Why did you closed the Pr, I did not merged yet :)\nCan i reopen it ?\n. Thanks, I also made a Pr on my side to prevent any regression on disk-based drivers.\n. Hello\nUse Devnull driver, i will make a Wiki for that :)\nCheers,\nGeorges\n. Here's the Wiki:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV5%CB%96%5D-Disabling-PhpFastCache\nCheers,\nGeorges\n. Hello,\nIt's not a bug, it's a feature :)\nWe made this in order to make the PhpFastCache directory more structured.\nTherefore there's no risk to overwrite data of other drivers/cache instances.\nCheers,\nGeorges. In that case you can set the securityKey that will override the automatic http_host set as the securityKey.\nOr maybe i don't understand well your demand ?\nCheers,\nGeorges. Hello thanks for the test, I'm having a look at it :)\nCheers,\nGeorges. Bug identified, a patch is coming.\nI will also add an anti-regression test to this specific case.\nThanks you,\nGeorges. A test has been added:\nhttps://github.com/PHPSocialNetwork/phpfastcache/commit/de48dc3b91799ab915785e103a9726a03b544dd7#diff-254397cb7e900c8d3550a79126c0256e. Merged on master via #393\nThanks you for your report :). Hello,\nDid the memcache daemon is running (and installed ofc) ?\nCheers,\nGeorges. Hello @Endzeitlive,\nI\u2019m closing this pull request for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the pull request / rebase your branch / clarify \u2026).\nRegards,\nGeorges.L. Thanks a lot, feel free to PR on V6 too.\nCheers,\nGeorges. Did you included all the project files ?\nFor non-composer users, you must include the autoload.php in your project.\nAlso the bin/src dirs must be present :). Yeah you must include the whole lib directories :). Yep exactly :). Let me know if it's working,\nCheers,\nGeorges. Ok nice ;). Well done @MarcoMiltenburg I'll merge after some additional checks, in the meantime can you PR on V6 too please ?\nThanks you for your contribution :). Ok, thanks for your contribution :). Perfect thanks. Hi @piernik\nThis is the intended behavior, all items that contains one of these tags will be deleted.\nI can consider adding an optional argument (AND/OR/XOR) but as of the V6 exclusively since the v5 wont receive such major changes anymore.\nCheers,\nGeorges. Hi @piernik\nTo be honest i tried today to implement a logical strategy using OR/AND/XOR operators and the result is a disaster:\n1) I lost a lot of performances (about more than 30%) with many-tagged items\n2) The code became unreadable and unmaintainable\n3) The API Interfaces looked ugly as hell \n4) The compromise features/performances was not very satisfying IMO\n5) The V6 approaching the Gold release soon, i wont take the risk to implement such a major change\nCheers,\nGeorges. @piernik \nThis is a considerable option and a nice compromise that I can plan for the V6.\nBut for more logic I have to make the same change for:\n\nGetItemsByTags\nIncrementItemsByTags\nDecrementItemsByTag\n\nI'll let you know when it'll be implemented.\n. Ohhh and also:\n\nAppendtemsByTags\nPrependtemsByTags\n\n:sweat:. @piernik\nPlease test the V6 :)\nOn Github, not packagist, I don't have released yet.\nCheers,\nGeorges. Great, take your time, make more tests, I'll let this issue open for one or two more days.\nCheers,\nGeorges.. The issue has been fixed, thanks you for your contribution :thumbsup:\nGeolim4. Hello,\nTo be honest i tested Mongodb lib on php 5.6, this is the only one driver that I'm not sure to be 100% working due to multiple php Mongo drivers. See #326\nHowever if you plan to store 30M of object i can recommend you to use (p)Redis/Ssdb or Couchbase.\nSqlite driver is not intended for intensive usage.\nCheers,\nGeorges\n. As per: https://github.com/ideawu/ssdb\n\nPersistent key-value, key-zset, key-map('hashmap') storage\n\nSo i would say \"yes\" ?. The same applies for prependItemsByTags(). I'll will have a look tonight :)\nLe 4 janv. 2017 5:43 PM, \"Anton\" notifications@github.com a \u00e9crit :\n\nMore of logs:\n\nCreating 2 objects with keys '//example.com/c/united-\n   states/ca/los-angeles/cafes' (1), '//example.com/c/united-\n   states/ca/los-angeles/bakeries' (2) (thats an comressed html page)\n   with tags ['los-angeles/cafes', 'category'] (1) and\n   ['los-angeles/bakeries', 'category'] (2):\n\n2017-01-04 19:37:30.699 [DEBUG] server.cpp(246): new link from 127.0.0.1:58016, fd: 18, links: 1\n2017-01-04 19:37:30.700 [DEBUG] server.cpp(340): w:0.021,p:1.063, req: flushdb kv, resp: ok\n2017-01-04 19:37:30.700 [DEBUG] server.cpp(415): fd: 18, read: 0, delete link, s:0.001\n2017-01-04 19:37:36.247 [DEBUG] server.cpp(246): new link from 127.0.0.1:58018, fd: 18, links: 1\n2017-01-04 19:37:36.248 [DEBUG] server.cpp(340): w:0.049,p:0.019, req: get //example.com/c/united-states/ca/los-angeles/cafes, resp: not_found\n2017-01-04 19:37:37.264 [DEBUG] server.cpp(340): w:0.040,p:0.164, req: setx [51] [15346] 1798907857, resp: ok 1\n2017-01-04 19:37:37.264 [DEBUG] server.cpp(340): w:0.039,p:0.012, req: get _TAG_los-angeles/cafes, resp: not_found\n2017-01-04 19:37:37.265 [DEBUG] server.cpp(340): w:0.015,p:0.010, req: get _TAG_category, resp: not_found\n2017-01-04 19:37:37.265 [DEBUG] server.cpp(340): w:0.034,p:0.060, req: setx _TAG_los-angeles/cafes [228] 1798907857, resp: ok 1\n2017-01-04 19:37:37.265 [DEBUG] server.cpp(340): w:0.008,p:0.050, req: setx _TAG_category [228] 1798907857, resp: ok 1\n2017-01-04 19:37:37.271 [DEBUG] server.cpp(415): fd: 18, read: 0, delete link, s:1.023\n2017-01-04 19:37:43.108 [DEBUG] server.cpp(246): new link from 127.0.0.1:58020, fd: 18, links: 1\n2017-01-04 19:37:43.108 [DEBUG] server.cpp(340): w:0.024,p:0.041, req: get //example.com/c/united-states/ca/los-angeles/bakeries, resp: not_found\n2017-01-04 19:37:43.870 [DEBUG] server.cpp(340): w:0.018,p:0.182, req: setx [54] [15980] 1798907863, resp: ok 1\n2017-01-04 19:37:43.871 [DEBUG] server.cpp(340): w:0.031,p:0.021, req: get _TAG_los-angeles/bakeries, resp: not_found\n2017-01-04 19:37:43.871 [DEBUG] server.cpp(340): w:0.017,p:0.011, req: get _TAG_category, resp: ok [228]\n2017-01-04 19:37:43.871 [DEBUG] server.cpp(340): w:0.009,p:0.059, req: setx _TAG_los-angeles/bakeries [231] 1798907863, resp: ok 1\n2017-01-04 19:37:43.871 [DEBUG] server.cpp(340): w:0.009,p:0.042, req: setx _TAG_category [303] 1798907863, resp: ok 1\n2017-01-04 19:37:43.878 [DEBUG] server.cpp(415): fd: 18, read: 0, delete link, s:0.770\n\nTrying to delete them using tag \"category\":\n\n2017-01-04 19:38:50.677 [DEBUG] server.cpp(246): new link from 127.0.0.1:58022, fd: 18, links: 1\n2017-01-04 19:38:50.678 [DEBUG] server.cpp(340): w:0.040,p:0.024, req: get _TAG_category, resp: ok [303]\n2017-01-04 19:38:50.678 [DEBUG] server.cpp(340): w:0.040,p:0.024, req: get //example.com/c/united-states/ca/los-angeles/cafes, resp: ok [15346]\n2017-01-04 19:38:50.678 [DEBUG] server.cpp(340): w:0.074,p:0.034, req: get //example.com/c/united-states/ca/los-angeles/bakeries, resp: ok [15980]\n2017-01-04 19:38:50.679 [ERROR] t_zset.cpp(341): key too long!\n2017-01-04 19:38:50.679 [DEBUG] server.cpp(340): w:0.020,p:0.288, req: del [15137], resp: ok 1\n2017-01-04 19:38:50.679 [ERROR] t_zset.cpp(341): key too long!\n2017-01-04 19:38:50.680 [DEBUG] server.cpp(340): w:0.021,p:0.264, req: del [15768], resp: ok 1\n2017-01-04 19:38:50.680 [DEBUG] server.cpp(415): fd: 18, read: 0, delete link, s:0.002\nResult: delete fails, objects are still in cache.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/411#issuecomment-270419515,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZxbVMsJaZQv_yeplSmxqHQ5Zv01Dks5rO8xHgaJpZM4LavW8\n.\n. I'm gonna install Ssdb soon, hang tight :). The MD5 clue seems to be a valid one, I'm testing some things.\nI'm wondering how to add this to unit tests as Travis does not support Ssdb :(. Found it, I'm a damn idiot, the 32 chars limitation is not the only one issue:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Drivers/Ssdb/Driver.php#L118\n\nI'm calling $item->get() instead of $item->getKey()\n..... I added a fix on final branch, try it :). V6 is now patched too.. I'll release tonigh :). 5.0.13 release is out :). Hello @git-webmaster \nI think I made a mistake on the git tag, I will release a 5.0.14 tonight with the right commit target.\nIt will also fix another bug with Predis driver.\nThe V6 is still in beta state for now, but a stable release should be out in the next 2 months.\nCheers,\ngeorges\n. Here you go:\nhttps://github.com/PHPSocialNetwork/phpfastcache/releases/tag/5.0.14. Hello\nThe clear method purges the whole cache as described in interface.\nThis is the intended behaviour.\nCheers,\nGeorges.L\nLe 5 janv. 2017 12:20 PM, \"mynakturk\" notifications@github.com a \u00e9crit :\n\ni want to clean only expired cache. when i use clear () function it delete\nall cache. how can resolve this problem.\ni use file cache\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/413, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ8G4tv4ILVnTTOTa2c-MtPGYg41Tks5rPNIRgaJpZM4LblwE\n.\n. @mynakturk \n\nUnfortunately, there's no such functions at this time. The problem resides in the fact that we cannot directly link a file to a cache item to check if it's expired or not.\nAn expired cache item is automatically deleted once it get called by getItem.\nBut there's a workaround for that.\nAdd a unique tag to each cache item using addTag().\nWhen you need to \"cleanup\" the expired items, just call getItemsByTag($tagName).\nExpired items will be automatically deleted.\nCheers,\nGeorges.L. Hello @nikmauro \nI'll check this one tonight :)\n. Found it:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Drivers/Predis/Driver.php#L127\nI'm using redis index instead of predis one.. Try  that. Can you replace the empty string here:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Drivers/Predis/Driver.php#L132\nby false or null and tell me if it's working please ?\n. Should be working with null . Ok null is working then.\nChange database empty string to 0. Ok, nice to know, I will update it then.. Should be ok now.. Let me know if it's still working :). Hi @jajm \nThanks for the report, I'll check it out tonight.\nCan you please dump me the $_SERVER var inside the Phar environment please ?\nCheers,\nGeorges. Ohh ok, it's a CLI script, I get it.. Can you please give me the full phar:// path please ?\nThanks !. Where did your cache attempt to write to ?\nOutside or inside the phar ?\nCan you please give me your driver configuration ?. Ok, can you please add:\n$path = preg_replace('~^(([a-z0-9\\-]+)://)~', '', $path);\nbefore\n$parts = preg_split('~[/\\\\\\\\]+~', $path, 0, PREG_SPLIT_NO_EMPTY);\nIn method getAbsolutePath() inside Directory.php and tell me if it's working.\nCheers,\nGeorges\n. Ahhh I see, I now get it completely. I wonder how to make a test for this one :'(\nHowever I'm gonna patch it right now.. Np:)\nIf you're a composer user, a release will come next week.\nCheers,\nGeorges.. Hi,\nthe migration process from v3 to v5 is the same as migrating from v4 to v5:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%5D-Migrating-your-code-to-the-V5\nIs that you're looking for ?\nCheers,\nGeorges. You have two solutions:\n- 1 You have composer: Then you don't need PhpFastCache library, just add it to the composer.json\n- 2 You do not have composer: Include our own autoload and will load files automatically (Except Predis files that you need to include manually).\nWhatsoever, replace the whole PhpFastCache directory/files with the new ones.\nCheers,\nGeorges. :). Thanks you, much appreciated, can you Pr on V6 too please ?\nThanks,\nGeorges. Great, good job, thanks.. Thanks you.. Hi Anton,\nI'll take a look tonight.\nCheers,\nGeorges. Can you tell me how is Redis doing it please ?\nI'm afraid that the bug come from Ssdb itself oO\nCheers,\nGeorges.. Also can you try to enabled debug on Ssdb driver please ?\nhttps://github.com/PHPSocialNetwork/phpssdb/blob/master/src/phpssdb/Core/SSDB.php#L16\nThanks. > You want me to set it to true, and then test ssdb perfomance again, or some log to provide?\nYes, exactly. I need to understand why Ssdb is ressource-greedy for you as I tested it and did not see something similar.\nHowever, glad to see that CouchBase is working fine for you, you are the first real tester :). CouchBase should be stable, it's just like you're storing too much data on the data field.\nHow huge is your $html variable (serialized) ?. About the MongoDb, I need time, much time to develop it as i Have to start from scratch.. Can you try to replace the cache key by a md5 version of the key ?. Are you using a memcached bucket ?\nSee: http://stackoverflow.com/a/29822818/2123869. IMO for Ssdb it's design issue from the driver itself, maybe you can report the bug to their tracker:\nhttps://github.com/ideawu/ssdb\nAbout CouchBase, I have no idea why this is error is thrown, I would appreciate to be sure that it's not caused by PhpFastCache code.. > No, couchbase bucket with this settings:\nWhen you created the bucket do you have selected Couchbase cluster ?\nBy default ti's memory cluster. Here we go, I'm gonna fix this, this is not a performances issue, but more like a... Bug :). Luckily, as of the V6 we have method for that:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/V6/src/phpFastCache/Core/Item/ExtendedCacheItemInterface.php#L28\nI'm gonna import it in the V5 . Also as of the V6, we now support Cassandra, you may want to try it out.\nThe V6 should also include Mongo & DynamoDb support :). The fix for the V5 will occurs in the next release.\nThe V6 is planned for this summer, maybe spring...\n\nAt this moment i have loaded approx. ~10 mil. of items to cache with non-md5 keys (due to their length < 250 bytes)\n\nDamn you're such an amazing cache developer :open_mouth:\nCheers,\nGeorges. Mongodb driver has been updated for the V6, the V5 will keep the old Mongo class.. Hello Anton;\nJust want to let you know that I added the Couchdb driver on V6:\nhttps://github.com/PHPSocialNetwork/phpfastcache/commit/52abd1b796531f8afb5092a50fc2b2245e092622\n:). Thanks, can you Pr on V6 too please ? :). Hi,\nI'm gonna test it.\nHang tight :). Does it's working now ?. Here you go :). Great, have a nice day :). Hello,\nThe item deletion is a security we added since some driver does not delete expired item automatically, but some driver does (Redis, Memcache, etc).\nAfter reading your current workflow,  I think that you should make use of a persistent system like a simple database in fallback, using the cache as a primary data backend.\nHere's a schema:\n\nCheers,\nGeorges\n. Hello,\nThat's not possible, sorry.\nInstead, use tags.\nCheers,\nGeorges . Read the docs and wiki \ud83d\ude03\n- DeleteItemByTags\n- Getitemsbytags\n- AddTags\nEtc.. Here you go:\nhttps://github.com/PHPSocialNetwork/phpfastcache#item-api. Hello @landy2005 \nThe choice made to target php 5.5 was made mainly for the following reason:\n\nArbitrary expressions on empty() to make code much cleaner without dirty temp vars\nArray/string literal dereferencing which globally simplify the code reading and avoid again dirty temp vars\nBetter performances against Iterable manipulation (very noticeable difference on big set of data).\nEnd of support of php 5.4 announced by php, be aware that php 5.5 support has been abandoned too.\n\nAll these reasons prompted us to set the supported php version to php 5.5\nAlso for security reasons i strongly advise you to upgrade your php version to php 5.5, or even better php 5.6.\nCheers,\nGeorges\n. However, you can still use the V4 on php 5.4 and below :)\nCheers,\nGeorges. Thanks you, can you Pr on V6 too please ?\nThanks !. Hello,\nI'm currently on vacations, I will come back to you in a week :)\nCheers,\nGeorges\nLe 20 f\u00e9vr. 2017 2:59 PM, \"Girish\" notifications@github.com a \u00e9crit :\n\nI have a web application built using PHP and MySQL. Now the database is\nhitting the red line due to the load. I am trying to use phpfastcache to\nstore set of data into redis and reduce the load on the DB. The data set is\nfrom multiple tables and may take up to 15 seconds to fetch. But I am\ngetting requests from client every 2-3 seconds. So there can be 5-6\nrequests while the cache is building. That is when the existing cache is\nexpired and new one is getting build.\nThese requests are again trying to build the cache, that will add up to\nthe cache building time.\nIs there any way to workaround this problem?\nThanks :)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/433, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZzsWCG7EsZKUtyox-1w-zIZMNGYMks5reZxcgaJpZM4MGNc0\n.\n. Hello,\n\nI think it's a design issue that we cannot fix at all:\nWe could set a \"flag\" with a temporary value to store the item as is, but if a concurrent request get the item it wont get the expected value such an array , but a boolean flag that you can't deal with :/\nMy idea is to work with a cron that will rebuild the cache Item regularly or you can build a batch system.\nCheers,\nGeorges . This remind me something like this i read recently on Doctrine project called \"Cache Slams\":\nhttp://doctrine-orm.readthedocs.io/projects/doctrine-orm/en/latest/reference/caching.html#cache-slams. I'm working on a prototype and I'm seeking for a tester, would you help me to test this out ?\nThanks :). Please test the V6 from the latest commits...\nThe latest commits introduces a Batch system that force concurrent request to wait.. In wrote a Wiki about this:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV6%CB%96%5D-Dealing-with-cache-slams. Hello @girishkc can you give me a feedback about this ?\nIt would be very appreciated :-)\nCheers,\nGeorges. The issue has been fixed, thanks you for your contribution :thumbsup:\nGeolim4. Hello,\nThe idea is interesting but is not intended for performances at all. In fact the chaining system is designed for availability to the detriment of the reactivity of the cache backend.\nI will may consider introducing into the V6 by adding an helper that will do the job, but I personally does not like this kind of chaining which is more used on industrial purposes that require high availability.\nCheers,\nGeorges. I was wondering...\nDoes the ActOnAll Helper would not partially made the job ?\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/V6/src/phpFastCache/Helper/ActOnAll.php\nThere's a Wiki about it:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV6%CB%96%5D-Act-on-all-instances\nCheers,\nGeorges\n. Hello,\nWhat's your PFC's version ?\nCheers,\nGeorges\n2017-03-02 10:08 GMT+01:00 hanabadler notifications@github.com:\n\nHello\nI am using the lib , and i want to know what is the default expiration\ntime for the object?\nmy site has a form that has drop down that initlized from SQL query\nSql query take 0.5S , and after it i use the cache.\nsecond time i access the form, it use the cache and it takes 0.08S (using\nFiles method)\nnow, access the same for a day after, it takes the same 0.5 so, i see that\nthe expiration is less than 24 H\nwhat is the default?\nthanks\nHana\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/435, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ9OnyF6JAKKjA-qZVW8owe4cHZhGks5rhocGgaJpZM4MQuPp\n.\n\n\n-- \nCheers,\nGeorges.L\n. Which branch ? master or V6 ? :). As you can see here:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/CacheManager.php#L62\nThe default TTL is usually 900 seconds (15m)\nCheers,\nGeorges. :). Hello,\nI will have a look at this.\nWhat's the Wordpress compatibility about this ?\nCheers,\nGeorges. Ok thanks, I keep it aside :). Hello, nice catch !!\nI added an article to the wiki:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV5%CB%96%5D-Configuring-a-fallback-driver\nCheers,\nGeogres. This is Redis-related, the error does not come from Pfc :). The Fallback work only when the connection fails, not when an error occurs runtime.. Hello\nThis option is available as of the V6 only ;)\nCheers\nGeorges\nLe 6 mars 2017 4:45 PM, \"pioc92\" notifications@github.com a \u00e9crit :\n\nConfiguration:\nPhpFastCache version: 5.0.15\nPHP version: 7.0.15 Operating system:windows `\nIssue description:\nHi, i would like to know how to have the creation date of an item.\ni do :\nrequire './vendor/autoload.php';\nuse phpFastCache\\CacheManager;\nuse phpFastCache\\Core\\phpFastCache;\n$config = [\n  'path' => dirname(FILE) . '/cache2/mensuel',\n'itemDetailedDate' =>true\n];\n$InstanceCache = CacheManager::getInstance('Files', $config);\nrequire './vendor/autoload.php';\nuse phpFastCache\\CacheManager;\nuse phpFastCache\\Core\\phpFastCache;\n$config = [\n  'path' => dirname(FILE) . '/cache2/mensuel'\n];\n$InstanceCache = CacheManager::getInstance('Files', $config);\n$cacheKey = 'toto';\n$item= $InstanceCache->getItem($cacheKey);\nif(!$item->isHit())\n{\n   $item->set('toto')->expiresAfter(86400000);\n}\n$creationDate = $item->getCreationDate();\nbut i have a fatal error Uncaught Error: Call to undefined method\nphpFastCache\\Drivers\\Files\\Item::getCreationDate()\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/438, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ73Q978uS2Nes8s8Y8m-qqisWbu1ks5rjCoGgaJpZM4MUUOo\n.\n. No problems :)=. Hello,\n\nYou have to made the integration by yourself :)\nAt this moment we only provide support for Symfony/Drupal projects.\nCheers,\nGeorges\n. Hello,\nI will have a look at this issue, I may have an idea :)\nIn the meantime can you provide me a sample of code that describe me better the context ?\nYou may send it privately if needed :)\nCheers,\nGeorges. Also,\nCan you try to setup these options ?\n- preventCacheSlams\n- secureFileManipulation \nHere's the wiki about that:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%CB%96%5D-The-driver-options\nCheers,\nGeorges\n. Theoretically this issue should not appears due to the following part of code:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/V6/src/phpFastCache/Core/Pool/DriverBaseTrait.php#L250\nHowever you may facing to a cache slam issue, see my previous comment :)\nCheers,\nGeorges. Hello @marcelrummens,\nI\u2019m closing this pull issue for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the issue / add comment / clarify \u2026).\nRegards,\nGeorges.L. Hello,\nYou may have another issue: The Webserver is not allowed to write on the directory that belong to your user (root or something else).\nYou may need to perform a chown to give the transfer the directory to another user.\nCheers,\nGeorges\n. Can you try to create the file automatically using an external php script that you call from the webserver ?\nIt looks really like a server misconfiguration to me as the latest build successfully passes :/. Do you have enough free space on the disk ?\nAlso please specify an absolute path on the \"path\" config :). Done, the exception now throw a more descriptive message :)\nCheers,\nGeorges. Hello,\nThis error has been fixed in the latest RC's, please update PhpFastCache :)\nAbout the class Pecl Mongo, this one has been deprecated and we do not support it anymore :)\nCheers,\nGeorges. I finally did it :D. Hello,\nAs you can see in the composer.json the V5 only support php 5.5 and above.\nAnyway, thanks you for your contribution,\nCheer,\nGeorges. Hello,\nTry this:\n\n$InstanceCache = CacheManager::getInstance(\"memcached\", ['memcache' =>[ ['host' => \"127.0.0.1\",'port' => 3333]]]);\n\nThe config name is a bit confusing, it may be changing in V6, however in V5 I'll rename \"memcache\" to \"memcached\" :)\nCheers,\nGeorges\n. I will may review this code partially in V5 and rewrite it completely in V6. Let me know if this fix is working (not yet merged).\nThanks :). And because this code needs more logic, here you go... @Fiorinol is it ok for you ?. @Fiorinol Any news about this ? :). @Fiorinol Bump :). I'm considering that issue as resolved, please let me know if it's still not working.\nCheers,\nGeorges. You right, I don't even know what the heck happened to make me delete this line o.O\nIt's fixed, thanks you.\nToo bad I released rc4 yesterday, then wait a week or use @dev :)\nCheers,\nGeorges. Hello,\nTry to upgrade your php version to php 5.5 or later.\nCurrently the v5 is not supported on php 5.4.\nCheers,\nGeorges. Just by curiosity who's your hosting provider ?\n. Hello,\nThe version 4 and older :)\nCheers,\nGeorges. Hello,\nI think that you made a mistake:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/v4/src/autoload.php\nThe line 23 does not exists :/\nCheers,\nGeorges. Hello,\nDo you use any IDE ?\nBecause you have a typo, it's not \"expireAfter\" but \"expiresAfter\" :)\nCheers,\nGeorges. Hello,\nIt's fixed, I will release soon.\nCheers,\nGeorges. Hello,\nIf you pass an int like \"3600\" this will cache up the data for an hour.\nBut you can pass a DateInterval Object too.\nCheers,\nGeorges. Hello @getchu,\nI\u2019m closing this issue for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the issue / add comment / clarify \u2026).\nRegards,\nGeorges.L. Hello,\nI will have a look, but it's because predis driver seem to be unavailable (missing config?) therefore no fallback driver has been found, throwing that error.\nCheers,\nGeorges. I got it:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/CacheManager.php#L200\nThere's a wrong exception thrown due to the new driverName check introduced in v6.\nI'll fix it tonight, in the meantime please setup the Predis driver using a relevant config (see Example folder).\nCheers,\nGeorges. Ohhh you right, indeed in v6 external dependencies were moved to \"suggested\" (except Psr ones) :)\nDon't close this issue immediately, I still have to correct the Exception side effect bug.. Can you show me the context of this error please ??. Ahhhh I got it.\nPlease purge your cache, from V5 to V6 it's necessary x)\nI forget to mention that.\n. It is working as expected now ?. Hello,\nThe version is wrong (it's the API version), where did you got the lib ?\nAlso the method setup() is no longer valid use setDefaultConfig() instead.\nSee:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/CacheManager.php#L324\nCheers,\nGeorges. However I'll add a deprecation message regarding this method.. The version can be revealed with composer (if you are using it).\nOr from github on releases page :). Hello,\nIndeed there's an issue with markdown template, I'll fix it.\nHowever I don't get the issue with 'Auto' driver ? \nThe method CacheManager::standardizeDriverName() is here to standardize the driver name, so it does not matter about the driver case sensitive ?\nCheers,\nGeorfges\n. I fixed the issue template issue :)\nI also updated the default driver name. Is it ok for you ?\nCheers,\nGeorges. The securityKey is only available for Files-based drivers (Files, sqlite, leveldb) etc.\nIt's by default the current value of HTTP_HOST, but you can change it for more safety.. Hell thanks for that report,\nI'll check it carefully.\nCheers,\nGeorges.. Hello,\nIt seem that the performances are better when making use of saveDeferred then commit().\nCan you try this in your use case ?\nThanks you very much,\nGeorges\n. I may have been identified the culprit:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Core/Pool/CacheItemPoolTrait.php#L66\nCan you comment out these 3 lines and try again ?. Crap, I'm afraid that the new eventManager can be the source of the problem.\nTry by adding a simple return; statement before the $eventName re-assignation here:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/EventManager.php#L72\nI'm currently not on my main environment development, so I can't make deeper tests, sorry :(\nThanks you,\nGeorges. Last request, can you give me distinct numbers between getItem() and save() ?\nI need to know if there's only one method or both that can be problematic.\nTomorrow I should get back my main env development.\nCheers,\nGeorges. Yeah, in those both write operation loops, I would like to get the individual time took by getItem and save().. Cache clear performance regression on files is related to this:\nhttps://github.com/PHPSocialNetwork/phpfastcache/pull/432\nUnfortunately I can't do anything against this specific regression.\nHowever I'll take a look for the other regression, there's must be something global IMO.\nCheers,\nGeorges. Do you noticed the same performance regression with key/value drivers-based ? (Redis, Memcache, Ssdb, etc).. Do you have noticed the same performance regression on Wincache ?. Bump :). Hello :)\nI would like that you test your huge dataset with another memory backend-based, such as Redis/Memcache/Ssdb. Can you ?\nCheers,\nGeorges. Tests with memcached should be good.\nI have to be sure that it's Files driver-related and not globally-related.. I'm still digging to find out a way to get back close of the previous performance...\nNot forgotten :). The funny thing is that on Redis the difference is pretty weak\n\n oO.... I identified multiple points that are, cumulated, the source of the performances regression:\n\nFiles Driver\nhttps://github.com/PHPSocialNetwork/phpfastcache/pull/432 Like i said previously, unfortunately I can't do anything against this specific regression.\nGlobal: \ncfd763779ab549db47cda310180df45afffbe3c2 Due to the Psr6 specifications this regexp must be tested for each call to getItem(). However I'll move this one after $this->itemInstances check, because ots useless to test it each time even if the item instance already exists.\nThere was a micro-performance issue with EventManager: the onXxxxxx string concatenation\nThere was two micro-performance issue with getItem() method: The use of Reflection API was a bad idea when used in huge loop operations\nThere was a micro-performance issue with getEncodeKey: The item hash was computed on the fly for every method call and not temporary stored in a distinct property.\nThere was a micro-performance with the use of array_key_exists on huge loop operations, now replaced with isset()\n\nHOWEVER...\nThe V6 introduced a some improvements. We can't expect at all to have the exact same benchmark as with the V5. But I do agree with you, there's a non-negligible performance difference between the V5 and V6.\nI made a first commit that will fine-tune the code called in huge loop operations. I also plan to work on possible optimizations day after day.\n. @mbiebl You can do some tests if you want (not released yet, use dev-master). @mbiebl Bump :). Hello,\nPlease check your minimum-stability in your composer.json :)\n. Like I said, especially for the files driver that now made an additional cleanup, there is no way to get better performance than the v5 with all improvement we made. I'm still looking for a solution, though there's nothing more that I can do immediately.. I added two additional commits that should improve a bit the performances. Nothing blatant, but that's something at least.. I'm closing this one, improving the V6 performances will be one my first priority along this version lifetime.\nThanks for the accurate benchmark.. Hello,\nIt's not possible right now, but you can use tags features and php mt_rand functions (on indexes):\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki#itempool-api\nhttp://php.net/manual/en/function.mt-rand.php\nCheers,\nGeorges\n. Hello,\nDo you have any exception thrown, any debug log ?\nCheers,\nGeorges. If you're on php7 catch \\Throwable interface and see what happens :). Do you use your own autoload to load PhpFastCache files ?. Okay :)\nPlease note that PhpFastCache provides it's own autoloader.\nJust include it in your code.\nCheers,\nGeorges. Hello,\nWhy would you change the file extension ??\nThis could lead to some dangerous behavior.\nCheers,\nGeorges\nLe 11 juin 2017 11:18 PM, \"Rowinson Gallego\" notifications@github.com a\n\u00e9crit :\n\nConfiguration:\nPhpFastCache version: 6\nPHP version: 5.6\nOperating system: Ubuntu 14.04\nIssue description:\nIs it possible to add the file extension as a configurable option in the\n'file' Driver? Currently it's using the .txt file extension. Current\nimplementation: Core/Pool/IO/IOHelperTrait.php\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/23c54c1251c8983e3163cf0b11cbbc2c71422669/src/phpFastCache/Core/Pool/IO/IOHelperTrait.php#L163\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/467, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ8DBLfQw-Bnhy8Ch3PPBwEdAPv-eks5sDFmggaJpZM4N2g3w\n.\n. It could be dangerous as a misconfigured file extension could lead to a\npossible code injection inside the cache directory. Also why do you need to\nchange the file extension? The phpFastCache directory should not get shared\nat all.\n\nLe 11 juin 2017 11:30 PM, \"Rowinson Gallego\" notifications@github.com a\n\u00e9crit :\n\nWhat possible dangerous behavior? It's up to the developer who implements\nthe cache system. I need to change the .txt extension to something like .db\nor .cache but it's not even possible with the current implementation.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/467#issuecomment-307658210,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ4XsrLeuHo9Qphk80lZRix0OWNDKks5sDFyJgaJpZM4N2g3w\n.\n. I will study this possibility to make it the most secure as possible.. I found out how to make it secure: I'll set up a list of forbidden file extensions (basically executable files extensions) and throwing an Exception if a forbidden extension is passed to the config manager.. Hello, \n\nit's been implemented and will be released in 6.0.2.\nCurrent allowed extensions: 'txt', 'cache', 'db', 'pfc'\nSee option \"cacheFileExtension\" on Wiki\nThanks you for your contribution,\nGeorges. Yeah, in the V6 those dependencies are no longer required, but recommended.\nI re-open this issue to remind me to make the Exception more explicit, because i tend to forget quickly this kind of improvements xD.\n. Merging the failed build only because the new trusty build of Travis Ci are broken with couchdb service?. Merging the failed build only because the new trusty build of Travis Ci are broken with couchdb service?. Thanks for the report, I'll take a look !. This bug is now fixed, thanks for your report.\nA dedicated test has been created to prevent any regression:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/tests/issues/Github-471.test.php\nCheers,\nGeorges. Merging the failed build only because the new trusty builds of Travis Ci are broken with couchdb service.. Hello,\nI seriously doubt it that you are on php 5.5, as this error can be thrown on 5.4 and below.\nPrint a phpinfo just to be sure.\nCheers,\nGeorges.L. @ofhk Bump :). Apc is not a dependency that can be resolved through composer. It's a php extension :). No problem man, happy caching :). Merging the failed build only because the new trusty builds of Travis Ci are broken with redis service.. Hello, \nWhat are you talking about exactly ?. Internally PhpFastCache already make use of an instance ID based on the driver & config:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/CacheManager.php#L205\nCurrently I can't break the compatibility by adding a new param to Psr16Adapter class as PhpFastCache follows the semver specs.\nHowever we can see things on a different way:\n- Adding a getter (only) getInstanceId() to ExtendedCacheItemPoolInterface which represents the current (unique) instance ID.\n- Adding an option to $config to set the Instance ID instead of generating it automatically.\n- Throwing an Exception if trying to setup an already existing instance ID\n- Adding a getter to CacheManager: CacheManager::getInstanceById($id)\nWhat do you think about that concept ?\n--\nThis change would be targeted for 6.1.x and 7.0 to be semver compliant\nThe 6.1 will be in development until October and will fast forward the 6.0 bug-fixes/improvements.\n. Okay the roadmap has been updated. \nI'm closing this issue, you will be notified by this one when the card will change it's state:\nhttps://github.com/PHPSocialNetwork/phpfastcache/projects/4#card-3472014\nCheers,\nGeorges. Will be done in V7 instead of 6.1 as planned initially.\nV7 is planned to be out fo Summer 2018, see timeline . Hello @HACKHERS this feature is now testable on V7 if you want to.\nCheers,\nGeorges.L. Ahhh Codeclimate is broken !!! \ud83d\ude1e . Please provide me the PhpFastCache version, not the API version, thanks :). You got it from GIT ? If final then you are using v6.0.2 I guess.\nBut you are wrong, you are including cacheManager.php instead of autoload.php :). Warning: The V6 is not intended to work with php 5.5, downgrade to phpFastCache v5 or upgrade your php to 5.6 at least for the v6 :). There's no way to get this error by including the autoload.php provided by the lib. This error comes from the fact that you are hard-including the cacheManager.. I'm not talking about the vendor/autoload.php, but the src/autoload.php. @jimmyadaro Is it working now ?. @jimmyadaro bump :). @jimmyadaro Hello Jimmy, some news ? :). Okay, good luck :). @jimmyadaro Any news , :). I'm closing this one, feel free to re-open it if this issue is still relevant :)\nCheers,\nGeorges. Hello,\nNo, because currently not all drivers let us know how many keys are stored\nin cache. But you can use tags to achieve something like this.\nCheers,\nGeorges. I wrote you a tutorial:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV5%CB%96%5D-Fetching-all-keys\nCheers,\nGeorges. Referencing #92 . Hello,\nthanks for the report !\nA fix is on the way :)\nCheers,\nGeorges. The bug is being fixed, thanks you !. Hello,\nThe Website is not up to date, use the Wiki instead.\nCheers,\nGeorges. Hello,\nHow do you use it ?\nI don't get well your issue, show me your code please :)\nCheers,\nGeorges\n. I cannot implement a geolocation system. \nIt's up to you to resolve the user's location, then inject the latitude/longitude with the search term AS your cache key, ex:\n```php\n$item = $cacheInstance->getItem('lat|' . $latitude . '|lon|' . $longitude . '|term|' . $searchTerm);\n```\nYou must resolve yourself the user location using libraries and/or server module (Apache GeoIP/Cloudflare, etc).\nCheers,\nGeorges\n. Ok I got it, and I think that's you have a bit misunderstanding the caching concept:\nThe caching concept is to serve cached data without requiring database/API/etc call. It's main purpose is to serve cacheable content that comes from an API, a database, etc, for a limited duration time depending your needs.\nIn your case you need dynamic data depending your user's location. The cache is therefore not appropriated to your specific use.\nCheers,\nGeorges\n. Redis may added this option because it's main purpose is not to be used as a cache backend. It's a key-value memory server based. This is what i try to explain: We use it as a cache backend like we use Cassadra or Mongo as a cache backend, but they also offers Geo-spacial APIs for non-caching purposes.\nAlso, remember that PhpFastCache follows the psr6/psr16 specifications which does not implements such features, we have extended those specification but we can't permit ourselves to get too far from the specifications.\nCheers,\nGeorges. Why don't you use latitude/longitude as a cache key and short latitude/longitude as a cache ?\n```php\n$latitude = 1.026123245;\n$longitude = 0.51922541;\n$item = $cacheInstance\n->getItem('lat|' . $latitude . '|lon|' . $longitude . '|term|' . $searchTerm)\n->addTag('lat|' . round($latitude, 3))\n->addTag('lon|' . round($latitude, 3));\n```\nThis way you get approximate coordinate using tags :)\n. I'm closing this one, feel free to reopen it if needed :)\nCheers,\nGeorges. Hello,\nI check that as soon as I come home :)\nCheers,\nGeorges\n. Hello,\nI tried your code but it's effectively working without problems, see:\n\nDoes your directory is writable by the webserver ?\nCheers,\nGeorges\n. @hammermaps  bump !. Thanks for your contribution.\n/merged. Thanks for the contribution :). Thanks for the report, I'll check it out :)\n. Hello,\nI have just fixed the issue. \nHowever, currently there's no way to prioritize the driver array. Maybe in V7 this will be reviewed :)\nThanks for the report,\nCheers,\nGeorges. Well seen !\nFYI, I just asked this question to the Psr masters about the psr6 some days ago:\nhttps://groups.google.com/forum/#!msg/php-fig/7y4XUZq2wg8/Izc5cLY3CQAJ\nI'm gonna attach some tests to this Pr, can you allow maintainers to edit your branch please ?\nThanks :). Drop it, I'll do it myself :). Hello,\nTry this: https://github.com/PHPSocialNetwork/phpfastcache/blob/da31c4e81de033206367ddd15e6fe65fc5c806d7/src/phpFastCache/Drivers/Redis/Driver.php#L140\nCheers,\nGeorges. Hello,\nYour approach is too procedural, let me explain:\nInternally the psr16Adapter adapter stores a CacheManager instance. By using the same psr16Adapter you will keep the same CacheManager instance.\nBut you are instantiating a new psr16Adapter each time you call one of your *_nonce() functions.\nThis is a bad practice for many reasons, by doing this:\n\nYou will call the abstract method driver_connect() every time leading to a greedy resource time.\nThis will increase the memory use, if you do not call not enough the GC, leading to some kind of memory leak.\nYou will increase cpu cycles each time you re-instantiate the psr16Adapter object leading to a high cpu usage\n\nIf you can't doing your stuff object-style, at least try to store your psr16Adapter statically, like this:\n```php\nfunction getPsr16AdapterInstance($config = [])\n{\n    static $psr16Adapter;\nif($psr16Adapter === null){\n    $psr16Adapter = new Psr16Adapter(PFC_DRIVER, $config);\n}\n\nreturn $psr16Adapter;\n\n}\n``\nAnd callgetPsr16AdapterInstance()` in your *_nonce() functions.\n\nMy tmp directory is filled with so many entries. \n\nThis is how the Files drivers actually works: 1 cache item created = 1 serialized file written\nYou can use the $config variable path to set a different directory, see Wiki\nCheers,\nGeorges. Hello @prashant-saxena,\nI\u2019m closing this issue for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the issue / add comment / clarify \u2026).\nRegards,\nGeorges.L. Hello,\nFirst:\nDon't use if(is_null($_cache_this->get())){ but if($_cache_this->isHit()){\nSecondly, did you tried with another driver ? Like Redis or Memcache ?\nTry it and tell me the result.\nIf a memory driver-based works, you are maybe dealing with a cache slam issue.\nSee https://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV6%CB%96%5D-Dealing-with-cache-slams\nTry it and tell me the results.\n// Off topic\nPlease use json_[de|en]code for any json manipulation, it's really dirty to print your json response like that :(\nCheers,\nGeorges.L \n. if(!is_null($html = \\CRM\\Engine\\MessagingService::getMessageToBroadcast($_message))){\nAre you sure that you are trying to pass $_message as an object and not by the item cache key instead ?. To be honest I don't know if the bug is lib-related or your code-related.\nItem Tags are deeply tested here:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/tests/ItemTags.test.php#L1\nAnd the latest build is a success.\nAre you sure that you don't have any concurrent job/call that delete/purge the items ?\nCheers,\nGeorges\n. Are you using a NTS/multi-threaded php installation ??. Thanks for the heads up, but after some tests on tags I'm really unable to reproduce that :(\nAnd you are the first one reporting me this kind of issue.\nLet me know if you can reproduce it with a short code sample.\nCheers,\nGeorges. As I'm publishing a new release today, I'm going to close this issue.\nFeel free to reopen it if you have a working sample of code that I can reproduce :)\nCheers,\nGeorges. Hello @Defcon0,\nI suggest you to refer to this issue:\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/428\nOnce an item is expired, it's deleted permanently.\nSome drivers auto-delete the expired data by themselves (Redis, Ssdb, any memory-based drivers...), but some are not (Files, Sqlite) so we are cleaning by ourself the expired item.\nAlso PhpfastCache is standardized by Psr6 which does not specify to keep expired items.\nCheers,\nGeorges. Hello,\nWhat is that line ??\nphp\n    echo $CachedString->getItems().\"<br />\";\nExtendedCacheItemInterface does not implements this method oO\nYou're maybe looking for that ?\nphp\n    echo $CachedString->get().\"<br />\";\nBe caution that the get() method will return you an array (that you just put in the cache before).\nAlso please avoid to use;\nphp\nif (is_null($CachedString->get())) {\nBut instead:\nphp\nif (!$CachedString->isHit()) {\nThis will be cleaner and a bit faster.\nCheers,\nGeorges\n. Hello,\nInstalling mongodb server is not enough, did you installed the composer dependency too ?\nSee:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/be2d5bd336a464397ebfdde0323b12a8214ed3f6/composer.json#L40\nBut you right, there's nothing about this in Wiki, I just added a mention for this change:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV5%CB%96%5D-Migrating-your-code-to-the-V6#third-party-libraries-are-no-longer-required\nAlso, the driverCheck() method were inefficient, I'm gonna push a fix about this line:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/be2d5bd336a464397ebfdde0323b12a8214ed3f6/src/phpFastCache/Drivers/Mongodb/Driver.php#L74\nThis part of code still relies on the Mongo Extension :(\nCheers,\nGeorges.L. A commit has been added, tests are pending :). Hello,\nThe V7 is still on development.\nBut thanks I'll take a look soon.\nCheers,\nGeorges\nLe 7 oct. 2017 12:44 AM, \"rdecourtney\" notifications@github.com a \u00e9crit :\n\nConfiguration:\nPhpFastCache version: 7\nPHP version: 7.1.10\nOperating system: Windows 2008 R2 X64\nWhen using the Couchbase driver on a vanilla install of the last version\nof PHPFASTCACHE, I'm getting the error:\nCouchbase\\Cluster::__construct() expects exactly 1 parameter, 3 given\nError File: W:\\web\\localuser\\competency.io\\competency.io\\assets\\plugins\\\nphpFastCache.v7\\src\\phpFastCache\\Drivers\\Couchbase\\Driver.php Error Line:\n149\nChanging it from:\n$this->instance = new CouchbaseClient(\"couchbase://{$host}\", $username,\n$password);\nto:\n$this->instance = new CouchbaseClient(\"couchbase://{$host}\");\nFixed the issue\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/517, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ73ELD8MzWpvTbZn1KX4HenWKU8Tks5spq1ogaJpZM4PxHhr\n.\n. Hello,\n\nWhat couchDB client are you using ??\nI'm not able to reproduce this bug using phpfastcache/couchdb package.\nWe forked it for performance reasons and because the author does not maintains his package anymore.\nCheers,\nGeorges\n. Ohhh my bad, wrong driver, waking up is hard...\nIndeed my IDE just caught a signature mismatch.... Can you try to replace phpFastCache/Drivers/Couchbase/Driver.php by this:\nhttps://gist.github.com/Geolim4/d76177c5ec3bf2b66fb2109455e381b2\nAnd tell me if it work ? (With or without cluster password and with or without bucket password)\nThanks you very much.. This notice should not appears oO\nCan you post me the content of your phpFastCache/Core/Pool/DriverBaseTrait.php please ?\nCan you please also confirm explicitly that:\n- The cluster username and password works with a provided ones ?\n- The bucket password works with a provided one ?\nThanks.. @rdecourtney I'm gonna push a fix soon, can you please have a look at my previous answer please ?\nThanks you very much.. @rdecourtney Bump :). Ok, i get it the notice is completely normal at this moment since the v7 is still in development and something is not yet updated in that file I asked you to paste :). I pushed some commits, can you test now if everything is ok ?\nThanks !!. In fact, the changelog is already present in release page:\nhttps://github.com/PHPSocialNetwork/phpfastcache/releases\nBut the V7 is currently in development and no release has been yet released.\nIf you plan to integrate PhpFastCache on production, I suggest you to use the v6 instead (final branch).\nAs you can see here:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/v7/src/phpFastCache/Drivers/Couchbase/Driver.php#L77\nThe bug has been fixed for the V7, but I need you to validate these changes before I made them on v6 too.\nCheers,\nGeorges. You got the wrong version, the PR #519 fixes the #518 x)\nDownload the latest v7 here: \nhttps://github.com/PHPSocialNetwork/phpfastcache/archive/v7.zip\nIt includes this line that fix the php notice you got:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/120234d3271fbd3cdcaf8d112825ac99edc54f4b/src/phpFastCache/Core/Pool/DriverBaseTrait.php#L72\n. Is the Couchbase default port 8091 ?. Try to \"hardcode\" the port here to see if it fails:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/120234d3271fbd3cdcaf8d112825ac99edc54f4b/src/phpFastCache/Drivers/Couchbase/Driver.php#L82\nShould looks like:\nphp\n             $this->instance = new CouchbaseClient(\"couchbase://{$clientConfig['host']}:8091\");\n. Bump @rdecourtney \ud83d\ude04 . @rdecourtney I'm gonan close this issue? Just give me a feedback if you can, else I'll have to add a note related to the port :)\nThanks you !. Here's your changelog on V7 & V6 for now (v5 will come later... Many release...). In fact, currently the port is not used by PFC onCouchbase.\nThis is why I asked you to test hardcoding the port:\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/517#issuecomment-336598368\nCurrently Couchbase seems to not offer the possibility to change the port :(\nI'll assume that configuring the port is not possible at this moment.\nThanks you very much !. I would not miss it :)\nCheers,\nGeorges.L. I made a fix that should allow you to setup the port, with a default port to 8091 :). Hello,\nCan you show me your code implementation please ?\nCheers,\nGeorges.L. Can you show me the part where you set and save the data ?\nYou can also send me sensitive code on my email: contact [a-t] geolim4.com\nThanks.. Weird, this one driver was always working until today, I'm gonna make some test tonight.\nI'll let you know once I made them.\nThanks you.. oO\nI was able to reproduce the bug !!\nI'm gonna inspect this quickly, thanks for the report !!. I may have identified a possible cause, I keep looking :). I do have a question for you:\nHow big is: $results = User::all(); ??\nI'll enable binary mode it should be better.. I was able to reproduce it but only with a big array of data which has been truncated (and therefore corrupted) by memcached.. Have a look at this:\nhttps://stackoverflow.com/questions/4795536/increase-item-max-size-in-memcached. Also please make sure that the Memcached daemon is up and running. The php extension Memcached is not just enough.. Hello,\nThis is not a bug, but an expected behavior. \nTo avoid this, specify the securityKey in the configuration.\nSee WIKI :)\nCheers,\nGeorges\n. Thanks for this PR, can you also PR on V7 too please ?\nThanks you !. Hello,\nI'm gonna take a look, thanks !. Can you dump me this object please ?. Well.... The PhpDoc of Redis are completely wrong :(\nhttps://github.com/nrk/predis/blob/111d100ee389d624036b46b35ed0c9ac59c71313/src/ClientInterface.php#L65. Magic fix incoming !. A test has been added to make sure that Predis will no longer returns unexpected type hint. Nahh, mah build is broken, dunno why.... Better now  :bowtie:\nThanks for the report.\nJust be careful, the V7 is in development, not intended (yet) for production purposes.\nHappy caching,\nCheers,\nGeorges.L. > @rdecourtney on #517 at 2017-10-13T10:12:38Z \n\n\nIt would be REALLY useful as well to either have a changelog or version file in the root directory. When downloading each version, I've got 5-6 folders with phpfastcache in it, and no idea what version or how up-to-date they are... thanks!\n\n\nHere you go buddy :). Internally, PhpFastCache stores the tags as an array of tags but there's also a tag index that is stored in the cache. How many tags do you have ?. Also, all the cache items are stored in memory to provide a faster cache response.\nUse $adapter->detachAllItems() or $adapter->detachItem($item) to unload them from memory.\nThis is an expected behavior ofc.. Hulll I'm gonna check that, it should not, but maybe I miss something. I confirm that the tag stays in memory while it should not :/. Well this is a hell of a complex bug -_-\nGotta refactor a ton of code just for this.... Just realizing that this issue showed me a design issue too.\nThanks you, you made my day :D. A patch is coming and will be dispatched to v5, v6 (final) and and v7. Thanks for the report this ticket is now fixed, wait the next release or use dev-master.\nCheers,\nGeorges.L. Mon plaisir ;). Hello,\nDo you reproduce this bug with the V6 (final) ?\nAlso I may need to access and/or collaborate with your project on this bug since it appears to be really specific if you don't mind.\nCheers,\nGeorges. I'm gonna push a fix for that, do you have any time to test it in real time with me ?. Yes of course, I'll give you a patch in a moment. Try this:\nhttps://gist.github.com/Geolim4/9ed87170ff6f6c2121e58697efd7e48b. @rdecourtney bump :D. Okay I'll push a fix tonight !\nThanks you !. Sorry my computer crashed 2 days ago, expect some days until I finished recovering my data.\nMy apologizes.\nCheers,\nGeorges. Not exactly, I did the commit from my work company ;)\nI'll fix my computer tonight anyway, the hardest part was to retrieve my gpg signature to sign the commits above ;)\nCheers,\nGeorges. Hello,\nLike I already mentioned multiple times this wont be implemented for multiple reasons:\n\nWe follow the psr6, that means that we respect the design behind this psr. Each string passed to Item methods must represents an existing item \nNot all cache backend support the deletion by wildcard, and I do not want to implement a feature that will be supported only by few cache backend.\nThis can be BC breaking\n\nI'm pretty sure that you can work with tags if you take the time to think about a pertinent design ;)\nCheers,\nGeorges.L. Hello,\nMaybe I'm missing something but I don't really understand your issue ?\nWhat's your issue precisely ?\nCheers,\nGeorges.L\n. > Probably not an issue for many others I hope, but in my old PHP editor, the line below show up as an error\nIs it working outside your IDE ? Aside of this what kind of IDE does not support namespace import even an old one ?\n\nuse phpFastCache\\CacheManager;\n\nTry to put your 'use' statement before the include/require.\n\nIt is actually working when running on the server, but would be nice to get rid of the \"error\" in the editor I'm using (Zend Studio 5.5.1) when I write PHP code:\n\nI now understand, you have a very old version of Zend Studio oO. The latest one is the version 13. I'm even suggesting you to use phpStorm which is the IDE I use to develop PhpfastCache. PhpStorm is free if you use the EAP version or if you work on an OSS project.\nI'm sorry to tell you that you MUST upgrade your IDE...\nCheers,\nGeorges. Good decision my friend !!\nHappy caching !!\nCheers,\nGeorges. Hello,\nWhat do you mean by:\n\nI think that adapter's get method does not check expiration date\n\nThe file is tested:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/tests/Psr16Adapter.test.php#L1\nAnd the tests are passing ?\nhttps://travis-ci.org/PHPSocialNetwork/phpfastcache/jobs/307150874#L771\nCheers,\ngeorges\n. After the 15 seconds are you still in the same process ?. You right, I'm storing the cache item in memory, this is maybe more a design issue more rather than a bug.\nThe psr-16 documentation is not really clear about it :/\n\nBTW: great class name ;)\n\nKISS principle :)\n. The next release is planned in a couple of weeks, if you can't wait until then you can use dev-master.\nCheers,\nGeorges. Thanks for the fix !. Hello,\nIt's been fixed, thanks you for the report !\nThe fix is only available on dev-master for now until the next release of the v7.\nCheers,\nGeorges. Hello,\n\ndid I make a mistake somewhere?\n\nNot exactly, you enabled this option after the item been created. Thus these indexes (m, c) does not exists.\nClear the cache and those notices will disappears.\nI'm adding a note to myself to add a workaround for this design bug.\nCheers,\nGeorges\n. I just tried like you did, no notice thrown. I get a notice only when I enable the option after filling the cache :/. Did you saved the item after setting up the value ?. Ok, I'll take a look tomorrow night, I hope I will reproduce the bug.\nThanks you.. Ok got it, I may found out the origin of this bug :(\nGotta make a fix soon !. Apply this patch and tell me if it works:\nhttps://gist.github.com/Geolim4/25f735b163fd9874d86bc9223dbd20a4\nThanks,\nGeorges. Thanks you !\nIt's been fixed, wait the next release or use dev-master.\nCheers,\nGeorges.. Hello,\nPut it a year, some backend does not support infinite ttl. I'm usually putting 365 days to make sure the cache is really \"infinite\" :)\nCheers,\nGeorges. > I know it's also an problem of PhpStorm to just scan the complete package for any code but why is this even there in the composer release package?\nThis code is here to guarantee that the library will still work without using composer by using our own autoloader. This ensure a maximum compatibility for non-composer users.\n\nCould you please create a distribute version of phpFastCache for each (new) release without the \".github\", \"bin\", \"docs\", \"tests\" directory and everything else which isn't really required.\n\nThis is not how it work, even the biggest frameworks are not ignoring those files in theirs distributed releases:\n\nJust ignore those directories with PhpStorm:\nRight click on the directory, \"Mark Directory As ...\" select \"Excluded\".\nCheers,\nGeorges\n. There's more users than you think that does not make use of composer. Especially \"old-shool\" companies. We have already pushed up the php version from 5.5, then 5.6 and finally 7. This already a huge step forward, but I do not want to force users to make use of composer since PFC must be autonomous enough to not depends only on a single dependency manager (even a big one).. Hello @thomas-breese\nThis is a hell of a bug that you pointed out there !\nSince the v6 there's an option called preventCacheSlams that was made to bypass this kind of bug for item creation only. I'm not sure however that it's working for deletion (your case).\nYou are facing to a rare use case that I'm completely unable to solve at this moment. In fact I have absolutely no idea on how to deal with those concurrency issues :/ \nI would like to reject the fault on your extreme use case, but I can't because this is a real headache :(\n. If you have any idea, do not hesitate to propose them !. I have an idea that could take potentially very long time to develop:\n- Introducing operation locks in cache and if there's a concurrent write operation we trow an exception.\nLet me explain it better:\n- Client A request a deleteItemsByTag($tagName) using a lock before:\n```php\n$cacheInstance->lock($ttl = 10);\n$cacheInstance->deleteItemsByTag($tagName);\n// During this operation client B will receive an exception if he's trying to work on this cache item\n$cacheInstance->release();\n// Client B can now work on this cache item and will not get any exception\n```\nUsing a $ttl to the lock will ensure you that the client B will not get blocked if the lock has not been released for some reason.\nHowever my fear is that will degrade performances by using an additional check before getting an item :/\nBut there's maybe a solution:\nCan you use multiple cache instances ? One by tag. Assuming that you do not have a tons of tags?. Hello @thomas-breese ,\nI\u2019m closing this issue for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the issue / add comment / clarify \u2026).\nRegards,\nGeorges.L. The error is actually quite helpful. It's telling you that PFC can't write on the disk. There's multiple potentials causes:\n\nNo left space on disk\nNot owner of the target directory\nIncorrect chmod \n\nI'm not sure that error_get_last() will return more pertinent information.\nCheers,\nGeorges. If there's an I/O issue, just check the php logs. That's simple, right ?. The \"@\" should not be used at all in php, it's a very bad practice. Hiding the error does not solve them :). I can indeed work on phpFastCacheIOException because this exception is thrown every time that we got a critical IO Exception.. If it's available, an additional information message will be appended to the Exception message.\nThanks for your report.. Hello,\nit seems that the latest Showdownjs build is broken.\nIt's not even working on windows...\nI'll take a look tonight.\nThanks you !\n2017-12-19 17:26 GMT+01:00 Simon Smith notifications@github.com:\n\nIssue description:\nphpfastcache website not loading any information on different tabs\njust sits there with a spinning wheel\nOSX High Sierra 10.13.2, Firefox 57.0.1, Chrome 63.0.3239.108, Safari\n11.0.2\nbelow logs from firefox web console\nReferenceError: require is not defined - [Learn More] - showdown.js:197:14\nReferenceError: showdown is not defined - [Learn More] - app.js:10:7\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/557, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZz8V0idoIDBcZIT0kKF21Szmrz17ks5tB-OngaJpZM4RHN6o\n.\n\n\n-- \nCheers,\nGeorges.L\n. This issue has been fixed, thanks for the report. Technically this bug has been issued by showdownjs which just released a buggy version some days ago.\nCheers,\nGeorges. Hello,\nThen in your case, files-disk based drivers are not appropriated, use\nmemory-based such as Redid, Ssdb or Couchbase, etc...\nCheers\nGeorges.L. Hello,\nIn a Symfony environment the PhpFastCache bundle must be used because it provides the phpfastcache service and the Yaml configuration.\nIt's not recommended at all to use the PhpFastCache without it's bundle in a Symfony project :)\nCheers,\nGeorges. And the installation is pretty standard and easy:\nhttps://github.com/PHPSocialNetwork/phpfastcache-bundle/blob/master/README.md\nIt takes a couple of minutes to get it working.\nCheers,\nGeorges. Issue moved to PHPSocialNetwork/phpfastcache-bundle #3 via ZenHub\n. These lines will may probably removed in the v7, in the meantime use the ignoreSymfonyNotice option.. This function was made for some backed such as memcache that take dynamic\nTTL.\nI'll investigate.\nCheers,\nGeorges.L. You right,\nIt seem that we are dealing with dead code here.\nI'm gonna check the old drivers too (memcache(d), xcache etc).\nThanks.. Okay I got it :)\nDon't worry, this \"expiration\" column is no longer really used internally :)\nWe use the serialized object that contains the date as a DateTime object (the only one reliable format).\nCurrently the Sqlite \"is working well\" *, but it's still storing wrong (but unused data).\nFor compatibility reason I'll keep this column in the V6 && V5, but it will deleted in the V7.\nHowever...\n* You pointed out a very annoying bug that is related on the whole library for 31+days-based.\nThe code that you mentioned in /src/phpFastCache/Core/Item/ItemExtendedTrait.php:167 is actually wrong.\nIn the first time I was wondering why no one complained about this bug before.\nThen I realized that this kind of bug cannot be easily spotted due to the fact that you need a month of delay before discovering the fact that the item is not expired as expected.\nReally thanks for this report @wloske :)\n. Thanks for the report.\nThe next releases (V5, V6, V7) will be dispatched shortly.\nCheers,\nGeorges. All the majors versions just got a new release:\n7.0.0-beta, 6.1.0, 5.0.20\nCheers,\nGeorges. Hello,\nThis an expected behavior.\nOnce the cache is cleared and there's nothing left in the cache the second\ncache clear has no reason to return true anymore.\nCheers,\nGeorges.L\nOn Jan 18, 2018 7:13 PM, \"Michael Best\" notifications@github.com wrote:\n\nTested on Linux.\nConfiguration:\nPhpFastCache version: 6.0.8\nPHP version: 7.1.13\nOperating system: Ubuntu 16.04 LTS\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/562#issuecomment-358733670,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ8MxqYrn3mfvovbhkTvIaFnXiCZYks5tL4nCgaJpZM4RjVU1\n.\n. In fact it returns the value that the backend itself return which is generally arbitrary.\nFALSE is returned when there's no more data to clear in cache.\n\nHowever you can try/catch the clear operation to expect a failure of the cache which generally throws an exception if something went wrong.\nThe Dev* driver are made for development purpose, the're like a blackhole driver.. Hello,\nFunny, I never considered this possibility :)\nI'll check it out this weekend.\nCheers,\nGeorges.L\nOn Jan 18, 2018 7:22 PM, \"pioc92\" notifications@github.com wrote:\n\nConfiguration:\nPhpFastCache version: 6.0.8\nPHP version: 7.1\nOperating system: Apache ???\nIssue description:\nHi, i know that my hosting provider tell us that for using redis, we have\nto connect with a socket like /var/run/redis/redis.sock\ni tried to do that : $InstanceCache = CacheManager::getInstance('redis', [\n'host' => '/var/run/redis/redis.sock'\n]); but i had a fatal error\nPHP message: PHP Warning: Redis::connect(): php_network_getaddresses:\ngetaddrinfo failed: Name or service not known in /var/www/\ncalendriergratuit.fr/www/vendor/phpfastcache/\nphpfastcache/src/phpFastCache/Drivers/Redis/Driver.php on line 137\nHow to configure redis driver in my case?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/563, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ8sLV94tD3gpg1WNaB8oPMqr6ehmks5tL4wAgaJpZM4RjW8h\n.\n. I'll take a look, but I'm not sure to target this for the v6, I have to check if it's BC breaking or not.\n. Ok, I see, the port should be optional.\nI'm gonna fix this, but can you tell me if the Predis driver is working well or if it needs the same fix ?. Also, based on V6 try to apply this patch:\nhttps://gist.github.com/Geolim4/fdcb754755e0c3d2b919adeb78f44e53\n\nIf it works I'll merge it asap for the V6.1\n. Ok for Predis I'll make a fix too.\nIf I remove that bracket line 40, it throw a syntax error, are you sure ?. Did you applied the patch using git ?. Okay, it's better to apply a patch with Git. I checked for that bracked and it's fine.\nI'll take a look for Memcache(d).. I updated the patch tell me if it's working.\nJust provide the \"path\" option, I removed the \"UnixSocket\" option.\nI the path is provided the code now considers it as an Unix Socket.\n. Also FYI, how to apply a patch file easily ;)\nhttps://git-scm.com/docs/git-apply. Are you using Memcached or Memcache ?. I'm gonna need some help on this one :(\nI have no server under my hand to test Memcached on a socket.\nCan we setup a teamviewer or something in private ?. Do you have Hangout ?\nIf yes get in touch with me on contact[at]geolim4.com. @pioc92 \nI found out the issue, I should have noticed it before :(\nYou are passing \"host\" and \"path\" configuration directives straight into the $config array.\nMemcache(d) have a quite different syntax but this is my fault because this is undocumented at all..\nThe right syntax for Memcache(d) is the following one:\nFor UNIX sockets:\nphp\n$InstanceCache = CacheManager::getInstance('memcached', ['servers' => [ \n    [   \n    'path' => '/var/run/memcached/memcached.sock' \n    ]\n]]);\nFor standard TCP connections:\nphp\n$InstanceCache = CacheManager::getInstance('memcached', ['servers' => [ \n    [   \n    'host' => 'hostname' ,\n        'port' => $port\n        // etc ...\n    ]\n]]);\nBut I agree this can be quite disturbing, this is why I made a patch that will allow the following syntax as of the V6.1 (which will be released by the end of January):\nFor UNIX sockets:\nphp\n$InstanceCache = CacheManager::getInstance('memcached', [\n  'path' => '/var/run/memcached/memcached.sock' \n]);\nFor standard TCP connections:\nphp\n$InstanceCache = CacheManager::getInstance('memcached', [ \n   'host' => 'hostname' ,\n    'port' => $port\n    // etc ...\n]);\nIn the meantime use the first syntax above using the \"servers\" configuration directive.\n. I'm still running some tests to improve the Travis units tests and I'm gonna close this issue then.\nThanks you :). The v7 (7.0.0-beta) has been released:\nhttps://github.com/PHPSocialNetwork/phpfastcache/releases/tag/7.0.0-beta\nThe v6 (6.1.0) should follow in a moment.. The v6 (6.1.0) has been released:\nhttps://github.com/PHPSocialNetwork/phpfastcache/releases/tag/6.1.0. Hello,\nInteresting idea for the V7.\nI have to study the latency before doign anything :)\nCheers,\nGeorges. I tried many things using the Google php's client and many things came up:\n\nThe latency is really unpredictable: From 50 ms to 800ms sometimes. This is too much.\nThe Google php's client is very heavy: more than 7MB compressed !\nThe Google php's client is very ugly: It's Using_Old_Namespacing_Style\nThe Google REST Configuration is too much complex and requires a lot of configuration on the target account to get it working, thus making it almost unmaintainable :(\n\nThe Idea was however interesting, let's hope that some others cloud platforms provide a better SDK.\nCheers,\nGeorges.\n. Hello,\nThis method by it's name effectively clear the whole cache as documented in the Redis doc.\nJust use a different Redis server/database then.\nSee this line for more information:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/374999bdc0ab66517d1edef6f833b5995abe64e7/src/phpFastCache/Drivers/Redis/Driver.php#L140\nCheers,\nGeorges. Hello,\nYou may want to use tags ?\nBe careful, depending the amount of data you want to store in cache, the tags are may not the best solution.\nCheers,\nGeorges. Nope, it's up to you to implement it depending your code :)\nThere's no universal way to implement the cache.. Why so, It's clear, right ?. Indeed, I'm gonna fix that. thanks you !. Fix merged, thanks you !. Hello,\nDo you have a link to describe me the php method that I could implement on my side ?\nMust have GET/SET/DELETE/CLEAR methods or equivalent at least.\nHowever, if i would planned to implement it, I'll target it for V7 :)\nCheers,\nGeorges. @Vladdy88 UP :). Hello,\nPlease provide me the PhpFastCache version and environment please :)\nThanks you.. \"Newest version\" does not help, please specify.. Hello,\nPlease specify the version.\n\"2016 version\" is not a understandable version.\nCheers,\nGeorges. The V4 is no longer supported, upgrade to V5 at least or V6.\nSee the Global support timeline:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%CB%96%5D-Global-support-timeline\nTo upgrade smoothly, check out the /doc folder in the project.\nCheers,\nGeorges.L. There's a missing line, where's the set() /save() calls ?\nThe getItem() method does not trigger this kind of error.\nCheers,\nGeorges.L. Yeah,\nThe Redis build is passing well:\nhttps://travis-ci.org/PHPSocialNetwork/phpfastcache/jobs/345666767#L2092\nHappy coding,\nGeorges.L\n. Bug fixed, thanks :D. Hello,\n\n$cachedString->set($result)->expiresAfter(5);\n\nAre you aware that this put in cache for 5 seconds only ?\nSecondly:\n\nif (is_null($cachedString->get())) {\n\n\nUse isHit() instead this will improve performance.\nFinally,\nThe error you mentioned \n\nWarning: rmdir(C:\\xampp\\htdocs\\PSS\\v1\\files\\Auto\\Files\\14\\77): Resource temporarily unavailable in\n\nJust looks like a chmod/chown issue.\nCheers,\nGeorges.\n. And globally don't use is_null() but $var !== null.\nThis is faster since this is parsed by the lexer, not the runtime compiler.\nCheers,\nGeorges. Hello there !\nThis is a good question :)\nThis choice has been made on purpose mainly because of the possible chdir/getcwd differences between a WEB and CLI execution for a single application.\nThis can lead to a completely unexpected cache directory resolution, where on the contrary an absolute path ensures you that the cache directory value is trusted and let ne doubt about it's resolution.\nThe good practice is usually to build a path with a ROOT project constant.\nDrupal is doing it with DRUPAL_ROOT as well as Symfony with kernel.root_dir\nCheers,\nGeorges.L. This behavior is already mentioned in the WIKI :)\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%CB%96%5D-The-driver-options#hostauthenticating-options-\n\n\npath | string (default: not set) [>=V4], [>=V6.1] The absolute path where the written cache files belong to (system temp directory by default). As of the V6.1 this option is also used to define (P)redis and Memcache(d) UNIX socket\n\n\nThe output is technically correct, the documentation reading belong to the end user/developer that will implement PFC on the project.\nHowever if you think that this could be helpful, I can throw an error if a (guessed) relative directory is passed to the $path option :)\n. There's plenty examples if you look out on Google of chdir issues with CLI/WEB apps on php.\nAlso defining a sort of \"root path\" is not a big deal and is even a recommended practice since it allows you to define a trusted base root dir that will represents your application root directory.\nThis kind of constant is absolutely implemented in all moderns (and old ones) php project:\n\nSymfony\nDrupal\nphpBB\nWordpress\nPrestashop\nLaravel\n...\n\nShall I continue ?\nI'm not introducing a restriction at all, on the contrary I'm enforcing a best practice.\nSo no I won't change this behavior, like you said, \"I think it\u2019s the users responsibility to take care of path\".\nAsking them for an absolute path give 'em good practices and make their good safer.\nIs that really a big deal to declare that simple statement in the top of the bootstrap of your code ?\nphp\ndefine('MY_APP_ROOT_PATH', __DIR__);\nI don't really understand your issue with that, in fact it looks like you've been used (no offense) too much bad practices or just not enough good ones ?\n. Indeed, I did not intend to change this behaviour for now, but I'll may reconsider adding a warning to the user that pass a relative path in the future.\nMaybe for the v7 :)\nThanks for your feedback, much appreciated !\nCheers,\nGeorges.L. Hello,\nI'll look into it, also please be aware that the securityKey is not available in CLI execution context.\nCheers.\nGeorges. I think I found out the bug. \nJust need some tests\nHang tight :P. The bug is now fixed, thanks for the report !. Hello,\nYou may have to setup a lower expiration date.\nEach cache item uses two redis keys (one for the data, the other for indexing the tags).\nJust for curiosity, what are you caching and how do you implemented the cache ?\nAlso you may have over-cached data via a dynamic key ?\nCheers,\nGeorges\n. @dutom007 Bump :). Okay, thanks you, happy weekend !. Hello,\nFirst of all don't use is_null($all_pays_cached->get()) but $all_pays_cached->isHit().\nGlobally, don't use is_null() but $var !== null :P\n(This is faster since this a language construct and not a runtime function)\nNow the problem:\nI'm not really sure that it is a PFC issue, as you can see here:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Drivers/Redis/Driver.php#L80\nI make use of setex command as documented in Redis:\nhttps://redis.io/commands/setex\nThe problem is that your cache backend is \"too much\" dynamic, I'm guessing that $cache_keyword is a user data that could possibly be completely random ? (If it does this is a bit dangerous..)\nAlso I'm not sure that Redis is cleaning by itself expired items periodically, you may have need to configure a cron for that.\nCheers,\nGeorges\n. This is simply not an issue that is PFC-related :)\nYou simply have too much combinations possible with $cache_keyword ;)\nAlso since Redis is NOT auto-cleaning the expired key by itself, there's your issue.\nJust flush the cache periodically or setup a cron that will cleanup expired  Redis keys. \n(This is not to PFC to handle this kind of task).\nCheers,\nGeorges.\n. Hello,\nI'm doing the same thing:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Drivers/Redis/Driver.php#L80\nI make use of setex command as documented in Redis:\nhttps://redis.io/commands/setex\n\nSet key to hold the string value and set key to timeout after a given number of seconds. This command is equivalent to executing the following commands:\nSET mykey value\nEXPIRE mykey seconds\n\nCheers,\nGeorges\n. Hello,\nGood question indeed :)\nSince this cache is a \"Static memory\" cache it is not really recommended to use it in production except for some specific context such as volatile data that should not be persisted at all but that should also not be fetched multiple time.\nThe decision to flag it as a \"Development\" driver was mainly to avoid beginners to use it in the wrong way and get their application performances even worse. \nHowever if you want use it in a specific way and you know the consequences/advantages/cons of a \"Static memory\" cache, feel free to implement it in your code \ud83d\ude38 \nCheers,\nGeorges.\n. Hello,\nIn MVC frameworks like Symfony this can be defined as a Service. But this is already handled by the Phpfastcache-bundle bundle in this case.\nWhat you have to do is either a singleton class that will return you a unique pfc instance, either storing the instance in an application container or something like that.\nIt's up to you depending you needs & application architecture.\nJust store the pfc instance somewhere and reuse it as much as you need to.\nCheers,\nGeorges\n. Hello,\nThe \"path\" configuration is conflicted between Predis and Files:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%CB%96%5D-The-driver-options#hostauthenticating-options-\nIn the v7 this behavior will probably change using a dedicated fallback configuration to avoid any configuration conflict.\nAlso the fallback option is only working if the DriverCheck() method has failed.\nThis option does not cover wrong configurations / back-end issues.\nCheers,\nGeorges.\n. Not at all ! \nI only plan to add a subconfig for fallback drivers.\nServer failure cannot be handled because there's too many kind of exception to catch for each driver and depending where the exception is thrown it's impossible to fallback immediately (E.g. CRUD operations).\nIf you have server failures it's up to you to catch the exception/fix the issue.\nThe fallback driver only catches \"missing php extensions/dependencies\".\n. It's up to you to do this ;)\nThe right approach is to ensuring yourself that the Redis server stays up !\nI'm closing this one since this is not a bug.\nCheers,\nGeorges.. I just added dedicated fallback configuration for the V7:\nhttps://github.com/PHPSocialNetwork/phpfastcache/commit/501a7e6094f4dc0c5c4cd2d41c35f4bbf214a895. Hello,\nThis could be theoretically possible but highly discouraged except if you have a monster SDD configuration.\nFor that such amount of key, I'm advising you to use memory-based drivers such as Redis, Ssdb, Cassadra etc. (Check out README to see the list of high-performances drivers).\nCheers,\nGeorges\n. Don't access directly to the database that is handled by PFC, you would mess up the internal references created by PFC. \nUse tags instead. (See the README).\nAgain, if you really have million keys in your cache, I'm seriously suggesting you to choose a memory key-value driver.\nSQLite is really not intended for massive storage use.. Hello,\nWhat do you mean by \"We'd like to add a modified Redis driver \" ?\nYou want to submit a Pull Request, or just \"extend\" the Redis driver ?\nCheers,\nGeorges. Check this out:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV5%CB%96%5D-Setup-your-own-namespace\nIn your own namespace, just extend the Redis driver by your own one.. Thanks you very much @ylorant  !!. Hello,\nWhat are you talking about exactly ?\nCheers,\nGeorges. You just can't since this is a part of the core.\nIt contains important item information such as expiration date, tags, etc.\nThey are internally stored and unserialized when the cache item is called.. ??? How could the tests pass before this Pr ?? Nice catch @Cyperghost :dizzy_face:. Hello,\nJust setup your Memcache backend:\nhttps://serverfault.com/questions/202017/how-to-increase-the-amount-of-memory-memcache-uses\nCheers,\nGeorges.. Nothing in the applicative level can be done for that. It's more likely a server-side configuration :/. Like I said, this not Phpfastcache-related, so I can't do anything for you with this issue.. Look the Wiki:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%CB%96%5D-The-driver-options-config\nIt's only valid for Cookie driver.. It's just a typo, it's reserved for the Cookie driver exclusively.\nAnd again no, this is clearly a server configuration, php does not even offer an option to setup that since this is the kind of option that only a server administrator can manage.. I'm locking this issue now since this out of the phpfastcache's scope.. Hello,\nJust run this command with composer:\nhttps://getcomposer.org/doc/03-cli.md#dump-autoload-dumpautoload-\nYour composer static cache is just outdated.\nCheers,\nGeorges. Also please don't use phpFastCache\\CacheManager but Phpfastcache\\CacheManager.\nThis has been changed as of the V7.. Hello,\nThis is a known limitation of the (P)redis driver  and won't be done in v6 which is now stable.\nHowever this could be eventually studied for the v7.\nCheers,\nGeorges. @dol This should do the job. Test it please, so I can make some automated tests on my side too.\nThanks.\nN.b: This has been only implemented for Predis/Redis clients for now. I will may considerate implementing it to other drivers in the future.. @dol Bump :P. The issue has been fixed, thanks you for your contribution :thumbsup:\nGeolim4. Hello @git-webmaster \nThanks you for the contribution but I would prefer to make the pull request to the V7 rather than the \"final\" branch to preserve backward compatibility as Phpfastcache is Semver compliant ;)\nHowever you can add a notice in the driver class in the \"final\" branch to warn the users about this deprecations.\nMuch appreciated,\nCheers,\nGeorges\n. Make a new pull request to the V7 with those changes (please test it carefully), the V7 being almost production ready it's not too late to apply this fix right now.\nThe V6 (final) is now freezed to preserve backward compatibility.\nSo I would close this actual pull request and made a new one to the v7 with the right changes.\nYou can still make another PR to the v6 if you want with the only purpose to warn user about this deprecated behavior.\n. Good thing, I do love fairly tested code, thanks you for your contribution <3. Then, don't PR now, you can do it someday when you will upgrade your code.\nDon't you have a \"test\" server on your hand where I can test that ?\nI burned my Vagrant box that was my one and only Couchbase server :(. Hello,\nCan you send me all the sensitive information at \"contact [nospam] geolim4.com\" please ?\nThanks you very much for providing me such resources !\nCheers,\nGeorges. I will probably begin my tests this weekend or in the very beginning of the next week, thanks.. I just made the V7 update, hope it'll work on the first shoot :P. Hello,\nThe error is explicit, isn't ?\nIt says that you don't have the requirements installed for using Redis/Mongodb.\nThe requirements are usually php extensions or third party dependencies (predis/predis).\n- Redis: https://pecl.php.net/package/redis\n- Mongodb: https://secure.php.net/manual/fr/set.mongodb.php\nAlso the version \"latest version I downloaded\" is not helpful. You need to tell me which version you are using, usually available in CHANGELOG.md.\nCheers,\nGeorges\n. Did you read the API section in readme ?\nhttps://github.com/PHPSocialNetwork/phpfastcache#item-api\nThere's is everything here to manipulate the cache for every needs.\nCheers,\nGeorges. > clear() // Allows you to completely empty the cache and restart from the beginning. Then don't use cache, I think you got a misconception of cache concept. A cache means that the data are temporary stored and frozen for a given time.. Hello @ghuisman19 \nThat's the new subtility of the V7 ^^\nAs of the V7, the configuration must be a valid Phpfastcache\\Config\\ConfigurationOption object :)\nHere's a migration guide from the V6 to the V7:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/v7/docs/migration/MigratingFromV6ToV7.md\nCheers,\nGeorges\n. Hello,\nSince the configuration is the same for all drivers (abstraction) this is currently not possible.\nAnd will probably not implemented in the future since this must be abstract-implemented and some drivers does not support that kind of operation.\nCheers,\nGeorges. Hello,\nYou used primitive arrays which is now deprecated as of v7.\nPlease read this:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/master/docs/migration/MigratingFromV6ToV7.md#configuration-option-type\nCheers,\nGeorges\n. Indeed, I'll update them ASAP, thanks.. It's now fixed, thanks @lexo13  !. Hello,\nI don't know what to say, tests are all green as you can see:\nhttps://travis-ci.org/PHPSocialNetwork/phpfastcache\nI may have a clue, but I need to see your cache code context :)\nIf it's sensitive, send me the sample at contact-at-geolim4.com\nThanks\n. As I have no possibility to create a test for that, I'm going to push a preventive fix that should logically fix your issue.\nHere's my clue:\nhttps://github.com/kalessil/phpinspectionsea/blob/master/docs/probable-bugs.md#mkdir-race-condition. Fix will be available in the next release (around next week).. Since the v6 had no new release since march, I'm gonna release one immediately.\nThe v7 will wait a bit more thought.. Here you go:\nhttps://github.com/PHPSocialNetwork/phpfastcache/releases/tag/6.1.3. Are you sure that you updated the right composer ?\nBecause I see that error in your stack:\n\nUncaught phpFastCache\\Exceptions\\phpFastCacheIOException: PLEASE CHMOD /tmp/beta/Auto/Files/5e/e0 - 511 OR ANY WRITABLE PERMISSION! in /var/www/html/beta/web_services/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/Pool/IO/IOHelperTrait.php:157\n\nBut it is not matching that line 157 updated in v6:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/v6/src/phpFastCache/Core/Pool/IO/IOHelperTrait.php#L157\nBut you have updated composer in /var/www/html/beta/web_panel/ while your error seems to be in /var/www/html/beta/web_services/ ?. It has to be as per https://github.com/PHPSocialNetwork/phpfastcache/commit/ab15efd1dfe6b36e698d19a49df95dc210a59cde. @hriziya Is it working now ? :). Hello\nTry to negate isHit() \ud83d\ude05\nThe exemple is buggy lol.\nCheers,\nGeorges\nOn Sat, Jun 9, 2018, 6:19 AM junxien notifications@github.com wrote:\n\nConfiguration (optional)\n\nPhpFastCache version: 7.0\nPHP version: 7.0.30\nOperating system: Linux\n\nMy question\nHi i am using the latest version with a shared hosting and couldn't figure\nit out how it works, i am using code example providing from site here is\nthe code :\n=====================\nrequire DIR . '/vendor/autoload.php';\nuse Phpfastcache\\CacheManager;\nuse Phpfastcache\\Config\\ConfigurationOption;\n// Setup File Path on your config files\n// Please note that as of the V6.1 the \"path\" config\n// can also be used for Unix sockets (Redis, Memcache, etc)\nCacheManager::setDefaultConfig(new ConfigurationOption([\n    'path' =>  DIR.'/tmp' // or in windows \"C:/tmp/\"\n]));\n// In your class, function, you can call the Cache\n$InstanceCache = CacheManager::getInstance('files');\n/*\n * Try to get $products from Caching First\n * product_page is \"identity keyword\";\n /\n$key = \"product_page\";\n$CachedString = $InstanceCache->getItem($key);\n$your_product_data = [\n    'First product',\n    'Second product',\n    'Third product'\n     / ... /\n];\nif ($CachedString->isHit()) {\n    $CachedString->set($your_product_data)->expiresAfter(50);//in seconds, also accepts Datetime\n  $InstanceCache->save($CachedString); // Save the cache item just like you do with doctrine and entities\necho 'FIRST LOAD // WROTE OBJECT TO CACHE // RELOAD THE PAGE AND SEE // ';\necho $CachedString->get();\n\n} else {\n    echo 'READ FROM CACHE // ';\n    echo $CachedString->get()[0];// Will print 'First product'\n}\n/*\n * use your products here or return them;\n /\necho implode('', $CachedString->get());// Will echo your product list\n=============================================\nand it's only return READ FROM CACHE // without printing any product. And\nthe tmp folder is empty. This is my phpinfo http://indo.a2hosted.com/ .\nDid i do anything wrong or it's just server side issues? I'm sorry i'm new\nto composer stuffs. Thank you for reading this.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/618, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZyfF2Q9NkiS258WSw8xOKtsfv_vvks5t60zfgaJpZM4UhKyz\n.\n. Prefer using isHit() to test if it comes from cache. It's about a race\ncondition.\n\nOn Sat, Jun 9, 2018, 6:48 AM junxien notifications@github.com wrote:\n\nthanks George for the reply..... lol \ud83d\ude04 I have changed it to\nis_null($CachedString->get()) and its working now... i can't believe i'm\nstruggling for more than 12 hours for this \ud83d\ude06\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/618#issuecomment-395939869,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZyUpzVD9unnA_Z2of1LuHVQxc2RVks5t61O5gaJpZM4UhKyz\n.\n. Hello,\n\nI think you misunderstood the getOptionName() context:\nTry that instead:\n$this->oCache->getConfig()->getDefaultTtl();\nCheers,\nGeorges. Yeah this is a normal behavior, as stated in the migration guide, this change is deliberate to offer a stronger and better configuration system to developers :). Hello,\nYeah the example is a bit buggy indeed, I'll fix that asap.\nEffectively as of V7 every namespace that begun with use phpFastCache\\... is now replaced by use Phpfastcache\\...\nCheers,\nGeorges. The mistake in migration guide has been fixed.\nThanks you !. Hello,\nPhpfastcache only handle CRUD operations on every backesnd but does not perform any kind of \"clean\" except if you call the clear() method by yourself, but it'll empty the whole cache backend.\nSome cache backend automatically delete expired key (items) such as Redis, memcache, ssdb, but some are not such as Sqlite, Files, etc. Because this requires a distinct daemon on the backend side that will clear expired items by itself.\nCheers,\nGeorges. Hello,\nGreat pull request thanks, I'm gonna review it !. Wonderful, thanks you @UnRyongPark \nI'm gonna merge it once tests are finished.. Merged, thanks you for yur contribution,\nCheers,\nGeorges. Hello,\nUnfortunately I can't do anything about that to be honest.\nSqlite is not really designed for this kind of use. Your case study make me\nfeel that you need to use a more concurrent backend such as Files or\nmemory-based backend such as Redis, Ssdb, etc.\nCheers,\nGeorges\nOn Tue, Jul 3, 2018, 12:18 AM Michael Biebl notifications@github.com\nwrote:\n\nVersion: 7.0.1\nI'm using phpfastcache with php 7.2 under IIS/Windows Server 2016 using\nphp in CGI mode.\nThe backend is sqlite.\nIf the sqlite database does not exist yet, and I have multiple clients\naccess the server at the same time, there seems to be a race condition when\nthe database is created, as I get the following in the php error log:\n[02-Jul-2018 17:58:28 UTC] PHP Fatal error:  Uncaught ErrorException: mkdir(): File exists in C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Core\\Pool\\IO\\IOHelperTrait.php:107\nStack trace:\n0 [internal function]: exception_error_handler(2, 'mkdir(): File e...', 'C:\\src\\Gal2Go-s...', 107, Array)\n1 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Core\\Pool\\IO\\IOHelperTrait.php(107): mkdir('C:\\Windows\\TEMP...', 511, true)\n2 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Drivers\\Sqlite\\Driver.php(74): Phpfastcache\\Drivers\\Sqlite\\Driver->getPath()\n3 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Drivers\\Sqlite\\Driver.php(82): Phpfastcache\\Drivers\\Sqlite\\Driver->getSqliteDir()\n4 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Core\\Pool\\DriverBaseTrait.php(70): Phpfastcache\\Drivers\\Sqlite\\Driver->driverCheck()\n5 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastc in C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Core\\Pool\\IO\\IOHelperTrait.php on line 107\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/626, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ1p22hN7dNKygpZkiF6WhXoPJ7Mqks5uCpwugaJpZM4VABQg\n.\n. The Files backend is well-tested against concurrency in multiple website on\nmy side (including a million visit/month one) and I never encountered this\nissue before. This is a known issue with Sqlite which badly supports\nconcurrency due to its design itself.\n\nPlus, Files drivers has both options (disabled by default) against cache\nslam protection and secured file manipulation.\nOn Tue, Jul 3, 2018, 1:28 AM Michael Biebl notifications@github.com wrote:\n\nI certainly feel like this is a bug.It's not a problem of sqlite itself,\nbut how the sqlite db is created in the first place.\nFwiw, I've also tried the files backend, and it was even worse in that\nregard.\n\u2014\nYou are receiving this because you were assigned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/626#issuecomment-401967419,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZzyqWivX7uNKLl5sH3h3JspKweqAks5uCqyagaJpZM4VABQg\n.\n. I'm not gently sliding to trolling, but Windows & PHP environment are not know to be very friendly since many extension are not even supported or simply not updated since a while (Memcache, Xcache, APC, etc).\n\nIt looks like you're option-limited and since you looks like developing locally, I'm advising you to use some Vagrant/Docker VM to run your app under Unix env which would save you further nightmare not only about Phpfastcache.\nThe problem with Sqlite is that the creation of the database cannot be concurrent since we're on a unique binary file unlike every else backend drivers :/. What can I say: You are the first reporting me this issue after 3 major release, some users I know are using it on highly sensitive productions, I'm myself using the Files driver on a million visitor per month website (with an average of 10~15Mo/s rw I/O), and a couple of API apps and this kind of error never appeared once on my side.\nIf you can identity some issue I would be glad and thankful but actually, at this point, I'm completely unable to reproduce your case.. I just ran 10 tests in the exact same time in my company using 10000 items each and no errors appeared using Files driver (On a Win10x64 computer). Sqlite succeeded too despite its horrible time-spend. Honestly I'm not sure how to reproduce your issue ATM, at least give me a code sample or open a pull request if you identified the potential cause.. Obviously if you run 500 concurrent requests in the exact same time (which is very unlikely, even with 1M visitor/month this never happened) you are clearly looking for troubles ;)\nIn your case indeed there's no way on my level to fix that bug even by putting some kind of .tmp file to queue the requests because even the .tmp file would be overridden.\nYour case clearly suggest me to encourage your to move to a stronger cache backend that handle concurrency far better than Sqlite.\nRedis/SSdb are doing perfectly the job as much are Cassandra, Couchdb and Couchbase are doing it.. The whole list of supported backends ATM is available below:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki#supported-drivers-at-this-day-. Yes but all your concurrent requests would create the lock in the same time. Making the fix useless :/. Well, a lock is not reliable at all since some system put the lock at the process-level and not at the thread-level. Php being frequently configured in a fcgi mode this would not be reliable.... I'm usually always trying to improve Phpfastcache performance and efficiency by respecting at least three fundamental rules:\n\nThe improvement is cross-platform and not targeted on a specific  OS/Environment (except in case of degraded condition hotfix on a specific OS/Environment)\nThe improvement does not involve any hackish/dirty patch that make the code unmaintainable for anyone that discover and try to understand the code logic of Phpfastcache\nThe library stays Psr6/16 compliant no matter what, in order to ensure a maximum portability of the library.\n\nThanks for your report, this is always appreciated even in the case I can't fix it immediately for any reason whatsoever.\nCheers,\nGeorges.L\n. Yes and no...\nThis is natively not possible but as of the v7 you can provide your own Redis client:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%CB%96%5D-Configuration-Options#redispredis-specific-options\nSo in the meantime that I add the support for this option you can make use of your own Redis client.\nCheers,\nGeorges. I'm re-opening this issue to work on this for the 7.0.2 ;). The option \"optPrefix\" has been added and will be available as of the 7.0.2 comes out (in a couple of weeks or less).\nThanks @frumbert \nCheers,\nGeorges.L. Hello,\nMine does too, the deps are shipped for those that are not making use of Composer benefits, using our standalone auto-loader.\nJust ignore them in your project, those deps are only loaded if Phpfastcache is not included in a project using composer.\nCheers,\nGeorges\n. Hello,\nSee by yourself:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/master/lib/Phpfastcache/Drivers/Couchbase/Driver.php\nI'm using the CouchbaseClient class so I have no idea what's behind it.\nI'm not very familiar with Couchbase and I worked only to test CRUD operations to work well.\nIf you feel like something could be improved then feel free to submit a PR \ud83d\ude05 \nCheers,\nGeorges. Do you really think that N1QL are \"significantly faster\" than traditional get/set commands ?\nI means, if its improving slightly the performances I'd prefer not take the risk to update significantly something I don't control confidently.\nHowever, if this is a significant improvement that effectively reduce the time-spend I'm really interested and ready to ship it for the next minor version (7.1.x). \nCheers,\nGeorges. If you could provide me some Couchbase server to make the tests and dev, I'm completely open to it.\nActually I missing some free time to work on this kind of improvement despite the fact that I would terribly like to learn and discover new practices with these NoSQL backends.\nBy design and as Psr6 Phpfastcache would use upsert only because there's no need to check if it already exists or not.\n\nsmall question next to this: I'm installing phpfastcache/phpfastcache but I see it requires all cached drivers to be loaded in PHP, I think that is too much overhead or can I go around this ? \n\nThanks to modern autoload systems provided by Php (spl_autoload) and composer, Php only load called classes on the fly. This means if you make use of Couchbase driver, only Couchbase file & Phpfastcache core will be loaded, nothing more.. When I talk about upsert it's only when using SET command only, not GET :)\nWhen the user choose to persist an item there's no need to check it before\ninserting at all :)\nThe library does not ask for many extensions, most of them are \"suggested\"\nand each driver has its own requirements.\nThe only required extensions are mbstring and json which are part of the\ncore of phpfastcache.\nPlus psr6 interface for being compliant.\nCheers,\nGeorges\nOn Mon, Jul 9, 2018, 8:42 PM Yamakasi notifications@github.com wrote:\n\nI'm not able to provide you a server currently, I run it on a local dev VM\nas well. Installation is easy these days, goes by itself.\nI cannot agree with if you need to check if a document already exist or\nnot. If it's cached and cache is already faster to access you need to know\nif it exists, there is cache for and you also fetch that document after it\nas well, or actually at the same time. It's just faster to access cache in\nany ways then you SQL backend in that case.\nOK, that is indeed a nice feature of PHP, autoload, but why does someone\nneed to install 25 extra extentions to install a composer package where he\nonly uses 1 or a few, doesn't sound good to me so that might need some\nchangement if you ask me.\nFor the rest this library is great I think \ud83d\udc4d\n\u2014\nYou are receiving this because you were assigned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/630#issuecomment-403580173,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ0lCJwGLkCdOP36iProtyauxGSLzks5uE6QSgaJpZM4VIIH0\n.\n. I'll check it out in the future when I'll reinstall my vagrant boxes since I formatted my computer recently.\n\nGuzzle does not came from the phpfastcache's deps at all, the only one dep is the psr6 interface which has no other deps.. The support of many cache backend is the reason why phpfastcache became some kind of \"popular\".\nCode once regardless the cache backend you choose, the abstraction allows you to not refactor your whole code and just update the configuration passed to the cache manager.\nWhy so many cache backends ? Different needs, different developments, different environment. Somz people just need filecache, some need memorycache.. If there's a latency, its extremely minor because phpfastcache has been optimized more and more over the major versions (v5, v6, v7) and became even more reliable since the v7 as it introduced strict types and type hint contracts. The idea of abstraction whatever the language/platform your choose is to have a very minor performance concession for a highly reliable and configurable application.\nAlso since php7 the performance difference is so insignificant that worrying about some nanosecond gained bypassing the abstraction is pointless.\nRegarding the current Couchbase client I'm not even sure that there's a significant performance decrease especially if you're working with a set of redundant clusters.. Also remember that the Couchbase extension (in contrary of Predis, Ssdb, etc) used by phpfastcache is written and compiled in C making the performance difference even more pointless ;). You're welcome :). Yeah tagging is natively supported whever the cache backend you choose.. There's a tag index for each tags that reference item were its tagged in.\nThis has been made in order to improve performances when looking for items by tags to avoid whole cache backend scanning to loop for item that possess tags.\n. Hello,\nErrors are something serious enough to handle them yourself using a try/catch bloc.\nThe library is already having a fallback on initialization if the cache backend is failing for some reason (missing extension, unreachable server, etc).\nSo no, the library won't handle retry attempts because this would make the code unmaintainable and also because it's against KISS principle.\nCheers,\nGeorges. \n. Hello,\nThanks for the report, I'll take a look tomorrow.\nCheers,\nGeorges\n. Hello,\nThe V6 is not that old, it's even actively maintained, see the support timeline below:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%CB%96%5D-Global-support-timeline#v6-lts-june-2017\nFor your issue there's no such \"redis\" sub-object at all:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/v6/src/phpFastCache/Drivers/Redis/Driver.php#L136\nI tested the v6 this morning and it's working very well \ud83d\udc4d \nCan you show me your code implementation, you may missed something ?\nCheers,\nGeorges\n. php\n$cacheConfig = array(\n    \"storage\" => \"redis\",\n    \"redis\" => array(\n        \"host\" => Config::get('REDIS_HOST'),\n        \"port\" => (int) Config::get('REDIS_PORT'),\n        \"password\" => Config::get('REDIS_PASSWORD'),\n        \"database\" => (int) Config::get('REDIS_DATABASE'),\n        \"timeout\" => \"\"\n    )\n);\n\\phpFastCache\\CacheManager::setDefaultConfig($cacheConfig);\nThis is so wrong:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%CB%96%5D-Configuration-Options\nstorage does not exists, and Redis subkey is just ignored because it's invalid:\nTry this:\n```php\n$cacheConfig = [\n        \"host\" => Config::get('REDIS_HOST'),\n        \"port\" => (int) Config::get('REDIS_PORT'),\n        \"password\" => Config::get('REDIS_PASSWORD'),\n        \"database\" => (int) Config::get('REDIS_DATABASE'),\n        \"timeout\" => \"\" // MUST BE A VALID NUMERIC NUMBER\n];\n\\phpFastCache\\CacheManager::setDefaultConfig($cacheConfig);\n```\n. :)\nThe documentation you followed probably refers to a very old version (maybe v4) which is completely different from the v5 and even more, the v6.\nDon't hesitate to check the Wiki and the migrations guides, they were made specifically to help people to migrate/integrate quietly.\nCheers,\nGeorges. Hello,\nDid you took the time to read the PSR-6 documentation ?\nCacheItemPoolInterface::getItems()\n\n* @return array|\\Traversable\n  *   A traversable collection of Cache Items keyed by the cache keys of\n  *   each item. A Cache item will be returned for each key, even if that\n  *   key is not found. However, if no keys are specified then an empty\n  *   traversable MUST be returned instead.\n\nCheers,\nGeorges\n. Tags are exclusive to Phpfastcache it's handled by ExtendedCacheItemPoolInterface.\nSo ATM the lib is working well. I highly encourage you to use a true IDE and not a simple text editor.\nAn IDE (such as Phpstorm) will highlight your code type hints,  or highlight you what's a method is supposed to return, etc.. The question is actually solved, it's just that I don't want to get a whole stack of dead tickets like many projects has today. It's simply about organization since I'm almost alone to handle the issues actually.\n. Tags documentation is listed here:\nhttps://github.com/PHPSocialNetwork/phpfastcache#itempool-api-extendedcacheitempoolinterface\nYou maybe interested by\ngetItemsByTags(array $tagNames) Returns items by one of multiple tag names\nor\ngetItemsByTagsAll($tagName) Returns items by all of multiple tag names\n. Hello,\nPlease keep the PR template next time, thanks :)\nYou are using Apcu on php7 right ?\nIs it working well ?\nI'm asking you that because I was unable to test it after php 5.6.\nCheers,\nGeorges.\n. Bump @afdaniele :). Okay I didn't known that they have ported Apcu extension to php7.\nGood to know I'll update the readme asap.\nThanks for your contribution,\nCheers,\nGeorges. FYI 7.0.2 has been released :). It's for my concern only :). Hello,\nThe tags stay as long as the cache item is not expired.\nYou can see that behavior you the /tests directory.\nCheers,\nGeorges. They're attached again to their items.\nI'll try to draw you something when coming home.. To answer to your question about tags behavior, here's is a (simplified) schema of how it's working:\n\n\nEach tag is in fact a private (not directly accessible) tag cache item by itself that reference each real cache item (as a an array of cache keys) that make use it.\nEach private tag cache item that represent a tag has an expiration date of the biggest cache item TTL that it contains.\nEach cache item contains a list (as an array) of the used tags.\nEach cache item removed will be also removed of the index of the private tag cache item\nIf the private tag cache item reference no more valid cache item it will also be removed to prevent dangerous memory leak in cache backend.\n\n\n\nFinally, isHit() call is about race condition because it does not return the whole data that will be compared later against empty or isset.\nHope I answered your questions.\n. Hello,\nAllow me to give you some feedback about your code:\n```php\n    public function isCached($key){\n  $CachedString = $this->InstanceCache->getItem($key);\n\n  return !is_null($CachedString->get()) ? true : false;\n\n}\n\n``\nYou should make use ofisHit()here to improve the performance instead of testingget()` against null.\n```php\n    public function get($key){\n  $CachedString = $this->InstanceCache->getItem($key);\n\n  $data = $CachedString->get();\n\n  return $data;\n\n}\n\n```\nHere too, you can improve the performance by avoiding to use a temporary and redundant variable.\nJust return straightly the cache data:\nphp\n    public function get($key){\n      return $this->InstanceCache\n                         ->getItem($key)\n                         ->get();\n    }\nThen, your code looks like that you want a simpler way to get your cache implementation.\nWhy don't you take a look to the Psr16 adapter instead ? This one was made for this exact purpose and is standardized by the FIG, enjoy it :)\nFinally, I'm unable to find out your code mistake, you may have passed wrong argument to your class ?\n. You really should not make use of GLOBALS variable this is a very bad bad practice :/\nI don't get where's your issue, why don't you create a singleton ?. You're welcome :). Hello,\nAt this moment the only package manager we support is packagist.\nNo additional package manager is planned at this time.\nBeing alone actually to maintain this library I won't add more third dependency to manage.\nCheers,\nGeorges.L. Hi,\nCan you please reformat the message using the predefined template please ?\nAlso please be more specific than \"you cannot use decimals/floats as tags\"\nThanks.. This is not a bug since tags are built internally as cache items, and cache item keys MUST be a valid string (as per psr6). And for consistency purposes tags must be single-typed (string).\nI highly recommend you to cast your tag before passing them to your cache item.. Hello,\nFirst, I think I get what happened:\nYou had a Couchbase\\Exception thrown, but unfortunately you may not setup an exception handler, so php finally ended up dying miserably.\nHowever the fact that you not managed to catch the exception manually looks weird to me.\nCan you show me how you placed your try/catch block ?\nCheers,\nGeorges\n. > I think I end up in a infinite loop in this case, so that might be the issue as well. I don't try/catch this Couchbase Exception in place but in my bootstrap of Zend Framework which catches all uncaught exceptions.\nYou may call your cache in your exception handler, this is why you're getting an infinite loop.\nI suggestion you to catch \\Exception when you call the CacheManager to perform a better debug.\n\n(btw are you in for an idea about a feature request that can return items that will be valid in the \"future\" to be seen as hit ?)\n\nNope, the border between a cache and and key-value backend is very tight and I don't want to Phpfastcache to be used as a KV or DB-like library. A cache by definition is something we store immediately for a short to middleamount of time in order to avoid database/webservice wasted time in renegotiation.. Hello @Yamakasi,\nI\u2019m closing this issue for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the issue / add comment / clarify \u2026).\nRegards,\nGeorges.L. The exception can be caused mostly by an invalid credential/hostname. You may have also a firewall blocking php to communicate with couchbase on a certain port. Anyway phpfastcache should not catch this kind of exception since it's probably a misconfiguration exception rather than an unavailable php component.\n. Hello,\nSetup securityKey configuration.\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%CB%96%5D-Configuration-Options#file-based-drivers-options-\nCheers,\nGeorges\n. Hello,\nBecause it's how it supposed to works ?\nIt's part of Psr6 implementation.\nBut be careful because your code:\n$visit_data = $visit_item->set($visit_data)->addTag('visits')->expiresAfter(0);\n... does actually expires your item immediately...\nCheers,\nGeorges\n. As specified in PSR6 documentation:\n\nCalling Libraries MUST NOT instantiate Item objects themselves. They may only\nbe requested from a Pool object via the getItem() method. Calling Libraries\nSHOULD NOT assume that an Item created by one Implementing Library is\ncompatible with a Pool from another Implementing Library.\n\nYou have to call getItem because this is how it is !\nIn my opinion, you may make a misuse of the cache library by the way you describe it.\nAnd you're wrong: The TTL 0 will expires the cache immediately, but I can't blame you, this behavior is directly inherited from memcache behavior and people don't considerate the fact that, by definition, a cache is meant to be temporary.\nBy what's you describing (using the lib as a queue manager), you may want to use RabbitMQ instead ? Which would be more appropriated for you.\n. > I tested it with Redis adapter and this works as i described above. I don't know it's a bug or feature :) Items not expired already more than 2 hours.\nDon't rely on this behavior, this is effectively a bug and will be fixed asap.\n\nI know about RabbitMQ and another queue packages, but in my current project it is a overhead... I want to store in redis some data and get this from another script and... it's all! I not need more software on my server (because this may fall and slow system).\n\nThis is however the main job of RabbitMQ ?\n\nCan you give me advice how save item in redis without checking for existence? Maybe I need a custom adapter?\n\nI'm not sure that you are understand the concept of cache by itself ????? A cache by definition will try to fetch data and serve them to you if they exists (HIT). But if not they return you an empty cache item (MISS).\nThis is how it work, and you should not use the cache library for that behavior. You may need to setup a standard database batch using MariaDB (or something else) and work in a database context (SQL or NoSQL). But not with a cache system which should not be used as a key-value backend for queuing tasks or messages. Use Symfony Messenger in that case, it's done for that specific case. \n. I can't give you feedback on your code because I don't know you environment, your context, your app etc.\nAnd I have enough job to do with pfc.\n\nPS: Existing solutions for working with queues do not suit me. They are monstrous and uncomfortable. I also need a minimum of functions just to quickly save data to the redis, and then in the background of transferring them to the database.\n\nhttps://github.com/symfony/messenger\nSymfony Messenger weights less than 100ko when used in a prod environment. And it's utility fits perfectly with your needs.\nPS: I'm closing this issue since this is not an active issue but a question about a lib integration :). Hello,\nIs this that hard to keep the issue template so I can see the library version, the phone version etc ?\nThanks.. Hello,\nDid you rood the migration guide ?\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/master/docs/migration/MigratingFromV6ToV7.md#configuration-option-type\nMhhh \ud83e\udd14 ....\nCheers,\nGeorges\n. Duplicate of #612. Hello,\nDid you rood the migration guide ?\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/master/docs/migration/MigratingFromV6ToV7.md#configuration-option-type\nMhhh \ud83e\udd14 ....\nCheers,\nGeorges\n. Duplicate of #612. Like I said, read the doc carefully....\n\nFor non-global option you MUST use the specific Config object provided for each drivers\n\n```php\n// The recommanded way is to use an alias to not confuse yourself \nuse Phpfastcache\\Drivers\\Files\\Config as FilesConfig;\n$config = new FilesConfig();\n$config->setPath('/an/absolute/path');\n$config->setSecureFileManipulation(true);\n$cacheInstace = CacheManager::getInstance('Files', $config);\n// This also works well:\n$cacheInstace = CacheManager::getInstance('Files', new FilesConfig([\n  'path' => '/an/absolute/path']\n));\n```\nAdapt the code for Redis.... The tests passes, so it works:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/master/tests/RedisExpireTtl0.test.php\nYou just don't follow the instructions, that's it :)\nuse Phpfastcache\\Drivers\\Redis\\Config as RedisConfig;\n. It's not like there's an example provided....\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/master/docs/examples/redis.php. Yes, the options your specified belong to the Redis Config, not the base config class :). Hello, what usage for ? Is that some kind of \"tagging\" ?. Store or cache it ? What do you expect with \"hget\" specifically ? Redis driver alredy support CRUD operations ?!. I know that, but why can't you use actual Phpfastcache's features to do that ?. https://github.com/PHPSocialNetwork/phpfastcache#item-api-extendedcacheiteminterface\nThere's get/set/delete operations according the PSR6/16 specifications.\n. Hello @WuJiY,\nI\u2019m closing this issue for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the issue / add comment / clarify \u2026).\nRegards,\nGeorges.L. Hello,\nI would say \"test then adapt\", I never used Amazon services so I can't tell you.\nDoes AWS offers Redis service ? If yes it would be a great idea to use it instead of disk-based drivers.\nCheers,\nGeorges. Can't you write on the disk regardless of the disk format ? I mean it's high level, so the OS should handle the rest, maybe you're facing a chmod/chown issue ?. How the hell do you ran out of disk space ? How much data are you storing in cache ?\nCan't you use another driver within the list available here ?\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki#supported-drivers-at-this-day-\n. Hello dertin,\nI\u2019m closing this issue for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the issue / add comment / clarify \u2026).\nRegards,\nGeorges.L. Hello,\nJust store the instance statically and the issue will goes away. Or I may not fully understood your issue since your English looks limited (no offense).. Like I said previously, just store the instance statically and the issue will goes away.\nBy design you're not supposed to re-instantiate the poll with the same config multiple times.. This is because the library is psr6 compliant:\nhttps://www.php-fig.org/psr/psr-6/\nPlease read the documentation and readme.\nOn Tue, Dec 11, 2018, 4:52 AM Yamakasi <notifications@github.com wrote:\n\nAlso, what I don't get is that when I call an instance of my Cachehandler\nthe ->get() function is not avaiable anymore but->getItem() is.\nThis confused me because when initiating my class I can use the simple\n->get(), ->set() functions.\n\u2014\nYou are receiving this because you were assigned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/659#issuecomment-446063405,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZyQukCcrFOtpAmuac-oGfVRnUgJlks5u3ywJgaJpZM4ZHofG\n.\n. Like I said ,previously, you are wrongly using Phpfastcache, do not instantiate same driver twice or more, and actually tests are greens.\n\nSo please read the docs very closely. You are the only one getting troubles with psr-6 functioning.. What ? I'm not sure what you're trying to do ??. But what get() are you talking about ? Which interface ?. There's no loop on get as per psr6:\nhttps://www.php-fig.org/psr/psr-6/\nPlease read the documentation and readme.. > I have some sort of same class you have but every time, even when I initiate the class as Instance it complains about the driver loaded too often.\nYou're just doing it wrong, do not instantiate the same driver with the same config multiple time in a script life. Store it statically, or assign an ID to this instance and delete it when needed.\nExemple here:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/master/tests/CacheInstanceId.test.php\n. Hello,\nWhy would you do that ?\nThis is not how it's supposed to work:\n- Build pool instance using CacheManager\n- Get Cache item from pool using psr6 interfaces.\nMore informations here:\nhttps://www.php-fig.org/psr/psr-6/\nCheers,\nGeorges. Hello @kbhagchandani,\nI\u2019m closing this issue for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the issue / add comment / clarify \u2026).\nRegards,\nGeorges.L. Hello,\nThis should help you:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/master/docs/migration/MigratingFromV6ToV7.md\nRegards,\nGeorges.. Hello,\nPlease replace:\nphp\n$this->instance = $this->instance ?: new Client($this->buildConnectionURI($databaseName), ['connectTimeoutMS' => $timeout]);\nby\nphp\n$this->instance = $this->instance ?: new Client($this->buildConnectionURI($databaseName), ['connectTimeoutMS' => $timeout], $this->getConfig()->getOptions());\nThen pass your Mongodb options to the \"options\" config name.\nTell me if it work.\nCheers,\nGeorges. Fixed, thanks you for the PR :). Hello,\nNot now (holidays etc), and I have a couple of thing to prepare in order to release a new version (changelog, tag, etc) that require a bunch of time that I don't have during Christmas holidays. I'll push a new release around first week of 2019, meanwhile please use \"dev-master\", thanks :). Rofl, can't sleep while my kittens are ruining the couch with theirs claws, I'm gonna release that tag for you now because as long my ass is on the couch, the longer it'll stay alive.\nMerry Christmas !\nEdit:\nSanta Claus just dropped something a little bit earlier than expected.... What a great PR, looks good, thanks you :). Poke #663 this one's for you !. Hello,\nThis error is not \"catchable\" since it's an issue of libcouchbase leading to an fcgi error therefore it's too low level to be catch in the php-level.\nCheers,\nGeorges.. Actually, whatever the driver, Phpfastcache only checks for extension/library/dependency availability.\nI took the decision no to catch connection timeout/network/3rd party issues for many reasons:\n\nIt's out of Phpfastcache's scope technically & theoretically\nI don't want to PFC becomes a labyrinthine system by catching everything that throw something\nMurphy's law:  \"Anything that can go wrong will go wrong\" meaning if something is wrongly configured or potentially unstable on the server, expect it to fail, not to be \"handled by PFC\".\nIf an error like that occurs, you should not walks away from this and should take it seriously: The script should ends or initiate dying procedures and your intervention is required.\n\nIn summary: I won't fix that, not because I don't want to, but because I'd rather spend time improving features and code quality than spending time adding fallback/try-catch everywhere to \"hide\" hideous bugs from 3rd party drivers.\nHave a good night !\n. Indeed, they are useless, thanks you !. Thanks for your contribution !. Thanks for your contribution :). Also you can make me a PR on v5/v6 if you want :). Hello,\nUse separate database index ?\nCheers,\nGeorge's\nOn Mon, Feb 4, 2019, 8:18 AM nikmauro <notifications@github.com wrote:\n\nMy question\nI'm using phpfastcache with multiple projects on the same server.\nI've noticed that Redis Cache is the same instance for all those projects\n, cache tags are getting overwritten.\nAny ideas? (besides using separate servers)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/672, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZ0BDn48a4ItcG3rg38dUUsdwbRYBks5vJ96tgaJpZM4agqVD\n.\n. Then use at least a different index for each sites.\nIt's not a bug since it's the \"cache\" behavior that works as is.\n\nIf you want to avoid overwrite side-effect, then use a distinct database index. \nAlso using shared Redis instance for multiple sites is more dangerous than \"practical\".. The lib currently allows you to select a custom DB Index, why not making use of it.\nI don't get where's issue since it's an implementation issue, not a bug ?. Hello,\nNo, because this method can not be interfaced on all backends.\nThis is specific to some drivers only, so no, sorry,\nCheers,\n. Hello @nikmauro,\nI\u2019m closing this issue for now because of (inactivity / outdated code / \u2026).\nYou can always reopen it though! :) \nPlease (update the issue / add comment / clarify \u2026).\nRegards,\nGeorges.L. Hello,\nThe config \"securityKey\" does not belong to \"Phpfastcache\\Config\\ConfigurationOption\"....\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/master/lib/Phpfastcache/Config/ConfigurationOption.php\nPlease read carefully the migration guide:\nhttps://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV6%CB%96%5D-Migrating-your-code-to-the-V7#configuration-option-type\nCheers,\nGeorges. Hello, nope no idea.\nIt's up to you to find the host & port that allows memcached driver to connect to.\nCheers,\nGeorges. Phpfastcache does use Memcached:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/f50545ab2e2ffd6d1516738f2213fabe63ba6517/lib/Phpfastcache/Drivers/Memcached/Driver.php#L69\nMemcacahed is also fully tested:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/master/tests/MemcachedAlternativeConfigurationSynax.test.php\nSo you've probably misconfigured the driver :/. The host and port are the default memcached ones, but if your memcached server does not listen on that host/port combination it's not the Pfc's fault then :). What can I say ? The tests passes :/\nFeel free to debug this method:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/f50545ab2e2ffd6d1516738f2213fabe63ba6517/lib/Phpfastcache/Drivers/Memcached/Driver.php#L69\nHave a look at the config file too:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/master/lib/Phpfastcache/Drivers/Memcached/Config.php\nAnd tells me if something can be improved, but actually the tests passes and my local vagrant box is connecting on a custom port too\n. Can you try with $mc->addServer($ip, $port); instead of setHost() ?. No I mean using phpfastcache config...\nOn Sat, Mar 2, 2019, 5:14 AM zkwbbr notifications@github.com wrote:\n\nYou mean in plain PHP memcached? Yes that's what I'm doing in my example,\nI don't think there's a setHost() method.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/675#issuecomment-468882263,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABRTZwQmWhqpWdCZPGKho5chEm6y2_RFks5vSfqSgaJpZM4bOcim\n.\n. Are you using an IDE or a text-plain editor ?\nIf so I can understand why you haven't notice those method in rivers\\Memcached\\Config(). Sorry I mean setServers(). The memcached backend returned a string which is not expected at all :/. Phpfastcache stores values in a certain way and expected to retrieve them in the same way.. Are you sure that you've not set data previously outside of phpfastcache api ?. It still bugs me why setHost() and setPort does not works on you. I have to dig it. I think I know why:\n\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/f50545ab2e2ffd6d1516738f2213fabe63ba6517/lib/Phpfastcache/Drivers/Memcached/Driver.php#L75\nI use getHost() and getPort() if $servers is empty.\nThis cannot work since it's already pre-filled here:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/f50545ab2e2ffd6d1516738f2213fabe63ba6517/lib/Phpfastcache/Drivers/Memcached/Config.php#L26. This can be confirmed by testing that:\nReplace your old code:\nphp\n$conf = new Drivers\\Memcached\\Config;\n$conf->setHost($ip);\n$conf->setPort($port);\nwith that:\nphp\n$conf = new Drivers\\Memcached\\Config;\n$conf->serServers([]);\n$conf->setHost($ip);\n$conf->setPort($port);\nTell me if it's working. Mhhh okay, got it, I'll push a fix later, my tests are using setServers() so I was confused why it would not work for you. Sorry for being a little rude :). I'm gonna push a new release by the end of week, thanks !. Have fun :)\nhttps://github.com/PHPSocialNetwork/phpfastcache/releases/tag/7.0.5. Yeah because these keys are still required, even if you set them to null ;). It's not about Memcached by itself, but about the config validation of PFC.\nIf you just use one server use setHost() and setPort() which does not require SASL specifications.\n. Bloody hell, finally !. Closing tag are not recommended at all, it can leads to \"ghost line break\" or header/buffer problem.\nThat's ok for this sample, but don't keep this habit ;)\n. You need to update the USE here, wrong item name used :)\n. Here too\n. And here :)\n. The mongo-php-library does requires a composer require or it's a pecl's extension ?\n. If there is a composer dependence please add it :)\n. This function seems to be available since V8.\nCan you add a condition if the function does not exists ?\nThanks you :)\n. Can you specify that the driver does not currently provides this kind of information ?\nThanks you :)\n. Exacxtly, Zenddisk has no statistic, so can you specify it in setInfo() please ?\n. Like Scrutinizer said:\nI think that you made a mistake here: The property $this->namespaces does not exists, you may want to use $this->itemInstances instead ?\n. Can you please add the @property annotation on the class ?\nThis has been added to few other drivers, you can take a look.. Please add these alphabetically ordered, thanks :). Please force the namespace using \"\\array_reduce\" to improve opcache efficiency :). The same applies here for core function namespaces. Add phpDoc annotation \"@see\" before the link, thanks !. ",
    "Jakobud": "Ah okay thanks!  The cache.storage folder is what I was looking for.  Specifically I was wanting to manually delete the cache file/folder at the command line or via SFTP.  Thanks\n. Hmmm where is the cache.storage supposed to be?  I don't see it at the same location as phpfastcache.php... My setup is:\nrequire_once('phpfastcache/phpfastcache.php');\nphpFastCache::setup('storage','auto');\n$cache = phpFastCache();\nAm I doing something wrong?  Where else would the cache file be?\n. ",
    "fajarfariyanton": "how to save all cache to one folder , and not create one folder to one cache\n. yes i'm use same domain. and same PATH, my PATH is correct. but phpfastcache not read from old sqlite.\n. ",
    "lichunqiang": "Hi, @khoaofgod \nIs there a plan to full fill composer support?\n. You can post the issue to there,\nthe author stoped support issues on GitHub.\n. https://github.com/khoaofgod/phpfastcache/blob/final/composer.json#L20\nIt seems wrong path there!\n. oh... This is the author's business, but it's a temporary solution :+1: \n. ",
    "jaroslavas": "Until author will add composer support, you can make composer download source from GitHub (but it will copy both versions - 1 and 2). Here are some parts from my composer.json:\n\"repositories\": [{\n        \"type\": \"package\",\n        \"package\": {\n            \"name\": \"khoaofgod/phpfastcache\",\n            \"version\": \"master\",\n            \"source\": {\n                \"url\": \"https://github.com/khoaofgod/phpfastcache.git\",\n                \"type\": \"git\",\n                \"reference\": \"origin/Stable-Version-1.x\"\n            }\n        }\n    }],\n\"require\": {\n        \"khoaofgod/phpfastcache\": \"dev-master\"\n    }\n. ",
    "ndzou": "You can put in this line in composer.json's require section\n\"phpfastcache/phpfastcache\": \"dev-Stable-Version-1.x\",\nBut all it does is download the file.  There's no PSR-0 class autoloading which is the real value of using Compsoer in the first place.  I would like to see class autoloading implemented for this project.\n. The user cache portion of APC now continues in APCu, Fedora/EPEL package php-pecl-apcu, if you install this you can keep using the apc driver.\n. Same problem here, putting \n\"phpfastcache/phpfastcache\": \"dev-Release_2.*\"\nin the composer.json does not work either.\nI do see the package listed on packgest.org, perhaps there's problem with the source path?\n. ",
    "xpose2000": "I am just getting my feet wet with Redis.  Unfortunately I can't be of much help right now... though incorporating https://github.com/nrk/predis might be an easy way out?  That seems to be the most active repo for a PHP redis class.\n. ",
    "laurent22": "I believe this has been fixed in #44 \n. @khoaofgod, I have updated the pull request with tests for the search feature. I took the opportunity to do it with PHPUnit so if there are more tests they can be added easily (in \"phpfastcache_v2.1_release/tests\"). To run them, simply run phpunit . from the command line, from the \"tests\" folder.\nAlso since currently only the files driver is supported, I have made the search method throws an exception if the driver doesn't support the method. That will allow us to progressively add support for it for all the drivers.\nAnyway, if you have any comment or suggestion, feel free to let me know.\n. ",
    "vijinho": "thanks!\n. ",
    "nabab": "Hi, good work, but why the author doesn't you pull this? That would be very useful...\n. Hi there, thanks, but did you have a chance to have a look?\nCheers!\n. Apologies for this: although all the right PHP variables showed up about APC, it wasn't working because the ini file for the module was called twice. Your app did good by selecting the default engine.\n. ",
    "noneym": "I'm wondering the same thing\n. ",
    "alexboss": "Dear phpFastCache team,\nI also encountered the same problem but I'm not able to provide steps to reproduce as the problems happens randomly.\nFatal error: Uncaught exception 'PDOException' with message 'SQLSTATE[HY000]: General error: 5 database is locked' in /the/path/to/phpfastcache_2.1.0/drivers/sqlite.php on line 272\n( ! ) PDOException: SQLSTATE[HY000]: General error: 5 database is locked in /the/path/to/phpfastcache_2.1.0/drivers/sqlite.php on line 272\nCall Stack\n#  Time    Memory  Function    Location\n1  0.0001  266328  {main}( )   .../js.php:0\n2  0.0067  901432  webtools\\app\\smartloader\\execute_js( )  .../js.php:18\n3  0.0077  1003256 phpFastCache->get( )    .../smartloader.php:263\n4  0.0077  1003624 phpfastcache_sqlite->driver_get( )  .../phpfastcache.php:98\n5  0.0084  1019192 phpfastcache_sqlite->deleteRow( )   .../sqlite.php:244\n6  0.0086  1020480 execute ( ) .../sqlite.php:272\nI will try to upgrade the library to see if it fixes the situation.\nBest regards,\nAlexandre 8)\n. That's excellent news, thank you ! You can be sure that we'll be among the first users! Alexandre 8)\n. ",
    "kmvan": "Thank you your project.\nDownloading...\n. ",
    "matthewbaggett": "+1 for wanting redis\n- Matthew Baggett\nAdd me on Linked In http://uk.linkedin.com/pub/matthew-baggett/1b/8a2/378 or\nTwitter http://twitter.com/matthewbaggett!\nSkype: matthewbaggett\nOr call me: 07541 059 344\nOn Thu, Sep 18, 2014 at 5:58 AM, Khoa Bui notifications@github.com wrote:\n\nOh, sure.\nI will implement Redis this month.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/khoaofgod/phpfastcache/issues/55#issuecomment-55995070\n.\n. \n",
    "oitsuki": "Where I can find IO Class for IP Location & phpFastCache version 2.5 because I only see the  2.1 on github.\nTk\n. ",
    "Kepro": "maybe be better way use CURL and not file_get_contents... and set CURL timeout to maybe 5 seconds? \nif you have db, maybe be better way to use \nhttp://stackoverflow.com/a/23408581/2739776\n. ",
    "Arvey18": "Hi!\nIs codehelper.io still working. what is the new url for the API? please share\n. ",
    "spud": "[Edit: 22 July 2015 to fix inconsistency in variable names, for clarity]\nI was trying to figure out the same problem...\nI cache individual pages, for example, but I also cache \"chunks\" of data based on what module they belong to. And sometimes I'd like to clear the cache of any data that belongs to a certain module.\nSome individual caches allow you to \"group\" cache items like this, but for flexibility with a generic caching system, you have to be a bit more creative.\nIn my case, I kept a second cache, whose key was a consistent module identifier (e.g. \"cache.twitter\"), and each value in the cache corresponded to another cache key.\nSo I would, for example,\n// Save a twitter module value:\ntwitter.myvalue1 = \"foo\";\n// Save the key name in another array that holds all the \"twitter\" module cache keys\ncache.twitter = \"twitter.myvalue1\";\n// ..and repeat, adding the new key to the existing array of \"twitter\" keys\ntwitter.myvalue2 = \"bar\";\ncache.twitter = \"twitter.myvalue1,twitter.myvalue2\"; // this would probably be an array, not a list\n// ..and repeat, adding the new key to the existing array of \"twitter\" keys\ntwitter.myvalue3 = \"baz\";\ncache.twitter = \"twitter.myvalue1,twitter.myvalue2,twitter.myvalue3\"\nNow, when you want to clear the entire \"twitter\" cache, you do this (in pseudo-code)\n$keys = $Cache->get(\"cache.twitter\");\nforeach($keys as $key) {\n    $Cache->delete($key);\n}\n// And delete the cache item that held all the keys\n$Cache->delete(\"cache.twitter\");\nIf you write simple functions to encapsulate this functionality, it's pretty flexible and easy to integrate.\nspud.\nOn Oct 13, 2014, at 2:50 PM, tylercollier wrote:\n\nI'd like to clear a section of my cache. Say for example that I store data by prefixing it with a namespace. Perhaps I cache some twitter data, facebook data, etc. I might store them astwitter.myvalue1, twitter.myvalue2, and facebook.myvalue1, facebook.myvalue2. How could I delete the cache entries for twitter? And I don't know all the names of the values. It's not necessary myvalue1/2/3/etc, I just know it starts with twitter.\n. \n",
    "rajneeshojha": "were you able to implement this group cache?\n. can you please share the code?\u00a0Regards\nRajneesh Ojha \nOn Thursday, July 23, 2015 2:51 AM, Tyler Collier <notifications@github.com> wrote:\n@rajneeshojha: yes. I did it just like spud suggested. It was very simple. It's in my own code, not part of the phpfastcache library, so I did not do a pull request or anything.\u2014\nReply to this email directly or view it on GitHub. \n. ",
    "WebCustoms": "wonderful that you have the implemented as soon!!\n. ",
    "n-i-m-a": "I'm doing some final clean-up and tests with it. will send a pull request when done but would be best if someone else would also test it out before merging.\n. I'll keep you updated on that + have sent an email to discuss some matters on handling the dependencies for redis.\nWill close this issue as it has been solved already.\n. ",
    "nicocasel": "Thanks for posting this issue, we have exactly the same demand.\n. ",
    "dd-main": "How it works can be found in Zend\nExample of logic:\n``` php\n$user_id = 123;\n// user page - transactions\n$transactions_html = \"....\";\n$cache->set(\n    'pages-transactions-user_'.$user_id,\n    $transactions_html,\n    600,\n    array( // array of tags\n         'pages',\n         'transactions',\n         'user_'.$user_id,\n    )\n);\n// user page - profile\n$profile_html  = \"....\";\n$cache->set(\n    'pages-profiles-user_'.$user_id,\n    $profile_html,\n    600,\n    array( // array of tags\n         'pages',\n         'profiles',\n         'user_'.$user_id,\n    )\n);\n// deleting cache of transaction page for user\n// where cache have tag1 && tag2 (or may tag2 || tag2 ...)\n$cache->deleteByTags(array('pages', 'transactions', 'user_'.$user_id));\n// deleting cache of all pages for user\n$cache->deleteByTags(array('pages', 'user_'.$user_id));\n// deleting cache of all transaction pages for all users\n$cache->deleteByTags(array('pages', 'transactions'));\n// deleting cache of all pages for all users\n$cache->deleteByTags(array('pages'));\n```\n. > For the is_dir and file_exists , same perform, nothing is faster or slower on these 2 func.\nyes of course. I was thinking about something else. but it does not matter\n. ",
    "maxisoft-git": "This functionality will be added?\n. Most likely this will not be functional\n. stunned, it happened. Wow. You are best\n. ",
    "pefstra": "Great work! Any news about tags?\n. I know you're busy and sorry for my insistence. Are you gonna launch soon this new version with tags or it would be better to look for something else similar? I am in the middle of a project and I am waiting for this...\n. ",
    "reno1979": "Ok I understand, the xcache documents are very poor indeed.\nThank you anyway.\n. Thank you, can't wait.\n. Thank you, that's fast.\n. Yeah! \nSearch and tags! \n. Any updates about your progress? \n. Priorities... \n:p \n. Muaaah! :)\n. Your fix should do the trick, I'll hard-fix it for now. :) \nThank you,\n. fix works, but for now I'll explicitly set path in config to prevent te same errors on composer update etc\n. Ok I will try\n. Ok this can be closed, just read the explanation why the use of array_key_exist and it is a very good reason. \n. Good explanation, \nI do agree with this. I guess because I am stuck with 5.3 it just came to my attention :) \nWhere are hoping on a migration to > 5.5 but this can take a while :(\n. Hello Georges, \n;) I can understand that the sleek array [ ] is not the only reason to switch to 5.5\nI also agree that users should be encouraged to migrate as soon as possible. \nIn my current projects I still have very old parts of code and a migration tot 5.6 or higher is not yet available for each of the projects.\nBecause of the completely rewritten code in v5 (and that I rather use the new products), the interfaces we have build with the phpfastcacheengine must also be able to communicate with v4. \nThis way we can support php 5.3 using v4 of phpfastcache.  \nIf v5 did not use a lot of new techniques, I was considering a 'hackish' (how do you spell that) solution by rewriting some code in v5. \nOf course where are trying to get the upgrade to > 5.6 done as soon of possible :) \n. ",
    "antoniocambados": "I have just stumbled upon this and had to manually solve it this messy way:\n``` php\n// autoload_files.php @generated by Composer\n$vendorDir = dirname(dirname(FILE));\n$baseDir = dirname($vendorDir);\nreturn array(\n    $vendorDir . '/phpfastcache/phpfastcache/phpfastcache.php',\n);\n```\nJust in case you need to use it right away! ;-)\n. ",
    "G-9999": "Yeah, what happened to 3.x ??\n. ",
    "epsi1on": "Hi.\nthis is my code where it throws the exception:\n$cache = phpFastCache(\"memcached\"); // <<<<<< this throws the exception\n$results = $cache->get('my_key');\nHow can i find out memcached works fine?\nalso about last question, actually i do not know what do you mean. I'm not a php guy, i guess i'm just using php!\nthank you so much \n. with changing memcached with memcache it works but gives a notice:\nis everything ok?\nNotice:  Memcache::get() [memcache.get]: Server 127.0.0.1 (tcp 11211) failed with: Connection refused (111) in /home//public_html/phpfastcache/phpfastcache/2.4.2/drivers/memcache.php on line 82\n. ",
    "ZiZuu-store": "Replace memcached with \"memcache\"\nw/o d\nIl gioved\u00ec 19 febbraio 2015, epsi1on notifications@github.com ha scritto:\n\nHi.\nthis is my code where it throws the exception:\n$cache = phpFastCache(\"memcached\"); // <<<<<< this throws the exception\n$results = $cache->get('my_key');\nHow can i find out memcached works fine?\nalso about last question, actually i do not know what do you mean. I'm not\na php guy, i guess i'm just using php!\nthank you so much\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/khoaofgod/phpfastcache/issues/81#issuecomment-75128244\n.\n\n\nCordialmente,\nMassimo -- the ZiZuu staff\n. No it's saying that the memcached process is refusing connection on its\nstandard port (11211)\nCheck that memcached is running and accepting connection on localhost\nIl gioved\u00ec 19 febbraio 2015, epsi1on notifications@github.com ha scritto:\n\nwith changing memcached with memcache it works but gives a notice:\nis everything ok?\nNotice: Memcache::get() [memcache.get]: Server 127.0.0.1 (tcp 11211)\nfailed with: Connection refused (111) in\n/home//public_html/phpfastcache/phpfastcache/2.4.2/drivers/memcache.php\non line 82\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/khoaofgod/phpfastcache/issues/81#issuecomment-75129604\n.\n\n\nCordialmente,\nMassimo -- the ZiZuu staff\n. :+1:\n. ",
    "MaxLuan": "@khoaofgod Thanks for the quick response and happy new year. Nice work by the way, the system rocks. \n. ",
    "clashboy": "I can confirm the this bug.\n. ",
    "gcleaves": "same problem\n. Files.  Linux OS.  I will try to get you more detailed information....\n. OK, let me see if I can make some time for this.\n. ",
    "ta2edchimp": "Simply tagging the current branch at its respective stage with something that looks like a version should do it, imo.\nAccording to this section in the Composer docs, it should be enough to tag the current branch with 2.4.3 on Feb. 23rd (... or whenever it will be finished :P).\n. Yes, thanks A LOT!\n. ",
    "marzsman": "Great, thx for the quick fix!\n. ",
    "codebucketdev": "Is this feature already implemented? Because I can't find anything like that in the docs and I would like to loop through the last keys stored in cache for statistics.. Thanks for the quick response, works fine!. ",
    "jensschulze": "I know what you want to do there, but have a look at http://php.net/manual/en/function.ltrim.php\nThe second argument is a character mask. That means\nltrim($blah, \"www.\")\nstrips all \"w\" and all \".\" from the left side of $blah. That is not what you want: \"www.workexample.com\" will be \"orkexample.com\" :)\nI admit, you probably don\u2019t need the trim, and the preg_replace is very ugly \u2013\u00a0maybe there is a faster solution.\n. ",
    "koenpunt": "A hint: \nsubstr($_SERVER['HTTP_HOST'], 0, 4) == 'www.'\n. The @ before unlink already silences this warning, so this doubles the overhead.\n. I didn't say it was, but if you think that's the case, why is the @ still in there? \n. Any other error, except for non existing files, will still be silenced.\n. Cookie cache is actually not useful at all. Just set the correct expiry headers on the response and let the browser handle the caching.\n. @sv1gzf have a look at igbinary\n\nIgbinary is a drop in replacement for the standard php serializer. Instead of\ntime and space consuming textual representation, igbinary stores php data\nstructures in a compact binary form. Savings are significant when using\nmemcached or similar memory based storages for serialized data.\nhttp://pecl.php.net/package/igbinary\n. > Even if pecl extension are compiled they're still less efficient that php core functions :)\n\nThis simply isn't true. Compiled C libraries and/or extensions operate at the same level as the php functions. For example, Igbinary serialize/unserialize functions are even faster than the \"core\" php serialize/unserialize functions. The only downside to it is that the serialized data isn't humanly readable anymore.\n. And I don't say this library should depend on it, but I'm just suggesting it to @sv1gzf for his implementation.\n. > just pass the whole object to the driver\nEven though you pass the object, internally all these objects are serialized into something that can be represented in the storage of the driver. \n. @khoaofgod I'm just providing other solutions, instead of just saying no.\nAnd the problem possibly lies here, phpFastCache/Core/DriverInterface.php#L38, what makes @sv1gzf think only strings are supported.\n. >  unless if you use the JSON_PRETTY_PRINT which use significant more disk space\n@Geolim4 significant isn't the right word here, test for example the following:\n$ php -r 'echo json_encode($_SERVER);' > compressed.json\n$ php -r 'echo json_encode($_SERVER, JSON_PRETTY_PRINT);' > pretty.json\n$ stat -f \"%z %N\" *.json\n2023 compressed.json\n2302 pretty.json\nWhich is only 13% difference.\nAnd with compression in the memcache adapter enabled, the difference is less than 3%.\n. This is in no way an improvement, the second condition will now be evaluated even  if the value is null, whereas isset returns false for null-values.\n. ",
    "modGTB": "yes, with config skipSubDir there arent made subdirs in caching dir. This is only on old filesystems necessary. On filesystems like ext3 and reiserFS ther is no performance boost.\nThanks for your work.\n. ",
    "schealex": "never mind. should have thought better about the placement of the time defining variables...\nnow it's:\ndone in 0.024513959884644 seconds\ncached done in 0.001039981842041 seconds\n:)\n. ",
    "juntao": "I had the same issue. And I believe the problem is this line:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Drivers/files.php#L130\nIt will NOT write if the cache file already exists ... (because the last file_exists check)\nAlso, the $written variable should start off \"false\" on this line:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/Drivers/files.php#L124\n. Thanks! I tried the new release and it works flawlessly now.\u00a0\nCheersMichael\nOn Sat, Feb 20, 2016 at 6:59 PM -0800, \"Khoa Bui\" notifications@github.com wrote:\nFixed\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "bfintal": "I just encountered it one time, although haven't encountered it again, so I don't know the reason why the warning appeared. But it shouldn't be too hard to patch against this :)\n. The same error just showed up again. Although a page refresh made it go away. It's really weird and hard to pinpoint.\nI'm using both Memcached and Files. I'm building a caching plugin for WordPress so all drivers would be used.\n. How about this for the fix @ line 61 in phpfastcache/3.0.0/abstract.php:\n$value = isset( $object['value'] ) ? $object['value'] : null;\nreturn isset($option['all_keys']) && $option['all_keys'] ? $object : $value;\n. Thanks\n. The docs need updating then :P\n..or why not just add an if statement in phpfastcache.php? I'm going to use this from my end\nif ( class_exists( 'Redis' ) ) {\n    $this->cacher = phpFastCache( 'redis' );\n} else if ( class_exists( 'Memcache' ) ) {\n    $this->cacher = phpFastCache( 'memcache' );\n} else if ( class_exists( 'Memcached' ) ) {\n    $this->cacher = phpFastCache( 'memcached' );\n} else if ( extension_loaded( 'apc' ) && ini_get( 'apc.enabled' ) ) {\n    $this->cacher = phpFastCache( 'apc' );\n} else if ( function_exists( \"wincache_ucache_set\" ) ) {\n    $this->cacher = phpFastCache( 'wincache' );\n} else if ( function_exists( \"xcache_get\" ) {\n    $this->cacher = phpFastCache( 'xcache' );\n} else {\n    $this->cacher = phpFastCache( 'files' );\n}\nSort of related to #114, but pertains to fallback\n. I'm assuming version 4.0.0 is the current final branch, correct?\n. This is similar to #91 \n. Awesome news, we are in the testing phase for our caching plugin for WordPress called Gambit Cache. We are having problems during our testing, more specifically towards the filesystem caching. Appreciate help on that one.\n. Any updates?\n. CGI / FastCGI\nYup I'm somehow getting internal server errors. This is boggling my mind.\nAs of the moment, I've dropped support for caching stuff that tend to get modified often.. because maybe there's too much IO file activity (which isn't good anyway). So far, there's almost no internal errors. there are sometimes though and those show up as premature end of script headers.\n. Reason for the close? I'd appreciate help on this\n. Nope it's still there, only happens less because I lessened the caching calls. But it's still there sometimes during caching activity.\nThe message regarding premature headers is from the error log. From the browser all you can see is the internal server error notice. No other clues other than that cryptic premature end of script headers.\nEdit Sometimes it's a white screen instead of an internal server error\n. That would be great, we are almost finished testing the plugin and we are aiming for a release this week.\nWhat did you figure the problem is?\n. So we need add a) file locking if that's the case, or to b) just gracefully fail the other write when the file is inaccessible.\n. ",
    "lean-stack": "One big change would be necessary: the PSR treats null as a legitimate value.\nSee comment at the get()-Method in the CacheItemInterface\n\nNote that null is a legitimate cached value, so the isHit() method SHOULD be used to differentiate between \"null value was found\" and \"no value was found.\"\n. \n",
    "barayuda": "Thank you, hope can join to prepare on it :)\n. ",
    "SebastianZ": "I did that now.\nSebastian\n. There is no update on the mentioned page, so why did this get closed?\nSebastian\n. I see. So I'll have a look again when the new wiki is up. Thanks for the fast reply!\nSebastian\n. khoaofgod commented on 11 Feb 2016 \n\nthis one closed because we have plan to make a new wiki next week already.\n\nThat's quite a long \"week\"! \ud83d\ude01 Is it still planned to move away from GitHub? So far I just see https://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV5%CB%96%5D-API:-Available-Methods.\nSebastian. ",
    "mipapo": "Just set an exact path for the cache in your script: https://github.com/khoaofgod/phpfastcache/wiki/5.1-Custom-Path-to-Files\nUsually their will be a folder created with the hostname, which was requested. Your cron is running locally. I think you just calling the directly script and not make an http request?\n. Yep - Same problem here. Havn't found it on the quick way. Has to be a bug since one of the latest releases\n. Suppressing warnings with an @ is not a good programming style... \n. Missing php5-sqlite?\n. ",
    "pesaru": "I figured out what I was doing wrong today. There were two issues. \nWhen you schedule with a CRON job and you have to set BOTH \"path\" AND \"securityKey.\" If you do not set path, it will default to a different working directory. If you do not set security key, the live version of the site will create a folder called \"yoursitenamecom\" but the CRON job will create a folder called \"Default.\"\n. ",
    "ddauto": "Hi, \nDoes the newest version include the SASL auth ready?\nThanks.\n. Hi,\nThanks for quick response.\nYes, I enabled the option in Core/phpFastCache.php public static $config \nand I changed below code also, I can't remove both of \"path\" and \"cache_method\", it will broken the whole php.\nbut it still not works.\nprotected function _tagCaching()\n{\n    return CacheManager::Memcached(\n      array(\n        \"path\" => $this->config[ 'path' ]\n        //\"cache_method\" => 2,\n      )\n    );\n}\n. I seems understand now, is the search function only can search the cache content that \"set\" in the same one request?\nFor example, if a.php set the key=\"abc\", value=\"def\", then b.php search the key \"abc\", it can't be searched, right? even the cache stored in memcached.\nCause If I set the key=\"abc\" in a.php and search this key following the set, it can search the key correctly.\nthanks.\n. Hi, all my environment is sample.\n[a.php]\nphp\nrequire_once $_SERVER['DOCUMENT_ROOT'] . '/include/config_inc.php';\n\n<puse phpFastCache\\CacheManager;\n$key=\"test\";\n$cache = CacheManager::Memcached();\nif (trim($_REQUEST['s'])==\"Y\"){\n    $cache->delete($key);\n    $cache->set($key, \"value1\", 10000);\n}\necho \"isExist=\" . $cache->isExisting($key) . \"\";\n$rtn=$cache->search($key, false);\nvar_dump($rtn);\n?>\n[DriverAbstract.php]\nprotected function _tagCaching()\n{\n    return CacheManager::Memcached(\n        array('127.0.0.1', 11211, 1)\n    );\n}\nNote: if I used return CacheManager::Memcached();  ==> the whole package and php won't work.\n[Test]\nWhen I accessed:\na.php?s=Y  => $rtn has correct search result.\nsoon I accessed:\na.php      => $rtn didn't search the result.\nCause I used server farm so I used a shared memcached server as cache storage, so I am not sure if I use CacheManager::files in _tagCacheing() is suitable.\nThanks again.\n. Hi,\nphp\nrequire_once $_SERVER['DOCUMENT_ROOT'] . '/include/config_inc.php';\n\n<puse phpFastCache\\CacheManager;\n$cache = CacheManager::getInstance();\n$key=\"test\";\n//$cache = CacheManager::Memcached();\n$cache = CacheManager::getInstance();\nif (trim($_REQUEST['s'])==\"Y\"){\n    $cache->delete($key);\n    $cache->set($key, \"value1\", 10000);\n}\necho \"isExist=\" . $cache->isExisting($key) . \"\";\necho \"value=\" . $cache->get($key) . \"\";\n$rtn=$cache->search($key, true);\nvar_dump($rtn);\n?>\nUnfortunately, the result is the same.\nThanks.\n. <?php\nrequire_once $_SERVER['DOCUMENT_ROOT'] . '/include/config_inc.php';\nuse phpFastCache\\CacheManager;\n//$cache = CacheManager::getInstance();\n$key=\"test\";\n//$cache = CacheManager::Memcached();\n$cache = CacheManager::getInstance('Memcached');\nif (trim($_REQUEST['s'])==\"Y\"){\n    $cache->delete($key);\n    $cache->set($key, \"value1\", 10000);\n}\necho \"isExist=\" . $cache->isExisting($key) . \"\";\necho \"value=\" . $cache->get($key) . \"\";\n$rtn=$cache->search($key, true);\nvar_dump($rtn);\n?>\nUnfortunately, the result is the same. ?s=Y then search has result, soon, request without ?s=Y then isExist=1\nvalue=value1\narray(0) { }\nIf it still not works, it's ok, I will give up the search method and use other workaround to solve.\nThanks.\n. <?php\nerror_reporting(-1);\nrequire_once $_SERVER['DOCUMENT_ROOT'] . '/include/config_inc.php';\nuse phpFastCache\\CacheManager;\n$key=\"test\";\n$cache = CacheManager::getInstance('Memcached');\nif (trim($_REQUEST['s'])==\"Y\"){\n$cache->set($key, \"value1\", 10000, array(\"tags\" => array(\"tag1\",\"tag2\",\"tag3\")));\n}\n$list = $cache->getTags(array(\"tag1\"));\nvar_dump($list);\n?>\nStill not work.\ntest.php?s=Y => array(1) { [\"tag1\"]=> array(1) { [\"test\"]=> string(6) \"value1\" } }\ntest.php     => array(1) { [\"tag1\"]=> array(0) { } }\nBut I found that has warning message like:\nNotice: Undefined index: memcache in /var/www/html_2016/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/memcached.php on line 74\nNotice: Undefined index: memcache in /var/www/html_2016/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/memcached.php on line 74\nNotice: Undefined index: memcache in /var/www/html_2016/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/memcached.php on line 74\nI am not sure if it's the root cause?\nThanks.\n. Hi, \nI have time to trace in the codes and I seems found the root cause.\nThe root cause is in:\nDriverAbstract.php     \"getTags\" function\nWhen I marked below line, and search feature and tag feature is ok, I found this issue is because when I use \"search\" or \"getTags\" method second time, it will can't get the result anymore.\n$this->_tagCaching()->set($this->_getTagName($tag), $list, $tmp);\nthis line seems pass the absolute time to the \"set\" function,it seems should use \"period time\" instead.\nHope my understand is right.\nThanks.\n. ",
    "fbonzon": "Would you rather fix the code to honor this config setting, or remove this config option? It makes no sense to keep it if it doesn't work. Only adds confusion.\n. @khoaofgod What do you think here?\n. So, was this config useful? Or is it obsolete in version 4?\n. You can specify a full config array when creating a cache variable. Try something like:\n``` php\nrequire_once '/path/to/phpfastcache.php';\n$base_config = array(\n    'storage'       => '',\n    'default_chmod' => 0755,\n    'htaccess'      => false,\n    'path'          => '',\n    'securityKey'   => 'auto',\n    'memcache' => array(\n        array('127.0.0.1', 11211, 1),\n    ),\n    'redis' => array(\n        'host'      => '127.0.0.1',\n        'port'      => '',\n        'password'  => '',\n        'database'  => '',\n        'timeout'   => ''\n    ),\n    'extensions'    => array(),\n    'fallback'      => 'files',\n);\n$my_config = $base_config;\n$my_config['path'] = '/path/to/cache_1';\n$cache_1 = phpFastCache('sqlite', $my_config);\n$my_config = $base_config;\n$my_config['path'] = '/path/to/cache_2';\n$cache_2 = phpFastCache('sqlite', $my_config);\n```\n. I was able to configure sqlite like this:\nphp\nrequire_once '/path/to/phpfastcache.php';\nphpFastCache::setup('path', '/path/to/phpfastcache');\n$cache = phpFastCache('sqlite');\nOn first two lines, you need to change the paths to your setup:\n- On line 1, it's the root folder of the phpfastcache source code.\n- On line 2, it's the root folder where caching files will be stored. It must be writeable  by the UNIX user that your webserver runs with, and preferably located outside the web root, so it is not directly accessible from the web.\n. Please format, indent, etc. your code nicely in a PHP code block using Markdown, so it's easier to read for others who want to help.\nYes, phpfastcache can help you here. Caching API replies is a typical use case. I would use the sqlite engine, and cache for 24 hours.\n. I think it's just his saying.\n. ",
    "shiroamada": "and for the storage function, seem like once the path is writeable it will not select other.\nif(is_writeable($path)) {\n     $driver = \"files\";\n}\nThe predis also not included in the storage.\n. ",
    "masterbee": "@fbonzon thank you for this very well responded and great example.\n:+1: \n. ",
    "synyalex": "With this handle $ cache-> stats (); Scheduled for example cron, though with a large volume of cache error TIMEOUT\n. I have exceeded the file cache and 1 GB of regular means Clear impossible on a shared hosting there is an overload and usually a timeout.\nI decided to add a feature scheduled cron to the desired period of time is called and clears the cache for a folder in the rotation.\nThe problem has disappeared, the limits in order\nin abstract.php\nfunction rotate($option = array()) {\n        return $this->rotate_clean($option);\n    }\n\nin files.php\n \n```\nfunction rotate_clean($option = array()) {\n    $res = array(\n        \"info\"  =>  \"\",\n        \"size\"  =>  \"\",\n        \"count\" =>  \"\",         \n    );\n    $path = $this->getPath();\n    $total = 0;\n    $removed = 0;\n    $files=glob($path.'/*',GLOB_ONLYDIR);\n    if (!$counter = @file_get_contents($path.\"/counter.txt\")) $counter=0;\n    $counter++; $counters=count($files);\n    if ($counter>=$counters ) $counter=0;\n    @file_put_contents($path.\"/counter.txt\",$counter);\n    $file=$files[$counter]; \n    if($file!=\".\" && $file!=\"..\" && is_dir($file)) { //if?\n\n        $subdir = @opendir($file);\n        if(!$subdir) {\n            throw new Exception(\"Can't read path:\".$path.\"/\".$file,93);\n        }\n\n        while(false !==($f = @readdir($subdir))) {\n            if($f!=\".\" && $f!=\"..\") {\n                $file_path = $file.\"/\".$f;\n                $size = @filesize($file_path);\n                $object = $this->decode($this->readfile($file_path));\n                if($this->isExpired($object)) {\n                    @unlink($file_path);\n                    $removed += $size; \n                }\n                $total += $size;\n            }\n        } \n    } // end if\n\n$res['size'] = $total - $removed;\n   $res['info'] = array(\n            \"Total [bytes]\" => $total,\n            \"Expired and removed [bytes]\" => $removed,\n            \"Current [bytes]\" => $res['size'],\n);\n   $res['count'] = array(\n            \"Total\" => $counters,\n            \"Current position\" => $counter,\n    );\nreturn $res;\n}\n```\n\ncall\n\ninclude_once($_SERVER['DOCUMENT_ROOT'].\"phpfastcache.php\");\n$cache = phpFastCache(); \n$array = $cache->rotate(); \nprint_r($array); \n\n. ",
    "xtix": "thx for help, i hope this will be added to the release.\n. ",
    "darkoromanov": "Thanks, it works now. I was using an old version of phpFastCache so your syntax was not recognized at first, I updated and now it works and I see it correctly creates the database file.\n. ",
    "vincent": "yep, thats the workaround I used.\nI'll try to find some time to make a PR.\nthanks\n. ",
    "Axisar": "i start empty memcache.\nmaking cache this way\n...\n$html = $cache->get($keyword_webpage);\nif($html == null) {\n    ob_start();\n...  script work here ...\n    $html = ob_get_contents();\n    $cache->set($keyword_webpage,$html, $cachetime);\n...\nthen request stats of memcached\n(echo -e 'stats\\nquit'; sleep 1) | telnet localhost 11211\nand see \nSTAT get_hits 0\nSTAT get_misses 2\nbut just one request made by script.\nafter it i just add echo $keyword_webpage;\nand see 2 keys, one with name \"changes\" second with my cached one.\n. ",
    "kirillDanshin": "Please, show your hashing function. It seems, you add time() result to your HF.\n. ",
    "remowashere": "I assume you are using something like;\n$keyword_webpage = md5($_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'].$_SERVER['QUERY_STRING']);\nThere's no need to do this, you can setup both domains to use /tmp/ as caching dir.\n. I had the same issues and fixed it by adding a ping() before loading the Redis driver;\n```\nCacheManager::setDefaultConfig(new ConfigurationOption(['path' => DIR.'/cache']));\n$cache = CacheManager::getInstance('Files');\n// Check if we support Redis AND if the server is running\nif (class_exists('Redis')){\n    $redis = new Redis();\n    try {\n        $redis->connect('3x.xxx.xxx.7', 6379);\n        if ($redis->ping()){\n            $cache = CacheManager::getInstance('redis', new Config([\n                'host' => '3x.xxx.xxx.7',\n                'port' => 6379,\n                'fallback' => 'Files'\n            ]));\n        }\n    }catch (Exception $e) {\n        // Just use the Files driver instead\n        // print_r($e->getMessage());\n    }\n}\n```\nThe cache will now be handled by Redis, if the server is down, it will use the Files option. ",
    "ricardodavidsoares": "No. I'm doing just \"$cache = phpFastCache();\" and then \"$cache->set('xpto', $arr_dados, $this->ttl);\" \"$data = $cache->get('xpto')\".\nI didn't change any default config, but I can see two folder, one for each domain, in /tmp/.\n. Hii,\nI just found my solution here \"http://stackoverflow.com/questions/33805633/how-to-clear-phpfastcache-when-path-set-to-tmp\". Thank you for your time either way.\nGreetings.\n. I downloaded the latest version today and the solution I used doesn't solve the issue anymore.\nNow, when I set the path it appends a \"-\" to it. For example, if I set it to \"XPTO\" the folder created will be \"XPTO-\".\nI don't know why and I'm stuck with this problem. Would appreciate a help. Thank you.\n. Hi,\nI know it wasn't a bug but a feature :)\nWhat I was wondering is if I can't disable that subdirectory creation, because the older project that saves the data doesn't do it that way. So is hard to integrate them. Because, even tho' I define the same path in both, one saves in the folder I set on path while the other searches in a subdirectory it makes on that folder.\n(They're different projects because one was made a while ago, without framework, and the new one is with Yii framework). Hii,\nI finally found a solution. I figured out that the projects were using two really different versions and so the structure of the cache folder and file names were different. Basic error. I'm sorry for it and thank you for replying to my problem. Really appreciate it.\nBest regard,\nRicardo :). ",
    "drAlberT": "Uhmmmm will double check, tnx\nIl 18/dic/2015 19:42, \"Khoa Bui\" notifications@github.com ha scritto:\n\ndo you install redis for php? look like php don't have redis lib.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/khoaofgod/phpfastcache/issues/157#issuecomment-165866430\n.\n. @khoaofgod ok, it was my bad .. missing extension loaded\n\nThis issue became an RFE then :P .. please handle missing drivers errors more descriptively :)\nThank you\n. ",
    "dansenjaya": "no, i'm succes create new cache with sqlite , but can't read old cache.\n. sorry i'm use new github account because my old account is lost password email\n. @Geolim4 can you give me example\n. ",
    "kaanc": "I solved this issue \n$cache->top_player_home = array($players, 900) work\n. ",
    "efyoung": "So, how best would the above be written? I want to cache the results of my stored procedure.\n. That helped, but now my testing shows no cache. This is what I have now:\n```\n    $cache = phpFastCache();\n// Try to get $geo from Caching First\n// geo_results is \"identity keyword\";\n$geo = $cache->get(\"geo_results\");\n\nif ($geo == null) {\n    // execute and fetch\n    $sth = $dba->getGeo($latitude, $longitude, $radius, $numResults, $startPosition, $pageSize);\n    $sth->execute();\n    $geo = $sth->fetchAll();\n    // Write geo results to Cache in 10 minutes with same keyword\n    $cache->set(\"geo_results\", $geo, 600);\n    echo \"NO CACHE\";\n}\n// More code goes here\n\n```\n. Is it because I'm refreshing the page?\n. ",
    "wetvibes": "Thanks alot @khoaofgod for the fast reply. If you have 1 more minute to spare can you please tell me exactly how should i use phpfastcache with this function i mean the exact code. I really cant put it all together:\nfunction getvalue($field, $table, $id)\n{\n    $sql = \"select \" . $field . \" from \" . $table . \" where id = '\" . $id . \"'\";\n    $res = mysql_query($sql);\n    if( $res ) \n    {\n        $row = mysql_fetch_assoc($res);\n        return $row[$field];\n    }\n}\nThank you!\n. ",
    "wloske": "Can you please explain why you closed this?\n. Might be. Might be not. ;-) ... I thought a little message would be nice or a link to a commit ... \n. Test data created with the code above, first with 30 days, second with 31. The first one has both dates, in the object and exp columns right, but the second one not. Something goes wrong when writing to the db.\n\nidkeywordobjectexp\n2TEST 1a:5:{s:1:\"d\";s:4:\"TEST\";s:1:\"g\";a:0:{}s:1:\"e\";O:8:\"DateTime\":3:{s:4:\"date\";s:26:\"2018-02-10 12:49:44.929876\";s:13:\"timezone_type\";i:3;s:8:\"timezone\";s:13:\"Europe/Berlin\";}s:1:\"m\";N;s:1:\"c\";N;}1518263384\n3TEST 2a:5:{s:1:\"d\";s:4:\"TEST\";s:1:\"g\";a:0:{}s:1:\"e\";O:8:\"DateTime\":3:{s:4:\"date\";s:26:\"2018-02-11 12:54:54.563876\";s:13:\"timezone_type\";i:3;s:8:\"timezone\";s:13:\"Europe/Berlin\";}s:1:\"m\";N;s:1:\"c\";N;}3034021788\n. I think that function here this is the root cause of the problem. \nvendor/phpfastcache/phpfastcache/src/phpFastCache/Core/Item/ItemExtendedTrait.php:167 \n```\n public function getTtl()\n    {\n        $ttl = $this->expirationDate->getTimestamp() - time();\n        if ($ttl > 2592000) {\n            $ttl = time() + $ttl;\n        }\n    return $ttl;\n}\n\n```. ",
    "peacemaker11": "still missing bracket on line 58 ... you should add it\n. ",
    "radiaku": "Yeah, i know 2.1 is old. But if its worked without vendorload stuff.\n@khoaofgod thanks for replying.. i didnt see release link on your github.\n. @khoaofgod\nThank you, its Wonderful...., so i can just simply include it?\nBtw how setting limit cache? I still getting error using 3.10. The error lookalike ss in above?\n. ",
    "w3l": "Thx, that helped! :smile:\n. @Geolim4 I have not tuched \"Consistency.php\", hoa/core just seem to be required by some library. Because of the weird path i guessed the problem was because of your autoloader. This is how I use phpFastCache:\n``` php\nrequire_once \"/secret/api/vendor/autoload.php\"; // Path to composer autoloader\nuse phpFastCache\\CacheManager;\n$cache = CacheManager::setup(array(\"storage\" => \"files\", \"path\" => \"cache\", \"htaccess\" => true, \"securityKey\" => \"auto\"));\n...\n```\nI never modify code in the composer-folder so the autoload.php and all required libraries are the way composer created them. :-)\nBtw. the secret part of all paths posted is the same /path/to/domain/, just prefer not to publish that part publicly...\nJust to make sure, I upgraded to 4.3.8 an additional time, got the warnings, downgrading to 4.3.7 again, no warnings.\nIF its not a bug in your code then 4.3.8 adds conflicts with other libraries. None of these options are especially good.\nEDIT: @khoaofgod Yes, I can verify the path, all except from the \"secret\" part is exactly like the error-log...\n. @Geolim4 Added Geolim4 on Skype, lets see if that was the correct Skype user... :-p\n. Same issue with 4.3.10... :( Going back to 4.3.7 yet again...\n. Sure, it's 11:35pm over here so I'll mail you the things requested tomorrow.\nVery happy btw that you take bugs like this serious. :-)\n. Any chance of seeing a fix for this?\nDidn't 4.3.8 contain \"Implemented our own Autoload for non-composer users\", as I said earlier, \"Guessing it's an issue with your new autoloader? :)\".\nWhy, btw, would you use your own autoloader with composer? Seems to complicate things. Why not just let composer handle the autoloading and provide your own autoloader as a stand-alone file for non-composer users? PHPMailer seems to have that approach for example...\n. @Geolim4 I gave it another try, I installed 4.3.11 yet again. Same issue.\nI changed:\nphp\nrequire_once \"/secret/api/vendor/autoload.php\"; // Path to composer autoloader\nto:\nphp\nrequire_once \"/secret/api/vendor/phpfastcache/phpfastcache/src/autoload.php\";\nGuess what, no issues!\nBut I can't require 20+ packages individually because one of them don't play nicely with composer. Sure, I could use phpFastCache \"vanilla\" but my guess is that other composer-users has similar issues(even if it depends on environment, other packages, etc).\nTo sum things up:\n- No issues with: 4.3.7\n- I use 20+ other packages, no issues with any of them in my environment!\n- 4.3.8-4.3.11 has some conflict with composer and/or other packages to generate warnings.\n- Your autoloader works perfectly \"vanilla\", but in combination with composers generated autoloader something messes up somewhere.\n\nWe did not used composer autoload for the main reason that not everyone is using composer, some people use PhpFastCache vanilla, so it has been decided to implement our own composer.\n\nThat is great! Provide an autoloader as a stand alone file, but let composer handle all the autoloading for composer users. Again, telling composers autoloader to use your autoloader just seems to complicate things...\n. Sadly not fixed. :(\nBased on http://stackoverflow.com/questions/31265030/can-individual-composer-dependencies-be-suppressed-from-autoloading it seems like hoa/* is autoloading some code that conflicts with phpFastCache. I guess this is an edge-case. I just have to move development dependencies to it's own folder. Ofc I would love to see a fix. But it just seem like older versions av hoa/* is just broken by design... :-/\n. @khoaofgod Yes! That fixed my issue for sure!\nphp\ndefine(\"PHPFASTCACHE_LEGACY\", true);\nWorked perfectly!\nThis issue would disappear when https://github.com/phpmetrics/PhpMetrics drops php 5.4 support and start using hoa/ruler 2.* instead of hoa/ruler 1.*. (The conflict with phpFastCache seems to be in hoa/ruler 1.*). But I am very happy you guys could fix the issue! Thanks a lot!\n. ",
    "olivermcruz": "side note: i used predis instead of redis. Seems like class redis was not defined class prior to the new update.  Also my last checkout before the update was end of january if that helps. Thanks again!\n. @khoaofgod - Thanks for a quick response. \nI followed the examples/global.setup.php.\nSo my new setup looks like this:\n    require_once(\"libs/phpfastcache/src/phpFastCache/phpFastCache.php\");\n    use phpFastCache\\CacheManager;\n    $config = array(\n        \"storage\"   =>  \"predis\", //redis not working\n        \"redis\" => $REDIS_CONFIG \n    );\n    CacheManager::setup($config);\n    $PFC = CacheManager::getInstance();\nThis setup is working for me the only issue was the storage \"redis\". I need to change it to \"predis\".\nWhen im using \"redis\" storage, I'm getting this error message.\n( ! ) Fatal error: Call to a member function connect() on a non-object in C:\\wamp\\www\\theweddingexpert.com\\libs\\phpfastcache\\src\\phpFastCache\\Drivers\\redis.php on line 93\nI dont know if this is a bug but i had the same issue on stable version. I figured using predis instead and \"predis\" work on both versions.\nThanks a lot this issue is solved.\n. Predis is exactly what i needed. i dont like to installing PHP extensions as much as possible. Thanks again!\n. ",
    "belliash": "Hmmm... First you say. that \"phpFastCache is now faster than before 10 times\", but few sentences later I can read that \"it's faster at least 3 - 4 times\". I see some inconsistency in your description.\nWhat is more I couldn't find any comparison and/or benchmark done on website. Could you prove somehow it is really faster?\n. I still have one question. Is your timing based on any benchmark, as I couldn't find any comparison on website, or is that just your saying?\n. So do I. Take a look at his arguments in #237.\nWho uses cache in this way? No-one. Cache should be used to fetch data from once and thus saved in variables they can be used anywhere in your application by registry pattern for example. Data stored in variables will be cleared upon every request, so I don't see any reason for storing everything in variables. This maybe makes things faster, but only in single request and this is not, what cache is responsible for. If anyone would need it for a longer time, data can be stored anywhere.\nWhat is more this have impact on memory use, whether you benefit from this or not.\n. ",
    "swatip-erosnow": "It would be better to have the method available in the lib. Without method will have atleast 2 handles to memcached. \nAlso, I'm planning to use stats to find out more about hits and misses. Current stats() method does provide all the keys, corresponding size and write_time. Did I miss something?\n. ",
    "jahanna": "Same here, when phpfastcache is active delete method can't locate to instanced keyword.\nOn Core/DriverAbstract.php within delete method;\nCacheManager::$memory[$this->config['instance']][$keyword]\nThis always returns null and can't find the index of $keyword.\nTraditional trigger with;\n$this->driver_delete($keyword, $option);\nWorks.\nSystem 64 GB Centos 7.2 8 Cores, PHP 5.6 Fast CGI\n. ",
    "canc": "Hey @khoaofgod \nI'm having same problem. I've downloaded your latest release and i've memcached 1.4.21 running, but can't get delete() command work.\nAny ideas? \nThanks.\nEdit: Also, here's my config:\n```\n$config = array(\n            \"storage\" => \"memcached\",\n            \"memcached\" => array(\n                array(MEMCACHED_HOST, MEMCACHED_PORT, 1) //127.0.0.1:11211\n            ),\n            \"caching_method\" => 2\n        );\nCacheManager::setup($config);\n$cachemanager = phpFastCache();\n\n```\n. @khoaofgod yes. I downloaded again just a few hours ago.\n. @khoaofgod thank you for your help, appreciated.\n. @Geolim4 sent, thanks!\n. hi @Geolim4, @khoaofgod \nany progress on this? or do you have any suggestions for a workaround?\nthanks.\n. @khoaofgod tried it but no luck. still can't delete.\nedit: your example code seems to work fine but it doesn't use memcached, i think? i tried changing key, it couldn't read any existing data.\n. i finally got it work! \ni changed my config completely with your memcached example (/examples/memcached.php) and boom! \nit's just weird that the config methods on your webpage (\"Document\") causing problems.\nanyway, thanks for your support!\n. ",
    "shoppingadda": "i just include this file on my header section of website  <?php   Include(\"phpfastcache/phpFastCache/phpFastCache.php\");?>\n. i opened my cache folder \"phpfastcache\" but tell me what i do on this folder because i want to know my phpFastCache is running or not??\n. pls reply \n. bascially i just follow two step for installtion of phpfastcache ,\n1. Click Download & Unzip\n2. Include(\"phpFastCache/phpFastCache.php\");\nIts Enough ?? \n. actually i am also a developer but i m little bit confused, if you check this link then there is only two step given for phpcache installtion http://www.phpfastcache.com/   , i install and follow these steps but i am little bif confused \n. ",
    "fredGDS": "I just played around a little bit and if I change the code to:\n```\n    $tmp_dir = ini_get('upload_tmp_dir') ? ini_get('upload_tmp_dir') : sys_get_temp_dir();\n    $path = $tmp_dir;\n$full_path = $path;\n$full_pathx = md5($full_path);\n\n```\nthen it works. So I guess that the problem is somewhere with line 164:\nelse {\n                $path = isset($_SERVER[ 'DOCUMENT_ROOT' ]) ? rtrim($_SERVER[ 'DOCUMENT_ROOT' ], '/') . '/../' : rtrim(DIR, '/') . '/';\n            }\n. ",
    "westy92": "I got this error, but it turned out to be a configuration error.  My 'path' was set to '/cache' instead of dirname(__FILE__) . '/cache'.. Done.  https://github.com/PHPSocialNetwork/phpfastcache/pull/422. ",
    "may29adil": "just wondering if you fix the code ?\n. ",
    "Pansa237": "I have just tested this:\nLatest release,  6.0.0-rc2,  6bfaa5d, Verified, 6.0.0-rc2 Release\nGeolim4 released this 29 days ago\nI still get the same error, although folders have chmod 777.\nError message:\nFatal error: Uncaught phpFastCache\\Exceptions\\phpFastCacheIOException: PLEASE CREATE OR CHMOD /cache/subfolder/Files - 0777 OR ANY WRITABLE PERMISSION!\nCan somebody tell me in which release this has been or will be fixed?. Hi,\nI don't think that is the problem.\nPhpfastcache scripts do successfully create subfolders in my \"cache\" directory (\"cache/mysite.de/Files\") and they also successfully create a .htaccess file in the \" /cache/mysite.de/Files\" directory to which the error message says it can't write to, because of missing write permissions.\nCheers,\nMichael. Sorry, don't know what you mean by \"create the file\" - what file?\nScripts and folders to write to all have the same owner/group - and like I said, scripts do really creat subfolders and a .htaccess file - just the cache files cannot be created...\n\n\n. Disc space is more than sufficient.\nAbsolute path (dir.\"/cache\") helped - can you update your error message there? It is very misleading and cost me quite some time...\nEspecially as relative path worked in my local dev system.\nThanks!. ",
    "vatnoise": "\nCan you use examples/Sqlite.php and see how it works on your localhost and ur prods.\n\nprod:\n```\nFIRST LOAD // WROTE OBJECT TO CACHE // RELOAD THE PAGE AND SEE // SQLite Cache --> Cache Enabled --> Well done !\nBack to index -- Reload\n```\nlocalhost:\n```\nThe connection was reset\nThe connection to the server was reset while the page was loading.\nThe site could be temporarily unavailable or too busy. Try again in a few moments.\nIf you are unable to load any pages, check your computer's network connection.\nIf your computer or network is protected by a firewall or proxy, make sure that Firefox Developer Edition is permitted to access the Web.\n\n```\nTried 4.3.12 on localhost and got same results.\n. ",
    "caperneoignis": "Okay, I'll extend out the test duration to a minute. And yes, I was doing files, it is set in the constructor for the FastCache class. \n. Okay, I changed the duration to 63, and the corresponding sleep times. I received the same results, the last two assertTrue(s) failed. Which means the cache was not cleared after 63 seconds. \n. Okay, it wont be till Monday when I get back in the office, but I'll let you know as soon as I can try it again. Is there a better way to test? If the script doesn't write till the end of the script, can I do a phpUnitTest to see if the config exist after a minute or so after running the last phpunit test? IE just run the test then wait 2 minutes and then rerun the unit test to see if the cache did indeed clear? But I'll pull the newest commit and let you know Monday what I find. Thanks again to you all for your help in this. \n. Okay, so after downloading the newest dev version, using composer. I re-ran the test. I changed a couple of things about the test. \n1. I got ride of the cache->clear command.\n2. I used a stop watch to count to 63 seconds after the test case ran. \n3. I also did the same test but only after 10 seconds. \nNumber 2. item passed, the cache no longer existed after a minute and 3 seconds.\nNumber 3. item failed as expected. I really ran that one to ensure the caches were not being cleared by code by accident. \nI also ran number 3 a couple of times, to make sure the cache still cleared even if being used randomly in the duration time frame. \nSo it looks like it was a case of the information staying in the buffer and not actually being written to the cache, since it was during a script run. \nThank you for your help. \n. ",
    "tatet": "Now works perfect!!! Thanks a lot!!\nBest Regards.\n. ",
    "Dimofinf-mark": "thanks\n. Note: only in cache_method 3\n. ",
    "erhanharm": "Hi thanks everyone, \nBut when i tried to search i got this error;\nI use File cache. should i install sqlLite ? \n[PHP Fatal error:  Uncaught exception 'phpFastCache\\Exceptions\\phpFastCacheDriverException' with message 'SQLITE is not installed, cannot continue.' in /var/www/otokilik/src/phpFastCache/Drivers/sqlite.php:73\\nStack trace:\\n#0 /var/www/otokolik/src/phpFastCache/CacheManager.php(91): phpFastCache\\Drivers\\sqlite->__construct(Array)\\n#1 /var/www/otokolik/src/phpFastCache/CacheManager.php(128): phpFastCache\\CacheManager::getInstance('Sqlite', Array)\\n#2 /var/www/otokolik/src/phpFastCache/Core/DriverAbstract.php(672): phpFastCache\\CacheManager::__callStatic('Sqlite', Array)\\n#3 /var/www/otokilik/src/phpFastCache/Core/DriverAbstract.php(672): phpFastCache\\CacheManager::Sqlite(Array)\\n#4 /var/www/otokolik/src/phpFastCache/Core/DriverAbstract.php(720): phpFastCache\\Core\\DriverAbstract->_tagCaching()\\n#5 /var/www/otokolik/src/phpFastCache/Core/DriverAbstract.php(265): phpFastCache\\Core\\DriverAbstract->getTags('search', false)\\n#6 /var/www/otokolik/examples/Search.YourCaching.php(14): phpFastCache\\Core\\DriverAbstr in /var/www/otokolik/src/phpFastCache/Drivers/sqlite.php on line 73\n. ",
    "jbhamilton": "For my needs I'm only using the files driver. I understand that it would need to be implemented across all drivers uniformly and right now it appears each driver stats returns a consistent root level structure:\narray(\n          'info' => '',\n          'size' => '',\n          'data' => '',\n        );\nI have not checked, and I'm assuming that the structure of data varies between the drivers. \nUltimately I would like to see data return a consistent structure across drivers like:\n'data' => Array(\n    'key' => Array(\n         'size' => 203943,\n         'write_time' => 1461780990,\n         'expire_time' => 1461781190\n    ),\n    ...\n)\nAlso the data stored in info should be made to use friendly consistent keys and should not include [bytes] as a string, as it should be specified in the documentation that driver_stats() returns all size values as bytes.\nSo this:\n$res[ 'info' ] = array(\n          'Total [bytes]' => $total,\n          'Expired and removed [bytes]' => $removed,\n          'Current [bytes]' => $res[ 'size' ],\n        );\nShould look more like this:\n$res[ 'info' ] = array(\n          'total_size' => $total,\n          'expired_and_removed_size' => $removed,\n          'current_size' => $res[ 'size' ],\n        );\n. Awesome! If theres anything I can do I may have a few hours I could spare to help. Let me know.\n. ",
    "on-d-mand": "Hi Khoa, an e-mail has been sent to you with the example files.\nFor others reproduction can easily created by running the script and thus setting the cache and then just simply renaming set to get (and echo-ing) to see the values exist but are not searchable\n. Hi Khao(ofgod?)\nWe've started looking into this issue since we're currently stuck with a inefficient custom clean up code for our tool and noticed that changing the \"cache_method\" in _tagCaching from 3 to 2 (Line 670) seems to fix searching in the examples and also in our own projects!. I'm unaware what the difference is between those 2 methods internally but this might give you an idea on where to look?\n. Last issue we do find (can open a new ticket) is that the tags for the search are not cleaned after a delete.. Might be a minor thing I don't know.\n. Indeed! Would it be possible to mention the version nr somewhere in the code? Through composer I've received 4.3 which was stated as the latest version. But apparently online there is already a newer version in the GIT. In the code the version nr is never mentioned thus it is very hard to check if composer or the local repository is out of date\n. ",
    "jbcubed3": "@Geolim4 - I'm using xampp on localhost at the moment, and phpfastcache set to auto\nIt's been working fine so far but today $cache->clean(); fails for some reason and not sure why!\n. @Geolim4 - unfortunately not sure how for both questions, can you please elaborate\n. @khoaofgod - Hi - is there any other way to clear the cache?\nI'm using this on localhost/XAMPP at the moment. I tried to use latest version, but getting some errors. \n$cache->delete, $cache->get and $cache->set work perfectly, just that $cache->clean just doesn't clear the cache out anymore - but I haven't changed any settings.\nHow do I debug the cache instance? \n. Hi @Geolim4 - this is what I get for var_dump():\nobject(phpfastcache_files)#1 (4) { [\"tmp\"]=> array(0) { } [\"config\"]=> array(9) { [\"storage\"]=> string(4) \"auto\" [\"default_chmod\"]=> int(511) [\"htaccess\"]=> bool(true) [\"path\"]=> string(0) \"\" [\"securityKey\"]=> string(4) \"auto\" [\"memcache\"]=> array(1) { [0]=> array(3) { [0]=> string(9) \"127.0.0.1\" [1]=> int(11211) [2]=> int(1) } } [\"redis\"]=> array(5) { [\"host\"]=> string(9) \"127.0.0.1\" [\"port\"]=> string(0) \"\" [\"password\"]=> string(0) \"\" [\"database\"]=> string(0) \"\" [\"timeout\"]=> string(0) \"\" } [\"extensions\"]=> array(0) { } [\"fallback\"]=> string(5) \"files\" } [\"fallback\"]=> bool(false) [\"instant\"]=> NULL }\n@khoaofgod amazing thank you\n. Hi @Geolim4 @khoaofgod - do you have any suggestions? Does the var_dump look okay? \n. Hi guys - any ideas? \n. Hi @Geolim4 - should be - I can read/write to the cache and create new objects - but I just can't clear it all for some reason!\n. Yep - using XAMPP for development/testing atm \n. ",
    "misternerd": "I just pushed another PR to the V5 branch, should I close this one?\n. ",
    "ghost": "In my config file\n$cache_config = [\n  \"path\"      =>  \"cache\",\n  \"storage\" => \"sqlite\",\n];\n. The cache/localhost is created and there is sqlite cache files (two) with information in them. Everything seem's to be ok.\nOnly information with numbers is hidden for one sec, the other one information with text and numbers is not hidden like the data with numbers only.\nI try with:\n\"path\"      => __DIR__. \"/cache\",\nbut not working for me.\nI don't want to put self-written path like C:/program files/wamp bla-bla or something. If you know a way with function - tell me :)\n. OK, i'll waiting someone with ideas how to fix this, because is annoying and people ask what's going on (where is the information)\nMy php version is 5.6.\n. I'm on localhost. Sqlite and 'files' type working the same. The data with numbers only is hidden for one sec (when cache is expired and when is time to generate new - it shows again)\nHere is some piece of code:\n```\nfunction get_total_sessions() {\nglobal $link, $bb_prefix, $bb_db, $cacher;\n$total_sessions= $cacher->get(\"total_sessions_from_forum\");\nif(is_null($total_sessions)) {\n    $mysql=mysqli_query($link,\"select session_user_id,COUNT(session_user_id) as count_sess from $bb_db.\".$bb_prefix.\"_sessions s INNER JOIN $bb_db.\".$bb_prefix.\"_users u ON u.user_id = s.session_user_id WHERE session_user_id <> 1 AND (session_time + 300) > UNIX_TIMESTAMP(NOW())\") or die(mysqli_error($link));\n    $fetchrow = mysqli_fetch_assoc($mysql);\n    @mysqli_free_result($mysql);\n    $cacher->set(\"total_sessions_from_forum\",$fetchrow['count_sess'], 60);\n}\nreturn $total_sessions;\n}\n```\nThis one is return only numbers and have exact problem (with hiding).\n. Yes, exactly. :)\n. Not working with cache_method => 2 too. The data is hiding again and again :)\n. I try with memcache - all data is gone for forever now. This problem is only happen with numbers only.\nMaybe the core can't catch numbers (something goes wrong and can't catch them)\nPlease, test memcache method with simple as:\n```\n    $total_topics= $cache->get(\"total_topics_from_forum\");\n      if(is_null($total_topics)) {\n        $cache->set(\"total_topics_from_forum\",1423232, 60);\n      }\n   echo $total_topics;\n```\nvar_dump($total_topics) every time gives me NULL.\n. I try with string too - not working.\n. I find the problem. Memcache php module is Enable, but memcached server is not installed. When the server is installed - everything is ok. But data is hiding again for one second and shows again after this second.\nThis happens when cache expire and data need to be overwritten in cache files (or memcache server)\nI can make a video clip for you, to see what is happen. :)\n. I don't have a solution. I write here, to get a solution and fix this problem. I think that local files is the problem with this hiding process, but now when i using memcache now - everything is the same.\nThe data is hiding again.\nI don't know, maybe this cannot be fixed...\nI hope that php fastcache works in way with overwritting files / memory (not to delete and create new)\nI have not seeing the core files of phpfastcache, just quickly integrate it into my CMS.\nIf anyone else has this problem, let writes ...\nThe problem is only noticeable if you constantly refresh the page.\nYou have to hit the exact moment in which phpfastcache will overwrites information or creates a new (whatever that is)\n. It is Windows 10, Files driver . I proposed a fix actually, \nin \\phpfastcache\\phpfastcache\\src\\phpFastCache\\Drivers\\Files\\Driver.php, line 122, adding \" !is_array($object) || \"\n```\n if (!is_array($object) || $this->driverUnwrapTime($object)->getTimestamp() < time()) {\n     @unlink($file_path);\nreturn null;\n\n}\n```\n. I just applied phpfastcache for around 1 week, no problem on Windows 10 so far.\nThe problem happened on our Production, which is ubuntu 16.04, the cache location is /tmp.  we are running nginx-fpm along with php command client for cron job. \nMerci pour la reponse rapide et le superbe lib :-)\n. > Is that boolean true or false ?\nFalse, I guess it may be some data corruption or something\n0 /somepath/ow_libraries/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/Files/Driver.php(122): phpFastCache\\Core\\DriverAbstract->driverUnwrapTime(false)\nthe error looks minor but it does crash the whole flow... so I dunno if I should catch that error...\n. hmm, I see.. but wait you are showing line 57, but this error occurred at line 55\n1 /somepath/ow_libraries/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/StandardPsr6StructureTrait.php(55): phpFastCache\\Drivers\\Files\\Driver->driverRead(Object(phpFastCache\\Drivers\\Files\\Item))\nand the log said it is a \"false\"\n. Sorry Geolim4 for the late reply. I was on vacation. \nHere is what I did in line 122 Driver.php\n```\n    if ($this->driverUnwrapTime($object)->getTimestamp() < time()) {\n        @unlink($file_path);\n    return null;\n}\n\n```\n=> \n```\n    if (!is_array($object) || $this->driverUnwrapTime($object)->getTimestamp() < time()) {\n        @unlink($file_path);\n    return null;\n}\n\n```\nI guess your solution is better. But I just don't want to test since it is production and it is working with my fix. So I guess it is an OK from me.\nAgain thank you for your great library. \nMerci les gars!\n. oh, really, let me checkout the latest code. Thank for the info\n. updating did indeed solve the issue. What an awkward issue. \nAgain thank you for your super quick reply.\n. ",
    "mahmed-ntd": "Thanks @Geolim4 it worked now.\nReally appreciate for your rapid reply.\n. ",
    "mpemburn": "Thanks for your reply\u2014 and sorry for my delay in getting back to you.  I pulled from https://github.com/PHPSocialNetwork/phpfastcache and still see the same message.\nDon't know if this makes any difference, but here's what I'm doing: using a file-based cache, I retrieve a  record containing ~1,200 keys.  I then iterate over those keys and retrieve data associated with them.  As I mentioned, no errors occur until everything has finished successfully.\n. Hi Georges,\nYes, I did look at this as soon as I encountered the error and no, I had no\nreason to touch that part of the code.  What I can do, the next chance I\nget, is to see what happens if I change the storage class and, if that\ndoesn't work, step the code to see I can find the point in the call stack\nwhere it's changed.\nYours,\nMark\nOn Sat, Jun 18, 2016 at 9:29 AM, Georges notifications@github.com wrote:\n\nHi,\nWe can't find out the origin of this issue, as you can see that property\nis already well-defined:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/CacheManager.php#L40\nDon't you, anytime in your code, unset this var ?\nRegards,\nGeorges\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/289#issuecomment-226942546,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AAcMpVOAuVvZEnFLSYKHT_o3TMFH1LHVks5qM_KrgaJpZM4I1Xzz\n.\n. Hi Georges,\n\nI tried your suggestion this morning, and this was the result:\nPHP Fatal error:  Cannot access protected property\nphpFastCache\\CacheManager::$memory in\n.../vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/DriverAbstract.php\non line 149\nAlso, I only get the original error (CacheManager line 163) on our Linux\nstaging server (running PHP 5.6.11) and not on my Mac dev box (running\n5.6.2) if this makes any difference.\nMark\nOn Sat, Jun 18, 2016 at 3:23 PM, Georges notifications@github.com wrote:\n\nCan you temporary set this property to \"protected\" instead of public to\nidentify out the code part that unset this var.\nThanks you,\nGeorges\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/289#issuecomment-226960388,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AAcMpcv_XFcPfqbx1_bjEP-Leqe4DIhAks5qNEWXgaJpZM4I1Xzz\n.\n. \n",
    "dutom007": "Ok, Thx\n. It's the v4. Hi Geolim4,\nI found the response on issue #456 !\nI need to clear cache.. Sorry, I will answer monday :p. Hi Geolim4,\nMy cache does not exceed 72h.\n\nThe key continue to increase.\nI use the cache to keep some variable (listing producs, category, articles... by sort and filter) and I use it like that :\n$all_pays_cached    = $InstanceCache->getItem('all_pays_'.$cache_keyword);\nif( is_null($all_pays_cached->get()) OR $_DEBUG_THIS )\n{\n   ......\n   // Mise en m\u00e9moire cache des variables\n      $all_pays_cached->set($all_pays)->expiresAfter(CACHE_LIFE);\n      $InstanceCache->save($all_pays_cached);\n} else {\n   $all_pays = $all_pays_cached->get();\n}\nHowever the redis system don't take more memory...\nThx\n. Hin\nThanks for \u00abis_null\u00bb trick, you are right ! I change every where.\n$cache_keyword is not for user but filters/sorts and languages.\nIn my exemple : all_pays_page2_sort3_lang2 use for the page 2, the sort 3 (alpha) and french (2).\nI'm sorry but I didn't understand  \u00absetex\u00bb problem\n. Ok I understand.\nCan you tell me the request to clean only expired key ?\nMaybe you have a method ?. Hi Geolim,\nI see on documentation : https://redis.io/commands/expire\n\nSet a timeout on key. After the timeout has expired, the key will automatically be deleted.\n\nSo the key would be deleted, no ?. ",
    "iain17": "Version: 5.4.16.\nAnd done.\n. Can't its a external deployment server. Actually works fine after this fix.\n. Fine by me. Just wanted to share\n. ",
    "toutavous": "Thanks so much in advance. I never had the time to appreciate you both for such a wonderful cache solution. I look forward to it.\n. ",
    "abunour22": "Thank you,\nYou should update documentation on http://www.phpfastcache.com/ \n. ",
    "cotthemh": "ye i looked into the code, actually tags only work when you install sql-lite, i think you should put that in the doc somewhere, because now its confusing, also im not sure i want to install sql lite on my server.\nwhat would give the fastest results using phpfastcache?  now i use memcache but maybe something else is faster (its just standalone)\n. Ok, great plan, so which driver you recommend on a server with plenty of memory? I want something ultra fast\nThx:)\nH\n. ",
    "r0b-": "@phuyem: I have another code at line 122 in Files/Driver.php\n@Geolim4: I think the is_array check will fix the issue for now, but I'm wondering why the decode returns a boolean instead of an array from time to time... \n. Hmm your're right and additional there should be an exception in the line before that (121) because driverUnwrapData() needs an array as well, but somehow it passes this call. \nWell I just updated my production environment to the latest version and if the error is thrown the next time I will take another look.\nAnyways, I strongly encourage to add the is_array check!\nthx\n. ",
    "hammermaps": "No problem, I update the docs/DRIVERS.md\nThe server can be downloaded from http://www.zend.com/ as trial version.\n. Updated, see changes :)\n. Ok, is up to date :wink:\n. Oh, Yes, that needs to be changed , of course, you're right\n. I use PhpFastcahe as composer bundle for a web portal and some other applications (Symfony Kernel) .\nWe use Windows Server and Linux as os, the phpfastcache has a lot of drivers and is very easy to use .\n. Np, for the Best Cache Lib :)\n. Is APC or Memchache/Couchbase Server not better for this Projekt?\nOr save your API Data to NoSQL -> MongodB? \n. No, only the memory cache has statistics.\n. I would want to change.\n. ",
    "lambasoft": "So if I want it to never expire:\n$CachedString->set($cache_key,$result)->expireAfter(0); ?\nThanks for the quick reply\n. Thanks a lot, that's what I'll do ^.^\n. Sorry for bothering again, I didn't want to open a new issue.\nI'm kind of new to the cache world, and have some questions I'd like to make clear.\nYou said that I should not use cache as a database, can you explain a bit further ?\nI'm using phpfastcache to store information obtained from www.pokeapi.co, I'm fetching 151 pokemon from http://pokeapi.co/api/v2/pokemon/x ( where x is the pokemon id, from 1 to 151 ) and saving the page result as a cache using the code I showed above. Then every time a user browse my website, instead of doing 151 requests again, I simply use the cache to load the 151 pokemon with their detailes.\nDoes Cache fits this scenario ? Should I use files or sqlite as instance ? I'm estimating about 1000 request / second on my website on peak time.\nThanks a lot @Geolim4 \n. Well, there's a problem, that if I'm looping through the 151 pokemon, for a reason it stops on the 71th cache.\nThis is an example code\nfor($i=1;$i<=151;$i++){\n    $CachedString = $cache->getItem($cache_key_$i);\n    $result = $CachedString->get();\n}\nIt seems I can't loop through more than 71 consecutive caches ?\n. For further explanation this is my code:\n```\n    require DIR . '/vendor/autoload.php';\nuse phpFastCache\\CacheManager;\nuse phpFastCache\\Core\\phpFastCache;\nif(!isset($InstanceCache)) {\n    CacheManager::setDefaultConfig([\n      \"path\" => __DIR__ . \"/cache\",\n      \"securityKey\"=>\"pokemon\"\n    ]);\n    $InstanceCache = CacheManager::getInstance('sqlite');\n}\n\n\nfunction sendRequest($url){\n    //return $uri;\n    $ch = curl_init();\n\n    $timeout = 5;\n\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);\n    $data = curl_exec($ch);\n\n    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n\n    curl_close($ch);\n\n    if ($http_code != 200) {\n        return false;\n    }\n\n    return $data;\n}\n\n\n\nfunction getPokeAPI($url,$InstanceCache){\n    $cache = $InstanceCache;\n\n    $cache_key = md5($url);\n    // $c->setCache($cache_key);\n    $CachedString = $cache->getItem($cache_key);\n    $result = $CachedString->get();\n\n    if (is_null($result)){\n        // do the curl and get $result\n        $result = sendRequest($url);\n        // save the cache:\n        $result = json_decode($result);\n        // The setter, for those who missed it, put 0 meant cache it forever\n        $CachedString->set($result)->expiresAfter(31557600);\n         // Save the cache item just like you do with doctrine and entities\n        $InstanceCache->save($CachedString);\n        echo \"Cached {$url}:{$cache_key}\";\n    }\n\n    echo \"\\r\\n\";\n    return $result;\n}\n\nfunction test($InstanceCache){\n    for($i=1;$i<=100;$i++){\n        $result = getPokeAPI(\"http://pokeapi.co/api/v2/pokemon/{$i}/\",$InstanceCache);\n        $result = json_decode(json_encode($result), true);\n        echo $result['name'] . \" \" . $i;\n    }    \n}\n\n```\nWhen I run the function test($InstanceCache) it stops on the 71th pokemon, but if I set $i=70 instead of $i=1 it shows the rest normally, so I'm sure cache files are not corrupted.\nThis is the code execution results ( it stopped on 71):\nhttp://i.imgur.com/xVurj9U.png\n. I did debug, and the 72th value is getting stuck on $CachedString = $cache->getItem($cache_key); the loop stops there on the 72th value.\nPHP timeout has nothing to do, as everything loads within seconds and stops on 71th.\n. I got an error:\n<b>Fatal error</b>:  Allowed memory size of 134217728 bytes exhausted (tried to allocate 286387 bytes)\nWhy did phpcache used my rams memory ? I should restart my pc ?\n. Alright! I fixed it!\nI had to add  $cache->detachAllItems(); to the end of my getPokeAPI() function, so I release the memory from my RAMS.\nI think this should be added to the wiki or examples.\nThanks a lot for your time @khoaofgod , we may close this now.\n. ",
    "PhilHilton": "I've gotten this error when running under systemd and apache while trying to clear the cache. I suspect it's related to the pseudo private httpd systemd /tmp directories, but I'm not sure.\nI had no luck trying to specify an alternate path.\nI've been restarting apache (which deletes and creates a new /tmp/[random name]-httpd-blah/ directory) to simulate  a cache clearing as needed, which is rarely so it's not an issue for the moment.\nStill, if anyone has any insight I'd be interested in hearing it.\n. ",
    "calebdre": "I'm actually using nginx for the server. Just to make sure, i'm specifying my own path inside of my project to dump the cache files like so:  \nphp\nCacheManager::setDefaultConfig(array(\n    \"path\" => './cache',\n));\n$this->cache = CacheManager::getInstance(\"files\");\nI think the error is coming from this line:\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/CacheManager.php#L111  \nIt can'ts find the Files instance here: https://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/CacheManager.php#L103  \nIs the self::$instances array supposed to be empty? I get an empty array when i var_dump it.\n. Okay i just figured it out - it was the line the @Geolim4 mentioned. \nit wasn't automatically creating  the /tmp/phpfastcache/project/files directories. And then when i created it, I had to make the directory writable. I also had to make the ./cache/project/files directory writable.\nThanks for your help @Geolim4 and @PhilHilton!\n. ",
    "jfcherng": "That line won't be executed.\n\nFor an expired item, $cacheItemPool->deleteItem($key) is\nnot working because $driver->driverRead($item) always\nreturns null (due to the extra constrain on exp while fetching from the database) in $cacheItemPool->getItem($key).\n\nOr, is there another flow/mechanism to reach $driver->driverDelete($item) except from $cacheItemPool->deleteItem($key)?\n. > My question is:\n\n** Or we just leave it like that, and it still does well?\n\nDo we need to add $this->itemInstances[$key]->setHit(false); right after driverDelete($item) here?\n. > Thanks you for the fix, you totally right, the code will never being executed due to this specific statement. Can you PR' on the V 5.1 too please ?\n@Geolim4 Sure :+1: \n. I propose\nphp\n    // prepend directory separator for non-Windows OS\n    $absolutes = '/' === (__FILE__)[0] ? [ '/' ] : [];\nbecause it eliminates string concatenation and function call.\n. @Geolim4 Sure. My pleasure.. ",
    "thingNumber1": "Ok, Thanks. =)\n. ",
    "ATouhou": "Thanks for the quick answers :D \nNice community you got going\n. ",
    "SimBioT1954": "@Geolim4  I'll check it\n. @Geolim4 that's it. There was \"path\" =>  \"/files/cache\" instead of  \"path\" =>  \"files/cache\"\nThank you so much!\n. ",
    "johnbasinger84": "phpFastCache\\Exceptions\\phpFastCacheDriverCheckException Object ( [message:protected] => Redis is not installed or is misconfigured, cannot continue.\nIt worked in my old server. when tried in new server it shows this error..\nWhere can I configure Redis in CacheManager?. ",
    "sandeepsmn": "Hi,\nI am unable to understand the actual process...when I am\nrunning examples/legacy.php then I got below error message\nhttp://192.168.3.28/phpfastcache-final/examples/legacy.php\nI don't understand what is the error...please can you provide detailed\ndocumentation.\nSMN Infocom Pvt. Ltd.\nSSRawat\n+91 9988061971\nOn Sat, Aug 27, 2016 at 7:23 PM, Georges.L notifications@github.com wrote:\n\nClosed #356 https://github.com/PHPSocialNetwork/phpfastcache/issues/356.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/356#event-769743999,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AUSs_2waAyf8n1vMWPXRPJyFa8HoLu2Lks5qkEFSgaJpZM4Jur-s\n.\n. sorry error msg\n\nParse error: syntax error, unexpected '[' in\nH:\\spirewebs\\shops\\httpdocs\\phpfastcache-final\\src\\autoload.php on line\n27\nSMN Infocom Pvt. Ltd.\nSSRawat\n+91 9988061971\nOn Mon, Aug 29, 2016 at 6:05 PM, SSRawat sandeep@smnpl.com wrote:\n\nHi,\nI am unable to understand the actual process...when I am\nrunning examples/legacy.php then I got below error message\nhttp://192.168.3.28/phpfastcache-final/examples/legacy.php\nI don't understand what is the error...please can you provide detailed\ndocumentation.\nSMN Infocom Pvt. Ltd.\nSSRawat\n+91 9988061971\nOn Sat, Aug 27, 2016 at 7:23 PM, Georges.L notifications@github.com\nwrote:\n\nClosed #356 https://github.com/PHPSocialNetwork/phpfastcache/issues/356\n.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/356#event-769743999,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AUSs_2waAyf8n1vMWPXRPJyFa8HoLu2Lks5qkEFSgaJpZM4Jur-s\n.\n. \n\n",
    "plweil": "Ok. I've changed my path to sys_get_temp_dir().\"/cache\", which translates to something like:\n/var/folders/nx/9f74ykx97yg0jm4yf30ysblc0000gn/T/cache/localhost_8002/files\nI set the cache var:\n$cache = CacheManager::getInstance('Files', $config);\nThe first time I run the script, the data gets cached in this dir, as expected.\nThen I add clear() to see whether it works:\n$cache = CacheManager::getInstance('Files', $config);\n$cache->clear();\nThe cache in the above dir does appear to be cleared, but my browser returns the following error (below). Presumably I need to adjust permissions someplace, but I'm not sure where or why.\nFatal error: Uncaught exception 'phpFastCache\\Exceptions\\phpFastCacheDriverException' with message 'PLEASE CHMOD - 511 OR ANY WRITABLE PERMISSION!' in /www/apache/html/uw_home_redesign/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/PathSeekerTrait.php:159 Stack trace: #0 /www/apache/html/uw_home_redesign/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/Files/Driver.php(117): phpFastCache\\Drivers\\Files\\Driver->getFilePath('news') #1 /www/apache/html/uw_home_redesign/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/StandardPsr6StructureTrait.php(57): phpFastCache\\Drivers\\Files\\Driver->driverRead(Object(phpFastCache\\Drivers\\Files\\Item)) #2 /www/apache/html/uw_home_redesign/public/index.php(39): phpFastCache\\Core\\DriverAbstract->getItem('news') #3 {main} thrown in /www/apache/html/uw_home_redesign/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/PathSeekerTrait.php on line 159\n. I did change the permissions as suggested. No matter which dir I designate as the target directory (\"path\") in config; e.g., [site-root[/cache, clear() deletes the cache directory itself and all of it's contents. I would expect the contents to be gone, but the directory should remain, yes? Once it's gone, the permissions are irrelevant, because the directory no longer exists. It feels like a Catch 22. I'm not sure what I might be doing wrong here.\n. Composer says v5.0.9. So I take it that the target directory must be embedded within another writable directory.... I can try that.\n. I'm just working in my local development environment. I have full control over the permissions. I just changed my $config to a subdirectory within the site root:\n$config = [\n\"storage\"   => \"files\",\n\"path\"      =>  \"/www/apache/html/uw_home_redesign/storage/cache\",\n];\nwhere storage (and all of its contents) is writable:\ndrwxrwxrwx   3 pweil  _www    102 Sep 21 11:45 storage\nThe exact same thing happened as before when I ran clear(), except that the storage directory is still there (one small victory):\nFatal error: Uncaught exception 'phpFastCache\\Exceptions\\phpFastCacheDriverException' with message 'PLEASE CHMOD - 511 OR ANY WRITABLE PERMISSION!' in /www/apache/html/uw_home_redesign/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/PathSeekerTrait.php:159 Stack trace: #0 /www/apache/html/uw_home_redesign/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/Files/Driver.php(117): phpFastCache\\Drivers\\Files\\Driver->getFilePath('news') #1 /www/apache/html/uw_home_redesign/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/StandardPsr6StructureTrait.php(57): phpFastCache\\Drivers\\Files\\Driver->driverRead(Object(phpFastCache\\Drivers\\Files\\Item)) #2 /www/apache/html/uw_home_redesign/public/index.php(39): phpFastCache\\Core\\DriverAbstract->getItem('news') #3 {main} thrown in /www/apache/html/uw_home_redesign/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/PathSeekerTrait.php on line 159\nIt should be getting the path correctly; otherwise it wouldn't be able to write the cache in the first place. Somehow the getFilePath method in PathSeekerTrait.php is either getting the wrong path, thinks it's not writeable, or....I don't know what. There's a disconnect somewhere.\n. PHP is running with me as the user (remember, this is just a dev environment). All of these directories need to be owned by me. If I change the owner to _www then phpfastcache complains that FIles is configured incorrectly. If PathSeekerTrait.php thinks that there's still a directory that still needs to be made writeable, there must be a way to tell which one it complaining about.\n. I appreciate everyone's patience to stick with me here. As I explained above, I can set permissions to cache to 0777 or anything else, but once it gets deleted, it's permissions are no longer relevant. When I run clear(), the error appears even when cache is writeable.\nIn trying to debug this, what is getFilePath() in PathSeekerTrait.php trying to do when it is trying to write something? clear() deletes the entire cache directory, but the $path variable it is testing is: \n/www/apache/html/uw_home_redesign/storage/cache/localhost_8002/files/50\nwhich contained the actual cached text file.\nBut that directory and file already have been deleted by clear(). So what's supposed to be going on here?\n. I think I may have figured it out, or at least have a workaround. I realize that what I was testing was an artificial situation, so I just inserting cache->clear() as described above. The code that follows essentially checks to see whether anything is in the cache, and either retrieve it or save some new data to the cache. What I had to do is clear or reset $cache within this block; e.g.:\n$cache = CacheManager::getInstance('Files', $config);\n$news_item = $cache->getItem(\"news\");\nThen the problem goes away.\nI suspected something like this was going on a little while ago, but it took me a little time to think through it. I should have seen it sooner. Phew.\nIn this project, the clear() method likely will live in a separate script (triggered by a url request), and will not be commingled with the script that writes to the cache.\nThanks Geolim4 and others for hanging with me.\n. ",
    "benedict-erwin": "@Geolim4 Thanks, it work :)\n. ",
    "brainfoolong": "Thanks for feedback. Yes i currently use memcache but i just want to get rid of that to require other external apps to run beside my simple php application. Therefore file caches are perfect for me. I started research and found PFC :)\nIn the past, file based cached didn't worked for me because of that write problem.\nThe big thing is that make this awkward, you may not notice any error during simultaneous write blocking each other. Just one thread wins and write the data to disk, the data from the other thread is lost without any notice because the write action works, but the data will be immediately overwritten by the other instance. This results in data loss. How big depends on how you use it.\nThe only way to get beyond this is some sort of using flock. In the past (few years ago) this worked really bad, than i switched to memcache. Now it is time for me to \"reinvestigate\" the issue. PFC is now here and possibly can manage this issue in nifty way.\nI recommend to add tests and fixes for multiple (big) writes at same time. This makes this product even more reliable. I've done some tests and it seems that is not immune against that problem (writing a 3mb array to cache, on multiple php cli instances). \n. Additionally, here is the test that i've written. Just run it in two cli windows simultaneously. One cli will stop really fast with the die() error message. Running at 6.0.0. alpha but i think that doesn't matter.\ntest.php.txt\n. Also additionally i've tried myself to implement flock. It does not work, as it has doesn't worked years before :( (at least on windows). The lock never aquire. \nI guess a temporary mutex lock file and check for existance is required. Creating an empty file with same filename as the storage file plus an affix like .mutex or something, before the fopen call.  If the write is done and the file is closed with fclose, the mutex file can be deleted - The file is released. A check if mutex file exist determine the locked state.\nUntil the mutex file exist, the original file is write blocked and a loop should check and usleep to wait for the write access, at least some x tries, after x tries it can fail with return false.\nIt's dirty but i know the problems with file locks, there is no better cross-platform way for this, as far is i know.\nJust an idea to push you to the right direction.\n. Thx for feedback. If you can solve the problem i'm happy, doesn't matter how you can do it. For the mutex idea: Sure, additional checks will be required, for example if file is older than x seconds than it's obvious that something went wrong. A option to activate is, is a good idea.\n. @Geolim4 I answer from now in the dedicated issue/pull request for this. https://github.com/PHPSocialNetwork/phpfastcache/issues/366\n. Hi, thx for implementation.\nWhen i use \"secureFileManipulation\" => true in config, than i get these error messages Warning: rename(,D:\\phpfastcache-6.0.0-alpha\\src\\tmp\\cli\\files/2d/2d0aaa0b1e221f7990b8a82642f1580f.txt): Das System kann den angegebenen Pfad nicht finden. (code: 3) in D:\\phpfastcache-6.0.0-alpha\\src\\phpFastCache\\Core\\Pool\\DriverBaseTrait.php on line 121.\nWith  \"secureFileManipulation\" => false all work as expected. Seems like file path's are incorrect. First parameter is missing.\n. \"System could not find the file at given path\".\n. I tested again, now i have this error messages Warning: rename(D:\\phpfastcache-6.0.0-alpha\\src\\tmp\\cli\\files\\2d\\tmp_644512e4e6dfe8873f5343973da84dc8,D:\\phpfastcache-6.0.0-alpha\\src\\tmp\\cli\\files/2d/2d0aaa0b1e221f7990b8a82642f1580f.txt): Access Denied (code: 5) in D:\\phpfastcache-6.0.0-alpha\\src\\phpFastCache\\Core\\Pool\\DriverBaseTrait.php on line 123.\nRename over an existing file is not allowed on windows, i guess. So change the suggested line to \ncopy($tmpFilename, $file);\nunlink($tmpFilename);\nWorked well for me. \nBut, the initial error is still present. When i think about it, it's correct. Copy the file over the existing file is pretty much the same as writing it directly to this file. Both block the file for a short time.\nNevermind, i see that there is no real way to avoid that problem without file locks. And file locks don't work as expected in PHP. I think, i should change the point of view from my side. I should not use a file cache to hold data in it that is required to accumulate data over a period of time. A file cache should be only what it is called to be, a cache. \nI currently use a memcache system to accumulate high amount of data (About 20 requests/second) that write and read from that cache. I think, to replace that with a file cache, is a wrong attempt from my side. \nSorry that i've waisted your time. PFC is great and will switch to it, but for my case, a file cache will not work.\nMaybe you should mention it somewhere in the specs that the file cache is not save against multiple concurrent writes/reads.\nHere is a working test that show you the problem. Put it in the src folder and run it with 2x with CLI, in 2 window.s Somewhere in between the cache file could not be read from disk because the file is blocked from another thread. This means the cache could not receive cache data and than the cache will be flushed.\n\nfile-read-error.php.txt\n. Thank you for your help.\n. ",
    "qaharmdz": "sorry to bother you again.\nI try to clear chace with devnull driver but it's not work. This is my code.\n$cache_driver = is_file('.development') ? 'devnull' : 'files';\n$cache = CacheManager::getInstance($cache_driver, array(\n    'defaultTtl' => 3600, // 1 hour\n));\nif (is_file('.development')) {\n    $cache->clear();\n}\nStep:\n1. $cache driver is 'files'\n2. Change to driver 'devnull'\n3. All cache is expired, as expected. Thank you.\n4. After 10 minute use back 'files'\n5. I have cache viewer and all cache from step-1 is back with expired-in 48 minute.\nThe docs state that it's possible to clear cache with 'devnull' driver. Does my code above wrong?\nI'm expecting to use new cache after development.\n. @Geolim4 now I understand why @thomich suggest to extend.\nThank you for the answer\n. After trying few thing, I found that it could be hard if using extending because each driver actually have different code to clear the cache. \nSo I'm using simple method to use native driver and hope someone will find this usefull.\n```\nif (is_file('.development') && !is_file('.development_over')) {\n    file_put_contents('.development_over', '1');\n}\n$cache_driver = is_file('.development') ? 'devnull' : 'files';\n$cache = CacheManager::getInstance($cache_driver, array(\n    'defaultTtl' => 3600, // 1 hour\n));\nif (!is_file('.development') && is_file('.development_over')) {\n    unlink('.development_over');\n    $cache->clear();\n}\n```\n. ",
    "thomich": "i made my own cache class, like in example https://github.com/PHPSocialNetwork/phpfastcache/blob/final/examples/extendedPhpFastCache.php\nin my cache class i have own get/put methods, where i can decide to load data from cache or load directly..\nmaybe you also can do it like this, with a own cache class and needed methods..\n. Hey @hatimdisawala \nHave you checked the example: https://github.com/PHPSocialNetwork/phpfastcache/blob/final/examples/extendedPhpFastCache.php?\nthomi\n. ",
    "rafaelspecta": "Sorry... I thought that message was from PHP core not from inside your code... Got it\n. ",
    "bukowskiadam": "The same on ^5.0 and 6.x-dev from composer.\n. Sure, I've got the full rights to the current directory, where the example is running.\nI've debugged this code and I'm sure about issues with tmp variable I've mentioned. Maybe something behaves in the other way on my system (Linux, PHP 7), but I get empty directory variable after realpath, because the path does not exist. Documentation says that's it's intended behavior.\nWhen you call clear, cache directory is deleted, so it doesn't exist. So instead of /path/to/cache/localhost/files I get just /files, where of course I don't have rights.\n. Thanks. Sorry for the typos in previous comment. If you'd like me to test something, please let me know.\n. I've debugged this code and I'm sure about issues with tmp variable I've\nmentioned. Maybe something behaves in the other way on my system (Linux,\nPHP 7), but I get empty directory variable after realpath, because the path\ndoes not exist. Documentation says that's it's intended behavior.\n. Now it's working properly. It's the solution I was thinking about and implemented in my code to fix the library issue\nhttps://github.com/Telaxus/EPESI/commit/26f3725644a8b62463924e9a450ea05f8d39585e\nThanks and best regards,\nAdam\n. I was answering yesterday, but I had to close the browser before I've submitted the message.\nYes - it fixes the issue.\nHowever I'm not sure about the code clarity, because you're clearing $tmp variable which belongs to the trait.\nAlso please take a look on this code:\n```\n<?php\nrequire_once 'phpfastcache/vendor/autoload.php';\nuse phpFastCache\\CacheManager;\nCacheManager::setDefaultConfig(array('path' => DIR . '/cache'));\n$c = CacheManager::getInstance('Files');\n$c2 = CacheManager::getInstance('Sqlite');\n// set value - files\n$it = $c->getItem('test');\n$it->set('value');\n$c->save($it);\n$c->clear();\n// set value - sqlite\n$it2 = $c2->getItem('test2');\n$it2->set('value sqlite2');\n$c2->save($it2);\n```\nAfter running this code there is no cache directory. If you'll comment out clear, everything works as expected. I assume it's not so important, because it doesn't cause any error, but it behaves in the not expected way. Also I don't see a reason  to use different drivers, but my usage of cache is very simple.\nIt happens, because file driver clear removes directory where also resides sqlite cache files. But sqllite driver will not check again if the directory exists or not (it checks during instantiation of the driver).\nWorking code:\n```\n...\n$c = CacheManager::getInstance('Files');\n// set value - files\n$it = $c->getItem('test');\n$it->set('value');\n$c->save($it);\n$c->clear();\n$c2 = CacheManager::getInstance('Sqlite');\n// set value - sqlite\n$it2 = $c2->getItem('test2');\n$it2->set('value sqlite2');\n$c2->save($it2);\n```\nBest regards,\nAdam\n. It fixes the issue with clear when autoTmpFallback=false, but when you'll enable fallback mode, then cache is not cleared, because wrong directory is returned to the rrmdir.\n:wink: \n. Well, I've found a minor issue, that have huge impact on the code :wink:\nYou've missed ! in the comparison. Clearing files driver will try to remove tmp if cache dir exists. It should be:\nif($this->config[ 'autoTmpFallback' ] && (!@file_exists($full_path) || !@is_writable($full_path))){\n    return $tmp_dir;\n}\nSecondly I think that there should be a security key and driver name added to the $tmp_dir, because on my system $tmp_dir is just /tmp, so each application and each driver with permission issue will have exactly the same dir /tmp/phpfastcache.\nFinally if path is not defined in the config, then cache files will land in phpfastcache/src/phpFastCache/Core/Pool/IO/<security key>/Files for console script and in <tmp dir>/phpfastcache/<security key>/Files for web.\nI think that condition about isPHPModule should be negated, to use DOCUMENT_ROOT when you're in the module scope and /tmp when in the console.\nBest regards,\nAdam\n. But on V5 it's PathSeekerTrait and it seems to be several commits behind - they're way different right now. Also some changes in Files driver has been made. On V5 I would prefer to just clear $tmp trait variable in the file driver - as a nasty hack to just fix the clearing issue. But I'm not sure what are your plans about the V6 release.\n. It would be better if you could do this, because your knowledge about this\ncode is far better. I've focused on the V6 with debugging and I don't want\nto mess something in the V5. In my opinion I wouldn't introduce fallback\nmode in the V5, just make sure to remove proper dir, not the whole cache\ndir, and to clear tmp variable / check for directory existence.\nBest regards,\nAdam\n. I'll test again everything on monday, but I think that it should be all right :+1: \n. I've made two pull requests for two branches (I can't find any option to make this at once).\nThere were couple of methods to solve this issue. We could detect OS from PHP_OS, but according to this SO thread and my knowledge only *nix systems use starting slash and it's always slash.\nExamples of root paths:\n- Unix\\linux\\Mac OS X: /\n- OS/2: C:\\\n- Amiga: dh0:\nSo I think that it should be working ok.\nBest regards,\nAdam\n. @jfcherng \nYou're right that I could use (__FILE__)[0], but you can't set $absolutes to /, because from [ / , srv , test ] after implode you'll get //srv/test. Also for path traversal it won't work, because from path /srv/../../cache, you should get /cache, and with your suggestion array_pop will cause to pop root slash and you'll get cache\n. ",
    "pinksharpii": "I am setting the data. I said:\n$CachedQuery->set($event_list)->expiresAfter(CACHE_EXPIRES);\n$event list is my array of events from the DB.\nThe driver is Memcache like stated above.\nI would assume I'm using v5? I don't know how to tell. I just downloaded the latest from Composer.\n. So I got it to work by changing Memcache to files. \nHowever, I still have a question on expiresAfter(). There is no clear documentation on what that value should be. I have it to be 120 (60 sec * 60 mins), so one hour. Is this correct? \nWhat should this value be?\n. What does TTL mean though? Is it a number like I have? (60*60)? Is it a date()? a time()?\nAlso your example on the website uses !is_null(). If that's not the best way to do it, you should change the example.\n. ",
    "Golodnyi": "i send PR on V6\n. Reopen)\n. ",
    "nahun-accesium": "Glad I helped. Good work on the library. Congratulations.. ",
    "4b42": "Hello\ntry:\nservice php5-fpm restart or /etc/init.d/php5-fpm restart\nit worked for me. ",
    "Tim456": "Thank you for the quick reply. I didn't know that I had to include the 'bin' dir as well. Just tested everything locally and on the hosting without any problems. \nThank you.. ",
    "gracedigital": "Yes. That did it.\n. ",
    "piernik": "Maybe adding extra method? deleteItemsByTagsAll?\n. Thanks very much... I'll test it.\nEDIT: It passed first test - great work!. I set new item with time to be valid set('key','value', 10);.\nAfter 15 seconds I fetch it with get('key'). I get value instead of null as it should be invalid.. Yes - for tests I give sleep(15). But in Psrl6Adapter I see no $item->isExpired() call.\nBTW: great class name ;). ",
    "git-webmaster": "Thanks for the reply!\nAccording to #326, there is no tested version of this driver, so im looking foreard to SSDB.\nPlease answer one question concerning implementation of ssdb driver: is this driver is using disk to store cached objects for long time, or it uses only available free ram memory, and resets every power-off? Thanks!. Thank you.\nI Will now close the issue.. I use code below to set tags (2 tags for this key):\n$pfc_html->set($pfc_compressed_page)->expiresAfter(315360000)->addTags([$domain['cache_tag'], 'category']);. ssdb logs:\n1) Creating 2 objects with keys //example.com/c/united-states/ca/los-angeles/cafes (1), //example.com/c/united-states/ca/los-angeles/bakeries (2) (thats an comressed html page) with tags ['los-angeles/cafes', 'category'] (1) and ['los-angeles/bakeries', 'category'] (2):\n2017-01-04 19:37:30.699 [DEBUG] server.cpp(246): new link from 127.0.0.1:58016, fd: 18, links: 1\n2017-01-04 19:37:30.700 [DEBUG] server.cpp(340): w:0.021,p:1.063, req: flushdb kv, resp: ok\n2017-01-04 19:37:30.700 [DEBUG] server.cpp(415): fd: 18, read: 0, delete link, s:0.001\n2017-01-04 19:37:36.247 [DEBUG] server.cpp(246): new link from 127.0.0.1:58018, fd: 18, links: 1\n2017-01-04 19:37:36.248 [DEBUG] server.cpp(340): w:0.049,p:0.019, req: get //example.com/c/united-states/ca/los-angeles/cafes, resp: not_found\n2017-01-04 19:37:37.264 [DEBUG] server.cpp(340): w:0.040,p:0.164, req: setx [51] [15346] 1798907857, resp: ok 1\n2017-01-04 19:37:37.264 [DEBUG] server.cpp(340): w:0.039,p:0.012, req: get _TAG_los-angeles/cafes, resp: not_found\n2017-01-04 19:37:37.265 [DEBUG] server.cpp(340): w:0.015,p:0.010, req: get _TAG_category, resp: not_found\n2017-01-04 19:37:37.265 [DEBUG] server.cpp(340): w:0.034,p:0.060, req: setx _TAG_los-angeles/cafes [228] 1798907857, resp: ok 1\n2017-01-04 19:37:37.265 [DEBUG] server.cpp(340): w:0.008,p:0.050, req: setx _TAG_category [228] 1798907857, resp: ok 1\n2017-01-04 19:37:37.271 [DEBUG] server.cpp(415): fd: 18, read: 0, delete link, s:1.023\n2017-01-04 19:37:43.108 [DEBUG] server.cpp(246): new link from 127.0.0.1:58020, fd: 18, links: 1\n2017-01-04 19:37:43.108 [DEBUG] server.cpp(340): w:0.024,p:0.041, req: get //example.com/c/united-states/ca/los-angeles/bakeries, resp: not_found\n2017-01-04 19:37:43.870 [DEBUG] server.cpp(340): w:0.018,p:0.182, req: setx [54] [15980] 1798907863, resp: ok 1\n2017-01-04 19:37:43.871 [DEBUG] server.cpp(340): w:0.031,p:0.021, req: get _TAG_los-angeles/bakeries, resp: not_found\n2017-01-04 19:37:43.871 [DEBUG] server.cpp(340): w:0.017,p:0.011, req: get _TAG_category, resp: ok [228]\n2017-01-04 19:37:43.871 [DEBUG] server.cpp(340): w:0.009,p:0.059, req: setx _TAG_los-angeles/bakeries [231] 1798907863, resp: ok 1\n2017-01-04 19:37:43.871 [DEBUG] server.cpp(340): w:0.009,p:0.042, req: setx _TAG_category [303] 1798907863, resp: ok 1\n2017-01-04 19:37:43.878 [DEBUG] server.cpp(415): fd: 18, read: 0, delete link, s:0.770\n2) Trying to delete them using tag \"category\":\n2017-01-04 19:38:50.677 [DEBUG] server.cpp(246): new link from 127.0.0.1:58022, fd: 18, links: 1\n2017-01-04 19:38:50.678 [DEBUG] server.cpp(340): w:0.040,p:0.024, req: get _TAG_category, resp: ok [303]\n2017-01-04 19:38:50.678 [DEBUG] server.cpp(340): w:0.040,p:0.024, req: get //example.com/c/united-states/ca/los-angeles/cafes, resp: ok [15346]\n2017-01-04 19:38:50.678 [DEBUG] server.cpp(340): w:0.074,p:0.034, req: get //example.com/c/united-states/ca/los-angeles/bakeries, resp: ok [15980]\n2017-01-04 19:38:50.679 [ERROR] t_zset.cpp(341): key too long!\n2017-01-04 19:38:50.679 [DEBUG] server.cpp(340): w:0.020,p:0.288, req: del [15137], resp: ok 1\n2017-01-04 19:38:50.679 [ERROR] t_zset.cpp(341): key too long!\n2017-01-04 19:38:50.680 [DEBUG] server.cpp(340): w:0.021,p:0.264, req: del [15768], resp: ok 1\n2017-01-04 19:38:50.680 [DEBUG] server.cpp(415): fd: 18, read: 0, delete link, s:0.002\nAs you can see, there are errors:\n2017-01-04 19:38:50.679 [ERROR] t_zset.cpp(341): key too long!\n2017-01-04 19:38:50.679 [ERROR] t_zset.cpp(341): key too long!\nResult: delete fails, objects are still in cache.. According to http://ssdb.io/docs/limit.html - Max key length    200 bytes\nBut, as far as i understand \"Tag\" is a \"value\", which is - Max value length    31MB\nWill you please clarify what should i do in order not to get this error?\nHow do you implemented TAG search and structure in terms of key-value?\nThanks!. Thanks, hope we will resolve this issue.\nOne more thing:\nJust tried to use md5(url) as key (md5 always has length = 32 symbols) (which is less then 200 bytes SSDB key limit).\nBut nothing changes: create: setx() - resp: ok 1, delete fails with [ERROR] t_zset.cpp(341): key too long!. Lightning fast :)\nWill now check it, and respond.. Work as expected, issue closed.\nWill you please update packagist? I want to update my production server using composer.\np.s.\nthanks for being so fast to resolve bugs :)\nMuch appreciated. Thank you!\nClosing issue.. Hi, reopened issue due to this:\nUpdated my production server with composer to v. 5.0.13, and cache cleaning by tag does not seems to be working.\nLooked into local sources, that i got from composer (packagist):\nprotected function driverDelete(CacheItemInterface $item)\n    {\n.....\n            return $this->instance->del($item->get());\n.....\n    }\nwhile here in github actual is:\nprotected function driverDelete(CacheItemInterface $item)\n    {\n....\n            return $this->instance->del($item->getEncodedKey());\n.....\n    }\nPlease, update packagist with current, actual version.\nI use composer to update all packages, and i can't make this changes manually - they will be rewrited after next update.\nThank you.. According to https://packagist.org/packages/phpfastcache/phpfastcache#5.0.13, its package was uploaded 2017-01-01, while this isuue was resolved at 2017-01-04.. Also:\nDo you recommend to use \"phpFastCache/phpFastCache\": \"^6.0\" with ssdb driver in production, or not?. Thanks, Georges!\nWill check later, and reopen if any issues occurred.\nNow closing this issue.. I have approx. 10 GB of data cached by this time (approx. 2.5% of planned use)\nMy ssdb.conf:\nssdb-server config\nMUST indent by TAB!\nrelative to path of this file, directory must exists\nwork_dir = ./var\npidfile = ./var/ssdb.pid\nserver:\n    ip: 127.0.0.1\n    port: 8888\n    # bind to public ip\n    #ip: 0.0.0.0\n    # format: allow|deny: all|ip_prefix\n    # multiple allows or denys is supported\n    #deny: all\n    #allow: 127.0.0.1\n    #allow: 192.168\n    # auth password must be at least 32 characters\n    #auth: very-strong-password\nreplication:\n    binlog: yes\n    # Limit sync speed to *MB/s, -1: no limit\n    sync_speed: -1\n    slaveof:\n        # to identify a master even if it moved(ip, port changed)\n        # if set to empty or not defined, ip:port will be used.\n        #id: svc_2\n        # sync|mirror, default is sync\n        #type: sync\n        #host: localhost\n        #port: 8889\nlogger:\n    level: warn\n    output: log.txt\n    rotate:\n        size: 1000000000\nleveldb:\n    # in MB\n    cache_size: 5000\n    # in KB\n    block_size: 32\n    # in MB\n    write_buffer_size: 64\n    # in MB/s\n    compaction_speed: 1000\n    # yes|no\n    compression: yes\n. FYI:\nInstalled CouchBase and made some initial testing - and CouchBase driver performs well, for now it writes 10x LESS data on disk every second (thus not making server LA high), use MUCH less CPU, and generally perfoms much better.\nI will switch to CouchBase, will test it for couple of days, and will report here if there will be some issues.\nAnd I do not recommend to use SSDB driver for write-heavy environment with current driver, looks like it is not in \"High performances drivers\" as said in Readme.. >Can you tell me how is Redis doing it please ?\nUnfortunatelly, im not able to test Redis on real data due to some reasons.\nAlso Redis is not persistent, and requires \"data size = ram size\" so i can't use it.\n\nAlso can you try to enabled debug on Ssdb driver please ?\n\nYou want me to set it to true, and then test ssdb perfomance again, or some log to provide?. Also, im continue to load test CouchBase driver.\nBy this time (several hours of 15-20 req/s) it started to consume more CPU, writes approx. same amount of data to disc as ssdb, but it utilize much more iops of my ssd (1000-1500) compare to SSDB (200-250), according to iostat 1.\nBut main thing: throughput is stable. Im not getting any spikes in responce time, it looks stable (see image).\nAnd because my main concern is user responce time, I will use CouchBase :)\n\n  . >However, glad to see that CouchBase is working fine for you, you are the first real tester :)\nMore information on CouchBase:\nApprox. on 1 mil. items in cache and 80% fill of avail. to bucket RAM (3.3 GB of 4 GB) it started to throw Errors on $pfc_instance->save($html): \nUncaught exception 'CouchbaseException' with message 'LCB_E2BIG: The object requested is too big to store in the server' in pcs://ext/couchbase/CouchbaseBucket.class.php:145\nAnd there is nothing to do with the \"object size\", it throws this exception even when i try to store \"1\"->\"2\".\nBut, despite this error it actually STORES data, and after next refresh im able to get object from bucket.\nSo right now im doing so:\ntry {\n    $pfc_instance->save($html)\n} catch (Exception $e) {\n    // do nothing\n}\nJust catching this exception and doing nothing.\nBeside this error, everything work smoothly, but im a bit confused about it - now im not sure whether it going to work as expected in the future, or not.\nIm using Couchbase Server Version: 4.5.0-2601 Community Edition (build-2601) (latest at the moment)\n. Is there a chance to see MongoDB driver for php7 anytime soon? \nLast chance for me to see a \"stable\" solution in all meanings.\nAccording to #310 - it looks like that you have some code to test. \nMaybe you need something i can help you with? . >How huge is your $html variable (serialized) ?\nIt is far below the CouchBase limit (that is 20 mb).\nIt is an usual html page, and i gzip it before storing - so, resulting object to store is ~300-400 kb.\nAnd i use \"//example.com/[page_path]\" as key.\nError is not depend on $html size - because i was forcing variable to be short: $html = 'test'; before storing and was getting the same error.\nAlso strange thing is that CouchBase was working smoothly couple of hours, and then suddenly 100% of request  started to throw this error on the url first load (when im firing $instance->save($html);). See image below (red background on a graph is an error load).\n\nAlso, one more concern - as you see, php execution time (blue) is steadily grows with the bucket size.\nAnd now i have 1.5 mil. objects in cache, but going to have 100 mil.\nHave you done any tests of Files driver performance on huge amount of files?\nIm started to thinking that this is not as bad as i think of it before.\nModern linux will easily sustain 100 mil. of files on EXT4, and maybe random access time on SSD will be reasonable? Not sure about deletion by tag. Do you scan every file to determine its tag on ->deleteItemsByTag()? What do you think about it?\n. >Are you using a memcached bucket ?\nNo, couchbase bucket with this settings:\nAccess Control: Authentication \nReplicas: disabled \nCompaction: Not active \nCache Metadata: Full Ejection \nDisk I/O priority: High\n\nCan you try to replace the cache key by a md5 version of the key ?\n\nAlready tried. Also, i tried to md5 tags - and always get same exception.\nMaybe, there is some problem with CouchBase PHP SDK.\n\nSSDB\n\nAlso made some more tests with ssdb.\nAs you know, SSDB uses LevelDB to store data on disk, so i made some optim. there (turn off compression, more write buffer, more block size due to my avg. object size):\nleveldb:\n    # in MB\n    cache_size: 5000\n    # in KB\n    block_size: 256\n    # in MB\n    write_buffer_size: 128\n    # in MB/s\n    compaction_speed: 100\n    # yes|no\n    compression: no\nAnd it started to performs a bit better.\nBut still, average SSDB \"responce time\" from php is pretty high under even small load (5-7 req\\s, ssdb responce: >500 ms) so i decided to use CouchBase, that is, at least, has stable responce time (and i hope there will be no problems with inserting objects to cache further, despite the thrown exception).\np.s.\n\nI need to understand why Ssdb is ressource-greedy for you as I tested it and did not see something similar.\n\nIf you want, load it with ~15 GB of cache data, and check what happens on 5-10 request\\second.\nFeel free to close this issue.\nThank you!\n. >When you created the bucket do you have selected Couchbase cluster ?\nYes.\n\nAbout CouchBase, I have no idea why this is error is thrown, I would appreciate to be sure that it's not caused by PhpFastCache code.\n\nCouchBase has limitation in 250 bytes for \"primary key\" (id) length:\n```\nDocument IDs are assigned by application and to be valid they must:\n\nConform to UTF-8 encoding\nHave no more than 250 bytes\n```\n\nhttp://docs.couchbase.com/developer/dev-guide-3.0/keys-values.html\nSo, maybe it would be useful to convert all ids to MD5 before storing, just as you did it in SSDB driver.\nNow i am doing it by myself, if string length in bytes by strlen() > 250. \n(In my case key length is not the reason of that Exception, but lack of MD5 may cause some troubles for other people, because now it is possible to pass ID of any length to couchbase driver).\nAs for other things that i tried, (deletion by tag \\ key, upsert) - everything work as expected.. >I'm gonna import it in the V5\nGreat, that will fix some possible problems for future users.\nBut be aware that i will not be able to test it :)\nAt this moment i have loaded approx. ~10 mil. of items to cache with non-md5 keys (due to their length < 250 bytes), and will release application soon, so i will freeze phpfastcache version on 5.0.14, because everything work as expected now.\nAnd i don't think that there will be some problems with that MD5 func addition.\n\nAlso as of the V6, we now support Cassandra, you may want to try it out.\n\nI will use it in my next projects, hope to see V6 release in a couple of months.\nThanks for the great lib :). Hello @Geolim4 \nSorry, not sure if i get you right - you want me to make some changes, or make a pull request to another branch?\nThanks.. Ok, i will make new PR.\nI am using this exact code right now in production on https://unilocal.net with new CouchBase server 5.1.0, so it is fairly tested.\n. Looks like you have changed the driver for CouchBase in V7.\nAnd i think that MAYBE your new code will not work with CouchBase 5.\nExample:\nyou use \n$authenticator = new \\Couchbase\\ClassicAuthenticator();\nAccording to url: \nhttps://forums.couchbase.com/t/how-to-connect-to-the-server-correctly/13956\nThis will not work with CouchBase 5 and you have to use \n$authenticator = new \\Couchbase\\PasswordAuthenticator();, which i also use.\nAlso, you use this approach:\n$authenticator = new \\Couchbase\\ClassicAuthenticator();\n            $authenticator->cluster($clientConfig->getUsername(), $clientConfig->getPassword());\n            //$authenticator->bucket('protected', 'secret');\n            $this->instance->authenticate($authenticator);\nwhile i use this:\n$authenticator = new \\Couchbase\\PasswordAuthenticator();\n            $authenticator->username($username)->password($password);\n            $cluster = new CouchbaseClient(\"couchbase://\" . $host); \n            $cluster->authenticate($authenticator);\n            $this->instance = $this->instance ?: $cluster;\nUnfortunatly, i am not able to test that new code you have, because i have different one and not allowed  to break things on my side, so i think that PR with my code is no longer required.\nIf you wish, i may change this connection function to new SDK, but this changes will not be tested.. Good morning @Geolim4\nHere is the new 2 GB RAM Linode i just ordered:\n172.104.xxx.xxx\nroot:xxxxxx\nIt has CouchBase Enterprise Edition 5.1.0 build 5552, apache2 mod_php, php 7.2 with composer installed.\nWeb root is /var/www/html\nTest file with couchbase connection and credentials: http://172.104.xxx.xxx/cb.php\nCouchbase admin is at: http://172.104..xxx.xxx:8091 login:xxx same.\nFeel free to do anything you need with this box.\nWhen you finish testing - please let me know, i will delete this linode in order not to waste money :). Sent you a mail.\nNo problem, im really enjoying your software and hope to see V7 to be released soon :)\nThank you.. ",
    "mynakturk": "i want to clean up expired caches. is there any function for that?. thanks \ud83d\udc4d . ",
    "jajm": "Output of var_dump($_SERVER) :\narray(24) {\n  'HOME' =>\n  string(11) \"/home/omeka\"\n  'LANG' =>\n  string(11) \"fr_FR.UTF-8\"\n  'LOGNAME' =>\n  string(5) \"omeka\"\n  'MAIL' =>\n  string(15) \"/var/mail/omeka\"\n  'OLDPWD' =>\n  string(17) \"/home/omeka/omeka\"\n  'PATH' =>\n  string(117) \"/home/omeka/.local/bin:/home/omeka/bin:/home/omeka/.local/bin:/home/omeka/bin:/usr/local/bin:/usr/bin:/bin:/usr/games\"\n  'PWD' =>\n  string(25) \"/home/omeka/omeka/plugins\"\n  'SHELL' =>\n  string(8) \"/bin/zsh\"\n  'SHLVL' =>\n  string(1) \"2\"\n  'SSH_TTY' =>\n  string(10) \"/dev/pts/4\"\n  'TERM' =>\n  string(15) \"screen-256color\"\n  'TMUX' =>\n  string(29) \"/tmp/tmux-1001/default,2687,0\"\n  'TMUX_PANE' =>\n  string(2) \"%1\"\n  'USER' =>\n  string(5) \"omeka\"\n  '_' =>\n  string(12) \"/usr/bin/php\"\n  'PHP_SELF' =>\n  string(40) \"/home/omeka/src/omeka-cli/omeka-cli.phar\"\n  'SCRIPT_NAME' =>\n  string(40) \"/home/omeka/src/omeka-cli/omeka-cli.phar\"\n  'SCRIPT_FILENAME' =>\n  string(40) \"/home/omeka/src/omeka-cli/omeka-cli.phar\"\n  'PATH_TRANSLATED' =>\n  string(40) \"/home/omeka/src/omeka-cli/omeka-cli.phar\"\n  'DOCUMENT_ROOT' =>\n  string(0) \"\"\n  'REQUEST_TIME_FLOAT' =>\n  double(1484060736.2255)\n  'REQUEST_TIME' =>\n  int(1484060736)\n  'argv' =>\n  array(3) {\n    [0] =>\n    string(40) \"/home/omeka/src/omeka-cli/omeka-cli.phar\"\n    [1] =>\n    string(2) \"dl\"\n    [2] =>\n    string(4) \"test\"\n  }\n  'argc' =>\n  int(3)\n}\n\n. If by \"the full phar:// path\" you mean the value of __FILE__, it's phar:///home/omeka/src/omeka-cli/omeka-cli.phar/vendor/phpfastcache/phpfastcache/src/phpFastCache/Util/Directory.php. Outside the phar, in $HOME/.cache/omeka-cli (full path is $HOME/.cache/omeka-cli/cli/Files)\nI configured the cache manager like this:\nphp\nCacheManager::setDefaultConfig(array(\n    'path' => $cacheDir, // $cacheDir = getenv('HOME') . '/.cache/omeka-cli'\n));\n. No it doesn't work.\n$path doesn't contain phar:// in my case. It's the __FILE__ constant that does.\nBut adding\nphp\n$__FILE__ = preg_replace('~^(([a-z0-9\\-]+)://)~', '', $__FILE__);\nafter\nphp\n$__FILE__ = __FILE__; // allows to dereference char\nworks. Thanks!. ",
    "moelfassi": "Thank you George,\nThis is what i need, just one more thing, how can i replace (import) library files ? do i keep the same structure or i have to change something.\nmy current phpfastcache V3 files:\n\nThank you.\n. Thank you Georges!. ",
    "LaFa777": "almost...\n```\nD:\\projects\\phpfastcache\\tests>php Psr16Adapter.test.php Devfalse\n[PHPFASTCACHE API V1.2.4]\n[Begin Test: 'Psr16Adapter helper']\n\nPHP Fatal error:  Uncaught Error: Undefined class constant 'DRIVER_TIME_WRAPPER_INDEX' in D:\\projects\\phpfastcache\\src\\phpFastCache\\Drivers\\Devfalse\\Driver.php:85\nStack trace:\n0 D:\\projects\\phpfastcache\\src\\phpFastCache\\Core\\Pool\\CacheItemPoolTrait.php(76): phpFastCache\\Drivers\\Devfalse\\Driver->driverRead(Object(phpFastCache\\Drivers\\Devfalse\\Item))\n1 D:\\projects\\phpfastcache\\src\\phpFastCache\\Helper\\Psr16Adapter.php(175): phpFastCache\\Drivers\\Devfalse\\Driver->getItem('test-key')\n2 D:\\projects\\phpfastcache\\tests\\Psr16Adapter.test.php(20): phpFastCache\\Helper\\Psr16Adapter->has('test-key')\n3 {main}\nthrown in D:\\projects\\phpfastcache\\src\\phpFastCache\\Drivers\\Devfalse\\Driver.php on line 85\n```. Wow, so fast :) all worked, thanks! . ",
    "Grayda": "Ah yes, auto-deletion makes sense. Never really thought about it like that.\nAlso database never occurred to me. I'll do that instead. Thanks!. ",
    "shefik": "What do you mean by using tags?. ",
    "landy2005": "I use php 7.0/7.1 and also recommended for our users upgrade to php 5.6/7.0 :)\nAnd I complete agree with your reasons, but..\n... our users have systems with such old php, and not always possible upgrade to newer php versions..\nanyway thx for your work, I will try to just disable caching for old php versions.. ",
    "girishkc": "Definitely.\nLet me know how can I help.. ",
    "Tazer": "Hello @Geolim4 , \nThanks for your answer.\nYes, your correct it's not only focused on performance. Maybe the feature is better as an \"extension\" or a separate library that just talks with phpfastcache. Cause  I'm after what stackoverflow wrote about in the architecture summary: https://nickcraver.com/blog/2016/02/17/stack-overflow-the-architecture-2016-edition/#cache--pubsub-redis . Really like the approach where you have redis (or some other cache that supports the behavior) pub/sub and keep your in-memory caches up 2 date across servers.\nI'm from the .net world and there is one library that have implemented above. (http://cachemanager.net/). But haven't found any in php. So that's way I give it a shot here in this library and see if there is any interest or plans for something like that. \ud83d\ude04 \nSo maybe my request is more about cache synchronization instead of chaining.\nhttp://cachemanager.net/Documentation/Index/cachemanager_synchronization. I think the events (EventManager) can help me accomplish what I want \ud83d\udc4d  , I will close this and if I get something working I will post about it.. ",
    "hanabadler": "Hi\ni used the latest download from GITHUB.\nthanks. thank you.. i used the latest wordpress version.. ",
    "samuelflor": "I'm using master final.. I tried to implement.  I used in $config array fallback, path, host, port, password.  I get error Uncaught RedisException: Redis Server went away in ...Driver.php on line 80.. PHP Parse error:  syntax error, unexpected '[' in file path - phpFastCache\\src\\autoload.php on line 23  PHPFastCache 4.3.18 PHP 5.3.10. ",
    "pioc92": "ok Georges, sorry. ;-)\nThis is the link to the documentation https://documentation.online.net/en/web/web-hosting/cloud-management/memcached\nredis is at the end of the page\nThanks. Predis don't work too, it's the same problem.\nI tested your patch this morning, you have just to remove } at line 40.\nIt's ok, i can connect to redis!!!!. No i modify the file with sublime text. You could make th\u00e9 same patch for memcached. Same problem with memcached after applying your memcached TTL issue. Cache not saved.. Memcached.. Yes but how to send privates messages on github?. email sent. Ok Geolim4, merci pour tout ;-). ",
    "quamis": "Had the same problem. The error message is indeed misleading when relative paths are used.. ",
    "Fiorinol": "I get the same result as before. I never to get \"Read from cache\" when reloading the page. This is the code currently;\nThe port number is different because the one I showed in the example was a dummy.\n$InstanceCache = CacheManager::getInstance(\"memcached\", ['memcache' =>[ ['host' => \"127.0.0.1\",'port' => 3452]]]);\n$key = \"product_page\";\n$CachedString = $InstanceCache->getItem($key);\nif (is_null($CachedString->get())) {\n    //$CachedString = \"APC Cache --> Cache Enabled --> Well done !\";\n    // Write products to Cache in 10 minutes with same keyword\n    $CachedString->set(\"Memcached Cache --> Cache Enabled --> Well done !\")->expiresAfter(120);\n    $InstanceCache->save($CachedString);\n    echo \"FIRST LOAD // WROTE OBJECT TO CACHE // RELOAD THE PAGE AND SEE // \";\n    echo $CachedString->get();\n} else {\n    echo \"READ FROM CACHE // \";\n    echo $CachedString->get();\n}\nAnd on the centos server, using ps -aux shows that memcached is running on port 3452;\nhttp://i.imgur.com/hMmyd2B.png\nThe following basic memcached code also functions properly;\n```\n$mem = new memcached();\n$mem->addServer(\"127.0.0.1\", 3452);\n$result = $mem->get(\"Test\");\nif ($result) {\necho $result;\n} else {\necho \"Test key not found, adding key\";\n$mem->set(\"Test\", \"I found a match, memcache is working\") or die(\"Nothing Saved...\");\n}\n```\nI've tried setting memcached to its default port and it works properly;\nhttp://i.imgur.com/lAmyAzx.png\nBut I don't want to use the default port.\nI've noticed as you mentionned in the source that it searches for a \"memcache\" key in the config array. I've looked at the Memcached driver, and it contains the following function:\n```\nprotected function driverConnect()\n    {\n        $servers = (!empty($this->config[ 'memcache' ]) && is_array($this->config[ 'memcache' ]) ? $this->config[ 'memcache' ] : []);\n        if (count($servers) < 1) {\n            $servers = [\n              ['127.0.0.1', 11211],\n            ];\n        }\n    foreach ($servers as $server) {\n        try {\n            if (!$this->instance->addServer($server[ 0 ], $server[ 1 ])) {\n                $this->fallback = true;\n            }\n            if(!empty($server[ 'sasl_user' ]) && !empty($server[ 'sasl_password'])){\n                $this->instance->setSaslAuthData($server[ 'sasl_user' ], $server[ 'sasl_password']);\n            }\n        } catch (\\Exception $e) {\n            $this->fallback = true;\n        }\n    }\n}\n\n```\nThis line in particular confuses me because it attempts to get key 0 and key 1, which are not assigned in the array, because we set the keys 'host' and 'port';\n$this->instance->addServer($server[ 0 ], $server[ 1 ]\nShouldn't this be\n$this->instance->addServer($server[ 'host' ], $server[ 'port' ]\nThis should follow the sasl authentification I think (Which use 'sasl_user' and 'sasl_password'), it makes little sense to use indexed keys for the host/port, but then use associative keys for sasl. Otherwise I'd need to instantiate the CacheManager as follows I suppose;\n$InstanceCache = CacheManager::getInstance(\"memcached\", ['memcache' =>[ [\"127.0.0.1\", 3333]]]);\nThis really ought to be part of the memcached example or be part of the documentation.. I've yet to test it, I will do so at the beginning of next week.. ",
    "Salvoxia": "Hi,\nI'll chime in on this since I think that commit introduced a problem.\nI'm developing with v6 RC4 and tried to connect to Memcache with the Memcache driver.\nI'm getting\nFatal error: Call to a member function addServer() on null in /var/www/edk405/common/phpfastcache/src/phpFastCache/Drivers/Memcache/Driver.php on line 146\n\nSeems to me that the driver's $instance is never initialized, since that line has been removed without a proper replacement: \nhttps://github.com/PHPSocialNetwork/phpfastcache/commit/6bde602ddcdda997c127e08569f3494f75cf1460#diff-3e4e48ff5e83a812303e58ac64ce8403L53\nRe-Adding that line (e.g. in driverConnect()) solves it.\nIs this an oversight or am I missing something?\nBest Regards,\nSalvoxia. ",
    "jcperez2405": "I don't have permission to install new versions of PHP, and the 5.4.19 is the higher version my hosting can provide me. So, downgrading to branch 4 was my solution.\nThnxs. ",
    "sanishan": "anybody? please check my issue!. ",
    "getchu": "  ->addTag('Mobile')\n  ->addTag('Android');\n\ngetItemsByTag\ngetItemsByTags\n..............................................................\nI see...... ",
    "giacomodeglinnocenti": "Just seen that it has been moved to \"docs\" directory. Please update Readme/home page. I confirm that using setDefaultConfig() the problem is solved.\nI still don't know where to get the version from.. ",
    "PerWiklander": "I'm sorry, I missed the line that does\n$driver = self::standardizeDriverName($driver);.\nI'm not sure how securityKey is related though?. I guess you can close this now.. ",
    "mbiebl": "I've commented out lines 66-69. The results are basically the same, i.e. no noticable improvement.\n. > It seem that the performances are better when making use of saveDeferred then commit().\n\nCan you try this in your use case ?\n\nUnfortunately I can't make use of safeDeferred() as in my \"real\" code, I don't actually run a loop, but I have many individual http requests.\nThe code I posted in https://github.com/PHPSocialNetwork/phpfastcache/issues/463#issue-230215975 is simply to illustrate the problem.. > Try by adding a simple return; statement before the $eventName re-assignation here:\nDoesn't make a difference either.. can you be a bit more specific which info you need?\nAs you can see above, I already have two loops, one with an empty cache which calls save, the second with a full cache, which doesn't need to call save.\nThere is a performance regression in both cases. Another interesting observation: If I remove $cache->clear(); i.e. keep the cache on disk, a subsequent run with 5.0.16 takes 10s (vs 15s after nuking the cache).\nWith 6.0.1 it takes 17s even if there is already a cache on disk.. @Geolim4 I'm currently not using other backends aside from wincache and files, so I can't tell if there's a regression.. Hi there! What kind of information are you missing from my side? If there is, can you help me get it for your?. I'm not using any other backends so far, i.e. I don't have redis or other backends installed. Is this crucial to debug the regressions in the files/wincache backend? I'm asking, because I'm not sure how much work it would be to setup said backends.. I've been running the test on Linux (Debian Sid, with php7 and memcached 1.4.33). The performance regressions are in the same ballpark as with the files and wincache backend\nv5.0.16\nfirst run with empty cache: 13.802587032318\nsecond run with full cache: 0.87336182594299\nv6.0.1\nfirst run with empty cache: 15.565384149551\nsecond run with full cache: 1.3187818527222\n. You can use the test script I attached to https://github.com/PHPSocialNetwork/phpfastcache/issues/463#issue-230215975 if you want to reproduce the results yourself. Tried to run dev-master via composer.json:\n```\n[michael@pluto phpfastcache-perf (master)]$ composer  update\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\nProblem 1\n    - The requested package phpfastcache/phpfastcache dev-master exists as phpfastcache/phpfastcache[2.4.2, 2.4.3, 3.0.0, 3.0.1, 3.0.10, 3.0.11, 3.0.12, 3.0.13, 3.0.14, 3.0.15, 3.0.16, 3.0.17, 3.0.18, 3.0.19, 3.0.2, 3.0.20, 3.0.21, 3.0.22, 3.0.23, 3.0.24, 3.0.25, 3.0.26, 3.0.27, 3.0.28, 3.0.3, 3.0.4, 3.0.5, 3.0.6, 3.0.7, 3.0.8, 3.0.9, 3.1.0, 3.1.1, 4.0, 4.0.1, 4.0.10, 4.0.11, 4.0.12, 4.0.13, 4.0.14, 4.0.15, 4.0.16, 4.0.17, 4.0.18, 4.0.2, 4.0.2beta1, 4.0.3, 4.0.3-beta1, 4.0.4, 4.0.5, 4.0.6, 4.0.7, 4.0.8, 4.0.9, 4.1, 4.1.1, 4.2.1, 4.2.2, 4.2.3, 4.2.4, 4.3, 4.3.1, 4.3.10, 4.3.11, 4.3.12, 4.3.13, 4.3.14, 4.3.15, 4.3.16, 4.3.17, 4.3.18, 4.3.2, 4.3.3, 4.3.4, 4.3.5, 4.3.6, 4.3.7, 4.3.8, 4.3.9, 5.0.0, 5.0.0-alpha1, 5.0.0-alpha2, 5.0.0-beta1, 5.0.0-beta2, 5.0.0-rc1, 5.0.0-rc2, 5.0.0-rc3, 5.0.1, 5.0.10, 5.0.11, 5.0.12, 5.0.13, 5.0.14, 5.0.15, 5.0.16, 5.0.2, 5.0.3, 5.0.4, 5.0.5, 5.0.6, 5.0.7, 5.0.8, 5.0.9, 6.0.0, 6.0.0-alpha, 6.0.0-alpha2, 6.0.0-beta1, 6.0.0-beta2, 6.0.0-rc1, 6.0.0-rc2, 6.0.0-rc3, 6.0.0-rc4, 6.0.1, dev-final, v4.x-dev, v5.x-dev, v7.x-dev] but these are rejected by your constraint.\n[michael@pluto phpfastcache-perf (master)]$ cat composer.json \n{\n    \"require\" : {\n        \"phpFastCache/phpFastCache\" : \"dev-master\"\n    }\n}\n[michael@pluto phpfastcache-perf (master)]$\n. I added\"minimum-stability\" : \"dev\"to my composer.json, but that didn't work. Apparently I'm doing something wrong. I see though that you you have released 6.0.2, so I ran a test against that:\nv5.0.16\nfirst run with cold/empty cache: 15.171237945557, misses: 100000\nsecond run with hot/full cache: 0.80318379402161, misses: 0\nfirst run with cold/empty cache: 15.268904924393, misses: 100000\nsecond run with hot/full cache: 0.82464909553528, misses: 0\nfirst run with cold/empty cache: 15.326946020126, misses: 100000\nsecond run with hot/full cache: 0.81104683876038, misses: 0\nv6.0.1\nfirst run with cold/empty cache: 17.714466094971, misses: 100000\nsecond run with hot/full cache: 1.2769951820374, misses: 0\nfirst run with cold/empty cache: 17.475311994553, misses: 100000\nsecond run with hot/full cache: 1.1392340660095, misses: 0\nfirst run with cold/empty cache: 18.510245084763, misses: 100000\nsecond run with hot/full cache: 1.3172750473022, misses: 0\nv6.0.2\nfirst run with cold/empty cache: 16.973572015762, misses: 100000\nsecond run with hot/full cache: 0.86043882369995, misses: 0\nfirst run with cold/empty cache: 16.6197681427, misses: 100000\nsecond run with hot/full cache: 0.84666991233826, misses: 0\nfirst run with cold/empty cache: 16.184941053391, misses: 100000\nsecond run with hot/full cache: 0.84634685516357, misses: 0\n```\nIt's better, that not quite back to v5. Ok, got it. Thanks a lot for your support so far @Geolim4 !. I certainly feel like this is a bug.It's not a problem of sqlite itself, but how the sqlite db is created in the first place.\nFwiw, I've also tried the files backend, and it was even worse in that regard.. as for ssdb, its upstream authors do not recommend to run it on windows.\nmemcache(d)  is not really an option on Windows either.\nredis proved to perform really badly with all the overhead caused by the HTTP based API.. again, it's not about sqlite itself behaving badly with concurrent access.\nIt's about how the sqlite db is created initially.. Regarding the files backend, I've just reran the tests:\n```\n[02-Jul-2018 23:38:50 UTC] PHP Fatal error:  Uncaught ErrorException: mkdir(): File exists in C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Core\\Pool\\IO\\IOHelperTrait.php:107\nStack trace:\n0 [internal function]: exception_error_handler(2, 'mkdir(): File e...', 'C:\\src\\Gal2Go-s...', 107, Array)\n1 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Core\\Pool\\IO\\IOHelperTrait.php(107): mkdir('C:\\Windows\\TEMP...', 511, true)\n2 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Drivers\\Files\\Driver.php(59): Phpfastcache\\Drivers\\Files\\Driver->getPath()\n3 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Core\\Pool\\DriverBaseTrait.php(70): Phpfastcache\\Drivers\\Files\\Driver->driverCheck()\n4 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Drivers\\Files\\Driver.php(51): Phpfastcache\\Drivers\\Files\\Driver->__parentConstruct(Object(Phpfastcache\\Drivers\\Files\\Config), '1921810a5f544cc...')\n5 C:\\src\\Gal2Go in C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Core\\Pool\\IO\\IOHelperTrait.php on line 107\n[02-Jul-2018 23:38:50 UTC] PHP Fatal error:  Uncaught ErrorException: mkdir(): File exists in C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Core\\Pool\\IO\\IOHelperTrait.php:107\nStack trace:\n0 [internal function]: exception_error_handler(2, 'mkdir(): File e...', 'C:\\src\\Gal2Go-s...', 107, Array)\n1 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Core\\Pool\\IO\\IOHelperTrait.php(107): mkdir('C:\\Windows\\TEMP...', 511, true)\n2 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Drivers\\Files\\Driver.php(59): Phpfastcache\\Drivers\\Files\\Driver->getPath()\n3 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Core\\Pool\\DriverBaseTrait.php(70): Phpfastcache\\Drivers\\Files\\Driver->driverCheck()\n4 C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Drivers\\Files\\Driver.php(51): Phpfastcache\\Drivers\\Files\\Driver->__parentConstruct(Object(Phpfastcache\\Drivers\\Files\\Config), '1921810a5f544cc...')\n5 C:\\src\\Gal2Go in C:\\src\\Gal2Go-server\\localhost\\vendor\\phpfastcache\\phpfastcache\\lib\\Phpfastcache\\Core\\Pool\\IO\\IOHelperTrait.php on line 107\n```\nSo it seems to suffer from a similar issue. Turning on secureFileManipulation didn't help. Have you seen the response regarding the Files backend? It seems to have the same problem. \nAnd yes, I'm restricted to the Windows Plattform/IIS for running this particular application and docker etc is not really an option here.\nNothing so far really indicates though that this is really a problem which is specific to Windows though. . I think the key to reproduce the problem is to remove the cache files, then start multiple clients at once (in my case I use a jmeter test which simulates 500 concurrent users with no ramp up time).. Well, a fix for that would be to create a lock which is released once the db is created. You try to acquire a lock and you are blocked if it's already taken. Only one can take it, not all of them.. https://en.wikipedia.org/wiki/File_locking. > Obviously if you run 500 concurrent requests in the exact same time (which is very unlikely, even with 1M visitor/month this never happened) you are clearly looking for troubles ;)\nYeah, the load test was intended to look for trouble or rather problems in our application.\nI'll give you that this is an artificial test, having so many concurrent users hit the server immediately without an initialized db. I thought it would be worth filing a bug report anyway, to make phpfastcache more robust in this regard.\nAnyway, thanks a lot for your prompt responses and for developing phpfastcache!. ",
    "zaingithub": "Thank you for reply. Can you show me how i can implement a tag to my saved cache?\n$saving->set($data_cache)->expiresAfter($expires)->addTag('testing-tag');\n$this->cache->save($saving);        \nwhen i try to make $this->cache->getItemsByTag('testing-tag')\nit always return to NULL. ",
    "delafred": "I added this on the top of my script\nerror_reporting(E_ERROR | E_WARNING | E_PARSE);\nini_set('display_errors', '1');\nBut nothing is shown\nSo I did that \necho 'step 1<br/>';\n                var_dump($class);\n                var_dump($config);\n                self::$instances[ $instance ] = new $class($config);\n                echo 'step 2';\nstep 1\nstring(36) \"phpFastCache\\Drivers\\Memcache\\Driver\" array(16) { [\"itemDetailedDate\"]=> bool(false) [\"autoTmpFallback\"]=> bool(false) [\"secureFileManipulation\"]=> bool(false) [\"ignoreSymfonyNotice\"]=> bool(false) [\"defaultTtl\"]=> int(900) [\"defaultKeyHashFunction\"]=> string(0) \"\" [\"securityKey\"]=> string(4) \"Auto\" [\"htaccess\"]=> bool(true) [\"default_chmod\"]=> int(511) [\"path\"]=> string(0) \"\" [\"fallback\"]=> bool(false) [\"limited_memory_each_object\"]=> int(4096) [\"compress_data\"]=> bool(false) [\"preventCacheSlams\"]=> bool(false) [\"cacheSlamsTimeout\"]=> int(15) [\"servers\"]=> array(1) { [0]=> array(2) { [\"host\"]=> string(9) \"127.0.0.1\" [\"port\"]=> int(11212) } } }\nI don't know how to catch error of \nself::$instances[ $instance ] = new $class($config);\n. I added 'E_ALL' and it show me\nFatal error: Cannot locate the Psr/Cache files in /home/park4night/public_html/fonctions/autoload_phpFastCache.php on line 35\nI think I didn't copy enought files because I don't have /bin/ folder in my configuration\nReally sorry and thanks a lot for your help. The problem was that I copy only the \"phpFastCache\\src\\phpFastCache\" folder.\ninstead of copy \"phpFastCache\\bin\" and 'phpFastCache\\src\" to my /fonctions/ folder\nNow it work well.\nI thaught \"/bin/\" folder was for other languages ;). Actually I have no code for this but I can explain the need :\nI have a database of 100.000 campings\nUsers search camping by geolocation around them\nexample 1; A customer from Berlin search campings arround him\nexample 2: A customer from Lille search campings arround him\nUsing standard cache system I'll need to use a cache from each cities customer make search.\nIn 2015 Redis launch GeoAPI to store a cache and geohash for geolocation caching\nhttp://cristian.regolo.cc/2015/07/07/introducing-the-geo-api-in-redis.html\nWith this I was thinking to have only one cache of my database with geohash.\nI wanted to use this feature throught your class, and I wanted to know if you plan to implement it.\nI'm not a Professionnal PHP developper and maybee the solution is to use redis directly in this case with no abstraction class.\nRegards,\nFr\u00e9d\u00e9ric. It's more to let the availabality use geo sorts from caching (redis and maybe others compatible ??) that a geolocation itself because it's already bulk in recent versions of redis.\nBut thanks for the answer.\nRegards\nFr\u00e9d\u00e9ric. You are right  if I have 100k campings and users launch a geolocate request from different cities.\nThen I would need to put in cache for each cities and it will be useless.\nThat's exactly why Redis (and maybe others ?) added Geo API \nI can put 100k camping in cache with their own geo hash.\nAfter depending the request I can make sort/filter on this cache with geo hash of campings to run faster and lighter than from my MySQL database.\nI hope you get it, if not I can explain it in French also.\nRegards,\nFr\u00e9d\u00e9ric. ",
    "rwngallego": "What possible dangerous behavior? It's up to the developer who implements the cache system. I need to  change the .txt extension to something like .db or .cache but it's not even possible with the current implementation.. Perfect, thank you :). ",
    "Altegras": "I figured it out myself, it appears that you have to:\n\ncomposer require phpfastcache/phpssdb\n\nin order to have the appropriate ssdb class installed\nthis code works:\n$container[\"cache\"] = function () {\n        \\phpFastCache\\CacheManager::setDefaultConfig([\"ssdb\" => R_PLATFORM[\"settings\"][\"cache_driver\"]]);\n        return new \\phpFastCache\\Helper\\Psr16Adapter('ssdb');\n    };\n. ",
    "diego-vieira": "Also described here.. ",
    "ofhk": "Hi Georges,\nyou are right. I used php from command line to get the version but the app runs in xampp and indeed this was a very old version. After updating I get Fatal error: Uncaught exception 'phpFastCache\\Exceptions\\phpFastCacheDriverCheckException' with message 'Apc is not installed or is misconfigured, cannot continue.' in . I thought using composer I get all dependencies automatically?. ok thanks. I am new to php :-). ",
    "HACKHERS": "Well, correct me if I'm wrong but currently when we use getInstance('driverName') It searches for current drivers with configuration. I'm suggesting that when we are creating drivers lets say \nnew Psr16Adapter($defaultDriver, $driverID, [/* Config array */]);\nand when getting a driver\ngetInstance($driverID)\nThis way there is no problem with getting drivers btw I still don't understand how we can create 2 file drivers and get them without knowing all the configuration they have. (For example file drive 1 path= /path1/, file drive 2 path = /path2/)\nReference: https://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV5%5D-Why-calling-getInstance()-each-time-is-a-bad-practice-%3F\n(One extra: In wiki page, there isn't information about all the configs easiest example is the path. It could be the only one that is missing but wanted to say that too https://github.com/PHPSocialNetwork/phpfastcache/wiki/%5BV4%CB%96%5D-The-driver-options )\n\n. This could be great!\nThanks @Geolim4 . ",
    "jimmyadaro": "@Geolim4 Sorry, I don't know where look for that. I'm using the current \"final\".. @Geolim4 I got it downloading the ZIP from this repository. I tried before including the autoload file but still the same fatal error.. @Geolim4 Right, I will try upgrading PHP then! Thank you :) . @Geolim4 Sorry, I just left the office. I'll check tomorrow. Please don't close it!. @Geolim4 Hi! Sorry, really busy days... Gonna try tomorrow, I didn't update PHP yet.. ",
    "hriziya": "Hi Georges, I just tried again the same code and it looks working to me too. \nSorry for the question.  and Thanks for your efforts.\nHitesh. Thank you so much!. Hey @Geolim4 , I am using the Latest release 6.1.3..\n\nI am still seeing the error\nUncaught phpFastCache\\Exceptions\\phpFastCacheIOException: PLEASE CHMOD /tmp/beta/Auto/Files/5e/e0 - 511 OR ANY WRITABLE PERMISSION! in /var/www/html/beta/web_services/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/Pool/IO/IOHelperTrait.php:157\nStack trace:\n#0 /var/www/html/beta/web_services/vendor/phpfastcache/phpfastcache/src/phpFastCache/Drivers/Files/Driver.php(72): phpFastCache\\Drivers\\Files\\Driver->getFilePath('all_modules')\n#1 /var/www/html/beta/web_services/vendor/phpfastcache/phpfastcache/src/phpFastCache/Core/Pool/CacheItemPoolTrait.php(353): phpFastCache\\Drivers\\Files\\Driver->driverWrite(Object(phpFastCache\\Drivers\\Files\\Item))\n#2 /var/www/html/beta/web_services/vendor/phpfastcache/phpfastcache/src/phpFastCache/Helper/Psr16Adapter.php(84): phpFastCache\\Drivers\\Files\\Driver->save(Object(phpFastCache\\Drivers\\Files\\Item))\n#3 /var/www/html/beta/web_services/_HELPER.php(1257): phpFastCache\\Helper\\Psr16Adapter->set('all_modules', Array, 1200)\n#4 /var/www/html/beta/web_services/service.php(274): HE\nhere is the file created by phpfastcache \n\nhowever, I have given the full right 777 to the parent directories. \n\nI have checked the CacheManager.php and it has 'default_chmod' => 0777, so It should create file with 0777 I believe. \nLet me know if this can be fixed. \nThank you\n. Aaah, I see. Good catch buddy. Let me update it under /web_services and I will get back to you if needed. \nThank you. So, the issue with new files being created with wrong permission is fixed in 6.1.3?. I have manually set the full permission to existing directories..\nI did not see the error again, so it seems working..\n. ",
    "kfreiman": "thanks!. ",
    "turbopixel": "Very nice, thank you!. ",
    "Yurciu": "Hello,\nThank you for your quick reply.\nI switch to Redis, and result is that same. Message is in Redis cache:\n\nSo, should be visible after while and broadcast:\n\nBut, if I refresh SSE stream, data is recived:\n\nI tried Your suggestion with cache slam either with that same result.\n$cache = \\phpFastCache\\CacheManager::getInstance('files', [\n    'preventCacheSlams' => true,\n    'cacheSlamsTimeout' => 30\n]);\n\n// Off topic\nThx for your advice, I will fix code in refactor iteration. ;). Yup, I'm sure:\n$messages_to_broadcast = $this->_cache->getItemsByTag('inbox_message');\nforeach ($messages_to_broadcast as $key => $_message) {\n  var_Dump($_message); #phpFastCache\\Drivers\\Files\\Item\n  $_message = $_message->get();\n  var_Dump($_message); #CRM\\Message\\SimpleNotification\n  if($_message->recipient == $this->_user_id || $_message->recipient == 0){\n    if(!is_null($html = \\CRM\\Engine\\MessagingService::getMessageToBroadcast($_message))){\n     //Broadcast code\n     }\n   }\n}\n\n. I will investigate further, but at this point I have impression that problematic is infinite loop or PHP language itself. I will isolate my code for you, for tests, if you want so.\nI will switch implementation from Server Side Events to WebSockets, that will probably fix problem. When I do so, I'll let you know.. \n. ",
    "teddybugs": "thanks work like charms. ",
    "rdecourtney": "Absolutely ok George :-) \nWhen using that Driver.php - I'm getting the error:\nError Message: Undefined index: username\nError File: W:\\web\\localuser\\competency.io\\competency.io\\assets\\plugins\\phpFastCache.v7\\src\\phpFastCache\\Drivers\\Couchbase\\Driver.php\nError Line: 86\nI'm not defining the username in the config when calling getInstance... if I do define it, then there's no error.. \n$cache_instance = CacheManager::getInstance('couchbase', [\n            'host' => '127.0.0.1',\n            'username' => '',\n            'port' => '8091',\n            'timeout' => '1',\n            'buckets' => [\n                [\n                  'bucket' => 'default',\n                  'password' => ''\n                ],\n              ]\n        ]);. Hi G, sorry, was away on Canadian Thanksgiving.. will do now. ```php\n<?php\n/\n\n * This file is part of phpFastCache.\n \n * @license MIT License (MIT)\n \n * For full copyright and license information, please see the docs/CREDITS.txt file.\n \n * @author Khoa Bui (khoaofgod)  khoaofgod@gmail.com http://www.phpfastcache.com\n * @author Georges.L (Geolim4)  contact@geolim4.com\n\n/\nnamespace phpFastCache\\Core\\Pool;\nuse phpFastCache\\Core\\Item\\ExtendedCacheItemInterface;\nuse phpFastCache\\Exceptions\\phpFastCacheInvalidArgumentException;\nuse phpFastCache\\Exceptions\\phpFastCacheLogicException;\n/*\n * Class DriverBaseTrait\n * @package phpFastCache\\Cache\n /\ntrait DriverBaseTrait\n{\n    use ExtendedCacheItemPoolTrait;\n/**\n * @var array default options, this will be merge to Driver's Options\n */\nprotected $config = [];\n\n/**\n * @var bool\n */\nprotected $fallback = false;\n\n/**\n * @var mixed Instance of driver service\n */\nprotected $instance;\n\n/**\n * @var string\n */\nprotected $driverName;\n\n/**\n * @param $config_name\n * @param string $value\n */\npublic function setup($config_name, $value = '')\n{\n    /**\n     * Config for class\n     */\n    if (is_array($config_name)) {\n        $this->config = array_merge($this->config, $config_name);\n    } else {\n        $this->config[ $config_name ] = $value;\n    }\n}\n\n/**\n * @return array\n */\npublic function getConfig()\n{\n    return $this->config;\n}\n\n\n/**\n * @return mixed\n */\npublic function getConfigOption($optionName)\n{\n    if (isset($this->config[ $optionName ])) {\n        return $this->config[ $optionName ];\n    } else {\n        return null;\n    }\n}\n\n/**\n * Encode data types such as object/array\n * for driver that does not support\n * non-scalar value\n * @param $data\n * @return string\n */\nprotected function encode($data)\n{\n    return serialize($data);\n}\n\n/**\n * Decode data types such as object/array\n * for driver that does not support\n * non-scalar value\n * @param $value\n * @return mixed\n */\nprotected function decode($value)\n{\n    return @unserialize($value);\n}\n\n/**\n * Check phpModules or CGI\n * @return bool\n */\nprotected function isPHPModule()\n{\n    return (PHP_SAPI === 'apache2handler' || strpos(PHP_SAPI, 'handler') !== false);\n}\n\n\n/**\n * @param $class\n * @return bool\n */\nprotected function isExistingDriver($class)\n{\n    return class_exists(\"\\\\phpFastCache\\\\Drivers\\\\{$class}\");\n}\n\n\n/**\n * @param $tag\n * @return string\n */\nprotected function _getTagName($tag)\n{\n    return \"__tag__\" . $tag;\n}\n\n/**\n * @param \\phpFastCache\\Core\\Item\\ExtendedCacheItemInterface $item\n * @return array\n */\npublic function driverPreWrap(ExtendedCacheItemInterface $item)\n{\n    $wrap = [\n      self::DRIVER_DATA_WRAPPER_INDEX => $item->get(),\n      self::DRIVER_TAGS_WRAPPER_INDEX => $item->getTags(),\n      self::DRIVER_EDATE_WRAPPER_INDEX => $item->getExpirationDate(),\n    ];\n\n    if ($this->config[ 'itemDetailedDate' ]) {\n        $wrap[ self::DRIVER_MDATE_WRAPPER_INDEX ] = new \\DateTime();\n        /**\n         * If the creation date exists\n         * reuse it else set a new Date\n         */\n        $wrap[ self::DRIVER_CDATE_WRAPPER_INDEX ] = $item->getCreationDate() ?: new \\DateTime();\n    } else {\n        $wrap[ self::DRIVER_MDATE_WRAPPER_INDEX ] = null;\n        $wrap[ self::DRIVER_CDATE_WRAPPER_INDEX ] = null;\n    }\n\n    return $wrap;\n}\n\n/**\n * @param array $wrapper\n * @return mixed\n */\npublic function driverUnwrapData(array $wrapper)\n{\n    return $wrapper[ self::DRIVER_DATA_WRAPPER_INDEX ];\n}\n\n/**\n * @param array $wrapper\n * @return mixed\n */\npublic function driverUnwrapTags(array $wrapper)\n{\n    return $wrapper[ self::DRIVER_TAGS_WRAPPER_INDEX ];\n}\n\n\n/**\n * @param array $wrapper\n * @return \\DateTime\n */\npublic function driverUnwrapEdate(array $wrapper)\n{\n    return $wrapper[ self::DRIVER_EDATE_WRAPPER_INDEX ];\n}\n\n/**\n * @param array $wrapper\n * @return \\DateTime\n */\npublic function driverUnwrapCdate(array $wrapper)\n{\n    return $wrapper[ self::DRIVER_CDATE_WRAPPER_INDEX ];\n}\n\n\n/**\n * @param array $wrapper\n * @return \\DateTime\n */\npublic function driverUnwrapMdate(array $wrapper)\n{\n    return $wrapper[ self::DRIVER_MDATE_WRAPPER_INDEX ];\n}\n\n/**\n * @return string\n */\npublic function getDriverName()\n{\n    if(!$this->driverName){\n        $this->driverName = ucfirst(substr(strrchr((new \\ReflectionObject($this))->getNamespaceName(), '\\\\'), 1));\n    }\n    return $this->driverName;\n}\n\n/**\n * @param \\phpFastCache\\Core\\Item\\ExtendedCacheItemInterface $item\n * @return bool\n * @throws phpFastCacheLogicException\n */\npublic function driverWriteTags(ExtendedCacheItemInterface $item)\n{\n    /**\n     * Do not attempt to write tags\n     * on tags item, it can leads\n     * to an infinite recursive calls\n     */\n    if (strpos($item->getKey(), self::DRIVER_TAGS_KEY_PREFIX) === 0) {\n        throw new phpFastCacheLogicException('Trying to set tag(s) to an Tag item index: ' . $item->getKey());\n    }\n\n    if(!$item->getTags() && !$item->getRemovedTags())\n    {\n        return true;\n    }\n\n    /**\n     * @var $tagsItems ExtendedCacheItemInterface[]\n     */\n    $tagsItems = $this->getItems($this->getTagKeys($item->getTags()));\n\n    foreach ($tagsItems as $tagsItem) {\n        $data = $tagsItem->get();\n        $expTimestamp = $item->getExpirationDate()->getTimestamp();\n\n        /**\n         * Using the key will\n         * avoid to use array_unique\n         * that has slow performances\n         */\n\n        $tagsItem->set(array_merge((array)$data, [$item->getKey() => $expTimestamp]));\n\n        /**\n         * Set the expiration date\n         * of the $tagsItem based\n         * on the older $item\n         * expiration date\n         */\n        if ($expTimestamp > $tagsItem->getExpirationDate()->getTimestamp()) {\n            $tagsItem->expiresAt($item->getExpirationDate());\n        }\n        $this->driverWrite($tagsItem);\n        $tagsItem->setHit(true);\n    }\n\n    /**\n     * Also update removed tags to\n     * keep the index up to date\n     */\n    $tagsItems = $this->getItems($this->getTagKeys($item->getRemovedTags()));\n\n    foreach ($tagsItems as $tagsItem) {\n        $data = (array)$tagsItem->get();\n\n        unset($data[ $item->getKey() ]);\n        $tagsItem->set($data);\n\n        /**\n         * Recalculate the expiration date\n         *\n         * If the $tagsItem does not have\n         * any cache item references left\n         * then remove it from tagsItems index\n         */\n        if (count($data)) {\n            $tagsItem->expiresAt(max($data));\n            $this->driverWrite($tagsItem);\n            $tagsItem->setHit(true);\n        } else {\n            $this->deleteItem($tagsItem->getKey());\n        }\n    }\n\n    return true;\n}\n\n/**\n * @param $key\n * @return string\n */\npublic function getTagKey($key)\n{\n    return self::DRIVER_TAGS_KEY_PREFIX . $key;\n}\n\n/**\n * @param $key\n * @return array\n */\npublic function getTagKeys(array $keys)\n{\n    foreach ($keys as &$key) {\n        $key = $this->getTagKey($key);\n    }\n\n    return $keys;\n}\n\n/**\n * @param string $optionName\n * @param mixed $optionValue\n * @return bool\n * @throws phpFastCacheInvalidArgumentException\n */\npublic static function isValidOption($optionName, $optionValue)\n{\n    if (!is_string($optionName)) {\n        throw new phpFastCacheInvalidArgumentException('$optionName must be a string');\n    }\n\n    return true;\n}\n\n/**\n * @return array\n */\npublic static function getRequiredOptions()\n{\n    return [];\n}\n\n/**\n * @return array\n */\npublic static function getValidOptions()\n{\n    return [];\n}\n\n}\n```. I tested with the default bucket in Couchbase (I'm only using the Memcache Feature) that worked with no authentication. It also worked with a defined bucket with a password.\nIf I don't define a bucket though in the getInstance - it complains about an undefined index:\n\\phpFastCache.v7\\src\\phpFastCache\\Drivers\\Couchbase\\Driver.php Error Line: 94\nIt also complains if 'username' isn't defined.. . Downloaded the entire 519 version... still getting that driver error (that you can see at: https://competency.io/dev/cache/ )\nWhen using this configuration\n$cache_instance = CacheManager::getInstance('couchbase', [\n    'host' => '127.0.0.1',\n    'username' => '',\n    'password' => '',\n    'port' => '8091',\n    'timeout' => '1',\n    'buckets' => [\n        [\n          'bucket' => 'default', // The bucket name, generally \"default\" by default\n          'password' => '' // The bucket password if there is\n        ],\n      ]\n]);\nWhen removing the $username and $password from that line, the error stops (but then I'm not using a username and password on the dev caching server)...\nThanks G!. It would be REALLY useful as well to either have a changelog or version file in the root directory. When downloading each version, I've got 5-6 folders with phpfastcache in it, and no idea what version or how up-to-date they are... thanks!. Hi Georges... as above... the error still exists in the current build (7d5e91e) with the code setup for Couchbase Memcached Driver - no username / password / default bucket (standard install) :-). Downloaded the v7 and works great, I can remove all connection info, change the host to non existent, all works great, with entering no information, it defaults gracefully. The only thing that I can't get to fail is the port. I'm running Couchbase memcache server on port 11211 - but if I change that in getInstance to port 1 for example, it will not fail, it still connects to the server - using a bad IP address will not connect (as it should).. Afternoon Georges, \nSorry for the late response.. not been at work :-) \nI've tried hard-coding the correct, and incorrect ports in and it connects, or fails appropriately.. however, when calling it through 'getInstance' and specifying the port, it's not failing and connecting as default to 8091, when it should fail.\nSpecifically - this /SHOULD/ fail, but doesn't:\n$cache_instance = CacheManager::getInstance('couchbase', [\n    'host' => '127.0.0.1',\n    'port' => '1',\n    'timeout' => '1',\n    'buckets' => [\n        [\n          'bucket' => 'default',\n          'password' => ''\n        ],\n      ]\n]);\n(and thank you for the changelog!!  \ud83c\udf7a ). Sounds good! Let me know if there's anything else I can help with.. . Hi G.. yes of course :-) I'm devving all day today - it has only been a random issue though that I can't reproduce, but I can push an update and then monitor over the next few days if that helps?. No errors so far! (I did comment on the update you pushed out, not here).. . Did you manage to fix your computer ok?\n~ Rick\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\nCheck out our new project! https://competency.io https://competency.io/\nCOMPETENCY.IO is the online portfolio and competency assessment platform for users & enterprise \n\nOn Nov 23, 2017, at 2:32 PM, Georges.L notifications@github.com wrote:\nClosed #541 https://github.com/PHPSocialNetwork/phpfastcache/issues/541 via fa89ec7 https://github.com/PHPSocialNetwork/phpfastcache/commit/fa89ec7b55c9d53afb51210c09ca700ec980915e.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/PHPSocialNetwork/phpfastcache/issues/541#event-1356370875, or mute the thread https://github.com/notifications/unsubscribe-auth/AfEvdCaSCuSXJukobONjmallDDUumj2Gks5s5fKZgaJpZM4QiWJV.\n\n\n. ",
    "apapazisis": "$instanceCache = CacheManager::getInstance('memcached');\n\n$key = 'test';\n$cachedString = $instanceCache->getItem($key);\n\nif (is_null($cachedString->get())) {\n    ......\n}\n\nIn the driver of memcached exists configuration for the connection to 127.0.0.1 and port 11211. \ni have used $instanceCache->getStats function to check the connection and seems to be ok. \ni have seen also this issue https://github.com/PHPSocialNetwork/phpfastcache/issues/445 .\nThanks . As an example is the following\n$instanceCache = CacheManager::getInstance('memcached');\n\n$key = 'test';\n$cachedString = $instanceCache->getItem($key);\n\nif (is_null($cachedString->get())) {\n   $results = User::all();\n\n   $cachedString->set($results)->expiresAfter(20);  \n   $instanceCache->save($cachedString);\n   app_log('CREATE FOR CACHE');\n} else {\n   app_log('LOAD FROM CACHE');\n}\n\n$cachedResult = $cachedString->get();. Is not so big. SQLite and files drivers works well!!. It may be this the problem... I have switched to SQLLite.\n",
    "ftrudeau": "object(Predis\\Response\\Status)#680 (1) { [\"payload\":\"Predis\\Response\\Status\":private]=> string(2) \"OK\" }. This is great, thanks, it's working :1st_place_medal: . I've got a lot of tags, and some may have thousands of items associated with them.\nI'll try to use detachItem() or detachAllItems() where relevant, thanks !\nAlso, I noticed that a tag stays in the cache even if all associated items are deleted ( using the $adapter->deleteItemsByTag($tag) method ).\nIs this expected behavior ?\n. Merci Georges, feedback tr\u00e8s r\u00e9actif, c'est vraiment appr\u00e9ci\u00e9.. ",
    "bongobongo": "Probably not an issue for many others I hope, but in my old PHP editor, the line below show up as an error:\nuse phpFastCache\\CacheManager;\nIt is actually working when running on the server, but would be nice to get rid of the \"error\" in the editor I'm using (Zend Studio 5.5.1) when I write PHP code:\nSo I was just wondering if it was possible to instantiate the phpFastCache / CacheManager class without using that piece of code?. Okay, thank you very much for that information. \nI'll have a look at PhpStorm then. . ",
    "jcheron": "Hello,\nI checked, clearing the cache before:\nphp\nCacheManager::getInstance('Mongodb')->clear();\nItems are created after the option itemDetailedDate is enabled,\nand the 2 notices are still present.. It's strange :\nI checked that the cache had been cleared (with phpFastCache and directly in mongodb).\nItems are created on a Cache instance initialized with the itemDetailedDate option. But the $wrapper parameter of the driverUnwrapCdate method never has a key c and m\nAnd even if the cache was not empty, the new values should replace the old ones, since I use : \nphp\n$cacheInstance->getItem($key)->set($content);\nThat's the result of print_r($cacheInstance->getConfig()),\njust before the insertion of the items:\nphp\nArray\n(\n    [itemDetailedDate] => 1\n    [autoTmpFallback] => \n    [secureFileManipulation] => \n    [ignoreSymfonyNotice] => \n    [defaultTtl] => 900\n    [defaultKeyHashFunction] => \n    [securityKey] => Auto\n    [htaccess] => 1\n    [default_chmod] => 511\n    [path] => \n    [fallback] => \n    [limited_memory_each_object] => 4096\n    [compress_data] => \n    [preventCacheSlams] => \n    [cacheSlamsTimeout] => 15\n    [cacheFileExtension] => txt\n    [host] => 127.0.0.1\n    [port] => 27017\n    [username] => \n    [password] => \n    [timeout] => 1\n). yes I did,\nhere is the complete code of the item creation: \nphp\nprotected function storeContent($key,$content,$tag) {\n    $key=$this->getRealKey($key);\n    $item=$this->cacheInstance->getItem($key);\n    $item->set($content);\n    $item->addTag($tag);\n    $this->cacheInstance->save($item);\n}. Ok good !\nThank you Georges\nThe first tests are conclusive. Hello Georges,\nThank you for responsiveness!. ",
    "MaximilianKresse": "My main problem aren't the tests. Symfony and co doesn't something like you and store the composer dependencies additionally in the package and use an own autoloader. I fully understand why you are doing this but is there still any one out there who isn't using composer? Isn't version 7 a good moment to drop the non composer support? To use your comparison to the big frameworks, symfony, laravel and many others require composer and don't offer an package with an autoloader and the missing dependencies.. ",
    "thomas-breese": "Thanks for your quick reply and sorry for causing such a headache! Honestly, I think my use case is a little extraordinary and I think I can find a way around it by reworking my implementation a little bit on the application code side of things. Unfortunately, I don't know enough about the code to propose any fixes, but based on how I started to track this down I ran into this issue, which you have since resolved: https://github.com/PHPSocialNetwork/phpfastcache/issues/529\nThis looks like you fixed an issue where deleteItemByTag() will now automatically remove the tag item once that operation completes and there are no longer any items associated with that tag. I am not familiar with the internals of the tagging mechanism you are using within redis (please feel free to point me in the right direction here and I'd be happy to take a look as well), but I would imagine this issue could be occurring in a similar area of the code. Perhaps there's a way to check if there are new items added with the same tag before deciding whether or not to remove that tag entirely when that delete operation completes? The strangest part to me is that those newly added items do have the same tag attached to the cached items themselves, so I'm not sure how that reference is established on those items and why you can no longer find those new items by the same tag. I would imaging removing the parent tag item breaks this association and therefore the tag is present, but not correctly correlated to the new parent tag item once it's created after the delete operation completes and removes it. That's what's stumping me a lot about this. Please let me know if I can be of assistance with this one or provide any more details. Thanks again for your reply!. ",
    "oadam": "The stack overflow answer has quite a few upvotes... Don't you think\nerror_get_last() can contain the exact cause ?\nLe 10 d\u00e9c. 2017 12:03, \"Georges.L\" notifications@github.com a \u00e9crit :\nThe error is actually quite helpful. It's telling you that PFC can't write\non the disk. There's multiple potentials causes:\n\nNo left space on disk\nNot owner of the target directory\nIncorrect chmod\n\nI'm not sure that error_get_last() will return more pertinent information.\nCheers,\nGeorges\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/554#issuecomment-350540351,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABkILaduZY1UKnSn2mXSzfRgnnSFrqqEks5s-7p4gaJpZM4Q8VHK\n.\n. I agree that the current error message covers 95% of the cases but adding\nthe last error could help the remaining 5% (me included :-) ).\nLe 10 d\u00e9c. 2017 12:10, \"Olivier Adam\" olivier.adam@m4x.org a \u00e9crit :\n\nThe stack overflow answer has quite a few upvotes... Don't you think\nerror_get_last() can contain the exact cause ?\nLe 10 d\u00e9c. 2017 12:03, \"Georges.L\" notifications@github.com a \u00e9crit :\nThe error is actually quite helpful. It's telling you that PFC can't write\non the disk. There's multiple potentials causes:\n\nNo left space on disk\nNot owner of the target directory\nIncorrect chmod\n\nI'm not sure that error_get_last() will return more pertinent information.\nCheers,\nGeorges\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/554#issuecomment-350540351,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABkILaduZY1UKnSn2mXSzfRgnnSFrqqEks5s-7p4gaJpZM4Q8VHK\n.\n. I think the io error is suppressed by the use of @ and won't be present\nin the logs.\n\nLe 10 d\u00e9c. 2017 12:20, \"Georges.L\" notifications@github.com a \u00e9crit :\n\nIf there's an I/O issue, just check the php logs. That's simple, right ?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/554#issuecomment-350541222,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABkILUCNTUaXqsInYTxjwYkN3FJlzvA1ks5s-76ZgaJpZM4Q8VHK\n.\n. The current code uses @mkir :\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/67960f2864dbf8c7abc00140bc36a392781ef680/src/phpFastCache/Core/Pool/IO/IOHelperTrait.php\n\nAs you said this is not ideal but adding a get_last_error, as suggested by\nmy stackoverflow link, would make it acceptable.\nLe 10 d\u00e9c. 2017 13:50, \"Georges.L\" notifications@github.com a \u00e9crit :\n\nThe \"@\" should not be used at all in php, it's a very bad practice. Hiding\nthe error does not solve them :)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/554#issuecomment-350546161,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABkILfeKlpbzUXGpdJaltW3tx7QDlRXcks5s-9N2gaJpZM4Q8VHK\n.\n. \n",
    "alan-zhang-": "Hi, Thanks.\nI appreciate you offering Symfony version. But really, it should not be compulsory for Symfony project. Symfony project can also use common libs like any other projects. Actually, in my Smfony project, I made a lot a adjustment to make it just like common projects, using dot file(.env as the configuration files, totally ignore symfony configuration files).\nAs I dig into the source code, it works fine by removing CacheManager@lines212~215\nCan these lines be removed from the source project?. Well, thanks. I used Memcached then.. ",
    "moazam1": "I am not using symfony framework only few components but getting this annoying warning. Can you please allow us to disable this warning?. ",
    "arcticlinux": "Tested on Linux.\nConfiguration:\nPhpFastCache version: 6.0.8\nPHP version: 7.1.13\nOperating system: Ubuntu 16.04 LTS. It's not really well specified in PSR16, but other cache adapters will return true clearing empty caches.  I was not expecting it, since the memcached driver will return true in this case.\n```\n$driver = 'memcached';\n$config = ['servers' => [\n    [\n        'host' => '127.0.0.1',\n        'port' => 11211\n    ]\n]];\n$cache = new phpFastCache\\Helper\\Psr16Adapter($driver, $config);\nvar_dump($cache->clear());\nvar_dump($cache->clear());\nbool(true)\nbool(true)\n```\nSome other examples:\nhttps://github.com/symfony/cache/blob/f86432692b87c08c6ec2fab894ec1828375f692f/Adapter/NullAdapter.php#L70\nhttps://github.com/symfony/cache/blob/746686ccf89fe28fb742736e8d8ca216c360b89a/Tests/Adapter/NullAdapterTest.php#L82. The Devnull also returns true on clear.\n```\n$driver = 'Devnull';\n$config = [];\n$cache = new phpFastCache\\Helper\\Psr16Adapter($driver, $config);\nvar_dump($cache->clear());\nvar_dump($cache->clear());\nbool(true)\nbool(true)\n```. I had been writing tests around it for my own wrapper class and had noticed\nthe difference.    It's interesting that if you use the files driver\ndirectly, it returns false both times.\nOn 20 January 2018 at 06:40, Georges.L notifications@github.com wrote:\n\nClosed #562 https://github.com/PHPSocialNetwork/phpfastcache/issues/562.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/562#event-1433701235,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAF3L6gHI6La6wmBAtkwPTYRVB5EZLjcks5tMezhgaJpZM4RjVU1\n.\n. \n",
    "rachmawatiafrida": "Do you have any suggestions?. How to delete cache by prefix? Can i use SQLite manager to run query? Do you have example query?. ",
    "sajaddp": "It does not match with v6.\nFor the example method \"setup\" is deprecated.. ",
    "Vladdy88": "Hello,\nI don't have the documentation, I will search for it. I saw only that it is already implemented in different CMS' modules that`s why I asked.\nI will get back after I study the implementation. \nThanks. ",
    "HubUzername": "Newest version, php 5.6.33, Linux. Sorry, i can solve my problem.\nThank you very much for answer.. ",
    "YamilBracho": "Sorry, my mistake ...\nThanks!. ",
    "mzdr": "Hi Georges!\nThanks for your fast feedback, really appreciate it. I totally get your point.\nBut wouldn\u2018t this be a mistake on the user side? For example it\u2018s generally recommended use include/require in combination with __DIR__ because of the common pitfalls users are not aware of. But your input isn\u2018t altered in any way like in our scenario here.\nI would prefer to have an expected output and rather warn/inform the user in the docs about the issues with relative paths than returning an incorrect output/path.\nWhat do you think?\nBest regards,\nSebastian. I see. Can you give me an example for the \u201cpossible chdir/getcwd differences between a WEB and CLI execution for a single application\u201d you were talking about? I\u2019m still not convinced why you should enforce an absolute path, especially if it\u2019s related to a specific set of conditions.\nLet\u2019s say I\u2019m building a very simple web application and I have a single configuration file that will be shared among several other developers. Now how do I get around the problem of the absolute path? Sure you could say that I need some kind of setup routine, but this overhead would be introduced by your \u201crestriction\u201d.\nAre you totally against loosing up this rule/restriction? I think it\u2019s the users responsibility to take care of path differences/incompatibilities within a single application among different types of execution.. Hey Georges,\nthanks a lot for your very detailed answer. Though I wasn\u2019t asking for examples about using a consistent root path, but about the \u201cpossible chdir/getcwd differences between a WEB and CLI execution for a single application\u201d.\nAnyway. I still think it should be up to the developer if he wants to use \"best practices\" or not. If he doesn\u2019t there might be a good reason for that, you\u2019ll never know. Not everyone is using big frameworks and so on, and not everyone is having a situation where the \"best practice\" would fit.\nI\u2019m not saying that I have a problem with defining a root path, I\u2019m having a problem with \"patronizing\" the developer.\nNevertheless you already mentioned that you are not willing to change this behaviour. That\u2019s totally okay for me and I will accept that. \ud83d\udc4d . ",
    "rahulthackkar": "Thanks for support.,\ud83d\ude0a\nOn 10-Mar-2018 2:55 AM, \"Georges.L\" notifications@github.com wrote:\n\nThe bug is now fixed, thanks for the report !\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/581#issuecomment-371949379,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQCzs33kU3revIvTVeWHUbK9E4Kxn-E7ks5tcvNMgaJpZM4SkCYK\n.\n. \n",
    "Schlaefer": "Thanks. Just asked to be sure. \ud83d\udc4d. ",
    "revmitcz": "After much googling, I was able to find some good examples of PFC as a Singleton. Thanks for the help!. This is basically what I found after some googling, though I modified it for my purposes :\n```// caching files\nuse phpFastCache\\CacheManager;\nuse phpFastCache\\Core\\phpFastCache;\nuse phpFastCache\\Proxy\\phpFastCacheAbstractProxy;\nabstract class Cache extends phpFastCacheAbstractProxy\n{\nprotected static $driver = 'files';\n  protected static $objInstance;\npublic function __construct()\n  {\n    $this->instance = parent::__construct('files', self::getOptions());\n  }\npublic static function getInstance()\n  {\n    if (static::$objInstance === null) {\n      static::$objInstance = CacheManager::getInstance(static::$driver, self::getOptions());\n    }\n    return static::$objInstance;\n  }\n  public static function getOptions()\n  {\n    $arrOptions = array();\n    if (ENVIRONMENT != 'development') {\n      $arrOptions['path'] = '/var/www/vhosts/[...]/cache';\n    }\n    $arrOptions = array_merge(CacheManager::getDefaultConfig(), $arrOptions);\n    return $arrOptions;\n  }\n}\n```\nThen, in my core Model.php file, I set it up in the construct : \n```\nclass Model\n{\n    /*\n     * @var null Database Connection\n     /\n    public $db = null;\n    public $cache = null;\nfunction __construct()\n    {\n        try {\n            self::openDatabaseConnection();\n            self::setupCaching();\n        } catch (\\PDOException $e) {\n            exit('Database connection could not be established.');\n        }\n    }\npublic function setupCaching()\n{\n  // set cache instance\n  $this->cache = \\Mini\\Core\\Cache::getInstance();\n}\n\n``` \nand that's pretty much it. I can now use things like $Cached = $this->cache->getItem($key) in my models. ",
    "premento": "@revmitcz Can you please share some of the examples as I am stuck with the same!!!. ",
    "aradhell": "@Geolim4 So are you going to add a fallback cover for cache server failures in v7 ? . Thanks for the info :) , Do you think it is a right approach to ping the server at first and change instance type ?. ",
    "szepeviktor": "Just extend it in our code base.\nIs it possible?. Thank you!. ",
    "WuJiY": "\n\n. how can I configure to remove. Ok, I see. thank you for your reply. Have a nice day\uff01. I want to store the shopping cart data in redis. like https://redis.io/commands/hset. such as...?\nappend ,prepend?\nActually, I just want to store the shopping cart data in redis.. ",
    "HardikElsner": "Hello Georges,\nThanks for your time.\nI have already did this things but not stored more then 1MB. Any things else i need to do?. I have set 1024MB on server but once i store the data using phpfastcache memcache example its not stored. . CacheManager.php have one variable limited_memory_each_object only supported by Cookie driver or Memcache ?. Can you please check CacheManager.php line no : 137\n/\nMaximum size (bytes) of object store in memory\n(Memcache(d) drivers only)\n/\n'limited_memory_each_object' =>  4096,\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/final/src/phpFastCache/CacheManager.php\nHere is the comment say it's working only Memcache.\nIs there any another confrontation to store more then 1MB data in memcache ?. ",
    "dol": "@Geolim4 Thank you for implementing this. I was able to the implementation and I confirm it's working as excepted.. ",
    "pankajmalkani": "thanks for the link provided. But there are too many items in API. Can you guide me to the correct manipulation of cache item as per my logic above?. Thanks again. But how to identify new data which is different from previous data being loaded into cache so that cache will be clear and reloaded. ",
    "texelate": "I thought I'd ask anyway.\nThanks for the fast reply and all your work on this project!. ",
    "lexo13": "Hi,\nOK, it's not a bug but your example is out of date\nhttps://github.com/PHPSocialNetwork/phpfastcache/blob/master/docs/examples/predis.php. ",
    "junxien": "thanks George for the reply..... lol :smile:  I have changed it to is_null($CachedString->get()) and its working now... i can't believe i'm struggling for more than 12 hours for this :laughing: . ",
    "mrcnpdlk": "Ok. Thanks.\nBut In version 6.x i used:\n$this->oCache->getConfigOption('defaultTtl');\nAfter Upgrade to 7 a I get:\nMethod \"Phpfastcache\\Core\\Pool\\DriverBaseTrait::getConfigOption\" is deprecated, use \"getConfig()->getOptionName()\" instead. Thanks a lot, I've fixed my repo.. ",
    "UnRyongPark": "Oh~!\nI'm so happy!\nThank you so much  @Geolim4 \n. It's a mistake! I edited and pushed! :). Thank you for letting me know! I added @see to the comment!. ",
    "frumbert": "Ok, I'll have to look into the new version then. It's probably just as much work to refactor my apps to keep up to date than it is to hacky-workaround the prefix problem I'm having.. hmm, during my app instantiation I'm setting the default config\nphp\n$cacheConfig = array(\n    \"storage\" => \"redis\",\n    \"redis\" => array(\n        \"host\" => Config::get('REDIS_HOST'),\n        \"port\" => (int) Config::get('REDIS_PORT'),\n        \"password\" => Config::get('REDIS_PASSWORD'),\n        \"database\" => (int) Config::get('REDIS_DATABASE'),\n        \"timeout\" => \"\"\n    )\n);\n\\phpFastCache\\CacheManager::setDefaultConfig($cacheConfig);\nI have a cache factory class to simplify connecting to it all the time\n```php\nclass CacheFactory {\n    private static $factory;\n    private $cache;\npublic static function getFactory() {\n    if (!self::$factory) {\n        self::$factory = new CacheFactory();\n    }\n    return self::$factory;\n}\n\npublic function __destruct() {\n    $this->cache = null;\n    self::$factory = null;\n}\n\npublic function getCache() {\n    if (!$this->cache) {\n        $this->cache = \\phpFastCache\\CacheManager::getInstance('redis');\n    }\n    return $this->cache;\n}\n\n}\n```\nthen when using the cache the gist of my process follows this pattern\nphp\n$cache = CacheFactory::getFactory()->getCache();\n$cacheItem = $cache->getItem(\"some_model\");\n$model = $cacheItem->get();\nif (is_null($model) {\n    $model = some_expensive_operation();\n    $cacheItem->set($model)->expiresAfter(3600)->addTags([\"tag1\",\"tag2\"]);\n    $cache->save($cacheItem);\n}\ndo_thing_with_model($model);\nThen I have various separate instances of the same code with different configs pointing to different databases within the one redis db.\nWhen I was down looking at $this->config at around https://github.com/PHPSocialNetwork/phpfastcache/blob/v6/src/phpFastCache/Drivers/Redis/Driver.php#L136 $this->config['redis'] is set to the values put there by setDefaultConfig.\n. wow. \ud83d\ude25\nwhen I first set this up I remember following a tutorial (probably from sitepoint) and I never thought about the default config again. pays to re-read the documentation. \nsorry for the trouble. ",
    "Yamakasi": "Hi,\nThanks for the quick response, indeed, default bucket set/get commands.\nFor this usable N1QL feature we need a (simple) querybuilder, examples for N1QL are:\nhttps://developer.couchbase.com/documentation/server/current/sdk/php/n1ql-queries-with-sdk.html\nI need to see if I can fiddle something in but if people have ideas about it and are familair with this lib in development I think it's even better :)\nCheers,\nMatt. It's at least faster then querying *SQL, that is what it's all about. If you need to know if a document exists based on info that is in the document you can pass the meta.id() of the document after it through your application and don't need to touch MySQL at all.\nSo it's an improvement to the library for sure! If you are willing to implement it (I already tested speed and so on) I'm willing to test it out for you as a reference of course.\nWhat you might want to look at is that N1QL uses upsert which inserts or updates when the document exists. I think it's more efficient for multiple insert/updates so it might be nice that people can chose to use SQL or get/set when adding data. My idea was to check if you have multiple documents if it's an array and then do SQL... you might see the picture.\n(small question next to this: I'm installing phpfastcache/phpfastcache but I see it requires all cached drivers to be loaded in PHP, I think that is too much overhead or can I go around this ? I assume the exceptions can handle it and you mostly will check for \\ClassName like you can do with \\Couchbase as well).\nCheers,\nMatt. I'm not able to provide you a server currently, I run it on a local dev VM as well. Installation is easy these days, goes by itself.\nI cannot agree with if you need to check if a document already exist or not. If it's cached and cache is already faster to access you need to know if it exists, there is cache for and you also fetch that document after it as well, or actually at the same time. It's just faster to access cache in anyways then query your SQL backend in that case.\nOK, that is indeed a nice feature of PHP, autoload, but why does someone need to install 25 extra extentions to install a composer package where he only uses 1 or a few, doesn't sound good to me so that might need some changement if you ask me.\nFor the rest this library is great I think \ud83d\udc4d . Sure Upserts are SET only! But for multiple upserts you could check if N1QL is faster compared to upsert. You could even UPSERT in SQL based on your SELECT. Sounds pretty flexible to me as extention to the cache.\nAbout persistent, I don't know what you mean there but if you want to cache for an X period or based on some data in the document and don't want to expire but want to check for that data in the document cache is still faster, after it you can query SQL if needed and upsert/update again. It's not always needed but in some cases very handy.\nIt seems that composer is complaining about some Guzzle issue name naming it Problem 1 and then composer with the enable extentions... so I think that is fixed.\nGot the idea ?\n. Yes look at it, sounds nice... reinstalls from time to time are good but then you indeed know what you miss.\nI fixed the composer issue, the cache lib is installed right.\nI'm wondering what the reason is to support so many caching backends, sure it's great to have in the lib, don't get me wrong, but is it so people can switch easier or you should use specific cache servers for specific types of data ?. Sure the refactoring is good you don't have to do then. Querying Couchbase should maybe not lineup with the ideas behind the library indeed when others don't support it.\nDoes the library add some \"latency\" instead of writing a class for one caching backend for an example ? Is that tested maybe ?. Ah good to hear, sure there had been optimized a lot over the versions, great to hear!\nI don't worry about the couchbase SDK, it's extremely efficient and fast and that with an optimized abstraction layer I think it's a great solution, also with the options you build in!\nThanks for the clearifications !. Whoops, my bad, tagging works! This is great!. Yeah I wasn't sure about it, that is great. That is something the library provides in a fancy way ? I now store binary so I'm not able to see the data but it are extra keys for the document and not in the document it's data ?. Ah OK, I saw that, so the second index for a document is actually the secondary indices ? That is why I also said earlier in one of my edits here that it might not be needed to N1QL at all, you just need to tag in a logical way.\nWould it be possible to debug the cache in a readable format with a \"debug\" option ? It's now binary by default.\nAbout the tags, I was wondering if you will get all documents when you search on a set of tags or only the matching one for the full array. <- can be solved with identical tags as well so just something I like to know.\nThanks again for the great work! It's pretty powerfull!. Yes I see the fallback function. It was more a question do I don't create functions that will be in (later).\nI don't think a try/catch is always a proper way and can get too many exceptions following up. \n. Yes I read that and could not make a clue out of it, the same for getting them by tags.. I'm using Netbeans, it's a good IDE which I use for years. It was a question, not a bug... you might saw the wrong tag \"Simple question\" ;)\nEdit: Please don't close all tickets all the time, it's confusing and no open tickets doesn't make the project any better until the question is solved by the person who opened it.. I understand, I mostly report back, even by email if needed, we are not all the same. Issue seems to be solved as I think the documents got expired and my admin panel didn't refresh.\nDuring my searching (which I do a lot) I could not find out if we can get items back in groups of arrays so like \n[['item1tag1, item1tag2, item1tag3],['item2tag1, item2tag2, item2tag3]]\nAnd we get only back item1 and item2 or do I need to get per item ?. Can you clearify what you mean here ?. Okido :). But they also exist when you add the item again with the same Id, so you overwrite it ? The expire is re(set) then again so I was wondering how that should behave.. Sounds great! I can make a list if you want and ask why what functions give back what and why we check for it, like isHit() is the same as you check is the call gives data back or is empty... I use it but don't see a direct usecase where it would add something extra. \nMaybe it's a good idea as addition next to the API explanation we can add ?\nFor the rest it's awesome this lib, good work! ;). Great drawing and design and explanation! Thanks a lot!\nAbout is isHit(); I understand, if you know you have a document but also can empty it from time to time you can better check it's status, empty OR data AND existing. Am I right ?. Hi,\nI have looked into the templates, I can make something out of it but it's not ideal if you ask me, questions cannot always fit in there I have seen.\nSo far I can give you this as what happens:\n`Phpfastcache\\Exceptions\\PhpfastcacheInvalidArgumentException\nFile:\n/myprojects/vendor/phpfastcache/phpfastcache/lib/Phpfastcache/Core/Item/ItemExtendedTrait.php:328\n\nMessage:\n$tagName must be a string\n\nStack trace:\n#0 /myproject/vendor/phpfastcache/phpfastcache/lib/Phpfastcache/Core/Item/ItemExtendedTrait.php(338): Phpfastcache\\Drivers\\Couchbase\\Item->addTag(50.9422858)`. Sounds valid to me! Maybe this are simple and small notes we can add to the docs ?. Hi,\n\nI think I end up in a infinite loop in this case, so that might be the issue as well. I don't try/catch this Couchbase Exception in place but in my bootstrap of Zend Framework which catches all uncaught exceptions. \nI have tested of course with a try/catch and I can catch it, I just want to bubble it up so I can catch this one at one place at all which goes wrong and I try to debug. I can catch other Uncaught exceptions in my central place so I'm wondering if you have any idea.\n(btw are you in for an idea about a feature request that can return items that will be valid in the \"future\" to be seen as hit ?)\nCheers,\nMatt\n. Hi George,\nI was investigating this very deeply (you want to keep the issues too clean, not needed... people cannot reopen). Do you have a clue about an uncaught exception in any way when setting the provider ?\nUncaught Couchbase\\\\Exception:\nI cannot find out where I can catch that type of error and if I need to use the phpfastcache exceptions for it.\nWould be nice to know.\nThanks!\nMatt. Sorry for the delay, also tested this further and I saw in a commit pretty fast (~2 weeks) after my ticket you changed something on the Exception(handling). it felt something behaved different after my composer update on the Exception handling and I saw that commit in the past. As I needed to do a lot of work on my system I thought I will check it out while doing and thinking about it at the moment I wonder: Had it anything todo with it ? It seems so.. Hi,\nIt could have been the language barrier or the late hour of the day ;) (both I guess)\nIn /edit 2 I clearly forgot to add the link:\nhttps://github.com/PHPSocialNetwork/phpfastcache/issues/585#issuecomment-390434268\n(due the hour of the day ;)). I know and understand that, I thought to see the same happening when doing multiple staticly with the same config while testing.. OK, edit on this update, it seems that the check if the driver is loaded is a little bit wacky if you ask me. with instanceof, is_a((), it all doesn't matter if you  create a session class put all functions for your own need in and load that one, even as instance, not at all.\nTips/examples are welcome!. I want to update this and I hope you can work on a solution as I think there isa real flaw in phpfastcache.\nI have a working instance way, the issue there is, I cannot switch buckets when the instance is in my object, $this->cacheHandler stays $this->cacheHandler with the bucket loaded.\nWhen initiating a new Cache($config, $instanceId) and doing some magic on the connection check in the contruct, etc to check a valid Id, the same too much driver loaded issues start existing as I try to check if the 'Id\" was already there... which is not, it's a new one.\nI want to try to put that part into the getInstance() to see what happens but that is the last option. \nYou need to be able to switch buckets in your app!\nPlease come with some more valid examples if you can, most ones are just tests and not showing the real way(s).\nThanks!. Can you please respond on this ? While investigating this it seems you are filling up the items in a cacheInstance and tell the user that getting the driver again is bad practice. I have the feeling that it's a by design library issue as the cache servers and also the clientlibs don't care about it. \nI also ask myself, why filling up and keeping data in an instance object when it's not needed anymore ? Cache should be on demand, your lib is doing different. \nPlease explain, thanks!\nHave some good Holidays!. Make sure the get is done and doesn't get an empty array back as it didn't succeed. This if you talk to a couchbase cluster which could give back 3 servers, you talk to server 1 which between the getinstance() and ->get/set/etc dies and you need to try again.. > \n\nAre you looping through an array of keys or are you just doing a while(true) loop. aka a infinite loop.\n\nYes, a while(true) loop.. > \n\nThere's no loop on get as per psr6:\nhttps://www.php-fig.org/psr/psr-6/\nPlease read the documentation and readme.\n\nHuh ? No I create one, that is what @rnicholls also ment. ->get() in your own while.. @rnicholls sure:\n```php\npublic function get($id, $tries = 10)\n    {\n        $response = [];\n        while ($tries > 0) {\n            $tries--; // we used a try, decrement\n            $CachedString = $this->cacheInstance->getItem($id);\n            if ($CachedString->isHit()) {\n                $response = $CachedString->get();\n                break;\n            }\n        }\n        return $response;\n    }. Yes sure, but I try because I think as explained a couchbase server could fail. This is just a function that I cal on getting an item, there is much more around it an in place. If this get returns empty I move to the Db and cache it.. @rnicholls Yes I agree there but as FastCache does initiate the instance it shoiuld be the way to check that.\nI have some sort of same class you have but every time, even when I initiate the class as Instance it complains about the driver loaded too often.. @Geolim4 yes, assign an id might work. I'm not doing it \"wrong\", it's the way to do in MVC's and is a little bit more complex because of being a MVC and also switching separate buckets. I have searched for a lot of ways, the Id might work but could be mentioned the docs or on the page!\n@rnicholls yes I know about it and use it for other classes, it's just not possible for switching buckets, etc. As I said it's a little bit more complex in some environments.\nI will report back if the Id works out, I think it will! Thanks!. OK what the issue was is that my property was overwritten and there for it was initiating the driver over and over again. I don't know on what example I based it or if it happened during splitting up the connection class.\nAt least thanks for the updates, the Id way is very nice but not usable in a sane way when you need to go from top to bottom with quite some dependencies, etc.\nWhat I dont have answered yet is would a while loop \"work\", I'm going to test with extra Couchbase servers to see what comes back in the instance.. Hi,\nThis is partly true, if you cannot open a bucket or perform an action on the backend you simply can throw an exception. This is what I did on my own couchbase implementation earlier as well, so I think, am pretty sure, you can (make a workaround).\nI think this is doable!\nCheers!. Hi.\nYes I agree, maybe we need to kick the couchbase boys a little bit, I know the maintainer and already pinged him to see how they see that.\nIt are difficult decisions to make sometimes in development like a library you have as you cannot make other software do it better then they already do to line them up with the rest (RFC way of thinking), undoable/too much \"tards\" in IT ;)\nThanks a lot!. ",
    "afdaniele": "@Geolim4 , I'm sorry for the template, I'll use it next time.\nYes, I'm using Apcu on PHP7 and so far so good, I didn't have to use any trick to make it work and didn't have any issue either. I'll let you know if I have any issue in the future.\nCheers,\nAndrea. Sure!\nCheers,\nAndrea. ",
    "rnicholls": "Thank you for the feedback. Really appreciate it. I implemented the suggested changes. \nThe only workaround i could really think of was to make the \"instance\" global then pass that into my class.\n$GLOBALS[\"InstanceCache\"] = CacheManager::getInstance('predis', new Config([ 'host' => getenv(\"DATA_REDIS_HOST\"), 'port' => 6379 ]));\nthis is set in my app where I have things like my constants set for the application \n```\nprivate function connect(){\n$this->InstanceCache = $GLOBALS[\"InstanceCache\"];\n\nreturn $this->InstanceCache;\n\n}\n```\nNot really sure how frowned upon that is lol. but it works for now.. Not gonna lie. Never used a singleton before. But, that did it. Thank you so much!\n```\n<?php\nuse Phpfastcache\\CacheManager;\n  use Phpfastcache\\Drivers\\Predis\\Config;\nclass fastcache {\nprivate static $instance = null;\nprivate $conn;\n\nprivate function __construct(){\n  $this->conn = CacheManager::getInstance('predis', new Config([ 'host' => getenv(\"DATA_REDIS_HOST\"), 'port' => 6379 ]));\n}\n\npublic static function getInstance(){\n  if(!self::$instance){\n    self::$instance = new fastcache();\n  }\n  return self::$instance;\n}\n\npublic function getConnection(){\n  return $this->conn;\n}\n\npublic function isCached($key){\n  $CachedString = $this->conn->getItem($key);\n  return $CachedString->isHit();\n}\n\npublic function setCache($key, $data, $expire = 5){\n  $CachedString = $this->conn->getItem($key);\n  $CachedString->set($data)->expiresAfter($expire);\n  $this->conn->save($CachedString);\n}\n\npublic function get($key){\n  return $this->conn->getItem($key)->get();\n}\n\n}\n?>\n```\nFinal code. Thanks again.. Are you looping through an array of keys or are you just doing a while(true) loop. aka a infinite loop.. Could you post sample code of what you are trying to do?. Ok so, your goal seems to be keep looping until the key shows up, but shouldn't you be trying the key, if not get it from the database and cache the key?. Here is my code for example.\n```\n$fastcache = fastcache::getInstance();\n$cacheConn = $fastcache->getConnection();\n$rows = array();\n$key = \"query_newsArticles-$limit\";\nif ($fastcache->isCached($key)) { return $fastcache->get($key); }\n/ Code to query DB /\nwhile($news = $results->fetch_object()){\n $rows[] = $news;\n}\n$fastcache->setCache($key, $rows);\nreturn $rows;\n```. My fastcache class\n```\n<?php\nuse Phpfastcache\\CacheManager;\n  use Phpfastcache\\Drivers\\Predis\\Config;\nclass fastcache {\nprivate static $instance = null;\nprivate $conn;\n\nprivate function __construct(){\n  $this->conn = CacheManager::getInstance('predis', new Config([ 'host' => getenv(\"DATA_REDIS_HOST\"), 'port' => 6379 ]));\n}\n\npublic static function getInstance(){\n  if(!self::$instance){\n    self::$instance = new fastcache();\n  }\n  return self::$instance;\n}\n\npublic function getConnection(){\n  return $this->conn;\n}\n\npublic function isCached($key){\n  $CachedString = $this->conn->getItem($key);\n  return $CachedString->isHit();\n}\n\npublic function setCache($key, $data, $expire = 5){\n  $CachedString = $this->conn->getItem($key);\n  $CachedString->set($data)->expiresAfter($expire);\n  $this->conn->save($CachedString);\n}\n\npublic function get($key){\n  return $this->conn->getItem($key)->get();\n}\n\npublic function increaseCount($key){\n  $this->conn->getItem($key)->increment(1);\n}\n\n}\n?>\n```. So think the couchbase issue would not be on the fastcache side. \nMy suggestion would be to check if the couchebase connection is active, if not loop until it is, and then use fastcache. \nIf it is, go directly to using fastcache.. @Yamakasi for the driver loaded too often, the way my class is done is actually specifically to fix that. try playing around with it.. ",
    "lord-alfred": "Hello, Georges!\nIt's very strange, because not all operations with cache need a getItem previously for work with CacheItemInterface. My question about it...\nMaybe, I can \"hack\" library and get instance of ExtendedCacheItemInterface from ExtendedCacheItemPoolInterface variable ($queue in my code) without hit (getItem) from redis?\nAnd expiration in my code (zero) - its for forever caching (I delete this item manually in job).. > And you're wrong: The TTL 0 will expires the cache immediately, but I can't blame you, this behavior is directly inherited from memcache behavior and people don't considerate the fact that, by definition, a cache is meant to be temporary.\nI tested it with Redis adapter and this works as i described above. I don't know it's a bug or feature :) Items not expired already more than 2 hours.\n\nBy what's you describing (using the lib as a queue manager), you may want to use RabbitMQ instead ? Which would be more appropriated for you.\n\nI know about RabbitMQ and another queue packages, but in my current project it is a overhead... I want to store in redis some data and get this from another script and... it's all! I not need more software on my server (because this may fall and slow system).\nCan you give me advice how save item in redis without checking for existence? Maybe I need a custom adapter?. Okay, thanks for the help!\nI wrote my minimal class to work with redis (predis). Maybe you can tell me where I could have missed something?\n```php\n<?php\nnamespace App\\Utils;\nuse Predis\\Client;\nclass PredisJobAdapter {\nprotected $instance;\nprotected $is_connected = false;\n\npublic function __construct($config) {\n    $this->instance = new Client($config);\n}\n\nprivate function check_connection() {\n    if (!$this->is_connected) {\n        $this->instance->connect();\n    }\n}\n\npublic function set($key, $data): bool {\n    $this->check_connection();\n\n    $data = $this->encode($data);\n    $result = $this->instance->setnx($key, $data);\n    return ($result == 1);\n}\n\npublic function get($key) {\n    $this->check_connection();\n\n    $val = $this->instance->get($key);\n    if ($val == false) {\n        return null;\n    }\n    return $this->decode($val);\n}\n\npublic function keys($pattern): array {\n    $this->check_connection();\n\n    return $this->instance->keys($pattern);\n}\n\npublic function delete($keys): int {\n    $this->check_connection();\n\n    if (!is_array($keys)) {\n        $keys = array($keys);\n    }\n    return $this->instance->del($keys);\n}\n\nprivate function encode($data): string {\n    return \\serialize($data);\n}\n\nprivate function decode($data) {\n    return \\unserialize((string)$data);\n}\n\n}\n```\nPS: Existing solutions for working with queues do not suit me. They are monstrous and uncomfortable. I also need a minimum of functions just to quickly save data to the redis, and then in the background of transferring them to the database.. ",
    "hgneng": "Sorry, I forgot I was using a very old version (3.0.0). But I am not planing to upgrade it. I will verify whether this issue exists in latest version in future. So we can ignore this issue now.. ",
    "screamolic": "i see. please update the DOCS example please  :) \ud83d\udc4d . wheres belong to? sorry i dont understand. can you help me. can you give me example?. ",
    "reimax": "yes and files work, but redis not. there is a working example under redis?. read and like I said: not work.\nremove phpfastcache, use other. thanks for your help.. i adapt example and use\n\nuse Phpfastcache\\Drivers\\Redis\\Config as RedisConfig\n\n. Thanks, I noticed that. The problem was solved by installing an extension for php to work with redis. ",
    "dertin": "Hi,\nthe idea is to implement something of low cost.\nWhat I came up with was to use a diskram. I'm going to demonstrate how it works.\nThe other option is to implement with the following AWS service.\nhttps://aws.amazon.com/elasticache/\nI should work without problems, right?\nUsing cache in files I had a problem with a server that could not write to the disk and when I recovered the writing on the disk, I had to manually delete the temporary files to work, I do not remember the error indicated by PHP. but it was like looking for a cache file that I could never write.\nRegards\nGuillermo.. The problem of writing to disk, was because it ran out of free space. Somehow after restoring the space, the cache was badly indexed. But this was with the default file driver in a normal ext4 file system.\nNow I want to test in an tmpfs file system and then with the Amazon Elasticache (https://aws.amazon.com/elasticache/). ",
    "vainj": "Your welcome and thanks for your reactivity ;)\nLast question :\nCould you create a new tag in order to pull those modifications via Composer?\nThanks in advance.\n. Okay, thank you for your answer. I will use the \"dev-master\" version until then.\nHave a good holiday:). ",
    "mikepsinn": "@Geolim4  Thanks for your great work!  :D. ",
    "zkwbbr": "@Geolim4 How does PHPFastCache use Memcached, does it use Memcached? If yes, then the code above should work as there's really no big difference.. @Geolim4 I did some more tests and found that PHPFastCache appears to be not honoring the host and port details at all. I started a local memcached instance then it worked even after entering several fake host and port details. \nThat said, this issue might not be related to Docker at all but simply due to PHPFastCache ignoring user supplied host and port details. Can you kindly confirm if this is indeed the case?. Not sure if it's related but I tried that test  file and replaced line 29 and 30 with:\nphp\n'host' => '123',\n'port' => 123,\nwhich is an invalid host/port and it passed, is that expected?. You mean to say it can only listen to localhost?. Anyway, if what you're saying is true, what do you make of my first example where  PFC can't connect but using plain PHP's  \\Memcached(); can? They're both connecting on the same host/port.. I'll see what I can find.\nI think the custom port works fine but the issue is using a different host ip other than 127.0.0.1.\nHave you tried using a random fake host ip like 1.2.3.4? If I do that it doesn't return an error and continues to work fine when it should at least return a connection error, right?. You mean in plain PHP memcached? Yes that's what I'm doing in my example, I don't think there's a setHost() method.. How do I do that? This is what I'm using:\n```php\n$cfg = [\n    'host' => $ip,\n    'port' => $port\n];\n$driver = CacheManager::Memcached(new Drivers\\Memcached\\Config($cfg));\n$cache = new Psr16Adapter($driver);\n``. IDE, I don't seeaddServer()` method here https://github.com/PHPSocialNetwork/phpfastcache/blob/master/lib/Phpfastcache/Drivers/Memcached/Config.php. Wait, can you let me know how to properly use the PSR16 adapter with memcached? I feel like I'm missing something there. Here's what I'm currently doing:\n```php\n$servers = [[\n    'host' => $ip,\n    'port' => $port\n    ]];\n$conf = new Drivers\\Memcached\\Config;\n$conf->setServers($servers);\n$cache = new Psr16Adapter('memcached', $conf);\n$cache->set('foo', 'bar');\necho $cache->get('foo');\n```\nThis returns an error:\n\nFatal error: Uncaught Phpfastcache\\Exceptions\\PhpfastcacheCoreException: The driverRead method returned an unexpected variable type: string in /srv/app/vendor/phpfastcache/phpfastcache/lib/Phpfastcache/Core/Pool/CacheItemPoolTrait.php:93 . The error happens just right after doing $cache->set('foo', 'bar');\nWhat do you make of it?. I did, I think that solves it.\nCase closed I guess. Thank you!. Yes, doing this doesn't work:\n\n$conf = new Drivers\\Memcached\\Config;\n$conf->setHost($ip);\n$conf->setPort($port);\nAlso, my original first example post only works if localhost (127.0.0.1) memcached is active, it can't \"see\" a different IP.. php\n$conf = new Drivers\\Memcached\\Config;\n$conf->setServers([]);\n$conf->setHost($ip);\n$conf->setPort($port);\nThat works! . No worries, thank you.. Sorry, I tried the new update, but I'm now facing a new issue.\nWhen using $conf->setServers($servers); alone, it errors:\nFatal error: Uncaught Phpfastcache\\Exceptions\\PhpfastcacheInvalidConfigurationException: Missing keys for memcached server: saslPassword in /srv/app/vendor/phpfastcache/phpfastcache/lib/Phpfastcache/Drivers/Memcached/Config.php:112\nIt wasn't like this before the update, sorry about it :). Sorry but I believe they're not required by memcached?\nTo clarify:\nThis works without setting saslUser and saslPassword:\nphp\n$conf->setHost($ip);\n$conf->setPort($port);\nBut this doesn't work (as of 7.0.5):\nphp\n$servers = [[\n    'host' => $ip,\n    'port' => $port,\n    ]];\n$conf->setServers($servers);\n. ",
    "fantastlcok": "Is ok.\n```\nuse Phpfastcache\\CacheManager;\nuse Phpfastcache\\Config\\ConfigurationOption;\nuse Phpfastcache\\Drivers\\Files\\Config as FilesConfig;\n$configc = new FilesConfig();\n$configc->setpath(DIR.'/cache');\n$configc->setSecurityKey('test');\n```. ",
    "fabiocmazzo": "Requires a Composer require, new MongoDB driver is a low-level driver, you have only database commands, without a high level classes (Collection, Database, etc).\n. "
}