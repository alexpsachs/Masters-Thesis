{
    "p-e-w": "Fixed in https://github.com/p-e-w/finalterm/commit/e5ac606606ef528cef7aa9ee872b911b16da4104; actually, a better solution was implemented: Line breaking of entries.\n. Good idea :)\n. Implemented in https://github.com/p-e-w/finalterm/commit/330e9ed422cb5c5b10a1ab8f6a97e65271af8111.\n. Fixed in https://github.com/p-e-w/finalterm/commit/67d874d5bff188a62fdc1784e02d447db4fe62fa\n. Fixed in https://github.com/p-e-w/finalterm/commit/c6e26c446f9031a433372101d2b5eea2b28e2cd5.\n. @sajithdilshan: That's why this bug is here.\n. @pyluyten: I'm afraid I don't understand what you mean.\n. > IMHO, this bug is so urgent and important to solve it as soon as possible.\nI respect your opinion, but I disagree. Full support for terminal emulation is much more important, both for usability reasons and because the implementation details will determine how copy & paste can be executed.\nBoth bugs will of course be fixed before Final Term is officially released.\n. Sorry, no.\n. @JishnuChatterjee: I'm confused. What exactly do you find disappointing?\nThat the lack of copy and paste is already being tracked in this issue? That it is marked as part of the \"Initial Stable Release\" milestone so there will definitely be no Final Term release without copy and paste (note that this repository is not a release but an in development project, as is clearly stated everywhere from the website to the readme)?\nAll these things are very positive IMO so I do not see why they would disappoint anyone...\nHowever... in case you mean that you are disappointed that copy and paste is not implemented yet, fear not! There is a very simple fix: Just submit a pull request implementing it and I promise I will consider it for merging. In case you are unfamiliar with Vala (as I was before I started Final Term), the tutorial is here: https://wiki.gnome.org/Projects/Vala/Tutorial\n. @efouladi: I'm very excited to hear that you are undertaking to implement this important feature. As noted in https://github.com/p-e-w/finalterm/issues/301, deep changes to TerminalView and TerminalOutputView are planned and will significantly affect how copy & paste can work. Could you give an outline describing how you intend to go about this so we can make sure it is compatible with what is coming? Feel free to email me if you want.\n. Yes I did, just sent you a reply :)\n. @arkocal: I agree, this is a really convenient idea. A simply right click menu item to copy the full line currently under the cursor would also make sense, and could be implemented with current technology as well.\n. Hmm... it appears that the shell already gets terminated on application exit. I do not see why this should be so, however (AFAIK, the child process should be orphaned and then adopted by init), so I do not want to rely on it.\nAny insight?\n. On Linux (which is the only supported platform ATM) all shells consistently exit along with Final Term, and other terminal emulators don't seem to take special care here either.\nSo for whatever deeper reason, this appears to be a non-issue.\n. Actually, Alt Gr+E will produce \"\u20ac\", but Alt Gr+~ will not produce the tilde character.\n. Turns out those keys are called \"dead keys\" (http://en.wikipedia.org/wiki/Dead_key, https://help.ubuntu.com/community/GtkDeadKeyTable).\nHow do Gtk applications handle them by default?\n. Maybe this is actually the same issue as #35.\n. Tilde is working now, but \u00e9 is not.\n. Fixed by @hamzadis.\n. Subset of #150.\n. Hmm... I have tested the instructions on the HEAD revision with a vanilla F18 and had no problems. The libkeybinder \"make install\" really sucks, if it behaved normally the whole copying hack would not even be neccessary.\nAnything unusual about your setup? I'll investigate further and post results.\n. I have confirmed the problem on a F18 running inside a VM and am working on it.\n. @gaveen: Running sudo ldconfig fixed the problem for me. I'll add this to the instructions ASAP.\n. Works for me with https://github.com/p-e-w/finalterm/commit/e663daebd7c1c00dace7084aaa009a6dc5ebe2a9\n. Symlink is a good idea, but I hope to be able to do away with the \"copying hack\" altogether as soon as possible. Do you understand why this is even necessary in the first place?\n. Split terminals are definitely also under consideration.\n. Tabs are coming :)\nThough probably not too soon...\n. @snitko: I expect this to be one of the last features to be implemented before the initial release, maybe even afterwards. To my current best knowledge, this translates to something like early 2014.\nBut as I have said many times, tabbed terminals are definitely coming.\n. Implemented in https://github.com/p-e-w/finalterm/commit/2a349712d670ef5378d4b607cd29b1e4e93aa4df.\n. @tomb95: This looks good. I'll examine it in detail tomorrow (especially the keybinder reference issue, which has always been a problem) and merge it if everything is OK. Thank you very much for your effort :)\n. @tomb95: I have found that unfortunately, changing \"keybinder\" to \"keybinder-3.0\" results in the package not being found on Fedora, while on Ubuntu Raring the reverse seems to be the case.\nThis is an ugly problem. Any idea how to fix it?\n. @tomb95: I have no experience using cmake, but it sounds like a wonderful idea. I would greatly appreciate if you could help me porting the build system to cmake!\nOn a side note, I am also a big fan of simplicity, and, above all, clarity (as you will see throughout the source code). I hope that moving to cmake will not require a makefile as bloated as that of many other projects.\n. @vivaeltopo: Linking issue it is... I'll look into it. Help is greatly appreciated! If you can figure out what the problem is please tell me, I will gladly merge any pull request fixing it (or add Arch instructions).\n. @paneu: Have you managed to build on Arch?\n. So adding '-Xcc=-lmx-2.0' was all that was required? If yes that would be wonderful.\n. Awesome! The pull request will definitely be merged in the next days.\n. @ajaypanyala: Maybe this pull request can help you: https://github.com/p-e-w/finalterm/pull/14\nI'll merge it as soon as I have confirmed that this does not screw things up on other distros.\n. There seems to have been a change in Raring causing this because I did not encounter it on 12.10.\n. Thank you for your feedback. Unfortunately, I cannot simply make this the default (yet) because it breaks compilation on Fedora.\n. Yup, this is a known issue, see the discussion at https://github.com/p-e-w/finalterm/pull/20.\n. Should be fixed by move to CMake.\n. @ajaypanyala: Thank you for your report. This is one of many issues that will get fixed as additional xterm control sequences get implemented. Final Term currently supports only a fairly small subset of them as noted on the website.\n. This bug is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. Silly me... this is actually a non-issue since those sequences are never piped no matter what :)\n. o_o This is awesome!\nYou'll forgive me if I'll need some time to digest all of it before actually merging, which from what I have seen so far I fully intend to do. I'll be nitpicking around the code a bit about style and minor stuff; ideally, I'll want to merge your pull request unchanged.\nA few points:\n- The reason why I didn't have make install yet is because I like the fast dev iterations of change -> compile -> launch. Will that still be possible somehow?\n- I'm not sure I like the move to GSettings for one of the config files separately. I have been really impressed by the way Sublime Text 2 handles configurations, everything is a text file (though JSON in that case), everything is in one folder, can be shared, copied, deleted... Also, there is no dependency on GSettings, which might matter for portability reasons.\n- Which platforms have you already compiled this on? I'll try on Fedora and Quantal ASAP, over the next days probably some others as well once I have more time.\n- Any ideas why it is necessary to manually copy the keybinder shared libraries after compilation? I would really like to get rid of that requirement.\nI greatly value your contribution. Tonight, I hope to start a development blog for Final Term to coordinate the combined efforts where I will outline a plan towards an initial, \"somewhat-stable\" release. I will mention your efforts there.\nP.S.: The pull request currently doesn't apply to master. I've pushed a few fixes this morning.\n. You could try to pull again from master (git pull origin master in my repo), but I doubt Git will be able to auto merge since you have moved just about everything. The task is basically to integrate the changes from my branch with yours, which should not be too difficult even manually. We'll see once I'm ready to merge.\n. @tomb95: The queuing bug? REALLY? That one's been bugging me for ages, but I never quite felt like going too deep trying to find the cause. Wonderful!\nAs for getting rid of all compile time warnings, good luck. While most of the Vala ones are simply unhandled errors, Vala has numerous bugs that let problems slip through to GCC without it noticing (both warnings and errors, many of them documented in Final Term's source code, which I imagine might become a treasure trove of test cases for the Vala makers). I doubt it is possible to eliminate all warnings.\nAs for all this magic going into this branch... I somehow would prefer if those were separate pull requests made afterwards \u2013 which now makes merging the CMake stuff my number one priority, and I'll try hard to get that done tomorrow.\nKeep going :)\n. @tomb95: I looked through the entire pull request and feel confident to merge now, problem is, it doesn't apply to the current master branch. If you can fix that I'll merge immediately, otherwise I'll try manually tomorrow.\nBTW I noticed https://github.com/tomb95/finalterm/commit/89154e26c2b2083cf4a30de5ae3a14dc8f3a6b3c, if that is necessary for the pull request to work properly feel free to add it.\n. Now here's the ugly part: On Fedora, trying to build with cmake, I am getting \n-- checking for modules 'clutter-gtk-1.0;mx-1.0;gee-0.8;keybinder-3.0'\n--   package 'keybinder-3.0' not found\nCMake Error at /usr/share/cmake/Modules/FindPkgConfig.cmake:279 (message):\n  A required package was not found\nCall Stack (most recent call first):\n  /usr/share/cmake/Modules/FindPkgConfig.cmake:333 (_pkg_check_modules_internal)\n  CMakeLists.txt:21 (pkg_check_modules)\nIf I change \"keybinder-3.0\" to \"keybinder\" as in the Makefile I get the same error:\n-- checking for modules 'clutter-gtk-1.0;mx-1.0;gee-0.8;keybinder'\n--   package 'keybinder' not found\nCMake Error at /usr/share/cmake/Modules/FindPkgConfig.cmake:279 (message):\n  A required package was not found\nCall Stack (most recent call first):\n  /usr/share/cmake/Modules/FindPkgConfig.cmake:333 (_pkg_check_modules_internal)\n  CMakeLists.txt:21 (pkg_check_modules)\nAlthough keybinder can be found when I run the makefile. Me knowing nothing about CMake, do you have an idea what is going on?\n. I'll be going out now myself and be back in about 10 hours too. I guess we live in the same part of the world :)\nWill be trying that out then.\n. @varemenos: See https://github.com/p-e-w/finalterm/pull/20#issuecomment-17779694\n. @tomb95:\nFound it:\nPKG_CONFIG_PATH=/usr/local/lib/pkgconfig/\nexport PKG_CONFIG_PATH\ncmake ..\nmake\nsudo make install\nAnd WOW, does it work! And how many issues it solves. Turns out that the entire library copying hack can be done away with if the pkg-config search path is pointed to the (unusual) location where the libkeybinder make install puts it.\nLet's get this merged!\n. @tomb95: I'm doing the merge right now, no need for you to fiddle. Will let you know when it's done.\n. Done!\n. Not yet... @tomb95 has ported the build system to Cmake (https://github.com/p-e-w/finalterm/pull/20). You could try if that solves your problem. This will most likely get merged into master some time over the next few days.\n. Hmm... let's get back to all this once everything is on CMake.\n. Should be fixed by move to CMake.\n. Looks like a duplicate of https://github.com/p-e-w/finalterm/pull/14 and will be fixed once that is merged.\n. The .fttheme file is actually fully commented: https://github.com/p-e-w/finalterm/blob/master/data/Themes/default/default.fttheme and should require no further explanation (correct me if I'm wrong).\nThe styles.css is parsed using Mx, and the selectors relevant to Mx apply. Unfortunately, Mx itself is barely documented at all. I found out the names of the selectors and what they can do through trial and error only, so I'm afraid you are going to have to do the same :(\n. This is the default style for Mx: https://github.com/clutter-project/mx/tree/master/data/style\nI learned most of what I needed from there, good luck looking for any documentation anywhere on the web, or even examples(!) \u2013 which is a shame, because Mx is awesome.\nIf you make a theme, be sure to let me know. Please observe that the gutter and scrollbar colors and transparency of the default theme are carefully chosen to match both light and dark color schemes.\nI am looking forward to seeing what you come up with :)\n. @varemenos: BTW if you are also interested in making color schemes, you can use https://github.com/p-e-w/finalterm/blob/master/data/ColorSchemes/ftcolors.erb with https://github.com/chriskempson/base16-builder to make a Final Term-compatible LIGHT/DARK color scheme with the colors of your choice :)\n. Please also observe that https://github.com/p-e-w/finalterm/blob/master/data/Themes/default/style.css#L49 is tied to hardcoded stuff in TerminalView.vala to work around an ugly Mx limitation. This should thus be included unchanged in any theme.\n. Wow. I did not know that. Will look into it once support for the standard cases is a bit better.\n. I can reproduce it on Fedora, too, but only when I build with this pull request: https://github.com/p-e-w/finalterm/pull/20. It wasn't there before.\n. @tomb95: It seems to be a bug caused by this line https://github.com/tomb95/finalterm/commit/2b7b42445612dc3bc1066d2613c0f1aafaf71c67#L4R185\n. @tomb95: I can confirm it also happens with the latest commit on branch cmake.\n. The problem is this:\n```\n\nwhich ls\nalias ls=\"if [ -t 1 ]; then '\\''/usr/local/share/finalterm/Termlets/ls'\\''; else '\\''ls'\\''; fi\"\n```\n. It appears that this regression was introduced in https://github.com/p-e-w/finalterm/commit/ac170eea2d49d277bfe1982442c34812d34af038.\n\nThe alias does not work because the shell arguments get passed to it after the if construct rather than after the commands in it.\n. I agree, though that will probably only happen after Final Term (with bash) is fully stable. But I definitely intend to support all major shells in the future.\n. Please be patient, folks :)\nI'll revisit zsh once Final Term works properly with bash.\n. @Alyxr: It does, to me at least :)\nSee https://github.com/p-e-w/finalterm/issues/44\n. @tsdh: What's needed to make another shell work with Final Term is a startup script along the lines of https://github.com/p-e-w/finalterm/blob/master/data/Startup/bash_startup that injects the custom control sequences that tell Final Term what is going on inside the shell.\n. With the most recent changes, zsh support has become a much closer goal than it was before. Please see http://blog.finalterm.org/2014/01/the-marriage-of-terminal-and-shell.html for some details.\n. @Almehdi: I cannot reproduce this, but I see the following line in your output:\nzsh: segmentation fault (core dumped) finalterm\nAre you attempting to use Final Term with zsh? I'm afraid to say that currently, only bash is supported as mentioned in the docs.\nIn case, however, that this line is just shown in zsh (i.e. you're running Final Term from zsh), there is a real bug. Please post as many details about your setup as you can.\n. Have you pulled tha latest changes? https://github.com/p-e-w/finalterm/commit/f643fd58bb194b7a4855277dab03f3bb5a0965ee adds quite a bit of additional error logging...\n. Closing as I am unable to reproduce this problem.\n. Looks good overall. I wish there was a better way to get rid of the warnings than handling every single case where an error might be thrown (RegexError?!?), it would make the code much more readable. There should be a flag to suppress \"unhandled error\" warnings as they clutter up the build output in a large project.\n. Thanks, I'm a code quality freak :)\nGot an appointment IRL now, will be back tomorrow and merge this.\n. BTW, I've added your name to the about dialog credits.\n. Done.\nI am now getting a runtime error though:\n** (finalterm:4854): CRITICAL **: theme_get_margin_right: assertion `self != NULL' failed\n. @tomb95: blush I see. This was a reflex because I had the pattern in my mind that I always want the registrations at the end of the constructor of any class.\n. I first fixed it without thinking by means of https://github.com/p-e-w/finalterm/commit/6c4774fc088c17586269874e142921b933455650, but then I realized why I had had that pattern in my mind in the first place and pushed https://github.com/p-e-w/finalterm/commit/dd772d0478e6c53418044a1a33c2295b51872a9d.\nNow the right margin, as every other aspect of the theme, can be updated for existing LineViews.\n. What are the errors that occured?\n. True, if there's no answer we can't do anything here.\n. What is in /home/colin/Source/finalterm/build/CMakeFiles/CMakeOutput.log?\n. Hmm... that might have to do with a hack designed to allow toggling at all, because on Fedora certain events always get fired in a certain order. I'll look into it.\n. The magic is happening here: https://github.com/p-e-w/finalterm/blob/master/src/TerminalView.vala#L221.\nThe comment explains what the problem is and how Final Term solves it. Maybe this causes another problem somewhere else.\n. My guess would be that Xfce, rather than the drivers, are to blame. I still find it difficult to imagine what is going on though.\n. That is exactly what I was thinking.\n. Sorry, I really can't think of anything :(\n. That would worsen the experience on other platforms where it works now though... I really don't know what to do here.\n. But the common denominator seems to be window managers other than GWM...\n. @abderrahim: That line hides the button when the mouse leaves it, unless it is pressed already.\n. I like the creativity of that workaround idea but not its usability :)\nThe real problem behind all this is that the order of events seems to vary between systems. I've looked at how the new Menu Button widget in Gtk+ 3.6 (e.g. seen in Nautlus) does it but found that they have almost exactly the same approach as Final Term without the hack, which seems to work for them but not for us (maybe because of Clutter).\n. That sounds like an interesting approach indeed. Pull requests are definitely the preferred channel for code contributions.\nWould this also fix the second problem you are describing:\n\n(exept that the menu doesn't appear immediately after I click the button, I have to move the mouse for it to appear)\n\n?\n. @abderrahim: Thank you for fixing this! I can't test it myself because it works for me anyway but I'll just take your word for it.\nI have added your name to the about dialog credits: https://github.com/p-e-w/finalterm/commit/20e4bd2c3e1127ec86d58e125f967a7eaa7c46aa\n. Unicode issue probably. Can you post steps to reproduce?\n. The exact name of the file, maybe?\n. The \"ls -lh\" bug has been fixed, I suggest you update.\nThe segfault here is still a mystery though.\n. Fixed in https://github.com/p-e-w/finalterm/commit/0ca303c65c8bbe1f3f8541e81e71dc4f8b33b246\n. This smells as if there is a wrong version of Clutter installed.\nCould you post the system you're on and the Clutter version?\n. 1.0 is, according to your log, the version of clutter-gtk, not clutter.\nThe minimum clutter version supported right now is 1.12, which is required by the function in question: https://developer.gnome.org/clutter/1.12/ClutterActor.html#clutter-actor-set-x-expand\nI'm sorry, but I can't think of a workaround at the moment. x_expand is vital to layouting in Final Term.\nI suggest you upgrade your clutter, either from a PPA or by building from source.\n. You might be missing the Vala bindings for Clutter 1.12, even though Clutter itself is installed.\n. The problem seems to be that under the Turkish locale, capitalizing \"i\" does not produce the same result as capitalizing the same Unicode character under another locale.\n```\nThere ara lots of erros like that so I ran compiling steps as:\nLC_ALL=C cmake ..\nLC_ALL=C make\n```\nI don't quite get what you mean here... please elaborate.\n. So you are saying that setting the LC_ALL environment variable to \"C\" will fix the problem because it overrides the locale?\nIf yes that should happen by default. Any idea how to integrate this into the CMake build process?\n. I'll give it a try as soon as I can.\n. Thanks. I'll still keep this bug open because it seems we can implement a workaround.\n. The underlying Vala bug has been fixed upstream and will not occur anymore once a new Vala release gets packaged so I'm closing this issue since we won't have a workaround implemented until then anyway.\n. I know :)\nAny information on what kind of characters bash expects to receive when these shortcuts are pressed is greatly appreciated!\n. @nerzhul: That's true (actually, I believe it's SIGINT), but the exact mechanism eludes me. I don't see other terminal emulators registering the Ctrl+C shortcut and then sending SIGINT when it is captured. The same applies to Ctrl+D etc.\nThere even seem to be some differences between terminal emulators. In GNOME Terminal, when pressing Ctrl+D, you can see for a split second that \"exit\" actually gets typed and then executed. That is not true in xterm AFAICS.\n. I can happily announce that I've just discovered how to make (probably all of) these shortcuts work. Here is the recipe for posterity (or all those that are searching for it like I was):\n1. The entire keypress (i.e. Ctrl+C etc.) has to be translated to a compound character (e.g. using xmblookupstring), which for Ctrl+C turns out to be \\x03 (ETX). See also http://en.wikipedia.org/wiki/End-of-text_character.\n2. This character is then sent to the shell, which does the rest, like sending SIGINT to the executing program.\nThis will therefore be fixed in Final Term soon, I'll announce it on the development blog (http://blog.finalterm.org) when it's ready. Hang on just a little longer :)\n. # An important decision has to be made here, I welcome your input!\nThere are two options:\nOption A\nFinal Term will perform compound character translation just like most other terminals (see above). That way, Ctrl+C will always raise SIGINT because shortcuts are effectively interpreted by the input method and the shell (unless the input method is configured not to translate Ctrl+C to ETX, or the shell is configured not to raise SIGINT on receiving ETX).\nOption B\nFinal Term will NOT perform automatic translation. Instead, Ctrl+C will be mapped to send \\x03 using standard Final Term key bindings. This will be more cumbersome (and potentially have side effects that I cannot foresee at this moment), but will give the user the option to remap standard terminal key bindings (e.g. freeing up Ctrl+C for copying text).\nIs remapping worth the hassle? What issues could option B bring? Please let me know your thoughts on this.\n. Come to think of it, there is actually also\nOption C\nPerform composition by default, but make it overridable using key bindings.\n. @Almehdi: Yes, I've seen this feature in GNOME Terminal and found it pretty thoughtful. However, it is one thing to handle this single common exception in a user-friendly way, and quite another to make manual mapping the default. I am inclined to believe that remapping maybe isn't as valuable as it may seem.\n. Fixed in https://github.com/p-e-w/finalterm/commit/630d72dc87877f09bc4c0afc4466720f3b06cda6 along the lines of Option C.\n. @HexNutRacing: While I appreciate your willingness to become a very early adopter of Final Term, I do advise you to be careful. Most complex terminal applications will still not work reliably, and some crashes have been reported.\nThat being said, good luck! :)\n. My Russian is a bit rusty, but Google Translate's is not: \"Error segmentation (made \u200b\u200bmemory dump)\"\n. This might have been fixed by https://github.com/p-e-w/finalterm/commit/427bd77bf17d02c99c0df84415a0870b0fe78916, please try again.\nIf not, the problem is likely to be the locale again. Are there files containing Cyrillic characters in that directory?\n. Any more details? I can't reproduce this on any of my machines.\n. Closing as I am unable to reproduce this problem.\n. OK, I tried to build and it turns out my version of libgee indeed does not pass as gee-1.0. So that bump has to be made conditional on libunity's presence.\n. I fixed the libgee problem, but libnotify is not found even though it is present on my system.\n. See https://github.com/p-e-w/finalterm/commit/0d70ec531255eeb532bb0ec33282325ef72833f5.\n. Everything is merged now. Notifications work on Fedora, I was missing the development files for libnotify.\nThank you for another valuable contribution!\n. @tomb95: I tested this on a vanilla Raring system today but there's a compilation error.\nlibunity-dev and libnotify-dev are installed, CMake is OK, but I get on make:\nunity.h: No such file or directory\n. Removing the build dir did the trick!\nI just pushed https://github.com/p-e-w/finalterm/commit/a1f75cd5038e938b4530b5d7ceef77505253c123, which adds the command to the notifications. It also fixes a bug where the notification is shown immediately if the window isn't focused when the program starts.\n. Looks like a duplicate of https://github.com/p-e-w/finalterm/issues/32. Please verify that you have Clutter 1.12.\n. Not according to the docs: https://developer.gnome.org/clutter/1.12/ClutterActor.html#ClutterActor--x-expand says 1.12.\n. And I have 1.12 on my system, and it works for me.\n. @stiks: Could you kindly try whether @tomb95's idea fixes the problem for you? If it does, I'll change that line.\n. o_o\n. Pushed to master. Thank you for the workaround, @tomb95!\n. Could you please rebase https://github.com/tomb95/finalterm/commit/ce2df9c3ab1bf8bd691fc3675ea5f43918eb82b7 on top of the current master branch (see http://learn.github.com/p/rebasing.html for how)? Otherwise the huge merge will essentially occur in the history twice.\nBesides that, looks pretty good :) Will be back with more comments shortly.\n. Not sure if the rebase was successful, it asked me to merge my own branch when pushing.\nHmm... that's weird indeed. I'm not enough of a Git whiz to understand what's going on here. Now it looks even more ugly than before ;) I'll try to fix it locally on my branch after merging before pushing.\n. OK. I'll move everything into Settings. I guess we also don't need to separate \"set_color_scheme\" and \"set_theme\" either then, everything will just connect to a \"settings_changed\" signal from Settings and take the appropriate action.\nAlso, I guess that all the fields and methods in Settings can be static. There is really no need to instance that, ever.\nSo my suggestion is, you ~~make the libgranite-style change~~ or whatever else is needed to wrap up stuff in your branch and push, I'll merge and then do the refactoring.\n. I also feel like I should move the fonts out of Theme and into the settings as well. These should be possible to change without needing to edit the theme.\n. On second thought, don't make the libgranite-style change now. I'll probably need to touch everything again for the refactoring anyway.\n. No, nothing left for you to do (here).\nGranite thing is nice, I'll use that pattern.\n. This is now merged, I actually learned how to rebase and squashed it down into https://github.com/p-e-w/finalterm/commit/53c95a19dffb7401ac803a6e2ee5c97234433fc4. I guess that's how I'll be doing merges in the future, it looks much cleaner in the history.\nI also pushed https://github.com/p-e-w/finalterm/commit/127df52cfe86a3784e62819a85c7c2281a96be33, a refactoring of the settings concept, removing ColorSchemable and Themable and making everything synchronized with a global Settings singleton. Everything works, although it is currently a bit slower than before (because just about everything reacts to every single settings change), but that could easily be optimized by taking key into account.\nI'd appreciate if you could take a quick look at that commit, since it's a rather large change and I might have overlooked something.\n. Hmm... works for me, both on Fedora and Ubuntu.\nLooks like Final Term does not properly receive FTCS_PROMPT_START and FTCS_COMMAND_START. I wonder if it could be a bash problem. Are you on elementary?\n. I just installed Final Term from scratch on a brand new Ubuntu 13.04 system and everything worked; could it be Pantheon somehow?!?\n. I'm glad :)\n. I have no qualms about putting a symlink into /usr/bin as well. Will take care of it soon (have to untangle some other things first).\n. @Richard-W's answer makes sense to me. I'm closing this one.\n. The clear issue is a duplicate (https://github.com/p-e-w/finalterm/issues/18). About the other issue: How can I reproduce?\n. I always have to launch final term from the bash shell using the sudo command otherwise final term doesn't work at all.\nThat's the first time I hear of this. Which distro are you on? How did you install?\n. BTW I strongly advise against running Final Term as sudo. It's simply not stable enough for that.\n. Closing this because I cannot reproduce it using the instructions provided.\n. Actually, fish is what I use myself ;) However, fish already has some of the benefits that Final Term is going to bring to other shells built in. As such, bash is going to remain default, while other shells, including fish, might be supported at some point in the future.\n. This is a duplicate of https://github.com/p-e-w/finalterm/issues/44.\nI love fish as much as you do, though :)\n. This is one of a wide variety of problems caused by currently limited support for xterm control sequences. It will be fixed as support is improved.\n. This bug is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. Closing because of duplicate. Thank you for the report, though. If you can shed any more light on this (e.g. the exact file name) I would be glad to hear it.\n. Thank you. I'll look into it.\n. @aglarendil: Can you give a concrete directory name that produces that bug? I'm not able to reproduce it reliably yet.\n. Yes! mkdir \u0440\u0443\u0441\u0441\u043a\u0438\u0439 creates a directory that reproduces the bug for me always, irrespective of locale.\nHopefully, that means I'll be able to find the problem soon :)\n. The problem is that Pango.Layout.xy_to_index returns the byte index of the character at the position, but get_text_element_from_index expects a character index.\n. Fixed in https://github.com/p-e-w/finalterm/commit/0ca303c65c8bbe1f3f8541e81e71dc4f8b33b246\n. @fuzzgun: Thank you very much for your contribution. Being a complete stranger to packaging, I'll probably need some time to try this out myself, but I definitely intend to merge if there are no grave issues.\nWill this generate a .deb that is compatible with Ubuntu also? Are you a Debian/Ubuntu maintainer with upload access?\n. I see. Maybe a PPA for Ubuntu would also make sense, I hear that Launchpad supports automatic daily builds from GitHub...\n. BTW libunity is an optional dependency for Final Term. Maybe it could be made into an optional dependency for the build script also.\n. Where are such unstable development .deb files best hosted?\n. @fuzzgun: You are absolutely right, we're still in the early stages here. I estimate it will take at least another 3 months until usable functionality and stability is reached.\n. I don't have a LP account yet but of course I can create one. This week I intend to spend my Final Term dev time exclusively on infrastructure and stabilizing, but afterwards I'm going to look into the PPA thing. If you already know how to make a daily build PPA linked to GitHub and feel like doing it yourself, I won't stop you, though... :)\n. I've set up an Ubuntu box now and tried running debian.sh, but I get multiple errors:\ndpkg-source: error: add data/Themes/default/button.png in debian/source/include-binaries if you want to store the modified binary in the debian tarball\n...\ndpkg-source: error: unrepresentable changes to source\n. Can you fix it? Did it work on your system?\n. @fuzzgun: Sorry for the delay; I'm still getting errors:\n1. 16x16 icon is missing from include-binaries. That error disappears when I add it.\n2. tar: ../finalterm-0.10: Cannot stat: No such file or directory\n3. dpkg-source: error: Aborting due to unexpected upstream changes, see /tmp/finalterm_0.10.1.diff.hPN_YP\n. I would really like the parent directory not to have to be called \"finalterm_x.xx\" as mandated by https://github.com/fuzzgun/finalterm/blob/c625030882e7a63cb8ec471198953be19e6b3de7/debian.sh. Any directory name should work without requiring configuration changes.\n. My mistake :)\nThis got me quite a bit further, the compilation works now but at the end of all there is another error:\ngzip: man/finalterm.1.gz: No such file or directory\ngzip: man/finalterm.1.gz: No such file or directory\ndh_installman: zcat man\\/finalterm\\.1\\.gz > debian\\/finalterm\\/usr\\/share\\/man\\/man1\\/finalterm\\.1 returned exit code 1\nmake: *** [binary] Error 2\ndpkg-buildpackage: error: debian/rules binary gave error exit status 2\nLooks like it is expecting a manpage and doesn't find one which is fine (because there isn't one ATM), but it prevents a package from being generated.\n. Also, debian.sh should rename the parent directory to what it requires it to be, because cloning from GitHub always produces a directory named \"finalterm\" only (and putting everything in a wrapper directory just to satisfy the Debian convention is ugly).\n. Just tested your master branch on Ubuntu and it compiled the package with no problems. Installation from the .deb also worked. Wonderful :)\nWill examine this in more detail later and then merge (please get rid of the binary manpage archive first though; the archive should be generated on build). I hope it's alright for you if I squash the ~20 commits into one.\nAlso, could you kindly rebase on top of the current master?\n. @versable: That sounds great. I'd really appreciate if a PPA was available but at the moment I am lacking the time to maintain it myself. So go right ahead! :)\nMaybe you can still find something useful in fuzzgun's work, though. It went through a lot of iterations; unfortunately, I haven't heard from him in a while now.\n. Categories updated: https://github.com/p-e-w/finalterm/commit/911944bdf458bba5dc1583882d823892dcd94b0f\n. (On a brand new Raring system ...)\nsudo add-apt-repository ppa:versable/finalterm-daily\nsudo apt-get update\nsudo apt-get install finalterm\nfinalterm\nDone!\nThis is awesome :)))))))) Thank you!\nI'm a bit short on time ATM, but I'll wrap this up as soon as I can, add this to the installation instructions and blog about it. This PPA makes Ubuntu by far the easiest platform to install Final Term on.\n. For the credits: The branch http://bazaar.launchpad.net/~versable/finalterm/deb-packaging/files/head:/debian/ looks like @fuzzgun's original pull request (with the exception of the manpage stuff). Is it OK for you both if I give you shared credit for the creation of the PPA?\n. PPA added to installation instructions: https://github.com/p-e-w/finalterm/commit/4793545a8e8e0b8d407ff2785cb74d1fd23d8853\n. Is the file name non-english here also or is it literally \"veryveryveryveryveryveryveryveryveryveryvery_long_filename\"?\n. OK, thanks for clarifying. Will look into it.\n. I really want to fix these bugs, but I cannot reproduce any of them :(\n. I have tested on Fedora 18 and Ubuntu 13.04 (installed by following instructions as on GitHub).\n. Closing as I am unable to reproduce this problem.\n. This ability already exists, through themes. Just open the .fttheme file and you'll see.\nFonts will probably be moved to general settings soon, though.\n. I'm working on making standard shortcuts work in Final Term. Hold on a few weeks longer, it'll happen :)\n. Ctrl+C and Ctrl+D now work as expected.\n. Thank you for the report. This bug is actually caused by bash trying to be too smart and taking over line wrapping when Final Term can already do that itself. I'm still evaluating how to best fix this.\n. The icon is already installed and works, at least on Fedora, Ubuntu and Arch. I've never heard of the pixmaps dir before now; can anyone shed more light on this? Is it really deprecated? Because it seems to be listed in http://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html.\n. OK... so what do we do here?\n. Thanks, this makes sense.\n. I wonder, how will we handle localization of text menus, e.g. https://github.com/p-e-w/finalterm/blob/master/data/TextMenus/filename.ftmenu?\n. 'Perhaps you can separate identifier and the actual displayed string as \"label\" e.g..'\nThat would work, but makes creating text menus more cumbersome, which I am not really willing to do just for the sake of localization. Is there any other way?\n. Interesting idea. I assume this still gets extracted to the pot file then? If yes that'll be the way to go most likely.\nI'll revisit this on the weekend hopefully.\n. Btw.: There are absolute paths in the pot file. To avoid some work I'd like to use my own Gettext.cmake (and perhaps change the target names (pot_file -> pot; translations -> i18n)). Are there any concerns about this?\nI don't know CMake well enough to be able to judge this; @tomb95: What do you think?\n. @Lasall: Well, no objections then! I'm also really keen on seeing the absolute paths gone, those are ugly ;)\n. @Lasall:\nI tried this today, merged from your branch but on invoking cmake (as per the instructions in Final Term's README.md got:\n-- checking for a minimum Vala version of 0.16.0\n--   found Vala, version 0.18.1\n-- Found Gettext: /usr/bin/xgettext (found version \"0.18.1\") \n/usr/bin/xgettext --language;C -o /home/pew/Programming/Final Term/GitHub/finalterm/build/po/_ftmenu.pot ../data/TextMenus/*.ftmenu\nCMake Error at cmake/Gettext.cmake:432 (list):\n  list sub-command REMOVE_DUPLICATES requires list to be present.\nCall Stack (most recent call first):\n  po/CMakeLists.txt:14 (gettext_create_translations)\nThis is the last road block preventing your changes from being merged into master. Any ideas?\n(There are quite a few Google hits for that error, but there appears to be no general pattern to the solutions.)\n. OK, everything merges and compiles like a charm now (although there is still no .po file; what did you change?).\nI'll test this now and if it works, expect to see it in master tomorrow! :)\n. Seems to work :)\nI'll translate the program into German myself now and use that as an exercise to see whether something is missing (or too much).\n. Thanks, that would be nice. I didn't know GSettings could be localized too.\n. @Lasall: This is now merged into master. I have added your name to the about box credits. Thank you for your contribution!\nI made some minor changes:\n- Removed \"Final Term\" from the list of translatable strings (for the same reason author names are not translatable either, this just didn't feel right to me).\n- Moved the mnemonic prefix back into the translatable part of the strings. Otherwise, mnemonics could potentially collide; this also appears to be the GNOME standard.\n- Translated everything to German.\n. Thank you for the report. I'll look into it.\n. Does this still happen if you build from the latest master?\n. Well, those are IP addresses also :) I'm afraid Final Term cannot distinguish between the two (even a human can't, without context). I'm therefore going to close this as WONTFIX.\n. Good idea. Will look into it!\n. Sorry, this is not on my roadmap at the moment. If \u2013 after Final Term has stabilized! \u2013 you chose to backport the program (with lots of conditional compilation features, probably), I would consider merging, though.\n. Distro? Version?\n. @otyugh: That's wonderful to hear. I'm closing this bug, then :)\n. Hello,\nvi/vim is not supported yet at all, and this fact is explicitly mentioned on http://finalterm.org.\n. Merging this into current master and running a clean build (after a fresh cmake) fails for me on Fedora:\n```\n\nmake\n...\n[ 80%] Building C object CMakeFiles/finalterm.dir/build/src/Config.c.o\nLinking C executable finalterm\n[ 80%] Built target finalterm\nScanning dependencies of target translations\n[ 84%] Generating ../data/finalterm.desktop.in\n[ 88%] Generating ../data/finalterm.desktop\nDied at /usr/bin/intltool-merge line 317.\nmake[2]:  [data/finalterm.desktop] Error 2\nmake[1]:  [po/CMakeFiles/translations.dir/all] Error 2\nmake: *** [all] Error 2\n```\n\nI have intltool 0.50.2, as detected by cmake.\nThank you for the update! :)\n. I did, and it produced\ncan't open /home/pew/Programming/Final: No such file or directory at /usr/bin/intltool-merge line 317.\nThe directory's name is \"Final Term\". Looks like somewhere, it is not being quoted properly and broken on the space.\n. make runs without errors now, everything seems to be fine. make translations produces weird results trying to merge the new strings into de.po; basically, it prefills \"translations\" for the new strings that don't make sense at all. But I suppose that can be corrected manually.\nCould intltool also be used to make the .ftmenu files translatable?\n. It appears that localization of .gschema.xml doesn't actually work.\nI translated some gschema and desktop file strings to German, changed LANG to de_DE.utf8 and did a clean build and install.\nThe desktop file gets translated alright (through GKeyFile), but the gschema file does not.\n. I see that now; indeed, when I change the system language in my Ubuntu VM, translations do work for the gschema file also. Apologies for not trying it like that :)\n. Pushed to master.\nThank you for another valuable contribution :)\n. Thank you for your contribution. I am hesitant to add more keybindings though because there is a fundamental issue:\nThe xterm specification has multiple \"keyboard modes\" set using the DECSET control sequence (see http://invisible-island.net/xterm/ctlseqs/ctlseqs.html). The control sequence to be sent actually does not only depend on the key pressed but on the terminal's internal mode as well.\nFor example, while it is true that pressing Home should send \\\\033[1~ as in your commit \"normally\" (i.e. when application cursor mode is on), it should send \\\\033[H when cursor mode is off. I need to implement a mechanism that will allow us to specify which control sequence to send in which situation. This could be as simple as creating a new command (\"SEND_CONTROL_SEQUENCE\") with multiple parameters, one for each mode. Any input on how to achieve this is welcome.\n. A very nice reference table for all the standard keybindings and the states which they are tied to can be found in the source of st: http://git.suckless.org/st/tree/config.def.h.\nAs for parsing the CSI sequence: Don't bother, that part is all done already (see https://github.com/p-e-w/finalterm/blob/master/src/TerminalStream.vala for the complex details). You can directly add DECSET handling to https://github.com/p-e-w/finalterm/blob/master/src/TerminalOutput.vala.\n. With https://github.com/p-e-w/finalterm/commit/920f4b3d78625876efab1c598873d791fcc4bcff, Final Term now has a full-fledged key bindings system, solving all of these problems and providing these and many other shortcuts.\n. Fixed in https://github.com/p-e-w/finalterm/commit/b4d27989612c4fd0bc49736c3d1ea83e3238cf65.\n. Do either of you use the guake terminal itself? Does the hotkey work for you in guake?\n. Fixed in https://github.com/p-e-w/finalterm/pull/291.\n. Good idea!\n. Done in https://github.com/p-e-w/finalterm/commit/0624dc9580fa87854fb0ef9567d31a5fe5dcf6ea.\n. Implemented (using a different method) in https://github.com/p-e-w/finalterm/commit/02cb2330e2837f7198fc6ccb6ff13578cbadd79a.\n. This is related to https://github.com/p-e-w/finalterm/pull/62, and as explained there is not as straightforward as it may seem :)\n. Implemented in https://github.com/p-e-w/finalterm/commit/920f4b3d78625876efab1c598873d791fcc4bcff.\n. Good catch!\n. Good idea. What is required here is a Termlet for mplayer.\nIf you'd like to have a go at making it yourself: https://github.com/p-e-w/finalterm/blob/master/data/Termlets/wget is what makes the progress bar in wget work.\n. I've seen this bug once, but have not been able to reproduce it since. Do you know a reliable way to reproduce?\n. I am happy to say that I have fixed this bug on my machine. The fix is part of a larger restructuring though so it'll only get pushed later this week.\n. I tried to look but couldn't find whether the change is in the PPA yet. The timing seems pretty close.\n. Checking again, it probably is (4 hours in between). I believe you might be having a different issue than I do, though. I can't reproduce the bug anymore.\n. This should be a non-issue after https://github.com/p-e-w/finalterm/commit/2a349712d670ef5378d4b607cd29b1e4e93aa4df.\n. This is likely simply a performance issue. Since https://github.com/p-e-w/finalterm/commit/127df52cfe86a3784e62819a85c7c2281a96be33, performance is at an all-time low, but will soon be optimized again, (hopefully) fixing this problem.\n. Yup, definitely performance. Please hang on a few more weeks, it should get better soon.\n. Subset of #150.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/7. Thanks for reporting though :)\n. This is one of a long list of bugs that will be fixed over time as support for xterm control sequences improves.\n. This bug is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. This is one of a long list of bugs that will be fixed over time as support for xterm control sequences improves.\n. This bug is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. This is actually a bash issue, readline tries to wrap lines itself, conflicting with Final Term's built-in wrapping. I'm still evaluating how to best fix this.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/52.\n. I haven't had the chance to test this yet as I'm working on a rather big conceptual change but once the dust settles I'll include it in the installation instructions.\n. @ferki: Sure, if you can.\nGreat work BTW! :)\n. Duplicate of https://github.com/p-e-w/finalterm/issues/7\n. Merged!\nI've added your name to the about box credits. Thank you very much for your contribution!\nP.S.: Hungarian is a very interesting language indeed. I tried to match strings just by looking at them, but there appear to be no connections with any Romance or Germanic language I know... :)\n. @versable: Thanks, this will make it easier indeed. I'm not too worried about translations yet since we're not really approaching a release at this time. Once that gets a bit closer and the strings stabilize I'll call for translations and incorporate them into the initial version.\n. Maybe mx is installed in a path that pkgconfig can't find (such as /usr/local/lib)? In this case, add that path to the PKG_CONFIG_PATH environment variable.\n. @Lasall: Makes sense.\n. Can't reproduce this. The schema definitely includes the key, see https://github.com/p-e-w/finalterm/blob/master/data/org.gnome.finalterm.gschema.xml.\nAnyone have the same issue?\n. Looks like an issue with your system. I have both built from source and installed from the PPA on 13.04 with zero problems.\n. @TransposableBeuss: Anything new here? Did it work on Unity?\n. I can't even guess what is causing this unfortunately :(\n. This might be a unicode issue. Can you post your prompt (bash's PS1 variable)? Does your directory name contain non-ANSI characters?\n. I'm reopening this, because of course the actual issue is not fixed ;)\n. Glad that the workaround worked for you, though.\n. I'm considering this fixed then, as once people install from PPA only this should not be a problem anymore.\n. Probably a duplicate of https://github.com/p-e-w/finalterm/issues/47#issuecomment-20042953\n. This might be fixed in https://github.com/p-e-w/finalterm/commit/0ca303c65c8bbe1f3f8541e81e71dc4f8b33b246, please check.\n. I cannot reproduce this, so it was probably fixed along with https://github.com/p-e-w/finalterm/issues/47.\n. Hmm... doesn't this mean that if the system has, say, the -Werror flag set (which I admit would be strange) Final Term will not compile when before it did?\n. I see.\nI'll test this on the systems that I \"officially\" support at this time (i.e. Fedora and Ubuntu) and if everything still works, I'll merge.\nCould you kindly rebase on top of current master?\n. @ferki: Sorry, not yet, I'm very low on time ATM unfortunately :(\nI'll try to squeeze it in tomorrow. Will post here as soon as it's done.\n. Builds without problems on both platforms, with and without the flag. Merged!\n. The scrollbar is part of the ClutterEmbed though, not of an \"unused\" area in the window. The scrolling is handled by Mx and the event is not processed directly by Final Term.\nThis is a very important bug as I obviously want Final Term to work on KDE, but fixing it could get ugly. We'll probably have to intercept the drag event manually, then pipe it into the ScrollView, then return true (event handled) to stop it from propagating. Will investigate this again once we're a bit more stable.\n. There is more to this than may meet the eye, as the xterm specification (http://invisible-island.net/xterm/ctlseqs/ctlseqs.html) does not provide for complete deleting of lines.\nGNOME Terminal gets this right though. We can probably find a hack that makes it work as expected.\n. The folding markers are an even more difficult issue I'm afraid. It is tempting to clear the markers when a line is cleared, but unfortunately this leads to the first command line not being recognized properly because bash writes the command prompt twice, clearing it once in the process...\nThose are just some of the oddities I'm currently working on :)\n. The problem with this idea is that we definitely do not want the view to be scrollable if there is only a single line \u2013 we do want to show the scrollbars even in that case though.\n. OS? Version?\n. @kseistrup: This likely means this is simply a performance issue. Final Term's performance is bad ATM and has gotten worse recently because of some terminal emulation changes. I'll revisit performance soon though.\n. Subset of #150.\n. I don't have a Mac myself, but if you buy me one, I might consider it :)\nJoking aside though: I haven't considered that possibility at all yet, mainly because Mac OS is the only platform that has a modern terminal emulator already (iTerm2), albeit without the \"semantic\" part. Final Term is highly unstable still; I'll consider ports to other platforms once the dust settles and an initial release has been made (probably later this year).\nIf you want to have a shot at it yourself, feel free though... ;)\n. I'd really love to keep this dangling, because it attracts so much hope and thus attention to the project, but I don't want people to hope in vain so I'll just be frank here:\nI'm not familiar with Mac OS application development, don't own a Mac, and have probably a year's worth of planned features for Final Term that I want to implement first. I have a day job and write Final Term in my free time only, so the project proceeds at an uneven pace. Overall, a Mac OS port is unlikely to happen in the foreseeable future, unless of course someone else wants to try.\nTrust me, I know how frustrating this can be! I'm in the same position regularly, when I see stuff like the GitHub client, iTerm2, TextMate, Brackets etc. that is only available for Mac and not for Linux :(\n. While I certainly appreciate your support and enthusiasm, please note that the bounty was not started by me, nor do I endorse (or criticize) it in any way. I would like to ask you to explicitly mention that on the bounty page, especially since the project title contains my name.\n. @Lasall's instructions work for me.\n. I'll add it in the next push (later this week, I'm currently away). Thanks for the input :)\n. According to https://developer.gnome.org/clutter/1.11/ClutterPropertyTransition.html#ClutterPropertyTransition.synopsis, ClutterPropertyTransition is available since Clutter 1.10. If you have that installed, you probably have outdated Vala bindings.\n. It's the same issue: You have either an outdated Clutter version or outdated Vala bindings for Clutter.\n. See also https://github.com/p-e-w/finalterm/issues/38, which the last question is a duplicate of.\n. Since the latter problem is fixed along with #38 and the first one has been answered by @toofarapart, I'm closing this issue.\n. Unfortunately, Final Term supports bash only at the moment :(\nThis is a duplicate of https://github.com/p-e-w/finalterm/issues/26\n. Can you run other Clutter apps? \"Ease\" (presentation tool) for example?\n. @excieve: Thank you for clearing this up. I'm glad it isn't Final Term that's causing such a fundamental issue :)\n. I assume by that you mean Guake's dropdown feature. This exists already (try pressing F12) though some issues remain.\n. This is one of a wide variety of problems caused by currently limited support for xterm control sequences. It will be fixed as support is improved.\n. See also the message on top of http://finalterm.org\n. See also https://github.com/p-e-w/finalterm/issues/46\n. This bug is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. This is the fault of https://github.com/p-e-w/finalterm/blob/master/data/Termlets/ls, which simply does full text search & replace for any file name in the current directory. I've been thinking about how to fix this for a while.\n. No, it's because the ls Termlet does dumb text replacement ATM, and \"bin\" is contained in \".../bin32/...\".\n. https://github.com/p-e-w/finalterm/commit/2562b1887f52d2712e10d425837ad234726c5efa greatly improves file matching, fixing this and many other issues. Errors are now very rare, and the behavior is probably as good as it is going to get since ls output is by design unparsable.\n. Good idea, I'll consider it.\n. Overall, looks very good! Thank you for your contribution!\n. Yes, please do that (squash). Changes look good :)\n. Merged! Thank you for your contribution. I've taken the liberty of adding your name to the about dialog credits.\n. This is one of a wide variety of problems caused by currently limited support for xterm control sequences. It will be fixed as support is improved. See also #98.\nAs for the \"Do you want help developing\" part: Yes! I appreciate all kinds of contributions, but code the most :) If you need pointers for where to start and what the architecture is like, just ask and I'll gladly give them.\n. > I'll probably code a little bit each Saturday.\nLooking forward to it! :)\n. This bug is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/38\n. This is one of a wide variety of problems caused by currently limited support for xterm control sequences. It will be fixed as support is improved.\n. This bug is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. Closing this, since it is clearly Virtual Box that's at fault, not Final Term (no guest program should be able to crash a VM).\n. This is a duplicate of https://github.com/p-e-w/finalterm/issues/99\n. Thank you for posting this. This could help track down some hard-to-reproduce errors in escape sequence handling.\n. I cannot reproduce this with current master.\nI created three files named 311, 331, 1 in an empty folder as shown in the screenshot, ran ls -al, but everything seems fine (apart from more numbers being highlighted than they should be). In particular, I do not see the raw escape sequences as shown in the screenshot.\n. I'd really like to fix this problem, but I simply cannot reproduce it. Therefore, I'm closing this bug. If someone finds a reliable way to reproduce it on either Ubuntu or Fedora, please feel free to reopen or file a new issue.\n. Good idea!\n. Good idea. You can implement this yourself with ease: Just have a look at https://github.com/p-e-w/finalterm/blob/master/data/TextMenus/dirname.ftmenu. No compilation required :)\n. You'll be the judge! If you do it, make a pull request and we can discuss merging then.\n. Most of these are probably terminal emulation issues, not Arch specific. And yes, they will be fixed in time :)\n. These problems are a subset of https://github.com/p-e-w/finalterm/issues/121.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/7\n. Well, the negative impact is that the same thing will happen now if the item is on the right of the screen (such as with ls -l) :)\nA solution would be to detect this and move the description to either left or right depending on the position of the item. However, another, bigger, issue remains: When long filenames get wrapped across lines (if FT is resized for example), the button will get cut off nontheless.\nThe best solution, solving all of these problems, would be to make the button independent of the window and have it extend beyond it if necessary, such as the autocompletion popup does already. However, that would be considerably more difficult than the current method.\n. I imagine that wrapping the popup will be quite difficult as well.\n. I was just about to push this but then decided to try with my (old and large) local autocompletion database. I then discovered two problems:\n- The new highlighting system (regex) makes the popup unbearably slow if there are many autocompletion entries (say, 500)\n- new Regex(highlight_text, RegexCompileFlags.CASELESS); fails if highlight_text contains regex reserved characters\n. Awesome to see you back! A lot has happened in the past 2 months :)\nI'd love to see your ideas (which make perfect sense) implemented. You can test the performance by batch-generating a large autocompletion file whose entries all contain a certain substring and then typing. I also recommend you check out Metrics.vala if you want to do serious code block benchmarking (see https://github.com/p-e-w/finalterm/commit/409cc6c012a0b69a79297f10fa3c26bb24a8d3f7 for how the block timing feature is to be used, then uncomment https://github.com/p-e-w/finalterm/blob/master/data/KeyBindings/default.ftkeys#L25, run the code and press F5 to see results).\n. Looks great and simple! I'll try it out as soon as I'm on my dev machine.\n. Tested, works like a charm :)\nI feel ready to merge now, could you please squash the commits into one?\nTwo more small comments:\n1. In https://github.com/ferki/finalterm/commit/a4b3d16bb8f924b6f46fc138945d05693f7ab7d3#L0R274 you went back to the \"markers\" idea rather than using the regex to replace the string directly. I assume that has performance reasons?\n2. Could you bring the error blocks here and here into the inline format seen e.g. at https://github.com/ferki/finalterm/blob/master/src/FinalTerm.vala#L369? They are mostly ugly baggage required for valac to remain quiet during compilation, so we prefer them to be as tiny as possible.\n. Sorry, closed by accident ;)\n. Merged! Thank you, what an amazing improvement to FT's usability!\n. > In addition, quotes should automatically be placed around parameters during parsing, because parameters will always be surrounded by quotes. This will further reduce the bloat of '$$$i$$$' to simply $i.\nWith this part I don't agree. The idea is that the parameter $$$i$$$ is a placeholder for the text in any function, not necessarily only for shell commands.\nThe rest of the idea sounds good.\n. I've got two more small requests before merging:\n- Please make the equal signs align between \"Information\" and \"List contents\", as they do in the section below\n- Please squash the two commits into one and rebase on top of the current master branch\n. Sorry, but the commit's description still has the text\n\nChanged ls text from \"View contents\" to \"List contents\" as per the ls man page, and passed -lh to ls.\n. Merged! Thank you for your contribution. I'd love to credit you for it, but I found no name anywhere. If you want to be immortalized as an author in Final Term's About dialog just send me your name and it will happen!\n. Good idea, and actually possible already:\n\nSimply change your $PS1 variable to include the control sequences around the directory name (see https://github.com/p-e-w/finalterm/blob/master/data/Startup/bash_startup). Since not every command prompt includes the directory, though, and I don't really think Final Term touching the user's $PS1 is a good idea, I'm going to close this as a feature request and leave it as a question for future reference.\n. That's weird. Everything works for me in 12.10...\n. @dhasenan: I've taken the liberty of editing your comment above because the numbers #XX were creating references to the first 20 issues (GitHub does that). Unfortunately, this did not remove those links :(\n. Merged! Thank you for doing this, Ferenc!\n. Good idea. It's probably best to use the color #000000cc or similar (i.e. black with alpha) to make sure it works with all button colors (gutter works in a similar way). And, of course, the color should be part of the theme, and thus user-editable.\n. This is essentially a duplicate of https://github.com/p-e-w/finalterm/issues/1.\n. @godeater: That is a very interesting library which I did not know about at all until now. Were I starting to write Final Term now, I would definitely give it a try.\nTwo comments on the current state:\n- The part that libvterm handles (terminal output parsing) is already fully complete in Final Term (https://github.com/p-e-w/finalterm/blob/master/src/TerminalStream.vala) and, I believe, solved in a very nice manner 100% conformant to the xterm specification. libvterm actually seems to parse only a subset of that specification according to http://bazaar.launchpad.net/~leonerd/libvterm/trunk/view/head:/doc/seqs.txt. Notably, it's apparently lacking support for 24-bit color SGR sequences, which Final Term already has.\n- The difficult part is not parsing, but interpreting the resulting sequences, i.e. translating them into screen actions (difficult mostly because there is little to no documentation for it). libvterm seems to offer that too, with its own TTY model, but since Final Term needs some non-standard actions to provide its semantic features, that part most likely has to be coded from scratch.\nOne trivial example where xterm-style interpretation is definitely not what I want in Final Term is line wrapping (otherwise \"terminal reflow\" would be impossible to achieve).\nNevertheless, I shall have a closer look at libvterm!\n. Thank you again, pangoterm looks awesome! It even supports double-height and width lines :open_mouth:, which cannot be said for many terminal emulators (I certainly hadn't planned to support it in Final Term, but if the competition has it... :smile_cat:).\nFascinatingly, this blog post by LeoNerd also describes optimizations he made to his terminal infrastructure that so closely mirror some of the performance improvements I pushed in the past week that it's almost uncanny... I'd love to hear LeoNerd's thoughts and input on Final Term, I'm sure there's a lot I could learn from both him and his code.\nWill contact him...\n. @glittershark: I am aware of vttest but much of what vttest tests for is actually irrelevant in practice (such as double-height lines, which are not supported by most of the established terminals either), while many important features (e.g. related to GUI scrolling) are in turn not tested for.\n. @HerringtonDarkholme: Yes. All remaining xterm control sequences must be implemented.\n. @IonicaBizau: VIM is not working in a usable manner yet.\n. I of course agree that this is a typo, but the fact is that this file is directly taken from the keybinder repos (https://github.com/engla/keybinder/blob/keybinder-3.0/examples/keybinder.vapi) which has the same typo, so I'd prefer if this was fixed upstream first so we stay in sync with them.\n. Yes, there is (indirectly): In https://github.com/p-e-w/finalterm/blob/master/data/Themes/default/default.fttheme, set cursor-minimum-opacity and cursor-maximum-opacity to the same value. There will be no visible blinking then.\n. Intentional, as they are both animation durations indeed.\n. Funnily enough, up to the blank line this PR seems to be an exact duplicate of https://github.com/p-e-w/finalterm/pull/62 :) Please see my comment on that PR for a deeper understanding of the actual problem here and why I'm hesitant to merge this..\n. Closing this as a duplicate of https://github.com/p-e-w/finalterm/pull/62.\n. Of course it's nice to have syntax highlighting, but that is not within the scope of a Terminal \u2013 the shell program should take care of that, it's much cleaner that way.\nAnd it's already available, e.g. in pygments and supercat.\n. Much better yet seems to be GNU Source-highlight which supports dozens of languages and 256 terminal colors.\n. Good idea, Eclipse has that too.\n. Looks good once again. I'll examine it more closely soon.\n. I wish that were true but there have been bug reports where the initialization actually failed (GPU issues apparently).\n. See https://github.com/p-e-w/finalterm/issues/96 for example\n. Merged!\n. That looks like magic to me. How does CMake know how to set Vala constants? Or does it all happen at the C level through the line [CCode (cprefix = \"\", lower_case_cprefix = \"\")]?\nI'll merge it, of course.\n. Merged!\n. Looks like the problem is https://github.com/p-e-w/finalterm/blob/master/src/TerminalView.vala#L535\n. BTW, I see only a warning which is no big deal by itself. Is there an actual error / wrong behavior?\n. Not even a segfault? Strange indeed.\nCan anyone confirm this bug?\n. So you tried to run the compiled FT in the build directory without installing it first? Yeah, that won't work. I'm closing this then since the official instructions still suffice to make everything run.\n. Can you please squash the two commits into one?\n. Merged!\n. If it is indeed the hardware acceleration (which from your description I'm not sure about) I'm afraid you're out of luck:\nFinal Term is built on top of Clutter, a user interface library that requires hardware acceleration.\n. Please clarify.\n. Actually, it's a duplicate/subset of https://github.com/p-e-w/finalterm/issues/121.\noh-my-zsh uses control sequences to achieve its output formatting that are not fully supported yet. This has nothing to do with zsh per se.\nThe truth is that zsh is actually supported by Final Term already, as is every other standard shell. The only thing is that all of FT's semantic features (autocompletion, text menus) don't work with shells other than bash ATM.\n. Merged!\n. I have at last had the opportunity to verify that this works as expected and have now merged.\nThank you for your contribution! I have added your name to the about dialog credits: https://github.com/p-e-w/finalterm/commit/7db967c3c45951c2fb1db8caa000247d58d846ca\n. Good, that's settled then.\n. BTW did I mention that only bash is officially supported ATM? :)\n. > libGL error: failed to load driver: swrast\nSo the software rasterizer could not be loaded... this smells like a Clutter hardware acceleration issue. Can you run other Clutter-based software, like GNOME Shell or Ease?\n. Good question... from what I see we don't have a make uninstall target ATM. As a workaround, make install gives you a protocol of all it does, so to uninstall it should suffice to delete the relevant files (and the dconf key).\nThis should definitely be added, though. http://www.cmake.org/Wiki/CMake_FAQ#Can_I_do_.22make_uninstall.22_with_CMake.3F provides a blueprint for doing it.\n. Fixed in https://github.com/p-e-w/finalterm/commit/88df76e971aacd37f9f2e3268d425bcea94a32f3.\n. Thanks for reporting, but the cause is pretty much known already: It's the lack of GSettings caching and the fact that some settings are literally pulled from dconf for each character rendered.\nI'll fix this soon.\n. Subset of #150.\n. Merged! Thank you for taking care of this important issue.\n. Subset of https://github.com/p-e-w/finalterm/issues/26.\n. I am aware of this bug, but there appears to be no straightforward solution. The obvious approach would be to clear the markers if a line is cleared, but unfortunately that breaks arrows altogether, as bash by default (for whatever reason) first draws the command prompt (with the injected marker sequence), then erases it and draws it again (don't ask my why, it's abysmally stupid IMO).\n. This problem has much improved but since https://github.com/p-e-w/finalterm/commit/0624dc9580fa87854fb0ef9567d31a5fe5dcf6ea there appears to be a different bug when using Ctrl+L (does not occur when typing clear) that causes invalid command detection (spanning two lines). As command history is now pulled directly from bash this might be a bug in bash though.\n. Merged! Thanks again.\n. I'm not sure I understand... are you saying the text menus don't work?\n. Can you provide some more details please, like steps to reproduce (because I can't reproduce it)?\n. That's the problem... it's working on my system.\nDoes anyone else have this issue on Xubuntu?\n. I'm not sure what you mean by \"debugging mode\" (by default, make will generate GDB debug symbols). The strange thing is that I run Fedora 18 also and do not experience this problem.\n. Might be a Compiz problem...\n. What do XFCE, LXDE and pekwm have in common that differentiates them from GNOME?\n. Subset of https://github.com/p-e-w/finalterm/issues/150.\n. @bl8: Do you have hardware acceleration on your system?\n. Partially addressed by https://github.com/p-e-w/finalterm/commit/409cc6c012a0b69a79297f10fa3c26bb24a8d3f7.\nI measured a rendering speedup factor of 3-10 with this commit depending on the shell program being run.\n. https://github.com/p-e-w/finalterm/commit/30ad38119f14c9e72421979efad3c1b02231a235 brings another substantial speedup.\n. https://github.com/p-e-w/finalterm/commit/6c29e45ae835056da265af416787df4ff2a9ec83 is yet another step towards better performance.\n. And https://github.com/p-e-w/finalterm/commit/392e630b9966b5f49b790718ba2ccfeca0ad1011 is yet another one.\n. The story continues in https://github.com/p-e-w/finalterm/commit/90399eb2319d4ecdbcb74a34590993471f3d0a33.\n. As for the CPU usage mentioned by @bl8: This appears to be a Clutter/GNOME Shell problem. I see the same behavior on one of my systems and while Final Term does always use 10% CPU there as well, so does gnome-shell (and sometimes xorg as well).\n. Update on CPU usage: It turns out that disabling the cursor animation brings the idle CPU consumption close to zero, with the animation it's around 5-6% on a quadcore.\nWho is to blame, then, and how can we fix it? Difficult to say IMO. The fact that the gnome-shell CPU consumption seems to be tied to Final Term's somehow suggests a bug in the rendering stack rather than FT.\n. Another piece in the CPU usage puzzle: Every animation cycle apparently forces a complete repaint of line_container, which is where the CPU usage actually occurs.\n. See https://mail.gnome.org/archives/commits-list/2009-October/msg00814.html for a Clutter application that seems to have had a similar problem.\nTheir solution: Disable the animation. This is a massive problem with Clutter if disabling the animation is indeed the only way to lower CPU usage.\n. Another huge performance improvement comes with https://github.com/p-e-w/finalterm/commit/bc408a9b6e900a5433010801de4bd01fedca2949, which at last brings constant-time adding of LineViews.\nFinal Term's performance (i.e. speed) is now roughly 8 times slower than GNOME Terminal's, which I find sufficient for an initial release. The only issue left in this bug is the absurdly high CPU consumption.\n. @x2q: Are you using the latest master (note that the PPA is currently not building, and thus outdated)? Because on all my machines, ps axu now takes less than a single second.\n. @arkocal: Yes, I noticed that, though only after I upgraded to GNOME Shell 3.10 earlier this year. Should be possible to make it a lot faster given that all autocomplete data is in memory (maybe by limiting the number of results).\n. Duplicate of https://github.com/p-e-w/finalterm/issues/26.\n. This is likely a duplicate of https://github.com/p-e-w/finalterm/issues/71.\n. This should be a non-issue after https://github.com/p-e-w/finalterm/commit/2a349712d670ef5378d4b607cd29b1e4e93aa4df.\n. The shortcut can be changed (see https://github.com/p-e-w/finalterm/blob/master/data/KeyBindings/default.ftkeys).\nAs for the other issue: Do you mean the window should not be shown in the overview when in Guake mode?\n. OK, I'll look into it.\n. Instead of editing default.ftkeys, you can also add your own .ftkeys file to the KeyBindings folder. Final Term will pick up any file with that extension.\n. That's because su starts another shell into which Final Term can't inject (yet).\n. Please try to run Final Term in GDB. This might tell you which line in the Vala code causes the crash (if the problem is a segfault or similar).\nFinal Term is compiled with debugging symbols by default, and can easily be debugged in Nemiver.\n. Hmm... don't quite know what to say here. Looks more like a GLib bug than anything else, since the error message is in obvious conflict with reality.\n. This bug is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. This bug is a subset of #121.\n. It should be able to run once terminal emulation is complete (see https://github.com/p-e-w/finalterm/issues/121). Support for Final Term's semantic features is another matter though and would require an injection mechanism along the lines of https://github.com/p-e-w/finalterm/blob/master/data/Startup/bash_startup.in.\n. This is a duplicate/subset of https://github.com/p-e-w/finalterm/issues/26.\n. Merged! Thanks :)\n. Merged!\nI wasn't aware of this feature, and like it quite a bit. Of course the current ranges are quite conservative (we're not going to allow 2 billion terminal rows) but for now it's a good start that can be tweaked later.\n. I know and love this new Vala feature, but as you suggested yourself depending on 0.21 would mean breaking the majority of our currently supported platforms (including Fedora < 19, Ubuntu < 13.04 etc.).\nLet's wait some 6-12 months more and then merge this.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/44.\n. Fixed in https://github.com/p-e-w/finalterm/commit/cc63fe9cbc969ddd61ae2006f9dec08ccc86431c.\n. Interesting... could you name a program which makes that assumption?\n. I see what you mean now... observe, though, that programs like ponysay will have their output wrapped by existing terminals if the terminal size is already smaller than the program's output width when the program is run. Other terminals will therefore distort the output as well, without the possibility to reflow to the expected output form. I therefore don't think this is actually a problem.\nI also don't think getting a custom escape sequence included in every such program just for Final Term is a realistic option.\n. Apologies, I was not aware of this. In this case, such a feature might indeed be useful. I'll keep it in mind!\n. Awesome! You caught this on the day it was published. I'll merge this once I get to test it.\n. This means all of Final Term's dependencies are now packaged for Fedora, which should make an eventual inclusion in the Fedora repos much easier.\n. I tested this on a new Fedora 18 VM now but unfortunately, it doesn't work (due to some other changes presumably; the keybinder part works fine).\nI ran into the following problems:\n- yum conflict with the audit package when trying to install the packages, fixed by yum update audit (this should be considered a Fedora bug as something like it should never happen)\n- The package gcc-c++ is also required by cmake now (why???)\n- libGL linking error. I'm still looking into it\n. Did you start from a new installation or an existing one?\n. You probably had the required stuff already present then, because the current instructions don't work on a vanilla system as described.\n. I \"tried to try\" Fedora 19 (running in Boxes on 18) but Boxes froze every time (worked with 18 though). Very strange.\n. @keramidasceid: Did you use the precise instructions in the PR and can you confirm that they work as described?\n. Merged at last! The C++ compiler issue was fixed in https://github.com/p-e-w/finalterm/pull/224.\nThank you for your contribution!\n. Although I'm not sure what precisely the issue is here, it is almost certainly a subset of https://github.com/p-e-w/finalterm/issues/121.\n. I would love nothing more than seeing Final Term become part of a distro. From a quick web search I take it that you are an elementary maintainer/team member and can actually make this happen (correct me if I'm wrong). That would be amazing! :tropical_fish: \nAt the moment, I anticipate a stable release of Final Term some time in 2014. With Luna having been released just recently, it might be possible to get FT+elementary married for an upcoming release, depending on elementary's envisioned release cycle (which I know nothing about).\nAs far as the technical part goes: I don't know Granite, so I can't estimate how many changes would be needed in order to move from GMenu to a cog menu etc. If the number of changes is not too high, it could be solved by conditional compilation, otherwise a separate branch would be better, though the question of maintainability arises. If you are willing to give it a shot, please feel free to branch off; I'll do my best to help.\nP.S.: Any problems anticipated with the HIGs?\nP.P.S.: It is my understanding that elementary is currently developing its own (VTE-based) terminal. How does Final Term fit in here?\n. If you comment https://github.com/p-e-w/finalterm/blob/master/src/FinalTerm.vala#L59, the menu will be gone.\n. Indeed!\n. Actually, the button is placed exactly where it should be: The text aligns with the text underneath.\nThe fact that this causes the label to be cut off is another matter, and currently being addressed in https://github.com/p-e-w/finalterm/pull/119.\n. Vala and intltool are both listed as dependencies. After installing them, does it build now? If yes, can I consider this bug fixed?\n. Thank you for your contribution!\nBecause of the still fluctuating nature of Final Term's localizable strings, I have decided not to merge any more localizations into master at this point. Instead, we track them at https://translations.launchpad.net/finalterm/trunk/+pots/finalterm.\nI'd appreciate if you could upload your translation there. When an actual release is packaged, there will be a final call for translations and all existing translations will be merged.\n. Good idea.\n. I see you have indeed uploaded the translation on Launchpad. Thank you!\n. Indeed!\n. Merged! Thank you for your contribution!\n. Merged! Thank you.\n. This is an interesting bug. Does it occur on your system whenever Final Term encounters \u00e4 or only when you are using SSH?\nTry echo \"AAA\u00e4AAA\". Does that create problems for you?\n. Implemented in https://github.com/p-e-w/finalterm/commit/8cb1f75d47d4aa017b12e979d45ad39ede2899ed.\nGreat idea and a significant enhancement to autocompletion usability indeed!\n. Closing per https://github.com/p-e-w/finalterm/commit/46f3b9b78ad0639b5f5beffe94b3e26b6b0e2c5b.\nI apologize for the inconvenience, but LP is simply superior for translation management IMO. For example, it allows one to see at a glance that there is already a partial Spanish translation available, and who performed it. Your translation seems to be complete, so I'd appreciate if you could merge it with Jorge Luis Granda's translation.\n. Thank you for your input. This issue is a duplicate of the discussion going on in https://github.com/p-e-w/finalterm/issues/13.\n. This bug is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. Please see the note on top of the readme for an answer.\nAs it stands, there is already a partial French translation on https://translations.launchpad.net/finalterm/trunk/+pots/finalterm. Maybe you could fill in the blanks?\n. Duplicate of https://github.com/p-e-w/finalterm/issues/72.\n. This bug is a subset of #121.\n. I'm not sure I understand \"work\" correctly here \u2013 could this possibly be a duplicate of https://github.com/p-e-w/finalterm/issues/10?\n. As a search for \"htop\" (https://github.com/p-e-w/finalterm/issues/181) or \"vim\" (https://github.com/p-e-w/finalterm/issues/170, https://github.com/p-e-w/finalterm/issues/98) shows, this is a known bug with a simple explanation, currently summarized under https://github.com/p-e-w/finalterm/issues/121.\nClosing as a duplicate.\n. Fixed by @arkocal.\n. Thanks for the detailed report, I'll look into it.\n@steveno: Good idea in general, though IMO GitHub is at fault here. It sucks of course that the first 28 issues are now linked to this one for no reason (and even more that apparently there is no way to unlink them!) but the \"hash + number\" format is simply too common in all kinds of output to make issue linking the default. I bet it is happening all over GH all the time...\n. Unfortunately, I cannot reproduce the problem and I do not see any information in the valgrind trace that tells me what is really going on. Therefore, I'm closing this issue.\n. Duplicate of #26.\n. Hmm... what exactly is the problem being solved here (\"in-source build\")? Is it the fact that the .pot file contains the \"build\" directory as a hardcoded reference?\n. Merged. Thank you for maintaining this!\n. This bug is a subset of #121.\n. I cannot reproduce this issue. Could you please post the contents of your commands.ftcompletion file?\n. json\n{  \"text\" : \"cat ~/.\\n./                    .gnome2_private/      .pulse-cookie\\n../                   .gnome-desktop/       .purple/\\n.adobe/               .gnupg/               .putty/\\n.android/             .gphoto/              .screenlets/\\n.aptitude/            .gstreamer-0.10/      .ssh/\\n.arista/              .gtk-recordmydesktop  .steam/\\n.bash_history         .gvfs/                .steampath\\n.bash_logout          .ICEauthority         .steampid\\n.bashrc               .java/                .synaptic/\\n.cache/               .lesshst              .synergy.conf\\n.config/              .lgames/              .thumbnails/\\n.cups/                .local/               .tmux.conf\\n.dbus/                .macromedia/          .vim/\\n.dropbox/             .minirc.dfl           .vim-fuf-data/\\n.dropbox-dist/        .mozilla/             .viminfo\\n.ecryptfs/            .ncmpcpp/             .vimrc\\n.emacs.d/             .netrc                .VirtualBox/\\n.endlessm/            .netsurf/             .w3m/\\n.epiphany             .nv/                  .windows-serial\\n.gconf/               .nvidia-settings-rc   .wine/\\n.gimp-2.8/            .pki/                 .wine-browser/\\n.gitconfig            .PlayOnLinux/         .Xauthority\\n.gitignore            .Private/             .xerox/\\n.gitk                 .profile              .xscreensaver\\n.gksu.lock            .projectM/            .xsession-errors\\n.gnome2/              .pulse/               \\nsg@feather:~$ cat ~/.xsession-errors\",  \"uses\" : 1,  \"last-used\" : 1373333701}\nUuhhh... I wonder how this happened.\njson\n{  \"text\" : \"\",  \"uses\" : 4,  \"last-used\" : 1379197037}\nis also a bug.\n. Will look into these ASAP. Thank you for reporting this problem!\n. json\n{  \"text\" : \"^C\",  \"uses\" : 2,  \"last-used\" : 1379604158}\nis another bug.\n. Fixed in https://github.com/p-e-w/finalterm/commit/0624dc9580fa87854fb0ef9567d31a5fe5dcf6ea (you will have to wipe your ~/.local/share/finalterm/commands.ftcompletion though).\n. Good catch. I don't believe there is any connection with #192 though.\n. Sorry, closed by accident. This is not fixed yet.\n. Good point! This is certainly not as intended (though not as easy to fix as it may seem).\n. Duplicate of https://github.com/p-e-w/finalterm/issues/7.\n. Interesting. Can you elaborate on what you mean here, maybe post a screenshot? While the Green Screen scheme is certainly a little more \"monochromatic\" than the others in the sense that it has fewer colors, it seems to behave normally for me.\nThe color scheme is taken from https://github.com/chriskempson/base16-builder/blob/master/schemes/greenscreen.yml, which certainly shows that the small color range of the palette is also present in the source.\n. You're looking at what I'm looking at: That is the Green Screen terminal color scheme. While it won't appeal to everyone with its super-limited palette, it's part of base16 in this form; there is no bug here.\n. Thank you for the bug report.\nThe first of the 3 arguments in https://github.com/clutter-project/mx/blob/master/mx/mx-scrollable.h#L61 is actually \"this\", so in vala that would transform into 2 arguments (because vala uses the syntax this.method(arguments ...)).\nIn the .vapi file on my machine (for Mx 1.4) the method signature looks as it does in TerminalView.vala, but sure enough, in the current valadoc it doesn't (unowned has been removed).\nThis is an ugly problem, because if I change the signature the same error will show up on my and many other systems instead. I see only two ways to solve this problem:\n- Use conditional compilation for that line\n- Ship our own .vapi file for Mx\n. Yes, please!\n. https://github.com/clutter-project/mx/releases currently lists 1.4.7 as the latest release. I assume 2.0 will come out of the current unstable master?\nAs far as that goes, yes, I plan to move to the Mx master as soon as it becomes a release, because https://github.com/clutter-project/mx/pull/88 will allow for a drastic simplification of TerminalView.vala.\n. This actually seems to be a bug in Clutter or Pango. I filed it upstream as https://bugzilla.gnome.org/show_bug.cgi?id=708523.\n. Closing this as I'm powerless here \u2013 the bug is in Clutter or Pango as demonstrated in the upstream report.\n. This bug is a subset of #121.\n. I fixed this as part of a larger refactoring in https://github.com/p-e-w/finalterm/commit/b4d27989612c4fd0bc49736c3d1ea83e3238cf65, so I'm closing this PR. Thank you anyway!\n. There are two issues here:\n1. Ability to change the shell: This already exists, and is implemented through dconf (https://github.com/p-e-w/finalterm/blob/master/data/org.gnome.finalterm.gschema.xml#L47)\n2. (Semantic) support for shells other than bash: This is a duplicate of https://github.com/p-e-w/finalterm/issues/26\n. I see your point. I might get back to this issue at a later time.\n. Could you please run Final Term in gdb? This should tell us where precisely the segfault occurs.\n. This is an issue with the URL pattern at https://github.com/p-e-w/finalterm/blob/master/data/TextMenus/url.ftmenu#L6.\nNote that URL matching is more of an art than a science, since the actual specification is so general that almost everything is technically an URL, which would lead to many false positives.\nI have to say I am myself surprised that - is a valid URL path element name...\n. Fixed by @ferki.\n. Merged! Thank you.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/198. This is indeed an unfortunate issue.\n. @steveno has said it all.\n. Seems to be a libgee version issue:\n/build/buildd/finalterm-0.1/src/TerminalView.vala:569.10-569.42: error: The type name `Gee.SortedMap' could not be found\n    private Gee.SortedMap<int, Clutter.Actor> y_index = new Gee.TreeMap<int, Clutter.Actor>();\nSortedMap is in 0.8 though, so the build must use an older version. The log shows some confusing info in this regard:\nSelecting previously unselected package libgee-0.8-2:amd64.\nUnpacking libgee-0.8-2:amd64 (from .../libgee-0.8-2_0.10.5-1_amd64.deb) ...\nSelecting previously unselected package libgee2:amd64.\nUnpacking libgee2:amd64 (from .../libgee2_0.6.8-1_amd64.deb) ...\nSo, which version is it actually using? Presumably 0.6.8, since the build is failing, but why? Can anyone enlighten me here?\n. Indeed, that geary issue seems to be precisely the same problem.\n. I am aware that the problem persists, but I'm at a bit of a loss for what do do here. Final Term definitely requires libgee 0.8. The situation is unfortunate indeed.\n. Awesome! Thank you for working on this.\nBe aware that this might not be the only issue though. There is also a problem with a signature mismatch between the Mx VAPI file and what Final Term expects. Let's just hope we don't run into that as well...\n. Should be fixed per @guilhem.\n. Yep, duplicate of https://github.com/p-e-w/finalterm/issues/208.\n. I assume that you posted this in the wrong issue tracker. This is Final Term, a terminal emulator. Your issue appears to concern an SQL editor of some kind :)\n. This is currently being addressed in https://github.com/p-e-w/finalterm/pull/167.\n. The bottom pane sure looks like a GPU artifact to me. The warnings I see too, and don't have the problem.\n. Good idea!\n. This issue has already been fixed (see https://github.com/p-e-w/finalterm/issues/152). I assume that you are using the PPA? Because that is currently not building, and therefore lagging behind master.\n. I cannot reproduce this. The link opens but Final Term stays perfectly responsive on my machine.\n. I still cannot reproduce, and am not sure what could possibly go wrong here. Final Term simply invokes\nAppInfo.launch_default_for_uri((url.index_of(\"www.\") == 0) ? \"http://\" + url : url, null);\nwhich is a standard GLib call for this case. Ideas are welcome.\n. Thank you for the additional information, I'll take a deeper look. Also, I'm REALLY excited about the things you are working on in your fork, especially the emulation stuff. Very few people have the guts to dig into that!\n@github: Your autolinking system is severely broken. Please fix!\n. Hmm... I actually believe the parser is one of Final Term's strongest points from an architectural POV. Other approaches might be slightly more efficient, but Final Term's system is completely modular, making it possible to add new control sequences with ease. Compare this with other terminals' parsers, which usually are basically huge nested switch blocks trying desperately to implement an ill-defined state machine. But maybe you have other ideas, would love to hear them!\n. Turns out that launch_default_for_uri throws Error. Maybe an uncaught error is occurring and blowing up on the stack?\n. Fixed by @jmittert.\n. In general, this is a subset of https://github.com/p-e-w/finalterm/issues/121.\nIn particular, @abhinav-upadhyay:\nWhat's required is several things:\n1. Remaining control sequences must be properly implemented (in https://github.com/p-e-w/finalterm/blob/master/src/TerminalOutput.vala). This is very difficult since the behavior of most of them is more or less undocumented.\n2. The \"keyboard model\" issue needs to be fixed (see https://github.com/p-e-w/finalterm/pull/62).\n3. Several Clutter and Pango bugs/limitations need to be overcome, such as https://github.com/p-e-w/finalterm/issues/199.\n. Closing per @ferki.\n. I agree.\n. Yes, that was my thought as well. A simple circle should do the trick I believe.\n. Fixed by @arkocal.\n. Another good idea! Probably for a later version.\n. This is a duplicate of https://github.com/p-e-w/finalterm/issues/71, which has been fixed \u2013 but you need to run the latest version, which is currently not available from the PPA.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/220.\n. Closing per @TingPing.\n. Merged! A single letter that makes a big difference :)\nI have added your name to the about dialog credits: https://github.com/p-e-w/finalterm/commit/728072fd0c5753ef2d97e664aa27928ac65d9ccf. Thank you for your contribution!\n. Duplicate of https://github.com/p-e-w/finalterm/issues/198.\n. Fixed by @ferki.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/208.\n. You need Clutter 1.12 or later: https://developer.gnome.org/clutter/stable/clutter-Base-geometric-types.html#ClutterMatrix\n. This should have been fixed already. Are you running the latest version (note: the PPA currently does not have the latest version)?\n. Good catch.\n. That is a good idea, and probably how we'll do it in the end. There is some rearchitecturing required for this to happen, though.\n. This bug is caused by some control sequences not being implemented and is thus a subset of https://github.com/p-e-w/finalterm/issues/121.\n. Thank you for reporting this issue.\n. I believe you must be using an outdated version of Final Term (please note that the PPA is currently outdated), as the current master does not have this issue any more.\n. The cursor animation can already be disabled by setting cursor-motion-speed to 0 at https://github.com/p-e-w/finalterm/blob/master/data/Themes/default/default.fttheme#L45.\nAs for the scrolling, I'm not sure whether that is possible using the Mx ScrollView, which is quite the black box in many ways.\n. Is the file really called Mom\\253t___.ttf? Or is \\253 a placeholder for some unicode character? If yes, it would be great if you could post the actual name of the file as a unicode string.\n. Can you paste the actual unicode name here please?\n. I doubt that this issue has anything to do with there being a separate logical or physical drive, but it might be related to the problem fixed in https://github.com/p-e-w/finalterm/commit/a59382f860a524ba0030ce80f9c6721f26fdc671. Could you please try again (you're going to have to build from source though as the PPA is currently not building).\n. Probably related to https://github.com/p-e-w/finalterm/issues/71.\nAre you using Ubuntu? The PPA is outdated at the moment; I believe this issue was fixed in https://github.com/p-e-w/finalterm/commit/2a349712d670ef5378d4b607cd29b1e4e93aa4df. Please build from source if possible and try again.\n. In case you are talking about command autocompletion, that is already case insensitive by default (and can be made case sensitive again via a dconf setting).\nAs for filename (tab) completion, that is provided by the shell (bash), not by Final Term.\n. Yep, just another facet of https://github.com/p-e-w/finalterm/issues/121.\n. Not yet, but this is a good idea :)\n. Probably related to https://github.com/p-e-w/finalterm/issues/71.\nAre you using Ubuntu? The PPA is outdated at the moment; I believe this issue was fixed in https://github.com/p-e-w/finalterm/commit/2a349712d670ef5378d4b607cd29b1e4e93aa4df. Please build from source if possible and try again.\n. Does compiling from source fix the problem?\n. Final Term requires libgee >= 0.8. You have 0.6.4 only.\n. And you are correct of course, CMake should detect that. I'll look into it.\n. Fixed in https://github.com/p-e-w/finalterm/commit/0624dc9580fa87854fb0ef9567d31a5fe5dcf6ea (you will have to wipe your ~/.local/share/finalterm/commands.ftcompletion though).\n. Build files have been written to: /home/carli/sources/finalterm\nThat is the problem. Those should be written to the build directory. This works correctly with the exact instructions provided for me and everyone else though. No idea what is going on here.\n. OK, closing this then, since the instructions definitely are correct, and completely standard.\n. Thank you for your contribution!\nPlease be advised that at this point, we have decided to manage translations through Launchpad's Rosetta rather than GitHub (see Readme). We currently have a Chinese Simplified translation already, but maybe you could help complete the Chinese Traditional one?\n. This problem is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. I'm confirming this bug, though I don't know its cause yet.\n. It does not work with GNOME Shell.\n. Fixed in https://github.com/p-e-w/finalterm/commit/811a45ace0f5ef09cba850be27381be7e2e84665. Gotta love these undocumented API breaks...\n. This is a known problem, and a subset of https://github.com/p-e-w/finalterm/issues/121.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/7.\n. Yes, that's true (both that you need 0.8 and that the CMake file should do better here).\n. Should be fixed per @guilhem.\n. Merged! Thank you for fixing this important problem. I've added your name to the about dialog credits.\n. Indeed, those messages are intended for developers, not end users (still \"humans\" though...).\nIMO, it is not necessary to translate debug messages since end users won't see them anyway (unless running Final Term from a terminal) and most developers speak English. Nevertheless, I made them translatable in principle so that people have the option to do it if they want to.\n. There are build issues on Ubuntu caused by libgee signature changes. Apparently, some of them are still not fixed. See https://github.com/p-e-w/finalterm/issues/208 for details.\n. Closing per @hanst99.\n. It appears that Trusty is currently managed under \"devel\": http://ppa.launchpad.net/finalterm/daily/ubuntu/dists/\n. I'm not sure; not using Ubuntu myself, I don't know whether this behavior is default for PPAs or a \"trusty\" directory needs to be added explicitly.\nDo you have a PPA that works on Trusty without modifications?\n. From the above I understand that the only problem with the PPA under 14.04 is the list of dependencies.\n@versable: I believe you are the owner of the PPA. Could you update the package based on the information in this thread and add a \"trusty\" distribution?\n. :+1: I was wondering that too, looks absolutely beautiful!\n. It's good that another workaround was found, but of course what we really want is simply a trusty channel. Unfortunately, I cannot set that up myself since I'm not the owner of the PPA :(\n. OK, just to clarify once again, because people keep mailing and messaging about this although I have already written it above:\nDespite what it may say in some package file, I am not the PPA's maintainer. I do not even have a Launchpad account. Please stop writing me about it! If it were within my power to fix the PPA, I would have done so long ago.\nThis entire thread is a cacophony of the same things being repeated over and over again. If you scroll up, you will see that the questions of\n- Why there are no trusty packages\n- Who the PPA maintainers are\n- How the issue can be worked around\nhave all been answered in detail long ago.\n\nThat being said, I am glad @bashrc stepped up and created a separate \"trusty\" PPA so people at last can install Final Term on 14.04. \"Official\" packaging efforts from my side will not happen until an actual release has been made, for which there is currently no set date.\n. @artmartz: There is no manual ATM, but I can give you some pointers:\n- https://github.com/p-e-w/finalterm/blob/master/src/FinalTerm.vala#L259 has the list of currently supported commands (feel free to add to them through a PR!)\n- https://github.com/p-e-w/finalterm/blob/master/data/TerminalCommands/default.ftcommands contains the terminal commands, which are bound by https://github.com/p-e-w/finalterm/blob/master/data/Startup/bash_startup.in#L68\n- basically, the escape sequence \\e[133;H;COMMAND;#;PARAMETERS\\a occurring anywhere in the shell output read by Final Term will execute the given command, and since any program can write to the shell through stdout, it can effectively control Final Term\nMore details can of course be found in the source code.\n. Note that pwd is not a Final Term command. You have to use the RUN_SHELL_COMMAND command to execute a command in bash.\n. Dropdown is triggered using the F12 key by default (configurable in https://github.com/p-e-w/finalterm/blob/master/data/KeyBindings/default.ftkeys). If that doesn't work you have found a bug.\n. I'm closing this question as it is answered now; please file a separate bug if dropdown doesn't actually work for you.\n. Closing per @ajs124.\n. What is the change you needed to make in order to build on FreeBSD?\nI'm always open to supporting new platforms. If the change doesn't break compatibility with other platforms I would appreciate a pull request. Once Final Term reliably builds on FreeBSD we can see about the crash.\n. Actually, the path to bash is not hardcoded, but configurable using dconf. We might want to have CMake locate bash in the future to spare the user from having to configure this manually.\nThe crash you are seeing is one of the symptoms of https://github.com/p-e-w/finalterm/issues/296 and thus far completely eludes me, which is why I placed a bounty on it in the hope that someone else might bring enlightenment.\n. Oh, I see. ~~Is there a shebang syntax that works on all platforms that have bash?~~\nEdit: I have found the answer here. Can you confirm that this works on your system?\n. Closing per @CurtisLeeBolin, this is clearly not an issue in Final Term but in the graphics stack.\n. clutter, mx, keybinder, libgee, libnotify, ... Seems like CMake is not finding anything! Any ideas why that happens despite you installing the libraries?\n. What I see in the CMake output is\n--   package 'clutter-gtk-1.0' not found\n--   package 'mx-1.0' not found\n--   package 'keybinder-3.0' not found\n--   package 'gee-0.8' not found\n--   package 'libnotify' not found\nSo either there is a version mismatch on each of those libraries or indeed you don't have the headers as suggested by @ferki.\n. OK, understood... you didn't even attempt to install the headers because of the version mismatch.\n. Good catch!\n. Command injection through terminal output... very interesting, but indeed something that must be addressed.\n. Fixed by @Vreality.\n. - Application menu: Already exists in the form of a GMenu, rendered as an application menu in GNOME Shell and as a regular menu in other DEs. Or do you mean something else?\n- Right click options: Those already exist too, though currently only for pane management. It would be easy to add more options however.\n- Key board shortcuts: Already exists as well :), see https://github.com/p-e-w/finalterm/blob/master/data/KeyBindings/default.ftkeys for how to configure key bindings.\n- Ability to copy paste from primary X buffer: Here you are correct, copy and paste is not implemented yet. Progress is tracked in https://github.com/p-e-w/finalterm/issues/7.\nAny contributions are welcome!\n. While we have moved to the PPA as the recommended installation method on Ubuntu, more complete build instructions are still available from the Git history: https://github.com/p-e-w/finalterm/blob/4fe2f0157aa4ddf0ba48bbff8d48b9c253e55464/README.md#instructions-for-ubuntu\n. Interesting! I'm looking forward to see what will come of this. And thanks for introducing me to NixOS, never heard of it before :)\n. Has anyone tested this on Mac? Does this mean that https://github.com/p-e-w/finalterm/issues/92 is fixed?\n. Sure, looks nice, thank you :)\n. I have observed this problem also after upgrading to Fedora 20. Since a mere OS (and therefore library) upgrade triggers it, I strongly suspect a bug in Gtk+ or Clutter.\n. This is a known bug, you can easily find half a dozen duplicates by searching the issues ;)\n. On my system (Fedora 20) there is a very small rectangle in the top left corner of the window that is transparent as desired. Everything works as expected on Fedora 19; this smells like a library bug indeed.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/248.\n. Please take a look at https://github.com/p-e-w/finalterm/issues/258, where several people have apparently succeeded in building Final Term under 14.04.\n. Thank you for your feedback! zsh support is being tracked in https://github.com/p-e-w/finalterm/issues/26; the tmux issue is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. Merged. Clean and elegant solution, thank you!\n. Very strange, it does not do that on my system (I also use Fedora 20).\nCan you post your .bashrc?\n. That's one mighty include file!\n~~The most telling lines in .bashrc are the first two:~~\n``` sh\nif [[ \"$-\" == i ]] ; then interactive_shell=1; fi\n[ \"$interactive_shell\" ] && echo \":: Starting Bash ...\"\n```\n~~Since Final Term always runs bash using the -i flag and yet the \":: Starting Bash ...\" text is nowhere to be seen in the output, I can only conclude that the flag does not get passed to the .bashrc correctly when it is simply sourced from https://github.com/p-e-w/finalterm/blob/master/data/Startup/bash_startup.in. Maybe that by itself already causes a bashdb session to be opened for some reason. The prompt definition from the include file seems to get loaded just fine.~~\nEdit: Scratch that, I just realized that in bash, 1 is actually FALSE so the output would only be expected in non-interactive mode.\nYou could try adding the line\nsh\necho \"$@\"\non top of your .bashrc to see which arguments get forwarded, then compare the output between Final Term and your regular terminal. The problem must surely be in the arguments somehow, as nothing else would allow bash(db) to differentiate between the two (unless there is some environment variable that needs to be set in order to make bashdb not run in debugging mode, in which case you may want to add printenv as well).\n. What happens if you remove the -i parameter from Final Term's invocation of bash? What happens if you remove all parameters and simply call /bin/bash?\n. Merged!\nThank you for the fix :)\n. Duplicate of https://github.com/p-e-w/finalterm/issues/7.\n. Fixed in https://github.com/p-e-w/finalterm/commit/70043c1dc1de01d3aeebd261536e968ad095c6f9.\n. Fixed in https://github.com/p-e-w/finalterm/commit/d6d6bd612c9457ea67c6cd28a951271e320f1c75.\n. Fixed in https://github.com/p-e-w/finalterm/commit/b35f4b88ff3ff420aec773c0adcb68e261baca2a.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/112.\n. Fixed in https://github.com/p-e-w/finalterm/commit/c182acca7a5d89c12981c6b4eaba29647a869926, though problems remain due to https://github.com/p-e-w/finalterm/issues/296.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/258.\n. Thank you for bringing this to my attention. Please update the PR to fix the typo :+1: \n. Merged! Thank you again for the pull request. Of course, thanks also to @mattdm for creating the Copr in the first place!\nAnd to @ferki... I don't quite know what to tell you here, except that you seem to know me uncannily well :smile_cat: Believe it or not, I was almost about to insist that the branch name be corrected as well. But, you know, \"It's just a show; I should really just relax...\" :tea: \n. Please clarify. There is currently no Termlet for the tree command, so Final Term definitely does not try to generate menus for its output.\n. I see. In that case, there is already such a general performance tracking bug: https://github.com/p-e-w/finalterm/issues/150. I'm closing this as a subset of that bug.\n. No. Final Term is not stable yet and no release has been made. Once stable status is reached I will indeed try to get Final Term into the repositories of all major Linux distributions.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/64\n. Thank you for your effort. This PR is exactly along the lines that I was hoping for to solve the Guake mode problems.\nUnfortunately, it does not work, at least not on my system (Fedora 20, GNOME 3.10). The window is not reliably on top, and still shows the \"Final Term is ready\" notification.\nTo reproduce, I do the following:\n1. Start Final Term\n2. Press the \"TOGGLE_DROPDOWN\" hotkey (F10 in my case)\n3. Final Term drops down, but does not stay on top\n4. If I now press the hotkey twice more (hiding and showing the window) Final Term does stay on top\n5. When another window is focused and I press the hotkey, Final Term shows up, but is usually not focused, and triggers a \"Final Term is ready\" notification\nIn Guake, which I have running on the same system, all this works flawlessly.\nIt would be fantastic if these issues could be addressed and we could finally get proper dropdown functionality!\n. I just did a clean install of Fedora 20 in a VM, then cloned your repo directly, built and installed Final Term, and executed the steps described above.\nBoth problems persisted as described :( I really want this to work, but I just can't get it to. Note that in my trials, I pressed the hotkey directly after Final Term started, without hiding it beforehand.\n. Merged, as I found fixes for both issues:\n1. set_keep_above should be called after show\n2. present should be used instead of show\nThe behavior of the dropdown is now almost perfect, except for the fact that it still sometimes fails to focus the window (though much more rarely than before); I'm tracking this in https://github.com/p-e-w/finalterm/issues/295.\nThank you again for your contribution! I have added your name to the About dialog credits.\n. I merged this because it fixes the two issues from #204, although I'm not sure how big of an improvement it really is.\nFor example, the new pattern allows single-letter domain endings, which is not supported by DNS. Also, while http://example.com/-/test/ is properly highlighted now, http://example.com/-/ is not.\nBut since URL matching is not an exact science anyway, the result is probably good enough.\nThank you for the fix!\n. Merged!\nIn over one year of Final Term's public existence, this is the first time anyone has dared to contribute to the terminal emulation code. Thank you very much :+1:, if you have more knowledge on that subject I'd greatly appreciate further pull requests.\nI hope you don't mind that you are now credited in Final Term's About dialog :)\n. Duplicate of https://github.com/p-e-w/finalterm/issues/7.\n. Partially fixed in https://github.com/p-e-w/finalterm/commit/6ec39f8215b0732f52f74b0d96ed48abbffc1d9f thanks to @onli's insights.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/52.\n. Sorry, not necessarily a duplicate. Sounds like you are describing a slightly different problem after all.\nReopening.\n. Final Term's autocomplete is not fed by .bash_history but by a database of its own because it requires additional information such as command frequency etc.\nThis behavior is therefore expected.\n. Could you provide a screenshot of this problem?\n. You seem to be talking about http://blog.bountysource.com/post/48954271533/improved-github-integration-automatically-update, which is indeed pretty cool.\nAs I have stated before, I myself have currently no intention of accepting money in any form for my work on Final Term, but if bounties were attached to certain open issues and someone else wants to try for them, they of course have my blessing. I shall look into Bountysource and integrate it if appropriate.\nIt is important, however, that people who work on bountied issues (or indeed any other major issues) maintain communication because some major architectural changes are coming up. In particular, I plan to replace TerminalView with a new component, so it makes no sense to implement e.g. Copy & Paste on top of the existing one.\n. I have set up Bountysource for Final Term.\nFinal Term now has an official Bountysource project at https://www.bountysource.com/trackers/281825-final-term. I have made a start by pledging $50 towards a fix for https://github.com/p-e-w/finalterm/issues/296, the last issue that prevents split and tabbed panes from working as intended.\n\nTo re-clarify my policy on financial contributions to the Final Term project:\n1. I greatly encourage bounties for open issues! :+1: :+1: :+1: Bountysource bounties are now an official and welcome way to help Final Term as they can encourage third-party contributions.\n2. Everyone is invited to claim a bounty by fixing the issue in question. However, if you are considering a fix for a complex issue requiring deep changes such as https://github.com/p-e-w/finalterm/issues/7, please contact me first so we can make sure that your ideas are in alignment with the upcoming architectural changes.\n3. I myself might fix bountied issues occasionally but will not claim the bounty in that case. I see bounties as a way to attract new contributors, rather than filling my purse in exchange for work I was going to do anyway. So if you put a bounty on an issue I fix eventually, not only will you get your fix, but your money back also :smile_cat:. Placing bounties will have no effect on the rate of my own contributions to the project.\n4. The Final Term project does NOT accept donations at this time! All bounties must go towards concrete issues. This is not a fundraiser.\n\nWell, then, spread the word :speaker: and get those bounties going :moneybag:!\nAs a reminder, there are already 2 active bounties at this point:\n-  for https://github.com/p-e-w/finalterm/issues/92 (Mac OS X port)\n-  for https://github.com/p-e-w/finalterm/issues/296 (Segfaults, GTK errors and hangs with NestingContainer)\n. Hi Wolf, nice to see you here :)\nYou mean to search through the open panes (split / tabs)?\n. That is a really cool idea, and would be quite unique among terminal emulators I believe. It may well be possible to implement that.\n. Fixed by @ferki.\n. Merged, thanks :)\n. I think you might be on to something here, but I actually get crashes and hangs also (mostly, in fact) when exiting the shell directly, in which case terminate_shell is never called.\nTo reproduce, spawn a lot of tabs (,tab 10), then repeatedly press Ctrl+D to close them one by one. Observe that terminate_shell is never called, yet there is usually a crash or hang.\nIn total, I have observed three different behaviors in #296, all undesirable:\n- Hang with no relevant output at all\n- Gdk-ERROR: BadDrawable (invalid Pixmap or Window parameter) (+ crash)\n- Segmentation fault (+ crash)\nAt least the first two seem to occur independently from terminate_shell.\n. The good news is that with your changes, I have thus far been unable to produce any crash :fireworks: \nThe bad news is that this approach introduces a \"wait time\" between exiting a shell and the tab being closed, which is not really what we want from a UX perspective. Also, I have found that this leaves defunct shell processes around, which is not surprising since it removes the call to waitpid. On a side note, much of the changeset seems to be nonfunctional and should be removed; I have annotated the appropriate portions of the diff.\nOverall, you are clearly on the right path as the crashes are gone, but given the new problems I'm afraid it's not quite there yet. Please don't give up though, I want to see a proper fix more than anything! My feeling is that without a full understanding of what really causes the problem, such a fix will be very hard to pull off. I agree with you that the cause might well lie in GTK+ (or Clutter, though I think that less likely). One hint could be that in older commits such as https://github.com/p-e-w/finalterm/commit/b34c51b739588bd0523b2f2379b1d96edf587038, the issue does not arise.\nIt's cool that you blogged about your efforts on https://www.onli-blogging.de/, BTW :smiley: \n. > Maybe there is a good way to instantly react on the change without polling explicitly?\nHave a look at http://valadoc.org/#!api=gdk-3.0/Gdk.threads_add_idle: \"This variant of add_full calls function with the GDK lock held. It can be thought of a MT-safe version for GTK+ widgets for the following use case, where you have to worry about idle_callback running in thread A and accessing self after it has been finalized in thread B:\"\nMaybe this is already the answer and makes polling obsolete. If your theory is true and the underlying cause is a threading problem, this should fix it. It's also not deprecated, unlike threads_init.\n\nThe nice thing about this is that the waitpid-approach is not necessarily needed anymore, if I understand the architecture correctly. I will add a function to close the command_channel in Terminal, which was called using the waitpid-pid, called now from the close event in TerminalWidget.\n\nThe main purpose of waitpid is not to provide a callback supplying the PID but to prevent the process from turning defunct (\"zombie\"). The docs at http://linux.die.net/man/2/waitpid indicate that \"if a wait is not performed, then the terminated child remains in a \"zombie\" state\", so there seems to be no alternative to it.\n\nHow does that work properly - it is probably easiest to just send another, clean pull request?\n\nYep, this would be best. You can also rebase on your machine and then force-push into the existing branch which should update this pull request; I see this happening on GitHub a lot.\n. Superseded by https://github.com/p-e-w/finalterm/pull/311.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/258.\n. Final Term's data structures should make implementing session persistence very easy in the future :)\n. I'm not sure about this. While it seems to be true that other terminals use these terms in the reverse connotation, Final Term's terminology aligns with that of GTK (see e.g. the screenshot on http://developer.gimp.org/api/2.0/gtk/GtkPaned.html).\n. What exactly would \"emoji support\" mean in the context of a terminal emulator? I can understand what this would entail in, say, an IRC client, but a virtual terminal? Since e.g :) might well have a symbolic meaning in shell output, I don't think we want this to be auto-substituted by a smiling face...\n. That's pretty cool actually :) If this is indeed in FreeType, it should probably work out of the box with the right version.\nI'll definitely give this a try.\n. Seeing the cleaned code, I have at last understood how your approach works (please correct me if I'm wrong): Every second, it checks whether posixCloseEvent is set, and if yes, closes the active pane. posixCloseEvent, on the other hand, is set when a shell process exits but we are not within the 2 second closingProcessRunning time window, the assumption being that in this case the shell must have exited directly.\nRegrettably, now that I grasp the idea, I have been able to break it quite easily:\n- Split the terminal into two panes\n- Close the left pane (right click -> \"Close\")\n- as fast as possible (well, you have 2 seconds) activate the other pane and press Ctrl+D to exit the shell\n- Since the shell exited while closingProcessRunning was still set, posixCloseEvent never gets set, and as a result the window remains open (but unusable, with the text \"exit\" displayed)\nClearly, lowering the loop timeout would not fix this, only lowering the kill timeout could \u2013 but this is likely to reintroduce crashes again :unamused:\nAnother issue, at least in theory, is that it is possible to terminate a shell, then quickly switch to another tab/pane so that the wrong TerminalWidget is active when the loop realizes the shell was closed, resulting in the wrong widget getting closed. This again could be mitigated by lowering the timeout, but that would get arbitrarily ugly while never being completely safe. More issues might exist, and by rapidly closing panes and switching around I have actually been able to produce all kinds of weird and unwanted behavior.\nWe should probably look at the threading/signalling angle again, and abandon timeouts altogether. The fact that, as you wrote, threads_add_idle causes crashes again seems to indicate that the actual cause might be a different one anyway.\n. I just pushed a commit to master making two changes:\n- The close signal is now wrapped in Gdk.threads_add_idle. This fixes all crashes on my system! I have opened and closed hundreds of widgets without a single crash after this fix. This is a definite confirmation of your theory.\n- command_channel is now checked for readability. This fixes most hangs on my system. I had this idea after seeing a related error message once (never saw it again before or since) during a crash.\nPlease try if you can reproduce crashes with these changes. If no, I guess we can consider the crash/segfault issues solved, leaving the (reduced) hangs.\n. > And if there are really (small) new issues, or stuff to be improved like another way for the thread-communication, couldn't this be better done later (after more people could play with a more stable finalterm)?\nAs the crashes are already gone completely and the hangs are gone almost completely I don't think it's necessary to introduce any hacks at this point anymore. Let's fix this issue properly. The only task that remains after this change is to fix the hangs. I am now almost certain that these are caused by an entirely different problem. You had the crucial insight that the crashes were caused by GTK actions being performed from outside of the main thread. The mitigation for this is the threads_add_idle fix, which on my system works perfectly (I still have not produced a single crash with it). Indeed, any issue that is caused by GTK thread safety limitations should be completely eliminated by the use of threads_add_idle if the docs are to be believed, and I do believe them.\nThe fact that hangs still occur indicates that they are not caused by GTK threading issues at all. The fact that (at least on my system), the number of hangs was significantly reduced after the command_channel fix further corroborates that idea.\nI therefore believe that your pull request fixing not only the crashes, but the hangs as well has nothing to do with threading at all. Instead, I suspect it to be related to the 2000 ms timeout, which basically gives the shell time to terminate before further action can occur. The hangs must be caused by a deadlock, as the process does not consume CPU time when it hangs. The timeout probably allows the lock to be released by preventing a race condition.\nAlas, all this is becoming very difficult to test on my system as the command_channel fix has almost eliminated hangs for me. My testing procedure is as follows:\n1. Start Final Term\n2. Open 4 additional tabs (,tab 4)\n3. Press Ctrl+D to close them one by one\nIn the past 20 trials, closing 100 widgets in total, I have seen only a single hang (and no crashes). Do you know of a better way to reproduce hangs?\nIn any case, I don't believe it makes sense to pursue the \"signal the main thread\" angle any further \u2013 because we are signalling the main thread now. If main thread race conditions somehow still were the issue, this would be a bug in GTK, and while there of course are bugs in GTK, I don't think this is one. Instead, we should try to find the cause of the hangs (lock?). I'm going to fire up Nemiver now and try to understand what causes the lock. You seem to have done some research in this direction on your blog already. When it freezes now, does it still get stuck in the same lock?\n. I must admit I'm a bit out of my depth here. I see the stacktrace alright, but what does it really mean? The thread seems to be stuck in a mutex lock, eventually caused by g_source_attach (the culprit seems to be this line: https://github.com/GNOME/glib/blob/master/glib/gmain.c#L1142). I'm not sure how to proceed from there. Will investigate further on the weekend.\n. > I am still irritated that my workaround seemed to work stable on my system but not on yours, maybe that says us something.\nIndeed. All signs seem to point towards a race condition which might be affected by system speed and other external parameters.\nTo my shame I must confess that I did not find time to investigate during the past weekend as I had promised. I really do want to see this issue closed for good though so I will try my best to do it the upcoming weekend instead. :8ball:\n. I did a bit more debugging work this weekend but it feels like trying to get a picture of a dark room by repeatedly poking a stick into it.\nI can now produce a hang only by opening and closing at least 50 tabs. I have never seen another crash. So while a tiny issue remains, and remains mysterious, #296 has been reduced from a show-stopper to a minor nuisance.\nI am not going to merge this PR because the \"sleep\" approach feels unclean and creates other issues as described above. However, your key insight that there is a GTK thread safety issue underneath all this was the foundation for the simple and effective fix https://github.com/p-e-w/finalterm/commit/6ec39f8215b0732f52f74b0d96ed48abbffc1d9f. I don't think I could have guessed this problem source even if I had spent a year working on the bug. I therefore would like to award you the bounty I placed on #296, and invite you to claim it on Bountysource so I can do just that. :smiley: :moneybag:\n. I closed #296 per the instructions on Bountysource and you should now be able to claim the bounty.\n. Do you actually have multiple tabs open? Because it looks like this is simply the GMenu shim.\n. I cannot reproduce this. Could you provide more details?\n. Hmm... there is definitely a bug there. I still cannot reproduce it on Fedora, though. Maybe it has to do with Luna rendering the GApplicationMenu as a \"bar\" menu.\n. Try commenting https://github.com/p-e-w/finalterm/blob/master/src/FinalTerm.vala#L59 and then recompiling, which will remove the application menu. Of course, then you also won't be able to open the preferences dialog, but you should be able to modify the opacity value nonetheless using dconf-editor or a similar tool.\n. I cannot reproduce this on my system. It must have something to do with the filenames in your home directory.\nCould you provide a list of file and folder names in that directory? Alternatively, if you are not comfortable giving out that information, maybe you can narrow the problem down to one or two files yourself. There should be at least one file that sticks out as having a somehow \"different\" name (probably the one just before the first file that is displayed).\n. Happy to hear that :)\n. Merged. Thank you for your contribution! I have added your name to the about dialog credits.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/218.\n. Thank you for solving that riddle. I would have never guessed it is necessary to manually define an input context; I had always assumed that would be built into the event mechanism already.\nTwo remarks:\n1. The input method should definitely not override user configuration; if the user wishes to make a key combination do a certain thing, we should not prevent him from doing that. Therefore, I believe the call to filter_keypress in on_key_press_event should be moved to line 233, where send_text_to_shell currently is.\n2. In the same vein: Since send_text_to_shell is now invoked by the IMContext's commit signal, shouldn't the call to send_text_to_shell in on_key_press_event be removed? Please correct me if I misunderstood something.\n. Minor quibble: There are two typos in the commit message (\"propper\" -> \"proper\", \"handlind\" -> \"handling\"). Not a big deal though.\n. > The user configuration handling currently captures the enter key event making hex entry impossible if the IM filtering is placed after the keybind handling.\nI see... the proper way would be to introduce another state for keybindings that lets them react to whether the input method is currently inside an input sequence or not, but that would be overkill IMO. Sadly, some relatively interesting keys, such as ^ on my German keyboard, can not be bound by the user configuration in the current state.\n\nbut only after I created the pull request, and now I can't change it I think\n\ngit commit --amend -m \"Added proper Unicode input handling\"\ngit push -f origin master\n:)\n\nAnother idea, I believe\nprivate bool on_key_release_event(Gdk.EventKey event) {\n    im_context.filter_keypress(event);\n    return true;\n}\nshould be changed to\nprivate bool on_key_release_event(Gdk.EventKey event) {\n    return im_context.filter_keypress(event);\n}\nso that other handlers can still capture key_release_event if necessary. What to you think?\n. Sorry for the delay in merging; I'm a little busy at the moment but will try my best to get to it this weekend. :8ball:\n. Merged at last! Thank you for your patience. I tested this thoroughly and it worked perfectly no matter what I tried. Therefore, I think it is fair to say that you fixed #10 :)\n. A curious problem which I believed to be fixed already. In fact, I don't quite see how this is even possible given that the width of the popup is hard limited to 40 characters. Are you running the latest master?\n. Do you have the means to debug this on your machine (with Nemiver maybe?). The line I pointed out should limit width to 50 px + 40 characters. From your screenshot it is evident that on your system that does not work as intended. This seems to imply that either the character width is messed up, or that the width does not actually get set for some reason.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/258.\n. sudo spawns another instance of bash without Final Term being able to inject its logic into it. I see no way to fix this short of patching bash. You can, however, replace the user's .bashrc with Final Term's bash_startup as a workaround. That way, the hooks get executed whenever a bash shell is spawned from that user's account \u2013 unfortunately, also in other terminal emulators.\n. Final Term could set an environment variable (IS_FINALTERM), but indeed all .bashrc needs to do is examine bash's parent process (and if that is bash again, its grandparent process and so on). This could be written as, say, a Python script with ease and probably even in bashscript directly.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/258.\n. Final Term's startup file sources your .bashrc, so if that does not get loaded there is a bug.\nOutput selection is being tracked in https://github.com/p-e-w/finalterm/issues/7.\n. I'm not sure I follow. In particular, what do you mean by\n\nHaving defined a whatever var in .bashrc, whatever is defined in finalterm, thus .bashrc is correctly read. but bash_startup overrides ls, ps and wget due to the previously cited code.\n\nWhy would bash_startup setting termlet aliases cause .bashrc not to be read? Or is the only problem those aliases, and all your other settings are respected? In that case, I'm afraid that's a Final Term \"feature\" and fundamental part of its functionality.\n. I think I see a fix that could satisfy all purposes: Include the user's .bashrc not at the beginning but at the end of bash_startup. That way, the user is free to override Final Term's defaults, in line with the way we do configuration for other purposes as well. What do you think?\n. This seems to be a duplicate of https://github.com/p-e-w/finalterm/issues/152, which I thought to be fixed long ago. I cannot reproduce this on any of my systems. Are you running the latest master?\n. I love your work! Because you created this pull request from your master branch and have since pushed other changes to that branch, several commits with different purposes are now part of this PR. Could you split your work into feature branches and submit them as separate PRs?\n. All currently existing issues with more complex graphical terminal programs have their root cause in https://github.com/p-e-w/finalterm/issues/121. Once xterm emulation is reasonably complete, these issues will go away automatically. Unfortunately, there is no easy fix for this and the poorly documented terminal magic will have to be hand-implemented step by step.\nI'm happy to hear bidir support is better in Final Term than in other programs though!\n. As for the other part of your question: I actually like having separate files for key bindings, themes etc.. I don't think this will be changed in the future, unless there is a lot of demand for it.\n. Hmm... I don't know about you but this sure looks and sounds like a window manager bug to me. Workspace switching is completely out of control and context for Final Term, and works on GNOME without problems.\nAlso, the dropdown is not animated \u2013 I wish it were... ;)\n. How is the behavior with other Clutter-based programs such as Ease (some of the newer GNOME games are also based on Clutter I believe)? Do they have the same problem?\n. The ls issue is known, and already marked as a TODO in https://github.com/p-e-w/finalterm/blob/master/data/Termlets/ls#L8. This should be possible to fix before the first stable release, and I have marked this bug as such.\nI'm really intrigued about the ps problem, and cannot reproduce it on my system (admittedly, I have no four-digit PIDs though). I have always thought the ps termlet to be the most reliable one, due to its simple logic. Maybe you can look at the termlet's code and get an idea where it goes wrong in your case?\n. This (the ps part) is presumably fixed as a side effect of https://github.com/p-e-w/finalterm/pull/340.\n. Nautilus typically offers mostly GUI programs, but Final Term's palette consists of terminal programs only. There is a good reason for that in the sense that it allows the user to stay within the terminal context. This becomes especially apparent when SSH is involved, where \"Open with gedit...\" or similar items simply don't make sense, while nano and vi are still perfectly applicable. I therefore do not think this would be a sensible enhancement in general.\nHowever, if you wish to see this feature on your system, all you have to to is edit https://github.com/p-e-w/finalterm/blob/master/data/TextMenus/filename.ftmenu.\n. Hmm... your last point in particular is definitely valid. But how should the SSH issue be handled in your opinion?\n. OK, I'm reopening this as a wishlist item but safe to say this is likely not coming anytime soon, especially the transparent sftp translation, as it just sounds too complex for now.\n. This is a duplicate of https://github.com/p-e-w/finalterm/issues/193, and while it is high on my personal \"biggest annoyances\" list, I'm at a loss for how to fix it. I have tried many approaches, but there always seems to be at least one unsolvable problem remaining.\n. Thank you for your work. This definitely fixes the problem, but I decided to merge another PR instead which solves the same issue and is slightly simpler and cleaner IMO.\nTherefore, I am closing this pull request.\n. I like the simplicity of this solution, but unfortunately, it breaks if the parameter contains single quotes that are already escaped :(\n. I ran a few more tests and found that indeed, I cannot seem to break this solution in practice, which is awesome and means it is definitely a step forward.\nTherefore: Merged!\nI would like to give you credit for your contribution in Final Term's About dialog, but I did not find your name anywhere. If you want to see your name listed there, just drop me a line and it will happen. Otherwise, no problem either; in any case your work is very much appreciated!\n. Well, Nick, you've just been immortalized :smile_cat:!\n. Duplicate of https://github.com/p-e-w/finalterm/issues/258. You can find a workaround there. Unfortunately, I'm not the owner of the PPA so I cannot fix this problem by myself.\n. Confirmed.\n. @Carnassial: While this would explain why hidden files do not have semantic menus attached to their filenames, it does not explain why they aren't even shown.\n. Fixed by @Carnassial.\n. This breaks command autocompletion on my system, with \"Unrecognized control sequence\" error messages. Not sure yet what exactly the issue is. bash string manipulation is quite tricky...\n. This works like a charm (around 40% speedup on my system), and as indicated by @ferki probably fixes #328. I have a few style quibbles I'm annotating in the code but besides that, this looks good to merge!\n. Thank you, this looks and works great.\nMerged! I have added your name to the about dialog credits.\n. Thank you for your effort here. I have to admit I'm a bit undecided as to whether I actually want to merge this. As it stands, this adds 15 lines of code with no benefit at all (as indicated in the comments, this is not \"real\" error handling) besides silencing the warnings, especially in the case of the regex which is almost guaranteed not to fail in practice. I merged such a PR before and have regretted it many times since as the try/catch clauses needlessly clutter up the code (and add indentation). The truth is that the valac (and gcc!) warnings are probably never going to disappear because Vala itself simply has too many bugs. What do you think, is the removal or a few warnings worth the clutter?\nI'm not referring to the add_child fix here of course, that one makes perfect sense.\nP.S.: For some reason your commit messages are doubled. Don't know what's going on here.\n. To be honest, I have often considered removing most existing try/catch clauses to simplify the code at the cost of a few additional warning messages, which have never helped me in the past anyway.\n. Confirmed.\n. Fixed in https://github.com/p-e-w/finalterm/commit/a4227a42cb7bdf841b48357376af025b215843ab.\nQuite amazingly, this turned out to be not an actual freeze but a performance issue (the output does show up \u2013 if you have about 30 minutes patience, that is...). Final Term had huge performance deficits when rendering really long lines such as the ones produced by ps e, which are now gone.\n. Duplicate of https://github.com/p-e-w/finalterm/issues/258.\n. True, but somehow, the files are regenerated with a simple make, not requiring another invocation of CMake, so this is not really a problem IMO, as make clean in the end only \"cleans\" files that make can recreate.\n. I cannot reproduce this on Fedora 20. make; make clean; make finishes without any problems at all on my system. This is very mysterious.\n. I'm not sure whether this is an actual problem given that it only occurs if one doesn't follow the build instructions, but even if it were I don't quite know how to go about it. org.gnome.finalterm.gschema.xml for example is not referenced anywhere apart from https://github.com/p-e-w/finalterm/blob/master/CMakeLists.txt#L92, so the deletion seems to be \"implicit\" somehow.\n. You can always compile from source, which should be pretty straightforward given the instructions in the readme. Just ask if you encounter any specific problems when compiling.\n. I am not the maintainer of that package so I'm afraid I cannot answer that question. Official packaging (maybe also for OpenSUSE) is going to come at a later date once Final Term is stable. For now, I am closing this issue.\n. Thank you for your efforts to push packaging forward. I remember your first PR along the same lines and IMO the argument from back then still applies that packaging stuff is probably better left out of the main repo for now. http://bazaar.launchpad.net/~versable/finalterm/deb-packaging/files/head:/debian/ already has everything required to build .debs for people interested and should be sufficient as a stop-gap. Once it is decided how packaging will be handled across the many distros this PR might become very relevant so I'm keeping it open for now. Thanks again!\n. Duplicate of https://github.com/p-e-w/finalterm/issues/258.\n. I cannot reproduce this problem. On my system, both clear and Ctrl+L work as expected. Can you give more detailed instructions for reproducing?\n. As @Vreality said, Final Term only supports bash at the moment and will also likely only support bash in its first release.\nIn bash, I cannot find a difference between Ctrl+L and clear.\n. I see. The reason why Final Term no longer has that restriction is that it doesn't work with GtkPaned, which would necessitate the implementation of a custom paning system (I believe that's what Terminator does).\n. Final Term definitely does not define its own prompt; rather, it respects the user's prompt as defined in .bashrc. The actual problem here is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. Indeed. Thank you for pointing that out.\n. The screenshots clearly show an issue with GNOME Shell (from the looks of it, a GPU texture issue), not with Final Term. That this issue is triggered by Final Term running does not mean that Final Term is where the bug is \u2013 no program should be able to break the shell like that if the shell is working properly. I've seen similar issues many times on GNOME Shell desktops and they always boiled down to problems with Clutter's GPU rendering.\nSo while I'd love to help you, I'm going to have to leave this one to the GNOME devs.\n. I like F12 being the shortcut for \"dropdown\", as this is what guake and iTerm2 use as default as well. I thought for a long time about which key should bring up the window and really wanted it to be a function key for consistency with dropdown but you are probably right.\n. @Shahrukh36: This is already possible; by editing https://github.com/p-e-w/finalterm/blob/master/data/KeyBindings/default.ftkeys, you can make keys do whatever you want.\n. What exactly is the content of your prompt? Is it\n\u25b6\u25b6\u25b6 02:04.56 Wed Sep 17 2014 \u25c0\u25c0\u25c0                                                \njdetiber@localhost:~\u27a4\n?\n. Merged! Thank you for your work. I have added your name to the about dialog credits.\n. Thank you for reporting this problem. The main issue is the current lack of support for line/box drawing characters.\n. This seems to be because of incomplete xterm emulation, and as such is a subset of https://github.com/p-e-w/finalterm/issues/121.\n. It seems that this idea was also part of https://github.com/p-e-w/finalterm/pull/357, which I just merged.\n. Yes it was: https://github.com/p-e-w/finalterm/pull/357/files#diff-adf4e100fdd82beec1acac666e9db93cL61.\n. Looks great, but three commits for one changed line... could you squash them into one, please? :smiley: \n. I can definitely confirm that this fixes the problem on my systems.\nMerged! Credit to @Carnassial for the fix.\n. https://github.com/p-e-w/finalterm/issues/258 should help you.\n. At last I was able to reproduce the issue on my system, and confirm that your PR fixes it.\nMerged! Thank you for your contribution. I have added your name to the about dialog credits.\n. The idea sounds great (this is a common annoyance!), but I doubt it is feasible. I have yet to see a way to hook into bash's extensible autocompletion for an external program (which would allow us to introspect, say, aptitude).\n. This looks good! Indeed, your solution should allow us to get rid of lots more boilerplate: For example, it seems to me that the following code parts are now all unnecessary and can be removed: https://github.com/arkocal/finalterm/blob/Iss187/src/TerminalView.vala#L189, https://github.com/arkocal/finalterm/blob/Iss187/src/TerminalView.vala#L199, https://github.com/arkocal/finalterm/blob/Iss187/src/TerminalView.vala#L179-L182, https://github.com/arkocal/finalterm/blob/Iss187/src/TerminalView.vala#L322.\nhttps://github.com/arkocal/finalterm/blob/Iss187/src/TerminalView.vala#L229 probably needs to be adapted to the new visibility paradigm as well.\nAlso, could you please fix the indentation to be in line with the rest of the code? You can see the issues by switching to the \"Files changed\" tab in this PR. Just use tabs everywhere and you'll be fine :)\n. I'd really like to merge this PR since it fixes an annoying problem but your comments about the AutoComplete window make me think you still want to change something. If you want me to merge now please squash the commits into one and we can revisit that issue later. Otherwise, I'll wait of course.\n. You can squash them \"online\" as well, no problem: Just squash locally and force-push to arkocal:Iss187, this pull request will then automatically update. Yes, GitHub is awesome :smiley:\n. Sorry, but while squashing you seem to have undone your last commit :( I now see all the above mentioned issues again, such as the blank line, the superfluous line 322, and the problem in line 228.\n. This time everything worked. Merged! Your name is now in the about dialog credits.\nThe original issue is definitely fixed. One thing I noticed is that when toggling and then un-toggling the button, I get\nClutter-WARNING **: Attempting to remove actor of type 'MxButton' from group of class 'ClutterActor', but the container is not the actor's parent.\nAlso, untoggling still doesn't work as expected (removes the button rather than untoggling it), but that was already an issue before of course.\nThank you for your contribution! :fireworks:\n. > Recompiling Cairo and GTK made the scaling slightly better\nThis sounds like a Cairo/GTK issue then. Which version(s) did you have before and which ones did you compile?\n\nAdditionally, the top menu bar is rendered as transparent.\n\nIn case you are referring to the Cinnamon top bar (as shown in @mottoper's screenshot), that is completely outside of Final Term's control and thus likely a bug in Cinnamon, perhaps related to GPU issues as so often when Clutter is involved.\n. > No, I'm referring to a menu bar present in the Final Term window. There was a 'File' button, essentially hovering in a menu-bar sized empty space between Final Term's black console area and its title bar.\nNow I'm really stumped. Final Term creates no menu titled \"File\" \u2013 could this be how the GMenu is rendered in Cinnamon?\n. @nashley: There are two things that I expect would make fine-tuning easier:\n1. Rather than /usr/share//usr/local/share, Final Term should use the current user's dotfiles (e.g. ~/.config/finalterm)\n2. There should be menu items that directly open the various configuration files in a text editor (this idea is basically stolen from Sublime Text)\nThat way, each user can edit his own configuration without requiring root access, and every configuration file is just a click away.\n. Why was this closed? Were you able to fix the problem?\n. OK, I see it now: Duplicate of https://github.com/p-e-w/finalterm/issues/368.\n. \"Green Screen\" is not the default color scheme. Did you manually set it and did the error occur only afterwards or was it even happening with a clean install, when the color scheme would have been \"Default\"?\n. This seems related to https://github.com/p-e-w/finalterm/issues/368.\n. Final Term's \"cursor\" is not a cursor in the GTK sense but rather just a rectangle, so I wouldn't expect it to.\n. The cursor logic is here:\nhttps://github.com/p-e-w/finalterm/blob/master/src/TerminalView.vala#L159\nhttps://github.com/p-e-w/finalterm/blob/master/src/TerminalView.vala#L195\nhttps://github.com/p-e-w/finalterm/blob/master/src/TerminalView.vala#L344\n. Well, the window manager and desktop environment are probably the key parameters. AFAIK, no Linux DE (not even GNOME) has flawless HiDPI support yet, so I guess what we are seeing are just quirks in the various implementations.\n. It looks like we have no less than three types of wrong behavior on HiDPI setups:\n1. Cursor huge, text small\n2. Text huge, cursor small\n3. Text blurred\nI wonder what the difference between the systems is on which the these problems occur.\n. Actually, I believe we can simplify this and some other code here. I introduced is_collapsible_start/is_collapsible_end to have a flexible solution for deciding whether there should be an arrow or not but we now know that both of these variables are really the same as output_line.is_prompt_line.\nTherefore my suggestion is to get rid of those two variables entirely and replace them with checks for is_prompt_line like you are already doing here. Additionally, is_collapsible should include a check for the current line as well (i.e. whether it is a prompt line); that way, double checks like here can be avoided.\nI am personally OK with linking LineView and LineContainer in the way you proposed because there really seems to be no other method to achieve the desired effect. However, following the pattern used elsewhere in the code (such as TerminalView and TerminalOutputView), the LineContainer instance should be passed to the LineView through the constructor rather than set afterwards. That way, there is no need to have any public variables at all :+1:\n. Merged! What a lovely improvement :) The UI looks so much better now!\n. Confirmed.\n. Yes, the problem is actually on the shell level, because bash itself does not reset the the value of $? until another command is executed.\n. Fixed in https://github.com/p-e-w/finalterm/commit/39b078b2a96a5c3c9e74f92b1929f383d220ca8b.\n. This was a much deeper issue than originally suspected. Here's the full story:\n1. Newer versions of VTE install a __vte_prompt_command function in the PROMPT_COMMAND variable. Because the preexec script was appending to rather than overriding this variable, the built-in check for no-op lines did not work.\n2. Once that was fixed, Final Term's prompt detection failed because now it was no longer getting notified of no-op commands. Adding a dummy invocation of the hook fixed that problem too.\nBasically, one bug was hiding another bug. Now, both bugs are fixed.\n. Which desktop environment and window manager do you use? In case it's just vanilla Ubuntu, do you have the proprietary or open source graphics drivers (note that Final Term uses hardware acceleration based on Clutter, so this matters quite a lot)?\n. > Should the Ubuntu package be changed to depend on libcogl20 instead?\nI have v16 on Fedora 20 and it works without problems. If requiring a newer version fixes the bug, then the answer is probably yes.\n. @golimpio: Might be, and indeed also to https://github.com/p-e-w/finalterm/issues/386.\n. There were good things in the commits from both of you, so I took the liberty of cherry-picking them into https://github.com/p-e-w/finalterm/commit/c379f160ac5b0b20cfb9107b60704857c1a99792.\nIn particular, there are now both keyboard shortcuts and context menu entries. For some reason though, I could not get the Ctrl+Shift+V shortcut to work yet.\n@Eugene-msc: Since I took code from your PR, I have credited you as an author in Final Term's about dialog (@nashley is already there).\n. Agreed.\n. This looks good now, but I actually just found that we shouldn't even have this problem in the first place as the \"preexec\" script apparently has functionality to detect empty commands. For some reason, this is not working though (which is the real bug); I'm currently investigating why.\n. I found the issue underlying the bug and fixed it in https://github.com/p-e-w/finalterm/commit/39b078b2a96a5c3c9e74f92b1929f383d220ca8b (explanation in https://github.com/p-e-w/finalterm/issues/377#issuecomment-63171648). I'm closing this PR since it only masks the real problem which is now solved.\n. Have you seen @Eugene-msc's PR for the same issue here?\n. Note that GitHub allows me to assign issues only to myself or to members of the \"organization\" (which we don't have), so this feature doesn't help us. IMO, the best way to avoid duplicate work is to drop a quick \"I'm working on this\" comment on the relevant issue thread.\n. I found the issue underlying the bug and fixed it in https://github.com/p-e-w/finalterm/commit/39b078b2a96a5c3c9e74f92b1929f383d220ca8b (explanation in https://github.com/p-e-w/finalterm/issues/377#issuecomment-63171648). I'm closing this PR since it only masks the real problem which is now solved.\n. Thank you for the detailed writeup. Obviously, I still cannot reproduce the issue, but the gtk_im_context_filter_keypress makes me wonder that it might have something to do with the input method. Are you using any enhanced input method like pinyin, accessibility helpers etc.?\n. I just found that https://github.com/p-e-w/finalterm/issues/364 looks very similar to this issue. Can you try if the fix described there works for you?\n. Duplicate of https://github.com/p-e-w/finalterm/issues/364.\n. IMO, we can certainly do without column selection, at least in the beginning. Word selection by click is probably needed though.\n. This is a known issue (https://github.com/p-e-w/finalterm/issues/296). @onli made great progress on this in https://github.com/p-e-w/finalterm/pull/311, resulting in https://github.com/p-e-w/finalterm/commit/6ec39f8215b0732f52f74b0d96ed48abbffc1d9f, but some few hangs remain. I have absolutely no idea how to fix those, although I spent quite some time trying to isolate the problem already. Without fresh input, I doubt I'll be able to close this issue.\n. Closing as both issues reported here are duplicates.\n. That is because Final Term itself installs an ls alias in order to inject semantic text menu code. Unfortunately, with the current setup there is no way around this conflict (except using a different name such as simply l for your own alias).\n. Not currently, but we might consider adding such a command in the future.\n. The first issue is a duplicate of https://github.com/p-e-w/finalterm/issues/52.\n. Could be a GPU driver issue. I'm afraid I do not have a better guess given the information available.\n. BTW, the weird edit note above is actually caused by BountySource... :smile:\n. > Apparantly, clutter is a toolkit built on cogl and has Vala bindings, so maybe migrate?\nNot possible, because Final Term heavily depends on Clutter-only features.\n. As for the \"Quake mode full screen\" part: No, that is currently not possible.\n. This looks like a duplicate of https://github.com/p-e-w/finalterm/issues/152; do you have the latest version of Final Term?\n. Will this still build with GTK+ <= 3.4?\n. https://github.com/black-screen/black-screen gained traction last week, fulfilling my prediction that an Electron-based terminal emulator would appear. Unfortunately, it seems that its VT100 emulation capabilities are at least as buggy as Final Term's \u2013 yes, implementing terminal emulation is that hard.\n. I'm not using any tags ATM because I'm not actually versioning yet. I consider Final Term to be in an unstable, pre-alpha state where everything can change at any time and I do not want to worry about semantic implications of version numbers at the moment.\nOnce basic, everyday functionality is ready, versioning will start and I'll switch from a \"push at will\" model to an actual release cycle.\nAt that point, pulling the version from tags would indeed be very cool :)\n. @TingPing: I don't see why it should either, but I can confirm that it does.\n. You seem to be using spaces for indentation. Please switch them to tabs.\n. There should be no space after the exclamation mark\n. Same here\n. Apart from these two lines, all the changes in this file seem to be style changes (indentation, blocks) and are thus unnecessary.\n. This change is unnecessary\n. There should be no indentation here\n. This change is unnecessary\n. Given that this loop breaks in the first iteration no matter what, the entire loop must be equivalent to\nPosix.waitpid(-1, null, Posix.WNOHANG);\nor am I missing something?\n. Thanks for cleaning up the code. This is the last instance left where there should be no space after the function name.\n. This means that the FinalTerm class cannot safely be instantiated multiple times any more, which while not critical is definitely a disadvantage.\n. Typo (p_r_ogress)\n. I agree. The tempfile definitely needs to go and be replaced with a completely in-memory solution (although it kindof already is on distros that mount /tmp as a tmpfs).\n. waitpid needs to be called whenever a child process exists, not only if it was killed. You can see this by the fact that simply closing tabs with the \"X\" button creates zombies again.\n. Also note the possibility of multiple child processes terminating simultaneously with only one SIGCHLD being sent as explained in the comment in the original code, though I haven't gotten this to work either.\n. As small as the possibility may be: This still does not guarantee that the right widget is closed (e.g. if the file sync is slow for some reason).\n. Of course, this timeout leaves the issue I described: Close a widget with the \"X\", then quickly press Ctrl+D on another one \u2013 the SIGCHLD from both will fall within the close_in_progress window, and the second widget will be left open :disappointed_relieved:. I don't think it will be possible to eliminate such issues while keeping timeouts anywhere.\n. Yes, I did see that issue, unfortunately (as well as other weirdnesses where tabs suddenly closed, or did not close, or the wrong tab was closed). I assume these issues are all triggered by this timing problem.\n. It would be nice if this if block header followed the style of the one below. Also note http://stackoverflow.com/questions/669452/is-preferable-over-in-bash-scripts, though it shouldn't matter much here.\n. I prefer variable names that can be immediately understood without deciphering abbreviations. How about first_line instead, with the initial value being true?\nAlso, that being said, can't the two if blocks actually be merged to create a much more concise and elegant termlet? Currently, we're checking whether we are in the header line in two different places using two different methods.\n. This is a good optimization, with zero undesirable side effects. It seems to me that all the commented lines above are unrelated and unnecessary though. Could you please remove them?\n. This line seems to do nothing.\n. Interesting idea. I like it!\n. Is it ever possible that \"PID\" stands at the beginning of the line, or is preceded by a tab rather than space? If yes, this could fail...\n. I believe bash will actually recognize IFS='\\n' directly\n. I have tested this extensively and noticed a speedup of at least a factor of 20. Great stuff!\n. This should probably be commented again as it slows some large terminal programs to a crawl.\n. These two lines should not be necessary for the code to work (follow the move_cursor -> line_added -> on_output_line_added path). Did you encounter problems without them?\n. Same here. This should be taken care of automatically. If it isn't, there is a bug.\n. While I cannot reproduce that problem, I occasionally see similar issues, which seem to be caused by https://github.com/p-e-w/finalterm/blob/master/src/Terminal.vala#L109, a piece of code that sometimes does not work the way it should according to the GLib API docs.\nIn any case, I'm afraid that calling add_line_views, or any other TerminalView method here is not what we want at all because it breaks the otherwise fairly clean MVC separation. We should fix the scrolling problem separately but this is not a viable workaround.\nI'll try to dig a bit deeper and maybe fix it entirely so I can merge a clean version of this PR.\n. Great! If you need any pointers, just drop me a line.\n. This should be indented; also, str or text would be a more idiomatic identifier than var IMO\n. Do not remove that blank line; two blank lines are used to separate sections\n. This is much cleaner than the previous solution; great stuff!\n. If Settings.get_default().shell_path returns an invalid shell, we will proceed with that invalid shell from this point anyway. Instead, this should somehow \"hardcode\" bash so we have a true fallback.\n. Note that autoload is not enabled by default in bash.\n. This also should be get_parent().remove(menu_button) I believe.\n. This line is unnecessary if the above change is made and should be removed.\n. There should be no blank line here.\n. Note that I tried to solve a similar problem below (using menu_button.has_pointer) but found that hack to not work reliably when doing things like drag-click, click-drag, touch events etc.. Have you tested that it works in these situations?\n. > There is also another case that should be handled separately, namely when the cursor leaves entering the auto complete window. In that case menu button remains regardless of the event, as the leave event is not triggered. Do you think enter event of the auto complete window would be a proper place to handle this?\nWhat exactly needs to be handled in this case? Isn't the behavior already as expected (i.e. the button does not disappear)?\n. Yep, that's what I meant.\n. Ah, now I understand, and agree completely: The button should of course disappear when the pointer moves to the autocomplete window.\n. Did you have the chance to revisit this? Meanwhile, I've made some changes to the way scrolling works, maybe that improved the situation already. Even if that should not be the case and those lines are indeed necessary, I'd probably still like to merge your PR since it fixes many problems with terminal programs.\n. I understand. Thank you anyway for your contribution and good luck in your new job!\n. \"collapsible\" is the preferred spelling according to Google and the rest of the code.\n. It seems problematic that the button is still created as a toggle in this case, as if the user toggles it, the code below (line 147) will show a \"collapsed\" arrow once the line turns into a prompt line. It should not be possible to toggle the \"circle\" button.\n. Indeed, there should be no need to handle both cases here, because the conversion from circle to arrow button is one way only and should always result in an untoggled button, i.e. a \"down\" arrow.\n. Actually, I just realized there is no easy way to check whether we are converting or just updating... except perhaps through the label, but that is slightly ugly.\n. Agreed.\n. These two lines are now actually obsolete and should be removed as they simply set the defaults for a new Mx.Button.\n. This might set us up for a tiny chance of a null pointer error in the future as output_line is set on construction only through a pretty tangled path (on_settings_changed). It's probably better to use original_output_line.\nAlso, we don't need a default here (in fact, I'm surprised that even compiles).\n. I like this solution a lot! There are two changes I would like to see before I merge:\n1. Please adapt the code style to what is used elsewhere (space after if, curly braces around blocks)\n2. IMO, if last_command is null, command_executed should never be invoked, so the invocation should be moved into the first part of the if clause.\n. Unnecessary blank lines (there should be only one on top and none on bottom).\n. Doubled semicolons\n. Spacing issues\n. Spacing issues\n. Here also. In general, please use a space after if.\n. Rather than running get_selected_command and relying on the hovering to select the item before we can click on it, this should retrieve the command to run based on index.\nActually, I don't think we should have hover-highlighting at all (most autocompletion systems don't).\n. I'm not entirely sure what the expected behavior really is here. Maybe on a simple click, the system should actually just put the command in the prompt without executing it.\n. > I can't find any reference to double click event in Clutter. Is there one?\nThat's a very good question. I spent quite a while looking, and indeed I found that the Clutter.ButtonEvent object that you receive in the signal has a click_count property that counts the number of clicks in that \"click sequence\", so checking whether this is >= 2 should do the trick.\nHowever, the docs have something weird to say about this: \"The clicks do not have to occur on the same actor: providing they occur within the double click distance and time, they are counted as part of the same click sequence.\"\nStill, this is obviously intended to provide double-click support so we should probably just use it.\n. I also agree with @arkocal's proposal: Single click should copy the command into the prompt, double click should run it, and right/middle/etc. clicks should do nothing.\n. This is the weirdest construct I have ever seen in Vala. I am completely unfamiliar with such syntax. How does this compile?!? Can you enlighten me?\nIt's not a method (no parentheses, unless the ones around selected_text are somehow counted), it's not a property (no get/set blocks), so what is it?\n. There is still an extra space after the operator here\n. Why do these lines have to be commented? The \"Shift+Insert\" shortcut works on my system even with these lines enabled \u2013 it's the \"Ctrl+Shift+V\" shortcut I can't get to work.\n. The problem here is that if any text is selected, clicking a \"copy to clipboard\" entry in a semantic text menu (e.g. for an IP address) will copy the selection rather than the text menu caption, which is not what the user expects. A separate COPY_SELECTION_TO_CLIPBOARD command is probably needed.\n. on_text_container_motion_event should also make use of this utility method to avoid code duplication.\n. ",
    "nerzhul": "I think you must turn this feature off and let the user choose via option menu :)\n. I approve @Almehdi i use zsh every time and unfortunately i cannot use this very good terminal emulator with ZSH because the cursor is at the begin of the line, not after the prompt :s\n. This problem is also present when we do a SSH session on a server with zsh :(\n. Maybe you must change your terminal approach because of variety of shells ?\n. @mjacobus very hard whereas there is an option to change finalterm default shell into dconf (which doesn't work)\n. CTRL+C must send a SIGTERM to launched process\n. Confirmed, i have also Archlinux + Gnome 3.8.3  and the same problem\n. ",
    "sajithdilshan": "copy paste keyboard shortcuts doesn't work and no right click menu for copy past :(\n. Using tabs is a good idea. Pantheon-terminal already has tabs and it's much intuitive than having to open several windows of finalterm.\n. ",
    "dealancer": "confirm\n. ",
    "pyluyten": "@p-e-w Do you think a \"default selection fallback\" for un-supported output unlike 'ls'? Or some selection regardless of the command?\n. ",
    "ieee8023": "+1\n. ",
    "MarkRijckenberg": "I would like this feature too.\n. I am also impacted by this issue (issue #121). The alsamixer application is not working correctly, another ncurses based application.\n. Yes, there is an approximately 5 second gap between entering  ls -lart in finalterm and getting the output in some cases... \n. ",
    "m4tm4t": ":+1: \n. ",
    "simonbcn": "IMHO, this bug is so urgent and important to solve it as soon as possible. \n. > how to select copy and paste? i'm not able.\nActually it doesn't exist the copy&paste function.\n. ",
    "spupuz": "how to select copy and paste? i'm not able.\n. ",
    "sergiolepore": ":+1: \n. ",
    "mdrmike": "+1 ...  edit:  totally missed your comment in the thread above... until now it wasn't clear to me if this was planned to be fixed or what the issues were.\n. I would like to see the details related to bounties added to the finalterm homepage.  Both the policy and the HOWTO add/contribute to a bounty would be helpful.\nHad I not run accross this issue today due to the copy & paste issue, I would not have realized you went to the trouble to set this up -- months ago.  I think it would help the project if it were more obvious. Some people are limited by time, skillset, etc -- bountiysource provides them an alternative method of giving back.  Also, I commend you on the thoughtful comment explaining your posiiton -- and I think it's clear you're hoping to find more contributors to help.  \nHowever, as a side note @p-e-w, I'd also suggest you modify the wording (of the third item, above) that allows for the possibility you may change your position on collecting bounties in the future.  Whether or not you ever derive income from this project is separate from the project remaining open source; in which case it remains true to the values under which it was released.\n. hmm, should I have just made the edits to the README and suggestion as a pull request?\n. ",
    "didli": "+1 for copy/paste\nI wanted to use finalterm as my main term, but i guess it's too soon. But now i'm curious, is there really any way to achieve something similar at the moment ? \n. ",
    "cgtx": "Please also implement a \"middle click\" paste.  That is one of my favorite features of Linux, it would be a shame for finalterm not to support it.\n. ",
    "karakk": "What's the status on this feature?  If copy-paste worked and some performance issues were solved finalterm would be usable. Now when i run 1 command i get 60% load on cpu. Its a pitty because it really is different from other terminal emulators.\n. Great to hear that, you started an innovative piece of software you\nshouldn't abandon it halfway. Will check out the git repo when there is\nan update.\nOn 08/11/2014 04:20 PM, efouladi wrote:\n\nI started working on this and I'll update you here when it's fixed\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/p-e-w/finalterm/issues/7#issuecomment-51778400\n. \n",
    "JishnuChatterjee": "This is disappointing...:(\ncopy paste is a very basic functionality and a very essential functionality without it every other eye-candies that you introduce will go to waste. \n. ",
    "efouladi": "I started working on this and I'll update you here when it's fixed\n. ",
    "nashley": "@p-e-w I sent you an email regarding this issue (I would like to fix it, but I don't want my work to be negated by scheduled changes without knowing what they entail). Did you receive it?\n. @janpansa That's because I'm still working on the code (sorry, I'd like to work on it more, but I've been really busy). You can certainly use my fork for now if you wish, but you should realize that features may not be fully implemented or (more) bugs may appear.\nAs for when I expect to be done, I'd like to work on this project more starting next week, but I'm not positive that I'll have everything done by the end of the week.\n. @p-e-w Are you sure that this isn't the issue?\nSadly, I tried escaping the non-displayable characters in final_term_control_sequence (a function which can be found in data/Startup/bash_startup.in), and it had no effect.\n. @maiklos @p-e-w I can (maybe?) reproduce. However, finalterm closes altogether due to a segmentation fault; but the link still opens (albeit in a different browser than I would expect).\nI'm on gentoo using the ebuild from sunrise btw.\n$ md5sum /usr/bin/finalterm \nb0d2b1a7ab01686965a056c80cbbb2f4  /usr/bin/finalterm\n. I've made branch for this: https://github.com/Vreality/finalterm/tree/escape_files_with_quotes\nIf you can find any bugs that I missed, I'd be happy to fix them; otherwise, I'll go ahead and submit a PR.\n. Error output would be helpful. If you can post them as text instead of an image, that would be even better.\nOn October 19, 2014 10:22:45 AM EDT, Markus Padourek notifications@github.com wrote:\n\n@cstrahan Just tried again on my Mac and I am getting the following\nerror:\n\nIf I set allowBroken to true it starts to install but throws errors\ntowards the end. I can post the error-messages if it helps any.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/p-e-w/finalterm/issues/269#issuecomment-59651273\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. What does this look like in practice? Menu bar integration? Key bindings?\nOr do you just want to expand upon the tabbing and split window features\nalready in place?\nOn Mon, Mar 23, 2015, 12:31 AM Christopher Chavez notifications@github.com\nwrote:\n\nI don't mean to spam, but the iTerm2 project for OS X is an example that\nhas this sort of tmux integration feature; although it doesn't ditch tmux,\nrather it takes advantage of it in a way optimized for GUI (it still\nrequires logging into ssh and running tmux -CC though). Due to the\ncurrent license (GPLv2), I'm not sure if FT can reuse its implementation\nright away.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/issues/308#issuecomment-84802276.\n. @p-e-w Perhaps only run the necessary changes in .bashrc if the current terminal is finalterm. This could be accomplished by interacting with the window manager -- could it not?\n. @p-e-w Oh, I had assumed that it was a very fast animation. I wonder why F12 works why F10 does not? I'll look into the difference between the two and see if I can find a solution.\n\n@ferki Yes, I am using awesomewm.\n. @p-e-w I tried using gnibbles, a gnome game that uses clutter, and I was unable to replicate the bug. I've never noticed it when using any other programs, so I'm beginning to think that it's strictly a finalterm bug.\n. @ferki Thank you for pointing that out. I tried to make sure that I was not making a duplicate bug report, but I seemed to have overlooked that report.\nI'll close this issue and try to patch #112 instead.\n. @lwandrebeck I'm running the latest version from git, but I am no longer able to reproduce the issue. Instead of a large PID, it may have been special characters in the output that were throwing finalterm off...?\nIf I can reproduce it again, I will be sure to take a full log of all the output so that I can identify the cause.\n@ferki That's a good idea, and it may have been the cause of this issue.\n. @MineSQL I'm able to reproduce with Openbox (3.10.32-gentoo).\nScreenshots for proof:\n\n\n. This is not yet compatible with set_command(), so I closed the PR until it is.\n. @p-e-w By \"already escaped\" do you mean filenames such as \\'test? I'm using the latest commit (ea68d4706c187f49b0dca6a61761e2971a214c16), and I can't even get the semantic menu to recognize the file (on another note, the \\t in \\test is converted into a tab when displayed in finalterm; try touch \\\\test && ls). \nHowever, this method should work correctly if the menu recognized the name.\n\\'test turns into '\\'\\''test', which is correctly interpreted by bash as \\'test.\nWhat am I missing here?\n. @p-e-w Sweet! My name, which I've now added to my profile, is \"Nick Ashley.\" I'm glad that I can be a part of this project, and I'd like to help solve more bugs when possible.\n. This is a duplicate of #230, so I'm closing it.\n. While I can confirm this problem, it does not occur if it is run via gdb.\n. Related?\n. The only difference I see is that there is an extra new-line when using the clear command instead of ctrl+L. The prompt seems to be the same height for me.\nCan you elaborate?\n. IIRC, bash is the only officially supported shell at this time.\nAlso, I'm still not seeing the difference between ctrl+L and clear (sorry).\nOn September 4, 2014 7:03:51 AM EDT, Depado notifications@github.com wrote:\n\nMaybe it's because of Fish Shell.\nTried again, here is a gif for you to see.\nhttp://im.ezgif.com/tmp/video_to_gif_1409828453_f6379e99eb.webm.gif\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/p-e-w/finalterm/issues/349#issuecomment-54453314\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. I can't reproduce this with a fresh install of debian (with gnome3). Does this not happen consistently?\nI can try using your exact setup (i.e., Ubuntu 13.10 and gnome 3), but I suspect that it might be on your end.\nI just broke my debian virtual machine by trying to upgrade to testing anyway, so I don't mind trying all that much.\n. @p-e-w It should be good to go now.\n@Carnassial I squashed three commits down to a single commit. You can read about how this is done here.\nEssentially, I ran the following commands:\n$ git stash to stash my local, uncommitted changes so that I can remove them for now but save them to work on later.\n$ git checkout master to select the master branch, where this bug was fixed (usually, you should use a separate branch; that was a mistake on my part)\n$ git rebase --interactive HEAD~2 to rebase the last commits (the commands should be self-explanatory; you basically just pick which commits to keep and which to merge with previous commits by editing a file)\n$ git push -f this should usually be avoided as it will mess up the commit history (thus a separate branch is normally used), but it's alright since no one forked my fork after these commits were made. Essentially, it will forcibly remove the three commits and replace them with this one, squashed commit.\n. Unfortunately, I just tested this, and I was able to reproduce the bug again\u2014even with this change applied. Could someone test this out to make sure that I'm not crazy? I remember this fix working previously, but it does not seem to be working for me anymore.\nScreenshots below:\n\n\n. @Carnassial Could you clone this again into a separate, temporary directory and build it again? I just cloned it again, and I can reproduce the bug.\n. @Carnassial do you use bash on both your laptop and desktop? I'm not sure if it's an issue, but it could be (see the comment by @lwandrebeck  on #26).\n. @Carnassial I went back to your fork and checked out what I had previously though to be a working commit, but I sadly can't reproduce the fix. I thought that I had checked it myself, but I'm now not sure if I did; I wonder what's different on your laptop.\n. @Carnassial did you run ./finalterm (as opposed to just finalterm) beforehand? I don't think that installing it should make a difference.\n. @Carnassial Sorry for doubting you again :sweat_smile:\nThat definitely fixes it, and I think it'd be safe to merge the commit now.\nThis brings up another topic though: is relying on system files for basic things such as termlets a good idea? It makes sense for binary packages, but not necessarily for portable solutions or when the program is compiled from source but not actually installed on the system.\n. I agree, the documentation is lacking. As for where the files are that you need to edit, check out /usr/share/finalterm/ for the system configuration files (if you installed finalterm); e.g., edit /usr/share/finalterm/KeyBindings/default.ftkeys to modify the keybindings or edit /usr/share/finalterm/ColorSchemes/default.ftcolors to change the default color scheme.\nIf you are compiling from source, you can edit the same files in finalterm_directory/data before compiling and then installing them with sudo make install\nOne of the things in my \"todo\" list is to improve the settings menu and make it more clear as to where these files are located.\n. Could you provide some more information? What errors are displayed? Do you have all the dependencies installed?\nOn November 5, 2014 3:08:44 PM EST, Deekshith Allamaneni notifications@github.com wrote:\n\nI have built finalterm from source and it is crashing always. I could\nnever type a character till now. As soon as I press the keyboard, it\ncrashes on me. Please fix this or let me know if there is any\nworkaround. Thanks.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/p-e-w/finalterm/issues/378\n\n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n. Should the Ubuntu package be changed to depend on libcogl20 instead?\nOn Thu, Nov 6, 2014 at 4:14 AM, Deekshith Allamaneni \nnotifications@github.com wrote:\n\n@p-e-w https://github.com/p-e-w I am on vanilla Ubuntu 14.10 and using\ndefault drivers. It does not show any additional drivers for my hardware.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/issues/378#issuecomment-61947210.\n. Duplicate of #52.\n. @Eugene-msc I'm actually already working on clipboard functionality in my spare time, and I do have a paste system implemented. I've also added the ability to copy the current text input, but selecting multiple lines of text is the problem.\nHowever, I think your code is much cleaner anyway. :sweat_smile: \nHere's the branch if you want to look at it.\n. I can also reproduce.\nIt appears as though it hangs just before the bash prompt is displayed.\n. @Paluszkiewicz I believe that's also a duplicate of another bug report.\n\nOn Tue, Nov 18, 2014, 14:43 Mateusz Paluszkiewicz notifications@github.com\nwrote:\n\nSo i dont make again new issuse...\nIs new problem.\n[image: screenshot from 2014-11-18 21 42 26]\nhttps://cloud.githubusercontent.com/assets/2192274/5094702/78727794-6f63-11e4-9ee6-be8db730401f.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/issues/391#issuecomment-63532008.\n. Is it even possible to run finalterm without X? I don't think it'll work natively on anything else (e.g., DirectFB).\n. @johnjelinek You can change the keybindings with the data/KeyBindings/default.ftkeys file.\n. Can you give an example of this?\nIf I understand you correctly, zsh already does thus (albeit\nnon-graphically) with common programs, but FT only officially supports bash\nat the moment.\n\nOn Mon, Mar 2, 2015, 15:30 Jackie notifications@github.com wrote:\n\nThe FR in the title is to mean Feature Request XD\nAnyways, ever since I discovered the location of the commands.ftcompletion\nfile I've been toying with it and with an idea of what could be done that\nis similar... Custom Command Completions! Basically, allow the end user to\ncreate a file with the following syntax:\n{  \"text\" : \"CMDONE\"; \"COMMANDONE\" },\n{  \"text\" : \"CMDTWO\"; \"COMMANDTWO\" }\nOr something similar at least...\nwhere, basically, it allows you to define a series of custom shortcuts\nthat will appear in the same way as the command history, but works as\ncompletions for longer commands, similar to the way some text editors work\n(refering to sublime text here, as it's pretty much the only editor I have\nexperience with XD ). But if this is doable, it would be pretty awesome.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/issues/406.\n. Ok. Now I understand you better. That should be very possible.\n\nOn Mon, Mar 2, 2015 at 4:32 PM, Jackie notifications@github.com wrote:\n\nwell, for example, say you type this into the terminal... sai ... there\ncould be two options for that, a) a dropdown thing similar to the command\nhistory completion, or b) simply press tab... either method should expand\nthat command to sudo apt-get install and allow you to continue typing the\nrest of the command.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/issues/406#issuecomment-76829844.\n. finalterm-reborn looks promising (so long as development is maintained).\n. \n",
    "arkocal": "I think this (Vreality's latest releated commit) should be kept as a feature after implementing normal copying with selection, as this is the most common use of copying from a terminal.\n. Adding an empty container as large as the window could provide a solution. Even though this is kind of a hack, it also allows the user to scroll the current prompt to the top (like clear / Ctrl L), which lacks in other terminal emulators. I would like to have this at least as an option.\n. Autocomplete gets unacceptably slow after many commands are given, especially when typing frequent phrases like sudo foo. It also blocks rendering. \n. Just sent a pull request about this one.\n. Even though there should not be an arrow, I think there should be another icon, because most of the commands have an output and this makes the user think there is always going to be one when a new command is given. It is also easier to look for icons on the left than skim for new command lines in the text output, so I think the arrows should be replaced with a shape that does not rotate ( minus, square or circle for example) when there is no output.\n. This should work fine now. I have realized that the older commit sometimes did not work because click event and leave event are triggered in different orders, hence the check. Tabs should also be OK, I had just forgotten to set my editor to tabs instead of spaces.\n. I was actually thinking of fixing that, but because there is no direct connection between the autocomplete and terminalview classes, I could not find a clean solution to that. You can very well merge this, the autocomplete issue actually another issue. I can not squash these commits because they are online, should I squash them into main and make another pull request?\n. I hope it is good now :)\n. Luckly I had a recent system backup. I have checked for the named issues, compiled and retested because I was not quite sure if that was the latest version. Seems good to me, I wonder what I am missing this time :smile:\n. Now there is only one public variable left, which I think is ok :smile: \n. Seems like this is not a GUI issue (at least not caused by anything GUI related).  Moving the cursor over the dot also creates the popup with the last error code. I guess this is related  to lines 391 and 396 in TerminalOutput.vala\nlast_command = stream_element.get_text_parameter(0, \"\");\nvar return_code = stream_element.get_numeric_parameter(0, 0);\nBoth return the correct values for latest executed command. \n. That is a much cleaner solution indeed :+1: . I forgot about get_commad. I am keeping this branch on my local anyway, in case we need to run this check for any other line than the last one. \nBtw. this was why I asked whether you are assigning the issues :smile: . \n. Do you mean the line 322? I had kept it thinking making it not visible was also used elsewhere in code, but I can not find any such case, apart from line 228, which is now removed (so is line 322). (ps. removing 321 obviously prevents menu_button from appearing)\n. Partly, it works when doing drag-clicks and click-drags (both result in a disappearing button). I can not test touch event because  I do not have a touch screen and do not know how to simulate them (I don't think it is complicated) , and more importantly, I am not quite sure about the expected behavior on multitouch events.\nThere is also another case that should be handled separately, namely when the cursor leaves entering the auto complete window. In that case menu button remains regardless of the event, as the leave event is not triggered.  Do you think enter event of the auto complete window would be a proper place to handle this?\n. The button does not disappear, but I do not think this should be expected behavior. (I am not talking about the buttons menu, but autocomplete that appears while typing, which is irrelevant to the menu and should be handled like the other leave events.\nEven if you think moving the cursor over auto complete window should not make the button disappear, there is still work to do, because the button also remains when the cursor follows the path Button -> AutoComplete -> anywhere else, even when the button is not clicked. This is a corner case but I think it is better to solve it completely.\n. We could leave out the first part ( |> ) because the label is updated while toggling, but I do not think this makes the code more readable, as we need the if anyway. Without the else part it is a little unclear why only one case is handled. \n. I think right click should either provide a menu or do nothing at all. Single click should copy the command in the prompt, double click should run the command. I quite sure about the double click though. Mouse usage is not supposed to be fast anyway.\n. ",
    "janpansa": "Hi, I love finalterm, just want to know if there is some sort of an eta on the copy paste issue. I would like to paste code from the clipboard. It looks like it is being implemented in this commit https://github.com/nashley/finalterm/commit/2f27f949d4ce6b596047123dc4a99057c6121ffe however I dont see it in the latest build.\n. @nashley Thanks for the feedback ! that's great news.\n. ",
    "Eugene-msc": "I have a working normal select and copy, and beginnings of column select implementation here. \nAlthough I'm a bit stumped as to how to make column select work properly. \n. Is it just a wrapping issue (#52)?\nWhen you press up and the command in history is sufficiently long cursor positioning error happens. At least that's the way I was able to reproduce the error.\n. Same thing here with Awesome wm.\n. Like this i think\ngit branch zsh\ngit checkout zsh\ngit pull https://github.com/detiber/finalterm zsh2\n. Oops sorry\n. I can reproduce it.\n. This is a duplicate of #112\n. I feel that left click should do the same as pressing enter. \nAnd when someone is using mouse his right hand is on the mouse and not on the keyboard, so to execute a command after click he'll have to move it to the enter button.\nBut maybe we can put the command in prompt on right click.\n. I can't find any reference to double click event in Clutter. Is there one?\nIf there is not, it should be implemented for the whole of finalterm not just autocomplete, because it will be needed in other cases (text selection by words, for example).\n. ",
    "gaveen": "Sorry, for the delay. I can confirm it works after 'sudo ldconfig'. Kind of feeling silly now because I didn't run it in the first place. :)\nAlso, maybe it's better to create a symlink instead of copying to /lib/libkeybinder-3.0.so.0\n. ",
    "ghost": "Also I'd like to see something similar to the multi-window ability of Terminator\n. @p-e-w Does \"all major shells\" include fish?\n. Yes.  Running the debian.sh script will generate a deb file suitable for Ubuntu.  Sadly I'm not a Debian or Ubuntu maintainer, but I can create a PPA which will make installation easy on Ubuntu.\nHaving working deb files is probably the best way to get software out to the biggest percentage of Linux users.  Although it looks like this project is still at an early stage I think it has potential (pending bug fixes and multi-window capability) to become the standard terminal application on many distros.\n. If you have a Launchpad account then you can create your own PPAs.  I have some instructions on uploading to PPAs here http://robotics.uk.to/wiki/How_to_create_an_Ubuntu_PPA\n. I'll maybe have a go at that, since it is possible to link a Launchpad project to Github.\n@Lasall There are some remaining Lintian warnings still to be fixed.\n. On notifications and the messaging menu in Ubuntu Unity I know that this has changed since 12.10 and all the documentation available about those things on the Ubuntu web site is out of date.  A bug was recently created for that, but at present the current Unity API remains either undocumented or poorly/misleadingly documented.\nhttps://bugs.launchpad.net/ubuntudeveloperportal/+bug/1178700\n. Ok, that must be an ommission.  Any binary files sould be listed in debian/source/include-binaries\n. To create the package the directory has to be called finalterm-x.xx, not finalterm_x.xx\n. The directory name format isn't my choosing, it's the Debian standard.\n. If you need a PPA I can create one.  I could also have a go at using Open Build Service to create install for multiple distros.\n. Sorry, that would be \"works\". And no it doesn't work after all, my bad.\nYes it's a duplicate of #10 sorry, will look harder next time.\n. Did you guys have to do anything special to get it to compile?\n. It's probably because the debian changelog has a header for precise. I havn't attempted to make new packages for finalterm on 14.04 but when I get time I'll try it.\n. I think it's mine.\n. Although I did have a Final Term PPA at one time it looks like I'm not the owner of this one.  The signing key isn't mine.\nhttps://launchpad.net/~finalterm/+archive/ubuntu/daily\n. It looks like the last package maintainer was Philipp Emanuel Weidmann pew@worldwidemann.com\nHowever, if I get time I can recreate the PPA and build a package for Ubuntu 14.04\n. What's the current Final Term version number?\n. If there's no official version I'll call it 0.2, since the last version in the PPA is 0.1\n. And then, as if by magic...\nhttps://launchpad.net/~fuzzgun/+archive/ubuntu/finalterm/+packages\n. I don't know if there is continuous integration on Lanchpad (there might be), but if there isn't it wouldn't be too hard to set up a cron job to pull the latest code once per day or per week and then update the PPA.\n. Real continuous integration would be a rebuild after every new commit. Doing a daily build is not quite continuous integration, but probably close enough for practical purposes.\n. As i said, it may well be specific to my machine, though i noticed problem and decided to file the issue for further consultation. It happens occasionally, not always. Also as mentioned, i tried various desktop environments on that instance and it may well be something is messed up on my side, i agree.\nAnd yet no other application ever caused this kind of behaviour and i'm 100% it is related to finalterm.\nIt may be issue of libs compatibility or such - i will try to investigate matter further.\n. (im not sure if this is proper way to reply, but isse is closed and i want\nsomething related to this)\nWell, im not complaining. It's just i noticed such thing and wanted to\nprovide some feedback since i admire Your project. I'd like to contribute\neven though for lack of time and vala know-how i do not see how could it\nhappen in foreseeable future.\nYou've surely got some better developers though, and im anxious to see v\n1.0 :)\nGodspeed!\n2014-09-10 19:37 GMT+02:00 Philipp Emanuel Weidmann \nnotifications@github.com:\n\nClosed #353 https://github.com/p-e-w/finalterm/issues/353.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/issues/353#event-163771106.\n. \n",
    "0xAX": "+1\n. ",
    "psyonara": "This would clinch the deal for me. I rely on having about 5-10 terminals open permanently, and having as many windows open doesn't work for me. Still sticking to Guake for the time being, but only for that reason.\n. ",
    "azmeuk": "In my case that would be a key feature.\n. ",
    "keithlayne": "Many terminal emulators I've used support tabs, but very few seem to allow splitting arbitrarily like emacs or vim.  I see tabs as a crucial feature, but please keep window splitting on the table.  I have 12 terminals in 3 tabs that I use constantly, and 6-12 more in three more tabs that I use frequently.  I also like the ability to split off a new short-lived term quickly to do something without having to switch tabs.  iTerm does this well, and is IMO a decent example to follow.\n. The good news is that I can build and install finalterm on OS X.  I just spent a few evenings getting to that point after coming across this thread.  However, I can't run it yet, so I will need some help to finish this.\nThe best news IMO is that I did not have to alter a single line of the source to get this far.  Hopefully, instead of a Mac port of finalterm, all we will need is a reliable build process.  I'm using homebrew to do all this, and here's what I've done so far:\n1. Create a homebrew formula for mx and keybinder-3.0.  These build and compile, and seem pretty straightforward, but they are definitely not tested by me.  Any ideas on how to do so easily and reliably are welcome.\n2. Use gnulib to wrap the only portability problem I found -- valac creates a C file that includes pty.h, which doesn't exist on Mac.  This would need to go in the repo.  Gnulib is intimately tied to autotools, so I created an external project in cmake that will be built only on Mac, and installs the generated pty.h into an include directory in the build dir.  I verified that this doesn't effect the Linux build at all.\n3. Just figured out what I think was the last thing keeping it from running--the schema was symlinked, and cmake reports 'Compiling GSettings schemas', but I just needed to actually do the compile step.  I will add that to the homebrew formula I guess.\nSo, the status has changed since I started writing all this.  Now it actually runs and opens a window.  2, actually.  There's clearly some work to be done, but it's a start:\n\nMore to come.\n. Getting these libs to build and install in homebrew is trivial.  The problem is that I don't think they are properly configured, and we need some decent test programs for mx and keybinder to make sure they are actually working.  Judging from what finalterm looks like after a homebrew install, I'm not too encouraged that I've built them right.  I'm also on vacation with my family this week, so I don't have a lot of time right now to look into it.  I may have time this evening to fork homebrew and at least give you guys access to what I've done so far.\nA better solution (for homebrew) would be to get gnulib working properly and then integrated into the build so the finalterm source tree doesn't have to include all that cruft.  There may be other packages out there that depend on patches to fix similar issues.  A patch isn't really viable in this case because the offending code is part of the C generated from the Vala sources, and I think patching the cmake file to patch a generated source file in the middle of the build on Mac sounds plain crazy.\nAnother issue is how good an idea building finalterm with homebrew is to begin with.  It created something tangible in this thread quickly, but I don't know that it's the right answer.  The native Gtk-OSX stuff might be better for hacking.  If the homebrew build actually worked (and it may yet) it would be a good means for Mac users to test, but unless I'm missing something, there's a lot of environment magic that happens while building a homebrew formula.  Actually recreating that environment for hacking is at least a pain in the butt.\n@Trevoke - thanks for the offer and enthusiasm.  I think maybe when I fork we can all collaborate over the crappy stuff I wrote, and then someone can submit the pull requests upstream.  However, they are not ready for prime time, and certainly don't meet the acceptance criteria at this point.\nAnd to all you Gtk/mx/keybinder/Vala gurus, some simple tests/apps/whatever using these libs would be a great contribution to this effort.  I'm also not all that confident in the gtk3, clutter, Vala tooling, etc. on Mac.  I know pretty much nothing, and haven't had time to look into this stuff, but I'm kind of a badass, so I'm willing to give it a shot, time permitting :)\n. @Globegitter - I just pulled master from upstream and rebased my branch off of it (which really did nothing, my branch is I think disjoint from the rest of the code base).  I don't have the time or interest to work on this right now.  The little bit that I did however could serve as the starting point for some motivated person to get this done.\n. Yeah, that's pretty much not going to happen.\nThe sum of my work was probably a few hours about a year ago.  I came into it cold with no real knowledge of anything I was working with, and got it to build.  I left some notes here and left my fork up for somebody to work off of, but I can't commit any more time to this.\nBottom line, if you read my comments above, I'm pretty sure you'll be more qualified than me at that point to put in some tickets or start some work.  I'm completely useless on this topic right now, but I wish you all the best of luck with it. \n. @lymanlai - this is not particularly useful, it's just a X11 error message.  You need to provide some minimal amount of context for this to get any traction.\n. ",
    "cknoerle": "Having the power of terminator's split grouping and keyboard broadcasting would make finalterm THE choice for replacing terminator for me. Please consider implementing this!\n. ",
    "snitko": "Any info as to when this might possibly be implemented?\n. ",
    "tom95": "@p-e-w I think you could benefit from a more abstract build system. I recommend cmake, there are a couple of helpful modules for it. If you generally like the idea of having cmake, I could make another pull request for it tomorrow. If you've never seen it before, here's an example from another project http://bazaar.launchpad.net/~gala-dev/gala/trunk/view/head:/CMakeLists.txt\n. 1. Yep, you can still do that. It will be even faster now, because it won't recompile everything every time now. Only exception is when you change something that is installed globally, that'd apply to the settings scheme or the startup script for example.\n2. For portability, if I'm not entirely mistaken, if on a system is Gtk+-3.0, there'll also be gsettings. GSettings is provided by GLib. With this kind of desktop files per user config may place a challenge, but maybe you can find a way to work around that.\n3. I only compiled it on Raring so far. Unless libkeybinder-3.0 is not available on Quantal or you're using some very new clutter methods, it should work fine there as well.\n4. Sorry, no idea. I'm Ubuntu only and here it works fine :)\nGlad you like it so far!\nFor your P.S., it's actually the first time that I use git, so if I'm required to do something, it'd be great if you could paste the appropriate commands ;)\n. Would you mind me fixing more stuff in this branch, unrelated to cmake? For example I found the cause of the endless \"queueing a relayout is not recommended\" warnings, and I'd also like to get rid of all the warnings at compile time, because this mass of output sometimes makes it hard to spot the error amongst the warnings, which makes the compilation fail. If not I'll just wait till the branch's merged and make a new pull request for those :)\n. I guess you haven't made pkg-config aware of the package. You can check that by running \"pkg-config --list-all | grep keybinder\". It should show keybinder-3.0 then.\nThe file responsible for that is found at /usr/lib/x86_64-linux-gnu/pkgconfig/keybinder-3.0.pc for me, not sure where that'd be on fedora. Maybe you got to copy that one manually as well :/\nFor the changes, you could either wait for me to come back home in around 10 hours from now or change them yourself when merging if you don't feel like waiting, I agree with all your remarks :)\n. @varemenos it will run the same way Gedit or basically any other Gtk app would run on Kde.\n. Installing libkeybinder-3.0, renaming the vapi to keybinder-3.0.vapi and changing keybinder to keybinder-3.0 in the Makefile made it compile for me on 13.04.\n. @p-e-w @reiben @Almehdi are you sure you got all the commits I added later applied? I think I fixed that particular problem after some trouble with the termlets.\n. @p-e-w so @Almehdi is apparently using master and not my cmake branch. At least that commit is from master.\n. I fixed those typos now.\nI definitely agree on those unnecessary try-catch-clauses, but it seems as if the only way to ignore an error without getting warnings is to put try{stuff();}catch(Error e){}. I highly prefer cluttering the code in four or five places over cluttering the compile output every time, but the choice is yours which you prefer. Feel free to remove those clauses you deem superfluous if you merge.\n. Thanks a lot :)\n. @p-e-w That runtime error is actually your fault as far as I can tell :P \nhttps://github.com/p-e-w/finalterm/commit/c298f568d9f200747de5fdd6859877d68b0c5a53#L2R62\nYou moved this above the registering of the theme, so theme is null.\n. What do you mean, you fixed the libgee problem? Did you solve it in the code or is that still to be done?\nDoes \"pkg-config --list-all | grep notify\" say anything useful?\n. Great, thanks for merging :)\n. There are a couple of things you could do.\nFirst, it sometimes helps to just remove one's build directory and recreate it. Sometimes there are some things not correctly reconfigured.\nNext \"pkg-config --cflags unity\" will tell you which flags will be passed to gcc. You can look for the -I/usr/include/unity... one and check if the unity.h is actually to be found there.\nIf it still doesn't work, you could look around other libunity dev packages. I'm not entirely sure how they depend on each other, but there are a number of different ones which could make sense.\n. Alternatively the actor.x_expand could be replaced with \"(layout_manager as Clutter.BoxLayout).set_expand(actor, true);\", which is deprecated, but also works with older Vala/Clutter.\n. @stiks more precisely that'd be replacing line 56 in src/LineView.vala with \"(layout_manager as Clutter.BoxLayout).set_expand(text_container, true);\"\n. @jrabbit Not entirely sure about this, but could you try adding \"(layout_manager as Clutter.BoxLayout).set_fill(text_container, true, false);\" right below the previous line.\n. @p-e-w I now fixed most of the issues. The only one missing should be the one with the settings. Awaiting your decision for this.\nNot sure if the rebase was successful, it asked me to merge my own branch when pushing.\n. I'd prefer having everything in a centralized settings class. It makes things easier in my opinion, as you don't have to care about any formalities, you just have to access the settings class when you need something from it.\nBtw, it may make sense to soon split the source files in subdirectories like src/Widgets/, src/Services/ or src/Backend/. It will make the source a lot easier to understand. Additionally, introducing namespaces for each of those sections would make sense. But I'd leave that to you, you have a lot better overview of all the classes.\n. So I leave things as they are right now? Or anything left for me to do?\nI'd also suggest to use this kind of static settings instead of making each property static http://bazaar.launchpad.net/~gala-dev/gala/trunk/view/head:/src/Settings.vala\nso having a static get_default() method.\n. I haven't found any mistakes looking over it.\nBut I think since commit 59f05e97f53e73a2e0cf881cc6391c335932e31b I no longer get the autocompletion dropdown nor the arrow at the side allowing me to collapse lines.\n. More or less. It's a standard Ubuntu 13.04 with the Pantheon desktop installed.\n. Sorry, should've checked in more detail before reporting, I actually just had to make install :/ Now everything's fine.\n. I actually just know how to use cmake for building stuff, I've never written a module myself :) If it fixes the absolute paths, that'd be great, because diffs usually look horrible with those.\n. ",
    "paneu": "Similar to the -I flags for the c compiler, you have to add the appropriate flags for the linker as well, i.e. '-Xcc=-lmx-2.0' (lower-case L)\n. Yes.\n. ",
    "vivaeltopo": "Okay it works now. Problem for me was that neither keybinder3 nor libmx were found by pkg-config. After fixing that it worked.\nAnd no, nothing has to be added. ;)\nI can also recommend the cmake pull request #20 since it makes everything much easier. \n. ",
    "ajaypanyala": "The pull request #14 worked perfectly. Thanks.\n. Thanks for clarifying. Looking forward to the upcoming features/improvements.\n. ",
    "benpicco": "I also have to\nsudo mv /usr/share/vala/vapi/keybinder.vapi /usr/share/vala/vapi/keybinder-3.0.vapi\non Ubuntu 13.04, otherwise I get\nerror: Package `keybinder-3.0' not found in specified Vala API directories or GObject-Introspection GIR directories\n. ",
    "blasphemy": "Hi, this patch allows finalterm to build for me on arch linux.\nConfigure works fine:\ndaniel@rarity ~/work/finalterm (git)-[ef2479d...] % cmake .      \n-- The C compiler identification is GNU 4.8.0\n-- The CXX compiler identification is GNU 4.8.0\n-- Check for working C compiler: /usr/bin/cc\n-- Check for working C compiler: /usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working CXX compiler: /usr/bin/c++\n-- Check for working CXX compiler: /usr/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Found PkgConfig: /usr/bin/pkg-config (found version \"0.28\") \n-- checking for modules 'clutter-gtk-1.0;mx-1.0;gee-0.8;keybinder-3.0'\n--   found clutter-gtk-1.0, version 1.4.4\n--   found mx-1.0, version 1.4.6\n--   found gee-0.8, version 0.10.1\n--   found keybinder-3.0, version 0.3.0\n-- Found Vala: /usr/bin/valac  \n-- checking for a minimum Vala version of 0.16.0\n--   found Vala, version 0.20.1\n-- GSettings schemas will be installed locally.\n-- GSettings shemas will be compiled.\n-- GSettings schemas will be installed into /usr/local/share/glib-2.0/schemas/\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/daniel/work/finalterm\nAnd it builds fine (ignoring numerous warnings that are extremely common with vala projects), but I get a couple of linker errors.\nLinking C executable finalterm\n/usr/bin/ld: warning: libcogl-pango.so.0, needed by /usr/lib/gcc/x86_64-unknown-linux-gnu/4.8.0/../../../../lib/libmx-1.0.so, not found (try using -rpath or -rpath-link)\n/usr/bin/ld: warning: libcogl.so.9, needed by /usr/lib/gcc/x86_64-unknown-linux-gnu/4.8.0/../../../../lib/libmx-1.0.so, not found (try using -rpath or -rpath-link)\nEdit: seems both libraries are available on my system, they just don't have the soname it's complaining about\ndaniel@rarity ~/work/finalterm (git)-[ef2479d...] % whereis libcogl-pango\nlibcogl-pango: /usr/lib/libcogl-pango.so\ndaniel@rarity ~/work/finalterm (git)-[ef2479d...] % whereis libcogl\nlibcogl: /usr/lib/libcogl.so\n. ",
    "varemenos": "\nI'm not sure I like the move to GSettings for one of the config files separately. I have been really impressed by the way Sublime Text 2 handles configurations, everything is a text file (though JSON in that case), everything is in one folder, can be shared, copied, deleted... Also, there is no dependency on GSettings, which might matter for portability reasons.\n\nWith the current setup, will it work on other desktop enviroments other than Gnome? for example, KDE. If not, then I'd go for the .json file for the settings.\nMaybe, there should be another bug filed where there can be further discussion about this.\n. Once I have something ready, I will do a pull request (which will include a preview of some sort, probably 1-2 images of each theme I guess).\n. Quake-style mode would make this terminal epic!\n. ",
    "nisshh": "No worries, ill try again then.\n. @tomb95 Tried exactly what you just said, no luck, same result. I have just realised though that i am running 12.04, i have libkeybinder0 but the libkeybinder3.0-0 package was added in 12.10, i bet this is why it works for @tomb95 and not me /cc @p-e-w \n. ",
    "shellkr": "I can reproduce this on Arch so would not believe it is something you have missed.\n. I am using from commit 67d874d which is the latest.. \n. I can reproduce this and of two out of ten times it seg fault but sometimes it works.. sometimes I get the menu and can select an option without it seg faulting.\n. I think I have found a more reliable way to reproduce this. If I do 'ls' and then move the cursor over the menus and then outside of the window the seg fault happen.\n\n* Message: TerminalOutput.vala:350: Partially supported control sequence: '\\u001b]0;daniel@revoltism:~\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n* Message: TerminalOutput.vala:269: Command mode entered\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n* Message: Terminal.vala:109: Command updated: ''\n** Message: Terminal.vala:109: Command updated: ''\n* (finalterm:22436): WARNING *: TerminalOutput.vala:265: Command start control sequence received while already in command mode\nzsh: segmentation fault (core dumped)  finalterm\n. No, I start Final Term from my terminal which run Zsh to get output of the errors. So that is why you see 'zsh'.. it is not related to the seg fault.\n\nIf I don't use ls and don't have menus it will not seg fault.. but if I do ls and then move my mouse over the menus and then outside of the window a couple of times the seg fault happens.\n. No, I haven't had time today.. Will report if it still exist after I done so.\n. Did just try c2aff8f and I still experience this..\n. More info might be needed here.. I am also on Arch using Gnome 3.8.1 and have no problems opening menus. I have an ATI graphic card and use the open radeon driver.\n. I would think most will not want to remap but use Ctrl+C as normal.. me however have always mapped it to copy and Ctrl+Shift+C to SIGINT. As I copy more than I need to stop a process.. and it is nice to have consistency over applications. Gnome-terminal actually does that automatically when you map copy to Ctrl+C. \n. ",
    "redskates": "I'm experienceing this too on Arch Gnome Shell 3.8.1 & Ubuntu 13.04. But I have many aliases using ls and various grouped switches. The screen clearing but too. But...\nActually I didn't really want to comment on any bugs, I wanted to say fabulous work! This is very promising! Please keep up the great work!! Thank you!\nRed\nPS: Oh, and if I actually have any useful info on the known bugs I will post them. I'm just very excited about your project ;)\n. ",
    "super-nathan": "frankly was trying to build this until I saw no ZSH, \n:(\n. ",
    "tsdh": "What is finalterm concerned about what shell it's running?  The output of commands is the same in every shell, or does it interact more with the shell than parsing the output of known commands?\nIMHO, if it was possible, I'd welcome if it just runs whatever SHELL the user has set.  Feel free to state explicitly that it might break with everything except bash, but I'd still be able to run my beloved, highly configured ZSH.\n. Ah, ok, I've just seen that no feature making finalterm innovative works when I start a zsh manually.  Do you have some pointers/docs on what's needed to make it work with other shells?\n. ",
    "masnormen": "Still waiting 'till the Final Term is fully stable! I can't wait for the Final Term with Zsh support! :D\n. ",
    "brodock": "+1\n. here is the log: https://launchpadlibrarian.net/162323515/buildlog_ubuntu-saucy-amd64.finalterm_0.1-0~100~ubuntu13.10.1_FAILEDTOBUILD.txt.gz\n. ",
    "Cosmicist": "+1! I just tried finalterm and zsh + finalterm would make for a hell of a nerdgasm :P\n. ",
    "StuntsPT": "Just to add my +1 to have zsh support in finalterm. =-)\n. ",
    "Malsasa": "+1 zsh support after Finalterm with bash was stable. \n. ",
    "aboutaaron": ":thumbsup: I also would love finalterm with ZSH support.\n. ",
    "NelsonBrandao": ":+1: \n. ",
    "gamesbrainiac": "+1 This would be a highly appreciated feature\n. ",
    "LightGuard": ":+1: \n. ",
    "qwc": ":+1: bump\nFinalTerm looks nice, feels nice, but is not usable with zsh for time being. At least with my configuration (includes oh-my-zsh). \n. ",
    "mjacobus": "If you open a normal teminal, attach it to temux and then open finalterm, and attach to that same session you will have zshell inside finalterm.\n. ",
    "detiber": "I've started to take a crack at adding zsh support here: https://github.com/detiber/finalterm/tree/zsh\nSo far I'm able to load finalterm using zsh as the shell, but the context menus aren't currently working properly (nor is wget progress). Any comments/suggestions are greatly appreciated.\nBootstrapping steps are here: https://github.com/detiber/finalterm/blob/zsh/README-ZSH.md\nI've also started a copr build (for fedora/centos/rhel users) here: https://copr.fedoraproject.org/coprs/jdetiber/finalterm-zsh/\n. @lwandrebeck indeed, I didn't get a chance to dig into the Termlets too much (other than calling out to them using zsh, and updating them to autoload functions if $ZSH_VERSION is set).  \nWhen I get some more time to hack on it I'll work on implimenting them in a zsh compatible way.  I was mostly happy to have abstracted out the bashisms that were preventing zsh from even loading as the default shell.\nI submitted a https://github.com/p-e-w/finalterm/pull/355 to help solicit better feedback on the changes I've made so far.\n. ls termlet is working as expected, ps termlet is now working as well.\nwget termlet updates the status bar when download is initiated and when progress updates, but not when download is cancelled/finished.\nhistory completion is not working at this time as well.\n. another major oddity right now is that the prompt is inheriting from the shell finalterm is launched from currently and not updating properly.\n. Improved shell handling a bit, now attempt to consume $SHELL from environment and if supported, then use it otherwise fall back to the default value in Settings.get_default().shell_path\n. I'm thinking there has got to be a better way to run configure_file on multiple files with cmake, but at least for the time being I'm defaulting to brute forcing it for the Termlet processing.  I realized that different platforms might have different paths for the shells, so we should at least try to detect the shell path and set the #!'s appropriately.\n. I was able to fix up the issue with the wget termlet, but it introduced a crash when hitting  at the prompt:\n* (finalterm:20996): ERROR *: Highlight regex compilation error: Error while optimizing regular expression \u27a4 \n\u25b6\u25b6\u25b6 01:59.36 Wed Sep 17 2014 \\xe2: internal error: opcode not recognized\nzsh: trace trap (core dumped)  finalterm\nhaven't had a chance to see if it is related to my zsh config or if it is a general issue yet.\n. actually, looking at the full output, it looks like my prompt is being interpreted by finalterm, will need to find a way to filter that out:\n```\njdetiber@localhost:~\u27a4 finalterm\n Message: TerminalOutput.vala:386: Command mode entered\n Message: Command updated: ''\n Message: Command updated: '\\xa4 \n'\n Message: Command updated: '\\xa4 \n\\xe2'\n Message: Command updated: '\\xa4 \n\\xe2'\n Message: Command updated: '\\xa4 \n\\xe2\\x96'\n Message: Command updated: '\\xa4 \n\\xe2\\x96'\n Message: Command updated: '\\xa4 \n\u25b6'\n...snip...\n Message: Command updated: '\\xa4 \n\u25b6\u25b6\u25b6 02:04.56 Wed Sep 17 2014 \u25c0\u25c0\u25c0                                              \njdetiber@localhost:~'\n Message: Command updated: '\\xa4 \n\u25b6\u25b6\u25b6 02:04.56 Wed Sep 17 2014 \u25c0\u25c0\u25c0                                              \njdetiber@localhost:~\\xe2'\n (finalterm:22741): ERROR : Highlight regex compilation error: Error while optimizing regular expression \\xa4 \n\u25b6\u25b6\u25b6 02:04.56 Wed Sep 17 2014 \u25c0\u25c0\u25c0                                              \njdetiber@localhost:~\\xe2: internal error: opcode not recognized\nzsh: trace trap (core dumped)  finalterm\n\u25b6\u25b6\u25b6 02:04.57 Wed Sep 17 2014 \u25c6 Exit Code: 133 \u25c0\u25c0\u25c0                                                                  \njdetiber@localhost:~\u27a4 \n```\n. It is indeed.  But this type of prompt manipulation is common with zsh. I suspect it may just be a matter of escaping the prompt text somehow, but I haven't had a chance to dig into it yet.\n. updated to address feedback.\n. Indeed, that is why the test for $ZSH_VERSION, though thinking about it a bit, it might make sense to create zsh wrappers that do the autoloading and then source the bash scripts instead.\n. true, I'll add logic to force bash if Settings.get_default().shell_path is not a valid shell.  Thinking about it, I should also test to make sure that the shell referenced by $SHELL or shell_path actually exists as well.\n. ",
    "lwandrebeck": "Termlets are bash-centric (start with #!/bin/bash), that may explain why it doesn\u2019t work.\nWe\u2019d need to split them shell by shell to use their own internals for speed, imho.\nSee #338 :)\n. segfault here too, latest git (plus a couple patches) : ea68d4706c187f49b0dca6a61761e2971a214c16\n(see my repo for changes, nothing related, though)\n(gdb) run\nStarting program: /home/lwandrebeck/projets/finalterm/finalterm \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib64/libthread_db.so.1\".\n[New Thread 0x7ffff12cf700 (LWP 5610)]\n[New Thread 0x7fffe9c26700 (LWP 5611)]\n[New Thread 0x7fffe9425700 (LWP 5612)]\nDetaching after fork from child process 5613.\n* (finalterm:5606): WARNING *: Unrecognized control sequence: '\\u001b]133;A\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_UNKNOWN)\n* (finalterm:5606): WARNING *: Unsupported control sequence: '\\u001b[?1034h' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_DEC_PRIVATE_MODE_SET)\n* (finalterm:5606): WARNING *: Unrecognized control sequence: '\\u001b]133;B\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_UNKNOWN)\n[New Thread 0x7fffe886e700 (LWP 5780)]\nDetaching after fork from child process 5781.\nProgram received signal SIGSEGV, Segmentation fault.\n0x000000000041a5b8 in ___lambda21_ (signal=17) at /home/lwandrebeck/projets/finalterm/src/Terminal.vala:232\n232                         this_terminal.command_channel.shutdown(false);\nMissing separate debuginfos, use: debuginfo-install GConf2-3.2.6-7.fc20.x86_64 libbluray-0.6.1-1.fc20.x86_64 pixman-0.30.0-5.fc20.x86_64\n(gdb) \n(process:5782): GLib-CRITICAL **: g_slice_set_config: assertion 'sys_page_size == 0' failed\n(gdb) bt\n0  0x000000000041a5b8 in ___lambda21_ (signal=17) at /home/lwandrebeck/projets/finalterm/src/Terminal.vala:232\n1  0x000000000041a7b3 in _lambda21sighandlert (signal=17) at /home/lwandrebeck/projets/finalterm/src/Terminal.vala:219\n2  0x0000003bb8435cb0 in  () at /lib64/libc.so.6\n3  0x0000003bb84bc5e9 in __libc_waitpid (pid=pid@entry=5781, stat_loc=stat_loc@entry=0x7fffffffc328, options=options@entry=0)\nat ../sysdeps/unix/sysv/linux/waitpid.c:40\n\n4  0x00000036ec08e924 in fork_exec_with_pipes (intermediate_child=intermediate_child@entry=1, working_directory=0x0, argv=0xf0b400, envp=envp@entry=0xefacb0, close_descriptors=close_descriptors@entry=1, search_path=search_path@entry=1, search_path_from_envp=search_path_from_envp@entry=0, stdout_to_null=stdout_to_null@entry=0, stderr_to_null=stderr_to_null@entry=0, child_inherits_stdin=child_inherits_stdin@entry=0, file_and_argv_zero=file_and_argv_zero@entry=0, cloexec_pipes=cloexec_pipes@entry=0, child_setup=child_setup@entry=0x31402987c0 , user_data=user_data@entry=0x7fffffffc570, child_pid=child_pid@entry=0x7fffffffc564, standard_input=standard_input@entry=0x0, standard_output=standard_output@entry=0x0, standard_error=standard_error@entry=0x0, error=error@entry=0x7fffffffc8f8) at gspawn.c:1467\n5  0x00000036ec08f706 in g_spawn_async_with_pipes (working_directory=, argv=, envp=envp@entry=0xefacb0, flags=flags@entry=G_SPAWN_SEARCH_PATH, child_setup=child_setup@entry=0x31402987c0 , user_data=user_data@entry=0x7fffffffc570, child_pid=child_pid@entry=0x7fffffffc564, standard_input=standard_input@entry=0x0, standard_output=standard_output@entry=0x0, standard_error=standard_error@entry=0x0, error=error@entry=0x7fffffffc8f8) at gspawn.c:661\n6  0x00000036ec08f80c in g_spawn_async (working_directory=, argv=, envp=envp@entry=0xefacb0, flags=flags@entry=G_SPAWN_SEARCH_PATH, child_setup=child_setup@entry=0x31402987c0 , user_data=user_data@entry=0x7fffffffc570, child_pid=child_pid@entry=0x7fffffffc564, error=error@entry=0x7fffffffc8f8) at gspawn.c:146\n7  0x000000314029ae3c in g_desktop_app_info_launch_uris_with_spawn (info=info@entry=0xebc910 [GDesktopAppInfo], session_bus=session_bus@entry=0x721030 [GDBusConnection], exec_line=0xf00080 \"firefox %u\", uris=0x0,\nuris@entry=0x7fffffffc830 = {...}, launch_context=launch_context@entry=0x0, spawn_flags=spawn_flags@entry=G_SPAWN_SEARCH_PATH, user_setup=user_setup@entry=0x0, user_setup_data=user_setup_data@entry=0x0, pid_callback=pid_callback@entry=0x0, pid_callback_data=pid_callback_data@entry=0x0, error=error@entry=0x7fffffffc8f8) at gdesktopappinfo.c:2661\n\n8  0x000000314029bc50 in g_desktop_app_info_launch_uris_internal (appinfo=, uris=0x7fffffffc830 = {...}, launch_context=0x0, spawn_flags=spawn_flags@entry=G_SPAWN_SEARCH_PATH, user_setup=user_setup@entry=0x0, user_setup_data=user_setup_data@entry=0x0, pid_callback=pid_callback@entry=0x0, pid_callback_data=pid_callback_data@entry=0x0, error=0x7fffffffc8f8) at gdesktopappinfo.c:2830\n9  0x000000314029bd1a in g_desktop_app_info_launch_uris (appinfo=, uris=, launch_context=, error=) at gdesktopappinfo.c:2853\n10 0x0000003140235592 in g_app_info_launch_default_for_uri (uri=0xee2770 \"http://www.google.com\", launch_context=0x0, error=0x7fffffffc8f8)\nat gappinfo.c:717\n\n11 0x00000000004163dd in final_term_execute_command (self=0x7092c0 [FinalTerm], command=0xebaa70 [Command])\nat /home/lwandrebeck/projets/finalterm/src/FinalTerm.vala:379\n\n12 0x00000000004166b5 in _final_term_execute_command_command_command_execute_function (command=0xebaa70 [Command], self=0x7092c0)\nat /home/lwandrebeck/projets/finalterm/src/FinalTerm.vala:463\n\n13 0x000000000045f26a in command_execute (self=0xebaa70 [Command], placeholder_substitutes=0x0)\nat /home/lwandrebeck/projets/finalterm/src/Command.vala:89\n\n14 0x000000000045fbee in command_execute (self=0xaa0c70 [Command], placeholder_substitutes=0xd9fa50)\nat /home/lwandrebeck/projets/finalterm/src/Command.vala:118\n\n15 0x000000000045444d in _lambda10 (data9=0x7bde00) at /home/lwandrebeck/projets/finalterm/src/TextMenu.vala:81\n16 0x00000000004544c4 in _lambda10__gtk_menu_item_activate (_sender=0xa98c60 [GtkMenuItem], self=0x7bde00)\nat /home/lwandrebeck/projets/finalterm/src/TextMenu.vala:77\n\n20 0x00000036ec82ab3f in  (instance=instance@entry=0xa98c60, signal_id=, detail=detail@entry=0) at gsignal.c:3365\n#17 0x00000036ec810458 in g_closure_invoke (closure=0xaa1760, return_value=return_value@entry=0x0, n_param_values=1, param_values=param_values@entry=0x7fffffffd410, invocation_hint=invocation_hint@entry=0x7fffffffd3b0) at gclosure.c:768\n#18 0x00000036ec8227fd in signal_emit_unlocked_R (node=node@entry=0x6b45b0, detail=detail@entry=0, instance=instance@entry=0xa98c60, emission_return=emission_return@entry=0x0, instance_and_params=instance_and_params@entry=0x7fffffffd410) at gsignal.c:3553\n#19 0x00000036ec82a881 in g_signal_emit_valist (instance=<optimized out>, signal_id=<optimized out>, detail=<optimized out>, var_args=var_args@entry=0x7fffffffd590) at gsignal.c:3309\n\n21 0x000000301fb50cbc in gtk_widget_activate (widget=widget@entry=0xa98c60 [GtkMenuItem]) at gtkwidget.c:7742\n22 0x000000301fa25a06 in gtk_menu_shell_activate_item (menu_shell=menu_shell@entry=0xa62a80 [GtkMenu], menu_item=menu_item@entry=0xa98c60 [GtkMenuItem], force_deactivate=force_deactivate@entry=1) at gtkmenushell.c:1380\n23 0x000000301fa25dd3 in gtk_menu_shell_button_release (widget=, event=) at gtkmenushell.c:792\n24 0x000000301fa04e8e in _gtk_marshal_BOOLEAN__BOXEDv (closure=0x6a8b90, return_value=0x7fffffffd860, instance=, args=, marshal_data=, n_params=, param_types=0x6a8bc0) at gtkmarshalers.c:130\n25 0x00000036ec810687 in _g_closure_invoke_va (closure=closure@entry=0x6a8b90, return_value=return_value@entry=0x7fffffffd860, instance=instance@entry=0xa62a80, args=args@entry=0x7fffffffd960, n_params=1, param_types=0x6a8bc0) at gclosure.c:831\n26 0x00000036ec829ee7 in g_signal_emit_valist (instance=0xa62a80, signal_id=, detail=0, var_args=var_args@entry=0x7fffffffd960)\nat gsignal.c:3218\n\n27 0x00000036ec82ab3f in g_signal_emit (instance=instance@entry=0xa62a80, signal_id=, detail=detail@entry=0) at gsignal.c:3365\n28 0x000000301fb51d2c in gtk_widget_event_internal (widget=0xa62a80 [GtkMenu], event=0xe3a550) at gtkwidget.c:7709\n29 0x000000301fa026fc in propagate_event (topmost=, event=, widget=0xa62a80 [GtkMenu]) at gtkmain.c:2421\n30 0x000000301fa026fc in propagate_event (widget=, event=0xe3a550, captured=, topmost=0x0) at gtkmain.c:2529\n31 0x000000301fa0427d in gtk_main_do_event (event=0xe3a550) at gtkmain.c:1750\n32 0x000000301f452d12 in gdk_event_source_dispatch (source=, callback=, user_data=)\nat gdkeventsource.c:364\n\n33 0x00000036ec0499fa in g_main_context_dispatch (context=0x6ce5e0) at gmain.c:3064\n34 0x00000036ec0499fa in g_main_context_dispatch (context=context@entry=0x6ce5e0) at gmain.c:3663\n35 0x00000036ec049d48 in g_main_context_iterate (context=context@entry=0x6ce5e0, block=block@entry=1, dispatch=dispatch@entry=1, self=) at gmain.c:3734\n36 0x00000036ec049dfc in g_main_context_iteration (context=0x6ce5e0, context@entry=0x0, may_block=may_block@entry=1) at gmain.c:3795\n37 0x00000031402ac2f4 in g_application_run (application=0x7092c0 [FinalTerm], argc=1, argv=0x7fffffffe278) at gapplication.c:2219\n38 0x0000000000417ec4 in final_term_main (args=0x7fffffffe278, args_length1=1) at /home/lwandrebeck/projets/finalterm/src/FinalTerm.vala:472\n39 0x0000000000417f87 in main (argc=1, argv=0x7fffffffe278) at /home/lwandrebeck/projets/finalterm/src/FinalTerm.vala:389\n. yw :)\nDon\u2019t be too excited, I\u2019ve just begun to dig into VT500\u2026and it\u2019s an awful mess ! I\u2019m severely at loss for now with the parser\u2026I\u2019m wondering if it shouldn\u2019t be rewritten, anyway, not the place to discuss about it. I\u2019m always connected to irc, we may discuss it there ?\n. No real idea for now, but maybe using function pointers to speed up things a bit. Don\u2019t even know if that\u2019s possible in vala (I\u2019m a beginner with it).\nI definitely need to eat it all before being clearer about it. And have to understand a bit VT protocol too, never toyed with it :)\nThat\u2019s definitely a quite long term goal\u2026\n. @binarykitchen : Come on, if you would have searched for it less than ten seconds, you\u2019d have find that: http://blog.finalterm.org/2013/06/we-ppa.html which contains about everything you\u2019re searching for.\n. Indeed it is missing. Did you contact the package maintainer about it ?\nDevs ( @p-e-w and al.) are not responsible for package maintenance. As far as I know, to be fair.\n. No real version number yet, as there\u2019s no official release :)\nI\u2019ve seen in rpm package a 0.1 + git revision.\n. Although I can see .bashrc being accessed to via strace (tested as user and root, selinux doesn\u2019t seem to be the culprit either, nothing particuliar denied in audit.log) :\n[root@netbook-home-net ~]# cat finalterm.strace | grep \".bashrc\"\n11137 faccessat(AT_FDCWD, \"/root/.bashrc\", R_OK) = 0\n11137 open(\"/root/.bashrc\", O_RDONLY)   = 3\n11137 read(3, \"# .bashrc\\n\\n# User specific alias\"..., 176) = 176\n11137 stat(\"/etc/bashrc\", {st_mode=S_IFREG|0644, st_size=2815, ...}) = 0\n11137 open(\"/etc/bashrc\", O_RDONLY)     = 3\n11137 read(3, \"# /etc/bashrc\\n\\n# System wide fun\"..., 2815) = 2815\nWithout sourcing .bashrc into finalterm by hand, its values aren\u2019t taken into account.\nErrors seen in term launching finalterm where I typed:\nwhich ls\n. .bashrc\nwhich ls\n* (finalterm:12087): WARNING : Unsupported control sequence: '\\u001b[?1034h' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_DEC_PRIVATE_MODE_SET)\n* Message: Partially supported control sequence: '\\u001b]0;lwandrebeck@netbook-home-net:~\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n* (finalterm:12087): WARNING : Unsupported control sequence: '\\u001b]7;file://netbook-home-net/home/lwandrebeck\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n* Message: Partially supported control sequence: '\\u001b]0;lwandrebeck@netbook-home-net:~\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n* (finalterm:12087): WARNING *: Unsupported control sequence: '\\u001b]7;file://netbook-home-net/home/lwandrebeck\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n* (finalterm:12087): WARNING *: TerminalOutput.vala:383: Command start control sequence received while already in command mode\nI\u2019ve taken a (quick) look at sources, but have no idea about why it doesn\u2019t work as expected right now.\nHope this helps to track things down a bit.\n. I think I found the problem. In bash_startup, we have at the end:\n # Set up termlet aliases\npushd \"@PKGDATADIR@/Termlets\" > /dev/null\nfor filename in *; do\n    alias $filename=\"run_termlet '$filename'\"\ndone\npopd > /dev/null\nin @PKGDATADIR@/Termlets we have 3 files: ls, ps, wget.\nHaving defined a whatever var in .bashrc, whatever is defined in finalterm, thus .bashrc is correctly read.\nbut bash_startup overrides ls, ps and wget due to the previously cited code.\n. .bashrc is being read. thus, ls becomes say \"ls --color=auto\" via an alias.\nThen, alias is redefined \u00ab only \u00bb as \"termlet ls\" so we lose --color=auto.\nHope it\u2019s clearer.\nNow, the point is, if we do keep previously defined values, it may well mess up the termlet\u2026\nSo the best way is probably to forgot these values, but users may be at loss.\n. That would be an easy fix. But, I think most if not all distros have an alias for ls, so everyone would lose termlet for it.\nChecked Fedora 20 and CentOS 6. By default, ls is aliased (--color=auto), ps and wget are not.\nSo, that could do the trick. Now we just need to ensure termlet is bug free ;)\n. Will do, let me dive into git, will come back to you :)\n. Creating branches so PR are cleaner. Closing this one\u2026\n. Hmmmmmm. I\u2019m definitely wondering how that can happen with latest git. PIDs with 1\u00a0to 5 digits gets correctly formatted here (having up to 29k pids).\nAre you running an older version ?\nAnyway, ps el gets final term stuck, use 100% cpu and gives no output. bash -x output:\n[lwandrebeck@netbook-home-net ~]$ ps el\n- IFS=\n- read -r line\n- ps el\nworks fine under gnome-terminal. Trying to debug it\u2026\n. According to http://ppa.launchpad.net/finalterm/daily/ubuntu/dists/\ntrusty is not (yet ?) supported. Ask the ppa maintainer ?\nMeanwhile, you can try to build your own package, or build from git.\nHTH.\n. Not at home right now. Will take a look at it asap.\nLe 20 ao\u00fbt 2014 20:15, \"Philipp Emanuel Weidmann\" notifications@github.com\na \u00e9crit :\n\nThis breaks command autocompletion on my system, with \"Unrecognized\ncontrol sequence\" error messages. Not sure yet what exactly the issue is.\nbash string manipulation is quite tricky...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/pull/339#issuecomment-52818517.\n. OK, I\u2019ll rename the var. I\u2019ll take a look at merging tests too.\nI\u2019m for now stuck with \u00ab ps e \u00bb which gets final term stuck. I\u2019d bet that VARS=bla causes mess, but have yet to find why and where. Of course, the ps termlet executed (echo\u2019d line being modified) in gnome-terminal runs fine, and I don\u2019t get a single line.\nOf course, it runs fine under gdb. catching on the fly a running and stuck final term with gdb gives:\n0x00000036ec077c7c in g_utf8_strlen (\n    p=0x2a470d0 \"0;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:.tar=01;31:.tgz=01;31:.arc=01;31:.arj=01;31:.taz=01;31:.lha=01;31:.lzh=01;31:.lzma=01;31:.tlz=01;31:.txz=01;31:.tzo=01;31:.t7z=0\", max=-1) at gutf8.c:234\n234           p = g_utf8_next_char (p);\n(gdb) bt\n\n0  0x00000036ec077c7c in g_utf8_strlen (p=0x2a470d0 \"0;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:.tar=01;31:.tgz=01;31:.arc=01;31:.arj=01;31:.taz=01;31:.lha=01;31:.lzh=01;31:.lzma=01;31:.tlz=01;31:.txz=01;31:.tzo=01;31:.t7z=0\", max=-1) at gutf8.c:234\n1  0x000000000042a164 in terminal_output_text_element_explode (self=0x295beb0 [TerminalOutputTextElement])\nat /home/lwandrebeck/projets/finalterm/src/TerminalOutput.vala:927\n\n2  0x00000000004272c4 in terminal_output_output_line_explode (self=0x29e71a0 [TerminalOutputOutputLine])\nat /home/lwandrebeck/projets/finalterm/src/TerminalOutput.vala:768\n\n3  0x00000000004340f3 in terminal_output_view_render_terminal_cursor (self=0x26f9bc0 [TerminalOutputView])\nat /home/lwandrebeck/projets/finalterm/src/TerminalView.vala:349\n\n4  0x0000000000433a42 in terminal_output_view_render_terminal_output (self=0x26f9bc0 [TerminalOutputView])\nat /home/lwandrebeck/projets/finalterm/src/TerminalView.vala:330\n\n5  0x0000000000418fb3 in _terminal_output_view_render_terminal_output_utilities_schedule_function (self=0x26f9bc0)\nat /home/lwandrebeck/projets/finalterm/src/Terminal.vala:118\n\n6  0x0000000000450065 in __lambda6_ (data7=0x21eb2e0) at /home/lwandrebeck/projets/finalterm/src/Utilities.vala:213\nand then gdb segfaults\u2026\nTrying to dig\u2026\n. Opened an issue for \"ps e\" case. See https://github.com/p-e-w/finalterm/issues/342 .\nHave rewritten ps termlet. It\u2019s now even faster (and more commented) than the first changes, runs in under half a second :)\nHope coding style will be fine with you.\nHave tried several examples, without finding any bugs.\nWhat do you think of it ?\n. OK, here we are (I hope) :\nCleaned up useless lines from previous local attempts.\nIFS stays as is. Using '\\n' breaks output.\nps j will display PPID before PID so we would \u00ab break \u00bb if we search only for 'PID' instead of ' PID'.\nPID is by default displayed without a leading space according to a quick look at procps sources. So I guess we may break at a very small uptime and no PID \u2265 1000 (can\u2019t test as my netbook is in the 31k range), but I think it\u2019s quite unlikely. So I\u2019d vote to keep it as is.\n. My pleasure p-e-w :)\n. Please see https://github.com/p-e-w/finalterm/issues/258\n. make; make clean; make ends with:\n[ 78%] Built target finalterm\nmake[2]: Circular data/finalterm.desktop.in <- data/finalterm.desktop.in dependency dropped.\n[ 82%] Generating ../data/finalterm.desktop.in\nError copying file (if different) from \"/home/lwandrebeck/projets/finalterm/po/../data/finalterm.desktop.in\" to \"/home/lwandrebeck/projets/finalterm/data/finalterm.desktop.in\".\nmake[2]: * [data/finalterm.desktop.in] Error 1\nmake[1]: * [po/CMakeFiles/translations.dir/all] Error 2\nmake: *** [all] Error 2\ncmake . after that gives:\nCMake Error at cmake/GSettings.cmake:31 (message):\n  Schema validation error: Failed to open file\n  '/home/lwandrebeck/projets/finalterm/data/org.gnome.finalterm.gschema.xml':\n  No such file or directory\nCall Stack (most recent call first):\n  CMakeLists.txt:92 (add_schema)\n. @ferki : do\u2019h, agreed. Closing that one.\n. No it is not.\nBut trusty packages are here: https://launchpad.net/%7Efuzzgun/+archive/ubuntu/finalterm/+packages as said in comment https://github.com/p-e-w/finalterm/issues/258#issuecomment-53265954\nDon\u2019t know how ubuntu manages package updates, so it may (or not) land into url you cited.\n. Hello pew !\nTrim function wasn't changed in #357.\nBest,\nLaurent.\nLe 23 sept. 2014 19:01, \"Philipp Emanuel Weidmann\" notifications@github.com\na \u00e9crit :\n\nIt seems that this idea was also part of #357\nhttps://github.com/p-e-w/finalterm/pull/357, which I just merged.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/pull/360#issuecomment-56553500.\n. Doh sorry missed it.\nCheers,\nLaurent.\nLe 23 sept. 2014 19:10, \"Philipp Emanuel Weidmann\" notifications@github.com\na \u00e9crit :\nYes it was:\nhttps://github.com/p-e-w/finalterm/pull/357/files#diff-adf4e100fdd82beec1acac666e9db93cL61\n.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/pull/360#issuecomment-56554835.\n. \n",
    "tuxayo": ":+1: That would be a killer combo\n. ",
    "Lasall": "I propose to close this bug because error output is incomplete and it's not reproducible.\n. This is an valac upstream issue because the generated C files by valac may contain unicode characters due to g_utf8_strup calls. Vala bugtracker is located at bugzilla.gnome.org.\nEDIT: Bug reported: #704468\n. Please perform a lintian check (with latest lintian) to make sure package has no common packaging issues.\n. @p-e-w : This package will only compile on Ubuntu because of the libunity dependency. I myself wanted to (and will) file an ITP bug (intention to package) for Debian (and propose a package to the archive) as soon the project will become more stable.\n. But not to the pixmaps directory.\n. Debian uses this directory. I wonder why it's working on Ubuntu though. But if it's really a problem only on Debian, it wouldn't be much effort to manually install the icon (with packaging helper files). gtk-update-icon-cache does not help either but it works ootb when I install the icon to the pixmaps directory. (I'm on KDE if this makes any difference.) (On Debian it's also recommended to use special Debian menu files...)\n. No, just drop it. This is only relevant for Debian menu files. The cause why I didn't saw the icon was because of /usr/local. /usr works just fine.\nThanks to wRar on #debian-mentors :) .\n. At least Anjuta does translate its name. For text menus: Perhaps you can separate identifier and the actual displayed string as \"label\" e.g..\n. I've looked at the text menu syntax and I it's possible to use gettext here without too big modifications. The difficulty is to get the gettext method called properly:\nIf you use the c-syntax in the text menu files xgettext can easily extract those strings (modify the cmake/Translation.cmake file accordingly):\nE.g. data/TextMenus/dirname.ftmenu:\nInformation (<tt><b>stat</b></tt>) = RUN_SHELL_COMMAND \"stat '$$$1$$$'\"\nto\n_(\"Information\") (<tt><b>stat</b></tt>) = RUN_SHELL_COMMAND \"stat '$$$1$$$'\"\nThen you have to manually extract those strings in the TextMenu parser with a regex like _\\(\".*\"\\) (I suggest to make it much more robust) and call each of them with the GLib.dgettext method. Then join everything together (replace _(...) parts of the original key string).\nPersonally I don't like the _() part in the .ftmenu files but I couldn't find any documentation to (1) mixup multiple (source) languages into one pot file and to (2) use a custom language format. The keyword or flag arguments might help though.\n. Here is the diff of what I've tested so far:\n``` diff\ndiff --git a/cmake/Translations.cmake b/cmake/Translations.cmake\nindex 3ed9a1a..8f82ba5 100644\n--- a/cmake/Translations.cmake\n+++ b/cmake/Translations.cmake\n@@ -21,7 +21,9 @@ macro(add_translations_catalog NLS_PACKAGE)\n     find_program (XGETTEXT_EXECUTABLE xgettext)\n\nset(C_SOURCE \"\")\nset(C_SOURCE)\nset(VALA_SOURCE)\n\nset(FTMENU_SOURCE)\nforeach(FILES_INPUT ${ARGN})\n     file (GLOB SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/${FILES_INPUT}/.c)\n@@ -29,13 +31,17 @@ macro(add_translations_catalog NLS_PACKAGE)\n         set(C_SOURCE ${C_SOURCE} ${C_FILE})\n     endforeach()\n     file (GLOB SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/${FILES_INPUT}/.vala)\n-        foreach(C_FILE ${SOURCE_FILES})\n-            set(C_SOURCE ${C_SOURCE} ${C_FILE})\n+        foreach(VALA_FILE ${SOURCE_FILES})\n+            list(APPEND VALA_SOURCE ${VALA_FILE})\n+        endforeach()\n+        file (GLOB SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/${FILES_INPUT}/*.ftmenu)\n+        foreach(FTMENU_FILE ${SOURCE_FILES})\n+            list(APPEND FTMENU_SOURCE ${FTMENU_FILE})\n     endforeach()\n endforeach()\nadd_custom_command (TARGET pot COMMAND\n     ${XGETTEXT_EXECUTABLE} -d ${NLS_PACKAGE} -o ${CMAKE_CURRENT_SOURCE_DIR}/${NLS_PACKAGE}.pot\n-        ${VALA_SOURCE} ${C_SOURCE} --keyword=\"\" --from-code=UTF-8 --language=C\n+        ${VALA_SOURCE} ${C_SOURCE} ${FTMENU_SOURCE} --keyword=\"\" --from-code=UTF-8 --language=C\n     )\n endmacro()\ndiff --git a/data/TextMenus/dirname.ftmenu b/data/TextMenus/dirname.ftmenu\nindex 16d8711..535db26 100644\n--- a/data/TextMenus/dirname.ftmenu\n+++ b/data/TextMenus/dirname.ftmenu\n@@ -3,24 +3,24 @@\n marker-type = code\n code        = 2\n\n\n-label = Dir\n+label = _(\"Dir\")\n color = 2\n[Menu]\n-Copy name to clipboard = COPY_TO_CLIPBOARD \"$$$1$$$\"\n+_(\"Copy name to clipboard\") = COPY_TO_CLIPBOARD \"$$$1$$$\"\n$$$SEPARATOR$$$ =\n-Information (stat) = RUN_SHELL_COMMAND \"stat '$$$1$$$'\"\n+_(\"Information\") (stat) = RUN_SHELL_COMMAND \"stat '$$$1$$$'\"\n$$$SEPARATOR$$$ =\n-Change to (cd) = RUN_SHELL_COMMAND \"cd '$$$1$$$'\"\n+_(\"Change to\") (cd) = RUN_SHELL_COMMAND \"cd '$$$1$$$'\"\n$$$SEPARATOR$$$ =\n-Move (mv)      = SET_SHELL_COMMAND \"mv '$$$1$$$'\"\n-Copy (cp -r)   = SET_SHELL_COMMAND \"cp -r '$$$1$$$'\"\n-Delete (rm -r) = SET_SHELL_COMMAND \"rm -r '$$$1$$$'\"\n+(\"Move\") (mv)      = SET_SHELL_COMMAND \"mv '$$$1$$$'\"\n+(\"Copy\") (cp -r)   = SET_SHELL_COMMAND \"cp -r '$$$1$$$'\"\n+_(\"Delete\") (rm -r) = SET_SHELL_COMMAND \"rm -r '$$$1$$$'\"\ndiff --git a/po/CMakeLists.txt b/po/CMakeLists.txt\nindex 9399f83..c489e4a 100644\n--- a/po/CMakeLists.txt\n+++ b/po/CMakeLists.txt\n@@ -2,4 +2,5 @@ include (Translations)\n add_translations_directory (\"finalterm\")\n add_translations_catalog (\"finalterm\"\n        \"../src\"\n+       \"../data/TextMenus\"\n )\ndiff --git a/po/finalterm.pot b/po/finalterm.pot\nindex bbb1fdd..ff00c1b 100644\n--- a/po/finalterm.pot\n+++ b/po/finalterm.pot\n@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: \\n\"\n-\"POT-Creation-Date: 2013-05-21 00:13+0200\\n\"\n+\"POT-Creation-Date: 2013-05-22 18:49+0200\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME EMAIL@ADDRESS\\n\"\n \"Language-Team: LANGUAGE LL@li.org\\n\"\n@@ -308,7 +308,35 @@ msgstr \"\"\n msgid \"Failed to load text menu definitions %s: %s\"\n msgstr \"\"\n-#: /home/dominique/build/finalterm/finalterm/po/../src/TextMenu.vala:90\n+#: /home/dominique/build/finalterm/finalterm/po/../src/TextMenu.vala:96\n #, c-format\n msgid \"Error in text menu %s: %s\"\n msgstr \"\"\n+\n+#: /home/dominique/build/finalterm/finalterm/po/../data/TextMenus/dirname.ftmenu:6\n+msgid \"Dir\"\n+msgstr \"\"\n+\n+#: /home/dominique/build/finalterm/finalterm/po/../data/TextMenus/dirname.ftmenu:12\n+msgid \"Copy name to clipboard\"\n+msgstr \"\"\n+\n+#: /home/dominique/build/finalterm/finalterm/po/../data/TextMenus/dirname.ftmenu:16\n+msgid \"Information\"\n+msgstr \"\"\n+\n+#: /home/dominique/build/finalterm/finalterm/po/../data/TextMenus/dirname.ftmenu:20\n+msgid \"Change to\"\n+msgstr \"\"\n+\n+#: /home/dominique/build/finalterm/finalterm/po/../data/TextMenus/dirname.ftmenu:24\n+msgid \"Move\"\n+msgstr \"\"\n+\n+#: /home/dominique/build/finalterm/finalterm/po/../data/TextMenus/dirname.ftmenu:25\n+msgid \"Copy\"\n+msgstr \"\"\n+\n+#: /home/dominique/build/finalterm/finalterm/po/../data/TextMenus/dirname.ftmenu:26\n+msgid \"Delete\"\n+msgstr \"\"\ndiff --git a/src/TextMenu.vala b/src/TextMenu.vala\nindex 30d7bf1..bc4db4f 100644\n--- a/src/TextMenu.vala\n+++ b/src/TextMenu.vala\n@@ -64,6 +64,12 @@ public class TextMenu : Object {\n                                        menu.append(new Gtk.SeparatorMenuItem());\n                            } else {\n\n\nvar re = /_(\".*\")/;\nMatchInfo? info;\nif (re.match (label, 0, out info)) {\nstdout.printf (\"replace: %s - %s\\n\", label, dgettext (null, info.fetch (0)[3:-2]));\n}\n+\n                                        var menu_item = new Gtk.MenuItem.with_label(\"\");                                Gtk.Label menu_item_label = (Gtk.Label)menu_item.get_children().nth_data(0);\n\n```\n\n\nBtw.: There are absolute paths in the pot file. To avoid some work I'd like to use my own Gettext.cmake (and perhaps change the target names (pot_file -> pot; translations -> i18n)). Are there any concerns about this?\n. Ok, will modify the Gettext.cmake to support TextMenu files then rebase my pull request commits.\n. - To update pot file, run: make pot\n- To update and compile (and merge) po files, run: make translations\n- To update and compile (but not merge) po files, run cmake with -DUPDATE_PO=NO option (and execute translations target)\nIt's easy to modify xgettext options for ftmenu files (independent of source files). etc.\n. Hehe, thats because there is currently no po file. I rebased against new master so it should merge without conflicts.\n. Great :) . There was no check if list of languages was empty: https://github.com/Lasall/finalterm/blob/c6e26c446f9031a433372101d2b5eea2b28e2cd5/cmake/Gettext.cmake#L431\nBtw.: Some data files are still lacking localization: desktop file, gsettings file (I will look at it)\n. I can't reproduce this issue. Can you please replace line 317 in /usr/bin/intltool-merge with following line:\nperl\n    open IN_PO_FILE, $in_po_file or die \"can't open $in_po_file: $!\";\n. This is an intltool issue. There is a workaround to use relative paths so the full path to source directory does not matter (I have updated the commit). But: Please avoid whitespaces in translatable data files...\n. The \"weird results\" are normal msgmerge (gettext) behavior.\nRecent intltool supports following formats (from the manpage intltool-extract):\n- \"gettext/glade\" (.glade, .glade2)\n- \"gettext/gsettings\" (.gschema.xml)\n- \"gettext/ini\" (Generic INI file)\n- \"gettext/keys\" (.keys)\n- \"gettext/rfc822deb\" (RFC 822 format file)\n- \"gettext/quoted\" (all strings within \"\")\n- \"gettext/schemas\" (.schemas)\n- \"gettext/scheme\" (.scm)\n- \"gettext/xml\" (Generic XML file)\nSo if you can format the ftmenu files to one of the above file types, intltool can do the job. But those are rather different file formats (ini or xml). A third possibility is to write a small shell/Python/Perl script to extract translatable strings (imho the smartest solution). I can do the latter (and I would use Perl). The difficulty is to decide when translation ends and the command starts (at the moment this is (<tt>... but is there a possibility to move some translatable parts after the command or even use markdown in translatable strings?).\n. It does work. (I couldn't reproduce it on my system neither, but in a localized VM).\nBtw.: I had to install to /usr not /usr/local.\n. I also recommend to post on launchpad translators mailinglist (right before first release): launchpad-translators@lists.launchpad.net\n. According to the comments of finalterm-git AUR package the mx-1.0 PKGBUILD isn't correct. A working script may be: that one\nSince this is a packaging issue I would close this bug.\n. If you install to a custom directory you have to make sure your XDG_DATA_DIRS environment variable points to your data prefix with a glib-2.0/schemas/gschemas.compiled file in it. In your case that's $HOME/apps/finalterm/share.\n. The failure only occurs when an unknown command line option was passed.\n. But that's only the test for Clutter.InitError.SUCCESS. The GLib.Error should only be thrown when parsing the command line options has failed. (Btw. GLib.error(...) directly aborts.)\n. Yes, that's the trick. We set some C-definitions (add_definition(-Dfoobar=\\\"some string\\\")`) and therefore replace them in generated C code. But we have a namespace \"Config\" and we do not want our definitions called \"Config_foobar\" so those CCode-attributes.\n. I can't confirm this segfault on a clean Debian unstable system. (It segfaults though but not there (because of clutter).)\nMaybe you can track down the origin with gdb.\nDoes this segfault happen directly after/on startup or after you have typed something to terminal window?\n. Since oh-my-zsh is a zsh configuration framework this is a duplicate of #26 .\n. There is one drawback: C compiler will recompile all c files, although only a single vala file has changed. gcc is faster than valac and object compilations can run threaded so it's still an improvement but not perfect.\nFollowing snippet fixes this issue (for another project) but introduces an extra target:\n``` diff\ndiff --git a/cmake/vala/UseVala.cmake b/cmake/vala/UseVala.cmake\nindex b5cc64e..94be253 100644\n--- a/cmake/vala/UseVala.cmake\n+++ b/cmake/vala/UseVala.cmake\n@@ -194,7 +194,7 @@ function(vala_precompile output)\nadd_custom_command(\n     OUTPUT\n-      ${out_files}\n+      \"vala.stamp\"\n     COMMAND\n       ${VALA_EXECUTABLE}\n         \"-C\"\n@@ -208,11 +208,18 @@ function(vala_precompile output)\n         ${in_files}\n         ${custom_vapi_arguments}\n     COMMAND\n-      ${CMAKE_COMMAND} -E touch ${out_files}\n+      ${CMAKE_COMMAND} -E touch \"vala.stamp\"\n     DEPENDS\n       ${in_files}\n       ${ARGS_CUSTOM_VAPIS}\n   )\n+  add_custom_command(\n+    OUTPUT\n+      ${out_files}\n+    DEPENDS\n+      \"vala.stamp\"\n+    COMMENT \"\"\n+  )\n   set(${output} ${out_files} PARENT_SCOPE)\n endfunction()\n # vim: set ai ts=2 sts=2 et sw=2\n```\nI will work on a proper solution (in a few days) and especially look at the autotools way (which works as expected).\n. You can set your shell with dconf value /org/gnome/finalterm/shell-path. E.g:\ngsettings set org.gnome.finalterm shell-path /usr/bin/zsh\n. Expect a pull request soon. We have to care about glib-schema uninstall too.\n. I installed the he_IL.UTF8 locale and changed region to Asia and input to hebrew to get a RTL login. But then finalterm worked without problems (RTL style) (like mlterm).\nWe have already discussed on IRC and there shouldn't be any problems with the PS1 prompt (#121).\n. It's caused by the termlets using somecommand $@ -> whitespaces are argument delimiters for bash.\n. This is a duplicate of #121.\n. Please show:\ntype valac\nvalac --version\nls /usr/bin/valac*\nWhich operating system are you using?\n. @p-e-w: You should mention that somewhere in the README (or a wiki) to save some effort for translators.\n. The vim issue is #121 the line wrapping one is #52.\n. Thank you for your translation! Translations will be managed over Launchpad's Rosetta, see https://github.com/p-e-w/finalterm/pull/173#issuecomment-23204140\n. No, it fixes build without creating build directory (building directly \"in-source\") (and some quoting issues).\n. Please consider using newest version 9.\n. With compat version 9, debhelper depends is >= 9. Please also consider newer vala versions: valac-0.18 | valac-0.20\n. Please use newest standards version 3.9.4\n. Why does the runtime package depends on development packages and the compiler?\n. Please use following stable format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0\n. Why to manual name targets? dh $@ should behave fine. Otherwise use override targets.\n. It should work without any extra dependencies. Everything already should come with ${shlibs:Depends}.\n. Again the compiler dependency should be (for saucy e.g.): valac-0.18 | valac-0.20\n. It should compile without all of the following lines.\n. One can use the --exclude-vcs switch to exclude files from version control system. Instead of ../${APP}-${VERSION} i suggest ../$(basename $(pwd)) to make it independent of current directory name.\n. dpkg-buildpackage already uses fakeroot internally (as default), so no need to run the command with fakeroot.\n. I guess it won't compile in a clean chroot environment because no gee-headers are included. Use libgee-0.8-dev (since Ubuntu 12.10).\n. Avoid to name a license twice. So use:\n```\nFiles: *\nCopyright: ...\nLicense: GPL...\nFiles: debian/*\n..\nLicense: GPL...\nLicense: GPL...\n  disclaimer text\n```\nSee also the standard itself.\n. A really cool thing would be to get the version string from git tags. (But that's rather advanced, an example can be found in vala sourcecode: build-aux/git-version-gen)\n. Please use an underscore \"_\" before all translatable keys (to get them included in pot file).\n. ",
    "glitcha": "I have the same problem on ubuntu 14.04.\nI did\nsudo apt-get install git build-essential cmake valac libnotify4 libmx-1.0-2 libkeybinder0 libgee2\ngit clone https://github.com/p-e-w/finalterm.git\ncd finalterm/\nmkdir build\ncd build/\ncmake ..\nOutput \n-- checking for a minimum Vala version of 0.16.0\n--   found Vala, version 0.22.1\n-- GSettings schemas will be installed locally.\n-- GSettings shemas will be compiled.\n-- GSettings schemas will be installed into /usr/local/share/glib-2.0/schemas/\n-- Configuring incomplete, errors occurred!\nSee also \"/home/colin/Source/finalterm/build/CMakeFiles/CMakeOutput.log\".\n. Hi p-e-w I have just managed to get it to work by doing the following.\nsudo apt-get install cmake debhelper valac-0.22 intltool libgee-0.8.2 libgee-0.8-dev libmx-dev libclutter-gtk-1.0-dev libnotify-dev libunity-dev libkeybinder-3.0-dev\nLooks like I was just missing some dependencies.\n. ",
    "archkens": "Oops, accidentally closed and reopened. Sorry, it should be open.\n. I'm using Xfce with Nvidia proprietary drivers. I've found that if I click on the menu (it disappears), then move the mouse one pixel so that I get the menu back and click again (it disappears again) then move the mouse one more pixel and click again, the menu pops up. If I move the mouse more than one pixel each time, it doesn't work.\n. Maybe Xfce doesn't have the problem you're compensating for, so it has the opposite effect and screws something up? I will try building without that line you posted earlier.\n. Tried building with line 226 commented out, no effect. Let me know if there's something else I can try.\n. What distro?\n. Wasn't x_expand added in clutter 1.14.4?\n. I also cannot reproduce them on Arch.\n. It already installs the icon for me.\n. ",
    "dflock": "I have exactly the same problem as @archkens also running xfce - and the 1-pixel thing works here too - weird.\n. Would this only apply to symlinks? If so, maybe just skip them for now, or treat them differently? Maybe you'd want a different drop down on a symlink anyway.\n. ",
    "serans": "Same problem here, also using xfce and Nvidia.\nI found out that on_menu_button_clicked does not get called except when you do the '1-pixel trick', in which case the function is called and it works as expected.\nAt first glance it looks like events are called in a wrong order, making the popup loose focus before on_menu_button_clicked is called (maybe?). I'll try to dig a little bit inside the issue next week.\nA workaround is to comment out line https://github.com/p-e-w/finalterm/blob/master/src/TerminalView.vala#L181, which hides the dropdown menu when it leaves focus. Of course it has the drawback that the menu doesn't disappear unless you explicitly click outside, but at least you can access the menu.\n. Of course I never meant it to be included into finalterm!! I just wanted to point it out in case people using xfce want to play with finalterm, but it's just a hack.\n. ",
    "philhoefer": "The problem probably isn't caused by xfce.\nI'm using Arch Linux with awesomewm and have the same problem. (1px trick works)\n. ",
    "abderrahim": "Same here using i3 and nvidia drivers on Debian. I'm trying to investigate it but I'm not sure what is exactly the expected behaviour.\nWhat is this line supposed to do?\nhttps://github.com/p-e-w/finalterm/blob/master/src/TerminalView.vala#L182\nRemoving it seems to make it work (exept that the menu doesn't appear immediately after I click the button, I have to move the mouse for it to appear).\n. I didn't notice it because there is another bug causing the button not to hide.\nSo digging a bit, I found that when I click the button, when the leave_event handler gets called, the event queue in clutter contains a LEAVE event, an ENTER event, and a BUTTON_PRESS event, and since the button is hidden by the leave_event handler it never gets the other two.\nNext question is how to work around this. A possible solution is not to hide the button immediately but have it fade out, so we can still get the enter event and eventually the button press. Does this make sense?\n. Thinking again about it, I found something else: just make the button transparent instead of hiding it. This way it will still recieves the events, and the (visible) behaviour is unchanged AFAICT. Since the button won't react to keyboard, the only way to interact with it is the mouse and it will appear when the mouse is over it.\nHow do I send patches? Is pull request the only method?\n. > Would this also fix the second problem you are describing:\nUnfortunately not. But the problem only happens with i3, not with gnome shell.\n. ",
    "xdef": "Ok, by step:\n1. Install finalterm from source rpm for fedora\n2. run finalterm from terminal\n---- from FinalTerm ----\n3. create empty directory - \"mkdir /tmp/test\"\n4. move to directory \"/tmp/test\"\n5. create file with russian name - touch '\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435'.txt \n6. listing directory - ls (ls -lh don't work, bug exist)\n7. move the mouse to the menu of the file -> Segfault\nLog from terminal:\n```\n[KotovA@id5817 ~]$ finalterm \n (finalterm:2990): WARNING : Binding 'F12' failed!\n (finalterm:2990): WARNING : Utilities.vala:125: Error while opening file '/home/KotovA/.local/share/finalterm/commands.ftcompletion' for reading\n (finalterm:2990): CRITICAL : notifying_list_add_all: assertion `collection != NULL' failed\n** Message: TerminalOutput.vala:350: Partially supported control sequence: '\\u001b]0;KotovA@id5817:~\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n (finalterm:2990): WARNING : TerminalOutput.vala:346: Unsupported control sequence: '\\u001b[?1034h' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_DEC_PRIVATE_MODE_SET)\n** Message: TerminalOutput.vala:269: Command mode entered\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x18320c0]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x1646e00]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x16310d0]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0xe12040]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0xe12040]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING : The actor '[:0xe0fd20]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n Message: Terminal.vala:109: Command updated: ''\n Message: Terminal.vala:109: Command updated: 'm'\n Message: Terminal.vala:109: Command updated: 'm'\n Message: Terminal.vala:109: Command updated: 'mk'\n Message: Terminal.vala:109: Command updated: 'mk'\n Message: Terminal.vala:109: Command updated: 'mkd'\n Message: Terminal.vala:109: Command updated: 'mkd'\n Message: Terminal.vala:109: Command updated: 'mkdi'\n Message: Terminal.vala:109: Command updated: 'mkdi'\n Message: Terminal.vala:109: Command updated: 'mkdir'\n Message: Terminal.vala:109: Command updated: 'mkdir'\n Message: Terminal.vala:109: Command updated: 'mkdir '\n Message: Terminal.vala:109: Command updated: 'mkdir '\n Message: Terminal.vala:109: Command updated: 'mkdir /'\n Message: Terminal.vala:109: Command updated: 'mkdir /'\n Message: Terminal.vala:109: Command updated: 'mkdir /t'\n Message: Terminal.vala:109: Command updated: 'mkdir /t'\n Message: Terminal.vala:109: Command updated: 'mkdir /tm'\n Message: Terminal.vala:109: Command updated: 'mkdir /tm'\n Message: Terminal.vala:109: Command updated: 'mkdir /tmp'\n Message: Terminal.vala:109: Command updated: 'mkdir /tmp'\n Message: Terminal.vala:109: Command updated: 'mkdir /tmp/'\n Message: Terminal.vala:109: Command updated: 'mkdir /tmp/'\n Message: Terminal.vala:109: Command updated: 'mkdir /tmp/t'\n Message: Terminal.vala:109: Command updated: 'mkdir /tmp/t'\n Message: Terminal.vala:109: Command updated: 'mkdir /tmp/te'\n Message: Terminal.vala:109: Command updated: 'mkdir /tmp/te'\n Message: Terminal.vala:109: Command updated: 'mkdir /tmp/tes'\n Message: Terminal.vala:109: Command updated: 'mkdir /tmp/tes'\n Message: Terminal.vala:109: Command updated: 'mkdir /tmp/test'\n Message: Terminal.vala:117: Command executed: 'mkdir /tmp/test\n'\n Message: TerminalOutput.vala:350: Partially supported control sequence: '\\u001b]0;KotovA@id5817:~\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n Message: TerminalOutput.vala:269: Command mode entered\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x1832420]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x1646e00]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x16310d0]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0xe12040]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0xe12040]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING : The actor '[:0xe0fd20]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n Message: Terminal.vala:109: Command updated: ''\n Message: Terminal.vala:109: Command updated: 'c'\n Message: Terminal.vala:109: Command updated: 'c'\n Message: Terminal.vala:109: Command updated: 'cd'\n Message: Terminal.vala:109: Command updated: 'cd'\n Message: Terminal.vala:109: Command updated: 'cd '\n Message: Terminal.vala:109: Command updated: 'cd '\n Message: Terminal.vala:109: Command updated: 'cd /'\n Message: Terminal.vala:109: Command updated: 'cd /'\n Message: Terminal.vala:109: Command updated: 'cd /t'\n Message: Terminal.vala:109: Command updated: 'cd /t'\n Message: Terminal.vala:109: Command updated: 'cd /tm'\n Message: Terminal.vala:109: Command updated: 'cd /tm'\n Message: Terminal.vala:109: Command updated: 'cd /tmp'\n Message: Terminal.vala:109: Command updated: 'cd /tmp'\n Message: Terminal.vala:109: Command updated: 'cd /tmp/'\n Message: Terminal.vala:109: Command updated: 'cd /tmp/'\n Message: Terminal.vala:109: Command updated: 'cd /tmp/t'\n Message: Terminal.vala:109: Command updated: 'cd /tmp/t'\n Message: Terminal.vala:109: Command updated: 'cd /tmp/te'\n Message: Terminal.vala:109: Command updated: 'cd /tmp/te'\n Message: Terminal.vala:109: Command updated: 'cd /tmp/tes'\n Message: Terminal.vala:109: Command updated: 'cd /tmp/tes'\n Message: Terminal.vala:109: Command updated: 'cd /tmp/test'\n Message: Terminal.vala:109: Command updated: 'cd /tmp/test'\n Message: Terminal.vala:109: Command updated: 'cd /tmp/test/'\n Message: Terminal.vala:117: Command executed: 'cd /tmp/test/\n'\n Message: TerminalOutput.vala:350: Partially supported control sequence: '\\u001b]0;KotovA@id5817:/tmp/test\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n Message: TerminalOutput.vala:269: Command mode entered\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x1832780]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x1646e00]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x16310d0]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0xe12040]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0xe12040]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING : The actor '[:0xe0fd20]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n Message: Terminal.vala:109: Command updated: ''\n Message: Terminal.vala:109: Command updated: 't'\n Message: Terminal.vala:109: Command updated: 't'\n Message: Terminal.vala:109: Command updated: 'to'\n Message: Terminal.vala:109: Command updated: 'to'\n Message: Terminal.vala:109: Command updated: 'tou'\n Message: Terminal.vala:109: Command updated: 'tou'\n Message: Terminal.vala:109: Command updated: 'touc'\n Message: Terminal.vala:109: Command updated: 'touc'\n Message: Terminal.vala:109: Command updated: 'touch'\n Message: Terminal.vala:109: Command updated: 'touch'\n Message: Terminal.vala:109: Command updated: 'touch '\n Message: Terminal.vala:109: Command updated: 'touch '\n Message: Terminal.vala:109: Command updated: 'touch ''\n Message: Terminal.vala:109: Command updated: 'touch ''\n Message: Terminal.vala:109: Command updated: 'touch '''\n Message: Terminal.vala:109: Command updated: 'touch ''\n Message: Terminal.vala:109: Command updated: 'touch ''\n Message: Terminal.vala:109: Command updated: 'touch '\u0444'\n Message: Terminal.vala:109: Command updated: 'touch '\\xd1'\n Message: Terminal.vala:109: Command updated: 'touch '\\xd1'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b '\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b '\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b '\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 '\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \\xd1'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 '\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 '\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \\xd1'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \\xd1'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\\xd1'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\\xd1'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\\xd1'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\\xd1'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\\xd1'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\\xd1'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441\\xd1'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441\u0441'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441\u0441'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441\u0441\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441\u0441\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441\u0441\u043a'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441\u0441\u043a'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\\xd0'\n Message: Terminal.vala:109: Command updated: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e'\n Message: Terminal.vala:117: Command executed: 'touch '\u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435'.txt\n'\n Message: TerminalOutput.vala:350: Partially supported control sequence: '\\u001b]0;KotovA@id5817:/tmp/test\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n** Message: TerminalOutput.vala:269: Command mode entered\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x1832ae0]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x1646e00]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x16310d0]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0xe12040]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0xe12040]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING : The actor '[:0xe0fd20]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n Message: Terminal.vala:109: Command updated: ''\n Message: Terminal.vala:109: Command updated: 'l'\n Message: Terminal.vala:109: Command updated: 'l'\n Message: Terminal.vala:109: Command updated: 'ls'\n Message: Terminal.vala:117: Command executed: 'ls\n'\n Message: TerminalOutput.vala:350: Partially supported control sequence: '\\u001b]0;KotovA@id5817:/tmp/test\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n Message: TerminalOutput.vala:269: Command mode entered\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x1832e40]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x1646e00]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x16310d0]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0xe12040]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0xe12040]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0xe0fd20]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n(finalterm:2990): Clutter-WARNING **: The actor '[:0x18331a0]' is currently inside an allocation cycle; calling clutter_actor_queue_relayout() is not recommended\n```\nScreenshot:\n\n. ",
    "k-bx": "Seems like version is 1.0\nP.s.: I'm trying to install on Ubuntu 12.04 LTS.\nbuild \u27a4 cmake ..\n-- The C compiler identification is GNU 4.6.3\n-- The CXX compiler identification is GNU 4.6.3\n-- Check for working C compiler: /usr/bin/gcc\n-- Check for working C compiler: /usr/bin/gcc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working CXX compiler: /usr/bin/c++\n-- Check for working CXX compiler: /usr/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Found PkgConfig: /usr/bin/pkg-config (found version \"0.26\") \n-- checking for modules 'clutter-gtk-1.0;mx-1.0;gee-0.8;keybinder-3.0'\n--   found clutter-gtk-1.0, version 1.2.0\n--   found mx-1.0, version 1.4.3\n--   found gee-0.8, version 0.8.6\n--   found keybinder-3.0, version 0.3.0\n-- Found Vala: /usr/bin/valac  \n-- checking for a minimum Vala version of 0.16.0\n--   found Vala, version 0.18.1\n-- GSettings schemas will be installed locally.\n-- GSettings shemas will be compiled.\n-- GSettings schemas will be installed into /usr/local/share/glib-2.0/schemas/\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/kb/src/finalterm/build\n. ",
    "crosswalk": "I'm also having an issue with compiling related to clutter. I ran cmake after building and installing clutter 1.12, and am receiving the same error, although traced back to a different line in LineView.vala:\nCMakeFiles/finalterm.dir/src/LineView.c.o: In function line_view_construct':\n/home/smichalski0/Gitstuff/finalterm/src/LineView.vala:52: undefined reference toclutter_actor_set_x_expand'\n. That was it. Once I got the bindings installed everything got built eventually and worked like a charm.\n. ",
    "heartsmagic": "Did those \"i\"s turned to \"\u0130\" when they capitalized in that locale you tried like in my example?\nWith LC_ALL=C, I used C locale. So cmake did not use my system locale which is Turkish. Instead it used C locale which is English here. I mean I did not change all the errors in files, just skip my locale since there are lots of them.\n. I am sorry that I don't know how to integrate this to cmake build process. Could this be the same problem?\nhttp://prog.eskosoft.com/node/37\nOr is there any possibility that this can be code related? \n. ",
    "darkpixel": "CTRL+D also doesn't work to exit the shell\n. ",
    "TXDynamics": "Ctrl-C would be great. This feature would allow me to use FinalTerm daily.  Everything else would be icing\n. Fantastic work p-e-w Final Term will now be my default terminal emulator\n. Ha! Don't worry p-e-w I will not hold you responsible for any destruction that may ensue! \n. ",
    "texnoid": "finalterm\n* Message: Partially supported control sequence: '\\u001b]0;nocture@virtual-table: ~\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n* Message: TerminalOutput.vala:252: Command mode entered\n* Message: Command updated: ''\n* Message: Command updated: 'c'\n* Message: Command updated: 'c'\n* Message: Command updated: 'cd'\n* Message: Command updated: 'cd'\n* Message: Command updated: 'cd '\n* Message: Command updated: 'cd '\n* Message: Command updated: 'cd /'\n* Message: Command updated: 'cd /'\n* Message: Command updated: 'cd /h'\n* Message: Command updated: 'cd /h'\n* Message: Command updated: 'cd /ho'\n* Message: Command updated: 'cd /ho'\n* Message: Command updated: 'cd /ho'\n* Message: Command updated: 'cd /ho'\n* Message: Command updated: 'cd /home/'\n* Message: Command updated: 'cd /home/'\n* Message: Command updated: 'cd /home/n'\n* Message: Command updated: 'cd /home/n'\n* Message: Command updated: 'cd /home/no'\n* Message: Command updated: 'cd /home/no'\n* Message: Command updated: 'cd /home/no'\n* Message: Command updated: 'cd /home/no'\n* Message: Command updated: 'cd /home/no'\n* Message: Command updated: 'cd /home/no'\n* Message: Command updated: 'cd /home/no'\n* Message: Command updated: 'cd /home/nocture/'\n* Message: Command executed: 'cd /home/nocture/\n'\n* Message: Partially supported control sequence: '\\u001b]0;nocture@virtual-table: ~\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n* Message: TerminalOutput.vala:252: Command mode entered\n* Message: Command updated: ''\n* Message: Command updated: 'l'\n* Message: Command updated: 'l'\n* Message: Command updated: 'ls'\n* Message: Command updated: 'ls'\n* Message: Command updated: 'ls '\n* Message: Command updated: 'ls '\n* Message: Command updated: 'ls -'\n* Message: Command updated: 'ls -'\n* Message: Command updated: 'ls -l'\n* Message: Command updated: 'ls -l'\n* Message: Command updated: 'ls -la'\n* Message: Command executed: 'ls -la\n'\n* Message: Partially supported control sequence: '\\u001b]0;nocture@virtual-table: ~\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n* Message: TerminalOutput.vala:252: Command mode entered\n* Message: Command updated: ''\n* Message: Partially supported control sequence: '\\u001b]0;nocture@virtual-table: ~\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n** Message: Command updated: ''\n* (finalterm:12808): WARNING *: TerminalOutput.vala:248: Command start control sequence received while already in command mode\n\"Segmentation fault (Memory Dump)\"\nuname -a:\nLinux virtual-table 3.8.0-22-generic #33-Ubuntu SMP Thu May 16 15:17:14 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux\n/var/log/syslog:\nMay 28 11:42:39 virtual-table kernel: [69915.122485] finalterm[12808]: segfault at 0 ip 000000000042d48f sp 00007fffa774bbf0 error 4 in finalterm[400000+5d000]\n. ",
    "rkakrik": "Same problem\n. ",
    "stiks": "Debian, Wheezy\n. stiks@s:~/finalterm/build$ dpkg -l | grep clutter-\niU  gir1.2-clutter-1.0                       1.14.0-1                           amd64        GObject introspection data for the Clutter 1.0 library\nii  gir1.2-gtkclutter-1.0                    1.2.0-2                            amd64        GObject introspection data for the GTK+ Clutter library\nii  libclutter-1.0-0:amd64                   1.10.8-2                           amd64        Open GL based interactive canvas library\niU  libclutter-1.0-dev                       1.14.0-1                           amd64        Open GL based interactive canvas library (development files)\nii  libclutter-gtk-1.0-0:amd64               1.2.0-2                            amd64        Open GL based interactive canvas library GTK+ widget\nii  libclutter-gtk-1.0-dev                   1.2.0-2                            amd64        Open GL based interactive canvas library GTK+ widget (development files)\nIt's look like 1.14.0 installed and libclutter 1.10.8\n. ",
    "jrabbit": "@p-e-w @tomb95's fix works great on Debian testing. This is still a problem. other than having to compile keybind-3.0 the build on debian is tolerable.\nIt may be causing this: \n\n. ```\ndiff --git a/src/LineView.vala b/src/LineView.vala\nindex e1b1a92..18ae947 100644\n--- a/src/LineView.vala\n+++ b/src/LineView.vala\n@@ -49,7 +49,9 @@ public class LineView : Clutter.Actor {\n                add(collapse_button);\n            text_container = new Clutter.Text();\n\n\ntext_container.x_expand = true;\n//text_container.x_expand = true;\n(layout_manager as Clutter.BoxLayout).set_expand(text_container, true);\n(layout_manager as Clutter.BoxLayout).set_fill(text_container, true, false);\n                text_container.line_wrap = true;\n                text_container.line_wrap_mode = Pango.WrapMode.CHAR;\n```\n\nseems to work fine.\n. It crashes with that as its only output.\nOn Jul 15, 2013 11:57 AM, \"Philipp Emanuel Weidmann\" \nnotifications@github.com wrote:\n\nBTW, I see only a warning which is no big deal by itself. Is there and\nactual error / wrong behavior?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/129#issuecomment-20979337\n.\n. Aha. I think i figured it out. I hadn't make install'd it. That fixes it. Now why would it do that? I don't know. (Also running gdb on it didn't seem to out put much. i did gdb ./finalterm run)\n\nSo this should be reproducible if you install one version of finalterm and build a newer one without installing over the other.\n. ",
    "Richard-W": "Just add \"-DCMAKE_INSTALL_PREFIX=/usr\" to your cmake-call. \nPackage-managers should really not install anything to the /usr/local prefix. Some people also install to the prefix \"~/.local\" especially when they don't have root-permissions on their system (like in companies). A symlink put in /usr/bin by the build-system would make it neccessary for them to modify the CMakeLists.txt.\n. ",
    "lobhater": "I saw this reported in a previous bug,  sorry for the dup.\n. The clear command creates a new prompt at the top of the terminal but does not erase the old text below\n. I always have to launch final term from the bash shell using the sudo\ncommand otherwise final term doesn't work at all. The segmentation fault\noccurs when I use the up or down arrows to recall the command history. The\nsegmentation fault error is displayed im the original bash shell terminal\nused to launch final term. It is very hit and miss the error does not\nalways occur. Please let me know what other information would be helpful?\nOn May 19, 2013 2:45 PM, \"Philipp Emanuel Weidmann\" \nnotifications@github.com wrote:\n\nThe clear issue is a duplicate (#18https://github.com/p-e-w/finalterm/issues/18).\nAbout the other issue: How can I reproduce?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/43#issuecomment-18124444\n.\n. \n",
    "edge226": "I would also like fish shell integration. Just thought I would put my two cents in. Since fish already has a lot of this functionality would it not be easier to make everything work correctly in fish first and then port to other shells?\n. @p-e-w That sounds awesome :)\n. So basically make Aliases tab complete :)\n. ",
    "norpol": "I think @p-e-w approach is correct one. I know fish, zsh, or others, are having benefits in various terms. But at the moment, most interactive terminal emulators are using bash and to stay with development of FinalTerm sane (aka. deterministic) Bash 'only' for the 'beginning' is a reasonable decision. I guess this will somehow change when there is a stable release and someone is willing to put his/her efforts in integrating more features. :)\n(You could mention that in the README.md, so people get a better understanding of what's happening) :)\n. Hi, worked well for me on a somewhat clean Fedora 21 installation. Only thing that was missing is cmake.\nThanks, and please merge :+1:.\n. Here is also some strace output:\nioctl(7, VIDIOC_INT_RESET, 0x7fff03442d10) = 0\nioctl(7, 0x4020645d, 0x7fff03442da0)    = 0\nioctl(7, 0xc010645b, 0x7fff03444c50)    = 0\nioctl(7, 0xc0086457, 0x7fff03444d10)    = 0\nioctl(7, 0xc020645e, 0x7fff03444c70)    = 0\nioctl(7, 0x400c645f, 0x7fff03444c70)    = 0\nioctl(7, 0x40046460, 0x7fff03444dc0)    = 0\nioctl(7, 0x40046460, 0x7fff03444e80)    = 0\nioctl(7, 0x40406469, 0x7fff03444e10)    = 0\nioctl(7, VIDIOC_INT_RESET, 0x7fff03444dd0) = 0\nioctl(7, VIDIOC_INT_RESET, 0x7fff03444dd0) = 0\nioctl(7, VIDIOC_INT_RESET, 0x7fff03444e00) = 0\nioctl(7, 0xc0086457, 0x7fff03444df0)    = 0\nioctl(7, VIDIOC_INT_RESET, 0x7fff03444de0) = 0\nioctl(7, 0x400c645f, 0x7fff03444df0)    = 0\npoll([{fd=6, events=POLLIN|POLLOUT}], 1, 4294967295) = 1 ([{fd=6, revents=POLLOUT}])\nwritev(6, [{\"\\223\\1\\22\\0002\\0`\\0029\\0`\\2\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"..., 72}], 1) = 72\nopen(\"/usr/share/X11/XErrorDB\", O_RDONLY) = 15\nfstat(15, {st_mode=S_IFREG|0644, st_size=41532, ...}) = 0\nread(15, \"!\\n! Copyright 1993, 1995, 1998  \"..., 41532) = 41532\nclose(15)                               = 0\nwrite(2, \"\\n(finalterm:25595): Gdk-ERROR **\"..., 597\n(finalterm:25595): Gdk-ERROR **: The program 'finalterm' received an X Window System error.\nThis probably reflects a bug in the program.\nThe error was 'GLXBadDrawable'.\n  (Details: serial 679 error_code 169 request_code 154 (GLX) minor_code 29)\n  (Note to programmers: normally, X errors are reported asynchronously;\n   that is, you will receive the error a while after causing it.\n   To debug your program, run it with the GDK_SYNCHRONIZE environment\n   variable to change this behavior. You can then get a meaningful\n   backtrace from your debugger if you break on the gdk_x_error() function.)\n) = 597\n--- SIGTRAP {si_signo=SIGTRAP, si_code=SI_KERNEL} ---\n+++ killed by SIGTRAP (core dumped) +++\n[1]    25592 trace trap (core dumped)  strace ./finalterm\n. ",
    "wei2912": "finalterm doesn't work with nano or vim very well either.\n. ",
    "kuzp": "duplicates #31 \n. https://docs.google.com/file/d/0B9yAiNpKcnilb2c5MHJpa2Q4X0U/edit?usp=sharing\nthis is a zipped directory with a one english and one non english (\"\u0440\u0443\u0441\u0441\u043a\u0438\u0439\") empty files w/o spaces in the name \n. to p-e-w\nmkdir \u0440\u0443\u0441\u0441\u043a\u0438\u0439\n\"\u0440\u0443\u0441\u0441\u043a\u0438\u0439\" is the concrete directory name\nname@host:~$ locale\nLANG=ru_RU.UTF-8\nLANGUAGE=\nLC_CTYPE=\"ru_RU.UTF-8\"\nLC_NUMERIC=\"ru_RU.UTF-8\"\nLC_TIME=\"ru_RU.UTF-8\"\nLC_COLLATE=\"ru_RU.UTF-8\"\nLC_MONETARY=\"ru_RU.UTF-8\"\nLC_MESSAGES=\"ru_RU.UTF-8\"\nLC_PAPER=\"ru_RU.UTF-8\"\nLC_NAME=\"ru_RU.UTF-8\"\nLC_ADDRESS=\"ru_RU.UTF-8\"\nLC_TELEPHONE=\"ru_RU.UTF-8\"\nLC_MEASUREMENT=\"ru_RU.UTF-8\"\nLC_IDENTIFICATION=\"ru_RU.UTF-8\"\nLC_ALL=\n. no, I used only latin symbols\nnote, to reproduce, you should resize window at first and after that type \"ls -l\" command\n. also I have crashes with output of other commands \nfor example, if type \"ps aux\", terminal will crash on mouse moving at the end of some wrapped lines (the \"new line text\" must be a part of the program path, not arguments)\n. what distro do you use ? could you provide me with reference package?\n. do you have problems with control keys without remapping?\nI can't \"use control+\" combo.\n. ",
    "aglarendil": "I confirm this bug. At least with Russian directory names.\n. Any Russian (for example, '\u0412\u0438\u0434\u0435\u043e' or ''\u041c\u0443\u0437\u044b\u043a\u0430 ) name directory on latest Ubuntu precise with all updates. I tried also to update to latest valac (0.18 and 0.20) - it did not help.\n. ",
    "versable": "After backporting keybinder-3.0, I managed to package finalterm for elementaryOS luna beta 2 (based on Ubuntu 12.04). If you want I could start a final term project on lp, linked to your git repo, with a debian build branch, it should built fine. I could also open a daily PPA, with the vala PPA as dependancy. I plan to include finalterm on the elementary community PPA.\n. Also, could you please update the Categories line in your .desktop file on your git branch to:\nCategories=GTK;Utility;TerminalEmulator;System;\n. Just looked at fuzzguns debian commit, pretty similar to mine. I wouldn't merge the commit, i would rather create a debian-build branch, and create a lp recipe with nested branches.\n. I'll use fuzzguns debian commit since it is more complete than mine. Maybe I will have a daily PPA up and running tomorrow with Ubuntu 12.04 - 13.10 support.\n. fuzzgun: How about combining forces?\n. Project page is up on LP: \nhttps://launchpad.net/finalterm\nThe main branch lp:finalterm syncs with your git branch every 5 hours: \nhttps://code.launchpad.net/~versable/finalterm/finalterm\nHere is a testing PPA which takes your synced branch, nests it with my deb-packaging branch and attempts to build:\nhttps://code.launchpad.net/~versable/+archive/finalterm-daily\nEverytime you update your git branch a new deb will be build and put into the PPA. \nThe PPA has also the vala-team ppa as dep (meaning it pulls the updated vala files when it attempts to build)\nLet's see if it builds ;)\n. Failed to build:\nhttps://launchpadlibrarian.net/142048178/buildlog_ubuntu-saucy-amd64.finalterm_0.1-0~40~saucy1_FAILEDTOBUILD.txt.gz\nx expand issue from bug https://github.com/p-e-w/finalterm/issues/38\n. Fixed,\nbuild fine after I fiddled around with the control file:\nhttps://code.launchpad.net/~versable/+archive/testing-ppa/+packages\nI resettet the daily PPA, LP should build for it fine in a couple of hours\n. Then you'll be glad to hear that after backporting keybinder-3.0, and pulling in backports from clutter, atk and cogl, I have managed to get an Ubuntu 12.04 built. After all, Final Term should support the Ubuntu 12.04 LTS release ;).\n. Give @fuzzgun full credit for the debian branch. I just pulled everything together and fought with LP ;)\n. It works fine on Ubuntu 12.04, just tested it on a fresh install in Virtualbox\n. I have created a team page on Launchpad for Final Term, and made a PPA for it, as I don't want to impose my name.\nFinal Term will built for it in a couple of hours, then that PPA should be ready.\nYou shouldn't use mine as the new PPA has a more appropriate name, as in:\nppa:finalterm/daily\n. ",
    "dol": "Thx for the package definition.\n. ",
    "0rAX0": "Yes, please move them.\n. The /usr/share/pixmaps directory is deprecated, no?\n. I couldn't find specifics, but at least three pages call the directory either legacy or deprecated:\nhttp://lists.fedoraproject.org/pipermail/devel/2012-January/161076.html\nhttp://mail.xfce.org/pipermail/xfce4-dev/2005-August/016344.html\nhttp://code.google.com/p/specto/issues/detail?id=25\n. The best thing to do is to ask the GNOME devs, maybe they know something we don't. Try posting in G+ or ask on the mailing list. \n. ",
    "CommanderAlchemy": "* (finalterm:19334): WARNING *: Unsupported control sequence: '       ' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_HORIZONTAL_TAB)\n* (finalterm:19334): WARNING : Unsupported control sequence: '       ' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_HORIZONTAL_TAB)\n* Message: TerminalOutput.vala:249: Command mode entered\nSegmentation fault (core dumped)\ncheck dmesg I also have this.\nfinalterm[17850]: segfault at 0 ip 000000000042d260 sp 00007fffd5e37150 error 4 in finalterm[400000+5d000]\nfinalterm[17893]: segfault at 0 ip 000000000042d260 sp 00007fff6897a4c0 error 4 in finalterm[400000+5d000]\nfinalterm[18135]: segfault at 0 ip 000000000042d260 sp 00007fff67fbb220 error 4 in finalterm[400000+5d000]\nfinalterm[18727]: segfault at 0 ip 000000000042d260 sp 00007fffacdbf6e0 error 4 in finalterm[400000+5d000]\nfinalterm[18950]: segfault at 0 ip 000000000042d260 sp 00007fffda13ee70 error 4 in finalterm[400000+5d000]\nfinalterm[19060]: segfault at 0 ip 000000000042d260 sp 00007fff95354e10 error 4 in finalterm[400000+5d000]\nfinalterm[19256]: segfault at 0 ip 000000000042d260 sp 00007fff85499fd0 error 4 in finalterm[400000+5d000]\nAfter each one ->\nsystemd-journald[130]: Failed to write entry, ignoring: Argument list too long\nIm thinking my crashing is related to my promt:\nBashrc: http://codepad.org/LT4xEAoU\nOther info:\n3.9.6-1-ARCH x86_64\n. ",
    "otyugh": "Really sorry for theses lacks.\nuname -a : \nLinux AwesomeComputer 3.7.0-7-generic #15-Ubuntu SMP Sat Dec 15 16:34:25 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\n(it's a \"mint 14 Nadia\")\n. I'm really confused ! I didn't followed all the tutorial. I tried to install mx instead of \"libmx-dev\", and just never saw you made an \"apt-get\" done after the instructions.\nMy bad, sorry :/\nOf course, everything works no problem, now.\n. ",
    "xqwzts": "@p-e-w : So I suppose the idea would be to implement the DECSET command by listening for CSI ? P m h - and keep a reference of the current DEC mode which gets checked when translating commands in SEND_CONTROL_SEQUENCE.\nAt which point we can implement most of the xterm commands as referenced in http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\nIf that sounds right to you I'll jump into it, although I've never done any Vala tinkering before so if there are any obvious caveats I should be considering please do let me know.\n. ",
    "brabadu": "Have the same issue with latest PPA build with Ubuntu Unity. After pressing F12 new window is showed in docker, highlighted to show it needs attention. But it is not visible and has no focus.\nI cant Alt+Tab to it though.\n. ",
    "rastersoft": "The hotkey works fine in guake. I use it.\n. ",
    "Hypfer": "Hmm.. I'm using fluxbox. You could try running fluxbox in Xephyr :)\n(Also, this needs an IRC Channel in Freenode)\n. ",
    "allywilson": "I have a \"similar\" bug, not sure if it's the same just manifesting itself slightly differently.\nIf I go into Final Term --> Preferences and then change either the theme or the column/rows options (doesn't matter which or by how much) the Final Term window will resize (usually the columns are reduced to about ~10). \nKernel: 3.8.0-25-generic\nDistro: Mint 15 with Cinnamon 1.8.8\nGraphics: ATI Park Mobility Radeon HD 5430 (not running proprietary drivers), dual monitors.\n. Sorry, but just updated to: finalterm_0.1-0~51~raring1_amd64\nStill got the same issue, although it now only reduces the row by 1 row depending upon which option I select within the preferences (even changing the theme), but it no longer affects the columns.\n. ",
    "tobiasboyd": "I am seeing similar problems with other commands that refresh quickly (htop, arm) on Ubuntu 13.04.\n. ",
    "styx": "@p-e-w thanks for your response. I understand this is a big issue, just want to mention about MC for testing purposes.\n. ",
    "ferki": "I'm also working on an ebuild for Gentoo and I am trying to get it into the Sunrise overlay. It can be followed on bug #474734 in Gentoo's Bugzilla.\n. A live ebuild for Final Term is now in Gentoo's Sunrise overlay. Usage instructions are here.\n@p-e-w : would you like me to create a pull request to update the documentation with the above info?\n. @Richard-W : thanks for reporting it! ;) I only noticed it after I filed the bug in Gentoo's Bugzilla but the fact that I'm not the only person who would like to use it on Gentoo inspired me a lot through the revision and inclusion processes :)\n. This patch has been suggested by a Gentoo developer on #gentoo-sunrise during the ebuild review before accepting it into Gentoo's Sunrise overlay.\n. Feel free to change it/suggest changes as needed, of course. As far as I understand the point is to provide a possibility to enable/disable additional flags. If it causes problems somewhere else it could be modified to mimic the original settings more closely.\nI saw you committed about the same time as me :) I'll rebase it, although I'm not sure how Github likes this..\n. Sorry for closing accidentally.\n. @p-e-w : were you able to check it out on Fedora and Ubuntu?\nAccording to cmake --system-information, Fedora 18 and Ubuntu 12.04 has an empty string as CMAKE_C_FLAGS by default. So in a \"normal\" case the proposed changes wouldn't mean any difference.\nBut if someone sets system-wide flags then finalterm's build system would respect those settings. And also would have an option to toggle easily between \"system-flags only\" and \"additional flags specific to finalterm\" modes.\n. @p-e-w: I am still able to reproduce this, even with current master (728072fd0c). Although my case seems a bit different:\n- I see 133;D;1;1;38;5;245m before the file named 1 (or 311, 331), and even with a simple ls command\n- the . and .. entries are displayed normally\n- a few files starting with . are also having the above sequence prepended to their names\nFor me it seems like the only common thing for the problematic files is that their names are tried to be displayed with a bold font.\n. Soma additional info I found out recently and which might help someone tracking this down:\n- if I use ls --color=none, or ls --color=auto, then the output seems to be OK\n- if I use LS_COLORS=\"\" ls, the problem persists, but some other entries are showing the 'garbage' before their names\n- if I use unalias ls, then ls, the output is also OK\nSo I think the odd behaviour has something to do with the value of the LS_COLORS environment variable, which in turn has something to do with dircolors and/or ls being aliased as ls --color=always (or similar).\n. @p-e-w : updated pull request according to your previous review. Rebased on top of current master and squashed into a single commit for your convenience.\n(This resulted in clearing previous comments on this issue, sorry for that :/ I didn't know GitHub reacts like this.)\n. @p-e-w: Sorry for the delay, and thanks for the feedback!\nWhen using case-insensitivity, I think a regex is needed for replacing the text to be highlighted in the entries, as without backreferences it would be very cumbersome to properly replace mixed-case matches. E.g. when you type \"docum\" it should match \"cd Documents\" in the command history, but the highlighting logic should exactly return the case-insensitively matched substring in its original form as \"cd Documents\" (vs. \"cd documents\").\nGiven that, the performance burden can be lowered by:\n- moving the highlight regex compilation out of AutocompletionEntryView.update() in order to only compile it once per command (vs. once per entry)\n- and then adding RegexCompileFlags.OPTIMIZE as it may help if the regex is used more than once\nAnd the pattern to be searched can be escaped with Regex.escape_string().\nIf you think the above could work, I'll give it another try and then update this pull request with the changes (and after rebase/squash).\n. @p-e-w: a lot has happened indeed :) So I rebased my branch on current master and split the changes into logical commits for the duration of the review - I suppose it's OK to squash them just before merging.\nI think these are the minimal changes to add case-sensitivity settings and making autocompletion aware of them.\nThe timer functions were very useful! I think there are still some room for performance improvement around autocompletion, but this pull request is about case-sensitivity so I would handle them separately :)\n. Great! I'll convert the error blocks to inline format then squash the changes into a single commit.\nAbout the \"markers\" idea: first, I tried to introduce as little change to the original code as possible :) Second, I wanted to make sure that <, >, &, etc. characters possibly found in the command history are properly escaped in the markup - so I couldn't insert the  tags before calling Markup.escape_text(). I think performance-wise this section looks OK and the easiest speed improvements are around filter_function(), sort_function() and maybe introducing a minimum (configurable) character limit for show_popup().\nI already did some experiments towards these and other issues related to autocompletion, but I aimed for getting this done first :)\n. @p-e-w: corrected code-style with inline error blocks and squashed previous commits for merging convenience :)\n. It looks like the \"long lines\" getting recorded as a command when the TAB key is pressed twice to show completion possibilities. I suppose these fake commands can contain \"funny\" characters that could cause glitches in displaying the popup.\nOh, and just as a reminder: issue #63 is about storing empty commands in the history.\n. hi @GiedriusS,\nif you press the right arrow on a selected entry in the command completion popup, then Final Term just copies it to your prompt and lets you edit the command before you execute it.\n. This seems to be the duplicate of #195.\n. @CurtisLeeBolin: IIRC, on Debian, you would need to install the -dev \"versions\" of the dependencies if you would like to compile and link against the headers/libraries, e.g. try running apt-get install libmx-dev libkeybinder-dev libclutter-gtk-1.0-dev libgee-dev libnotify-dev before trying to build from source.\n. @CurtisLeeBolin: ah, sorry, you're right, I missed that version mismatch :)\n. @lantw44: I belive that you are seeing issue #52 now..\n. @ai: as far as I can see, @p-e-w pays extra attention to code/repo details (which is not a bad thing IMHO), so you may want to fix the typo in the commit message as well ;)\n. @p-e-w: oh, I guess I'm just tracking the repo since long enough to notice the patterns - I haven't noticed the branch name, though :)\n. Well, I chose this pattern as it is just slightly more complex than the previous one while fixes the two issues already reported by users, and - on a subjective note - I found it working well for both private and professional everyday use in the past several months. So, as you mentioned, it is probably good enough ;)\nThe pattern suggested by @jolivares on #204 (thanks for the valuable resource!) properly handles single-letter domain endings, but it is lot more complex, still fails with http://example.com/-/ and it admittedly doesn't want to try to match URLs like http://localhost/ (which would be useful in a terminal, IMHO).\nAll in all, the topic seems to be highly subjective, so I guess what matters most is how exactly we define that 'good enough' :)\nps.: apropos of scientific approach, the Regular Expression URI Validation article by Jeff Roberson might be also a good read for anyone who is more interested in the depths of this topic.\n. Thanks @jayay for reporting this! I updated the links in PR #305.\n. I also have this issue with i3wm. @Vreality seems to be using a similar one (awesome perhaps?). That may be a clue for someone with more knowledge about the internals of those :)\n. @Vreality: I believe you might be interested in following #112 as that seems to be the same issue\n. @Vreality: I was also unable to reproduce the ps issue on gentoo yet.\nJudging by the code of the ps termlet, can the problem be that it founds the string 'PID' later in the output of ps and not just in the header?\n. I could reproduce it while running watch echo PID in another window. I think it can be fixed in the ps termlet with only looking for the string 'PID' in the first line of output.\n. Looks like it, at least I can't reproduce this issue anymore :+1: \n. This might also fix #328.\n. @lwandrebeck: this sounds like to be a duplicate of #52 and/or #298\n. @p-e-w: I also have this issue on a MacBook Pro using Gentoo with i3wm. You were wondering on #375 about what differences are there between those systems that have issues with HiDPI displays. So if you let me know which details you are interested in, I can collect them for my setup and then paste is somewhere.\n. There's an update to the discontinuation announcement which mentions iTerm2. Also Terminology comes into my mind.\n. ",
    "mikroskeem": "I have no idea :/\n2013/6/25 Philipp Emanuel Weidmann notifications@github.com\n\nMaybe mx is installed in a path that pkgconfig can't find (such as\n/usr/local/lib)?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/82#issuecomment-19984863\n.\n. \n",
    "evmar": "In case anyone else finds this, the reason this fails is because the AUR mx-git is API version 2 (so mx-2.0), while finalterm wants mx-1.0.\n. ",
    "sguizard": "I build finalterm from the source and I the problem is the same. \nI checked the dependencies and it's OK. \norg.gnome.finalterm.gschema.xml is OK\n. Maybe a problem with cinnamon ... \nI'll try it with unity tonight. \n. So sorry for answering only now. I've been very busy last week. I've updated final term from ppa ans try again under unity and cinnamon. I get this message :\n[18:10] Laptop ~ > finalterm \n* Message: TerminalOutput.vala:251: Command mode entered\n* Message: Command updated: ''\nErreur de segmentation (core dumped)\n. Well done ! I changed the prompt (which is big and colorful) and it work ! Here is my prompt : \necho $PS1\n\\e[0;34m[\\A]\\e[m \\e[0;31m\\u\\e[m\\e[0;34m@\\e[m\\e[0;31m\\h\\e[m \\e[0;34m\\w\\e[m\\n\nI'm gonna change it ^_^\nThank for help ! \n. @brian-neo : I tried and I got the same error\n. @aslpavel : Confirmed ! \n. thanks for help ! \n. ",
    "ProhtMeyhet": "i've had the same problem when i packaged finalterm for opensuse. i needed to run:\ngtk-update-icon-cache %{_datadir}/icons/hicolor\n/usr/bin/glib-compile-schemas %{_datadir}/glib-2.0/schemas\nwhereas %{_datadir} is probably /usr/share for you.\n. ",
    "aslpavel": "Hi i have got the same issue\n```\n$ finalterm \n(finalterm:17026): GLib-GIO-ERROR **: Settings schema 'org.gnome.finalterm' does not contain a key named 'terminal-font'\nfish: Job 1, \u201cfinalterm \u201d terminated by signal SIGTRAP (Trace or breakpoint trap)\n```\nI have tried to somehow determine what the problem is.\n```\n$ gsettings list-keys org.gnome.finalterm\ncolor-scheme\ndark\nemulated-terminal\nopacity\nrender-interval\nresize-interval\nshell-path\nterminal-columns\nterminal-lines\ntheme\n$ gsettings get org.gnome.finalterm terminal-font\nNo such key 'terminal-font'\n```\nThis looks strange to me, as it indeed does not contain terminal-font key.\nBut dconf-editor has it.\n$ dconf dump /org/gnome/finalterm/\n[/]\ncolor-scheme='Solarized'\nterminal-font='Monospace 12'\nBy the way its not even Ubuntu, I have Arch Linux.\n. Solved this! The problem was in previously compiled schema file, which was located in /usr/local/share/glib-2.0/schemas/gschemas.compiled and had been overriding default compiled schema /usr/share/glib-2.0/schemas/gschemas.compiled, the solution is just delete it (or recompile with glib-compile-schemas).\n. ",
    "spamalot": "Looks like the folding markers aren't removed either.\n. Where would this option best be located in the menu? Should there be different menu items for ls -a and ls -l, or will just one ls suffice?\n. Done. Sorry I forgot to mention #109 in the commit itself.\n. Making the button independent of the window will have a problem too: if finalterm is against the left/right side of the screen, the text will still cut off. @p-e-w's second option is probably best. It will just need an additional check: if the item is wrapped, determine where it is wrapped and make the popup wrap at the same position.\n. I understand where you are coming from. I made the false assumption that because shell commands are the only ones that currently take parameters, it would stay that way.\nIf only shell commands are to take parameters, I still think auto-quoting would be a good idea, but if other commands are expected to receive parameters, I agree with you completely. \n. Yes, \"List\" is much better than \"View\".\n. Done.\n. Removed the description.\n. How about replacing both \"Text: \" and \"[Text]\" with \"Text\" with a slightly darker background colour than the menu button?\n. This happens with kwin (4.10.5) as well.\nEDIT: After a bit of looking around, I see a problem. While the lines value is correct in SettingsWindow.vala (line 36), it is incorrect (and decreases) in on_settings_changed (line 415) in FinalTerm.vala. \nEDIT 2: The value being set in on_settings_changed is the value set by on_allocation_changed (line 497) in TerminalView.vala.\u00a0It looks like terminal.lines is not getting set when its setting is changed.\n. It almost certainly is. The main_window.resize at the end of on_settings_changed would make sense as the problem in both issues. Why is this resize necessary anyway?\n. ",
    "kseistrup": "Same thin happens with ps faux on Linux Mint 14 Nadia (kernel 3.5.0 and finalterm 0.1-0~48~quantal1 (from the daily ppa).\n. However, after waiting for \u2018some time\u2019 the output from ps faux comes interspersed with text like (I cannot seem to copy'n'paste from finalterm):\nsh\nawk: warning: escape sequence `\\_' treated as plain `_ '\n. Yes, I agree.\n. ",
    "kukkuk": "Same problem here:\n$ uname -a\nLinux zion 3.5.0-17-generic #28-Ubuntu SMP Tue Oct 9 19:31:23 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\n$ cat /etc/lsb-release \nDISTRIB_ID=LinuxMint\nDISTRIB_RELEASE=14\nDISTRIB_CODENAME=nadia\nDISTRIB_DESCRIPTION=\"Linux Mint 14 Nadia\"\n. ",
    "esamek": "+1\n. ",
    "kokarn": "+1\n. ",
    "datiecher": "+1\n. ",
    "klappy": "+1\n. ",
    "inlanger": "+1 :)\n. ",
    "Igor-Khomich": "+1\n. ",
    "reugene": "+1\n. ",
    "jeremyharris": "I think the author knows this is a desired request. Just watch the thread for updates instead of adding to the +1 noise :)\n. ",
    "simonmd": "+1\n. ",
    "tbergeron": "+1000\n. ",
    "Trevoke": "iTerm2 is really not nearly as awesome as finalterm seems to be.\n. Alright -- Seriously, can we please stop the +1 and stick to constructive comments on the issue? I'd like to be able to keep watching this thread, but the spam is somewhat annoying.\nGiven the current requirements, unless someone takes it upon themselves to start building the required components on OSX and add them to Homebrew, this will not happen for a while. And I, for one, am much more interested in seeing a complete finalterm ported to OSX than I am in a half-assed finalterm that has to be maintained over multiple platforms.\n. I think:\n-- you can fork homebrew ( https://github.com/mxcl/homebrew/tree/master/Library/Formula ) and add the recipes, make a pull request.\n-- you can fork this project to make a pull request for the gnulib portion of it.\nAnd then we can all promise you a beer, and continue. It's awesome that you got this far, very nice!\n. @keithlayne Here is Homebrew's wiki entry on adding formulas: https://github.com/mxcl/homebrew/wiki/Formula-Cookbook\nIf you don't have time / don't want to try to submit them, I can take a crack at it.\n. I got no work done on this whatsoever. Much like Keith, this has unfortunately been fairly far from my thoughts... And I started using emacs.\n. Nice, thanks for the dedication :)\n. ",
    "Tyilo": "this ^\n. ",
    "orefalo": "+1\n. ",
    "ctash": "+1\n. ",
    "aaronlifton": "+1\n. ",
    "brennebeck": "@keithlayne were you able to revisit this after your vacation or progress any further in general?\n. ",
    "indolering": "STOP with the +1's and status update requests: it generates spam for everyone!\nIf you want to express your support for an OS X port put your money where your mouth is and pledge some money to the bounty for this bug.  I'm a poor college student who is making -$30K per year right now; if I can afford $10 you (software developer making $70K/year) can pledge $100!\n@p-e-w could you delete all the +1 posts and add the bounty to the ticket?\n. @p-e-w sorry, that whole site thing is auto-generated and there is no obvious way for me to alter anything.  I don't think I can even withdraw my bounty.  If you like, I can contact the site admins and request that they delete it...\nGiven how hostile Apple is to free software, I was irritated with all the +1 comments and a lack of commits. I figured this would channel that energy better and that it might entice @keithlayne to finish off the port.\n. > A better solution (for homebrew) would be to get gnulib working properly and then integrated into the build so the finalterm source tree doesn't have to include all that cruft.\n\n...\nAnd to all you Gtk/mx/keybinder/Vala gurus, some simple tests/apps/whatever using these libs would be a great contribution to this effort. \n\n@keithlayne \u2013 Maybe a better use of your time would be to create some tickets outlining what needs to be done?\n. ",
    "Globegitter": "Seems like this issues has fallen asleep a bit. Just found out about finalterm recently and it looks really impressive, would love to see this happening on the mac.\n@keithlayne Did you ever get around to put up that repo?\n@Trevoke Did you ever get around to do anything on this?\n. @keithlayne Thank you so much for that. Yeah if you could provide some tickets with what you think would still be missing that would really help for on of us to get started.\n. Wow, I haven't heard of NixOS before, that is some really great stuff. Thank you for introducing us to that @cstrahan and thank you for all the effort to make this possible.\n. @cstrahan I have just seen that https://github.com/NixOS/nixpkgs/pull/3263 got merged. Does this mean this can be closed now and I could get this to work on my Mac as well as give NixOS a try?\n. @cstrahan Just tried it out on my Mac with the latest official release. I know this is going a little bit off-topic, but do I need the latest version straight from github to get anything to work? It tells me finalterm not found.\nAlso I assume it is not quite ready for the Mac or is it?\nAnd my last question which you might not be able to answer and is completely off-topic anyway but are nix packages supposed to work with Fish? Seems I am getting an error when running the nix.sh\nThanks for all the work you have done here btw.\n. @cstrahan Just tried again on my Mac and I am getting the following error:\n\nIf I set allowBroken to true it starts to install but throws errors towards the end. I can post the error-messages if it helps any.\n. This is the whole build output in a gist:\nhttps://gist.github.com/Globegitter/3a5bf3ccd3ad8ed213c5\n. @cstrahan Awesome, thanks you! \n. @cstrahan Had any time yet to look into that by an chance?\n. ",
    "petems": "I'm going to give some of this stuff a shot, I've been working with some custom Homebrew formula's for some work stuff so I think I know enough to get into trouble :+1: \nLooking over @keithlayne's older posts, I think I have some rough tasks I can get written up as seperate issues/features and link them into this more epic task.\nI'll get some stuff written up, no promises anytime super soon though! :smile: \n. If anyone wants to help or see my progress, I made quick repo: https://github.com/petems/finalterm-OSX\n. @cstrahan Looks cool! I'd like to get finalterm building in brew, as it's the most popular package manager for OSX, but it's no picnic to do. I'lll give the NixOS package a go in the mean time! :+1: \n. ",
    "cstrahan": "I would suggest looking at the Nix package manager for getting Finalterm on Mac OS X (Nix is cross-platform, so the same package definitions would work across Linux, Mac, BSD, Mingw, etc). I've already packaged up a couple dependencies to get Finalterm on Nix, and I'm tracking my progress in https://github.com/p-e-w/finalterm/issues/269.\n. @p-e-w \nNow that I have libmx and keybinder-3.0 in Nixpkgs, I've taken a stab at getting finalterm packaged too. It's pretty close, as you can see here: https://github.com/NixOS/nixpkgs/pull/3263\nThere are two remaining problems:\n1. The shell never appears (just a blinking caret)\n2. Typing into finalterm results in these debug messages:\n(.finalterm-wrapped:5362): GLib-CRITICAL **: g_io_channel_write_chars: assertion 'channel->is_writeable' failed\nI'm not sure how to debug this further; could you give me a suggestion or two on how to troubleshoot this (or perhaps provide you with logs)?\n. @p-e-w Good news! I have finalterm working. The problem was a reference in data/org.gnome.finalterm.gschema.xml to /bin/bash, which is a path that doesn't exist on NixOS. I'll see if I can get someone to review and accept https://github.com/NixOS/nixpkgs/pull/3263 shortly.\nGiven that Nix is a cross-platform package manager, adding support for non-Linux hosts should be pretty straight forward (just need to make sure that all of the dependencies build on the other platforms). Being a big Mac user, OS X will probably be the next platform that I'll try to add support for.\n. @Globegitter Yep!\nIf you want to install finalterm from Nixpkgs, first install the nix package manager:\nbash\nbash <(curl https://nixos.org/nix/install)\nYou can then use the one-click installer here: http://hydra.nixos.org/build/12558343\nOr, if you want to be a neckbeard about it, grab the latest nixpkgs repo and install finalterm like so:\nbash\ngit clone https://github.com/NixOS/nixpkgs.git\ncd nixpkgs\nnix-env -f . -i -A finalterm\nCheers!\n. @p-e-w Presently, the Xorg/X11 packages don't build on Mac, which of course holds back a couple prerequisites packages. I have an open PR that brings proper Xorg support to darwin, which I hope will get merged soon: https://github.com/NixOS/nixpkgs/pull/3101. Once that is merged, I'll see if I can get the other dependencies building on Darwin (which should be fairly trivial).\nIf you'd like, you can assign #92 to me, or perhaps create a Nix-specific issue and assign that. Either way, I'll make sure to keep everyone updated on my status.\n(As an aside, a nice effect of all of this is that the package definition can also be used as a development environment on both Mac and Linux. Going from a pristine machine to a working development environment will be as easy as \"nix-shell -p finalterm\".)\n. @Globegitter I've added this to my personal Trello board. I'll see if I can look into it over the next couple days.\n. ",
    "mgajda": "Is it good idea to add it to install instructions in README? (E.g. it must be installed into directory mentioned in $XDG_DATA_DIRS?)\n. Ooops. It is just implemented, according to the blog.\n. ",
    "txdv": "What is the gir path variable called?\nI need vala somehow force to use the one init /opt/finalterm/master/share/gir-1.0\n. ",
    "mttr": "I was attempting to build this on my laptop, which is also running 12.04, and ran into the same problem. It seems that Final Term makes use of some Vala bindings that aren't packaged in 0.16. An easy enough solution to this is to download the Vala 0.17.2 source, and copy the clutter-1.0.vapi and posix.vapi files from /wherever-you-extracted-it/vala-0.17.2/vapi folder and replace the existing ones in your /usr/share/vala-0.16/vapi/ directory (if you're paranoid, back them up first). I also replaced clutter-1.0.deps with the copy from 0.17,  but I'm not sure if that one is necessary. From there, everything seems to compile and run smoothly.\n. \"main text: desc\" could be another way to do it, but the different color idea is probably the best. I'll see what I can come up with!\n. Closing this PR since it has apparently been almost a year and a half since I've touched this (apologies)...\n. ",
    "diegoxter": "Well, sorry for interrupting, but here I got another problem:\nTrying to compile this I used debian jessie's valac version (0.20.1) and got this:\n [ 77%] Building C object CMakeFiles/finalterm.dir/build/src/Config.c.o\nLinking C executable finalterm\nCMakeFiles/finalterm.dir/src/LineView.c.o: In function line_view_construct':\n/home/diegoxter/builds/finalterm/src/LineView.vala:52: undefined reference toclutter_actor_set_x_expand'\ncollect2: error: ld returned 1 exit status\nmake[2]: * [finalterm] Error 1\nmake[1]: * [CMakeFiles/finalterm.dir/all] Error 2\nmake: *** [all] Error 2 \n. ",
    "excieve": "It's actually this issue:\nhttps://bugzilla.gnome.org/show_bug.cgi?id=701445\nI've narrowed it down to clutter-gtk package which isn't fixed in Arch to handle that. Fixing the package and building it manually made Final Term work fine. Going to submit it to Arch bugtracker and closing this as it's not related to Final Term directly.\n. https://bugs.archlinux.org/task/36083\n. ",
    "bellsdigitallab": "thanks\n. I'm a new user and I'll like to have help for the correct use of this \"world\"...thanks\n. ",
    "qinfeng": "There is another example of this bug.\n\nXMusic is treated as 'Music'\nworkspace.bk is treated as 'workspace'\nglassfish-3.1.2.2 is treated as 'ip address'\nsmartgithg-generic is treated as 'git'\n. Yes, I do.\nI have this issue at Fedora 18. ( I install final term following the\ninstruction at github page)\nThe dropdown menu does not appear when i click the file name after I issue\n\"ls\" command\nOn Sun, Jul 28, 2013 at 1:35 PM, Philipp Emanuel Weidmann \nnotifications@github.com wrote:\n\nThat's the problem... it's working on my system.\nDoes anyone else have this issue on Xubuntu?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/148#issuecomment-21677567\n.\n\n\nRegards,\nQinfeng\n. Sorry, I don't know how to make finalterm run in debug mode, but below is\nwhat i have:\nI open finalterm from guake, then issue \"ls\" command. The file or folder\nname can be highlight when the mouse hover on it, but nothing come out when\nI click it.\n( by the way, \"F12\" key is bound to guake, that's why \"Binding F12 failed\n), and Have no idea about those CONTROL SEQUENCE...\nAppreciate your hard work. Final Term is very impressive.\n=====output info ============\nqinfeng@xx:~$ finalterm\n* (finalterm:22707): WARNING *: Binding 'F12' failed!\n* (finalterm:22707): WARNING _: Unsupported control sequence:\n'\\u001b[?1034h'\n(TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_DEC_PRIVATE_MODE_SET)\n_ Message: Partially supported control sequence: '\\u001b]0;qinfeng@xx:\n~\\u0007'\n(TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n* Message: TerminalOutput.vala:251: Command mode entered\n* Message: Command updated: ''\n* Message: Command updated: 'l'\n* Message: Command updated: 'l'\n* Message: Command updated: 'ls'\n* Message: Command executed: 'ls\n'\n* Message: Partially supported control sequence: '\\u001b]0;qinfeng@xx:\n~\\u0007'\n(TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n** Message: TerminalOutput.vala:251: Command mode entered\nOn Sun, Jul 28, 2013 at 6:08 PM, Youri Bonnaff\u00e9 notifications@github.comwrote:\n\nIs there a way to have debugging information when running finalterm?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/148#issuecomment-21681181\n.\n\n\nRegards,\nQinfeng\n. Yeah, I think it's the problem in my side. I've again tried FinalTerm in\nFedora 18 with Gnome3, everything works perfectly.\nI encountered the problem when I use Fedora18 Gnome in Fallback mode(\nclassic mode), in addition with Compiz running.\nEmm, I will try to learn how to use the GDB debug symbols. I am not a gcc\nor gdb user.\nBy the way, many thanks.\nOn Sun, Jul 28, 2013 at 10:42 PM, Philipp Emanuel Weidmann \nnotifications@github.com wrote:\n\nI'm not sure what you mean by \"debugging mode\" (by default, make will\ngenerate GDB debug symbols). The strange thing is that I run Fedora 18 also\nand do not experience this problem.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/148#issuecomment-21684490\n.\n\n\nRegards,\nQinfeng\n. A simple search through the currently open issue, you will find it's a\nduplicate of issue #26, https://github.com/p-e-w/finalterm/issues/26\nOn Wed, Sep 25, 2013 at 3:19 PM, Junjie LU notifications@github.com wrote:\n\nI use finalterm which is offered by the apt-get, after I chsh to zsh,\nother terminators all start with zsh, but finalterm still regard bash as\nits default shell. BTW, this happens in Ubuntu 13.04.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/202\n.\n\n\nRegards,\nQinfeng\n. ",
    "LukeCarrier": "Any chance you'd be able to review? I'm not too familiar with Vala!\n. Thanks for the feedback! I've amended my previous commit now. I can squash these commits into one before merging if you wish?\n. Excellent! I've squashed those commits for you now :)\n. You're most welcome, thanks for the speedy merge and attribution!\n. ",
    "jvonmitchell": "Yeah, I would love to help.  I'll probably look through the diffs of all\nyour commits to get a feel for the language.  I've done some c# before but\nyou will probably have to do all the heavy lifting and I'll just do fixes.\n I'll probably code a little bit each Saturday.\nOn Tue, Jul 9, 2013 at 3:01 AM, bellsdigitallab notifications@github.comwrote:\n\nI'm a new user and I'll like to have help for the correct use of this\n\"world\"...thanks\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/101#issuecomment-20656789\n.\n. I'm not sure if some of these have been addressed but #3 doesn't seem to be an issue for me.  Also VIM navigates for me but does lots of other freaky stuff in insert mode.  #4 is definitely confirmed.\n. Neverminde #3 is an issue.  I had used ctrl-a the first time and everything went well.  Then later on moved the cursor all the way back using the arrow keys and saw the issue.  No matter what method I used to go back the issue was observed.  Restarted the program and haven't been able to reproduce the bug.\n. \n",
    "kkdeep": "Thanks! Waiting for the updates.\n. ",
    "rafael81": "I faced a same issue. I resolved this issue. Please turn off 3D accelerator in Virtual Box\n. ",
    "spudfkc": "A little more info:\nThis seems to happen with any file or directory that is named a number. \n** Message: Command executed: 'ls -l\n'\n* (finalterm:2633): WARNING : Unrecognized control sequence: '\\u001b[0\\u001b]' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_UNKNOWN)\n* Message: TerminalOutput.vala:296: Command mode entered\n. ",
    "Gacnt": "Thanks :+1: !!\n. ",
    "maxmumford": "You probably already know this, but I'd like to also point out that using the mouse wheel click feature on ubuntu to copy and paste also doesn't work. Otherwise, it looks great! Looking forward to the first RC! :)\n. ",
    "mareknovotny": "It is essential thing to have this basics like using clipboard if it should be awesome terminal.\n. ",
    "dhasenan": "Looks like a bad version of clutter in 12.10:\n0x00007ffff572ac7f in g_logv () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n 0x00007ffff572ae42 in g_log () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n0x00007ffff68cd07d in ?? () from /usr/lib/x86_64-linux-gnu/libgdk-3.so.0\n 0x00007ffff68d7e41 in ?? () from /usr/lib/x86_64-linux-gnu/libgdk-3.so.0\n 0x00007ffff416f3d6 in _XError () from /usr/lib/x86_64-linux-gnu/libX11.so.6\n  0x00007ffff416c661 in ?? () from /usr/lib/x86_64-linux-gnu/libX11.so.6\n0x00007ffff416d3a9 in _XReply () from /usr/lib/x86_64-linux-gnu/libX11.so.6\n 0x00007fffeb80a166 in ?? () from /usr/lib/fglrx/libGL.so.1\n 0x00007fffeb7e4deb in ?? () from /usr/lib/fglrx/libGL.so.1\n 0x00007fffeb7dda7a in glXQueryVersion () from /usr/lib/fglrx/libGL.so.1\n0x00007ffff4ef291e in ?? () from /usr/lib/x86_64-linux-gnu/libcogl.so.9\n 0x00007ffff4eb2212 in cogl_renderer_connect () from /usr/lib/x86_64-linux-gnu/libcogl.so.9\n 0x00007ffff764c998 in ?? () from /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0\n0x00007ffff7665913 in ?? () from /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0\n0x00007ffff76780ba in ?? () from /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0\n 0x00007ffff76785cb in ?? () from /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0\n 0x00007ffff572efc7 in g_option_context_parse () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n 0x00007ffff7678312 in clutter_init () from /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0\n 0x000000000041235f in final_term_main (args=0x7fffffffe208, args_length1=1) at /home/dhasenan/src/finalterm/src/FinalTerm.vala:315\n 0x00000000004133f1 in main (argc=1, argv=0x7fffffffe208) at /home/dhasenan/src/finalterm/src/FinalTerm.vala:311\nAnd FinalTerm.vala:315 is just Clutter.init().\n. ",
    "jlec": "Ferenc Erki (FErki) erkiferenc@gmail.com created the ebuild\n. I am using \nlinux-3.9.11\ngcc-4.8.1\nglibc-2.17\nclutter-1.12.2\nclutter-gtk-1.4.2\nmx-1.4.2\nglib-2.34.3\nproperty nvidia drivers 319\n. ",
    "godeater": "Is the idea to write all the escape sequence handling again from scratch? Or would using a library which already does it be preferable? \nhttps://launchpad.net/libvterm/ is a nearly feature complete implementation, leonerd, it's author and maintainer is highly responsive, and active on Freenode (can be found in #perl regularly).\n. Not sure if this is the right place for a back-and-forth conversation on this, but in light of having nowhere else to do it :)  :\nleonerd has also written pangoterm, using libvterm (and pango, obviously!) - so perhaps see if you can get him interested in final-term too ;)\n. ",
    "solusipse": "Irssi is another ncurses based application that is unusable in the current state.\n. Instructions for Fedora should work well.\n. These problems are known, check issue #121.\n. ",
    "aurium": "Waiting for this issue closed to make finalterm more then a cool toy. :-)\n. Thanks @FabienAndre! It steps forward, but still something missed.\nI did append it to /etc/apt/sources.list:\n```\nUbuntu (Finalterm deps)\ndeb-src http://ubuntu.c3sl.ufpr.br/ubuntu saucy universe\n```\nAdded keys to apt-key, and update.\nSo i install the right keybinder pack:\n```\napt-src install -i libkeybinder-3.0-dev\n...\nI: Successfully built in /root/keybinder-3.0-0.3.0\nI: Installing debs built from /root/keybinder-3.0-0.3.0 ..\n...\nI: Successfully installed debs.\n```\nAll keybinder-3.0 installed!\n$ aptitude search keybinder-3\ni   gir1.2-keybinder-3.0                                                   - registers global key bindings for applications - typelib                         \ni   libkeybinder-3.0-0                                                     - registers global key bindings for applications                                   \ni   libkeybinder-3.0-dev                                                   - registers global key bindings for applications - development headers\nThen $ cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/finalterm .. and make works with no changes on CMakeLists.txt. :-D\nThen i installed it:\n$ sudo make install\n[sudo] password for :-): \n[ 78%] Built target finalterm\n[ 82%] Build translations.\n[100%] Built target translations\nInstall the project...\n-- Install configuration: \"\"\n-- Installing: /opt/finalterm/share/glib-2.0/schemas/org.gnome.finalterm.gschema.xml\n-- Compiling GSettings schemas\n-- Installing: /opt/finalterm/share/man/man1/finalterm.1\n-- Installing: /opt/finalterm/bin/finalterm\n-- Installing: /opt/finalterm/share/finalterm/ColorSchemes\n...\n-- Installing: /opt/finalterm/share/locale/hu/LC_MESSAGES/finalterm.mo\n-- Installing: /opt/finalterm/share/applications/finalterm.desktop\nNo errors!\nBut it not runs:\n```\n$ /opt/finalterm/bin/finalterm\n(finalterm:3876): GLib-GIO-ERROR **: Settings schema 'org.gnome.finalterm' is not installed\nTrace/breakpoint trap\n```\nI always compile to /opt and i don't see libs on /opt/finalterm, so... what to do next?\n. Now i see the issue 93.\nI must add /opt/finalterm/share to env's $XDG_DATA_DIRS variable.\nA nice way to not mix the env to other software is this:\nXDG_DATA_DIRS=/opt/finalterm/share /opt/finalterm/bin/finalterm\nAnd WORKS!\nBy the way... can the make install write the XDG_DATA_DIRS=usr-dir user-dir/finalterm to the finalterm.desktop? May be useful...\nThanks by this nice piece of software!\n. ",
    "glittershark": "Have you considered using vttest to ensure interpretation of all xterm control sequences? The website says that the source code should be self-documenting, and that it was used by xterm itself to ensure feature-completeness as far as control sequences go.\n. ",
    "ibqn": "I have tried to use vim with the newly built finalterm, and have discovered that it's still absolutely not working with it :-/\n. ",
    "HerringtonDarkholme": "Is there any possibility to fix this bug?\n. ",
    "IonicaBizau": "@p-e-w  What's the progress on this? I'm interested mostly in VIM support.\n. Should it work, then?\n. Yes. Almost all PPAs work on Trusty, too. There are some (like Final term) that don't.\n. @yevshev I guess you're right.\n. @rstreeter and @Ardakilic Thank you for the info. I compiled it successfully.\nAlso, my issue stands: the PPA still doesn't work on 14.04.\n. @rstreeter A little bit off topic, but what application do you use for weather (the screenshot you attached)?\n. @rstreeter Nice! Thank you! :smile: \n. @PerfectCarl Thanks for instructions. I compiled it without errors.\n. Who owns the PPA?\n. @bashrc Ah, just read your comment. :smile: \n. What's the progress on this issue? There is more than an year since I reported it. :smile: \n. I'm sad to hear this project is not maintained anymore... So I'm closing this issue. :boom: \n. You're welcome! :smile: \n. ",
    "oylenshpeegul": "Yes, that works. Thanks!\nI noticed that file has the exact same comment for two variables\n```\nAnimation duration, in milliseconds\ncursor-blinking-interval = 800\nAnimation duration, in milliseconds\ncursor-motion-speed = 80\n```\nIntentional or a copy-and-paste error?\nThanks again!\n. ",
    "mralexgray": "is this dead?\n. ",
    "tomislater": "Okay\n. Meh... I will make new branch. You can close this pull request.\n. From https://github.com/p-e-w/finalterm/pull/131\n. No problem :) :tea: \n. Ohh, sorry about this.\n. ",
    "ag-restringere": "Then it's most definitely a Clutter problem and not a Finalterm issue and it's a matter of filing a bug upstream with the Clutter people.\n. ",
    "shvelo": "Thanks! \n. ",
    "K1-K1": "Same error message here:\n\n$ ./finalterm \nlibGL error: No matching fbConfigs or visuals found\nlibGL error: failed to load driver: swrast\n(finalterm:5702): Gdk-ERROR **: The program 'finalterm' received an X Window System error.\nThis probably reflects a bug in the program.\nThe error was 'BadLength (poly request too large or internal Xlib length erro'.\n  (Details: serial 211 error_code 16 request_code 155 (GLX) minor_code 1)\n  (Note to programmers: normally, X errors are reported asynchronously;\n   that is, you will receive the error a while after causing it.\n   To debug your program, run it with the GDK_SYNCHRONIZE environment\n   variable to change this behavior. You can then get a meaningful\n   backtrace from your debugger if you break on the gdk_x_error() function.)\nTrace/breakpoint trap\n\nRunning on Debian 32bit:\n\n$ uname -a\nLinux eda-PC 3.16-2-686-pae #1 SMP Debian 3.16.3-2 (2014-09-20) i686 GNU/Linux\n\nIf you tell me how to provide some more amount of context, I can do it.\nThanks.\n. > $ gnome-shell\n\nlibGL error: No matching fbConfigs or visuals found\nlibGL error: failed to load driver: swrast\nX Error of failed request:  BadLength (poly request too large or internal Xlib length error)\n  Major opcode of failed request:  155 (GLX)\n  Minor opcode of failed request:  1 (X_GLXRender)\n  Serial number of failed request:  103\n  Current serial number in output stream:  104\n\nOK, the problem seems to be elsewhere. With libGL error: failed to load driver: swrast I've got:\n\n$ LIBGL_DEBUG=verbose ./finalterm \nlibGL: screen 0 does not appear to be DRI3 capable\nlibGL: screen 0 does not appear to be DRI2 capable\nlibGL: OpenDriver: trying /usr/lib/i386-linux-gnu/dri/tls/swrast_dri.so\nlibGL: OpenDriver: trying /usr/lib/i386-linux-gnu/dri/swrast_dri.so\nlibGL: driver does not expose __driDriverGetExtensions_swrast(): /usr/lib/i386-linux-gnu/dri/swrast_dri.so: undefined symbol: __driDriverGetExtensions_swrast\nlibGL: Can't open configuration file ~/.drirc: No such file or directory.\nlibGL: Can't open configuration file ~/.drirc: No such file or directory.\nlibGL error: No matching fbConfigs or visuals found\nlibGL error: failed to load driver: swrast\n(finalterm:24281): Gdk-ERROR **: The program 'finalterm' received an X Window System error.\n\nThanks for the help, I'll try what I can do with this issue.\n. Reinstall of Nvidia drivers fixed this problem, thanks for the help!\n. ",
    "Depado": "Thanks for the quick answer. I hope you will find a solution. \nI think your terminal emulator could become my favorite one. Great job, really =)\n. That's not a shortcut that's a default behaviour of Bash and other shells. Look at this : http://www.howtogeek.com/howto/ubuntu/keyboard-shortcuts-for-bash-command-shell-for-ubuntu-debian-suse-redhat-linux-etc/\nThis keyboard shortcut is described as 'similar' to the clear command.\nTo me it's an issue because both ^L and clear should have the exact same effect.   \nAnyway I may be wrong when I say it is supposed to have the same effect because clear is part of the Unix operating system, and ^L is not actually a signal, it's just a hotkey set-up by bash. Though I guess it must call the clear command at some point.  \nAccording to man bash :\nclear-screen (C-l)\nClear the screen leaving the current line at the top of the screen.  With an argument, refresh the current line without clearing  the screen.\n. Maybe it's because of Fish Shell.\nHere is a video that shows what I'm talking about, both with bash and fish.\nkopasite.net/up/73197bb79t1qd62/issu.webm\n. Edited my answer, a gif was not appropriate I guess. \nhttp://kopasite.net/up/73197bb79t1qd62/issu.webm\n. Must be my configuration then I guess. In the video I also show the issue using Bash. \nThanks for the feedback anyway :)\n. ",
    "iandriyanov": "Yepp!\n. ",
    "youribonnaffe": "I think I have the same issue.\nI installed from ppa, using Xubuntu 13.04.\nTo reproduce, type 'ps' in finalterm, I have a list of pid, contextual menu appear when I move the mouse over a pid but I cannot interact with it. I would expect the down arrow icon to display the menu.\n. Is there a way to have debugging information when running finalterm?\n. I mean to run finalterm with debugging informations, logs, traces that will help to understand the issue.\n. I'm not using compiz (all effects turned off).\nOn 29 July 2013 18:03, Philipp Emanuel Weidmann notifications@github.comwrote:\n\nMight be a Compiz problem...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/148#issuecomment-21730016\n.\n. If I comment\n\nvala\n menu_button.leave_event.connect((event) => {\n            message(_(\"leave in menu\"));\n            if (!menu_button.toggled)\n                menu_button.visible = false;\n            return false;\n        });\nin TerminalView.vala, the menu will work but now of course it won't disappear when I loose focus on it.\n. ",
    "huyderman": "I'm experiencing similar problems on my XFCE Arch Linux setup. When I mouse over an item it highlights, but it seems I have to click exactly on a pixel in the text to trigger the drop-down. My window manager is xfwm.\nEdit: I also tested lxde and pekwm, same result. Worked in GNOME.\n. ",
    "nikreiman": "I don't think I'd really consider this an \"issue\"; finalterm is still very much experimental and the developers (who are aware of performance issues) are making iterative improvements in this regard.\n. ",
    "bl8": "I've noticed that when my finalterm window is just sitting there doing nothing (apart from the cursor blinking), it uses around 10% CPU. Granted, the cursor blinks beautifully, with a nice fade-in and fade-out ;)\nI'd suggest that as a first target for performance improvement: use less than 1% CPU when not doing anything.\n. Yes, I'm using the NVidia proprietary driver, version 304.88.\nI'm running Ubuntu GNOME 13.04, and using GNOME Shell (which I think doesn't work without hardware acceleration).\n. ",
    "x2q": "+1\nps axu takes ~60 secs and consumes only a single cpu core\n\n. ",
    "schlingel": "+1\nWhen running repeatedly ant tasks (timespan is about 4h) the terminal gets so slow that I have to restart it. After that it works again, for about 4h.\n. ",
    "rdlu": "Tested on Linux Mint 15\n(Ubuntu 13.04; Cinnamon 1.8.8)\nSame behavior on finalterm_0.1-0~80~ubuntu13.04.1 from ppa\n. I think it's related, from geary (didn't looked carefully in code to make sure):\nhttp://redmine.yorba.org/issues/5745\nhttp://redmine.yorba.org/issues/6859\nhttps://bugs.launchpad.net/geary/+bug/1170810\nThat last one caught my eye with this words:\n\"This is a problem for us as it means we can't link against both libunity and libgee 0.8, since libunity's deps file causes Vala to pull in symbols for libgee 0.6, which causes the compiler to error out with a symbol conflict.\"\nEdit: This change caught my eye too:\nhttp://redmine.yorba.org/projects/geary/repository/revisions/ddbd4c7213fc8e05caaff308979df38a15f58bd4/diff/src/CMakeLists.txt\nSo, I've tried to change the CMakeLists on finalterm too, getting rid of libunity (i-dont-care-hate-unity-using-cinnamon)\n and I've got other errors =/\n. I think it's related to #208 \n. ",
    "katoquro": "\nDo you mean the window should not be shown in the overview when in Guake mode?\n\nYes. I usually use drop-down terminal for quick 2 or 3 commands (for check smth) and blinking on window panel slightly annoying. Guake and Yakuake don't show any tabs (but they have only drop-down mode)\nNow I'm trying finalterm as replacement for Guake.\n. ",
    "kwill": "As an aside, I would also like to change the dropdown mode key from F12 to something else. [*] I am running from the Ubuntu PPA. Do I edit /usr/share/finalterm/KeyBindings/default.ftkeys directly, or can I add something to ~/.config/... ?\n[*] Because I'm still using Guake ;) mainly cause it allows me to continue using fish\n. ",
    "artizirk": "no segfaults, nothing, seems to be clean exit, atleast I can't get any errors out of it\nnemiver gave me a nice dialog box that says \"Program exited\" \ngdb output isnt realy interesting either\n(gdb) run\nStarting program: /home/arti/code/finalterm/build/finalterm \nwarning: no loadable sections found in added symbol-file system-supplied DSO at 0x7ffff7ffa000\nwarning: Could not load shared library symbols for linux-vdso.so.1.\nDo you need \"set solib-search-path\" or \"set sysroot\"?\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/usr/lib/libthread_db.so.1\".\n[New Thread 0x7fffebed2700 (LWP 27398)]\n[New Thread 0x7fffe8bd7700 (LWP 27399)]\n[New Thread 0x7fffe0b9d700 (LWP 27402)]\n[Thread 0x7fffe8bd7700 (LWP 27399) exited]\n[Thread 0x7fffebed2700 (LWP 27398) exited]\n[Thread 0x7fffe0b9d700 (LWP 27402) exited]\nInferior 1 (process 27393) exited normally \nI will keep playing with nemiver, maybe I can get someting useful out of it.\n. main window seems to show up only when i single step the whole program\n\nand settings schema does contain shell-argument\n\n. ",
    "buffovich": "I had similar kind of problems with screen tool.\n2013/8/1 TomasTomecek notifications@github.com\n\nUnfortunately, vi(m) is absolutely unusable. I couldn't even navigate\nthrough the file, insert space or use any commands in command mode.\nI experienced similar problems with less or man programs. Is there a\nproblem in finalterm with interactive shell programs (midnightcommander was\npretty much the same)?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/157\n.\n. \n",
    "maandree": "Any graphical program that do not check for resize.\nOne example, that could use the latter part: ponysay\n. Actually, ponysay truncates the output if it is wider then the terminal so that it is not wrapped and distorted.\nCustom escape sequencies for controlling final term's special functions could be useful. If you develop a program you can use them when final term is used, and if a program needs it to run well in final term that it can be patch by someone how uses final term.\n. ",
    "TingPing": "\nAwesome! You caught this on the day it was published.\n\nWell I was the one that published it ;)\n. Odd, I ran it on 19 without issue.\n. Existing.\n. Did you try both 18 and 19?\n. CentOS is far too old for finalterm to build, have to wait for RHEL7 to come out.\n. @keramidasceid Does just gcc work? I don't see why a vala app would require c++.\n. ",
    "keramidasceid": "I installed final term successfully to Fedora 19. I believe this pull request should get accepted since everything seems to works fine. Also, it would be nice if someone created an rpm package for Fedora.\n. @p-e-w I used the exact instructions mentioned on the Pull Request. I just had to add gcc-c++ on line 67.\n. There is already a PR for Fedora #167 \n. This is relevant to #167 \n. Should, also include gcc-c++ . It is not needed by finalterm but if not included, cmake during build reports:\nCMake Error: your CXX compiler: \"CMAKE_CXX_COMPILER-NOTFOUND\" was not found.   Please set CMAKE_CXX_COMPILER to a valid compiler path or name.\n. gcc-c++ can be omitted by using the PR #224 \n. ",
    "jokeyrhyme": "Anyone who is security-conscious should avoid VTE-based terminals:\nhttp://www.climagic.com/bugreports/libvte-scrollback-written-to-disk.html\nSo on that score alone, Final Term looks like it way ahead of Pantheon Terminal.\n. Should I try this again with Mx 1.4?\n. Urgh, I'm getting weird compile errors related to my headers for glib-2.0. I'm not sure Mx 1.4 is compatible with my system.\n/usr/include/glib-2.0/glib/gmem.h:136:16: error: expected expression before ')' token\n  (struct_type *) (G_GNUC_EXTENSION ({   \\\n../mx/mx-deform-texture.c: In function 'mx_deform_texture_init_arrays':\n../mx/mx-deform-texture.c:496:3: error: unknown type name 'GLushort'\n   GLushort *idx, *bf_idx;\n   ^\n../mx/mx-deform-texture.c:498:3: error: unknown type name 'GLushort'\n   GLushort *static_indices, *static_bf_indices;\nI don't know what's different going from Mx 1.4 to 2.0, but I think it might be better for me to wait until the ArchLinux maintainer for this gets a look.\nIs it infeasible to support both versions of Mx? Is moving to Mx 2.0 (when it is stable) on the roadmap?\n. @GGRn2 's AUR package for MX 1.4 is here: https://aur.archlinux.org/packages/mx/\nIt builds and installs fine for me. Yay!\nThe FinalTerm AUR package is here: https://aur.archlinux.org/packages/finalterm-git/\nThere was a sed line in the PKGBUILD file replacing references to mx-1.0 with mx-2.0, which I deleted. This now builds and install fine too. FinalTerm now launches and seems to be working.\nThanks! I'll close this now.\n. ",
    "John-Appleseed": "How does one destroy a menubar?\nIs there a gnome setting to remove the white bar?\n\n. ",
    "eegilbert": "I ran into this using Ubuntu 13.x. Having not used cmake much before, I did some reading and as pointed out above, vala is a compiler that needs to be present to assist with the cmake process. I also needed to add intltool before cmake would process sucessfully.\n. Roger that. Thank you!\nErric\n\nOn Nov 5, 2013, at 6:10 AM, Rodrigo Dlugokenski notifications@github.com wrote:\nI think it's related to #208\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "andycds": "Ok.\n2013/8/24 Philipp Emanuel Weidmann notifications@github.com\n\nThank you for your contribution!\nBecause of the still fluctuating nature of Final Term's localizable\nstrings, I have decided not to merge any more localizations into master at\nthis point. Instead, we track them at\nhttps://translations.launchpad.net/finalterm/trunk/+pots/finalterm.\nI'd appreciate if you could upload your translation there. When an actual\nrelease is packaged, there will be a final call for translations and all\nexisting translations will be merged.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/pull/173#issuecomment-23204140\n.\n. \n",
    "lanxu": "Whoops. For some reason I never got notification on this issue. Nevertheless, the echo command works just fine so this is some sort of special case. The latest git build still has this issue. \n. ",
    "steveno": ":+1: \n. Just as a friendly tip, output like that is probably better served through a gist. \nhttps://gist.github.com/\n. This is a duplicate of Issue #112 \n. FYI, If you want to prevent linking to the first 23 issues, you can wrap the output in < pre > tags. \n. This is part of #121 \n. Guessing this is similar/related too #208 \n. @carli2 no, that's right. The .. only tells cmake where to read the CMakeList.txt files, not where it generates the new make files.\n. You get that message upon attempting the make command?\n. Can you put up a gist maybe of your console output?\n. I'm using Fedora (19 ATM). It works for me; I use that same sequence of commands on one of my own projects as well.\nI'm guessing you've got a system variable that's being overloaded; causing this to break.\n. What version of libgee does Cmake show you using?\nOn Feb 15, 2014, at 5:31 AM, Baudouin Feildel notifications@github.com wrote:\n\nI just tried to get and install finalterm from the AUR and I get his error when compiling :\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /tmp/yaourt-tmp-baudouin/aur-finalterm-git/src/finalterm\n[  3%] Generating src/FinalTerm.c, src/Terminal.c, src/TerminalStream.c, src/TerminalOutput.c, src/CharacterAttributes.c, src/TerminalView.c, src/LineView.c, src/TerminalWidget.c, src/NestingContainer.c, src/Autocompletion.c, src/NotifyingList.c, src/ScrollableListView.c, src/Utilities.c, src/SettingsWindow.c, src/TextMenu.c, src/ColorScheme.c, src/Theme.c, src/KeyBindings.c, src/Command.c, src/Settings.c, src/Metrics.c\n/tmp/yaourt-tmp-baudouin/aur-finalterm-git/src/finalterm/src/TerminalView.vala:572.10-572.42: error: The type name `Gee.SortedMap' could not be found\n    private Gee.SortedMap y_index = new Gee.TreeMap();\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nCompilation failed: 1 error(s), 0 warning(s)\nI don't know if it's a bug, or if it's due to my Arch installation, but I think it can help so decided to fill a bug here.\nThank's for your help, and thanks for your really great work (Finalterm looks gorgeous even before installing it :p )\n\u2014\nReply to this email directly or view it on GitHub.\n. The build files don't say it, but you'll probably need at least version 8 or so for the build to work. The Cmake file should probably do a better job of enforcing minimums.\n. If it's the generated C code that's breaking I would guess it's a Vala bug. Not FinalTerm\n. \n",
    "letheed": "Thank you for implementing that !\n. ",
    "fitojb": "@Lasall @p-e-w Well, if you wanted you could still merge it, then Launchpad would automatically import it and integrate it with Rosetta without problems. Y'know, I kind of dislike translating there (for the frequent timeouts).\n. ",
    "Z-Shang": "This should be the same issue as vim and other ncurses based programs                                                                                                                                                                                                                                                                           Sent from my BlackBerry 10 smartphone.                                                                                                                                                                                                                                        From: neonmagnetsSent: Saturday, September 7, 2013 5:20 PMTo: p-e-w/finaltermReply To: p-e-w/finaltermSubject: [finalterm] Cursor is confused when running nano (#184)As you can see it starts writing in a weird place, and when pressing ctrl x to exit it doesn't display the save/don't save text properly either.\n\u2014Reply to this email directly or view it on GitHub.\n. You may want to try tmux instead, that's what I did after found screen\ndoesn't work properly\n\nFree Source, Free Mind\nOn Fri, Jan 17, 2014 at 7:55 AM, Jacob notifications@github.com wrote:\n\nGNU Screen and the clear command don't behave quite as expected, they\nleave tearing and garbage text, the cursor also gets lost.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/247\n.\n. \n",
    "cereal": "I noticed similar things in vim.. it just looks awfully buggy .. everything\nis messed up and the text I write isn't display correctly in the sense of\nappearance\nAm 09.09.2013 18:37 schrieb \"irdial\" notifications@github.com:\n\nhtop in Final Term does not display correctly; when the window size is\ndefault, all the data is contained in three lines. Resizing the window\ncauses the data to display in a number of different odd ways.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "fredmo": "valgrind /usr/bin/finalterm\n==7001== Memcheck, a memory error detector\n==7001== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.\n==7001== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info\n==7001== Command: /usr/bin/finalterm\n==7001== \n==7001== Conditional jump or move depends on uninitialised value(s)\n==7001==    at 0xB5D74E0: inflateReset2 (in /lib/x86_64-linux-gnu/libz.so.1.2.3.4)\n==7001==    by 0xB5D75D8: inflateInit2_ (in /lib/x86_64-linux-gnu/libz.so.1.2.3.4)\n==7001==    by 0xC7A10D3: png_create_read_struct_2 (in /lib/x86_64-linux-gnu/libpng12.so.0.46.0)\n==7001==    by 0x131CF869: ??? (in /usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders/libpixbufloader-png.so)\n==7001==    by 0x7D3CCC1: ??? (in /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so.0.2600.1)\n==7001==    by 0x7D3D7F7: gdk_pixbuf_loader_close (in /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so.0.2600.1)\n==7001==    by 0x7D399F8: ??? (in /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so.0.2600.1)\n==7001==    by 0x7D3B2B9: gdk_pixbuf_new_from_stream (in /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so.0.2600.1)\n==7001==    by 0x5B3FEFA: gtk_css_image_url_parse (gtkcssimageurl.c:100)\n==7001==    by 0x5B3E5DD: gtk_css_image_new_parse (gtkcssimage.c:378)\n==7001==    by 0x5B4CAE0: css_image_value_parse (gtkcssstylepropertyimpl.c:376)\n==7001==    by 0x5B4C1DB: gtk_css_style_property_parse_value (gtkcssstyleproperty.c:214)\n==7001== \n==7001== Conditional jump or move depends on uninitialised value(s)\n==7001==    at 0xB5D74E0: inflateReset2 (in /lib/x86_64-linux-gnu/libz.so.1.2.3.4)\n==7001==    by 0xB5D75D8: inflateInit2 (in /lib/x86_64-linux-gnu/libz.so.1.2.3.4)\n==7001==    by 0xC7A10D3: png_create_read_struct_2 (in /lib/x86_64-linux-gnu/libpng12.so.0.46.0)\n==7001==    by 0x131D0165: ??? (in /usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders/libpixbufloader-png.so)\n==7001==    by 0x7D3AA5D: ??? (in /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so.0.2600.1)\n==7001==    by 0x7D3AD4B: gdk_pixbuf_new_from_file (in /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so.0.2600.1)\n==7001==    by 0x5B4AED3: pattern_value_parse (gtkcssstylefuncs.c:783)\n==7001==    by 0x5B3D60F: gtk_css_custom_property_parse_value (gtkcsscustomproperty.c:61)\n==7001==    by 0x5B43DC8: gtk_css_provider_load_internal (gtkcssprovider.c:2161)\n==7001==    by 0x5B4400E: gtk_css_provider_load_internal (gtkcssprovider.c:1888)\n==7001==    by 0x5B45025: gtk_css_provider_load_from_path (gtkcssprovider.c:2553)\n==7001==    by 0x5B452A7: gtk_css_provider_get_named (gtkcssprovider.c:2730)\n==7001== \n==7001== Invalid read of size 4\n==7001==    at 0xA5280D3: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA52A464: FcConfigFilename (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DA15: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533176: FcInitLoadConfig (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533265: FcInitLoadConfigAndFonts (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533484: FcInit (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA52887C: FcConfigGetCurrent (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA52A22F: FcConfigSubstituteWithPat (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0x98D4ECF: ??? (in /usr/lib/x86_64-linux-gnu/libpangocairo-1.0.so.0.3000.0)\n==7001==    by 0xA2FFE9B: ??? (in /usr/lib/x86_64-linux-gnu/libpangoft2-1.0.so.0.3000.0)\n==7001==    by 0x636586C: ??? (in /usr/lib/x86_64-linux-gnu/libpango-1.0.so.0.3000.0)\n==7001==    by 0x63663B7: pango_itemize_with_base_dir (in /usr/lib/x86_64-linux-gnu/libpango-1.0.so.0.3000.0)\n==7001==  Address 0x18ba6194 is 20 bytes inside a block of size 22 alloc'd\n==7001==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==7001==    by 0xA52802C: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA52A464: FcConfigFilename (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DA15: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533176: FcInitLoadConfig (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533265: FcInitLoadConfigAndFonts (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533484: FcInit (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA52887C: FcConfigGetCurrent (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA52A22F: FcConfigSubstituteWithPat (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0x98D4ECF: ??? (in /usr/lib/x86_64-linux-gnu/libpangocairo-1.0.so.0.3000.0)\n==7001==    by 0xA2FFE9B: ??? (in /usr/lib/x86_64-linux-gnu/libpangoft2-1.0.so.0.3000.0)\n==7001==    by 0x636586C: ??? (in /usr/lib/x86_64-linux-gnu/libpango-1.0.so.0.3000.0)\n==7001== \n==7001== Invalid read of size 4\n==7001==    at 0xA5280E8: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA52A464: FcConfigFilename (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DA15: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xDC506F3: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC51950: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC4E7C6: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5017A: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5375C: XML_ParseBuffer (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xA53DB70: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533176: FcInitLoadConfig (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533265: FcInitLoadConfigAndFonts (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==  Address 0x18bad680 is 16 bytes inside a block of size 18 alloc'd\n==7001==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==7001==    by 0xA52802C: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA52A464: FcConfigFilename (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DA15: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xDC506F3: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC51950: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC4E7C6: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5017A: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5375C: XML_ParseBuffer (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xA53DB70: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533176: FcInitLoadConfig (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001== \n==7001== Invalid read of size 4\n==7001==    at 0xA5280E8: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DA15: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DE77: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xDC506F3: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC51950: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC4E7C6: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5017A: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5375C: XML_ParseBuffer (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xA53DB70: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533176: FcInitLoadConfig (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533265: FcInitLoadConfigAndFonts (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==  Address 0x18bc3b38 is 40 bytes inside a block of size 42 alloc'd\n==7001==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==7001==    by 0xA52802C: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DA15: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DE77: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xDC506F3: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC51950: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC4E7C6: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5017A: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5375C: XML_ParseBuffer (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xA53DB70: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533176: FcInitLoadConfig (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001== \n==7001== Invalid read of size 4\n==7001==    at 0xA5280D3: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DA15: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DE77: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xDC506F3: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC51950: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC4E7C6: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5017A: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5375C: XML_ParseBuffer (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xA53DB70: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533176: FcInitLoadConfig (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533265: FcInitLoadConfigAndFonts (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==  Address 0x18bf7344 is 36 bytes inside a block of size 39 alloc'd\n==7001==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==7001==    by 0xA52802C: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DA15: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DE77: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xDC506F3: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC51950: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC4E7C6: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5017A: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5375C: XML_ParseBuffer (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xA53DB70: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA533176: FcInitLoadConfig (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001== \n==7001== Invalid read of size 4\n==7001==    at 0xA5280E8: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DA15: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xDC506F3: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC51950: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC4E7C6: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5017A: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5375C: XML_ParseBuffer (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xA53DB70: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DE77: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xDC506F3: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==  Address 0x18c1d058 is 24 bytes inside a block of size 27 alloc'd\n==7001==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==7001==    by 0xA52802C: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DA15: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xDC506F3: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC51950: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC4E7C6: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5017A: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5375C: XML_ParseBuffer (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xA53DB70: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DE77: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001== \n==7001== Invalid read of size 4\n==7001==    at 0xA5280D3: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA52A464: FcConfigFilename (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DA15: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xDC506F3: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC51950: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC4E7C6: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5017A: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5375C: XML_ParseBuffer (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xA53DB70: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DE77: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==  Address 0x18c250c4 is 20 bytes inside a block of size 22 alloc'd\n==7001==    at 0x4C2B6CD: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==7001==    by 0xA52802C: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA52A464: FcConfigFilename (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DA15: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53E0FD: ??? (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xDC506F3: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC51950: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC4E7C6: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5017A: ??? (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xDC5375C: XML_ParseBuffer (in /lib/x86_64-linux-gnu/libexpat.so.1.5.2)\n==7001==    by 0xA53DB70: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001==    by 0xA53DE77: FcConfigParseAndLoad (in /usr/lib/x86_64-linux-gnu/libfontconfig.so.1.4.4)\n==7001== \n* Message: TerminalOutput.vala:296: Command mode entered\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* Message: Command updated: ''\n* (finalterm:7001): WARNING _: TerminalOutput.vala:292: Command start control sequence received while already in command mode\n==7001== Conditional jump or move depends on uninitialised value(s)\n==7001==    at 0x7B02831: cogl_framebuffer_read_pixels_into_bitmap (in /usr/lib/x86_64-linux-gnu/libcogl.so.9.1.2)\n==7001==    by 0x7ACAB4B: cogl_read_pixels (in /usr/lib/x86_64-linux-gnu/libcogl.so.9.1.2)\n==7001==    by 0x537AE47: ??? (in /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0.1200.2)\n==7001==    by 0x535253E: ??? (in /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0.1200.2)\n==7001==    by 0x535DFF9: ??? (in /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0.1200.2)\n==7001==    by 0x53774B7: ??? (in /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0.1200.2)\n==7001==    by 0x535E794: ??? (in /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0.1200.2)\n==7001==    by 0x723BD52: g_main_context_dispatch (gmain.c:2539)\n==7001==    by 0x723C09F: g_main_context_iterate.isra.23 (gmain.c:3146)\n==7001==    by 0x723C163: g_main_context_iteration (gmain.c:3207)\n==7001==    by 0x6CEDC93: g_application_run (gapplication.c:1507)\n==7001==    by 0x411B4C: final_term_main (in /usr/bin/finalterm)\n==7001== \n_ Message: Command updated: ''\n* Message: Command updated: 'l'\n** Message: Command updated: 'l'\n==7001== Invalid read of size 8\n==7001==    at 0x1534E05B: ??? (in /usr/lib/x86_64-linux-gnu/dri/i965_dri.so)\n==7001==    by 0x153457FF: ??? (in /usr/lib/x86_64-linux-gnu/dri/i965_dri.so)\n==7001==    by 0x1532E8B1: ??? (in /usr/lib/x86_64-linux-gnu/dri/i965_dri.so)\n==7001==    by 0x1531B7C6: ??? (in /usr/lib/x86_64-linux-gnu/dri/i965_dri.so)\n==7001==    by 0x156EF4C8: ??? (in /usr/lib/x86_64-linux-gnu/libdricore9.0.0.so.1.0.0)\n==7001==    by 0x7AFEE0A: ??? (in /usr/lib/x86_64-linux-gnu/libcogl.so.9.1.2)\n==7001==    by 0x7AFEAE4: ??? (in /usr/lib/x86_64-linux-gnu/libcogl.so.9.1.2)\n==7001==    by 0x7AFE974: ??? (in /usr/lib/x86_64-linux-gnu/libcogl.so.9.1.2)\n==7001==    by 0x7AFFBC7: ??? (in /usr/lib/x86_64-linux-gnu/libcogl.so.9.1.2)\n==7001==    by 0x7B0240F: cogl_framebuffer_clear4f (in /usr/lib/x86_64-linux-gnu/libcogl.so.9.1.2)\n==7001==    by 0x53768B5: ??? (in /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0.1200.2)\n==7001==    by 0x6FB4EC9: _g_closure_invoke_va (gclosure.c:840)\n==7001==  Address 0x230 is not stack'd, malloc'd or (recently) free'd\n==7001== \n==7001== \n==7001== Process terminating with default action of signal 11 (SIGSEGV)\n==7001==  Access not within mapped region at address 0x230\n==7001==    at 0x1534E05B: ??? (in /usr/lib/x86_64-linux-gnu/dri/i965_dri.so)\n==7001==    by 0x153457FF: ??? (in /usr/lib/x86_64-linux-gnu/dri/i965_dri.so)\n==7001==    by 0x1532E8B1: ??? (in /usr/lib/x86_64-linux-gnu/dri/i965_dri.so)\n==7001==    by 0x1531B7C6: ??? (in /usr/lib/x86_64-linux-gnu/dri/i965_dri.so)\n==7001==    by 0x156EF4C8: ??? (in /usr/lib/x86_64-linux-gnu/libdricore9.0.0.so.1.0.0)\n==7001==    by 0x7AFEE0A: ??? (in /usr/lib/x86_64-linux-gnu/libcogl.so.9.1.2)\n==7001==    by 0x7AFEAE4: ??? (in /usr/lib/x86_64-linux-gnu/libcogl.so.9.1.2)\n==7001==    by 0x7AFE974: ??? (in /usr/lib/x86_64-linux-gnu/libcogl.so.9.1.2)\n==7001==    by 0x7AFFBC7: ??? (in /usr/lib/x86_64-linux-gnu/libcogl.so.9.1.2)\n==7001==    by 0x7B0240F: cogl_framebuffer_clear4f (in /usr/lib/x86_64-linux-gnu/libcogl.so.9.1.2)\n==7001==    by 0x53768B5: ??? (in /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0.1200.2)\n==7001==    by 0x6FB4EC9: _g_closure_invoke_va (gclosure.c:840)\n==7001==  If you believe this happened as a result of a stack\n==7001==  overflow in your program's main thread (unlikely but\n==7001==  possible), you can try to increase the size of the\n==7001==  main thread stack using the --main-stacksize= flag.\n==7001==  The main thread stack size used in this run was 8388608.\n==7001== \n==7001== HEAP SUMMARY:\n==7001==     in use at exit: 63,002,501 bytes in 76,981 blocks\n==7001==   total heap usage: 311,403 allocs, 234,422 frees, 100,867,959 bytes allocated\n==7001== \n==7001== LEAK SUMMARY:\n==7001==    definitely lost: 80,034 bytes in 51 blocks\n==7001==    indirectly lost: 83,902 bytes in 1,305 blocks\n==7001==      possibly lost: 59,665,353 bytes in 58,186 blocks\n==7001==    still reachable: 3,173,212 bytes in 17,439 blocks\n==7001==         suppressed: 0 bytes in 0 blocks\n==7001== Rerun with --leak-check=full to see details of leaked memory\n==7001== \n==7001== For counts of detected and suppressed errors, rerun with: -v\n==7001== Use --track-origins=yes to see where uninitialised values come from\n==7001== ERROR SUMMARY: 46 errors from 10 contexts (suppressed: 2 from 2)\nProcessus arr\u00eat\u00e9\nsah0027@sahnlpt0160:~$finalterm --version\nFinal Term 0.1\n. ",
    "andredasilvapinto": "I'm also getting segmentation faults whenever I try to type anything in the terminal:\nandresp@lopo0030:~$ finalterm\n** Message: Partially supported control sequence: '\\u001b]0;andresp@lopo0030: ~\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n** Message: TerminalOutput.vala:386: Command mode entered\nSegmentation fault (core dumped)\nUsing Ubuntu 14.04.1 LTS.\n. Does anyone else have this problem?\n. ",
    "sgnn7": "@p-e-w Dump of the file below:\njson\n{  \"text\" : \"ls\",  \"uses\" : 7,  \"last-used\" : 1379196977}\n{  \"text\" : \"ls -la\",  \"uses\" : 3,  \"last-used\" : 1379197021}\n{  \"text\" : \"ls -w\",  \"uses\" : 1,  \"last-used\" : 1373333560}\n{  \"text\" : \"\",  \"uses\" : 4,  \"last-used\" : 1379197037}\n{  \"text\" : \"stat 'VirtualBox VMs'\",  \"uses\" : 1,  \"last-used\" : 1373333589}\n{  \"text\" : \"whois localhost\",  \"uses\" : 1,  \"last-used\" : 1373333656}\n{  \"text\" : \"fdisk -l\",  \"uses\" : 1,  \"last-used\" : 1373333666}\n{  \"text\" : \"man stuff\",  \"uses\" : 1,  \"last-used\" : 1373333671}\n{  \"text\" : \"man man\",  \"uses\" : 1,  \"last-used\" : 1373333673}\n{  \"text\" : \"cat ~/.\\n./                    .gnome2_private/      .pulse-cookie\\n../                   .gnome-desktop/       .purple/\\n.adobe/               .gnupg/               .putty/\\n.android/             .gphoto/              .screenlets/\\n.aptitude/            .gstreamer-0.10/      .ssh/\\n.arista/              .gtk-recordmydesktop  .steam/\\n.bash_history         .gvfs/                .steampath\\n.bash_logout          .ICEauthority         .steampid\\n.bashrc               .java/                .synaptic/\\n.cache/               .lesshst              .synergy.conf\\n.config/              .lgames/              .thumbnails/\\n.cups/                .local/               .tmux.conf\\n.dbus/                .macromedia/          .vim/\\n.dropbox/             .minirc.dfl           .vim-fuf-data/\\n.dropbox-dist/        .mozilla/             .viminfo\\n.ecryptfs/            .ncmpcpp/             .vimrc\\n.emacs.d/             .netrc                .VirtualBox/\\n.endlessm/            .netsurf/             .w3m/\\n.epiphany             .nv/                  .windows-serial\\n.gconf/               .nvidia-settings-rc   .wine/\\n.gimp-2.8/            .pki/                 .wine-browser/\\n.gitconfig            .PlayOnLinux/         .Xauthority\\n.gitignore            .Private/             .xerox/\\n.gitk                 .profile              .xscreensaver\\n.gksu.lock            .projectM/            .xsession-errors\\n.gnome2/              .pulse/               \\nsg@feather:~$ cat ~/.xsession-errors\",  \"uses\" : 1,  \"last-used\" : 1373333701}\n{  \"text\" : \"cd checkout/\",  \"uses\" : 1,  \"last-used\" : 1378392854}\n{  \"text\" : \"cvm\",  \"uses\" : 1,  \"last-used\" : 1378392860}\n{  \"text\" : \"cd \\n.adobe/                       .mame/\\n.android/                     .mozilla/\\napps/                         Music/\\n.aptitude/                    My Games/\\n.arista/                      My GCompris/\\n.avidemux/                    .ncmpcpp/\\nbin/                          .netsurf/\\n.cache/                       .nv/\\ncheckout/                     .openshot/\\ncisco/                        Pictures/\\n.config/                      .pki/\\n.cups/                        .PlayOnLinux/\\n.dbus/                        PlayOnLinux's virtual drives/\\nDesktop/                      .Private/\\nDocuments/                    .projectM/\\nDownloads/                    .pulse/\\n.dropbox/                     .purple/\\n.dropbox-dist/                .putty/\\n.ecryptfs/                    .screenlets/\\n.emacs.d/                     .ssh/\\n.endlessm/                    .ssh_old/\\n.gconf/                       .steam/\\n.gimp-2.8/                    .stellarium/\\nsg@feather:~$ cd checkout/\",  \"uses\" : 1,  \"last-used\" : 1378392909}\n{  \"text\" : \"stat 'gsd-debug-randr'\",  \"uses\" : 1,  \"last-used\" : 1378722212}\n{  \"text\" : \"stat 'install.sh'\",  \"uses\" : 1,  \"last-used\" : 1379196984}\n{  \"text\" : \"^C\",  \"uses\" : 2,  \"last-used\" : 1379604158}\n{  \"text\" : \"nano 'usermenu_v0.2.ogv'\",  \"uses\" : 1,  \"last-used\" : 1379197030}\n{  \"text\" : \"sudo apt-get update\",  \"uses\" : 1,  \"last-used\" : 1379298763}\n{  \"text\" : \"sudo apt-get dist-upgrade\",  \"uses\" : 2,  \"last-used\" : 1379603835}\n{  \"text\" : \"sudo apt-get up\",  \"uses\" : 1,  \"last-used\" : 1379603482}\n{  \"text\" : \"sudo apt-get up\\nupdate   upgrade  \\nsg@feather:~$ sudo apt-get update\",  \"uses\" : 1,  \"last-used\" : 1379603491}\n{  \"text\" : \"tmux\",  \"uses\" : 1,  \"last-used\" : 1379604147}\n. @steveno Thanks for the comment. Closing as such.\n. @p-e-w To me it's only monochromatic shades. I guess if the default text color was green and the rest unchanged it would look a bit better, though I'm not sure if the scheme is capable of handling that.\nTomorrow scheme (most schemes look similar to this):\n\nGreen Screen:\n\n. ",
    "Holzhaus": "Possibly related: Issuing commands or pressing the return key too fast, the cursor will be below the currently viewable area. If I just press the return key multiple times in a short period of time, there will be strange newlines.\nVideo: http://webmup.com/u6Agm/\n. I can reproduce this behaviour in FinalTerm 0.1.\n. Using the up arrow key causes the cursor to jump back into the output of previous commands.\nSee this recording: http://webmup.com/qIvAE/\n. ",
    "Lenneth006": "I add mx stable version in archlinux aur so we can use finalterm again!\n. Yep, i just add it :). Still wait for the finalterm maintainer to update finalterm Aur package for automatic build.\n. Thanks, i replace the git version of mx by the stable one (1.4.7) and that's work.\n. ",
    "kolewu": "One can also fix the signature with the following patch and use MX-2.0:\n``` diff\ndiff --git a/src/TerminalView.vala b/src/TerminalView.vala\nindex 0bfa3eb..c8002a7 100644\n--- a/src/TerminalView.vala\n+++ b/src/TerminalView.vala\n@@ -572,7 +572,7 @@ public class LineContainer : Clutter.Actor, Mx.Scrollable {\n    public Mx.Adjustment vertical_adjustment { owned get; set; default = new Mx.Adjustment(); }\n\n\npublic void get_adjustments(out unowned Mx.Adjustment? hadjustment, out unowned Mx.Adjustment? vadjustment) {\npublic void get_adjustments(out unowned Mx.Adjustment hadjustment, out unowned Mx.Adjustment vadjustment) {\n                // TODO: This works, and takes care of all the owned/unowned difficulties,\n                //       but is a hack nonetheless (Vala seems to implicitly create these variables)\n                hadjustment = _horizontal_adjustment;\n```\n. \n",
    "FreeBirdLjj": "Emm, in fact I want the finalterm it automatically finds the environmental variables in my OS, not in a manual way. Maybe this is not a purpose of finalterm, but any other terminal accomplishes this function, and I think people already regards this function as a default function of terminal. So I hope the finalterm can also make it, this function should have been accomplished, and I finally decide to report it as an issue.\n. ",
    "samsullivan": "I don't see myself using finalterm as a permanent terminal until I can replace it with chsh. +1\n. As an update, I added the finalterm executable to my /etc/shells file and was then able to use chsh (followed by a reboot). However, when launching a terminal it would run the finalterm executable through the default terminal (meaning I had two terminals open).\nI found that in Linux Mint, you could add custom keybindings to overwrite ctrl + alt + T. This worked perfectly for me :)\n. I found this in /var/log/syslog:\nfinalterm[6764]: segfault at 38 ip 00007f06d99183f9 sp 00007fff5bdd0950 error 6 in nouveau_dri.so[7f06d9832000+4d5000]\n. I figured it out, I disabled the nouveau_dri.so module and installed the latest GPU drivers. FYI, I have a Nvidia GeForce GTX 560 and installed v340.58 driver.\n. ",
    "bubbles231": "\n*\\* (finalterm:17792): WARNING *_: TerminalOutput.vala:302: Command start control sequence received while already in command mode\n*_ Message: Command updated: ''\n*\\* Message: Command updated: 'l'\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007fffe942b40d in ?? () from /usr/lib/x86_64-linux-gnu/dri/i965_dri.so\n(gdb) bt\n#0  0x00007fffe942b40d in ?? () from /usr/lib/x86_64-linux-gnu/dri/i965_dri.so\n#1  0x00007fffe93f5293 in ?? () from /usr/lib/x86_64-linux-gnu/dri/i965_dri.so\n#2  0x00007fffe8f48c14 in ?? () from /usr/lib/x86_64-linux-gnu/libdricore9.1.6.so.1\n#3  0x00007ffff6d76d6e in ?? () from /usr/lib/x86_64-linux-gnu/libcogl.so.12\n#4  0x00007ffff6d76b44 in ?? () from /usr/lib/x86_64-linux-gnu/libcogl.so.12\n#5  0x00007ffff6d769d9 in ?? () from /usr/lib/x86_64-linux-gnu/libcogl.so.12\n#6  0x00007ffff6d77ebb in ?? () from /usr/lib/x86_64-linux-gnu/libcogl.so.12\n#7  0x00007ffff6d79663 in cogl_framebuffer_clear4f ()\n   from /usr/lib/x86_64-linux-gnu/libcogl.so.12\n#8  0x00007ffff7692619 in ?? () from /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0\n#9  0x00007ffff3824157 in ?? () from /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0\n#10 0x00007ffff383c248 in g_signal_emit_valist ()\n   from /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0\n#11 0x00007ffff383cf32 in g_signal_emit ()\n   from /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0\n#12 0x00007ffff763abf9 in clutter_actor_continue_paint ()\n   from /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0\n#13 0x00007ffff7640d5f in clutter_actor_paint ()\n   from /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0\n#14 0x00007ffff769659c in ?? () from /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0\n#15 0x00007ffff7631b05 in ?? () from /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0\n#16 0x00007ffff7694f83 in ?? () from /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0\n#17 0x00007ffff767b9e8 in ?? () from /usr/lib/x86_64-linux-gnu/libclutter-1.0.so.0\n#18 0x00007ffff355cea6 in g_main_context_dispatch ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#19 0x00007ffff355d1f8 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#20 0x00007ffff355d29c in g_main_context_iteration ()\n   from /lib/x86_64-linux-gnu/libglib-2.0.so.0\n#21 0x00007ffff3afa6e4 in g_application_run ()\n   from /usr/lib/x86_64-linux-gnu/libgio-2.0.so.0\n#22 0x0000000000414489 in final_term_main (args=0x7fffffffe2a8, args_length1=1)\n    at $HOME/src/github/p-e-w/finalterm/src/FinalTerm.vala:410\n#23 0x000000000041454f in main (argc=1, argv=0x7fffffffe2a8)\n    at $HOME/src/github/p-e-w/finalterm/src/FinalTerm.vala:327\n(gdb) \n\n.",
    "slang800": "just ran into the same issue... port numbers aren't counted as part of the url either:\n\n. +1 ... copy/paste is pretty important\n. ",
    "jolivares": "The following regex seems to work better:\n```\npattern = \\b(?:(?:https?|ftp)://)(?:\\S+(?::\\S)?@)?(?:(?!10(?:.\\d{1,3}){3})(?!127(?:.\\d{1,3}){3})(?!169.254(?:.\\d{1,3}){2})(?!192.168(?:.\\d{1,3}){2})(?!172.(?:1[6-9]|2\\d|3[0-1])(?:.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\x{00a1}-\\x{ffff}0-9]+-?)[a-z\\x{00a1}-\\x{ffff}0-9]+)(?:.(?:[a-z\\x{00a1}-\\x{ffff}0-9]+-?)[a-z\\x{00a1}-\\x{ffff}0-9]+)(?:.(?:[a-z\\x{00a1}-\\x{ffff}]{2,})))(?::\\d{2,5})?(?:/[^\\s]*)?\\b\n```\nI've taken it from http://mathiasbynens.be/demo/url-regex. Credits to diegoperini\n. ",
    "nsabovic": "On Ubuntu 13.10, libunity-dev pulls in libgee-dev as a dependency, which is the wrong version. For some reason, if libgee-0.8-dev and libgee-dev are both installed, the build chooses the wrong one.\nThe solution is to uninstall libgee-dev, but that means no libunity.\n. ",
    "nims11": "I got around by commenting out the lines for including unity and gee-1.0 and keeping the one for gee-0.8. Well, in my case, I didn't required any use for unity integration.\n. ",
    "AdaRoseCannon": "Just pointing out that the ubuntu ppa is still not building. \n. ",
    "guilhem": "So the best way to have Final Term on Ubuntu is to backport libgee :)\nI begin to do some stuff to build libgee on a PPA:\n- team https://launchpad.net/~libgee\n- recipe https://code.launchpad.net/~libgee/+recipe/libgee-daily\n- ppa: \n  - https://launchpad.net/~libgee/+archive/daily\n  - https://launchpad.net/~libgee/+archive/stable\nWhat we have to do:\n- create (or use) a debian folder to build libgee package from sources\n- add it in recipe\n- build packages\n- put stable package on \"stable\" ppa\n- Add this ppa as \"PPA dependencies\" for Final Term (in launchpad)\n- Profit\nIf anyone want to help me on this, please join launchpad team.\n. @p-e-w I succeed in building latest libgee... but doesn't change anything.\nThen I see in command line that you was using old gee-1.0 when unity.\nI change it to 0.8 like any other platform and it works fine!\n\n. @tyler-ball  see #253 it was link to this issue :)\n. same problem than #208 \nFix in #253 \n. ",
    "tyler-ball": "Guilhem, do you have any instructions on how to change that dependency from\n1.0 to 0.8?  I was trying to build from source locally, and got to the\npoint where I was seeing the same issues as reported by the build system.\n I would love to be able to build this locally!\nOn Thu, Feb 20, 2014 at 6:58 AM, Guilhem Lettron\nnotifications@github.comwrote:\n\n@p-e-w https://github.com/p-e-w I succeed in building latest libgee...\nbut doesn't change anything.\nThen I see in command line that you was using old gee-1.0 when unity.\nI change it to 0.8 like any other platform and it works fine!\n[image: Imgur]https://github-camo.global.ssl.fastly.net/191aca15dffafc00b31d6914b75405b594430c28/687474703a2f2f692e696d6775722e636f6d2f674d44484b37362e706e67\n\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/208#issuecomment-35629155\n.\n. \n",
    "magdalene": "Yes, it does. Sorry, I posted this before I had any time to investigate further.\nAnyway, first I tried disabling Xinerama, and noticed that with xinerama, transparency isn't working correctly, but I think that's a separate issue. Otherwise, the behavior is exactly the same.\nThen I tried switching from the proprietary fglrx graphics module to the radeon module. (And also disabled my second monitor altogether and attempted to get to the most basic configuration possible, removing most of the configuration in xorg.conf.) With the radeon module, there's no GPU artifact like you see above, but the text is still not visible after splitting. Here's what it looks like with xinerama disabled and using the radeon module (and this is exactly what it looks like with fglrx after clicking), when I start typing a command. Also, at this point finalterm is using ~50% of the CPU.\n\nPerhaps relevant is that I'm using xfce instead of gnome. \nDo you have any other suggestions? I'm really not sure which information is relevant to you here.\n. ",
    "uatec": "I have the exact same issue as the second image.\nI too am using xfce, however I just checked in Gnome and get the same issue.\n. ",
    "maiklos": "It happens on ubuntu Linux 13.10. \nI am running PPA build. I will retest later (when PPA builds is synchronized with source code repository again) \n/usr/bin/finalterm --version\nFinal Term 0.1\nmd5sum /usr/bin/finalterm \n42c48c6e6ba1b64fb9e9f80cd6c89a2d  /usr/bin/finalterm\n. ",
    "Blue-Dog-Archolite": "I am also getting this on Fedora 20. Let me know if I can provide info that will help. My stack dump looks similar to those above: \n```\n (finalterm:22275): WARNING : Unsupported control sequence: '\\u001b[?1034h' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_DEC_PRIVATE_MODE_SET)\n** Message: Command executed: 'cap production ssh'\n (finalterm:22275): WARNING : Unrecognized control sequence: '\\u001b]133;C;cap production ssh;\\u001b[K \\u000d\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_UNKNOWN)\n Message: Command executed: 'cap production ssh'\n Message: Command executed: 'cap production ssh'\n (finalterm:22275): WARNING : Unrecognized control sequence: '\\u001b]133;C;cap production \\u001b[Ks\\u000dssh;\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_UNKNOWN)\n Message: Command executed: 'cap production ssh'\n Message: Command executed: 'cap production ssh'\n (finalterm:22275): WARNING : Unrecognized control sequence: '\\u001b]133;C;cap product\\u001b[Ki\\u000dion ssh;\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_UNKNOWN)\n Message: Command executed: 'cap production ssh'\n Message: Command executed: 'cap production ssh'\n (finalterm:22275): WARNING : Unrecognized control sequence: '\\u001b]133;C;c\\u001b[Ka\\u000dap production ssh;\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_UNKNOWN)\n Message: Command executed: 'cap production ssh'\n Message: Command executed: 'cap production ssh'\n (finalterm:22275): WARNING : Unrecognized control sequence: '\\u001b]133;\\u000d;C;cap production ssh;\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_UNKNOWN)\n Message: TerminalOutput.vala:386: Command mode entered\n Message: Command updated: ''\n Message: Command updated: 'f'\n Message: Command updated: ''\n Message: Command updated: ''\n Message: Command updated: 'h'\n Message: Command updated: 'h'\n Message: Command updated: 'ht'\n Message: Command updated: 'ht'\n Message: Command updated: 'htt'\n Message: Command updated: 'htt'\n Message: Command updated: 'http'\n Message: Command updated: 'http'\n Message: Command updated: 'http:'\n Message: Command updated: 'http:'\n Message: Command updated: 'http:/'\n Message: Command updated: 'http:/'\n Message: Command updated: 'http://'\n Message: Command updated: 'http://'\n Message: Command updated: 'http://w'\n Message: Command updated: 'http://w'\n Message: Command updated: 'http://ww'\n Message: Command updated: 'http://ww'\n Message: Command updated: 'http://www'\n Message: Command updated: 'http://www'\n Message: Command updated: 'http://www.'\n Message: Command updated: 'http://www.'\n Message: Command updated: 'http://www.g'\n Message: Command updated: 'http://www.g'\n Message: Command updated: 'http://www.go'\n Message: Command updated: 'http://www.go'\n Message: Command updated: 'http://www.goo'\n Message: Command updated: 'http://www.goo'\n Message: Command updated: 'http://www.goog'\n Message: Command updated: 'http://www.goog'\n Message: Command updated: 'http://www.googl'\n Message: Command updated: 'http://www.googl'\n Message: Command updated: 'http://www.google'\n Message: Command updated: 'http://www.google'\n Message: Command updated: 'http://www.google.'\n Message: Command updated: 'http://www.google.'\n Message: Command updated: 'http://www.google.c'\n Message: Command updated: 'http://www.google.c'\n Message: Command updated: 'http://www.google.co'\n Message: Command updated: 'http://www.google.co'\n Message: Command updated: 'http://www.google.com'\n Message: Command executed: 'http://www.google.com'\n Message: Command executed: 'http://www.google.com'\n (finalterm:22275): WARNING : Unrecognized control sequence: '\\u001b]133;C;http://www.google\\u000de.com;\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_UNKNOWN)\n Message: Command executed: 'http://www.google.com'\n Message: Command executed: 'http://www.google.com'\n (finalterm:22275): WARNING : Unrecognized control sequence: '\\u001b]133;C;http\\u000dp://www.google.com;\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_UNKNOWN)\n** Message: Command executed: 'http://www.google.com'\n (finalterm:22275): WARNING : Unrecognized control sequence: '\\u001b]133;C;http://www.google.com;\\u000d;\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_UNKNOWN)\n Message: Command executed: 'http://www.google.com'\n Message: Command executed: 'http://www.google.com'\n (finalterm:22275): WARNING : Unrecognized control sequence: '\\u001b]133;C;http://ww\\u000dww.google.com;\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_UNKNOWN)\n** Message: Command executed: 'http:/) \\u001b[00m$\\u001b[00m \\u001b]133'\nATTENTION: default value of option force_s3tc_enable overridden by environment.\nCreated new window in existing browser session.\nSegmentation fault (core dumped)\n```\n. ",
    "jmittert": "The function initialize_pty gets called when get_default_for_uri is called, which causes the segfault.\nIt looks like when launch_default_for_uri is called, it uses the gLib api for creating the process fork, but when the process finishes, it still sends SIGCHLD, and the signal to handle SIGCHLD triggers, and tries to search for a child process that doesn't exist.\nIn line 231 of Terminal.vala\nvala\n// In Terminal.vala, private void initialize_pty()\n// Do not let the shell process turn defunct\n// Note that multiple child processes might have terminated simultaneously\n// as noted in http://stackoverflow.com/questions/2595503/determine-pid-of-terminated-process\nwhile ((child_pid = Posix.waitpid(-1, null, Posix.WNOHANG)) != -1) {\n    var this_terminal = terminals_by_pid.get((int)child_pid); //<-- Returns null since child_pid is 0\n    // Close channel to keep pending shell IO from triggering UI updates (and crashes)\n    // after the corresponding TerminalWidget has been removed\n    this_terminal.command_channel.shutdown(false); // <-- causes the segfault\n    this_terminal.shell_terminated();\n. I'm able to reproduce this if I don't run cmake from the build directory. If instead, I run <cmake .> in the main directory, then run <make; make clean; make> from the main directory instead of within build, the same error occurs.\n. I cloned Vreality's fork into another directory and can reproduce the bug. I'm not sure if it's related, but I've got some interesting behaviour with aliasing ls, which might explain Carnassial's results.\n\n. ",
    "abhinav-upadhyay": "What sort of work is required to make finalterm properly work with terminal applications like vim? For a lot of us, vim is a strict requirement in order to start using finalterm completely. I wouldn't mind giving a hand if I know what is to be done in order to fix this.\n. ",
    "FabienAndre": "Your hack in CMakeList.txt is not the way to go. keybinder-3.0 is actually different than keybinder ( 0.3.0 ). keybinder-3.0 target gtk-3.0. It uses different binaries, different pkgconfig name.\nThere is an ITP (Intent To Package) for Debian http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=698638\nMeanwhile, you can try to compile it from source, or give a look to ubuntu packages http://packages.ubuntu.com/search?keywords=libkeybinder-3.0-dev&searchon=names&suite=all&section=all\n. ",
    "alexwhitman": "Already requested in #220.\n. ",
    "jcelerier": "Hello,\nOn Debian Jessie : \ndpkg -l|grep libgee                                                              !2302\nii  libgee-0.8-2:amd64                        0.10.5-1                        amd64        GObject based collection library\nii  libgee-0.8-dev                            0.10.5-1                        amd64        GObject based collection library (development files)\nBut I still have the error : \n/home/jm/git/finalterm/src/TerminalView.vala:664.46-664.59: error: The type name `Clutter.Matrix' could not be found\n    protected override void apply_transform(ref Clutter.Matrix matrix) {\n                                            ^^^^^^^^^^^^^^\n. ",
    "pszalanski": "Yes it is. I thought that I had looked through the issues, but this one seems to have eluded me. Sorry about the duplicate.\n. ",
    "pmontrasio": "This is another way ctrl+a breaks: type some 30-40 random characters with spaces in it. Press ctrl-a. It doesn't get back to the start of the line. It stops at a few characters from the beginning.\nI'd paste here an example but it seems that copy and paste don't work yet. That's a show stopper but I'm reporting this bug anyway because finalterm has the potential to become my terminal of choice (when copy and paste will work).\nBtw, I just installed from the ubuntu ppa. It would be nice if the About Final Term menu would report the git commit it was built from.\n. Thank you. I did that and it works. The smooth vertical scrolling is not as annoying.\n. ",
    "schwabenchris": "Hey hey,\nseems to be a placeholder for a unicode char. Thunar says \"invaild code\" and replaced it with a black square including a question mark. Tuxcmd - same problem. Propably I should mention I'm using zsh-shell. Zsh turns it into \\253. Bash is turns it into ?\n. ",
    "AlexanderMB": "This is also the case when I change the height of the window from the preferences. In order to get the correct height I have to close and reopen finalterm.\n. ",
    "White-Wolf": "I can confirm this issue. In addition, it seems changing almost anything (color scheme and theme dropdowns seem to be the only things that don't) in the Preferences window causes the window rows to decrease\n. I have been trying to compile from source to test but have been running into compile-time errors around Clutter and Gee. I believe I have all required packages since cmake doesn't fail, but maybe something's misconfigured.\nmake output:\ncb@DevVM-ubuntu:~/Development/finalterm-master/build$ make\n[  3%] Generating src/FinalTerm.c, src/Terminal.c, src/TerminalStream.c, src/TerminalOutput.c, src/CharacterAttributes.c, src/TerminalView.c, src/LineView.c, src/TerminalWidget.c, src/NestingContainer.c, src/Autocompletion.c, src/NotifyingList.c, src/ScrollableListView.c, src/Utilities.c, src/SettingsWindow.c, src/TextMenu.c, src/ColorScheme.c, src/Theme.c, src/KeyBindings.c, src/Command.c, src/Settings.c, src/Metrics.c\n/home/cb/Development/finalterm-master/src/TerminalView.vala:140.10-140.35: error: The type name `Clutter.PropertyTransition' could not be found\n    private Clutter.PropertyTransition blinking_animation;\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/home/cb/Development/finalterm-master/src/TerminalView.vala:572.10-572.42: error: The type name `Gee.SortedMap' could not be found\n    private Gee.SortedMap<int, Clutter.Actor> y_index = new Gee.TreeMap<int, Clutter.Actor>();\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/home/cb/Development/finalterm-master/src/TerminalView.vala:664.46-664.59: error: The type name `Clutter.Matrix' could not be found\n    protected override void apply_transform(ref Clutter.Matrix matrix) {\n                                                ^^^^^^^^^^^^^^\nCompilation failed: 3 error(s), 0 warning(s)\nmake[2]: *** [vala.stamp] Error 1\nmake[1]: *** [CMakeFiles/finalterm.dir/all] Error 2\nmake: *** [all] Error 2\ncmake output:\ncb@DevVM-ubuntu:~/Development/finalterm/build [master]$ cmake ..\n-- The C compiler identification is GNU\n-- Check for working C compiler: /usr/bin/gcc\n-- Check for working C compiler: /usr/bin/gcc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- checking for module 'unity'\n--   found unity, version 5.12.0\n-- checking for module 'libnotify'\n--   found libnotify, version 0.7.5\n-- checking for modules 'clutter-gtk-1.0;mx-1.0;keybinder-3.0;gee-1.0;unity;libnotify'\n--   found clutter-gtk-1.0, version 1.2.0\n--   found mx-1.0, version 1.4.3\n--   found keybinder-3.0, version 0.3.0\n--   found gee-1.0, version 0.6.4\n--   found unity, version 5.12.0\n--   found libnotify, version 0.7.5\n-- Found Vala: /usr/bin/valac \n-- checking for a minimum Vala version of 0.16.0\n--   found Vala, version 0.16.0\n-- Found Gettext: /usr/bin/xgettext (found version \"0.18.1\")\n-- Found Intltool: /usr/bin/intltool-extract (found version \"0.50.2\")\n-- GSettings schemas will be installed locally.\n-- GSettings shemas will be compiled.\n-- GSettings schemas will be installed into /usr/local/share/glib-2.0/schemas/\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/cb/Development/finalterm/build\n. So after taking forever to get a version of libgee >= 0.8 compiled for 12.04 (and then finding out vala already had a package on their PPA), I was finally able to try and recompile with your latest changes. Unfortunately, I am still running into compile-time errors with Clutter.\nmake output\n[  3%] Generating src/FinalTerm.c, src/Terminal.c, src/TerminalStream.c, src/TerminalOutput.c, src/CharacterAttributes.c, src/TerminalView.c, src/LineView.c, src/TerminalWidget.c, src/NestingContainer.c, src/Autocompletion.c, src/NotifyingList.c, src/ScrollableListView.c, src/Utilities.c, src/SettingsWindow.c, src/TextMenu.c, src/ColorScheme.c, src/Theme.c, src/KeyBindings.c, src/Command.c, src/Settings.c, src/Metrics.c\n/home/cb/Development/finalterm/src/TerminalView.vala:140.10-140.35: error: The type name `Clutter.PropertyTransition' could not be found\n    private Clutter.PropertyTransition blinking_animation;\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/home/cb/Development/finalterm/src/TerminalView.vala:664.46-664.59: error: The type name `Clutter.Matrix' could not be found\n    protected override void apply_transform(ref Clutter.Matrix matrix) {\n                                                ^^^^^^^^^^^^^^\nCompilation failed: 2 error(s), 0 warning(s)\nmake[2]: *** [vala.stamp] Error 1\nmake[1]: *** [CMakeFiles/finalterm.dir/all] Error 2\nmake: *** [all] Error 2\ncmake output\n-- The C compiler identification is GNU\n-- Check for working C compiler: /usr/bin/gcc\n-- Check for working C compiler: /usr/bin/gcc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- checking for module 'unity'\n--   package 'unity' not found\n-- checking for module 'libnotify'\n--   found libnotify, version 0.7.5\n-- checking for modules 'clutter-gtk-1.0;mx-1.0;keybinder-3.0;gee-0.8;libnotify'\n--   found clutter-gtk-1.0, version 1.2.0\n--   found mx-1.0, version 1.4.3\n--   found keybinder-3.0, version 0.3.0\n--   found gee-0.8, version 0.10.5\n--   found libnotify, version 0.7.5\n-- Found Vala: /usr/bin/valac \n-- checking for a minimum Vala version of 0.16.0\n--   found Vala, version 0.16.0\n-- Found Gettext: /usr/bin/xgettext (found version \"0.18.1\")\n-- Found Intltool: /usr/bin/intltool-extract (found version \"0.50.2\")\n-- GSettings schemas will be installed locally.\n-- GSettings shemas will be compiled.\n-- GSettings schemas will be installed into /usr/local/share/glib-2.0/schemas/\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/cb/Development/finalterm/build\nNot sure  if it matters, but I've noticed that cmake cannot find the Unity dev package, yet that doesn't break the build output. I've tried installing libunity-core-5.0-dev but that package requires the old gir1.2-gee-1.0 (gee 0.6.8) package, which causes conflicts with gee 0.10.5.\n. ",
    "g4ch": "Yes i'm using PPA in Ubuntu.\nSorry for the false report .... \n. ",
    "carli2": "@steveno but when I follow exactly these instructions, I get an error \"no Makefile in this folder\"\n. [17:05:55]\ncarli:~$ cd sources/finalterm/build/\n[17:06:00]\ncarli:~/sources/finalterm/build$ cmake ..\n-- checking for module 'unity'\n--   package 'unity' not found\n-- checking for module 'libnotify'\n--   package 'libnotify' not found\n-- checking for a minimum Vala version of 0.16.0\n--   found Vala, version 0.22.1\n-- GSettings schemas will be installed locally.\n-- GSettings shemas will be compiled.\n-- GSettings schemas will be installed into /usr/local/share/glib-2.0/schemas/\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/carli/sources/finalterm\n[17:06:03]\ncarli:~/sources/finalterm/build$ make\nmake: *** Keine Targets angegeben und keine \u00bbmake\u00ab-Steuerdatei gefunden.  Schluss.\n[17:06:04]\ncarli:~/sources/finalterm/build$ ls\n[17:06:09]\ncarli:~/sources/finalterm/build$\n. I have a fedora system. Maybe there are some differences between ubuntu and fedora such that the cmakefiles don't find the correct path?\n. I fixed that by deleting CMakeCache.txt\n. ",
    "jkbbwr": "I don't want to move from screen. I like screen\nOn Fri, Jan 17, 2014 at 5:45 PM, shangzhanlin notifications@github.comwrote:\n\nYou may want to try tmux instead, that's what I did after found screen\ndoesn't work properly\n\nFree Source, Free Mind\nOn Fri, Jan 17, 2014 at 7:55 AM, Jacob notifications@github.com wrote:\n\nGNU Screen and the clear command don't behave quite as expected, they\nleave tearing and garbage text, the cursor also gets lost.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/p-e-w/finalterm/issues/247>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/247#issuecomment-32627854\n.\n. \n",
    "fxa90id": "Hi, I am using Fedora 20 with Cinnamon, and opacity works :ok: .\n. ",
    "BalamChaac": "Yeah now works. great\n. ",
    "murrayf": "Hi again,\nSorry for my last post, it was wrong. Finalterm supports dual monitor, like other gnome programs. I wrote it because when I installed for first time what I described happened.\nThanks,\nAlberto.\n. ",
    "ZWindL": "What if all by keyboard...well...forget it..\nall in visual is better\n. ",
    "AMDG2": "Cmake found gee version 0.6.8.\nHere is the full output of make : \n-- The C compiler identification is GNU 4.8.2\n-- Check for working C compiler: /usr/bin/cc\n-- Check for working C compiler: /usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Found PkgConfig: /usr/bin/pkg-config (found version \"0.28\") \n-- checking for module 'unity'\n--   found unity, version 6.12.0\n-- checking for module 'libnotify'\n--   found libnotify, version 0.7.6\n-- checking for modules 'clutter-gtk-1.0;mx-1.0;keybinder-3.0;gee-1.0;unity;libnotify'\n--   found clutter-gtk-1.0, version 1.4.4\n--   found mx-1.0, version 1.4.7\n--   found keybinder-3.0, version 0.3.0\n--   found gee-1.0, version 0.6.8\n--   found unity, version 6.12.0\n--   found libnotify, version 0.7.6\n-- Found Vala: /usr/bin/valac  \n-- checking for a minimum Vala version of 0.16.0\n--   found Vala, version 0.22.1\n-- Found Gettext: /usr/bin/xgettext (found version \"0.18.3\") \n-- Found Intltool: /usr/bin/intltool-extract (found version \"0.50.2\") \n-- GSettings schemas will be installed locally.\n-- GSettings shemas will be compiled.\n-- GSettings schemas will be installed into /usr/share/glib-2.0/schemas/\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /tmp/yaourt-tmp-baudouin/aur-finalterm-git/src/finalterm\n[  3%] Generating src/FinalTerm.c, src/Terminal.c, src/TerminalStream.c, src/TerminalOutput.c, src/CharacterAttributes.c, src/TerminalView.c, src/LineView.c, src/TerminalWidget.c, src/NestingContainer.c, src/Autocompletion.c, src/NotifyingList.c, src/ScrollableListView.c, src/Utilities.c, src/SettingsWindow.c, src/TextMenu.c, src/ColorScheme.c, src/Theme.c, src/KeyBindings.c, src/Command.c, src/Settings.c, src/Metrics.c\n/tmp/yaourt-tmp-baudouin/aur-finalterm-git/src/finalterm/src/TerminalView.vala:572.10-572.42: error: The type name `Gee.SortedMap' could not be found\n    private Gee.SortedMap<int, Clutter.Actor> y_index = new Gee.TreeMap<int, Clutter.Actor>();\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nCompilation failed: 1 error(s), 0 warning(s)\nCMakeFiles/finalterm.dir/build.make:118: recipe for target 'vala.stamp' failed\nmake[2]: *** [vala.stamp] Error 1\nCMakeFiles/Makefile2:63: recipe for target 'CMakeFiles/finalterm.dir/all' failed\nmake[1]: *** [CMakeFiles/finalterm.dir/all] Error 2\nMakefile:116: recipe for target 'all' failed\nmake: *** [all] Error 2\n. ",
    "cerebrux": "Thanks @p-e-w for clarification :+1:  keep up the good work !\n. ",
    "Naatan": "The precise version has the dependency and installs finalterm properly. However it seems more buggy than installing Finalterm from source.\n. ",
    "gamehawk197": "The build fails on Debian for the same reason.\n. ",
    "w0land": "Same here, OS: Arch finalterm built from sources. \n. ",
    "jbohren": "@Jahsis What's in your vimrc to give you that sweet status line?\n. > Should be Vim powerline https://github.com/Lokaltog/vim-powerline\nThanks!\n. ",
    "clentfort": "Should be Vim powerline https://github.com/Lokaltog/vim-powerline\n. ",
    "Jahsis": "Yes, it is powerline as @clentfort mentioned: https://github.com/Lokaltog/powerline\n. ",
    "hanst99": "This has been posted like a gajillion times already. Interactive terminal application don't really work with finalterm right now: https://github.com/p-e-w/finalterm/issues/121\n. ",
    "yevshev": "Will an actual \"trusty\" directory be added? I think that would indeed solve the issue in ubuntu 14.04\n. ",
    "Nymerea": "Final term ppa don't work on Ubuntu 14.04, it's sad\n. ",
    "Ardakilic": "Editing ppa source to devel does not fix the issue for 14.04 at all. Same issue for me. It falls back to saucy and then cannot install a dependency package.\n. @rstreeter Hilarious! thanks to the package list you've provided, I could compile and install without issues in Ubuntu 14.04.\nThis is my dependency installation command to compile\nsudo apt-get install cmake debhelper valac-0.22 intltool libgee-0.8.2 libgee-0.8-dev libmx-dev libclutter-gtk-1.0-dev libnotify-dev libunity-dev libkeybinder-3.0-dev\n. ",
    "gnuwilliam": "I'm using Ubuntu 14.04 and got the same error. :-(\n. ",
    "huaruiwu": "I just compiled from source and installed it. It seems to be running fine on my 14.04\n. I just followed the steps in the doc and it compiled with no problems.\n. ",
    "l0k1": "Compiling from source works on Ubuntu 14.04, but using the ppa doesn't.\n. I'm currently using Fish + Terminology, and they go nicely together.\nI may give Black Screen a try, however, after seeing it here. =]\n. ",
    "alikemalocalan": "ubuntu 14.04 is not install  libcogl12.\n. ",
    "rstreeter": "If you install these packages: Build-Depends: cmake (>= 2.8), debhelper (>= 9), valac-0.18 | valac-0.20, intltool, libgee-0.8-2, libgee-0.8-dev, libmx-dev, libclutter-gtk-1.0-dev, libnotify-dev, libunity-dev, libkeybinder-3.0-dev then follow the instructions it will compile and install \n I just installed on Xubuntu 14.04\n. @kenetik you're welcome. I just did some digging.\n. @p-e-w , @IonicaBizau  I am using conky for the weather the conky setup can be found here http://fav.me/d74cplf\n. There are several config files I am using the transparent one.\n. ",
    "kenetik": "@rstreeter That's awesome, thank you! Perfect for me on 14.04 as well. This should be added to install instructions or Wiki.\nI wish I could rate your comment, thanks again!\n. ",
    "CSRedRat": "Worked?\n. ",
    "brunopereira81": "In 14.04 the 12.04 packages in the PPA are working.\nChange the 1st line in the file /etc/apt/sources.list.d/versable-finalterm-daily-trusty.list to point from trusty to precise.\nAfter that just apt-get update and apt-get install finalterm.\nAll done.\n. ",
    "muchweb": "+1 for properly adding 14.04 Trusty PPA\n. @p-e-w yes this is still absolutely correct.\n\nFor instance, in order to create two horizontal panels, you need to split them vertically. The actual split (divider) line is vertical, while panels are arranged horizontally.\nThis appeared confusing to me before, but now I think it is more logical.\n. +1 This would be brilliant\n. :+1: Application crashes when I open two panes, and type ^D in one. This does not depend on time (crashes even when used for some time).\n. ",
    "nikolay": ":+1: @bashrc @versable Can you guys look into this?\n. ",
    "timraasveld": "On Linux Mint 16 (Cinnamon), I had to install libunity9 from the Ubuntu repo in addition to changing testing (it's not trusty on Mint) to precise. All steps I took to install Finalterm:\nsudo add-apt-repository ppa:finalterm/daily\nsed -i 's/testing/precise/g' /etc/apt/sources.list.d/finalterm-daily-testing.list\necho \"deb http://nl.archive.ubuntu.com/ubuntu/ precise main\" >> /etc/apt/sources.list.d/finalterm-daily-testing.list\napt-get update\napt-get install libunity9 finalterm -y --force-yes \nsed -i '/deb http\\:\\/\\/nl\\.archive\\.ubuntu\\.com\\/ubuntu\\/ precise main/d' /etc/apt/sources.list.d/finalterm-daily-testing.list\napt-get update\nThe final commands that remove the Ubuntu repo again are important -- I cannot garuantee you that keeping the Ubuntu repo won't break anything when you install other packages!\n. ",
    "PerfectCarl": "I also wish that the ppa would include a build for trusty. \nThanks to the guys for providing the command line to install the dependencies.\nThis command line should be featured in a HOW-TO-BUILD.md.\nThe complete steps to build finalterm on trusty is\ngit clone https://github.com/p-e-w/finalterm.git\ncd finalterm\nmkdir build \ncd build\nsudo apt-get install cmake debhelper valac-0.22 intltool libgee-0.8.2 libgee-0.8-dev libmx-dev libclutter-gtk-1.0-dev libnotify-dev libunity-dev libkeybinder-3.0-dev\ncmake -DCMAKE_INSTALL_PREFIX=/usr ../\nmake\nsudo make install\nCheers,\nC.\n. ",
    "gufertum": "@PerfectCarl Thanks! That was really helpful!\n. ",
    "KingCrunch": ":+1: Although it works really fine with the packages for precise. \n``` bash\n$ cat /etc/apt/sources.list.d/finalterm-daily-trusty.list \ndeb http://ppa.launchpad.net/finalterm/daily/ubuntu precise main\ndeb-src http://ppa.launchpad.net/finalterm/daily/ubuntu trusty main\n```\n. ",
    "LeonB": "Is there something we can do to add 14.04 to the ppa?\n. ",
    "logoff": "Using precise packages in trusty worked. Why don't offering trusty packages then?\n. I'm using Ubuntu daily PPA (ppa:finalterm/daily). The problem persist.\n. OK, I read about PPA problems on this issue #258, and now I'm using new PPA (ppa:fuzzgun/finalterm). Rows and columns are correctly sized after restarting app. Thank you.\n. Thank you! @p-e-w!\n. ",
    "vaughany": "@brunopereira81 Thanks for the heads-up, I'm now using the precise PPA without problems.\n. ",
    "binarykitchen": "I do not like the idea of using precise PPA for trusty. This can lead to weird problems. Come on, who owns the PPA and will add the trusty channel?\n. @lwandrebeck Of course I search first before I write such comments. I saw that page but it doesn't work. Because PPA for trusty is missing!\n```\nW: Failed to fetch http://ppa.launchpad.net/finalterm/daily/ubuntu/dists/trusty/main/binary-amd64/Packages  404  Not Found\nW: Failed to fetch http://ppa.launchpad.net/finalterm/daily/ubuntu/dists/trusty/main/binary-i386/Packages  404  Not Found\n```\n. https://launchpad.net/~finalterm says the maintainer is him https://launchpad.net/~fuzzgun\ni will drop him a message with a link to this issue\n. Thanks heaps man - will you continue putting updates there? Automated?\n. that's a great idea @bashrc \n. @bashrc tell me, will you consider that continuous integration?\n. Okay. Will there be an automatic daily or weekly build for that ppa at https://launchpad.net/~fuzzgun/+archive/ubuntu/finalterm/+packages ?\n. hello?\n. ",
    "efouarge": "I was able to compile from source with the above directions, if someone needs help getting this setup in CI somewhere I would definitely be up for helping get this going..\n. ",
    "artmartz": "```\nOn 09/21/2014 10:42 PM, efouarge wrote:\nI was able to compile from source with the above directions, if\n    someone needs help getting this setup in CI somewhere I would\n    definitely be up for helping get this going..\n  \u2014\n    Reply to this email directly or view\n      it on GitHub.\n  {\"@context\":\"http://schema.org\",\"@type\":\"EmailMessage\",\"description\":\"View this Issue on GitHub\",\"action\":{\"@type\":\"ViewAction\",\"url\":\"https://github.com/p-e-w/finalterm/issues/258#issuecomment-56323529\",\"name\":\"View Issue\"}}\nThanks for answering!\u00a0 With the posting of  finalterm - 0.2, I was able to get\nfinalterm up and running on my Ubuntu 14.04!\u00a0 What I'm looking for\nare a manual, or some getting started help, with using the scripting\ncapability I see described in the blog.\u00a0 I would like to use\nfinalterm, together with the programming language in my database, to\nautomate certain functions.\u00a0 I'm perfectly willing to rtfm, if there\nis one?\u00a0 Can anybody point me in the correct direction?\nArt\n```\n. The last example is what I most need right now.  I tried the esc sequence, and couldn't get it to work.  Right now, I'm just trying for the linux equivelent of \"Hello World\".  I'm trying to get Final Term to execute the \"pwd\" command, so I can see the results. The first part I'm assuming would be to print:\nEscape[(ascii 133);H;pwd;\nI'm not sure about the rest of the sequence. I'm not feeding in any additional parameters, I just want to see the results of the pwd.  This is just a POC, of course.  What would the rest of the command, after the \";pwd;\" look like?\nThanks, Art\n. In case anybody was following, this is what worked, thanks to Philipp:\necho -ne '\\e]133;H;RUN_SHELL_COMMAND \"pwd\"\\a' | od -a\n0000000 esc   ]   1   3   3   ;   H   ;   R   U   N   _   S   H   E   L\n0000020   L   _   C   O   M   M   A   N   D  sp   \"   p   w   d   \" bel\n0000040\nMinus the \" | od -a\" on the end to actually execute.\n. Have you checked out the following link?\nbashrc commented on Aug 25\nAnd then, as if by magic...\nhttps://launchpad.net/~fuzzgun/+archive/ubuntu/finalterm/+packages\n. Have you tried:\nhttps://launchpad.net/~fuzzgun/+archive/ubuntu/finalterm/+packages\n. ```\nOn 11/06/2014 04:14 AM, Deekshith\n  Allamaneni wrote:\n@p-e-w I am on vanilla Ubuntu 14.10\n    and using default drivers. It does not show any additional\n    drivers for my hardware.\n  \u2014\n    Reply to this email directly or view\n      it on GitHub.\nI originally installed finalterm on Ubuntu 14.04, using native\nUnity, and it continues to work on 14.10.\u00a0 I must have already\ninstalled whatever dependencies Final Term was looking for.\nArt\n```\n. It looks like the current command comes real close to what I need.  If we could just tweak where the output goes.....\n. ",
    "MrMitch": "I was wondering the same thing as the website mentions a \"Drop down\" mode but i can't seem to find a way to enable it, be it via the preferences menu or a config file. \nI'm running under Ubuntu 13.10\n. ",
    "ajs124": "This is most likely a subset of #121 \n. Looking at the AUR package it seems that you can simply use \"cmake -DCMAKE_INSTALL_PREFIX=/whatever\" and \"make DESTDIR=/whatever install\".\n. ",
    "jstitch": "yes it is, I must have missed that one... please close and link this one there\n. ",
    "lantw44": "I remove #include <pty.h> in the generated Terminal.c file because this file does not exist on FreeBSD. It may be a vala bug. After Fianl Term is successfully built, I don't see any window or useful error message when I run it. It just exits.\n. I find the cause of no message and no window exit of Finalterm. It is caused by hard-coded path of bash in Finalterm. Bash is installed as /usr/local/bin/bash in FreeBSD, and /bin/bash does not exist.\nAfter replacing /bin/bash with /usr/local/bin/bash, Finalterm works. However, Finalterm sometimes crashes with following message:\n```\n(finalterm:87965): Cogl-WARNING **: X Error received while making drawable 0x02C00020 current\n(finalterm:87965): Gdk-ERROR **: The program 'finalterm' received an X Window System error.\nThis probably reflects a bug in the program.\nThe error was 'BadDrawable (invalid Pixmap or Window parameter)'.\n  (Details: serial 13050 error_code 9 request_code 152 (DRI2) minor_code 9)\n  (Note to programmers: normally, X errors are reported asynchronously;\n   that is, you will receive the error a while after causing it.\n   To debug your program, run it with the GDK_SYNCHRONIZE environment\n   variable to change this behavior. You can then get a meaningful\n   backtrace from your debugger if you break on the gdk_x_error() function.)\nTrace/BPT trap (core dumped)\n```\nI am using GNOME 3.13.3 on FreeBSD 10.0-RELEASE.\n. Shell path used by Finalterm is configurable, but #!/bin/bash inside Termlets are not.\n. Yes, it works. There are also other packages using this syntax to find bash.\n. This is my .bashrc. It also reads another file called .bash_include, and the .bash_include file can be found here. https://github.com/lantw44/configfile/blob/master/bash_include\n``` bash\n.bashrc\nif [[ \"$-\" == i ]] ; then interactive_shell=1; fi\n[ \"$interactive_shell\" ] && echo \":: Starting Bash ...\"\n[ \"$TERM\" = xterm ] && TERM=xterm-256color\n[ \"$TERM\" = screen ] && TERM=screen-256color\nSource global definitions\nif [ -f /etc/bashrc ]; then\n    . /etc/bashrc\nfi\n[ \"$interactive_shell\" ] && echo \":: Loading local configuration ...\"\nUser specific aliases and functions\n. ~/.bash_include\nPATH=${PATH%:/home/lantw44/bin}\nPATH=/home/lantw44/scripts:/home/lantw44/bin:/home/lantw44/.local/bin:$PATH:/opt/arm-cross-tools/tools/bin\nfor i in /tmp/ram/lantw44-ccache /tmp/ram/lantw44-firefox \\\n/tmp/ram/lantw44-thunderbird /tmp/ram/lantw44-rpmbuild-BUILD \\\n/tmp/ram/lantw44-rpmbuild-BUILDROOT /tmp/ram/lantw44-libreoffice \\\n/tmp/ram/lantw44-googlechrome /tmp/ram/lantw44-chromium \\\n/tmp/ram/lantw44-epiphany /tmp/ram/download\ndo\n    [ '!' -d \"$i\" ] && mkdir -m 700 -p \"$i\"\ndone\nmkdir -m 700 -p /tmp/ram/lantw44-virtshare\nchcon -t samba_share_t /tmp/ram/lantw44-virtshare\nexport DEVKITPRO=/home/lantw44/devkitPro\nexport DEVKITARM=${DEVKITPRO}/devkitARM\nfunction dumpkey()\n{\n    local param=${1}\n    local key\n    local result\n    result=$(sudo xenstore-list ${param})\n    if [ \"${result}\" != \"\" ] ; then\n        for key in ${result} ; do dumpkey ${param}/${key} ; done\n    else\n        echo -n ${param}'='\n        sudo xenstore-read ${param}\n    fi\n} \n. /etc/bash_completion.d/xl.sh\n[ \"$DESKTOP_SESSION\" = \"xfce\" ] && export gnome-keyring-daemon -sd\nif [ \"$DESKTOP_SESSION\" = \"xfce\" ]; then\n    export gnome-keyring-daemon -sd\nfi  \ngnome_unstable () \n{\n    export GTK_IM_MODULE=ibus\n    export QT_IM_MODULE=ibus\n    export XMODIFIERS=\"@im=ibus\"\n}\nunset CFLAGS\n``\n. FinalTerm starts bash using/bin/bash --rcfile /usr/local/share/finalterm/Startup/bash_startup -iand my regular terminal starts it using/bin/bash. However, both FinalTerm and my regular terminal show nothing when runningecho \"$@\"`.\nThere is no different environment variables between FinalTerm and regular terminal except for PATH and SHLVL because my .bashrc unconditionally add new path and I start FinalTerm from my regular terminal.\n. If I only remove the -i parameter, FinalTerm still crashes and bashdb is started. If I remove all parameters, FinalTerm doesn't crash and bashdb is not started.\n. FinalTerm does not crash now, but there is still other problems. My input does not go to the next line when my input is longer than the terminal width.\n. - Run cmake directly and you will know which required packages are missing. Not all dependencies can be resolved using the ports, so you will have to manually build some of them, including mx and keybinder.\n- Remove #include <pty.h> from the generated src/Terminal.c file.\n- Change all /bin/bash to /usr/local/bin/bash, or FinalTerm will not start.\n. > Change all /bin/bash to /usr/local/bin/bash, or FinalTerm will not start.\n\nwhich files?\n\nAll files. You can use grep to find them. Here is the current list:\ndata/Startup/bash_startup.in        \ndata/Startup/preexec.bash           \ndata/Termlets/ls                    \ndata/Termlets/ps                    \ndata/Termlets/wget                  \ndata/org.gnome.finalterm.gschema.xml\n. The default Clutter backend was changed from X11 to GDK in GNOME 3.16.\n. export CLUTTER_BACKEND=x11 may get it work, but I think we should also try to fix the error.\n. I remember the change is needed because they want to make whole GNOME 3.16 desktop run in wayland. (GTK+ and Clutter in GNOME 3.14 uses Xwayland)\n. ",
    "preachermanx": "Platform              Header              Library\nCygwin                             libc\nInterix                            libc\nOSF/1 4 and 5                      libc\nglibc                              libutil\nMacOS X                           libc\nOpenBSD, NetBSD                   libutil\nFreeBSD                        libutil\nMight be where to look here.   without pty's terminals do not work very\nwell.\nOn Tue, Mar 25, 2014 at 12:03 PM, lantw44 notifications@github.com wrote:\n\nI remove #include  in the generated Terminal.c file because this\nfile does not exist on FreeBSD. It may be a vala bug. After Fianl Term is\nsuccessfully built, I don't see any window or useful error message when I\nrun it. It just exits.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/p-e-w/finalterm/issues/261#issuecomment-38591649\n.\n\n\n\nPatrick S. Roberts         512.924.4039(c)\nIT Director                512.418.5792(o)\nCentaur Technology\n. ",
    "CurtisLeeBolin": "alikemalocalan, since you reported this a month a go and no one has commented, I thought I would tell you, it seems you diagnosed the problem.  The nvidia driver you installed is the reason X is missing the GLX extension.  I think you should close the issue here and report it to the developers of the nvidia ppa you are using.\n. I installed Debian 7.4 in a virtual machine to give you a little help. \nSince this is Debian wheezy instead of Ubuntu, apt will be looking for the \"wheezy\" repository, but the PPA team has built finalterm for Ubuntu \"Saucy\", \"Quantal\", \"Precise\", and \"Raring\".  Even if you changed the repository source to one of those, it wouldn't install due to missing dependencies. \nSince you added the ppa, you can remove it by running:\nsudo add-apt-repository --remove ppa:finalterm/daily\nI would suggest building it yourself for your OS, but it looks like Debian 7.4 doesn't have some of the minimal dependencies.  One thing I saw right away was the requirement for gee-0.8, but Debian 7.4 has libgee 0.6.4.  It would be a lot of work to build all the dependencies you would need.\nThis is how I tried building it for Debian 7.4:\nFirst I installed dependencies: \nsudo apt-get install git build-essential cmake valac libnotify4 libmx-1.0-2 libkeybinder0 libgee2\nThen I built as instructed in the README:\n```\ngit clone https://github.com/p-e-w/finalterm.git\ncd finalterm/\nmkdir build\ncd build/\ncmake ..\n-- checking for module 'unity'\n--   package 'unity' not found\n-- checking for modules 'clutter-gtk-1.0;mx-1.0;keybinder-3.0;gee-0.8;libnotify'\n--   package 'clutter-gtk-1.0' not found\n--   package 'mx-1.0' not found\n--   package 'keybinder-3.0' not found\n--   package 'gee-0.8' not found\n--   package 'libnotify' not found\nCMake Error at /usr/share/cmake-2.8/Modules/FindPkgConfig.cmake:279 (message):\n  A required package was not found\nCall Stack (most recent call first):\n  /usr/share/cmake-2.8/Modules/FindPkgConfig.cmake:333 (_pkg_check_modules_internal)\n  CMakeLists.txt:42 (pkg_check_modules)\n-- checking for a minimum Vala version of 0.16.0\n--   found Vala, version 0.16.1\nCMake Error at /usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake:97 (MESSAGE):\n  Could NOT find Intltool (missing: INTLTOOL_EXTRACT_EXECUTABLE\n  INTLTOOL_MERGE_EXECUTABLE)\nCall Stack (most recent call first):\n  /usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake:288 (_FPHSA_FAILURE_MESSAGE)\n  cmake/FindIntltool.cmake:40 (find_package_handle_standard_args)\n  cmake/Gettext.cmake:326 (find_package)\n  po/CMakeLists.txt:4 (gettext_create_pot)\n-- Configuring incomplete, errors occurred!\n```\n. @p-e-w and @ferki, I stated that debian doesn't meet the minimal version of some of the dependencies.  I did not go any further.\n. Let me over explain this so people will stop commenting.  \n1) First I would install the packages for the dependencies.\n2) Try to build.\n3) If it fails to build, I see which headers are absolutely needed and install the -dev package for them, because headers aren't always needed. e.g. build-tools\n4) Try to build again. (looping 3 and 4 until it builds so I have an exact list of dependencies to make a deb package)\nI never got to step 3 because libgee 0.6.4 < gee-0.8 dependency.\n. ",
    "philcryer": "This was not an issue, I'm running AwesomeWM, so some component it needed to run wasn't loaded - I started with a default rc.lua file and now finalterm works. Thanks\n. ",
    "francescarpi": "Hi,\nI use awesomeWM too, and I can not start it. How did you do?\nThanks!\n. Found it!\n{rule = {instance = \"finalterm\"}, \n    properties = { floating = true}},\nIn awful.rules (rc.lua)\nThx!\n. ",
    "bitclaw": "Hi guys! I was able to build Finalterm successfully in Debian Wheezy by doing the following (Very cool terminal by the way :D ):\n// FINALTERM INSTALL STEPS\nAdd the following to /etc/apt/sources.list\nTESTING REPO DEBIAN\ndeb http://http.us.debian.org/debian/ testing non-free contrib main\nsudo apt-get update\nsudo apt-get install git build-essential cmake\nupdatedb\napt-get -t testing install valac libgtk-3-dev intltool clutter-gtk-1.0 libkeybinder-3.0-dev libgee-0.8-dev libnotify-bin libmx-dev\ngit clone https://github.com/p-e-w/finalterm.git\ncd finalterm/\nmkdir build\ncd build/\ncmake ..\nmake\nsudo make install\n. ",
    "mewmew": "This issue can also trigger a command injection vulnerability. The screenshots below demonstrate how clicking \"list content\" from the file menu will execute an arbitrary command (in this case echo).\nscreenshot 1\nscreenshot 2\nscreenshot 3\n. ",
    "buschjost": "@cstrahan I just saw that your open PR got merged. It would be really cool if you could get this to work on Mac as well. \n. ",
    "melkir": "Ok, thx p-e-w. I hope they will fix this soon.\nAnother bug is mouvement with vim, can't use left, right key\n. ",
    "DawidLoubser": "Ah, sorry for the duplicate. I understand your reasons for not implementing it yet, just wanted to impress the importance this has for most 'early adopter' users even - as soon as this is in, I would also be able to switch and provide much more useful testing. Good luck with this potential-laden project!\n. ",
    "jedevc": "I noticed this too.\n. ",
    "genodeftest": "Thanks, that was easy and did the trick.\n. #41 has the same solution for the same problem.\n. ",
    "alenbasic": "It appears you're using 14.04. Until the issues are sorted out with the PPA you can read this comment to install the dependencies and then follow the readme to compile:\nhttps://github.com/p-e-w/finalterm/issues/258#issuecomment-42947461\n. ",
    "ai": "@p-e-w I use this Corp for Fedora too.\n. @p-e-w I fixed typo :)\n. @ferki @p-e-w now I fixed commit message too :)\n. ",
    "mattdm": "Just a note \u2014 \"Copr\", like \"Copper\". :)\n. For the record, I've gotten this request for Fedora too and I agree with the assessment that it's not really ready. The Copr is a good place for it to \"bake\" and let people try it out in the meantime.\n. ",
    "k4rtik": "Looks like I wrongly assumed that \"finalterm generates context-sensitive menus for all output\".\nBut the bug remains, running tree on a big folder like my home takes a lot of time.\n. ",
    "mola": "hi,\ni have fedora 20 and gnome 3.12 (gtk 3.12) and no problem,\n1. Start Final Term\n2. Press the \"TOGGLE_DROPDOWN\" hotkey (F10 in my case)\n3. Final Term drops down and  stay on top \n;)\n. ",
    "DrRataplan": "Tyvm! I'll look further into the emulation code!\nOn 17 Jun 2014 19:11, \"Philipp Emanuel Weidmann\" notifications@github.com\nwrote:\n\nMerged!\nIn over one year of Final Term's public existence, this is the first\ntime anyone has dared to contribute to the terminal emulation code.\nThank you very much [image: :+1:], if you have more knowledge on that\nsubject I'd greatly appreciate further pull requests.\nI hope you don't mind that you are now credited in Final Term's About\ndialog\nhttps://github.com/p-e-w/finalterm/commit/c081320c55dd547340d4830b9e2e9425b9d53195\n:)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/pull/293#issuecomment-46336665.\n. \n",
    "loop-de-r00t": "Here is a single short command:\n\nBut when you type more that goes past the window, this is an example of what is shown:\n\nAnd this is what happens when you press backspace after getting the above:\n\n. ",
    "bcgreen24": "Yeah, same here.\n. Hmm...after reinstalling, the problem disappeared...\n. Yes, it's the latest master...\nI just double-checked and the code I compiled includes everything through the very latest commit.\nBryan\n. Sure,  I'll give it a go and let you know what I find out. \nThanks! \nBryan\nSent from my ASUS MeMO Pad\nPhilipp Emanuel Weidmann notifications@github.com wrote:\n\nDo you have the means to debug this on your machine (with Nemiver maybe?). The line I pointed out should limit width to 50 px + 40 characters. From your screenshot it is evident that on your system that does not work as intended. This seems to imply that either the character width is messed up, or that the width does not actually get set for some reason.\n\u2014\nReply to this email directly or view it on GitHub.\ufffc\n. \n",
    "wolfv": "Hi Philipp, \ngood to see you're on it, still :) \nyes, like that. just selecting the pane/tab by terminal title (which usually is the working directory or the running command). I don't know how useful it would be, though ... would have to test if it really fulfills any need.\n. ",
    "chrstphrchvz": "I understand this project is dead, but for reference, iTerm2 has this feature (really cool indeed!). I don't mean to spam, but the iTerm2 project for OS X is an example that has this sort of tmux integration feature; although it doesn't ditch tmux, rather it takes advantage of it in a way optimized for GUI (it still requires logging into ssh and running tmux -CC though). Due to the current license (GPLv2), I'm not sure if FT can reuse its implementation right away.\n. This announcement explains most of the features and limitations:\nhttps://code.google.com/p/iterm2/wiki/TmuxIntegration\nIn practice this means that the user does not interact with the tmux\nsession manager directly; rather, there is a session management GUI in\niTerm2 to manage tmux sessions, windows, etc., e.g. allowing multiple\n\"logical\" windows through a single ssh session that behave almost the same\nas real windows/tabs.\nFurther, in the case of iTerm2, I would think that because the tmux -C\nwindows/tabs behave like real ones, it hides the much of the usual CLI tmux\nfunctionality, including key bindings; it's not strictly taking tmux pane\ncontent and putting it in pretty GUI widgets nor acting like tmux CLI at\nthe same time. tmux -C in this use tries to only provides session\nmanagement rather than windows, panes, status bars, key bindings etc. as in\nthe CLI; tmux is merely a backend.\nI doubt that the iTerm2-side functionality is written in Vala, but most of\nthe magic is probably in tmux -C control mode (tmux 1.8+) that was\ndesigned for this sort of application, and would allow terminal emulators\nto use it (iTerm2 is probably the only application taking advantage of it\nso far).\nOn Mon, Mar 23, 2015 at 2:40 PM Nick Ashley notifications@github.com\nwrote:\n\nWhat does this look like in practice? Menu bar integration? Key bindings?\nOr do you just want to expand upon the tabbing and split window features\nalready in place?\nOn Mon, Mar 23, 2015, 12:31 AM Christopher Chavez \nnotifications@github.com\nwrote:\n\nI don't mean to spam, but the iTerm2 project for OS X is an example that\nhas this sort of tmux integration feature; although it doesn't ditch\ntmux,\nrather it takes advantage of it in a way optimized for GUI (it still\nrequires logging into ssh and running tmux -CC though). Due to the\ncurrent license (GPLv2), I'm not sure if FT can reuse its implementation\nright away.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/issues/308#issuecomment-84802276.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/issues/308#issuecomment-85163135.\n. \n",
    "jayay": "Thanks! :+1: \n. ",
    "onli": "Yep, definitely agree. There is more than one cause for crashes and hangs.\nI will see if I can reproduce the Ctrl+D crashes, I used the x in the tab so far.\nedit: yes, that hangs immediately or crashes, but also without the timeout.\n. Short update:\nI reorganised the code a little bit, and in my VM at least (before it behaved a little bit different on my real system, more memory related crashes, we will see if that is all) hunted it down to this stacktrace: https://gist.github.com/onli/6e34b3d543c1dbbd524e. That is the notebook.page_remove in nested_container, and looks - at least with my limited knowledge in that area - like a bug in clutter/gtk.\nDon't know what is the specific cause triggering this. I'm trying to rewrite that part to workaround the issue. \nI had a hunch first that some other crashes had to do with the removal of the child from children when that is the main reference, but that lead nowhere so far. Might come next, but should have been present then in the tab removal anyway.\nStill, the tab-close was stable for me all that time with the patch, I think you could merge that :)\n. With the new fix, Ctrl + D seems to work stable (I had one random crash from the output-stream, but it worked many times without crash). Waiting for feedback :) \n. > My feeling is that without a full understanding of what really causes the problem, such a fix will be very hard to pull off\nThe working fix is based upon a theory, though I did not went far enough into the C-Code or the assembled product to check if it is correct: The Posix-Signals are probably not part of the GTK-Thread/are not catched inside. But it is invalid to manipulate GTK-objects from outside the main thread (and the functions which could word around that, gdk_threads_init, are deprecated, and didn't work anyway). The symptoms fit exactly to what I found described to what could happen.\nBut it could of course also be a side-effect of not removing the shell process (but then it should freeze as well when closing tabs), or a timing thing.\n\nThe bad news is that this approach introduces a \"wait time\" between exiting a shell and the tab being closed, which is not really what we want from a UX perspective.\n\nThe timer-waittime could of course be reduced, though that would rise cpu-usage a bit. Maybe there is a good way to instantly react on the change without polling explicitly? I didn't want to make the fix more complicated with stuff like that, but that sure should be something to consider in the future.\n\nAlso, I have found that this leaves defunct shell processes around, which is not surprising since it removes the call to waitpid.\n\nThe nice thing about this is that the waitpid-approach is not necessarily needed anymore, if I understand the architecture correctly. I will  add a function to close the command_channel in Terminal, which was called using the waitpid-pid, called now from the close event in TerminalWidget.\n\nOn a side note, much of the changeset seems to be nonfunctional and should be removed\n\nSorry about that, I will cleanup the commit. How does that work properly - it is probably easiest to just send another, clean pull request?\n\nIt's cool that you blogged about your efforts on https://www.onli-blogging.de/, BTW :smiley:\n\nThanks :)\n. > Maybe this is already the answer and makes polling obsolete.\nI played a bit with it. It has two drawbacks: \n1. It leads to crashes (maybe my theory is wrong, or I'm calling it wrong)\n2. It still feels sloppy in the UI, probably because doing that when idle is exactly what one normally does not want -> it should rather have priority\n\nThe main purpose of waitpid is not to provide a callback supplying the PID but to prevent the process from turning defunct (\"zombie\")\n\nOh. And yes, they definitely stayed defunct. I integrated this into the cleaned pull request: https://github.com/p-e-w/finalterm/pull/311\n. Ok, I see.\n\nClearly, lowering the loop timeout would not fix this, only lowering the kill timeout could \u2013 but this is likely to reintroduce crashes again :unamused:\n\nYep. So I retried threads_add_idle. The interesting thing is that it is not the same crash - but rather it looks like the exact same lock, but this time already when calling Gdk.threads_add_idle(()and way less often - so something (I still suspect something animation related) seems to lock the application when calling Gdk-functions/Gdk-thread related stuff (and that is beyond my level so far).\nSo, workaround is to not do this, to find a good way to react onto the signal from the main thread. g_io_channel maybe, but so far I'm trying to query this in threads_add_idle (which has the risk of higher cpu usage), and I think that is a working solution. Will test that a bit more and push the result (in any case, it's better than the current state). Just as an update.\n@muchweb: Can't confirm this, sorry. \n. Ok, pushed. I even got the g_io_channel working, so this is now almost instant, using no timeouts, and I saw no issues with panes or timings.\nMaybe Gdk.threads_add_idle(() is simply invalid to call outside the main thread as well, the documentation uses it rather for widgets who could later be already finalized, calling it inside the main thread. And trying the clutter-locks and thread-calls made no difference at all, so my hunch with animations was probably wrong.\nEdit: Introduced a really dumb bug when cleaning up, fixed that in the follow-up commit.\n. If I see that right, to wrap it in Gdk.threads_add_idle will greatly reduce the hangs on ctrl+d, but it will still freeze sometimes (about 1 in 50 times in my tests with my commits, felt like more if closing the tabs very fast). To get around this issue, the \"signal the main-thread\"-approach seems to be needed.\nBut I will test it the next days. Maybe the two can be combined and thus the timeout replaced. Nice catch.\n. Ok, had an earlier chance to test this then I thought.\nThe crashes are gone, that is nice. But all in all, it is not working properly for me. Ctrl+D still freezes very frequently, and tab closes freeze as well sometimes. \nIf you want, I could fix the bug with the zombie tabs in the last commit and send this again. I could probably keep both your fixes and thus get rid of the timeout as well (and of course fix my typo ;) ).\nI saw your comments and realize one doesn't have to like the approach with the fifo - and that my first approaches were all a bit flawed probably doesn't help -  but it is working perfectly now; I had not one crash and not one freeze, and this includes my tests to toggle timing issues and panes -> we could completely fix the bug. And if there are really (small) new issues, or stuff to be improved like another way for the thread-communication, couldn't this be better done later (after more people could play with a more stable finalterm)?\n. I don't think to use a fifo for thread communication is a hack - especially since that seems to run way smoother, at least on my machine (I mean not in regards to the hangs, but responsiveness). \nBut I see you point. Indeed, the documentation states that threads_add_idle is a safe way to signal the main thread what to do, so either we are triggering a gdk-bug, or I was just covering the real bug by accident.\nI thought different because of this stacktrace (I used gdb): https://gist.github.com/onli/47dbca50bb83d4e2a31b \nFor me this looked like threads_add_idle itself is running into the mutex deadlock, but sure, it is quite possible this is not correct, this is not my strong-suit.\n\nWhen it freezes now, does it still get stuck in the same lock?\n\nThis (the stracktrace above) is where it hangs now, and this is where it hanged before when I tried to use threads_add_idle.\n\nDo you know of a better way to reproduce hangs?\n\nSame procedure, just opening 30 tabs instead (even in the beginning, I used at least 10)\nI just got a hang caused by command_channel.read_unichar (In Terminal.vala:282), when opening the 4 tabs for the seconds time and trying to close them! Oh, and seems to be reproducible. I'm inclined to take this as a hint that you are correct, this may be channel related (and a bit strange, didn't see this before).\n. Did you have any luck? Or need some help (if I can provide)?\nI am still irritated that my workaround seemed to work stable on my system but not on yours, maybe that says us something. \n. I'm really happy I could help a bit.\n\nI therefore would like to award you the bounty I placed on #296\n\nI happily accept, thank you :) I tried to claim it there.\n. You were missing nothing, that is correct. I just conserved the approach used before, probably unnecessarily. I changed that in the new commit as well.\n. It could of course instead use the old approach and go with a with a foreach  through the children.\nEdit: Right now I'm not sure this is even necessary to be static, would try to change that.\n. Yes, that was meant differently. /tmp is indeed already almost everywhere a tmpfs, the comment should explain why the tempfile is deleted (-> replaced with a fifo afterwards)\n. Did you see this issue with the commit applied? That behaviour never triggered for me, no matter how fast I tried, it was always working fine.\n. It should never be slow :)\nBut you are right, theoretically. Only workaround I see would be to send the PID via the fifo and copy the static terminal_by_pid-approach. But maybe we could wait and see whether this really becomes a problem?\n. ",
    "runvnc": "For example:  http://stackoverflow.com/questions/15146668/beer-in-my-terminal-how\nLOL.\nI believe they are actually basically multicolor Unicode characters.\n. Great, I'm excited to see if it works.\nOn Sun, Jul 13, 2014 at 10:07 AM, Philipp Emanuel Weidmann \nnotifications@github.com wrote:\n\nThat's pretty cool actually :) If this is indeed in FreeType, it should\nprobably work out of the box with the right version.\nI'll definitely give this a try.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/p-e-w/finalterm/issues/310#issuecomment-48846186.\n. \n",
    "DaimyoKirby": "No, this is what it looks like when I open other tabs: http://imgur.com/SSwoZm7\nYou can still see the bar I'm  talking about above the tabs.\nMy mistake, I hadn't realized it (because I hadn't opened any tabs before) but that top-bar thing isn't the tab-bar, it's just a bar where the tab for settings, about info, and quitting are...\n. ",
    "Gabriel-p": "See: http://youtu.be/UUL82RlSjmE\nI'm running eOS 0.2 (Luna) 32-bit\n. I'm going out of town in a couple of hours, but let me know if there's any test I can do to help. If I can't get it done today, I'll try to do it as quick as possible.\n. ",
    "hamzadis": "About your remarks:\n1. The user configuration handling currently captures the enter key event making hex entry impossible if the IM filtering is placed after the keybind handling. There might be other issues as well there, I only noticed that one though. The IM filtering however only captures events it finds interesting i.e. things that produce a character. Other keys are only captured in special contexts, like with the enter key above.\n2. The other send_text_to_shell has to stay as the IM api doesn't capture all events. These still have to be manually inserted. One example is the backspace key.\n3. I noticed the typos, but only after I created the pull request, and now I can't change it I think. Way to rub salt in my wounds there. :P\n. I had an idea on how to handle this earlier. The IM context emits signals for when it detects a pre-edit, and when that edit is completed. So I have it set a flag that disables the keybind handling. This allows the IM filtering to be moved below the keybind handling giving it a lower priority in normal situations. I don't like using flags like this as it feels wonky a lot of the times, but it seems elegant enough in this situation. \nAbout the typo, I knew of git amend but read somewhere that it doesn't work with github pull requests. Reading it now, I see he only mentioned pulls, not pull requests. Thank you for the tip, I'm not much of a git/github aficionado yet.\n. ",
    "qorrect": "+1\n. ",
    "seefood": "+1 also for Utopic Unicorn.\nAt the current state, I could not install the binaries from the launchpad, nor the build-deps for the source package.\n. ",
    "fabsh": "Yeah, I'm seeing the same bug under Xfce. Turning compositing off doesn't fix it either.\n. ",
    "snaggen": "I don't agree that final term stays within the terminal context. A terminal does not normaly provide a graphical popup menu. That is an element of a regular UI program. In that way Final Term is little of a hybrid, and it makes sense to bridge this by providing the nautilus menu. What doesn't make sense it to offer to open rpm files in a file editor, like it is currently doing. \n. Well if final term knows ssh is used it could try to translate it to an sftp url. Or more simply, just gray out the \"nautilus style\" open menu, and just keep the terminal commands.\n. ",
    "cuttlebit": "The problem is in \"data/Termlets/ls\"\nfor filename in *; do\n\" * \" only finds non-hidden files in current directory.\n. Oh... Yes. Ignore my commit there. It's broken.\nI think I know what's going on now, gonna do some testing.\n. Sorry, check the last commit.\nShould be fixed now.\n\n. Do i fork a new copy and pull again?\n. Oh ok cool :)\n. hmmm, still works for me. Strange.\n\n. Mmmmm I cloned again, and I can reproduce the bug as well. Weird. I'll investigate.\nWhen you \"ls -a\" and see a '*' being displayed, that means * is expanding to itself.\n@jmittert, after you aliased, the directories are being displayed horizontally, which means that it's not using finalterm's ls.\nUPDATE:\nSo apparently the fix works on my laptop, but not my desktop PC, don't know why yet.\n. I use zsh on both my computers. Finalterm is in bash though.\nSeparate from finalterm;\nIt seems that zsh does not have shopt and matching fails with an error message if nothing is found rather than expanding to itself. Which is the same as if we used failglob in bash.\n. @Vreality @jmittert\nGuys, did we all forget to \"sudo make install\"?\nI did that and it works on both my computers now. lol\n. @Vreality I always use \"./finalterm\"\nInstalling apparently looks at Termlets, try it and see if it works :P.\n-- Installing: /usr/local/share/finalterm/Termlets\n-- Up-to-date: /usr/local/share/finalterm/Termlets/ls\n-- Up-to-date: /usr/local/share/finalterm/Termlets/wget\n-- Up-to-date: /usr/local/share/finalterm/Termlets/ps\n-- Installing: /usr/local/share/finalterm/TextMenus\n. The way Termlets work will probably need to be overhauled for zsh support anyway :)\n. Relates to #368 most likely?\n. ",
    "iomari": "Installing from source have too many dependencies that themselves just don't want to compile without errors like mx, gee and keybinder. Why is there no package for suse 12.3 when there is one for 13.1?\n. ",
    "MightyPork": "or.. you know, alias c=\"clear\" - then just C<RETURN> and you're done, no need for extra shortcut.\n. ",
    "darioush": "This issue occurs due to the vertical height being not a perfect multiple of the text line height.\nTerminator and gnome-terminal avoid this issue by restricting resizing to integer multiples of line height.\n. ",
    "cepko33": "For the changes to the VERTICAL_TAB and REVERSE_INDEX switches, my test case was the man program, and only with the changes that I made do I get the expected scrolling behavior. \n. When these lines are omitted, scrolling down, up, and then back down in man has very strange behavior. The terminal will only catch up to the downward scrolling once it hits new text.\n. When these lines are ommitted, the terminal cannot follow the upward scroll in man and the status line moves upward in the terminal as opposed to the man text scrolling downward\n. commented\n. I'll take a look at the code you mentioned, I definitely would like to get more familiar with the code and the mvc pattern you've implemented\n. I've taken on a job which makes FOSS difficult. If you think the existing code is fixing some problems, please feel free to merge!\n. ",
    "Shahrukh36": "Can we have the ability to use custom hotkeys?\n. ",
    "harj0": "Sorry fur such a newb question, but how can I pull/implement these changes?\n. ",
    "r004": "Thanks; \n\nChange all /bin/bash to /usr/local/bin/bash, or FinalTerm will not start.\nwhich files?\n. \n",
    "ph4ntome": "Hi friend, what kind of graphics card do you have?\nIt seems like you miss something like DRI.\nActually could you provide the output of:\nglxinfo | grep direct\n. From the trace it seems that it is a driver problem. If I am not wrong it seems that GetDrawableAttribute from libGL.so.1 starts the problem.\nNow, I installed the program in Arch linux and it run just fine. I tried it in two different installations, one with nvidia 304 driver and one with nvidia 340 driver. All went fine.\nSo I suspect that it is indeed a driver problem.\nYou said that you have two video cards. Can you select which one is active?\nI am wondering if you can change the active card to the other one and install the drivers (and libgl) for the new active card. Just to check if it runs nicely.\nI checked the code from Fedora and compared with Arch and it is the exactly the same. As I suspected this problem is not in the vala code.\nBottom line, there are two suspects here, vala itself (maybe some quirk produced by vala compiling) which has a very low probability, and libgl which is a known source of many problems.\n. ",
    "Fgruntjes": "Hey there,\nWell actually I have a dual video card (laptop) AMD and Intel. Pretty sure though the AMD doesnt do anything atm.\n\n$ glxinfo | grep direct\ndirect rendering: Yes\n    GL_ARB_draw_elements_base_vertex, GL_ARB_draw_indirect, \n    GL_ARB_map_buffer_range, GL_ARB_multi_bind, GL_ARB_multi_draw_indirect,\n. Sorry for the late response, was kinda bussy last couple of days. I managed to reinstall my system today with Fedora 20 and with a clean install everything works like a charm. So still dont know wat this was exactly but its solved. Thnx guys!\n. \n",
    "bobobo1618": "Recompiling Cairo and GTK made the scaling slightly better (it's the right size now but the fonts are extremely blurry)  but the menu bar is still transparent. \n. >  This sounds like a Cairo/GTK issue then. Which version(s) did you have before and which ones did you compile?\nBefore: 1.12.16-2, after.\n\nIn case you are referring to the Cinnamon top bar (as shown in @mottoper's screenshot), that is completely outside of Final Term's control and thus likely a bug in Cinnamon, perhaps related to GPU issues as so often when Clutter is involved.\n\nNo, I'm referring to a menu bar present in the Final Term window. There was a 'File' button, essentially hovering in a menu-bar sized empty space between Final Term's black console area and its title bar.\n. ",
    "mottoper": "Omg, I've just opened a new issue. I have this problem to, I've just recompiled cairo and GTK, but nothing has changed.\n\n. ",
    "stuaxo": "Hi,\n   I think the instructions for the ppa might be wrong in the README as they don't seem to point to this..\nS\n. ",
    "autra": "Yes the instructions are wrong. If you follow the steps exactly in unicorn you get a 404 on apt-get update because there is no \nhttp://ppa.launchpad.net/finalterm/daily/ubuntu/dists/utopic/main/binary-amd64/Packages\nEDIT it's no big deal, but you have to edit the line in source list by hand.\nRE -EDIT : changing the distribution info to devel or saucy leads to broken deps : libcogl, libkeybinder and libmx.\n. ",
    "Erudition": "Had to figure this out the hard way.\nYou can use the software sources GUI to change the distribution to saucy. I had no problem installing after that. What's strange, is the finalterm package is available in a few other distributions while the rest of the packages are not.\n. ",
    "ilazaridis": "Documentation is wrong for Ubuntu. Provided ppa doesn't work.\n. ",
    "acrolyt": "The error occures on every Unity installation I use and after a clean/initial  install of finalterm.\nI only switched through all the themes to see if it looks fine on any of them, and the only one\nthat workes for me is \"green screen\".\nThis doesn't occure on gnome, though.\n. ",
    "xfim": "Yes, specially the capture from @mottoper, where in that case the cursor is abnormally small.\nI just want to add that changing the cursor size or cursor theme in gtk-3 does not have any efect neither.\n. Thank you very much, Philipp.\nI have been trying to find a way to play with the default size of the cursor, but simple searches on \"cursor\" or \"rectangle\" don't seem to help. Where can I start looking at so that I can make a contribution to this issue?\n. ",
    "Tagussan": "Yes, except that I use GNOME3.\n. ",
    "mdeboer": "Same problem here, also I cannot select bitmap fonts (like Terminus). When I do, the font name comes up in the preferences screen but a standard sans-serif font is used instead and when I close the preferences screen and re-open it, it says Terminal font: None.\nClearly has something to do with font rendering as they also look a lot more blurry and don't respect my fontconfig settings like all other apps.\n. ,tab also freaks out. Seems creating and closing of terminals is still really buggy and should get top priority as it's really unstable.\n. ",
    "adeekshith": "@nashley I am not sure about dependencies but I believe I have all the dependencies as I could build and execute it. Here is what I get in the terminal after the crash.\n** Message: Partially supported control sequence: '\\u001b]0;deekshith@deekshith-ub: ~\\u0007' (TERMINAL_STREAM_STREAM_ELEMENT_CONTROL_SEQUENCE_TYPE_SET_TEXT_PARAMETERS)\n** Message: TerminalOutput.vala:386: Command mode entered\nSegmentation fault (core dumped)\n@artmartz I will try this now and let you know the status. Thank you. :)\n. @artmartz It does not work with the binary which you pointed to as it needs a dependency libcogl15 which I could not install. I tried to install libcogl15 but it is showing an error when installing from a .deb package.\nI get the following when I use apt-get to install libcogl15:\nPackage libcogl15 is not available, but is referred to by another package.\nThis may mean that the package is missing, has been obsoleted, or\nis only available from another source\n. @p-e-w I am on vanilla Ubuntu 14.10 and using default drivers. It does not show any additional drivers for my hardware.\n. ",
    "golimpio": "Isn't it related to: https://github.com/p-e-w/finalterm/issues/364 ?\n. ",
    "TheAifam5": "Good idea.. Very usefull for programming.. .So your Terminal is the best <3 ;)\n. sorry for that... :) but  #112 is very old and not repaired :/\n. So i dont make again new issuse...\nIs new problem.\n\npopup not hiding if select other window\n. Naah... I changin Terminal... \nSo i back when author repair this :)\n. ",
    "Witiko": "I'm not using any accessibility helpers and yes, this appears to be a duplicate of #364.\n. ",
    "jackiekaye89": "ditto to this, I'm having the same issues.\n. to clear the terminal aka to empty it of previous text I just enter \"clear\" without quotations, of course, though it doesn't clear it per se, it just scrolls the thing down to hide previous entries outside the terminal window.\n. wait, by buffer do you mean the command history thing? I'm not sure if you are or not, but just in case you are the only way that I know of to clear that is to clear the actual file located at \"/home/jackiekaye89/.local/share/finalterm/commands.ftcompletion\"\nI've also discovered that you can write your own 'history' into that file and it will show up, thought that'd be an interesting thing to add as an actual feature, a custom command completion thing with a priority system or whatever.\n. if you installed via apt-get and are on an ubuntu system (might be same on others, donno haven't tested) then you can find the finalterm settings, including the keybinds in \"/usr/share/finalterm\"\n. PS. for those who compiled it, those same settings are in a different directory, specifically, \"/usr/local/share/finalterm\" that one.\n. well, for example, say you type this into the terminal... sai ... there could be two options for that, a) a dropdown thing similar to the command history completion, or b) simply press tab... either method should expand that command to sudo apt-get install and allow you to continue typing the rest of the command.\n. pretty much, I guess\n. ",
    "Atem18": "Hi, I have a similar error on Fedora 21:\n* Message: TerminalOutput.vala:386: Command mode entered\n* Message: Command updated: ''\n** Message: Command updated: 'l'\n(finalterm:26953): Gdk-ERROR **: The program 'finalterm' received an X Window System error.\nThis probably reflects a bug in the program.\nThe error was 'GLXBadDrawable'.\n  (Details: serial 698 error_code 169 request_code 154 (GLX) minor_code 29)\n  (Note to programmers: normally, X errors are reported asynchronously;\n   that is, you will receive the error a while after causing it.\n   To debug your program, run it with the GDK_SYNCHRONIZE environment\n   variable to change this behavior. You can then get a meaningful\n   backtrace from your debugger if you break on the gdk_x_error() function.)\n[1]    26953 trace trap (core dumped)  finalterm\n. ",
    "Petahh": "I have same problem, can someone advice here? Fedora 21 - 3.19.3-200.fc21.x86_64. Installed from https://copr.fedoraproject.org/coprs/mattdm/finalterm/ package finalterm-0.1-13.39b078b.x86_64\n$ finalterm\n* Message: TerminalOutput.vala:386: Command mode entered\n* Message: Command updated: ''\n* Message: Command updated: 'l'\n* Message: Command updated: 'l'\n* Message: Command updated: 'ls'\n* Message: Command executed: 'ls'\n* Message: TerminalOutput.vala:386: Command mode entered\n* Message: Command updated: ''\n** Message: Command updated: 'l'\n(finalterm:4731): Gdk-ERROR **: The program 'finalterm' received an X Window System error.\nThis probably reflects a bug in the program.\nThe error was 'GLXBadDrawable'.\n(Details: serial 686 error_code 169 request_code 154 (GLX) minor_code 29)\n(Note to programmers: normally, X errors are reported asynchronously;\nthat is, you will receive the error a while after causing it.\nTo debug your program, run it with the GDK_SYNCHRONIZE environment\nvariable to change this behavior. You can then get a meaningful\nbacktrace from your debugger if you break on the gdk_x_error() function.)\nTrace/breakpoint trap (core dumped)\n. I have same problem, can someone advice here? Fedora 21 - 3.19.3-200.fc21.x86_64. Installed from  https://copr.fedoraproject.org/coprs/mattdm/finalterm/ package finalterm-0.1-13.39b078b.x86_64\n$ finalterm\n* Message: TerminalOutput.vala:386: Command mode entered\n* Message: Command updated: ''\n* Message: Command updated: 'l'\n* Message: Command updated: 'l'\n* Message: Command updated: 'ls'\n* Message: Command executed: 'ls'\n* Message: TerminalOutput.vala:386: Command mode entered\n* Message: Command updated: ''\n** Message: Command updated: 'l'\n(finalterm:4731): Gdk-ERROR **: The program 'finalterm' received an X Window System error.\nThis probably reflects a bug in the program.\nThe error was 'GLXBadDrawable'.\n  (Details: serial 686 error_code 169 request_code 154 (GLX) minor_code 29)\n  (Note to programmers: normally, X errors are reported asynchronously;\n   that is, you will receive the error a while after causing it.\n   To debug your program, run it with the GDK_SYNCHRONIZE environment\n   variable to change this behavior. You can then get a meaningful\n   backtrace from your debugger if you break on the gdk_x_error() function.)\nTrace/breakpoint trap (core dumped)\n. ",
    "JohnDoe42": "I have digged a little bit deeper. The problem is the following package in Archlinux: https://www.archlinux.org/packages/community/x86_64/hardening-wrapper/\nIt forces some compile args to build hardened executables by default.\n. ",
    "rdodesigns": "I am also having this problem. Ubuntu 14.04 using xfce. Compiled commit 39b078.\n. ",
    "tlitovsk": "same here\n(finalterm:29017): Gdk-ERROR **: The program 'finalterm' received an X Window System error.\nThis probably reflects a bug in the program.\nThe error was 'GLXBadDrawable'.\n  (Details: serial 1066 error_code 169 request_code 154 (GLX) minor_code 29)\n  (Note to programmers: normally, X errors are reported asynchronously;\n   that is, you will receive the error a while after causing it.\n   To debug your program, run it with the GDK_SYNCHRONIZE environment\n   variable to change this behavior. You can then get a meaningful\n   backtrace from your debugger if you break on the gdk_x_error() function.)\nTrace/breakpoint trap (core dumped)\n. The problem is the pop up box creation.I traces it down that every pop up made the system crashes\n. ",
    "AadityaNair": "I have the same problem. I think the problem exists with the command auto-completion system. Whenever I type the command for the first time, It works OK. But type it for the second time, the auto-completion triggers a selection box and the whole application crashes. \n. ",
    "then3rd": "I also have this problem when built on fedora 21. My trace is identical to @norpol \nreplicated by typing:\nls \nl\nThis it briefly displays the auto-complete menu, but crashes. \n. ",
    "ravanscafi": ":+1: \n. ",
    "daniviga": "Same for me, on Fedora 21 with Intel HD4400 (with both F21 drivers and Intel upstream)\n. ",
    "usandfriends": "I know about clear, but I'm not asking about scrolling down to not \"see\" the text, I'm asking about clearing the terminal buffer. Some commands have a ton of output and slow down the terminal, I would like to clear the buffer to speed up the terminal again...\n. I'm not talking about the command history. I'm talking about the text printed onto the console. Is there a command that completely clears the text printed onto the console (renders console \"like new\", but with the current state of bash)?\n. ",
    "voodoos": "The first error is:\n\ngee-1.0.vapi:7.3-7.53: error: Gee.Functions' already contains a definition forget_compare_func_for'\n      public static GLib.CompareFunc get_compare_func_for (GLib.Type t);\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ngee-0.8.vapi:7.3-7.57: note: previous definition of `get_compare_func_for' was here\n      public static GLib.CompareDataFunc get_compare_func_for (GLib.Type t);\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIt is followed by many others which are very similar to it.\nIt is probably a conflict between libgee-0.8 and libgee2. But I can't remove libgee2 because it is used to build libunity...\n. ",
    "johnjelinek": "@nashley: and then rebuild or can I configure with the existing bin I got from apt-get?\n. ",
    "CJD14": "getting the same here.\nsolution above fixed it. Great work joshslark\n. Ah okay let me try and update and see how it goes. can't believe I didn't see that in my research. thank you\n. turns out Gnome is already updated to GNOME 3.16. \nI did a full GNOME install from PacMan in Arch Linux, without the GNOME extras. Is there something I should verify? \nso does that mean I would have to downgrade GNOME to 3.14.12? Im not sure I understand, do I not want GDK as the backend or do I?\n. very good, thank you very much. so simple yet perfect. Worked great indeed.\nI saw this during my researching this may be a good starting point\nGDK3 - X Windows System Interaction\nit included this if else statement\n```\nifdef GDK_WINDOWING_X11\nif (GDK_IS_X11_DISPLAY (display))\n    {\n      // make X11-specific calls here\n    }\n  else\nendif\nifdef GDK_WINDOWING_QUARTZ\nif (GDK_IS_QUARTZ_DISPLAY (display))\n    {\n      // make Quartz-specific calls here\n    }\n  else\nendif\ng_error (\"Unsupported GDK backend\");\n```\nmaybe this could set this could be used to set this variable on first run. \nthis seemed to fix launching it, and seemed to run okay as far as i can tell based on the little testing, but on close this is the output in terminal now:\n```\n** Message: TerminalOutput.vala:386: Command mode entered\n (finalterm:4575): CRITICAL : line_container_real_set_adjustments: assertion 'hadjustment != NULL' failed\n(finalterm:4575): Clutter-CRITICAL **: clutter_container_add: assertion 'CLUTTER_IS_CONTAINER (container)' failed\n```\nim going to test some more and see how stable i can keep it with this env variable.\n. check this fix from issue #408 \nhttps://github.com/joshslark/finalterm/commit/04697ea8632feb691238000c856f89f60cc0a612\nI had the same issue, must have been an update in vala's source dropping the use of out x, out y in that manner. I cant say for sure. What I can say is I was able to successfully build doing the following as stated in the above links.\nsimply vim src/TerminalView.vala and change line 229 to this:\ntext_menu.menu.popup(null, null, (menu, ref x, ref y, out push_in) => {\ninstead of this:\ntext_menu.menu.popup(null, null, (menu, out x, out y, out push_in) => {\njust change the out x, out y, not the out push_in, to ref x, ref y, out push_in\n. I got that too. Which I reported as issue #410 \nI was assisted to fix it temporarily by using \nexport CLUTTER_BACKEND=x11\nfinalterm\nbut that doesnt fix the root issue so expect instability. \nstill early in development, \nand Gnome 3.16 changed all kinds of things, which in turn broke this sadly.\n. ",
    "hoenirvili": "Good day sir, i will try this right now , thanks for the tip:D\n. Worked like a charm thanks for everything ! Have a good day sir !\n[Update] Now after instaling it gives me \n```\n~ $ : finalterm\n(finalterm:756): GLib-GObject-WARNING **: value \"0\" of type 'gint' is invalid or out of range for property 'window-scaling-factor' of type 'gint'\n(finalterm:756): Clutter-CRITICAL **: The Clutter backend is not a X11 backend\n(finalterm:756): Clutter-CRITICAL **: The Clutter backend is not a X11 backend\nSegmentation fault (core dumped)\n```\n. Thanks for all, now it's working btw i'm on arch xfce4 not gnome\n. ",
    "epitron": "Nice!\nThis needs to be merged.\n. ",
    "ouroboroscoding": "I get the same thing except the URLs are\nhttp://ppa.launchpad.net/finalterm/daily/ubuntu/dists/vivid/main/binary-amd64/Packages\nhttp://ppa.launchpad.net/finalterm/daily/ubuntu/dists/vivid/main/binary-i386/Packages\n. ",
    "mikeumus": "+1, resorted to building it manually which took a couple errors figuring out I could get all the required packages from apt-get in synaptic so ~~I made this cheat sheet of packages to install so that you only have to worry about building finalterm and not 3 other things: https://gist.github.com/mikeumus/208ea13dda43e7f844cf~~ just use this guide: http://sysads.co.uk/2014/07/install-final-term-terminal-ubuntu-14-04/\n. ",
    "bobef": "Not really a successor but check fishshell.com .\n. ",
    "gsemet": "Guake Reloaded ?\n(note: I am the maintainer)\n. ",
    "ruffsl": "I use fish shell, and I very much like it, but black screen looks really neat as well. \nJust tried combining fish with black screen and got strange results though. :construction: \n. ",
    "dandv": "@nashley Wish finalterm-reborn had some binaries.\n. ",
    "bjorn3": "From the readme:\n\n\u203c\ufe0f Final Term is no longer being actively developed. The official discontinuation announcement can be found at http://worldwidemann.com/finally-terminated. \u203c\ufe0f. \n"
}