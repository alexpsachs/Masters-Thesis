{
    "rahatarmanahmed": "Will test it in a little bit, but in the meanwhile go ahead and edit the README.md to include your new options.\n. Closing this due to no response. \n. It's only included in the example module, and I'm pretty sure that's not\nincluded in the library from Maven Central.\nOn Mar 17, 2015 9:11 AM, \"Colymore\" notifications@github.com wrote:\n\nI removed appcompat as dependency and every works fine..why you include it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/3.\n. Fixed in 4faef9e878790b12a634803d93294b8c24e55e86\n. Have you confirmed this on a real device? I had this issue but wasn't able\nto duplicate it outside of the emulator.\n\nOn Sat, Mar 21, 2015 at 7:57 AM, priceinjector notifications@github.com\nwrote:\n\nWhile the circle is animated for more than 5 cycles it starts painting the\n4 places. These are the points where the bound box touches the circle.\nIf I set the Paint to be aliased then it doesn't happen.\n[image: progress_issue]\nhttps://cloud.githubusercontent.com/assets/11571147/6765109/78a980c2-cfda-11e4-82bf-be72bee7d9dd.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/4.\n. Alright, can you send a PR with the fix, then?\n. Oh you removed the flag. Okay let me look into it.\n. @priceinjector can you test this change to confirm it fixes the issue? It makes the arc smaller so it doesn't paint outside its bounds, which I believe is why it doesn't repaint those marks.\n. Which version are you using?\nOn Mar 26, 2015 10:42 AM, \"Sergejs Luhmirins\" notifications@github.com\nwrote:\nHi!\nTwo random crashes showed up in Crashlytics. Not sure in what\ncircumstances and how to reproduce it. Never encountered myself. Just for\nyour information, maybe there is something obviuos.\nDevices: Sony ST26I (4.1.2) and LG-E460 (4.1.2)\njava.lang.NullPointerException\n       at android.view.GLES20Canvas.drawArc(GLES20Canvas.java:726)\n       at com.github.rahatarmanahmed.cpv.CircularProgressView.onDraw(CircularProgressView.java:119)\n       at android.view.View.draw(View.java:13573)\n       at android.view.View.getDisplayList(View.java:12524)\n       at android.view.View.getDisplayList(View.java:12568)\n       at android.view.View.draw(View.java:13297)\n       at android.view.ViewGroup.drawChild(ViewGroup.java:3037)\n...\nThanks for awesome library.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/5.\n. Sorry, I don't see an obvious reason why it would drop an NPE like that. Does it happen instantly or maybe after switching into the application?\n. I made some changes that may prevent the NPE, can you try forking from my\nlatest commit and seeing if the problem persists?\nOn Mar 27, 2015 10:24 AM, \"Sergejs Luhmirins\" notifications@github.com\nwrote:\nI managed to reproduce it. NPE happens when I open and close and close\nactivity with progress view very fast.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/5#issuecomment-86973589\n.\n. Pushed those changes to v2.0.1. Feel free to update your dependency to that\ntomorrow. For now, I will close this issue.\n\nOn Fri, Mar 27, 2015 at 2:57 PM, Sergejs Luhmirins <notifications@github.com\n\nwrote:\nWell, I am not able to reproduce it in test project (It may be different\nin actual project), so lets assume its fixed and if something shows up, I\nwill make a pull request.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/5#issuecomment-87071671\n.\n. How exactly do you want the animation to stop? If you want it to just disappear, it's easier to set the visibility on the view to false.\n. Fixed in 73cee9ca1e48c428a888130b110b5e09979b38f4\n. I'd like there to be a fallback color for anyone not using Lollipop's theme accent. Do that and i'll merge this. Also, will this work with AppCompat?\n. Okay good, but I still don't want AppCompat to be a requirement so could\nyou keep the default color if the accent color isn't found?\nOn Apr 22, 2015 12:57, \"Pedro Adame Vergara\" notifications@github.com\nwrote:\nYes, I tried it with themes that extends from Theme.AppCompat (which\nextends from Theme.Material) and it has a default accentColor for use when\nthe user doesn't specify it. So this would work on any device that supports\nAppCompat v7 support library (actually Api 7+). Tried it on 4.0.3+\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/pull/8#issuecomment-95284287\n.\n. I've had an issue complain (incorrectly) about this library depending on\nthe support library so it seems some people have a concern for this out\nthere.\nOn Apr 22, 2015 13:02, \"Pedro Adame Vergara\" notifications@github.com\nwrote:\nAndroid new project's default theme extends from Theme.AppCompat but I'll\ngive it a look and reply ASAP.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/pull/8#issuecomment-95285899\n.\n. That's completely unnecessary, according to the documentation for Themes, resolveAttribute returns false if it doesn't find the attribute. Just check that and apply old code if it doesn't find the accent color.\n. Then try using getContext().getResources().getIdentifier(...)\n. Excellent. If you can do one last thing for me and fix the README and then rebase everything into a single commit so we don't have all those extra commits in the history, i'll test and merge later today.\n. The defaults come very close to the default look. The only big difference\nis the color, and that likely depends on your theme's color. There is a PR\nfor using the theme color so that will be in soon.\n\nThe timing of the animation duration is slightly off but I came as close as\nI could playing it by eye. The shape of the animation should remain the\nsame I'd you keep the default number of steps.\nOn Apr 22, 2015 07:28, \"AndroidDeveloperLB\" notifications@github.com\nwrote:\n\nas the title says. What are the configurations for this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/9.\n. Since the color changes based on your theme, for now you just have to set the color to match your theme's accent. In the next release this will happen automatically, and should hopefully support the support library as well. \n. Awesome, thanks for your contribution!\n. Oh man this is a funny bug. When checking if you specified a color for the progress bar, it uses a default of -1 to indicate that you didn't provide one. Unfortunately, the special thing about the color #FFFFFF is that as an integer it evaluates to... surprise, -1!\n\n\nSo I'm pretty sure that's your issue. I'll fix this soon. (In the meantime, try using a different color and let me know if that actually was your issue)\n. I would make sure that your theme colorAccent from the support library is set to a color. I'm afraid if it's for some reason set to 0 by default, it might draw it transparent. The progress bar will look for a color in this order: color as xml property, colorAccent in support theme, android:colorAccent from 5.0+ native theme, and then the default color.\nBut you did mention another color so it might not be that. I'm not really sure what could cause this. If you can replicate and isolate the issue in a test application, I can take a closer look.\n. Closing due to no activity\n. Looking at the live memory graph in Android studio while running the example app confirms this, I'll have to take a look and figure out what's leaking.\n. Wait, never mind, that seems to happen without a CircularProgressView, for whatever reason. I've checked heap dumps of the sample CPV application and there doesn't appear to be anything out of the ordinary.\n. Just tried replacing the ProgressBar in ImageGridFragment.java and item_image_grid.xml with a CPV and I don't get any OOM error on my Nexus 5.\n. Perhaps, heres the diff of the sample after my changes:\n``` diff\ndiff --git a/sample/AndroidManifest.xml b/sample/AndroidManifest.xml\nindex c88a090..d22c8c7 100644\n--- a/sample/AndroidManifest.xml\n+++ b/sample/AndroidManifest.xml\n@@ -5,7 +5,7 @@\n     android:versionName=\"1.9.4\" >\n <uses-sdk\n\n\nandroid:minSdkVersion=\"5\"\n\nandroid:minSdkVersion=\"22\"\n         android:targetSdkVersion=\"22\" />\n\n@@ -14,8 +14,7 @@\n \n+        android:label=\"@string/app_name\">\n     \ndiff --git a/sample/build.gradle b/sample/build.gradle\nindex 41190c3..a838e09 100644\n--- a/sample/build.gradle\n+++ b/sample/build.gradle\n@@ -17,6 +17,8 @@ repositories {\n\n\ndependencies {\n     compile fileTree(dir: 'libs', include: '*.jar')\n+    compile 'com.github.rahatarmanahmed:circularprogressview:2.2.1'\n+\n }\nandroid {\ndiff --git a/sample/res/layout/item_grid_image.xml b/sample/res/layout/item_grid_image.xml\nindex 875f936..8051341 100644\n--- a/sample/res/layout/item_grid_image.xml\n+++ b/sample/res/layout/item_grid_image.xml\n@@ -11,12 +11,12 @@\n        android:contentDescription=\"@string/descr_image\"\n        android:scaleType=\"centerCrop\" />\n\n<ProgressBar\n<com.github.rahatarmanahmed.cpv.CircularProgressView\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/progress\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\nandroid:indeterminate=\"false\"\nandroid:max=\"100\"\napp:cpv_indeterminate=\"false\"\n        android:layout_gravity=\"bottom\"\n        style=\"@style/ProgressBarStyle\" />\n \n\\ No newline at end of file\ndiff --git a/sample/src/com/nostra13/universalimageloader/sample/fragment/ImageGridFragment.java b/sample/src/com/nostra13/universalimageloader/sample/fragment/ImageGridFragment.java\nindex d338feb..768f4a8 100644\n--- a/sample/src/com/nostra13/universalimageloader/sample/fragment/ImageGridFragment.java\n+++ b/sample/src/com/nostra13/universalimageloader/sample/fragment/ImageGridFragment.java\n@@ -27,6 +27,8 @@ import android.widget.BaseAdapter;\n import android.widget.GridView;\n import android.widget.ImageView;\n import android.widget.ProgressBar;\n+\n+import com.github.rahatarmanahmed.cpv.CircularProgressView;\n import com.nostra13.universalimageloader.core.DisplayImageOptions;\n import com.nostra13.universalimageloader.core.ImageLoader;\n import com.nostra13.universalimageloader.core.assist.FailReason;\n@@ -102,7 +104,7 @@ public class ImageGridFragment extends AbsListViewBaseFragment {\n                holder = new ViewHolder();\n                assert view != null;\n                holder.imageView = (ImageView) view.findViewById(R.id.image);\nholder.progressBar = (ProgressBar) view.findViewById(R.id.progress);\n\nholder.progressBar = (CircularProgressView) view.findViewById(R.id.progress);\n                view.setTag(holder);\n            } else {\n                holder = (ViewHolder) view.getTag();\n@@ -138,6 +140,6 @@ public class ImageGridFragment extends AbsListViewBaseFragment {\nstatic class ViewHolder {\n    ImageView imageView;\n-       ProgressBar progressBar;\n+       CircularProgressView progressBar;\n}\n }\n\\ No newline at end of file\n```\n. Closing due to no activity.\n. Looks like the ValueAnimators are doing something funky.\n\n\nCan you share the code for the empty project? Tried using LeakCanary in the example project but it didn't catch anything.\n. I meant to ask @OFmarting \n. Apologies for the delay. Confirmed the memory leak with @OFmarting's test project (Thank you! I think some of the Thread business in the example code prevented LeakCanary from catching the leak).\nIt seems as if there are some ValueAnimators that retain a reference to the CPV which contains a reference to the context it was in, after exiting that context. Added some code to onDetachedFromWindow() to ensure that those ValueAnimators are properly cancelled. It seems this stops LeakCanary from finding any memory leaks, but I'm not 100% since LeakCanary doesn't immediately catch the leak so I may have missed the message.\n@priceinjector, @OFmarting: Can either of you try to confirm if this commit fixes the memory leak? (This may help you reference your local clone of CPV instead of the one in the maven repo. I don't want to release a new version until I confirmed the fix.)\n. Okay, just released v2.3.1, and the fix is in there.\n. Go ahead and make a new issue for it\n. I'm on vacation right now, but glancing at it it looks good (unlike some other PRs i've gotten cough#2cough). One thing I might suggest is adding a CircularProgressViewAdapter class that implements CircularProgressViewListener with empty methods. See this SO answer for a good explanation on what an Adapter is.\n. Excellent, thanks.\nDo note I did change how the listeners work a bit. Biggest change is allowing multiple listeners. onModeChange now only triggers when using setIndeterminate with a different value than it had previously. And the listener interface and adapter class are in their own files.\n. Seems like all application animations are disabled in battery saver mode, causing all ValueAnimators to end instantly. However, CPV just resets the animation at the end of the indeterminate animation, so it just sorta flickers and crashes my emulator. @fredericojssilva: Was flickering the only issue or did it cause other problems like crashing or battery drainage?\n. I don't know if there is a good solution to this. However, since battery saver mode was introduced in API 21, I would suggest using the native progress bar when running API >=21. I believe this should be possible with the <include> tag to include a layout/progress_bar.xml using a CPV, and then making a layout-v21/progress_bar.xml that uses the native ProgressBar.\n. @rongi As I said before, I still think this should be solved by not using CPV on API >= 21. Much easier to just swap in the native view than to deal with handling battery saver mode logic.\n(That being said, if you can figure out how to do that automatically in CPV itself without breaking it for older versions, I would definitely accept a PR for that.). Thanks!\n. Please don't submit a PR without testing it. This will be problematic because the default animDuration is something like 4 seconds long, which is intended for indeterminate mode. It's probably best to have a separate property for this. I'll add an issue and add it later when I have time. \n. This has been added to master, and it'll be in the v2.3.0 release\n. Just released v2.3.2 with the fix, should be available in a few hours.\n. What happens if you use the cpv_animAutostart option in XML and remove progressViewstartAnimation()?\n. Can you try logging before and after progressView.startAnimation() to see if it actually completes? Also maybe a try-catch, in case Robolectric is swallowing the exception.\n. How about after startActivity()? How do you know the assert statement isn't reached? mainActivity shouldn't be null so it won't say anything.\n. Can you try debugging it and seeing what line it's hanging on? I think you should be able to pause it after it starts hanging.\n. I'm not at all familiar with Robolectric so what is the issue with this loop?\n. @alexandrudumbravan a pull request would be very welcome! I am no longer actively maintaining this library. \n. Just released v2.5.0, give it a few hours to show up. This includes @lukaszkalnik's PR, which should hopefully fix this issue.\n. Appreciate this but you don't need any code to start the animation, it starts automatically by default. \n. Sike, I haven't looked at this library in a while, turns out auto animate is false by default. Instead of running code though you should use the auto start animation parameter. I'll go ahead and add that in.\n. It uses ValueAnimators for the animations. \n. Hopefully that solves it. Closing this issue. Comment if it doesn't work tho.\n. Well, looks a lot better than what #2 tried to do. I'll confirm and merge sometime this weekend.\n. Also please update the documentation in README.md\n. Just got a moment to look at this, it doesn't work. Please don't make a PR unless you've tested the changes.\nThis line is where the startAngle should be set. Admittedly, i guess it doesn't make sense to name it startAngle there and use the same variable later, even when i'm not \"starting\". So what you should probably do is rename the old startAngle to angle, and initialize it at that line to your startAngle. Also change the default to -90 or 270.\n. I'm testing using the example application in this repo, with some changes like adding cpv_startAngle. I saw that it started the swoop animation from the same angle as before, and stayed at the same position after it settled. Actually, here's what I put\n<com.github.rahatarmanahmed.cpv.CircularProgressView\n    android:id=\"@+id/progress_view\"\n    android:layout_width=\"40dp\"\n    android:layout_height=\"40dp\"\n    android:layout_centerHorizontal=\"true\"\n    android:layout_centerVertical=\"true\"\n    android:padding=\"0dp\"\n    app:cpv_animAutostart=\"false\"\n    app:cpv_indeterminate=\"false\"\n    app:cpv_startAngle=\"45\"\n    app:cpv_thickness=\"4dp\" />\nBut you don't need to test it to see that it won't work. when resetAnimation() is called to start the animation, it initializes startAngle to -90.\n. Ah, I understand now, you're not using the determinate animation. I apologize for calling you out earlier (had issues with PRs that were never tested before).\nStill, it's inconsistent to have a startAngle option that doesn't work if you do use the animation, and I'd like for it to work in that case as well. The swoop is 360 degrees so it is simple, and there's no reason not to support that, so I'd appreciate it if you'd add that in. (Also remove your example commit).\n. Sorry, this PR slipped between the cracks while I started my new job. Thanks for your contribution!\n. Just released v2.4.0 with this PR, should be available from maven in a few hours\n. If your eclipse android project uses gradle, you can include it as a dependency in your gradle build file. I don't really know how to add maven dependencies in Eclipse without gradle, though.\nEclipse's ADT is no longer actively supported, the Android Developer Blog suggests you migrate to Android Studio:\nhttp://android-developers.blogspot.com/2015/06/an-update-on-eclipse-android-developer.html\nhttps://developer.android.com/sdk/installing/migrate.html\n. You may be able to clone this repo, build it with ./gradlew build, and look in the circularprogressview/build folder and see if it gives you a .jar or .aar you can use.\n. CPV doesn't have a way to do this yet. Pausing the animation calculations was only added in API level 19, so that's not really feasible. However, I suspect Android doesn't call paint() on hidden Views.\nI'm not the most experienced with Android either so I don't have a clear answer for you.\n. CPV doesn't have any support for this but I don't imagine it'd be too tough to\ndraw a circle drawable with the background you want and stack the CPV on top\nof it.\n\nOn Dec 9 2015, at 7:00 am, Robert <notifications@github.com> wrote:  \nAny way of setting the \"behind progress color\" like in this\nexample ?\n\n\u2014\nReply to this email directly or view it on GitHub.\n. This doesn't seem to be an issue with CPV, but with your project not generating the R$styleable class correctly. Lots of answers can be found googling for NoClassDefFoundError Styleable.\n. Glad to see this library is helpful to you. Unfortunately, I am no longer actively maintaining this library.\n\nOn top of that, I don't think the official Material indeterminate loader has a finishing animation, so I would be hesitant to deviate from that. (I haven't done any android dev in a while so correct me if I'm wrong)\n. Since cancel() is a public method, can you rename it to stopAnimation(), which is more descriptive and consistent with the other corresponding public methods?\nAnd if you could update the README.md with the new method, that would be very helpful!\nOther than those two nitpicks, looks good!\n. Ah, one more small bug I noticed. If you do progressView.setVisibility(View.VISIBLE) while the view is already set to VISIBLE, it will reset the animation.\n. Appreciate the PR, thanks for fixing all the little things as well!\n. Appreciate the effort, but I'd like to keep CPV as close to the Material progress bar as possible. Keeping things simple makes this easier to maintain, too.\nI don't think it's too difficult to add a background in an Android layout anyway using ShapeDrawables. Letting users create their own backgrounds gives them the flexibility of the Android layout system and doesn't constrain them to the options we support.\nIf you did want to have a library that has both a CPV and a background, you can do just that. Simply write a custom view that depends on CPV and draws a ShapeDrawable behind a CPV, and publish that to maven.\n. > The material circular ProgressBar doesn't allow a determinate mode. That's the big difference between your project and the official ProgressBar and the reason why this project should support displaying a background. The official horizontal determinate ProgressBar does also support this.\nThat's true, but the material design guidelines do have a reference animation for determinate progress bars that I based it on.\n\nThat's what I tried first: Simply drawing a ShapeDrawable behind CPV, but I've ran into issues with some margins not being quite the same. With exactly the same size of both the ShapeDrawable and CPV there was still 1px difference between the two. Not sure why that happened, but at that moment I figured that it'd be easier to simply draw the background within CircularProgressView and it works flawlessly.\n\nHmm, this could possibly be an error in calculating the margins in CPV. I'll look into it and see if I can't figure it out myself.\n. @mrmaffen So here's how I got it to work:\n\nAdd a drawable to res/drawable/cpvbg.xml like this. Set color to whatever, and set width to the same thickness as your CPV.\nxml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"oval\">\n    <stroke android:width=\"4dp\" android:color=\"#BBBBBB\"/>\n</shape>\nThen in your layout, you can stack them like this. Again, make sure thickness matches. Another thing is to give the ImageView a padding equal to 1/2 * cpv_thickness. I'm not sure exactly why they don't line up but i assume it's because CPV probably handles padding slightly different than normal views?\n``` xml\n    \n    <ImageView\n        android:src=\"@drawable/cpvbg\"\n        android:padding=\"2dp\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" />\n\n    <com.github.rahatarmanahmed.cpv.CircularProgressView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:id=\"@+id/progress_view\"\n        android:padding=\"0dp\"\n        app:cpv_indeterminate=\"true\"\n        app:cpv_thickness=\"4dp\" />\n\n</FrameLayout>\n\n```\nNow if you did really contrasting colors, the antialiasing might leak thru from the edges like so:\n\nI dunno what to do about that, but I don't think that's going to be a huge issue for anyone.\n. When you want to hide the view use setVisibility to hide it, and call stopAnimation to prevent any any animations while invisible\n. uh, why would it show up in a webview?\n. This widget isn't going to show up in a webview, though. You have to manually control it. Try something like this but with CPV instead: http://stackoverflow.com/questions/2537454/android-webview-progress-bar\n. If you can post a minimal reproduction of the issue, yes.\n. You didn't post your code.\n. Appreciate the effort but I'd like to avoid using other dependencies. Also, even if we were to use nineoldandroids, though, it's definitely not okay to copy the whole project into this repository. \n. I've gotta ask\u2026 do they have the same ID?. Also the package name shows that you are not using this library. Please open an issue with the fork you are using. . This is out of scope of this library. See this comment:\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/29#issuecomment-163282118\nOn Feb 27, 2017 10:29 AM, \"Abbasali\" notifications@github.com wrote:\n\nhi, want set background only for progressbar\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/38, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADBudr-Xz4cL-6BWJRmqCKZsczmoETgdks5rgvnkgaJpZM4MNUpe\n.\n. CircularProgressView can be sized like any other android View. This is\nlikely an issue with your layout.\n\nIf you can provide a reproducible example specific to CPV then we can\nreopen this issue but meanwhile you can get help from any other Android\ncommunity like StackOverflow.\nOn Sat, Mar 18, 2017 at 10:41 PM Ajeet Kumar Meena notifications@github.com\nwrote:\n\nI want a smaller progress view but I am not able to change the size.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/39, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADBudtBVc_2gzZMp7UH96aDnbZ7I1aQ2ks5rnKPigaJpZM4Mhnws\n.\n. I think the view is still there before you call startAnimation(), but the progress is at 0 so it doesn't show anything. You can set the visibility with View.setVisibility(). No, the progress will still animate at 0 for indeterminate CPVs. It\nwouldn't make sense for progress to affect an indeterminate progress bar\nsince it doesn't really have a concept of progress.\n\nIt's best to leave the visibility logic out of the library so we don't make\nassumptions about how all users want it to behave. You have the freedom to\nmake it behave the way you want (you could subclass it so it automatically\nhides when you want, too).\nOn Fri, Mar 31, 2017 at 3:40 PM leonapse notifications@github.com wrote:\n\n@rahatarmanahmed https://github.com/rahatarmanahmed Yes that's what I\nwas doing, but was hoping that there's some mechanism that automatically\nremoves the visibility or set the progress to 0 when calling\nstopAnimation(). A question: Can you set the progress at 0 to hide the\nprogress if your progress view is an indeterminate one?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/40#issuecomment-290824177,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADBudvn3Koq8_4xlYZcCH9kji-Ahx2_bks5rrWTXgaJpZM4Mvk5g\n.\n-- \n\u2014\nRahat Ahmed\n\nrahatarmanahmed@gmail.com\nhttp://rahatah.me/d\n. Haha wow, how did that mistake slip past for THREE years?!\nGood news is \"yay, you fixed it\"! Bad news is, I haven't had an update in 1.5 years, and haven't done android development in nearly twice that, so I don't remember how I used to publish new versions. I may not get to publishing it any time soon.. Yo this code is broke as hell:\nNot sure why you made typedArray a class member, it shouldn't really be accessed outside of init.\nHowever I do notice my mistake in these lines that basically do nothing https://github.com/rahatarmanahmed/CircularProgressView/blob/master/circularprogressview/src/main/java/com/github/rahatarmanahmed/cpv/CircularProgressView.java#L50-L53\nSo what I want you to do is delete lines 53-57 in init(), and revert initAttributes back to the way it was, using a local TypedArray (but with your new options included).\n. This should not check the typedArray, but instead use the startAngle you moved to the top of the file.\n. ",
    "priceinjector": "Yes, this image from samsung galaxy s4 with 4.4.2\n. The fix is just a workaround...I have removed the anti aliased flag on the Paint() constructor\n. It looks less smooth when looking very close to it however :) \n. Works like a charm! Thank you\n. I think this is something else because I have another progress in a\ndifferent color...I tried to remove the color so it will take default...\nthe same issue\nOn May 2, 2015 7:56 PM, \"Rahat Ahmed\" notifications@github.com wrote:\n\nOh man this is a funny bug. When checking if you specified a color for the\nprogress bar, it uses a default of -1 to indicate that you didn't provide\none. Unfortunately, the special thing about the color #FFFFFF is that as an\ninteger it evaluates to... surprise, -1!\n[image: 2015-05-02_11-52-28]\nhttps://cloud.githubusercontent.com/assets/3174006/7441908/117537bc-f0c2-11e4-9752-309b0d7bfe8d.png\nSo I'm pretty sure that's your issue. I'll fix this soon. (In the\nmeantime, try using a different color and let me know if that actually was\nyour issue)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/11#issuecomment-98379607\n.\n. Strange, so why replacing it with native progressbar doesn't have the\nmemory issue? Maybe it is something in CPV params?\nOn May 9, 2015 9:46 PM, \"Rahat Ahmed\" notifications@github.com wrote:\nWait, never mind, that seems to happen without a CircularProgressView, for\nwhatever reason. I've checked heap dumps of the sample CPV application and\nthere doesn't appear to be anything out of the ordinary.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/12#issuecomment-100528863\n.\n. It is in the image pager sample... but probably it is the same... will\ncheck. Thanks!\nOn May 9, 2015 9:55 PM, \"Rahat Ahmed\" notifications@github.com wrote:\nJust tried replacing the ProgressBar in ImageGridFragment.java and\nitem_image_grid.xml with a CPV and I don't get any OOM error on my Nexus 5.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/12#issuecomment-100529937\n.\n. Sorry, I dont have it anymore... it was a simple pager example from UIL\nlibrary with your circular progress instead of the native one\nOn May 31, 2015 10:05 PM, \"Rahat Ahmed\" notifications@github.com wrote:\nLooks like the ValueAnimators are doing something funky.\nCan you share the code for the empty project? Tried using LeakCanary in\nthe example project but it didn't catch anything.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/12#issuecomment-107234403\n.\n. \n",
    "siga111": "1.0.0 in production.\n. As I stated before, that stacktrace is from Crashlytics, I have never encountered this crash myself. I will investigate a bit and update if I find some new details.\n. I managed to reproduce it. NPE happens when I open and close and close activity with progress view very fast.\n. Well, I am not able to reproduce it in test project (It may be different in actual project), so lets assume its fixed and if something shows up, I will make a pull request. \n. ",
    "jamesddube": "sorry for late response, i just followed your advice and it works.....thanks\n. Had the same issue when i started... I used it for my final year project. You can refer to the response here\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/6\n. ",
    "pedroadame": "Yes, I tried it with themes that extends from Theme.AppCompat (which extends from Theme.Material) and it has a default accentColor for use when the user doesn't specify it. So this would work on any device that supports AppCompat v7 support library (actually Api 7+). Tried it on 4.0.3+ \n. Android new project's default theme extends from Theme.AppCompat but I'll give it a look and reply ASAP.\n. Hmmmm. Well, the library doesn't depend of the support library but my code needs a theme extending Theme.Material which has the colorAccent attr. The logic tells me that if you want a Material-like behavior, you should inherit Theme.Material (or Theme.AppCompat from the support library) to have a materialized app.\nBut, my solution would be two classes, one with a default color for non-AppCompat or support library users, and my modified version on the other hand, which automatically takes your accent color. What do you think about it?\n. I've already tried that and that's why I've separated into two files. If the attribute doesn't exist on the theme, the compiler throws an error \"R.attr.colorAccent not found\" and that stuff. I don't know if it's a bug because it should compile and return false at runtime.\n. Done! :)\n. It's a pleasure!\n. Done it. See #14 \n. Done + bonus ;)\n. ",
    "AndroidDeveloperLB": "What should be changed then? And to what?\nCan you also add support for older versions of Android, like the support library?\n. ok, I've decided to use a different library (this: https://github.com/fengdai/AlertDialogPro ). Sorry for all the trouble/time. And thank you.\n. ",
    "OFmarting": "Hi,\nI'm using your library (V2.3.0) in my application. Recently I integrated squares  library LeakCanary which detects memory leaks. I think your library leaks the context. LeakCanary created the following log:\nD/LeakCanary\ufe55 * .MainActivity has leaked:\nD/LeakCanary\ufe55 * GC ROOT android.view.Choreographer$FrameDisplayEventReceiver.this$0\nD/LeakCanary\ufe55 * references android.view.Choreographer.mCallbackQueues\nD/LeakCanary\ufe55 * references array android.view.Choreographer$CallbackQueue[].[1]\nD/LeakCanary\ufe55 * references android.view.Choreographer$CallbackQueue.mHead\nD/LeakCanary\ufe55 * references android.view.Choreographer$CallbackRecord.action\nD/LeakCanary\ufe55 * references android.animation.ValueAnimator$AnimationHandler.mAnimations\nD/LeakCanary\ufe55 * references java.util.ArrayList.array\nD/LeakCanary\ufe55 * references array java.lang.Object[].[10]\nD/LeakCanary\ufe55 * references android.animation.ValueAnimator.mUpdateListeners\nD/LeakCanary\ufe55 * references java.util.ArrayList.array\nD/LeakCanary\ufe55 * references array java.lang.Object[].[0]\nD/LeakCanary\ufe55 * references com.github.rahatarmanahmed.cpv.CircularProgressView$5.this$0 (anonymous class implements android.animation.ValueAnimator$AnimatorUpdateListener)\nD/LeakCanary\ufe55 * references com.github.rahatarmanahmed.cpv.CircularProgressView.mContext\nD/LeakCanary\ufe55 * leaks .MainActivity instance\nTo confirm this I also created an empty project with a single activity and a CPV. After rotating the device LeakCanary reported the same memory leak. \n. Here is the project.\n. Looks good. All occupied memory is reclaimed after a configuration change.\nGood job!\n. I noticed a small issue in the solution. When using the CPV in a ListView or RecyclerView where Views are recycled/reused the CPV stops when it gets visible the second time. The solution is to override  onAttachedToWindow()  and call startAnimation() there. \nI think you could even move the block\nif(autostartAnimation)\n    startAnimation();\nfrom init(AttributeSet attrs, int defStyle) to onAttachedToWindow().\nSorry for overlooking that issue.\n. ",
    "rongi": "@rahatarmanahmed What do you think about not running animation in battery saver mode? This flickering looks really bad.. @rahatarmanahmed Is it possible to have native view that looks the same as CPV on Android API >= 21? Is it possible to change color of that view? Will this native view look the same across different android devices? I'm using CPV mainly for consistency of how progress view looks across devices.. I've just looked at behaviour of standard ProgressView and it looks like they just don't show their progress if device is in a battery saving mode. It feels like even this is a better behaviour than non stopping flickering.. ",
    "kaoree": "please try write while(1){\n} code in oncreate function, and see whether the  assertion will be reached or not;\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"Chris\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2015\u5e746\u670812\u65e5(\u661f\u671f\u4e94) \u4e0a\u53489:28\n\u6536\u4ef6\u4eba: \"rahatarmanahmed/CircularProgressView\"CircularProgressView@noreply.github.com; \n\u4e3b\u9898: [CircularProgressView] Causes robolectric unable to proceed (#21)\nHi, I was using this library and robolectric (3.0-rc3) for unit test. I found that circularProgressView.startAnimation() will prevent Robolectric from proceeding.\n public class MainActivity extends AppCompatActivity {     @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);         CircularProgressView progressView = (CircularProgressView) findViewById(R.id.progress_view);         progressView.startAnimation();     } } @RunWith(RobolectricGradleTestRunner.class) @Config(constants = BuildConfig.class, sdk = 21) public class MainActivityTest {     @Test     public void testMainActivity() {         MainActivity mainActivity = Robolectric.setupActivity(MainActivity.class);         Assert.assertNotNull(mainActivity);     } }\nThe program will stuck in setupActivity() and the assertion will never be reached. And if I comment out progressView.startAnimation();, then everything works fine.\n\u2014\nReply to this email directly or view it on GitHub.\n. sorry , true,not 1\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"Chris\";notifications@github.com;\n\u53d1\u9001\u65f6\u95f4: 2015\u5e746\u670812\u65e5(\u661f\u671f\u4e94) \u4e0a\u53489:42\n\u6536\u4ef6\u4eba: \"rahatarmanahmed/CircularProgressView\"CircularProgressView@noreply.github.com; \n\u6284\u9001: \"\u67ab\u53f6\"1052942629@qq.com; \n\u4e3b\u9898: Re: [CircularProgressView] Causes robolectric unable to proceed (#21)\n@kaoree I don't understand. What is while(1){} code? I don't think java support using integer in while statement.\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "ChrisZou": "@kaoree I don't understand. What is while(1){} code? I don't think java support using integer in while statement.\n. @kaoree Do you mean that CircularProgressView uses a while(true) loop and that's why the assertion  will never be reached?\n. @rahatarmanahmed It does no difference, the test will still stuck.\n. @rahatarmanahmed I added some logs before and after startAnimation.\nJava\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        CircularProgressView progressView = (CircularProgressView) findViewById(R.id.progress_view);\n        System.out.println(\"oncreate\");\n        try {\n            progressView.startAnimation();\n        } catch (Exception e) {\n            System.out.println(\"exception happened when start animation\");\n            e.printStackTrace();\n        }\n        System.out.println(\"oncreate end\");\n    }\nThe \"oncreate\" and \"oncreate end\" messages were successfully logged and no exception was thrown.\n. I know because the test never stops, it just keeps running and running and nothing comes out. If it reaches then there would be a test result output and the running would end. But in this case, it doesn't. \n. ",
    "trevorrjohn": "~~Hey so I think I know the issue here. With Robolectrics latest release the Animation classes are not faked or shadowed. This means that the actual animations are running. So you must call ShadowLooper.pauseMainLooper() before any animation.~~\nThis solution does not work because it is actually running in a loop here:\nhttps://github.com/rahatarmanahmed/CircularProgressView/blob/master/circularprogressview/src/main/java/com/github/rahatarmanahmed/cpv/CircularProgressView.java#L373-L380\n. I was seeing an infinite loop, I will do some more investigation and post\nmy findings.\nTrevor\nOn Aug 14, 2015 14:31, \"Rahat Ahmed\" notifications@github.com wrote:\n\nI'm not at all familiar with Robolectric so what is the issue with this\nloop?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/21#issuecomment-131203694\n.\n. \n",
    "alexandrudumbravan": "I've ran into this issue myself in the following scenario:\n- i had an overlay over my layout with the progress while data was loading\n- when the data loaded the visibility was set to GONE but the view kept animating. The solution to bypass the test was to add the view when showing the loading layout and remove it programatically when hiding the layout.\n  My advice for your library is to have the current functionality in case someone else runs into this:\n- move the code from onDetachedFromWindow into a public cancel() method\n- override the setVisibility method in which you call resetAnimation for VISIBLE and cancel() for GONE or INVISIBLE\n. @lukaszkalnik go ahead. I don't think I would have the time for this\n. ",
    "lukaszkalnik": "@alexandrudumbravan thank you for this suggestion. I had similar problems with Espresso tests and your fix seems to have improved the situation. Do you want to submit a pull request or should I?\n. Ok, I also moved the stopAnimation() method right after startAnimation() and resetAnimation() to keep them together.\n. Right, thanks for pointing that one out!\n. Cool, thanks! :)\n. ",
    "komissarovdenis": "+1 same for me\n. ",
    "chiragandroid": "increase the duration and give cpv_animSteps will works fine. @mtwn105\n. ",
    "saadfarooq": "Updated README.md\n. Really ? How are you testing ? The intended usage is to have\napp:cpv_indeterminate=\"false\"\n        app:cpv_startAngle=\"-90\"\nand then setProgress in your code as needed. \n. The startAngle parameter is intended to be the angle at which progress starts in determinant progress mode. It's not the swoop startAngle but the canvas startAngle. It works fine in determinant progress mode but not if you are switching between indeterminate and determinate progress modes. I added an example to the PR.\nEven if you wanted this to also determine the swoop startAngle (which shouldn't be hard if the swoop is guaranteed to be 360 degrees), the line you pointed out is completely irrelevant. That variable is not even used in determining the animator and is overridden as soon as the first animation callback comes through so it doesn't matter what it's value is at this point. I'm not even sure why you have it there.\n. This is the best I could get it to do. There is a slight jank when starting indeterminate animation that I can't figure out. The rest seems fine.\n. ",
    "brunolopes446": "I also face the same issue. Flickering in the CircularProgressView, with disabled animations in developer settings.\n. ",
    "jiawenzhang": "Yes, I had the same issue.\n. ",
    "leonapse": "https://github.com/rahatarmanahmed/CircularProgressView#circularprogressview-flickers-when-phone-is-in-battery-saving-mode. @rahatarmanahmed Yes that's what I was doing, but was hoping that there's some mechanism that automatically removes the visibility or set the progress to 0 when calling stopAnimation(). A question: Can you set the progress at 0 to hide the progress if your progress view is an indeterminate one?. @rahatarmanahmed Thanks. . ",
    "bdaykid": "I see. Thank u very much for your quick response! All the best.\n. ",
    "abhiank": "Oh, thats too bad.. \nThankx anyways for making this library. I've created a work-around for now by making the progress bar fade out instead of simply hiding it so its not looking that janky now. \nI'm not sure whether the official design of the circular progress bar has a finishing animation or not, but I saw that a finishing animation in a horizontal bar from another library was looking really nice, so I thought it would look good on this as well. \n. ",
    "smalichenko": "For anyone who's still have the same issue \u2013 i've found an easy workaround. Just use two CircularProgressViews. Determinate view over the indeterminate view. You can use indeterminate for progress indication, and determinate view for the \"finish\" animation.\nAnd that's it :). ",
    "mrmaffen": "\nAppreciate the effort, but I'd like to keep CPV as close to the Material progress bar as possible. Keeping things simple makes this easier to maintain, too.\n\nThe material circular ProgressBar doesn't allow a determinate mode. That's the big difference between your project and the official ProgressBar and the reason why this project should support displaying a background. The official horizontal determinate ProgressBar does also support this.\n\nI don't think it's too difficult to add a background in an Android layout anyway using ShapeDrawables. Letting users create their own backgrounds gives them the flexibility of the Android layout system and doesn't constrain them to the options we support.\nIf you did want to have a library that has both a CPV and a background, you can do just that. Simply write a custom view that depends on CPV and draws a ShapeDrawable behind a CPV, and publish that to maven.\n\nThat's what I tried first: Simply drawing a ShapeDrawable behind CPV, but I've ran into issues with some margins not being quite the same. With exactly the same size of both the ShapeDrawable and CPV there was still 1px difference between the two. Not sure why that happened, but at that moment I figured that it'd be easier to simply draw the background within CircularProgressView and it works flawlessly.\n. > Another thing is to give the ImageView a padding equal to 1/2 * cpv_thickness. I'm not sure exactly why they don't line up but i assume it's because CPV probably handles padding slightly different than normal views?\nI think that was the solution I was looking for in the first place. Thanks! But I think I'll just stick with using my fork and drawing the background directly in onDraw. No reason to change a running system, right? :)\n. ",
    "arpit999bicubic": "Because i wanna to load webpage in fragment.\nOn 18 Jul 2016 12:02 am, \"Rahat Ahmed\" notifications@github.com wrote:\n\nuh, why would it show up in a webview?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/35#issuecomment-233196450,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ATYIWCZcCEZspCW3y515gtZgobTs0oqiks5qWnVHgaJpZM4JN9gu\n.\n. Okay sir thanks one more question it is not showing in activity also can\nyou help me\n\nOn 18 Jul 2016 7:37 am, \"Rahat Ahmed\" notifications@github.com wrote:\n\nThis widget isn't going to show up in a webview, though. You have to\nmanually control it. Try something like this but with CPV instead:\nhttp://stackoverflow.com/questions/2537454/android-webview-progress-bar\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/35#issuecomment-233218001,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ATYIWAayYVPhXgBmULPQkHbGSpKZtrvpks5qWt_pgaJpZM4JN9gu\n.\n. Please check my java and xml file it not work in login.\n\nOn Mon, Jul 18, 2016 at 7:42 AM, Rahat Ahmed notifications@github.com\nwrote:\n\nIf you can post a minimal reproduction of the issue, yes.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/rahatarmanahmed/CircularProgressView/issues/35#issuecomment-233218263,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ATYIWIlKbxw4EJabHgxF-A0CjjrK-_ftks5qWuD_gaJpZM4JN9gu\n.\n. \n",
    "fb0122": "OK  I know that  thank you very much. ",
    "Ajeet-Meena": "@rahatarmanahmed rahatarmanahmed It's working Amazingly, thanks. I did some mistake in layout params.. ",
    "dzolnai": "No problem. A workaround for now is to check for isIndeterminate() and only call setIndeterminate() if it is different from our expected value.. "
}