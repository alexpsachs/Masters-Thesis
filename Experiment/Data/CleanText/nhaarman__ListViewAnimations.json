{
    "nhaarman": "First impression looks good! I will take a better look at it by the end of this week.\nThe javadoc style I prefer is as it is in the AnimationAdapter class, so a little description of any parameters if available. The doc describing the SwipeDismissListViewTouchListener class is indeed somewhat overkill.\nThanks!\n. I've applied some modifications to better suit my style, and merged it in the dev branch.\n. Will have a look at the end of the day. The link doesn't seem to work somehow, could you provide a working one? Thanks!\n. Thanks!\n. Awesome! I will have a look into the changes in the next few days. I'm already looking forward to next pull requests. Let me know when your application is available in the Play Store!\n. I've made readability and performance changes and merged it into master. An update to the Play Store demo will be available soon.\n. Ah, thanks!\n. Yeah I remember putting that line there, apparently something went wrong. Thanks!\n. No it doesn't, but It's updated now :)\n. Included in 2.5.0\n. Are you using the latest version already? I've just pushed the latest code into the master branch, and just updated the .jar file.\n. I'm not sure I understand your issue. If I set an OnItemClickListener to the ListView, the onItemClick(...) method is called only when the unswiped item is clicked. When the item is swiped, pressing \"tap to undo\" doesn't cause the onItemClick(...) method to be called, neither does pressing \"Item deleted\".\n. Can cause unwanted effects.\n. This looks good. Did you find any issues yet?\n. I'm not really sure what you mean when the title view is not completely visible? The only 'jump' I can find is when expanding, the contentview pops in (try slowing the animateExpanding animator down to 5000ms to see what I mean)\n. (I merged this into the dev branch by the way, if you feel the jump issue is indeed an issue, you can create a new issue (that's a lot of issues! :P ))\n. The way @yaneq6 described is implemented in pull request #80. \n. Unfortunately, this could conflict with other usages of the enabled property. It would be better to provide a independent way of doing this.\n. Thanks! However, #65 doesn't have anything to do with swipedismiss. Do you mean #64 ?\n. cb9b979699c21d00761b35801e050398de206125 & 55e6dca8730eaa971d29f836cd2ac386befb1110\n. Too localized.\n. Thanks! But this issue has already been fixed on the dev branch. You can expect a new version on master soon!\n. Thanks for your contribution! However, in it's current state, ContextualUndoAdapter does not work when combined with ExpandableListItemAdapter. Did you make any modifications there as well?\n. 7f8f36d66ebb6ddb07b80d764f1e20365cac0193\n. Invalid - The dev branch contains an updated class for this.\n. Could you try to reproduce it using the example (not the .apk) in the dev branch? If so, please create a new issue.\n. Please note that the SwipeDismiss classes on the master branch are outdated. The dev branch contains rewritten (incompatible) classes.\n. You're absolutely right. I did add a short note to the README this week on this. Perhaps it needs a better explanation indeed.\n. That would be great! I don't use maven directly, so I'm not at all\nexperienced with it :)\nOn Jun 14, 2014 11:13 PM, \"Csaba Koz\u00e1k\" notifications@github.com wrote:\n\nThe maven config is not correct. I'll update it tomorrow.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nhaarman/ListViewAnimations/pull/195#issuecomment-46099807\n.\n. @WonderCsabo I had a go and made some changes to the pom.xml files. Could you perhaps verify them?\n. Ah, nice.\nOn Jun 15, 2014 8:57 PM, \"Csaba Koz\u00e1k\" notifications@github.com wrote:\nI've already started to fix the maven setup, but i ran into a problem\nabout installing the support-annotations artifact (needed for @Nullable\nand @NonNull). Now i am waiting for response from the\nmaven-android-sdk-depolyer guys.\nYour changes in the pom.xml files are good by the way, but not enough. :)\nI'll keep you updated.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nhaarman/ListViewAnimations/pull/195#issuecomment-46124342\n.\n. Nice one!\nI've already created a separate wiki page for that one :)\n. What do you mean?\nOn Jul 14, 2014 7:58 PM, \"Csaba Koz\u00e1k\" notifications@github.com wrote:\nMaybe i am not in the position to say this, but i think you should clearly\nrebase your comments before merging.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nhaarman/ListViewAnimations/pull/218#issuecomment-48934071\n.\n. Although the creator of that library proposes first to include the file in this repo, I believe that the place of the file is better suitable in the AboutLibrary repo.\n. Nice one! Love the easy implementation :)\n. Thank you!\n. See #275.\n. Closing since it merges into master. See 96bf84729f6a8b8f36fdcc5b6731ebbf65465a30.\n. Merged into dev e9cc4e7d372ffa3f6bac7264cb31f7d5855a9f1e\n. Since tests keep failing in CI due to emulator problems, this functionality is not applicable anymore.\n. What I meant is that I'm not running tests in Travis anymore, since they're failing due to emulator problems. Therefore, including code coverage analysis is useless.\n. Hi there,\n\nSince this indeed is a big update, I'll be looking through it, but probably won't merge it at once. \nFor one, drag and drop is not supported since the ListView in API < 14 behaves rather unpredictably, causing all sorts of weird effects.\nIf I can use some of your code, I'll probably cherry pick some commits.\nThank you for your contribution!\n. Thanks for your effort! However, I think this PR is getting way too big.\nI think it'd be better to create multiple PR's, one for each issue/feature.\nThat way, it becomes way easier to review them, and actually know what has changed.\nI will close this pull request, awaiting more smaller ones. It doesn't matter if a PR consists of only one line: one fix/feature -> one PR :)\nThanks!\n. The recycling of items in the ListView is totally unpredictable before api 14, which makes implementing drag and drop very difficult. Since only 10% of the devices run Gingerbread, I've decided that it's not worth it.\n. The swap animations were indeed causing trouble <14. Disabling them seems a good compromise.\nI'll look through your code.\n. See 7b788cdd127c2939be8cb21d8cf36fa10319ba57.\nThanks!\n. Please submit pull requests into the dev branch. Also, onItemMoved is meant to notify an item has moved. Dropped at the same place isn't moved.\n. Inappropriate\n. Yeah didn't care about the example, rewriting it as we speak :)\nOn Jun 16, 2014 1:21 AM, \"Csaba Koz\u00e1k\" notifications@github.com wrote:\n\nIn\nexample/src/main/java/com/haarman/listviewanimations/itemmanipulationexamples/AnimateAdditionActivity.java:\n\n@@ -53,19 +52,21 @@ protected void onCreate(final Bundle savedInstanceState) {\nToast.makeText(this, \"Tap on an item to insert a new item\", Toast.LENGTH_LONG).show();\n-        new Handler().postDelayed(new Runnable() {\n-            @Override\n-            public void run() {\n-                mAnimateAdditionAdapter.insert(mAnimateAdditionAdapter.getCount(), \"HALLO\");\n-                new Handler().postDelayed(this, 1000);\n-            }\n-        }, 1000);\n  +//        new Handler().postDelayed(\n\nCommiting commented code? :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/nhaarman/ListViewAnimations/pull/198/files#r13789022.\n. \n",
    "WonderCsabo": "I know this is a closed issue, but i think you should add javadoc to this feature. Maybe the API is simple but i have to look for the sample application code to use it right. It would greatly enhance the usability of this portion of code if we could see the docs in the IDE.\n. @nhaarman, could you take a look at this?\n. @nhaarman this is not the first time when someone tried to merge from the master branch. I think you should add some information which says that the dev branch should be forked and pushed. Also feature branches should be used. Like here, in the General Notes.\n. The maven config is not correct. I'll update it tomorrow.\n. I've already started to fix the maven setup, but i ran into a problem about installing the support-annotations artifact (needed for @Nullable and @NonNull). Now i am waiting for response from the maven-android-sdk-deployer guys.\nYour changes in the pom.xml files are good by the way, but not enough. :) I'll keep you updated.\n. I see this introduces a new module. I'll update the poms tomorrow.\n. I updated a wiki page.\n. Maybe i am not in the position to say this, but i think you should clearly rebase your comments before merging.\n. Sorry i meant rebase your commits. \n. For bigger features i suggest opening an issue first, so PRs more likely gets accepted after planning.\n. Commiting commented code? :)\n. ",
    "Shusshu": "I reviewed the changes and I say +1 for merge\n. ",
    "Wavesonics": "Was this ever actually put into Maven central?\n. ",
    "hameno": "Apparently not: http://search.maven.org/#search%7Cga%7C1%7Ccom.haarman.listviewanimations\n. ",
    "storkme": "My mistake, sorry, I took the ?r off at the end.\nhttps://code.google.com/p/dashclock/source/browse/main/src/com/google/android/apps/dashclock/ui/SwipeDismissListViewTouchListener.java?r=a7968ff883ad627869130ec6ec7c31554ca9954b should work.\nI haven't reviewed any other changes in this file, there might be some other stuff in there I've missed. Will give you a shout if I see anything.\n. ",
    "Informaticore": "no problem :) is the jar file automatically updated after your merge?\n. thanks a lot :)\n. ",
    "MohammadAG": "This bug still seems to happen in my application.\nMy adapter class subclasses com.haarman.listviewanimations.ArrayAdapter and it's nested under a SwingBottomInAnimationAdapter\n. Yes, I was about to pull this since I saw it this morning, and I noticed that you had it merged already, so yes, it's the latest version :)\nEdit: Getting rid of the SwingBottomInAnimationAdapter and directly passing the adapter to the SwipeDismissAdapter fixes the issue, but that way you can't have animations.\nEdit 2: Apparently, order is important, your main adapter has to be passed to the SwipeDismissAdapter, and then you can pass that to the AnimationAdapter. Minor inconvenience, but here's the working code if anyone hits this issue:\nSwipeDismissAdapter swipeAdapter = new SwipeDismissAdapter(mAdapter, this);\nSwingBottomInAnimationAdapter animAdapter = new SwingBottomInAnimationAdapter(swipeAdapter);\nanimAdapter.setAbsListView(listView);\nlistView.setAdapter(animAdapter);\n. ",
    "inmyth": "It only works correctly on default undo_row.xml like below (the xml that comes with the sample).\n``` xml\n    \n    <TextView\n        android:id=\"@+id/undo_row_texttv\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:padding=\"10dp\"\n        android:text=\"@string/itemdeleted\"\n        android:textColor=\"#ffffff\"\n        android:textSize=\"16sp\" />\n\n    <View\n        android:layout_width=\"1px\"\n        android:layout_height=\"match_parent\"\n        android:layout_margin=\"10dp\"\n        android:background=\"#ffffff\"\n        tools:ignore=\"PxUsage\" />\n\n    <Button\n        android:id=\"@+id/undo_row_undobutton\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:background=\"@null\"\n        android:drawableLeft=\"@drawable/ics_content_undo\"\n        android:padding=\"10dp\"\n        android:paddingRight=\"8dp\"\n        android:text=\"@string/taptoundo\"\n        android:textColor=\"#ffffff\"\n        android:textSize=\"16sp\" />\n\n</LinearLayout>\n\n```\nThe Button undo_row_undobutton corresponds to mUndoActionId. In my experiments, if I replace that button with say, a LinearLayout then a click on \"Deleted\" TextView will trigger onItemClick as well.. \n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<TextView\n    android:id=\"@+id/undo_row_texttv\"\n    android:layout_width=\"0dp\"\n    android:layout_height=\"wrap_content\"\n    android:layout_weight=\"1\"\n    android:padding=\"10dp\"\n    android:text=\"@string/itemdeleted\"\n    android:textColor=\"#ffffff\"\n    android:textSize=\"16sp\" />\n\n<View\n    android:layout_width=\"1px\"\n    android:layout_height=\"match_parent\"\n    android:layout_margin=\"10dp\"\n    android:background=\"#ffffff\"\n    tools:ignore=\"PxUsage\" />\n\n<LinearLayout\n    android:id=\"@+id/undo_row_undobutton\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"110dp\"\n    android:background=\"@drawable/selector_clickable\"\n    android:clickable=\"true\"\n    android:orientation=\"horizontal\" >\n\n    <ImageView\n        android:layout_width=\"40dp\"\n        android:layout_height=\"40dp\"\n        android:layout_gravity=\"center_vertical\"\n        android:layout_marginLeft=\"20dp\"\n        android:contentDescription=\"@string/iv_icon\"\n        android:src=\"@drawable/ics_content_undo\" />\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:gravity=\"left|center_vertical\"\n        android:padding=\"10dp\"\n        android:paddingRight=\"8dp\"\n        android:text=\"@string/taptoundo\"\n        android:textColor=\"#ffffff\"\n        android:textSize=\"15sp\" />\n</LinearLayout>\n\n\n```\n. ",
    "brycehendrix": "My guess is because Button is focusable. Try adding android:focusable='true' to your TextView or LinearLayout\n. Any chance of getting this merged?\n. ",
    "BraisGabin": "I found one problem: when you expand a title view that it's not compleately visible the scroll jumps.\nI'm going to fix this issue this week and test it in a Dialog.\n. Ok, I test it in a Dialog and this PR didn't break anything.\nFix the jump is more difficult than I expected. I think that the best option is merge this PR and create an issue with the jump problem. I will try to fix it when I have time. What do you think, @nhaarman?\n. Great and cleaner solution @yaneq6 ! I implement it 65a69bf94058748208d2f22111c6888d3efa865b and works great. The second INVISIBLE isn't necesary.\n@nhaarman Do you want this like a feature configurable or only like a improvement?\n. The VelocityTrackershould be recycled.\n. If it's recycled in the ACTION_UP or ACTION_CANCEL then it's set to null too (line 221). So this line is not necessary.\n. ",
    "yaneq6": "The same effect is the change from :\npublic void displayUndo() {\n    /***/\n    mContentView.setVisibility(View.GONE);\n    mUndoView.setVisibility(View.VISIBLE);\n}\npublic void displayContentView() {\n    mContentView.setVisibility(View.VISIBLE);\n    mUndoView.setVisibility(View.GONE);\n}\nto\npublic void displayUndo() {\n    /***/\n    mContentView.setVisibility(View.INVISIBLE);\n    mUndoView.setVisibility(View.VISIBLE);\n}\npublic void displayContentView() {\n    mContentView.setVisibility(View.VISIBLE);\n    mUndoView.setVisibility(View.INVISIBLE);\n}\n. Give me one example when disable this behavior is necessary...\nAny way, If content views has different sizes than undo view, listview is not displayed correctly after delete any item.\n. ",
    "PiDyGB": "But in this way there isn't an API for disable this behavior\n. I agree. I don't think that disable this behavior is really necessary, but this is the original behavior and I preferred to keep it in some way, what do you think  @nhaarman  ?\n. ",
    "wdullaer": "Yes indeed #64. I must have made a typo.\nOp 8 jan. 2014 14:24 schreef \"Niek Haarman\" notifications@github.com:\n\nThanks! However, #65https://github.com/nhaarman/ListViewAnimations/issues/65doesn't have anything to do with swipedismiss. Do you mean\n64 https://github.com/nhaarman/ListViewAnimations/issues/64 ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/nhaarman/ListViewAnimations/pull/115#issuecomment-31830315\n.\n. \n",
    "ishish": "Note only the change for SwipeDismissListViewTouchListener was taken from the Pull request. The issue still occurs for the ContextualUndoListViewTouchListener. I split the up and cancel and sent the Cancel event to the following method:\n```\nprivate boolean handleCancelEvent(final View view, final MotionEvent motionEvent)\n{\n     if (mVelocityTracker == null) {\n         return false;\n      }\n  if (mDownView != null && mSwiping) {\n      // cancel\n      animate(mDownView).translationX(0).alpha(1).setDuration(mAnimationTime).setListener(null);\n  }\n\n  mVelocityTracker.recycle();\n  mVelocityTracker = null;\n  mDownX = 0;\n  mDownY = 0;\n  mDownView = null;\n  mDownPosition = ListView.INVALID_POSITION;\n  mSwiping = false;\n  return false;\n\n}\n```\n. ",
    "ghost": "I thought maybe it would be useful to know the changes I have made even if\nyou decide not to incorporate them.\nI haven't made any other changes other than the two pull requests from me\nto make contextual undo adapter work with the expandable list adapter. I\nwas a little confused when I read people had trouble combining the two when\nI haven't had the same issues combining it myself.\nThanks.\nSent from my Android phone. Please excuse brevity, spelling and grammar.\nOn 28/02/2014 8:40 AM, \"Niek Haarman\" notifications@github.com wrote:\n\nThanks for your contribution! However, in it's current state,\nContextualUndoAdapter does not work when combined with\nExpandableListItemAdapter. Did you make any modifications there as well?\n\nReply to this email directly or view it on GitHubhttps://github.com/nhaarman/ListViewAnimations/pull/138#issuecomment-36282164\n.\n. \n",
    "PomepuyN": ":thumbsup:\n. ",
    "tarasokunev": "Ok...Some other: I found one bug in demo app(also in my), when we do swipe to dismiss with  count down, if we do some one randomly, but not last item, and after that in time of counting we swipe other below him, count timer is fixed at same place! If it is fixed? Or you want I will give solution for this bug?\n. There just not exist deletion with timer.\n. ",
    "stevepeak": "From Travis it looks like the tests were not breaking due to the Codecov uploader. I may have grabbed a commit that was failing to build at the time... Hope you still consider at some point. Thank you\n. Ok. I understand. Thank you :)\n. ",
    "farfromrefug": "@nhaarman thanks for looking into this. I have not yet fully tested the drag and drop support for older devices. Bit clearly something was wrong as it was not using nineoldandroids everywhere. You can still merge and keep drag and drop for > 14. \nI hope you are going to like the rest ;-). I am still working on it and a few commits are still to come\nLet me know if i can help\n. ",
    "ertanden": "Known glitches after latest fixes (I can live with them for now):\n1. Swap animations when dragging are disabled for API < 14. They cause strange behaviour.\n2. When SwipUndo is not enabled, the mobileView is still visible when dragging. (When it's enabled, it works good)\n. ",
    "mazurio": "Hello, is there any solution regarding support for API 8? \n. ",
    "Lakedaemon": "I tried submitting to the dev branch but after struggling half an hour with git, that's the best I managed to do.\nSo, what should one use to get notified that the item was dropped in the same place  and that the drag and drop process stopped (because, with my use case, I really need this) ?\n. ",
    "Sonalboraste": "I am also facing the same problem while doing drag and drop operation in list view. Problem in  DragAndDropHandler.java at line #588\n. ",
    "nicolassemeniuk": "This is giving me errors as well. Is it needed on the library? \n. ",
    "mihaicristianpetrescu": "From my point of view it's not needed, I think it's just there as a default.\n. ",
    "jpshelley": "Whats that status of this @nhaarman can we get a merge? Any reason for the backups? tools:replace doesn't seem to work in my project.\n. ",
    "streetsofboston": "It is recycled (in the ACTION_UP and ACTION_CANCEL motion-events).\n. You're right. Setting it to null at that line may be redundant there (but that line is not part of this commit).\n. ",
    "MGaetan89": "Why not user version 1.1.3 (latest stable release) directly?\n. "
}