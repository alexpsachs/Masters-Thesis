{
    "ruslanskorb": "Hi Dustin,\nThanks for the PR! I wanted to add this feature earlier.\nTaking a look at your implementation, I noticed that it is different from my idea.\nSo I implemented it in another way. I hope you enjoy it.\nSincerely,\nRuslan\n. Hi Ilya,\nThank you for the PR!\nBut I can't merge it, because it is a bit different from the my idea.\nAlso, if you are planning in the future new pull requests, then I would like to ask you to use the style of code that is used in this project.\nSincerely,\nRuslan\n. Hi golu1aug,\nFor this purpose you need to create an image mask (circular or oval shape) and re-create the cropped image using the method CGImageCreateWithMask.\nSincerely,\nRuslan\n. Hi Patrick,\nCurrently, I don't have a time to add it. If only a little later.\nI can propose you to add this functionality and make a PR :)\nSincerely,\nRuslan\n. Bump. I'd like to hear from all watchers on this. Should RSKImageCropper support custom crop size at runtime? If yes, it's high time we make it happen.\nCheers,\nRuslan\n. Due to lack of demand for the community, a task is closed.\n. Hi Bhavya kothari,\nSorry for the late reply.\nIn some time I will try to add the possibility to set a mask with the custom path. And you'll be able to crop the image in triangular shape.\nSincerely,\nRuslan\n. Hi Hemang Shah,\nFor this purpose, the use of the RSKImageCropper is not required. I would suggest that you use in your code method below with the category FixOrientation:\nobjective-c\n- (UIImage *)croppedImage:(UIImage *)originalImage cropRect:(CGRect)cropRect\n{\n    CGImageRef croppedCGImage = CGImageCreateWithImageInRect(originalImage.CGImage, cropRect);\n    UIImage *croppedImage = [UIImage imageWithCGImage:croppedCGImage scale:1.0f orientation:originalImage.imageOrientation];\n    CGImageRelease(croppedCGImage);\n    return [croppedImage fixOrientation];\n}\nBest,\nRuslan\n. Sorry, but this PR contains unrelated commits.\nPlease make a pull request for each of the enhancements.\nBest,\nRuslan\n. Thanks @jjochen! :+1:\n. Hi Sarawut,\nI think you have not implemented the method imageCropViewControllerCustomMaskRect: or it returns CGRectZero.\nSincerely,\nRuslan\n. Hi Anton,\nThanks for the PR! This can be useful improvement.\nI think we should allow the user to set constraints of certain UI elements. In your implementation, the user must set all constraints simultaneously.\nAlso, you need to add the ability to update custom constraints. It is necessary that the PR was sterling :)\nCan you make the necessary changes?\nSincerely,\nRuslan\n. Hi Raul,\nYes, it is correct. croppedImage should not always be in the same size. Because the size is based on a selected region of the original image.\nSincerely,\nRuslan\n. When you scale the image, the selected area of the image is changing. It has a different size than the previous one. So, the size of croppedImage has different values.\n. Hi @Wangxiaotao,\nWhat do you mean?\nI just checked the installation using cocoapods and everything works fine.\nSincerely,\nRuslan\n. RSKImageCropper is available in the repository CocoaPods - https://github.com/CocoaPods/Specs/blob/master/Specs/RSKImageCropper/0.4.0/RSKImageCropper.podspec.json.\nI think you have a problem with CocoaPods that you have installed.\nCheers,\nRuslan\n. Oh, It is my mistake...\nI will make a new version and push it to CocoaPods.\n@Wangxiaotao Sorry about that!\n@yas375 Thanks!\n. Fixed :innocent:\n. Hi Andrej,\nThanks for the PR!\n[1] You are right, it is bad. We must round the origin point of cropRect and convert the rectangle values to integers. I think that is the best way. Apple does it in the same way :-]\n[2] Entirely agree! :+1: \nI will make the necessary changes right now.\n. Something about reporting cropRect to the delegate.\nI think we do not need to add an additional method, and we should change the current, as it is required.\nI hope current users will not hate me :-]\nWhat can you say about this?\n. I think it's time to be 1.0.0\n. @pronebird You're welcome!\n. :+1: \n. I will try to add this feature soon.\nThanks,\nRuslan\n. Yes, it's my mistake. I'll fix it soon. Sorry guys!\n. I need more time :-]\n. Hi guys!\nWhat do you think about this - fb30e1fc59bddd200303261a3f08ef014e054fd9?\nI wish to hear your feedback :-]\n. Hi @dyadenkor,\n@pronebird is right. You can do it using view controller subclass.\n@pronebird, thanks for your participation! :star:\n. If the image scroll view is rotated, the method convertRect:toView: returns the wrong rect in some cases.\n\n\n. We are updating an existing affine transform of the image scroll view.\n. Hi @heistings,\nThanks for the PR!\nBut it will not work properly in all cases.\nFor example, after resizing we update minimumZoomScale, but zoomScale should not be changed at this time.\nSincerely,\nRuslan\n. The method recoverFromResizing takes care of this.\nYou can try to zoom in, and then rotate the device. So you see the problem.\n. objective-c\nif (self.zoomScale < self.minimumZoomScale) {\n    self.zoomScale = self.minimumZoomScale;\n}\nIn this case, the initial zoom scale will be incorrect (1).\n. What the problem do you see on the image above?\n. On the first gif we can see the extra zoom. This is the problem I had in mind.\n\n\n. It's hard to explain in words. Please run and compare this and this.\n. @heistings Thank you for your striving to make RSKImageCropper better! :+1: \n. All of this can be done with the current implementation or view controller subclass.\n. Hi @dyadenkor,\nRectangle mode is the custom mode.\nYou need to set cropMode to RSKImageCropModeCustom and implement data source methods.\nTo support the rotation when cropMode is RSKImageCropModeCustom you must implement the data source method imageCropViewControllerCustomMovementRect:.\nThen avoidEmptySpaceAroundImage will work properly.\n. You should calculate and return the correct movement rect according to the current values of the parameters, such as the angle of rotation.\nIt's a usage question. You can ask about it on stack overflow.\n. @dyadenkor, you can read about these processes here\n@pronebird, what kind of example would you add?\n. As @pronebird mentioned above, you have to run pod install.\nThanks @pronebird!\n. @romaincointepas Fixed!\n. [1] You need to rotate the image to the desired angle before pass it to RSKImageCropViewController.\n[2] You need to set the property applyMaskToCroppedImage to YES.\n. :thumbsup:\n. The following code should work for you:\nobj-c\n- (void)onAddPhotoButtonTouch:(UIButton *)sender\n{\n    UIImage *photo = [UIImage imageNamed:@\"photo\"];\n    RSKImageCropViewController *imageCropVC = [[RSKImageCropViewController alloc] initWithImage:photo cropMode:RSKImageCropModeSquare];\n    imageCropVC.delegate = self;\n    [self.navigationController pushViewController:imageCropVC animated:YES];\n}\n. @Serahug, thanks for reporting this!\nBut we always want to hide the status bar in RSKImageCropViewController.\n. Hello Arvid,\nSorry for the delay.\nI will think about it in the coming weekend.\nCurrently, you can try to add the following code to this line:\nobj-c\nif (boundsSize.width < boundsSize.height) {\n    maxScale = MIN(maxScale, boundsSize.width / 640.0);\n} else {\n    maxScale = MIN(maxScale, boundsSize.height / 640.0);\n}\nSincerely,\nRuslan\nUpdate (29/11/2017):\nAdditionally, you must handle the case where the size of the original image is smaller than the minimum output size.\n. :smiley: :thumbsup:\n. No. There aren't.\nYou should not limit the size of the image when cropping.\nInstead of this, to get an image with the specific minimum size you need to use RSKImageCropper to crop the original image and then if needed manually scale the cropped image up to the minimum output size. This will allow the user to select any desired part of the image.. To get the circled image you need to set the value of the property applyMaskToCroppedImage to YES.\n. I would like to see the following changes:\n[1] Add the category RSKImageCropViewControllerProtected.\n[2] Move the method cropImage to the category RSKImageCropViewControllerProtected.\n[3] Update the comment for the method cropImage (Asynchronously crops the original image in accordance with the current settings).\n[4] Extract and expose the method cancelCrop and the method reset: (=> RSKImageCropViewControllerProtected).\n[5] Add comments for the method cancelCrop and the method reset:.\n. \n. Hi @m1entus,\nYou need to calculate the movement rect. It is a custom rect in which the image can be moved.\nUnfortunately, I have no formula to calculate it for the rectangle.\nHere you can see how I calculate it for the square.\n. Thanks! :thumbsup:\n. Hi @Piero87!\nSorry for the delay. Can you provide a test project? I think there should be no bugs.\n. Hi @Piero87,\nThere are no problems with RSKImageCropper.\nSimply add the following code to your view controller and everything will work well:\nobj-c\n- (void)viewWillAppear:(BOOL)animated\n{\n    [super viewWillAppear:animated];\n    [UIApplication sharedApplication].statusBarStyle = UIStatusBarStyleLightContent;\n}\n. It sounds good to me! Can you do it and open a PR?\n. There is no special method to do it.\nIf you want to crop the image with the mask image I suggest you take a look at the function CGImageCreateWithMask.\n. Hi Pierce! When is it necessary? It looks like a very special case.\n. Closed due to lack of interest from users.\n. @jkrzemie Thanks!\n. @SebastianMecklenburg I guess this error is related to the configuration of CocoaPods on your computer. You can try to find a solution here.\n. Hi @virmaninupur5,\nI think you have a problem with the configuration of the project. Here you can see a working example.\nGood luck!\n. Hi @oanta-william,\nI suppose that there is a problem with your CocoaPods configuration.\nTry to use the latest stable version of CocoaPods (0.39.0).\nHere you can see a working Swift project that uses CocoaPods and Framework Modules.\nCheers!\n. I think that there is a problem in your mask rect. Can you provide a sample project?\n. You need to use the 1.4.1 version and update your custom mask path. Everything should work as expected.\nobj-c\n- (UIBezierPath *)imageCropViewControllerCustomMaskPath:(RSKImageCropViewController *)controller\n{\n    CGFloat maskLayerLineHalfWidth = controller.maskLayerLineWidth / 2.0;\n    CGRect rectForMaskPath = CGRectInset(controller.maskRect, maskLayerLineHalfWidth, maskLayerLineHalfWidth);\n    return [UIBezierPath bezierPathWithRect:rectForMaskPath];\n}\n. What do you mean?\n. No, RSKImageCropper does not provide this capability.\n. Hi Esteban,\nThank you for your efforts to make RSKImageCropper better!\nI'm glad to see that you have added tests :+1: \nMy main idea for RSKImageCropper is to keep it simple. I think ninety degrees rotation can be useful for RSKImageCropper in some cases, but mostly it will not be used. It can be a good idea to implement this functionality in subclass of RSKImageCropViewController and use specially for your purpose. Additionally I would like to suggest you to use an image for the button 'Rotate' instead of the title. It will be more clear for the end-user how rotation works.\nA few words about the tests. Currently in the repository we have valid snapshots only for iPhone 4s / iOS 8.1. To add additional snapshots locally you need to replace haveValidSnapshot by recordSnapshot, run tests once, replace recordSnapshot by haveValidSnapshot and run tests again. All tests should pass successfully.\n. In any case, I hope that it will be helpful to someone :-]\nCheers!\n. Hi @markfulo,\nCan you provide a test project?\np.s. I suggest you to check the memory usage in your application.\n. @markfulo Have you fixed your issue?\n. Hi @kevinvanderlugt! Yes, I would.\n. For this purpose you can use the originalImage property of RSKImageCropViewController which is available in each method of RSKImageCropViewControllerDelegate.\n. Thanks! :thumbsup:\n. Hi @pacificanfog0,\nYou are missing the following code: imageCropVC.dataSource = self\nJust add it and the error should disappear.\n. Hi @JayMehta711,\nI think that there is no easy way to do it.\nOne way is as follows:\n1. Add UIVisualEffectView with UIBlurEffect to the image scroll view.\n2. Show it when the user does not drag / scale / rotate the original image, or hide otherwise.\n3. Add preview image view that corresponds to your mask above the image scroll view.\n4. Crop the original image when the user no longer drag / scale / rotate and place it into the preview image view, or set the image of the preview image view to nil otherwise.\n5. Use the image from the preview image view as a cropped image.\np.s. If you will implement it I will reopen the issue.\n. Hi @m1entus,\nI'm sorry to be late with the reply.\nI plan to add the method setRotationAngle: to the category RSKImageCropViewControllerProtectedMethods. Will it solve your problem?\n. I assume that the answer is \"yes\" :-]\n. Hi @mowens and @ale0xB!\nIt would be nice if you could check that the version 1.5.1 solves your problems.\n. There are two ways to achieve this.\n1. Custom mask path RSKImageCropModeCustom.\n2. Adjusting the properties portraitCircleMaskRectInnerEdgeInset and landscapeCircleMaskRectInnerEdgeInset.\n. @nikitazernov What does it mean?\n. @mayur43s You may be interested in #89.\n. I did not plan to do so in the near future. But you can do it yourself in the subclass of RSKImageCropViewController.\n. Hi @ferz222,\nI think that's what you need.\n. Hi @gmogames!\nI have checked your test case using my photos. But everything works as expected. Can you provide an example project with the photo you use?\nThanks!\n. You have specified an incorrect movement rect.\nI think in your case you can use maskRect as movementRect and everything will work as it should.\nobj-c\n- (CGRect)imageCropViewControllerCustomMovementRect:(RSKImageCropViewController *)controller\n{\n    return controller.maskRect;\n}\n. Hi @genius50!\nTry to set the property avoidEmptySpaceAroundImage of imageCropVC to true.\n. First of all you should know that if you want to support the rotation when cropMode is RSKImageCropModeCustom you must implement the method imageCropViewControllerCustomMovementRect:.\nYour current implementation is not correct for your case.\nYou should try to implement something like this. \n. The movement rect coincides with the mask rect only if the image is not rotated - README.\n. \u0415\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 applyMaskToCroppedImage \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432 YES, \u044f \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u044e \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u0440\u043e\u043f\u0430 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043b\u044e\u0431\u044b\u0435 \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043d\u0430 \u044d\u043a\u0440\u0430\u043d. \u0414\u043b\u044f \u044d\u0442\u043e\u0439 \u0446\u0435\u043b\u0438 \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c, \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0443,  MBProgressHUD \u0432 \u0441\u0432\u044f\u0437\u043a\u0435 \u0441 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438 imageCropViewController:willCropImage: \u0438 imageCropViewController:didCropImage:usingCropRect: \u0434\u0435\u043b\u0435\u0433\u0430\u0442\u0430 RSKImageCropViewController.\n. I think that's what you need.\n. Hi @Briahas!\nThis is not a bug of RSKImageCropper. You should calculate and return a valid movement rect from imageCropViewControllerCustomMovementRect(_:).\nYou can see how to calculate a movement rect for the square here. For all other cases, the movement rect is calculated individually.. https://github.com/ruslanskorb/RSKImageCropper/issues/52\n. Won't fix. Please see my explanation here.. @pedro380085 Hi Pedro! First of all, I can suggest you to check your implementation of updateViewConstraints method.\n. @pedro380085 The problem still exists?\n. @pedro380085 If you can share a part of your code that configures RSKImageCropViewController I can try to help you. Email me at ruslan.skorb@gmail.com\n. No, RSKImageCropper does not support cropping multiple images at once.\n. @Mercidez Can you provide a sample project with your problem?\n. It works as expected in my Swift code.\n. @brod-ie Can you show your configuration of RSKImageCropViewController instance?\n. Everything about RSKImageCropViewController looks good to me.\nI created a test project with your code, but did not see the problem you described.\nPlease look at it. Maybe it will help to resolve your problem.\np.s. Also I can suggest to check the frame of the image view with the cropped image.\n. It should work even when applyMaskToCroppedImage is set to true.\n. @brod-ie Can you try to crop your image in the test project I provided above? Maybe the problem is  in it.\n. @brod-ie Any news on this?\n. @brod-ie I will close the issue for now. If the problem still persists and you have any additional information feel free to reopen it.\n. Hi @magrinj,\nPersonally, I have not used RSKImageCropper in conjunction with iCloud. However, in theory, it should work without any problems.\nCan you log the image to the console and share result with us?\n. Looks like QBImagePicker can't load an image from the source.\nAs the problem is not related to RSKImageCropper I have decided to close the issue.\nGood luck in solving your problem!\n. @NiteshKhandal \nRSKImageCropperWithSwiftAndCocoapods\nRSKImageCropperWithSwiftCocoapodsAndModules\n. @NiteshKhandal Yes, you can. Just import RSKImageCropViewController+Protected.h into your class and call [self cropImage].\np.s. Please ask your other usage questions on Stack Overflow.\nCheers!\n. You can create a subclass of RSKImageCropViewController and override the method viewWillAppear to make navigation bar visible.\nBy default, we always want to hide the status bar in RSKImageCropViewController (#48).\n. RSKImageCropperWithSwiftAndCocoapods\n. @benoistmartins Done! :-]. Hi @marujun,\nThanks for the PR!\nUnfortunately, I can't merge it for now because of a bug in your code. You should pass scale of the image to UIGraphicsBeginImageContextWithOptions(...).. @sumitmagdum Can you provide more information about your problem?. I guess that the problem in your project settings - http://stackoverflow.com/a/6429568/2134682.\nWill close the issue for now. If the problem is not related to your project configuration feel free to reopen it.. Hi Pieter,\nYou can change the background color just before presenting RSKImageCropViewController.\nswift\nimageCropViewController.view.backgroundColor = UIColor.white\nself.navigationController?.pushViewController(imageCropViewController, animated: true)\nOr you can create a subclass of RSKImageCropViewController and override the method viewDidLoad.\n```swift\noverride func viewDidLoad() {\nsuper.viewDidLoad()\n\nself.view.backgroundColor = UIColor.white\n\n}\n```\nCheers,\nRuslan. You can set the value of the property applyMaskToCroppedImage of RSKImageCropViewController to true and redraw the cropped image with the white background.. I can recommend you to read this guideline. It should help you.\nCheers,\nRuslan. Hi @ksti,\nThanks for using RSKImageCropper!\nI can suggest your users to show a progress hud instead of disabling the Choose button. It makes more sense.\nIf you still want to disable the button you can create a subclass of RSKImageCropViewController, remove UIControlEventTouchUpInside event for all target objects from the Choose button and specify your own selector that calls the method cropImage.\nobj-c\n[self.chooseButton removeTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];\n[self.chooseButton addTarget:self action:@selector(ksti_onChooseButtonTouch:) forControlEvents:UIControlEventTouchUpInside];\nCheers,\nRuslan. @pjebs The Move and Scale label is already exposed to the public and you can customize it as you wish.. @timaktimak Thanks for the PR! Good addition! :thumbsup:. You can calculate a scale factor for the image to fill cropRect and call setZoomScale: method of RSKImageCropViewController.. Hi @dlipiz!\nRSKImageCropper does not save the cropped image to the disk. So there is no a file path for it. The library returns UIImage object that can be converted to NSData using UIImagePNGRepresentation function and saved to the disk using writeToFile(_:atomically:) method.\n```swift\nlet paths = NSSearchPathForDirectoriesInDomains(.documentDirectory, .userDomainMask, true)\nlet filePath = \"(paths.first)/ImageName.png\"\nUIImagePNGRepresentation(image)?.writeToFile(filePath, atomically: true)\n```\n. Hi @perlasivakrishna,\nYou should return a custom maskRect from the method imageCropViewControllerCustomMaskRect(_:).\n```swift\ninternal func imageCropViewControllerCustomMaskRect(_ controller: RSKImageCropViewController) -> CGRect {\nlet viewSize = controller.view.bounds.size\n\nlet maskSize = CGSize(width: 270, height: 180)\nlet maskOrigin = CGPoint(x: viewSize.width / 2 - maskSize.width / 2, y: viewSize.height / 2 - maskSize.height / 2)\n\nreturn CGRect(origin: maskOrigin, size: maskSize)\n\n}\ninternal func imageCropViewControllerCustomMaskPath(_ controller: RSKImageCropViewController!) -> UIBezierPath! {\nreturn UIBezierPath(rect: controller.maskRect)\n\n}\ninternal func imageCropViewControllerCustomMovementRect(_ controller: RSKImageCropViewController) -> CGRect {\nreturn controller.maskRect\n\n}\n``. @perlasivakrishna Did you set the value of thedataSourceproperty?. The initialization looks correct. Can you provide a test project with your problem?. As I mentioned above you must return a custommaskRectfrom the methodimageCropViewControllerCustomMaskRect(_:). But, now, you are returningcontroller.maskRect(that iszeroby default) instead of calculatedmaskRect`.. Yes.. Hi @chings228,\nCan you show your implementation of the data source methods?. @chings228 I'll close the issue for now. Feel free to reopen it if the problem persists.. swift\nlet imageCropViewController = RSKImageCropViewController(image: photo, cropMode: .circle). @RamiAbouGhanem Thanks for suggestion!\nThere is no need to add leading and trailing constraints at the moment. The default text of moveAndScaleLabel is perfectly placed in all available screens.\nIf you need to replace it with something else I can suggest you to create a subclass of RSKImageCropViewController, override the method updateViewConstraints and add necessary constraints. It will also allow you to use multi-line text.. Hi @davbeck,\nThanks for the PR!\nLet's wait for the final 8.3 version of Xcode and see if the problem will persist.. The problem will be fixed soon.. Fixed in the 1.6.1 version :tada:. Duplicate #139.. #139 . Please try pod deintegrate and pod install and tell me whether the problem is resolved.. Hi @Rahulgupta-cdnsol,\nJust set the value of avoidEmptySpaceAroundImage property  to true.. To hide moveAndScaleLabel, cancelButton and chooseButton you need to set their property isHidden to true.\nTo add your own buttons and labels you need to create them and add to the view like any other usual views using the method addSubview of UIView.. What version of RSKImageCropper do you use?. It is fixed in the version 1.6.1.. @pilot34 What versions of RSKImageCropper and CocoaPods are you using?. Hi @FrankTravieso1,\nRSKImageCropper does not provide this functionality.\nBut, maybe, this method will help you understand how to achieve your goal.\nCheers!. Looks like your error is not related to RSKImageCropper. Please ask about it on stackoverflow.. @edenman Did you catch this crash manually while debugging? Actually, I see no reason why it can happen. It would be nice if you could provide any additional information or a sample project with this problem.. @edenman Can you share one of the crash reports? Or part of it?. @edenman Thanks. One more thing. Can you share your method imageCropViewController(_:didCropImage:usingCropRect:rotationAngle:) implemented in ChangeProfilePictureView?. @edenman Do you have any swizzling code in your project?. @edenman Can you include cropRect in your log message?. @edenman Thanks! I will wait for any information from you.\np.s. Is your app available in the App Store?. @edenman Is there any news?. @edenman OK. Thanks!\nI will close the issue for now. If/when anyone face this problem again and you will have more information feel free to reopen it.. Hi @edenman,\nSorry for the delayed response.\nWhat is the parent view controller of imageCropViewController? \n. @edenman Is SettingsViewController embedded in another view controller?. @edenman It's hard to say without reproducing the problem. My only guess is that the reason for this may be a layout. I would ask you to collect any additional data, such as phone orientation, constraints, and all the others that may seem important to you.. @edenman Also I'd like to ask you to try a new 1.6.3 version and let me know if something changes.. @edenman Is there any news?. Thanks for the info! :thumbsup: Let's wait a little longer and close the issue if the problem does not arise again.. @edenman Has anything changed?. @edenman Okay, then let's close the issue. Thank you for all the information you provided!. @Konshin Sorry for my misunderstanding, but what are you trying to fix? As far as I can see, your code calculates an incorrect cropRect.. @Konshin If you want to support the rotation  when cropMode is RSKImageCropModeCustom you must implement imageCropViewControllerCustomMovementRect: method. The mask is applied on top of the movement rect.. @Konshin You need to calculate and return the valid movement rect.. You can try to use sharpie to create the binding.. @mommyme Have you solved the issue?. This is fixed in the latest release.. @nootfly Thanks! :thumbsup:. There is no need to do it.\nYou can present RSKImageCropViewController after picking an image from func imagePickerController(_, didFinishPickingMediaWithInfo:) method of UIImagePickerControllerDelegate.. RSKImageCropper is is available under the MIT license. So, all you need is to meet its conditions.. @LQQZYY You can also use RSKImageCropper in Swift projects. Like any other Swift library.. @lindseyvastola What size is your image?. I assume that the size of your image is smaller than cropRect.size. That's why you can not move it and zoom it.\nIf this is not the case, feel free to reopen the issue.. Done. RSKImageCropper (1.6.2) successfully published.. You need to set applyMaskToCroppedImage to true.\n\nOn Jun 14, 2017, at 1:42 PM, Mike Shen notifications@github.com wrote:\nThe croped image not round but square..why?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. You need to ask @ivpusic to remove DevelopmentTeam from react-native-image-crop-picker.. imageCropViewControllerCustomMaskPath(_:) returns a custom path for the mask. It defines the shape that will be rendered.\nimageCropViewControllerCustomMaskRect(_:) returns a custom rect for the mask. It affects the crop rect.. If you want to support the rotation when cropMode is RSKImageCropModeCustom you must implement the method imageCropViewControllerCustomMovementRect(_:).\n\nI suppose that your question is related to #107. If so, you should calculate and return a valid movement rect from imageCropViewControllerCustomMovementRect(_:).. A square is a special case of a rectangle. You can see how to calculate a movement rect for it here. For all other cases, the movement rect is calculated individually.. @dmcgloin Thanks for reporting! Fixed in 1.6.3 \ud83c\udf89 . Probably, you are getting an incorrect image from UIImagePickerController. Please see #150.. In custom mode you are providing maskRect. cropRect is calculated at run time based on parameters of underlying imageScrollView.. No, it can not.\nTo crop an image without scaling and moving you can use an instance method cropping(to:) of CGImage.. To update the displayed image simply set originalImage again.. You need to get access to the proper translations bundle, query that bundle for the translations and manually update the text in 'Cancel' and 'Choose' buttons and 'Move and Scale' label.\nThis link can be useful to you.. @SunXu231 Did you set delegate property of RSKImageCropViewController?. I have tested RSKImageCropper on iPhone 7 right now and everything is OK. Please, check your configuration.. Hi @DarkByte3PG,\nTry deintegrate and install RSKImageCropper again and let me know if the problem still persists.. Hi @Annabelle1024!\nThanks for your thoughts about RSKImageCropper!\nI think that there is no need to update the current layout. It looks good to me and it is similar to the layout of the photo cropper from the Contacts app.\nIf you need to use another layout for iPhone X, I can suggest you to override the method updateViewConstraints and make the necessary changes.. @dineshmahajan Can you provide a sample project?. @dineshmahajan I noticed that you are using a custom crop mode.\nCan you, please, provide your implementation of RSKImageCropViewControllerDataSource methods?. @dineshmahajan \nIf you want to support the rotation  when cropMode is RSKImageCropModeCustom you must implement the method imageCropViewControllerCustomMovementRect:.\nIf the image is not rotated, then the movement rect coincides with the mask rect. In other cases you need to calculate and return the correct value from imageCropViewControllerCustomMovementRect:.\nYou can see how it is done for the square here.. It is impossible to calculate a movement rect for an unknown mask rect. Therefore, it is the responsibility of the developer who uses this library.. You can see how to calculate a movement rect for the square here. I hope it will guide you in the right direction.. @iPhoNewsRO Thanks! I'm thinking of adding a new mode RSKImageCropModeRectangle. This can be useful for this case.. Added working example to README.. Something like that:\n```swift\ninternal class ViewController: RSKImageCropViewControllerDataSource, RSKImageCropViewControllerDelegate {\ninternal override func viewDidAppear() {\n\n    super.viewDidAppear()\n\n    let originalImage = UIImage(named: \"image\")\n\n    let imageCropViewController = RSKImageCropViewController(image: originalImage, cropMode: .custom)\n\n    imageCropViewController.delegate = self\n    imageCropViewController.dataSource = self\n\n    self.navigationController?.pushViewController(imageCropViewController, animated: true)\n}\n\n// MARK: - RSKImageCropViewControllerDataSource\n\ninternal func imageCropViewControllerCustomMaskRect(_ controller: RSKImageCropViewController) -> CGRect {\n\n    return CGRect(x: 0, y: 0, width: 375, height: 200)\n}\n\ninternal func imageCropViewControllerCustomMaskPath(_ controller: RSKImageCropViewController) -> UIBezierPath {\n\n    return UIBezierPath(rect: controller.maskRect)\n}\n\n// MARK: - RSKImageCropViewControllerDelegate\n\ninternal func imageCropViewController(_ controller: RSKImageCropViewController, didCropImage croppedImage: UIImage, usingCropRect cropRect: CGRect) {\n\n    // ...\n}\n\n}\n```. You don't need to call any additional functions.\nI checked your use case in the Example app and made sure that everything works well.\nYou can replace this method with the following and see that the image changes:\n```objective-c\n- (void)imageCropViewController:(RSKImageCropViewController )controller didCropImage:(UIImage )croppedImage usingCropRect:(CGRect)cropRect\n{\n    if (arc4random() % 2 == 0) {\n    UIImage *photo = [UIImage imageNamed:@\"photo_2\"];\n    controller.originalImage = photo;\n}\nelse {\n\n    UIImage *photo = [UIImage imageNamed:@\"photo\"];\n    controller.originalImage = photo;\n}\n\n}\n```\nProbably you are changing your image not on the main thread.. You can change originalImage only before the first presentation of RSKImageCropViewController and when RSKImageCropViewController is presented.\nIn your case you need to create a new instance of RSKImageCropViewController for each picked image.. Sorry, but I didn't understand your problem. Please provide more information.. Try to set avoidEmptySpaceAroundImage to true.. Can you, please, provide your implementation of RSKImageCropViewControllerDataSource methods and the image you trying to crop?. @shenguanjiejie Please provide values for getRect method.. I mean kScreenWidth, kScreenWidth, self.imageSize.width, self.view.centerX , etc.. I just checked the code and the image you provided and I can say that everything should work as you need if you set the value of avoidEmptySpaceAroundImage to YES.. Yes, I did. Everything works properly.\n\n\n. What problem do you see in these images?\n\n\n. @shenguanjiejie Fixed in develop branch. Please check if it works for you.. Eventually, it is fixed in 1.6.4 \ud83c\udf89\nThanks for reporting!. ```obj-c\npragma mark - RSKImageCropViewControllerDataSource\n\n\n(UIBezierPath )customMaskPathForBounds:(CGRect)bounds\n{\n    UIBezierPath path2Path = [[UIBezierPath alloc] init];\nCGFloat minX = (CGRectGetWidth(bounds)/2)/2, minY = (CGRectGetHeight(bounds)/2)/2, w = CGRectGetWidth(bounds)/2, h = CGRectGetHeight(bounds)/2;\n[path2Path moveToPoint:CGPointMake(minX + 0.628 * w, minY + 0.94674 * h)];\n[path2Path addLineToPoint:CGPointMake(minX + 0.564 * w, minY + 0.98391 * h)];\n[path2Path addCurveToPoint:CGPointMake(minX + 0.436 * w, minY + 0.98391 * h) controlPoint1:CGPointMake(minX + 0.526 * w, minY + 1.00536 * h) controlPoint2:CGPointMake(minX + 0.472 * w, minY + 1.00536 * h)];\n[path2Path addLineToPoint:CGPointMake(minX + 0.372 * w, minY + 0.94674 * h)];\n[path2Path addCurveToPoint:CGPointMake(minX, minY + 0.37909 * h) controlPoint1:CGPointMake(minX + 0.136 * w, minY + 0.80947 * h) controlPoint2:CGPointMake(minX, minY + 0.60072 * h)];\n[path2Path addLineToPoint:CGPointMake(minX, minY + 0.07024 * h)];\n[path2Path addCurveToPoint:CGPointMake(minX + 0.102 * w, minY + 0.00018 * h) controlPoint1:CGPointMake(minX, minY + 0.02878 * h) controlPoint2:CGPointMake(minX + 0.048 * w, minY + -0.00268 * h)];\n[path2Path addLineToPoint:CGPointMake(minX + 0.168 * w, minY + 0.00447 * h)];\n[path2Path addCurveToPoint:CGPointMake(minX + 0.832 * w, minY + 0.00447 * h) controlPoint1:CGPointMake(minX + 0.388 * w, minY + 0.01734 * h) controlPoint2:CGPointMake(minX + 0.61 * w, minY + 0.01734 * h)];\n[path2Path addLineToPoint:CGPointMake(minX + 0.898 * w, minY + 0.00018 * h)];\n[path2Path addCurveToPoint:CGPointMake(minX + w, minY + 0.07024 * h) controlPoint1:CGPointMake(minX + 0.952 * w, minY + -0.00268 * h) controlPoint2:CGPointMake(minX + w, minY + 0.02878 * h)];\n[path2Path addLineToPoint:CGPointMake(minX + w, minY + 0.37909 * h)];\n[path2Path addCurveToPoint:CGPointMake(minX + 0.628 * w, minY + 0.94674 * h) controlPoint1:CGPointMake(minX + w, minY + 0.60072 * h) controlPoint2:CGPointMake(minX + 0.864 * w, minY + 0.80947 * h)];\n[path2Path closePath];\nreturn path2Path;\n}\n\n\n(UIBezierPath )imageCropViewControllerCustomMaskPath:(RSKImageCropViewController )controller\n{\n    return [self customMaskPathForBounds:controller.view.bounds];\n}\n\n\n(CGRect)imageCropViewControllerCustomMaskRect:(RSKImageCropViewController *)controller\n{\n    return [self customMaskPathForBounds:controller.view.bounds].bounds;\n}\n\n\n(CGRect)imageCropViewControllerCustomMovementRect:(RSKImageCropViewController *)controller\n{\n    return controller.maskRect;\n}\n```\n\n\nPlease, in the future, ask such questions on Stackoverflow.. Hi @andrezacds!\nSorry, no.. @1jacobb1 Can you provide a sample project with this problem?. @1jacobb1 Sorry, I didn't understand you. Can you provide your panoramic image? I checked my image and everything works properly.. yes. @1jacobb1 Is the issue resolved by you?. @1jacobb1 If the problem still persists feel free to reopen the issue.. Hi @wbsgxc,\nThanks for reporting the issue.\nCould you, please, describe in more detail the problem that arises, or provide a video / screenshot with this problem?. Hey @wbsgxc,\nRSKImageCropViewController overrides prefersStatusBarHidden property. So, this shouldn't be a problem.\nIf you don't want to hide the status bar I can suggest you to create a subclass of RSKImageCropViewController and override prefersStatusBarHidden property to return NO.. @wbsgxc I will close the issue for now. Feel free to reopen it if you have any other suggestions regarding status bar handling.. There are no data source methods to provide the crop rect. It is calculated at run time.. The mask rect and the movement rect do not specify the final size of the cropped image. They are using to generate and display the mask.. To get an image with the specific minimum size you need to use RSKImageCropper to crop the original image and then if needed manually scale the cropped image up to the minimum output size.. In your case the user will not always be able to select a specific part of the image. Also, there is a case where the original image may have a size smaller than the mask size.. @stp-ios-gda \nSo, I decided not to add this functionality to the main repo of RSKImageCropper. But you can always do it in your own fork.\nAnyway, thank you for collaborating!. @borkuslav \nProbably, I put it not quite clear. The problem is that the accuracy of the selection of the required area in your case is reduced.\nThis is the first case:\nCGFloat maxScale = MAX(xScale, yScale);\n\nCGFloat maxScale = MIN(xScale, yScale);\n\nAnd this is the second case when the height of the original image is less than the height of the mask:\nCGFloat maxScale = MAX(xScale, yScale);\n\nCGFloat maxScale = MIN(xScale, yScale);\n. @stoner221 I will look at it when the new version of Xcode will be publicly available.\n@Chana719 Sorry, but I didn't understand what is your problem and what are you trying to achieve.. @stoner221 You are getting these errors because of your deployment target is equal or greater than iOS 11.0.\nMinimum deployment target supported by RSKImageCropViewController is iOS 6.0.\nIn your case you can:\n1) Ignore these errors.\n2) Add inhibit_all_warnings! to your Podfile.. Hi @jalleyne! Just set avoidEmptySpaceAroundImage of RSKImageCropViewController to true.. @c1394393468 You need to set applyMaskToCroppedImage of RSKImageCropViewController to true.. @LiliaBHMabrouk To change scale factor for the image programatically you need to create a subclass of RSKImageCropViewController, import RSKImageCropViewController+Protected.h header and use setZoomScale: method.. @zhenghaonagehao You can try:\n1) pod update RSKImageCropper\n2) pod cache RSKImageCropper clean + pod install. @zhenghaonagehao Did you solve your issue?. Hi @Discobanan,\nCurrently, RSKImageCropper does not allow to zoom an image to a specific rect \ud83d\udd0d But this is a good idea :thumbsup:\nIf you have a free time to implement this functionality, I'll be glad to have a look at it!\nBest,\nRuslan. Resolved via #195.. Hi @Discobanan,\nThanks for the PR!\nSome changes need to be made before merging.\n\nWe use \u201cdid\u201d or \u201cwill\u201d for methods that are invoked to notify the delegate that something has happened or is about to happen.\n\nobj-c\n- (void)imageCropViewControllerDidDisplayImage:(RSKImageCropViewController *)controller;\n\n\n[imageCropViewControllerDidDisplayImage:] method must be optional. It should be located below @optional directive.\n\n\nThe description of [zoomToRect:animated:] method and its parameters should indicate exactly what they are doing.\n\n\n```obj-c\n/**\nZooms to a specific area of the image so that it is visible.\n@param rect A rectangle defining an area of the image. \n@param animated YES if the scrolling should be animated, NO if it should be immediate.\n*/\n```\n\nWe must add tests for the new methods: [zoomToRect:animated:], [imageCropViewControllerDidDisplayImage:].. Hi @culing1317,\n\nSorry for the late reply.\nPlease try the fix from the develop branch with the code provided by @iPhoNewsRO, and let me know if it works for you.\nBest,\nRuslan. @edelabar Thanks!. @edelabar Released in v2.2.0 \ud83c\udf89. @Karthus1110 Which version did you use before?. @Karthus1110 Perhaps the previous version is listed in your version control system.. @Karthus1110 Also, could you provide the code where you are configuring the view controller.. @Karthus1110 OK, thanks. I'll take a look at this.. @Karthus1110 You return wrong customMovementRect from [imageCropViewControllerCustomMovementRect:].\n\nIt must cover the mask rect.\nYou should calculate it based on rotationAngle of RSKImageCropViewController.\nBelow is a simplified form of calculation.\n```\n// Returns a custom rect in which the image can be moved.\n- (CGRect)imageCropViewControllerCustomMovementRect:(RSKImageCropViewController *)controller\n{\n    CGRect cropPathBounds = [self cropPathWithRect:controller.maskRect].bounds;\nCGAffineTransform rotationTransform = CGAffineTransformMakeRotation(controller.rotationAngle);\n\nCGSize movementRectSize = CGRectApplyAffineTransform(cropPathBounds, rotationTransform).size;\nCGPoint movementRectCenter = CGPointMake(CGRectGetMidX(cropPathBounds), CGRectGetMidY(cropPathBounds));\n\nCGRect movementRect = CGRectMake(movementRectCenter.x - movementRectSize.width / 2.0,\n                                 movementRectCenter.y - movementRectSize.height / 2.0,\n                                 movementRectSize.width,\n                                 movementRectSize.height);\n\nreturn movementRect;\n\n}\n```\nOr the more accurate version:\n```\n- (CGRect)imageCropViewControllerCustomMovementRect:(RSKImageCropViewController *)controller\n{\n    if (controller.rotationAngle == 0) {\n        return controller.maskRect;\n    } else {\n        CGRect maskRect = controller.maskRect;\n        CGFloat rotationAngle = controller.rotationAngle;\n    CGRect movementRect = CGRectZero;\n\n    movementRect.size.width = CGRectGetWidth(maskRect) * fabs(cos(rotationAngle)) + CGRectGetHeight(maskRect) * fabs(sin(rotationAngle));\n    movementRect.size.height = CGRectGetHeight(maskRect) * fabs(cos(rotationAngle)) + CGRectGetWidth(maskRect) * fabs(sin(rotationAngle));\n\n    movementRect.origin.x = CGRectGetMinX(maskRect) + (CGRectGetWidth(maskRect) - CGRectGetWidth(movementRect)) * 0.5f;\n    movementRect.origin.y = CGRectGetMinY(maskRect) + (CGRectGetHeight(maskRect) - CGRectGetHeight(movementRect)) * 0.5f;\n\n    movementRect.origin.x = floor(CGRectGetMinX(movementRect));\n    movementRect.origin.y = floor(CGRectGetMinY(movementRect));\n    movementRect = CGRectIntegral(movementRect);\n\n    return movementRect;\n}\n\n}\n``. @Karthus1110 Could you show the image you are getting in[imageCropViewController:didCropImage:usingCropRect:rotationAngle:].`?. @Karthus1110 Use preview button to show the image.\n\nAlso, could you provide the image you are trying to crop?. @fzuycg What do you mean?. The method fixOrientation creates a new image by copying it bit by bit. This is an expensive operation that should not be performed on the main thread. In turn, RSKImageCropViewController is always required to be created on the main thread. Therefore, we cannot fix the orientation of the image in initWithImage: initializer.. Hi @zinoviev!\nIs avoidEmptySpaceAroundImage property of RSKImageCropViewController what you need?. @zinoviev Try avoidEmptySpaceAroundImage = NO in conjunction with applyMaskToCroppedImage = YES.\nBackground color of what?. @zinoviev The remaining area is transparent and there is currently no API to fill it with color.. @zinoviev Have you solved the issue?. @A-Hing There is no API for this. maximumZoomScale is automatically managed by RSKImageScrollView.. Actually, we should test how imageCropViewController zooms to a specific area of the image.\nSo, it will be something like that:\n```obj-c\nit(@\"zooms to a specific area of the image\", ^{\n    CGRect rect = CGRectMake(100.0, 100.0, 400.0, 400.0);\n    [imageCropViewController zoomToRect:rect animated:NO];\nUIScrollView *imageScrollView = imageCropViewController.imageScrollView;\nCGRect visibleRect = CGRectMake(round(imageScrollView.contentOffset.x / imageScrollView.zoomScale),\n                                round(imageScrollView.contentOffset.y / imageScrollView.zoomScale),\n                                imageScrollView.bounds.size.width / imageScrollView.zoomScale,\n                                imageScrollView.bounds.size.height / imageScrollView.zoomScale);\n\nBOOL contains = CGRectContainsRect(visibleRect, rect);\nexpect(contains).to.beTruthy();\n\n});\n``. RenamezoomRecttorect`.. Remove extra new line.. ",
    "ds29": "Lovely!  That's really the kind of solution I'd hoped for.  Much more versatile this way.\n. ",
    "AashishDev": "thank you very much for quick reply.  I think actually circular/oval cropping will make your control better.  because I have find a lot of control for rectangular cropping no one for circular /oval shape. \n. ",
    "nfs3250": "Thanks for making such a good code for cropping the image. I have one doubt. When I set cropMode to RSKImageCropModeCustom with cropSize = CGSizeMake(320, 240) , resulting image is not 320 x 240\nI am making this change in \n- (void)onAddPhotoButtonTouch:(UIButton )sender\n  {\n  UIImage photo = [UIImage imageNamed:@\"photo\"];\n  RSKImageCropViewController *imageCropVC = [[RSKImageCropViewController alloc] initWithImage:photo cropMode:RSKImageCropModeCustom cropSize:CGSizeMake(320, 240)];\n  imageCropVC.delegate = self;\n  [self.navigationController pushViewController:imageCropVC animated:YES];\n  }\nCan you tell me what I am doing wrong here ?\n. ",
    "jjochen": "You can just push it on the UIImagePickerController (which is an UINavigationController)\n- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info\n{\n    UIImage *image = info[UIImagePickerControllerEditedImage] ?: info[UIImagePickerControllerOriginalImage];\n    RSKImageCropViewController *imageCropViewController = [[RSKImageCropViewController alloc] initWithImage:image];\n    imageCropViewController.delegate = self;\n    imageCropViewController.cropMode = RSKImageCropModeCircle;\n    [picker pushViewController:imageCropViewController animated:YES];\n}\n. +1\n. ",
    "omergul": "I also needed this feature, here you can grab the code from my fork: https://github.com/omergul123/RSKImageCropper\nI also created a pull request.\n. ",
    "bastibense": "I'd like to see this to be configurable and not hard-wired, because one of my apps depends on the fact that you can fit \"the whole image\" into the mask space. Right now I have separate code that fills the \"empty space\" using a background color - maybe this would be a nice option to have in this crop controller.\n. Nevermind my previous comment. Didn't realize this IS an option... ;) My fault. Have some nice holidays!\n. Sorry, I think this was an accidental pull request.\n. ",
    "joonhocho": "+1\n. ",
    "hemangshah": "@ruslanskorb , thanks for the info :+1: \n. ",
    "marcelosalloum": "Sorry, I had forgotten to set the controller delegate and datasource. So after adding the following lines, everything went fine:\n[cropViewController setDelegate:self];\n[cropViewController setDataSource:self];\nThanks\n. ",
    "Just-": "Example \n```\n- (NSArray )imageCropViewControllerCustomConstraints:(RSKImageCropViewController )imageCropVC {\n    // calculate center of buttons\n    CGFloat buttonShift = (CGRectGetMaxY(imageCropVC.view.frame) - CGRectGetMaxY([self imageCropViewControllerCustomMaskRect:imageCropVC])) / 2;\n    // shift on half height of button\n    buttonShift -= kCropControllerButtonHeight / 2;\nNSArray* hCnstrs = [NSLayoutConstraint constraintsWithVisualFormat:@\"|-btnSpace-[cancelButton(btnWidth)]->=0-[chooseButton(cancelButton)]-btnSpace-|\"\n                                        options:NSLayoutFormatAlignAllCenterY\n                                        metrics:@{@\"btnSpace\" : @(kCropControllerButtonSpace), @\"btnWidth\" : @(kCropControllerButtonWidth)}\n                                          views:@{@\"cancelButton\" : imageCropVC.cancelButton, @\"chooseButton\" : imageCropVC.chooseButton}];\nNSArray* cnclBtnCnstrs = [NSLayoutConstraint constraintsWithVisualFormat:@\"V:[cancelButton(btnHeight)]-btnShift-|\"\n                                                                 options:0\n                                                                 metrics:@{ @\"btnShift\" : @(buttonShift), @\"btnHeight\" : @(kCropControllerButtonHeight)}\n                                                                   views:@{@\"cancelButton\" : imageCropVC.cancelButton}];\n\nNSArray* chsBtnCnstrs = [NSLayoutConstraint constraintsWithVisualFormat:@\"V:[chooseButton(btnHeight)]\"\n                                                                options:0\n                                                                metrics:@{@\"btnHeight\" : @(kCropControllerButtonHeight)}\n                                                                  views:@{@\"chooseButton\" : imageCropVC.chooseButton}];\n\nreturn [[hCnstrs arrayByAddingObjectsFromArray:cnclBtnCnstrs] arrayByAddingObjectsFromArray:chsBtnCnstrs];\n\n}\n``\n. Just review the code, I think it's better to subclassRSKImageCropViewControllerwith custom implementationupdateViewConstraints`, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0433\u043e\u0440\u043e\u0434\u0438\u0442\u044c \u0433\u043e\u0440\u043e\u0434\u0443\u0445\u0443 :)\n. ",
    "raulriera": "But, did you see the video? the croppedImage.size is returned in the console with different values\n. ",
    "Wangxiaotao": "my podfile is like\npod 'RSKImageCropper'\nafter the installation, the following code is not found.\nbut i fix it by modifying the podfile \npod 'RSKImageCropper', :git => 'https://github.com/ruslanskorb/RSKImageCropper.git'\nand run install, the missing code come back.\n/\n The Title Label.\n /\n@property (strong, nonatomic, readonly) UILabel moveAndScaleLabel;\n/\n The Cancel Button.\n /\n@property (strong, nonatomic, readonly) UIButton cancelButton;\n/\n The Choose Button.\n /\n@property (strong, nonatomic, readonly) UIButton chooseButton;\n. Thank you for fixing it, nice~\n. ",
    "yas375": "@ruslanskorb I think @Wangxiaotao is right. The latest version available via CocoaPods is 0.4.0, but but there is a pull request has been merged into master since then. And that pull request exactly contains the code @Wangxiaotao is referencing here. \nHere is the diff: https://github.com/ruslanskorb/RSKImageCropper/compare/0.4.0...master\nThe problem can be solved if you would tag a new version (i.e. 0.4.1) and push the new version to CocoaPods' trunk service.\n. :+1:\n. ",
    "pronebird": "Yeah that's exactly why I've added additional method, but if you're ready to bump major version, then we could simply modify a protocol.\n. @ruslanskorb Thank you so much! Great library!\n. :+1:\n. it seems that you need to scale image on rotation to avoid black bars.\n. Hey, no apologies, thanks for your efforts, I wish I could help you more but I am swamped on other projects, currently maintaining couple of my own pods too, it's tough.\n. @heistings welcome! I guess this commit was stripped because I can't seem to trace it either.\n. I'd say instead of hacking rotations through some property, we could simply implement the necessary methods to handle rotations, resize view and recalculate bounds and let developer handle the rest.\n- willRotateToInterfaceOrientation:duration: for iOS < 8\n- viewWillTransitionToSize:withTransitionCoordinator: on iOS >= 8\n. Nice but why do use tgmath, what's wrong with math.h itself?\n. What kind of customization are you looking for and what can't you achieve with view controller subclass?\n. There is nothing that prevents you from doing so from view controller subclass, e.g. you can hide or reposition undesired elements and add your own stuff on top.\n. We should include rotation in sample app, I think not many understand what movement rect is.\n. Go to Example folder and run pod install in console, then open workspace. You'll need CocoaPods installed.\n. There is image view inside that takes care of retina. I don't think image scale has anything to do with invalid crop area.. can you please share a screenshot?\n. How about sub-classing instead?\n. I suppose this import will only work on framework, but hey what's wrong with good old include we had before?\n. Would be even better to include a bundle with localizations and ship it with pod.\n. Defo having localization iniside of pod is a good practice.\n. There was a presentation in one of WWDC sessions related to RTL languages and that iOS 9.0 automatically mirrors a lot of stuff. So as soon as we use trailing and leading constraints and such, I guess we're good.\nNot sure though what up with RTL languages in iOS 8.\n. Am I correct if you use a helper function instead of NSLocalizedString, Xcode or genstrings would not be able to extract strings for translation from source code?\n. Yeah I use IDs too, usually you can extract those automatically. Otherwise you have to add keys manually into localizations. Just thinking out loud :) Good job!\n. Just run pod install from Example folder as the message suggests. \n. ",
    "dyadenkor": "Wow, I wanted say thank you for your quick work, but unfortunately you have a couple mistakes.\nI set  imageCropVC.avoidEmptySpaceAroundImage = YES;\nso hope I can't see black space in crop area like here\nhttps://www.dropbox.com/s/jr2qtiuturpsymq/Screenshot%202015-03-02%2000.34.15.png?dl=0,\nbut result surprise me more\nhttps://www.dropbox.com/s/4s4na2pe4rqe4vj/Screenshot%202015-03-02%2000.41.39.png?dl=0\nhttps://www.dropbox.com/s/ue01mv0kkvpgkp2/Screenshot%202015-03-02%2000.42.06.png?dl=0\nhttps://www.dropbox.com/s/t41lmkxu79pu9ou/Screenshot%202015-03-02%2000.42.16.png?dl=0\nhttps://www.dropbox.com/s/qyhgcb1mqxssppj/Screenshot%202015-03-02%2000.42.37.png?dl=0\nhttps://www.dropbox.com/s/p5crw5uga2brshv/Screenshot%202015-03-02%2000.42.43.png?dl=0\nThanks\n. https://www.dropbox.com/s/6096qo8cp5dmgl4/Screenshot%202015-03-02%2000.43.31.png?dl=0\nhttps://www.dropbox.com/s/k9ptszp8bkw6x90/Screenshot%202015-03-02%2000.43.43.png?dl=0\n. I need this crop feature for rectangle area and square :) For circle it looks nice. Thanks\n. Well done!!!\n. Fx, change colors and fonts for butons, remove label, change buttons position, change text to images and so on. Why they have readonly property? :)\n. Thanks, will try and will tell you the result. Thanks!\n. I'he tried. https://www.dropbox.com/s/laralbs0d0fewjm/Screenshot%202015-03-13%2021.33.15.png?dl=0\nWhat I am doing wrong?\npragma mark - Action handling\n\n(void)onAddPhotoButtonTouch:(UIButton )sender\n  {\n  UIImage photo = [UIImage imageNamed:@\"photo\"];\n  RSKImageCropViewController *imageCropVC = [[RSKImageCropViewController alloc] initWithImage:photo cropMode:RSKImageCropModeCustom];\n  imageCropVC.avoidEmptySpaceAroundImage = YES;\n  imageCropVC.rotationEnabled = YES;\n  imageCropVC.dataSource = self;\n  imageCropVC.delegate = self;\n  [self.navigationController pushViewController:imageCropVC animated:YES];\n  }\n\npragma mark - RSKImageCropViewControllerDataSource\n// Returns a custom rect for the mask.\n- (CGRect)imageCropViewControllerCustomMaskRect:(RSKImageCropViewController *)controller\n  {\n  CGFloat viewWidth = CGRectGetWidth(self.view.frame);\n  CGFloat viewHeight = CGRectGetHeight(self.view.frame);\nCGRect maskRect = CGRectMake(0,\n                               (viewHeight - viewWidth) * 0.25f,\n                               viewWidth,\n                               viewWidth * 0.75f);\nreturn maskRect;\n  }\n// Returns a custom path for the mask.\n- (UIBezierPath )imageCropViewControllerCustomMaskPath:(RSKImageCropViewController )controller\n  {\n  CGRect rect = controller.maskRect;\n  UIBezierPath *maskPath = [UIBezierPath bezierPathWithRect:rect];\n  return maskPath;\n  }\n// Returns a custom rect in which the image can be moved.\n- (CGRect)imageCropViewControllerCustomMovementRect:(RSKImageCropViewController *)controller\n  {\n  return [self imageCropViewControllerCustomMaskRect:controller];\n  }\n. I understand what is this, but I can't understand how could I calculate it. I saw many calculations in sources, could you explain, please in words these processes. Thanks :)\n. ",
    "heistings": "I'm sorry, I'm a new fish. How can you contribute code for this issue? And where did you put the commit \"[RSKImageCropViewController] Add support for rotation.\" ?\n. @pronebird Thanks for your passion. I think we may support a crop view instead to enable user to customize his own controller. Or we just make public property to enable user to subclass the controller for use.\n. Oh, I'm sorry. How do you rotate the image?\n. I think it may be better to update zoomScale of RSKImageScrollView when minimumZoomScale value changed. Instead of calculate again in setInitialZoomScale after setMaxMinZoomScalesForCurrentBounds.\n. I'm sorry, I don't understand very well. Such as the minimumZoomScale was calculated as 1.2 after resizing, and the zoomScale was initialized as 1.0, and we should not update zoomScale to 1.2?\n. Then what if:\nobjective-c\n    if (self.zoomScale < self.minimumZoomScale) {\n        self.zoomScale = self.minimumZoomScale;\n    }\n. I see the problem even with the origin master code.\n\n\n. The crop area changed when rotate the device. I discover that we are not focus on the same problem, and what is the problem you mean You can try to zoom in, and then rotate the device. So you see the problem.?\n. Thank you, I just found out my bug, if minimumZoomScale was set from 1.0 to 0.2, the zoomScale should be changed. My original purpose is to remove the \"duplicated code\" below:\n``` objective-c\n    CGSize boundsSize = self.bounds.size;\n    CGFloat xScale = boundsSize.width  / _imageSize.width;    // the scale needed to perfectly fit the image width-wise\n    CGFloat yScale = boundsSize.height / _imageSize.height;   // the scale needed to perfectly fit the image height-wise\n    CGFloat scale = MAX(xScale, yScale);\n```\n. Cool! I mean the problem will occur on the origin code.\n. @ruslanskorb You are right, thank you very much for your patient and kind.\nThanks,\nHeistings.\n. ",
    "romaincointepas": "It seems that you are hardcoding a scale of 1.0 here:\nhttps://github.com/ruslanskorb/RSKImageCropper/blob/bc1b146e1befcd3e364b9ba3f05d3761e4b0b72c/RSKImageCropper/RSKImageCropViewController.m#L342\n```\n- (CGRect)cropRect\n{\n    CGRect cropRect = CGRectZero;\n    float zoomScale = 1.0 / self.imageScrollView.zoomScale;\ncropRect.origin.x = round(self.imageScrollView.contentOffset.x * zoomScale);\ncropRect.origin.y = round(self.imageScrollView.contentOffset.y * zoomScale);\ncropRect.size.width = CGRectGetWidth(self.imageScrollView.bounds) * zoomScale;\ncropRect.size.height = CGRectGetHeight(self.imageScrollView.bounds) * zoomScale;\n\ncropRect = CGRectIntegral(cropRect);\n\nreturn cropRect;\n\n}\n```\nI think you should be using originalImage.scale (https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIImage_Class/#//apple_ref/occ/instp/UIImage/scale)\nSomething like: float zoomScale = self.originalImage.scale / self.imageScrollView.zoomScale; works great\n. I've made a video to show the problem with the provided example, but steps to reproduce above are pretty self-explanatory :)\nhttp://cl.ly/37281l0W0h2E\n. Amazing, thanks a lot!\n. Thanks for the fix!\n. ",
    "denigada": "And also the cropped version is also a square not a circle shaped image. I would really appreciate your help\n. ",
    "AnthonyBY": "Ruslan, I have found the issue. When I init CropViewController with \"cropMode\" everything work fine. \nRSKImageCropViewController *imageCropVC = [[RSKImageCropViewController alloc] initWithImage:image cropMode:RSKImageCropModeCircle];\nSorry for the inconvenience. \n. ",
    "markst": "\ud83d\ude02\n. ",
    "coveralls": "\nCoverage increased (+48.66%) to 48.66% when pulling ed7de8b08e7c2400b234826a54aaa84743754e83 on develop into 2a19d4d1759dff0fd9b0a2345b9195e0f3c9d59b on master.\n. \nCoverage increased (+52.81%) to 52.81% when pulling a558e995692299afd7801ac6a6014415ec17a080 on develop into 2a19d4d1759dff0fd9b0a2345b9195e0f3c9d59b on master.\n. \nCoverage increased (+60.96%) to 60.96% when pulling 33e1790fd1a036bcfc3ec3c82f1aa57e62bb284b on develop into 2a19d4d1759dff0fd9b0a2345b9195e0f3c9d59b on master.\n. \nCoverage increased (+92.38%) to 92.38% when pulling 34223c3ad529f59d64e4ac8840c663dff3740582 on develop into 2a19d4d1759dff0fd9b0a2345b9195e0f3c9d59b on master.\n. \nCoverage increased (+93.99%) to 93.99% when pulling e8fdf6dbe1c33074b84c193113e875bfd6043799 on develop into 2a19d4d1759dff0fd9b0a2345b9195e0f3c9d59b on master.\n. \nCoverage increased (+95.86%) to 95.86% when pulling 3dc330a532f0b4542b64ba7e5d9622fae1bb61da on develop into 2a19d4d1759dff0fd9b0a2345b9195e0f3c9d59b on master.\n. \nCoverage increased (+0.02%) to 95.88% when pulling 7e7013d03b219f0481b106f82391e4f12a1c398b on develop into a5709d297306eb161a68aba87e84291b203c905c on master.\n. ",
    "Knights22": "Ahhh, found it, RSKImageCropModeSquare\n. ",
    "Arvkon": "You, sir, are a gentleman! Your suggestion worked like a charm =)\nI made a fork with your code and a minOutputSize property: https://github.com/Arvkon/RSKImageCropper/commit/e590f8ad178bf6a82ce7e3db5a6d5af1604c60f1\n. ",
    "perlasivakrishna": "How to set Min and Max Zoom in Swift ?. Thanks for the reply, I did the same, But In this \"imageCropViewControllerCustomMaskPath\" method I'm getting mask rect as (0,0) even though I passed the maskrect in above datasource method, Any way  Im able to do it by  copying same in mask path method for time being. \nThanks . func PresentImageCropper(image:UIImage)\n    {\n       let cropcontroller:RSKImageCropViewController = RSKImageCropViewController(image: image)\n        cropcontroller.cropMode = .custom\n        cropcontroller.dataSource = self\n        cropcontroller.delegate = self\n        self.navigationController?.pushViewController(cropcontroller, animated: true)\n    }\nHere is how I'm loading Image Cropper\n. Data Source Methods:\n  func rectforcontroller(_ controller: RSKImageCropViewController) ->CGRect\n    {\n    var maskSize:CGSize\n\n    if (controller.isPortraitInterfaceOrientation()) {\n        maskSize = CGSize(width: 270, height: 180)\n\n    } else {\n        maskSize = CGSize(width: 220, height: 220)\n    }\n\n    let viewWidth = controller.view.frame.width\n    let viewHeight = controller.view.frame.height\n\n    let maskRect = CGRect(x: (viewWidth - maskSize.width) * 0.5, y: (viewHeight - maskSize.height) * 0.5, width: maskSize.width, height: maskSize.height)\n\n    return maskRect;\n\n}\nfunc imageCropViewControllerCustomMovementRect(_ controller: RSKImageCropViewController) -> CGRect {\n\n           return self.rectforcontroller(controller);\n}\nfunc imageCropViewControllerCustomMaskPath(_ controller: RSKImageCropViewController) -> UIBezierPath {\n\n//  Here is the problem. If Im using controller.maskrect to create mask its not coming. because controller.maskrect value is 0,0 in this method. So I took a common method to get out of this issue.  \n    let  rect = self.rectforcontroller(controller);\n\n    let path = UIBezierPath(rect:rect)\n\n    return path\n}\nfunc imageCropViewControllerCustomMaskRect(_ controller: RSKImageCropViewController) -> CGRect {\n   return controller.maskRect\n}\n\n. func imageCropViewControllerCustomMaskRect(_ controller: RSKImageCropViewController) -> CGRect {\n   return self.rectforcontroller(controller)\n}\nIs this the way I have do ?. ",
    "annjawn": "i see that this has still not made into the master. Is there plans to move it?. @ruslanskorb thanks a lot. I'll give it a try. . ",
    "maksTheAwesome": "Thanks, dude. I should have get that on my own.\n. ",
    "ryang1428": "+1\n. ",
    "dbergman": "@ruslanskorb I added RSKImageCropViewControllerProtected.\n. ",
    "hankbao": "Oops... my bad. I've fixed that import statement and also updated the missing visibility setting of framework headers in f97786b.\n. It seems there are still some building issues on Travis CI with the newly added protected header importing statement in the framework umbrella header. However, that protected header should be put there if we need to expose it to the framework users as I understand. Or should I mark it as the private header of the framework?\n. As Travis CI is happy with recent commits now, hopefully this pr could be merged.\n. ",
    "abbysingh": "Hey is carthage support available in master now?\n. ",
    "m1entus": "Yes, thanks for your answer i solved in but it is not perfect solution, and i just asked it before actually i did it, but anywat thanks.\n. Temporary by using Private extension for setter\n. ",
    "Piero87": "Hi @ruslanskorb, i have make a test project, as you can see in this project the status bar start light and then when i crop the image become dark.\ni hope it helps, or maybe i have wrong something.\nThis is the project: https://www.dropbox.com/s/rlp0cqf5wtdpa0n/TestStatusBar.zip?dl=0\n. Thanks!\n. ",
    "tapz": "I can provide Finnish, Swedish and Spanish translations. Maybe some others too.\n. I what way localized strings in a pod are not good? Anyway, I have already done a PR and if it's not merged I will continue using my own fork/branch.\n. I have it in my branch, but Ruslan hadn't merged the PR yet. You can add Mandarin to my branch if you like and I'll make a new PR:\nhttps://github.com/tapz/RSKImageCropper/settings/collaboration\n. Sorry, just remove the /settings/collaboration from the url:\nhttps://github.com/tapz/RSKImageCropper\n. I'm thankful for all possible languages :-) I actually took most of the languages from iPhone, but couldn't copy Chinese, Arabic etc because didn't know how to reproduce the characters and couldn't even recognise different characters.\n. Why would genstrings need to be able to extract strings from the source code when they already are in the localization files? Personally, I never add english strings to code, but add an id and immediately add the string to the base.strings file.\n. ",
    "heyehao2008": "I don't think \u00a0include too many NSLocalizedString in pods is good!\n. I'm sorry\uff0cthe property 'avoidEmptySpaceAroundImage' is work for this function\u3002please close this issue\u3002 \n. ",
    "StevenMasini": "Hey guys, do we have a solution for the Localization ? I would need to add Mandarin.\n. The link doesn't works, it shows 404 not found.\nBut I would be glad to add the translation to your branch :)\n. Ok I pushed the Mandarin localization to the Localizations branch. \nI can also provide you the Arabic, do you want it ?\n. I asked a Pakistan friend who speak Arabic to translate these words. Nevertheless Arabic is read from right to left, not sure if we need to adapt the buttons for it.\n. I'm not sure that Arabic users will notice the difference as long as the button are floating in the interface. Both LTR and RTL languages are \"managed\" it makes no difference.\nDon't you think ?\n. ",
    "ghost": "Sorry, I should have mentioned that I did that. Also tried pod update and deleting the pod related files and doing a fresh pod init. Stragely enough nothing worked.  That was at work where I use Xcode 7.0.1 under OSX 10.10.5. I just treid it on my home computer with Xcode 6.3 (also 10.10.5) and it worked fine. I will check at work again tomorrow, maybe I can find something out. Thanks for your help.\n. It's possible to scale image by zooming in and cropping, is it possible to disallow scaling?\n. ",
    "rajvinders": "I am facing this issue in swift 3.0.\n. ",
    "lis186": "@rajvinders \nYou have to import RSKImageCrop by adding the code to your Project-Bridging-Header.h\n#import \"RSKImageCropper/RSKImageCropper.h\"\n. ",
    "shaase": "Hi there, just checking out this library myself. Have you set up a bridging header in your project? I'm trying the library out in a Swift project, and after adding #import \"RSKImageCropViewController.h\" to my header it appears to build without errors.\n. ",
    "bawn": "@ruslanskorb \n\nI think that there is a problem in your mask rect. Can you provide a sample project?\n\nI add the following code in demo\n```\n- (void)onAddPhotoButtonTouch:(UIButton )sender\n{\n    UIImage photo = [UIImage imageNamed:@\"photo\"];\n    RSKImageCropViewController *imageCropVC = [[RSKImageCropViewController alloc] initWithImage:photo cropMode:RSKImageCropModeCircle];\n    imageCropVC.delegate = self;\n    imageCropVC.dataSource = self;\n    imageCropVC.cropMode = RSKImageCropModeCustom;\n    imageCropVC.maskLayerStrokeColor = [UIColor whiteColor];\n    imageCropVC.maskLayerLineWidth = 6.0f;\n    [self.navigationController pushViewController:imageCropVC animated:YES];\n}\n```\n```\n- (CGRect)imageCropViewControllerCustomMaskRect:(RSKImageCropViewController )controller{\n    CGFloat originY = (controller.view.frame.size.height - controller.view.frame.size.width) 0.5f;\n    CGRect maskRect = (CGRect){0, originY, controller.view.frame.size.width, controller.view.frame.size.width};\nreturn maskRect;\n\n}\n\n(UIBezierPath )imageCropViewControllerCustomMaskPath:(RSKImageCropViewController )controller{\n    return [UIBezierPath bezierPathWithRect:controller.maskRect];\n}\n\n```\nThe sample project https://github.com/bawn/RSKImageCropperTest\n. ",
    "estebansotoara": "Hi ruslanskorb, thanks for your answer.\nYou are right, this can be achieved without pain using a subclass, I did it in case someone need it just out of the box. As for the image for the rotate button I actually thought about using one but my skills in icon design are not very high and didn't just wanted to grab someone else's image so I decided to leave it as a text, other possibility could be leave the possibility to set an image from outside and default to text if the image was not provided. I'll leave the fork alive anyway in case someone wants to use it.\nAnd good to know about the tests, that was driving me crazy I had a vague idea about what's happening but could't figure it out exactly how to make them work.\n. ",
    "markfulo": "@ruslanskorb, sorry I haven't looked at it that much, currently I just implemented a temporary fix by limiting the file size of the image before I crop it. It's not on my priorities right now (my project has been changed >_< ).  I guess I'll close this for now. \nAwesome image cropper though! :+1:  :+1: \nThanks!\n. ",
    "inPhilly": "Sorry, it was an issue with my own code.\n. Was this a user bug or something that should possibly be handled within the Carthage process?. ",
    "kevinvanderlugt": ":+1:  If I was to work on a PR for this feature, would you be interested in adding this as an enhancement?\n. ",
    "ogoldfinger": "bump \nThis is a very simple change that adds much needed functionality. Please consider.\n. ",
    "Serchinastico": "Thanks to you!\n. ",
    "WedgeSparda": "Sorry for the issue, it was my mistake all along.\n. ",
    "jquiambao": "After RTFM, I realized that I need to use RSKImageCropViewControllerDataSource and set cropMode to RSKImageCropModeCustom. Then create my path manually.\nI wish there was a way to just use RSKImageCropModeCircle and set a diameter.\n. @ruslanskorb portraitCircleMaskRectInnerEdgeInset and landscapeCircleMaskRectInnerEdgeInset is what I was looking for! thanks!\n. I think this might be the property you're looking for:\n[RSKImageCropViewController avoidEmptySpaceAroundImage]\nJust set that to YES,\n. ",
    "mayur43s": "@ruslanskorb Will you be implementing that in next go?\n. ",
    "ferz222": "Thank you, I already is found and made.\n. ",
    "gmogames": "Hi @ruslanskorb ,\nI separated the part of the code from my original project. Even though there is a slight difference (the image starts real big), you can see the problem by trying several photos and panning, trying to zoom out/in.\nPS: Thanks for the help\nCropperExample.zip\n. Weird, It does fix the problem on the project I put up for you, but doing the change on my project, which is the exact same code and files, it doesn't work :( I'll keep digging, thanks for your help!\n. @ruslanskorb I've been debugging this, and in the project that works, the properties of RSKImageScrollView is:\n<RSKImageScrollView: 0x7ffd7b8cea00; baseClass = UIScrollView; frame = (10 10; 355 607); gestureRecognizers = <NSArray: 0x7ffd7de84e20>; layer = <CALayer: 0x7ffd7de6bd10>; contentOffset: {126, 0}; contentSize: {607, 607}>\nand for the project that doesn't work is:\n<RSKImageScrollView: 0x7fd30e06ba00; baseClass = UIScrollView; frame = (10 10; 355 607); gestureRecognizers = <NSArray: 0x7fd30bcad080>; layer = <CALayer: 0x7fd30bca5cf0>; contentOffset: {20, 0}; contentSize: {375, 607}>\nI'm using the same image, the same code, everything the same. Have any idea how the ContentOffset and ContentSize would get different values?\n. Nevermind. I had another lib I was using that had a UIScrollview category that was hijacking the setContentSize method and interferring with your lib. Took me a long time to find it.\nThanks for all your help!\n. ",
    "geekyfox90": "Works perfectly, thanks\n. it works fine, an error from my behind \n. ",
    "marujun": "thanks!\n. ",
    "fvvliet": "@peterdk : a pity no one replied, I'm also interested in an answer... Where you able to solve this in the mean time ?\n. ",
    "umito": "@fvvliet we disabled rotation for now. So not really a solution.\n. ",
    "arcocg": "Hi, guys. I needed rotation+cropping in custom mode. So I made fast and dumb (I know) fix: instead of image rendering I used image drawing for this case. May be it'll be usefull for someone too. https://github.com/arcocg/RSKImageCropper/commit/17e77fa3839fe12dff95ceeb03c791ffaed91198. ",
    "dineshmahajan": "Thanks for share this file but this is not working when we apply rotation in app.. Please check attach video file Frame is not updates after rotate\nVideo.zip\n. Class.zip\nHi Thanks for quick response, Please download my file & replace RSKExampleViewController class in an example provided on git.\nThanks. If i need to do calculation at my end. Then what is the use library in case\nof custom crop. It should be managed by library. Please let me know if you\ncan provide me solution otherwise i will use other library.\nOn Sun, Nov 5, 2017 at 2:53 PM, Ruslan Skorb notifications@github.com\nwrote:\n\nClosed #179 https://github.com/ruslanskorb/RSKImageCropper/issues/179.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruslanskorb/RSKImageCropper/issues/179#event-1326385193,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ANcXdBXU7YXkCMzIfoe1x1aGnmjK4lgpks5szX5-gaJpZM4QRbi9\n.\n. Can you please provide me example code where you implemented custom crop\nfunctionality. So i can test and implement accordingly.\n\nOn Sun, Nov 5, 2017 at 3:47 PM, Ruslan Skorb notifications@github.com\nwrote:\n\nIt is impossible to calculate a movement rect for an unknown mask rect.\nTherefore, it is the responsibility of the developer who uses this library.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruslanskorb/RSKImageCropper/issues/179#issuecomment-341962337,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ANcXdNB62Q4e6ovtUJqgIM8p30ljR2jmks5szYtEgaJpZM4QRbi9\n.\n. I want to implement same like twitter. It will be great if you can send me with custom . Because in case of square it's easy to manage height and width. I need to implement this today.\nOn 05-Nov-2017, at 3:56 PM, Ruslan Skorb notifications@github.com wrote:\nYou can see how to calculate a movement rect for the square here. I hope it will guide you in the right direction.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "Briahas": "Hi @ruslanskorb , do you have plans on fixing this bug? . ",
    "pedro380085": "@ruslanskorb Do you know what it might be?\n. I've not been able to solve it yet, I believe this user had some accessibility tools enabled, such as dynamic text and zoom out.\n. ",
    "sezertunca": "Just saw the .Custom mode.\n. ",
    "brod-ie": "It's:\nlet imageCropVC: RSKImageCropViewController = RSKImageCropViewController(image: image)\nimageCropVC.delegate = self\nimageCropVC.dataSource = self\nimageCropVC.avoidEmptySpaceAroundImage = true\nimageCropVC.applyMaskToCroppedImage = true\nimageCropVC.cropMode = RSKImageCropMode.Custom\nimageCropVC.rotationEnabled = false\n. Thanks for your help.\nSetting imageCropVC.applyMaskToCroppedImage to false seems to of fixed the issue?\n. I haven't investigated any further beyond confirming disabling 'applyMaskToCroppedImage' fixed the issue (on annual leave, will pick it up when I'm back in the office)\n. ",
    "cbrandsma-cs": "Turns out this was more of an issue with Cocoa pods.  I deleted my pods folder and reinstalled.  Now it works.  Sorry for the inconvenience.\n. ",
    "magrinj": "Hi @ruslanskorb,\nthanks for your answer!\nThe current logs are: \n2016-09-22 09:42:01.273133 BeJoe[8461:1731311] [Generic] Creating an image format with an unknown type is an error\n2016-09-22 09:42:04.172763 BeJoe[8461:1732283] [Generic] Failed to load image data for asset <private> with format 9999\nI'm going to log picture in the library \n. The picture is nil, so I think the problem didn't come from your library but from the one that select the picture: https://github.com/questbeat/QBImagePicker\n\nI'm going to look in this other library to try to solve this issue\n. ",
    "NiteshKhandal": "thanx to guid \nbut now i have another issue.\ni have created an UIButton on class CropViewController: RSKImageCropViewController and i want to crop an image on that button action. so can i call [self cropImage]; function in my CropViewController to crop image.\nplease , if you guid me ..... \nRegards\nNites Khandal\n. ok done and from the deep of my heart , thank you sir......\n. ",
    "benoistmartins": "Hey @ruslanskorb ,\nThe link above sent to 404 error page, can you please provide it back again ? :)\nThanks. @ruslanskorb Thanks :). ",
    "PieterLimburg": "Hi Ruslan,\nThank you so much for the response. I'm actually trying to change the\nbackground color of the cropped jpg to white. I'm using the circle crop\nfunction which leaves a black square around the circle. After that I'm\nprocessing the jpg and need the background to be white.\nIs that at all possible?\nThanks again for your advice.\nBest,\nPieter\nOn Thu, Dec 8, 2016 at 00:26 Ruslan Skorb notifications@github.com wrote:\n\nHi Pieter,\nYou can change the background color just before presenting\nRSKImageCropViewController.\nimageCropViewController.view.backgroundColor = UIColor.white\nself.navigationController?.pushViewController(imageCropViewController, animated: true)\nOr you can create a subclass of RSKImageCropViewController and override\nthe method viewDidLoad.\noverride func viewDidLoad() {\n    super.viewDidLoad()\n\n\n\n    self.view.backgroundColor = UIColor.white\n\n}\nCheers,\nRuslan\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruslanskorb/RSKImageCropper/issues/125#issuecomment-265656222,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVraTOGm9IRFih2uVHT8YIPKtpLIeRjPks5rF5UigaJpZM4LHZ3S\n.\n. Thanks again. I had already found the \"appyMaskToCroppedImage\" and set it\nto true. But don't know how to redraw the cropped image with the white\nbackground (currently it's black). Could really appreciate your help!\n\n2016-12-08 12:17 GMT-05:00 Ruslan Skorb notifications@github.com:\n\nYou can set the value of the property applyMaskToCroppedImage of\nRSKImageCropViewController to true and redraw the cropped image with the\nwhite background.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/ruslanskorb/RSKImageCropper/issues/125#issuecomment-265798156,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVraTAlAj-X35ATQmiRX0koWpcyTZGnoks5rGDu_gaJpZM4LHZ3S\n.\n. \n",
    "ksti": "OK,it sounds better. Thank you for reply.. ",
    "Obbut": "This problem still exists in Xcode 8.3 final. ",
    "nazeehshoura": "Hi everyone\nAny updates on the issue. Getting the error while using cocoapod. ",
    "apwelsh": "Please merge PR.  Need update too.. Thanks. ",
    "b1nhle": "There is still a bug as description above with XCode 8.3 final version. ",
    "khuong291": "@ruslanskorb I use version 1.6.0. Thank you \ud83d\udc4d . ",
    "dimitris-c": "@MonFig \u2014 Removing the pod and reinstalling it worked for me.. ",
    "MonFig": "@dimmdesign  I tried but failed too. Solved.Should update my npm package.. @wootwoot1234 I think run pod update then npm update might help.. ",
    "cwRichardKim": "@MonFig how did you solve this? I deleted my pods file but had the same issue. it looks like you're also using react-native-image-crop-picker?. @wootwoot1234 I updated from react-native .29 to .42 and then installed the latest version of react-native-image-cropper (which contains a fix). bug is due to new xcode and ios 10.3 . ",
    "wootwoot1234": "@MonFig what did you do to solve this issue?. Dang!  I don't want to upgrade my React Native....  :(. @MonFig thanks but I ended up updating to react native 0.42 which I've been working on now for 2 days.  :(  I think I'm almost there.  . ",
    "pilot34": "Ups. I see, you fixed it in 1.6.1 by renaming the modulemap file. Sorry!. ",
    "FrankTravieso1": "really thank you, I will try to code that method in swift. It works to me, thank you from the depth of my heart. ",
    "Bat-Orshikh": "Thanks for your replay. Finally I found my mistake. My mistake was UIImagePickerControllerEditedImage variable. This should be UIImagePickerControllerOriginalImage. So I'm happy to implement your great repo. Tnx bro.!. ",
    "edenman": "Nope, this was a crash in the wild, uploaded to Sentry (our crash reporting tool).  I've never been able to repro it :/. Sorry, \"crash\" isn't the right word.  It's a non-fatal exception that I log to Sentry.  Here's the stack:\nrecharge-consumer-ios0x1001d9368  LogNonFatal(String) -> () (AppDelegate.swift:223)\n  recharge-consumer-ios0x100265058  specialized ChangeProfilePictureView.imageCropViewController(RSKImageCropViewController, didCropImage : UIImage, usingCropRect : CGRect, rotationAngle : CGFloat) -> () (ChangeProfilePictureView.swift:133)\n  recharge-consumer-ios0x100263fdc  @objc ChangeProfilePictureView.imageCropViewController(RSKImageCropViewController, didCropImage : UIImage, usingCropRect : CGRect, rotationAngle : CGFloat) -> () (ChangeProfilePictureView.swift:0)\n  RSKImageCropper     0x100fa3c1c  __39-[RSKImageCropViewController cropImage]_block_invoke_2 (RSKImageCropViewController.m:959)\n  libdispatch         0x1831494bc  _dispatch_call_block_and_release\n  libdispatch         0x18314947c  _dispatch_client_callout\n  libdispatch         0x18314eb84  __dispatch_main_queue_callback_4CF\n  CoreFoundation      0x1836b4d50  ___CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__\n  CoreFoundation      0x1836b2bb8  ___CFRunLoopRun\n  CoreFoundation      0x1835dcc50  CFRunLoopRunSpecific\n  GraphicsServices    0x184ec4088  _GSEventRunModal\n  UIKit               0x1888c6088  _UIApplicationMain\n  recharge-consumer-ios0x1001d9fb0  main (AppDelegate.swift:44)\n  libdyld             0x18317a8b8  _start\nAnd the message:\nImage isn't square (w=823.0, h=960.0) from original (w=823.0, h=960.0)\nIt's happened to three users:\niPhone7,1 on iOS 10.2\niPhone7,2 on iOS 10.2.1\niPhone5S on iOS 9.3.2. ```swift\nfunc imageCropViewController(controller: RSKImageCropViewController, didCropImage croppedImage: UIImage, usingCropRect cropRect: CGRect, rotationAngle: CGFloat) {\n    guard let delegate = delegate else {\n        LogNonFatal(\"No delegate\")\n        return\n    }\nguard croppedImage.size.width == croppedImage.size.height else {\n    let original = controller.originalImage\n    LogNonFatal(\"Image isn't square (w=\\(croppedImage.size.width), h=\\(croppedImage.size.height)) from original (w=\\(original.size.width), h=\\(original.size.height))\")\n    ErrorActions.setErrorDisplayText(ErrorActions.genericContactSupportError)\n    return\n}\n// Handle the image here        \ndelegate.shouldDismissViewControllerAnimated(true, completion: nil)\n\n}\n```. @ruslanskorb nope. @ruslanskorb willdo.  it'll probably be a couple weeks until I do another release, though.  I just finally updated to swift3 and I wanna make sure I get sufficient usage internally before release.  I'll update this thread next time it happens.  Thanks again!. @ruslanskorb yup: https://itunes.apple.com/us/app/recharge-luxury-hotels-unlocked/id999743644?mt=8. @ruslanskorb sorry, no.  I released the new version a week ago but nobody has hit the issue since then.  Will update if/when they do!. @ruslanskorb looks like i don't have \"reopen\" permission here, but the issue just happened in the wild again, so i have the extra info you requested:\nImage isn't square (w=1694.0, h=2234.0) from original (w=1694.0, h=2510.0) with cropRect (-345.0, -43.0, 2277.0, 2277.0)\n. In the original code snippet, self is ChangeProfilePictureView, a custom subclass of UIView.\nIn this snippet, delegate is SettingsViewController which is a UIViewController.  SettingsViewController is what actually calls present/dismiss on the imageCropViewController. @ruslanskorb yup.  The two hierarchies that contain a ChangeProfilePictureView:\nRootViewController -> SignedOutContainerViewController -> SignUpSectionViewController -> SignUpViewController.\nRootViewController -> SignedInContainerViewController -> SettingsSectionViewController -> SettingsViewController.\n. @ruslanskorb any more thoughts on this? It still happens periodically and I still can't figure out how to repro.. Nope.  I released a new version of my app on 7/13 (with RSK 1.6.3) and the issue hasn't happened again since then.  Feel free to close this if you want.. Nope. ",
    "Konshin": "When i try to crop custom rect (RSKImageCropModeCustom) from rotated image (imageCropVC.rotationEnabled = YES) i see white areas, that cut the picture around the edges\nhttp://take.ms/fafJv \nI use your example with adding dataSource to RSKImageCropViewController\n```\n- (void)onAddPhotoButtonTouch:(UIButton )sender\n{\n    UIImage photo = [UIImage imageNamed:@\"photo\"];\n    RSKImageCropViewController *imageCropVC = [[RSKImageCropViewController alloc] initWithImage:photo cropMode:RSKImageCropModeCustom];\n    imageCropVC.rotationEnabled = YES;\n    imageCropVC.dataSource = self;\n    imageCropVC.delegate = self;\n    [self.navigationController pushViewController:imageCropVC animated:YES];\n}\npragma mark - RSKImageCropViewControllerDataSource\n\n\n(CGRect)imageCropViewControllerCustomMaskRect:(RSKImageCropViewController *)controller {\n    CGSize rectSize = CGSizeMake(300, 150);\n    return CGRectMake((controller.view.bounds.size.width - rectSize.width) / 2,\n                      (controller.view.bounds.size.height - rectSize.height) / 2,\n                      rectSize.width,\n                      rectSize.height);\n}\n\n\n(UIBezierPath )imageCropViewControllerCustomMaskPath:(RSKImageCropViewController )controller {\n    CGRect rect = [self imageCropViewControllerCustomMaskRect:controller];\n    return [UIBezierPath bezierPathWithRect:rect];\n}\n``. if i useimageCropViewControllerCustomMovementRect` i can't crop image at edges - scroll to edge not available (bouncing back). Ok, thanks. Will try. \n\n",
    "kndl": "I had this same problem and I managed to resolve it. The issue is that Carthage manages a bare repository within its cache directory, which it then checks out to the working directory inside your project at Carthage/Checkouts. That checkout process does not clean up old files that are no longer in the repository.\nTo fix it, you should be able to do rm Carthage/Checkouts/RSKImageCropper/RSKImageCropper/module.modulemap. (There should be a file left in that directory named RSKImageCropper.modulemap.). ",
    "ISCHI": "Thanks! I forgot to update Cocoapods ... :). ",
    "LQi2009": "OK\uff0cthank you for reply me first! \nI already add the MIT lience .And I rewrite this lib,just want to use it in swift objects,what's more I can all right learn it.\nThinks very much . Yes,this can be used in swift.\nSo,I will use the original lib you writed!\nAnd the lib l rewrited, I'll delete it later.\nThinks all the same!. Thanks for reply! \nIn my test, it croped two times: The first time before rotated in the cropRect, and the second time after rotated in the cropRect. For this , it will be croped to a  polygon image. What I want is that: Like the photo edit in the iPhone's photo album, it can be rotated, and croped after rotated. Please tall me what should i do to get the same effect like that?\nThinks!. Maybe you'd better offer a demo for how to implement imageCropViewControllerCustomMovementRect(_:) when rotated, and how to calculate the rect for return.\nThanks!. ",
    "shenguanjiejie": "Perfect! Thanks! \ud83d\udc4d . \ud83d\ude02  Sorry~ \n    RSKImageCropViewController *imageCropVC = [[RSKImageCropViewController alloc]  initWithImage:image];\n    imageCropVC.applyMaskToCroppedImage = YES;\n\nThen I call UIImageJPEGRepresentation(croppedImage,1);\nresult:\n\n. Not work... # PS: self.shouldClipToCircle is false\nimageSize is clipSize\ud83e\udd2d\n\n\n\n```obj-c\npragma mark - RSKImageCropViewControllerDelegate\n\n\n(CGRect)imageCropViewControllerCustomMaskRect:(RSKImageCropViewController *)controller{\n    return [self getRect];\n}\n\n\n(UIBezierPath )imageCropViewControllerCustomMaskPath:(RSKImageCropViewController )controller{\n    CGRect rect = [self getRect];\nif (self.shouldClipToCircle) {\n    return [UIBezierPath bezierPathWithArcCenter:CGRectGetCenter(rect) radius:rect.size.width / 2.0 startAngle:0 endAngle:2*M_PI clockwise:YES];\n}\nreturn [UIBezierPath bezierPathWithRect:rect];\n}\n\n\n(void)imageCropViewControllerDidCancelCrop:(RSKImageCropViewController *)controller{\n    [self.navigationController popViewControllerAnimated:YES];\n}\n\n\n-(void)imageCropViewController:(RSKImageCropViewController )controller willCropImage:(UIImage )originalImage{\n//        int controllerCount = (int)self.navigationController.viewControllers.count;\n//        [self.navigationController popToViewController:self.navigationController.viewControllers[controllerCount - 3] animated:YES];\n}\n\n(void)imageCropViewController:(RSKImageCropViewController )controller didCropImage:(UIImage )croppedImage usingCropRect:(CGRect)cropRect{\n    if (_imagesCompletion) {\n        _imagesCompletion([NSArray arrayWithObject:croppedImage]);\n    }\n    [self.navigationController setNavigationBarHidden:NO animated:NO];\n    int controllerCount = (int)self.navigationController.viewControllers.count;\n    [self.navigationController popToViewController:self.navigationController.viewControllers[controllerCount - 3] animated:YES];\n\n}\npragma mark \u8f85\u52a9\u65b9\u6cd5\n\n\n(CGRect)getRect{\n    //\n    if (self.imageSize.width == 0 || self.imageSize.height == 0) {\n        self.imageSize = CGSizeMake(kScreenWidth, kScreenWidth);\n    }\nCGFloat scale = MIN(kScreenWidth / self.imageSize.width, kScreenHeight / self.imageSize.height);\nCGSize scaleSize = CGSizeMake(scale * self.imageSize.width, scale * self.imageSize.height);\nCGRect rect = CGRectMake(self.view.centerX - scaleSize.width / 2.0, self.view.centerY - scaleSize.height / 2.0, scaleSize.width, scaleSize.height);\nreturn rect;\n}\n. \n![image](https://user-images.githubusercontent.com/9425605/33261902-687a571e-d39f-11e7-9ed6-366f7f01f61f.png)\n.obj-c\nkScreenWidth = [UIScreen mainScreen].bounds.size.width;\nkScreenHeight = [UIScreen mainScreen].bounds.size.height;\n```\n\n. Did you zoom the image? Have a try.\n\n. Sorry about my bad English... You may not understand me. Here is my question with a demo.\nhttps://github.com/shenguanjiejie/RJImagePicker. \ud83d\ude2d\ud83d\ude2d\ud83d\ude2d  their \n\n\n\n\nYou can try applyMaskToCroppedImage = NO, will no white margins.\n. Perfect! Thanks\ud83d\ude00. ",
    "itinance": "Thank you very much for your help so quickly, @ruslanskorb!. ",
    "tobyhinloopen": "Did someone have a working imageCropViewControllerCustomMovementRect implementation yet? . ",
    "topbestapps": "After adding datasource in RSKImageCropViewController its wroking now in ipad.. ",
    "dmcgloin": "@ruslanskorb Nice! Confirmed fix in 1.6.3.\nNow if only Google could fix same issue in their stuff as quick as you :). ",
    "shilihuan": "the maskSize which i provide  in datasource method is (128, 128), i don't understand why the image size is not equal to maskSize\n. ",
    "abada": "@ruslanskorb Thank you.. ",
    "MehulSojitra16": "I am really sorry. \nHere is one little bit mistake from me.\nActually its working fine in RSKImageCropper. but issue is in swift library(RSKImageCropperSwift).. ",
    "clarencetwl": "Solved.\nProblem: RSKImageCropViewController.m was deleted\nTrigger: Installation of MobFox SDK\nSolution: Reinstall pod\nThanks for viewing guys. Admin please close.. ",
    "DarkByte3PG": "It seems my Xcode installation had some issues, probably introduced by myself. I've reverted a couple of commits (after digging everything and everywhere), took it from there and now it's working fine.\nSorry for the mess! :). ",
    "iPhoNewsRO": "@ruslanskorb i also needed this implementation so maybe you can add the following code i used in the readme file:\nadd this to your Utils class or VC\nSwift:\n```swift\nfunc getBoundingRectAfterRotation(rect: CGRect, angle: Float) -> CGRect {\n    let newWidth = Float(rect.size.width) * abs(cosf(angle)) + Float(rect.size.height) * fabs(sinf(angle))\n    let newHeight = Float(rect.size.height) * fabs(cosf(angle)) + Float(rect.size.width) * fabs(sinf(angle))\nlet newX = Float(rect.origin.x) + ((Float(rect.size.width) - newWidth) / 2);\nlet newY = Float(rect.origin.y) + ((Float(rect.size.height) - newHeight) / 2);\n\nlet rotatedRect = CGRect(x: CGFloat(newX), y: CGFloat(newY), width: CGFloat(newWidth), height: CGFloat(newHeight))\n\nreturn rotatedRect\n\n}\nObjective-C:obj-c\n- (CGRect)getBoundingRectAfterRotation:(CGRect)rect angle:(float)angle {\nCGFloat newWidth = (float)(rect.size.width) * fabs(cosf(angle)) + (float)(rect.size.height) * fabs(sinf(angle));\nCGFloat newHeight = (float)(rect.size.height) * fabs(cosf(angle)) + (float)(rect.size.width) * fabs(sinf(angle));\n\nCGFloat newX = (float)(rect.origin.x) + (((float)(rect.size.width) - newWidth) / 2);\nCGFloat newY = (float)(rect.origin.y) + (((float)(rect.size.height) - newHeight) / 2);\n\nCGRect rotatedRect = CGRectMake((float)(newX), (float)(newY), (float)(newWidth), (float)(newHeight));\n\nreturn rotatedRect;\n\n}\n```\nthen implement RSKImageCropViewControllerDataSource and add:\nswift\nfunc imageCropViewControllerCustomMovementRect(_ controller: RSKImageCropViewController) -> CGRect {\n    return self.getBoundingRectAfterRotation(rect: controller.maskRect, angle: Float(controller.rotationAngle))\n}\nthank you for this great library!. try my fix https://github.com/ruslanskorb/RSKImageCropper/issues/179#issuecomment-392816224. ",
    "butterpuf": "Hi, I am using UIImagePickerController to select image and use the following function to pass it to  RSKImageCropViewController. I think image picker controller calls its delegate on main thread!!.\n```\npublic func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any]) {\n    activityIndicator.hide()\n    imagePicker?.dismiss(animated: true, completion: nil)\n\n    let image = info[UIImagePickerControllerOriginalImage] as! UIImage\n    showCropper(image: image)\n}\npublic func showCropper (image: UIImage) {\n\n    if (cropViewController == nil) {\n        cropViewController = RSKImageCropViewController()\n        cropViewController!.modalTransitionStyle = .crossDissolve\n        cropViewController!.delegate = self\n        cropViewController!.maskLayerColor = UIColor(red: 1, green: 1, blue: 1, alpha: 0.65)\n        cropViewController!.cancelButton.setTitleColor(#colorLiteral(red: 0.9633908868, green: 0.5702037811, blue: 0.1652590632, alpha: 1), for: .normal)\n        cropViewController!.chooseButton.setTitleColor(#colorLiteral(red: 0.9633908868, green: 0.5702037811, blue: 0.1652590632, alpha: 1), for: .normal)\n        cropViewController!.chooseButton.setTitle(\"Crop\", for: .normal)\n        cropViewController!.title = \"\"\n    }\n    cropViewController!.originalImage = image\n    present(cropViewController!, animated: true, completion: completion)\n}\n\n```. ohhh. Ok great.. ",
    "1jacobb1": "just use your current project, just add an uiimageview for the container of the cropped result.\nnote: you must select a panaroma image. thanks!. did you zoom it out?. ok i will make and provide you a sample project\n. ",
    "wbsgxc": "Hey \nThanks for the reply. I don have a screen shot at this moment, also better not having one as might contain confidential information of the clients\u2026. \nBasically, I have for example, in the navigatonController:\n    override var prefersStatusBarHidden: Bool {\n        return (self.topViewController?.prefersStatusBarHidden)!\n    }\nSo that each viewController\u2019s behaviour will be reflected. However when we do (RSKImageCropViewController.m line 160)\n    UIApplication *application = [UIApplication rsk_sharedApplication];\n    if (application) {\n        self.originalStatusBarHidden = application.statusBarHidden;\n        [application setStatusBarHidden:YES];\n    }\nThis will case the view controller\u2019s \u201chidden preference\u201d been overwritten.\nOnce again, thanks for great repo, well done :)\nBest regards\nXiaochen\n\nOn 21 Dec 2017, at 12:52 PM, Ruslan Skorb notifications@github.com wrote:\nHi @wbsgxc https://github.com/wbsgxc,\nThanks for reporting the issue.\nCould you, please, describe in more detail the problem that arises, or provide a video / screenshot with this problem?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/ruslanskorb/RSKImageCropper/issues/186#issuecomment-353257897, or mute the thread https://github.com/notifications/unsubscribe-auth/AFG7ALAjYP5F-XoSnYvRiAOSDAPfOT9kks5tCeQigaJpZM4RJVjN.\n\n\n. @rpendleton please refer my comment above. \n1. Remove the prefersStatusBarHidden from UIApplication level\n2. Propagate the property overridden down from parent towards the frontmost view controller\nLike what I try to spot, this should be fixed at the framework level.\n. ",
    "rmusetti81": "Sorry but create a subclass and override prefersStatusBarHidden not work.\nHelp please!!. ",
    "rpendleton": "Overriding prefersStatusBarHidden didn't work for me either since the viewWillAppear is hiding the status bar directly with UIApplication.\nSince I need to show the status bar on iPad (since the VC will be in a popover), but not on iPhone, I just ended up updating viewWillAppear to respect the return value of prefersStatusBarHidden. I haven't tested it too extensively, but it works fine for my needs:\nhttps://github.com/rpendleton/RSKImageCropper/commit/ac52953fd9f979ff9192702012a3146b38e10924. ",
    "stp-bopa": "Of course I meant values provided in:\nfunc imageCropViewControllerCustomMaskRect(_ controller: RSKImageCropViewController) -> CGRect\nfunc imageCropViewControllerCustomMaskPath(_ controller: RSKImageCropViewController) -> UIBezierPath\nfunc imageCropViewControllerCustomMovementRect(_ controller: RSKImageCropViewController) -> CGRect\n. In that case you will loose the quality. When you replace the maxScale with min value from both X and Y axis instead of max value, the image will not be smaller than mask rectangle, quality will be better. I understand now that it should not be reported as an issue - my bad, sorry for that. But consider introducing this change as a feature request maybe?  :) even a flag would work great! Btw, thanks for this awesome library. ",
    "borkuslav": "Actually zoom doesn't affect movement area so every part of the image will be selectable. Anyway thanks for you work, I appreciate your library very much!. Yeah, in some cases zoom range is much reduced. I see your point now. Thanks for sharing examples. . ",
    "Chana719": "Hello, thank you very much for your open source, you are doing well! I recently used your framework, would like to add some features on the basis of this, but failed to achieve, and then would like to ask a question, if I zoom the picture into the crop box, this picture can be arbitrarily moved in the box, or Image right instead of center, and then confirm the crop, display there is a problem, or, instead of the top of the picture offset to the center, cropping is the same problem! All of the above cutting zoom function, if you do not quite understand what I said, you can refer to the next print studio cutting function, I want to achieve it this style \ud83d\ude0a, trouble you can give me some advice? Hope to receive your reply! Thank you!. I have already solved, thank you for your reply!\n. ",
    "jalleyne": "Perfect, thanks for the quick reply. awesome library!. ",
    "c1394393468": "Thank  you !. ",
    "Discobanan": "I hope that resolves everything that needed to be changed. First time ever I have written unit tests in objective-c, so have an extra look at those :). Yea, that test is much better. I also tried breaking it, and it seems to work as intended! All done then :). ",
    "Karthus1110": "@ruslanskorb Im not sure. But the version is about five month ago . I import this library five month ago.. @ruslanskorb The black and white effect is not due to library. The only question is clip not correct. \n    @interface ZYDIYViewController () \n@property (nonatomic, strong) UICollectionView *collectionView;\n\n@property (nonatomic, strong) NSArray *dataArr;\n\n@end\n\n@implementation ZYDIYViewController\n\n- (void)viewDidLoad {\n    [super viewDidLoad];\n}\n\n- (void)loadSubViews\n{\n    [super loadSubViews];\n\n    [self.collectionView registerClass:[ZYHomeCell class] forCellWithReuseIdentifier:NSStringFromClass([ZYHomeCell class])];\n\n    UIButton *rightBtn = [UIButton buttonWithType:UIButtonTypeCustom];\n    rightBtn.frame = (CGRect){0, 0, 44, 44};\n    [rightBtn setImageEdgeInsets:(UIEdgeInsets){0, 10, 0, -10}];\n    [rightBtn setImage:[UIImage imageNamed:@\"nav_album\"] forState:UIControlStateNormal];\n    [rightBtn addTarget:self action:@selector(pickImageAction) forControlEvents:UIControlEventTouchUpInside];\n\n    UIBarButtonItem *rightItem = [[UIBarButtonItem alloc] initWithCustomView:rightBtn];\n    self.navigationbar.rightItem = rightItem;\n}\n\n#pragma mark - Image\n- (void)pickImageAction\n{\n    WeakObj(self);\n\n    if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypePhotoLibrary]) {\n        UIImagePickerController *pickerVC = [[UIImagePickerController alloc] init];\n        pickerVC.delegate = self;\n        pickerVC.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;\n        [self presentViewController:pickerVC animated:YES completion:nil];\n\n        return;\n    }\n\n    TZImagePickerController *picker = [[TZImagePickerController alloc] initWithMaxImagesCount:1 delegate:self];\n    picker.allowPickingVideo = NO;\n    picker.allowPickingOriginalPhoto = NO;\n    picker.didFinishPickingPhotosHandle = ^(NSArray<UIImage *> *photos, NSArray *assets, BOOL isSelectOriginalPhoto) {\n        [weakself cropWithImage:[photos firstObject]];\n    };\n    [self presentViewController:picker animated:YES completion:nil];\n}\n\n- (void)cropWithImage:(UIImage *)image\n{\n    RSKImageCropViewController *croper = [[RSKImageCropViewController alloc] initWithImage:image\n                                                                                cropMode:RSKImageCropModeCustom];\n    croper.delegate = self;\n    croper.dataSource = self;\n    croper.applyMaskToCroppedImage = YES;\n    croper.rotationEnabled = YES;\n    croper.maskLayerStrokeColor = UIHexColor(0xf75000, 1);\n\n    croper.moveAndScaleLabel.text = @\"\u628a\u8138\u90e8\u653e\u5165\u6846\u5185,\u53cc\u6307\u65cb\u8f6c\u6216\u7f29\u653e\";\n    croper.moveAndScaleLabel.font = kContentFont14;\n    croper.chooseButton.titleLabel.font = kContentFont14;\n    croper.cancelButton.titleLabel.font = kContentFont14;\n    [self.navigationController pushViewController:croper animated:YES];\n}\n\n#pragma mark - ImagePicker Delegate\n- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *,id> *)info\n{\n    UIImage *image = info[UIImagePickerControllerOriginalImage];\n    [picker dismissViewControllerAnimated:YES completion:nil];\n    [self cropWithImage:image];\n}\n\n#pragma mark - Croper Delegate\n- (void)imageCropViewControllerDidCancelCrop:(RSKImageCropViewController *)controller\n{\n    [self.navigationController popViewControllerAnimated:YES];    \n}\n\n- (void)imageCropViewController:(RSKImageCropViewController *)controller didCropImage:(UIImage *)croppedImage usingCropRect:(CGRect)cropRect rotationAngle:(CGFloat)rotationAngle\n{\n    ZYFaceEditController *editVC = [[ZYFaceEditController alloc] init];\n    editVC.image = croppedImage;\n    [self.navigationController pushViewController:editVC animated:YES];\n}\n\n#pragma mark - Croper DataSource\n- (CGRect)imageCropViewControllerCustomMaskRect:(RSKImageCropViewController *)controller\n{\n    CGSize maskSize;\n    if ([controller isPortraitInterfaceOrientation]) {\n//        maskSize = CGSizeMake(250, 250);\n        maskSize = CGSizeMake(180, 220);\n    } else {\n        maskSize = CGSizeMake(220, 220);\n    }\n\n    CGFloat viewWidth = CGRectGetWidth(controller.view.frame);\n    CGFloat viewHeight = CGRectGetHeight(controller.view.frame);\n\n    CGRect maskRect = CGRectMake((viewWidth - maskSize.width) * 0.5f,\n                                (viewHeight - maskSize.height) * 0.5f,\n                                maskSize.width,\n                                maskSize.height);\n\n    return maskRect;\n}\n\n// Returns a custom path for the mask.\n- (UIBezierPath *)imageCropViewControllerCustomMaskPath:(RSKImageCropViewController *)controller\n{\n    return [self cropPathWithRect:controller.maskRect];\n}\n\n// Returns a custom rect in which the image can be moved.\n- (CGRect)imageCropViewControllerCustomMovementRect:(RSKImageCropViewController *)controller\n{\n    // If the image is not rotated, then the movement rect coincides with the mask rect,\n    // otherwise it is calculated individually for each custom mask.\n//    return controller.maskRect;\n    return [self cropPathWithRect:controller.maskRect].bounds;\n}\n\n- (UIBezierPath *)cropPathWithRect:(CGRect)rect\n{\n    UIBezierPath *path = [UIBezierPath bezierPath];\n\n    /* \u6682\u65f6\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u88c1\u526a\u51fa\u6765\u6548\u679c\u4e0d\u5bf9\n    CGPoint top_point = (CGPoint){CGRectGetMidX(rect), CGRectGetMinY(rect) + 30};\n    CGPoint bottom_point = (CGPoint){CGRectGetMidX(rect), CGRectGetMaxY(rect)};\n    CGPoint left_ctrl_point = (CGPoint){CGRectGetMinX(rect), CGRectGetMinY(rect) + 20};\n    CGPoint right_ctrl_point = (CGPoint){CGRectGetMaxX(rect), CGRectGetMinY(rect) + 20};\n    CGPoint left_bottom_point = (CGPoint){CGRectGetMinX(rect) + 45, CGRectGetMaxY(rect)*3/4 + 20};\n    CGPoint right_bottom_point = (CGPoint){CGRectGetMaxX(rect) - 45, CGRectGetMaxY(rect)*3/4 + 20};\n    CGPoint bottom_ctrl_point = (CGPoint){CGRectGetMidX(rect), CGRectGetMaxY(rect) + 50};\n\n\n    [path moveToPoint:top_point];\n    [path addQuadCurveToPoint:right_bottom_point controlPoint:right_ctrl_point];\n    [path addQuadCurveToPoint:left_bottom_point controlPoint:bottom_ctrl_point];\n    [path addQuadCurveToPoint:top_point controlPoint:left_ctrl_point];\n//    [path addQuadCurveToPoint:left_bottom_point controlPoint:left_ctrl_point];\n//    [path addQuadCurveToPoint:top_point controlPoint:right_ctrl_point];\n    [path closePath];\n    */\n\n\n    path = [UIBezierPath bezierPathWithRoundedRect:rect cornerRadius:rect.size.width/2 - 15];\n\n    return path;\n}\n\n#pragma mark - CollectionView\n- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView\n{\n    return (int)ceil(self.dataArr.count/3.f);\n}\n\n- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section\n{\n    return 3;\n}\n\n- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath\n{\n    ZYHomeCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:NSStringFromClass([ZYHomeCell class]) forIndexPath:indexPath];\n    cell.imageName = [self.dataArr objectAtIndexSafely:indexPath.row + indexPath.section*3];\n    return cell;\n}\n\n- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath\n{\n    StoryMakeImageEditorViewController *editor = [[StoryMakeImageEditorViewController alloc] initWithImage:[UIImage imageNamed:[self.dataArr objectAtIndexSafely:indexPath.row + indexPath.section*3]]];\n    editor.pushNav = self.navigationController;\n    [self presentViewController:editor animated:YES completion:nil];\n}\n\n#pragma mark - Properties\n- (UICollectionView *)collectionView\n{\n    if (!_collectionView) {\n\n        CGFloat padding = 10.f;\n\n        UICollectionViewFlowLayout *flowLayout = [[UICollectionViewFlowLayout alloc] init];\n        flowLayout.scrollDirection = UICollectionViewScrollDirectionVertical;\n        flowLayout.itemSize = (CGSize){(kScreenWidth - padding*4)/3.f, (kScreenWidth - padding*4)/3.f};\n        flowLayout.sectionInset = UIEdgeInsetsMake(padding, 5, 0, 5);\n\n        _collectionView = [[UICollectionView alloc] initWithFrame:self.contentView.bounds collectionViewLayout:flowLayout];\n        _collectionView.autoresizingMask = UIViewAutoresizingFlexibleTopMargin|UIViewAutoresizingFlexibleBottomMargin|UIViewAutoresizingFlexibleLeftMargin|UIViewAutoresizingFlexibleRightMargin|UIViewAutoresizingFlexibleWidth|UIViewAutoresizingFlexibleHeight;\n        _collectionView.backgroundColor = [UIColor whiteColor];\n        _collectionView.delegate = self;\n        _collectionView.dataSource = self;\n        [self.contentView addSubview:_collectionView];\n    }\n    return _collectionView;\n}\n\n- (NSArray *)dataArr\n{\n    if (!_dataArr) {\n        NSMutableArray *nameArr = [[NSMutableArray alloc] initWithCapacity:0];\n        for (int i=1; i<=31; i++) {\n            NSString *name = [NSString stringWithFormat:@\"diy_resource%d.jpeg\", i];\n            [nameArr addObject:name];\n        }\n        _dataArr = [NSArray arrayWithArray:nameArr];\n    }\n    return _dataArr;\n}\n\n@end\n\n. @ruslanskorb this is the code i use before. \n\n. Thanks very much.I will try it.@ruslanskorb . It's still wrong when i not rotate the image.\nI set a breakpoint in code.It's just return controller.maskRect and still clip wrong area.\n\n\ncode in else doesn't excute~\n- (CGRect)imageCropViewControllerCustomMovementRect:(RSKImageCropViewController *)controller\n{\n    if (controller.rotationAngle == 0) {\n        return controller.maskRect;\n    } else {\n        CGRect cropPathBounds = [self cropPathWithRect:controller.maskRect].bounds;\n\n        CGAffineTransform rotationTransform = CGAffineTransformMakeRotation(controller.rotationAngle);\n\n        CGSize movementRectSize = CGRectApplyAffineTransform(cropPathBounds, rotationTransform).size;\n        CGPoint movementRectCenter = CGPointMake(CGRectGetMidX(cropPathBounds), CGRectGetMidY(cropPathBounds));\n\n        CGRect movementRect = CGRectMake(movementRectCenter.x - movementRectSize.width / 2.0,\n                                        movementRectCenter.y - movementRectSize.height / 2.0,\n                                        movementRectSize.width,\n                                        movementRectSize.height);\n\n        return movementRect;\n    }\n}\n\n. I got this.Using an imageView to show this image, without any other process\n\n\n. \n\n. ",
    "zinoviev": "@ruslanskorb Thanks for quick response. I've tried, but I think result wasn't square sized. Where is good chance I did something wrong and if you say it's what I looking for I will try once more, maybe without RN wrapper lib for clear experiment. Is where the way to setup background color for this case?. @ruslanskorb See sample at https://github.com/ivpusic/react-native-image-crop-picker/issues/890\nIf we shrink original reactangular image to fit in square we need to fill remaining space with some color(or no-color) In my example it is grey. I'm wondering if we can setup this color. @ruslanskorb Actually yes, thank you!. ",
    "A-Hing": "Thx. "
}